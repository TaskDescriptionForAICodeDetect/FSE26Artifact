[
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<bits/stdc++.h>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k,x;\n  cin >> n;\n  while(n--){\n    x=0;\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    while(con(s2)!=0) {\n      x+=con(s2);\n      //cout << x << endl;\n      cin >> s2;\n    }\n    s3=s2;\n    if(s1[0]=='0'){\n      k=1; \n      j=0;\n      while(s1[k]!='.') {\n        k++;\n        j++;\n      }\n      k++;\n      while(s1[k]=='0') {\n        k++;\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << x-(k-1)+j;\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          //cout << k<<endl;\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f&&k<s1.size()) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++)cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      //cout << (int)x+(int)(s1.size()-1)  << endl;\n      if(f) cout << \" * 10^\" << (int)x+(int)(s1.size()-1);\n      else cout << \" * 10^\" << x+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <map>\n#include <bitset>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n\nusing namespace std;\n\nint main(){\n\tmap<string, int> table;\n\ttable[\"yotta\"] = 24; \n\ttable[\"zetta\"] = 21;\n\ttable[\"exa\"] = 18;\n\ttable[\"peta\"] = 15;\n\ttable[\"tera\"] = 12;\t\n\ttable[\"giga\"] = 9;\n\ttable[\"mega\"] = 6;\n\ttable[\"kilo\"] = 3;\n\ttable[\"hecto\"] = 2;\n\ttable[\"deca\"] = 1;\n\ttable[\"deci\"] = -1;\n\ttable[\"centi\"] = -2;\n\ttable[\"milli\"] = -3;\n\ttable[\"micro\"] = -6;\n\ttable[\"nano\"] = -9;\n\ttable[\"pico\"] = -12;\n\ttable[\"femto\"] = -15;\n\ttable[\"ato\"] = -18;\n\ttable[\"zepto\"] = -21;\n\ttable[\"yocto\"] = -24;\n\tint n = 0;\n\tcin >> n;\n\twhile(n--){\n\t\tdouble num;\n\t\tstring settou, tani;\n\t\tcin >> num >> settou;\n\t\tint tmp = 0;\n\t\tif(table.count(settou)){\n\t\t\ttmp = table[settou];\n\t\t\tcin >> tani;\n\t\t}\n\t\telse tani = settou;\n\t\twhile(num>=0&&num<1){\n\t\t\tnum *= 10;\n\t\t\ttmp--;\n\t\t}\n\t\twhile(num>=10){\n\t\t\tnum /= 10.0;\n\t\t\ttmp++;\n\t\t}\n\t\tcout << num << \" * 10^\" << tmp << \" \" << tani << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> m;\nstring s,t,u;\nint n,len;\nvoid init();\n\nint getx(){\n  int res=0,f=0;\n  for(int i=0;i<len;i++){\n    if('1'<=s[i]&&s[i]<='9')f=1;\n    if(f&&s[i]!='.')res++;\n  }\n  return res;\n}\n\nvoid solve(){\n  int p=-1,x=getx(),a;\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  if(p==-1)s+='.',p=len++;\n  if(m.find(t)!=m.end()){\n    a=m[t]; \n    for(int i=0;i<abs(a);i++)\n      if(a>0)\n\tif(p==len-1)s[len-1]='0',s+='.',p=len++;\n\telse swap(s[p],s[p+1]),p++;\n      else\n\tif(p==0)s[0]='0',s='.'+s,len++;\n\telse swap(s[p],s[p-1]),p--;\n  }\n  int idx=0,ansidx;\n  for(int i=0;i<len;i++)\n    if('1'<=s[i]&&s[i]<='9'){\n      idx=i;\n      break;\n    }\n  ansidx=p-idx-1;\n  if(p<idx)ansidx++;\n  int cnt=0,z=0;\n  for(int i=0;i<len;i++){\n    if(s[i]=='.')continue;\n    if(s[i]!='0'){\n      z=i;\n      break;\n    }\n  }\n  while(cnt<x){\n    if(cnt==1)cout<<'.';\n    if(s[z++]!='.')cout<<s[z-1],cnt++;\n  }\n  cout<<\" * 10^\"<<ansidx<<' '<<u<<endl;\n}\n\nint main(){\n  init();\n  cin>>n;\n  while(n--){\n    cin>>s>>t;\n    len=s.size();\n    if(m.find(t)!=m.end()){\n      cin>>u;\n    }else u=t;\n    solve();\n  }\n  return 0;\n}\n\nvoid init(){\n  m[\"yotta\"]=24; m[\"zetta\"]=21;\n  m[\"exa\"]=18; m[\"peta\"]=15;\n  m[\"tera\"]=12; m[\"giga\"]=9;\n  m[\"mega\"]=6; m[\"kilo\"]=3;\n  m[\"hecto\"]=2; m[\"deca\"]=1;\n  m[\"deci\"]=-1; m[\"centi\"]=-2;\n  m[\"milli\"]=-3; m[\"micro\"]=-6;\n  m[\"nano\"]=-9; m[\"pico\"]=-12;\n  m[\"femto\"]=-15; m[\"ato\"]=-18;\n  m[\"zepto\"]=-21; m[\"yocto\"]=-24;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nchar line[10000];\nchar str1[10000];\nchar str2[10000];\nchar str3[10000];\nchar ans[10000];\n\nint main() {\n  map<string, int> mapto;\n  mapto[\"yotta\"] = 24;\n  mapto[\"zetta\"] = 21;\n  mapto[\"exa\"] = 18;\n  mapto[\"peta\"] = 15;\n  mapto[\"tera\"] = 12;\n  mapto[\"giga\"] = 9;\n  mapto[\"mega\"] = 6;\n  mapto[\"kilo\"] = 3;\n  mapto[\"hecto\"] = 2;\n  mapto[\"deca\"] = 1;\n  mapto[\"deci\"] = -1;\n  mapto[\"centi\"] = -2;\n  mapto[\"milli\"] = -3;\n  mapto[\"micro\"] = -6;\n  mapto[\"nano\"] = -9;\n  mapto[\"pico\"] = -12;\n  mapto[\"femto\"] = -15;\n  mapto[\"ato\"] = -18;\n  mapto[\"zepto\"] = -21;\n  mapto[\"yocto\"] = -24;\n\n  int test;\n  scanf(\"%d \", &test);\n  while (test--) {\n    int base = 0;\n    fgets(line, 9999, stdin);\n    int v = sscanf(line, \"%s %s %s\", str1, str2, str3);\n    if (v == 3) {\n      swap(str2, str3);\n      assert(mapto.count(str3));\n      base = mapto[str3];\n    }\n    int len = strlen(str1);\n    int dir = 1;\n    if (str1[0] == '0') { dir = -1; }\n    else { base--; }\n    bool end = false;\n    int index = 0;\n    REP(i, len) {\n      if (dir == 1) {\n        if (str1[i] == '.') { end = true; continue; }\n        if (!end) { base += dir; }\n        if (index == 1) {\n          ans[index++] = '.';\n        }\n        ans[index++] = str1[i];\n      } else {\n        if (str1[i] == '.') { continue; }\n        if (str1[i] != '0') { end = true; }\n        if (!end) { base += dir; }\n        if (end) {\n          if (index == 1) {\n            ans[index++] = '.';\n          }\n          ans[index++] = str1[i];\n        }\n      }\n    }\n    ans[index] = 0;\n    printf(\"%s * 10^%d %s\\n\", ans, base, str2);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  int n,t[20];\n  for(int i=0;i<20;i++)t[i]=24-i*3;\n  string p[20]={\n    \"yotta\",\n    \"zetta\",\n    \"exa\",\n    \"peta\",\n    \"tera\",\n    \"giga\",\n    \"mega\",\n    \"kilo\",\n    \"hecto\",\n    \"deca\",\n    \"deci\",\n    \"centi\",\n    \"milli\",\n    \"micro\",\n    \"nano\",\n    \"pico\",\n    \"femto\",\n    \"ato\",\n    \"zepto\",\n    \"yocto\"\n  };\n  \n  cin>>n;\n  while(n--){\n    string a,b,c;\n    int cn=-1;\n    cin>>a>>b>>c;\n    if(a[0]=='0'){\n      int i=0;\n      while(a[i++]!='0'&&i<a.size())cn--;\n      for(int j=i+1;j<a.size();j++){\n\tif(j==i+2)cout<<\".\";\n\tcout<<a[j];\n      }\n    }\n    else{\n      int i=0;\n      while(a[i++]!='.'&&i<a.size())cn++;\n      for(int j=0;j<a.size();j++){\n\tif(j==i-1)continue;\n\tif(j==1)cout<<\".\";\n\tcout<<a[j];\n      }\n    }\n    for(int i=0;i<20;i++)if(p[i]==b)cn+=t[i];\n    cout<<\" * 10^\"<<cn<<\" \"<<c<<endl;\n\t\n  }    \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k;\n  cin >> n;\n  while(n--){\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    if(con(s2)!=0) cin >> s3;\n    else s3=s2;\n    if(s1[0]=='0'){\n      k=2;\n      while(s1[k]=='0') {\n        k++;\n        //cout << k << endl;\n        if(k>=s1.size()-1) {\n          break;\n        }\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << con(s2)-(k-1);\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      if(f) cout << \" * 10^\" << con(s2)+s1.size()-1;\n      else cout << \" * 10^\" << con(s2)+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n  \nusing namespace std;\n  \ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P> PP;\n  \nstatic const double EPS = 1e-8;\n  \nstatic const int tx[] = {0,1,0,-1};\nstatic const int ty[] = {-1,0,1,0};\n\nvector<string> split(string delim,string str){\n  vector<string> res;\n  str += delim;\n  for(int i=0;i<str.size();i++){\n    for(int j=1;i+j<=str.size();j++){\n      if(str.substr(i,j).find(delim) != string::npos){\n        if(str.substr(i,j-1).size() >0 ) res.push_back(str.substr(i,j-1));\n        i+=j-1;\n        break;\n      }\n    }\n  }\n\n  return res;\n}\n\nconst static char unit_prefix_name[][12] = {\n  \"yotta\",\n  \"zetta\",\n  \"exa\",\n  \"peta\",\n  \"tera\",\n  \"giga\",\n  \"mega\",\n  \"kilo\",\n  \"hecto\",\n  \"deca\",\n  \"deci\",\n  \"centi\",\n  \"milli\",\n  \"micro\",\n  \"nano\",\n  \"pico\",\n  \"femto\",\n  \"ato\",\n  \"zepto\",\n  \"yocto\",\n};\n\nconst static int unit_prefix_powers[] = {\n  24,\n  21,\n  18,\n  15,\n  12,\n  9,\n  6,\n  3,\n  2,\n  1,\n  -1,\n  -2,\n  -3,\n  -6,\n  -9,\n  -12,\n  -15,\n  -18,\n  -21,\n  -24\n};\n\nstring normalize(const string& original){\n  bool flag = false;\n  string res = \"\";\n  for(int i = 0; i < original.size(); i++){\n    if(flag && original[i] != '.'){\n      res += original[i];\n      continue;\n    }\n    if(original[i] != '0' && original[i] != '.'){\n      flag = true;\n      res += original[i];\n      if(i + 1 < original.size()){\n        res += \".\";\n      }\n    }\n  }\n  return res;\n}\n\nint compute_power(const string& original,const string& prefix){\n  int power = 0;\n  for(int i = 0; i < sizeof(unit_prefix_name)/(sizeof(char)*12); i++){\n    if(string(unit_prefix_name[i]) == prefix){\n      power = unit_prefix_powers[i];\n    }\n  }\n\n  int dot_pos = original.size();\n  for(int i = 0; i < original.size(); i++){\n    if(original[i] == '.'){\n      dot_pos = i;\n      break;\n    }\n  }\n  int first_number_pos = 0;\n  for(int i = 0; i < original.size(); i++){\n    if(original[i] != '.' && original[i] != '0'){\n      first_number_pos = i;\n      break;\n    }\n  }\n  return (dot_pos - first_number_pos - (dot_pos > first_number_pos ? 1 : 0)) + power;\n}\n\nvoid conv(const string& original,const string& prefix,const string& unit){\n  int power = compute_power(original,prefix);\n  printf(\"%s * 10^%d %s\\n\",normalize(original).c_str(),power,unit.c_str());\n}\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    int total_test_cases = atoi(str.c_str());\n    for(int test_i = 0; test_i < total_test_cases; test_i++){\n      string line;\n      getline(cin,line);\n      vector<string> elements = split(\" \",line);\n      if(elements.size() == 3){\n        conv(elements[0],elements[1],elements[2]);\n      }\n      else{\n        conv(elements[0],\"\",elements[1]);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\nusing namespace std;\n\n\nvector<string> split(string v,char del){\n\tvector<string> strs;\n\tint head=0;\n\tfor(int j = 0; j < v.size(); j++){\n\t\tif(v[j]==del){\n\t\t\tstrs.push_back(v.substr(head,j-head));\n\t\t\thead=j+1;\n\t\t}\n\t\telse if(j==v.size()-1){\n\t\t\tstrs.push_back(v.substr(head,j-head+1));\n\t\t}\n\t}\n\treturn strs;\n}\n\n\nint main(){\n    map<string,int> dict;\n    dict[\"yotta\"]=24;\n    dict[\"zetta\"]=21;\n    dict[\"exa\"]=18;\n    dict[\"peta\"]=15;\n    dict[\"tera\"]=12;\n    dict[\"giga\"]=9;\n    dict[\"mega\"]=6;\n    dict[\"kilo\"]=3;\n    dict[\"hecto\"]=2;\n    dict[\"deca\"]=1;\n    dict[\"deci\"]=-1;\n    dict[\"centi\"]=-2;\n    dict[\"milli\"]=-3;\n    dict[\"micro\"]=-6;\n    dict[\"nano\"]=-9;\n    dict[\"pico\"]=-12;\n    dict[\"femto\"]=-15;\n    dict[\"ato\"]=-18;\n    dict[\"zepto\"]=-21;\n    dict[\"yocto\"]=-24;\n    int n;\n    cin>>n;\n    string str;\n    getline(cin,str);\n    while(n--){\n        string num;\n        string pref;\n        string tani;\n        //cin>>num>>pref>>tani;\n\n        getline(cin,str);\n        vector<string> strs=split(str,' ');\n        num=strs[0];\n        int sum=0;\n\n        int initNotZero=-1;\n        int commma=-1;\n        // êÔÅÉ0ÈOªoÄ­éêÆAcommaÌÊuðT·\n        for(int i = 0; i < num.size(); i++){\n            if(num[i]=='.')\n                commma=i;\n            else if(num[i]!='0'&&initNotZero==-1)\n                initNotZero=i;\n        }\n        if(initNotZero==0){\n            int diff;\n            if(commma!=-1){\n                diff=commma-1;\n                num=num.substr(0,commma)+num.substr(commma+1);\n            }\n            else\n                diff=num.size()-1;\n            num=num.substr(0,1)+'.'+num.substr(1);\n            sum+=diff;\n        }\n        else{\n            int diff=initNotZero-commma;\n            num=num.substr(initNotZero);\n            num=num.substr(0,1)+'.'+num.substr(1);\n            sum-=diff;\n        }\n        if(num[num.size()-1]=='.'){\n            num=num.substr(0,num.size()-1);\n        }\n        if(strs.size()==2){\n            tani=strs[1];\n            cout<<num<<\" * \"<<\"10^\"<<sum<<\" \"<<tani<<endl;\n        }\n        else{\n            pref=strs[1];tani=strs[2];\n            int t=dict[pref];\n            sum+=t;\n            cout<<num<<\" * \"<<\"10^\"<<sum<<\" \"<<tani<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//17\n#include<iostream>\n#include<algorithm>\n#include<string>\n\nusing namespace std;\n\nint main(){\n  int n;\n  cin>>n;\n  while(n--){\n    string n,s,u;\n    cin>>n>>s;\n    int e;\n    string us[]={\"yotta\",\"zetta\",\"exa\",\"peta\",\"tera\",\"giga\",\"mega\",\"kilo\",\"hecto\",\"deca\",\"deci\",\"centi\",\"milli\",\"micro\",\"nano\",\"pico\",\"femto\",\"ato\",\"zepto\",\"yocto\"};\n    int x=find(us,us+20,s)-us;\n    if(x==20){\n      u=s;\n      e=0;\n    }else{\n      int b[]={24,21,18,15,12,9,6,3,2,1,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24};\n      e=b[x];\n      cin>>u;\n    }\n    if(n.find('.')==string::npos){\n      n+='.';\n    }\n    if(n[1]=='.'){\n      while(n[0]=='0'){\n\tn.erase(0,1);\n\tswap(n[0],n[1]);\n\te--;\n      }\n      if(n.end()[-1]=='.'){\n\tn.erase(n.size()-1);\n      }\n    }else{\n      while(n[1]!='.'){\n\tint p=n.find('.');\n\tswap(n[p],n[p-1]);\n\te++;\n      }\n    }\n    cout<<n<<\" * 10^\"<<e<<' '<<u<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k,x;\n  cin >> n;\n  while(n--){\n    x=0;\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    while(con(s2)!=0) {\n      x+=con(s2);\n      cin >> s2;\n    }\n    s3=s2;\n    if(s1[0]=='0'){\n      k=2;\n      while(s1[k]=='0') {\n        k++;\n        //cout << k << endl;\n        if(k>=s1.size()-1) {\n          break;\n        }\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << x-(k-1);\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      if(f) cout << \" * 10^\" << x+s1.size()-1;\n      else cout << \" * 10^\" << x+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nmap<string, int> M;\n\nvoid input(string &s, string &a, string &b, string &c, string &d){\n  int i = 0;\n  while(s[i] != '.' && s[i] != ' ') a += s[i++];\n  if(s[i] == '.'){\n    ++i;\n    while(s[i] != ' ') b += s[i++];\n  }\n  ++i;\n  while(i < s.length() && s[i] != ' ') c += s[i++];\n  if(i < s.length() && s[i] == ' '){\n    ++i;\n    while(i < s.length()) d += s[i++];\n  }\n  if(d == \"\"){ d = c; c = \"\"; }\n}\n\nvoid shift_left(string &a, string &b){\n  if(b == \"\") a += \"0\";\n  else{\n    a += b.substr(0, 1);\n    b = b.substr(1);\n  }\n  while(a.length() > 0 && a[0] == '0') a = a.substr(1);\n}\n\nvoid shift_right(string &a, string &b){\n  if(a == \"\") b = \"0\" + b;\n  else{\n    b = a.substr(a.length() - 1) + b;\n    a = a.substr(0, a.length() - 1);\n  }\n}\n\nint check(string a, string b){\n  int res = a.length() + b.length();\n  bool f = false;\n  for(int i = 0; i < a.length(); ++i, --res) if(a[i] != '0') { f = true; break; }\n  if(!f) for(int i = 0; i < b.length(); ++i, --res) if(b[i] != '0') { f = true; break; }\n  return res;\n}\n\nint main() {\n  M[\"yotta\"] = 24; M[\"zetta\"] = 21; M[\"exa\"] = 18; M[\"peta\"] = 15; M[\"tera\"] = 12; M[\"giga\"] = 9; M[\"mega\"] = 6; M[\"kilo\"] = 3; M[\"hecto\"] = 2; M[\"deca\"] = 1;\n  M[\"deci\"] = -1; M[\"centi\"] = -2; M[\"milli\"] = -3; M[\"micro\"] = -6; M[\"nano\"] = -9; M[\"pico\"] = -12; M[\"femto\"] = -15; M[\"ato\"] = -18; M[\"zepto\"] = -21; M[\"yocto\"] = -24;\n  int T; cin >>T;\n  string s, a, b, c, d;\n  getline(cin, s);\n  while(T--){\n    a = b = c = d = \"\";\n    getline(cin, s);\n    input(s, a, b, c, d);\n    int n = check(a, b);\n    if(c != \"\"){\n      REP(i, abs(M[c])){\n        if(M[c] >= 0) shift_left(a, b);\n        else shift_right(a, b);\n      }\n    }\n    while(a.length() > 0 && a[0] == '0') a = a.substr(1);\n    int ans = 0;\n    while(a.length() != 1){\n      if(a.length() == 0) { ans--; shift_left(a, b); }\n      else { ans++; shift_right(a, b); }\n    }\n    while(n != check(a, b)) b = b.substr(0, (int)b.length() - 1);\n    cout <<a <<(b == \"\" ? \"\" : \".\") <<b <<\" * 10^\" <<ans <<\" \" <<d <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <iostream>\n#include <unordered_map>\nusing namespace std;\n\nunordered_map<string, int> converter{\n\t{\"yotta\", 24},\n\t{\"zetta\", 21},\n\t{\"exa\", 18},\n\t{\"peta\", 15},\n\t{\"tera\", 12},\n\t{\"giga\", 9},\n\t{\"mega\", 6},\n\t{\"kilo\", 3},\n\t{\"hecto\", 2},\n\t{\"deca\", 1},\n\t{\"deci\", -1},\n\t{\"centi\", -2},\n\t{\"milli\", -3},\n\t{\"micro\", -6},\n\t{\"nano\", -9},\n\t{\"pico\", -12},\n\t{\"femto\", -15},\n\t{\"ato\", -18},\n\t{\"zepto\", -21},\n\t{\"yocto\", -24}};\n\ninline string next_string() {\n\tstring res;\n\tcin >> res;\n\treturn res;\n}\n\nvoid solve() {\n\tstring value = next_string(), prefix = next_string(), unit;\n\tint exp;\n\tif(converter.count(prefix)) {\n\t\texp = converter[prefix];\n\t\tunit = next_string();\n\t}\n\telse {\n\t\texp = 0;\n\t\tunit = prefix;\n\t}\n\n\tif(value[0] == '0') {\n\t\tfor(unsigned i = 2; i < value.size(); ++i) {\n\t\t\tif('1' <= value[i] && value[i] <= '9') {\n\t\t\t\texp -= i - 1;\n\t\t\t\tvalue = value[i] + string(1, '.') + value.substr(i + 1);\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tif(value.find('.') == string::npos) value += '.';\n\t\tfor(unsigned i = 0; i < value.size(); ++i) {\n\t\t\tif(value[i] == '.') {\n\t\t\t\texp += i - 1;\n\t\t\t\tvalue = value[0] + string(1, '.') + value.substr(1, i - 1) + value.substr(i + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tif(value.back() == '.') value = value.substr(0, value.size() - 1);\n\tcout << value << \" * 10^\" << exp << \" \" << unit << endl;\n}\n\nint main() {\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\n\tint t;\n\tcin >> t;\n\twhile(t--) solve();\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k,x;\n  cin >> n;\n  while(n--){\n    x=0;\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    while(con(s2)!=0) {\n      x+=con(s2);\n      //cout << x << endl;\n      cin >> s2;\n    }\n    s3=s2;\n    if(s1[0]=='0'){\n      k=1; \n      j=0;\n      while(s1[k]!='.') {\n        k++;\n        j++;\n      }\n      k++;\n      while(s1[k]=='0') {\n        k++;\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << x-(k-1)+j;\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      //cout << (int)x+(int)(s1.size()-1)  << endl;\n      if(f) cout << \" * 10^\" << (int)x+(int)(s1.size()-1);\n      else cout << \" * 10^\" << x+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nchar line[10000];\nchar str1[10000];\nchar str2[10000];\nchar str3[10000];\nchar temp[10000];\nchar ans[10000];\n\nint main() {\n  map<string, int> mapto;\n  mapto[\"yotta\"] = 24;\n  mapto[\"zetta\"] = 21;\n  mapto[\"exa\"] = 18;\n  mapto[\"peta\"] = 15;\n  mapto[\"tera\"] = 12;\n  mapto[\"giga\"] = 9;\n  mapto[\"mega\"] = 6;\n  mapto[\"kilo\"] = 3;\n  mapto[\"hecto\"] = 2;\n  mapto[\"deca\"] = 1;\n  mapto[\"deci\"] = -1;\n  mapto[\"centi\"] = -2;\n  mapto[\"milli\"] = -3;\n  mapto[\"micro\"] = -6;\n  mapto[\"nano\"] = -9;\n  mapto[\"pico\"] = -12;\n  mapto[\"femto\"] = -15;\n  mapto[\"ato\"] = -18;\n  mapto[\"zepto\"] = -21;\n  mapto[\"yocto\"] = -24;\n\n  int test;\n  scanf(\"%d \", &test);\n  while (test--) {\n    int base = 0;\n    fgets(line, 9999, stdin);\n    int v = sscanf(line, \"%s %s %s\", str1, str2, str3);\n    if (v == 3) {\n      memcpy(temp, str3, sizeof(temp));\n      memcpy(str3, str2, sizeof(temp));\n      memcpy(str2, temp, sizeof(temp));\n      assert(mapto.count(str3));\n      base = mapto[str3];\n    }\n    int len = strlen(str1);\n    int dir = 1;\n    if (str1[0] == '0') { dir = -1; }\n    else { base--; }\n    bool end = false;\n    int index = 0;\n    REP(i, len) {\n      if (dir == 1) {\n        if (str1[i] == '.') { end = true; continue; }\n        if (!end) { base += dir; }\n        if (index == 1) {\n          ans[index++] = '.';\n        }\n        ans[index++] = str1[i];\n      } else {\n        if (str1[i] == '.') { continue; }\n        if (str1[i] != '0') { end = true; }\n        if (!end) { base += dir; }\n        if (end) {\n          if (index == 1) {\n            ans[index++] = '.';\n          }\n          ans[index++] = str1[i];\n        }\n      }\n    }\n    ans[index] = 0;\n    printf(\"%s * 10^%d %s\\n\", ans, base, str2);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<map>\n#include<algorithm>\n\nusing namespace std;\n\nvoid MakePrefix(map<string, int>*);\nvoid FixNumber(string&, int&);\nbool NotZero(const char&);\n\nint main(){\n  int i, n, multiplier;\n  string number, unit;\n  map<string, int> prefix;\n  map<string, int>::iterator iter;\n\n  MakePrefix(&prefix);\n  cin >> n;\n\n  for(i=0; i<n; ++i){\n    cin >> number >> unit;\n    iter = prefix.find(unit);\n\n    if(iter == prefix.end()){\n      multiplier = 0;\n    }else{\n      multiplier = iter->second;\n      cin >> unit;\n    }\n\n    FixNumber(number, multiplier);\n    cout << number << \" * 10^\" << multiplier << \" \" << unit << endl;\n  }\n  return 0;\n}\n\nvoid MakePrefix(map<string, int>* prefix){\n  prefix->insert(make_pair(\"yotta\", 24));\n  prefix->insert(make_pair(\"zetta\", 21));\n  prefix->insert(make_pair(\"exa\", 18));\n  prefix->insert(make_pair(\"peta\", 15));\n  prefix->insert(make_pair(\"tera\", 12));\n  prefix->insert(make_pair(\"giga\", 9));\n  prefix->insert(make_pair(\"mega\", 6));\n  prefix->insert(make_pair(\"kilo\", 3));\n  prefix->insert(make_pair(\"hecto\", 2));\n  prefix->insert(make_pair(\"deca\", 1));\n  prefix->insert(make_pair(\"deci\", -1));\n  prefix->insert(make_pair(\"centi\", -2));\n  prefix->insert(make_pair(\"milli\", -3));\n  prefix->insert(make_pair(\"micro\", -6));\n  prefix->insert(make_pair(\"nano\", -9));\n  prefix->insert(make_pair(\"pico\", -12));\n  prefix->insert(make_pair(\"femto\", -15));\n  prefix->insert(make_pair(\"ato\", -18));\n  prefix->insert(make_pair(\"zepto\", -21));\n  prefix->insert(make_pair(\"yocto\", -24));\n}\n\nvoid FixNumber(string& num, int& n){\n  string::iterator i;\n  i = find(num.begin(), num.end(), '.');\n\n  if(i == num.end()){\n    n += num.size()-1;\n    if(num.size() != 1) num.insert(num.begin()+1, '.');\n  }else if(num[0] == '0'){\n    i = find_if(num.begin()+2, num.end(), NotZero);\n    n -= (i - num.begin() -1);\n    num.erase(num.begin(), i);\n    if(num.size() != 1) num.insert(num.begin()+1, '.');\n  }else{\n    n += (i - num.begin() -1);\n    num.erase(i);\n    num.insert(num.begin()+1, '.');\n  }\n}\n\nbool NotZero(const char& c){\n  if(c == '0') return false;\n  else return true;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint Trans(string s){\n\n  if(s==\"yotta\")return 24;\n  else if(s==\"zetta\")return 21;\n  else if(s==\"exa\")return 18;\n  else if(s==\"peta\")return 15;\n  else if(s==\"tera\")return 12;\n  else if(s==\"giga\")return 9;\n  else if(s==\"mega\")return 6;\n  else if(s==\"kilo\")return 3;\n  else if(s==\"hecto\")return 2;\n  else if(s==\"deca\")return 1;\n  else if(s==\"deci\")return -1;\n  else if(s==\"centi\")return -2;\n  else if(s==\"milli\")return -3;\n  else if(s==\"micro\")return -6;\n  else if(s==\"nano\")return -9;\n  else if(s==\"pico\")return -12;\n  else if(s==\"femto\")return -15;\n  else if(s==\"ato\")return -18;\n  else if(s==\"zepto\")return -21;\n  else if(s==\"yocto\")return -24;\n  \n  else return 0;  \n\n}\n\nint main(){\n\n  string x,head,tanni;\n  int keta,ad,sisu;\n  int indx;\n  int n;\n\n  cin >> n;\n\n  for(int i=0; i<n; i++){\n\n\n    cin >> x >> head;\n    ad = Trans(head);\n    if(ad==0){ tanni=head; }\n    else{ cin>>tanni; }\n\n    keta=0;\n    sisu=x.size()-1;\n    indx = -1;\n    bool flg=false;\n\n\n    for(int j=0; j<(int)x.size(); j++){\n\n      if(x[j]=='.'){ if(indx!=-1)sisu=j-1;else sisu = j;}\n      \n      if(x[j]!='0' && x[j]!='.' && flg==false){flg=true; indx=j;}\n\n      if(flg && x[j]!='.'){\n\tketa++;\n      }\n\n    }\n\n    //  cout << \"test \" << sisu<<' ' << keta<<' ' << ad << endl;\n\n\n    //Output\n    cout << x[indx];\n    if(keta >= 2){\n      cout << '.';\n\n      for(int j=indx+1; j<(int)x.size(); j++){\n\tif(x[j]!='.')\n\t  cout << x[j];\n      }\n    }\n\n    cout << \" * 10^\";\n    // cout<<endl;\n    //cout<<sisu-indx<<\" \"<<ad<<endl;\n\n    cout << sisu-indx+ad << ' ' << tanni << endl;\n\n  }\n\n\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\nusing namespace std;\nmain(){\n  map<string,int> M;\n  M[\"yotta\"]= 24;\n  M[\"zetta\"]= 21;\n  M[\"exa\"]= 18;\n  M[\"peta\"]= 15;\n  M[\"tera\"]= 12;\n  M[\"giga\"]= 9;\n  M[\"mega\"]= 6;\n  M[\"kilo\"]= 3;\n  M[\"hecto\"]= 2;\n  M[\"deca\"]= 1;\n  M[\"deci\"]= -1;\n  M[\"centi\"]= -2;\n  M[\"milli\"]= -3;\n  M[\"micro\"]= -6;\n  M[\"nano\"]= -9;\n  M[\"pico\"]= -12;\n  M[\"femto\"]= -15;\n  M[\"ato\"]= -18;\n  M[\"zepto\"]= -21;\n  M[\"yocto\"]= -24; \n  int te;\n  cin>>te;\n  while(te--){\n  string num,param,unit;\n  while(cin>>num>>param){    \n    int p;\n    if ( M[param] == 0){\n      unit = param;\n      p=0;\n    }else {\n      cin>>unit;\n      p = M[param];\n    }\n    if ( num[0] == '0'){\n      //point move right point--\n      int i=0;\n      for(i=2;;i++){\n\tp--;\n\tif ( num[i] != '0' && num[i] != '.')break;\n      }\n      num=num.substr(i);\n      if ( num.size() == 1){\n\tcout << num[0]<<\n\t  \" * 10^\" << p << \" \" << unit<<endl;\n      }else {\n\tcout << num[0]<< \".\" << num.substr(1) <<\n\t  \" * 10^\" << p << \" \" << unit<<endl;\n      }\n\n    }else if ( find(num.begin(),num.end(),'.') != num.end() ){\n      //point move left point++\n      int i=0;\n      int itr=0;\n      while(num[itr]!='.')itr++;\n      p+=(itr-1);\n      num=num.erase(itr,1);\n      cout << num[0]<< \".\" << num.substr(1) <<\n\t\" * 10^\" << p << \" \" << unit<<endl;\n    }else {\n      p+=num.size()-1;\n      cout << num[0]<< \".\" << num.substr(1) <<\n\t\" * 10^\" << p << \" \" << unit<<endl;\n    }\n    unit.clear();\n  }\n  return false;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k;\n  cin >> n;\n  while(n--){\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    if(con(s2)!=0) cin >> s3;\n    else s3=s2;\n    if(s1[0]=='0'){\n      k=2;\n      while(s1[k]=='0') {\n        k++;\n        //cout << k << endl;\n        if(k>=s1.size()-1) {\n          break;\n        }\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << con(s2)-(k-1);\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) f=true;\n      else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      if(f) cout << \" * 10^\" << con(s2)+s1.size()-1;\n      else cout << \" * 10^\" << con(s2)+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <functional>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <vector>\n#include <list>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <bitset>\n#include <climits>\n\n#define all(c) (c).begin(), (c).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define pb(e) push_back(e)\n#define mp(a, b) make_pair(a, b)\n#define fr first\n#define sc second\n\nconst int INF=100000000;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nusing namespace std;\ntypedef pair<int ,int > P;\ntypedef long long ll;\n\nmap<string,int> prefix;\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >>setprecision(30) >> t;\n}\n\nvoid add_zero(string &s) {\n    string zero=\"\";\n    rep(i,30) zero+=\"0\";\n    s=zero+s+zero;\n}\n\nvoid split(string line,string &s1,string &s2,string &s3) {\n    int i;\n    for(i=0;i<line.size();i++) {\n        if(line[i]==' ') break;\n        s1+=line[i];\n    }\n    i++;\n    for(;i<line.size();i++) {\n        if(line[i]==' ') break;\n        if(line[i]=='\\n') break;\n        s2+=line[i];\n    }\n    if(i!=line.size()-1) {\n        i++;\n        for(;i<line.size();i++) {\n            if(line[i]=='\\n') break;\n            s3+=line[i];\n        }\n    }\n}\n\nvoid solve() {\n    int zero_cnt=0;\n    string line;\n    getline(cin,line);\n    string s1,s2,s3;\n    split(line,s1,s2,s3);\n    if(s3==\"\") {\n        s3=s2;\n        s2=\"\";\n    }\n\n    if(s1.find('.')==-1) s1+=\".\";\n    else {\n        for(int i=s1.size()-1;i>=0;i--) {\n            if(s1[i]!='0') break;\n            zero_cnt++;\n        }\n        while(s1[s1.size()-1]=='0') s1.erase(s1.size()-1,1);\n    }\n    int cnt=0;\n\n    int pos=s1.find('.');\n    if(s1[0]=='0') {\n        for(int i=pos;i<s1.size()-1;i++) {\n            cnt--;\n            swap(s1[i],s1[i+1]);\n        }\n    }\n    else {\n        for(int i=pos;i>=2;i--) {\n            cnt++;\n            swap(s1[i],s1[i-1]);\n        }\n    }\n    while(s1[0]=='0') s1.erase(0,1);\n    if(s1[s1.size()-1]=='.') {\n        if(s1.size()>zero_cnt+2) {\n            cnt++;\n            int t=s1.size()-1;\n            swap(s1[t],s1[t-1]);\n        }\n        else s1.erase(s1.size()-1,1);\n    }\n    if(zero_cnt) {\n        if(s1.find('.')==-1) s1+=\".\";\n        rep(i,zero_cnt) s1+=\"0\";\n    }\n    cout<<s1<<\" * 10^\"<<cnt+prefix[s2]<<\" \"<<s3<<endl;\n\n\n}\n\nint main() {\n    prefix[\"yotta\"] = 24;\n    prefix[\"zetta\"] = 21;\n    prefix[\"exa\"] = 18;\n    prefix[\"peta\"] = 15;\n    prefix[\"tera\"] = 12;\n    prefix[\"giga\"] = 9;\n    prefix[\"mega\"] = 6;\n    prefix[\"kilo\"] = 3;\n    prefix[\"hecto\"] = 2;\n    prefix[\"deca\"] = 1;\n    prefix[\"\"] = 0;\n    prefix[\"deci\"] = -1;\n    prefix[\"centi\"] = -2;\n    prefix[\"milli\"] = -3;\n    prefix[\"micro\"] = -6;\n    prefix[\"nano\"] = -9;\n    prefix[\"pico\"] = -12;\n    prefix[\"femto\"] = -15;\n    prefix[\"ato\"] = -18;\n    prefix[\"zepto\"] = -21;\n    prefix[\"yocto\"] = -24;\n    int t;\n    cin>>t;\n    cin.ignore();\n    while(t-->0) {\n        solve();\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> m;\nvoid init();\nstring s,t,u;\nint n,keta;\n\nvoid change(){\n  int p=-1,x,y,len=(int)s.size();\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  if(p==-1)p=len++,s=s+'.';\n  if(m.find(t)!=m.end())x=m[t],y=abs(x);\n  else return;\n  if(x>0){\n    while(y--){\n      if(p==len-1)s[len++-1]='0',s=s+'.',p++;\n      else swap(s[p],s[p+1]),p++;\n    }\n  }else{\n    while(y--){\n      if(p==0)s[0]='0',s='.'+s,len++;\n      else swap(s[p],s[p-1]),p--;\n    }\n  }\n}\n\nvoid getketa(){\n  int len=s.size(),f=0,cnt=0;\n  for(int i=0;i<len;i++){\n    if('1'<=s[i]&&s[i]<='9')f=1;\n    if(f&&s[i]!='.')cnt++;   \n  }\n  keta=cnt;\n}\n\nvoid change2(){\n  int len=s.size();\n  if(s[0]=='0'&&s[1]=='.'){\n    int idx;\n    for(int i=2;i<len;i++)\n      if(s[i]!='0'){\n\tidx=i;\n\tbreak;\n      }\n    for(int i=1;i<idx;i++)swap(s[i],s[i+1]);\n    int x;\n    for(int i=0;i<len;i++)\n      if(s[i]!='0'){\n\tx=i;\n\tbreak;\n      }\n    s=s.substr(x,len-x);\n    int cnt=0,i=0;\n    while(cnt<keta){\n      if(s[i]!='.')cnt++;\n      cout<<s[i++];\n    }\n    cout<<\" * 10^\"<<-(idx-1)<<\" \"<<u<<endl;\n    return;\n  }\n  int p,ans2;\n  int x;\n  for(int i=0;i<len;i++)\n    if(s[i]!='0'){\n      x=i;\n      break;\n    }\n  s=s.substr(x,len-x);\n  len=s.size();\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  ans2=p-1;\n  for(int i=p;i>1;i--)swap(s[i],s[i-1]);\n  int cnt=0,i=0;\n  while(cnt<keta){\n    if(s[i]!='.')cnt++;\n    cout<<s[i++];\n  }\n  cout<<\" * 10^\"<<ans2<<\" \"<<u<<endl;\n}\n\nint main(){\n  init();\n  cin>>n;\n  while(n--){\n    cin>>s>>t;\n    getketa();\n    change();\n    if(m.find(t)!=m.end()){\n      cin>>u;\n    }else u=t;\n    change2();\n  }\n  return 0;\n}\n\nvoid init(){\n  m[\"yotta\"]=24;\n  m[\"zetta\"]=21;\n  m[\"exa\"]=18;\n  m[\"peta\"]=15;\n  m[\"tera\"]=12;\n  m[\"giga\"]=9;\n  m[\"mega\"]=6;\n  m[\"kilo\"]=3;\n  m[\"hecto\"]=2;\n  m[\"deca\"]=1;\n  m[\"deci\"]=-1;\n  m[\"centi\"]=-2;\n  m[\"milli\"]=-3;\n  m[\"micro\"]=-6;\n  m[\"nano\"]=-9;\n  m[\"pico\"]=-12;\n  m[\"femto\"]=-15;\n  m[\"ato\"]=-18;\n  m[\"zepto\"]=-21;\n  m[\"yocto\"]=-24;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k;\n  cin >> n;\n  while(n--){\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    if(con(s2)!=0) cin >> s3;\n    else s3=s2;\n    if(s1[0]=='0'){\n      k=2;\n      while(s1[k]=='0') {\n        k++;\n        //cout << k << endl;\n        if(k>=s1.size()-1) {\n          break;\n        }\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << con(s2)-(k-1);\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) f=true;\n      else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i];   \n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      if(f) cout << \" * 10^\" << con(s2)+s1.size()-1;\n      else cout << \" * 10^\" << con(s2)+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n  int t;\n  string PRE[20]={\n    \"yotta\",\"zetta\",\"exa\",\"peta\",\"tera\",\"giga\",\"mega\",\"kilo\",\"hecto\",\"deca\",\n    \"deci\",\"centi\",\"milli\",\"micro\",\"nano\",\"pico\",\"femto\",\"ato\",\"zepto\",\"yocto\"\n  };\n  int B[20]={\n    24,21,18,15,12,9,6,3,2,1,\n    -1,-2,-3,-6,-9,-12,-15,-18,-21,-24\n  };\n\n  //  for( int i=0;i<20;i++ )   cout << PRE[i] << \" \" << B[i] << endl;\n  string num,pre,unit;\n  int b;\n  cin >> t;\n  while( t-- ){\n    cin >> num >> unit; pre=\"\";\n    b=0;\n    for( int i=0;i<20;i++ ){\n      if( unit==PRE[i] ){\n\tpre=unit; cin>> unit; b=B[i]; break;\n      }\n    }\n\n    if( num[0]=='0' ){ // num<1 : 小数\n      unsigned int i=0;\n      //      cout << num << \" b=\"<< b << endl;\n      for( ; i<num.length() && num[i]!='.';i++,b-- );\n      for( i++;i<num.length() && num[i]=='0' ; i++,b-- );\n      string buf = \".\";\n      if( i+1 < num.length() ) buf = buf + num.substr(i+1);\n      else buf = \"\";\n      num = num[i] + buf;\n      //      cout << num << \" b=\" << b <<  endl;\n    }else{ // num>0\n      //      cout << num<<\" b=\" << b << endl;\n      unsigned int i = num.find(\".\");\n      string b1 = num, b2=\"\";\n      if( i!=string::npos ){\n\tb1 = num.substr(0,i );\n\tb2 = num.substr( i+1 );\n      }\n      b += b1.length()-1;\n      b1 = b1.substr(0,1) + \".\" + b1.substr(1);\n      num = b1+b2;\n      //      cout << num << \" b=\" << b << endl;\n    }\n    cout << num << \" * 10^\" << b << \" \"<< unit << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<cstdio>\nusing namespace std;\nint FIND(string s){\n  string tmp[]={\"yotta\",\"zetta\",\"exa\",\"peta\",\"tera\",\"giga\",\"mega\",\"kilo\",\"hecto\",\"deca\",\"\",\"deci\",\"centi\",\"milli\",\"micro\",\"nano\",\"pico\",\"femto\",\"ato\",\"zepto\",\"yocto\"};\n  int cnt[]={24,21,18,15,12,9,6,3,2,1,0,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24};\n  for(int i=0;i<21;i++) if(s == tmp[i]) return cnt[i];\n}\nint main(){\n  int n;\n\n  cin >> n;\n  getchar();\n  while(n--){\n    string str,no,op1=\"\",op2;\n    getline(cin,str);\n    no = str.substr(0,str.find(' '));\n    if(str.find(' ')!=str.rfind(' '))\n      op1 = str.substr(str.find(' ')+1,str.rfind(' ') - str.find(' ')-1);\n    op2 = str.substr(str.rfind(' ')+1);\n    int ans = FIND(op1);\n    if(no.find('.') == string::npos) no += '.';\n    if(no[1] == '.'){\n      while(no[0] == '0'){\n        no.erase(0,1);\n        swap(no[0],no[1]);\n        ans--;\n      }\n      if(no[no.size()-1] == '.') no.erase(no.size() - 1);\n    } else {\n      while(no[1] != '.'){\n        swap(no[no.find('.')],no[no.find('.')-1]);\n        ans++;\n      }\n    }\n    cout << no << \" * 10^\" << ans << \" \" << op2 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<cstdio>\nusing namespace std;\nint FIND(string s){\n  string tmp[]={\"yotta\",\"zetta\",\"exa\",\"peta\",\"tera\",\"giga\",\"mega\",\"kilo\",\"hecto\",\"deca\",\"\",\"deci\",\"centi\",\"milli\",\"micro\",\"nano\",\"pico\",\"femto\",\"ato\",\"zepto\",\"yocto\"};\n  int cnt[]={24,21,18,15,12,9,6,3,2,1,0,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24};\n  for(int i=0;i<21;i++) if(s == tmp[i]) return cnt[i];\n}\nint main(){\n  int n;\n\n  cin >> n;\n  getchar();\n  while(n--){\n    string str,no,op1=\"\",op2;\n    getline(cin,str);\n    no = str.substr(0,str.find(' '));\n    if(str.find(' ')!=str.rfind(' '))\n      op1 = str.substr(str.find(' ')+1,str.rfind(' ') - str.find(' ')-1);\n    op2 = str.substr(str.rfind(' ')+1);\n    int ans = FIND(op1);\n    if(no.find('.') == string::npos) no += '.';\n    if(no[1] == '.'){\n      while(no[0] == '0'){\n        no.erase(0,1);\n        swap(no[0],no[1]);\n        ans--;\n      }\n    } else {\n      while(no[1] != '.'){\n        swap(no[no.find('.')],no[no.find('.')-1]);\n        ans++;\n      }\n    }\n    cout << no << \" * 10^\" << ans << \" \" << op2 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<bits/stdc++.h>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k,x;\n  cin >> n;\n  while(n--){\n    x=0;\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    while(con(s2)!=0) {\n      x+=con(s2);\n      //cout << x << endl;\n      cin >> s2;\n    }\n    s3=s2;\n    if(s1[0]=='0'){\n      k=1; \n      j=0;\n      while(s1[k]!='.') {\n        k++;\n        j++;\n      }\n      k++;\n      while(s1[k]=='0') {\n        k++;\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << x-(k-1)+j;\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f&&s1[k]!=NULL) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++)cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      //cout << (int)x+(int)(s1.size()-1)  << endl;\n      if(f) cout << \" * 10^\" << (int)x+(int)(s1.size()-1);\n      else cout << \" * 10^\" << x+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\nusing namespace std;\n\n\nvector<string> split(string v,char del){\n\tvector<string> strs;\n\tint head=0;\n\tfor(int j = 0; j < v.size(); j++){\n\t\tif(v[j]==del){\n\t\t\tstrs.push_back(v.substr(head,j-head));\n\t\t\thead=j+1;\n\t\t}\n\t\telse if(j==v.size()-1){\n\t\t\tstrs.push_back(v.substr(head,j-head+1));\n\t\t}\n\t}\n\treturn strs;\n}\n\n\nint main(){\n    map<string,int> dict;\n    dict[\"yotta\"]=24;\n    dict[\"zetta\"]=21;\n    dict[\"exa\"]=18;\n    dict[\"peta\"]=15;\n    dict[\"tera\"]=12;\n    dict[\"giga\"]=9;\n    dict[\"mega\"]=6;\n    dict[\"kilo\"]=3;\n    dict[\"hecto\"]=2;\n    dict[\"deca\"]=1;\n    dict[\"deci\"]=-1;\n    dict[\"centi\"]=-2;\n    dict[\"milli\"]=-3;\n    dict[\"micro\"]=-6;\n    dict[\"nano\"]=-9;\n    dict[\"pico\"]=-12;\n    dict[\"femto\"]=-15;\n    dict[\"ato\"]=-18;\n    dict[\"zepto\"]=-21;\n    dict[\"yocto\"]=-24;\n    int n;\n    cin>>n;\n    string str;\n    getline(cin,str);\n    while(n--){\n        string num;\n        string pref;\n        string tani;\n\n        getline(cin,str);\n        vector<string> strs=split(str,' ');\n        num=strs[0];\n        int sum=0;\n\n        int initNotZero=-1;\n        int commma=-1;\n        for(int i = 0; i < num.size(); i++){\n            if(num[i]=='.')\n                commma=i;\n            else if(num[i]!='0'&&initNotZero==-1)\n                initNotZero=i;\n        }\n        if(initNotZero==0){\n            int diff;\n            if(commma!=-1){\n                diff=commma-1;\n                num=num.substr(0,commma)+num.substr(commma+1);\n            }\n            else\n                diff=num.size()-1;\n            sum+=diff;\n        }\n        else{\n            int diff=initNotZero-commma;\n            num=num.substr(initNotZero);\n            sum-=diff;\n        }\n        num=num.substr(0,1)+'.'+num.substr(1);\n        if(num[num.size()-1]=='.')\n            num=num.substr(0,num.size()-1);\n        if(strs.size()==2)\n            tani=strs[1];\n        else{\n            pref=strs[1];tani=strs[2];\n            int t=dict[pref];\n            sum+=t;\n        }\n        cout<<num<<\" * \"<<\"10^\"<<sum<<\" \"<<tani<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\n/* typedef */\n\ntypedef map<string,int> msi;\n\n/* global variables */\n\nmsi pfxmap;\n\n/* subroutines */\n\n/* main */\n\nint main() {\n  pfxmap[\"yotta\"] = 24;\n  pfxmap[\"zetta\"] = 21;\n  pfxmap[\"exa\"] = 18;\n  pfxmap[\"peta\"] = 15;\n  pfxmap[\"tera\"] = 12;\n  pfxmap[\"giga\"] = 9;\n  pfxmap[\"mega\"] = 6;\n  pfxmap[\"kilo\"] = 3;\n  pfxmap[\"hecto\"] = 2;\n  pfxmap[\"deca\"] = 1;\n  pfxmap[\"deci\"] = -1;\n  pfxmap[\"centi\"] = -2;\n  pfxmap[\"milli\"] = -3;\n  pfxmap[\"micro\"] = -6;\n  pfxmap[\"nano\"] = -9;\n  pfxmap[\"pico\"] = -12;\n  pfxmap[\"femto\"] = -15;\n  pfxmap[\"ato\"] = -18;\n  pfxmap[\"zepto\"] = -21;\n  pfxmap[\"yocto\"] = -24;\n\n  int tn;\n  cin >> tn;\n\n  while (tn--) {\n    string nstr, pstr, ustr;\n    cin >> nstr >> pstr;\n\n    msi::iterator mit = pfxmap.find(pstr);\n    int pexp = 0;\n    \n    if (mit == pfxmap.end())\n      ustr = pstr;\n    else {\n      cin >> ustr;\n      pexp = mit->second;\n    }\n\n    int prd = nstr.find('.', 0);\n    int fp, np = nstr.length() - 1;\n    \n    if (prd == string::npos)\t// no period\n      prd = np;\n    else {\t// found period\n      nstr.erase(prd, 1);\n      prd--;\n      np--;\n    }\n\n    for (fp = 0; fp <= np && nstr[fp] == '0'; fp++);\n    if (fp > 0) {\n      nstr.erase(0, fp);\n      prd -= fp;\n      np -= fp;\n    }\n\n    if (np > 0) nstr.insert(1, \".\");\n\n    cout << nstr << \" * 10^\" << (prd + pexp) << ' ' << ustr << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint Tanni(string);\n\nint main(){\n  int i,j,n;\n  string st,str,str2;\n  cin >> n;\n  for(int t=0;t<n;t++){\n    int keta,a[1003],aa,dot;\n\n    cin >> st >> str;\n\n    bool f = false;\n    for(i=0;i<st.size();i++){\n      if(st[i] == '.'){\n\ta[i] = -1;\n\tdot = i;\n\tf = true;\n      }\n      else a[i] = st[i] - '0';\n    }\n    aa = i;\n\n    if(dot == 0){\n      for(i=aa-1;i>=0;i--) a[i+1] = a[i];\n      a[0] = 0;\n      dot = 1;\n    }\n    else if(dot == aa - 1) a[aa++] = 0;\n\n    if(!f){\n      a[aa] = -1;\n      dot = aa;\n      a[aa+1] = 0;\n      aa += 2;\n    }\n\n    keta = Tanni(str);\n    if(keta == 0) str2 = str;\n    else cin >> str2;\n\n    while(a[0] == 0 || dot != 1){\n      if(a[0] != 0 && a[1] == -1) break;\n\n      //for(dot=0;dot<aa;dot++) if(a[dot] == -1) break;\n      \n      if(a[0] == 0){\n\tketa--;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot+1];\n\ta[dot+1] = c;\n\tfor(j=0;j<aa-1;j++) a[j] = a[j+1];\n\taa--;\n      }\n\n      else if(a[1] != 1){\n\tketa++;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot-1];\n\ta[dot-1] = c;\n\tdot--;\n      }\n    }\n    \n    if(!f) aa--;\n    if(aa - 1 == dot) aa--;\n\n    for(i=0;i<aa;i++){\n      if(i == dot) cout << \".\";\n      else cout << a[i];\n    }\n    \n    cout << \" * 10^\" << keta << \" \" << str2 << endl;\n  }\n  return 0;\n}\n\nint Tanni(string str){\n  if(str == \"yotta\") return 24;\n  else if(str == \"zetta\") return 21;\n  else if(str == \"exa\") return 18;\n  else if(str == \"peta\") return 15;\n  else if(str == \"tera\") return 12;\n  else if(str == \"giga\") return 9;\n  else if(str == \"mega\") return 6;\n  else if(str == \"kilo\") return 3;\n  else if(str == \"hecto\") return 2;\n  else if(str == \"deca\") return 1;\n  else if(str == \"deci\") return -1;\n  else if(str == \"centi\") return -2;\n  else if(str == \"milli\") return -3;\n  else if(str == \"micro\") return -6;\n  else if(str == \"nano\") return -9;\n  else if(str == \"pico\") return -12;\n  else if(str == \"femto\") return -15;\n  else if(str == \"ato\") return -18;\n  else if(str == \"zepto\") return -21;\n  else if(str == \"yocto\") return -24;\n  else return 0;\n};"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<algorithm>\n#include<sstream>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n\nmap<string, int> dict;\nvoid init() {\n  dict[ \"yotta\" ] = 24;\n  dict[ \"zetta\" ] = 21;\n  dict[ \"exa\" ] = 18;\n  dict[ \"peta\" ] = 15;\n  dict[ \"tera\" ] = 12;\n  dict[ \"giga\" ] = 9;\n  dict[ \"mega\" ] = 6;\n  dict[ \"kilo\" ] = 3;\n  dict[ \"hecto\" ] = 2;\n  dict[ \"deca\" ] = 1;\n  dict[ \"\"] = 0;\n  dict[ \"deci\" ] = -1;\n  dict[ \"centi\" ] = -2;\n  dict[ \"milli\" ] = -3;\n  dict[ \"micro\" ] = -6;\n  dict[ \"nano\" ] = -9;\n  dict[ \"pico\" ] = -12;\n  dict[ \"femto\" ] = -15;\n  dict[ \"ato\" ] = -18;\n  dict[ \"zepto\" ] = -21;\n  dict[ \"yocto\" ] = -24;\n}\n\nint getYuukou(string s) {\n  int rz = 1;\n  int res = 0;\n  for (int i = 0; i < (int)s.size(); i++)\n      if (isdigit(s[i])) {\n          if (s[i] == '0' && rz) {\n              ;\n          } else {\n              rz = 0;\n              res++;\n          }\n      }\n  return res;\n}\n\nvoid solve() {\n  string line; getline(cin, line);\n  stringstream ss(line);\n  string value; ss >> value;\n  string prefix; ss >> prefix >> ws;\n  string unit;\n  if (ss.eof()) {\n      unit = prefix;\n      prefix = \"\";\n  } else {\n      ss >> unit;\n  }\n  int yuukou = getYuukou(value);\n  int kurai = dict[prefix];\n  if (value[0] == '0') {  // 0.xxxx\n      int i;\n      for (i = 0; ; i++) {\n          if (isdigit(value[i])) {\n              if (value[i] == '0') kurai--;\n              else break;\n          }\n      }\n      cout << value[i] << (i + 1 == value.size() ? \"\" : \".\") << value.substr(i + 1) << \" * 10^\" << kurai << \" \" << unit << endl;\n  } else if (count(value.begin(), value.end(), '.') == 0) { // 42\n      kurai += value.size() - 1;\n      cout << value[0] << (1 == value.size() ? \"\" : \".\") << value.substr(1) << \" * 10^\" << kurai << \" \" << unit << endl;\n  } else { // 31.45\n      int m = value.find('.');\n      kurai += m - 1;\n      value.erase(value.begin() + m);\n      cout << value[0] << (1 == value.size() ? \"\" : \".\") << value.substr(1) << \" * 10^\" << kurai << \" \" << unit << endl;\n  }\n}\nint main() {\n  init();\n  int T; cin >> T >> ws;\n  for (;T--;) solve();\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <algorithm>\n\ninline int getInt(){ int s; scanf(\"%d\", &s); return s; }\n\nusing namespace std;\n\nchar buff[1200];\n\nint main(){\n  int n = getInt();\n  fgets(buff, sizeof(buff), stdin);\n\n  map<string, int> m;\n  const char *tanni[] = {\n    \"yotta\",\n    \"zetta\",\n    \"exa\",\n    \"peta\",\n    \"tera\",\n    \"giga\",\n    \"mega\",\n    \"kilo\",\n    \"hecto\",\n    \"deca\",\n    \"deci\",\n    \"centi\",\n    \"milli\",\n    \"micro\",\n    \"nano\",\n    \"pico\",\n    \"femto\",\n    \"ato\",\n    \"zepto\",\n    \"yocto\",\n    NULL\n  };\n\n  int t[] = {\n    24,21,18,15,12,9,6,3,2,1,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24\n  };\n\n\n  for(int i = 0; tanni[i]; i++)\n    m[tanni[i]] = t[i];\n\n  while(n --> 0){\n    fgets(buff, sizeof(buff), stdin);\n\n    stringstream ss(buff);\n\n    vector<string> v;\n    string s;\n\n    while(ss >> s) v.push_back(s);\n\n    int yuukou = 0;\n    int p = 0;\n\n    if(v.size() == 3) p = m[v[1]];\n\n    for(char c : v[0]){\n      if(c != '.' && (yuukou != 0 || c != '0'))\n\tyuukou++;\n    }\n\n    int npos = find_if(v[0].begin(), v[0].end(), [](char c){ return c != '.' && c != '0'; }) - v[0].begin();\n    int dpos = find(v[0].begin(), v[0].end(), '.') - v[0].begin();\n\n    if(npos > dpos)\n      p += dpos - npos;\n    else\n      p += dpos - npos - 1;\n\n    bool first = true;\n\n    for(char c : v[0]){\n      if(c == '0' && first){\n\n      }else if(isdigit(c)){\n\tputchar(c); yuukou--;\n\tif(first){\n\t  first = false;\n\t  if(yuukou != 0) putchar('.');\n\t}\n      }\n    }\n\n    while(yuukou){ putchar('0'); yuukou--; }\n\n    printf(\" * 10^%d \", p);\n\n    if(v.size() == 2) puts(v[1].c_str());\n    else puts(v[2].c_str());\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nchar line[10000];\nchar str1[10000];\nchar str2[10000];\nchar str3[10000];\nchar ans[10000];\n\nint main() {\n  map<string, int> mapto;\n  mapto[\"yotta\"] = 24;\n  mapto[\"zetta\"] = 21;\n  mapto[\"exa\"] = 18;\n  mapto[\"peta\"] = 15;\n  mapto[\"tera\"] = 12;\n  mapto[\"giga\"] = 9;\n  mapto[\"mega\"] = 6;\n  mapto[\"kilo\"] = 3;\n  mapto[\"hecto\"] = 2;\n  mapto[\"deca\"] = 1;\n  mapto[\"deci\"] = -1;\n  mapto[\"centi\"] = -2;\n  mapto[\"milli\"] = -3;\n  mapto[\"micro\"] = -6;\n  mapto[\"nano\"] = -9;\n  mapto[\"pico\"] = -12;\n  mapto[\"femto\"] = -15;\n  mapto[\"ato\"] = -18;\n  mapto[\"zepto\"] = -21;\n  mapto[\"yocto\"] = -24;\n\n  int test;\n  scanf(\"%d \", &test);\n  while (test--) {\n    int base = 0;\n    gets(line);\n    int v = sscanf(line, \"%s %s %s\", str1, str2, str3);\n    if (v == 3) {\n      swap(str2, str3);\n      assert(mapto.count(str3));\n      base = mapto[str3];\n    }\n    int len = strlen(str1);\n    int dir = 1;\n    if (str1[0] == '0') { dir = -1; }\n    else { base--; }\n    bool end = false;\n    int index = 0;\n    REP(i, len) {\n      if (dir == 1) {\n        if (str1[i] == '.') { end = true; continue; }\n        if (!end) { base += dir; }\n        if (index == 1) {\n          ans[index++] = '.';\n        }\n        ans[index++] = str1[i];\n      } else {\n        if (str1[i] == '.') { continue; }\n        if (str1[i] != '0') { end = true; }\n        if (!end) { base += dir; }\n        if (end) {\n          if (index == 1) {\n            ans[index++] = '.';\n          }\n          ans[index++] = str1[i];\n        }\n      }\n    }\n    ans[index] = 0;\n    printf(\"%s * 10^%d %s\\n\", ans, base, str2);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <algorithm>\n#include <numeric>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define rp(i,c) rep(i,(c).size())\n#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define mp make_pair\n#define pb push_back\n#define all(c) (c).begin(),(c).end()\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf=1<<28;\nconst double INF=1e10,EPS=1e-9;\n\nchar in[2000];\nchar dig[1001],pref[9],unit[51];\n\nint main()\n{\n\tmap<string,int> prefix;\n\tprefix[\"yocto\"]=-24; prefix[\"zepto\"]=-21; prefix[\"ato\"]=-18; prefix[\"femto\"]=-15;\n\tprefix[\"pico\"]=-12; prefix[\"nano\"]=-9; prefix[\"micro\"]=-6; prefix[\"milli\"]=-3;\n\tprefix[\"centi\"]=-2; prefix[\"deci\"]=-1; prefix[\"deca\"]=1; prefix[\"hecto\"]=2;\n\tprefix[\"kilo\"]=3; prefix[\"mega\"]=6; prefix[\"giga\"]=9; prefix[\"tera\"]=12;\n\tprefix[\"peta\"]=15; prefix[\"exa\"]=18; prefix[\"zetta\"]=21; prefix[\"yotta\"]=24;\n\t\n\tint cs; cin>>cs; cin.ignore();\n\twhile(cs--)\n\t{\n\t\tstring line; getline(cin,line);\n\t\tstrcpy(in,line.c_str());\n\t\tint sp=count(in,in+strlen(in),' ');\n\t\tif(sp==2)sscanf(in,\"%s%s%s\",dig,pref,unit);\n\t\telse sscanf(in,\"%s%s\",dig,unit),pref[0]=0;\n\t\t\n\t\tint p,q=strlen(dig),r,e=prefix[pref];\n\t\tfor(p=0;p<q&&(dig[p]=='.'||dig[p]=='0');p++);\n\t\tfor(r=0;r<q&&dig[r]!='.';r++);\n\t\t\n\t\te-=p-r+(p==0);\n\t\tchar ans[1010]; int l=0;\n\t\tans[l++]=dig[p];\n\t\tif(++p==q)goto END;\n\t\tans[l++]='.';\n\t\tfor(;p<q;p++)if(dig[p]!='.')ans[l++]=dig[p];\n\t\t\n\t\tEND:\n\t\tans[l]=0; \n\t\tprintf(\"%s * 10^%d %s\\n\",ans,e,unit);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\nusing namespace std;\n\n\nvector<string> split(string v,char del){\n\tvector<string> strs;\n\tint head=0;\n\tfor(int j = 0; j < v.size(); j++){\n\t\tif(v[j]==del){\n\t\t\tstrs.push_back(v.substr(head,j-head));\n\t\t\thead=j+1;\n\t\t}\n\t\telse if(j==v.size()-1){\n\t\t\tstrs.push_back(v.substr(head,j-head+1));\n\t\t}\n\t}\n\treturn strs;\n}\n\n\nint main(){\n    map<string,int> dict;\n    dict[\"yotta\"]=24;\n    dict[\"zetta\"]=21;\n    dict[\"exa\"]=18;\n    dict[\"peta\"]=15;\n    dict[\"tera\"]=12;\n    dict[\"giga\"]=9;\n    dict[\"mega\"]=6;\n    dict[\"kilo\"]=3;\n    dict[\"hecto\"]=2;\n    dict[\"deca\"]=1;\n    dict[\"deci\"]=-1;\n    dict[\"centi\"]=-2;\n    dict[\"milli\"]=-3;\n    dict[\"micro\"]=-6;\n    dict[\"nano\"]=-9;\n    dict[\"pico\"]=-12;\n    dict[\"femto\"]=-15;\n    dict[\"ato\"]=-18;\n    dict[\"zepto\"]=-21;\n    dict[\"yocto\"]=-24;\n    int n;\n    cin>>n;\n    string str;\n    getline(cin,str);\n    while(n--){\n        string num;\n        string pref;\n        string tani;\n        //cin>>num>>pref>>tani;\n\n        getline(cin,str);\n        vector<string> strs=split(str,' ');\n        num=strs[0];\n        int sum=0;\n\n        int initNotZero=-1;\n        int commma=-1;\n        // êÔÅÉ0ÈOªoÄ­éêÆAcommaÌÊuðT·\n        for(int i = 0; i < num.size(); i++){\n            if(num[i]=='.')\n                commma=i;\n            else if(num[i]!='0'&&initNotZero==-1)\n                initNotZero=i;\n        }\n        if(initNotZero==0){\n            int diff;\n            if(commma!=-1){\n                diff=commma-1;\n                num=num.substr(0,commma)+num.substr(commma+1);\n            }\n            else\n                diff=num.size()-1;\n            num=num.substr(0,1)+'.'+num.substr(1);\n            sum+=diff;\n        }\n        else{\n            int diff=initNotZero-commma;\n            num=num.substr(initNotZero);\n            num=num.substr(0,1)+'.'+num.substr(1);\n            sum-=diff;\n        }\n        if(num[num.size()-1]=='.')num+='0';\n        if(strs.size()==2){\n            tani=strs[1];\n            cout<<num<<\" * \"<<\"10^\"<<sum<<\" \"<<tani<<endl;\n        }\n        else{\n            pref=strs[1];tani=strs[2];\n            int t=dict[pref];\n            sum+=t;\n            cout<<num<<\" * \"<<\"10^\"<<sum<<\" \"<<tani<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//Name: Unit Converter\n//Level: 2\n//Category: 文字列\n//Note:\n\n/*\n * 数値を文字列として読み、指数表記に直す。\n * そのあと補助単位を処理する。\n *\n * オーダーは O(|S|)。\n */\n#include <iostream>\n#include <string>\n#include <map>\n\nusing namespace std;\n\nvoid solve() {\n    map<string,int> dict;\n\n    dict[\"yotta\"] = 24;\n    dict[\"zetta\"] = 21;\n    dict[\"exa\"] = 18;\n    dict[\"peta\"] = 15;\n    dict[\"tera\"] = 12;\n    dict[\"giga\"] = 9;\n    dict[\"mega\"] = 6;\n    dict[\"kilo\"] = 3;\n    dict[\"hecto\"] = 2;\n    dict[\"deca\"] = 1;\n    dict[\"deci\"] = -1;\n    dict[\"centi\"] = -2;\n    dict[\"milli\"] = -3;\n    dict[\"micro\"] = -6;\n    dict[\"nano\"] = -9;\n    dict[\"pico\"] = -12;\n    dict[\"femto\"] = -15;\n    dict[\"ato\"] = -18;\n    dict[\"zepto\"] = -21;\n    dict[\"yocto\"] = -24;\n\n    string num, prefix, unit;\n    cin >> num >> prefix;\n    if(dict.count(prefix)) {\n        cin >> unit;\n    } else {\n        unit = prefix;\n        prefix = \"\";\n    }\n\n    int e;\n    string real;\n    auto dot = num.find_first_of('.');\n    if(dot == string::npos) {\n        e = (int)num.size() - 1;\n        real = num;\n    } else {\n        string int_part = num.substr(0, dot);\n        if(int_part != \"0\") {\n            real += int_part;\n            real += num.substr(dot+1);\n            e = (int)dot - 1;\n        } else {\n            auto first = num.find_first_not_of('0', dot+1);\n            real = num.substr(first);\n            e = (int)dot - first;\n        }\n    }\n    e += dict[prefix];\n    cout << real[0];\n    if(real.size() > 1) {\n        cout << '.' << real.substr(1);\n    }\n    cout << \" * 10^\" << e << ' ' << unit << endl;\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(0);\n    cout.setf(ios::fixed);\n    cout.precision(10);\n\n    int N;\n    cin >> N;\n    while(N--) solve();\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\n\nstatic string name[20] = {\"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\", \"giga\", \"mega\", \"kilo\", \"hecto\", \"deca\", \"deci\", \"centi\", \"milli\", \"micro\", \"nano\", \"pico\", \"femto\", \"ato\", \"zepto\", \"yocto\"};\nstatic int T[20] = {24, 21, 18, 15, 12, 9, 6, 3, 2, 1, -1, -2, -3, -6, -9, -12, -15, -18, -21, -24};\nbool isW(string n){\n  for ( int i = 0; i < 20; i++ )\n    if ( name[i] == n ) return true;\n  return false;\n}\n\nint getW(string pre){\n  for ( int i = 0; i < 20; i++ ){\n    if ( name[i] == pre )  return T[i];\n  }\n}\n\nint normalize(string &base, int w){\n  if ( base.find('.') == string::npos) base += '.';\n  int p = base.find('.');\n  for ( int i = p; i >=2; i-- ) { swap(base[i], base[i-1]); w++;}\n  while( base[0] == '0' ){\n    base.erase(base.begin());\n    swap(base[0], base[1]);\n    w--;\n  }\n  if ( base[base.size()-1] == '.' ) base.erase(base.end()-1);\n  return w;\n}\n\nvoid compute(){\n  string base, unit;\n  int w = 0;\n  cin >> base >> unit;\n  if ( isW(unit) ) { w = getW(unit); cin >> unit; }\n  w = normalize(base, w);\n  cout << base << \" * 10^\" << w << \" \" << unit << endl;\n}\n\nmain(){\n  int tcase; cin >> tcase;\n  for ( int i = 0; i < tcase; i++ ) compute();\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\nint main(){\n  int no,n,i,j,k,l,sw2,sw3,sw4,sw5,sw6,sa,set[20]={24,21,18,15,12,9,6,3,2,1,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24};\n  int sw[20];\n\n\n  char a[1002],b[52],c[52];\n  char A[]=\"yotta\";\n  char B[]=\"zetta\";\n  char C[]=\"exa\";\n  char D[]=\"peta\";\n  char E[]=\"tera\";\n  char F[]=\"giga\";\n  char G[]=\"mega\";\n  char H[]=\"kilo\";\n  char I[]=\"hecto\";\n  char J[]=\"deca\";\n  char K[]=\"deci\";\n  char L[]=\"centi\";\n  char M[]=\"milli\";\n  char N[]=\"micro\";\n  char O[]=\"nano\";\n  char P[]=\"pico\";\n  char Q[]=\"femto\";\n  char R[]=\"ato\";\n  char S[]=\"zepto\";\n  char T[]=\"yocto\";\n\n\n  //start\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++){\n    //syoki\n    for(j=0;j<20;j++)sw[j]=0;\n    sw2=0;\n    sw3=0;\n    sw4=0;\n    sw5=0;\n    sw6=0;\n    //\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    //hantei\n    if(strcmp(A,b)==0)sw[0]=1;\n    if(strcmp(B,b)==0)sw[1]=1;\n    if(strcmp(C,b)==0)sw[2]=1;\n    if(strcmp(D,b)==0)sw[3]=1;\n    if(strcmp(E,b)==0)sw[4]=1;\n    if(strcmp(F,b)==0)sw[5]=1;\n    if(strcmp(G,b)==0)sw[6]=1;\n    if(strcmp(H,b)==0)sw[7]=1;\n    if(strcmp(I,b)==0)sw[8]=1;\n    if(strcmp(J,b)==0)sw[9]=1;\n    if(strcmp(K,b)==0)sw[10]=1;\n    if(strcmp(L,b)==0)sw[11]=1;\n    if(strcmp(M,b)==0)sw[12]=1;\n    if(strcmp(N,b)==0)sw[13]=1;\n    if(strcmp(O,b)==0)sw[14]=1;\n    if(strcmp(P,b)==0)sw[15]=1;\n    if(strcmp(Q,b)==0)sw[16]=1;\n    if(strcmp(R,b)==0)sw[17]=1;\n    if(strcmp(S,b)==0)sw[18]=1;\n    if(strcmp(T,b)==0)sw[19]=1;\n    //hantei\n    for(j=0;j<20;j++){\n      if(sw[j]==1)sw2=1;\n    }\n    if(sw2==1)scanf(\"%s\",c);\n    //in end\n\n    for(j=0;a[j]!='\\0';j++){\n      if(a[j]>='1'&&a[j]<='9'){//1<a\n\tfor(k=j+1;a[k]!='\\0';k++){\n\t  if(a[k]=='.'){\n\t    sw3=1;\n\t    sa=k-j-1;\n\t    break;\n\t  }\n\t}\n\tif(sw3==0){\n\t  sa=k-j-1;\n\t}\n\tbreak;\n      }\n      if(a[j]=='.'){//1>a\n\tsw5=1;\n\tfor(k=j+1;a[k]!='\\0';k++){\n\t  if(a[k]>='1'&&a[k]<='9'){\n\t    sa=k-j-1;\n\t    sa*=-1;\n\t    sa--;\n\t    if(a[k+1]=='\\0')sw4=1;\n\t    break;\n\t  }\n\t}\n\tbreak;\n      }\n    }\n    //a end\n\n    //out\n    if(sw5==0){\n      printf(\"%c.\",a[0]);//atama\n      for(k=1;a[k]!='\\0';k++){\n\tif(a[k]!='.'){\n\tprintf(\"%c\",a[k]);\n\t}\n      }\n    }\n    else{\n      printf(\"%c\",a[k]);\n      if(sw4==0){\n\tprintf(\".\");\n\tfor(l=k+1;a[l]!='\\0';l++){\n\t  if(a[l]!='.'){\n\t  printf(\"%c\",a[l]);\n\t  }\n\t}\n      }\n    }\n    printf(\" * 10^\");\n    for(j=0;j<20;j++){\n      if(sw[j]==1){\n\tsw6=1;\n\tprintf(\"%d\",set[j]+sa);\n\tbreak; \n      }\n    }\n    if(sw6==0){\n\tprintf(\"%d\",0+sa);\n    }\n\n    if(sw2==1){\n      printf(\" \");\n      for(j=0;c[j]!='\\0';j++){\n\tprintf(\"%c\",c[j]);\n      }\n    }\n    else{\n      printf(\" \");\n      for(j=0;b[j]!='\\0';j++){\n\tprintf(\"%c\",b[j]);\n      }\n    }\n\tprintf(\"\\n\");\n  } \n    \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint Tanni(string);\n\nint main(){\n  int i,j,n;\n  string st,str,str2;\n  cin >> n;\n  for(int t=0;t<n;t++){\n    int keta,a[1003],aa,dot;\n\n    cin >> st >> str;\n\n    dot = -1;\n    bool f = false;\n    for(i=0;i<st.size();i++){\n      if(st[i] == '.'){\n\ta[i] = -1;\n\tdot = i;\n\tf = true;\n      }\n      else a[i] = st[i] - '0';\n    }\n    aa = i;\n\n    if(dot == 0){\n      for(i=aa-1;i>=0;i--) a[i+1] = a[i];\n      a[0] = 0;\n      dot = 1;\n      aa++;\n    }\n    else if(dot == aa - 1) a[aa++] = 0;\n\n    if(!f){\n      a[aa] = -1;\n      dot = aa;\n      a[aa+1] = 0;\n      aa += 2;\n    }\n\n    keta = Tanni(str);\n    if(keta == 0) str2 = str;\n    else cin >> str2;\n\n    while(a[0] == 0 || dot != 1){\n      if(a[0] != 0 && a[1] == -1) break;\n\n      //for(dot=0;dot<aa;dot++) if(a[dot] == -1) break;\n      \n      if(a[0] == 0){\n\tketa--;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot+1];\n\ta[dot+1] = c;\n\tfor(j=0;j<aa-1;j++) a[j] = a[j+1];\n\ta[aa-1] = 0;\n\taa--;\n      }\n\n      else if(a[1] != 1){\n\tketa++;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot-1];\n\ta[dot-1] = c;\n\tdot--;\n      }\n    }\n    \n    if(!f) aa--;\n    if(aa - 1 == dot) aa--;\n\n    for(i=0;i<aa;i++){\n      if(i == dot) cout << \".\";\n      else cout << a[i];\n    }\n    \n    cout << \" * 10^\" << keta << \" \" << str2 << endl;\n  }\n  return 0;\n}\n\nint Tanni(string str){\n  if(str == \"yotta\") return 24;\n  else if(str == \"zetta\") return 21;\n  else if(str == \"exa\") return 18;\n  else if(str == \"peta\") return 15;\n  else if(str == \"tera\") return 12;\n  else if(str == \"giga\") return 9;\n  else if(str == \"mega\") return 6;\n  else if(str == \"kilo\") return 3;\n  else if(str == \"hecto\") return 2;\n  else if(str == \"deca\") return 1;\n  else if(str == \"deci\") return -1;\n  else if(str == \"centi\") return -2;\n  else if(str == \"milli\") return -3;\n  else if(str == \"micro\") return -6;\n  else if(str == \"nano\") return -9;\n  else if(str == \"pico\") return -12;\n  else if(str == \"femto\") return -15;\n  else if(str == \"ato\") return -18;\n  else if(str == \"zepto\") return -21;\n  else if(str == \"yocto\") return -24;\n  else return 0;\n};"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <map>\nusing namespace std;\n\nchar buf1[1024], buf2[64], buf3[64];\n\nint main(){\n\tmap<string,int> sub;\n\tsub[\"yotta\"] = 24;\n\tsub[\"zetta\"] = 21;\n\tsub[\"exa\"] = 18;\n\tsub[\"peta\"] = 15;\n\tsub[\"tera\"] = 12;\n\tsub[\"giga\"] = 9;\n\tsub[\"mega\"] = 6;\n\tsub[\"kilo\"] = 3;\n\tsub[\"hecto\"] = 2;\n\tsub[\"deca\"] = 1;\n\tsub[\"deci\"] = -1;\n\tsub[\"centi\"] = -2;\n\tsub[\"milli\"] = -3;\n\tsub[\"micro\"] = -6;\n\tsub[\"nano\"] = -9;\n\tsub[\"pico\"] = -12;\n\tsub[\"femto\"] = -15;\n\tsub[\"ato\"] = -18;\n\tsub[\"zepto\"] = -21;\n\tsub[\"yocto\"] = -24;\n\n\tint T;\n\tcin >> T;\n\tcin.get();\n\tstring s, t;\n\twhile(T--){\n\t\tgetline(cin, s);\n\t\tint d;\n\t\tconst char *unit;\n\t\tif(sscanf(s.c_str(), \"%s %s %s\", buf1, buf2, buf3) == 3){\n\t\t\td = sub[buf2];\n\t\t\tunit = buf3;\n\t\t}\n\t\telse{\n\t\t\td = 0;\n\t\t\tunit = buf2;\n\t\t}\n\n\t\tt = buf1;\n\t\tsize_t top, dot;\n\t\tfor(top = 0; t[top] == '.' || t[top] == '0'; ++top);\n\n\t\tdot = t.find('.');\n\t\tif(dot == string::npos){\n\t\t\tdot = t.size();\n\t\t\tt += '.';\n\t\t}\n\t\telse if(dot < top){\n\t\t\td -= t.size() - 2;\n\t\t\tt = t.substr(top);\n\t\t\tdot = t.size();\n\t\t\tt += '.';\n\t\t\ttop = 0;\n\t\t}\n\n\t\twhile(dot - 1 > top){\n\t\t\tt[dot] = t[dot - 1];\n\t\t\t++d;\n\t\t\t--dot;\n\t\t}\n\t\tt[dot] = '.';\n\n\t\tif(dot + 1 == t.size()){\n\t\t\tt.resize(dot);\n\t\t}\n\n\t\tprintf(\"%s * 10^%d %s\\n\", t.c_str(), d, unit);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> m;\nstring s,t,u;\nint n,len;\nvoid init();\n\nint getx(){\n  int res=0,f=0;\n  for(int i=0;i<len;i++){\n    if('1'<=s[i]&&s[i]<='9')f=1;\n    if(f&&s[i]!='.')res++;\n  }\n  return res;\n}\n\nvoid solve(){\n  int p=-1,x=getx(),a;\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  if(p==-1)s+='.',p=len++;\n  if(m.find(t)!=m.end()){\n    a=m[t]; \n    for(int i=0;i<abs(a);i++)\n      if(a>0)\n\tif(p==len-1)s[len-1]='0',s+='.',p=len++;\n\telse swap(s[p],s[p+1]),p++;\n      else\n\tif(p==0)s[0]='0',s='.'+s,len++;\n\telse swap(s[p],s[p-1]),p--;\n  }\n  int idx=0,ansidx;\n  for(int i=0;i<len;i++)\n    if('1'<=s[i]&&s[i]<='9'){\n      idx=i;\n      break;\n    }\n  ansidx=p-idx-1;\n  if(p<idx)ansidx++;\n  int cnt=0,z=0;\n  for(int i=0;i<len;i++){\n    if(s[i]=='.')continue;\n    if(s[i]!='0'){\n      z=i;\n      break;\n    }\n  }\n  while(cnt<x){\n    if(cnt==1)cout<<'.';\n    if(s[z]=='.')z++;\n    cout<<s[z],z++,cnt++;\n  }\n  cout<<\" * 10^\"<<ansidx<<' '<<u<<endl;\n}\n\nint main(){\n  init();\n  cin>>n;\n  while(n--){\n    cin>>s>>t;\n    len=s.size();\n    if(m.find(t)!=m.end()){\n      cin>>u;\n    }else u=t;\n    solve();\n  }\n  return 0;\n}\n\nvoid init(){\n  m[\"yotta\"]=24; m[\"zetta\"]=21;\n  m[\"exa\"]=18; m[\"peta\"]=15;\n  m[\"tera\"]=12; m[\"giga\"]=9;\n  m[\"mega\"]=6; m[\"kilo\"]=3;\n  m[\"hecto\"]=2; m[\"deca\"]=1;\n  m[\"deci\"]=-1; m[\"centi\"]=-2;\n  m[\"milli\"]=-3; m[\"micro\"]=-6;\n  m[\"nano\"]=-9; m[\"pico\"]=-12;\n  m[\"femto\"]=-15; m[\"ato\"]=-18;\n  m[\"zepto\"]=-21; m[\"yocto\"]=-24;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k;\n  cin >> n;\n  while(n--){\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    if(con(s2)!=0) cin >> s3;\n    else s3=s2;\n    if(s1[0]=='0'){\n      k=2;\n      while(s1[k]=='0') {\n        k++;\n        //cout << k << endl;\n        if(k>=s1.size()-1) {\n          break;\n        }\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << con(s2)-(k-1);\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      while(s1[k]!='.') {\n        k++;\n        if(k>=s1.size()-1) {\n          f=true;\n          break;\n        }\n      }\n      cout << s1[0];\n      if(k!=1){\n        cout << \".\";\n        for(i=1;i<k;i++) cout << s1[i];   \n        for(i=k+1;i<s1.size();i++) cout << s1[i];   \n      }else if(s1.size()==2){\n        cout << \".\" << s1[1];\n      }\n      if(f) cout << \" * 10^\" << con(s2)+s1.size()-1;\n      else cout << \" * 10^\" << con(s2)+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> m;\nstring s,t,u;\nint n,len;\nvoid init();\n\nint getx(){\n  int res=0,f=0;\n  for(int i=0;i<len;i++){\n    if('1'<=s[i]&&s[i]<='9')f=1;\n    if(f&&s[i]!='.')res++;\n  }\n  return res;\n}\n\nvoid solve(){\n  int p=-1,x=getx(),a;\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  if(p==-1)s+='.',p=len++;\n  if(m.find(t)!=m.end()){\n    a=m[t]; \n    for(int i=0;i<abs(a);i++)\n      if(a>0)\n\tif(p==len-1)s[len-1]='0',s+='.',p=len++;\n\telse swap(s[p],s[p+1]),p++;\n      else\n\tif(p==0)s[0]='0',s='.'+s,len++;\n\telse swap(s[p],s[p-1]),p--;\n  }\n  int idx=0,ansidx;\n  for(int i=0;i<len;i++)\n    if('1'<=s[i]&&s[i]<='9'){\n      idx=i;\n      break;\n    }\n  ansidx=p-idx-1;\n  if(p<idx)ansidx++;\n  int cnt=0,z=0;\n  for(int i=0;i<len;i++){\n    if(s[i]=='.')continue;\n    if(s[i]!='0'){\n      z=i;\n      break;\n    }\n  }\n  while(cnt<x){\n    if(cnt==1)cout<<'.';\n    if(s[z]=='.')z++;\n    cout<<s[z],z++,cnt++;\n  }\n  cout<<\" * 10^\"<<ansidx<<' '<<u<<endl;\n}\n\nint main(){\n  init();\n  cin>>n;\n  while(n--){\n    cin>>s>>t;\n    len=s.size();\n    if(m.find(t)!=m.end()){\n      cin>>u;\n    }else u=t;\n    solve();\n  }\n  return 0;\n}\n\nvoid init(){\n  m[\"yotta\"]=24; m[\"zetta\"]=21;\n  m[\"exa\"]=18; m[\"peta\"]=15;\n  m[\"tera\"]=12; m[\"giga\"]=9;\n  m[\"mega\"]=6; m[\"kilo\"]=3;\n  m[\"hecto\"]=2; m[\"deca\"]=1;\n  m[\"deci\"]=-1; m[\"centi\"]=-2;\n  m[\"milli\"]=-3; m[\"micro\"]=-6;\n  m[\"nano\"]=-9; m[\"pico\"]=-12;\n  m[\"femto\"]=-15; m[\"ato\"]=-18;\n  m[\"zepto\"]=-21; m[\"yocto\"]=-24;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> m;\nvoid init();\nstring s,t,u;\nint n,keta;\n\nvoid change(){\n  int p=-1,x,y,len=(int)s.size();\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  if(p==-1)p=len++,s=s+'.';\n  if(m.find(t)!=m.end())x=m[t],y=abs(x);\n  else return;\n  if(x>0){\n    while(y--){\n      if(p==len-1)s[len++-1]='0',s=s+'.',p++;\n      else swap(s[p],s[p+1]),p++;\n    }\n  }else{\n    while(y--){\n      if(p==0)s[0]='0',s='.'+s,len++;\n      else swap(s[p],s[p-1]),p--;\n    }\n  }\n}\n\nvoid getketa(){\n  int len=s.size(),f=0,cnt=0;\n  for(int i=0;i<len;i++){\n    if('1'<=s[i]&&s[i]<='9')f=1;\n    if(f&&s[i]!='.')cnt++;   \n  }\n  keta=cnt;\n}\n\nvoid change2(){\n  int len=s.size();\n  if(s[0]=='0'&&s[1]=='.'){\n    int idx;\n    for(int i=2;i<len;i++)\n      if(s[i]!='0'){\n\tidx=i;\n\tbreak;\n      }\n    for(int i=1;i<idx;i++)swap(s[i],s[i+1]);\n    int x;\n    for(int i=0;i<len;i++)\n      if(s[i]!='0'){\n\tx=i;\n\tbreak;\n      }\n    s=s.substr(x,len-x);\n    int cnt=0,i=0;\n    while(cnt<keta){\n      if(s[i]!='.')cnt++;\n      cout<<s[i++];\n    }\n    cout<<\" * 10^\"<<-(idx-1)<<\" \"<<u<<endl;\n    return;\n  }\n  int p,ans2;\n  int x;\n  for(int i=0;i<len;i++)\n    if(s[i]!='0'){\n      x=i;\n      break;\n    }\n  s=s.substr(x,len-x);\n  len=s.size();\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  ans2=p-1;\n  for(int i=p;i>1;i--)swap(s[i],s[i-1]);\n  int cnt=0,i=0;\n  while(cnt<keta){\n    if(s[i]!='.')cnt++;\n    cout<<s[i++];\n  }\n  cout<<\" * 10^\"<<ans2<<\" \"<<u<<endl;\n}\n\nint main(){\n  init();\n  cin>>n;\n  while(n--){\n    cin>>s>>t;\n    getketa();\n    change();\n    if(m.find(t)!=m.end()){\n      cin>>u;\n    }else u=t;\n    change2();\n  }\n  return 0;\n}\n\nvoid init(){\n  m[\"yotta\"]=24;\n  m[\"zetta\"]=21;\n  m[\"exa\"]=18;\n  m[\"peta\"]=15;\n  m[\"tera\"]=12;\n  m[\"giga\"]=9;\n  m[\"mega\"]=6;\n  m[\"kilo\"]=3;\n  m[\"hecto\"]=2;\n  m[\"deca\"]=1;\n  m[\"deci\"]=-1;\n  m[\"centi\"]=-2;\n  m[\"milli\"]=-3;\n  m[\"micro\"]=-6;\n  m[\"nano\"]=-9;\n  m[\"pico\"]=-12;\n  m[\"femto\"]=-15;\n  m[\"ato\"]=-18;\n  m[\"zepto\"]=-21;\n  m[\"yocto\"]=-24;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  int n,t[20];\n  for(int i=0;i<8;i++)t[i]=24-i*3;\n  t[8]=2;\n  t[9]=1;\n  t[10]=-1;\n  t[11]=-2;\n  for(int i=1;i<9;i++)t[11+i]=-i*3;\n  string p[20]={\n    \"yotta\",\n    \"zetta\",\n    \"exa\",\n    \"peta\",\n    \"tera\",\n    \"giga\",\n    \"mega\",\n    \"kilo\",\n    \"hecto\",\n    \"deca\",\n    \"deci\",\n    \"centi\",\n    \"milli\",\n    \"micro\",\n    \"nano\",\n    \"pico\",\n    \"femto\",\n    \"ato\",\n    \"zepto\",\n    \"yocto\"\n  };\n  \n  cin>>n;\n  while(n--){\n    string a,b,c;\n    cin>>a;\n    cin>>b;\n    bool f=0;\n    for(int i=0;i<20;i++)if(b==p[i])f=1;\n    if(f)cin>>c;\n    else c=b;\n    int cn=-1;\n    if(a[0]=='0'){\n      int i=2;\n      while(i<a.size()&&a[i++]=='0')cn--;\n      for(int j=i-1;j<a.size();j++){\n\tif(j==i)cout<<\".\";\n\tcout<<a[j];\n      }\n    }\n    else{\n      int i=0;\n      while(i<a.size()&&a[i++]!='.')cn++;\n      if(i==a.size())i++;\n      for(int j=0;j<a.size();j++){\n\tif(j==i-1)continue;\n\tif(j==1)cout<<\".\";\n\tcout<<a[j];\n      }\n    }\n    for(int i=0;i<20;i++)if(p[i]==b)cn+=t[i];\n    cout<<\" * 10^\"<<cn<<\" \"<<c<<endl;\n\t\n  }    \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <functional>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <vector>\n#include <list>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <bitset>\n#include <climits>\n\n#define all(c) (c).begin(), (c).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define pb(e) push_back(e)\n#define mp(a, b) make_pair(a, b)\n#define fr first\n#define sc second\n\nconst int INF=100000000;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nusing namespace std;\ntypedef pair<int ,int > P;\ntypedef long long ll;\n\nmap<string,int> prefix;\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >>setprecision(30) >> t;\n}\n\nvoid add_zero(string &s) {\n    string zero=\"\";\n    rep(i,30) zero+=\"0\";\n    s=zero+s+zero;\n}\n\nvoid split(string line,string &s1,string &s2,string &s3) {\n    int i;\n    for(i=0;i<line.size();i++) {\n        if(line[i]==' ') break;\n        s1+=line[i];\n    }\n    i++;\n    for(;i<line.size();i++) {\n        if(line[i]==' ') break;\n        if(line[i]=='\\n') break;\n        s2+=line[i];\n    }\n    if(i!=line.size()-1) {\n        i++;\n        for(;i<line.size();i++) {\n            if(line[i]=='\\n') break;\n            s3+=line[i];\n        }\n    }\n}\n\nvoid solve() {\n    int zero_cnt=0;\n    string line;\n    getline(cin,line);\n    string s1,s2,s3;\n    split(line,s1,s2,s3);\n    if(s3==\"\") {\n        s3=s2;\n        s2=\"\";\n    }\n\n    if(s1.find('.')==-1) s1+=\".\";\n    else {\n        for(int i=s1.size()-1;i>=0;i--) {\n            if(s1[i]!='0') break;\n            zero_cnt++;\n        }\n        while(s1[s1.size()-1]=='0') s1.erase(s1.size()-1,1);\n    }\n    int cnt=0;\n\n    int pos=s1.find('.');\n    if(s1[0]=='0') {\n        for(int i=pos;i<s1.size()-1;i++) {\n            cnt--;\n            swap(s1[i],s1[i+1]);\n        }\n    }\n    else {\n        for(int i=pos;i>=2;i--) {\n            cnt++;\n            swap(s1[i],s1[i-1]);\n        }\n    }\n    while(s1[0]=='0') s1.erase(0,1);\n    if(s1[s1.size()-1]=='.') {\n        if(s1.size()>zero_cnt+2) {\n            cnt++;\n            int t=s1.size()-1;\n            swap(s1[t],s1[t-1]);\n        }\n        else s1.erase(s1.size()-1,1);\n    }\n    rep(i,zero_cnt) s1+=\"0\";\n    cout<<s1<<\" * 10^\"<<cnt+prefix[s2]<<\" \"<<s3<<endl;\n\n\n}\n\nint main() {\n    prefix[\"yotta\"] = 24;\n    prefix[\"zetta\"] = 21;\n    prefix[\"exa\"] = 18;\n    prefix[\"peta\"] = 15;\n    prefix[\"tera\"] = 12;\n    prefix[\"giga\"] = 9;\n    prefix[\"mega\"] = 6;\n    prefix[\"kilo\"] = 3;\n    prefix[\"hecto\"] = 2;\n    prefix[\"deca\"] = 1;\n    prefix[\"\"] = 0;\n    prefix[\"deci\"] = -1;\n    prefix[\"centi\"] = -2;\n    prefix[\"milli\"] = -3;\n    prefix[\"micro\"] = -6;\n    prefix[\"nano\"] = -9;\n    prefix[\"pico\"] = -12;\n    prefix[\"femto\"] = -15;\n    prefix[\"ato\"] = -18;\n    prefix[\"zepto\"] = -21;\n    prefix[\"yocto\"] = -24;\n    int t;\n    cin>>t;\n    cin.ignore();\n    while(t-->0) {\n        solve();\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <cassert>\n#include <queue>\n#include <set>\n#include <map>\n#include <valarray>\n#include <bitset>\n#include <stack>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\ntypedef long long ll;\nconst int INF = 1<<29;\nconst double PI = acos(-1);\nconst double EPS = 1e-8;\n\nint main() {\n  string a[20] = {\"yotta\",\"zetta\",\"exa\",\"peta\",\"tera\",\"giga\",\"mega\",\"kilo\",\"hecto\",\"deca\",\"deci\",\"centi\",\n                  \"milli\",\"micro\",\"nano\",\"pico\",\"femto\",\"ato\",\"zepto\",\"yocto\"};\n  int b[20] = {24,21,18,15,12,9,6,3,2,1,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24};\n  map<string, int> mp;\n  REP(i,20) mp[a[i]] = b[i];\n  int N;\n  cin >> N;\n  while(N--) {\n    string num, s, t;\n    cin >>num>>s;\n    if (mp.count(s) == 0) {\n      t = s;\n    } else cin >> t;\n    int ten = -1, pos = -1;\n    REP(i, num.size()) {\n      if (num[i]=='.') ten=i;\n      else if (num[i]!='0' && pos==-1) pos = i;\n    }\n    int yuko = num.size() - pos;\n    int aa;\n    string res;\n    if (ten == -1) {\n      res += string(1,num[0]) + \".\" + num.substr(1);\n      aa = -num.size()+1;\n    } else if (ten<pos) {\n      res += string(1,num[pos]) + \".\" + num.substr(pos+1);\n      int zero = yuko-res.size()+1;\n      //cout << res << \" \" << zero << endl;\n      res += string(zero,'0');\n      aa = pos-1;\n    } else {\n      res += string(1,num[pos]) + \".\" + num.substr(pos+1, ten-pos-1) + num.substr(ten+1);\n      int zero = yuko-res.size();\n      res += string(zero,'0');\n      aa = -ten+1;\n    }\n    if (res[res.size()-1] == '.') res = res.substr(0, res.size()-1);\n    aa *= -1;\n    //cout << num << \" \" << aa << \" \" << mp[s] << endl;\n    aa += mp[s];\n    cout << res <<  \" * 10^\" << aa << \" \" << t << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\nusing namespace std;\n\nint main(){\n  int casenum;\n  string val,pre,unit;\n  int b;\n  \n  map<string,int> p;\n  \n  p[\"yotta\"] = 24;\n  p[\"zetta\"] = 21;\n  p[\"exa\"] = 18;\n  p[\"peta\"] = 15;\n  p[\"tera\"] = 12;\n  p[\"giga\"] = 9;\n  p[\"mega\"] = 6;\n  p[\"kilo\"] = 3;\n  p[\"hecto\"] = 2;\n  p[\"deca\"] = 1;\n  p[\"deci\"] = -1;\n  p[\"centi\"] = -2;\n  p[\"milli\"] = -3;\n  p[\"micro\"] = -6;\n  p[\"nano\"] = -9;\n  p[\"pico\"] = -12;\n  p[\"femto\"] = -15;\n  p[\"ato\"] = -18;\n  p[\"zepto\"] = -21;\n  p[\"yocto\"] = -24;\n\n  cin >> casenum;\n  while(casenum--){\n    cin >> val >> pre;\n    b = p[pre];\n    if(b)cin >> unit;\n    else unit = pre;\n\n    int pos = 0;\n\n    while(pos<val.size()){\n      if(val[pos] == '.'){\n\tval.erase(val.begin()+pos);\n\tbreak;\n      }\n      pos++;\n    }\n\n    while(val[0] == '0'){\n      val.erase(val.begin());\n      b--;\n    }\n\n    if(val.size()>1)val.insert(val.begin()+1,'.');\n\n    cout << val << \" * 10^\" << b+(pos-1) << \" \" << unit << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <math.h>\nusing namespace std;\n\nstring head[20]={\"yotta\",\"zetta\",\"exa\",\"peta\",\"tera\",\"giga\",\"mega\",\"kilo\",\"hecto\",\"deca\",\"deci\",\"centi\",\"milli\",\"micro\",\"nano\",\"pico\",\"femto\",\"ato\",\"zepto\",\"yocto\"};\nint m[21]={24,21,18,15,12,9,6,3,2,1,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24,0};\n\nint main(){\n\tint n;\n\tstring S;\n\tcin>>n;\n\tgetline(cin,S);\n\tfor(int h=0;h<n;h++){\n\tint c=0,e=0,f=0,D,cur=0;\n\t\tstring s[3]={\"\",\"\",\"\"};\n\t\tgetline(cin,S);\n\t\twhile(cur<S.size()){\n\t\t\tif(S[cur]==' ')c++;\n\t\t\telse s[c]+=S[cur];\n\t\t\tcur++;\n\t\t}\n\tif(s[0][0]=='0'){\n\t\tint d=2;\n\t\twhile(s[0][d]=='0'){d++;}\n\t\tif(s[0].size()==d+1)cout<<s[0][d];\n\t\telse cout<<s[0][d]<<\".\"<<s[0].substr(d+1);\n\t\tD=1-d;\n\t}\n\telse {\n\t\tint d=1;\n\t\tif(s[0].size()==1)cout<<s[0];\n\t\telse {\n\t\t\twhile(s[0][d]!='.'){d++; if(d==s[0].size()){e=1;break;}}\n\t\t\tif(e==0)cout<<s[0][0]<<\".\"<<s[0].substr(1,d-1)<<s[0].substr(d+1);\n\t\t\telse cout<<s[0][0]<<\".\"<<s[0].substr(1);\n\t\t}\n\t\tD=d-1;\n\t}\n\tif(c==2)while(s[1]!=head[f])f++;\n\telse f=20;\n\tcout<<\" * 10^\"<<D+m[f]<<\" \"<<s[c]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <algorithm>\n#include <numeric>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define rp(i,c) rep(i,(c).size())\n#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define mp make_pair\n#define pb push_back\n#define all(c) (c).begin(),(c).end()\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf=1<<28;\nconst double INF=1e10,EPS=1e-9;\n\nchar in[2000];\nchar dig[1001],pref[9],unit[51];\n\nint main()\n{\n\tmap<string,int> prefix;\n\tprefix[\"yocto\"]=-24; prefix[\"zepto\"]=-21; prefix[\"ato\"]=-18; prefix[\"femto\"]=-15;\n\tprefix[\"pico\"]=-12; prefix[\"nano\"]=-9; prefix[\"micro\"]=-6; prefix[\"milli\"]=-3;\n\tprefix[\"centi\"]=-2; prefix[\"deci\"]=-1; prefix[\"deca\"]=1; prefix[\"hecto\"]=2;\n\tprefix[\"kilo\"]=3; prefix[\"mega\"]=6; prefix[\"giga\"]=9; prefix[\"tera\"]=12;\n\tprefix[\"peta\"]=15; prefix[\"exa\"]=18; prefix[\"zetta\"]=21; prefix[\"yotta\"]=24;\n\t\n\tint cs; scanf(\"%d \",&cs);\n\twhile(cs--)\n\t{\n\t\tgets(in);\n\t\tint sp=count(in,in+strlen(in),' ');\n\t\tif(sp==2)sscanf(in,\"%s%s%s\",dig,pref,unit);\n\t\telse sscanf(in,\"%s%s\",dig,unit),pref[0]=0;\n\t\t\n\t\tint p,q=strlen(dig),r,e=prefix[pref];\n\t\tfor(p=0;p<q&&(dig[p]=='.'||dig[p]=='0');p++);\n\t\tfor(r=0;r<q&&dig[r]!='.';r++);\n\t\t\n\t\te-=p-r+(p==0);\n\t\tchar ans[1010]; int l=0;\n\t\tans[l++]=dig[p];\n\t\tif(++p==q)goto END;\n\t\tans[l++]='.';\n\t\tfor(;p<q;p++)if(dig[p]!='.')ans[l++]=dig[p];\n\t\t\n\t\tEND:\n\t\tans[l]=0; \n\t\tprintf(\"%s * 10^%d %s\\n\",ans,e,unit);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\nusing namespace std;\n\nint main(){\n  int casenum;\n  string val,pre,unit;\n  int b;\n  \n  map<string,int> p;\n  \n  p[\"yotta\"] = 24;\n  p[\"zetta\"] = 21;\n  p[\"exa\"] = 18;\n  p[\"peta\"] = 15;\n  p[\"tera\"] = 12;\n  p[\"giga\"] = 9;\n  p[\"mega\"] = 6;\n  p[\"kilo\"] = 3;\n  p[\"hecto\"] = 2;\n  p[\"deca\"] = 1;\n  p[\"deci\"] = -1;\n  p[\"centi\"] = -2;\n  p[\"mili\"] = -3;\n  p[\"micro\"] = -6;\n  p[\"nano\"] = -9;\n  p[\"pico\"] = -12;\n  p[\"femto\"] = -15;\n  p[\"ato\"] = -18;\n  p[\"zepto\"] = -21;\n  p[\"yocto\"] = -24;\n\n  cin >> casenum;\n  while(casenum--){\n    cin >> val >> pre;\n    b = p[pre];\n    if(b)cin >> unit;\n    else unit = pre;\n\n    int pos = 0;\n\n    while(pos<val.size()){\n      if(val[pos] == '.'){\n\tval.erase(val.begin()+pos);\n\tbreak;\n      }\n      pos++;\n    }\n\n    int cnt = 0;\n    while(val[0] == '0'){\n      val.erase(val.begin());\n      cnt++;\n    }\n\n    //int len = val.size();\n\n    if(val.size()>1)val.insert(val.begin()+1,'.');\n\n    //cout << pos << \" \" << cnt << endl;\n    cout << val << \" * 10^\" << b-cnt+(pos-1) << \" \" << unit << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\ntypedef pair<string, int> P;\n\nint main() {\n\tP hyou[20];\n\thyou[0] = P(\"yotta\", 24);\n\thyou[1] = P(\"zetta\", 21);\n\thyou[2] = P(\"exa\", 18);\n\thyou[3] = P(\"peta\", 15);\n\thyou[4] = P(\"tera\", 12);\n\thyou[5] = P(\"giga\", 9);\n\thyou[6] = P(\"mega\", 6);\n\thyou[7] = P(\"kilo\", 3);\n\thyou[8] = P(\"hecto\", 2);\n\thyou[9] = P(\"deca\", 1);\n\thyou[10] = P(\"deci\", -1);\n\thyou[11] = P(\"centi\", -2);\n\thyou[12] = P(\"milli\", -3);\n\thyou[13] = P(\"micro\", -6);\n\thyou[14] = P(\"nano\", -9);\n\thyou[15] = P(\"pico\", -12);\n\thyou[16] = P(\"femto\", -15);\n\thyou[17] = P(\"ato\", -18);\n\thyou[18] = P(\"zepto\", -21);\n\thyou[19] = P(\"yocto\", -24);\n\tint n;\n\tcin >> n;\n\tstring k;\n\tgetline(cin, k);\n\tfor (int i = 0; i < n; i++) {\n\t\tstring a;\n\t\tgetline(cin, a);\n\t\tstring d = a.substr(0, a.find(' '));\n\t\ta = a.substr(a.find(' ')+1);\n\t\tint counter = 0;\n\t\tfor (int j = 0; j < 20; j++) {\n\t\t\tif (a.find(hyou[j].first) != string::npos) {\n\t\t\t\tcounter = hyou[j].second;\n\t\t\t\ta = a.substr(a.find(' ')+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (d.find('.') == string::npos) {\n\t\t\tcounter += d.size()-1;\n\t\t\tif (d.substr(1) != \"\\0\") {\n\t\t\t\tcout << d[0] << '.' << d.substr(1) << \" * 10^\" << counter << ' ' << a << endl;\n\t\t\t} else {\n\t\t\t\tcout << d[0] << \" * 10^\" << counter << ' ' << a << endl;\n\t\t\t}\n\t\t} else {\n\t\t\tif (d[1] == '.') {\n\t\t\t\tif (d[0] == '0') {\n\t\t\t\t\tfor (int j = 2; j < d.size(); j++) {\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t\tif (d[j] == '0') {\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\td = d.substr(j);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (d.substr(1) != \"\\0\") {\n\t\t\t\t\t\tcout << d[0] << '.' << d.substr(1) << \" * 10^\" << counter << ' ' << a << endl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcout << d[0] << \" * 10^\" << counter << ' ' << a << endl;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcout << d << \" * 10^\" << counter << ' ' << a << endl;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcounter += d.find('.')-1;\n\t\t\t\td = d.substr(0, d.find('.')) + d.substr(d.find('.')+1);\n\t\t\t\tcout << d[0] << '.' << d.substr(1) << \" * 10^\" << counter << ' ' << a << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<algorithm>\nusing namespace std;\nmain(){\n  map<string,int> M;\n  M[\"yotta\"]= 24;\n  M[\"zetta\"]= 21;\n  M[\"exa\"]= 18;\n  M[\"peta\"]= 15;\n  M[\"tera\"]= 12;\n  M[\"giga\"]= 9;\n  M[\"mega\"]= 6;\n  M[\"kilo\"]= 3;\n  M[\"hecto\"]= 2;\n  M[\"deca\"]= 1;\n  M[\"deci\"]= -1;\n  M[\"centi\"]= -2;\n  M[\"milli\"]= -3;\n  M[\"micro\"]= -6;\n  M[\"nano\"]= -9;\n  M[\"pico\"]= -12;\n  M[\"femto\"]= -15;\n  M[\"ato\"]= -18;\n  M[\"zepto\"]= -21;\n  M[\"yocto\"]= -24; \n  int te;\n  cin>>te;\n  while(te--){\n  string num,param,unit;\n  while(cin>>num>>param){    \n    int p;\n    if ( M[param] == 0){\n      unit = param;\n      p=0;\n    }else {\n      cin>>unit;\n      p = M[param];\n    }\n    if ( num[0] == '0'){\n      //point move right point--\n      int i=0;\n      for(i=2;;i++){\n\tp--;\n\tif ( num[i] != '0' && num[i] != '.')break;\n      }\n      num=num.substr(i);\n      if ( num.size() == 1){\n\tcout << num[0]<<\n\t  \" * 10^\" << p << \" \" << unit<<endl;\n      }else {\n\tcout << num[0]<< \".\" << num.substr(1) <<\n\t  \" * 10^\" << p << \" \" << unit<<endl;\n      }\n\n    }else if ( find(num.begin(),num.end(),'.') != num.end() ){\n      //point move left point++\n      int i=0;\n      int itr=0;\n      while(num[itr]!='.')itr++;\n      p+=(itr-1);\n      num=num.erase(itr,1);\n      cout << num[0]<< \".\" << num.substr(1) <<\n\t\" * 10^\" << p << \" \" << unit<<endl;\n    }else {\n      p+=num.size()-1;\n      cout << num[0]<< \".\" << num.substr(1) <<\n\t\" * 10^\" << p << \" \" << unit<<endl;\n    }\n    unit.clear();\n  }\n  return false;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\n\nint main(){\n  int T; cin>>T; cin.ignore();\n  map<string, int> conv;\n  conv[\"yotta\"] = 24;\n  conv[\"zetta\"] = 21;\n  conv[\"exa\"] = 18;\n  conv[\"peta\"] = 15;\n  conv[\"tera\"] = 12;\n  conv[\"giga\"] = 9;\n  conv[\"mega\"] = 6;\n  conv[\"kilo\"] = 3;\n  conv[\"hecto\"] = 2;\n  conv[\"deca\"] = 1;\n  conv[\"deci\"] = -1;\n  conv[\"centi\"] = -2;\n  conv[\"milli\"] = -3;\n  conv[\"micro\"] = -6;\n  conv[\"nano\"] = -9;\n  conv[\"pico\"] = -12;\n  conv[\"femto\"] = -15;\n  conv[\"ato\"] = -18;\n  conv[\"zepto\"] = -21;\n  conv[\"yocto\"] = -24;\n  while(T--){\n    string line;\n    getline(cin, line);\n    string num, prefix, unit;\n    stringstream ss(line);\n    ss>>num; ss>>prefix; ss>>unit;\n    if(unit == \"\") swap(prefix, unit);\n    int dot = num.size() - 1;\n    REP(i, num.size())if(num[i] == '.'){\n      dot = i - 1;\n      num = num.substr(0, i) + num.substr(i+1);\n    }\n    int pow = INF;\n    REP(i, num.size())if(num[i] != '0'){\n      if(num.substr(i + 1) == \"\") num = num.substr(i, 1);\n      else num = num.substr(i, 1) + \".\" + num.substr(i + 1);\n      pow = dot - i;\n      break;\n    }\n    pow += conv[prefix];\n    printf(\"%s * 10^%d %s\\n\", num.c_str(), pow, unit.c_str());\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <sstream>\nusing namespace std;\n\nstring str[3];\nbool isTwo;\n\nvoid solve() {\n  int ten = 0;\n  string newS = \"\";\n  if(str[0].length() == 1) {\n    ten = 0;\n    newS = str[0];\n  } else if(str[0][0] == '0' && str[0][1] == '.') {\n    for(int i = 2; i < str[0].length(); ++i) {\n      if(str[0][i] != '0') {\n\tten -= i-1;\n\tstring tmp  = str[0].substr(i);\n\tnewS = tmp.substr(0, 1);\n\tif(tmp.length() > 1) newS += \".\" + tmp.substr(1);\n\tbreak;\n      }\n    }\n  } else {\n    bool flag = false;\n    for(int i = 1; i < str[0].length(); ++i) {\n      if(str[0][i] == '.') {\n\tten += i-1;\n\tstring tmp  = str[0].substr(0, i) + str[0].substr(i+1);\n\tnewS = tmp.substr(0, 1);\n\tnewS += '.';\n\tnewS += tmp.substr(1);\n\tflag = true;\n\tbreak;\n      }\n    }\n    if(!flag) {\n      ten += str[0].length() - 1;\n      newS = str[0].substr(0, 1) + \".\" + str[0].substr(1);\n    }\n  }\n  if(!isTwo) {\n    if(str[1] == \"yotta\") ten += 24;\n    else if(str[1] == \"zetta\") ten += 21;\n    else if(str[1] == \"exa\") ten += 18;\n    else if(str[1] == \"peta\") ten += 15;\n    else if(str[1] == \"tera\") ten += 12;\n    else if(str[1] == \"giga\") ten += 9;\n    else if(str[1] == \"mega\") ten += 6;\n    else if(str[1] == \"kilo\") ten += 3;\n    else if(str[1] == \"hecto\") ten += 2;\n    else if(str[1] == \"deca\") ten += 1;\n    else if(str[1] == \"deci\") ten += -1;\n    else if(str[1] == \"centi\") ten += -2;\n    else if(str[1] == \"milli\") ten += -3;\n    else if(str[1] == \"micro\") ten += -6;\n    else if(str[1] == \"nano\") ten += -9;\n    else if(str[1] == \"pico\") ten += -12;\n    else if(str[1] == \"femto\") ten += -15;\n    else if(str[1] == \"ato\") ten += -18;\n    else if(str[1] == \"zepto\") ten += -21;\n    else if(str[1] == \"yocto\") ten += -24;\n    cout << newS << \" * 10^\" << ten << \" \" << str[2] << endl;\n  } else {\n    cout << newS << \" * 10^\" << ten << \" \" << str[1] << endl;\n  }\n}\n\nmain() {\n  int n;\n  cin >> n;\n  getchar();\n  for(int t = 0; t < n; ++t) {\n    string s;\n    stringstream ss;\n    isTwo = false;\n    getline(cin, s);\n    ss << s;\n    for(int i = 0; i < 3; ++i) {\n      if(!(ss >> str[i])) {\n\tisTwo = true;\n      }\n    }\n    //cout << str[0] << \" \" << str[1] << \" \" << str[2] << endl;\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint Tanni(string);\n\nint main(){\n  int i,j,n;\n  string st,str,str2;\n  cin >> n;\n  for(int t=0;t<n;t++){\n    int keta,yuu,a[1003],aa;\n\n    cin >> st >> str;\n\n    bool f = false;\n    for(i=0;i<st.size();i++){\n      if(st[i] == '.'){\n\ta[i] = -1;\n\tf = true;\n      }\n      else a[i] = st[i] - '0';\n    }\n    aa = i;\n    if(!f){\n      a[i] = -1;\n      a[i+1] = 0;\n      aa += 2;\n    }\n\n    keta = Tanni(str);\n    if(keta == 0) str2 = str;\n    else cin >> str2;\n\n    while(a[0] == 0 || a[1] != -1){\n      \n      for(i=0;i<aa;i++){\n\tif(a[i] == -1) break;\n      }\n      \n      if(a[0] == 0){\n\tketa--;\n\tint c;\n\tc = a[i];\n\ta[i] = a[i+1];\n\ta[i+1] = c;\n\tfor(j=0;j<aa-1;j++) a[j] = a[j+1];\n\taa--;\n      }\n      else if(a[1] != 1){\n\tketa++;\n\tint c;\n\tc = a[i];\n\ta[i] = a[i-1];\n\ta[i-1] = c;\n      }\n    }\n    \n    if(!f) aa--;\n    if(a[aa-1] == -1) aa--;\n\n    for(i=0;i<aa;i++){\n      if(a[i] == -1) cout << \".\";\n      else cout << a[i];\n    }\n    \n    cout << \" * 10^\" << keta << \" \" << str2 << endl;\n  }\n  return 0;\n}\n\nint Tanni(string str){\n  if(str == \"yotta\") return 24;\n  else if(str == \"zetta\") return 21;\n  else if(str == \"exa\") return 18;\n  else if(str == \"peta\") return 15;\n  else if(str == \"tera\") return 12;\n  else if(str == \"giga\") return 9;\n  else if(str == \"mega\") return 6;\n  else if(str == \"kilo\") return 3;\n  else if(str == \"hecto\") return 2;\n  else if(str == \"deca\") return 1;\n  else if(str == \"deci\") return -1;\n  else if(str == \"centi\") return -2;\n  else if(str == \"milli\") return -3;\n  else if(str == \"micro\") return -6;\n  else if(str == \"nano\") return -9;\n  else if(str == \"pico\") return -12;\n  else if(str == \"femto\") return -15;\n  else if(str == \"ato\") return -18;\n  else if(str == \"zepto\") return -21;\n  else if(str == \"yocto\") return -24;\n  else return 0;\n};"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nchar A[1100];\nchar B[110];\nchar w[20][10]={\n\"yocto\",\"zepto\",\"ato\",\"femto\",\"pico\",\"nano\",\"micro\",\"milli\",\"centi\",\"deci\",\n\"deca\",\"hecto\",\"kilo\",\"mega\",\"giga\",\"tera\",\"peta\",\"exa\",\"zetta\",\"yotta\"\n};\nint s[]={\n-24,-21,-18,-15,-12,-9,-6,-3,-2,-1,1,2,3,6,9,12,15,18,21,24\n};\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%s%s\",A,B);\n\t\tint at=0;\n\t\tfor(int i=0;i<20;i++){\n\t\t\tbool ok=true;\n\t\t\tfor(int j=0;B[j]||w[i][j];j++){\n\t\t\t\tif(B[j]!=w[i][j])ok=false;\n\t\t\t}\n\t\t\tif(ok)at=s[i];\n\t\t}\n\t\tif(at){\n\t\t\tscanf(\"%s\",B);\n\t\t}\n\t\t\n\t\tfor(int i=0;A[i];i++){\n\t\t\tif(A[i]=='.')continue;\n\t\t\tif(A[i]!='0'){\n\t\t\t\tint d=-1;\n\t\t\t\tfor(int j=0;A[j];j++)if(A[j]=='.')d=j;\n\t\t\t\tif(d==-1)d=strlen(A);\n\t\t\t\tif(d<i)d=d-i;\n\t\t\t\telse d=d-i-1;\n\t\t\t\td+=at;\n\t\t\t\tprintf(\"%c\",A[i]);\n\t\t\t\tif(A[i+1])printf(\".\");\n\t\t\t\tfor(int j=i+1;A[j];j++){\n\t\t\t\t\tif(A[j]=='.')continue;\n\t\t\t\t\tprintf(\"%c\",A[j]);\n\t\t\t\t}\n\t\t\t\tprintf(\" * 10^%d %s\\n\",d,B);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<bits/stdc++.h>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k,x;\n  cin >> n;\n  while(n--){\n    x=0;\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    while(con(s2)!=0) {\n      x+=con(s2);\n      //cout << x << endl;\n      cin >> s2;\n    }\n    s3=s2;\n    if(s1[0]=='0'){\n      k=1; \n      j=0;\n      while(s1[k]!='.') {\n        k++;\n        j++;\n      }\n      k++;\n      while(s1[k]=='0') {\n        k++;\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << x-(k-1)+j;\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          //cout << k<<endl;\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f&&k<s1.size()) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++)cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      //cout << (int)x+(int)(s1.size()-1)  << endl;\n      if(f) cout << \" * 10^\" << (int)x+(int)(s1.size()-1);\n      else cout << \" * 10^\" << x+k-1;\n      cout << \" \" << s3 << endl;\n    }\n     \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nstring pre[] = {\"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\", \"giga\", \"mega\", \"kilo\", \"hecto\", \"deca\", \"deci\", \"centi\", \"milli\", \"micro\", \"nano\", \"pico\", \"femto\", \"ato\", \"zepto\", \"yocto\"};\nint expo[] = {24, 21, 18, 15, 12, 9, 6, 3, 2, 1, -1, -2, -3, -6, -9, -12, -15, -18, -21, -24};\n\nint main()\n{\n    int d;\n    cin >> d;\n\n    while(--d >= 0){\n        string s, unit;\n        cin >> s >> unit;\n\n        int a = 0;\n        if(find(pre, pre+20, unit) != pre+20){\n            a = expo[find(pre, pre+20, unit) - pre];\n            cin >> unit;\n        }\n\n        if(s[0] == '0'){\n            int i = s.find_first_not_of('0', 2);\n            a -= i - 1;\n            s = '.' + s.substr(i);\n            swap(s[0], s[1]);\n        }else if(s.find('.') == string::npos){\n            a += s.size() - 1;\n            s = '.' + s;\n            swap(s[0], s[1]);\n        }else{\n            int i = s.find('.');\n            a += i - 1;\n            s.erase(i, 1);\n            s = '.' + s;\n            swap(s[0], s[1]);\n        }\n        if(s.size() == 2)\n            s = s.substr(0, 1);\n\n        cout << s << \" * 10^\" << a << ' ' << unit << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n \n  string num,se;\n \n \nint search(int x){\n  int cnt=0;\n  for(int i=0;i<num.size();i++){\n    if(num[i]>='1' && num[i]<='9'){cnt++;return cnt;}\n    else if(num[i]=='0')cnt++;\n  }\n}\n \n \nint poi(){\n  int f=0;\n  if(num[0]>='1' && num[0]<='9')f=1;\n  for(int i=0;i<(int)num.size();i++){\n    if(f==1 && num[i]=='.')return i-1;\n    else if(f==0 && num[i]=='.')return (-1*search(i)+1);\n    else if(i==num.size()-1)return i;\n  }\n}\nstring renum;\n \nvoid  renumber(){\n \n   int f=0;\n    for(int i=0;i<num.size();i++){\n      if(num[i]=='.')continue;\n      else if(f==0 && num[i]>='1' && num[i]<='9')renum=renum+num[i],f=1;\n      else if(f==2)renum+=num[i];\n      else if(f==1)renum=renum+'.'+num[i],f=2;\n    }\n}\n \nint main(){\n  int  n,jo10;\n  cin>>n;\n  string tan;\n \n  for(int i=0;i<n;i++){\n    jo10=0;\n        string st;\n    cin>>num>>st;\n    if(st==\"yotta\") jo10=24,cin>>tan;\n    else if(st==\"zetta\")jo10=21,cin>>tan;\n    else if(st==\"exa\")jo10=18,cin>>tan;\n    else if(st==\"peta\")jo10=15,cin>>tan;\n    else if(st==\"tera\")jo10=12,cin>>tan;\n    else if(st==\"giga\")jo10=9,cin>>tan;\n    else if(st==\"mega\")jo10=6,cin>>tan;\n    else if(st==\"kilo\")jo10=3,cin>>tan;\n    else if(st==\"hecto\")jo10=2,cin>>tan;\n    else if(st==\"deca\")jo10=1,cin>>tan;\n    else if(st==\"deci\")jo10=-1,cin>>tan;\n    else if(st==\"centi\")jo10=-2,cin>>tan;\n    else if(st==\"milli\")jo10=-3,cin>>tan;\n    else if(st==\"micro\")jo10=-6,cin>>tan;\n    else if(st==\"nano\")jo10=-9,cin>>tan;\n    else if(st==\"pico\")jo10=-12,cin>>tan;\n    else if(st==\"femto\")jo10=-15,cin>>tan;\n    else if(st==\"ato\")jo10=-18,cin>>tan;\n    else if(st==\"zepto\")jo10=-21,cin>>tan;\n    else if(st==\"yocto\")jo10=-24,cin>>tan;\n    else tan=st;\n    jo10+=poi();\n    renumber();\n    cout<<renum<<\" * 10^\"<<jo10<<\" \"<<tan<<endl;\n   \n    renum.clear();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <cfloat>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <set>\n#include <map>\n#include <time.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\nstruct Info{\n\tchar buf[8];\n\tint value;\n};\nInfo info[20];\n\nvoid strcpy(char* to,char* str){\n\tfor(int i=0;str[i] != '\\0';i++){\n\t\tto[i] = str[i];\n\t\tto[i+1] = '\\0';\n\t}\n}\n\nbool strCmp(char* base, char* comp){\n\tint length1,length2;\n\tfor(length1=0;base[length1] != '\\0';length1++);\n\tfor(length2=0;comp[length2] != '\\0';length2++);\n\tif(length1 != length2)return false;\n\n\tfor(int i=0;base[i] != '\\0'; i++){\n\t\tif(base[i] != comp[i])return false;\n\t}\n\treturn true;\n}\n\nchar number[1050],prefix[51],unit[51];\n\n\nvoid func(){\n\n\tint num_digit,num_pow;\n\tbool not_0_FLG,period_FLG;\n\n\tscanf(\"%s\",number);\n\n\tif(number[0] == '0'){\n\t\tnum_digit = 0;\n\t\tnum_pow = 0;\n\t\tnot_0_FLG = false;\n\n\t\tfor(int i = 2; number[i] != '\\0'; i++){\n\n\t\t\tif(not_0_FLG == false){\n\t\t\t\tnum_pow -= 1;\n\t\t\t\tif(number[i] != '0'){\n\t\t\t\t\tnot_0_FLG = true;\n\t\t\t\t\tnum_digit++;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tnum_digit++;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tnum_digit = 0;\n\t\tnum_pow = -1;\n\t\tperiod_FLG = false;\n\n\t\tfor(int i = 0; number[i] != '\\0'; i++){\n\n\t\t\tif(number[i] != '.')num_digit++;\n\n\t\t\tif(period_FLG == false && number[i] == '.'){\n\t\t\t\tperiod_FLG = true;\n\t\t\t}else if(period_FLG == false){\n\t\t\t\tnum_pow++;\n\t\t\t}\n\t\t}\n\t}\n\n\tscanf(\"%s\",prefix);\n\n\tint prefix_value = 0;\n\tfor(int i = 0; i < 20; i++){\n\t\tif(strCmp(info[i].buf,prefix)){\n\t\t\tprefix_value = info[i].value;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(prefix_value == 0){\n\t\tstrcpy(unit,prefix);\n\t}else{\n\t\tscanf(\"%s\",unit);\n\t}\n\n\tnum_pow += prefix_value;\n\n\tint index = 0,output_digit = 0;\n\n\twhile(true){\n\t\tif(number[index] == '0'){\n\t\t\tindex++;\n\t\t}else if(number[index] == '.'){\n\t\t\tindex++;\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%c\",number[index++]);\n\toutput_digit = 1;\n\tif(num_digit > 1){\n\t\tprintf(\".\");\n\t\tfor(;number[index] != '\\0';index++){\n\t\t\tif(number[index] != '.'){\n\t\t\t\tprintf(\"%c\",number[index]);\n\t\t\t\toutput_digit++;\n\t\t\t}\n\t\t}\n\t}\n\tif(output_digit < num_digit){\n\t\tfor(int i = 1; output_digit+i != num_digit; i++)printf(\"0\");\n\t}\n\n\n\tprintf(\" * 10^%d %s\\n\",num_pow,unit);\n}\n\nint main(){\n\n\tinfo[0].value = 24;\n\tstrcpy(info[0].buf,\"yotta\");\n\n\tinfo[1].value = 21;\n\tstrcpy(info[1].buf,\"zetta\");\n\n\tinfo[2].value = 18;\n\tstrcpy(info[2].buf,\"exa\");\n\n\tinfo[3].value = 15;\n\tstrcpy(info[3].buf,\"peta\");\n\n\tinfo[4].value = 12;\n\tstrcpy(info[4].buf,\"tera\");\n\n\tinfo[5].value = 9;\n\tstrcpy(info[5].buf,\"giga\");\n\n\tinfo[6].value = 6;\n\tstrcpy(info[6].buf,\"mega\");\n\n\tinfo[7].value = 3;\n\tstrcpy(info[7].buf,\"kilo\");\n\n\tinfo[8].value = 2;\n\tstrcpy(info[8].buf,\"hecto\");\n\n\tinfo[9].value = 1;\n\tstrcpy(info[9].buf,\"deca\");\n\n\tinfo[10].value = -1;\n\tstrcpy(info[10].buf,\"deci\");\n\n\tinfo[11].value = -2;\n\tstrcpy(info[11].buf,\"centi\");\n\n\tinfo[12].value = -3;\n\tstrcpy(info[12].buf,\"milli\");\n\n\tinfo[13].value = -6;\n\tstrcpy(info[13].buf,\"micro\");\n\n\tinfo[14].value = -9;\n\tstrcpy(info[14].buf,\"nano\");\n\n\tinfo[15].value = -12;\n\tstrcpy(info[15].buf,\"pico\");\n\n\tinfo[16].value = -15;\n\tstrcpy(info[16].buf,\"femto\");\n\n\tinfo[17].value = -18;\n\tstrcpy(info[17].buf,\"ato\");\n\n\tinfo[18].value = -21;\n\tstrcpy(info[18].buf,\"zepto\");\n\n\tinfo[19].value = -24;\n\tstrcpy(info[19].buf,\"yocto\");\n\n\n\tint case_num;\n\tscanf(\"%d\",&case_num);\n\n\tfor(int i = 0; i < case_num; i++)func();\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint Tanni(string);\n\nint main(){\n  int i,j,n;\n  string st,str,str2;\n  cin >> n;\n  for(int t=0;t<n;t++){\n    int keta,a[1003],aa,dot;\n\n    cin >> st >> str;\n\n    dot = -1;\n    bool f = false;\n    for(i=0;i<st.size();i++){\n      if(st[i] == '.'){\n\ta[i] = -1;\n\tdot = i;\n\tf = true;\n      }\n      else a[i] = st[i] - '0';\n    }\n    aa = i;\n\n    if(dot == 0){\n      for(i=aa-1;i>=0;i--) a[i+1] = a[i];\n      a[0] = 0;\n      dot = 1;\n      aa++;\n    }\n    else if(dot == aa - 1) a[aa++] = 0;\n\n    if(!f){\n      a[aa] = -1;\n      dot = aa;\n      a[aa+1] = 0;\n      aa += 2;\n    }\n\n    keta = Tanni(str);\n    if(keta == 0) str2 = str;\n    else cin >> str2;\n\n    while(a[0] == 0 || dot != 1){\n      if(a[0] != 0 && a[1] == -1) break;\n\n      //for(dot=0;dot<aa;dot++) if(a[dot] == -1) break;\n      \n      if(a[0] == 0){\n\tketa--;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot+1];\n\ta[dot+1] = c;\n\tfor(j=0;j<aa-1;j++) a[j] = a[j+1];\n\ta[aa-1] = 0;\n\taa--;\n      }\n\n      else if(dot != 1){\n\tketa++;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot-1];\n\ta[dot-1] = c;\n\tdot--;\n      }\n    }\n    \n    if(!f) aa--;\n    if(aa - 1 == dot) aa--;\n\n    for(i=0;i<aa;i++){\n      if(i == dot) cout << \".\";\n      else cout << a[i];\n    }\n    \n    cout << \" * 10^\" << keta << \" \" << str2 << endl;\n  }\n  return 0;\n}\n\nint Tanni(string str){\n  if(str == \"yotta\") return 24;\n  else if(str == \"zetta\") return 21;\n  else if(str == \"exa\") return 18;\n  else if(str == \"peta\") return 15;\n  else if(str == \"tera\") return 12;\n  else if(str == \"giga\") return 9;\n  else if(str == \"mega\") return 6;\n  else if(str == \"kilo\") return 3;\n  else if(str == \"hecto\") return 2;\n  else if(str == \"deca\") return 1;\n  else if(str == \"deci\") return -1;\n  else if(str == \"centi\") return -2;\n  else if(str == \"milli\") return -3;\n  else if(str == \"micro\") return -6;\n  else if(str == \"nano\") return -9;\n  else if(str == \"pico\") return -12;\n  else if(str == \"femto\") return -15;\n  else if(str == \"ato\") return -18;\n  else if(str == \"zepto\") return -21;\n  else if(str == \"yocto\") return -24;\n  else return 0;\n};"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> m;\nstring s,t,u;\nint n,len;\nvoid init();\n\nint getx(){\n  int res=0,f=0;\n  for(int i=0;i<len;i++){\n    if('1'<=s[i]&&s[i]<='9')f=1;\n    if(f&&s[i]!='.')res++;\n  }\n  return res;\n}\n\nvoid solve(){\n  int p=-1,x=getx(),a;\n  for(int i=0;i<len;i++)\n    if(s[i]=='.')p=i;\n  if(p==-1)s+='.',p=len++;\n  if(m.find(t)!=m.end()){\n    a=m[t]; \n    for(int i=0;i<abs(a);i++)\n      if(a>0)\n\tif(p==len-1)s[len-1]='0',s+='.',p=len++;\n\telse swap(s[p],s[p+1]),p++;\n      else\n\tif(p==0)s[0]='0',s='.'+s,len++;\n\telse swap(s[p],s[p-1]),p--;\n  }\n  int idx=0,ansidx;\n  for(int i=0;i<len;i++)\n    if('1'<=s[i]&&s[i]<='9'){\n      idx=i;\n      break;\n    }\n  ansidx=p-idx-1;\n  if(p<idx)ansidx++;\n  int cnt=0,z=0;\n  for(int i=0;i<len;i++){\n    if(s[i]=='.')continue;\n    if(s[i]!='0'){\n      z=i;\n      break;\n    }\n  }\n  while(cnt<x){\n    if(cnt==1)cout<<'.';\n    if(s[z]!='.')cout<<s[z];\n    z++;\n    cnt++;\n  }\n  cout<<\" * 10^\"<<ansidx<<' '<<u<<endl;\n}\n\nint main(){\n  init();\n  cin>>n;\n  while(n--){\n    cin>>s>>t;\n    len=s.size();\n    if(m.find(t)!=m.end()){\n      cin>>u;\n    }else u=t;\n    solve();\n  }\n  return 0;\n}\n\nvoid init(){\n  m[\"yotta\"]=24; m[\"zetta\"]=21;\n  m[\"exa\"]=18; m[\"peta\"]=15;\n  m[\"tera\"]=12; m[\"giga\"]=9;\n  m[\"mega\"]=6; m[\"kilo\"]=3;\n  m[\"hecto\"]=2; m[\"deca\"]=1;\n  m[\"deci\"]=-1; m[\"centi\"]=-2;\n  m[\"milli\"]=-3; m[\"micro\"]=-6;\n  m[\"nano\"]=-9; m[\"pico\"]=-12;\n  m[\"femto\"]=-15; m[\"ato\"]=-18;\n  m[\"zepto\"]=-21; m[\"yocto\"]=-24;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n\nusing namespace std;\n\nmap<string, int> change;\n\nvoid Init()\n{\n    change[\"yotta\"] = 24, change[\"zetta\"] = 21, change[\"exa\"] = 18;\n    change[\"peta\"] = 15, change[\"tera\"] = 12, change[\"giga\"] = 9;\n    change[\"mega\"] = 6, change[\"kilo\"] = 3, change[\"hecto\"] = 2;\n    change[\"deca\"] = 1, change[\"deci\"] = -1, change[\"centi\"] = -2;\n    change[\"milli\"] = -3, change[\"micro\"] = -6, change[\"nano\"] = -9;\n    change[\"pico\"] = -12, change[\"femto\"] = -15, change[\"ato\"] = -18;\n    change[\"zepto\"] = -21, change[\"yocto\"] = -24;\n}\n\nvector<string> Parse(string s)\n{\n    int st = 0;\n    vector<string> a;\n\n    for (int i = 0; i < s.size(); ++i)\n        if (s[i] == ' ') {\n            a.push_back(s.substr(st, i - st));\n            st = i + 1;\n        }\n    return a;\n}\n\nvoid Solve(string s)\n{\n    vector<string> p = Parse(s);\n    int b = 0;\n\n    if (p.size() == 3)\n        b = change[p[1]];\n\n    if (p[0][0] == '0') { // 0.xxxx\n        int i;\n        for (i = 2; i < p[0].size(); ++i)\n            if (p[0][i] != '0')\n                break;\n        b -= (i - 1);\n    }\n    else {\n        int i;\n        for (i = 0; i < p[0].size(); ++i)\n            if (p[0][i] == '.')\n                break;\n        if (i != 1)\n            b += i - 1;\n    }\n\n    // Output\n    int tmp = 0;\n    while (p[0][tmp] == '0' || p[0][tmp] == '.')\n        ++tmp;\n    cout << p[0][tmp++];\n    if (tmp != p[0].size())\n        cout << '.';\n    for (int i = tmp; i < p[0].size(); ++i)\n        if (p[0][i] != '.')\n            cout << p[0][i];\n    cout << \" * 10^\" << b << ' ' << p[p.size() - 1] << endl;\n}\n\nint main()\n{\n    Init();\n\n    int t;\n    cin >> t;\n    cin.ignore();\n    while (t--) {\n        string s;\n\n        getline(cin, s);\n        s += \" \";\n        Solve(s);\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\n\nstatic string name[20] = {\"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\", \"giga\", \"mega\", \"kilo\", \"hecto\", \"deca\", \"deci\", \"centi\", \"milli\", \"micro\", \"nano\", \"pico\", \"femto\", \"ato\", \"zepto\", \"yocto\"};\nstatic int T[20] = {24, 21, 18, 15, 12, 9, 6, 3, 2, 1, -1, -2, -3, -6, -9, -12, -15, -18, -21, -24};\nbool isW(string n){\n  for ( int i = 0; i < 21; i++ )\n    if ( name[i] == n ) return true;\n  return false;\n}\n\nint getW(string pre){\n  for ( int i = 0; i < 20; i++ ){\n    if ( name[i] == pre )  return T[i];\n  }\n}\n\nint normalize(string &base, int w){\n  if ( base.find('.') == string::npos) base += '.';\n  int p = base.find('.');\n  for ( int i = p; i >=2; i-- ) { swap(base[i], base[i-1]); w++;}\n  while( base[0] == '0' ){\n    base.erase(base.begin());\n    swap(base[0], base[1]);\n    w--;\n  }\n  if ( base[base.size()-1] == '.' ) base.erase(base.end()-1);\n  return w;\n}\n\nvoid compute(){\n  string base, unit;\n  int w = 0;\n  cin >> base >> unit;\n  if ( isW(unit) ) { w = getW(unit); cin >> unit; }\n  w = normalize(base, w);\n  cout << base << \" * 10^\" << w << \" \" << unit << endl;\n}\n\nmain(){\n  int tcase; cin >> tcase;\n  for ( int i = 0; i < tcase; i++ ) compute();\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k,x;\n  cin >> n;\n  while(n--){\n    x=0;\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    while(con(s2)!=0) {\n      x+=con(s2);\n      //cout << x << endl;\n      cin >> s2;\n    }\n    s3=s2;\n    if(s1[0]=='0'){\n      k=1; \n      j=0;\n      while(s1[k]!='.') {\n        k++;\n        j++;\n      }\n      k++;\n      while(s1[k]=='0') {\n        k++;\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << x-(k-1)+j;\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      //cout << (int)x+(int)(s1.size()-1)  << endl;\n      if(f) cout << \" * 10^\" << (int)x+(int)(s1.size()-1);\n      else cout << \" * 10^\" << x+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\n#include <cstdlib>\nusing namespace std;\n\nint main()\n{\n  map<string, int> unit;\n  unit[\"yotta\"] = 24;\n  unit[\"zetta\"] = 21;\n  unit[\"exa\"] = 18;\n  unit[\"peta\"] = 15;\n  unit[\"tera\"] = 12;\n  unit[\"giga\"] = 9;\n  unit[\"mega\"] = 6;\n  unit[\"kilo\"] = 3;\n  unit[\"hecto\"] = 2;\n  unit[\"deca\"] = 1;\n  unit[\"deci\"] = -1;\n  unit[\"centi\"] = -2;\n  unit[\"milli\"] = -3;\n  unit[\"micro\"] = -6;\n  unit[\"nano\"] = -9;\n  unit[\"pico\"] = -12;\n  unit[\"femto\"] = -15;\n  unit[\"ato\"] = -18;\n  unit[\"zepto\"] = -21;\n  unit[\"yocto\"] = -24;\n\n  string s;\n  getline(cin, s);\n  int n = atoi(s.c_str());\n  while (n--) {\n    getline(cin, s);\n    int e = 0;\n    string num = s.substr(0, s.find_first_of(\" \"));\n    s = s.substr(s.find_first_of(\" \")+1);\n\n    string::size_type dot = num.find_first_of(\".\");\n    if (num[0] == '0') {\n      string::size_type nonzero = num.find_first_of(\"123456789\");\n      e -= nonzero-dot;\n      num = num.substr(nonzero);\n    } else {\n      if (dot == string::npos) {\n\te += num.size()-1;\n      } else {\n\te += dot-1;\n\tnum.erase(dot, 1);\n      }\n    }\n\n    if (num.size() >= 2)\n      num.insert(1, \".\");\n\n    if (s.find_first_of(\" \") != string::npos) {\n      e += unit[s.substr(0, s.find_first_of(\" \"))];\n      s = s.substr(s.find_first_of(\" \")+1);\n    }\n\n    cout << num << \" * 10^\" << e << \" \" << s << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <sstream>\n#include <iostream>\n#include <map>\nusing namespace std;\n\nmap<string, int> prefix;\n\nvoid init(){\n    prefix[\"yotta\"] = 24;\n    prefix[\"zetta\"] = 21;\n    prefix[\"exa\"] = 18;\n    prefix[\"peta\"] = 15;\n    prefix[\"tera\"] = 12;\n    prefix[\"giga\"] = 9;\n    prefix[\"mega\"] = 6;\n    prefix[\"kilo\"] = 3;\n    prefix[\"hecto\"] = 2;\n    prefix[\"deca\"] = 1;\n    prefix[\"deci\"] = -1;\n    prefix[\"centi\"] = -2;\n    prefix[\"milli\"] = -3;\n    prefix[\"micro\"] = -6;\n    prefix[\"nano\"] = -9;\n    prefix[\"pico\"] = -12;\n    prefix[\"femto\"] = -15;\n    prefix[\"ato\"] = -18;\n    prefix[\"zepto\"] = -21;\n    prefix[\"yocto\"] = -24;\n}\n\nint main(){\n    init();\n    int N;\n    for(cin >> N, cin.ignore(); N--;){\n        stringstream ss;\n        string str, tk1, tk2;\n        int exp = 0;\n        getline(cin, str);\n        ss << str;\n        ss >> tk1 >> tk2;\n        if(prefix.find(tk2) != prefix.end()){\n            exp += prefix[tk2];\n            ss >> tk2;\n        }\n        bool av = false, dot = false;\n        string mt;\n        for(string::iterator it = tk1.begin(); it != tk1.end(); ++it){\n            if(*it == '.'){\n                dot = true;\n            }\n            if(av && !dot){\n                ++exp;\n            }\n            if(*it != '.' && (av || '1' <= *it && *it <= '9')){\n                av = true;\n                mt.push_back(*it);\n            }\n            if(*it == '0' && !av){\n                --exp;\n            }\n        }\n        if(mt.size() > 1){\n            mt.insert(1, 1, '.');\n        }\n        cout << mt << \" * 10^\" << exp << ' ' << tk2 << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <functional>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <vector>\n#include <list>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <bitset>\n#include <climits>\n\n#define all(c) (c).begin(), (c).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define pb(e) push_back(e)\n#define mp(a, b) make_pair(a, b)\n#define fr first\n#define sc second\n\nconst int INF=100000000;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nusing namespace std;\ntypedef pair<int ,int > P;\ntypedef long long ll;\n\nmap<string,int> prefix;\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >>setprecision(30) >> t;\n}\n\nvoid add_zero(string &s) {\n    string zero=\"\";\n    rep(i,30) zero+=\"0\";\n    s=zero+s+zero;\n}\n\nvoid split(string line,string &s1,string &s2,string &s3) {\n    int i;\n    for(i=0;i<line.size();i++) {\n        if(line[i]==' ') break;\n        s1+=line[i];\n    }\n    i++;\n    for(;i<line.size();i++) {\n        if(line[i]==' ') break;\n        if(line[i]=='\\n') break;\n        s2+=line[i];\n    }\n    if(i!=line.size()-1) {\n        i++;\n        for(;i<line.size();i++) {\n            if(line[i]=='\\n') break;\n            s3+=line[i];\n        }\n    }\n}\n\nvoid solve() {\n    string line;\n    getline(cin,line);\n    string s1,s2,s3;\n    split(line,s1,s2,s3);\n    if(s3==\"\") {\n        s3=s2;\n        s2=\"\";\n    }\n    if(s1.find('.')==-1) s1+=\".\";\n    int cnt=0;\n\n    int pos=s1.find('.');\n    if(s1[0]=='0') {\n        for(int i=pos;i<s1.size()-1;i++) {\n            cnt--;\n            swap(s1[i],s1[i+1]);\n        }\n    }\n    else {\n        for(int i=pos;i>=2;i--) {\n            cnt++;\n            swap(s1[i],s1[i-1]);\n        }\n    }\n    while(s1[0]=='0') s1.erase(0,1);\n    if(s1[s1.size()-1]=='.') {\n        if(s1.size()>2) {\n            cnt++;\n            int t=s1.size()-1;\n            swap(s1[t],s1[t-1]);\n        }\n        else s1.erase(s1.size()-1,1);\n    }\n    cout<<s1<<\" * 10^\"<<cnt+prefix[s2]<<\" \"<<s3<<endl;\n\n\n}\n\nint main() {\n    prefix[\"yotta\"] = 24;\n    prefix[\"zetta\"] = 21;\n    prefix[\"exa\"] = 18;\n    prefix[\"peta\"] = 15;\n    prefix[\"tera\"] = 12;\n    prefix[\"giga\"] = 9;\n    prefix[\"mega\"] = 6;\n    prefix[\"kilo\"] = 3;\n    prefix[\"hecto\"] = 2;\n    prefix[\"deca\"] = 1;\n    prefix[\"\"] = 0;\n    prefix[\"deci\"] = -1;\n    prefix[\"centi\"] = -2;\n    prefix[\"milli\"] = -3;\n    prefix[\"micro\"] = -6;\n    prefix[\"nano\"] = -9;\n    prefix[\"pico\"] = -12;\n    prefix[\"femto\"] = -15;\n    prefix[\"ato\"] = -18;\n    prefix[\"zepto\"] = -21;\n    prefix[\"yocto\"] = -24;\n    int t;\n    cin>>t;\n    cin.ignore();\n    while(t-->0) {\n        solve();\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n\nmap<string, int> mp = {{\"yotta\",24},{\"zetta\",21},{\"exa\",18},{\"peta\",15},{\"tera\",12},{\"giga\",9},{\"mega\",6},{\"kilo\",3},{\"hecto\",2},{\"deca\",1},{\"deci\",-1},{\"centi\",-2},{\"milli\",-3},{\"micro\",-6},{\"nano\",-9},{\"pico\",-12},{\"femto\",-15},{\"ato\",-18},{\"zepto\",-21},{\"yocto\",-24}};\n\nint Tc;\n\nint main() {\n  \n  cin >> Tc;\n  rep(_, Tc) {\n    string s, SI, ti;\n    cin >> s >> SI;\n    if(mp.find(SI) == mp.end()) {\n      ti = SI;\n      SI.clear();\n    } else {\n      cin >> ti;\n    }\n    \n    \n    int b = 0;\n    if(s.size() > 2 && s.substr(0, 2) == \"0.\") {\n      int pos = 2;\n      while(s[pos] == '0')\n\tpos++;\n\n      b = 1 - pos + mp[SI];\n    }\n    else {\n      int pos = find(s.begin(), s.end(), '.') - s.begin();\n      b = pos - 1 + mp[SI];\n    }\n    \n    int N = s.size();\n    \n    if(s.size() > 2 && s.substr(0, 2) == \"0.\") {\n      int pos = 2;\n      while(s[pos] == '0')\n\tpos ++;\n      cout << s[pos++];\n      if(pos < N) {\n\tcout << \".\";\n\twhile(pos < N) cout << s[pos++];\n      }\n    }\n    else {\n      rep(i, N) {\n\tif(i == 1) cout << \".\";\n\tif(s[i] == '.') continue;\n\tcout << s[i];\n      }\n    }\n    cout << \" * 10^\" << b << \" \" << ti << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int h,i;\n  int e,n,p;\n  string s,t,u;\n  map<string,int> a;\n  a.clear();\n  a[\"yotta\"]=24;\n  a[\"zetta\"]=21;\n  a[\"exa\"]=18;\n  a[\"peta\"]=15;\n  a[\"tera\"]=12;\n  a[\"giga\"]=9;\n  a[\"mega\"]=6;\n  a[\"kilo\"]=3;\n  a[\"hecto\"]=2;\n  a[\"deca\"]=1;\n  a[\"deci\"]=-1;\n  a[\"centi\"]=-2;\n  a[\"milli\"]=-3;\n  a[\"micro\"]=-6;\n  a[\"nano\"]=-9;\n  a[\"pico\"]=-12;\n  a[\"femto\"]=-15;\n  a[\"ato\"]=-18;\n  a[\"zepto\"]=-21;\n  a[\"yocto\"]=-24;\n  cin>>n;\n  for(h=0;h<n;h++){\n    cin>>s>>t;\n    if(a[t])\n      cin>>u;\n    else\n      u=t;\n    while(s[0]=='0')\n      s.erase(0,1);\n    for(i=0;'1'>s[i]||s[i]>'9';i++);\n    if((p=s.find('.'))==(int)string::npos){\n      e=(int)s.length()-i-1;\n      s.insert(i+1,1,'.');\n    }else{\n      if(p>i){\n\te=p-i-1;\n\ts.erase(p,1);\n\ts.insert(i+1,1,'.');\n      }else{\n\te=p-i;\n\ts.erase(p,1);\n\ts.insert(i,1,'.');\n      }\n    }\n    while(s[0]=='0')\n      s.erase(0,1);\n    if(s[s.length()-1]=='.')\n      s.erase(s.length()-1,1);\n    e+=a[t];\n    cout<<s<<\" * 10^\"<<e<<\" \"<<u<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nmap<string,int> mp;\nvoid init(){\n  mp[\"yotta\"]=24;\n  mp[\"zetta\"]=21;\n  mp[\"exa\"]=18;\n  mp[\"peta\"]=15;\n  mp[\"tera\"]=12;\n  mp[\"giga\"]=9;\n  mp[\"mega\"]=6;\n  mp[\"kilo\"]=3;\n  mp[\"hecto\"]=2;\n  mp[\"deca\"]=1;\n  mp[\"deci\"]=-1;\n  mp[\"centi\"]=-2;\n  mp[\"milli\"]=-3;\n  mp[\"micro\"]=-6;\n  mp[\"nano\"]=-9;\n  mp[\"pico\"]=-12;\n  mp[\"femto\"]=-15;\n  mp[\"ato\"]=-18;\n  mp[\"zepto\"]=-21;\n  mp[\"yocto\"]=-24;\n}\n\nstring num,A,B;\n\nbool check(){\n  if(num.size()==1)return true;\n  if(num[0]!='0'&&num[1]=='.')return true;\n  return false;\n}\n\nvoid mul(){\n  assert(num[0]=='0'&&num[1]=='.');\n\n  if(num.size()==3){\n    num=num.substr(2);\n  }else if(num[2]=='0'){\n    num=\"0.\"+num.substr(3);\n  }else{\n    swap(num[2],num[1]);\n    num=num.substr(1);\n  }\n}\n\nvoid divi(){\n  int id=-1,len=num.size();\n  for(int i=0;i<len;i++){\n    if(num[i]=='.')id=i;\n  }\n  if(id==-1){\n    num.push_back('.');\n    swap(num[len],num[len-1]);\n  }else{\n    swap(num[id],num[id-1]);\n  }\n}\n\nint main(){\n  init();\n  int T;\n  cin>>T;\n  cin.ignore();\n  while(T--){\n    string tmp,str;\n    getline(cin,tmp);\n    stringstream ss(tmp);\n    vector< string > t;\n    while(ss>>str){\n      t.push_back(str);\n    }\n    int ans;    \n    num=t[0];\n    if(t.size()==2){\n      B=t[1];\n      ans=0;\n    }else{\n      B=t[2];\n      ans=mp[t[1]];\n    }\n\n    while(!check()){\n      if(num[0]=='0'){\n        mul();\n        ans--;\n      }else{\n        divi();\n        ans++;\n      }\n\n      //cout<<num<<' '<<'?'<<endl;\n    }\n    cout<<num<<\" * 10^\"<<ans<<' '<<B<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define repd0(i,n) for(i=(n)-1;i>=0;i--)\n#define repn0(i,m,n) for(i=(m);i<=(n);++i)\n#define repnd0(i,m,n) for(i=(n)-1;i>=(m);i--)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nstring st[20]={\n\"yotta\",\n\"zetta\",\n\"exa\",\n\"peta\",\n\"tera\",\n\"giga\",\n\"mega\",\n\"kilo\",\n\"hecto\",\n\"deca\",\n\"deci\",\n\"centi\",\n\"milli\",\n\"micro\",\n\"nano\",\n\"pico\",\n\"femto\",\n\"ato\",\n\"zepto\",\n\"yocto\"\n};\n\nint offset[20]={\n24,\n21,\n18,\n15,\n12,\n9,\n6,\n3,\n2,\n1,\n-1,\n-2,\n-3,\n-6,\n-9,\n-12,\n-15,\n-18,\n-21,\n-24\n};\n\nint main() {\n\tint n=in();\n\tstring a,b;\n\trep(i,n){\n\t\tcin>>a>>b;\n\t\tbool no=true;\n\t\tint off=0;\n\t\trep(i,20){\n\t\t\tif(st[i]==b){\n\t\t\t\tno=false;\n\t\t\t\toff=offset[i];\n\t\t\t}\n\t\t}\n\t\tif(!no){\n\t\t\tcin>>b;\n\t\t}\n\t\tint i;\n\t\trep0(i,sz(a)){\n\t\t\tif(a[i]=='.'){\n\t\t\t\toff+=i-1;\n\t\t\t\ta=a.substr(0,i)+a.substr(i+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i==sz(a)){\n\t\t\toff+=sz(a)-1;\n\t\t}\n\t\trep0(i,sz(a)){\n\t\t\tif(a[i]!='0'){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i<sz(a)){\n\t\t\ta=a.substr(i);\n\t\t\toff-=i;\n\t\t}\n\t\tif(sz(a)>1)a=a.substr(0,1)+\".\"+a.substr(1);\n\t\tcout<<a<<\" * \"<<\"10^\"<<off<<\" \"<<b<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint Tanni(string);\nint Keta(string);\nint calc(string, int);\n\nmain(){\n  string num;\n  string ht;\n  string t;\n  int n;\n  while(cin >> n){\n    for(int count=0;count<n;count++){\n      cin >> num;\n      cin >> t;\n      char c;\n      bool fht=false;\n      scanf(\"%c\", &c);\n      if(c!='\\n'){\n\tht=t;\n\tcin >> t;\n\tfht=true;\n      }\n      int keta=Keta(num);\n      int nht=0;\n      if(fht) nht+=Tanni(ht);\n      nht+=calc(num, keta);\n      string ans=\"\";\n      for(int i=0;i<num.size();i++){\n\tif(num[i]=='.') continue;\n\tans+=num[i];\n      }\n      for(int i=(ans.size()-keta), j=0;i<ans.size();i++, j++){\n\tif(j==1) cout << '.';\n\tcout << ans[i];\n      }\n      printf(\" * 10^%d \", nht);\n      cout << t << endl;\n    }\n  }\n  return 0;\n}\n\nint Tanni(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n}\n\nint Keta(string s){\n  int count;\n  bool p;\n  if(s[0]=='0'){\n    p=false;\n    for(int i=1;i<s.size();i++){\n      if(s[i]=='.'){\n\tp=true;\n\tcontinue;\n      }\n      if(s[i]!='0' && p){\n\treturn s.size()-i;\n      }else if(s[i]!='0' && !p){\n\tfor(int j=i+1;j<s.size();j++){\n\t  if(s[j]=='.'){\n\t    return s.size()-i-1;\n\t  }\n\t}\n\treturn s.size()-1;\n      }\n    }\n  }else{\n    p=false;\n    for(int i=0;i<s.size();i++){\n      if(s[i]=='.') p=true;\n    }\n    if(p) return s.size()-1;\n    else return s.size();\n  }\n}\n\nint calc(string s, int keta){\n  bool p=false;\n  int t=-1;\n  for(int i=0;i<s.size();i++){\n    if(s[i]=='.'){\n      p=true;\n      t=i;\n      break;\n    }\n  }\n  if(p){\n    if((s.size()-keta)>t){\n      return 1-s.size()+keta;\n    }else if((s.size()-keta)==t){\n      return -1; \n    }else {\n      return t-1;\n    }\n  }else{\n    return s.size()-1;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nmap<string, int> M;\n\nvoid input(string &s, string &a, string &b, string &c, string &d){\n  int i = 0;\n  while(s[i] != '.' && s[i] != ' ') a += s[i++];\n  if(s[i] == '.'){\n    ++i;\n    while(s[i] != ' ') b += s[i++];\n  }\n  ++i;\n  while(i < s.length() && s[i] != ' ') c += s[i++];\n  if(i < s.length() && s[i] == ' '){\n    ++i;\n    while(i < s.length()) d += s[i++];\n  }\n  if(d == \"\"){ d = c; c = \"\"; }\n}\n\nvoid shift_left(string &a, string &b){\n  if(b == \"\") a += \"0\";\n  else{\n    a += b.substr(0, 1);\n    b = b.substr(1);\n  }\n}\n\nvoid shift_right(string &a, string &b){\n  if(a == \"\") b = \"0\" + b;\n  else{\n    b = a.substr(a.length() - 1) + b;\n    a = a.substr(0, a.length() - 1);\n  }\n}\n\nint check(string a, string b){\n  int res = a.length() + b.length();\n  bool f = false;\n  for(int i = 0; i < a.length(); ++i, --res) if(a[i] != '0') { f = true; break; }\n  if(!f) for(int i = 0; i < b.length(); ++i, --res) if(b[i] != '0') { f = true; break; }\n  return res;\n}\n\nint main() {\n  M[\"yotta\"] = 24; M[\"zetta\"] = 21; M[\"exa\"] = 18; M[\"peta\"] = 15; M[\"tera\"] = 12; M[\"giga\"] = 9; M[\"mega\"] = 6; M[\"kilo\"] = 3; M[\"hecto\"] = 2; M[\"deca\"] = 1;\n  M[\"deci\"] = -1; M[\"centi\"] = -2; M[\"milli\"] = -3; M[\"micro\"] = -6; M[\"nano\"] = -9; M[\"pico\"] = -12; M[\"femto\"] = -15; M[\"ato\"] = -18; M[\"zepto\"] = -21; M[\"yocto\"] = -24;\n  int T; cin >>T;\n  string s, a, b, c, d;\n  getline(cin, s);\n  while(T--){\n    a = b = c = d = \"\";\n    getline(cin, s);\n    input(s, a, b, c, d);\n    int n = check(a, b);\n    if(c != \"\"){\n      REP(i, abs(M[c])){\n        if(M[c] >= 0) shift_left(a, b);\n        else shift_right(a, b);\n      }\n    }\n    while(a.length() > 0 && a[0] == '0') a = a.substr(1);\n    int ans = 0;\n    while(a.length() != 1){\n      if(a.length() == 0) { ans--; shift_left(a, b); }\n      else { ans++; shift_right(a, b); }\n    }\n    while(n != check(a, b)) b = b.substr(0, (int)b.length() - 1);\n    cout <<a <<(b == \"\" ? \"\" : \".\") <<b <<\" * 10^\" <<ans <<\" \" <<d <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<map>\nusing namespace std;\n\nmap<string,int> prefix;\n\nbool eqorgr10(const string &t){\n  if( t.length() > 1 ){\n    return t[1]!='.';\n  }else return false;\n}\n\nbool less1(const string &t){\n  return t[0] == '0';\n}\n\nint shift_floatp(string &t){\n  int ret = 0;\n  if( eqorgr10(t) ){\n    while(eqorgr10(t)){\n      ++ret;\n      unsigned int pos = t.find('.');\n      if( pos != string::npos ){\n\tswap(t[pos-1],t[pos]);\n\tif( t[0] == '.' ) t.insert(t.begin(),'0');\n      }else{\n\tt.insert(t.end()-1,'.');\n      }\n    }\n  }else if(less1(t)){\n    while(less1(t)){\n      --ret;\n      unsigned int pos = t.find('.');\n      if( pos != string::npos ){\n\tswap(t[pos],t[pos+1]);\n\tt.erase(t.begin());\n      }\n    }\n  }\n  if(t[(int)t.length()-1]=='.'){\n    t.erase(t.end()-1);\n  }\n  return ret;\n}\n\nint main()\n{\n  prefix[\"yotta\"] = 24;\n  prefix[\"zetta\"] = 21;\n  prefix[\"exa\"] = 18;\n  prefix[\"peta\"] = 15;\n  prefix[\"tera\"] = 12;\n  prefix[\"giga\"] = 9;\n  prefix[\"mega\"] = 6;\n  prefix[\"kilo\"] = 3;\n  prefix[\"hecto\"] = 2;\n  prefix[\"deca\"] = 1;\n  prefix[\"deci\"] = -1;\n  prefix[\"centi\"] = -2;\n  prefix[\"milli\"] = -3;\n  prefix[\"micro\"] = -6;\n  prefix[\"nano\"] = -9;\n  prefix[\"pico\"] = -12;\n  prefix[\"femto\"] = -15;\n  prefix[\"ato\"] = -18;\n  prefix[\"zepto\"] = -21;\n  prefix[\"yocto\"] = -24;\n  int T;\n  cin >> T;\n  for(int tc=1;tc<=T;++tc){\n    int b=0;\n    string a;\n    string pre;\n    string unit;\n    cin >> a >> pre;\n    if( prefix.find(pre) != prefix.end() ){\n      cin >> unit;\n    }else{\n      unit = pre;\n      pre = \"\";\n    }\n    b += prefix[pre] + shift_floatp( a );\n    cout << a << ' ' << \"* 10^\" << b << ' ' << unit << endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint Tanni(string);\n\nint main(){\n  int i,j,n,dot;\n  string st,str,str2;\n  cin >> n;\n  for(int t=0;t<n;t++){\n    int keta,yuu,a[1003],aa;\n\n    cin >> st >> str;\n\n    bool f = false;\n    for(i=0;i<st.size();i++){\n      if(st[i] == '.'){\n\ta[i] = -1;\n\tdot = i;\n\tf = true;\n      }\n      else a[i] = st[i] - '0';\n    }\n    aa = i;\n    if(!f){\n      a[i] = -1;\n      dot = i;\n      a[i+1] = 0;\n      aa += 2;\n    }\n\n    keta = Tanni(str);\n    if(keta == 0) str2 = str;\n    else cin >> str2;\n\n    while(a[0] == 0 || a[1] != -1){\n      if(a[0] != 0 && a[1] == -1) break;\n\n      //for(dot=0;dot<aa;dot++) if(a[dot] == -1) break;\n      \n      if(a[0] == 0){\n\tketa--;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot+1];\n\ta[dot+1] = c;\n\tfor(j=0;j<aa-1;j++) a[j] = a[j+1];\n\taa--;\n      }\n\n      else if(a[1] != 1){\n\tketa++;\n\tint c;\n\tc = a[dot];\n\ta[dot] = a[dot-1];\n\ta[dot-1] = c;\n\tdot--;\n      }\n    }\n    \n    if(!f) aa--;\n    if(a[aa-1] == -1) aa--;\n\n    for(i=0;i<aa;i++){\n      if(a[i] == -1) cout << \".\";\n      else cout << a[i];\n    }\n    \n    cout << \" * 10^\" << keta << \" \" << str2 << endl;\n  }\n  return 0;\n}\n\nint Tanni(string str){\n  if(str == \"yotta\") return 24;\n  else if(str == \"zetta\") return 21;\n  else if(str == \"exa\") return 18;\n  else if(str == \"peta\") return 15;\n  else if(str == \"tera\") return 12;\n  else if(str == \"giga\") return 9;\n  else if(str == \"mega\") return 6;\n  else if(str == \"kilo\") return 3;\n  else if(str == \"hecto\") return 2;\n  else if(str == \"deca\") return 1;\n  else if(str == \"deci\") return -1;\n  else if(str == \"centi\") return -2;\n  else if(str == \"milli\") return -3;\n  else if(str == \"micro\") return -6;\n  else if(str == \"nano\") return -9;\n  else if(str == \"pico\") return -12;\n  else if(str == \"femto\") return -15;\n  else if(str == \"ato\") return -18;\n  else if(str == \"zepto\") return -21;\n  else if(str == \"yocto\") return -24;\n  else return 0;\n};"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint con(string s){\n  if(s==\"yotta\") return 24;\n  if(s==\"zetta\") return 21;\n  if(s==\"exa\") return 18;\n  if(s==\"peta\") return 15;\n  if(s==\"tera\") return 12;\n  if(s==\"giga\") return 9;\n  if(s==\"mega\") return 6;\n  if(s==\"kilo\") return 3;\n  if(s==\"hecto\") return 2;\n  if(s==\"deca\") return 1;\n  if(s==\"deci\") return -1;\n  if(s==\"centi\") return -2;\n  if(s==\"milli\") return -3;\n  if(s==\"micro\") return -6;\n  if(s==\"nano\") return -9;\n  if(s==\"pico\") return -12;\n  if(s==\"femto\") return -15;\n  if(s==\"ato\") return -18;\n  if(s==\"zepto\") return -21;\n  if(s==\"yocto\") return -24;\n  return 0;\n}\nint main(){\n  int n;\n  int i,j,k,x;\n  cin >> n;\n  while(n--){\n    x=0;\n    string s1=\"\",s2=\"\",s3=\"\";\n    cin >> s1 >> s2;\n    while(con(s2)!=0) {\n      x+=con(s2);\n      //cout << x << endl;\n      cin >> s2;\n    }\n    s3=s2;\n    if(s1[0]=='0'){\n      k=2;\n      while(s1[k]=='0') {\n        k++;\n      }\n      cout << s1[k];\n      if(k!=s1.size()-1){\n        cout << \".\";\n        for(i=k+1;i<s1.size();i++) cout << s1[i];        \n      }\n      cout << \" * 10^\" << x-(k-1);\n      cout << \" \" << s3 << endl;\n    }else{\n      k=1;\n      bool f=false;\n      if(s1.size()==1) {\n        f=true;\n        cout << s1[0];\n      }else{\n        while(s1[k]!='.') {\n          k++;\n          if(k>=s1.size()-1) {\n            f=true;\n            break;\n          }\n        }\n        cout << s1[0];\n        if(k!=1){\n          cout << \".\";\n          for(i=1;i<k;i++) cout << s1[i]; \n          if(f) cout << s1[k];  \n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }else{\n          cout << \".\";\n          for(i=k+1;i<s1.size();i++) cout << s1[i];   \n        }\n      }\n      //cout << (int)x+(int)(s1.size()-1)  << endl;\n      if(f) cout << \" * 10^\" << (int)x+(int)(s1.size()-1);\n      else cout << \" * 10^\" << x+k-1;\n      cout << \" \" << s3 << endl;\n    }\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <map>\n#include <cassert>\nusing namespace std;\n\nmap<string, int> pre;\n\nstd::vector<string> splitAll(string s,string t){\n  std::vector<string> v;\n  for(int p=0; (p = s.find(t)) != s.npos; ){\n    v.push_back(s.substr(0,p));\n    s=s.substr(p+t.size());\n  }\n  v.push_back(s);\n  return v;\n}\n\nint significantFigure(string num) {\n    int p = 0;\n    bool fp = false;\n    while(num[p] == '0' || num[p] == '.') {\n        if(num[p] == '.') fp = true;\n        p++;\n    }\n    return num.length()-p-((num.find('.')!=string::npos && !fp)?1:0);\n}\n\nstring normalize(string num, string prefix, int sigF) {\n    int p,np,power;\n    stringstream ss;\n    assert(sigF > 0);\n\n    for(np=0; np<num.length(); ++np) if(num[np] != '0' && num[np] != '.') break;\n    for(p=0; p<num.length(); ++p) if(num[p] == '.') break;\n\n    \n    power = p-np;\n    if(p > np) power--;\n\n    num = num.substr(np);\n    for(int i=0; i<num.length(); ++i) {\n        if(num[i] == '.') {\n            num = num.substr(0,i) + num.substr(i+1);\n            break;\n        }\n    }\n    //cout<<num<<\" \"<<sigF<<\" \"<<power<<endl;\n    ss << power + pre[prefix];\n    if(num.length() == 1 && sigF == 1) return num + \" * 10^\" + ss.str();\n    else return num.substr(0,1) + \".\" + num.substr(1) + \" * 10^\" + ss.str();\n}\n\nint main() {\n    int n;\n    double cc;\n    string input,prefix,unit,num;\n\n    pre[\"yotta\"] = 24; pre[\"zetta\"] = 21; pre[\"exa\"] = 18;\n    pre[\"peta\"] = 15; pre[\"tera\"] = 12; pre[\"giga\"] = 9;\n    pre[\"mega\"] = 6; pre[\"kilo\"] = 3; pre[\"hecto\"] = 2;\n    pre[\"deca\"] = 1; pre[\"deci\"] = -1; pre[\"centi\"] = -2;\n    pre[\"milli\"] = -3; pre[\"micro\"] = -6; pre[\"nano\"] = -9;\n    pre[\"pico\"] = -12; pre[\"femto\"] = -15; pre[\"ato\"] = -18;\n    pre[\"zepto\"] = -21; pre[\"yocto\"] = -24; pre[\"\"] = 0;\n\n    cin>>n; cin.ignore();\n\n    for(int i=0; i<n; ++i) {\n        getline(cin, input);\n        vector<string> splited = splitAll(input, \" \");\n        num = splited[0];\n        if(splited.size() >= 3) {\n            prefix = splited[1];\n            unit = splited[2];\n        }else{\n            prefix = \"\";\n            unit = splited[1];\n        }\n\n        int sigF = significantFigure(num);\n        //cout<<num<<\" \"<<unit<<\" -> \"<<sigF<<endl;\n        num = normalize(num, prefix, sigF);\n        cout<<num<<\" \"<<unit<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  int n,t[20];\n  for(int i=0;i<8;i++)t[i]=24-i*3;\n  t[8]=2;\n  t[9]=1;\n  t[10]=-1;\n  t[11]=-2;\n  for(int i=1;i<9;i++)t[11+i]=-i*3;\n  string p[20]={\n    \"yotta\",\n    \"zetta\",\n    \"exa\",\n    \"peta\",\n    \"tera\",\n    \"giga\",\n    \"mega\",\n    \"kilo\",\n    \"hecto\",\n    \"deca\",\n    \"deci\",\n    \"centi\",\n    \"milli\",\n    \"micro\",\n    \"nano\",\n    \"pico\",\n    \"femto\",\n    \"ato\",\n    \"zepto\",\n    \"yocto\"\n  };\n  \n  cin>>n;\n  while(n--){\n    string a,b,c;\n    cin>>a;\n    cin>>b;\n    bool f=0;\n    for(int i=0;i<20;i++)if(b==p[i])f=1;\n    if(f)cin>>c;\n    else c=b;\n\n    int cn=-1;\n    if(a[0]=='0'){\n      int i=2;\n      while(i<a.size()&&a[i++]=='0')cn--;\n      for(int j=i-1;j<a.size();j++){\n\tif(j==i)cout<<\".\";\n\tcout<<a[j];\n      }\n    }\n    else{\n      int i=0;\n      while(i<a.size()&&a[i++]!='.')cn++;\n      for(int j=0;j<a.size();j++){\n\tif(j==i-1)continue;\n\tif(j==1)cout<<\".\";\n\tcout<<a[j];\n      }\n    }\n    for(int i=0;i<20;i++)if(p[i]==b)cn+=t[i];\n    cout<<\" * 10^\"<<cn<<\" \"<<c<<endl;\n\t\n  }    \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nmap<string,int> h;\n\n// 空白区切りで文字列を分割して返す\nvector<string> split_words(string s){\n\tbool flag = false;\n\tvector<string> vs;\n\tstring str;\n\ts.push_back(' ');\n\tfor(int i=0 ; i < s.size() ; i++ ){\n\t\tchar c = s[i];\n\t\tif( flag == false ){\n\t\t\tif( c != ' '){\n\t\t\t\tflag = true;\n\t\t\t\tstr.clear();\n\t\t\t\tstr.push_back( c );\n\t\t\t}\n\t\t}else{\n\t\t\tif( c != ' ' ){\n\t\t\t\tstr.push_back( c );\n\t\t\t}\n\t\t\tif( c == ' ' ){\n\t\t\t\tflag = false;\n\t\t\t\tvs.push_back( str );\n\t\t\t\tstr.clear();\n\t\t\t}\n\t\t}\n\t}\n\treturn vs;\n}\n\n// 接頭辞のリストアップ\nvoid ini(){\n\th[\"yotta\"] =  24;\n\th[\"zetta\"] =  21;\n\th[\"exa\"]   =  18;\n\th[\"peta\"]  =  15;\n\th[\"tera\"]  =  12;\n\th[\"giga\"]  =   9;\n\th[\"mega\"]  =   6;\n\th[\"kilo\"]  =   3;\n\th[\"hecto\"] =   2;\n\th[\"deca\"]  =   1;\n\th[\"deci\"]  =  -1;\n\th[\"centi\"] =  -2;\n\th[\"milli\"] =  -3;\n\th[\"micro\"] =  -6;\n\th[\"nano\"]  =  -9;\n\th[\"pico\"]  = -12;\n\th[\"femto\"] = -15;\n\th[\"ato\"]   = -18;\n\th[\"zepto\"] = -21;\n\th[\"yocto\"] = -24;\n}\n\nint cnt_pre(string s){\n\tint a=0;\n\tfor(int i=0 ; i < s.size() ; i++ ){\n\t\tif( s[i] == '.' ) return a;\n\t\ta++;\n\t}\n\treturn a;\n}\n\nint cnt_zero(string s){\n\tint cnt=0;\n\tfor(int i=0 ; i < s.size() ; i++ ){\n\t\tif( s[i] == '0' )\n\t\t\tcnt++;\n\t\tif( s[i] >= '1' && s[i] <= '9' )\n\t\t\treturn cnt;\n\t}\n\treturn cnt;\n}\n\nint main(){\n\tini();\n\t\n\tint n;\n\tcin >> n;\n\tcin.ignore();\n\tfor(int i_ = 0 ; i_ < n ; i_++ ){\n\t\tstring s;\n\t\tgetline( cin , s );\n\t\t\n\t\tvector<string> vs = split_words( s );\n\t\tstring unit, prefix;\n\t\tstring num = vs[0];\n\t\tif( vs.size() == 3 ){\n\t\t\tprefix = vs[1];\n\t\t\tunit = vs[2];\n\t\t}else if( vs.size() == 2 ){\n\t\t\tif( h.count( vs[1] ) ){\n\t\t\t\tprefix = vs[1];\n\t\t\t}else{\n\t\t\t\tunit = vs[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// '.' までの数値の個数\n\t\tint a = cnt_pre( num );\n\t\t// 先頭の '0' の数\n\t\tint pre_zero = cnt_zero( num );\n\t\t\n\t\tint b=0;\n\t\tif( !prefix.empty() ){\n\t\t\tb = h[prefix];\n\t\t}\n\t\tif( pre_zero == 0 ){\n\t\t\tcout << num[0];\n\t\t\t\n\t\t\t// 小数点以下が出力できるとき\n\t\t\tif( num.size() > 1 ) cout << \".\";\n\t\t\t// 小数点以下の数値を出力\n\t\t\tfor(int i=1 ; i < num.size() ; i++ ){\n\t\t\t\tif( num[i] == '.' ) continue;\n\t\t\t\tcout << num[i];\n\t\t\t}\n\t\t\t// 10^x の部分の出力\n\t\t\tcout << \" * 10^\" << (a+b-1);\n\t\t\t// 単位の部分の出力\n\t\t\tif( !unit.empty() ) \n\t\t\t\tcout << \" \" << unit;\n\t\t}else{\n\t\t\tcout << num[pre_zero+1];\n\t\t\t\n\t\t\t// 小数点以下が出力できるとき\n\t\t\tif( num.size() > pre_zero+2 ) cout << \".\" ;\n\t\t\t// 小数点以下の数値を出力\n\t\t\tfor(int i = pre_zero+2 ; i < num.size() ; i++ ){\n\t\t\t\tif( num[i] == '.' ) continue;\n\t\t\t\tcout << num[i];\n\t\t\t}\n\t\t\t// 10^x の部分の出力\n\t\t\tcout << \" * 10^\" << (a+b-1-pre_zero);\n\t\t\t// 単位の部分の出力\n\t\t\tif( !unit.empty() ) \n\t\t\t\tcout << \" \" << unit;\n\t\t}\n\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<string>\n#include<sstream>\n#include<iostream>\n\nusing namespace std;\n\nint main(){\n\tmap<string,int>\tprefix;\n\tprefix[\"yotta\"]=24;\tprefix[\"zetta\"]=21;\tprefix[\"exa\"]=18;\tprefix[\"peta\"]=15;\n\tprefix[\"tera\"]=12;\tprefix[\"giga\"]=9;\tprefix[\"mega\"]=6;\tprefix[\"kilo\"]=3;\n\tprefix[\"hecto\"]=2;\tprefix[\"deca\"]=1;\tprefix[\"deci\"]=-1;\tprefix[\"centi\"]=-2;\n\tprefix[\"milli\"]=-3;\tprefix[\"micro\"]=-6;\tprefix[\"nano\"]=-9;\tprefix[\"pico\"]=-12;\n\tprefix[\"femto\"]=-15;prefix[\"ato\"]=-18;\tprefix[\"zepto\"]=-21;prefix[\"yocto\"]=-24;\n\n\tint t;\tcin>>t;\n\tstring dammy;\tgetline(cin,dammy);\n\twhile(t--){\n\t\tstring s;\tgetline(cin,s);\n\t\tstring val,pre,uni;\n\t\t{\n\t\t\tint spcnt=0;\n\t\t\tfor(int i=0;i<s.length();i++)\tif(s[i]==' ')\tspcnt++;\n\t\t\tstringstream ss(s);\n\t\t\tss>>val;\n\t\t\tif(spcnt==2)\tss>>pre;\n\t\t\tss>>uni;\n\t\t}\n\n\t\tint len=val.length();\n\t\tint ptpos=len,start=len-1;\n\t\tfor(int i=0;i<len;i++){\n\t\t\tif(val[i]=='.')\tptpos=i;\n\t\t\tif(val[i]!='0' && val[i]!='.')\tstart=min(start,i);\n\t\t}\n\n\t\tint order=prefix[pre];\n\t\tif(start<ptpos || ptpos==len)\torder+=ptpos-start-1;\n\t\telse\t\t\t\t\t\t\torder+=ptpos-start;\n\n\t\tstring xval;\n\t\tif(ptpos<start)\txval=val.substr(start);\n\t\telse\txval=val.substr(start,ptpos)+(ptpos<len?val.substr(ptpos+1):\"\");\n\n\t\tcout<<xval[0];\n\t\tif(xval.length()>1)\tcout<<'.'<<xval.substr(1);\n\t\tcout<<\" * 10^\"<<order<<' '<<uni<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "main2(){\n  int c,d,_d,x,i,j;\n  char n[1001],u[51];\n  for(x=d=-1,i=0;(c=getchar())!=' ';i++){\n    if(c=='.'){i--;_d=d=i;continue;}\n    if(x<0&&c!='0')x=i;\n    n[i]=c;\n  }\n  if(d==-1)_d=d=i-1;\n\n  scanf(\"%s\",u);getchar();\nif(!strcmp(u,\"yotta\"))d+=24;\nif(!strcmp(u,\"zetta\"))d+=21;\nif(!strcmp(u,\"exa\"))d+=18;\nif(!strcmp(u,\"peta\"))d+=15;\nif(!strcmp(u,\"tera\"))d+=12;\nif(!strcmp(u,\"giga\"))d+=9;\nif(!strcmp(u,\"mega\"))d+=6;\nif(!strcmp(u,\"kilo\"))d+=3;\nif(!strcmp(u,\"hecto\"))d+=2;\nif(!strcmp(u,\"deca\"))d+=1;\nif(!strcmp(u,\"yocto\"))d+=-24;\nif(!strcmp(u,\"zepto\"))d+=-21;\nif(!strcmp(u,\"ato\"))d+=-18;\nif(!strcmp(u,\"femto\"))d+=-15;\nif(!strcmp(u,\"pico\"))d+=-12;\nif(!strcmp(u,\"nano\"))d+=-9;\nif(!strcmp(u,\"micro\"))d+=-6;\nif(!strcmp(u,\"milli\"))d+=-3;\nif(!strcmp(u,\"centi\"))d+=-2;\nif(!strcmp(u,\"deci\"))d+=-1;\n  if(d!=_d)scanf(\"%s\",u);\n\n  putchar(n[x]);\n  if(x+1<i)putchar('.');\n  for(j=x+1;j<i;j++)\n    putchar(n[j]);\n  printf(\" * 10^%d %s\\n\",d-x,u);\n  return 0;\n}\nmain(n){for(scanf(\"%d\",&n),getchar();n--;)main2();exit(0);}"
  },
  {
    "language": "C",
    "code": "// Aizu 2188: Unit Converter\n// 2017.9.20 bal4u@uu\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n\nchar *pre[20] = { \n\t\"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\",\n\t\"giga\", \"mega\", \"kilo\", \"hecto\", \"deca\",\n\t\"deci\", \"centi\", \"milli\", \"micro\", \"nano\",\n\t\"pico\", \"femto\", \"ato\", \"zepto\", \"yocto\" };\nint idx[20] = {\n\t24, 21, 18, 15, 12,  9,   6,   3,   2,\t 1,\n\t-1, -2, -3, -6, -9,-12, -15, -18, -21, -24 };\n \nchar buf[1105], ans[1105];\n\nint main()\n{\n\tint t, i, a, b, f;\n\tchar *p, *q, *w;\n\n\tfgets(buf, 10, stdin); t = atoi(buf);\n\twhile (t-- > 0) {\n\t\tfgets(buf, 1100, stdin); p = buf, q = ans;\n\t\twhile (isspace(*p)) p++;\n\t\twhile (*p == '0') p++;\n\t\ta = b = 0, f = 0;\n\t\tif (*p > '0') *q++ = *p++, f = 1;\n\t\twhile (isdigit(*p)) {\n\t\t\tif (f == 1) *q++ = '.', f = 2;\n\t\t\t*q++ = *p++, a++;\n\t\t}\n\t\tif (*p == '.') { if (f == 1) *q++ = '.', f = 2; p++; }\n\t\tif (!f) a = -1;\n\t\twhile (*p == '0') {\n\t\t\tif (f) *q++ = *p;\n\t\t\telse a--;\n\t\t\tp++;\n\t\t}\n\t\tif (isdigit(*p)) { if (!f) *q++ = *p++, f = 1; }\n\t\twhile (isdigit(*p)) {\n\t\t\tif (f == 1) *q++ = '.', f = 2;\n\t\t\t*q++ = *p++;\n\t\t}\n\t\twhile (isspace(*p)) p++;\n\t\tw = p; while (isalpha(*p)) p++;\n\t\t*p = 0;\n\t\tfor (i = 0; i < 20; i++) if (!strcmp(w, pre[i])) { b = idx[i]; break; }\n\t\tif (i < 20) { p++; while (isspace(*p)) p++; w = p; }\n\t\tsprintf(q, \" * 10^%d \", a + b);\n\t\tq += strlen(q);\n\t\twhile (isalpha(*w)) *q++ = *w++;\n\t\t*q = 0;\n\t\tputs(ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct {\n\tconst char* name;\n\tint hosei;\n} settouzi_t;\n\nconst settouzi_t settouzi_list[20]={\n\t{\"yotta\"\t,\t24\t},\n\t{\"zetta\"\t,\t21\t},\n\t{\"exa\"\t\t,\t18\t},\n\t{\"peta\"\t\t,\t15\t},\n\t{\"tera\"\t\t,\t12\t},\n\t{\"giga\"\t\t,\t9\t},\n\t{\"mega\"\t\t,\t6\t},\n\t{\"kilo\"\t\t,\t3\t},\n\t{\"hecto\"\t,\t2\t},\n\t{\"deca\"\t\t,\t1\t},\n\t{\"deci\"\t\t,\t-1\t},\n\t{\"centi\"\t,\t-2\t},\n\t{\"milli\"\t,\t-3\t},\n\t{\"micro\"\t,\t-6\t},\n\t{\"nano\"\t\t,\t-9\t},\n\t{\"pico\"\t\t,\t-12\t},\n\t{\"femto\"\t,\t-15\t},\n\t{\"ato\"\t\t,\t-18\t},\n\t{\"zepto\"\t,\t-21\t},\n\t{\"yocto\"\t,\t-24\t}\n};\n\nint main(void) {\n\tint data_num,cur_data;\n\tchar num[1100];\n\tchar settouzi[12];\n\tchar tani[100];\n\tint hosei;\n\tint i;\n\tint dot_pos;\n\tint nonzero_pos;\n\tint num_length;\n\tscanf(\"%d\",&data_num);\n\tfor(cur_data=0;cur_data<data_num;cur_data++) {\n\t\tscanf(\"%s\",num);\n\t\tscanf(\"%s\",settouzi);\n\t\thosei=0;\n\t\tfor(i=0;i<20;i++) {\n\t\t\tif(strcmp(settouzi_list[i].name,settouzi)==0) {\n\t\t\t\thosei=settouzi_list[i].hosei;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(hosei==0) {\n\t\t\tstrcpy(tani,settouzi);\n\t\t} else {\n\t\t\tscanf(\"%s\",tani);\n\t\t}\n\t\tnum_length=strlen(num);\n\t\tdot_pos=num_length;\n\t\tnonzero_pos=-1;\n\t\tfor(i=0;i<num_length;i++) {\n\t\t\tif(nonzero_pos<0 && num[i]!='.' && num[i]!='0')nonzero_pos=i;\n\t\t\tif(num[i]=='.')dot_pos=i;\n\t\t}\n\t\thosei+=dot_pos-nonzero_pos;\n\t\tif(nonzero_pos<dot_pos)hosei--;\n\t\tputchar(num[nonzero_pos]);\n\t\tif(nonzero_pos<num_length-1)putchar('.');\n\t\tfor(i=nonzero_pos+1;i<num_length;i++) {\n\t\t\tif(num[i]!='.')putchar(num[i]);\n\t\t}\n\t\tprintf(\" * 10^%d %s\\n\",hosei,tani);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 2188\n  Title:Unit Converter\n  @kankichi573\n*/\n#include <stdio.h>\n#include <string.h>\nchar buf[1061];\nchar num[1001];\nchar unit[60];\nint n;\nint sig_dig;\nint point_pos;\nstruct prefix_exponent_st\n{\n  char prefix[7];\n  int  exponent;\n}\nprefix_table[20]={\n  {\"yotta\",24},\n  {\"zetta\",21},\n  {\"exa\",  18},\n  {\"peta\", 15},\n  {\"tera\", 12},\n  {\"giga\",  9},\n  {\"mega\",  6},\n  {\"kilo\",  3},\n  {\"hecto\", 2},\n  {\"deca\",  1},\n  {\"deci\", -1}, \n  {\"centi\",-2},\n  {\"milli\",-3},\n  {\"micro\",-6},\n  {\"nano\", -9},\n  {\"pico\", -12},\n  {\"femto\",-15},\n  {\"ato\",  -18},\n  {\"zepto\",-21},\n  {\"yocto\",-24}\n};\n\nint prefix2exponent(char *s)\n{\n  int i;\n  for(i=0;i<20;i++)\n    if(0==strcmp(prefix_table[i].prefix,s))\n      return(prefix_table[i].exponent);\n  return(0);\n}\nvoid output(char *num,int expo,char *unit)\n{\n  int c,len,i;\n  char *p;\n\n  if(*num=='0')\n    {\n      p=num;\n      p+=2;c=1;\n      while(*p=='0')\n\t{\n\t  c++;      \n\t  p++;\n\t}\n      if(*(p+1))\n\tprintf(\"%c.%s * 10^%d %s\",*p,p+1,expo-c,unit);\n      else\n\tprintf(\"%c * 10^%d %s\",*p,expo-c,unit);\n    }\n  else\n    {\n      c=strlen(num);\n      for(i=0;i<strlen(num);i++)\n\tif(num[i]=='.')\n\t  c=i;\n\telse if(i==0)\n\t  printf(\"%c.\",num[i]);\n\telse\n\t  printf(\"%c\",num[i]);\n      printf(\" * 10^%d %s\",expo+c-1,unit);\n    }\n}\n\nmain()\n{\n  int i,expon;\n  char *p;\n  scanf(\"%d \",&n);\n  for(i=0;i<n;i++)\n    {\n      fgets(buf,1061,stdin);\n\n      p=strtok(buf,\" \");\n      strcpy(num,p);\n      //printf(\"p=%s\\n\",num);\n\n      p=strtok(NULL,\" \");\n      if(0 != (expon=prefix2exponent(p)))\n\tp=strtok(NULL,\" \");\n      strcpy(unit,p);\n\n      output(num,expon,unit);\n    }\n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "main2(){\n  int c,d,_d,x,i,j;\n  char n[1001],u[51];\n  for(x=d=-1,i=0;(c=getchar())!=' ';i++){\n    if(c=='.'){i--;_d=d=i;continue;}\n    if(x<0&&c!='0')x=i;\n    n[i]=c;\n  }\n  if(d==-1)_d=d=i-1;\n\n  scanf(\"%s\",u);\nif(!strcmp(u,\"yotta\"))d+=24;\nif(!strcmp(u,\"zetta\"))d+=21;\nif(!strcmp(u,\"exa\"))d+=18;\nif(!strcmp(u,\"peta\"))d+=15;\nif(!strcmp(u,\"tera\"))d+=12;\nif(!strcmp(u,\"giga\"))d+=9;\nif(!strcmp(u,\"mega\"))d+=6;\nif(!strcmp(u,\"kilo\"))d+=3;\nif(!strcmp(u,\"hecto\"))d+=2;\nif(!strcmp(u,\"deca\"))d+=1;\nif(!strcmp(u,\"yocto\"))d+=-24;\nif(!strcmp(u,\"zepto\"))d+=-21;\nif(!strcmp(u,\"ato\"))d+=-18;\nif(!strcmp(u,\"femto\"))d+=-15;\nif(!strcmp(u,\"pico\"))d+=-12;\nif(!strcmp(u,\"nano\"))d+=-9;\nif(!strcmp(u,\"micro\"))d+=-6;\nif(!strcmp(u,\"milli\"))d+=-3;\nif(!strcmp(u,\"centi\"))d+=-2;\nif(!strcmp(u,\"deci\"))d+=-1;\n  if(d!=_d)scanf(\"%s\",u);\n\n  putchar(n[x]);\n  if(x+1<i)putchar('.');\n  for(j=x+1;j<i;j++)\n    putchar(n[j]);\n  printf(\" * 10^%d %s\\n\",d-x,u);\n  return 0;\n}\nmain(n){for(scanf(\"%d\",&n);n--;)main2();exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 20\n\nconst struct\n{\n  char s[ 8 ];\n  int  p;\n} d[ N ] = {\n  { \"yotta\", 24 },\n  { \"zetta\", 21 },\n  { \"exa\", 18 },\n  { \"peta\", 15 },\n  { \"tera\", 12 },\n  { \"giga\", 9 },\n  { \"mega\", 6 },\n  { \"kilo\", 3 },\n  { \"hecto\", 2 },\n  { \"deca\", 1 },\n  { \"deci\", -1 },\n  { \"centi\", -2 },\n  { \"milli\", -3 },\n  { \"micro\", -6 },\n  { \"nano\", -9 },\n  { \"pico\", -12 },\n  { \"femto\", -15 },\n  { \"ato\", -15 },\n  { \"zepto\", -21 },\n  { \"yocto\", -24 },\n};\n\nint\nmain (\n  int   argc,\n  char *argv[ ]\n  )\n{\n  int n;\n  int i;\n\n  scanf ( \"%d\", &n );\n  while ( n-- )\n  {\n    char v[ 2048 ];\n    char t[ 64 ];\n    int e = 0;\n\n    scanf ( \" %s %s\", v, t );\n    for ( i = 0; i < N; ++i )\n    if ( strcmp ( t, d[ i ].s ) == 0 )\n    {\n      e = d[ i ].p;\n      scanf ( \" %s\", t );\n    }\n\n    if ( strncmp ( \"0.\", v, 2 ) == 0 )\n    {\n      memmove ( v, v + 2, strlen ( v + 1 ) );\n      e -= strlen ( v );\n    }\n    else\n    {\n      char *p = strchr ( v, '.' );\n      if ( p != NULL )\n      {\n        e -= strlen ( p + 1 );\n        memmove ( p, p + 1, strlen ( p + 1 ) + 1 );\n      }\n    }\n\n    for ( i = 0; v[ i ] != '\\0'; ++i )\n    if ( v[ i ] != '0' )\n    {\n      if ( i != 0 )\n        memmove ( v, v + i, strlen ( v + i ) + 1 );\n      break ;\n    }\n\n    if ( v[ i + 1 ] == '\\0' )\n      printf ( \"%s * 10^%d %s\\n\", v, e, t );\n    else\n      printf ( \"%c.%s * 10^%d %s\\n\", v[ 0 ], v + 1\n             , e + (int)strlen ( v + 1 ), t );\n  }\n\n  return ( EXIT_SUCCESS );\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 20\n\nconst struct\n{\n  char s[ 8 ];\n  int  p;\n} d[ N ] = {\n  { \"yotta\", 24 },\n  { \"zetta\", 21 },\n  { \"exa\", 18 },\n  { \"peta\", 15 },\n  { \"tera\", 12 },\n  { \"giga\", 9 },\n  { \"mega\", 6 },\n  { \"kilo\", 3 },\n  { \"hecto\", 2 },\n  { \"deca\", 1 },\n  { \"deci\", -1 },\n  { \"centi\", -2 },\n  { \"milli\", -3 },\n  { \"micro\", -6 },\n  { \"nano\", -9 },\n  { \"pico\", -12 },\n  { \"femto\", -15 },\n  { \"ato\", -18 },\n  { \"zepto\", -21 },\n  { \"yocto\", -24 },\n};\n\nint\nmain (\n  int   argc,\n  char *argv[ ]\n  )\n{\n  int n;\n  int i;\n\n  scanf ( \"%d\", &n );\n  while ( n-- )\n  {\n    char v[ 2048 ];\n    char t[ 64 ];\n    int e = 0;\n\n    scanf ( \" %s %s\", v, t );\n    for ( i = 0; i < N; ++i )\n    if ( strcmp ( t, d[ i ].s ) == 0 )\n    {\n      e = d[ i ].p;\n      scanf ( \" %s\", t );\n    }\n\n    if ( strncmp ( \"0.\", v, 2 ) == 0 )\n    {\n      memmove ( v, v + 2, strlen ( v + 1 ) );\n      e -= strlen ( v );\n    }\n    else\n    {\n      char *p = strchr ( v, '.' );\n      if ( p != NULL )\n      {\n        e -= strlen ( p + 1 );\n        memmove ( p, p + 1, strlen ( p + 1 ) + 1 );\n      }\n    }\n\n    for ( i = 0; v[ i ] != '\\0'; ++i )\n    if ( v[ i ] != '0' )\n    {\n      if ( i != 0 )\n        memmove ( v, v + i, strlen ( v + i ) + 1 );\n      break ;\n    }\n\n    if ( v[ i + 1 ] == '\\0' )\n      printf ( \"%s * 10^%d %s\\n\", v, e, t );\n    else\n      printf ( \"%c.%s * 10^%d %s\\n\", v[ 0 ], v + 1\n             , e + (int)strlen ( v + 1 ), t );\n  }\n\n  return ( EXIT_SUCCESS );\n}"
  },
  {
    "language": "C",
    "code": "main2(){\n  int c,d,_d,x,i,j;\n  char n[1001],u[51];\n  for(x=d=-1,i=0;(c=getchar())!=' ';i++){\n    if(c=='.'){i--;_d=d=i;continue;}\n    if(x<0&&c!='0')x=i;\n    n[i]=c;\n  }\n  if(d==-1)_d=d=i-1;\n\n  scanf(\"%s\",u);\nif(!strcmp(u,\"yotta\"))d+=24;\nif(!strcmp(u,\"zetta\"))d+=21;\nif(!strcmp(u,\"exa\"))d+=18;\nif(!strcmp(u,\"peta\"))d+=15;\nif(!strcmp(u,\"tera\"))d+=12;\nif(!strcmp(u,\"giga\"))d+=9;\nif(!strcmp(u,\"mega\"))d+=6;\nif(!strcmp(u,\"kilo\"))d+=3;\nif(!strcmp(u,\"hecto\"))d+=2;\nif(!strcmp(u,\"deca\"))d+=1;\nif(!strcmp(u,\"yocto\"))d+=-24;\nif(!strcmp(u,\"zepto\"))d+=-21;\nif(!strcmp(u,\"ato\"))d+=-18;\nif(!strcmp(u,\"femto\"))d+=-15;\nif(!strcmp(u,\"pico\"))d+=-12;\nif(!strcmp(u,\"nano\"))d+=-9;\nif(!strcmp(u,\"micro\"))d+=-6;\nif(!strcmp(u,\"milli\"))d+=-3;\nif(!strcmp(u,\"centi\"))d+=-2;\nif(!strcmp(u,\"deci\"))d+=-1;\n  if(d!=_d)scanf(\"%s\",u);\ngetchar();\n  putchar(n[x]);\n  if(x+1<i)putchar('.');\n  for(j=x+1;j<i;j++)\n    putchar(n[j]);\n  printf(\" * 10^%d %s\\n\",d-x,u);\n  return 0;\n}\nmain(n){for(scanf(\"%d\",&n),getchar();n--;)main2();exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 300\n#define MAX(A,B) \\\n  ( (B) > (A) ? (B) : (A) )\n\nstatic int n;\nstatic int m;\nstatic int c[ N ];\nstatic int v[ N ];\nstatic int d[ N ];\nstatic int l[ N ];\nconst static int *p;\n\nstatic int k_operafan[ N + 1 ][ N ];\n\nint\ndpFSA (\n  const int m,\n  const int k\n  )\n{\n  int i;\n\n  if ( k >= n ) return ( 0 );\n\n  if ( k_operafan[ m ][ k ] != -1 ) ;\n  else\n  {\n    int res = 0;\n\n    for ( i = 0; m - c[ k ] * i >= 0; ++i )\n      res = MAX( res, dpFSA ( m - c[ k ] * i, k + 1 ) + p[ k ] * i );\n\n    k_operafan[ m ][ k ] = res;\n  }\n\n  return ( k_operafan[ m ][ k ] );\n}\n\nint\nmain (\n  int   argc,\n  char *argv[ ]\n  )\n{\n  char buf[ BUFSIZ ];\n  int i;\n\n  for ( ; ; )\n  {\n    int res = 0;\n\n    if ( fgets ( buf, BUFSIZ, stdin ) == NULL )\n      break ;\n    sscanf ( buf, \"%d%d\", &n, &m );\n    for ( i = 0; i < n; ++i )\n    {\n      fgets ( buf, BUFSIZ, stdin );\n      fgets ( buf, BUFSIZ, stdin );\n      sscanf ( buf, \"%d%d%d%d\", &c[ i ], &v[ i ], &d[ i ], &l[ i ] );\n    }\n\n    p = v;\n    memset ( k_operafan, -1, sizeof ( k_operafan ) );\n    res = MAX( res, dpFSA ( m, 0 ) );\n    p = d;\n    memset ( k_operafan, -1, sizeof ( k_operafan ) );\n    res = MAX( res, dpFSA ( m, 0 ) );\n    p = l;\n    memset ( k_operafan, -1, sizeof ( k_operafan ) );\n    res = MAX( res, dpFSA ( m, 0 ) );\n\n    printf ( \"%d\\n\", res );\n  }\n\n  return ( EXIT_SUCCESS );\n}"
  },
  {
    "language": "C",
    "code": "main2(){\nint c,d,_d,x,i,j;\nchar n[1001],u[51];\nfor(x=d=-1,i=0;(c=getchar())!=' ';i++){\nif(c=='.'){i--;_d=d=i;continue;}\nif(x<0&&c!='0')x=i;\nn[i]=c;}\nif(d==-1)_d=d=i-1;\nscanf(\"%s\",u);\nif(!strcmp(u,\"yotta\"))d+=24;\nif(!strcmp(u,\"zetta\"))d+=21;\nif(!strcmp(u,\"exa\"))d+=18;\nif(!strcmp(u,\"peta\"))d+=15;\nif(!strcmp(u,\"tera\"))d+=12;\nif(!strcmp(u,\"giga\"))d+=9;\nif(!strcmp(u,\"mega\"))d+=6;\nif(!strcmp(u,\"kilo\"))d+=3;\nif(!strcmp(u,\"hecto\"))d+=2;\nif(!strcmp(u,\"deca\"))d+=1;\nif(!strcmp(u,\"yocto\"))d+=-24;\nif(!strcmp(u,\"zepto\"))d+=-21;\nif(!strcmp(u,\"ato\"))d+=-18;\nif(!strcmp(u,\"femto\"))d+=-15;\nif(!strcmp(u,\"pico\"))d+=-12;\nif(!strcmp(u,\"nano\"))d+=-9;\nif(!strcmp(u,\"micro\"))d+=-6;\nif(!strcmp(u,\"milli\"))d+=-3;\nif(!strcmp(u,\"centi\"))d+=-2;\nif(!strcmp(u,\"deci\"))d+=-1;\nif(d!=_d)scanf(\"%s\",u);\ngetchar();putchar(n[x]);\nif(x+1<i)putchar('.');\nfor(j=x+1;j<i;j++)\nputchar(n[j]);\nprintf(\" * 10^%d %s\\n\",d-x,u);}\nmain(n){for(scanf(\"%d\",&n),getchar();n--;)main2();exit(0);}"
  },
  {
    "language": "Kotlin",
    "code": "fun main(args:Array<String>):Unit {\n    repeat(readLine()!!.trim().toInt()){\n        val str = readLine()!!.trim().split(' ')\n        val (shift, kasuu) = str.first().shiftWhileZero()\n        if (str.size == 2){\n            println(\"$kasuu * 10^${-shift} ${str.last()}\")\n        }else{\n            val e = prefixToExpoent(str[1])\n            println(\"${kasuu} * 10^${e-shift} ${str.last()}\")\n        }\n    }\n}\nfun String.shiftWhileZero():Pair<Int, String> {\n    val shift = this.indexOf('.')\n    return when(shift){\n        -1 -> Pair(-this.length + 1, this[0] + \".\" + this.substring(1))\n        else -> {\n            val removed = this.filterNot{it == '.'}.dropWhile { it == '0' }\n            val fromRight = this.length - shift\n            if (removed.length != 1) Pair(fromRight - removed.length, removed[0] + \".\" + removed.substring(1))\n            else Pair(fromRight - removed.length, removed)\n        }\n    }\n\n}\nfun prefixToExpoent(prefix:String):Int {\n    val map = mapOf(\n            Pair(\"yotta\", 24),\n            Pair(\"zetta\", 21),\n            Pair(\"exa\", 18),\n            Pair(\"peta\", 15),\n            Pair(\"tera\", 12),\n            Pair(\"giga\", 9),\n            Pair(\"mega\", 6),\n            Pair(\"kilo\", 3),\n            Pair(\"hecto\", 2),\n            Pair(\"deca\", 1),\n            Pair(\"deci\", -1),\n            Pair(\"centi\", -2),\n            Pair(\"milli\", -3),\n            Pair(\"micro\", -6),\n            Pair(\"nano\", -9),\n            Pair(\"pico\", -12),\n            Pair(\"femto\", -15),\n            Pair(\"ato\", -18),\n            Pair(\"zepto\", -21),\n            Pair(\"yocto\", -24)\n            )\n    return map[prefix]!!\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static final String[] PREFIX = {\"yotta\",\"zetta\",\"exa\",\"peta\",\"tera\",\"giga\",\"mega\",\"kilo\",\"hecto\",\"deca\",\"deci\",\"centi\",\"milli\",\"micro\",\"nano\",\"pico\",\"femto\",\"ato\",\"zepto\",\"yocto\"};\n\tpublic static final int[] SCALE = {24,21,18,15,12,9,6,3,2,1,-1,-2,-3,-6,-9,-12,-15,-18,-21,-24};\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\tsc.nextLine();\n\t\tfor(int t=0;t<T;t++) {\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tint scale = 0;\n\t\t\tif (s.length == 2) {\n\t\t\t\tscale = 0;\n\t\t\t}else{\n\t\t\t\tfor(int j=0;j<PREFIX.length;j++) {\n\t\t\t\t\tif (s[1].equals(PREFIX[j])) {\n\t\t\t\t\t\tscale = SCALE[j];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts[1] = s[2];\n\t\t\t}\n\t\t\tif (s[0].indexOf('.') >= 0) {\n\t\t\t\tscale -= s[0].length() - 1 - s[0].indexOf('.');\n\t\t\t}\n\t\t\ts[0] = s[0].replace(\".\", \"\");\n\t\t\tfor(int j=0;j<s[0].length();j++) {\n\t\t\t\tif (s[0].charAt(j) != '0') {\n\t\t\t\t\ts[0] = s[0].substring(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tscale += s[0].length() - 1;\n\t\t\tif (s[0].length() == 1) {\n\t\t\t\tSystem.out.print(s[0] + \" * \");\n\t\t\t}else{\n\t\t\t\tSystem.out.print(s[0].charAt(0) + \".\" + s[0].substring(1) + \" * \");\n\t\t\t}\n\t\t\tSystem.out.println(\"10^\" + scale + \" \" + s[1]);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n//Unit Converter\npublic class Main{\n\n\tvoid run(){\n\t\tMap<String, Integer> ref = new HashMap<String, Integer>();\n\t\tref.put(\"yotta\", 24); ref.put(\"zetta\", 21); ref.put(\"exa\", 18); ref.put(\"peta\", 15); ref.put(\"tera\", 12);\n\t\tref.put(\"giga\", 9); ref.put(\"mega\", 6); ref.put(\"kilo\", 3); ref.put(\"hecto\", 2); ref.put(\"deca\", 1);\n\t\tref.put(\"deci\", -1); ref.put(\"centi\", -2); ref.put(\"milli\", -3); ref.put(\"micro\", -6); ref.put(\"nano\", -9);\n\t\tref.put(\"pico\", -12); ref.put(\"femto\", -15); ref.put(\"ato\", -18); ref.put(\"zepto\", -21); ref.put(\"yocto\", -24);\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt(); sc.nextLine();\n\t\twhile(T--!=0){\n\t\t\tString[] t = sc.nextLine().split(\" \");\n\t\t\tchar[] s = null;\n\t\t\tint p = 0, K = 0;\n\t\t\tString w = \"\";\n\t\t\tif(t[0].contains(\".\")){\n\t\t\t\tp = t[0].indexOf('.')-1;\n\t\t\t\tt[0] = t[0].substring(0, p+1)+t[0].substring(p+2);\n//\t\t\t\tt[0].replaceAll(\"\\\\.\", \"\");\n//\t\t\t\tSystem.out.println(\"T:\"+t[0]);\n\t\t\t\ts = t[0].toCharArray();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tp = t[0].length()-1;\n\t\t\t\ts = t[0].toCharArray();\n\t\t\t}\n\t\t\tif(t.length==2){\n\t\t\t\tw = t[1];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tw = t[2]; p+=ref.get(t[1]);\n\t\t\t}\n\t\t\tint k = 0;\n\t\t\twhile(s[k]=='0')k++;\n\t\t\tK = s.length-k;\n\t\t\tint exp = k<p?p-k:p-k;\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tres.append(s[k]+\"\");\n\t\t\tif(K>1){\n\t\t\t\tres.append(\".\");\n\t\t\t\tfor(int i=k+1;i<s.length;i++)res.append(s[i]);\n\t\t\t}\n\t\t\tSystem.out.println(res.toString()+\" * 10^\"+exp+\" \"+w);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\tHashMap<String, Integer> hm=new HashMap<String, Integer>();\n\tString ans[];\n\tString input[][];\n\tpublic static void main(String[] args) {\n\t\t//new AOJ2188().run();\n\t\tnew Main().run();\n\t}\n\tvoid run(){\n\t\thm.put(\"yotta\", 24);\n\t\thm.put(\"zetta\", 21);\n\t\thm.put(\"exa\", 18);\n\t\thm.put(\"peta\", 15);\n\t\thm.put(\"tera\", 12);\n\t\thm.put(\"giga\", 9);\n\t\thm.put(\"mega\", 6);\n\t\thm.put(\"kilo\", 3);\n\t\thm.put(\"hecto\", 2);\n\t\thm.put(\"deca\", 1);\n\t\thm.put(\"nomal\", 0);\n\t\thm.put(\"deci\", -1);\n\t\thm.put(\"canti\", -2);\n\t\thm.put(\"milli\", -3);\n\t\thm.put(\"micro\", -6);\n\t\thm.put(\"nano\", -9);\n\t\thm.put(\"pico\", -12);\n\t\thm.put(\"femto\", -15);\n\t\thm.put(\"ato\", -18);\n\t\thm.put(\"zepto\", -21);\n\t\thm.put(\"yocto\", -24);\n\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tinput=new String[n][];\n\t\t\tans=new String[n];\n\t\t\tsc.nextLine();\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tinput[i]=sc.nextLine().split(\" \");\n\t\t\t\tif(input[i].length==2){\n\t\t\t\t\tString str[]=new String[3];\n\t\t\t\t\tstr[0]=input[i][0];\n\t\t\t\t\tstr[1]=\"nomal\";\n\t\t\t\t\tstr[2]=input[i][1];\n\t\t\t\t\tinput[i]=new String[3];\n\t\t\t\t\tinput[i][0]=str[0];\n\t\t\t\t\tinput[i][1]=str[1];\n\t\t\t\t\tinput[i][2]=str[2];\n\t\t\t\t}\n\t\t\t\tif(!input[i][0].contains(\".\")){\n\t\t\t\t\tinput[i][0]=new String(input[i][0]+\".\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tint unit=hm.get(input[i][1]);\n\t\t\t\tif(!check1(input[i][0])){\n\t\t\t\t\tconverter1(input[i][0], unit, i);\n\t\t\t\t}\n\t\t\t\telse if(!check2(input[i][0])){\n\t\t\t\t\tconverter2(input[i][0], unit, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tSystem.out.println(ans[i]);\n\t\t\t}\n\t\t}\n\t}\n\tvoid converter1(String str,int unit,int index){\n\t\tchar ch[]=str.toCharArray();\n\t\tunit--;\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tch[i]=ch[i+1];\n\t\t\t\tch[i+1]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tString temp=zero(String.valueOf(ch));\n\t\tif(!check1(temp)){\n\t\t\tconverter1(temp,unit, index);\n\t\t}\n\t\telse{\n\t\t\t//完成\n\t\t\tans[index]=temp+\" * 10^\"+Integer.toString(unit)+\" \"+input[index][2];\n\t\t}\n\t}\n\tvoid converter2(String str,int unit,int index){\n\t\tchar ch[]=str.toCharArray();\n\t\tunit++;\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tch[i]=ch[i-1];\n\t\t\t\tch[i-1]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!check2(String.valueOf(ch))){\n\t\t\tconverter2(String.valueOf(ch),unit, index);\n\t\t}\n\t\telse{\n\t\t\t//完成\n\t\t\tans[index]=String.valueOf(ch)+\" * 10^\"+Integer.toString(unit)+\" \"+input[index][2];\n\t\t}\n\t}\n\tboolean check1(String str){\n\t\tchar ch[]=str.toCharArray();\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(ch[0]=='0'){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t//実はこのチェック危険。もし001.23とかも10超えと判定してしまう。\n\tboolean check2(String str){\n\t\tchar ch[]=str.toCharArray();\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(1<i){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tString zero(String str){\n\t\t//System.out.println(\"zero\");\n\t\tchar ch[]=str.toCharArray();\n\t\tint n=ch.length;\n\t\t\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(ch[i]=='0' && ch[i+1]!='.'){\n\t\t\t\tfor(int j=i; j<n-1; j++){\n\t\t\t\t\tch[j]=ch[j+1];\n\t\t\t\t}\n\t\t\t\tch[n-1]=0;\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(ch[i+1]==0)\n\t\t\t\t\tch[i]=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn String.valueOf(ch);\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    String val1[] = {\"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\", \"giga\", \"mega\", \"kilo\"};\n    String val2[] = {\"yocto\", \"zepto\", \"ato\", \"femto\", \"pico\", \"nano\", \"micro\", \"milli\"};\n\n    Main(){\n\tScanner sc = new Scanner(System.in);\n\n\twhile(sc.hasNext()){\n\t    int n = Integer.parseInt(sc.nextLine());\n\t    for(int k = 0; k < n; k++){\n\t\tString[] str = (sc.nextLine()).split(\" \");\n\t\tint v = 0;\n\t\tString s1, s2;\n\t\tif(str.length == 3){\n\t\t    s1 = str[2];\n\t\t    v = convertTo(str[1]);\n\t\t} else {\n\t\t    s1 = str[1];\n\t\t    v = 0;\n\t\t}\t\t\n\t\tchar[] ch = str[0].toCharArray();\n\t\tif(ch.length > 1){\n\t\t    if(ch[0] != '0' && ch[1] == '.'){\n\t\t\ts2 = str[0];\n\t\t    } else {\n\t\t\tif(ch[0] == '0'){\n\t\t\t    int p = 2;\n\t\t\t    while(ch[p] == '0'){\n\t\t\t\tp++;\n\t\t\t    }\n\t\t\t    v -= (p-1);\n\t\t\t    s2 = String.valueOf(ch[p]) + \".\";\n\t\t\t    for(int i = p+1, l = ch.length; i < l; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    continue;\n\t\t\t\t}\n\t\t\t\ts2 += String.valueOf(ch[i]);\n\t\t\t    }\n\t\t\t    if(s2.length() == 2){\n\t\t\t\ts2 = s2.substring(0, 1);\n\t\t\t    }\n\t\t\t} else {\n\t\t\t    int p = ch.length;\n\t\t\t    for(int i = 2; i < p; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    p = i;\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    v += (p-1);\t\t\t   \n\t\t\t    s2 = String.valueOf(ch[0]) + \".\";\n\t\t\t    for(int i = 1, l = ch.length; i < l; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    continue;\n\t\t\t\t}\n\t\t\t\ts2 += String.valueOf(ch[i]);\n\t\t\t    }\n\t\t\t    if(s2.length() == 2){\n\t\t\t\ts2 = s2.substring(0, 1);\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t} else {\n\t\t    s2 = str[0];\n\t\t}\n\n\t\tSystem.out.println(s2+ \" * 10^\"+Integer.toString(v)+\" \"+s1);\n\t    }\n\t}\n    }\n\n\n    int convertTo(String str){\n\tif(str.equals(\"hecto\")){\n\t    return 2;\n\t} else if(str.equals(\"deca\")){\n\t    return 1;\n\t} else if(str.equals(\"deci\")){\n\t    return -1;\n\t} else if(str.equals(\"centi\")){\n\t    return -2;\n\t}\n\n\tint v = 24;\n\tboolean f = false;\n\tfor(int i = 0, l = val1.length; i < l; i++, v-=3){\n\t    if(str.equals(val1[i])){\n\t\tf = true;\n\t\tbreak;\n\t    }\n\t}\n\n\tif(f){\n\t    return v;\n\t}\n\tv = -24;\n\tfor(int i = 0, l = val2.length; i < l; i++, v+=3){\n\t    if(str.equals(val2[i])){\n\t\tbreak;\n\t    }\n\t}\n\n\treturn v;\n    }\n\n    public static void main(String[] args){\n\tnew Main();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\n\t\tHashMap<String,Integer> map = new HashMap<String,Integer>();\n\t\tmap.put(\"yotta\",24);\n\t\tmap.put(\"zetta\",21);\n\t\tmap.put(\"exa\",18);\n\t\tmap.put(\"peta\",15);\n\t\tmap.put(\"tera\",12);\n\t\tmap.put(\"giga\",9);\n\t\tmap.put(\"mega\",6);\n\t\tmap.put(\"kilo\",3);\n\t\tmap.put(\"hecto\",2);\n\t\tmap.put(\"deca\",1);\n\t\tmap.put(\"deci\",-1);\n\t\tmap.put(\"centi\",-2);\n\t\tmap.put(\"milli\",-3);\n\t\tmap.put(\"micro\",-6);\n\t\tmap.put(\"nano\",-9);\n\t\tmap.put(\"pico\",-12);\n\t\tmap.put(\"femto\",-15);\n\t\tmap.put(\"ato\",-18);\n\t\tmap.put(\"zepto\",-21);\n\t\tmap.put(\"yocto\",-24);\n\n\t\twhile(n-- > 0){\n\t\t\tString s = sc.next();\n\t\t\tString a = sc.next();\n\t\t\tString b = null;\n\t\t\tif(!sc.hasNextDouble()){\n\t\t\t\tb = sc.next();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tb = a;\n\t\t\t\ta = null;\n\t\t\t}\n\n\t\t\tint idx = 0;\n\t\t\tfor(;s.charAt(idx)=='0' || s.charAt(idx)=='.';idx++);\n\t\t\tString ns = \"\" + s.charAt(idx++);\n\t\t\tif(idx < s.length()){\n\t\t\t\tns += \".\";\n\t\t\t\tfor(;idx<s.length();idx++){\n\t\t\t\t\tchar ch = s.charAt(idx);\n\t\t\t\t\tns += ch == '.' ? \"\" : ch;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint before = 0;\n\t\t\tfor(;before<s.length() && s.charAt(before)!='.';before++);\n\t\t\tif(before == s.length()) before--;\n\t\t\tint after = 0;\n\t\t\tfor(;after<ns.length() && ns.charAt(after)!='.';after++);\n\t\t\tif(after == ns.length()) after--;\n\n\t\t\tSystem.out.println(ns + \" * 10^\" + ((a==null ? 0 : map.get(a)) + (ns.length() - after) - (s.length() - before)) + \" \" + b);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\tHashMap<String, Integer> hm=new HashMap<String, Integer>();\n\tString ans[];\n\tString input[][];\n\tpublic static void main(String[] args) {\n\t\t//new AOJ2188().run();\n\t\tnew Main().run();\n\t}\n\tvoid run(){\n\t\thm.put(\"yotta\", 24);\n\t\thm.put(\"zetta\", 21);\n\t\thm.put(\"exa\", 18);\n\t\thm.put(\"peta\", 15);\n\t\thm.put(\"tera\", 12);\n\t\thm.put(\"giga\", 9);\n\t\thm.put(\"mega\", 6);\n\t\thm.put(\"kilo\", 3);\n\t\thm.put(\"hecto\", 2);\n\t\thm.put(\"deca\", 1);\n\t\thm.put(\"nomal\", 0);\n\t\thm.put(\"deci\", -1);\n\t\thm.put(\"centi\", -2);\n\t\thm.put(\"milli\", -3);\n\t\thm.put(\"micro\", -6);\n\t\thm.put(\"nano\", -9);\n\t\thm.put(\"pico\", -12);\n\t\thm.put(\"femto\", -15);\n\t\thm.put(\"ato\", -18);\n\t\thm.put(\"zepto\", -21);\n\t\thm.put(\"yocto\", -24);\n\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tinput=new String[n][];\n\t\t\tans=new String[n];\n\t\t\tsc.nextLine();\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tinput[i]=sc.nextLine().split(\" \");\n\t\t\t\tif(input[i].length==2){\n\t\t\t\t\tString str[]=new String[3];\n\t\t\t\t\tstr[0]=input[i][0];\n\t\t\t\t\tstr[1]=\"nomal\";\n\t\t\t\t\tstr[2]=input[i][1];\n\t\t\t\t\tinput[i]=new String[3];\n\t\t\t\t\tinput[i][0]=str[0];\n\t\t\t\t\tinput[i][1]=str[1];\n\t\t\t\t\tinput[i][2]=str[2];\n\t\t\t\t}\n\t\t\t\tif(!input[i][0].contains(\".\")){\n\t\t\t\t\tinput[i][0]=new String(input[i][0]+\".\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tint unit=hm.get(input[i][1]);\n\t\t\t\tif(!check1(input[i][0])){\n\t\t\t\t\tconverter1(input[i][0], unit, i);\n\t\t\t\t}\n\t\t\t\telse if(!check2(input[i][0])){\n\t\t\t\t\tconverter2(input[i][0], unit, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tSystem.out.println(ans[i]);\n\t\t\t}\n\t\t}\n\t}\n\tvoid converter1(String str,int unit,int index){\n\t\tchar ch[]=str.toCharArray();\n\t\tunit--;\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tch[i]=ch[i+1];\n\t\t\t\tch[i+1]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tString temp=zero(String.valueOf(ch));\n\t\tif(!check1(temp)){\n\t\t\tconverter1(temp,unit, index);\n\t\t}\n\t\telse{\n\t\t\t//テ・ツョツ古ヲツ按?\n\t\t\tans[index]=temp+\" * 10^\"+Integer.toString(unit)+\" \"+input[index][2];\n\t\t}\n\t}\n\tvoid converter2(String str,int unit,int index){\n\t\tchar ch[]=str.toCharArray();\n\t\tunit++;\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tch[i]=ch[i-1];\n\t\t\t\tch[i-1]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!check2(String.valueOf(ch))){\n\t\t\tconverter2(String.valueOf(ch),unit, index);\n\t\t}\n\t\telse{\n\t\t\t//テ・ツョツ古ヲツ按?\n\t\t\tans[index]=String.valueOf(ch)+\" * 10^\"+Integer.toString(unit)+\" \"+input[index][2];\n\t\t}\n\t}\n\tboolean check1(String str){\n\t\tchar ch[]=str.toCharArray();\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(ch[0]=='0'){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t//テ・ツョツ淌」ツ?ッテ」ツ?禿」ツ?ョテ」ツδ?」ツつァテ」ツδε」ツつッテ・ツ債アテゥツ卍コテ」ツ?づ」ツつづ」ツ??01.23テ」ツ?ィテ」ツ?凝」ツつ?0ティツカツ?」ツ?暗」ツ?ィテ・ツ按、テ・ツョツ堙」ツ?療」ツ?ヲテ」ツ?療」ツ?セテ」ツ??」ツ??\n\tboolean check2(String str){\n\t\tchar ch[]=str.toCharArray();\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(1<i){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tString zero(String str){\n\t\t//System.out.println(\"zero\");\n\t\tchar ch[]=str.toCharArray();\n\t\tint n=ch.length;\n\t\t\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(ch[i]=='0' && ch[i+1]!='.'){\n\t\t\t\tfor(int j=i; j<n-1; j++){\n\t\t\t\t\tch[j]=ch[j+1];\n\t\t\t\t}\n\t\t\t\tch[n-1]=0;\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(ch[i+1]==0)\n\t\t\t\t\tch[i]=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn String.valueOf(ch);\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.math.BigDecimal;\nimport java.util.*;\nimport static java.util.Arrays.*;\nimport static java.lang.Math.*;\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\t\n\tstatic int TC;\n\tpublic static void main(String[] args) {\n\t\tTC = new Integer(sc.nextLine());\n\t\tfor (int i = 0; i < TC; i++) {\n\t\t\tread();\n\t\t\tsolve();\n\t\t}\n\t}\n\t\n\tstatic String A, B, C;\n\tstatic boolean read() {\n\t\tString[] ss = sc.nextLine().split(\" \");\n\t\tif (ss.length == 3) {\n\t\t\tA = ss[0];\n\t\t\tB = ss[1];\n\t\t\tC = ss[2];\n\t\t} else {\n\t\t\tA = ss[0];\n\t\t\tB = \"\";\n\t\t\tC = ss[1];\n\t\t}\n\t\treturn true;\n\t\t\n\t}\n\n\tstatic void solve() {\n\t\tint n = conv(B), dn = 0;\n\t\tint g = 0; boolean cnt = false;\n\t\tfor (int i = 0; i < A.length(); i++) {\n\t\t\tif (cnt && A.charAt(i) != '.') g++;\n\t\t\telse {\n\t\t\t\tif (A.charAt(i) != '.' && A.charAt(i) != '0') {\n\t\t\t\t\tcnt = true;\n\t\t\t\t\tg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tBigDecimal d = new BigDecimal(A), dx = null;\n\t\tif (d.compareTo(new BigDecimal(\"1\")) > 0) {\n\t\t\tdx = new BigDecimal(\"0.1\");\n\t\t\tdn = 1;\n\t\t} else {\n\t\t\tdx = new BigDecimal(\"10\");\n\t\t\tdn = -1;\n\t\t}\n\t\tBigDecimal ub = new BigDecimal(\"9.999999999999999999999999\"), lb = new BigDecimal(\"0.99999999999999999999999999\");\n\t\twhile (d.compareTo(ub) > 0 || d.compareTo(lb) < 0) {\n\t\t\tn += dn;\n\t\t\td = d.multiply(dx);\n\t\t}\n\t\t\n\t\tString dd = d.toString().substring(0, g + 1);\n\t\tif (dd.charAt(dd.length() - 1) == '.') dd = dd.substring(0, dd.length() - 1);\n\t\tSystem.out.println(dd + \" * 10^\" + n + \" \" + C);\n\t\t\n\t}\t\n\t\n\tstatic int conv(String s) {\n\t\tint ret = 0;\n\t\tif (s.equals(\"yotta\")) {\n\t\t\tret = 24; \n\t\t} else if (s.equals(\"zetta\")) {\n\t\t\tret = 21; \n\t\t} else if (s.equals(\"exa\")) {\n\t\t\tret = 18;\n\t\t} else if (s.equals(\"peta\")) {\n\t\t\tret = 15;\n\t\t} else if (s.equals(\"tera\")) {\n\t\t\tret = 12;\n\t\t} else if (s.equals(\"giga\")) {\n\t\t\tret = 9;\n\t\t} else if (s.equals(\"mega\")) {\n\t\t\tret = 6;\n\t\t} else if (s.equals(\"kilo\")) {\n\t\t\tret = 3;\n\t\t} else if (s.equals(\"hecto\")) {\n\t\t\tret = 2;\n\t\t} else if (s.equals(\"deca\")) {\n\t\t\tret = 1;\n\t\t} else if (s.equals(\"deci\")) {\n\t\t\tret = -1;\n\t\t} else if (s.equals(\"centi\")) {\n\t\t\tret = -2;\n\t\t} else if (s.equals(\"milli\")) {\n\t\t\tret = -3;\n\t\t} else if (s.equals(\"micro\")) {\n\t\t\tret = -6;\n\t\t} else if (s.equals(\"nano\")) {\n\t\t\tret = -9;\n\t\t} else if (s.equals(\"pico\")) {\n\t\t\tret = -12;\n\t\t} else if (s.equals(\"femto\")) {\n\t\t\tret = -15;\n\t\t} else if (s.equals(\"ato\")) {\n\t\t\tret = -18;\n\t\t} else if (s.equals(\"zepto\")) {\n\t\t\tret = -21;\n\t\t} else if (s.equals(\"yocto\")) {\n\t\t\tret = -24;\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.math.BigDecimal;\n\npublic class Main{\n    String val1[] = {\"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\", \"giga\", \"mega\", \"kilo\"};\n    String val2[] = {\"yocto\", \"zepto\", \"ato\", \"femto\", \"pico\", \"nano\", \"micro\", \"milli\"};\n\n    Main(){\n\tScanner sc = new Scanner(System.in);\n\tBigDecimal ten = new BigDecimal(10);\n\tBigDecimal one = new BigDecimal(1);\n\n\twhile(sc.hasNext()){\n\t    int n = Integer.parseInt(sc.nextLine());\n\t    for(int k = 0; k < n; k++){\n\t\tString[] str = (sc.nextLine()).split(\" \");\n\t\tint v = 0;\n\t\tString s1, s2;\n\t\tif(str.length == 3){\n\t\t    s1 = str[2];\n\t\t    v = convertTo(str[1]);\n\t\t} else {\n\t\t    s1 = str[1];\n\t\t    v = 0;\n\t\t}\t\t\n\t\tchar[] ch = str[0].toCharArray();\n\t\tif(ch.length > 1){\n\t\t    if(ch[0] != '0' && ch[1] == '.'){\n\t\t\ts2 = str[0];\n\t\t    } else {\n\t\t\tif(ch[0] == '0'){\n\t\t\t    BigDecimal bd = new BigDecimal(str[0]);\n\t\t\t    while(bd.compareTo(one) == -1){\n\t\t\t\tv--;\n\t\t\t\tbd = bd.multiply(ten);\n\t\t\t    }\n\t\t\t    s2 = bd.toString();\n\t\t\t    char[] ch2 = s2.toCharArray();\n\t\t\t    int p = ch2.length-1;\n\t\t\t    for(int i = p; i >= 0; i--){\n\t\t\t\tif(ch2[i] != '0'){\n\t\t\t\t    p = i;\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    if(p == 1){\n\t\t\t\ts2 = String.valueOf(ch2[0]);\n\t\t\t    } else {\n\t\t\t\ts2 = s2.substring(0, p+1);\n\t\t\t    }\n\t\t\t} else {\n\t\t\t    int p = ch.length;\n\t\t\t    for(int i = 2; i < p; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    p = i;\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    v += (p-1);\t\t\t   \n\t\t\t    s2 = String.valueOf(ch[0]) + \".\";\n\t\t\t    for(int i = 1, l = ch.length; i < l; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    continue;\n\t\t\t\t}\n\t\t\t\ts2 += String.valueOf(ch[i]);\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t} else {\n\t\t    s2 = str[0];\n\t\t}\n\n\t\tSystem.out.println(s2+ \" * 10^\"+Integer.toString(v)+\" \"+s1);\n\t    }\n\t}\n    }\n\n\n    int convertTo(String str){\n\tif(str.equals(\"hecto\")){\n\t    return 2;\n\t} else if(str.equals(\"deca\")){\n\t    return 1;\n\t} else if(str.equals(\"deci\")){\n\t    return -1;\n\t} else if(str.equals(\"centi\")){\n\t    return -2;\n\t}\n\n\tint v = 24;\n\tboolean f = false;\n\tfor(int i = 0, l = val1.length; i < l; i++, v-=3){\n\t    if(str.equals(val1[i])){\n\t\tf = true;\n\t\tbreak;\n\t    }\n\t}\n\n\tif(f){\n\t    return v;\n\t}\n\tv = -24;\n\tfor(int i = 0, l = val2.length; i < l; i++, v+=3){\n\t    if(str.equals(val2[i])){\n\t\tbreak;\n\t    }\n\t}\n\n\treturn v;\n    }\n\n    public static void main(String[] args){\n\tnew Main();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.math.BigDecimal;\nimport java.util.*;\nimport static java.util.Arrays.*;\nimport static java.lang.Math.*;\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\t\n\tstatic int TC;\n\tpublic static void main(String[] args) {\n\t\tTC = new Integer(sc.nextLine());\n\t\tfor (int i = 0; i < TC; i++) {\n\t\t\tread();\n\t\t\tsolve();\n\t\t}\n\t}\n\t\n\tstatic String A, B, C;\n\tstatic boolean read() {\n\t\tString[] ss = sc.nextLine().split(\" \");\n\t\tif (ss.length == 3) {\n\t\t\tA = ss[0];\n\t\t\tB = ss[1];\n\t\t\tC = ss[2];\n\t\t} else {\n\t\t\tA = ss[0];\n\t\t\tB = \"\";\n\t\t\tC = ss[1];\n\t\t}\n\t\treturn true;\n\t\t\n\t}\n\n\tstatic void solve() {\n\t\tint n = conv(B), dn = 0;\n\t\tBigDecimal d = new BigDecimal(A), dx = null;\n\t\tif (d.compareTo(new BigDecimal(\"1\")) > 0) {\n\t\t\tdx = new BigDecimal(\"0.1\");\n\t\t\tdn = 1;\n\t\t} else {\n\t\t\tdx = new BigDecimal(\"10\");\n\t\t\tdn = -1;\n\t\t}\n\t\tBigDecimal ub = new BigDecimal(\"9.999999999999999999999999\"), lb = new BigDecimal(\"0.99999999999999999999999999\");\n\t\twhile (d.compareTo(ub) > 0 || d.compareTo(lb) < 0) {\n\t\t\tn += dn;\n\t\t\td = d.multiply(dx);\n\t\t}\n\t\t\n\t\tSystem.out.println(d + \" * 10^\" + n + \" \" + C);\n\t\t\n\t}\t\n\t\n\tstatic int conv(String s) {\n\t\tint ret = 0;\n\t\tif (s.equals(\"yotta\")) {\n\t\t\tret = 24; \n\t\t} else if (s.equals(\"zetta\")) {\n\t\t\tret = 21; \n\t\t} else if (s.equals(\"exa\")) {\n\t\t\tret = 18;\n\t\t} else if (s.equals(\"peta\")) {\n\t\t\tret = 15;\n\t\t} else if (s.equals(\"tera\")) {\n\t\t\tret = 12;\n\t\t} else if (s.equals(\"giga\")) {\n\t\t\tret = 9;\n\t\t} else if (s.equals(\"mega\")) {\n\t\t\tret = 6;\n\t\t} else if (s.equals(\"kilo\")) {\n\t\t\tret = 3;\n\t\t} else if (s.equals(\"hecto\")) {\n\t\t\tret = 2;\n\t\t} else if (s.equals(\"deca\")) {\n\t\t\tret = 1;\n\t\t} else if (s.equals(\"deci\")) {\n\t\t\tret = -1;\n\t\t} else if (s.equals(\"centi\")) {\n\t\t\tret = -2;\n\t\t} else if (s.equals(\"milli\")) {\n\t\t\tret = -3;\n\t\t} else if (s.equals(\"micro\")) {\n\t\t\tret = -6;\n\t\t} else if (s.equals(\"nano\")) {\n\t\t\tret = -9;\n\t\t} else if (s.equals(\"pico\")) {\n\t\t\tret = -12;\n\t\t} else if (s.equals(\"femto\")) {\n\t\t\tret = -15;\n\t\t} else if (s.equals(\"ato\")) {\n\t\t\tret = -18;\n\t\t} else if (s.equals(\"zepto\")) {\n\t\t\tret = -21;\n\t\t} else if (s.equals(\"yocto\")) {\n\t\t\tret = -24;\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\tHashMap<String, Integer> hm=new HashMap<String, Integer>();\n\tString ans[];\n\tString input[][];\n\tpublic static void main(String[] args) {\n\t\t//new AOJ2188().run();\n\t\tnew Main().run();\n\t}\n\tvoid run(){\n\t\thm.put(\"yotta\", 24);\n\t\thm.put(\"zetta\", 21);\n\t\thm.put(\"exa\", 18);\n\t\thm.put(\"peta\", 15);\n\t\thm.put(\"tera\", 12);\n\t\thm.put(\"giga\", 9);\n\t\thm.put(\"mega\", 6);\n\t\thm.put(\"kilo\", 3);\n\t\thm.put(\"hecto\", 2);\n\t\thm.put(\"deca\", 1);\n\t\thm.put(\"nomal\", 0);\n\t\thm.put(\"deci\", -1);\n\t\thm.put(\"canti\", -2);\n\t\thm.put(\"milli\", -3);\n\t\thm.put(\"micro\", -6);\n\t\thm.put(\"nano\", -9);\n\t\thm.put(\"pico\", -12);\n\t\thm.put(\"femto\", -15);\n\t\thm.put(\"ato\", -18);\n\t\thm.put(\"zepto\", -21);\n\t\thm.put(\"yocto\", -24);\n\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tinput=new String[n][];\n\t\t\tans=new String[n];\n\t\t\tsc.nextLine();\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tinput[i]=sc.nextLine().split(\" \");\n\t\t\t\tif(input[i].length==2){\n\t\t\t\t\tString str[]=new String[3];\n\t\t\t\t\tstr[0]=input[i][0];\n\t\t\t\t\tstr[1]=\"nomal\";\n\t\t\t\t\tstr[2]=input[i][1];\n\t\t\t\t\tinput[i]=new String[3];\n\t\t\t\t\tinput[i][0]=str[0];\n\t\t\t\t\tinput[i][1]=str[1];\n\t\t\t\t\tinput[i][2]=str[2];\n\t\t\t\t}\n\t\t\t\tif(!input[i][0].contains(\".\")){\n\t\t\t\t\tinput[i][0]=new String(input[i][0]+\".\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tint unit=hm.get(input[i][1]);\n\t\t\t\tif(!check1(input[i][0])){\n\t\t\t\t\tconverter1(input[i][0], unit, i);\n\t\t\t\t}\n\t\t\t\telse if(!check2(input[i][0])){\n\t\t\t\t\tconverter2(input[i][0], unit, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tSystem.out.println(ans[i]);\n\t\t\t}\n\t\t}\n\t}\n\tvoid converter1(String str,int unit,int index){\n\t\tchar ch[]=str.toCharArray();\n\t\tunit--;\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tch[i]=ch[i+1];\n\t\t\t\tch[i+1]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tString temp=zero(String.valueOf(ch));\n\t\tif(!check1(temp)){\n\t\t\tconverter1(temp,unit, index);\n\t\t}\n\t\telse{\n\t\t\t//テ・ツョツ古ヲツ按?\n\t\t\tans[index]=temp+\" * 10^\"+Integer.toString(unit)+\" \"+input[index][2];\n\t\t}\n\t}\n\tvoid converter2(String str,int unit,int index){\n\t\tchar ch[]=str.toCharArray();\n\t\tunit++;\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tch[i]=ch[i-1];\n\t\t\t\tch[i-1]='.';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!check2(String.valueOf(ch))){\n\t\t\tconverter2(String.valueOf(ch),unit, index);\n\t\t}\n\t\telse{\n\t\t\t//テ・ツョツ古ヲツ按?\n\t\t\tans[index]=String.valueOf(ch)+\" * 10^\"+Integer.toString(unit)+\" \"+input[index][2];\n\t\t}\n\t}\n\tboolean check1(String str){\n\t\tchar ch[]=str.toCharArray();\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(ch[0]=='0'){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t//テ・ツョツ淌」ツ?ッテ」ツ?禿」ツ?ョテ」ツδ?」ツつァテ」ツδε」ツつッテ・ツ債アテゥツ卍コテ」ツ?づ」ツつづ」ツ??01.23テ」ツ?ィテ」ツ?凝」ツつ?0ティツカツ?」ツ?暗」ツ?ィテ・ツ按、テ・ツョツ堙」ツ?療」ツ?ヲテ」ツ?療」ツ?セテ」ツ??」ツ??\n\tboolean check2(String str){\n\t\tchar ch[]=str.toCharArray();\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(1<i){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tString zero(String str){\n\t\t//System.out.println(\"zero\");\n\t\tchar ch[]=str.toCharArray();\n\t\tint n=ch.length;\n\t\t\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(ch[i]=='0' && ch[i+1]!='.'){\n\t\t\t\tfor(int j=i; j<n-1; j++){\n\t\t\t\t\tch[j]=ch[j+1];\n\t\t\t\t}\n\t\t\t\tch[n-1]=0;\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tif(ch[i]=='.'){\n\t\t\t\tif(ch[i+1]==0)\n\t\t\t\t\tch[i]=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn String.valueOf(ch);\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    String val1[] = {\"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\", \"giga\", \"mega\", \"kilo\"};\n    String val2[] = {\"yocto\", \"zepto\", \"ato\", \"femto\", \"pico\", \"nano\", \"micro\", \"milli\"};\n\n    Main(){\n\tScanner sc = new Scanner(System.in);\n\n\twhile(sc.hasNext()){\n\t    int n = Integer.parseInt(sc.nextLine());\n\t    for(int k = 0; k < n; k++){\n\t\tString[] str = (sc.nextLine()).split(\" \");\n\t\tint v = 0;\n\t\tString s1, s2;\n\t\tif(str.length == 3){\n\t\t    s1 = str[2];\n\t\t    v = convertTo(str[1]);\n\t\t} else {\n\t\t    s1 = str[1];\n\t\t    v = 0;\n\t\t}\t\t\n\t\tchar[] ch = str[0].toCharArray();\n\t\tif(ch.length > 1){\n\t\t    if(ch[0] != '0' && ch[1] == '.'){\n\t\t\ts2 = str[0];\n\t\t    } else {\n\t\t\tif(ch[0] == '0'){\n\t\t\t    int p = 2;\n\t\t\t    while(ch[p] == '0'){\n\t\t\t\tp++;\n\t\t\t    }\n\t\t\t    v -= (p-1);\n\t\t\t    s2 = String.valueOf(ch[p]) + \".\";\n\t\t\t    for(int i = p+1, l = ch.length; i < l; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    continue;\n\t\t\t\t}\n\t\t\t\ts2 += String.valueOf(ch[i]);\n\t\t\t    }\n\t\t\t} else {\n\t\t\t    int p = ch.length;\n\t\t\t    for(int i = 2; i < p; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    p = i;\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    v += (p-1);\t\t\t   \n\t\t\t    s2 = String.valueOf(ch[0]) + \".\";\n\t\t\t    for(int i = 1, l = ch.length; i < l; i++){\n\t\t\t\tif(ch[i] == '.'){\n\t\t\t\t    continue;\n\t\t\t\t}\n\t\t\t\ts2 += String.valueOf(ch[i]);\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t} else {\n\t\t    s2 = str[0];\n\t\t}\n\n\t\tSystem.out.println(s2+ \" * 10^\"+Integer.toString(v)+\" \"+s1);\n\t    }\n\t}\n    }\n\n\n    int convertTo(String str){\n\tif(str.equals(\"hecto\")){\n\t    return 2;\n\t} else if(str.equals(\"deca\")){\n\t    return 1;\n\t} else if(str.equals(\"deci\")){\n\t    return -1;\n\t} else if(str.equals(\"centi\")){\n\t    return -2;\n\t}\n\n\tint v = 24;\n\tboolean f = false;\n\tfor(int i = 0, l = val1.length; i < l; i++, v-=3){\n\t    if(str.equals(val1[i])){\n\t\tf = true;\n\t\tbreak;\n\t    }\n\t}\n\n\tif(f){\n\t    return v;\n\t}\n\tv = -24;\n\tfor(int i = 0, l = val2.length; i < l; i++, v+=3){\n\t    if(str.equals(val2[i])){\n\t\tbreak;\n\t    }\n\t}\n\n\treturn v;\n    }\n\n    public static void main(String[] args){\n\tnew Main();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n//Unit Converter\npublic class Main{\n\n\tvoid run(){\n\t\tMap<String, Integer> ref = new HashMap<String, Integer>();\n\t\tref.put(\"yotta\", 24); ref.put(\"zetta\", 21); ref.put(\"exa\", 18); ref.put(\"peta\", 15); ref.put(\"tera\", 12);\n\t\tref.put(\"giga\", 9); ref.put(\"mega\", 6); ref.put(\"kilo\", 3); ref.put(\"hecto\", 2); ref.put(\"deca\", 1);\n\t\tref.put(\"deci\", -1); ref.put(\"centi\", -2); ref.put(\"milli\", -3); ref.put(\"micro\", -6); ref.put(\"nano\", -9);\n\t\tref.put(\"pico\", -12); ref.put(\"femto\", -15); ref.put(\"ato\", -18); ref.put(\"zepto\", -21); ref.put(\"yocto\", -24);\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt(); sc.nextLine();\n\t\twhile(T--!=0){\n\t\t\tString[] t = sc.nextLine().split(\" \");\n\t\t\tchar[] s = null;\n\t\t\tint p = 0;\n\t\t\tString w = \"\";\n\t\t\tif(t[0].contains(\".\")){\n\t\t\t\tp = t[0].indexOf('.')-1;\n\t\t\t\tt[0] = t[0].substring(0, p+1)+t[0].substring(p+2);\n\t\t\t\ts = t[0].toCharArray();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tp = t[0].length()-1;\n\t\t\t\ts = t[0].toCharArray();\n\t\t\t}\n\t\t\tif(t.length==2){\n\t\t\t\tw = t[1];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tw = t[2]; p+=ref.get(t[1]);\n\t\t\t}\n\t\t\tint k = 0;\n\t\t\twhile(s[k]=='0')k++;\n\t\t\t//Lø K\n\t\t\tint K = s.length-k;\n\t\t\tint exp = p-k;\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tres.append(s[k]+\"\");\n\t\t\tif(K>1){\n\t\t\t\tres.append(\".\");\n\t\t\t\tfor(int i=k+1;i<s.length;i++)res.append(s[i]);\n\t\t\t}\n\t\t\tSystem.out.println(res.toString()+\" * 10^\"+exp+\" \"+w);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "C#",
    "code": "using System.Collections.Generic;\nusing System;\n\npublic class P\n{\n    public string a { get; set; }\n    public int b { get; set; }\n}\n\npublic class Hello\n{\n    public static void Main()\n    {\n        var d1 = new string[] { \"yotta\", \"zetta\", \"exa\", \"peta\", \"tera\", \"giga\", \"mega\",\n            \"kilo\", \"hecto\", \"deca\", \"deci\", \"centi\", \"milli\", \"micro\", \"nano\", \"pico\", \"femto\",\n            \"ato\", \"zepto\", \"yocto\" };\n        var d2 = new int[] { 24, 21, 18, 15, 12, 9, 6, 3, 2, 1, -1, -2, -3, -6, -9, -12, -15, -18, -21, -24 };\n        var d = new Dictionary<string, int>();\n        for (int i = 0; i < d1.Length; i++) d[d1[i]] = d2[i];\n        var n = int.Parse(Console.ReadLine().Trim());\n        for (int i = 0; i < n; i++)\n        {\n            string[] line = Console.ReadLine().Trim().Split(' ');\n            var ret = getAns(line[0]);\n            if (d.ContainsKey(line[1]))\n            {\n                var w = ret.b + d[line[1]];\n                Console.WriteLine(\"{0} * 10^{1} {2}\", ret.a, w, line[2]);\n            }\n            else Console.WriteLine(\"{0} * 10^{1} {2}\", ret.a, ret.b, line[1]);\n        }\n    }\n    public static P getAns(string s)\n    {\n        var ret = \"\";\n        var sL = s.Length;\n        var si = s.IndexOf('.');\n        if (si == -1)\n        {\n            if (sL == 1) return new P { a = s, b = 1 };\n            ret = s.Substring(0, 1) + \".\" + s.Substring(1);\n            return new P { a = ret, b = sL - 1 };\n        }\n        else if (s.Substring(0, 2) == \"0.\")\n        {\n            var first = true; var count = 0;\n            for (int i = 2; i < sL; i++)\n            {\n                if (s[i] == '0' && first) count++;\n                else if (s[i] == '0' && !first) ret += s[i].ToString();\n                else if (s[i] != '0' && first) { ret += s[i].ToString() + \".\"; first = false; }\n                else { ret += s[i]; first = false; }\n            }\n            if (ret[ret.Length - 1] == '.') ret = ret.Replace(\".\", \"\");\n            return new P { a = ret, b = -count - 1 };\n        }\n        else\n        {\n            var w = s.Replace(\".\", \"\");\n            ret = w.Substring(0, 1) + \".\" + w.Substring(1);\n            return new P { a = ret, b = si - 1 };\n        }\n    }\n}\n"
  },
  {
    "language": "JavaScript",
    "code": "var dict={};\n    dict[\"yotta\"] = 24;\n    dict[\"zetta\"] = 21;\n    dict[\"exa\"] = 18;\n    dict[\"peta\"] = 15;\n    dict[\"tera\"] = 12;\n    dict[\"giga\"] = 9;\n    dict[\"mega\"] = 6;\n    dict[\"kilo\"] = 3;\n    dict[\"hecto\"] = 2;\n    dict[\"deca\"] = 1;\n    dict[\"deci\"] = -1;\n    dict[\"centi\"] = -2;\n    dict[\"milli\"] = -3;\n    dict[\"micro\"] = -6;\n    dict[\"nano\"] = -9;\n    dict[\"pico\"] = -12;\n    dict[\"femto\"] = -15;\n    dict[\"ato\"] = -18;\n    dict[\"zepto\"] = -21;\n    dict[\"yocto\"] = -24;\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var ary=arr.shift().split(\" \");\n   var a=ary[0].split(\"\");\n   var str=\"\";\n   var flag=true;\n   a.forEach(function(v){\n      if(v!=\"0\" && v!=\".\" && flag){str+=v+\"#\";flag=false;}\n      else str+=v;\n   });\n   a=str.split(\"\");\n   var cnt=0;\n   var one=0;\n   var k;\n   a.forEach(function(v){\n      if(v==\".\" && one==0){k=-1;one=1;}\n      else if(v==\"#\" && one==0){k=1;one=1;}\n      else if(one==1 && v!=\".\" && v!=\"#\")cnt++;\n      else if(one==1 && (v==\".\" || v==\"#\") )one=2;\n   });\n   var plus=(ary.length==3)?dict[ary[1]]:0;\n   var b=\"10^\"+(cnt*k+plus);\n   var ans=a.join(\"\").replace(/\\./,\"\").replace(/#/g,\".\");\n   ans=ans.replace(/^0+/,\"\");\n   ans=ans.replace(/\\.$/,\"\");\n   console.log(ans+\" * \"+b+\" \"+ary[ary.length-1]);\n}"
  },
  {
    "language": "Ruby",
    "code": "POWER = {\n  \"yotta\" => 24,\n  \"zetta\" => 21,\n  \"exa\" => 18,\n  \"peta\" => 15,\n  \"tera\" => 12,\n  \"giga\" => 9,\n  \"mega\" => 6,\n  \"kilo\" => 3,\n  \"hecto\" => 2,\n  \"deca\" => 1,\n  \"deci\" => -1,\n  \"centi\" => -2,\n  \"milli\" => -3,\n  \"micro\" => -6,\n  \"nano\" => -9,\n  \"pico\" => -12,\n  \"femto\" => -15,\n  \"ato\" => -18,\n  \"zepto\" => -21,\n  \"yocto\" => -24,\n}\n\ngets.to_i.times do\n  case (line = gets.split).size\n    when 3\n      number, prefix, unit = line\n    else\n      number, unit = line\n  end\n\n  power = prefix ? POWER[prefix] : 0\n\n  if number.include?(\".\")\n    while(number[0] == \"0\")\n      number.slice!(0)\n      if number[0] == \".\"\n        number[0], number[1] = number[1], number[0]\n        power -= 1\n      end\n    end\n  else\n    number += \".\"\n  end\n\n  until (i = number.index(\".\")) == 1\n    number[i], number[i - 1] = number[i - 1], number[i]\n    power += 1\n  end\n\n  number.slice!(-1) if number[-1] == \".\"\n\n  puts \"#{number} * 10^#{power} #{unit}\"\nend"
  },
  {
    "language": "Ruby",
    "code": "scale = {\n  \"yotta\" => 24 ,\n  \"zetta\" => 21 ,\n  \"exa\"   => 18 ,\n  \"peta\"  => 15 ,\n  \"tera\"  => 12 ,\n  \"giga\"  => 9  ,\n  \"mega\"  => 6  ,\n  \"kilo\"  => 3  ,\n  \"hecto\" => 2  ,\n  \"deca\"  => 1  ,\n  \"deci\"  => -1 ,\n  \"centi\" => -2 ,\n  \"milli\" => -3 ,\n  \"micro\" => -6 ,\n  \"nano\"  => -9 ,\n  \"pico\"  => -12,\n  \"femto\" => -15,\n  \"ato\"   => -18,\n  \"zepto\" => -21,\n  \"yocto\" => -24,\n}\n\nn = gets.to_i\nn.times do\n  s = gets.chomp\n  s =~ /^(\\S+) (\\w+ )?(\\w+)$/\n  if $1[0] == ?0\n    e = -1\n    e -= 1 until $1[1 - e] != ?0\n    precision = $1.size + e - 1\n    x = $1[1 - e] + (precision > 1 ? ?. : \"\") + $1[2-e..-1]\n  elsif $1.count(?.) > 0\n    precision = $1.size - 1\n    e = 0\n    e += 1 until $1[e + 1] == ?.\n    x = $1[0] + ?. + $1[1..e] + $1[e+2..-1]\n  else\n    precision = $1.size\n    e = $1.size - 1\n    x = $1[0] + ?. + $1[1..-1]\n  end\n  e += scale[$2.strip] if $2\n  unit = $3\n  printf(\"%s * 10^%d %s\\n\", x, e, unit)\nend\n"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.ascii;\nimport std.c.stdio;\nimport std.range;\nimport std.array;\nimport std.functional;\nimport std.algorithm;\nimport std.conv;\nimport std.container;\nimport std.math;\nimport std.numeric;\nimport std.string;\nimport std.c.string;\nimport std.regex;\nimport std.typecons;\n\n\nenum int[string] unit = [\n    \"yotta\" : 24,\n    \"zetta\" : 21,\n    \"exa\"   : 18,\n    \"peta\"  : 15,\n    \"tera\"  : 12,\n    \"giga\"  : 9,\n    \"mega\"  : 6,\n    \"kilo\"  : 3,\n    \"hecto\" : 2,\n    \"deca\"  : 1,\n    \"deci\"  : -1,\n    \"centi\" : -2,\n    \"milli\" : -3,\n    \"micro\" : -6,\n    \"nano\"  : -9,\n    \"pico\"  : -12,\n    \"femto\" : -15,\n    \"ato\"   : -18,\n    \"zepto\" : -21,\n    \"yocto\" : -24\n];\n\nvoid main() {\n    string[] xs;\n    void input() {\n        xs = readln.chomp.split(\" \").array;\n    }\n    alias Tuple!(string, int) P;\n    P norm(string s) {\n        string[] ss = s.split(\".\");\n        if (ss.length == 1) {\n            if (s.length == 1) return P(s, 0);\n            return P(s[0] ~ \".\" ~ s[1 .. $], cast(int)s.length - 1);\n        }\n        if (ss[0] == \"0\") {\n            int i;\n            for (i = 0; ss[1][i] == '0'; i++) {}\n            string t = ss[1][i .. $];\n            if (t.length == 1) return P(t,  - i - 1);\n            return P(t[0] ~ \".\" ~ t[1 .. $], - i - 1);\n        } else {\n            s = ss[0];\n            auto t = ss[1];\n            if (s.length == 1) return P(s, 0);\n            return P(s[0] ~ \".\" ~ s[1 .. $] ~ t, cast(int)(s.length - 1));\n        }\n    }\n    void solve() {\n        auto p = norm(xs[0]);\n        if (xs.length == 3) {\n            p[1] += unit[xs[1]];\n        }\n        if (xs.length == 2) {\n            writeln(p[0], \" * 10^\", p[1], \" \", xs[1]);\n        } else {\n            writeln(p[0], \" * 10^\", p[1], \" \", xs[2]);\n        }\n    }\n    int T; scanf(\"%d\\n\", &T);\n    foreach (t; 0 .. T) {\n        input; solve;\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.string;\nimport std.conv;\n\nvoid main(){\n  int n=to!int(readln().chomp);\n  while(n--){\n  \tconst int[string] MP=[\"yotta\":24,\"zetta\":21,\"exa\":18,\"peta\":15,\"tera\":12,\"giga\":9,\"mega\":6,\"kilo\":3,\"hecto\":2,\"deca\":1,\n  \t\"deci\":-1,\"centi\":-2,\"milli\":-3,\"micro\":-6,\"nano\":-9,\"pico\":-12,\"femto\":-15,\"ato\":-18,\"zepto\":-21,\"yocto\":-24];\n    auto s = readln.chomp.split;\n    int a=0;\n    if(s[0][0]=='0'){\n    \ts[0]=s[0].split(\".\").join;\n    \tfor(;a<s[0].length&&s[0][a]=='0';++a){}\n    \tif(a==s[0].length-1) s[0]=to!string(s[0][a]);\n    \telse s[0]=s[0][a]~\".\"~s[0][a+1..s[0].length];\n   \t\ta=-a;\n    }else{\n    \tfor(;a<s[0].length&&s[0][a]!='.';++a){}\n    \tif(a==s[0].length){\n    \t\ts[0]=s[0][0]~\".\"~s[0][1..s[0].length];\n    \t\t--a;\n    \t}else{\n    \t\tauto t=s[0].split(\".\").join;\n    \t\ts[0]=t[0]~\".\"~t[1..t.length];\n    \t\t--a;\n    \t}\n    }\n    if(s[1] in MP) a+=MP[s[1]];\n    writeln(s[0]~\" * \"~\"10^\"~to!string(a)~\" \"~((s.length>2)?s[2]:s[1]));\n  }\n}"
  },
  {
    "language": "Python",
    "code": "m = {\"yotta\":24, \"zetta\":21, \"exa\":18, \"peta\":15, \"tera\":12, \"giga\":9, \"mega\":6, \"kilo\":3, \"hecto\":2, \"deca\":1, \"deci\":-1, \"centi\":-2, \"milli\":-3, \"micro\":-6, \"nano\":-9, \"pico\":-12, \"femto\":-15, \"ato\":-18, \"zepto\":-21, \"yocto\":-24}\nfor _ in range(int(input())):\n    v, *b = input().split()\n    if len(b) == 2:\n        k, b = b[0], b[1]\n        a = m[k]\n    else:b = b[0];a = 0\n    s = 0\n    for i in range(len(v)):\n        if v[i] in \"123456789\":\n            s = len(v) - i\n            if \".\" in v[i + 1:]:s -= 1\n            break\n    x = float(v)\n    while x < 1:\n        x *= 10\n        a -= 1\n    while x >= 10:\n        x /= 10\n        a += 1\n    while 1:\n        if v[0] in \"123456789\":\n            if len(v) != 1:\n                v = v[0] + \".\" + v[1:]\n                if \".\" in v[2:]:\n                    a = 2 + v[2:].index(\".\")\n"
  },
  {
    "language": "Python",
    "code": "m = {\"yotta\":24, \"zetta\":21, \"exa\":18, \"peta\":15, \"tera\":12, \"giga\":9, \"mega\":6, \"kilo\":3, \"hecto\":2, \"deca\":1, \"deci\":-1, \"centi\":-2, \"milli\":-3, \"micro\":-6, \"nano\":-9, \"pico\":-12, \"femto\":-15, \"ato\":-18, \"zepto\":-21, \"yocto\":-24}\nfor _ in range(int(input())):\n    v, *b = input().split()\n    if len(b) == 2:\n        k, b = b[0], b[1]\n        a = m[k]\n    else:b = b[0];a = 0\n    s = 0\n    for i in range(len(v)):\n        if v[i] in \"123456789\":\n            if i != 0:\n                a -= i - 1\n                if i != len(v) - 1:v = v[i] + \".\" + v[i + 1:]\n                else:v = v[i]\n            else:\n                try:\n                    j = v[i:].index(\".\")\n                    a += j - 1\n                    v = v[0] + \".\" + v[1:j] + v[j + 1:]\n                except:\n                    a += len(v) - 1\n                    v = v[0] + \".\" + v[1:]\n            break\n    print(\"{} * 10^{} {}\".format(v, a, b))\n"
  },
  {
    "language": "Python",
    "code": "dic = {\n  \"yotta\":24,\n  \"zetta\":21,\n  \"exa\"  :18,\n  \"peta\" :15,\n  \"tera\" :12,\n  \"giga\" :9,\n  \"mega\" :6,\n  \"kilo\" :3,\n  \"hecto\":2,\n  \"deca\" :1,\n  \"deci\" :-1,\n  \"centi\":-2,\n  \"milli\":-3,\n  \"micro\":-6,\n  \"nano\" :-9,\n  \"pico\" :-12,\n  \"femto\":-15,\n  \"ato\"  :-18,\n  \"zepto\":-21,\n  \"yocto\":-24\n}\n\nn = int(input())\nfor _ in range(n):\n  lst = input().split()\n  if len(lst) == 2:\n    x, z = lst\n    sisuu = 0\n  else:\n    x, y, z = lst\n    sisuu = dic[y]\n\n  if \".\" not in x:\n    x = x + \".\"\n  ind = x.index(\".\")\n  x = x[:ind] + x[ind+1:]\n  \n  while x[0] == \"0\":\n    x = x[1:]\n    ind -= 1\n  if len(x) != 1:\n    x = x[0] + \".\" + x[1:]\n\n  sisuu += (ind - 1)\n\n  print(x , \"*\", \"10^\"+str(sisuu), z)\n"
  }
]