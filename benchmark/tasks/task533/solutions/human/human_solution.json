[
  {
    "language": "Scala",
    "code": "import scala.annotation.tailrec\n//https://onlinejudge.u-aizu.ac.jp/challenges/sources/JAG/Prelim/2883\nobject Main extends App {\n  import scala.io.StdIn._\n  solve\n  @tailrec def solve: Unit = {\n    val expresssion = readLine.trim.toList\n    if (expresssion == '.'::Nil) return\n    val password = new Password(readLine.trim.toInt)\n    expresssion match{\n      case hash Hash Nil ⇒ {\n        val checkSum = hash.calHash(password)\n        println(\n          s\"$checkSum ${(0 until 10000).count{p ⇒ hash.calHash(new Password(p)) == checkSum}}\"\n        )\n      }\n      case _ ⇒ throw new Exception\n    }\n    solve\n  }\n\n  case class Password(a: Int, b: Int, c: Int, d:Int) {\n    def this(password: Int){\n      this(password / 1000, (password / 100) % 10, (password / 10) % 10, password % 10)\n    }\n  }\n  sealed trait HashFunc{\n    def calHash(password: Password): Int\n  }\n  object Hash {\n    def unapply(arg: List[Char]): Option[(HashFunc, List[Char])] = arg match {\n      case '['::Operator(op, hashA Hash (hashB Hash ']'::t)) ⇒ Some(op.operation(hashA, hashB), t)\n      case l Letter t ⇒ Some(l, t)\n      case _ ⇒ None\n    }\n  }\n  class Hash(private val func:(Password)⇒ Int) extends HashFunc {\n    override def calHash(password: Password): Int = func(password)\n  }\n  sealed trait Letter extends HashFunc\n  object Letter {\n    def unapply(arg: List[Char]): Option[(Letter, List[Char])] = arg match {\n      case c::t if ('a' to 'd').contains(c) ⇒ Some(new ReadLetter(c), t)\n      case _ ⇒ None\n    }\n  }\n  class ReadLetter(private val char: Char) extends Letter {\n    override def calHash(password: Password): Int = char match {\n      case 'a' ⇒ password.a\n      case 'b' ⇒ password.b\n      case 'c' ⇒ password.c\n      case 'd' ⇒ password.d\n      case _ ⇒ throw new Exception\n    }\n  }\n  sealed trait Operator {\n    def operation(hashA: HashFunc, hashB: HashFunc): HashFunc\n  }\n  object Operator {\n    def unapply(arg: List[Char]): Option[(Operator, List[Char])] = arg match {\n      case '+'::t ⇒ Some(OrOp, t)\n      case '*'::t ⇒ Some(AndOp, t)\n      case '^'::t ⇒ Some(XorOp, t)\n      case _ ⇒ None\n    }\n  }\n  object AndOp extends Operator {\n    override def operation(hashA: HashFunc, hashB: HashFunc): HashFunc = new Hash({p ⇒ hashA.calHash(p) & hashB.calHash(p)})\n  }\n  object OrOp extends Operator {\n    override def operation(hashA: HashFunc, hashB: HashFunc): HashFunc = new Hash({p ⇒ hashA.calHash(p) | hashB.calHash(p)})\n  }\n  object XorOp extends Operator {\n    override def operation(hashA: HashFunc, hashB: HashFunc): HashFunc = new Hash({p ⇒ hashA.calHash(p) ^ hashB.calHash(p)})\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <cassert>\nusing namespace std;\n#define rep(i, n) for (i = 0; i < n; ++i)\n\nint a[4];\nint expr(string &s, int &p) {\n    if (isalpha(s[p])) return a[s[p++] - 'a'];\n    assert(s[p++] == '[');\n    char op = s[p++];\n    int x = expr(s, p);\n    int y = expr(s, p);\n    assert(s[p++] == ']');\n    if (op == '+') return x | y;\n    if (op == '*') return x & y;\n    if (op == '^') return x ^ y;\n}\n\nint main() {\n    string s;\n    while (cin >> s, s != \".\") {\n        string pass; cin >> pass;\n        for (int i = 0; i < 4; i++) a[i] = pass[i] - '0';\n        int p = 0, ans = expr(s, p);\n        int cnt = 0;\n        rep(a[0], 10) rep(a[1], 10) rep(a[2], 10) rep(a[3], 10) {\n            int p = 0;\n            if (ans == expr(s, p)) cnt++;\n        }\n        cout << ans << \" \" << cnt << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define rep(i,l,r) for(ll i=l;i<=r;i++)\n#define pb push_back\n#define fastio ios::sync_with_stdio(false); cin.tie(0);cout.tie(0);\n/////////////////////////////\n\nll cal(vector<ll>s){\n    ll ls=s.size();\n    while(s.size()>=2){\n        \n        ls=s.size();\n        bool debugflag=false;\n        vector<ll>t;\n        rep(i,0,ls-1){\n            bool flag=false;\n            if(i<=ls-5)if(s[i]==100&&s[i+4]==200){\n                if(0<=s[i+2]&&s[i+2]<=15){\n                    if(0<=s[i+3]&&s[i+3]<=15){\n                        ll add=0;\n                        if(s[i+1]==300){\n                            add=(s[i+2]|s[i+3]);\n                            flag=true;\n                            \n                        }else if(s[i+1]==400){\n                            add=(s[i+2]^s[i+3]);\n                            flag=true;\n                        }else if(s[i+1]==500){\n                            add=(s[i+2]&s[i+3]);\n                            flag=true;\n                        }\n                        \n                        if(flag){\n                            t.pb(add);\n                        }\n                    }\n                }\n            }\n            if(!flag){\n                t.pb(s[i]);\n            }else{\n                i+=4;\n                debugflag=true;\n            }\n        }\n        /*if(debugflag==false){\n            for(auto x:s){\n                cout<<x<<\" \";\n            }cout<<endl;\n            return -1;\n        }*/\n        s.clear();\n        for(auto x:t)s.pb(x);\n    }\n    return s[0];\n}\n\nbool ansproblem(string moto){\n    string t;cin>>t;\n    vector<ll>s;\n    ll ls=moto.length();\n    rep(i,0,ls-1){\n        if(moto[i]=='[')s.pb(100);\n        else if(moto[i]==']')s.pb(200);\n        else if(moto[i]=='+')s.pb(300);\n        else if(moto[i]=='^')s.pb(400);\n        else if(moto[i]=='*')s.pb(500);\n        else{\n            if(moto[i]=='a')s.pb(t[0]-'0');\n            else if(moto[i]=='b')s.pb(t[1]-'0');\n            else if(moto[i]=='c')s.pb(t[2]-'0');\n            else s.pb(t[3]-'0');\n        }\n    }\n    ll ans=cal(s);\n    ll count=0;\n    rep(a,0,9){\n        rep(b,0,9){\n            rep(c,0,9){\n                rep(d,0,9){\n                    vector<ll>s;\n                    rep(i,0,ls-1){\n                        if(moto[i]=='[')s.pb(100);\n                        else if(moto[i]==']')s.pb(200);\n                        else if(moto[i]=='+')s.pb(300);\n                        else if(moto[i]=='^')s.pb(400);\n                        else if(moto[i]=='*')s.pb(500);\n                        else{\n                            if(moto[i]=='a')s.pb(a);\n                            else if(moto[i]=='b')s.pb(b);\n                            else if(moto[i]=='c')s.pb(c);\n                            else s.pb(d);\n                        }\n                    }\n                    if(cal(s)==ans)count++;\n                }\n            }\n        }\n    }\n    cout<<ans<<\" \"<<count<<endl;\n    \n    return 0;\n}\n\nint main(){fastio\n    \n    while(1){\n        string s;cin>>s;\n        if(s[0]=='.'){\n            break;\n        }\n        ansproblem(s);\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define F first\n#define S second\n#define pii pair<int, int>\n#define eb emplace_back\n#define all(v) v.begin(), v.end()\n#define rep(i, n) for (int i = 0; i < n; ++i)\n#define rep3(i, l, n) for (int i = l; i < n; ++i)\n#define chmax(a, b) a = max(a, b)\n#define chmin(a, b) a = min(a, b)\n#define out(a) cout << a << endl\n#define SZ(v) (int)v.size()\n#define inf (int)(1e9+7)\n\n\nint calc(string pass) {\n    stack<char> s;\n    for (int i = SZ(pass) - 1; i >= 0; --i) {\n        if (pass[i] == ']') continue;\n        if (pass[i] == '[') {\n            char op = s.top();\n            s.pop();\n            int a = s.top() - '0';\n            s.pop();\n            int b = s.top() - '0';\n            s.pop();\n            if (op == '+') a |= b;\n            else if (op == '*') a &= b;\n            else a ^= b;\n            s.push(a + '0');\n        }\n        else s.push(pass[i]);\n    }\n    //out(SZ(s));\n    int tmp = s.top() - '0';\n    return tmp;\n}\nstring make_pass2(string pass, string num) {\n    rep(i, SZ(pass)) {\n        if ('a' <= pass[i] && pass[i] <= 'd') {\n            pass[i] = num[pass[i] - 'a'];\n        }\n    }\n    return pass;\n}\nint main() {\n    string pass;\n    while (cin >> pass && pass != \".\") {\n        string num; cin >> num;\n        string pass2 = make_pass2(pass, num);\n        int tmp = calc(pass2);\n        int ans = 0;\n        \n        \n        rep(i, 10) rep(j, 10) rep(k, 10) rep(l, 10) {\n            num = \"\"; num += i + '0';\n            num += j + '0';\n            num += k + '0';\n            num += l + '0';\n            pass2 = make_pass2(pass, num);\n            \n            if (calc(pass2) == tmp) {\n                ans++;\n            }\n        }\n        out(tmp << \" \" << ans);\n    }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nstring s;\nint ind = 0;\n\nstruct E {\n  int type;\n  int op;\n  E *l, *r;\n  int index;\n};\n\nE *parse() {\n  E *p = new E();\n  if (s[ind] == '[') {\n    p->type = 0;\n    ind++;\n    p->op = s[ind];\n    ind++;\n    p->l = parse();\n    p->r = parse();\n    ind++;\n  } else {\n    p->type = 1;\n    p->index = s[ind] - 'a';\n    ind++;\n  }\n  return p;\n}\n\nvoid fr(E *p) {\n  if (p->type == 0) {\n    fr(p->l);\n    fr(p->r);\n  }\n  free(p);\n}\n\nll eval(E *p, string s) {\n  if (p->type == 0) {\n    if (p->op == '+') {\n      return eval(p->l, s) | eval(p->r, s);\n    } else if (p->op == '*') {\n      return eval(p->l, s) & eval(p->r, s);\n    } else {\n      return eval(p->l, s) ^ eval(p->r, s);\n    }\n  } else {\n    return s[p->index] - '0';\n  }\n}\n\nstring num[10] = {\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"};\n\nint main() {\n  while (true) {\n    cin >> s;\n    ind = 0;\n    if (s == \".\")\n      break;\n    string t;\n    cin >> t;\n    auto f = parse();\n    int val = eval(f, t);\n    int ans = 0;\n    for (int i = 0; i < 10; i++)\n      for (int j = 0; j < 10; j++)\n        for (int k = 0; k < 10; k++)\n          for (int l = 0; l < 10; l++) {\n            string ss = num[i] + num[j] + num[k] + num[l];\n            if (val == eval(f, ss))\n              ans++;\n          }\n    cout << val << \" \" << ans << endl;\n    fr(f);\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nstring replace(string s, string p){\n  for(size_t i = 0; i < s.length(); ++i){\n    if(s[i] >= 'a' && s[i] < 'e'){\n      s[i] = p[s[i]-'a'];\n    }\n  }\n  return s;\n}\n\nint Hash(int &i, string &s){\n  if(s[i] == '['){\n    ++i;\n    int ret = Hash(i,s);\n    ++i;\n    return ret;\n  }\n  if(s[i] == '+'){\n    ++i;\n    int a = Hash(i,s), b = Hash(i,s);\n    return (a|b);\n  }\n  if(s[i] == '*'){\n    ++i;\n    int a = Hash(i,s), b = Hash(i,s);\n    return (a&b);\n  }\n  if(s[i] == '^'){\n    ++i;\n    int a = Hash(i,s), b = Hash(i,s);\n    return (a^b);\n  }\n  if(s[i] >= '0' && s[i] <= '9'){\n    ++i;\n    return (s[i-1] - '0');\n  }\n  return 0;\n}\n\nvoid solve(string s, string p){\n  string s_ = replace(s,p);\n  //cout << s_ << endl;\n  int i = 0, t = Hash(i,s_), count = 0;\n  for(int a = 0; a < 10; ++a){\n    for(int b = 0; b < 10; ++b){\n      for(int c = 0; c < 10; ++c){\n        for(int d = 0; d < 10; ++d){\n          string p_ = to_string(a) + to_string(b) + to_string(c) + to_string(d);\n          i = 0;\n          s_ = replace(s,p_);\n          if(Hash(i,s_) == t) ++count;\n        }\n      }\n    }\n  }\n  cout << t << \" \" << count << endl;\n}\n\nint main(){\n  string s;\n  while(cin >> s, s != \".\"){\n    string p;\n    cin >> p;\n    solve(s,p);\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "    #include <bits/stdc++.h>\n                                            #include<iostream>\n                                            #include<cstdio>\n                                            #include<vector>\n                                            #include<queue>\n                                            #include<map>\n                                            #include<cstring>\n                                            #include<string>\n                                            #include <math.h>\n                                            #include<algorithm>\n                                        //    #include <boost/multiprecision/cpp_int.hpp>\n                                            #include<functional>\n                                   #define int long long\n                                            #define inf  1000000007\n                                            #define pa pair<int,int>\n                                            #define ll long long\n                                            #define pal pair<double,double>\n                                            #define ppap pair<pa,int>\n                                    //  #define PI 3.14159265358979323846\n                                            #define paa pair<int,char>\n                                            #define  mp make_pair\n                                            #define  pb push_back\n                                            #define EPS (1e-10)\n                                            #define equals(a,b) (fabs((a)-(b))<EPS)\n    int dx[4]={0,-1,0,1};\n    int dy[4]={1,0,-1,0};\n                                            using namespace std;\n                                   \t\t\tclass pa3{\n                                            \tpublic:\n                                            \tint x,y,z;\n                                            \tpa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}\n                                            \tbool operator < (const pa3 &p) const{\n                                            \t\tif(x!=p.x) return x<p.x;\n                                            \t\tif(y!=p.y) return y<p.y;\n                                            \t\t return z<p.z;\n                                            \t\t//return x != p.x ? x<p.x: y<p.y;\n                                            \t}\n                                   \t\t\t\tbool operator > (const pa3 &p) const{\n                                            \t\tif(x!=p.x) return x>p.x;\n                                            \t\tif(y!=p.y) return y>p.y;\n                                            \t\t return z>p.z;\n                                            \t\t//return x != p.x ? x<p.x: y<p.y;\n                                            \t}\n                                            \tbool operator == (const pa3 &p) const{\n                                            \t\treturn x==p.x && y==p.y && z==p.z;\n                                            \t}\n                                            \t\tbool operator != (const pa3 &p) const{\n                                            \t\t\treturn !( x==p.x && y==p.y && z==p.z);\n                                            \t}\n                                            \n                                            };\n                                            \n                                            class pa4{\n                                            \tpublic:\n                                            \tdouble x;\n                                            \tint y,z,w;\n                                            \tpa4(double x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}\n                                            \tbool operator < (const pa4 &p) const{\n                                            \t\tif(x!=p.x) return x<p.x;\n                                            \t\tif(y!=p.y) return y<p.y;\n                                            \t\tif(z!=p.z)return z<p.z;\n                                            \t\treturn w<p.w;\n                                            \t\t//return x != p.x ? x<p.x: y<p.y;\n                                            \t}\n                                            \tbool operator > (const pa4 &p) const{\n                                            \t\tif(x!=p.x) return x>p.x;\n                                            \t\tif(y!=p.y) return y>p.y;\n                                            \t\tif(z!=p.z)return z>p.z;\n                                            \t\treturn w>p.w;\n                                            \t\t//return x != p.x ? x<p.x: y<p.y;\n                                            \t}\n                                            \tbool operator == (const pa4 &p) const{\n                                            \t\treturn x==p.x && y==p.y && z==p.z &&w==p.w;\n                                            \t}\n                                            \t\t\n                                            \n                                            };\n                                            class pa2{\n                                            \tpublic:\n                                            \tint x,y;\n                                            \tpa2(int x=0,int y=0):x(x),y(y) {}\n                                            \tpa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}\n                                            \tpa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}\n                                            \tbool operator < (const pa2 &p) const{\n                                            \t\treturn y != p.y ? y<p.y: x<p.x;\n                                            \t}\n                                            \tbool operator > (const pa2 &p) const{\n                                            \t\treturn x != p.x ? x<p.x: y<p.y;\n                                            \t}\n                                            \tbool operator == (const pa2 &p) const{\n                                            \t\treturn abs(x-p.x)==0 && abs(y-p.y)==0;\n                                            \t}\n                                            \tbool operator != (const pa2 &p) const{\n                                            \t\treturn !(abs(x-p.x)==0 && abs(y-p.y)==0);\n                                            \t}\n                                            \t\t\n                                            \n                                            };\n                                            \n                                                   #define ppa pair<int,pas>\n                                            class Point{\n                                            \tpublic:\n                                            \tdouble x,y;\n                                            \tPoint(double x=0,double y=0):x(x),y(y) {}\n                                            \tPoint operator + (Point p) {return Point(x+p.x,y+p.y);}\n                                            \tPoint operator - (Point p) {return Point(x-p.x,y-p.y);}\n                                            \tPoint operator * (double a) {return Point(x*a,y*a);}\n                                            \tPoint operator / (double a) {return Point(x/a,y/a);}\n                                            \tdouble absv() {return sqrt(norm());}\n                                            \tdouble norm() {return x*x+y*y;}\n                                            \tbool operator < (const Point &p) const{\n                                            \t\treturn x != p.x ? x<p.x: y<p.y;\n                                            \t}\n                                            \tbool operator == (const Point &p) const{\n                                            \t\treturn fabs(x-p.x)<EPS && fabs(y-p.y)<EPS;\n                                            \t}\n                                            };\n                                            typedef Point Vector;\n                                     #define pl pair<int,pas>\n                                            struct Segment{\n                                            Point p1,p2;\n                                            };\n                                             double dot(Vector a,Vector b){\n                                            \treturn a.x*b.x+a.y*b.y;\n                                            }\n                                            double cross(Vector a,Vector b){\n                                            \treturn a.x*b.y-a.y*b.x;\n                                            }\n                                        \n                bool parareru(Point a,Point b,Point c,Point d){\n                //\tif(abs(cross(a-b,d-c))<EPS)cout<<\"dd \"<<cross(a-b,d-c)<<endl;\n                \treturn abs(cross(a-b,d-c))<EPS;\n                }\n                double distance_ls_p(Point a, Point b, Point c) {\n                  if ( dot(b-a, c-a) < EPS ) return (c-a).absv();\n                  if ( dot(a-b, c-b) < EPS ) return (c-b).absv();\n                  return abs(cross(b-a, c-a)) / (b-a).absv();\n                }\n                bool is_intersected_ls(Segment a,Segment b) {\n                \tif(a.p1==b.p1||a.p2==b.p1||a.p1==b.p2||a.p2==b.p2) return false;\n                \tif(parareru((a.p2),(a.p1),(a.p1),(b.p2))&&parareru((a.p2),(a.p1),(a.p1),(b.p1))){\n                //\t\tcout<<\"sss\"<<endl;\n                \t\tif(dot(a.p1-b.p1,a.p1-b.p2)<EPS) return true;\n                \t\tif(dot(a.p2-b.p1,a.p2-b.p2)<EPS) return true;\n                \t\tif(dot(a.p1-b.p1,a.p2-b.p1)<EPS) return true;\n                \t\tif(dot(a.p1-b.p2,a.p2-b.p2)<EPS) return true;\n                \t\treturn false;\n                \t}\n                  else return ( cross(a.p2-a.p1, b.p1-a.p1) * cross(a.p2-a.p1, b.p2-a.p1) < EPS ) && ( cross(b.p2-b.p1, a.p1-b.p1) * cross(b.p2-b.p1, a.p2-b.p1) < EPS );\n                }\n                 \n                double segment_dis(Segment a,Segment b){\n                \tif(is_intersected_ls(a,b))return 0;\n                \tdouble r=distance_ls_p(a.p1, a.p2, b.p1);\n                \tr=min(r,distance_ls_p(a.p1, a.p2, b.p2));\n                \tr=min(r,distance_ls_p(b.p1, b.p2, a.p2));\n                \tr=min(r,distance_ls_p(b.p1, b.p2, a.p1));\n                \treturn r;\n                }\n                Point intersection_ls(Segment a, Segment b) {\n                  Point ba = b.p2-b.p1;\n                  double d1 = abs(cross(ba, a.p1-b.p1));\n                  double d2 = abs(cross(ba, a.p2-b.p1));\n                  double t = d1 / (d1 + d2);\n                 \n                  return a.p1 + (a.p2-a.p1) * t;\n                }\n                 \n                                string itos( int i ) {\n                                ostringstream s ;\n                                s << i ;\n                                return s.str() ;\n                                }\n                                 \n                                int gcd(int v,int b){\n                                \tif(v>b) return gcd(b,v);\n                                \tif(v==b) return b;\n                                \tif(b%v==0) return v;\n                                \treturn gcd(v,b%v);\n                                }\n                 \n                                double distans(double x1,double y1,double x2,double y2){\n                                \tdouble rr=(x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);\n                                \treturn sqrt(rr);\n                                \t\n                                }\n                                int mod;\n           //     int pr[2000010];\n             //   int inv[2000010];\n               \n                int beki(int wa,int rr,int warukazu){\n                \tif(rr==0) return 1%warukazu;\n                \tif(rr==1) return wa%warukazu;\n                \tif(rr%2==1) return (beki(wa,rr-1,warukazu)*wa)%warukazu;\n                \tint zx=beki(wa,rr/2,warukazu);\n                \treturn (zx*zx)%warukazu;\n                }\n                /*\n    double bekid(double w,int r){\n    \tif(r==0) return 1.0;\n    \tif(r==1) return w;\n    \tif(r%2) return bekid(w,r-1)*w;\n    \tdouble f=bekid(w,r/2);\n    \treturn f*f;\n    }\n                \n    \t\t\tint comb(int nn,int rr){\n    \t\t\t\tint r=pr[nn]*inv[rr];\n    \t\t\t\tr%=mod;\n    \t\t\t\tr*=inv[nn-rr];\n    \t\t\t\tr%=mod;\n    \t\t\t\treturn r;\n    \t\t\t}\n                \n                void gya(int ert){\n                \tpr[0]=1;\n                \tfor(int i=1;i<ert;i++){\n                \t\tpr[i]=(pr[i-1]*i)%mod;\n                \t}\n                \tfor(int i=0;i<ert;i++) inv[i]=beki(pr[i],mod-2,mod);\n                \t\n                }\n                */\n              //   cin.tie(0);\n    \t\t//\tios::sync_with_stdio(false);\n    \t\t\t//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            \n                 //sort(ve.begin(),ve.end(),greater<int>());\n                                         //----------------kokomade tenpure------------\n                //vector<double> ans(100000000),ans2(100000000)\nstring s;\nint a,b,c,d;\nint it;\nint ar[10000];\nint hashh(){\n\tif(s[it]>='a' && s[it]<='d'){\n\t\tif(s[it]=='a'){\n\t\t\tit++;\n\t\t\treturn a; \n\t\t}\n\t\tif(s[it]=='b'){\n\t\t\tit++;\n\t\t\treturn b; \n\t\t}\n\t\tif(s[it]=='c'){\n\t\t\tit++;\n\t\t\treturn c; \n\t\t}\n\t\tif(s[it]=='d'){\n\t\t\tit++;\n\t\t\treturn d; \n\t\t}\n\t}\n\tif(s[it]=='['){\n\tit++;\n\t\tif(s[it]=='+'){\n\t\t\tit++;\n\t\t\tint g1=hashh();\n\t\t\tint g2=hashh();\n\t\t\tit++;\n\t\t\treturn (g1|g2);\n\t\t}\n\t\tif(s[it]=='*'){\n\t\t\tit++;\n\t\t\tint g1=hashh();\n\t\t\tint g2=hashh();\n\t\t\tit++;\n\t\t\treturn (g1&g2);\n\t\t}\n\t\tif(s[it]=='^'){\n\t\t\tit++;\n\t\t\tint g1=hashh();\n\t\t\tint g2=hashh();\n\t\t\tit++;\n\t\t\treturn (g1^g2);\n\t\t}\n\t\n\t}\n\t\n}\n\nint ch(int r){\n\ta=r/1000;\n\tb=(r/100)%10;\n\tc=(r/10)%10;\n\td=(r/1)%10;\n\t\n\t\n\tit=0;\n\tar[r]=hashh();\n\treturn ar[r];\n}\n\n\nvoid solve(){\n\t\n\tcin>>s;\n\tif(s==\".\")exit(0);\n\t\n\tfor(int i=0;i<10000;i++){\n\t\tch(i);\n\t}\n\tint e;\n\tcin>>e;\n\tint g=ch(e);\n\tint ans=0;\n\tfor(int i=0;i<10000;i++)if(ar[i]==g)ans++;\n\tcout<<g<<\" \"<<ans<<endl;\n}\n\n\n    signed main(){\n               cin.tie(0);\n    \t\tios::sync_with_stdio(false);\n    \twhile(1) solve();\n    \treturn 0;\n    \t\n            }\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\n\nint f(const string& s, char a, char b, char c, char d, int l, int r){\n    //cout << l << \" \" << r << \" \" << s[l] << \" \" << s[r] << endl;\n    if(r == l){\n        \n        if(s[l] == 'a') return a - '0';\n        if(s[l] == 'b') return b - '0';\n        if(s[l] == 'c') return c - '0';\n        if(s[l] == 'd') return d - '0';\n    }\n    \n    assert(s[l] == '[');\n    assert(s[r] == ']');\n    char op = s[l + 1];\n    //cerr << op << endl;\n    int x, y;\n    l += 2;\n    if(s[l] != '['){\n        x = f(s, a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        x = f(s, a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    \n    if(s[l] != '['){\n        y = f(s, a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        y = f(s, a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    int ret = 0;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret = x & y;\n    else ret = x ^ y;\n    \n\n    //cerr << op << \" \" << x << \" \" << y << \" \" << ret << endl;\n    return ret;\n\n}\n\nsigned main(){\n    \n    //cin >> s;\n    //cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    \n    while(1){\n        string s; cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(s, p[0], p[1], p[2], p[3], 0, n - 1);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(s, a, b, c, d, 0, n - 1)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n// #define int ll\nusing PII = pair<ll, ll>;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define ALL(x) x.begin(), x.end()\n\ntemplate<typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate<typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\ntemplate<typename T> bool IN(T a, T b, T x) { return a<=x&&x<b; }\ntemplate<typename T> T ceil(T a, T b) { return a/b + !!(a%b); }\n\ntemplate<typename T> vector<T> make_v(size_t a) { return vector<T>(a); }\ntemplate<typename T,typename... Ts>\nauto make_v(size_t a,Ts... ts) {\n    return vector<decltype(make_v<T>(ts...))>(a,make_v<T>(ts...));\n}\ntemplate<typename T,typename V> typename enable_if<is_class<T>::value==0>::type\nfill_v(T &t, const V &v) { t=v; }\ntemplate<typename T,typename V> typename enable_if<is_class<T>::value!=0>::type\nfill_v(T &t, const V &v ) { for(auto &e:t) fill_v(e,v); }\n\ntemplate<class S,class T>\nostream &operator <<(ostream& out,const pair<S,T>& a) {\n    out<<'('<<a.first<<','<<a.second<<')'; return out;\n}\ntemplate<class T>\nostream &operator <<(ostream& out,const vector<T>& a){\n    out<<'[';\n    for(const T &i: a) out<<i<<',';\n    out<<']';\n    return out;\n}\ntemplate<class T>\nostream &operator <<(ostream& out, const set<T>& a) {\n    out<<'{';\n    for(const T &i: a) out<<i<<',';\n    out<<'}';\n    return out;\n}\ntemplate<class T, class S>\nostream &operator <<(ostream& out, const map<T,S>& a) {\n    out<<'{';\n    for(auto &i: a) out<<i<<',';\n    out<<'}';\n    return out;\n}\n\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0}; // DRUL\nconst int INF = 1<<30;\nconst ll LLINF = 1LL<<60;\nconst ll MOD = 1000000007;\n\nstring s, p;\nll pos;\n\nll Hash();\nll letter();\n\nll Hash() {\n    ll ret;\n    if(s[pos] == '[') {\n        pos++;\n        if(s[pos] == '+') {\n            pos++;\n            ll vl = Hash();\n            ll vr = Hash();\n            ret = vl | vr;\n        } else if(s[pos] == '*') {\n            pos++;\n            ll vl = Hash();\n            ll vr = Hash();\n            ret = vl & vr;\n        } else if(s[pos] == '^') {\n            pos++;\n            ll vl = Hash();\n            ll vr = Hash();\n            ret = vl ^ vr;\n        } else {\n            assert(false);\n        }\n        pos++;\n    } else {\n        ret = letter();\n        pos++;\n    }\n    return ret;\n}\n\nll letter() {\n    if(s[pos] == 'a') return p[0]-'0';\n    else if(s[pos] == 'b') return p[1]-'0';\n    else if(s[pos] == 'c') return p[2]-'0';\n    else if(s[pos] == 'd') return p[3]-'0';\n    assert(false);\n}\n\nsigned main(void)\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n\n    while(1) {\n        cin >> s;\n        if(s == \".\") break;\n        cin >> p;\n        pos = 0;\n        ll myHash = Hash();\n\n        ll ret = 0;\n        REP(i, 10) REP(j, 10) REP(k, 10) REP(l, 10) {\n            p[0] = '0'+i;\n            p[1] = '0'+j;\n            p[2] = '0'+k;\n            p[3] = '0'+l;\n            pos = 0;\n            if(myHash == Hash()) {\n                // cout << p << endl;\n                ret++;\n            }\n        }\n\n        cout << myHash << \" \" << ret << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<math.h>\n#include<algorithm>\n#include<utility>\n#include<functional>\n#include<queue>\n#include<string.h>\n#include<string>\n#include<set>\n#include<map>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef string::const_iterator SC;\nconst int MOD = 1000000007;\nconst ll INF=2e18;\n\nstring s;\nstring p;\nmap<char,ll> mp;\nll Letter(SC &it){\n    ll ret= mp[*it];\n    it++;\n    return ret;\n}\nll Hash(SC &it){\n    if(isalpha(*it)){\n        return Letter(it);\n    }\n    else{\n        it++;//[\n        char op=*it;\n        it++;//op\n        ll l=Hash(it);\n        ll r=Hash(it);\n        it++;//]\n        if(op=='+'){\n            return l | r;\n        }else if(op=='*'){\n            return l & r;\n        }else{\n            return l^r;\n        }\n    }\n}\nint main(){\n    while(cin>>s,s[0]!='.'){\n        cin>>p;\n        mp['a']=p[0]-'0';\n        mp['b']=p[1]-'0';\n        mp['c']=p[2]-'0';\n        mp['d']=p[3]-'0';\n        SC it=s.begin();\n        ll hashNum=Hash(it);\n        cout<<hashNum<<\" \";\n        ll ans=0;\n        for(ll i=0;i<10000;i++){\n            ll tmp=i;\n            ll t[4];\n            for(ll j=0;j<4;j++){\n                ll mod=pow(10,3-j);\n                t[j]=tmp/mod;\n                tmp%=mod;\n            }\n            mp['a']=t[0];\n            mp['b']=t[1];\n            mp['c']=t[2];\n            mp['d']=t[3];\n            it=s.begin();\n            if(Hash(it)==hashNum){\n                ans++;\n            }\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nstring s;\n\nint f(char a, char b, char c, char d, int l, int r){\n    //cout << l << \" \" << r << endl;\n    if(r == l){\n\n        if(s[l] == 'a') return a - '0';\n        if(s[l] == 'b') return b - '0';\n        if(s[l] == 'c') return c - '0';\n        if(s[l] == 'd') return d - '0';\n    }\n    \n    char op = s[l + 1];\n    //cerr << op << endl;\n    int x, y;\n    l += 2;\n    if(s[l] != '['){\n        x = f(a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        x = f(a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    \n    if(s[l] != '['){\n        y = f(a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        y = f(a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    int ret;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret = x & y;\n    else(op == '^') return x ^ y;\n    \n\n    //cerr << op << \" \" << x << \" \" << y << \" \" << ret << endl;\n    return ret;\n\n}\n\nsigned main(){\n    \n    //cin >> s;\n    //cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    \n    while(1){\n        cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(p[0], p[1], p[2], p[3], 0, n - 1);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(a, b, c, d, 0, n - 1)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define int long long\n#define endl '\\n'\n#define FOR(i, a, n) for (int i = (a); i < (n); ++i)\n#define REP(i, n) FOR(i, 0, n)\nusing namespace std;\n\nconst string ord = \"abcd\";\n\nint f(string &s, string &p, int &i) {\n    REP (j, 4) if (s[i] == ord[j]) {\n        ++i;\n        return (p[j] - '0');\n    }\n    ++i;\n    if (s[i] == '+') {\n        int res = 0;\n        ++i;\n        while (s[i] != ']') {\n            res |= f(s, p, i);\n        }\n        ++i;\n        return res;\n    } else if (s[i] == '*') {\n        int res = (1 << 30) - 1;\n        ++i;\n        while (s[i] != ']') {\n            res &= f(s, p, i);\n        }\n        ++i;\n        return res;\n    } else {\n        int res = 0;\n        ++i;\n        while (s[i] != ']') {\n            res ^= f(s, p, i);\n        }\n        ++i;\n        return res;\n    }\n}\n\nint dfs(int idx, string s, string p, int hash) {\n    if (idx == 4) {\n        int i = 0;\n        return (f(s, p, i) == hash);\n    }\n    int res = 0;\n    REP (i, 10) {\n        res += dfs(idx + 1, s, p + string(1, char(i + '0')), hash);\n    }\n    return res;\n}\n\nvoid _main() {\n    string s;\n    while (cin >> s, s != \".\") {\n        string p;\n        cin >> p;\n        int i = 0, hash = f(s, p, i);\n        cout << hash << \" \" << dfs(0, s, \"\", hash) << endl;\n    }\n}\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout << fixed << setprecision(10);\n    _main();\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n\n\nchar cal(char op,char l1,char l2){\n    int f=l1-'0';\n    int s=l2-'0';\n    if(op=='+')return static_cast<char>((f | s) + '0');\n    if(op=='*')return static_cast<char>((f & s) + '0');\n    if(op=='^')return static_cast<char>((f ^ s) + '0');\n}\n\nint main(){\n    while(true){\n        std::stack<char> h;\n        std::string s;\n        std::string p;\n        int ans=0;\n        std::cin>>s;\n        if(s[0]=='.')break;\n        std::cin>>p;\n        for (char i : s) {\n            switch (i){\n                case 'a':\n                    h.push(p[0]);\n                    break;\n                case 'b':\n                    h.push(p[1]);\n                    break;\n                case 'c':\n                    h.push(p[2]);\n                    break;\n                case 'd':\n                    h.push(p[3]);\n                    break;\n                default:\n                    h.push(i);\n            }\n            if(h.top()==']'){\n                h.pop();\n                char l2=h.top();\n                h.pop();\n                char l1=h.top();\n                h.pop();\n                char op=h.top();\n                h.pop();\n                h.pop();\n                h.push(cal(op,l1,l2));\n            }\n        }\n        char hv=h.top();\n        h.pop();\n        for (char d1 = '0'; d1 <= '9'; ++d1) {\n            for (char d2 = '0'; d2 <= '9'; ++d2) {\n                for (char d3 = '0'; d3 <= '9'; ++d3) {\n                    for (char d4 = '0'; d4 <= '9'; ++d4) {\n                        for (char i : s) {\n                            switch (i){\n                                case 'a':\n                                    h.push(d1);\n                                    break;\n                                case 'b':\n                                    h.push(d2);\n                                    break;\n                                case 'c':\n                                    h.push(d3);\n                                    break;\n                                case 'd':\n                                    h.push(d4);\n                                    break;\n                                default:\n                                    h.push(i);\n                            }\n                            if(h.top()==']'){\n                                h.pop();\n                                char l2=h.top();\n                                h.pop();\n                                char l1=h.top();\n                                h.pop();\n                                char op=h.top();\n                                h.pop();\n                                h.pop();\n                                h.push(cal(op,l1,l2));\n                            }\n                        }\n                        if(hv==h.top())++ans;\n                        h.pop();\n                    }\n                }\n            }\n        }\n        int a=hv-'0';\n        std::cout<<a<<\" \"<<ans<<std::endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nstring s;\n\n//[l, r)のハッシュ値を返す\nint f(int a, int b, int c, int d, int l, int r){\n    //num1 op num2を実行する\n    int op;\n    int num1, num2;\n    if(s[l] != '['){\n        if(s[l] == 'a') return a;\n        if(s[l] == 'b') return b;\n        if(s[l] == 'c') return c;\n        if(s[l] == 'd') return d;\n    }\n\n    //cout << \"l \" << l << \" r \" << r << endl;\n    if(s[l + 1] == '+') op = 0;\n    else if(s[l + 1] == '*') op = 1;\n    else op = 2;\n\n    if(s[l + 2] == '['){\n        int dpt = 1;\n        for(int idx = l + 3; idx < r; idx++){\n            if(s[idx] == '[') dpt++;\n            else if(s[idx] == ']') dpt--;\n            \n            if(dpt == 0){\n                num1 = f(a, b, c, d, l + 2, idx + 1);\n                l = idx + 1;\n                break;\n            }\n        }\n    }else{\n\n        if(s[l + 2] == 'a') num1 = a;\n        if(s[l + 2] == 'b') num1 = b;\n        if(s[l + 2] == 'c') num1 = c;\n        if(s[l + 2] == 'd') num1 = d;\n        l = l + 3;\n    }\n\n    if(s[l] == '['){\n        int dpt = 1;\n        for(int idx = l + 1; idx < r; idx++){\n            if(s[idx] == '[') dpt++;\n            else if(s[idx] == ']') dpt--;\n            \n            if(dpt == 0){\n                num2 = f(a, b, c, d, l, idx + 1);\n                break;\n            }\n        }\n    }else{\n        if(s[l] == 'a') num2 = a;\n        if(s[l] == 'b') num2 = b;\n        if(s[l] == 'c') num2 = c;\n        if(s[l] == 'd') num2 = d;\n    }\n\n    int rec;\n    if(op == 0) rec = num1 | num2;\n    else if(op == 1) rec = num1 & num2;\n    else rec = num1 ^ num2;\n    //cout << num1 << \" \" << num2 << \" \" << op << endl;\n    return rec;\n}\n\nint main(){\n\n    //実験\n    //s = \"[*b[*[*cd]a]]\";\n    //cout << f(7, 7, 7, 7, 0, 13) << endl;\n\n\n    while(1){\n        cin >> s;\n        if(s == \".\") break;\n        string pass; cin >> pass;\n        int a = (int)(pass[0] - '0');\n        int b = (int)(pass[1] - '0');\n        int c = (int)(pass[2] - '0');\n        int d = (int)(pass[3] - '0');\n        int l = 0;\n        int r = (int)s.size();\n        int x = f(a, b, c, d, l, r);\n        int cnt = 0;\n        for(a = 0; a < 10; a++){\n            for(b = 0; b < 10; b++){\n                for(c = 0; c < 10; c++){\n                    for(d = 0; d < 10; d++){\n                        if(x == f(a, b, c, d, l, r)) cnt++;\n                    }\n                }\n            }\n        }\n\n        cout << x << \" \" << cnt << endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint myhas(string s, int ptr, int a, int b, int c, int d){\n  if(s[ptr] == 'a'){ return a; }\n  else if(s[ptr] == 'b'){ return b; }\n  else if(s[ptr] == 'c'){ return c; }\n  else if(s[ptr] == 'd'){ return d; }\n  else if(s[ptr] == '['){\n    int p = 0;\n    if(s[ptr+2] == '['){\n      int cnt = 1;\n      while(cnt != 0){\n\tp++;\n\tif(s[ptr+2+p] == ']'){cnt--;}\n\telse if(s[ptr+2+p] == '['){cnt++;}\n      }\n    }\n    // cout << \"p = \" << p << endl;\n    // cout << \"X now gaze \" << \"s[\" << ptr+2 << \"] == \" << s[ptr+2] << endl;\n    int X = myhas(s, ptr+2, a, b, c, d);\n    // cout << \"Y now gaze \" << \"s[\" << ptr+2+p+1 << \"] == \" << s[ptr+2+p+1] << endl;\n    int Y = myhas(s, ptr+2+p+1, a, b, c, d);\n    if(s[ptr+1] == '+'){\n      return (X | Y) & 15;\n    }else if(s[ptr+1] == '*'){\n      return (X & Y) & 15;\n    }else if(s[ptr+1] == '^'){\n      return (X ^ Y) & 15;\n    }\n  }\n  // cout << \"something wrong\" << endl;\n  return 0;\n}\n\nint main(void){\n  for(;;){\n    string S;\n    cin >> S;\n    if(S == \".\"){return 0;}\n    string P;\n    cin >> P;\n    int mypassword = stoi(P);\n    int md = mypassword % 10;\n    int mc = (mypassword / 10) % 10;\n    int mb = (mypassword / 100) % 10;\n    int ma = (mypassword / 1000);\n    int ans = myhas(S,0,ma,mb,mc,md);\n    int cnt = 0;\n    for(int a = 0 ; a <= 9 ; a++){\n      for(int b = 0 ; b <= 9 ; b++){\n\tfor(int c = 0 ; c <= 9 ; c++){\n\t  for(int d = 0 ; d <= 9 ; d++){\n\t    if(ans == myhas(S,0,a,b,c,d)){\n\t      cnt++;\n\t    }\n\t  }\n\t}\t\n      }\n      }\n    cout << ans << \" \" << cnt << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstring s;\nint p,a,b,c,d,now=0,pp;\n\nint solve();\n\n\nint main(){\n  int i,j,k,l,ansc;\n  while(1){\n    cin >> s;\n    if(s==\".\")break;\n    ansc=0;\n    cin >> p;\n    d=p%10;\n    p/=10;\n    c=p%10;\n    p/=10;\n    b=p%10;\n    p/=10;\n    a=p%10;\n    now=0;\n    pp = solve();\n    for(i=0;i<10;i++)for(j=0;j<10;j++)for(k=0;k<10;k++)for(l=0;l<10;l++){\n\t    a = i;\n\t    b = j;\n\t    c = k;\n\t    d = l;\n\t    now = 0;\n\t    if(pp==solve())ansc++;\n\t  }\n    cout << pp << ' '<< ansc << endl;\n  }\n  return 0;\n}\n\nint solve(){\n  int ans1=0,ans2=0;\n  char x;\n  if(s[now]=='['){\n    now++;\n    x=s[now];\n    now++;\n    ans1 = solve();\n    ans2 = solve();\n    now++;\n    //cout << ans1<< \" \" << ans2 <<\" \"<< x<< endl;\n    if(x=='+')return ans1|ans2;\n    else if(x=='*')return ans1&ans2;\n    else if(x=='^')return ans1^ans2;\n  }\n  if(s[now]>='a'||s[now]<='d'){\n    now++;\n    //cout << s[now-1] << endl;\n    if(s[now-1]=='a')return a;\n    if(s[now-1]=='b')return b;\n    if(s[now-1]=='c')return c;\n    if(s[now-1]=='d')return d;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define LL long long\n#define REP(i, n) for(int i=0;i<(n);++i)\n#define REPA(i, n) for(int i=1;i<(n);++i)\n#define lp(i, n) for(int i=-;i<(n);++i)\n#define PII pair<int, int>\n#define PLL pair<long long, long long>\n#define MOD ((int)1e9 + 7)\n#define INF ((int)1e9)\n#define DEKAI ((int)1e9+7)\n#define ALL(x) (x).begin(), (x).end()\n#define BIT(x) (1<<(x))\n#define foreach(i, n) for(auto &i:(n))\nusing namespace std;\n\nint num;\nint getnum(char c){\n    int x = num;\n    if(c=='a')return (x/1000)%10;\n    if(c=='b')return (x/100)%10;\n    if(c=='c')return (x/10)%10;\n    if(c=='d')return x%10;\n}\n\nPII func(string &str, int place){\n    if(str[place]!='[')return PII(getnum(str[place]), place+1);\n    ++place;\n    PII res=PII(0, 0);\n    if(str[place]=='+'){\n        ++place;\n        res = func(str, place);\n        place=res.second;\n        PII d = func(str, place);\n        res.first|=d.first;\n        res.second=d.second;\n    }else if(str[place]=='*'){\n        ++place;\n        res = func(str, place);\n        place=res.second;\n        PII d = func(str, place);\n        res.first&=d.first;\n        res.second=d.second;\n    }else{\n        ++place;\n        res = func(str, place);\n        place=res.second;\n        PII d = func(str, place);\n        res.first^=d.first;\n        res.second=d.second;\n    }\n    ++res.second;\n    return res;\n}\n\nint main(){\n    string str;\n    while(cin>>str&&str!=\".\"){\n        cin >> num;\n        int ans = func(str, 0).first;\n        int count = 0;\n        REP(i, 10000){\n            num=i;\n            if(func(str, 0).first==ans)++count;\n        }\n        cout << ans << \" \" << count << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <string>\n#include <sstream>\n#include <stack>\n#include <iomanip>\n#include <numeric>\n#include <queue>\n#include <climits>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <cstring>\n#include <map>\nusing namespace std;\nusing ll = long long;\n#define MOD 1000000007\n#define INF 1LL << 59\nconst int MAX = 510000;\n\nint main()\n{\n    string s;\n    string P;\n    while (cin >> s)\n    {\n        if (s == \".\")\n            break;\n        cin >> P;\n\n        map<int, int> mp;\n\n        for (int i = 0; i < 10; ++i)\n        {\n            for (int j = 0; j < 10; ++j)\n            {\n                for (int k = 0; k < 10; ++k)\n                {\n                    for (int l = 0; l < 10; ++l)\n                    {\n                        stack<int> st;\n                        stack<char> st2;\n\n                        for (int idx = 0; idx < s.size(); ++idx)\n                        {\n                            if (s[idx] == '+' || s[idx] == '*' || s[idx] == '^')\n                            {\n                                st2.push(s[idx]);\n                            }\n\n                            if (s[idx] == 'a')\n                            {\n                                st.push(i);\n                            }\n                            else if (s[idx] == 'b')\n                            {\n                                st.push(j);\n                            }\n                            else if (s[idx] == 'c')\n                            {\n                                st.push(k);\n                            }\n                            else if (s[idx] == 'd')\n                            {\n                                st.push(l);\n                            }\n\n                            if (s[idx] == ']')\n                            {\n                                if (st2.top() == '+')\n                                {\n                                    st2.pop();\n                                    int n = st.top();\n                                    st.pop();\n                                    int m = st.top();\n                                    st.pop();\n                                    st.push(m | n);\n                                }\n                                else if (st2.top() == '*')\n                                {\n                                    st2.pop();\n                                    int n = st.top();\n                                    st.pop();\n                                    int m = st.top();\n                                    st.pop();\n                                    st.push(m & n);\n                                }\n                                else if (st2.top() == '^')\n                                {\n                                    st2.pop();\n                                    int n = st.top();\n                                    st.pop();\n                                    int m = st.top();\n                                    st.pop();\n                                    st.push(m ^ n);\n                                }\n                            }\n                        }\n\n                        mp[st.top()]++;\n                    }\n                }\n            }\n        }\n        int a = P[0] - '0';\n        int b = P[1] - '0';\n        int c = P[2] - '0';\n        int d = P[3] - '0';\n\n        stack<int> st;\n        stack<char> st2;\n\n        for (int idx = 0; idx < s.size(); ++idx)\n        {\n            if (s[idx] == '+' || s[idx] == '*' || s[idx] == '^')\n            {\n                st2.push(s[idx]);\n            }\n\n            if (s[idx] == 'a')\n            {\n                st.push(a);\n            }\n            else if (s[idx] == 'b')\n            {\n                st.push(b);\n            }\n            else if (s[idx] == 'c')\n            {\n                st.push(c);\n            }\n            else if (s[idx] == 'd')\n            {\n                st.push(d);\n            }\n\n            if (s[idx] == ']')\n            {\n                if (st2.top() == '+')\n                {\n                    st2.pop();\n                    int n = st.top();\n                    st.pop();\n                    int m = st.top();\n                    st.pop();\n                    st.push(m | n);\n                }\n                else if (st2.top() == '*')\n                {\n                    st2.pop();\n                    int n = st.top();\n                    st.pop();\n                    int m = st.top();\n                    st.pop();\n                    st.push(m & n);\n                }\n                else if (st2.top() == '^')\n                {\n                    st2.pop();\n                    int n = st.top();\n                    st.pop();\n                    int m = st.top();\n                    st.pop();\n                    st.push(m ^ n);\n                }\n            }\n        }\n\n        cout << st.top() << \" \" << mp[st.top()] << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef DEBUG_MODE\n\t#define DBG(n) n;\n#else\n\t#define DBG(n) ;\n#endif\n#define REP(i,n) for(ll (i) = (0);(i) < (n);++i)\n#define PB push_back\n#define MP make_pair\n#define FI first\n#define SE second\n#define SHOW1d(v,n) {for(int W = 0;W < (n);W++)cerr << v[W] << ' ';cerr << endl << endl;}\n#define SHOW2d(v,i,j) {for(int aaa = 0;aaa < i;aaa++){for(int bbb = 0;bbb < j;bbb++)cerr << v[aaa][bbb] << ' ';cerr << endl;}cerr << endl;}\n#define ALL(v) v.begin(),v.end()\n#define Decimal fixed<<setprecision(20)\n#define INF 1000000000\n#define LLINF 1000000000000000000\n#define MOD 1000000007\n\ntypedef long long ll;\ntypedef pair<ll,ll> P;\n\nchar tmp[111];\nint place;\n\nint dfs(){\n\t\n\tif(isdigit(tmp[place])){\n\t\treturn tmp[place++] - '0';\n\t}\n\telse{\n\t\tplace++;\n\t\tchar c = tmp[place++];\n\t\tint A = dfs();\n\t\tint B = dfs();\n\t\tplace++;\n\t\tif(c == '+'){\n\t\t\treturn (A | B);\n\t\t}\n\t\telse if(c == '*'){\n\t\t\treturn (A & B);\n\t\t}\n\t\telse{\n\t\t\treturn (A ^ B);\n\t\t}\n\t}\n}\n\nint get_hash(string str,string num){\n\tREP(i,str.size()){\n\t\tif(str[i] >= 'a' && str[i] <= 'd'){\n\t\t\ttmp[i] = num[str[i] - 'a'];\n\t\t}\n\t\telse{\n\t\t\ttmp[i] = str[i];\n\t\t}\n\t}\n\tplace = 0;\n\treturn dfs();\n}\n\nint main(){\n\t\n\tstring str;\n\twhile(cin >> str,str[0] != '.'){\n\t\t\n\t\tstring num;cin >> num;\n\t\tint hash = get_hash(str,num);\n\t\tcout << hash << ' ';\n\t\t\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < 10000;i++){\n\t\t\tstring seica = \"\";\n\t\t\tint hoge = i;\n\t\t\tREP(j,4){\n\t\t\t\tseica += (char)('0' + (hoge % 10));\n\t\t\t\thoge /= 10;\n\t\t\t}\n\t\t\tif(get_hash(str,seica) == hash)ans++;\n\t\t}\n\t\t\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint bin(int x,int y,char e)\n{\n  if(e == '+')\n    {\n      return x | y;\n    }\n  else if(e == '*')\n    {\n      return x & y;\n    }\n  else\n    {\n      return x ^ y;\n    }\n}\nint main(){\n  int n;\n  string str;\n  stack<int>s;\n  stack<char>op;\n  char e;\n  int x,y,z;\n  int cnt=0;\n\n  while(1)\n    {\n      cin >> str;\n      if(str == \"-\") break;\n      cin >> n;\n\n      int a,b,c,d;\n      a = n/1000;\n      b = (n%1000)/100;\n      c = (n%100)/10;\n      d = n%10;\n\n      for(int i=0;i < str.size();i++)\n\t{\n\t  if(str[i] == 'a')\n\t    {\n\t      s.push(a);\n\t    }\n\t  else if(str[i] == 'b')\n\t    {\n\t      s.push(b);\n\t    }\n\t  else if(str[i] == 'c')\n\t    {\n\t      s.push(c);\n\t    }\n\t  else if(str[i] == 'd')\n\t    {\n\t      s.push(d);\n\t    }\n      \n\t  if(str[i] == '+')\n\t    {\n\t      op.push('+');\n\t    }\n\t  else if(str[i] == '*')\n\t    {\n\t      op.push('*');\n\t    }\n\t  else if(str[i] == '^')\n\t    {\n\t      op.push('^');\n\t    }\n\n\t  if(str[i] == ']')\n\t    {\n\t      e = op.top();\n\t      op.pop();\n\t      x = s.top();\n\t      s.pop();\n\t      y = s.top();\n\t      s.pop();\n\t      s.push(bin(x,y,e));\n\t    }\n\t}\n      cout << s.top() << \" \";\n      int z = s.top();\n      \n      for(int a=0;a < 10;a++){\n\tfor(int b=0;b < 10;b++){\n\t  for(int c=0;c < 10;c++){\n\t    for(int d=0;d < 10;d++){\n\t      for(int i=0;i < str.size();i++)\n\t{\n\t  if(str[i] == 'a')\n\t    {\n\t      s.push(a);\n\t    }\n\t  else if(str[i] == 'b')\n\t    {\n\t      s.push(b);\n\t    }\n\t  else if(str[i] == 'c')\n\t    {\n\t      s.push(c);\n\t    }\n\t  else if(str[i] == 'd')\n\t    {\n\t      s.push(d);\n\t    }\n      \n\t  if(str[i] == '+')\n\t    {\n\t      op.push('+');\n\t    }\n\t  else if(str[i] == '*')\n\t    {\n\t      op.push('*');\n\t    }\n\t  else if(str[i] == '^')\n\t    {\n\t      op.push('^');\n\t    }\n\n\t  if(str[i] == ']')\n\t    {\n\t      e = op.top();\n\t      op.pop();\n\t      x = s.top();\n\t      s.pop();\n\t      y = s.top();\n\t      s.pop();\n\t      s.push(bin(x,y,e));\n\t    }\n\t}\n\t      if(z == s.top())cnt++;\n\t    }\n\t  }\n\t}\n      }\n      cout << cnt << endl;\n    }\n  return 0;\n}\n  \n  \n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a) (a).begin(), (a).end()\n#define pb emplace_back\n#define INF (1e9+1)\n\nstring s;\n\nint hf(int &p, string &id){\n    if('a'<=s[p] && s[p]<='d'){\n        int ret = id[s[p]-'a']-'0';\n        p++;\n        return ret;\n\n    }else{\n        assert('[');\n        p++;\n        char op = s[p];\n        p++;\n        int left = hf(p,id);\n        int right = hf(p,id);\n        assert(']');\n        p++;\n\n        if(op=='*')return left & right;\n        if(op=='+')return left | right;\n        if(op=='^')return left ^ right;\n    }\n    abort();\n    return -1;\n}\n\nint main(){\n    while(cin>>s&&s!=\".\"){\n        string id;\n        cin>>id;\n\n        int num = 0;\n        int res = hf(num,id);\n\n        int sum = 0;\n        rep(i,10000){\n            stringstream ss;\n            ss<<i;\n            string t = ss.str();\n            while(t.size()<4)t = \"0\"+t;\n            int num = 0;\n            if(res==hf(num,t))sum++;\n        }\n        cout<<res<<\" \"<<sum<<endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\n\nint gethash(const string& s, const vector<int>& v) {\n    stack<int> st;\n    for (char c : s) {\n        if ('a' <= c && c <= 'd')\n            st.push(v[c - 'a']);\n        else if (c == '+') {\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a | b);\n        }\n        else if (c == '*') {\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a & b);\n        }\n        else if (c == '^') {\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a ^ b);\n        }\n    }\n    return st.top();\n}\n\nint main() {\n    while (true) {\n        string s;\n        cin >> s;\n        if (s == \".\") return 0;\n\n        int p;\n        cin >> p;\n        reverse(s.begin(), s.end());\n        int h = gethash(s, { p / 1000, p / 100 % 10, p / 10 % 10, p % 10 });\n        int c = 0;\n        for (int i = 0; i < 10; ++i)\n            for (int j = 0; j < 10; ++j)\n                for (int k = 0; k < 10; ++k)\n                    for (int l = 0; l < 10; ++l)\n                        c += gethash(s, { i, j, k, l }) == h;\n\n        cout << h << \" \" << c << \"\\n\";\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define REP(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nconst string space=\" \";\nint f(string s,int p[]){\n\tstack<int> st;\n\tfor(int i=s.size()-1;i>=0;i--){\n\t\tif('a'<=s[i]&&s[i]<='d'){\n\t\t\tst.push(p[s[i]-'a']);\n\t\t\tcontinue;\n\t\t}\n\t\tif(s[i]=='['||s[i]==']')continue;\n\t\tint a=st.top();\n\t\tst.pop();\n\t\tint b=st.top();\n\t\tst.pop();\n\t\tif(s[i]=='+')\n\t\t\tst.push(a|b);\n\t\tif(s[i]=='*')\n\t\t\tst.push(a&b);\n\t\tif(s[i]=='^')\n\t\t\tst.push(a^b);\n\t}\n\treturn st.top();\n}\nint main(){\n\twhile(1){\n\t\tstring s,p;\n\t\tcin>>s;\n\t\tif(s==\".\")break;\n\t\tcin>>p;\n\t\tint a[4];\n\t\trep(i,4)a[i]=p[i]-'0';\n\t\tint h=f(s,a);\n\t\tint ans=0;\n\t\trep(i,10){\n\t\t\trep(j,10){\n\t\t\t\trep(k,10){\n\t\t\t\t\trep(l,10){\n\t\t\t\t\t\ta[0]=i;\n\t\t\t\t\t\ta[1]=j;\n\t\t\t\t\t\ta[2]=k;\n\t\t\t\t\t\ta[3]=l;\n\t\t\t\t\t\tint b=f(s,a);\n\t\t\t\t\t\tans+=h==b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<h<<space<<ans<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<stack>\nusing namespace std;\n\nint hash( string s, int a );\n\nint main()\n{\n    string s;\n    int t;\n\n    while( cin >> s )\n    {\n        if( s == \".\" )\n            break;\n\n        cin >> t;\n\n        int res = hash( s, t );\n        int cnt = 0;\n        for( int i = 0; i <= 9999; i++ )\n            if( hash( s, i ) == res )\n                cnt++;\n        \n        cout << res << \" \" << cnt << endl;\n    }\n    return 0;\n}\n\nint hash( string s, int a )\n{\n    char b[4];\n    stack<char> st;\n\n    for( int i = 0; i < 4; i++ )\n    {\n        b[3-i] = a % 10 + '0';\n        a /= 10;\n    }\n\n    for( int j = 0; j < s.size(); j++ )\n    {\n        if( s[j] == 'a' )\n            s[j] = b[0];\n        else if( s[j] == 'b' )\n            s[j] = b[1];\n        else if( s[j] == 'c' )\n            s[j] = b[2];\n        else if( s[j] == 'd' )\n            s[j] = b[3];\n        else;\n    }\n\n    for( int i = 0; i < s.size(); i++ )\n    {\n        if( s[i] == ']' )\n        {\n            int x = st.top() - '0';\n            st.pop();\n            int y = st.top() - '0';\n            st.pop();\n            char c = st.top();\n            if( c == '+' )\n                x = x | y;\n            else if( c == '*' )\n                x = x & y;\n            else\n                x = x ^ y;\n            st.pop();\n            st.pop();\n            st.push( x + '0' );\n        }\n        else\n            st.push(s[i]);\n    }\n    return st.top() - '0';\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nstring s;\n\nint f(char a, char b, char c, char d, int l, int r){\n    //cout << l << \" \" << r << endl;\n    if(r == l){\n\n        if(s[l] == 'a') return a - '0';\n        if(s[l] == 'b') return b - '0';\n        if(s[l] == 'c') return c - '0';\n        if(s[l] == 'd') return d - '0';\n    }\n    \n    char op = s[l + 1];\n    //cerr << op << endl;\n    int x, y;\n    l += 2;\n    if(s[l] != '['){\n        x = f(a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        x = f(a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    \n    if(s[l] != '['){\n        y = f(a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        y = f(a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    int ret;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret = x & y;\n    else if(op == '^') return x ^ y;\n    else assert(false);\n\n    //cerr << op << \" \" << x << \" \" << y << \" \" << ret << endl;\n    return ret;\n\n}\n\nsigned main(){\n    \n    //cin >> s;\n    //cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    \n    while(1){\n        cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(p[0], p[1], p[2], p[3], 0, n - 1);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(a, b, c, d, 0, n - 1)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i, n) for (int i=0; i<(n); ++i)\n#define RREP(i, n) for (int i=(int)(n)-1; i>=0; --i)\n#define FOR(i, a, n) for (int i=(a); i<(n); ++i)\n#define RFOR(i, a, n) for (int i=(int)(n)-1; i>=(a); --i)\n\n#define SZ(x) ((int)(x).size())\n#define ALL(x) (x).begin(),(x).end()\n\n#define DUMP(x) cerr<<#x<<\" = \"<<(x)<<endl\n#define DEBUG(x) cerr<<#x<<\" = \"<<(x)<<\" (L\"<<__LINE__<<\")\"<<endl;\n\ntemplate<class T>\nostream &operator<<(ostream &os, const vector <T> &v) {\n    os << \"[\";\n    REP(i, SZ(v)) {\n        if (i) os << \", \";\n        os << v[i];\n    }\n    return os << \"]\";\n}\n\ntemplate<class T, class U>\nostream &operator<<(ostream &os, const pair <T, U> &p) {\n    return os << \"(\" << p.first << \" \" << p.second << \")\";\n}\n\ntemplate<class T>\nbool chmax(T &a, const T &b) {\n    if (a < b) {\n        a = b;\n        return true;\n    }\n    return false;\n}\n\ntemplate<class T>\nbool chmin(T &a, const T &b) {\n    if (b < a) {\n        a = b;\n        return true;\n    }\n    return false;\n}\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing P = pair<int, int>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing vvi = vector<vi>;\nusing vvll = vector<vll>;\n\nconst ll MOD = 1e9 + 7;\nconst int INF = INT_MAX / 2;\nconst ll LINF = LLONG_MAX / 2;\nconst ld eps = 1e-9;\n\ntemplate<typename T>\nstruct edge {\n    int src, to;\n    T cost;\n};\n\ntemplate<typename T>\nusing Graph = vector<vector<edge<T>>>;\n\nusing State = string::const_iterator;\n\nint parseHash(State &begin, int n) {\n    if (*begin == '[') {\n        ++begin;\n        char op = *begin;\n        ++begin;\n        int left = parseHash(begin, n), right = parseHash(begin, n);\n        assert(*begin == ']');\n        ++begin;\n        if (op == '+') {\n            return left | right;\n        }\n        if (op == '*') {\n            return left & right;\n        }\n        if (op == '^') {\n            return left ^ right;\n        }\n    }\n    if (*begin == 'a') {\n        ++begin;\n        return n / 1000 % 10;\n    }\n    if (*begin == 'b') {\n        ++begin;\n        return n / 100 % 10;\n    }\n    if (*begin == 'c') {\n        ++begin;\n        return n / 10 % 10;\n    }\n    if (*begin == 'd') {\n        ++begin;\n        return n / 1 % 10;\n    }\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    cout << fixed << setprecision(10);\n\n    // ifstream in(\"in.txt\");\n    // cin.rdbuf(in.rdbuf());\n\n    for (;;) {\n        string s;\n        cin >> s;\n        if (s == \".\") break;\n\n        map<int, int> cnt;\n        REP(i, 10000) {\n            State begin = s.begin();\n            ++cnt[parseHash(begin, i)];\n        }\n\n        State begin = s.begin();\n        int p;\n        cin >> p;\n        int hash = parseHash(begin, p);\n\n        cout << hash << ' ' << cnt[hash] << endl;\n    }\n\n    return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define A 0\n#define B 1\n#define C 2\n#define D 3\nusing namespace std;\nstring s;\n\nint makeHash(int a[]) {\n\tstack<int> st;\n\tfor(int i=s.size()-1;i>=0;i--) {\n\t\tif('a'<=s[i] and s[i]<='d') {\n\t\t\t\tif(s[i]=='a') st.push(a[A]);\n\t\t\t\telse if(s[i]=='b') st.push(a[B]);\n\t\t\t\telse if(s[i]=='c') st.push(a[C]);\n\t\t\t\telse if(s[i]=='d') st.push(a[D]);\n\t\t\t}\n\t\t\telse if(s[i]=='+') {\n\t\t\t\tint x = st.top();\n\t\t\t\tst.pop();\n\t\t\t\tint y = st.top();\n\t\t\t\tst.pop();\n\t\t\t\tst.push(x | y);\n\t\t\t}\n\t\t\telse if(s[i]=='*') {\n\t\t\t\tint x = st.top();\n                st.pop();\n                int y = st.top();\n                st.pop();\n                st.push(x & y);\n\t\t\t}\n\t\t\telse if(s[i]=='^') {\n\t\t\t\tint x = st.top();\n                st.pop();\n                int y = st.top();\n                st.pop();\n                st.push(x ^ y);\n\t\t\t}\n\t\t}\n\treturn st.top();\n\n}\nint main() {\n\tstring p;\n\twhile(cin >> s) {\n\t\tif(s==\".\") break;\n\t\tcin >> p;\n\t\tvector<int> a(4);\n\t\tfor(int i=0;i<4;i++) {\n\t\t\ta[i] = p[i] - '0';\n\t\t}\n\t\tstack<int> st;\n\t\tfor(int i=s.size()-1;i>=0;i--) {\n\t\t\tif('a'<=s[i] and s[i]<='d') {\n\t\t\t\tif(s[i]=='a') st.push(a[A]);\n\t\t\t\telse if(s[i]=='b') st.push(a[B]);\n\t\t\t\telse if(s[i]=='c') st.push(a[C]);\n\t\t\t\telse if(s[i]=='d') st.push(a[D]);\n\t\t\t}\n\t\t\telse if(s[i]=='+') {\n\t\t\t\tint x = st.top();\n\t\t\t\tst.pop();\n\t\t\t\tint y = st.top();\n\t\t\t\tst.pop();\n\t\t\t\tst.push(x | y);\n\t\t\t}\n\t\t\telse if(s[i]=='*') {\n\t\t\t\tint x = st.top();\n                st.pop();\n                int y = st.top();\n                st.pop();\n                st.push(x & y);\n\t\t\t}\n\t\t\telse if(s[i]=='^') {\n\t\t\t\tint x = st.top();\n                st.pop();\n                int y = st.top();\n                st.pop();\n                st.push(x ^ y);\n\t\t\t}\n\t\t}\n\t\tint value = st.top();\n\t\tint cnt = 0;\n\t\tint tmp[4];\n\t\tfor(int i=0;i<=9;i++) {\n\t\t\tfor(int j=0;j<=9;j++) {\n\t\t\t\tfor(int k=0;k<=9;k++) {\n\t\t\t\t\tfor(int l=0;l<=9;l++) {\n\t\t\t\t\t\ttmp[0] = i;\n\t\t\t\t\t\ttmp[1] = j;\n\t\t\t\t\t\ttmp[2] = k;\n\t\t\t\t\t\ttmp[3] = l;\n\t\t\t\t\t\tif(makeHash(tmp) == value) cnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << value << \" \" << cnt << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nstring s;\nint ind=0;\n//'['を検知したら開始\nint saiki(int a,int b,int c,int d)\n{\n\tint ret=0;\n\tif(s[0]!='[')\n\t{\n\t\tswitch(s[0])\n\t\t{\n\t\t\tcase 'a':\n\t\t\treturn a;\n\t\t\tcase 'b':\n\t\t\treturn b;\n\t\t\tcase 'c':\n\t\t\treturn c;\n\t\t\tcase 'd':\n\t\t\treturn d;\n\t\t}\n\t}\n\tind++;\n\t//cerr<<ind<<\" \"<<s[ind]<<endl;\n\tint op;//+...0 ^...1 *...2\n\t//operatorの検出\n\tif(s[ind]=='+')\n\t\top=0;\n\telse if(s[ind]=='^')\n\t\top=1;\n\telse\n\t\top=2;\n\tind++;\n\t//数字の検出\n\tint num[2];\n\tfor(int i=0;i<2;i++)\n\t{\n\t\tif(s[ind]=='[')\n\t\t\tnum[i]=saiki(a,b,c,d);\n\t\telse{\n\t\t\tswitch(s[ind])\n\t\t\t{\n\t\t\t\tcase 'a':\n\t\t\t\tnum[i]=a;\n\t\t\t\tbreak;\n\t\t\t\tcase 'b':\n\t\t\t\tnum[i]=b;\n\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\tnum[i]=c;\n\t\t\t\tbreak;\n\t\t\t\tcase 'd':\n\t\t\t\tnum[i]=d;\n\t\t\t}\n\t\t\tind++;\n\t\t}\n\t}\n\tif(op==0)\n\t\tret=(num[0]|num[1]);\n\telse if(op==1)\n\t\tret=(num[0]^num[1]);\n\telse\n\t\tret=(num[0]&num[1]);\n\tind++;\n\treturn ret;\n}\n\nint main()\n{\n\twhile(1)\n\t{\n\t\tcin>>s;\n\t\tif(s[0]=='.')\n\t\t\tbreak;\n\t\tstring p;\n\t\tcin>>p;\n\t\tind=0;\n\t\tint hash=saiki(p[0]-'0',p[1]-'0',p[2]-'0',p[3]-'0');\n\t\tint ans=0;\n\t\tcout<<hash<<\" \";\n\t\tfor(int a=0;a<10;a++)\n\t\t{\n\t\t\tfor(int b=0;b<10;b++)\n\t\t\t{\n\t\t\t\tfor(int c=0;c<10;c++)\n\t\t\t\t{\n\t\t\t\t\tfor(int d=0;d<10;d++)\n\t\t\t\t\t{\n\t\t\t\t\t\tind=0;\n\t\t\t\t\t\tint tmp=saiki(a,b,c,d);\n\t\t\t\t\t\tif(tmp==hash)\n\t\t\t\t\t\t\tans++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint id, abcd[4];\nstring s;\n\nint Hash() {\n\tif (isalpha(s[id])) return abcd[s[id++] - 'a'];\n\tif (s[id] == '[') {\n\t\tid++;\n\t\tchar c = s[id++];\n\t\tint res = Hash();\n\t\tswitch (c) {\n\t\tcase '+': res |= Hash(); break;\n\t\tcase '*': res &= Hash(); break;\n\t\tcase '^': res ^= Hash(); break;\n\t\t}\n\t\tid++;\n\t\treturn res;\n\t}\n}\n\nint main() {\n\twhile (cin >> s, s != \".\") {\n\t\tstring p; cin >> p;\n\t\tfor (int i = 0; i < 4; ++i) abcd[i] = p[i] - '0';\n\t\tint ans = 0, P = Hash();\n\t\tfor (abcd[0] = 0; abcd[0] < 10; ++abcd[0])\n\t\t\tfor (abcd[1] = 0; abcd[1] < 10; ++abcd[1])\n\t\t\t\tfor (abcd[2] = 0; abcd[2] < 10; ++abcd[2])\n\t\t\t\t\tfor (abcd[3] = 0; abcd[3] < 10; ++abcd[3], id = 0)\n\t\t\t\t\t\tif (P == Hash()) ans++;\n\t\tcout << P << \" \" << ans << endl;\n\t}\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\n#define REP(i, a, b) for (int i = (a); i < (b); i++)\n\nusing namespace std;\n\nint num[4] = {};\n\nint decode(string &s, int &ind) {\n  if (s[ind] == '[') {\n    ind++;\n    int t = decode(s, ind);\n    ind++;\n    return t;\n  } else if (s[ind] == '+') {\n    ind++;\n    int a = decode(s, ind);\n    int b = decode(s, ind);\n    return a | b;\n  } else if (s[ind] == '*') {\n    ind++;\n    int a = decode(s, ind);\n    int b = decode(s, ind);\n    return a & b;\n  } else if (s[ind] == '^') {\n    ind++;\n    int a = decode(s, ind);\n    int b = decode(s, ind);\n    return a ^ b;\n  } else if(s[ind] == ']') {\n    ind++;\n    return decode(s, ind);\n  } else {\n    int n = num[s[ind] - 'a'];\n    ind++;\n    return n;\n  }\n}\n\nint main() {\n  string S;\n  while (cin >> S, S != \".\") {\n    string P;\n    cin >> P;\n    REP (i, 0, 4) {\n      num[i] = P[i] - '0';\n    }\n    int dummy = 0;\n    int hsh = decode(S, dummy);\n    cout <<  hsh << \" \";\n    int ans = 0;\n    REP (i, 0, 10000) {\n      int n = i;\n      for (int j = 3; j >= 0; j--) {\n\tnum[j] = n % 10;\n\tn /= 10;\n      }\n      dummy = 0;\n      if (hsh == decode(S, dummy)) {\n\tans++;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\nusing P   = pair<ll, ll>;\nusing mat = vector<vector<ll>>;\ntypedef string::const_iterator State;\nclass ParseError {};\n\nvoid IOS() { ios::sync_with_stdio(false), cin.tie(0); }\n\nconst ll INF = 1e16;\nconst ll MOD = 1e9 + 7;\nconst ld EPS = 1e-12;\n\ntemplate <typename T>\nvoid dump(T x) { cout << x << endl; }\nvoid dumpf(ld x, int t) { cout << setprecision(t) << fixed << x << endl; }\ntemplate <typename A, size_t N, typename T>\nvoid Fill(A (&array)[N], const T &val) {\n\tfill((T *)array, (T *)(array + N), val);\n}\ninline ll mod(ll a, ll b) {\n\tif (a > 0) return a % b;\n\tif (a % b == 0) return 0;\n\tll x = -a / b + 1;\n\ta += x * b;\n\treturn a % b;\n}\nll powm(ll a, ll b, ll c) {\n\tif (b == 0)\n\t\treturn 1;\n\telse if (b % 2 == 0) {\n\t\tll d = powm(a, b / 2, c);\n\t\treturn (d * d) % c;\n\t} else\n\t\treturn (a * powm(a, b - 1, c)) % c;\n}\nll gcd(ll a, ll b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\n\n//ll dx[4] = {1, 0, -1, 0};\n//ll dy[4] = {0, 1, 0, -1};\nint key[4];\nint number(State &);\nint factor(State &);\nint expr(State &);\n\nint number(State &begin) {\n\tint ret = key[*begin - 'a'];\n\tbegin++;\n\treturn ret;\n}\n\nint expr(State &begin) {\n\tif (*begin == '[') {\n\t\tbegin++;\n\t\tif (*begin == '+') {\n\t\t\tbegin++;\n\t\t\tll left  = expr(begin);\n\t\t\tll right = expr(begin);\n\t\t\tbegin++;\n\t\t\treturn left | right;\n\t\t} else if (*begin == '*') {\n\t\t\tbegin++;\n\t\t\tll left  = expr(begin);\n\t\t\tll right = expr(begin);\n\t\t\tbegin++;\n\t\t\treturn left & right;\n\t\t} else if (*begin == '^') {\n\t\t\tbegin++;\n\t\t\tll left  = expr(begin);\n\t\t\tll right = expr(begin);\n\t\t\tbegin++;\n\t\t\treturn left ^ right;\n\t\t}\n\t} else {\n\t\treturn number(begin);\n\t}\n}\n\nint main() {\n\tstring s, t;\n\twhile (1) {\n\t\tcin >> s;\n\t\tif (s == \".\") break;\n\t\tcin >> t;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tkey[i] = t[i] - '0';\n\t\t}\n\t\tState begin = s.begin();\n\t\tll tmp\t\t= expr(begin);\n\t\tll ans\t\t= 0;\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tfor (int j = 0; j < 10; j++) {\n\t\t\t\tfor (int k = 0; k < 10; k++) {\n\t\t\t\t\tfor (int l = 0; l < 10; l++) {\n\t\t\t\t\t\tkey[0] = i, key[1] = j, key[2] = k, key[3] = l;\n\t\t\t\t\t\tbegin   = s.begin();\n\t\t\t\t\t\tll unko = expr(begin);\n\t\t\t\t\t\tif (tmp == unko) ans++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << tmp << \" \" << ans << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <stack>\nusing namespace std;\n\nstring s; int p;\n\nint expression(int p, string &s) {\n\tint i;\n\tint d = p % 10;\n\tint c = (p / 10) % 10;\n\tint b = (p / 100) % 10;\n\tint a = (p / 1000) % 10;\n\t\n\tstack<int> stk;\n\tint x, y;\n\t\n\tfor (i = s.length() - 1; i >= 0; i--) {\n\t\tif (s[i] == '[' || s[i] == ']') continue;\n\t\tif (s[i] == 'a') stk.push(a);\n\t\tif (s[i] == 'b') stk.push(b);\n\t\tif (s[i] == 'c') stk.push(c);\n\t\tif (s[i] == 'd') stk.push(d);\n\t\tif (s[i] == '+' || s[i] == '*' || s[i] == '^') {\n\t\t\tx = stk.top(); stk.pop(); y = stk.top(); stk.pop();\n\t\t}\n\t\tif (s[i] == '+') stk.push(x | y);\n\t\tif (s[i] == '*') stk.push(x & y);\n\t\tif (s[i] == '^') stk.push(x ^ y);\n\t}\n\treturn stk.top();\n}\n\nint main() {\n\twhile (cin >> s) {\n\t\tif (s == \".\") break;\n\t\tcin >> p;\n\t\tint hashNum = expression(p, s);\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 10000; i++) if (expression(i, s) == hashNum) cnt++;\n\t\tcout << hashNum << \" \" << cnt << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<functional>\n#include<iomanip>\n#include<queue>\n#include<ciso646>\n#include<random>\n#include<map>\n#include<set>\n#include<complex>\n#include<bitset>\n#include<stack>\n#include<unordered_map>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int ui;\nconst ll mod = (1e+9) + 7;\nconst ll INF = (ll)1000000007 * 1000000007;\ntypedef pair<int, int> P;\n#define stop char nyaa;cin>>nyaa;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define per(i,n) for(int i=n-1;i>=0;i--)\n#define Rep(i,sta,n) for(int i=sta;i<n;i++)\n#define rep1(i,n) for(int i=1;i<=n;i++)\n#define per1(i,n) for(int i=n;i>=1;i--)\n#define Rep1(i,sta,n) for(int i=sta;i<=n;i++)\ntypedef long double ld;\ntypedef complex<ld> Point;\nconst ld eps = 1e-4;\nconst ld pi = acos(-1.0);\ntypedef pair<ll, ll> LP;\ntypedef pair<ld, ld> LDP;\nint calc(string s, int k) {\n\tint a[4];\n\ta[3] = k % 10; k /= 10;\n\ta[2] = k % 10; k /= 10;\n\ta[1] = k % 10; k /= 10;\n\ta[0] = k;\n\tint n = s.length();\n\tstack<char> ord;\n\tstack<int> num;\n\trep(i, n) {\n\t\tif (s[i] == ']') {\n\t\t\tint u = num.top(); num.pop();\n\t\t\tint v = num.top(); num.pop();\n\t\t\tchar od = ord.top(); ord.pop();\n\t\t\tif (od == '+') {\n\t\t\t\tnum.push(u|v);\n\t\t\t}\n\t\t\telse if (od == '*') {\n\t\t\t\tnum.push(u&v);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnum.push(u^v);\n\t\t\t}\n\t\t}\n\t\telse if (s[i] != '[') {\n\t\t\tif ('a' <= s[i] && s[i] <= 'd') {\n\t\t\t\tnum.push(a[s[i] - 'a']);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tord.push(s[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn num.top();\n}\nint main() {\n\tstring s;\n\twhile (cin >> s) {\n\t\tif (s == \".\")break;\n\t\tint h; cin >> h;\n\t\tint val = calc(s, h);\n\t\tcout << val << \" \";\n\t\tint c = 0;\n\t\trep(i, 10000) {\n\t\t\tint v = calc(s, i);\n\t\t\tif (v == val)c++;\n\t\t}\n\t\tcout << c << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#if __has_include(\"../library/Basic/Debug.hpp\")\n\n#include \"../library/Basic/Debug.hpp\"\n\n#else\n\n/* ----- Header Files ----- */\n// IO\n#include <cstdio>\n#include <iomanip>\n#include <ios>\n#include <iostream>\n\n// algorithm\n#include <algorithm>\n#include <cmath>\n#include <numeric>\n\n// container\n#include <vector>\n#include <string>\n#include <tuple>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <deque>\n\n// others\n#include <random>\n#include <limits>\n#include <functional>\n#include <ctime>\n#include <cassert>\n#include <cstdint>\n\n\n/* ----- Type Alias ----- */\nusing Bool = bool;\nusing Int = long long int;\nusing Real = long double;\nusing Char = char;\nusing String = std::string;\ntemplate <class... Ts>\nusing Tuple = std::tuple<Ts...>;\n\ntemplate <class T>\nusing Vector = std::vector<T>;\ntemplate <class T>\nusing Matrix = Vector<Vector<T>>;\ntemplate <class T>\nusing Queue = std::queue<T>;\ntemplate <class T>\nusing Stack = std::stack<T>;\ntemplate <class T>\nusing Deque = std::deque<T>;\n\ntemplate <class T>\nusing MaxHeap = std::priority_queue<T>;\ntemplate <class T>\nusing MinHeap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <class T>\nusing Set = std::set<T>;\ntemplate <class T, class U>\nusing Map = std::map<T, U>;\n\ntemplate <class T, class... Us>\nusing Func = std::function<T(Us...)>;\n\ntemplate <class T>\nT genv(T v) { return v; }\n\ntemplate <class T, class... Ts>\nauto genv(size_t l, Ts... ts) {\n    return Vector<decltype(genv<T>(ts...))>(l, genv<T>(ts...));\n}\n\ntemplate <class Cost = Int>\nstruct Edge {\n    Int src, dst;\n    Cost cost;\n    Edge(Int src = -1, Int dst = -1, Cost cost = 1)\n        : src(src), dst(dst), cost(cost){};\n\n    bool operator<(const Edge<Cost>& e) const { return this->cost < e.cost; }\n    bool operator>(const Edge<Cost>& e) const { return this->cost > e.cost; }\n};\n\ntemplate <class Cost = Int>\nusing Edges = Vector<Edge<Cost>>;\ntemplate <class Cost = Int>\nusing Graph = Vector<Vector<Edge<Cost>>>;\n\n#endif\n\n/* ----- Misc ----- */\nvoid fastio() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n}\n\nstruct Fout {\n    Int precision;\n    Fout(Int precision) : precision(precision) {}\n};\nstd::ostream& operator<<(std::ostream& os, const Fout& fio) {\n    os << std::fixed << std::setprecision(fio.precision);\n    return os;\n}\n\n\n/* ----- Constants ----- */\n// constexpr Int INF = std::numeric_limits<Int>::max() / 3;\n// constexpr Int MOD = 1000000007;\n// constexpr Real PI = acos(-1);\n// constexpr Real EPS = 1e-10;\n// std::mt19937 mt(int(std::time(nullptr)));\n\nstruct {\n    String s;\n    Vector<Int> pass;\n    Int i;\n\n    Int expr() {\n        Int ret;\n        if (s[i] == '[') {\n            ++i;\n            Char op = s[i];\n            ++i;\n            Int a = expr();\n            Int b = expr();\n            ++i;\n\n            if (op == '+') {\n                ret = (a | b);\n            } else if (op == '*') {\n                ret = (a & b);\n            } else if (op == '^') {\n                ret = (a ^ b);\n            }\n        } else {\n            ret = pass[s[i] - 'a'];\n            ++i;\n        }\n        return ret;\n    }\n\n    Int operator()() {\n        i = 0;\n        return expr();\n    }\n\n} parser;\n\nBool solve() {\n    std::cin >> parser.s;\n    if (parser.s == \".\") return false;\n\n    for (Int i = 0; i < 4; ++i) {\n        Char c;\n        std::cin >> c;\n        parser.pass[i] = c - '0';\n    }\n    Int ans = parser();\n\n    Int cnt = 0;\n    for (Int x = 0; x < 10000; ++x) {\n        Int y = x;\n        for (Int i = 0; i < 4; ++i) {\n            parser.pass[i] = y % 10;\n            y /= 10;\n        }\n        if (parser() == ans) ++cnt;\n    }\n\n    std::cout << ans << ' ' << cnt << std::endl;\n    return true;\n}\n\nint main() {\n    parser.pass.resize(4);\n    while (solve()) {}\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nvoid pul(int p);\nvoid kake(int p);\nvoid haita(int p);\nvoid han(int p);\n\n\nstring s,p;\nint ansa;\nint ansb;\nvector<int> ppp;\n\nint main (){\n  cin >> s;\n  while(s!=\".\"){\n    ppp.assign(80,-10);\n    ansa=0;\n    ansb=0;\n    int a,b,c,d;\n    cin >> p;\n    a=int(p[0])-'0';\n    b=int(p[1])-'0';\n    c=int(p[2])-'0';\n    d=int(p[3])-'0';\n    for(int t=0;t<s.size();++t){\n      if(s[t]=='['){\n        ppp[t]=-1;\n      }\n      else if(s[t]==']'){\n        ppp[t]=-2;\n      }\n      else if(s[t]=='+'){\n        ppp[t]=-3;\n      }\n      else if(s[t]=='*'){\n        ppp[t]=-4;\n      }\n      else if(s[t]=='^'){\n        ppp[t]=-5;\n      }\n      else{\n        switch(s[t]){\n          case 'a':\n            ppp[t]=a;\n            break;\n          case 'b':\n            ppp[t]=b;\n            break;\n          case 'c':\n            ppp[t]=c;\n            break;\n          case 'd':\n            ppp[t]=d;\n            break;\n        }\n      }\n    }\n    switch(ppp[0]){\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n        break;\n      default:\n        han(1);\n        break;\n    }\n    ansa=ppp[0];\n    for(a=0;a<10;++a){\n      for(b=0;b<10;++b){\n        for(c=0;c<10;++c){\n          for(d=0;d<10;++d){\n            ppp.assign(80,-10);\n    for(int t=0;t<s.size();++t){\n      if(s[t]=='['){\n        ppp[t]=-1;\n      }\n      else if(s[t]==']'){\n        ppp[t]=-2;\n      }\n      else if(s[t]=='+'){\n        ppp[t]=-3;\n      }\n      else if(s[t]=='*'){\n        ppp[t]=-4;\n      }\n      else if(s[t]=='^'){\n        ppp[t]=-5;\n      }\n      else{\n        switch(s[t]){\n          case 'a':\n            ppp[t]=a;\n            break;\n          case 'b':\n            ppp[t]=b;\n            break;\n          case 'c':\n            ppp[t]=c;\n            break;\n          case 'd':\n            ppp[t]=d;\n            break;\n        }\n      }\n    }\n    switch(ppp[0]){\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n        break;\n      default:\n        han(1);\n        break;\n    }\n    if(ppp[0]==ansa){\n      ++ansb;\n    }\n\n          }\n        }\n      }\n    }\n\n\n\n    printf(\"%d %d\\n\",ansa,ansb);\n    cin >> s;\n  }\n  /*for(int t=0;t<q;++t){\n    printf(\"%d\\n\",qqq[t]);\n  }*/\n}\n\nvoid pul(int p){\n  if(ppp[p]==-1){\n    han(p+1);\n  }\n  if(ppp[p+1]==-1){\n    han(p+2);\n  }\n  ppp[p-2]=ppp[p]|ppp[p+1];\n  ppp.erase(ppp.begin()+p-1,ppp.begin()+p+3);\n}\n\nvoid kake(int p){\n  if(ppp[p]==-1){\n    han(p+1);\n  }\n  if(ppp[p+1]==-1){\n    han(p+2);\n  }\n  ppp[p-2]=ppp[p]&ppp[p+1];\n  ppp.erase(ppp.begin()+p-1,ppp.begin()+p+3);\n}\n\nvoid haita(int p){\n  if(ppp[p]==-1){\n    han(p+1);\n  }\n  if(ppp[p+1]==-1){\n    han(p+2);\n  }\n  ppp[p-2]=ppp[p]^ppp[p+1];\n  ppp.erase(ppp.begin()+p-1,ppp.begin()+p+3);\n}\n\nvoid han(int p){\n  switch(ppp[p]){\n    case -5:\n      haita(p+1);\n      break;\n    case -4:\n      kake(p+1);\n      break;\n    case -3:\n      pul(p+1);\n      break;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\n\nint f(const string& s, char a, char b, char c, char d, int l, int r){\n    //cout << l << \" \" << r << \" \" << s[l] << \" \" << s[r] << endl;\n    if(r == l){\n        \n        \n        if(s[l] == 'a') return a - '0';\n        if(s[l] == 'b') return b - '0';\n        if(s[l] == 'c') return c - '0';\n        if(s[l] == 'd') return d - '0';\n    }\n    \n    assert(s[l] == '[');\n    assert(s[r] == ']');\n    char op = s[l + 1];\n    //cerr << op << endl;\n    int x, y;\n    l += 2;\n    if(s[l] != '['){\n        x = f(s, a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        x = f(s, a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    \n    if(s[l] != '['){\n        y = f(s, a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        y = f(s, a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    int ret = 0;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret = x & y;\n    else ret = x ^ y;\n    \n\n    //cerr << op << \" \" << x << \" \" << y << \" \" << ret << endl;\n    return ret;\n\n}\n\nsigned main(){\n    \n    //cin >> s;\n    //cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    \n    while(1){\n        string s; cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(s, p[0], p[1], p[2], p[3], 0, n - 1);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(s, a, b, c, d, 0, n - 1)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <stack>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdlib>\n#include <bitset>\n#include <tuple>\n#include <assert.h>\n#include <deque>\n#include <bitset>\n#include <iomanip>\n#include <limits>\n#include <chrono>\n#include <random>\n#include <array>\n#include <unordered_map>\n#include <functional>\n#include <complex>\n#include <numeric>\n#include <cctype>\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n//constexpr long long MAX = 5100000;\nconstexpr long long INF = 1LL << 60;\nconstexpr int inf = 1000000007;\nconstexpr long long mod = 1000000007LL;\n//constexpr long long mod = 998244353LL;\nconst long double PI = acos((long double)(-1));\n\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef long double ld;\n\nint f(int a, int b, int c, int d, string s) {\n\tvector<string> st;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == 'a') s[i] = (char)('0' + a);\n\t\tif (s[i] == 'b') s[i] = (char)('0' + b);\n\t\tif (s[i] == 'c') s[i] = (char)('0' + c);\n\t\tif (s[i] == 'd') s[i] = (char)('0' + d);\n\t}\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == ']') {\n\t\t\tvector<string> t(3);\n\t\t\tint cur = 0;\n\t\t\twhile (st.back() != \"[\") {\n\t\t\t\tt[cur] = st.back();\n\t\t\t\tst.pop_back();\n\t\t\t\tcur++;\n\t\t\t}\n\t\t\tst.pop_back();\n\t\t\tint res = 0;\n\t\t\tif (t[2] == \"+\") {\n\t\t\t\tres = stoi(t[0]) | stoi(t[1]);\n\t\t\t}\n\t\t\tif (t[2] == \"*\") {\n\t\t\t\tres = stoi(t[0]) & stoi(t[1]);\n\t\t\t}\n\t\t\tif (t[2] == \"^\") {\n\t\t\t\tres = stoi(t[0]) ^ stoi(t[1]);\n\t\t\t}\n\t\t\tst.emplace_back(to_string(res));\n\t\t}\n\t\telse {\n\t\t\tst.emplace_back(string(1, s[i]));\n\t\t}\n\t}\n\treturn stoi(st[0]);\n}\n\nvoid solve() {\n\tstring s; cin >> s; if (s == \".\") exit(0);\n\tint p; cin >> p;\n\tmap<int, int> mp;\n\tint res = 0;\n\tvector<int> cnt(20000);\n\tfor (int a = 0; a < 10; a++) for (int b = 0; b < 10; b++) for (int c = 0; c < 10; c++) for (int d = 0; d < 10; d++) {\n\t\tint t = a * 1000 + b * 100 + c * 10 + d;\n\t\tif (p == t) res = f(a, b, c, d, s);\n\t\tcnt[f(a, b, c, d, s)]++;\n\t}\n\tcout << res << \" \" << cnt[res] << \"\\n\";\n}\n\nint main()\n{\n\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\n\tint kkt = 89; while (kkt) solve();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\n\nint f(const string& s, char a, char b, char c, char d, int l, int r){\n    //cout << l << \" \" << r << endl;\n    if(r == l){\n\n        if(s[l] == 'a') return a - '0';\n        if(s[l] == 'b') return b - '0';\n        if(s[l] == 'c') return c - '0';\n        if(s[l] == 'd') return d - '0';\n    }\n    \n    char op = s[l + 1];\n    //cerr << op << endl;\n    int x, y;\n    l += 2;\n    if(s[l] != '['){\n        x = f(s, a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        x = f(s, a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    \n    if(s[l] != '['){\n        y = f(s, a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        y = f(s, a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    int ret = 0;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret = x & y;\n    else ret = x ^ y;\n    \n\n    //cerr << op << \" \" << x << \" \" << y << \" \" << ret << endl;\n    return ret;\n\n}\n\nsigned main(){\n    \n    //cin >> s;\n    //cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    \n    while(1){\n        string s; cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(s, p[0], p[1], p[2], p[3], 0, n - 1);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(s, a, b, c, d, 0, n - 1)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define INF 1e18\n#define int long long\n#define Rep(i, a, n) for (int i = (a); i < (n); i++)\n#define Repr(i, n, a) for (int i = (n); i >= (a); i--)\n#define rep(i, n) Rep(i, 0, n)\n#define repr(i, n) Repr(i, n, 0)\n#define all(a) (a).begin(), (a).end()\nusing namespace std;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\nconst int mod = 1000000007;\n\nint calc(int NUM, string s)\n{\n    int num[4];\n    rep(i, 4)\n    {\n        int n = NUM % 10;\n        num[3 - i] = n;\n        NUM /= 10;\n    }\n    stack<int> st;\n    rep(i, s.size())\n    {\n        if (s[i] == 'a')\n            st.push(num[0]);\n        if (s[i] == 'b')\n            st.push(num[1]);\n        if (s[i] == 'c')\n            st.push(num[2]);\n        if (s[i] == 'd')\n            st.push(num[3]);\n        if (s[i] == '+')\n        {\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a | b);\n        }\n        if (s[i] == '*')\n        {\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a & b);\n        }\n        if (s[i] == '^')\n        {\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a ^ b);\n        }\n    }\n    return st.top();\n}\n\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n\n    string S;\n    while (1)\n    {\n        cin >> S;\n        if (S == \".\")\n            break;\n        reverse(all(S));\n        int P;\n        cin >> P;\n        int pass = calc(P, S);\n        int cnt = 0;\n        rep(i, 10000) if (calc(i, S) == pass) cnt++;\n        cout << pass << \" \" << cnt << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#include <cctype>\n#define FOR(i,a,b) for(ll i=(a);i<(b);++i)\n#define rep(i,n) FOR(i,0,n)\n#define all(x) (x).begin(),(x).end()\n#define PRINT(V) cout << V << \"\\n\"\n#define SORT(V) sort((V).begin(),(V).end())\n#define RSORT(V) sort((V).rbegin(), (V).rend())\nusing namespace std;\nusing ll = long long;\ntemplate<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }\ntemplate<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }\nconst ll INF = 1e15;\ntypedef pair<ll,ll> P;\ntypedef string::const_iterator State;\nclass ParseError {};\nint expression(State &begin);\nint term(State &begin);\n//int number(State &begin);\n//int factor(State &begin);\nstring s;\nint expression(State &begin){\n    int ret;\n    for(;;){\n        if (*begin == '['){\n            begin++;\n            ret = term(begin);\n        }\n        else if (*begin == ']'){\n            begin++;\n            break;\n        }\n        else if (*begin == 'a'||*begin == 'b'||*begin == 'c'||*begin == 'd'){\n            ret = s[*begin - 'a'] - '0';\n            begin++;\n            break;\n        }\n        else{\n            break;\n        }\n    }\n    return ret;\n}\nstring fill(int s){\n    string t = to_string(s);\n    int a = 4-t.length();\n    rep(i,a){\n        t = '0'+t;\n    }\n    return t;\n}\nint term(State &begin){\n    int ret;\n    for(;;){\n        if (*begin == '+'){\n            begin++;\n            ret = expression(begin) | expression(begin);\n        }\n        else if (*begin == '*'){\n            begin++;\n            ret = expression(begin) & expression(begin);\n        }\n        else if (*begin == '^'){\n            begin++;\n            ret = expression(begin) ^ expression(begin);\n        }\n        else break;\n    }\n    return ret;\n}\n\nint main(){\n    string ex;\n    int a;\n    for(;;){\n        int c = 0;\n        getline(cin,ex);\n        if (ex == \".\") break;\n        cin >> s;\n        cin.ignore();\n        State begin = ex.begin();\n        a = expression(begin);\n        rep(i,10000){\n            State begin = ex.begin();\n            s = fill(i);\n            if (a == expression(begin)) c++;\n        }\n        cout << a << ' ' << c << '\\n';\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "// >>> TEMPLATES\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing i32 = int32_t;\nusing i64 = int64_t;\nusing u32 = uint32_t;\nusing u64 = uint64_t;\n#define int ll\n#define double ld\n#define rep(i,n) for (int i = 0; i < (int)(n); i++)\n#define rep1(i,n) for (int i = 1; i <= (int)(n); i++)\n#define repR(i,n) for (int i = (int)(n)-1; i >= 0; i--)\n#define rep1R(i,n) for (int i = (int)(n); i >= 1; i--)\n#define loop(i,a,B) for (int i = a; i B; i++)\n#define loopR(i,a,B) for (int i = a; i B; i--)\n#define all(x) (x).begin(), (x).end()\n#define allR(x) (x).rbegin(), (x).rend()\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define fst first\n#define snd second\ntemplate <class Int> auto constexpr inf = numeric_limits<Int>::max()/2-1;\nauto constexpr INF32 = inf<int32_t>;\nauto constexpr INF64 = inf<int64_t>;\nauto constexpr INF   = inf<int>;\n#ifdef LOCAL\n#include \"debug.hpp\"\n#else\n#define dump(...) (void)(0)\n#define say(x) (void)(0)\n#define debug if (0)\n#endif\ntemplate <class T> using pque_max = priority_queue<T>;\ntemplate <class T> using pque_min = priority_queue<T, vector<T>, greater<T> >;\ntemplate <class T, class = typename T::iterator, class = typename enable_if<!is_same<T, string>::value>::type>\nostream& operator<<(ostream& os, T const& v) { bool f = true; for (auto const& x : v) os << (f ? \"\" : \" \") << x, f = false; return os; }\ntemplate <class T, class = typename T::iterator, class = typename enable_if<!is_same<T, string>::value>::type>\nistream& operator>>(istream& is, T &v) { for (auto& x : v) is >> x; return is; }\ntemplate <class T, class S> ostream& operator<<(ostream& os, pair<T,S> const& p) { return os << \"(\" << p.first << \", \" << p.second << \")\"; }\ntemplate <class T, class S> istream& operator>>(istream& is, pair<T,S>& p) { return is >> p.first >> p.second; }\nstruct IOSetup { IOSetup() { cin.tie(nullptr); ios::sync_with_stdio(false); cout << fixed << setprecision(15); } } iosetup;\ntemplate <class F> struct FixPoint : private F {\n    constexpr FixPoint(F&& f) : F(forward<F>(f)) {}\n    template <class... T> constexpr auto operator()(T&&... x) const { return F::operator()(*this, forward<T>(x)...); }\n};\nstruct MakeFixPoint {\n    template <class F> constexpr auto operator|(F&& f) const { return FixPoint<F>(forward<F>(f)); }\n};\n#define MFP MakeFixPoint()|\n#define def(name, ...) auto name = MFP [&](auto &&name, __VA_ARGS__)\ntemplate <class T, size_t d> struct vec_impl {\n    using type = vector<typename vec_impl<T,d-1>::type>;\n    template <class... U> static type make_v(size_t n, U&&... x) { return type(n, vec_impl<T,d-1>::make_v(forward<U>(x)...)); }\n};\ntemplate <class T> struct vec_impl<T,0> { using type = T; static type make_v(T const& x = {}) { return x; } };\ntemplate <class T, size_t d = 1> using vec = typename vec_impl<T,d>::type;\ntemplate <class T, size_t d = 1, class... Args> auto make_v(Args&&... args) { return vec_impl<T,d>::make_v(forward<Args>(args)...); }\ntemplate <class T> void quit(T const& x) { cout << x << endl; exit(0); }\ntemplate <class T, class U> constexpr bool chmin(T& x, U const& y) { if (x > y) { x = y; return true; } return false; }\ntemplate <class T, class U> constexpr bool chmax(T& x, U const& y) { if (x < y) { x = y; return true; } return false; }\ntemplate <class It> constexpr auto sumof(It b, It e) { return accumulate(b,e,typename iterator_traits<It>::value_type{}); }\ntemplate <class T> int sz(T const& x) { return x.size(); }\ntemplate <class C, class T> int lbd(C const& v, T const& x) {\n    return lower_bound(v.begin(), v.end(), x)-v.begin();\n}\ntemplate <class C, class T> int ubd(C const& v, T const& x) {\n    return upper_bound(v.begin(), v.end(), x)-v.begin();\n}\nconst int dx[] = { 1,0,-1,0 };\nconst int dy[] = { 0,1,0,-1 };\nconstexpr int popcnt(ll x) { return __builtin_popcountll(x); }\ntemplate <class Int> struct Random {\n    mt19937_64 mt{random_device{}()};\n    //mt19937_64 mt{(unsigned)time(0)};\n    Int a,b; // [a,b]\n    Random(Int a, Int b) : a(a), b(b) {}\n    Int operator()() { return uniform_int_distribution<Int>(a,b)(mt); }\n};\ntemplate <class Int> Int rand(Int a, Int b) { // [a,b]\n    static mt19937_64 mt{random_device{}()};\n    return uniform_int_distribution<Int>(a,b)(mt);\n}\n// <<<\n\nstring s;\nint val[4];\n\nint eval(int &i) {\n    if (isalpha(s[i])) {\n        return val[s[i++]-'a'];\n    }\n    assert(s[i] == '['); i++;\n    char op = s[i++];\n    int x = eval(i);\n    int y = eval(i);\n    assert(s[i] == ']'); i++;\n    if (op == '+') return x|y;\n    if (op == '*') return x&y;\n    if (op == '^') return x^y;\n    assert(0);\n    return 0;\n}\n\nvoid solve() {\n    string P; cin >> P;\n    rep (i,4) val[i] = P[i]-'0';\n\n    int i = 0;\n    int hash = eval(i);\n\n    int cnt = 0;\n    rep (a,10) rep (b,10) rep (c,10) rep (d,10) {\n        val[0] = a;\n        val[1] = b;\n        val[2] = c;\n        val[3] = d;\n        int i = 0;\n        if (eval(i) == hash) cnt++;\n    }\n\n    cout << hash << \" \" << cnt << \"\\n\";\n\n}\n\nint32_t main() {\n    while (true) {\n        cin >> s;\n        if (s == \".\") break;\n        solve();\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint calhash(string s){\n    stack<char> st;\n    for (int i = 0; i < s.size(); ++i) {\n        st.push(s[i]);\n        if(st.top()==']'){\n            st.pop();\n            st.pop();\n            string r=\"\";\n            while(st.top()!=':'){\n                r=st.top()+r;\n                st.pop();\n            }\n            st.pop();\n            string l=\"\";\n            while(isdigit(st.top())){\n                l=st.top()+l;\n                st.pop();\n            }\n            int ln=stoi(l);\n            int rn=stoi(r);\n            int t;\n            switch (st.top()){\n                case '+':\n                    t=ln|rn;\n                    break;\n                case '*':\n                    t=ln&rn;\n                    break;\n                case '^':\n                    t=ln^rn;\n                    break;\n                default:\n                    abort();\n            }\n            st.pop();\n            assert(st.top()=='[');\n            st.pop();\n            string ts=\"\";\n            while(t!=0){\n                ts=(char)('0'+t%10)+ts;\n                t=t/10;\n            }\n            for(auto c:ts)st.push(c);\n            if(ts==\"\")st.push('0');\n            st.push(':');\n        }\n    }\n    string ans=\"\";\n    while(!st.empty()){\n        ans=st.top()+ans;\n        st.pop();\n    }\n    return stoi(ans);\n}\n\nint main(){\n    string s;\n    while(true){\n        cin>>s;\n        if(s==\".\")break;\n        string p;\n        cin>>p;\n        char a=p[0];\n        char b=p[1];\n        char c=p[2];\n        char d=p[3];\n        string s2=\"\";\n        for (int i = 0; i < s.size(); ++i) {\n            switch (s[i]){\n                case 'a':\n                    s2.push_back(a);\n                    s2.push_back(':');\n                    break;\n                case 'b':\n                    s2.push_back(b);\n                    s2.push_back(':');\n                    break;\n                case 'c':\n                    s2.push_back(c);\n                    s2.push_back(':');\n                    break;\n                case 'd':\n                    s2.push_back(d);\n                    s2.push_back(':');\n                    break;\n                default:\n                    s2+=s[i];\n                    break;\n            }\n        }\n        int ans=calhash(s2);\n        int ansn=0;\n        for (int i = 0; i <= 9; ++i) {\n            for (int j = 0; j <= 9; ++j) {\n                for (int k = 0; k <= 9; ++k) {\n                    for (int l = 0; l <= 9; ++l) {\n                        string t;\n                        t.push_back('0'+i);\n                        t.push_back('0'+j);\n                        t.push_back('0'+k);\n                        t.push_back('0'+l);\n                        char a=t[0];\n                        char b=t[1];\n                        char c=t[2];\n                        char d=t[3];\n                        s2=\"\";\n                        for (int i = 0; i < s.size(); ++i) {\n                            switch (s[i]){\n                                case 'a':\n                                    s2.push_back(a);\n                                    s2.push_back(':');\n                                    break;\n                                case 'b':\n                                    s2.push_back(b);\n                                    s2.push_back(':');\n                                    break;\n                                case 'c':\n                                    s2.push_back(c);\n                                    s2.push_back(':');\n                                    break;\n                                case 'd':\n                                    s2.push_back(d);\n                                    s2.push_back(':');\n                                    break;\n                                default:\n                                    s2+=s[i];\n                                    break;\n                            }\n                        }\n                        if(calhash(s2)==ans)++ansn;\n                    }\n                }\n            }\n        }\n        cout<<ans<<\" \"<<ansn<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> l_l;\ntypedef pair<int, int> i_i;\ntypedef string::iterator state;\n#define EPS (1e-7)\n#define INF (1e9)\n#define PI (acos(-1))\n//const ll mod = 1000000007;\nstring pass;\n\nstring S;\nint f(state &itr) {\n    if(*itr == '[') {\n        itr++;\n        char operation = *itr;\n        itr++;\n        int a = f(itr);\n        int b = f(itr);\n        itr++;\n        if(operation == '+') return a | b;\n        if(operation == '*') return a & b;\n        if(operation == '^') return a ^ b;\n    }\n    char moji = *itr;\n    itr++;\n    if(moji == 'a') return pass[0] - '0';\n    if(moji == 'b') return pass[1] - '0';\n    if(moji == 'c') return pass[2] - '0';\n    if(moji == 'd') return pass[3] - '0';\n}\nint myhash;\nint ans;\nvoid g() {\n    if(pass.size() == 4) {\n        auto itr = S.begin();\n        if(f(itr) == myhash) ans++;\n        return;\n    }\n    for(char moji = '0'; moji <= '9'; moji++) {\n        pass.push_back(moji);\n        g();\n        pass.pop_back();\n    }\n}\n\nint main() {\n    //cout.precision(10);\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    while(true) {\n        cin >> S;\n        if(S == \".\") break;\n        cin >> pass;\n        state itr = S.begin();\n        myhash = f(itr);\n        ans = 0;\n        pass = \"\";\n        g();\n        cout << myhash << \" \" << ans << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define F first\n#define S second\n#define R cin>>\n#define Z class\n#define ll long long\n#define ln cout<<'\\n'\n#define in(a) insert(a)\n#define pb(a) push_back(a)\n#define pd(a) printf(\"%.10f\\n\",a)\n#define mem(a) memset(a,0,sizeof(a))\n#define all(c) (c).begin(),(c).end()\n#define iter(c) __typeof((c).begin())\n#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)\n#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)\n#define rep(i,n) REP(i,0,n)\n#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)\ntemplate<Z A>void pr(A a){cout<<a;ln;}\ntemplate<Z A,Z B>void pr(A a,B b){cout<<a<<' ';pr(b);}\ntemplate<Z A,Z B,Z C>void pr(A a,B b,C c){cout<<a<<' ';pr(b,c);}\ntemplate<Z A,Z B,Z C,Z D>void pr(A a,B b,C c,D d){cout<<a<<' ';pr(b,c,d);}\ntemplate<Z A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}\nll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}\nconst ll MAX=1e9+7,MAXL=1LL<<61,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};\ntypedef pair<int,int> P;\n\nstring s,t;\nint k;\nll dfs() {\n  char c=s[k++];\n  if(c=='[') {\n    ll x=dfs();\n    k++;\n    return x;\n  } else if(isalpha(c)) return t[c-'a']-'0';\n  ll x=0,y=0;\n  if(s[k]=='[') {\n    k++;\n    x=dfs();\n    k++;\n  } else x=t[s[k++]-'a']-'0';\n  if(s[k]=='[') {\n    k++;\n    y=dfs();\n    k++;\n  } else y=t[s[k++]-'a']-'0';\n  if(c=='*') x&=y;\n  else if(c=='+') x|=y;\n  else x^=y;\n  return x;\n}\n\nvoid Main() {\n  while(cin >> s && s!=\".\") {\n    cin >> t;\n    k=0;\n    int x=dfs();\n    int ans=0;\n    rep(i,10000) {\n      stringstream ss;\n      ss << i;\n      ss >> t;\n      while(t.size()<4) t='0'+t;\n      k=0;\n      if(dfs()==x) ans++;\n    }\n    pr(x,ans);\n  }\n}\n\nint main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint eval(string S, string P){\n  int N = S.size();\n  while (P.size() != 4){\n    P = '0' + P;\n  }\n  for (int i = 0; i < N; i++){\n    if ('a' <= S[i] && S[i] <= 'd'){\n      S[i] = P[S[i] - 'a'];\n    }\n  }\n  stack<int> st;\n  for (int i = 0; i < N; i++){\n    stack<int> st2 = st;\n    if ('0' <= S[i] && S[i] <= '9'){\n      st.push(S[i] - '0');\n    } else {\n      int a = st.top();\n      st.pop();\n      int b = st.top();\n      st.pop();\n      if (S[i] == '+'){\n        st.push(a | b);\n      }\n      if (S[i] == '*'){\n        st.push(a & b);\n      }\n      if (S[i] == '^'){\n        st.push(a ^ b);\n      }\n    }\n  }\n  return st.top();\n}\nint main(){\n  while (1){\n    string S;\n    cin >> S;\n    if (S == \".\"){\n      break;\n    }\n    string P;\n    cin >> P;\n    reverse(S.begin(), S.end());\n    int N = S.size();\n    string T;\n    for (int i = 0; i < N; i++){\n      if (S[i] != '[' && S[i] != ']'){\n        T += S[i];\n      }\n    }\n    int ans1 = eval(T, P);\n    int ans2 = 0;\n    for (int i = 0; i < 10000; i++){\n      if (eval(T, to_string(i)) == ans1){\n        ans2++;\n      }\n    }\n    cout << ans1 << ' ' << ans2 << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\n#define rep(i, n) for (int i = 0; i < (int)(n); i++)\n#define reps(i, s, n) for (int i = (int)(s); i < (int)(n); i++)\nconst ll mod = ll(1e9) + 7;\nconst int INF = int(1e9);\nint path[4] = {};\nstring S;\nint IDX = 0;\nint calc(int idx)\n{\n    IDX = idx;\n    if (S[idx] - 'a' >= 0 && S[idx] - 'a' < 4)\n    {\n        return path[S[IDX] - 'a'];\n    }\n    if (S[idx] == '+')\n    {\n        return calc(++IDX) | calc(++IDX);\n    }\n    if (S[idx] == '*')\n        return calc(++IDX) & calc(++IDX);\n    if (S[idx] == '^')\n        return calc(++IDX) ^ calc(++IDX);\n    else\n        return calc(++IDX);\n}\nint main()\n{\n    vector<int> ans1, ans2;\n    while (1)\n    {\n        IDX = 0;\n        cin >> S;\n        if (S[0] == '.')\n            break;\n        string P;\n        cin >> P;\n        rep(i, 4) path[i] = P[i] - '0';\n        int res = calc(IDX);\n        ans1.push_back(res);\n        int ans = 0;\n        rep(i, 10000)\n        {\n            IDX = 0;\n            string p = to_string(i);\n            reverse(p.begin(), p.end());\n            while (p.size() < 4)\n                p.push_back('0');\n            reverse(p.begin(), p.end());\n            rep(j, 4) path[j] = p[j] - '0';\n\n            if (calc(IDX) == res)\n                ans++;\n        }\n        ans2.push_back(ans);\n    }\n\n    rep(i, ans1.size())\n    {\n        cout << ans1[i] << \" \" << ans2[i] << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n//#include <boost/multiprecision/cpp_int.hpp>\n//typedef boost::multiprecision::cpp_int ll;\ntypedef long double dd;\n#define i_7 (ll)(1E9+7)\n//#define i_7 998244353\n#define i_5 i_7-2\nll mod(ll a){\n    ll c=a%i_7;\n    if(c>=0)return c;\n    return c+i_7;\n}\ntypedef pair<ll,ll> l_l;\nll inf=(ll)1E17;\n\n#define rep(i,l,r) for(ll i=l;i<=r;i++)\n#define pb push_back\nll max(ll a,ll b){if(a<b)return b;else return a;}\nll min(ll a,ll b){if(a>b)return b;else return a;}\nvoid Max(ll &pos,ll val){pos=max(pos,val);}//Max(dp[n],dp[n-1]);\nvoid Min(ll &pos,ll val){pos=min(pos,val);}\nvoid Add(ll &pos,ll val){pos=mod(pos+val);}\ndd EPS=1E-9;\n#define fastio ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n///////////////////////////////////////\n\ntypedef string::const_iterator State;\nstring s;\nll t[4];\n\nll has(State &begin);\nll let(State &begin){\n    if(*begin=='a'){begin++;\n        return t[0];\n    }else if(*begin=='b'){begin++;\n        return t[1];\n    }\n    ll k=*begin-'a';\n    begin++;\n    return t[k];\n}\nstring ope=\"+*^\";\nll has(State &begin){\n    if(*begin=='['){\n        begin++;\n        ll op=-1;\n        rep(i,0,2)if(*begin==ope[i])op=i;\n        begin++;\n        ll a=has(begin);\n        ll b=has(begin);\n        begin++;\n        if(op==0){\n            return a|b;\n        }else if(op==1){\n            return a&b;\n        }else{\n            return a^b;\n        }\n    }else{\n        return let(begin);\n    }\n}\n\nint main(){fastio\n    \n    while(1){\n        cin>>s;\n        if(s[0]=='.')break;\n        ll ans[10000];memset(ans,-1,sizeof(ans));\n        \n        rep(i,0,9999){\n            State begin=s.begin();\n            ll ni=i;\n            for(ll j=3;j>=0;j--){\n                t[j]=ni%10;\n                ni/=10;\n            }\n            ans[i]=has(begin);\n        }\n        \n        ll k;cin>>k;\n        ll p=ans[k];\n        ll c=0;rep(i,0,9999)if(ans[i]==p)c++;\n        cout<<p<<\" \"<<c<<endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<b;i++)\n#define rrep(i,a,b) for(int i=a;i>=b;i--)\n#define fore(i,a) for(auto &i:a)\n#define all(x) (x).begin(),(x).end()\n#pragma GCC optimize (\"-O3\")\nusing namespace std; void _main(); int main() { cin.tie(0); ios::sync_with_stdio(false); _main(); }\ntypedef long long ll; const int inf = INT_MAX / 2; const ll infl = 1LL << 60;\ntemplate<class T>bool chmax(T &a, const T &b) { if (a<b) { a = b; return 1; } return 0; }\ntemplate<class T>bool chmin(T &a, const T &b) { if (b<a) { a = b; return 1; } return 0; }\n//---------------------------------------------------------------------------------------------------\n/*---------------------------------------------------------------------------------------------------\n　　　　　　　　　　　 ∧＿∧  \n　　　　　 ∧＿∧ 　（´<_｀ ）　 Welcome to My Coding Space!\n　　　　 （ ´_ゝ`）　/　 ⌒i     \n　　　　／　　　＼　 　  |　|     \n　　　 /　　 /￣￣￣￣/　　|  \n　 ＿_(__ﾆつ/　    ＿/ .| .|＿＿＿＿  \n　 　　　＼/＿＿＿＿/　（u　⊃  \n---------------------------------------------------------------------------------------------------*/\n\n\n\n\n\nstring S, P;\n//---------------------------------------------------------------------------------------------------\nint i, a, b, c, d;\nint f() {\n    if (S[i] == '[') {\n        i++;\n        int l, r, res;\n        if (S[i] == '+') {\n            i++;\n            l = f();\n            r = f();\n            res = l | r;\n        }\n        else if (S[i] == '*') {\n            i++;\n            l = f();\n            r = f();\n            res = l & r;\n        }\n        else {\n            i++;\n            l = f();\n            r = f();\n            res = l ^ r;\n        }\n        i++;\n        return res;\n    }\n\n    int res;\n    if (S[i] == 'a') res = a;\n    else if (S[i] == 'b') res = b;\n    else if (S[i] == 'c') res = c;\n    else res = d;\n\n    i++;\n    return res;\n}\n//---------------------------------------------------------------------------------------------------\nvoid _main() {\n    while (cin >> S) {\n        if (S == \".\") return;\n        cin >> P;\n\n        i = 0;\n        a = P[0] - '0';\n        b = P[1] - '0';\n        c = P[2] - '0';\n        d = P[3] - '0';\n        int ha = f();\n        int cnt = 0;\n        rep(j, 0, 10000) {\n            i = 0;\n            a = j / 1000;\n            b = (j / 100) % 10;\n            c = (j / 10) % 10;\n            d = j % 10;\n\n            if (ha == f()) cnt++;\n        }\n\n        printf(\"%d %d\\n\", ha, cnt);\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define lp(i,n) for(int i=0;i<n;i++)\n\nint enzan(int num1,int num2,int clc){\n  int numa[4];\n  int numb[4];\n  int ans[4];\n  lp(i,4){\n    numa[i]=0;\n    numb[i]=0;\n  }\n  if(num1>=8){\n    numa[0]=1;\n    num1-=8;\n  }\n  if(num1>=4){\n    numa[1]=1;\n    num1-=4;\n  }\n  if(num1>=2){\n    numa[2]=1;\n    num1-=2;\n  }\n  if(num1>=1){\n    numa[3]=1;\n    num1-=1;\n  }\n  if(num2>=8){\n    numb[0]=1;\n    num2-=8;\n  }\n  if(num2>=4){\n    numb[1]=1;\n    num2-=4;\n  }\n  if(num2>=2){\n    numb[2]=1;\n    num2-=2;\n  }\n  if(num2>=1){\n    numb[3]=1;\n    num2-=1;\n  }\n  //  lp(i,4){\n  //  cout<<numa[i];\n  //}\n  //cout<<endl;\n  //lp(i,4){\n  //  cout<<numb[i];\n  //}\n  //cout<<endl;\n\n  lp(i,4){\n    if(clc==1){\n      if(numa[i]==1&&numb[i]==1) ans[i]=1;\n      else ans[i]=0;\n    }\n    if(clc==2){\n      if(numa[i]==numb[i]) ans[i]=0;\n      else ans[i]=1;\n    }\n    if(clc==3){\n      if(numa[i]==0&&numb[i]==0) ans[i]=0;\n      else ans[i]=1;\n    }\n  }\n  return ans[0]*8+ans[1]*4+ans[2]*2+ans[3]*1;\n}\n\n\nint change(string calc){\n  while(1){\n    int num=0,ca=0;\n    int memo[2];\n    //int hoge;\n    //cout<<calc<<endl;\n    //cin>>hoge;\n    if(calc.size()==1) break;\n    for(int i=0;i<calc.size();i++){\n      if(calc[i]=='['){\n\tnum=0;\n\tca=0;\n      }\n      if(calc[i]=='*') ca=1;\n      if(calc[i]=='^') ca=2;\n      if(calc[i]=='+') ca=3;\n      if('0'<=calc[i]&&calc[i]<='9'){\n\tmemo[num]=calc[i]-'0';\n\tnum++;\n      }\n      if('a'<=calc[i]&&calc[i]<='z'){\n\tmemo[num]=calc[i]-'a'+10;\n\tnum++;\n      }\n      if(calc[i]==']'){\n\tif(num==1){\n\t  calc.erase(i,1);\n\t  calc.erase(i-2,1);\n\t  break;\n\t}\n\telse if(num==2){\n\t  int memori=enzan(memo[0],memo[1],ca);\n\t  if(memori<=9){\n\t    calc[i-1]=memori+'0';\n\t    calc.erase(i-2,1);\n\t    calc.erase(i-3,1);\n\t  }\n\t  else{\n\t    calc[i-1]=memori-10+'a';\n\t    calc.erase(i-2,1);\n\t    calc.erase(i-3,1);\n\t  }\n\t  break;\n\t}\n      }\n    }\n  }\n  if('a'<=calc[0]&&calc[0]<='z') return calc[0]-'a'+10;\n  return calc[0]-'0';\n}\n\n\nint main(){\n  while(1){\n    string cast;\n    cin>>cast;\n    if(cast==\".\") break;\n    int mez;\n    cin>>mez;\n    int xx[20];\n    lp(i,20) xx[i]=0;\n    int ansmemo;\n    for(int i=0;i<10000;i++){\n      string calc=cast;\n      char a,b,c,d;\n      a='0'+i/1000;\n      b='0'+i%1000/100;\n      c='0'+i%100/10;\n      d='0'+i%10;\n      lp(j,calc.size()){\n\tif(calc[j]=='a'){\n\t  calc[j]=a;\n\t}\n\tif(calc[j]=='b'){\n\t  calc[j]=b;\n\t}\n\tif(calc[j]=='c'){\n\t  calc[j]=c;\n\t}\n\tif(calc[j]=='d'){\n\t  calc[j]=d;\n\t}\n      }\n      int mems=change(calc);\n      if(mez==i) ansmemo=mems;\n      xx[mems]++;\n    }\n    cout<<ansmemo<<\" \"<<xx[ansmemo]<<endl;\n  }\n  return 0;\n}\n\t \n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nvoid itov(int n, vector<int> &v){\n\tint digit = 4;\n\tfor(int i=digit-1; i>=0; i--){\n\t\tv[i] = n%10;\n\t\tn /= 10;\n\t}\n}\n\nint gethash(string &s, int &p, vector<int> &v){\n\tif(s[p] != '['){\n\t\treturn v[s[p++] -'a'];\n\t}\n\tp++;\n\tchar op = s[p++];\n\tint a = gethash(s, p, v);\n\tint b = gethash(s, p, v);\n\tp++;\n\tif(op == '+') return a|b;\n\tif(op == '*') return a&b;\n\treturn a^b;\n}\n\nint main(){\n\twhile(1){\n\t\tstring s;\n\t\tcin >> s;\n\t\tif(s == \".\") break;\n\t\tint pass;\n\t\tcin >> pass;\n\n\t\tvector<int> hashv(10000);\n\t\tvector<int> v(4);\n\t\tfor(int i=0; i<10000; i++){\n\t\t\titov(i, v);\n\t\t\tint p = 0;\n\t\t\thashv[i] = gethash(s, p, v);\n\t\t}\n\n\t\tint count = 0;\n\t\tfor(int i=0; i<10000; i++){\n\t\t\tif(hashv[pass] == hashv[i]) count++;\n\t\t}\n\t\tcout << hashv[pass] << \" \" << count << endl;\n\t}\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nstring s;\n\nint f(char a, char b, char c, char d, int l, int r){\n    char op = s[l];\n    \n    if(l == 0 && op != '+' && op != '+' && op != '*'){\n        if(op == 'a') return a - '0';\n        if(op == 'b') return b - '0';\n        if(op == 'c') return c - '0';\n        if(op == 'd') return d - '0';\n    }\n\n    op = s[l + 1];\n\n    int x, y;\n    l += 2;\n    if(s[l] == '['){\n        int end = l;\n        for(;; end++){\n            \n            if(s[end] == ']'){\n                end++;\n                break;\n            }\n        }\n\n        x = f(a, b, c, d, l, end);\n        l = end;\n    }else{\n\n        if(s[l] == 'a') x = a - '0';\n        if(s[l] == 'b') x = b - '0';\n        if(s[l] == 'c') x = c - '0';\n        if(s[l] == 'd') x = d - '0';\n\n        l++;\n    }\n\n    if(s[l] == '['){\n        int end = l;\n        for(;; end++){\n            if(s[end] == ']'){\n                end++;\n                break;\n            }\n        }\n\n        y = f(a, b, c, d, l, end);\n\n    }else{\n        if(s[l] == 'a') y = a - '0';\n        if(s[l] == 'b') y = b - '0';\n        if(s[l] == 'c') y = c - '0';\n        if(s[l] == 'd') y = d - '0';\n    }\n    \n    int ret;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret =  x & y;\n    else ret = x ^ y;\n\n    //cerr << op << \" \" << a << \" \" << b << \" \" << ret << endl;\n    return ret;\n}\n\nsigned main(){\n    /*\n    cin >> s;\n    cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    */\n    while(1){\n        cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(p[0], p[1], p[2], p[3], 0, n);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(a, b, c, d, 0, n)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define REP(i, n) FOR (i, 0, n)\n#define ALL(v) (v).begin(), (v).end()\n#define fi first\n#define se second\ntemplate <typename A, typename B> inline bool chmax(A &a, B b) {if (a < b) {a = b; return 1;} return 0;}\ntemplate <typename A, typename B> inline bool chmin(A &a, B b) {if (a > b) {a = b; return 1;} return 0;}\ntypedef long long ll;\ntypedef pair<int, int> pii;\nconst ll INF = 1e9+100;\nconst bool debug = 0;\n/****************************/\n\nstruct SyntaxAnalysis {\n\tstring s;\n\tint i;\n\tint val;\n\t\n\tSystaxAnalysis() {}\n\t\n\tint init(string _s) {\n\t\ts = _s;\n\t\ti = 0;\n\t\t\n\t\tval = expr(i);\n\t\treturn val;\n\t}\n\t\n\tint expr(int &i) {\n\t\tint res = 0;\n\t\tif (s[i] >= '0' && s[i] <= '9') {\n\t\t\tres = s[i] - '0';\n\t\t}\n\t\telse {\n\t\t\tres = term(++i);\n\t\t\t++i;\n\t\t}\n\t\treturn res;\n\t}\n\t\n\tint term(int &i) {\n\t\tint ope;\n\t\tif (s[i] == '+') ope = 0;\n\t\telse if (s[i] == '*') ope = 1;\n\t\telse ope = 2;\n\t\t\n\t\tint val1 = expr(++i);\n\t\tint val2 = expr(++i);\n\t\t\n\t\tint res;\n\t\tif (ope == 0) res = val1 | val2;\n\t\telse if (ope == 1) res = val1 & val2;\n\t\telse res = val1 ^ val2;\n\t\treturn res;\n\t}\n};\n\nstring make(int i) {\n\tstring num = to_string(i);\n\treverse(ALL(num));\n\twhile (num.size() < 4) num += '0';\n\treverse(ALL(num));\n\treturn num;\n}\n\nstring arrange(string str, string num) {\n\tREP(i, str.size()) {\n\t\tif (str[i] >= 'a' && str[i] <= 'd') {\n\t\t\tstr[i] = num[str[i]-'a'];\n\t\t}\n\t}\n\treturn str;\n}\n\nint main() {\n\tstring s;\n\twhile (cin >> s, s != \".\") {\n\t\tstring num;\n\t\tcin >> num;\n\t\t\n\t\tstring tmp = arrange(s, num);\n\t\t\n\t\tSyntaxAnalysis sa;\n\t\tint hsorg = sa.init(tmp);\n\t\t\n\t\tint ans = 0;\n\t\tREP(i, 10000) {\n\t\t\tstring cur = make(i);\n\t\t\tif (hsorg == sa.init(arrange(s, cur))) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (debug) printf(\"@ \");\n\t\tcout << hsorg << \" \" << ans << endl;\n\t}\n\treturn 0;\n}\n\n// C\n"
  },
  {
    "language": "C++",
    "code": "//#include <bits/stdc++.h>\n#include <cstdio>\n#include <iostream>\n#include <stack>\n\nusing namespace std;\n\nint calc(string s, string x){\n  stack<char> st;\n  \n  for(int i=0;i<(int)s.size();i++){\n    if(s[i] == '[') continue;\n\n    if('a' <= s[i] && s[i] <= 'd'){\n      st.push(x[s[i]-'a'] - '0');\n    }else if (s[i] != ']') {\n      st.push(s[i]);\n    }else{      \n      char a = st.top(); st.pop();\n      char b = st.top(); st.pop();\n      char c = st.top(); st.pop();\n        \n      if(c == '+') st.push(a | b);\n      if(c == '*') st.push(a & b);\n      if(c == '^') st.push(a ^ b);\n    }\n  }\n\n  return st.top();  \n}\n\nbool solve(){\n  string s; string p;\n\n  cin >> s >> p;\n\n  if(s == \".\") return false;\n  \n  int hash = calc(s, p);\n\n  int ans = 0;\n  \n  for(int i=0;i<=9999;i++){\n    char c[5];\n    sprintf(c, \"%04d\", i);\n    string t = c;\n\n    ans += hash == calc(s, t);\n  }\n\n  cout << hash << \" \" << ans << endl;\n\n  return true;\n}\n\nint main(){\n  while(solve());\n\n\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define pb push_back\nconst int N = 110000;\nint pos;\nchar s[N];\nmap<char,int> mp;\nint number(){\n    return mp[s[pos++]];\n}\nint factor(){\n    if(s[pos] == '['){\n        pos++;\n        int res = factor();\n        pos++;\n        return res;\n    }\n    else if(s[pos]=='+'){\n        pos++;\n        return factor()|factor();\n    }\n    else if(s[pos]=='*'){\n        pos++;\n        return factor()&factor();\n    }\n    else if(s[pos]=='^'){\n        pos++;\n        return factor()^factor();\n    }\n    else return number();\n}\n        \nmain(){\n    while(1){\n        scanf(\"%s\",s);\n        if(s[0]=='.')exit(0);\n        map<int,int> cnt;\n        int k,ans;cin>>k;\n        rep(i,10000){\n            int now = i;\n            rep(j,4){\n                mp['d'-j]=now%10;\n                now/=10;\n            }\n            pos = 0;\n            int t = factor();\n            if(k==i){\n                ans = t;\n            }\n            cnt[t]++;\n        }\n        cout << ans << \" \" << cnt[ans] << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define endl \"\\n\"\n#define rep(i, a, b) for (auto i = (a); i < (b); ++i)\n#define rrep(i, a, b) for (auto i = (a); i > (b); --i)\n\nint pass[4];\n\nint sol(string &s)\n{\n  int len = (int)s.size();\n  int rank = 0;\n  vector <int> v[100];\n  rrep(i, len - 1, -1) {\n    int tmp;\n    if (s[i] == ']') {rank++; continue;}\n    else if (s[i] == '[') {rank--; continue;}\n    else if (s[i] == '^') {\n      tmp = v[i][0];\n      rep(j, 1, (int)v[i].size()) tmp ^= v[i][j];\n    } else if (s[i] == '+') {\n      tmp = v[i][0];\n      rep(j, 1, (int)v[i].size()) tmp |= v[i][j];\n    } else if (s[i] == '*') {\n      tmp = v[i][0];\n      rep(j, 1, (int)v[i].size()) tmp &= v[i][j];\n    } else if (s[i] == 'a') tmp = pass[0];\n    else if (s[i] == 'b') tmp = pass[1];\n    else if (s[i] == 'c') tmp = pass[2];\n    else tmp = pass[3];\n    if (i == 0) {\n      return tmp;\n    }\n    int rtmp = rank;\n    int rgoal = (s[i] == '*' || s[i] == '^' || s[i] == '+' ? rank - 1 : rank);\n    rrep(j, i - 1, -1) {\n      if (s[j] == ']') rtmp++;\n      else if (s[j] == '[') rtmp--;\n      if (rgoal == rtmp && (s[j] == '^' || s[j] == '*' || s[j] == '+')) {\n        v[j].push_back(tmp);\n        break;\n      }\n      if (j == 0) {\n        return tmp;\n      }\n    }\n  }\n  return 0;\n}\n\nint main()\n{\n  string s;\n  string n;\n  while (cin >> s)\n  {\n    if (s == \".\")\n      return 0;\n    cin >> n;\n    rep(i, 0, (int)n.size())\n    {\n      pass[i] = n[i] - '0';\n    }\n    int tmp = sol(s);\n    int ans = 0;\n    rep(i, 0, 10) rep(j, 0, 10) rep(k, 0, 10) rep(l, 0, 10) {\n      pass[0] = i, pass[1] = j, pass[2] = k, pass[3] = l;\n      if (tmp == sol(s)) {\n        ans++;\n      }\n    }\n    cout << tmp << \" \" << ans << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(x) (x).begin(),(x).end()\nusing namespace std;\nconst int INF=1145141919,MOD=1e9+7;\nconst long long LINF=8931145141919364364,LMOD=998244353;\ninline long long mod(long long n,long long m){return(n%m+m)%m;}\n// const int dx[]={1,0,-1,0,1,1,-1,-1},dy[]={0,-1,0,1,1,-1,-1,1};\n\ntemplate<class T>\nstruct Parser{\n    typedef string::const_iterator itr;\n    itr begin;\n    vector<T> abcd;\n    T ans;\n    Parser(const string &s,const vector<T> &abcd):abcd(abcd){\n        begin=s.begin();\n        ans=Hash(begin);\n    }\n    T calc(char op,int hash1,int hash2){\n        if(op=='+') return hash1|hash2;\n        if(op=='*') return hash1&hash2;\n        if(op=='^') return hash1^hash2;\n        cerr<<\"unknown\"<<endl;\n        return 0;\n    }\n    T Hash(itr &begin){\n        if(*begin=='['){\n            consume(begin,'[');\n            char Op=*begin;\n            consume(begin,Op);\n            T hash1=Hash(begin);\n            T hash2=Hash(begin);\n            consume(begin,']');\n            return calc(Op,hash1,hash2);\n        }else{\n            char Letter=*begin;\n            consume(begin,Letter);\n            return abcd[Letter-'a'];\n        }\n    }\n    void consume(itr &begin,char expected){\n        if(*begin==expected){\n            begin++;\n        }else{\n            fprintf(stderr,\"Expected: '%c' Got: '%c'\\n\",expected,*begin);\n            fprintf(stderr,\"Rest string is \");\n            while(*begin){\n                fprintf(stderr,\"%c\",*begin++);\n            }\n        }\n    }\n};\n\nint main(){\n    string s,p;\n    while(cin>>s&&s!=\".\"){\n        cin>>p;\n        vector<int> abcd(4);\n        for(int i=0;i<4;i++) abcd[i]=p[i]-'0';\n        Parser<int> pp(s,abcd);\n        int cnt=0;\n        for(int i=0;i<10000;i++){\n            int tmp=i;\n            for(int j=0;j<4;j++){\n                abcd[j]=tmp%10;\n                tmp/=10;\n            }\n            reverse(abcd.begin(),abcd.end());\n            Parser<int> p1(s,abcd);\n            if(pp.ans==p1.ans) cnt++;\n        }\n        cout<<pp.ans<<\" \"<<cnt<<endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nint Hash(string S, string T) {\n\tstack<char> ST;\n\tstack<int> ST2;\n\tfor (int i = 0; i < S.size(); i++) {\n\t\tif (S[i] == '[') continue;\n\t\tif (S[i] == ']') {\n\t\t\tchar C = ST.top();\n\t\t\tST.pop();\n\t\t\tint A, B;\n\t\t\tA = ST2.top();\n\t\t\tST2.pop();\n\t\t\tB = ST2.top();\n\t\t\tST2.pop();\n\t\t\tint D;\n\t\t\tif (C == '+') D = A | B;\n\t\t\tif (C == '*') D = A & B;\n\t\t\tif (C == '^') D = A ^ B;\n\t\t\tST2.push(D);\n\t\t}\n\t\telse {\n\t\t\tif ('a' <= S[i] && S[i] <= 'd') {\n\t\t\t\tST2.push(T[S[i] - 'a'] - '0');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tST.push(S[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ST2.top();\n}\n\nint main() {\n\tstring S;\n\twhile (cin >> S) {\n\t\tif (S == \".\") return 0;\n\t\tstring T;\n\t\tcin >> T;\n\t\tint ANS1 = Hash(S, T), ANS2 = 0;\n\t\tfor (T[0] = '0'; T[0] <= '9'; T[0]++) {\n\t\t\tfor (T[1] = '0'; T[1] <= '9'; T[1]++) {\n\t\t\t\tfor (T[2] = '0'; T[2] <= '9'; T[2]++) {\n\t\t\t\t\tfor (T[3] = '0'; T[3] <= '9'; T[3]++) {\n\t\t\t\t\t\tif (ANS1 == Hash(S, T)) ANS2++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ANS1 << ' ' << ANS2 << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<algorithm>\n#include<climits>\n#include<cmath>\n#include<deque>\n#include<iomanip>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<set>\n#include<stack>\n#include<unordered_map>\n#include<unordered_set>\n#include<utility>\n#include<vector>\n\nusing namespace std;\n\nusing lint = long long;\nusing P = pair<int, int>;\nusing LLP = pair<long long, long long>;\n\n#define REP(i, x, n) for(int i = (x), i##_len = int(n) ; i < i##_len ; ++i)\n#define rep(i, n) for(int i = 0, i##_len = int(n) ; i < i##_len ; ++i)\n#define reps(i, n) for(int i = 1, i##_len = int(n) ; i <= i##_len ; ++i)\n#define rrep(i, n) for(int i = int(n) - 1 ; i >= 0 ; --i)\n#define rreps(i, n) for(int i = int(n) ; i > 0 ; --i)\n#define SORT(x) sort((x).begin(), (x).end())\n#define SORT_INV(x) sort((x).rbegin(), (x).rend())\n#define TWINS(x) cout << ((x) ? \"Yay!\" : \":(\") << endl\n\nconst int IINF = (1 << 30) - 1;\nconst long long LLINF = 1LL << 61;\nconst int dx4[] = {1, 0, -1, 0}, dy4[] = {0, 1, 0, -1};\nconst int dx8[] = {1, 1, 0, -1, -1, -1, 0, 1}, dy8[] = {0, -1, -1, -1, 0, 1, 1, 1};\nconst double EPS = 1e-8;\n\nint f(const string &s, unordered_map<char, int> &mp){\n    stack<int> st;\n    rrep(i, s.size()){\n        if(s[i] == '[' || s[i] == ']'){\n            continue;\n        }\n        if('a' <= s[i] && s[i] <= 'd'){\n            st.push(mp[s[i]]);\n        }else if(s[i] == '+'){\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a | b);\n        }else if(s[i] == '*'){\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a & b);\n        }else{\n            int a = st.top();\n            st.pop();\n            int b = st.top();\n            st.pop();\n            st.push(a ^ b);\n        }\n    }\n\n    return st.top();\n}\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n\n    string s, p;\n    while(cin >> s >> p){\n        unordered_map<char, int> mp;\n        rep(i, 4){\n            mp['a' + i] = p[i] - '0';\n        }\n\n        int myHash = f(s, mp);\n\n        int cnt = 0;\n        rep(a, 10){\n            mp['a'] = a;\n            rep(b, 10){\n                mp['b'] = b;\n                rep(c, 10){\n                    mp['c'] = c;\n                    rep(d, 10){\n                        mp['d'] = d;\n                        if(f(s, mp) == myHash){\n                            ++cnt;\n                        }\n                    }\n                }\n            }\n        }\n\n        cout << myHash << \" \" << cnt << endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long lint;\n\nstring S, P;\n\nstring itos(int n) {\n\tstring S(4, '$');\n\tfor(int i = 0; i < 4; ++i) {\n\t\tS[i] = n % 10 + '0';\n\t\tn /= 10;\n\t}\n\treturn S;\n}\n\nint expr(int&);\n\nint myhash(int& i) {\n\t// cerr << \"myhash : \" << i << endl;\n\tint ret;\n\tif (S[i] == '[') {\n\t\t++i;\n\t\tret = expr(i);\n\t\tassert(S[i] == ']');\n\t\t++i;\n\t} else {\n\t\tassert('a' <= S[i] && S[i] <= 'd');\n\t\tret = P[S[i] - 'a'] - '0';\n\t\t++i;\n\t}\n\treturn ret;\n}\n\nint expr(int& i) {\n\t// cerr << \"expr : \" << i << endl;\n\tchar c = S[i];\n\t++i;\n\tint a = myhash(i);\n\tint b = myhash(i);\n\n\tint ret;\n\tif (c == '+') {\n\t\tret = a | b;\n\t} else if (c == '*') {\n\t\tret = a & b;\n\t} else if (c == '^') {\n\t\tret = a ^ b;\n\t} else {\n\t\tcerr << \"op : \" << c << endl;\n\t\tterminate();\n\t}\n\treturn ret;\n}\n\nbool solve() {\n\tcin >> S;\n\tif (S == \".\") return false;\n\n\tcin >> P;\n\tint i = 0;\n\tint h = myhash(i);\n\n\tint cnt = 0;\n\tfor(int n = 0; n < 10000; ++n) {\n\t\tP = itos(n);\n\t\ti = 0;\n\t\tif (myhash(i) == h) ++cnt;\n\t}\n\n\tcout << h << \" \" << cnt << endl;\n\treturn true;\n}\n\nint main() {\n\twhile (solve());\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <math.h>\nusing namespace std;\ntypedef long long ll;\n\nstring s;\n\nint hsh(int pw) {\n    char x[4];\n    if (pw < 10) {\n        x[0] = x[1] = x[2] = '0';  x[3] = char(pw + '0');\n    }\n    else if (pw < 100){\n        x[0] = x[1] = '0'; x[2] = char(pw/10 + '0');  x[3] = char(pw%10 + '0');\n    }\n    else if (pw < 1000){\n        int ic = pw;\n        x[0] = '0'; \n        x[1] = char(ic/100 + '0');\n        ic %= 100;\n        x[2] = char(ic/10 + '0');  \n        x[3] = char(ic%10 + '0');\n    }\n    else {\n        int ic = pw;\n        x[0] = char(ic/1000 + '0'); \n        ic %= 1000;\n        x[1] = char(ic/100 + '0');\n        ic %= 100;\n        x[2] = char(ic/10 + '0');  \n        x[3] = char(ic%10 + '0');\n    }\n    \n    int depth = 0;\n    vector<int> ope, value[30];\n    for (int i = 0; i < s.size(); i++) {\n        if (char(s[i]) == '[') depth++;\n        else if (char(s[i]) == ']') {\n            if (ope[ope.size() - 1] == 1) \n            value[depth - 1].push_back(value[depth][0] | value[depth][1]);\n            if (ope[ope.size() - 1] == 2) \n            value[depth - 1].push_back(value[depth][0] & value[depth][1]);\n            if (ope[ope.size() - 1] == 3) \n            value[depth - 1].push_back(value[depth][0] ^ value[depth][1]);\n            \n            //cout << ope[ope.size() - 1] << endl;\n            ope.pop_back();\n            value[depth].pop_back();\n            value[depth].pop_back();\n            \n            depth--;\n        }\n        else if (char(s[i]) == '+') ope.push_back(1);\n        else if (char(s[i]) == '*') ope.push_back(2);\n        else if (char(s[i]) == '^') ope.push_back(3);\n        else {\n            if (char(s[i]) == 'a') value[depth].push_back(int(x[0] - '0'));\n            if (char(s[i]) == 'b') value[depth].push_back(int(x[1] - '0'));\n            if (char(s[i]) == 'c') value[depth].push_back(int(x[2] - '0'));\n            if (char(s[i]) == 'd') value[depth].push_back(int(x[3] - '0'));\n        }\n    }\n    \n    return value[0][0];\n}\n\nint main(void){\n    while (1) {\n        cin >> s;\n        if (s == \".\") return 0;\n        \n        int p;\n        cin >> p;\n        \n        int check = hsh(p);\n        \n        int ans = 0;\n        for (int i = 0; i < 10000; i++) {\n            if (hsh(i) == check) ans++;\n        }\n        \n        cout << check << \" \" << ans << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nconst int INF = 1e9;\nconst ll LINF = 1e18;\ntemplate<class S,class T> ostream& operator << (ostream& out,const pair<S,T>& o){ out << \"(\" << o.first << \",\" << o.second << \")\"; return out; }\ntemplate<class T> ostream& operator << (ostream& out,const vector<T>& V){ for(int i = 0; i < V.size(); i++){ out << V[i]; if(i!=V.size()-1) out << \" \";} return out; }\ntemplate<class T> ostream& operator << (ostream& out,const vector<vector<T> >& Mat){ for(int i = 0; i < Mat.size(); i++) { if(i != 0) out << endl; out << Mat[i];} return out; }\ntemplate<class S,class T> ostream& operator << (ostream& out,const map<S,T>& mp){ out << \"{ \"; for(auto it = mp.begin(); it != mp.end(); it++){ out << it->first << \":\" << it->second; if(mp.size()-1 != distance(mp.begin(),it)) out << \", \"; } out << \" }\"; return out; }\ntemplate<typename T>vector<T> make_v(size_t a){return vector<T>(a);}\ntemplate<typename T,typename... Ts>auto make_v(size_t a,Ts... ts){return vector<decltype(make_v<T>(ts...))>(a,make_v<T>(ts...));}\ntemplate<typename T,typename V> typename enable_if<is_class<T>::value==0>::type fill_v(T &t,const V &v){t=v;}\ntemplate<typename T,typename V> typename enable_if<is_class<T>::value!=0>::type fill_v(T &t,const V &v){for(auto &e:t) fill_v(e,v);}\n/*\n <url:>\n 問題文============================================================\n =================================================================\n 解説=============================================================\n ================================================================\n */\n\n\nmap<int,int> mp;\n\nint bnf(int& i,const string& S){\n    int ret = 0;\n    \n    if(S[i] == '['){\n        i++; // [\n        char op = S[i++];\n        int h1 = bnf(i,S);\n        int h2 = bnf(i,S);\n        i++; // ]\n        \n        if(op == '+') ret = h1 | h2;\n        if(op == '*') ret = h1 & h2;\n        if(op == '^') ret = h1 ^ h2;\n    }else{\n        ret = S[i] - '0';\n        i++;\n    }\n    return ret;\n}\n\ntemplate<class Type>\nType solve(Type res = Type()){\n    string S,P;\n    while(true){\n        cin >> S;\n        if(S == \".\") break;\n        cin >> P;\n        \n        mp.clear();\n        \n        string T = S;\n        \n        int key = -1;\n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        replace(S.begin(),S.end(),'a',a);\n                        replace(S.begin(),S.end(),'b',b);\n                        replace(S.begin(),S.end(),'c',c);\n                        replace(S.begin(),S.end(),'d',d);\n \n                        int i = 0;\n                        int V = bnf(i,S);\n                        if(a == P[0] && b == P[1] && c == P[2] && d == P[3]){\n                            key = V;\n                        }\n                        mp[V]++;\n                        \n                        \n                        S = T;\n                    }\n                }\n            }\n        }\n        cout << key << \" \" << mp[key] << endl;\n    }\n    return res;\n}\nint main(void) {\n    cin.tie(0); ios_base::sync_with_stdio(false);\n    solve(0);\n    // \tcout << fixed << setprecision(15) << solve<ll>() << endl;\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#include<iostream>\n#include<sstream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<climits>\n#include<cmath>\n#include<string>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<numeric>\n#include<functional>\n#include<algorithm>\n#include<bitset>\n#include<tuple>\n#include<unordered_set>\n#include<random>\n#include<array>\n#include<cassert>\nusing namespace std;\n#define INF (1<<29)\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(v) v.begin(),v.end()\n#define uniq(v) v.erase(unique(all(v)),v.end())\n\nstring s;\nstring p;\n\n\nint sindex = 0;\nint parse() {\n\tif (isalpha(s[sindex])) {\n\t\treturn p[s[sindex++] - 'a'] - '0';\n\t}\n\telse {\n\t\tint x, y;\n\t\tsindex++;\n\t\tchar op = s[sindex++];\n\t\tx = parse();\n\t\ty = parse();\n\t\tsindex++;\n\t\tif (op == '+')return x | y;\n\t\telse if (op == '*')return x & y;\n\t\telse return x^y;\n\t}\n}\n\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\n\n\t\n\n\twhile(cin>>s>>p){\n\t\tint ans = 0;\n\t\tsindex = 0;\n\t\tint h = parse();\n\t\trep(x, 10000) {\n\t\t\tp[0] = x / 1 % 10 + '0';\n\t\t\tp[1] = x / 10 % 10 + '0';\n\t\t\tp[2] = x / 100 % 10 + '0';\n\t\t\tp[3] = x / 1000 % 10 + '0';\n\t\t\tsindex = 0;\n\n\t\t\tint g = parse();\n\t\t\tif (h == g)ans++;\n\t\t}\n\n\t\tcout << h << ' ' << ans << endl;\n\t}\n\n\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntemplate<typename T>\nstruct Parser {\n\tusing itr = string::const_iterator;\n\titr now;\n\tT ans;\n\tmap<char, int> abcd;\n\tconst struct ex {\n\t\tvector<char> abcd;\n\t\tex() {\n\t\t\tabcd.resize(4);\n\t\t\tfor(int i = 0; i < 4; ++i) {\n\t\t\t\tabcd[i] = (char)('a' + i);\n\t\t\t}\n\t\t}\n\t} ex;\n\tParser(const string &s, map<char, T> &abcd) : abcd(abcd) {\n\t\tnow = s.begin();\n\t\tans = Hash(now);\n\t}\n\tT Hash(itr &now) {\n\t\tif(*now == '[') {\n\t\t\tnext(now, '[');\n\t\t\tchar op = *now;\n\t\t\tT ret;\n\t\t\tif(op == '+') {\n\t\t\t\tnext(now, '+');\n\t\t\t\tT hash1 = Hash(now);\n\t\t\t\tT hash2 = Hash(now);\n\t\t\t\tret = hash1 | hash2;\n\t\t\t}\n\t\t\tif(op == '*') {\n\t\t\t\tnext(now, '*');\n\t\t\t\tT hash1 = Hash(now);\n\t\t\t\tT hash2 = Hash(now);\n\t\t\t\tret = hash1 & hash2;\n\t\t\t}\n\t\t\tif(op == '^') {\n\t\t\t\tnext(now, '^');\n\t\t\t\tT hash1 = Hash(now);\n\t\t\t\tT hash2 = Hash(now);\n\t\t\t\tret = hash1 ^ hash2;\n\t\t\t}\n\t\t\tnext(now, ']');\n\t\t\treturn ret;\n\t\t} else {\n\t\t\treturn Letter(now);\n\t\t}\n\t}\n\tT Letter(itr &now) {\n\t\tT ret = abcd[*now];\n\t\tnext(now, ex.abcd);\n\t\treturn ret;\n\t}\n\tvoid next(itr &now, const char expected) {\n\t\tvector<char> req = {expected};\n\t\tnext(now, req);\n\t}\n\tvoid next(itr &now, const vector<char> &expected) {\n\t\tfor(char c : expected) {\n\t\t\tif(*now == c) {\n\t\t\t\tnow++;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcerr << \"now \" << *now << \"\\n\";\n\t\tfor(char c : expected) cerr << c << \"\\n\";\n\t}\n};\n\nint main() {\n\tstring s;\n\twhile(cin >> s and s != \".\") {\n\t\tmap<char, int> abcd;\n\t\tmap<int, int> cnt;\n\t\tint p; cin >> p;\n\t\tint hash;\n\t\tfor(int i = 0; i < 10000; ++i) {\n\t\t\tint tmp = i;\n\t\t\tfor(char c = 'd'; c >= 'a'; --c) {\n\t\t\t\tabcd[c] = tmp % 10;\n\t\t\t\ttmp /= 10;\n\t\t\t}\n\t\t\tParser<int> parse(s, abcd);\n\t\t\tcnt[parse.ans]++;\n\t\t\tif(i == p) hash = parse.ans;\n\t\t}\n\t\tcout << hash << \" \" << cnt[hash] << \"\\n\";\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <functional>\n#include <vector>\n#include <utility>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <numeric> \n#include <iomanip>\n#include <sstream>\nusing namespace std;\ntypedef long long ll;\nconst int INF = 1<<30; \nconst int MOD = 1e9 + 7;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\n\nint get_hash(void);\nint get_val(vector<int>);\nchar change(char, string);\nint get_cnt(int, string);\n\nstring s;\nint pos;\n\nint main()\n{\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n    while(cin >> s)\n    {\n        if(s == \".\") break;\n        string p; cin >> p;\n        int num; pos = 0;\n        if(s[0] == '[' && s[s.size() - 1] == ']') s = s.substr(1, s.size() - 2);\n        string tmp = s;\n        for(int i = 0; i < s.size(); i++) s[i] = change(s[i], p);\n        num = get_hash();\n        cout << num << \" \" << get_cnt(num, tmp) << endl;\n    }\n\treturn 0;\n}\nint get_cnt(int num, string tmp)\n{\n    int ret = 0;\n    for(int i = 0; i <= 9999; i++)\n    {\n        s = tmp, pos = 0;\n        ostringstream sout;\n        sout << setfill('0') << setw(4) << i;\n        string password = sout.str();\n        for(int i = 0; i < s.size(); i++) s[i] = change(s[i], password);\n        int x = get_hash();\n        if(x == num) ret++;\n    }\n    return ret;\n}\nint get_hash()\n{\n    vector<int> vec;\n    if(s.size() < 3) return s[0] -'0';\n    while(s[pos] != ']')\n    {\n        if(pos >= s.size()) break;\n        if(s[pos] == '[')\n        {\n            pos++;\n            vec.push_back(get_hash());\n        }\n        else\n        {\n            if(s[pos] >= 48 && s[pos] <= 57) vec.push_back(s[pos] - '0');\n            else vec.push_back(s[pos]);\n        }\n        pos++;\n    }\n    return get_val(vec);\n}\nchar change(char ch, string p)\n{\n    if(ch == 'a') return p[0];\n    else if(ch == 'b') return p[1];\n    else if(ch == 'c') return p[2];\n    else if(ch == 'd') return p[3];\n    else return ch;\n}\nint get_val(vector<int> vec)\n{\n    char ch = (char)vec[0];\n    int a = vec[1], b = vec[2];\n    if(ch == '+') return a | b;\n    else if(ch == '*') return a & b;\n    else return a ^ b;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define GET_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME\n#define pr(...) cerr<< GET_MACRO(__VA_ARGS__,pr8,pr7,pr6,pr5,pr4,pr3,pr2,pr1)(__VA_ARGS__) <<endl\n#define pr1(a) (#a)<<\"=\"<<(a)<<\" \"\n#define pr2(a,b) pr1(a)<<pr1(b)\n#define pr3(a,b,c) pr1(a)<<pr2(b,c)\n#define pr4(a,b,c,d) pr1(a)<<pr3(b,c,d)\n#define pr5(a,b,c,d,e) pr1(a)<<pr4(b,c,d,e)\n#define pr6(a,b,c,d,e,f) pr1(a)<<pr5(b,c,d,e,f)\n#define pr7(a,b,c,d,e,f,g) pr1(a)<<pr6(b,c,d,e,f,g)\n#define pr8(a,b,c,d,e,f,g,h) pr1(a)<<pr7(b,c,d,e,f,g,h)\n#define prArr(a) {cerr<<(#a)<<\"={\";int i=0;for(auto t:(a))cerr<<(i++?\", \":\"\")<<t;cerr<<\"}\"<<endl;}\nusing namespace std;\nusing Int = long long;\nusing _int = int;\nusing ll = long long;\nusing Double = long double;\nconst Int INF = (1LL<<60)+1e9; // ~ 1.15 * 1e18\nconst Int mod = (1e9)+7;\nconst Double EPS = 1e-8;\nconst Double PI = 6.0 * asin((Double)0.5);\nusing P = pair<Int,Int>;\ntemplate<class T> T Max(T &a,T b){return a=max(a,b);}\ntemplate<class T> T Min(T &a,T b){return a=min(a,b);}\ntemplate<class T1, class T2> ostream& operator<<(ostream& o,pair<T1,T2> p){return o<<\"(\"<<p.first<<\",\"<<p.second<<\")\";}\ntemplate<class T1, class T2, class T3> ostream& operator<<(ostream& o,tuple<T1,T2,T3> t){\n  return o<<\"(\"<<get<0>(t)<<\",\"<<get<1>(t)<<\",\"<<get<2>(t)<<\")\";}\ntemplate<class T1, class T2> istream& operator>>(istream& i,pair<T1,T2> &p){return i>>p.first>>p.second;}\ntemplate<class T> ostream& operator<<(ostream& o,vector<T> a){Int i=0;for(T t:a)o<<(i++?\" \":\"\")<<t;return o;}\ntemplate<class T> istream& operator>>(istream& i,vector<T> &a){for(T &t:a)i>>t;return i;}\n\n\nint calc(char op, int a,int b){\n  if(op == '+') return a | b;\n  if(op == '^') return a ^ b;\n  if(op == '*') return a & b;\n  assert(0);\n}\n\nstring s;\nint pos;\nmap<char,int> num;\nint dfs(){\n\n  if(s[pos] == '['){\n    pos++;\n    int res = dfs();\n    assert(s[pos] == ']');\n    pos++;\n    return res;\n  }\n  else if(isalpha(s[pos])){\n    int res = num[s[pos]];\n    pos++;\n    return res;\n  }\n  else if(s[pos] == '+' || s[pos] == '^' || s[pos] == '*'){\n    char op = s[pos];\n    pos++;\n    int a = dfs();\n    int b = dfs();\n    return calc(op, a, b);\n  }\n  assert(0);\n}\n\n\nsigned main(){\n  srand((unsigned)time(NULL));\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(1){\n    cin>>s;\n    if(s == \".\") break;\n    string a;\n    cin>>a;\n    \n    num['a'] = a[0] - '0';\n    num['b'] = a[1] - '0';\n    num['c'] = a[2] - '0';\n    num['d'] = a[3] - '0';\n    pos = 0;\n    int target = dfs();\n    int ans = 0;\n    for(int i=0; i<= 9;i++)\n      for(int j=0; j<= 9;j++)\n        for(int k=0; k<= 9;k++)\n\t  for(int l=0; l<= 9;l++){\n\t    num['a'] = i;\n\t    num['b'] = j;\n\t    num['c'] = k;\n\t    num['d'] = l;\n\t    pos = 0;\n\t    int hash = dfs();\n\t    if(target == hash) ans++;\n\t  }\n    cout<<target<<\" \"<<ans<<endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\nusing namespace std;\n\nstring s, t;\nstring str = \"abcd\";\n\nint operate(int a, int b, char op){\n    if(op == '+') return a | b;\n    if(op == '*') return a & b;\n    return a ^ b;\n}\n\nint calchash(string r){\n    string s2 = s;\n    stack<string> st;\n    rep(i, 0, s.size()){\n        size_t pos = str.find(s[i]);\n        if(pos == string::npos) continue;\n        s2[i] = r[pos];\n    }\n    // cout << s2 << endl;\n    rep(i, 0, s.size()){\n        if(isdigit(s2[i]) || s2[i] == '*' || s2[i] == '^' || s2[i] == '+'){\n            string ts = \"\";\n            ts += s2[i];\n            st.push(ts);\n        }else if(s2[i] == ']'){\n            string a = st.top(); st.pop();\n            string b = st.top(); st.pop();\n            string op = st.top(); st.pop();\n            int numa = stoi(a);\n            int numb = stoi(b);\n            char cop = op[0];\n            int tmp = operate(numa, numb, cop);\n            string ts = \"\";\n            ts += to_string(tmp);\n            st.push(ts);\n        }\n    }\n    int res = stoi(st.top());\n    return res;\n}\n\nint main(){\n    while(1){\n        cin >> s;\n        if(s == \".\") break;\n        cin >> t;\n        int ans = calchash(t);\n        int cnt = 0;\n        rep(i, 0, 10000){\n            string tmp = to_string(i);\n            while(tmp.size() < 4) tmp = \"0\" + tmp;\n            if(calchash(tmp) == ans) cnt++;\n        }\n        cout << ans << \" \" << cnt << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstring calc(string s, string t, char ch)\n{\n    int a = stoi(s), b = stoi(t);\n    if(ch == '+') return to_string(a | b);\n    if(ch == '*') return to_string(a & b);\n    return to_string(a ^ b);\n}\n\nint solve(string s, string v)\n{\n    vector<string> t;\n    for(int i = 0; i < (int)s.size(); i++)\n    {\n        if('a' <= s[i] and s[i] <= 'd')\n        {\n            string tmp = \"\";\n            tmp += v[s[i] - 'a'];\n            while(tmp.size() != 4) tmp.insert(tmp.begin(), '0');\n            t.push_back(tmp);\n        }\n        else\n        {\n            string tmp = \"\";\n            tmp += s[i];\n            t.push_back(tmp);\n        }\n    }\n\n    stack<string> st;\n    for(int i = 0; i < (int)t.size(); i++)\n    {\n        if(t[i] == \"]\")\n        {\n            string res = \"\";\n            while(true)\n            {\n                string ch = st.top(); st.pop();\n                if(ch == \"[\") break;\n                res += ch;\n            }\n            res = calc(res.substr(0, 4), res.substr(4, 4), res.back());\n            while(res.size() != 4) res.insert(res.begin(), '0');\n            st.push(res);\n        }\n        else\n        {\n            st.push(t[i]);\n        }\n    }\n    return stoi(st.top());\n}\n\nint main(void)\n{\n    string s, v;\n    while(cin >> s, s != \".\")\n    {\n        cin >> v;\n        int ans = solve(s, v);\n        int cnt = 0;\n        for(int i = 0; i <= 9999; i++)\n        {\n            string t = to_string(i);\n            while(t.size() != 4) t.insert(t.begin(), '0');\n            int v = solve(s, t);\n            if(v == ans) cnt++;\n        }\n        cout << ans << \" \" << cnt << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\n\nint id = 0;\nstring s;\n\nint hhash(string p){\n    int ret = -1;\n    if(s[id] == '['){\n        id++;\n        switch(s[id++]){\n        case '+':\n            ret = hhash(p) | hhash(p);\n            break;\n        case '*':\n            ret = hhash(p) & hhash(p);\n            break;\n        case '^':\n            ret = hhash(p) ^ hhash(p);\n            break;\n        }\n    }else{\n        ret = p[s[id]-'a'] - '0';\n    }\n    id++;\n    // cout << id << \" \" << ret << endl;\n    return ret;\n}\n\nint main(){\n    cin >> s;\n    while(s != \".\"){\n        string p;\n        cin >> p;\n        int ans = 0;\n        id = 0;\n        int enc = hhash(p);\n        for(int i=0; i<10000; i++){\n            string t = \"\";\n            for(int j=1; j<10000; j*=10){\n                t += (i/j)%10 + '0';\n            }\n            reverse(t.begin(), t.end());\n            id = 0;\n            if(hhash(t) == enc) ans++;\n        }\n        cout << enc << \" \" << ans << endl;\n        cin >> s;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <math.h>\n#include <set>\n#include <map>\n#include <string>\n#include <stack>\n#include <queue>\n#include <iomanip>\n#include <numeric>\n#include <tuple>\n#include <bitset>\n#include <complex>\n#include <unistd.h>\n#include <cassert>\n#include <cctype>\n#include <random>\n#include <time.h>\n#define _USE_MATH_DEFINES\n#define _GLIBCXX_DEBUG\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> plglg;\ntypedef pair<double, ll> pdlg;\ntypedef tuple<int, int, int> tiii;\ntypedef tuple<ll, ll, ll> tlglglg;\ntypedef tuple<double, double, double> tddd;\ntypedef complex<double> xy_t;\ntypedef vector<ll> vll;\ntypedef vector< vector<ll> > matrix;\n#define REP(i, x, y) for(ll i = (ll)x; i < (ll)y; i++)\n#define DREP(i, x, y, d) for(ll i = (ll)x; i < (ll)y; i += (ll)d)\n#define PER(i, x, y) for(ll i = (ll)x; i > (ll)y; i--)\n#define DPER(i, x, y, d) for(ll i = (ll)x; i > (ll)y; i -= (ll)d)\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\ndouble pi = 3.141592653589793;\nll mod = 1000000007;\nint intmax = 2147483647;\nint intmin = -2147483648;\nll llmax = 9223372036854775807;\nll llmin = -9223372036854775807;\nint iinf = intmax / 8;\nll inf = llmax / 8;\ndouble eps = 1e-12;\nvoid yesno(bool ok, string yes = \"Yes\", string no = \"No\") {\n    if (ok) {\n        cout << yes << endl;\n    } else {\n        cout << no << endl;\n    }\n}\n\nstring s;\nll cur = 0;\n\nll hashf(ll a, ll b, ll c, ll d) {\n    if (s[cur] == 'a') {\n        cur++;\n        return a;\n    } else if (s[cur] == 'b') {\n        cur++;\n        return b;\n    } else if (s[cur] == 'c') {\n        cur++;\n        return c;\n    } else if (s[cur] == 'd') {\n        cur++;\n        return d;\n    }\n    assert(s[cur] == '[');\n    cur++;\n    char op = s[cur];\n    cur++;\n    ll p = hashf(a, b, c, d);\n    ll q = hashf(a, b, c, d);\n    assert(s[cur] == ']');\n    cur++;\n    if (op == '+') {\n        return p | q;\n    } else if (op == '*') {\n        return p & q;\n    } else {\n        return p ^ q;\n    }\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    while (1) {\n        cin >> s;\n        if (s == \".\") {\n            break;\n        }\n        ll num;\n        cin >> num;\n        ll numd = num % 10;\n        num /= 10;\n        ll numc = num % 10;\n        num /= 10;\n        ll numb = num % 10;\n        num /= 10;\n        ll numa = num;\n        cur = 0;\n        ll hs = hashf(numa, numb, numc, numd);\n        ll ans = 0;\n        REP(i, 0, 10) {\n            REP(j, 0, 10) {\n                REP(k, 0, 10) {\n                    REP(l, 0, 10) {\n                        cur = 0;\n                        ll tmp = hashf(i, j, k, l);\n                        if (hs == tmp) {\n                            ans++;\n                        }\n                    }\n                }\n            }\n        }\n        cout << hs << \" \" << ans << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define REP(i, n) FOR (i, 0, n)\n#define ALL(v) (v).begin(), (v).end()\n#define fi first\n#define se second\ntemplate <typename A, typename B> inline bool chmax(A &a, B b) {if (a < b) {a = b; return 1;} return 0;}\ntemplate <typename A, typename B> inline bool chmin(A &a, B b) {if (a > b) {a = b; return 1;} return 0;}\ntypedef long long ll;\ntypedef pair<int, int> pii;\nconst ll INF = 1e9+100;\nconst bool debug = 0;\n/****************************/\n\nstruct SyntaxAnalysis {\n\tstring s;\n\tint i;\n\tint val;\n\t\n\tint init(string _s) {\n\t\ts = _s;\n\t\ti = 0;\n\t\t\n\t\tval = expr(i);\n\t\treturn val;\n\t}\n\t\n\tint expr(int &i) {\n\t\tint res = 0;\n\t\tif (s[i] >= '0' && s[i] <= '9') {\n\t\t\tres = s[i] - '0';\n\t\t}\n\t\telse {\n\t\t\tres = term(++i);\n\t\t\t++i;\n\t\t}\n\t\treturn res;\n\t}\n\t\n\tint term(int &i) {\n\t\tint ope;\n\t\tif (s[i] == '+') ope = 0;\n\t\telse if (s[i] == '*') ope = 1;\n\t\telse ope = 2;\n\t\t\n\t\tint val1 = expr(++i);\n\t\tint val2 = expr(++i);\n\t\t\n\t\tint res;\n\t\tif (ope == 0) res = val1 | val2;\n\t\telse if (ope == 1) res = val1 & val2;\n\t\telse res = val1 ^ val2;\n\t\treturn res;\n\t}\n};\n\nstring make(int i) {\n\tstring num = to_string(i);\n\treverse(ALL(num));\n\twhile (num.size() < 4) num += '0';\n\treverse(ALL(num));\n\treturn num;\n}\n\nstring arrange(string str, string num) {\n\tREP(i, str.size()) {\n\t\tif (str[i] >= 'a' && str[i] <= 'd') {\n\t\t\tstr[i] = num[str[i]-'a'];\n\t\t}\n\t}\n\treturn str;\n}\n\nint main() {\n\tstring s;\n\twhile (cin >> s, s != \".\") {\n\t\tstring num;\n\t\tcin >> num;\n\t\t\n\t\tstring tmp = arrange(s, num);\n\t\t\n\t\tSyntaxAnalysis sa;\n\t\tint hsorg = sa.init(tmp);\n\t\t\n\t\tint ans = 0;\n\t\tREP(i, 10000) {\n\t\t\tstring cur = make(i);\n\t\t\tif (hsorg == sa.init(arrange(s, cur))) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (debug) printf(\"@ \");\n\t\tcout << hsorg << \" \" << ans << endl;\n\t}\n\treturn 0;\n}\n\n// C\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <queue>\n#include <map>\n#include <stack>\n#include <algorithm>\n#define _overload3(_1, _2, _3, name, ...) name\n#define _rep(i, n) repi(i, 0, n)\n#define repi(i, a, b) for (ll i = (ll)(a); i < (ll)(b); ++i)\n#define rep(...) _overload3(__VA_ARGS__, repi, _rep, )(__VA_ARGS__)\n#define ll long long\n#define lld long double\n#define ALL(x) x.begin(), x.end()\n#ifdef DEBUG\n#define line() cerr << \"[\" << __LINE__ << \"] \";\n#define dump(i) cerr << #i \": \" << i << \" \";\n#define dumpl(i) cerr << #i \": \" << i << endl;\n#else\n#define line(i)\n#define dump(i)\n#define dumpl(i)\n#endif\nusing namespace std;\n\ntypedef string::const_iterator State;\n\nmap<char, int> mp;\nint hashval(State &);\nint op(State &);\nint letter(State &);\n\nclass ParseError\n{\n};\nvoid consume(State &begin, char expected)\n{\n    if (*begin == expected)\n    {\n        begin++;\n    }\n    else\n    {\n        cerr << \"Expected '\" << expected << \"' but got '\" << *begin << \"'\"\n             << endl;\n        cerr << \"Rest string is '\";\n        while (*begin)\n        {\n            cerr << *begin++;\n        }\n        cerr << \"'\" << endl;\n        throw ParseError();\n    }\n}\nint hashval(State &begin)\n{\n    if (*begin == '[')\n    {\n        consume(begin, '[');\n        int ret = op(begin);\n        consume(begin, ']');\n        return ret;\n    }\n    else\n    {\n        return letter(begin);\n    }\n}\nint op(State &begin)\n{\n    char op = *begin;\n    begin++;\n    int a = hashval(begin);\n    int b = hashval(begin);\n\n    if (op == '+')\n    {\n        return a | b;\n    }\n    if (op == '*')\n    {\n        return a & b;\n    }\n    if (op == '^')\n    {\n        return a ^ b;\n    }\n}\nint letter(State &begin)\n{\n    int ret = mp[*begin];\n    begin++;\n    return ret;\n}\n\nvoid setmap(int t)\n{\n    rep(i, 4)\n    {\n        mp['d' - i] = t % 10;\n        t /= 10;\n    }\n}\n\nint main()\n{\n\n    while (true)\n    {\n        string s;\n        int t;\n        cin >> s;\n        if (s == \".\")\n            break;\n        State begin = s.begin();\n\n        cin >> t;\n        setmap(t);\n        int ans = 0;\n\n        int enc = hashval(begin);\n        rep(i, 9999 + 1)\n        {\n            begin = s.begin();\n            setmap(i);\n            if (hashval(begin) == enc)\n                ans++;\n        }\n        cout << enc << \" \" << ans << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <functional>\n#include <vector>\n#include <utility>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <numeric> \n#include <iomanip>\n#include <sstream>\nusing namespace std;\ntypedef long long ll;\nconst int INF = 1<<30; \nconst int MOD = 1e9 + 7;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\n\nint get_hash(void);\nint get_val(vector<int>);\nchar change(char, string);\nint get_cnt(int, string);\n\nstring s;\nint pos;\n\nint main()\n{\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n    while(cin >> s)\n    {\n        if(s == \".\") break;\n        string p; cin >> p;\n        int num; pos = 0;\n        if(s[0] == '[' && s[s.size() - 1] == ']') s = s.substr(1, s.size() - 2);\n        string tmp = s;\n        for(int i = 0; i < s.size(); i++) s[i] = change(s[i], p);\n        num = get_hash();\n        cout << num << \" \" << get_cnt(num, tmp) << endl;\n    }\n\treturn 0;\n}\nint get_cnt(int num, string tmp)\n{\n    int ret = 0;\n    for(int i = 0; i <= 9999; i++)\n    {\n        s = tmp, pos = 0;\n        ostringstream sout;\n        sout << setfill('0') << setw(4) << i;\n        string password = sout.str();\n        for(int i = 0; i < s.size(); i++) s[i] = change(s[i], password);\n        int x = get_hash();\n        if(x == num) ret++;\n    }\n    return ret;\n}\nint get_hash()\n{\n    vector<int> vec;\n    if(s.size() < 3) return s[0] -'0';\n    while(s[pos] != ']')\n    {\n        if(pos >= s.size()) break;\n        if(s[pos] == '[')\n        {\n            pos++;\n            vec.push_back(get_hash());\n        }\n        else\n        {\n            if(s[pos] >= 48 && s[pos] <= 57) vec.push_back(s[pos] - '0');\n            else vec.push_back(s[pos]);\n        }\n        pos++;\n    }\n    return get_val(vec);\n}\nchar change(char ch, string p)\n{\n    if(ch == 'a') return p[0];\n    else if(ch == 'b') return p[1];\n    else if(ch == 'c') return p[2];\n    else if(ch == 'd') return p[3];\n    else return ch;\n}\nint get_val(vector<int> vec)\n{\n    char ch = (char)vec[0];\n    int a = vec[1], b = vec[2];\n    if(ch == '+') return a | b;\n    else if(ch == '*') return a & b;\n    else return a ^ b;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#include<iostream>\n#include<sstream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<climits>\n#include<cmath>\n#include<string>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<numeric>\n#include<functional>\n#include<algorithm>\n#include<bitset>\n#include<tuple>\n#include<unordered_set>\n#include<random>\n#include<array>\n#include<cassert>\nusing namespace std;\n#define INF (1<<29)\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(v) v.begin(),v.end()\n#define uniq(v) v.erase(unique(all(v)),v.end())\n\nstring s;\nstring p;\n\n\nint index = 0;\nint parse() {\n\tif (isalpha(s[index])) {\n\t\treturn p[s[index++] - 'a'] - '0';\n\t}\n\telse {\n\t\tint x, y;\n\t\tindex++;\n\t\tchar op = s[index++];\n\t\tx = parse();\n\t\ty = parse();\n\t\tindex++;\n\t\tif (op == '+')return x | y;\n\t\telse if (op == '*')return x & y;\n\t\telse return x^y;\n\t}\n}\n\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\n\n\t\n\n\twhile(cin>>s>>p){\n\t\tint ans = 0;\n\t\tindex = 0;\n\t\tint h = parse();\n\t\trep(x, 10000) {\n\t\t\tp[0] = x / 1 % 10 + '0';\n\t\t\tp[1] = x / 10 % 10 + '0';\n\t\t\tp[2] = x / 100 % 10 + '0';\n\t\t\tp[3] = x / 1000 % 10 + '0';\n\t\t\tindex = 0;\n\n\t\t\tint g = parse();\n\t\t\tif (h == g)ans++;\n\t\t}\n\n\t\tcout << h << ' ' << ans << endl;\n\t}\n\n\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include\"bits/stdc++.h\"\n\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\n\n#define FOR(k,m,n) for(ll (k)=(m);(k)<(n);(k)++)\n#define REP(i,n) FOR((i),0,(n))\n#define WAITING(str) int str;std::cin>>str;\n#define DEBUGING(str) cout<< #str << \" \" str<<endl\n\nconstexpr int INF = (1 << 30);\nconstexpr ll INFL = (1ll << 60);\nconstexpr ll MOD = 1000000007;// 10^9+7\n\nint mhash(string s, string p) {\n\tstack<int> st;\n\tfor (char c : s) {\n\t\tif (isalpha(c))st.push(p[c - 'a'] - '0');\n\n\t\tif (c == '+' || c == '*' || c == '^') {\n\t\t\tint r = st.top(); st.pop();\n\t\t\tint l = st.top(); st.pop();\n\t\t\tswitch (c) {\n\t\t\tcase '+':st.push(l | r); break;\n\t\t\tcase '*':st.push(l&r); break;\n\t\t\tcase '^':st.push(l^r); break;\n\t\t\t}\n\t\t}\n\t}\n\tassert(st.size() == 1);\n\treturn st.top();\n}\n\nint main()\n{\n\tostringstream ss;\n\twhile (true) {\n\t\tstring s, p; cin >> s;\n\t\tif (s == \".\")break;\n\t\tcin >> p;\n\t\treverse(s.begin(), s.end());\n\n\t\tint cnt = 0;\n\t\tint tgt = mhash(s, p);\n\t\tREP(i, 10000) {\n\t\t\tss.fill('0');\n\t\t\tss << setw(4) << i;\n\t\t\tif (tgt == mhash(s, ss.str()))cnt++;\n\t\t\tss.str(\"\");\n\t\t}\n\t\tcout << tgt << \" \" << cnt << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<stack>\nusing namespace std;\nstring s;\nint a,b,c,d;\nint eval(int n)\n{\n\td=n%10;n/=10;c=n%10;n/=10;b=n%10;n/=10;a=n;\n\tstack<int>S;\n\tint A,B;\n\tfor(int i=0;i<s.size();i++)\n\t{\n\t\tswitch(s[i])\n\t\t{\n\t\t\tcase'a':S.push(a);break;\n\t\t\tcase'b':S.push(b);break;\n\t\t\tcase'c':S.push(c);break;\n\t\t\tcase'd':S.push(d);break;\n\t\t\tcase'*':\n\t\t\t\tA=S.top();S.pop();\n\t\t\t\tB=S.top();S.pop();\n\t\t\t\tS.push(A&B);\n\t\t\t\tbreak;\n\t\t\tcase'+':\n\t\t\t\tA=S.top();S.pop();\n\t\t\t\tB=S.top();S.pop();\n\t\t\t\tS.push(A|B);\n\t\t\t\tbreak;\n\t\t\tcase'^':\n\t\t\t\tA=S.top();S.pop();\n\t\t\t\tB=S.top();S.pop();\n\t\t\t\tS.push(A^B);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn S.top();\n}\nmain()\n{\n\twhile(cin>>s,s!=\".\")\n\t{\n\t\treverse(s.begin(),s.end());\n\t\tint p;cin>>p;\n\t\tint cnt[20]={};\n\t\tfor(int i=0;i<1e4;i++)cnt[eval(i)]++;\n\t\tcout<<eval(p)<<\" \"<<cnt[eval(p)]<<endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint solve(string s, int p[4]){\n    stack<char> op, num;\n    for(auto c : s){\n        if(c=='[')continue;\n        if(c=='+' || c=='*' || c=='^'){\n            op.push(c);\n        }\n        else if(c==']'){\n            int a, b;\n            a = num.top(); num.pop();\n            b = num.top(); num.pop();\n            if(op.top()=='+'){\n                a |= b;\n            }\n            if(op.top()=='*'){\n                a &= b;\n            }\n            if(op.top()=='^'){\n                a ^= b;\n            }\n            num.push(a);\n            op.pop();\n        }\n        else{\n            num.push(p[c-'a']);\n        }\n    }\n    return num.top();\n}\n\nint main() {\n    string s, p;\n    while(cin >> s){\n        if(s==\".\")break;\n        cin >> p;\n        int a[4], h, cnt = 0;\n        for(int i=0;i<4;i++){\n            a[i] = p[i]-'0';\n        }\n        h = solve(s, a);\n        for(int i=0;i<10000;i++){\n            int t = i;\n            for(int j=0;j<4;j++){\n                a[j] = t%10;\n                t /= 10;\n            }\n            if(solve(s, a)==h)cnt++;\n        }\n        cout << h << \" \" << cnt << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "\n#if 1\n#include <iostream>\n#include <fstream>\n#include <string>\n#include <vector>\n#include <map>\n#include <set>\n#include <unordered_map>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <array>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <cstdint>\n#include <functional>\n#include <iomanip>\n#include <numeric>\n#include <assert.h>\n#include <bitset>\n#include <list>\n#include <cmath>\n#include <sstream>\n\n#define all_range(C) std::begin(C), std::end(C)\n\n\nstruct Tree{\n\tchar ope_type = '\\0';\n\tstd::unique_ptr<Tree> node1, node2;\n\tTree(){}\n\tconst char* construct(const char* str)\n\t{\n\t\tif (*str == '[') {\n\t\t\t++str;\n\t\t\tope_type = *str++;\n\t\t\tnode1 = std::make_unique<Tree>();\n\t\t\tstr = node1->construct(str);\n\t\t\tnode2 = std::make_unique<Tree>();\n\t\t\tstr = node2->construct(str);\n\t\t\tassert(*str == ']');\n\t\t\treturn ++str;\n\t\t}\n\t\telse {\n\t\t\tope_type = *str;\n\t\t\treturn ++str;\n\t\t}\n\t}\n\tunsigned hash(const int value[4])\n\t{\n\t\tif (!node1) {\n\t\t\treturn value[ope_type - 'a'];\n\t\t}\n\t\tif (ope_type == '+') {\n\t\t\treturn node1->hash(value) | node2->hash(value);\n\t\t}\n\t\tif (ope_type == '*') {\n\t\t\treturn node1->hash(value) & node2->hash(value);\n\t\t}\n\t\tif (ope_type == '^') {\n\t\t\treturn node1->hash(value) ^ node2->hash(value);\n\t\t}\n\t\tassert(false);\n\t\treturn 0;\n\t}\n};\n\nint main()\n{\n\tusing std::endl;\n\tusing std::cout;\n\tusing std::cin;\n\n\twhile (true)\n\t{\n\t\tstd::string function;\n\t\tcin >> function;\n\t\tif (function == \".\") {\n\t\t\tbreak;\n\t\t}\n\t\tstd::string pass;\n\t\tcin >> pass;\n\n\t\tTree tree;\n\t\ttree.construct(function.c_str());\n\t\tint pass_int[4];\n\t\tfor (int i = 0; i < 4; i++)\n\t\t{\n\t\t\tpass_int[i] = pass[i] - '0';\n\t\t}\n\t\tint count = 0;\n\t\tunsigned hash_my = tree.hash(pass_int);\n\t\tfor (int i = 0; i < 10000; i++)\n\t\t{\n\t\t\tpass_int[0] = i;\n\t\t\tpass_int[3] = pass_int[0] % 10; pass_int[0] /= 10;\n\t\t\tpass_int[2] = pass_int[0] % 10; pass_int[0] /= 10;\n\t\t\tpass_int[1] = pass_int[0] % 10; pass_int[0] /= 10;\n\n\t\t\tif (tree.hash(pass_int) == hash_my) {\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\tcout << hash_my << ' ' << count << std::endl;\n\t}\n\n\treturn 0;\n}\n#endif\n\n"
  },
  {
    "language": "C++",
    "code": "\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<cctype>\n#include<math.h>\n#include<string>\n#include<string.h>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<utility>\n#include<set>\n#include<map>\n#include<stdlib.h>\n#include<iomanip>\n#include<deque>\n\nusing namespace std;\n\n#define ll long long\n#define ld long double\n#define EPS 0.0000000001\n#define INF 1e9\n#define LINF (ll)INF*INF\n#define MOD 1000000007\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define loop(i,a,n) for(int i=a;i<(n);i++)\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\n\n#define int ll //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\ntypedef vector<pii> vp;\ntypedef deque<int> di;\n\nint gcd(int a, int b){\n    if(b==0) return a;\n    return gcd(b,a%b);\n}\nint lcm(int a, int b){\n    return a*b/gcd(a,b);\n}\n\nint f();\n\nstring s,pass;\nint ind;\n\n\nint f(){\n    int ret;\n    if(s[ind] >= 'a' && s[ind] <= 'd'){\n        ret = pass[s[ind]-'a'] - '0';\n        ind++;\n        return ret;\n    }else{\n        ind++;\n\n        if(s[ind] == '+'){\n            ind++;\n            int a = f();\n            int b = f();\n            ret = a | b;\n        }else if(s[ind] == '*'){\n            ind++;\n            int a = f();\n            int b = f();\n            ret = a & b;\n        }else if(s[ind] == '^'){\n            ind++;\n            int a = f();\n            int b = f();\n            ret = a ^ b;\n        }\n        ind++;\n    }\n    return ret;\n}\n\nsigned main(void) {\n    while(cin >> s, s != \".\"){\n        cin >> pass;\n        ind = 0;\n        int ret = f();\n        int ans = 0;\n        rep(a,10)rep(b,10)rep(c,10)rep(d,10){\n            pass = \"\";\n            pass += char('0' + a);\n            pass += char('0' + b);\n            pass += char('0' + c);\n            pass += char('0' + d);\n            ind = 0;\n            if(f() == ret)ans++;\n        }\n        cout << ret << \" \" << ans << endl;\n    }\n\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <math.h>\n#include <algorithm>\nusing namespace std;\n#define INF 0x7FFFFFFF\n#define ll long long\n\nint get_ans(string t);\nint get_num();\n\nstring s,ss,t,tt;\nvector<int> a;\nint k;\n\n//  [ -1\n//  ] -2\n//  + -3\n//  * -4\n//  ^ -5\n\nint main(){\n  cin >> ss;\n  while(ss!=\".\"){\n    k=0;\n    cin >> tt;\n    s=ss;\n    t=tt;\n    int num=get_ans(t);\n    int ans=0;\n    t=\"0000\";\n    for(int i=0;i<10000;i++){\n      k=0;\n      if(get_ans(t)==num){\n        ans++;\n      }\n      t[0]++;\n      for(int l=0;l<3;l++){\n        if(t[l]>'9'){\n          t[l]-=10;\n          t[l+1]++;\n        }\n      }\n    }\n    cout << num << \" \" << ans << endl;\n    cin >> ss;\n  }\n}\n\nint get_ans(string t){\n  a.assign(s.size(),0);\n  for(int i=0;i<(int)s.size();i++){\n    if('a'<=s[i]&&s[i]<='d'){\n      a[i]=t[s[i]-'a']-'0';\n    }\n    else{\n      switch(s[i]){\n        case '[':\n          a[i]=-1;\n          break;\n        case ']':\n          a[i]=-2;\n          break;\n        case '+':\n          a[i]=-3;\n          break;\n        case '*':\n          a[i]=-4;\n          break;\n        case '^':\n          a[i]=-5;\n          break;\n      }\n    }\n  }\n  return get_num();\n}\n\n\nint get_num(){\n  if(a[k]>=0){\n    k++;\n    return a[k-1];\n  }\n  else if(a[k]==-1){\n    k++;\n    int x;\n    int y;\n    switch(a[k]){\n      case -3:\n        k++;\n        x=get_num();\n        y=get_num();\n        k++;\n        return x|y;\n        break;\n      case -4:\n        k++;\n        x=get_num();\n        y=get_num();\n        k++;\n        return x&y;\n        break;\n      case -5:\n        k++;\n        x=get_num();\n        y=get_num();\n        k++;\n        return x^y;\n        break;\n    }\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<iomanip>\n#include<math.h>\n#include<complex>\n#include<queue>\n#include<deque>\n#include<map>\n#include<set>\n#include<bitset>\nusing namespace std;\n#define REP(i,m,n) for(int i=(int)m ; i < (int) n ; i++ )\n#define rep(i,n) REP(i,0,n)\ntypedef long long ll;\ntypedef pair<int,int> pint;\nconst int inf=1e9+7;\nconst ll longinf=1LL<<60 ;\nconst ll mod=1e9+7 ;\nint dx[4]={1,0,-1,0} , dy[4]={0,1,0,-1} ;\n\nint num(string s,int& i);\nint calc(string s,int& i);\nint x;\n\nbool isnum(char c){\n    int y=c-'a';\n    return (y>=0)&&(y<=3);\n}\nint calc(string s,int& i){\n    if(isnum(s[i]))return num(s,i);\n    i++;\n    char op=s[i];\n    i++;\n    int ret=calc(s,i);\n    int res=calc(s,i);\n    i++;\n    if(op=='+')return ret|res;\n    if(op=='*')return ret&res;\n    if(op=='^')return ret^res;\n    return 0;\n}\n\nint num(string s,int& i){\n    i++;\n    if(s[i-1]=='a')return x/1000;\n    if(s[i-1]=='b')return (x/100)%10;\n    if(s[i-1]=='c')return (x/10)%10;\n    if(s[i-1]=='d')return x%10;\n    return 0;\n}\nint main(){\n    string s;\n    while(cin>>s,s!=\".\"){\n        map <int,int> mp; \n        rep(i,10000){\n            x=i;\n            int j=0;\n            mp[calc(s,j)]++;\n        }\n        int n;cin>>n;\n        x=n;\n        int j=0;\n        int ans=calc(s,j);\n        cout<<ans<<\" \"<<mp[ans]<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define ALL(a) (a).begin(), (a).end()\n#define llong long long\n\nusing namespace std;\n\n// hash_parse ::= letter | '[' op hash_parse hash_parse ']'\n// op ::= '+' | '*' | '^'\n// letter ::= \n//\nint hash_parse(const string &str, int &idx, const int data){\n\tif(isalpha(str[idx])){\n\t\tidx++;\n\t\tswitch(str[idx-1]){\n\t\t\tcase 'a': return data/1000;\n\t\t\tcase 'b': return (data/100)%10;\n\t\t\tcase 'c': return (data/10)%10;\n\t\t\tcase 'd': return data%10;\n\t\t}\n\t}\n\tif('['){\n\t\tchar op = str[++idx]; ++idx;\n\t\tint lhs = hash_parse(str, idx, data);\n\t\tint rhs = hash_parse(str, idx, data);\n\t\tassert(str[idx] == ']'); ++idx;\n\t\tswitch(op){\n\t\t\tcase '*': return lhs & rhs;\n\t\t\tcase '+': return lhs | rhs;\n\t\t\tcase '^': return lhs ^ rhs;\n\t\t}\n\t}\n\tassert(0);\n\treturn -1;\n}\n\nsigned main(){\n\twhile(true){\n\t\tstring str; cin >> str;\n\t\tif(str == \".\")break;\n\t\tint idx = 0;\n\t\tint raw; cin >> raw;\n\t\tint val = hash_parse(str, idx, raw);\n\t\tint ans = 0;\n\t\tfor(int i = 0; i < 10000; i++){\n\t\t\tidx = 0;\n\t\t\tif(val == hash_parse(str, idx, i)){\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tcout << val << \" \" << ans << endl;\n\t}\n\n\treturn 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nstring s;\nvector<int> p(4);\n\nbool isLetter(char x){\n    return 'a'<=x && x<='d';\n}\n\nint calc(char op,int lhs,int rhs){\n    if(op=='+'){\n        return lhs|rhs;\n    }\n    if(op=='*'){\n        return lhs&rhs;\n    }\n    if(op=='^'){\n        return lhs^rhs;\n    }\n    assert(false);\n}\nint Hash(int &pos){\n    if(isLetter(s[pos])){\n        return p[s[pos++]-'a'];\n    }\n    else{\n        assert(s[pos++]=='[');\n        char op=s[pos++];\n        int lhs=Hash(pos);\n        int rhs=Hash(pos);\n        assert(s[pos++]==']');\n        return calc(op,lhs,rhs);\n    }\n}\nint main(){\n    while(cin>>s,s!=\".\"){\n        string pbuf;\n        cin>>pbuf;\n        for(int i=0;i<4;i++){\n            p[i]=pbuf[i]-'0';\n        }\n        int pos=0;\n        int h=Hash(pos);\n        int res=0;\n        for(int a=0;a<10;a++){\n            for(int b=0;b<10;b++){\n                for(int c=0;c<10;c++){\n                    for(int d=0;d<10;d++){\n                        p[0]=a,p[1]=b,p[2]=c,p[3]=d;\n                        pos=0;\n                        if(h==Hash(pos)){\n                            res++;\n                        }\n                    }\n                }\n            }\n        }\n        cout<<h<<\" \"<<res<<endl;\n    }\n    return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#define for0(i, n) for(int i = 0; i < (n); i++)\n#define for1(i, n) for(int i = 1; i <= (n);i++)\nusing namespace std;\nint a, b, c, d;\nint ar[10000];\nint f(string s) {\n\tif (s.size() == 1) {\n\t\tif (s[0] == 'a')return a;\n\t\tif (s[0] == 'b')return b;\n\t\tif (s[0] == 'c')return c;\n\t\tif (s[0] == 'd')return d;\n\t}\n\tchar ch = s[1]; int p, q;\n\tint e = 2;\n\tstring s1;\n\tif (s[e] == '[') {\n\t\tint cnt = 1;\n\t\ts1 = \"[\";\n\t\twhile (cnt) {\n\t\t\te++;\n\t\t\ts1 += s[e];\n\t\t\tif (s[e] == '[')cnt++;\n\t\t\tif (s[e] == ']')cnt--;\n\t\t}\n\t}\n\telse s1 += s[e];\n\tp = f(s1);\n\te++;\n\t//\n\ts1 = \"\";\n\tif (s[e] == '[') {\n\t\tint cnt = 1;\n\t\ts1 = \"[\";\n\t\twhile (cnt) {\n\t\t\te++;\n\t\t\ts1 += s[e];\n\t\t\tif (s[e] == '[')cnt++;\n\t\t\tif (s[e] == ']')cnt--;\n\t\t}\n\t}\n\telse s1 += s[e];\n\tq = f(s1);\n\t\n\tif (ch == '+')return p | q;\n\tif (ch == '*')return p & q;\n\tif (ch == '^')return p ^ q;\n}\nsigned main() {\n\tstring s;\n\twhile (cin >> s, s != \".\") {\n\t\tfor (a = 0; a <= 9; a++)\n\t\t\tfor (b = 0; b <= 9; b++)\n\t\t\t\tfor (c = 0; c <= 9; c++)\n\t\t\t\t\tfor (d = 0; d <= 9; d++)\n\t\t\t\t\t\tar[1000 * a + 100 * b + 10 * c + d] = f(s);\n\t\tint p; cin >> p; cout << ar[p] << ' ';\n\t\tint cnt = 0; for0(i, 10000)if (ar[i] == ar[p])cnt++; cout << cnt << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define syosu(x) fixed<<setprecision(x)\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef pair<int,int> P;\ntypedef pair<double,double> pdd;\ntypedef pair<ll,ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef vector<string> vs;\ntypedef vector<P> vp;\ntypedef vector<vp> vvp;\ntypedef vector<pll> vpll;\ntypedef pair<int,P> pip;\ntypedef vector<pip> vip;\nconst int inf=1<<30;\nconst ll INF=1ll<<60;\nconst double pi=acos(-1);\nconst double eps=1e-9;\nconst ll mod=1e9+7;\nconst int dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\n\nint f(int &id,string s,string t){\n\tif(isalpha(s[id])) return t[s[id++]-'a']-'0';\n\tid++;\n\tchar c=s[id];\n//\tcout<<c<<' '<<id<<endl;\n\tid++;\n\tint x=f(id,s,t),y=f(id,s,t);\n\tid++;\n\tif(c=='+') return x|y;\n\tif(c=='*') return x&y;\n\tif(c=='^') return x^y;\n\tassert(0);\n}\n\nint main(){\n\twhile(1){\n\t\tstring s,t;\n\t\tcin>>s;\n\t\tif(s==\".\") break;\n\t\tcin>>t;\n\t\tint id=0,x=f(id,s,t),res=0;\n\t\tfor(int i=0;i<10000;i++){\n\t\t\tt=to_string(i);\n\t\t\twhile(t.size()<4) t='0'+t;\n\t\t\tid=0;\n\t\t\tif(x==f(id,s,t)) res++;\n\t\t}\n\t\tcout<<x<<' '<<res<<endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint hash_(string const& s, int& p, vector<int> const& vs) {\n    if(isalpha(s[p])) {\n        return vs[s[p++] - 'a'];\n    }\n    if(s[p] == '[') {\n        const auto op = s[++p];\n        const auto h1 = hash_(s, ++p, vs);\n        const auto h2 = hash_(s, p, vs);\n        p++; // ']'\n        if(op == '+') {\n            return h1 | h2;\n        } else if(op == '*') {\n            return h1 & h2;\n        } else {\n            return h1 ^ h2;\n        }\n    }\n    assert(false);\n    return -1;\n}\nint parse(string const& s, vector<int> const& vs) {\n    int p = 0;\n    return hash_(s, p, vs);\n}\n\nint main() {\n    string exp;\n    while(cin >> exp, exp != \".\") {\n        vector<int> you(4);\n        {\n            string s; cin >> s;\n            for(int i = 0; i < 4; ++i) {\n                you[i] = s[i] - '0';\n            }\n        }\n        const auto your_hs = parse(exp, you);\n        int ans = 0;\n        for(int a = 0; a <= 9; ++a) {\n            for(int b = 0; b <= 9; ++b) {\n                for(int c = 0; c <= 9; ++c) {\n                    for(int d = 0; d <= 9; ++d) {\n                        ans += parse(exp, {a, b, c, d}) == your_hs;\n                    }\n                }\n            }\n        }\n\n        cout << your_hs << ' ' << ans << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,m,n) for(int (i)=(int)(m);i<(int)(n);++i)\n#define REP(i,n) rep(i,0,n)\n\nusing ll=long long;\nusing P=pair<ll,ll>;\nstring s;\nint a[4];\n\nP letter(int p);\n\nP hash_(int p){\n    //cout<<p<<endl;\n    if(s[p]=='+'){\n        p++;\n        P ret1 = letter(p);\n        p = ret1.second;\n        P ret2 = letter(p);\n        p=ret2.second;\n        return {ret1.first | ret2.first,p};\n    }else if(s[p]=='*'){\n        p++;\n        P ret1 = letter(p);\n        p = ret1.second;\n        P ret2 = letter(p);\n        p=ret2.second;\n        return {ret1.first & ret2.first,p};\n    }else{\n        p++;\n        P ret1 = letter(p);\n        p = ret1.second;\n        P ret2 = letter(p);\n        p=ret2.second;\n        //cout<<p<<\" \"<<ret1.first<<endl;\n        return {ret1.first ^ ret2.first,p};\n    }\n}\n\nP letter(int p){\n    if(s[p]=='['){\n        p++;\n        P ret1 = hash_(p);\n        p=ret1.second;\n        p++;//skip ']'\n        return {ret1.first, p};\n    }else{\n        return {a[s[p]-'a'], p+1};\n    }\n}\n\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    while(cin>>s){\n        if(s==\".\") break;\n        string t;\n        cin>>t;\n        REP(i,4) a[i]=t[i]-'0';\n        P ret = letter(0);\n        ll ans=ret.first;\n\n        ll con=0;\n        REP(i,10000){\n            int x=i;\n            REP(j,4){\n                a[j] = x%10;\n                x/=10;\n            }\n            \n            P ret2 = letter(0);\n            if(ret2.first==ans) con++;\n        }\n        cout<<ans<<\" \"<<con<<\"\\n\";\n\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define For(i, a, b) for(int (i)=(int)(a); (i)<(int)(b); ++(i))\n#define rFor(i, a, b) for(int (i)=(int)(a)-1; (i)>=(int)(b); --(i))\n#define rep(i, n) For((i), 0, (n))\n#define rrep(i, n) rFor((i), (n), 0)\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long lint;\ntypedef unsigned long long ulint;\ntypedef pair<int, int> pii;\ntypedef pair<lint, lint> pll;\ntemplate<class T> bool chmax(T &a, const T &b){if(a<b){a=b; return true;} return false;}\ntemplate<class T> bool chmin(T &a, const T &b){if(a>b){a=b; return true;} return false;}\ntemplate<class T> T div_floor(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>=0 ? a/b : (a+1)/b-1;\n}\ntemplate<class T> T div_ceil(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>0 ? (a-1)/b+1 : a/b;\n}\n\nconstexpr lint mod = 1000000007;\nconstexpr lint INF = mod * mod;\nconstexpr int MAX = 100010;\n\nint calc(int lhs, int rhs, char op){\n    if(op == '+') return lhs | rhs;\n    else if(op == '*') return lhs & rhs;\n    else return lhs ^ rhs;\n}\n\nint expr(string &s, int &i, string &p);\nint number(string &s, int &i, string &p);\n\nint expr(string &s, int &i, string &p){\n    if(s[i] == '['){\n        ++i;\n        char op = s[i];\n        ++i;\n        int lhs = expr(s, i, p), rhs = expr(s, i, p);\n        ++i;\n        return calc(lhs, rhs, op);\n    }\n    return number(s, i, p);\n}\n\nint number(string &s, int &i, string &p){\n    int ret = p[s[i]-'a'] - '0';\n    ++i;\n    return ret;\n}\n\nvoid dfs(int cur, int tmp, int &cnt, string &t, string &s){\n    if(cur == 4){\n        int i = 0;\n        cnt += (expr(s, i, t) == tmp);\n        return;\n    }\n    for(char c='0'; c<='9'; ++c){\n        t += c;\n        dfs(cur + 1, tmp, cnt, t, s);\n        t.pop_back();\n    }\n}\n\nint main(){\n    string s, p;\n    while(cin >> s && s != \".\"){\n        cin >> p;\n        int i = 0;\n        int tmp = expr(s, i, p);\n        int cnt = 0;\n        string t;\n        dfs(0, tmp, cnt, t, s);\n        printf(\"%d %d\\n\", tmp, cnt);\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<iostream>\n#include<cctype>\ntypedef long long ll;\nusing namespace std;\ntypedef string::const_iterator State;\n\nstring s, pass;\nll a, b, c, d;\n\nll solve(State &begin) {\n  ll ans = 0;\n  if (*begin == 'a') ans = a, begin++;\n  else if (*begin == 'b') ans = b, begin++;\n  else if (*begin == 'c') ans = c, begin++;\n  else if (*begin == 'd') ans = d, begin++;\n  else if (*begin == '[') {\n    begin++;\n    if (*begin == '+') begin++, ans = solve(begin) | solve(begin);\n    else if (*begin == '*') begin++, ans = solve(begin) & solve(begin);\n    else if (*begin == '^') begin++, ans = solve(begin) ^ solve(begin);\n    begin++;\n  }\n  return ans;\n}\n\nint main() {\n  while (cin >> s, s != \".\") {\n    cin >> pass;\n    a = pass[0] - '0';\n    b = pass[1] - '0';\n    c = pass[2] - '0';\n    d = pass[3] - '0';\n    State state = s.begin();\n    ll result = solve(state), ans = 0;\n    for (a = 0; a < 10; a++) for (b = 0; b < 10; b++) {\n      for (c = 0; c < 10; c++) for (d = 0; d < 10; d++) {\n        state = s.begin();\n        if (result == solve(state)) ans++;\n      }\n    }\n    cout << result << \" \" << ans << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define all(x) (x).begin(),(x).end()\nconst int mod=1000000007,MAX=40003;\nconst ll INF=1LL<<63;\nint num[4];\nint expr(string S,int &i);\nint number(string S,int &i);\n\nint expr(string S,int &i){\n    int res=0;\n    if(S[i]=='['){\n        i++;\n        char c=S[i];\n        i++;\n        \n        res=expr(S,i);\n        if(c=='+'){\n            res|=expr(S,i);\n        }else if(c=='*'){\n            res&=expr(S,i);\n        }else{\n            res^=expr(S,i);\n        }\n        \n        i++;\n        \n    }else{\n        res=number(S,i);\n        i++;\n    }\n    \n    return res;\n}\n\nint number(string S,int &i){\n    return num[S[i]-'a'];\n}\n\nint main(){\n    \n    std::ifstream in(\"text.txt\");\n    std::cin.rdbuf(in.rdbuf());\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    while(1){\n        string S,T;cin>>S>>T;\n        if(S==\".\") break;\n        vector<int> cnt(100);\n        int ans;\n        for(char a='0';a<='9';a++){\n            for(char b='0';b<='9';b++){\n                for(char c='0';c<='9';c++){\n                    for(char d='0';d<='9';d++){\n                        string U;\n                        U+=a;\n                        U+=b;\n                        U+=c;\n                        U+=d;\n                        num[0]=a-'0';\n                        num[1]=b-'0';\n                        num[2]=c-'0';\n                        num[3]=d-'0';\n                        int i=0;\n                        int x=expr(S,i);\n                        \n                        cnt[x]++;\n                        \n                        if(T==U) ans=x;\n                    }\n                }\n            }\n        }\n        \n        cout<<ans<<\" \"<<cnt[ans]<<endl;\n    }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> using V = vector<T>;\n\nint a, b, c, d;\n\nvoid calc(const string &s, int &idx, stack<int> &st) {\n    if(s[idx] == '[') {\n        idx++;\n        calc(s, idx, st);\n        calc(s, idx, st);\n        int l = st.top(); st.pop();\n        int r = st.top(); st.pop();\n        int res;\n        switch(s[idx]) {\n            case '+': res = l | r; break;\n            case '*': res = l & r; break;\n            case '^': res = l ^ r; break;\n            default: assert(false);\n        }\n        st.push(res);\n        idx++;\n        assert(s[idx] == ']');\n        idx++;\n    } else {\n        switch(s[idx]) {\n            case 'a': st.push(a); break;\n            case 'b': st.push(b); break;\n            case 'c': st.push(c); break;\n            case 'd': st.push(d); break;\n            default: assert(false);\n        }\n        idx++;\n    }\n}\n\nvoid set_abcd(int num) {\n    d = num % 10; num /= 10;\n    c = num % 10; num /= 10;\n    b = num % 10; num /= 10;\n    a = num % 10; num /= 10;\n}\n\nint calc_hash(const string &s, int num) {\n    set_abcd(num);\n    stack<int> st;\n    int idx = 0;\n    calc(s, idx, st);\n    return st.top();\n}\n\nbool solve() {\n    string s;\n    cin >> s;\n    if(s == \".\") return false;\n    reverse(s.begin(), s.end());\n    for(char &c : s) {\n        if(c == ']') c = '[';\n        else if(c == '[') c = ']';\n    }\n    int num;\n    cin >> num;\n    int hash = calc_hash(s, num);\n    int ans = 0;\n    for(int i = 0; i < 10000; i++) {\n        int hash_i = calc_hash(s, i);\n        ans += (hash == hash_i);\n    }\n    cout << hash << ' ' << ans << endl;\n    return true;\n}\n\nint main() {\n    while(solve());\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef string::const_iterator State;\nclass ParseError\n{\n};\nint expr(State &begin);\nint a, b, c, d;\nint main()\n{\n    string S, P;\n    while (cin >> S >> P)\n    {\n        if (S == \".\")\n            return 0;\n        map<int, int> mp;\n        State s = S.begin();\n        a = P[0] - '0';\n        b = P[1] - '0';\n        c = P[2] - '0';\n        d = P[3] - '0';\n        int x = expr(s);\n        int cnt = 0;\n        for (int i = 0; i < 10000; i++)\n        {\n            s = S.begin();\n            int k = i;\n            a = k / 1000;\n            b = (k / 100) % 10;\n            c = (k / 10) % 10;\n            d = k % 10;\n            if (x == expr(s))\n                cnt++;\n        }\n        cout << x << \" \" << cnt << endl;\n    }\n}\n//パースして、その評価結果を返す。\nint expr(State &begin)\n{\n    int res;\n    if (*begin == '[')\n    {\n        begin++;\n        int x, y;\n        if (*begin == '+')\n        {\n            begin++;\n            x = expr(begin);\n            y = expr(begin);\n            res = x | y;\n        }\n        else if (*begin == '*')\n        {\n            begin++;\n            x = expr(begin);\n            y = expr(begin);\n            res = x & y;\n        }\n        else if (*begin == '^')\n        {\n            begin++;\n            x = expr(begin);\n            y = expr(begin);\n            res = x ^ y;\n        }\n        begin++;\n        return res;\n    }\n    if (*begin == 'a')\n        res = a;\n    else if (*begin == 'b')\n        res = b;\n    else if (*begin == 'c')\n        res = c;\n    else if (*begin == 'd')\n        res = d;\n\n    begin++;\n    return res;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nstring s;\n\nint f(char a, char b, char c, char d, int l, int r){\n    //cout << l << \" \" << r << endl;\n    if(r == l){\n\n        if(s[l] == 'a') return a - '0';\n        if(s[l] == 'b') return b - '0';\n        if(s[l] == 'c') return c - '0';\n        if(s[l] == 'd') return d - '0';\n    }\n    \n    char op = s[l + 1];\n    //cerr << op << endl;\n    int x, y;\n    l += 2;\n    if(s[l] != '['){\n        x = f(a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        x = f(a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    \n    if(s[l] != '['){\n        y = f(a, b, c, d, l, l);\n        l++;\n    }else{\n        int nr = l;\n        while(s[nr] != ']'){\n            nr++;\n        }\n        y = f(a, b, c, d, l, nr);\n        l = nr + 1;\n    }\n\n    int ret = 0;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret = x & y;\n    else ret = x ^ y;\n    \n\n    //cerr << op << \" \" << x << \" \" << y << \" \" << ret << endl;\n    return ret;\n\n}\n\nsigned main(){\n    \n    //cin >> s;\n    //cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    \n    while(1){\n        cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(p[0], p[1], p[2], p[3], 0, n - 1);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(a, b, c, d, 0, n - 1)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>\n#include <cmath>\n\nstatic const int MOD = 1000000007;\nusing ll = long long;\nusing u32 = uint32_t;\nusing namespace std;\n\ntemplate<class T> constexpr T INF = ::numeric_limits<T>::max()/32*15+208;\n\nint solve(string &s, array<int, 4> &v){\n    stack<int> S;\n    for (auto &&i : s) {\n        if(i == '[' || i == ']') continue;\n        if(isalpha(i)){\n            S.emplace(v[i-'a']);\n        }else {\n            int A = S.top(); S.pop();\n            int B = S.top(); S.pop();\n            if(i == '+') S.emplace(A|B);\n            else if(i == '*') S.emplace(A&B);\n            else if(i == '^') S.emplace(A^B);\n        }\n    }\n    return S.top();\n}\n\nint main() {\n    string s;\n    while(cin >> s, s != \".\"){\n        string t;\n        cin >> t;\n        array<int, 4> v{};\n        for (int i = 0; i < 4; ++i) {\n            v[i] = t[i]-'0';\n        }\n        reverse(s.begin(),s.end());\n        int x = solve(s, v);\n        int ans = 0;\n        for (int i = 0; i < 10; ++i) {\n            for (int j = 0; j < 10; ++j) {\n                for (int k = 0; k < 10; ++k) {\n                    for (int l = 0; l < 10; ++l) {\n                        v = {i, j, k, l};\n                        if(x == solve(s, v)) ans++;\n                    }\n                }\n            }\n        }\n        cout << x << \" \" << ans << \"\\n\";\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "// Undone\n#include <bits/stdc++.h>\n#define int long long\n#define double long double\n#define INF 1e18\n#define MOD 1000000007\nusing namespace std;\nint hashed(string hash, int a, int b, int c, int d) {\n  stack<int> num;\n  int x, y;\n  for (int i = hash.length()-1; i >= 0; i--) {\n    switch (hash[i]) {\n      case 'a':\n        num.push(a);\n        break;\n      case 'b':\n        num.push(b);\n        break;\n      case 'c':\n        num.push(c);\n        break;\n      case 'd':\n        num.push(d);\n        break;\n      case '+':\n        x = num.top(); num.pop();\n        y = num.top(); num.pop();\n        num.push(x|y);\n        break;\n      case '*':\n        x = num.top(); num.pop();\n        y = num.top(); num.pop();\n        num.push(x&y);\n        break;\n      case '^':\n        x = num.top(); num.pop();\n        y = num.top(); num.pop();\n        num.push(x^y);\n        break;\n    }\n  }\n  return num.top();\n}\n\nsigned main() {\n  string hash;\n  while (cin >> hash, hash != \".\") {\n    int a[4];\n    for (int i = 0; i < 4; i++) {\n      char c; cin >> c;\n      a[i] = c-'0';\n    }\n    int original = hashed(hash, a[0], a[1], a[2], a[3]);\n    int ans = 0;\n    for (int i = 0; i < 10; i++) {\n      for (int j = 0; j < 10; j++) {\n        for (int k = 0; k < 10; k++) {\n          for (int l = 0; l < 10; l++) {\n            if (original == hashed(hash, i, j, k, l)) {\n              ans++;\n            }\n          }\n        }\n      }\n    }\n    cout << original << \" \" << ans << endl;\n  }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define REP(i, n) FOR (i, 0, n)\n#define ALL(v) (v).begin(), (v).end()\n#define fi first\n#define se second\ntemplate <typename A, typename B> inline bool chmax(A &a, B b) {if (a < b) {a = b; return 1;} return 0;}\ntemplate <typename A, typename B> inline bool chmin(A &a, B b) {if (a > b) {a = b; return 1;} return 0;}\ntypedef long long ll;\ntypedef pair<int, int> pii;\nconst ll INF = 1e9+100;\nconst bool debug = 0;\n/****************************/\n\nstruct SyntaxAnalysis {\n\tstring s;\n\tint i;\n\tint val;\n\t\n\tSystaxAnalysis() {}\n\t\n\tint init(string _s) {\n\t\ts = _s;\n\t\ti = 0;\n\t\t\n\t\tval = expr(i);\n\t\treturn val;\n\t}\n\t\n\tint expr(int &i) {\n\t\tint res = 0;\n\t\tif (s[i] >= '0' && s[i] <= '9') {\n\t\t\tres = s[i] - '0';\n\t\t}\n\t\telse {\n\t\t\tres = term(++i);\n\t\t\t++i;\n\t\t}\n\t\treturn res;\n\t}\n\t\n\tint term(int &i) {\n\t\tint ope;\n\t\tif (s[i] == '+') ope = 0;\n\t\telse if (s[i] == '*') ope = 1;\n\t\telse ope = 2;\n\t\t\n\t\tint val1 = expr(++i);\n\t\tint val2 = expr(++i);\n\t\t\n\t\tint res;\n\t\tif (ope == 0) res = val1 | val2;\n\t\telse if (ope == 1) res = val1 & val2;\n\t\telse res = val1 ^ val2;\n\t\treturn res;\n\t}\n};\n\nstring make(int i) {\n\tstring num = to_string(i);\n\treverse(ALL(num));\n\twhile (num.size() < 4) num += '0';\n\treverse(ALL(num));\n\treturn num;\n}\n\nstring arrange(string str, string num) {\n\tREP(i, str.size()) {\n\t\tif (str[i] >= 'a' && str[i] <= 'd') {\n\t\t\tstr[i] = num[str[i]-'a'];\n\t\t}\n\t}\n\treturn str;\n}\n\nint main() {\n\tstring s;\n\twhile (cin >> s, s != \".\") {\n\t\tstring num;\n\t\tcin >> num;\n\t\t\n\t\tstring tmp = arrange(s, num);\n\t\t\n\t\tSyntaxAnalysis sa;\n\t\tint hsorg = sa.init(tmp);\n\t\t\n\t\tint ans = 0;\n\t\tREP(i, 10000) {\n\t\t\tstring cur = make(i);\n\t\t\tif (hsorg == sa.init(arrange(s, cur))) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (debug) printf(\"@ \");\n\t\tcout << hsorg << \" \" << ans << endl;\n\t}\n\treturn 0;\n}\n\n// C\n"
  },
  {
    "language": "C++",
    "code": "#pragma GCC optimize (\"O3\")\n#pragma GCC target (\"tune=native\")\n#pragma GCC target (\"avx\")\n\n#include <bits/stdc++.h>\n\n// 汎用マクロ\n#define ALL_OF(x) (x).begin(), (x).end()\n#define REP(i,n) for (long long i=0, i##_len=(n); i<i##_len; i++)\n#define RANGE(i,is,ie) for (long long i=(is), i##_end=(ie); i<=i##_end; i++)\n#define DSRNG(i,is,ie) for (long long i=(is), i##_end=(ie); i>=i##_end; i--)\n#define UNIQUE(v) { sort((v).begin(), (v).end()); (v).erase(unique((v).begin(), (v).end()), (v).end()); }\ntemplate<class T> bool chmax(T &a, const T &b) {if (a < b) {a = b; return true;} return false; }\ntemplate<class T> bool chmin(T &a, const T &b) {if (a > b) {a = b; return true;} return false; }\n#define INF 0x7FFFFFFF\n#define LINF 0x7FFFFFFFFFFFFFFFLL\n#define Yes(q) (q ? \"Yes\" : \"No\")\n#define YES(q) (q ? \"YES\" : \"NO\")\n#define DUMP(q) cerr << \"[DEBUG] \" #q \": \" << (q) << \" at \" __FILE__ \":\" << __LINE__ << endl\n#define DUMPALL(q) { cerr << \"[DEBUG] \" #q \": [\"; REP(dumpall_i, (q).size()) { cerr << q[dumpall_i] << (dumpall_i == (q).size() - 1 ? \"\" : \", \"); } cerr << \"] at \" __FILE__ \":\" << __LINE__ << endl; }\ntemplate<class T> T gcd(const T &a, const T &b) { return a < b ? gcd(b, a) : b ? gcd(b, a % b) : a; }\ntemplate<class T> T lcm(const T &a, const T &b) { return a / gcd(a, b) * b; }\n\n// gcc拡張マクロ\n#define popcount __builtin_popcount\n#define popcountll __builtin_popcountll\n\n// エイリアス\nusing  ll = long long;\nusing ull = unsigned long long;\nusing  ld = long double;\nusing namespace std;\n\n// モジュール\nll sp_hash(const string &s, const string &p) {\n    stack<ll> lstk;\n    stack<char> lop;\n    for (const char &c : s) {\n\n        switch(c) {\n            case '[': continue;\n            case ']':\n                {\n                    ll c1 = lstk.top(); lstk.pop();\n                    ll c2 = lstk.top(); lstk.pop();\n                    ll res;\n                    char op = lop .top(); lop .pop();\n                    switch (op) {\n                        case '+': res = c1 | c2; break;\n                        case '*': res = c1 & c2; break;\n                        case '^': res = c1 ^ c2; break;\n                    }\n                    lstk.push(res);\n                }\n                break;\n            case 'a':\n            case 'b':\n            case 'c':\n            case 'd':\n                lstk.push(p[c - 'a'] - '0');\n                break;\n            case '+':\n            case '*':\n            case '^':\n                lop.push(c);\n                break;\n        }\n\n    }\n\n    return lstk.top();\n\n}\n\n// 処理内容\nint main() {\n    \n    // <Hash>   ::= <Letter> | '['<Op><Hash><Hash>']'\n    // <Op>     ::= '+' | '*' | '^'\n    // <Letter> ::= 'a' | 'b' | 'c' | 'd'\n\n    string s, p;\n    string i(4, '0');\n    vector<ll> hashes;\n    vector<ll> anss;\n    while (cin >> s, s != \".\") {\n        cin >> p;\n\n        ll phash = sp_hash(s, p);\n        ll ans = 0;\n        REP(_a, 10) {\n            i[0] = '0' + _a;\n            REP(_b, 10) {\n                i[1] = '0' + _b;\n                REP(_c, 10) {\n                    i[2] = '0' + _c;\n                    REP(_d, 10) {\n                        i[3] = '0' + _d;\n                        if (phash == sp_hash(s, i)) ans++;\n                    }\n                }\n            }\n        }\n\n        hashes.push_back(phash);\n        anss.push_back(ans);\n\n    }\n\n    REP(i, anss.size()) cout << hashes[i] << \" \" << anss[i] << endl;\n    \n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define P pair<ll,ll>\n#define FOR(I,A,B) for(ll I = (A); I < (B); ++I)\n#define POSL(x,v) (lower_bound(x.begin(),x.end(),v)-x.begin()) //ai>=v  x is sorted\n#define POSU(x,v) (upper_bound(x.begin(),x.end(),v)-x.begin()) //ai>v  x is sorted\n#define NUM(x,v) (POSU(x,v)-POSL(x,v))  //x is sorted\n#define SORT(x) (sort(x.begin(),x.end())) // 0 2 2 3 4 5 8 9\n#define REV(x) (reverse(x.begin(),x.end())) //reverse\n#define TO(x,t,f) ((x)?(t):(f))\n#define CLR(mat) memset(mat, 0, sizeof(mat))\n#define FILV(x,a) fill(x.begin(),x.end(),a)\n#define FILA(ar,N,a) fill(ar,ar+N,a)\n#define NEXTP(x) next_permutation(x.begin(),x.end())\nll gcd(ll a,ll b){if(a<b)swap(a,b);if(a%b==0)return b;else return gcd(b,a%b);}\nll lcm(ll a,ll b){ll c=gcd(a,b);return ((a/c)*(b/c)*c);}//saisyo kobaisu\n#define pb push_back\n#define pri(aa) cout<<(aa)<<endl\n#define mp(x,y) make_pair(x,y)\n#define fi first\n#define se second\nconst ll INF=1e18+7;\nconst ll MOD=1e9+7;\nconst ll N = 1007;\n\nll pnum[4];\nll chartonum(char x){\n\tif(x=='+')return -1;\n\tif(x=='*')return -2;\n\tif(x=='^')return -3;\n\telse return pnum[x-'a'];\n}\n\nll calc3(ll op,ll a,ll b){\n\tif(op==-1)return (a|b);//+\n\tif(op==-2)return (a&b);//*\n\tif(op==-3)return (a^b);//^\n}\n\nll anscalc(string s){\n\tstack<ll> op;\n\tFOR(i,0,s.size()){\n\t\tif(s[i]=='[' || s[i]==']')continue;\n\t\telse op.push(chartonum(s[i]));\n\t\twhile(op.size()>2){\n\t\t\tll top1,top2,top3;\n\t\t\ttop1 = op.top();op.pop();\n\t\t\ttop2 = op.top();op.pop();\n\t\t\ttop3 = op.top();op.pop();\n\t\t\tif(top3<0 && top2>=0 && top1>=0){\n\t\t\t\top.push(calc3(top3,top1,top2));\n\t\t\t}else{\n\t\t\t\top.push(top3);\n\t\t\t\top.push(top2);\n\t\t\t\top.push(top1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn op.top();\n}\n\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\twhile(1){\n\t\tll ans,num=0;\n\t\tstring s,p;\n\t\tcin>>s;\n\t\tif(s[0]=='.')break;\n\t\tcin>>p;\n\t\tFOR(i,0,4)pnum[i] = p[i]-'0';\n\t\tans = anscalc(s);\n\t\tFOR(i,0,10){\n\t\t\tFOR(j,0,10){\n\t\t\t\tFOR(k,0,10){\n\t\t\t\t\tFOR(l,0,10){\n\t\t\t\t\t\tpnum[0]=i;\n\t\t\t\t\t\tpnum[1]=j;\n\t\t\t\t\t\tpnum[2]=k;\n\t\t\t\t\t\tpnum[3]=l;\n\t\t\t\t\t\tif(anscalc(s)==ans)num++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<\" \"<<num<<endl;\n\t}\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdlib.h>\n#include <iomanip>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <sstream>\n#include <complex>\n#include <list>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <map>\n#include <set>\n#include <limits>\n#include <numeric>\n\nusing namespace std;\n#define all(a) begin(a), end(a)\n\nusing ll = long long;\nusing ull = unsigned long long;\ntemplate <typename T>\nusing vec = vector<T>;\ntemplate <typename T>\nusing vec2 = vector<vec<T>>;\n\ntemplate <typename V, typename H>\nvoid resize(vector<V> &vec, const H h)\n{\n    vec.resize(h);\n}\n\ntemplate <typename V, typename H, typename... T>\nvoid resize(vector<V> &vec, const H &h, const T... t)\n{\n    vec.resize(h);\n    for (auto &v : vec)\n    {\n        resize(v, t...);\n    }\n}\n\ntemplate <typename V, typename T>\nvoid fill(V &x, const T &val)\n{\n    x = val;\n}\n\ntemplate <typename V, typename T>\nvoid fill(vector<V> &vec, const T &val)\n{\n    for (auto &v : vec)\n    {\n        fill(v, val);\n    }\n}\n\nstruct pre_\n{\n    pre_()\n    {\n        cin.tie(nullptr);\n        ios::sync_with_stdio(false);\n        cout << fixed << setprecision(6);\n    }\n} pre__;\n\nstring S, P;\nint a, b, c, d;\nstack<int> st;\n\nvoid parser()\n{\n    for (int i = 0; i < S.size(); ++i)\n    {\n        if (S[i] >= 'a' && S[i] <= 'd')\n        {\n            int s;\n            switch (S[i])\n            {\n            case 'a':\n                s = a;\n                break;\n            case 'b':\n                s = b;\n                break;\n            case 'c':\n                s = c;\n                break;\n            case 'd':\n                s = d;\n                break;\n            default:\n                break;\n            }\n\n            st.push(s);\n        }\n        else if (S[i] == '[' || S[i] == ']')\n            continue;\n        else\n        {\n            int x = st.top();\n            st.pop();\n            int y = st.top();\n            st.pop();\n            int z;\n            if (S[i] == '+')\n            {\n                z = x | y;\n            }\n            else if (S[i] == '*')\n            {\n                z = x & y;\n            }\n            else\n            {\n                z = x ^ y;\n            }\n            st.push(z);\n        }\n    }\n}\nint main(void)\n{\n    while (1)\n    {\n\n        cin >> S;\n        if (S == \".\")\n            break;\n        cin >> P;\n\n        reverse(all(S));\n\n        a = (int)P[0] - (int)'0';\n        b = (int)P[1] - (int)'0';\n        c = (int)P[2] - (int)'0';\n        d = (int)P[3] - (int)'0';\n\n        parser();\n        int ans = st.top();\n        cout << ans;\n        st.pop();\n\n        int cnt = 0;\n        for (int i = 0; i <= 9999; ++i)\n        {\n            string test = to_string(i);\n            string zero = \"\";\n            for (int j = 0; j < 4 - test.size(); ++j)\n            {\n                zero += \"0\";\n            }\n            test = zero + test;\n            a = (int)test[0] - (int)'0';\n            b = (int)test[1] - (int)'0';\n            c = (int)test[2] - (int)'0';\n            d = (int)test[3] - (int)'0';\n            parser();\n            int ans_test = st.top();\n            if (ans == ans_test)\n                cnt++;\n\n            st.pop();\n        }\n        cout << \" \" << cnt << endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<iomanip>\n#include<cmath>\n#include<vector>\n#include<algorithm>\n#include<stack>\n\nusing namespace std;\n\n#define int long long\n#define endl \"\\n\"\n\nconst long long INF = (long long)1e18;\nconst long long MOD = (long long)1e9 + 7; \n\nstring yn(bool f){return f?\"Yes\":\"No\";}\nstring YN(bool f){return f?\"YES\":\"NO\";}\n\n#define MAX\n\nint check(string &s, int p){\n\tint a = p/1000, b = (p/100)%10, c = (p/10)%10, d = p%10;\n\tstack<int> sta;\n\t\n\tfor(int i = s.size()-1; i >= 0; i--){\n\t\tif(s[i] == 'a') sta.push(a);\n\t\telse if(s[i] == 'b') sta.push(b);\n\t\telse if(s[i] == 'c') sta.push(c);\n\t\telse if(s[i] == 'd') sta.push(d);\n\t\telse if(s[i] == '^'){\n\t\t\tint e = sta.top(); sta.pop();\n\t\t\tint f = sta.top(); sta.pop();\n\t\t\tsta.push(e^f);\n\t\t} else if(s[i] == '+'){\n\t\t\tint e = sta.top(); sta.pop();\n\t\t\tint f = sta.top(); sta.pop();\n\t\t\tsta.push(e|f);\n\t\t} else if(s[i] == '*'){\n\t\t\tint e = sta.top(); sta.pop();\n\t\t\tint f = sta.top(); sta.pop();\n\t\t\tsta.push(e&f);\n\t\t}\n\t}\n\t\n\treturn sta.top();\n}\nsigned main(){\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tcout<<fixed<<setprecision(10);\n\t\n\twhile(true){\n\t\tstring s;\n\t\tint num = 0, con = 0, p;\n\t\tcin>>s;\n\t\t\n\t\tif(s == \".\") break;\n\t\t\n\t\tcin>>p;\n\t\t\n\t\tnum = check(s,p);\n\t\t\n\t\tfor(int i = 0; i < 10000; i++)\n\t\t\tif(num == check(s,i)) con++;\n\t\t\n\t\tcout<<num<<\" \"<<con<<endl;\n\t}\n\t\n\t\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define all(x) (x).begin(),(x).end()\n#define pb push_back\n#define fi first\n#define se second\n#define dbg(x) cout<<#x\" = \"<<((x))<<endl\ntemplate<class T,class U> ostream& operator<<(ostream& o, const pair<T,U> &p){o<<\"(\"<<p.fi<<\",\"<<p.se<<\")\";return o;}\ntemplate<class T> ostream& operator<<(ostream& o, const vector<T> &v){o<<\"[\";for(T t:v){o<<t<<\",\";}o<<\"]\";return o;}\n\nstring s,p;\n\nint H(int &idx){\n    if(s[idx]=='['){\n        ++idx;\n        char op = s[idx];\n        ++idx;\n\n        int val=-1;\n        if(op=='+') val = H(idx)|H(idx);\n        else if(op=='*') val = H(idx)&H(idx);\n        else if(op=='^') val = H(idx)^H(idx);\n        else assert(false);\n\n        assert(s[idx]==']');\n        ++idx;\n\n        return val;\n    }\n    else{\n        int letter = s[idx]-'a';\n        ++idx;\n        assert(0<=letter && letter<=3);\n        return p[letter]-'0';\n    }\n}\n\nint main(){\n    while(cin >>s,(s!=\".\")){\n        cin >>p;\n\n        int idx = 0;\n        int v = H(idx);\n\n        int ct = 0;\n        rep(i,10000){\n            int t = i;\n            rep(j,4){\n                p[3-j] = t%10+'0';\n                t/=10;\n            }\n            idx = 0;\n            if(H(idx) == v) ++ct;\n        }\n\n        cout << v << \" \" << ct << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF (1LL<<30)\n#define DEKAI 1000000007\n#define lp(i,n) for(int i=0;i<n;i++)\n#define int long long\n\nint hah(string s){\n\twhile(1){\n\t\tint check=0;\n\t\tif(s.size()<4)break;\n\t\tlp(i,s.size()-4){\n\t\t\tif(s[i]=='['&&s[i+4]==']'){\n\t\t\t\tchar op=s[i+1];\n\t\t\t\tint x=s[i+2]-'0';\n\t\t\t\tint y=s[i+3]-'0';\n\t\t\t\tint ref;\n\t\t\t\tif(op=='+'){\n\t\t\t\t\tref=(x|y);\n\t\t\t\t}\n\t\t\t\tif(op=='*'){\n\t\t\t\t\tref=(x&y);\n\t\t\t\t}\n\t\t\t\tif(op=='^'){\n\t\t\t\t\tref=(x^y);\n\t\t\t\t}\n\t\t\t\tcheck=1;\n\t\t\t\tstring sbef=s.substr(0,i);\n\t\t\t\tchar c=ref+'0';\n\t\t\t\tstring scen{c};\n\t\t\t\tstring saf=s.substr(i+5,s.size()-i-4);\n\t\t\t\ts=sbef+scen+saf;\n\t\t\t\t/*\n\t\t\t\tcout<<sbef<<\" \"<<saf<<\" \"<<scen<<endl;\n\t\t\t\tcout<<op<<\" \"<<x<<\" \"<<y<<\" \"<<ref<<endl;\n\t\t\t\tcout<<s<<endl;\n\t\t\t\tint hoge;\n\t\t\t\tcin>>hoge;\n\t*/\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(check==0)break;\n\t}\n\treturn s[0]-'0';\n}\n\nsigned main(){\n\twhile(1){\n\t\tstring s;\n\t\tcin>>s;\n\t\tif(s==\".\")break;\n\t\tint n;\n\t\tcin>>n;\n\t\tint tx[100000];\n\t\tlp(i,100000)tx[i]=0;\n\t\tint memo;\n\t\tlp(z,10000){\n\t\t\tstring x=s;\n\t\t\tlp(i,x.size()){\n\t\t\t\tif(x[i]=='a'){\n\t\t\t\t\tx[i]=(z/1000)+'0';\n\t\t\t\t}\n\t\t\t\tif(x[i]=='b'){\n\t\t\t\t\tx[i]=(z%1000/100)+'0';\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif(x[i]=='c'){\n\t\t\t\t\tx[i]=(z%100/10)+'0';\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif(x[i]=='d'){\n\t\t\t\t\tx[i]=(z%10)+'0';\n\t\t\t\t}\n\t\t\t}\n\t\t\tint zx=hah(x);\n\t\t\ttx[zx]++;\n\t\t\tif(n==z)memo=zx;\n\t\t}\n\t\tcout<<memo<<\" \"<<tx[memo]<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\n#define INF 1e9\n#define llINF 1e18\n#define MOD 1e9+7\n#define pb push_back\n#define mp make_pair \n#define F first\n#define S second\n#define ll long long\nusing namespace std;\nstring hash;\nint a,b,c,d;\nint po=0;\nint op(int left,int right,char ope){\n  if(ope=='+')\n    return left | right;\n  if(ope=='^')\n    return left ^ right;\n  if(ope=='*')\n    return left & right;\n}\n\nint dfs(){\n  if(hash[po]=='['){\n    po++;\n    dfs();\n  }else if(hash[po]=='+'||hash[po]=='*'||hash[po]=='^'){\n    char ope=hash[po];\n    po++;\n    int left=dfs();\n    int right=dfs();\n    po++;\n    return op(left,right,ope);\n  }else{\n    if(hash[po]=='a'){\n      po++;\n      return a;\n    }else if(hash[po]=='b'){\n      po++;\n      return b;\n    }else if(hash[po]=='c'){\n      po++;\n      return c;\n    }else if(hash[po]=='d'){\n      po++;\n      return d;\n    }\n  }\n}\nint main(){\n  while(cin>>hash,hash!=\".\"){\n    po=0;\n    string num;cin>>num;\n    a=num[0]-'0';b=num[1]-'0';\n    c=num[2]-'0';d=num[3]-'0';\n    int ori=dfs();\n    int cnt=0;\n    for(int i=0;i<10000;i++){\n      po=0;\n      a=i/1000;b=(i/100)%10;\n      c=(i/10)%10;d=i%10;\n      if(ori==dfs())cnt++;\n    }\n    cout<<ori<<\" \"<<cnt<<endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef string::const_iterator State;\nclass ParseError{};\n\nint letter(State& begin,const int& a,const int& b,const int& c,const int& d){\n    char let = *begin;\n    begin++;\n    switch(let){\n        case 'a':\n            return a;\n        case 'b':\n            return b;\n        case 'c':\n            return c;\n        case 'd':\n            return d;\n        default:\n            throw ParseError();\n    }\n}\n\nint Hash(State& begin,const int& a,const int& b,const int& c,const int& d){\n    if(*begin == '['){\n        begin++;\n        char op = *begin;\n        begin++;\n        int hash1 = Hash(begin,a,b,c,d);\n        int hash2 = Hash(begin,a,b,c,d);\n        begin++;\n        switch(op){\n            case '+':\n                return hash1 | hash2;\n            case '*':\n                return hash1 & hash2;\n            case '^':\n                return hash1 ^ hash2;\n            default:\n                throw ParseError();\n        }\n    }\n    return letter(begin,a,b,c,d);\n}\n\nvoid solve(string S,string P){\n    State begin = S.begin();\n    int hash = Hash(begin,P[0]-'0',P[1]-'0',P[2]-'0',P[3]-'0');\n    int res = 0;\n    vector<int> v;\n    for(int i = 0;i < 10;i++)v.push_back(i);\n    for(auto a:v)for(auto b:v)for(auto c:v)for(auto d:v){\n        begin = S.begin();\n        if(hash == Hash(begin,a,b,c,d))res++;\n    }\n    cout << hash << ' ' << res << endl;\n}\n\nint main(){\n    string S,P;\n    while(true){\n        cin >> S;\n        if(S == \".\")return 0;\n        cin >> P;\n        solve(S,P);\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdint>\n#include <cassert>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <string>\n#include <tuple>\n\nint parse(std::string const& s, size_t& i) {\n  if (isdigit(s[i])) return s[i++]-'0';\n\n  assert(s[i] == '[');\n  ++i;\n  char op = s[i++];\n  int lhs = parse(s, i);\n  int rhs = parse(s, i);\n  assert(s[i] == ']');\n  ++i;\n\n  if (op == '+') return lhs | rhs;\n  if (op == '*') return lhs & rhs;\n  if (op == '^') return lhs ^ rhs;\n  assert(false);\n}\n\nint testcase_ends() {\n  char buf[128];\n  scanf(\"%s\", buf);\n  std::string s = buf;\n  if (s == \".\") return 1;\n\n  char a, b, c, d;\n  scanf(\" %c%c%c%c\", &a, &b, &c, &d);\n\n  std::string t = s;\n  for (auto& ti: t) {\n    if (ti == 'a') ti = a;\n    if (ti == 'b') ti = b;\n    if (ti == 'c') ti = c;\n    if (ti == 'd') ti = d;\n  }\n\n  size_t k = 0;\n  int hash = parse(t, k);\n  int res = 0;\n  for (size_t i = 0; i < 10000; ++i) {\n    std::string t = s;\n    char abcd[4] = {};\n    for (int j = 0, tmp = i; j < 4; ++j) {\n      abcd[3-j] = '0' + (tmp % 10);\n      tmp /= 10;\n    }\n    char a, b, c, d;\n    a = abcd[0];\n    b = abcd[1];\n    c = abcd[2];\n    d = abcd[3];\n    for (auto& ti: t) {\n      if (ti == 'a') ti = a;\n      if (ti == 'b') ti = b;\n      if (ti == 'c') ti = c;\n      if (ti == 'd') ti = d;\n    }\n\n    size_t k = 0;\n    int hash0 = parse(t, k);\n    if (hash0 == hash) ++res;\n  }\n\n  printf(\"%d %d\\n\", hash, res);\n  return 0;\n}\n\nint main() {\n  while (!testcase_ends()) {}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\n#define int long long int\nconst int INF = 1001001001001001LL;\n\nint di[] = {-1, 0, 1, 0, -1, 1, 1, -1};\nint dj[] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nstring s;\n\nint f(char a, char b, char c, char d, int l, int r){\n    char op = s[l];\n    \n    if(op != '+' && op != '+' && op != '*'){\n        if(op == 'a') return a - '0';\n        if(op == 'b') return b - '0';\n        if(op == 'c') return c - '0';\n        if(op == 'd') return d - '0';\n    }\n\n    op = s[l + 1];\n\n    int x, y;\n    l += 2;\n    if(s[l] == '['){\n        int end = l;\n        for(;; end++){\n            \n            if(s[end] == ']'){\n                end++;\n                break;\n            }\n        }\n\n        x = f(a, b, c, d, l, end);\n        l = end;\n    }else{\n\n        if(s[l] == 'a') x = a - '0';\n        if(s[l] == 'b') x = b - '0';\n        if(s[l] == 'c') x = c - '0';\n        if(s[l] == 'd') x = d - '0';\n\n        l++;\n    }\n\n    if(s[l] == '['){\n        int end = l;\n        for(;; end++){\n            if(s[end] == ']'){\n                end++;\n                break;\n            }\n        }\n\n        y = f(a, b, c, d, l, end);\n\n    }else{\n        if(s[l] == 'a') y = a - '0';\n        if(s[l] == 'b') y = b - '0';\n        if(s[l] == 'c') y = c - '0';\n        if(s[l] == 'd') y = d - '0';\n    }\n    \n    int ret;\n    if(op == '+') ret = x | y;\n    else if(op == '*') ret =  x & y;\n    else ret = x ^ y;\n\n    //cerr << op << \" \" << a << \" \" << b << \" \" << ret << endl;\n    return ret;\n}\n\nsigned main(){\n    /*\n    cin >> s;\n    cout << f('0', '4', '0', '4', 0, s.size()) << endl;\n    */\n    while(1){\n        cin >> s;\n        if(s == \".\") break;\n        string p; cin >> p;\n        int n = s.size();\n\n        int val = f(p[0], p[1], p[2], p[3], 0, n);\n        int ans = 0;\n        \n        for(char a = '0'; a <= '9'; a++){\n            for(char b = '0'; b <= '9'; b++){\n                for(char c = '0'; c <= '9'; c++){\n                    for(char d = '0'; d <= '9'; d++){\n                        if(val == f(a, b, c, d, 0, n)) ans++;\n                    }\n                }\n            }\n        }\n\n        cout << val << \" \" << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  \n  while (true) {\n    string s;\n    cin >> s;\n    if (s == \".\") return 0;\n    \n    reverse(s.begin(), s.end());\n    \n    int p;\n    cin >> p;\n    \n    int hash;\n    map<int, int> mp;\n    for (int num = 0; num < 10000; num++) {\n      vector<int> x(4);\n      int tmp = num;\n      for (int i = 3; i >= 0; i--) {\n        x.at(i) = tmp % 10;\n        tmp /= 10;\n      }\n      \n      stack<int> st;\n      for (int i = 0; i < s.size(); i++) {\n        if (s[i] == '[' || s[i] == ']') continue;\n        if ('a' <= s[i] && s[i] <= 'd') st.push(x[s[i] - 'a']);\n        \n        if (s[i] == '+') {\n          int k1 = st.top();\n          st.pop();\n          int k2 = st.top();\n          st.pop();\n          int k3 = (k1 | k2);\n          st.push(k3);\n        }\n        if (s[i] == '*') {\n          int k1 = st.top();\n          st.pop();\n          int k2 = st.top();\n          st.pop();\n          int k3 = (k1 & k2);\n          st.push(k3);\n        }\n        if (s[i] == '^') {\n          int k1 = st.top();\n          st.pop();\n          int k2 = st.top();\n          st.pop();\n          int k3 = (k1 ^ k2);\n          st.push(k3);\n        }\n      }\n      \n    mp[st.top()]++;\n    if (p == num) hash = st.top();\n    }\n    \n    cout << hash << \" \" << mp[hash] << '\\n';\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,n) for(int i=0,i##_cond=(n);i<i##_cond;++i)\n#define pb push_back\nusing vi  = vector<int>;\n\nvi mp; // a : mp[0], b : mp[1], c : mp[2], d : mp[3]\nvector<function<int(int,int)>> ops;\n\ntypedef string::const_iterator State;\nint letter(State &begin){\n  int res = mp[*begin - 'a'];\n  ++begin;\n  return res;\n}\nint hashf(State &begin){\n  if(*begin == '['){\n    ++begin; // '['\n    \n    int optype;\n    if(*begin == '+') optype = 0;\n    else if(*begin == '*') optype = 1;\n    else if(*begin == '^') optype = 2;\n    else assert(false);\n    ++begin; // operator\n    \n    int lop = hashf(begin), rop = hashf(begin);\n\n    ++begin; // ']' \n    \n    return ops[optype](lop,rop);\n  }else{\n    return letter(begin);\n  }\n}\n\nint main(){\n  string s;\n  mp.resize(4);\n  ops.push_back([](int a, int b){ return a|b; });\n  ops.push_back([](int a, int b){ return a&b; });\n  ops.push_back([](int a, int b){ return a^b; });\n  while(cin >> s, s != \".\"){\n    string p; cin >> p;\n    rep(i,4) mp[i] = p[i] - '0';\n    State begin = s.begin();\n    int ans = hashf(begin);\n    int cnt = 0;\n    rep(a,10) rep(b,10) rep(c,10) rep(d,10){\n      mp[0] = a; mp[1] = b; mp[2] = c; mp[3] = d;\n      begin = s.begin();\n      if(ans == hashf(begin)) cnt++;\n    }\n    cout << ans << \" \" << cnt << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\tstring S;\n\twhile (cin >> S, S != \".\") {\n\t\tint P;\n\t\tcin >> P;\n\t\treverse(S.begin(), S.end());\n\t\tvector<int> hs(10000);\n\t\tfor (int x = 0; x < 10000; x++) {\n\t\t\tvector<int> v = { x / 1000, x % 1000 / 100, x % 100 / 10, x % 10 };\n\t\t\tvector<int> vs;\n\t\t\tfor (auto c : S) {\n\t\t\t\tif ('a' <= c && c <= 'd') {\n\t\t\t\t\tvs.push_back(v[c - 'a']);\n\t\t\t\t}\n\t\t\t\tif (c == '+') {\n\t\t\t\t\tint a = vs.back(); vs.pop_back();\n\t\t\t\t\tint b = vs.back(); vs.pop_back();\n\t\t\t\t\tvs.push_back(a | b);\n\t\t\t\t}\n\t\t\t\tif (c == '*') {\n\t\t\t\t\tint a = vs.back(); vs.pop_back();\n\t\t\t\t\tint b = vs.back(); vs.pop_back();\n\t\t\t\t\tvs.push_back(a & b);\n\t\t\t\t}\n\t\t\t\tif (c == '^') {\n\t\t\t\t\tint a = vs.back(); vs.pop_back();\n\t\t\t\t\tint b = vs.back(); vs.pop_back();\n\t\t\t\t\tvs.push_back(a ^ b);\n\t\t\t\t}\n\t\t\t}\n\t\t\ths[x] = vs.back();\n\t\t}\n\t\tcout << hs[P] << ' ' << count(hs.begin(), hs.end(), hs[P]) << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint bin(int x,int y,char e)\n{\n  if(e == '+')\n    {\n      return x | y;\n    }\n  else if(e == '*')\n    {\n      return x & y;\n    }\n  else\n    {\n      return x ^ y;\n    }\n}\nint compute(const string &str,int a,int b,int c,int d){\n  \n  stack<int>s;\n  stack<char>op;\n  char e;\n  int x,y,z;\n  for(int i=0;i < str.size();i++)\n    {\n      if(str[i] == 'a')\n\t{\n\t  s.push(a);\n\t}\n      else if(str[i] == 'b')\n\t{\n\t  s.push(b);\n\t}\n      else if(str[i] == 'c')\n\t{\n\t  s.push(c);\n\t}\n      else if(str[i] == 'd')\n\t{\n\t  s.push(d);\n\t}\n      \n      if(str[i] == '+')\n\t{\n\t  op.push('+');\n\t}\n      else if(str[i] == '*')\n\t{\n\t  op.push('*');\n\t}\n      else if(str[i] == '^')\n\t{\n\t  op.push('^');\n\t}\n\n      if(str[i] == ']')\n\t{\n\t  e = op.top();\n\t  op.pop();\n\t  x = s.top();\n\t  s.pop();\n\t  y = s.top();\n\t  s.pop();\n\t  s.push(bin(x,y,e));\n\t}\n    }\n  return s.top();\n}\n\nint main(){\n  int n;\n  string str;\n  int cnt=0;\n\n  while(1){\n    cnt =0;\n    cin >> str;\n    if(str == \".\") break;\n    cin >> n;\n\n    int key = compute(str, n/1000, n/100%10, n/10%10, n%10 );\n    \n    for(int a=0;a < 10;a++){\n      for(int b=0;b < 10;b++){\n\tfor(int c=0;c < 10;c++){\n\t  for(int d=0;d < 10;d++){\n\t    if( compute(str,a,b,c,d) == key){\n\t      cnt++;\n\t    }\n\t  }//d\n\t}//c\n      }//b\n    }//a\n    cout << key << \" \" << cnt << endl;\n\n    \n  }// while\n  \n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <bitset>\n#include <map>\n#include <tuple>\n#include <unordered_set>\n#include <unordered_map>\n#include <list>\n#include <numeric>\n#include <utility>\n#include <iterator>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <random>\n#include <cstring>\n\n#define rep(i,n) for(int i=0;i<int(n);i++)\n#define all(x) (x).begin(),x.end()\n#define pb push_back\n\nusing namespace std;\nusing ll = long long;\n\nconst ll mod = 1000000007;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nint ddx[8]={-1,-1,0,1,1,1,0,-1};\nint ddy[8]={0,1,1,1,0,-1,-1,-1};\nbool debug=false;\n\n/*---------------------------------------------------*/\n\nbool is_operand(char c) {\n  if(c == '+' || c == '*' || c == '^') return true;\n  else return false;\n}\n\nint to_number(char num, int a, int b, int c, int d){\n  if(num == 'a') return a;\n  else if(num == 'b') return b;\n  else if(num == 'c') return c;\n  else if(num == 'd') return d;\n}\n\nint calc(int x, int y, char ope) {\n  if(ope == '+') return x | y;\n  else if(ope == '*') return x & y;\n  else if(ope == '^') return x ^ y;\n}\n\nint simulate(string S, int _a, int _b, int _c, int _d) {\n  stack<int> stk;\n  \n  for(int i = 0; i < S.size(); i++) {\n    char c = S[i];\n    if('a' <= c && c <= 'd') stk.push(to_number(c, _a, _b, _c, _d));\n    else if(is_operand(c)) {\n      int x = stk.top(); stk.pop();\n      int y = stk.top(); stk.pop();\n      stk.push(calc(x, y, c));\n    }\n  }\n  return stk.top();\n}\n\nvoid solve(string S, string P) {\n  int hash_number = simulate(S, P[0] - '0', P[1] - '0', P[2] - '0', P[3] - '0');\n\n  int hash_count = 0;\n  for(int a = 0; a < 10; a++) {\n    for(int b = 0; b < 10; b++) {\n      for(int c = 0; c < 10; c++) {\n\tfor(int d = 0; d < 10; d++) {\n\t  if(hash_number == simulate(S, a, b, c, d)) hash_count++;\n\t}\n      }\n    }\n  }\n  cout << hash_number << \" \" << hash_count << endl;\n}\n\nint main(){\n  string S, P;\n  while(cin >> S, S != \".\") {\n    cin >> P;\n    reverse(all(S));\n    solve(S, P);\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\n\nstring s;\nint a[4];\n\nint expr(string &s,int &p){\n  //cout<<s<<\":\"<<p<<endl;\n  if(isalpha(s[p])){\n    return a[s[p++]-'a'];\n  }\n  assert(s[p]=='[');\n  p++;\n  char op=s[p++];\n  int x=expr(s,p);\n  int y=expr(s,p);\n  assert(s[p]==']');\n  p++;\n  if(op=='+') return x|y;\n  if(op=='*') return x&y;\n  if(op=='^') return x^y;\n  assert(0);\n}\n\n\nsigned main(){\n  while(cin>>s,s!=\".\"){\n    string x;\n    cin>>x;\n    //cout<<s<<\":\"<<x<<endl;\n    int cnt[16]={};\n    for(a[0]=0;a[0]<10;a[0]++){\n      for(a[1]=0;a[1]<10;a[1]++){\n\tfor(a[2]=0;a[2]<10;a[2]++){\n\t  for(a[3]=0;a[3]<10;a[3]++){\n\t    int p=0;\n\t    cnt[expr(s,p)]++;\n\t  }\n\t}\n      }\n    }\n    for(int i=0;i<4;i++) a[i]=x[i]-'0';\n    int p=0;\n    int k=expr(s,p);\n    cout<<k<<\" \"<<cnt[k]<<endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint p,ans;\nstring s,t;\nmap<char,int>m;\nmap<int,int>cnt;\n\nint bnf();\n\nint get(){\n  int res;\n  if(s[p]=='[')p++,res=bnf(),p++;\n  else if(isalpha(s[p]))res=m[s[p++]];\n  return res;\n}\n\nint bnf(){\n  int res=get(),a,b;\n  while(s[p]=='+'||s[p]=='*'||s[p]=='^'){\n    int tmp=p++;\n    a=get();\n    b=get();\n    if(s[tmp]=='+')res=a|b;\n    if(s[tmp]=='*')res=a&b;\n    if(s[tmp]=='^')res=a^b;\n  }\n  return res;\n}\n\nvoid dfs(int d,string tt){\n  if(d==4){\n    p=0;\n    m['a']=tt[0]-'0';\n    m['b']=tt[1]-'0';\n    m['c']=tt[2]-'0';\n    m['d']=tt[3]-'0';\n    int x=bnf();\n    if(tt==t)ans=x;\n    cnt[x]++;\n    return;\n  }\n  r(i,10){\n    string pp=tt;\n    pp+=(i+'0');\n    dfs(d+1,pp);\n  }\n}\n\nint main(){\n  while(cin>>s,s!=\".\"){\n    cin>>t;\n    s+=\"@\";\n    cnt.clear();\n    dfs(0,\"\");\n    cout<<ans<<' '<<cnt[ans]<<endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<deque>\n#include<queue>\n#include<vector>\n#include<algorithm>\n#include<iostream>\n#include<set>\n#include<cmath>\n#include<tuple>\n#include<string>\n#include<chrono>\n#include<functional>\n#include<iterator>\n#include<random>\n#include<unordered_set>\n#include<array>\n#include<map>\n#include<iomanip>\n#include<assert.h>\n#include<bitset>\n#include<stack>\n#include<memory>\nusing namespace std;\nusing namespace std::chrono;\ntypedef long long int llint;\ntypedef double lldo;\n#define mp make_pair\n#define mt make_tuple\n#define pub push_back\n#define puf push_front\n#define pob pop_back\n#define pof pop_front\n#define fir first\n#define sec second\n#define res resize\n#define ins insert\n#define era erase\n/*cout<<fixed<<setprecision(20);cin.tie(0);ios::sync_with_stdio(false);*/\nconst llint mod=998244353;\nconst llint big=2.19e15+1;\nconst long double pai=3.141592653589793238462643383279502884197;\nconst long double eps=1e-15;\ntemplate <class T,class U>bool mineq(T& a,U b){if(a>b){a=b;return true;}return false;}\ntemplate <class T,class U>bool maxeq(T& a,U b){if(a<b){a=b;return true;}return false;}\nllint gcd(llint a,llint b){if(a%b==0){return b;}else return gcd(b,a%b);}\nllint lcm(llint a,llint b){if(a==0){return b;}return a/gcd(a,b)*b;}\ntemplate<class T> void SO(T& ve){sort(ve.begin(),ve.end());}\ntemplate<class T> void REV(T& ve){reverse(ve.begin(),ve.end());}\ntemplate<class T>llint LBI(vector<T>&ar,T in){return lower_bound(ar.begin(),ar.end(),in)-ar.begin();}\ntemplate<class T>llint UBI(vector<T>&ar,T in){return upper_bound(ar.begin(),ar.end(),in)-ar.begin();}\nint pass[4];\nint bas;\nstring S;\nint rrr(void){\n\tif(S[bas]=='a'){bas++;return pass[0];}\n\tif(S[bas]=='b'){bas++;return pass[1];}\n\tif(S[bas]=='c'){bas++;return pass[2];}\n\tif(S[bas]=='d'){bas++;return pass[3];}\n\t\n\t\tbas++;char op=S[bas];bas++;\n\t\tint x=rrr();\n\t\tint y=rrr();\n\t\tbas++;\n\t\tif(op=='+'){return x|y;}\n\t\tif(op=='*'){return x&y;}\n\t\tif(op=='^'){return x^y;}\n\t\n}\nbool  solve(void){\n\tcin>>S;\n\tif(S==\".\"){return false;}\n\tint aaa;cin>>aaa;\n\tbas=0;\n\tpass[3]=aaa%10;aaa/=10;\n\tpass[2]=aaa%10;aaa/=10;\n\tpass[1]=aaa%10;aaa/=10;\n\tpass[0]=aaa%10;aaa/=10;\n\tint myh=rrr();\n\tint ans=0;\n\tfor(int i=0;i<10000;i++){\n\t\taaa=i;\n\t\tpass[3]=aaa%10;aaa/=10;\n\t\tpass[2]=aaa%10;aaa/=10;\n\t\tpass[1]=aaa%10;aaa/=10;\n\t\tpass[0]=aaa%10;aaa/=10;\n\t\tbas=0;\n\t\tif(rrr()==myh){ans++;}\n\t}\n\tcout<<myh<<\" \"<<ans<<endl;\n\treturn true;\n}\nint main(void){\n\twhile(solve()){}\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include \"iostream\"\n#include \"climits\"\n#include \"list\"\n#include \"queue\"\n#include \"stack\"\n#include \"set\"\n#include \"functional\"\n#include \"algorithm\"\n#include \"string\"\n#include \"map\"\n#include \"unordered_map\"\n#include \"unordered_set\"\n#include \"iomanip\"\n#include \"cmath\"\n#include \"random\"\n#include \"bitset\"\n#include \"cstdio\"\n#include \"numeric\"\n#include \"cassert\"\n#include \"ctime\"\n\nusing namespace std;\n\nconstexpr long long int MOD = 1000000007;\n//constexpr int MOD = 1000000007;\n//constexpr int MOD = 998244353;\n//constexpr long long int MOD = 998244353;\nconstexpr double EPS = 1e-12;\n\n//int N, M, K, T, H, W, L, R;\nlong long int N, M, K, T, H, W, L, R;\n\nvoid func(vector<char>&op, vector<vector<int>>&edge, string &s, int& place , int node = 0) {\n\tif (s[place] == '+') {\n\t\top.push_back(s[place]);\n\t\tedge.push_back(vector<int>(2));\n\t}\n\tif (s[place] == '*') {\n\t\top.push_back(s[place]);\n\t\tedge.push_back(vector<int>(2));\n\t}\n\tif (s[place] == '^') {\n\t\top.push_back(s[place]);\n\t\tedge.push_back(vector<int>(2));\n\t}\n\tplace++;\n\tfor (int loop = 0; loop < 2; loop++) {\n\t\tif (s[place] == '[') {\n\t\t\tedge[node][loop] = edge.size();\n\t\t\tplace++;\n\t\t\tfunc(op, edge, s, place, edge.size());\n\t\t}\n\t\telse {\n\t\t\tedge[node][loop] = s[place] - 'e';\n\t\t\tplace++;\n\t\t}\n\t}\n\tif (s[place] == ']') {\n\t\tplace++;\n\t\treturn;\n\t}\n}\n\nint ans(vector<char>&op, vector<vector<int>>&edge,vector<int>&num, int node=0) {\n\tint a, b;\n\tif (edge[node][0] < 0) {\n\t\ta = num[-edge[node][0]];\n\t}\n\telse {\n\t\ta = ans(op, edge, num, edge[node][0]);\n\t}\n\tif (edge[node][1] < 0) {\n\t\tb = num[-edge[node][1]];\n\t}\n\telse {\n\t\tb = ans(op, edge, num, edge[node][1]);\n\t}\n\tif (op[node] == '+')return a | b;\n\tif (op[node] == '*')return a & b;\n\treturn a ^ b;\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tstring s;\n\twhile (cin >> s, s != \".\") {\n\t\tcin >> N;\n\t\tvector<int>v(10000);\n\t\tif (s.size() == 1) {\n\t\t\tif (s[0]=='a')cout << N / 1000;\n\t\t\tif (s[0] == 'b')cout << (N / 100) % 10;\n\t\t\tif (s[0] == 'c')cout << (N / 10) % 10;\n\t\t\tif (s[0] == 'd')cout << (N / 1) % 10;\n\t\t\tcout << \" \" << 1000 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\ts.erase(s.begin());\n\t\tvector<char>op;\n\t\tvector<vector<int>>edge;\n\t\tint cnt = 0;\n\t\tfunc(op, edge, s, cnt);\n\t\tfor (int i = 0; i < 10000; i++) {\n\t\t\tint box = i;\n\t\t\tvector<int>num(5);\n\t\t\tfor (int j = 1; j <= 4; j++) {\n\t\t\t\tnum[j] = box % 10;\n\t\t\t\tbox /= 10;\n\t\t\t}\n\t\t\tv[i] = ans(op, edge, num);\n\t\t}\n\t\tint ret = 0;\n\t\tfor (int i = 0; i < 10000; i++)ret += v[N] == v[i];\n\t\tcout << v[N] << \" \" << ret << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint pos;\nint a,b,c,d;\nstring s;\n\nint Hash(void){\n\tint ret;\n\tif(s[pos]=='['){\n\t\t++pos;\n\t\tint L,R;\n\t\tif(s[pos]=='+'){\n\t\t\t++pos;\n\t\t\tL=Hash();\tR=Hash();\n\t\t\tret=L|R;\n\t\t}else if(s[pos]=='*'){\n\t\t\t++pos;\n\t\t\tL=Hash();\tR=Hash();\n\t\t\tret=L&R;\n\t\t}else if(s[pos]=='^'){\n\t\t\t++pos;\n\t\t\tL=Hash();\tR=Hash();\n\t\t\tret=L^R;\n\t\t}\n\n\t\t++pos;\n\t\treturn ret;\n\t}\n\n\tif(s[pos]=='a')ret=a;\n\tif(s[pos]=='b')ret=b;\n\tif(s[pos]=='c')ret=c;\n\tif(s[pos]=='d')ret=d;\n\n\t++pos;\n\treturn ret;\n}\n\nint main(){\n\twhile(1){\n\t\tcin>>s;\t\tif(s==\".\")break;\n\t\tstring p;\tcin>>p;\n\t\ta=p[0]-'0';\n\t\tb=p[1]-'0';\n\t\tc=p[2]-'0';\n\t\td=p[3]-'0';\n\n\t\tpos=0;\n\t\tint H=Hash();\n\n\t\tint ans=0;\n\t\tfor(int i=0; i<10000; i++){\n\t\t\ta=i/1000;\n\t\t\tb=(i%1000)/100;\n\t\t\tc=(i%100)/10;\n\t\t\td=i%10;\n\n\t\t\tpos=0;\n\t\t\tif(H==Hash())ans++;\n\t\t}\n\n\t\tprintf(\"%d %d\\n\",H,ans);\n\t}\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\n#define NUM 81\n\nchar equation[NUM],buf[5];\nint value[4];\n\nint getNUM(char ch){\n\treturn ch - 'a';\n}\n\nint calc_Hash(int left,int right){\n\n\tif(equation[left] != '['){ //letter\n\t\treturn value[getNUM(equation[left])];\n\t}\n\n\t//[カッコ]で囲まれている場合\n\n\tchar op = equation[left+1];\n\tint left_value,right_value,ret;\n\n\tif(equation[left+2] == '['){\n\n\t\tint depth = 0;\n\t\tint close_pos;\n\n\t\tfor(int i = left+2; i <= right; i++){\n\n\t\t\tif(equation[i] == '['){\n\n\t\t\t\tdepth++;\n\n\t\t\t}else if(equation[i] == ']'){\n\n\t\t\t\tdepth--;\n\n\t\t\t\tif(depth == 0){\n\n\t\t\t\t\tclose_pos = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tleft_value = calc_Hash(left+2,close_pos);\n\t\tright_value = calc_Hash(close_pos+1,right-1);\n\n\t}else{ //equation[left+2] == letter\n\n\t\tleft_value = calc_Hash(left+2,left+2);\n\t\tright_value = calc_Hash(left+3,right-1);\n\t}\n\n\tswitch(op){\n\tcase '+':\n\t\tret = left_value|right_value;\n\t\tbreak;\n\tcase '*':\n\t\tret = left_value&right_value;\n\t\tbreak;\n\tcase '^':\n\t\tret = left_value^right_value;\n\t\tbreak;\n\t}\n\n\treturn ret;\n}\n\nvoid func(){\n\n\tscanf(\"%s\",buf);\n\n\tfor(int i = 0; i < 4; i++){\n\n\t\tvalue[i] = buf[i]-'0';\n\t}\n\n\tint length;\n\n\tfor(length = 0; equation[length] != '\\0'; length++);\n\n\tint first_value = calc_Hash(0,length-1);\n\tint count = 0;\n\n\tfor(int a = 0; a <= 9; a++){\n\t\tfor(int b = 0; b <= 9; b++){\n\t\t\tfor(int c = 0; c <= 9; c++){\n\t\t\t\tfor(int d = 0; d <= 9; d++){\n\n\t\t\t\t\tvalue[0] = a;\n\t\t\t\t\tvalue[1] = b;\n\t\t\t\t\tvalue[2] = c;\n\t\t\t\t\tvalue[3] = d;\n\n\t\t\t\t\tif(calc_Hash(0,length-1) == first_value){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%d %d\\n\",first_value,count);\n}\n\nint main(){\n\n\twhile(true){\n\t\tscanf(\"%s\",equation);\n\t\tif(equation[0] == '.')break;\n\n\t\tfunc();\n\t}\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "/*  -*- coding: utf-8 -*-\n *\n * 2883.cc: Proof of Knowledge\n */\n\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<stack>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\nconst int N = 4;\nconst char opcs[] = \"abcd+*^\";\n\n/* typedef */\n\nenum { OP_A, OP_B, OP_C, OP_D, OP_OR, OP_AND, OP_XOR };\n\nstruct Node {\n  int op;\n  Node *lpt, *rpt;\n  Node() {}\n\n  int calc(int ps[]) {\n    if (op >= OP_A && op <= OP_D) return ps[op];\n    int c0 = lpt->calc(ps), c1 = rpt->calc(ps), r;\n    switch (op) {\n    case OP_OR:  r = (c0 | c1); break;\n    case OP_AND: r = (c0 & c1); break;\n    case OP_XOR: r = (c0 ^ c1); break;\n    }\n    return r;\n  }\n\n  void print(int *ps = NULL) {\n    if (op >= OP_A && op <= OP_D) {\n      if (ps != NULL) printf(\"%d\", ps[op]);\n      else putchar('a' + op);\n    }\n    else {\n      putchar('(');\n      lpt->print(ps);\n      putchar(opcs[op]);\n      rpt->print(ps);\n      putchar(')');\n    }\n  }\n};\n\n/* global variables */\n\nchar cmap[256];\nchar se[84], sp[6];\nint ps[N], qs[N];\nNode buf[80], *bpt;\n\n/* subroutines */\n\nNode *parse(char *(&cpt)) {\n  Node *npt = bpt++;\n  char c = *(cpt++);\n  if (c == '[') {\n    npt->op = cmap[*(cpt++)];\n    npt->lpt = parse(cpt);\n    npt->rpt = parse(cpt);\n    cpt++; // ']'\n  }\n  else\n    npt->op = cmap[c], npt->lpt = npt->rpt = NULL;\n  return npt;\n}\n\n/* main */\n\nint main() {\n  for (int i = 0; opcs[i]; i++) cmap[opcs[i]] = i;\n\n  while (scanf(\"%s\", se) == 1 && se[0] != '.') {\n    scanf(\"%s\", sp);\n    for (int i = 0; i < N; i++) qs[i] = sp[i] - '0';\n\n    bpt = buf;\n    char *cpt = se;\n    Node *exp = parse(cpt);\n    //exp->print(); putchar('\\n');\n\n    int qh = exp->calc(qs);\n    //exp->print(qs); printf(\"=%d\\n\", qh);\n\n    memset(ps, 0, sizeof(ps));\n    int cnt = 0;\n\n    for (;;) {\n      int ph = exp->calc(ps);\n      if (ph == qh) cnt++;\n\n      int k = 0;\n      while (k < N) {\n\tif (++ps[k] < 10) break;\n\tps[k++] = 0;\n      }\n      if (k >= N) break;\n    }\n\n    printf(\"%d %d\\n\", qh, cnt);\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "//#include <bits/stdc++.h>\n//#include <stdio.h>\n#include<iostream>\n#include<cstdio>\n#include<bitset>\n#include<algorithm>\n#include<vector>\n#include<list>\n#include<queue>\n#include<stack>\n#include<string>\n#include<string.h>\n#include<cmath>\n#include<utility>\n#include<functional>\n#include<map>\n#include<set>\n#include<cctype>\n#include<fstream>\n\n\n#define FOR(i, a, b) for( int i=(a);i<=(b);i++)\n#define RFOR(i, a, b) for( int i=(a);i>=(b);i--)\n#define LFOR(i, a, b) for( long long int i=(a);i<=(b);i++)\n#define LRFOR(i, a, b) for(long long int i=(a);i>=(b);i--)\n#define MOD 1000000007\n#define INF 600000000 //2000000000\n#define LINF 1000000000000000000 //9000000000000000000 大きいとワ―シャルフロイドでオーバーフローを起こす\n#define PI 3.14159265358979\n#define MAXI 7500000\n\nusing namespace std;\ntypedef long long int ll;\ntypedef pair< long long int, long long  int> P;\n\nint dy[5] = { 0,0,1,-1,0 };\nint dx[5] = { 1,-1,0,0,0 };\n\n\nint main(void) {\n\t\n\twhile (1) {\n\t\tstring s;\n\t\tint p;\n\t\tint hash;\n\t\tint count = 0;\n\n\t\tcin >> s;\n\t\tif (s == \".\") {\n\t\t\tbreak;\n\t\t}\n\t\tcin >> p;\n\n\t\tint a, b, c, d;\n\n\t\td = p % 10;\n\t\tp /= 10;\n\t\tc = p % 10;\n\t\tp /= 10;\n\t\tb = p % 10;\n\t\tp /= 10;\n\t\ta = p % 10;\n\n\t\tstack<char> sta;\n\t\tstack<int> num;\n\t\tchar first, second, op;\n\t\tint front, back;\n\n\t\tFOR(i, 0, s.size() - 1) {\n\t\t\tif (s[i] != ']') {\n\t\t\t\tsta.push(s[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsecond = sta.top();\n\t\t\t\tsta.pop();\n\t\t\t\tfirst = sta.top();\n\t\t\t\tsta.pop();\n\t\t\t\top = sta.top();\n\t\t\t\tsta.pop();\n\t\t\t\tsta.pop();\n\n\t\t\t\tswitch (first) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tfront = a;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b':\n\t\t\t\t\tfront = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tfront = c;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'd':\n\t\t\t\t\tfront = d;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'e':\n\t\t\t\t\tfront = num.top();\n\t\t\t\t\tnum.pop();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch (second) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tback = a;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b':\n\t\t\t\t\tback = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tback = c;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'd':\n\t\t\t\t\tback = d;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'e':\n\t\t\t\t\tback = num.top();\n\t\t\t\t\tnum.pop();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch (op) {\n\t\t\t\tcase '+':\n\t\t\t\t\tnum.push(front | back);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '*':\n\t\t\t\t\tnum.push(front&back);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '^':\n\t\t\t\t\tnum.push(front^back);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsta.push('e');\n\t\t\t}\n\t\t}\n\n\t\tswitch (sta.top()) {\n\t\tcase 'a':\n\t\t\thash = a;\n\t\t\tbreak;\n\t\tcase 'b':\n\t\t\thash = b;\n\t\t\tbreak;\n\t\tcase 'c':\n\t\t\thash = c;\n\t\t\tbreak;\n\t\tcase 'd':\n\t\t\thash = d;\n\t\t\tbreak;\n\t\tcase 'e':\n\t\t\thash = num.top();\n\t\t\tnum.pop();\n\t\t\tbreak;\n\t\t}\n\n\t\tint now;\n\n\t\tFOR(aa, 0, 9) {\n\t\t\tFOR(bb, 0, 9) {\n\t\t\t\tFOR(cc, 0, 9) {\n\t\t\t\t\tFOR(dd, 0, 9) {\n\t\t\t\t\t\tstack<char> st;\n\t\t\t\t\t\tstack<int>nu;\n\t\t\t\t\t\tFOR(i, 0, s.size() - 1) {\n\t\t\t\t\t\t\tif (s[i] != ']') {\n\t\t\t\t\t\t\t\tst.push(s[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsecond = st.top();\n\t\t\t\t\t\t\t\tst.pop();\n\t\t\t\t\t\t\t\tfirst = st.top();\n\t\t\t\t\t\t\t\tst.pop();\n\t\t\t\t\t\t\t\top = st.top();\n\t\t\t\t\t\t\t\tst.pop();\n\t\t\t\t\t\t\t\tst.pop();\n\n\t\t\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\t\t\tfront = aa;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\t\t\tfront = bb;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\t\tfront = cc;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\t\tfront = dd;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'e':\n\t\t\t\t\t\t\t\t\tfront = nu.top();\n\t\t\t\t\t\t\t\t\tnu.pop();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\t\t\tback = aa;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\t\t\tback = bb;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\t\tback = cc;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\t\tback = dd;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'e':\n\t\t\t\t\t\t\t\t\tback = nu.top();\n\t\t\t\t\t\t\t\t\tnu.pop();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tswitch (op) {\n\t\t\t\t\t\t\t\tcase '+':\n\t\t\t\t\t\t\t\t\tnu.push(front | back);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\t\t\tnu.push(front&back);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '^':\n\t\t\t\t\t\t\t\t\tnu.push(front^back);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tst.push('e');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (st.top()) {\n\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\tnow = aa;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tnow = bb;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tnow = cc;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\tnow = dd;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'e':\n\t\t\t\t\t\t\tnow = nu.top();\n\t\t\t\t\t\t\tnu.pop();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (now == hash) {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout << hash << \" \" << count << endl;\n\n\n\t}\n\n\n\n\t\n\t\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\npair<int, int> solve(string s, string p, int l) {\n    if(s[l] == '[') {\n//        cerr << \"op:\" << l << '\\n';\n        l++;\n        char op = s[l];\n\n        auto r = solve(s, p, l + 1);\n        auto ret = solve(s, p, r.second);\n        int ans;\n        if(op == '+'){\n            ans = r.first | ret.first;\n        }\n        else if(op == '*') {\n            ans = r.first & ret.first;\n        }\n        else if(op == '^') {\n            ans = r.first ^ ret.first;\n        }\n        else {\n            cerr << \"??????\\n\";\n        }\n        return {ans, ret.second+1};\n    }\n    else {\n//        cerr << \"LT: \" << l << '\\n';\n        return {p[s[l] - 'a'] - '0', l+1};\n    }\n}\n\nstring to_str(int k){\n    string ans{\"0000\"};\n    for (int i = 0; i < 4; ++i) {\n        ans[3-i] = k % 10 + '0';\n        k /= 10;\n    }\n    return ans;\n}\n\nint count(string s, int k){\n    int c = 0;\n    for (int i = 0; i < 10000; ++i) {\n        string p = to_str(i);\n        if(k == solve(s, p, 0).first){\n            c++;\n        }\n    }\n    return c;\n}\n\nint main(){\n    string s,p;\n    while(1){\n        cin >> s;\n        if(s == \".\") return 0;\n        cin >> p;\n        int ans = solve(s, p, 0).first;\n        int c = count(s, ans);\n        cout << ans << ' ' << c << '\\n';\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<stack>\n#include<algorithm>\nusing namespace std;\n#define inRange(x,a,b) (a <= x && x <= b)\n\nint fun(string s, string t){\n    int n = s.length();\n    stack<int> x;\n    for(int i = 0; i < n; i++){\n        if(s[i] == '[' || s[i] == ']')  continue;\n        if(inRange(s[i], 'a', 'd')){\n            x.push(t[s[i]-'a']-'0');\n            continue;\n        }\n        int j = x.top(); x.pop();\n        int k = x.top(); x.pop();\n        if(s[i] == '+'){\n            x.push(j|k);\n        }else if(s[i] == '*'){\n            x.push(j&k);\n        }else if(s[i] == '^'){\n            x.push(j^k);\n        }\n    }\n    return x.top();\n}\n\nint main(){\n    string s, p;\n    while(cin >> s, s != \".\"){\n        reverse(s.begin(), s.end());\n        cin >> p;\n        int h = fun(s, p);\n        int cnt = 0;\n        for(int i = 0; i <= 9999; i++){\n            string t = to_string(i);\n            while(t.size() < 4) t = \"0\" + t;\n            if(fun(s, t) == h)    cnt++;\n        }\n        cout << h << \" \" << cnt << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <stack>\n\nusing namespace std;\n\nstring s, t;\nint p;\n\nint calc(int p)\n{\n\tint x[4];\n\tfor(int i = 3; i >= 0; i--){\n\t\tx[i] = p % 10;\n\t\tp /= 10;\n\t}\n\t\n\tstack<int> stk;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tif(s[i] == '[' || s[i] == ']') continue;\n\t\tif(s[i] == 'a'){\n\t\t\tstk.push(x[0]);\n\t\t\tcontinue;\n\t\t}\n\t\tif(s[i] == 'b'){\n\t\t\tstk.push(x[1]);\n\t\t\tcontinue;\n\t\t}\n\t\tif(s[i] == 'c'){\n\t\t\tstk.push(x[2]);\n\t\t\tcontinue;\n\t\t}\n\t\tif(s[i] == 'd'){\n\t\t\tstk.push(x[3]);\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tint op1 = stk.top(); stk.pop();\n\t\tint op2 = stk.top(); stk.pop();\n\t\tif(s[i] == '+') stk.push(op1|op2);\n\t\tif(s[i] == '*') stk.push(op1&op2);\n\t\tif(s[i] == '^') stk.push(op1^op2);\n\t}\n\treturn stk.top();\n}\n\nint main(void)\n{\n\twhile(1){\n\t\tcin >> s;\n\t\tif(s == \".\") break;\n\t\tcin >> p;\n\t\t\n\t\treverse(s.begin(), s.end());\n\t\tint val = calc(p);\n\t\t\n\t\tint ans = 0;\n\t\tfor(int i = 0; i < 10000; i++){\n\t\t\tif(val == calc(i)) ans++;\n\t\t}\n\t\tcout << val << \" \" << ans << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nunsigned int get(unsigned int k,char c){\n\tfor(char i='d';i>c;i--)\n\t\tif(i!=c)k/=10;\n\treturn k%10;\n}\nchar* skip(char *s){\n\tint cnt=0;\n\twhile(1){\n\t\tif(*s=='[')cnt++;\n\t\tif(*s==']')cnt--;\n\t\tif(cnt==0)break;\n\t\ts++;\n\t}\n\ts++;\n\treturn s;\n}\nunsigned int f(char *s,unsigned int k){\n\tif(*s=='['){\n\t\tchar *s1=s+2;\n\t\tchar *s2=skip(s1);\n\t\tunsigned int l=f(s1,k),r=f(s2,k);\n\t\tif(s[1]=='+')\n\t\t\treturn l|r;\n\t\telse if(s[1]=='*')\n\t\t\treturn l&r;\n\t\telse return l^r;\n\t}else return get(k,*s);\n}\nint main(){\n\tchar s[255];\n\twhile(scanf(\" %s\",s),s[0]!='.'){\n\t\tunsigned int k;\n\t\tscanf(\"%u\",&k);\n\t\tunsigned int hk=f(s,k),cnt=0;\n\t\tfor(unsigned int i=0;i<=9999;i++){\n\t\t\tunsigned int hi=f(s,i);\n\t\t\tif(hk==hi)cnt++;\n\t\t}\n\t\tprintf(\"%u %u\\n\",hk,cnt);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nclass Solve {\nprivate:\n\tstd::string hashFunc;\n\tint password[4]{}, hash_value;\n\n\tint calcHash(int& s_i)\n\t{\n\t\tint ret{};\n\t\tif (hashFunc[s_i] == '[')\n\t\t{\n\t\t\ts_i++;\n\t\t\tchar ope{hashFunc[s_i]};\n\t\t\ts_i++;\n\t\t\tint lhs{calcHash(s_i)};\n\t\t\tint rhs{calcHash(s_i)};\n\t\t\tif (ope == '+') ret =  lhs | rhs;\n\t\t\telse if (ope == '^') ret =  lhs ^ rhs;\n\t\t\telse ret = lhs & rhs;\n\t\t\ts_i++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret = password[hashFunc[s_i] - 'a'];\n\t\t\ts_i++;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tint rc(int index)\n\t{\n\t\tif (index == 4)\n\t\t{\n\t\t\tint s_i{};\n\t\t\treturn calcHash(s_i) == hash_value;\n\t\t}\n\t\tint ret{};\n\t\tfor (int i{}; i < 10; i++)\n\t\t{\n\t\t\tpassword[index] = i;\n\t\t\tret += rc(index + 1);\n\t\t}\n\t\treturn ret;\n\t}\n\npublic:\n\tbool is_last_query{};\n\tSolve()\n\t{\n\t\tstd::cin >> hashFunc;\n\t\tif (hashFunc == \".\")\n\t\t{\n\t\t\tis_last_query = true;\n\t\t\treturn;\n\t\t}\n\t\tfor (int i{}; i < 4; i++)\n\t\t{\n\t\t\tchar tmp;\n\t\t\tscanf(\" %c\", &tmp);\n\t\t\tpassword[i] = tmp - '0';\n\t\t}\n\t\tint s_i{};\n\t\thash_value = calcHash(s_i);\n\t\tprintf(\"%d %d\\n\", hash_value, rc(0));\n\t}\n};\n\nint main()\n{\n\twhile (!Solve().is_last_query);\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ll long long\n#define fi first\n#define se second\n#define pb push_back\n#define rep(i, s, n) for (int i = s; i < n; i++)\n#define rrep(i, s, n) for (int i = (n)-1; i >= (s); i--)\n#define REP(i,n) for(int i = 0;i < n; i++)\n#define all(a) a.begin(),a.end()\ntypedef pair<int,int>pint;\ntypedef vector<int>vint;\ntypedef vector<pint>vpint;\nconst long long MOD = 1000000007, INF = 1e18;\n \n#define endl '\\n'\n#define IOS() ios_base::sync_with_stdio(0);cin.tie(0)\n \ntemplate<class T>inline bool chmax(T& a,T b){if(a<b){a=b;return true;}return false;}\ntemplate<class T>inline bool chmin(T& a,T b){if(a>b){a=b;return true;}return false;}\ntemplate<typename T>vector<T>\nmake_v(size_t a){return vector<T>(a);}\ntemplate<typename T,typename... Ts>\nauto make_v(size_t a,Ts... ts){\n\treturn vector<decltype(make_v<T>(ts...))>(a,make_v<T>(ts...));\n}\n \ntemplate<typename T,typename V>\ntypename enable_if<is_class<T>::value==0>::type\nfill_v(T &t,const V &v){t=v;}\n \ntemplate<typename T,typename V>\ntypename enable_if<is_class<T>::value!=0>::type\nfill_v(T &t,const V &v){\n\tfor(auto &e:t) fill_v(e,v);\n}\n\nstring s,t;\nmap<char,int>mp;\nint now;\n\nint dfs(){\n\tif('a'<=s[now]&&s[now]<='d'){\n\t\tnow++;\n\t\treturn t[mp[s[now-1]]]-'0';\n\t}\n\tint ret = 0;\n\tnow++;\n\tint kigou = mp[s[now]];\n\tnow++;\n\tint a = dfs();\n\tint b = dfs();\n\tif(kigou==0)ret = a|b;\n\telse if(kigou==1)ret = a&b;\n\telse ret = a^b;\n\tnow++;\n\treturn ret;\n}\n\n\npair<int,int>solve(){\n\tnow = 0;\n\tint hash = dfs();\n\tint cnt = 0;\n\trep(i,0,10){\n\t\trep(j,0,10){\n\t\t\trep(k,0,10){\n\t\t\t\trep(l,0,10){\n\t\t\t\t\tt=\"\";\n\t\t\t\t\tt+=i+'0';\n\t\t\t\t\tt+=j+'0';\n\t\t\t\t\tt+=k+'0';\n\t\t\t\t\tt+=l+'0';\n\t\t\t\t\tnow=0;\n\t\t\t\t\tint gethash = dfs();\n\t\t\t\t\tif(gethash==hash)cnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn {hash,cnt};\n}\n \nsigned main(){\n\tIOS();\n\tvector<pair<int,int>>ans;\n\trep(i,0,4)mp['a'+i]=i;\n\tmp['+']=0;\n\tmp['*']=1;\n\tmp['^']=2;\n\twhile(1){\n\t\tcin>>s;\n\t\tif(s==\".\")break;\n\t\tcin>>t;\n\t\tans.push_back(solve());\n\t}\n\tfor(auto e:ans){\n\t\tcout<<e.fi<<\" \"<<e.se<<endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\nusing namespace std;\n#define int long long \n#define rep(i,a,b) for(int i=a;i<(b);i++)\nusing VI=vector<int>;\nusing VVI=vector<VI>;\nusing pii=pair<int, int>;\n#define DBG 0\n\n\nint _calc(string hash, int& idx) {\n\tif (isdigit(hash[idx])) {\n\t\treturn hash[idx] - '0';\n\t}\n\telse if (hash[idx] == '[') {\n\t\tidx++;\n\t\tchar op = hash[idx];\n\t\tidx++;\n\t\tint l = _calc(hash, idx);\n\t\tidx++;\n\t\tint r = _calc(hash, idx);\n\t\tidx++;\n\t\tint ret;\n\t\tif (op == '+') {\n\t\t\tret = l | r;\n\t\t}\n\t\telse if (op == '*') {\n\t\t\tret = l & r;\n\t\t}\n\t\telse {\n\t\t\tret = l ^ r;\n\t\t}\n\t\treturn ret;\n\t}\n\telse {\n\t\tassert(0);\n\t}\n}\n\nint calc(string hash, string pw) {\n\n\trep(i, 0, hash.size()) {\n\t\tif ('a' <= hash[i] and hash[i] <= 'd') {\n\t\t\thash[i] = pw[hash[i] - 'a'];\n\t\t}\n\t}\n\tint idx = 0;\n\treturn _calc(hash, idx);\n\n}\n\nvoid solve(string hash) {\n\tstring pw; cin >> pw;\n\n\tmap<int, int>mp;\n\trep(i, 0, 10000) {\n\t\tstring in = to_string(i);\n\t\treverse(in.begin(), in.end());\n\t\twhile (in.size() < 4) {\n\t\t\tin.push_back('0');\n\t\t}\n\t\treverse(in.begin(), in.end());\n\t\tint h = calc(hash, in);\n\t\tif (DBG) {\n\t\t\tassert(i == stoi(in));\n\t\t\tif (h != 0) {\n\t\t\t\tcout << \"i:\" << i << \", in:\" << in << \", h:\" << h << endl;\n\t\t\t}\n\t\t}\n\t\tmp[h]++;\n\t}\n\n\tcout << calc(hash, pw) << \" \" << mp[calc(hash, pw)] << endl;\n}\n\nsigned main(void) {\n\twhile (1) {\n\t\tstring hash;\n\t\tcin >> hash;\n\t\tif (hash == \".\")break;\n\t\tsolve(hash);\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring s, p;\nvector<int> v;\n\npair<int,int> read(int l){\n    if(s[l] >= 'a' && s[l] <= 'd'){\n        return make_pair(l + 1, v[s[l] - 'a']);\n    }\n    assert(s[l] == '[');\n    ++l;\n    char op = s[l];\n    auto p_l = read(l + 1);\n    auto p_r = read(p_l.first);\n    if(op == '+')\n        return make_pair(p_r.first + 1, p_l.second | p_r.second);\n    if(op == '*')\n        return make_pair(p_r.first + 1, p_l.second & p_r.second);\n    if(op == '^')\n        return make_pair(p_r.first + 1, p_l.second ^ p_r.second);\n\n    assert(0);\n}\n\nbool solve(){\n    cin >> s;\n    if(s == \".\")\n        return false;\n    cin >> p;\n    v.assign(4, 0);\n    \n    map<int,int> m;\n    \n    for(int i = 0; i <= 9999; ++i){\n        int t = i;\n        for(int j = 0; j < 4; ++j){\n            v[j] = t % 10;\n            t /= 10;\n        }\n        auto ret = read(0);\n        ++m[ret.second];\n    }\n    \n    for(int i = 0; i < 4; ++i)\n        v[i] = p[i] - '0';\n    int val = read(0).second;\n    cout << val << \" \"  << m[val] << endl;\n    \n    return true;\n}\n\nint main(){\n    \n    while(solve());\n    \n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\n\nint id = 0;\nstring s;\n\nint hhash(string p){\n    int ret = -1;\n    if(s[id] == '['){\n        id++;\n        switch(s[id++]){\n        case '+':\n            ret = hhash(p) | hhash(p);\n            break;\n        case '*':\n            ret = hhash(p) & hhash(p);\n            break;\n        case '^':\n            ret = hhash(p) ^ hhash(p);\n            break;\n        }\n    }else{\n        ret = p[s[id]-'a'] - '0';\n    }\n    id++;\n    // cout << id << \" \" << ret << endl;\n    return ret;\n}\n\nint main(){\n    cin >> s;\n    while(s != \".\"){\n        string p;\n        cin >> p;\n        int ans = 0;\n        id = 0;\n        int enc = hhash(p);\n        for(int i=0; i<10000; i++){\n            string t = \"\";\n            for(int j=1; j<10000; j*=10){\n                t += (i/j)%10 + '0';\n            }\n            reverse(t.begin(), t.end());\n            id = 0;\n            if(hhash(t) == enc) ans++;\n        }\n        cout << enc << \" \" << ans << endl;\n        cin >> s;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <vector>\n#include <utility>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <cmath>\n#include <iomanip>\n#include <numeric>\n\n#define rep(i,j,k) for(int i=(int)j;i<(int)k;i++)\n#define itrep(i,x) for(auto i=(x).begin(); i!=(x).end();i++)\n#define Sort(x) sort((x).begin(),(x).end())\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define vec vector\n#define INF (int)1e9\n#define INFL 1e18\n#define MOD 1000000007\n#define pb push_back\n#define MP make_pair\n#define PI 3.1415926535\n#define fcout cout<<fixed<<setprecision(10)\ntypedef long long int ll;\ntypedef std::pair<int,int> P;\nint D=1;\nint dx[4]={0,1,0,-1},dy[4]={-1,0,1,0};\nint day[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n//template<typename T>void pp(T x){cout<<x<<endl;}\n\nusing namespace std;\ntemplate<typename T> void test(vector<T> v){for(int i=0;i<v.size();i++){if(i)cout<<\" \";cout<<v[i];}cout<<endl;}\n\nint andd(int x,int y){\n    int ret=0;\n    rep(i,0,4){\n        ret+=pow(2,i)*((x%2)&&(y%2));\n        x/=2; y/=2;\n    }\n    return ret;\n}\n\nint orr(int x,int y){\n    int ret=0;\n    rep(i,0,4){\n        ret+=pow(2,i)*((x%2)||(y%2));\n        x/=2; y/=2;\n    }\n    return ret;\n\n}\n\nint hashh(string s,string ss){\n    stack<int> st;\n    int a,b,c,d;\n    d=ss[3]-'0'; c=ss[2]-'0'; b=ss[1]-'0'; a=ss[0]-'0';\n    reverse(all(s));\n    rep(i,0,s.size()){\n        if(s[i]=='a')st.push(a);\n        else if(s[i]=='b')st.push(b);\n        else if(s[i]=='c')st.push(c);\n        else if(s[i]=='d')st.push(d);\n        else if(s[i]=='+'){\n            int x=st.top();\n            st.pop();\n            int y=st.top();\n            st.pop();\n            st.push(orr(x,y));\n        }else if(s[i]=='*'){\n            int x=st.top();\n            st.pop();\n            int y=st.top();\n            st.pop();\n            st.push(andd(x,y));\n        }else if(s[i]=='^'){\n            int x=st.top();\n            st.pop();\n            int y=st.top();\n            st.pop();\n            st.push(x^y);\n        }\n    }\n    return st.top();\n}\nint main(){\n    string s;\n    while(cin>>s&&s!=\".\"){\n        string ss;\n        cin>>ss;\n        int ans=hashh(s,ss);\n        cout<<ans<<\" \";\n        ss=\"0000\";\n        int ct=0;\n        rep(i,0,10)rep(j,0,10)rep(k,0,10)rep(l,0,10){\n            ss[0]='0'+i;\n            ss[1]='0'+j;\n            ss[2]='0'+k;\n            ss[3]='0'+l;\n            if(ans==hashh(s,ss)){\n                ct++;\n            }\n        }\n        cout<<ct<<endl;\n    }\n    return 0;\n} \n"
  },
  {
    "language": "C++",
    "code": "#define  _CRT_SECURE_NO_WARNINGS\n#pragma comment (linker, \"/STACK:526000000\")\n\n#include \"bits/stdc++.h\"\n\nusing namespace std;\ntypedef string::const_iterator State;\n#define eps 1e-11L\n#define MAX_MOD 1000000007LL\n#define GYAKU 500000004LL\n\n#define MOD 998244353LL\n#define seg_size 262144 * 4LL\n#define pb push_back\n#define mp make_pair\ntypedef long long ll;\n#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))\n#define ALL(x) (x).begin(),(x).end()\n\nunsigned long xor128() {\n\tstatic unsigned long x = 123456789, y = 362436069, z = 521288629, w = time(NULL);\n\tunsigned long t = (x ^ (x << 11));\n\tx = y; y = z; z = w;\n\treturn (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)));\n}\nvoid init() {\n\tiostream::sync_with_stdio(false);\n\tcout << fixed << setprecision(20);\n}\n\n#define int ll\n\nint go[4] = {};\n\nint find(State &a) {\n\tif (*a == '[') {\n\t\ta++;\n\t\tint b = 0;\n\t\tif (*a == '+') {\n\t\t\tb = 0;\n\t\t}\n\t\telse if (*a == '*') {\n\t\t\tb = 1;\n\t\t}\n\t\telse if (*a == '^') {\n\t\t\tb = 2;\n\t\t}\n\t\ta++;\n\t\tint c = find(a);\n\t\tint d = find(a);\n\t\tif (b == 0) {\n\t\t\tc |= d;\n\t\t}\n\t\telse if (b == 1) {\n\t\t\tc &= d;\n\t\t}\n\t\telse {\n\t\t\tc ^= d;\n\t\t}\n\t\ta++;\n\t\treturn c;\n\t}\n\telse {\n\t\tint hoge = go[*a - 'a'];\n\t\ta++;\n\t\treturn hoge;\n\t}\n}\n\nvoid solve(){\n\twhile (true) {\n\t\tstring a;\n\t\tcin >> a;\n\t\tif (a == \".\") return;\n\t\tint ans[10000] = {};\n\t\tfor (int i = 0; i < 10000; ++i) {\n\t\t\tint now = i;\n\t\t\tREP(q, 4) {\n\t\t\t\tgo[3-q] = now % 10;\n\t\t\t\tnow /= 10;\n\t\t\t}\n\t\t\tState b = a.begin();\n\t\t\tans[i] = find(b);\n\t\t}\n\t\tint b;\n\t\tcin >> b;\n\t\tint cnt = 0;\n\t\tREP(q, 10000) {\n\t\t\tif (ans[b] == ans[q]) cnt++;\n\t\t}\n\t\tcout << ans[b] << \" \" << cnt << endl;\n\t}\n}\n\n#undef int\n\nint main() {\n\tinit();\n\tsolve();\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define REP(i, s, e) for(int i = (int)(s); i < (int)(e); ++i)\n#define rep(i, n) REP(i, 0, n)\n\n\nstring s, t;\nusing State = string::iterator;\nint atom(State& it);\nint term(State& it);\nint form(State& it);\n\nint atom(State& it) {\n  auto c = *it;\n  assert(c >= 'a' && c <='d');\n  it++;\n  return t[c - 'a'] - '0';\n}\nint term(State& it) {\n  auto c = *it;\n  ++it;\n  if(c == '+') {\n    return form(it) | form(it);\n  }\n  else if(c == '*') {\n    return form(it) & form(it);\n  }\n  else if(c == '^') {\n    return form(it) ^ form(it);\n  }\n  assert(false);\n}\nint form(State& it) {\n  auto c = *it;\n  if(c == '[') {\n    ++it;\n    int tmp = term(it);\n    ++it;\n    return tmp;\n  }\n  assert(c >= 'a' && c <= 'd');\n  return atom(it);\n}\n\nstring conv(int x) {\n  string s = to_string(x);\n  if(s.size() < 4) {\n    s = string(4 - s.size(), '0') + s;\n  }\n  return s;\n}\n\nint main() {\n  while(cin >> s) {\n    if(s == \".\") break;\n    cin >> t;\n    auto it = s.begin();\n    int x = form(it);\n    int cnt = 0;\n    rep(i, 10000) {\n      it = s.begin();\n      t = conv(i);\n      int y = form(it);\n      if(x == y) cnt++;\n    }\n    cout << x << \" \" << cnt << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define REP(i,n) for(int i=0;i<n;i++)\n#define FOR(i,n1,n2) for(int i=n1;i<n2;i++)\n#define bFOR(i,n1,n2) for(int i=n1;i>=n2;i--)\n#define speed_up    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n\ntypedef long long int ll;\ntypedef pair<ll,ll> Pi;\nconst int INF=(ll)(1LL<<30)-1;\nconst double INFd=100000000000.0;\nconst ll INFl=(ll)9223372036854775807;\nconst int MAX=10000;\nconst ll MOD=(ll)1e9+7;\nll gcd(ll a,ll b){return b?gcd(b,a%b):a;}\nll lcm(ll a,ll b){return a/gcd(a, b)*b;}\nint dx[4]={0,-1,0,1},dy[4]={-1,0,1,0};\nint mdx[4]={0,1,0,-1},mdy[4]={-1,0,1,0};\n\n\ntemplate<typename A, size_t N, typename T>\nvoid Fill(A (&array)[N], const T &val){\n    std::fill( (T*)array, (T*)(array+N), val );\n}\n\nstring s;\nint p;\n\nint hash3(int t1){\n\tint a=(t1/1000);\n\tint b=(t1/100)%10;\n\tint c=(t1/10)%10;\n\tint d=t1%10;\n\tstack<int> stk;\n\tfor(int i=s.size()-1;i>=0;i--){\n\t\tif(s[i]=='['||s[i]==']')continue;\n\t\tif(s[i]=='a')stk.push(a);\n\t\tif(s[i]=='b')stk.push(b);\n\t\tif(s[i]=='c')stk.push(c);\n\t\tif(s[i]=='d')stk.push(d);\n\t\tint x,y;\n\t\tif(s[i]=='+'||s[i]=='*'||s[i]=='^'){\n\t\t\tx=stk.top();stk.pop();y=stk.top();stk.pop();\n\t\t}\n\t\tif(s[i]=='+')stk.push(x|y);\n\t\tif(s[i]=='*')stk.push(x&y);\n\t\tif(s[i]=='^')stk.push(x^y);\n\t}\n\treturn stk.top();\n}\t\nint main(){\n\twhile(1){\n\t\tcin>>s;\n\t\tif(s==\".\")break;\n\t\tcin>>p;\n\t\tint tt=hash3(p);\n\t\tcout<<tt<<\" \";\n\t\tint ans=0;\n\t\tfor(int i=0;i<10000;i++){\n\t\t\tif(tt==hash3(i))ans++;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define lp(i,n) for(int i=0;i<n;i++)\n\nint enzan(int num1,int num2,int clc){\n  int numa[4];\n  int numb[4];\n  int ans[4];\n  lp(i,4){\n    numa[i]=0;\n    numb[i]=0;\n  }\n  if(num1>=8){\n    numa[0]=1;\n    num1-=8;\n  }\n  if(num1>=4){\n    numa[1]=1;\n    num1-=4;\n  }\n  if(num1>=2){\n    numa[2]=1;\n    num1-=2;\n  }\n  if(num1>=1){\n    numa[3]=1;\n    num1-=1;\n  }\n  if(num2>=8){\n    numb[0]=1;\n    num2-=8;\n  }\n  if(num2>=4){\n    numb[1]=1;\n    num2-=4;\n  }\n  if(num2>=2){\n    numb[2]=1;\n    num2-=2;\n  }\n  if(num2>=1){\n    numb[3]=1;\n    num2-=1;\n  }\n  //  lp(i,4){\n  //  cout<<numa[i];\n  //}\n  //cout<<endl;\n  //lp(i,4){\n  //  cout<<numb[i];\n  //}\n  //cout<<endl;\n\n  lp(i,4){\n    if(clc==1){\n      if(numa[i]==1&&numb[i]==1) ans[i]=1;\n      else ans[i]=0;\n    }\n    if(clc==2){\n      if(numa[i]==numb[i]) ans[i]=0;\n      else ans[i]=1;\n    }\n    if(clc==3){\n      if(numa[i]==0&&numb[i]==0) ans[i]=0;\n      else ans[i]=1;\n    }\n  }\n  return ans[0]*8+ans[1]*4+ans[2]*2+ans[3]*1;\n}\n\n\nint change(string calc){\n  while(1){\n    int num=0,ca=0;\n    int memo[2];\n    //int hoge;\n    //cout<<calc<<endl;\n    //cin>>hoge;\n    if(calc.size()==1) break;\n    for(int i=0;i<calc.size();i++){\n      if(calc[i]=='['){\n\tnum=0;\n\tca=0;\n      }\n      if(calc[i]=='*') ca=1;\n      if(calc[i]=='^') ca=2;\n      if(calc[i]=='+') ca=3;\n      if('0'<=calc[i]&&calc[i]<='9'){\n\tmemo[num]=calc[i]-'0';\n\tnum++;\n      }\n      if('a'<=calc[i]&&calc[i]<='z'){\n\tmemo[num]=calc[i]-'a'+10;\n\tnum++;\n      }\n      if(calc[i]==']'){\n\tif(num==1){\n\t  calc.erase(i,1);\n\t  calc.erase(i-2,1);\n\t  break;\n\t}\n\telse if(num==2){\n\t  int memori=enzan(memo[0],memo[1],ca);\n\t  if(memori<=9){\n\t    calc[i-1]=memori+'0';\n\t    calc.erase(i-2,1);\n\t    calc.erase(i-3,1);\n\t  }\n\t  else{\n\t    calc[i-1]=memori-10+'a';\n\t    calc.erase(i-2,1);\n\t    calc.erase(i-3,1);\n\t  }\n\t  break;\n\t}\n      }\n    }\n  }\n  if('a'<=calc[0]&&calc[0]<='z') return calc[0]-'a'+10;\n  return calc[0]-'0';\n      if(mems==0) cout<<i<<endl;\n}\n\n\nint main(){\n  while(1){\n    string cast;\n    cin>>cast;\n    if(cast==\".\") break;\n    int mez;\n    cin>>mez;\n    int xx[20];\n    lp(i,20) xx[i]=0;\n    int ansmemo;\n    for(int i=0;i<10000;i++){\n      string calc=cast;\n      char a,b,c,d;\n      a='0'+i/1000;\n      b='0'+i%1000/100;\n      c='0'+i%100/10;\n      d='0'+i%10;\n      lp(j,calc.size()){\n\tif(calc[j]=='a'){\n\t  calc[j]=a;\n\t}\n\tif(calc[j]=='b'){\n\t  calc[j]=b;\n\t}\n\tif(calc[j]=='c'){\n\t  calc[j]=c;\n\t}\n\tif(calc[j]=='d'){\n\t  calc[j]=d;\n\t}\n      }\n      int mems=change(calc);\n      if(mez==i) ansmemo=mems;\n      xx[mems]++;\n    }\n    cout<<ansmemo<<\" \"<<xx[ansmemo]<<endl;\n  }\n  return 0;\n}\n\t \n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <vector>\n#include <utility>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <cmath>\n#include <iomanip>\n#include <numeric>\n\n#define rep(i,j,k) for(int i=(int)j;i<(int)k;i++)\n#define itrep(i,x) for(auto i=(x).begin(); i!=(x).end();i++)\n#define Sort(x) sort((x).begin(),(x).end())\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define vec vector\n#define INF (int)1e9\n#define INFL 1e18\n#define MOD 1000000007\n#define pb push_back\n#define MP make_pair\n#define PI 3.1415926535\n#define fcout cout<<fixed<<setprecision(10)\ntypedef long long int ll;\ntypedef std::pair<int,int> P;\nint D=1;\nint dx[4]={0,1,0,-1},dy[4]={-1,0,1,0};\nint day[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n//template<typename T>void pp(T x){cout<<x<<endl;}\n\nusing namespace std;\ntemplate<typename T> void test(vector<T> v){for(int i=0;i<v.size();i++){if(i)cout<<\" \";cout<<v[i];}cout<<endl;}\n\nint andd(int x,int y){\n    int ret=0;\n    rep(i,0,4){\n        ret+=pow(2,i)*((x%2)&&(y%2));\n        x/=2; y/=2;\n    }\n    return ret;\n}\n\nint orr(int x,int y){\n    int ret=0;\n    rep(i,0,4){\n        ret+=pow(2,i)*((x%2)||(y%2));\n        x/=2; y/=2;\n    }\n    return ret;\n\n}\n\nint hashh(string s,string ss){\n    stack<int> st;\n    int a,b,c,d;\n    d=ss[3]-'0'; c=ss[2]-'0'; b=ss[1]-'0'; a=ss[0]-'0';\n    reverse(all(s));\n    rep(i,0,s.size()){\n        if(s[i]=='a')st.push(a);\n        else if(s[i]=='b')st.push(b);\n        else if(s[i]=='c')st.push(c);\n        else if(s[i]=='d')st.push(d);\n        else if(s[i]=='+'){\n            int x=st.top();\n            st.pop();\n            int y=st.top();\n            st.pop();\n            st.push(orr(x,y));\n        }else if(s[i]=='*'){\n            int x=st.top();\n            st.pop();\n            int y=st.top();\n            st.pop();\n            st.push(andd(x,y));\n        }else if(s[i]=='^'){\n            int x=st.top();\n            st.pop();\n            int y=st.top();\n            st.pop();\n            st.push(x^y);\n        }\n    }\n    return st.top();\n}\nint main(){\n    string s;\n    while(cin>>s&&s!=\".\"){\n        string ss;\n        cin>>ss;\n        int ans=hashh(s,ss);\n        cout<<ans<<endl;\n        ss=\"0000\";\n        int ct=0;\n        rep(i,0,10)rep(j,0,10)rep(k,0,10)rep(l,0,10){\n            ss[0]='0'+i;\n            ss[1]='0'+j;\n            ss[2]='0'+k;\n            ss[3]='0'+l;\n            if(ans==hashh(s,ss)){\n                ct++;\n            }\n        }\n        cout<<ct<<endl;\n    }\n    return 0;\n} \n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n \n#define State string::const_iterator\nclass ParseError {};\n \nint Hash(State &begin);\nint OP(State &begin);\nint Letter(State &begin);\nint factor(State &begin);\nvoid consume(State &begin, char expected);\n \nint a, b, c, d;\n \n// 四則演算の式をパースして、その評価結果を返す。\nint Hash(State &begin) {\n    int ret = factor(begin);\n \n    return ret;\n \n}\n \n// 乗算除算の式をパースして、その評価結果を返す。\nint OP(State &begin) {\n    int ret = 0;\n    if(*begin == '*'){\n        consume(begin, '*');\n        int left_num = Hash(begin);\n        int right_num = Hash(begin);\n        ret = left_num & right_num;\n    }\n    else if(*begin == '+'){\n        consume(begin, '+');\n        int left_num = Hash(begin);\n        int right_num = Hash(begin);\n        ret = left_num | right_num;\n    }\n    else if(*begin == '^'){\n        consume(begin, '^');\n        int left_num = Hash(begin);\n        int right_num = Hash(begin);\n        ret = left_num ^ right_num;\n    }\n    else{\n        cout << \" out of range\" << *begin << endl;\n        ret = 0;\n        int dummy = 5/ret;\n    }\n \n    return ret;\n}\n \n// 数字の列をパースして、その数を返す。\nint Letter(State &begin) {\n    if(*begin=='a'){\n        consume(begin, 'a');\n        return a;\n    }\n    else if(*begin=='b'){\n        consume(begin, 'b');\n        return b;\n    }\n    else if(*begin=='c'){\n        consume(begin, 'c');\n        return c;\n    }\n    else if(*begin=='d'){\n        consume(begin, 'd');\n        return d;\n    }\n    else{\n        consume(begin, 'o');\n        return -20;\n    }\n}\n \n\nint factor(State &begin) {\n    if (*begin == '[') {\n        consume(begin, '['); // '['を飛ばす。\n        int ret = OP(begin);\n        consume(begin, ']'); // ']'を飛ばす。\n        return ret;\n    }\n    else {\n        return Letter(begin);\n    }\n}  \n\n \n// beginがexpectedを指していたらbeginを一つ進める。\nvoid consume(State &begin, char expected) {\n    if (*begin == expected) {\n        begin++;\n    } else {\n        cerr << \"Expected '\" << expected << \"' but got '\" << *begin << \"'\"\n             << endl;\n        cerr << \"Rest string is '\";\n        while (*begin) {\n            cerr << *begin++;\n        }\n        cerr << \"'\" << endl;\n        throw ParseError();\n    }\n}\n \nint main() {\n  \n    while(true){\n \n        string S;\n \n        cin >> S;\n \n        if(S[0] == '.'){\n            break;\n        }\n \n        string P;\n        cin >> P;\n\n        int count = 0;\n        map<int,int> hash_memory;\n       \n        for(int i=0; i<10000; i++){\n\n            State s = S.begin();\n\n            a = i/1000;\n            b = (i/100)%10;\n            c = (i/10)%10;\n            d = i%10;\n            s = S.begin();\n            hash_memory[Hash(s)]++;\n        }\n\n        State s = S.begin();\n\n        stringstream ss;\n\n        ss << P[0];\n        ss >> a;\n        ss.clear();\n\n        ss << P[1];\n        ss >> b;\n        ss.clear();\n\n        ss << P[2];\n        ss >> c;\n        ss.clear();\n\n        ss << P[3];\n        ss >> d;\n        ss.clear();\n\n        int P_Hash = Hash(s);\n\n        cout << P_Hash << \" \" << hash_memory[P_Hash] << endl;\n        \n \n    }\n \n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < int(n); i++)\n\n// T := c | [opTT]\nint eval(string &s, string &pas, int &i){\n    if(isalpha(s[i])){\n        int pos = s[i]-'a';\n        i++;\n        return pas[pos]-'0';\n    }\n    assert(s[i] == '[');\n    i++; // [\n    char op = s[i]; i++;\n    int x = eval(s,pas,i);\n    int y = eval(s,pas,i);\n    i++; // ]\n    if(op == '+') return x | y;\n    if(op == '*') return x & y;\n    if(op == '^') return x ^ y;\n    assert(false);\n}\n\nint main(void){\n    string s;\n    while(cin>>s, s != \".\"){\n        string p;\n        cin>>p;\n        int index = 0;\n        int hash = eval(s,p,index);\n        int cnt = 0;\n        rep(i,10000){\n            index = 0;\n            string str = to_string(i);\n            while((int)str.size() < 4){\n                str = \"0\"+str;\n            }\n            if(eval(s,str,index) == hash) cnt++;\n        }\n        cout<<hash<<\" \"<<cnt<<endl;\n    }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nchar *p;\nint a, b, c, d;\nstring s;\n\nint solve(){\n    if(*p == 'a'){\n        ++p; return a;\n    }\n    if(*p == 'b'){\n        ++p; return b;\n    }\n    if(*p == 'c'){\n        ++p; return c;\n    }\n    if(*p == 'd'){\n        ++p; return d;\n    }\n    ++p; // [\n    char op = *p; ++p;\n    int x = solve();\n    int y = solve();\n    ++p; //]\n    if(op == '+') return x | y;\n    if(op == '*') return x & y;\n    if(op == '^') return x ^ y;\n}\n\n\n\nint calc(int v){\n    a = v/1000;\n    b = v / 100 % 10;\n    c = v / 10 % 10;\n    d = v%10;\n    p = &s[0];\n    return solve();\n}\n\n\nint main(){\n    while(cin >> s, s != \".\"){\n        int v;\n        cin >> v;\n        int h = calc(v);\n        int c = 0;\n        for(int i = 0; i < 10000; ++i){\n            if(h == calc(i)) c++;\n        }\n        cout << h << \" \" << c << endl;\n    }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "// #define _GLIBCXX_DEBUG // for STL debug (optional)\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\nusing namespace std;\n\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define int long long int\n \ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n \ntypedef pair<int, int> pii;\ntypedef long long ll;\n \nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconst ll INF = 1001001001001001LL;\nconst ll MOD = 1000000007LL;\n\nstring pat = \"abcd\";\nint parse(string &s, int l, int r, string &p) {\n    int paren = 0, pre = l+2, block = 0;\n    if(s[l] == '[') {\n        char op = s[l+1];\n        int values[2] = {};\n        for(int i=l+2; i<r; i++) {\n            if(s[i] == '[') paren++;\n            if(s[i] == ']') paren--;\n\n            if(paren == 0) {\n                values[block++] = parse(s, pre, i+1, p);\n                pre = i+1;\n            }\n        }\n\n        if(op == '+') {\n            return values[0] | values[1];\n        }\n        if(op == '*') {\n            return values[0] & values[1];\n        }\n        if(op == '^') {\n            return values[0] ^ values[1];\n        }\n        assert(false);\n    }\n    else {\n        assert(r - l == 1);\n        return p[pat.find(s[l])] - '0';\n    }\n}\n \nsigned main() {\n    string s;\n    while(cin >> s, s != \".\") {\n        string pass; cin >> pass;\n        int res = parse(s, 0, s.length(), pass);\n        int cnt = 0;\n        \n        for(int i=0; i<10000; i++) {\n            string p = \"\";\n            int n = i;\n            for(int k=0; k<4; k++) {\n                p += (char)('0' + (n % 10));\n                n /= 10;\n            }\n\n            int r = parse(s, 0, s.length(), p);\n            if(res == r) cnt++;\n        }\n\n        printf(\"%lld %lld\\n\", res, cnt);\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "// AOJ 2883: Proof of Knowledge\n// 2018.7.11 bal4u\n\n#include <stdio.h>\n\nchar tr['d'+1];\n\nchar *calc(int *ans, char *S, char *P)\n{\n\tint v1, v2;\n\tchar op;\n\t\n    if (*S == '[') {\n        op = *(++S), S++;\n        if (*S == '[') S = calc(&v1, S, P);\n        else v1 = P[tr[*S++]];\n\n        if (*S == '[') S = calc(&v2, S, P);\n        else v2 = P[tr[*S++]];\n\t\t\n        if      (op == '+') *ans = v1 | v2;\n        else if (op == '*') *ans = v1 & v2;\n        else                *ans = v1 ^ v2;\n\t} else *ans = P[tr[*S++]];\n    while (*S == ']') S++;\n    return S;\n}\n\nchar S[100];\nchar p[10000][4];\n\nint main()\n{\n\tint i, k, val, cnt;\n\tchar P[10];\n\n\tfor (i = 0; i < 4; i++) tr['a'+i] = i;\n\tfor (i = 0; i < 10000; i++) {\n\t\tp[i][0] = i/1000;\n\t\tp[i][1] = (i/100)%10;\n\t\tp[i][2] = (i/10)%10;\n\t\tp[i][3] = i%10;\n\t}\n\n\twhile (fgets(S, 100, stdin) && *S != '.') {\n\t\tfgets(P, 10, stdin);\n\t\tfor (i = 0; i < 4; i++) P[i] &= 0xf;\n\t\tcalc(&val, S, P), cnt = 0;\n\t\tfor (i = 0; i < 10000; i++) {\n\t\t\tcalc(&k, S, p[i]);\n\t\t\tif (k == val) cnt++;\n\t\t}\n\t\tprintf(\"%d %d\\n\", val, cnt);\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\nint a,b,c,d;\nint cur;\nchar str[100];\nint form(){\n    if(str[cur]=='a'){return a;}\n    if(str[cur]=='b'){return b;}\n    if(str[cur]=='c'){return c;}\n    if(str[cur]=='d'){return d;}\n    if(str[cur]==']'){\n        cur++;\n        return form();\n    }\n    if(str[cur]=='['){\n        cur++;\n        if(str[cur]=='+'){\n            cur++;\n            int L=form();\n            cur++;\n            int R=form();\n            return L|R;\n        }\n        if(str[cur]=='*'){\n            cur++;\n            int L=form();\n            cur++;\n            int R=form();\n            return L&R;\n        }\n        if(str[cur]=='^'){\n            cur++;\n            int L=form();\n            cur++;\n            int R=form();\n            return L^R;\n        }\n    }\n    return 0;\n}\nint main(void){\n    while(1){\n        scanf(\"%s\",str);\n        if(str[0]=='.') break;\n        getchar();\n        char abcd[10];\n        scanf(\"%s\",abcd); getchar();\n        a=abcd[0]-'0'; b=abcd[1]-'0'; c=abcd[2]-'0'; d=abcd[3]-'0';\n        cur=0;\n        int hash=form();\n        int cnt=0;\n        for(a=0;a<=9;a++){\n            for(b=0;b<=9;b++){\n                for(c=0;c<=9;c++){\n                    for(d=0;d<=9;d++){\n                        cur=0;\n                        if(hash==form()){\n                            cnt++;\n                        }\n                    }\n                }\n            }\n        }\n        printf(\"%d %d\\n\",hash,cnt);\n    }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdint.h>\n#include<inttypes.h>\n#include<string.h>\n\ntypedef int32_t i32;\n\n#define ALLOC(size,type) ((type*)calloc((size),sizeof(type)))\n\ni32 eval (char *s, i32 *x, i32 *k) {\n  if (s[*k] != '[') {\n    i32 res = x[s[*k] - 'a'];\n    *k += 1;\n    return res;\n  }\n  i32 op = s[*k + 1];\n  *k += 2;//[ op\n  i32 l = eval (s, x, k);\n  i32 r = eval (s, x, k);\n  i32 res = 0;\n  if (op == '+') {\n    res = l | r;\n  } else if (op == '*') {\n    res = l & r;\n  } else {\n    res = l ^ r;\n  }\n  *k += 1;//]\n  return res;\n}\n\nvoid loop (i32 p, i32 *x, char *s, i32 *cnt) {\n  if (p == 4) {\n    i32 k = 0;\n    cnt[eval (s, x, &k)]++;\n    return;\n  }\n  for (x[p] = 0; x[p] < 10; x[p]++) {\n    loop (p + 1, x, s, cnt);\n  }\n}\n\nvoid run (void) {\n  char *s = ALLOC (80 + 1, char);\n  char *d = ALLOC (4 + 1, char);\n  i32 *cnt = ALLOC (16, i32);\n  for (;;) {\n    scanf (\"%s\", s);\n    if (s[0] == '.') break;\n    scanf (\"%s\", d);\n    i32 x[4];\n    for (i32 i = 0; i < 4; ++i) {\n      x[i] = d[i] - '0';\n    }\n    i32 k = 0;\n    const i32 v = eval (s, x, &k);\n    memset (cnt, 0, sizeof (i32) * 16);\n    loop (0, x, s, cnt);\n    printf (\"%\" PRIi32 \" %\" PRIi32 \"\\n\", v, cnt[v]);\n  }\n}\n\nint main (void) {\n  run();\n  return 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nchar s[90];\nint a[4];\nchar*p;\nint f(){\n\tif('a'<=*p&&*p<='d')return a[*p++-'a'];\n\tp++;\n\tchar op=*p++;\n\tint x=f();\n\tint y=f();\n\tp++;\n\tint ans=-1;\n\tif(op=='+')ans=x|y;\n\tif(op=='*')ans=x&y;\n\tif(op=='^')ans=x^y;\n\treturn ans;\n}\n\nint g(int n){\n\tfor(int j=3;j>=0;j--)a[j]=n%10,n/=10;\n\tp=s;\n\treturn f();\n}\n\nint ans[16];\nint main(){\n\twhile(scanf(\" %s\",s),*s!='.'){\n\t\tint t;\n\t\tscanf(\"%d\",&t);\n\t\tfor(int i=0;i<16;i++)ans[i]=0;\n\t\tfor(int i=0;i<10000;i++)ans[g(i)]++;\n\t\tprintf(\"%d %d\\n\",g(t),ans[g(t)]);\n\t}\n}\n"
  },
  {
    "language": "C",
    "code": "// AOJ 2883: Proof of Knowledge\n// 2018.7.11 bal4u\n\n#include <stdio.h>\n\nchar *calc(int *ans, char *S, char *P)\n{\n\tint v1, v2;\n\tchar op;\n\t\n    if (*S == '[') {\n        op = *(++S), S++;\n        if (*S == '[') S = calc(&v1, S, P);\n        else {\n            if (*S == 'a') v1 = P[0];\n            else if (*S == 'b') v1 = P[1];\n            else if (*S == 'c') v1 = P[2];\n            else v1 = P[3];\n            S++;\n\t\t}\n\n        if (*S == '[') S = calc(&v2, S, P);\n        else {\n            if (*S == 'a') v2 = P[0];\n            else if (*S == 'b') v2 = P[1];\n            else if (*S == 'c') v2 = P[2];\n            else v2 = P[3];\n            S++;\n\t\t}\n\t\t\n        if (op == '+') *ans = v1 | v2;\n        else if (op == '*') *ans = v1 & v2;\n        else *ans = v1 ^ v2;\n\t} else {\n        if (*S == 'a') *ans = P[0];\n        else if (*S == 'b') *ans = P[1];\n        else if (*S == 'c') *ans = P[2];\n        else *ans = P[3];\n        S++;\n\t}\n    while (*S == ']') S++;\n    return S;\n}\n\nchar S[100];\nint main()\n{\n\tint i, k, val, cnt;\n\tchar P[10];\n\t\n\twhile (fgets(S, 100, stdin) && *S != '.') {\n\t\tfgets(P, 10, stdin);\n\t\tfor (i = 0; i < 4; i++) P[i] &= 0xf;\n\t\tcalc(&val, S, P), cnt = 0;\n\t\tfor (P[0] = 0; P[0] <= 9; P[0]++)\n\t\t\tfor (P[1] = 0; P[1] <= 9; P[1]++)\n\t\t\t\tfor (P[2] = 0; P[2] <= 9; P[2]++)\n\t\t\t\t\tfor (P[3] = 0; P[3] <= 9; P[3]++) {\n\t\t\t\t\t\tcalc(&k, S, P);\n\t\t\t\t\t\tif (k == val) cnt++;\n\t\t\t\t\t}\n\t\tprintf(\"%d %d\\n\", val, cnt);\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "// AOJ 2883: Proof of Knowledge\n// 2018.7.11 bal4u\n\n#include <stdio.h>\n\nchar tr['d'+1];\n\nchar *calc(int *ans, char *S, char *P)\n{\n\tint v1, v2;\n\tchar op;\n\t\n    if (*S == '[') {\n        op = *(++S), S++;\n        if (*S == '[') S = calc(&v1, S, P);\n        else v1 = P[tr[*S++]];\n\n        if (*S == '[') S = calc(&v2, S, P);\n        else v2 = P[tr[*S++]];\n\t\t\n        if      (op == '+') *ans = v1 | v2;\n        else if (op == '*') *ans = v1 & v2;\n        else                *ans = v1 ^ v2;\n\t} else *ans = P[tr[*S++]];\n    while (*S == ']') S++;\n    return S;\n}\n\nchar S[100];\nint main()\n{\n\tint i, k, val, cnt;\n\tchar P[10];\n\t\n\tfor (i = 0; i < 4; i++) tr['a'+i] = i;\n\twhile (fgets(S, 100, stdin) && *S != '.') {\n\t\tfgets(P, 10, stdin);\n\t\tfor (i = 0; i < 4; i++) P[i] &= 0xf;\n\t\tcalc(&val, S, P), cnt = 0;\n\t\tfor (P[0] = 0; P[0] <= 9; P[0]++)\n\t\t\tfor (P[1] = 0; P[1] <= 9; P[1]++)\n\t\t\t\tfor (P[2] = 0; P[2] <= 9; P[2]++)\n\t\t\t\t\tfor (P[3] = 0; P[3] <= 9; P[3]++) {\n\t\t\t\t\t\tcalc(&k, S, P);\n\t\t\t\t\t\tif (k == val) cnt++;\n\t\t\t\t\t}\n\t\tprintf(\"%d %d\\n\", val, cnt);\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\n\t\twhile(true) {\n\t\t\tString a=sc.next();\n\t\t\tint wa=sc.nextInt();\n\t\t\tint[] que=new int[100];\n\t\t\tint[] suuji=new int[4];\n\t\t\tint kosu=0;\n\n\t\t\tif(a.equals(\".\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsuuji[0]=wa/1000;\n\t\t\tsuuji[1]=(wa%1000)/100;\n\t\t\tsuuji[2]=(wa%100)/10;\n\t\t\tsuuji[3]=wa%10;\n\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t//ignore\n\t\t\t\t}\n\n\t\t\t\telse if(k=='a') {\n\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='b') {\n\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='c') {\n\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='d') {\n\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint ans=que[0];\n\t\t\tint ss=0;\n\n\t\t\tfor(int l=0; l<=9999; l++) {\n\t\t\t\tsuuji[0]=l/1000;\n\t\t\t\tsuuji[1]=(l%1000)/100;\n\t\t\t\tsuuji[2]=(l%100)/10;\n\t\t\t\tsuuji[3]=l%10;\n\t\t\t\tkosu=0;\n\t\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='a') {\n\t\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='b') {\n\t\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='c') {\n\t\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='d') {\n\t\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ans==que[0]) {\n\t\t\t\t\tss++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans+\" \"+ss);\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\n\t\twhile(true) {\n\t\t\tString a=sc.next();\n\t\t\tint wa=sc.nextInt();\n\t\t\tint[] que=new int[100];\n\t\t\tint[] suuji=new int[4];\n\t\t\tint kosu=0;\n\n\t\t\tif(a.equals(\".\")) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\n\t\t\tsuuji[0]=wa/1000;\n\t\t\tsuuji[1]=(wa%1000)/100;\n\t\t\tsuuji[2]=(wa%100)/10;\n\t\t\tsuuji[3]=wa%10;\n\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t//ignore\n\t\t\t\t}\n\n\t\t\t\telse if(k=='a') {\n\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='b') {\n\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='c') {\n\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='d') {\n\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint ans=que[0];\n\t\t\tint ss=0;\n\n\t\t\tfor(int l=0; l<=9999; l++) {\n\t\t\t\tsuuji[0]=l/1000;\n\t\t\t\tsuuji[1]=(l%1000)/100;\n\t\t\t\tsuuji[2]=(l%100)/10;\n\t\t\t\tsuuji[3]=l%10;\n\t\t\t\tkosu=0;\n\t\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='a') {\n\t\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='b') {\n\t\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='c') {\n\t\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='d') {\n\t\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ans==que[0]) {\n\t\t\t\t\tss++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans+\" \"+ss);\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n\n        String s = in.next();\n        while (!\".\".equals(s)) {\n            String t = in.next();\n           // System.out.println(\"T* \" + t);\n            int res;\n            int[] p = new int[4];\n            for (int i = 0; i < 4; i++) {\n                p[i] = t.charAt(i) - '0';\n            }\n            out.print(res = solve(s, p));\n\n            int cnt = 0;\n            for (int i = 0; i < 10000; i++) {\n                int k = i;\n                for (int j = 0; j < 4; j++) {\n                    p[j] = k % 10;\n                    k /= 10;\n                }\n                if (solve(s, p) == res) cnt++;\n            }\n            out.println(\" \" + cnt);\n\n            s = in.next();\n        }\n        out.flush();\n    }\n\n    private static int solve(String s, int[] p) {\n        if (s.length() == 1) {\n            return p[s.charAt(0) - 'a'];\n        }\n\n        char op = s.charAt(1);\n        int v0, v1, last = -1;\n\n        if (s.charAt(2) != '[') {\n            v0 = p[s.charAt(2) - 'a'];\n            last = 2;\n        } else {\n            int depth = 1;\n            for (int i = 3;; i++) {\n                if (s.charAt(i) == '[') {\n                    depth++;\n                } else if (s.charAt(i) == ']') {\n                    depth--;\n                }\n                if (depth == 0) {\n                    last = i;\n                    break;\n                }\n            }\n            v0 = solve(s.substring(2, last + 1), p);\n        }\n\n        if (s.charAt(last + 1) != '[') {\n            v1 = p[s.charAt(last + 1) - 'a'];\n        } else {\n            int depth = 1, last2 = -1;\n            for (int i = last + 2;; i++) {\n                if (s.charAt(i) == '[') {\n                    depth++;\n                } else if (s.charAt(i) == ']') {\n                    depth--;\n                }\n                if (depth == 0) {\n                    last2 = i;\n                    break;\n                }\n            }\n            v1 = solve(s.substring(last + 1, last2 + 1), p);\n        }\n\n        if (op == '+') {\n            return v0 | v1;\n        } else if (op == '*') {\n            return v0 & v1;\n        } else if (op == '^') {\n            return v0 ^ v1;\n        } else {\n            throw new RuntimeException();\n        }\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\n\t\twhile(true) {\n\t\t\tString a=sc.next();\n\t\t\tint wa=sc.nextInt();\n\t\t\tint[] que=new int[100];\n\t\t\tint[] suuji=new int[4];\n\t\t\tint kosu=0;\n\n\t\t\tif(a.equals(\".\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsuuji[0]=wa/1000;\n\t\t\tsuuji[1]=(wa%1000)/100;\n\t\t\tsuuji[2]=(wa%100)/10;\n\t\t\tsuuji[3]=wa%10;\n\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t//ignore\n\t\t\t\t}\n\n\t\t\t\telse if(k=='a') {\n\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='b') {\n\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='c') {\n\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='d') {\n\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint ans=que[0];\n\t\t\tint ss=0;\n\n\t\t\tfor(int l=0; l<=9999; l++) {\n\t\t\t\tsuuji[0]=l/1000;\n\t\t\t\tsuuji[1]=(l%1000)/100;\n\t\t\t\tsuuji[2]=(l%100)/10;\n\t\t\t\tsuuji[3]=l%10;\n\t\t\t\tkosu=0;\n\t\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='a') {\n\t\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='b') {\n\t\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='c') {\n\t\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='d') {\n\t\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ans==que[0]) {\n\t\t\t\t\tss++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans+\" \"+ss);\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\n\t\twhile(true) {\n\t\t\tString a=sc.next();\n\t\t\tif(a.equals(\".\")) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t\tint wa=sc.nextInt();\n\t\t\tint[] que=new int[100];\n\t\t\tint[] suuji=new int[4];\n\t\t\tint kosu=0;\n\n\n\t\t\tsuuji[0]=wa/1000;\n\t\t\tsuuji[1]=(wa%1000)/100;\n\t\t\tsuuji[2]=(wa%100)/10;\n\t\t\tsuuji[3]=wa%10;\n\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t//ignore\n\t\t\t\t}\n\n\t\t\t\telse if(k=='a') {\n\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='b') {\n\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='c') {\n\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='d') {\n\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint ans=que[0];\n\t\t\tint ss=0;\n\n\t\t\tfor(int l=0; l<=9999; l++) {\n\t\t\t\tsuuji[0]=l/1000;\n\t\t\t\tsuuji[1]=(l%1000)/100;\n\t\t\t\tsuuji[2]=(l%100)/10;\n\t\t\t\tsuuji[3]=l%10;\n\t\t\t\tkosu=0;\n\t\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='a') {\n\t\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='b') {\n\t\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='c') {\n\t\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='d') {\n\t\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ans==que[0]) {\n\t\t\t\t\tss++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans+\" \"+ss);\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\n\t\twhile(true) {\n\t\t\tString a=sc.next();\n\t\t\tint wa=sc.nextInt();\n\t\t\tint[] que=new int[4];\n\t\t\tint[] suuji=new int[4];\n\t\t\tint kosu=0;\n\n\t\t\tif(a.equals(\".\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor(int i=0; i<4; i++) {\n\t\t\t\tque[i]=0;\n\t\t\t\tsuuji[i]=0;\n\t\t\t}\n\t\t\tsuuji[0]=wa/1000;\n\t\t\tsuuji[1]=(wa%1000)/100;\n\t\t\tsuuji[2]=(wa%100)/10;\n\t\t\tsuuji[3]=wa%10;\n\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t//ignore\n\t\t\t\t}\n\n\t\t\t\telse if(k=='a') {\n\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='b') {\n\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='c') {\n\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse if(k=='d') {\n\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\tkosu++;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\tkosu--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint ans=que[0];\n\t\t\tint ss=0;\n\n\t\t\tfor(int l=0; l<=9999; l++) {\n\t\t\t\tsuuji[0]=l/1000;\n\t\t\t\tsuuji[1]=(l%1000)/100;\n\t\t\t\tsuuji[2]=(l%100)/10;\n\t\t\t\tsuuji[3]=l%10;\n\t\t\t\tkosu=0;\n\t\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\t\tchar k=a.charAt(a.length()-i-1);\n\t\t\t\t\tif(k=='[' || k==']') {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='a') {\n\t\t\t\t\t\tque[kosu]=suuji[0];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='b') {\n\t\t\t\t\t\tque[kosu]=suuji[1];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='c') {\n\t\t\t\t\t\tque[kosu]=suuji[2];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(k=='d') {\n\t\t\t\t\t\tque[kosu]=suuji[3];\n\t\t\t\t\t\tkosu++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(k=='+') {\n\t\t\t\t\t\t\tint p=que[kosu-1]|que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='*') {\n\t\t\t\t\t\t\tint p=que[kosu-1]&que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse if(k=='^') {\n\t\t\t\t\t\t\tint p=que[kosu-1]^que[kosu-2];\n\t\t\t\t\t\t\tque[kosu-1]=0;\n\t\t\t\t\t\t\tque[kosu-2]=p;\n\t\t\t\t\t\t\tkosu--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ans==que[0]) {\n\t\t\t\t\tss++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans+\" \"+ss);\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\npublic class Main {\n\t\n\tstatic List<Integer> query;\n\n\tpublic static void main(String[] args) {\n\t\tScanner in=new Scanner(System.in);\n\t\t\n\t\twhile(true) {\n\t\t\tString str=in.next();\n\t\t\tif(str.charAt(0)=='.')break;\n\t\t\t\n\t\t\tString key=in.next();\n\t\t\tint sample=solve(str,key);\n\t\t\t\n\t\t\tint cnt=0;\n\t\t\tfor(int i=0;i<=9;i++) {\n\t\t\t\tfor(int j=0;j<=9;j++) {\n\t\t\t\t\tfor(int k=0;k<=9;k++) {\n\t\t\t\t\t\tfor(int l=0;l<=9;l++) {\n\t\t\t\t\t\t\tString subkey=String.valueOf(i)+String.valueOf(j)+String.valueOf(k)+String.valueOf(l);\n\t\t\t\t\t\t\tif(solve(str,subkey)==sample)cnt++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(sample+\" \"+cnt);\n\t\t}\n\t}\n\t\n\tstatic int solve(String str,String key) {\n\t\tquery=new ArrayList<>();\n\t\t\n\t\tfor(int i=0;i<str.length();i++) {\n\t\t\tquery.add((int) str.charAt(i));\n\t\t\tchar c=(char) query.get(i).intValue();\n\t\t\tif(c>='a' && c<='d')query.set(i, key.charAt(c-97)-48);\n\t\t}\n\t\tmyHash(0);\n\t\t\n\t\treturn query.get(0);\n\t}\n\t\n\tstatic void myHash(int p) {\n\t\tchar ha=(char)query.get(p).intValue();\n\t\t\n\t\tif(ha!='[')return;\n\t\t\n\t\tchar op=(char)query.get(p+1).intValue();\n\t\t\n\t\tif((char) query.get(p+2).intValue()=='[') {\n\t\t\tmyHash(p+2);\n\t\t\tmyHash(p+3);\n\t\t\tquery.set(p, calc(op,query.get(p+2),query.get(p+3)));\n\t\t}\n\t\telse if((char) query.get(p+3).intValue()=='[') {\n\t\t\tmyHash(p+3);\n\t\t\tquery.set(p, calc(op,query.get(p+2),query.get(p+3)));\n\t\t}\n\t\telse {\n\t\t\tquery.set(p, calc(op,query.get(p+2),query.get(p+3)));\n\t\t}\n\t\tcleanq(p);\n\n\t}\n\t\n\tstatic void cleanq(int p) {\n\t\tint i=0,l=query.indexOf(93);\n\t\tIterator<Integer> itr=query.iterator();\n\t\twhile(true) {\n\t\t\tint n=itr.next();\n\t\t\tif(i>=p+1)itr.remove();\n\t\t\tif(n==93)break;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tstatic int calc(char op,int a,int b) {\n\t\tint res=0;\n\t\t\n\t\tswitch(op) {\n\t\tcase '+':\n\t\t\tres=a | b;\n\t\t\tbreak;\n\t\t\t\n\t\tcase '*':\n\t\t\tres=a & b;\n\t\t\tbreak;\n\t\t\t\n\t\tcase '^':\n\t\t\tres=a^b;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tvoid run() {\n\t\tScanner scan = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tString s = scan.next();\n\t\t\tif (s.equals(\".\"))\n\t\t\t\treturn;\n\t\t\tString p = scan.next();\n\t\t\tint pHash = eval(s, p);\n\t\t\tint hashSum = 0;\n\t\t\tfor (int i = 0; i <= 9999; i++) {\n\t\t\t\tint num  = i;\n\t\t\t\tString pass = Integer.toString(num / 1000);\n\t\t\t\tnum -= 1000 * (num / 1000);\n\t\t\t\tpass += Integer.toString(num / 100);\n\t\t\t\tnum -= 100 * (num / 100);\n\t\t\t\tpass += Integer.toString(num / 10);\n\t\t\t\tnum -= 10 * (num / 10);\n\t\t\t\tpass += Integer.toString(num);\n\t\t\t\tif (pHash == eval(s, pass))\n\t\t\t\t\thashSum++;\n\t\t\t}\n\t\t\tSystem.out.println(pHash + \" \" + hashSum);\n\t\t}\n\t}\n\t\n\tint eval(String s, String p) {\n//\t\tSystem.out.println(s);\n\t\tif (s.length() == 1) {\n\t\t\tswitch(s) {\n\t\t\tcase \"a\": return p.charAt(0) - '0';\n\t\t\tcase \"b\": return p.charAt(1) - '0';\n\t\t\tcase \"c\": return p.charAt(2) - '0';\n\t\t\tcase \"d\": return p.charAt(3) - '0';\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"internal error: \" + s);\n\t\t\t}\n\t\t}\n\t\tint index = 1;\n\t\tchar op = s.charAt(index++);\n\t\tint lhv = 0, rhv = 0;\n//\t\tSystem.out.println(\"left\");\n\t\tif (s.charAt(index) != '[') {\n\t\t\tlhv = eval(s.substring(index, index + 1), p);\n\t\t\tindex++;\n\t\t} else {\n\t\t\tint idx = index;\n\t\t\tint kakko = 1;\n\t\t\twhile (kakko != 0) {\n\t\t\t\tidx++;\n\t\t\t\tif (s.charAt(idx) == '[') kakko++;\n\t\t\t\telse if (s.charAt(idx) == ']') kakko--;\n\t\t\t}\n//\t\t\tSystem.out.println(\"lhv: \" + s + \" \" + index + \" \" + idx);\n//\t\t\tSystem.out.println(s.substring(index, idx + 1));\n\t\t\tlhv = eval(s.substring(index, idx + 1), p);\n\t\t\tindex = idx + 1;\n\t\t}\n//\t\tSystem.out.println(\"right\");\n\t\tif (s.charAt(index) != '[') {\n\t\t\trhv = eval(s.substring(index, index + 1), p);\n\t\t} else {\n\t\t\tint idx = index;\n\t\t\tint kakko = 1;\n\t\t\twhile (kakko != 0) {\n\t\t\t\tidx++;\n\t\t\t\tif (s.charAt(idx) == '[') kakko++;\n\t\t\t\telse if (s.charAt(idx) == ']') kakko--;\n\t\t\t}\n//\t\t\tSystem.out.println(\"rhv: \" + s + \" \" + index + \" \" + idx);\n//\t\t\tSystem.out.println(s.substring(index, idx + 1));\n\t\t\trhv = eval(s.substring(index, idx + 1), p);\n\t\t}\n\t\tswitch(op) {\n\t\tcase '+': return lhv | rhv;\n\t\tcase '*': return lhv & rhv;\n\t\tcase '^': return lhv ^ rhv;\n\t\tdefault:\n\t\t\tthrow new Error(\"internal error\");\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing static System.Console;\nusing static System.Math;\n\nnamespace AtTest.HCPC2019_15\n{\n    class E\n    {\n        static void Main(string[] args)\n        {\n            Method(args);\n        }\n\n        static void Method(string[] args)\n        {\n            string s = Read();\n            List<int[]> res = new List<int[]>();\n            while (s[0] != '.')\n            {\n                Calc(s, \"0028\");\n                var cnts = new int[20];\n                for (int i = 0; i < 10; i++)\n                {\n                    for (int j = 0; j < 10; j++)\n                    {\n                        for (int k = 0; k < 10; k++)\n                        {\n                            for (int l = 0; l < 10; l++)\n                            {\n                                string now = \"\";\n                                now += (char)(i + '0');\n                                now += (char)(j + '0');\n                                now += (char)(k + '0');\n                                now += (char)(l + '0');\n                                cnts[Calc(s, now)]++;\n                            }\n                        }\n                    }\n                }\n\n                int val = Calc(s, Read());\n                res.Add(new int[2] { val, cnts[val] });\n                s = Read();\n            }\n\n            for(int i = 0; i < res.Count; i++)\n            {\n                WriteLine(res[i][0] + \" \" + res[i][1]);\n            }\n        }\n\n        static int Calc(string s, string num)\n        {\n            if (s.Length == 1)\n            {\n                return num[s[0] - 'a'] - '0';\n            }\n\n            char opr = s[1];\n            int now = 2;\n            int a = 0;\n            if (s[now] >= 'a' && s[now] <= 'd')\n            {\n                a = num[s[now] - 'a'] - '0';\n                now++;\n            }\n            else\n            {\n                int nest = 0;\n                string blockA = \"\";\n                for(;now<s.Length;now++)\n                {\n                    blockA += s[now];\n                    if (s[now] == '[') nest++;\n                    else if (s[now] == ']')\n                    {\n                        nest--;\n                        if (nest == 0)\n                        {\n                            now++;\n                            break;\n                        }\n                    }\n                }\n                a = Calc(blockA, num);\n            }\n            int b = 0;\n            if (s[now] >= 'a' && s[now] <= 'd')\n            {\n                b = num[s[now] - 'a'] - '0';\n                now++;\n            }\n            else\n            {\n                int nest = 0;\n                string blockB = \"\";\n                for (; now < s.Length; now++)\n                {\n                    blockB += s[now];\n                    if (s[now] == '[') nest++;\n                    else if (s[now] == ']')\n                    {\n                        nest--;\n                        if (nest == 0)\n                        {\n                            now++;\n                            break;\n                        }\n                    }\n                }\n                b = Calc(blockB, num);\n            }\n\n            int val = 0;\n            switch (opr)\n            {\n                case '+':\n                    val = a | b;\n                    break;\n                case '*':\n                    val = a & b;\n                    break;\n                case '^':\n                    val = a ^ b;\n                    break;\n            }\n            return val;\n        }\n\n        private static string Read() { return ReadLine(); }\n        private static char[] ReadChars() { return Array.ConvertAll(Read().Split(), a => a[0]); }\n        private static int ReadInt() { return int.Parse(Read()); }\n        private static long ReadLong() { return long.Parse(Read()); }\n        private static double ReadDouble() { return double.Parse(Read()); }\n        private static int[] ReadInts() { return Array.ConvertAll(Read().Split(), int.Parse); }\n        private static long[] ReadLongs() { return Array.ConvertAll(Read().Split(), long.Parse); }\n        private static double[] ReadDoubles() { return Array.ConvertAll(Read().Split(), double.Parse); }\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System.Collections.Generic;\nusing System;\n\npublic class hello\n{\n    public static void Main()\n    {\n        while (true)\n        {\n            var s = Console.ReadLine().Trim();\n            if (s == \".\") break;\n            var p = Console.ReadLine().Trim();\n            var ph = getHash(s, p);\n            getAns(s, p, ph);\n        }\n    }\n    static void getAns(string s, string p, int ph)\n    {\n        var count = 0;\n        for (int i = 0; i <= 9999; i++)\n        {\n            var t = i.ToString();\n            var z = 4 - t.Length;\n            t = new string('0', z) + t;\n            if (getHash(s, t) == ph) count++;\n        }\n        Console.WriteLine(\"{0} {1}\",ph,count);\n    }\n    static int getHash(string s, string p)\n    {\n        var a = p[0] - '0';\n        var b = p[1] - '0';\n        var c = p[2] - '0';\n        var d = p[3] - '0';\n        var st = new Stack<int>();\n        var sL = s.Length;\n        for (int i = 0; i < sL; i++)\n        {\n            if (s[i] == 'a') st.Push(a);\n            else if (s[i] == 'b') st.Push(b);\n            else if (s[i] == 'c') st.Push(c);\n            else if (s[i] == 'd') st.Push(d);\n            else if (s[i] == '+') st.Push(100);\n            else if (s[i] == '*') st.Push(101);\n            else if (s[i] == '^') st.Push(102);\n            else if (s[i] == ']')\n            {\n                var x = st.Pop();\n                var y = st.Pop();\n                var z = st.Pop();\n                if (z == 100) st.Push(x | y);\n                else if (z == 101) st.Push(x & y);\n                else st.Push(x ^ y);\n            }\n        }\n        return st.Pop();\n    }\n}\n"
  },
  {
    "language": "Ruby",
    "code": "O=->a{->b{a|b}}\nA=->a{->b{a&b}}\nX=->a{->b{a^b}}\nloop{\n\ts=gets.chomp\n\tbreak if s=='.'\n\ts=s.tr('+*^','OAX')\n\t'abcd'.chars{|c|s.gsub!(c,'[%s]'%c)}\n\tn=gets.to_i\n\tr=eval(s.tr('abcd','%04d'%n))[0]\n\tputs '%d %d'%[r,10000.times.count{|i|r==eval(s.tr('abcd','%04d'%i))[0]}]\n}\n"
  },
  {
    "language": "Ruby",
    "code": "def calc(h)\n    stack = []\n    h.each_char do |char|\n        stack << char\n        while stack.size >= 3 && stack[-3] =~ /\\W/ && stack[-2] =~ /\\w/ && stack[-1] =~ /\\w/\n            op, x, y = stack[-3..-1]\n            3.times { stack.pop }\n            case op\n            when ?+ then stack << (x.to_i | y.to_i).to_s\n            when ?* then stack << (x.to_i & y.to_i).to_s\n            when ?^ then stack << (x.to_i ^ y.to_i).to_s\n            end\n        end\n    end\n    stack[0]\nend\n\nwhile 1\n    h = gets.chomp.gsub(/[\\[\\]]/, '')\n    break if h =~ /\\./\n    x = calc(h.tr('abcd', gets.chomp))\n    n = (0..9999).count{|i| calc(h.tr('abcd', sprintf(\"%04d\", i))) == x}\n    puts \"#{x} #{n}\"\nend\n\n"
  },
  {
    "language": "Go",
    "code": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc main() {\n\tio := NewIo()\n\tdefer io.Flush()\n\tfor {\n\t\tS := io.NextLine()\n\t\tif S == \".\" {\n\t\t\tbreak\n\t\t}\n\t\tP := io.NextLine()\n\t\ti := 0\n\t\tval := hash(S, P, &i)\n\t\tcnt := 0\n\t\tfor j := 0; j < 10000; j++ {\n\t\t\ti = 0\n\t\t\tif hash(S, fmt.Sprintf(\"%04d\", j), &i) == val {\n\t\t\t\tcnt++\n\t\t\t}\n\t\t}\n\t\tio.Println(val, cnt)\n\t}\n}\n\nfunc hash(s, n string, i *int) int {\n\tif s[*i] == '[' {\n\t\t*i++\n\t\tswitch s[*i] {\n\t\tcase '+':\n\t\t\t*i++\n\t\t\tl := hash(s, n, i)\n\t\t\tr := hash(s, n, i)\n\t\t\t*i++\n\t\t\treturn l | r\n\t\tcase '*':\n\t\t\t*i++\n\t\t\tl := hash(s, n, i)\n\t\t\tr := hash(s, n, i)\n\t\t\t*i++\n\t\t\treturn l & r\n\t\tcase '^':\n\t\t\t*i++\n\t\t\tl := hash(s, n, i)\n\t\t\tr := hash(s, n, i)\n\t\t\t*i++\n\t\t\treturn l ^ r\n\t\t}\n\t}\n\tx := int(n[s[*i]-'a'] - '0')\n\t*i++\n\treturn x\n}\n\n// I/O template\ntype Io struct {\n\treader    *bufio.Reader\n\twriter    *bufio.Writer\n\ttokens    []string\n\tnextToken int\n}\n\nfunc NewIo() *Io {\n\treturn &Io{\n\t\treader: bufio.NewReader(os.Stdin),\n\t\twriter: bufio.NewWriter(os.Stdout),\n\t}\n}\n\nfunc (io *Io) Flush() {\n\terr := io.writer.Flush()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc (io *Io) NextLine() string {\n\tvar buff []byte\n\tfor {\n\t\tline, isPrefix, err := io.reader.ReadLine()\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tbuff = append(buff, line...)\n\t\tif !isPrefix {\n\t\t\tbreak\n\t\t}\n\t}\n\treturn string(buff)\n}\n\nfunc (io *Io) Next() string {\n\tfor io.nextToken >= len(io.tokens) {\n\t\tline := io.NextLine()\n\t\tio.tokens = strings.Fields(line)\n\t\tio.nextToken = 0\n\t}\n\ts := io.tokens[io.nextToken]\n\tio.nextToken++\n\treturn s\n}\n\nfunc (io *Io) NextInt() int {\n\ti, err := strconv.Atoi(io.Next())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn i\n}\n\nfunc (io *Io) NextFloat() float64 {\n\ti, err := strconv.ParseFloat(io.Next(), 64)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn i\n}\n\nfunc (io *Io) Println(a ...interface{}) {\n\tfmt.Fprintln(io.writer, a...)\n}\n\nfunc (io *Io) Printf(format string, a ...interface{}) {\n\tfmt.Fprintf(io.writer, format, a...)\n}\n\nfunc (io *Io) PrintIntSlice(a []int) {\n\tb := []interface{}{}\n\tfor _, x := range a {\n\t\tb = append(b, x)\n\t}\n\tio.Println(b...)\n}\n\nfunc (io *Io) PrintStringSlice(a []string) {\n\tb := []interface{}{}\n\tfor _, x := range a {\n\t\tb = append(b, x)\n\t}\n\tio.Println(b...)\n}\n\nfunc Log(name string, value interface{}) {\n\tfmt.Fprintf(os.Stderr, \"%s=%+v\\n\", name, value)\n}\n\nfunc ExampleIo() {\n\tio := NewIo()\n\tdefer io.Flush()\n\ta := make([]int, 0, 3)\n\ta[0], a[1], a[2] = io.NextInt(), io.NextInt(), io.NextInt()\n\tio.Println(a)\n\tio.PrintIntSlice(a)\n\tLog(\"io\", a)\n}\n\n"
  },
  {
    "language": "Python",
    "code": "# AOJ 2883: Proof of Knowledge\n# Python3 2018.7.11 bal4u\n\ndef calc(a, b, c, d, i):\n    global S\n    if S[i] == '[':\n        op = S[i+1]\n        if S[i+2] == '[': v1, i = calc(a, b, c, d, i+2)\n        else:\n            if S[i+2] == 'a': v1 = a\n            elif S[i+2] == 'b': v1 = b\n            elif S[i+2] == 'c': v1 = c\n            else: v1 = d\n            i += 3\n\n        if S[i] == '[': v2, i = calc(a, b, c, d, i)\n        else:\n            if S[i] == 'a': v2 = a\n            elif S[i] == 'b': v2 = b\n            elif S[i] == 'c': v2 = c\n            else: v2 = d\n            i += 2\n        if op == '+': ans = v1 | v2\n        elif op == '*': ans = v1 & v2\n        else: ans = v1 ^ v2\n    else:\n        if S[i] == 'a': ans = a\n        elif S[i] == 'b': ans = b\n        elif S[i] == 'c': ans = c\n        else: ans = d\n        i += 1\n    while i < len(S) and S[i] == ']': i += 1\n    return [ans, i]\n\nwhile True:\n    S = input()\n    if S == '.': break\n    P = input()\n    a, b, c, d = map(int, list(P))\n    val, cnt = calc(a, b, c, d, 0)[0], 0\n    for a in range(0, 10):\n        for b in range(0, 10):\n            for c in range(0, 10):\n                for d in range(0, 10):\n                    if calc(a, b, c, d, 0)[0] == val: cnt += 1\n    print(val, cnt)\n\n"
  },
  {
    "language": "Python",
    "code": "import sys,functools\nif sys.version_info[0]>=3:\n\tmaketrans=str.maketrans\nelse:\n\tfrom string import maketrans\n\nO=lambda a:lambda b:a|b\nA=lambda a:lambda b:a&b\nX=lambda a:lambda b:a^b\nwhile True:\n\ts=sys.stdin.readline().rstrip().translate(maketrans('+*^[]','OAX()'))\n\tif s=='.': break\n\tfor c in 'abcd': s=s.replace(c,'(%s)'%c)\n\ts=s[1:-1]\n\tn=int(sys.stdin.readline())\n\tr=eval(s.translate(maketrans('abcd','%04d'%n)))\n\tprint('%d %d'%(r,sum(r==eval(s.translate(maketrans('abcd','%04d'%i))) for i in range(10000))))\n"
  },
  {
    "language": "Python",
    "code": "import sys,functools\nif sys.version_info[0]>=3:\n\tmaketrans=str.maketrans\nelse:\n\tfrom string import maketrans\n\nO=lambda a:lambda b:a|b\nA=lambda a:lambda b:a&b\nX=lambda a:lambda b:a^b\nwhile True:\n\ts=sys.stdin.readline().rstrip().translate(maketrans('+*^[]','OAX()'))\n\tif s=='.': break\n\tfor c in 'abcd': s=s.replace(c,'(%s)'%c)\n\ts=s[1:-1]\n\tn=int(sys.stdin.readline())\n\tr=eval(s.translate(maketrans('abcd','%04d'%n)))\n\tprint('%d %d'%(r,sum(r==eval(s.translate(maketrans('abcd','%04d'%i))) for i in range(10000))))\n"
  },
  {
    "language": "Python",
    "code": "def solve(s,p):\n    if s[0]!='[':\n        return[p//1000,p//100%10,p//10%10,p%10][ord(s[0])-ord('a')]\n    i=3\n    while s.count('[',2,i)!=s.count(']',2,i):\n        i+=1\n    j=i+1\n    while s.count('[',i,j)!=s.count(']',i,j):\n        j+=1\n    l=solve(s[2:i])\n    r=solve(s[i:j])\n    if s[1]=='+':\n        return l|r\n    elif s[1]=='*':\n        return l&r\n    else:\n        return l^r\nwhile True:\n    s=input()\n    if s=='.':break\n    p=int(input())\n    a=solve(s,p)\n    c=0\n    for i in range(10000):\n        if solve(s,i)==a:\n            c+=1\n    print(a,c)\n"
  },
  {
    "language": "Python",
    "code": "def solve(s,p):\n    if s[0]!='[':\n        return[p//1000,p//100%10,p//10%10,p%10][ord(s[0])-ord('a')]\n    i=3\n    while s.count('[',2,i)!=s.count(']',2,i):\n        i+=1\n    j=i+1\n    while s.count('[',i,j)!=s.count(']',i,j):\n        j+=1\n    l=solve(s[2:i],p)\n    r=solve(s[i:j],p)\n    if s[1]=='+':\n        return l|r\n    elif s[1]=='*':\n        return l&r\n    else:\n        return l^r\nwhile True:\n    s=input()\n    if s=='.':break\n    p=int(input())\n    a=solve(s,p)\n    c=0\n    for i in range(10000):\n        if solve(s,i)==a:\n            c+=1\n    print(a,c)\n"
  },
  {
    "language": "Python",
    "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    rr = []\n\n    def f(s):\n        t = [int(c) for c in S()]\n        a = [t[ord(c) - ord('a')] if c in 'abcd' else c for c in s]\n\n        def ff(a):\n            if len(a) == 1:\n                return a[0]\n            l = len(a)\n            for i in range(l-4):\n                if a[i] == '[' and a[i+4] == ']':\n                    op = a[i+1]\n                    b = a[i+2]\n                    c = a[i+3]\n                    t = -1\n                    if op == '+':\n                        t = b | c\n                    elif op == '*':\n                        t = b & c\n                    elif op == '^':\n                        t = b ^ c\n                    return ff(a[:i] + [t] + a[i+5:])\n            return -1\n\n        r = ff(a)\n        c = 0\n        for k in range(10000):\n            tt = [k//(10**i)%10 for i in range(4)]\n            aa = [tt[ord(c) - ord('a')] if c in 'abcd' else c for c in s]\n            kk = ff(aa)\n            if kk == r:\n                c += 1\n        return '{} {}'.format(r,c)\n\n    while 1:\n        n = S()\n        if n == '.':\n            break\n        rr.append(f(n))\n\n    return '\\n'.join(map(str, rr))\n\n\nprint(main())\n\n"
  },
  {
    "language": "Python",
    "code": "import sys\ninput = sys.stdin.readline\n\ndef hash(a, b, c, d, f, start, end):\n    i = start + 1\n    while i < end:\n        if f[i] in \"+^*\":\n            i += 1\n            if f[i] == \"a\":\n                tmp1 = a\n            elif f[i] == \"b\":\n                tmp1 = b\n            elif f[i] == \"c\":\n                tmp1 = c\n            elif f[i] == \"d\":\n                tmp1 = d\n            elif f[i] == \"[\":\n                i, tmp1 = hash(a,b,c,d,f,i,end)\n            i += 1\n            if f[i] == \"a\":\n                tmp2 = a\n            elif f[i] == \"b\":\n                tmp2 = b\n            elif f[i] == \"c\":\n                tmp2 = c\n            elif f[i] == \"d\":\n                tmp2 = d\n            elif f[i] == \"[\":\n                i, tmp2 = hash(a,b,c,d,f,i,end)\n            if f[start+1] == \"+\":\n                return i+1, tmp1 | tmp2\n            elif f[start+1] == \"^\":\n                return i+1, tmp1 ^ tmp2\n            elif f[start+1] == \"*\":\n                return i+1, tmp1 & tmp2\n\n\ndef main():\n    while True:\n        s = input().strip()\n        if s[0] == \".\":\n            break\n        p = input().strip()\n        a = int(p[0])\n        b = int(p[1])\n        c = int(p[2])\n        d = int(p[3])\n        if s[0] in \"abcd\":\n            if s[0] == 'a':\n                print(a, 1000)\n            elif s[0] == 'b':\n                print(b, 1000)\n            elif s[0] == 'c':\n                print(c, 1000)\n            elif s[0] == 'd':\n                print(d, 1000)\n            #print(int(p['s[0]' - 'a']), 1)\n            continue\n        _,ans1 = hash(a,b,c,d,s,0,len(s))\n        count = 0\n        for a in range(10):\n            for b in range(10):\n                for c in range(10):\n                    for d in range(10):\n                        _, x = hash(a,b,c,d,s,0,len(s))\n                        if x == ans1:\n                            count += 1\n        print(ans1, count)\n\nif __name__ == \"__main__\":\n    main()\n\n"
  },
  {
    "language": "Python",
    "code": "def solve(s,p):\n    if s[0]!='[':\n        return[p//1000,p//100%10,p//10%10,p%10][ord(s[0])-ord('a')]\n    i=3\n    cs=[0,1][s[2]=='[']\n    ce=0\n    while cs!=ce:\n        if s[i]=='[':\n            cs+=1\n        elif s[i]==']':\n            ce+=1\n        i+=1\n    j=i+1\n    cs=[0,1][s[i]=='[']\n    ce=0\n    while cs!=ce:\n        if s[j]=='[':\n            cs+=1\n        elif s[j]==']':\n            ce+=1\n        j+=1\n    l=solve(s[2:i],p)\n    r=solve(s[i:j],p)\n    if s[1]=='+':\n        return l|r\n    elif s[1]=='*':\n        return l&r\n    else:\n        return l^r\nwhile True:\n    s=input()\n    if s=='.':break\n    p=int(input())\n    a=solve(s,p)\n    c=0\n    for i in range(10000):\n        if solve(s,i)==a:\n            c+=1\n    print(a,c)\n"
  },
  {
    "language": "Python",
    "code": "def parse_hash(s, pointer):\n  head = s[pointer]\n  if head == \"[\":\n    pointer += 1\n    op, pointer = parse_op(s, pointer)\n    h1, pointer = parse_hash(s, pointer)\n    h2, pointer = parse_hash(s, pointer)\n    return calc(op, h1, h2), pointer + 1\n  else:\n    l, pointer = parse_letter(s, pointer)\n    return l, pointer\n \ndef parse_op(s, pointer):\n  return s[pointer], pointer + 1\n\ndef parse_letter(s, pointer):\n  return int(s[pointer]), pointer + 1\n\ndef calc(op, h1, h2):\n  if op == \"+\":\n    return h1 | h2\n  if op == \"*\":\n    return h1 & h2\n  if op == \"^\":\n    return h1 ^ h2\n\nfrom collections import defaultdict\nfrom itertools import product\nwhile True:\n  s = input()\n  if s == \".\":break\n  p = input()\n  score = defaultdict(int)\n  nums = [chr(i) for i in range(ord(\"0\"), ord(\"9\") + 1)]\n  for a, b, c, d in product(nums, repeat=4):\n    temp = s.replace(\"a\", a)\n    temp = temp.replace(\"b\", b)\n    temp = temp.replace(\"c\", c)\n    temp = temp.replace(\"d\", d)\n    score[parse_hash(temp, 0)[0]] += 1\n  \n  for i in range(4):\n    s = s.replace(chr(ord(\"a\") + i), p[i])\n  hs = parse_hash(s, 0)\n  print(hs[0], score[hs[0]])\n"
  },
  {
    "language": "Python",
    "code": "# AOJ 2883: Proof of Knowledge\n# Python3 2018.7.11 bal4u\n\ndef calc(a, b, c, d, i):\n    global S\n    if S[i] == '[':\n        op = S[i+1]\n        if S[i+2] == '[': v1, i = calc(a, b, c, d, i+2)\n        else:\n            if S[i+2] == 'a': v1 = a\n            elif S[i+2] == 'b': v1 = b\n            elif S[i+2] == 'c': v1 = c\n            else: v1 = d\n            i += 3\n\n        if S[i] == '[': v2, i = calc(a, b, c, d, i)\n        else:\n            if S[i] == 'a': v2 = a\n            elif S[i] == 'b': v2 = b\n            elif S[i] == 'c': v2 = c\n            else: v2 = d\n            i += 2\n        if op == '+': ans = v1 | v2\n        elif op == '*': ans = v1 & v2\n        else: ans = v1 ^ v2\n    else:\n        if S[i] == 'a': ans = a\n        elif S[i] == 'b': ans = b\n        elif S[i] == 'c': ans = c\n        else: ans = d\n        i += 1\n    return [ans, i]\n\nwhile True:\n    S = input()\n    if S == '.': break\n    P = input()\n    a, b, c, d = map(int, list(P))\n    val, cnt = calc(a, b, c, d, 0)[0], 0\n    for a in range(0, 10):\n        for b in range(0, 10):\n            for c in range(0, 10):\n                for d in range(0, 10):\n                    if calc(a, b, c, d, 0)[0] == val: cnt += 1\n    print(val, cnt)\n\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS():return list(map(list, sys.stdin.readline().split()))\ndef S(): return list(sys.stdin.readline())[:-1]\ndef IR(n):\n    l = [None for i in range(n)]\n    for i in range(n):l[i] = I()\n    return l\ndef LIR(n):\n    l = [None for i in range(n)]\n    for i in range(n):l[i] = LI()\n    return l\ndef SR(n):\n    l = [None for i in range(n)]\n    for i in range(n):l[i] = S()\n    return l\ndef LSR(n):\n    l = [None for i in range(n)]\n    for i in range(n):l[i] = LS()\n    return l\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\n#A\ndef A():\n    def parse_hash(s,i):\n        if s[i] == \"[\":\n            i += 1\n            op,i = parse_op(s,i)\n            h1,i = parse_hash(s,i)\n            h2,i = parse_hash(s,i)\n            i += 1\n            return calc(op,h1,h2),i\n        else:\n            return parse_letter(s,i)\n\n    def parse_op(s,i):\n        return s[i],i+1\n\n    def parse_letter(s,i):\n        return s[i],i+1\n\n    def calc(op,h1,h2):\n        if op == \"+\":\n            return h1|h2\n        elif op == \"*\":\n            return h1&h2\n        else:\n            return h1^h2\n\n    while 1:\n        s = S()\n        if s[0] == \".\":\n            break\n        t = S()\n        n = len(s)\n        s0 = [s[i] for i in range(n)]\n        for i in range(n):\n            if s0[i] == \"a\":\n                s0[i] = int(t[0])\n            elif s0[i] == \"b\":\n                s0[i] = int(t[1])\n            elif s0[i] == \"c\":\n                s0[i] = int(t[2])\n            elif s0[i] == \"d\":\n                s0[i] = int(t[3])\n        p = parse_hash(s0,0)[0]\n        ans = 0\n        for a in range(10):\n            for b in range(10):\n                for c in range(10):\n                    for d in range(10):\n                        s0 = [s[i] for i in range(n)]\n                        for i in range(n):\n                            if s0[i] == \"a\":\n                                s0[i] = a\n                            elif s0[i] == \"b\":\n                                s0[i] = b\n                            elif s0[i] == \"c\":\n                                s0[i] = c\n                            elif s0[i] == \"d\":\n                                s0[i] = d\n                        p0 = parse_hash(s0,0)[0]\n                        if p == p0:\n                            ans += 1\n        print(p,ans)\n\n    return\n\n#B\ndef B():\n    return\n\n#C\ndef C():\n    return\n\n#D\ndef D():\n    return\n\n#E\ndef E():\n    return\n\n#F\ndef F():\n    return\n\n#G\ndef G():\n    return\n\n#H\ndef H():\n    return\n\n#I\ndef I_():\n    return\n\n#J\ndef J():\n    return\n\n#Solve\nif __name__ == \"__main__\":\n    A()\n\n"
  },
  {
    "language": "Python",
    "code": "def solve(s,p):\n    if s[0]!='[':\n        return[p//1000,p//100%10,p//10%10,p%10][ord(s[0])-ord('a')]\n    i=3\n    cs=s[2]=='['\n    ce=0\n    while cs!=ce:\n        if s[i]=='[':\n            cs+=1\n        elif s[i]==']':\n            ce+=1\n        i+=1\n    j=i+1\n    cs=s[i]=='['\n    ce=0\n    while cs!=ce:\n        if s[j]=='[':\n            cs+=1\n        elif s[j]==']':\n            ce+=1\n        j+=1\n    l=solve(s[2:i],p)\n    r=solve(s[i:j],p)\n    if s[1]=='+':\n        return l|r\n    elif s[1]=='*':\n        return l&r\n    else:\n        return l^r\nwhile True:\n    s=input()\n    if s=='.':break\n    p=int(input())\n    a=solve(s,p)\n    c=0\n    for i in range(10000):\n        if solve(s,i)==a:\n            c+=1\n    print(a,c)\n"
  },
  {
    "language": "Python",
    "code": "def solve(s,p):\n    if s[0]!='[':\n        return[p//1000,p//100%10,p//10%10,p%10][ord(s[0])-ord('a')]\n    i=3\n    while s.count('[',2,i)!=s.count(']',2,i):\n        i+=1\n    j=i+1\n    while s.count('[',i,j)!=s.count(']',i,j):\n        j+=1\n    l=solve(s[2:i],p)\n    r=solve(s[i:j],p)\n    if s[1]=='+':\n        return l|r\n    elif s[1]=='*':\n        return l&r\n    else:\n        return l^r\nwhile True:\n    s=input()\n    if s=='.':break\n    p=int(input())\n    a=solve(s,p)\n    c=0\n    for i in range(10000):\n        if solve(s,i)==a:\n            c+=1\n    print(a,c)\n"
  },
  {
    "language": "Python",
    "code": "import sys\nsys.setrecursionlimit(1000000)\nfrom operator import *\n\nops = {'+':lambda x1, x2: x1 | x2, '*': lambda x1, x2: x1 & x2, '^': lambda x1, x2: x1 ^ x2}\n\ndef f(op, s1, s2):\n    return ops[op](s1, s2)\n\ndef toN(s, numbers):\n    for abc, number in zip(letters, list(numbers)):\n        s = s.replace(abc, number)\n    return s\n\nletters = list(\"abcd\")\ndef solve(S, P):\n    origin = S\n    S = S.replace('[', 'f(')\n    S = S.replace(']', '),')\n    for k in ops.keys():\n        S = S.replace(k, \"'\" + k + \"',\")\n    for l in letters:\n        S = S.replace(l, l + \",\")\n    transed = S\n\n    # print(S)\n    res = eval(toN(S, P))[0]\n    print(res, end=' ')\n    count = 0\n    for i in range(10000):\n        if res == eval(toN(S, \"{:04d}\".format(i)))[0]:\n            count += 1\n    \n    print(count)\n\nwhile True:\n    S = input()\n    if S == '.':\n        break\n    P = input()\n    solve(S, P)\n"
  }
]