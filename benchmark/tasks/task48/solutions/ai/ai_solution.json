[
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "Python",
    "code": "def count_unique_weights(n):\n    weights = set()\n    \n    # Generate all possible splits\n    def generate_splits(remaining, current_split, first_elem):\n        if remaining == 0:\n            # Calculate weight of current split\n            weight = current_split.count(first_elem)\n            weights.add(weight)\n            return\n        \n        # Iterate through possible first elements of next part\n        start = 1 if not current_split else min(current_split[-1], remaining)\n        for i in range(start, remaining + 1):\n            generate_splits(remaining - i, current_split + [i], first_elem or i)\n    \n    generate_splits(n, [], 0)\n    return len(weights)\n\n# Read input\nn = int(input())\n\n# Output result\nprint(count_unique_weights(n))",
    "timestamp": "2025-08-05 17:33:09"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "Python",
    "code": "n = int(input())\nprint((n // 2) + 1)",
    "timestamp": "2025-08-05 17:33:13"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def count_weights(n):\n    weights = set()\n    for k in range(1, n + 1):\n        if n % k == 0:\n            weights.add(k)\n    return len(weights)\n\nn = int(input().strip())\nprint(count_weights(n))",
    "timestamp": "2025-08-12 21:55:01"
  }
]