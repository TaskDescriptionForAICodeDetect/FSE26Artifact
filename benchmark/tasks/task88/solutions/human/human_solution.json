[
  {
    "language": "Scala",
    "code": "import scala.annotation.tailrec\nimport scala.collection.mutable\n\nobject Main extends App {\n\n  import scala.io.StdIn._\n\n  solve\n  @tailrec\n  def solve: Unit = {\n    val record = readLine.trim\n    if (record == \"0\") return\n    val color = Color(record.drop(1))\n    val colorName = Array(\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\")\n    val colors = Array(\"000000\", \"0000ff\", \"00ff00\", \"00ffff\", \"ff0000\", \"ff00ff\", \"ffff00\", \"ffffff\").map(Color(_))\n    println(colors.indices.minBy(i ⇒ colors(i).distance(color)).let(colorName(_)))\n    solve\n  }\n  object Color{\n    def apply(expression: String): Color = Color(Integer.parseInt(expression.take(2), 16), Integer.parseInt(expression.drop(2).take(2), 16), Integer.parseInt(expression.drop(4), 16))\n  }\n  case class Color(red: Int, green: Int, blue: Int) {\n    def distance(that: Color): Double = math.sqrt((red - that.red).let{it ⇒ it * it} + (green - that.green).let{it ⇒ it * it} + (blue - that.blue).let{it ⇒ it * it})\n  }\n\n  implicit class Extension[T](value :T){\n    @inline\n    def let[A](@inline func: T ⇒ A): A = func(value)\n    @inline\n    def also(@inline func: T ⇒ Unit): T = {func(value); value}\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\n#define sq(a) ((a)*(a))\nusing namespace std;\n\nint Conv(char c1, char c2){\n\treturn (c1-'0')*0x10 + (c2-'0');\n}\nint dist(int R, int G, int B, int rR, int rG, int rB){\n\treturn sq(R-rR) + sq(G-rG) + sq(B-rB);\n}\nstring judge(int R, int G, int B ){\n\tint min_dist = 1<<30;\n\tstring color;\n\n\tint r;\n\t\n\tr = dist( R, G, B, 0, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"black\";\n\t}\n\tr = dist( R, G, B, 0, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"blue\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"lime\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"aqua\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"red\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"fuchsia\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"yellow\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"white\";\n\t}\n\treturn color;\n}\n\nint main(){\n\twhile( true ){\n\t\tint R;\n\t\tint G;\n\t\tint B;\n\t\tstring s;\n\t\tcin>>s;\n\t\tif(s.compare(\"0\")==0)break;\n\t\tR = Conv(s[1],s[2]); G = Conv(s[3],s[4]); B = Conv(s[5],s[6]);\n\t\tcout << judge(R,G,B) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\nusing namespace std;\n\n#define loop(i,a,b) for(int i = a ; i < b ; i ++)\n#define rep(i,a) loop(i,0,a)\nint stoi(char c){\n  if('0' <= c && c <= '9')\n    return c - '0';\n  return c - 'a' + 10;\n}\n\nint pow(int n){\n  return n * n;\n}\n\nint main(void){\n  string s;\n  string ans[8] = {\n    \"black\",//\t00\t00\t00\n    \"blue\",//\t00\t00\tff\n    \"lime\",//\t00\tff\t00\n    \"aqua\",//\t00\tff\tff\n    \"red\",//\tff\t00\t00\n    \"fuchsia\",//\tff\t00\tff\n    \"yellow\",//\tff\tff\t00\n    \"white\"//\tff\tff\tff\n  };\n  int num[8];\n  int cnt = 0;\n  rep(i,8)num[i] = i * 255;     \n  //rep(i,8)cout<<ans[i] << \" \"<<num[i]<<endl;\n  while(cin>>s){\n    if(s == \"0\")break;\n    int in[3];\n    in[0] = stoi(s[1]) * 16 + stoi(s[2]);\n    in[1] = stoi(s[3]) * 16 + stoi(s[4]);\n    in[2] = stoi(s[5]) * 16 + stoi(s[6]);\n    //rep(i,3)cout<<in[i]<<endl;\n    int index = 0;\n    unsigned long long diff = 100000000;\n    rep(i,8){\n      //cout<<i<<(i>>2)%2<<\" \"<<(i>>1)%2<<\" \"<<(i%2)<<endl;\n   \n\n      int box[3];\n      rep(j,3){\n\tbox[j] = (i>>(2-j))%2*255;\n\t//cout<<(i>>(2-j))%2*255<<\" \";\n      }\n      //rep(j,3)cout<<in[j]<<\" \";cout<<\" \"<<endl;\n      \n     \n      unsigned long long int calc = 0;\n      rep(j,3)calc += pow(in[j] - box[j]);\n      calc = sqrt(calc);\n\t\n\t\t\t\t\t\t\t\t\t/*\n      unsigned long long int calc = sqrt(\t\t\t\t\n\t\t\t\t\t pow(in[0]-(i>>2%2) * 255) + \n\t\t\t\t\t pow(in[1]-(i>>1%2) * 255) + \n\t\t\t\t\t pow(in[2]-(i>>0%2) * 255) \n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t//*/\n      if(calc < diff){\n\tdiff = calc;\n\tindex = i;\n\t//cout<<\"change\"<<ans[i]<<endl;\n      }\n      //cout<<calc<<endl;\n\n       //*/\n    }\n    cout<<ans[index]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nstring str;\nstring ta[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\n\t\t\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nstring tb[8] = {\"#000000\",\"#0000ff\",\"#00ff00\",\"#00ffff\",\n                \"#ff0000\",\"#ff00ff\",\"#ffff00\",\"#ffffff\"};\nint tab[8];\nint mini,miniNo;\n\n/*\nstring d(int in){\n  if(in==0)return \"0\";  if(in==8)return \"8\";\n  if(in==1)return \"1\";  if(in==9)return \"9\";\n  if(in==2)return \"2\";  if(in==15)return \"f\";\n  if(in==3)return \"3\";  if(in==14)return \"e\";\n  if(in==4)return \"4\";  if(in==13)return \"d\";\n  if(in==5)return \"5\";  if(in==12)return \"c\";\n  if(in==6)return \"6\";  if(in==11)return \"b\";\n  if(in==7)return \"7\";  if(in==1.)return \"a\";\n}\n*/\nint c(char ch){\n  if('a'<=ch&&ch<='f')return 10+(ch-'a');\n  return ch-'0';\n}\n\nint b(string x,string y){\n  int X = c(x[0])*16 + c(x[1]);\n  int Y = c(y[0])*16 + c(y[1]);\n  int Z = X - Y;\n  //string z= d(Z/16)+d(Z%16);\n  return Z*Z;\n}\nstring compute(){\n  \n}\nint main(){\n  while(1){\n    mini=99999;\n    cin>>str;\n    if(str==\"0\")break;\n    for(int i=0;i<8;i++){\n      tab[i] =b( tb[i].substr(1,2) , str.substr(1,2) );\n      tab[i]+=b( tb[i].substr(3,2) , str.substr(3,2) );\n      tab[i]+=b( tb[i].substr(5,2) , str.substr(5,2) );\n      if(mini>tab[i]){\n\tmini=tab[i];\n\tminiNo=i;\n      }\n    }\n    cout<<ta[miniNo]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S, x[2][2][2] = { {{\"black\",\"blue\"}, {\"lime\",\"aqua\"}}, { {\"red\",\"fuchsia\"} {\"yellow\",\"white\"} } };\nchar T[9] = \"89abcdef\";\nint a, b, c;\nint main() {\n\twhile (true) {\n\t\ta = 0; b = 0; c = 0;\n\t\tcin >> S;\n\t\tif (S == \"0\") { break; }\n\t\tfor (int i = 0; i < 8; i++){\n\t\t\tif (T[i] == S[1]) {\n\t\t\t\ta = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[3]) {\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[5]) {\n\t\t\t\tc = 1;\n\t\t\t}\n\t\t}\n\t\tcout << x[a][b][c] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring s;\nstring color() {\n\tchar l[6];\n\tfor (int i = 0; i < 6; i++) {\n\t\tl[i] = s[i + 1];\n\t}\n\tint r, g, b;\n\tint z[6];\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (l[i] == '0') {\n\t\t\tz[i] = 0;\n\t\t}\n\t\telse if (l[i] == '1') {\n\t\t\tz[i] = 1;\n\t\t}\n\t\telse if (l[i] == '2') {\n\t\t\tz[i] = 2;\n\t\t}\n\t\telse if (l[i] == '3') {\n\t\t\tz[i] = 3;\n\t\t}\n\t\telse if (l[i] == '4') {\n\t\t\tz[i] = 4;\n\t\t}\n\t\telse if (l[i] == '5') {\n\t\t\tz[i] = 5;\n\t\t}\n\t\telse if (l[i] == '6') {\n\t\t\tz[i] = 6;\n\t\t}\n\t\telse if (l[i] == '7') {\n\t\t\tz[i] = 7;\n\t\t}\n\t\telse if (l[i] == '8') {\n\t\t\tz[i] = 8;\n\t\t}\n\t\telse if (l[i] == '9') {\n\t\t\tz[i] = 9;\n\t\t}\n\t\telse if (l[i] == 'a') {\n\t\t\tz[i] = 10;\n\t\t}\n\t\telse if (l[i] == 'b') {\n\t\t\tz[i] = 11;\n\t\t}\n\t\telse if (l[i] == 'c') {\n\t\t\tz[i] = 12;\n\t\t}\n\t\telse if (l[i] == 'd') {\n\t\t\tz[i] = 13;\n\t\t}\n\t\telse if (l[i] == 'e') {\n\t\t\tz[i] = 14;\n\t\t}\n\t\telse if (l[i] == 'f') {\n\t\t\tz[i] = 15;\n\t\t}\n\t}\n\tr = z[0] * 16 + z[1];\n\tg = z[2] * 16 + z[3];\n\tb = z[4] * 16 + z[5];\n\tif (r <= 127) {\n\t\tif (g <= 127) {\n\t\t\tif (b <= 127) {\n\t\t\t\treturn \"black\";\n\t\t\t}else {\n\t\t\t\treturn \"blue\";\n\t\t\t}\n\t\t}else if (b <= 127) {\n\t\t\t\treturn \"lime\";\n\t\t\t  }else {\n\t\t\t\treturn \"aqua\";\n\t\t\t  }\n\t}\n\telse if (g <= 127) {\n\t\t\tif (b <= 127) {\n\t\t\t\treturn \"red\";\n\t\t\t}else{\n\t\t\t\treturn \"fuchsia\";\n\t\t\t}\n\t\t}\n\t\telse if (b <= 127) {\n\t\t\t\treturn \"yellow\";\n\t\t\t}else{\n\t\t\t\treturn \"white\";\n\t\t\t}\n}\n\nint main() {\n\tstring g[1001];\n\tint x;\n\tfor (int i = 0;; i++){\n\t\tcin >> s;\n\t\tif (s == \"0\") {\n\t\t\tx = i;\n\t\t\tbreak;\n\t\t}\n\t\tg[i] = color();\n\t}\n\tfor (int i = 0; i < x; i++){\n\t\tcout << g[i] << endl;\n\t}\n\tchar c;\n\tcin >> c;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<unordered_map>\n#include<cmath>\nusing namespace std;\ntypedef long long int lli;\nunordered_map<char, int> h;\n\nlli calc(char a, char b){\n  return h[a]*16 + h[b];\n}\n\nlli calc(string s){\n  lli res = 0;\n  for (lli i = 0; i < 3; i++) {\n    res *= (16*16);\n    res += calc(s[2*i + 1], s[2*i + 2]);\n  }\n  return res;\n}\n\nint main(){\n  string s;\n  h['0'] = 0;\n  h['1'] = 1;\n  h['2'] = 2;\n  h['3'] = 3;\n  h['4'] = 4;\n  h['5'] = 5;\n  h['6'] = 6;\n  h['7'] = 7;\n  h['8'] = 8;\n  h['9'] = 9;\n  h['a'] = 10;\n  h['b'] = 11;\n  h['c'] = 12;\n  h['d'] = 13;\n  h['e'] = 14;\n  h['f'] = 15;\n  vector<lli> val(8);\n  string color[] = {\"#000000\",\n                    \"#0000ff\",\n                    \"#00ff00\",\n                    \"#00ffff\",\n                    \"#ff0000\",\n                    \"#ff00ff\",\n                    \"#ffff00\",\n                    \"#ffffff\"};\n  string name[] = {\"black\",\n                   \"blue\",\n                   \"lime\",\n                   \"aqua\",\n                   \"red\",\n                   \"fuchsia\",\n                   \"yellow\",\n                   \"white\"};\n  for (int i = 0; i < 8; i++) {\n    val[i] = calc(color[i]);\n  }\n  while(std::cin >> s, s != \"0\"){\n    lli diff = 1e18, ans = -1;\n    for (int i = 0; i < 8; i++) {\n      lli hoge = 0;\n      for (int j = 0; j < 3; j++) {\n        int tmp = 0;\n        tmp = calc(s[2*j + 1], s[2*j + 2]) -\n          calc(color[i][2*j + 1], color[i][2*j + 2]);\n        tmp *= tmp;\n        hoge += tmp;\n      }\n      if(diff > hoge){\n        diff = hoge;\n        ans = i;\n      }\n    }\n    std::cout << name[ans] << std::endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nconst char* color[] = {\n\t\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nconst int RGB[][ 3 ] = {\n\t{ 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 255 },\n\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t{ 255, 255, 0 }, { 255, 255, 255 },\n};\n\nint xtod( char* c )\n{\n\tint ret = 0;\n\tint mag = 16;\n\tfor( int i = 0; i < 2; ++i, ++c ){\n\t\tint d = 0;\n\t\tif( *c >= '0' && *c <= '9' ){\n\t\t\td = *c - '0';\n\t\t}else{\n\t\t\td = *c - 'a' + 10;\n\t\t}\n\t\tret += ( d * mag );\n\t\tmag /= 16;\n\t}\n\treturn ret;\n}\n\nint distance( const int* o, int* x )\n{\n\tint dd[ 3 ];\n\tfor( int i = 0; i < 3; ++i ){\n\t\tdd[ i ] = x[ i ] - o[ i ];\n\t\tdd[ i ] *= dd[ i ];\n\t}\n\treturn dd[ 0 ] + dd[ 1 ] + dd[ 2 ];\n}\n\nint main()\n{\n\tchar col[ 8 ];\n\n\twhile( cin >> col && *col != '0' ){\n\t\tint n[ 3 ];\n\t\tfor( int i = 0; i < 3; ++i ){\n\t\t\tn[ i ] = xtod( col + ( 1 + i * 2 ) );\n\t\t}\n\t\tint d[ 8 ];\n\t\tfor( int i = 0; i < 8; ++i ){\n\t\t\td[ i ] = distance( RGB[ i ], n );\n\t\t}\n\t\tint ans = 0;\n\t\tint ansD = 200000;\n\t\tfor( int i = 0; i < 8; ++i ){\n\t\t\tif( d[ i ] < ansD ){\n\t\t\t\tans = i;\n\t\t\t\tansD = d[ i ];\n\t\t\t}\n\t\t}\n\t\tcout << color[ ans ] << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\n#include<cctype>\n#define sq(a) ((a)*(a))\nusing namespace std;\n\nint Conv(char c1, char c2){\n\tc1=toupper(c1);\n\tc2=toupper(c2);\n\treturn (c1-'0')*0x10 + (c2-'0');\n}\nint dist(int R, int G, int B, int rR, int rG, int rB){\n\treturn sq(R-rR) + sq(G-rG) + sq(B-rB);\n}\nstring judge(int R, int G, int B ){\n\tint min_dist = 1<<30;\n\tstring color;\n\n\tint r;\n\t\n\tr = dist( R, G, B, 0, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"black\";\n\t}\n\tr = dist( R, G, B, 0, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"blue\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"lime\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"aqua\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"red\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"fuchsia\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"yellow\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"white\";\n\t}\n\treturn color;\n}\n\nint main(){\n\twhile( true ){\n\t\tint R;\n\t\tint G;\n\t\tint B;\n\t\tstring s;\n\t\tcin>>s;\n\t\tif(s.compare(\"0\")==0)break;\n\t\tR = Conv(s[1],s[2]); G = Conv(s[3],s[4]); B = Conv(s[5],s[6]);\n\t\tcout << judge(R,G,B) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define range(i,a,b) for(int i = (a); i < (b); i++)\n#define rep(i,b) range(i,0,b)\n#define pb(a) push_back(a)\n#define all(a) (a).begin(), (a).end()\n#define debug(x) cout << \"debug \" << x << endl;\nusing namespace std;\n\nstruct color{\n    string name;\n    int r,g,b;\n};\n\nint xx(int a){ return a * a; }\n\nstring colorName(struct color c[8], int r, int g, int b){\n    int near = 99999;\n    string name;\n    rep(i,8){\n        int dis = sqrt(xx(r - c[i].r) + xx(g - c[i].g) + xx(b - c[i].b));\n        if(near > dis){\n            near = dis;\n            name = c[i].name;\n        }\n    }\n    return name;\n}\n\nint chenge(char a){\n    if(a >= '0' && a <= '9') return a - '0';\n    else return a - 'a' + 10;\n}\n\nint DecimalNumber(char c16[2]){\n    int c10 = 0;\n    rep(i,chenge(c16[0])){\n        c10 += 16;\n    }\n    c10+=chenge(c16[1]);\n    \n    return c10;\n}\n\n\nint main(){\n    struct color c[8] = {\n        {\"black\", 0, 0, 0},\n        {\"blue\", 0, 0, 255},\n        {\"lime\", 0, 255, 0},\n        {\"aqua\", 0, 255, 255},\n        {\"red\", 255, 0, 0},\n        {\"fuchsia\", 255, 0, 255},\n        {\"yellow\", 255, 255, 0},\n        {\"white\", 255, 255, 255}\n    };\n\n    char r[2],g[2],b[2],gar;\n    while(true){\n        int R,G,B;\n        cin >> gar;\n        if(gar == '0') break;\n        rep(i,2) cin >> r[i]; \n        rep(i,2) cin >> g[i]; \n        rep(i,2) cin >> b[i]; \n\n        R =  DecimalNumber(r);\n        G =  DecimalNumber(g);\n        B =  DecimalNumber(b);\n        cout << colorName(c,R,G,B) << endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cctype>\n#define sq(a) ((a)*(a))\nusing namespace std;\nint dist(int R, int G, int B, int rR, int rG, int rB){\n\treturn sq(R-rR) + sq(G-rG) + sq(B-rB);\n}\nstring judge(int R, int G, int B ){\n\tint min_dist = 1<<30;\n\tstring color;\n\n\tint r;\n\t\n\tr = dist( R, G, B, 0, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"black\";\n\t}\n\tr = dist( R, G, B, 0, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"blue\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"lime\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"aqua\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"red\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"fuchsia\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"yellow\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"white\";\n\t}\n\treturn color;\n}\n\nint main(){\n\twhile( true ){\n\t\tint R;\n\t\tint G;\n\t\tint B;\n\t\tchar c;\n\t\tstring s;\n\t\tscanf(\"%c\", &c);\n\t\tif( c=='0')break;\n\t\tscanf(\"%2x%2x%2x\", &R, &G, &B);\n\t\tgetline(cin,s);\n\t\tcout << judge(R,G,B) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\nusing namespace std;\n\nint main() {\n    vector<string> v{\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    string s;\n    while(cin >> s, s != \"0\") cout << v[4*(s[1]>'7')+2*(s[3]>'7')+1*(s[5]>'7')] << \"\\n\";\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "// AOJ 0176\n#include<algorithm>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<utility>\n\ntypedef std::pair<int, int> P;\n\nconst int INF = 1 << 30;\n\nconst int r[8] = { 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff },\n\t\t  g[8] = { 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff },\n\t\t  b[8] = { 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff };\n\nconst std::string cols[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\nint sqr( int x )\n{\n\treturn x * x;\n}\n\nint main()\n{\n\tstd::string s;\n\twhile( std::cin >> s, s != \"0\" )\n\t{\n\t\tstd::string t;\n\t\tfor( int i = 1; i != s.size(); ++i )\n\t\t{\n\t\t\tt += s[i];\n\t\t\tif( i % 2 == 0 && i < 6 )\n\t\t\t{\n\t\t\t\tt += ' ';\n\t\t\t}\n\t\t}\n\n\t\tstd::istringstream iss( t );\n\t\tint R, G, B;\n\t\tiss >> std::hex >> R >> G >> B;\n\n\t\tP ans( INF, INF );\n\t\tfor( int i = 0; i != 8; ++i )\n\t\t{\n\t\t\tint d = sqr( R - r[i] ) + sqr( G - g[i] ) + sqr( B - b[i] );\n\t\t\tans = std::min( ans, P( d, i ) );\n\t\t}\n\n\t\tstd::cout << cols[ans.second] << std::endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cfloat>\n#include<cmath>\nusing namespace std;\n\nint hexToDec(char x){\n    if('0' <= x && x <= '9'){\n        return x-'0';\n    }else{\n        return 10 + (x - 'a');\n    }\n}\n\nint data[8][3] = { {0, 0, 0}   , \n                   {0, 0, 255} , \n                   {0, 255, 0} ,\n                   {0, 255, 255} , \n                   {255, 0, 0} , \n                   {255, 0, 255} ,\n                   {255, 255, 0} , \n                   {255, 255, 255}};\n\nstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint main(){\n    while(1){\n        string s;\n        cin >> s;\n\n        if(s == \"0\")    break;\n    \n        int r, g, b;\n        r = 16 * hexToDec(s[1]) + hexToDec(s[2]);\n        g = 16 * hexToDec(s[3]) + hexToDec(s[4]);\n        b = 16 * hexToDec(s[5]) + hexToDec(s[6]);\n\n        double dist = DBL_MAX;\n        int ans;\n\n        for(int i = 0; i < 8; i++){\n            double tmp = sqrt(pow(r - data[i][0], 2.0) + pow(g - data[i][1], 2.0) + pow(b - data[i][2], 2.0));\n            if(tmp < dist){\n                dist = tmp;\n                ans = i;\n            }\n        }\n\n        cout << color[ans] << endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S, x[2][2][2] = { {{\"black\",\"blue\"}, {\"lime\",\"aqua\"}}, { {\"red\",\"fuchsia\"}, {\"yellow\",\"white\"} } };\nchar T[9] = \"89abcdef\";\nint a, b, c;\nint main() {\n\twhile (true) {\n\t\ta = 0; b = 0; c = 0;\n\t\tcin >> S;\n\t\tif (S == \"0\") { break; }\n\t\tfor (int i = 0; i < 8; i++){\n\t\t\tif (T[i] == S[1]) {\n\t\t\t\ta = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[3]) {\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[5]) {\n\t\t\t\tc = 1;\n\t\t\t}\n\t\t}\n\t\tcout << x[a][b][c] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    string color[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\n    for(;;){\n        string s;\n        cin >> s;\n        if(s == \"0\")\n            return 0;\n\n        int a[3] = {0};\n        for(int i=0; i<6; ++i){\n            a[i/2] *= 16;\n            if('0' <= s[i+1] && s[i+1] <= '9')\n                a[i/2] += s[i+1] - '0';\n            else\n                a[i/2] += s[i+1] - 'a' + 10;\n        }\n\n        int k;\n        int minD = INT_MAX;\n        for(int i=0; i<8; ++i){\n            int d = 0;\n            for(int j=0; j<3; ++j){\n                if(i & (1<<(2-j)))\n                    d += (255 - a[j]) * (255 - a[j]);\n                else\n                    d += a[j] * a[j];\n            }\n            if(d < minD){\n                minD = d;\n                k = i;\n            }\n        }\n\n        cout << color[k] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\ninline ll digit(char c) {\n    return '0' <= c && c <= '9' ? c - '0' : c - 'a' + 10;\n}\n\nint main() {\n\n    vector<string> clr = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n    vector<vector<ll>> clrv = {\n        {0, 0, 0},\n        {0, 0, 0xff},\n        {0, 0xff, 0},\n        {0, 0xff, 0xff},\n        {0xff, 0, 0},\n        {0xff, 0, 0xff},\n        {0xff, 0xff, 0},\n        {0xff, 0xff, 0xff}\n    };\n\n    string cl;\n    while (cin >> cl, cl != \"0\") {\n\n        ll r = digit(cl[1]) * 16 + digit(cl[2]);\n        ll g = digit(cl[3]) * 16 + digit(cl[4]);\n        ll b = digit(cl[5]) * 16 + digit(cl[6]);\n\n        ll d2min = 0x7FFFFFFFFFFFFFFFLL, did = -1;\n        for (ll i = 8; i--; ) {\n            ll dr = clrv[i][0] - r;\n            ll dg = clrv[i][1] - g;\n            ll db = clrv[i][2] - b;\n            ll d2 = dr*dr + dg*dg + db*db;\n            if (d2min > d2) {\n                d2min = d2;\n                did = i;\n            }\n        }\n        cout << clr[did] << \"\\n\";\n        \n    }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iomanip>\n#include <utility>\n#include <cstdlib>\n#include <sstream>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <ctime>\n#include <queue>\n#include <deque>\n#include <cmath>\n#include <stack>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n\n\nstring color[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nstring col[8]={\"000000\",\"0000ff\",\"00ff00\",\"00ffff\",\"ff0000\",\"ff00ff\",\"ffff00\",\"ffffff\"};\n\nint to(char ch){\n    if('0'<=ch && ch<='9')return ch-'0';\n    else return ch-'a'+10;\n}\n\nint solve(string s,int n){\n    string t=col[n];\n    \n    string a[3],b[3];\n    rep(i,3){\n        a[i]=s.substr(i*2,2);\n        b[i]=t.substr(i*2,2);\n    }\n    int x[3];\n    rep(i,3){\n        \n        x[i]=abs(  ( to(a[i][0])*16 + to(a[i][1]) ) -( to(b[i][0])*16 + to(b[i][1]) )  );\n    }\n    \n    return sqrt( pow(x[0],2)+pow(x[1],2)+pow(x[2],2) );\n}\n\n\nint main() {\n    string s;\n    while(cin>>s){\n        if(s==\"0\")break;\n        \n        s=s.substr(1,6);\n        \n        int mini=999999999;\n        int num=-1;\n        \n        \n        rep(i,8){\n            \n            if(mini>solve(s,i)){\n                num=i;\n                mini=solve(s,i);\n            }\n        }\n        \n        \n        \n        cout<<color[num]<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int sixteen[200]={};\n    for(int i=0;i<10;i++)sixteen[i]=i;\n    for(int i=0;i<6;i++){\n            sixteen['a'-'0'+i]=10+i;\n            sixteen['A'-'0'+i]=10+i;\n    }\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=sixteen[str[1+2*i]-'0']*16+sixteen[str[2+2*i]-'0'];\n        int ans[8]={};\n        for(int i=0;i<8;i++){\n            for(int j=0;j<3;j++)ans[i]+=pow(colornum[i][j]-num[j],2);\n            ans[i]=sqrt(ans[i]);\n        }\n        int co=0;\n        for(int i=1;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n#include <iomanip>\n#include <iterator>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair<int,int> Pii;\ntypedef pair<ll,ll> Pll;\n \n#define FOR(i,n) for(int i = 0; i < (n); i++)\n#define sz(c) ((int)c.size())\n\ntypedef unsigned long long ull;\nconst int INF = (int)1e8;\n\nstring out[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint main(){\n\tstring s;\n\twhile(cin>>s,s!=\"0\"){\n\t\tint t = 0;\n\t\tfor(int i = 1; i <= 6; i++){\n\t\t\tt *= 16;\n\t\t\tif('a' <= s[i] && s[i] <= 'f')\n\t\t\t\tt += s[i] - 'a' + 10;\n\t\t\telse\n\t\t\t\tt += s[i] - '0';\n\t\t}\n\t\tint id = -1;\n\t\tint ans = INF;\n\t\tFOR(i,8){\n\t\t\tint buf = t;\n\t\t\tint d = 0;\n\t\t\tFOR(j,3){\n\t\t\t\tint a = buf & 255;\n\t\t\t\tint b = (i&(1<<j)) ? 255 : 0;\n\t\t\t\td += (a-b)*(a-b);\n\t\t\t\tbuf /= 256;\n\t\t\t}\n\t\t\tif(ans > d){\n\t\t\t\tid = i;\n\t\t\t\tans = d;\n\t\t\t}\n\t\t}\n\t\tcout << out[id] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < (int)(n); i++)\n\nint code[8][3] = {\n    {0, 0, 0},\n    {0, 0, 255},\n    {0, 255, 0},\n    {0, 255, 255},\n    {255, 0, 0},\n    {255, 0, 255},\n    {255, 255, 0},\n    {255, 255, 255}\n};\nstring name[8] = {\"black\",\n                  \"blue\",\n                  \"lime\",\n                  \"aqua\",\n                  \"red\",\n                  \"fuchsia\",\n                  \"yellow\",\n                  \"white\"\n};\n\nint convert(string s){\n    int d;\n    sscanf(s.c_str(), \"%x\", &d);\n    return d;\n}\n\nint main(){\n    string line;\n    while(cin >> line && line[0] != '0'){\n        int r = convert(line.substr(1, 2));\n        int g = convert(line.substr(3, 2));\n        int b = convert(line.substr(5, 2));\n        int ans_dist = 1e9;\n        string ans = \"--\";\n        rep(i,8){\n            auto c = code[i];\n            int d = 0;\n            d += (r-c[0]) * (r-c[0]);\n            d += (g-c[1]) * (g-c[1]);\n            d += (b-c[2]) * (b-c[2]);\n            if(d < ans_dist){\n                ans_dist = d;\n                ans = name[i];\n            }\n        }\n        cout << ans << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define range(i,a,b) for(int i = (a); i < (b); i++)\n#define rep(i,b) range(i,0,b)\n#define pb(a) push_back(a)\n#define all(a) (a).begin(), (a).end()\n#define debug(x) cout << \"debug \" << x << endl;\nusing namespace std;\n\nstruct color{\n    string name;\n    int r,g,b;\n};\n\nint xx(int a){ return a * a; }\n\nstring colorName(struct color c[8], double r, double g, double b){\n    double near = 99999;\n    string name;\n    rep(i,8){\n        double dis = sqrt(xx(r - c[i].r) + xx(g - c[i].g) + xx(b - c[i].b));\n        if(near > dis){\n            near = dis;\n            name = c[i].name;\n        }\n    }\n    return name;\n}\n\nint chenge(char a){\n    if(a >= '0' && a <= '9') return a - '0';\n    else return a - 'a' + 10;\n}\n\nint DecimalNumber(char c16[2]){\n    int c10 = 0;\n    rep(i,chenge(c16[0])){\n        c10 += 16;\n    }\n    c10+=chenge(c16[1]);\n    \n    return c10;\n}\n\n\nint main(){\n    struct color c[8] = {\n        {\"black\", 0, 0, 0},\n        {\"blue\", 0, 0, 255},\n        {\"lime\", 0, 255, 0},\n        {\"aqua\", 0, 255, 255},\n        {\"red\", 255, 0, 0},\n        {\"fuchsia\", 255, 0, 255},\n        {\"yellow\", 255, 255, 0},\n        {\"white\", 255, 255, 255}\n    };\n\n    char r[2],g[2],b[2],gar;\n    while(true){\n        int R,G,B;\n        cin >> gar;\n        if(gar == '0') break;\n        rep(i,2) cin >> r[i]; \n        rep(i,2) cin >> g[i]; \n        rep(i,2) cin >> b[i]; \n\n        R =  DecimalNumber(r);\n        G =  DecimalNumber(g);\n        B =  DecimalNumber(b);\n        cout << colorName(c,static_cast<int>(R),static_cast<int>(G),static_cast<int>(B)) << endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nint hextoi(string S)\n{\n    int sum = 0;\n    \n    if(isdigit(S[0]))\n    {\n        sum += (S[0] - 48) * 16;\n    }\n    else\n    {\n        sum += (S[0] - 87) * 16;\n    }\n    if(isdigit(S[1]))\n    {\n        sum += S[1] - 48;\n    }\n    else\n    {\n        sum += S[1] - 97;\n    }\n    \n    return sum;\n}\n\nconst vector<string> color = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\nint main()\n{\n    string S;\n    \n    while(true)\n    {\n        cin >> S;\n        \n        if(S == \"0\") { break; }\n        \n        int R = hextoi(S.substr(1, 2));\n        int G = hextoi(S.substr(3, 2));\n        int B = hextoi(S.substr(5, 2));\n        \n        int near = 999999999, c = -1;\n        \n        for(int i = 0; i < 8; i++)\n        {\n            int R2 = ((i / 4) % 2 ? 255 : 0);\n            int G2 = ((i / 2) % 2 ? 255 : 0);\n            int B2 = ((i / 1) % 2 ? 255 : 0);\n            \n            int N2 = (R - R2) * (R - R2) + (B - B2) * (B - B2) + (G - G2) * (G - G2);\n            \n            if(N2 < near)\n            {\n                near = N2; c = i;\n            }\n        }\n        \n        cout << color[c] << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nchar l[6];\nstring s;\n\nstring color() {\n\tfor (int i = 0; i < 6; i++) {\n\t\tl[i] = s[i + 1];\n\t}\n\tint r, g, b;\n\tint z[6];\n\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (l[i] == '0') {\n\t\t\tz[i] = 0;\n\t\t}\n\t\telse if (l[i] == '1') {\n\t\t\tz[i] = 1;\n\t\t}\n\t\telse if (l[i] == '2') {\n\t\t\tz[i] = 2;\n\t\t}\n\t\telse if (l[i] == '3') {\n\t\t\tz[i] = 3;\n\t\t}\n\t\telse if (l[i] == '4') {\n\t\t\tz[i] = 4;\n\t\t}\n\t\telse if (l[i] == '5') {\n\t\t\tz[i] = 5;\n\t\t}\n\t\telse if (l[i] == '6') {\n\t\t\tz[i] = 6;\n\t\t}\n\t\telse if (l[i] == '7') {\n\t\t\tz[i] = 7;\n\t\t}\n\t\telse if (l[i] == '8') {\n\t\t\tz[i] = 8;\n\t\t}\n\t\telse if (l[i] == '9') {\n\t\t\tz[i] = 9;\n\t\t}\n\t\telse if (l[i] == 'a') {\n\t\t\tz[i] = 10;\n\t\t}\n\t\telse if (l[i] == 'b') {\n\t\t\tz[i] = 11;\n\t\t}\n\t\telse if (l[i] == 'c') {\n\t\t\tz[i] = 12;\n\t\t}\n\t\telse if (l[i] == 'd') {\n\t\t\tz[i] = 13;\n\t\t}\n\t\telse if (l[i] == 'e') {\n\t\t\tz[i] = 14;\n\t\t}\n\t\telse if (l[i] == 'f') {\n\t\t\tz[i] = 15;\n\t\t}\n\t}\n\n\tr = z[0] * 16 + z[1];\n\tg = z[2] * 16 + z[3];\n\tb = z[4] * 16 + z[5];\n\n\t//ff == 255;\n\tif (r <= 128) {\n\t\t//black,blue,lime,aqua\n\t\tif (g <= 128) {\n\t\t\t//black,blue\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"black\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"blue\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//lime,aqua\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"lime\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"aqua\";\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t//red,fuchsia,yellow,white\n\t\tif (g <= 128) {\n\t\t\t//red,fu\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"red\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"fuchsia\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"yellow\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn \"white\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tstring g[100];\n\tint x;\n\tfor (int i = 0;; i++){\n\t\tcin >> s;\n\t\tif (s == \"0\") {\n\t\t\tx = i;\n\t\t\tbreak;\n\t\t}\n\t\tg[i] = color();\n\t}\n\tfor (int i = 0; i < x; i++){\n\t\tcout << g[i] << endl;\n\t}\n\t\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdlib>\nchar nm[][9]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint cl[][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\nchar rgb[3][3];\nint main(){\n\twhile(scanf(\" #%2s%2s%2s\",rgb,rgb+1,rgb+2)==3){\n\t\tint mn=99999999,mi,d2,d;\n\t\tfor(int i=0;i<8;i++){\n\t\t\td2=0;\n\t\t\tfor(int j=0;j<3;j++)d=cl[i][j]-strtol(rgb[j],NULL,16),d*=d,d2+=d;\n\t\t\tif(d2<mn)mn=d2,mi=i;\n\t\t}\n\t\tprintf(\"%s\\n\",nm[mi]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "# include \"bits/stdc++.h\"\nusing namespace std;\nusing LL = long long;\nusing ULL = unsigned long long;\nconst double PI = acos(-1);\ntemplate<class T>constexpr T INF() { return ::std::numeric_limits<T>::max(); }\ntemplate<class T>constexpr T HINF() { return INF<T>() / 2; }\ntemplate <typename T_char>T_char TL(T_char cX) { return tolower(cX); };\ntemplate <typename T_char>T_char TU(T_char cX) { return toupper(cX); };\ntypedef pair<LL, LL> pii;\nconst int vy[] = { -1, -1, -1, 0, 1, 1, 1, 0 }, vx[] = { -1, 0, 1, 1, 1, 0, -1, -1 };\nconst int dx[4] = { 0,1,0,-1 }, dy[4] = { 1,0,-1,0 };\nint popcnt(unsigned long long n) { int cnt = 0; for (int i = 0; i < 64; i++)if ((n >> i) & 1)cnt++; return cnt; }\nint d_sum(LL n) { int ret = 0; while (n > 0) { ret += n % 10; n /= 10; }return ret; }\nint d_cnt(LL n) { int ret = 0; while (n > 0) { ret++; n /= 10; }return ret; }\nLL gcd(LL a, LL b) { if (b == 0)return a; return gcd(b, a%b); };\nLL lcm(LL a, LL b) { LL g = gcd(a, b); return a / g*b; };\n# define ALL(qpqpq)           (qpqpq).begin(),(qpqpq).end()\n# define UNIQUE(wpwpw)        sort(ALL((wpwpw)));(wpwpw).erase(unique(ALL((wpwpw))),(wpwpw).end())\n# define LOWER(epepe)         transform(ALL((epepe)),(epepe).begin(),TL<char>)\n# define UPPER(rprpr)         transform(ALL((rprpr)),(rprpr).begin(),TU<char>)\n# define FOR(i,tptpt,ypypy)   for(LL i=(tptpt);i<(ypypy);i++)\n# define REP(i,upupu)         FOR(i,0,upupu)\n# define INIT                 std::ios::sync_with_stdio(false);std::cin.tie(0)\n\n\nstring color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint red[]={0,0,0,0,255,255,255,255};\nint green[]={0,0,255,255,0,0,255,255};\nint blue[]={0,255,0,255,0,255,0,255};\n\nstring s;\nint r,g,b;\n\nint trance(char c){\n    if('0'<=c&&c<='9')return c-'0';\n    else return c-'a'+10;\n}\n\nint main(){\n    while(cin>>s&&s!=\"0\"){\n        r=trance(s[1])*16+trance(s[2]);\n        g=trance(s[3])*16+trance(s[4]);\n        b=trance(s[5])*16+trance(s[6]);\n        string ret;\n        double num=INF<double>();\n        REP(i,8){\n            double num2=sqrt((r-red[i])*(r-red[i])+(g-green[i])*(g-green[i])+(b-blue[i])*(b-blue[i]));\n            if(num>=num2){\n                num=num2;\n                ret=color[i];\n            }\n        }\n        cout<<ret<<endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int value[200]={};\n    for(int i=0;i<10;i++)value['0'+i]=i;\n    for(int i=0;i<6;i++)value['a'+i]=10+i;\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=value[str[1+2*i]]*16+value[str[2+2*i]];\n        int ans[8]={};\n        for(int i=0;i<8;i++){\n            for(int j=0;j<3;j++)ans[i]+=pow(colornum[i][j]-num[j],2);\n            ans[i]=sqrt(ans[i]);\n        }\n        int co=0;\n        for(int i=1;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<math.h>\n\nusing namespace std;\n\nmap<int, int> MR;\nmap<int, int> MG;\nmap<int, int> MB;\n\nvoid make(){\n  MR[0] = 0;\n  MG[0] = 0;\n  MB[0] = 0;\n  MR[1] = 0;\n  MG[1] = 0;\n  MB[1] = 255;\n  MR[2] = 0;\n  MG[2] = 255;\n  MB[2] = 0;\n  MR[3] = 0;\n  MG[3] = 255;\n  MB[3] = 255;\n  MR[4] = 255;\n  MG[4] = 0;\n  MB[4] = 0;\n  MR[5] = 255;\n  MG[5] = 0;\n  MB[5] = 255;\n  MR[6] = 255;\n  MG[6] = 255;\n  MB[6] = 0;\n  MR[7] = 255;\n  MG[7] = 255;\n  MB[7] = 255;\n}\n\nint main(){\n\n  make();\n\n  char in[2];\n  int status = 0;\n\n  while(cin >> in[0]){\n    if(in[0] == '0') break;\n\n    int r, g, b;\n\n    for(int i = 0; i < 3; i++){\n      \n      cin >> in[0] >> in[1];\n\n      for(int j = 0; j <= 1; j++){\n\tif(in[j] == 'a') in[j] -= 39;\n\tif(in[j] == 'b') in[j] -= 39;\n\tif(in[j] == 'c') in[j] -= 39;\n\tif(in[j] == 'd') in[j] -= 39;\n\tif(in[j] == 'e') in[j] -= 39;\n\tif(in[j] == 'f') in[j] -= 39;\n      }\n\n      if(i == 0) r = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 1) g = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 2) b = (in[0] - 48) * 16 + (in[1] - 48);\n    }\n\n    double d;\n    int min, then;\n\n    for(int j = 0; j < 8; j++){\n      d = sqrt((r - MR[j])*(r - MR[j])+(g - MG[j])*(g - MG[j])+(b - MB[j])*(b - MB[j]));\n      if(j == 0 || min > d){\n\tmin = d;\n\tthen = j;\n      }\n    }\n\n    if(then == 0) cout << \"black\" <<endl;\n    if(then == 1) cout << \"blue\" <<endl;\n    if(then == 2) cout << \"lime\" <<endl;\n    if(then == 3) cout << \"aqua\" <<endl;\n    if(then == 4) cout << \"red\" <<endl;\n    if(then == 5) cout << \"fuchsia\" <<endl;\n    if(then == 6) cout << \"yellow\" <<endl;\n    if(then == 7) cout << \"white\" <<endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<vb> vbb;\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst double inf = (int)1e8;\n\nstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nstring strength[8] = {\"000000\", \"0000ff\", \"00ff00\", \"00ffff\", \"ff0000\", \"ff00ff\", \"ffff00\", \"ffffff\"};\n\nint toi(string s){\n    int ret = 0;\n    rep(i, s.size()){\n        string t = s.substr(i, 1);\n        if('0' <= t[0] && t[0] <= '9') ret += stoi(t);\n        else ret += t[0]-'a'+10;\n        if(i != s.size()-1) ret *= 16;\n    }\n    return ret;\n}\n\nvector<int> rgb(string s){\n    vi ret;\n    rep(i, 3){\n        string t = s.substr(i*2, 2);\n        ret.pb(toi(t));\n    }\n    return ret;\n}\n\nint main(){\n    string  s;\n    while(cin >> s, s!=\"0\"){\n        s = s.substr(1);\n        vi c = rgb(s);\n        double m = inf;\n        int ans = 0;\n        rep(i, 8){\n            vi d = rgb(strength[i]);\n            double ret = sqrt(pow(c[0]-d[0], 2)+pow(c[1]-d[1], 2)+pow(c[2]-d[2], 2));\n            if(m > ret){ans = i; m = ret;}\n        }\n        cout << color[ans] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nint Overten(char a){\n  if(a-'0'<10)return a-'0';\n  if(a=='A')return 10;\n  if(a=='B')return 11;\n  if(a=='C')return 12;\n  if(a=='D')return 13;\n  if(a=='E')return 14;\n  if(a=='F')return 15;\n}\nint changeDtoI(char a,char b){\n  return Overten(a)*16+Overten(b);\n}\nint main(void){\n  string color;\n  while(cin>>color,color.size()>3){\n    int R = changeDtoI(color[1],color[2])<128?0:1;\n    int G = changeDtoI(color[3],color[4])<128?0:1;\n    int B = changeDtoI(color[4],color[5])<128?0:1;\n    //cout<<R << \" \" << G << \" \" << B <<endl;\n    if(R * G * B)cout<<\"white\"<<endl;\n    else if(R * G)cout<<\"yellow\"<<endl;\n    else if(R * B)cout<<\"fuchsia\"<<endl;\n    else if(G * B)cout<<\"aqua\"<<endl;\n    else if(R)cout<<\"red\"<<endl;\n    else if(G)cout<<\"green\"<<endl;\n    else if(B)cout<<\"blue\"<<endl;\n    else cout<<\"black\"<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n\nconst char *t[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint solve(int r, int g, int b){\n    int min = 0; int mind = 200000;\n    for(int i = 0; i < 8; i++){\n        int r0 = ((i>>2)&1)*0xff, g0 = ((i>>1)&1)*0xff, b0 = ((i>>0)&1)*0xff;\n        //pf(\"%d,%d,%d : %d,%d,%d\\n\", r,g,b,r0,g0,b0);\n        int d = (r-r0)*(r-r0)+(g-g0)*(g-g0)+(b-b0)*(b-b0);\n        if(mind > d){\n            mind = d, min = i;\n        }\n    }\n    if(min >= 8) throw;\n    return min;\n}\n\nint main(){\n    int n;\n    char buf[16];\n    while(fgets(buf,sizeof(buf),stdin)){\n        if(buf[0] == '0') break;\n        sscanf(buf+1,\"%x\",&n);\n        int i = solve((n>>16)&0xff,(n>>8)&0xff,n&0xff);\n        printf(\"%s\\n\", t[i]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// 2011/02/19 Tazoe\n\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n\twhile(true){\n\t\tstring col;\n\t\tcin >> col;\n\t\tif(col==\"0\")\n\t\t\tbreak;\n\n\t\tif(col[1]>='0'&&col[1]<='7')\n\t\t\tif(col[3]>='0'&&col[3]<='7')\n\t\t\t\tif(col[5]>='0'&&col[5]<='7')\n\t\t\t\t\tcout << \"black\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"blue\" << endl;\n\t\t\telse\n\t\t\t\tif(col[5]>='0'&&col[5]<='7')\n\t\t\t\t\tcout << \"lime\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"aqua\" << endl;\n\t\telse\n\t\t\tif(col[3]>='0'&&col[3]<='7')\n\t\t\t\tif(col[5]>='0'&&col[5]<='7')\n\t\t\t\t\tcout << \"red\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"fuchsia\" << endl;\n\t\t\telse\n\t\t\t\tif(col[5]>='0'&&col[5]<='7')\n\t\t\t\t\tcout << \"yellow\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"white\" << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "// 0176\n#include <iostream>\n#include <string>\n#define  N   255\nusing namespace std;\n\nint c_table[8][3] = {{0,0,0}, {0,0,N}, {0,N,0}, {0,N,N}, {N,0,0}, {N,0,N}, {N,N,0}, {N,N,N}};\n\nint conv_16(char c){\n\tif((c >= '0') && (c <= '9'))\n\t\treturn c-'0';\n\telse if((c >= 'a') && (c <= 'f'))\n\t\treturn c-'a'+10;\n}\n\nint dk(int co1[3], int co2[3]){\n\tint d = 0;\n\n\tfor(int i=0;i<3;i++)\n\t\td += (co1[i]-co2[i])*(co1[i]-co2[i]);\n\n\treturn d;\n}\n\nint main(){\n\twhile(1){\n\t\tstring str;\n\t\tcin>>str;\n\n\t\tif(str == \"0\")\n\t\t\tbreak;\n\n\t\tint rgb[3], d=3*N*N, color=0;\n\t\tfor(int i=0;i<3;i++)\n\t\t\trgb[i] = 16*conv_16(str[2*i+1]) + conv_16(str[2*i+2]);\n\t\n\t\t\n\t\tfor(int i=0;i<8;i++)\n\t\t\tif(d > dk(c_table[i], rgb)){\n\t\t\t\td = dk(c_table[i], rgb);\n\t\t\t\tcolor = i;\n\t\t\t}\n\n\t\tif(color == 0)\n\t\t\tcout<<\"black\"<<endl;\n\t\telse if(color == 1)\n\t\t\tcout<<\"blue\"<<endl;\n\t\telse if(color == 2)\n\t\t\tcout<<\"lime\"<<endl;\n\t\telse if(color == 3)\n\t\t\tcout<<\"aqua\"<<endl;\n\t\telse if(color == 4)\n\t\t\tcout<<\"red\"<<endl;\n\t\telse if(color == 5)\n\t\t\tcout<<\"fuchsia\"<<endl;\n\t\telse if(color == 6)\n\t\t\tcout<<\"yellow\"<<endl;\n\t\telse if(color == 7)\n\t\t\tcout<<\"white\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<math.h>\n\nusing namespace std;\n\nmap<int, int> MR;\nmap<int, int> MG;\nmap<int, int> MB;\n\nvoid make(){\n  MR[0] = 0;\n  MG[0] = 0;\n  MB[0] = 0;\n  MR[1] = 0;\n  MG[1] = 0;\n  MB[1] = 255;\n  MR[2] = 0;\n  MG[2] = 255;\n  MB[2] = 0;\n  MR[3] = 0;\n  MG[3] = 255;\n  MB[3] = 255;\n  MR[4] = 255;\n  MG[4] = 0;\n  MB[4] = 0;\n  MR[5] = 255;\n  MG[5] = 0;\n  MB[5] = 255;\n  MR[6] = 255;\n  MG[6] = 255;\n  MB[6] = 0;\n  MR[7] = 255;\n  MG[7] = 255;\n  MB[7] = 255;\n}\n\nint main(){\n\n  make();\n\n  char in[2];\n  int status = 0;\n\n  while(cin >> in[0]){\n    if(in[0] == '0') break;\n\n    int r, g, b;\n\n    for(int i = 0; i < 3; i++){\n      \n      cin >> in[0] >> in[1];\n\n      for(int j = 0; j <= 1; j++){\n\tif(in[j] == 'a') in[j] -= 39;\n\tif(in[j] == 'b') in[j] -= 39;\n\tif(in[j] == 'c') in[j] -= 39;\n\tif(in[j] == 'd') in[j] -= 39;\n\tif(in[j] == 'e') in[j] -= 39;\n\tif(in[j] == 'f') in[j] -= 39;\n      }\n\n      if(i == 0) r = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 1) g = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 2) b = (in[0] - 48) * 16 + (in[1] - 48);\n    }\n\n    int d;\n    int min, then;\n\n    for(int j = 0; j < 8; j++){\n      d = (r - MR[j])*(r - MR[j])+(g - MG[j])*(g - MG[j])+(b - MB[j])*(b - MB[j]);\n      if(j == 0 || min > d){\n\tmin = d;\n\tthen = j;\n      }\n    }\n\n    if(then == 0) cout << \"black\" <<endl;\n    if(then == 1) cout << \"blue\" <<endl;\n    if(then == 2) cout << \"lime\" <<endl;\n    if(then == 3) cout << \"aqua\" <<endl;\n    if(then == 4) cout << \"red\" <<endl;\n    if(then == 5) cout << \"fuchsia\" <<endl;\n    if(then == 6) cout << \"yellow\" <<endl;\n    if(then == 7) cout << \"white\" <<endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint colorCalc(char c1, char c2)\n{\n\tint color = 0;\n\tif('a' <= c1 && c1 <= 'f')\n\t{\n\t\tcolor += (c1 - 'a' + 10) * 16;\n\t}\n\telse\n\t{\n\t\tcolor += (c1 - '0') * 16;\n\t}\n\tif('a' <= c2 && c2 <= 'f')\n\t{\n\t\tcolor += c2 - 'a' + 10;\n\t}\n\telse\n\t{\n\t\tcolor += c2 - '0';\n\t}\n\treturn(color);\n}\nvoid solve()\n{\n\tint colors[9][4] = {{{0},   {0},   {0},}, \n\t\t\t\t\t\t{{0},   {0},   {255},}, \n\t\t\t\t\t\t{{0},   {255}, {0},}, \n\t\t\t\t\t\t{{0},   {255}, {255},}, \n\t\t\t\t\t\t{{255}, {0},   {0},}, \n\t\t\t\t\t\t{{255}, {0},   {255},}, \n\t\t\t\t\t\t{{255}, {255}, {0},}, \n\t\t\t\t\t\t{{255}, {255}, {255},}};\n\tstring name[9] = {\"black\", \n\t\t\t\t\t  \"blue\", \n\t\t\t\t\t  \"lime\", \n\t\t\t\t\t  \"aqua\", \n\t\t\t\t\t  \"red\", \n\t\t\t\t\t  \"fuchsia\", \n\t\t\t\t\t  \"yellow\", \n\t\t\t\t\t  \"white\"};\n\tstring str;\n\twhile(cin >> str, str != \"0\")\n\t{\n\t\tint r = colorCalc(str[1], str[2]);\n\t\tint g = colorCalc(str[3], str[4]);\n\t\tint b = colorCalc(str[5], str[6]);\n\t\tint min = 999999999;\n\t\tint label = 0;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tint sum = sqrt((double)(r - colors[i][0]) * (r - colors[i][0]) + (g - colors[i][1]) * (g - colors[i][1]) + (b - colors[i][2]) * (b - colors[i][2]));\n\t\t\tif(sum < min)\n\t\t\t{\n\t\t\t\tmin = sum;\n\t\t\t\tlabel = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[label] << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<stdlib.h>\nchar c[8];\nchar d[3];\nchar ret[8][10]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint R[]={0,0,0,0,255,255,255,255};\nint G[]={0,0,255,255,0,0,255,255};\nint B[]={0,255,0,255,0,255,0,255};\nint main(){\n\twhile(1){\n\t\tscanf(\"%s\",c);\n\t\tif(c[0]!='#')return 0;\n\t\td[0]=c[1];\n\t\td[1]=c[2];\n\t\td[2]='\\0';\n\t\tint r=strtol(d,NULL,16);\n\t\td[0]=c[3];\n\t\td[1]=c[4];\n\t\tint g=strtol(d,NULL,16);\n\t\td[0]=c[5];\n\t\td[1]=c[6];\n\t\tint b=strtol(d,NULL,16);\n\t\tint min=99999999;\n\t\tint at=0;\n\t\tfor(int i=0;i<8;i++)\n\t\t\tif(min>(r-R[i])*(r-R[i])+(g-G[i])*(g-G[i])+(b-B[i])*(b-B[i])){\n\t\t\t\tmin=(r-R[i])*(r-R[i])+(g-G[i])*(g-G[i])+(b-B[i])*(b-B[i]);\n\t\t\t\tat=i;\n\t\t\t}\n\t\t\n\t\tprintf(\"%s\\n\",ret[at]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int value[200]={};\n    for(int i=0;i<10;i++)value['0'+i]=i;\n    for(int i=0;i<6;i++)value['a'+i]=10+i;\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=value[str[1+2*i]]*16+value[str[2+2*i]];\n        int ans[8]={};\n        for(int i=0;i<8;i++){\n            for(int j=0;j<3;j++)ans[i]+=pow(colornum[i][j]-num[j],2);\n        }\n        int co=0;\n        for(int i=1;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<math.h>\n\nusing namespace std;\n\nmap<int, int> MR;\nmap<int, int> MG;\nmap<int, int> MB;\n\nvoid make(){\n  MR[0] = 0;\n  MG[0] = 0;\n  MB[0] = 0;\n  MR[1] = 0;\n  MG[1] = 0;\n  MB[1] = 255;\n  MR[2] = 0;\n  MG[2] = 255;\n  MB[2] = 0;\n  MR[3] = 0;\n  MG[3] = 255;\n  MB[3] = 255;\n  MR[4] = 255;\n  MG[4] = 0;\n  MB[4] = 0;\n  MR[5] = 255;\n  MG[5] = 0;\n  MB[5] = 255;\n  MR[6] = 255;\n  MG[6] = 255;\n  MB[6] = 0;\n  MR[7] = 255;\n  MG[7] = 255;\n  MB[7] = 255;\n}\n\nint main(){\n\n  make();\n\n  char in[2];\n  int status = 0;\n\n  while(cin >> in[0]){\n    if(in[0] == '0') break;\n\n    int r, g, b;\n\n    for(int i = 0; i < 3; i++){\n      \n      cin >> in[0] >> in[1];\n\n      for(int j = 0; j <= 1; j++){\n\tif(in[j] == 'a') in[j] -= 39;\n\tif(in[j] == 'b') in[j] -= 39;\n\tif(in[j] == 'c') in[j] -= 39;\n\tif(in[j] == 'd') in[j] -= 39;\n\tif(in[j] == 'e') in[j] -= 39;\n\tif(in[j] == 'f') in[j] -= 39;\n      }\n\n      if(i == 0) r = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 1) g = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 2) b = (in[0] - 48) * 16 + (in[1] - 48);\n    }\n\n    int d;\n    int min, then;\n\n    for(int j = 0; j < 8; j++){\n      d = (r - MR[j])*(r - MR[j])+(g - MG[j])*(g - MG[j])+(b - MB[j])*(b - MB[j]);\n      if(j == 0 || min > d){\n\tmin = d;\n\tthen = j;\n      }\n    }\n\n    if(then == 0) cout << \"black\" <<endl;\n    if(then == 1) cout << \"blue\" <<endl;\n    if(then == 2) cout << \"lime\" <<endl;\n    if(then == 3) cout << \"aqua\" <<endl;\n    if(then == 4) cout << \"red\" <<endl;\n    if(then == 5) cout << \"fuchsia\" <<endl;\n    if(then == 6) cout << \"yellow\" <<endl;\n    if(then == 7) cout << \"white\" <<endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\nclass Col\n{\npublic:\n  int R,G,B;\n  Col():R(0),G(0),B(0){}\n  Col(int R,int G,int B):R(R),G(G),B(B){}\n};\n\nint _16to10(string s)\n{\n  int a[2];\n  for(int i=0;i<2;i++)\n    {\n      if(s[i] == 'a')\n\ta[i] = 10;\n      else if(s[i] == 'b')\n\ta[i] = 11;\n      else if(s[i] == 'c')\n\ta[i] = 12;\n      else if(s[i] == 'd')\n\ta[i] = 13;\n      else if(s[i] == 'e')\n\ta[i] = 14;\n      else if(s[i] == 'f')\n\ta[i] = 15;\n      else \n\ta[i] = s[i] - '0';\n    }\n  return a[1]+a[0]*16;\n}\n\nint main()\n{\n  string s;\n  vector<Col> vec;\n  vector<string> name;\n  vec.resize(8),name.resize(8);\n  int ff = _16to10(\"ff\");\n  vec[0] = Col(0,0,0);\n  vec[1] = Col(0,0,ff);\n  vec[2] = Col(0,ff,0);\n  vec[3] = Col(0,ff,ff);\n  vec[4] = Col(ff,0,0);\n  vec[5] = Col(ff,0,ff);\n  vec[6] = Col(ff,ff,0);\n  vec[7] = Col(ff,ff,ff);\n  name[0] = \"black\";\n  name[1] = \"blue\";\n  name[2] = \"lime\";\n  name[3] = \"aqua\";\n  name[4] = \"red\";\n  name[5] = \"fuchsia\";\n  name[6] = \"yellow\";\n  name[7] = \"white\";\n  while(true)\n    {\n      cin >> s;\n      cerr << s << endl;\n      if(s == \"0\")\n\tbreak;\n      int R,G,B;\n      R = _16to10(s.substr(1,2));\n      G = _16to10(s.substr(3,2));\n      B = _16to10(s.substr(5,2));\n\n      int men = (1<<28),pos = -1;\n      for(int i=0;i<8;i++)\n\t{\n\t  int d =  sqrt(pow(R-vec[i].R,2)+pow(B-vec[i].B,2)+pow(G-vec[i].G,2));\n\t  if(men > d)\n\t    {\n\t      men = d;\n\t      pos = i;\n\t    }\n\t}\n      cout << name[pos] << endl;\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#line 0 \"cmacro.cpp\"\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define in ,\n#define esc_paren(...) __VA_ARGS__\n#define pp_empty(...)\n#define pp_cat_i(x, y) x ## y\n#define pp_cat(x, y) pp_cat_i(x, y)\n\n#define pp_inc0 1\n#define pp_inc1 2\n#define pp_inc2 3\n#define pp_inc3 4\n#define pp_inc4 5\n#define pp_inc5 6\n#define pp_inc6 7\n#define pp_inc7 8\n#define pp_inc8 9\n#define pp_inc(i) pp_cat(pp_inc, i)\n\n#define pp_arg10(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, ...) _9\n#define pp_has_comma(...) pp_arg10(__VA_ARGS__, 1, 1, 1, 1, 1, 1, 1, 1, 0)\n#define pp_trigger_paren(...) ,\n#define pp_is_empty(...) \\\n  pp_is_empty1( \\\n      pp_has_comma(__VA_ARGS__), \\\n      pp_has_comma(pp_trigger_paren __VA_ARGS__), \\\n      pp_has_comma(__VA_ARGS__()), \\\n      pp_has_comma(pp_trigger_paren __VA_ARGS__()) \\\n      ) \n#define pp_paste5(_0, _1, _2, _3, _4) _0 ## _1 ## _2 ## _3 ## _4\n#define pp_is_empty1(_0, _1, _2, _3) pp_has_comma(pp_paste5(pp_is_empty_case_, _0, _1, _2, _3))\n#define pp_is_empty_case_0001 ,\n\n#define pp_is_one(...) pp_is_one_(__VA_ARGS__, pp_one_seq)\n#define pp_is_one_(...) pp_is_one_n(__VA_ARGS__)\n#define pp_is_one_n(_1,_2,_3,_4,_5,_6,_7,_8,_9,_10, N, ...) N\n#define pp_one_seq 0,0,0,0,0,0,0,0,0,1,0\n\n#define pp_narg(...) \\\n         pp_narg_(__VA_ARGS__, pp_narg_seq)\n#define pp_narg_(...) \\\n         pp_narg_n(__VA_ARGS__)\n#define pp_narg_n( \\\n          _1, _2, _3, _4, _5, _6, _7, _8, _9,_10, \\\n         _11,_12,_13,_14,_15,_16,_17,_18,_19,_20, \\\n         _21,_22,_23,_24,_25,_26,_27,_28,_29,_30, \\\n         _31,_32,_33,_34,_35,_36,_37,_38,_39,_40, \\\n         _41,_42,_43,_44,_45,_46,_47,_48,_49,_50, \\\n         _51,_52,_53,_54,_55,_56,_57,_58,_59,_60, \\\n         _61,_62,_63,n,...) n\n#define pp_narg_seq \\\n         63,62,61,60, \\\n         59,58,57,56,55,54,53,52,51,50, \\\n         49,48,47,46,45,44,43,42,41,40, \\\n         39,38,37,36,35,34,33,32,31,30, \\\n         29,28,27,26,25,24,23,22,21,20, \\\n         19,18,17,16,15,14,13,12,11,10, \\\n          9, 8, 7, 6, 5, 4, 3, 2, 1, 0\n\n#define pp_if_0(x, y) y\n#define pp_if_1(x, y) x\n#define pp_if(cond, x, y) pp_cat(pp_if_, cond)(x, y)\n\n#define pp_foreach_i9(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i8(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i7(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i6(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i5(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i4(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i3(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i2(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i1(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i0(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i(i, f, ...) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach(f, ...) pp_foreach_i(0, f, __VA_ARGS__)\n\n\ntypedef long long ll;\n#define down_queue(x) priority_queue<x>\n#define up_queue(x) priority_queue<x, vector<x>, greater<x>>\n#define all(x) x.begin(), x.end()\n#define split_str(str, sp_word) istringstream stream(str); string res; for(int cnt = 0; getline(stream,res,sp_word); cnt++)\n#define digit(x) ((int)log10((double)(x)) + 1)\n#define mp(x,y) make_pair(x,y)\n#define pb(x) push_back(x)\n#define pf(x) push_front(x)\n#define vec_cpy(to,from) copy(all(to),back_inserter(from))\n#define ary_cpy(to,from) memcpy(to, from, sizeof(from))\n#define MOD 1000000007\n#define INF 999999999\n\n\ntemplate <typename T>\nstruct RepIterator {\n  T i;\n  RepIterator() : i(0) {}\n  RepIterator(T n) : i(n) {}\n  bool operator ==(const RepIterator<T>& rhs) { return i == rhs.i; }\n  bool operator !=(const RepIterator<T>& rhs) { return i != rhs.i; }\n  T operator *() { return i; }\n  RepIterator<T> operator ++() {i++; return *this; };\n};\ntemplate <typename T>\nstruct RepLoop {\n  T i;\n  RepLoop(T n) : i(n) {}\n  RepIterator<T> begin() { return RepIterator<T>(); }\n  RepIterator<T> end() { return RepIterator<T>(i); }\n};\n\ntemplate <typename T>\nstruct rep_range {\n  static T range(T v) {\n    return v;\n  }\n};\n\n#define def_range(t) \\\n  template <> \\\n  struct rep_range<t> { \\\n    static RepLoop<t> range(t n) { \\\n      return RepLoop<t>(n); \\\n    } \\\n  };\ndef_range(int);\ndef_range(size_t);\n\n#define rep(...) rep1(rep2, (__VA_ARGS__))\n#define rep1(X, A) X A\n#define rep2(i, ...) pp_if(pp_is_one(__VA_ARGS__), rep_len1(i, __VA_ARGS__), rep3(i, __VA_ARGS__))\n#define rep_len1(i, end, ...) for (auto i : rep_range<decltype(end)>::range(end))\n#define rep3(i, iter, ...) rep4(rep5, (iter, i, esc_paren __VA_ARGS__))\n#define rep4(X, A) X A\n#define rep5(iter, ...) iter(__VA_ARGS__)\n\n#define up up_iter ,\n#define up_iter3(i, start, end) for (auto i = start; i < end; i++)\n#define up_iter4(i, start, end, up) for (auto i = start; i < end; i += up)\n#define up_iter(...) pp_cat(up_iter, pp_narg(__VA_ARGS__))(__VA_ARGS__)\n#define down down_iter ,\n#define down_iter2(i, end) for(auto i = end-1; i >= 0; i--)\n#define down_iter3(i, start, end) for (auto i = end-1; i >= start; i--)\n#define down_iter4(i, start, end, down) for (auto i = end-1; i >= start; i -= down)\n#define down_iter(...) pp_cat(down_iter, pp_narg(__VA_ARGS__))(__VA_ARGS__)\n\n\n#define pp_init2(cnt, body) struct _InitStruct ## cnt { _InitStruct ## cnt() { body } } _initstruct ## cnt;\n#define pp_init1(f, cnt, body) f(cnt, body)\n#define pp_init(body) pp_init1(pp_init2, __COUNTER__, body)\n\n#define init_array(arr, N, val) pp_init(rep (i in N) { arr[i] = val; })\n#define iota_array(arr, N, start) pp_init(rep (i in N) { arr[i] = start + i; })\n\n\n#define debug_var_elem(v) << #v << \"=\" << v << \" \"\n#ifdef DEBUG\n#define debug_echo(e) cout << \"L\" << __LINE__ << \": \" << e << endl\n#define debug_var(...) cout << \"L\" << __LINE__ << \": \" pp_foreach(debug_var_elem, __VA_ARGS__) << endl\n#define debug_time2(i, e) auto start ## i = clock(); e; auto end ## i = clock(); cout << \"L\" << __LINE__ << \": \" << (double)(end ## i - start ## i) << \"ms\" << endl;\n#define debug_time1(f, i, e) f(i, e)\n#define debug_time(e) debug_time1(debug_time2, __COUNTER__, e)\n#else\n#define debug_echo(e)\n#define debug_var(...)\n#define debug_time(e) e;\n#endif\n\n\n#define pp_gen_field(list) pp_gen_field1 list\n#define pp_gen_field1(name, val) decltype(val) name;\n#define pp_gen_init(list) pp_gen_init1 list\n#define pp_gen_init1(name, val) ,val\n#define pp_gen_find_set_wrap(ufnodename) ufnodename pp_gen_find_set\n#define pp_gen_find_set(list) pp_gen_find_set1 list\n#define pp_gen_find_set1(name, val) \\\n  find_set_ ## name(int x, decltype(val) v) { \\\n    if (nodes[x].parent == x) { \\\n      nodes[x].name = v; \\\n      return nodes[x]; \\\n    } else { \\\n      return nodes[x] = find_set_ ## name(nodes[x].parent, v); \\\n    } \\\n  }\n#define pp_gen_unite_set(list) pp_gen_unite_set1 list\n#define pp_gen_unite_set1(name, val) \\\n  if (nodes[x].name == val) { \\\n    find_set_ ## name(x, find(y).name); \\\n  } \\\n  if (nodes[y].name == val) { \\\n    find_set_ ## name(y, find(x).name); \\\n  }\n\n#define def_unionfind(ufname, ufnodename, ...) \\\n  struct ufnodename { \\\n    int parent; \\\n    pp_foreach(pp_gen_field, __VA_ARGS__) \\\n  }; \\\n  struct ufname { \\\n    vector<ufnodename> nodes; \\\n    vector<int> rank; \\\n    ufname(int n) : nodes(n+1), rank(n+1) { \\\n      rep (i in n) { \\\n        nodes[i] = ufnodename{i pp_foreach(pp_gen_init, __VA_ARGS__)}; \\\n        rank[i] = 0; \\\n      } \\\n    } \\\n    ufnodename find(int x) { \\\n      if (nodes[x].parent == x) { \\\n        return nodes[x]; \\\n      } else { \\\n        return nodes[x] = find(nodes[x].parent); \\\n      } \\\n    } \\\n    pp_foreach(pp_gen_find_set_wrap(ufnodename), __VA_ARGS__) \\\n    void unite(int x, int y) { \\\n      x = find(x).parent; \\\n      y = find(y).parent; \\\n      if (x == y) return; \\\n      if (rank[x] < rank[y]) { \\\n        pp_foreach(pp_gen_unite_set, __VA_ARGS__); \\\n        nodes[x].parent = y; \\\n      } else { \\\n        pp_foreach(pp_gen_unite_set, __VA_ARGS__); \\\n        nodes[y].parent = x; \\\n        if (rank[x] == rank[y]) rank[x]++; \\\n      } \\\n    } \\\n    bool same(int x, int y) { \\\n      return find(x).parent == find(y).parent; \\\n    } \\\n  }\n\n\nll gcd(ll a,ll b){while(b){ll tmp = a % b;a = b;b = tmp;}return a;}\nll lcm(ll a,ll b){return a / gcd(a,b) * b;}\nbool is_prime(ll n){switch(n){case 0:case 1: return false;case 2: return true;}if(n % 2 == 0) return false;for(ll i=3;i * i <= n; i += 2)if(n%i == 0) return false;return true;}\n\n#define def_varargs(name, f) \\\n  template<typename First> \\\n  inline First name(First first) { return first; } \\\n  template<typename First, typename... Rest> \\\n  inline First name(First first, Rest... rest) { return f(first, name(rest...)); }\n\n#line 1 \"procon.cpp\"\n\nint htoi(char h) {\n  if ('0' <= h && h <= '9') return h - '0';\n  else return h - 'a' + 10;\n}\n\ndouble dist(double r, double g, double b, double rk, double gk, double bk) {\n  return sqrt(pow(r-rk, 2.0) + pow(g-gk, 2.0) + pow(b-bk, 2.0));\n}\n\nint colors[][3] = {\n  {0, 0, 0},\n  {0, 0, 255},\n  {0, 255, 0},\n  {0, 255, 255},\n  {255, 0, 0},\n  {255, 0, 255},\n  {255, 255, 0},\n  {255, 255, 255}\n};\nstring names[] = {\n  \"black\",\n  \"blue\",\n  \"lime\",\n  \"aqua\",\n  \"red\",\n  \"fuchsia\",\n  \"yellow\",\n  \"white\"\n};\n\nint main() {\n  char c;\n  while (cin >> c && c != '0') {\n    char r1, r2, g1, g2, b1, b2; cin >> r1 >> r2 >> g1 >> g2 >> b1 >> b2;\n    int r = htoi(r1)*16 + htoi(r2);\n    int g = htoi(g1)*16 + htoi(g2);\n    int b = htoi(b1)*16 + htoi(b2);\n    debug_var(r, g, b);\n    double ans = INF;\n    int ansi;\n    rep (i in 8) {\n      int rk = colors[i][0];\n      int gk = colors[i][1];\n      int bk = colors[i][2];\n      double d = dist(r, g, b, rk, gk, bk);\n      if (ans > d) {\n        ans = d;\n        ansi = i;\n      }\n    }\n    cout << names[ansi] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint colorCalc(char c1, char c2)\n{\n\tint color = 0;\n\tif('a' <= c1 && c1 <= 'f')\n\t{\n\t\tcolor += (c1 - 'a' + 10) * 16;\n\t}\n\telse\n\t{\n\t\tcolor += (c1 - '0') * 16;\n\t}\n\tif('a' <= c2 && c2 <= 'f')\n\t{\n\t\tcolor += c2 - 'a' + 10;\n\t}\n\telse\n\t{\n\t\tcolor += c2 - '0';\n\t}\n\treturn(color);\n}\nvoid solve()\n{\n\tint colors[8][3] = {{{0},   {0},   {0}}, \n\t\t\t\t\t\t{{0},   {0},   {255}}, \n\t\t\t\t\t\t{{0},   {255}, {0}}, \n\t\t\t\t\t\t{{0},   {255}, {255}}, \n\t\t\t\t\t\t{{255}, {0},   {0}}, \n\t\t\t\t\t\t{{255}, {0},   {255}}, \n\t\t\t\t\t\t{{255}, {255}, {0}}, \n\t\t\t\t\t\t{{255}, {255}, {255}}};\n\tstring name[8] = {\"black\", \n\t\t\t\t\t  \"blue\", \n\t\t\t\t\t  \"lime\", \n\t\t\t\t\t  \"aqua\", \n\t\t\t\t\t  \"red\", \n\t\t\t\t\t  \"fuchsia\", \n\t\t\t\t\t  \"yellow\", \n\t\t\t\t\t  \"white\"};\n\tstring str;\n\twhile(cin >> str, str != \"0\")\n\t{\n\t\tint r = colorCalc(str[1], str[2]);\n\t\tint g = colorCalc(str[3], str[4]);\n\t\tint b = colorCalc(str[5], str[6]);\n\t\tint min = 999999999;\n\t\tint label = 0;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tint sum = sqrt((double)(r - colors[i][0]) * (r - colors[i][0]) + (g - colors[i][1]) * (g - colors[i][1]) + (b - colors[i][2]) * (b - colors[i][2]));\n\t\t\tif(sum < min)\n\t\t\t{\n\t\t\t\tmin = sum;\n\t\t\t\tlabel = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[label] << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n  \n// #define int long long\n#define pb push_back\n#define print(Target) cout << Target << '\\n'\n\n#define REP(i, n) for (int i = 0; i < (n); i++)\n#define REPS(i, a, n) for (int i = (a); i < (n); i++)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vii;\ntypedef pair<int, int> pii;\n\nbool is_uruu(int y) {return (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0));}\n\nstruct COL{\n  int n;\n  string name;\n};\n\nconst int c[8][3] = {{0, 0, 0}, {0, 0, 0xff}, {0, 0xff, 0}, {0, 0xff, 0xff}, {0xff, 0, 0}, {0xff, 0, 0xff}, {0xff, 0xff, 0}, {0xff, 0xff, 0xff}};\n\nconst string s[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nbool cmp(COL lhs, COL rhs)\n{\n  return (lhs.n <= rhs.n);\n}\n\nsigned main()\n{\n  //ios::sync_with_stdio(false);\n  char sr[2], sg[2], sb[2];\n  char sh;\n    \n  while (scanf(\"%1s\", &sh), sh != '0'){\n    COL col[8];\n    scanf(\"%2s%2s%2s\", sr, sg, sb);\n    int r = strtol(sr, NULL, 16),\n        g = strtol(sg, NULL, 16),\n        b = strtol(sb, NULL, 16);\n\n    REP(i, 8){\n      col[i].n = sqrt((c[i][0] - r) * (c[i][0] - r) + (c[i][1] - g) * (c[i][1] - g) + (c[i][2] - b) * (c[i][2] - b));\n      col[i].name = s[i];\n    }\n\n    sort(col, col + 8, cmp);\n    print(col[0].name);\n  }\n\n  return (0);\n}"
  },
  {
    "language": "C++",
    "code": "//41\n#include<iostream>\n#include<cstdlib>\n\n#define S(X) ((X)*(X))\n\nusing namespace std;\n\nint main(){\n  for(char c[8];cin>>c,c[0]!='0';){\n    int md=1<<30;\n    int cn;\n    unsigned cd=strtoul(c+1,0,16);\n    for(int i=0;i<8;i++){\n      unsigned d=0;\n      for(int j=0;j<3;j++){\n\tstatic const unsigned cc[]={0x0,0xff,0xff00,0xffff,0xff0000,0xff00ff,0xffff00,0xffffff};\n\td+=S((cd>>j*8&0xFF)-(cc[i]>>j*8&0xFF));\n      }\n      if(d<md){\n\tmd=d;\n\tcn=i;\n      }\n    }\n    const char *cstr[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    cout<<cstr[cn]<<endl;\n  }\n  return 0;\n}\n      \n\t"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint m[8][3] = {\n  {0,0,0}, {0,0,0xff}, {0,0xff,0}, {0,0xff,0xff},\n  {0xff,0,0}, {0xff,0,0xff}, {0xff,0xff,0}, {0xff,0xff,0xff},\n};\nstring s[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\",\n};\nint conv(string s)\n{\n  int n=0,i;\n  for(i=0;i<2;i++){\n    n *= 16;\n    if('0' <= s[i] && s[i] <= '9') n += s[i] - '0';\n    else n += s[i] - 'a' + 10;\n  }\n  return n;\n}\nint main()\n{\n  string i;\n  for(;;){\n    cin >> i;\n    if(i==\"0\") break;\n    int r,g,b;\n    r = conv(i.substr(1,2));\n    g = conv(i.substr(3,2));\n    b = conv(i.substr(5,2));\n    int d,e=0x1fffffff,j,k;\n    for(j=0;j<8;j++){\n      d = (r-m[j][0])*(r-m[j][0])+(g-m[j][1])*(g-m[j][1])+(b-m[j][2])*(b-m[j][2]);\n      if(e>d) {\n\te = d;\n\tk = j;\n      }\n    }\n    cout << s[k] << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n//#include <utility>\n#include <set>\n#include <iostream>\n//#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n//#include <functional>\n#include <sstream>\n//#include <deque>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n//#include <cctype>\n#include <cstring>\n//#include <ctime>\n#include <iterator>\n#include <bitset>\n//#include <numeric>\n//#include <list>\n//#include <iomanip>\n\n#if __cplusplus >= 201103L\n#include <array>\n#include <tuple>\n#include <initializer_list>\n#include <unordered_set>\n#include <unordered_map>\n#include <forward_list>\n\n#define cauto const auto&\n#else\n\n#endif\n\nusing namespace std;\n\n\nnamespace{\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\ntypedef vector<int> vint;\ntypedef vector<vector<int> > vvint;\ntypedef vector<long long> vll, vLL;\ntypedef vector<vector<long long> > vvll, vvLL;\n\n#define VV(T) vector<vector< T > >\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){\n    v.assign(a, vector<T>(b, t));\n}\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >> t;\n}\n\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\n#define RALL(v) (v).rbegin(),(v).rend()\n\n\n#define MOD 1000000007LL\n#define EPS 1e-8\nstatic const int INF=1<<24;\nmap<char,int> ma;\nvoid mainmain(){\n\trep(i,10){\n\t\tma[(char)(i+'0')]=i;\n\t}\n\tchar a[]={'a','b','c','d','e','f'};\n\trep(i,6){\n\t\tma[a[i]]=i+10;\n\t}\n\tstring s;\n\tint r[]={0,0,0,0,1,1,1,1};\n\tint g[]={0,0,1,1,0,0,1,1};\n\tint b[]={0,1,0,1,0,1,0,1};\n\tstring ans[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\twhile(cin>>s,s[0]!='0'){\n\t\tint rr=0,gg=0,bb=0;\n\t\trr=ma[s[1]]*16+ma[s[2]];\n\t\tgg=ma[s[3]]*16+ma[s[4]];\n\t\tbb=ma[s[5]]*16+ma[s[6]];\n\t\tint c=-1;\n\t\tint d=INF;\n\t\trep(i,8){\n\t\t\tint t=(rr-r[i]*256)*(rr-r[i]*256)+(gg-g[i]*256)*(gg-g[i]*256)+(bb-b[i]*256)*(bb-b[i]*256);\n\t\t\tif(t<d){\n\t\t\t\td=t;\n\t\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tcout<<ans[c]<<endl;\n\t}\n}\n\n\n\n}\nmain() try{\n    mainmain();\n}\ncatch(...){\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void){\n    string s;\n    while (cin>>s) {\n        if (s==\"0\") {\n            break;\n        } else {\n            int r=0,g=0,b=0;\n            double min=100000.0;\n            for (int i=1;i<7;i++) {\n                if (i==1) {\n                    if (s.at(i)=='a') {\n                        r=r+16*10;\n                    } else if (s.at(i)=='b') {\n                        r=r+16*11;\n                    } else if (s.at(i)=='c') {\n                        r=r+16*12;\n                    } else if (s.at(i)=='d') {\n                        r=r+16*13;\n                    } else if (s.at(i)=='e') {\n                        r=r+16*14;\n                    } else if (s.at(i)=='f') {\n                        r=r+16*15;\n                    } else if (s.at(i)=='9') {\n                        r=r+16*9;\n                    } else if (s.at(i)=='8') {\n                        r=r+16*8;\n                    } else if (s.at(i)=='7') {\n                        r=r+16*7;\n                    } else if (s.at(i)=='6') {\n                        r=r+16*6;\n                    } else if (s.at(i)=='5') {\n                        r=r+16*5;\n                    } else if (s.at(i)=='4') {\n                        r=r+16*4;\n                    } else if (s.at(i)=='3') {\n                        r=r+16*3;\n                    } else if (s.at(i)=='2') {\n                        r=r+16*2;\n                    } else if (s.at(i)=='1') {\n                        r=r+16*1;\n                    } else if (s.at(i)=='0') {\n                        r=r+16*0;\n                    }\n                } else if (i==2) {\n                    if (s.at(i)=='a') {\n                        r=r+10;\n                    } else if (s.at(i)=='b') {\n                        r=r+11;\n                    } else if (s.at(i)=='c') {\n                        r=r+12;\n                    } else if (s.at(i)=='d') {\n                        r=r+13;\n                    } else if (s.at(i)=='e') {\n                        r=r+14;\n                    } else if (s.at(i)=='f') {\n                        r=r+15;\n                    } else if (s.at(i)=='9') {\n                        r=r+9;\n                    } else if (s.at(i)=='8') {\n                        r=r+8;\n                    } else if (s.at(i)=='7') {\n                        r=r+7;\n                    } else if (s.at(i)=='6') {\n                        r=r+6;\n                    } else if (s.at(i)=='5') {\n                        r=r+5;\n                    } else if (s.at(i)=='4') {\n                        r=r+4;\n                    } else if (s.at(i)=='3') {\n                        r=r+3;\n                    } else if (s.at(i)=='2') {\n                        r=r+2;\n                    } else if (s.at(i)=='1') {\n                        r=r+1;\n                    } else if (s.at(i)=='0') {\n                        r=r+0;\n                    }\n                } else if (i==3) {\n                    if (s.at(i)=='a') {\n                        g=g+16*10;\n                    } else if (s.at(i)=='b') {\n                        g=g+16*11;\n                    } else if (s.at(i)=='c') {\n                        g=g+16*12;\n                    } else if (s.at(i)=='d') {\n                        g=g+16*13;\n                    } else if (s.at(i)=='e') {\n                        g=g+16*14;\n                    } else if (s.at(i)=='f') {\n                        g=g+16*15;\n                    } else if (s.at(i)=='9') {\n                        g=g+16*9;\n                    } else if (s.at(i)=='8') {\n                        g=g+16*8;\n                    } else if (s.at(i)=='7') {\n                        g=g+16*7;\n                    } else if (s.at(i)=='6') {\n                        g=g+16*6;\n                    } else if (s.at(i)=='5') {\n                        g=g+16*5;\n                    } else if (s.at(i)=='4') {\n                        g=g+16*4;\n                    } else if (s.at(i)=='3') {\n                        g=g+16*3;\n                    } else if (s.at(i)=='2') {\n                        g=g+16*2;\n                    } else if (s.at(i)=='1') {\n                        g=g+16*1;\n                    } else if (s.at(i)=='0') {\n                        g=g+16*0;\n                    }\n                } else if (i==4) {\n                    if (s.at(i)=='a') {\n                        g=g+10;\n                    } else if (s.at(i)=='b') {\n                        g=g+11;\n                    } else if (s.at(i)=='c') {\n                        g=g+12;\n                    } else if (s.at(i)=='d') {\n                        g=g+13;\n                    } else if (s.at(i)=='e') {\n                        g=g+14;\n                    } else if (s.at(i)=='f') {\n                        g=g+15;\n                    } else if (s.at(i)=='9') {\n                        g=g+9;\n                    } else if (s.at(i)=='8') {\n                        g=g+8;\n                    } else if (s.at(i)=='7') {\n                        g=g+7;\n                    } else if (s.at(i)=='6') {\n                        g=g+6;\n                    } else if (s.at(i)=='5') {\n                        g=g+5;\n                    } else if (s.at(i)=='4') {\n                        g=g+4;\n                    } else if (s.at(i)=='3') {\n                        g=g+3;\n                    } else if (s.at(i)=='2') {\n                        g=g+2;\n                    } else if (s.at(i)=='1') {\n                        g=g+1;\n                    } else if (s.at(i)=='0') {\n                        g=g+0;\n                    }\n                } else if (i==5) {\n                    if (s.at(i)=='a') {\n                        b=b+16*10;\n                    } else if (s.at(i)=='b') {\n                        b=b+16*11;\n                    } else if (s.at(i)=='c') {\n                        b=b+16*12;\n                    } else if (s.at(i)=='d') {\n                        b=b+16*13;\n                    } else if (s.at(i)=='e') {\n                        b=b+16*14;\n                    } else if (s.at(i)=='f') {\n                        b=b+16*15;\n                    } else if (s.at(i)=='9') {\n                        b=b+16*9;\n                    } else if (s.at(i)=='8') {\n                        b=b+16*8;\n                    } else if (s.at(i)=='7') {\n                        b=b+16*7;\n                    } else if (s.at(i)=='6') {\n                        b=b+16*6;\n                    } else if (s.at(i)=='5') {\n                        b=b+16*5;\n                    } else if (s.at(i)=='4') {\n                        b=b+16*4;\n                    } else if (s.at(i)=='3') {\n                        b=b+16*3;\n                    } else if (s.at(i)=='2') {\n                        b=b+16*2;\n                    } else if (s.at(i)=='1') {\n                        b=b+16*1;\n                    } else if (s.at(i)=='0') {\n                        b=b+16*0;\n                    }\n                } else if (i==6) {\n                    if (s.at(i)=='a') {\n                        b=b+10;\n                    } else if (s.at(i)=='b') {\n                        b=b+11;\n                    } else if (s.at(i)=='c') {\n                        b=b+12;\n                    } else if (s.at(i)=='d') {\n                        b=b+13;\n                    } else if (s.at(i)=='e') {\n                        b=b+14;\n                    } else if (s.at(i)=='f') {\n                        b=b+15;\n                    } else if (s.at(i)=='9') {\n                        b=b+9;\n                    } else if (s.at(i)=='8') {\n                        b=b+8;\n                    } else if (s.at(i)=='7') {\n                        b=b+7;\n                    } else if (s.at(i)=='6') {\n                        b=b+6;\n                    } else if (s.at(i)=='5') {\n                        b=b+5;\n                    } else if (s.at(i)=='4') {\n                        b=b+4;\n                    } else if (s.at(i)=='3') {\n                        b=b+3;\n                    } else if (s.at(i)=='2') {\n                        b=b+2;\n                    } else if (s.at(i)=='1') {\n                        b=b+1;\n                    } else if (s.at(i)=='0') {\n                        b=b+0;\n                    }\n                }\n            }\n            string color;\n                double black=sqrt( (0-r)*(0-r)+(0-g)*(0-g)+(0-b)*(0-b) );\n                if (black<min) {\n                    min=black;\n                    color=\"black\";\n                }\n                double blue=sqrt( (0-r)*(0-r)+(0-g)*(0-g)+(255-b)*(255-b) );\n                if (blue<min) {\n                    min=blue;\n                    color=\"blue\";\n                }\n                double lime=sqrt( (0-r)*(0-r)+(255-g)*(255-g)+(0-b)*(0-b) );\n                if (lime<min) {\n                    min=lime;\n                    color=\"lime\";\n                }\n                double aqua=sqrt( (0-r)*(0-r)+(255-g)*(255-g)+(255-b)*(255-b) );\n                if (aqua<min) {\n                    min=aqua;\n                    color=\"aqua\";\n                }\n                double red=sqrt( (255-r)*(255-r)+(0-g)*(0-g)+(0-b)*(0-b) );\n                if (red<min) {\n                    min=red;\n                    color=\"red\";\n                }\n                double fuchsia=sqrt( (255-r)*(255-r)+(0-g)*(0-g)+(255-b)*(255-b) );\n                if (fuchsia<min) {\n                    min=fuchsia;\n                    color=\"fuchsia\";\n                }\n                double yellow=sqrt( (255-r)*(255-r)+(255-g)*(255-g)+(0-b)*(0-b) );\n                if (yellow<min) {\n                    min=yellow;\n                    color=\"yellow\";\n                }\n                double white=sqrt( (255-r)*(255-r)+(255-g)*(255-g)+(255-b)*(255-b) );\n                if (white<min) {\n                    min=white;\n                    color=\"white\";\n                }\n                cout<<color<<endl;\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\t\n\nusing namespace std;\nstruct color\n{\n\tstring str;\n\tint RGB[3];\n};\n\nvoid solve()\n{\n\tcolor Color[8];\n\tColor[0].str = \"black\";\n\tColor[0].RGB[0] = 0;\tColor[0].RGB[1] = 0;\tColor[0].RGB[2] = 0;\n\tColor[1].str = \"blue\";\n\tColor[1].RGB[0] = 0;\tColor[1].RGB[1] = 0;\tColor[1].RGB[2] = 255;\n\tColor[2].str = \"lime\";\n\tColor[2].RGB[0] = 0;\tColor[2].RGB[1] = 255;\tColor[2].RGB[2] = 0;\n\tColor[3].str = \"aqua\";\n\tColor[3].RGB[0] = 0;\tColor[3].RGB[1] = 255;\tColor[3].RGB[2] = 255;\n\tColor[4].str = \"red\";\n\tColor[4].RGB[0] = 255;\tColor[4].RGB[1] = 0;\tColor[4].RGB[2] = 0;\n\tColor[5].str = \"fuchsia\";\n\tColor[5].RGB[0] = 255;\tColor[5].RGB[1] = 0;\tColor[5].RGB[2] = 255;\n\tColor[6].str = \"yellow\";\n\tColor[6].RGB[0] = 255;\tColor[6].RGB[1] = 255;\tColor[6].RGB[2] = 0;\n\tColor[7].str = \"white\";\n\tColor[7].RGB[0] = 255;\tColor[7].RGB[1] = 255;\tColor[7].RGB[2] = 255;\n\n\tstring str;\n\twhile(cin >> str, str[0] != '0')\n\t{\n\t\tint C[3] = {0};\n\t\tfor(int i = 0; i < 3; ++i)\n\t\t{\n\t\t\tif('a' <= str[2 * i + 1] && str[2 * i + 1] <= 'f')\n\t\t\t{\n\t\t\t\tC[i] += (str[2 * i + 1] - 'a' + 10) * 16;\n\t\t\t}\n\t\t\telse if('0' <= str[2 * i + 1] && str[2 * i + 1] <= '9')\n\t\t\t{\n\t\t\t\tC[i] += (str[2 * i + 1] - '0') * 16;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1; i < 4; ++i)\n\t\t{\n\t\t\tif('a' <= str[2 * i] && str[2 * i] <= 'f')\n\t\t\t{\n\t\t\t\tC[i - 1] += str[2 * i] - 'a' + 10;\n\t\t\t}\n\t\t\telse if('0' <= str[2 * i] && str[2 * i] <= '9')\n\t\t\t{\n\t\t\t\tC[i - 1] += str[2 * i] - '0';\n\t\t\t}\n\t\t}\n\t\tint index = 0;\n\t\tint dist = 0;\n\t\tint min = 999999999;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tdist = (C[0] - Color[i].RGB[0]) * (C[0] - Color[i].RGB[0])\n\t\t\t\t + (C[1] - Color[i].RGB[1]) * (C[1] - Color[i].RGB[1])\n\t\t\t\t + (C[2] - Color[i].RGB[2]) * (C[2] - Color[i].RGB[2]);\n\t\t\tif(dist < min)\n\t\t\t{\n\t\t\t\tmin = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tcout << Color[index].str << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nconst int INF = 1 << 28;\n\nint to_hex (char a) {\n    if ('0' <= a && a <= '9') return a - '0';\n    else return a - 'a' + 10;\n}\n\nint main ()\n{\n    int R[] = {0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff};\n    int G[] = {0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff};\n    int B[] = {0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff};\n    string color[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\n    string str;\n    while (cin >> str, str != \"0\") {\n        int r = to_hex(str[1]) * 16 + to_hex(str[2]);\n        int g = to_hex(str[3]) * 16 + to_hex(str[4]);\n        int b = to_hex(str[5]) * 16 + to_hex(str[6]);\n\n        int D = INF;\n        string res;\n        for (int i = 0; i < 8; i++) {\n            int d = ((R[i] - r) * (R[i] - r) + (G[i] - g) * (G[i] - g) + (B[i] - b) * (B[i] - b));\n            if (d < D) {\n                res = color[i];\n                D = d;\n            }\n        }\n        cout << res << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, s, n) for(int i = s; i < (int)n; i++)\n#define per(i, n) for(int i = n; i >= 0; i--)\n#define ROF(i, s, n) for(int i = s; i >= (int)n; i--)\n#define FORIT(i, A) for (auto i : A)\n#define PRINT(x) cout << (x) << \"\\n\"\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define MP make_pair\n#define EACH(i, n) for (__typeof((n).begin()) i = (n).begin(); i != (n).end(); ++i)\n#define SZ(a) int((a).size())\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n#define NCLR(a) memset((a), -1 ,sizeof(a))\n#define dump(x) cout << #x << \" = \" << (x) << \"\\n\";\n#define debug(x) cout << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << \"\\n\";\n#define sq(n) (n) * (n)\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef priority_queue<int> maxpq;\ntypedef priority_queue< int, vector<int>, greater<int> > minpq;\nstatic const double EPS = 1e-10;\nstatic const double PI = acos( -1.0 );\nstatic const int mod = 1000000007;\nstatic const int INF = 1 << 25;\nstatic const LL LL_INF = 1152921504606846976;\nstatic const int dx[] = { -1, 0, 1, 0, 1, -1, 1, -1 };\nstatic const int dy[] = { 0, -1, 0, 1, 1, 1, -1, -1 };\n\nstatic const int r[ 8 ] = { 0, 0, 0, 0, 255, 255, 255, 255 }, g[ 8 ] = { 0, 0, 255, 255, 0, 0, 255, 255 }, b[ 8 ] = { 0, 255, 0, 255, 0, 255, 0, 255 };\nchar s;\nint input_r, input_g, input_b;\nint now_a;\nstring ans;\nstring a[ 8 ] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\nint main() {\n\twhile ( ~scanf( \"%1s\", &s ) && s != '0' ) {\n\t\tscanf( \"%2x%2x%2x\", &input_r, &input_g, &input_b );\n\t\tnow_a = INF;\n\t\tfor ( int i = 0; i < 8; i++ ) {\n\t\t\tif ( now_a > sq( r[ i ] - input_r ) + sq( g[ i ] - input_g ) + sq( b[ i ] - input_b ) ) {\n\t\t\t\tnow_a = sq( r[ i ] - input_r ) + sq( g[ i ] - input_g ) + sq( b[ i ] - input_b );\n\t\t\t\tans = a[ i ];\n\t\t\t}\n\t\t}\n\t\tprintf( \"%s\\n\", ans.c_str() );\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,string> pis;\nvector<pis> v;\n\ntemplate<class T>\nT sqr(T a) { return a * a; }\n\nint main() {\n\tstring s;\n\n\tv.push_back(pis(0x000000, \"black\"));\n\tv.push_back(pis(0x0000ff, \"blue\"));\n\tv.push_back(pis(0x00ff00, \"lime\"));\n\tv.push_back(pis(0x00ffff, \"aqua\"));\n\tv.push_back(pis(0xff0000, \"red\"));\n\tv.push_back(pis(0xff00ff, \"fuchsia\"));\n\tv.push_back(pis(0xffff00, \"yellow\"));\n\tv.push_back(pis(0xffffff, \"white\"));\n\n\twhile(cin >> s, s[0]-'0') {\n\t\tint a = 0;\n\t\tfor(int i = 0; i < 6; i++) {\n\t\t\ta *= 16;\n\t\t\tif(0 <= s[i+1] && s[i+1] <= '9')\n\t\t\t\ta += s[i+1] - '0';\n\t\t\telse\n\t\t\t\ta += s[i+1] - 'a' + 10;\n\t\t}\n\n\t\tint res = -1;\n\t\tll mn = 1e9;\n\t\tfor(int i = 0; i < v.size(); i++) {\n\t\t\tll tmp = 0;\n\t\t\tfor(int j = 0; j < 3; j++) {\n\t\t\t\ttmp += sqr(((v[i].first >> (j * 8)) & 0xff) - ((a >> (j * 8)) & 0xff));\n\t\t\t}\n\t\t\tif(tmp < mn) {\n\t\t\t\tmn = tmp;\n\t\t\t\tres = i;\n\t\t\t}\n\t\t}\n\t\tcout << v[res].second << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <algorithm>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <cstring>\n#include <deque>\n#include <cstdio>\n#include <cmath>\n#include <complex>\n#include <iostream>\n#include <iterator>\n\nusing namespace std;\n\n#define reep(i,f,t) for(int i=f ; i<int(t) ; ++i)\n#define rep(i,n) reep(i, 0, n) \n#define sq(a) ((a)*(a))\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\n\nint main()\n{\n\tchar str[8];\n\twhile(scanf(\"%s\", str), str[0]!='0'){\n\t\tint v;\n\t\tsscanf(str+1, \"%x\", &v);\n\t\tint r = v / 0x10000;\n\t\tint g = (v % 0x10000) / 0x100;\n\t\tint b =  v % 0x100;\n\t\t\n\t\tconst int rs[] = {0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff};\n\t\tconst int gs[] = {0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff};\n\t\tconst int bs[] = {0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff};\n\t\t\n\t\tint bestid = 0;\n\t\tint best = 1<<29;\n\t\trep(i, 8){\n\t\t\tint d = sq(r-rs[i])+sq(g-gs[i])+sq(b-bs[i]);\n\t\t\tif(d < best){\n\t\t\t\tbest = d;\n\t\t\t\tbestid = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst char* name[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\t\tputs(name[bestid]);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cmath>\nstruct Color {char s[8]; int R, G, B; double d;};\nColor t[8] = {{\"black\", 0, 0, 0}, {\"blue\", 0, 0, 255}, {\"lime\", 0, 255, 0}, {\"aqua\", 0, 255, 255}, {\"red\", 255, 0, 0}, {\"fuchsia\", 255, 0, 255}, {\"yellow\", 255, 255, 0}, {\"white\", 255, 255, 255}};\nint main()\n{\n\tchar s[8];\n\tint R, G, B, i, r;\n\tdouble rd;\n\twhile (scanf(\"%8s\", s))\n\t{\n\t\tif (strcmp(s, \"0\") == 0) break;\n\t\tsscanf(s, \"#%2x%2x%2x\", &R, &G, &B);\n\t\trd = 500.0;\n\t\tfor (i = 0; i < 8; i++)\n\t\t{\n\t\t\tt[i].d = sqrt((double)(R - t[i].R)*(R - t[i].R) + (double)(G - t[i].G)*(G - t[i].G) + (double)(B - t[i].B)*(B - t[i].B));\n\t\t\tif (rd >= t[i].d)\n\t\t\t\trd = t[i].d, r = i;\n\t\t}\n\t\tprintf(\"%s\\n\", t[r].s);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define PB push_back\n#define MP make_pair\nusing namespace std;\ntypedef long long ll;\nint to_int(string s){\n\tint k=1,res=0;\n\tfor(int i=s.size()-1;i>=0;i--){\n\t\tif('0'<=s[i]&&s[i]<='9'){\n\t\t\tres+=k*(s[i]-'0');\n\t\t}else{\n\t\t\tres+=k*(s[i]-'a'+10);\n\t\t}\n\t\tk*=16;\n\t}\n\treturn res;\n}\n\nint main(){\n\tstring ans[2][2][2];\n\tans[0][0][0]=\"black\";\n\tans[0][0][1]=\"blue\";\n\tans[0][1][0]=\"lime\";\n\tans[0][1][1]=\"aqua\";\n\tans[1][0][0]=\"red\";\n\tans[1][0][1]=\"fuchsia\";\n\tans[1][1][0]=\"yellow\";\n\tans[1][1][1]=\"white\";\n\tstring s;\n\twhile(cin>>s&&s[0]!='0'){\n\t\tint a,b,c,dat[3];\n\t\tfor(int i=1;i<6;i+=2){\n\t\t\tstring tmp;int ans[3];\n\t\t\ttmp.assign(s,i,2);\n\t\t\tint d=to_int(tmp);\n\t\t\tif(d<=(to_int(\"ff\")-d))ans[i/2]=0;\n\t\t\telse ans[i/2]=1;\n\t\t}\n\t\tcout<<ans[dat[0]][dat[1]][dat[2]]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint henkan(int i){\n\tif('0'<=i && i<='9') return i-'0';\n\telse return i-'a'+10;\n}\nint main(){\n\twhile(true){\n\t\tstring s;\n\t\tcin >> s;\n\t\tif(s==\"0\") break;\n\t\tint r,g,b;\n\t\tr=henkan(s[1])*16+henkan(s[2]);\n\t\tg=henkan(s[3])*16+henkan(s[4]);\n\t\tb=henkan(s[5])*16+henkan(s[6]);\n\t\tbool rr=true,gg=true,bb=true;\n\t\tif(r<128) rr=false;\n\t\tif(g<128) gg=false;\n\t\tif(b<128) bb=false;\n\t\tif(rr && gg && bb) cout << \"white\";\n\t\tif(rr && gg && !bb) cout << \"yellow\";\n\t\tif(rr && !gg && bb) cout << \"fuchsia\";\n\t\tif(rr && !gg && !bb) cout << \"red\";\n\t\tif(!rr && gg && bb) cout << \"aqua\";\n\t\tif(!rr && gg && !bb) cout << \"lime\";\n\t\tif(!rr && !gg && bb) cout << \"blue\";\n\t\tif(!rr && !gg && !bb) cout << \"black\";\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\n\nusing namespace std;\n\nint main(){\n\n\tstring inp;\n\tstring base = { \"0123456789abcdef\" };\n\tstring scol[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\tint icol[8][3] = { { 0, 0, 0 }, { 0, 0, 256 }, { 0, 256, 0 }, { 0, 256, 256 }, { 256, 0, 0 }, { 256, 0, 256 }, { 256, 256, 0 }, { 256, 256, 256 } };\n\tint r, g, b;\n\tint ans;\n\tdouble ansnum;\n\n\twhile (1){\n\n\t\tcin >> inp;\n\t\tif (inp == \"0\") break;\n\n\t\tr = base.find(inp[2]) * 1 + base.find(inp[1]) * 16;\n\t\tg = base.find(inp[4]) * 1 + base.find(inp[3]) * 16;\n\t\tb = base.find(inp[6]) * 1 + base.find(inp[5]) * 16;\n\n\t\tans = 0;\n\t\tansnum = sqrt(pow(r - icol[0][0], 2.0) + pow(g - icol[0][1], 2.0) + pow(b - icol[0][2], 2.0));\n\t\tfor (int i = 1; i < 8; i++){\n\t\t\tif (ansnum>sqrt(pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0))){\n\t\t\t\tans = i;\n\t\t\t\tansnum = sqrt(pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0));\n\t\t\t}\n\t\t}\n\n\t\tcout << scol[ans] << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <vector>\n#include <string>\n#include <tuple>\n\nusing namespace std;\n\nclass Solver{\n\n};\n\nint main() {\n\tvector<tuple<string, string>> colors{\n\t\tmake_tuple(\"#000000\",\"black\"),\n\t\tmake_tuple(\"#0000ff\",\"blue\"),\n\t\tmake_tuple(\"#00ff00\",\"lime\"),\n\t\tmake_tuple(\"#00ffff\",\"aqua\"),\n\t\tmake_tuple(\"#ff0000\",\"red\"),\n\t\tmake_tuple(\"#ff00ff\",\"fuchsia\"),\n\t\tmake_tuple(\"#ffff00\",\"yellow\"),\n\t\tmake_tuple(\"#ffffff\",\"white\"),\n\t};\n\n\n\twhile (true) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tif (s[0] == '0')break;\n\n\t\tint num = -1;\n\t\tint dd = 1e9;\n\t\tint r = 0;\n\t\tint g = 0;\n\t\tint b = 0;\n\t\tif ('a' <= s[1] && s[1] <= 'f')r += 16 * (s[1] - 'a' + 10);\n\t\telse r += 16 * (s[1] - '0');\n\t\tif ('a' <= s[2] && s[2] <= 'f')r += (s[2] - 'a' + 10);\n\t\telse r += (s[2] - '0');\n\t\tif ('a' <= s[3] && s[3] <= 'f')g += 16 * (s[3] - 'a' + 10);\n\t\telse g += 16 * (s[3] - '0');\n\t\tif ('a' <= s[4] && s[4] <= 'f')g += (s[4] - 'a' + 10);\n\t\telse g += (s[4] - '0');\n\t\tif ('a' <= s[5] && s[5] <= 'f')b += 16 * (s[5] - 'a' + 10);\n\t\telse b += 16 * (s[5] - '0');\n\t\tif ('a' <= s[6] && s[6] <= 'f')b += (s[6] - 'a' + 10);\n\t\telse b += (s[6] - '0');\n\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tint rr = 0;\n\t\t\tint gg = 0;\n\t\t\tint bb = 0;\n\t\t\tif (get<0>(colors[i])[1] == 'f')rr = 255;\n\t\t\tif (get<0>(colors[i])[3] == 'f')gg = 255;\n\t\t\tif (get<0>(colors[i])[5] == 'f')bb = 255;\n\n\t\t\tint tmp_d = (rr - r) * (rr - r)\n\t\t\t\t+ (gg - g) * (gg - g) + (bb - b) * (bb - b);\n\t\t\tif (tmp_d < dd) {\n\t\t\t\tnum = i;\n\t\t\t\tdd = tmp_d;\n\t\t\t}\n\t\t}\n\n\t\tcout << get<1>(colors[num]) << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define it ::iterator\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double ESP=1e-10;\nusing namespace std;\nint a[8][3]={\n  {  0,  0,  0},\n  {  0,  0,256},\n  {  0,256,  0},\n  {  0,256,256},\n  {256,  0,  0},\n  {256,  0,256},\n  {256,256,  0},\n  {256,256,256}\n};\nstring out[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint main(){\n  string in;\n  map<char,int>c;\n  rep(i,10)c[i+'0']=i;\n  loop(i,'a','f'+1)c[i]=i-'a'+10;\n  while(cin>>in,in!=\"0\"){\n    int min=1e9;\n    int mini=1e9;\n    int b[3]={c[in[1]]*16+c[in[2]],c[in[3]]*16+c[in[4]],c[in[5]]*16+c[in[6]]};\n    //cout<<b[0]<<\" \"<<b[1]<<\" \"<<b[2]<<endl;\n    rep(i,8){\n      double sum=0;\n      rep(j,3)sum+=pow(b[j]-a[i][j],2);\n      if(min>sum){min=sum;mini=i;}\n    }\n    cout<<out[mini]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main() {\n\tchar l[6];\n\tstring s;\n\twhile (cin >> s) {\n\t\tfor (int i = 0; i < 6; i++) {\n\t\t\tl[i] = s[i + 1];\n\t\t}\n\t\tint r, g, b;\n\t\tint z[6];\n\n\t\tfor (int i = 0; i < 6; i++) {\n\t\t\tif (l[i] == '0') {\n\t\t\t\tz[i] = 0;\n\t\t\t}\n\t\t\telse if (l[i] == '1') {\n\t\t\t\tz[i] = 1;\n\t\t\t}\n\t\t\telse if (l[i] == '2') {\n\t\t\t\tz[i] = 2;\n\t\t\t}\n\t\t\telse if (l[i] == '3') {\n\t\t\t\tz[i] = 3;\n\t\t\t}\n\t\t\telse if (l[i] == '4') {\n\t\t\t\tz[i] = 4;\n\t\t\t}\n\t\t\telse if (l[i] == '5') {\n\t\t\t\tz[i] = 5;\n\t\t\t}\n\t\t\telse if (l[i] == '6') {\n\t\t\t\tz[i] = 6;\n\t\t\t}\n\t\t\telse if (l[i] == '7') {\n\t\t\t\tz[i] = 7;\n\t\t\t}\n\t\t\telse if (l[i] == '8') {\n\t\t\t\tz[i] = 8;\n\t\t\t}\n\t\t\telse if (l[i] == '9') {\n\t\t\t\tz[i] = 9;\n\t\t\t}\t\t\t\n\t\t\telse if (l[i] == 'a') {\n\t\t\t\tz[i] = 10;\n\t\t\t}\n\t\t\telse if (l[i] == 'b') {\n\t\t\t\tz[i] = 11;\n\t\t\t}\n\t\t\telse if (l[i] == 'c') {\n\t\t\t\tz[i] = 12;\n\t\t\t}\n\t\t\telse if (l[i] == 'd') {\n\t\t\t\tz[i] = 13;\n\t\t\t}\n\t\t\telse if (l[i] == 'e') {\n\t\t\t\tz[i] = 14;\n\t\t\t}\n\t\t\telse if (l[i] == 'f') {\n\t\t\t\tz[i] = 15;\n\t\t\t}\n\t\t}\n\n\t\tr = z[0] * 16 + z[1];\n\t\tg = z[2] * 16 + z[3];\n\t\tb = z[4] * 16 + z[5];\n\n\t\t\n\t\t//ff == 255;\n\t\tif (r <= 128) {\n\t\t\t//black,blue,lime,aqua\n\t\t\tif (g <= 128) {\n\t\t\t\t//black,blue\n\t\t\t\tif (b <= 128) {\n\t\t\t\t\tcout << \"black\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcout << \"blue\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//lime,aqua\n\t\t\t\tif (b <= 128) {\n\t\t\t\t\tcout << \"lime\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcout << \"aqua\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//red,fuchsia,yellow,white\n\t\t\tif (g <= 128) {\n\t\t\t\t//red,fu\n\t\t\t\tif (b <= 128) {\n\t\t\t\t\tcout << \"red\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcout << \"fuchsia\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (b <= 128) {\n\t\t\t\t\tcout << \"yellow\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcout << \"white\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nclass color{\npublic:\n\tint r,g,b;\n\tstring name;\n\tcolor(int x,int y,int z){r=x;g=y;b=z;}\n\tcolor(string s,int x, int y, int z){name = s; r=x; g=y; b=z;}\n\n\tdouble dist(const color arg){\n\t\treturn sqrt(pow(abs(r - arg.r),2) +\n\t\t\t\tpow(abs(g - arg.g),2) +\n\t\t\t\tpow(abs(b - arg.b),2));\n\t}\n};\n\nint c2d(char c){\n\tif('a' <= c && c <= 'f'){\n\t\treturn c - 'a' + 10;\n\t}else{\n\t\treturn c - '0';\n\t}\n}\n\nint main(void){\n\tstring str;\n\tvector<color> co;\n\tco.push_back(color(\"black\",0,0,0));\n\tco.push_back(color(\"blue\",0,0,255));\n\tco.push_back(color(\"lime\",0,255,0));\n\tco.push_back(color(\"aqua\",0,255,255));\n\tco.push_back(color(\"red\",255,0,0));\n\tco.push_back(color(\"fuchsia\",255,0,255));\n\tco.push_back(color(\"yellow\",255,255,0));\n\tco.push_back(color(\"white\",255,255,255));\n\twhile(cin >> str){\n\t\tif(str[0] == '0') break;\n\t\tint c[3] = {0,0,0};\n\t\tchar tmp;\n\t\tdouble dist = 1 << 30;\n\t\tint index;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tc[i] += c2d(str[i*2+1]) * 16;\n\t\t\tc[i] += c2d(str[i*2+2]);\n\t\t}\n\t\tcolor arg = color(c[0],c[1],c[2]);\n\n\t\tfor(int i=0;i<8;i++){\n\t\t\tdouble tdist = co[i].dist(arg);\n\t\t\tif(dist > tdist){\n\t\t\t\tdist = tdist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tcout << co[index].name << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nstruct color {\n\tint r, g, b;\n};\nmap<string, color>mp{\n\t{\"black\",{0,0,0}},\n\t{\"blue\",{0,0,0xff}},\n\t{\"lime\",{0,0xff,0} },\n\t{\"aqua\",{0,0xff,0xff}},\n\t{\"red\",{0xff,0,0}},\n\t{\"fuchsia\",{0xff,0,0xff}},\n\t{\"yellow\",{0xff,0xff,0}},\n\t{\"white\",{0xff,0xff,0xff}}\n};\nint main() {\n\tstring s;\n\twhile (cin >> s, s != \"0\") {\n\t\tint r, g, b;\n\t\tsscanf(s.data(), \"%*c%2x%2x%2x\", &r, &g, &b);\n\t\tint Min = INT_MAX;\n\t\tstring ans;\n\t\tfor (auto p : mp) {\n\t\t\tint d = abs((r - p.second.r)*(r - p.second.r) + (g - p.second.g)*(g - p.second.g) + (b - p.second.b)*(b - p.second.b));\n\t\t\tif (d < Min) {\n\t\t\t\tMin = d;\n\t\t\t\tans = p.first;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <climits>\nusing namespace std;\n\nstruct Color {\n    string name; int r, g, b;\n};\nvector<Color> colors = {\n    (Color){\"black\", 0, 0, 0},\n    (Color){\"blue\", 0, 0, 255},\n    (Color){\"lime\", 0, 255, 0},\n    (Color){\"aqua\", 0, 255, 255},\n    (Color){\"red\", 255, 0, 0},\n    (Color){\"fuchsia\", 255, 0, 255},\n    (Color){\"yellow\", 255, 255, 0},\n    (Color){\"white\", 255, 255, 255}\n};\n\nint dec(char c) {\n    if (isdigit(c)) return c - '0';\n    return c - 'a' + 10;\n}\n\nint sq(int x) {\n    return x * x;\n}\n\nint main() {\n    string s;\n    while (cin >> s, s != \"0\") {\n        int r = dec(s[1]) * 16 + dec(s[2]);\n        int g = dec(s[3]) * 16 + dec(s[4]);\n        int b = dec(s[5]) * 16 + dec(s[6]);\n        int mn = INT_MAX, k = -1;\n        for (int i=0; i<(int)colors.size(); ++i) {\n            int t = sq(r-colors[i].r) + sq(g-colors[i].g) + sq(b-colors[i].b);\n            if (t < mn) {\n                mn = t;\n                k = i;\n            }\n        }\n        cout << colors[k].name << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define it ::iterator\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double ESP=1e-10;\nusing namespace std;\nint in[256]={0};\nint han[3][8]={\n  {0,0,0,0,256,256,256,256},\n  {0,0,256,256,0,0,256,256},\n  {0,256,0,256,0,256,0,256}\n};\nstring ss[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint main(){\n  string s;\n  loop(i,'0','9'+1)in[i]=i-'0';\n  loop(i,'a','g')in[i]=i-'a'+10;\n  while(cin>>s,s.size()!=1||s[0]!='0'){\n    int a[3]={0};\n    rep(i,3){\n      a[i]=in[s[2*i+1]]*16+in[s[2*i+2]];\n    }\n    long long int mi=1000000000;\n    int ms;\n    rep(i,8){\n      long long int sum=0;\n      rep(j,3)sum+=(han[j][i]-a[j])*(han[j][i]-a[j]);\n      if(mi>sum){\n\tms=i;\n\tmi=sum;\n      }\n    }\n    cout<<ss[ms]<<endl;\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n\nusing namespace std;\n\nvoid DevideColor(string, int&, int&, int&);\nint Atoi16(char);\ndouble Calculate(int, int, int, int, int, int);\n\nint main(){\n  int i, Red, Green, Blue;\n  double min, font[8];\n  string Color, StrongColor;\n  string color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\"yellow\", \"white\"};\n\n  while(1){\n    cin >> Color;\n    if(Color == \"0\") break;\n\n    DevideColor(Color, Red, Green, Blue);\n\n    font[0] = Calculate(Red, Green, Blue, 0, 0, 0);\n    font[1] = Calculate(Red, Green, Blue, 0, 0, 225);\n    font[2] = Calculate(Red, Green, Blue, 0, 225, 0);\n    font[3] = Calculate(Red, Green, Blue, 0, 225, 225);\n    font[4] = Calculate(Red, Green, Blue, 225, 0, 0);\n    font[5] = Calculate(Red, Green, Blue, 225, 0, 225);\n    font[6] = Calculate(Red, Green, Blue, 225, 225, 0);\n    font[7] = Calculate(Red, Green, Blue, 225, 225, 225);\n\n    min = font[0];\n    StrongColor = color[0];\n\n    for(i=1; i<8; ++i){\n      if(font[i] < min){\n        min = font[i];\n        StrongColor = color[i];\n      }\n    }\n\n    cout << StrongColor << endl;\n  }\n\n  return 0;\n\n}\n\nvoid DevideColor(string s, int& r, int& g, int& b){\n  string R, G, B;\n  copy(s.begin()+1, s.begin()+3, back_inserter(R));\n  copy(s.begin()+3, s.begin()+5, back_inserter(G));\n  copy(s.begin()+5, s.end(), back_inserter(B));\n  r = Atoi16(R[0])*16 + Atoi16(R[1]);\n  g = Atoi16(G[0])*16 + Atoi16(G[1]);\n  b = Atoi16(B[0])*16 + Atoi16(B[1]);\n}\n\nint Atoi16(char c){\n  int x;\n  if(c >= '0' && c <= '9')\n    x = c - 48;\n  else\n    x = c - 87;\n  return x;\n}\n\ndouble Calculate(int r, int g, int b, int _r, int _g, int _b){\n  int R, G, B;\n  R = r - _r;\n  G = g - _g;\n  B = b - _b;\n  return sqrt(R*R + G*G + B*B);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nstring str;\n\nstring t[8][4]={\n  {\"black\",\"00\",\"00\",\"00\"},\n  {\"blue\",\"00\",\"00\",\"ff\"},\n  {\"lime\",\"00\",\"ff\",\"00\"},\n  {\"aqua\",\"00\",\"ff\",\"ff\"},\n  {\"red\",\"ff\",\"00\",\"00\"},\n  {\"fuchsia\",\"ff\",\"00\",\"ff\"},\n  {\"yellow\",\"ff\",\"ff\",\"00\"},\n  {\"white\",\"ff\",\"ff\",\"ff\"}\n};\n\n\n\nint c2i(char ch){\n  if('0'<=ch&&ch<='9')return ch-'0';\n  return 10+ch-'a';\n}\n\nint cc2i(char ch,char ch2){\n  return c2i(ch)*16+c2i(ch2);\n}\n\nint s2i(string str){\n  return cc2i(str[0],str[1]);\n}\n\nint pow(int x){\n  return x*x;\n}\n\nint main(){\n  int a,mini,mini_no;\n  while(cin>>str){\n    if(str==\"0\")break;\n    mini=9999999;\n    for(int i=0;i<8;i++){\n      a=pow( cc2i(str[1],str[2]) - s2i(t[i][1]) ); \n      a+=pow(cc2i(str[3],str[4]) - s2i(t[i][2]) );\n      a+=pow(cc2i(str[5],str[6]) - s2i(t[i][3]) ); \n      if(a<mini){\n\tmini=a;\n\tmini_no=i;\n      }\n    }\n    cout<<t[mini_no][0]<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#include \"bits/stdc++.h\"\n#define rep(i, n) for(int i=0; i<(n); ++i)\n#define FOR(i, m, n) for(int i=(m); i<(n); ++i)\n#define rrep(i, n) for(int i=(n)-1; i>=0; --i)\n#define rfor(i, m, n) for(int i=(m); i>=(n); --i)\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n\nusing namespace std;\nusing LL = long long;\t\tusing VB = vector<bool>;\nusing VI = vector<int>;\t\tusing VL = vector<LL>;\nusing VS = vector<string>;\tusing VD = vector<double>;\nusing VVI = vector<VI>;\t\tusing VVL = vector<VL>;\nusing PII = pair<int, int>;\tusing PLL = pair<LL, LL>;\nusing VP = vector<PII>;\t\tusing VPL = vector<PLL>;\nconst int inf = (int)1e9;\nconst LL inf_ll = (LL)1e18, MOD = 1000000007;\nconst double PI = acos(-1.0), EPS = 1e-12;\n\ntemplate<class T>inline void Sort(T& a)noexcept { sort(all(a)); }\ntemplate<class T>inline void RSort(T& a)noexcept { sort(rall(a)); }\ntemplate<class T>inline void Reverse(T& a)noexcept { reverse(all(a)); }\ntemplate<class T>inline void Unique(T& a)noexcept { a.erase(unique(all(a)), a.end()); }\ntemplate<class T>inline T Sorted(T a)noexcept { Sort(a); return a; }\ntemplate<class T>inline T RSorted(T a)noexcept { RSort(a); return a; }\ntemplate<class T>inline T Reversed(T a)noexcept { Reverse(a); return a; }\ntemplate<class T>inline T Uniqued(T a)noexcept { Unique(a); return a; }\ntemplate<class T>inline auto Max(const T& a)noexcept { return *max_element(all(a)); }\ntemplate<class T>inline auto Min(const T& a)noexcept { return *min_element(all(a)); }\ntemplate<class T>inline int MaxPos(const T& a)noexcept { return max_element(all(a)) - a.begin(); }\ntemplate<class T>inline int MinPos(const T& a)noexcept { return min_element(all(a)) - a.begin(); }\ntemplate<class T, class U>inline int Count(const T& a, const  U& v)noexcept { return count(all(a), v); }\ntemplate<class T, class U>inline int Find(const T& a, const U& v)noexcept { auto pos = find(all(a), v); return pos == a.end() ? -1 : pos - a.begin(); }\ntemplate<class T, class U>inline U Sum(const T& a, const U& v)noexcept { return accumulate(all(a), v); }\ntemplate<class T, class U>inline int Lower(const T& a, const U& v)noexcept { return lower_bound(all(a), v) - a.begin(); }\ntemplate<class T, class U>inline int Upper(const T& a, const U& v)noexcept { return upper_bound(all(a), v) - a.begin(); }\ntemplate<class T, class P>inline void RemoveIf(T& a, P f)noexcept { a.erase(remove_if(all(a), f), a.end()); }\ntemplate<class T>inline T Age(T n, T m)noexcept { return (n + m - 1) / m; }\ntemplate<class T>inline T Age2(T n, T m)noexcept { return Age(n, m) * m; }\ntemplate<class T>inline T Tri(T n)noexcept { return (n & 1) ? (n + 1) / 2 * n : n / 2 * (n + 1); }\ntemplate<class T>inline T Gcd(T n, T m)noexcept { return m ? Gcd(m, n % m) : n; }\ntemplate<class T>inline T Lcm(T n, T m)noexcept { return n / Gcd(n, m) * m; }\ntemplate<class T>inline T Pow(T a, T n)noexcept { T r = 1; while (n > 0) { if (n & 1)r *= a; a *= a; n /= 2; }return r; }\ntemplate<class T>inline T Powmod(T a, T n, T m = MOD)noexcept { T r = 1; while (n > 0) { if (n & 1)r = r * a % m, n--; else a = a * a % m, n /= 2; }return r; }\ntemplate<class T>inline bool chmax(T& a, const T& b)noexcept { if (a < b) { a = b; return true; } return false; }\ntemplate<class T>inline bool chmin(T& a, const T& b)noexcept { if (a > b) { a = b; return true; } return false; }\ninline string operator*(string s, int n)noexcept { string ret; rep(i, n)ret += s; return ret; }\n\n// --- input --- //\n#if defined(_MSC_VER) || defined(ONLINE_JUDGE)\n#define getchar_unlocked _getchar_nolock\n#define putchar_unlocked _putchar_nolock\n#endif\ninline int gc()noexcept { return getchar_unlocked(); }\ntemplate<class T>inline void InputF(T& v)noexcept { cin >> v; }\ninline void InputF(char& v)noexcept { while (isspace(v = gc())); }\ninline void InputF(string& v)noexcept {\n\tchar c; for (InputF(c); !isspace(c); c = gc())v += c;\n}\ninline void InputF(int& v)noexcept {\n\tbool neg = false; v = 0; char c; InputF(c);\n\tif (c == '-') { neg = true; c = gc(); }\n\tfor (; isdigit(c); c = gc())v = v * 10 + (c - '0');\n\tif (neg)v = -v;\n}\ninline void InputF(long long& v)noexcept {\n\tbool neg = false; v = 0; char c; InputF(c);\n\tif (c == '-') { neg = true; c = gc(); }\n\tfor (; isdigit(c); c = gc())v = v * 10 + (c - '0');\n\tif (neg)v = -v;\n}\ninline void InputF(double& v)noexcept {\n\tdouble dp = 1; bool neg = false, adp = false; v = 0; char c; InputF(c);\n\tif (c == '-') { neg = true; c = gc(); }\n\tfor (; isdigit(c) || c == '.'; c = gc()) {\n\t\tif (c == '.')adp = true;\n\t\telse if (adp)v += (c - '0') * (dp *= 0.1);\n\t\telse v = v * 10 + (c - '0');\n\t}\n\tif (neg)v = -v;\n}\ntemplate<class T, class U>inline void InputF(pair<T, U>& v)noexcept {\n\tInputF(v.first); InputF(v.second);\n}\ntemplate<class T>inline void InputF(vector<T>& v)noexcept {\n\tfor (auto& e : v)InputF(e);\n}\nstruct InputV {\n\tint n, m;\n\tInputV(int N) :n(N), m(0) {}\n\tInputV(pair<int, int> N) :n(N.first), m(N.second) {}\n\ttemplate<class T>operator vector<T>()noexcept {\n\t\tvector<T> v(n); InputF(v); return v;\n\t}\n\ttemplate<class T>operator vector<vector<T>>()noexcept {\n\t\tvector<vector<T>> v(n, vector<T>(m)); InputF(v); return v;\n\t}\n};\nstruct Input {\n\ttemplate<class T>operator T()noexcept { T v; InputF(v); return v; }\n\tint operator--(int) { int v; InputF(v); v--; return v; }\n\tInputV operator[](int n)noexcept { return InputV(n); }\n\tInputV operator[](pair<int, int> n)noexcept { return InputV(n); }\n\ttemplate<class T, size_t W>array<vector<T>, W> get(int H) {\n\t\tarray<vector<T>, W> ret;\n\t\trep(i, H)rep(j, W) { T x = *this; ret[j].push_back(x); }\n\t\treturn ret;\n\t}\n}in;\n\n// --- output --- //\nstruct BoolStr {\n\tconst char* t, * f; BoolStr(const char* _t, const char* _f) :t(_t), f(_f) {}\n}Yes(\"Yes\", \"No\"), yes(\"yes\", \"no\"), YES(\"YES\", \"NO\"), Int(\"1\", \"0\");\nstruct DivStr {\n\tconst char* d, * l; DivStr(const char* _d, const char* _l) :d(_d), l(_l) {}\n}spc(\" \", \"\\n\"), no_spc(\"\", \"\\n\"), end_line(\"\\n\", \"\\n\"), comma(\",\", \"\\n\"), no_endl(\" \", \"\");\nclass Output {\n\tBoolStr B{ Yes }; DivStr D{ spc }; bool isPrint = true;\n\tvoid p(double v) { printf(\"%.20f\", v); } void p(long double v) { printf(\"%.20Lf\", v); }\n\tvoid p(int v) { printf(\"%d\", v); }\tvoid p(LL v) { printf(\"%lld\", v); }\n\tvoid p(char v) { putchar(v); }\t\tvoid p(bool v) { printf(v ? B.t : B.f); }\n\ttemplate<class T>void p(const T& v) { cout << v; }\n\ttemplate<class T, class U>void p(const pair<T, U>& v) { p(v.first); printf(D.d); p(v.second); }\n\ttemplate<class T>void p(const vector<T>& v) { rep(i, sz(v)) { if (i)printf(D.d); p(v[i]); } }\n\ttemplate<class T>void p(const vector<vector<T>>& v) { rep(i, sz(v)) { if (i)printf(D.l); p(v[i]); } }\n\tvoid p(const BoolStr& v) { B = v; isPrint = false; } void p(const DivStr& v) { D = v; isPrint = false; }\npublic:\n\tvoid operator()() { printf(D.l); }\n\ttemplate<class H>void operator()(H&& h) {\n\t\tp(h); if (isPrint)printf(D.l); isPrint = true; B = Yes; D = spc;\n\t}\n\ttemplate<class H, class...T>void operator()(H&& h, T&& ...t) {\n\t\tp(h); if (isPrint)printf(D.d); isPrint = true; operator()(forward<T>(t)...);\n\t}\n\ttemplate<class...T>void exit(T&& ...t) {\n\t\toperator()(forward<T>(t)...); std::exit(EXIT_SUCCESS);\n\t}\n}out;\n\n// --- dump --- //\n#if __has_include(\"dump.hpp\")\n#include \"dump.hpp\"\n#else\n#define dump(...) (void(0))\n#endif\n\n\nclass Radix {\n\tusing Type = long long;\n\tstatic string Str;\n\tstatic map<char, int> Map;\n\npublic:\n\tstatic void Init(string s = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n\t\tStr = s;\n\t\tfor (int i = 0; i < (int)Str.size(); i++) {\n\t\t\tMap[Str[i]] = i;\n\t\t}\n\t}\n\n\t//Num(R) -> ret(10)\n\tstatic Type to10(const string& Num, int R) {\n\t\tType ret = 0, p = 1;\n\t\tfor (int i = (int)Num.size() - 1; i >= 0; --i) {\n\t\t\tassert(Map.count(Num[i]));\n\t\t\tret += Map[Num[i]] * p; p *= R;\n\t\t}\n\t\treturn ret;\n\t}\n\n\t//Num(10) -> ret(N)\n\tstatic string toN(Type Num, int N) {\n\t\tstring ret; Type m = Num;\n\t\tdo {\n\t\t\tret += Str[m % N];\n\t\t\tm /= N;\n\t\t} while (m);\n\t\treverse(ret.begin(), ret.end());\n\t\treturn ret;\n\t}\n\n\t//Num(R) -> ret(N)\n\tstatic string toN(const string& Num, int R, int N) {\n\t\treturn toN(to10(Num, R), N);\n\t}\n};\nstring Radix::Str;\nmap<char, int> Radix::Map;\n\n\nconst VS name{ \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\nconst VVL table{ {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}, };\n\nvoid solve(const string& s) {\n\tVI a(3);\n\trep(i, 3) {\n\t\ta[i] = Radix::to10(s.substr(1 + i * 2, 2), 16);\n\t}\n\n\tLL m = inf; string ans;\n\trep(i, sz(name)) {\n\t\tLL d = 0;\n\t\trep(j, 3)d += (a[j] - table[i][j]) * (a[j] - table[i][j]);\n\t\tif (chmin(m, d)) {\n\t\t\tans = name[i];\n\t\t}\n\t}\n\tout(ans);\n}\n\nint main() {\n\tRadix::Init(\"0123456789abcdefghijklmn\");\n\n\twhile (true) {\n\t\tstring s = in;\n\t\tif (s == \"0\")break;\n\t\tsolve(s);\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  string data;\n  int f1,f2;\n\n  while(1){\n    getline(cin,data);\n    if(data[0] == '0') return 0;\n    f1 = f2 = 0\n    for(int i = 0; i  < 10; i++){\n      if(data[1] == i)\n\tf1 = 1;\n      if(data[2] == i)\n\tf2 = 1;\n    }\n    if(fa == 1&&f2 == 1){\n      data[1] = 0;\n      data[2] = 0;\n    }else{\n      data[1] == f;\n      data[2] == f;\n    } \n    for(int i = 0; i  < 10; i++){\n      if(data[3] == i)\n\tf1 = 1;\n      if(data[4] == i)\n\tf2 = 1;\n    }\n    if(fa == 1&&f2 == 1){\n      data[3] = 0;\n      data[4] = 0;\n    }else{\n      data[3] == f;\n      data[4] == f;\n    } \n    for(int i = 0; i  < 10; i++){\n      if(data[5] == i)\n\tf1 = 1;\n      if(data[6] == i)\n\tf2 = 1;\n    }\n    if(fa == 1&&f2 == 1){\n\t    data[5] = 0;\n\t    data[6] = 0;\n    }else{\n      data[5] == f;\n      data[6] == f;\n    } \n    \n    if(data[1] == 0 && data[2] == 0){\n      if(data[3] == 0&& data[4] == 0){\n\tif(data[5] == 0&& data[6] == 0){\n\t  cout << \"black\" <<endl;\n\t}else{\n\t  cout << \"blue\" << endl;\n\t}\n      }\n      else{\n\tif(data[5] == 0&&data[6] == 0){\n\t  cout << \"linme\" << endl;\n\t  }else{\n\t  cout << \"aqua\" << endl;\n\t}\n      }\n    }\n    if(data[1] == f && data[2] == f){\n      if(data[3] == f&& data[4] == f){\n\tif(data[5] == f&& data[6] == f){\n\t  cout << \"white\" <<endl;\n\t}else{\n\t  cout << \"yellow\"<< endl;\n\t}\n      }\n      else{\n\tif(data[5] == 0&&data[6] == 0){\n\t  cout << \"red\" << endl;\n\t  }else{\n\t  cout << \"fuchsia\" << endl;\n\t}\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n\nstruct set{\n  string val;\n  double rgb[3];\n};\n\nset temp[8];\n\nstring name[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nvoid make_temp(){\n  for(int i=0;i<8;i++){\n    temp[i].val = name[i];\n    temp[i].rgb[0] = (i >> 2 & 1 ? 255 : 0);\n    temp[i].rgb[1] = (i >> 1 & 1 ? 255 : 0);\n    temp[i].rgb[2] = (i & 1 ? 255 : 0);\n  }\n}\n\nint main(){\n  make_temp();\n\n  while(true){\n    double num[3];\n    double ans = (2 << 10);\n    string s,spt[3];\n    cin >> s;\n    if(s == \"0\") break;\n\n    s.erase(0,1);\n    for(int i=0;i<3;i++){\n      for(int j=0;j<2;j++){\n\tspt[i] += s[0]; s.erase(0,1);\n      }\n\n      int a;\n      sscanf(spt[i].c_str(),\"%x\",&a);\n      num[i] = a;\n    }\n    \n    string a;\n    for(int i=0;i<8;i++){\n      double d = sqrt(pow(num[0] - temp[i].rgb[0],2) + pow(num[1] - temp[i].rgb[1],2) + pow(num[2] - temp[i].rgb[2],2));\n\n      if(ans > d){\n\ta = temp[i].val; ans = d;\n      }\n    }\n    cout << a << endl;\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <string>\nusing namespace std;\n\nclass Color\n{\npublic:\n  Color(int r, int g, int b);\n  int get_R();\n  int get_G();\n  int get_B();\n  string near_color();\n\nprivate:\n  int m_R;\n  int m_G;\n  int m_B;\n  double diff( Color col );\n\n  static Color black;\n  static Color blue;\n  static Color lime;\n  static Color aqua;\n  static Color red;\n  static Color fuchsia;\n  static Color yellow;\n  static Color white;\n};\n\nColor Color::black(   0x00, 0x00, 0x00 );\nColor Color::blue(    0x00, 0x00, 0xff );\nColor Color::lime(    0x00, 0xff, 0x00 );\nColor Color::aqua(    0x00, 0xff, 0xff );\nColor Color::red(     0xff, 0x00, 0x00 );\nColor Color::fuchsia( 0xff, 0x00, 0xff );\nColor Color::yellow(  0xff, 0xff, 0x00 );\nColor Color::white(   0xff, 0xff, 0xff );\n\nColor::Color(int r, int g, int b)\n{\n  m_R = r;\n  m_G = g;\n  m_B = b;\n}\n\nint Color::get_R()\n{\n  return m_R;\n}\n\nint Color::get_G()\n{\n  return m_G;\n}\n\nint Color::get_B()\n{\n  return m_B;\n}\n\ndouble Color::diff( Color col )\n{\n  return sqrt( pow(m_R - col.get_R(), 2) + pow(m_G - col.get_G(), 2) + pow(m_B - col.get_B(), 2) );\n}\n\nstring Color::near_color()\n{\n  struct Color_name\n  {\n    string name;\n    Color color;\n  };\n  Color_name colors[8] = {\n    \"black\", black,\n    \"blue\", blue,\n    \"lime\", lime,\n    \"aqua\", aqua,\n    \"red\", red,\n    \"fuchsia\", fuchsia,\n    \"yellow\", yellow,\n    \"white\", white,\n  };\n  Color_name min = colors[0];\n  for (int i=1; i<8; i++)\n  {\n    if ( diff(colors[i].color) < diff(min.color) )\n    {\n      min = colors[i];\n    }\n  }\n  return min.name;\n}\n\nint main()\n{\n  while(true)\n  {\n    string color;\n    getline(cin, color);\n    if ( color == \"0\" ) return 0;\n\n    int r = stoi( color.substr(1, 2), 0, 16 );\n    int g = stoi( color.substr(3, 2), 0, 16 );\n    int b = stoi( color.substr(5, 2), 0, 16 );\n    Color c(r, g, b);\n    cout << c.near_color() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\nusing namespace std;\nint main() {\n\tlong long a[10], c = 1, d, e = 0;\n\tint b = 0;\n\twhile (c <= 1000000000) {\n\t\ta[b] = c;\n\t\tb++;\n\t\tc *= 8;\n\t}\n\twhile (cin >> d&&d != 0) {\n\t\te = 0;\n\t\tint f = 0;\n\t\tfor (int i = b-1; i >= 0; i--) {\n\t\t\tf = 0;\n\t\t\tif (a[i] <= d) {\n\t\t\t\twhile (a[i] <= d) {\n\t\t\t\t\tf++;\n\t\t\t\t\td -= a[i];\n\t\t\t\t}\n\t\t\t\tif (f <= 3)\n\t\t\t\t\te += (pow(10, i)*f);\n\t\t\t\telse if (f == 5)\n\t\t\t\t\te += (pow(10, i)*(f + 2));\n\t\t\t\telse if (f < 6)\n\t\t\t\t\te += (pow(10, i)*(f + 1));\n\t\t\t\telse if(f>=6)\n\t\t\t\t\te += (pow(10, i)*(f + 2));\n\t\t\t}\n\t\t}\n\t\tcout << e << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<vector>\n#include<list>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#define c(a,b,c,d,e,f) (a-d)*(a-d)+(b-e)*(b-e)+(c-f)*(c-f)\nusing namespace std;\nint f(string s){\n  int n=0;\n  if('a'<=s[0]&&s[0]<='f')\n    n+=(s[0]-'a'+10)*16;\n  else\n    n+=(s[0]-'0')*16;\n  if('a'<=s[1]&&s[1]<='f')\n    n+=s[1]-'a'+10;\n  else\n    n+=s[1]-'0';\n  return n;\n}\nint main(){\n  int i;\n  int r[8]={0,0,0,0,0xff,0xff,0xff,0xff},g[8]={0,0,0xff,0xff,0,0,0xff,0xff},b[8]={0,0xff,0,0xff,0,0xff,0,0xff};\n  int d,e;\n  string s[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"},t;\n  for(;;){\n    cin>>t;\n    if(t==\"0\")\n      break;\n    d=255*255*3;\n    for(i=0;i<8;i++){\n      if(d>c(f(t.substr(1,2)),f(t.substr(3,2)),f(t.substr(5,2)),r[i],g[i],b[i])){\n\te=i;\n\td=c(f(t.substr(1,2)),f(t.substr(3,2)),f(t.substr(5,2)),r[i],g[i],b[i]);\n      }\n    }\n    cout<<s[e]<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<math.h>\n\nusing namespace std;\n\nmap<int, int> MR;\nmap<int, int> MG;\nmap<int, int> MB;\n\nvoid make(){\n  MR[0] = 0;\n  MG[0] = 0;\n  MB[0] = 0;\n  MR[1] = 0;\n  MG[1] = 0;\n  MB[1] = 225;\n  MR[2] = 0;\n  MG[2] = 255;\n  MB[2] = 0;\n  MR[3] = 0;\n  MG[3] = 255;\n  MB[3] = 255;\n  MR[4] = 255;\n  MG[4] = 0;\n  MB[4] = 0;\n  MR[5] = 255;\n  MG[5] = 0;\n  MB[5] = 255;\n  MR[6] = 255;\n  MG[6] = 255;\n  MB[6] = 0;\n  MR[7] = 255;\n  MG[7] = 255;\n  MB[7] = 255;\n}\n\nint main(){\n\n  make();\n\n  char in[2];\n  int status = 0;\n\n  while(cin >> in[0]){\n    if(in[0] == '0') break;\n\n    int r, g, b;\n\n    for(int i = 0; i < 3; i++){\n      \n      cin >> in[0] >> in[1];\n\n      for(int j = 0; j <= 1; j++){\n\tif(in[j] == 'a') in[j] == ':';\n\tif(in[j] == 'b') in[j] == ';';\n\tif(in[j] == 'c') in[j] == '<';\n\tif(in[j] == 'd') in[j] == '=';\n\tif(in[j] == 'e') in[j] == '>';\n\tif(in[j] == 'f') in[j] == '?';\n      }\n\n      if(i == 0) r = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 1) g = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 2) b = (in[0] - 48) * 16 + (in[1] - 48);\n    }\n\n    double d;\n    int min, then;\n\n    for(int j = 0; j < 8; j++){\n      d = sqrt((MR[j] - r)*(MR[j] - r)+(MG[j] - g)*(MG[j] - g)+(MB[j] - b)*(MB[j] - b));\n\n      // cout << d << endl;\n      if(j == 0 || min > d){\n\tmin = d;\n\tthen = j;\n      }\n    }\n\n    if(then == 0) cout << \"black\" <<endl;\n    if(then == 1) cout << \"blue\" <<endl;\n    if(then == 2) cout << \"lime\" <<endl;\n    if(then == 3) cout << \"aqua\" <<endl;\n    if(then == 4) cout << \"red\" <<endl;\n    if(then == 5) cout << \"fuchsia\" <<endl;\n    if(then == 6) cout << \"yellow\" <<endl;\n    if(then == 7) cout << \"white\" <<endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <fstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nstatic const double EPS = 1e-5;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\nint main(void){\n  int col;\n  char c;\n  while(cin>>c>>hex>>col){\n    if(c=='0') break;\n    int data[3];\n    REP(i,3){\n      data[i] = col%256;\n      col/=256;\n    }\n    bool judge[3];\n    REP(i,3){\n      if(255-data[2-i]<data[2-i]){\n        judge[i] = false;\n      }else{\n        judge[i] = true;\n      }\n    }\n    if(judge[0]){\n      if(judge[1]){\n        if(judge[2]){\n          cout<<\"black\"<<endl;\n        }else{\n          cout<<\"blue\"<<endl;\n        }\n      }else{\n        if(judge[2]){\n          cout<<\"lime\"<<endl;\n        }else{\n          cout<<\"aqua\"<<endl;\n        }\n      }\n    }else{\n      if(judge[1]){\n        if(judge[2]){\n          cout<<\"red\"<<endl;\n        }else{\n          cout<<\"fuchsia\"<<endl;\n        }\n      }else{\n        if(judge[2]){\n          cout<<\"yellow\"<<endl;\n        }else{\n          cout<<\"white\"<<endl;\n        }\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\n\nint tmp[2] = {16,1};\nstring s[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint hoge[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},\n\t\t  {255,0,255},{255,255,0},{255,255,255}};\n\nint to_ten(string s){\n  int ans=0;\n  for(int i=0; i<2; i++){\n    if(s[i] == 'a') ans += 10*tmp[i];\n    else if(s[i] == 'b') ans += 11*tmp[i];\n    else if(s[i] == 'c') ans += 12*tmp[i];\n    else if(s[i] == 'd') ans += 13*tmp[i];\n    else if(s[i] == 'e') ans += 14*tmp[i];\n    else if(s[i] == 'f') ans += 15*tmp[i];\n    else ans += stoi(s.substr(i,1))*tmp[i];\n  }\n  return ans;\n}\n\ndouble d(string r,string g,string b,int i){\n  double ans = 0;\n  ans += (to_ten(r) - hoge[i][0]) * (to_ten(r) - hoge[i][0]);\n  ans += (to_ten(g) - hoge[i][1]) * (to_ten(g) - hoge[i][1]);\n  ans += (to_ten(b) - hoge[i][2]) * (to_ten(b) - hoge[i][2]);\n  return ans;\n}\n\nint main(){\n\n\n  while(1){\n    string in; cin >> in;\n    if(in == \"0\") break;\n    string r = in.substr(1,2);\n    string g = in.substr(3,2);\n    string b = in.substr(5,2);\n\n    double min = (int)1e+308;\n    int index=100;\n    for(int i=0; i<8; i++){\n      if(d(r,g,b,i) < min ){\n\tindex = i;\n\tmin = d(r,g,b,i);\n      }\n      //   cout  << d(r,g,b,i) << \" \";\n    }\n    cout << s[index] << \"\\n\";\n  }\n\n\n}"
  },
  {
    "language": "C++",
    "code": "import java.util.Scanner;\nimport static java.lang.System.out;\nclass Main{\n  public static void main(String args[]){\n    Scanner scan = new Scanner(System.in);\n    String name[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int color[][] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    while(true){\n      String str = scan.next();\n      if(str.equals(\"0\")) break;\n\n      int R = Integer.parseInt(str.substring(1,3),16);\n      int G = Integer.parseInt(str.substring(3,5),16);\n      int B = Integer.parseInt(str.substring(5,7),16);\n      double min = Double.MAX_VALUE;\n      int Index = 0;\n      for(int i = 0 ; i < 8 ; i++){\n        double near = Math.sqrt(Math.pow(R - color[i][0],2) + Math.pow(G - color[i][1],2) + Math.pow(B - color[i][2],2));\n        if( near < min ){\n          min = near;\n          Index = i;\n        }\n      }\n      out.println(name[Index]);\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double INF=10000;\n\ndouble color[8][3]=\n{0,0,0,\n0,0,255,\n0,255,0,\n0,255,255,\n255,0,0,\n255,0,255,\n255,255,0,\n255,255,255\n};\nstring colors[8]=\n{\"black\",\n\"blue\",\n\"lime\",\n\"aqua\",\n\"red\",\n\"fuchsia\",\n\"yellow\",\n\"white\"\n};\n\nint main(void){\n    while(1){\n        string str;\n        cin >> str;\n        if(str==\"0\")break;\n        double c[3]={0,0,0};\n        for(int i=0;i<3;i++){\n            if(str[i*2+1]>='a' && str[i*2+1]<='f'){\n                c[i]+=(str[i*2+1]-'a'+10)*16;\n            }else c[i]+=(str[i*2+1]-'0')*16;\n            if(str[i*2+2]>='a' && str[i*2+2]<='f'){\n                c[i]+=str[i*2+2]-'a'+10;\n            }else c[i]+=str[i*2+2]-'0';\n        }\n        double adk=INF;\n        int ans=0;\n        for(int i=0;i<8;i++){\n            double dk=sqrt(pow(abs(c[0]-color[i][0]),2)+pow(abs(c[1]-color[i][1]),2)+pow(abs(c[2]-color[i][2]),2));\n            if(adk>dk){\n                ans=i;\n                adk=dk;\n            }\n        }\n        cout << colors[ans] << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nstring color[8] = {\n\t\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"\n};\nint dr[8] = {0,0,0,0,255,255,255,255};\nint dg[8] = {0,0,255,255,0,0,255,255};\nint db[8] = {0,255,0,255,0,255,0,255};\n\nint to_i(string s){\n\tint n=0;\n\n\tif( s[0] >= '0' && s[0] <= '9' ){\n\t\tn += (s[0]-'0')*16;\n\t}else{\n\t\tn += (s[0]-'a'+10)*16;\n\t}\n\tif( s[1] >= '0' && s[1] <= '9' ){\n\t\tn += s[1] - '0';\n\t}else{\n\t\tn += s[1] - 'a' + 10;\n\t}\n\treturn n;\n}\n\nvector<int> to_RGB(string s){\n\tvector<int> c;\n\tc.push_back( to_i( s.substr(1,2) ) );\n\tc.push_back( to_i( s.substr(3,4) ) );\n\tc.push_back( to_i( s.substr(5,6) ) );\n\treturn c;\n}\n\nint d(int r,int rk,int g,int gk,int b,int bk){\n\treturn (r-rk)*(r-rk) + (g-gk)*(g-gk) + (b-bk)*(b-bk);\n}\n\nint main(){\n\tstring s;\n\twhile( cin >> s , s != \"0\" ){\n\t\tvector<int> c = to_RGB( s );\n\t\tint ans = 200000;\n\n\t\tfor(int i=0 ; i < 8 ; i++ ){\n\t\t\tint dk = d( c[0] , dr[i] , c[1] , dg[i] , c[2] , db[i] );\n\t\t\tans = min( ans , dk );\n\t\t}\n\t\tfor(int i=0 ; i < 8 ; i++ ){\n\t\t\tint dk = d( c[0] , dr[i] , c[1] , dg[i] , c[2] , db[i] );\n\t\t\tif( dk == ans ){\n\t\t\t\tcout << color[i] << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define MAX_N 1000000\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> P;\n\nstatic const double eps = 1e-8;\n\nstruct COLOR{\n\tstring name;\n\tstring R;\n\tstring G;\n\tstring B;\n};\n\nint hex2dec(string str){\n\tconst char hex[] = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};\n\treturn 16 * (int)lower_bound(hex,hex+16,str[0]) + (int)lower_bound(hex,hex+16,str[1]);\n}\n\nint main(){\n\n\tstruct COLOR color[] = {\n\t\t\"black\",\"00\",\"00\",\"00\",\n\t\t\"blue\",\"00\",\"00\",\"ff\",\n\t\t\"lime\",\"00\",\"ff\",\"00\",\n\t\t\"aqua\",\"00\",\"ff\",\"ff\",\n\t\t\"red\",\"ff\",\"00\",\"00\",\n\t\t\"fuchsia\",\"ff\",\"00\",\"ff\",\n\t\t\"yellow\",\"ff\",\"ff\",\"00\",\n\t\t\"white\",\"ff\",\"ff\",\"ff\",\n\t};\n\n\tstring str;\n\twhile(cin >> str){\n\t\tif(str.size() == 1 && str[0] == '0') break;\n\t\tint r = hex2dec(str.substr(1,2));\n\t\tint g = hex2dec(str.substr(3,2));\n\t\tint b = hex2dec(str.substr(5,2));\n\n\t\tint dk = 10000000;\n\t\tint idx=0;\n\t\tfor(int i=0;i<sizeof(color)/sizeof(struct COLOR); i++){\n\t\t\tint tmp;\n\t\t\tif(dk > (tmp=((r - hex2dec(color[i].R)) * (r - hex2dec(color[i].R))\n\t\t\t\t+ (g - hex2dec(color[i].G)) * (g - hex2dec(color[i].G))\n\t\t\t\t+ (b - hex2dec(color[i].B)) * (b - hex2dec(color[i].B))))){\n\t\t\t\t\tdk = tmp;\n\t\t\t\t\tidx=i;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%s\\n\",color[idx].name.c_str());\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <set>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iterator>\n#include <bitset>\n#include <unordered_set>\n#include <unordered_map>\n#include <fstream>\n#include <iomanip>\n#include <cassert>\n//#include <utility>\n//#include <memory>\n//#include <functional>\n//#include <deque>\n//#include <cctype>\n//#include <ctime>\n//#include <numeric>\n//#include <list>\n//#include <iomanip>\n\n//#if __cplusplus >= 201103L\n//#include <array>\n//#include <tuple>\n//#include <initializer_list>\n//#include <forward_list>\n//\n//#define cauto const auto&\n//#else\n\n//#endif\n\nusing namespace std;\n\n\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\ntypedef vector<int> vint;\ntypedef vector<vector<int> > vvint;\ntypedef vector<long long> vll, vLL;\ntypedef vector<vector<long long> > vvll, vvLL;\n\n#define VV(T) vector<vector< T > >\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){\n    v.assign(a, vector<T>(b, t));\n}\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >> t;\n}\n\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\n#define RALL(v) (v).rbegin(),(v).rend()\n#define DEBUG\n#ifdef DEBUG\n#define dump(x)  cout << #x << \" = \" << (x) << endl;\n#define debug(x) cout << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n#else\n#define dump(x) \n#define debug(x) \n#endif\n#define LDcout(x,n) fixed<<setprecision(n)<<x\n\n#define MOD 1000000007LL\n#define EPS 1e-8\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\n#define maxs(x,y) x=max(x,y)\n#define mins(x,y) x=min(x,y)\n\nint foo(int a,int b,int c){\n    int t=a*a+b*b+c*c;\n    return t;\n}\nvoid mainmain(){\n    vector<string> v;\n    v.PB(\"black\");\n    v.PB(\"blue\");\n    v.PB(\"lime\");\n    v.PB(\"aqua\");\n    v.PB(\"red\");\n    v.PB(\"fuchsia\");\n    v.PB(\"yellow\");\n    v.PB(\"white\");\n    string s;\n    while(cin>>s){\n        if(s.size()==1) return;\n        vint w(3,0);\n        rep(i,3){\n            string tmp=s.substr(1+i*2,2);\n            if(isdigit(tmp[0])) w[i]=16*(tmp[0]-'0');\n            else{\n                w[i]=16*(tmp[0]-'a'+10);\n            }\n            if(isdigit(tmp[1])) w[i]+=(tmp[1]-'0');\n            else{\n                w[i]+=(tmp[1]-'a'+10);\n            }\n        }\n        vector<pii> vv(8);\n        rep(i,8){\n            vint tmp(3);\n            rep(j,3){\n                if((1<<j)&i) tmp[2-j]=255;\n                else tmp[2-j]=0;\n            }\n            vv[i].S=i;\n            vv[i].F=foo(w[0]-tmp[0],w[1]-tmp[1],w[2]-tmp[2]);\n        }\n        sort(ALL(vv));\n        cout<<v[vv[0].S]<<endl;\n    }\n}\n\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n      cout<<fixed<<setprecision(20);\n    mainmain();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint main() {\n    double s,m;\n    char a[8],c[8][8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"},h[17]=\"0123456789abcdef\";\n    int d[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}},\n        w[6],i,j,e,r,g,b;\n    while(cin >> a) {\n\t\tif (a[0]=='0') break;\n\t\tfor (i=0;i<6;i++)  for (j=0;j<16;j++) if (a[i+1]==h[j]) w[i]=j;\n\t\ts=99999999; r=w[0]*16+w[1]; g=w[2]*16+w[3]; b=w[4]*16+w[5]; \n\t\tfor (i=0;i<8;i++) {\n\t\t m=sqrt((r-d[i][0])*(r-d[i][0])+(g-d[i][1])*(g-d[i][1])+(b-d[i][2])*(b-d[i][2]));\n\t\t if (m<s) { s=m; e=i;};\n\t }\n\t cout << c[e] << endl;\n }\t\n return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  char c[10];\n  int r,g,b,id;\n  string str[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  while(scanf(\"%s\",c),c[0]!='0'){\n    r = g = b = 0;\n    if('0'<=c[1] && c[1]<='9') r += (c[1]-'0')*16;\n    else r += (c[1]-'A'+10)*16;\n    if('0'<=c[2] && c[2]<='9') r += (c[2]-'0');\n    else r += (c[2]-'A'+10);\n    if('0'<=c[3] && c[3]<='9') g += (c[3]-'0')*16;\n    else g += (c[3]-'A'+10)*16;\n    if('0'<=c[4] && c[4]<='9') g += (c[4]-'0');\n    else g += (c[4]-'A'+10);\n    if('0'<=c[5] && c[5]<='9') b += (c[5]-'0')*16;\n    else b += (c[5]-'A'+10)*16;\n    if('0'<=c[6] && c[6]<='9') b += (c[6]-'0');\n    else b += (c[6]-'A'+10);\n    id = 0;\n    if(r >=123) id += 4;\n    if(g >=123) id += 2;\n    if(b >=123) id += 1;\n    cout << str[id] << endl;\n  }\n  return(0);\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\nusing namespace std;\nstring s[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\ndouble r[]={0,0,0,0,255,255,255,255},g[]={0,0,255,255,0,0,255,255},b[]={0,255,0,255,0,255,0,255};\nint f(char c)\n{\n\tif(c<='9')return c-'0';\n\telse return c-'a'+10;\n}\nmain()\n{\n\tstring t;\n\twhile(cin>>t,t!=\"0\")\n\t{\n\t\tdouble R,G,B;\n\t\tint i;\n\t\tdouble M=1e9;\n\t\tR=f(t[1])*16+f(t[2]);\n\t\tG=f(t[3])*16+f(t[4]);\n\t\tB=f(t[5])*16+f(t[6]);\n\t\tfor(int j=0;j<8;j++)\n\t\t{\n\t\t\tdouble now=hypot(r[j]-R,hypot(g[j]-G,b[j]-B));\n\t\t\tif(now<M)\n\t\t\t{\n\t\t\t\tM=now;\n\t\t\t\ti=j;\n\t\t\t}\n\t\t}\n\t\tcout<<s[i]<<endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\nusing namespace std;\n\n#define loop(i,a,b) for(int i = a ; i < b ; i ++)\n#define rep(i,a) loop(i,0,a)\nint stoi(char c){\n  if('0' <= c && c <= '9')\n    return c - '0';\n  return c - 'a' + 10;\n}\n\nint pow(int n){\n  return n * n;\n}\n\nint main(void){\n  string s;\n  string ans[8] = {\n    \"black\",//\t00\t00\t00\n    \"blue\",//\t00\t00\tff\n    \"lime\",//\t00\tff\t00\n    \"aqua\",//\t00\tff\tff\n    \"red\",//\tff\t00\t00\n    \"fuchsia\",//\tff\t00\tff\n    \"yellow\",//\tff\tff\t00\n    \"white\"//\tff\tff\tff\n  };\n  int num[8];\n  int cnt = 0;\n  rep(i,8)num[i] = i * 255;     \n  while(cin>>s){\n    if(s == \"0\")break;\n    int in[3];\n    in[0] = stoi(s[1]) * 16 + stoi(s[2]);\n    in[1] = stoi(s[3]) * 16 + stoi(s[4]);\n    in[2] = stoi(s[5]) * 16 + stoi(s[6]);\n    //rep(i,3)cout<<in[i]<<endl;\n    int index = 0;\n    unsigned long long diff = 100000000;\n    rep(i,8){\n\n      int box[3];\n      rep(j,3){\n\tbox[j] = (i>>(2-j))%2*255;\n      }\n      \n     \n      unsigned long long int calc = 0;\n      rep(j,3)calc += pow(in[j] - box[j]);\n     \t\n      if(calc < diff){\n\tdiff = calc;\n\tindex = i;\n      }\n    }\n    cout<<ans[index]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int value[200]={};\n    for(int i=0;i<10;i++)value['0'+i]=i;\n    for(int i=0;i<6;i++)value['a'+i]=10+i;\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=value[str[1+2*i]]*16+value[str[2+2*i]];\n        int ans[8]={};\n        for(int i=0;i<8;i++)\n            for(int j=0;j<3;j++)\n                ans[i]+=pow(colornum[i][j]-num[j],2);\n        int co=0;\n        for(int i=1;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define INF 1<<30\n\nint main() {\n  string color[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n  string s;\n  while(cin >> s, s!=\"0\") {\n    int rgb[3];\n    REP(i,3)\n      sscanf(s.substr(i*2+1,2).c_str(), \"%x\", rgb+i);\n    int mi = INF;\n    int ans;\n    REP(i,8) {\n      int hoge = 0;\n      REP(j,3) {\n        if (i<<j & 4)\n          hoge += pow(255 - rgb[j], 2);\n        else\n          hoge += pow(rgb[j], 2);\n      }\n      if (hoge < mi) {\n        mi = hoge;\n        ans = i;\n      }\n    }\n    cout << color[ans] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\nint hextodec(char h){\n  int res;\n  if(h >= '0' && h <= '9')\n    res = h - '0';\n  else\n    res = h - 'a' + 10;\n  return res;\n}\n\nint main(){\n  int color[8][3] = {{0, 0, 0}, {0, 0, 256}, {0, 256, 0},\n                     {0, 256, 256}, {256, 0, 0}, {256, 0, 256},\n                     {256, 256, 0}, {256, 256, 256}};\n  std::string name[8] = {\"black\", \"blue\", \"lime\",\n                         \"aqua\", \"red\", \"fuchsia\",\n                         \"yellow\", \"white\"};\n\n  std::string c;\n  while(std::cin >> c, c.compare(\"0\")){\n    int r = hextodec(c[1]) * 16 + hextodec(c[2]),\n        g = hextodec(c[3]) * 16 + hextodec(c[4]),\n        b = hextodec(c[5]) * 16 + hextodec(c[6]);\n    int min_v = 1000000, min_c;\n    for(int i=7;i>=0;i--){\n      if(color[i][0] == r && color[i][1] == g && color[i][2] == b){\n        min_c = i; break;\n      }\n      int t = pow(r-color[i][0], 2) + pow(g-color[i][1], 2) +\n              pow(b-color[i][2], 2);\n      if(min_v > t)min_v = t, min_c = i;\n    }\n    std::cout << name[min_c] << std::endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cmath>\n\nusing namespace std;\n\nconst double INF=10000;\n\ndouble color[8][3]=\n{0,0,0,\n0,0,255,\n0,255,0,\n0,255,255,\n255,0,0,\n255,0,255,\n255,255,0,\n255,255,255\n};\nstring colors[8]=\n{\"black\",\n\"blue\",\n\"lime\",\n\"aqua\",\n\"red\",\n\"fuchsia\",\n\"yellow\",\n\"white\"\n};\n\nint main(void){\n\twhile(1){\n\t\tstring str;\n\t\tcin >> str;\n\t\tif(str==\"0\")break;\n\t\tdouble c[3]={0,0,0};\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(str[i*2+1]>='a' && str[i*2+1]<='f'){\n\t\t\t\tc[i]+=(str[i*2+1]-'a'+10)*16;\n\t\t\t}else c[i]+=(str[i*2+1]-'0')*16;\n\t\t\tif(str[i*2+2]>='a' && str[i*2+2]<='f'){\n\t\t\t\tc[i]+=str[i*2+2]-'a'+10;\n\t\t\t}else c[i]+=str[i*2+2]-'0';\n\t\t}\n\t\tdouble adk=INF;\n\t\tint ans=0;\n\t\tfor(int i=0;i<8;i++){\n\t\t\tdouble dk=sqrt(pow(abs(c[0]-color[i][0]),2)+pow(abs(c[1]-color[i][1]),2)+pow(abs(c[2]-color[i][2]),2));\n\t\t\tif(adk>dk){\n\t\t\t\tans=i;\n\t\t\t\tadk=dk;\n\t\t\t}\n\t\t}\n\t\tcout << colors[ans] << endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\ndouble dist(int table[][3],int k,int rk,int gk,int bk) {\n\n  return sqrt((table[k][0]-rk)*(table[k][0]-rk)+(table[k][1]-gk)*(table[k][1]-gk)+(table[k][2]-bk)*(table[k][2]-bk));\n\n}\n\nint main(void) {\n\n  int rk,gk,bk;\n\n  int table[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\n  char buf[10];\n  int color[10];\n\n  double min;\n  int ans;\n\n  int i,k;\n\n\n  while(1) {\n\n    fgets(buf,sizeof(buf),stdin);\n\n    buf[strlen(buf)-1]='\\0';\n\n    if(strcmp(buf,\"0\")==0) break;\n\n    for(i=0;i<strlen(buf)-1;i++) {\n\n      if(buf[i+1]>='0' && buf[i+1]<='9') color[i]=buf[i+1]-'0';\n\n      else if(buf[i+1]=='a') color[i]=10;\n\n      else if(buf[i+1]=='b') color[i]=11;\n\n      else if(buf[i+1]=='c') color[i]=12;\n\n      else if(buf[i+1]=='d') color[i]=13;\n      \n      else if(buf[i+1]=='e') color[i]=14;\n\n      else if(buf[i+1]=='f') color[i]=15;\n\n    }\n\n    rk=16*color[0]+color[1];\n\n    gk=16*color[2]+color[3];\n\n    bk=16*color[4]+color[5];\n\n    min=256.0;\n\n    //printf(\"%d %d %d\\n\",rk,gk,bk);\n\n    for(k=0;k<8;k++) {\n\n      double temp;\n\n      temp=dist(table,k,rk,gk,bk);\n\n      if(min>temp) {\n\n\tmin=temp;\n\tans=k;\n\n      }\n\n    }\n\n    //printf(\"%d\\n\",ans);\n\n    switch(ans) {\n\n    case 0:\n      puts(\"black\");\n      break;\n\n    case 1:\n      puts(\"blue\");\n      break;\n\n    case 2:\n      puts(\"lime\");\n      break;\n\n    case 3:\n      puts(\"aqua\");\n      break;\n\n    case 4:\n      puts(\"red\");\n      break;\n\n    case 5:\n      puts(\"fuchsia\");\n      break;\n\n    case 6:\n      puts(\"yellow\");\n      break;\n      \n    case 7: \n      puts(\"white\");\n      break;\n\n    }\n\n  }\n\n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n//#include <utility>\n#include <set>\n#include <iostream>\n//#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n//#include <functional>\n#include <sstream>\n//#include <deque>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n//#include <cctype>\n#include <cstring>\n//#include <ctime>\n#include <iterator>\n#include <bitset>\n//#include <numeric>\n//#include <list>\n//#include <iomanip>\n\n#if __cplusplus >= 201103L\n#include <array>\n#include <tuple>\n#include <initializer_list>\n#include <unordered_set>\n#include <unordered_map>\n#include <forward_list>\n\n#define cauto const auto&\n#else\n\n#endif\n\nusing namespace std;\n\n\nnamespace{\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\ntypedef vector<int> vint;\ntypedef vector<vector<int> > vvint;\ntypedef vector<long long> vll, vLL;\ntypedef vector<vector<long long> > vvll, vvLL;\n\n#define VV(T) vector<vector< T > >\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){\n    v.assign(a, vector<T>(b, t));\n}\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >> t;\n}\n\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\n#define RALL(v) (v).rbegin(),(v).rend()\n\n\n#define MOD 1000000007LL\n#define EPS 1e-8\nstatic const int INF=1<<24;\nmap<char,int> ma;\nvoid mainmain(){\n\trep(i,10){\n\t\tma[(char)i+'0']=i;\n\t}\n\tchar a[]={'a','b','c','d','e','f'};\n\trep(i,6){\n\t\tma[a[i]]=i+10;\n\t}\n\tstring s;\n\tint r[]={0,0,0,0,1,1,1,1};\n\tint g[]={0,0,1,1,0,0,1,1};\n\tint b[]={0,1,0,1,0,1,0,1};\n\tstring ans[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\twhile(cin>>s,s[0]!='0'){\n\t\tint rr=0,gg=0,bb=0;\n\t\trr=ma[s[1]]*16+ma[s[2]];\n\t\tgg=ma[s[3]]*16+ma[s[4]];\n\t\tbb=ma[s[5]]*16+ma[s[6]];\n\t\tint c=-1;\n\t\tint d=INF;\n\t\trep(i,8){\n\t\t\tint t=(rr-r[i]*255)*(rr-r[i]*255)+(gg-g[i]*255)*(gg-g[i]*255)+(bb-b[i]*255)*(bb-b[i]*255);\n\t\t\tif(t<d){\n\t\t\t\td=t;\n\t\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tcout<<ans[c]<<endl;\n\t}\n}\n\n\n\n}\nmain() try{\n    mainmain();\n}\ncatch(...){\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <utility>\n#include <sstream>\n#include <complex>\n#include <fstream>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(long long i=(a);i<(b);i++)\n#define REP(i,N) for(long long i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define fi first\n#define se second\n\n#define PI acos(-1.0)\n#define INF 1000000007\n#define MOD 1000000007\n#define EPS 1e-10\n#define MAX_N 100100\n#define MAX_M 100100\n\ntypedef long long ll;\ntypedef pair<ll, ll> P;\ntypedef pair<double, double> PD;\ntypedef pair<string, ll> PS;\ntypedef vector<ll> V;\ntypedef pair<P, char> PC;\ntypedef pair<int, string> PSI;\n\nstring s;\n\nstring colortable[] = { \"black\", \"blue\", \"lime\", \"aqua\",\n\"red\", \"fuchsia\", \"yellow\", \"white\" };\ndouble numtable[8][3]={\n{ 0, 0, 0 },\n{ 0, 0, 255 },\n{ 0, 255, 0 },\n{ 0, 255, 255 },\n{ 255, 0, 0 },\n{ 255, 0, 255 },\n{ 255, 255, 0 },\n{ 255, 255, 255 }\n};\n\ndouble changenum(string s){\n\tdouble res = 0;\n\tREP(i, 2){\n\t\tdouble num;\n\t\tif (s[i] >= '0'&&s[i] <= '9') num = s[i] - '0';\n\t\telse if (s[i] == 'a')num = 10;\n\t\telse if (s[i] == 'b')num = 11;\n\t\telse if (s[i] == 'c')num = 12;\n\t\telse if (s[i] == 'd')num = 13;\n\t\telse if (s[i] == 'e')num = 14;\n\t\telse if (s[i] == 'f')num = 15;\n\t\t\n\t\tif (i == 0)res += num * 16;\n\t\telse res += num;\n\t}\n\treturn res;\n}\n\nvoid solve(){\n\n}\n\nint main(){\n\twhile (cin >> s&&s != \"0\"){\n\t\tint ans;\n\t\tdouble dk = INF, rk = changenum(s.substr(1, 2)),\n\t\t\tgk = changenum(s.substr(3, 2)), bk = changenum(s.substr(5, 2));\n\t\tREP(i, 8){\n\t\t\tdouble num = sqrt(pow(numtable[i][0] - rk, 2)\n\t\t\t\t+ pow(numtable[i][1] - gk, 2)\n\t\t\t\t+ pow(numtable[i][2] - bk, 2));\n\t\t\tif (num - dk < EPS){\n\t\t\t\tdk = num;\n\t\t\t\tans = i;\n\t\t\t}\n\t\t}\n\t\tcout << colortable[ans] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "// 2011/08/21 Tazoe\n\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n\twhile(true){\n\t\tstring clr;\n\t\tcin >> clr;\n\t\tif(clr==\"0\")\t\t// ツ閉カツ篠堋療ア\n\t\t\tbreak;\n\n\t\tif(clr[1]>='0'&&clr[1]<='7')\n\t\t\tif(clr[3]>='0'&&clr[3]<='7')\n\t\t\t\tif(clr[5]>='0'&&clr[5]<='7')\n\t\t\t\t\tcout << \"black\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"blue\" << endl;\n\t\t\telse\n\t\t\t\tif(clr[5]>='0'&&clr[5]<='7')\n\t\t\t\t\tcout << \"lime\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"aqua\" << endl;\n\t\telse\n\t\t\tif(clr[3]>='0'&&clr[3]<='7')\n\t\t\t\tif(clr[5]>='0'&&clr[5]<='7')\n\t\t\t\t\tcout << \"red\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"fuchsia\" << endl;\n\t\t\telse\n\t\t\t\tif(clr[5]>='0'&&clr[5]<='7')\n\t\t\t\t\tcout << \"yellow\" << endl;\n\t\t\t\telse\n\t\t\t\t\tcout << \"white\" << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\nconst int C = 8;\n\nstring cs[C] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nint R[C] = {0, 0, 0, 0, 255, 255, 255, 255};\nint G[C] = {0, 0, 255, 255, 0, 0, 255, 255};\nint B[C] = {0, 255, 0, 255, 0, 255, 0, 255};\n\nint solve(int r, int g, int b){\n  int d = 1e9, res = 0;\n  REP(i, C){\n    int _d = (r - R[i]) * (r - R[i]) + (g - G[i]) * (g - G[i]) + (b - B[i]) * (b - B[i]);\n    if(_d < d){ d = _d; res = i; }\n  }\n  return res;\n}\n\nint main() {\n  string s;\n  char **buf;\n  while(cin >>s && s != \"0\"){\n    string _s = s, __s = s;\n    int r = (int)strtol(s.substr(1, 2).c_str(), buf, 16);\n    int g = (int)strtol(_s.substr(3, 2).c_str(), buf, 16);\n    int b = (int)strtol(__s.substr(5, 2).c_str(), buf, 16);\n    cout <<cs[solve(r, g, b)] <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<math.h>\n\nusing namespace std;\n\nmap<int, int> MR;\nmap<int, int> MG;\nmap<int, int> MB;\n\nvoid make(){\n  MR[0] = 0;\n  MG[0] = 0;\n  MB[0] = 0;\n  MR[1] = 0;\n  MG[1] = 0;\n  MB[1] = 255;\n  MR[2] = 0;\n  MG[2] = 255;\n  MB[2] = 0;\n  MR[3] = 0;\n  MG[3] = 255;\n  MB[3] = 255;\n  MR[4] = 255;\n  MG[4] = 0;\n  MB[4] = 0;\n  MR[5] = 255;\n  MG[5] = 0;\n  MB[5] = 255;\n  MR[6] = 255;\n  MG[6] = 255;\n  MB[6] = 0;\n  MR[7] = 255;\n  MG[7] = 255;\n  MB[7] = 255;\n}\n\nint main(){\n\n  make();\n\n  char in[2];\n  int status = 0;\n\n  while(cin >> in[0]){\n    if(in[0] == '0') break;\n\n    int r, g, b;\n\n    for(int i = 0; i < 3; i++){\n      \n      cin >> in[0] >> in[1];\n\n      for(int j = 0; j <= 1; j++){\n\tif(in[j] == 'a') in[j] -= 39;\n\tif(in[j] == 'b') in[j] -= 39;\n\tif(in[j] == 'c') in[j] -= 39;\n\tif(in[j] == 'd') in[j] -= 39;\n\tif(in[j] == 'e') in[j] -= 39;\n\tif(in[j] == 'f') in[j] -= 39;\n      }\n\n      if(i == 0) r = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 1) g = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 2) b = (in[0] - 48) * 16 + (in[1] - 48);\n    }\n\n    long d;\n    int min, then;\n\n    for(int j = 0; j < 8; j++){\n      d = sqrt((r - MR[j])*(r - MR[j])+(g - MG[j])*(g - MG[j])+(b - MB[j])*(b - MB[j]));\n      if(j == 0 || min > d){\n\tmin = d;\n\tthen = j;\n      }\n    }\n\n    if(then == 0) cout << \"black\" <<endl;\n    if(then == 1) cout << \"blue\" <<endl;\n    if(then == 2) cout << \"lime\" <<endl;\n    if(then == 3) cout << \"aqua\" <<endl;\n    if(then == 4) cout << \"red\" <<endl;\n    if(then == 5) cout << \"fuchsia\" <<endl;\n    if(then == 6) cout << \"yellow\" <<endl;\n    if(then == 7) cout << \"white\" <<endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <string.h>\nusing namespace std;\n\nint main() {\n\twhile(1){\n\t\tstring str; cin >> str ; if(str==\"0\") break;\n\t\tint Color[3]={0};\n\t\tfor(int i=1;i<str.size();i+=2){\n\t\t\tchar ch[2];\n\t\t\tch[0]=str[i],ch[1]=str[i+1];\n\t\t\tint tmp=0;\n\t\t\tfor(int j=0;j<2;j++){\n\t\t\t\tif('0'<=ch[j] && ch[j]<='9') tmp+=(ch[j]-'0');\n\t\t\t\telse if('a'<=ch[j] && ch[j]<='f') tmp+=(ch[j]-'a')+10;\n\t\t\t\tif(j==0) tmp*=16;\n\t\t\t}\n\t\t\tColor[(int)( (i-1)/2 )] = tmp;\n\t\t}\n\t\tint samp[8][3]; memset(samp,0,sizeof(samp));\n\t\tsamp[1][2]=samp[2][1]=samp[3][1]=samp[3][2]=255;\n\t\tsamp[4][0]=samp[5][0]=samp[5][2]=samp[6][0]=samp[6][1]\n\t\t=samp[7][0]=samp[7][1]=samp[7][2]=255;\n\t\tstring tmp[8];\n\t\ttmp[0]=\"black\", tmp[1]=\"blue\", tmp[2]=\"lime\", tmp[3]=\"aqua\",\n\t\ttmp[4]=\"red\", tmp[5]=\"fuchsia\", tmp[6]=\"yellow\", tmp[7]=\"white\";\n\t\tlong MIN=0; for(int i=0;i<3;i++) MIN+=Color[i]*Color[i];\n\t\tstring ans=\"black\";\n\t\tfor(int i=1;i<8;i++){\n\t\t\tlong TMP=0;\n\t\t\tfor(int j=0;j<3;j++) TMP+=(Color[j]-samp[i][j])*(Color[j]-samp[i][j]);\n\t\t\tif(TMP<MIN) MIN=TMP, ans=tmp[i];\n\t\t}\n\t\tcout << ans << '\\n' ;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main(void)\n{\n\tint a,s[8],d,f,g,h,i,j;\n\tchar z[8];\n\twhile(1){\n\t\tscanf(\"%s\",z);\n\t\tif(z[0]=='0') break;\n\t\tj=0;\n\t\tfor(i=1;i<7;i+=2){\n\t\t\tif(z[i]=='8'||z[i]=='9'||z[i]=='a'||z[i]=='b'||z[i]=='c'||z[i]=='d'||z[i]=='e'||z[i]=='f'){\n\t\t\t\ts[j]=1;\n\t\t\t}\n\t\t\telse s[j]=0;\n\t\t\tj++;\n\t\t}\n\t\tif(s[0]==1){\n\t\t\tif(s[1]==1){\n\t\t\t\tif(s[2]==1) printf(\"white\\n\");\n\t\t\t\telse printf(\"yellow\\n\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(s[2]==1) printf(\"fuchsia\\n\");\n\t\t\t\telse printf(\"red\\n\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(s[1]==1){\n\t\t\t\tif(s[2]==1) printf(\"aqua\\n\");\n\t\t\t\telse printf(\"lime\\n\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(s[2]==1) printf(\"blue\\n\");\n\t\t\t\telse printf(\"black\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define it ::iterator\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double ESP=1e-10;\nusing namespace std;\nint in[256]={0};\nint han[3][8]={\n  {0,0,0,0,256,256,256,256},\n  {0,0,256,256,0,0,256,256},\n  {0,256,0,256,0,256,0,256}\n};\nstring ss[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint main(){\n  string s;\n  loop(i,'0','9'+1)in[i]=i-'0';\n  loop(i,'a','g')in[i]=i-'a'+10;\n  while(cin>>s,s.size()!=1||s[0]!='0'){\n    int a[3]={0};\n    rep(i,3){\n      a[i]=in[s[2*i+1]]*16+in[s[2*i+2]];\n    }\n    double mi=100000;\n    int ms;\n    rep(i,8){\n      int sum=0;\n      rep(j,3)sum+=(han[j][i]-a[j])*(han[j][i]-a[j]);\n      if(mi>sum){\n\tms=i;\n\tmi=sum;\n      }\n    }\n    cout<<ss[ms]<<endl;\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nstring colors[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint dis(int id, vector<int> a){\n  int res = 0;\n  for(int i=0;i<3;i++){\n    int comp = 0;\n    if(id&1) comp = 255;\n    res += (a[i]-comp)*(a[i]-comp);\n    id/=2;\n  }\n  return res;\n}\n\nint toDec(char a){\n  if(isdigit(a))return a-'0';\n  return a-'a'+10;\n}\n\nint main(){\n  string s;\n  while(cin >> s, s != \"0\"){\n    vector<int> a(3);\n    for(int i=0;i<3;i++){\n      a[i] = toDec(s[2*i+1])*16 + toDec(s[2*i+2]);\n    }\n    int ans = 0, dmin = dis(0,a);\n    for(int i=1;i<8;i++){\n      if(dis(i,a) < dmin){\n        ans = i; dmin = dis(i,a);\n      }\n    }\n    cout << colors[ans] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nstring s;\nstring color() {\n\tchar l[6];\n\tfor (int i = 0; i < 6; i++) {\n\t\tl[i] = s[i + 1];\n\t}\n\tint r, g, b;\n\tint z[6];\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (l[i] == '0') {\n\t\t\tz[i] = 0;\n\t\t}\n\t\telse if (l[i] == '1') {\n\t\t\tz[i] = 1;\n\t\t}\n\t\telse if (l[i] == '2') {\n\t\t\tz[i] = 2;\n\t\t}\n\t\telse if (l[i] == '3') {\n\t\t\tz[i] = 3;\n\t\t}\n\t\telse if (l[i] == '4') {\n\t\t\tz[i] = 4;\n\t\t}\n\t\telse if (l[i] == '5') {\n\t\t\tz[i] = 5;\n\t\t}\n\t\telse if (l[i] == '6') {\n\t\t\tz[i] = 6;\n\t\t}\n\t\telse if (l[i] == '7') {\n\t\t\tz[i] = 7;\n\t\t}\n\t\telse if (l[i] == '8') {\n\t\t\tz[i] = 8;\n\t\t}\n\t\telse if (l[i] == '9') {\n\t\t\tz[i] = 9;\n\t\t}\n\t\telse if (l[i] == 'a') {\n\t\t\tz[i] = 10;\n\t\t}\n\t\telse if (l[i] == 'b') {\n\t\t\tz[i] = 11;\n\t\t}\n\t\telse if (l[i] == 'c') {\n\t\t\tz[i] = 12;\n\t\t}\n\t\telse if (l[i] == 'd') {\n\t\t\tz[i] = 13;\n\t\t}\n\t\telse if (l[i] == 'e') {\n\t\t\tz[i] = 14;\n\t\t}\n\t\telse if (l[i] == 'f') {\n\t\t\tz[i] = 15;\n\t\t}\n\t}\n\tr = z[0] * 16 + z[1];\n\tg = z[2] * 16 + z[3];\n\tb = z[4] * 16 + z[5];\n\tif (r <= 128) {\n\t\tif (g <= 128) {\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"black\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"blue\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"lime\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"aqua\";\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tif (g <= 128) {\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"red\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"fuchsia\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"yellow\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn \"white\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tstring g[1001];\n\tint x;\n\tfor (int i = 0;; i++){\n\t\tcin >> s;\n\t\tif (s == \"0\") {\n\t\t\tx = i;\n\t\t\tbreak;\n\t\t}\n\t\tg[i] = color();\n\t}\n\tfor (int i = 0; i < x; i++){\n\t\tcout << g[i] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n \nconst int INF = 10000000;\n \nint base16(char c) {\n  if( 'a' <= c ) return c-'a'+10;\n  else return c-'0';\n}\n \nint main() {\n \n  string s;\n \n  int coltabel[8][3] = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n             { 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n             { 255, 255, 0 }, { 255, 255, 255 } };\n \n  string nametable[8] = { \"black\", \"blue\", \"lime\", \"aqua\",\n             \"red\", \"fuchsia\", \"yellow\", \"white\" };\n \n  while(true) {\n \n    cin>>s;\n    if( s==\"0\" ) break;\n \n    int r,g,b;\n    r = base16(s[1])*16+base16(s[2]);\n    g = base16(s[3])*16+base16(s[4]);\n    b = base16(s[5])*16+base16(s[6]);\n \n    int res,tmp=INF,t;\n \n    for(int i=0; i<8; i++) {\n      if( ( t = (r-coltabel[i][0])*(r-coltabel[i][0])\n      + (g-coltabel[i][1])*(g-coltabel[i][1])\n      + (b-coltabel[i][2])*(b-coltabel[i][2]) )\n      < tmp ) {\n    //cout<<t<<\" \"<<i<<endl;\n    res = i;\n    tmp = t;\n      }\n    }\n \n    cout<<nametable[res]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <map>\n#include <vector>\n\nusing namespace std;\n\nstring s[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint main(){\n\t\n\tstring str;\n\t\n\twhile(true){\n\t\tcin >> str;\n\t\tif(str[0] == '0'){\n\t\t\tbreak;\n\t\t}\n\t\tint ans = 0;\n\t\tif(str[1] < '0' || str[1] > '7'){\n\t\t\tans += 4;\n\t\t}\n\t\tif(str[3] < '0' || str[3] > '7'){\n\t\t\tans += 2;\n\t\t}\n\t\tif(str[5] < '0' || str[5] > '7'){\n\t\t\tans += 1;\n\t\t}\n\t\tcout << s[ans] << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n\nusing namespace std;\n\nstring Strength[8] = {\"000000\",\"0000ff\",\"00ff00\",\"00ffff\",\n\t\t      \"ff0000\",\"ff00ff\",\"ffff00\",\"ffffff\"};\n\nstring Color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\n\t\t   \"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint x_t(char c){\n  if(islower(c)) return 10 + (c - 'a');\n  return c - '0';\n}\n\nint change(string s){\n  return x_t(s[0])*16 + x_t(s[1]);\n}\n\nstring solve(string R,string G,string B){\n  int pos,Min = (1<<29),d;\n  int r = change(R),g = change(G),b = change(B);\n  string rr,gg,bb;\n\n  for(int i = 0 ; i < 8 ; i++){\n    rr = Strength[i].substr(0,2);\n    gg = Strength[i].substr(2,2);\n    bb = Strength[i].substr(4,2);\n \n    int rk = change(rr) ,gk = change(gg) ,bk = change(bb);    \n    d = (r-rk)*(r-rk) + (g-gk)*(g-gk) + (b-bk)*(b-bk);\n\n    if(d < Min){\n      Min = d;\n      pos = i;\n    }\n  }\n\n  return Color[pos];\n}\n\nint main(){\n  string str;\n\n  while(cin >> str ,str != \"0\"){\n    string R,G,B;\n\n    R = str.substr(1,2);\n    G = str.substr(3,2);\n    B = str.substr(5,2);\n\n    cout << solve(R,G,B) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define all(c) (c).begin(),(c).end()\n#define rep(i,n) for(int i=0; i<(int)(n); i++)\n#define rrep(i,n) for(int i=(int)(n)-1; i>=0; i--)\n#define REP(i,m,n) for(int i=(int)(m); i<(int)(n); i++)\n#define iter(c) __typeof((c).begin())\n#define tr(it,c) for(iter(c) it=(c).begin(); it!=(c).end(); it++)\n#define pb(a) push_back(a)\n#define pr(a) cout << (a) << endl\n#define PR(a,b) cout << (a) << \" \" << (b) << endl\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int,int> P;\nconst int MAX=1000000001;\nconst ll MAXL=1000000000000000001LL;\nconst ll mod=1000000007;\nint dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\n\ndouble x(string s) {\n  double a=1,ans=0;\n  rrep(i,2) {\n    if(isdigit(s[i])) ans+=(int)(s[i]-'0')*a;\n    else ans+=((int)(s[i]-'a')+10)*a;\n    a*=16;\n  }\n  return ans;\n}\n\nint main() {\n  double d[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n  string c[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  string s;\n  while(cin >> s && s!=\"0\") {\n    int ans=0;\n    double min=MAX;\n    double z[3];\n    s=s.substr(1);\n    rep(i,3) z[i]=x(s.substr(i*2,2));\n    rep(i,8) {\n      double v=sqrt((z[0]-d[i][0])*(z[0]-d[i][0])+(z[1]-d[i][1])*(z[1]-d[i][1])+(z[2]-d[i][2])*(z[2]-d[i][2]));\n      if(v<min) {\n\tans=i;\n\tmin=v;\n      }\n    }\n    pr(c[ans]);\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint six_ten(char x){\n\tif(x >= '0' && x <= '9'){\n\t\treturn x - '0';\n\t}\n\telse{\n\t\treturn 10 + (x - 'a');\n\t}\n}\n \nint main(){\n    int color_data[8][3] = { {0, 0, 0}, \n                   {0, 0, 255}, \n                   {0, 255, 0},\n                   {0, 255, 255}, \n                   {255, 0, 0}, \n                   {255, 0, 255},\n                   {255, 255, 0}, \n                   {255, 255, 255}};\n\n\tstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\tstring s;\n\twhile(true){\n\t\tcin >> s;\n\t\tif(s == \"0\")break;\n\t\tint r,g,b;\n\t\tr = 16 * six_ten(s[1]) + six_ten(s[2]);\n\t\tg = 16 * six_ten(s[3]) + six_ten(s[4]);\n\t\tb = 16 * six_ten(s[5]) + six_ten(s[6]);\n\n\t\tdouble maxi = DBL_MAX;\n\t\tint key;\n\t\tfor(int i = 0; i < 8; i++){\n\t\t\tdouble R = r - color_data[i][0];\n\t\t\tdouble G = g - color_data[i][1];\n\t\t\tdouble B = b - color_data[i][2];\n\t\t\tR *= R;\n\t\t\tG *= G;\n\t\t\tB *= B;\n\t\t\tdouble RGB = sqrt(R + G + B);\n\t\t\tif(RGB < maxi){\n\t\t\t\tmaxi = RGB;\n\t\t\t\tkey = i;\n\t\t\t}\n\t\t}\n\t\tcout << color[key] << endl;\n\t}\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <cstdlib>\nusing namespace std;\nstring color[] = {\"black\", \"blue\", \"lime\", \"aqua\",\n    \"red\", \"fuchsia\", \"yellow\", \"white\"};\nint nums[][3] = {{0,0,0}, {0,0,255}, {0,255,0}, {0,255,255},\n    {255,0,0}, {255,0,255}, {255,255,0}, {255,255,255}};\n\nint convert(string str) {\n    int res = 0;\n    if ('0'<=str[0]&&str[0]<='9') {\n        res += (str[0]-'0') * 16;\n    } else if ('a'<=str[0]&&str[0]<='f') {\n        res += (str[0]-'a'+10) * 16;\n    }\n    if ('0'<=str[1]&&str[1]<='9') {\n        res += (str[1]-'0');\n    } else if ('a'<=str[1]&&str[1]<='f') {\n        res += (str[1]-'a'+10);\n    }\n    return res;\n}\n\nint main() {\n    string str;\n    while (cin >> str) {\n        if (str == \"0\") break;\n        double d = 10000000.0;\n        string res;\n        int r = convert(str.substr(1,2)), g = convert(str.substr(3,2)), b = convert(str.substr(5,2));\n        for (int i=0; i<8; i++) {\n            double tmp = sqrt(pow(r-nums[i][0], 2)+pow(g-nums[i][1], 2)+pow(b-nums[i][2], 2));\n            if (tmp < d) {\n                d = tmp;\n                res = color[i];\n            }\n        }\n        cout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\ntemplate<class T>\nusing Table = vector<vector<T>>;\nconst ld eps=1e-9;\n\n//// < \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\a.txt\" > \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\b.answer\"\nint main() {\n\twhile (1) {\n\t\tstring st; cin >> st;\n\t\tmap<int, string>mp;\n\t\tmp[0] = \"black\";\n\t\tmp[1] = \"blue\";\n\t\tmp[2] = \"lime\";\n\t\tmp[3] = \"aqua\";\n\t\tmp[4] = \"red\";\n\t\tmp[5] = \"fuchsia\";\n\t\tmp[6] = \"yellow\";\n\t\tmp[7] = \"white\";\n\t\tif (st == \"0\")break;\n\t\telse {\n\t\t\tint red = stoi(st.substr(1, 2), nullptr, 16);\n\t\t\tint gre = stoi(st.substr(3, 2), nullptr, 16);\n\t\t\tint blu = stoi(st.substr(5, 2), nullptr, 16);\n\t\t\tint num = (red > 127) * 4 + (gre > 127) * 2 + (blu > 127);\n\t\t\tcout << mp[num] << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint checkHeight(double h);\nconst string COLORS[8] = {\"black\", \"blue\", \"lime\", \"aqua\"\n                         , \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nconst int RGB_VALUES[8][3] = {{0, 0, 0},\n                             {0, 0, 255},\n                             {0, 255, 0},\n                             {0, 255, 255},\n                             {255, 0, 0},\n                             {255, 0, 255},\n                             {255, 255, 0},\n                             {255, 255, 255}};\n\nint toDec(char s);\n\nint main()\n{\n    while(1)\n    {\n        string in_str;\n        cin >> in_str;\n        if(in_str == \"0\")\n        {\n            break;\n        }\n        \n        int r = toDec(in_str[1]) * 16 + toDec(in_str[2]);\n        int g = toDec(in_str[3]) * 16 + toDec(in_str[4]);\n        int b = toDec(in_str[5]) * 16 + toDec(in_str[6]);\n\n        double dist_min = 1000000;\n        int index = 0;\n        for(int i = 0; i < 8; i++)\n        {\n            double dist_square = (r - RGB_VALUES[i][0]) * (r - RGB_VALUES[i][0])\n                                 + (g - RGB_VALUES[i][1]) * (g - RGB_VALUES[i][1])\n                                 + (b - RGB_VALUES[i][2]) * (b - RGB_VALUES[i][2]);\n            if(isless(dist_square, dist_min))\n            {\n                dist_min = dist_square;\n                index = i;\n            }\n        }\n        cout << COLORS[index] << endl;\n    }\n    return 0;\n}\n\nint toDec(char s)\n{\n    int value;\n    if(s >= '0' && s <= '9')\n    {\n       value = s - '0';\n    }\n    else\n    {\n        value = s - 'a' + 10;\n    }\n    return value;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\nclass Col\n{\npublic:\n  int R,G,B;\n  Col():R(0),G(0),B(0){}\n  Col(int R,int G,int B):R(R),G(G),B(B){}\n};\n\nint _16to10(string s)\n{\n  int a[2];\n  for(int i=0;i<2;i++)\n    {\n      if(s[i] == 'a')\n\ta[i] = 10;\n      else if(s[i] == 'b')\n\ta[i] = 11;\n      else if(s[i] == 'c')\n\ta[i] = 12;\n      else if(s[i] == 'd')\n\ta[i] = 13;\n      else if(s[i] == 'e')\n\ta[i] = 14;\n      else if(s[i] == 'f')\n\ta[i] = 15;\n      else \n\ta[i] = s[i] - '0';\n    }\n  return a[1]+a[0]*16;\n}\n\nint main()\n{\n  string s;\n  vector<Col> vec;\n  vector<string> name;\n  vec.resize(8),name.resize(8);\n  int ff = _16to10(\"ff\");\n  vec[0] = Col(0,0,0);\n  vec[1] = Col(0,0,ff);\n  vec[2] = Col(0,ff,0);\n  vec[3] = Col(0,ff,ff);\n  vec[4] = Col(ff,0,0);\n  vec[5] = Col(ff,0,ff);\n  vec[6] = Col(ff,ff,0);\n  vec[7] = Col(ff,ff,ff);\n  name[0] = \"black\";\n  name[1] = \"blue\";\n  name[2] = \"lime\";\n  name[3] = \"aqua\";\n  name[4] = \"red\";\n  name[5] = \"fuchsia\";\n  name[6] = \"yellow\";\n  name[7] = \"white\";\n  while(true)\n    {\n      cin >> s;\n      if(s == \"0\")\n\tbreak;\n      int R,G,B;\n      R = _16to10(s.substr(1,2));\n      G = _16to10(s.substr(3,2));\n      B = _16to10(s.substr(5,2));\n\n      double men = (1<<28),pos = -1;\n      for(int i=0;i<8;i++)\n\t{\n\t  double d =  sqrt(pow(R-vec[i].R,2)+pow(B-vec[i].B,2)+pow(G-vec[i].G,2));\n\t  if(men > d)\n\t    {\n\t      men = d;\n\t      pos = i;\n\t    }\n\t}\n      cout << name[pos] << endl;\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<cctype>\n#include<cmath>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define INF 1e6\nusing namespace std;\n\nint d(string s,int color[3]){\n  int red=0,blue=0,green=0;\n  if(!isdigit(s[1]))red+=(s[1]-'a'+10)*16;\n  else red+=(s[1]-'0')*16;\n  if(!isdigit(s[2]))red+=(s[2]-'a'+10);\n  else red+=(s[2]-'0');\n  if(!isdigit(s[3]))green+=(s[3]-'a'+10)*16;\n  else green+=(s[3]-'0')*16;\n  if(!isdigit(s[4]))green+=(s[4]-'a'+10);\n  else green+=(s[4]-'0');\n  if(!isdigit(s[5]))blue+=(s[5]-'a'+10)*16;\n  else blue+=(s[5]-'0')*16;\n  if(!isdigit(s[6]))blue+=(s[6]-'a'+10);\n  else blue+=(s[6]-'0');\n  return pow((red-color[0]),2)+pow((green-color[1]),2)+pow((blue-color[2]),2);\n}\n\nint cl[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\nint main(){\n  string str;\n  while(1){\n    cin>>str;\n    if(str==\"0\")break;\n    int num=INF;\n    string ans=\"\";\n    rep(i,8){\n      if(num>d(str,cl[i])){\n\tif(i==0)ans=\"black\";\n\telse if(i==1)ans=\"blue\";\n\telse if(i==2)ans=\"lime\";\n\telse if(i==3)ans=\"aqua\";\n\telse if(i==4)ans=\"red\";\n\telse if(i==5)ans=\"fuchsia\";\n\telse if(i==6)ans=\"yellow\";\n\telse if(i==7)ans=\"white\";\n\tnum=d(str,cl[i]);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint dir[5010];\n\nvoid remove(){\n\tint cnt = 0;\n\tfor(int i = 0 ; i < 5010 ; i++){\n\t\tif( dir[i] == 31 ) dir[i] = 0,cnt++;\n\t}\n\tfor(int k = 0 ; k < cnt ; k++)\n\tfor(int i = 5009 ; i > 0 ; i--){\n\t\tif( dir[i] && !dir[i-1] ){\n\t\t\tswap(dir[i],dir[i-1]);\n\t\t}\n\t}\n}\n\nvoid tate(int x,int l){\n\tfor(int i = 1 ; i <= l ; i++) dir[5010-i] |= (1<<x);\n\t\n\tfor(int _ = 0 ; _ < l ; _++)\n\tfor(int i = 5010-l+_ ; i > 0 ; i--){\n\t\tif( (dir[i] >> x & 1) && (dir[i-1] >> x & 1) == 0 ){\n\t\t\tdir[i] -= (1<<x);\n\t\t\tdir[i-1] += (1<<x);\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tremove();\n}\n\nvoid yoko(int x,int l){\n\tint mask = ((1<<l)-1) << x;\n\tdir[5009] = mask;\n\tfor(int i = 5009 ; i > 0 ; i--){\n\t\tif( dir[i] && !(dir[i-1] & mask) ){\n\t\t\tdir[i] -= mask;\n\t\t\tdir[i-1] += mask;\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tremove();\n}\nint main(){\n\tint n;\n\twhile(cin >> n && n){\n\t\tfor(int i = 0 ; i <= 5009 ; i++)\n\t\t\tdir[i] = 0;\n\t\t\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tint d,l,x;\n\t\t\tcin >> d >> l >> x;\n\t\t\tx--;\n\t\t\tif(d==1){\n\t\t\t\tyoko(x,l);\n\t\t\t}else{\n\t\t\t\ttate(x,l);\n\t\t\t}\n\t\t\tint f = 0;\n\t\t\tif( i == 10 ) continue;\n\t\t\tfor(\tint j = 5009 ; j >= 0 ; j--){\n\t\t\t\tif(f||dir[j]){\n\t\t\t\t\t//cout << j << \" \" << (dir[j]&1) << (dir[j]&2) << (dir[j]&4) << (dir[j]&8) << (dir[j]&16) << endl; ;\n\t\t\t\t\tf=true;\n\t\t\t\t}\n\t\t\t}\n\t\t//\tcout << endl;\n\t\t}\n\t\tint ans = 0;\n\t\tfor(int i = 0 ; i < 5010 ; i++)\n\t\t\tans += __builtin_popcount(dir[i]);\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <map>\n\nusing namespace std;\n\nclass RGBc{\npublic:\n\tint R,G,B;\n\tstring name;\n\n\tRGBc();\n\tRGBc(int R_,int G_,int B_){\n\t\tR=R_;\n\t\tG=G_;\n\t\tB=B_;\n\t}\n\n\tbool operator<(const RGBc &rgb)const{\n\t\treturn rgb.R>this->R;\n\t}\n};\n\nint main(){\n\t\n\t//map<RGB,string>table;\n\tvector<RGBc> vrgb;\n\tRGBc tmp(0,0,0);\n\n\ttmp.name=\"black\";\n\ttmp.R=0;\n\ttmp.G=0;\n\ttmp.B=0;\n\tvrgb.push_back(tmp);\n\n\ttmp.name=\"blue\";\n\ttmp.R=0;\n\ttmp.G=0;\n\ttmp.B=255;\n\tvrgb.push_back(tmp);\n\n\ttmp.name=\"lime\";\n\ttmp.R=0;\n\ttmp.G=255;\n\ttmp.B=0;\n\tvrgb.push_back(tmp);\n\n\ttmp.name=\"aqua\";\n\ttmp.R=0;\n\ttmp.G=255;\n\ttmp.B=255;\n\tvrgb.push_back(tmp);\n\n\ttmp.name=\"red\";\n\ttmp.R=255;\n\ttmp.G=0;\n\ttmp.B=0;\n\tvrgb.push_back(tmp);\n\n\ttmp.name=\"fuchsia\";\n\ttmp.R=255;\n\ttmp.G=0;\n\ttmp.B=255;\n\tvrgb.push_back(tmp);\n\n\ttmp.name=\"yellow\";\n\ttmp.R=255;\n\ttmp.G=255;\n\ttmp.B=0;\n\tvrgb.push_back(tmp);\n\n\ttmp.name=\"white\";\n\ttmp.R=255;\n\ttmp.G=255;\n\ttmp.B=255;\n\tvrgb.push_back(tmp);\n\n\t//table[\"black\"].R=0;\n\t//table[\"black\"].G=0;\n\t//table[\"black\"].B=0;\n\n\t//table[\"blue\"]=RGB(0,0,255);\n\t//table[\"lime\"]=RGB(0,255,0);\n\t//table[\"aqua\"]=RGB(0,255,255);\n\t//table[\"red\"]=RGB(255,0,0);\n\t//table[\"fuchsia\"]=RGB(255,0,255);\n\t//table[\"yellow\"]=RGB(255,255,0);\n\t//table[\"white\"]=RGB(255,255,255);\n\n\tstring str;\n\twhile(cin>>str&&str!=\"0\"){\n\t\tvector<int> v;\n\t\tfor(int i = 1; i < str.size(); i+=2){\n\t\t\tint num=0;\n\t\t\tif(str[i]>='a'&&str[i]<='f'){\n\t\t\t\tnum+=str[i]-'a'+10;\n\t\t\t\tnum*=16;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnum+=str[i]-'0';\n\t\t\t\tnum*=16;\n\t\t\t}\n\t\t\tif(str[i+1]>='a'&&str[i+1]<='f'){\n\t\t\t\tnum+=str[i+1]-'a'+10;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnum+=str[i+1]-'0';\n\t\t\t}\n\t\t\tv.push_back(num);\n\t\t}\n\n\t\tint R=v[0];\n\t\tint G=v[1];\n\t\tint B=v[2];\n\n\t\tint minDk=10000000;\n\t\tstring color;\n\t\tfor(int i = 0; i < vrgb.size(); i++){\n\t\t\tint dk=(R-vrgb[i].R)*(R-vrgb[i].R)+(G-vrgb[i].G)*(G-vrgb[i].G)+(B-vrgb[i].B)*(B-vrgb[i].B);\n\t\t\tif(minDk>dk){\n\t\t\t\tminDk=dk;\n\t\t\t\tcolor=vrgb[i].name;\n\t\t\t}\n\t\t}\n\t\tcout<<color<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nconst int INF = 10000000;\n\nint base16(char c) {\n  if( 'a' <= c ) return c-'a'+10;\n  else return c-'0';\n}\n\nint main() {\n\n  string s;\n\n  int coltabel[8][3] = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t { 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t { 255, 255, 0 }, { 255, 255, 255 } };\n\n  string nametable[8] = { \"black\", \"blue\", \"lime\", \"aqua\",\n\t\t\t \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\n  while(true) {\n\n    cin>>s;\n    if( s==\"0\" ) break;\n\n    int r,g,b;\n    r = base16(s[1])*16+base16(s[2]);\n    g = base16(s[3])*16+base16(s[4]);\n    b = base16(s[5])*16+base16(s[6]);\n\n    int res,tmp=INF,t;\n\n    for(int i=0; i<8; i++) {\n      if( ( t = (r-coltabel[i][0])*(r-coltabel[i][0])\n\t  + (g-coltabel[i][1])*(g-coltabel[i][1])\n\t  + (b-coltabel[i][2])*(b-coltabel[i][2]) )\n\t  < tmp ) {\n\t//cout<<t<<\" \"<<i<<endl;\n\tres = i;\n\ttmp = t;\n      }\n    }\n\n    cout<<nametable[res]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <cmath>\nusing namespace std;\n\nint R,G,B;\nvoid solve() {\n  string color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  int icolor[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n  int nearest=0,dist,mindist=1000000;\n  for(int i=0;i<8;i++) {\n    dist = (int) sqrt( (R-icolor[i][0])*(R-icolor[i][0]) + (G-icolor[i][1])*(G-icolor[i][1]) + (B-icolor[i][2])*(B-icolor[i][2]));\n    if(dist < mindist) {\n      mindist = dist;\n      nearest = i;\n    }\n  }\n  cout << color[nearest] << endl;\n}\n\nint main() {\n  string str;\n  while(getline(cin,str)) {\n    if(str == \"0\") break;\n    R = strtol(str.substr(1,2).c_str(),NULL,16);\n    G = strtol(str.substr(3,2).c_str(),NULL,16);\n    B = strtol(str.substr(5,2).c_str(),NULL,16);\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <string>\n#include <climits>\nusing namespace std;\n#define rep2(x,from,to) for(int x=(from);x<(to);++(x))\n#define rep(x,to) rep2(x,0,to)\nint main(){\n\tstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\tint range[8][3] = {{0, 0, 0}, {0, 0, 255}, {0, 255, 0}, {0, 255, 255},\n\t{255, 0, 0}, {255, 0, 255}, {255, 255, 0}, {255, 255, 255}};\n\tchar s;\n\tint a, b, c;\n\twhile(scanf(\" %c\", &s)) {\n\t\tif(s == '0') break;\n\t\tscanf(\"%2x%2x%2x\", &a, &b, &c);\n\t\tint ret = INT_MAX, ans = 0;\n\t\trep(i,8) {\n\t\t\tint buf = (a-range[i][0])*(a-range[i][0]) + (b-range[i][1])*(b-range[i][1]) \n\t\t\t\t+ (c-range[i][2])*(c-range[i][2]);\n\t\t\tif(ret > buf) {\n\t\t\t\tret = buf;\n\t\t\t\tans = i;\n\t\t\t}\n\t\t}\n\t\tcout << color[ans] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <cstdio>\n#include <sstream>\n#include <string>\nusing namespace std;\n\n#define loop(i,a,b) for(int i=(a);i<int(b);i++)\n#define rep(i,b) loop(i,0,b)\n\nusing namespace std;\n\nint sq(int n){\n    return n*n;\n}\n\nint main(){\n    char c[10];\n    while(cin>>c && c[0]!='0'){\n        unsigned md=1<<30;\n        int cn;\n        unsigned cd=strtoul(c+1,0,16);\n        rep(i,8){\n            unsigned d=0;\n            rep(j,3){\n                static const unsigned cc[]={0x0,0xff,0xff00,0xffff,0xff0000,0xff00ff,0xffff00,0xffffff};\n                d+=sq((cd>>j*8&0xFF)-(cc[i]>>j*8&0xFF));\n            }\n            if(d<md){\n                md=d;\n                cn=i;\n            }\n        }\n\n        const string cstr[]= {\n            \"black\",\n            \"blue\",\n            \"lime\",\n            \"aqua\",\n            \"red\",\n            \"fuchsia\",\n            \"yellow\",\n            \"white\"\n        };\n        cout<<cstr[cn]<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<cctype>\n#include<cmath>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define INF 1e6\nusing namespace std;\n\nint d(string s,int color[3]){\n  int red=0,blue=0,green=0;\n  if(!isdigit(s[1]))red+=(s[1]-'a'+10)*16;\n  else red+=(s[1]-'0')*16;\n  if(!isdigit(s[2]))red+=(s[2]-'a'+10);\n  else red+=(s[2]-'0');\n  if(!isdigit(s[3]))green+=(s[3]-'a'+10)*16;\n  else green+=(s[3]-'0')*16;\n  if(!isdigit(s[4]))green+=(s[4]-'a'+10);\n  else green+=(s[4]-'0');\n  if(!isdigit(s[5]))blue+=(s[5]-'a'+10)*16;\n  else blue+=(s[5]-'0')*16;\n  if(!isdigit(s[6]))blue+=(s[6]-'a'+10);\n  else blue+=(s[6]-'0');   \n  return sqrt(pow((red-color[0]),2)+pow((green-color[1]),2)+pow((blue-color[2]),2));\n}\n\nint cl[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\nint main(){\n  string str;\n  while(1){\n    cin>>str;\n    if(str==\"0\")break;\n    int num=INF;\n    string ans=\"\";\n    rep(i,8){\n      if(num>d(str,cl[i])){\n\tif(i==0)ans=\"black\";\n\telse if(i==1)ans=\"blue\";\n\telse if(i==2)ans=\"lime\";\n\telse if(i==3)ans=\"aqua\";\n\telse if(i==4)ans=\"red\";\n\telse if(i==5)ans=\"fuchsia\";\n\telse if(i==6)ans=\"yellow\";\n\telse if(i==7)ans=\"white\";\n\tnum=d(str,cl[i]);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <complex>\n#include <cstdio>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint a[6],c[3],d[8][3];\nstring s,na[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint main(){\n\tfor(int i=0;i<8;i++){\n\t\td[i][0]=i/4*255;\n\t\td[i][1]=(i/2)%2*255;\n\t\td[i][2]=i%2*255;\n\t}\n\twhile(cin>>s){\n\t\tif(s==\"0\")return 0;\n\t\tfor(int i=1;i<7;i++){\n\t\t\tif(isdigit(s[i]))a[i-1]=s[i]-'0';\n\t\t\telse a[i-1]=s[i]-'a'+10;\n\t\t\tif(!(i%2))c[i/2-1]=a[i-1]+a[i-2]*16;\n\t\t}\n\t\tint df=999999,no;\n\t\tfor(int i=0;i<8;i++){\n\t\t\tint sum=0;\n\t\t\tfor(int j=0;j<3;j++)sum+=(c[j]-d[i][j])*(c[j]-d[i][j]);\n\t\t\tif(sum<df){no=i;df=sum;}\n\t\t}\n\t\tcout<<na[no]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cctype>\n\nusing namespace std;\n\nint pow(int x, int n) {\n  int ans = 1;\n  for(int i = 0; i < n; i++) {\n    ans *= x;\n  }\n  return ans;\n}\n\nint charToInt(char c) {\n  return (int)c - (int)'0';\n}\n\nint _16to10(char c) {\n  int ans = charToInt(c);\n  if(ans >= 0 && ans <= 9) return ans;\n  else return (int)tolower(c) - (int)'a' + 10;\n}\n\nint _16to10(string str) {\n  int ans = 0;\n  for(int i = 0; i < str.length(); i++) {\n    ans += _16to10(str[i])*pow(16, str.length()-i-1);\n  }\n  return ans;\n}\n\nint d2(string a, string b) {\n  int ans = 0;\n  for(int i = 0; i < 3; i++) {\n    int p = i*2;\n    ans += pow(_16to10(a.substr(p,2))-_16to10(b.substr(p,2)), 2);\n  }\n  return ans;\n}\n\nint main() {\n  string colors[8][2] = {{\"black\", \"000000\"},\n\t\t\t {\"blue\", \"0000ff\"},\n\t\t\t {\"lime\", \"00ff00\"},\n\t\t\t {\"aqua\", \"00ffff\"},\n\t\t\t {\"red\", \"ff0000\"},\n\t\t\t {\"fuchsia\", \"ff00ff\"},\n\t\t\t {\"yellow\", \"ffff00\"},\n\t\t\t {\"white\", \"ffffff\"}};\n  while(1) {\n    string str;\n    cin >> str;\n    if(str == \"0\") break;\n\n    int min = 999999;\n    int k;\n    for(int i = 0; i < 8; i++) {\n      int temp = d2(str.substr(1, 6), colors[i][1]);\n      if(temp < min) {\n\tmin = temp;\n\tk = i;\n      }\n    }\n    cout << colors[k][0] << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define PB push_back\n#define MP make_pair\nusing namespace std;\ntypedef long long ll;\nint to_int(string s){\n\tint k=1,res=0;\n\tfor(int i=s.size()-1;i>=0;i--){\n\t\tif('0'<=s[i]&&s[i]<='9'){\n\t\t\tres+=k*(s[i]-'0');\n\t\t}else{\n\t\t\tres+=k*(s[i]-'a'+10);\n\t\t}\n\t\tk*=16;\n\t}\n\treturn res;\n}\n\nint main(){\n\tstring ans[2][2][2];\n\tans[0][0][0]=\"black\";\n\tans[0][0][1]=\"blue\";\n\tans[0][1][0]=\"lime\";\n\tans[0][1][1]=\"aqua\";\n\tans[1][0][0]=\"red\";\n\tans[1][0][1]=\"fuchsia\";\n\tans[1][1][0]=\"yellow\";\n\tans[1][1][1]=\"white\";\n\tchar s[8];\n\twhile(scanf(\"%s\",s)&&s[0]!='0'){\n\t\tint a,b,c,dat[3];\n\t\tfor(int i=1;i<6;i+=2){\n\t\t\tstring tmp;int ans[3];\n\t\t\ttmp.assign(s,i,2);\n\t\t\tint d=to_int(tmp);\n\t\t\tif(d<=(to_int(\"ff\")-d))ans[i/2]=0;\n\t\t\telse ans[i/2]=1;\n\t\t}\n\t\tcout<<ans[dat[0]][dat[1]][dat[2]]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  char c[10];\n  int r,g,b,id;\n  string str[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  while(scanf(\"%s\",c),c[0]!='0'){\n    r = g = b = 0;\n    if('0'<=c[1] && c[1]<='9') r += (c[1]-'0')*16;\n    else r += (c[1]-'a'+10)*16;\n    if('0'<=c[2] && c[2]<='9') r += (c[2]-'0');\n    else r += (c[2]-'a'+10);\n    if('0'<=c[3] && c[3]<='9') g += (c[3]-'0')*16;\n    else g += (c[3]-'a'+10)*16;\n    if('0'<=c[4] && c[4]<='9') g += (c[4]-'0');\n    else g += (c[4]-'a'+10);\n    if('0'<=c[5] && c[5]<='9') b += (c[5]-'0')*16;\n    else b += (c[5]-'a'+10)*16;\n    if('0'<=c[6] && c[6]<='9') b += (c[6]-'0');\n    else b += (c[6]-'a'+10);\n    id = 0;\n    if(r >=123) id += 4;\n    if(g >=123) id += 2;\n    if(b >=123) id += 1;\n    cout << str[id] << endl;\n  }\n  return(0);\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n\ntypedef pair<double, int> pdi;\n\nint lis[8][3] = {\n\t{0, 0, 0},\n\t{0, 0, 0xff},\n\t{0, 0xff, 0},\n\t{0, 0xff, 0xff},\n\t{0xff, 0, 0},\n\t{0xff, 0, 0xff},\n\t{0xff, 0xff, 0},\n\t{0xff, 0xff, 0xff}\n};\n\nstring color[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\nint calc(char c) {\n\tif (isdigit(c)) return c - '0';\n\treturn c - 'a' + 10;\n}\n\nint main() {\n\tstring str;\n\twhile (cin >> str, str != \"0\") {\n\t\tint c[3];\n\t\tREP(i, 3) { c[i] = 16 * calc(str[1 + i * 2]) + calc(str[1 + i * 2 + 1]); }\n\t\t\n\t\tvector<pdi> ans;\n\t\tREP(i, 8) {\n\t\t\tdouble d = 0.0;\n\t\t\tREP(j, 3) d += pow(lis[i][j] - c[j], 2.0);\n\t\t\td = sqrt(d);\n\t\t\tans.push_back(pdi(d, i));\n\t\t}\n\t\tsort(ans.begin(), ans.end());\n\t\tcout << color[ans[0].second] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define it ::iterator\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double ESP=1e-10;\nusing namespace std;\nint a[8][3]={\n  {  0,  0,  0},\n  {  0,  0,255},\n  {  0,255,  0},\n  {  0,255,255},\n  {255,  0,  0},\n  {255,  0,255},\n  {255,255,  0},\n  {255,255,255}\n};\nstring out[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint main(){\n  string in;\n  map<char,int>c;\n  rep(i,10)c[i+'0']=i;\n  loop(i,'a','f'+1)c[i]=i-'a'+10;\n  while(cin>>in,in!=\"0\"){\n    int min=1e9;\n    int mini=1e9;\n    int b[3]={c[in[1]]*16+c[in[2]],c[in[3]]*16+c[in[4]],c[in[5]]*16+c[in[6]]};\n    //cout<<b[0]<<\" \"<<b[1]<<\" \"<<b[2]<<endl;\n    rep(i,8){\n      double sum=0;\n      rep(j,3)sum+=pow(b[j]-a[i][j],2);\n      if(min>sum){min=sum;mini=i;}\n    }\n    cout<<out[mini]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "// Tazoe\n\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n\twhile(true){\n\t\tstring S;\n\t\tcin >> S;\n\n\t\tif(S==\"0\")\n\t\t\tbreak;\n\n\t\tif(S[1]>='0'&&S[1]<='7'){\n\t\t\tif(S[3]>='0'&&S[3]<='7'){\n\t\t\t\tif(S[5]>='0'&&S[5]<='7'){\n\t\t\t\t\tcout << \"black\" << '\\n';\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcout << \"blue\" << '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(S[5]>='0'&&S[5]<='7'){\n\t\t\t\t\tcout << \"lime\" << '\\n';\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcout << \"aqua\" << '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(S[3]>='0'&&S[3]<='7'){\n\t\t\t\tif(S[5]>='0'&&S[5]<='7'){\n\t\t\t\t\tcout << \"red\" << '\\n';\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcout << \"fuchsia\" << '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(S[5]>='0'&&S[5]<='7'){\n\t\t\t\t\tcout << \"yellow\" << '\\n';\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcout << \"white\" << '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n\nconst char *t[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"redff\",\"fuchsia\",\"yellow\",\"white\"};\n\nint solve(int r, int g, int b){\n    int min = 0; int mind = 200000;\n    for(int i = 0; i < 8; i++){\n        int r0 = ((i>>2)&1)*0xff, g0 = ((i>>1)&1)*0xff, b0 = ((i>>0)&1)*0xff;\n        //pf(\"%d,%d,%d : %d,%d,%d\\n\", r,g,b,r0,g0,b0);\n        int d = (r-r0)*(r-r0)+(g-g0)*(g-g0)+(b-b0)*(b-b0);\n        if(mind > d){\n            mind = d, min = i;\n        }\n    }\n    if(min >= 8) throw;\n    return min;\n}\n\nint main(){\n    int n;\n    char buf[16];\n    while(fgets(buf,sizeof(buf),stdin)){\n        if(buf[0] == '0') break;\n        sscanf(buf+1,\"%x\",&n);\n        int i = solve((n>>16)&0xff,(n>>8)&0xff,n&0xff);\n        printf(\"%s\\n\", t[i]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n\nusing namespace std;\n\nvoid DevideColor(string, int&, int&, int&);\nint Atoi16(char);\ndouble Calculate(int, int, int, int, int, int);\n\nint main(){\n  int i, Red, Green, Blue;\n  double min, font[8];\n  string Color, StrongColor;\n  string color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\"yellow\", \"white\"};\n\n  while(1){\n    cin >> Color;\n    if(Color == \"0\") break;\n\n    DevideColor(Color, Red, Green, Blue);\n\n    font[0] = Calculate(Red, Green, Blue, 0, 0, 0);\n    font[1] = Calculate(Red, Green, Blue, 0, 0, 255);\n    font[2] = Calculate(Red, Green, Blue, 0, 255, 0);\n    font[3] = Calculate(Red, Green, Blue, 0, 255, 255);\n    font[4] = Calculate(Red, Green, Blue, 255, 0, 0);\n    font[5] = Calculate(Red, Green, Blue, 255, 0, 255);\n    font[6] = Calculate(Red, Green, Blue, 255, 255, 0);\n    font[7] = Calculate(Red, Green, Blue, 255, 255, 255);\n\n    min = font[0];\n    StrongColor = color[0];\n\n    for(i=1; i<8; ++i){\n      if(font[i] < min){\n        min = font[i];\n        StrongColor = color[i];\n      }\n    }\n\n    cout << StrongColor << endl;\n  }\n\n  return 0;\n\n}\n\nvoid DevideColor(string s, int& r, int& g, int& b){\n  string R, G, B;\n  copy(s.begin()+1, s.begin()+3, back_inserter(R));\n  copy(s.begin()+3, s.begin()+5, back_inserter(G));\n  copy(s.begin()+5, s.end(), back_inserter(B));\n  r = Atoi16(R[0])*16 + Atoi16(R[1]);\n  g = Atoi16(G[0])*16 + Atoi16(G[1]);\n  b = Atoi16(B[0])*16 + Atoi16(B[1]);\n}\n\nint Atoi16(char c){\n  int x;\n  if(c >= '0' && c <= '9')\n    x = c - 48;\n  else\n    x = c - 87;\n  return x;\n}\n\ndouble Calculate(int r, int g, int b, int _r, int _g, int _b){\n  int R, G, B;\n  R = r - _r;\n  G = g - _g;\n  B = b - _b;\n  return sqrt(R*R + G*G + B*B);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <cmath>\nusing namespace std;\n\nint R,G,B;\nvoid solve() {\n  string color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  int icolor[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n  int nearest=0,dist,mindist=1000000;\n  for(int i=0;i<8;i++) {\n    dist = sqrt( (R-icolor[i][0])*(R-icolor[i][0]) + (G-icolor[i][1])*(G-icolor[i][1]) + (B-icolor[i][2])*(B-icolor[i][2]));\n    if(dist < mindist) {\n      mindist = dist;\n      nearest = i;\n    }\n  }\n  cout << color[nearest] << endl;\n}\n\nint main() {\n  string str;\n  while(getline(cin,str)) {\n    if(str == \"0\") break;\n    R = strtol(str.substr(1,2).c_str(),NULL,16);\n    G = strtol(str.substr(3,2).c_str(),NULL,16);\n    B = strtol(str.substr(5,2).c_str(),NULL,16);\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#define w 15*16+15\nusing namespace std;\nint fld[8][3]={0,0,0,0,0,w,0,w,\n\t0,0,w,w,w,0,0\n\t,w,0,w,w,w,0,w,w,w};\nchar* col[]={\"black\",\n\t\"blue\",\"lime\",\"aqua\",\n\t\"red\",\"fuchsia\",\n\t\"yellow\",\"white\"};\nint main(){\n\tint temp,t,x,y,z,a[8],ren;\n\tchar s[10];\n\twhile(cin>>s,s[0]!='0'){\n\t\ttemp=100000000;\n\t\tfor(int i=1;i<8;i++){\n\t\t\tif(s[i]>'9')\n\t\t\ta[i-1]=9+s[i]-'a';\n\t\t\telse a[i-1]=s[i]-'0';\n\t\t}\n\t\tfor(int i=0;i<8;i++){\n\t\t\tx=a[0]*16+a[1]-fld[i][0];\n\t\t\ty=a[2]*16+a[3]-fld[i][1];\n\t\t\tz=a[4]*16+a[5]-fld[i][2];\n\t\t\tren=x*x+y*y+z*z;\n\t\t\tif(ren<temp){\n\t\t\t\tt=i;\n\t\t\t\ttemp=ren;\n\t\t\t}\n\t\t}cout<<col[t]<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing P = pair<int, int>;\n\nusing T = tuple<double, double, double>;\n\nint f(char c) {\n    if (c < 'A') return (c - '0');\n    else return (c - 'a') + 10;\n}\n\nint main() {\n    string name[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n    T color[8];\n    color[0] = T(0, 0, 0);\n    color[1] = T(0, 0, 255);\n    color[2] = T(0, 255, 0);\n    color[3] = T(0, 255, 255);\n    color[4] = T(255, 0, 0);\n    color[5] = T(255, 0, 255);\n    color[6] = T(255, 255, 0);\n    color[7] = T(255, 255, 255);\n    string s;\n    while (cin >> s && s != \"0\") {\n        double r = 0, g = 0, b = 0;\n        r = 16 * f(s[1]) + f(s[2]);\n        g = 16 * f(s[3]) + f(s[4]);\n        b = 16 * f(s[5]) + f(s[6]);\n\n        string ans;\n        double mind = 1001001;\n        for (int i = 0; i < 8; i++) {\n            double t = pow(get<0>(color[i]) - r, 2) + pow(get<1>(color[i]) - g, 2) + pow(get<2>(color[i]) - b, 2);\n            double diff = sqrt(t);\n            if (mind > diff) {\n                mind = diff;\n                ans = name[i];\n            }\n        }\n        cout << ans << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<map>\nusing namespace std;\nint main() {\n\tmap <char, int>b;\n\tb.insert(map<char, int>::value_type('0', 0));\n\tb.insert(map<char, int>::value_type('1', 1));\n\tb.insert(map<char, int>::value_type('2', 2));\n\tb.insert(map<char, int>::value_type('3', 3));\n\tb.insert(map<char, int>::value_type('4', 4));\n\tb.insert(map<char, int>::value_type('5', 5));\n\tb.insert(map<char, int>::value_type('6', 6));\n\tb.insert(map<char, int>::value_type('7', 7));\n\tb.insert(map<char, int>::value_type('8', 8));\n\tb.insert(map<char, int>::value_type('9', 9));\n\tb.insert(map<char, int>::value_type('a', 10));\n\tb.insert(map<char, int>::value_type('b', 11));\n\tb.insert(map<char, int>::value_type('c', 12));\n\tb.insert(map<char, int>::value_type('d', 13));\n\tb.insert(map<char, int>::value_type('e', 14));\n\tb.insert(map<char, int>::value_type('f', 15));\n\tstring d[8] = { \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\n\tint e[8][3] = { {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255}, {255,255,0},{255,255,255} };\n\tstring a;\n\twhile (cin >> a&&a != \"0\") {\n\t\tint sa = 10000, t[3];\n\t\tstring iro;\n\t\tfor (int i = 1; i < 7; i += 2) {\n\t\t\tchar f = a[i], g = a[i + 1];\n\t\t\tt[(i - 1) / 2] = b[f]*16 + b[g];\n\t\t}\n\t\tfor (int i = 7; i >= 0; i--) {\n\t\t\tint h = sqrt(pow((e[i][0] - t[0]), 2) + pow((e[i][1] - t[1]), 2) + pow((e[i][2] - t[2]), 2));\n\t\t\tif (h <= sa) {\n\t\t\t\tsa = h;\n\t\t\t\tiro = d[i];\n\t\t\t}\n\t\t}\n\t\tcout << iro << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int sixteen[200]={};\n    for(int i=0;i<10;i++)sixteen[i]=i;\n    for(int i=0;i<6;i++)sixteen['a'-'0'+i]=10+i;\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=sixteen[str[1+2*i]-'0']*16+sixteen[str[2+2*i]-'0'];\n        int ans[8]={};\n        for(int i=0;i<8;i++){\n            for(int j=0;j<3;j++)ans[i]+=(num[j]-colornum[i][j])*(num[j]-colornum[i][j]);\n            ans[i]=sqrt(ans[i]);\n        }\n        int co=0;\n        for(int i=1;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nchar l[6];\nstring s;\n\nstring color() {\n\tfor (int i = 0; i < 6; i++) {\n\t\tl[i] = s[i + 1];\n\t}\n\tint r, g, b;\n\tint z[6];\n\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (l[i] == '0') {\n\t\t\tz[i] = 0;\n\t\t}\n\t\telse if (l[i] == '1') {\n\t\t\tz[i] = 1;\n\t\t}\n\t\telse if (l[i] == '2') {\n\t\t\tz[i] = 2;\n\t\t}\n\t\telse if (l[i] == '3') {\n\t\t\tz[i] = 3;\n\t\t}\n\t\telse if (l[i] == '4') {\n\t\t\tz[i] = 4;\n\t\t}\n\t\telse if (l[i] == '5') {\n\t\t\tz[i] = 5;\n\t\t}\n\t\telse if (l[i] == '6') {\n\t\t\tz[i] = 6;\n\t\t}\n\t\telse if (l[i] == '7') {\n\t\t\tz[i] = 7;\n\t\t}\n\t\telse if (l[i] == '8') {\n\t\t\tz[i] = 8;\n\t\t}\n\t\telse if (l[i] == '9') {\n\t\t\tz[i] = 9;\n\t\t}\n\t\telse if (l[i] == 'a') {\n\t\t\tz[i] = 10;\n\t\t}\n\t\telse if (l[i] == 'b') {\n\t\t\tz[i] = 11;\n\t\t}\n\t\telse if (l[i] == 'c') {\n\t\t\tz[i] = 12;\n\t\t}\n\t\telse if (l[i] == 'd') {\n\t\t\tz[i] = 13;\n\t\t}\n\t\telse if (l[i] == 'e') {\n\t\t\tz[i] = 14;\n\t\t}\n\t\telse if (l[i] == 'f') {\n\t\t\tz[i] = 15;\n\t\t}\n\t}\n\n\tr = z[0] * 16 + z[1];\n\tg = z[2] * 16 + z[3];\n\tb = z[4] * 16 + z[5];\n\n\t//ff == 255;\n\tif (r <= 128) {\n\t\t//black,blue,lime,aqua\n\t\tif (g <= 128) {\n\t\t\t//black,blue\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"black\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"blue\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//lime,aqua\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"lime\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"aqua\";\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t//red,fuchsia,yellow,white\n\t\tif (g <= 128) {\n\t\t\t//red,fu\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"red\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"fuchsia\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (b <= 128) {\n\t\t\t\treturn \"yellow\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn \"white\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tstring g[100];\n\tint x;\n\tfor (int i = 0;; i++){\n\t\tcin >> s;\n\t\tif (s == \"0\") {\n\t\t\tx = i;\n\t\t\tbreak;\n\t\t}\n\t\tg[i] = color();\n\t}\n\tfor (int i = 0; i < x; i++){\n\t\tcout << g[i] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nconst int INF = 1 << 28;\n\nint main ()\n{\n    int R[] = {0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff};\n    int G[] = {0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff};\n    int B[] = {0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff};\n    string color[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\n    string str;\n    while (cin >> str, str != \"0\") {\n        int r = (str[1] - '0') * 16 + (str[2] - '0');\n        int g = (str[3] - '0') * 16 + (str[4] - '0');\n        int b = (str[5] - '0') * 16 + (str[6] - '0');\n\n        int D = INF;\n        string res;\n        for (int i = 0; i < 8; i++) {\n            int d = ((R[i] - r) * (R[i] - r) + (G[i] - g) * (G[i] - g) + (B[i] - b) * (B[i] - b));\n            if (d < D) {\n                res = color[i];\n                D = d;\n            }\n        }\n        cout << res << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nconst int INF = 1 << 28;\n\nint main ()\n{\n    int R[] = {0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff};\n    int G[] = {0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff};\n    int B[] = {0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff};\n    string color[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\n    string str;\n    while (cin >> str, str != \"0\") {\n        int r = (str[1] - '0') * 16 + (str[2] - '0');\n        int g = (str[3] - '0') * 16 + (str[4] - '0');\n        int b = (str[5] - '0') * 16 + (str[6] - '0');\n\n        double D = INF;\n        string res;\n        for (int i = 0; i < 8; i++) {\n            double d = sqrt((R[i] - r) * (R[i] - r) + (G[i] - g) * (G[i] - g) + (B[i] - b) * (B[i] - b));\n            if (d < D) {\n                res = color[i];\n                D = d;\n            }\n        }\n        cout << res << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cmath>\n\nusing namespace std;\n\nstring Strength[8] = {\"000000\",\"0000ff\",\"00ff00\",\"00ffff\",\n\t\t      \"ff0000\",\"ff00ff\",\"ffff00\",\"ffffff\"};\n\nstring Color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\n\t\t   \"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint x_t(char c){\n  if(islower(c)) return 10 + (c - 'a');\n  return c - '0';\n}\n\nint change(string s){\n  return x_t(s[0])*16 + x_t(s[1]);\n}\n\nstring solve(string R,string G,string B){\n  int pos,Min = (1<<29),d;\n  int r = change(R),g = change(G),b = change(B);\n  string rr,gg,bb;\n\n  for(int i = 0 ; i < 8 ; i++){\n    rr = Strength[i].substr(0,2);\n    gg = Strength[i].substr(2,2);\n    bb = Strength[i].substr(4,2);\n \n    int rk = change(rr) ,gk = change(gg) ,bk = change(bb);    \n    d = sqrt((r-rk)*(r-rk) + (g-gk)*(g-gk) + (b-bk)*(b-bk));\n\n    if(d < Min){\n      Min = d;\n      pos = i;\n    }\n  }\n\n  return Color[pos];\n}\n\nint main(){\n  string str;\n\n  while(cin >> str ,str != \"0\"){\n    string R,G,B;\n\n    R = str.substr(1,2);\n    G = str.substr(3,2);\n    B = str.substr(5,2);\n\n    cout << solve(R,G,B) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nint x(char c){\n\tif(isdigit(c))return c-'0';\n\telse return c-'a'+10;\n}\n\nstring color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint main() {\n\tstring str;\n\twhile(cin>>str,str!=\"0\"){\n\t\tint r,g,b;\n\t\tr=x(str[1])*16+x(str[2]);\n\t\tg=x(str[3])*16+x(str[4]);\n\t\tb=x(str[5])*16+x(str[6]);\n//cout<<r<<\" \"<<g<<\" \"<<b<<endl;\n\t\tint i;\n\t\tstring res=\"\";\n\t\tint re=1000000000;\n\t\tfor(i=0;i<8;i++){\n\t\t\tif(re>(r-(i&4?255:0))*(r-(i&4?255:0))+(g-(i&2?255:0))*(g-(i&2?255:0))+(b-(i&1?255:0))*(b-(i&1?255:0))){\n\t\t\t\tres=color[i];\n\t\t\t\tre=(r-(i&4?255:0))*(r-(i&4?255:0))+(g-(i&2?255:0))*(g-(i&2?255:0))+(b-(i&1?255:0))*(b-(i&1?255:0));\n\t\t\t}\n\t\t}\n\t\tcout<<res<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstdlib>\nusing namespace std;\n\nconst int INF = 1 << 30;\n\nconst int color[8][3] = { {  0,   0,   0},\n\t\t\t  {  0,   0, 255},\n\t\t\t  {  0, 255,   0},\n\t\t\t  {  0, 255, 255},\n\t\t\t  {255,   0,   0},\n\t\t\t  {255,   0, 255},\n\t\t\t  {255, 255,   0},\n\t\t\t  {255, 255, 255} };\nconst string name[] = {\"black\", \"blue\", \"lime\", \"aqua\",\n\t\t       \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\nint main()\n{\n  string RGB;\n  while (cin >> RGB) {\n    if (RGB == \"0\")\n      break;\n\n    int R = strtol(RGB.substr(1, 2).c_str(), NULL, 16);\n    int G = strtol(RGB.substr(3, 2).c_str(), NULL, 16);\n    int B = strtol(RGB.substr(5, 2).c_str(), NULL, 16);\n\n    int d = INF, index = 0;\n    for (int i = 0; i < 8; ++i) {\n      int dd = (R-color[i][0]) * (R-color[i][0])\n\t+ (G-color[i][1]) * (G-color[i][1])\n\t+ (B-color[i][2]) * (B-color[i][2]);\n\n      if (d > dd) {\n\td = dd;\n\tindex = i;\n      }\n    }\n    cout << name[index] << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nstring in;\nconst string name[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nbool is_digit(char c) { return '0' <= c && c <= '9'; }\nint c2i(char c) { return c - '0'; }\n\nstring solve() {\n  in.erase(0, 1);\n  int my[3];\n  rep (i,3) my[i] = 0;\n  rep (i,3) {\n    if (is_digit(in[i*2])) {\n      my[i] = c2i(in[i*2]) * 16;\n    } else {\n      my[i] = (10 + (in[i*2] - 'a')) * 16;\n    }\n    \n    if (is_digit(in[i*2+1])) {\n      my[i] += c2i(in[i*2+1]);\n    } else {\n      my[i] += (10 + (in[i*2+1] - 'a'));\n    }\n  }\n  \n  double dk = double(1 << 28);\n  int l = -1;\n  rep (S,8) {\n    int ar[3], temp = 0;\n    rep (i,3) ar[2-i] = (S >> i & 1) ? 255 : 0 ;\n    rep (i,3) {\n      temp += (ar[i] - my[i]) * (ar[i] - my[i]);\n    }\n    double d = sqrt(double(temp));\n    if (dk > d) {\n      dk = d;\n      l = S;\n    }\n  }\n  return name[l];\n}\n\nint main() {\n  while (cin >> in) {\n    if (in == \"0\") break;\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\n\nusing namespace std;\n\nint main(){\n\n\tstring inp;\n\tstring base = (\"0123456789abcdef\" );\n\tstring scol[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\tint icol[8][3] = { { 0, 0, 0 }, { 0, 0, 256 }, { 0, 256, 0 }, { 0, 256, 256 }, { 256, 0, 0 }, { 256, 0, 256 }, { 256, 256, 0 }, { 256, 256, 256 } };\n\tint r, g, b;\n\tint ans;\n\tdouble ansnum;\n\n\twhile (1){\n\n\t\tcin >> inp;\n\t\tif (inp == \"0\") break;\n\n\t\tr = base.find(inp[2]) * 1 + base.find(inp[1]) * 16;\n\t\tg = base.find(inp[4]) * 1 + base.find(inp[3]) * 16;\n\t\tb = base.find(inp[6]) * 1 + base.find(inp[5]) * 16;\n\n\t\tans = 0;\n\t\tansnum = sqrt(pow(r - icol[0][0], 2.0) + pow(g - icol[0][1], 2.0) + pow(b - icol[0][2], 2.0));\n\t\tfor (int i = 1; i < 8; i++){\n\t\t\tif (ansnum>sqrt(pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0))){\n\t\t\t\tans = i;\n\t\t\t\tansnum = sqrt(pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0));\n\t\t\t}\n\t\t}\n\n\t\tcout << scol[ans] << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <climits>\nusing namespace std;\n\nconst static int COLOR_NAME_LENGTH = 7;\nconst static int BASE_COLOR_NUM = 8;\nconst static int MASK = 0x0000ff;\n\nconst int base_colors[ BASE_COLOR_NUM ] = {\n  0x000000,\n  0x0000ff,\n  0x00ff00,\n  0x00ffff,\n  0xff0000,\n  0xff00ff,\n  0xffff00,\n  0xffffff\n};\n\nconst char *base_color_names[ BASE_COLOR_NUM ] = {\n  \"black\",\n  \"blue\",\n  \"lime\",\n  \"aqua\",\n  \"red\",\n  \"fuchsia\",\n  \"yellow\",\n  \"white\"\n};\n\nint diffsq( const int color1, const int color2 ) {\n  int c1 = color1;\n  int c2 = color2;\n  int rdiff = ( ( c1 >> 16 ) & MASK ) - ( ( c2 >> 16 ) & MASK );\n  int gdiff = ( ( c1 >>  8 ) & MASK ) - ( ( c2 >>  8 ) & MASK );\n  int bdiff = ( ( c1       ) & MASK ) - ( ( c2       ) & MASK );\n\n  return rdiff * rdiff + gdiff * gdiff + bdiff * bdiff;\n}\n\nint main() {\n\n  while( 1 ) {\n    char color_name[ COLOR_NAME_LENGTH + 1 ];\n    scanf( \"%s\", color_name );\n    if( color_name[ 0 ] == '0' ) {\n      return EXIT_SUCCESS;\n    }\n    for( int i = 1; i < COLOR_NAME_LENGTH + 1; i++ )  {\n      color_name[ i - 1 ] = color_name[ i ];\n    }\n    int color;\n    int minidx = 0;\n    int mindiff = INT_MAX;\n    sscanf( color_name, \"%x\", &color );\n    for( int i = 0; i < BASE_COLOR_NUM; i++ ) {\n      int diff = diffsq( color, base_colors[ i ] );\n      if( diff < mindiff ) {\n        minidx = i;\n        mindiff =  diff;\n      }\n    }\n    printf( \"%s\\n\", base_color_names[ minidx ] );\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\nusing namespace std;\n\nint main(){\n  string s;\n  int color[][3] = {\n                    {0, 0, 0}, //black\n                    {0, 0, 0xff}, //blue\n                    {0, 0xff, 0}, //lime\n                    {0, 0xff, 0xff}, //aqua\n                    {0xff, 0, 0}, //red\n                    {0xff, 0, 0xff}, //fuchsia\n                    {0xff, 0xff, 0}, //yellow\n                    {0xff, 0xff, 0xff} //white\n  };\n  string ans[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n  while(std::cin >> s, s != \"0\"){\n    double min_val = 1e9;\n    int num = -1;\n    for (int i = 0; i < 8; i++) {\n      double val = 0;\n      unsigned int tmp;\n      string type;\n      // type = \"0x\" + s.substr(1, 2);\n      type = s.substr(1, 2);\n      // std::cout << type << std::endl;\n      // sscanf(\"0x\" + s.substr(), \"%x\", tmp);\n      sscanf(type.c_str(), \"%x\", &tmp);\n      // std::cout << type << std::endl;\n      val += (color[i][0] - tmp)*(color[i][0] - tmp);\n      \n      type = \"0x\" + s.substr(3, 2);\n      sscanf(type.c_str(), \"%x\", &tmp);\n      val += (color[i][1] - tmp)*(color[i][1] - tmp);\n      \n      type = \"0x\" + s.substr(5, 2);\n      sscanf(type.c_str(), \"%x\", &tmp);\n      val += (color[i][2] - tmp)*(color[i][2] - tmp);\n      if(min_val > val){\n        min_val = val;\n        num = i;\n      }\n    }\n    std::cout << ans[num] << std::endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <cstdlib>\nusing namespace std;\nstring color[] = {\"black\", \"blue\", \"lime\", \"aqua\",\n    \"red\", \"fuchsia\", \"yellow\", \"white\"};\nint nums[][3] = {{0,0,0}, {0,0,255}, {0,255,0}, {0,255,255},\n    {255,0,0}, {255,0,255}, {255,255,0}, {255,255,255}};\n\nint convert(string str) {\n    int res = 0;\n    if ('0'<=str[0]&&str[0]<='9') {\n        res += (str[0]-'0') * 16;\n    } else if ('a'<=str[0]&&str[0]<='f') {\n        res += (str[0]-'a'+10) * 16;\n    }\n    if ('0'<=str[1]&&str[1]<='9') {\n        res += (str[1]-'0');\n    } else if ('a'<=str[1]&&str[1]<='f') {\n        res += (str[1]-'a'+10);\n    }\n    return res;\n}\n\nint main() {\n    string str;\n    while (cin >> str) {\n        if (str == \"0\") break;\n        double d = 10000000.0;\n        string res;\n        int r = convert(str.substr(1,2)), g = convert(str.substr(3,2)), b = convert(str.substr(5,2));\n        for (int i=0; i<8; i++) {\n            double tmp = sqrt(pow(r-nums[i][0], 2)+pow(g-nums[i][1], 2)+pow(b-nums[i][2], 2));\n            if (tmp < d) {\n                d = tmp;\n                res = color[i];\n            }\n        }\n        cout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#line 0 \"cmacro.cpp\"\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define in ,\n#define esc_paren(...) __VA_ARGS__\n#define pp_empty(...)\n#define pp_cat_i(x, y) x ## y\n#define pp_cat(x, y) pp_cat_i(x, y)\n\n#define pp_inc0 1\n#define pp_inc1 2\n#define pp_inc2 3\n#define pp_inc3 4\n#define pp_inc4 5\n#define pp_inc5 6\n#define pp_inc6 7\n#define pp_inc7 8\n#define pp_inc8 9\n#define pp_inc(i) pp_cat(pp_inc, i)\n\n#define pp_arg10(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, ...) _9\n#define pp_has_comma(...) pp_arg10(__VA_ARGS__, 1, 1, 1, 1, 1, 1, 1, 1, 0)\n#define pp_trigger_paren(...) ,\n#define pp_is_empty(...) \\\n  pp_is_empty1( \\\n      pp_has_comma(__VA_ARGS__), \\\n      pp_has_comma(pp_trigger_paren __VA_ARGS__), \\\n      pp_has_comma(__VA_ARGS__()), \\\n      pp_has_comma(pp_trigger_paren __VA_ARGS__()) \\\n      ) \n#define pp_paste5(_0, _1, _2, _3, _4) _0 ## _1 ## _2 ## _3 ## _4\n#define pp_is_empty1(_0, _1, _2, _3) pp_has_comma(pp_paste5(pp_is_empty_case_, _0, _1, _2, _3))\n#define pp_is_empty_case_0001 ,\n\n#define pp_is_one(...) pp_is_one_(__VA_ARGS__, pp_one_seq)\n#define pp_is_one_(...) pp_is_one_n(__VA_ARGS__)\n#define pp_is_one_n(_1,_2,_3,_4,_5,_6,_7,_8,_9,_10, N, ...) N\n#define pp_one_seq 0,0,0,0,0,0,0,0,0,1,0\n\n#define pp_narg(...) \\\n         pp_narg_(__VA_ARGS__, pp_narg_seq)\n#define pp_narg_(...) \\\n         pp_narg_n(__VA_ARGS__)\n#define pp_narg_n( \\\n          _1, _2, _3, _4, _5, _6, _7, _8, _9,_10, \\\n         _11,_12,_13,_14,_15,_16,_17,_18,_19,_20, \\\n         _21,_22,_23,_24,_25,_26,_27,_28,_29,_30, \\\n         _31,_32,_33,_34,_35,_36,_37,_38,_39,_40, \\\n         _41,_42,_43,_44,_45,_46,_47,_48,_49,_50, \\\n         _51,_52,_53,_54,_55,_56,_57,_58,_59,_60, \\\n         _61,_62,_63,n,...) n\n#define pp_narg_seq \\\n         63,62,61,60, \\\n         59,58,57,56,55,54,53,52,51,50, \\\n         49,48,47,46,45,44,43,42,41,40, \\\n         39,38,37,36,35,34,33,32,31,30, \\\n         29,28,27,26,25,24,23,22,21,20, \\\n         19,18,17,16,15,14,13,12,11,10, \\\n          9, 8, 7, 6, 5, 4, 3, 2, 1, 0\n\n#define pp_if_0(x, y) y\n#define pp_if_1(x, y) x\n#define pp_if(cond, x, y) pp_cat(pp_if_, cond)(x, y)\n\n#define pp_foreach_i9(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i8(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i7(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i6(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i5(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i4(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i3(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i2(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i1(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i0(i, f, x, ...) f(x) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach_i(i, f, ...) pp_if(pp_is_empty(__VA_ARGS__), pp_empty, pp_cat(pp_foreach_i, i))(pp_inc(i), f, __VA_ARGS__)\n#define pp_foreach(f, ...) pp_foreach_i(0, f, __VA_ARGS__)\n\n\ntypedef long long ll;\n#define down_queue(x) priority_queue<x>\n#define up_queue(x) priority_queue<x, vector<x>, greater<x>>\n#define all(x) x.begin(), x.end()\n#define split_str(str, sp_word) istringstream stream(str); string res; for(int cnt = 0; getline(stream,res,sp_word); cnt++)\n#define digit(x) ((int)log10((double)(x)) + 1)\n#define mp(x,y) make_pair(x,y)\n#define pb(x) push_back(x)\n#define pf(x) push_front(x)\n#define vec_cpy(to,from) copy(all(to),back_inserter(from))\n#define ary_cpy(to,from) memcpy(to, from, sizeof(from))\n#define MOD 1000000007\n#define INF 999999999\n\n\ntemplate <typename T>\nstruct RepIterator {\n  T i;\n  RepIterator() : i(0) {}\n  RepIterator(T n) : i(n) {}\n  bool operator ==(const RepIterator<T>& rhs) { return i == rhs.i; }\n  bool operator !=(const RepIterator<T>& rhs) { return i != rhs.i; }\n  T operator *() { return i; }\n  RepIterator<T> operator ++() {i++; return *this; };\n};\ntemplate <typename T>\nstruct RepLoop {\n  T i;\n  RepLoop(T n) : i(n) {}\n  RepIterator<T> begin() { return RepIterator<T>(); }\n  RepIterator<T> end() { return RepIterator<T>(i); }\n};\n\ntemplate <typename T>\nstruct rep_range {\n  static T range(T v) {\n    return v;\n  }\n};\n\n#define def_range(t) \\\n  template <> \\\n  struct rep_range<t> { \\\n    static RepLoop<t> range(t n) { \\\n      return RepLoop<t>(n); \\\n    } \\\n  };\ndef_range(int);\ndef_range(size_t);\n\n#define rep(...) rep1(rep2, (__VA_ARGS__))\n#define rep1(X, A) X A\n#define rep2(i, ...) pp_if(pp_is_one(__VA_ARGS__), rep_len1(i, __VA_ARGS__), rep3(i, __VA_ARGS__))\n#define rep_len1(i, end, ...) for (auto i : rep_range<decltype(end)>::range(end))\n#define rep3(i, iter, ...) rep4(rep5, (iter, i, esc_paren __VA_ARGS__))\n#define rep4(X, A) X A\n#define rep5(iter, ...) iter(__VA_ARGS__)\n\n#define up up_iter ,\n#define up_iter3(i, start, end) for (auto i = start; i < end; i++)\n#define up_iter4(i, start, end, up) for (auto i = start; i < end; i += up)\n#define up_iter(...) pp_cat(up_iter, pp_narg(__VA_ARGS__))(__VA_ARGS__)\n#define down down_iter ,\n#define down_iter2(i, end) for(auto i = end-1; i >= 0; i--)\n#define down_iter3(i, start, end) for (auto i = end-1; i >= start; i--)\n#define down_iter4(i, start, end, down) for (auto i = end-1; i >= start; i -= down)\n#define down_iter(...) pp_cat(down_iter, pp_narg(__VA_ARGS__))(__VA_ARGS__)\n\n\n#define pp_init2(cnt, body) struct _InitStruct ## cnt { _InitStruct ## cnt() { body } } _initstruct ## cnt;\n#define pp_init1(f, cnt, body) f(cnt, body)\n#define pp_init(body) pp_init1(pp_init2, __COUNTER__, body)\n\n#define init_array(arr, N, val) pp_init(rep (i in N) { arr[i] = val; })\n#define iota_array(arr, N, start) pp_init(rep (i in N) { arr[i] = start + i; })\n\n\n#define debug_var_elem(v) << #v << \"=\" << v << \" \"\n#ifdef DEBUG\n#define debug_echo(e) cout << \"L\" << __LINE__ << \": \" << e << endl\n#define debug_var(...) cout << \"L\" << __LINE__ << \": \" pp_foreach(debug_var_elem, __VA_ARGS__) << endl\n#define debug_time2(i, e) auto start ## i = clock(); e; auto end ## i = clock(); cout << \"L\" << __LINE__ << \": \" << (double)(end ## i - start ## i) << \"ms\" << endl;\n#define debug_time1(f, i, e) f(i, e)\n#define debug_time(e) debug_time1(debug_time2, __COUNTER__, e)\n#else\n#define debug_echo(e)\n#define debug_var(...)\n#define debug_time(e) e;\n#endif\n\n\n#define pp_gen_field(list) pp_gen_field1 list\n#define pp_gen_field1(name, val) decltype(val) name;\n#define pp_gen_init(list) pp_gen_init1 list\n#define pp_gen_init1(name, val) ,val\n#define pp_gen_find_set_wrap(ufnodename) ufnodename pp_gen_find_set\n#define pp_gen_find_set(list) pp_gen_find_set1 list\n#define pp_gen_find_set1(name, val) \\\n  find_set_ ## name(int x, decltype(val) v) { \\\n    if (nodes[x].parent == x) { \\\n      nodes[x].name = v; \\\n      return nodes[x]; \\\n    } else { \\\n      return nodes[x] = find_set_ ## name(nodes[x].parent, v); \\\n    } \\\n  }\n#define pp_gen_unite_set(list) pp_gen_unite_set1 list\n#define pp_gen_unite_set1(name, val) \\\n  if (nodes[x].name == val) { \\\n    find_set_ ## name(x, find(y).name); \\\n  } \\\n  if (nodes[y].name == val) { \\\n    find_set_ ## name(y, find(x).name); \\\n  }\n\n#define def_unionfind(ufname, ufnodename, ...) \\\n  struct ufnodename { \\\n    int parent; \\\n    pp_foreach(pp_gen_field, __VA_ARGS__) \\\n  }; \\\n  struct ufname { \\\n    vector<ufnodename> nodes; \\\n    vector<int> rank; \\\n    ufname(int n) : nodes(n+1), rank(n+1) { \\\n      rep (i in n) { \\\n        nodes[i] = ufnodename{i pp_foreach(pp_gen_init, __VA_ARGS__)}; \\\n        rank[i] = 0; \\\n      } \\\n    } \\\n    ufnodename find(int x) { \\\n      if (nodes[x].parent == x) { \\\n        return nodes[x]; \\\n      } else { \\\n        return nodes[x] = find(nodes[x].parent); \\\n      } \\\n    } \\\n    pp_foreach(pp_gen_find_set_wrap(ufnodename), __VA_ARGS__) \\\n    void unite(int x, int y) { \\\n      x = find(x).parent; \\\n      y = find(y).parent; \\\n      if (x == y) return; \\\n      if (rank[x] < rank[y]) { \\\n        pp_foreach(pp_gen_unite_set, __VA_ARGS__); \\\n        nodes[x].parent = y; \\\n      } else { \\\n        pp_foreach(pp_gen_unite_set, __VA_ARGS__); \\\n        nodes[y].parent = x; \\\n        if (rank[x] == rank[y]) rank[x]++; \\\n      } \\\n    } \\\n    bool same(int x, int y) { \\\n      return find(x).parent == find(y).parent; \\\n    } \\\n  }\n\n\nll gcd(ll a,ll b){while(b){ll tmp = a % b;a = b;b = tmp;}return a;}\nll lcm(ll a,ll b){return a / gcd(a,b) * b;}\nbool is_prime(ll n){switch(n){case 0:case 1: return false;case 2: return true;}if(n % 2 == 0) return false;for(ll i=3;i * i <= n; i += 2)if(n%i == 0) return false;return true;}\n\n#define def_varargs(name, f) \\\n  template<typename First> \\\n  inline First name(First first) { return first; } \\\n  template<typename First, typename... Rest> \\\n  inline First name(First first, Rest... rest) { return f(first, name(rest...)); }\n\n#line 1 \"procon.cpp\"\n\nint htoi(char h) {\n  if ('0' <= h && h <= '9') return h - '0';\n  else return h - 'a' + 10;\n}\n\nint dist(double r, double g, double b, double rk, double gk, double bk) {\n  return sqrt(pow(r-rk, 2.0) + pow(g-gk, 2.0) + pow(b-bk, 2.0));\n}\n\nint colors[][3] = {\n  {0, 0, 0},\n  {0, 0, 255},\n  {0, 255, 0},\n  {0, 255, 255},\n  {255, 0, 0},\n  {255, 0, 255},\n  {255, 255, 0},\n  {255, 255, 255}\n};\nstring names[] = {\n  \"black\",\n  \"blue\",\n  \"lime\",\n  \"aqua\",\n  \"red\",\n  \"fuchsia\",\n  \"yellow\",\n  \"white\"\n};\n\nint main() {\n  char c;\n  while (cin >> c && c != '0') {\n    char r1, r2, g1, g2, b1, b2; cin >> r1 >> r2 >> g1 >> g2 >> b1 >> b2;\n    int r = htoi(r1)*16 + htoi(r2);\n    int g = htoi(g1)*16 + htoi(g2);\n    int b = htoi(b1)*16 + htoi(b2);\n    debug_var(r, g, b);\n    int ans = INF;\n    int ansi;\n    rep (i in 8) {\n      int rk = colors[i][0];\n      int gk = colors[i][1];\n      int bk = colors[i][2];\n      int d = dist(r, g, b, rk, gk, bk);\n      if (ans > d) {\n        ans = d;\n        ansi = i;\n      }\n    }\n    cout << names[ansi] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\nstring near(int R, int G, int B);\n\ndouble dist(int R1, int G1, int B1, int R2, int G2, int B2);\n\nint main(void){\n  map<char,int> d;\n  for(int i=0;i<10;i++){\n    d[i+'0']=i;\n  }\n  for(int i=0;i<6;i++){\n    d[i+'a']=i+10;\n  }\n  string s;\n  int R,G,B;\n  while(1){\n    cin>>s;\n    if(s==\"0\")break;\n    R=d[s[1]]*16+d[s[2]];\n    G=d[s[3]]*16+d[s[4]];\n    B=d[s[5]]*16+d[s[6]];\n    cout<<near(R,G,B)<<endl;\n  }\n  return 0;\n}\n\nstring near(int R, int G, int B){\n  double distance=10000;\n  string color=\"hoge\";\n  if(dist(R,G,B,0,0,0)<distance){\n    color=\"black\";\n    distance=dist(R,G,B,0,0,0);\n  }\n  if(dist(R,G,B,0,0,255)<distance){\n    color=\"blue\";\n    distance=dist(R,G,B,0,0,255);\n  }\n  if(dist(R,G,B,0,255,0)<distance){\n    color=\"lime\";\n    distance=dist(R,G,B,0,255,0);\n  }\n  if(dist(R,G,B,0,255,255)<distance){\n    color=\"aqua\";\n    distance=dist(R,G,B,0,255,255);\n  }\n  if(dist(R,G,B,255,0,0)<distance){\n    color=\"red\";\n    distance=dist(R,G,B,255,0,0);\n  }\n  if(dist(R,G,B,255,0,255)<distance){\n    color=\"fuchsia\";\n    distance=dist(R,G,B,255,0,255);\n  }\n  if(dist(R,G,B,255,255,0)<distance){\n    color=\"yellow\";\n    distance=dist(R,G,B,255,255,0);\n  }\n  if(dist(R,G,B,255,255,255)<distance){\n    color=\"white\";\n    distance=dist(R,G,B,255,255,255);\n  }\n  return color;\n}\n\ndouble dist(int R1, int G1, int B1, int R2, int G2, int B2){\n  return sqrt((R1-R2)*(R1-R2)+(G1-G2)*(G1-G2)+(B1-B2)*(B1-B2));\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\nusing namespace std;\n\nconst int INF = 1e9;\ntypedef long long ll;\n\nstruct Color{\n  string name;\n  int R, G, B;\n};\n\nColor list[8];\n\nvoid init(){\n  list[0].name = \"black\";   list[0].R = 0x00; list[0].G = 0x00; list[0].B = 0x00;\n  list[1].name = \"blue\";    list[1].R = 0x00; list[1].G = 0x00; list[1].B = 0xff;\n  list[2].name = \"lime\";    list[2].R = 0x00; list[2].G = 0xff; list[2].B = 0x00;\n  list[3].name = \"aqua\";    list[3].R = 0x00; list[3].G = 0xff; list[3].B = 0xff;\n  list[4].name = \"red\";     list[4].R = 0xff; list[4].G = 0x00; list[4].B = 0x00;\n  list[5].name = \"fuchsia\"; list[5].R = 0xff; list[5].G = 0x00; list[5].B = 0xff;\n  list[6].name = \"yellow\";  list[6].R = 0xff; list[6].G = 0xff; list[6].B = 0x00;\n  list[7].name = \"white\";   list[7].R = 0xff; list[7].G = 0xff; list[7].B = 0xff;\n}\n\nint main(void){\n  init();\n  string colorcode;\n  while(cin >> colorcode && colorcode != \"0\"){\n    int r = stoi(string(colorcode, 1, 2), nullptr, 16);\n    int g = stoi(string(colorcode, 3, 2), nullptr, 16);\n    int b = stoi(string(colorcode, 5, 2), nullptr, 16);\n    int n, mind = INF;\n    for(int i = 0; i < 8; i++){\n      int d = (r - list[i].R) * (r - list[i].R) + (g - list[i].G) * (g - list[i].G) + (b - list[i].B) * (b - list[i].B);\n      if(d < mind){\n        mind = d;\n        n = i;\n      }\n    }\n    cout << list[n].name << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\n\nint h(string s){\n\tint ret = 0;\n\tint src = 1;\n\tfor(int i=s.length()-1;i>=0;i--){\n\t\tret += (s[i]>'9'?s[i]-'a'+10:s[i]-'0')*src;\n\t\tsrc *= 16;\n\t}\n\treturn ret;\n}\n\ndouble f(string a,string b){\t\n\tstring tr,tg,tb;\n\tstring tr2,tg2,tb2;\n\ttr = a.substr(1,2);\n\ttg = a.substr(3,2);\n\ttb = a.substr(5,2);\n\ttr2 = b.substr(1,2);\n\ttg2 = b.substr(3,2);\n\ttb2 = b.substr(5,2);\n\treturn sqrt(\n\t\t(h(tr)-h(tr2))*(h(tr)-h(tr2)) +\n\t\t(h(tg)-h(tg2))*(h(tg)-h(tg2)) +\n\t\t(h(tb)-h(tb2))*(h(tb)-h(tb2))\n\t);\n}\nint main(){\n\tdouble MIN;\n\tstring ret;\n\t\n\tstring rgb;\n\twhile(cin >> rgb && rgb[0] != '0'){\n\t\tMIN = (1<<21);\n\t\tif(MIN >     f(rgb,\"#000000\")){\n\t\t\tMIN = f(rgb,\"#000000\");\n\t\t\tret = \"black\";\n\t\t}\n\t\tif(MIN >     f(rgb,\"#0000ff\")){\n\t\t\tMIN = f(rgb,\"#0000ff\");\n\t\t\tret = \"blue\";\n\t\t}\n\t\tif(MIN >     f(rgb,\"#00ff00\")){\n\t\t\tMIN = f(rgb,\"#00ff00\");\n\t\t\tret = \"lime\";\n\t\t}\n\t\tif(MIN >     f(rgb,\"#00ffff\")){\n\t\t\tMIN = f(rgb,\"#00ffff\");\n\t\t\tret = \"aqua\";\n\t\t}\n\t\tif(MIN >     f(rgb,\"#ff0000\")){\n\t\t\tMIN = f(rgb,\"#ff0000\");\n\t\t\tret = \"red\";\n\t\t}\n\t\tif(MIN >     f(rgb,\"#ff00ff\")){\n\t\t\tMIN = f(rgb,\"#ff00ff\");\n\t\t\tret = \"fuchsia\";\n\t\t}\n\t\tif(MIN >     f(rgb,\"#ffff00\")){\n\t\t\tMIN = f(rgb,\"#ffff00\");\n\t\t\tret = \"yellow\";\n\t\t}\n\t\tif(MIN >     f(rgb,\"#ffffff\")){\n\t\t\tMIN = f(rgb,\"#ffffff\");\n\t\t\tret = \"white\";\n\t\t}\n\t\tcout << ret << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nint main(){\n\tstring str;\n\tstring ans[10];\n\tans[0]=\"black\";ans[1]=\"blue\";ans[2]=\"lime\";ans[3]=\"aqua\";ans[4]=\"red\";\n\tans[5]=\"fuchsia\";ans[6]=\"yellow\";ans[7]=\"white\";\n\twhile(true){\n\t\tcin >> str;\n\t\tif(str[0] == '0')break;\n\t\tint r[]={0,0,0,0,255,255,255,255};\n\t\tint g[]={0,0,255,255,0,0,255,255};\n\t\tint b[]={0,255,0,255,0,255,0,255};\n\t\tchar ch[]={\"0123456789abcdef\"};\n\t\tint best = -1;\n\t\tint x=10000000;\n\t\tint R=0,G=0,B=0;\n\t\t\n\t\tfor(int i = 0; i < 16; i++){\n\t\t\tif(str[1] == ch[i])R += i*16;\n\t\t\tif(str[2] == ch[i])R += i;\n\t\t}\n\t\tfor(int i = 0; i < 16; i++){\n\t\t\tif(str[3] == ch[i])G += i*16;\n\t\t\tif(str[4] == ch[i])G += i;\n\t\t}\n\t\tfor(int i = 0; i < 16; i++){\n\t\t\tif(str[5] == ch[i])B += i*16;\n\t\t\tif(str[6] == ch[i])B += i;\n\t\t}\n\t\t//cout << R << \":\"<< G <<\":\"<< B << endl;\n\t\tfor(int i = 0; i < 8; i++){\n\t\t\tint k = (R-r[i])*(R-r[i])+(G-g[i])*(G-g[i])+(B-b[i])*(B-b[i]);\n\t\t\tif(k < x){\n\t\t\t\tbest = i;\n\t\t\t\tx = k;\n\t\t\t}\n\t\t}\n\t\tcout << ans[best] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define it ::iterator\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double ESP=1e-10;\nusing namespace std;\nint a[8][3]={\n  {  0,  0,  0},\n  {  0,  0,256},\n  {  0,256,  0},\n  {  0,256,256},\n  {256,  0,  0},\n  {256,  0,256},\n  {256,256,  0},\n  {256,256,256}\n};\nstring out[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint main(){\n  string in;\n  while(cin>>in,in!=\"0\"){\n    int min=1e9;\n    int mini=1e9;\n    loop(i,1,7)in[i]-='0';\n    int b[3]={in[1]*16+in[2],in[3]*16+in[4],in[5]*16+in[6]};\n    rep(i,8){\n      double sum=0;\n      rep(j,3)sum+=pow(b[j]-a[i][j],2);\n      if(min>sum){min=sum;mini=i;}\n    }\n    cout<<out[mini]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\n\nint main(int argc, const char * argv[]) {\n    \n    while (true) {\n        string input;\n        cin >> input;\n        if(input == \"0\"){\n            break;\n        }\n\n        int red = stoi(input.substr(1,2), NULL, 16);\n        int green = stoi(input.substr(3,2), NULL, 16);\n        int blue = stoi(input.substr(5,2), NULL, 16);\n        \n        \n        red = (red < 128) ? 0 : 255;\n        green = (green < 128) ? 0 : 255;\n        blue = (blue < 128) ? 0 : 255;\n        \n        if(red == 0){\n            if(green == 0){\n                if(blue == 0){\n                    cout << \"black\" << endl;\n                }\n                else{\n                    cout << \"blue\" << endl;\n                }\n                \n            }\n            else{\n                if(blue == 0){\n                    cout << \"lime\" << endl;\n                }\n                else{\n                    cout << \"aqua\" << endl;\n                }\n            }\n        }\n        else{\n            if(green == 0){\n                if(blue == 0){\n                    cout << \"red\" << endl;\n                }\n                else{\n                    cout << \"fuchsia\" << endl;\n                }\n                \n            }\n            else{\n                if(blue == 0){\n                    cout << \"yellow\" << endl;\n                }\n                else{\n                    cout << \"white\" << endl;\n                }\n            }\n        }\n        \n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstdlib>\nusing namespace std;\n\nconst int MAX_C = 8;\n\nint main() {\n\tpair< int, string > colors[MAX_C] = {\n\t\tmake_pair< int, string >(0x000000, \"black\"),\n\t\tmake_pair< int, string >(0x0000ff, \"blue\"),\n\t\tmake_pair< int, string >(0x00ff00, \"lime\"),\n\t\tmake_pair< int, string >(0x00ffff, \"aqua\"),\n\t\tmake_pair< int, string >(0xff0000, \"red\"),\n\t\tmake_pair< int, string >(0xff00ff, \"fuchsia\"),\n\t\tmake_pair< int, string >(0xffff00, \"yellow\"),\n\t\tmake_pair< int, string >(0xffffff, \"white\")\n\t};\n\tstring color, cname;\n\tint r, g, b, _r, _g, _b, min, dist;\n\t\n\twhile(cin >> color, color != \"0\"){\n\t\tr = strtol(color.substr(1, 2).c_str(), NULL, 16);\n\t\tg = strtol(color.substr(3, 2).c_str(), NULL, 16);\n\t\tb = strtol(color.substr(5, 2).c_str(), NULL, 16);\n\t\t\n\t\tmin = ~(1 << 31);\n\t\tcname;\n\t\t\n\t\tfor(int i = 0; i < MAX_C; ++i){\n\t\t\t_r = (colors[i].first & 0xff0000) >> 16;\n\t\t\t_g = (colors[i].first & 0x00ff00) >> 8;\n\t\t\t_b = (colors[i].first & 0x0000ff);\n\t\t\t\n\t\t\tdist = (r - _r) * (r - _r) + (g - _g) * (g - _g) + (b - _b) * (b - _b);\n\t\t\t\n\t\t\tif(dist < min){\n\t\t\t\tmin = dist;\n\t\t\t\tcname = colors[i].second;\n\t\t\t}\n\t\t}\n\t\tcout << cname << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\n\nint base16(char c) {\n  if( 'a' <= c ) return c-'a'+10;\n  else return c-'0';\n}\n\nint main() {\n\n  string s;\n\n  int coltabel[8][3] = { { 0, 0, 0 }, { 0, 0, 256 }, { 0, 256, 0 },\n\t\t\t { 0, 256, 256 }, { 256, 0, 0 }, { 256, 0, 256 },\n\t\t\t { 256, 256, 0 }, { 256, 256, 256 } };\n\n  string nametable[8] = { \"black\", \"blue\", \"lime\", \"aqua\",\n\t\t\t \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\n  while(true) {\n\n    cin>>s;\n    if( s==\"0\" ) break;\n\n    int r,g,b;\n    r = base16(s[1])*16+base16(s[2]);\n    g = base16(s[3])*16+base16(s[4]);\n    b = base16(s[5])*16+base16(s[6]);\n\n    int res,tmp=256*256*3,t;\n\n    for(int i=0; i<8; i++) {\n      if( ( t = (r-coltabel[i][0])*(r-coltabel[i][0])\n\t  + (g-coltabel[i][1])*(g-coltabel[i][1])\n\t  + (b-coltabel[i][2])*(b-coltabel[i][2]) )\n\t  < tmp ) {\n\t//cout<<t<<\" \"<<i<<endl;\n\tres = i;\n\ttmp = t;\n      }\n    }\n\n    cout<<nametable[res]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n  \n// #define int long long\n#define pb push_back\n#define print(Target) cout << Target << '\\n'\n\n#define REP(i, n) for (int i = 0; i < (n); i++)\n#define REPS(i, a, n) for (int i = (a); i < (n); i++)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vii;\ntypedef pair<int, int> pii;\n\nbool is_uruu(int y) {return (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0));}\n\nstruct COL{\n  int n;\n  string name;\n};\n\nconst int c[8][3] = {{0, 0, 0}, {0, 0, 0xff}, {0, 0xff, 0}, {0, 0xff, 0xff}, {0xff, 0, 0}, {0xff, 0, 0xff}, {0xff, 0xff, 0}, {0xff, 0xff, 0xff}};\n\nconst string s[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nbool cmp(COL lhs, COL rhs)\n{\n  return (lhs.n < rhs.n);\n}\n\nsigned main()\n{\n  //ios::sync_with_stdio(false);\n  char sr[2], sg[2], sb[2];\n  char sh;\n  COL col[8];\n  \n  while (scanf(\"%1s\", &sh), sh != '0'){\n    scanf(\"%2s%2s%2s\", sr, sg, sb);\n    int r = strtol(sr, NULL, 16),\n        g = strtol(sg, NULL, 16),\n        b = strtol(sb, NULL, 16);\n\n    REP(i, 8){\n      col[i].n = sqrt((c[i][0] - r) * (c[i][0] - r) + (c[i][1] - g) * (c[i][1] - g) + (c[i][2] - b) * (c[i][2] - b));\n      col[i].name = s[i];\n    }\n\n    sort(col, col + 8, cmp);\n    print(col[0].name);\n  }\n\n  return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\nusing namespace std;\nint main(void){\n\tint color[8][3],i,j,k,rgb[3],min,c,d,r,g,b;\n\tcolor[0][0]=0; color[0][1]=0; color[0][2]=0;\n\tcolor[1][0]=0; color[1][1]=0; color[1][2]=255;\n\tcolor[2][0]=0; color[2][1]=255; color[2][2]=0;\n\tcolor[3][0]=0; color[3][1]=255; color[3][2]=255;\n\tcolor[4][0]=255; color[4][1]=0; color[4][2]=0;\n\tcolor[5][0]=255; color[5][1]=0; color[5][2]=255;\n\tcolor[6][0]=255; color[6][1]=255; color[6][2]=0;\n\tcolor[7][0]=255; color[7][1]=255; color[7][2]=255;\n\tchar a[]=\"0123456789abcdef\",s[8];\n\twhile(1){\n\t\tfor(i=0;i<3;i++)rgb[i]=0;\n\t\tcin>>s;\n\t\tif(s[0]=='0') break;\n\t\ti=0;\n\t\tfor(j=1;j<6;j+=2){\n\t\t\tfor(k=0;k<16;k++){\n\t\t\t\tif(s[j]==a[k]){\n\t\t\t\t\trgb[i]=rgb[i]+k*16;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(k=0;k<17;k++){\n\t\t\t\tif(s[j+1]==a[k]){\n\t\t\t\t\trgb[i]=rgb[i]+k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tmin=1000000;\n\t\tfor(i=0;i<8;i++){\n\t\t\tr=color[i][0]-rgb[0];\n\t\t\tg=color[i][1]-rgb[1];\n\t\t\tb=color[i][2]-rgb[2];\n\t\t\td=r*r+g*g+b*b;\n\t\t\tif(min>d){\n\t\t\t\tmin=d;\n\t\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tif(c==0) cout<<\"black\"<<endl;\n\t\tif(c==1) cout<<\"blue\"<<endl;\n\t\tif(c==2) cout<<\"lime\"<<endl;\n\t\tif(c==3) cout<<\"aqua\"<<endl;\n\t\tif(c==4) cout<<\"red\"<<endl;\n\t\tif(c==5) cout<<\"fuchsia\"<<endl;\n\t\tif(c==6) cout<<\"yellow\"<<endl;\n\t\tif(c==7) cout<<\"white\"<<endl;\n//\t\tprintf(\"%d %d %d\\n\",rgb[0],rgb[1],rgb[2]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\n\nusing namespace std;\n\nint main(){\n\n\tstring inp;\n\tstring base = (\"0123456789abcdef\" );\n\tstring scol[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\tint icol[8][3] = { { 0, 0, 0 }, { 0, 0, 256 }, { 0, 256, 0 }, { 0, 256, 256 }, { 256, 0, 0 }, { 256, 0, 256 }, { 256, 256, 0 }, { 256, 256, 256 } };\n\tint r, g, b;\n\tint ans;\n\tdouble ansnum;\n\n\twhile (1){\n\n\t\tcin >> inp;\n\t\tif (inp == \"0\") break;\n\n\t\tr = base.find(inp[2]) * 1 + base.find(inp[1]) * 16;\n\t\tg = base.find(inp[4]) * 1 + base.find(inp[3]) * 16;\n\t\tb = base.find(inp[6]) * 1 + base.find(inp[5]) * 16;\n\n\t\tans = 0;\n\t\tansnum = pow(r - icol[0][0], 2.0) + pow(g - icol[0][1], 2.0) + pow(b - icol[0][2], 2.0);\n\t\tfor (int i = 1; i < 8; i++){\n\t\t\tif (ansnum>pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0)){\n\t\t\t\tans = i;\n\t\t\t\tansnum = pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0);\n\t\t\t}\n\t\t}\n\n\t\tcout << scol[ans] << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cfloat>\n#include<cmath>\nusing namespace std;\n\nint hexToDec(char x){\n    if('0' <= x && x <= '9'){\n        return x-'0';\n    }else{\n        return 10 + (x - 'a');\n    }\n}\n\nint data[8][3] = { {0, 0, 0}   , \n                   {0, 0, 255} , \n                   {0, 255, 0} ,\n                   {0, 255, 255} , \n                   {255, 0, 0} , \n                   {255, 0, 255} ,\n                   {255, 255, 0} , \n                   {255, 255, 255}};\n\nstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint main(){\n    while(1){\n        string s;\n        cin >> s;\n\n        if(s == \"0\")    break;\n    \n        int r, g, b;\n        r = 16 * hexToDec(s[1]) + hexToDec(s[2]);\n        g = 16 * hexToDec(s[3]) + hexToDec(s[4]);\n        b = 16 * hexToDec(s[5]) + hexToDec(s[6]);\n\n        double dist = DBL_MAX;\n        int ans;\n\n        for(int i = 0; i < 8; i++){\n            double tmp = sqrt(pow(r - data[i][0], 2.0) + pow(g - data[i][1], 2.0) + pow(b - data[i][2], 2.0));\n            if(tmp < dist){\n                dist = tmp;\n                ans = i;\n            }\n        }\n\n        cout << color[ans] << endl;\n    }\n\n    return 0;\n}#include<iostream>\n#include<cfloat>\n#include<cmath>\nusing namespace std;\n\nint hexToDec(char x){\n    if('0' <= x && x <= '9'){\n        return x-'0';\n    }else{\n        return 10 + (x - 'a');\n    }\n}\n\nint data[8][3] = { {0, 0, 0}   , \n                   {0, 0, 255} , \n                   {0, 255, 0} ,\n                   {0, 255, 255} , \n                   {255, 0, 0} , \n                   {255, 0, 255} ,\n                   {255, 255, 0} , \n                   {255, 255, 255}};\n\nstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint main(){\n    while(1){\n        string s;\n        cin >> s;\n\n        if(s == \"0\")    break;\n    \n        int r, g, b;\n        r = 16 * hexToDec(s[1]) + hexToDec(s[2]);\n        g = 16 * hexToDec(s[3]) + hexToDec(s[4]);\n        b = 16 * hexToDec(s[5]) + hexToDec(s[6]);\n\n        double dist = DBL_MAX;\n        int ans;\n\n        for(int i = 0; i < 8; i++){\n            double tmp = sqrt(pow(r - data[i][0], 2.0) + pow(g - data[i][1], 2.0) + pow(b - data[i][2], 2.0));\n            if(tmp < dist){\n                dist = tmp;\n                ans = i;\n            }\n        }\n\n        cout << color[ans] << endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<string>\n#include<algorithm>\n#include <vector>\n#include<math.h>\n#include<iomanip>\n#include<set>\n\n\nusing namespace std;\n\nint a[10][4]={{0,0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\nint main(){\n\n\n\t\n\twhile(1){\n\tstring p;\n\tcin>>p;if(p==\"0\")return 0;\n\n\tint Y[15]={};\n\tfor(int i=1;i<p.size();i++){\n\t\tif(p[i]>='0'&&p[i]<='9')Y[i]=p[i]-'0';\n\t\telse {Y[i]=10;Y[i]+=p[i]-'a';\n\t\t}\n\t}\n\tint X[5]={};\n\tfor(int i=0;i<3;i++){\n\t\tX[i]+=16*Y[2*i+1];\n\t\tX[i]+=Y[2*i+2];\n\t}\n\tdouble ans=0,Bst=9999999;\n\tint k=0;\n\tdouble c0=X[0],c1=X[1],c2=X[2];\n\tfor(int i=0;i<8;i++){\n\t\tdouble A=a[i][0]-c0,B=a[i][1]-c1,C=a[i][2]-c2;\n\t\t\n\t\tans=sqrt(A*A+B*B+C*C);\n\n\t\tif(ans<Bst){Bst=ans;k=i;}\n\t}\n\tif(k==7)cout<<\"white\"<<endl;\n\telse if(k==6)cout<<\"yellow\"<<endl;\n\telse if(k==5)cout<<\"fuchsia\"<<endl;\n\telse if(k==4)cout<<\"red\"<<endl;\n\telse if(k==3)cout<<\"aqua\"<<endl;\n\telse if(k==2)cout<<\"lime\"<<endl;\n\telse if(k==1)cout<<\"blue\"<<endl;\n\telse if(k==0)cout<<\"black\"<<endl;\n\n\t}\n\t}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<cctype>\n#include<cmath>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define INF 1e6\nusing namespace std;\n\nint d(string s,int color[3]){\n  int red=0,blue=0,green=0;\n  if(!isdigit(s[1]))red+=(s[1]-'a'+10)*16;\n  else red+=(s[1]-'0')*16;\n  if(!isdigit(s[2]))red+=(s[2]-'a'+10);\n  else red+=(s[2]-'0');\n  if(!isdigit(s[3]))green+=(s[3]-'a'+10)*16;\n  else green+=(s[3]-'0')*16;\n  if(!isdigit(s[4]))green+=(s[4]-'a'+10);\n  else green+=(s[4]-'0');\n  if(!isdigit(s[5]))blue+=(s[5]-'a'+10)*16;\n  else blue+=(s[5]-'0')*16;\n  if(!isdigit(s[6]))blue+=(s[6]-'a'+10);\n  else blue+=(s[6]-'0');\n  return pow((red-color[0]),2)+pow((green-color[1]),2)+pow((blue-color[2]),2);\n}\n\nint cl[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\nint main(){\n  string str;\n  while(1){\n    cin>>str;\n    if(str==\"0\")break;\n    int num=INF;\n    string ans=\"\";\n    rep(i,8){\n      if(num>d(str,cl[i])){\n\tif(i==0)ans=\"black\";\n\telse if(i==1)ans=\"blue\";\n\telse if(i==2)ans=\"lime\";\n\telse if(i==3)ans=\"aqua\";\n\telse if(i==4)ans=\"red\";\n\telse if(i==5)ans=\"fuchsia\";\n\telse if(i==6)ans=\"yellow\";\n\telse if(i==7)ans=\"white\";\n\tnum=d(str,cl[i]);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<climits>\nusing namespace std;\n\nint main(){\n\tchar pn[8][10] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tint pR[8] = {0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff},\n\t\tpG[8] = {0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff},\n\t\tpB[8] = {0x00,0xff,0x00,0xff,0x00,0xff,0x00,0xff};\n\tchar c;\n\twhile(scanf(\" %c\",&c),c!='0'){\n\t\tint N; scanf(\"%x\",&N);\n\t\tint R = N/(1<<16)%(16*16), G = N/(1<<8)%(16*16), B = N/(1<<0)%(16*16);\n\t\tint min_ = INT_MAX,ans;\n\t\tfor(int i=0;i<8;i++){\n\t\t\tint dR = pR[i]-R, dG = pG[i]-G, dB = pB[i]-B;\n\t\t\tint d = dR*dR+dG*dG+dB*dB;\n\t\t\tif(d<min_){\n\t\t\t\tmin_ = d; ans = i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n\",pn[ans]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nstring in;\nconst string name[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nbool is_digit(char c) { return '0' <= c && c <= '9'; }\nint c2i(char c) { return c - '0'; }\n\nstring solve() {\n  in.erase(0, 1);\n  int my[3];\n  rep (i,3) my[i] = 0;\n  rep (i,3) {\n    if (is_digit(in[i*2])) {\n      my[i] = c2i(in[i*2]) * 16;\n    } else {\n      my[i] = (10 + (in[i*2] - 'a')) * 16;\n    }\n    \n    if (is_digit(in[i*2+1])) {\n      my[i] += c2i(in[i*2+1]);\n    } else {\n      my[i] += (10 + (in[i*2+1] - 'a'));\n    }\n  }\n  \n  int dk = 1 << 28, l = -1;\n  rep (S,8) {\n    int ar[3], temp = 0;\n    rep (i,3) ar[i] = (S >> i & 1) ? 255 : 0 ;\n    rep (i,3) temp += abs(ar[i] - my[i]);\n    if (dk > temp) {\n      dk = temp;\n      l = S;\n    }\n  }\n  return name[l];\n}\n\nint main() {\n  while (cin >> in) {\n    if (in == \"0\") break;\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <set>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iterator>\n#include <bitset>\n#include <unordered_set>\n#include <unordered_map>\n#include <fstream>\n#include <iomanip>\n#include <cassert>\n//#include <utility>\n//#include <memory>\n//#include <functional>\n//#include <deque>\n//#include <cctype>\n//#include <ctime>\n//#include <numeric>\n//#include <list>\n//#include <iomanip>\n\n//#if __cplusplus >= 201103L\n//#include <array>\n//#include <tuple>\n//#include <initializer_list>\n//#include <forward_list>\n//\n//#define cauto const auto&\n//#else\n\n//#endif\n\nusing namespace std;\n\n\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\ntypedef vector<int> vint;\ntypedef vector<vector<int> > vvint;\ntypedef vector<long long> vll, vLL;\ntypedef vector<vector<long long> > vvll, vvLL;\n\n#define VV(T) vector<vector< T > >\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){\n    v.assign(a, vector<T>(b, t));\n}\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >> t;\n}\n\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\n#define RALL(v) (v).rbegin(),(v).rend()\n#define DEBUG\n#ifdef DEBUG\n#define dump(x)  cout << #x << \" = \" << (x) << endl;\n#define debug(x) cout << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n#else\n#define dump(x) \n#define debug(x) \n#endif\n#define LDcout(x,n) fixed<<setprecision(n)<<x\n\n#define MOD 1000000007LL\n#define EPS 1e-8\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\n#define maxs(x,y) x=max(x,y)\n#define mins(x,y) x=min(x,y)\n\nint foo(int a,int b,int c){\n    int t=a*a+b*b+c*c;\n    return t;\n}\nvoid mainmain(){\n    vector<string> v;\n    v.PB(\"black\");\n    v.PB(\"blue\");\n    v.PB(\"lime\");\n    v.PB(\"aqua\");\n    v.PB(\"red\");\n    v.PB(\"fuchsia\");\n    v.PB(\"yellow\");\n    v.PB(\"white\");\n    string s;\n    while(cin>>s){\n        if(s.size()==1) return;\n        vint w(3,0);\n        rep(i,3){\n            string tmp=s.substr(1+i*2,2);\n            if(isdigit(tmp[0])) w[i]=16*(tmp[0]-'0');\n            else{\n                w[i]=16*(tmp[0]-'a'+10);\n            }\n            if(isdigit(tmp[1])) w[i]+=(tmp[1]-'0');\n            else{\n                w[i]+=(tmp[1]-'a'+10);\n            }\n        }\n        // cout<<w[0]<<\" \"<<w[1]<<\" \"<<w[2]<<endl;\n        vector<pii> vv(8);\n        rep(i,8){\n            vint tmp(3);\n            rep(j,3){\n                if((1<<j)&i) tmp[j]=255;\n                else tmp[j]=0;\n            }\n            vv[i].S=i;\n            vv[i].F=foo(w[0]-tmp[0],w[1]-tmp[1],w[2]-tmp[2]);\n        }\n        sort(ALL(vv));\n        cout<<v[vv[0].S]<<endl;\n    }\n}\n\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n      cout<<fixed<<setprecision(20);\n    mainmain();\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\nusing namespace std;\n\n#define loop(i,a,b) for(int i = a ; i < b ; i ++)\n#define rep(i,a) loop(i,0,a)\nint stoi(char c){\n  if('0' <= c && c <= '9')\n    return c - '0';\n  return c - 'a' + 10;\n}\n\nint pow(int n){\n  return n * n;\n}\n\nint main(void){\n  string s;\n  string ans[8] = {\n    \"black\",//\t00\t00\t00\n    \"blue\",//\t00\t00\tff\n    \"lime\",//\t00\tff\t00\n    \"aqua\",//\t00\tff\tff\n    \"red\",//\tff\t00\t00\n    \"fuchsia\",//\tff\t00\tff\n    \"yellow\",//\tff\tff\t00\n    \"white\"//\tff\tff\tff\n  };\n  int num[8];\n  int cnt = 0;\n  rep(i,8)num[i] = i * 255;     \n  while(cin>>s){\n    if(s == \"0\")break;\n    int in[3];\n    in[0] = stoi(s[1]) * 16 + stoi(s[2]);\n    in[1] = stoi(s[3]) * 16 + stoi(s[4]);\n    in[2] = stoi(s[5]) * 16 + stoi(s[6]);\n    //rep(i,3)cout<<in[i]<<endl;\n    int index = 0;\n    unsigned long long diff = 100000000;\n    rep(i,8){\n\n      int box[3];\n      rep(j,3){\n\tbox[j] = (i>>(2-j))%2*255;\n      }\n      \n     \n      unsigned long long int calc = 0;\n      rep(j,3)calc += pow(in[j] - box[j]);\n     \t\n      if(calc < diff){\n\tdiff = calc;\n\tindex = i;\n      }\n    }\n    cout<<ans[index]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nstring in;\nconst string name[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nbool is_digit(char c) { return '0' <= c && c <= '9'; }\nint c2i(char c) { return c - '0'; }\n\nstring solve() {\n  in.erase(0, 1);\n  int my[3];\n  rep (i,3) my[i] = 0;\n  rep (i,3) {\n    if (is_digit(in[i*2])) {\n      my[i] = c2i(in[i*2]) * 16;\n    } else {\n      my[i] = (10 + (in[i*2] - 'a')) * 16;\n    }\n    \n    if (is_digit(in[i*2+1])) {\n      my[i] += c2i(in[i*2+1]);\n    } else {\n      my[i] += (10 + (in[i*2+1] - 'a'));\n    }\n  }\n  \n  double dk = double(1 << 28);\n  int l = -1;\n  rep (S,8) {\n    int ar[3], temp = 0;\n    rep (i,3) ar[i] = (S >> i & 1) ? 255 : 0 ;\n    rep (i,3) {\n      temp += (ar[i] - my[i]) * (ar[i] - my[i]);\n    }\n    if (dk > temp) {\n      dk = temp;\n      l = S;\n    }\n  }\n  return name[l];\n}\n\nint main() {\n  while (cin >> in) {\n    if (in == \"0\") break;\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// clang-format off\n#include <bits/stdc++.h>\n#define int long long\n#define main signed main()\n#define loop(i, a, n) for (int i = (a); i < (n); i++)\n#define rep(i, n) loop(i, 0, n)\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define prec(n) fixed << setprecision(n)\n#define stlice(from, to) substr(from, (to) - (from) + 1)\n#define pb push_back\n#define mp make_pair\n#define mt make_tuple\n#define fi first\n#define se second\nusing namespace std;\nusing pii = pair<int, int>;\nusing vi = vector<int>;\nusing vd = vector<double>;\nusing vc = vector<char>;\nusing vb = vector<bool>;\nusing vs = vector<string>;\nusing vpii = vector<pii>;\nusing vvi = vector<vi>;\nusing vvb = vector<vb>;\nusing vvpii = vector<vpii>;\ntemplate<typename A> using fn = function<A>;\nconstexpr int INF = sizeof(int) == sizeof(long long) ? 1000000000000000000LL : 1000000000;\nconstexpr int MOD = 1000000007;\nconstexpr double PI = acos(-1);\ntemplate<typename A, typename B> bool cmin(A &a, const B &b) { return a > b ? (a = b, true) : false; }\ntemplate<typename A, typename B> bool cmax(A &a, const B &b) { return a < b ? (a = b, true) : false; }\nconstexpr bool odd(const int &n) { return n & 1; }\nconstexpr bool even(const int &n) { return !odd(n); }\nvoid solve();\nmain { solve(); return 0; }\n// clang-format on\n\ntuple<int, int, int> toCol(string s) {\n  int x;\n  stringstream ss;\n  ss << hex << s;\n  ss >> x;\n  return mt(x / 65536, x / 256 % 256, x % 256);\n}\n\nvoid solve() {\n  vector<pair<string, string>> t = {\n    {\"black\", \"000000\"},\n    {\"blue\", \"0000ff\"},\n    {\"lime\", \"00ff00\"},\n    {\"aqua\", \"00ffff\"},\n    {\"red\", \"ff0000\"},\n    {\"fuchsia\", \"ff00ff\"},\n    {\"yellow\", \"ffff00\"},\n    {\"white\", \"ffffff\"},\n  };\n  char gomi;\n  string s;\n  while (cin >> gomi >> s) {\n    int r, g, b;\n    tie(r, g, b) = toCol(s);\n    vector<pair<int, string>> v;\n    for (auto &p : t) {\n      int _r, _g, _b;\n      tie(_r, _g, _b) = toCol(p.se);\n      int d = (r - _r) * (r - _r) + (g - _g) * (g - _g) + (b - _b) * (b - _b);\n      v.emplace_back(d, p.fi);\n    }\n    cout << (*min_element(all(v))).se << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#include <string>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<21\n\nusing namespace std;\n\nint change(char c)\n{\n\tif('a' <= c && c <= 'f') return int(c-'a') + 10;\n\telse return int(c-'0');\n}\n\nint main()\n{\n\tstring N[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\n\tint c[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0,},{255,255,255}};\n\n\tstring s;\n\twhile(cin >> s)\n\t{\n\t\tif(s == \"0\") break;\n\t\t\n\t\tint r = 0,g = 0,b = 0;\n\n\t\tr += change(s[1])*16 + change(s[2]);\n\t\tg += change(s[3])*16 + change(s[4]);\n\t\tb += change(s[5])*16 + change(s[6]);\n\t\t\n\t\tdouble ans = INF;\n\t\trep(i,8)\n\t\t{\n\t\t\tdouble temp = sqrt(\t(c[i][0]-r)*(c[i][0]-r) + (c[i][1]-g)*(c[i][1]-g) + (c[i][2]-b)*(c[i][2]-b));\n\t\t\tans = min(ans,temp);\n\t\t}\n\n\t\trep(i,8)\n\t\t{\n\t\t\tdouble temp = sqrt(\t(c[i][0]-r)*(c[i][0]-r) + (c[i][1]-g)*(c[i][1]-g) + (c[i][2]-b)*(c[i][2]-b));\n\t\t\tif(temp == ans)\n\t\t\t{\n\t\t\t\tcout << N[i] << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint hextod(char a,char b){\n    int ret=0;\n    if(isdigit(b))ret+=b-'0';\n    else ret+=10+b-'a';\n    if(isdigit(a))ret+=16*(a-'0');\n    else ret+=16*(10+a-'a');\n    return ret;\n}\n\nint main(){\n    while(true){\n        char un;\n        cin>>un;\n        if(un=='0')break;\n        char r1,r2,g1,g2,b1,b2;\n        cin>>r1>>r2>>g1>>g2>>b1>>b2;\n        int r,g,b;\n        r=hextod(r1,r2);\n        g=hextod(g1,g2);\n        b=hextod(b1,b2);\n\n        vector<vector<int>> iro(8,vector<int>(3));\n        for (int i = 0; i < 8; ++i) {\n            if(i%2==0)iro[i][0]=0;\n            else iro[i][0]=255;\n            if(i%4==0||i%4==1)iro[i][1]=0;\n            else iro[i][1]=255;\n            if(i<4)iro[i][2]=0;\n            else iro[i][2]=255;\n        }\n        vector<string> ironame={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n        int ans=-1;\n        long long mdist=numeric_limits<int>::max();\n        for (int i = 0; i < 8; ++i) {\n            long long td=0;\n            td+=(r-iro[i][2])*(r-iro[i][2]);\n            td+=(g-iro[i][1])*(g-iro[i][1]);\n            td+=(b-iro[i][0])*(b-iro[i][0]);\n            if(td<mdist){\n                ans=i;\n                mdist=td;\n            }\n        }\n        cout<<ironame[ans]<<endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint colorCalc(char c1, char c2)\n{\n\tint color = 0;\n\tif('a' <= c1 && c1 <= 'f')\n\t{\n\t\tcolor += (c1 - 'a' + 10) * 16;\n\t}\n\telse\n\t{\n\t\tcolor += (c1 - '0') * 16;\n\t}\n\tif('a' <= c2 && c2 <= 'f')\n\t{\n\t\tcolor += c2 - 'a' + 10;\n\t}\n\telse\n\t{\n\t\tcolor += c2 - '0';\n\t}\n\treturn(color);\n}\nvoid solve()\n{\n\tint colors[9][4] = {{{0},   {0},   {0}}, \n\t\t\t\t\t\t{{0},   {0},   {255}}, \n\t\t\t\t\t\t{{0},   {255}, {0}}, \n\t\t\t\t\t\t{{0},   {255}, {255}}, \n\t\t\t\t\t\t{{255}, {0},   {0}}, \n\t\t\t\t\t\t{{255}, {0},   {255}}, \n\t\t\t\t\t\t{{255}, {255}, {0}}, \n\t\t\t\t\t\t{{255}, {255}, {255}}};\n\tstring name[9] = {\"black\", \n\t\t\t\t\t  \"blue\", \n\t\t\t\t\t  \"lime\", \n\t\t\t\t\t  \"aqua\", \n\t\t\t\t\t  \"red\", \n\t\t\t\t\t  \"fuchsia\", \n\t\t\t\t\t  \"yellow\", \n\t\t\t\t\t  \"white\"};\n\tstring str;\n\twhile(cin >> str, str != \"0\")\n\t{\n\t\tint r = colorCalc(str[1], str[2]);\n\t\tint g = colorCalc(str[3], str[4]);\n\t\tint b = colorCalc(str[5], str[6]);\n\t\tint min = 999999999;\n\t\tint label = 0;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tint sum = sqrt((double)(r - colors[i][0]) * (r - colors[i][0]) + (g - colors[i][1]) * (g - colors[i][1]) + (b - colors[i][2]) * (b - colors[i][2]));\n\t\t\tif(sum < min)\n\t\t\t{\n\t\t\t\tmin = sum;\n\t\t\t\tlabel = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[label] << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\n\n#define pb push_back\n#define rep(i, a, n) for(int i = (a); i < (n); i++)\n#define dep(i, a, n) for(int i = (a); i >= (n); i--)\n#define mod 1e9+7\n\n__attribute__((constructor))\nvoid initial() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n}\n\nint hen(char a) {\n  if((int)a - 48 >= 0 && (int)a - 48 < 10) return (int)a - 48;\n  if(a == 'a') return 10;\n  else if(a == 'b') return 11;\n  else if(a == 'c') return 12;\n  else if(a == 'd') return 13;\n  else if(a == 'e') return 14;\n  else return 15;\n}\n\nint main() {\n  string s;\n  while(cin >> s) {\n    int r = hen(s[1]) * 16 + hen(s[2]);\n    int g = hen(s[3]) * 16 + hen(s[4]);\n    int b = hen(s[5]) * 16 + hen(s[6]);\n\n    int ans = INT_MAX;\n    string mans;\n    if(r * r + g * g + b * b < ans) ans = r * r + g * g + b * b, mans = \"brack\";\n    if(r * r + g * g + (b - 255) * (b - 255) < ans) ans = r * r + g * g + (b - 255) * (b - 255), mans = \"blue\";\n    if(r * r + (g - 255) * (g - 255) + b * b < ans) ans = r * r + (g - 255) * (g - 255) + b * b, mans = \"lime\";\n    if(r * r + (g - 255) * (g - 255) + (b - 255) * (b - 255) < ans) ans = r * r + (g - 255) * (g - 255) + (b - 255) * (b - 255), mans = \"\taqua\";\n    if((r - 255) * (r - 255) + g * g + b * b < ans) ans = (r - 255) * (r - 255) + g * g + b * b, mans = \"red\";\n    if((r - 255) * (r - 255) + g * g + (b - 255) * (b - 255) < ans) ans = (r - 255) * (r - 255) + g * g + (b - 255) * (b - 255), mans = \"fuchsia\";\n    if((r - 255) * (r - 255) + (g - 255) * (g - 255) + b * b < ans) ans = (r - 255) * (r - 255) + (g - 255) * (g - 255) + b * b, mans = \"yello\";\n    if((r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 255) * (b - 255) < ans) ans = (r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 255) * (b - 255), mans = \"white\";\n\n    cout << mans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n \nusing namespace std;\n \n#define pb(n)\tpush_back(n)\n#define mp(n,m) make_pair(n,m)\n#define fi \tfirst\n#define se \tsecond\n#define all(r) (r).begin(),(r).end()\n\n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,a,b) for(int i=(a); i<(b); i++)\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n \nconst int IMAX=((1<<30)-1)*2+1;\nconst double EPS=1e-10;\n//int mod=1000000007\n\n\nint cal[8][3]={\n\t{0,0,0},\n\t{0,0,255},\n\t{0,255,0},\n\t{0,255,255},\n\t{255,0,0},\n\t{255,0,255},\n\t{255,255,0},\n\t{255,255,255}\n};\n\nstring t[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint c[3];\n\ndouble d(int i){\n\tdouble ret=0.0;\n\tfor(int j=0; j<3; j++){\n\t\tret+=(cal[i][j]-c[j])*(cal[i][j]-c[j]);\n\t}\n\treturn sqrt(ret);\n}\n\nint change(char c){\n\tif(c>='0'&&c<='9')return c-'0';\n\treturn 10+c-'a';\n}\n\nint main(){\n\tstring s;\n\tint ans;\n\twhile(cin>>s){\n\t\tif(s==\"0\")break;\n\t\tfor(int i=0; i<3; i++){\n\t\t\tc[i]=change(s[i*2+1])*16+change(s[i*2+2]);\n\t\t}\n\t\t//cout<<c[0]<<\" \"<<c[1]<<\" \"<<c[2]<<endl;\n\t\tans=0;\n\t\tfor(int i=1; i<8; i++){\n\t\t\tif(d(ans)>d(i))ans=i;\n\t\t}\n\t\tcout<<t[ans]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <climits>\nusing namespace std;\n\nint conv(char a) {\n  if (a >= '0' && a <= '9') {\n    return a - '0';\n  } else {\n    return a - 'a' + 10;\n  }\n}\n\nint conv(char a, char b) {\n  return conv(a)*16 + conv(b);\n}\n\nint main() {\n  string str;\n  int c[3], d, m, ans;\n  int cc[8][3] = {{0, 0, 0}, {0, 0, 0xff}, {0, 0xff, 0}, {0, 0xff, 0xff},\n                  {0xff, 0, 0}, {0xff, 0, 0xff}, {0xff, 0xff, 0}, {0xff, 0xff, 0xff}};\n  const char *label[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\n  while (1) {\n    cin >> str;\n    if (str == \"0\") break;\n    for (int i=0; i<3; i++) {\n      c[i] = conv(str.at(2*i+1), str.at(2*i+2));\n    }\n    m = INT_MAX;\n    ans = -1;\n    for (int i=0; i<8; i++) {\n      d = 0;\n      for (int j=0; j<3; j++) {\n        d += (c[j]-cc[i][j])*(c[j]-cc[i][j]);\n      }\n      if (m > d) {\n        m = d;\n        ans = i;\n      }\n    }\n    cout << label[ans] << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<vb> vbb;\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst double inf = (int)1e8;\n\nstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nstring strength[8] = {\"000000\", \"0000ff\", \"00ff00\", \"00ffff\", \"ff0000\", \"ff00ff\", \"ffff00\", \"ffffff\"};\n\nint toi(string s){\n    int ret = 0;\n    rep(i, s.size()){\n        string t = s.substr(i, 1);\n        if('0' <= t[0] && t[0] <= '9') ret += stoi(t);\n        else ret += t[0]-'a'+10;\n        if(i != s.size()-1) ret *= 16;\n    }\n    return ret;\n}\n\nvector<int> rgb(string s){\n    vi ret;\n    rep(i, 3){\n        string t = s.substr(i*2, 2);\n        ret.pb(toi(t));\n    }\n    return ret;\n}\n\nint main(){\n    string  s;\n    while(cin >> s, s!=\"0\"){\n        s = s.substr(1);\n        vi c = rgb(s);\n        int m = inf;\n        int ans = 0;\n        rep(i, 8){\n            vi d = rgb(strength[i]);\n            int ret = sqrt(pow(c[0]-d[0], 2)+pow(c[1]-d[1], 2)+pow(c[2]-d[2], 2));\n            if(m > ret){ans = i; m = ret;}\n        }\n        cout << color[ans] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n\tstring s, t[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\n\tcin >> s;\n\n\twhile (s != \"0\") {\n\t\tint r, g, b, i = 0;\n\n\t\tr = stoi(s.substr(1, 2), nullptr, 16);\n\t\tg = stoi(s.substr(3, 2), nullptr, 16);\n\t\tb = stoi(s.substr(5, 2), nullptr, 16);\n\n\t\tif (r > 127)\n\t\t\ti += 4;\n\t\tif (g > 127)\n\t\t\ti += 2;\n\t\tif (b > 127)\n\t\t\ti += 1;\n\n\t\tcout << t[i] << endl;\n\t\t\n\t\tcin >> s;\n\t}\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\nusing namespace std;\n\nconst int INF = 1 << 28;\n\nint decimal(char a, char b) {\n    int d;\n    if (isdigit(a)) d += a - '0';\n    else d += a - 'a' + 10;\n    d *= 16;\n\n    if (isdigit(b)) d += b - '0';\n    else d += b - 'a' + 10;\n    \n    return d;\n}\n\nstruct color_t {\n    int r, g, b;\n    color_t(int r=0, int g=0, int b=0) : r(r), g(g), b(b) {}\n    color_t(string s) {\n        r = decimal(s[1], s[2]);\n        g = decimal(s[3], s[4]);\n        b = decimal(s[5], s[6]);\n    }\n};\n\nint square_distance(color_t a, color_t b) {\n    return (a.r - b.r) * (a.r - b.r) + (a.g - b.g) * (a.g - b.g) + (a.b - b.b) * (a.b - b.b);\n}\n\nint main() {\n    string color[8];\n    color_t color_v[8];\n\n    color[0] = \"black\";   color_v[0] = color_t(\"#000000\");\n    color[1] = \"blue\";    color_v[1] = color_t(\"#0000ff\");\n    color[2] = \"lime\";    color_v[2] = color_t(\"#00ff00\");\n    color[3] = \"aqua\";    color_v[3] = color_t(\"#00ffff\");\n    color[4] = \"red\";     color_v[4] = color_t(\"#ff0000\");\n    color[5] = \"fuchsia\"; color_v[5] = color_t(\"#ff00ff\");\n    color[6] = \"yellow\";  color_v[6] = color_t(\"#ffff00\");\n    color[7] = \"white\";   color_v[7] = color_t(\"#ffffff\");\n\n    string s;\n    while (getline(cin, s)) {\n        if (s == \"0\") break;\n        color_t c(s);\n        int min_sq_dist = INF;\n        string min_dist_color_name;\n        for (int i = 0; i < 8; i++) {\n            int sq_dist = square_distance(color_v[i], c);\n            //cout << color[i] << ' ' << sq_dist << endl;\n            if (min_sq_dist > sq_dist) {\n                min_sq_dist = sq_dist;\n                min_dist_color_name = color[i];\n            }\n        }\n        cout << min_dist_color_name << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\nlong i,j,k;\nstring s,c[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nwhile(cin>>s){\nif(s==\"0\")break;\nk=0;\ni=s[1]-48;if(s[1]>64)i-=7;\nj=s[2]-48;if(s[2]>64)j-=7;\nif(i*16+j>=128)k+=4;\ni=s[3]-48;if(s[3]>64)i-=7;\nj=s[4]-48;if(s[4]>64)j-=7;\nif(i*16+j>=128)k+=2;\ni=s[5]-48;if(s[5]>64)i-=7;\nj=s[6]-48;if(s[6]>64)j-=7;\nif(i*16+j>=128)k++;\ncout<<c[k]<<endl;\n}\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int lld;\ntypedef pair<int,string> P;\n#define INF (1<<20)\n\ntypedef struct {\n  string name; // ??????\n  string R; // ???\n  string G; // ???\n  string B; // ???\n} color; // ???????§???????\n\ncolor data[8]=\n  {{\"black\",\"00\",\"00\",\"00\"},\n   {\"blue\",\"00\",\"00\",\"ff\"},\n   {\"lime\",\"00\",\"ff\",\"00\"},\n   {\"aqua\",\"00\",\"ff\",\"ff\"},\n   {\"red\",\"ff\",\"00\",\"00\"},\n   {\"fuchsia\",\"ff\",\"00\",\"ff\"},\n   {\"yellow\",\"ff\",\"ff\",\"00\"},\n   {\"white\",\"ff\",\"ff\",\"ff\"}\n  };\n\nint trans(string num){\n  int sum = 0;\n  if(num[0] >= 'a' && num[0] <= 'f') sum = (num[0] - 'a' + 10)*16;\n  else sum = (num[0] - '0')*16;\n  if(num[1] >= 'a' && num[1] <= 'f') sum += (num[1] - 'a' + 10);\n  else sum += (num[1] - '0');\n  return sum;\n}\n\nint main(){\n  string str;\n  int RGB[8][3];\n  for(int i=0;i<8;i++){\n    RGB[i][0] = trans(data[i].R);\n    RGB[i][1] = trans(data[i].G);\n    RGB[i][2] = trans(data[i].B);\n  }\n  while(cin >> str , str!=\"0\"){\n    string red = str.substr(1,2);\n    string green = str.substr(3,2);\n    string blue = str.substr(5,2);\n    int r = trans(red);\n    int g = trans(green);\n    int b = trans(blue);\n    double ans = INF;\n    int pos = 0;\n    for(int i=0;i<8;i++){\n      double tr = (r-RGB[i][0])*(r-RGB[i][0]);\n      double tg = (g-RGB[i][1])*(g-RGB[i][1]);\n      double tb = (b-RGB[i][2])*(b-RGB[i][2]);\n      double tmp = sqrt(tr+tg+tb);\n      if(ans > tmp){\n\tans = tmp;\n\tpos = i;\n      }\n    }\n    cout << data[pos].name << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint dir[5010];\n\nvoid remove(){\n\tint cnt = 0;\n\tfor(int i = 0 ; i < 5010 ; i++){\n\t\tif( dir[i] == 31 ) dir[i] = 0,cnt++;\n\t}\n\tfor(int k = 0 ; k < cnt ; k++)\n\tfor(int i = 5009 ; i > 0 ; i--){\n\t\tif( dir[i] && !dir[i-1] ){\n\t\t\tswap(dir[i],dir[i-1]);\n\t\t}\n\t}\n}\n\nvoid tate(int x,int l){\n\tfor(int i = 1 ; i <= l ; i++) dir[5010-i] |= (1<<x);\n\t\n\tfor(int _ = 0 ; _ < l ; _++)\n\tfor(int i = 5010-l+_ ; i > 0 ; i--){\n\t\tif( (dir[i] >> x & 1) && (dir[i-1] >> x & 1) == 0 ){\n\t\t\tdir[i] -= (1<<x);\n\t\t\tdir[i-1] += (1<<x);\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tremove();\n}\n\nvoid yoko(int x,int l){\n\tint mask = ((1<<l)-1) << x;\n\tdir[5009] = mask;\n\tfor(int i = 5009 ; i > 0 ; i--){\n\t\tif( dir[i] && !(dir[i-1] & mask) ){\n\t\t\tdir[i] -= mask;\n\t\t\tdir[i-1] += mask;\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tremove();\n}\nint main(){\n\tint n;\n\twhile(cin >> n && n){\n\t\tfor(int i = 0 ; i <= 5009 ; i++)\n\t\t\tdir[i] = 0;\n\t\t\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tint d,l,x;\n\t\t\tcin >> d >> l >> x;\n\t\t\tx--;\n\t\t\tif(d==1){\n\t\t\t\tyoko(x,l);\n\t\t\t}else{\n\t\t\t\ttate(x,l);\n\t\t\t}\n\t\t\tint f = 0;\n\t\t\tif( i == 10 ) continue;\n\t\t\tfor(\tint j = 5009 ; j >= 0 ; j--){\n\t\t\t\tif(f||dir[j]){\n\t\t\t\t\t//cout << j << \" \" << (dir[j]&1) << (dir[j]&2) << (dir[j]&4) << (dir[j]&8) << (dir[j]&16) << endl; ;\n\t\t\t\t\tf=true;\n\t\t\t\t}\n\t\t\t}\n\t\t//\tcout << endl;\n\t\t}\n\t\tint ans = 0;\n\t\tfor(int i = 0 ; i < 5010 ; i++)\n\t\t\tans += __builtin_popcount(dir[i]);\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<vb> vbb;\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst double inf = (int)1e8;\n\nstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nstring strength[8] = {\"000000\", \"0000ff\", \"00ff00\", \"00ffff\", \"ff0000\", \"ff00ff\", \"ffff00\", \"ffffff\"};\n\nint toi(string s){\n    int ret = 0;\n    rep(i, s.size()){\n        string t = s.substr(i, 1);\n        if('0' <= t[0] && t[0] <= '9') ret += stoi(t);\n        else ret += t[0]-'a'+10;\n        if(i != s.size()-1) ret *= 16;\n    }\n    return ret;\n}\n\nvector<int> rgb(string s){\n    vi ret;\n    rep(i, 3){\n        string t = s.substr(i*2, 2);\n        ret.pb(toi(t));\n    }\n    return ret;\n}\n\nint main(){\n    string  s;\n    while(cin >> s, s!=\"0\"){\n        s = s.substr(1);\n        vi c = rgb(s);\n        int m = inf;\n        int ans = 0;\n        rep(i, 8){\n            vi d = rgb(strength[i]);\n            int ret = sqrt(pow(c[0]-d[0], 2)+pow(c[1]-d[1], 2)+pow(c[2]-d[2], 2));\n            if(m > ret){ans = i; m = ret;}\n        }\n        cout << color[ans] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "\nimport java.awt.geom.Point2D;\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Deque;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.NoSuchElementException;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.util.Stack;\nimport java.util.TreeMap;\n\n\n\npublic class Main {\n\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tstatic FastScanner sc = new FastScanner();\n\tstatic Scanner stdIn = new Scanner(System.in);\n\tstatic int INF = 2 << 26;\n\tstatic int[][] X = new int[][] {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\tstatic String[] K = new String[] {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tpublic static void main(String[] args) {\n\t\twhile(true) {\n\t\t\tString tmp = sc.next();\n\t\t\tif(tmp.equals(\"0\")) break;\n\t\t\tint a1 = Integer.parseInt(tmp.substring(1, 3),16);\n\t\t\tint a2 = Integer.parseInt(tmp.substring(3, 5),16);\n\t\t\tint a3 = Integer.parseInt(tmp.substring(5, 7),16);\n\t\t\tdouble dkMax = Double.MAX_VALUE;\n\t\t\tint id = 0;\n\t\t\tfor(int i = 0; i < X.length; i++) {\n\t\t\t\tdouble x = Math.sqrt(Math.pow((a1 - X[i][0]),2) + Math.pow((a2 - X[i][1]),2) +Math.pow((a3 - X[i][2]),2));\n\t\t\t\tif(dkMax > x) {\n\t\t\t\t\tdkMax = x;\n\t\t\t\t\tid = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(K[id]);\n\t\t\t\n\t\t}\n\t\tout.flush();\n\t}\n\n}\n\n//------------------------------//\n//-----------//\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n    public boolean hasNext() { skipUnprintable(); return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    \n    public int nextInt() {\n    \t if (!hasNext()) throw new NoSuchElementException();\n         int n = 0;\n         boolean minus = false;\n         int b = readByte();\n         if (b == '-') {\n             minus = true;\n             b = readByte();\n         }\n         if (b < '0' || '9' < b) {\n             throw new NumberFormatException();\n         }\n         while(true){\n             if ('0' <= b && b <= '9') {\n                 n *= 10;\n                 n += b - '0';\n             }else if(b == -1 || !isPrintableChar(b)){\n                 return minus ? -n : n;\n             }else{\n                 throw new NumberFormatException();\n             }\n             b = readByte();\n         }\n    }\n    \n    public double nextDouble() {\n    \treturn Double.parseDouble(next());\n    }\n    \n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define INF 1e6\nusing namespace std;\n\nint d(string s,int color[3]){\n  int red=(s[1]-'0')*16+(s[2]-'0');\n  int green=(s[3]-'0')*16+(s[4]-'0');\n  int blue=(s[5]-'0')*16+(s[6]-'0');\n  return sqrt(pow((red-color[0]),2)+pow((green-color[1]),2)+pow((blue-color[2]),2));\n}\n\nint cl[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\nint main(){\n  string s;\n  while(cin>>s,s!=\"0\"){\n    int num=INF;\n    string ans=\"\";\n    rep(i,8){\n      if(num>d(s,cl[i])){\n\tif(i==0)ans=\"black\";\n\telse if(i==1)ans=\"blue\";\n\telse if(i==2)ans=\"lime\";\n\telse if(i==3)ans=\"aqua\";\n\telse if(i==4)ans=\"red\";\n\telse if(i==5)ans=\"fuchsia\";\n\telse if(i==6)ans=\"yellow\";\n\telse if(i==7)ans=\"white\";\n\tnum=d(s,cl[i]);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\n\nint tmp[] = {16,1};\nstring s[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint hoge[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},\n\t\t{255,0,255},{255,255,0},{255,255,255}};\n\nint to_ten(string s){\n  int ans=0;\n  for(int i=0; i<2; i++){\n    if(s[i] == 'a') ans += 10*16*i;\n    else if(s[i] == 'b') ans += 11*tmp[i];\n    else if(s[i] == 'c') ans += 12*tmp[i];\n    else if(s[i] == 'd') ans += 13*tmp[i];\n    else if(s[i] == 'e') ans += 14*tmp[i];\n    else if(s[i] == 'f') ans += 15*tmp[i];\n    else ans += stoi(s.substr(i,1))*tmp[i];\n  }\n  //  cout << ans << \" \";\n  return ans;\n}\n\ndouble d(string r,string g,string b,int i){\n  double ans = 0;\n  ans += (to_ten(r) - hoge[i][0]) * (to_ten(r) - hoge[i][0]);\n  ans += (to_ten(g) - hoge[i][1]) * (to_ten(g) - hoge[i][1]);\n  ans += (to_ten(b) - hoge[i][2]) * (to_ten(b) - hoge[i][2]);\n  return ans;\n}\n\nint main(){\n\n\n  while(1){\n\n    string in; cin >> in;\n    if(in == \"0\") break;\n    string r = in.substr(1,2);\n    string g = in.substr(3,2);\n    string b = in.substr(5,2);\n\n    double min = (int)1e+300;\n    int index;\n    for(int i=0; i<8; i++){\n      if(d(r,g,b,i) < min ){\n\tindex = i;\n\tmin = d(r,g,b,i);\n      }\n    }\n    cout << s[index] << \"\\n\";\n  \n  }\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define RFOR(i,a,b) for(int i=(b) - 1;i>=(a);i--)\n#define REP(i,n) for(int i=0;i<(n);i++)\n#define RREP(i,n) for(int i=n-1;i>=0;i--)\n\n#define PB push_back\n#define INF INT_MAX/3\n#define ALL(a) (a).begin(),(a).end()\n#define CLR(a) memset(a,0,sizeof(a))\n\ntypedef long long int ll;\n\nusing namespace std;\n\nint main(){\n    int black[3] = {0};\n    int blue[] = { 0,0,255 };\n    int lime[] = {0,255,0};\n    int aqua[] = {0,255,255};\n    int red[] = {255,0,0};\n    int fuchsia[] = {255,0,255};\n    int yellow[] = {255,255,0};\n    int white[] = {255,255,255};\n    while(true){\n\tstring s;\n\tcin >> s;\n\tif(s == \"0\") break;\n\tint rgb[3];\n\trgb[0] = stoi(s.substr(1,2),nullptr,16);\n\trgb[1] = stoi(s.substr(3,2),nullptr,16);\n\trgb[2] = stoi(s.substr(5,2),nullptr,16);\n\tstring ans;\n\tint m = 10000000;\n\tint sum = 0;\n\tREP(j,3) sum += (rgb[j]-black[j])*(rgb[j]-black[j]);\n\tif(m > sum){\n\t    m = sum;\n\t    ans = \"black\";\n\t}\n\tsum = 0;\n\tREP(j,3) sum += (rgb[j]-blue[j])*(rgb[j]-blue[j]);\n\tif(m > sum){\n\t    m = sum;\n\t    ans = \"blue\";\n\t}\n\tsum = 0;\n\tREP(j,3) sum += (rgb[j]-lime[j])*(rgb[j]-lime[j]);\n\tif(m > sum){\n\t    m = sum;\n\t    ans = \"lime\";\n\t}\n\tsum = 0;\n\tREP(j,3) sum += (rgb[j]-aqua[j])*(rgb[j]-aqua[j]);\n\tif(m > sum){\n\t    m = sum;\n\t    ans = \"aqua\";\n\t}\n\tsum = 0;\n\tREP(j,3) sum += (rgb[j]-red[j])*(rgb[j]-red[j]);\n\tif(m > sum){\n\t    m = sum;\n\t    ans = \"red\";\n\t}\n\tsum = 0;\n\tREP(j,3) sum += (rgb[j]-fuchsia[j])*(rgb[j]-fuchsia[j]);\n\tif(m > sum){\n\tm = sum;\n\tans = \"fuchsia\";\n\t}\n\tsum = 0;\n\tREP(j,3) sum += (rgb[j]-yellow[j])*(rgb[j]-yellow[j]);\n\tif(m > sum){\n\t    m = sum;\n\t    ans = \"yellow\";\n\t}\n\tsum = 0;\n\tREP(j,3) sum += (rgb[j]-white[j])*(rgb[j]-white[j]);\n\tif(m > sum){\n\t    m = sum;\n\t    ans = \"white\";\n\t}\n\tcout << ans << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint main(){\n\tint r,g,b,n[6],p[8],q[8];\n\tchar a[7];\n\t\n\twhile(1){\n\t\tgets(a);\n\t\tif(a[0]=='0'){\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=1;i<7;i++){\n\t\t\tif(a[i]=='0'){\n\t\t\t\tn[i-1]=0;\n\t\t\t}\n\t\t\tif(a[i]=='1'){\n\t\t\t\tn[i-1]=1;\n\t\t\t}\n\t\t\tif(a[i]=='2'){\n\t\t\t\tn[i-1]=2;\n\t\t\t}\n\t\t\tif(a[i]=='3'){\n\t\t\t\tn[i-1]=3;\n\t\t\t}\n\t\t\tif(a[i]=='4'){\n\t\t\t\tn[i-1]=4;\n\t\t\t}\n\t\t\tif(a[i]=='5'){\n\t\t\t\tn[i-1]=5;\n\t\t\t}\n\t\t\tif(a[i]=='6'){\n\t\t\t\tn[i-1]=6;\n\t\t\t}\n\t\t\tif(a[i]=='7'){\n\t\t\t\tn[i-1]=7;\n\t\t\t}\n\t\t\tif(a[i]=='8'){\n\t\t\t\tn[i-1]=8;\n\t\t\t}\n\t\t\tif(a[i]=='9'){\n\t\t\t\tn[i-1]=9;\n\t\t\t}\n\t\t\tif(a[i]=='a'){\n\t\t\t\tn[i-1]=10;\n\t\t\t}\n\t\t\tif(a[i]=='b'){\n\t\t\t\tn[i-1]=11;\n\t\t\t}\n\t\t\tif(a[i]=='c'){\n\t\t\t\tn[i-1]=12;\n\t\t\t}\n\t\t\tif(a[i]=='d'){\n\t\t\t\tn[i-1]=13;\n\t\t\t}\n\t\t\tif(a[i]=='e'){\n\t\t\t\tn[i-1]=14;\n\t\t\t}\n\t\t\tif(a[i]=='f'){\n\t\t\t\tn[i-1]=15;\n\t\t\t}\n\t\t}\n\t\tr=n[0]*16+n[1];\n\t\tg=n[2]*16+n[3];\n\t\tb=n[4]*16+n[5];\n\t\t\n\t\tp[0]=r*r+g*g+b*b;\n\t\tp[1]=r*r+g*g+(255-b)*(255-b);\n\t\tp[2]=r*r+(255-g)*(255-g)+b*b;\n\t\tp[3]=r*r+(255-g)*(255-g)+(255-b)*(255-b);\n\t\tp[4]=(255-r)*(255-r)+g*g+b*b;\n\t\tp[5]=(255-r)*(255-r)+g*g+(255-b)*(255-b);\n\t\tp[6]=(255-r)*(255-r)+(255-g)*(255-g)+b*b;\n\t\tp[7]=(255-r)*(255-r)+(255-g)*(255-g)+(255-b)*(255-b);\n\t\t\n\t\tfor(int i=0;i<8;i++){\n\t\t\tq[i]=i;\n\t\t}\n\t\tfor(int i=1;i<8;i++){\n\t\t\tfor(int j=0;j<8-i;j++){\n\t\t\t\tif(p[j]>p[j+1]){\n\t\t\t\t\tr=p[j]; p[j]=p[j+1]; p[j+1]=r;\n\t\t\t\t\tb=q[j]; q[j]=q[j+1]; q[j+1]=b;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(q[0]==0){\n\t\t\tcout << \"black\\n\";\n\t\t}\n\t\tif(q[0]==1){\n\t\t\tcout << \"blue\\n\";\n\t\t}\n\t\tif(q[0]==2){\n\t\t\tcout << \"lime\\n\";\n\t\t}\n\t\tif(q[0]==3){\n\t\t\tcout << \"aqua\\n\";\n\t\t}\n\t\tif(q[0]==4){\n\t\t\tcout << \"red\\n\";\n\t\t}\n\t\tif(q[0]==5){\n\t\t\tcout << \"fuchsia\\n\";\n\t\t}\n\t\tif(q[0]==6){\n\t\t\tcout << \"yellow\\n\";\n\t\t}\n\t\tif(q[0]==7){\n\t\t\tcout << \"white\\n\";\n\t\t}\n\t}\n\t\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define mod 1000000007\ntypedef long long ll;\nusing namespace std;\nint d[8][3]={\n  {0,0,0},\n  {0,0,255},\n  {0,255,0},\n  {0,255,255},\n  {255,0,0},\n  {255,0,255},\n  {255,255,0},\n  {255,255,255}\n};\nstring ans[8]={\n  \"black\",\n  \"blue\",\n  \"lime\",\n  \"aqua\",\n  \"red\",\n  \"fuchsia\",\n  \"yellow\",\n  \"white\"\n};\nint F(char z){\n  if('0'<=z&&z<='9')return z-'0';\n  return 10+z-'a';\n}\nint main(){\n  string s;\n  while(cin>>s&&s!=\"0\"){\n    int a=F(s[1])*16+F(s[2]);\n    int b=F(s[3])*16+F(s[4]);\n    int c=F(s[5])*16+F(s[6]);\n    int mini=mod,pnt;\n    for(int i=0;i<8;i++){\n      int dis=(d[i][0]-a)*(d[i][0]-a);\n      dis+=(d[i][1]-b)*(d[i][1]-b);\n      dis+=(d[i][2]-c)*(d[i][2]-c);\n      if(dis<mini)mini=dis,pnt=i;\n    }\n    cout<<ans[pnt]<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <fstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nstatic const double EPS = 1e-5;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\nint main(void){\n  int col;\n  char c;\n  while(cin>>c>>hex>>col){\n    int data[3];\n    REP(i,3){\n      data[i] = col%256;\n      col/=256;\n    }\n    bool judge[3];\n    REP(i,3){\n      if(255-data[i]<data[i]){\n        judge[i] = false;\n      }else{\n        judge[i] = true;\n      }\n    }\n    if(judge[0]){\n      if(judge[1]){\n        if(judge[2]){\n          cout<<\"black\"<<endl;\n        }else{\n          cout<<\"blue\"<<endl;\n        }\n      }else{\n        if(judge[2]){\n          cout<<\"lime\"<<endl;\n        }else{\n          cout<<\"aqua\"<<endl;\n        }\n      }\n    }else{\n      if(judge[1]){\n        if(judge[2]){\n          cout<<\"red\"<<endl;\n        }else{\n          cout<<\"fuchsia\"<<endl;\n        }\n      }else{\n        if(judge[2]){\n          cout<<\"yellow\"<<endl;\n        }else{\n          cout<<\"white\"<<endl;\n        }\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\nusing namespace std;\n\ndouble dis(int r1,int r2,int g1,int g2,int b1,int b2){\n  return sqrt( (r1-r2)*(r1-r2) + (g1-g2)*(g1-g2) + (b1-b2)*(b1-b2) );\n}\n\nint main(){\n  string color,ans;\n  int r,g,b;\n  double dmin,tmp;\n\n  while(1){\n    cin >> color;\n    if(color==\"0\")break;\n\n    r = 0;\n    if(color[1]-'0' < 10)r += 16*(color[1]-'0');\n    else r += 16 * (color[1]-'a'+10);\n    if(color[2]-'0' < 10)r += color[2]-'0';\n    else r += color[2]-'a'+10;\n    g = 0;\n    if(color[3]-'0' < 10)g += 16*(color[3]-'0');\n    else g += 16 * (color[3]-'a'+10);\n    if(color[4]-'0' < 10)g += color[4]-'0';\n    else g += color[4]-'a'+10;\n    b = 0;\n    if(color[5]-'0' < 10)b += 16*(color[5]-'0');\n    else b += 16 * (color[5]-'a'+10);\n    if(color[6]-'0' < 10)b += color[6]-'0';\n    else b += color[6]-'a'+10;\n\n    dmin = 510;\n    tmp = dis(r,0,g,0,b,0);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"black\";\n    }\n    tmp = dis(r,0,g,0,b,255);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"blue\";\n    }\n    tmp = dis(r,0,g,255,b,0);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"lime\";\n    }\n    tmp = dis(r,0,g,255,b,255);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"aqua\";\n    }\n    tmp = dis(r,255,g,0,b,0);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"red\";\n    }\n    tmp = dis(r,255,g,0,b,255);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"fuchsia\";\n    }\n    tmp = dis(r,255,g,255,b,0);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"yellow\";\n    }\n    tmp = dis(r,255,g,255,b,255);\n    if(tmp < dmin){\n      dmin = tmp;\n      ans = \"white\";\n    }\n\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\n\n#define pb push_back\n#define rep(i, a, n) for(int i = (a); i < (n); i++)\n#define dep(i, a, n) for(int i = (a); i >= (n); i--)\n#define mod 1e9+7\n\n__attribute__((constructor))\nvoid initial() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n}\n\nint hen(char a) {\n  if((int)a - 48 >= 0 && (int)a - 48 < 10) return (int)a - 48;\n  if(a == 'a') return 10;\n  else if(a == 'b') return 11;\n  else if(a == 'c') return 12;\n  else if(a == 'd') return 13;\n  else if(a == 'e') return 14;\n  else return 15;\n}\n\nint main() {\n  string s;\n  while(cin >> s) {\n    if(s == \"0\") return 0;\n    int r = hen(s[1]) * 16 + hen(s[2]);\n    int g = hen(s[3]) * 16 + hen(s[4]);\n    int b = hen(s[5]) * 16 + hen(s[6]);\n\n    int ans = INT_MAX;\n    string mans;\n    if(r * r + g * g + b * b < ans) ans = r * r + g * g + b * b, mans = \"black\";\n    if(r * r + g * g + (b - 255) * (b - 255) < ans) ans = r * r + g * g + (b - 255) * (b - 255), mans = \"blue\";\n    if(r * r + (g - 255) * (g - 255) + b * b < ans) ans = r * r + (g - 255) * (g - 255) + b * b, mans = \"lime\";\n    if(r * r + (g - 255) * (g - 255) + (b - 255) * (b - 255) < ans) ans = r * r + (g - 255) * (g - 255) + (b - 255) * (b - 255), mans = \"aqua\";\n    if((r - 255) * (r - 255) + g * g + b * b < ans) ans = (r - 255) * (r - 255) + g * g + b * b, mans = \"red\";\n    if((r - 255) * (r - 255) + g * g + (b - 255) * (b - 255) < ans) ans = (r - 255) * (r - 255) + g * g + (b - 255) * (b - 255), mans = \"fuchsia\";\n    if((r - 255) * (r - 255) + (g - 255) * (g - 255) + b * b < ans) ans = (r - 255) * (r - 255) + (g - 255) * (g - 255) + b * b, mans = \"yellow\";\n    if((r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 255) * (b - 255) < ans) ans = (r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 255) * (b - 255), mans = \"white\";\n\n    cout << mans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Color{\n\tdouble r,g,b;\n};\n\ndouble sq( double a ){\n\treturn a * a;\n}\n\nint main(int argc, char const* argv[])\n{\n\tconst char *color[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tColor colorStrong[] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\n\tColor inputColor;\n\tint rgb;\n\tdouble d[8];\n\tchar damy;\n\n\twhile( cin >> damy && damy != '0' ){\n\t\tcin >> hex >> rgb;\n\t\tinputColor.r = rgb >> 16;\n\t\tinputColor.g = ( rgb >> 8 ) & 0xff;\n\t\tinputColor.b = rgb & 0xff;\n\n\t\tfor( int i = 0;i < 8;i++ ){\n\t\t\td[i] = sqrt( sq( inputColor.r - colorStrong[i].r ) + sq( inputColor.g - colorStrong[i].g ) + sq( inputColor.b - colorStrong[i].b ) );\n\t\t}\n\n\t\tdouble* answer = min_element( d, d + 8 );\n\n\t\tfor( int i = 0;i < 8;i++ ){\n\t\t\tif( answer == &d[i] ){\n\t\t\t\tcout << color[i] << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint hext(string a){\n\tint c,d;\n\tif(a[0]>='0'&&a[0]<='9')c=a[0]-'0';\n\telse c=a[0]-'a'+10;\n\t\n\tif(a[1]>='0'&&a[1]<='9')d=a[1]-'0';\n\telse d=a[1]-'a'+10;\n\t\n\treturn c*16+d;\n\t}\n\nint main(){\n\tstring s;\n\twhile(cin>>s&&s!=\"0\"){\n\t\tint r,g,b;\n\t\tr=hext(s.substr(1,2));\n\t\tg=hext(s.substr(3,2));\n\t\tb=hext(s.substr(5,2));\n\t\t\n\t\tstring ans;\n\t\tint d=1e9;\n\t\tif(d>((r*r)+(g*g)+(b*b)))ans=\"black\",d=((r*r)+(g*g)+(b*b));\n\t\tif(d>((r*r)+(g*g)+((b-255)*(b-255))))ans=\"blue\",d=((r*r)+(g*g)+((b-255)*(b-255)));\n\t\tif(d>((r*r)+((g-255)*(g-255))+(b*b)))ans=\"lime\",d=((r*r)+((g-255)*(g-255))+(b*b));\n\t\tif(d>((r*r)+((g-255)*(g-255))+((b-255)*(b-255))))ans=\"aqua\",d=((r*r)+((g-255)*(g-255))+((b-255)*(b-255)));\n\t\tif(d>((r-255)*(r-255))+(g*g)+(b*b))ans=\"red\",d=((r-255)*(r-255))+(g*g)+(b*b);\n\t\tif(d>((r-255)*(r-255))+(g*g)+((b-255)*(b-255)))ans=\"fuchsia\",d=((r-255)*(r-255))+(g*g)+((b-255)*(b-255));\n\t\tif(d>((r-255)*(r-255))+((g-255)*(g-255))+(b*b))ans=\"yellow\",d=((r-255)*(r-255))+((g-255)*(g-255))+(b*b);\n\t\tif(d>((r-255)*(r-255))+((g-255)*(g-255))+(b-255)*(b-255))ans=\"white\";\n\t\t\n\t\tcout<<ans<<endl;\n\t\t\n\t\t}\n\t\treturn 0;\n\t}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,a,n) for(int i=a;i<n;i++)\n#define repb(i,a,b) for(int i=a;i>=b;i--)\n#define all(a) a.begin(),a.end()\n#define o(a) cout<<a<<endl\n#define pb(a) push_back(a)\n//#define int long long\n#define fi first\n#define se second\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\n\nstring str[8]={\"black\",\n                \"blue\",\n                \"lime\",\n                \"aqua\",\n                \"red\",\n                \"fuchsia\",\n                \"yellow\",\n                \"white\"};\n\nint change(string t){\n    int res = 0;\n    rep(i, 0, 2){\n        if('0' <= t[i] && t[i] <= '9'){\n            res += (t[i] - '0')*16*(1 - i);\n        }else{\n            res += ((t[i] - 'a') + 10)*16*(1 - i);\n        }\n    }\n    return res;\n}\n\nsigned main() {\n    string s;\n    while(cin >> s){\n        if(s == \"0\") break;\n        int r, g, b;\n        r = change(s.substr(1, 2));\n        g = change(s.substr(3, 2));\n        b = change(s.substr(5, 2));\n        int MIN = 1e9, p = -1;\n        rep(i, 0, 2){\n            rep(j, 0, 2){\n                rep(k, 0, 2){\n                    int d = (r - i*16*16)*(r - i*16*16) + (g - j*16*16)*(g - j*16*16) + (b - k*16*16)*(b - k*16*16);\n                    //o(d);\n                    if(d < MIN){\n                        MIN = d;\n                        p = i*4 + j*2 + k;\n                    }\n                }\n            }\n        }\n        cout << str[p] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  char c[10];\n  int r,g,b,id;\n  string str[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  while(scanf(\"%s\",c),c[0]!='0'){\n    r = g = b = 0;\n    if('0'<=c[1] && c[1]<='9') r += (c[1]-'0')*16;\n    else r += (c[1]-'A'+10)*16;\n    if('0'<=c[2] && c[2]<='9') r += (c[2]-'0');\n    else r += (c[2]-'A'+10);\n    if('0'<=c[3] && c[3]<='9') g += (c[3]-'0')*16;\n    else g += (c[3]-'A'+10)*16;\n    if('0'<=c[4] && c[4]<='9') g += (c[4]-'0');\n    else g += (c[4]-'A'+10);\n    if('0'<=c[5] && c[5]<='9') b += (c[5]-'0')*16;\n    else b += (c[5]-'A'+10)*16;\n    if('0'<=c[6] && c[6]<='9') b += (c[6]-'0');\n    else r += (c[6]-'A'+10);\n    id = 0;\n    if(r >=123) id += 4;\n    if(g >=123) id += 2;\n    if(b >=123) id += 1;\n    cout << str[id] << endl;\n  }\n  return(0);\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF 999999999\n\nint btoh(string s){\n    if(s.size()!=2)cout<<\"error\"<<endl;\n    int ret=0;\n    if('0'<=s[1]&&s[1]<='9')ret+=(s[1]-'0');\n    else{\n        ret+=10+(int)(s[1]-'a');\n    }\n    if('0'<=s[0]&&s[0]<='9')ret+=(s[0]-'0')*16;\n    else{\n        ret+=(10+(int)(s[0]-'a'))*16;\n    }\n    return ret;\n}\n\ndouble solve(string a,string b,string c,string d,string e,string f){\n    int x,y,z;\n//    cout<<btoh(a)<<\" \"<<btoh(b)<<\" \"<<btoh(c)<<\" \"<<btoh(d)<<\" \"<<btoh(e)<<\" \"<<btoh(f)<<endl;\n    x=(btoh(a)-btoh(d)) * (btoh(a)-btoh(d));\n    y=(btoh(b)-btoh(e)) * (btoh(b)-btoh(e));\n    z=(btoh(c)-btoh(f)) * (btoh(c)-btoh(f));\n    \n    return sqrt(x+y+z);\n}\n\nint main(){\n//    string color = {\"black\",\"blue\",}\n    string s;\n    while(cin>>s){\n        if(s==\"0\")break;\n        string a,b,c;\n        a=s.substr(1,2);\n        b=s.substr(3,2);\n        c=s.substr(5,2);\n        string ans=\"\";\n        double d=INF;\n        \n        double t=solve(a,b,c,\"00\",\"00\",\"00\");\n        if(t<d){\n            d=t;\n            ans=\"black\";\n        }\n        \n        t=solve(a,b,c,\"00\",\"00\",\"ff\");\n        if(t<d){\n            d=t;\n            ans=\"blue\";\n        }\n        \n        t=solve(a,b,c,\"00\",\"ff\",\"00\");\n        if(t<d){\n            d=t;\n            ans=\"lime\";\n        }\n        \n        t=solve(a,b,c,\"00\",\"ff\",\"ff\");\n        if(t<d){\n            d=t;\n            ans=\"aqua\";\n        }\n        \n        t=solve(a,b,c,\"ff\",\"00\",\"00\");\n        if(t<d){\n            d=t;\n            ans=\"red\";\n        }\n        \n        t=solve(a,b,c,\"ff\",\"00\",\"ff\");\n        if(t<d){\n            d=t;\n            ans=\"fuchsia\";\n        }\n        \n        t=solve(a,b,c,\"ff\",\"ff\",\"00\");\n        if(t<d){\n            d=t;\n            ans=\"yellow\";\n        }\n        \n        t=solve(a,b,c,\"ff\",\"ff\",\"ff\");\n        if(t<d){\n            d=t;\n            ans=\"white\";\n        }\n        cout<<ans<<endl;\n    }\n}\n\n/*\n black\t00\t00\t00\n blue\t00\t00\tff\n lime\t00\tff\t00\n aqua\t00\tff\tff\n red\tff\t00\t00\n fuchsiaff\t00\tff\n yellow\tff\tff\t00\n white\tff\tff\tff\n\n */"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main()\n{\n  string s;\n  for(;cin>>s,s!=\"0\";)\n    {\n      int r=0,g=0,b=0;\n      for(int i=1;i<3;i++)\n\t{\n\t  r*=16;\n\t  if(s[i]>='0'&&s[i]<='9')\n\t      r+=s[i]-'0';\n\t  else\n\t    r+=s[i]-'a'+10;\n\t}\n      for(int i=3;i<5;i++)\n\t{\n\t  g*=16;\n\t  if(s[i]>='0'&&s[i]<='9')\n\t      g+=s[i]-'0';\n\t  else\n\t   g+=s[i]-'a'+10;\n\t}\n      for(int i=5;i<7;i++)\n\t{\n\t  b*=16;\n\t  if(s[i]>='0'&&s[i]<='9')\n\t      b+=s[i]-'0';\n\t  else\n\t    b+=s[i]-'a'+10;\n\t}\n      string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n      int rk[]={0,0,0,0,0xff,0xff,0xff,0xff};\n      int gk[]={0,0,0xff,0xff,0,0,0xff,0xff};\n      int bk[]={0,0xff,0,0xff,0,0xff,0,0xff};\n      \n      int ans=0;\n      for(int i=1;i<8;i++)\n\t{\n\t  int a1=(r-rk[i])*(r-rk[i])+(g-gk[i])*(g-gk[i])+(b-bk[i])*(b-bk[i]);\n\t  int a2=(r-rk[ans])*(r-rk[ans])+(g-gk[ans])*(g-gk[ans])+(b-bk[ans])*(b-bk[ans]);\n\t  // /cout<<a1<<endl;\n\t  //cout<<a2<<endl;\n\t  if(a1<a2)\n\t    ans=i;\n\t}\n      cout<<color[ans]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\n\n#define R 0\n#define G 1\n#define B 2\n\nvoid print_col(int r, int g, int b)\n{\n  string col[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n  int c[][3] = {{0, 0, 0}, {0, 0, 255}, {0, 255, 0}, {0, 255, 255},\n               {255, 0, 0}, {255, 0, 255}, {255, 255, 0}, {255, 255, 255}};\n  double d = 1000000;\n  double dd;\n  int a = -1;\n\n  for(int i = 0; i < 8; i++)\n  {\n    dd = pow(r - c[i][R], 2) + pow(g - c[i][G], 2) + pow(b - c[i][B], 2);\n    if(dd < d)\n    {\n      d = dd;\n      a = i;\n    }\n  }\n  cout << col[a] << endl;\n}\n\nint to_num(char n)\n{\n  return n >= 'a' ? n - 'a' + 10 : n - '0';\n}\n\nint main()\n{\n  string s;\n  int r, g, b;\n  while(true)\n  {\n    cin >> s;\n    if(s[0] == '0')\n      break;\n    r = to_num(s[1]) * 16 + to_num(s[2]);\n    g = to_num(s[3]) * 16 + to_num(s[4]);\n    b = to_num(s[5]) * 16 + to_num(s[6]);\n    print_col(r, g, b);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n#include<cmath>\ntypedef struct{\n  int R;\n  int G;\n  int B;\n  char name[16];\n} color;\nint main(void){\n  char s[16], r[3], g[3], b[3];\n  int rk, gk, bk, n;\n  double dk, min;\n  color c[8];\n  c[0].R = c[0].G = c[0].B = c[1].R = c[1].G = c[2].R = c[2].B = c[3].R = c[4].G = c[4].B = c[5].G = c[6].B = 0;\n  c[1].B = c[2].G = c[3].G = c[3].B = c[4].R = c[5].R = c[5].B = c[6].R = c[6].G = c[7].R = c[7].G = c[7].B = 255;\n  strcpy(c[0].name, \"black\"); strcpy(c[1].name, \"blue\"); strcpy(c[2].name, \"lime\"); strcpy(c[3].name, \"aqua\"); strcpy(c[4].name, \"red\"); strcpy(c[5].name, \"fuchsia\"); strcpy(c[6].name, \"yellow\"); strcpy(c[7].name, \"white\");\n  for( ; ; ){\n    scanf(\"%s\", s);\n    if(s[0] == '0') break;\n    r[2] = g[2] = b[2] = '\\0';\n    r[0] = s[1]; r[1] = s[2]; g[0] = s[3]; g[1] = s[4]; b[0] = s[5]; b[1] = s[6];\n    sscanf(r, \"%x\", &rk); sscanf(g, \"%x\", &gk); sscanf(b, \"%x\", &bk);\n    for(int i = 0;i < 8; i++){\n      dk = sqrt(pow(c[i].R - rk, 2) + pow(c[i].G - gk, 2) + pow(c[i].B - bk, 2));\n      if(i == 0) min = dk, n = i;\n      else{\n\tif(dk < min)\n\t  min = dk, n = i;\n      }\n    }\n    printf(\"%s\\n\", c[n].name);\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<math.h>\n\nusing namespace std;\n\nmap<int, int> MR;\nmap<int, int> MG;\nmap<int, int> MB;\n\nvoid make(){\n  MR[0] = 0;\n  MG[0] = 0;\n  MB[0] = 0;\n  MR[1] = 0;\n  MG[1] = 0;\n  MB[1] = 255;\n  MR[2] = 0;\n  MG[2] = 255;\n  MB[2] = 0;\n  MR[3] = 0;\n  MG[3] = 255;\n  MB[3] = 255;\n  MR[4] = 255;\n  MG[4] = 0;\n  MB[4] = 0;\n  MR[5] = 255;\n  MG[5] = 0;\n  MB[5] = 255;\n  MR[6] = 255;\n  MG[6] = 255;\n  MB[6] = 0;\n  MR[7] = 255;\n  MG[7] = 255;\n  MB[7] = 255;\n}\n\nint main(){\n\n  make();\n\n  char in[2];\n  int status = 0;\n\n  while(cin >> in[0]){\n    if(in[0] == '0') break;\n\n    int r, g, b;\n\n    for(int i = 0; i < 3; i++){\n      \n      cin >> in[0] >> in[1];\n\n      for(int j = 0; j <= 1; j++){\n\tif(in[j] == 'a') in[j] -= 39;\n\tif(in[j] == 'b') in[j] -= 39;\n\tif(in[j] == 'c') in[j] -= 39;\n\tif(in[j] == 'd') in[j] -= 39;\n\tif(in[j] == 'e') in[j] -= 39;\n\tif(in[j] == 'f') in[j] -= 39;\n      }\n\n      if(i == 0) r = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 1) g = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 2) b = (in[0] - 48) * 16 + (in[1] - 48);\n    }\n\n    double d;\n    int min, then;\n\n    for(int j = 0; j < 8; j++){\n      d = sqrt((r - MR[j])*(r - MR[j])+(g - MG[j])*(g - MG[j])+(b - MB[j])*(b - MB[j]));\n      if(j == 0 || min > d){\n\tmin = d;\n\tthen = j;\n      }\n    }\n\n    if(then == 0) cout << \"black\" <<endl;\n    if(then == 1) cout << \"blue\" <<endl;\n    if(then == 2) cout << \"lime\" <<endl;\n    if(then == 3) cout << \"aqua\" <<endl;\n    if(then == 4) cout << \"red\" <<endl;\n    if(then == 5) cout << \"fuchsia\" <<endl;\n    if(then == 6) cout << \"yellow\" <<endl;\n    if(then == 7) cout << \"white\" <<endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  const string c[] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n  const int t[][3] = { {0, 0, 0}, { 0, 0, 255}, {0, 255, 0}, {0, 255, 255}, {255 ,0, 0},\n                       {255, 0, 255}, {255, 255, 0}, {255, 255, 255} };\n  string s;\n  while (cin >> s, s != \"0\") {\n    int r = stoi(s.substr(1, 2), nullptr, 16);\n    int g = stoi(s.substr(3, 2), nullptr, 16);\n    int b = stoi(s.substr(5, 2), nullptr, 16);\n    double mind = 500.0;\n    int idx = -1;\n    for (int i = 0; i < 8; i++) {\n      double d = sqrt(pow(t[i][0] - r, 2) + pow(t[i][1] - g, 2) + pow(t[i][2] - b, 2));\n      if (d < mind) {\n        mind = d;\n        idx = i;\n      }\n    }\n    cout << c[idx] << \"\\n\";\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\ntemplate<class T>\nT sqr(T obj) {return obj * obj;}\n\nstruct color {\n\tstring name;\n\tint R, G, B;\n\n\tcolor(string n, int r, int g, int b) {\n\t\tname = n;\n\t\tR = r;\n\t\tG = g;\n\t\tB = b;\n\t}\n};\n\ncolor color_list[] = {\n\tcolor(\"black\", 0x00, 0x00, 0x00),\n\tcolor(\"blue\", 0x00, 0x00, 0xff),\n\tcolor(\"lime\", 0x00, 0xff, 0x00),\n\tcolor(\"aqua\", 0x00, 0xff, 0xff),\n\tcolor(\"red\", 0xff, 0x00, 0x00),\n\tcolor(\"fuchsia\", 0xff, 0x00, 0xff),\n\tcolor(\"yellow\", 0xff, 0xff, 0x00),\n\tcolor(\"white\", 0xff, 0xff, 0xff),\n};\n\nint main() {\n\tstring s;\n\twhile(cin >> s) {\n\t\tif(s[0] == '0')\n\t\t\tbreak;\n\n\t\tint mind, indx;\n\t\tindx = 0;\n\t\tmind = 1e8;\n\n\t\tint a[3];\n\t\tfor(int j = 0; j < 3; j++) {\n\t\t\tint tmp = 0;\n\t\t\tif('0' <= s[1 + 2 * j] && s[1 + 2 * j] <= '9')\n\t\t\t\ttmp += (s[1 + 2 * j] - '0') * 16;\n\t\t\telse\n\t\t\t\ttmp += (s[1 + 2 * j] - 'a' + 10) * 16;\n\n\t\t\tif('0' <= s[2 + 2 * j] && s[2 + 2 * j] <= '9')\n\t\t\t\ttmp += (s[2 + 2 * j] - '0');\n\t\t\telse\n\t\t\t\ttmp += (s[2 + 2 * j] - 'a' + 10);\n\t\t\ta[j] = tmp;\n\t\t}\n\n\t\tfor(int i = 0; i < 8; i++) {\n\t\t\tint d = 0;\n\n\t\t\td += sqr(color_list[i].R - a[0]);\n\t\t\td += sqr(color_list[i].G - a[1]);\n\t\t\td += sqr(color_list[i].B - a[2]);\n\t\t\tif(d < mind) {\n\t\t\t\tindx = i;\n\t\t\t\tmind = d;\n\t\t\t}\n\t\t}\n\t\tcout << color_list[indx].name << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n\nint main(){\n\twhile(1){\n\t\tchar n[9];\n\t\tint index, c[3] = {0};\n\t\tdouble min = 1000, d;\n\t\n\t\tscanf(\" %s\", n);\n\t\tif(strcmp(n, \"0\") == 0) break;\n\t\t\n\t\tfor(int i=0; i<3; i++){\n\t\t\tif(n[2*i+1] <= '9') c[i] += 16*(n[2*i+1]-'0');\n\t\t\telse c[i] += 16*(n[2*i+1]-'a'+10);\n\t\t\t\n\t\t\tif(n[2*i+2] <= '9') c[i] += n[2*i+2]-'0';\n\t\t\telse c[i] += n[2*i+2]-'a'+10;\n\t\t}\n\t\t\n\t\t/*for(int i=0; i<3; i++)\n\t\t\tprintf(\"%d \", c[i]);*/\n\t\t\n\t\tfor(int i=0; i<8; i++){\n\t\t\tint p;\n\t\t\tif(i%4==0 || i%4==1) p=0;\n\t\t\telse p=1;\n\t\t\n\t\t\td=sqrt( pow(c[0]-(i/4)*255, 2) + pow(c[1]-p*255, 2) + pow(c[2]-(i%2)*255, 2) );\n\t\t\tif(min > d){\n\t\t\t\tmin = d;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(index==0) printf(\"black\\n\");\n\t\telse if(index==1) printf(\"blue\\n\");\n\t\telse if(index==2) printf(\"lime\\n\");\n\t\telse if(index==3) printf(\"aqua\\n\");\n\t\telse if(index==4) printf(\"red\\n\");\n\t\telse if(index==5) printf(\"fuchsia\\n\");\n\t\telse if(index==6) printf(\"yellow\\n\");\n\t\telse if(index==7) printf(\"white\\n\");\n\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<string>\n#include<algorithm>\n#include <vector>\n#include<math.h>\n#include<iomanip>\n#include<set>\n\n\nusing namespace std;\n\nint a[10][4]={{0,0,0,0},{0,0,265},{0,265,0},{0,265,265},{265,0,0},{265,0,265},{265,265,0},{265,265,265}};\nint main(){\n\n\n\t\n\twhile(1){\n\tstring p;\n\tcin>>p;if(p==\"0\")return 0;\n\n\tint Y[15]={};\n\tfor(int i=1;i<p.size();i++){\n\t\tif(p[i]>='0'&&p[i]<='9')Y[i]=p[i]-'0';\n\t\telse {Y[i]=10;Y[i]+=p[i]-'a';\n\t\t}\n\t}\n\tint X[5]={};\n\tfor(int i=0;i<3;i++){\n\t\tX[i]+=16*Y[2*i+1];\n\t\tX[i]+=Y[2*i+2];\n\t}\n\tdouble ans=0,Bst=9999;\n\tint k=0;\n\tdouble c0=X[0],c1=X[1],c2=X[2];\n\tfor(int i=0;i<8;i++){\n\t\tdouble A=a[i][0]-c0,B=a[i][1]-c1,C=a[i][2]-c2;\n\t\t\n\t\tans=sqrt(A*A+B*B+C*C);\n\t\tif(ans<Bst){Bst=ans;k=i;}\n\t}\n\tif(k==7)cout<<\"white\"<<endl;\n\telse if(k==6)cout<<\"yellow\"<<endl;\n\telse if(k==5)cout<<\"fuchsia\"<<endl;\n\telse if(k==4)cout<<\"red\"<<endl;\n\telse if(k==3)cout<<\"aqua\"<<endl;\n\telse if(k==2)cout<<\"lime\"<<endl;\n\telse if(k==1)cout<<\"blue\"<<endl;\n\telse if(k==0)cout<<\"black\"<<endl;\n\t}\n\t}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<cstring>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define REP(n) rep(i,n)\n#define all(n) n.begin(),n.end()\n\nconst int FF = 255, F  = 16;\n\nstring name[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nint R[] = { 0, 0, 0, 0, FF, FF, FF, FF};\nint G[] = { 0, 0, FF, FF, 0, 0, FF, FF};\nint B[] = { 0, FF, 0, FF, 0, FF, 0, FF};\n\nint num(char t)\n{\n    if(t >='0' && t <= '9') return t - '0';\n    else return t - 'a' + 10;\n}\nint f(int n) { return n * n;}\n\nint main()\n{\n    string s;\n    while(cin >> s)\n    {\n        if(s == \"0\") break;\n\n        int mind = FF * FF * F, d = 0, ans = 0;\n        REP(8)\n        {\n            d = f(R[i] -( num(s[1]) * F + num(s[2]) )) + f(G[i]-(num(s[3])*F + num(s[4]))) + f(B[i] - (num(s[5])*F + num(s[6])));\n            if(mind > d) { ans = i; mind = d;}\n        }\n        cout << name[ans] << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring colors[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nint c(char ch) {\n  if(isdigit(ch)) return ch-'0';\n  return ch-'a'+10;\n}\n\nint d(string s) {\n  return c(s[0])*16 + c(s[1]);\n}\n\nint main() {\n  \n  int colR[8];\n  int colG[8];\n  int colB[8];\n  \n  colR[0] = d(\"00\"); colG[0] = d(\"00\"); colB[0] = d(\"00\");\n  colR[1] = d(\"00\"); colG[1] = d(\"00\"); colB[1] = d(\"ff\");\n  colR[2] = d(\"00\"); colG[2] = d(\"ff\"); colB[2] = d(\"00\");\n  colR[3] = d(\"00\"); colG[3] = d(\"ff\"); colB[3] = d(\"ff\");\n  colR[4] = d(\"ff\"); colG[4] = d(\"00\"); colB[4] = d(\"00\");\n  colR[5] = d(\"ff\"); colG[5] = d(\"00\"); colB[5] = d(\"ff\");\n  colR[6] = d(\"ff\"); colG[6] = d(\"ff\"); colB[6] = d(\"00\");\n  colR[7] = d(\"ff\"); colG[7] = d(\"ff\"); colB[7] = d(\"ff\");\n  \n  /*\n  for(int i=0; i<8; i++) {\n    colR[i] = i & 1 ? 255 : 0;\n    colG[i] = i & 2 ? 255 : 0;\n    colB[i] = i & 4 ? 255 : 0;\n  }\n  */\n  \n  string s;\n  \n  while(cin >> s) {\n    if(s == \"0\") break;\n    \n    s = s.substr(1);\n    \n    int R = d(s.substr(0, 2));\n    int G = d(s.substr(2, 2));\n    int B = d(s.substr(4, 2));\n    \n    int minD = (int)1e9;\n    int id = -1;\n    for(int i=0; i<8; i++) {\n      if( minD > pow(R-colR[i],2.0) + pow(G-colG[i],2.0) + pow(B-colB[i],2.0) ) {\n\tid = i;\n\tminD = pow(R-colR[i],2.0) + pow(G-colG[i],2.0) + pow(B-colB[i],2.0);\n      }\n    }\n    \n    cout << colors[id] << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint colorCalc(char c1, char c2)\n{\n\tint color = 0;\n\tif('a' <= c1 && c1 <= 'f')\n\t{\n\t\tcolor += (c1 - 'a' + 10) * 16;\n\t}\n\telse\n\t{\n\t\tcolor += (c1 - '0') * 16;\n\t}\n\tif('a' <= c2 && c2 <= 'f')\n\t{\n\t\tcolor += c2 - 'a' + 10;\n\t}\n\telse\n\t{\n\t\tcolor += c2 - '0';\n\t}\n\treturn(color);\n}\nvoid solve()\n{\n\tint colors[][4] = {{{0},   {0},   {0},}, {{0},   {0},   {255},}, {{0},   {255}, {0},}, {{0},   {255}, {255},}, {{255}, {0},   {0},}, {{255}, {0},   {255},}, {{255}, {255}, {0},}, {{255}, {255}, {255},}};\n\tstring name[9] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\tstring str;\n\twhile(cin >> str, str != \"0\")\n\t{\n\t\tint r = colorCalc(str[1], str[2]);\n\t\tint g = colorCalc(str[3], str[4]);\n\t\tint b = colorCalc(str[5], str[6]);\n\t\tint min = 999999999;\n\t\tint label = 0;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tint sum = sqrt((double)(r - colors[i][0]) * (r - colors[i][0]) + (g - colors[i][1]) * (g - colors[i][1]) + (b - colors[i][2]) * (b - colors[i][2]));\n\t\t\tif(sum < min)\n\t\t\t{\n\t\t\t\tmin = sum;\n\t\t\t\tlabel = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[label] << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nstring str;\nconst string color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\n\t\t\t \"yellow\",\"white\"};\nconst string strong[8] = {\"#000000\",\"#0000ff\",\"#00ff00\",\"#00ffff\",\"#ff0000\",\n\t\t\t  \"#ff00ff\",\"#ffff00\",\"#ffffff\"};\n\nint change(char ch){\n  if('0' <= ch && ch <= '9'){\n    return ch - '0';\n  }\n  return 10 + (ch - 'a');\n}\n\nint d(string str1,string str2){\n  int R1 = change(str1[1])*16 + change(str1[2]);\n  int G1 = change(str1[3])*16 + change(str1[4]);\n  int B1 = change(str1[5])*16 + change(str1[6]);\n\n  int R2 = change(str2[1])*16 + change(str2[2]);\n  int G2 = change(str2[3])*16 + change(str2[4]);\n  int B2 = change(str2[5])*16 + change(str2[6]);\n\n  int res = pow(R1-R2,2.0) + pow(G1-G2,2.0) + pow(B1-B2,2.0);\n\n  return res;\n}\n\n#define INF (1<<29)\n\nint main(){\n  while(cin >> str , str != \"0\"){\n    int min_ = INF,ans;\n    for(int i = 0 ; i < 8 ; i++){\n      int dist = d(str,strong[i]);\n      if(dist < min_){\n\tmin_ = dist;\n\tans = i;\n      }\n    }\n    cout << color[ans] << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<cstring>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define REP(n) rep(i,n)\n#define all(n) n.begin(),n.end()\n\nconst int FF = 255, F  = 16;\n\nstring name[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"while\"};\nint R[] = { 0, 0, 0, 0, FF, FF, FF, FF};\nint G[] = { 0, 0, FF, FF, 0, 0, FF, FF};\nint B[] = { 0, FF, 0, FF, 0, FF, 0, FF};\n\nint num(char t)\n{\n    if(t >='0' && t <= '9') return t - '0';\n    else return t - 'a' + 10;\n}\nint f(int n) { return n * n;}\n\nint main()\n{\n    string s;\n    while(cin >> s)\n    {\n        if(s == \"0\") break;\n\n        int mind = FF * FF * F, d = 0, ans = 0;\n        REP(8)\n        {\n            d = f(R[i] -( num(s[1]) * F + num(s[2]) )) + f(G[i]-(num(s[3])*F + num(s[4]))) + f(B[i] - (num(s[5])*F + num(s[6])));\n            if(mind > d) { ans = i; mind = d;}\n        }\n        cout << name[ans] << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<math.h>\n\nusing namespace std;\n\nmap<int, int> MR;\nmap<int, int> MG;\nmap<int, int> MB;\n\nvoid make(){\n  MR[0] = 0;\n  MG[0] = 0;\n  MB[0] = 0;\n  MR[1] = 0;\n  MG[1] = 0;\n  MB[1] = 225;\n  MR[2] = 0;\n  MG[2] = 255;\n  MB[2] = 0;\n  MR[3] = 0;\n  MG[3] = 255;\n  MB[3] = 255;\n  MR[4] = 255;\n  MG[4] = 0;\n  MB[4] = 0;\n  MR[5] = 255;\n  MG[5] = 0;\n  MB[5] = 255;\n  MR[6] = 255;\n  MG[6] = 255;\n  MB[6] = 0;\n  MR[7] = 255;\n  MG[7] = 255;\n  MB[7] = 255;\n}\n\nint main(){\n\n  make();\n\n  char in[2];\n  int status = 0;\n\n  while(cin >> in[0]){\n    if(in[0] == '0') break;\n\n    int r, g, b;\n\n    for(int i = 0; i < 3; i++){\n      \n      cin >> in[0] >> in[1];\n\n      for(int j = 0; j <= 1; j++){\n\tif(in[j] == 'a') in[j] == ':';\n\tif(in[j] == 'b') in[j] == ';';\n\tif(in[j] == 'c') in[j] == '<';\n\tif(in[j] == 'd') in[j] == '=';\n\tif(in[j] == 'e') in[j] == '>';\n\tif(in[j] == 'f') in[j] == '?';\n      }\n\n      if(i == 0) r = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 1) g = (in[0] - 48) * 16 + (in[1] - 48);\n      if(i == 2) b = (in[0] - 48) * 16 + (in[1] - 48);\n    }\n\n    double d;\n    int min, then;\n\n    for(int j = 0; j < 8; j++){\n      d = sqrt((r - MR[j])*(r - MR[j])+(g - MG[j])*( g - MG[j])+(b - MB[j])*(b - MB[j]));\n\n      // cout << d << endl;\n      if(j == 0 || min > d){\n\tmin = d;\n\tthen = j;\n      }\n    }\n\n    if(then == 0) cout << \"black\" <<endl;\n    if(then == 1) cout << \"blue\" <<endl;\n    if(then == 2) cout << \"lime\" <<endl;\n    if(then == 3) cout << \"aqua\" <<endl;\n    if(then == 4) cout << \"red\" <<endl;\n    if(then == 5) cout << \"fuchsia\" <<endl;\n    if(then == 6) cout << \"yellow\" <<endl;\n    if(then == 7) cout << \"white\" <<endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint to10(const string &s) {\n  int x = 0;\n  for(int i = 0; i < s.size(); ++i) {\n    int d;\n    if(isdigit(s[i])) d = s[i] - '0';\n    else d = 10 + s[i] - 'a';\n    x = x * 16 + d;\n  }\n  return x;\n}\n\nvector<int> conv(const string &s) {\n  vector<int> res(3);\n  res[0] = to10(s.substr(1,2));\n  res[1] = to10(s.substr(3,2));\n  res[2] = to10(s.substr(5,2));\n  return res;\n}\n\nint norm(vector<int> a, vector<int> b) {\n  int res = 0;\n  for(int i = 0; i < 3; ++i) {\n    int sub = a[i] - b[i];\n    res += sub * sub;\n  }\n  return res;\n}\n\n\nint main() {\n  vector<string> name;\n  vector<vector<int> > v;\n  name.push_back(\"black\");\n  v.push_back(conv(\"#000000\"));\n  name.push_back(\"blue\");\n  v.push_back(conv(\"#0000ff\"));\n  name.push_back(\"lime\");\n  v.push_back(conv(\"#00ff00\"));\n  name.push_back(\"aqua\");\n  v.push_back(conv(\"#00ffff\"));\n  name.push_back(\"red\");\n  v.push_back(conv(\"#ff0000\"));\n  name.push_back(\"fuchsia\");\n  v.push_back(conv(\"#ff00ff\"));\n  name.push_back(\"yellow\");\n  v.push_back(conv(\"#ffff00\"));\n  name.push_back(\"white\");\n  v.push_back(conv(\"#ffffff\"));\n  string s;\n  while(cin >> s && s != \"0\") {\n    vector<int> x = conv(s);\n    int k = 0;\n    for(int i = 1; i < v.size(); ++i) {\n      if(norm(x, v[i]) < norm(x, v[k])) {\n        k = i;\n      }\n    }\n    cout << name[k] << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <climits>\n//#include <fstream>\n\nusing namespace std;\n\nint hex2dec (char c)\n{\n\tif (isdigit(c) ){\n\t\treturn (c - '0');\n\t} // end if\n\treturn (c - 'a' + 10 );\n}\n\nint main()\n{\n\tconst string color[] = {\n\"black\",//\t 00\t 00\t 00\n\"blue\",//\t 00\t 00\t ff\n\"lime\",//\t 00\t ff\t 00\n\"aqua\",//\t 00\t ff\t ff\n\"red\",//\t ff\t 00\t 00\n\"fuchsia\",// ff\t 00\t ff\n\"yellow\",//\t ff\t ff\t 00\n\"white\"//\t ff\t ff\t ff\n};\n\tconst int code[][3] = {\n/* black */\t {0x00, 0x00, 0x00 },\n/* blue */\t {0x00, 0x00,\t0xff },\n/* lime */\t {0x00, 0xff,\t0x00 },\n/* aqua */\t {0x00, 0xff,\t0xff },\n/* red\t*/\t {0xff, 0x00,\t0x00 },\n/* fuchsia */  {0xff, 0x00,\t0xff },\n/* yellow */\t {0xff, 0xff,\t0x00 },\n/* white */\t {0xff, 0xff,\t0xff }\n};\n\n//\tcut here before submit \n//\tfreopen (\"testcase.whatcolor\", \"r\", stdin );\n\tstring str = \"\";\n\n\twhile (getline (cin, str ) ){\n\t\tint len = str.length();\n\n\t\tif (len == 1 && str[0] == '0'){\n\t\t\tbreak;\n\t\t} // end if\n\n\t\tvector <int> C (3, 0 ); // Red, Green, Blue order\n\t\tint i,j;\n\n\t\tfor (i = 0; i < 3; ++i){\n\t\t\tC[i] = hex2dec(str[2*i+1])*16 + hex2dec(str[2*i+2]);\n\t\t} // end for\n\n\t\tint minV = INT_MAX;\n\t\tint res = -1;\n\t\tfor (i = 0; i\t< sizeof (color)/sizeof(color[0] ); ++i){\n\t\t\tint dd = 0;\n\t\t\tfor (j = 0; j < 3; ++j){\n\t\t\t\tdd += (code[i][j] - C[j])*(code[i][j] - C[j]);\n\t\t\t} // end for\n\t\t\t\n\t\t\tif (minV > dd ){\n\t\t\t\tminV = dd;\n\t\t\t\tres = i;\n\t\t\t} // end if\n\t\t} // end for\n\t\t\n\t\tcout << color[res] << endl;\n\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n \nconst int INF = 10000000;\n \nint base16(char c) {\n  if( 'a' <= c ) return c-'a'+10;\n  else return c-'0';\n}\n \nint main() {\n \n  string s;\n \n  int coltabel[8][3] = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n             { 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n             { 255, 255, 0 }, { 255, 255, 255 } };\n \n  string nametable[8] = { \"black\", \"blue\", \"lime\", \"aqua\",\n             \"red\", \"fuchsia\", \"yellow\", \"white\" };\n \n  while(true) {\n \n    cin>>s;\n    if( s==\"0\" ) break;\n \n    int r,g,b;\n    r = base16(s[1])*16+base16(s[2]);\n    g = base16(s[3])*16+base16(s[4]);\n    b = base16(s[5])*16+base16(s[6]);\n \n    int res,tmp=INF,t;\n \n    for(int i=0; i<8; i++) {\n      if( ( t = (r-coltabel[i][0])*(r-coltabel[i][0])\n      + (g-coltabel[i][1])*(g-coltabel[i][1])\n      + (b-coltabel[i][2])*(b-coltabel[i][2]) )\n      < tmp ) {\n    //cout<<t<<\" \"<<i<<endl;\n    res = i;\n    tmp = t;\n      }\n    }\n \n    cout<<nametable[res]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\n#define N 8\nstring table[N] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nstruct Color{ string R, G, B;};\n\nColor colors[N];\n\nint convert(string hex){\n    int p = 1, sum = 0;\n    for ( int i = hex.size()-1; i >= 0; i--, p *= 16 ){\n\tsum += p*((isdigit(hex[i]))?(hex[i]-'0'):(hex[i]-'a'+10));\n    }\n    return sum;\n}\n\ndouble getDistance(Color c1, Color c2){\n    int dr = convert(c1.R) - convert(c2.R);\n    int dg = convert(c1.G) - convert(c2.G);\n    int db = convert(c1.B) - convert(c2.B);\n    return sqrt(dr*dr + dg*dg + db*db);\n}\n\nmain(){\n    for ( int i = 0; i < N; i++ ) colors[i].R = colors[i].G = colors[i].B = \"00\";\n    colors[1].B = \"ff\";\n    colors[2].G = \"ff\";\n    colors[3].B = \"ff\";\n    colors[3].G = \"ff\";\n    colors[4].R = \"ff\";\n    colors[5].R = \"ff\";\n    colors[5].B = \"ff\";\n    colors[6].R = \"ff\";\n    colors[6].G = \"ff\";\n    colors[7].R = \"ff\";\n    colors[7].G = \"ff\";\n    colors[7].B = \"ff\";\n    string hex;\n    while( cin >> hex && hex != \"0\"){\n\tstring ans = \"\";\n\tdouble sub = (1<<30);\n\tColor target;\n\ttarget.R = hex.substr(1, 2);\n\ttarget.G = hex.substr(3, 2);\n\ttarget.B = hex.substr(5, 2);\n\tfor ( int i = 0; i < N; i++ ){\n\t    double d = getDistance(colors[i], target);\n\t    if ( d < sub ){\n\t\tsub = d;\n\t\tans = table[i];\n\t    }\n\t}\n\tcout << ans << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int sixteen[200]={};\n    for(int i=0;i<10;i++)sixteen[i]=i;\n    for(int i=0;i<6;i++)sixteen['a'-'0'+i]=10+i;\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=sixteen[str[1+2*i]-'0']*16+sixteen[str[2+2*i]-'0'];\n        int ans[8]={};\n        for(int i=0;i<8;i++){\n            for(int j=0;j<3;j++)ans[i]+=(colornum[i][j]-num[j])*(colornum[i][j]-num[j]);\n            ans[i]=sqrt(ans[i]);\n        }\n        int co=0;\n        for(int i=1;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <iostream>\n#include <complex>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <cmath>\n#include <math.h>\n#include <numeric>\n#include <list>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <climits>\n#include <set>\n#include <memory.h>\n#include <memory>\n#include <cstdio>\n#include <cstdlib>\n#include <cctype>\n#include <cassert>\n#include <map>\n#include <cassert>\n#include <time.h>\n#include <ctime>\n\nusing namespace std;\n\ntypedef complex<double> xy_t;\ntypedef pair<xy_t, xy_t> line;\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int , P> PP;\ntypedef pair<int, string> Ps;\ntypedef vector<int> vec;\ntypedef vector<vec> mat;\nconst int INF = 1 << 30;\nconst double EPS = 1e-9;\nconst double PI = 3.1415926535897932384626433832795;\nconst int CLK = CLOCKS_PER_SEC;\n\n#define rep(i, n) for(int i = 0; i < n; i++)\n#define rep2(i, m, n) for(int i = m; i < n; i++)\n\nstring cs[] = {\n\t\"black\", \"blue\", \"lime\", \"aqua\",\n\t\"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nint rs[] = {\n\t0, 0, 0, 0, 255, 255, 255, 255\n};\n\nint gs[] = {\n\t0, 0, 255, 255, 0, 0, 255, 255\n};\n\nint bs[] = {\n\t0, 255, 0, 255, 0, 255, 0, 255,\n};\n\nint get_num(char c1, char c2){\n\tint res = 0;\n\tif(isdigit(c1)) res += c1 - '0';\n\telse res += c1 - 'a' + 10;\n\tres *= 16;\n\tif(isdigit(c2)) res += c2 - '0';\n\telse res += c2 - 'a' + 10;\n\treturn res;\n}\n\nint pow(int n){ return n * n;}\n\nint get_d(int id, int r, int g, int b){\n\treturn pow(rs[id] - r) + pow(gs[id] - g) + pow(bs[id] - b);\n}\n\nint main(){\n\tstring s;\n\tint r, g, b;\n\twhile(cin >> s && s != \"0\"){\n\t\tint best;\n\t\tint p = INF;\n\t\tr = get_num(s[1], s[2]);\n\t\tg = get_num(s[3], s[4]);\n\t\tb = get_num(s[5], s[6]);\n\t\trep(i, 8){\n\t\t\tint c = get_d(i, r, g, b);\n\t\t\tif(c < p){\n\t\t\t\tbest = i;\n\t\t\t\tp = c;\n\t\t\t}\n\t\t}\n\t\tcout << cs[best] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define INF 2100000000\nusing namespace std;\nint main(void)\n{\n\tchar color[8][15]={\"black\",\"blue\",\"lime\",\"aqua\",\n\t\t\t\t  \"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tint i,j,k,a,b,c,mini;\n\tint suu[16]={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n\tint red[8]={0,0,0,0,255,255,255,255},\n\t\tlime[8]={0,0,255,255,0,0,255,255},\n\t\tblue[8]={0,255,0,255,0,255,0,255};\n\tchar sin[17]={\"0123456789abcdef\"};\n\tchar pu[8];\n\twhile(1) {\n\t\tcin>>pu;\n\t\tif(pu[0]=='0') break;\n\t\ta=b=c=0;\n\t\tfor(i=1;i<8;i++) {\n\t\t\tfor(j=0;j<16;j++) {\n\t\t\t\tif(pu[i]==sin[j]) {\n\t\t\t\t\tif(i<=2) {\n\t\t\t\t\t\tif(i%2==1)a+=suu[j]*16;\n\t\t\t\t\t\telse a+=suu[j];\n\t\t\t\t\t}\n\t\t\t\t\telse if(i<=4) {\n\t\t\t\t\t\tif(i%2==1) b+=suu[j]*16;\n\t\t\t\t\t\telse b+=suu[j];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(i%2==1) c+=suu[j]*16;\n\t\t\t\t\t\telse c+=suu[j];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmini=INF;\n\t\tint d,x;\n\t\tfor(i=0;i<8;i++) {\n\t\t\td=sqrt(((a-red[i])*(a-red[i]))+\n\t\t\t\t\t((b-lime[i])*(b-lime[i]))+\n\t\t\t\t\t((c-blue[i])*(c-blue[i])));\n\t\t\tif(mini>d) {\n\t\t\t\tmini=d;\n\t\t\t\tx=i;\n\t\t\t}\n\t\t}\n\t\tcout<<color[x]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S, x[2][2][2] = { {{\"black\",\"blue\"}, {\"lime\",\"aqua\"}}, { {\"red\",\"fuchsia\"}, {\"yellow\",\"white\"} } };\nchar T[9] = \"89abcdef\";\nint a, b, c;\nint main() {\n\twhile (true) {\n\t\ta = 0; b = 0; c = 0;\n\t\tcin >> S;\n\t\tif (S == \"0\") { break; }\n\t\tfor (int i = 0; i < 8; i++){\n\t\t\tif (T[i] == S[1]) {\n\t\t\t\ta = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[3]) {\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[5]) {\n\t\t\t\tc = 1;\n\t\t\t}\n\t\t}\n\t\tcout << x[a][b][c] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <iostream>\nusing namespace std;\n\nint parse(string s){\n\tint tmp = 0;\n\tif(s[0] >= 'a' && s[0] <= 'f') tmp = s[0] - 'a' + 10;\n\telse tmp = s[0] - '0';\n\tif(s[1] >= 'a' && s[1] <= 'f') tmp = tmp * 16 + s[1] - 'a' + 10;\n\telse tmp = tmp * 16 + s[1] - '0';\n\treturn tmp;\n}\n\nint main(){\n\tstring s;\n\tstring name[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tint color[3][8] = {{0,0,0,0,255,255,255,255},{0,0,255,255,0,0,255,255},{0,255,0,255,0,255,0,255}};\n\twhile(1){\n\t\tint d[8] = {};\n\t\tcin >> s;\n\t\tif(s == \"0\") break;\n\t\tfor(int i = 0;i < 3;i++){\n\t\t\tint num = parse(s.substr(i * 2 + 1,2));\n\t\t\tfor(int j = 0;j < 8;j++){\n\t\t\t\td[j] += (num - color[i][j]) * (num - color[i][j]);\n\t\t\t}\n\t\t}\n\t\tint mi = 1e+9,clr;\n\t\tfor(int i = 0;i < 8;i++){\n\t\t\tif(mi > d[i]){\n\t\t\t\tmi = d[i];\n\t\t\t\tclr = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[clr] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint colorCalc(char c1, char c2)\n{\n\tint color = 0;\n\tif('a' <= c1 && c1 <= 'f')\n\t{\n\t\tcolor += (c1 - 'a' + 10) * 16;\n\t}\n\telse\n\t{\n\t\tcolor += (c1 - '0') * 16;\n\t}\n\tif('a' <= c2 && c2 <= 'f')\n\t{\n\t\tcolor += c2 - 'a' + 10;\n\t}\n\telse\n\t{\n\t\tcolor += c2 - '0';\n\t}\n\treturn(color);\n}\nvoid solve()\n{\n\tint colors[9][4] = {{{0},   {0},   {0}}, \n\t\t\t\t\t\t{{0},   {0},   {255}}, \n\t\t\t\t\t\t{{0},   {255}, {0}}, \n\t\t\t\t\t\t{{0},   {255}, {255}}, \n\t\t\t\t\t\t{{255}, {0},   {0}}, \n\t\t\t\t\t\t{{255}, {0},   {255}}, \n\t\t\t\t\t\t{{255}, {255}, {0}}, \n\t\t\t\t\t\t{{255}, {255}, {255}}};\n\tstring name[9] = {\"black\", \n\t\t\t\t\t  \"blue\", \n\t\t\t\t\t  \"lime\", \n\t\t\t\t\t  \"aqua\", \n\t\t\t\t\t  \"red\", \n\t\t\t\t\t  \"fuchsia\", \n\t\t\t\t\t  \"yellow\", \n\t\t\t\t\t  \"white\"};\n\tstring str;\n\twhile(cin >> str, str != \"0\")\n\t{\n\t\tint r = colorCalc(str[1], str[2]);\n\t\tint g = colorCalc(str[3], str[4]);\n\t\tint b = colorCalc(str[5], str[6]);\n\t\tint min = 999999999;\n\t\tint label = 0;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tint sum = sqrt((double)(r - colors[i][0]) * (r - colors[i][0]) + (g - colors[i][1]) * (g - colors[i][1]) + (b - colors[i][2]) * (b - colors[i][2]));\n\t\t\tif(sum < min)\n\t\t\t{\n\t\t\t\tmin = sum;\n\t\t\t\tlabel = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[label] << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\nusing namespace std;\nint HtoD(char c){\n\tif('0'<=c&&c<='9')return c-'0';\n\tif('A'<=c&&c<='F')return c-'A'+10;\n\tif('a'<=c&&c<='f')return c-'a'+10;\n\treturn 0;\n}\nint main(){\n\tconst int BCOL[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\tconst string BCOLN[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tstring s;\n\twhile(cin>>s){\n\t\tif(s[0]=='0')break;\n\t\tint r=(HtoD(s[1])<<4)+HtoD(s[2]),g=(HtoD(s[3])<<4)+HtoD(s[4]),b=(HtoD(s[5])<<4)+HtoD(s[6]);\n\t\tint mind=195075;\n\t\tint outn=0;\n\t\tfor(int i=7;i>=0;--i){\n\t\t\tint d = (r-BCOL[i][0])*(r-BCOL[i][0])+(g-BCOL[i][1])*(g-BCOL[i][1])+(b-BCOL[i][2])*(b-BCOL[i][2]);\n\t\t\tif(d<=mind){\n\t\t\t\tmind = d;\n\t\t\t\toutn = i;\n\t\t\t}\n\t\t}\n\t\tcout<<BCOLN[outn]<<\"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <sstream>\n#include <cassert>\nusing namespace std;\nstatic const double EPS = 1e-5;\ntypedef long long ll;\ntypedef pair<int,int> PI;\ntypedef vector<int> vi;\n#define rep(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n\nmain(){\n  char c;\n  while(~scanf(\" %c \",&c)){\n    if(c=='0')break;\n\n    int r,g,b;\n    scanf(\"%2x%2x%2x\",&r,&g,&b);\n    int R[8],G[8],B[8];\n    rep(i,8){\n      R[i]=i/4*0xff;\n      G[i]=i/2%2*0xff;\n      B[i]=i%2*0xff;\n    }\n    string str[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\n      \"yellow\",\"white\"};\n\n    double mind=sqrt(256*256*3)+1;\n    int mini;\n    rep(i,8){\n      double td=sqrt((r-R[i])*(r-R[i])+(g-G[i])*(g-G[i])+(b-B[i])*(b-B[i]));\n      if(td<mind){\n        mind=td;\n        mini=i;\n      }\n    }\n    cout<<str[mini]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define for_(i,a,b) for(int i=(a);i<(b);++i)\n\nint rgb[8][3] = {\n\t{0, 0, 0},\n\t{0, 0, 255},\n\t{0, 255, 0},\n\t{0, 255, 255},\n\t{255, 0, 0},\n\t{255, 0, 255},\n\t{255, 255, 0},\n\t{255, 255, 255}\n};\n\nstring name[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint sqr(int x) { return x * x; }\n\nvoid search(string str) {\n\tstring input = str.substr(1, 2) + \" \" + str.substr(3, 2) + \" \" + str.substr(5, 2);\n\t\n\tint col[3];\n\tsscanf(input.c_str(), \"%x %x %x\", &col[0], &col[1], &col[2]);\n\t\n\tint min_dst = 1L << 30, ans = -1;\n\t\n\tfor_(i,0,8) {\n\t\tint dst = 0;\n\t\t\n\t\tfor_(j,0,3) {\n\t\t\tdst += sqr(rgb[i][j] - col[j]);\n\t\t}\n\t\t\n\t\tif (min_dst > dst) {\n\t\t\tmin_dst = dst;\n\t\t\tans = i;\n\t\t}\n\t}\n\t\n\tcout << name[ans] << endl;\n}\n\nint main() {\n\tstring str;\n\twhile (cin >> str, str != \"0\") search(str);\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <utility>\n#include <cctype>\n#include <vector>\n#include <string>\n#include <cfloat>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\n#ifdef __linux\n#define _U(s) s##_unlocked\n#else\n#define _U(s) _##s##_nolock\n#define _CRT_DISABLE_PERFCRIT_LOCKS\n#endif\n#define gcu _U(getchar)\n#define pcu _U(putchar)\n#define _DEF(r, n, ...) inline r n(__VA_ARGS__) noexcept\n#define _T template <typename T>\n#define _HT template <typename H,typename... T>\n#define _OP(t) inline operator t()\nstruct _in {\n#ifdef _GLIBCXX_STRING\n\t_OP(string){string s;for(char c;c=gcu(),c!=' '&&c!='\\n'&&c!=EOF;)s+=c;return s;}\n#define _S\n#endif\n\t_OP(char){char c=gcu();gcu();return c;}\n\t_OP(double){double d; scanf(\"%lf\",&d); gcu();return d;}\n\t_T _OP(T){T n{},m{1},c;while(isspace(c = gcu()));if(c=='-')m=-1,c=gcu();do{n=10*n+(c-'0'),c=gcu();}while(c>='0'&&c<='9');return m*n;}\n} in;\n#define _SCAN(...) _DEF(bool,scan,__VA_ARGS__)\n#ifdef _S\n_SCAN(string &o) {int c{gcu()};if(c==EOF)return false;else{ungetc(c,stdin);string t=move(in);o=t;return true;}}\n#endif\n_T _SCAN(T &o) {int c{gcu()};return c==EOF?false:(ungetc(c,stdin),o=in,true);}\n_HT _SCAN(H &h,T&&... t){return scan(h)&&scan(t...);}\n#define _OUT(...) _DEF(void,out,__VA_ARGS__)\n#define _OUTL(...) _DEF(void,outl,__VA_ARGS__)\n_OUT(bool b){pcu('0'+b);}\n_OUT(const char *s){while(*s)pcu(*s++);}\n_OUT(char c){pcu(c);}\n#ifdef _S\n_OUT(string &s){for(char c:s)pcu(c);}\n#endif\n_T _OUT(T n){static char b[20];char *p=b;T m=n<0?pcu('-'),-1:1;\n\tif(!n)*p++='0';else while(n)*p++=(char)(n%10*m+'0'),n/=10;while(p!=b)pcu(*--p);}\n_OUTL(){out('\\n');}\n#ifdef _GLIBCXX_VECTOR\n\t_T _OUT(vector<T> &v){for(T &x:v)out(&x == &v[0]?\"\":\" \"),out(x);}\n#endif\n\t_HT _OUT(H &&h, T... t){out(h);out(t...);}\n\ttemplate <typename... T> _OUTL(T... t){out(t...);outl();}\n\tstruct range{\n\t\tint e,b=0,s=1;range(int _b,int _e,int _s):e(_e),b(_b),s(_s){} range(int _b,int _e): e(_e), b(_b){} range(int _e):e(_e){}\n\t\tstruct it{int v,s; it(int _v,int _s):v(_v),s(_s){} operator int()const{return v;} operator int&(){return v;}int operator*()const{return v;}\n\t\t\tit& operator++(){v+=s;return *this;} }; it begin(){return {b,s};} it end(){return {e,s};}};\n#define times(i,n) for(int i=n;i;i--)\n\nstruct C {\n\tint r, g, b;\n};\n\nint sq(int n) {\n\treturn n * n;\n}\n\nint main() {\n\tvector<C> t {{0x00, 0x00, 0x00}, {0x00, 0x00, 0xff}, {0x00, 0xff, 0x00}, {0x00, 0xff, 0xff},\n\t\t{0xff, 0x00, 0x00}, {0xff, 0x00, 0xff}, {0xff, 0xff, 0x00}, {0xff, 0xff, 0xff}};\n\tvector<string> S{\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\tfor (int r, g, b; scanf(\"#%2x%2x%2x\\n\", &r, &g, &b);) {\n\t\tdouble m {DBL_MAX}, i {};\n\t\tfor (int j: range(t.size())) {\n\t\t\tdouble s = sqrt(sq(r - t[j].r) + sq(g - t[j].g) + sq(b - t[j].b));\n\t\t\tif (s < m)\n\t\t\t\tm = s, i = j;\n\t\t}\n\t\toutl(S[i]);\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\nusing namespace std;\n\nint Conv(char c1, char c2){\n\treturn (c1-'0')*0x10 + (c2-'0');\n}\ndouble dist(int R, int G, int B, int rR, int rG, int rB){\n\treturn sqrt( pow(R-rR,2.0) + pow(G-rG,2.0) + pow(B-rB,2.0) );\n}\nstring judge(int R, int G, int B ){\n\tdouble min_dist = 65536;\n\tstring color;\n\n\tdouble r;\n\t\n\tr = dist( R, G, B, 0, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"black\";\n\t}\n\tr = dist( R, G, B, 0, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"blue\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"lime\";\n\t}\n\tr = dist( R, G, B, 0, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"aqua\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"red\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"fuchsia\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0 );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"yellow\";\n\t}\n\tr = dist( R, G, B, 0xFF, 0xFF, 0xFF );\n\tif( min_dist > r ){\n\t\tmin_dist = r;\n\t\tcolor = \"white\";\n\t}\n\treturn color;\n}\n\nint main(){\n\twhile( true ){\n\t\tint R;\n\t\tint G;\n\t\tint B;\n\t\tstring s;\n\t\tcin>>s;\n\t\tif(s.compare(\"0\")==0)break;\n\t\tR = Conv(s[1],s[2]); G = Conv(s[3],s[4]); B = Conv(s[5],s[6]);\n\t\tcout << judge(R,G,B) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits//stdc++.h>\nusing namespace std;\nstring s, x[2][2][2] = { {{\"black\",\"blue\"}, {\"lime\",\"aqua\"}}, { {\"red\",\"fuchsia\"}, {\"yellow\",\"white\"} } },T = \"89abcdef\";\nint main() {\n\twhile (1) {\n\t\tint a = 0, b = 0, c = 0;cin >> s;\n\t\tif (s == \"0\") { break; }\n\t\tfor (int i = 0; i < 8; i++) if (T[i] == s[1]) a++;\n\t\tfor (int i = 0; i < 8; i++) if (T[i] == s[3]) b++;\n\t\tfor (int i = 0; i < 8; i++) if (T[i] == s[5]) c++;\n\t\tcout << x[a][b][c] << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nconst int rgb[8][3] = {{0, 0, 0},\n                       {0, 0, 255},\n                       {0, 255, 0},\n                       {0, 255, 255},\n                       {255, 0, 0},\n                       {255, 0, 255},\n                       {255, 255, 0},\n                       {255, 255, 255}};\nconst string name[8] = {\"black\", \"blue\", \"lime\",\n                        \"aqua\", \"red\", \"fuchsia\",\n                        \"yellow\", \"white\"};\n\nint to_decimal(string s) \n{\n    int d[2];\n    int ret = 0;\n\n    for (int i = 0; i < 2; i++) {\n        if ('a' <= s[i] && s[i] <= 'f') \n            d[i] = s[i] - 'a' + 10;\n        else\n            d[i] = s[i] - '0';\n    }\n\n    return d[0] * 16 + d[1];\n}\n\nint main()\n{\n    string inp;\n\n    while (cin >> inp, inp != \"0\") {\n        int r, g, b;\n        int d = 200000;\n        int idx = 0;\n        \n        r = to_decimal(inp.substr(1, 2));\n        g = to_decimal(inp.substr(3, 2));\n        b = to_decimal(inp.substr(5, 2));\n\n        for (int i = 0; i < 8; i++) {\n            int tmp;\n            tmp = (r - rgb[i][0]) * (r - rgb[i][0]) + \n                (g - rgb[i][1]) * (g - rgb[i][1]) +\n                (b - rgb[i][2]) * (b - rgb[i][2]);\n\n            if (tmp < d) {\n                d = tmp;\n                idx = i;\n            }\n        }\n        cout << name[idx] << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <list>\n#include <iostream>\n#include <sstream>\n#include <climits>\n#include <cfloat>\n#include <complex>\n\nusing namespace std;\n\nint main()\n{\n\tchar* colors[] = { \"black\", \"blue\", \"lime\", \"aqua\"\n\t\t, \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\tchar buf[16];\n\twhile (cin.getline(buf, sizeof(buf)), *buf != '0')\n\t{\n\t\tint r, g, b;\n\t\tsscanf(buf, \"#%2x%2x%2x\", &r, &g, &b);\n\t\tchar* ans;\n\t\tdouble mind = 1e10;\n\t\tfor (int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tdouble rr = (i >> 2 & 1) * 0xff;\n\t\t\tdouble gg = (i >> 1 & 1) * 0xff;\n\t\t\tdouble bb = (i & 1) * 0xff;\n\t\t\tdouble d = sqrt((rr-r)*(rr-r) + (gg-g)*(gg-g) + (bb-b)*(bb-b));\n\t\t\tif (d < mind)\n\t\t\t{\n\t\t\t\tmind = d;\n\t\t\t\tans = colors[i];\n\t\t\t}\n\t\t}\n\t\tputs(ans);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<cstring>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define REP(n) rep(i,n)\n#define all(n) n.begin(),n.end()\n\nconst int FF = 255;\n\nstring name[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"while\"};\nint R[] = { 0, 0, 0, 0, FF, FF, FF, FF};\nint G[] = { 0, 0, FF, FF, 0, 0, FF, FF};\nint B[] = { 0, FF, 0, FF, 0, FF, 0, FF};\n\nint num(char t)\n{\n    if(t >='0' && t <= '9') return t - '0';\n    else return t - 'a' + 10;\n}\nint f(int n) { return n * n;}\n\nint main()\n{\n    string s;\n    while(cin >> s)\n    {\n        if(s == \"0\") break;\n\n        int mind = FF * FF * 4, d = 0, ans = 0;\n        REP(8)\n        {\n            d = f(R[i] -( num(s[1]) * 16 + num(s[2]) )) + f(G[i]-(num(s[3])*16+num(s[4]))) + f(B[i] - (num(s[5])*16 + num(s[6])));\n            if(mind > d) { ans = i; mind = d;}\n        }\n        cout << name[ans] << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define INF 1<<30\n\nint main() {\n  string color[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n  string s;\n  while(cin >> s, s!=\"0\") {\n    int rgb[3];\n    REP(i,3)\n      sscanf(s.substr(i*2+1,2).c_str(), \"%x\", rgb+i);\n    \n    int mi = INF;\n    int ans;\n    REP(i,8) {\n      int hoge = 0;\n      REP(j,3) {\n        if (i>>j & 1)\n          hoge += pow(255 - rgb[j], 2);\n        else\n          hoge += pow(rgb[j], 2);\n      }\n      if (hoge < mi) {\n        mi = hoge;\n        ans = i;\n      }\n    }\n    cout << color[ans] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <cstdlib>\nusing namespace std;\nstring color[] = {\"black\", \"blue\", \"lime\", \"aqua\",\n    \"red\", \"fuchsia\", \"yellow\", \"white\"};\nint nums[][3] = {{0,0,0}, {0,0,255}, {0,255,0}, {0,255,255},\n    {255,0,0}, {255,0,255}, {255,255,0}, {255,255,255}};\n\nint convert(string str) {\n    int res = 0;\n    if ('0'<=str[0]&&str[0]<='9') {\n        res += (str[0]-'0') * 16;\n    } else if ('a'<=str[0]&&str[0]<='f') {\n        res += (str[0]-'a'+10) * 16;\n    }\n    if ('0'<=str[1]&&str[1]<='9') {\n        res += (str[1]-'0');\n    } else if ('a'<=str[1]&&str[1]<='f') {\n        res += (str[1]-'a'+10);\n    }\n    return res;\n}\n\nint main() {\n    string str;\n    while (cin >> str) {\n        if (str == \"0\") break;\n        double d = 10000000.0;\n        string res;\n        int r = convert(str.substr(1,2)), g = convert(str.substr(3,2)), b = convert(str.substr(5,2));\n        for (int i=0; i<8; i++) {\n            double tmp = sqrt(pow(r-nums[i][0], 2)+pow(g-nums[i][1], 2)+pow(b-nums[i][2], 2));\n            if (tmp < d) {\n                d = tmp;\n                res = color[i];\n            }\n        }\n        cout << res << endl;\n    }\n}\n\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <cstdlib>\nusing namespace std;\nstring color[] = {\"black\", \"blue\", \"lime\", \"aqua\",\n    \"red\", \"fuchsia\", \"yellow\", \"white\"};\nint nums[][3] = {{0,0,0}, {0,0,255}, {0,255,0}, {0,255,255},\n    {255,0,0}, {255,0,255}, {255,255,0}, {255,255,255}};\n\nint convert(string str) {\n    int res = 0;\n    if ('0'<=str[0]&&str[0]<='9') {\n        res += (str[0]-'0') * 16;\n    } else if ('a'<=str[0]&&str[0]<='f') {\n        res += (str[0]-'a'+10) * 16;\n    }\n    if ('0'<=str[1]&&str[1]<='9') {\n        res += (str[1]-'0');\n    } else if ('a'<=str[1]&&str[1]<='f') {\n        res += (str[1]-'a'+10);\n    }\n    return res;\n}\n\nint main() {\n    string str;\n    while (cin >> str) {\n        if (str == \"0\") break;\n        double d = 10000000.0;\n        string res;\n        int r = convert(str.substr(1,2)), g = convert(str.substr(3,2)), b = convert(str.substr(5,2));\n        for (int i=0; i<8; i++) {\n            double tmp = sqrt(pow(r-nums[i][0], 2)+pow(g-nums[i][1], 2)+pow(b-nums[i][2], 2));\n            if (tmp < d) {\n                d = tmp;\n                res = color[i];\n            }\n        }\n        cout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define PB push_back\n#define MP make_pair\nusing namespace std;\ntypedef long long ll;\nint to_int(string s){\n\tint k=1,res=0;\n\tfor(int i=s.size()-1;i>=0;i--){\n\t\tif('0'<=s[i]&&s[i]<='9'){\n\t\t\tres+=k*(s[i]-'0');\n\t\t}else{\n\t\t\tres+=k*(s[i]-'a'+10);\n\t\t}\n\t\tk*=16;\n\t}\n\treturn res;\n}\n\nint main(){\n\tstring ans[2][2][2];\n\tans[0][0][0]=\"black\";\n\tans[0][0][1]=\"blue\";\n\tans[0][1][0]=\"lime\";\n\tans[0][1][1]=\"aqua\";\n\tans[1][0][0]=\"red\";\n\tans[1][0][1]=\"fuchsia\";\n\tans[1][1][0]=\"yellow\";\n\tans[1][1][1]=\"white\";\n\tstring s;\n\twhile(cin>>s&&s[0]!='0'){\n\t\tint a,b,c,dat[3];\n\t\tfor(int i=1;i<6;i+=2){\n\t\t\tstring tmp;int ans[3];\n\t\t\ttmp.assign(s,i,2);\n\t\t\tint d=to_int(tmp);\n\t\t\tif(d<=(to_int(\"ff\")-d))dat[i/2]=0;\n\t\t\telse dat[i/2]=1;\n\t\t}\n\t\tcout<<ans[dat[0]][dat[1]][dat[2]]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\n\nint main(int argc, const char * argv[]) {\n    \n    while (true) {\n        string input;\n        cin >> input;\n        if(input == \"0\"){\n            break;\n        }\n\n        int red = stoi(input.substr(1,2), NULL, 16);\n        int green = stoi(input.substr(3,2), NULL, 16);\n        int blue = stoi(input.substr(5,2), NULL, 16);\n        \n        \n        red = (red < 128) ? 0 : 255;\n        green = (green < 128) ? 0 : 255;\n        blue = (blue < 128) ? 0 : 255;\n        \n        if(red == 0){\n            if(green == 0){\n                if(blue == 0){\n                    cout << \"black\" << endl;\n                }\n                else{\n                    cout << \"blue\" << endl;\n                }\n                \n            }\n            else{\n                if(blue == 0){\n                    cout << \"lime\" << endl;\n                }\n                else{\n                    cout << \"aqua\" << endl;\n                }\n            }\n        }\n        else{\n            if(green == 0){\n                if(blue == 0){\n                    cout << \"red\" << endl;\n                }\n                else{\n                    cout << \"fuchsia\" << endl;\n                }\n                \n            }\n            else{\n                if(blue == 0){\n                    cout << \"yellow\" << endl;\n                }\n                else{\n                    cout << \"white\" << endl;\n                }\n            }\n        }\n        \n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int sixteen[200]={};\n    for(int i=0;i<10;i++)sixteen[i]=i;\n    for(int i=0;i<6;i++)sixteen['a'-'0'+i]=10+i;\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=sixteen[str[1+2*i]-'0']*16+sixteen[str[2+2*i]-'0'];\n        int ans[8]={};\n        for(int i=0;i<8;i++){\n            for(int j=0;j<3;j++)ans[i]+=(num[j]-colornum[i][j])*(num[j]-colornum[i][j]);\n            ans[i]=sqrt(ans[i]);\n        }\n        int co=0;\n        for(int i=0;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) (r).begin(),(r).end()\n#define gsort(st,en) sort((st),(en),greater<int>())\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing dict = map<string,int>;\nusing pii = pair<int,int> ;\n\nconst int mod = 1000000007;\nconstexpr int imax = ((1<<30)-1)*2+1 ;\nconstexpr int inf = 100000000;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0};\nconst int dx[] = {0,-1,0,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\ntemplate<typename T>\nvoid Unique(vector<T> &v){\n  sort(all(v));\n  v.erase(unique(all(v)),v.end());\n}\n\ntemplate<typename T>\nT ston(string& str, T n){\n  istringstream sin(str) ;\n  T num ;\n  sin >> num ;\n  return num ;\n}\nunsigned int hexToUInt(const std::string &str)\n{\n  unsigned int val = 0;\n  unsigned int v;\n  for(size_t ix = 0; ix != str.size(); ++ix) {\n    char ch = str[ix];\n    if( ch >= '0' && ch <= '9' )\n      v = ch - '0';\n    else if( ch >= 'A' && ch <= 'F' )\n      v = ch - 'A' + 10;\n    else if( ch >= 'a' && ch <= 'f' )\n      v = ch - 'a' + 10;\n    else\n      continue;    // 16?????°????????§???????????´???\n    val = val * 16 + v;\n  }\n  return val;\n}\nvoid Ans(bool f){\n  if(f) cout << \"YES\"<<endl;\n  else cout << \"NO\"<<endl;\n}\n\nconst string li[8] = {\"#000000\",\"#0000ff\",\"#00ff00\",\"#00ffff\",\"#ff0000\",\"#ff00ff\",\"#ffff00\",\"#ffffff\"};\nconst string name[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  int cola[3],colb[8][3];\n  rep(k,8){\n    string str = \"\";\n    REP(i,1,li[k].size()){\n      if(i % 2){\n        str += li[k][i];\n      }\n      else{\n        str += li[k][i];\n        colb[k][i/2-1] = hexToUInt(str);\n        str.clear();\n      }\n    }\n  }\n  while(cin >> s && s != \"0\"){\n    string str=\"\";\n    REP(i,1,s.size()){\n      if(i % 2){\n        str += s[i];\n      }\n      else{\n        str += s[i];\n        cola[i/2-1] = hexToUInt(str) ;\n        str.clear();\n      }\n    }\n    int mi = inf;\n    int suf = 0;\n    rep(i,8){\n      int d = pow((cola[0] - colb[i][0]),2) + pow((cola[1] - colb[i][1]),2)+pow((cola[2] - colb[i][2]),2);\n      if(mi > d){\n        suf = i;\n        mi = d;\n      }\n    }\n    cout << name[suf]<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int ff=255;\nint conv(char *str){\n    int ret=0;\n    for(int i=0;i<2;i++){\n        int val;\n        if(str[i]>='0'&&str[i]<='9')val=str[i]-'0';\n        else val=str[i]-'a'+10;\n        ret=(ret<<4)+val;\n    }\n    return ret;\n}\nint main(){\n    char *Name[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int rgb[3][8]={{0,0,0,0,ff,ff,ff,ff},{0,0,ff,ff,0,0,ff,ff},{0,ff,0,ff,0,ff,0,ff}};\n    char str[100];\n    while(scanf(\"%s\",str),str[0]!='0'){\n        int rgb_[3];\n        for(int i=0;i<3;i++){\n            rgb_[i]=conv(str+1+i*2);\n        }\n        int mav,mac=1e9;\n        for(int i=0;i<8;i++){\n            int val=0;\n            for(int j=0;j<3;j++)val+=(rgb_[j]-rgb[j][i])*(rgb_[j]-rgb[j][i]);\n            if(mac>val){\n                mac=val;\n                mav=i;\n            }\n        }\n        printf(\"%s\\n\",Name[mav]);\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\nint main()\n{\n\tchar*s[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"},x;\n\tint n;\n\twhile(scanf(\" %c%x\",&x,&n),x-'0')\n\t\tputs(s[((n>>16)>127)*4+((n&0xff00)>32767)*2+((n&255)>127)]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nstring in;\nconst string name[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nbool is_digit(char c) { return '0' <= c && c <= '9'; }\nint c2i(char c) { return c - '0'; }\n\nstring solve() {\n  in.erase(0, 1);\n  int my[3];\n  rep (i,3) my[i] = 0;\n  rep (i,3) {\n    if (is_digit(in[i*2])) {\n      my[i] = c2i(in[i*2]) * 16;\n    } else {\n      my[i] = (10 + (in[i*2] - 'a')) * 16;\n    }\n    \n    if (is_digit(in[i*2+1])) {\n      my[i] += c2i(in[i*2+1]);\n    } else {\n      my[i] += (10 + (in[i*2+1] - 'a'));\n    }\n  }\n  \n  double dk = double(1 << 28);\n  int l = -1;\n  rep (S,8) {\n    int ar[3], temp = 0;\n    for (int i = 2; i >= 0; --i) ar[i] = (S >> i & 1) ? 255 : 0 ;\n    rep (i,3) {\n      temp += (ar[i] - my[i]) * (ar[i] - my[i]);\n    }\n    double d = sqrt(double(temp));\n    if (dk > d) {\n      dk = d;\n      l = S;\n    }\n  }\n  return name[l];\n}\n\nint main() {\n  while (cin >> in) {\n    if (in == \"0\") break;\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<array>\n#include<bitset>\n#include<cassert>\n#include<cctype>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<functional>\n#include<limits>\n#include<list>\n#include<map>\n#include<numeric>\n#include<set>\n#include<stack>\n#include<string>\n#include<sstream>\n#include<unordered_map>\n#include<queue>\n#include<regex>\n#include<vector>\nusing namespace std;\n\n//#define int long long\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\n\n#define rep(i,a,b) for(int i=(a);i<(b);i++)\n#define rrep(i,a,b) for(int i=(b)-1;i>=(a);i--)\n#define all(a) (a).begin(),(a).end()\n#define dump(o) {cerr<<#o<<\" \"<<o<<endl;}\n#define dumpc(o) {cerr<<#o; for(auto &e:(o))cerr<<\" \"<<e;cerr<<endl;}\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\nconst int MOD = 1e9 + 7;\n\n//n??????\n//Radix r(\"0123456789abcdef\");\n//http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0208\nclass Radix {\nprivate:\n\tconst char* s;\n\tint a[128];\npublic:\n\tRadix(const char* s = \"0123456789ABCDEF\") : s(s) {\n\t\tfor (int i = 0; s[i]; i++) a[(int)s[i]] = i;\n\t}\n\t//10?????´??° ??? n???????????????\n\tstring format(long long x, int n) {\n\t\tif (!x) return \"0\";\n\t\tchar t[64] = {};\n\t\tint i;\n\t\tfor (i = 62; x; i--) {\n\t\t\tt[i] = s[x % n];\n\t\t\tx /= n;\n\t\t}\n\t\treturn string(t + i + 1);\n\t}\n\t//m??????????????? ??? n???????????????\n\tstring format(const string &t, int m, int n) {\n\t\treturn format(format(t, m), n);\n\t}\n\t//m??????????????? ??? 10?????´??°\n\tlong long format(const string &t, int m) {\n\t\tlong long sm = a[(int)t[0]];\n\t\tfor (int i = 1; i < (int)t.length(); i++)\n\t\t\tsm = sm * m + a[(int)t[i]];\n\t\treturn sm;\n\t}\n};\n\n\nsigned main() {\n\tstring color[] = { \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\n\tint R[] = { 0,0,0,0,0xff,0xff,0xff,0xff };\n\tint G[] = { 0,0,0xff,0xff,0,0,0xff,0xff };\n\tint B[] = { 0,0xff,0,0xff,0,0xff,0,0xff };\n\tRadix r(\"0123456789abcdef\");\n\tfor (string s; cin >> s&&s != \"0\";) {\n\t\tint RR, GG, BB;\n\t\tRR = r.format(s.substr(1, 2), 16);\n\t\tGG = r.format(s.substr(3, 2), 16);\n\t\tBB = r.format(s.substr(5, 2), 16);\n\t\tint min = INF, ans;\n\t\trep(i, 0, 8) {\n\t\t\tint d = (RR - R[i])*(RR - R[i]) + (GG - G[i])*(GG - G[i]) + (BB - B[i])*(BB - B[i]);\n\t\t\tif (min > d) {\n\t\t\t\tmin = d;\n\t\t\t\tans = i;\n\t\t\t}\n\t\t}\n\t\tcout << color[ans] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define INF 2100000000\nusing namespace std;\nint main(void)\n{\n\tint i,j,k,a,b,c,mini;\n\tchar color[8][15]={\"black\",\"blue\",\"lime\",\"aqua\",\n\t\t\t\t  \"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tint suu[16]={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},\n\t\tred[8]={0,0,0,0,255,255,255,255},\n\t\tlime[8]={0,0,255,255,0,0,255,255},\n\t\tblue[8]={0,255,0,255,0,255,0,255};\n\tchar sin[17]={\"0123456789abcdef\"};\n\tchar pu[8];\n\twhile(1) {\n\t\tcin>>pu;\n\t\tif(pu[0]=='0') break;\n\t\ta=b=c=0;\n\t\tfor(i=1;i<8;i++) {\n\t\t\tfor(j=0;j<16;j++) {\n\t\t\t\tif(pu[i]==sin[j]) {\n\t\t\t\t\tif(i<=2) {\n\t\t\t\t\t\tif(i%2==1)a+=suu[j]*16;\n\t\t\t\t\t\telse a+=suu[j];\n\t\t\t\t\t}\n\t\t\t\t\telse if(i<=4) {\n\t\t\t\t\t\tif(i%2==1) b+=suu[j]*16;\n\t\t\t\t\t\telse b+=suu[j];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(i%2==1) c+=suu[j]*16;\n\t\t\t\t\t\telse c+=suu[j];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmini=INF;\n\t\tint d,x=0;\n\t\tfor(i=0;i<8;i++) {\n\t\t\td=((a-red[i])*(a-red[i]))+\n\t\t\t\t((b-lime[i])*(b-lime[i]))+\n\t\t\t\t((c-blue[i])*(c-blue[i]));\n\t\t\tif(mini>d) {\n\t\t\t\tmini=d;\n\t\t\t\tx=i;\n\t\t\t}\n\t\t}\n\t\tcout<<color[x]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\n\nvector<vector<int>> rgb = {\n  {0, 0, 0},\n  {0, 0, 255},\n  {0, 255, 0},\n  {0, 255, 255},\n  {255, 0, 0},\n  {255, 0, 255},\n  {255, 255, 0},\n  {255, 255, 255}\n};\nvector<string> name = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n  cout << fixed << setprecision(10);\n  \n  auto f = [&](string s) { return (isdigit(s[0]) ? s[0] - '0' : s[0] - 'a' + 10) * 16 + (isdigit(s[1]) ? s[1] - '0' : s[1] - 'a' + 10); };\n  string s;\n  while (cin >> s, s != \"0\") {\n    int r = f(s.substr(1, 2)), g = f(s.substr(3, 2)), b = f(s.substr(5, 2));\n    double d_min = 1e9;\n    string ans = \"\";\n    for (int i = 0; i < 8; i++) {\n      double d = sqrt(pow(r - rgb[i][0], 2.0) + pow(g - rgb[i][1], 2.0) + pow(b - rgb[i][2], 2.0));\n      if (d < d_min) {\n        d_min = d;\n        ans = name[i];\n      }\n    }\n    cout << ans << endl;\n  }\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <vector>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nmap<char,int> f;\n\nvoid foo(){\n\tfor(int i=0 ; i<16 ; ++i ){\n\t\tif( i < 10 )\n\t\t\tf[(char)(i+'0')] = i;\n\t\telse\n\t\t\tf[(char)(i-10+'a')] = i;\n\t}\n}\n\nint to_i(char c1,char c2){\n\treturn f[c1]*16+f[c2];\n}\n\nvector<int> solve(string s){\n\tint R = to_i( s[1] , s[2] );\n\tint G = to_i( s[3] , s[4] );\n\tint B = to_i( s[5] , s[6] );\n\tvector<int> color;\n\tcolor.push_back( R );\n\tcolor.push_back( G );\n\tcolor.push_back( B );\n\treturn color;\n}\n\nint main(){\n\tconst int t[8][3] = {\n\t\t{ 0 , 0 , 0 },\n\t\t{ 0 , 0 ,255},\n\t\t{ 0 ,255, 0 },\n\t\t{ 0 ,255,255},\n\t\t{255, 0 , 0 },\n\t\t{255, 0 ,255},\n\t\t{255,255, 0 },\n\t\t{255,255,255}\n\t};\n\tconst string colorName[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tfoo();\n\n\tstring s;\n\twhile( cin >> s , s != \"0\" ){\n\t\tvector<int> color = solve( s );\n\t\tint Rk = color[0];\n\t\tint Gk = color[1];\n\t\tint Bk = color[2];\n\t\tint ans = 0;\n\t\tint dk = 255*3+1;\n\t\t//cout << \"R:\" << Rk << \" G:\" << Gk << \" B:\" << Bk << endl;\n\t\t\n\t\tfor(int i=0 ; i<8 ; ++i ){\n\t\t\tint R = t[i][0];\n\t\t\tint G = t[i][1];\n\t\t\tint B = t[i][2];\n\t\t\tdk = min( abs(Rk-R)+abs(Gk-G)+abs(Bk-B) , dk );\n\t\t}\n\n\t\tfor(int i=0 ; i<8 ; ++i ){\n\t\t\tint R = t[i][0];\n\t\t\tint G = t[i][1];\n\t\t\tint B = t[i][2];\n\t\t\tif( abs(Rk-R)+abs(Gk-G)+abs(Bk-B) == dk ){\n\t\t\t\tans = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout << colorName[ ans ] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\nusing namespace std;\n\n#define sq(x) ((x)*(x))\n\nstring color_name[8] = {\n\t\"black\",\n\t\"blue\",\n\t\"lime\",\n\t\"aqua\",\n\t\"red\",\n\t\"fuchsia\",\n\t\"yellow\",\n\t\"white\"\n};\n\nint color_rgb[8][3] = {\n\t{ 0x00, 0x00, 0x00 },\n\t{ 0x00, 0x00, 0xff },\n\t{ 0x00, 0xff, 0x00 },\n\t{ 0x00, 0xff, 0xff },\n\t{ 0xff, 0x00, 0x00 },\n\t{ 0xff, 0x00, 0xff },\n\t{ 0xff, 0xff, 0x00 },\n\t{ 0xff, 0xff, 0xff },\n};\n\nint main( void )\n{\n\tstring input;\n\twhile ( 1 )\n\t{\n\t\tcin >> input;\n\t\tif ( input == \"0\" ) break;\n\t\tint r, g, b;\n\t\tsscanf( input.c_str(), \"#%2x%2x%2x\", &r, &g, &b );\n\n\t\tint min_value = 1 << 28, min_no = 0;\n\t\tfor ( int i = 0; i < 8; i++ )\n\t\t{\n\t\t\tint d = sq(r-color_rgb[i][0]) + sq( g-color_rgb[i][1] ) + sq(b-color_rgb[i][2]);\n\t\t\tif ( d < min_value )\n\t\t\t{\n\t\t\t\tmin_value = d;\n\t\t\t\tmin_no = i;\n\t\t\t}\n\t\t}\n\n\t\tcout << color_name[min_no] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\n\nint tmp[] = {16,1};\nstring s[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint hoge[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},\n\t\t{255,0,255},{255,255,0},{255,255,255}};\n\nint to_ten(string s){\n  int ans=0;\n  for(int i=0; i<2; i++){\n    if(s[i] == 'a') ans += 10*16*i;\n    else if(s[i] == 'b') ans += 11*tmp[i];\n    else if(s[i] == 'c') ans += 12*tmp[i];\n    else if(s[i] == 'd') ans += 13*tmp[i];\n    else if(s[i] == 'e') ans += 14*tmp[i];\n    else if(s[i] == 'f') ans += 15*tmp[i];\n    else ans += stoi(s.substr(i,1))*tmp[i];\n  }\n  //  cout << ans << \" \";\n  return ans;\n}\n\ndouble d(string r,string g,string b,int i){\n  double ans = 0;\n  ans += (to_ten(r) - hoge[i][0]) * (to_ten(r) - hoge[i][0]);\n  ans += (to_ten(g) - hoge[i][1]) * (to_ten(g) - hoge[i][1]);\n  ans += (to_ten(b) - hoge[i][2]) * (to_ten(b) - hoge[i][2]);\n  return ans;\n}\n\nint main(){\n\n\n  while(1){\n\n    string in; cin >> in;\n    if(in == \"0\") break;\n    string r = in.substr(1,2);\n    string g = in.substr(3,2);\n    string b = in.substr(5,2);\n\n    double min = (int)1e+300;\n    int index;\n    for(int i=0; i<8; i++){\n      if(d(r,g,b,i) < min ){\n\tindex = i;\n\tmin = d(r,g,b,i);\n      }\n    }\n    cout << s[index] << \"\\n\";\n  \n  }\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstdlib>\nusing namespace std;\n\nconst int INF = 1 << 30;\n\nconst int color[8][3] = { {  0,   0,   0},\n\t\t\t  {  0,   0, 255},\n\t\t\t  {  0, 255,   0},\n\t\t\t  {  0, 255, 255},\n\t\t\t  {255,   0,   0},\n\t\t\t  {255,   0, 255},\n\t\t\t  {255, 255,   0},\n\t\t\t  {255, 255, 255} };\nconst string name[] = {\"black\", \"blue\", \"lime\", \"aquq\",\n\t\t       \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\nint main()\n{\n  string RGB;\n  while (cin >> RGB) {\n    if (RGB == \"0\")\n      break;\n\n    int R = strtol(RGB.substr(1, 2).c_str(), NULL, 16);\n    int G = strtol(RGB.substr(3, 2).c_str(), NULL, 16);\n    int B = strtol(RGB.substr(5, 2).c_str(), NULL, 16);\n\n    int d = INF, index = 0;\n    for (int i = 0; i < 8; ++i) {\n      int dd = (R-color[i][0]) * (R-color[i][0])\n\t+ (G-color[i][1]) * (G-color[i][1])\n\t+ (B-color[i][2]) * (B-color[i][2]);\n\n      if (d > dd) {\n\td = dd;\n\tindex = i;\n      }\n    }\n    cout << name[index] << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nint Overten(char a){\n  if(a-'0'<10)return a-'0';\n  if(a=='A')return 10;\n  if(a=='B')return 11;\n  if(a=='C')return 12;\n  if(a=='D')return 13;\n  if(a=='E')return 14;\n  if(a=='F')return 15;\n}\nint changeDtoI(char a,char b){\n  return Overten(a)*16+Overten(b);\n}\nint main(void){\n  string color;\n  while(cin>>color,color.size()>3){\n    int R = changeDtoI(color[1],color[2])<128?0:1;\n    int G = changeDtoI(color[3],color[4])<128?0:1;\n    int B = changeDtoI(color[4],color[5])<128?0:1;\n    //cout<<R << \" \" << G << \" \" << B <<endl;\n    if(R * G * B)cout<<\"white\"<<endl;\n    else if(R * G)cout<<\"yellow\"<<endl;\n    else if(R * B)cout<<\"fuchsia\"<<endl;\n    else if(G * B)cout<<\"aqua\"<<endl;\n    else if(R)cout<<\"red\"<<endl;\n    else if(G)cout<<\"green\"<<endl;\n    else if(B)cout<<\"blue\"<<endl;\n    else cout<<\"black\"<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cctype>\n#include <vector>\nusing namespace std;\n\n#define sq(c) ((c)*(c))\n\nvector<double> col8[8];\n\nvector<double> col16to10( string str ) {\n  string s;\n  \n  str = str.substr(1, 6);\n  vector<double> col(3);\n  for(int i=0; i<3; i++) {\n    s = str.substr(i*2, 2);\n    if(isalpha(s[1]))\tcol[i] = s[1]-'a' + 10;\n    else col[i] = s[1]-'0';\n    \n    if(isalpha(s[0]))\tcol[i] += ( s[0]-'a' + 10 ) * 16;\n    else col[i] += ( s[0]-'0' ) * 16;\n  }\n\n  return col;\n}\n\ndouble calc( vector<double> col, int i ) {\n  return sqrt( sq(col[0]-col8[i][0]) + sq(col[1]-col8[i][1]) + sq(col[2]-col8[i][2]) );\n}\n\nint main() {\n  string str;\n  \n  col8[0] = col16to10(\"#000000\");\n  col8[1] = col16to10(\"#0000ff\");\n  col8[2] = col16to10(\"#00ff00\");\n  col8[3] = col16to10(\"#00ffff\");\n  col8[4] = col16to10(\"#ff0000\");\n  col8[5] = col16to10(\"#ff00ff\");\n  col8[6] = col16to10(\"#ffff00\");\n  col8[7] = col16to10(\"#ffffff\");\n  \n  while(getline(cin, str)) {\n    if( str == \"0\" ) break;\n    \n    vector<double> col(3);\n    col = col16to10( str );\n    \n    double mn = 1<<20;\n    int num = 0;\n    for(int i=0; i<8; i++) {\n      double temp = mn;\n      mn = min( mn, calc(col, i) );\n      if( mn < temp ) num = i;\n    }\n    \n    switch( num ) {\n    case 0: cout << \"black\"; break;\n    case 1: cout << \"blue\";  break;\n    case 2: cout << \"lime\";  break;\n    case 3: cout << \"aqua\";  break;\n    case 4: cout << \"red\";   break;\n    case 5: cout << \"fuchsia\"; break;\n    case 6: cout << \"yellow\"; break;\n    case 7: cout << \"white\"; break;\n    }\n    cout << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<map>\nusing namespace std;\nint main() {\n\tmap <char, int>b;\n\tb.insert(map<char, int>::value_type('0', 0));\n\tb.insert(map<char, int>::value_type('1', 1));\n\tb.insert(map<char, int>::value_type('2', 2));\n\tb.insert(map<char, int>::value_type('3', 3));\n\tb.insert(map<char, int>::value_type('4', 4));\n\tb.insert(map<char, int>::value_type('5', 5));\n\tb.insert(map<char, int>::value_type('6', 6));\n\tb.insert(map<char, int>::value_type('7', 7));\n\tb.insert(map<char, int>::value_type('8', 8));\n\tb.insert(map<char, int>::value_type('9', 9));\n\tb.insert(map<char, int>::value_type('a', 10));\n\tb.insert(map<char, int>::value_type('b', 11));\n\tb.insert(map<char, int>::value_type('c', 12));\n\tb.insert(map<char, int>::value_type('d', 13));\n\tb.insert(map<char, int>::value_type('e', 14));\n\tb.insert(map<char, int>::value_type('f', 15));\n\tstring d[8] = { \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\n\tint e[8][3] = { {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255}, {255,255,0},{255,255,255} };\n\tstring a;\n\twhile (cin >> a&&a != \"0\") {\n\t\tint sa = 10000, t[3];\n\t\tstring iro;\n\t\tfor (int i = 1; i < 7; i += 2) {\n\t\t\tchar f = a[i], g = a[i + 1];\n\t\t\tt[(i - 1) / 2] = b[f]*16 + b[g];\n\t\t}\n\t\tfor (int i = 7; i >= 0; i--) {\n\t\t\tint h = sqrt(pow((e[i][0] - t[0]), 2) + pow((e[i][1] - t[1]), 2) + pow((e[i][2] - t[2]), 2));\n\t\t\tif (h <= sa) {\n\t\t\t\tsa = h;\n\t\t\t\tiro = d[i];\n\t\t\t}\n\t\t}\n\t\tcout << iro << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nint d[2] = { 0,255 };\nint b(char c) {\n\tif (c <= '9')return c - '0';\n\treturn c - 'a' + 10;\n}\nint c(string d) {\n\treturn b(d[0]) * 16 + b(d[1]);\n}\nint main() {\n\tstring a;\n\twhile (cin >> a, a != \"0\") {\n\t\tint o = 0, p = 0, q = 0;\n\t\tint x = c(a.substr(1, 2)), y = c(a.substr(3, 2)), z = c(a.substr(5, 2));\n\t\tint MIN = 1 << 29;\n\t\tfor (int e = 0; e < 2; e++) {\n\t\t\tfor (int f = 0; f < 2; f++) {\n\t\t\t\tfor (int g = 0; g < 2; g++) {\n\t\t\t\t\tif ((x - d[e])*(x - d[e]) + (y - d[f])*(y - d[f]) + (z - d[g])*(z - d[g]) < MIN) {\n\t\t\t\t\t\tMIN = (x - d[e])*(x - d[e]) + (y - d[f])*(y - d[f]) + (z - d[g])*(z - d[g]);\n\t\t\t\t\t\to = e; p = f; q = g;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (o) {\n\t\t\tif (p) {\n\t\t\t\tif (q) {\n\t\t\t\t\tputs(\"white\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tputs(\"yellow\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (q) {\n\t\t\t\t\tputs(\"fuchsia\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tputs(\"red\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (p) {\n\t\t\t\tif (q) {\n\t\t\t\t\tputs(\"aqua\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tputs(\"lime\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (q) {\n\t\t\t\t\tputs(\"blue\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tputs(\"black\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n\nusing namespace std;\n\nint main(){\n\tchar *color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tint rgb[][3]={{0x00,0x00,0x00},\n\t\t\t\t  {0x00,0x00,0xff},\n\t\t\t\t  {0x00,0xff,0x00},\n\t\t\t\t  {0x00,0xff,0xff},\n\t\t\t\t  {0xff,0x00,0x00},\n\t\t\t\t  {0xff,0x00,0xff},\n\t\t\t\t  {0xff,0xff,0x00},\n\t\t\t\t  {0xff,0xff,0xff}};\n\n\tfor(char sam[8];scanf(\"%s\",sam),sam[0]-'0';){\n\t\tint b;\tsscanf(sam+5,\"%x\",&b);\tsam[5]='\\0';\n\t\tint g;\tsscanf(sam+3,\"%x\",&g);\tsam[3]='\\0';\n\t\tint r;\tsscanf(sam+1,\"%x\",&r);\n\t\tint dmin=1000000,imin;\n\t\tfor(int i=0;i<8;i++){\n\t\t\tint dis=(r-rgb[i][0])*(r-rgb[i][0])+(g-rgb[i][1])*(g-rgb[i][1])+(b-rgb[i][2])*(b-rgb[i][2]);\n\t\t\tif(dis<dmin)\tdmin=dis,imin=i;\n\t\t}\n\t\tputs(color[imin]);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\nclass Col\n{\npublic:\n  int R,G,B;\n  Col():R(0),G(0),B(0){}\n  Col(int R,int G,int B):R(R),G(G),B(B){}\n};\n\nint _16to10(string s)\n{\n  int a[2];\n  for(int i=0;i<2;i++)\n    {\n      if(s[i] == 'a')\n\ta[i] = 10;\n      else if(s[i] == 'b')\n\ta[i] = 11;\n      else if(s[i] == 'c')\n\ta[i] = 12;\n      else if(s[i] == 'd')\n\ta[i] = 13;\n      else if(s[i] == 'e')\n\ta[i] = 14;\n      else if(s[i] == 'f')\n\ta[i] = 15;\n      else \n\ta[i] = s[i] - '0';\n    }\n  return a[1]+a[0]*16;\n}\n\nint main()\n{\n  string s;\n  vector<Col> vec;\n  vector<string> name;\n  vec.resize(8),name.resize(8);\n  int ff = _16to10(\"ff\");\n  vec[0] = Col(0,0,0);\n  vec[1] = Col(0,0,ff);\n  vec[2] = Col(0,ff,0);\n  vec[3] = Col(0,ff,ff);\n  vec[4] = Col(ff,0,0);\n  vec[5] = Col(ff,0,ff);\n  vec[6] = Col(ff,ff,0);\n  vec[7] = Col(ff,ff,ff);\n  name[0] = \"black\";\n  name[1] = \"blue\";\n  name[2] = \"lime\";\n  name[3] = \"aqua\";\n  name[4] = \"red\";\n  name[5] = \"fuchsia\";\n  name[6] = \"yellow\";\n  name[7] = \"white\";\n  while(true)\n    {\n      cin >> s;\n      if(s == \"0\")\n\tbreak;\n      int R,G,B;\n      R = _16to10(s.substr(1,2));\n      G = _16to10(s.substr(3,2));\n      B = _16to10(s.substr(5,2));\n\n      int men = (1<<28),pos = -1;\n      for(int i=0;i<8;i++)\n\t{\n\t  int d =  sqrt(pow(R-vec[i].R,2)+pow(B-vec[i].B,2)+pow(G-vec[i].G,2));\n\t  if(men > d)\n\t    {\n\t      men = d;\n\t      pos = i;\n\t    }\n\t}\n      cout << name[pos] << endl;\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "(function(input) {\n  var lines = input.split(\"\\n\");\n  var colors = [\n    ['black', 0x00, 0x00, 0x00],\n    ['blue', 0x00, 0x00, 0xff],\n    ['lime', 0x00, 0xff, 0x00],\n    ['aqua', 0x00, 0xff, 0xff],\n    ['red', 0xff, 0x00, 0x00],\n    ['fuchsia', 0xff, 0x00, 0xff],\n    ['yellow', 0xff, 0xff, 0x00],\n    ['white', 0xff, 0xff, 0xff],\n  ];\n  for (var i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '#') {\n      var best_color;\n      var min_d = 3 * 256 * 256 + 1;\n      var r = parseInt(lines[i].substr(1, 2), 16);\n      var g = parseInt(lines[i].substr(3, 2), 16);\n      var b = parseInt(lines[i].substr(5, 2), 16);\n      for (var j = 0; j < colors.length; ++j) {\n        var d = Math.pow(r - colors[j][1], 2) + Math.pow(g - colors[j][2], 2) + Math.pow(b - colors[j][3], 2);\n        if (d < min_d) {\n          min_d = d;\n          best_color = colors[j][0];\n        }\n      }\n      console.log(best_color);\n    }\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8').trim());"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nstring colors[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint dis(int id, vector<int> a){\n  int res = 0;\n  for(int i=0;i<3;i++){\n    int comp = 0;\n    if(id&1) comp = 255;\n    res += (a[i]-comp)*(a[i]-comp);\n    id/=2;\n  }\n  return res;\n}\n\nint toDec(char a){\n  if(isdigit(a))return a-'0';\n  return a-'a'+10;\n}\n\nint main(){\n  string s;\n  while(cin >> s, s != \"0\"){\n    vector<int> a(3);\n    for(int i=0;i<3;i++){\n      a[i] = toDec(s[2*i+1])*16 + toDec(s[2*i+2]);\n    }\n    reverse(a.begin(), a.end());\n    int ans = 0, dmin = dis(0,a);\n    for(int i=1;i<8;i++){\n      if(dis(i,a) < dmin){\n        ans = i; dmin = dis(i,a);\n      }\n    }\n    cout << colors[ans] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\t\n\nusing namespace std;\nstruct color\n{\n\tstring str;\n\tint RGB[3];\n};\n\nvoid solve()\n{\n\tcolor Color[8];\n\tColor[0].str = \"black\";\n\tColor[0].RGB[0] = 0;\tColor[0].RGB[1] = 0;\tColor[0].RGB[2] = 0;\n\tColor[1].str = \"blue\";\n\tColor[1].RGB[0] = 0;\tColor[1].RGB[1] = 0;\tColor[1].RGB[2] = 255;\n\tColor[2].str = \"lime\";\n\tColor[2].RGB[0] = 0;\tColor[2].RGB[1] = 255;\tColor[2].RGB[2] = 0;\n\tColor[3].str = \"aqua\";\n\tColor[3].RGB[0] = 0;\tColor[3].RGB[1] = 255;\tColor[3].RGB[2] = 255;\n\tColor[4].str = \"red\";\n\tColor[4].RGB[0] = 255;\tColor[4].RGB[1] = 0;\tColor[4].RGB[2] = 0;\n\tColor[5].str = \"fuchsia\";\n\tColor[5].RGB[0] = 255;\tColor[5].RGB[1] = 0;\tColor[5].RGB[2] = 255;\n\tColor[6].str = \"yellow\";\n\tColor[6].RGB[0] = 255;\tColor[6].RGB[1] = 255;\tColor[6].RGB[2] = 0;\n\tColor[7].str = \"white\";\n\tColor[7].RGB[0] = 255;\tColor[7].RGB[1] = 255;\tColor[7].RGB[2] = 255;\n\n\tstring str;\n\twhile(cin >> str, str[0] != '0')\n\t{\n\t\tint C[3] = {0};\n\t\tfor(int i = 0; i < 3; ++i)\n\t\t{\n\t\t\tif('a' <= str[2 * i + 1] && str[2 * i + 1] <= 'f')\n\t\t\t{\n\t\t\t\tC[i] += (str[2 * i + 1] - 'a' + 10) * 16;\n\t\t\t}\n\t\t\telse if('0' <= str[2 * i + 1] && str[2 * i + 1] <= '9')\n\t\t\t{\n\t\t\t\tC[i] += (str[2 * i + 1] - '0') * 16;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1; i < 4; ++i)\n\t\t{\n\t\t\tif('a' <= str[2 * i] && str[2 * i] <= 'f')\n\t\t\t{\n\t\t\t\tC[i - 1] += str[2 * i] - 'a' + 10;\n\t\t\t}\n\t\t\telse if('0' <= str[2 * i] && str[2 * i] <= '9')\n\t\t\t{\n\t\t\t\tC[i - 1] += str[2 * i] - '0';\n\t\t\t}\n\t\t}\n\t\tint index = 0;\n\t\tint dist = 0;\n\t\tint min = 999999999;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tdist = (C[0] - Color[i].RGB[0]) * (C[0] - Color[i].RGB[0])\n\t\t\t\t + (C[1] - Color[i].RGB[1]) * (C[1] - Color[i].RGB[1])\n\t\t\t\t + (C[2] - Color[i].RGB[2]) * (C[2] - Color[i].RGB[2]);\n\t\t\tif(dist < min)\n\t\t\t{\n\t\t\t\tmin = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tcout << Color[index].str << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  char c[10];\n  int r,g,b,id;\n  string str[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  while(scanf(\"%s\",c),c[0]!='0'){\n    r = g = b = 0;\n    if('0'<=c[1] && c[1]<='9') r += (c[1]-'0')*16;\n    else r += (c[1]-'A'+10)*16;\n    if('0'<=c[2] && c[2]<='9') r += (c[2]-'0');\n    else r += (c[2]-'A'+10);\n    if('0'<=c[3] && c[3]<='9') g += (c[3]-'0')*16;\n    else g += (c[3]-'A'+10)*16;\n    if('0'<=c[4] && c[4]<='9') g += (c[4]-'0');\n    else g += (c[4]-'A'+10);\n    if('0'<=c[5] && c[5]<='9') b += (c[5]-'0')*16;\n    else b += (c[5]-'A'+10)*16;\n    if('0'<=c[6] && c[6]<='9') b += (c[2]-'0');\n    else r += (c[6]-'A'+10);\n    id = 0;\n    if(r >=123) id += 4;\n    if(g >=123) id += 2;\n    if(b >=123) id += 1;\n    cout << str[id] << endl;\n  }\n  return(0);\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\nusing namespace std;\n\nconst char *name[] = {\n\t\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\",\n};\n\nint main(){\n\tint r, g, b;\n\twhile(scanf(\" #%2x%2x%2x\", &r, &g, &b) == 3){\n\t\tputs(name[(r > 127) * 4 + (g > 127) * 2 + (b > 127)]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\nusing namespace std;\n\nconst int INF = 1 << 28;\n\nint decimal(char a, char b) {\n    int d;\n    if (isdigit(a)) d += a - '0';\n    else d += a - 'a' + 10;\n    d *= 10;\n\n    if (isdigit(b)) d += b - '0';\n    else d += b - 'a' + 10;\n    \n    return d;\n}\n\nstruct color_t {\n    int r, g, b;\n    color_t(int r=0, int g=0, int b=0) : r(r), g(g), b(b) {}\n    color_t(string s) {\n        r = decimal(s[1], s[2]);\n        g = decimal(s[3], s[4]);\n        b = decimal(s[5], s[6]);\n    }\n};\n\nint square_distance(color_t a, color_t b) {\n    return (a.r - b.r) * (a.r - b.r) + (a.g - b.g) * (a.g - b.g) + (a.b - b.b) * (a.b - b.b);\n}\n\nint main() {\n    string color[8];\n    color_t color_v[8];\n\n    color[0] = \"black\";   color_v[0] = color_t(\"#000000\");\n    color[1] = \"blue\";    color_v[1] = color_t(\"#0000ff\");\n    color[2] = \"lime\";    color_v[2] = color_t(\"#00ff00\");\n    color[3] = \"aqua\";    color_v[3] = color_t(\"#00ffff\");\n    color[4] = \"red\";     color_v[4] = color_t(\"#ff0000\");\n    color[5] = \"fuchsia\"; color_v[5] = color_t(\"#ff00ff\");\n    color[6] = \"yellow\";  color_v[6] = color_t(\"#ffff00\");\n    color[7] = \"white\";   color_v[7] = color_t(\"#ffffff\");\n\n    string s;\n    while (getline(cin, s)) {\n        if (s == \"0\") break;\n        color_t c(s);\n        int min_sq_dist = INF;\n        string min_dist_color_name;\n        for (int i = 0; i < 8; i++) {\n            int sq_dist = square_distance(color_v[i], c);\n            if (min_sq_dist > sq_dist) {\n                min_sq_dist = sq_dist;\n                min_dist_color_name = color[i];\n            }\n        }\n        cout << min_dist_color_name << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\n\nint main(int argc, const char * argv[]) {\n    \n    while (true) {\n        string input;\n        cin >> input;\n        if(input == \"0\"){\n            break;\n        }\n        \n/*        for(int i=1;i<7;i++){\n            input[i] = toupper(input[i]);\n        }\n*/\n        int red = stoi(input.substr(1,2), nullptr, 16);\n        int green = stoi(input.substr(3,2), nullptr, 16);\n        int blue = stoi(input.substr(5,2), nullptr, 16);\n        \n        \n        red = (red < 128) ? 0 : 255;\n        green = (green < 128) ? 0 : 255;\n        blue = (blue < 128) ? 0 : 255;\n        \n        if(red == 0){\n            if(green == 0){\n                if(blue == 0){\n                    cout << \"black\" << endl;\n                }\n                else{\n                    cout << \"blue\" << endl;\n                }\n                \n            }\n            else{\n                if(blue == 0){\n                    cout << \"lime\" << endl;\n                }\n                else{\n                    cout << \"aqua\" << endl;\n                }\n            }\n        }\n        else{\n            if(green == 0){\n                if(blue == 0){\n                    cout << \"red\" << endl;\n                }\n                else{\n                    cout << \"fuchsia\" << endl;\n                }\n                \n            }\n            else{\n                if(blue == 0){\n                    cout << \"yellow\" << endl;\n                }\n                else{\n                    cout << \"white\" << endl;\n                }\n            }\n        }\n        \n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECUREj_NO_WARNINGS 1\n# define _USE_MATH_DEFINES\n# include <iostream>\n# include <numeric>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <forward_list>\n# include <map>\n# include <stack>\nusing namespace std;\n# define INF ((int)(1<<25))\n# define REP(i,n) for(int i=0;i<(int)n;i++)\n# define FOR(i,n) REP(i,n)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define TORAD 2.0*M_PI/360.0\n# define INT(x) int x;cin>>x;\n# define ALL(x) (x).begin(),(x).end()\n# define RALL(x) (x).rbegin(),(x).rend()\n# define DEBUG(x) cout<<#x<<\":\"<<x<<endl;\n# define EPS 1e-12\n#ifdef _MSC_VER\n#include <intrin.h>\n#define __builtin_popcount __popcnt\n#endif\ntypedef long long lint;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<int, pii> piii;\nconst int dx[4] = { 0,1,0,-1 }, dy[4] = { -1,0,1,0 };\ntemplate<class T> void debug(T a) { for (auto i : a)cout << i << endl; }\n\nint main()\n{\n\tstring a;\n\tint FF = 16 * 16 - 1;\n\tint f[][3] = { { FF,FF,FF },{ FF,FF,0 },{ FF,0,FF },{ FF,0,0 },{ 0,FF,FF },{ 0,FF,0 },{ 0,0,FF },{ 0,0,0 } };\n\tstring ans[] = { \"white\",\"yellow\",\"fuchsia\",\"red\",\"aqua\",\"lime\",\"blue\",\"black\" };\n\twhile (cin >> a&&a != \"0\")\n\t{\n\t\tint g[3];\n\t\tFOR(i, 3)g[i] = strtol(a.substr(i * 2 + 1,2).c_str(),NULL,16);\n\t\tint d = INT_MAX, id = 0;\n\t\tFOR(i, 8)\n\t\t{\n\t\t\tdouble D = 0;\n\t\t\tFOR(j, 3)\n\t\t\t{\n\t\t\t\tD += pow(f[i][j] - g[j], 2);\n\t\t\t}\n\t\t\tif (D <= d)\n\t\t\t{\n\t\t\t\td = D;\n\t\t\t\tid = i;\n\t\t\t}\n\t\t}\n\t\tcout << ans[id] << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "\n#include<iostream>\n#include<vector>\n#include<climits>\n#include<string>\nusing namespace std;\n\nint main()\n{\n  vector< vector<int> > table( 8, vector<int>(3) );\n  vector<string> name(8);\n  vector<int> color(3);\n  char c;\n  int i, near, dist, t;\n  table[0][0] = 0; table[0][1] = 0; table[0][2] = 0;\n  table[1][0] = 0; table[1][1] = 0; table[1][2] = 255;\n  table[2][0] = 0; table[2][1] = 255; table[2][2] = 0;\n  table[3][0] = 0; table[3][1] = 255; table[3][2] = 255;\n  table[4][0] = 255; table[4][1] = 0; table[4][2] = 0;\n  table[5][0] = 255; table[5][1] = 0; table[5][2] = 255;\n  table[6][0] = 255; table[6][1] = 255; table[6][2] = 0;\n  table[7][0] = 255; table[7][1] = 255; table[7][2] = 255;\n  name[0] = \"black\";\n  name[1] = \"blue\";\n  name[2] = \"lime\";\n  name[3] = \"aqua\";\n  name[4] = \"red\";\n  name[5] = \"fuchsia\";\n  name[6] = \"yellow\";\n  name[7] = \"white\";\n\n  while (cin>>c, c!='0') {\n    color.clear();\n    for (i = 0; i < 3; i++) {\n      cin>>c;\n      if ('a' <= c) color[i] = c-'a'+10;\n      else color[i] = c-'0';\n      color[i] *= 16;\n      cin>>c;\n      if ('a' <= c) color[i] += c-'a'+10;\n      else color[i] += c-'0';\n    }\n    dist = INT_MAX;\n    near = 0;\n    for (i = 0; i < 8; i++) {\n      t = (table[i][0]-color[0])*(table[i][0]-color[0]) + (table[i][1]-color[1])*(table[i][1]-color[1]) + (table[i][2]-color[2])*(table[i][2]-color[2]);\n      if (t < dist) {\n\tnear = i;\n\tdist = t;\n      }\n    }\n    cout<<name[near]<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <complex>\nusing namespace std;\n#define all(c) (c).begin(),(c).end()\n#define pb push_back\n#define mp make_pair\n#define ERASE(v,i) (v).erase(remove(all(v),i),(v).end())\n#define rep(i,n) for(int i=0;i<(int)n;++i)\n#define each(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)\n#define debug(x) cerr<<#x<<\" = \"<<(x)<<endl;\n#define LINE cerr<<\"LINE: \"<<__LINE__<<endl;\ninline int toInt(string s){int v;istringstream i(s);i>>v;return v;}\ntemplate<class T> inline string toString(T x){ostringstream o;o<<x;return o.str();}\ntemplate<class T> void pv(T a,T b){for(T it=a;it!=b;++it)cerr<<*it<<\" \";cerr<<endl;}\nconst int INF = 1000000000;\nconst double PI = acos(-1.0), EPS = 1e-10;\n\nmap<string, int> hex_table;\n\nvoid table_init() {\n\thex_table.clear();\n\tstring table = \"0123456789abcdef\";\n\tfor(int i = 0; i < 16; i++)\n\t\tfor(int j = 0; j < 16; j++)\n\t\t\thex_table[table.substr(i,1) + table.substr(j,1)] = i * 16 + j;\n}\n\nint hex2dec(string H) {\n\treturn hex_table[H];\n}\n\nstring name[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nstring color_code[] = {\"000000\", \"0000ff\", \"00ff00\", \"00ffff\", \"ff0000\", \"ff00ff\", \"ffff00\", \"ffffff\"};\n\nint color_value[8][3];\n\ninline double POW(double v) {\n\treturn v * v;\n}\n\nvoid color_value_init() {\n\tfor(int i = 0; i < 8; i++) {\n\t\tstring R = color_code[i].substr(0, 2);\n\t\tstring G = color_code[i].substr(2, 2);\n\t\tstring B = color_code[i].substr(4, 2);\n\t\tcolor_value[i][0] = hex2dec(R);\n\t\tcolor_value[i][1] = hex2dec(G);\n\t\tcolor_value[i][2] = hex2dec(B);\n\t}\n}\n\nint main() {\n\ttable_init();\n\tcolor_value_init();\n\tfor(string line; getline(cin, line), line != \"0\";) {\n\t\tint R = hex2dec(line.substr(1, 2));\n\t\tint G = hex2dec(line.substr(3, 2));\n\t\tint B = hex2dec(line.substr(5, 2));\n#if 0\n\t\tdebug(hex2dec(R));\n\t\tdebug(hex2dec(G));\n\t\tdebug(hex2dec(B));\n#endif\n\n\t\tint idx = -1;\n\t\tdouble vmin = 1e10;\n\t\tfor(int i = 0; i < 8; i++) {\n\t\t\tdouble v = sqrt(POW(R - color_value[i][0]) + POW(G - color_value[i][1]) + POW(B - color_value[i][2]));\n\t\t\tif(v < vmin) {\n\t\t\t\tidx = i;\n\t\t\t\tvmin = v;\n\t\t\t}\n\t\t}\n\n\t\tcout << name[idx] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nstruct COLOR {\n\tint R;\n\tint G;\n\tint B;\n};\n\nint main() {\n\tstring b;\n\n\tstring co = \"0123456789abcdef\";\n\n\n\tCOLOR samp[] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0}, \n\t\t\t\t\t{255, 0, 255},{255,255,0},{255,255,255}};\n\n\tdouble d;\n\tstring name[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\twhile (1) {\n\t\tcin >> b;\n\t\tif (b[0] != '#') {\n\t\t\tbreak;\n\t\t}\n\t\tint color[3] = {0};\n\t\tint count = 0; \n\t\tdouble MIN = 100000.0;\n\t\tint mc;\n\t\tfor (int i = 1; i < 7; i++) {\n\t\t\tif (i % 2 != 0) {\n\t\t\t\tfor (int j = 0; j < co.size(); j++) {\n\t\t\t\t\tif (b[i] == co[j]) {\n\t\t\t\t\t\tcolor[count] += j*16;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int j = 0; j < co.size(); j++) {\n\t\t\t\t\tif (b[i] == co[j]) {\n\t\t\t\t\t\tcolor[count] += j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\td = sqrt((double)pow(samp[i].R-color[0],2)+(double)pow(samp[i].G-color[1],2)+(double)pow(samp[i].B-color[2],2));\n\t\t\tif (d < MIN) {\n\t\t\t\tMIN = d;\n\t\t\t\tmc = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[mc] << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint colorCalc(char c1, char c2)\n{\n\tint color = 0;\n\tif('a' <= c1 && c1 <= 'f')\n\t{\n\t\tcolor += (c1 - 'a' + 10) * 16;\n\t}\n\telse\n\t{\n\t\tcolor += (c1 - '0') * 16;\n\t}\n\tif('a' <= c2 && c2 <= 'f')\n\t{\n\t\tcolor += c2 - 'a' + 10;\n\t}\n\telse\n\t{\n\t\tcolor += c2 - '0';\n\t}\n\treturn(color);\n}\nvoid solve()\n{\n\tint colors[8][3] = {{{0},   {0},   {0}}, \n\t\t\t\t\t\t{{0},   {0},   {255}}, \n\t\t\t\t\t\t{{0},   {255}, {0}}, \n\t\t\t\t\t\t{{0},   {255}, {255}}, \n\t\t\t\t\t\t{{255}, {0},   {0}}, \n\t\t\t\t\t\t{{255}, {0},   {255}}, \n\t\t\t\t\t\t{{255}, {255}, {0}}, \n\t\t\t\t\t\t{{255}, {255}, {255}}};\n\tstring name[8] = {\"black\", \n\t\t\t\t\t  \"blue\", \n\t\t\t\t\t  \"lime\", \n\t\t\t\t\t  \"aqua\", \n\t\t\t\t\t  \"red\", \n\t\t\t\t\t  \"fuchsia\", \n\t\t\t\t\t  \"yellow\", \n\t\t\t\t\t  \"white\"};\n\tstring str;\n\twhile(cin >> str, str != \"0\")\n\t{\n\t\tint r = colorCalc(str[1], str[2]);\n\t\tint g = colorCalc(str[3], str[4]);\n\t\tint b = colorCalc(str[5], str[6]);\n\t\tint min = 999999999;\n\t\tint label = 0;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tint sum = sqrt((double)(r - colors[i][0]) * (r - colors[i][0]) + (g - colors[i][1]) * (g - colors[i][1]) + (b - colors[i][2]) * (b - colors[i][2]));\n\t\t\tif(sum < min)\n\t\t\t{\n\t\t\t\tmin = sum;\n\t\t\t\tlabel = i;\n\t\t\t}\n\t\t}\n\t\tcout << name[label] << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\n\nint main(){\n\n\tint color[8][3] = {{0, 0, 0}, {0, 0, 255}, {0, 255, 0}, {0, 255, 255}, {255, 0, 0}, {255, 0, 255}, {255, 255, 0}, {255, 255, 255}};\n\tdouble d, f, p[3];\n\tstring str, c;\n\n\twhile(cin >> str){\n\t\tif(str[0] == '0') break;\n\n\t\td = sqrt(3 * pow(255, 2));\n\t\tfor(int j=0; j<3; j++){\n\t\t\tif(str[2*j+1] >= '0' && str[2*j+1] <= '9') p[j] = 16 * (str[2*j+1] - '0');\n\t\t\telse p[j] = 16 * (10.0 + str[2*j+1] - 'a');\n\t\t\t\t\n\t\t\tif(str[2*j+2] >= '0' && str[2*j+2] <= '9') p[j] += str[2*j+2] - '0';\n\t\t\telse p[j] += 10.0 + str[2*j+2] - 'a';\n\t\t}\n\t\t\n\t\tfor(int i=0; i<8; i++){\n\t\t\tf = sqrt(pow(p[0] - color[i][0], 2) + pow(p[1] - color[i][1], 2) + pow(p[2] - color[i][2], 2));\n\t\t\tif(d > f){\n\t\t\t\td = f;\n\t\t\t\tswitch(i){\n\t\t\t\t\tcase 0: c = \"black\"; break;\n\t\t\t\t\tcase 1: c = \"blue\"; break;\n\t\t\t\t\tcase 2: c = \"lime\"; break;\n\t\t\t\t\tcase 3: c = \"aqua\"; break;\n\t\t\t\t\tcase 4: c = \"red\"; break;\n\t\t\t\t\tcase 5: c = \"fuchsia\"; break;\n\t\t\t\t\tcase 6: c = \"yellow\"; break;\n\t\t\t\t\tcase 7: c = \"white\"; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout << c << endl;\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n\n#define SQ(X) ((X)*(X))\n\ntypedef struct{\n    char name[8];\n    int r,g,b;\n} Color;\n\ndouble getDist2(Color col1, Color col2);\nvoid GetCol(Color *cp, char *st);\nint getHex(char c);\n\nint main(){\n    Color col[8];\n    Color inCol;\n    double dist2;\n    int nearest, nearestId;\n    char buf[16];\n    \n    // init color table\n    col[0].r=0x00; col[0].g=0x00; col[0].b=0x00; strcpy(col[0].name, \"black\");\n    col[1].r=0x00; col[1].g=0x00; col[1].b=0xff; strcpy(col[1].name, \"blue\");\n    col[2].r=0x00; col[2].g=0xff; col[2].b=0x00; strcpy(col[2].name, \"lime\");\n    col[3].r=0x00; col[3].g=0xff; col[3].b=0xff; strcpy(col[3].name, \"aqua\");\n    col[4].r=0xff; col[4].g=0x00; col[4].b=0x00; strcpy(col[4].name, \"red\");\n    col[5].r=0xff; col[5].g=0x00; col[5].b=0xff; strcpy(col[5].name, \"fuchsia\");\n    col[6].r=0xff; col[6].g=0xff; col[6].b=0x00; strcpy(col[6].name, \"yellow\");\n    col[7].r=0xff; col[7].g=0xff; col[7].b=0xff; strcpy(col[7].name, \"white\");\n    \n    while (scanf(\"%s\",buf), buf[0]!='0'){\n        GetCol(&inCol, buf);\n        nearest = 65536*4;\n        for (int i=0; i<8; i++){\n            dist2 = getDist2(col[i], inCol);\n            if (dist2 < nearest) nearest=dist2, nearestId=i;\n        }\n        printf(\"%s\\n\", col[nearestId].name);\n    }    \n    return 0;\n}\n\ndouble getDist2(Color col1, Color col2){\n    return SQ(col1.r-col2.r)+SQ(col1.g-col2.g)+SQ(col1.b-col2.b);\n}\n\nvoid GetCol(Color *cp, char *st){\n    cp->r = getHex(st[1])*0x10 + getHex(st[2]);\n    cp->g = getHex(st[3])*0x10 + getHex(st[4]);\n    cp->b = getHex(st[5])*0x10 + getHex(st[6]);\n}\n\nint getHex(char c){\n    if ('0'<=c && c<='9') return c-'0';\n    else return c-'a'+10;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\nlong i,j,k;\nstring s,c[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nwhile(cin>>s){\nif(s==\"0\")break;\nk=0;\ni=s[1]-48;if(s[1]>64)i-=39;\nj=s[2]-48;if(s[2]>64)j-=39;\nif(i*16+j>=128)k+=4;\ni=s[3]-48;if(s[3]>64)i-=39;\nj=s[4]-48;if(s[4]>64)j-=39;\nif(i*16+j>=128)k+=2;\ni=s[5]-48;if(s[5]>64)i-=39;\nj=s[6]-48;if(s[6]>64)j-=39;\nif(i*16+j>=128)k++;\ncout<<c[k]<<endl;\n}\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nstring table[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint to(char c){\n\tif( c >= 'a' ) return 10 + c - 'a';\n\treturn c - '0';\n}\n\nint main(){\n\tstring s;\n\twhile(cin >> s && s != \"0\"){\n\t\tint r = to(s[1])*16+to(s[2]);\n\t\tint g = to(s[3])*16+to(s[4]);\n\t\tint b = to(s[5])*16+to(s[6]);\n\t\tvector< pair<int,int> > answer;\n\t\tfor(int i = 0 ; i < 8 ; i++){\n\t\t\tint R = (i>>2&1)*255;\n\t\t\tint G = (i>>1&1)*255;\n\t\t\tint B = (i&1)*255;\n\t\t\tint dist = (R-r)*(R-r) + (g-G)*(g-G) + (b-B)*(b-B);\n\t\t\t//cout << R <<\" \" << G << \" \" << B << \" \" <<  endl;\n\t\t\tanswer.push_back( make_pair(dist,i) );\n\t\t}\n\t\tcout << table[(*min_element(answer.begin(),answer.end())).second] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n  \n// #define int long long\n#define pb push_back\n#define print(Target) cout << Target << '\\n'\n\n#define REP(i, n) for (int i = 0; i < (n); i++)\n#define REPS(i, a, n) for (int i = (a); i < (n); i++)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vii;\ntypedef pair<int, int> pii;\n\nbool is_uruu(int y) {return (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0));}\n\nstruct COL{\n  int n;\n  string name;\n};\n\nconst int c[8][3] = {{0, 0, 0}, {0, 0, 0xff}, {0, 0xff, 0}, {0, 0xff, 0xff}, {0xff, 0, 0}, {0xff, 0, 0xff}, {0xff, 0xff, 0}, {0xff, 0xff, 0xff}};\n\nconst string s[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nbool cmp(COL lhs, COL rhs)\n{\n  return (lhs.n < rhs.n);\n}\n\nsigned main()\n{\n  //ios::sync_with_stdio(false);\n  char sr[2], sg[2], sb[2];\n  char sh;\n    \n  while (scanf(\"%1s\", &sh), sh != '0'){\n    COL col[8];\n    scanf(\"%2s%2s%2s\", sr, sg, sb);\n    int r = strtol(sr, NULL, 16),\n        g = strtol(sg, NULL, 16),\n        b = strtol(sb, NULL, 16);\n\n    REP(i, 8){\n      col[i].n = (c[i][0] - r) * (c[i][0] - r) + (c[i][1] - g) * (c[i][1] - g) + (c[i][2] - b) * (c[i][2] - b);\n      col[i].name = s[i];\n    }\n\n    sort(col, col + 8, cmp);\n    print(col[0].name);\n  }\n\n  return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring colors[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nint c(char ch) {\n  if(isdigit(ch)) return ch-'0';\n  return ch-'a'+10;\n}\n\nint main() {\n  \n  int colR[8];\n  int colG[8];\n  int colB[8];\n  \n  for(int i=0; i<8; i++) {\n    colR[i] = i & 1 ? 255 : 0;\n    colG[i] = i & 2 ? 255 : 0;\n    colB[i] = i & 4 ? 255 : 0;\n  }\n  \n  string s;\n  \n  while(cin >> s) {\n    if(s == \"0\") break;\n    \n    s = s.substr(1);\n    \n    int R = (c(s[0]))*16 + (c(s[1]));\n    int G = (c(s[2]))*16 + (c(s[3]));\n    int B = (c(s[4]))*16 + (c(s[5]));\n    \n    int minD = (int)1e9;\n    int id = -1;\n    for(int i=0; i<8; i++) {\n      if( minD > pow(R-colR[i],2.0) + pow(G-colG[i],2.0) + pow(B-colB[i],2.0) ) {\n\tid = i;\n\tminD = pow(R-colR[i],2.0) + pow(G-colG[i],2.0) + pow(B-colB[i],2.0);\n      }\n    }\n    \n    cout << colors[id] << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <tuple>\n\nint tsurai(int r, int g, int b) {\n  return r*r + g*g + b*b;\n}\n\nint testcase_ends() {\n  char c;\n  scanf(\" %c\", &c);\n  if (c == '0') return 1;\n\n  int r, g, b;\n  scanf(\"%2x%2x%2x\", &r, &g, &b);\n\n  std::vector<std::pair<std::string, std::tuple<int, int, int>>> col;\n  int f = 255;\n  \n  col.emplace_back(\"black\", std::make_tuple(0, 0, 0));\n  col.emplace_back(\"blue\", std::make_tuple(0, 0, f));\n  col.emplace_back(\"lime\", std::make_tuple(0, f, 0));\n  col.emplace_back(\"aqua\", std::make_tuple(0, f, f));\n  col.emplace_back(\"red\", std::make_tuple(f, 0, 0));\n  col.emplace_back(\"fuchsia\", std::make_tuple(f, 0, f));\n  col.emplace_back(\"yellow\", std::make_tuple(f, f, 0));\n  col.emplace_back(\"white\", std::make_tuple(f, f, f));\n\n  int d = 1e9;\n  std::string res;\n  for (auto const& p: col) {\n    std::string cur;\n    std::tuple<int, int, int> rgb;\n    std::tie(cur, rgb) = p;\n    int r0, g0, b0;\n    std::tie(r0, g0, b0) = rgb;\n\n    int cur_d = tsurai(r0-r, g0-g, b0-b);\n    if (d > cur_d) {\n      d = cur_d;\n      res = cur;\n    }\n  }\n  printf(\"%s\\n\", res.c_str());\n  return 0;\n}\n\nint main() {\n  while (!testcase_ends()) {}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define INF 1e6\nusing namespace std;\n\nint d(string s,int color[3]){\n  int red=(s[1]-'0')*16+(s[2]-'0');\n  int green=(s[3]-'0')*16+(s[4]-'0');\n  int blue=(s[5]-'0')*16+(s[6]-'0');\n  return sqrt(pow((red-color[0]),2)+pow((green-color[1]),2)+pow((blue-color[2]),2));\n}\n\nint cl[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\nint main(){\n  string str;\n  while(1){\n    cin>>str;\n    if(str==\"0\")break;\n    int num=INF;\n    string ans=\"\";\n    rep(i,8){\n      if(num>d(str,cl[i])){\n\tif(i==0)ans=\"black\";\n\telse if(i==1)ans=\"blue\";\n\telse if(i==2)ans=\"lime\";\n\telse if(i==3)ans=\"aqua\";\n\telse if(i==4)ans=\"red\";\n\telse if(i==5)ans=\"fuchsia\";\n\telse if(i==6)ans=\"yellow\";\n\telse if(i==7)ans=\"white\";\n\tnum=d(str,cl[i]);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <ctime>\n\nusing namespace std;\n\n#define dump(n) cout<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define debug(n) cout<<__FILE__<<\",\"<<__LINE__<<\": #\"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();i++)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nint htoi(char c)\n{\n\tif(isdigit(c))\n\t\treturn c-'0';\n\telse\n\t\treturn c-'a'+10;\n}\n\nint main()\n{\n\tint color[8][3]={\n\t\t{0,0,0},\n\t\t{0,0,255},\n\t\t{0,255,0},\n\t\t{0,255,255},\n\t\t{255,0,0},\n\t\t{255,0,255},\n\t\t{255,255,0},\n\t\t{255,255,255},\n\t};\n\tstring name[8]={\n\t\t\"black\",\n\t\t\"blue\",\n\t\t\"lime\",\n\t\t\"aqua\",\n\t\t\"red\",\n\t\t\"fuchsia\",\n\t\t\"yellow\",\n\t\t\"white\"\n\t};\n\t\n\tfor(string s;cin>>s,s[0]!='0';){\n\t\ts=s.substr(1);\n\t\tint c[3];\n\t\trep(i,3)\n\t\t\tc[i]=htoi(s[i*2])*16+htoi(s[i*2+1]);\n\t\t\n\t\tint res=0;\n\t\trep(i,8){\n\t\t\tint ci=(c[0]-color[i][0])*(c[0]-color[i][0])+(c[1]-color[i][1])*(c[1]-color[i][1])+(c[2]-color[i][2])*(c[2]-color[i][2]);\n\t\t\tint cr=(c[0]-color[res][0])*(c[0]-color[res][0])+(c[1]-color[res][1])*(c[1]-color[res][1])+(c[2]-color[res][2])*(c[2]-color[res][2]);\n\t\t\tif(cr>ci)\n\t\t\t\tres=i;\n\t\t}\n\t\tcout<<name[res]<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string color[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int colornum[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    int sixteen[200]={};\n    for(int i=0;i<10;i++)sixteen[i]=i;\n    for(int i=0;i<6;i++)sixteen['a'-'0'+i]=10+i;\n    string str;\n    while(cin>>str&&str!=\"0\"){\n        int num[3];\n        for(int i=0;i<3;i++)num[i]=sixteen[str[1+2*i]-'0']*16+sixteen[str[2+2*i]-'0'];\n        int ans[8]={};\n        for(int i=0;i<8;i++){\n            for(int j=0;j<3;j++)ans[i]+=pow(colornum[i][j]-num[j],2);\n            ans[i]=sqrt(ans[i]);\n        }\n        int co=0;\n        for(int i=1;i<8;i++)if(ans[co]>ans[i])co=i;\n        cout<<color[co]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\nusing namespace std;\n\nconst int INF = 1e9;\ntypedef long long ll;\n\nstruct Color{\n  string name;\n  int R, G, B;\n};\n\nColor list[8];\n\nvoid init(){\n  list[0].name = \"black\";   list[0].R = 0x00; list[0].G = 0x00; list[0].B = 0x00;\n  list[1].name = \"blue\";    list[1].R = 0x00; list[1].G = 0x00; list[1].B = 0xff;\n  list[2].name = \"lime\";    list[2].R = 0x00; list[2].G = 0xff; list[2].B = 0x00;\n  list[3].name = \"aqua\";    list[3].R = 0x00; list[3].G = 0xff; list[3].B = 0xff;\n  list[4].name = \"red\";     list[4].R = 0xff; list[4].G = 0x00; list[4].B = 0x00;\n  list[5].name = \"fuchsia\"; list[5].R = 0xff; list[5].G = 0x00; list[5].B = 0xff;\n  list[6].name = \"yellow\";  list[6].R = 0xff; list[6].G = 0xff; list[6].B = 0x00;\n  list[7].name = \"white\";   list[7].R = 0xff; list[7].G = 0xff; list[7].B = 0xff;\n}\n\nint main(void){\n  init();\n  string colorcode;\n  while(cin >> colorcode && colorcode != \"0\"){\n    int r = stoi(string(colorcode, 1, 2), nullptr, 16);\n    int g = stoi(string(colorcode, 3, 2), nullptr, 16);\n    int b = stoi(string(colorcode, 5, 2), nullptr, 16);\n    int n, mind = INF;\n    for(int i = 0; i < 8; i++){\n      int d = (r - list[i].R) * (r - list[i].R) + (g - list[i].G) * (g - list[i].G) + (b - list[i].B) * (b - list[i].B);\n      if(d < mind){\n        mind = d;\n        n = i;\n      }\n    }\n    cout << list[n].name << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nstring in;\nconst string name[8] = {\n  \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nbool is_digit(char c) { return '0' <= c && c <= '9'; }\nint c2i(char c) { return c - '0'; }\n\nstring solve() {\n  in.erase(0, 1);\n  int my[3];\n  rep (i,3) my[i] = 0;\n  rep (i,3) {\n    if (is_digit(in[i*2])) {\n      my[i] = c2i(in[i*2]) * 16;\n    } else {\n      my[i] = (10 + (in[i*2] - 'a')) * 16;\n    }\n    \n    if (is_digit(in[i*2+1])) {\n      my[i] += c2i(in[i*2+1]);\n    } else {\n      my[i] += (10 + (in[i*2+1] - 'a'));\n    }\n  }\n  \n  double dk = double(1 << 28);\n  int l = -1;\n  rep (S,8) {\n    int ar[3], temp = 0;\n    rep (i,3) ar[i] = (S >> i & 1) ? 255 : 0 ;\n    rep (i,3) {\n      temp += (ar[i] - my[i]) * (ar[i] - my[i]);\n    }\n    double d = sqrt(double(temp));\n    if (dk > d) {\n      dk = d;\n      l = S;\n    }\n  }\n  return name[l];\n}\n\nint main() {\n  while (cin >> in) {\n    if (in == \"0\") break;\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,a,n) for(int i=a;i<n;i++)\n#define repb(i,a,b) for(int i=a;i>=b;i--)\n#define all(a) a.begin(),a.end()\n#define o(a) cout<<a<<endl\n#define pb(a) push_back(a)\n//#define int long long\n#define fi first\n#define se second\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\n\nstring str[8]={\"black\",\n                \"blue\",\n                \"lime\",\n                \"aqua\",\n                \"red\",\n                \"fuchsia\",\n                \"yellow\",\n                \"white\"};\n\nint change(string t){\n    int res = 0;\n    rep(i, 0, 2){\n        if('0' <= t[i] && t[i] <= '9'){\n            res += (t[i] - '0')*16*(1 - i);\n        }else{\n            res += ((t[i] - 'a') + 10)*16*(1 - i);\n        }\n    }\n    return res;\n}\n\nsigned main() {\n    string s;\n    while(cin >> s){\n        if(s == \"0\") break;\n        int r, g, b;\n        r = change(s.substr(1, 2));\n        g = change(s.substr(3, 2));\n        b = change(s.substr(5, 2));\n        int MIN = 1e9, p = -1;\n        rep(i, 0, 2){\n            rep(j, 0, 2){\n                rep(k, 0, 2){\n                    int d = (r - i*240)*(r - i*240) + (g - j*240)*(g - j*240) + (b - k*240)*(b - k*240);\n                    if(d < MIN){\n                        MIN = d;\n                        p = i*4 + j*2 + k;\n                    }\n                }\n            }\n        }\n        cout << str[p] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nconst char* color[] = {\n\t\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n};\n\nconst int RGB[][ 3 ] = {\n\t{ 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t{ 255, 255, 0 }, { 255, 255, 255 },\n};\n\nint xtod( char* c )\n{\n\tint ret = 0;\n\tint mag = 16;\n\tfor( int i = 0; i < 2; ++i, ++c ){\n\t\tint d = 0;\n\t\tif( *c >= '0' && *c <= '9' ){\n\t\t\td = *c - '0';\n\t\t}else{\n\t\t\td = *c - 'a' + 10;\n\t\t}\n\t\tret += ( d * mag );\n\t\tmag /= 16;\n\t}\n\treturn ret;\n}\n\nint distance( const int* o, int* x )\n{\n\tint dd[ 3 ];\n\tfor( int i = 0; i < 3; ++i ){\n\t\tdd[ i ] = x[ i ] - o[ i ];\n\t\tdd[ i ] *= dd[ i ];\n\t}\n\treturn dd[ 0 ] + dd[ 1 ] + dd[ 2 ];\n}\n\nint main()\n{\n\tchar col[ 8 ];\n\n\twhile( cin >> col && *col != '0' ){\n\t\tint n[ 3 ];\n\t\tfor( int i = 0; i < 3; ++i ){\n\t\t\tn[ i ] = xtod( col + ( 1 + i * 2 ) );\n\t\t}\n\t\tint d[ 8 ];\n\t\tfor( int i = 0; i < 8; ++i ){\n\t\t\td[ i ] = distance( RGB[ i ], n );\n\t\t}\n\t\tint ans = 0;\n\t\tint ansD = 200000;\n\t\tfor( int i = 0; i < 8; ++i ){\n\t\t\tif( d[ i ] < ansD ){\n\t\t\t\tans = i;\n\t\t\t\tansD = d[ i ];\n\t\t\t}\n\t\t}\n\t\tcout << color[ ans ] << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<cmath>\nusing namespace std;\n\n#define R 0\n#define G 1\n#define B 2\n\nvoid print_col(int r, int g, int b)\n{\n  string col[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n  int c[][3] = {{0, 0, 0}, {0, 0, 255}, {0, 255, 0}, {0, 255, 255},\n               {255, 0, 0}, {255, 0, 255}, {255, 255, 0}, {255, 255, 255}};\n  double d = 1000000;\n  double dd;\n  int a = -1;\n\n  for(int i = 0; i < 8; i++)\n  {\n    dd = pow(r - c[i][R], 2) + pow(g - c[i][G], 2) + pow(b - c[i][B], 2);\n    if(dd < d)\n    {\n      d = dd;\n      a = i;\n    }\n  }\n  cout << col[a] << endl;\n}\n\nint to_num(char n)\n{\n  return n >= 'a' ? n - 'a' + 10 : n - '0';\n}\n\nint main()\n{\n  string s;\n  int r, g, b;\n  while(true)\n  {\n    cin >> s;\n    if(s[0] == '0')\n      break;\n    r = to_num(s[1]) * 16 + to_num(s[2]);\n    g = to_num(s[3]) * 16 + to_num(s[4]);\n    b = to_num(s[5]) * 16 + to_num(s[6]);\n    print_col(r, g, b);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\n\n#define pb push_back\n#define rep(i, a, n) for(int i = (a); i < (n); i++)\n#define dep(i, a, n) for(int i = (a); i >= (n); i--)\n#define mod 1e9+7\n\n__attribute__((constructor))\nvoid initial() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n}\n\nint hen(char a) {\n  if((int)a - 48 >= 0 && (int)a - 48 < 10) return (int)a - 48;\n  if(a == 'a') return 10;\n  else if(a == 'b') return 11;\n  else if(a == 'c') return 12;\n  else if(a == 'd') return 13;\n  else if(a == 'e') return 14;\n  else return 15;\n}\n\nint main() {\n  string s;\n  while(cin >> s) {\n    if(s == \"0\") return 0;\n    int r = hen(s[1]) * 16 + hen(s[2]);\n    int g = hen(s[3]) * 16 + hen(s[4]);\n    int b = hen(s[5]) * 16 + hen(s[6]);\n\n    int ans = INT_MAX;\n    string mans;\n    if(r * r + g * g + b * b < ans) ans = r * r + g * g + b * b, mans = \"brack\";\n    if(r * r + g * g + (b - 255) * (b - 255) < ans) ans = r * r + g * g + (b - 255) * (b - 255), mans = \"blue\";\n    if(r * r + (g - 255) * (g - 255) + b * b < ans) ans = r * r + (g - 255) * (g - 255) + b * b, mans = \"lime\";\n    if(r * r + (g - 255) * (g - 255) + (b - 255) * (b - 255) < ans) ans = r * r + (g - 255) * (g - 255) + (b - 255) * (b - 255), mans = \"\taqua\";\n    if((r - 255) * (r - 255) + g * g + b * b < ans) ans = (r - 255) * (r - 255) + g * g + b * b, mans = \"red\";\n    if((r - 255) * (r - 255) + g * g + (b - 255) * (b - 255) < ans) ans = (r - 255) * (r - 255) + g * g + (b - 255) * (b - 255), mans = \"fuchsia\";\n    if((r - 255) * (r - 255) + (g - 255) * (g - 255) + b * b < ans) ans = (r - 255) * (r - 255) + (g - 255) * (g - 255) + b * b, mans = \"yello\";\n    if((r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 255) * (b - 255) < ans) ans = (r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 255) * (b - 255), mans = \"white\";\n\n    cout << mans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  string s;\n  map<char,int>m;\n  m['a']=10;\n  m['b']=11;\n  m['c']=12;\n  m['d']=13;\n  m['e']=14;\n  m['f']=15;\n  int col[8][3];\n  col[0][0]=0;col[0][1]=0;col[0][2]=0;\n  col[1][0]=0;col[1][1]=0;col[1][2]=255;\n  col[2][0]=0;col[2][1]=255;col[2][2]=0;\n  col[3][0]=0;col[3][1]=255;col[3][2]=255;\n  col[4][0]=255;col[4][1]=0;col[4][2]=0;\n  col[5][0]=255;col[5][1]=0;col[5][2]=255;\n  col[6][0]=255;col[6][1]=255;col[6][2]=0;\n  col[7][0]=255;col[7][1]=255;col[7][2]=255;\n  while(cin>>s,s!=\"0\"){\n    int a,b,c,a1,a2;\n    if(isdigit(s[1]))a1=s[1]-'0';\n    else a1=m[s[1]];\n    if(isdigit(s[2]))a2=s[2]-'0';\n    else a2=m[s[2]];\n    a=a1*16+a2;\n    if(isdigit(s[3]))a1=s[3]-'0';\n    else a1=m[s[3]];\n    if(isdigit(s[4]))a2=s[4]-'0';\n    else a2=m[s[4]];\n    b=a1*16+a2;\n    if(isdigit(s[5]))a1=s[5]-'0';\n    else a1=m[s[5]];\n    if(isdigit(s[6]))a2=s[6]-'0';\n    else a2=m[s[6]];\n    c=a1*16+a2;\n    int p,ss=INT_MAX;\n    for(int i=0;i<8;i++){\n      int x=(col[i][0]-a)*(col[i][0]-a)+\n            (col[i][1]-b)*(col[i][1]-b)+\n            (col[i][2]-c)*(col[i][2]-c);\n      if(x<ss){\n        ss=x;\n        p=i;\n      }\n    }\n    if(p==0)cout<<\"black\"<<endl;\n    if(p==1)cout<<\"blue\"<<endl;\n    if(p==2)cout<<\"lime\"<<endl;\n    if(p==3)cout<<\"aqua\"<<endl;\n    if(p==4)cout<<\"red\"<<endl;\n    if(p==5)cout<<\"fuchsia\"<<endl;\n    if(p==6)cout<<\"yellow\"<<endl;\n    if(p==7)cout<<\"white\"<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nstring cname[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\nint crgb[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\nint hconvert(char a){\n\tif('0' <= a && a <= '9'){\n\t\treturn (a - '0');\n\t}\n\telse{\n\t\treturn (a - 'a' + 10);\n\t}\n}\nint main(){\n\tstring str;\n\tint u,l,rgb[3],now,min,tmp;\n\twhile(cin >> str){\n\t\tif(str == \"0\") break;\n\t\tmin = 10000000;\n\t\tfor(int i = 1;i < str.size();i+=2){\n\t\t\tu = hconvert(str[i]);\n\t\t\tl = hconvert(str[i+1]);\n\t\t\trgb[(i / 2)] = u * 16 + l;\n\t\t}\n\t\tfor(int i = 0;i < 8;++i){\n\t\t\ttmp = 0;\n\t\t\tfor(int j = 0;j < 3;++j){\n\t\t\t\ttmp += (rgb[j] - crgb[i][j]) * (rgb[j] - crgb[i][j]);\n\t\t\t}\n\t\t\tif(tmp < min){\n\t\t\t\tmin = tmp;\n\t\t\t\tnow = i;\n\t\t\t}\n\t\t}\n\t\tcout << cname[now] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\nint main() {\n\tstring a;\n\tstring c[8] = { \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\n\tint d[8][3] = { {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},\n\t{255,0,255},{255,255,0},{255,255,255} };\n\twhile (cin>>a&&a!=\"0\")\n\t{\n\t\tdouble t[3];\n\t\tfor (int i = 1; i < a.length(); i += 2) {\n\t\t\tdouble b = 0;\n\t\t\tfor (int j = 0; j <= 1; j++) {\n\t\t\t\tif ((int)a[i + j] >= '0' && (int)a[i +j] <= '9')\n\t\t\t\t\tb += (pow(16, (j+1)%2)*(int)(a[i +j] - '0'));\n\t\t\t\telse \n\t\t\t\t\tb += (pow(16, (j+1)%2)*(10 + (int)a[i + j] - 'a'));\n\t\t\t}\n\t\t\tt[(i - 1) / 2] = b;\n\t\t}\n\t\tdouble e = 100000;\n\t\tstring f = \"\";\n\t\tfor (int i = 7; i >= 0; i--) {\n\t\t\tdouble g = sqrt(pow((t[0] - d[i][0]), 2) + pow((t[1] - d[i][1]), 2) + pow((t[2] - d[i][2]), 2));\n\t\t\tif (g <= e) {\n\t\t\t\te = g;\n\t\t\t\tf = c[i];\n\t\t\t}\n\t\t}\n\t\tcout << f << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <cctype>\n#include <sstream>\n#include <string>\n#include <list>\n#include <vector>\n#include <queue>\n#include <set>\n#include <stack>\n#include <map>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <iterator>\n#include <bitset>\n#include <complex>\n#include <fstream>\nusing namespace std;\ntypedef long long ll;\nconst double EPS = 1e-9;\ntypedef vector<int> vint;\ntypedef pair<int, int> pint;\n#define rep(i, n) REP(i, 0, n)\n#define ALL(v) v.begin(), v.end()\n#define MSG(a) cout << #a << \" \" << a << endl;\n#define REP(i, x, n) for(int i = x; i < n; i++)\ntemplate<class T> T RoundOff(T a){ return int(a+.5-(a<0)); }\ntemplate<class T, class C> void chmax(T& a, C b){ if(a < b) a = b; }\ntemplate<class T, class C> void chmin(T& a, C b){ if(b < a) a = b; }\ntemplate<class T, class C> pair<T, C> mp(T a, C b){ return make_pair(a, b); }\n\n/*\n\tツつ「ツづつつゥツカツδ可ーツコツーツドツδ可イツブツδ可δ環づつつュツづォツつ、\n */\nstruct Color\n{\n\tint r, g, b;\n\t\n\tColor() : r(0), g(0), b(0) { }\n\tColor(int r, int g, int b) : r(r), g(g), b(b)\n\t{\t}\n\tColor(string str)\n\t{\n\t\tr = strtol(str.substr(1, 2).c_str(), NULL, 16);\n\t\tg = strtol(str.substr(3, 2).c_str(), NULL, 16);\n\t\tb = strtol(str.substr(5, 2).c_str(), NULL, 16);\n\t}\n};\n\nColor operator - (const Color& left, const Color& right)\n{\treturn Color(left.r - right.r, left.g - right.g, left.b - right.b);\t}\n\ntemplate<class T> T SQR(T x){ return x * x; }\n\ndouble abs(Color color)\n{\treturn sqrt(SQR(color.r) + SQR(color.g) + SQR(color.b));\t}\n\nint main()\n{\n    string name[] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\tColor colors[8];\n\t\n\trep(i, 8) colors[i] = Color(bool(i & 1 << 2) * 0xff, bool(i & 1 << 1) * 0xff, bool(i & 1) * 0xff);\n\t\n\tfor(string line; cin >> line && line != \"0\";)\n\t{\n\t\tint index = 0;\n\t\tdouble fit = 1 << 30;\n\t\t\n\t\trep(i, 8) if(abs(colors[i] - Color(line)) < fit)\n\t\t{\n\t\t\tindex = i;\n\t\t\tfit = abs(colors[i] - Color(line));\n\t\t}\n\t\t\n\t\tcout << name[index] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main()\n{\n    string str;\n    string s[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int a[150] = {};\n    int b[8][3];\n\n    for( int i = '0'; i < '0' + 10; i++ )\n        a[i] = i - '0';\n    for( int i = 'a'; i < 'a' + 6; i++ )\n        a[i] = i - 'a' + 10;\n\n    for( int i = 0; i < 8; i++ )\n    {\n        if( i / 4 == 0 )\n            b[i][0] = 0;\n        else\n            b[i][0] = 255;\n\n        if( i == 0 || i == 1 || i == 4 || i == 5 )\n            b[i][1]= 0;\n        else\n            b[i][1] = 255;   \n\n        if( i % 2 == 0 )\n            b[i][2] = 0;\n        else\n            b[i][2] = 255;\n    }\n\n    while( cin >> str )\n    {\n        if( str == \"0\" )\n            break;\n            \n        int r = a[str[1]] * 16 + a[str[2]], g = a[str[3]] * 16 + a[str[4]], d = a[str[5]] * 16 + a[str[6]];\n        int res = 0;\n        int min = 100000000;\n        for( int i = 0; i < 8; i++ )\n        {\n            if( ( b[i][0] - r ) * ( b[i][0] - r ) + ( b[i][1] - g ) * ( b[i][1] - g ) + ( b[i][2] - d ) * ( b[i][2] - d ) < min )\n            {\n                min = ( b[i][0] - r ) * ( b[i][0] - r ) + ( b[i][1] - g ) * ( b[i][1] - g ) + ( b[i][2] - d ) * ( b[i][2] - d );\n                res = i;\n            }\n        }\n        cout << s[res] << endl;\n    }\n\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S, x[2][2][2] = { {{\"black\",\"blue\"}, {\"lime\",\"aqua\"}}, { {\"red\",\"fuchsia\"} {\"yellow\",\"white\"} } };\nchar T[9] = \"89abcdef\";\nint a, b, c;\nint main() {\n\twhile (true) {\n\t\ta = 0; b = 0; c = 0;\n\t\tcin >> S;\n\t\tif (S == \"0\") { break; }\n\t\tfor (int i = 0; i < 8; i++){\n\t\t\tif (T[i] == S[1]) {\n\t\t\t\ta = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[3]) {\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (T[i] == S[5]) {\n\t\t\t\tc = 1;\n\t\t\t}\n\t\t}\n\t\tcout << x[a][b][c] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <stack>\n#include <math.h>\n\nusing namespace std;\n\nint translate(char ch){\n\tif(ch >= '0' && ch <= '9')return ch - '0';\n\telse{\n\t\treturn 10 + ch - 'a';\n\t}\n}\n\nint main(){\n\n\tchar buf[10];\n\tint red,green,blue,diff[8],min,min_index;\n\n\twhile(true){\n\t\tscanf(\"%s\",buf);\n\t\tif(buf[0] == '0')break;\n\n\t\tred = 16*translate(buf[1])+translate(buf[2]);\n\t\tgreen = 16*translate(buf[3])+translate(buf[4]);\n\t\tblue = 16*translate(buf[5])+translate(buf[6]);\n\n\t\tdiff[0] = red*red + green*green + blue*blue; //black\n\t\tdiff[1] = red*red + green*green + (blue-255)*(blue-255); //blue\n\t\tdiff[2] = red*red + (green-255)*(green-255) + blue*blue; //lime\n\t\tdiff[3] = red*red + (green-255)*(green-255) + (blue-255)*(blue-255); //aqua\n\t\tdiff[4] = (red-255)*(red-255) + green*green + blue*blue; //red\n\t\tdiff[5] = (red-255)*(red-255) + green*green +(blue-255)*(blue-255); //fuchsia\n\t\tdiff[6] = (red-255)*(red-255) + (green-255)*(green-255) + blue*blue; //fuchsia\n\t\tdiff[7] = (red-255)*(red-255) + (green-255)*(green-255) +(blue-255)*(blue-255); //white\n\n\t\tmin = 2147483647;\n\n\t\tfor(int i=7; i >= 0; i--){\n\t\t\tif(diff[i] <= min){\n\t\t\t\tmin = diff[i];\n\t\t\t\tmin_index = i;\n\t\t\t}\n\t\t}\n\n\t\tswitch(min_index){\n\t\tcase 0:printf(\"black\\n\");\n\t\t\t\tbreak;\n\t\tcase 1:printf(\"blue\\n\");\n\t\t\t\tbreak;\n\t\tcase 2:printf(\"lime\\n\");\n\t\t\t\tbreak;\n\t\tcase 3:printf(\"aqua\\n\");\n\t\t\t\tbreak;\n\t\tcase 4:printf(\"red\\n\");\n\t\t\t\tbreak;\n\t\tcase 5:printf(\"fuchsia\\n\");\n\t\t\t\tbreak;\n\t\tcase 6:printf(\"yellow\\n\");\n\t\t\t\tbreak;\n\t\tcase 7:printf(\"white\\n\");\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<math.h>\n#include<string>\n#include<string.h>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<utility>\n#include<set>\n#include<map>\n#include<stdlib.h>\n#include<iomanip>\n\nusing namespace std;\n\n#define ll long long\n#define ld long double\n#define EPS 0.0000000001\n#define INF 1e9\n#define MOD 1000000007\n#define rep(i,n) for(i=0;i<n;i++)\n#define loop(i,a,n) for(i=a;i<n;i++)\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\n\nint main(void) {\n  int i,j;\n  char str[8][10]={\"black\",\"blue\",\"lime\",\"aqua\",\n\t\t   \"red\",\"fuchsia\",\"yellow\",\"white\"};\n  int col[8][3]={{0,0,0},{0,0,255},{0,255,0},\n\t\t {0,255,255},{255,0,0},{255,0,255},\n\t\t {255,255,0},{255,255,255}};\n  while(1){\n    string s;\n    cin>>s;\n    if(s==\"0\")break;\n    vi v(3,0);\n    rep(i,3){\n      if('a'<=s[i*2+1] && s[i*2+1]<='f')v[i]+=10+(s[i*2+1]-'a');\n      else v[i]+=s[i*2+1]-'0';\n      v[i]*=16;\n      if('a'<=s[i*2+2] && s[i*2+2]<='f')v[i]+=10+(s[i*2+2]-'a');\n      else v[i]+=s[i*2+2]-'0';\n    }\n    int ans=INF;\n    rep(i,8){\n      int tmp=0;\n      rep(j,3)tmp+=(col[i][j]-v[j])*(col[i][j]-v[j]);\n      ans=min(ans,tmp);\n    }\n    rep(i,8){\n      int tmp=0;\n      rep(j,3)tmp+=(col[i][j]-v[j])*(col[i][j]-v[j]);\n      if(tmp==ans){\n\tcout<<str[i]<<endl;\n\tbreak;\n      }\n    }\n\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nint num[1000];\nconst string ans[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\n\t\t      \"fuchsia\",\"yellow\",\"white\"};\nint ff = 15*16 + 15;\nint RGB[][3] = {{0,0,0},\n\t\t{0,0,ff},\n\t\t{0,ff,0},\n\t\t{0,ff,ff},\n\t\t{ff,0,0},\n\t\t{ff,0,ff},\n\t\t{ff,ff,0},\n\t\t{ff,ff,ff}};\n\nint _16to10(string a){\n  return num[a[0]] * 16 + num[a[1]];\n}\nint main(){\n  num['1'] = 1,  num['2'] = 2,  num['3'] = 3,  num['4'] = 4,num['5'] = 5,num['6'] = 6,num['7'] = 7,num['8'] = 8,num['9'] = 9,num['a'] = 10,num['b'] = 11,  num['c'] = 12,  num['d'] = 13,  num['e'] = 14,num['f'] = 15;\n  string color;\n  while(cin >> color,color[0] !='0') {\n    string r,g,b;\n    r = color.substr(1,2);\n    g = color.substr(3,2);\n    b = color.substr(5,2);\n    int rnum,gnum,bnum;\n    rnum = _16to10(r);\n    gnum = _16to10(g);\n    bnum = _16to10(b);\n    double mn = 1000000000;\n    string anscolor;\n    for(int i = 7 ; i >= 0 ; i-- ){\n      double dk = pow(rnum-RGB[i][0],2)+pow(gnum-RGB[i][1],2)+pow(bnum-RGB[i][2],2);\n      if(mn >= dk){\n\tmn = dk;\n\tanscolor = ans[i];\n      }\n    } \n    cout << anscolor << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include \"bits/stdc++.h\"\n#define EPS 1e-10\nusing namespace std;\ntypedef long long llong;\nstring color(int x) {\n\tswitch (x) {\n\tcase 0:return \"black\";\n\tcase 1:return \"blue\";\n\tcase 2:return \"lime\";\n\tcase 3:return \"aqua\";\n\tcase 4:return \"red\";\n\tcase 5:return \"fuchsia\";\n\tcase 6:return \"yellow\";\n\tcase 7:return \"white\";\n\tdefault:return \"gray\";\n\t}\n}\n\nint h(char c) {\n\tif (isalpha(c))return (c - 'a')+10;\n\telse return (c - '0');\n}\n\nint main() {\n\n\tmap<int, vector<double> >m;\n\tm[0].push_back(0x00);\n\tm[0].push_back(0x00);\n\tm[0].push_back(0x00);\n\tm[1].push_back(0x00);\n\tm[1].push_back(0x00);\n\tm[1].push_back(0xff);\n\tm[2].push_back(0x00);\n\tm[2].push_back(0xff);\n\tm[2].push_back(0x00);\n\tm[3].push_back(0x00);\n\tm[3].push_back(0xff);\n\tm[3].push_back(0xff);\n\tm[4].push_back(0xff);\n\tm[4].push_back(0x00);\n\tm[4].push_back(0x00);\n\tm[5].push_back(0xff);\n\tm[5].push_back(0x00);\n\tm[5].push_back(0xff);\n\tm[6].push_back(0xff);\n\tm[6].push_back(0xff);\n\tm[6].push_back(0x00);\n\tm[7].push_back(0xff);\n\tm[7].push_back(0xff);\n\tm[7].push_back(0xff);\n\n\tvector<double>d(8);\n\n\tstring s;\n\n\twhile (cin >> s, s != \"0\") {\n\n\t\tdouble r, g, b;\n\n\t\tr = h(s[1]) * 16 + h(s[2]); //cout << \"red is \" << r << endl;\n\t\tg = h(s[3]) * 16 + h(s[4]); //cout << \"green is \" << g << endl;\n\t\tb = h(s[5]) * 16 + h(s[6]); //cout << \"blue is \" << b << endl;\n\n\t\tfor (int i = 0; i < 8; i++) {\n\n\t\t\td[i] = pow(pow(r - m[i][0], 2) + pow(g - m[i][1], 2) + pow(b - m[i][2], 2), 0.5);\n\t\t//\tcout << d[i] << \" \";\n\t\t}//cout << endl;\n\t\tcout << color(distance(d.begin(),min_element(d.begin(), d.end()))) << endl;\n\n\n\t}\n\n\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define it ::iterator\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double ESP=1e-10;\nusing namespace std;\nint in[256]={0};\nint han[3][8]={\n  {  0,  0,  0,  0,256,256,256,256},\n  {  0,  0,256,256,  0,  0,256,256},\n  {  0,256,  0,256,  0,256,  0,256}\n};\nstring ss[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint main(){\n  string s;\n  loop(i,'0','9'+1)in[i]=i-'0';\n  loop(i,'a','g')in[i]=i-'a'+10;\n  while(cin>>s,s.size()!=1||s[0]!='0'){\n    int a[3]={0};\n    rep(i,3){\n      a[i]=in[s[2*i+1]]*16+in[s[2*i+2]];\n    }\n    long long int mi=1000000000;\n    int ms;\n    rep(i,8){\n      long long int sum=0;\n      rep(j,3)sum+=(han[j][i]-a[j])*(han[j][i]-a[j]);\n      if(mi>sum){\n\tms=i;\n\tmi=sum;\n      }\n    }\n    cout<<ss[ms]<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nstruct Color{\n\tdouble r,g,b;\n};\n\ndouble sq( double a ){\n\treturn a * a;\n}\n\nint main(int argc, char const* argv[])\n{\n\tconst char *color[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tColor colorStrong[] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\n\tColor inputColor;\n\tint rgb;\n\tdouble d[8];\n\tchar damy;\n\n\twhile( cin >> damy && damy != '0' ){\n\t\tcin >> hex >> rgb;\n\t\tinputColor.r = rgb >> 16;\n\t\tinputColor.g = ( rgb >> 8 ) & 0xff;\n\t\tinputColor.b = rgb & 0xff;\n\n\t\tfor( int i = 0;i < 8;i++ ){\n\t\t\td[i] = sqrt( sq( inputColor.r - colorStrong[i].r ) + sq( inputColor.g - colorStrong[i].g ) + sq( inputColor.b - colorStrong[i].b ) );\n\t\t}\n\n\t\tdouble* answer = min_element( d, d + 8 );\n\n\t\tfor( int i = 0;i < 8;i++ ){\n\t\t\tif( answer == &d[i] ){\n\t\t\t\tcout << color[i] << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <memory>\n#include <string>\n\n#include <algorithm>\n#include <complex>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n#include <bitset>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\n#define strtok_r strtok_s\n#endif\n\n#define ITER(c)             __typeof__((c).begin())\n#define FOREACH(it, c)      for (ITER(c) it=(c).begin(); it != (c).end(); ++it)\n#define RITER(c)            __typeof__((c).rbegin())\n#define RFOREACH(it, c)     for (RITER(c) it=(c).rbegin(); it != (c).rend(); ++it)\n#define REP(i, n)           REPEAT(i, 0, n)\n#define RREP(i, n)          RREPEAT(i, 0, n)\n#define REPEAT(i, k, n)     for(int i = (k); i < ((k)+(n)); ++i)\n#define RREPEAT(i, k, n)    for(int i = (k)+(n)-1; i >= (k); --i)\n#define FROMTO(i,f,t)       for(int i = f; i < t; i++)\n#define ALL(c)              (c).begin(), (c).end()\n#define LLPOW(p1,p2)        ((ll)pow((double)(p1), (int)p2))\n#define ESIZEOF(A)          (sizeof(A)/sizeof((A)[0]))\n#define CIN_NO_SYNC         do { cin.tie(0); ios_base::sync_with_stdio(false); } while(0)\n#define GETSTR(p)           fgets((p), sizeof(p), stdin)\n#define CHOMP(p)            do{ char *_q = (p) + strlen(p)-1; if(*_q == '\\n' || *_q == '\\r') *_q = 0; } while(0)\n#define FILL(m,v)           memset(m, v, sizeof(m))\n#define mp                  make_pair\n#define pb                  push_back\ntemplate<class _T> _T MAX(_T p1,_T p2){return (p1>p2)?p1:p2;} \ntemplate<class _T> _T MIN(_T p1,_T p2){return (p1<p2)?p1:p2;} \ntemplate <class _Tv> inline string join(const _Tv &v,string sep=\" \"){\n    ostringstream s;FOREACH(it,v){if(it!=v.begin())s<<sep;s<<*it;};return s.str();\n}\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double D;\ntypedef complex<D> P;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\n#define X real()\n#define Y imag()\n#define EPS (1e-9)\n#define DEQ(p1,p2) (abs((p1)-(p2)) < EPS)\n\n#ifdef _DEBUG\ntemplate<class _Tv> inline void _prfe(const char *_n,const _Tv _c,bool _p=false){\n    ITER(_c) _it=_c.begin();\n    if(_p){cout<<_n<<\" = [\"<<endl;for(;_it!=_c.end();++_it)cout<<\"    \"<<*_it<<endl;cout<<\"]\"<<endl; }\n    else{cout<<_n<<\" = [ \";if(_c.size()){cout<<*_it++;for(;_it!=_c.end();++_it)cout<<\", \"<<*_it;}cout<<\" ]\"<<endl; }\n}\nostream &operator<<(ostream &os, const pair<int,int> &p){return(os<<\"(\"<<p.first<<\",\"<<p.second<<\")\");}\n#define pf printf\n#define pr(n) do{cout<<#n\" = \"<<(n)<<endl;}while(0)\n#define prfe(n) _prfe(#n, n)\n#define prfep(n) _prfe(#n, n, true)\n#define dbgchk(n) do{if(n)throw;}while(0)\n#else\n#define pf(...) /* */\n#define pr(...) /* */\n#define prfe(...) /* */\n#define prfep(...) /* */\n#define dbgchk(...) /* */\n#endif\n\nconst char *t[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"redff\",\"fuchsia\",\"yellow\",\"white\"};\n\nint solve(int r, int g, int b){\n    int min = 0; int mind = INT_MAX;\n    REP(i,8){\n        int r0 = ((i>>2)&1)*0xff, g0 = ((i>>1)&1)*0xff, b0 = ((i>>0)&1)*0xff;\n        int d = (r-r0)*(r-r0)+(g-g0)*(g-g0)+(b-b0)*(b-b0);\n        if(mind > d){\n            mind = d, min = i;\n        }\n    }\n    return min;\n}\n\nint main(){\n    int n;\n    while(scanf(\"#%x \", &n)){\n        cout << t[solve((n>>16)&0xff,(n>>8)&0xff,n&0xff)] << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <climits>\n#include <vector>\n#include <map>\n#include <set>\n#include <list>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <iostream>\n#include <string>\n\n#define REP(i,n) for(long long i=0;i<n;++i)\n#define REPR(i,n) for(long long i=n;i>=0;--i)\n#define REPI(itr,v) for(auto itr=v.begin();itr!=v.end();++itr)\n#define REPIR(itr,v) for(auto itr=v.rbegin();itr!=v.rend();++itr)\n#define FOR(i,a,b) for(long long i=a;i<b;++i)\n#define SORT(v,n) sort(v, v+n)\n#define SORTV(v) sort(v.begin(), v.end())\n#define ALL(v) v.begin(),v.end()\n#define llong long long\n#define INF 999999999\n#define MOD 1000000007\n#define pb push_back\n#define pf push_front\n#define MP make_pair\n#define SV(v) {for(long long sitr=0;sitr<v.size();++sitr){cin>>v[sitr];}}\n\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\n\nusing namespace std;\n\ntypedef pair<int,int> pii;\n\nint R[8], G[8], B[8];\nstring color[8] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nint calc_d(int r, int g, int b, int i){\n  return (r - R[i]) * (r - R[i]) + (g - G[i]) * (g - G[i]) + (b - B[i]) * (b - B[i]);\n}\n\nint main(){\n\n  REP(i,8){\n    if(i % 2 == 1){\n      B[i] = 255;\n    }\n    if(i % 4 >= 2){\n      G[i] = 255;\n    }\n    if(i >= 4){\n      R[i] = 255;\n    }\n  }\n\n  while(true){\n    string s;\n    cin >> s;\n\n    if(s == \"0\") break;\n\n    int r, g, b;\n    r = stoi(s.substr(1,2), nullptr, 16);\n    g = stoi(s.substr(3,2), nullptr, 16);\n    b = stoi(s.substr(5,2), nullptr, 16);\n\n    int ans = 0;\n    int d = INF;\n    REP(i,8){\n      int tmp = calc_d(r, g, b, i);\n      if(tmp < d){\n        d = tmp;\n        ans = i;\n      }\n    }\n    cout << color[ans] << endl;\n  }\n  return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n#include<numeric>\n#include<cassert>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define rep(i,s,n) for(int i=(s); i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n#define IN(x,s,g) ((x) >= (s) && (x) < (g))\n#define ISIN(x,y,w,h) (IN((x),0,(w)) && IN((y),0,(h)))\n#define print(x) printf(\"%d\\n\",x)\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\nconst int _dx[] = {0,1,0,-1};\nconst int _dy[] = {-1,0,1,0};\n\nint getInt(){\n  int ret = 0,c;\n  c = getchar();\n  while(!isdigit(c)) c = getchar();\n  while(isdigit(c)){\n    ret *= 10;\n    ret += c - '0';\n    c = getchar();\n  }\n  return ret;\n}\n\nint main(){\n  int table[][3] = {\n    {  0,  0,  0},\n    {  0,  0,255},\n    {  0,255,  0},\n    {  0,255,255},\n    {255,  0,  0},\n    {255,  0,255},\n    {255,255,  0},\n    {255,255,255}\n  };\n\n  const char *name[] = {\n    \"black\",\n    \"blue\",\n    \"lime\",\n    \"aqua\",\n    \"red\",\n    \"fuchsia\",\n    \"yellow\",\n    \"white\",\n  };\n\n  const int n = sizeof(table) / sizeof(table[0]);\n\n  char buff[256];\n  while(fgets(buff,sizeof(buff),stdin), buff[0] != '0'){\n    char col[3] = { 0 };\n    int rgb[3];\n    int diff = INT_MAX;\n    int ans;\n    REP(i,3){\n      col[0] = buff[1 + i*2];\n      col[1] = buff[1 + i*2 + 1];\n\n      sscanf(col, \"%x\", rgb + i);\n    }\n\n#define DBL(x) ((x)*(x))\n    REP(i,n){\n      int tmp = 0;\n      REP(j,3)\n        tmp += DBL(rgb[j] - table[i][j]);\n      if(tmp < diff){\n        diff = tmp;\n        ans = i;\n      }\n    }\n    puts(name[ans]);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n \nusing namespace std;\n\n#define INF (1<<29)\n\nstring str;\nconst string color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\n\t\t\t \"yellow\",\"white\"};\nconst string strong[8] = {\"#000000\",\"#0000ff\",\"#00ff00\",\"#00ffff\",\"#ff0000\",\n\t\t\t  \"#ff00ff\",\"#ffff00\",\"#ffffff\"};\n \nint change(char ch)\n{\n    if ('0' <= ch && ch <= '9') {\n\treturn ch - '0';\n    }\n    return 10 + (ch - 'a');\n}\n \nint d(string str1, string str2)\n{\n    int R1 = change(str1[1])*16 + change(str1[2]);\n    int G1 = change(str1[3])*16 + change(str1[4]);\n    int B1 = change(str1[5])*16 + change(str1[6]);\n \n    int R2 = change(str2[1])*16 + change(str2[2]);\n    int G2 = change(str2[3])*16 + change(str2[4]);\n    int B2 = change(str2[5])*16 + change(str2[6]);\n \n    int res = pow(R1-R2,2.0) + pow(G1-G2,2.0) + pow(B1-B2,2.0);\n \n    return res;\n}\n \nint main()\n{\n    while (cin >> str, str != \"0\") {\n\tint min_ = INF,ans;\n\tfor (int i = 0; i < 8; i++) {\n\t    int dist = d(str, strong[i]);\n\t    if (dist < min_) {\n\t\tmin_ = dist;\n\t\tans = i;\n\t    }\n\t}\n\tcout << color[ans] << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <climits>\nusing namespace std;\n\nstruct Color {\n    string name; int r, g, b;\n};\nvector<Color> colors = {\n    (Color){\"black\", 0, 0, 0},\n    (Color){\"blue\", 0, 0, 255},\n    (Color){\"lime\", 0, 255, 0},\n    (Color){\"aqua\", 0, 255, 255},\n    (Color){\"red\", 255, 0, 0},\n    (Color){\"fuchsia\", 255, 0, 255},\n    (Color){\"yellow\", 255, 255, 0},\n    (Color){\"white\", 255, 255, 255}\n};\n\nint dec(char c) {\n    if (isdigit(c)) return c - '0';\n    return c - 'a' + 10;\n}\n\nint sq(int x) {\n    return x * x;\n}\n\nint main() {\n    string s;\n    while (cin >> s, s != \"0\") {\n        int r = dec(s[1]) * 16 + dec(s[2]);\n        int g = dec(s[3]) * 16 + dec(s[4]);\n        int b = dec(s[5]) * 16 + dec(s[6]);\n        int mn = INT_MAX, k = -1;\n        for (int i=0; i<(int)colors.size(); ++i) {\n            int t = sq(r-colors[i].r) + sq(g-colors[i].g) + sq(b-colors[i].b);\n            if (t < mn) {\n                mn = t;\n                k = i;\n            }\n        }\n        cout << colors[k].name << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint hex2digit(const char x) {\n    int res = 0;\n    if ('0' <= x && x <= '9') {\n        res += x - '0';\n    } else if ('a' <= x && x <= 'f') {\n        res += x - 'a' + 10;\n    }\n    return res;\n}\n\nint main() {\n    const int red[] = {0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, };\n    const int green[] = {0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, };\n    const int blue[] = {0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, };\n    const char* color[] = {\n        \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\",\n    };\n    while (true) {\n        char input[8];\n        cin >> input;\n        if (input[0] == '0') {\n            break;\n        }\n        int k = 0,\n            r = hex2digit(input[1]) * 16 + hex2digit(input[2]),\n            g = hex2digit(input[3]) * 16 + hex2digit(input[4]),\n            b = hex2digit(input[5]) * 16 + hex2digit(input[6]);\n        double minD = 1000000;\n        for (int i = 0; i < (int) sizeof red / (int) sizeof *red; i++) {\n            double d = sqrt(pow(r - red[i], 2) + pow(g - green[i], 2) + pow(b - blue[i], 2));\n            if (d < minD) {\n                minD = d;\n                k = i;\n            }\n        }\n        cout << color[k] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECUREj_NO_WARNINGS 1\n# define _USE_MATH_DEFINES\n# include <iostream>\n# include <numeric>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <forward_list>\n# include <map>\n# include <stack>\nusing namespace std;\n# define INF ((int)(1<<25))\n# define REP(i,n) for(int i=0;i<(int)n;i++)\n# define FOR(i,n) REP(i,n)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define TORAD 2.0*M_PI/360.0\n# define INT(x) int x;cin>>x;\n# define ALL(x) (x).begin(),(x).end()\n# define RALL(x) (x).rbegin(),(x).rend()\n# define DEBUG(x) cout<<#x<<\":\"<<x<<endl;\n# define EPS 1e-12\n#ifdef _MSC_VER\n#include <intrin.h>\n#define __builtin_popcount __popcnt\n#endif\ntypedef long long lint;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<int, pii> piii;\nconst int dx[4] = { 0,1,0,-1 }, dy[4] = { -1,0,1,0 };\ntemplate<class T> void debug(T a) { for (auto i : a)cout << i << endl; }\n\nint main()\n{\n\tstring a;\n\tint FF = 16 * 16 - 1;\n\tint f[][3] = { { FF,FF,FF },{ FF,FF,0 },{ FF,0,FF },{ FF,0,0 },{ 0,FF,FF },{ 0,FF,0 },{ 0,0,FF },{ 0,0,0 } };\n\tstring ans[] = { \"white\",\"yellow\",\"fuchsia\",\"red\",\"aqua\",\"lime\",\"blue\",\"black\" };\n\twhile (cin >> a&&a != \"0\")\n\t{\n\t\tint g[3] = { strtol(a.substr(1,2).c_str(),NULL,16),strtol(a.substr(3,2).c_str(),NULL,16),strtol(a.substr(5,2).c_str(),NULL,16) };\n\t\tint d = INT_MAX, id = 0;\n\t\tFOR(i, 8)\n\t\t{\n\t\t\tdouble D = 0;\n\t\t\tFOR(j, 3)\n\t\t\t{\n\t\t\t\tD += pow(f[i][j] - g[j], 2);\n\t\t\t}\n\t\t\tif (D <= d)\n\t\t\t{\n\t\t\t\td = D;\n\t\t\t\tid = i;\n\t\t\t}\n\t\t}\n\t\tcout << ans[id] << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define MAX_N 1000000\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> P;\n\nstatic const double eps = 1e-8;\n\nstruct COLOR{\n\tstring name;\n\tstring R;\n\tstring G;\n\tstring B;\n};\n\nint hex2dec(string str){\n\tconst char hex[] = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};\n\treturn 16 * (int)lower_bound(hex,hex+16,str[0]) + (int)lower_bound(hex,hex+16,str[1]);\n}\n\nint main(){\n\n\tstruct COLOR color[] = {\n\t\t\"black\",\"00\",\"00\",\"00\",\n\t\t\"blue\",\"00\",\"00\",\"ff\",\n\t\t\"lime\",\"00\",\"ff\",\"00\",\n\t\t\"aqua\",\"00\",\"ff\",\"ff\",\n\t\t\"red\",\"ff\",\"00\",\"00\",\n\t\t\"fuchsia\",\"ff\",\"00\",\"ff\",\n\t\t\"yellow\",\"ff\",\"ff\",\"00\",\n\t\t\"white\",\"ff\",\"ff\",\"ff\",\n\t};\n\n\tstring str;\n\twhile(cin >> str){\n\t\tif(str.size() == 1 && str[0] == '0') break;\n\t\tint r = hex2dec(str.substr(1,2));\n\t\tint g = hex2dec(str.substr(3,2));\n\t\tint b = hex2dec(str.substr(5,2));\n\n\t\tint dk = 10000000;\n\t\tint idx=0;\n\t\tfor(int i=0;i<sizeof(color)/sizeof(struct COLOR); i++){\n\t\t\tint tmp;\n\t\t\tif(dk > (tmp=((r - hex2dec(color[i].R)) * (r - hex2dec(color[i].R))\n\t\t\t\t+ (g - hex2dec(color[i].G)) * (g - hex2dec(color[i].G))\n\t\t\t\t+ (b - hex2dec(color[i].B)) * (b - hex2dec(color[i].B))))){\n\t\t\t\t\tdk = tmp;\n\t\t\t\t\tidx=i;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%s\\n\",color[idx].name.c_str());\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main() {\n\tstring a;\n\tstring c[8] = { \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\n\tint d[8][3] = { {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},\n\t{255,0,255},{255,255,0},{255,255,255} };\n\twhile (cin>>a&&a!=\"0\")\n\t{\n\t\tint t[3];\n\t\tfor (int i = 1; i < a.length(); i += 2) {\n\t\t\tint b = 0;\n\t\t\tfor (int j = 0; j <= 1; j++) {\n\t\t\t\tif ((int)a[i + j] >= '0' && (int)a[i +j] <= '9')\n\t\t\t\t\tb += (pow(16, (j+1)%2)*(int)(a[i +j] - '0'));\n\t\t\t\telse \n\t\t\t\t\tb += (pow(16, (j+1)%2)*(10 + (int)a[i + j] - 'a'));\n\t\t\t}\n\t\t\tt[(i - 1) / 2] = b;\n\t\t}\n\t\tdouble e = 100000;\n\t\tstring f = \"\";\n\t\tfor (int i = 7; i >= 0; i--) {\n\t\t\tdouble g = sqrt(pow((t[0] - d[i][0]), 2) + pow((t[1] - d[i][1]), 2) + pow((t[2] - d[i][2]), 2));\n\t\t\tif (g <= e) {\n\t\t\t\te = g;\n\t\t\t\tf = c[i];\n\t\t\t}\n\t\t}\n\t\tcout << f << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <string>\nusing namespace std;\ndouble square(int SQ){\n\tdouble KAGA;\n\tKAGA=SQ*SQ;\n\treturn KAGA;\n}\nint main(){\n\tstring s,kaga=\"0123456789abcdef\";\n\tstring color[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tint RK[8]={0,0,0,0,255,255,255,255};\n\tint GK[8]={0,0,255,255,0,0,255,255};\n\tint BK[8]={0,255,0,255,0,255,0,255};\n\tint C[3];\n\tdouble tmp;\n\tdouble MIN;\n\tstring ans;\n\twhile(cin>>s,s!=\"0\"){\n\t\tfor(int i=2,j=0;j<3;i+=2,j++){\n\t\t\tC[j]=0;\n\t\t\tfor(int k=0;k<20;k++){\n\t\t\t\tif(s[i]==kaga[k]){\n\t\t\t\t\tC[j]+=k;\n\t\t\t\t\tk+=30;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int k=0;k<20;k++){\n\t\t\t\tif(s[i-1]==kaga[k]){\n\t\t\t\t\tC[j]+=k*16;\n\t\t\t\t\tk+=30;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tans=\"?\";\n\t\tMIN=10000000;\n\t\t\n\t\tfor(int i=0;i<8;i++){\n\t\t\ttmp=sqrt(square(C[0]-RK[i])+square(C[1]-GK[i])+square(C[2]-BK[i]));\n\t\t\tif(MIN>tmp){\n\t\t\t\tMIN=tmp;\n\t\t\t\tans=color[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main() {\n\tstring a;\n\tstring c[8] = { \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\n\tint d[8][3] = { {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},\n\t{255,0,255},{255,255,0},{255,255,255} };\n\twhile (cin>>a&&a!=\"0\")\n\t{\n\t\tint t[3];\n\t\tfor (int i = 1; i < a.length(); i += 2) {\n\t\t\tint b = 0;\n\t\t\tfor (int j = 0; j <= 1; j++) {\n\t\t\t\tif ((int)a[i + j] >= '0' && (int)a[i +j] <= '9')\n\t\t\t\t\tb += (pow(16, (j+1)%2)*(int)(a[i +j] - '0'));\n\t\t\t\telse \n\t\t\t\t\tb += (pow(16, (j+1)%2)*(10 + (int)a[i + j] - 'a'));\n\t\t\t}\n\t\t\tt[(i - 1) / 2] = b;\n\t\t}\n\t\tdouble e = 100000;\n\t\tstring f = \"\";\n\t\tfor (int i = 7; i >= 0; i--) {\n\t\t\tdouble g = sqrt(pow((t[0] - d[i][0]), 2) + pow((t[1] - d[i][1]), 2) + pow((t[2] - d[i][2]), 2));\n\t\t\tif (g <= e) {\n\t\t\t\te = g;\n\t\t\t\tf = c[i];\n\t\t\t}\n\t\t}\n\t\tcout << f << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint dir[5010];\n\nvoid remove(){\n\tint cnt = 0;\n\tfor(int i = 0 ; i < 5010 ; i++){\n\t\tif( dir[i] == 31 ) dir[i] = 0,cnt++;\n\t}\n\tfor(int k = 0 ; k <= cnt ; k++)\n\tfor(int i = 5009 ; i > 0 ; i--){\n\t\tif( dir[i] && !dir[i-1] ){\n\t\t\tswap(dir[i],dir[i-1]);\n\t\t}\n\t}\n}\n\nvoid tate(int x,int l){\n\tfor(int i = 1 ; i <= l ; i++) dir[5010-i] |= (1<<x);\n\t\n\tfor(int _ = 0 ; _ < 10 ; _++)\n\tfor(int i = 5010-l+_ ; i > 0 ; i--){\n\t\tif( (dir[i] >> x & 1) && (dir[i-1] >> x & 1) == 0 ){\n\t\t\tdir[i] -= (1<<x);\n\t\t\tdir[i-1] += (1<<x);\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tremove();\n}\n\nvoid yoko(int x,int l){\n\tint mask = ((1<<l)-1) << x;\n\tdir[5009] = mask;\n\tfor(int i = 5009 ; i > 0 ; i--){\n\t\tif( dir[i] && !(dir[i-1] & mask) ){\n\t\t\tdir[i] -= mask;\n\t\t\tdir[i-1] += mask;\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tremove();\n}\nint main(){\n\tint n;\n\twhile(cin >> n && n){\n\t\tfor(int i = 0 ; i <= 5009 ; i++)\n\t\t\tdir[i] = 0;\n\t\t\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tint d,l,x;\n\t\t\tcin >> d >> l >> x;\n\t\t\tx--;\n\t\t\tif(d==1){\n\t\t\t\tyoko(x,l);\n\t\t\t}else{\n\t\t\t\ttate(x,l);\n\t\t\t}\n\t\t\tint f = 0;\n\t\t\tif( i == 10 ) continue;\n\t\t\tfor(\tint j = 5009 ; j >= 0 ; j--){\n\t\t\t\tif(f||dir[j]){\n\t\t\t\t\t//cout << j << \" \" << (dir[j]&1) << (dir[j]&2) << (dir[j]&4) << (dir[j]&8) << (dir[j]&16) << endl; ;\n\t\t\t\t\tf=true;\n\t\t\t\t}\n\t\t\t}\n\t\t//\tcout << endl;\n\t\t}\n\t\tint ans = 0;\n\t\tfor(int i = 0 ; i < 5010 ; i++)\n\t\t\tans += __builtin_popcount(dir[i]);\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nconst int MAX_C = 8;\n\nint main() {\n\tpair< int, string > colors[MAX_C] = {\n\t\tmake_pair< int, string >(0x000000, \"black\"),\n\t\tmake_pair< int, string >(0x0000ff, \"blue\"),\n\t\tmake_pair< int, string >(0x00ff00, \"lime\"),\n\t\tmake_pair< int, string >(0x00ffff, \"aqua\"),\n\t\tmake_pair< int, string >(0xff0000, \"red\"),\n\t\tmake_pair< int, string >(0xff00ff, \"fuchsia\"),\n\t\tmake_pair< int, string >(0xffff00, \"yellow\"),\n\t\tmake_pair< int, string >(0xffffff, \"white\")\n\t};\n\tstring color, cname;\n\tint r, g, b, _r, _g, _b, min, dist;\n\t\n\twhile(cin >> color, color != \"0\"){\n\t\tr = stoi(color.substr(1, 2), nullptr, 16);\n\t\tg = stoi(color.substr(3, 2), nullptr, 16);\n\t\tb = stoi(color.substr(5, 2), nullptr, 16);\n\t\t\n\t\tmin = ~(1 << 31);\n\t\tcname;\n\t\t\n\t\tfor(int i = 0; i < MAX_C; ++i){\n\t\t\t_r = (colors[i].first & 0xff0000) >> 16;\n\t\t\t_g = (colors[i].first & 0x00ff00) >> 8;\n\t\t\t_b = (colors[i].first & 0x0000ff);\n\t\t\t\n\t\t\tdist = (r - _r) * (r - _r) + (g - _g) * (g - _g) + (b - _b) * (b - _b);\n\t\t\t\n\t\t\tif(dist < min){\n\t\t\t\tmin = dist;\n\t\t\t\tcname = colors[i].second;\n\t\t\t}\n\t\t}\n\t\tcout << cname << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n  \n// #define int long long\n#define pb push_back\n#define print(Target) cout << Target << '\\n'\n\n#define REP(i, n) for (int i = 0; i < (n); i++)\n#define REPS(i, a, n) for (int i = (a); i < (n); i++)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vii;\ntypedef pair<int, int> pii;\n\nbool is_uruu(int y) {return (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0));}\n\nstruct COL{\n  double n;\n  string name;\n};\n\nconst int c[8][3] = {{0, 0, 0}, {0, 0, 0xff}, {0, 0xff, 0}, {0, 0xff, 0xff}, {0xff, 0, 0}, {0xff, 0, 0xff}, {0xff, 0xff, 0}, {0xff, 0xff, 0xff}};\n\nconst string s[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nbool cmp(COL lhs, COL rhs)\n{\n  return (lhs.n < rhs.n);\n}\n\nsigned main()\n{\n  //ios::sync_with_stdio(false);\n  char sr[2], sg[2], sb[2];\n  char sh;\n    \n  while (scanf(\"%1s\", &sh), sh != '0'){\n    COL col[8];\n    scanf(\"%2s%2s%2s\", sr, sg, sb);\n    int r = strtol(sr, NULL, 16),\n        g = strtol(sg, NULL, 16),\n        b = strtol(sb, NULL, 16);\n\n    REP(i, 8){\n      col[i].n = sqrt((c[i][0] - r) * (c[i][0] - r) + (c[i][1] - g) * (c[i][1] - g) + (c[i][2] - b) * (c[i][2] - b));\n      col[i].name = s[i];\n    }\n\n    sort(col, col + 8, cmp);\n    print(col[0].name);\n  }\n\n  return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\n\nint tmp[2] = {16,1};\nstring s[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\nint hoge[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},\n\t\t  {255,0,255},{255,255,0},{255,255,255}};\n\nint to_ten(string s){\n  int ans=0;\n  for(int i=0; i<2; i++){\n    if(s[i] == 'a') ans += 10*tmp[i];\n    else if(s[i] == 'b') ans += 11*tmp[i];\n    else if(s[i] == 'c') ans += 12*tmp[i];\n    else if(s[i] == 'd') ans += 13*tmp[i];\n    else if(s[i] == 'e') ans += 14*tmp[i];\n    else if(s[i] == 'f') ans += 15*tmp[i];\n    else ans += stoi(s.substr(i,1))*tmp[i];\n  }\n  return ans;\n}\n\ndouble d(string r,string g,string b,int i){\n  double ans = 0;\n  ans += (to_ten(r) - hoge[i][0]) * (to_ten(r) - hoge[i][0]);\n  ans += (to_ten(g) - hoge[i][1]) * (to_ten(g) - hoge[i][1]);\n  ans += (to_ten(b) - hoge[i][2]) * (to_ten(b) - hoge[i][2]);\n  return ans;\n}\n\nint main(){\n\n\n  while(1){\n    string in; cin >> in;\n    if(in == \"0\") break;\n    string r = in.substr(1,2);\n    string g = in.substr(3,2);\n    string b = in.substr(5,2);\n\n    double min = (int)1e+308;\n    int index=100;\n    for(int i=0; i<8; i++){\n      if(d(r,g,b,i) < min ){\n\tindex = i;\n\tmin = d(r,g,b,i);\n      }\n      //   cout  << d(r,g,b,i) << \" \";\n    }\n    cout << s[index] << \"\\n\";\n  }\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<stdio.h>\nusing namespace std;\n\nint main(){\n\nstring st;\nint Z[][3]={{0,0,0},{0,0,256},{0,256,0},{0,256,256},{256,0,0},{256,0,256},{256,256,0},{256,256,256}};\n\nwhile(1){\ncin>>st;if(st==\"0\")break;\n\n\nint k[3]={};\nint n[10]={};\nfor(int i=1;i<7;i++){\nn[i]=st[i]-'0';\nif(st[i]=='a')n[i]=10;\nif(st[i]=='b')n[i]=11;\nif(st[i]=='c')n[i]=12;\nif(st[i]=='d')n[i]=13;\nif(st[i]=='e')n[i]=14;\nif(st[i]=='f')n[i]=15;\n}\n\nk[0]=n[1]*16+n[2];\nk[1]=n[3]*16+n[4];\nk[2]=n[5]*16+n[6];\n\nint N[10]={};int min=90000;int t=0;\nfor(int i=0;i<8;i++)\n{\nN[i]=(Z[i][0]-k[0])*(Z[i][0]-k[0])+(Z[i][1]-k[1])*(Z[i][1]-k[1])+(Z[i][2]-k[2])*(Z[i][2]-k[2]);\nif(min>N[i]){t=i;min=N[i];}\n//cout<<N[i]<<endl;\n}\nif(t==0)cout<<\"black\";\nif(t==1)cout<<\"blue\";\nif(t==2)cout<<\"lime\";\nif(t==3)cout<<\"aqua\";\nif(t==4)cout<<\"red\";\nif(t==5)cout<<\"fuchsia\";\nif(t==6)cout<<\"yellow\";\nif(t==7)cout<<\"white\";\ncout<<endl;\n\n\n}\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#define w 15*16+15\nusing namespace std;\nint fld[8][3]={0,0,0,0,0,w,0,w,\n\t0,0,w,w,w,0,0\n\t,w,0,w,w,w,0,w,w,w};\nchar* col[]={\"black\",\n\t\"blue\",\"lime\",\"aqua\",\n\t\"red\",\"fuchsia\",\n\t\"yellow\",\"white\"};\nint main(){\n\tint temp,t,x,y,z,a[8],ren;\n\tchar s[10];\n\twhile(cin>>s,s[0]!='0'){\n\t\ttemp=1000000;\n\t\tfor(int i=1;i<8;i++){\n\t\t\tif(s[i]>'9')\n\t\t\ta[i-1]=9+s[i]-'a';\n\t\t\telse a[i-1]=s[i]-'0';\n\t\t}\n\t\tfor(int i=0;i<8;i++){\n\t\t\tx=a[0]*16+a[1]-fld[i][0];\n\t\t\ty=a[2]*16+a[3]-fld[i][1];\n\t\t\tz=a[4]*16+a[5]-fld[i][2];\n\t\t\tren=sqrt(x*x+y*y+z*z);\n\t\t\tif(ren<temp){\n\t\t\t\tt=i;\n\t\t\t\ttemp=ren;\n\t\t\t}\n\t\t}cout<<col[t]<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream> \nusing namespace std;   int dir[5010];   void remove(){     int cnt = 0;     for(int i = 0 ; i < 5010 ; i++){         if( dir[i] == 31 ) dir[i] = 0,cnt++;     }     for(int k = 0 ; k <= cnt ; k++)     for(int i = 5009 ; i > 0 ; i--){         if( dir[i] && !dir[i-1] ){             swap(dir[i],dir[i-1]);         }     } }   void tate(int x,int l){     for(int i = 1 ; i <= l ; i++) dir[5010-i] |= (1<<x);           for(int _ = 0 ; _ < 10 ; _++)     for(int i = 5010-l+_ ; i > 0 ; i--){         if( (dir[i] >> x & 1) && (dir[i-1] >> x & 1) == 0 ){             dir[i] -= (1<<x);             dir[i-1] += (1<<x);         }else{             break;         }     }     remove(); }   void yoko(int x,int l){     int mask = ((1<<l)-1) << x;     dir[5009] = mask;     for(int i = 5009 ; i > 0 ; i--){         if( dir[i] && !(dir[i-1] & mask) ){             dir[i] -= mask;             dir[i-1] += mask;         }else{             break;         }     }     remove(); } int main(){     int n;     while(cin >> n && n){         for(int i = 0 ; i <= 5009 ; i++)             dir[i] = 0;                   for(int i = 0 ; i < n ; i++){             int d,l,x;             cin >> d >> l >> x;             x--;             if(d==1){                 yoko(x,l);             }else{                 tate(x,l);             }             int f = 0;             if( i == 10 ) continue;             for(    int j = 5009 ; j >= 0 ; j--){                 if(f||dir[j]){                                           f=true;                 }             }                  }         int ans = 0;         for(int i = 0 ; i < 5010 ; i++)             ans += __builtin_popcount(dir[i]);         cout << ans << endl;     } } "
  },
  {
    "language": "C++",
    "code": "//何を何に変換するかが大事だと思う。(良問)\n#include<stdio.h>\n#define INF 100000000\n\nchar *color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint X[8][3] = { {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255} };\n\nint main(){\n\tchar c[3];\n\tint rgb[3];\n\tint index;\n\tint mini;\n\t\n\twhile( scanf(\"%c\",c) ){\n\t\tif( c[0] == '\\n' || c[0] == '\\r' )\n\t\t\tcontinue;\t\t\t\n\t\tif( c[0] == '0' )\n\t\t\tbreak;\n\t\t\t\n\t\tfor( int i = 0;i < 3;i++ ){\n\t\t\tint num = 0;\n\t\t\tscanf(\"%c%c\",c,c+1);\n\t\t\tif( c[0] <= '9' )\n\t\t\t\tnum += (c[0]-'0')*16;\n\t\t\telse\n\t\t\t\tnum += (c[0]-'a'+10)*16;\n\t\t\tif( c[1] <= '9' )\n\t\t\t\tnum += (c[1]-'0');\n\t\t\telse\n\t\t\t\tnum += (c[1]-'a'+10);\n\t\t\trgb[i] = num;\n\t\t}\n\t\t\n\t\tmini = INF;\n\t\t\n\t\tfor( int i = 0;i < 8;i++ ){\n\t\t\tint num = 0;\n\t\t\tfor( int j = 0;j < 3;j++ ){\n\t\t\t\tnum += (X[i][j]-rgb[j])*(X[i][j]-rgb[j]);\n\t\t\t}\n\t\t\tif( mini > num ){\n\t\t\t\tindex = i;\n\t\t\t\tmini = num;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n\",color[index]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <cmath>\nusing namespace std;\n\nint R,G,B;\nvoid solve() {\n  string color[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  int icolor[8][3] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n  int nearest=0,dist,mindist=1000000;\n  for(int i=0;i<8;i++) {\n    dist =  (R-icolor[i][0])*(R-icolor[i][0]) + (G-icolor[i][1])*(G-icolor[i][1]) + (B-icolor[i][2])*(B-icolor[i][2]);\n    if(dist < mindist) {\n      mindist = dist;\n      nearest = i;\n    }\n  }\n  cout << color[nearest] << endl;\n}\n\nint main() {\n  string str;\n  while(getline(cin,str)) {\n    if(str == \"0\") break;\n    R = strtol(str.substr(1,2).c_str(),NULL,16);\n    G = strtol(str.substr(3,2).c_str(),NULL,16);\n    B = strtol(str.substr(5,2).c_str(),NULL,16);\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\n\nusing namespace std;\n\nint main(){\n\n\tstring inp;\n\tstring base = (\"0123456789abcdef\" );\n\tstring scol[8] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\tint icol[8][3] = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 }, { 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 }, { 255, 255, 0 }, { 255, 255, 255 } };\n\tint r, g, b;\n\tint ans;\n\tdouble ansnum;\n\n\twhile (1){\n\n\t\tcin >> inp;\n\t\tif (inp == \"0\") break;\n\n\t\tr = base.find(inp[2]) * 1 + base.find(inp[1]) * 16;\n\t\tg = base.find(inp[4]) * 1 + base.find(inp[3]) * 16;\n\t\tb = base.find(inp[6]) * 1 + base.find(inp[5]) * 16;\n\n\t\tans = 0;\n\t\tansnum = pow(r - icol[0][0], 2.0) + pow(g - icol[0][1], 2.0) + pow(b - icol[0][2], 2.0);\n\t\tfor (int i = 1; i < 8; i++){\n\t\t\tif (ansnum>pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0)){\n\t\t\t\tans = i;\n\t\t\t\tansnum = pow(r - icol[i][0], 2.0) + pow(g - icol[i][1], 2.0) + pow(b - icol[i][2], 2.0);\n\t\t\t}\n\t\t}\n\n\t\tcout << scol[ans] << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n  \n// #define int long long\n#define pb push_back\n#define print(Target) cout << Target << '\\n'\n\n#define REP(i, n) for (int i = 0; i < (n); i++)\n#define REPS(i, a, n) for (int i = (a); i < (n); i++)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vii;\ntypedef pair<int, int> pii;\n\nbool is_uruu(int y) {return (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0));}\n\nstruct COL{\n  int n;\n  string name;\n};\n\nconst int c[8][3] = {{0, 0, 0}, {0, 0, 0xff}, {0, 0xff, 0}, {0, 0xff, 0xff}, {0xff, 0, 0}, {0xff, 0, 0xff}, {0xff, 0xff, 0}, {0xff, 0xff, 0xff}};\n\nconst string s[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\nbool cmp(COL lhs, COL rhs)\n{\n  return (lhs.n < rhs.n);\n}\n\nsigned main()\n{\n  //ios::sync_with_stdio(false);\n  char sr[2], sg[2], sb[2];\n  char sh;\n    \n  while (scanf(\"%1s\", &sh), sh != '0'){\n    COL col[8];\n    scanf(\"%2s%2s%2s\", sr, sg, sb);\n    int r = strtol(sr, NULL, 16),\n        g = strtol(sg, NULL, 16),\n        b = strtol(sb, NULL, 16);\n\n    REP(i, 8){\n      col[i].n = sqrt((c[i][0] - r) * (c[i][0] - r) + (c[i][1] - g) * (c[i][1] - g) + (c[i][2] - b) * (c[i][2] - b));\n      col[i].name = s[i];\n    }\n\n    sort(col, col + 8, cmp);\n    print(col[0].name);\n  }\n\n  return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <climits>\n\nint distsq(int r, int g, int b, int r_, int g_, int b_)\n{\n\treturn (r-r_)*(r-r_) + (g-g_)*(g-g_) + (b-b_)*(b-b_);\n}\n\nint main()\n{\n\tstd::string input;\n\twhile (true) {\n\t\tgetline(std::cin, input);\n\t\tif (input==\"0\") break;\n\t\tint r, g, b;\n\t\tr = std::stoi(input.substr(1,2), nullptr, 16);\n\t\tg = std::stoi(input.substr(3,2), nullptr, 16);\n\t\tb = std::stoi(input.substr(5,2), nullptr, 16);\n\t\tint min_d = INT_MAX;\n\t\tstd::string res;\n\t\tif (min_d > distsq(r,g,b,0,0,0)) {\n\t\t\tmin_d = distsq(r,g,b,0,0,0);\n\t\t\tres = \"black\";\n\t\t}\n\t\tif (min_d > distsq(r,g,b,0,0,255)) {\n\t\t\tmin_d = distsq(r,g,b,0,0,255);\n\t\t\tres = \"blue\";\n\t\t}\n\t\tif (min_d > distsq(r,g,b,0,255,0)) {\n\t\t\tmin_d = distsq(r,g,b,0,255,0);\n\t\t\tres = \"lime\";\n\t\t}\n\t\tif (min_d > distsq(r,g,b,0,255,255)) {\n\t\t\tmin_d = distsq(r,g,b,0,255,255);\n\t\t\tres = \"aqua\";\n\t\t}\n\t\tif (min_d > distsq(r,g,b,255,0,0)) {\n\t\t\tmin_d = distsq(r,g,b,255,0,0);\n\t\t\tres = \"red\";\n\t\t}\n\t\tif (min_d > distsq(r,g,b,255,0,255)) {\n\t\t\tmin_d = distsq(r,g,b,255,0,255);\n\t\t\tres = \"fuchsia\";\n\t\t}\n\t\tif (min_d > distsq(r,g,b,255,255,0)) {\n\t\t\tmin_d = distsq(r,g,b,255,255,0);\n\t\t\tres = \"yellow\";\n\t\t}\n\t\tif (min_d > distsq(r,g,b,255,255,255)) {\n\t\t\tmin_d = distsq(r,g,b,255,255,255);\n\t\t\tres = \"white\";\n\t\t}\n\t\tstd::cout << res << std::endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int RGB[8][3] = {\n\t{ 0   ,0   ,0   },\n\t{ 0   ,0   ,255 },\n\t{ 0   ,255 ,0   },\n\t{ 0   ,255 ,255 },\n\t{ 255 ,0   ,0   },\n\t{ 255 ,0   ,255 },\n\t{ 255 ,255 ,0   },\n\t{ 255 ,255 ,255 },\n};\n\nconst string COLOR[8] = {\n\t\"black\",\n\t\"blue\",\n\t\"lime\",\n\t\"aqua\",\n\t\"red\",\n\t\"fuchsia\",\n\t\"yellow\",\n\t\"white\",\n};\n\nint main() {\n\tint len, d, j, minD, index;\n\tint rgb[3];\n\tstring colorInfo, tmp;\n\tstringstream ss;\n\n\twhile (cin >> colorInfo, colorInfo[0] == '#') {\n\t\tlen = colorInfo.size() - 1;\n\n\t\tfor (int i = 1, j = 0; i < len; i += 2) {\n\t\t\tss.clear();\n\t\t\tss.str(\"\");\n\n\t\t\tss << colorInfo[i] << colorInfo[i + 1];\n\t\t\tss >> tmp;\n\t\t\t//cout << tmp << endl;\n\t\t\trgb[j++] = strtol(tmp.c_str(), 0, 16);\n\t\t}\n\n\t\tminD = INT_MAX;\n\t\tfor (j = 0; j < 8; j++) {\n\t\t\td = pow(rgb[0] - RGB[j][0], 2) + pow(rgb[1] - RGB[j][1], 2) + pow(rgb[2] - RGB[j][2], 2);\n\t\t\tif (d < minD) {\n\t\t\t\tminD = d;\n\t\t\t\tindex = j;\n\t\t\t}\n\t\t}\n\n\t\tcout << COLOR[index] << endl;\n\n\t}\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#include <string>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<21\n\nusing namespace std;\n\nint change(char c)\n{\n\tif('a' <= c && c <= 'f') return int(c-'a') + 10;\n\telse return int(c-'0');\n}\n\nint main()\n{\n\tstring N[8] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\n\tint c[8][3] = {{0,0,0},{0,0,256},{0,256,0},{0,256,256},{256,0,0},{256,0,256},{256,256,0,},{256,256,256}};\n\n\tstring s;\n\twhile(cin >> s)\n\t{\n\t\tif(s == \"0\") break;\n\t\t\n\t\tint r = 0,g = 0,b = 0;\n\n\t\tr += change(s[1])*16 + change(s[2]);\n\t\tg += change(s[3])*16 + change(s[4]);\n\t\tb += change(s[5])*16 + change(s[6]);\n\t\t\n\t\tdouble ans = INF;\n\t\trep(i,8)\n\t\t{\n\t\t\tdouble temp = sqrt(\t(c[i][0]-r)*(c[i][0]-r) + (c[i][1]-g)*(c[i][1]-g) + (c[i][2]-b)*(c[i][2]-b));\n\t\t\tans = min(ans,temp);\n\t\t}\n\n\t\trep(i,8)\n\t\t{\n\t\t\tdouble temp = sqrt(\t(c[i][0]-r)*(c[i][0]-r) + (c[i][1]-g)*(c[i][1]-g) + (c[i][2]-b)*(c[i][2]-b));\n\t\t\tif(temp == ans)\n\t\t\t{\n\t\t\t\tcout << N[i] << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "Haskell",
    "code": "import Data.List\n\ntab = [(\"black\",    0,  0,  0),\n       (\"blue\",     0,  0,255),\n       (\"lime\",     0,255,  0),\n       (\"aqua\",     0,255,255),\n       (\"red\",    255,  0,  0),\n       (\"fuchsia\",255,  0,255),\n       (\"yellow\", 255,255,  0),\n       (\"white\",  255,255,255)]\n\nh2d x = read (\"0x\"++x) :: Int\n\nans x =\n  let r = h2d $ take 2 $ drop 1 x\n      g = h2d $ take 2 $ drop 3 x\n      b = h2d $ take 2 $ drop 5 x\n      d = map (\\ (c,r1,g1,b1) -> (c, (r1-r)^2+(g1-g)^2+(b1-b)^2 ) ) tab\n      s = sortBy (\\ (c0,d0) (c1,d1) -> compare d0 d1 ) d\n  in\n    fst $ head s\n      \nmain = do\n  c <- getContents\n  let i = takeWhile (/= \"0\") $ lines c\n      o = map ans i\n  mapM_ putStrLn o"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>), (<*>))\nimport Control.Monad\nimport Data.List\nimport Data.Char (digitToInt)\n\nmain :: IO ()\nmain = do\n  s <- getLine\n  unless (s == \"0\") $ do\n    putStrLn $ solve s\n    main\n\nsolve :: String -> String\nsolve s = fst $ minimumBy (\\x y -> dc c (snd x) `compare` dc c (snd y)) colors\n  where\n    c = toColor s\n\nhexToInt :: String -> Int\nhexToInt s = foldl (\\a x -> a * 16 + x) 0 $ map digitToInt s\n\ncolors :: [(String,(Int,Int,Int))]\ncolors = [(\"black\",(0,0,0)),(\"blue\",(0,0,255)),\n          (\"lime\",(0,255,0)),(\"aqua\",(0,255,255)),\n          (\"red\",(255,0,0)),(\"fuchsia\",(255,0,255)),\n          (\"yellow\",(255,255,0)),(\"white\",(255,255,255))]\n\ndc :: (Int,Int,Int) -> (Int,Int,Int) -> Int\ndc (r,g,b) (rk,gk,bk) = (r - rk) ^ 2 + (g - gk) ^ 2 + (b - bk) ^ 2\n\ntoColor :: String -> (Int,Int,Int)\ntoColor s = (hexToInt r, hexToInt g, hexToInt b)\n  where\n    r = take 2 . tail $ s\n    g = take 2 . drop 3 $ s\n    b = drop 5 s"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative\nimport Control.Monad\nimport Control.Monad.ST\nimport Data.Functor\nimport Data.Function\nimport Data.Monoid\nimport Data.Maybe\nimport Data.List\nimport qualified Data.Foldable as Foldable\nimport qualified Data.Set as Set\n--import qualified Data.Sequence as Sequence\nimport Data.List.Split\nimport Data.Bits\nimport Data.Char\nimport Data.Ix\nimport Data.Ratio\nimport Data.Ord\nimport Data.Tuple\n--import Data.Array\n--import Data.Array.Unboxed\nimport Data.Array.IArray\nimport Data.Array.MArray\nimport Data.Array.IO\nimport Data.Array.ST\nimport Data.IORef\nimport Data.STRef\n-- import System.IO.Unsafe\n\n-- templete\nreadInt = read :: String -> Int\nreadInteger = read :: String -> Integer\nreadDouble = read :: String -> Double\ngetInt = readLn :: IO Int\ngetInts = map readInt . words <$> getLine\ngetInteger = readLn :: IO Integer\ngetIntegers = map readInteger . words <$> getLine\ngetDouble = readLn :: IO Double\nsjoin :: (Show a) => [a] -> String\nsjoin = unwords . map show\ncond :: a -> a -> Bool -> a\ncond t f c = if c then t else f\napply2 :: (a -> a -> b) -> [a] -> b\napply2 f [x,y] = f x y\napply3 :: (a -> a -> a -> b) -> [a] -> b\napply3 f [x,y,z] = f x y z\napply4 :: (a -> a -> a -> a -> b) -> [a] -> b\napply4 f [x,y,z,w] = f x y z w\nfnTuple :: (a -> b, a -> c) -> a -> (b, c)\nfnTuple (f,g) a = (f a, g a)\nreplace :: (Eq a) => a -> a -> [a] -> [a]\nreplace x y = map (\\z -> if z==x then y else z)\nbinMap :: (a -> a -> b) -> [a] -> [b]\nbinMap f (x:xs@(y:_)) = f x y : binMap f xs\nbinMap _ _ = []\nsplitRec :: Int -> [a] -> [[a]]\nsplitRec _ [] = []\nsplitRec n xs = let (y,ys) = splitAt n xs in y : splitRec n ys\ninfixl 7 `divCeil`\ndivCeil :: Integral a => a -> a -> a\nx `divCeil` y = (x+y-1) `div` y\n-- templete\n\ntype ColorCode = (Int,Int,Int)\ndistC :: ColorCode -> ColorCode -> Int\ndistC (r,g,b) (r',g',b') = sum $ map (^2) [r-r', g-g', b-b']\n\ntype Color = (String, ColorCode)\n\ncolorList = [(\"black\", (0,0,0)), (\"blue\", (0,0,255)), (\"lime\", (0, 255, 0)), (\"aqua\", (0, 255, 255)), (\"red\", (255,0,0)), (\"fuchsia\", (255,0,255)), (\"yellow\", (255, 255, 0)), (\"white\", (255, 255, 255))]\n\nf ['#',rr,r,gg,g,bb,b] = fst $ minimumBy (comparing (distC (red, green, blue) . snd)) colorList\n  where\n    red = 16 * digitToInt rr + digitToInt r\n    green = 16 * digitToInt gg + digitToInt g\n    blue = 16 * digitToInt bb + digitToInt b\n    \n\nmain = takeWhile (/=\"0\") . lines <$> getContents >>= mapM_ (putStrLn . f)\n    \n\n"
  },
  {
    "language": "C",
    "code": "// Aizu Vol-1 0176: What Color?\n// 2017.8.2\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n\nchar *gets(char *);\nchar buf[100], *p;\n\ntypedef struct { char *a; int r, g, b; } T;\nT color[8] = {\n\t{ \"black\",     0,   0,   0 },\n\t{ \"blue\",      0,   0, 255 },\n\t{ \"lime\",      0, 255,   0 },\n\t{ \"aqua\",      0, 255, 255 },\n\t{ \"red\",\t 255,   0,   0 },\n\t{ \"fuchsia\", 255,   0, 255 },\n\t{ \"yellow\",  255, 255,   0 },\n\t{ \"white\",   255, 255, 255 },\n};\n\nint r, g, b;\n\nvoid colorCode(void)\n{\n\tif (*p <= '9') r = *p - '0';\n\telse r = (tolower(*p) - 'a') + 10;\n\tp++; r <<= 4;\n\tif (*p <= '9') r += *p - '0';\n\telse r += (tolower(*p) - 'a') + 10;\n\tp++;\n\tif (*p <= '9') g = *p - '0';\n\telse g = (tolower(*p) - 'a') + 10;\n\tp++; g <<= 4;\n\tif (*p <= '9') g += *p - '0';\n\telse g += (tolower(*p) - 'a') + 10;\n\tp++;\n\tif (*p <= '9') b = *p - '0';\n\telse b = (tolower(*p) - 'a') + 10;\n\tp++; b <<= 4;\n\tif (*p <= '9') b+= *p - '0';\n\telse b += (tolower(*p) - 'a') + 10;\n}\n\nint main()\n{\n\tint i, d, k, min;\n\tT *t;\n\n\twhile (1) {\n\t\tgets(p = buf);\n\t\twhile (isspace(*p)) p++;\n\t\tif (*p == '0') break;\n\t\tif (*p == '#') p++;\n\t\tcolorCode();\n\t\tmin = 200000;\t\t\t// > 3*256^2\n\t\tfor (i = k = 0, t = color; i < 8; i++, t++) {\n\t\t\td = (r - t->r)*(r - t->r) + (g - t->g)*(g - t->g) + (b - t->b)*(b - t->b);\n\t\t\tif (d < min) k = i, min = d;\n\t\t}\n\t\tputs(color[k].a);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nchar *color_name[] = {\"black\",   \"blue\",    \"lime\",    \"aqua\",    \"red\",     \"fuchsia\", \"yellow\",  \"white\"};\nchar *color_code[] = {\"#000000\", \"#0000ff\", \"#00ff00\", \"#00ffff\", \"#ff0000\", \"#ff00ff\", \"#ffff00\", \"#fffffff\"};\n\nint hex1(char h)\n{\n    if (h <= '9'){\n        return (h - '0');\n    }\n    return (h - 'a' + 10);\n}\n    \nint hex10(char h10, char h)\n{\n    return (hex1(h10) * 16 + hex1(h));\n}\n\nint distance(char *color1, char *color2)\n{\n    int r1, g1, b1;\n    int r2, g2, b2;\n    int d;\n    \n    r1 = hex10(color1[1], color1[2]);\n    g1 = hex10(color1[3], color1[4]);\n    b1 = hex10(color1[5], color1[6]);\n    r2 = hex10(color2[1], color2[2]);\n    g2 = hex10(color2[3], color2[4]);\n    b2 = hex10(color2[5], color2[6]);\n    \n    d = (r1 - r2) * (r1 - r2) + (g1 - g2) * (g1 - g2) + (b1 - b2) * (b1 - b2);\n    \n    return (d);\n}\n\nint main(void)\n{\n    char color[8];\n    int r, g, b;\n    int i;\n    int d;\n    int min;\n    \n    while (1){\n        scanf(\"%s\", color);\n        if (color[0] == '0'){\n            break;\n        }\n\n        min = 0;\n        for (i = 1; i <= 7; i++){\n            if (distance(color, color_code[i]) < distance(color, color_code[min])){\n                min = i;\n            }\n        }\n        printf(\"%s\\n\", color_name[min]);\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define Ft(x)\t\t\t((x) * (x))\n\n#define R\t(0)\n#define G\t(1)\n#define B\t(2)\n\ntypedef struct {\n\tint color[3];\n\tchar c_name[8];\n} INDEX;\n\nint main(void)\n{\n\tINDEX table[8];\n\tint in[3];\n\tint i, j;\n\tint tmp;\n\tdouble dk;\n\tchar flag;\n\t\n\tstrcpy(table[0].c_name, \"black\");\n\tstrcpy(table[1].c_name, \"blue\");\n\tstrcpy(table[2].c_name, \"lime\");\n\tstrcpy(table[3].c_name, \"aqua\");\n\tstrcpy(table[4].c_name, \"red\");\n\tstrcpy(table[5].c_name, \"fuchsia\");\n\tstrcpy(table[6].c_name, \"yellow\");\n\tstrcpy(table[7].c_name, \"white\");\n\t\n\tfor (i = 0; i <= 7; i++){\n\t\tfor (j = 0; j < 3; j++){\n\t\t\ttable[i].color[2 - j] = (i & (1 << j)) ? 0xFF : 0;\n\t\t}\n\t}\n\t\n\twhile (1){\n\t\tscanf(\" %c\", &flag);\n\t\tif (flag == '0'){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tscanf(\"%2x%2x%2x\", &in[R], &in[G], &in[B]);\n\t\t\n\t\tdk = sqrt(Ft(in[R] - table[0].color[R]) + Ft(in[G] - table[0].color[G]) + Ft(in[B] - table[0].color[B]));\n\t\ttmp = 0;\n\t\t\n\t\tfor (i = 1; i < 8; i++){\n\t\t\tif (dk > sqrt(Ft(in[R] - table[i].color[R]) + Ft(in[G] - table[i].color[G]) + Ft(in[B] - table[i].color[B]))){\n\t\t\t\tdk = sqrt(Ft(in[R] - table[i].color[R]) + Ft(in[G] - table[i].color[G]) + Ft(in[B] - table[i].color[B]));\n\t\t\t\ttmp = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", table[tmp].c_name);\n\t}\n\t\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint henkan(char,char);\n\nmain(){\n  int data[8][3], i, j;\n  double dk, temp;\n  char input[8], n;\n  int in[3],ans;\n\n  for(i=0;i<8;i++){\n    for(j=0;j<3;j++){\n      if(i==1 && j==2) data[i][j]=255;\n      else if(i==2 && j==1) data[i][j]=255;\n      else if(i==3 && j==1) data[i][j]=255;\n      else if(i==3 && j==1) data[i][j]=255;\n      else if(i==4 && j==0) data[i][j]=255;\n      else if(i==5 && j==0) data[i][j]=255;\n      else if(i==5 && j==2) data[i][j]=255;\n      else if(i==6 && j==0) data[i][j]=255;\n      else if(i==6 && j==1) data[i][j]=255;\n      else if(i==7) data[i][j]=255;\n      else data[i][j]=0;\n    }\n  }\n\n\n  while(1){\n    scanf(\"%c\", &n);\n    if(n=='0') break;\n\n    scanf(\"%s\", input);\n    for(i=0,j=0;i<6;i+=2,j++){\n      in[j]=henkan(input[i], input[i+1]);\n    }\n    getchar();\n    //  printf(\"%s\", input);\n    dk=-1;\n    for(i=0;i<8;i++){\n      temp=sqrt((in[0]-data[i][0])*(in[0]-data[i][0])+(in[1]-data[i][1])*(in[1]-data[i][1])+(in[2]-data[i][2])*(in[2]-data[i][2]));\n      if(dk==-1 || temp<dk){\n\tdk=temp;\n\tans=i;\n      }\n    }\n\n    if(ans==0) printf(\"black\\n\");\n    else if(ans==1) printf(\"blue\\n\");\n    else if(ans==2) printf(\"lime\\n\");\n    else if(ans==3) printf(\"aqua\\n\");\n    else if(ans==4) printf(\"red\\n\");\n    else if(ans==5) printf(\"fuchsia\\n\");\n    else if(ans==6) printf(\"yellow\\n\");\n    else if(ans==7) printf(\"white\\n\");\n  }\n  return 0;\n}\n\n\nint henkan(char a,char b){\n  int x,y;\n  if(a>='a' && a<='f') x=a-'a'+10;\n  else x=a-'0';\n  if(b>='a' && b<='f') y=b-'a'+10;\n  else y=b-'0';\n\n  return (x*16+y);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n\n        int colors[8][3] = {\n                {0, 0, 0},\n                {0, 0, 255},\n                {0, 255, 0},\n                {0, 255, 255},\n                {255, 0, 0},\n                {255, 0, 255},\n                {255, 255, 0},\n                {255, 255, 255}\n        };\n\n        char* colornum[8] = {\n                \"black\",\n                \"blue\",\n                \"lime\",\n                \"aqua\",\n                \"red\",\n                \"fuchsia\",\n                \"yellow\",\n                \"white\"\n        };\n\n        while(1){\n                char code[8];\n                scanf(\"%s\", code);\n                if(code[0]=='0') break;\n\n                int i, j, rgb[] = {0, 0, 0};\n                for(i=1; i<7; i++){\n                        if('0'<=code[i] && code[i]<='9') rgb[(i-1)/2] += (code[i]-'0')*(1+15*(i%2));\n                        else rgb[(i-1)/2] += (10+code[i]-'a')*(1+15*(i%2));\n                }\n\n                int minidx = 7;\n                double mn = 1e11;\n                for(i=7; i>=0; i--){\n                        double d = 0;\n                        for(j=0; j<3; j++) d += (rgb[j]-colors[i][j])*(rgb[j]-colors[i][j]);\n                        d = sqrt(d);\n                        if(d<mn){\n                                mn = d;\n                                minidx = i;\n                        }\n                }\n\n                printf(\"%s\\n\", colornum[minidx]);\n        }\n        return 0;\n}\n"
  },
  {
    "language": "C",
    "code": "i,t;main(c){for(;read(0,&c,1);)++i%2?0:i%8?t=~t*2+c/56&7:puts(\"lime\\0__aqua\\0__black\\0_blue\\0__yellow\\0white\\0_red\\0___fuchsia\"+t*7);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\n#define sq(x) ((x) * (x))\nint color[8][3] ={ {0,0,0},\n\t\t   {0,0,255},\n\t\t   {0,255,0},\n\t\t   {0,255,255},\n\t\t   {255,0,0},\n\t\t   {255,0,255},\n\t\t   {255,255,0},\n\t\t   {255,255,255} };\n\nint main(){\n  int n, i, j, c[3], dmin, dk;\n  char rgb[16];\n\n  while(scanf(\"%s\", rgb) && rgb[0] != '0'){\n    c[0] = c[1] = c[2] = 0;\n    for(i = 0; i < 3; ++i){\n      for(j = 0; j < 2; ++j){\n\tif(rgb[i*2 + j + 1] >= '0' && rgb[i*2 + j + 1] <= '9') \n\t  c[i] += (rgb[i*2 + j + 1] - 0x30) * (j != 0 ? 1 : 16);\n\telse if(rgb[i*2 + j + 1] >= 'a' && rgb[i*2 + j + 1] <= 'f')\n\t  c[i] += (rgb[i*2 + j + 1] + 0x0A - 0x61) * (j != 0 ? 1 : 16);\n      }\n    }\n    dmin = 9999;\n    int res;\n    for(i = 0; i < 8; ++i){\n      dk = sqrt(sq(color[i][0] - c[0]) + sq(color[i][1] - c[1]) + sq(color[i][2] - c[2]));\n      if(dmin > dk){\n\tdmin = dk;\n\tres = i;\n      }\n    }\n\n    switch(res){\n    case 0: puts(\"black\"); break;\n    case 1: puts(\"blue\"); break;\n    case 2: puts(\"lime\"); break;\n    case 3: puts(\"aqua\"); break;\n    case 4: puts(\"red\"); break;\n    case 5: puts(\"fuchsia\"); break;\n    case 6: puts(\"yellow\"); break;\n    case 7: puts(\"white\"); break;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint henkan(char,char);\n\nmain(){\n  int data[8][3], i, j;\n  double dk, temp;\n  char input[8], n;\n  int in[3],ans;\n\n  for(i=0;i<8;i++){\n    for(j=0;j<3;j++){\n      if(i==1 && j==2) data[i][j]=255;\n      else if(i==2 && j==1) data[i][j]=255;\n      else if(i==3 && j==1) data[i][j]=255;\n      else if(i==3 && j==2) data[i][j]=255;\n      else if(i==4 && j==0) data[i][j]=255;\n      else if(i==5 && j==0) data[i][j]=255;\n      else if(i==5 && j==2) data[i][j]=255;\n      else if(i==6 && j==0) data[i][j]=255;\n      else if(i==6 && j==1) data[i][j]=255;\n      else if(i==7) data[i][j]=255;\n      else data[i][j]=0;\n    }\n  }\n\n\n  while(1){\n    scanf(\"%c\", &n);\n    if(n=='0') break;\n\n    scanf(\"%s\", input);\n    for(i=0,j=0;i<6;i+=2,j++){\n      in[j]=henkan(input[i], input[i+1]);\n      printf(\"%d\\n\", in[j]);\n    }\n    getchar();\n    //  printf(\"%s\", input);\n    dk=-1;\n    for(i=7;i>=0;i--){\n      temp=sqrt((in[0]-data[i][0])*(in[0]-data[i][0])+(in[1]-data[i][1])*(in[1]-data[i][1])+(in[2]-data[i][2])*(in[2]-data[i][2]));\n      if(dk==-1 || temp<dk){\n\tdk=temp;\n\tans=i;\n      }\n    }\n\n    if(ans==0) printf(\"black\\n\");\n    else if(ans==1) printf(\"blue\\n\");\n    else if(ans==2) printf(\"lime\\n\");\n    else if(ans==3) printf(\"aqua\\n\");\n    else if(ans==4) printf(\"red\\n\");\n    else if(ans==5) printf(\"fuchsia\\n\");\n    else if(ans==6) printf(\"yellow\\n\");\n    else if(ans==7) printf(\"white\\n\");\n  }\n  return 0;\n}\n\n\nint henkan(char a,char b){\n  int x,y;\n  if(a>='a' && a<='f') x=a-'a'+10;\n  else x=a-'0';\n  if(b>='a' && b<='f') y=b-'a'+10;\n  else y=b-'0';\n\n  return (x*16+y);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\nint main(){\nint i,r,g,b,y[9],sum,ans;\nint a[9][4]={{0,0,0},{0,0,255},{0,255,0},\n              {0,255,255},{255,0,0},{255,0,255},\n              {255,255,0},{255,255,255}};              \nchar z[8];\ndouble min=1000000,dk,dka;\nwhile(1){\nscanf(\"%c\",&z[0]);\nif(z[0]=='0'){\nbreak;\n}\nfor(i=1;i<7;i++){\nscanf(\"%c\",&z[i]);\n}\nscanf(\"\\n\");\nfor(i=1;i<7;i++){\nif(z[i]=='a'){\ny[i]=10;\n}\nelse if(z[i]=='b'){\ny[i]=11;\n}\nelse if(z[i]=='c'){\ny[i]=12;\n}\nelse if(z[i]=='d'){\ny[i]=13;\n}\nelse if(z[i]=='e'){\ny[i]=14;\n}\nelse if(z[i]=='f'){\ny[i]=15;\n}\nelse{\ny[i]=z[i]-'0';\n}\n}\nr=16*y[1]+y[2];\ng=16*y[3]+y[4];\nb=16*y[5]+y[6];\nfor(i=0;i<8;i++){\nsum=(r-a[i][0])*(r-a[i][0])+(g-a[i][1])*(g-a[i][1])+(b-a[i][2])*(b-a[i][2]);\ndka=sum;\ndk=sqrt(dka);\nif(dk<min){\nmin=dk;\nans=i;\n}\n}\nmin=1000000;\nif(ans==0){\nprintf(\"black\\n\");\n}\nelse if(ans==1){\nprintf(\"blue\\n\");\n}\nelse if(ans==2){\nprintf(\"lime\\n\");\n}\nelse if(ans==3){\nprintf(\"aqua\\n\");\n}\nelse if(ans==4){\nprintf(\"red\\n\");\n}\nelse if(ans==5){\nprintf(\"fuchsia\\n\");\n}\nelse if(ans==6){\nprintf(\"yellow\\n\");\n}\nelse if(ans==7){\nprintf(\"white\\n\");\n}\n}\nreturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\n#define sq(x) ((x) * (x))\nint color[8][3] ={ {0,0,0},\n\t\t   {0,0,255},\n\t\t   {0,255,0},\n\t\t   {0,255,255},\n\t\t   {255,0,0},\n\t\t   {255,0,255},\n\t\t   {255,255,0},\n\t\t   {255,255,255} };\n\nint convert(char a, char b){\n  int x, y;\n  if(a >= 'a' && a <= 'f') x = (a - 'a' + 10) * 16;\n  else x = (a - '0') * 16;\n  if(b >= 'a' && a <= 'f') y = b - 'a' + 10;\n  else y = b - '0';\n  return x + y;\n}\n\nint main(){\n  int n, i, j, c[3], dmin, dk;\n  char rgb[16], s;\n\n  while(scanf(\"%c\", &s) && s != '0'){\n    scanf(\"%s\", rgb);\n    getchar();\n    c[0] = c[1] = c[2] = 0;\n    for(i = 0, j = 0; i < 6; i += 2, j++)\n      c[j] = convert(rgb[i], rgb[i + 1]);\n    \n    dmin = 9999999;\n    int res;\n    for(i = 0; i < 8; ++i){\n      dk = sqrt(sq(c[0] - color[i][0]) + sq(c[1] - color[i][1]) + sq(c[2] - color[i][2]));\n      if(dmin > dk){\n\tdmin = dk;\n\tres = i;\n      }\n    }\n\n    switch(res){\n    case 0: puts(\"black\"); break;\n    case 1: puts(\"blue\"); break;\n    case 2: puts(\"lime\"); break;\n    case 3: puts(\"aqua\"); break;\n    case 4: puts(\"red\"); break;\n    case 5: puts(\"fuchsia\"); break;\n    case 6: puts(\"yellow\"); break;\n    case 7: puts(\"white\"); break;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\n#define sq(x) ((x) * (x))\nint color[8][3] ={ {0,0,0},\n\t\t   {0,0,255},\n\t\t   {0,255,0},\n\t\t   {0,255,255},\n\t\t   {255,0,0},\n\t\t   {255,0,255},\n\t\t   {255,255,0},\n\t\t   {255,255,255} };\n\nint main(){\n  int n, i, j, c[3], dmin, dk;\n  char rgb[16];\n\n  while(scanf(\"%s\", rgb) && rgb[0] != '0'){\n    c[0] = c[1] = c[2] = 0;\n    for(i = 0; i < 3; ++i){\n      for(j = 0; j < 2; ++j){\n\tif(rgb[i*2 + j + 1] >= '0' && rgb[i*2 + j + 1] <= '9') \n\t  c[i] += (rgb[i*2 + j + 1] - 0x30) * (j != 0 ? 1 : 16);\n\telse if(rgb[i*2 + j + 1] >= 'a' && rgb[i*2 + j + 1] <= 'f')\n\t  c[i] += (rgb[i*2 + j + 1] + 0x0A - 0x61) * (j != 0 ? 1 : 16);\n      }\n    }\n    dmin = 9999999;\n    int res;\n    for(i = 0; i < 8; ++i){\n      dk = sqrt(sq(c[0] - color[i][0]) + sq(c[1] - color[i][1]) + sq(c[2] - color[i][2]));\n      if(dmin > dk){\n\tdmin = dk;\n\tres = i;\n      }\n    }\n\n    switch(res){\n    case 0: puts(\"black\"); break;\n    case 1: puts(\"blue\"); break;\n    case 2: puts(\"lime\"); break;\n    case 3: puts(\"aqua\"); break;\n    case 4: puts(\"red\"); break;\n    case 5: puts(\"fuchsia\"); break;\n    case 6: puts(\"yellow\"); break;\n    case 7: puts(\"white\"); break;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\n#define SQ(a) ((a) * (a))\n\nint main(void)\n{\n\tchar rgb[8];\n\tint r, g, b;\n\tint i;\n\tdouble Dk[8];\n\tdouble min;\n\tint num;\n\t\n\tscanf(\"%s\", rgb);\n\t\n\twhile (rgb[0] != '0'){\n\t\t\n\t\tfor (i = 1; i < 7; i++){\n\t\t\tif (rgb[i] <= '9'){\n\t\t\t\trgb[i] -= '0';\n\t\t\t}\n\t\t\telse {\n\t\t\t\trgb[i] -= 0x57;\n\t\t\t}\n\t\t}\n\t\t\n\t\tr = rgb[1] * 16 + rgb[2];\n\t\tg = rgb[3] * 16 + rgb[4];\n\t\tb = rgb[5] * 16 + rgb[6];\n\t\t\n\t\tDk[0] = sqrt(SQ(r - 0) + SQ(g - 0) + SQ(b - 0));\n\t\tDk[1] = sqrt(SQ(r - 0) + SQ(g - 0) + SQ(b - 255));\n\t\tDk[2] = sqrt(SQ(r - 0) + SQ(g - 255) + SQ(b - 0));\n\t\tDk[3] = sqrt(SQ(r - 0) + SQ(g - 255) + SQ(b - 255));\n\t\tDk[4] = sqrt(SQ(r - 255) + SQ(g - 0) + SQ(b - 0));\n\t\tDk[5] = sqrt(SQ(r - 255) + SQ(g - 0) + SQ(b - 255));\n\t\tDk[6] = sqrt(SQ(r - 255) + SQ(g - 255) + SQ(b - 0));\n\t\tDk[7] = sqrt(SQ(r - 255) + SQ(g - 255) + SQ(b - 255));\n\t\t\n\t\tnum = 0;\n\t\tmin = 1000;\n\t\tfor (i = 7; i >= 0; i--){\n\t\t\tif (min >= Dk[i]){\n\t\t\t\tmin = Dk[i];\n\t\t\t\tnum = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tswitch (num){\n\t\t\tcase 0:\n\t\t\tprintf(\"black\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 1:\n\t\t\tprintf(\"blue\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 2:\n\t\t\tprintf(\"lime\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 3:\n\t\t\tprintf(\"aqua\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 4:\n\t\t\tprintf(\"red\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 5:\n\t\t\tprintf(\"fuchsia\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 6:\n\t\t\tprintf(\"yellow\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t\tdefault:\n\t\t\tprintf(\"white\\n\");\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tscanf(\"%s\", rgb);\n\t}\n\t\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nchar a[8][8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"},c;\nint b[9][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\nint d(int x)\n{\n\tint i,r=0;\n\tfor(i=0;i<3;i++)\n\t\tr+=(b[8][i]-b[x][i])*(b[8][i]-b[x][i]);\n\treturn r;\n}\n\nint main()\n{\n\tint i,r;\n\tfor(;~scanf(\"%c%2x%2x%2x\\n\",&c,&b[8][0],&b[8][1],&b[8][2]),c!='0';puts(a[r]))\n\t{\n\t\tfor(i=r=0;i<8;i++)\n\t\t\tif(d(r)>d(i))\n\t\t\t\tr=i;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <ctype.h>\n#define square(x) ((x) * (x))\n\nint hexa(char s);\n\nint main(void) {\n    int red,green,blue,num,i,color[8][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    char temp[8],colorname[9][8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    double min,dis;\n    while (scanf(\" %s\",temp)!=EOF&&temp[0]!='0') {\n        min=221952.0;\n        red=hexa(temp[1])*16+hexa(temp[2]);\n        green=hexa(temp[3])*16+hexa(temp[4]);\n        blue=hexa(temp[5])*16+hexa(temp[6]);\n        for (i=0; i<8; i++) {\n            dis = square(color[i][0]-red)+square(color[i][1]-green)+square(color[i][2]-blue);\n            if (dis<min) {\n                min=dis;\n                num=i;\n            }\n        }\n        printf(\"%s\\n\",colorname[num]);\n    }\n    return 0;\n}\n\nint hexa(char s) {\n    if (isalpha(s)) {\n        return s-'a'+10;\n    } else {\n        return s-'0';\n    }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\nchar color[8][8] = {\n\t\"black\",\n\t\"blue\",\n\t\"lime\",\n\t\"aqua\",\n\t\"red\",\n\t\"fuchsia\",\n\t\"yellow\",\n\t\"white\"\n};\nint main() {\n\tint r, g, b;\n\tchar rgb[8];\n\twhile(1) {\n\t\tscanf(\"%s\", rgb);\n\t\tif(rgb[0] == '0') break;\n\t\tr = g = b = 0;\n\t\tr = 1 - ('0' <= rgb[1] && rgb[1] <= '7');\n\t\tg = 1 - ('0' <= rgb[3] && rgb[3] <= '7');\n\t\tb = 1 - ('0' <= rgb[5] && rgb[5] <= '7');\n\t\tprintf(\"%s\\n\", color[4 * r + 2 * g + b]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\ntypedef struct {\n\tchar* name;\n\tint r;\n\tint g;\n\tint b;\n} color_t;\n\nint main(void) {\n\tcolor_t colors[8]={\n\t\t{\"black\"  ,0x00,0x00,0x00},\n\t\t{\"blue\"   ,0x00,0x00,0xff},\n\t\t{\"lime\"   ,0x00,0xff,0x00},\n\t\t{\"aqua\"   ,0x00,0xff,0xff},\n\t\t{\"red\"    ,0xff,0x00,0x00},\n\t\t{\"fuchsia\",0xff,0x00,0xff},\n\t\t{\"yellow\" ,0xff,0xff,0x00},\n\t\t{\"white\"  ,0xff,0xff,0xff}\n\t};\n\tint r,g,b;\n\tint colornum;\n\tint i;\n\tint distance;\n\tint nearestdist;\n\tint nearestnum;\n\tchar input[100];\n\twhile(1) {\n\t\tscanf(\"%s\",input);\n\t\tif(input[0]=='0')break;\n\t\tsscanf(input,\"#%X\",&colornum);\n\t\tr=(colornum>>16)&0xff;\n\t\tg=(colornum>>8 )&0xff;\n\t\tb=(colornum    )&0xff;\n\t\tnearestdist=0x7fffffff;\n\t\tnearestnum=-1;\n\t\tfor(i=0;i<8;i++) {\n\t\t\tdistance=\n\t\t\t\t(colors[i].r-r)*(colors[i].r-r)+\n\t\t\t\t(colors[i].g-g)*(colors[i].g-g)+\n\t\t\t\t(colors[i].b-b)*(colors[i].b-b);\n\t\t\tif(distance<nearestdist) {\n\t\t\t\tnearestnum=i;\n\t\t\t\tnearestdist=distance;\n\t\t\t}\n\t\t}\n\t\tputs(colors[nearestnum].name);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <ctype.h>\n\nint ss(char input);\nint hen(int a,int b);\nint main(){\n    int i,henkan[7];\n    char n[7];\n    while(scanf(\"%s\",n)){\n        if(n[0]=='0')break;\n        for(i=1;i<7;i++){\n            if(isdigit(n[i])!=0){//数字ならば\n                henkan[i]=n[i]-'0';\n            }else{\n                henkan[i]=ss(n[i]);\n            }\n        }\n        int memo;\n        double d,small=10000;\n        int r=hen(henkan[1],henkan[2]),g=hen(henkan[3],henkan[4]),b=hen(henkan[5],henkan[6]);\n        int kazu[8][3]={{0,0,0},\n            {0,0,255},\n            {0,255,0},\n            {0,255,255},\n            {255,0,0},\n            {255,0,255},\n            {255,255,0},\n            {255,255,255}};\n        for(i=0;i<8;i++){\n            d=sqrt((r-kazu[i][0])*(r-kazu[i][0])+(g-kazu[i][1])*(g-kazu[i][1])+(b-kazu[i][2])*(b-kazu[i][2]));\n            if(small>d){\n                small=d;\n                memo = i;\n            }\n        }\n        switch (memo) {\n            case 0:\n                puts(\"black\");\n                break;\n            case 1:\n                puts(\"blue\");\n                break;\n            case 2:\n                puts(\"lime\");\n                break;\n            case 3:\n                puts(\"aqua\");\n                break;\n            case 4:\n                puts(\"red\");\n                break;\n            case 5:\n                puts(\"fuchsia\");\n                break;\n            case 6:\n                puts(\"yellow\");\n                break;\n            case 7:\n                puts(\"white\");\n                break;\n        }\n    }\n    return 0;\n}\nint ss(char input){\n    int al[6]={10,11,12,13,14,15};\n    char seach[6]={'a','b','c','d','e','f'};\n    for(int i=0;i<6;i++){\n        if(input == seach[i]){\n            return al[i];\n        }\n    }\n    return 0;\n}\nint hen(int a,int b){\n    int goukei=0;\n    goukei+=a*16;\n    goukei+=b;\n    return goukei;\n}"
  },
  {
    "language": "C",
    "code": "i,t;main(c){for(;read(0,&c,1);)t=++i%2?t:i%8?t*2+c/56:!puts(\"black\\0__blue\\0___lime\\0___aqua\\0___red\\0____fuchsia\\0yellow\\0_white\"+t*8);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\n#define sq(x) ((x) * (x))\nint color[8][3] ={ {0,0,0},\n\t\t   {0,0,255},\n\t\t   {0,255,0},\n\t\t   {0,255,255},\n\t\t   {255,0,0},\n\t\t   {255,0,255},\n\t\t   {255,255,0},\n\t\t   {255,255,255} };\n\nint main(){\n  int n, i, j, c[3], dmin, dk;\n  char rgb[16];\n\n  while(scanf(\"%s\", rgb) && rgb[0] == '#'){\n    c[0] = c[1] = c[2] = 0;\n    for(i = 0; i < 3; ++i){\n      for(j = 0; j < 2; ++j){\n\tif(rgb[i*2 + j + 1] >= '0' && rgb[i*2 + j + 1] <= '9') \n\t  c[i] += (rgb[i*2 + j + 1] - 0x30) * (j != 0 ? 1 : 16);\n\telse if(rgb[i*2 + j + 1] >= 'a' && rgb[i*2 + j + 1] <= 'f')\n\t  c[i] += (rgb[i*2 + j + 1] + 0x0A - 0x61) * (j != 0 ? 1 : 16);\n      }\n    }\n    dmin = 9999;\n    int res;\n    for(i = 0; i < 8; ++i){\n      dk = sqrt(sq(color[i][0] - c[0]) + sq(color[i][1] - c[1]) + sq(color[i][2] - c[2]));\n      if(dmin > dk){\n\tdmin = dk;\n\tres = i;\n      }\n    }\n\n    switch(res){\n    case 0: puts(\"black\"); break;\n    case 1: puts(\"blue\"); break;\n    case 2: puts(\"lime\"); break;\n    case 3: puts(\"aqua\"); break;\n    case 4: puts(\"red\"); break;\n    case 5: puts(\"fuchsia\"); break;\n    case 6: puts(\"yellow\"); break;\n    case 7: puts(\"white\"); break;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\nint henkan(char,char);\nint main(void)\n{\n\tint i,d,min,minban,X[8][3]={0,0,0,\n\t\t\t\t   0,0,255,\n\t\t\t\t   0,255,0,\n\t               0,255,255,\n\t\t\t\t   255,0,0,\n\t\t\t\t   255,0,255,\n\t\t\t\t   255,255,0,\n\t\t\t\t   255,255,255};\n\tchar RGB[8];\n\twhile(1){\n\t\tmin = 99999;\n\t\tscanf(\"%s\",RGB);\n\t\tif(RGB[0] == '0')\n\t\t\tbreak;\n\t\tfor(i=0;i<8;i++){\n\t\t\td = (henkan(RGB[1],RGB[2])-X[i][0]) * (henkan(RGB[1],RGB[2])-X[i][0]) +\n\t\t\t\t(henkan(RGB[3],RGB[4])-X[i][1]) * (henkan(RGB[3],RGB[4])-X[i][1]) +\n\t\t\t\t(henkan(RGB[5],RGB[6])-X[i][2]) * (henkan(RGB[5],RGB[6])-X[i][2]) ;\n\t\t\tif(min > d ){\n\t\t\t\tmin = d;\n\t\t\t\tminban = i;\n\t\t\t}\n\t\t}\n\t\tswitch(minban){\n\t\t\tcase 0:\n\t\t\t\tprintf(\"black\\n\");\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tprintf(\"blue\\n\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tprintf(\"lime\\n\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tprintf(\"aqua\\n\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tprintf(\"red\\n\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tprintf(\"fuchsia\\n\");\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tprintf(\"yellow\\n\");\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tprintf(\"white\\n\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint henkan(char a,char b)\n{\n\tint oza=0;\n\tif(a == '1')       oza = oza + 16;\n\telse if(a == '2')  oza = oza + 32;\n\telse if(a == '3')  oza = oza + 16 + 32;\n\telse if(a == '4')  oza = oza + 64;\n\telse if(a == '5')  oza = oza + 16 + 64;\n\telse if(a == '6')  oza = oza + 32 + 64;\n\telse if(a == '7')  oza = oza + 16 + 32 + 64;\n\telse if(a == '8')  oza = oza + 128;\n\telse if(a == '9')  oza = oza + 16 + 128;\n\telse if(a == 'a')  oza = oza + 32 + 128;\n\telse if(a == 'b')  oza = oza + 16 + 32 + 128;\n\telse if(a == 'c')  oza = oza + 64 + 128;\n\telse if(a == 'd')  oza = oza + 16 + 64 + 128;\n\telse if(a == 'e')  oza = oza + 32 + 64 + 128;\n\telse if(a == 'f')  oza = oza + 16 + 32 + 64 + 128;\n\tif(b == '1')       oza = oza + 1;\n\telse if(b == '2')  oza = oza + 2;\n\telse if(b == '3')  oza = oza + 3;\n\telse if(b == '4')  oza = oza + 4;\n\telse if(b == '5')  oza = oza + 5;\n\telse if(b == '6')  oza = oza + 6;\n\telse if(b == '7')  oza = oza + 7;\n\telse if(b == '8')  oza = oza + 8;\n\telse if(b == '9')  oza = oza + 9;\n\telse if(b == 'a')  oza = oza + 10;\n\telse if(b == 'b')  oza = oza + 11;\n\telse if(b == 'c')  oza = oza + 12;\n\telse if(b == 'd')  oza = oza + 13;\n\telse if(b == 'e')  oza = oza + 14;\n\telse if(b == 'f')  oza = oza + 15;\n\treturn oza;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nchar a[8][8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"},c;\nint b[9][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\nint d(int x)\n{\n\tint i,r=0;\n\tfor(i=0;i<3;i++)\n\t\tr+=(b[8][i]-b[x][i])*(b[8][i]-b[x][i]);\n\treturn r;\n}\n\nint main()\n{\n\tint i,r;\n\tfor(;~scanf(\"%c%2x%2x%2x\\n\",&c,&b[8][0],&b[8][1],&b[8][2]),c!='0';puts(a[r]))\n\t{\n\t\tfor(i=r=0;i<8;i++)\n\t\t\tif(d(r)>d(i))\n\t\t\t\tr=i;\n\t}\n　　　　　return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <float.h>\n#include <math.h>\n\n#define SQ(X) \\\n  ( (X) * (X) )\n\nconst int rV[ ] = { 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff };\nconst int gV[ ] = { 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff };\nconst int bV[ ] = { 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff };\nconst char *cV[ ]\n  = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\n/** Application main entry point. */\nint main (\n  int     argc,\n  char  * argv[ ]\n  )\n{\n  int i;\n\n  for ( ; ; )\n  {\n    double d = DBL_MAX;\n    int dn = 0;\n    char s[ 16 ];\n    int r, b, g;\n\n    scanf ( \" %s\", s );\n    if ( *s == '0' )  break ;\n\n    r = g = b = strtol ( s + 1, NULL, 16 );\n    r = ( r & 0xFF0000 ) >> 0x10;\n    g = ( g & 0x00FF00 ) >> 0x08;\n    b = ( b & 0x0000FF ) >> 0x00;\n\n    for ( i = 0; i < 8; ++i )\n    {\n      const double dk\n        = sqrt ( SQ( rV[ i ] - r ) + SQ( gV[ i ] - g ) + SQ( bV[ i ] - b ) );\n\n      if ( dk < d )\n      {\n        d = dk;\n        dn = i;\n      }\n    }\n\n    puts ( cV[ dn ] );\n  }\n\n  return ( 0 );\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint henkan(char,char);\n\nmain(){\n  char input[10], temp;\n  int i, j, in[3], dk, ans, a;\n  int data[8][3]={0,0,0,0,0,255,0,255,0,0,255,255,255,0,0,255,0,255,255,255,0,255,255,255};\n\n\n  while(1){\n    scanf(\"%c\", &temp);\n    if(temp=='0') break;\n\n    scanf(\"%s\", input);\n    getchar();\n    for(i=0,j=0;i<6;i+=2,j++){\n      in[j]=henkan(input[i], input[i+1]);\n    }\n\n    dk=-1;\n\n    for(i=0;i<8;i++){\n      a=(in[0]-data[i][0])*(in[0]-data[i][0])+(in[1]-data[i][1])*(in[1]-data[i][1])+(in[2]-data[i][2])*(in[2]-data[i][2]);\n      if(dk==-1 || a<dk){\n\tdk=a;\n\tans=i;\n      }\n    }\n\n    if(ans==0) printf(\"black\");\n    else if(ans==1) printf(\"blue\");\n    else if(ans==2) printf(\"lime\");\n    else if(ans==3) printf(\"aqua\");\n    else if(ans==4) printf(\"red\");\n    else if(ans==5) printf(\"fuchsia\");\n    else if(ans==6) printf(\"yellow\");\n    else if(ans==7) printf(\"white\");\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\nint henkan(char a, char b){\n  int x,y;\n\n  if(a>='a' && a<='f') x=(a-'a'+10)*16;\n  else x=(a-'0')*16;\n  if(b>='a' && a<='f') y=b-'a'+10;\n  else y=b-'0';\n\n  return x+y;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint i,r,g,b,d,ans,best;\nchar col[8][15]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nchar code[24];\n\nint main(){\n\twhile(1){\n\t\tscanf(\"%s\",&code);\n\t\tif(code[0]=='0')break;\n\t\tsscanf(code,\"#%2x%2x%2x\",&r,&g,&b);\n\t\tbest=99999999;\n\t\tfor(i=0;i<8;i++){\n\t\t\td=(r-255*(i>3))*(r-255*(i>3))+(g-255*(i%4>1))*(g-255*(i%4>1))+(b-255*(i%2))*(b-255*(i%2));\n\t\t\tif(d<best){best=d;ans=i;}\n\t\t}\n\t\tprintf(\"%s\\n\",col[ans]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\nstruct _data{\n\tchar n[10];\n\tint r;\n\tint g;\n\tint b;\n}typedef _data;\n_data list[8]={\n\t\t{\"black\",0,0,0},\n\t\t{\"blue\",0,0,255},\n\t\t{\"lime\",0,255,0},\n\t\t{\"aqua\",0,255,255},\n\t\t{\"red\",255,0,0},\n\t\t{\"fuchsia\",255,0,255},\n\t\t{\"yellow\",255,255,0},\n\t\t{\"white\",255,255,255}\n};\nint getDigit(char s1,char s2){\n\tint sum1=0,sum2=0;\n\tif(s1>='a'&&s1<='f')sum1 += 10 + s1-'a';\n\telse sum1 += s1-'0';\n\tif(s2>='a'&&s2<='f')sum2 += 10+ s2-'a';\n\telse sum2 += s1-'0';\n\treturn sum1*16+sum2;\n}\nint main(){\n\tint i,j,n,r,g,b,dMinN;\n\tchar str[10];\n\tdouble d,dMin;\n\tfor(;scanf(\"%s\",str)&&str[0]!='0';){\n\t\tdMin=100000;\n\t\tr=getDigit(str[1],str[2]);\n\t\tg=getDigit(str[3],str[4]);\n\t\tb=getDigit(str[5],str[6]);\n\t\tfor(i=0;i<8;i++){\n\t\t\td=sqrt((double)((list[i].r-r)*(list[i].r-r)\n\t\t\t\t\t+(list[i].g-g)*(list[i].g-g)\n\t\t\t\t\t+(list[i].b-b)*(list[i].b-b)));\n\t\t\tif(d<dMin){\n\t\t\t\tdMin=d;\n\t\t\t\tdMinN=i;}}printf(\"%s\\n\",list[dMinN].n);}return 0;}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  int i,j,mi,k;\n  double c[3],d,min;\n  char s[8];\n  char w[]={\"0123456789abcdef\"};\n  char n[][10]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  int p[][3]={{0,0,0},{0,0,255},{0,255,0},{0,255,255},\n\t     {255,0,0},{255,0,255},{255,255,0},{255,255,255}\n  };\n  while(scanf(\"%s\",s),s[1]){\n    for(i=0;i<3;i++){\n      for(j=0;s[i*2+1]-w[j];j++);\n      for(k=0;s[i*2+2]-w[k];k++);\n      c[i]=j*16+k;\n    }\n    min=256*256*4;\n    for(i=0;i<8;i++){\n      for(j=d=0;j<3;j++)d+=(p[i][j]-c[j])*(p[i][j]-c[j]);\n      if(min>d){\n\tmin=d;\n\tmi=i;\n      }\n    }\n    printf(\"%s\\n\",n[mi]);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void)\n{\n\tint color[8][3] = {\n\t\t{0, 0, 0},\n\t\t{0, 0, 255},\n\t\t{0, 255, 0},\n\t\t{0, 255, 255},\n\t\t{255, 0, 0},\n\t\t{255, 0, 255},\n\t\t{255, 255, 0},\n\t\t{255, 255, 255}\n\t};\n\tchar color_name[8][8] = {\n\t\t\"black\",\n\t\t\"blue\",\n\t\t\"lime\",\n\t\t\"aqua\",\n\t\t\"red\",\n\t\t\"fuchsia\",\n\t\t\"yellow\",\n\t\t\"white\"\n\t};\n\t\n\tint d[8], R, G, B, min, i;\n\tchar str[8];\n\t\n\twhile (scanf(\"%s\", str), strcmp(str, \"0\") != 0){\n\t\tmin = 0;\n\t\t\n\t\tR = (str[1] - '0') * 16 + (str[2] - '0');\n\t\tG = (str[3] - '0') * 16 + (str[4] - '0');\n\t\tB = (str[5] - '0') * 16 + (str[6] - '0');\n\t\t\n\t\tfor (i = 0; i < 8; i++){\n\t\t\td[i] = (color[i][0] - R) * (color[i][0] - R) \n\t\t\t+ (color[i][1] - G) * (color[i][1] - G)\n\t\t\t+ (color[i][2] - B) * (color[i][2] - B);\n\t\t\t\n\t\t\tif (d[min] > d[i]){\n\t\t\t\tmin = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", color_name[min]);\n\t}\n\t\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\n#define sq(x) ((x) * (x))\nint color[8][3] ={ {0,0,0},\n\t\t   {0,0,255},\n\t\t   {0,255,0},\n\t\t   {0,255,255},\n\t\t   {255,0,0},\n\t\t   {255,0,255},\n\t\t   {255,255,0},\n\t\t   {255,255,255} };\n\nint convert(char a, char b){\n  int x, y;\n  if(a >= 'a' && a <= 'f') x = (a - 'a' + 10) * 16;\n  else x = (a - '0') * 16;\n  if(b >= 'a' && a <= 'f') y = b - 'a' + 10;\n  else y = b - '0';\n  return x + y;\n}\n\nint main(){\n  int n, i, j, c[3], dmin, dk;\n  char rgb[16], s;\n\n  while(scanf(\"%c\", &s) && s != '0'){\n    scanf(\"%s\", rgb);\n    getchar();\n    c[0] = c[1] = c[2] = 0;\n    for(i = 0, j = 0; i < 6; i += 2, j++)\n      c[j] = convert(rgb[i], rgb[i + 1]);\n    \n    dmin = -1;\n    int res;\n    for(i = 0; i < 8; ++i){\n      dk = sq(c[0] - color[i][0]) + sq(c[1] - color[i][1]) + sq(c[2] - color[i][2]);\n      if(dmin > dk || dmin == -1){\n\tdmin = dk;\n\tres = i;\n      }\n    }\n\n    switch(res){\n    case 0: puts(\"black\"); break;\n    case 1: puts(\"blue\"); break;\n    case 2: puts(\"lime\"); break;\n    case 3: puts(\"aqua\"); break;\n    case 4: puts(\"red\"); break;\n    case 5: puts(\"fuchsia\"); break;\n    case 6: puts(\"yellow\"); break;\n    case 7: puts(\"white\"); break;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nint main(void){\n\twhile(1){\n\t\tchar n[9];\n\t\tint i, index, c[3] = {0};\n\t\tdouble min = 1000, d;\n\t\n\t\tscanf(\" %s\", n);\n\t\tif(strcmp(n, \"0\") == 0) break;\n\t\t\n\t\tfor(i=0; i<3; i++){\n\t\t\tif(n[2*i+1] <= '9') c[i] += 16*(n[2*i+1]-'0');\n\t\t\telse c[i] += 16*(n[2*i+1]-'a'+10);\n\t\t\t\n\t\t\tif(n[2*i+2] <= '9') c[i] += n[2*i+2]-'0';\n\t\t\telse c[i] += n[2*i+2]-'a'+10;\n\t\t}\n\t\t\n\t\t/*for(i=0; i<3; i++)\n\t\t\tprintf(\"%d \", c[i]);*/\n\t\t\n\t\tfor(i=0; i<8; i++){\n\t\t\tint p;\n\t\t\tif(i%4==0 || i%4==1) p=0;\n\t\t\telse p=1;\n\t\t\n\t\t\td=sqrt( pow(c[0]-(i/4)*255, 2) + pow(c[1]-p*255, 2) + pow(c[2]-(i%2)*255, 2) );\n\t\t\tif(min > d){\n\t\t\t\tmin = d;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(index==0) printf(\"black\\n\");\n\t\telse if(index==1) printf(\"blue\\n\");\n\t\telse if(index==2) printf(\"lime\\n\");\n\t\telse if(index==3) printf(\"aqua\\n\");\n\t\telse if(index==4) printf(\"red\\n\");\n\t\telse if(index==5) printf(\"fuchsia\\n\");\n\t\telse if(index==6) printf(\"yellow\\n\");\n\t\telse if(index==7) printf(\"white\\n\");\n\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "i,t;main(c){for(;read(0,&c,1);)t=++i%2?t:i%8?~t*2+c/56&7:!puts(\"lime\\0__aqua\\0__black\\0_blue\\0__yellow\\0white\\0_red\\0___fuchsia\"+t*7);}"
  },
  {
    "language": "C",
    "code": "s[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};main(c){for(;scanf(\"#%x\\n\",&c);)puts(s[c>>7&1|c>>14&2|c>>21&4]);}"
  },
  {
    "language": "C",
    "code": "import java.util.*;\nimport java.math.BigInteger;\n\npublic class Main {\n   public static void main(String[] args) throws Exception {\n       String [] unit = {\"\",\"Man\",\"Oku\",\"Cho\",\"Kei\",\"Gai\",\"Jo\",\"Jou\",\"Ko\",\"Kan\",\"Sei\",\"Sai\",\"Gok\",\"Ggs\",\"Asg\",\"Nyt\",\"Fks\",\"Mts\"};\n       Scanner sc = new Scanner(System.in);\n       while(sc.hasNextInt()){\n           int m = sc.nextInt();\n           int n = sc.nextInt();\n           if(m==0 && n==0) break;\n           BigInteger b = valueOf(Math.pow(m,n));\n           \n           String ans = \"\";\n           for(int i=0;i<18;i++){\n               String digit = remainder(b,10000);\n               ans = digit.concat(unit[i]+ans);\n               b = divide(b,10000);\n           }\n           System.out.println(ans);\n       }\n   }\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint henkan(char,char);\n\nmain(){\n  int data[8][3], i, j;\n  double dk, temp;\n  char input[8], n;\n  int in[3],ans;\n\n  for(i=0;i<8;i++){\n    for(j=0;j<3;j++){\n      if(i==1 && j==2) data[i][j]=255;\n      else if(i==2 && j==1) data[i][j]=255;\n      else if(i==3 && j==1) data[i][j]=255;\n      else if(i==3 && j==1) data[i][j]=255;\n      else if(i==4 && j==0) data[i][j]=255;\n      else if(i==5 && j==0) data[i][j]=255;\n      else if(i==5 && j==2) data[i][j]=255;\n      else if(i==6 && j==0) data[i][j]=255;\n      else if(i==6 && j==1) data[i][j]=255;\n      else if(i==7) data[i][j]=255;\n      else data[i][j]=0;\n    }\n  }\n\n\n  while(1){\n    scanf(\"%c\", &n);\n    if(n=='0') break;\n\n    scanf(\"%s\", input);\n    for(i=0,j=0;i<6;i+=2,j++){\n      in[j]=henkan(input[i], input[i+1]);\n    }\n    getchar();\n    //  printf(\"%s\", input);\n    dk=-1;\n    for(i=7;i>=0;i--){\n      temp=sqrt((in[0]-data[i][0])*(in[0]-data[i][0])+(in[1]-data[i][1])*(in[1]-data[i][1])+(in[2]-data[i][2])*(in[2]-data[i][2]));\n      if(dk==-1 || temp<dk){\n\tdk=temp;\n\tans=i;\n      }\n    }\n\n    if(ans==0) printf(\"black\\n\");\n    else if(ans==1) printf(\"blue\\n\");\n    else if(ans==2) printf(\"lime\\n\");\n    else if(ans==3) printf(\"aqua\\n\");\n    else if(ans==4) printf(\"red\\n\");\n    else if(ans==5) printf(\"fuchsia\\n\");\n    else if(ans==6) printf(\"yellow\\n\");\n    else if(ans==7) printf(\"white\\n\");\n  }\n  return 0;\n}\n\n\nint henkan(char a,char b){\n  int x,y;\n  if(a>='a' && a<='f') x=a-'a'+10;\n  else x=a-'0';\n  if(b>='a' && b<='f') y=b-'a'+10;\n  else y=b-'0';\n\n  return (x*16+y);\n}"
  },
  {
    "language": "C",
    "code": "*s[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};main(c){for(;scanf(\"#%x\\n\",&c);)puts(s[c>>7&1|c>>14&2|c>>21&4]);}"
  },
  {
    "language": "C",
    "code": "*s[]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nmain(c){\n\tfor(;scanf(\"#%x\\n\",&c);){\n\t\tputs(s[c>>7&1|c>>14&2|c>>21&4]);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n//#define _USE_MATH_DEFINES\n#include<stdio.h>\n//#include<stdlib.h>\n#include<math.h>\n//#include<string.h>\n//#include<time.h>\n#define P(type,x) fprintf(stdout,\"%\"#type\"\\n\",x)\nstruct color {\n\tint r,\n\t\tg,\n\t\tb;\n\tchar c[8];\n};\n//int c16toi10(char*);\nint hex(char*);\nint main() {\n\tstruct color a[8]={\n\t\t{0x00,0x00,0x00,\"black\"},\n\t\t{0x00,0x00,0xff,\"blue\" },\n\t\t{0x00,0xff,0x00,\"lime\" },\n\t\t{0x00,0xff,0xff,\"aqua\"},\n\t\t{0xff,0x00,0x00,\"red\"},\n\t\t{0xff,0x00,0xff,\"fuchsia\"},\n\t\t{0xff,0xff,0x00,\"yellow\"},\n\t\t{0xff,0xff,0xff,\"white\"}\n\t};\n\tint i,r,g,b,d,t,n;\n\tchar str[16];\n\twhile (~fscanf(stdin, \"%s\", str), str[0] != '0') {\n\t\tr = hex(str + 1) * 16 + hex(str + 2);\n\t\tg = hex(str + 3) * 16 + hex(str + 4);\n\t\tb = hex(str + 5) * 16 + hex(str + 6);\n\t\tn = 1e8;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\td = sqrt(pow(r - a[i].r, 2) + pow(g - a[i].g, 2) + pow(b - a[i].b, 2));\n\t\t\tif (n > d)\n\t\t\t\tn = d, t = i;\n\t\t}\n\t\tP(s, a[t].c);\n\t}\n\treturn 0;\n}\n\n//int c16toi10(char *n){\n//\tint ans=0;\n//\tint i, base = 1;\n//\tfor (i = strlen(n)-1; i >= 0; --i) {\n//\t\tif (hex(n + i) == -1) return -1;\n//\t\tans += hex(n+i)*base;\n//\t\tbase *= 16;\n//\t}\n//\treturn ans;\n//}\n\nint hex(char *s){\n\tif ('0' <= *s&&*s <= '9') return *s - '0';\n\telse if ('A' <= *s&&*s <= 'Z') return *s - 'A' + 10;\n\telse if ('a' <= *s&&*s <= 'z') return *s - 'a' + 10;\n\treturn -1;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\nstruct color{\n\tint r,g,b;\n\tchar name[20];\n};\nint hex(char a){\n\tif('a'<=a&&a<='f'){\n\t\treturn (a-'a'+10);\n\t}\n\telse{\n\t\treturn a-'0';\n\t}\n}\nint main(void){\n\tstruct color c[8]={\n\t\t{0x00,0x00,0x00,\"black\"},\n\t\t{0x00,0x00,0xff,\"blue\"},\n\t\t{0x00,0xff,0x00,\"lime\"},\n\t\t{0x00,0xff,0xff,\"aqua\"},\n\t\t{0xff,0x00,0x00,\"red\"},\n\t\t{0xff,0x00,0xff,\"fuchsia\"},\n\t\t{0xff,0xff,0x00,\"yellow\"},\n\t\t{0xff,0xff,0xff,\"white\"}\n\t};\n\tdouble r,g,b,d,md;\n\tint i,mi;\n\tchar s[20];\n\twhile(1){\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='0'){\n\t\t\tbreak;\n\t\t}\n\t\tr=hex(s[1])*16+hex(s[2]);\n\t\tg=hex(s[3])*16+hex(s[4]);\n\t\tb=hex(s[5])*16+hex(s[6]);\n\t\tmd=114514;\n\t\tfor(i=0;i<8;i++){\n\t\t\td=sqrt(pow(r-c[i].r,2)+pow(g-c[i].g,2)+pow(b-c[i].b,2));\n\t\t\tif(md>d){\n\t\t\t\tmd=d;\n\t\t\t\tmi=i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n\",c[mi].name);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  int n[6],d,i,id,min=10000;\n  int rgb[3];\n  char c[8][10]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n  int const R[8]={0,0,0,0,255,255,255,255};\n  int const G[8]={0,0,255,255,0,0,255,255};\n  int const B[8]={0,255,0,255,0,255,0,255};\n  char s[10];\n  while(1){\n    fgets(s,9,stdin);\n    if(s[0]=='0')break;\n    min=100000;\n    for(i=1;i<7;i++){\n      if('0'<=s[i]&&s[i]<='9')n[i]=s[i]-'0';\n      else                    n[i]=(s[i]-'a')+10;\n    }\n    for(i=0;i<3;i++){\n      rgb[i]=n[i*2+1];\n      rgb[i]*=16;\n      rgb[i]+=n[i*2+2];\n    }\n    for(i=0;i<8;i++){\n      d=(R[i]-rgb[0])*(R[i]-rgb[0])\n       +(G[i]-rgb[1])*(G[i]-rgb[1])\n       +(B[i]-rgb[2])*(B[i]-rgb[2]);\n      if(min>d){\n\tid=i;\n\tmin=d;\n      }\n    }\n    printf(\"%s\\n\",c[id]);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nchar a[8][8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"},x;\nint b[3],f[2]={0,255};\n\nint d(int x)\n{\n\tint i=0,r=0;\n\tfor(;i<3;i++,x>>=1)\n\t\tr+=(b[i]-f[x&1])*(b[i]-f[x&1]);\n\treturn r;\n}\n\nint main()\n{\n\tint i,r;\n\tfor(;~scanf(\"%c%2x%2x%2x\\n\",&x,&b[0],&b[1],&b[2]),x!='0';puts(a[r]))\n\t{\n\t\tfor(i=r=0;i<8;i++)\n\t\t\tif(d(r)>d(i))\n\t\t\t\tr=i;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint x( int a ) {\n  return a * a;\n}\n\nint HEXtoINT( char h[ ] ) {\n  int i;\n  int ans = 0;\n\n  for( i = 0; i < 2; i++ ) {\n    ans *= 16;\n\n    if( '0' <= h[ i ] && h[ i ] <= '9' )      ans += h[ i ] - '0';\n    else if( h[ i ] == 'A' || h[ i ] == 'a' ) ans += 10;\n    else if( h[ i ] == 'B' || h[ i ] == 'b' ) ans += 11;\n    else if( h[ i ] == 'C' || h[ i ] == 'c' ) ans += 12;\n    else if( h[ i ] == 'D' || h[ i ] == 'd' ) ans += 13;\n    else if( h[ i ] == 'E' || h[ i ] == 'e' ) ans += 14;\n    else if( h[ i ] == 'F' || h[ i ] == 'f' ) ans += 15;\n  }\n\n  return( ans );\n}\n\nint main( void ) {\n  int col[ 8 ][ 3 ];\n  col[ 0 ][ 0 ] = HEXtoINT( \"00\" ); col[ 0 ][ 1 ] = HEXtoINT( \"00\" ); col[ 0 ][ 2 ] = HEXtoINT( \"00\" );\n  col[ 1 ][ 0 ] = HEXtoINT( \"00\" ); col[ 1 ][ 1 ] = HEXtoINT( \"00\" ); col[ 1 ][ 2 ] = HEXtoINT( \"ff\" );\n  col[ 2 ][ 0 ] = HEXtoINT( \"00\" ); col[ 2 ][ 1 ] = HEXtoINT( \"ff\" ); col[ 2 ][ 2 ] = HEXtoINT( \"00\" );\n  col[ 3 ][ 0 ] = HEXtoINT( \"00\" ); col[ 3 ][ 1 ] = HEXtoINT( \"ff\" ); col[ 3 ][ 2 ] = HEXtoINT( \"ff\" );\n  col[ 4 ][ 0 ] = HEXtoINT( \"ff\" ); col[ 4 ][ 1 ] = HEXtoINT( \"00\" ); col[ 4 ][ 2 ] = HEXtoINT( \"00\" );\n  col[ 5 ][ 0 ] = HEXtoINT( \"ff\" ); col[ 5 ][ 1 ] = HEXtoINT( \"00\" ); col[ 5 ][ 2 ] = HEXtoINT( \"ff\" );\n  col[ 6 ][ 0 ] = HEXtoINT( \"ff\" ); col[ 6 ][ 1 ] = HEXtoINT( \"ff\" ); col[ 6 ][ 2 ] = HEXtoINT( \"00\" );\n  col[ 7 ][ 0 ] = HEXtoINT( \"ff\" ); col[ 7 ][ 1 ] = HEXtoINT( \"ff\" ); col[ 7 ][ 2 ] = HEXtoINT( \"ff\" );\n\n  while( 1 ) {\n    int i, j;\n    char ch[ 10 ];\n    int cur, min, minI;\n\n    scanf( \"%s\", ch );\n    if( ch[ 0 ] == '0' ) break;\n\n    cur = 0;\n    for( i = 0; i < 3; i++ ) cur += x( HEXtoINT( ch + ( i*2+1 ) ) - col[ 0 ][ i ] );\n    min = cur;\n    minI = 0;\n\n    for( j = 1; j < 8; j++ ) {\n      cur = 0;\n      for( i = 0; i < 3; i++ )\n        cur += x( HEXtoINT( ch + ( i*2+1 ) ) - col[ j ][ i ] );\n      if( min > cur ) {\n        min = cur;\n        minI = j;\n      }\n    }\n\n    switch( minI ) {\n      case 0 : printf( \"black\\n\" );   break;\n      case 1 : printf( \"blue\\n\" );    break;\n      case 2 : printf( \"lime\\n\" );    break;\n      case 3 : printf( \"aqua\\n\" );    break;\n      case 4 : printf( \"red\\n\" );     break;\n      case 5 : printf( \"fuchsia\\n\" ); break;\n      case 6 : printf( \"yellow\\n\" );  break;\n      case 7 : printf( \"white\\n\" );   break;\n    }\n  }\n\n  return( 0 );\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void)\n{\n\tint color[8][3] = {\n\t\t{0, 0, 0},\n\t\t{0, 0, 255},\n\t\t{0, 255, 0},\n\t\t{0, 255, 255},\n\t\t{255, 0, 0},\n\t\t{255, 0, 255},\n\t\t{255, 255, 0},\n\t\t{255, 255, 255}\n\t};\n\tchar color_name[8][8] = {\n\t\t\"black\",\n\t\t\"blue\",\n\t\t\"lime\",\n\t\t\"aqua\",\n\t\t\"red\",\n\t\t\"fuchsia\",\n\t\t\"yellow\",\n\t\t\"white\"\n\t};\n\t\n\tint d[8], R, G, B, min, i;\n\tchar str[8];\n\t\n\twhile (scanf(\"%s\", str), strcmp(str, \"0\") != 0){\n\t\tmin = 0;\n\t\t\n\t\tif (str[1] >= '0' && str[1] <= '9'){\n\t\t\tR = (str[1] - '0') * 16;\n\t\t}\n\t\telse {\n\t\t\tR = (str[1] - 'a' + 10) * 16;\n\t\t}\n\t\t\n\t\tif (str[2] >= '0' && str[2] <= '9'){\n\t\t\tR += str[2] - '0';\n\t\t}\n\t\telse {\n\t\t\tR += str[2] - 'a' + 10;\n\t\t}\n\t\t\n\t\tif (str[3] >= '0' && str[3] <= '9'){\n\t\t\tG = (str[3] - '0') * 16;\n\t\t}\n\t\telse {\n\t\t\tG = (str[3] - 'a' + 10) * 16;\n\t\t}\n\t\tif (str[4] >= '0' && str[4] <= '9'){\n\t\t\tG += str[4] - '0';\n\t\t}\n\t\telse {\n\t\t\tG += str[4] - 'a' + 10;\n\t\t}\n\t\t\n\t\tif (str[5] >= '0' && str[5] <= '9'){\n\t\t\tB = (str[5] - '0') * 16;\n\t\t}\n\t\telse {\n\t\t\tB = (str[5] - 'a' + 10) * 16;\n\t\t}\n\t\tif (str[6] >= '0' && str[6] <= '9'){\n\t\t\tB += str[6] - '0';\n\t\t}\n\t\telse {\n\t\t\tB += str[6] - 'a' + 10;\n\t\t}\n\t\t\n\t\tfor (i = 0; i < 8; i++){\n\t\t\td[i] = (color[i][0] - R) * (color[i][0] - R) \n\t\t\t+ (color[i][1] - G) * (color[i][1] - G)\n\t\t\t+ (color[i][2] - B) * (color[i][2] - B);\n\t\t\t\n\t\t\tif (d[min] > d[i]){\n\t\t\t\tmin = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", color_name[min]);\n\t}\n\t\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "i,t;main(c){for(;read(0,&c,1);)t=++i%2?t:i%8?t*2+c/56:!puts(\"lime\\0__aqua\\0__black\\0_blue\\0__yellow\\0white\\0_red\\0___fuchsia\"+(t^2)*7);}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main(){\n\tint f[8][3]={0,0,0, 0,0,1, 0,1,0, 0,1,1, 1,0,0, 1,0,1, 1,1,0, 1,1,1};\n\tint i,j,rgb[3],d,x,y;\n\tchar s[10],*c[8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\twhile(scanf(\"%s\",s)!=EOF){\n\t\tif(strcmp(s,\"0\")==0)break;\n\t\trgb[0]=((s[1]-'0'<10)?(s[1]-'0'):(s[1]-'a'+10));rgb[0]*=16;\n\t\trgb[0]+=(s[2]-'0'<10)?(s[2]-'0'):(s[2]-'a'+10);\n\t\trgb[1]=((s[3]-'0'<10)?(s[3]-'0'):(s[3]-'a'+10));rgb[1]*=16;\n\t\trgb[1]+=(s[4]-'0'<10)?(s[4]-'0'):(s[4]-'a'+10);\n\t\trgb[2]=((s[5]-'0'<10)?(s[5]-'0'):(s[5]-'a'+10));rgb[2]*=16;\n\t\trgb[2]+=(s[6]-'0'<10)?(s[6]-'0'):(s[6]-'a'+10);\n\t\td=100000000;\n\t\tfor(i=0;i<8;i++){\n\t\t\tx=0;\n\t\t\tfor(j=0;j<3;j++){\n\t\t\t\tif(f[i][j]==0)x+=rgb[j]*rgb[j];\n\t\t\t\telse x+=(255-rgb[j])*(255-rgb[j]);\n\t\t\t}\n\t\t\tx=sqrt(x);\n\t\t\tif(d>x)d=x,y=i;\n\t\t}\n\t\tprintf(\"%s\\n\",c[y]);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nchar a[8][8]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\nint b[3],f[2]={0,255};\n\nint d(int x)\n{\n\tint i=0,r=0;\n\tfor(;i<3;i++,x>>=1)\n\t\tr+=(b[i]-f[x&1])*(b[i]-f[x&1]);\n\treturn r;\n}\n\nint main(i,r)\n{\n\tfor(;~scanf(\"#%2x%2x%2x\\n\",&b[0],&b[1],&b[2]),b[0];puts(a[r]),b[0]=0)\n\t{\n\t\tfor(i=r=0;i<8;i++)\n\t\t\tif(d(r)>d(i))\n\t\t\t\tr=i;\n\t}\n\texit(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main(){\n\tint f[8][3]={0,0,0, 0,0,1, 0,1,0, 0,1,1, 1,0,0, 1,0,1, 1,1,0, 1,1,1};\n\tint i,j,rgb[3],d,x,y;\n\tchar s[10],*c[88]={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\twhile(scanf(\"%s\",s)!=EOF){\n\t\tif(strcmp(s,\"0\")==0)break;\n\t\trgb[0]=((s[1]-'0'<10)?(s[1]-'0'):(s[1]-'a'+10));rgb[0]*=16;\n\t\trgb[0]+=(s[2]-'0'<10)?(s[2]-'0'):(s[2]-'a'+10);\n\t\trgb[1]=((s[3]-'0'<10)?(s[3]-'0'):(s[3]-'a'+10));rgb[1]*=16;\n\t\trgb[1]+=(s[4]-'0'<10)?(s[4]-'0'):(s[4]-'a'+10);\n\t\trgb[2]=((s[5]-'0'<10)?(s[5]-'0'):(s[5]-'a'+10));rgb[2]*=16;\n\t\trgb[2]+=(s[6]-'0'<10)?(s[6]-'0'):(s[6]-'a'+10);\n\t\td=100000000;\n\t\tfor(i=0;i<8;i++){\n\t\t\tx=0;\n\t\t\tfor(j=0;j<3;j++){\n\t\t\t\tif(f[i][j]==0)x+=rgb[j]*rgb[j];\n\t\t\t\telse x+=(255-rgb[j])*(255-rgb[j]);\n\t\t\t}\n\t\t\tx=sqrt(x);\n\t\t\tif(d>x)d=x,y=i;\n\t\t}\n\t\tprintf(\"%s\\n\",c[y]);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint henkan(char,char);\n\nmain(){\n  int data[8][3], i, j;\n  double dk, temp;\n  char input[8], n;\n  int in[3],ans;\n\n  for(i=0;i<8;i++){\n    for(j=0;j<3;j++){\n      if(i==1 && j==2) data[i][j]=255;\n      else if(i==2 && j==1) data[i][j]=255;\n      else if(i==3 && j==1) data[i][j]=255;\n      else if(i==3 && j==2) data[i][j]=255;\n      else if(i==4 && j==0) data[i][j]=255;\n      else if(i==5 && j==0) data[i][j]=255;\n      else if(i==5 && j==2) data[i][j]=255;\n      else if(i==6 && j==0) data[i][j]=255;\n      else if(i==6 && j==1) data[i][j]=255;\n      else if(i==7) data[i][j]=255;\n      else data[i][j]=0;\n    }\n  }\n\n\n  while(1){\n    scanf(\"%c\", &n);\n    if(n=='0') break;\n\n    scanf(\"%s\", input);\n     for(i=0,j=0;i<6;i+=2,j++){\n      in[j]=henkan(input[i], input[i+1]);\n      //     printf(\"%d\\n\", in[j]);\n    }\n    getchar();\n    //  printf(\"%s\", input);\n    dk=-1;\n    for(i=7;i>=0;i--){\n      temp=sqrt((in[0]-data[i][0])*(in[0]-data[i][0])+(in[1]-data[i][1])*(in[1]-data[i][1])+(in[2]-data[i][2])*(in[2]-data[i][2]));\n      if(dk==-1 || temp<dk){\n\tdk=temp;\n\tans=i;\n      }\n    }\n\n    if(ans==0) printf(\"black\\n\");\n    else if(ans==1) printf(\"blue\\n\");\n    else if(ans==2) printf(\"lime\\n\");\n    else if(ans==3) printf(\"aqua\\n\");\n    else if(ans==4) printf(\"red\\n\");\n    else if(ans==5) printf(\"fuchsia\\n\");\n    else if(ans==6) printf(\"yellow\\n\");\n    else if(ans==7) printf(\"white\\n\");\n  }\n  return 0;\n}\n\n\nint henkan(char a,char b){\n  int x,y;\n  if(a>='a' && a<='f') x=a-'a'+10;\n  else x=a-'0';\n  if(b>='a' && b<='f') y=b-'a'+10;\n  else y=b-'0';\n\n  return (x*16+y);\n}"
  },
  {
    "language": "C",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n//#define _USE_MATH_DEFINES\n#include<stdio.h>\n//#include<stdlib.h>\n#include<math.h>\n//#include<string.h>\n//#include<time.h>\n#define P(type,x) fprintf(stdout,\"%\"#type\"\\n\",x)\nstruct color {\n\tint r,\n\t\tg,\n\t\tb;\n\tchar c[8];\n};\n//int c16toi10(char*);\nint hex(char*);\nint main() {\n\tstruct color a[8]{\n\t\t{0x00,0x00,0x00,\"black\"},\n\t\t{0x00,0x00,0xff,\"blue\" },\n\t\t{0x00,0xff,0x00,\"lime\" },\n\t\t{0x00,0xff,0xff,\"aqua\"},\n\t\t{0xff,0x00,0x00,\"red\"},\n\t\t{0xff,0x00,0xff,\"fuchsia\"},\n\t\t{0xff,0xff,0x00,\"yellow\"},\n\t\t{0xff,0xff,0xff,\"white\"}\n\t};\n\tint i,r,g,b,d,t,n;\n\tchar str[16];\n\twhile (~fscanf(stdin, \"%s\", str), str[0] != '0') {\n\t\tr = hex(str + 1) * 16 + hex(str + 2);\n\t\tg = hex(str + 3) * 16 + hex(str + 4);\n\t\tb = hex(str + 5) * 16 + hex(str + 6);\n\t\tn = 1e8;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\td = sqrt(pow(r - a[i].r, 2) + pow(g - a[i].g, 2) + pow(b - a[i].b, 2));\n\t\t\tif (n > d)\n\t\t\t\tn = d, t = i;\n\t\t}\n\t\tP(s, a[t].c);\n\t}\n\treturn 0;\n}\n\n//int c16toi10(char *n){\n//\tint ans=0;\n//\tint i, base = 1;\n//\tfor (i = strlen(n)-1; i >= 0; --i) {\n//\t\tif (hex(n + i) == -1) return -1;\n//\t\tans += hex(n+i)*base;\n//\t\tbase *= 16;\n//\t}\n//\treturn ans;\n//}\n\nint hex(char *s){\n\tif ('0' <= *s&&*s <= '9') return *s - '0';\n\telse if ('A' <= *s&&*s <= 'Z') return *s - 'A' + 10;\n\telse if ('a' <= *s&&*s <= 'z') return *s - 'a' + 10;\n\treturn -1;\n}"
  },
  {
    "language": "C",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n//#define _USE_MATH_DEFINES\n#include<stdio.h>\n//#include<stdlib.h>\n#include<math.h>\n//#include<string.h>\n//#include<time.h>\n#define P(type,x) fprintf(stdout,\"%\"#type\"\\n\",x)\nstruct color {\n\tint r,\n\t\tg,\n\t\tb;\n\tchar c[8];\n};\n//int c16toi10(char*);\nint hex(char*);\nint main() {\n\tstruct color a[8]={\n\t\t{0x00,0x00,0x00,\"black\"},\n\t\t{0x00,0x00,0xff,\"blue\" },\n\t\t{0x00,0xff,0x00,\"lime\" },\n\t\t{0x00,0xff,0xff,\"aqua\"},\n\t\t{0xff,0x00,0x00,\"red\"},\n\t\t{0xff,0x00,0xff,\"fuchsia\"},\n\t\t{0xff,0xff,0x00,\"yellow\"},\n\t\t{0xff,0xff,0xff,\"white\"}\n\t};\n\tint i,t;\n\tdouble r, g, b, d, n;\n\tchar str[16];\n\twhile (~fscanf(stdin, \"%s\", str), str[0] != '0') {\n\t\tr = hex(str + 1) * 16 + hex(str + 2);\n\t\tg = hex(str + 3) * 16 + hex(str + 4);\n\t\tb = hex(str + 5) * 16 + hex(str + 6);\n\t\tn = 1e8;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\td = sqrt(pow(r - a[i].r, 2) + pow(g - a[i].g, 2) + pow(b - a[i].b, 2));\n\t\t\tif (n > d)\n\t\t\t\tn = d, t = i;\n\t\t}\n\t\tP(s, a[t].c);\n\t}\n\treturn 0;\n}\n\n//int c16toi10(char *n){\n//\tint ans=0;\n//\tint i, base = 1;\n//\tfor (i = strlen(n)-1; i >= 0; --i) {\n//\t\tif (hex(n + i) == -1) return -1;\n//\t\tans += hex(n+i)*base;\n//\t\tbase *= 16;\n//\t}\n//\treturn ans;\n//}\n\nint hex(char *s){\n\tif ('0' <= *s&&*s <= '9') return *s - '0';\n\telse if ('A' <= *s&&*s <= 'Z') return *s - 'A' + 10;\n\telse if ('a' <= *s&&*s <= 'z') return *s - 'a' + 10;\n\treturn -1;\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[][] color = \n\t{\n\t{0,0,0},\n\t{0,0,255},\n\t{0,255,0},\n\t{0,255,255},\n\t{255,0,0},\n\t{255,0,255},\n\t{255,255,0},\n\t{255,255,255},\n\t};\n\tstatic String anss[] =\n\t{ \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tString str = cin.next();\n\t\t\tif(str.equals(\"0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint r = hex(str.substring(1,3));\n\t\t\tint g = hex(str.substring(3,5));\n\t\t\tint b = hex(str.substring(5,7));\n//\t\t\tSystem.out.println(r+\" \" +g+\" \" +b);\n\t\t\tdouble min = 9999999999.0;int ans=0;\n\t\t\tfor(int i = 0;i<8;i++){\n\t\t\t\tdouble a = 0;\n\t\t\t\ta = d(r,g,b,i);\n\t\t\t\tif(min > a){\n\t\t\t\t\tmin = a;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(anss[ans]);\n\t\t}\n\t}\n\tstatic double d(int r, int g, int b ,int x){\n\t\tdouble re = Math.pow(r-color[x][0],2);\n\t\tre += Math.pow(g-color[x][1],2);\n\t\tre += Math.pow(b-color[x][2],2);\n\t\tre = Math.sqrt(re);\n\t\treturn re;\n\t}\n\tstatic int hex(String str){\n\t\tchar[] s = str.toCharArray();\n\t\tint re = 0;\n\t\tif(Character.isDigit(s[0])){\n\t\t\tre += (s[0]-'0')*16;\n\t\t}\n\t\telse{\n\t\t\tre += (s[0]-'a' + 10)*16;\n\t\t}\n\t\tif(Character.isDigit(s[1])){\n\t\t\tre += (s[1]-'0');\n\t\t}\n\t\telse{\n\t\t\tre += (s[1]-'a' + 10);\n\t\t}\n\t\treturn re;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\t\n\t\tString st;\n\t\tint r, g, b, ans;\n\t\tdouble min, db;\n\t\t\n\t\tString[] color = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\t\t\n\t\tint[][] code = {{0, 0, 0},\n\t\t\t\t\t\t{0, 0, 255},\n\t\t\t\t\t\t{0, 255, 0},\n\t\t\t\t\t\t{0, 255, 255},\n\t\t\t\t\t\t{255, 0, 0},\n\t\t\t\t\t\t{255, 0, 255},\n\t\t\t\t\t\t{255, 255, 0},\n\t\t\t\t\t\t{255, 255, 255}\t\t\t\t\t\t\n\t\t\t\t\t\t};\n\t\t\n\t\twhile(true) {\n\t\t\tst = scan.next();\n\t\t\t\n\t\t\tif(st.equals(\"0\")) break;\n\n\t\t\tmin = Integer.MAX_VALUE;\n\t\t\tans = 0;\n\t\t\t\n\t\t\tr = Integer.parseInt(st.substring(1,3), 16);\n\t\t\tg = Integer.parseInt(st.substring(3,5), 16);\n\t\t\tb = Integer.parseInt(st.substring(5,7), 16);\n\t\t\t\n\t\t\tfor(int i = 0; i < 8; i++) {\n\t\t\t\tdb = Math.sqrt(Math.pow(r - code[i][0], 2) + Math.pow(g - code[i][1], 2) + Math.pow(b - code[i][2], 2));\n\t\t\t\t\n\t\t\t\tif(db < min) {\n\t\t\t\t\tans = i;\n\t\t\t\t\tmin = db;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(color[ans]);\n\t\t}\n\t\t\n\t\tscan.close();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    String[] name = { \"black\", \"blue\", \"lime\", \"aqua\",\n\t\t      \"red\", \"fuchsia\", \"yellow\", \"white\" };\n    int[][] color = { {0, 0, 0}, {0, 0, 255}, {0, 255, 0}, {0, 255, 255},\n\t\t  {255, 0, 0}, {255, 0, 255}, {255, 255, 0}, {255, 255, 255} };\n    int[] dk;\n    String n;\n    int[] c;\n    int min, minN;\n\n    void run(){\n\twhile(sc.hasNext()){\n\t    n = sc.next();\n\t    if(n.equals(\"0\")) break;\n\t    c = new int[3];\n\t    dk = new int[8];\n\t    set(n.substring(1, 3), n.substring(3, 5), n.substring(5, 7));\n\n\t    for(int i=0; i<dk.length; i++)\n\t\tdk[i] = getD(i);\n\n\t    min = Integer.MAX_VALUE;\n\t    minN = 0;\n\t    for(int i=0; i<dk.length; i++)\n\t\tif(min > dk[i]){\n\t\t    min = dk[i];\n\t\t    minN = i;\n\t\t}\n\n\t    System.out.println(name[minN]);\n\t}\n    }\n\n    void set(String r, String g, String b){\n\tc[0] = Integer.parseInt(r, 16);\n\tc[1] = Integer.parseInt(g, 16);\n\tc[2] = Integer.parseInt(b, 16);\n    }\n\n    int getD(int i){\n\tint re=0;\n\tfor(int k=0; k<c.length; k++)\n\t    re += (c[k]-color[i][k])*(c[k]-color[i][k]);\n\treturn re;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    static double dis(double r, double g, double b) {\n        return Math.sqrt( r*r+ g*g+ b*b);\n    }\n    public static void main(String[] args) throws Exception {\n        String [] names ={“000black”,“001blue”,“010lime”,“011aqua”,“100red”,“101fuchsia”,“110yellow”,“111white”};     \n        Scanner sc = new Scanner(System.in);   \n        while(sc.hasNext()){\n            String str = sc.nextLine();\n            if(str.equals(“0”)) break;\n            int r0 = Integer.parseInt(str.substring(1,3), 16);\n            int g0 = Integer.parseInt(str.substring(3,5), 16);\n            int b0 = Integer.parseInt(str.substring(5,7), 16);\n            String ans = “”;\n            double min = 256.0;\n            for(String name: names) {\n                int r = (name.charAt(0)-‘0’) * 255;\n                int g = (name.charAt(1)-‘0’) * 255;\n                int b = (name.charAt(2)-‘0’) * 255;\n                double d = dis(r-r0, g - g0, b - b0);\n                if(d>min){\n                    min=d;\n                    ans=name;\n                }\n            }\n            System.out.println(ans.substring(3));\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tString n = sc.next();\n\t\t//ツカツδ可ーツ表\n\t\tint [][] color = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},\n\t\t\t\t{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\t\tString [] colorName = {\"black\",\"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\n\t\twhile(true){\n\t\t\tif(n.equals(\"0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//ツ禿シツ療債値ツづー10ツ進ツ陛渉環キツつキツづゥ\n\t\t\tint [] nowColor = new int[6];\n\t\t\tfor(int i=0; i < nowColor.length; i++){\n\t\t\t\tif(n.charAt(i+1) - 'a' >= 0){\n\t\t\t\t\tnowColor[i] = (n.charAt(i+1) - 'a') + 10;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnowColor[i] = n.charAt(i+1) - '0';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//RGBツづ可つキツづゥ\n\t\t\tint [] nowRGB = new int[3];\n\t\t\tfor(int i = 0; i < nowRGB.length; i++){\n\t\t\t\tnowRGB[i] = nowColor[i*2] << 4 | nowColor[i*2+1];\n\t\t\t}\n\n\t\t\t//d_kツづーツ仰づ淞、ツ催渉ャツ値ツづーindexツづーツ仰づ淞づゥ\n\t\t\tdouble min  = Math.pow(nowRGB[0], 2)+ Math.pow(nowRGB[1], 2) + Math.pow(nowRGB[2], 2);\n\t\t\tmin = Math.sqrt(min);\n\t\t\tint index = 0;\n\t\t\tfor(int i=1; i < color.length; i++){\n\t\t\t\tdouble now = Math.pow(color[i][0]-nowRGB[0], 2)+ Math.pow(color[i][1]-nowRGB[1], 2) +\n\t\t\t\t\tMath.pow(color[i][2]-nowRGB[2], 2);\n\t\t\t\tnow = Math.sqrt(now);\n\t\t\t\tif(min > now){\n\t\t\t\t\tmin = now;\n\t\t\t\t\tindex = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//ツ出ツ療債つキツづゥ\n\t\t\tSystem.out.println(colorName[index]);\n\n\t\t\tn = sc.next();\n\t\t}\n\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint[][] map = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t\t{ 255, 255, 0 }, { 255, 255, 255 } };\n\t\tString name[] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\n\t\t\t\t\"yellow\", \"white\" };\n\n\t\twhile (true) {\n\t\t\tString line = scanner.next();\n\t\t\tif (line.equals(\"0\"))\n\t\t\t\tbreak;\n\n\t\t\tint[] num = new int[3];\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(line.substring(i * 2 + 1, i * 2 + 3),\n\t\t\t\t\t\t16);\n\t\t\t}\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tdouble sum = 0;\n\t\t\tint ans = -1;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tsum += Math.pow(num[j] - map[i][j], 2);\n\t\t\t\t}\n\t\t\t\tsum = Math.sqrt(sum);\n\t\t\t\tif (min > sum) {\n\t\t\t\t\tmin = sum;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[ans]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[][] list = {\n\t\t{0,0,0},\n\t\t{0,0,255},\n\t\t{0,255,0},\n\t\t{0,255,255},\n\t\t{255,0,0},\n\t\t{255,0,255},\n\t\t{255,255,0},\n\t\t{255,255,255},\n\t};\n\t\n\tstatic String[] name = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\t\n\tstatic int trans(char jyu, char ichi){\n\t\tint sum = 0;\n\t\tif('a'<=jyu&&jyu<='f'){\n\t\t\tsum += jyu-'a'+10;\n\t\t}\n\t\telse{\n\t\t\tsum += jyu-'0';\n\t\t}\n\t\tsum*=16;\n\t\tif('a'<=ichi&&ichi<='f'){\n\t\t\tsum += ichi-'a'+10;\n\t\t}\n\t\telse{\n\t\t\tsum += ichi-'0';\n\t\t}\n\t\treturn sum;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tchar[] in = stdIn.next().toCharArray();\n\t\t\tif(in[0]=='0'){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint r = trans(in[1],in[2]);\n\t\t\tint g = trans(in[3],in[4]);\n\t\t\tint b = trans(in[5],in[6]);\n//\t\t\tSystem.out.println(r+\" \"+g+\" \"+b);\n//\t\t\tSystem.out.println(\"------------------\");\n\t\t\t\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tint min_idx = -1;\n\t\t\tfor(int k=0;k<8;k++){\n\t\t\t\tdouble tmp = Math.abs(Math.sqrt(Math.pow(r-list[k][0], 2)+Math.pow(g-list[k][1], 2)+Math.pow(b-list[k][2], 2)));\n//\t\t\t\tSystem.out.println(tmp);\n\t\t\t\tif(tmp<min){\n\t\t\t\t\tmin = tmp;\n\t\t\t\t\tmin_idx = k;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[min_idx]);\n//\t\t\tSystem.out.println(\"------------------\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import static java.lang.Integer.*;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        for (;;) {\n            char[] n = sc.next().toCharArray();\n            if (n[0] == '0') {\n                break;\n            }\n            System.out.println( \"black blue lime aqua red fuchsia yellow white\".split(\" \") [parseInt(\"\" + n[1] + n[2], 16) / 128 * 4 + parseInt(\"\" + n[3] + n[4], 16) / 128 * 2 + parseInt(\"\" + n[5] + n[6], 16) / 128]);\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint[][] map = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t\t{ 255, 255, 0 }, { 255, 255, 255 } };\n\t\tString name[] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\n\t\t\t\t\"yellow\", \"white\" };\n\n\t\twhile (true) {\n\t\t\tString line = scanner.next();\n\t\t\tif (line.equals(\"0\"))\n\t\t\t\tbreak;\n\n\t\t\tint[] num = new int[3];\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(line.substring(i * 2 + 1, i * 2 + 3),\n\t\t\t\t\t\t16);\n\t\t\t}\n\t\t\tdouble min = 1 << 16;\n\t\t\tdouble sum = 0;\n\t\t\tint ans = -1;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tsum += Math.pow(num[j] - map[i][j], 2);\n\t\t\t\t}\n\t\t\t\tsum = Math.sqrt(sum);\n\t\t\t\tif (min > sum) {\n\t\t\t\t\tmin = sum;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[ans]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tstatic int henkan(String n){\n\t\treturn Integer.decode(\"0x\"+n);\n\t}\n\tstatic double dk(String n,String k){\n\t\tk=k.substring(1);\n\t\tint r = henkan(k.substring(0,2));\n\t\tint g = henkan(k.substring(2,4));\n\t\tint b = henkan(k.substring(4, 6));\n\t\tn=n.substring(1);\n\t\tint r2 = henkan(n.substring(0,2));\n\t\tint g2 = henkan(n.substring(2,4));\n\t\tint b2 = henkan(n.substring(4, 6));\n\t\tdouble result = ((r-r2)*(r-r2)+(g-g2)*(g-g2)+(b-b2)*(b-b2));\n\t\treturn Math.sqrt(result);\n\t}\n\tstatic String doIt(String n){\n\t\tdouble min = dk(n,hyou[0]);\n\t\tint memo=0;\n\t\tfor(int i=1;i<hyou.length;i++){\n\t\t\tdouble test = dk(n,hyou[i]);\n\t\t\tif(test<min){\n\t\t\t\tmin=test;\n\t\t\t\tmemo=i;\n\t\t\t}\n\t\t}\n\t\treturn hyou2[memo];\n\t}\n\tstatic String hyou[] = {\"#000000\",\"#0000ff\",\"#00ff00\",\"#00ffff\",\"#ff0000\",\"#ff00ff\",\"#ffff00\",\"#ffffff\"};\n\tstatic String hyou2[] ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tpublic static void main(String[] args){\n\t\tScanner in = new Scanner(System.in);\n\t\twhile(in.hasNext()){\n\t\t\tString n = in.next();\n\t\t\tif(n==\"0\")break;\n\t\t\tSystem.out.println(doIt(n));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n       int [][] color={ {0,0,0},{0,0255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255} };\n       String [] name ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n       \n       Scanner sc = new Scanner(System.in);\n       \n       /* int [][] c = new int[8][3];\n       for(int i=0;i<8;i++){\n           for(int j=0;j<3;j++){\n               c[i][j]=Integer.parseInt(color[i][j],16);\n              // System.out.print(c[i][j]);\n           }\n           // System.out.println();\n       }\n       */\n       \n       while(sc.hasNextLine()){\n           String str = sc.nextLine();\n           if(str.equals(\"0\")) break;\n           String ans = \"\";\n           double min = 450.0;\n           for(int i=0;i<8;i++){\n               double d = Math.sqrt( (Integer.parseInt(str.substring(1,3),16)-color[i][0])*(Integer.parseInt(str.substring(1,3),16)-color[i][0]) + (Integer.parseInt(str.substring(3,5),16)-color[i][1])*(Integer.parseInt(str.substring(3,5),16)-color[i][1]) + (Integer.parseInt(str.substring(5,7),16)-color[i][2])* (Integer.parseInt(str.substring(5,7),16)-color[i][2]));\n               if(d<min){\n                   min=d;\n                   ans=name[i];\n               }\n           }\n           System.out.println(ans);\n       }\n       \n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.HashMap;\nimport java.util.Arrays;\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[\\n#]+\");\n\t\twhile (true)\n\t\t{\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"0\")) break;\n\t\t\tint rk = Integer.parseInt(str.substring(0, 2), 16);\n\t\t\tint gk = Integer.parseInt(str.substring(2, 4), 16);\n\t\t\tint bk = Integer.parseInt(str.substring(4, 6), 16);\n\t\t\tint d[] = new int[8];\n\t\t\tHashMap<Integer, String> map = new HashMap<Integer, String>();\n\t\t\td[0] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0x00 - bk) * (0x00 - bk);\n\t\t\tmap.put(d[0], \"black\");\n\t\t\td[1] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0xff - bk) * (0xff - bk);\n\t\t\tmap.put(d[1], \"blue\");\n\t\t\td[2] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0x00 - bk) * (0x00 - bk);\n\t\t\tmap.put(d[2], \"lime\");\n\t\t\td[3] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0xff - bk) * (0xff - bk);\n\t\t\tmap.put(d[3], \"aqua\");\n\t\t\td[4] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0x00 - bk) * (0x00 - bk);\n\t\t\tmap.put(d[4], \"red\");\n\t\t\td[5] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0xff - bk) * (0xff - bk);\n\t\t\tmap.put(d[5], \"fuchsia\");\n\t\t\td[6] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0x00 - bk) * (0x00 - bk);\n\t\t\tmap.put(d[6], \"yellow\");\n\t\t\td[7] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0xff - bk) * (0xff - bk);\n\t\t\tmap.put(d[7], \"white\");\n\t\t\tArrays.sort(d);\n\t\t\tSystem.out.println(map.get(d[0]));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tnew Main().run();\n\t}\n\tScanner scan = new Scanner(System.in);\n\tString str;\n\tint[][] sampColor = {\n\t\t{0,0,0},\n\t\t{0,0,255},\n\t\t{0,255,0},\n\t\t{0,255,255},\n\t\t{255,0,0},\n\t\t{255,0,255},\n\t\t{255,255,0},\n\t\t{255,255,255}\n\t\t};\n\tString[] color = new String[8];\n\tint[] t = new int[3];\n\tpublic void run(){\n\t\tdouble dis = 0;\n\t\tdouble s;\n\t\tint f = 0;\n\t\tcolor[0] = \"black\";\n\t\tcolor[1] = \"blue\";\n\t\tcolor[2] = \"lime\";\n\t\tcolor[3] = \"aqua\";\n\t\tcolor[4] = \"red\";\n\t\tcolor[5] = \"fuchsia\";\n\t\tcolor[6] = \"yellow\";\n\t\tcolor[7] = \"white\";\n\t\twhile(scan.hasNext()){\n\t\t\tstr = scan.next();\n\t\t\tif(str.equals(\"0\")){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdis = 0;\n\t\t\tf = 0;\n\t\t\tchar[] c = str.toCharArray();\n\t\t\tfor(int i = 0;i < 3;i++){\n\t\t\t\tt[i] = 16 * change(c[2*i+1]) + change(c[2*i+2]);\n\t\t\t}\n\t\t\tfor(int i = 0;i < 8;i++){\n\t\t\t\ts = calcDis(i);\n\t\t\t\tif(i == 0 || dis > s){\n\t\t\t\t\tf = i;\n\t\t\t\t\tdis = s;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(color[f]);\n\t\t}\n\t}\n\tpublic int change(char a){\n\t\treturn (int)a - (((int)a > 96)?87:48);\n\t}\n\tpublic double calcDis(int num){\n\t\tint x = 0;\n\t\tfor(int i = 0;i < 3;i++){\n\t\t\tx += (t[i] - sampColor[num][i])*(t[i] - sampColor[num][i]);\n\t\t}\n\t\treturn Math.sqrt(x);\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint[][] map = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t\t{ 255, 255, 0 }, { 255, 255, 255 } };\n\t\tString name[] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\n\t\t\t\t\"yellow\", \"white\" };\n\n\t\twhile (true) {\n\t\t\tString line = scanner.next();\n\t\t\tif (line.equals(\"0\"))\n\t\t\t\tbreak;\n\n\t\t\tint[] num = new int[3];\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(line.substring(i * 2 + 1, i * 2 + 3),\n\t\t\t\t\t\t16);\n\t\t\t}\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tdouble sum = 0;\n\t\t\tint ans = 0;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tsum += Math.pow(num[j] - map[i][j], 2);\n\t\t\t\t}\n\t\t\t\tsum = Math.sqrt(sum);\n\t\t\t\tif (min > sum) {\n\t\t\t\t\tmin = sum;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[ans]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nimport java.lang.*;\nimport java.math.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tclass color {\n\t\tint r, g, b;\n\t\tString s;\n\n\t\tcolor(int value, String s) {\n\t\t\tr = value >> 16;\n\t\t\tg = (value >> 8) & 255;\n\t\t\tb = value & 255;\n\t\t\tthis.s = s;\n\t\t}\n\n\t\tint diff(color c) {\n\t\t\treturn ((c.r - r) * (c.r - r) + (c.b - b) * (c.b - b) + (c.g - g)\n\t\t\t\t\t* (c.g - g));\n\t\t}\n\t}\n\n\tvoid run() {\n\t\tcolor db[] = { new color(0, \"black\"), new color(0, \"blue\"),\n\t\t\t\tnew color(0, \"lime\"), new color(0, \"aqua\"),\n\t\t\t\tnew color(0, \"red\"), new color(0, \"funchsia\"),\n\t\t\t\tnew color(0, \"yellow\"), new color(0, \"white\"), };\n\t\tdb[1].b = 0xff;\n\t\tdb[2].g = 0xff;\n\t\tdb[3].g = 0xff;\n\t\tdb[3].b = 0xff;\n\t\tdb[4].r = 0xff;\n\t\tdb[5].b = 0xff;\n\t\tdb[5].r = 0xff;\n\t\tdb[6].g = 0xff;\n\t\tdb[6].r = 0xff;\n\t\tdb[7].r = 0xff;\n\t\tdb[7].b = 0xff;\n\t\tdb[7].g = 0xff;\n\n\t\tfor (;;) {\n\t\t\tString buffer = sc.next();\n\t\t\tif (buffer.equals(\"0\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tScanner in = new Scanner(buffer.substring(1));\n\t\t\tint value = in.nextInt(16);\n\n\t\t\tcolor ti = new color(value, \"\");\n\t\t\tint max = Integer.MAX_VALUE >> 1;\n\t\t\tString ret = \"\";\n\t\t\tfor (color t : db) {\n\t\t\t\tif (max > t.diff(ti)) {\n\t\t\t\t\tmax = t.diff(ti);\n\t\t\t\t\tret = t.s;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ret);\n\t\t}\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n       String [][] color={ {\"00\",\"00\",\"00\"},{\"00\",\"00\",\"ff\"},{\"00\",\"ff\",\"00\"},{\"00\",\"ff\",\"ff\"},{\"ff\",\"00\",\"00\"},{\"ff\",\"00\",\"ff\"},{\"ff\",\"ff\",\"00\"},{\"ff\",\"ff\",\"ff\"} };\n       String [] name ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n       \n       Scanner sc = new Scanner(System.in);\n       \n       int [][] c = new int[8][3];\n       for(int i=0;i<8;i++){\n           for(int j=0;j<3;j++){\n               c[i][j]=Integer.parseInt(color[i][j],16);\n              // System.out.print(c[i][j]);\n           }\n           // System.out.println();\n       }\n       \n       while(sc.hasNext()){\n           String str = sc.nextLine();\n           if(str.equals(\"0\")) break;\n           String ans = \"\";\n           double max = 0;\n           for(int i=0;i<8;i++){\n               double d = Math.sqrt( (Integer.parseInt(str.substring(1,2))-c[i][0])*(Integer.parseInt(str.substring(1,2))-c[i][0]) + (Integer.parseInt(str.substring(3,4))-c[i][1])*(Integer.parseInt(str.substring(3,4))-c[i][1]) + (Integer.parseInt(str.substring(5,6))-c[i][2]) );\n               if(d>max){\n                   max=d;\n                   ans=name[i];\n               }\n           }\n           System.out.println(ans);\n       }\n       \n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString name[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\t\tint color[][] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\t\twhile(sc.hasNext()){\n\t\t\tString str = sc.next();\n\t\t\tif(str.equals(\"0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint R = Integer.parseInt(str.substring(1,3),16);\n\t\t    int G = Integer.parseInt(str.substring(3,5),16);\n\t\t    int B = Integer.parseInt(str.substring(5,7),16);\n\t\t    double min = Double.MAX_VALUE;\n\t\t    int index = 0;\n\t\t    for(int i=0;i<8;i++){\n\t\t    \tdouble near = Math.sqrt(Math.pow(R - color[i][0],2) + Math.pow(G - color[i][1],2) + Math.pow(B - color[i][2],2));\n\t\t    \tif(min > near){\n\t\t    \t\tmin = near;\n\t\t    \t\tindex = i;\n\t\t    \t}\n\t\t    }\n\t\t\tSystem.out.println(name[index]);\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.awt.geom.Point2D;\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Deque;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.NoSuchElementException;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.util.Stack;\nimport java.util.TreeMap;\n\n\n\npublic class Main {\n\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tstatic FastScanner sc = new FastScanner();\n\tstatic Scanner stdIn = new Scanner(System.in);\n\tstatic int INF = 2 << 26;\n\tstatic int[][] X = new int[][] {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n\tstatic String[] K = new String[] {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\tpublic static void main(String[] args) {\n\t\twhile(true) {\n\t\t\tString tmp = sc.next();\n\t\t\tif(tmp.equals(\"0\")) break;\n\t\t\tint a1 = Integer.parseInt(tmp.substring(1, 3),16);\n\t\t\tint a2 = Integer.parseInt(tmp.substring(3, 5),16);\n\t\t\tint a3 = Integer.parseInt(tmp.substring(5, 7),16);\n\t\t\tdouble dkMax = Double.MAX_VALUE;\n\t\t\tint id = 0;\n\t\t\tfor(int i = 0; i < X.length; i++) {\n\t\t\t\tdouble x = Math.sqrt(Math.pow((a1 - X[i][0]),2) + Math.pow((a2 - X[i][1]),2) +Math.pow((a3 - X[i][2]),2));\n\t\t\t\tif(dkMax > x) {\n\t\t\t\t\tdkMax = x;\n\t\t\t\t\tid = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(K[id]);\n\t\t\t\n\t\t}\n\t\tout.flush();\n\t}\n\n}\n\n//------------------------------//\n//-----------//\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n    public boolean hasNext() { skipUnprintable(); return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    \n    public int nextInt() {\n    \t if (!hasNext()) throw new NoSuchElementException();\n         int n = 0;\n         boolean minus = false;\n         int b = readByte();\n         if (b == '-') {\n             minus = true;\n             b = readByte();\n         }\n         if (b < '0' || '9' < b) {\n             throw new NumberFormatException();\n         }\n         while(true){\n             if ('0' <= b && b <= '9') {\n                 n *= 10;\n                 n += b - '0';\n             }else if(b == -1 || !isPrintableChar(b)){\n                 return minus ? -n : n;\n             }else{\n                 throw new NumberFormatException();\n             }\n             b = readByte();\n         }\n    }\n    \n    public double nextDouble() {\n    \treturn Double.parseDouble(next());\n    }\n    \n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tpublic static int[][] base = {\n\t\t{0, 0, 0}, {0, 0, 255}, {0, 255, 0}, {0, 255, 255},\n\t\t{255, 0, 0}, {255, 0, 255}, {255, 255, 0}, {255, 255, 255}\n\t};\n\t\n\tpublic static String[] base_name = {\n\t\t\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n\t};\n\t\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\t\n\t\twhile((line = in.readLine()) != null){\n\t\t\tif(line.equals(\"0\")) break;\n\t\t\t\n\t\t\tint[] color = new int[3];\n\t\t\tcolor[0] = hex2num(line.substring(1, 3));\n\t\t\tcolor[1] = hex2num(line.substring(3, 5));\n\t\t\tcolor[2] = hex2num(line.substring(5, 7));\n\t\t\tString name = \"\";\n\t\t\tint min = Integer.MAX_VALUE;\n\t\t\tfor(int i=0; i<base.length; i++){\n\t\t\t\tint val = delta(base[i], color);\n\t\t\t\tif(val < min){\n\t\t\t\t\tmin = val;\n\t\t\t\t\tname = base_name[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(name);\n\t\t}\n\t}\n\t\n\tpublic int delta(int[] a, int[] b){\n\t\tint ans = 0;\n\t\tfor(int i=0; i<3; i++){\n\t\t\tint d = a[i] - b[i];\n\t\t\tans += d * d;\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tpublic int hex2num(String h){\n\t\tString[] rigid = new String[]{\n\t\t\t\t\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"\n\t\t};\n\t\t\n\t\tint num = 0;\n\t\tString a = h.substring(0, 1);\n\t\tString b = h.substring(1, 2);\n\t\tfor(int i=0; i<rigid.length; i++){\n\t\t\tif(a.equals(rigid[i])){\n\t\t\t\tnum += i * 16;\n\t\t\t}\n\t\t\t\n\t\t\tif(b.equals(rigid[i])){\n\t\t\t\tnum += i;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn num;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.HashMap;\nimport java.util.Arrays;\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[\\n#]+\");\n\t\twhile (true)\n\t\t{\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"0\")) break;\n\t\t\tint rk = Integer.parseInt(str.substring(0, 2), 16);\n\t\t\tint gk = Integer.parseInt(str.substring(2, 4), 16);\n\t\t\tint bk = Integer.parseInt(str.substring(4, 6), 16);\n\t\t\tint d[] = new int[8];\n\t\t\tHashMap<Integer, String> map = new HashMap<Integer, String>();\n\t\t\td[0] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0x00 - rk) * (0x00 - bk);\n\t\t\tmap.put(d[0], \"black\");\n\t\t\td[1] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0xff - rk) * (0xff - bk);\n\t\t\tmap.put(d[1], \"blue\");\n\t\t\td[2] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0x00 - rk) * (0x00 - bk);\n\t\t\tmap.put(d[2], \"lime\");\n\t\t\td[3] = (0x00 - rk) * (0x00 - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0xff - rk) * (0xff - bk);\n\t\t\tmap.put(d[3], \"aqua\");\n\t\t\td[4] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0x00 - rk) * (0x00 - bk);\n\t\t\tmap.put(d[4], \"red\");\n\t\t\td[5] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0x00 - gk) * (0x00 - gk)\n\t\t\t\t\t+ (0xff - rk) * (0xff - bk);\n\t\t\tmap.put(d[5], \"fuchsia\");\n\t\t\td[6] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0x00 - rk) * (0x00 - bk);\n\t\t\tmap.put(d[6], \"yellow\");\n\t\t\td[7] = (0xff - rk) * (0xff - rk)\n\t\t\t\t\t+ (0xff - gk) * (0xff - gk)\n\t\t\t\t\t+ (0xff - rk) * (0xff - bk);\n\t\t\tmap.put(d[7], \"white\");\n\t\t\tArrays.sort(d);\n\t\t\tSystem.out.println(map.get(d[0]));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "static double dis(double r, double g, double b) {\n        return Math.sqrt( r*r+ g*g+ b*b);\n    }\n    public static void main(String[] args) throws Exception {\n        String [] names ={“000black”,“001blue”,“010lime”,“011aqua”,“100red”,“101fuchsia”,“110yellow”,“111white”};     \n        Scanner sc = new Scanner(System.in);   \n        while(sc.hasNext()){\n            String str = sc.nextLine();\n            if(str.equals(“0”)) break;\n            int r0 = Integer.parseInt(str.substring(1,3), 16);\n            int g0 = Integer.parseInt(str.substring(3,5), 16);\n            int b0 = Integer.parseInt(str.substring(5,7), 16);\n            String ans = “”;\n            double min = 256.0;\n            for(String name: names) {\n                int r = (name.charAt(0)-‘0’) * 255;\n                int g = (name.charAt(1)-‘0’) * 255;\n                int b = (name.charAt(2)-‘0’) * 255;\n                double d = dis(r-r0, g - g0, b - b0);\n                if(d>min){\n                    min=d;\n                    ans=name;\n                }\n            }\n            System.out.println(ans.substring(3));\n        }\n    }\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint r, g, b;\n\t\tString s;\n\t\tint map[][] = {{0, 0, 0}, {0, 0, 255}, {0, 255, 0}, {0, 255, 255}, {255, 0, 0}, {255, 0, 255}, {255, 255, 0}, {255, 255, 255}};\n\t\tString color[] = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n\t\tint minIndex;\n\t\tdouble min;\n\t\t\n\t\twhile (true) {\n\t\t\ts = sc.next();\n\t\t\tif (s.equals(\"0\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tr = Integer.decode(\"0x\" + s.substring(1, 3)).intValue();\n\t\t\tg = Integer.decode(\"0x\" + s.substring(3, 5)).intValue();\n\t\t\tb = Integer.decode(\"0x\" + s.substring(5, 7)).intValue();\n\t\t\t\n\t\t\tminIndex = 0;\n\t\t\tmin = Double.MAX_VALUE;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tdouble dk = Math.sqrt(Math.pow(r - map[i][0], 2) + Math.pow(g - map[i][1], 2) + Math.pow(b - map[i][2], 2));\n\t\t\t\tif (dk < min) {\n\t\t\t\t\tmin = dk;\n\t\t\t\t\tminIndex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(color[minIndex]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.lang.Math;\n\npublic class Main{\n\tMain(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint iff = Integer.decode(\"0xff\");\n\t\tint[][] a = new int[8][];\n\t\t\n\t\tfor(int i = 0; i < 8; i++){\n\t\t\ta[i] = new int[3];\n\t\t}\n\t\ta[1][2] = a[2][1] = a[3][1] = a[3][2] = a[4][0] = a[5][0] = iff;\n\t\ta[5][2] = a[6][0] = a[6][1] = a[7][0] = a[7][1] = a[7][2] = iff;\n\t\t\n\t\twhile(true){\n\t\t\tString str = sc.next();\n\t\t\tif(str.equals(\"0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint r = Integer.decode(\"0x\"+str.substring(1, 3));\n\t\t\tint g = Integer.decode(\"0x\"+str.substring(3, 5));\n\t\t\tint b = Integer.decode(\"0x\"+str.substring(5, 7));\n\t\t\t\n\t\t\tdouble mind = Math.sqrt((double)(r*r+g*g+b*b));\n\t\t\tint p = 0;\n\t\t\t\n\t\t\tfor(int i = 1; i < 8; i++){\n\t\t\t\tdouble d = Math.sqrt((double)((r-a[i][0])*(r-a[i][0])+(g-a[i][1])*(g-a[i][1])+(b-a[i][2])*(b-a[i][2])));\n\t\t\t\tif(d < mind){\n\t\t\t\t\tmind = d;\n\t\t\t\t\tp = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(p == 0){\n\t\t\t\tstr = \"black\";\n\t\t\t} else if(p == 1){\n\t\t\t\tstr = \"blue\";\n\t\t\t} else if(p == 2){\n\t\t\t\tstr = \"lime\";\n\t\t\t} else if(p == 3){\n\t\t\t\tstr = \"aqua\";\n\t\t\t} else if(p == 4){\n\t\t\t\tstr = \"red\";\n\t\t\t} else if(p == 5){\n\t\t\t\tstr = \"fuchsia\";\n\t\t\t} else if(p == 6){\n\t\t\t\tstr = \"yellow\";\n\t\t\t} else {\n\t\t\t\tstr = \"white\";\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(str);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tstatic int henkan(String n){\n\t\treturn Integer.decode(\"0x\"+n);\n\t}\n\tstatic double dk(String n,String k){\n\t\tk=k.substring(1);\n\t\tint r = henkan(k.substring(0,2));\n\t\tint g = henkan(k.substring(2,4));\n\t\tint b = henkan(k.substring(4, 6));\n\t\tn=n.substring(1);\n\t\tint r2 = henkan(n.substring(0,2));\n\t\tint g2 = henkan(n.substring(2,4));\n\t\tint b2 = henkan(n.substring(4, 6));\n\t\tdouble result = ((r-r2)*(r-r2)+(g-g2)*(g-g2)+(b-b2)*(b-b2));\n\t\treturn Math.sqrt(result);\n\t}\n\tstatic String doIt(String n){\n\t\tdouble min = dk(n,hyou[0]);\n\t\tint memo=0;\n\t\tfor(int i=1;i<hyou.length;i++){\n\t\t\tdouble test = dk(n,hyou[i]);\n\t\t\tif(test<min){\n\t\t\t\tmin=test;\n\t\t\t\tmemo=i;\n\t\t\t}\n\t\t}\n\t\treturn hyou2[memo];\n\t}\n\tstatic String hyou[] = {\"#000000\",\"#0000ff\",\"#00ff00\",\"#00ffff\",\"#ff0000\",\"#ff00ff\",\"#ffff00\",\"#ffffff\"};\n\tstatic String hyou2[] ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\t\n\tpublic static void main(String[] args){\n\t\tScanner in = new Scanner(System.in);\n\t\twhile(in.hasNext()){\n\t\t\tString n = in.next();\n\t\t\tif(n.equals(\"0\"))break;\n\t\t\tSystem.out.println(doIt(n));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;class Main{public static void main(String[]z){Scanner s=new Scanner(System.in);for(String x,y=\"black blue lime aqua red fuchsia yellow white\",r=y;(x=s.next()).length()>1;System.out.println(r))for(int i=8,j,v,m=1<<23,k;i-->0;){for(j=v=0;j<3;)v+=(k=(java.awt.Color.decode(x).getRGB()>>j*8&255)-((i>>j++&1)>0?255:0))*k;if(m>v){m=v;r=y.split(\" \")[i];}}}}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] c= {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n        for (;;) {\n            String n = sc.next();\n            if (n.equals(\"0\")) {\n                break;\n            }\n            int[] l=new int[6];\n            for(int i=1;i<7;i++) {\n                if(n.charAt(i)>='a'&&n.charAt(i)<='f') {\n                    l[i-1]=n.charAt(i)-'a'+10 ; \n                }else {\n                    l[i-1]=n.charAt(i)-'0'; \n                }\n            }\n            int r=l[0]*16+l[1]>127?4:0;\n            int g=l[2]*16+l[3]>127?2:0;\n            int b=l[4]*16+l[5]>127?1:0;\n            System.out.println(c[r+g+b]);\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport static java.util.Arrays.deepToString;\n\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\tvoid tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n\n\tScanner sc = new Scanner(System.in);\n\tpublic void run() {\n\t\tP[] ps = new P[] {\n\t\t\t\tnew P(\"black\", get(\"000000\")),\n\t\t\t\tnew P(\"blue\", get(\"0000ff\")),\n\t\t\t\tnew P(\"lime\", get(\"00ff00\")),\n\t\t\t\tnew P(\"aqua\", get(\"00ffff\")),\n\t\t\t\tnew P(\"red\", get(\"ff0000\")),\n\t\t\t\tnew P(\"fuchsia\", get(\"ff00ff\")),\n\t\t\t\tnew P(\"yellow\", get(\"ffff00\")),\n\t\t\t\tnew P(\"white\", get(\"ffffff\")),\n\t\t};\n\t\tfor (;sc.hasNext();) {\n\t\t\tString s = sc.next();\n\t\t\tif (s.equals(\"0\")) break;\n\t\t\ts = s.substring(1);\n\t\t\tint[] rgb = get(s);\n\t\t\tint best = Integer.MAX_VALUE;\n\t\t\tP ans = null;\n\t\t\tfor (P p : ps) {\n\t\t\t\tint d = d2(rgb, p.rgb);\n\t\t\t\tif (best > d) {\n\t\t\t\t\tbest = d;\n\t\t\t\t\tans = p;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans.name);\n\t\t}\n\t}\n\t\n\tint sq(int x) { return x * x; }\n\tint d2(int[] a, int[] b) {\n\t\treturn sq(a[0] - b[0]) + sq(a[1] - b[1]) + sq(a[2] - b[2]);\n\t}\n\t\n\tint[] get(String s) {\n\t\tint x = Integer.parseInt(s, 16);\n\t\tint b = x % 256; x /= 256;\n\t\tint g = x % 256; x /= 256;\n\t\tint r = x % 256; x /= 256;\n\t\treturn new int[]{r, g, b};\n\t}\n\n\tstatic class P {\n\t\tString name;\n\t\tint[] rgb;\n\t\tprivate P(String name, int[] is) {\n\t\t\tthis.name = name;\n\t\t\tthis.rgb = is; \n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n       int [][] color={ {0,0,0},{0,0255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255} };\n       String [] name ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n       \n       Scanner sc = new Scanner(System.in);\n       \n       /* int [][] c = new int[8][3];\n       for(int i=0;i<8;i++){\n           for(int j=0;j<3;j++){\n               c[i][j]=Integer.parseInt(color[i][j],16);\n              // System.out.print(c[i][j]);\n           }\n           // System.out.println();\n       }\n       */\n       \n       while(sc.hasNextLine()){\n           String s = sc.nextLine();\n           if(s.equals(\"0\")) break;\n           String str = s.concat(\" \");\n           String ans = \"\";\n           double min = 450.0;\n           for(int i=0;i<8;i++){\n               double d = Math.sqrt( (Integer.parseInt(str.substring(1,3),16)-color[i][0])*(Integer.parseInt(str.substring(1,3),16)-color[i][0]) + (Integer.parseInt(str.substring(3,5),16)-color[i][1])*(Integer.parseInt(str.substring(3,5),16)-color[i][1]) + (Integer.parseInt(str.substring(5,7),16)-color[i][2])* (Integer.parseInt(str.substring(5,7),16)-color[i][2]));\n               if(d<min){\n                   min=d;\n                   ans=name[i];\n               }\n           }\n           System.out.println(ans);\n       }\n       \n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main {\n  public static void main (String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    String[] cns = {\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"};\n    int[][] cs = {{0, 0, 0},\n                  {0, 0, 255},\n                  {0, 255, 0},\n                  {0, 255, 255},\n                  {255, 0, 0},\n                  {255, 0, 255},\n                  {255, 255, 0},\n                  {255, 255, 255}};\n    while (scanner.hasNext()) {\n      String line = scanner.nextLine();\n      if (line.equals(\"0\")) {\n        break;\n      }\n      int hikaru = Integer.parseInt(line.substring(1, 3), 16);\n      int umi = Integer.parseInt(line.substring(5, 7), 16);\n      int fuu = Integer.parseInt(line.substring(3, 5), 16);\n      int topc = 0;\n      double topd = Double.MAX_VALUE;\n      for (int ii = 0; ii < 8; ii++) {\n        double d = Math.sqrt((cs[ii][0] - hikaru) * (cs[ii][0] - hikaru) +\n                             (cs[ii][2] - umi) * (cs[ii][2] - umi) +\n                             (cs[ii][1] - fuu) * (cs[ii][1] - fuu));\n        if (d < topd) {\n          topc = ii;\n          topd = d;\n        }\n      }\n      System.out.println(cns[topc]);\n    }\n  }\n}"
  },
  {
    "language": "Java",
    "code": "/**\n * @author yuichirw\n *\n */\nimport java.util.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\tstatic String c;\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic String[] color_str = {\n\t\t\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"\n\t};\n\tstatic int[][] color = {\n\t\t{0, 0, 0},\n\t\t{0, 0, 255},\n\t\t{0, 255, 0},\n\t\t{0, 255, 255},\n\t\t{255, 0, 0},\n\t\t{255, 0, 255},\n\t\t{255, 255, 0},\n\t\t{255, 255, 255}\n\t};\n\t\n\tstatic boolean read() {\n\t\tc = sc.next();\n\t\treturn (c.equals(\"0\")) ? false : true;\n\t}\n\t\n\tstatic String solve() {\n\t\tint[] clr = new int[3];\n\t\tclr[0] = Integer.parseInt(c.substring(1, 1 + 2), 16);\n\t\tclr[1] = Integer.parseInt(c.substring(3, 3 + 2), 16);\n\t\tclr[2] = Integer.parseInt(c.substring(5, 5 + 2), 16);\n\t\t\n\t\tString ans; int d, a;\n\t\tans = \"\"; d = 195075;\n\t\t\n\t\tfor(int i = 0; i < color.length; i++) {\n\t\t\ta = (int)(pow(color[i][0] - clr[0], 2) + pow(color[i][1] - clr[1], 2) + pow(color[i][2] - clr[2], 2));\n\t\t\tif(a < d) {\n\t\t\t\td = a;\n\t\t\t\tans = color_str[i];\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\twhile(read()) {\n\t\t\tSystem.out.println(solve());\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.BigInteger;\n\npublic class Main {\n   public static void main(String[] args) throws Exception {\n       String [] unit = {\"\",\"Man\",\"Oku\",\"Cho\",\"Kei\",\"Gai\",\"Jo\",\"Jou\",\"Ko\",\"Kan\",\"Sei\",\"Sai\",\"Gok\",\"Ggs\",\"Asg\",\"Nyt\",\"Fks\",\"Mts\"};\n       Scanner sc = new Scanner(System.in);\n       while(sc.hasNextInt()){\n           int m = sc.nextInt();\n           int n = sc.nextInt();\n           if(m==0 && n==0) break;\n           BigInteger b = valueOf(Math.pow(m,n));\n           \n           String ans = \"\";\n           for(int i=0;i<18;i++){\n               String digit = remainder(b,10000);\n               ans = digit.concat(unit[i]+ans);\n               b = divide(b,10000);\n           }\n           System.out.println(ans);\n       }\n   }\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint[][] map = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t\t{ 255, 255, 0 }, { 255, 255, 255 } };\n\t\tString[] name = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\n\t\t\t\t\"yellow\", \"white\" };\n\n\t\twhile (true) {\n\t\t\tString line = scanner.next();\n\t\t\tif (line.equals(\"0\"))\n\t\t\t\tbreak;\n\n\t\t\tint[] num = new int[3];\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(line.substring(i * 2 + 1, i * 2 + 3),\n\t\t\t\t\t\t16);\n\t\t\t}\n\t\t\tdouble min = 1 << 16;\n\t\t\tdouble sum = 0;\n\t\t\tint ans = -1;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tsum += Math.pow(num[j] - map[i][j], 2);\n\t\t\t\t}\n\t\t\t\tsum = Math.sqrt(sum);\n\t\t\t\tif (min > sum) {\n\t\t\t\t\tmin = sum;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[ans]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Scanner;\nimport java.util.concurrent.LinkedBlockingDeque;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint colors[][] = {\n\t\t\t\t{0,   0,   0},\n\t\t\t\t{0,   0,   255},\n\t\t\t\t{0,   255,   0},\n\t\t\t\t{0,   255,   255},\n\t\t\t\t{255,   0,   0},\n\t\t\t\t{255,   0,   255},\n\t\t\t\t{255,   255,   0},\n\t\t\t\t{255,   255,   255},\n\t\t};\n\t\tString[] names = \n\t\t\t{\n\t\t\t\t\"black\" , \"blue\" , \"lime\" , \"aqua\" , \"red\" , \"fuchsia\" , \"yellow\" , \"white\"\n\t\t\t};\n\t\t\n\t\twhile (true) {\n\t\t\tString str = sc.next();\n\n\t\t\tif(\"0\".equals(str)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint r = Integer.parseInt(str.substring(1, 3), 16);\n\t\t\tint g = Integer.parseInt(str.substring(3, 5), 16);\n\t\t\tint b = Integer.parseInt(str.substring(5, 7), 16);\n\t\t\t\n\t\t\tdouble min = Integer.MAX_VALUE;\n\t\t\tint min_num = -1;\n\t\t\tfor(int i = 0; i < 8; i++){\n\t\t\t\tdouble d = Math.sqrt((colors[i][0] - r)*(colors[i][0] - r) + (colors[i][1] - g)*(colors[i][1] - g) + (colors[i][2] - b)*(colors[i][2] - b));\n\t\t\t\tif(min > d){\n\t\t\t\t\tmin = d;\n\t\t\t\t\tmin_num = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(names[min_num]);\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport static java.lang.System.out;\nclass Main{\n  public static void main(String args[]){\n    Scanner scan = new Scanner(System.in);\n    String name[] = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n    int color[][] = {{0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255}};\n    while(true){\n      String str = scan.next();\n      if(str.equals(\"0\")) break;\n\n      int R = Integer.parseInt(str.substring(1,3),16);\n      int G = Integer.parseInt(str.substring(3,5),16);\n      int B = Integer.parseInt(str.substring(5,7),16);\n      double min = Double.MAX_VALUE;\n      int Index = 0;\n      for(int i = 0 ; i < 8 ; i++){\n        double near = Math.sqrt(Math.pow(R - color[i][0],2) + Math.pow(G - color[i][1],2) + Math.pow(B - color[i][2],2));\n        if( near < min ){\n          min = near;\n          Index = i;\n        }\n      }\n      out.println(name[Index]);\n    }\n  }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\tString s = sc.next();\n\t\t\tif(s.compareTo(\"0\")==0)break;\n\t\t\t\n\t\t\tString t = \"\";\n\t\t\tint[] c = new int[6];\n\t\t\tfor(int i=1;i<7;i++){\n\t\t\t\tt = s.substring(i,i+1);\n\t\t\t\tif(t.compareTo(\"a\")==0){\n\t\t\t\t\tc[i-1] = 10;\n\t\t\t\t}else if(t.compareTo(\"b\")==0){\n\t\t\t\t\tc[i-1] = 11;\n\t\t\t\t}else if(t.compareTo(\"c\")==0){\n\t\t\t\t\tc[i-1] = 12;\n\t\t\t\t}else if(t.compareTo(\"d\")==0){\n\t\t\t\t\tc[i-1] = 13;\n\t\t\t\t}else if(t.compareTo(\"e\")==0){\n\t\t\t\t\tc[i-1] = 14;\n\t\t\t\t}else if(t.compareTo(\"f\")==0){\n\t\t\t\t\tc[i-1] = 15;\n\t\t\t\t}else{\n\t\t\t\t\tc[i-1] = Integer.valueOf(t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint r = c[0]*16 + c[1];\n\t\t\tint g = c[2]*16 + c[3];\n\t\t\tint b = c[4]*16 + c[5];\n\t\t\t\n\t\t\tint count=0;\n\t\t\tint sum=0;\n\t\t\tdouble[] d = new double[8];\n\t\t\tdouble[] e = new double[8];\n\t\t\tfor(int i=0;i<2;i++){\n\t\t\t\tfor(int j=0;j<2;j++){\n\t\t\t\t\tfor(int k=0;k<2;k++){\n\t\t\t\t\t\tsum = (r-i*255)*(r-i*255)+(g-j*255)*(g-j*255)+(b-k*255)*(b-k*255);\n\t\t\t\t\t\td[count] = Math.sqrt(sum);\n\t\t\t\t\t\te[count] = d[count];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(e);\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\tif(d[i]==e[0]){\n\t\t\t\t\tsum = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(sum==0){\n\t\t\t\tSystem.out.println(\"black\");\n\t\t\t}else if(sum==1){\n\t\t\t\tSystem.out.println(\"blue\");\n\t\t\t}else if(sum==2){\n\t\t\t\tSystem.out.println(\"lime\");\n\t\t\t}else if(sum==3){\n\t\t\t\tSystem.out.println(\"aqua\");\n\t\t\t}else if(sum==4){\n\t\t\t\tSystem.out.println(\"red\");\n\t\t\t}else if(sum==5){\n\t\t\t\tSystem.out.println(\"fuchsia\");\n\t\t\t}else if(sum==6){\n\t\t\t\tSystem.out.println(\"yellow\");\n\t\t\t}else if(sum==7){\n\t\t\t\tSystem.out.println(\"white\");\n\t\t\t}\t\t\n\t\t\t\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\nclass Main {\n\n    public static void main( final String[] args ) {\n\n\tfinal Scanner stdin = new Scanner( System.in );\n\n\tfinal String[] colorStr = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\n\twhile ( true ) {\n\n\t    final String input = stdin.nextLine().trim();\n\t    if ( \"0\".equals( input ) ) {\n\t\tbreak;\t\t    \n\t    }\n\n\t    int[] in = new int[3];\n\t    in[0] = Integer.parseInt( input.substring( 1, 3 ), 16 );\n\t    in[1] = Integer.parseInt( input.substring( 3, 5 ), 16 );\n\t    in[2] = Integer.parseInt( input.substring( 5, 7 ), 16 );\n\t    \n\t    int minIndex = -1;\n\t    int minD = Integer.MAX_VALUE;\n\t    for ( int i = 0; i < 8; i++ ) {\n\t\tfinal int[] color = makeColor( i );\n\t\tfinal int d = dist( color, in );\n\t\tif ( minD > d ){\n\t\t    minD = d;\n\t\t    minIndex = i;\n\t\t}\n\t    }\n\t    System.out.println( colorStr[minIndex] );\n\t}\t\n    }\n\n    static int[] makeColor( int i ) {\n\tint[] ans = new int[3];\n\tint index = 2;\n\twhile ( i > 0 ) {\n\t    ans[index] = ( i % 2 == 1 ? 0xff : 0 );\n\t    i /= 2;\n\t    index--;\n\t}\n\treturn ans;\n    }\n\n    static int dist( int[] a, int[] b ) {\n\tint sum = 0;\n\tfinal int lim = min( a.length, b.length );\n\tfor ( int i = 0; i < lim; i++ ) {\n\t    sum += ( a[i] - b[i] ) * ( a[i] - b[i] );\n\t}\n\treturn sum;\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * What Color?\n */\npublic class Main {\n\n\tstatic final String[] names = {\n\t\t\t\"black\",\n\t\t\t\"blue\",\n\t\t\t\"lime\",\n\t\t\t\"aqua\",\n\t\t\t\"red\",\n\t\t\t\"fuchsia\",\n\t\t\t\"yellow\",\n\t\t\t\"white\",\n\t};\n\n\tstatic final int[][] colors = {\n\t\t\t{0, 0, 0},\n\t\t\t{0, 0, 255},\n\t\t\t{0, 255, 0},\n\t\t\t{0, 255, 255},\n\t\t\t{255, 0, 0},\n\t\t\t{255, 0, 255},\n\t\t\t{255, 255, 0},\n\t\t\t{255, 255, 255},\n\t};\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\tString[] words;\n\n\t\twhile ((line = br.readLine()) != null && !line.isEmpty()) {\n\n\t\t\tif (line.equals(\"0\")) break;\n\n\t\t\tint r, g, b;\n\t\t\tr = parseInt(line.substring(1, 3), 16);\n\t\t\tg = parseInt(line.substring(3, 5), 16);\n\t\t\tb = parseInt(line.substring(5, 7), 16);\n\n\t\t\tint min = 1 << 29, name = -1;\n\t\t\tfor (int i = 0; i < colors.length; i++) {\n\t\t\t\tint color = (int) Math.pow(r - colors[i][0], 2)\n\t\t\t\t\t\t+ (int) Math.pow(g - colors[i][1], 2)\n\t\t\t\t\t\t+ (int) Math.pow(b - colors[i][2], 2);\n\t\t\t\tif (color < min) {\n\t\t\t\t\tmin = color;\n\t\t\t\t\tname = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(names[name]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nstatic double dis(double r, double g, double b) {\n        return Math.sqrt( r*r+ g*g+ b*b);\n    }\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        String [] names ={“000black”,“001blue”,“010lime”,“011aqua”,“100red”,“101fuchsia”,“110yellow”,“111white”};     \n        Scanner sc = new Scanner(System.in);   \n        while(sc.hasNext()){\n            String str = sc.nextLine();\n            if(str.equals(“0”)) break;\n            int r0 = Integer.parseInt(str.substring(1,3), 16);\n            int g0 = Integer.parseInt(str.substring(3,5), 16);\n            int b0 = Integer.parseInt(str.substring(5,7), 16);\n            String ans = “”;\n            double min = 256.0;\n            for(String name: names) {\n                int r = (name.charAt(0)-‘0’) * 255;\n                int g = (name.charAt(1)-‘0’) * 255;\n                int b = (name.charAt(2)-‘0’) * 255;\n                double d = dis(r-r0, g - g0, b - b0);\n                if(d>min){\n                    min=d;\n                    ans=name;\n                }\n            }\n            System.out.println(ans.substring(3));\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.util.regex.*;\n\nimport static java.lang.Math.*;\nimport static java.lang.System.out;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tnew Main().AOJ0176();\n\t}\n\t\n\tvoid AOJ0176(){\t// What Color?\n\t\tint[] R = {0,0,0,0,255,255,255,255};\n\t\tint[] G = {0,0,255,255,0,0,255,255};\n\t\tint[] B = {0,255,0,255,0,255,0,255};\n\t\tHashMap<Integer,String> dic = new HashMap<Integer,String>();\n\t\tdic.put(0, \"black\");\tdic.put(1, \"blue\");\tdic.put(2, \"lime\");\tdic.put(3, \"aqua\");\n\t\tdic.put(4, \"red\");\tdic.put(5, \"fuchsia\");\tdic.put(6, \"yellow\");\tdic.put(7, \"white\");\n\t\twhile(sc.hasNext()){\n\t\t\tString s=sc.next();\n\t\t\tif(s.equals(\"0\"))\tbreak;\n\t\t\tint r=Integer.parseInt(\"\"+s.charAt(1)+s.charAt(2),16), g=Integer.parseInt(\"\"+s.charAt(3)+s.charAt(4),16), b=Integer.parseInt(\"\"+s.charAt(5)+s.charAt(6),16);\n\t\t\tint index=0;\n\t\t\tdouble last=Double.MAX_VALUE;\n\t\t\tfor(int i=0; i<8; i++){\n\t\t\t\tdouble d=sqrt((abs(r-R[i])<<1)+(abs(g-G[i])<<1)+(abs(b-B[i])<<1));\n\t\t\t\tindex = last>d? i : index;\n\t\t\t\tlast = last>d? d : last;\n\t\t\t}\n\t\t\tout.println(dic.get(index));\n\t\t}\n\t}\n\t\n\tvoid AOJ0175(){\t// A King in Hawaii\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n<0)\tbreak;\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile(n!=0){\n\t\t\t\t//out.println(n&3);\n\t\t\t\tsb.append(n&3);\n\t\t\t\tn=n>>2;\n\t\t\t}\n\t\t\tout.println(sb.length()>0? sb.reverse(): 0);\n\t\t}\n\t}\n\t\n\tvoid AOJ0031(){\t// Weight\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tint temp=Integer.lowestOneBit(n);\n\t\t\tout.print(temp);\n\t\t\tn=(n^temp);\n\t\t\twhile(n!=0){\n\t\t\t\ttemp=Integer.lowestOneBit(n);\n\t\t\t\tout.print(\" \"+temp);\n\t\t\t\tn=(n^temp);\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}\n\t\n\tvoid AOJ0051(){\t// Differential II\n\t\tint n=sc.nextInt();\n\t\tfor(int i=0; i<n; i++){\n\t\t\tchar[] c = sc.next().toCharArray();\n\t\t\tint[] a = new int[8];\n\t\t\tfor(int j=0; j<8; j++)\ta[j]=Character.digit(c[j], 10);\n\t\t\tArrays.sort(a);\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tfor(int j=0; j<8; j++)\tsb.append(a[j]);\n\t\t\tint min=Integer.parseInt(sb.toString());\n\t\t\tsb=new StringBuilder();\n\t\t\tfor(int j=7; j>=0; j--)\tsb.append(a[j]);\n\t\t\tint max=Integer.parseInt(sb.toString());\n\t\t\tout.println(max-min);\n\t\t}\n\t}\n\t\n\tvoid AOJ0196(){\t// Baseball Championship\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\tbreak;\n\t\t\tTeam196[] teams = new Team196[n];\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tString s=sc.next();\n\t\t\t\tint win=0, lose=0;\n\t\t\t\tfor(int j=0; j<n-1; j++){\n\t\t\t\t\tint temp=sc.nextInt();\n\t\t\t\t\tif(temp==0)\twin++;\n\t\t\t\t\tif(temp==1)\tlose++;\n\t\t\t\t}\n\t\t\t\tteams[i] = new Team196(s,win,lose,i);\n\t\t\t}\n\t\t\tArrays.sort(teams);\n\t\t\tfor(int i=0; i<n; i++)\tout.println(teams[i].name);\n\t\t}\n\t}\n\tclass Team196 implements Comparable<Team196>{\n\t\tString name;\n\t\tint win,lose,index;\n\t\tTeam196(String name, int win, int lose, int index){\n\t\t\tthis.name=name;\tthis.win=win;\tthis.lose=lose;\tthis.index=index;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Team196 o) {\n\t\t\tif(this.win<o.win)\treturn 1;\n\t\t\tif(this.win>o.win)\treturn -1;\n\t\t\tif(this.lose<o.lose)\treturn -1;\n\t\t\tif(this.lose>o.lose)\treturn 1;\n\t\t\tif(this.index<o.index)\treturn -1;\n\t\t\tif(this.index>o.index)\treturn 1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tvoid AOJ0065(){\t// Trading\n\t\tfinal int MAX=1000000;\n\t\tint[] current=new int[MAX];\n\t\tint[] last=new int[MAX];\n\t\tboolean flag=false;\n\t\twhile(sc.hasNext()){\n\t\t\tString s=sc.nextLine();\n\t\t\tif(s.equals(\"\")){\n\t\t\t\tflag=true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tScanner sc2 = new Scanner(s).useDelimiter(\",\");\n\t\t\tif(flag)\tlast[sc2.nextInt()]++;\n\t\t\telse\tcurrent[sc2.nextInt()]++;\n\t\t}\n\t\tfor(int i=0; i<MAX; i++)\t\tif(current[i]>0 && last[i]>0)\tout.println(i+\" \"+(current[i]+last[i]));\n\t}\n\t\n\tvoid AOJ0161(){\t// Sport Meet\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\tbreak;\n\t\t\tTime161[] times = new Time161[n];\n\t\t\tfor(int i=0; i<n; i++)\ttimes[i] = new Time161(sc.nextInt(), (sc.nextInt()*60+sc.nextInt() + sc.nextInt()*60+sc.nextInt() + sc.nextInt()*60+sc.nextInt() + sc.nextInt()*60+sc.nextInt()));\n\t\t\tArrays.sort(times);\n\t\t\tout.println(times[0].num);\tout.println(times[1].num);\tout.println(times[times.length-2].num);\n\t\t}\n\t}\n\tclass Time161 implements Comparable<Time161>{\n\t\tint num, time;\n\t\tTime161(int num, int time){\n\t\t\tthis.num=num;\tthis.time=time;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Time161 o) {\n\t\t\tif(this.time<o.time)\treturn -1;\n\t\t\tif(this.time>o.time)\treturn 1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tvoid AOJ0138(){\t// Track and Field Competition\n\t\tTime138[] times1st = new Time138[8];\n\t\tTime138[] times2nd = new Time138[8];\n\t\tTime138[] times3rd = new Time138[8];\n\t\tfor(int i=0; i<8; i++)\ttimes1st[i] = new Time138(sc.nextInt(), sc.nextDouble());\n\t\tfor(int i=0; i<8; i++)\ttimes2nd[i] = new Time138(sc.nextInt(), sc.nextDouble());\n\t\tfor(int i=0; i<8; i++)\ttimes3rd[i] = new Time138(sc.nextInt(), sc.nextDouble());\n\t\tArrays.sort(times1st);\tArrays.sort(times2nd);\tArrays.sort(times3rd);\n\t\tfor(int i=0; i<2; i++)\tout.println(times1st[i].num+\" \"+times1st[i].time);\n\t\tfor(int i=0; i<2; i++)\tout.println(times2nd[i].num+\" \"+times2nd[i].time);\n\t\tfor(int i=0; i<2; i++)\tout.println(times3rd[i].num+\" \"+times3rd[i].time);\n\t\tTime138[] times = new Time138[6];\n\t\ttimes[0]=times1st[2]; times[1]=times1st[3];\ttimes[2]=times2nd[2]; times[3]=times2nd[3];\ttimes[4]=times3rd[2]; times[5]=times3rd[3];\n\t\tArrays.sort(times);\n\t\tfor(int i=0; i<2; i++)\tout.println(times[i].num+\" \"+times[i].time);\n\t}\n\tclass Time138 implements Comparable<Time138>{\n\t\tint num;\tdouble time;\n\t\tTime138(int num, double time){\n\t\t\tthis.num=num;\tthis.time=time;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Time138 o) {\n\t\t\tif(this.time<o.time)\treturn -1;\n\t\t\tif(this.time>o.time)\treturn 1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tvoid AOJ0005(){\t// GCD and LCM\n\t\twhile(sc.hasNext()){\n\t\t\tint a=sc.nextInt(), b=sc.nextInt();\n\t\t\tint temp=gcd(max(a,b), min(a,b));\n\t\t\tout.println(temp+\" \"+max(a,b)/temp*min(a,b));\n\t\t}\n\t}\n\tint gcd(int x, int y){\n\t\tif(y==0)\treturn x;\n\t\telse\treturn gcd(y, x%y);\n\t}\n\t\n\tint c197=0;\n\tvoid AOJ0197(){\t// Greatest Common Divisor: Euclidean Algorithm\n\t\twhile(sc.hasNext()){\n\t\t\tint x=sc.nextInt(), y=sc.nextInt();\n\t\t\tif(x<2)\tbreak;\n\t\t\tc197=0;\n\t\t\tout.println(gcd197(max(x,y), min(x,y))+\" \"+c197);\n\t\t}\n\t}\n\tint gcd197(int x, int y){\n\t\tif(y==0)\treturn x;\n\t\tc197++;\n\t\treturn gcd197(y, x%y);\n\t}\n\t\n\tvoid AOJ0001(){\t// List of Top 3 Hills\n\t\tint[] m = new int[10];\n\t\tfor(int i=0; i<10; i++)\tm[i]=sc.nextInt();\n\t\tArrays.sort(m);\n\t\tfor(int i=9; i>=7; i--)\tout.println(m[i]);\n\t}\n\t\n\tvoid AOJ10029(){\t// Sort II\n\t\tint n=sc.nextInt();\n\t\tint[] ans = new int[n];\n\t\tfor(int i=0; i<n; i++)\tans[i]=sc.nextInt();\n\t\tArrays.sort(ans);\n\t\tout.print(ans[0]);\n\t\tfor(int i=1; i<n; i++)\tout.print(\" \"+ans[i]);\n\t\tout.println();\n\t}\n\t\n\tint[][] p26 = new int[10][10];\n\tint c26=100;\n\tvoid AOJ0026(){\t// Dropping Ink\n\t\tint ans=0;\n\t\twhile(sc.hasNext()){\n\t\t\tScanner sc2 = new Scanner(sc.nextLine()).useDelimiter(\",\");\n\t\t\tint x=sc2.nextInt(), y=sc2.nextInt(), s=sc2.nextInt();\n\t\t\t// out.println(\"x\"+x+\" y\"+y+\" s\"+s);\n\t\t\tans=max(solve26(x,y),ans);\n\t\t\tans=max(solve26(x-1,y),ans);\tans=max(solve26(x+1,y),ans);\n\t\t\tans=max(solve26(x,y-1),ans);\tans=max(solve26(x,y+1),ans);\n\t\t\tif(s>=2){\n\t\t\t\tans=max(solve26(x-1,y-1),ans);\tans=max(solve26(x-1,y+1),ans);\n\t\t\t\tans=max(solve26(x+1,y-1),ans);\tans=max(solve26(x+1,y+1),ans);\n\t\t\t}\n\t\t\tif(s>=3){\n\t\t\t\tans=max(solve26(x-2,y),ans);\tans=max(solve26(x+2,y),ans);\n\t\t\t\tans=max(solve26(x,y-2),ans);\tans=max(solve26(x,y+2),ans);\n\t\t\t}\n\t\t}\n\t\tout.println(c26);\n\t\tout.println(ans);\n\t}\n\tint solve26(int x, int y){\n\t\tint r=-1;\n\t\tif(0<=x && x<=9 && 0<=y && y<=9){\n\t\t\tc26 -= p26[x][y]==0? 1: 0;\n\t\t\tp26[x][y]++;\n\t\t\tr=p26[x][y];\n\t\t}\n\t\treturn r;\t// RA\n\t}\n\t\n\tvoid AOJ0008(){\t//Sum of 4 Integers\n\t\twhile(sc.hasNext()){\n\t\t\tint ans=0, n=sc.nextInt();\n\t\t\tfor(int a=0; a<10; a++){\n\t\t\t\tfor(int b=0; b<10; b++){\n\t\t\t\t\tfor(int c=0; c<10; c++){\n\t\t\t\t\t\tfor(int d=0; d<10; d++)\t\tif((a+b+c+d)==n)\tans++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\t\n\tvoid AOJ0055(){\t// Sequence\n\t\twhile(sc.hasNext()){\n\t\t\tdouble last=sc.nextDouble(), ans=last;\n\t\t\tfor(int i=2; i<=10; i++){\n\t\t\t\tans+= i%2==0? last*2: last/3;\n\t\t\t\tlast = i%2==0? last*2: last/3;\n\t\t\t\t// out.println(last);\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\t\n\tvoid AOJ0084(){\t// Search Engine\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(sc.hasNext()){\n\t\t\tString s=sc.next().replaceAll(\",\", \"\").replaceAll(\"\\\\.\", \"\").replaceAll(\" \", \"\");\n\t\t\t// out.println(s);\n\t\t\tif(s.length()<=2 || s.length()>=7)\tcontinue;\n\t\t\tsb.append(s+\" \");\n\t\t}\n\t\tout.println(sb.deleteCharAt(sb.length()-1));\n\t}\n\t\n\tvoid AOJ0077(){\t// Run Length\n\t\twhile(sc.hasNext()){\n\t\t\tchar[] c=sc.nextLine().toCharArray();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tfor(int i=0; i<c.length; i++){\n\t\t\t\tif(c[i]=='@'){\n\t\t\t\t\tfor(int j=0; j<Character.digit(c[i+1], 10); j++)\tsb.append(c[i+2]);\n\t\t\t\t\ti+=2;\n\t\t\t\t}else\tsb.append(c[i]);\n\t\t\t}\n\t\t\tout.println(sb.toString());\n\t\t}\n\t}\n\t\n\tvoid AOJ0064(){\t// Secret Number\n\t\tint ans=0;\n\t\twhile(sc.hasNext()){\n\t\t\tMatcher m = Pattern.compile(\"\\\\d+\").matcher(sc.nextLine());\n\t\t\twhile(m.find())\tans+=Integer.parseInt(m.group());\n\t\t}\n\t\tout.println(ans);\n\t}\n\t\n\tvoid AOJ0050(){\t// Apple and Peach\n\t\twhile(sc.hasNext()) out.println(sc.nextLine().replaceAll(\"apple\", \"PEACH\").replaceAll(\"peach\", \"apple\").replaceAll(\"PEACH\", \"peach\"));\n\t}\n\t\n\tvoid AOJ0039(){\t// Roman Figure ローマ数字 -> 10進数\n\t\tHashMap<Character,Integer> dic = new HashMap<Character,Integer>();\n\t\tdic.put('I', 1);\tdic.put('V', 5);\tdic.put('X', 10);\tdic.put('L', 50);\n\t\tdic.put('C', 100);\tdic.put('D', 500);\tdic.put('M', 1000);\n\t\twhile(sc.hasNext()){\n\t\t\tchar[] c = sc.next().toCharArray();\n\t\t\tint ans=0,last=dic.get(c[0]);\n\t\t\tfor(int i=0; i<c.length; i++){\n\t\t\t\tif(last>=dic.get(c[i])){\n\t\t\t\t\tans+=dic.get(c[i]);\n\t\t\t\t\tlast=dic.get(c[i]);\n\t\t\t\t}else{\n\t\t\t\t\tans+=dic.get(c[i])-last-last;\n\t\t\t\t\tlast=dic.get(c[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\t\n\tvoid AOJ0020(){\t// Capitalize 大文字変換\n\t\twhile(sc.hasNext())\tout.println(sc.nextLine().toUpperCase());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    static double distance(double r,double g,double b){\n        return Math.sqrt(r*r+g*g+b*b);\n    }\n   \n   public static void main(String[] args) throws Exception {\n       Scanner sc = new Scanner(System.in);\n       String [] colors = {\"000black\",\"001blue\",\"010lime\",\"011aqua\",\"100red\",\"101fuchsia\",\"110yellow\",\"111white\"};\n       while(sc.hasNextLine()){\n           String str = sc.nextLine();\n           if(str.equals(\"0\")) break;\n           int r0 = Integer.parseInt(str.substring(1,3),16);\n           int b0 = Integer.parseInt(str.substring(3,5),16);\n           int g0 = Integer.parseInt(str.substring(5,7),16);\n           \n           String ans = \"\";\n           double min = 450.0;\n           \n           for(String c:colors){\n               int r = (c.charAt(0)-'0')*255;\n               int b = (c.charAt(1)-'0')*255;\n               int g = (c.charAt(2)-'0')*255;\n               \n               double d = distance(r-r0,g-g0,b-b0);\n               if(d<min){\n                   min=d;\n                   ans=c.substring(3);\n               }\n           }\n           System.out.println(ans);\n       }\n\n   }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n   public static void main(String[] args) throws Exception {\n       String [] unit = {\"\",\"Man\",\"Oku\",\"Cho\",\"Kei\",\"Gai\",\"Jo\",\"Jou\",\"Ko\",\"Kan\",\"Sei\",\"Sai\",\"Gok\",\"Ggs\",\"Asg\",\"Nyt\",\"Fks\",\"Mts\"};\n       Scanner sc = new Scanner(System.in);\n       while(sc.hasNextInt()){\n           int m = sc.nextInt();\n           int n = sc.nextInt();\n           if(m==0 && n==0) break;\n           BigInteger b = valueOf(Math.pow(m,n));\n           \n           String ans = \"\";\n           for(int i=0;i<18;i++){\n               String digit = remainder(b,10000);\n               ans = digit.concat(unit[i]+ans);\n               b = divide(b,10000);\n           }\n           System.out.println(ans);\n       }\n   }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[][] list = {\n\t\t{0,0,0},\n\t\t{0,0,255},\n\t\t{0,255,0},\n\t\t{0,255,255},\n\t\t{255,0,0},\n\t\t{255,0,255},\n\t\t{255,255,0},\n\t\t{255,255,255},\n\t};\n\t\n\tstatic String[] name = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\t\n\tstatic int trans(char jyu, char ichi){\n\t\tint sum = 0;\n\t\tif('a'<=jyu&&jyu<='f'){\n\t\t\tsum += jyu-'a'+10;\n\t\t}\n\t\telse{\n\t\t\tsum += jyu-'0';\n\t\t}\n\t\tsum*=16;\n\t\tif('a'<=ichi&&ichi<='f'){\n\t\t\tsum += ichi-'a'+10;\n\t\t}\n\t\telse{\n\t\t\tsum += ichi-'0';\n\t\t}\n\t\treturn sum;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tchar[] in = stdIn.next().toCharArray();\n\t\t\tif(in[0]=='0'){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint r = trans(in[1],in[2]);\n\t\t\tint g = trans(in[3],in[4]);\n\t\t\tint b = trans(in[5],in[6]);\n\t\t\t\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tint min_idx = -1;\n\t\t\tfor(int k=0;k<8;k++){\n\t\t\t\tdouble tmp = Math.abs(Math.sqrt(Math.pow(r-list[k][0],2)+Math.pow(g-list[k][1],2)+Math.pow(b-list[k][2],2)));\n\t\t\t\tif(tmp<min){\n\t\t\t\t\tmin = tmp;\n\t\t\t\t\tmin_idx = k;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[min_idx]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    static double distance(double r,double g,double b){\n        return Math.sqrt(r*r+g*g+b*b);\n    }\n   \n   public static void main(String[] args) throws Exception {\n       Scanner sc = new Scanner(System.in);\n       String [] colors = {\"000black\",\"001blue\",\"010lime\",\"011aqua\",\"100red\",\"101fuchsia\",\"110yellow\",\"111white\"};\n       while(sc.hasNextLine()){\n           String str = sc.nextLine();\n           if(str.equals(\"0\")) break;\n           int r0 = Integer.parseInt(str.substring(1,3),16);\n           int b0 = Integer.parseInt(str.substring(3,5),16);\n           int g0 = Integer.parseInt(str.substring(5,7),16);\n           \n           String ans = \"\";\n           double min = 450.0;\n           \n           for(String c:color){\n               int r = (c.charAt(0)-'0')*255;\n               int b = (c.charAt(1)-'0')*255;\n               int g = (c.charAt(2)-'0')*255;\n               \n               double d = distance(r-r0,g-g0,b-b0);\n               if(d<min){\n                   min=d;\n                   ans=c.substring(3);\n               }\n           }\n           System.out.println(ans);\n       }\n\n   }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Color{\n\tint r,g,b;\n\tString name;\n\n\tColor(int r,int g,int b,String name){\n\t\tthis.r=r; this.g=g; this.b=b;\n\t\tthis.name = name;\n\t}\n\n\tdouble dist(Color c){\n\t\treturn Math.sqrt( Math.pow(this.r - c.r, 2) +\n\t\t\t\t\t\t\t\t\t\t\tMath.pow(this.g - c.g, 2) +\n\t\t\t\t\t\t\t\t\t\t\tMath.pow(this.b - c.b, 2));\n\t}\n}\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tColor color[] = {new Color(0,0,0,\"black\"),\n\t\t\t\t\t\t\t\t\t\t\tnew Color(0,0,255,\"blue\"),\n\t\t\t\t\t\t\t\t\t\t\tnew Color(0,255,0,\"lime\"),\n\t\t\t\t\t\t\t\t\t\t\tnew Color(0,255,255,\"aqua\"),\n\t\t\t\t\t\t\t\t\t\t\tnew Color(255,0,0,\"red\"),\n\t\t\t\t\t\t\t\t\t\t\tnew Color(255,0,255,\"fuchsia\"),\n\t\t\t\t\t\t\t\t\t\t\tnew Color(255,255,0,\"yellow\"),\n\t\t\t\t\t\t\t\t\t\t\tnew Color(255,255,255,\"white\")};\n\n\t\twhile(true){\n\t\t\tint minIndex = 0;\n\t\t\tdouble minDist = Double.MAX_VALUE;\n\t\t\tString s = scan.next();\n\n\t\t\tif(s.equals(\"0\")) break;\n\n\t\t\tColor input = new Color(Integer.parseInt(s.substring(1,3),16),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInteger.parseInt(s.substring(3,5),16),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInteger.parseInt(s.substring(5,7),16),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\");\n\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\tdouble dist = color[i].dist(input);\n\t\t\t\tif(minDist > dist){\n\t\t\t\t\tminIndex = i;\n\t\t\t\t\tminDist = dist;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(color[minIndex].name);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport static java.lang.Integer.parseInt;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] c = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n        for (;;) {\n            char[] n = sc.next().toCharArray();\n            if (n[0] == '0') {\n                break;\n            }\n            System.out.println(c[parseInt(\"\" + n[1] + n[2], 16) / 128 * 4 + parseInt(\"\" + n[3] + n[4], 16) / 128 * 2 + parseInt(\"\" + n[5] + n[6], 16) / 128]);\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n   public static void main(String[] args) throws Exception {\n      int [][] color={ {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255} };\n      String [] name ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n      \n      Scanner sc = new Scanner(System.in);\n   \n      while(sc.hasNext()){\n          String str = sc.nextLine();\n          if(str.equals(\"0\")) break;\n          String ans = \"\";\n          double max = 0;\n          for(int i=0;i<8;i++){\n              double d = Math.sqrt( (Integer.parseInt(str.substring(1,3),16)-color[i][0])*(Integer.parseInt(str.substring(1,3),16)-color[i][0]) + (Integer.parseInt(str.substring(3,5),16)-color[i][1])*(Integer.parseInt(str.substring(3,5),16)-color[i][1]) + (Integer.parseInt(str.substring(5,7),16)-color[i][2])* (Integer.parseInt(str.substring(5,7),16)-color[i][2]));\n              if(d>max){\n                  max=d;\n                  ans=name[7-i];\n              }\n          }\n          System.out.println(ans);\n      }\n      \n   }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//What Color?\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] c = {\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n\t\tint[][] a = {\n\t\t\t\t{0,0,0},\n\t\t\t\t{0,0,255},\n\t\t\t\t{0,255,0},\n\t\t\t\t{0,255,255},\n\t\t\t\t{255,0,0},\n\t\t\t\t{255,0,255},\n\t\t\t\t{255,255,0},\n\t\t\t\t{255,255,255}\n\t\t};\n\t\twhile(true){\n\t\t\tString s = sc.next();\n\t\t\tif(s.equals(\"0\"))break;\n\t\t\tint r = Integer.parseInt(s.substring(1,3),16);\n\t\t\tint g = Integer.parseInt(s.substring(3,5),16);\n\t\t\tint b = Integer.parseInt(s.substring(5,7),16);\n\t\t\tdouble min = Integer.MAX_VALUE;\n\t\t\tint k = 0;\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\tdouble d = Math.sqrt(Math.pow(r-a[i][0], 2)+Math.pow(g-a[i][1], 2)+Math.pow(b-a[i][2], 2));\n\t\t\t\tif(d < min){\n\t\t\t\t\tk=i;\n\t\t\t\t\tmin = d;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(c[k]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    static double dis(double r, double g, double b) {\n        return Math.sqrt( r*r+ g*g+ b*b);\n    }\n    \n    public static void main(String[] args) throws Exception {\n        String [] names ={“000black”,“001blue”,“010lime”,“011aqua”,“100red”,“101fuchsia”,“110yellow”,“111white”};    \n        Scanner sc = new Scanner(System.in);   \n        while(sc.hasNext()){\n            String str = sc.nextLine();\n            if(str.equals(“0”)) break;\n            int r0 = Integer.parseInt(str.substring(1,3), 16);\n            int g0 = Integer.parseInt(str.substring(3,5), 16);\n            int b0 = Integer.parseInt(str.substring(5,7), 16);\n            String ans = “”;\n            double min = 256.0;\n            for(String name: names) {\n                int r = (name.charAt(0)-‘0’) * 255;\n                int g = (name.charAt(1)-‘0’) * 255;\n                int b = (name.charAt(2)-‘0’) * 255;\n                double d = dis(r-r0, g - g0, b - b0);\n                if(d>min){\n                    min=d;\n                    ans=name;\n                }\n            }\n            System.out.println(ans.substring(3));\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n       int [][] color={ {0,0,0},{0,0255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255} };\n       String [] name ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n       \n       Scanner sc = new Scanner(System.in);\n       \n       /* int [][] c = new int[8][3];\n       for(int i=0;i<8;i++){\n           for(int j=0;j<3;j++){\n               c[i][j]=Integer.parseInt(color[i][j],16);\n              // System.out.print(c[i][j]);\n           }\n           // System.out.println();\n       }\n       */\n       \n       while(sc.hasNext()){\n           String str = sc.nextLine();\n           if(str.equals(\"0\")) break;\n           String ans = \"\";\n           double max = 0;\n           for(int i=0;i<8;i++){\n               double d = Math.sqrt( (Integer.parseInt(str.substring(1,2))-color[i][0])*(Integer.parseInt(str.substring(1,2))-color[i][0]) + (Integer.parseInt(str.substring(3,4))-color[i][1])*(Integer.parseInt(str.substring(3,4))-color[i][1]) + (Integer.parseInt(str.substring(5,6))-color[i][2]) );\n               if(d>max){\n                   max=d;\n                   ans=name[i];\n               }\n           }\n           System.out.println(ans);\n       }\n       \n    }\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint[][] map = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t\t{ 255, 255, 0 }, { 255, 255, 255 } };\n\t\tString name[] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\n\t\t\t\t\"yellow\", \"white\" };\n\n\t\twhile (true) {\n\t\t\tString line = scanner.next();\n\t\t\tif (line.equals(\"0\"))\n\t\t\t\tbreak;\n\n\t\t\tint[] num = new int[3];\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(line.substring(i * 2 + 1, i * 2 + 3),\n\t\t\t\t\t\t16);\n\t\t\t}\n\t\t\tdouble min = 1 << 16;\n\t\t\tdouble sum = 0;\n\t\t\tint ans = -1;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tsum += Math.pow(num[j] - map[i][j], 2);\n\t\t\t\t}\n\t\t\t\tsum = Math.sqrt(sum);\n\t\t\t\tif (min > sum) {\n\t\t\t\t\tmin = sum;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[ans]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tclass color {\n\t\tint r, g, b;\n\t\tString s;\n\n\t\tcolor(int value, String s) {\n\t\t\tr = value >> 16;\n\t\t\tg = (value >> 8) & 255;\n\t\t\tb = value & 255;\n\t\t\tthis.s = s;\n\t\t}\n\n\t\tint diff(color c) {\n\t\t\treturn ((c.r - r) * (c.r - r) + (c.b - b) * (c.b - b) + (c.g - g)\n\t\t\t\t\t* (c.g - g));\n\t\t}\n\t}\n\n\tvoid run() {\n\t\tcolor db[] = { new color(0, \"black\"), new color(0, \"blue\"),\n\t\t\t\tnew color(0, \"lime\"), new color(0, \"aqua\"),\n\t\t\t\tnew color(0, \"red\"), new color(0, \"fuchsia\"),\n\t\t\t\tnew color(0, \"yellow\"), new color(0, \"white\"), };\n\t\tdb[1].b = 0xff;\n\t\tdb[2].g = 0xff;\n\t\tdb[3].g = 0xff;\n\t\tdb[3].b = 0xff;\n\t\tdb[4].r = 0xff;\n\t\tdb[5].b = 0xff;\n\t\tdb[5].r = 0xff;\n\t\tdb[6].g = 0xff;\n\t\tdb[6].r = 0xff;\n\t\tdb[7].r = 0xff;\n\t\tdb[7].b = 0xff;\n\t\tdb[7].g = 0xff;\n\n\t\tfor (;;) {\n\t\t\tString buffer = sc.next();\n\t\t\tif (buffer.equals(\"0\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tScanner in = new Scanner(buffer.substring(1));\n\t\t\tint value = in.nextInt(16);\n\n\t\t\tcolor ti = new color(value, \"\");\n\t\t\tint max = Integer.MAX_VALUE >> 1;\n\t\t\tString ret = \"\";\n\t\t\tfor (color t : db) {\n\t\t\t\tif (max > t.diff(ti)) {\n\t\t\t\t\tmax = t.diff(ti);\n\t\t\t\t\tret = t.s;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ret);\n\t\t}\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.BigInteger;\n\npublic class Main {\n   public static void main(String[] args) throws Exception {\n       String [] unit = {\"\",\"Man\",\"Oku\",\"Cho\",\"Kei\",\"Gai\",\"Jo\",\"Jou\",\"Ko\",\"Kan\",\"Sei\",\"Sai\",\"Gok\",\"Ggs\",\"Asg\",\"Nyt\",\"Fks\",\"Mts\"};\n       Scanner sc = new Scanner(System.in);\n       while(sc.hasNextInt()){\n           int m = sc.nextInt();\n           int n = sc.nextInt();\n           if(m==0 && n==0) break;\n           BigInteger b = valueOf(Math.pow(m,n));\n           \n           String ans = \"\";\n           for(int i=0;i<18;i++){\n               String digit = remainder(b,10000);\n               ans = digit.concat(unit[i]+ans);\n               b = divide(b,10000);\n           }\n           System.out.println(ans);\n       }\n   }\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint[][] map = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t\t{ 255, 255, 0 }, { 255, 255, 255 } };\n\t\tString name[] = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\n\t\t\t\t\"yellow\", \"white\" };\n\n\t\twhile (true) {\n\t\t\tString line = scanner.next();\n\t\t\tif (line.equals(\"0\"))\n\t\t\t\tbreak;\n\n\t\t\tint[] num = new int[3];\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(line.substring(i * 2 + 1, i * 2 + 3),\n\t\t\t\t\t\t16);\n\t\t\t}\n\t\t\tdouble min = 1<<12;\n\t\t\tint ans = 0;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tdouble sum = 0;\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tsum += Math.pow(num[j] - map[i][j], 2);\n\t\t\t\t}\n\t\t\t\tsum = Math.sqrt(sum);\n\t\t\t\tif (min > sum) {\n\t\t\t\t\tmin = sum;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[ans]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tfor(;;){\n\t\t\tString s=sc.next();\n\t\t\tif(s.equals(\"0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint r=Integer.parseInt(s.substring(1, 3), 16);\n\t\t\tint g=Integer.parseInt(s.substring(3, 5), 16);\n\t\t\tint b=Integer.parseInt(s.substring(5, 7), 16);\n\t\t\tint k=-1;\n\t\t\tdouble min=INF;\n\t\t\tfor(int i=0; i<8; i++){\n\t\t\t\tint dr=r-(i/4)*0xff;\n\t\t\t\tint dg=g-((i/2)%2)*0xff;\n\t\t\t\tint db=b-(i%2)*0xff;\n\t\t\t\tdouble d=Math.sqrt(dr*dr+dg*dg+db*db);\n\t\t\t\tif(d+EPS<min){\n\t\t\t\t\tk=i;\n\t\t\t\t\tmin=d;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintln(new String[]{\"black\", \"blue\", \"lime\", \"aqua\", \"red\",\n\t\t\t\t\t\"fuchsia\", \"yellow\", \"white\",}[k]);\n\t\t}\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n   public static void main(String[] args) throws Exception {\n      int [][] color={ {0,0,0},{0,0,255},{0,255,0},{0,255,255},{255,0,0},{255,0,255},{255,255,0},{255,255,255} };\n      String [] name ={\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"};\n      \n      Scanner sc = new Scanner(System.in);\n   \n      while(sc.hasNext()){\n          String str = sc.nextLine();\n          if(str.equals(\"0\")) break;\n          String ans = \"\";\n          double max = 0;\n          for(int i=0;i<8;i++){\n              double d = Math.sqrt( (Integer.parseInt(str.substring(1,3),16)-color[i][0])*(Integer.parseInt(str.substring(1,3),16)-color[i][0]) + (Integer.parseInt(str.substring(3,5),16)-color[i][1])*(Integer.parseInt(str.substring(3,5),16)-color[i][1]) + (Integer.parseInt(str.substring(5,7),16)-color[i][2])* (Integer.parseInt(str.substring(5,7),16)-color[i][2]));\n              if(d>max){\n                  max=d;\n                  ans=name[i];\n              }\n          }\n          System.out.println(ans);\n      }\n      \n   }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n   public static void main(String[] args) throws Exception {\n       String [] unit = {\"\",\"Man\",\"Oku\",\"Cho\",\"Kei\",\"Gai\",\"Jo\",\"Jou\",\"Ko\",\"Kan\",\"Sei\",\"Sai\",\"Gok\",\"Ggs\",\"Asg\",\"Nyt\",\"Fks\",\"Mts\"};\n       Scanner sc = new Scanner(System.in);\n       while(sc.hasNextInt()){\n           int m = sc.nextInt();\n           int n = sc.nextInt();\n           if(m==0 && n==0) break;\n           BigInteger b = valueOf(Math.pow(m,n));\n           \n           String ans = \"\";\n           for(int i=0;i<18;i++){\n               String digit = remainder(b,10000);\n               ans = digit.concat(unit[i]+ans);\n               b = divide(b,10000);\n           }\n           System.out.println(ans);\n       }\n   }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Scanner;\nimport java.util.concurrent.LinkedBlockingDeque;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint colors[][] = {\n\t\t\t\t{0,   0,   0},\n\t\t\t\t{0,   0,   255},\n\t\t\t\t{0,   255,   0},\n\t\t\t\t{0,   255,   255},\n\t\t\t\t{255,   0,   0},\n\t\t\t\t{255,   0,   255},\n\t\t\t\t{0,   255,   255},\n\t\t\t\t{255,   255,   255},\n\t\t};\n\t\tString[] names = \n\t\t\t{\n\t\t\t\t\"black\" , \"blue\" , \"lime\" , \"aqua\" , \"red\" , \"fuchsia\" , \"yellow\" , \"white\"\n\t\t\t};\n\t\t\n\t\twhile (true) {\n\t\t\tString str = sc.next();\n\n\t\t\tif(\"0\".equals(str)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint r = Integer.parseInt(str.substring(1, 3), 16);\n\t\t\tint g = Integer.parseInt(str.substring(3, 5), 16);\n\t\t\tint b = Integer.parseInt(str.substring(5, 7), 16);\n\t\t\t\n\t\t\tdouble min = Integer.MAX_VALUE;\n\t\t\tint min_num = -1;\n\t\t\tfor(int i = 0; i < 8; i++){\n\t\t\t\tdouble d = Math.sqrt((colors[i][0] - r)*(colors[i][0] - r) + (colors[i][1] - g)*(colors[i][1] - g) + (colors[i][2] - b)*(colors[i][2] - b));\n\t\t\t\tif(min > d){\n\t\t\t\t\tmin = d;\n\t\t\t\t\tmin_num = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(names[min_num]);\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint[][] map = { { 0, 0, 0 }, { 0, 0, 255 }, { 0, 255, 0 },\n\t\t\t\t{ 0, 255, 255 }, { 255, 0, 0 }, { 255, 0, 255 },\n\t\t\t\t{ 255, 255, 0 }, { 255, 255, 255 } };\n\t\tString[] name = { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\",\n\t\t\t\t\"yellow\", \"white\" };\n\n\t\twhile (true) {\n\t\t\tString line = scanner.next();\n\t\t\tif (line.equals(\"0\"))\n\t\t\t\tbreak;\n\n\t\t\tint[] num = new int[3];\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(line.substring(i * 2 + 1, i * 2 + 3),\n\t\t\t\t\t\t16);\n\t\t\t}\n\t\t\tdouble min = 1 << 10;\n\t\t\tdouble sum = 0;\n\t\t\tint ans = -1;\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tsum += Math.pow(num[j] - map[i][j], 2);\n\t\t\t\t}\n\t\t\t\tsum = Math.sqrt(sum);\n\t\t\t\tif (min > sum) {\n\t\t\t\t\tmin = sum;\n\t\t\t\t\tans = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(name[ans]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace _0176\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            while (true)\n            {\n                string s = Console.ReadLine();\n                if (s == \"0\") break;\n                int a = Convert.ToInt32(s.Substring(1,2),16);\n                int b = Convert.ToInt32(s.Substring(3,2),16);\n                int c = Convert.ToInt32(s.Substring(5,2),16);\n                int[] x = new int[] { 0,255 };\n                string[] color = new string[] { \"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\" };\n                double min = double.MaxValue; string ret = \"\";\n                for (int i = 0; i < 2; i++)\n                {\n                    for (int j = 0; j < 2; j++)\n                    {\n                        for (int k = 0; k < 2; k++)\n                        {\n                            double d = Math.Pow(x[i] - a,2);\n                            d += Math.Pow(x[j] - b,2);\n                            d += Math.Pow(x[k] - c,2);\n                            Math.Sqrt(d);\n                            if (d < min)\n                            {\n                                min = d; ret = color[i * 4 + j * 2 + k];\n                            }\n                        }\n                    }\n                }\n                Console.WriteLine(ret);\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        struct Color\n        {\n            internal string name;\n            internal int R, G, B;\n\n            public Color(string name, int R, int G, int B)\n            {\n                this.name = name;\n                this.R = R;\n                this.G = G;\n                this.B = B;\n            }\n        }\n\n        static void Main(string[] args)\n        {\n            Color[] colors = new Color[]\n            {\n                new Color(\"black\",0,0,0),\n                new Color(\"blue\",0,0,255),\n                new Color(\"lime\",0,255,0),\n                new Color(\"aqua\",0,255,255),\n                new Color(\"red\",255,0,0),\n                new Color(\"fuchsia\",255,0,255),\n                new Color(\"yellow\",255,255,0),\n                new Color(\"white\",255,255,255)\n            };\n\n            StringBuilder sb = new StringBuilder();\n\n            while (true)\n            {\n                string input = Console.ReadLine();\n\n                if (input == \"0\") break;\n\n                int r = Convert.ToInt32(input.Substring(1, 2), 16);\n                int g = Convert.ToInt32(input.Substring(3, 2), 16);\n                int b = Convert.ToInt32(input.Substring(5, 2), 16);\n\n                int index = 0;\n                double min = double.MaxValue;\n\n                for (int i = 0; i < colors.Length; i++)\n                {\n                    int R = colors[i].R;\n                    int G = colors[i].G;\n                    int B = colors[i].B;\n\n                    double d = Math.Sqrt((R - r) * (R - r) + (G - g) * (G - g) + (B - b) * (B - b));\n\n                    if (d < min)\n                    {\n                        index = i;\n                        min = d;\n                    }\n                }\n                sb.AppendLine(colors[index].name);\n            }\n            Console.Write(sb);\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace _0176\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            while (true)\n            {\n                string s = Console.ReadLine();\n                if (s == \"0\") break;\n                int color = 0;\n                int n = 1;\n                for (int i = 0; i < 3; i++)\n                {\n                    if (s[i * 2 + 1] >= '8') color += n;\n                    n *= 2;\n                }\n                switch (color)\n                {\n                    case (0):\n                        {\n                            Console.WriteLine(\"black\");\n                            break;\n                        }\n                    case (1):\n                        {\n                            Console.WriteLine(\"blue\");\n                            break;\n                        }\n                    case (2):\n                        {\n                            Console.WriteLine(\"lime\");\n                            break;\n                        }\n                    case (3):\n                        {\n                            Console.WriteLine(\"aqua\");\n                            break;\n                        }\n                    case (4):\n                        {\n                            Console.WriteLine(\"red\");\n                            break;\n                        }\n                    case (5):\n                        {\n                            Console.WriteLine(\"fuchsia\");\n                            break;\n                        }\n                    case (6):\n                        {\n                            Console.WriteLine(\"yellow\");\n                            break;\n                        }\n                    case (7):\n                        {\n                            Console.WriteLine(\"white\");\n                            break;\n                        }\n                }\n            }\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\n\nnamespace Test1 {\n\n\n\n\n\n    class ClassMain {\n\n\n\n        public static string tikaiiro(int r, int g, int b) {\n            int minD = 1000000007;\n            int dk = 0;\n            int minColorIndex = -1;\n            dk = (r - 0) * (r - 0) + (g - 0) * (g - 0) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk;  minColorIndex = 0; }\n            dk = (r - 0) * (r - 0) + (g - 0) * (g - 0) + (b - 255) * (b - 255);\n            if (dk < minD) { minD = dk; minColorIndex = 1; }\n            dk = (r - 0) * (r - 0) + (g - 255) * (g - 255) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk; minColorIndex = 2; }\n            dk = (r - 0) * (r - 0) + (g - 255) * (g - 255) + (b - 255) * (b - 255);\n            if (dk < minD) { minD = dk; minColorIndex = 3; }\n            dk = (r - 255) * (r - 255) + (g - 0) * (g - 0) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk; minColorIndex = 4; }\n            dk = (r - 255) * (r - 255) + (g - 0) * (g - 0) + (b - 255) * (b - 255);\n            if (dk < minD) { minD = dk; minColorIndex = 5; }\n            dk = (r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk; minColorIndex = 6; }\n            dk = (r - 255) * (r - 255) + (g - 255) * (g - 255) + (b - 255) * (b - 255);\n            if (dk < minD) { minD = dk; minColorIndex = 7; }\n            return intToColor(minColorIndex);\n\n        }\n\n        public static string intToColor(int index) {\n            switch (index) {\n                case 0:\n                    return \"black\";\n                case 1:\n                    return \"blue\";\n                case 2:\n                    return \"lime\";\n                case 3:\n                    return \"aqua\";\n                case 4:\n                    return \"red\";\n                case 5:\n                    return \"fuchsia\";\n                case 6:\n                    return \"yellow\";\n                case 7:\n                    return \"white\";\n            }\n            return \"\";\n        }\n\n        public static int henkan(char ch) {\n            if (ch <= '9'&& '0' <= ch) {\n                return ch - '0';\n            }\n            else {\n                return 10 + (ch - 'a');\n            }\n        }\n\n\n\n        public static void Main(String[] args) {\n            string line;\n            while ((line = Console.ReadLine()) != null) {\n                //int n = int.Parse(line);\n                if (line == \"0\") { break; }\n                char[] chrs = line.ToCharArray();\n                int r = 16 * henkan(chrs[1]) + henkan(chrs[2]);\n                int g = 16 * henkan(chrs[3]) + henkan(chrs[4]);\n                int b = 16 * henkan(chrs[5]) + henkan(chrs[6]);\n                Console.WriteLine(tikaiiro(r, g, b));\n\n            }\n        }\n    \n    }\n\n\n\n    \n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace ConsoleApplication11 {\n    class Program {\n\n        string[] R = new string[] { \"00\", \"00\", \"00\", \"00\", \"ff\", \"ff\", \"ff\", \"ff\" };\n        string[] G = new string[] { \"00\", \"00\", \"ff\", \"ff\", \"00\", \"00\", \"ff\", \"ff\" };\n        string[] B = new string[] { \"00\", \"ff\", \"00\", \"ff\", \"00\", \"ff\", \"00\", \"ff\" };\n        string[] name = new string[] { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n\n        static void Main(string[] args) {\n            new Program().solve();\n        }\n\n        void solve() {\n            while (true) {\n                string input = Console.ReadLine();\n                if (input == \"0\") {\n                    return;\n                }\n                string[] RGB = new string[3];\n                RGB[0] = input.Substring(1, 2);\n                RGB[1] = input.Substring(3, 2);\n                RGB[2] = input.Substring(5, 2);\n\n                int nearestIdx = 0;\n                int dist = int.MaxValue;\n                Color inputColor = new Color(RGB);\n                for (int i = 0; i < name.Length; i++) {\n                    if (inputColor.compareToOther(R[i],G[i],B[i]) < dist) {\n                        dist = inputColor.compareToOther(R[i], G[i], B[i]);\n                        nearestIdx = i;\n                    }\n                }\n                Console.WriteLine(name[nearestIdx]);\n            }\n        }\n\n        \n    }\n    class Color {\n        int R;\n        int G;\n        int B;\n\n        public Color(string[] RGB){\n            R = Convert.ToInt32(RGB[0],16);\n            G = Convert.ToInt32(RGB[1],16);\n            B = Convert.ToInt32(RGB[2],16);\n        }\n\n        public int compareToOther(string oR,string oG, string oB){\n            int oppR = Convert.ToInt32(oR, 16);\n            int oppG = Convert.ToInt32(oG, 16);\n            int oppB = Convert.ToInt32(oB, 16);\n            return (R - oppR) * (R - oppR) + (G - oppG) * (G - oppG) + (B - oppB) * (B - oppB);\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\n\nnamespace Test1 {\n\n\n\n\n\n    class ClassMain {\n\n\n\n        public static string tikaiiro(int r, int g, int b) {\n            int minD = 1000000007;\n            int dk = 0;\n            int minColorIndex = -1;\n            dk = (r - 0) * (r - 0) + (g - 0) * (g - 0) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk;  minColorIndex = 0; }\n            dk = (r - 0) * (r - 0) + (g - 0) * (g - 0) + (b - 256) * (b - 256);\n            if (dk < minD) { minD = dk; minColorIndex = 1; }\n            dk = (r - 0) * (r - 0) + (g - 256) * (g - 256) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk; minColorIndex = 2; }\n            dk = (r - 0) * (r - 0) + (g - 256) * (g - 256) + (b - 256) * (b - 256);\n            if (dk < minD) { minD = dk; minColorIndex = 3; }\n            dk = (r - 256) * (r - 256) + (g - 0) * (g - 0) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk; minColorIndex = 4; }\n            dk = (r - 256) * (r - 256) + (g - 0) * (g - 0) + (b - 256) * (b - 256);\n            if (dk < minD) { minD = dk; minColorIndex = 5; }\n            dk = (r - 256) * (r - 256) + (g - 256) * (g - 256) + (b - 0) * (b - 0);\n            if (dk < minD) { minD = dk; minColorIndex = 6; }\n            dk = (r - 256) * (r - 256) + (g - 256) * (g - 256) + (b - 256) * (b - 256);\n            if (dk < minD) { minD = dk; minColorIndex = 7; }\n            return intToColor(minColorIndex);\n\n        }\n\n        public static string intToColor(int index) {\n            switch (index) {\n                case 0:\n                    return \"black\";\n                case 1:\n                    return \"blue\";\n                case 2:\n                    return \"lime\";\n                case 3:\n                    return \"aqua\";\n                case 4:\n                    return \"red\";\n                case 5:\n                    return \"fuchsia\";\n                case 6:\n                    return \"yellow\";\n                case 7:\n                    return \"white\";\n            }\n            return \"\";\n        }\n\n        public static int henkan(char ch) {\n            if (ch <= '9'&& '0' <= ch) {\n                return ch - '0';\n            }\n            else {\n                return 10 + (ch - 'a');\n            }\n        }\n\n\n\n        public static void Main(String[] args) {\n            string line;\n            while ((line = Console.ReadLine()) != null) {\n                //int n = int.Parse(line);\n                if (line == \"0\") { break; }\n                char[] chrs = line.ToCharArray();\n                int r = 16 * henkan(chrs[1]) + henkan(chrs[2]);\n                int g = 16 * henkan(chrs[3]) + henkan(chrs[4]);\n                int b = 16 * henkan(chrs[5]) + henkan(chrs[6]);\n                Console.WriteLine(tikaiiro(r, g, b));\n\n            }\n        }\n    \n    }\n\n\n\n    \n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace Aizu\n{\n    class OnlineJudge\n    {\n        public static void Main()\n        {\n            var name = new [,,] { {{\"black\", \"blue\"},{\"lime\", \"aqua\"}}, {{\"red\",\"fuchsia\"},{\"yellow\",\"white\"}} };\n            string input;\n            while((input = Console.ReadLine()) != \"0\") {\n                int code = Convert.ToInt32(input.TrimStart('#'), 16);\n                var color = new [] { (code >> 16) > 0x7F ? 1 : 0, (code >> 8 & 0xFF) > 0x7F ? 1 : 0, (code & 0xFF) > 0x7F ? 1 : 0 };\n                Console.WriteLine(name[color[0], color[1], color[2]]);\n            }\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\n\nnamespace ConsoleApplication13\n{\n    class Program\n    {\n        const int MaxValue = 255;\n\n        struct Color\n        {\n            public string Name;\n            public int Red;\n            public int Green;\n            public int Blue;\n\n            public Color(string name, int red, int green, int blue)\n            {\n                this.Name = name;\n                this.Red = red;\n                this.Green = green;\n                this.Blue = blue;\n            }\n        }\n\n\n        static void Main(string[] args)\n        {\n            List<Color> colorList = new List<Color>();\n            colorList.Add(new Color(\"black\", 0, 0, 0));\n            colorList.Add(new Color(\"blue\", 0, 0, MaxValue));\n            colorList.Add(new Color(\"lime\", 0, MaxValue, 0));\n            colorList.Add(new Color(\"aqua\", 0, MaxValue, MaxValue));\n            colorList.Add(new Color(\"red\", MaxValue, 0, 0));\n            colorList.Add(new Color(\"fuchsia\", MaxValue, 0, MaxValue));\n            colorList.Add(new Color(\"yellow\", MaxValue, MaxValue, 0));\n            colorList.Add(new Color(\"white\", MaxValue, MaxValue, MaxValue));\n\n            \n            while(true){\n                string input = Console.ReadLine();\n\n                if (input == \"0\")\n                    break;\n\n                int red = Convert.ToInt32(input.Substring(1,2),16);\n                int green = Convert.ToInt32(input.Substring(3,2),16);\n                int blue = Convert.ToInt32(input.Substring(5,2),16);\n\n                double minDk = 3 * MaxValue * MaxValue;\n                Color minColor = colorList[0];\n\n                foreach(Color color in colorList){\n                    double dk = Math.Pow((color.Red - red), 2) + Math.Pow((color.Green - green), 2) + Math.Pow((color.Blue - blue), 2);\n                    if (minDk > dk)\n                    {\n                        minDk = dk;\n                        minColor = color;\n                        if (dk == 0)\n                        {\n                            break;\n                        }\n                    }\n                }\n\n\n                Console.WriteLine(minColor.Name);\n               \n            }\n\n\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System.Linq;\nusing System;\n\npublic class hello\n{\n    public static void Main()\n    {\n        var cn = new int[,] { { 0, 0, 0 }, { 0, 0, 255 },{ 0, 255, 0 } ,{ 0, 255, 255 },{ 255, 0, 0 },{ 255, 0, 255 }\n                                    ,{255,255,0 },{255,255,255 } };\n        var color = new string[] { \"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\" };\n        while (true)\n        {\n            var s = Console.ReadLine().Trim();\n            if (s == \"0\") break;\n            var r = Convert.ToInt32(s.Substring(1, 2), 16);\n            var g = Convert.ToInt32(s.Substring(3, 2), 16);\n             var b = Convert.ToInt32(s.Substring(5, 2), 16);\n            var d2a = new int[8];\n            for (int i = 0; i < 8; i++)\n                d2a[i] = (int)Math.Pow(r - cn[i, 0], 2) + (int)Math.Pow(g - cn[i, 1], 2) + (int)Math.Pow(b - cn[i, 2], 2);\n            var d2amin = d2a.Min();\n            for (int i = 0; i < 8; i++) \n                if (d2a[i] == d2amin) { Console.WriteLine(color[i]); break; }\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace _0176\n{\n    public class Program\n\n    {\n        public class Color\n        {\n            public string Name { get; }\n            public int R { get; }\n            public int G { get; }\n            public int B { get; }\n            public Color(string name, int r, int g, int b)\n            {\n                Name = name;\n                R = r; G = g; B = b;\n            }\n        }\n\n        public static Color[] colors = new Color[]\n        {\n             new Color(\"black\"  ,    0,   0,   0)\n            ,new Color(\"blue\"   ,    0,   0, 255)\n            ,new Color(\"lime\"   ,    0, 255,   0)\n            ,new Color(\"aqua\"   ,    0, 255, 255)\n            ,new Color(\"red\"    ,  255,   0,   0)\n            ,new Color(\"fuchsia\",  255,   0, 255)\n            ,new Color(\"yellow\" ,  255, 255,   0)\n            ,new Color(\"white\"  ,  255, 255, 255)\n        };\n\n        public static void Main(string[] args)\n        {\n            while (true)\n            {\n                string line = Console.ReadLine();\n                if (line == \"0\") return;\n\n                int colorR = Convert.ToInt32(line.Substring(1, 2), 16);\n                int colorG = Convert.ToInt32(line.Substring(3, 2), 16);\n                int colorB = Convert.ToInt32(line.Substring(5, 2), 16);\n\n                double minV = double.MaxValue;\n                string minN = \"\";\n\n                for (int i = 0 ; i < colors.Length ; i++)\n                {\n                    double v = Math.Sqrt(Math.Pow(colorR - colors[i].R, 2) + Math.Pow(colorG - colors[i].G, 2) + Math.Pow(colorB - colors[i].B, 2));\n                    if ( v <minV)\n                    {\n                        minV = v;\n                        minN = colors[i].Name;\n                    }\n                }\n                Console.WriteLine(minN);\n            }\n        }\n\n        static string RSt() { return Console.ReadLine(); }\n        static int RInt() { return int.Parse(Console.ReadLine().Trim()); }\n        static long RLong() { return long.Parse(Console.ReadLine().Trim()); }\n        static double RDouble() { return double.Parse(Console.ReadLine()); }\n        static string[] RStAr(char sep = ' ') { return Console.ReadLine().Trim().Split(sep); }\n        static int[] RIntAr(char sep = ' ') { return Array.ConvertAll(Console.ReadLine().Trim().Split(sep), e => int.Parse(e)); }\n        static long[] RLongAr(char sep = ' ') { return Array.ConvertAll(Console.ReadLine().Trim().Split(sep), e => long.Parse(e)); }\n        static double[] RDoubleAr(char sep = ' ') { return Array.ConvertAll(Console.ReadLine().Trim().Split(sep), e => double.Parse(e)); }\n        static string WAr<T>(IEnumerable<T> array, string sep = \" \") { return string.Join(sep, array.Select(x => x.ToString()).ToArray()); }\n    }\n\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.ComponentModel.Design;\nusing System.Dynamic;\nusing System.Globalization;\nusing System.IO;\nusing System.IO.Compression;\nusing System.IO.Pipes;\nusing System.Linq;\nusing System.Numerics;\nusing System.Text;\nusing static System.Console;\nusing static System.Math;\n\nnamespace AtCoder\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            for (int i = 0; i < 1000; i++)\n            {\n                var color = Read();\n                if (color == \"0\") break;\n\n                string rhex = color[1].ToString()+color[2].ToString();\n                int red = Convert.ToInt32(rhex, 16);\n\n                string ghex = color[3].ToString() + color[4].ToString();\n                int green = Convert.ToInt32(ghex, 16);\n\n                string bhex = color[5].ToString() + color[6].ToString();\n                int blue = Convert.ToInt32(bhex, 16);\n\n                if (red < 128)\n                {\n                    if (green < 128)\n                    {\n                        if (blue < 128)\n                        {\n                            WriteLine(\"black\");\n                        }\n                        else\n                        {\n                            WriteLine(\"blue\");\n                        }\n                    }\n                    else\n                    {\n                        if (blue < 128)\n                        {\n                            WriteLine(\"lime\");\n                        }\n                        else\n                        {\n                            WriteLine(\"aqua\");\n                        }\n                    }\n                }\n                else\n                {\n                    if (green < 128)\n                    {\n                        if (blue < 128)\n                        {\n                            WriteLine(\"red\");\n                        }\n                        else\n                        {\n                            WriteLine(\"fuchsia\");\n                        }\n                    }\n                    else\n                    {\n                        if (blue < 128)\n                        {\n                            WriteLine(\"yellow\");\n                        }\n                        else\n                        {\n                            WriteLine(\"white\");\n                        }\n                    }\n                }\n            }\n        }\n        private static string Read() { return ReadLine(); }\n        private static string[] Reads() { return (Read().Split()); }\n        private static int ReadInt() { return int.Parse(Read()); }\n        private static long ReadLong() { return long.Parse(Read()); }\n        private static double ReadDouble() { return double.Parse(Read()); }\n        private static int[] ReadInts() { return Array.ConvertAll(Read().Split(), int.Parse); }\n        private static long[] ReadLongs() { return Array.ConvertAll(Read().Split(), long.Parse); }\n        private static double[] ReadDoubles() { return Array.ConvertAll(Read().Split(), double.Parse); }\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\n\nnamespace Test1 {\n\n\n\n\n\n    class ClassMain {\n\n\n\n        public static string tikaiiro(int r, int g, int b) {\n            int minD = 1000000007;\n            int dk = 0;\n            int minColorIndex = -1;\n            dk = (r - 0) * (r - 0) + (g - 0) * (g - 0) + (b - 0) * (b - 0);\n            if (dk < minD) { minColorIndex = 0; }\n            dk = (r - 0) * (r - 0) + (g - 0) * (g - 0) + (b - 256) * (b - 256);\n            if (dk < minD) { minColorIndex = 1; }\n            dk = (r - 0) * (r - 0) + (g - 256) * (g - 256) + (b - 0) * (b - 0);\n            if (dk < minD) { minColorIndex = 2; }\n            dk = (r - 0) * (r - 0) + (g - 256) * (g - 256) + (b - 256) * (b - 256);\n            if (dk < minD) { minColorIndex = 3; }\n            dk = (r - 256) * (r - 256) + (g - 0) * (g - 0) + (b - 0) * (b - 0);\n            if (dk < minD) { minColorIndex = 4; }\n            dk = (r - 256) * (r - 256) + (g - 0) * (g - 0) + (b - 256) * (b - 256);\n            if (dk < minD) { minColorIndex = 5; }\n            dk = (r - 256) * (r - 256) + (g - 256) * (g - 256) + (b - 0) * (b - 0);\n            if (dk < minD) { minColorIndex = 6; }\n            dk = (r - 256) * (r - 256) + (g - 256) * (g - 256) + (b - 256) * (b - 256);\n            if (dk < minD) { minColorIndex = 7; }\n            return intToColor(minColorIndex);\n\n        }\n\n        public static string intToColor(int index) {\n            switch (index) {\n                case 0:\n                    return \"black\";\n                case 1:\n                    return \"blue\";\n                case 2:\n                    return \"lime\";\n                case 3:\n                    return \"aqua\";\n                case 4:\n                    return \"red\";\n                case 5:\n                    return \"fuchsia\";\n                case 6:\n                    return \"yellow\";\n                case 7:\n                    return \"white\";\n            }\n            return \"\";\n        }\n\n        public static int henkan(char ch) {\n            if (ch <= '9'&& '0' <= ch) {\n                return ch - '0';\n            }\n            else {\n                return 10 + (ch - 'a');\n            }\n        }\n\n\n\n        public static void Main(String[] args) {\n            string line;\n            while ((line = Console.ReadLine()) != null) {\n                //int n = int.Parse(line);\n                if (line == \"0\") { break; }\n                char[] chrs = line.ToCharArray();\n                int r = 16 * henkan(chrs[1]) + henkan(chrs[2]);\n                int g = 16 * henkan(chrs[3]) + henkan(chrs[4]);\n                int b = 16 * henkan(chrs[5]) + henkan(chrs[6]);\n                Console.WriteLine(tikaiiro(r, g, b));\n\n            }\n        }\n    \n    }\n\n\n\n    \n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace AOJ\n{\n\tclass Program\n\t{\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\tvar colors = new color[8]\n\t\t\t{\n\t\t\t\tnew color(){c = \"black\",  r=0,    g=0,    b=0},\n\t\t\t\tnew color(){c = \"blue\",   r=0,    g=0,    b=255},\n\t\t\t\tnew color(){c = \"lime\",   r=0,    g=255,  b=0},\n\t\t\t\tnew color(){c = \"aqua\",   r=0,    g=255,  b=255},\n\t\t\t\tnew color(){c = \"red\",    r=255,  g=0,    b=0},\n\t\t\t\tnew color(){c = \"fuchsia\",r=255,  g=0,    b=255},\n\t\t\t\tnew color(){c = \"yellow\", r=255,  g=255,  b=0},\n\t\t\t\tnew color(){c = \"white\",  r=255,  g=255,  b=255},\n\t\t\t};\n\n\t\t\tvar s = \"\";\n\t\t\twhile ((s = Console.ReadLine()) != \"0\")\n\t\t\t{\n\t\t\t\tint color = Convert.ToInt32(s.TrimStart('#'), 16);\n\t\t\t\tint red = color >> 16;\n\t\t\t\tint green = color >> 8 & 0xff;\n\t\t\t\tint blue = color & 0xff;\n\t\t\t\tdouble t = double.MaxValue;\n\t\t\t\tint r = 0;\n\t\t\t\tfor (int i = 0; i < 8; i++)\n\t\t\t\t{\n\t\t\t\t\tdouble d = Math.Sqrt(\n\t\t\t\t\t\t(red - colors[i].r) * (red - colors[i].r) +\n\t\t\t\t\t\t(green - colors[i].g) * (green - colors[i].g) +\n\t\t\t\t\t\t(blue - colors[i].b) * (blue - colors[i].b));\n\t\t\t\t\tif (t > d)\n\t\t\t\t\t{\n\t\t\t\t\t\tr = i;\n\t\t\t\t\t\tt = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(colors[r].c);\n\t\t\t}\n\t\t}\n\n\t\tstruct color\n\t\t{\n\t\t\tpublic string c;\n\t\t\tpublic int r, g, b;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace AOJ.Volume1\n{\n    public class WhatColor\n    {\n        private class Color\n        {\n            public string Name { get; private set; }\n            public int R { get; private set; }\n            public int G { get; private set; }\n            public int B { get; private set; }\n\n            public Color(string name, string rgb)\n            {\n                Name = name;\n                R = Convert.ToInt32(rgb.Substring(0, 2), 16);\n                G = Convert.ToInt32(rgb.Substring(2, 2), 16);\n                B = Convert.ToInt32(rgb.Substring(4), 16);\n            }\n        }\n\n        public static int Main()\n        {\n            var color_list = new Color[8];\n            color_list[0] = new Color(\"black\", \"000000\");\n            color_list[1] = new Color(\"blue\", \"0000ff\");\n            color_list[2] = new Color(\"lime\", \"00ff00\");\n            color_list[3] = new Color(\"aqua\", \"00ffff\");\n            color_list[4] = new Color(\"red\", \"ff0000\");\n            color_list[5] = new Color(\"fuchsia\", \"ff00ff\");\n            color_list[6] = new Color(\"yellow\", \"ffff00\");\n            color_list[7] = new Color(\"white\", \"ffffff\");\n\n            while (true)\n            {\n                var input = Console.ReadLine();\n                if(input == \"0\") { break; }\n\n                input = input.Replace(\"#\", \"\");\n                int r = Convert.ToInt32(input.Substring(0, 2), 16);\n                int g = Convert.ToInt32(input.Substring(2, 2), 16);\n                int b = Convert.ToInt32(input.Substring(4), 16);\n\n                var d = double.MaxValue;\n                int answer = 0;\n                for(int i = 0; i < 8; i++)\n                {\n                    int r2 = (int)Math.Pow(r - color_list[i].R, 2);\n                    int g2 = (int)Math.Pow(g - color_list[i].G, 2);\n                    int b2 = (int)Math.Pow(b - color_list[i].B, 2);\n\n                    var tmp_d = Math.Sqrt(r2 + g2 + b2);\n                    if (d > tmp_d)\n                    {\n                        answer = i;\n                        d = tmp_d;\n                    }\n                }\n\n                Console.WriteLine(color_list[answer].Name);\n            }\n\n            return 0;\n        }\n    }\n}"
  },
  {
    "language": "JavaScript",
    "code": "(function(input) {\n  var lines = input.split(\"\\n\");\n  var colors = [\n    ['black', 0x00, 0x00, 0x00],\n    ['blue', 0x00, 0x00, 0xff],\n    ['lime', 0x00, 0xff, 0x00],\n    ['aqua', 0x00, 0xff, 0xff],\n    ['red', 0xff, 0x00, 0x00],\n    ['fuchsia', 0xff, 0x00, 0xff],\n    ['yellow', 0xff, 0xff, 0x00],\n    ['white', 0xff, 0xff, 0xff],\n  ];\n  for (var i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '#') {\n      var best_color;\n      var min_d = 3 * 256 * 256 + 1;\n      var r = parseInt(lines[i].substr(1, 2), 16);\n      var g = parseInt(lines[i].substr(3, 2), 16);\n      var b = parseInt(lines[i].substr(5, 2), 16);\n      for (var j = 0; j < colors.length; ++j) {\n        var d = Math.pow(r - colors[j][1], 2) + Math.pow(g - colors[j][2], 2) + Math.pow(b - colors[j][3], 2);\n        if (d < min_d) {\n          min_d = d;\n          best_color = colors[j][0];\n        }\n      }\n      console.log(best_color);\n    }\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8').trim());"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar color=\"black,blue,lime,aqua,red,fuchsia,yellow,white\".split(\",\");\nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]==\"0\")break;\n   var str=Arr[i].slice(1);\n   var arr=[];\n   str.replace(/(..)/g,function(v){\n      arr.push(parseInt(v,16));\n   });\n   var r=arr[0];\n   var g=arr[1];\n   var b=arr[2];\n   var R=Math.pow(r-255,2);\n   var G=Math.pow(g-255,2);\n   var B=Math.pow(b-255,2);\n   var abc=[];\n   abc.push(Math.sqrt(r*r+g*g+b*b));\n   abc.push(Math.sqrt(r*r+g*g+B));\n   abc.push(Math.sqrt(r*r+G+b*b));\n   abc.push(Math.sqrt(r*r+G+B));\n   abc.push(Math.sqrt(R+g*g+b*b));\n   abc.push(Math.sqrt(R+g*g+B));\n   abc.push(Math.sqrt(R+G+b*b));\n   abc.push(Math.sqrt(R+G+B));\n   var min=Math.min.apply(null,abc);\n   console.log(color[abc.indexOf(min)]);\n}"
  },
  {
    "language": "JavaScript",
    "code": "(function(input) {\n  var lines = input.split(\"\\n\");\n  var colors = [\n    ['black', 0x00, 0x00, 0x00],\n    ['blue', 0x00, 0x00, 0xff],\n    ['lime', 0x00, 0xff, 0x00],\n    ['aqua', 0x00, 0xff, 0x00],\n    ['red', 0xff, 0x00, 0x00],\n    ['fuchsia', 0xff, 0x00, 0xff],\n    ['yellow', 0xff, 0xff, 0x00],\n    ['white', 0xff, 0xff, 0xff],\n  ];\n  for (var i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '#') {\n      var best_color;\n      var min_d = 3 * 256 * 256 + 1;\n      var r = parseInt(lines[i].substr(1, 2), 16);\n      var g = parseInt(lines[i].substr(3, 2), 16);\n      var b = parseInt(lines[i].substr(5, 2), 16);\n      for (var j = 0; j < colors.length; ++j) {\n        var d = Math.pow(r - colors[j][1], 2) + Math.pow(g - colors[j][2], 2) + Math.pow(b - colors[j][3], 2);\n        if (d < min_d) {\n          min_d = d;\n          best_color = colors[j][0];\n        }\n      }\n      console.log(best_color);\n    }\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8').trim());"
  },
  {
    "language": "Ruby",
    "code": "Palette = [[0,0,0],[0,0,255],[0,255,0],[0,255,255],[255,0,0],[255,0,255],[255,255,0],[255,255,255]]\nColor = [\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"]\n\ndef solve hex\n  rgb = hex.split(\"\")\n  r = (rgb[0] + rgb[1]).hex.to_i\n  g = (rgb[2] + rgb[3]).hex.to_i\n  b = (rgb[4] + rgb[5]).hex.to_i\n  similar = -1\n  diff = 10000\n  Palette.size.times do |k|\n    dk = Math.sqrt((r - Palette[k][0]) ** 2 + (g - Palette[k][1]) ** 2 + (b - Palette[k][2]) ** 2)\n    if dk < diff\n      diff = dk\n      similar = k\n    end\n  end\n  Color[similar]\nend\n\nwhile (input = $stdin.gets.chomp) != \"0\" do\n  printf \"%s\\n\", solve(input.delete(\"#\"))\nend"
  },
  {
    "language": "Ruby",
    "code": "A=[[0,0,0],[0,0,255],[0,255,0],[0,255,255],[255,0,0],[255,0,255],[255,255,0],[255,255,255]]\nB=['black','blue','lime','aqua','red','fuchsia','yellow','white']\nwhile(l=gets)!=\"0\\n\"do puts A.length.times.map{|i|[A[i].zip(l[1..-1].unpack(\"a2a2a2\").map{|e|e.to_i(16)}).map{|e|(e[0]-e[1])**2}.reduce(&:+),B[i]]}.min[1]end"
  },
  {
    "language": "Ruby",
    "code": "### constant\n\nCOLORS = [\n  [\"black\",     \"00\", \"00\", \"00\"],\n  [\"blue\",      \"00\", \"00\", \"ff\"],\n  [\"lime\",      \"00\", \"ff\", \"00\"],\n  [\"aqua\",      \"00\", \"ff\", \"ff\"],\n  [\"red\",       \"ff\", \"00\", \"00\"],\n  [\"fuchsia\",   \"ff\", \"00\", \"ff\"],\n  [\"yellow\",    \"ff\", \"ff\", \"00\"],\n  [\"white\",     \"ff\", \"ff\", \"ff\"]\n]\n\n### subroutines\n\ndef get_color(r, g, b)\n  min_dd = 3 * 256 ** 3\n  min_col = ''\n\n  for col in COLORS\n    dd = (r - col[1].hex) ** 2 + (g - col[2].hex) ** 2 + (b - col[3].hex) ** 2\n    if min_dd > dd\n      min_dd = dd\n      min_col = col[0]\n    end\n  end\n\n  min_col\nend\n\n### main\n\nwhile true\n  line = gets.strip\n  break if line == '0'\n\n  r = line[1, 2].hex\n  g = line[3, 2].hex\n  b = line[5, 2].hex\n\n  puts get_color(r, g, b)\nend"
  },
  {
    "language": "Ruby",
    "code": "A=[[0,0,0],[0,0,255],[0,255,0],[0,255,255],[255,0,0],[255,0,255],[255,255,0],[255,255,255]]\nB=['black','blue','lime','aqua','red','fuchsia','yellow','white']\nwhile(l=gets)!=\"0\\n\"do\n\ta=l[1..-1].unpack(\"a2a2a2\").map{|e|e.to_i(16)}\n\tputs B[A.length.times.map{|i|[A[i].zip(a).map{|e|(e[0]-e[1])**2}.reduce(&:+),i]}.sort[0][1]]\nend"
  },
  {
    "language": "Ruby",
    "code": "puts %w(black blue lime aqua red fuchsia yellow white)[[1,3,5].inject(0){|s,j|s*2+($_[j]>?7?1:0)}]while gets<?0"
  },
  {
    "language": "Ruby",
    "code": "@colors = [[0, \"black\", 0, 0, 0], [1, \"blue\", 0, 0, 256], [2, \"lime\", 0, 256, 0], [3, \"aqua\", 0, 256, 256], [4, \"red\", 256, 0, 0], [5, \"fuchsia\", 256, 0, 256], [6, \"yellow\", 256, 256, 0], [7, \"white\", 256, 256, 256]]\n\ndef color str\n    r = str[1..2].to_i(16)\n    g = str[3..4].to_i(16)\n    b = str[5..6].to_i(16)\n    arr = []\n    @colors.each{|index, name, rk, gk, bk|\n        arr << [index, name, (r-rk)**2 + (g-gk)**2 + (b-bk)**2]\n    }\n    arr.sort_by{|i, n, d| [d, i]}.first[1]\nend\n\nwhile true\n    line = gets.chomp\n    break if line == \"0\"\n    puts color(line)\nend\n"
  },
  {
    "language": "Ruby",
    "code": "COLORS =  {\n  'black'   => ['00', '00', '00'],\n  'blue'    => ['00', '00', 'ff'],\n  'lime'    => ['00', 'ff', '00'],\n  'aqua'    => ['00', 'ff', 'ff'],\n  'red'     => ['ff', '00', '00'],\n  'fuchsia' => ['ff', '00', 'ff'],\n  'yellow'  => ['ff', 'ff', '00'],\n  'white'   => ['ff', 'ff', 'ff']\n}\n\ndef d(r, g, b, rk, gk, bk)\n  Math.sqrt((r - rk)**2 + (g - gk)**2 + (b - bk)**2)\nend\n\nwhile line = gets\n  break if line.chomp == '0'\n  *rgb = line.chomp.gsub(/^#/, '').scan(/.{2}/)\n\n  similar_color = ''\n  d_min = Float::INFINITY\n\n  COLORS.each do |key, value|\n    d = d(*value.map { |s| s.to_i(16) }, *rgb.map { |s| s.to_i(16) })\n    if d < d_min\n      similar_color = key\n      d_min = d\n    end\n  end\n\n  puts similar_color\nend"
  },
  {
    "language": "Ruby",
    "code": "T = [\n  ['black', 0x00, 0x00, 0x00],\n  ['blue', 0x00, 0x00, 0xff],\n  ['lime', 0x00, 0xff, 0x00],\n  ['aqua', 0x00, 0xff, 0xff],\n  ['red', 0xff, 0x00, 0x00],\n  ['fuchsia', 0xff, 0x00, 0xff],\n  ['yellow', 0xff, 0xff, 0x00],\n  ['white', 0xff, 0xff, 0xff]\n]\nloop do\n  s = gets.chomp\n  break if s == ?0\n  cs = s.each_char.drop(1).each_slice(2).map {|as| as.join.to_i 16 }\n  puts T.min_by {|_, *ds| cs.zip(ds).map {|c, d| (c - d)**2 }.reduce(0, :+) }[0]\nend"
  },
  {
    "language": "Ruby",
    "code": "require 'matrix'\n\ncolors = [0, 255].repeated_permutation(3).map{|a| Vector[*a]}\nnames = %w(\n    black   \n    blue    \n    lime    \n    aqua    \n    red \n    fuchsia \n    yellow  \n    white   \n)\ncolor_name = Hash[*colors.zip(names).flatten]\n\nloop do\n    s = gets[1..-2]\n    break if s == ''\n    u = Vector[*s.scan(/../).map{|x| x.hex}]\n    puts color_name[colors.min_by{|v| (v - u).r}]\nend"
  },
  {
    "language": "Ruby",
    "code": "loop do\n    s = gets.chomp\n    break if s == \"0\"\n    r = s[1..2].hex\n    g = s[3..4].hex\n    b = s[5..6].hex\n    if r < 128 && g < 128 && b < 128\n        puts \"black\"\n    elsif r < 128 && g < 128 && b >= 128\n        puts \"blue\"\n    elsif r < 128 && g >= 128 && b < 128\n        puts \"lime\"\n    elsif r < 128 && g >= 128 && b >= 128\n        puts \"aqua\"\n    elsif r >= 128 && g < 128 && b < 128\n        puts \"red\"\n    elsif r >= 128 && g < 128 && b >= 128\n        puts \"fuchsia\"\n    elsif r >= 128 && g >= 128 && b < 128\n        puts \"yellow\"\n    else\n        puts \"white\"\n    end\nend\n"
  },
  {
    "language": "Ruby",
    "code": "(c=0\n[1,3,5].map{|j|c*=2;$_[j]>?7&&c+=1}\nputs %w(black blue lime aqua red fuchsia yellow white)[c])while gets<?0"
  },
  {
    "language": "Ruby",
    "code": "@colors = [\n    [0, \"black\", 0, 0, 0],\n    [1, \"blue\", 0, 0, 255],\n    [2, \"lime\", 0, 255, 0],\n    [3, \"aqua\", 0, 255, 255],\n    [4, \"red\", 255, 0, 0],\n    [5, \"fuchsia\", 255, 0, 255],\n    [6, \"yellow\", 255, 255, 0],\n    [7, \"white\", 255, 255, 255]\n]\n\ndef color str\n    r = str[1..2].to_i(16)\n    g = str[3..4].to_i(16)\n    b = str[5..6].to_i(16)\n    arr = []\n    @colors.each{|index, name, rk, gk, bk|\n        arr << [index, name, (r-rk)**2 + (g-gk)**2 + (b-bk)**2]\n    }\n    arr.sort_by{|i, n, d| [d, i]}.first[1]\nend\n\nwhile true\n    line = gets.chomp\n    break if line == \"0\"\n    puts color(line)\nend\n"
  },
  {
    "language": "Ruby",
    "code": "A=[[0,0,0],[0,0,255],[0,255,0],[0,255,255],[255,0,0],[255,0,255],[255,255,0],[255,255,255]]\nB=['black','blue','lime','aqua','red','fuchsia','yellow','white']\nwhile(l=gets)!=\"0\\n\"\nputs A.length.times.map{|i|[A[i].zip(l[1..-1].unpack(\"a2a2a2\").map{|e|e.to_i(16)}).map{|e|(e[0]-e[1])**2}.reduce(&:+),B[i]]}.min[1]end"
  },
  {
    "language": "Ruby",
    "code": "colors ={:black =>{:r => 0,:g =>0,:b=>0},\n  :blue =>{:r => 0,:g =>0,:b=>255},\n  :lime =>{:r => 0,:g =>255,:b=>0},\n  :aqua =>{:r => 0,:g =>255,:b=>255},\n  :red =>{:r => 255,:g =>0,:b=>0},\n  :fuchsia =>{:r => 255,:g =>0,:b=>255},\n  :yellow =>{:r => 255,:g =>255,:b=>0},\n  :white =>{:r => 255,:g =>255,:b=>255},\n}\nd = lambda do |r,g,b|\n  min = 444\n  ans =\"\"\n  colors.each do |color,value|\n    dk = Math.sqrt((r-value[:r])**2+(g-value[:g])**2+(b-value[:b])**2)\n    if min > dk\n      min = dk\n      ans = color\n    end\n  end\n  ans\nend\nloop do\n  c = gets.chomp\n  break if c=='0'\n  r,g,b =  c.delete('#').gsub(/(.)(.)/,'\\1\\2 ').split.map(&:hex)\n  puts d.call(r,g,b)\nend"
  },
  {
    "language": "Ruby",
    "code": "table = %w(black blue lime aqua red fuchsia yellow white)\n\nuntil (rgb = $<.gets.chomp) == \"0\"\n  color = rgb[1..-1].chars.each_slice(2).map {|a| a.join.to_i(16)}\n  idx = [0, 0xff].repeated_permutation(3).map.with_index do |tc, i|\n    [3.times.map {|i| (tc[i] - color[i]) ** 2}.sum, i]\n  end.sort.first.last\n  puts table[idx]\nend\n"
  },
  {
    "language": "Ruby",
    "code": "A=[[0,0,0],[0,0,255],[0,255,0],[0,255,255],[255,0,0],[255,0,255],[255,255,0],[255,255,255]]\nB=['black','blue','lime','aqua','red','fuchsia','yellow','white']\nwhile(l=gets)!=\"0\\n\"do puts B[A.length.times.map{|i|[A[i].zip(l[1..-1].unpack(\"a2a2a2\").map{|e|e.to_i(16)}).map{|e|(e[0]-e[1])**2}.reduce(&:+),i]}.min[1]]end"
  },
  {
    "language": "Go",
    "code": "package main\n\nimport (\n\t\"bufio\"\n\t\"os\"\n\t\"strings\"\n\t\"strconv\"\n\t\"fmt\"\n)\n\nvar scanner = bufio.NewScanner(os.Stdin)\n\ntype Color struct {\n\tname    string\n\tR, G, B int64\n}\n\nfunc main() {\n\tcolors := []Color{\n\t\t{\"black\", 0, 0, 0},\n\t\t{\"blue\", 0, 0, 0xff},\n\t\t{\"lime\", 0, 0xff, 0},\n\t\t{\"aqua\", 0, 0xff, 0xff},\n\t\t{\"red\", 0xff, 0, 0},\n\t\t{\"fuchsia\", 0xff, 0, 0xff},\n\t\t{\"yellow\", 0xff, 0xff, 0},\n\t\t{\"white\", 0xff, 0xff, 0xff},\n\t}\n\tfor scanner.Scan() {\n\t\tbuf := strings.Split(scanner.Text(), \"\")\n\t\tif buf[0] == \"0\" {\n\t\t\tbreak\n\t\t}\n\t\tr, _ := strconv.ParseInt(strings.Join(buf[1:3], \"\"), 16, 64)\n\t\tg, _ := strconv.ParseInt(strings.Join(buf[3:5], \"\"), 16, 64)\n\t\tb, _ := strconv.ParseInt(strings.Join(buf[5:], \"\"), 16, 64)\n\t\tvmin := int64(3*0xff*0xff)\n\t\tvar ans string\n\t\tfor _, c := range colors {\n\t\t\td := (r-c.R)*(r-c.R) + (g-c.G)*(g-c.G) + (b-c.B)*(b-c.B)\n\t\t\tif d < vmin {\n\t\t\t\tvmin = d\n\t\t\t\tans = c.name\n\t\t\t}\n\t\t}\n\t\tfmt.Println(ans)\n\t}\n}\n\n"
  },
  {
    "language": "Go",
    "code": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n\t\"strconv\"\n)\n\n// ColorCode is a string like #rrggbb\ntype ColorCode string\n\n// ColorName is a name of color\ntype ColorName string\n\n// Color has colorname and colorcode\ntype Color struct {\n\tname ColorName\n\tcode ColorCode\n}\n\n// ColorTable has default colors\ntype ColorTable struct {\n\tcolors []Color\n}\n\nvar (\n\tcolorTable = ColorTable{\n\t\t[]Color{\n\t\t\tColor{\"black\", \"#000000\"},\n\t\t\tColor{\"blue\", \"#0000ff\"},\n\t\t\tColor{\"lime\", \"#00ff00\"},\n\t\t\tColor{\"aqua\", \"#00ffff\"},\n\t\t\tColor{\"red\", \"#ff0000\"},\n\t\t\tColor{\"fuchsia\", \"#ff00ff\"},\n\t\t\tColor{\"yellow\", \"#ffff00\"},\n\t\t\tColor{\"white\", \"#ffffff\"},\n\t\t},\n\t}\n)\n\nfunc main() {\n\tvar code ColorCode\n\tfmt.Scanf(\"%s\", &code)\n\tfor {\n\t\tif code == \"0\" {\n\t\t\tbreak\n\t\t}\n\t\tname := colorTable.getNearestColor(code)\n\t\tfmt.Println(name)\n\t\tfmt.Scanf(\"%s\", &code)\n\t}\n}\n\nfunc (colorstr ColorCode) parseColorValue() (float64, float64, float64) {\n\trr, gg, bb := colorstr[1:3], colorstr[3:5], colorstr[5:7]\n\trri, err1 := strconv.ParseUint(string(rr), 16, 8)\n\tggi, err2 := strconv.ParseUint(string(gg), 16, 8)\n\tbbi, err3 := strconv.ParseUint(string(bb), 16, 8)\n\tif err1 != nil || err2 != nil || err3 != nil {\n\t\terr := fmt.Errorf(\n\t\t\t\"Failed to read color strings, color code:%s, err: %v %v %v\",\n\t\t\tcolorstr, err1, err2, err3)\n\t\tpanic(err)\n\t}\n\treturn float64(rri), float64(ggi), float64(bbi)\n}\n\nfunc (table *ColorTable) getNearestColor(targetcode ColorCode) ColorName {\n\tvar nearestColor ColorName\n\tvar nearestValue = 1e5\n\tfor _, v := range table.colors {\n\t\ttrr, tgg, tbb := targetcode.parseColorValue()\n\t\tprr, pgg, pbb := v.code.parseColorValue()\n\t\t// diff := math.Sqrt(\n\t\t// \tmath.Pow(prr-trr, 2) + math.Pow(pgg-tgg, 2) + math.Pow(pbb-tbb, 2))\n\t\tdiff := math.Pow(prr-trr, 2) +\n\t\t\tmath.Pow(pgg-tgg, 2) +\n\t\t\tmath.Pow(pbb-tbb, 2)\n\t\tif nearestValue > diff {\n\t\t\tnearestValue = diff\n\t\t\tnearestColor = v.name\n\t\t}\n\t}\n\treturn nearestColor\n}\n\n"
  },
  {
    "language": "PHP",
    "code": "<?php\n\n$ref = array(\n\t'black' => array(0, 0, 0),\n\t'blue' => array(0, 0, 255),\n\t'lime' => array(0, 255, 0),\n\t'aqua' => array(0, 255, 255),\n\t'red' => array(255, 0, 0),\n\t'fuchsia' => array(255, 0, 255),\n\t'yellow' => array(255, 255, 0),\n\t'white' => array(255, 255, 255),\n);\n\nwhile ($line = trim(fgets(STDIN))) {\n\t$r = hexdec(substr($line, 1, 2));\n\t$g = hexdec(substr($line, 3, 2));\n\t$b = hexdec(substr($line, 5, 2));\n\t$d2 = PHP_INT_MAX;\n\t$color = '';\n\tforeach ($ref as $name => $c) {\n\t\t$dtmp = ($r - $c[0]) * ($r - $c[0]) + ($g - $c[1]) * ($g - $c[1]) + ($b - $c[2]) * ($b - $c[2]);\n\t\tif ($dtmp < $d2) {\n\t\t\t$color = $name;\n\t\t\t$d2 = $dtmp;\n\t\t}\n\t}\n\techo $color . \"\\n\";\n}"
  },
  {
    "language": "PHP",
    "code": "<?php\n\n$ref = array(\n\t'black' => array(0, 0, 0),\n\t'blue' => array(0, 0, 255),\n\t'lime' => array(0, 255, 0),\n\t'aqua' => array(0, 255, 255),\n\t'red' => array(255, 0, 0),\n\t'fuchsia' => array(255, 0, 255),\n\t'yellow' => array(255, 0, 0),\n\t'white' => array(255, 255, 255),\n);\n\nwhile ($line = trim(fgets(STDIN))) {\n\t$r = hexdec(substr($line, 1, 2));\n\t$g = hexdec(substr($line, 3, 2));\n\t$b = hexdec(substr($line, 5, 2));\n\t$d2 = PHP_INT_MAX;\n\t$color = '';\n\tforeach ($ref as $name => $c) {\n\t\t$dtmp = ($r - $c[0]) * ($r - $c[0]) + ($g - $c[1]) * ($g - $c[1]) + ($b - $c[2]) * ($b - $c[2]);\n\t\tif ($dtmp < $d2) {\n\t\t\t$color = $name;\n\t\t\t$d2 = $dtmp;\n\t\t}\n\t}\n\techo $color . \"\\n\";\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\n\nint[] r = [0, 0, 0, 0, 255, 255, 255, 255];\nint[] g = [0, 0, 255, 255, 0, 0, 255, 255];\nint[] b = [0, 255, 0, 255, 0, 255, 0, 255];\nstring[] name = [\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"];\n\nvoid main(){\n\tstring s;\n\tint ans, n, t; \n\twhile (s = readln(), s != \"0\\n\") {\n\t\tn = int.max;\n\t\tforeach (i; 0..8) {\n\t\t\tt = (r[i] - toInt(s[1..3]))^^2 + (g[i] - toInt(s[3..5]))^^2 + (b[i] - toInt(s[5..7]))^^2;\n\t\t\tif (n > t) {\n\t\t\t\tn = t;\n\t\t\t\tans = i;\n\t\t\t}\n\t\t}\n\t\twriteln(name[ans]);\n\t}\n}\n\nint toInt(string str){\n\tint x, y;\n\tx = str[0] > '9' ? str[0] - 'a' + 10 : str[0] - '0';\n\ty = str[1] > '9' ? str[1] - 'a' + 10 : str[1] - '0';\n\treturn x*16+y;\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.conv;\nimport std.string;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.math;\nimport std.regex : regex;\nimport std.container;\n\nint color (int[] c1, int[] c2) {\n  return (c1[0] - c2[0])^^2 + (c1[1] - c2[1])^^2 + (c1[2] - c2[2])^^2;\n}\n\nvoid main()\n{\n  auto col = [\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"];\n  auto rgb = [[0, 0, 0],\n              [0, 0, 255],\n              [0, 255, 0],\n              [0, 255, 255],\n              [255, 0, 0],\n              [255, 0, 255],\n              [255, 255, 0],\n              [255, 255, 255]\n             ];\n\tforeach (line; stdin.byLine) {\n    auto x = line.chomp;\n    if (x == \"0\") break;\n    auto a = x[1..$].map!(x => x >= 'a' ? x - 'a' + 11 : x - '0').array;\n    int c[3];\n    foreach (i; 0..3) {\n      c[i] = a[i*2] * 16 + a[i*2+1];\n    }\n    auto maxi = int.max;\n    string name;\n    foreach (i, e; rgb) {\n      auto t = color(c, e);\n      if (t < maxi) {\n        maxi = t;\n        name = col[i];\n      }\n    }\n    name.writeln;\n  }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.conv;\nimport std.string;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.math;\nimport std.regex : regex;\nimport std.container;\n\ndouble color (int[] c1, int[] c2) {\n  return sqrt((c1[0] - c2[0]).to!float^^2 + (c1[1] - c2[1])^^2 + (c1[2] - c2[2])^^2);\n}\n\nvoid main()\n{\n  auto col = [\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"];\n  auto rgb = [[0, 0, 0],\n              [0, 0, 255],\n              [0, 255, 0],\n              [0, 255, 255],\n              [255, 0, 0],\n              [255, 0, 255],\n              [255, 255, 0],\n              [255, 255, 255]\n             ];\n\tforeach (line; stdin.byLine) {\n    auto x = line.chomp;\n    if (x == \"0\") break;\n    auto a = x[1..$].map!(x => x >= 'a' ? x - 'a' + 11 : x - '0').array;\n    int c[3];\n    foreach (i; 0..3) {\n      c[i] = a[i*2] * 16 + a[i*2+1];\n    }\n    auto maxi = double.max;\n    string name;\n    foreach (i, e; rgb) {\n      auto t = color(c, e);\n      if (t < maxi) {\n        maxi = t;\n        name = col[i];\n      }\n    }\n    name.writeln;\n  }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.conv;\nimport std.string;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.math;\nimport std.regex : regex;\nimport std.container;\n\nint color (int[] c1, int[] c2) {\n  return (c1[0] - c2[0])^^2 + (c1[1] - c2[1])^^2 + (c1[2] - c2[2])^^2;\n}\n\nvoid main()\n{\n  auto col = [\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"];\n  auto rgb = [[0, 0, 0],\n              [0, 0, 255],\n              [0, 255, 0],\n              [0, 255, 255],\n              [255, 0, 0],\n              [255, 0, 255],\n              [255, 255, 0],\n              [255, 255, 255]\n             ];\n\tforeach (line; stdin.byLine) {\n    auto x = line.chomp;\n    if (x == \"0\") break;\n    auto a = x[1..$].map!(x => x >= 'a' ? x - 'a' + 10 : x - '0').array;\n    int c[3];\n    foreach (i; 0..3) {\n      c[i] = a[i*2] * 16 + a[i*2+1];\n    }\n    auto maxi = int.max;\n    string name;\n    foreach (i, e; rgb) {\n      auto t = color(c, e);\n      if (t < maxi) {\n        maxi = t;\n        name = col[i];\n      }\n    }\n    name.writeln;\n  }\n}"
  },
  {
    "language": "D",
    "code": "import std.algorithm;\nimport std.array;\nimport std.ascii;\nimport std.bigint;\nimport std.complex;\nimport std.container;\nimport std.conv;\nimport std.functional;\nimport std.math;\nimport std.range;\nimport std.stdio;\nimport std.string;\nimport std.typecons;\n\nauto readInts() {\n\treturn array(map!(to!int)(readln().strip().split()));\n}\nauto readInt() {\n\treturn readInts()[0];\n}\nauto readLongs() {\n\treturn array(map!(to!long)(readln().strip().split()));\n}\nauto readLong() {\n\treturn readLongs()[0];\n}\n\nvoid readlnTo(T...)(ref T t) {\n    auto s = readln().split();\n    assert(s.length == t.length);\n    foreach(ref ti; t) {\n        ti = s[0].to!(typeof(ti));\n        s = s[1..$];\n    }\n}\n\nconst real eps = 1e-10;\n\nconst long p = 1_000_000_000 + 7;\n\nint diff(in int[] a, in int[] b) {\n    return reduce!((a, b) => a + pow(b[1]-b[0], 2))(0, zip(a, b));\n}\n\nstring calc(string l) {\n    auto color = [\n        \"black\": [0, 0, 0],\n        \"blue\": [0, 0, 0xff],\n        \"lime\": [0, 0xff, 0],\n        \"aqua\": [0, 0xff, 0xff],\n        \"red\": [0xff, 0, 0],\n        \"fuchsia\": [0xff, 0, 0xff],\n        \"yellow\": [0xff, 0xff, 0],\n        \"white\": [0xff, 0xff, 0xff]\n    ];\n\n        auto r = to!int(l[1..3], 16);\n        auto g = to!int(l[3..5], 16);\n        auto b = to!int(l[5..7], 16);\n        string ans = \"black\";\n        foreach(name, value; color) {\n            if(diff(value, [r, g, b]) < diff(color[ans], [r, g, b])) {\n                ans = name;\n            }\n        }\n        return ans;\n}\n\nvoid main(){\n    while(true) {\n        auto l = readln().chomp();\n        if(l == \"0\") {\n            return;\n        }\n        writeln(calc(l));\n    }\n}"
  },
  {
    "language": "Python",
    "code": "ff=255\nclr=[\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"]\nval=[[0,0,0],[0,0,ff],[0,ff,0],[0,ff,ff],[ff,0,0],[ff,0,ff],[ff,ff,0],[ff,ff,ff]]\n\ndef L(s1,s2):\n\treturn ((s1[0]-s2[0])**2+(s1[1]-s2[1])**2+(s1[2]-s2[2])**2)**0.5\n\t\nwhile 1:\n\trgb=raw_input()\n\tif rgb==\"0\":break\n\trgb=[int(rgb[1:3],16),int(rgb[3:5],16),int(rgb[5:],16)]\n\tprint clr[min([[L(rgb,val[i]),i] for i in range(8)])[1]]"
  },
  {
    "language": "Python",
    "code": "import math\n\ndef proc(s):\n    r=int(s[0:2],16)\n    g=int(s[2:4],16)\n    b=int(s[4:6],16)\n    return (r,g,b)\n\ndef dist(a,b):\n    sum=0\n    for i in xrange(3):\n        sum+=(a[i]-b[i])**2\n    return math.sqrt(sum)\n\ncolors={ 'black':'000000','blue':'0000ff','lime':'00ff00',\n'aqua':'00ffff','red':'ff0000','fuchsia':'ff00ff',\n'yellow':'ffff00','white':'ff''ff''ff'}\n\n\nwhile True:\n    try:\n        s=raw_input()[1:]\n        if s==\"\": break\n        mind=255*255*255\n        for i in colors:\n            if dist(proc(s),proc(colors[i]))<mind:\n                mind=dist(proc(s),proc(colors[i]))\n                color=i\n        print color\n    except EOFError: break"
  },
  {
    "language": "Python",
    "code": "color = {\n    \"000000\": \"black\",\n    \"0000ff\": \"blue\",\n    \"00ff00\": \"lime\",\n    \"00ffff\": \"aqua\",\n    \"ff0000\": \"red\",\n    \"ff00ff\": \"fuchsia\",\n    \"ffff00\": \"yellow\",\n    \"ffffff\": \"white\"\n}\n \nwhile True:\n    n = input()\n    if n == '0': break\n    code = ''\n    for f, s in zip(n[1::2], n[2::2]):\n        if int(f+s, 16) <= 127:\n            code += '00'\n        else:\n            code += 'ff'\n    print(color[code])\n\n"
  },
  {
    "language": "Python",
    "code": "clr=[\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsia\",\"yellow\",\"white\"]\nhex=[\"000000\",\"0000ff\",\"00ff00\",\"00ffff\",\"ff0000\",\"ff00ff\",\"ffff00\",\"ffffff\"]\ndef L(s1,s2):\n\treturn ((int(s1[:2],16)-int(s2[:2],16))**2+(int(s1[2:4],16)-int(s2[2:4],16))**2+(int(s1[4:],16)-int(s2[4:],16))**2)**0.5\n\ndef nn(s):\n\tmn=mni=99999\n\tfor i in range(8):\n\t\tif mn>L(hex[i],s):\n\t\t\tmn=L(hex[i],s);mni=i\n\treturn mni\n\nwhile 1:\n\trgb=raw_input()\n\tif rgb==\"0\":break\n\tprint clr[nn(rgb[1:])]"
  },
  {
    "language": "Python",
    "code": "from collections import OrderedDict\ncolors = OrderedDict()\ncolors['black'] = [0, 0, 0]\ncolors['blue'] = [0, 0, 255]\ncolors['lime'] = [0, 255, 0]\ncolors['aqua'] = [0, 255, 255]\ncolors['red'] = [255, 0, 0]\ncolors['fuchsia'] = [255, 0, 255]\ncolors['yellow'] = [255, 255, 0]\ncolors['white'] = [255, 255, 255]\n\nwhile True:\n    color = input()\n    if color == '0':\n        break\n    r, g, b = (int(color[1:3], 16),\n               int(color[3:5], 16),\n               int(color[5:7], 16))\n    near_color = ['', float('inf')]\n    for k, v in colors.items():\n        dk = ((v[0] - r) ** 2 +\n              (v[1] - g) ** 2 +\n              (v[2] - b) ** 2) ** .5\n        if dk < near_color[1]:\n            near_color = [k, dk]\n    print(near_color[0])\n\n"
  },
  {
    "language": "Python",
    "code": "colors = {\n    'black': [0, 0, 0],\n    'blue': [0, 0, 255],\n    'lime': [0, 255, 0],\n    'aqua': [0, 255, 255],\n    'red': [255, 0, 0],\n    'fuchsia': [255, 0, 255],\n    'yellow':  [255, 255, 0],\n    'white': [255, 255, 255]\n}\n\nwhile True:\n    color = input()\n    if color == '0':\n        break\n    r, g, b = (int(color[1:3], 16),\n               int(color[3:5], 16),\n               int(color[5:7], 16))\n    print(r, g, b)\n    near_color = ['', float('inf')]\n    for k, v in colors.items():\n        dk = ((v[0] - r) ** 2 +\n              (v[1] - g) ** 2 +\n              (v[2] - b) ** 2) ** .5\n        if dk < near_color[1]:\n            near_color = [k, dk]\n    print(near_color[0])\n\n"
  },
  {
    "language": "Python",
    "code": "import math\nL=[\n(\"black\",00,00,00),\n(\"blue\",00,00,255),\n(\"lime\",00,255,00),\n(\"aqua\",00,255,255),\n(\"red\",255,00,00),\n(\"fuchsia\",255,00,255),\n(\"yellow\",255,255,00),\n(\"white\",255,255,255)]\nwhile True:\n    c=raw_input()\n    if c==\"0\":break\n    Rk,Gk,Bk=int(c[1:3],16),int(c[3:5],16),int(c[5:7],16)\n    m=10000\n    for cl,r,g,b in L:\n        t=math.sqrt(pow(r-Rk,2)+pow(g-Gk,2)+pow(b-Bk,2))\n        if t<m:\n            m=t\n            color=cl\n    print color"
  },
  {
    "language": "Python",
    "code": "import math\n\ndef solve(line):\n\tR = int(line[1:3], 16)\n\tG = int(line[3:5], 16)\n\tB = int(line[5:7], 16)\n\t\n\tsa_black = math.sqrt(R**2 + G**2 + B**2)\n\tsa_max = sa_black\n\tans_color = \"black\"\n\t\n\tsa_blue = math.sqrt(R**2 + G**2 + (B - 255)**2)\n\tif sa_blue < sa_max:\n\t\tsa_max = sa_blue\n\t\tans_color = \"blue\"\n\t\n\tsa_lime = math.sqrt(R**2 + (G - 255)**2 + B**2)\n\tif sa_lime < sa_max:\n\t\tsa_max = sa_lime\n\t\tans_color = \"lime\"\n\t\n\tsa_aqua = math.sqrt(R**2 + (G - 255)**2 + (B - 255)**2)\n\tif sa_aqua < sa_max:\n\t\tsa_max = sa_aqua\n\t\tans_color = \"aqua\"\n\t\n\tsa_red = math.sqrt((R - 255)**2 + G**2 + B**2)\n\tif sa_red < sa_max:\n\t\tsa_max = sa_red\n\t\tans_color = \"red\"\n\t\n\tsa_fuchsia = math.sqrt((R - 255)**2 + G**2 + (B - 255)**2)\n\tif sa_fuchsia < sa_max:\n\t\tsa_max = sa_fuchsia\n\t\tans_color = \"fuchsia\"\n\t\n\tsa_yellow = math.sqrt((R - 255)**2 + (G - 255)**2 + B**2)\n\tif sa_yellow < sa_max:\n\t\tsa_max = sa_yellow\n\t\tans_color = \"yellow\"\n\t\n\tsa_white = math.sqrt((R - 255)**2 + (G - 255)**2 + (B - 255)**2)\n\tif sa_white < sa_max:\n\t\tsa_max = sa_white\n\t\tans_color = \"white\"\n\n\treturn ans_color\n\nwhile True:\n\tline = input()\n\tif line == '0': break\n\tprint(solve(line))"
  },
  {
    "language": "Python",
    "code": "while True:\n    N = input()\n    if N == \"0\":\n        break\n\n    r = int(N[1:3],16)\n    g = int(N[3:5],16)\n    b = int(N[5:7],16)\n\n    ans = \"\"\n    D = 255*255*3+1\n\n    R, G, B = 0, 0, 0\n    d = (R-r)**2 + (G-g)**2 + (B-b)**2\n    if d < D:\n        D = d\n        ans = \"black\"\n\n    R, G, B = 0, 0, 255\n    d = (R - r) ** 2 + (G - g) ** 2 + (B - b) ** 2\n    if d < D:\n        D = d\n        ans = \"blue\"\n\n    R, G, B = 0, 255, 0\n    d = (R - r) ** 2 + (G - g) ** 2 + (B - b) ** 2\n    if d < D:\n        D = d\n        ans = \"lime\"\n\n    R, G, B = 0, 255, 255\n    d = (R - r) ** 2 + (G - g) ** 2 + (B - b) ** 2\n    if d < D:\n        D = d\n        ans = \"aqua\"\n\n    R, G, B = 255, 0, 0\n    d = (R - r) ** 2 + (G - g) ** 2 + (B - b) ** 2\n    if d < D:\n        D = d\n        ans = \"red\"\n\n    R, G, B = 255, 0, 255\n    d = (R - r) ** 2 + (G - g) ** 2 + (B - b) ** 2\n    if d < D:\n        D = d\n        ans = \"fuchsia\"\n\n    R, G, B = 255, 255, 0\n    d = (R - r) ** 2 + (G - g) ** 2 + (B - b) ** 2\n    if d < D:\n        D = d\n        ans = \"yellow\"\n\n    R, G, B = 255, 255, 255\n    d = (R - r) ** 2 + (G - g) ** 2 + (B - b) ** 2\n    if d < D:\n        D = d\n        ans = \"white\"\n\n    print(ans)\n\n"
  },
  {
    "language": "Python",
    "code": "dc = {\n    \"black\":(0,0,0),\n    \"blue\":(0,0,255),\n    \"lime\":(0,255,0),\n    \"aqua\":(0,255,255),\n    \"red\":(255,0,0),\n    \"fuchsia\":(255,0,255),\n    \"yellow\":(255,255,0),\n    \"white\":(255,255,255)\n}\nwhile 1:\n    s = raw_input()\n    if s==\"0\": break\n    g = [int(s[2*i+1:2*i+3],16) for i in xrange(3)]\n    m = 1000000; ans = \"\";\n    for k,v in dc.items():\n        d = sum((v[i]-g[i])**2 for i in xrange(3))\n        if d<m:\n            m = d; ans = k;\n    print ans"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0176\n\n\"\"\"\nimport sys\nfrom sys import stdin\nfrom collections import namedtuple\nfrom math import sqrt\ninput = stdin.readline\n\n\ncolor = namedtuple('color', ['name', 'r', 'g', 'b'])\ndef main(args):\n    references = [color('black',   0x00, 0x00, 0x00), color('blue', 0x00, 0x00, 0xff), color('lime',    0x00, 0xff, 0x00),\n                  color('aqua',    0x00, 0xff, 0xff), color('red',  0xff, 0x00, 0x00), color('fuchsia', 0xff, 0x00, 0xff),\n                  color('yellow', 0xff, 0xff, 0x00), color('white', 0xff, 0xff, 0xff)]\n\n    while True:\n        data = input().strip()\n        if data[0] == '0':\n            break\n        my_r = int(data[1:3], 16)\n        my_g = int(data[3:5], 16)\n        my_b = int(data[5:7], 16)\n\n        # distances = []\n        #  for c in references:\n        #      d = sqrt((c.r - my_r)**2 + (c.g - my_g)**2 + (c.b - my_b)**2)\n        #      distances.append(d)\n        distances = [((c.r - my_r)**2 + (c.g - my_g)**2 + (c.b - my_b)**2) for c in references]\n\n        closest_distance = min(distances)\n        closest_color = distances.index(closest_distance)\n        print(references[closest_color].name)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])"
  },
  {
    "language": "Python",
    "code": "colors = {}\ncolors['black'] = [0, 0, 0]\ncolors['blue'] = [0, 0, 255]\ncolors['lime'] = [0, 255, 0]\ncolors['aqua'] = [0, 255, 255]\ncolors['red'] = [255, 0, 0]\ncolors['fuchsia'] = [255, 0, 255]\ncolors['yellow'] = [255, 255, 0]\ncolors['white'] = [255, 255, 255]\n\nwhile True:\n    color = input()\n    if color == '0':\n        break\n    r, g, b = (int(color[1:3], 16),\n               int(color[3:5], 16),\n               int(color[5:7], 16))\n    print(r, g, b)\n    near_color = ['', float('inf')]\n    for k, v in colors.items():\n        dk = ((v[0] - r) ** 2 +\n              (v[1] - g) ** 2 +\n              (v[2] - b) ** 2) ** .5\n        if dk < near_color[1]:\n            near_color = [k, dk]\n    print(near_color[0])\n\n"
  },
  {
    "language": "Python",
    "code": "import math\n\nsample1 = [ [0, 0, 0], [0, 0, 255], [0, 255, 0], [0, 255, 255], [255, 0, 0], [255, 0, 255], [255, 255, 0], [255, 255, 255] ]\nsample2 = ['black', 'blue', 'lime', 'aqua', 'red', 'fuchsia', 'yellow', 'white']\n\nwhile True:\n    color = input()\n    \n    if color=='0':\n        break\n    \n    Color = list(color)\n    Color.pop(0)\n    for i in range(6):\n        if Color[i]=='a':\n            Color.pop(i)\n            Color.insert(i,10)\n        if Color[i]=='b':\n            Color.pop(i)\n            Color.insert(i,11)\n        if Color[i]=='c':\n            Color.pop(i)\n            Color.insert(i,12)\n        if Color[i]=='d':\n            Color.pop(i)\n            Color.insert(i,13)\n        if Color[i]=='e':\n            Color.pop(i)\n            Color.insert(i,14)\n        if Color[i]=='f':\n            Color.pop(i)\n            Color.insert(i,15)\n    \n    R = int(Color[0])*16 + int(Color[1])\n    G = int(Color[2])*16 + int(Color[3])\n    B = int(Color[4])*16 + int(Color[5])\n    \n    D = []\n    for i in range(8):\n        d = math.sqrt( (R-sample1[i][0])**2 + (G-sample1[i][1])**2 + (B-sample1[i][2])**2 )\n        D.append(d)\n    dmin = min(D)\n    index = D.index(dmin)\n    print(sample2[index])\n"
  },
  {
    "language": "Python",
    "code": "import math\n\n\ndef translate(color):\n    ret = 0\n    cnt = 0\n    for c in color:\n        if c == \"f\":\n            num = 15\n        elif c == \"e\":\n            num = 14\n        elif c == \"d\":\n            num = 13\n        elif c == \"c\":\n            num = 12\n        elif c == \"b\":\n            num = 11\n        elif c == \"a\":\n            num = 10\n        else:\n            num = int(c)\n\n        if cnt == 0:\n            ret += num * 16\n            cnt += 1\n        else:\n            ret += num\n\n    return ret\n\n\ncolor = [\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"]\nstlength = [[0, 0, 0], [0, 0, 255], [0, 255, 0], [0, 255, 255],\n            [255, 0, 0], [255, 0, 255], [255, 255, 0], [255, 255, 255]]\n\nwhile 1:\n    n = input()\n    if n == \"0\":\n        break\n\n    red = n[1:3]\n    green = n[3:5]\n    blue = n[5:7]\n\n    red = translate(red)\n    green = translate(green)\n    blue = translate(blue)\n\n    ans = 10**9\n    for i, stl in enumerate(stlength):\n        distance = math.sqrt(\n            (stl[0]-red)**2 + (stl[1]-green)**2 + (stl[2]-blue)**2)\n        if distance < ans:\n            ans = distance\n            name = color[i]\n\n    print(name)\n\n"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0176\n\n\"\"\"\nimport sys\nfrom sys import stdin\nfrom collections import namedtuple\nfrom math import sqrt\ninput = stdin.readline\n\n\ncolor = namedtuple('color', ['name', 'r', 'g', 'b'])\ndef main(args):\n    references = [color('black',   0x00, 0x00, 0x00), color('blue', 0x00, 0x00, 0xff), color('lime',    0x00, 0xff, 0x00),\n                  color('aqua',    0x00, 0xff, 0xff), color('red',  0xff, 0x00, 0x00), color('fuchsia', 0xff, 0x00, 0xff),\n                  color('yellow', 0xff, 0xff, 0x00), color('white', 0xff, 0xff, 0xff)]\n\n    while True:\n        data = input().strip()\n        if data[0] == '0':\n            break\n        my_r = int(data[1:3], 16)\n        my_g = int(data[3:5], 16)\n        my_b = int(data[5:7], 16)\n\n        distances = []\n        for c in references:\n            d = sqrt((c.r - my_r)**2 + (c.g - my_g)**2 + (c.b - my_b)**2)\n            distances.append(d)\n\n        closest_distance = min(distances)\n        closest_color = distances.index(closest_distance)\n        print(references[closest_color].name)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])"
  },
  {
    "language": "Python",
    "code": "from collections import OrderedDict\ncolors = OrderedDict()\ncolors['black'] = [0, 0, 0]\ncolors['blue'] = [0, 0, 255]\ncolors['lime'] = [0, 255, 0]\ncolors['aqua'] = [0, 255, 255]\ncolors['red'] = [255, 0, 0]\ncolors['fuchsia'] = [255, 0, 255]\ncolors['yellow'] = [255, 255, 0]\ncolors['white'] = [255, 255, 255]\n\nwhile True:\n    color = input()\n    if color == '0':\n        break\n    r, g, b = (int(color[1:3], 16),\n               int(color[3:5], 16),\n               int(color[5:7], 16))\n    print(r, g, b)\n    near_color = ['', float('inf')]\n    for k, v in colors.items():\n        print(k)\n        dk = ((v[0] - r) ** 2 +\n              (v[1] - g) ** 2 +\n              (v[2] - b) ** 2) ** .5\n        if dk < near_color[1]:\n            near_color = [k, dk]\n    print(near_color[0])\n\n"
  },
  {
    "language": "Python",
    "code": "# Aizu Problem 0176: What Color?\n#\nimport sys, math, os, bisect\n\n# read input:\nPYDEV = os.environ.get('PYDEV')\nif PYDEV==\"True\":\n    sys.stdin = open(\"sample-input.txt\", \"rt\")\n\ncolors = {\"black\": \"#000000\", \"blue\": \"#0000ff\", \"lime\": \"#00ff00\",\n          \"aqua\": \"#00ffff\", \"red\": \"#ff0000\", \"fuchsia\": \"#ff00ff\",\n          \"yellow\": \"#ffff00\", \"white\": \"#ffffff\"}\n\ndef distance(cc1, cc2):\n    r1 = int(cc1[1:3], 16)\n    r2 = int(cc2[1:3], 16)\n    g1 = int(cc1[3:5], 16)\n    g2 = int(cc2[3:5], 16)\n    b1 = int(cc1[5:], 16)\n    b2 = int(cc2[5:], 16)\n    return math.sqrt((r1 - r2)**2 + (g1 - g2)**2 + (b1 - b2)**2)\n\n    \ndef get_color(cc):\n    min_dist = float('Inf')\n    for color in colors:\n        dist = distance(cc, colors[color])\n        if dist < min_dist:\n            min_dist = dist\n            best = color\n    return best\n\n\nwhile True:\n    cc = input().strip()\n    if cc[0] == '0':\n        break\n    print(get_color(cc))"
  },
  {
    "language": "Python",
    "code": "# 参考:http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=2797666#1\n\nCOLOR = {\n    \"000000\": \"black\",\n    \"0000ff\": \"blue\",\n    \"00ff00\": \"lime\",\n    \"00ffff\": \"aqua\",\n    \"ff0000\": \"red\",\n    \"ff00ff\": \"fuchsia\",\n    \"ffff00\": \"yellow\",\n    \"ffffff\": \"white\"\n}\n\nwhile True:\n    s = input()\n    if len(s) == 1:\n        break\n    color = \"\"\n\n    for first, second in zip(s[1::2], s[2::2]):\n        if int(first + second, 16) <= 127:\n            color += \"00\"\n        else:\n            color += \"ff\"\n    print(COLOR[color])\n"
  },
  {
    "language": "Python",
    "code": "COLOR = {\n    \"000000\": \"black\",\n    \"0000ff\": \"blue\",\n    \"00ff00\": \"lime\",\n    \"00ffff\": \"aqua\",\n    \"ff0000\": \"red\",\n    \"ff00ff\": \"fuchsia\",\n    \"ffff00\": \"yellow\",\n    \"ffffff\": \"white\"\n}\n\nwhile True:\n\n    input_data = input()\n\n    if len(input_data) == 1:\n        break\n\n    color_code = \"\"\n\n    for first, second in zip(input_data[1::2], input_data[2::2]):\n        if int(first + second, 16) <= 127:\n            color_code += \"00\"\n        else:\n            color_code += \"ff\"\n\n    print(COLOR[color_code])\n\n"
  },
  {
    "language": "Python",
    "code": "C = 'black blue lime aqua red fuchsia yellow white'.split()\nwhile 1:\n  a = raw_input()\n  if a==\"0\": break\n  print C[int(\"\".join(['01'[int(a[i],16)>7] for i in [1,3,5]]),2)]"
  },
  {
    "language": "Python",
    "code": "import math\n\nwhile True :\n    q = input()\n    \n    if(q == \"0\") :\n        break\n    \n    else :\n        Color = [\"black\", \"blue\", \"lime\", \"aqua\", \"red\", \"fuchsia\", \"yellow\", \"white\"]\n        f = int(\"ff\", 16)\n        r = int(q[1] + q[2], 16)\n        g = int(q[3] + q[4], 16)\n        b = int(q[5] + q[6], 16)\n        \n        d1 = math.sqrt(r ** 2 + g ** 2 + b ** 2)\n        d2 = math.sqrt(r ** 2 + g ** 2 + (b - f) ** 2)\n        d3 = math.sqrt(r ** 2 + (g - f) ** 2 + b ** 2)\n        d4 = math.sqrt(r ** 2 + (g - f) ** 2 + (b - f) ** 2)\n        d5 = math.sqrt((r - f) ** 2 + g ** 2 + b ** 2)\n        d6 = math.sqrt((r - f) ** 2 + g ** 2 + (b - f) ** 2)\n        d7 = math.sqrt((r - f) ** 2 + (g - f) ** 2 + b ** 2)\n        d8 = math.sqrt((r - f) ** 2 + (g - f) ** 2 + (b - f) ** 2)\n        \n        D = [d1, d2, d3, d4, d5, d6, d7, d8]\n        \n        d = min(D)\n        print(Color[D.index(d)])\n"
  },
  {
    "language": "Python",
    "code": "import math\nwhile True :\n    color = [[0, 0, 0], [0, 0, 255], [0, 255, 0], [0, 255, 255], \n    [255, 0, 0], [255, 0, 255], [255, 255, 0], [255, 255, 255]]\n\n    color_16 = input()\n    if color_16 == \"0\" :\n        break\n    \n    color_R = int(color_16[1] + color_16[2], 16)\n    color_G = int(color_16[3] + color_16[4], 16)\n    color_B = int(color_16[5] + color_16[6], 16)\n    \n    min_d = 500\n    for i in range(8) :\n        R = color[i][0]\n        G = color[i][1]\n        B = color[i][2]\n        d = math.sqrt((R - color_R)**2 + (G - color_G)**2 + (B - color_B)**2)\n        if min_d > d :\n            min_d = d\n            color_num = i\n    \n    if color_num == 0 :\n        print(\"black\")\n    elif color_num == 1 :\n        print(\"blue\") \n    elif color_num == 2 :\n        print(\"lime\")\n    elif color_num == 3 :\n        print(\"aqua\")\n    elif color_num == 4 :\n        print(\"red\")\n    elif color_num == 5 :\n        print(\"fuchsia\")\n    elif color_num == 6 :\n        print(\"yellow\")\n    else :\n        print(\"white\")\n    \n"
  },
  {
    "language": "Python",
    "code": "# AOJ 0176: What Color?\n# Python3 2018.6.19 bal4u\n\ncolor = [ \\\n\t[ \"black\",      0,    0,    0 ], \\\n\t[ \"blue\",       0,    0, 0xff ], \\\n\t[ \"lime\",       0, 0xff,    0 ], \\\n\t[ \"aqua\",       0, 0xff, 0xff ], \\\n\t[ \"red\",\t 0xff,    0,    0 ], \\\n\t[ \"fuchsia\", 0xff,    0, 0xff ], \\\n\t[ \"yellow\",  0xff, 0xff,    0 ], \\\n\t[ \"white\",   0xff, 0xff, 0xff ]]\n\nwhile True:\n\ta = list(input())\n\tif a[0] == '0': break\n\tr, g, b = int(a[1]+a[2], 16), int(a[3]+a[4], 16), int(a[5]+a[6], 16)\n\tvmin = 3* 0xff**2\n\tfor i in color:\n\t\td = (r-i[1])**2 + (g-i[2])**2 + (b-i[3])**2\n\t\tif d < vmin: j, vmin = i, d\n\tprint(j[0])\n\n"
  },
  {
    "language": "Python",
    "code": "from operator import add\ncolor = {\"black\":\"000000\",\"blue\":\"0000ff\",\n         \"lime\":\"00ff00\",\"aqua\":\"00ffff\",\n         \"red\":\"ff0000\",\"fuchsia\":\"ff00ff\",\n         \"yellow\":\"ffff00\",\"white\":\"ffffff\"}\n\ndef parse(s):\n    return map(lambda x:int(x,16), map(add,s[::2],s[1::2]))\n\ndef d(s1, s2,k):\n    return sum(map(lambda a,b:(a-b)**2, *map(parse,(s1,s2))))\n\nwhile True:\n    s = raw_input()\n    if s == \"0\":\n        break\n    print min(color.items(), key = lambda (k,v):d(s[1:],v,k))[0]"
  },
  {
    "language": "Python",
    "code": "import math\n\ndef solve(line):\n\tR = int(line[1:3], 16)\n\tG = int(line[3:5], 16)\n\tB = int(line[5:7], 16)\n\t\n\tsa_black = math.sqrt(R**2 + G**2 + B**2)\n\tsa_max = sa_black\n\tans_color = \"black\"\n\t\n\tsa_blue = math.sqrt(R**2 + G**2 + (B - 255)**2)\n\tif sa_blue < sa_max:\n\t\tsa_max = sa_blue\n\t\tans_color = \"blue\"\n\t\n\tsa_lime = math.sqrt(R**2 + (G - 255)**2 + B**2)\n\tif sa_lime < sa_max:\n\t\tsa_max = sa_lime\n\t\tans_color = \"lime\"\n\t\n\tsa_aqua = math.sqrt(R**2 + (G - 255)**2 + (B - 255)**2)\n\tif sa_aqua < sa_max:\n\t\tsa_max = sa_aqua\n\t\tans_color = \"aqua\"\n\t\n\tsa_red = math.sqrt((R - 255)**2 + G**2 + B**2)\n\tif sa_red < sa_max:\n\t\tsa_max = sa_red\n\t\tans_color = \"red\"\n\t\n\tsa_fuchsia = math.sqrt((R - 255)**2 + G**2 + (B - 255)**2)\n\tif sa_fuchsia < sa_max:\n\t\tsa_max = sa_fuchsia\n\t\tans_color = \"fuchsia\"\n\t\n\tsa_yellow = math.sqrt((R - 255)**2 + (G - 255)**2 + B**2)\n\tif sa_yellow < sa_max:\n\t\tsa_max = sa_yellow\n\t\tans_color = \"blue\"\n\t\n\tsa_white = math.sqrt((R - 255)**2 + (G - 255)**2 + (B - 255)**2)\n\tif sa_white < sa_max:\n\t\tsa_max = sa_white\n\t\tans_color = \"white\"\n\n\treturn ans_color\n\nwhile True:\n\tline = input()\n\tif line == '0': break\n\tprint(solve(line))"
  },
  {
    "language": "Python",
    "code": "clr=[\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsha\",\"yellow\",\"white\"]\nhex=[\"000000\",\"0000ff\",\"00ff00\",\"00ffff\",\"ff0000\",\"ff00ff\",\"ffff00\",\"ffffff\"]\ndef L(s1,s2):\n\treturn ((int(s1[:2],16)-int(s2[:2],16))**2+(int(s1[2:4],16)-int(s2[2:4],16))**2+(int(s1[4:],16)-int(s2[4:],16))**2)**0.5\n\ndef nn(s):\n\tmn=mni=999\n\tfor i in range(8):\n\t\tif mn>L(hex[i],s):\n\t\t\tmn=L(hex[i],s);mni=i\n\treturn mni\n\nwhile 1:\n\trgb=raw_input()\n\tif rgb==\"0\":break\n\tprint clr[nn(rgb[1:])]"
  },
  {
    "language": "Python",
    "code": "import math\n\ndef f(n):\n    t = 0\n    for i, c in enumerate(n):\n        if c.isdigit():\n            t += int(c)*(16**(1-i))\n        else:\n            if c == 'a':\n                t += (16**(1-i))*10\n            elif c == 'b':\n                t += (16**(1-i))*11\n            elif c == 'c':\n                t += (16**(1-i))*12\n            elif c == 'd':\n                t += (16**(1-i))*13\n            elif c == 'e':\n                t += (16**(1-i))*14\n            elif c == 'f':\n                t += (16**(1-i))*15\n    return t\n\ndef aaa():\n    color = None\n    s = None\n    for k, v in data.items():\n        t = 0\n        for i in range(3):\n            t += (RGB[i]-v[i])**2\n        else:\n            dk = math.sqrt(t)\n        if s is None or dk < s:\n            color = k\n            s = dk\n    else:\n        print color\n\ndata = {'black':(0, 0, 0), \n        'blue':(0, 0, 255),\n        'lime':(0, 255, 0),\n        'aqua':(0, 255, 255),\n        'red':(255, 0, 0),\n        'fuchsia':(255, 0, 255),\n        'yellow':(255, 255, 0),\n        'white':(255, 255, 255)}\n\nwhile True:\n    line = raw_input()\n    if line == '0': break\n    color = line[1:]\n    RGB = [f(color[i:i+2]) for i in range(0, 6, 2)]\n    aaa()"
  },
  {
    "language": "Python",
    "code": "clr=[\"black\",\"blue\",\"lime\",\"aqua\",\"red\",\"fuchsha\",\"yellow\",\"white\"]\nhex=[\"000000\",\"0000ff\",\"00ff00\",\"00ffff\",\"ff0000\",\"ff00ff\",\"ffff00\",\"ffffff\"]\ndef L(s1,s2):\n\treturn ((int(s1[:2],16)-int(s2[:2],16))**2+(int(s1[2:4],16)-int(s2[2:4],16))**2+(int(s1[4:],16)-int(s2[4:],16))**2)**0.5\n\ndef nn(s):\n\tmn=mni=99999\n\tfor i in range(8):\n\t\tif mn>L(hex[i],s):\n\t\t\tmn=L(hex[i],s);mni=i\n\treturn mni\n\nwhile 1:\n\trgb=raw_input()\n\tif rgb==\"0\":break\n\tprint clr[nn(rgb[1:])]"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0176\n\n\"\"\"\nimport sys\nfrom sys import stdin\nfrom collections import namedtuple\nfrom math import sqrt\ninput = stdin.readline\n\n\ncolor = namedtuple('color', ['name', 'r', 'g', 'b'])\ndef main(args):\n    references = [color('black',   0x00, 0x00, 0x00), color('blue', 0x00, 0x00, 0xff), color('lime',    0x00, 0xff, 0x00),\n                  color('aqua',    0x00, 0xff, 0xff), color('rea',  0xff, 0x00, 0x00), color('fuchsia', 0xff, 0x00, 0xff),\n                  color('yellow', 0xff, 0xff, 0x00), color('white', 0xff, 0xff, 0xff)]\n\n    while True:\n        data = input().strip()\n        if data[0] == '0':\n            break\n        my_r = int(data[1:3], 16)\n        my_g = int(data[3:5], 16)\n        my_b = int(data[5:7], 16)\n\n        distances = []\n        for c in references:\n            d = sqrt((c.r - my_r)**2 + (c.g - my_g)**2 + (c.b - my_b)**2)\n            distances.append(d)\n\n        closest_distance = min(distances)\n        closest_color = distances.index(closest_distance)\n        print(references[closest_color].name)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])"
  },
  {
    "language": "Python",
    "code": "L = [ [ 0, \"black\",     0,  0,    0 ],\n      [ 1, \"blue\",      0,  0,  255 ],\n      [ 2, \"lime\",      0, 255,   0 ],\n      [ 3, \"aqua\",      0, 255, 255 ],\n      [ 4, \"red\",     255,   0,   0 ],\n      [ 5, \"fuchsia\", 255,   0, 255 ],\n      [ 6, \"yellow\",  255, 255,   0 ],\n      [ 7, \"white\",   255, 255, 255 ] ]\n\nwhile True:\n    T = []\n    s = input()\n    if s == \"0\":\n        break\n    code = []\n    for i in range(3):\n        code.append( int(s[1+2*i:3+2*i], 16) )\n    for i in range(len(L)):\n        m = 0\n        for j in range(3):\n            m += (L[i][2+j] - code[j])**2\n        T.append( [ L[i][0], m] )\n    T.sort(key=lambda x: (x[1], x[0]))\n    print(L[T[0][0]][1])\n\n"
  },
  {
    "language": "Python",
    "code": "color = {\n\t'black' \t: '#000000',\n\t'blue' \t\t: '#0000ff',\n\t'lime' \t\t: '#00ff00',\n\t'aqua' \t\t: '#00ffff',\n\t'red' \t\t: '#ff0000',\n\t'fuchsia' \t: '#ff00ff',\n\t'yellow' \t: '#ffff00',\n\t'white' \t: '#ffffff',\n}\n\ndef list_chunk(arr, n):\n\treturn [arr[i:i+3] for i in range(0,15,n)]\n\ndef code2rgb(code):\n\tcode = code.lstrip('#')\n\tr, g, b = [code[i:i+2] for i in range(0,len(code),2)]\n\treturn [int(v, 16) for v in [r, g, b]]\ndef dk2(a, b):\n\treturn sum([(a[i]-b[i])**2 for i in range(0,3)])\n\n\nwhile True:\n\tv = input()\n\tif(v is '0'): break\n\trgb = code2rgb(v)\n\tdks = [dk2(code2rgb(c), rgb) for c in color.values()]\n\tk = list(color.keys())\n\tprint(k[dks.index(min(dks))])"
  },
  {
    "language": "Python",
    "code": "INF = 10 ** 10\ndic = {}\nfor i in range(10):\n  dic[str(i)] = i\nfor i in range(ord(\"a\"), ord(\"f\") + 1):\n  dic[chr(i)] = i - ord(\"a\") + 10\n\ndef hex_to_dec(s):\n  return dic[s[0]] * 16 + dic[s[1]]\n\ncolors = [(\"black\",   list(map(hex_to_dec, [\"00\", \"00\", \"00\"]))),\n          (\"blue\",    list(map(hex_to_dec, [\"00\", \"00\", \"ff\"]))),\n          (\"lime\",    list(map(hex_to_dec, [\"00\", \"ff\", \"00\"]))),\n          (\"aqua\",    list(map(hex_to_dec, [\"00\", \"ff\", \"ff\"]))),\n          (\"red\",     list(map(hex_to_dec, [\"ff\", \"00\", \"00\"]))),\n          (\"fuchsia\", list(map(hex_to_dec, [\"ff\", \"00\", \"ff\"]))),\n          (\"yellow\",  list(map(hex_to_dec, [\"ff\", \"ff\", \"00\"]))),\n          (\"white\",   list(map(hex_to_dec, [\"ff\", \"ff\", \"ff\"])))]\n\nwhile True:\n  s = input()\n  if s == \"0\":\n    break\n  r, g, b = map(hex_to_dec, [s[1:3], s[3:5], s[5:7]])\n  lowest_name = \"KUWA\"\n  lowest_score = INF\n  for name, rgb in colors:\n    rc, gc, bc = rgb\n    score = (r - rc) ** 2 + (g - gc) ** 2 + (b - bc) ** 2\n    if score < lowest_score:\n      lowest_name, lowest_score = name, score\n  print(lowest_name)\n"
  }
]