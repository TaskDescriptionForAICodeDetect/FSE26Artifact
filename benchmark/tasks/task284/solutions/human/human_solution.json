[
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nint n;\ndouble r[601];\ndouble dist[601];\nint main(void){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%lf\",&r[i]);\n\t}\n\tdist[0]=r[0];\n\tfor(int i=1;i<n;i++){\n\t\tdist[i]=r[i];\n\t\tfor(int j=0;j<i;j++){\n\t\t\tdist[i]=max(dist[i],dist[j]+sqrt(4.0*r[i]*r[j]));\n\t\t}\n\t}\n\tdouble res=0;\n\tfor(int i=0;i<n;i++){\n\t\tres=max(res,dist[i]+r[i]);\n\t}\n\tprintf(\"%.10f\\n\",res);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef pair<LL, LL> PLL;\n\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define EB emplace_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\n#define FF first\n#define SS second\ntemplate<class S, class T>\nistream& operator>>(istream& is, pair<S,T>& p){\n  return is >> p.FF >> p.SS;\n}\n\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\nconst LL MOD = 1e9+7;\n\nint main(){\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int N; cin >> N;\n  VI rs(N); REP(i,N) cin >> rs[i];\n  vector<double> xs(N);\n  double ans = 0.;\n  REP(i,N){\n\txs[i] = rs[i];\n\tREP(j,i)\n\t  xs[i] = max(xs[i], xs[j]+2*sqrt(rs[i]*rs[j]));\n\tans = max(ans, xs[i]+rs[i]);\n  }\n  cout << fixed << setprecision(9) << ans << endl;\n  \n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n\ntypedef long long ll;\nll const Inf = 1LL<<60;\n\nint N;\n\nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n\n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n\n  long double len = (radius[1] + radius[0]); len *= len;\n  len -= abs(radius[0] - radius[1]) * abs(radius[0] - radius[1]);\n  len = sqrt(len);\n\n  long double startx = radius[0];\n  if(len < radius[1]) {\n    startx = radius[1];\n    radius.pop_front(); N = radius.size();\n  }\n\n//  printf(\": %.10Lf\\n\", startx);\n\n  vector<long double> positions;\n  vector<int> lasts;\n//  int lastI = -1;\n  rep(i, N) {\n    long double x = 0.0;\n    rep(j, i) {\n      long double px = positions[j];\n      long double s = radius[i] + radius[j]; s *= s;\n      long double h = abs(radius[i] - radius[j]); h *= h;\n      long double w = sqrt(s - h);\n      if(x < px + w) {\n        x = px + w;\n      }\n    }\n    if(positions.empty() || positions.back() + radius[i-1] < x) {\n      positions.push_back(x);\n      lasts.push_back(i);\n    }\n  }\n\n  /*\n  cout << \"-----------------\\n\";\n  rep(i, positions.size()) {\n    printf(\"%.10Lf\\n\", positions[i]);\n  }\n  cout << \"-----------------\\n\";\n  */\n//  assert(lastI >= 0);\n  printf(\"%.10Lf\\n\", positions.back() + startx + radius[lasts.back()]);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define range(i, a, n) for(int (i) = (a); (i) < (n); (i)++)\n#define rep(i, n) for(int (i) = 0; (i) < (n); (i)++)\nusing namespace std;\nint main(void){\n    int n; cin >> n;\n    vector<double> r(n);\n    for(auto & e : r) cin >> e;\n\n    vector<double> x(n);\n\n    double res = 0.0;\n    rep(i, n){\n        x[i] = r[i];\n\n        rep(j, i){\n            double b = r[i] - r[j], c = r[i] + r[j];\n            x[i] = max(x[i], sqrt(c * c - b * b) + x[j]);\n        }\n\n        res = max(res, x[i] + r[i]);\n    }\n\n    cout.precision(12);\n    cout << res << endl;\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Template {{{\n#include <bits/stdc++.h>\n#define REP(i,n) for(int i=0; i<(int)(n); ++i)\nusing namespace std;\ntypedef long long LL;\n\n#ifdef LOCAL\n#include \"contest.h\"\n#else\n#define dump(x) \n#endif\n\nconst int dx[4] = {1, 0, -1, 0};\nconst int dy[4] = {0, 1, 0, -1};\ninline bool valid(int x, int w) { return 0 <= x && x < w; }\n\nvoid iostream_init() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.setf(ios::fixed);\n    cout.precision(12);\n}\n//}}}\ndouble calc(double R1, double R2) {\n    double A = R1 + R2;\n    double B = abs(R1 - R2);\n    return sqrt(A * A - B * B);\n}\nint main(){\n    iostream_init();\n    int n;\n    cin >> n;\n    vector<double> r(n);\n    REP(i, n) cin >> r[i];\n    vector<double> d(n);\n    REP(i, n) {\n        d[i] = r[i];\n        for(int j = 0; j < i; j++) {\n            d[i] = max(d[i], d[j] + calc(r[i], r[j]));\n        }\n    }\n    double ans = 0;\n    REP(i, n) ans = max(ans, d[i] + r[i]);\n    cout << ans << endl;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <unordered_set>\n#include <unordered_map>\n#include <array>\n#include <cassert>\n#include <bitset>\nusing namespace std;\nusing LL = long long;\n\ndouble cost(double r1, double r2)\n{\n\treturn sqrt((r1 + r2) * (r1 + r2) - (r1 - r2) * (r1 - r2));\n}\n\nint main(void)\n{\n\tint N;\n\tvector<int>r;\n\tcin >> N;\n\tfor (int i = 0; i < N; ++i)\n\t{\n\t\tint rr; cin >> rr; r.push_back(rr);\n\t\twhile (r.size() <= 1)\n\t\t{\n\t\t\tint sml = min(r[r.size() - 2], r.back());\n\t\t\tint big = max(r[r.size() - 2], r.back());\n\t\t\tif (big * (sqrt(2) - 1) / 2. > sml)\n\t\t\t{\n\t\t\t\tif (r[r.size() - 2] < r.back())\n\t\t\t\t{\n\t\t\t\t\tr.erase(r.begin() + r.size() - 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tr.pop_back();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tdouble ans = r.front() + r.back();\n\tfor (int i = 1; i < r.size(); ++i)\n\t{\n\t\tans += cost(r[i - 1], r[i]);\n\t}\n\tcout.precision(15);\n\tcout << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD NUM000007\n#define EPS 0.000001\n#define NUM 30000\nusing namespace std;\n\ndouble calc_dist(double left_x,double left_y,double right_x,double right_y){\n\treturn sqrt((left_x-right_x)*(left_x-right_x)+(left_y-right_y)*(left_y-right_y));\n}\n\nint main(){\n\n\tint N;\n\tdouble most_right_loc,most_right_r,tmp_r,tmp;\n\tdouble left,right,m,dist,tmp_loc;\n\n\tscanf(\"%d\",&N);\n\tscanf(\"%lf\",&most_right_loc);\n\tmost_right_r = most_right_loc;\n\n\tfor(int loop = 1; loop <= N-1; loop++){\n\n\t\tscanf(\"%lf\",&tmp_r);\n\n\t\tleft = 0;\n\t\tright = most_right_loc+most_right_r+tmp_r;\n\t\tm = (left+right)/2;\n\n\t\tdist = most_right_r+tmp_r;\n\n\t\twhile(left<=right){\n\t\t\ttmp = calc_dist(most_right_loc,most_right_r,m,tmp_r);\n\n\t\t\tif(abs(dist-tmp) < EPS){ //OK\n\t\t\t\ttmp_loc = m;\n\t\t\t\tif(tmp_loc < tmp_r)tmp_loc = tmp_r;\n\n\t\t\t\tif(tmp_loc+tmp_r > most_right_loc+most_right_r){\n\t\t\t\t\tmost_right_loc = tmp_loc;\n\t\t\t\t\tmost_right_r = tmp_r;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tif(tmp > dist){\n\t\t\t\t\tright = m-EPS;\n\t\t\t\t}else{\n\t\t\t\t\tleft = m+EPS;\n\t\t\t\t}\n\t\t\t}\n\t\t\tm = (left+right)/2;\n\t\t}\n\t}\n\n\tprintf(\"%.8lf\\n\",most_right_loc+most_right_r);\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n\ntypedef long long ll;\nll const Inf = 1LL<<60;\n\nint N;\n\nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n\n  long double startx = radius[0];\n  while(radius.size() > 1) {\n    bool ok = 0;\n    rep(i, radius.size()) {\n      long double len = (radius[0] + radius[i]); len *= len;\n      len -= abs(radius[0] - radius[i]) * abs(radius[0] - radius[i]);\n      len = sqrt(len);\n\n      if(len < radius[i]) {\n        startx = radius[i];\n        radius.pop_front(); N = radius.size();\n        ok = 1;\n      }\n    }\n    if(!ok) { break; }\n  }\n\n  while(radius.size() > 1) {\n    bool ok = 0;\n    for(int i=radius.size()-2; i>=0; i--) {\n      long double len = (radius.back() + radius[i]); len *= len;\n      len -= abs(radius.back() - radius[i]) * abs(radius.back() - radius[i]);\n      len = sqrt(len);\n\n      if(len < radius[i]) {\n  //      startx = radius[i];\n        radius.pop_back(); N = radius.size();\n        ok = 1;\n      }\n    }\n    if(!ok) { break; }\n  }\n\n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n\n  vector<long double> positions;\n  vector<int> lasts;\n  rep(i, N) {\n    long double x = 0.0;\n    rep(j, i) {\n      long double px = positions[j];\n      long double s = radius[i] + radius[j]; s *= s;\n      long double h = abs(radius[i] - radius[j]); h *= h;\n      long double w = sqrt(s - h);\n      if(x < px + w) {\n        x = px + w;\n      }\n    }\n    positions.push_back(x);\n    lasts.push_back(i);\n  }\n\n//  cout << \"-----------------\\n\";rep(i, positions.size()) { printf(\"%.10Lf %.5Lf\\n\", positions[i], radius[lasts[i]]); } cout << \"-----------------\\n\";\n//  printf(\"%.10Lf %.10Lf %d\\n\", startx, radius[lasts.back()], lasts.back());\n\n  int lastIdx = -1;\n  long double maxPosition = 0.0;\n  rep(i, positions.size()) {\n    if(maxPosition < positions[i]) {\n      maxPosition = positions[i];\n      lastIdx = lasts[i];\n    }\n  }\n  printf(\"%.10Lf\\n\", maxPosition + startx + radius[lastIdx]);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <functional>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <vector>\n#include <list>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <bitset>\n#include <climits>\n\n#define all(c) (c).begin(), (c).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define pb(e) push_back(e)\n#define mp(a, b) make_pair(a, b)\n#define fr first\n#define sc second\n\nconst int INF=100000000;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nusing namespace std;\ntypedef pair<int ,int > P;\ntypedef long long ll;\nstruct Circle {\n    double x,y,r;\n    Circle(double x=0,double y=0,double r=0):\n        x(x),y(y),r(r){}\n};\n\n// c1, c2??????????????????\nbool ok(const Circle &c1, const Circle &c2) {\n    double d = sqrt((c1.x-c2.x)*(c1.x-c2.x)+(c1.y-c2.y)*(c1.y-c2.y));\n    return d > c1.r+c2.r && c1.x < c2.x;\n}\ndouble dist(Circle c1, Circle c2) {\n    double x=c1.x-c2.x;\n    double y=c1.y-c2.y;\n    return sqrt(x*x+y*y);\n}\n\nint n;\nint r[502];\nCircle cs[502];\n\nbool ok(int m) {\n    if(cs[m].x-cs[m].r<0) return false;\n    rep(i,m) {\n        //cout<<\"comp: \"<<i<<\", \"<<m<<endl;\n        if(!ok(cs[i],cs[m])) return false;\n    }\n\n    return true;\n}\n\nvoid func(int m) {\n    double lb=0,ub=INF;\n    rep(i,100) {\n        double mid=(lb+ub)/2;\n        cs[m].x=mid;\n        if(ok(m)) ub=mid;\n        else lb=mid;\n    }\n}\n\nint main() {\n    cin>>n;\n    rep(i,n) cin>>r[i];\n    rep(i,n) cs[i]=Circle(0,r[i],r[i]);\n    rep(i,n) func(i);\n    double ans=0;\n    rep(i,n) ans=max(ans,cs[i].x+cs[i].r);\n    printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define FOR(i, a, b) for(int i=(a);i<(b);i++)\n#define REP(i, n) FOR(i, 0, n)\n#define RFOR(i, a, b) for(int i=(a);i>=(b);i--)\n#define RREP(i, n) RFOR(i, n, 0)\n#define MFOR(i, m) for(auto i=(m).begin();i!=(m).end();i++)\n#define ALL(a) (a).begin(), (a).end()\n#define SZ(x) ((int)(x).size())\n\ntypedef long long int ll;\ntypedef pair<int, int> P;\ntypedef pair<ll, ll> Pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\n\nconst double eps = 1e-10;\nconst int MOD = 1000000007;\nconst int INF = 1000000000;\nconst ll LINF = 1ll<<50;\n\ntemplate<typename T>\nvoid printv(vector<T> const& s) {\n  REP(i, SZ(s)) {\n    cout << s[i];\n    if(i == SZ(s)-1) {\n      cout << endl;\n    } else {\n      cout << \" \";\n    }\n  }\n}\n\nint main () {\n  cin.tie(0);\n  cout << fixed << setprecision(10);\n  int n; cin >> n;\n  vector<double> a(n);\n  for(int i=0;i<n;++i) {\n    cin >> a[i];\n  }\n\n  vector<double> pos(n);\n  pos[0] = a[0];\n  for(int i=1;i<n;++i) {\n    pos[i] = pos[i-1];\n    for(int j=0;j<i;++j) {\n      double tmp = sqrt(pow(a[j]+a[i],2)-pow(abs(a[i]-a[j]),2)+eps);\n      pos[i] = max(pos[i], pos[j] + tmp);\n    }\n  }\n  double l = 0, r = pos[n-1] + a[n-1];\n  for(int i=0;i<n;++i) {\n    l = min(l, pos[i] - a[i]);\n    r = max(r, pos[i] + a[i]);\n  }\n  // printv(a);\n  // printv(pos);\n  // cout << l << \":\" << r << endl;\n  cout << r-l << endl;\n\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<double,int> pdi;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF -1\n\nint n;\n\nbool used_start[500];\nbool used_end[500];\n\n#define MAX_V 505\nstruct edge{int to;double cost;};\nvector<edge> G[MAX_V];\ndouble d[MAX_V];\n\nvoid dijkstra(int s,int V){\n    priority_queue< pdi,vector<pdi>> que;\n    rep(i,MAX_V)d[i]=INF;\n    d[s]=0;\n    que.push(pdi(0,s));\n    \n    while(que.size()){\n        pdi p=que.top();\n        que.pop();\n        \n        int v=p.second;\n        if(d[v]>p.first)continue;\n        \n        rep(i,G[v].size()){\n            edge e=G[v][i];\n            if(d[e.to]<d[v]+e.cost){\n                d[e.to]=d[v]+e.cost;\n                que.push(pdi(d[e.to],e.to));\n            }\n        }\n    }\n}\n\n\nvoid add_edge_start(vector<int> data){\n    double now=0;\n    rep(i,n){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_start[i]=true;\n//            cout<<\"501\"<<\"->\"<<i<<\" \"<<r<<endl;\n            G[501].pb(edge{(int)i,r});\n        }\n        else break;\n    }\n}\n\n\nvoid add_edge_end(vector<int> data){\n    double now=0;\n    for(int i=n-1;i>=0;i--){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_end[i]=true;\n//            cout<<i<<\"->\"<<\"502 \"<<r<<endl;\n            G[i].pb(edge{502,r});\n        }\n        else break;\n    }\n    \n}\n\n\n\nvoid add_edge(vector<int> data){\n    rep(p,n-1){\n        double r=data[p];           //???p?????????\n        double x=0,y=r;             //?????????????????§?¨?\n        double l=0;                 //???p??????????????????i??????????????§????§?????????¢\n        bool connected = false;     //???p??¨?????????????????¨?????????????????????\n        int dist=-1;                //???p????????????????????????(???p -> ???dist???????????????)\n        double wait=-1;             //???p????????????????????§?????????\n        \n        for(int i=p+1;i<n;i++){\n            double rd = data[i];    //???i?????????\n            double tx = x, ty = y, tr=data[i-1];\n            \n            if( (rd+tr)*(rd+tr) - abs(rd-y)*abs(rd-y) <= 0  )continue;      //sqrt(~~~)???nan?????????????????????\n            x += sqrt( (rd+tr)*(rd+tr) - abs(rd-tr)*abs(rd-tr) );           //???j??????????????§?¨?????§????\n            y = rd;\n            \n            \n            if( (x)*(x)+(y-r)*(y-r)<=(r+rd)*(r+rd)+1e-7 ){      //??¨???????????????????????????\n                x = sqrt( (r+rd)*(r+rd) - abs(r-rd)*abs(r-rd) );\n                y = rd;\n                \n                if(  (used_start[p]&&used_start[i]) || (used_end[p]&&used_end[i])  ){}\n                else{\n                    //                cout<<endl<<p<<\"->\"<<i<<\" \"<<x<<endl;\n                    G[p].pb(edge{i,x});\n                }\n            }\n        }\n    }\n}\n\n\n\nint main(){\n    cin>>n;\n    vector<int> data(n);\n    rep(i,n)cin>>data[i];\n    \n    rep(i,500)used_start[i] = used_end[i] = false;\n    \n    add_edge_start(data);\n    \n    add_edge_end(data);\n    \n    add_edge(data);\n    \n    \n    dijkstra(501,MAX_V);\n    \n    printf(\"%.10lf\\n\",d[502]);\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n \n#define REP(i,s,n) for(int i=s;i<n;++i)\n#define rep(i,n) REP(i,0,n)\n#define SORT(c) sort((c).begin(),(c).end())\n#define IINF INT_MAX\n#define LLINF LLONG_MAX\n#define DEBUG false\n\ntypedef long long ll;\ntypedef pair<int, int> ii;\n \nint main(){\n\n\tint n;\n\tcin >> n;\n\t\n\tvector<int> r(n);\n\trep(i, n) cin >> r[i];\n\t\n\tvector<double> dp(n);\n\t\n\trep(i, n){\n\t\tdp[i] = 1.0 * r[i];\n\t\tfor(int j = i - 1; j >= 0; j--){\n\t\t\tint tmp1 = r[i] + r[j];\n\t\t\tint tmp2 = r[i] - r[j];\n\t\t\tdp[i] = max(dp[i], dp[j] + sqrt(tmp1 * tmp1 - tmp2 * tmp2));\n\t\t}\n\t}\n\tdouble ans = 0;\n\t\n\trep(i, n) ans = max(ans, dp[i] + (double)r[i]);\n\t\n\tprintf(\"%.8lf\\n\", ans);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\t\n\tvector<double> r(n);\n\tfor(int i=0; i<n; i++){\n\t\tcin >> r[i];\n\t}\n\t\n\tvector<double> p(n);\n\tp[0]=0.0;\n\tdouble left=-r[0], right=r[0];\n\tfor(int i=1; i<n; i++){\n\t\tdouble newpos=0.0;\n\t\tfor(int j=0; j<i; j++){\n\t\t\tnewpos = max(newpos, p[j] +sqrt((r[i]+r[j])*(r[i]+r[j]) -(r[i]-r[j])*(r[i]-r[j])));\n\t\t}\n\t\tp[i] = newpos;\n\t\tleft = min(left, newpos-r[i]);\n\t\tright = max(right, newpos+r[i]);\n\t}\n\t\n\tcout << fixed;\n\tcout << setprecision(6);\n\tcout << right -left << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define each(i, c) for (auto& i : c)\n#define unless(cond) if (!(cond))\n\nusing namespace std;\n\ntypedef long long int lli;\ntypedef unsigned long long ull;\ntypedef complex<double> point;\n\ntemplate<typename P, typename Q>\nostream& operator << (ostream& os, pair<P, Q> p)\n{\n  os << \"(\" << p.first << \",\" << p.second << \")\";\n  return os;\n}\n\ntypedef complex<double> P;\n\nstruct C {\n  P o;\n  double r;\n  C() {}\n  C(P o, double r) : o(o), r(r) {}\n};\n\nconst double eps = 1e-8;\nconst double pi = acos(-1);\n\nbool equals(double a, double b) { return abs(a - b) < eps; }\n\nint isIntersect(C a, C b) {\n  double x = a.o.real() - b.o.real();\n  double y = a.o.imag() - b.o.imag();\n  double s = a.r + b.r;\n  double d = x*x + y*y;\n  s *= s;\n  if(equals(d, s)) return 1;\n  if(d > s) return 0;\n  double r = abs(a.r - b.r);\n  r *= r;\n  if(equals(d, r)) return -1;\n  if(d > r) return 2;\n  return -2;\n}\n\nint main(int argc, char *argv[])\n{\n  int n;\n  while (cin >> n) {\n    int r[n];\n    for (int i = 0; i < n; ++i) {\n      cin >> r[i];\n    }\n    double x[n];\n    x[0] = r[0];\n    for (int i = 1; i < n; ++i) {\n      x[i] = -1e128;\n      for (int j = 0; j < i; ++j) {\n        double small = max<double>(x[j], r[i]);\n        double large = 1e128;\n        for (int loop = 1000; loop--; ) {\n          double mid = (small + large) / 2.0;\n          C a(P(x[j], r[j]), r[j]);\n          C b(P(mid,  r[i]), r[i]);\n          if (isIntersect(a, b)) small = mid;\n          else large = mid;\n        }\n        x[i] = max(x[i], large);\n      }\n    }\n    double mx = 0;\n    for (int i = 0; i < n; ++i) {\n      mx = max(mx, x[i] + r[i]);\n    }\n    printf(\"%.10lf\\n\", mx);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD NUM000007\n#define EPS 0.0000001\n#define NUM 30000\nusing namespace std;\n\nstruct Info{\n\tdouble x,r;\n};\n\ndouble calc_dist(double left_x,double left_y,double right_x,double right_y){\n\treturn sqrt((left_x-right_x)*(left_x-right_x)+(left_y-right_y)*(left_y-right_y));\n}\n\nint main(){\n\n\tint N;\n\tdouble tmp_r,tmp,maximum;\n\tdouble left,right,m,dist,tmp_loc;\n\tInfo info[501];\n\n\tscanf(\"%d\",&N);\n\tscanf(\"%lf\",&tmp_r);\n\tinfo[0].x = tmp_r;\n\tinfo[0].r = tmp_r;\n\n\n\tfor(int i = 1; i <= N-1; i++){\n\n\t\tscanf(\"%lf\",&tmp_r);\n\n\t\tinfo[i].r = tmp_r;\n\t\tmaximum = 0;\n\t\tfor(int k = 0; k < i; k++){\n\n\t\t\tleft = info[k].x;\n\t\t\tright = info[k].x+info[k].r+tmp_r;\n\t\t\tm = (left+right)/2;\n\n\t\t\tdist = info[k].r+tmp_r;\n\n\t\t\twhile(left<=right){\n\t\t\t\ttmp = calc_dist(info[k].x,info[k].r,m,tmp_r);\n\n\t\t\t\tif(abs(dist-tmp) < EPS){ //OK\n\t\t\t\t\ttmp_loc = m;\n\t\t\t\t\tif(tmp_loc < tmp_r)tmp_loc = tmp_r;\n\t\t\t\t\tbreak;\n\t\t\t\t}else{\n\t\t\t\t\tif(tmp > dist){\n\t\t\t\t\t\tright = m-EPS;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tleft = m+EPS;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tm = (left+right)/2;\n\t\t\t}\n\t\t\tmaximum = max(maximum,tmp_loc);\n\t\t}\n\t\tinfo[i].x = maximum;\n\t}\n\n\tmaximum = 0.0;\n\tfor(int i = 0; i < N; i++)maximum = max(maximum,info[i].x+info[i].r);\n\n\tprintf(\"%.8lf\\n\",maximum);\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      int x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n      ans += x;\n    }else if(C[i] < C[i + 1]){\n      int y = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n      ans += y;\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  double a = C[0];\n  double b = C[n - 1];\n  if(C[0] * 2 < C[1])\n    a = C[1];\n  if(C[n - 2] < C[n - 1] * 2)\n    b = C[n - 2];\n  printf(\"%.10f\\n\", ans + a + b);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (dist > (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i] * 0.5; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1000; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tcout << setprecision(20) << y[N - 1] << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define FOR(i, m, n) for (int i = (int)(m); i < (int)(n); i++)\n#define REP(i, n) FOR(i, 0, n)\nusing namespace std;\n\nint main() {\n  int n;\n  cin >> n;\n  vector<int> d(n);\n  REP(i, n) cin >> d[i];\n  vector<vector<double>> dp(n + 1, vector<double>(10001, -1));\n  REP(i, 10001) dp[0][i] = 0;\n  REP(i, n) {\n    REP(j, 10001) {\n      if (dp[i][j] < 0) continue;\n      double l = dp[i][j] + sqrt(4 * d[i] * j) - j + d[i];\n      dp[i + 1][j] = max(dp[i + 1][j], dp[i][j]);\n      dp[i + 1][d[i]] = max(dp[i + 1][d[i]], l);\n    }\n  }\n  double ans = 0;\n  REP(i, 10001) ans = max(ans, dp[n][i]);\n  cout << fixed << setprecision(8) << ans << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sstream>\n#include <map>\n#include <set>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nstruct vertex{\n    int X;\n    int Y;\n};\n\nint\tgcd(int\ta, int b){\n    while( b ){\n        int\tm = a % b;\n        a = b;\n        b = m;\n    }\n    return a;\n}\n\nint\tlcm(int a, int\tb){\n    return (a*b)/gcd(a,b);\n}\n\nint isPrim(int a){\n    if(a==1){\n        return 0;\n    }\n    for(int i=2;i<=(a+1)/2;i++){\n        if(a%i==0){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nvoid f(int A,int B){\n    \n}\n\nint main(int argc, const char * argv[])\n{\n    //std::ios::sync_with_stdio(false);\n    //scanf(\"%s\",S);\n    //scanf(\"%d\",&N);\n    //getline(cin, target);\n    //cin >> x >> y;\n    //????????????\n\n    int N;\n    cin >> N;\n    \n    vector<int> vect1;\n    vect1.clear();\n    \n    for(int i=0;i<N;i++){\n        int tmp;\n        cin >> tmp;\n        vect1.push_back(tmp);\n    }\n    \n    vector<int> vect2;\n    vect2.clear();\n    int flag=1;\n    while(flag==1){\n        flag=0;\n        for(int i=0;i<vect1.size()-1;i++){\n            double p2=pow(vect1[i]+vect1[i+1],2)-pow(vect1[i]-vect1[i+1],2);\n            double sq=sqrt(abs(p2));\n            \n            if(i==0){\n                if(vect1[i]>=vect1[i+1]){\n                    vect2.push_back(vect1[i]);\n                }else{\n                    if(sq>vect1[i+1]){\n                        vect2.push_back(vect1[i]);\n                    }else{\n                        flag=1;\n                    }\n                }\n            }else if(i==vect1.size()-2){\n                \n            }\n            \n            if(vect1[i]>=vect1[i+1]){\n                if(sq>=vect1[i]){\n                    vect2.push_back(vect1[i+1]);\n                }else{\n                    flag=1;\n                }\n            }else{\n                vect2.push_back(vect1[i+1]);\n            }\n        }\n        vect1.clear();\n        vect1=vect2;\n        vect2.clear();\n    }\n    \n    \n    double wa=0;\n    flag=0;\n    for(int i=0;i<vect1.size()-1;i++){\n        flag=0;\n        \n        double p2=pow(vect1[i]+vect1[i+1],2)-pow(vect1[i]-vect1[i+1],2);\n        double sq=sqrt(abs(p2));\n        \n        wa=wa+sq;\n\n    }\n    wa=wa+vect1[0]+vect1[vect1.size()-1];\n\n    printf(\"%.8f\",wa);\n    //cout << wa << endl;\n    \n    //???????????§\n    //cout << \"ans\" << endl;????????????\n    //printf(\"%.0f\\n\",ans);//?°???°?????\\?????¨?????????\n    //printf(\"%.7f\",p);\n    //printf(\"%f\\n\",pow(2,ans.size()));\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 505\n\nint N;\n\ndouble R[MAXN], ans, cyc[MAXN];\n\nvoid work() {\n\tfor (int i = 1; i <= N; i ++) {\n\t\tscanf(\"%lf\", &R[i]);\n\t}\n\tcyc[1] = R[1];\n\tans = cyc[1] + R[1];\n\tfor (int i = 2; i <= N; i ++) {\n\t\tdouble res = 0.0;\n\t\tfor (int j = 1; j < i; j ++) {\n\t\t\tdouble tmp = cyc[j] + sqrt((R[i] + R[j]) * (R[i] + R[j]) - (R[i] - R[j]) * (R[i] - R[j]));\n\t\t\ttmp = max(tmp, R[i]);\n\t\t\tres = max(res, tmp);\n\t\t}\n\t\tcyc[i] = res;\n\t\tans = max(ans, cyc[i] + R[i]);\n\t}\n\tprintf(\"%.12lf\\n\", ans);\n}\n\nint main() {\n\twhile (scanf(\"%d\", &N) != EOF) {\n\t\twork();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define _CRT_SECURE_NO_WARNINGS\n#include \"bits/stdc++.h\"\n#define rep(i, n) for (int i = 0; i < (n); ++i)\n#define FOR(i, m, n) for (int i = (m); i < (n); ++i)\n#define rrep(i, n) for (int i = (n) - 1; i >= 0; --i)\n#define rfor(i, m, n) for (int i = (m); i >= (n); --i)\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define range_it(a, l, r) (a).begin() + (l), (a).begin() + (r)\n\nusing namespace std;\nusing ll = long long;\t\tusing ld = long double;\nusing VB = vector<bool>;\tusing VVB = vector<VB>;\nusing VI = vector<int>;\t\tusing VVI = vector<VI>;\nusing VL = vector<ll>;\t\tusing VVL = vector<VL>;\nusing VS = vector<string>;\tusing VD = vector<ld>;\nusing PII = pair<int, int>;\tusing VP = vector<PII>;\nusing PLL = pair<ll, ll>;\tusing VPL = vector<PLL>;\ntemplate<class T>using PQ = priority_queue<T>;\ntemplate<class T>using PQS = priority_queue<T, vector<T>, greater<T>>;\nconstexpr int inf = (int)1e9;\nconstexpr ll inf_ll = (ll)1e18, MOD = 1000000007;\nconstexpr ld PI = M_PI, EPS = 1e-12;\n\n// --- input --- //\n#ifdef _WIN32\n#define getchar_unlocked _getchar_nolock\n#define putchar_unlocked _putchar_nolock\n#define fwrite_unlocked fwrite\n#define fflush_unlocked _fflush_nolock\n#endif\ninline int gc() { return getchar_unlocked(); }\ntemplate<class T>inline void InputF(T& v) { cin >> v; }\ninline void InputF(char& v) { while (isspace(v = gc())); }\ninline void InputF(bool& v) { char c; InputF(c); v = c != '0'; }\ninline void InputF(string& v) {\n\tv.clear(); char c; for (InputF(c); !isspace(c); c = gc())v += c;\n}\ninline void InputF(int& v) {\n\tbool neg = false; v = 0; char c; InputF(c);\n\tif (c == '-') { neg = true; c = gc(); }\n\tfor (; isdigit(c); c = gc())v = v * 10 + (c - '0');\n\tif (neg)v = -v;\n}\ninline void InputF(long long& v) {\n\tbool neg = false; v = 0; char c; InputF(c);\n\tif (c == '-') { neg = true; c = gc(); }\n\tfor (; isdigit(c); c = gc())v = v * 10 + (c - '0');\n\tif (neg)v = -v;\n}\ninline void InputF(double& v) {\n\tdouble dp = 1; bool neg = false, adp = false; v = 0; char c; InputF(c);\n\tif (c == '-') { neg = true; c = gc(); }\n\tfor (; isdigit(c) || c == '.'; c = gc()) {\n\t\tif (c == '.')adp = true;\n\t\telse if (adp)v += (c - '0') * (dp *= 0.1);\n\t\telse v = v * 10 + (c - '0');\n\t}\n\tif (neg)v = -v;\n}\ntemplate<class T, class U>inline void InputF(pair<T, U>& v) {\n\tInputF(v.first); InputF(v.second);\n}\ntemplate<class T>inline void InputF(vector<T>& v) {\n\tfor (auto& e : v)InputF(e);\n}\ntemplate<class T>inline T InputF() { T v; InputF(v); return v; }\ninline string GetLine() {\n\tstring v; char c; for (InputF(c); c != '\\n' && c != '\\0'; c = gc())v += c; return v;\n}\nstruct InputV {\n\tint n, m;\n\tInputV(int N) :n(N), m(0) {}\n\tInputV(pair<int, int> N) :n(N.first), m(N.second) {}\n\ttemplate<class T>operator vector<T>() {\n\t\tvector<T> v(n); InputF(v); return v;\n\t}\n\ttemplate<class T>operator vector<vector<T>>() {\n\t\tvector<vector<T>> v(n, vector<T>(m)); InputF(v); return v;\n\t}\n};\nstruct Input {\n\ttemplate<class T>operator T() { return InputF<T>(); }\n\tint operator--(int) { int v; InputF(v); v--; return v; }\n\tInputV operator[](int n) { return InputV(n); }\n\tInputV operator[](pair<int, int> n) { return InputV(n); }\n\tvoid operator()() {}\n\ttemplate<class H, class...T>void operator()(H&& h, T&& ...t) {\n\t\tInputF(h); operator()(forward<T>(t)...);\n\t}\n\ttemplate<class T>Input& operator,(T&& v) {\n\t\tInputF(v); return *this;\n\t}\n}in;\n#define input(T) InputF<T>()\n#define ini input(int)\n#define inl input(ll)\n#define ins input(string)\n#define inputs(T, ...) T __VA_ARGS__; in(__VA_ARGS__)\n#define INT(...) inputs(int, __VA_ARGS__)\n#define LL(...) inputs(ll, __VA_ARGS__)\n#define STR(...) inputs(string, __VA_ARGS__)\n\n// --- output --- //\nstruct BoolStr {\n\tconst char* t, * f; BoolStr(const char* _t, const char* _f) :t(_t), f(_f) {}\n}Yes(\"Yes\", \"No\"), yes(\"yes\", \"no\"), YES(\"YES\", \"NO\"), Int(\"1\", \"0\");\nstruct DivStr {\n\tconst char* d, * l; DivStr(const char* _d, const char* _l) :d(_d), l(_l) {}\n}spc(\" \", \"\\n\"), no_spc(\"\", \"\\n\"), end_line(\"\\n\", \"\\n\"), comma(\",\", \"\\n\"), no_endl(\" \", \"\");\nclass Output {\n\tBoolStr B{ Yes }; DivStr D{ spc };\n\tvoid p(int v) {\n\t\tif (v < 0)putchar_unlocked('-'), v = -v;\n\t\tchar b[10]; int i = 0;\n\t\twhile (v)b[i++] = '0' + v % 10, v /= 10;\n\t\tif (!i)b[i++] = '0';\n\t\twhile (i--)putchar_unlocked(b[i]);\n\t}\n\tvoid p(ll v) {\n\t\tif (v < 0)putchar_unlocked('-'), v = -v;\n\t\tchar b[20]; int i = 0;\n\t\twhile (v)b[i++] = '0' + v % 10, v /= 10;\n\t\tif (!i)b[i++] = '0';\n\t\twhile (i--)putchar_unlocked(b[i]);\n\t}\n\tvoid p(bool v) { p(v ? B.t : B.f); }\n\tvoid p(char v) { putchar_unlocked(v); }\n\tvoid p(const char* v) { fwrite_unlocked(v, 1, strlen(v), stdout); }\n\tvoid p(double v) { printf(\"%.20f\", v); }\n\tvoid p(ld v) { printf(\"%.20Lf\", v); }\n\ttemplate<class T> void p(const T& v) { cout << v; }\n\ttemplate<class T, class U>void p(const pair<T, U>& v) { p(v.first); p(D.d); p(v.second); }\n\ttemplate<class T>void p(const vector<T>& v) { rep(i, sz(v)) { if (i)p(D.d); p(v[i]); } }\n\ttemplate<class T>void p(const vector<vector<T>>& v) { rep(i, sz(v)) { if (i)p(D.l); p(v[i]); } }\npublic:\n\tOutput& operator()() { p(D.l); return *this; }\n\ttemplate<class H>Output& operator()(H&& h) { p(h); p(D.l); return *this; }\n\ttemplate<class H, class...T>Output& operator()(H&& h, T&& ...t) {\n\t\tp(h); p(D.d); return operator()(forward<T>(t)...);\n\t}\n\ttemplate<class...T>void exit(T&& ...t) { operator()(forward<T>(t)...); std::exit(EXIT_SUCCESS); }\n\tOutput& flush() { fflush_unlocked(stdout); return *this; }\n\tOutput& set(const BoolStr& b) { B = b; return *this; }\n\tOutput& set(const DivStr& d) { D = d; return *this; }\n\tOutput& set(const char* t, const char* f) { B = BoolStr(t, f); return *this; }\n}out;\n\n// --- step --- //\ntemplate<class T>struct Step {\n\tclass It {\n\t\tT a, b, c;\n\tpublic:\n\t\tconstexpr It() : a(T()), b(T()), c(T()) {}\n\t\tconstexpr It(T _b, T _c, T _s) : a(_b), b(_c), c(_s) {}\n\t\tconstexpr It& operator++() { --b; a += c; return *this; }\n\t\tconstexpr It operator++(int) { It tmp = *this; --b; a += c; return tmp; }\n\t\tconstexpr const T& operator*()const { return a; }\n\t\tconstexpr const T* operator->()const { return &a; }\n\t\tconstexpr bool operator==(const It& i)const { return b == i.b; }\n\t\tconstexpr bool operator!=(const It& i)const { return !(b == i.b); }\n\t\tconstexpr T start()const { return a; }\n\t\tconstexpr T count()const { return b; }\n\t\tconstexpr T step()const { return c; }\n\t};\n\tconstexpr Step(T b, T c, T s) : be(b, c, s) {}\n\tconstexpr It begin()const { return be; }\n\tconstexpr It end()const { return en; }\n\tconstexpr T start()const { return be.start(); }\n\tconstexpr T count()const { return be.count(); }\n\tconstexpr T step()const { return be.step(); }\n\tconstexpr T sum()const { return start() * count() + step() * (count() * (count() - 1) / 2); }\n\toperator vector<T>()const { return as_vector(); }\n\tvector<T> as_vector()const {\n\t\tvector<T> res; res.reserve(count()); each([&](T i) {res.push_back(i); }); return res;\n\t}\n\ttemplate<class F>void each(const F& f)const { for (T i : *this)f(i); }\n\ttemplate<class F>auto map(const F& f)const {\n\t\tvector<decay_t<result_of_t<F(T)>>> res; res.reserve(count());\n\t\teach([&](T i) {res.push_back(f(i)); }); return res;\n\t}\n\ttemplate<class F>int count_if(const F& f)const {\n\t\tint res = 0; each([&](T i) {res += static_cast<bool>(f(i)); }); return res;\n\t}\n\ttemplate<class F>vector<T> select(const F& f)const {\n\t\tvector<T> res; each([&](T i) {if (f(i))res.push_back(i); }); return res;\n\t}\n\ttemplate<class F>auto max(const F& f)const {\n\t\tauto v = map(f); return *max_element(v.begin(), v.end());\n\t}\n\ttemplate<class F>auto min(const F& f)const {\n\t\tauto v = map(f); return *min_element(v.begin(), v.end());\n\t}\n\ttemplate<class F, class U = decay_t<result_of_t<F(T)>>>auto sum(const F& f)const {\n\t\tU res = 0; each([&](T i) {res += static_cast<U>(f(i)); }); return res;\n\t}\n\tusing value_type = T;\n\tusing iterator = It;\nprivate:\n\tIt be, en;\n};\ntemplate<class T>inline constexpr auto step(T a) { return Step<T>(0, a, 1); }\ntemplate<class T>inline constexpr auto step(T a, T b) { return Step<T>(a, b - a, 1); }\ntemplate<class T>inline constexpr auto step(T a, T b, T c) { return Step<T>(a, a < b ? (b - a - 1) / c + 1 : 0, c); }\n\n// --- functions --- //\ninline namespace {\n\ttemplate<class T>inline void Sort(T& a) { sort(all(a)); }\n\ttemplate<class T>inline void RSort(T& a) { sort(rall(a)); }\n\ttemplate<class T>inline T Sorted(T a) { Sort(a); return a; }\n\ttemplate<class T>inline T RSorted(T a) { RSort(a); return a; }\n\ttemplate<class T, class F>inline void Sort(T& a, const F& f) {\n\t\tsort(all(a), [&](const auto& x, const auto& y) {return f(x) < f(y); });\n\t}\n\ttemplate<class T, class F>inline void RSort(T& a, const F& f) {\n\t\tsort(rall(a), [&](const auto& x, const auto& y) {return f(x) < f(y); });\n\t}\n\ttemplate<class T>inline void Reverse(T& a) { reverse(all(a)); }\n\ttemplate<class T>inline void Unique(T& a) { a.erase(unique(all(a)), a.end()); }\n\ttemplate<class T>inline void Rotate(T& a, int left) { rotate(a.begin(), a.begin() + left, a.end()); }\n\ttemplate<class T>inline T Reversed(T a) { Reverse(a); return a; }\n\ttemplate<class T>inline T Uniqued(T a) { Unique(a); return a; }\n\ttemplate<class T>inline T Rotated(T a, int left) { Rotate(a, left); return a; }\n\ttemplate<class T>inline auto Max(const T& a) { return *max_element(all(a)); }\n\ttemplate<class T>inline auto Min(const T& a) { return *min_element(all(a)); }\n\ttemplate<class T>inline int MaxPos(const T& a) { return max_element(all(a)) - a.begin(); }\n\ttemplate<class T>inline int MinPos(const T& a) { return min_element(all(a)) - a.begin(); }\n\ttemplate<class T, class F>inline auto Max(const T& a, const F& f) {\n\t\treturn *max_element(all(a), [&](const auto& x, const auto& y) {return f(x) < f(y); });\n\t}\n\ttemplate<class T, class F>inline auto Min(const T& a, const F& f) {\n\t\treturn *min_element(all(a), [&](const auto& x, const auto& y) {return f(x) < f(y); });\n\t}\n\ttemplate<class T, class U>inline int Count(const T& a, const U& v) { return count(all(a), v); }\n\ttemplate<class T, class F>inline int CountIf(const T& a, const F& f) { return count_if(all(a), f); }\n\ttemplate<class T, class U>inline int Find(const T& a, const U& v) { return find(all(a), v) - a.begin(); }\n\ttemplate<class T, class F>inline int FindIf(const T& a, const F& f) { return find_if(all(a), f) - a.begin(); }\n\ttemplate<class T, class U = typename T::value_type>inline U Sum(const T& a) { return accumulate(all(a), U()); }\n\ttemplate<class T, class F>inline auto Sum(const T& v, const F& f) {\n\t\treturn accumulate(next(v.begin()), v.end(), f(v.front()), [&](auto a, auto b) {return a + f(b); });\n\t}\n\ttemplate<class T, class U>inline int Lower(const T& a, const U& v) { return lower_bound(all(a), v) - a.begin(); }\n\ttemplate<class T, class U>inline int Upper(const T& a, const U& v) { return upper_bound(all(a), v) - a.begin(); }\n\ttemplate<class T, class F>inline void RemoveIf(T& a, const F& f) { a.erase(remove_if(all(a), f), a.end()); }\n\ttemplate<class F>inline auto Vector(size_t size, const F& f) {\n\t\tvector<decay_t<result_of_t<F(size_t)>>> res(size); for (size_t i = 0; i < size; ++i)res[i] = f(i); return res;\n\t}\n\ttemplate<class T>inline auto Grid(size_t h, size_t w, const T& v = T()) { return vector<vector<T>>(h, vector<T>(w, v)); }\n\ttemplate<class T>inline auto Slice(const T& v, size_t i, size_t len) {\n\t\treturn i < v.size() ? T(v.begin() + i, v.begin() + min(i + len, v.size())) : T();\n\t}\n\ttemplate<class T, class F>inline auto Each(const T& v, const F& f) { for (auto& i : v)f(i); }\n\ttemplate<class T, class F>inline auto Select(const T& v, const F& f) {\n\t\tT res; for (const auto& e : v)if (f(e))res.push_back(e); return res;\n\t}\n\ttemplate<class T, class F>inline auto Map(const T& v, const F& f) {\n\t\tvector<decay_t<result_of_t<F(typename T::value_type)>>> res(v.size());\n\t\tsize_t i = 0; for (const auto& e : v)res[i++] = f(e); return res;\n\t}\n\ttemplate<class T, class F>inline auto MapIndex(const T& v, const F& f) {\n\t\tvector<decay_t<result_of_t<F(size_t, typename T::value_type)>>> res(v.size());\n\t\tsize_t i = 0; for (auto it = v.begin(); it != v.end(); ++it, ++i)res[i] = f(i, *it); return res;\n\t}\n\ttemplate<class T, class F>inline auto TrueIndex(const T& v, const F& f) {\n\t\tvector<size_t> res; for (size_t i = 0; i < v.size(); ++i)if (f(v[i]))res.push_back(i); return res;\n\t}\n\tinline string operator*(string s, size_t n) { string ret; for (size_t i = 0; i < n; ++i)ret += s; return ret; }\n\ttemplate<class T>inline T Ceil(T n, T m) { return (n + m - 1) / m; }\n\ttemplate<class T>inline T Ceil2(T n, T m) { return Ceil(n, m) * m; }\n\ttemplate<class T>inline T Tri(T n) { return (n & 1) ? (n + 1) / 2 * n : n / 2 * (n + 1); }\n\ttemplate<class T>inline T nC2(T n) { return (n & 1) ? (n - 1) / 2 * n : n / 2 * (n - 1); }\n\ttemplate<class T>inline T Mid(const T& l, const T& r) { return l + (r - l) / 2; }\n\tinline int pop_count(int n) { return bitset<32>(n).count(); }\n\tinline int pop_count(ll n) { return bitset<64>(n).count(); }\n\ttemplate<class T>inline bool chmax(T& a, const T& b) { if (a < b) { a = b; return true; } return false; }\n\ttemplate<class T>inline bool chmin(T& a, const T& b) { if (a > b) { a = b; return true; } return false; }\n\ttemplate<class T>inline bool inRange(const T& v, const T& min, const T& max) { return min <= v && v < max; }\n\ttemplate<class T = ll>inline T BIT(int b) { return T(1) << b; }\n\ttemplate<class T>inline T Gcd(T n, T m) { return m ? Gcd(m, n % m) : n; }\n\ttemplate<class T>inline T Lcm(T n, T m) { return n / Gcd(n, m) * m; }\n\ttemplate<class T, class U = typename T::value_type>inline U Gcdv(const T& v) {\n\t\treturn accumulate(next(v.begin()), v.end(), U(*v.begin()), Gcd<U>);\n\t}\n\ttemplate<class T, class U = typename T::value_type>inline U Lcmv(const T& v) {\n\t\treturn accumulate(next(v.begin()), v.end(), U(*v.begin()), Lcm<U>);\n\t}\n\ttemplate<class T>inline T Pow(T a, T n) { T r = 1; while (n > 0) { if (n & 1)r *= a; a *= a; n /= 2; } return r; }\n\ttemplate<class T>inline T Powmod(T a, T n, T m = MOD) {\n\t\tT r = 1; while (n > 0) { if (n & 1)r = r * a % m, n--; else a = a * a % m, n /= 2; }return r;\n\t}\n}\n\n// --- dump --- //\n#if __has_include(\"dump.hpp\")\n#include \"dump.hpp\"\n#else\n#define dump(...) ((void)0)\n#endif\n\n// ---------------------------------------------------------------- //\n\nint main() {\n\tint n = in;\n\tVD a = in[n];\n\n\tif (n == 1) {\n\t\tout.exit(a[0] * 2);\n\t}\n\n\tVD x(n);\n\trep(i, n) {\n\t\tchmax(x[i], a[i]);\n\t\trep(j, i) {\n\t\t\tld v1 = abs(a[i] - a[j]);\n\t\t\tld v2 = a[i] + a[j];\n\t\t\tchmax(x[i], x[j] + sqrt(v2 * v2 - v1 * v1));\n\t\t}\n\t}\n\n\tout(step(n).max([&](int i) {return x[i] + a[i]; }));\n}\n"
  },
  {
    "language": "C++",
    "code": "// {{{ Boilerplate Code <--------------------------------------------------\n// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}\n\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\n#define FOR(I,A,B) for(int I = (A); I < (B); ++I)\n#define ALL(A)     (A).begin(), (A).end()\n\nusing namespace std;\n\n// }}}\n\nint main(){\n\tint n;\n\n\tvector <double> d;\n\n\tcin>>n;\n\n\tFOR(i,0,n){\n\t\tint tmp;\n\t\tcin>>tmp;\n\t\td.push_back(tmp);\n\t}\n\n\tvector <double> pos;\n\n\tdouble ret = 0.0;\n\n\tFOR(i,0,n){\n\t\tdouble curpos = 0.0;\n\n\t\tcurpos=max(curpos,d[i]);\n\n\t\tFOR(j,0,i){\n\t\t\tdouble e1=d[i]-d[j];\n\t\t\tdouble e2=d[i]+d[j];\n\t\t\tdouble e3=sqrt(e2*e2-e1*e1);\n\n\t\t\tcurpos=max(curpos,pos[j]+e3);\n\t\t}\n\t\tpos.push_back(curpos);\n\n\t\tret=max(ret,curpos+d[i]);\n\t}\n\n\tcout<<setprecision(10)<<ret<<endl;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tlong long int N;\n\tcin >> N;\n\tlong double ans = 0;\n\tvector<long double>R( N + 2 ), Len( N + 3 );\n\tfor( size_t i = 1; i <= N; i++ ) {\n\t\tcin >> R[i];\n\t}\n\tfor( size_t i = 1; i < N + 2; i++ ) {\n\t\tlong double L = R[i] + R[i - 1];\n\t\tlong double X = R[i] - R[i - 1];\n\t\tlong double Y = sqrtl( L*L - X*X );\n\t\tLen[i] = max( Y, max( R[i], R[i - 1] ) );\n\t}\n\tint j = 0, k = 0;\n\tfor( size_t i = 0; i < N + 2; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t\tj = i;\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t\t//cout << Len[i] << endl;\n\t}\n\treverse( Len.begin(), Len.end() );\n\treverse( R.begin(), R.end() );\n\tans = 0;\n\tfor( size_t i = 0; i < N + 2 - j + 1; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t}\n\tif( N == 2 && R[R.size() - 2] != R[R.size() - 3] ) {\n\t\tans += R[R.size()-2];\n\t}\n\tcout << fixed << setprecision( 20 ) << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <climits>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <queue>\n#include <random>\n#include <complex>\n#include <regex>\n\nusing namespace std;\n\n#define SHOW_VECTOR(v) {std::cerr << #v << \"\\t:\" ; for(const auto &xxx : v) {std::cerr << xxx << \" \";} std::cerr << \"\\n\";}\n#define SHOW_MAP(v) {std::cerr << #v << \"\\t:\" ; for(const auto &xxx : v) {std::cerr << xxx.first << \" \" << xxx.second << \"\\n\";} std::cerr << \"\\n\";}\n\ntypedef complex<double> P;\n\ndouble getD(P p, double r1, double r2) {\n    double sumR = r1 + r2;\n    double diffR = r1 - r2;\n    return sqrt(sumR * sumR - diffR * diffR);\n}\n\nint main() {\n\n    int N;\n    cin >> N;\n\n    vector<double> r(N);\n    for (int i = 0; i < N; i++) cin >> r[i];\n\n    vector<P> dp(N);\n\n    //x, y\n    dp[0] = P(r[0], r[0]);\n\n    for (int i = 1; i < N; i++) {\n        double maxV = 1e-10;\n        for (int j = 0; j < i; j++) {\n            double d = getD(dp[j], r[i], r[j]);\n            maxV = max({maxV, d + dp[j].real(), r[i]});\n        }\n        dp[i] = P(maxV, r[i]);\n    }\n\n    double ans = 1e-20;\n    for(int i = 0;i<N;i++){\n        ans = max(ans, dp[i].real() + dp[i].imag());\n    }\n\n\n\n//    for (int i = 0; i < N; i++) {\n//        cout << fixed << setprecision(10) << dp[i].real() << endl;\n//    }\n//\n\n    cout << fixed << setprecision(10) << ans << endl;\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "/* template.cpp {{{ */\n#include <bits/stdc++.h>\nusing namespace std;\n#define get_macro(a, b, c, d, name, ...) name\n#define rep(...) get_macro(__VA_ARGS__, rep4, rep3, rep2, rep1)(__VA_ARGS__)\n#define rrep(...) get_macro(__VA_ARGS__, rrep4, rrep3, rrep2, rrep1)(__VA_ARGS__)\n#define rep1(n) rep2(i_, n)\n#define rep2(i, n) rep3(i, 0, n)\n#define rep3(i, a, b) rep4(i, a, b, 1)\n#define rep4(i, a, b, s) for (ll i = (a); i < (ll)(b); i += (ll)(s))\n#define rrep1(n) rrep2(i_, n)\n#define rrep2(i, n) rrep3(i, 0, n)\n#define rrep3(i, a, b) rrep4(i, a, b, 1)\n#define rrep4(i, a, b, s) for (ll i = (ll)(b) - 1; i >= (ll)(a); i -= (ll)(s))\n#define each(x, c) for (auto &&x : c)\n#define fs first\n#define sc second\n#define all(c) begin(c), end(c)\nusing ui = unsigned;\nusing ll = long long;\nusing ul = unsigned long long;\nusing ld = long double;\nconst int inf = 1e9 + 10;\nconst ll inf_ll = 1e18 + 10;\nconst ll mod = 1e9 + 7;\nconst ll mod9 = 1e9 + 9;\nconst int dx[]{-1, 0, 1, 0, -1, 1, 1, -1};\nconst int dy[]{0, -1, 0, 1, -1, -1, 1, 1};\ntemplate<class T, class U> void chmin(T &x, const U &y){ x = min<T>(x, y); }\ntemplate<class T, class U> void chmax(T &x, const U &y){ x = max<T>(x, y); }\nstruct prepare_ { prepare_(){ cin.tie(nullptr); ios::sync_with_stdio(false); cout << fixed << setprecision(12); } } prepare__;\n/* }}} */\n\nint n;\ndouble a[500];\ndouble b[500];\n\nint main(){\n  cin >> n;\n  rep(i, n) cin >> a[i];\n  b[0] = a[0];\n  rep(i, 1, n){\n    b[i] = a[i];\n    rep(j, i){\n      double x = a[j] + a[i];\n      double y = abs(a[j] - a[i]);\n      double z = sqrt(x * x - y * y);\n      chmax(b[i], b[j] + z);\n    }\n  }\n  double res = 0.0;\n  rep(i, n) chmax(res, b[i] + a[i]);\n  cout << res << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 510\nint r[maxn];\nint n;\ndouble dis[maxn];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&r[i]);\n\tdouble ans=0.0;\n\tfor(int i=0;i<n;i++){\n\t\tdis[i]=r[i]*1.0;\n\t\tfor(int j=0;j<i;j++){\n\t\t\tint x=max(r[i],r[j]),y=min(r[i],r[j]);\n\t\t\tdouble tmp=sqrt((x+y)*(x+y)*1.0-(x-y)*(x-y)*1.0);\n\t\t\tdis[i]=max(dis[i],dis[j]+tmp);\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tans=max(ans,dis[i]+r[i]);\n\t}\n\tprintf(\"%.8f\\n\",ans);\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>\n#include <cmath>\n\nstatic const int MOD = 1000000007;\nusing ll = long long;\nusing u32 = uint32_t;\nusing namespace std;\n\ntemplate<class T> constexpr T INF = ::numeric_limits<T>::max()/32*15+208;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> v(n);\n    for (auto &&i : v) scanf(\"%d\", &i);\n    vector<double> a(n);\n    for (int i = 0; i < n; ++i) {\n        a[i] = v[i];\n    }\n    for (int i = 1; i < n; ++i) {\n        for (int j = 0; j < i; ++j) {\n            a[i] = max(a[i], a[j]+sqrt(4*v[i]*v[j]));\n        }\n    }\n    double ans = 0;\n    for (int i = 0; i < n; ++i) {\n        ans = max(ans, a[i]+v[i]);\n    }\n    printf(\"%.8lf\", ans);\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <cstdio>\n\nusing namespace std;\n\nint main(){\n\tint N;\n\twhile(cin >> N){\n\t\tvector<double> vd, r(N);\n\t\tfor(double& d : r) cin >> d;\n\t\tdouble res = 0.0;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tdouble d = r[i];\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tdouble sum = r[i] + r[j];\n\t\t\t\tdouble dif = abs(r[i] - r[j]);\n\t\t\t\td = max(d, vd[j] + sqrt(sum*sum - dif*dif));\n\t\t\t}\n\t\t\tvd.push_back(d);\n\t\t\tres = max(res, d + r[i]);\n\t\t}\n\t\tprintf(\"%.10lf\\n\", res);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cassert>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010],x[1010];\n\nconst double eps=1e-6;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\trep(i,m){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(r[i]-cy)*(r[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\trep(i,n){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\tcx=x[j]+sqrt(d);\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\tif(cross(i,cx,r[i])) continue;\n\t\t\tif(cx<x[i]) x[i]=cx;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << r[i] << endl;\n\t}\n\n\tdouble ans=0.0;\n\trep(i,n) ans=max(ans,x[i]+r[i]);\n\tcout.precision(20);\n\tassert(ans<inf);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n\nusing namespace std;\n\nint main(){\n  int n;\n  cin >> n;\n  int inp[n];\n  double pos[n];\n  double ans=0,temp=0;\n  for(int i=0;i<n;i++){\n    cin >> inp[i];\n  }\n\n  for(int i=0;i<n;i++){\n    pos[i]=0;\n    for(int j=i-1;j>=-1;j--){\n      if(j>=0){\n\ttemp=pos[j]+sqrt(pow(inp[j]+inp[i],2)-pow(inp[j]-inp[i],2));\n\tif(temp>pos[i]) pos[i]=temp;\n\tif(inp[j]>inp[i])break;\n      }else{\n\tif(inp[i]>pos[i]) pos[i]=inp[i];\n      }\n      if(ans<pos[i]+inp[i])ans=pos[i]+inp[i];\n    }\n    \n    \n  }\n  cout.precision(8);\n  cout << fixed << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<ll, ll> P;\n\n#define EACH(i,a) for (auto& i : a)\n#define FOR(i,a,b) for (ll i=(a);i<(b);i++)\n#define RFOR(i,a,b) for (ll i=(b)-1;i>=(a);i--)\n#define REP(i,n) for (ll i=0;i<(n);i++)\n#define RREP(i,n) for (ll i=(n)-1;i>=0;i--)\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define pb push_back\n#define ALL(a) (a).begin(),(a).end()\n\nconst ll linf = 1e18;\nconst int inf = 1e9;\nconst double eps = 1e-12;\nconst double pi = acos(-1);\n\ntemplate<typename T>\nistream& operator>>(istream& is, vector<T>& vec) {\n\tEACH(x,vec) is >> x;\n\treturn is;\n}\n/*\ntemplate<class... T>\nostream& operator<<(ostream& os, tuple<T...>& t) {\n\tfor (size_t i = 0; i < tuple_size< tuple<T...> >::value; ++i) {\n\t\tif (i) os << \" \";\n\t\tos << get<0>(t);\n\t}\n\treturn os;\n}\n*/\ntemplate<typename T>\nostream& operator<<(ostream& os, vector<T>& vec) {\n\tREP(i,vec.size()) {\n\t\tif (i) os << \" \";\n\t\tos << vec[i];\n\t}\n\treturn os;\n}\ntemplate<typename T>\nostream& operator<<(ostream& os, vector< vector<T> >& vec) {\n\tREP(i,vec.size()) {\n\t\tif (i) os << endl;\n\t\tos << vec[i];\n\t}\n\treturn os;\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n    int n; cin >> n;\n    vector<ld> v(n); cin >> v;\n    vector<ld> x = v;\n    FOR(i, 1, n) {\n        REP(j, i) {\n            ld dr = v[i] + v[j];\n            ld dy = v[i] - v[j];\n            ld dx = sqrt(dr * dr - dy * dy);\n            x[i] = max(x[i], x[j]+dx);\n        }\n    }\n    ld ans = 0;\n    REP(i, n) {\n        ans = max(ans, x[i] + v[i]);\n    }\n    cout << fixed << setprecision(10) << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      double x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n      if(C[i] >= x)\n        ans += C[i];\n      else\n        ans += x;\n    }else if(C[i] < C[i + 1]){\n      double x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n      if(C[i + 1] >= x)\n        ans += C[i + 1];\n      else\n        ans += x;\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  double x = sqrt(pow(C[0] + C[1], 2) - pow(C[1] - C[0], 2));\n  double y = sqrt(pow(C[n - 1] + C[n - 2], 2) - pow(C[n - 2] - C[n - 1], 2));\n  if(C[0] < C[1]){\n    if(C[1] < x + C[0])\n      ans += C[0];\n    else\n      ans += C[1] - x;\n  }else{\n    ans += C[0];\n  }\n  if(C[n - 1] < C[n - 2]){\n    if(C[n - 2] < y + C[n - 1])\n      ans += C[n - 1];\n    else\n      ans += C[n - 2] - y;\n  }else{\n    ans += C[n - 1];\n  }\n  printf(\"%.8f\\n\", ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n,t;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    ans=0;\n        cin>>n;\n        for(int i=0; i<n; i++)\n        {\n            cin>>r[i];\n        }\n        if(n==1)\n        {\n            cout<<r[0]*2<<endl;\n            return 0;\n        }\n        for(int i=0; i<n-1; i++)\n        {\n            minn=min(r[i],r[i+1]);\n            maxx=max(r[i],r[i+1]);\n            //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n            if((minn+minn+maxx)<=sqrt(maxx*maxx*2))\n            {\n                ans+=maxx;\n                //cout<<maxx<<endl;\n            }\n            else\n            {\n                if(i==0)\n                {\n                    ans+=r[i];\n                }\n                if(i==n-2)\n                {\n                    ans+=r[i+1];\n                }\n                ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n                haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n            }\n        }\n       cout << fixed << setprecision(8) << ans << endl;\n        //printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,k,n) for(int i = (int)(k); i < (int)(n); i++)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(a) a.begin(), a.end()\n#define MS(m,v) memset(m,v,sizeof(m))\n#define D10 fixed<<setprecision(10)\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\nconst int MOD = 1000000007;\nconst int INF = MOD + 1;\nconst ld EPS = 1e-12;\ntemplate<class T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate<class T> T &chmax(T &a, const T &b) { return a = max(a, b); }\n\n/*--------------------template--------------------*/\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tvector<ld> v(n);\n\tREP(i, n) cin >> v[i];\n\tld ans = v[0] + v.back();\n\tREP(i, n - 1)\n\t{\n\t\tld l = v[i], r = v[i + 1];\n\t\tld h = abs(l - r);\n\t\tans += sqrt((l + r)*(l + r) - h*h);\n\t}\n\tcout << D10 << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <iomanip>\n#include <random>\n\nusing namespace std;\nrandom_device rd;\n\ndouble pita(double x, double y)\n{\n\treturn sqrt((x + y) * (x + y) - (x - y) * (x - y));\n}\n\nint skip(double x, double y, double z)\n{\n\t//y = middle\n\tif (pita(x,y) + pita(y,z) < pita(x, z)) return 1;\n\telse return 0;\n}\n\nint skip(double x, double y)\n{\n\t//x = edge\n\tif (pita(x, y) + x < y) return 1;\n\telse return 0;\n}\n\nint main(void)\n{\n\tint n;\n\tdouble d[500];\n\t// n = 500;\n\t// for (int i = 0; i < n; i++) {\n\t// \td[i] = rd() % 10000;\n\t// }\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> d[i];\n\t}\n\tint sk;\n\tint l = n;\n\tint i = 0;\n\twhile(1) {\n\t\tif (i == 0) {\n\t\t\tsk = skip(d[0], d[1]);\n\t\t} else if (i == l - 1) {\n\t\t\tsk = skip(d[l - 1], d[l - 2]);\n\t\t} else {\n\t\t\tsk = skip(d[i - 1], d[i], d[i + 1]);\n\t\t}\n\t\t// cout << sk << endl;\n\t\tif (sk) {\n\t\t\tfor (int j = i + 1; j < l; j++) {\n\t\t\t\td[j - 1] = d[j];\n\t\t\t}\n\t\t\tl--;\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t\tif (i == l) break;\n\t}\n\t// cout << l << endl;\n\t// for (int i = 0; i < l; i++) {\n\t// \tcout << d[i] << \" \";\n\t// }\n\t// cout << endl;\n\tdouble ans = d[0] + d[l - 1];\n\tfor (int i = 0; i < l - 1; i++) {\n\t\tans += pita(d[i], d[i + 1]);\n\t}\n\tcout << fixed << setprecision(6) << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "ing namespace std;\n\nint main() {\n\tlong long int N;\n\tcin >> N;\n\tlong double ans = 0;\n\tvector<long double>R( N + 2 ), Len( N + 3 );\n\tfor( size_t i = 1; i <= N; i++ ) {\n\t\tcin >> R[i];\n\t}\n\tfor( size_t i = 1; i < N + 2; i++ ) {\n\t\tlong double L = R[i] + R[i - 1];\n\t\tlong double X = R[i] - R[i - 1];\n\t\tlong double Y = sqrtl( L*L - X*X );\n\t\tLen[i] = max( Y, max( R[i], R[i - 1] ) );\n\t}\n\tint j = 0, k = 0;\n\tfor( size_t i = 0; i < N + 2; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t\tj = i;\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t\t//cout << Len[i] << endl;\n\t}\n\treverse( Len.begin(), Len.end() );\n\treverse( R.begin(), R.end() );\n\tans = 0;\n\tfor( size_t i = 0; i < N + 2 - j + 1; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t}\n\tif( N == 2 && R[R.size() - 2] != R[R.size() - 1] ) {\n\t\tans += R[R.size()-2];\n\t}\n\tcout << fixed << setprecision( 20 ) << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define range(i,a,b) for(int i = (a); i < (b); i++)\n#define rep(i,b) for(int i = 0; i < (b); i++)\n#define all(a) (a).begin(), (a).end()\n#define show(x)  cerr << #x << \" = \" << (x) << endl;\nusing namespace std;\n\nclass Circle{\n    public : double x, r;\n};\n\ndouble dist(Circle a, Circle b){\n    double z = a.r + b.r;\n    double x = abs(a.r - b.r);\n    return sqrt(z * z - x * x);\n}\n\nint main(){\n    int n;\n    cin >> n;\n\n    Circle v[505] = {Circle{0,0}};\n    rep(i,n){\n        cin >> v[i].r;\n    }\n\n    rep(i,n){\n        double max_dist = v[i].r;\n        int p = 0;\n        rep(j,i){\n            //if(max_dist < dist(v[i],v[j]) + (limit - v[j].x)){\n            //    min_dist = dist(v[i],v[j]) + (limit - v[j].x);\n            //    p = j;\n            //}\n            max_dist = max(max_dist, dist(v[i],v[j]) + v[j].x);\n        }\n        if(i == p) v[i].x = v[i].r;\n        else v[i].x = max_dist;\n    }\n\n    double ans = 0;\n    rep(i,n){\n        ans = max(ans, v[i].x + v[i].r);\n    }\n    cout <<fixed << setprecision(5) <<  ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define N 10005\nusing namespace std;\n\nint main(){\n  int n,r[N];\n  cin>>n;\n  for(int i=0;i<n;i++)\n    cin>>r[i];\n  double x[N],ans=0;\n  x[0]=r[0];\n  for(int i=1;i<n;i++){\n    double maxx=0;\n    for(int j=0;j<i;j++){\n      int A=r[i]+r[j];\n      int B=r[i]-r[j];\n      maxx=max(maxx,max(x[j]+sqrt(A*A-B*B),1.0*r[i]));\n    }\n    x[i]=maxx;\n    ans=max(ans,x[i]+r[i]);\n  }\n  printf(\"%.8f\\n\",ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// region template\n#define rep(i, a, b) for (int i = (a); i < (b); ++i)\n#define trav(a, x) for (auto &a : x)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nll gcd(ll a, ll b) { return __gcd(a, b); }\n\nll euclid(ll a, ll b, ll &x, ll &y) {\n    if (b) { ll d = euclid(b, a % b, y, x);\n        return y -= a/b * x, d; }\n    return x = 1, y = 0, a;\n}\n\ntypedef unsigned long long ull;\ntypedef long double ld;\null mod_mul(ull a, ull b, ull M) {\n    ll ret = a * b - M * ull(ld(a) * ld(b) / ld(M));\n    return ret + M * (ret < 0) - M * (ret >= (ll)M);\n}\null mod_pow(ull b, ull e, ull mod) {\n    ull ans = 1;\n    for (; e; b = mod_mul(b, b, mod), e /= 2)\n        if (e & 1) ans = mod_mul(ans, b, mod);\n    return ans;\n}\n\nconst ll mod = 1000000007;\nstruct Mod {\n    ll x;\n    Mod(ll xx) : x(xx) {}\n    Mod operator+(Mod b) { return Mod((x + b.x) % mod); }\n    Mod operator-(Mod b) { return Mod((x - b.x) % mod); }\n    Mod operator*(Mod b) { return Mod((x * b.x) % mod); }\n    Mod operator/(Mod b) { return *this * invert(b); }\n    Mod invert(Mod a) {\n        ll x, y, g = euclid(a.x, mod, x, y);\n        assert(g == 1); return Mod((x + mod) % mod);\n    }\n    Mod operator^(ll e) {\n        if (!e) return Mod(1);\n        Mod r = *this ^ (e / 2); r = r * r;\n        return e & 1 ? *this * r : r;\n    }\n};\n// endregion\n\n\n\nint main() {\n    int n; cin >> n;\n    vector<double> r(n), x(n, -1e9);\n    rep(i, 0, n) cin >> r[i];\n    x[0] = 0;\n    rep(i, 1, n) {\n        rep(j, 0, i) {\n            x[i] = max(\n                x[i],\n                x[j] + sqrt((r[i] + r[j]) * (r[i] + r[j]) - (r[i] - r[j]) * (r[i] - r[j]))\n            );\n        }\n    }\n    double xmin = x[0] - r[0], xmax = x[0] + r[0];\n    rep(i, 1, n) {\n        xmin = min(xmin, x[i] - r[i]);\n        xmax = max(xmax, x[i] + r[i]);\n    }\n    cout << fixed << setprecision(9) << (xmax - xmin) << endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n\ntypedef long long ll;\nll const Inf = 1LL<<60;\n\nint N;\n\nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n\n  long double startx = radius[0];\n  rep(i, radius.size()) {\n    while(radius.size() > 1) {\n      bool ok = 0;\n      rep(k, i) {\n        long double len = (radius[k] + radius[i]); len *= len;\n        len -= abs(radius[k] - radius[i]) * abs(radius[k] - radius[i]);\n        len = sqrt(len);\n\n        if(len < radius[i]) {\n          startx = radius[i];\n          radius.erase(radius.begin() + k); N = radius.size();\n          k--;\n          ok = 1;\n        }\n      }\n      if(!ok) { break; }\n    }\n  }\n\n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n\n  printf(\"%.10Lf\\n\", accumulate(all(radius), 0) + radius[0] + radius.back());\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n// const long double PI = acos(-1);\nconstexpr int inf = 1e9;\nconstexpr ll INF = 2e18;\n// constexpr ll MOD = 1e9+7;\nconstexpr ll MOD = 998244353;\n\nint n;\ndouble r[510];\ndouble pos[510];\n\nvoid input() {\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n        cin >> r[i];\n        pos[i] = r[i];\n    }\n}\n\nvoid solve() {\n    pos[0] = r[0];\n    for (int i = 1; i < n; i++) {\n        for (int j = 0; j < i; j++) {\n            pos[i] = max(pos[i], pos[j] + 2 * sqrt(r[i] * r[j]));\n        }\n    }\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans = max(ans, pos[i] + r[i]);\n    }\n    cout << setprecision(20) << ans << endl;\n}\n\nint main(int argc, char *argv[]) {\n    input();\n    solve();\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint n, r[500]; long double x[501];\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) scanf(\"%d\", &r[i]);\n    for(int i = 0; i < n; i++) {\n        x[i] = r[i];\n        for(int j = 0; j < i; j++) {\n            long double dist = sqrtl((r[j] + r[i]) * (r[j] + r[i]) - (r[j] - r[i]) * (r[j] - r[i]));\n            x[i] = max(x[i], x[j] + dist);\n        }\n    }\n    long double ret = 0.0;\n    for(int i = 0; i < n; i++) {\n        ret = max(ret, x[i] + r[i]);\n    }\n    printf(\"%.9Lf\\n\", ret);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\n\n#define rep(i,n) for (int i = 0; i < (n); ++i)\n\nint n;\ndouble x, ans;\nvector<int> rad;\n\nint main(void) {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  cin >> n;\n  rad.resize(n);\n\n  rep(i,n) {\n    cin >> rad[i];\n  }\n\n  rep(i,rad.size()) {\n    x = 2 * sqrt(rad[i] * rad[i + 1]);\n    if (i == rad.size() - 1) {\n      x = 2 * sqrt(rad[i] * rad[i - 1]);\n      if (x < rad[i - 1]) {\n        rad.erase(rad.begin() + i);\n        continue;\n      }\n    }\n    else if (x < rad[i + 1]) {\n      rad.erase(rad.begin() + i);\n      continue;\n    }\n    else {\n      ans += x;\n    }\n  }\n\n  ans += rad[0] + rad[rad.size() - 1];\n  \n  cout << fixed << setprecision(10) <<  ans << endl;\n\n  return 0;\n}\n    "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\n\nusing namespace std;\nusing Real = double;\nusing Point = complex<Real>;\nconst Real EPS = 1e-8, PI = acos(-1);\n\n// 実数同士の比較\ninline bool eq(Real a, Real b) { return fabs(b - a) < EPS; }\n\nPoint operator*(const Point &p, const Real &d) {\n  return Point(real(p) * d, imag(p) * d);\n}\n\n// 入力\nistream &operator>>(istream &is, Point &p) {\n  Real a, b;\n  is >> a >> b;\n  p = Point(a, b);\n  return is;\n}\n\n// 出力\nostream &operator<<(ostream &os, Point &p) {\n  os << fixed << setprecision(10) << p.real() << \" \" << p.imag();\n}\n\n// 原点を中心として, 点 p を θ 回転すた点を返す\nPoint rotate(Real theta, const Point &p) {\n  return Point(cos(theta) * p.real() - sin(theta) * p.imag(), sin(theta) * p.real() + cos(theta) * p.imag());\n}\n\n// ラジアンを度数に変換\nReal radian_to_degree(Real r) {\n  return (r * 180.0 / PI);\n}\n\n// 度数をラジアンに変換\nReal degree_to_radian(Real d) {\n  return (d * PI / 180.0);\n}\n\n// ∠BAC をラジアンで取得\nReal get_angle(const Point &a, const Point &b, const Point &c) {\n  const Point v(b - a), w(c - a);\n  Real alpha = atan2(v.imag(), v.real()), beta = atan2(w.imag(), w.real());\n  if(alpha > beta) swap(alpha, beta);\n  Real theta = (beta - alpha);\n  return min(theta, 2 * acos(-1) - theta);\n}\n\n// x軸, y軸の順にソート\nnamespace std {\n  bool operator<(const Point &a, const Point &b) {\n    return !eq(a.real(), b.real()) ? a.real() < b.real() : a.imag() < b.imag();\n  }\n}\n\n// 直線\n// 2 点を通る直線\n// Ax + By = C  \nstruct Line {\n  Point a, b;\n\n  Line() = default;\n\n  Line(Point a, Point b) : a(a), b(b) {}\n\n  Line(Real A, Real B, Real C) // Ax + By = C\n  {\n    if(eq(A, 0)) a = Point(0, C / B), b = Point(1, C / B);\n    else if(eq(B, 0)) b = Point(C / A, 0), b = Point(C / A, 1);\n    else a = Point(0, C / B), b = Point(C / A, 0);\n  }\n\n  friend ostream &operator<<(ostream &os, Line &p) {\n    return os << p.a << \" to \" << p.b;\n  }\n\n  friend istream &operator>>(istream &is, Line &a) {\n    return is >> a.a >> a.b;\n  }\n};\n\n// 線分\n// 2 点を結ぶ\nstruct Segment : Line {\n  Segment() = default;\n  Segment(Point a, Point b) : Line(a, b) {}\n};\n\n\n// 円\n// 中心と半径\nstruct Circle {\n  Point p;\n  Real r;\n\n  Circle() = default;\n\n  Circle(Point p, Real r) : p(p), r(r) {}\n};\n\nusing Points = vector< Point >;\nusing Polygon = vector< Point >;   // 注意!! 凸多角形は反時計回りに与える.(保証されない場合は面積が負なら reverse をかける)\nusing Segments = vector< Segment >;\nusing Lines = vector< Line >;\nusing Circles = vector< Circle >;\n\n// 外積\nReal cross(const Point &a, const Point &b) {\n  return real(a) * imag(b) - imag(a) * real(b);\n}\n\n// 内積\nReal dot(const Point &a, const Point &b) {\n  return real(a) * real(b) + imag(a) * imag(b);\n}\n\n\n//          +1\n//          \n//  +2   a   0   b  -2\n//\n//          -1\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_1_C&lang=jp\nint ccw(const Point &a, Point b, Point c) {\n  b = b - a, c = c - a;\n  if(cross(b, c) > EPS) return +1;  // \"COUNTER_CLOCKWISE\"\n  if(cross(b, c) < -EPS) return -1; // \"CLOCKWISE\"\n  if(dot(b, c) < 0) return +2;      // \"ONLINE_BACK\"\n  if(norm(b) < norm(c)) return -2;  // \"ONLINE_FRONT\"\n  return 0;                         // \"ON_SEGMENT\"\n}\n\n\n// 2 直線が平行か\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_2_A\nbool parallel(const Line &a, const Line &b) {\n  return eq(cross(a.b - a.a, b.b - b.a), 0.0);\n}\n\n// 2 直線が垂直か\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_2_A\nbool orthogonal(const Line &a, const Line &b) {\n  return eq(dot(a.a - a.b, b.a - b.b), 0.0);\n}\n\n// 直線 l に 点 p から垂線を下ろして,交わる点を返す\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_1_A\nPoint projection(const Line &l, const Point &p) {\n  double t = dot(p - l.a, l.a - l.b) / norm(l.a - l.b);\n  return l.a + (l.a - l.b) * t;\n}\n\n// 同じ\n// 直線として扱われそう\nPoint projection(const Segment &l, const Point &p) {\n  double t = dot(p - l.a, l.a - l.b) / norm(l.a - l.b);\n  return l.a + (l.a - l.b) * t;\n}\n\n// 直線 l に対して, 点 p と線対称な位置にある点を返す.\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_1_B\nPoint reflection(const Line &l, const Point &p) {\n  return p + (projection(l, p) - p) * 2.0;\n}\n\n// 直線上に点が乗るかどうか\nbool intersect(const Line &l, const Point &p) {\n  return abs(ccw(l.a, l.b, p)) != 1;\n}\n\n// 直線 l と直線 m の交差判定\nbool intersect(const Line &l, const Line &m) {\n  return abs(cross(l.b - l.a, m.b - m.a)) > EPS || abs(cross(l.b - l.a, m.b - l.a)) < EPS;\n}\n\n// 線分上に点があるかどうか\nbool intersect(const Segment &s, const Point &p) {\n  return ccw(s.a, s.b, p) == 0;\n}\n\n// 直線 l と 線分 s の交差判定\nbool intersect(const Line &l, const Segment &s) {\n  return cross(l.b - l.a, s.a - l.a) * cross(l.b - l.a, s.b - l.a) < EPS;\n}\n\n// 点 p と 直線 l との距離\nReal distance(const Line &l, const Point &p);\n\n// 円 c と直線 l との交差判定\nbool intersect(const Circle &c, const Line &l) {\n  return distance(l, c.p) <= c.r + EPS;\n}\n\n// 点 p が 円 c 上にあるかどうか\nbool intersect(const Circle &c, const Point &p) {\n  return abs(abs(p - c.p) - c.r) < EPS;\n}\n\n\n// 線分同士の交差判定\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_2_B\nbool intersect(const Segment &s, const Segment &t) {\n  return ccw(s.a, s.b, t.a) * ccw(s.a, s.b, t.b) <= 0 && ccw(t.a, t.b, s.a) * ccw(t.a, t.b, s.b) <= 0;\n}\n\n// 円 c と 線分 l との交差判定\nint intersect(const Circle &c, const Segment &l) {\n  if(norm(projection(l, c.p) - c.p) - c.r * c.r > EPS) return 0;\n  auto d1 = abs(c.p - l.a), d2 = abs(c.p - l.b);\n  if(d1 < c.r + EPS && d2 < c.r + EPS) return 0;\n  if(d1 < c.r - EPS && d2 > c.r + EPS || d1 > c.r + EPS && d2 < c.r - EPS) return 1;\n  const Point h = projection(l, c.p);\n  if(dot(l.a - h, l.b - h) < 0) return 2;\n  return 0;\n}\n\n// 円同士の交差判定\n// 4 := 離れている\n// 3 := 外接する\n// 2 := 交わる\n// 1 := 内接する\n// 0 := 内包する\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_7_A&lang=jp\nint intersect(Circle c1, Circle c2) {\n  if(c1.r < c2.r) swap(c1, c2);\n  Real d = abs(c1.p - c2.p);\n  if(c1.r + c2.r < d) return 4;\n  if(eq(c1.r + c2.r, d)) return 3;\n  if(c1.r - c2.r < d) return 2;\n  if(eq(c1.r - c2.r, d)) return 1;\n  return 0;\n}\n\n// 点と点の距離\nReal distance(const Point &a, const Point &b) {\n  return abs(a - b);\n}\n\n// 直線と点の距離\nReal distance(const Line &l, const Point &p) {\n  return abs(p - projection(l, p));\n}\n\n// 直線と直線の距離 (もちろん交わってたら 0)\nReal distance(const Line &l, const Line &m) {\n  return intersect(l, m) ? 0 : distance(l, m.a);\n}\n\n// 線分と点の距離\nReal distance(const Segment &s, const Point &p) {\n  Point r = projection(s, p);\n  if(intersect(s, r)) return abs(r - p);\n  return min(abs(s.a - p), abs(s.b - p));\n}\n\n// 線分同士の距離\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_2_D\nReal distance(const Segment &a, const Segment &b) {\n  if(intersect(a, b)) return 0;\n  return min({distance(a, b.a), distance(a, b.b), distance(b, a.a), distance(b, a.b)});\n}\n\n// 直線と線分の距離\nReal distance(const Line &l, const Segment &s) {\n  if(intersect(l, s)) return 0;\n  return min(distance(l, s.a), distance(l, s.b));\n}\n\n// 直線同士の交点を返す (交差することが要請されるのかな (事前にintersect を呼べばいい))\nPoint crosspoint(const Line &l, const Line &m) {\n  Real A = cross(l.b - l.a, m.b - m.a);\n  Real B = cross(l.b - l.a, l.b - m.a);\n  if(eq(abs(A), 0.0) && eq(abs(B), 0.0)) return m.a;\n  return m.a + (m.b - m.a) * B / A;\n}\n\n// 線分同士の交点を返す (交差することが要請されるのかな (事前にintersect を呼べばいい))\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_2_C\nPoint crosspoint(const Segment &l, const Segment &m) {\n  return crosspoint(Line(l), Line(m));\n}\n\n\n// 円と直線の交点を返す (交差することが要請されるのかな (事前にintersect を呼べばいい))\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_7_D\npair< Point, Point > crosspoint(const Circle &c, const Line l) {\n  Point pr = projection(l, c.p);\n  Point e = (l.b - l.a) / abs(l.b - l.a);\n  if(eq(distance(l, c.p), c.r)) return {pr, pr};\n  double base = sqrt(c.r * c.r - norm(pr - c.p));\n  return {pr - e * base, pr + e * base};\n}\n\n\n// 円と線分の交点を返す (交差することが要請されるのかな (事前にintersect を呼べばいい))\npair< Point, Point > crosspoint(const Circle &c, const Segment &l) {\n  Line aa = Line(l.a, l.b);\n  if(intersect(c, l) == 2) return crosspoint(c, aa);\n  auto ret = crosspoint(c, aa);\n  if(dot(l.a - ret.first, l.b - ret.first) < 0) ret.second = ret.first;\n  else ret.first = ret.second;\n  return ret;\n}\n\n// 円同士の交点を返す (交差することが要請されるのかな (事前にintersect を呼べばいい))\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_7_E\npair< Point, Point > crosspoint(const Circle &c1, const Circle &c2) {\n  Real d = abs(c1.p - c2.p);\n  Real a = acos((c1.r * c1.r + d * d - c2.r * c2.r) / (2 * c1.r * d));\n  Real t = atan2(c2.p.imag() - c1.p.imag(), c2.p.real() - c1.p.real());\n  Point p1 = c1.p + Point(cos(t + a) * c1.r, sin(t + a) * c1.r);\n  Point p2 = c1.p + Point(cos(t - a) * c1.r, sin(t - a) * c1.r);\n  return {p1, p2};\n}\n\n// 点 p から円 C へ接戦を引いた時の、接点を返す\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_7_F\npair< Point, Point > tangent(const Circle &c1, const Point &p2) {\n  return crosspoint(c1, Circle(p2, sqrt(norm(c1.p - p2) - c1.r * c1.r)));\n}\n\n// 円と円の共通接線を複数返す\n// 0 ~ 4 つの可能性がある\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_7_G\nLines tangent(Circle c1, Circle c2) {\n  Lines ret;\n  if(c1.r < c2.r) swap(c1, c2);\n  Real g = norm(c1.p - c2.p);\n  if(eq(g, 0)) return ret;\n  Point u = (c2.p - c1.p) / sqrt(g);\n  Point v = rotate(PI * 0.5, u);\n  for(int s : {-1, 1}) {\n    Real h = (c1.r + s * c2.r) / sqrt(g);\n    if(eq(1 - h * h, 0)) {\n      ret.emplace_back(c1.p + u * c1.r, c1.p + (u + v) * c1.r);\n    } else if(1 - h * h > 0) {\n      Point uu = u * h, vv = v * sqrt(1 - h * h);\n      ret.emplace_back(c1.p + (uu + vv) * c1.r, c2.p - (uu + vv) * c2.r * s);\n      ret.emplace_back(c1.p + (uu - vv) * c1.r, c2.p - (uu - vv) * c2.r * s);\n    }\n  }\n  return ret;\n}\n\n// 多角形が凸かどうかを判定\n// 与えられる多角形は反時計回りなことが要請される\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_3_B\nbool is_convex(const Polygon &p) {\n  int n = (int) p.size();\n  for(int i = 0; i < n; i++) {\n    if(ccw(p[(i + n - 1) % n], p[i], p[(i + 1) % n]) == -1) return false;\n  }\n  return true;\n}\n\n// 凸包に含まれる点上および辺上の頂点からなる多角形を返す.\n// 多角形の開始位置は特に指定がない.\n// 反時計回りに返されることは保証されていそう\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_4_A\nPolygon convex_hull(Polygon &p) {\n  int n = (int) p.size(), k = 0;\n  if(n <= 2) return p;\n  sort(p.begin(), p.end());\n  vector< Point > ch(2 * n);\n  for(int i = 0; i < n; ch[k++] = p[i++]) {\n    while(k >= 2 && cross(ch[k - 1] - ch[k - 2], p[i] - ch[k - 1]) < 0) --k;\n  }\n  for(int i = n - 2, t = k + 1; i >= 0; ch[k++] = p[i--]) {\n    while(k >= t && cross(ch[k - 1] - ch[k - 2], p[i] - ch[k - 1]) < 0) --k;\n  }\n  ch.resize(k - 1);\n  return ch;\n}\n\n// 多角形 Q と点 p との関係を返す\n// 0 := OUT\n// 1 := ON\n// 2 := IN\n// 多角形は反時計回りに渡す\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_3_C\nenum {\n  OUT, ON, IN\n};\nint contains(const Polygon &Q, const Point &p) {\n  bool in = false;\n  for(int i = 0; i < Q.size(); i++) {\n    Point a = Q[i] - p, b = Q[(i + 1) % Q.size()] - p;\n    if(a.imag() > b.imag()) swap(a, b);\n    if(a.imag() <= 0 && 0 < b.imag() && cross(a, b) < 0) in = !in;\n    if(cross(a, b) == 0 && dot(a, b) <= 0) return ON;\n  }\n  return in ? IN : OUT;\n}\n\n// TODO よくわからん\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1033\nvoid merge_segments(vector< Segment > &segs) {\n\n  auto merge_if_able = [](Segment &s1, const Segment &s2) {\n    if(abs(cross(s1.b - s1.a, s2.b - s2.a)) > EPS) return false;\n    if(ccw(s1.a, s2.a, s1.b) == 1 || ccw(s1.a, s2.a, s1.b) == -1) return false;\n    if(ccw(s1.a, s1.b, s2.a) == -2 || ccw(s2.a, s2.b, s1.a) == -2) return false;\n    s1 = Segment(min(s1.a, s2.a), max(s1.b, s2.b));\n    return true;\n  };\n\n  for(int i = 0; i < segs.size(); i++) {\n    if(segs[i].b < segs[i].a) swap(segs[i].a, segs[i].b);\n  }\n  for(int i = 0; i < segs.size(); i++) {\n    for(int j = i + 1; j < segs.size(); j++) {\n      if(merge_if_able(segs[i], segs[j])) {\n        segs[j--] = segs.back(), segs.pop_back();\n      }\n    }\n  }\n}\n\n// TODO よくわからん\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1033\nvector< vector< int > > segment_arrangement(vector< Segment > &segs, vector< Point > &ps) {\n  vector< vector< int > > g;\n  int N = (int) segs.size();\n  for(int i = 0; i < N; i++) {\n    ps.emplace_back(segs[i].a);\n    ps.emplace_back(segs[i].b);\n    for(int j = i + 1; j < N; j++) {\n      const Point p1 = segs[i].b - segs[i].a;\n      const Point p2 = segs[j].b - segs[j].a;\n      if(cross(p1, p2) == 0) continue;\n      if(intersect(segs[i], segs[j])) {\n        ps.emplace_back(crosspoint(segs[i], segs[j]));\n      }\n    }\n  }\n  sort(begin(ps), end(ps));\n  ps.erase(unique(begin(ps), end(ps)), end(ps));\n\n  int M = (int) ps.size();\n  g.resize(M);\n  for(int i = 0; i < N; i++) {\n    vector< int > vec;\n    for(int j = 0; j < M; j++) {\n      if(intersect(segs[i], ps[j])) {\n        vec.emplace_back(j);\n      }\n    }\n    for(int j = 1; j < vec.size(); j++) {\n      g[vec[j - 1]].push_back(vec[j]);\n      g[vec[j]].push_back(vec[j - 1]);\n    }\n  }\n  return (g);\n}\n\n\n// 直線の進行方向の右側を残す\n// Polygon は反時計回りに与える\n// Line には一応向きがあるわけで\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_4_C\nPolygon convex_cut(const Polygon &U, Line l) {\n  Polygon ret;\n  for(int i = 0; i < U.size(); i++) {\n    Point now = U[i], nxt = U[(i + 1) % U.size()];\n    if(ccw(l.a, l.b, now) != -1) ret.push_back(now);\n    if(ccw(l.a, l.b, now) * ccw(l.a, l.b, nxt) < 0) {\n      ret.push_back(crosspoint(Line(now, nxt), l));\n    }\n  }\n  return (ret);\n}\n\n\n// 多角形の面積\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_3_A\nReal area2(const Polygon &p) {\n  Real A = 0;\n  for(int i = 0; i < p.size(); ++i) {\n    A += cross(p[i], p[(i + 1) % p.size()]);\n  }\n  return A;\n}\n\n// 多角形と円の共通部分の面積\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_7_H\nReal area2(const Polygon &p, const Circle &c) {\n  if(p.size() < 3) return 0.0;\n  function< Real(Circle, Point, Point) > cross_area = [&](const Circle &c, const Point &a, const Point &b) {\n    Point va = c.p - a, vb = c.p - b;\n    Real f = cross(va, vb), ret = 0.0;\n    if(eq(f, 0.0)) return ret;\n    if(max(abs(va), abs(vb)) < c.r + EPS) return f;\n    if(distance(Segment(a, b), c.p) > c.r - EPS) return c.r * c.r * arg(vb * conj(va));\n    auto u = crosspoint(c, Segment(a, b));\n    vector< Point > tot{a, u.first, u.second, b};\n    for(int i = 0; i + 1 < tot.size(); i++) {\n      ret += cross_area(c, tot[i], tot[i + 1]);\n    }\n    return ret;\n  };\n  Real A = 0;\n  for(int i = 0; i < p.size(); i++) {\n    A += cross_area(c, p[i], p[(i + 1) % p.size()]);\n  }\n  return A;\n}\n\n// 凸多角形 g の直径を求めよ。ただし、凸多角形の直径とはその最遠頂点対間距離のことである.\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_4_B\nReal convex_diameter(const Polygon &p) {\n  int N = (int) p.size();\n  int is = 0, js = 0;\n  for(int i = 1; i < N; i++) {\n    if(p[i].imag() > p[is].imag()) is = i;\n    if(p[i].imag() < p[js].imag()) js = i;\n  }\n  Real maxdis = norm(p[is] - p[js]);\n\n  int maxi, maxj, i, j;\n  i = maxi = is;\n  j = maxj = js;\n  do {\n    if(cross(p[(i + 1) % N] - p[i], p[(j + 1) % N] - p[j]) >= 0) {\n      j = (j + 1) % N;\n    } else {\n      i = (i + 1) % N;\n    }\n    if(norm(p[i] - p[j]) > maxdis) {\n      maxdis = norm(p[i] - p[j]);\n      maxi = i;\n      maxj = j;\n    }\n  } while(i != is || j != js);\n  return sqrt(maxdis);\n}\n\n\n// 平面上の n 個の点について、最も近い２点の距離.\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=CGL_5_A\nReal closest_pair(Points ps) {\n  if(ps.size() <= 1) throw (0);\n  sort(begin(ps), end(ps));\n\n  auto compare_y = [&](const Point &a, const Point &b) {\n    return imag(a) < imag(b);\n  };\n  vector< Point > beet(ps.size());\n  const Real INF = 1e18;\n\n  function< Real(int, int) > rec = [&](int left, int right) {\n    if(right - left <= 1) return INF;\n    int mid = (left + right) >> 1;\n    auto x = real(ps[mid]);\n    auto ret = min(rec(left, mid), rec(mid, right));\n    inplace_merge(begin(ps) + left, begin(ps) + mid, begin(ps) + right, compare_y);\n    int ptr = 0;\n    for(int i = left; i < right; i++) {\n      if(abs(real(ps[i]) - x) >= ret) continue;\n      for(int j = 0; j < ptr; j++) {\n        auto luz = ps[i] - beet[ptr - j - 1];\n        if(imag(luz) >= ret) break;\n        ret = min(ret, abs(luz));\n      }\n      beet[ptr++] = ps[i];\n    }\n    return ret;\n  };\n  return rec(0, (int) ps.size());\n}\n\n\nsigned main(){\n\n    int n; cin >> n;\n    vector<double> r(n);\n    for(int i = 0; i < n; i++){\n        cin >> r[i];\n    }\n\n    Circles cs;\n    cs.push_back(Circle(Point(r[0], r[0]), r[0]));\n\n    for(int i = 1; i < n; i++){\n        // [0, i)\n        double next_x = r[i];    \n        for(int j = 0; j < i; j++){\n            double r1 = r[j];\n            double r2 = r[i];\n            double delta = sqrt((r1 + r2) * (r1 + r2) - (r1 - r2) * (r1 - r2));\n            next_x = max(next_x, delta + cs[j].p.real());\n        }\n\n        cs.push_back(Circle(Point(next_x, r[i]), r[i]));\n    }\n    \n    //for(int i = 0; i < n; i++) cout << cs[i].p.real() << \" \" << cs[i].p.imag() << \" \" << cs[i].r << endl;\n    \n    double ans = 0.0;\n    for(int i = 0; i < n; i++) ans = max(ans, cs[i].p.real() + cs[i].r);\n    printf(\"%.10f\\n\", ans);\n    return 0;\n\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      int x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n      if(x < C[i])\n        ans += C[i];\n      else\n        ans += x;\n    }else if(C[i] < C[i + 1]){\n      int y = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n        if(y < C[i + 1])\n          ans += C[i + 1];\n        else\n          ans += y;\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  printf(\"%.10f\\n\", ans + C[0] + C[n - 1]);\n} "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\ndouble calcoo(double r1,double r2){\n  //cout << \"cal:\"<< r1 << \" \" << r2 <<\"->\" << sqrt(exp2(r1+r2)-exp2(r1-r2)) <<endl;\n  \n  if(r1==r2)return 2*r1;\n  return sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\nint main()\n{\n  int n;\n\n  cin >> n;\n\n  double r[n];\n  \n\n  for(int i=0;i<n;i++)\n    cin >> r[i];\n\n  vector<double> x;\n  vector<double> r_len;\n  \n  double len=0;\n \n  x.push_back(r[0]);\n  r_len.push_back(r[0]);\n  \n  for(int i=1;i<n;i++){\n    //???????????§??\\????????????????????????\n    double max_x=r[i];\n    int selected = -1;\n    for(int j=0;j<x.size();j++){\n      //cout << \"x[j]:\" << x[j] << endl;\n      double tmp = x[j]+calcoo(r[i],r_len[j]); \n      if(max_x< tmp){\n\tmax_x=tmp;\n\tselected=j;\n      }\n    }\n    //?????°?????????????????????\n    //x.erase(v.begin()+selected);\n    //r_len.erace(r_len.begin()+selected);\n    cout << max_x << endl;\n    x.push_back(max_x);\n    r_len.push_back(r[i]);   \n  }\n  \n  double ans=-1.0;\n  for(int i=0;i<x.size();i++){\n    if(ans<x[i]+r_len[i])ans=x[i]+r_len[i];\n  }\n  \n  printf(\"%.10f\",ans);\n  \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cassert>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010],x[1010];\n\nconst double eps=1e-6;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\trep(i,m){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(r[i]-cy)*(r[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\trep(i,n){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\tcx=x[j]+sqrt(d);\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n            if(i>0&&x[i-1]>=cx) continue;\n            if(cross(i,cx,r[i])) continue;\n            if(cx<x[i]) x[i]=cx;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << r[i] << endl;\n\t}\n\n\tdouble ans=0.0;\n\trep(i,n) ans=max(ans,x[i]+r[i]);\n\tcout.precision(20);\n\tassert(ans<inf);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD NUM000007\n#define EPS 0.000000001\n#define NUM 30000\nusing namespace std;\n\ndouble calc_dist(double left_x,double left_y,double right_x,double right_y){\n\treturn sqrt((left_x-right_x)*(left_x-right_x)+(left_y-right_y)*(left_y-right_y));\n}\n\nint main(){\n\n\tint N;\n\tdouble most_right_loc,most_right_r,tmp_r,tmp;\n\tdouble left,right,m,dist,tmp_loc;\n\n\tscanf(\"%d\",&N);\n\tscanf(\"%lf\",&most_right_loc);\n\tmost_right_r = most_right_loc;\n\n\tfor(int loop = 1; loop <= N-1; loop++){\n\n\t\tscanf(\"%lf\",&tmp_r);\n\n\t\tleft = 0;\n\t\tright = most_right_loc+most_right_r+tmp_r;\n\t\tm = (left+right)/2;\n\n\t\tdist = most_right_r+tmp_r;\n\n\t\twhile(left<=right){\n\t\t\ttmp = calc_dist(most_right_loc,most_right_r,m,tmp_r);\n\n\t\t\tif(abs(dist-tmp) < EPS){ //OK\n\t\t\t\ttmp_loc = m;\n\t\t\t\tif(tmp_loc < tmp_r)tmp_loc = tmp_r;\n\n\t\t\t\tif(tmp_loc+tmp_r > most_right_loc+most_right_r){\n\t\t\t\t\tmost_right_loc = tmp_loc;\n\t\t\t\t\tmost_right_r = tmp_r;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tif(tmp > dist){\n\t\t\t\t\tright = m-EPS;\n\t\t\t\t}else{\n\t\t\t\t\tleft = m+EPS;\n\t\t\t\t}\n\t\t\t}\n\t\t\tm = (left+right)/2;\n\t\t}\n\t}\n\n\tprintf(\"%.8lf\\n\",most_right_loc+most_right_r);\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#define _USE_MATH_DEFINES\n#include <cmath>\n#include <climits>\n#include <cstdlib>\n#include <cstring>\n#include <cfloat>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <cctype>\n#include <cstdio>\n#include <cassert>\nusing namespace std;\n\n#define EPS 1e-12\n#define ull unsigned long long\n#define ll long long\n#define VI vector<ll>\n#define PII pair<ll, ll> \n#define VVI vector<vector<ll> >\n#define REP(i,n) for(int i=0,_n=(n);(i)<(int)_n;++i)\n#define RANGE(i,a,b) for(int i=(int)a,_b=(int)(b);(i)<_b;++i)\n#define RANGE_R(i,a,b) for(int i=(int)b-1,_a=(int)(a);(i)>=_a;--i)\n#define MIN_UPDATE(target, value) target = min(target, value)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define ALLR(c) (c).rbegin(), (c).rend()\n#define PB push_back\n#define MP(a, b) make_pair(a, b)\n#define POPCOUNT(v) __builtin_popcountll((ll)(v))\n#define IN_RANGE(v, a, b) ((a)<=(v) && (v)<(b))\n#define CLEAR(table, v) memset(table, v, sizeof(table));\n#define PRINT1(table, D0) REP(d0, D0) cout<<table[d0]<<\" \"; cout<<\"\\n\";\n#define PRINT2(table, D0, D1) REP(d0, D0) { REP(d1, D1) cout<<table[d0][d1]<<\" \"; cout<<\"\\n\"; }\n#define PRINT3(table, D0, D1, D2) REP(d0, D0) { REP(d1, D1) { REP(d2, D2) cout<<table[d0][d1][d2]<<\" \"; cout<<\"\\n\"; } cout<<\"\\n\"; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const map<T0, T1>& v) { for( typename map<T0, T1>::const_iterator p = v.begin(); p!=v.end(); p++ ){os << p->first << \": \" << p->second << \" \";} return os; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const pair<T0, T1>& v) { os << v.first << \": \" << v.second << \" \"; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<T>& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << \" \"; } return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const set<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const deque<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<vector<T> >& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << endl; } return os; }\n\n\n/*\n\n*/\nint main() {\n\tll N;\n\twhile(1) {\n\t\tcin>>N;\n\t\tif(!N)break;\n\t\tVI w(N);\n\t\tREP(i, N) cin>>w[i];\n\t\tdouble minX=0, maxX=0;\n\t\tvector<double> x(N+1);\n\t\tREP(i, N) {\n\t\t\tREP(j, i) {\n\t\t\t\tdouble X=x[j] + sqrt(pow(w[j]+w[i], 2) - pow(fabs(w[j]-w[i]), 2));\n\t\t\t\tx[i]=max(x[i], X);\n\t\t\t}\n\t\t\tminX=min(minX, x[i]-w[i]);\n\t\t\tmaxX=max(maxX, x[i]+w[i]);\n\t\t}\n\t\tprintf(\"%.10f\\n\", maxX-minX);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1e9\n\nint main(){\n\tint n;\n\twhile(cin>>n){\n\t\tvector<double> a(n),cp(n,-INF);\n\t\tfor(auto &i:a) cin>>i;\n\t\tdouble l=0, r=a[0]*2;\n\t\t\n\t\tcp[0]=a[0];\n\t\tfor(int i=1;i<n;i++){\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tdouble d=a[j]+a[i];\n\t\t\t\tdouble h=fabs(a[j]-a[i]);\n\t\t\t\tcp[i]=max(cp[i],sqrt(d*d-h*h)+cp[j]);\n\t\t\t}\n\t\t\tl=min(l,cp[i]-a[i]);\n\t\t\tr=max(r,cp[i]+a[i]);\n\t\t}\n\t\tcout<<fixed<<setprecision(13)<<r-l<<endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<fstream>\n#include<stdio.h>\n#include<string>\n#include<vector>\n#include<map>\n#include<math.h>\n#include<algorithm>\n#include<iomanip>\n#include<set>\n#include<utility>\n\nusing namespace std;\n\ndouble f(double r1, double r2) {\n  if(r2 > r1) swap(r1, r2);\n  return sqrt(pow(r1 + r2, 2) - pow(r2 - r1, 2));\n}\n\nint main() {\n  int n;\n  cin >> n;\n  vector<double> d(n);\n  for(int i = 0; i < n; i++) cin >> d[i];\n  vector<double> e(n);\n  e[0] = d[0];\n  for(int i = 1; i < n; i++) {\n    double m = d[i];\n    for(int j = 0; j < i; j++) {\n      m = max(m, e[j] + f(d[i], d[j]));\n    }\n    e[i] = m;\n  }\n  double ans = 0;\n  for(int i = 0; i < n; i++) ans = max(ans, d[i] + e[i]);\n  printf(\"%.9llf\\n\", ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < (int)(n); i++)\n\ndouble a[510];\nint n;\n\ndouble solve(){\n    vector<double> x;\n    x.push_back(a[0]);\n    for(int i = 1; i < n; i++){\n        double left = a[i];\n        rep(j,i){\n            double p = a[i]+a[j];\n            double q = a[i]-a[j];\n            double dx = sqrt(p*p - q*q);\n            left = max(left, dx + x[j]);\n        }\n        x.push_back(left);\n    }\n    double res = 0;\n    rep(i,n) res = max(res, x[i]+a[i]);\n    return res;\n}\n\nint main(){\n    while(cin >> n){\n        rep(i,n) cin >> a[i];\n        printf(\"%.10lf\\n\", solve());\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nint main(){\n\tint N;double d;\n\tscanf(\"%d%lf\",&N,&d);\n\tvector<pair<double,double> >v={{d,d}};\n\t//????????????**2-??????(??????)??????**2 == ?¨?????????????**2\n\tfor(int i=1;i<N;i++){\n\t\tscanf(\"%lf\",&d);\n\t\tvector<double>a(i);\n\t\ttransform(v.begin(),v.end(),a.begin(),[&](const pair<double,double> &e)->double{\n\t\t\treturn sqrt((e.first+d)*(e.first+d) - (e.first-d)*(e.first-d)) + e.second;\n\t\t});\n\t\tv.emplace_back(d,max(d,*max_element(a.begin(),a.end())));\n\t}\n\tvector<double>a(N);\n\ttransform(v.begin(),v.end(),a.begin(),[&](const pair<double,double> &e)->double{\n\t\treturn e.first+e.second;\n\t});\n\tprintf(\"%f\\n\",*max_element(a.begin(),a.end()));\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <tuple>\n#include <queue>\n#include <set>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <array>\n#include <functional>\n#include <list>\n#include <iomanip>\n#include <set>\nconst int MOD=1000000007;\nconst int INF=1000000000;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\nconst double eps=1e-9;\nconst int inf=1e9;\ntypedef pair<int,int> P;\nstruct Point\n{\n  double x,y;\n  Point(){x=0;y=0;}\n  Point(double d_x,double d_y){x=d_x,y=d_y;}\n  double operator*(Point obj){return obj.x*x+obj.y*y;}\n  double operator%(Point obj){return obj.y*x-obj.x*y;}\n  Point operator*(double b){Point tmp;tmp.x=x*b;tmp.y=y*b;return tmp;}\n  Point operator/(double b){Point tmp;tmp.x=x/b;tmp.y=y/b;return tmp;}\n  Point operator+(Point obj){Point tmp;tmp.x=x+obj.x;tmp.y=y+obj.y;return tmp;}\n  Point operator-(){Point tmp;tmp.x=-x;tmp.y=-y;return tmp;}\n  Point operator-(Point obj){Point tmp;tmp.x=x-obj.x;tmp.y=y-obj.y;return tmp;}\n  Point operator-=(Point obj){x-=obj.x;y-=obj.y;return *this;}\n  Point operator+=(Point obj){x+=obj.x;y+=obj.y;return *this;}\n  Point operator/=(double b){x=x/b;y=y/b;return *this;}\n  Point operator*=(double b){x=x*b;y=y*b;return *this;}\n  double size(){return hypot(x,y);}\n  Point unit(){return Point(x/size(),y/size());}\n  Point normal(){return Point(y,-x);}\n  double atan(){return atan2(y,x);}\n};\n\nbool operator<(Point a,Point b){return a.x!=b.x?a.x<b.x:a.y<b.y;}\nbool operator>(Point a,Point b){return b<a;}\nbool operator<=(Point a,Point b){return !(b<a);}\nbool operator>=(Point a,Point b){return !(a<b);}\nbool operator==(Point a,Point b){return (a-b).size()<eps;}\nbool operator!=(Point a,Point b){return !(a==b);}\n\nbool equal(double a,double b){return abs(a-b)<eps;}\ndouble cross(Point a,Point b){return a%b;}\ndouble dot(Point a,Point b){return a*b;}\n\nint ccw(Point a,Point b,Point c)\n{\n  b=b-a;\n  c=c-a;\n  if(b%c>0) return +1;\n  else if(b%c<0)return -1;\n  else if(b*c<0) return +2;\n  else if(b.size()<c.size()) return -2;\n  else return 0;\n}\n\nint n;\nint main(int argc,char const* argv[])\n{\n  cin >> n;\n  double r[n];\n  for(int i=0;i<n;i++)\n    {\n      cin >> r[i];\n    }\n  double newr[n];\n  double rmax=0;\n  for(int now=0;now<n;now++)\n    {\n      double nowr=r[now];\n      for(int bef=0;bef<now;bef++)\n\t{\n\t  nowr=max(nowr,r[bef]+sqrt(pow(r[now]+r[bef],2)-pow(r[now]-r[bef],2)));\n\t}\n      newr[now]=nowr;\n      rmax=max(rmax,newr[now]+r[now]);\n    }\n  cout << fixed << setprecision(12) << rmax << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <cstdio>\n\nusing namespace std;\n\nint main(){\n\tint N;\n\tdouble d[505], x[505]={0.0}, ans=0.0;\n\t\n\tcin >> N;\n\tfor(int i=0; i<N; i++){\n\t\tcin >> d[i];\n\t\tx[i] = d[i];\n\t\tfor(int j=0; j<i; j++){\n\t\t\tdouble h = abs( d[i]-d[j] );\n\t\t\tdouble r = d[i] + d[j];\n\t\t\tdouble w = sqrt( r*r - h*h );\n\t\t\tx[i] = max(x[i], x[j]+w);\n\t\t}\n\t\tans = max(ans, x[i] + d[i]);\n\t}\n\tprintf(\"%0.6f\\n\", ans);\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\n\nint main()\n{\n    int n; cin>>n;\n    vector<int> r(n); for(auto& e: r) cin>>e;\n\n    vector<double> x;\n    x.push_back(r[0]);\n\n    for(int i=1; i<n; ++i) {\n        double t=r[i];\n        for(int j=0; j<i; ++j) {\n#define s(x) ((x)*(x))\n            double d=sqrt(s(r[i]+r[j])-s(r[i]-r[j]));\n            t=max(t, d+x[j]);\n        }\n        x.push_back(t);\n    }\n    double res=0;\n    for(int i=0; i<n; ++i) res=max(res, x[i]+r[i]);\n    printf(\"%.9f\\n\", res);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <functional>\nusing namespace std;\n\n#define rep(i,a,n) for(int (i)=(a); (i)<(n); (i)++)\n#define repq(i,a,n) for(int (i)=(a); (i)<=(n); (i)++)\n#define repr(i,a,n) for(int (i)=(a); (i)>=(n); (i)--)\n#define int long long int\n\ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconstexpr ll INF = 1001001001001001LL;\nconstexpr ll MOD = 1000000007LL;\n\nsigned main() {\n    int N; cin >> N;\n    vector<double> a(N);\n    rep(i,0,N) cin >> a[i];\n    double ans = 0.0;\n\n    if(N == 1) {\n        printf(\"%.12f\\n\", a[0] * 2.0);\n        return 0;\n    }\n\n    rep(i,0,N-1) {\n        double d = 2 * sqrt(a[i] * a[i+1]);\n        ans += max(d, max(a[i], a[i+1]));\n        if(i == 0) {\n            if(a[i] < d && a[i+1] < d) ans += a[i];\n        }\n        if(i == N-2) {\n            if(a[i] < d && a[i+1] < d) ans += a[i+1];\n        }\n    }\n    printf(\"%.12f\\n\", ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\ntypedef pair<double,double> mp;\n#define inf 1e9\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\tvector<double> a(n+1,0);\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tvector<double> res(n+1);\n\tres[0] = 0;\n\tfor(int i=1;i<=n;i++){\n\t    \tdouble ma = a[i] ;\n\t\tfor(int j=i-1;j>=0;j--){\n\t\t\tma = max(ma, res[j] + sqrt( (a[i]+a[j])*(a[i]+a[j]) - (a[i]-a[j])*(a[i]-a[j]) ) );\n\t\t}\n\t\tres[i] = ma;\n\t}\n\n\tdouble ans = 0;\n\tfor(int i=0 ; i<=n; i++){\n\t    ans= max(ans,res[i]+a[i]) ;\n\t}\n\tprintf(\"%0.10lf\\n\",ans);\n\treturn 0;\t\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#define  _CRT_SECURE_NO_WARNINGS\n#pragma comment (linker, \"/STACK:526000000\")\n\n#include \"bits/stdc++.h\"\n\nusing namespace std;\ntypedef string::const_iterator State;\n#define eps 1e-11L\n#define MAX_MOD 1000000007LL\n#define GYAKU 500000004LL\n\n#define MOD 998244353LL\n#define seg_size 262144*2LL\n#define pb push_back\n#define mp make_pair\ntypedef long long ll;\n#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))\n#define ALL(x) (x).begin(),(x).end()\n\nunsigned long xor128() {\n\tstatic unsigned long x = 123456789, y = 362436069, z = 521288629, w = time(NULL);\n\tunsigned long t = (x ^ (x << 11));\n\tx = y; y = z; z = w;\n\treturn (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)));\n}\n\nvoid init() {\n\tiostream::sync_with_stdio(false);\n\tcout << fixed << setprecision(20);\n}\n\n#define int ll\nvoid solve(){\n\tint n;\n\tcin >> n;\n\tvector<pair<long double, long double>> inputs;\n\tREP(i, n) {\n\t\tlong double rad;\n\t\tcin >> rad;\n\t\tlong double x = rad;\n\t\tREP(q, inputs.size()) {\n\t\t\tlong double now_go = inputs[q].second;\n\t\t\tnow_go += sqrt(pow(rad + inputs[q].first, 2) - pow(rad - inputs[q].first, 2));\n\t\t\tx = max(x, now_go);\n\t\t}\n\t\tinputs.push_back(mp(rad, x));\n\t}\n\tlong double ans = 0;\n\tREP(i, inputs.size()) {\n\t\tans = max(ans, inputs[i].first + inputs[i].second);\n\t}\n\tcout << ans << endl;\n\treturn;\n}\n\n#undef int\nint main() {\n\tinit();\n\tsolve();\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tvector< pair<double,double> > p;\n\tdouble ans1 = 0;\n\tdouble ans2 = 0;\n\tfor(int i = 0 ; i < n ; i++){\n\t\tdouble r;\n\t\tcin >> r;\n\t\tif( i == 0 ){\n\t\t\tp.push_back({r,0});\n\t\t}else{\n\t\t\tdouble mx = 0;\n\t\t\tfor(int j = 0 ; j < i ; j++){\n\t\t\t\tdouble dx = sqrt( (r+p[j].first) * (r+p[j].first)  - (r-p[j].first) * (r-p[j].first) );\n\t\t\t\tmx = max(mx,p[j].second+dx);\n\t\t\t}\n\t\t\tp.push_back({r,mx});\n\t\t}\n\t\tans1 = min(ans1,p.back().second - p.back().first);\n\t\tans2 = max(ans2,p.back().second + p.back().first);\n\t}\n\tprintf(\"%.10lf\\n\",ans2-ans1);\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cmath>\n\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n\nusing namespace::std;\n\n#define ls t<<1\n#define rs (t<<1)|1\n#define sqr(x) ((x)*(x))\n\nconst int inf = 0x3f3f3f3f;\nconst double eps = 1e-6;\nconst int maxn = 500 + 10;\nconst int maxm = 1e4 + 10;\nconst int mod = 1e9 + 7;\nint n;\ndouble d[maxn], r[maxn];\n\nint main()\n{\n\twhile (~scanf(\"%d\", &n))\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tscanf(\"%lf\", &r[i]);\n\t\td[0] = r[0];\n\t\tfor (int i = 1; i < n; i++)\n\t\t{\n\t\t\tint pos = -1;\n\t\t\tfor (int j = i - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tif (r[i] <= r[j])\n\t\t\t\t{\n\t\t\t\t\tpos = j; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pos != -1)\n\t\t\t\td[i] = max(d[pos] + 2 * sqrt(r[i] * r[pos]), d[i - 1] + 2 * sqrt(r[i] * r[i - 1]));\n\t\t\telse\n\t\t\t\td[i] = max(r[i], d[i - 1] + 2 * sqrt(r[i] * r[i - 1]));\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tans = max(ans, r[i] + d[i]);\n\t\tprintf(\"%.8lf\\n\", ans);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010];\n\ndouble x[1010],y[1010];\n\nconst double eps=1e-9;\n\nbool cross(int m,double cx,double cy){\n\tfor(int i=0;i<m;++i){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(y[i]-cy)*(y[i]-cy);\n\t\td=sqrt(d);\n\t\tif(r[i]+r[m]>d+eps) return true;\n\t}\n\t//cerr << cx << \" \" << cy << endl;\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=-1;\n\t\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i],cy=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\td=sqrt(d);\n\t\t\t\tcx=x[j]+d,cy=r[i];\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\t//cerr << cx << \" \" << cy << endl;\n\t\t\tif(cross(i,cx,cy)==true) continue;\n\t\t\tif(x[i]==-1||cx<x[i]) x[i]=cx,y[i]=cy;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << y[i] << endl;\n\t}\n\tdouble ans=0.0;\n\tfor(int i=0;i<n;++i) ans=max(ans,x[i]+r[i]);\n\tcout.precision(10);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i = 0; i < n; i++)\nconst int    INF = 100000000;\nconst double EPS = 1e-10;\nconst int    MOD = 1000000007;\nusing namespace std;\ntypedef pair<int,int> P;\n\nint n;\ndouble r[500];\ndouble dist[500];\n\nint main(){\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n){\n\t\tdist[i] = r[i];\n\t\trep(j,i){\n\t\t\tdist[i] = max(dist[i],dist[j]+sqrt(pow(r[j]+r[i],2)-pow(r[j]-r[i],2)));\n\t\t}\n\t}\n\tdouble ans = 0.0;\n\trep(i,n) ans = max(ans,dist[i]+r[i]);\n\tprintf(\"%.9f\\n\",ans);\n}"
  },
  {
    "language": "C++",
    "code": "//?????????????????????????¢??????????????????????, ??????????????????????????¨???????????§?????????\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint n;\ndouble r[500];\ndouble pos[500];\t//pos[i] = ???i????????????x??§?¨? (???????£???????????????¢)\n\nint main() {\n\tint i, j;\n\t\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> r[i];\n\t\n\tpos[0] = r[0];\n\tfor (i = 1; i < n; i++) {\n\t\tpos[i] = r[i];\n\t\tfor (j = 0; j < i; j++) {\n\t\t\tdouble sub = max(r[i], r[j]) - min(r[i], r[j]);\n\t\t\tdouble plus = r[i] + r[j];\n\t\t\tdouble dist = sqrt(plus * plus - sub * sub);\n\t\t\tpos[i] = max(pos[i], pos[j] + dist);\n\t\t}\n\t}\n\t\n\tdouble ans = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tans = max(r[i] + pos[i], ans);\n\t}\n\t\n\tprintf(\"%.14f\\n\", ans);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<iomanip>\n#include<cmath>\nusing namespace std;\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int N;\n    cin >> N;\n    vector<double> D(N);\n    for (int i = 0; i < N; ++i) cin >> D[i];\n    vector<double> pos(N);\n    for (int i = 0; i < N; ++i) {\n        // i番目の円柱の中心位置を決める\n        double now_pos = D[i];\n        for (int j = 0; j < i; ++j) {\n            double d = 2.0 * sqrt(D[i] * D[j]);\n            now_pos = max(now_pos, pos[j] + d);\n        }\n        pos[i] = now_pos;\n    }\n    double ans = 0.0;\n    for (int i = 0; i < N; ++i) {\n        ans = max(ans, pos[i] + D[i]);\n    }\n    cout << fixed << setprecision(6);\n    cout << ans << endl;\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n\nusing namespace std;\n\n#define REP(i, n) for(int i=0; i<n; i++)\n\nint n;\ndouble r[500];\ndouble dp[500];\n\ndouble dis(double r1, double r2){\n    return sqrt(pow(r1+r2, 2)-pow(r1-r2, 2));\n}\n\nint main(){\n    cin >> n;\n\n    REP(i, n){\n        cin >> r[i];\n    }\n\n    int s = 0;\n    double sd = 0;\n    double tsd = 0;\n    REP(i, n){\n        if(i==0){\n            sd = r[0];\n            tsd = r[0];\n        } else {\n            if(dis(r[i-1], r[i])+tsd < r[i]){\n                s = i;\n                tsd = r[i];\n                sd = r[i];\n            } else {\n                tsd = dis(r[i-1], r[i]) + tsd;\n            }\n        }\n    }\n\n    int g = n-1;\n    double gd = 0;\n    double tgd = 0;\n    for(int i=n-1; i>=0; i--){\n        if(i == n-1){\n            gd = r[n-1];\n            tgd = r[n-1];\n        } else {\n            if(dis(r[i+1], r[i])+tgd < r[i]){\n                g = i;\n                tgd = r[i];\n                gd = r[i];\n            } else {\n                tgd = dis(r[i+1], r[i]) + tgd;\n            }\n        }\n    }\n\n    REP(i, g+1) dp[i] = 0;\n    for(int i = s; i < g; i++){\n        for(int j = s; j<=i; j++){\n            if(dp[i+1] < dp[j] + dis(r[j], r[i+1])){\n                dp[i+1] = dp[j] + dis(r[j], r[i+1]);\n            }\n        }\n    }\n    \n    double output = sd + gd + dp[g];\n    cout << fixed << setprecision(5) << output << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n#include <iomanip>\n#include <fstream>\n#include <bitset>\n\nusing namespace std;\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\ntemplate <typename T> void print_container(ostream& os, const T& c) { const char* _s = \" \"; if (!c.empty()) { __typeof__(c.begin()) last = --c.end(); foreach (it, c) { os << *it; if (it != last) os << _s; } } }\ntemplate <typename T> ostream& operator<<(ostream& os, const vector<T>& c) { print_container(os, c); return os; }\ntemplate <typename T> ostream& operator<<(ostream& os, const set<T>& c) { print_container(os, c); return os; }\ntemplate <typename T> ostream& operator<<(ostream& os, const multiset<T>& c) { print_container(os, c); return os; }\ntemplate <typename T> ostream& operator<<(ostream& os, const deque<T>& c) { print_container(os, c); return os; }\ntemplate <typename T, typename U> ostream& operator<<(ostream& os, const map<T, U>& c) { print_container(os, c); return os; }\ntemplate <typename T, typename U> ostream& operator<<(ostream& os, const pair<T, U>& p) { os << \"(\" << p.first << \", \" << p.second << \")\"; return os; }\n\ntemplate <typename T> void print(T a, int n, const string& split = \" \") { for (int i = 0; i < n; i++) { cout << a[i]; if (i + 1 != n) cout << split; } cout << endl; }\ntemplate <typename T> void print2d(T a, int w, int h, int width = -1, int br = 0) { for (int i = 0; i < h; ++i) { for (int j = 0; j < w; ++j) { if (width != -1) cout.width(width); cout << a[i][j] << ' '; } cout << endl; } while (br--) cout << endl; }\ntemplate <typename T> void input(T& a, int n) { for (int i = 0; i < n; ++i) cin >> a[i]; }\n#define dump(v) (cout << #v << \": \" << v << endl)\n\n#define rep(i, n) for (int i = 0; i < (int)(n); ++i)\n#define erep(i, n) for (int i = 0; i <= (int)(n); ++i)\n#define all(a) (a).begin(), (a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define clr(a, x) memset(a, x, sizeof(a))\n#define sz(a) ((int)(a).size())\n#define mp(a, b) make_pair(a, b)\n#define ten(n) ((long long)(1e##n))\n\ntemplate <typename T, typename U> void upmin(T& a, const U& b) { a = min<T>(a, b); }\ntemplate <typename T, typename U> void upmax(T& a, const U& b) { a = max<T>(a, b); }\ntemplate <typename T> void uniq(T& a) { sort(a.begin(), a.end()); a.erase(unique(a.begin(), a.end()), a.end()); }\ntemplate <class T> string to_s(const T& a) { ostringstream os; os << a; return os.str(); }\ntemplate <class T> T to_T(const string& s) { istringstream is(s); T res; is >> res; return res; }\nvoid fast_io() { cin.tie(0); ios::sync_with_stdio(false); }\nbool in_rect(int x, int y, int w, int h) { return 0 <= x && x < w && 0 <= y && y < h; }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\nint main()\n{\n    int n;\n    cin >> n;\n    vector<int> r(n);\n    input(r, n);\n\n    vector<double> xs(n);\n    for (int i = 1; i < n; ++i)\n    {\n        double x = -1;\n        rep(j, i)\n        {\n            double c = r[i] + r[j];\n            double a = abs(r[i] - r[j]);\n            double b = sqrt(c * c - a * a);\n            upmax(x, xs[j] + b);\n        }\n        xs[i] = x;\n    }\n\n    double low_x = 1e9, high_x = -1e9;\n    rep(i, n)\n    {\n        upmin(low_x, xs[i] - r[i]);\n        upmax(high_x, xs[i] + r[i]);\n    }\n    printf(\"%.9f\\n\", high_x - low_x);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sstream>\n#include <map>\n#include <set>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nstruct vertex{\n    int X;\n    int Y;\n};\n\nint\tgcd(int\ta, int b){\n    while( b ){\n        int\tm = a % b;\n        a = b;\n        b = m;\n    }\n    return a;\n}\n\nint\tlcm(int a, int\tb){\n    return (a*b)/gcd(a,b);\n}\n\nint isPrim(int a){\n    if(a==1){\n        return 0;\n    }\n    for(int i=2;i<=(a+1)/2;i++){\n        if(a%i==0){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nvoid f(int A,int B){\n    \n}\n\nint main(int argc, const char * argv[])\n{\n    //std::ios::sync_with_stdio(false);\n    //scanf(\"%s\",S);\n    //scanf(\"%d\",&N);\n    //getline(cin, target);\n    //cin >> x >> y;\n    //????????????\n\n    int N;\n    cin >> N;\n    double wa=0;\n    \n    int tmpbefore=0;\n    int tmp;\n    int flag=0;\n    for(int i=0;i<N;i++){\n        flag=0;\n        cin >> tmp;\n        \n        double p2=pow(tmpbefore+tmp,2)-pow(tmpbefore-tmp,2);\n        double sq=sqrt(abs(p2));\n\n        if(tmpbefore>tmp){\n            if(sq>tmpbefore){\n                wa=wa+sq;\n            }else{\n                wa=wa+tmpbefore;\n                flag=1;\n            }\n        }else{\n            if(sq>tmp){\n                wa=wa+sq;\n            }else{\n                if(i==1){\n                    wa=wa+tmp-tmpbefore;\n                }else{\n                    wa=wa+tmp;\n                }\n            }\n        }\n        \n        tmpbefore=tmp;\n\n    }\n    if(flag!=1){\n        wa=wa+tmpbefore;\n    }\n\n    printf(\"%.8f\",wa);\n    //cout << wa << endl;\n    \n    //???????????§\n    //cout << \"ans\" << endl;????????????\n    //printf(\"%.0f\\n\",ans);//?°???°?????\\?????¨?????????\n    //printf(\"%.7f\",p);\n    //printf(\"%f\\n\",pow(2,ans.size()));\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n \nint main(){\n    int n;\n    cin>>n;\n    vector<double> R(n),X(n);\n    for(int i=0;i<n;i++){\n        cin>>R[i];\n        X[i]=R[i];\n        for(int j=0;j<i;j++){\n            X[i]=max(X[i],X[j]+2*sqrt(R[i]*R[j]));\n        }\n        // cout<<X[i]<<endl;\n    }\n    double ans = 0;\n    for(int i=0;i<n;i++) ans = max(ans,X[i]+R[i]);\n    cout<<fixed;\n    cout.precision(8);\n    cout<<ans<<endl;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\ndouble distan(double a,double b){\n\treturn sqrt(4*a*b);\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tvector<double> r(n),m(n,0),right(n),left(n);\n\tfor(int i=0;i<n;i++){\n\tcin>>r[i];\n\t}\n\tdouble ans = 0;\n\tleft[0] = 0;\n\tright[0] = 2*r[0];\n\tm[0] = r[0];\n\tfor(int i=1;i<n;i++){\n\t\tbool flag = false;\n\t\tfor(int j = i-1;j>=0;j--){\n\t\t\tdouble d = distan(r[i],r[j]);\n\t\t\tm[i] = max(d+m[j],m[i]);\n\t\t}\t\t\n\t\tm[i] = max(m[i],r[i]);\n\t\tright[i] =  m[i] + r[i];\n\t//ans += max(r[i],max(distan(r[i],r[i+1]),r[i+1]));\n\t}\n\tsort(right.begin(),right.end());\n\tprintf(\"%0.10lf\\n\",right[n-1]);\n\t\n\t\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#include<sstream>\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<climits>\n#include<cmath>\n#include<string>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<numeric>\n#include<functional>\n#include<algorithm>\n#include<bitset>\n#include<tuple>\n#include<unordered_set>\n#include<random>\nusing namespace std;\n#define INF (1<<29)\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(v) v.begin(),v.end()\n#define uniq(v) v.erase(unique(all(v)),v.end())\n#define indexOf(v,x) (find(all(v),x)-v.begin())\n\n\nint n;\ndouble r[500];\ndouble x[500];\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcin >> n;\n\trep(i, n)cin >> r[i];\n\trep(i,n) {\n\t\tdouble mx = r[i];\n\t\trep(j,i) {\n\t\t\tdouble a = x[j] + sqrt((r[j]+r[i])*(r[j]+r[i])-(r[j]-r[i])*(r[j]-r[i]));\n\t\t\tmx = max(mx,a);\n\t\t}\n\t\tx[i] = mx;\n\t}\n\tdouble ans = 0;\n\trep(i,n) {\n\t\tans = max(ans,x[i]+r[i]);\n\t}\n\tprintf(\"%.6f\\n\",ans);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    //freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cin>>n;\n    for(int i=0;i<n;i++)\n    {\n        cin>>r[i];\n    }\n    if(n==1)\n    {\n        cout<<r[0]*2<<endl;\n        return 0;\n    }\n    for(int i=0;i<n-1;i++)\n    {\n        minn=min(r[i],r[i+1]);\n        maxx=max(r[i],r[i+1]);\n        //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n        if((minn+minn+maxx)<=sqrt(maxx*maxx*2))\n        {\n            ans+=maxx;\n            //cout<<maxx<<endl;\n        }\n        else\n        {\n            if(i==0)\n            {\n                ans+=r[i];\n            }\n            if(i==n-2)\n            {\n                ans+=r[i+1];\n            }\n            ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n            haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n        }\n    }\n    //cout<<ans<<endl;\n    printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <memory>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define EPS 1e-10\n#define INF 1000000000\n#define mp make_pair\n#define pb push_back\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\nint main() {\n  int N;\n  scanf(\"%d\", &N);\n  vi R(N);\n  vector<double> O(N, 0);\n  for (int i = 0; i < N; i++) {\n    cin >> R[i];\n  }\n  double width = R[0] * 2;\n  O[0] = R[0];\n  for (int i = 1; i < N; i++) {\n    if (width <= R[i] * 2) {\n      width = R[i] * 2;\n      O[i] = R[i];\n    }\n    for (int j = 0; j < i; j++) {\n      double w = sqrt( 1.0 - pow((double)(R[j] - R[i]) / (R[j] + R[i]), 2.0) ) * (R[j] + R[i]) + O[j] + R[i];\n      width = max(width, w);\n      O[i] = max(O[i], w - R[i]);\n    }\n  }\n  printf(\"%.9f\\n\", width);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <map>\n#include <queue>\n#include <algorithm>\n#include <set>\n#include <math.h>\n#include <utility>\n#include <stack>\n#include <string.h>\n#include <complex>\nusing namespace std;\n\nconst int INF = 1<<29;\nconst double EPS = 1e-8;\ntypedef vector<int> vec;\ntypedef pair<int,int> P;\ntypedef long long ll;\n\nint main() {\n    int N;\n    cin >> N;\n\n    vec r(N);\n    for(int i=0;i<N;i++){\n        scanf(\"%d\", &r[i]);\n    }\n\n    double left = 0, right = 2*r[0];\n    vector<double> x(N, 0);\n    x[0] = r[0];\n    for(int i=1;i<N;i++){\n        for(int j=i-1;j>=0;j--){\n            x[i] = max(x[i], x[j] + sqrt((r[i]+r[j])*(r[i]+r[j]) - (r[i]-r[j])*(r[i]-r[j])));\n        }\n        left = min(left, x[i]-r[i]);\n        right = max(right, x[i]+r[i]);\n    }\n\n    printf(\"%.6f\\n\", right - left);\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<fstream>\n#include<stdio.h>\n#include<string>\n#include<vector>\n#include<map>\n#include<math.h>\n#include<algorithm>\n#include<iomanip>\n#include<set>\n#include<utility>\n\nusing namespace std;\n\ndouble f(double r1, double r2) {\n  if(r2 > r1) swap(r1, r2);\n  return sqrt(pow(r1 + r2, 2) - pow(r2 - r1, 2));\n}\n\nint main() {\n  int n;\n  cin >> n;\n  vector<double> d(n);\n  for(int i = 0; i < n; i++) cin >> d[i];\n  vector<double> e(n);\n  e[0] = d[0];\n  for(int i = 1; i < n; i++) {\n    double m = d[i];\n    for(int j = 0; j < i; j++) {\n      m = max(m, e[j] + f(d[i], d[j]));\n    }\n    e[i] = m;\n  }\n  double ans = 0;\n  for(int i = 0; i < n; i++) ans = max(ans, d[i] + e[i]);\n  printf(\"%.9f\\n\", ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <cmath>\nusing namespace std;\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\n#define sqr(x) (x) * (x)\n\n#include <iomanip>\nint main() {\n    cout << fixed << setprecision(12);\n    int n; cin >> n;\n    vector<int> r(n);\n    for (int &ri: r) cin >> ri;\n    vector<double> x(n);\n    for (int i = 0; i < n; i++) x[i] = r[i];\n    for (int i = 1; i < n; i++) {\n        for (int j = 0; j < i; j++) {\n            double d = x[j] + sqrt(sqr(r[i] + r[j]) - sqr(r[i] - r[j]));\n            chmax(x[i], d);\n        }\n    }\n    double ans = 0;\n    for (int i = 0; i < n; i++) chmax(ans, x[i] + r[i]);\n    cout << ans << endl;\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n,t;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    //freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    ans=0;\n    cin>>n;\n    for(int i=0; i<n; i++)\n    {\n        cin>>r[i];\n    }\n    if(n==1)\n    {\n        ans=r[0]*2;\n        cout << fixed << setprecision(8) << ans << endl;\n        return 0;\n    }\n    for(int i=0; i<n-1; i++)\n    {\n        minn=min(r[i],r[i+1]);\n        maxx=max(r[i],r[i+1]);\n        //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n        if((minn+minn+maxx)<=sqrt(maxx*maxx*2))\n        {\n            ans+=maxx;\n            //cout<<maxx<<endl;\n        }\n        else\n        {\n            if(i==0)\n            {\n                ans+=r[i];\n            }\n            if(i==n-2)\n            {\n                ans+=r[i+1];\n            }\n            ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n            haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n        }\n    }\n    cout << fixed << setprecision(8) << ans << endl;\n    //printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": " #include<iostream>\n#include<string>\n#include<iomanip>\n#include<cmath>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\n#define int long long\n#define double long double\n#define endl \"\\n\"\n\nconst long long INF = (long long)1e18;\nconst long long MOD = 1'000'000'007; \n\nstring yn(bool f){return f?\"Yes\":\"No\";}\nstring YN(bool f){return f?\"YES\":\"NO\";}\n\ndouble distance(double x1, double y1, double x2, double y2){\n\t\n\treturn  sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));\n}\n\nbool check(vector<pair<double, double>> &cylinders, double middle, int x){\n\t\n\t// cout<<middle<<\" \"<<cylinders[x].first<<endl;\n\tif(middle < cylinders[x].first) return false;\n\t\n\tfor(int i = 0; i < x; i++){\n\t\tif(distance(middle, cylinders[x].first,cylinders[i].second,cylinders[i].first)\n\t\t\t< cylinders[x].first + cylinders[i].first){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nsigned main(){\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tcout<<fixed<<setprecision(10);\n\t\n\t\n\tconst int NUM = 100;\n\tint n;\n\tvector<pair<double, double>> cylinders;\n\tdouble p = 0, ans = 0;\n\t\n\tcin>>n;\n\t\n\tcylinders.resize(n);\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tcin>>cylinders[i].first;\n\t}\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tdouble right = p, left = 21000*(i+1), middle;\n\t\t\n\t\tfor(int j = 0; j < NUM; j++){\n\t\t\tmiddle = (right + left)/2;\n\t\t\t// cout<<left<<\" <> \"<<middle<<\" \"<<right<<endl;\n\t\t\tif(check(cylinders, middle, i)){\n\t\t\t\tleft = middle;\n\t\t\t} else {\n\t\t\t\tright = middle;\n\t\t\t}\n\t\t}\n\t\tp = middle;\n\t\tcylinders[i].second = middle;\n\t\t// cout<<middle<<endl;\n\t}\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tans = max(ans, cylinders[i].first + cylinders[i].second);\n\t}\n\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint main(){\n\tint N;\n\tcin>>N;\n\tvector<double> R(N),D(N);\n\tdouble ans=0;\n\tfor(int i=0;i<N;i++){\n\t\tcin>>R[i];\n\t\tD[i]=R[i];\n\t\tfor(int j=0;j<i;j++){\n\t\t\tD[i]=max(D[j]+2*sqrt(R[i]*R[j]),D[i]);\n\t\t}\n\t\tans=max(ans,D[i]+R[i]);\n\t}\n\tcout<<fixed;\n\tcout.precision(8);\n\tcout<<ans<<endl;\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\nusing ld = long double;\nconstexpr ld EPS = 1e-10;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<ld> r(n);\n    vector<ld> x(n, 0);\n    for(int i=0; i<n; ++i) {\n        cin >> r[i];\n    }\n\n    for(int i=0; i<n; ++i) {\n        if(i == 0) {\n            x[i] = r[i];\n        } else {\n            ld min_x = -1;\n            for(int j=0; j<i; ++j) {\n                min_x = max(min_x, x[j] + sqrt((r[i] + r[j])*(r[i]+r[j]) - (r[j]-r[i])*(r[j]-r[i])));\n            }\n            x[i] = min_x;\n        }\n    }\n\n    cout << fixed << setprecision(8);\n    ld left = 0, right = 0;\n    for(int i=0; i<n; ++i) {\n        left = min(x[i]-r[i], left);\n        right = max(x[i]+r[i], right);\n    }\n    cout << right - left << endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>  \n#include<algorithm>  \n#include<string>  \n#include<map>//ll dx[4]={0,0,-1,1};ll dy[4]={-1,1,0,0};  \n#include<set>//  \n#include<vector>  \n#include<cmath>  \n#include<stack>  \n#include<string.h>  \n#include<stdlib.h>  \n#include<cstdio>  \n#define mod 1e9+7  \n#define ll long long\nusing namespace std;  \ndouble y[1010];\ndouble x[1010];\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;++i)\n\t\tcin>>x[i];\n\tdouble s=0;\n\tif(n==1){\n\t\tprintf(\"%.6f\\n\",2*x[0]);\n\t\treturn 0;\n\t}\n\ty[0]=x[0];\n\tfor(int i=1;i<n;++i){\n\t\tdouble g=sqrt((x[i]+x[i-1])*(x[i]+x[i-1])-(x[i]-x[i-1])*(x[i]-x[i-1]));\n\t\tdouble p=y[i-1]+g;\n\t\tfor(int j=i-2;j>=0;--j){\n\t\t\tg=sqrt((p-y[j])*(p-y[j])+(x[i]-x[j])*(x[i]-x[j]));\n\t\t\tif(g<x[i]+x[j]){\n\t\t\t\tdouble h=sqrt((x[i]+x[j])*(x[i]+x[j])-(x[i]-x[j])*(x[i]-x[j]));\n\t\t\t\tp=max(p,y[j]+h);\n\t\t\t}\n\t\t}\n\t\ty[i]=max(p,x[i]);\n\t}\n\tdouble maxx=0;\n\tfor(int i=0;i<n;++i){\n\t\tmaxx=max(maxx,y[i]+x[i]);\n\t}\n\tprintf(\"%.6f\\n\",maxx);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <cstdio>\n#include <utility>\n#define EPS (1e-10)\n#define X real()\n#define Y imag()\nusing namespace std;\ntypedef complex<double> P;\ntypedef pair<P, double> C;\n\n\n\nint main(){\n  int n;\n  cin >> n;\n  double r[n], p[n];\n  for(int i = 0; i < n; ++i){\n    cin >> r[i];\n    p[i] = r[i];\n  }\n\n  for(int i = 0; i < n; ++i){\n    for(int j = 0; j < i; ++j){\n      p[i] = max(p[i],\n\t\t p[j]+sqrt((r[i]+r[j])*(r[i]+r[j])-(r[i]-r[j])*(r[i]-r[j])));\n    }\n  }\n  double ans = 0;\n  for(int i = 0; i < n; ++i)\n    ans = max(ans, p[i]+r[i]);\n  printf(\"%.10lf\\n\", ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010];\n\ndouble x[1010],y[1010];\n\nconst double eps=1e-6;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\tfor(int i=0;i<m;++i){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(y[i]-cy)*(y[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\t//cerr << cx << \" \" << cy << endl;\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i],cy=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\td=sqrt(d);\n\t\t\t\tcx=x[j]+d,cy=r[i];\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\tif(cross(i,cx,cy)==true) continue;\n\t\t\tif(cx<x[i]) x[i]=cx,y[i]=cy;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << y[i] << endl;\n\t}\n\tdouble ans=0.0;\n\tfor(int i=0;i<n;++i) ans=max(ans,x[i]+r[i]);\n\tcout.precision(10);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n// long double dist(long double, long double);\n\n// int main()\n// {\n//     int N;\n//     scanf(\"%d\", &N);\n//     std::vector<long double> r(N);\n//     int max_i{};\n//     for (int i{}; i < N; i++)\n//     {\n//         scanf(\"%Lf\", &r[i]);\n//         if (r[i] > r[max_i])\n//             max_i = i;\n//     }\n//     long double ans{};\n//     if (max_i == N - 1)\n//         ans += r[max_i];\n//     else\n//     {\n//         long double pre[2]{r[max_i], r[max_i + 1]};\n//         for (int i{max_i + 2}; i < N; i++)\n//         {\n//             if (dist(pre[0], r[i]) < dist(pre[0], pre[1]) + dist(pre[1], r[i]))\n//             {\n//                 ans += dist(pre[0], pre[1]);\n//                 pre[0] = pre[1];\n//             }\n//             pre[1] = r[i];\n//         }\n//         ans += std::max(dist(pre[0], pre[1]) + pre[1], pre[0]);\n//     }\n//     if (max_i == 0)\n//         ans += r[max_i];\n//     else\n//     {\n//         long double pre[2]{r[max_i], r[max_i - 1]};\n//         for (int i{max_i - 2}; i >= 0; i--)\n//         {\n//             if (dist(pre[0], r[i]) < dist(pre[0], pre[1]) + dist(pre[1], r[i]))\n//             {\n//                 ans += dist(pre[0], pre[1]);\n//                 pre[0] = pre[1];\n//             }\n//             pre[1] = r[i];\n//         }\n//         ans += std::max(dist(pre[0], pre[1]) + pre[1], pre[0]);\n//     }\n//     printf(\"%.10Lf\\n\", ans);\n//     return 0;\n// }\n\n// long double dist(long double a, long double b)\n// {\n//     return sqrt((a + b) * (a + b) - (a - b) * (a - b));\n// }\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,n)  for(int i = 0; i < (n); i++)\n#define FOR(i,a,b) for(int i = (a); i < (b); i++)\nusing vi = vector<int>;\nusing ll = long long;\n\nconst double EPS = 1e-8;\n\nusing P = complex<double>;\nnamespace std{\n  bool operator <(const P &a, const P &b){\n    return real(a) != real(b) ? real(a) < real(b) : imag(a) < imag(b);\n  }\n}\ndouble cross(const P &a, const P &b){\n  return imag(conj(a)*b);\n}\ndouble dot(const P &a, const P &b){\n  return real(conj(a)*b);\n}\nstruct L : public vector<P>{\n  L(const P &a, const P &b){\n    push_back(a);\n    push_back(b);\n  }\n};\nstruct C{\n  P p; double r;\n  C(const P &p_, double r_) : p(p_), r(r_) {}\n};\n\nP projection(const L &l, const P &p){\n  double t = dot(p-l[0],l[0]-l[1]) / norm(l[0]-l[1]);\n  return l[0] + t*(l[0]-l[1]);\n}\n\nvector<P> crosspointCL(const C &c, const L &l){\n  P h = projection(l, c.p);\n  double d = abs(h - c.p);\n  vector<P> res;\n  if(d < c.r - EPS){\n    P dir = l[1]-l[0];\n    P x = dir / abs(dir) * sqrt(c.r*c.r - d*d);\n    res.push_back(h + x);\n    res.push_back(h - x);\n  }else if(d < c.r + EPS){\n    res.push_back(h);\n  }\n  return res;\n}\n\nint main(){\n  int n; cin >> n;\n  vector<double> rs(n); rep(i,n) cin >> rs[i];\n  vector<C> res;\n  res.push_back(C(P(rs[0],rs[0]),rs[0]));\n  FOR(i,1,n){ // n番目の円の場所を確定させる\n    P tmp(rs[i],rs[i]);\n    rep(j,i){\n      C tmpc(res[j].p,res[j].r+rs[i]);\n      // cerr << tmpc.p.real() << \" \" << tmpc.p.imag() << \" \" << tmpc.r << endl;\n      L tmpl(P(0,rs[i]),P(100,rs[i]));\n      vector<P> cross = crosspointCL(tmpc, tmpl);\n      sort(cross.begin(), cross.end());\n      // cerr << cross.back().real() << \" \" << cross.back().imag() << endl;\n      tmp = max(tmp, cross.back());\n    }\n    res.push_back(C(tmp,rs[i]));\n  }\n  double ans = 0;\n  rep(i,n){\n    ans = max(ans, res[i].p.real()+res[i].r);\n    // cerr << i << \" \" << res[i].p.real() << endl;\n  }\n  //cout << ans << endl;\n  printf(\"%.10lf\\n\",ans);\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\ntypedef vector<int>vint;\ntypedef pair<int,int>pint;\ntypedef vector<pint>vpint;\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define reps(i,f,n) for(int i=(f);i<(n);i++)\n#define all(v) (v).begin(),(v).end()\n#define each(it,v) for(__typeof((v).begin()) it=(v).begin();it!=(v).end();it++)\n#define pb push_back\n#define fi first\n#define se second\ntemplate<typename A,typename B>inline void chmin(A &a,B b){if(a>b)a=b;}\ntemplate<typename A,typename B>inline void chmax(A &a,B b){if(a<b)a=b;}\n\nint N;\ndouble R[500];\ndouble x[500];\nsigned main(){\n    cin>>N;\n    rep(i,N)cin>>R[i];\n    x[0]=R[0];\n    double ans=0;\n    for(int i=1;i<N;i++){\n        x[i]=R[i];\n        for(int j=0;j<i;j++){\n            double a=R[i]+R[j];\n            double b=abs(R[i]-R[j]);\n            double c=sqrt(a*a-b*b);\n            chmax(x[i],x[j]+c);\n        }\n    }\n\n    rep(i,N)chmax(ans,x[i]+R[i]);\n    printf(\"%.20f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint n;\ndouble r[500];\ndouble ans[500];\ndouble ans2=0;\n\nint main(){\n  cin>>n;\n  for(int i=0;i<n;i++){\n    cin>>r[i];\n    double maxm=r[i];\n    for(int j=0;j<i;j++){\n      double A=r[i]+r[j];\n      double B=r[i]-r[j];\n      double C=sqrt(A*A-B*B);\n      maxm=max(maxm,ans[j]+C);\n    }\n    ans[i]=maxm;\n    ans2=max(ans2,ans[i]+r[i]);\n  }\n  printf(\"%.8f\\n\",ans2);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define all(x) (x).begin(),(x).end()\nconst int mod=1000000007,MAX=200005,INF=1<<30;\n\nint main(){\n    \n    std::ifstream in(\"text.txt\");\n    std::cin.rdbuf(in.rdbuf());\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    int N;cin>>N;\n    vector<long double> r(N),p(N);\n    for(int i=0;i<N;i++){\n        cin>>r[i];\n    }\n    \n    p[0]=r[0];\n    \n    for(int i=1;i<N;i++){\n        for(int j=0;j<i;j++){\n            long double a=r[j],b=r[i];\n            p[i]=max(p[i],p[j]+2.0*sqrt(a*b));\n        }\n    }\n    \n    long double left=INF,right=-INF;\n    \n    for(int i=0;i<N;i++){\n        left=min(left,p[i]-r[i]);\n        right=max(right,p[i]+r[i]);\n    }\n    \n    cout<<setprecision(25)<<right-left<<endl;\n}\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"iostream\"\n#include \"climits\"\n#include \"list\"\n#include \"queue\"\n#include \"stack\"\n#include \"set\"\n#include \"functional\"\n#include \"algorithm\"\n#include \"string\"\n#include \"map\"\n#include \"unordered_map\"\n#include \"unordered_set\"\n#include \"iomanip\"\n#include \"cmath\"\n#include \"random\"\n#include \"bitset\"\n#include \"cstdio\"\n#include \"numeric\"\n#include \"cassert\"\n#include \"ctime\"\n\nusing namespace std;\n\nconstexpr long long int MOD = 1000000007;\n//constexpr int MOD = 1000000007;\n//constexpr int MOD = 998244353;\n//constexpr long long int MOD = 998244353;\nconstexpr double EPS = 1e-12;\n\n//int N, M, K, T, H, W, L, R;\nlong long int N, M, K, T, H, W, L, R;\n\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tcin >> N;\n\tvector<long double>v(N);\n\tfor (auto &i : v)cin >> i;\n\tvector<long double>r(N);\n\tr[0] = v[0];\n\tfor (int i = 1; i < N; i++) {\n\t\tr[i] = v[i];\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tr[i] = max(r[i], r[j] + sqrt((v[i] + v[j])*(v[i] + v[j]) - (v[i] - v[j])*(v[i] - v[j])));\n\t\t}\n\t}\n\tlong double ans = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tans = max(ans, r[i] + v[i]);\n\t}\n\tcout <<setprecision(20)<< ans << endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <functional>\nusing namespace std;\n\n#define rep(i,a,n) for(int (i)=(a); (i)<(n); (i)++)\n#define repq(i,a,n) for(int (i)=(a); (i)<=(n); (i)++)\n#define repr(i,a,n) for(int (i)=(a); (i)>=(n); (i)--)\n#define int long long int\n\ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconstexpr ll INF = 1001001001001001LL;\nconstexpr ll MOD = 1000000007LL;\n\nsigned main() {\n    int N; cin >> N;\n    vector<double> a(N);\n    rep(i,0,N) cin >> a[i];\n    double ans = 0.0;\n\n    if(N == 1) {\n        printf(\"%.12f\\n\", a[0] * 2.0);\n        return 0;\n    }\n\n    rep(i,0,N-1) {\n        double d = 2 * sqrt(a[i] * a[i+1]);\n        ans += max(d, max(a[i], a[i+1]));\n        // printf(\"ans = %lf\\n\", ans);\n        if(i == 0) {\n            ans += (d > a[i+1] ? a[i] : 0.0);\n        }\n        if(i == N-2) {\n            ans += (d > a[i] ? a[i+1] : 0.0);\n        }\n    }\n    printf(\"%.12f\\n\", ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <unordered_set>\n#include <unordered_map>\n#include <array>\n#include <cassert>\n#include <bitset>\nusing namespace std;\nusing LL = long long;\n\ndouble cost(double r1, double r2)\n{\n\treturn sqrt((r1 + r2) * (r1 + r2) - (r1 - r2) * (r1 - r2));\n}\n\nint main(void)\n{\n\tint N;\n\tvector<int>r;\n\tcin >> N;\n\tfor (int i = 0; i < N; ++i)\n\t{\n\t\tint rr; cin >> rr; r.push_back(rr);\n\t\tif (r.size() <= 1)continue;\n\t\tint sml = min(r[r.size() - 2], r.back());\n\t\tint big = max(r[r.size() - 2], r.back());\n\t\tif (big * (sqrt(2) - 1) / 2. > sml)\n\t\t{\n\t\t\tif (r[r.size() - 2] < r.back())\n\t\t\t{\n\t\t\t\tr.erase(r.begin() + r.size() - 2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr.pop_back();\n\t\t\t}\n\t\t}\n\t}\n\tdouble ans = r.front() + r.back();\n\tfor (int i = 1; i < r.size(); ++i)\n\t{\n\t\tans += cost(r[i - 1], r[i]);\n\t}\n\tcout.precision(15);\n\tcout << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\nint b[110000];\ndouble c[11000];\nint main(){\n\tint a;scanf(\"%d\",&a);\n\tfor(int i=0;i<a;i++)scanf(\"%d\",b+i);\n\tc[0]=(double)b[0];\n\tfor(int i=1;i<a;i++){\n\t\tc[i]=(double)b[i];\n\t\tfor(int j=0;j<i;j++){\n\t\t\tc[i]=max(c[i],c[j]+2.0*sqrt(b[i]*b[j]));\n\t\t}\n\t}\n\tdouble ret=0;\n\tfor(int i=0;i<a;i++)ret=max(ret,c[i]+(double)b[i]);\n\tprintf(\"%.12f\\n\",ret);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\n#define NUM ((2 - sqrt(2)) / 4) * sqrt(2)\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      if((C[i] * (double)NUM) >= C[i + 1])\n        ans += C[i];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n    }else if(C[i] < C[i + 1]){\n      if(C[i + 1] * (double)NUM >= C[i])\n        ans += C[i + 1];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  double a = C[0];\n  double b = C[n - 1];\n  if(C[1] * (double)NUM >= C[0])\n    a = 0;\n  if(C[n - 2] * (double)NUM >= C[n - 1])\n    b = 0;\n  printf(\"%.8f\\n\", ans + a + b);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<cmath>\n#include<cstdlib>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<map>\n#include<numeric>\n#include<limits>\n#include<bitset>\n#include<unordered_map>\n#include<functional>\nusing namespace std;\n\n#define rep(i,s,n) for(int i=s;i<n;i++)\n#define dow(i,n,s) for(int i=n-1;i>=s;i--)\n#define all(a) a.begin(),a.end()\n#define Sort(a) sort(all(a))\n#define Qsort(a,size) qsort(a,size,sizeof(*a),compare_int)\n#define DEBUG\ntypedef pair<int,int> II;\ntypedef unsigned long ul;\ntypedef long long ll;\ntypedef unsigned long long ull;\nbool compare_int(const void *a,const void *b) { return *(int *)a-*(int *)b; }\nbool compare_by_second(II a,II b) { return a.second!=b.second?a.second<b.second:a.first<b.first; }\n\nconst int INF = 1e+9;\nconst int MAX_N = 5e+2;\n\nint N;\ndouble res = 0;\nvector<double> rad;\nvector<double> cood;\n\nvoid solve();\n\nint main() {\n\n  cin>>N;\n  rad.resize(N);\n  cood.resize(N);\n  rep(i,0,N) cin>>rad[i];\n  solve();\n\n  return 0;\n}\n\nvoid solve() {\n\n  rep(i,0,N) cood[i] = 0.0;\n  cood[0] = rad[0];\n  rep(i,1,N) {\n    rep(j,0,i) {\n      cood[i] = max(cood[i],2*sqrt(rad[i]*rad[j])+cood[j]);\n    }\n    cood[i] = max(cood[i],rad[i]);\n  }\n\n  rep(i,0,N) res = max(res,cood[i]+rad[i]);\n  cout<<fixed<<setprecision(8)<<res<<endl;\n  return ;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n    vector<int> v;\n    for (int i = 0; i < n; ++i) {\n        int x;\n        cin >> x;\n        v.push_back(x);\n    }\n\n    // x coordinates delta between collided cylinder which radius are a and b\n    auto delta = [](double a, double b) {\n        // d^2 + (b  - a)^2 = (b + a)^2\n        // d = sqrt((b + a)^2 - (b - a)^2)\n        // d = sqrt(4 * a * b)\n        return 2 * sqrt(a * b);\n    };\n\n    double sum_ = 0;\n    vector<double> cylinderXCoordinates;\n    for (int i = 0; i < v.size(); ++i) {\n        // first, collided with left wall\n        double max_ = v[i];\n        // find rightmost cylinder x coordinates\n        for (int j = i - 1; j >= 0; --j) {\n            auto d = cylinderXCoordinates[j] + delta(v[j], v[i]);\n            max_ = max(max_, d);\n        }\n        cylinderXCoordinates.push_back(max_);\n        sum_ = max(sum_, max_ + v[i]);\n    }\n    printf(\"%.8f\\n\", sum_);\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n\nusing namespace std;\n\n#define REP(i, n) for(int i=0; i<n; i++)\n\nint n;\ndouble r[500];\ndouble dp[500];\n\ndouble dis(double r1, double r2){\n    return sqrt(pow(r1+r2, 2)-pow(r1-r2, 2));\n}\n\nint main(){\n    cin >> n;\n\n    REP(i, n){\n        cin >> r[i];\n    }\n\n    int s = 0;\n    double sd = 0;\n    REP(i, n){\n        if(i==0){\n            sd += r[0];\n        } else {\n            if(dis(r[i-1], r[i])+sd < r[i]){\n                s = i;\n                sd = r[i];\n            }\n        }\n    }\n\n    int g = n-1;\n    double gd = 0;\n    for(int i=n-1; i>=0; i--){\n        if(i == n-1){\n            gd += r[n-1];\n        } else {\n            if(dis(r[i+1], r[i])+gd < r[i]){\n                g = i;\n                gd = r[i];\n            }\n        }\n    }\n\n    REP(i, g+1) dp[i] = 0;\n    for(int i = s; i < g; i++){\n        for(int j = s; j<=i; j++){\n            if(dp[i+1] < dp[j] + dis(r[j], r[i+1])){\n                dp[i+1] = dp[j] + dis(r[j], r[i+1]);\n            }\n        }\n    }\n    \n    double output = sd + gd + dp[g];\n    cout << fixed << setprecision(5) << output << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double EPS = 1e-6;\n\nint n;\nvector<double> v;\n\ndouble solve(){\n  vector<double> dis;\n  double res = 0;\n  \n  if(n == 1) return v[0] * 2;\n\n  for(int i=0;i<n-1;i++){\n    double sum = v[i] + v[i+1];\n    double dif = v[i+1] - v[i];    \n    dis.push_back(sqrt(sum * sum - dif * dif));\n  }\n\n  int l = 0, r = n-1;\n  double sum = v[0];\n  for(int i=0;i<n-1;i++){\n    if(sum + dis[i] < v[i+1] - EPS){\n      l = i + 1;\n      sum = v[i+1];\n    } else {\n      break;\n    }\n  }\n  sum = v[n-1];\n  for(int i=n-1;i>0;i--){\n    if(sum + dis[i-1] < v[i-1] - EPS){\n      r = i - 1;\n      sum = v[i-1];\n    } else {\n      break;\n    }\n  }\n\n  res = v[l] + v[r];\n  //cout << l << ' ' << r << endl;\n  for(int i=l;i<r;i++){\n    if(i < n - 2){\n      int ii = i;\n      sum = dis[i] + dis[i+1];\n      for(int j=i+2;j<=r&&j<n;j++){\n        if(v[i] + v[j] > sum + EPS) ii = j;\n        else if(j >= r) break;\n        sum += dis[j];\n      }\n      if(ii > i) {\n        res += v[i] + v[ii];\n        i = ii - 1;\n      } else {\n        res += dis[i];\n      }\n    } else {\n      res += dis[i];\n    }\n  }\n\n  return res;\n}\n\nint main(){\n  while(cin >> n){\n    double x;\n    v.clear();\n    for(int i=0;i<n;i++){\n      cin >> x;\n      v.push_back(x);\n    }\n    printf(\"%.7f\\n\", solve());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\n#define NUM ((2 - sqrt(2)) / 4)\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      if((C[i] * (double)NUM) >= C[i + 1])\n        ans += C[i];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n    }else if(C[i] < C[i + 1]){\n      if(C[i + 1] * (double)NUM >= C[i])\n        ans += C[i + 1];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  double a = C[0];\n  double b = C[n - 1];\n  if(C[1] * (double)NUM >= C[0])\n    a = 0;\n  if(C[n - 2] * (double)NUM >= C[n - 1])\n    b = 0;\n  printf(\"%.8f\\n\", ans + a + b);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0; i<(n); i++)\n#define all(x) x.begin(), x.end()\n\nusing namespace std;\ntypedef long long int ll;\n\ndouble dist(double a, double b){\n\tdouble h = abs(a-b);\n\tdouble r = a+b;\n\treturn sqrt( r*r - h*h );\n}\nint main(){\n\tint N;\n\tdouble r[1005], x[1005];\n\tcin >> N;\n\trep(i,N) cin >> r[i];\n\trep(i,N){\n\t\tx[i] = r[i];\n\t\trep(j,i){\n\t\t\tdouble d = dist(r[i], r[j]);\n\t\t\tx[i] = max(x[i], x[j] + d);\n\t\t}\n\t}\n\tdouble ans = 0;\n\trep(i,N) ans = max(ans, x[i] + r[i]);\n\tprintf(\"%.8f\\n\", ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (dist < (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i]; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1000; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tlong double minx = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong double dis = y[i] + x[i];\n\t\tif (dis > minx) { minx = dis; }\n\t}\n\tcout << minx << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define DEBUG(x) cerr << #x << \" = \" << x << endl\n#define int long long\nsigned main() {\n  int N; cin >> N;\n  vector<int> R(N); REP(i,N) cin >> R[i];\n  // double ans = 0.0;\n  // ans += R[0] + R[N - 1];\n  // for(int i = 0; i < N - 1; ++i) {\n  //   int mx = max(R[i], R[i + 1]);\n  //   int mn = min(R[i], R[i + 1]);\n  //   ans += sqrt(max<double>(0.0, (R[i] + R[i + 1]) * (R[i] + R[i + 1]) - (mx - mn) * (mx - mn)));\n  // }\n  // cout << ans << endl;\n  vector<double> pos(N);\n  double ans = R[0] * 2;\n  pos[0] = R[0];\n  for(int i = 1; i < N; ++i) {\n    pos[i] = R[i];\n    REP(j,i) {\n      int mx = max(R[i], R[j]);\n      int mn = min(R[i], R[j]);\n      double update = pos[j] + sqrt(max<double>(0.0, (R[i] + R[j]) * (R[i] + R[j]) - (mx - mn) * (mx - mn)));\n      // DEBUG(update);\n      pos[i] = max(pos[i], update);\n    }\n    ans = max(ans, pos[i] + R[i]);\n    // cerr << \"pos[\" << i << \"] = \" << pos[i] << endl;\n  }\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  cout << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <tuple>\n#include <queue>\n#include <set>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <array>\n#include <functional>\n#include <list>\n#include <iomanip>\n#include <set>\nconst int MOD=1000000007;\nconst int INF=1000000000;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\nconst double eps=1e-9;\nconst int inf=1e9;\ntypedef pair<int,int> P;\nstruct Point\n{\n  double x,y;\n  Point(){x=0;y=0;}\n  Point(double d_x,double d_y){x=d_x,y=d_y;}\n  double operator*(Point obj){return obj.x*x+obj.y*y;}\n  double operator%(Point obj){return obj.y*x-obj.x*y;}\n  Point operator*(double b){Point tmp;tmp.x=x*b;tmp.y=y*b;return tmp;}\n  Point operator/(double b){Point tmp;tmp.x=x/b;tmp.y=y/b;return tmp;}\n  Point operator+(Point obj){Point tmp;tmp.x=x+obj.x;tmp.y=y+obj.y;return tmp;}\n  Point operator-(){Point tmp;tmp.x=-x;tmp.y=-y;return tmp;}\n  Point operator-(Point obj){Point tmp;tmp.x=x-obj.x;tmp.y=y-obj.y;return tmp;}\n  Point operator-=(Point obj){x-=obj.x;y-=obj.y;return *this;}\n  Point operator+=(Point obj){x+=obj.x;y+=obj.y;return *this;}\n  Point operator/=(double b){x=x/b;y=y/b;return *this;}\n  Point operator*=(double b){x=x*b;y=y*b;return *this;}\n  double size(){return hypot(x,y);}\n  Point unit(){return Point(x/size(),y/size());}\n  Point normal(){return Point(y,-x);}\n  double atan(){return atan2(y,x);}\n};\n\nbool operator<(Point a,Point b){return a.x!=b.x?a.x<b.x:a.y<b.y;}\nbool operator>(Point a,Point b){return b<a;}\nbool operator<=(Point a,Point b){return !(b<a);}\nbool operator>=(Point a,Point b){return !(a<b);}\nbool operator==(Point a,Point b){return (a-b).size()<eps;}\nbool operator!=(Point a,Point b){return !(a==b);}\n\nbool equal(double a,double b){return abs(a-b)<eps;}\ndouble cross(Point a,Point b){return a%b;}\ndouble dot(Point a,Point b){return a*b;}\n\nint ccw(Point a,Point b,Point c)\n{\n  b=b-a;\n  c=c-a;\n  if(b%c>0) return +1;\n  else if(b%c<0)return -1;\n  else if(b*c<0) return +2;\n  else if(b.size()<c.size()) return -2;\n  else return 0;\n}\n\nint n;\nint main(int argc,char const* argv[])\n{\n  cin >> n;\n  double r[n];\n  for(int i=0;i<n;i++)\n    {\n      cin >> r[i];\n    }\n  double newr[n];\n  double rmax=0;\n  for(int now=0;now<n;now++)\n    {\n      double nowr=r[now];\n      for(int bef=0;bef<now;bef++)\n\t{\n\t  nowr=max(nowr,r[bef]+sqrt(pow(r[now]+r[bef],2)-pow(r[now]-r[bef],2)));\n\t}\n      newr[now]=nowr;\n      rmax=max(rmax,newr[now]+r[now]);\n    }\n  cout << fixed << setprecision(12) << rmax << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tlong long int N;\n\tcin >> N;\n\tlong double ans = 0;\n\tvector<long double>R( N + 2 ), Len( N + 3 );\n\tfor( size_t i = 1; i <= N; i++ ) {\n\t\tcin >> R[i];\n\t}\n\tfor( size_t i = 1; i < N + 2; i++ ) {\n\t\tlong double L = R[i] + R[i - 1];\n\t\tlong double X = R[i] - R[i - 1];\n\t\tlong double Y = sqrtl( L*L - X*X );\n\t\tLen[i] = max( Y, max( R[i], R[i - 1] ) );\n\t}\n\tint j = 0, k = 0;\n\tfor( size_t i = 0; i < N + 2; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t\tj = i;\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t\t//cout << Len[i] << endl;\n\t}\n\treverse( Len.begin(), Len.end() );\n\treverse( R.begin(), R.end() );\n\tans = 0;\n\tfor( size_t i = 0; i < N + 2 - j + 1; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t}\n\tif( N == 2 ) {\n\t\tans += R[R.size()-2];\n\t}\n\tcout << fixed << setprecision( 20 ) << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <unordered_set>\n#include <unordered_map>\n#include <array>\n#include <cassert>\n#include <bitset>\nusing namespace std;\nusing LL = long long;\n\ndouble cost(double r1, double r2)\n{\n\treturn sqrt((r1 + r2) * (r1 + r2) - (r1 - r2) * (r1 - r2));\n}\n\nint main(void)\n{\n\tint N;\n\tvector<int>r;\n\tcin >> N;\n\tfor (int i = 0; i < N; ++i)\n\t{\n\t\tint rr; cin >> rr; r.push_back(rr);\n\t\twhile (r.size() > 1)\n\t\t{\n\t\t\tint sml = min(r[r.size() - 2], r.back());\n\t\t\tint big = max(r[r.size() - 2], r.back());\n\t\t\tif (big * (sqrt(2) - 1) / 2. > sml)\n\t\t\t{\n\t\t\t\tif (r[r.size() - 2] < r.back())\n\t\t\t\t{\n\t\t\t\t\tr.erase(r.begin() + r.size() - 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tr.pop_back();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tdouble ans = r.front() + r.back();\n\tfor (int i = 1; i < r.size(); ++i)\n\t{\n\t\tans += cost(r[i - 1], r[i]);\n\t}\n\tcout.precision(15);\n\tcout << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define rep1(i,n) for(int i=1;i<=(int)(n);i++)\n#define all(c) c.begin(),c.end()\n#define pb push_back\n#define fs first\n#define sc second\n#define show(x) cout << #x << \" = \" << x << endl\n#define chmin(x,y) x=min(x,y)\n#define chmax(x,y) x=max(x,y)\nusing namespace std;\nint N;\ndouble x[500],r[500];\nint main(){\n\tcin>>N;\n\trep(i,N) cin>>r[i];\n\trep(i,N){\n\t\tx[i]=r[i];\n\t\trep(j,i){\n\t\t\tchmax(x[i],x[j]+sqrt((r[i]+r[j])*(r[i]+r[j]) - (r[i]-r[j])*(r[i]-r[j])));\n\t\t}\n\t}\n\tdouble ans=0;\n\trep(i,N) chmax(ans,x[i]+r[i]);\n\tprintf(\"%.12f\\n\",ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n    }else if(C[i] < C[i + 1]){\n      ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  printf(\"%.8f\\n\", ans + C[0] + C[n - 1]);\n}  "
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tlong long int N;\n\tcin >> N;\n\tlong double ans = 0;\n\tvector<long double>R( N + 2 );\n\tfor( size_t i = 1; i <= N; i++ ) {\n\t\tcin >> R[i];\n\t}\n\tfor( size_t i = 2; i < N + 1; i++ ) {\n\t\tlong double L = R[i] + R[i - 1];\n\t\tlong double X = R[i] - R[i - 1];\n\t\tlong double Y = sqrtl( L*L - X*X );\n\t\tans += max( Y, max( R[i], R[i - 1] ) );\n\t}\n\tans += max( R[0] + sqrtl( (R[1] + R[0])*(R[1] + R[0]) - (R[1] - R[0])*(R[1] - R[0]) ), R[1] );\n\tans += max( R[N + 1] + sqrtl( (R[N] + R[N + 1])*(R[N] + R[N + 1]) - (R[N] - R[N + 1])*(R[N] - R[N + 1]) ), R[N] );\n\tcout << fixed << setprecision( 20 ) << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <iomanip>\n\n#define REP(i, a, b) for (int i = int(a); i < int(b); i++)\n#define dump(val) cerr << __LINE__ << \":\\t\" << #val << \" = \" << (val) << endl\n\nusing namespace std;\n\ntypedef long long int lli;\n\nint main() {\n    int N;\n    cin >> N;\n    vector<int> v(N);\n    REP (i, 0, N) cin >> v[i];\n    vector<double> pos(N, 0.0);\n    REP (i, 1, N) {\n        REP (j, 0, i) {\n            double x = sqrt((v[i] + v[j]) * (v[i] + v[j]) - (v[i] - v[j]) * (v[i] - v[j]));\n            pos[i] = max(pos[i], pos[j] + x);\n        }\n    }\n    const double inf = 1e+15;\n    double m = inf, M = -inf;\n    REP (i, 0, N) {\n        m = min(m, pos[i] - v[i]);\n        M = max(M, pos[i] + v[i]);\n    }\n    cout << fixed << setprecision(10) << M - m << endl;\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define DEBUG(x) cerr << #x << \" = \" << x << endl\n#define int long long\nsigned main() {\n  int N; cin >> N;\n  vector<int> R(N); REP(i,N) cin >> R[i];\n  // double ans = 0.0;\n  // ans += R[0] + R[N - 1];\n  // for(int i = 0; i < N - 1; ++i) {\n  //   int mx = max(R[i], R[i + 1]);\n  //   int mn = min(R[i], R[i + 1]);\n  //   ans += sqrt(max<double>(0.0, (R[i] + R[i + 1]) * (R[i] + R[i + 1]) - (mx - mn) * (mx - mn)));\n  // }\n  // cout << ans << endl;\n  vector<double> pos(N);\n  double ans = R[0] * 2;\n  pos[0] = R[0];\n  for(int i = 1; i < N; ++i) {\n    pos[i] = R[i];\n    REP(j,i) {\n      int mx = max(R[i], R[j]);\n      int mn = min(R[i], R[j]);\n      double update = pos[j] + sqrt(max<double>(0.0, (R[i] + R[j]) * (R[i] + R[j]) - (mx - mn) * (mx - mn)));\n      DEBUG(update);\n      pos[i] = max(pos[i], update);\n    }\n    ans = max(ans, pos[i] + R[i]);\n    cerr << \"pos[\" << i << \"] = \" << pos[i] << endl;\n  }\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  cout << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<iomanip>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    double d[n], r[n];\n    for(int i = 0; i < n; i++)  cin >> r[i];\n    double ans = 0;\n    for(int i = 0; i < n; i++){\n        d[i] = r[i];\n        for(int j = 0; j < i; j++){\n            d[i] = max(d[i], d[j]+2*sqrt(r[i]*r[j]));\n        }\n        ans = max(ans, r[i]+d[i]);\n    }\n    cout << fixed << setprecision(12) << ans << endl;\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint n, a[500]; double x[500];\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n\tfor(int i = 0; i < n; i++) {\n\t\tx[i] = a[i] * 2.0;\n\t\tfor(int j = 0; j < i; j++) x[i] = max(x[i], x[j] - a[j] + a[i] + sqrt(pow(a[i] + a[j], 2) - pow(a[i] - a[j], 2)));\n\t}\n\tprintf(\"%.9f\\n\", *max_element(x, x + n));\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define FORR(i,a,b) for(int i=(int)(b)-1;i>=(int)(a);i--)\n\ntypedef long long ll;\n\nint n;\ndouble rs[525];\ndouble xs[525];\n\ntypedef complex<double> P;\n\nint main(){\n  cin>>n;\n  REP(i,n)cin>>rs[i];\n  xs[0] = rs[0];\n  FOR(i,1,n){\n    double low = max(xs[i-1], rs[i]);\n    double high = 1e9;\n    REP(_,100){\n      double x = (low+high)/2.0;\n      P rc = P(x, rs[i]);\n      bool col = false;\n      FORR(j,0,i){\n        P lc = P(xs[j], rs[j]);\n        if(abs(lc - rc) <= rs[i] + rs[j]){\n          col = true;\n          break;\n        }\n      }\n      if(col){\n        low = x;\n      }else{\n        high = x;\n      }\n    }\n    xs[i] = high;\n  }\n  double ans = 0.0;\n  REP(i,n)ans = max(ans, xs[i]+rs[i]);\n  printf(\"%.9f\\n\",ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n    vector<int> v;\n    for (int i = 0; i < n; ++i) {\n        int x;\n        cin >> x;\n        v.push_back(x);\n    }\n\n    // x coordinates delta between collided cylinder which radius are a and b\n    auto delta = [](double a, double b) {\n        // d^2 + (b  - a)^2 = (b + a)^2\n        // d = sqrt((b + a)^2 - (b - a)^2)\n        // d = sqrt(4 * a * b)\n        return 2 * sqrt(a * b);\n    };\n\n    double sum_ = 0;\n    vector<double> cylinderXCoordinates;\n    for (int i = 0; i < v.size(); ++i) {\n        // first, collided with left wall\n        double max_ = v[i];\n        // find rightmost cylinder x coordinates\n        for (int j = i - 1; j >= 0; --j) {\n            auto d = cylinderXCoordinates[j] + delta(v[j], v[i]);\n            max_ = max(max_, d);\n        }\n        cylinderXCoordinates.push_back(max_);\n        sum_ = max(sum_, max_ + v[i]);\n    }\n    cout << sum_ << endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ndouble ans[4747];\nint main(){\n  int n;\n  cin>>n;\n  double r[n],m;\n  for(int i=0;i<n;i++){\n    cin>>r[i];\n    m=r[i];\n    for(int j=0;j<i;j++){\n      double s=r[i]+r[j],h=r[i]-r[j];\n      m=max(m,ans[j]+sqrt(s*s-h*h));\n    }\n    ans[i]=m;\n    //cout<<ans[i]<<endl;\n  }\n  double a=0;\n  for(int i=0;i<n;i++)\n    a=max(a,ans[i]+r[i]);\n  printf(\"%.10f\\n\",a);\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define N 10005\nusing namespace std;\n\nint main(){\n  int n,r[N];\n  cin>>n;\n  for(int i=0;i<n;i++)\n    cin>>r[i];\n  double x[N],ans=r[0]*2;\n  x[0]=r[0];\n  for(int i=1;i<n;i++){\n    double maxx=0;\n    for(int j=0;j<i;j++){\n      int A=r[i]+r[j];\n      int B=r[i]-r[j];\n      maxx=max(maxx,max(x[j]+sqrt(A*A-B*B),1.0*r[i]));\n    }\n    x[i]=maxx;\n    ans=max(ans,x[i]+r[i]);\n  }\n  printf(\"%.8f\\n\",ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "/*  -*- coding: utf-8 -*-\n *\n * 1357.cc: Squeeze the Cylinders\n */\n\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<stack>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\nconst int MAX_N = 500;\n\n/* typedef */\n\n/* global variables */\n\nint rs[MAX_N];\ndouble xs[MAX_N];\n\n/* subroutines */\n\ninline void setmax(double &a, double b) { if (a < b) a = b; }\n\n/* main */\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n\n  for (int i = 0; i < n; i++) scanf(\"%d\", rs + i);\n\n  double sum = 0.0;\n  for (int i = 0; i < n; i++) {\n    xs[i] = rs[i];\n    for (int j = i - 1; j >= 0; j--) {\n      int p = rs[i] + rs[j], m = rs[i] - rs[j];\n      double x = xs[j] + sqrt((double)(p * p - m * m));\n      setmax(xs[i], x);\n    }\n    setmax(sum, xs[i] + rs[i]);\n  }\n\n  printf(\"%.8lf\\n\", sum);\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double EPS = 1e-4;\n\nint n;\nvector<double> v;\n\ndouble solve(){\n  vector<double> dis;\n  double res = 0;\n  \n  if(n == 1) return v[0] * 2;\n\n  for(int i=0;i<n-1;i++){\n    double sum = v[i] + v[i+1];\n    double dif = v[i+1] - v[i];    \n    dis.push_back(sqrt(sum * sum - dif * dif));\n  }\n\n  int l = 0, r = n-1;\n  double sum = v[0];\n  for(int i=0;i<n-1;i++){\n    if(sum + dis[i] < v[i+1] - EPS){\n      l = i + 1;\n      sum = v[i+1];\n    } else {\n      break;\n    }\n  }\n  sum = v[n-1];\n  for(int i=n-1;i>0;i--){\n    if(sum + dis[i-1] < v[i-1] - EPS){\n      r = i - 1;\n      sum = v[i-1];\n    } else {\n      break;\n    }\n  }\n\n  res = v[l] + v[r];\n  //cout << l << ' ' << r << endl;\n  for(int i=l;i<r;i++){\n    if(i < n - 2){\n      int ii = i;\n      sum = dis[i] + dis[i+1];\n      for(int j=i+2;j<=r&&j<n;j++){\n        if(v[i] + v[j] > sum + EPS) ii = j;\n        else if(j >= r) break;\n        sum += dis[j];\n      }\n      if(ii > i) {\n        res += v[i] + v[ii];\n        i = ii;\n      } else {\n        res += dis[i];\n      }\n    } else {\n      res += dis[i];\n    }\n  }\n\n  return res;\n}\n\nint main(){\n  while(cin >> n){\n    double x;\n    v.clear();\n    for(int i=0;i<n;i++){\n      cin >> x;\n      v.push_back(x);\n    }\n    printf(\"%.7f\\n\", solve());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (dist < (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i]; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1000; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tlong double minx = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong double dis = y[i] + x[i];\n\t\tif (dis > minx) { minx = dis; }\n\t}\n\tcout << fixed << setprecision(5141919) << minx << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    vector<double> r(n+1);\n    for(int i=0;i<n;i++){\n        cin >> r[i+1];\n    }\n    vector<double> l(n+1);\n    l[0]=0;r[0]=0;\n    for(int i=1;i<=n;i++){\n        l[i]=r[i];\n        for(int j=0;j<i;j++){\n            l[i]=max(l[i],l[j]+2*sqrt(r[i]*r[j]));\n        }\n    }\n    double ans=0;\n    for(int i=1;i<=n;i++){\n        ans=max(ans,l[i]+r[i]);\n    }\n    cout <<fixed << setprecision(10) << ans << endl;\n    return 0;\n}\n\n\n    \n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\ntypedef long long LL;\n#define SORT(c) sort((c).begin(),(c).end())\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\nusing namespace std;\nint main(void)\n{\n  int n;\n  cin >> n;\n  vector<pair<double,int> > pos;\n  double answer=0.0;\n  REP(i,n){\n    int r;\n    cin >> r;\n    double tmppos=r;\n    REP(j,pos.size()){\n      double bpos=pos[j].first;\n      int br=pos[j].second;\n      tmppos=max(tmppos,bpos+sqrt(1.0*(r+br)*(r+br)-(r-br)*(r-br)));\n    }\n    pos.push_back(make_pair(tmppos,r));\n    answer=max(answer,tmppos+r);\n  }\n  cout << fixed << setprecision(10) << answer << endl;\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < (int)(n); i++)\n#define all(n) begin(n), end(n)\n#define dump(x) cerr << #x << \" = \" << x << endl\n#define pb push_back\n\ndouble a[510];\nint n;\n\ndouble solve(){\n    vector<double> x;\n    x.pb(a[0]);\n    for(int i = 1; i < n; i++){\n        double leftmost = a[i];\n        rep(j,i){\n            double p = a[i]+a[j];\n            double q = a[i]-a[j];\n            double dx = sqrt(p*p - q*q);\n            // dump(dx);\n            leftmost = max(leftmost, dx + x[j]);\n        }\n        x.push_back(leftmost);\n    }\n    double res = 0;\n    rep(i,n){\n        res = max(res, x[i]+a[i]);\n    }\n    return res;\n}\n\nint main(){\n    while(cin >> n){\n        rep(i,n) cin >> a[i];\n        printf(\"%.10lf\\n\", solve());\n    }\n}"
  },
  {
    "language": "C++",
    "code": "//#define _GLIBCXX_DEBUG\n#include <iostream>\n#include <vector>\n#include <stdio.h>\n#include <bits/stdc++.h>\n\n\nusing namespace std;\n#define ll long long\n#define ld long double\n#define  P pair<ld,ld>\n#define FOR(i,n,m) for(ll i=n; i<(ll)m;i++)\n#define FORa(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define FORr(i,m,n) for(ll i=n; i>=(ll)m; i--)\n#define FORm(i,m) for(auto i=m.begin();i!=m.end();i++)\n#define FORs(i,st) for(auto i : st)\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define ALL(c) (c).begin(), (c).end()\n#define VEC2(x,a,b) vector<vector<ll>> x = vector<vector<ll>>(a,vector<ll>(b,0))\n#define sortAl(v) sort(v.begin(),v.end())\n#define sortAlr(v) sort(v.begin(),v.end()); reverse(v.begin(),v.end())\n#define cinv(v,n,m) FOR(i,n,m) cin>>v.at(i)\n#define coutv(v,n,m) FOR(i,n,m) cout<<v.at(i) <<\" \"; cout<<endl\n#define cout(n) cout<<fixed<<setprecision(n)\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n\n    ll n;\n    cin>>n;\n    vector<P> cylinders;\n    FOR(i,0,n){\n      ld r;\n      cin>>r;\n      ld distance = r;\n      FOR(j,0,cylinders.size()){\n        ld x = 2*sqrt(cylinders[j].second * r) + cylinders[j].first;\n        distance = max(distance, x);\n      }\n      cylinders.push_back(P(distance,r));\n    }\n    ld ans=0;\n    FOR(i,0,n){\n      ans = max(ans,cylinders[i].first + cylinders[i].second);\n    }\n    cout(10)<<ans<<endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n\nusing namespace std;\n\n#define REP(i, n) for(int i=0; i<n; i++)\n\nint n;\ndouble r[500];\ndouble dp[500];\n\ndouble dis(double r1, double r2){\n    return sqrt(pow(r1+r2, 2)-pow(r1-r2, 2));\n}\n\nint main(){\n    cin >> n;\n\n    REP(i, n){\n        cin >> r[i];\n    }\n\n    int s = 0;\n    double sd = 0;\n    REP(i, n){\n        if(i==0){\n            sd += r[0];\n        } else {\n            if(dis(r[i-1], r[i])+sd < r[i]){\n                s = i;\n                sd = r[i];\n            }\n        }\n    }\n\n    int g = n-1;\n    double gd = 0;\n    for(int i=n-1; i>=0; i--){\n        if(i == n-1){\n            gd += r[n-1];\n        } else {\n            if(dis(r[i+1], r[i])+gd < r[i]){\n                g = i;\n                gd = r[i];\n            }\n        }\n    }\n\n    REP(i, g+1) dp[i] = 0;\n    for(int i = s; i < g; i++){\n        for(int j = s; j<=i; j++){\n            if(dp[i+1] < dp[j] + dis(r[j], r[i+1])){\n                dp[i+1] = dp[j] + dis(r[j], r[i+1]);\n            }\n        }\n    }\n    \n    double output = sd + gd + dp[g];\n    cout << fixed << setprecision(5) << output << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,k,n) for(int i = (int)(k); i < (int)(n); i++)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(a) a.begin(), a.end()\n#define MS(m,v) memset(m,v,sizeof(m))\n#define D10 fixed<<setprecision(10)\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\nconst int MOD = 1000000007;\nconst int INF = MOD + 1;\nconst ld EPS = 1e-12;\ntemplate<class T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate<class T> T &chmax(T &a, const T &b) { return a = max(a, b); }\n\n/*--------------------template--------------------*/\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tvector<ld> v(n), pos(n);\n\tREP(i, n) cin >> v[i];\n\tif (n == 1)\n\t{\n\t\tcout << v[0] * 2 << endl;\n\t\treturn 0;\n\t}\n\tpos[0] = v[0];\n\tint t;\n\tld ans = 0;\n\tFOR(i, 1, n)\n\t{\n\t\tld npos = v[i];\n\t\tREP(j, i)\n\t\t{\n\t\t\tld l = v[i], r = v[j];\n\t\t\tld h = abs(l - r), d = l + r;\n\t\t\tld tmp = pos[j] + sqrt(d*d - h*h);\n\t\t\tchmax(npos, tmp);\n\t\t}\n\t\tpos[i] = npos;\n\t\tchmax(ans, pos[i] + v[i]);\n\t}\n\tcout << D10 << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long double ld;\nint main() {\n\tcin.tie(0); ios::sync_with_stdio(false);\n\tint N; cin >> N;\n\tvector<ld> r(N), x(N, 0);\n\tfor (int i = 0; i < N;i++) cin >> r[i];\n\tfor (int i = 0;i < N;i++) {\n\t\tif (i == 0) { x[i] = r[i]; }\n\t\telse {\n\t\t\tld l = -1;\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tl = max(l, x[j] + sqrt((r[i] + r[j])*(r[i] + r[j]) - (r[i] - r[j])*(r[i] - r[j])));\n\t\t\t}\n\t\t\tx[i] = l;\n\t\t}\n\t}\n\tld left = 0, right = 0;\n\tfor (int i = 0; i < N;i++) {\n\t\tleft = min(x[i] - r[i], left);\n\t\tright = max(x[i] + r[i], right);\n\t}\n\tcout << fixed << setprecision(10) << right - left << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <cstdio>\n\nusing namespace std;\n\nconst float sqrt2 = sqrt(2);\n\nfloat get_x2(float x, int r, int r2) {\n\t/*\n\tfloat temp = r + (r2 * 2);\n\tif (temp < sqrt2 * r) {\n\t\treturn x;\n\t} else {\n\t*/\n\t\treturn x + sqrt(pow(r2 + r, 2) - pow(r - r2, 2));\n\t//}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\n\tvector<int> r(n);\n\tvector<float> pos(n);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> r[i];\n\t}\n\n\tpos[0] = 0;\n\tfor (int i = 1; i < n; i++) {\n\t\tfloat temp = 0;\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\ttemp = max(temp, get_x2(pos[j], r[j], r[i]));\n\t\t}\n\t\tpos[i] = temp;\n\t}\n\n\tfloat max_r1 = pos[n - 1] + r[n -1];\n\tfloat min_r1 = pos[0] - r[0];\n\n\tfor (int i = 0; i < n; i++) {\n\t\tmax_r1 = max(max_r1, pos[i] + r[i]);\n\t\tmin_r1 = min(min_r1, pos[i] - r[i]);\n\t}\n\n\t// cout << pos[n - 1] - pos[0] + (r[0] + r[n - 1]) << endl;\n\t// cout << max_r1 - min_r1 << endl;\n\tprintf(\"%.8lf\\n\", max_r1 - min_r1);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ndouble getDis(double R,double r){return sqrt((R+r)*(R+r) - (R-r)*(R-r));}\n\nint main(){\n  int n;\n  cin>>n;\n  double A[501],x[501];\n  for(int i=0;i<n;i++)cin>>A[i],x[i] = A[i];\n\n  for(int i=1;i<n;i++)\n    for(int j=0;j<i;j++){\n      double R = A[i];\n      double r = A[j];\n      double d = getDis(R,r);\n      x[i] = max(x[i],x[j]+d);\n    }\n  \n  double ans = 0;\n  for(int i=0;i<n;i++) ans=max(ans,x[i]+A[i]);\n  printf(\"%.10f\\n\",ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n;\ndouble ta;\nlong double r[505], x[505], ans;\n\nlong double sq(long double a) {\n\treturn a * a;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lf\", &ta);\n\t\tx[i] = r[i] = ta;\n\t\tfor (int j = 0; j < i; j++)\n\t\t\tx[i] = max(x[i], x[j] + sqrt(sq(r[i] + r[j]) - sq(r[i] - r[j])));\n\t\tans = max(ans, x[i] + r[i]);\n\t}\n\tprintf(\"%.10lf\\n\", (double)ans);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<list>\n#include<string>\n#include<cstring>\n#include<sstream>\n#include<cctype>\n#include<string.h>\n#include<algorithm>\n#include<cmath>\n#include<stack>\n#include<fstream>\n#include<cstdlib>\n#include<vector>\n#include<map>\n#include<set>\n#include<utility>\n#include<iomanip>\n#include<queue>\nusing namespace std;\n\n#define LL long long int\n#define uLL unsigned long long int\n\n#define S(a) scanf(\"%d\",&a)\n#define S2(a,b) scanf(\"%d%d\",&a,&b)\n#define S3(a,b,c) scanf(\"%d%d%d\",&a,&b,&c)\n#define SLL(a) scanf(\"%lld\",&a)\n#define SLL2(a,b) scanf(\"%lld%lld\",&a,&b)\n#define SLL3(a,b,c) scanf(\"%lld%lld%lld\",&a,&b,&c)\n#define SC(a) scanf(\"%c\",&a)\n#define P(a) printf(\"%d\",a)\n#define PS(a) printf(\"%s\",a)\n#define PLL(a) printf(\"%lld\",a)\n#define PCASE(kk) printf(\"Case %d: \",kk++)\n#define PCASENL(kk) printf(\"Case %d:\\n\",kk++)\n#define NL puts(\"\")\n\n#define pb(a) push_back(a)\n#define mp(a,b) make_pair(a,b)\n#define pi (2.0*acos(0.0))\n#define pii pair<int,int>\n\ntemplate<typename T>inline T POW(T B,T P)\n{\n    if(P==0) return 1;\n    if(P&1) return B*POW(B,P-1);\n    else return SQR(POW(B,P/2));\n}\ntemplate <class T> inline T BMOD(T p,T e,T m)\n{\n    T ret=1;\n    while(e)\n    {\n        if(e&1) ret=(ret*p)%m;\n        p=(p*p)%m;\n        e>>=1;\n    }\n    return (T)ret;\n}\ntemplate <typename T>inline T ModInv (T b,T m)\n{\n    return BMOD(b,m-2,m);\n}\ntemplate<typename T>inline T ABS(T a)\n{\n    if(a<0)return -a;\n    else return a;\n}\ntemplate<typename T>inline T gcd(T a,T b)\n{\n    if(a<0)return gcd(-a,b);\n    if(b<0)return gcd(a,-b);\n    return (b==0)?a:gcd(b,a%b);\n}\ntemplate<typename T>inline T lcm(T a,T b)\n{\n    if(a<0)return lcm(-a,b);\n    if(b<0)return lcm(a,-b);\n    return a*(b/gcd(a,b));\n}\n\n/////////////////////////////////////////////////\n\nint n,arr[503];\ndouble x[503],y[503];\ndouble calc(int a,int b)\n{\n    if(a==0)return y[b];\n    double oti = y[a]+y[b];\n    double lomb = fabs(y[b]-y[a]);\n\n    double ret=sqrt(oti*oti - lomb*lomb);\n    return x[a]+ret;\n}\n\nint main()\n{\n    while(S(n)!=EOF)\n    {\n        for(int i=1;i<=n;i++)\n        {\n            S(arr[i]);\n        }\n        double nw=0.0;\n        x[0]=y[0]=0;\n        for(int i=1;i<=n;i++)\n        {\n            double r=arr[i]*1.0;\n            x[i]=0.0;\n            y[i]=r;\n            for(int j=0;j<i;j++)\n            {\n                x[i]=max(calc(j,i),x[i]);\n            }\n\n            nw=max(nw,y[i]+x[i]);\n        }\n        cout<<setprecision(8)<<fixed<<nw<<endl;\n//        printf(\"%0.8lf\\n\",nw);\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<algorithm>\n#include<climits>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<ctime>\n#include<cfloat>\n#include<functional>\n#include<map>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<deque>\n#include<set>\n#include<bitset>\n#include<list>\n#include<numeric>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\ntypedef pair<long long, int> ll_i;\ntypedef pair<double, int> d_i;\ntypedef pair<long long, long long> ll_ll;\ntypedef pair<double, double> d_d;\n\n#define PI 3.141592653589793238462643383279\n#define mod 1000000007LL\n#define rep(i, n) for(i = 0;i < n;++i)\n#define rep1(i, n) for(i = 1;i < n;++i)\n#define rep2d(i, j, n) for(i = 0;i < n;++i)for(j = i + 1;j < n;++j)\n#define per(i, n) for(i = n - 1;i > -1;--i)\n#define int(x) int x; scanf(\"%d\",&x)\n#define int2(x, y) int x, y; scanf(\"%d%d\",&x, &y)\n#define int3(x, y, z) int x, y, z; scanf(\"%d%d%d\",&x, &y, &z)\n#define sc(x) cin >> x\n#define sc2(x, y) cin >> x >> y\n#define sc3(x, y, z) cin >> x >> y >> z\n#define scn(n, a) rep(i, n)cin >> a[i]\n#define sc2n(n, a, b) rep(i, n)cin >> a[i] >> b[i]\n#define pri(x) cout << x << \"\\n\"\n#define pri2(x, y) cout << x << \" \" << y << \"\\n\"\n#define pri3(x, y, z) cout << x << \" \" << y << \" \" << z << \"\\n\"\n#define pb push_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define kabe puts(\"---------------------------\")\n#define kara puts(\"\")\n#define debug(x) cout << \" --- \" << x << \"\\n\"\n#define debug2(x, y) cout << \" --- \" << x << \" \" << y << \"\\n\"\n#define debug3(x, y, z) cout << \" --- \" << x << \" \" << y << \" \" << z << \"\\n\"\n#define debugn(i, n, a) rep(i, n)cout << \" --- \" << a[i] << \"\\n\";\n#define debugin(i, n, a) rep(i, n)printf(\" --- %10d\\n\", a[i])\n#define debugi2n(i, n, a, b) rep(i, n)printf(\" --- %10d %10d\\n\", a[i], b[i])\n#define debugiin(i, n, a) rep(i, n)printf(\" --- %10d %10d\\n\", a[i].first, a[i].second)\n#define X first\n#define Y second\n#define eps 0.0001\n#define prid(x) printf(\"%.15lf\\n\", x)\n\n\nsigned main(void){\n  int i, j;\n  for(int testcase = 0;;testcase++){\n    int(n);\n    double r[n], o[n];\n    scn(n, r);\n\n    o[0] = r[0];\n    rep1(i, n){\n      o[i] = r[i];\n      rep(j, i)o[i] = max(o[i], o[j] + 2.0 * sqrt(r[i] * r[j]));\n    }\n\n    double res = 0;\n    rep(i, n)res = max(res, o[i] + r[i]);\n    prid(res);\n\n/*/\n\n//*/ break;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\n\nstruct UnionFind {\n\tvector<int> v;\n\tUnionFind(int n) : v(n)  { for (int i = 0; i < n; i++) v[i] = i; }\n\tint  find(int x)         { return v[x] == x ? x : v[x] = find(v[x]); }\n\tvoid unite(int x, int y) { v[find(x)] = find(y); }\n};\n\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<double> vd(n);\n\tvector<double> vx(n);\n\tREP(i, n)\n\t\tcin >> vd[i];\n\tvx = vd;\n\t\n\tREP(i,n) {\n\t\tfor (int j = i-1;j >= 0;j--) {\n\t\t\tvx[i] = max(vx[i], vx[j]+sqrt((vd[i]+vd[j])*(vd[i] + vd[j])- (vd[i] - vd[j])*(vd[i] - vd[j])));\n\t\t}\n\t}\n\tdouble ans = 0.0;\n\tREP(i, n)\n\t\tans = max(ans, vx[i] + vd[i]);\n\tprintf(\"%.8lf\\n\", ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <iomanip>\n#include <random>\n\nusing namespace std;\nrandom_device rd;\n\ndouble pita(double x, double y)\n{\n\treturn sqrt((x + y) * (x + y) - (x - y) * (x - y));\n}\n\nint skip(double x, double y, double z)\n{\n\t//y = middle\n\tif (pita(x,y) + pita(y,z) < pita(x, z)) return 1;\n\telse return 0;\n}\n\nint skip(double x, double y)\n{\n\t//x = edge\n\tif (pita(x, y) + x < y) return 1;\n\telse return 0;\n}\n\nint main(void)\n{\n\tint n;\n\tdouble d[500];\n\t// n = 500;\n\t// for (int i = 0; i < n; i++) {\n\t// \td[i] = rd() % 10000;\n\t// }\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> d[i];\n\t}\n\tint sk;\n\tint l = n;\n\tfor (int i = 0; i < l; i++) {\n\t\tif (i == 0) {\n\t\t\tsk = skip(d[0], d[1]);\n\t\t} else if (i == l - 1) {\n\t\t\tsk = skip(d[l - 1], d[l - 2]);\n\t\t} else {\n\t\t\tsk = skip(d[i - 1], d[i], d[i + 1]);\n\t\t}\n\t\tif (sk) {\n\t\t\tfor (int j = i + 1; i < l; i++) {\n\t\t\t\td[j] = d[j - 1];\n\t\t\t\tl--;\n\t\t\t}\n\t\t}\n\t}\n\tdouble ans = d[0] + d[l - 1];\n\tfor (int i = 0; i < l - 1; i++) {\n\t\tans += pita(d[i], d[i + 1]);\n\t}\n\tcout << fixed << setprecision(6) << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <queue>\n#include <cstdio>\n#include <ctime>\n#include <assert.h>\n#include <chrono>\n#include <random>\n#include <numeric>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\nusing namespace std;\ntypedef long long int ll;\ntypedef unsigned long long ull;\n\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n    return (ull)rng() % B;\n}\n\nint main(){\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\tint n; cin >> n;\n\tvector<int> b(n);\n\tfor(int i=0;i<n;i++){\n\t\tcin >> b[i];\n\t}\n\tvector<double> x(n);\n\tx[0]=b[0];\n\tfor(int i=1;i<n;i++){\n\t\tx[i]=b[i];\n\t\tfor(int j=0;j<i;j++){\n\t\t\tx[i]=max(x[i],x[j]+2.0*sqrt(b[i]*b[j]));\n\t\t}\n\t}\n\tdouble res=0;\n\tfor(int i=0;i<n;i++){\n\t\tres=max(res,x[i]+b[i]);\n\t}\n\tprintf(\"%.9f\\n\",res);\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n,t;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    //freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    ans=0;\n    cin>>n;\n    for(int i=0; i<n; i++)\n    {\n        cin>>r[i];\n    }\n    if(n==1)\n    {\n        ans=r[0]*2;\n        printf(\"%.8f\\n\",ans);\n        return 0;\n    }\n    for(int i=0; i<n-1; i++)\n    {\n        minn=min(r[i],r[i+1]);\n        maxx=max(r[i],r[i+1]);\n        //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n        if((minn+minn+maxx)<=sqrt(maxx*maxx*2))\n        {\n            ans+=maxx;\n            //cout<<maxx<<endl;\n        }\n        else\n        {\n            if(i==0)\n            {\n                ans+=r[i];\n            }\n            if(i==n-2)\n            {\n                ans+=r[i+1];\n            }\n            ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n            haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n        }\n    }\n    printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<functional>\n#include<iomanip>\n#include<queue>\n#include<ciso646>\n#include<random>\n#include<map>\n#include<set>\nusing namespace std;\ntypedef long long ll;\nconst ll MOD = 1000000007;\nconst ll INF = (ll)1000000007 * 1000000007;\nconst double EPS = 1e-9;\ntypedef pair<int, int> P;\ntypedef unsigned int ui;\n#define stop char nyaa;cin>>nyaa;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define per(i,n) for(int i=n-1;i>=0;i--)\n#define Rep(i,sta,n) for(int i=sta;i<n;i++)\n#define rep1(i,n) for(int i=1;i<=n;i++)\n#define per1(i,n) for(int i=n;i>=1;i--)\n#define Rep1(i,sta,n) for(int i=sta;i<=n;i++)\nint main() {\n\tint n; cin >> n;\n\tdouble out = 0;\n\tdouble x[502];\n\tdouble dis[502][502];\n\trep(i, n) {\n\t\tcin >> x[i];\n\t}\n\trep(i, n) {\n\t\tdis[0][i+1] = dis[i+1][n + 1] = x[i];\n\t}\n\trep(i, n) {\n\t\tRep(j, i + 1, n) {\n\t\t\tdouble h = max(x[j] - x[i], x[i] - x[j]);\n\t\t\tdouble w = x[j]+x[i];\n\t\t\tdis[i + 1][j + 1] = sqrt(w*w - h * h);\n\t\t}\n\t}\n\tdouble dp[502] = {}; dp[0] = 0;\n\trep1(i, n + 1) {\n\t\tper(j, i) {\n\t\t\tdp[i] = max(dp[i], dp[j] + dis[j][i]);\n\t\t}\n\t}\n\tcout << fixed << setprecision(5) << dp[n + 1] << endl;\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <cstdio>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main(){\n  int N;\n  cin >> N;\n  vector<double> R(N);\n  for(int i = 0; i < N; ++i) cin >> R[i];\n  vector<double> X(N);\n  double ans = 0;\n  for(int i = 0; i < N; ++i){\n    double x = R[i];\n    for(int j = 0; j < i; ++j)\n      x = max(x, X[j]+sqrt((R[i]+R[j])*(R[i]+R[j])-abs(R[i]-R[j])*abs(R[i]-R[j])));\n    X[i] = x;\n    ans = max(ans, x+R[i]);\n  }\n  printf(\"%.12f\\n\",ans);\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int N, X[500];\n  cin >> N;\n  for(int i = 0; i < N; i++) {\n    cin >> X[i];\n  }\n  double pos[500] = {}, ret = 0;\n  for(int i = 0; i < N; i++) {\n    pos[i] = X[i];\n    for(int j = 0; j < i; j++) {\n      double A = X[j] + X[i], B = X[j] - X[i];\n      pos[i] = max(pos[i], pos[j] + sqrt(A * A - B * B));\n    }\n    ret = max(ret, pos[i] + X[i]);\n  }\n  cout << fixed << setprecision(10) << ret << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint n;\ndouble t[567];\ndouble x[567];\n\nint main()\n{\n    cin >> n;\n    for(int i = 0; i < n; i++)\n    {\n        cin >> t[i];\n    }\n    if(n == 1)\n    {\n        printf(\"%.6f\\n\", 2 * t[0]);\n    }\n    else\n    {\n        x[0] = t[0];\n        for(int i = 1; i < n; i++)\n        {\n            int id = -1;\n            double rightm = -1.0;\n            for(int j = 0; j < i; j++)\n            {\n                double nu = x[j] + sqrt(fabs(t[i] + t[j]) * fabs(t[i] + t[j]) - fabs(t[i] - t[j]) * fabs(t[i] - t[j]));\n                if(nu > rightm)\n                {\n                    rightm = nu;\n                    id = i;\n                }\n            }\n            x[i] = rightm;\n        }\n        double lm = 999999999.0, rm = -999999999.0;\n        for(int i=0;i<n;i++) lm = min(lm, x[i] - t[i]);\n        for(int i=0;i<n;i++) rm = max(rm, x[i] + t[i]);\n        printf(\"%.6f\\n\", rm - lm);\n    }\n\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define each(i, c) for (auto& i : c)\n#define unless(cond) if (!(cond))\n\nusing namespace std;\n\ntypedef long long int lli;\ntypedef unsigned long long ull;\ntypedef complex<double> point;\n\ntemplate<typename P, typename Q>\nostream& operator << (ostream& os, pair<P, Q> p)\n{\n  os << \"(\" << p.first << \",\" << p.second << \")\";\n  return os;\n}\n\ntypedef complex<double> P;\n\nstruct C {\n  P o;\n  double r;\n  C() {}\n  C(P o, double r) : o(o), r(r) {}\n};\n\nconst double eps = 1e-8;\nconst double pi = acos(-1);\n\nbool equals(double a, double b) { return abs(a - b) < eps; }\n\nint isIntersect(C a, C b) {\n  double x = a.o.real() - b.o.real();\n  double y = a.o.imag() - b.o.imag();\n  double s = a.r + b.r;\n  double d = x*x + y*y;\n  s *= s;\n  if(equals(d, s)) return 1;\n  if(d > s) return 0;\n  double r = abs(a.r - b.r);\n  r *= r;\n  if(equals(d, r)) return -1;\n  if(d > r) return 2;\n  return -2;\n}\n\nint main(int argc, char *argv[])\n{\n  int n;\n  while (cin >> n) {\n    int r[n];\n    for (int i = 0; i < n; ++i) {\n      cin >> r[i];\n    }\n    double x[n];\n    x[0] = r[0];\n    for (int i = 1; i < n; ++i) {\n      x[i] = -1e128;\n      for (int j = 0; j < i; ++j) {\n        double small = max<double>(x[j], r[i]);\n        double large = 1e128;\n        for (int loop = 1000; loop--; ) {\n          double mid = (small + large) / 2.0;\n          C a(P(x[j], r[j]), r[j]);\n          C b(P(mid,  r[i]), r[i]);\n          if (isIntersect(a, b)) small = mid;\n          else large = mid;\n        }\n        x[i] = max(x[i], large);\n      }\n    }\n    double mx = 0;\n    for (int i = 0; i < n; ++i) {\n      mx = max(mx, x[i - 1] + r[i - 1]);\n    }\n    printf(\"%.10lf\\n\", mx);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#define _USE_MATH_DEFINES\n#include <cmath>\n#include <climits>\n#include <cstdlib>\n#include <cstring>\n#include <cfloat>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <cctype>\n#include <cstdio>\n#include <cassert>\nusing namespace std;\n\n#define EPS 1e-12\n#define ull unsigned long long\n#define ll long long\n#define VI vector<ll>\n#define PII pair<ll, ll> \n#define VVI vector<vector<ll> >\n#define REP(i,n) for(int i=0,_n=(n);(i)<(int)_n;++i)\n#define RANGE(i,a,b) for(int i=(int)a,_b=(int)(b);(i)<_b;++i)\n#define RANGE_R(i,a,b) for(int i=(int)b-1,_a=(int)(a);(i)>=_a;--i)\n#define MIN_UPDATE(target, value) target = min(target, value)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define ALLR(c) (c).rbegin(), (c).rend()\n#define PB push_back\n#define MP(a, b) make_pair(a, b)\n#define POPCOUNT(v) __builtin_popcountll((ll)(v))\n#define IN_RANGE(v, a, b) ((a)<=(v) && (v)<(b))\n#define CLEAR(table, v) memset(table, v, sizeof(table));\n#define PRINT1(table, D0) REP(d0, D0) cout<<table[d0]<<\" \"; cout<<\"\\n\";\n#define PRINT2(table, D0, D1) REP(d0, D0) { REP(d1, D1) cout<<table[d0][d1]<<\" \"; cout<<\"\\n\"; }\n#define PRINT3(table, D0, D1, D2) REP(d0, D0) { REP(d1, D1) { REP(d2, D2) cout<<table[d0][d1][d2]<<\" \"; cout<<\"\\n\"; } cout<<\"\\n\"; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const map<T0, T1>& v) { for( typename map<T0, T1>::const_iterator p = v.begin(); p!=v.end(); p++ ){os << p->first << \": \" << p->second << \" \";} return os; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const pair<T0, T1>& v) { os << v.first << \": \" << v.second << \" \"; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<T>& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << \" \"; } return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const set<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const deque<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<vector<T> >& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << endl; } return os; }\n\n\n/*\n\n*/\nint main() {\n\tll N;\n\twhile(1) {\n\t\tcin>>N;\n\t\tif(!N)break;\n\t\tVI w(N);\n\t\tREP(i, N) cin>>w[i];\n\t\tdouble minX=0, maxX=0;\n\t\tvector<double> x(N+1);\n\t\tREP(i, N) {\n\t\t\tREP(j, i) {\n\t\t\t\tdouble X=x[j] + sqrt(pow(w[j]+w[i], 2) - pow(fabs(w[j]-w[i]), 2));\n\t\t\t\tx[i]=max(x[i], X);\n\t\t\t}\n\t\t\tminX=min(minX, x[i]-w[i]);\n\t\t\tmaxX=max(maxX, x[i]+w[i]);\n\t\t}\n\t\tprintf(\"%.10f\\n\", maxX-minX);\n\t\tbreak;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <iomanip>\n\nusing namespace std;\n\ndouble pita(double x, double y)\n{\n\treturn sqrt((x + y) * (x + y) - (x - y) * (x - y));\n}\n\nint skip(double x, double y, double z)\n{\n\t//y = middle\n\tif (pita(x,y) + pita(y,z) < pita(x, z)) return 1;\n\telse return 0;\n}\n\nint skip(double x, double y)\n{\n\t//x = edge\n\tif (pita(x, y) + x < y) return 1;\n\telse return 0;\n}\n\nint main(void)\n{\n\tint sk[500];\n\tint n;\n\tdouble d[500];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> d[i];\n\t}\n\tsk[0] = skip(d[0], d[1]);\n\tsk[n - 1] = skip(d[n - 1], d[n - 2]);\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tsk[i] = skip(d[i - 1], d[i], d[i + 1]);\n\t}\n\tint j = 0;\n\tdouble count[500];\n\tfor (int i = 0; i < n; i++) {\n\t\tif (sk[i]) continue;\n\t\tcount[j] = d[i];\n\t\tj++;\n\t}\n\tdouble ans = count[0] + count[j - 1];\n\tfor (int i = 0; i < j - 1; i++) {\n\t\tans += pita(count[i], count[i + 1]);\n\t}\n\tcout << fixed << setprecision(6) << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <unordered_set>\n#include <unordered_map>\n#include <array>\n#include <cassert>\n#include <bitset>\nusing namespace std;\nusing LL = long long;\n\ndouble cost(double r1, double r2)\n{\n\treturn sqrt((r1 + r2) * (r1 + r2) - (r1 - r2) * (r1 - r2));\n}\n\nint main(void)\n{\n\tint N;\n\tvector<int>r;\n\tcin >> N;\n\tfor (int i = 0; i < N; ++i)\n\t{\n\t\tint rr; cin >> rr; r.push_back(rr);\n\t}\n\n\tvector<double>place(1, 0.);\n\tfor (int i = 1; i < N; ++i)\n\t{\n\t\tdouble big = 0;\n\t\tfor (int j = 0; j < i; ++j)\n\t\t{\n\t\t\tbig = max(big, place[j] + cost(r[j], r[i]));\n\t\t}\n\t\tplace.push_back(big);\n\t}\n\tcout.precision(15);\n\tcout << place.back() + r.front() + r.back();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include<bits/stdc++.h>\nusing namespace std;\n#define inf INT_MAX\n#define INF LLONG_MAX\n#define ll long long\n#define ull unsigned long long\n#define M (int)(1e9+7)\n#define P pair<int,int>\n#define PLL pair<ll,ll>\n#define FOR(i,m,n) for(int i=(int)m;i<(int)n;i++)\n#define RFOR(i,m,n) for(int i=(int)m;i>=(int)n;i--)\n#define rep(i,n) FOR(i,0,n)\n#define rrep(i,n) RFOR(i,n,0)\n#define all(a) a.begin(),a.end()\n#define IN(a,n) rep(i,n){ cin>>a[i]; }\nconst int vx[4] = {0,1,0,-1};\nconst int vy[4] = {1,0,-1,0};\n#define F first\n#define S second\n#define PB push_back\n#define EB emplace_back\n#define int ll\n#define vi vector<int>\n#define IP pair<int,P>\n#define PI pair<P,int>\n#define PP pair<P,P>\n#define Yes(f){cout<<(f?\"Yes\":\"No\")<<endl;}\n#define YES(f){cout<<(f?\"YES\":\"NO\")<<endl;}\n\n\nsigned main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  cout<<fixed<<setprecision(20);\n\n  int n;\n  cin>>n;\n  vector<double> v(n);\n  rep(i,n){\n    cin>>v[i];\n  }\n\n  double dp[n]={};\n  rep(i,n){\n    double length=v[i];\n    rep(j,i){\n      length=max(length,dp[j]+sqrt(4*v[i]*v[j]));\n    }\n    dp[i]=length;\n  }\n\n  double ans=0;\n  rep(i,n){\n    ans=max(ans,dp[i]+v[i]);\n  }\n\n  cout<<ans<<endl;\n\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n//typedef\n//-------------------------#include <bits/stdc++.h>\n\nconst double pi = 3.141592653589793238462643383279;\n\nusing namespace std;\n\n//conversion\n//------------------------------------------\ninline int toInt(string s)\n{\n  int v;\n  istringstream sin(s);\n  sin >> v;\n  return v;\n}\ntemplate <class T>\ninline string toString(T x)\n{\n  ostringstream sout;\n  sout << x;\n  return sout.str();\n}\ninline int readInt()\n{\n  int x;\n  scanf(\"%d\", &x);\n  return x;\n}\n\n//typedef\n//------------------------------------------\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef pair<long long, long long> PLL;\ntypedef pair<int, PII> TIII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\n\n//container util\n\n//------------------------------------------\n#define ALL(a) (a).begin(), (a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define SQ(a) ((a) * (a))\n#define EACH(i, c) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)\n#define EXIST(s, e) ((s).find(e) != (s).end())\n#define SORT(c) sort((c).begin(), (c).end())\n\n//repetition\n//------------------------------------------\n#define FOR(i, s, n) for (int i = s; i < (int)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define MOD 1000000007\n\n#define rep(i, a, b) for (int i = a; i < (b); ++i)\n#define trav(a, x) for (auto &a : x)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\nconst double EPS = 1E-8;\n\n#define chmin(x, y) x = min(x, y)\n#define chmax(x, y) x = max(x, y)\n\nclass UnionFind\n{\npublic:\n  vector<int> par;\n  vector<int> siz;\n\n  UnionFind(int sz_) : par(sz_), siz(sz_, 1)\n  {\n    for (ll i = 0; i < sz_; ++i)\n      par[i] = i;\n  }\n  void init(int sz_)\n  {\n    par.resize(sz_);\n    siz.assign(sz_, 1LL);\n    for (ll i = 0; i < sz_; ++i)\n      par[i] = i;\n  }\n\n  int root(int x)\n  {\n    while (par[x] != x)\n    {\n      x = par[x] = par[par[x]];\n    }\n    return x;\n  }\n\n  bool merge(int x, int y)\n  {\n    x = root(x);\n    y = root(y);\n    if (x == y)\n      return false;\n    if (siz[x] < siz[y])\n      swap(x, y);\n    siz[x] += siz[y];\n    par[y] = x;\n    return true;\n  }\n\n  bool issame(int x, int y)\n  {\n    return root(x) == root(y);\n  }\n\n  int size(int x)\n  {\n    return siz[root(x)];\n  }\n};\n\nll modPow(ll x, ll n, ll mod = MOD)\n{\n  ll res = 1;\n  while (n)\n  {\n    if (n & 1)\n      res = (res * x) % mod;\n\n    res %= mod;\n    x = x * x % mod;\n    n >>= 1;\n  }\n  return res;\n}\n\n#define SIEVE_SIZE 5000000 + 10\nbool sieve[SIEVE_SIZE];\nvoid makeSieve()\n{\n  for (int i = 0; i < SIEVE_SIZE; ++i)\n    sieve[i] = true;\n  sieve[0] = sieve[1] = false;\n  for (int i = 2; i * i < SIEVE_SIZE; ++i)\n    if (sieve[i])\n      for (int j = 2; i * j < SIEVE_SIZE; ++j)\n        sieve[i * j] = false;\n}\n\nbool isprime(ll n)\n{\n  if (n == 0 || n == 1)\n    return false;\n  for (ll i = 2; i * i <= n; ++i)\n    if (n % i == 0)\n      return false;\n  return true;\n}\n\nconst int MAX = 2000010;\nlong long fac[MAX], finv[MAX], inv[MAX];\n\n// テーブルを作る前処理\nvoid COMinit()\n{\n  fac[0] = fac[1] = 1;\n  finv[0] = finv[1] = 1;\n  inv[1] = 1;\n  for (int i = 2; i < MAX; i++)\n  {\n    fac[i] = fac[i - 1] * i % MOD;\n    inv[i] = MOD - inv[MOD % i] * (MOD / i) % MOD;\n    finv[i] = finv[i - 1] * inv[i] % MOD;\n  }\n}\n\n// 二項係数計算\nlong long COM(int n, int k)\n{\n  if (n < k)\n    return 0;\n  if (n < 0 || k < 0)\n    return 0;\n  return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n}\n\nlong long extGCD(long long a, long long b, long long &x, long long &y)\n{\n  if (b == 0)\n  {\n    x = 1;\n    y = 0;\n    return a;\n  }\n  long long d = extGCD(b, a % b, y, x);\n  y -= a / b * x;\n  return d;\n}\n// 負の数にも対応した mod (a = -11 とかでも OK)\ninline long long mod(long long a, long long m)\n{\n  return (a % m + m) % m;\n}\n\n// 逆元計算 (ここでは a と m が互いに素であることが必要)\nlong long modinv(long long a, long long m)\n{\n  long long x, y;\n  extGCD(a, m, x, y);\n  return mod(x, m); // 気持ち的には x % m だが、x が負かもしれないので\n}\nll GCD(ll a, ll b)\n{\n\n  if (b == 0)\n    return a;\n  return GCD(b, a % b);\n}\n\ntypedef vector<ll> vec;\ntypedef vector<vec> mat;\n\nmat mul(mat &A, mat &B)\n{\n  mat C(A.size(), vec((int)B[0].size()));\n  for (int i = 0; i < A.size(); ++i)\n  {\n    for (int k = 0; k < B.size(); ++k)\n    {\n      for (int j = 0; j < B[0].size(); ++j)\n      {\n        C[i][j] = (C[i][j] + A[i][k] % MOD * B[k][j] % MOD) % MOD;\n      }\n    }\n  }\n  return C;\n}\nmat matPow(mat A, ll n)\n{\n  mat B(A.size(), vec((int)A.size()));\n\n  for (int i = 0; i < A.size(); ++i)\n  {\n    B[i][i] = 1;\n  }\n\n  while (n > 0)\n  {\n    if (n & 1)\n      B = mul(B, A);\n    A = mul(A, A);\n    n >>= 1;\n  }\n  return B;\n}\n\nstruct Circle\n{\n  long double x, y, r;\n  Circle(long double x, long double y, long double r) : x(x), y(y), r(r) {}\n};\nint main()\n{\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  cout << fixed << setprecision(10);\n\n  ll N;\n  cin >> N;\n  vector<long double> r(N);\n  REP(i, N)\n  {\n    cin >> r[i];\n  }\n  vector<Circle> p;\n\n  for (int i = 0; i < N; i++)\n  {\n    if (i == 0)\n    {\n      p.push_back(Circle(r[i], r[i], r[i]));\n      //cout << p[0].x << \" \" << p[0].y << \" \" << p[0].r << endl;\n    }\n    else\n    {\n      double maxx = r[i];\n      for (int j = 0; j < i; j++)\n      {\n        double lb = p[j].x, ub = 1000000000.00000000;\n\n        for (int t = 0; t < 200; t++)\n        {\n          double mid = (lb + ub) / 2;\n\n          if (mid * mid - 2 * mid * p[j].x + p[j].x * p[j].x - 4 * r[i] * r[j] >= (long double)0.00000000000)\n          {\n            ub = mid;\n          }\n          else\n          {\n            lb = mid;\n          }\n        }\n        maxx = max(maxx, ub);\n      }\n      //cout << maxx << endl;\n      p.push_back(Circle(maxx, r[i], r[i]));\n    }\n      \n   \n  }\n\n  long double maxx = 0.0;\n  for (int i = 0; i < N; i++)\n  {\n    maxx = max(maxx, p[i].x + p[i].r);\n  }\n  cout << maxx << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio> //{{{\n#include <iostream>\n#include <vector>\n#include <string>\n#include <set>\n#include <map>\n#include <algorithm>\n\n#define ALL(c) (c).begin(), (c).end()\n#define DUMP(x) std::cerr << #x << ':' << (x) << '\\n';\n\ntypedef long long ll;\n\ninline int in(){int x;scanf(\"%d\",&x);return x;}\ntemplate<typename T, typename U>inline bool chmax(T&x,U a){if(x>=a)return 0;x=a;return 1;}\ntemplate<typename T, typename U>inline bool chmin(T&x,U a){if(x<=a)return 0;x=a;return 1;}\n//}}}\n\nusing namespace std;\n\n#include <cmath>\n\ndouble X[550];\nint R[550];\n\ninline double sq(double x){ return x * x; }\n\nint main()\n{\n  int N = in();\n  for (int i = 0; i < N; i++) R[i] = in();\n  for (int i = 0; i < N; i++) {\n    X[i] = R[i];\n    for (int j = 0; j < i; j++){\n      if (R[i] == R[j]) {\n        chmax(X[i], X[j] + R[i] + R[j]);\n      }\n      else {\n        chmax(X[i], X[j] + sqrt(sq(R[i] + R[j]) - sq(R[i] - R[j])));\n      }\n    }\n  }\n  double maxi = 0;\n  for (int i = 0; i < N; i++) chmax(maxi, X[i] + R[i]);\n  printf(\"%.10lf\\n\", maxi);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n\n#include<cmath>\n\nusing namespace std;\n\nint main(){\n  int n;\n  cin >> n;\n  int inp[n];\n  double pos[n];\n  double ans=0,temp=0;\n  for(int i=0;i<n;i++){\n    cin >> inp[i];\n  }\n\n  for(int i=0;i<n;i++){\n    pos[i]=0;\n    for(int j=i-1;j>=-1;j--){\n      if(j>=0){\n\ttemp=pos[j]+sqrt(pow(inp[j]+inp[i],2)-pow(inp[j]-inp[i],2));\n\tif(temp>pos[i]) pos[i]=temp;\n\tif(inp[j]>inp[i])break;\n      }else{\n\tif(inp[i]>pos[i]) pos[i]=inp[i];\n      }\n      if(ans<pos[i]+inp[i])ans=pos[i]+inp[i];\n    }\n    \n    \n  }\n  cout << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n\ntypedef long long ll;\nll const Inf = 1LL<<60;\n\nint N;\n\nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n\n  long double startx = radius[0];\n  while(radius.size() > 1) {\n    bool ok = 0;\n    rep(i, radius.size()) {\n      long double len = (radius[0] + radius[i]); len *= len;\n      len -= abs(radius[0] - radius[i]) * abs(radius[0] - radius[i]);\n      len = sqrt(len);\n\n      if(len < radius[i]) {\n        startx = radius[i];\n        radius.pop_front(); N = radius.size();\n        ok = 1;\n      }\n    }\n    if(!ok) { break; }\n  }\n\n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n\n//  printf(\": %.10Lf\\n\", startx);\n\n  vector<long double> positions;\n  vector<int> lasts;\n//  int lastI = -1;\n  rep(i, N) {\n    long double x = 0.0;\n    rep(j, i) {\n      long double px = positions[j];\n      long double s = radius[i] + radius[j]; s *= s;\n      long double h = abs(radius[i] - radius[j]); h *= h;\n      long double w = sqrt(s - h);\n      if(x < px + w) {\n        x = px + w;\n      }\n    }\n    if(positions.empty() || positions.back() + radius[i-1] < x) {\n      positions.push_back(x);\n      lasts.push_back(i);\n    }\n  }\n\n  /*\n  cout << \"-----------------\\n\";\n  rep(i, positions.size()) {\n    printf(\"%.10Lf\\n\", positions[i]);\n  }\n  cout << \"-----------------\\n\";\n  */\n//  assert(lastI >= 0);\n  printf(\"%.10Lf\\n\", positions.back() + startx + radius[lasts.back()]);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <iomanip>\n\nusing namespace std;\n\ndouble pita(double x, double y)\n{\n\treturn sqrt((x + y) * (x + y) - (x - y) * (x - y));\n}\n\nint skip(double x, double y, double z)\n{\n\t//y = middle\n\tif (pita(x,y) + pita(y,z) < pita(x, z)) return 1;\n\telse return 0;\n}\n\nint skip(double x, double y)\n{\n\t//x = edge\n\tif (pita(x, y) + x < y) return 1;\n\telse return 0;\n}\n\nint main(void)\n{\n\tint sk[500];\n\tint n;\n\tdouble d[500];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> d[i];\n\t}\n\tsk[0] = skip(d[0], d[1]);\n\tsk[n - 1] = skip(d[n - 1], d[n - 2]);\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tsk[i] = skip(d[i - 1], d[i], d[i + 1]);\n\t}\n\tint j = 0;\n\tdouble count[500];\n\tfor (int i = 0; i < n; i++) {\n\t\tif (sk[i]) continue;\n\t\tcount[j] = d[i];\n\t\tj++;\n\t}\n\tdouble ans = count[0] + count[j - 1];\n\tfor (int i = 0; i < j - 1; i++) {\n\t\tans += pita(count[i], count[i + 1]);\n\t}\n\tcout << fixed << setprecision(5) << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint n, r[500]; long double x[501];\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) scanf(\"%d\", &r[i]);\n    for(int i = 0; i < n; i++) {\n        x[i] = r[i];\n        for(int j = 0; j < i; j++) {\n            long double dist = sqrtl((r[j] + r[i]) * (r[j] + r[i]) - (r[j] - r[i]) * (r[j] - r[i]));\n            x[i] = max(x[i], x[j] + dist);\n        }\n    }\n    long double ret = 0.0;\n    for(int i = 0; i < n; i++) {\n        ret = max(ret, x[i] + r[i]);\n    }\n    printf(\"%.9Lf\\n\", ret);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <cstring>\n#include <string>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n \n#define REP(i,n) for(int i=0; i<n; ++i)\n#define FOR(i,a,b) for(int i=a; i<=b; ++i)\n#define FORR(i,a,b) for (int i=a; i>=b; --i)\n#define pi acos(-1.0)\n \ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef vector<ll> VL;\ntypedef vector<VI> VVI;\ntypedef pair<int,int> P;\ntypedef pair<ll,ll> PL;\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tvector<double> r(n), x(n);\n\tREP(i,n){\n\t\tcin >> r[i];\n\t\tx[i] = r[i];\n\t}\n\tREP(i,n){\n\t\tREP(j,i){\n\t\t\tx[i] = fmax(x[i], x[j] + sqrt(pow(r[i]+r[j],2)-pow(r[i]-r[j],2)));\n\t\t}\n\t}\n\tdouble ans = 0.0;\n\tREP(i,n){\n\t\tans = fmax(ans, x[i]+r[i]);\n\t}\n\tprintf(\"%.10f\\n\", ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (dist < (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i]; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1000; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tlong double minx = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong double dis = y[i] + x[i];\n\t\tif (dis > minx) { minx = dis; }\n\t}\n\tcout << fixed << setprecision(5141919) << minx << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double EPS = 1e-6;\n\nint n;\nvector<double> v;\n\ndouble solve(){\n  vector<double> dis;\n  double res = 0;\n  \n  if(n == 1) return v[0] * 2;\n\n  for(int i=0;i<n-1;i++){\n    double sum = v[i] + v[i+1];\n    double dif = v[i+1] - v[i];    \n    dis.push_back(sqrt(sum * sum - dif * dif));\n  }\n\n  int l = 0, r = n-1;\n  double sum = v[0];\n  for(int i=0;i<n-1;i++){\n    if(sum + dis[i] < v[i+1] - EPS){\n      l = i + 1;\n      sum = v[i+1];\n    } else {\n      break;\n    }\n  }\n  sum = v[n-1];\n  for(int i=n-1;i>0;i--){\n    if(sum + dis[i-1] < v[i-1] - EPS){\n      r = i - 1;\n      sum = v[i-1];\n    } else {\n      break;\n    }\n  }\n\n  res = v[l] + v[r];\n  //cout << l << ' ' << r << endl;\n  for(int i=l;i<r;i++){\n    if(i < n - 2){\n      int ii = i;\n      sum = dis[i] + dis[i+1];\n      for(int j=i+2;j<=r;j++){\n        if(v[i] + v[j] > sum + EPS) ii = j;\n        else if(j >= r) break;\n        sum += dis[j];\n      }\n      if(ii > i) {\n        res += v[i] + v[ii];\n        i = ii - 1;\n      } else {\n        res += dis[i];\n      }\n    } else {\n      res += dis[i];\n    }\n  }\n\n  return res;\n}\n\nint main(){\n  while(cin >> n){\n    double x;\n    v.clear();\n    for(int i=0;i<n;i++){\n      cin >> x;\n      v.push_back(x);\n    }\n    printf(\"%.7f\\n\", solve());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\ntypedef long long LL;\n#define SORT(c) sort((c).begin(),(c).end())\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\nusing namespace std;\ndouble solve(double r1,double r2){\n  return sqrt((r2+r1)*(r2+r1)-(r2-r1)*(r2-r1));\n}\nint main(void)\n{\n  int n;\n  cin >> n;\n  vector<double> r(n);\n  REP(i,n) cin >> r[i];\n  vector<double> o(n,0.0);\n  double answer=0.0;\n  REP(i,n){\n    o[i]=max(o[i],r[i]);\n    REP(j,i){\n      o[i]=max(o[i],o[j]+solve(r[j],r[i]));\n    }\n    answer=max(answer,o[i]+r[i]);\n  }\n  cout << fixed << setprecision(10) << answer << endl;\n}"
  },
  {
    "language": "C++",
    "code": "//  aoj-VolumeICPCOOC2015-B  / 2015-11-30\n#include<iostream>\n#include<vector>\n#include<cassert>\n#include<string>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\n#include<tuple>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n\ntemplate<typename T>ostream& operator << (ostream &os , const vector<T> &v){\n    rep(i,v.size()) os << v[i] << (i!=v.size()-1 ? \" \" : \"\"); return os;\n}\ntemplate<typename T>istream& operator >> (istream &is , vector<T> &v){\n    rep(i,v.size()) is >> v[i]; return is;\n}\n\n#ifdef DEBUG\nvoid debug(){ cerr << \" : Debug\" << endl; }\n#endif\ntemplate<class F,class...R> void debug(const F &car,const R&... cdr){\n#ifdef DEBUG\n    cerr << car << \" \"; debug(cdr...);\n#endif\n}\n\nconst double EPS=1e-8;\n\nstruct Point{\n    double x,y;\n    Point():x(0),y(0){}\n    Point(double x,double y):x(x),y(y){};\n    bool operator == (const Point &a) const { return x == a.x && y == a.y; }\n    Point operator-(const Point& p) const { return Point(x - p.x, y - p.y); }\n};\nistream &operator >> (istream& is, Point& p){ return is >> p.x >> p.y;}\nostream &operator << (ostream& os, const Point& p){ return os << \"(\" << p.x << \",\" << p.y << \")\";}\n\ndouble dot(const Point &a, const Point &b) { return a.x * b.x + a.y * b.y; }\ndouble cross(const Point &a, const Point &b) { return a.x * b.y - a.y * b.x; }\ndouble norm(const Point& a) { return sqrt(dot(a, a)); }\ndouble distance(const Point& a, const Point& b) { return norm(a - b); }\n\nbool check(vector<Point> &P, vector<int> &R,Point &np,int nr){\n    rep(i,P.size()){\n        if(distance(P[i],np) - (R[i] + nr) < 0.0) return false;\n    }\n    return true;\n}\n\nbool solve(){\n    int n; cin >> n;\n    vector<int> R(n); cin >> R;\n    vector<Point> P;\n    for(int r : R){\n        double l= P.size() > 0 ? max(P.back().x,(double)r) : r;\n        double h=1e10;\n        while(h-l>1e-8){\n            double m = (l+h)/2;\n            Point p = Point(m,r);\n            if(check(P, R, p, r)) h = m;\n            else l = m;\n        }\n        P.push_back(Point(h,r));\n    }\n    debug(P);\n    double ans = 0;\n    rep(i,P.size()) ans = max(ans,P[i].x+R[i]);\n    printf(\"%.10f\\n\",ans);\n    return false;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define REP(x,y,z) for(int x=y;x<=z;x++)\n#define FORD(x,y,z) for(int x=y;x>=z;x--)\n#define MSET(x,y) memset(x,y,sizeof(x))\n#define FOR(x,y) for(__typeof(y.begin()) x=y.begin();x!=y.end();x++)\n#define F first\n#define S second\n#define MP make_pair\n#define PB push_back\n#define SZ size()\n#define M 505\nvoid RI(){}\ntemplate<typename... T>\nvoid RI( int& head, T&... tail ) {\n    scanf(\"%d\",&head);\n    RI(tail...);\n}\nusing namespace std;\ntypedef long long LL;\nint n,r[M];\ndouble X[M],ans;\nint main()\n{\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\tREP(i,1,n) RI(r[i]);\n\t\tX[1] = r[1];\n\t\t\n\t\tREP(i,2,n)\n\t\t{\n\t\t\tX[i] = r[i];\n\t\t\t\n\t\t\tREP(j,1,i-1)\n\t\t\t{\n\t\t\t\tdouble lim = r[j] + r[i];\n\t\t\t\tlim *= lim;\n\t\t\t\tlim -= pow(abs(r[j]-r[i]), 2);\n\t\t\t\tlim = sqrt(lim);\n\n\t\t\t\tX[i] = max(X[i], X[j]+lim);\n\t\t\t}\n\t\t}\n\n\t\tans=0.0;\n\t\tREP(i,1,n)\n\t\t{\n\t\t\tans = max(ans, X[i]+r[i]);\n\t\t}\n\t\tprintf(\"%.10f\\n\",ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cassert>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010],x[1010];\n\nconst double eps=1e-11;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\trep(i,m){\n\t\tdouble dd=0.0;\n\t\tdd+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\tdd+=1.0*(r[i]-cy)*(r[i]-cy);\n\t\tdouble rr=1.0*(r[i]+r[m])*(r[i]+r[m]);\n\t\t// cerr << rr << \" \" << dd << endl;\n\t\tif(rr>dd+eps) return true;\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\trep(i,n){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\tcx=x[j]+sqrt(d);\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n            if(i>0&&x[i-1]>=cx) continue;\n            if(cross(i,cx,r[i])) continue;\n            x[i]=min(x[i],cx);\n\t\t}\n\t\t// cerr << i << \" \" << x[i] << \" \" << r[i] << endl;\n\t}\n\n\tdouble ans=0.0;\n\trep(i,n) ans=max(ans,x[i]+r[i]);\n\tcout.precision(20);\n\tassert(ans<inf);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\ndouble r[1024];\ndouble d[1024];\nint n;\n\nint main() {\n  scanf(\"%d\", &n);\n  for(int i = 0; i < n; ++i) {\n    scanf(\"%lf\", &r[i]);\n    d[i] = r[i];\n    for(int j = 0; j < i; ++j) {\n      double dz = (r[i] + r[j]);\n      double dy = std::abs(r[i] - r[j]);\n      double dx = sqrt(dz * dz - dy * dy);\n      d[i] = std::max(d[i], d[j] + dx);\n    }\n  }\n\n  double res = 0.0;\n  for(int i = 0; i < n; ++i) {\n    res = std::max(res, d[i] + r[i]);\n  }\n  printf(\"%.20lf\\n\", res);\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n\nusing namespace std;\n\nint main(){\n  int n;\n  cin >> n;\n  int inp[n];\n  double pos[n];\n  double ans=0,temp=0;\n  for(int i=0;i<n;i++){\n    cin >> inp[i];\n  }\n\n  for(int i=0;i<n;i++){\n    pos[i]=0;\n    for(int j=i-1;j>=-1;j--){\n      if(j>=0){\n\ttemp=pos[j]+sqrt(pow(inp[j]+inp[i],2)-pow(inp[j]-inp[i],2));\n\tif(temp>pos[i]) pos[i]=temp;\n\tif(inp[j]>inp[i])break;\n      }else{\n\tif(inp[i]>pos[i]) pos[i]=inp[i];\n      }\n      if(ans<pos[i]+inp[i])ans=pos[i]+inp[i];\n    }\n    \n    \n  }\n  printf(\"%12f\\n\",ans);\n}"
  },
  {
    "language": "C++",
    "code": "/*\n * 5:51:00\n */\n\n#include<bits/stdc++.h>\n\n#define REP(i,s,n) for(int i=s;i<n;++i)\n#define rep(i,n) REP(i,0,n)\n#define EPS (1e-8)\n#define equals(a,b) (fabs((a)-(b))<EPS)\n\nusing namespace std;\n\n#define MAX_N 500\n\nint n;\ndouble radii[MAX_N],xs[MAX_N];\n\nvoid compute() {\n  xs[0] = radii[0];\n  REP(i,1,n) {\n    double maxi_x = 0;\n    rep(j,i) {\n      double tmp_x = -1;\n      if( radii[i] == radii[j] ) tmp_x = xs[j] + radii[i] * 2.0;\n      else {\n\tdouble r1 = radii[i], r2 = radii[j];\n\tdouble len_x = sqrt( pow(r1+r2,2.0) - pow(r1-r2,2.0) );\n\ttmp_x = xs[j] + len_x;\n      }\n      maxi_x = max(maxi_x,tmp_x);\n    }\n    xs[i] = maxi_x;\n    if( !equals(0.0,xs[i]-radii[i]) && xs[i]-radii[i] < 0 ) {\n      xs[i] += fabs(xs[i]-radii[i]);\n    }\n  }\n  double maxi = 0;\n  rep(i,n) maxi = max(maxi,xs[i]+radii[i]);\n  printf(\"%.10f\\n\",maxi);\n}\n\nint main() {\n  cin >> n;\n  rep(i,n) cin >> radii[i];\n  compute();\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <deque>\n#include <tuple>\n#include <queue>\n#include <functional>\n#include <cmath>\nusing namespace std;\nbool flag[200];\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> buf(n),seq;\n\tfor (auto &a : buf)cin >> a;\n\tsort(buf.begin(), buf.end());\n\tseq.reserve(n);\n\tseq.push_back(buf.front());\n\tdouble sum = 2*seq[0];\n\tfor (int i = 1; i < n;i++) {\n\t\tdouble w,x;\n\t\tx = max(0.0, buf[i] - seq[0] + sqrt(2 * buf[i] * seq[0]));\n\t\tw = x;\n\t\tint pos = 0;\n\t\tx = max(0.0, buf[i] - seq.back() + sqrt(2 * buf[i] * seq.back()));\n\t\tif (w > x) {\n\t\t\tpos = seq.size();\n\t\t\tw = x;\n\t\t\tsum += x;\n\t\t}\n\t\tfor (int j = 0; j < buf.size(); j++) {\n\t\t\tx = max(0.0, sqrt(2 * buf[j] * seq[i])+sqrt(2 * buf[j] * seq[i+1])-sqrt(2*seq[i]*seq[i+1]));\n\t\t\tif (w > x) {\n\t\t\t\tpos = i+1;\n\t\t\t\tw = x;\n\t\t\t\tsum += x;\n\t\t\t}\n\t\t}\n\t\tseq.insert(seq.begin()+pos, buf[i]);\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint N;\ndouble D[501];\ndouble xs[501];\nint main(){\n\n  cin>>N;\n  for(int i=0;i<N;i++){\n    cin>>D[i];\n  }\n\n  xs[0] = D[0];\n  \n  // ????????????????????????????????????\n  for(int i = 1; i < N; i++){\n    double max_x = -1;\n    for(int j = 0; j < i; j++){\n      double nxt_x = 0;\n      nxt_x = xs[j] + sqrt(pow(1.0*D[i] + D[j], 2) - pow(abs(D[i] - D[j]), 2));\n      max_x = max(max_x, nxt_x);\n    }\n    xs[i] = max_x;\n  }\n\n  double max_x = -1;\n  double min_x = 100000000;\n  for(int i=0;i<N;i++){\n    max_x=max(max_x, xs[i] + D[i]);\n    min_x=min(min_x, xs[i] - D[i]);\n  }\n  double ans = abs(min_x-max_x);\n  printf(\"%.10f\\n\", ans);\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cassert>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010],x[1010];\n\nconst double eps=1e-5;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\trep(i,m){\n\t\tdouble dd=0.0;\n\t\tdd+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\tdd+=1.0*(r[i]-cy)*(r[i]-cy);\n\t\tdouble rr=1.0*(r[i]+r[m])*(r[i]+r[m]);\n\t\t// cerr << rr << \" \" << dd << endl;\n\t\tif(rr>dd+eps) return true;\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\trep(i,n){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\tcx=x[j]+sqrt(d);\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n            if(i>0&&x[i-1]>=cx) continue;\n            if(cross(i,cx,r[i])) continue;\n            x[i]=min(x[i],cx);\n\t\t}\n\t\t// cerr << i << \" \" << x[i] << \" \" << r[i] << endl;\n\t}\n\n\tdouble ans=0.0;\n\trep(i,n) ans=max(ans,x[i]+r[i]);\n\tcout.precision(20);\n\tassert(ans<inf);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <cstdio>\n\nusing namespace std;\n\ndouble get_x2(double x, int r, int r2) {\n\t/*\n\tfloat temp = r + (r2 * 2);\n\tif (temp < sqrt2 * r) {\n\t\treturn x;\n\t} else {\n\t*/\n\t\treturn x + sqrt(pow(r2 + r, 2) - pow(r - r2, 2));\n\t//}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\n\tvector<int> r(n);\n\tvector<double> pos(n);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> r[i];\n\t}\n\n\tpos[0] = 0;\n\tfor (int i = 1; i < n; i++) {\n\t\tdouble temp = 0;\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\ttemp = max(temp, get_x2(pos[j], r[j], r[i]));\n\t\t}\n\t\tpos[i] = temp;\n\t}\n\n\tdouble max_r1 = pos[n - 1] + r[n -1];\n\tdouble min_r1 = pos[0] - r[0];\n\n\tfor (int i = 0; i < n; i++) {\n\t\tmax_r1 = max(max_r1, pos[i] + r[i]);\n\t\tmin_r1 = min(min_r1, pos[i] - r[i]);\n\t}\n\n\tprintf(\"%.8lf\\n\", max_r1 - min_r1);\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst double eps = 1e-4;\ndouble r[550],ans[550];\nint main()\n{\n\tint n;\n\twhile (~scanf(\"%d\", &n))\n\t{\n\t\tmemset(ans, 0, sizeof(ans));\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tscanf(\"%lf\", &r[i]);\n\t\tr[0] = 0;\n\t\tdouble pos = 0;\n\t\tans[1] = r[1];\n\t\tfor (int i = 2; i <= n; i++)\n\t\t{\n\t\t\tdouble tmp = 0;\n\t\t\tans[i] = r[i];\n\t\t\tfor (int j = 1; j < i; j++)\n\t\t\t{\n\t\t\t\tdouble x = fabs(r[i] - r[j]);\n\t\t\t\tdouble y = fabs(r[i] + r[j]);\n\t\t\t\ttmp = sqrt(y*y - x*x)+ans[j];\n\t\t\t\tans[i] = max(ans[i], tmp);\n\t\t\t}\n\t\t\tpos = max(ans[i] + r[i], pos);\n\t\t}\n\t\t//ans[n]+=pos;\n\t\tprintf(\"%lf\\n\", pos);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    cout << fixed << setprecision(10);\n    int N; cin >> N;\n    vector<double> r(N),x(N,0);\n    for (int i=0;i<N;++i) cin >> r[i];\n    for (int i=0;i<N;++i){\n        for (int j=0;j<i;++j){\n            x[i]=max(x[i],x[j]+sqrt((r[i]+r[j])*(r[i]+r[j])-(r[i]-r[j\n            ])*(r[i]-r[j])));\n        }\n    }\n    double Min=0,Max=0;\n    for (int i=0;i<N;++i){\n        Min=min(Min,x[i]-r[i]);\n        Max=max(Max,x[i]+r[i]);\n    }\n    cout << Max-Min << '\\n';\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define all(x) (x).begin(),(x).end()\n#define pb push_back\n#define fi first\n#define se second\n#define dbg(x) cout<<#x\" = \"<<((x))<<endl\ntemplate<class T,class U> ostream& operator<<(ostream& o, const pair<T,U> &p){o<<\"(\"<<p.fi<<\",\"<<p.se<<\")\";return o;}\ntemplate<class T> ostream& operator<<(ostream& o, const vector<T> &v){o<<\"[\";for(T t:v){o<<t<<\",\";}o<<\"]\";return o;}\n\nint main()\n{\n    int n;\n    cin >>n;\n    vector<int> r(n);\n    rep(i,n) cin >>r[i];\n\n    vector<double> x(n);\n    rep(i,n)\n    {\n        x[i]=r[i];\n        rep(j,i)\n        {\n            double t = x[j]+2*sqrt(r[i]*r[j]);\n            x[i] = max(x[i],t);\n        }\n    }\n\n    double ans = 0;\n    rep(i,n) ans = max(ans,x[i]+r[i]);\n    printf(\"%.10f\\n\", ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define ll long long\n#define INF 1000000005\n#define MOD 1000000007\n#define EPS 1e-10\n#define rep(i,n) for(int i=0;i<(int)n;++i)\n#define each(a, b) for(auto (a): (b))\n#define all(v) (v).begin(),(v).end()\n#define fi first\n#define se second\n#define pb push_back\n#define show(x) cout <<#x<<\" = \"<<(x)<<endl\n#define spair(p) cout <<#p<<\": \"<<p.fi<<\" \"<<p.se<<endl\n#define svec(v) cout<<#v<<\":\";rep(i,v.size())cout<<\" \"<<v[i];cout<<endl\n#define sset(s) cout<<#s<<\":\";each(i,s)cout <<\" \"<<i;cout<<endl\n\nusing namespace std;\n\ntypedef pair<int,int>P;\n\nconst int MAX_N = 100005;\n\nint n;\n\ndouble len(int r1,int r2)\n{\n    return sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main()\n{\n    cin >> n;\n    vector<int> vec(n);\n    rep(i,n){\n        cin >> vec[i];\n    }\n    double ans = vec[0] + vec[n-1];\n    rep(i,n-1){\n        ans += len(vec[i],vec[i+1]);\n    }\n    printf(\"%.10f\\n\",ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define ll long long\n#define INF 1000000005\n#define MOD 1000000007\n#define EPS 1e-10\n#define rep(i,n) for(int i=0;i<(int)n;++i)\n#define each(a, b) for(auto (a): (b))\n#define all(v) (v).begin(),(v).end()\n#define fi first\n#define se second\n#define pb push_back\n#define show(x) cout <<#x<<\" = \"<<(x)<<endl\n#define spair(p) cout <<#p<<\": \"<<p.fi<<\" \"<<p.se<<endl\n#define svec(v) cout<<#v<<\":\";rep(i,v.size())cout<<\" \"<<v[i];cout<<endl\n#define sset(s) cout<<#s<<\":\";each(i,s)cout <<\" \"<<i;cout<<endl\n\nusing namespace std;\n\ntypedef pair<int,int>P;\n\nconst int MAX_N = 100005;\n\nint n;\n\ndouble len(int r1,int r2)\n{\n    return sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main()\n{\n    cin >> n;\n    vector<int> vec(n);\n    rep(i,n){\n        cin >> vec[i];\n    }\n    vector<double> v(n);\n    double ans = 0;\n    rep(i,n){\n        double mn = vec[i];\n        for(int j=0;j<i;j++){\n            mn = max(mn,len(vec[i],vec[j])+v[j]);\n        }\n        v[i] = mn;\n        ans = max(ans,mn+vec[i]);\n    }\n    printf(\"%.10f\\n\",ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n    }else if(C[i] < C[i + 1]){\n      ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  printf(\"%.10f\\n\", ans + C[0] + C[n - 1]);\n}  "
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define For(i, a, b) for(int (i)=(int)(a); (i)<(int)(b); ++(i))\n#define rFor(i, a, b) for(int (i)=(int)(a)-1; (i)>=(int)(b); --(i))\n#define rep(i, n) For((i), 0, (n))\n#define rrep(i, n) rFor((i), (n), 0)\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long lint;\ntypedef unsigned long long ulint;\ntypedef pair<int, int> pii;\ntypedef pair<lint, lint> pll;\ntemplate<class T> bool chmax(T &a, const T &b){if(a<b){a=b; return true;} return false;}\ntemplate<class T> bool chmin(T &a, const T &b){if(a>b){a=b; return true;} return false;}\ntemplate<class T> T div_floor(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>=0 ? a/b : (a+1)/b-1;\n}\ntemplate<class T> T div_ceil(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>0 ? (a-1)/b+1 : a/b;\n}\n\nconstexpr lint mod = 1e9+7;\nconstexpr lint INF = mod * mod;\nconstexpr int MAX = 100010;\n\nconstexpr double eps=1e-9;\nconstexpr double PI=3.14159265358979323846264338327950;\n\ninline int sgn(double x){\n    if(x<-eps) return -1;\n    if(x>eps) return 1;\n    return 0;\n}\n\ninline bool EQ(double x, double y){\n    return sgn(x-y)==0;\n}\n\ninline bool GE(double x, double y){\n    return sgn(x-y)==1;\n}\n\ninline bool LE(double x, double y){\n    return sgn(x-y)==-1;\n}\n\ninline bool GEQ(double x, double y){\n    return sgn(x-y)>=0;\n}\n\ninline bool LEQ(double x, double y){\n    return sgn(x-y)<=0;\n}\n\nstruct Point{\n    double x, y;\n    Point(double x=0, double y=0): x(x), y(y){}\n\n    Point operator+(const Point &p){\n        return {x+p.x, y+p.y};\n    }\n\n    Point operator-(const Point &p){\n        return {x-p.x, y-p.y};\n    }\n\n    Point operator*(const double k){\n        return {k*x, k*y};\n    }\n\n    Point operator/(const double k){\n        return {x/k, y/k};\n    }\n\n    double operator*(const Point &p){\n        return x*p.x+y*p.y;\n    }\n\n    double operator^(const Point &p){\n        return x*p.y-y*p.x;\n    }\n\n    bool operator==(const Point &p){\n        return EQ(x, p.x) && EQ(y, p.y);\n    }\n\n    bool operator<(const Point &p) const{\n        if(EQ(x, p.x)) return LE(y, p.y);\n        return LE(x, p.x);\n    }\n};\n\nusing Vec=Point;\nusing Polygon=vector<Point>;\n\ndouble norm(Point p){\n    return p.x*p.x+p.y*p.y;\n}\n\ndouble abs(Point p){\n    return sqrt(norm(p));\n}\n\ndouble arg(Point p){\n    return atan2(p.y, p.x);\n}\n\nPoint rot(Point p, double t){\n    return {p.x*cos(t)-p.y*sin(t), p.x*sin(t)+p.y*cos(t)};\n}\n\nPoint proj(Point a, Vec v, Point p){\n    double t=v*(p-a)/norm(v);\n    return a+v*t;\n}\n\nPoint refl(Point a, Vec v, Point p){\n    return proj(a, v, p)*2-p;\n}\n\nconstexpr int CCW_COUNTER_CLOCKWISE=1; //反時計回り\nconstexpr int CCW_CLOCKWISE=-1; //時計回り\nconstexpr int CCW_ONLINE_BACK=-2; //一直線, C->A->B\nconstexpr int CCW_ONLINE_FRONT=2; //一直線, A->B->C\nconstexpr int CCW_ON_SEGMENT=0; //一直線, A->C->B\n\ninline int ccw(Point a, Point b, Point c){\n    Vec v=b-a, w=c-a;\n    if(GE(v^w, 0)) return CCW_COUNTER_CLOCKWISE;\n    if(LE(v^w, 0)) return CCW_CLOCKWISE;\n    if(LE(v*w, 0)) return CCW_ONLINE_BACK;\n    if(LE((a-b)*(c-b), 0)) return CCW_ONLINE_FRONT;\n    return CCW_ON_SEGMENT;\n}\n\nbool isParallel(Vec v, Vec w){\n    return EQ(v^w, 0);\n}\n\nbool isOrthogonal(Vec v, Vec w){\n    return EQ(v*w, 0);\n}\n\nbool intersectSS(Point a, Point b, Point c, Point d){\n    return ccw(a, b, c)*ccw(a, b, d)<=0 && ccw(c, d, a)*ccw(c, d, b)<=0;\n}\n\nPoint getCrossPointLL(Point a, Vec v, Point b, Vec w){\n    double t=((b-a)^w)/(v^w);\n    return a+v*t;\n}\n\ndouble getDistanceLP(Point a, Vec v, Point p){\n    return abs(v^(p-a)/abs(v));\n}\n\ndouble getDistanceSP(Point a, Point b, Point p){\n    if(LE((b-a)*(p-a), 0)) return abs(p-a);\n    if(LE((a-b)*(p-b), 0)) return abs(p-b);\n    return getDistanceLP(a, b-a, p);\n}\n\ndouble getDistanceLL(Point a, Vec v, Point b, Vec w){\n    if(isParallel(v, w)) return getDistanceLP(a, v, b);\n    return 0;\n}\n\ndouble getDistanceLS(Point a, Vec v, Point c, Point d){\n    Point b=a+v;\n    if(ccw(a, b, c)*ccw(a, b, d)<=0) return 0;\n    return min(getDistanceLP(a, v, c), getDistanceLP(a, v, d));\n}\n\ndouble getDistanceSS(Point a, Point b, Point c, Point d){\n    if(intersectSS(a, b, c, d)) return 0;\n    return min({getDistanceSP(a, b, c), getDistanceSP(a, b, d),\n                getDistanceSP(c, d, a), getDistanceSP(c, d, b)});\n}\n\ndouble getAreaP(Polygon &p){\n    double ret=0;\n    rep(i, (int)p.size()) ret+=p[i]^p[(i+1)%p.size()]/2;\n    return abs(ret);\n}\n\nbool isConvex(Polygon &p){\n    int n=p.size();\n    bool flag1=false, flag2=false;\n    rep(i, n){\n        int tmp=ccw(p[(i+n-1)%n], p[i], p[(i+1)%n]);\n        if(tmp==CCW_COUNTER_CLOCKWISE){\n            if(flag2) return false;\n            flag1=true;\n        }\n        else if(tmp==CCW_CLOCKWISE){\n            if(flag1) return false;\n            flag2=true;\n        }\n    }\n    return true;\n}\n\nPolygon convex_hull(Polygon p){\n    int n=p.size();\n    sort(p.begin(), p.end());\n    Polygon ch(2*n);\n    int k=0;\n    rep(i, n){\n        while(k>1 && LE((ch[k-1]-ch[k-2])^(p[i]-ch[k-1]), 0)) --k;\n        ch[k++]=p[i];\n    }\n    for(int i=n-2, t=k; i>=0; --i){\n        while(k>t && LE((ch[k-1]-ch[k-2])^(p[i]-ch[k-1]), 0)) --k;\n        ch[k++]=p[i];\n    }\n    ch.resize(k-1);\n    return ch;\n}\n\nint intersectCC(Point c1, double r1, Point c2, double r2){\n    if(r1<r2){\n        swap(c1, c2);\n        swap(r1, r2);\n    }\n    double d=abs(c1-c2), r=r1+r2;\n    if(GE(d, r)) return 4;\n    if(EQ(d, r)) return 3;\n    if(EQ(d+r2, r1)) return 1;\n    if(LE(d+r2, r1)) return 0;\n    return 2;\n}\n\nbool intersectCL(Point c, double r, Point a, Vec v){\n    return LEQ(getDistanceLP(a, v, c), r);\n}\n\nbool intersectCS(Point c, double r, Point a, Point b){\n    return LEQ(getDistanceSP(a, b, c), r) && GEQ(max(abs(a-c), abs(b-c)), r);\n}\n\nPolygon getCrossPointCL(Point c, double r, Point a, Vec v){\n    Polygon ps;\n    if(!intersectCL(c, r, a, v)) return ps;\n    Point p=proj(a, v, c);\n    double t=sqrt(max((double)0.0, (r*r-norm(p-c))/norm(v)));\n    ps.push_back(p+v*t);\n    if(!EQ(t, 0)) ps.push_back(p-v*t);\n    return ps;\n}\n\nPolygon getCrossPointCC(Point c1, double r1, Point c2, double r2){\n    Polygon ps;\n    Vec v=c2-c1, w(v.y*-1, v.x);\n    double d=abs(v);\n    double x=(d*d+r1*r1-r2*r2)/(2*d);\n    double y=sqrt(max(r1*r1-x*x, (double)0.0));\n    ps.push_back(c1+v*x/d+w*y/d);\n    if(intersectCC(c1, r1, c2, r2)!=2) return ps;\n    ps.push_back(c1+v*x/d-w*y/d);\n    return ps;\n}\n\ndouble getAreaCC(Point c1, double r1, Point c2, double r2){\n    int flag=intersectCC(c1, r1, c2, r2);\n    if(flag>=3) return 0;\n    if(flag<=1){\n        double r=min(r1, r2);\n        return PI*r*r;\n    }\n    double d=abs(c1-c2);\n    double ret=0;\n    rep(i, 2) {\n        double x=(d*d+r1*r1-r2*r2)/(2*d);\n        double t=acos(x/r1)*2;\n        ret+=(t-sin(t))*r1*r1/2;\n        swap(c1, c2);\n        swap(r1, r2);\n    }\n    return ret;\n}\n\nPolygon Tangent(Point c, double r, Point p){\n    Polygon ps;\n    double d=abs(p-c);\n    double t=acos(r/d);\n    ps.push_back(c+rot(p-c, t)*r/d);\n    ps.push_back(c+rot(p-c, -t)*r/d);\n    return ps;\n}\n\nPolygon getCommonTangent(Point c1, double r1, Point c2, double r2){\n    Polygon ps;\n    int flag=intersectCC(c1, r1,c2, r2);\n    if(flag>=2){\n        double d=abs(c2-c1);\n        double t=acos(abs(r1-r2)/d);\n        if(LE(r1, r2)) t=PI-t;\n        ps.push_back(c1+rot(c2-c1, t)*r1/d);\n        ps.push_back(c1+rot(c2-c1, -t)*r1/d);\n    }\n    if(flag==4){\n        double d=abs(c2-c1);\n        double L=d*r1/(r1+r2);\n        double t=acos(r1/L);\n        ps.push_back(c1+rot(c2-c1, t)*r1/d);\n        ps.push_back(c1+rot(c2-c1, -t)*r1/d);\n    }\n    if(flag==3 || flag==1){\n        Polygon tg=getCrossPointCC(c1, r1, c2, r2);\n        ps.push_back(tg[0]);\n    }\n    return ps;\n}\n\nPoint getO(Point a, Point b, Point c){\n    Point M=(a+b)/2, N=(a+c)/2;\n    Vec v={-(b-a).y, (b-a).x}, w={-(c-a).y, (c-a).x};\n    return getCrossPointLL(M, v, N, w);\n}\n\nPoint getI(Point a, Point b, Point c){\n    double A=abs(b-c), B=abs(c-a), C=abs(a-b);\n    return (a*A+b*B+c*C)/(A+B+C);\n}\n\nPoint getH(Point a, Point b, Point c){\n    Vec v={-(c-b).y, (c-b).x}, w={-(c-a).y, (c-a).x};\n    return getCrossPointLL(a, v, b, w);\n}\n\npair<Point, double> MinimumBoundingCircle(Polygon &p){\n    Point C;\n    double r;\n    if(p.size()==1) C=p[0], r=0;\n    else if(p.size()==2) C=(p[0]+p[1])/2, r=abs(p[0]-C);\n    else{\n        r=INF;\n        Polygon ch=convex_hull(p);\n        int K=ch.size();\n        auto check=[&](Point tc, double tr){\n            rep(i, K){\n                if(GE(abs(ch[i]-tc), tr)) return false;\n            }\n            return true;\n        };\n        rep(i, K)For(j, i+1, K){\n            Point tc=(ch[i]+ch[j])/2;\n            double tr=abs(ch[i]-tc);\n            if(check(tc, tr) && chmin(r, tr)) C=tc;\n            For(k, j+1, K){\n                int ccw_flag=ccw(ch[i], ch[j], ch[k]);\n                if(ccw_flag!=CCW_COUNTER_CLOCKWISE && ccw_flag!=CCW_CLOCKWISE) continue;\n                tc=getO(ch[i], ch[j], ch[k]);\n                tr=abs(ch[i]-tc);\n                if(check(tc, tr) && chmin(r, tr)) C=tc;\n            }\n        }\n    }\n    return {C, r};\n}\n\ndouble r[510], d[510];\n\nbool check(int K, double mid){\n    if(LE(mid-r[K], 0)) return false;\n    rep(i, K){\n        if(intersectCC({d[i], r[i]}, r[i], {mid, r[K]}, r[K]) < 3){\n            return false;\n        }\n    }\n    return true;\n}\n\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    rep(i, n) scanf(\"%lf\", &r[i]);\n    d[0] = r[0];\n    double ans = r[0] * 2;\n    For(i, 1, n){\n        double low = d[i-1], high = mod;\n        rep(_, 100){\n            double mid = (high + low) / 2;\n            (check(i, mid) ? high : low) = mid;\n        }\n        d[i] = high;\n        chmax(ans, d[i] + r[i]);\n    }\n    printf(\"%.20lf\\n\", ans);\n}\n"
  },
  {
    "language": "C++",
    "code": "\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<cctype>\n#include<math.h>\n#include<string>\n#include<string.h>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<utility>\n#include<set>\n#include<map>\n#include<stdlib.h>\n#include<iomanip>\n#include<complex>\nusing namespace std;\n\n#define ll long long\n#define ld long double\n#define INF 1e9\n#define MOD 1000000007\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define loop(i,a,n) for(i=a;i<(n);i++)\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\n\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nint main(void) {\n    int i,j;\n    int n;\n    cin >> n;\n    vi r(n);\n    rep(i,n) cin >> r[i];\n    vector<double> x(n);\n    rep(i,n){\n        x[i] = r[i];\n        rep(j,i){\n            double h = abs(r[i]-r[j]);\n            x[i] = max(x[i], x[j]+sqrt((r[i]+r[j])*(r[i]+r[j]) - h*h));\n        }\n    }\n    double ans = 0;\n    rep(i,n)ans = max(ans, x[i] + r[i]);\n    cout << shosu(10) << ans << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define syosu(x) fixed<<setprecision(x)\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef pair<int,int> P;\ntypedef pair<double,double> pdd;\ntypedef pair<ll,ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef vector<string> vs;\ntypedef vector<P> vp;\ntypedef vector<vp> vvp;\ntypedef vector<pll> vpll;\ntypedef pair<int,P> pip;\ntypedef vector<pip> vip;\nconst int inf=1<<29;\nconst ll INF=1ll<<60;\nconst double pi=acos(-1);\nconst double eps=1e-9;\nconst ll mod=1e9+7;\nconst int dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\n\n\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tint n;\n\tcin>>n;\n\tvd a(n),x(n);\n\tfor(auto &i:a) cin>>i;\n\tx[0]=a[0];\n\tdouble res=2*a[0];\n\tfor(int i=1;i<n;i++){\n\t\tx[i]=a[i];\n\t\tfor(int j=0;j<i;j++){\n\t\t\tx[i]=max(x[i],x[j]+sqrt((a[i]+a[j])*(a[i]+a[j])-(a[i]-a[j])*(a[i]-a[j])));\n\t\t}\n\t\tres=max(res,x[i]+a[i]);\n\t}\n\tcout<<syosu(9)<<res<<endl;\n//\tfor(auto i:x) cout<<i<<' ';cout<<endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tlong long int N;\n\tcin >> N;\n\tlong double ans = 0;\n\tvector<long double>R( N + 2 ), Len( N + 3 );\n\tfor( size_t i = 1; i <= N; i++ ) {\n\t\tcin >> R[i];\n\t}\n\tfor( size_t i = 1; i < N + 2; i++ ) {\n\t\tlong double L = R[i] + R[i - 1];\n\t\tlong double X = R[i] - R[i - 1];\n\t\tlong double Y = sqrtl( L*L - X*X );\n\t\tLen[i] = max( Y, max( R[i], R[i - 1] ) );\n\t}\n\tint j = 0, k = 0;\n\tfor( size_t i = 0; i < N + 2; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t\tj = i;\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t\t//cout << Len[i] << endl;\n\t}\n\treverse( Len.begin(), Len.end() );\n\treverse( R.begin(), R.end() );\n\tans = 0;\n\tfor( size_t i = 0; i < N + 2 - j + 1; i++ ) {\n\t\t//cout << R[i] << \" \" << Len[i] << endl;\n\t\tif( ans < R[i] ) {\n\t\t\tans = R[i];\n\t\t} else {\n\t\t\tans += Len[i];\n\t\t}\n\t}\n\tif( N == 2 && R[R.size() - 2] < R[R.size() - 3] ) {\n\t\tans += R[R.size()-2];\n\t}\n\tcout << fixed << setprecision( 20 ) << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sstream>\n#include <map>\n#include <set>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nstruct vertex{\n    int X;\n    int Y;\n};\n\nint\tgcd(int\ta, int b){\n    while( b ){\n        int\tm = a % b;\n        a = b;\n        b = m;\n    }\n    return a;\n}\n\nint\tlcm(int a, int\tb){\n    return (a*b)/gcd(a,b);\n}\n\nint isPrim(int a){\n    if(a==1){\n        return 0;\n    }\n    for(int i=2;i<=(a+1)/2;i++){\n        if(a%i==0){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nvoid f(int A,int B){\n    \n}\n\nint main(int argc, const char * argv[])\n{\n    //std::ios::sync_with_stdio(false);\n    //scanf(\"%s\",S);\n    //scanf(\"%d\",&N);\n    //getline(cin, target);\n    //cin >> x >> y;\n    //????????????\n\n    int N;\n    cin >> N;\n    \n    vector<int> vect1;\n    vect1.clear();\n    \n    for(int i=0;i<N;i++){\n        int tmp;\n        cin >> tmp;\n        vect1.push_back(tmp);\n    }\n    \n    vector<int> vect2;\n    vect2.clear();\n    int flag=1;\n    while(flag==1){\n        flag=0;\n        for(int i=0;i<vect1.size()-1;i++){\n            double p2=pow(vect1[i]+vect1[i+1],2)-pow(vect1[i]-vect1[i+1],2);\n            double sq=sqrt(abs(p2));\n            \n            if(i==0){\n                if(vect1[i]>=vect1[i+1]){\n                    vect2.push_back(vect1[i]);\n                }else{\n                    if(sq>vect1[i+1]){\n                        vect2.push_back(vect1[i]);\n                    }else{\n                        flag=1;\n                    }\n                }\n            }else if(i==vect1.size()-2){\n                \n            }\n            \n            if(vect1[i]>=vect1[i+1]){\n                if(sq>=vect1[i]){\n                    vect2.push_back(vect1[i+1]);\n                }else{\n                    flag=1;\n                }\n            }else{\n                vect2.push_back(vect1[i+1]);\n            }\n        }\n        vect1.clear();\n        vect1=vect2;\n        vect2.clear();\n    }\n    \n    \n    double wa=0;\n    flag=0;\n    for(int i=0;i<vect1.size()-1;i++){\n        flag=0;\n        \n        double p2=pow(vect1[i]+vect1[i+1],2)-pow(vect1[i]-vect1[i+1],2);\n        double sq=sqrt(abs(p2));\n        \n        wa=wa+sq;\n\n    }\n    wa=wa+vect1[0]+vect1[vect1.size()-1];\n\n    printf(\"%.8f\",wa);\n    //cout << wa << endl;\n    \n    //???????????§\n    //cout << \"ans\" << endl;????????????\n    //printf(\"%.0f\\n\",ans);//?°???°?????\\?????¨?????????\n    //printf(\"%.7f\",p);\n    //printf(\"%f\\n\",pow(2,ans.size()));\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n//#include<cctype>\n#include<climits>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n//#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n//#include<numeric>\n#include<utility>\n#include<complex>\n//#include<memory>\n#include<functional>\n#include<cassert>\n#include<set>\n#include<stack>\n\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 515;\nint r[MAXN];\ndouble pos[MAXN];\n\nint main() {\n    int N;\n    cin >> N;\n    for (int i = 0; i < N; i++) {\n        cin >> r[i];\n    }\n    for (int i = 0; i < N; i++) {\n        double p = r[i];\n        for (int j = 0; j < i; j++) {\n            double tmp = sqrt((r[i]+r[j])*(r[i]+r[j]) - (r[i]-r[j])*(r[i]-r[j])) + pos[j];\n            p = max(p, tmp);\n        }\n        pos[i] = p;\n    }\n    double ans = 0;\n    for (int i = 0; i < N; i++) ans = max(ans, pos[i]+r[i]);\n    printf(\"%.15lf\\n\", ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<double,int> pdi;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF -1\n\nint n;\n\nbool used_start[500];\nbool used_end[500];\n\n#define MAX_V 505\nstruct edge{int to;double cost;};\nvector<edge> G[MAX_V];\ndouble d[MAX_V];\n\nvoid dijkstra(int s,int V){\n    priority_queue< pdi,vector<pdi>> que;\n    rep(i,MAX_V)d[i]=INF;\n    d[s]=0;\n    que.push(pdi(0,s));\n    \n    while(que.size()){\n        pdi p=que.top();\n        que.pop();\n        \n        int v=p.second;\n        if(d[v]>p.first)continue;\n        \n        rep(i,G[v].size()){\n            edge e=G[v][i];\n            if(d[e.to]<d[v]+e.cost){\n                d[e.to]=d[v]+e.cost;\n                que.push(pdi(d[e.to],e.to));\n            }\n        }\n    }\n}\n\n\nvoid add_edge_start(vector<int> data){\n    double now=0;\n    rep(i,n){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_start[i]=true;\n//            cout<<\"501\"<<\"->\"<<i<<\" \"<<r<<endl;\n            G[501].pb(edge{(int)i,r});\n        }\n        else break;\n    }\n}\n\n\nvoid add_edge_end(vector<int> data){\n    double now=0;\n    for(int i=n-1;i>=0;i--){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_end[i]=true;\n//            cout<<i<<\"->\"<<\"502 \"<<r<<endl;\n            G[i].pb(edge{502,r});\n        }\n        else break;\n    }\n    \n}\n\n\nvoid connect(int p,vector<int> data){\n    double r=data[p];           //???p?????????\n    double x=0,y=r;             //?????????????????§?¨?\n    double l=0;                 //???p??????????????????i??????????????§????§?????????¢\n    bool connected = false;     //???p??¨?????????????????¨?????????????????????\n    int dist=-1;                //???p????????????????????????(???p -> ???dist???????????????)\n    double wait=-1;             //???p????????????????????§?????????\n    \n    for(int i=p+1;i<n;i++){\n        double rd = data[i];    //???i?????????\n        double tx = x, ty = y, tr=data[i-1];\n        \n        if( (rd+tr)*(rd+tr) - abs(rd-y)*abs(rd-y) <= 0  )continue;      //sqrt(~~~)???nan?????????????????????\n        x += sqrt( (rd+tr)*(rd+tr) - abs(rd-tr)*abs(rd-tr) );           //???j??????????????§?¨?????§????\n        y = rd;\n        \n        \n        if( (x)*(x)+(y-r)*(y-r)<=(r+rd)*(r+rd)+1e-7 ){      //??¨???????????????????????????\n            x = sqrt( (r+rd)*(r+rd) - abs(r-rd)*abs(r-rd) );\n            y = rd;\n            \n            if(  (used_start[p]&&used_start[i]) || (used_end[p]&&used_end[i])  ){}\n            else{\n                //                cout<<endl<<p<<\"->\"<<i<<\" \"<<x<<endl;\n                G[p].pb(edge{i,x});\n            }\n        }\n    }\n}\n\n\nvoid add_edge(vector<int> data){\n    rep(i,n-1){\n        connect(i,data);\n    }\n}\n\n\n\nint main(){\n    cin>>n;\n    vector<int> data(n);\n    rep(i,n)cin>>data[i];\n    \n    rep(i,500)used_start[i] = used_end[i] = false;\n    \n    add_edge_start(data);\n    \n    add_edge_end(data);\n    \n    add_edge(data);\n    \n    \n    dijkstra(501,MAX_V);\n    \n    printf(\"%.10lf\\n\",d[502]);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <iterator>\n#include <cmath>\n\nusing namespace std;\n\nint main(){\n\t\n\tint n;\n\t\n\tcin >> n;\n\t\n\tdouble d[1000] = {};\n\tdouble r[1000] = {};\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tcin >> r[i];\n\t\tdouble dist = 0;\n\t\tfor(int j = 0; j < i; j++){\n\t\t\tdist = max(dist, d[j] + sqrt((r[i] + r[j]) * (r[i] + r[j]) - (r[i] - r[j]) * (r[i] - r[j])) );\n\t\t}\n\t\td[i] = dist;\n\t}\n\t\n\tdouble le = 0;\n\tdouble ri = d[n - 1];\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tle = min(le, d[i] - r[i]);\n\t\tri = max(ri, d[i] + r[i]);\n\t}\n\t\n\tprintf(\"%.8f\\n\", ri - le);\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nsigned main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  int N;\n  cin >> N;\n\n  vector<double> r(N);  \n  for ( int i = 0; i < N; i++ ) {\n    cin >> r[i];    \n  }\n\n  vector<double> p(N);\n  double ans = r[0]*2;  \n  p[0] = r[0];\n  for ( int i = 1; i < N; i++ ) {\n    p[i] = r[i];    \n    for ( int j = 0; j < i; j++ ) {\n      double a = abs(r[i]-r[j]);\n      double b = r[i]+r[j];      \n      double d = sqrt(b*b-a*a);      \n      p[i] = max(p[i], p[j]+d);      \n    }\n    ans = max(ans, p[i]+r[i]);    \n  }\n\n  cout << ans << endl;\n  \n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD NUM000007\n#define EPS 0.0000001\n#define NUM 30000\nusing namespace std;\n\ndouble calc_dist(double left_x,double left_y,double right_x,double right_y){\n\treturn sqrt((left_x-right_x)*(left_x-right_x)+(left_y-right_y)*(left_y-right_y));\n}\n\nint main(){\n\n\tint N;\n\tdouble most_right_loc,most_right_r,tmp_r,tmp;\n\tdouble left,right,m,dist,tmp_loc;\n\n\tscanf(\"%d\",&N);\n\tscanf(\"%lf\",&most_right_loc);\n\tmost_right_r = most_right_loc;\n\n\tfor(int loop = 1; loop <= N-1; loop++){\n\n\t\tscanf(\"%lf\",&tmp_r);\n\n\t\tleft = most_right_loc;\n\t\tright = most_right_loc+most_right_r+tmp_r;\n\t\tm = (left+right)/2;\n\n\t\tdist = most_right_r+tmp_r;\n\n\t\twhile(left<=right){\n\t\t\ttmp = calc_dist(most_right_loc,most_right_r,m,tmp_r);\n\n\t\t\tif(abs(dist-tmp) < EPS){ //OK\n\t\t\t\ttmp_loc = m;\n\t\t\t\tif(tmp_loc < tmp_r)tmp_loc = tmp_r;\n\n\t\t\t\tif(tmp_loc+tmp_r > most_right_loc+most_right_r){\n\t\t\t\t\tmost_right_loc = tmp_loc;\n\t\t\t\t\tmost_right_r = tmp_r;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tif(tmp > dist){\n\t\t\t\t\tright = m-EPS;\n\t\t\t\t}else{\n\t\t\t\t\tleft = m+EPS;\n\t\t\t\t}\n\t\t\t}\n\t\t\tm = (left+right)/2;\n\t\t}\n\t}\n\n\tprintf(\"%.8lf\\n\",most_right_loc+most_right_r);\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//  aoj-VolumeICPCOOC2015-B  / 2015-11-30\n#include<iostream>\n#include<vector>\n#include<cassert>\n#include<string>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\n#include<tuple>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n\ntemplate<typename T>ostream& operator << (ostream &os , const vector<T> &v){\n    rep(i,v.size()) os << v[i] << (i!=v.size()-1 ? \" \" : \"\"); return os;\n}\ntemplate<typename T>istream& operator >> (istream &is , vector<T> &v){\n    rep(i,v.size()) is >> v[i]; return is;\n}\n\n#ifdef DEBUG\nvoid debug(){ cerr << \" : Debug\" << endl; }\n#endif\ntemplate<class F,class...R> void debug(const F &car,const R&... cdr){\n#ifdef DEBUG\n    cerr << car << \" \"; debug(cdr...);\n#endif\n}\n\nconst double EPS=1e-8;\n\nstruct Point{\n    double x,y;\n    Point():x(0),y(0){}\n    Point(double x,double y):x(x),y(y){};\n    bool operator == (const Point &a) const { return x == a.x && y == a.y; }\n    Point operator-(const Point& p) const { return Point(x - p.x, y - p.y); }\n};\nistream &operator >> (istream& is, Point& p){ return is >> p.x >> p.y;}\nostream &operator << (ostream& os, const Point& p){ return os << \"(\" << p.x << \",\" << p.y << \")\";}\n\ndouble dot(const Point &a, const Point &b) { return a.x * b.x + a.y * b.y; }\ndouble cross(const Point &a, const Point &b) { return a.x * b.y - a.y * b.x; }\ndouble norm(const Point& a) { return sqrt(dot(a, a)); }\ndouble distance(const Point& a, const Point& b) { return norm(a - b); }\n\nbool check(vector<Point> &P, vector<int> &R,Point &np,int nr){\n    rep(i,P.size()){\n        if(distance(P[i],np) - (R[i] + nr) > EPS) return false;\n    }\n    return true;\n}\n\nbool solve(){\n    int n; cin >> n;\n    vector<int> R(n); cin >> R;\n    vector<Point> P;\n    for(int r : R){\n        double l= P.size() > 0 ? max(P.back().x,(double)r) : r;\n        double h=1e10;\n        while(h-l>1e-8){\n            double m = (l+h)/2;\n            Point p = Point(m,r);\n            if(check(P, R, p, r)) h = m;\n            else l = m;\n        }\n        P.push_back(Point(h,r));\n    }\n    debug(P);\n    double ans = 0;\n    rep(i,P.size()) ans = max(ans,P[i].x+R[i]);\n    printf(\"%.8f\\n\",ans);\n    return false;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nvoid chmax(double &l, double r){if(l<r)l=r;}\n\nint main(){\n\n  int n; cin>> n;\n  vector<double> r(n);\n  rep(i, n) cin>> r[i];\n\n  vector<double> x(n);\n  rep(i, n){\n    x[i]=r[i];\n    rep(j, i){\n      double a=r[j]+r[i], b=r[j]-r[i];\n      chmax(x[i], x[j]+sqrt(a*a-b*b));\n    }\n  }\n\n  double mx=0;\n  rep(i, n) chmax(mx, x[i]+r[i]);\n  printf(\"%.20f\\n\", mx);\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n,t;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    //freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    ans=0;\n    cin>>n;\n    for(int i=0; i<n; i++)\n    {\n        cin>>r[i];\n    }\n    if(n==1)\n    {\n        ans=r[0]*2;\n        printf(\"%.8f\\n\",ans);\n        return 0;\n    }\n    for(int i=0; i<n-1; i++)\n    {\n        minn=min(r[i],r[i+1]);\n        maxx=max(r[i],r[i+1]);\n        //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n        if((sqrt((minn*2)*(minn*2)+(minn*2)*(minn*2))+maxx)<=sqrt(maxx*maxx*2))\n        {\n            ans+=maxx;\n            if((i==0&&maxx==r[0])||(i==n-2&&maxx==r[n-1])) ans+=maxx;\n            //cout<<maxx<<endl;\n        }\n        else\n        {\n            if(i==0)\n            {\n                ans+=r[i];\n            }\n            if(i==n-2)\n            {\n                ans+=r[i+1];\n            }\n            ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n            haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n        }\n    }\n    printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ndouble getDis(double R,double r){return sqrt((R+r)*(R+r) - (R-r)*(R-r));}\n\nint main(){\n  int n;\n  cin>>n;\n  double A[501],x[501];\n  for(int i=0;i<n;i++)cin>>A[i],x[i] = A[i];\n\n\n\n  for(int i=1;i<n;i++)\n    for(int j=0;j<i;j++){\n      double R = A[i];\n      double r = A[j];\n      double d = getDis(R,r);\n      if(x[j]+d>=x[j]+r)x[i] = max(x[i],x[j]+d);\n    }\n  \n  double ans = 0;\n  for(int i=0;i<n;i++) ans=max(ans,x[i]+A[i]);\n  printf(\"%.10f\\n\",ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<double,int> pdi;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF 999999999\n\nint n;\n\nbool used_start[500];\nbool used_end[500];\n\n#define MAX_V 505\nstruct edge{int to;double cost;};\nvector<edge> G[MAX_V];\ndouble d[MAX_V];\n\nvoid dijkstra(int s,int V){\n    priority_queue< pdi,vector<pdi>,greater<pdi> > que;\n    rep(i,MAX_V)d[i]=INF;\n    d[s]=0;\n    que.push(pdi(0,s));\n    \n    while(que.size()){\n        pdi p=que.top();\n        que.pop();\n        \n        int v=p.second;\n        if(d[v]<p.first)continue;\n        \n        rep(i,G[v].size()){\n            edge e=G[v][i];\n            if(d[e.to]>d[v]+e.cost){\n                d[e.to]=d[v]+e.cost;\n                que.push(pdi(d[e.to],e.to));\n            }\n        }\n    }\n}\n\n\nvoid add_edge_start(vector<int> data){\n    double now=0;\n    rep(i,n){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_start[i]=true;\n//            cout<<\"501\"<<\"->\"<<i<<\" \"<<r<<endl;\n            G[501].pb(edge{(int)i,r});\n        }\n        else break;\n    }\n}\n\n\nvoid add_edge_end(vector<int> data){\n    double now=0;\n    for(int i=n-1;i>=0;i--){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_end[i]=true;\n//            cout<<i<<\"->\"<<\"502 \"<<r<<endl;\n            G[i].pb(edge{502,r});\n        }\n        else break;\n    }\n    \n}\n\n\nvoid connect(int p,vector<int> data){\n    double r=data[p];           //???p?????????\n    double x=0,y=r;             //?????????????????§?¨?\n    double l=0;                 //???p??????????????????i??????????????§????§?????????¢\n    bool connected = false;     //???p??¨?????????????????¨?????????????????????\n    int dist=-1;                //???p????????????????????????(???p -> ???dist???????????????)\n    double wait=-1;             //???p????????????????????§?????????\n    \n    for(int i=p+1;i<n;i++){\n        double rd = data[i];    //???i?????????\n        double tx = x, ty = y, tr=data[i-1];\n        \n        if( (rd+tr)*(rd+tr) - abs(rd-y)*abs(rd-y) <= 0  )continue;      //sqrt(~~~)???nan?????????????????????\n        x += sqrt( (rd+tr)*(rd+tr) - abs(rd-tr)*abs(rd-tr) );           //???j??????????????§?¨?????§????\n        y = rd;\n        \n        \n        if( (x)*(x)+(y-r)*(y-r)<=(r+rd)*(r+rd)+1e-9 ){      //??¨???????????????????????????\n            connected = true;                               //????????°????????????\n            dist = i;                                       //dist??????????????????\n            x = sqrt( (r+rd)*(r+rd) - abs(r-rd)*abs(r-rd) );\n            y = rd;\n            \n            wait = x;\n        }\n    }\n    if(connected){\n        if(  (used_start[p]&&used_start[dist]) || (used_end[p]&&used_end[dist])  ){}\n        else{\n//            cout<<endl<<p<<\"->\"<<dist<<\" \"<<wait<<endl;\n            G[p].pb(edge{dist,wait});\n        }\n    }\n}\n\n\nvoid add_edge(vector<int> data){\n    rep(i,n-1){\n        connect(i,data);\n    }\n}\n\n\n\nint main(){\n    cin>>n;\n    vector<int> data(n);\n    rep(i,n)cin>>data[i];\n    \n    rep(i,500)used_start[i] = used_end[i] = false;\n    \n    add_edge_start(data);\n    \n    add_edge_end(data);\n    \n    add_edge(data);\n    \n    \n    dijkstra(501,MAX_V);\n    \n    printf(\"%.10lf\\n\",d[502]);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i,n,N) for(int i=n;i<N;i++)\n#define RREP(i,n,N) for(int i=N-1;i>=n;i--)\n#define p(S) cout<<S<<endl;\nusing namespace std;\n\nint N;\ndouble r[510];\ndouble x[510];\n\ndouble calc_x(double a, double b){\n    return sqrt((a+b)*(a+b) - (a-b)*(a-b));\n}\ndouble ans;\nint main() {\n    cin >> N;\n    REP(i,0,N) cin>> r[i];\n\n    REP(i,1,N){\n        double mx=0;\n        RREP(j,0,i) {\n            double now = calc_x(r[j], r[i]);\n            mx = max(mx, now+x[j]);\n            if(r[j]>=r[i]) break;\n        }\n        x[i]=mx;\n    }\n    double  mn=0;\n    REP(i,0,N) {\n        mn = min(mn, x[i] - r[i]);\n        ans = max(ans, x[i] + r[i]);\n    }\n    ans -= mn;\n\n    printf(\"%.6lf\\n\", ans);\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <functional>\nusing namespace std;\n\n#define rep(i,a,n) for(int (i)=(a); (i)<(n); (i)++)\n#define repq(i,a,n) for(int (i)=(a); (i)<=(n); (i)++)\n#define repr(i,a,n) for(int (i)=(a); (i)>=(n); (i)--)\n#define int long long int\n\ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconstexpr ll INF = 1001001001001001LL;\nconstexpr ll MOD = 1000000007LL;\n\nsigned main() {\n    int N; cin >> N;\n    vector<double> a(N), rec(N);\n    rep(i,0,N) cin >> a[i];\n    double ans = 0.0;\n    rep(i,0,N) {\n        double temp = a[i];\n        rep(j,0,i) {\n            chmax(temp, rec[j] + 2 * sqrt(a[i] * a[j]));\n        }\n        rec[i] = temp;\n        chmax(ans, rec[i] + a[i]);\n    }\n    printf(\"%.12f\\n\", ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\ndouble r[500];\ndouble pos[500];\n\nbool check(double r1, double p1, double r2, double p2){\n\tdouble dx = p1 - p2, dy = r1 - r2;\n\tdouble d = sqrt(dx * dx + dy * dy);\n\treturn d <= r1 + r2;\n}\n\nint main(){\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n#ifdef LOCAL\n\tstd::ifstream in(\"in\");\n\tstd::cin.rdbuf(in.rdbuf());\n#endif\n\n\tint N;\n\tcin >> N;\n\tfor(int i = 0; i < N; i++){\n\t\tcin >> r[i];\n\t}\n\n\tfor(int i = 1; i < N; i++){\n\t\tdouble ng = pos[i - 1], ok = 1e9;\n\t\tfor(int loop = 0; loop < 200; loop++){\n\t\t\tdouble mid = (ok + ng) / 2;\n\t\t\tbool flag = true;\n\t\t\tfor(int j = 0; j < i; j++){\n\t\t\t\tif(check(r[j], pos[j], r[i], mid)){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag) ok = mid;\n\t\t\telse ng = mid;\n\t\t}\n\t\tpos[i] = ok;\n\t}\n\n\tdouble minx = 1e9, maxx = -1e9;\n\tfor(int i = 0; i < N; i++){\n\t\tminx = min(minx, pos[i] - r[i]);\n\t\tmaxx = max(maxx, pos[i] + r[i]);\n\t}\n\tcout << fixed << setprecision(15) << maxx - minx << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\nusing namespace std;\n\nint r[502];\ndouble WID[502];\n\ndouble width(int r1, int r2)\n{\n\tif (r1 == 10001 && r2 == 10001) {\n\t\treturn 0.0;\n\t} else if (r1 == 10001) {\n\t\treturn (double)r2;\n\t} else if (r2 == 10001){\n\t\treturn (double)r1;\n\t} else\n\t\treturn 2 * sqrt((double)(r1 * r2));\n}\n\nint main()\n{\n\tint N;\n\tdouble add;\n\tscanf(\"%d\",&N);\n\tfor (int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\", &r[i]);\n\t}\n\tr[0] = r[N + 1] = 10001;\n\n\tWID[0] = 0;\n\tfor (int i = 1; i <= N + 1; i++) {\n\t\tWID[i] = WID[i - 1] + width(r[i - 1],r[i]);\n\t}\n\n\tfor (int i = 0; i <= N - 1; i++) {\n\t\tfor (int j = i + 2; j <= N + 1; j++) {\n\t\t\tif ((add = width(r[i], r[j]) - (WID[j] - WID[i])) > 0.0) {\n\t\t\t\tfor (int k = j; k <= N + 1; k++) {\n\t\t\t\t\tWID[k] += add;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.5lf\\n\",WID[N + 1]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      double x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n      if(C[i] > x)\n        ans += C[i];\n      else\n        ans += x;\n    }else if(C[i] < C[i + 1]){\n      double x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n      if(C[i + 1] > x)\n        ans += C[i + 1];\n      else\n        ans += x;\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  if(C[0] < C[1]){\n    double x = sqrt(pow(C[0] + C[1], 2) - pow(C[1] - C[0], 2));\n    if(C[1] < x + C[0])\n      ans += C[0];\n  }else{\n    ans += C[0];\n  }\n  if(C[n - 1] < C[n - 2]){\n    double x = sqrt(pow(C[n - 1] + C[n - 2], 2) - pow(C[n - 2] - C[n - 1], 2));\n    if(C[n - 2] < x + C[n - 1])\n      ans += C[n - 1];\n  }else{\n    ans += C[n - 1];\n  }\n  printf(\"%.8f\\n\", ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n  int N;\n  cin >> N;\n  double r[512], l[512];\n  for(int i = 0; i < N; i++) cin >> r[i];\n  double ans = 0.0;\n  for(int i = 0; i < N; i++){\n    l[i] = r[i];\n    for(int j = 0; j < i; j++){\n      l[i] = max(l[i], l[j] + sqrt((r[i]+r[j])*(r[i]+r[j]) - (r[i]-r[j])*(r[i]-r[j])));\n    }\n    ans = max(ans, l[i] + r[i]);\n  }\n  printf(\"%.10f\\n\", ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n\ntypedef long long ll;\nll const Inf = 1LL<<60;\n\nint N;\n\nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n\n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n\n  vector<long double> positions;\n  vector<int> lasts;\n//  vector<long double> starts;\n  long double start = 0.0;\n  rep(i, N) {\n    long double x = 0.0;\n    rep(j, i) {\n      long double px = positions[j];\n      long double s = radius[i] + radius[j]; s *= s;\n      long double h = abs(radius[i] - radius[j]); h *= h;\n      long double w = sqrt(s - h);\n      if(x < px + w) {\n        x = px + w;\n      }\n    }\n    positions.push_back(x);\n    lasts.push_back(i);\n    minimize(start, x - radius[i]);\n//    starts.push_back(min(-radius[0], x - radius[i]));\n  }\n\n//  rep(i, radius.size()) { cout << radius[i]; }; cout << endl << radius[0] << endl;\n//  cout << \"-----------------\\n\";rep(i, positions.size()) { printf(\"%.10Lf %.5Lf\\n\", positions[i], radius[lasts[i]]); } cout << \"-----------------\\n\";\n\n  long double ret = 0.0;\n  rep(i, positions.size()) {\n    maximize(ret, positions[i] - start + radius[lasts[i]]);\n  }\n  printf(\"%.10Lf\\n\", ret);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\n#define NUM ((2 - sqrt(2)) / 4)\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      if((C[i] * (double)NUM) > C[i + 1])\n        ans += C[i];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n    }else if(C[i] < C[i + 1]){\n      if(C[i + 1] * (double)NUM > C[i])\n        ans += C[i + 1];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  double a = C[0];\n  double b = C[n - 1];\n  if(C[1] * (double)NUM > C[0])\n    a = 0; \n  if(C[n - 2] * (double)NUM > C[n - 1])\n    b = 0;\n  printf(\"%.8f\\n\", ans + a + b);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cassert>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010],x[1010];\n\nconst double eps=1e-12;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\trep(i,m){\n\t\tdouble dd=0.0;\n\t\tdd+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\tdd+=1.0*(r[i]-cy)*(r[i]-cy);\n\t\tdouble rr=1.0*(r[i]+r[m])*(r[i]+r[m]);\n\t\t// cerr << rr << \" \" << dd << endl;\n\t\tif(rr>dd+eps) return true;\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\trep(i,n){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\tcx=x[j]+sqrt(d);\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n            if(i>0&&x[i-1]>=cx) continue;\n            if(cross(i,cx,r[i])) continue;\n            if(cx<x[i]) x[i]=cx;\n\t\t}\n\t\t// cerr << i << \" \" << x[i] << \" \" << r[i] << endl;\n\t}\n\n\tdouble ans=0.0;\n\trep(i,n) ans=max(ans,x[i]+r[i]);\n\tcout.precision(20);\n\tassert(ans<inf);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n\ntypedef long long ll;\nll const Inf = 1LL<<60;\n\nint N;\n\nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n\n  long double startx = radius[0];\n  while(radius.size() > 1) {\n    bool ok = 0;\n    rep(i, radius.size()) {\n      long double len = (radius[0] + radius[i]); len *= len;\n      len -= abs(radius[0] - radius[i]) * abs(radius[0] - radius[i]);\n      len = sqrt(len);\n\n      if(len < radius[i]) {\n        startx = radius[i];\n        radius.pop_front(); N = radius.size();\n        ok = 1;\n      }\n    }\n    if(!ok) { break; }\n  }\n\n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n\n//  printf(\": %.10Lf\\n\", startx);\n\n  vector<long double> positions;\n  vector<int> lasts;\n//  int lastI = -1;\n  rep(i, N) {\n    long double x = 0.0;\n    if(i) {\n      long double px = positions.back();\n      long double s = radius[i] + radius[lasts.back()]; s *= s;\n      long double h = abs(radius[i] - radius[lasts.back()]); h *= h;\n      long double w = sqrt(s - h);\n      if(x < px + w) {\n        x = px + w;\n      }\n    }\n    if(positions.empty() || positions.back() + radius[lasts.back()] < x) {\n//    if(1) {\n      positions.push_back(x);\n      lasts.push_back(i);\n    }\n  }\n\n//  cout << \"-----------------\\n\";rep(i, positions.size()) { printf(\"%.10Lf %.5Lf\\n\", positions[i], radius[lasts[i]]); } cout << \"-----------------\\n\";\n//  assert(lastI >= 0);\n//  printf(\"%.10Lf %.10Lf %d\\n\", startx, radius[lasts.back()], lasts.back());\n\n  printf(\"%.10Lf\\n\", positions.back() + startx + radius[lasts.back()]);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint N;\nvector<double> R;\nint main(){\n  scanf(\"%d\",&N);\n  for(int i=0;i<N;i++){\n    int r; scanf(\"%d\",&r); R.push_back( r );\n  }\n  vector<double> L;\n  for(int i=0;i<N;i++){\n    double nl=R[i];\n    for(int j=0;j<i;j++){\n      double x = R[i] + R[j];\n      double y = abs(R[i]-R[j]);\n      double z = sqrt( x*x - y*y );\n      nl = max( nl, L[j] + z );\n    }\n    L.push_back( nl );\n  }\n  double res = 0.0;\n  for(int i=0;i<L.size();i++)\n    res = max( res, L[i] + R[i] );\n  printf(\"%.9lf\\n\",res);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <vector>\n#include <string>\n#include <queue>\n#include <deque>\n#include <list>\n#include <stack>\n#include <set>\n#include <map>\n#include <algorithm>\n\n#define int long long\n\nusing namespace std;\n\nsigned main() {\n    int N;\n    cin >> N;\n\n    double r[500];\n    double pos[500];\n    for (int i = 0; i < N; i++) {\n\tcin >> r[i];\n    }\n\n    int arg = 0;\n    pos[0] = r[0];\n    for (int i = 1; i < N; i++) {\n\tdouble maxPos = -1;\n\tfor (int j = 0; j < i; j++) {\n\t    double tmpPos = sqrt((r[j]+r[i])*(r[j]+r[i]) - (r[j]-r[i])*(r[j]-r[i]));\n\t    maxPos = max(pos[j] + tmpPos, maxPos);\n\t}\n\tmaxPos = max(maxPos, r[i]);\n\tpos[i] = maxPos;\n    }\n\n    double maxPos = 0;\n    for (int i = 0; i < N; i++) {\n\tmaxPos = max(maxPos, pos[i]+r[i]);\n    }\n    printf(\"%.10f\\n\", maxPos);\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// {{{ Boilerplate Code <--------------------------------------------------\n// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}\n\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\n#define FOR(I,A,B) for(int I = (A); I < (B); ++I)\n#define ALL(A)     (A).begin(), (A).end()\n\nusing namespace std;\n\n// }}}\n\nint main(){\n\tint n;\n\n\tvector <double> d;\n\n\tcin>>n;\n\n\tFOR(i,0,n){\n\t\tint tmp;\n\t\tcin>>tmp;\n\t\td.push_back(tmp);\n\t}\n\n\tvector <double> pos;\n\n\tdouble ret = 0.0;\n\n\tFOR(i,0,n){\n\t\tdouble curpos = 0.0;\n\n\t\tcurpos=max(curpos,d[i]);\n\n\t\tFOR(j,0,i){\n\t\t\tdouble e1=d[i]-d[j];\n\t\t\tdouble e2=d[i]+d[j];\n\t\t\tdouble e3=sqrt(e2*e2-e1*e1);\n\n\t\t\tcurpos=max(curpos,pos[j]+e3);\n\t\t}\n\t\tpos.push_back(curpos);\n\n\t\tret=max(ret,curpos+d[i]);\n\t}\n\n\tcout<<setprecision(15)<<ret<<endl;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <tuple>\n#include <queue>\n#include <set>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <array>\n#include <functional>\n#include <list>\n#include <iomanip>\n#include <set>\nconst int MOD=1000000007;\nconst int INF=1000000000;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\nconst double eps=1e-9;\nconst int inf=1e9;\ntypedef pair<int,int> P;\nstruct Point\n{\n  double x,y;\n  Point(){x=0;y=0;}\n  Point(double d_x,double d_y){x=d_x,y=d_y;}\n  double operator*(Point obj){return obj.x*x+obj.y*y;}\n  double operator%(Point obj){return obj.y*x-obj.x*y;}\n  Point operator*(double b){Point tmp;tmp.x=x*b;tmp.y=y*b;return tmp;}\n  Point operator/(double b){Point tmp;tmp.x=x/b;tmp.y=y/b;return tmp;}\n  Point operator+(Point obj){Point tmp;tmp.x=x+obj.x;tmp.y=y+obj.y;return tmp;}\n  Point operator-(){Point tmp;tmp.x=-x;tmp.y=-y;return tmp;}\n  Point operator-(Point obj){Point tmp;tmp.x=x-obj.x;tmp.y=y-obj.y;return tmp;}\n  Point operator-=(Point obj){x-=obj.x;y-=obj.y;return *this;}\n  Point operator+=(Point obj){x+=obj.x;y+=obj.y;return *this;}\n  Point operator/=(double b){x=x/b;y=y/b;return *this;}\n  Point operator*=(double b){x=x*b;y=y*b;return *this;}\n  double size(){return hypot(x,y);}\n  Point unit(){return Point(x/size(),y/size());}\n  Point normal(){return Point(y,-x);}\n  double atan(){return atan2(y,x);}\n};\n\nbool operator<(Point a,Point b){return a.x!=b.x?a.x<b.x:a.y<b.y;}\nbool operator>(Point a,Point b){return b<a;}\nbool operator<=(Point a,Point b){return !(b<a);}\nbool operator>=(Point a,Point b){return !(a<b);}\nbool operator==(Point a,Point b){return (a-b).size()<eps;}\nbool operator!=(Point a,Point b){return !(a==b);}\n\nbool equal(double a,double b){return abs(a-b)<eps;}\ndouble cross(Point a,Point b){return a%b;}\ndouble dot(Point a,Point b){return a*b;}\n\nint ccw(Point a,Point b,Point c)\n{\n  b=b-a;\n  c=c-a;\n  if(b%c>0) return +1;\n  else if(b%c<0)return -1;\n  else if(b*c<0) return +2;\n  else if(b.size()<c.size()) return -2;\n  else return 0;\n}\n\nint n;\nint main(int argc,char const* argv[])\n{\n  cin >> n;\n  double r[n];\n  for(int i=0;i<n;i++)\n    {\n      cin >> r[i];\n    }\n  double newr[n];\n  double rmax=0;\n  for(int now=0;now<n;now++)\n    {\n      double nowr=r[now];\n      for(int bef=0;bef<now;bef++)\n\t{\n\t  nowr=max(nowr,r[bef]+sqrt(pow(r[now]+r[bef],2)-pow(r[now]-r[bef],2)));\n\t}\n      newr[now]=nowr;\n      rmax=max(rmax,newr[now]+r[now]);\n    }\n  cout << fixed << setprecision(12) << rmax << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <vector>\n#include <vector>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\n#define fi first\n#define se second\n\ntypedef pair<double,int> pdi;\n\ntemplate<class T>\nT sqr(T x) { return x * x; }\n\nint main() {\n\tint N;\n\tcin >> N;\n\tvector<int> R;\n\tvector<pdi> X;\n\tR.resize(N);\n\tfor(int i = 0; i < R.size(); i++) {\n\t\tcin >> R[i];\n\t}\n\tX.push_back(pdi(0.0,-1));\n\tfor(int i = 0; i < R.size(); i++) {\n\t\tdouble center_x = 0.0;\n\t\tfor(int j = 0; j < X.size(); j++) {\n\t\t\tif(X[j].se == -1) {\n\t\t\t\tcenter_x = max(center_x, X[j].fi + R[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// a^2 = b^2 + c^2\n\t\t\t\t// b = sqrt(sqr(c) - sqr(c))\n\t\t\t\tcenter_x = max(center_x,\n\t\t\t\t\t\tsqrt(sqr(R[i]+X[j].se) - sqr(R[i]-X[j].se)) + X[j].fi);\n\t\t\t}\n\t\t}\n\t\tX.push_back(pdi(center_x, R[i]));\n\t}\n\n\tdouble res = 0;\n\tfor(int i = 0; i < X.size(); i++)\n\t\tres = max(res, X[i].fi + X[i].se);\n\t\n\tprintf(\"%.10f\\n\", res);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<iomanip>\n#define dis(a,b)sqrt(((a)+(b))*((a)+(b))-((a)-(b))*((a)-(b)))\nusing namespace std;\nint n;double d[500],p[500];\nmain()\n{\n\tcin>>n;\n\tfor(int i=0;i<n;i++)cin>>d[i];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tp[i]=d[i];\n\t\tfor(int j=0;j<i;j++)\n\t\t{\n\t\t\tdouble now=dis(d[j],d[i])+p[j];\n\t\t\tp[i]=max(p[i],now);\n\t\t}\n\t}\n\tdouble ans=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tans=max(ans,p[i]+d[i]);\n\t}\n\tcout<<fixed<<setprecision(9)<<ans<<endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <deque>\n#include <tuple>\n#include <queue>\n#include <functional>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> buf(n),seq;\n\tfor (auto &a : buf)cin >> a;\n\tsort(buf.begin(), buf.end(),greater<int>());\n\tseq.reserve(n);\n\tseq.push_back(buf.front());\n\tdouble sum = 2*seq[0];\n\tfor (int i = 1; i < n;i++) {\n\t\tdouble w,x;\n\t\tx = max(0.0, buf[i] - seq[0] + sqrt(4 * buf[i] * seq[0]));\n\t\tw = x;\n\t\tint pos = 0;\n\t\tx = max(0.0, buf[i] - seq.back() + sqrt(4 * buf[i] * seq.back()));\n\t\tif (w > x) {\n\t\t\tpos = seq.size();\n\t\t\tw = x;\n\t\t}\n\t\tfor (int j = 0; j < seq.size()-1; j++) {\n\t\t\tx = max(0.0, sqrt(4 * buf[i] * seq[j])+sqrt(4 * buf[i] * seq[j+1])-sqrt(4*seq[j]*seq[j+1]));\n\t\t\tif (w > x) {\n\t\t\t\tpos = i;\n\t\t\t\tw = x;\n\t\t\t}\n\t\t}\n\t\tseq.insert(seq.begin()+pos, buf[i]);\n\t\tsum += w;\n\t}\n\tcout <<fixed <<setprecision(5)<<sum << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n,t;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    //freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    ans=0;\n        cin>>n;\n        for(int i=0; i<n; i++)\n        {\n            cin>>r[i];\n        }\n        if(n==1)\n        {\n            ans=r[0]*2;\n            cout << fixed << setprecision(8) << ans << endl;\n            return 0;\n        }\n        for(int i=0; i<n-1; i++)\n        {\n            minn=min(r[i],r[i+1]);\n            maxx=max(r[i],r[i+1]);\n            //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n            if((minn+minn+maxx)<=sqrt(maxx*maxx*2))\n            {\n                ans+=maxx;\n                //cout<<maxx<<endl;\n            }\n            else\n            {\n                if(i==0)\n                {\n                    ans+=r[i];\n                }\n                if(i==n-2)\n                {\n                    ans+=r[i+1];\n                }\n                ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n                haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n            }\n        }\n       cout << fixed << setprecision(8) << ans << endl;\n        //printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\nusing namespace std;\n\nint r[502];\ndouble WID[502];\n\ndouble width(int r1,int r2)\n{\n\tif (r1 == 10001 && r2 == 10001) {\n\t\treturn 0.0;\n\t} else if (r1 == 10001) {\n\t\treturn r2;\n\t} else if (r2 == 10001){\n\t\treturn r1;\n\t} else\n\t\treturn 2 * sqrt((double)r1 * r2);\n}\n\nint main()\n{\n\tint N;\n\tdouble add;\n\tscanf(\"%d\",&N);\n\tfor (int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\", &r[i]);\n\t}\n\tr[0] = r[N + 1] = 10001;\n\n\tWID[0] = 0;\n\tfor (int i = 1; i <= N + 1; i++) {\n\t\tWID[i] = WID[i - 1] + width(r[i - 1],r[i]);\n\t}\n\n\tfor (int i = 0; i <= N - 1; i++) {\n\t\tfor (int j = i + 2; j <= N + 1; j++) {\n\t\t\tif ((add = width(r[i], r[j]) - (WID[j] - WID[i])) > 0.0) {\n\t\t\t\tfor (int k = j; k <= N + 1; k++) {\n\t\t\t\t\tWID[k] += add;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lf\\n\",WID[N + 1]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <cstdio>\n\nusing namespace std;\n\nint main(){\n\tint N;\n\twhile(cin >> N){\n\t\tvector<double> vd, r(N);\n\t\tfor(double& d : r) cin >> d;\n\t\tdouble res = 0.0;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tdouble d = r[i];\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tdouble sum = r[i] + r[j];\n\t\t\t\tdouble dif = abs(r[i] - r[j]);\n\t\t\t\td = max(d, vd[j] + sqrt(sum*sum - dif*dif));\n\t\t\t}\n\t\t\tvd.push_back(d);\n\t\t\tres = max(res, d + r[i]);\n\t\t}\n\t\tprintf(\"%.10lf\\n\", res);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\ndouble calc(int r1, int r2) {\n    if (r1 < r2) {\n        swap(r1, r2);\n    }\n\n    return sqrt((r1 + r2) * (r1 + r2) - (r2 - r1) * (r2 - r1));\n}\n\nint main() {\n    int N;\n    cin >> N;\n\n    vector<int> r(N);\n    for (int i = 0; i < N; ++i) {\n        cin >> r[i];\n    }\n\n    double ans = 0.0;\n    vector<double> c;\n    for (int i = 0; i < N; ++i) {\n        double cc = r[i];\n        for (unsigned int j = 0; j < c.size(); ++j) {\n            double d = calc(r[i], r[j]);\n            cc = max(cc, c[j] + d);\n        }\n        c.push_back(cc);\n        ans = max(ans, cc + r[i]);\n    }\n\n    printf(\"%.10f\\n\", ans);\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\nusing ll=long long;\n#define print(n) cout<<n<<endl\n#define rep(i,a,n) for(ll i=a;i<n;i++)\n#define ALL(s) s.begin(),s.end()\n#define P pair<ll,ll>\n#define vl vector<ll>\n#define vi vector<int>\n#define vvl vector<vector<ll>>\n#define vvi vector<vector<int>>\nconst int M=100111;\nconst int inf=1000000007;\nconst long long INF=1e18;\nint dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\nint ddx[8]={1,-1,0,0,1,-1,-1,1},ddy[8]={0,0,1,-1,1,-1,1,-1};\n\ndouble r[505];\ndouble ans=0,x[505];\ndouble dfs(int stand,int now,double xx){\n\tdouble ans_tmp=0;\n\t//stand番目の円が取りうる最大のx座標がx.\n\t//now番目の円とstand番目の円を比較する.\n\tif(now<0||x[now]+r[now]<x[stand]-r[stand])return xx;\n\tdouble dist_tmp=sqrt(pow(r[stand]+r[now],2)-pow(r[stand]-r[now],2));\n\tans_tmp=max(ans_tmp,dfs(stand,now-1,max(xx,x[now]+dist_tmp)));\n\treturn ans_tmp;\n}\n\nint main(){\n\tint n;\n\t//r[i]=i番目の円の半径.\n\t//x[i]=i番目の円のx座標.\n\tcin>>n;\n\trep(i,0,n)cin>>r[i];\n\tx[0]=r[0];\n\t//x座標を決めていく.\n\trep(i,1,n)x[i]=dfs(i,i-1,max(r[i],x[i-1]));\n\trep(i,0,n)ans=max(ans,x[i]+r[i]);\n\tprint(setprecision(15)<<ans);\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\ndouble calcoo(double r1,double r2){\n  //cout << \"cal:\"<< r1 << \" \" << r2 <<\"->\" << sqrt(exp2(r1+r2)-exp2(r1-r2)) <<endl;\n  \n  if(r1==r2)return 2*r1;\n  return sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\nint main()\n{\n  int n;\n\n  cin >> n;\n\n  double r[n];\n  \n\n  for(int i=0;i<n;i++)\n    cin >> r[i];\n\n  vector<double> x;\n  vector<double> r_len;\n  \n  double len=0;\n \n  x.push_back(r[0]);\n  r_len.push_back(r[0]);\n  \n  for(int i=1;i<n;i++){\n    //???????????§??\\????????????????????????\n    double max_x=r[i];\n    int selected = -1;\n    for(int j=0;j<x.size();j++){\n      //cout << \"x[j]:\" << x[j] << endl;\n      double tmp = x[j]+calcoo(r[i],r_len[j]); \n      if(max_x< tmp){\n\tmax_x=tmp;\n\tselected=j;\n      }\n    }\n    //?????°?????????????????????\n    //x.erase(v.begin()+selected);\n    //r_len.erace(r_len.begin()+selected);\n    //cout << max_x << endl;\n    x.push_back(max_x);\n    r_len.push_back(r[i]);   \n  }\n  \n  double ans=-1.0;\n  for(int i=0;i<x.size();i++){\n    if(ans<x[i]+r_len[i])ans=x[i]+r_len[i];\n  }\n  \n  printf(\"%.10f\",ans);\n  \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n \nusing namespace std;\n \n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n \ntypedef long long ll;\nll const Inf = 1LL<<60;\n \nint N;\n \nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n \n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n \n  vector<long double> positions;\n  vector<int> lasts;\n//  vector<long double> starts;\n  long double start = 0.0;\n  rep(i, N) {\n    long double x = 0.0;\n    rep(j, i) {\n      long double px = positions[j];\n      long double s = radius[i] + radius[j]; s *= s;\n      long double h = abs(radius[i] - radius[j]); h *= h;\n      long double w = sqrt(s - h);\n      if(x < px + w) {\n        x = px + w;\n      }\n    }\n    positions.push_back(x);\n    lasts.push_back(i);\n    minimize(start, x - radius[i]);\n//    starts.push_back(min(-radius[0], x - radius[i]));\n  }\n \n//  rep(i, radius.size()) { cout << radius[i]; }; cout << endl << radius[0] << endl;\n//  cout << \"-----------------\\n\";rep(i, positions.size()) { printf(\"%.10Lf %.5Lf\\n\", positions[i], radius[lasts[i]]); } cout << \"-----------------\\n\";\n \n  long double ret = 0.0;\n  rep(i, positions.size()) {\n    maximize(ret, positions[i] - start + radius[lasts[i]]);\n  }\n  printf(\"%.10Lf\\n\", ret);\n \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 555;\nint N;\ndouble R[MAXN];\ndouble pos[MAXN];\n\nint main() {\n  while (cin >> N) {\n    for (int i = 0; i < N; ++i) {\n      cin >> R[i];\n    }\n    for (int i = 0; i < N; ++i) {\n      double x = R[i];\n      for (int j = 0; j < i; ++j) {\n\tdouble c = R[i] + R[j];\n\tdouble b = R[i] - R[j];\n\tdouble a = sqrt(c * c - b * b);\n\tx = max(x, pos[j] + a);\n      }\n      pos[i] = x;\n    }\n    double res = 0;\n    for (int i = 0; i < N; ++i) {\n      res = max(res, pos[i] + R[i]);\n    }\n    printf(\"%.10f\\n\", res);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#define EPS (1e-10)\n#define equals(a,b) (fabs((a) - (b)) < EPS)\nclass Point{\npublic:\n  double x,y;\n  Point(double x = 0, double y = 0):x(x), y(y) {}\n  Point operator + (Point p){\n    return Point(x+p.x,y+p.y);\n  }\n  Point operator - (Point p){\n    return Point(x-p.x,y-p.y);\n  }\n  Point operator * (double k){\n    return Point(x*k,y*k);\n  }\n  Point operator / (double k){\n    return Point(x/k,y/k);\n  }\n  bool operator == (const Point &p) const{\n    return fabs(x-p.x) < EPS && fabs(y-p.y) < EPS;\n  }\n};\ntypedef Point Vector;\ndouble norm(Vector a){\n  return pow(a.x,2.0)+pow(a.y,2.0);\n}\ndouble abs(Vector a){\n  return sqrt(norm(a));\n}\nstruct Circle{\n  Point c;\n  double r;\n};\nint check(Circle a,Circle b){\n  double d1 = abs(b.c-a.c) , d2 = (a.r+b.r);\n  \n  if(d1+b.r-a.r<0) return 2;\n  if(d1+a.r-b.r<0) return -2;\n  if(d1-d2<=0) return 1;\n  return 0;\n}\nint main(){\n  int n;\n  cin >> n;\n  Point a;\n  vector<Circle> v;\n  Circle c;\n  double r;\n  cin >> r;\n  c.c.x=r;c.c.y=r;c.r=r;\n  v.push_back(c);\n  for(int i=1;i<n;i++){\n    cin >> r;\n    c.c.x=r;c.c.y=r;c.r=r;\n    for(int j=0;j<i;j++){\n      \n      c.c.x=max(c.c.x,v[j].c.x+sqrt((v[j].r+c.r)*(v[j].r+c.r)-(v[j].c.y-c.c.y)*(v[j].c.y-c.c.y)));\n      \n    }\n    if(c.c.x<0) c.c.x=0;\n    v.push_back(c);\n  }\n  //cout << v[n-1].c.x+v[n-1].r << endl;\n  double o=0;\n  for(int i=0;i<n;i++) o=max(o,v[i].c.x+v[i].r);\n  printf(\"%.5f\\n\",o);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n  cout << fixed << setprecision(10);\n  int N;\n  cin >> N;\n  vector<double> r(N);\n  for (int i = 0; i < N; i++){\n    cin >> r[i];\n  }\n  vector<double> c(N);\n  c[0] = r[0];\n  for (int i = 1; i < N; i++){\n    double tv = 1000000000;\n    double fv = max(r[i], c[i - 1]);\n    for (int j = 0; j < 100; j++){\n      double mid = (tv + fv) / 2;\n      bool ok = true;\n      for (int k = 0; k < i; k++){\n        if (hypot(mid - c[k], r[i] - r[k]) < r[i]  + r[k]){\n          ok = false;\n        }\n      }\n      if (ok){\n        tv = mid;\n      } else {\n        fv = mid;\n      }\n    }\n    c[i] = tv;\n  }\n  double ans = 0;\n  for (int i = 0; i < N; i++){\n    ans = max(ans, c[i] + r[i]);\n  }\n  cout << ans << endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n \nint n;\ndouble r[500];\ndouble ans[500];\ndouble ans2=0;\n \nint main(){\n  cin>>n;\n  for(int i=0;i<n;i++){\n    cin>>r[i];\n    double maxm=r[i];\n    for(int j=0;j<i;j++){\n      double A=r[i]+r[j];\n      double B=r[i]-r[j];\n      double C=sqrt(A*A-B*B);\n      maxm=max(maxm,ans[j]+C);\n    }\n    ans[i]=maxm;\n    ans2=max(ans2,ans[i]+r[i]);\n  }\n  printf(\"%.8f\\n\",ans2);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010],x[1010];\n\nconst double eps=1e-6;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\tfor(int i=0;i<m;++i){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(r[i]-cy)*(r[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\trep(i,n){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i],cy=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\tcx=x[j]+sqrt(d);\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\tif(i>0&&x[i-1]>=cx) continue;\n\t\t\tif(cross(i,cx,cy)) continue;\n\t\t\tif(cx<x[i]) x[i]=cx;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << y[i] << endl;\n\t}\n\tdouble ans=0.0;\n\trep(i,n) ans=max(ans,x[i]+r[i]);\n\tcout.precision(10);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <unordered_set>\n#include <unordered_map>\n#include <array>\n#include <cassert>\n#include <bitset>\nusing namespace std;\nusing LL = long long;\n\ndouble cost(double r1, double r2)\n{\n\treturn sqrt((r1 + r2) * (r1 + r2) - (r1 - r2) * (r1 - r2));\n}\n\nint main(void)\n{\n\tint N;\n\tvector<int>r;\n\tcin >> N;\n\tfor (int i = 0; i < N; ++i)\n\t{\n\t\tint rr; cin >> rr; r.push_back(rr);\n\t}\n\n\tvector<double>place(1, 0.);\n\tfor (int i = 1; i < N; ++i)\n\t{\n\t\tdouble big = 0;\n\t\tfor (int j = 0; j < i; ++j)\n\t\t{\n\t\t\tbig = max(big, place[j] + cost(r[j], r[i]));\n\t\t}\n\t\tplace.push_back(big);\n\t}\n\tdouble head = 0, tail = 0;\n\tfor (int i = 0; i < place.size(); ++i)\n\t{\n\t\thead = min(head, place[i] - r[i]);\n\t\ttail = max(tail, place[i] + r[i]);\n\t}\n\tcout.precision(15);\n\tcout << tail - head << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//  aoj-VolumeICPCOOC2015-D  / 2015-11-30\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<map>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n//vector\ntemplate<typename T>ostream& operator << (ostream &os , const vector<T> &v){\n    rep(i,v.size()) os << v[i] << (i!=v.size()-1 ? \" \" : \"\\n\"); return os;\n}\ntemplate<typename T>istream& operator >> (istream &is , vector<T> &v){\n    rep(i,v.size()) is >> v[i]; return is;\n}\n\n//debug\n#ifdef DEBUG\nvoid debug(){ cerr << \" : Debug\" << endl; }\n#endif\ntemplate<class F,class...R> void debug(const F &car,const R&... cdr){\n#ifdef DEBUG\n    cerr << car << \" \"; debug(cdr...);\n#endif\n}\n\nstruct Point{\n    int x,y;\n    Point():x(0),y(0){}\n    Point(int x,int y):x(x),y(y){};\n    Point& operator +=(const Point &p){\n        x += p.x;\n        y += p.y;\n        return *this;\n    }\n};\n\nostream &operator << (ostream& os, const Point& p){ return os << \"(\" << p.x << \",\" << p.y << \")\";}\n\nstruct ClosedRange{\n    int l,r; //[l,r]\n    ClosedRange(){}\n    ClosedRange(int l,int r):l(l),r(r){}\n    bool operator < (const ClosedRange &a) const {\n        return make_pair(r,l) < make_pair(a.r, a.l);\n    }\n};\n\nostream& operator << (ostream &os, const ClosedRange &r){ return os << \"[\" << r.l << \" \" << r.r << \"]\"; }\n\nint lower_dimension(Point p, int w, int d){\n    return  p.y == 0 ? p.x :\n            p.x == w ? w + p.y :\n            p.y == d ? w + d + (w - p.x) :\n            p.x == 0 ? w*2 + d + (d - p.y) : -1;\n}\n\nPoint find_cross(Point p, Point dp, int w, int d){\n    while(0 < p.x and p.x < w and 0 < p.y and p.y < d) p += dp;\n    return p;\n}\n\nbool is_in(ClosedRange &r, int x){\n    if(r.l <= r.r) return r.l <= x and x <= r.r;\n    else return r.l <= x or x <= r.r;\n}\n\nClosedRange calc_range(Point p, char dir, int w, int d){\n    ClosedRange ret;\n    Point dp[] = {Point(-1, 1), Point(1, 1), Point(1, -1), Point(-1, -1)};\n    map<char, int> dtoi = {{'N', 0}, {'E', 1}, {'S', 2}, {'W', 3}};\n    Point dp1 = dp[ ( dtoi[ dir ] + 1 ) % 4 ];\n    Point dp2 = dp[ dtoi[ dir ] ];\n    Point l = find_cross(p, dp1, w, d);\n    Point r = find_cross(p, dp2, w, d);\n    debug(l,r);\n    return ClosedRange(lower_dimension(l, w, d),\n                       lower_dimension(r, w, d));\n}\n\nint trial(vector<ClosedRange> &range, int start){\n    int n = range.size();\n    vector<bool> used(n, false);\n    int cnt  = 0, ret = 0;\n    for(int i = start; cnt < n; i = (i+1) % n){\n        if(used[i]) continue;\n        int now = range[i].r;\n        ret++;\n        for(int j = i; range[j].l<= now and cnt < n; j = (j+1) % n){\n            if(is_in(range[i], now)){\n                used[j] = true;\n                cnt ++;\n            }\n        }\n    }\n    return ret;\n}\n\nbool solve(){\n    int n, w, d; cin >> n >> w >> d;\n    vector<ClosedRange> range(n);\n    rep(i,n){\n        int x,y;\n        char f; cin >> x >> y >> f;\n        range[i] = calc_range(Point(x,y), f, w, d);\n        debug(range[i]);\n    }\n    \n    sort( all( range ) );\n    int ans = 1 << 30;\n    rep(i, n){\n        ans = min(ans, trial(range, i));\n    }\n    cout << ans << endl;\n    return false;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sstream>\n#include <map>\n#include <set>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nstruct vertex{\n    int X;\n    int Y;\n};\n\nint\tgcd(int\ta, int b){\n    while( b ){\n        int\tm = a % b;\n        a = b;\n        b = m;\n    }\n    return a;\n}\n\nint\tlcm(int a, int\tb){\n    return (a*b)/gcd(a,b);\n}\n\nint isPrim(int a){\n    if(a==1){\n        return 0;\n    }\n    for(int i=2;i<=(a+1)/2;i++){\n        if(a%i==0){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nvoid f(int A,int B){\n    \n}\n\nint main(int argc, const char * argv[])\n{\n    //std::ios::sync_with_stdio(false);\n    //scanf(\"%s\",S);\n    //scanf(\"%d\",&N);\n    //getline(cin, target);\n    //cin >> x >> y;\n    //????????????\n\n    int N;\n    cin >> N;\n    double wa=0;\n    \n    int tmpbefore=0;\n    int tmp;\n    int flag=0;\n    for(int i=0;i<N;i++){\n        flag=0;\n        cin >> tmp;\n        \n        double p2=pow(tmpbefore+tmp,2)-pow(tmpbefore-tmp,2);\n        double sq=sqrt(abs(p2));\n\n        if(tmpbefore>tmp){\n            if(sq>tmpbefore){\n                wa=wa+sq;\n                tmpbefore=tmp;\n            }else{\n                wa=wa+tmpbefore;\n                tmpbefore=tmpbefore;\n                flag=1;\n            }\n        }else{\n            if(sq>tmp){\n                wa=wa+sq;\n            }else{\n                if(i==1){\n                    wa=wa+tmp-tmpbefore;\n                }else{\n                    wa=wa+tmp;\n                }\n            }\n            tmpbefore=tmp;\n        }\n        \n        //tmpbefore=tmp;\n\n    }\n    if(flag!=1){\n        wa=wa+tmpbefore;\n    }\n\n    printf(\"%.8f\",wa);\n    //cout << wa << endl;\n    \n    //???????????§\n    //cout << \"ans\" << endl;????????????\n    //printf(\"%.0f\\n\",ans);//?°???°?????\\?????¨?????????\n    //printf(\"%.7f\",p);\n    //printf(\"%f\\n\",pow(2,ans.size()));\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// >>> TEMPLATES\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing i32 = int32_t;\nusing i64 = int64_t;\nusing u32 = uint32_t;\nusing u64 = uint64_t;\n#define int ll\n#define double ld\n#define rep(i,n) for (int i = 0; i < (int)(n); i++)\n#define rep1(i,n) for (int i = 1; i <= (int)(n); i++)\n#define repR(i,n) for (int i = (int)(n)-1; i >= 0; i--)\n#define rep1R(i,n) for (int i = (int)(n); i >= 1; i--)\n#define loop(i,a,B) for (int i = a; i B; i++)\n#define loopR(i,a,B) for (int i = a; i B; i--)\n#define all(x) (x).begin(), (x).end()\n#define allR(x) (x).rbegin(), (x).rend()\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define fst first\n#define snd second\ntemplate <class Int> auto constexpr inf = numeric_limits<Int>::max()/2-1;\nauto constexpr INF32 = inf<int32_t>;\nauto constexpr INF64 = inf<int64_t>;\nauto constexpr INF   = inf<int>;\n#ifdef LOCAL\n#include \"debug.hpp\"\n#else\n#define dump(...) (void)(0)\n#define say(x) (void)(0)\n#define debug if (0)\n#endif\ntemplate <class T> using pque_max = priority_queue<T>;\ntemplate <class T> using pque_min = priority_queue<T, vector<T>, greater<T> >;\ntemplate <class T, class = typename T::iterator, class = typename enable_if<!is_same<T, string>::value>::type>\nostream& operator<<(ostream& os, T const& v) { bool f = true; for (auto const& x : v) os << (f ? \"\" : \" \") << x, f = false; return os; }\ntemplate <class T, class = typename T::iterator, class = typename enable_if<!is_same<T, string>::value>::type>\nistream& operator>>(istream& is, T &v) { for (auto& x : v) is >> x; return is; }\ntemplate <class T, class S> ostream& operator<<(ostream& os, pair<T,S> const& p) { return os << \"(\" << p.first << \", \" << p.second << \")\"; }\ntemplate <class T, class S> istream& operator>>(istream& is, pair<T,S>& p) { return is >> p.first >> p.second; }\nstruct IOSetup { IOSetup() { cin.tie(nullptr); ios::sync_with_stdio(false); cout << fixed << setprecision(15); } } iosetup;\ntemplate <class F> struct FixPoint : private F {\n    constexpr FixPoint(F&& f) : F(forward<F>(f)) {}\n    template <class... T> constexpr auto operator()(T&&... x) const { return F::operator()(*this, forward<T>(x)...); }\n};\nstruct MakeFixPoint {\n    template <class F> constexpr auto operator|(F&& f) const { return FixPoint<F>(forward<F>(f)); }\n};\n#define MFP MakeFixPoint()|\n#define def(name, ...) auto name = MFP [&](auto &&name, __VA_ARGS__)\ntemplate <class T, size_t d> struct vec_impl {\n    using type = vector<typename vec_impl<T,d-1>::type>;\n    template <class... U> static type make_v(size_t n, U&&... x) { return type(n, vec_impl<T,d-1>::make_v(forward<U>(x)...)); }\n};\ntemplate <class T> struct vec_impl<T,0> { using type = T; static type make_v(T const& x = {}) { return x; } };\ntemplate <class T, size_t d = 1> using vec = typename vec_impl<T,d>::type;\ntemplate <class T, size_t d = 1, class... Args> auto make_v(Args&&... args) { return vec_impl<T,d>::make_v(forward<Args>(args)...); }\ntemplate <class T> void quit(T const& x) { cout << x << endl; exit(0); }\ntemplate <class T, class U> constexpr bool chmin(T& x, U const& y) { if (x > y) { x = y; return true; } return false; }\ntemplate <class T, class U> constexpr bool chmax(T& x, U const& y) { if (x < y) { x = y; return true; } return false; }\ntemplate <class It> constexpr auto sumof(It b, It e) { return accumulate(b,e,typename iterator_traits<It>::value_type{}); }\ntemplate <class T> int sz(T const& x) { return x.size(); }\ntemplate <class C, class T> int lbd(C const& v, T const& x) {\n    return lower_bound(v.begin(), v.end(), x)-v.begin();\n}\ntemplate <class C, class T> int ubd(C const& v, T const& x) {\n    return upper_bound(v.begin(), v.end(), x)-v.begin();\n}\ntemplate <class C, class F> int ppt(C const& v, F f) {\n    return partition_point(v.begin(), v.end(), f)-v.begin();\n}\ntemplate <class Int> struct Random {\n    mt19937_64 mt{random_device{}()};\n    //mt19937_64 mt{(unsigned)time(0)};\n    Int a,b; // [a,b]\n    Random(Int a, Int b) : a(a), b(b) {}\n    Int operator()() { return uniform_int_distribution<Int>(a,b)(mt); }\n};\n// <<<\n\nint32_t main() {\n    int n; cin >> n;\n    vector<double> r(n); cin >> r;\n\n    vector<double> pos(n,-1);\n    pos[0] = 0;\n    rep1 (i,n-1) rep (j,i) chmax(pos[i], pos[j] + sqrt(4*r[j]*r[i]));\n\n    double L = INF, R = -INF;\n    rep (i,n) {\n        chmin(L, pos[i]-r[i]);\n        chmax(R, pos[i]+r[i]);\n    }\n\n    cout << R-L << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <tuple>\n#include <queue>\n#include <set>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <array>\n#include <functional>\n#include <list>\n#include <iomanip>\n#include <set>\nconst int MOD=1000000007;\nconst int INF=1000000000;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\nconst double eps=1e-9;\nconst int inf=1e9;\ntypedef pair<int,int> P;\nstruct Point\n{\n  double x,y;\n  Point(){x=0;y=0;}\n  Point(double d_x,double d_y){x=d_x,y=d_y;}\n  double operator*(Point obj){return obj.x*x+obj.y*y;}\n  double operator%(Point obj){return obj.y*x-obj.x*y;}\n  Point operator*(double b){Point tmp;tmp.x=x*b;tmp.y=y*b;return tmp;}\n  Point operator/(double b){Point tmp;tmp.x=x/b;tmp.y=y/b;return tmp;}\n  Point operator+(Point obj){Point tmp;tmp.x=x+obj.x;tmp.y=y+obj.y;return tmp;}\n  Point operator-(){Point tmp;tmp.x=-x;tmp.y=-y;return tmp;}\n  Point operator-(Point obj){Point tmp;tmp.x=x-obj.x;tmp.y=y-obj.y;return tmp;}\n  Point operator-=(Point obj){x-=obj.x;y-=obj.y;return *this;}\n  Point operator+=(Point obj){x+=obj.x;y+=obj.y;return *this;}\n  Point operator/=(double b){x=x/b;y=y/b;return *this;}\n  Point operator*=(double b){x=x*b;y=y*b;return *this;}\n  double size(){return hypot(x,y);}\n  Point unit(){return Point(x/size(),y/size());}\n  Point normal(){return Point(y,-x);}\n  double atan(){return atan2(y,x);}\n};\n\nbool operator<(Point a,Point b){return a.x!=b.x?a.x<b.x:a.y<b.y;}\nbool operator>(Point a,Point b){return b<a;}\nbool operator<=(Point a,Point b){return !(b<a);}\nbool operator>=(Point a,Point b){return !(a<b);}\nbool operator==(Point a,Point b){return (a-b).size()<eps;}\nbool operator!=(Point a,Point b){return !(a==b);}\n\nbool equal(double a,double b){return abs(a-b)<eps;}\ndouble cross(Point a,Point b){return a%b;}\ndouble dot(Point a,Point b){return a*b;}\n\nint ccw(Point a,Point b,Point c)\n{\n  b=b-a;\n  c=c-a;\n  if(b%c>0) return +1;\n  else if(b%c<0)return -1;\n  else if(b*c<0) return +2;\n  else if(b.size()<c.size()) return -2;\n  else return 0;\n}\n\nint n;\nint main(int argc,char const* argv[])\n{\n  cin >> n;\n  double r[n];\n  for(int i=0;i<n;i++)\n    {\n      cin >> r[i];\n    }\n  double newr[n];\n  memset(newr,0,sizeof(newr));\n  double rmax=0;\n  for(int now=0;now<n;now++)\n    {\n      double nowr=r[now];\n      for(int bef=0;bef<now;bef++)\n\t{\n\t  nowr=max(nowr,newr[bef]+sqrt(pow(r[now]+r[bef],2)-pow(r[now]-r[bef],2)));\n\t}\n      newr[now]=nowr;\n      rmax=max(rmax,newr[now]+r[now]);\n    }\n  cout << fixed << setprecision(9) << rmax << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ndouble get_x(double r1, double r2)\n{\n    return sqrt(pow(r1 + r2, 2) - pow(r1 - r2, 2));\n}\n\nint main()\n{\n    int N;\n    cin >> N;\n    vector<double> R(N), x(N);\n    for (int i = 0; i < N; i++) {\n        cin >> R[i];      \n    }\n    double res = 0;\n    for (int i = 0; i < N; i++) {\n        double nx = R[i];\n        for (int j = 0; j < i; j++) {\n            nx = max(nx, x[j] + get_x(R[i], R[j]));\n        }\n        x[i] = nx;\n        res = max(res, x[i] + R[i]);\n    }\n    printf(\"%.10f\\n\", res);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n\n#include<cmath>\n\nusing namespace std;\n\nint main(){\n  int n;\n  cin >> n;\n  int inp[n];\n  double pos[n];\n  double ans=0,temp=0;\n  for(int i=0;i<n;i++){\n    cin >> inp[i];\n  }\n\n  for(int i=0;i<n;i++){\n    pos[i]=0;\n    for(int j=i-1;j>=-1;j--){\n      if(j>=0){\n\ttemp=pos[j]+sqrt(pow(inp[j]+inp[i],2)-pow(inp[j]-inp[i],2));\n\tif(temp>pos[i]) pos[i]=temp;\n\tif(inp[j]>inp[i])break;\n      }else{\n\tif(inp[i]>pos[i]) pos[i]=inp[i];\n      }\n      if(ans<pos[i]+inp[i])ans=pos[i]+inp[i];\n    }\n    \n    \n  }\n  cout << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\n\n#define rep(i,n) for (int i = 0; i < (n); ++i)\n\nint n;\ndouble x, y, ans;\nvector<int> rad;\n\nint main(void) {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  cin >> n;\n  rad.resize(n);\n\n  rep(i,n) {\n    cin >> rad[i];\n  }\n\n  for (int i = 1; i < rad.size() - 1; ++i) {\n    x = 2 * sqrt(rad[i] * rad[i - 1]);\n    y = 2 * sqrt(rad[i] * rad[i + 1]);\n\n    if (rad[i] < rad[i - 1] && rad[i] < rad[i + 1]) {\n      if (rad[i - 1] > x || rad[i + 1] > y) {\n        rad.erase(rad.begin() + i);\n        continue;\n      }\n      else {\n        ans += x;\n      }\n    }\n    else if (rad[i] > rad[i - 1] && rad[i] > rad[i + 1]) {\n      if (rad[i] > x) {\n        rad.erase(rad.begin() + i - 1);\n        continue;\n      }\n      else if (rad[i] > y) {\n        rad.erase(rad.begin() + i + 1);\n        continue;\n      }\n      else {\n        ans += x;\n      }\n    }\n    else if (rad[i] > rad[i - 1] && rad[i] < rad[i + 1]) {\n      if (rad[i] > x) {\n        rad.erase(rad.begin() + i - 1);\n        continue;\n      }\n      else if (rad[i + 1] > y) {\n        rad.erase(rad.begin() + i + 1);\n        continue;\n      }\n      else {\n        ans += x;\n      }\n    } else {\n      if (rad[i - 1] > x) {\n        rad.erase(rad.begin() + i - 1);\n        continue;\n      }\n      else if (rad[i] > y) {\n        rad.erase(rad.begin() + i + 1);\n        continue;\n      }\n      else {\n        ans += x;\n      }\n    }\n  }\n\n  int rsize = rad.size();\n\n  x = 2 * sqrt(rad[rsize - 1] * rad[rsize - 2]);\n\n  if (rad[rsize - 1] > rad[rsize - 2]) {\n    if (rad[rsize - 1] <= x) {\n      ans += x;\n    }\n  }\n  else {\n    if (rad[rsize - 2] <= x) {\n      ans += x;\n    }\n    else {\n      rad.erase(rad.begin() + rsize - 1);\n    }\n  }\n  ans += rad[0] + rad[rad.size() - 1];\n \n  cout << fixed << setprecision(10) <<  ans << endl;\n\n  return 0;\n}\n    "
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\nusing namespace std;\n\n#define INF 1e8\n\nint N;\nint R[10000];\ndouble x[10000];\nint main(){\n\tscanf(\"%d\", &N);\n\tfor(int i = 0; i < N; i++){\n\t\tscanf(\"%d\", &R[i]);\n\t\tx[i] = 0;\n\t}\n\tx[0] = R[0];\n\tdouble max = x[0] * 2;\n\tfor(int i = 1; i < N; i++){\n\t\tdouble ans = R[i];\n\t\tfor(int j = 0; j < i; j++){\n\t\t\tdouble r = R[i] + R[j];\n\t\t\tdouble dr = R[i] - R[j];\n\t\t\tans = fmax(ans, sqrt(r * r - dr * dr) + x[j]);\n\t\t}\n\t\tx[i] = ans;\n\t\tmax = fmax(max, x[i] + R[i]);\n\t}\n\tprintf(\"%lf\\n\", max);\n}\n\t"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nstatic const int MAX_N = 500;\n\nint N;\ndouble r[MAX_N];\n\ndouble memo[MAX_N];\n\nint main(){\n\tscanf(\"%d\", &N);\n\tfor(int i = 0; i < N; i++) scanf(\"%lf\", &r[i]);\n\tfor(int i = 0; i < N; i++){\n\t\tmemo[i] = r[i];\n\t\tfor(int j = 0; j < i; j++){\n\t\t\tmemo[i] = max(memo[i], memo[j] + sqrt(pow(r[i] + r[j], 2.0) - pow(fabs(r[i] - r[j]), 2.0)));\n\t\t}\n\t}\n\tdouble res = 0.0;\n\tfor(int i = 0; i < N; i++) res = max(res, memo[i] + r[i]);\n\tprintf(\"%.8lf\\n\", res);\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<double,int> pdi;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF 999999999\n\nint n;\n\nbool used_start[500];\nbool used_end[500];\n\n#define MAX_V 505\nstruct edge{int to;double cost;};\nvector<edge> G[MAX_V];\ndouble d[MAX_V];\n\nvoid dijkstra(int s,int V){\n    priority_queue< pdi,vector<pdi>,greater<pdi> > que;\n    rep(i,MAX_V)d[i]=INF;\n    d[s]=0;\n    que.push(pii(0,s));\n    \n    while(que.size()){\n        pdi p=que.top();\n        que.pop();\n        \n        int v=p.second;\n        if(d[v]<p.first)continue;\n        \n        rep(i,G[v].size()){\n            edge e=G[v][i];\n            if(d[e.to]>d[v]+e.cost){\n                d[e.to]=d[v]+e.cost;\n                que.push(pii(d[e.to],e.to));\n            }\n        }\n    }\n}\n\n\nvoid add_edge_start(vector<int> data){\n    double now=0;\n    rep(i,n){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_start[i]=true;\n//            cout<<\"501\"<<\"->\"<<i<<\" \"<<r<<endl;\n            G[501].pb(edge{(int)i,r});\n        }\n        else break;\n    }\n}\n\n\nvoid add_edge_end(vector<int> data){\n    double now=0;\n    for(int i=n-1;i>=0;i--){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_end[i]=true;\n//            cout<<i<<\"->\"<<\"502 \"<<r<<endl;\n            G[i].pb(edge{502,r});\n        }\n        else break;\n    }\n    \n}\n\n\nvoid connect(int p,vector<int> data){\n    double r=data[p];           //???p?????????\n    double x=0,y=r;             //?????????????????§?¨?\n    double l=0;                 //???p??????????????????i??????????????§????§?????????¢\n    bool connected = false;     //???p??¨?????????????????¨?????????????????????\n    int dist=-1;                //???p????????????????????????(???p -> ???dist???????????????)\n    double wait=-1;             //???p????????????????????§?????????\n    \n    for(int i=p+1;i<n;i++){\n        double rd = data[i];    //???i?????????\n        double tx = x, ty = y, tr=data[i-1];\n        \n        if( (rd+tr)*(rd+tr) - abs(rd-y)*abs(rd-y) <= 0  )continue;      //sqrt(~~~)???nan?????????????????????\n        x += sqrt( (rd+tr)*(rd+tr) - abs(rd-tr)*abs(rd-tr) );           //???j??????????????§?¨?????§????\n        y = rd;\n        \n        \n        if( (x)*(x)+(y-r)*(y-r)<=(r+rd)*(r+rd)+1e-9 ){      //??¨???????????????????????????\n            connected = true;                               //????????°????????????\n            dist = i;                                       //dist??????????????????\n            x = sqrt( (r+rd)*(r+rd) - abs(r-rd)*abs(r-rd) );\n            y = rd;\n            \n            wait = x;\n        }\n    }\n    if(connected){\n        if(  (used_start[p]&&used_start[dist]) || (used_end[p]&&used_end[dist])  ){}\n        else{\n//            cout<<endl<<p<<\"->\"<<dist<<\" \"<<wait<<endl;\n            G[p].pb(edge{dist,wait});\n        }\n    }\n}\n\n\nvoid add_edge(vector<int> data){\n    rep(i,n-1){\n        connect(i,data);\n    }\n}\n\n\n\nint main(){\n    cin>>n;\n    vector<int> data(n);\n    rep(i,n)cin>>data[i];\n    \n    rep(i,500)used_start[i] = used_end[i] = false;\n    \n    add_edge_start(data);\n    \n    add_edge_end(data);\n    \n    add_edge(data);\n    \n    \n    dijkstra(501,MAX_V);\n    \n    printf(\"%.10lf\\n\",d[502]);\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\ntemplate<class T>\nusing Table = vector<vector<T>>;\nconst ld eps=1e-9;\n\n//// < \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\a.txt\"\n\n\n\nint main() {\n\tint N; cin >> N;\n\tvector<ld>rs;\n\tvector<ld>xs;\n\tfor (int i = 0; i < N; ++i) {\n\t\tint a; cin >> a;\n\t\trs.push_back(a);\n\t}\n\n\tfor (int i = 0; i < rs.size(); ++i) {\n\t\tld nx = rs[i];\n\t\tfor (int j = 0; j < i; ++j) {\n\t\t\tld dis = sqrt((rs[i] + rs[j])*(rs[i] + rs[j]) - (rs[i] - rs[j])*(rs[i] - rs[j]));\n\t\t\tnx = max(nx, xs[j] + dis);\n\t\t}\n\t\txs.push_back(nx);\n\t}\n\tld ans = 0;\n\tfor (int i = 0; i < rs.size(); ++i) {\n\t\tans = max(ans,xs[i] + rs[i]);\n\t}\n\n\tcout << setprecision(22)<<fixed<<ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//  aoj-VolumeICPCOOC2015-B  / 2015-11-30\n#include<iostream>\n#include<vector>\n#include<cassert>\n#include<string>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\n#include<tuple>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n\ntemplate<typename T>ostream& operator << (ostream &os , const vector<T> &v){\n    rep(i,v.size()) os << v[i] << (i!=v.size()-1 ? \" \" : \"\"); return os;\n}\ntemplate<typename T>istream& operator >> (istream &is , vector<T> &v){\n    rep(i,v.size()) is >> v[i]; return is;\n}\n\n#ifdef DEBUG\nvoid debug(){ cerr << \" : Debug\" << endl; }\n#endif\ntemplate<class F,class...R> void debug(const F &car,const R&... cdr){\n#ifdef DEBUG\n    cerr << car << \" \"; debug(cdr...);\n#endif\n}\n\nconst double EPS=1e-8;\n\nstruct Point{\n    double x,y;\n    Point():x(0),y(0){}\n    Point(double x,double y):x(x),y(y){};\n    bool operator == (const Point &a) const { return x == a.x && y == a.y; }\n    Point operator-(const Point& p) const { return Point(x - p.x, y - p.y); }\n};\nistream &operator >> (istream& is, Point& p){ return is >> p.x >> p.y;}\nostream &operator << (ostream& os, const Point& p){ return os << \"(\" << p.x << \",\" << p.y << \")\";}\n\ndouble dot(const Point &a, const Point &b) { return a.x * b.x + a.y * b.y; }\ndouble cross(const Point &a, const Point &b) { return a.x * b.y - a.y * b.x; }\ndouble norm(const Point& a) { return sqrt(dot(a, a)); }\ndouble distance(const Point& a, const Point& b) { return norm(a - b); }\n\nbool check(vector<Point> &P, vector<int> &R,Point &np,int nr){\n    rep(i,P.size()){\n        if(distance(P[i],np) < R[i] + nr)return false;\n    }\n    return true;\n}\n\nbool solve(){\n    int n; cin >> n;\n    vector<int> R(n); cin >> R;\n    vector<Point> P;\n    for(int r : R){\n        double l= P.size() > 0 ? max(P.back().x,(double)r) : r;\n        double h=1e10;\n        while(h-l>1e-6){\n            double m = (l+h)/2;\n            Point p = Point(m,r);\n            if(check(P, R, p, r)) h = m;\n            else l = m;\n        }\n        P.push_back(Point(h,r));\n    }\n    debug(P);\n    double ans = 0;\n    rep(i,P.size()) ans = max(ans,P[i].x+R[i]);\n    printf(\"%.8f\\n\",ans);\n    return false;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <numeric>\n#include <string>\n#include <string.h>\n#include <map>\n#include <set>\n#include <functional>\n#include <complex>\n#include <stack>\n#include <tuple>\n#include <array>\n#include <ctype.h> // isdigit\n#include <cassert>\nusing namespace std;\n\n#define FOR(i,a,b) for (int i=(a);i<(b);i++)\n#define RFOR(i,a,b) for (int i=(b)-1;i>=(a);i--)\n#define REP(i,n) for (int i=0;i<(n);i++)\n#define RREP(i,n) for (int i=(n)-1;i>=0;i--)\n#define ALL(u) begin(u),end(u)\n#define PB push_back\n#define LE(n,m) ((n) < (m) + EPS * (abs(n) + abs(m)))\n#define GE(n,m) ((n) + EPS * (abs(n) + abs(m)) > (m))\n#define LT(n,m) ((n) + EPS * (abs(n) + abs(m)) < (m))\n#define GT(n,m) ((n) > (m) + EPS * (abs(n) + abs(m)))\n#define EQ(n,m) (abs((n)-(m)) < EPS * (abs(n) + abs(m)))\n\ntypedef long long int ll;\nconst int INF = (1<<30) - 1;\nconst double EPS = 1e-9;\nconst int MOD = 1000000007;\n\n//g++ -std=c++0x -msse4.2 -O3\n//#include <bits/stdc++.h>\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.precision(16);\n    cout.setf(ios::fixed);\n    \n    int N; cin >> N;\n    vector<int> ds(N);\n    for(auto &d: ds)\n        cin >> d;\n    \n    vector<double> centers;\n    centers.push_back(ds[0]);\n    \n    for(int i=1; i<N; i++){\n        double c = ds[i];\n        for(int j=0; j<i; j++)\n            c = max(c, centers[j] + sqrt((ds[j]+ds[i])*(ds[j]+ds[i]) - (ds[j]-ds[i])*(ds[j]-ds[i])));\n        centers.push_back(c);\n    }\n    double ans = 0;\n    for(int i=0; i<N; i++)\n        ans = max(ans, centers[i]+ds[i]);\n    \n    cout << ans << endl;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nusing ll = long long;\nusing ld = long double;\nusing P = pair<int, int>;\nconstexpr ld EPS = 1e-12;\nconstexpr int INF = numeric_limits<int>::max() / 2;\nconstexpr int MOD = 1e9 + 7;\n\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n\n    int n;\n    cin >> n;\n    vector<ld> r(n);\n    for (int i = 0; i < n; i++)\n        cin >> r[i];\n    vector<ld> dp(n, INF);\n    ld res = 0;\n    for (int i = 0; i < n; i++)\n    {\n        dp[i] = r[i];\n        for (int j = 0; j <= i - 1; j++)\n        {\n            ld d = sqrt((r[i] + r[j]) * (r[i] + r[j]) - (r[i] - r[j]) * (r[i] - r[j]));\n            dp[i] = max(dp[i], dp[j] + d);\n        }\n        // cout<<i<<\" \"<<dp[i]<<endl;\n        res = max(res, dp[i] + r[i]);\n    }\n    cout << fixed << setprecision(10) << res << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double EPS = 1e-6;\n\nint n;\nvector<double> v;\n\ndouble solve(){\n  vector<double> dis;\n  double res = 0;\n  \n  if(n == 1) return v[0] * 2;\n\n  for(int i=0;i<n-1;i++){\n    double sum = v[i] + v[i+1];\n    double dif = v[i+1] - v[i];    \n    dis.push_back(sqrt(sum * sum - dif * dif));\n  }\n\n  int l = 0, r = n-1;\n  double sum = v[0];\n  for(int i=0;i<n-1;i++){\n    if(sum + dis[i] < v[i+1] - EPS){\n      l = i + 1;\n      sum = v[i+1];\n    } else {\n      break;\n    }\n  }\n  sum = v[n-1];\n  for(int i=n-1;i>0;i--){\n    if(sum + dis[i-1] < v[i-1] - EPS){\n      r = i - 1;\n      sum = v[i-1];\n    } else {\n      break;\n    }\n  }\n\n  res = v[l] + v[r];\n  //cout << l << ' ' << r << endl;\n  for(int i=l;i<r;i++){\n    if(i < n - 2){\n      int ii = i;\n      sum = dis[i] + dis[i+1];\n      for(int j=i+2;j<=r&&j<n;j++){\n        if(v[i] + v[j] > sum + EPS) ii = j;\n        else if(j >= r) break;\n        sum += dis[j];\n      }\n      if(ii > i) {\n        res += v[i] + v[ii];\n        i = ii;\n      } else {\n        res += dis[i];\n      }\n    } else {\n      res += dis[i];\n    }\n  }\n\n  return res;\n}\n\nint main(){\n  while(cin >> n){\n    double x;\n    v.clear();\n    for(int i=0;i<n;i++){\n      cin >> x;\n      v.push_back(x);\n    }\n    printf(\"%.7f\\n\", solve());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\n#define rep(i,n) for(int i=0;i<(int)n;i++)\n#define all(c) (c).begin(),(c).end()\n#define mp make_pair\n#define pb push_back\n#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define dbg(x) cerr<<__LINE__<<\": \"<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf = (int)1e9;\nconst double INF = 1e12, EPS = 1e-9;\n\nint n;\ndouble r[500], pos[500];\ndouble f(double a, double b){\n\treturn sqrt(4 * a * b);\n}\nint main(){\n\tcin >> n;\n\trep(i, n) cin >> r[i];\n\tpos[0] = r[0];\n\tfor(int i = 1; i < n; i++){\n\t\t\n\t\tdouble mx = 0;\n\t\trep(j, i) mx = max(mx, pos[j] + f(r[i], r[j]));\n\t\tpos[i] = max(r[i], mx);\n\t}\n\tdouble ans = 0;\n\trep(i, n){\n\t\tans = max(ans, pos[i] + r[i]);\n\t}\n\tprintf(\"%.20f\\n\", ans);\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD NUM000007\n#define EPS 0.0000001\n#define NUM 30000\nusing namespace std;\n \nstruct Info{\n    double x,r;\n};\n \ndouble calc_dist(double left_x,double left_y,double right_x,double right_y){//info[k].x,info[k].r,m  m = (left+right)/2,tmp_r\n    return sqrt((left_x-right_x)*(left_x-right_x)+(left_y-right_y)*(left_y-right_y));\n}\n \nint main(){\n \n    int N;\n    double tmp_r,tmp,maximum;\n    double left,right,m,dist,tmp_loc;\n    Info info[501];\n \n    scanf(\"%d\",&N);\n    scanf(\"%lf\",&tmp_r);\n    info[0].x = tmp_r;\n    info[0].r = tmp_r;\n \n \n    for(int i = 1; i <= N-1; i++){\n \n        scanf(\"%lf\",&tmp_r);\n \n        info[i].r = tmp_r;\n        maximum = 0;\n        for(int k = 0; k < i; k++){\n \n            left = info[k].x;//double left_x\n            right = info[k].x+info[k].r+tmp_r;\n            m = (left+right)/2;\n \n            dist = info[k].r+tmp_r;//圓的直徑 \n \n            while(left<=right){\n                tmp = calc_dist(info[k].x,info[k].r,m,tmp_r);\n \n                if(abs(dist-tmp) < EPS){ //OK\n                    tmp_loc = m;\n                    if(tmp_loc < tmp_r)tmp_loc = tmp_r;\n                    break;\n                }else{\n                    if(tmp > dist){\n                        right = m-EPS;\n                    }else{\n                        left = m+EPS;\n                    }\n                }\n                m = (left+right)/2;\n            }\n            maximum = max(maximum,tmp_loc);\n        }\n        info[i].x = maximum;\n    }\n \n    maximum = 0.0;\n    for(int i = 0; i < N; i++)maximum = max(maximum,info[i].x+info[i].r);\n \n    printf(\"%.8lf\\n\",maximum);\n \n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n  \n  int n;\n  cin >> n;\n\n  vector<int> a(n);\n  vector<double> dp(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    dp[i] = (double)a[i];\n  }\n\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < i; j++) {\n      dp[i] = max(dp[i], 2.0 * sqrt(a[j] * a[i]) + dp[j]);\n    }\n  }\n\n  double ans = 0.0;\n  for (int i = 0; i < n; i++) {\n    ans = max(ans, dp[i] + a[i]);\n  }\n  printf(\"%.10f\\n\", ans);\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define DEBUG(x) cerr << #x << \" = \" << x << endl\n#define int long long\nsigned main() {\n  int N; cin >> N;\n  vector<int> R(N); REP(i,N) cin >> R[i];\n  // double ans = 0.0;\n  // ans += R[0] + R[N - 1];\n  // for(int i = 0; i < N - 1; ++i) {\n  //   int mx = max(R[i], R[i + 1]);\n  //   int mn = min(R[i], R[i + 1]);\n  //   ans += sqrt(max<double>(0.0, (R[i] + R[i + 1]) * (R[i] + R[i + 1]) - (mx - mn) * (mx - mn)));\n  // }\n  // cout << ans << endl;\n  vector<double> pos(N);\n  double ans = R[0] * 2;\n  pos[0] = R[0];\n  for(int i = 1; i < N; ++i) {\n    pos[i] = R[i];\n    REP(j,i) {\n      int mx = max(R[i], R[j]);\n      int mn = min(R[i], R[j]);\n      double update = pos[j] + sqrt(max<double>(0.0, (R[i] + R[j]) * (R[i] + R[j]) - (mx - mn) * (mx - mn)));\n      // DEBUG(update);\n      pos[i] = max(pos[i], update);\n    }\n    ans = max(ans, pos[i] + R[i]);\n    cerr << \"pos[\" << i << \"] = \" << pos[i] << endl;\n  }\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  cout << ans << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n\nusing namespace std;\n\nint n;\ndouble rad[502], c[502], d[502], dsum[502], ans=0;\n\ndouble calcD(int i, int j){\n\tif (rad[i]==rad[j]){\n\t\treturn rad[i]*2;\n\t}else if (i==0){\n\t\treturn rad[j];\n\t}else{\n\t\treturn sqrt((rad[i]+rad[j])*(rad[i]+rad[j])-(rad[i]-rad[j])*(rad[i]-rad[j]));\n\t}\n}\n\nint main(){\n\tcin >> n;\n\t\n\trad[0] = 0;\n\tfor (int i=1; i<=n; i++){\n\t\tcin >> rad[i];\n\t}\n\t\n\tc[0] = 0;\n\tc[1] = rad[1];\n\t\n\tfor (int i=2; i<=n; i++){\n\t\tfor (int j=0; j<i; j++){\n\t\t\tc[i] = max(c[i], calcD(j, i)+c[j]);\n\t\t}\n\t}\n\t\n\tfor (int i=1; i<=n; i++){\n\t\t// printf(\"c[%d] = %f\\n\", i, c[i] );\n\t\tans = max(ans, c[i] + rad[i]);\n\t}\n\t\n\tprintf(\"%.8f\\n\", ans);\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntemplate<class T>\nbool chmax(T& a, const T& b) {\n    if (a < b) { a = b; return true; }\n    return false;\n}\ntemplate<class T>\nbool chmin(T& a, const T& b) {\n    if (b < a) { a = b; return true; }\n    return false;\n}\n\n// std::vector Declaration\ntemplate<typename T>\nvector<T> make_v(size_t a) { return vector<T>(a); }\ntemplate<typename T, typename... Ts>\nauto make_v(size_t a, Ts... ts) {\n    return vector<decltype(make_v<T>(ts...))>(a, make_v<T>(ts...));\n}\n\n// std::vector Declaration and Initialization\ntemplate<typename T>\nvector<T> make_vector(size_t a, T x) { return vector<T>(a, x); }\ntemplate<typename T, typename U, typename... Ts>\nauto make_vector(size_t a, U b, Ts... ts) {\n    return vector<decltype(make_vector<T>(b,ts...))>(a, make_vector<T>(b, ts...));\n}\n\n// std::vector Input\ntemplate<typename T>\nistream& operator>>(istream& is, vector<T>& v) {\n    for (auto &e : v) is >> e;\n    return is;\n}\n\n// std::vector Debug\ntemplate<typename T>\nostream& operator<<(ostream& os, const vector<T>& v) {\n    os << \"[\";\n    bool a = 1;\n    for (auto e : v) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"]\";\n    return os;\n}\n\n// std::array Debug\ntemplate<typename T, size_t n>\nostream& operator<<(ostream& os, const array<T, n>& v) {\n    os << \"[\";\n    bool a = 1;\n    for (auto e : v) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"]\";\n    return os;\n}\n\n// std::deque Debug\ntemplate<typename T>\nostream& operator<<(ostream& os, const deque<T>& d) {\n    os << \"[\";\n    bool a = 1;\n    for (auto e : d) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"]\";\n    return os;\n}\n\n// std::pair Debug\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n    os << \"(\" << p.first << \" \" << p.second << \")\";\n    return os;\n}\n\n// std::set Debug\ntemplate<typename T>\nostream& operator<<(ostream& os, const set<T>& st) {\n    os << \"{\";\n    bool a = 1;\n    for (auto e : st) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"}\";\n    return os;\n}\n\n// std::multiset Debug\ntemplate<typename T>\nostream& operator<<(ostream& os, const multiset<T>& st) {\n    os << \"{\";\n    bool a = 1;\n    for (auto e : st) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"}\";\n    return os;\n}\n\n// std::map Debug\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const map<T, U>& mp) {\n    os << \"{\";\n    bool a = 1;\n    for (auto e : mp) {\n        os << (a ? \"\" : \" \");\n        os << e.first << \":\" << e.second;\n        a = 0;\n    }\n    os << \"}\";\n    return os;\n}\n\n// std::tuple Debug\ntemplate<int N, class Tuple>\nvoid out(ostream& os, const Tuple& t){}\ntemplate<int N, class Tuple, class H, class ...Ts>\nvoid out(ostream& os, const Tuple& t) {\n    if (N) os << \" \";\n    os << get<N>(t);\n    out<N+1,Tuple,Ts...>(os, t);\n}\ntemplate<class ...Ts>\nostream& operator<<(ostream& os, const tuple<Ts...>& t) {\n    os << \"(\";\n    out<0,tuple<Ts...>,Ts...>(os, t);\n    os << \")\";\n    return os;\n}\n\n// Debug\n#define DUMP(x) cerr<<#x<<\" = \"<<(x)<<endl\n\n// Weighted edge\ntemplate<typename T>\nstruct edge {\n    int src, to;\n    T cost;\n\n    edge() {}\n    edge(int to, T cost) : src(-1), to(to), cost(cost) {}\n    edge(int src, int to, T cost) : src(src), to(to), cost(cost) {}\n\n    friend ostream& operator<<(ostream& os, const edge& e) {\n        return os << \"(\" << e.src << \"->\" << e.to << \":\" << e.cost << \")\";\n    }\n};\n\nusing LL = long long;\n\n#define fs first\n#define sc second\n\nconst LL MOD = 1e9+7;\n\n\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    cout << fixed << setprecision(10);\n\n    int n; cin >> n;\n    vector<double> r(n); cin >> r;\n\n    auto dist = [&](int i, int j) {\n        double p = r[i] + r[j], q = r[i] - r[j];\n        return sqrt(p*p - q*q);\n    };\n\n    vector<double> pos(n);\n    for (int i = 0; i < n; ++i) {\n        pos[i] = r[i];\n        for (int j = 0; j < i; ++j) {\n            chmax(pos[i], dist(i, j) + pos[j]);\n        }\n    }\n\n    double ans = 0;\n    for (int i = 0; i < n; ++i) {\n        chmax(ans, pos[i] + r[i]);\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nint main(){\n\tint N;double d;\n\tscanf(\"%d%lf\",&N,&d);\n\tvector<pair<double,double> >v={{d,d}};\n\t//????????????**2-??????(??????)??????**2 == ?¨?????????????**2\n\tfor(int i=1;i<N;i++){\n\t\tscanf(\"%lf\",&d);\n\t\tvector<double>a(i);\n\t\ttransform(v.begin(),v.end(),a.begin(),[&](const pair<double,double> &e)->double{\n\t\t\treturn sqrt((e.first+d)*(e.first+d) - (e.first-d)*(e.first-d)) + e.second;\n\t\t});\n\t\tv.emplace_back(d,max(d,*max_element(a.begin(),a.end())));\n\t}\n\tvector<double>a(N);\n\ttransform(v.begin(),v.end(),a.begin(),[&](const pair<double,double> &e)->double{\n\t\treturn e.first+e.second;\n\t});\n\tprintf(\"%f\\n\",*max_element(a.begin(),a.end()));\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> P;\n\n#define fi first\n#define se second\n#define repl(i,a,b) for(ll i=(ll)(a);i<(ll)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define each(itr,v) for(auto itr:v)\n#define pb push_back\n#define all(x) (x).begin(),(x).end()\n#define dbg(x) cout<<#x\"=\"<<x<<endl\n#define mmax(x,y) (x>y?x:y)\n#define mmin(x,y) (x<y?x:y)\n#define maxch(x,y) x=mmax(x,y)\n#define minch(x,y) x=mmin(x,y)\n#define uni(x) x.erase(unique(all(x)),x.end())\n#define exist(x,y) (find(all(x),y)!=x.end())\n#define bcnt __builtin_popcount\n\n#define INF INT_MAX/3\n\nint n;\ndouble r[555];\ndouble dist[555];\n\nint main(){\n  cin>>n;\n  rep(i,n)cin>>r[i];\n  rep(i,n){\n    double maxd=2*r[i];\n    rep(j,i){\n      double dist2=dist[j]-r[j];\n      maxch(maxd,dist2+sqrt(pow(r[i]+r[j],2)-pow(r[i]-r[j],2))+r[i]);\n    }\n    dist[i]=maxd;\n  }\n  printf(\"%.10f\\n\", *max_element(dist,dist+n));\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\n\nclass Circle{\npublic:\n\tdouble x,y,r;\n\tbool leftflag;\n\tbool rightflag;\n};\n\ndouble square(double x)\n{\n\treturn x*x;\n}\n\nbool collision(Circle c1,Circle c2)\n{\n\tif(square(c2.x-c1.x)+square(c2.y-c1.y)>=square(c1.r+c2.r)){\n\t\treturn false;\n\t}else{\n\t\treturn true;\n\t}\n}\n\nint main()\n{\n\tint n;\n\n\tcin>>n;\n\n\tvector<Circle> circle(n);\n\n\trep(i,n){\n\t\tcin>>circle[i].r;\n\t\tcircle[i].x=circle[i].r;\n\t\tcircle[i].y=circle[i].r;\n\t}\n\n\trep(i,n){\n\t\trep(j,i){\n\t\t\tif(collision(circle[j],circle[i])==true){\n\t\t\t\tcircle[i].x=circle[j].x+2*sqrt(circle[i].r*circle[j].r);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int j=i+1;j<n;j++){\n\t\t\tcircle[j].x=max(circle[j].x,circle[i].x);\n\t\t}\n\t}\n\n\tdouble ans=0;\n\n\trep(i,n){\n\t\tans=max(ans,circle[i].x+circle[i].r);\n\t}\n\n\tprintf(\"%.8f\\n\",ans);\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[]={1,0,-1,0,1,-1,-1,1};\nconst int dy[]={0,1,0,-1,1,1,-1,-1};\nconst int INF = 1e9;\nconst long long LINF = 1e18;\nconst double EPS = 1e-8;\n#define pb push_back\n#define mk make_pair\n#define fr first\n#define sc second\n#define reps(i,j,k) for(int i = (j); i < (k); ++i)\n#define rep(i,j) reps(i,0,j)\n#define all(a) (a).begin(),(a).end()\n#define MOD 1000000007\ntypedef long long ll;\ntypedef pair<ll,ll> Pii;\ntypedef pair<Pii,int> P;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\n\ntemplate<class T>\nostream& operator<<(ostream &out, const vector<T> &v){\n\tout << \"{\";\n\trep(i,v.size()){\n\t\tout << v[i] <<\", \";\n\t}\n\treturn out << \"}\" << endl;\n}\n\nint N;\n\nint main() {\n\t\n\tcin >> N;\n\tvi a(N);\n\tvector<double> d(N);\n\tdouble ans = 0;\n\n\trep(i,N){\n\t\tcin >> a[i];\n\t\tdouble pos = a[i];\n\t\trep(j, i){\n\t\t\tdouble s = a[j] + a[i], t = a[j] - a[i];\n\t\t\tpos = max(pos, sqrt(s * s - t * t) + d[j]);\n\t\t}\n\t\td[i] = pos;\n\t\tans = max(ans, pos + a[i]);\n\t//\tcout << pos << endl;\n\t}\n\n\tprintf(\"%.6f\\n\", ans);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-8;\nconst double inf=1e8;\nint main(){\n\tint n;\n\tcin>>n;\n\tvd dp(n),in(n);\n\trep(i,n)cin>>in[i];\n\trep(i,n){\n\t\tdp[i]=in[i];\n\t\trep(j,i)dp[i]=max<double>(dp[i],dp[j]+2*sqrt(in[i]*in[j]));\n\t}\n\trep(i,n)dp[i]+=in[i];\n\trep(i,n-1)dp[i+1]=max<double>(dp[i],dp[i+1]);\n\tcout<<shosu(9)<<dp[n-1]<<endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcout << setiosflags(ios::fixed) << setprecision(10);\n\tint n;\n\tcin >> n;\n\tvector<double> r(n);\n\tfor(int i = 0; i < n; ++i){ cin >> r[i]; }\n\tvector<double> p(n);\n\tfor(int i = 1; i < n; ++i){\n\t\tdouble x = 0;\n\t\tfor(int j = 0; j < i; ++j){\n\t\t\tconst double y = abs(r[i] - r[j]);\n\t\t\tconst double z = r[i] + r[j];\n\t\t\tx = max(x, p[j] + sqrt(z * z - y * y));\n\t\t}\n\t\tp[i] = x;\n\t}\n\tdouble left = -r[0], right = r[0];\n\tfor(int i = 0; i < n; ++i){\n\t\tleft  = min(left,  p[i] - r[i]);\n\t\tright = max(right, p[i] + r[i]);\n\t}\n\tcout << right - left << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n\nusing namespace std;\n\n#define REP(i, n) for(int i=0; i<n; i++)\n\nint n;\ndouble r[500];\ndouble dp[500];\n\ndouble dis(double r1, double r2){\n    return sqrt(pow(r1+r2, 2)-pow(r1-r2, 2));\n}\n\nint main(){\n    cin >> n;\n\n    REP(i, n){\n        cin >> r[i];\n    }\n\n    int s = 0;\n    double sd = 0;\n    double tsd = 0;\n    REP(i, n){\n        if(i==0){\n            sd = r[0];\n            tsd = r[0];\n        } else {\n            if(dis(r[i-1], r[i])+tsd < r[i]){\n                s = i;\n                tsd = r[i];\n                sd = r[i];\n            } else {\n                tsd = dis(r[i-1], r[i]) + tsd;\n            }\n        }\n    }\n\n    int g = n-1;\n    double gd = 0;\n    double tgd = 0;\n    for(int i=n-1; i>=0; i--){\n        if(i == n-1){\n            gd = r[n-1];\n            tgd = r[n-1];\n        } else {\n            if(dis(r[i+1], r[i])+tgd < r[i]){\n                g = i;\n                tgd = r[i];\n                gd = r[i];\n            } else {\n                tgd = dis(r[i+1], r[i]) + tgd;\n            }\n        }\n    }\n\n    REP(i, g+1) dp[i] = 0;\n    for(int i = s; i < g; i++){\n        for(int j = s; j<=i; j++){\n            if(dp[i+1] < dp[j] + dis(r[j], r[i+1])){\n                dp[i+1] = dp[j] + dis(r[j], r[i+1]);\n            }\n        }\n    }\n    \n    double output = sd + gd + dp[g];\n    cout << fixed << setprecision(5) << output << endl;\n}javascript:void(0)"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\nusing namespace std;\n\nint r[502];\ndouble WID[502];\n\ndouble width(int r1, int r2)\n{\n\tif (r1 == 10001 && r2 == 10001) {\n\t\treturn 0.0;\n\t} else if (r1 == 10001) {\n\t\treturn (double)r2;\n\t} else if (r2 == 10001){\n\t\treturn (double)r1;\n\t} else\n\t\treturn 2 * sqrt((double)(r1 * r2));\n}\n\nint main()\n{\n\tint N;\n\tdouble add;\n\tscanf(\"%d\",&N);\n\tfor (int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\", &r[i]);\n\t}\n\tr[0] = r[N + 1] = 10001;\n\n\tWID[0] = 0;\n\tfor (int i = 1; i <= N + 1; i++) {\n\t\tWID[i] = WID[i - 1] + width(r[i - 1],r[i]);\n\t}\n\n\tfor (int i = 2; i <= N; i++) {\n\t\tfor (int j = 0; j + i <= N + 1; j++) {\n\t\t\tif ((add = width(r[j], r[j + i]) - (WID[j + i] - WID[j])) > 0.0) {\n\t\t\t\tfor (int k = j; k <= N + 1; k++) {\n\t\t\t\t\tWID[k] += add;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.5lf\\n\",WID[N + 1]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\n#define NUM ((sqrt(2) - 1) / 2)\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      if((C[i] * (double)NUM) >= C[i + 1])\n        ans += C[i];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n    }else if(C[i] < C[i + 1]){\n      if(C[i + 1] * (double)NUM >= C[i])\n        ans += C[i + 1];\n      else\n        ans += sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  double a = C[0];\n  double b = C[n - 1];\n  if(C[1] * (double)NUM >= C[0])\n    a = 0;\n  if(C[n - 2] * (double)NUM >= C[n - 1])\n    b = 0;\n  printf(\"%.8f\\n\", ans + a + b);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010];\n\ndouble x[1010],y[1010];\n\nbool cross(int m,double cx,double cy){\n\tfor(int i=0;i<m;++i){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(y[i]-cy)*(y[i]-cy);\n\t\td=sqrt(d);\n\t\tif(r[i]+r[m]>d) return true;\n\t}\n\t//cerr << cx << \" \" << cy << endl;\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=-1;\n\t\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i],cy=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\td=sqrt(d);\n\t\t\t\tcx=x[j]+d,cy=r[i];\n\t\t\t}\n\t\t\t// cerr << cx << \" \" << cy << endl; \n\t\t\tif(cx-r[i]<0) continue;\n\t\t\tif(cross(i,cx,cy)==true) continue;\n\t\t\tif(x[i]==-1||cx<x[i]) x[i]=cx,y[i]=cy;\n\t\t}\n\t\t// cerr << i << \" \" << x[i] << \" \" << y[i] << endl;\n\t}\n\tdouble ans=0.0;\n\tfor(int i=0;i<n;++i) ans=max(ans,x[i]+r[i]);\n\tcout.precision(10);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define F first\n#define S second\n#define pii pair<int, int>\n#define eb emplace_back\n#define all(v) v.begin(), v.end()\n#define rep(i, n) for (int i = 0; i < (n); ++i)\n#define rep3(i, l, n) for (int i = l; i < (n); ++i)\n#define sz(v) (int)v.size()\n#define inf (int)(1e9+7)\n#define abs(x) (x >= 0 ? x : -(x))\ntemplate<typename T1, typename T2> inline void chmin(T1 &a, T2 b) { if (a > b) a = b; }\ntemplate<typename T1, typename T2> inline void chmax(T1 &a, T2 b) { if (a < b) a = b; }\ntemplate<typename T> inline T gcd(T a, T b) { if (b == 0) return a; return gcd(b, a % b); }\n\n\n\n\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    \n    \n    \n    \n    int n;\n    cin >> n;\n    vector<int> a(n);\n    rep(i, n) cin >> a[i];\n    \n    double d[n]; // i番目の丸太の中心座標\n    d[0] = a[0];\n    int table[505] = {0};\n    \n    rep3(i, 1, n) {\n        // 手前のどれか(左の壁を含む)と接してる\n        // その最大値\n        d[i] = a[i];\n        int id = -1;\n        rep(j, i) {\n            int y = a[i] + a[j];\n            int x = abs(a[i] - a[j]);\n            double D = d[j] + sqrt(y * y - x * x);\n            if (d[i] < D) {\n                d[i] = D;\n                id = j;\n            }\n        }\n        rep3(j, id + 1, i) {\n            table[j] = 1;\n        }\n    }\n    // どれが右端と接してるか\n    rep(i, n) {\n        rep3(j, i + 1, n) {\n            int y = a[i] + a[j];\n            int x = abs(a[i] - a[j]);\n            double D = sqrt(y * y - x * x);\n            if (!(a[i] > a[j] + D)) break;\n            if (j == n - 1) {\n                rep3(k, i + 1, n) table[k] = 1;\n            }\n        }\n    }\n    \n    vector<int> b;\n    rep(i, n) if (table[i] == 0) b.eb(a[i]);\n    // rep(i, sz(b)) cout << b[i] << \" \"; cout << endl;\n    \n    double ans = b[0] + b[sz(b) - 1];\n    rep3(i, 1, sz(b)) {\n        int j = i - 1;\n        int y = b[i] + b[j];\n        int x = abs(b[i] - b[j]);\n        double D = sqrt(y * y - x * x);\n        ans += D;\n    }\n    cout << fixed << setprecision(5) << ans << '\\n';\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <stack>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdlib>\n#include <bitset>\n#include <tuple>\n#include <assert.h>\n#include <deque>\n#include <bitset>\n#include <iomanip>\n#include <limits>\n#include <chrono>\n#include <random>\n#include <array>\n#include <unordered_map>\n#include <functional>\n#include <complex>\n#include <numeric>\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n//constexpr long long MAX = 5100000;\nconstexpr long long INF = 1LL << 60;\nconstexpr int inf = 1000000007;\nconstexpr long long mod = 1000000007LL;\n//constexpr long long mod = 998244353LL;\nconst long double PI = acos((long double)(-1));\n\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef long double ld;\n\n\nusing Real = double;\nusing Point = complex<Real>;\nconst Real EPS = 1e-8;\n\nstruct Circle {\n    Point p;\n    Real r;\n    Circle() :p(Point(0, 0)), r(0) {}\n    Circle(Point _p, Real _r) :p(_p), r(_r) {}\n};\n\nusing Points = vector<Point>;\nusing Circles = vector<Circle>;\n\nbool eq(Real a, Real b) { return abs(a - b) < EPS; }\n\nint intersect(Circle c1, Circle c2) {\n    if (c1.r < c2.r) swap(c1, c2);\n    Real d = abs(c1.p - c2.p);\n    if (c1.r + c2.r < d) return 4;\n    if (eq(c1.r + c2.r, d)) return 3;\n    if (c1.r - c2.r < d) return 2;\n    if (eq(c1.r - c2.r, d)) return 1;\n    return 0;\n}\n\npair<Point, Point> crosspoint(Circle& c1, Circle& c2) {\n    Real d = abs(c1.p - c2.p);\n    Real a = acos((c1.r * c1.r + d * d - c2.r * c2.r) / (2 * c1.r * d));\n    Real t = arg(c2.p - c1.p);\n    Point p1 = c1.p + polar(c1.r, t + a);\n    Point p2 = c1.p + polar(c1.r, t - a);\n    return { p1, p2 };\n}\n\n\nReal scan() {\n    int x; scanf(\"%d\", &x);\n    return (Real)x;\n}\nvoid solve() {\n    int n; scanf(\"%d\", &n);\n    vector<Real> r(n); for (int i = 0; i < n; i++) r[i] = scan();\n    Circles c(n); c[0] = Circle(Point(r[0], r[0]), r[0]);\n    Real mx = r[0];\n    for (int i = 1; i < n; i++) {\n        Real lf = max(r[i], mx);\n        Real rg = inf;\n        for (int kkt = 0; kkt <= 89; kkt++) {\n            Real mid = (lf + rg) / 2.0;\n            bool ok = true;\n            Circle t(Point(mid, r[i]), r[i]);\n            for (int j = 0; j < i; j++) {\n                int f = intersect(c[j], t);\n                if (f < 3) { ok = false; break; }\n            }\n            if (ok) rg = mid;\n            else lf = mid;\n        }\n        chmax(mx, lf);\n        c[i] = Circle(Point(lf, r[i]), r[i]);\n    }\n    Real res = 0;\n    for (int i = 0; i < n; i++) chmax(res, c[i].p.real() + c[i].r);\n    cout << fixed << setprecision(12) << res << \"\\n\";\n}\n\nint main()\n{\n    /*\n    cin.tie(nullptr);\n    ios::sync_with_stdio(false);\n    */\n\n\tint kkt = 89;\n\twhile (kkt) {\n\t\tsolve();\n        break;\n\t}\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main(){\n  int N; cin >> N;\n  double ans = 0.;\n  vector<double> xs(N), rs(N);\n  for(int i=0;i<N;++i){\n\tcin >> rs[i];\n\txs[i] = rs[i];\n\tfor(int j=0;j<i;++j)\n\t  xs[i] = max(xs[i], xs[j] + 2*sqrt(rs[j]*rs[i]));\n\tans = max(ans, xs[i]+rs[i]);\n  }\n  cout << fixed << setprecision(9) << ans << endl;\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <deque>\n#include <tuple>\n#include <queue>\n#include <functional>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> buf(n),seq;\n\tfor (auto &a : buf)cin >> a;\n\tsort(buf.begin(), buf.end(),greater<int>());\n\tseq.reserve(n);\n\tseq.push_back(buf.front());\n\tdouble sum = 2*seq[0];\n\tfor (int i = 1; i < n;i++) {\n\t\tdouble w,x;\n\t\tx = max(0.0, buf[i] - seq[0] + sqrt(4 * buf[i] * seq[0]));\n\t\tw = x;\n\t\tint pos = 0;\n\t\tx = max(0.0, buf[i] - seq.back() + sqrt(4 * buf[i] * seq.back()));\n\t\tif (w > x) {\n\t\t\tpos = seq.size();\n\t\t\tw = x;\n\t\t}\n\t\tfor (int j = 0; j < seq.size()-1; j++) {\n\t\t\tx = max(0.0, sqrt(4 * buf[i] * seq[j])+sqrt(4 * buf[i] * seq[j+1])-sqrt(4*seq[j]*seq[j+1]));\n\t\t\tif (w > x) {\n\t\t\t\tpos = i;\n\t\t\t\tw = x;\n\t\t\t}\n\t\t}\n\t\tseq.insert(seq.begin()+pos, buf[i]);\n\t\tsum += w;\n\t}\n\tcout << setprecision(5)<<sum << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (a < y[i]) { return false; }\n\t\tif (dist < (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\tif (x[b] > a) { return false; }\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i]; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1500; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tlong double minx = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong double dis = y[i] + x[i];\n\t\tif (dis > minx) { minx = dis; }\n\t}\n\tcout << fixed << setprecision(14) << minx << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint n, a[500]; double x[500];\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n\tfor(int i = 0; i < n; i++) {\n\t\tx[i] = a[i];\n\t\tfor(int j = 0; j < i; j++) x[i] = max(x[i], x[j] + sqrt(pow(a[i] + a[j], 2) - pow(a[i] - a[j], 2)));\n\t}\n\tprintf(\"%.9f\\n\", x[n - 1] + a[n - 1]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "/* ---------- STL Libraries ---------- */\n\n// IO library\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <ios>\n#include <iostream>\n\n// algorithm library\n#include <algorithm>\n#include <cmath>\n#include <numeric>\n\n// container library\n#include <array>\n#include <bitset>\n#include <deque>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\n/* ---------- Namespace ---------- */\n\nusing namespace std;\n\n/* ---------- Type Abbreviation ---------- */\n\ntemplate <typename T>\nusing V = vector<T>;\ntemplate <typename T, typename U>\nusing P = pair<T, U>;\ntemplate <typename T>\nusing PQ = priority_queue<T>;\ntemplate <typename T>\nusing GPQ = priority_queue<T, vector<T>, greater<T>>;\n\nusing ll = long long;\n\n#define fst first\n#define snd second\n#define pb push_back\n#define mp make_pair\n#define mt make_tuple\n\n/* ---------- conversion ---------- */\n\n#define INT(c) static_cast<int>(c)\n#define CHAR(n) static_cast<char>(n)\n#define LL(n) static_cast<ll>(n)\n#define DOUBLE(n) static_cast<double>(n)\n\n/* ---------- container ---------- */\n\n#define ALL(v) (v).begin(), (v).end()\n#define SIZE(v) (LL((v).size()))\n\n#define FIND(v, k) (v).find(k) != (v).end()\n#define VFIND(v, k) find(ALL(v), k) != (v).end()\n\n#define gsort(b, e) sort(b, e, greater<decltype(*b)>())\n#define SORT(v) sort(ALL(v))\n#define GSORT(v) gsort(ALL(v))\n\n/* ---------- repetition ---------- */\n\n#define FOR(i, a, b) for (ll i = (a); i <= (b); ++i)\n#define RFOR(i, a, b) for (ll i = (a); i >= (b); --i)\n\n/* ----------- debug ---------- */\n\ntemplate <class T>\nostream& operator<<(ostream& os, vector<T> v) {\n    os << \"[\";\n    for (auto vv : v)\n        os << vv << \",\";\n    return os << \"]\";\n}\n\ntemplate <class T>\nostream& operator<<(ostream& os, set<T> v) {\n    os << \"[\";\n    for (auto vv : v)\n        os << vv << \",\";\n    return os << \"]\";\n}\n\ntemplate <class L, class R>\nostream& operator<<(ostream& os, pair<L, R> p) {\n    return os << \"(\" << p.fst << \",\" << p.snd << \")\";\n}\n\n/* ---------- Constants ---------- */\n\n// const ll MOD = 1e9 + 7;\n// const int INF = 1 << 25;\n// const ll INF = 1LL << 50;\n// const double PI = acos(-1);\n// const double EPS = 1e-10;\n// const ll dx[4] = {0, -1, 1, 0};\n// const ll dy[4] = {-1, 0, 0, 1};\n\n/* ---------- Short Functions ---------- */\n\ntemplate <typename T>\nT sq(T a) {\n    return a * a;\n}\n\ntemplate <typename T>\nT gcd(T a, T b) {\n    if (a > b) return gcd(b, a);\n    return a == 0 ? b : gcd(b % a, a);\n}\n\ntemplate <typename T, typename U>\nT mypow(T b, U n) {\n    if (n == 0) return 1;\n    if (n == 1) return b /* % MOD */;\n    if (n % 2 == 0) {\n        return mypow(sq(b) /* % MOD */, n / 2);\n    } else {\n        return mypow(b, n - 1) * b /* % MOD */;\n    }\n}\n\nll pcnt(ll b) {\n    return __builtin_popcountll(b);\n}\n\n/* v-v-v-v-v-v-v-v-v Main Part v-v-v-v-v-v-v-v-v */\n\n// #define DEBUG\n// #define DEBUG_CASE_NUM 5\n\nvoid solve() {\n    ll N;\n    cin >> N;\n\n    V<ll> r(N);\n    FOR(i, 0, N - 1) {\n        cin >> r[i];\n    }\n\n    V<double> x(N);\n\n    double ans = 0;\n    FOR(i, 0, N - 1) {\n        x[i] = r[i];\n        FOR(j, 0, i - 1) {\n            x[i] = max(x[i], x[j] + sqrt(sq(r[i] + r[j]) - sq(r[i] - r[j])));\n        }\n\n        ans = max(ans, x[i] + r[i]);\n    }\n\n    // cout << x << endl;\n    cout << ans << endl;\n    return;\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    cout << fixed << setprecision(10);\n\n#ifdef DEBUG\n    freopen(\"input.txt\", \"r\", stdin);\n    FOR(_, 1, DEBUG_CASE_NUM) {\n        solve();\n        cout << \"++++++++++\" << endl;\n    }\n#else\n    solve();\n#endif\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <deque>\n#include <tuple>\n#include <queue>\n#include <functional>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> buf(n),seq;\n\tfor (auto &a : buf)cin >> a;\n\tsort(buf.begin(), buf.end(),greater<int>());\n\tseq.reserve(n);\n\tseq.push_back(buf.front());\n\tdouble sum = 2*seq[0];\n\tfor (int i = 1; i < n;i++) {\n\t\tdouble w,x;\n\t\tx = max(0.0, buf[i] - seq[0] + sqrt(4 * buf[i] * seq[0]));\n\t\tw = x;\n\t\tint pos = 0;\n\t\tx = max(0.0, buf[i] - seq.back() + sqrt(4 * buf[i] * seq.back()));\n\t\tif (w > x) {\n\t\t\tpos = seq.size();\n\t\t\tw = x;\n\t\t}\n\t\tfor (int j = 0; j < seq.size()-1; j++) {\n\t\t\tx = max(0.0, sqrt(4 * buf[i] * seq[j])+sqrt(4 * buf[i] * seq[j+1])-sqrt(4*seq[j]*seq[j+1]));\n\t\t\tif (w > x) {\n\t\t\t\tpos = i;\n\t\t\t\tw = x;\n\t\t\t}\n\t\t}\n\t\tseq.insert(seq.begin()+pos, buf[i]);\n\t\tsum += w;\n\t}\n\tcout << setprecision(14)<<sum << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long   // <-----!!!!!!!!!!!!!!!!!!!\n\n#define rep(i,n) for (int i=0;i<(n);i++)\n#define rep2(i,a,b) for (int i=(a);i<(b);i++)\n#define rrep(i,n) for (int i=(n)-1;i>=0;i--)\n#define rrep2(i,a,b) for (int i=(b)-1;i>=(a);i--)\n#define all(a) (a).begin(),(a).end()\n\ntypedef long long ll;\n// typedef pair<int, int> P;\ntypedef tuple<int, int, int> TUPLE;\ntypedef vector<int> V;\ntypedef vector<V> VV;\ntypedef vector<VV> VVV;\n\ntypedef complex<double> P;\nconst double EPS = 1e-10;\nconst double INF = 1e12;\n\nsigned main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(0);\n\n    int N;\n    cin >> N;\n    vector<double> r(N);\n    rep(i, N) cin >> r[i];\n\n    vector<double> p;\n    p.emplace_back(0);\n    rep2(i, 1, N) {\n        double l = -INF;\n        rep(j, i) {\n            double d = 2 * sqrt(r[i] * r[j]);\n            double x = p[j] + d;\n            l = max(l, x);\n        }\n        p.emplace_back(l);\n    }\n\n    double L = INF, R = -INF;\n    rep(i, N) {\n        L = min(L, p[i] - r[i]);\n        R = max(R, p[i] + r[i]);\n    }\n\n    printf(\"%.10f\\n\", R - L);\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sstream>\n#include <map>\n#include <set>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nstruct vertex{\n    int X;\n    int Y;\n};\n\nint\tgcd(int\ta, int b){\n    while( b ){\n        int\tm = a % b;\n        a = b;\n        b = m;\n    }\n    return a;\n}\n\nint\tlcm(int a, int\tb){\n    return (a*b)/gcd(a,b);\n}\n\nint isPrim(int a){\n    if(a==1){\n        return 0;\n    }\n    for(int i=2;i<=(a+1)/2;i++){\n        if(a%i==0){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nvoid f(int A,int B){\n    \n}\n\nint main(int argc, const char * argv[])\n{\n    //std::ios::sync_with_stdio(false);\n    //scanf(\"%s\",S);\n    //scanf(\"%d\",&N);\n    //getline(cin, target);\n    //cin >> x >> y;\n    //????????????\n\n    int N;\n    cin >> N;\n    \n    vector<double> vect1;\n    vect1.clear();\n    \n    for(int i=0;i<N;i++){\n        int tmp;\n        cin >> tmp;\n        vect1.push_back(tmp);\n    }\n    \n    if(N==1){\n        printf(\"%.8f\",vect1[0]*2);\n        return 0;\n    }\n    \n    vector<double> vect2;\n    vect2.clear();\n    int flag=1;\n    while(flag==1){\n        flag=0;\n        for(int i=0;i<vect1.size()-1;i++){\n            double p2=pow(vect1[i]+vect1[i+1],2)-pow(vect1[i]-vect1[i+1],2);\n            double sq=sqrt(abs(p2));\n            \n            if(i==0){\n                if(vect1[i]>=vect1[i+1]){\n                    vect2.push_back(vect1[i]);\n                }else{\n                    if(sq>vect1[i+1]){\n                        vect2.push_back(vect1[i]);\n                    }else{\n                        flag=1;\n                    }\n                }\n            }else if(i==vect1.size()-2){\n                \n            }\n            \n            if(vect1[i]>=vect1[i+1]){\n                if(sq>=vect1[i]){\n                    vect2.push_back(vect1[i+1]);\n                }else{\n                    flag=1;\n                }\n            }else{\n                vect2.push_back(vect1[i+1]);\n            }\n        }\n        vect1.clear();\n        vect1=vect2;\n        vect2.clear();\n    }\n    \n    \n    double wa=0;\n\n    for(int i=0;i<vect1.size()-1;i++){\n\n        double p2=pow(vect1[i]+vect1[i+1],2)-pow(vect1[i]-vect1[i+1],2);\n        double sq=sqrt(abs(p2));\n        \n        wa=wa+sq;\n\n    }\n    wa=wa+vect1[0]+vect1[vect1.size()-1];\n\n    printf(\"%.8f\",wa);\n    //cout << wa << endl;\n    \n    //???????????§\n    //cout << \"ans\" << endl;????????????\n    //printf(\"%.0f\\n\",ans);//?°???°?????\\?????¨?????????\n    //printf(\"%.7f\",p);\n    //printf(\"%f\\n\",pow(2,ans.size()));\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\ndouble calc(double ra, double rb, double xb){\n  double h = abs(ra-rb);\n  double z = ra+rb;\n  double dif = sqrt(z*z-h*h);\n\n  return dif+xb;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  vector<double> r(n);\n  for(int i=0;i<n;i++)cin >> r[i];\n\n  vector<double> x(n);\n  x[0] = r[0];\n  for(int i=0;i<n;i++){\n    double tx = 0;\n    for(int j=0;j<i;j++){\n      tx = max(tx, calc(r[i], r[j], x[j]));\n    }\n    x[i] = tx;\n  }\n\n  double left = 0, right = 0;\n  for(int i=0;i<n;i++){\n    left = min(left, x[i]-r[i]);\n    right = max(right, x[i]+r[i]);\n  }\n\n  cout << fixed << setprecision(10) << right-left << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\n#define REP(i,n) for(ll i=0;i<n;++i)\n#define RREP(i,n) for(ll i=n-1;i>=0;--i)\n#define FOR(i,m,n) for(ll i=m;i<n;++i)\n#define RFOR(i,m,n) for(ll i=n-1;i>=m;--i)\n#define ALL(v) (v).begin(),(v).end()\n#define PB(a) push_back(a)\n#define UNIQUE(v) v.erase(unique(ALL(v)),v.end());\n#define DUMP(v) REP(aa, (v).size()) { cout << v[a]; if (a != v.size() - 1)cout << \" \"; else cout << endl; }\n#define INF 1000000001ll\n#define MOD 1000000007ll\n#define EPS 1e-9\n\nconst int dx[8] = { 1,1,0,-1,-1,-1,0,1 };\nconst int dy[8] = { 0,1,1,1,0,-1,-1,-1 };\n\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nll max(ll a, int b) { return max(a, ll(b)); }\nll max(int a, ll b) { return max(ll(a), b); }\nll min(ll a, int b) { return min(a, ll(b)); }\nll min(int a, ll b) { return min(ll(a), b); }\n///(?´????????`)(?´????????`)(?´????????`)(?´????????`)(?´????????`)(?´????????`)///\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tint n;\n\tcin >> n;\n\tvi v(n);\n\tREP(i, n)cin >> v[i];\n\tvector<double> ans(n);\n\tREP(i, n) {\n\t\tdouble tmp = v[i];\n\t\tREP(j, i) {\n\t\t\ttmp = max(tmp, 2 * sqrt(v[i] * v[j])+ans[j]);\n\t\t}\n\t\tans[i] = tmp;\n\t}\n\tdouble ret = 0;\n\tREP(i, n)ret = max(ret, ans[i] + v[i]);\n\tcout << fixed << setprecision(12) <<ret<< endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n,t;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    //freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    ans=0;\n    cin>>n;\n    for(int i=0; i<n; i++)\n    {\n        cin>>r[i];\n    }\n    if(n==1)\n    {\n        ans=r[0]*2;\n        printf(\"%.8f\\n\",ans);\n        return 0;\n    }\n    for(int i=0; i<n-1; i++)\n    {\n        minn=min(r[i],r[i+1]);\n        maxx=max(r[i],r[i+1]);\n        //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n        if((sqrt((minn*2)*(minn*2)*2)+maxx)<=sqrt(maxx*maxx*2))\n        {\n            ans+=maxx;\n            //cout<<maxx<<endl;\n        }\n        else\n        {\n            if(i==0)\n            {\n                ans+=r[i];\n            }\n            if(i==n-2)\n            {\n                ans+=r[i+1];\n            }\n            ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n            haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n        }\n    }\n    printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<(n);i++)\nusing namespace std;\n\nint main() {\n\tint n; scanf(\"%d\", &n);\n\tdouble ans = 0, r = 0;\n\trep(i, n) {\n\t\tdouble d, l; scanf(\"%lf\", &d);\n\t\tif (i == 0) {\n\t\t\tans = d * 2;\n\t\t\tr = d; continue;\n\t\t}\n\t\tl = sqrt((d + r)*(d + r) - (d - r)*(d - r));\n\t\tif (l < d) {\n\t\t\tans += -r * 2 + d * 2;\n\t\t\tr = d;\n\t\t}\n\t\telse if (l < r);\n\t\telse {\n\t\t\tans += l - r + d;\n\t\t\tr = d;\n\t\t}\n\t}\n\tprintf(\"%.10lf\\n\", ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<iomanip>\nusing namespace std;\n// Brute Force Attack!\nint main(int argc, char *argv[])\n{\n  int n;\n  cin >> n;\n  vector<int> rs;\n  double d = 0;\n  for(int i = 0; i < n; i++) {\n    int r;\n    cin >> r;\n    rs.push_back(r);\n  }\n  // locating greedily!\n  vector<double> xs;\n  double xmax = 0;\n  auto touching = [&xs,&rs](int j, int i) {\n    double xj = xs[j];\n    int rj = rs[j];\n    int ri = rs[i];\n    // xi^2 + (ri - rj)^2 = (ri + rj)^2\n    // xi = \\sqrt{ (ri + rj)^2 - (ri - rj)^2 }\n    double xi = 2 * sqrt( ri * rj );\n    return xi + xj;\n  };\n  for(int i = 0; i < n; i++) {\n    double x = rs[i]; // touching the wall\n    for(int j = i - 1; j >= 0; j--) {\n      double xx = touching(j, i);\n      if(xx > x) x = xx;\n    }\n    xs.push_back(x);\n    xmax = max(xmax, x + rs[i]);\n  }\n  cout << setprecision(16) << xmax << endl;\n  \n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010];\n\ndouble x[1010],y[1010];\n\nconst double eps=1e-6;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\tfor(int i=0;i<m;++i){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(y[i]-cy)*(y[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\t//cerr << cx << \" \" << cy << endl;\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i],cy=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\td=sqrt(d);\n\t\t\t\tcx=x[j]+d,cy=r[i];\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\tif(i>0&&x[i-1]>=cx) continue;\n\t\t\tif(cross(i,cx,cy)==true) continue;\n\t\t\tif(cx<x[i]) x[i]=cx,y[i]=cy;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << y[i] << endl;\n\t}\n\tdouble ans=0.0;\n\tfor(int i=0;i<n;++i) ans=max(ans,x[i]+r[i]);\n\tcout.precision(10);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef pair<double,double> P;\n\ndouble calc(double x, double l, double _l) {\n    double ret = x + sqrt((l + _l) * (l + _l) - (l - _l) * (l - _l));\n    return ret;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    vector<double> v(n);\n    for (auto &i : v) cin >> i;\n\n    vector<double> p;\n    p.push_back(0.);\n    for (int i = 1; i < n; i++) {\n        double x = 0.;\n        for (int j = 0; j < i; j++) {\n            x = max(x, calc(p[j], v[i], v[j]));\n        }\n        p.push_back(x);\n    }\n\n    double l = 0., r = 0.;\n    for (int i = 0; i < n; i++) {\n        l = min(l, p[i] - v[i]);\n        r = max(r, p[i] + v[i]);\n    }\n\n    printf(\"%.9f\\n\", r - l);\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<string>\n#include<map>\n#include<set>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#include<list>\nusing namespace std;\nconst int MAXN=505;\ndouble dis[MAXN];\ndouble r[MAXN];\nint main()\n{\n\t\n\tcin.sync_with_stdio(false);\n\tint n;\n\tcin>>n;\n\tfor (int i=0; i<n; ++i) {\n\t\tcin>>r[i];\n\t\tif (i==0) {\n\t\t\tdis[0]=2*r[i];\n\t\t}\n\t\telse {\n\t\t\tdouble tmp1=0.0;\n\t\t\tdis[i]=0.0;\n\t\t\tfor (int j=i; j>0; --j) {\n\t\t\t\ttmp1=0.0;\n\t\t\t\ttmp1+=(2*sqrt(r[i]*r[j-1])+r[i]>r[j-1]? 2*sqrt(r[i]*r[j-1])+r[i]-r[j-1]:0);\n//\t\t\t\tcout<<\"---tmp1: \"<<tmp1<<endl;\n\t\t\t\ttmp1+=(r[i]+r[j-1]-2*sqrt(r[i]*r[j-1])>dis[j-1]? r[i]+r[j-1]-2*sqrt(r[i]*r[j-1])-dis[j-1]:0);\t\n//\t\t\t\tcout<<\"tmp1: \"<<tmp1<<endl;\n\t\t\t\tif (dis[j-1]+tmp1>dis[i]) dis[i]=dis[j-1]+tmp1;\t\t\t\n\t\t\t}\n\t\t}\n\t}\n//\tfor (int i=0; i<n; ++i) cout<<dis[i]<<endl;\n\tprintf(\"%.8llf\\n\", dis[n-1]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <memory.h>\n#include <math.h>\n#include <assert.h>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <string>\n#include <algorithm>\n#include <iostream>\n#include <functional>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> Pi;\n#define Fi first\n#define Se second\n#define pb(x) push_back(x)\n#define sz(x) (int)x.size()\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(x) x.begin(),x.end()\n\nint n, p[510];\ndouble d[510];\n\nvoid solve(int tc){\n\tscanf(\"%d\", &n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\", p+i);\n\tfor(int i=1;i<=n;i++){\n\t\td[i] = p[i];\n\t\tfor(int j=i-1;j;j--){\n\t\t\td[i] = max(d[i], d[j] + 2*sqrt(p[i] * p[j]));\n\t\t}\n\t}\n\tdouble ans = 0;\n\tfor(int i=1;i<=n;i++)ans = max(ans, d[i] + p[i]);\n\tprintf(\"%.8f\\n\", ans);\n}\n\nint main(){\n\tint Tc = 1;// scanf(\"%d\",&Tc);\n\tfor(int i=1;i<=Tc;i++){\n\t\tsolve(i);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  double a, b;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      double x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n      if(C[i] > x)\n        ans += C[i];\n      else\n        ans += x;\n      if(i == 0)\n        a = x;\n      if(i == n - 2)\n        b = x;\n    }else if(C[i] < C[i + 1]){\n      double x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n      if(C[i + 1] > x)\n        ans += C[i + 1];\n      else\n        ans += x;\n      if(i == 0)\n        a = x;\n      if(i == n - 2)\n        b = x;\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  if(a > C[1])\n    ans += C[0];\n  if(b > C[n - 2])\n    ans += C[n - 1];\n  printf(\"%.8f\\n\", ans);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ndouble getDis(double R,double r){return sqrt((R+r)*(R+r) - (R-r)*(R-r));}\n\nint main(){\n  int n;\n  cin>>n;\n  double A[501],x[501];\n  for(int i=0;i<n;i++)cin>>A[i],x[i] = A[i];\n\n  for(int i=1;i<n;i++)\n    for(int j=0;j<i;j++){\n      double R = A[i];\n      double r = A[j];\n      double d = getDis(R,r);\n      x[i] = max(x[i],x[j]+d);\n    }\n  \n  double ans = 0;\n  for(int i=0;i<n;i++) ans=max(ans,x[i]+A[i]);\n  printf(\"%.10f\\n\",ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint main(){\n    int n;\n    cin>>n;\n    vector<double> R(n),X(n);\n    for(int i=0;i<n;i++){\n        cin>>R[i];\n        X[i]=R[i];\n        for(int j=0;j<i;j++){\n            X[i]=max(X[i],X[j]+2*sqrt(R[i]*R[j]));\n        }\n        // cout<<X[i]<<endl;\n    }\n    double ans = 0;\n    for(int i=0;i<n;i++) ans = max(ans,X[i]+R[i]);\n    cout<<fixed;\n    cout.precision(8);\n    cout<<ans<<endl;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cmath>\n\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n\nusing namespace::std;\n\n#define ls t<<1\n#define rs (t<<1)|1\n#define sqr(x) ((x)*(x))\n\nconst int inf = 0x3f3f3f3f;\nconst double eps = 1e-6;\nconst int maxn = 500 + 10;\nconst int maxm = 1e4 + 10;\nconst int mod = 1e9 + 7;\nint n;\ndouble d[maxn], r[maxn];\n\nint main()\n{\n\twhile (~scanf(\"%d\", &n))\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tscanf(\"%lf\", &r[i]);\n\t\tmemset(d, 0, sizeof(d));\n\t\td[0] = r[0];\n\t\tfor (int i = 1; i < n; i++)\n\t\t{\n\t\t\tfor (int j = i - 1; j >= 0; j--)\n\t\t\t\td[i] = max(d[j] + 2 * sqrt(r[i] * r[j]), d[i]);\n\t\t\td[i] = max(r[i], d[i]);\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tans = max(ans, r[i] + d[i]);\n\t\tprintf(\"%.8lf\\n\", ans);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define each(i, c) for (auto& i : c)\n#define unless(cond) if (!(cond))\n\nusing namespace std;\n\ntypedef long long int lli;\ntypedef unsigned long long ull;\ntypedef complex<double> point;\n\ntemplate<typename P, typename Q>\nostream& operator << (ostream& os, pair<P, Q> p)\n{\n  os << \"(\" << p.first << \",\" << p.second << \")\";\n  return os;\n}\n\ntypedef complex<double> P;\n\nstruct C {\n  P o;\n  double r;\n  C() {}\n  C(P o, double r) : o(o), r(r) {}\n};\n\nconst double eps = 1e-8;\nconst double pi = acos(-1);\n\nbool equals(double a, double b) { return abs(a - b) < eps; }\n\nint isIntersect(C a, C b) {\n  double x = a.o.real() - b.o.real();\n  double y = a.o.imag() - b.o.imag();\n  double s = a.r + b.r;\n  double d = x*x + y*y;\n  s *= s;\n  if(equals(d, s)) return 1;\n  if(d > s) return 0;\n  double r = abs(a.r - b.r);\n  r *= r;\n  if(equals(d, r)) return -1;\n  if(d > r) return 2;\n  return -2;\n}\n\nint main(int argc, char *argv[])\n{\n  int n;\n  while (cin >> n) {\n    int r[n];\n    for (int i = 0; i < n; ++i) {\n      cin >> r[i];\n    }\n    double x[n];\n    x[0] = r[0];\n    for (int i = 1; i < n; ++i) {\n      x[i] = -1e128;\n      for (int j = 0; j < i; ++j) {\n        double small = x[j];\n        double large = 1e128;\n        for (int loop = 1000; loop--; ) {\n          double mid = (small + large) / 2.0;\n          C a(P(x[j], r[j]), r[j]);\n          C b(P(mid,  r[i]), r[i]);\n          if (isIntersect(a, b)) small = mid;\n          else large = mid;\n        }\n        x[i] = max(x[i], large);\n      }\n    }\n\n    // for (int i = 0; i < n; ++i) cout << x[i] << ' '; cout << endl;\n    printf(\"%.10lf\\n\", x[n - 1] + r[n - 1]);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (a < x[i]) { return false; }\n\t\tif (dist < (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\tif (x[b] > a) { return false; }\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i]; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1000; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tlong double minx = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong double dis = y[i] + x[i];\n\t\tif (dis > minx) { minx = dis; }\n\t}\n\tcout << fixed << setprecision(14) << minx << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#define __USE_MINGW_ANSI_STDIO 0\n#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n// #define int ll\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<ll> VL;\ntypedef vector<VL> VVL;\ntypedef pair<int, int> PII;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define ALL(x) x.begin(), x.end()\n#define IN(a, b, x) (a<=x&&x<b)\n#define MP make_pair\n#define PB push_back\n#ifdef int\nconst ll INF = (1LL<<60);\n#else\nconst int INF = (1LL<<30);\n#endif\nconst double PI = 3.14159265359;\nconst double EPS = 1e-12;\nconst int MOD = 1000000007;\n\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\n\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\n\nint r[505];\ndouble dp[505];\nsigned main(void)\n{\n  int n;\n  cin >> n;\n  REP(i, n) cin >> r[i];\n\n  REP(i, n) {\n    dp[i] = r[i];\n    REP(j, i) {\n      chmax(dp[i], dp[j] + 2*sqrt(r[i]*r[j]));\n    }\n  }\n  // REP(i, n) cout << dp[i] << \" \"; cout << endl;\n  double ret = 0;\n  REP(i, n) chmax(ret, dp[i]+r[i]);\n  cout << fixed << setprecision(15) << ret << endl;\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\n#include <math.h>\n\nusing namespace std;\n\nint n;\ndouble r[505];\ndouble p[505];\n\nint main(void)\n{\n  cin >> n;\n  for(int i = 1; i <= n; i++) cin >> r[i];\n\n  p[1] = r[1];\n  for(int i = 2; i <= n; i++){\n    p[i] = r[i];\n    for(int j = 1; j < i; j++){\n      double r1 = r[i], r2 = r[j];\n      if(r1 > r2) swap(r1, r2);\n      double l = sqrt( (r1+r2)*(r1+r2)-(r2-r1)*(r2-r1) );\n      p[i] = max(p[i], p[j]+l);\n    }\n  }\n  double ans = 0;\n  for(int i = 1; i <= n; i++) ans = max(ans, p[i]+r[i]);\n  printf(\"%.11f\\n\", ans);\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint n, r[500]; long double x[501];\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) scanf(\"%d\", &r[i]);\n    for(int i = 0; i < n; i++) {\n        x[i] = r[i];\n        for(int j = 0; j < i; j++) {\n            long double dist = sqrtl((r[j] + r[i]) * (r[j] + r[i]) - (r[j] - r[i]) * (r[j] - r[i]));\n            x[i] = max(x[i], x[j] + dist);\n        }\n    }\n    long double ret = 0.0;\n    for(int i = 0; i < n; i++) {\n        ret = max(ret, x[i] + r[i]);\n    }\n    printf(\"%.9Lf\\n\", ret);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\ntypedef pair<int,int> pp;\nint n,t;\ndouble r[507],ans=0,minn,maxx,haha;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    //freopen(\"in.txt\", \"r\", stdin);\n#endif\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    ans=0;\n        cin>>n;\n        for(int i=0; i<n; i++)\n        {\n            cin>>r[i];\n        }\n        if(n==1)\n        {\n            ans=r[0]*2;\n            printf(\"%.8f\\n\",ans);\n            return 0;\n        }\n        for(int i=0; i<n-1; i++)\n        {\n            minn=min(r[i],r[i+1]);\n            maxx=max(r[i],r[i+1]);\n            //cout<<(minn*2+maxx)<<' '<<sqrt(maxx*maxx*2)<<endl;\n            if((sqrt(minn*minn*2)+minn+maxx)<=sqrt(maxx*maxx*2))\n            {\n                ans+=maxx;\n                if((i==0&&maxx==r[0])||(i==n-2&&maxx==r[n-1])) ans+=maxx;\n                //cout<<maxx<<endl;\n            }\n            else\n            {\n                if(i==0)\n                {\n                    ans+=r[i];\n                }\n                if(i==n-2)\n                {\n                    ans+=r[i+1];\n                }\n                ans=ans+sqrt((maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn));\n                haha=(maxx+minn)*(maxx+minn)-(maxx-minn)*(maxx-minn);\n            }\n        }\n        printf(\"%.8f\\n\",ans);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#define _USE_MATH_DEFINES\n#include <cmath>\n#include <climits>\n#include <cstdlib>\n#include <cstring>\n#include <cfloat>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <cctype>\n#include <cstdio>\n#include <cassert>\nusing namespace std;\n\n#define EPS 1e-12\n#define ull unsigned long long\n#define ll long long\n#define VI vector<ll>\n#define PII pair<ll, ll> \n#define VVI vector<vector<ll> >\n#define REP(i,n) for(int i=0,_n=(n);(i)<(int)_n;++i)\n#define RANGE(i,a,b) for(int i=(int)a,_b=(int)(b);(i)<_b;++i)\n#define RANGE_R(i,a,b) for(int i=(int)b-1,_a=(int)(a);(i)>=_a;--i)\n#define MIN_UPDATE(target, value) target = min(target, value)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define ALLR(c) (c).rbegin(), (c).rend()\n#define PB push_back\n#define MP(a, b) make_pair(a, b)\n#define POPCOUNT(v) __builtin_popcountll((ll)(v))\n#define IN_RANGE(v, a, b) ((a)<=(v) && (v)<(b))\n#define CLEAR(table, v) memset(table, v, sizeof(table));\n#define PRINT1(table, D0) REP(d0, D0) cout<<table[d0]<<\" \"; cout<<\"\\n\";\n#define PRINT2(table, D0, D1) REP(d0, D0) { REP(d1, D1) cout<<table[d0][d1]<<\" \"; cout<<\"\\n\"; }\n#define PRINT3(table, D0, D1, D2) REP(d0, D0) { REP(d1, D1) { REP(d2, D2) cout<<table[d0][d1][d2]<<\" \"; cout<<\"\\n\"; } cout<<\"\\n\"; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const map<T0, T1>& v) { for( typename map<T0, T1>::const_iterator p = v.begin(); p!=v.end(); p++ ){os << p->first << \": \" << p->second << \" \";} return os; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const pair<T0, T1>& v) { os << v.first << \": \" << v.second << \" \"; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<T>& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << \" \"; } return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const set<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const deque<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<vector<T> >& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << endl; } return os; }\n\n\n/*\n\n*/\nint main() {\n\tll N;\n\tcin>>N;\n\tVI w(N);\n\tREP(i, N) cin>>w[i];\n\tdouble ans=w[0]+w[N-1];\n\tREP(i, N-1) {\n\t\tans += sqrt(pow(w[i]+w[i+1], 2) - pow(fabs(w[i]-w[i+1]), 2));\n\t}\n\tprintf(\"%.10f\\n\", ans);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include <sys/timeb.h>\n#include <fstream>\n\nusing namespace std;\n\n#define repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define replrev(i,a,b) for(int i=(int)(b)-1;i>=(int)(a);i--)\n#define reprev(i,n) replrev(i,0,n)\n#define repi(itr,ds) for(auto itr=ds.begin();itr!=ds.end();itr++)\n#define all(a) a.begin(),a.end()\n#define mp make_pair\n#define mt make_tuple\n#define INF 2000000000\n#define INFL 1000000000000000000LL\n#define EPS (1e-10)\n#define MOD 1000000007\n#define PI 3.1415926536\n#define RMAX 4294967295\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<bool> vb;\ntypedef vector<char> vc;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<P> vP;\ntypedef vector<vector<int> > vvi;\ntypedef vector<vector<bool> > vvb;\ntypedef vector<vector<ll> > vvll;\ntypedef vector<vector<char> > vvc;\ntypedef vector<vector<string> > vvs;\ntypedef vector<vector<double> > vvd;\ntypedef vector<vector<P> > vvP;\ntypedef priority_queue<int, vector<int>, greater<int> > pqli;\ntypedef priority_queue<ll, vector<ll>, greater<ll> > pqlll;\ntypedef priority_queue<P, vector<P>, greater<P> > pqlP;\ntypedef pair<int, pair<int, int> > Edge;\ntypedef vector<Edge> vE;\ntypedef priority_queue<Edge, vector<Edge>, greater<Edge> > pqlE;\n\n\nint main() {\n\tint N;\n\tcin >> N;\n\tvd r(N);\n\trep(i, N)cin >> r[i];\n\tvd pos(N, 0);\n\tdouble left = -r[0], right = r[0];\n\trepl(i, 1, N) {\n\t\trep(j, i) {\n\t\t\tpos[i] = max(pos[i], sqrt(pow(r[i] + r[j], 2) - pow(abs(r[i] - r[j]), 2)) + pos[j]);\n\t\t}\n\t\tleft = min(left, pos[i] - r[i]);\n\t\tright = max(right, pos[i] + r[i]);\n\t}\n\tcout << fixed << setprecision(14) << right - left << endl;\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ndouble dist(double x, double y, double r) {\n    return x + sqrt(pow(y + r, 2.0) - pow(y - r, 2.0));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    vector<double> v(n);\n    for (auto &i : v) {cin >> i;}\n\n    vector<double> x(n, 0.0);\n    for (int i = 1; i < n; i++) {\n        for (int j = 0; j < i; j++) {\n            x[i] = max(x[i], dist(x[j], v[j], v[i]));\n        }\n    }\n\n    double l = 0, r = 0;\n    for (int i = 0; i < n; i++) {\n        l = min(l, x[i] - v[i]);\n        r = max(r, x[i] + v[i]);\n    }\n\n    printf(\"%.8f\\n\", (r - l));\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef complex<double> P;\ntypedef pair<int,int> pii;\n#define REP(i,n) for(ll i=0;i<n;++i)\n#define REPR(i,n) for(ll i=1;i<n;++i)\n#define FOR(i,a,b) for(ll i=a;i<b;++i)\n\n#define DEBUG(x) cout<<#x<<\": \"<<x<<endl\n#define DEBUG_VEC(v) cout<<#v<<\":\";REP(i,v.size())cout<<\" \"<<v[i];cout<<endl\n#define ALL(a) (a).begin(),(a).end()\n\n#define MOD (ll)(1e9+7)\n#define ADD(a,b) a=((a)+(b))%MOD\n#define FIX(a) ((a)%MOD+MOD)%MOD\n\nint main(){\n  int n;\n  cin >> n;\n  int r[n];\n  REP(i,n)cin>>r[i];\n  double pos[n];\n  REP(i,n){\n    pos[i]=r[i];\n    REP(j,i){\n      pos[i] = max(pos[i],pos[j]+sqrt( (double)(4*r[i]*r[j]) ));\n    }\n  }\n  double mx = 0;\n  REP(i,n) mx = max(mx,pos[i]+r[i]);\n  cout.precision(15);\n  cout << fixed << mx << endl;\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define minimize(a, x) a = std::min(a, x)\n#define maximize(a, x) a = std::max(a, x)\n\ntypedef long long ll;\nll const Inf = 1LL<<60;\n\nint N;\n\nint main() {\n  cin >> N;\n  deque<long double> radius(N);\n  rep(i, N) {\n    cin >> radius[i];\n  }\n\n  long double startx = radius[0];\n  while(radius.size() > 1) {\n    bool ok = 0;\n    rep(i, radius.size()) {\n      long double len = (radius[0] + radius[i]); len *= len;\n      len -= abs(radius[0] - radius[i]) * abs(radius[0] - radius[i]);\n      len = sqrt(len);\n\n      if(len < radius[i]) {\n        startx = radius[i];\n        radius.pop_front(); N = radius.size();\n        ok = 1;\n      }\n    }\n    if(!ok) { break; }\n  }\n\n  if(N == 1) {\n    printf(\"%.10Lf\\n\", radius[0] * 2.0);\n    exit(0);\n  }\n\n//  printf(\": %.10Lf\\n\", startx);\n\n  vector<long double> positions;\n  vector<int> lasts;\n//  int lastI = -1;\n  rep(i, N) {\n    long double x = 0.0;\n    rep(j, i) {\n      long double px = positions.back();\n      long double s = radius[i] + radius[j]; s *= s;\n      long double h = abs(radius[i] - radius[j]); h *= h;\n      long double w = sqrt(s - h);\n      if(x < px + w) {\n        x = px + w;\n      }\n    }\n    if(positions.empty() || positions.back() + radius[lasts.back()] < x) {\n//    if(1) {\n      positions.push_back(x);\n      lasts.push_back(i);\n    }\n  }\n\n//  cout << \"-----------------\\n\";rep(i, positions.size()) { printf(\"%.10Lf %.5Lf\\n\", positions[i], radius[lasts[i]]); } cout << \"-----------------\\n\";\n//  assert(lastI >= 0);\n//  printf(\"%.10Lf %.10Lf %d\\n\", startx, radius[lasts.back()], lasts.back());\n\n  printf(\"%.10Lf\\n\", positions.back() + startx + radius[lasts.back()]);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double EPS = 1e-5;\n\nint n;\nvector<double> v;\n\ndouble solve(){\n  vector<double> dis;\n  double res = 0;\n  \n  if(n == 1) return v[0] * 2;\n\n  for(int i=0;i<n-1;i++){\n    double sum = v[i] + v[i+1];\n    double dif = v[i+1] - v[i];    \n    dis.push_back(sqrt(sum * sum - dif * dif));\n  }\n\n  int l = 0, r = n-1;\n  double sum = v[0];\n  for(int i=0;i<n-1;i++){\n    if(sum + dis[i] < v[i+1] - EPS){\n      l = i + 1;\n      sum = v[i+1];\n    } else {\n      break;\n    }\n  }\n  sum = v[n-1];\n  for(int i=n-1;i>0;i--){\n    if(sum + dis[i-1] < v[i-1] - EPS){\n      r = i - 1;\n      sum = v[i-1];\n    } else {\n      break;\n    }\n  }\n\n  res = v[l] + v[r];\n  //cout << l << ' ' << r << endl;\n  for(int i=l;i<r;i++){\n    if(i < n - 2){\n      int ii = i;\n      sum = dis[i] + dis[i+1];\n      for(int j=i+2;j<=r&&j<n;j++){\n        if(v[i] + v[j] > sum + EPS) ii = j;\n        else if(j >= r) break;\n        sum += dis[j];\n      }\n      if(ii > i) {\n        res += v[i] + v[ii];\n        i = ii-1;\n      } else {\n        res += dis[i];\n      }\n    } else {\n      res += dis[i];\n    }\n  }\n\n  return res;\n}\n\nint main(){\n  while(cin >> n){\n    double x;\n    v.clear();\n    for(int i=0;i<n;i++){\n      cin >> x;\n      v.push_back(x);\n    }\n    printf(\"%.7f\\n\", solve());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <iomanip>\n#include <set>\n#include <string>\n#include <vector>\n\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nld a[1000];\nld b[1000];\nint main(){\n  int n;\n  cin>>n;\n  for(int i=1;i<=n;i++){\n    cin>>a[i];\n  }\n  for(int i=1;i<=n;i++){\n    ld ma=0.0;\n    for(int j=1;j<i;j++){\n      ld r=a[i];\n      ld x=b[j]+a[j];//center\n      ld y=a[j];\n      ld dy=abs(y-r);\n      ld dd=r+a[j];\n      ld dx=sqrt(dd*dd-dy*dy);\n      ma=max(ma,x+dx-r);\n    }\n    b[i]=ma;\n  }\n  {\n    ld ma=0.0;\n    for(int i=1;i<=n;i++){\n      ma=max(b[i]+2*a[i],ma);\n      //cout<<b[i]<<endl;\n    }\n    cout<<setprecision(15)<<ma<<endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <cmath>\n#define FOR(i,j,k) for(int i=j;i<=k;i++)\nusing namespace std;\n#define MAXN (2000)\ndouble r[MAXN],p[MAXN];\nint main (int argc, char *argv[])\n{\n\tint n;\n\twhile (scanf(\"%d\",&n)!=EOF){\n\n\t\tdouble ans=0;\n\t\tFOR(i,1,n){\n\t\t\tscanf(\"%lf\",&r[i]);\n\n\t\t\tp[i]=r[i];\n\t\t\tFOR(j,1,i-1){\n\t\t\t\tint dr=r[j]+r[i];\n\t\t\t\tint tr=r[j]-r[i];\n\t\t\t\tdouble nowp=sqrt(dr*dr-tr*tr)+p[j];\n\t\t\t\tp[i]=max(p[i],nowp);\n\t\t\t}\n\n\t\t\tans=max(ans,p[i]+r[i]);\n\t\t}\n\t\tprintf(\"%.8f\\n\",ans);\n\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n \n#define _rrep(i,n) _rrange(i,n,0)\n#define _rrange(i,a,b) for(int i=(int)(a)-1;i>=(int)(b);--i)\n#define rrep(...) _overload(__VA_ARGS__,_rrange,_rrep,)(__VA_ARGS__)\n \n#define _all(arg) begin(arg),end(arg)\n#define uniq(arg) sort(_all(arg)),(arg).erase(unique(_all(arg)),end(arg))\n#define getidx(ary,key) lower_bound(_all(ary),key)-begin(ary)\n#define clr(a,b) memset((a),(b),sizeof(a))\n#define bit(n) (1LL<<(n))\n \n// #define DEBUG\n \n#ifdef DEBUG\n    #define dump(...) fprintf(stderr, __VA_ARGS__)\n#else\n    #define dump(...)\n#endif\n \ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0;}\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0;}\n \nusing namespace std;\nusing ll=long long;\nusing vi=vector<int>;\nusing vll=vector<ll>;\n \nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst ll inf =1LL << 62;\nconst ll mod=1000000007LL;\nconst int dx[4]={1,0,-1,0};\nconst int dy[4]={0,1,0,-1};\n \n \nll extgcd(ll a,ll b,ll& x,ll& y){x=1,y=0;ll g=a;if(b!=0) g=extgcd(b,a%b,y,x),y-=a/b*x;return g;}\nll ADD(const ll &a, const ll &b,const ll &mod) { return (a+b)%mod;}\nll SUB(const ll &a, const ll &b,const ll &mod) { return (a-b+mod)%mod;}\nll MUL(const ll &a, const ll &b,const ll &mod) { return (1LL*a*b)%mod;}\nll DIV(const ll &a, const ll &b,const ll &mod) {ll x,y; extgcd(b,mod,x,y);return MUL(a,(x+mod)%mod,mod);}\n \nrandom_device rd;\nmt19937 mt(rd());\nuniform_int_distribution<int> dice(1,6);\nuniform_real_distribution<double> score(0.0,10.0);\n\nusing R = double;\n\nint main(void){\n    int n; cin >> n;\n    vector<R> rs(n), xs(n);\n    for(auto & e : rs) cin >> e;\n\n    rep(i, n){\n        R & x = xs[i] = rs[i];\n        rep(j, i){\n            R c = rs[j] + rs[i];\n            R b = rs[j] - rs[i];\n\n            R a = sqrt(c * c - b * b);\n            chmax(x, xs[j] + a);\n        }\n    }\n\n    R res = 0;\n    rep(i, n){\n        chmax(res, xs[i] + rs[i]);\n    }\n\n    cout.precision(20);\n    cout << fixed << res << endl;\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nint main(void){\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) cin >> a[i];\n    \n    vector<double> b(n);\n    b[0] = a[0];\n    for (int i = 1; i < n; i++) {\n        double m = 0;\n        int r = a[i];\n        for (int j = 0; j < i; j++) {\n            int l = a[j];\n            int h = max(l,r) - min(l,r);\n            int s = l+r;\n            double bot = sqrt(s*s - h*h);\n            m = max(m, b[j]+bot);\n        }\n        b[i] = m;\n    }\n    double l = 1e9, r = 0;\n    for (int i = 0; i < n; i++) {\n        l = min(l, b[i]-a[i]);\n        r = max(r, b[i]+a[i]);\n    }\n    printf(\"%.12lf\\n\", r-l);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define INF_LL (int64)1e18\n#define INF (int32)1e9\n#define REP(i, n) for(int64 i = 0;i < (n);i++)\n#define FOR(i, a, b) for(int64 i = (a);i < (b);i++)\n#define all(x) x.begin(),x.end()\n#define fs first\n#define sc second\n\nusing int32 = int_fast32_t;\nusing uint32 = uint_fast32_t;\nusing int64 = int_fast64_t;\nusing uint64 = uint_fast64_t;\nusing PII = pair<int32, int32>;\nusing PLL = pair<int64, int64>;\n\nconst double eps = 1e-10;\n\ntemplate<typename A, typename B>inline void chmin(A &a, B b){if(a > b) a = b;}\ntemplate<typename A, typename B>inline void chmax(A &a, B b){if(a < b) a = b;}\n\ntemplate<typename T>\nvector<T> make_v(size_t a){return vector<T>(a);}\n\ntemplate<typename T,typename... Ts>\nauto make_v(size_t a,Ts... ts){\n    return vector<decltype(make_v<T>(ts...))>(a,make_v<T>(ts...));\n}\n\ntemplate<typename T,typename U,typename... V>\ntypename enable_if<is_same<T, U>::value!=0>::type\nfill_v(U &u,const V... v){u=U(v...);}\n\ntemplate<typename T,typename U,typename... V>\ntypename enable_if<is_same<T, U>::value==0>::type\nfill_v(U &u,const V... v){\n    for(auto &e:u) fill_v<T>(e,v...);\n}\n\ndouble dis(double a, double b) {\n    return sqrt((a+b)*(a+b)-(a-b)*(a-b));\n}\n\nint main(void){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int64 N;\n    cin >> N;\n    vector<double> r(N), cen(N);\n\n    REP(i, N) cin >> r[i];\n\n    REP(i, N) {\n        double now = r[i];\n        REP(j, i) {\n//            cout << dis(r[j], r[i]) + cen[j] << \" \";\n            chmax(now, dis(r[j], r[i]) + cen[j]);\n        }\n        cen[i] = now;\n    }\n    double res = 0;\n    REP(i, N) {\n        chmax(res, cen[i]+r[i]);\n    }\n    cout << fixed << setprecision(10) << res << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "//  aoj-VolumeICPCOOC2015-D  / 2015-11-30\n#include<iostream>\n#include<vector>\n#include<cassert>\n#include<string>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\n#include<tuple>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n//vector\ntemplate<typename T>ostream& operator << (ostream &os , const vector<T> &v){\n    rep(i,v.size()) os << v[i] << (i!=v.size()-1 ? \" \" : \"\\n\"); return os;\n}\ntemplate<typename T>istream& operator >> (istream &is , vector<T> &v){\n    rep(i,v.size()) is >> v[i]; return is;\n}\n\n//debug\n#ifdef DEBUG\nvoid debug(){ cerr << \" : Debug\" << endl; }\n#endif\ntemplate<class F,class...R> void debug(const F &car,const R&... cdr){\n#ifdef DEBUG\n    cerr << car << \" \"; debug(cdr...);\n#endif\n}\n\nstruct Point{\n    int x,y;\n    Point():x(0),y(0){}\n    Point(int x,int y):x(x),y(y){};\n    Point& operator +=(const Point &p){\n        x += p.x;\n        y += p.y;\n        return *this;\n    }\n};\n\nostream &operator << (ostream& os, const Point& p){ return os << \"(\" << p.x << \",\" << p.y << \")\";}\n\nstruct ClosedRange{\n    int l,r; //[l,r]\n    ClosedRange(){}\n    ClosedRange(int l,int r):l(l),r(r){}\n    bool operator < (const ClosedRange &a) const {\n        return make_pair(r,l) < make_pair(a.r, a.l);\n    }\n};\nostream& operator << (ostream &os, const ClosedRange &r){\n    return os << \"[\" << r.l << \" \" << r.r << \"]\";\n}\n\nint lower_dimension(Point p, int w, int d){\n    return p.y == 0 ? p.x\n            : p.x == w ? w + p.y\n            : p.y == d ? w + d + (w - p.x)\n            : p.x == 0 ? w*2 + d + (d - p.y)\n            : -1;\n}\n\nPoint find_cross(Point p, Point dp, int w, int d){\n    debug(\"P : \",p,\" dp : \",dp);\n    while(0 < p.x and p.x < w and\n          0 < p.y and p.y < d){\n        p += dp;\n        debug(\"P : \",p);\n    }\n    return p;\n}\n\nbool is_in(ClosedRange &r, int x){\n    if(r.l <= r.r) return r.l <= x and x <= r.r;\n    else return r.l <= x or x <= r.r;\n}\n\nClosedRange calc_range(Point p, char dir, int w, int d){\n    ClosedRange ret;\n    Point dp[] = {Point(-1, 1), Point(1, 1), Point(1, -1), Point(-1, -1)};\n    map<char, int> dtoi = {{'N', 0}, {'E', 1}, {'S', 2}, {'W', 3}};\n    Point dp1 = dp[ ( dtoi[ dir ] + 1 ) % 4 ];\n    Point dp2 = dp[ dtoi[ dir ] ];\n    Point l = find_cross(p, dp1, w, d);\n    Point r = find_cross(p, dp2, w, d);\n    debug(l,r);\n    return ClosedRange(lower_dimension(l, w, d),\n                       lower_dimension(r, w, d));\n}\n\nint trial(vector<ClosedRange> &range, int start){\n    int n = range.size();\n    vector<bool> used(n, false);\n    int cnt  = 0, ret = 0;\n    for(int i = start; cnt < n; i = (i+1) % n){\n        if(used[i]) continue;\n        int now = range[i].r;\n        ret++;\n        for(int j = i; is_in(range[j], now) and cnt < n; j = (j+1) % n){\n            used[j] = true;\n            cnt ++;\n        }\n    }\n    return ret;\n}\n\nbool solve(){\n    int n, w, d; cin >> n >> w >> d;\n    vector<ClosedRange> range(n);\n    rep(i,n){\n        int x,y;\n        char f; cin >> x >> y >> f;\n        range[i] = calc_range(Point(x,y), f, w, d);\n        debug(range[i]);\n    }\n    \n    sort( all( range ) );\n    int ans = 1 << 30;\n    rep(i, n){\n        ans = min(ans, trial(range, i));\n    }\n    cout << ans << endl;\n    return false;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define repp(i, l, r) for(int i = (l); i < (r); i++)\n#define per(i, n) for(int i = ((n)-1); i >= 0; i--)\n#define perr(i, l, r) for(int i = ((r)-1); i >= (l); i--)\n#define all(x) (x).begin(),(x).end()\n#define MOD 1000000007\n#define IINF 1000000000\n#define LINF 1000000000000000000\n#define SP <<\" \"<<\n#define CYES cout<<\"Yes\"<<endl\n#define CNO cout<<\"No\"<<endl\n#define CFS cin.tie(0);ios::sync_with_stdio(false)\n\ntypedef long long LL;\ntypedef long double LD;\n\nint main(){\n  int n;\n  cin >> n;\n  vector<double> r(n),p(n);\n  rep(i,n){\n    cin >> r[i];\n  }\n  p[0]=r[0];\n  repp(i,1,n){\n    double ans=r[i];\n    rep(j,i){\n      ans=max(ans,2*sqrt(r[i]*r[j])+p[j]);\n    }\n    p[i]=ans;\n  }\n  double ans=0;\n  rep(i,n){\n    ans=max(ans,p[i]+r[i]);\n  }\n  cout << fixed << setprecision(10) << ans << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <deque>\n#include <tuple>\n#include <queue>\n#include <functional>\n#include <cmath>\nusing namespace std;\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> buf(n),seq;\n\tfor (auto &a : buf)cin >> a;\n\tsort(buf.begin(), buf.end(),greater<int>());\n\tseq.reserve(n);\n\tseq.push_back(buf.front());\n\tdouble sum = 2*seq[0];\n\tfor (int i = 1; i < n;i++) {\n\t\tdouble w,x;\n\t\tx = max(0.0, buf[i] - seq[0] + sqrt(4 * buf[i] * seq[0]));\n\t\tw = x;\n\t\tint pos = 0;\n\t\tx = max(0.0, buf[i] - seq.back() + sqrt(4 * buf[i] * seq.back()));\n\t\tif (w > x) {\n\t\t\tpos = seq.size();\n\t\t\tw = x;\n\t\t}\n\t\tfor (int j = 0; j < seq.size()-1; j++) {\n\t\t\tx = max(0.0, sqrt(4 * buf[i] * seq[j])+sqrt(4 * buf[i] * seq[j+1])-sqrt(4*seq[j]*seq[j+1]));\n\t\t\tif (w > x) {\n\t\t\t\tpos = i;\n\t\t\t\tw = x;\n\t\t\t}\n\t\t}\n\t\tseq.insert(seq.begin()+pos, buf[i]);\n\t\tsum += w;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;cin>>n;\n  double a[n],d[n],ans=0;\n  for(int i=0;i<n;i++){\n    cin>>a[i],d[i]=a[i];\n    for(int j=0;j<i;j++){\n      double x=fabs(a[i]-a[j]),y=a[i]+a[j];\n      d[i]=max(d[i],d[j]+sqrt(y*y-x*x));\n    }\n    ans=max(ans,d[i]+a[i]);\n  }\n  printf(\"%.9f\\n\",ans);\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cassert>\n#include <string>\n#include <set>\n#include <cmath>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1005;\n\nconst double eps = 1e-10 , pi = acos(-1.0);\ninline int dcmp(double x) {\n    return (x > eps) - (x < -eps);\n}\n\nstruct Point {\n    double x , y;\n    Point (double x = 0 , double y = 0) : x(x) , y(y) {} \n    void input() {\n        scanf(\"%lf%lf\",&x,&y);\n    }\n    bool operator < (const Point& R) const{\n        if (dcmp(x - R.x) == 0)\n            return dcmp(y - R.y) < 0;\n        return dcmp(x - R.x) < 0;\n    }\n    bool operator == (const Point& R) const{\n        return dcmp(x - R.x) == 0 && dcmp(y - R.y) == 0;\n    }\n    Point operator + (const Point& R) const{\n        return Point(x + R.x , y + R.y);\n    }\n    Point operator - (const Point& R) const{\n        return Point(x - R.x , y - R.y);\n    }\n    Point operator * (const double& R) const{\n        return Point(x * R , y * R);\n    }\n    Point operator / (const double& R) const{\n        return Point(x / R , y / R);\n    }\n    double operator ^ (const Point& R) const{\n        return x * R.y - y * R.x;\n    }\n    double operator % (const Point& R) const{\n        return x * R.x + y * R.y;\n    }\n    double len() {\n        return sqrt(*this % *this);\n    }\n};\n\nint n;\nint R[N];\ndouble pos[N];\n\n\nbool check(int k , double r) {    \n    for (int i = 0 ; i < k ; ++ i) {\n        Point A(pos[i] , R[i]);\n        Point B(r , R[k]);\n        if (dcmp((A - B).len() - R[i] - R[k]) < 0)\n            return 0;\n    }\n    return 1;\n}\n\nint main() {\n    double res = 0;\n    scanf(\"%d\" , &n);\n    for (int i = 0 ; i < n ; ++ i) {\n        scanf(\"%d\" , &R[i]);\n        double l = max((i ? pos[i - 1] : 0.0) , (double)R[i]) , r = 2e7 , m;\n        for (int T = 0 ; T < 100 ; ++ T) {\n            m = 0.5 * (l + r);\n            if (check(i , m))\n                r = m;\n            else\n                l = m;\n        }\n        pos[i] = r;\n        res = max(res , pos[i] + R[i]);\n    }\n    printf(\"%.10f\\n\" , res);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (dist < (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\tif (x[b] > a) { return false; }\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i]; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1000; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tlong double minx = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong double dis = y[i] + x[i];\n\t\tif (dis > minx) { minx = dis; }\n\t}\n\tcout << fixed << setprecision(14) << minx << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\ndouble calcDist(double, double);\n\nint main()\n{\n\tint N;\n\tscanf(\"%d\", &N);\n\tstd::vector<double> r(N);\n\tint max_i{};\n\tfor (int i{}; i < N; i++)\n\t{\n\t\tscanf(\"%lf\", &r[i]);\n\t\tif (r[i] > r[max_i])\n\t\t\tmax_i = i;\n\t}\n\tstd::vector<double> distance(N);\n\tdouble max_l{r[max_i]}, max_r{r[max_i]};\n\tfor (int i{max_i - 1}; i >= 0; i--)\n\t{\n\t\tfor (int j{max_i}; j > i; j--)\n\t\t\tdistance[i] = std::max(distance[i], distance[j] + calcDist(r[i], r[j]));\n\t\tmax_l = std::max(distance[i] + r[i], max_l);\n\t}\n\tfor (int i{max_i + 1}; i < N; i++)\n\t{\n\t\tfor (int j{max_i}; j < i; j++)\n\t\t\tdistance[i] = std::max(distance[i], distance[j] + calcDist(r[i], r[j]));\n\t\tmax_r = std::max(distance[i] + r[i], max_r);\n\t}\n\n\tstd::cout << std::fixed << std::setprecision(10) << max_l + max_r << std::endl;\n\treturn 0;\n}\n\ndouble calcDist(double a, double b)\n{\n\treturn sqrt((a + b) * (a + b) - (a - b) * (a - b));\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#define _USE_MATH_DEFINES\n#include <cmath>\n#include <climits>\n#include <cstdlib>\n#include <cstring>\n#include <cfloat>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <cctype>\n#include <cstdio>\n#include <cassert>\nusing namespace std;\n\n#define EPS 1e-12\n#define ull unsigned long long\n#define ll long long\n#define VI vector<ll>\n#define PII pair<ll, ll> \n#define VVI vector<vector<ll> >\n#define REP(i,n) for(int i=0,_n=(n);(i)<(int)_n;++i)\n#define RANGE(i,a,b) for(int i=(int)a,_b=(int)(b);(i)<_b;++i)\n#define RANGE_R(i,a,b) for(int i=(int)b-1,_a=(int)(a);(i)>=_a;--i)\n#define MIN_UPDATE(target, value) target = min(target, value)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define ALLR(c) (c).rbegin(), (c).rend()\n#define PB push_back\n#define MP(a, b) make_pair(a, b)\n#define POPCOUNT(v) __builtin_popcountll((ll)(v))\n#define IN_RANGE(v, a, b) ((a)<=(v) && (v)<(b))\n#define CLEAR(table, v) memset(table, v, sizeof(table));\n#define PRINT1(table, D0) REP(d0, D0) cout<<table[d0]<<\" \"; cout<<\"\\n\";\n#define PRINT2(table, D0, D1) REP(d0, D0) { REP(d1, D1) cout<<table[d0][d1]<<\" \"; cout<<\"\\n\"; }\n#define PRINT3(table, D0, D1, D2) REP(d0, D0) { REP(d1, D1) { REP(d2, D2) cout<<table[d0][d1][d2]<<\" \"; cout<<\"\\n\"; } cout<<\"\\n\"; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const map<T0, T1>& v) { for( typename map<T0, T1>::const_iterator p = v.begin(); p!=v.end(); p++ ){os << p->first << \": \" << p->second << \" \";} return os; }\ntemplate <typename T0, typename T1> std::ostream& operator<<(std::ostream& os, const pair<T0, T1>& v) { os << v.first << \": \" << v.second << \" \"; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<T>& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << \" \"; } return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const set<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const deque<T>& v) { vector<T> tmp(v.begin(), v.end()); os << tmp; return os; }\ntemplate <typename T> std::ostream& operator<<(std::ostream& os, const vector<vector<T> >& v) { for( int i = 0; i < (int)v.size(); i++ ) { os << v[i] << endl; } return os; }\n\n\n/*\n\n*/\nint main() {\n\tll N;\n\tcin>>N;\n\tVI w(N);\n\tREP(i, N) cin>>w[i];\n\tdouble minX=0, maxX=0;\n\tvector<double> x(N+1);\n\tREP(i, N) {\n\t\tREP(j, i) {\n\t\t\tdouble X=x[j] + sqrt(pow(w[j]+w[i], 2) - pow(fabs(w[j]-w[i]), 2));\n\t\t\tx[i]=max(x[i], X);\n\t\t}\n\t\tminX=min(minX, x[i]-w[i]);\n\t\tmaxX=max(maxX, x[i]+w[i]);\n\t\tif(i==0||i==N-1) {\n\t\t\tx[i+1]=x[i]+w[i];\n\t\t} else {\n\t\t\tx[i+1]=x[i]+sqrt(pow(w[i]+w[i+1], 2) - pow(fabs(w[i]-w[i+1]), 2));\n\t\t}\n\t}\n\tprintf(\"%.10f\\n\", maxX-minX);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ndouble get_x(double r1, double r2)\n{\n    return sqrt(pow(r1 + r2, 2) - pow(r1 - r2, 2));\n}\n\nint main()\n{\n    int N;\n    cin >> N;\n    vector<double> R(N), x(N);\n    for (int i = 0; i < N; i++) {\n        cin >> R[i];      \n    }\n    double res = 0;\n    for (int i = 0; i < N; i++) {\n        double nx = R[i];\n        for (int j = 0; j < i; j++) {\n            nx = max(nx, x[j] + get_x(R[i], R[j]));\n        }\n        x[i] = nx;\n        res = max(res, x[i] + R[i]);\n    }\n    printf(\"%.10f\\n\", res);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<double,double> pdi;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF 999999999\n\nint n;\n\nbool used_start[500];\nbool used_end[500];\n\n#define MAX_V 505\nstruct edge{int to;double cost;};\nvector<edge> G[MAX_V];\ndouble d[MAX_V];\n\nvoid dijkstra(int s,int V){\n    priority_queue< pdi,vector<pdi>,greater<pdi> > que;\n    rep(i,MAX_V)d[i]=INF;\n    d[s]=0;\n    que.push(pdi(0,s));\n    \n    while(que.size()){\n        pdi p=que.top();\n        que.pop();\n        \n        int v=p.second;\n        if(d[v]<p.first)continue;\n        \n        rep(i,G[v].size()){\n            edge e=G[v][i];\n            if(d[e.to]>d[v]+e.cost){\n                d[e.to]=d[v]+e.cost;\n                que.push(pdi(d[e.to],e.to));\n            }\n        }\n    }\n}\n\n\nvoid add_edge_start(vector<int> data){\n    double now=0;\n    rep(i,n){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_start[i]=true;\n//            cout<<\"501\"<<\"->\"<<i<<\" \"<<r<<endl;\n            G[501].pb(edge{(int)i,r});\n        }\n        else break;\n    }\n}\n\n\nvoid add_edge_end(vector<int> data){\n    double now=0;\n    for(int i=n-1;i>=0;i--){\n        double r = data[i];\n        if(now<(sqrt(2)-1)*r){\n            now = (sqrt(2)+1)*r;\n            used_end[i]=true;\n//            cout<<i<<\"->\"<<\"502 \"<<r<<endl;\n            G[i].pb(edge{502,r});\n        }\n        else break;\n    }\n    \n}\n\n\nvoid connect(int p,vector<int> data){\n    double r=data[p];           //???p?????????\n    double x=0,y=r;             //?????????????????§?¨?\n    double l=0;                 //???p??????????????????i??????????????§????§?????????¢\n    bool connected = false;     //???p??¨?????????????????¨?????????????????????\n    int dist=-1;                //???p????????????????????????(???p -> ???dist???????????????)\n    double wait=-1;             //???p????????????????????§?????????\n    \n    for(int i=p+1;i<n;i++){\n        double rd = data[i];    //???i?????????\n        double tx = x, ty = y, tr=data[i-1];\n        \n        if( (rd+tr)*(rd+tr) - abs(rd-y)*abs(rd-y) <= 0  )continue;      //sqrt(~~~)???nan?????????????????????\n        x += sqrt( (rd+tr)*(rd+tr) - abs(rd-tr)*abs(rd-tr) );           //???j??????????????§?¨?????§????\n        y = rd;\n        \n        \n        if( (x)*(x)+(y-r)*(y-r)<=(r+rd)*(r+rd)+1e-9 ){      //??¨???????????????????????????\n            connected = true;                               //????????°????????????\n            dist = i;                                       //dist??????????????????\n            x = sqrt( (r+rd)*(r+rd) - abs(r-rd)*abs(r-rd) );\n            y = rd;\n            \n            wait = x;\n        }\n    }\n    if(connected){\n        if(  (used_start[p]&&used_start[dist]) || (used_end[p]&&used_end[dist])  ){}\n        else{\n//            cout<<endl<<p<<\"->\"<<dist<<\" \"<<wait<<endl;\n            G[p].pb(edge{dist,wait});\n        }\n    }\n}\n\n\nvoid add_edge(vector<int> data){\n    rep(i,n-1){\n        connect(i,data);\n    }\n}\n\n\n\nint main(){\n    cin>>n;\n    vector<int> data(n);\n    rep(i,n)cin>>data[i];\n    \n    rep(i,500)used_start[i] = used_end[i] = false;\n    \n    add_edge_start(data);\n    \n    add_edge_end(data);\n    \n    add_edge(data);\n    \n    \n    dijkstra(501,MAX_V);\n    \n    printf(\"%.10lf\\n\",d[502]);\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n//#define int long long\n#define DBG 0\n#define dump(o) if(DBG){cerr<<#o<<\" \"<<(o)<<\" \";}\n#define dumpl(o) if(DBG){cerr<<#o<<\" \"<<(o)<<endl;}\n#define dumpc(o) if(DBG){cerr<<#o; for(auto &e:(o))cerr<<\" \"<<e;cerr<<endl;}\n#define rep(i,a,b) for(int i=(a);i<(b);i++)\n#define rrep(i,a,b) for(int i=(b)-1;i>=(a);i--)\n#define all(c) begin(c),end(c)\nconst int INF = sizeof(int) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst int MOD = (int)(1e9 + 7);\ntemplate<class T> bool chmax(T &a, const T &b) { if (a < b) { a = b; return true; } return false; }\ntemplate<class T> bool chmin(T &a, const T &b) { if (a > b) { a = b; return true; } return false; }\n\ndouble f(double r1, double r2) {\n\tdouble b = r1 - r2;\n\tdouble c = r1 + r2;\n\treturn sqrt(c*c - b*b);\n}\n\nsigned main() {\n\tcout << fixed << setprecision(8);\n\tint N; cin >> N;\n\tvector<int> r(N); rep(i, 0, N) { cin >> r[i]; }\n\tvector<double> x(N);\n\n\tif (N == 1) {\n\t\tcout << r[0] * 2 << endl;\n\t\treturn 0;\n\t}\n\n\tint jl = 0;\n\trep(i, 1, r.size()) {\n\t\trep(j, jl, i) {\n\t\t\tdouble d = f(r[i], r[j]);\n\t\t\tchmax(x[i], d + x[j]);\n\t\t}\n\t\tif (r[jl] <= r[i])jl = i;\n\t}\n\tdouble left = INF, right = -INF;\n\trep(i, 0, x.size()) {\n\t\tchmin(left, x[i] - r[i]);\n\t\tchmax(right, x[i] + r[i]);\n\t}\n\tdumpc(x);\n\tcout << right - left << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//  aoj-VolumeICPCOOC2015-B  / 2015-11-30\n#include<iostream>\n#include<vector>\n#include<cassert>\n#include<string>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\n#include<tuple>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n\ntemplate<typename T>ostream& operator << (ostream &os , const vector<T> &v){\n    rep(i,v.size()) os << v[i] << (i!=v.size()-1 ? \" \" : \"\"); return os;\n}\ntemplate<typename T>istream& operator >> (istream &is , vector<T> &v){\n    rep(i,v.size()) is >> v[i]; return is;\n}\n\n#ifdef DEBUG\nvoid debug(){ cerr << \" : Debug\" << endl; }\n#endif\ntemplate<class F,class...R> void debug(const F &car,const R&... cdr){\n#ifdef DEBUG\n    cerr << car << \" \"; debug(cdr...);\n#endif\n}\n\nconst double EPS=1e-8;\n\nstruct Point{\n    double x,y;\n    Point():x(0),y(0){}\n    Point(double x,double y):x(x),y(y){};\n    bool operator == (const Point &a) const { return x == a.x && y == a.y; }\n    Point operator-(const Point& p) const { return Point(x - p.x, y - p.y); }\n};\nistream &operator >> (istream& is, Point& p){ return is >> p.x >> p.y;}\nostream &operator << (ostream& os, const Point& p){ return os << \"(\" << p.x << \",\" << p.y << \")\";}\n\ndouble dot(const Point &a, const Point &b) { return a.x * b.x + a.y * b.y; }\ndouble cross(const Point &a, const Point &b) { return a.x * b.y - a.y * b.x; }\ndouble norm(const Point& a) { return sqrt(dot(a, a)); }\ndouble distance(const Point& a, const Point& b) { return norm(a - b); }\n\nbool check(vector<Point> &P, vector<int> &R,Point &np,int nr){\n    rep(i,P.size()){\n        if(distance(P[i],np) - (R[i] + nr) < 0.0) return false;\n    }\n    return true;\n}\n\nbool solve(){\n    int n; cin >> n;\n    vector<int> R(n); cin >> R;\n    vector<Point> P;\n    for(int r : R){\n        double l= P.size() > 0 ? max(P.back().x,(double)r) : r;\n        double h=1e10;\n        while(h-l>1e-9){\n            double m = (l+h)/2;\n            Point p = Point(m,r);\n            if(check(P, R, p, r)) h = m;\n            else l = m;\n        }\n        P.push_back(Point(h,r));\n    }\n    debug(P);\n    double ans = 0;\n    rep(i,P.size()) ans = max(ans,P[i].x+R[i]);\n    printf(\"%.10f\\n\",ans);\n    return false;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <functional>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <vector>\n#include <list>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <bitset>\n#include <climits>\n\n#define all(c) (c).begin(), (c).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define pb(e) push_back(e)\n#define mp(a, b) make_pair(a, b)\n#define fr first\n#define sc second\n\nconst int INF=100000000;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nusing namespace std;\ntypedef pair<int ,int > P;\ntypedef long long ll;\nstruct Circle {\n    double x,y,r;\n    Circle(double x=0,double y=0,double r=0):\n        x(x),y(y),r(r){}\n    bool check(const Circle &rhs) const {\n        double d = sqrt((x-rhs.x)*(x-rhs.x)+(y-rhs.y)*(y-rhs.y));\n        return d < r+rhs.r;\n    }\n};\n\nint n;\nint r[501];\ndouble find(Circle c1, Circle c2, int k, double t) {\n    double ub=t,lb=INF;\n    rep(i,100) {\n        double mid=(ub+lb)/2;\n        c2=Circle(mid,r[k],r[k]);\n        if(c1.check(c2)) ub=mid;\n        else lb=mid;\n    }\n\n    return ub;\n}\n\nbool ok(double x) {\n    double t=r[0];\n    rep(i,n) if(i){\n        Circle c1(t,r[i-1],r[i-1]);\n        Circle c2;\n        t=find(c1,c2,i,t);\n    }\n\n    return t+r[n-1]<x;\n}\n\nint main() {\n    cin>>n;\n    rep(i,n) cin>>r[i];\n    double ub=0,lb=INF;\n    rep(i,100) {\n        double mid=(ub+lb)/2;\n        if(ok(mid)) lb=mid;\n        else ub=mid;\n    }\n    printf(\"%.20f\\n\",ub);\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,k,n) for(int i = (int)(k); i < (int)(n); i++)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(a) a.begin(), a.end()\n#define MS(m,v) memset(m,v,sizeof(m))\n#define D10 fixed<<setprecision(10)\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\nconst int MOD = 1000000007;\nconst int INF = MOD + 1;\nconst ld EPS = 1e-12;\ntemplate<class T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate<class T> T &chmax(T &a, const T &b) { return a = max(a, b); }\n\n/*--------------------template--------------------*/\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tvector<ld> v(n), pos(n);\n\tREP(i, n) cin >> v[i];\n\tpos[0] = v[0];\n\tint t;\n\tld ans = 0;\n\tFOR(i, 1, n)\n\t{\n\t\tld npos = v[i];\n\t\tREP(j, i)\n\t\t{\n\t\t\tld l = v[i], r = v[j];\n\t\t\tld h = abs(l - r), d = l + r;\n\t\t\tld tmp = pos[j] + sqrt(d*d - h*h);\n\t\t\tchmax(npos, tmp);\n\t\t}\n\t\tpos[i] = npos;\n\t\tchmax(ans, pos[i] + v[i]);\n\t}\n\tcout << D10 << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010];\n\ndouble x[1010],y[1010];\n\nconst double eps=1e-9;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\tfor(int i=0;i<m;++i){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(y[i]-cy)*(y[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\t//cerr << cx << \" \" << cy << endl;\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i],cy=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\td=sqrt(d);\n\t\t\t\tcx=x[j]+d,cy=r[i];\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\t//cerr << cx << \" \" << cy << endl;\n\t\t\tif(cross(i,cx,cy)==true) continue;\n\t\t\tif(cx<x[i]) x[i]=cx,y[i]=cy;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << y[i] << endl;\n\t}\n\tdouble ans=0.0;\n\tfor(int i=0;i<n;++i) ans=max(ans,x[i]+r[i]);\n\tcout.precision(10);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define mp(a,b) make_pair((a),(b))\n#define pb(a) push_back((a))\n#define all(x) (x).begin(),(x).end()\n#define uniq(x) sort(all(x)),(x).erase(unique(all(x)),end(x))\n#define fi first\n#define se second\n#define dbg(...) _dbg(#__VA_ARGS__, __VA_ARGS__)\nvoid _dbg(string){cout<<endl;}\ntemplate<class H,class... T> void _dbg(string s,H h,T... t){int l=s.find(',');cout<<s.substr(0,l)<<\" = \"<<h<<\", \";_dbg(s.substr(l+1),t...);}\ntemplate<class T,class U> ostream& operator<<(ostream& o, const pair<T,U> &p){o<<\"(\"<<p.fi<<\",\"<<p.se<<\")\";return o;}\ntemplate<class T> ostream& operator<<(ostream& o, const vector<T> &v){o<<\"[\";for(T t:v){o<<t<<\",\";}o<<\"]\";return o;}\n\n#define INF 1120000000\n\nint main(){\n  int n;\n  cin>>n;\n  vector<double> vec(n);\n  vector<double> pos(n);\n  rep(i,n) cin>>vec[i];\n\n  pos[0] = vec[0];\n  repl(i,1,n){\n    double best = vec[i];\n    rep(j,i){\n      double c = vec[i]+vec[j];\n      double b = abs(vec[i]-vec[j]);\n      best = max(best, pos[j] + sqrt(c*c - b*b));\n    }\n    pos[i] = best;\n  }\n\n  double ans = 0;\n  rep(i,n) ans = max(ans, pos[i]+vec[i]);\n\n  printf(\"%.9f\\n\", ans);\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cassert>\n#define REP(i,s,n) for(int i=s;i<n;++i)\n#define rep(i,n) REP(i,0,n)\nusing namespace std;\ndouble ans,d[500],x[500],cx;\nint n;\nint main() {\n  cin >> n;\n  ans = 0;\n  rep(i,n){\n    cin >> d[i];\n    x[i] = d[i];\n    rep(j,i){\n      cx = x[j]+sqrt((d[i]+d[j])*(d[i]+d[j])-(d[i]-d[j])*(d[i]-d[j]));\n      if(x[i]<cx) x[i] = cx;\n    }\n    if(ans < x[i]+d[i]) ans = x[i]+d[i];\n  }\n  printf(\"%.8lf\\n\",ans);\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define N 500 + 5\n\nint n, R[N];\ndouble ans, Pos[N];\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i ++)\n\t\tscanf(\"%d\", R + i);\n\tfor (int i = 1; i <= n; i ++)\n\t{\n\t\tdouble Max = 1.0 * R[i];\n\t\tfor (int j = 1; j < i; j ++)\n\t\t{\n\t\t\tdouble x = Pos[j] + 2 * sqrt(1.0 * R[i] * R[j]);\n\t\t\tMax = max(Max, x);\n\t\t}\n\t\tPos[i] = Max;\n\t\tans = max(ans, Pos[i] + 1.0 * R[i]);\n\t}\n\tprintf(\"%.6lf\\n\", ans);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010];\n\ndouble x[1010],y[1010];\n\nconst double eps=1e-9;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\tfor(int i=0;i<m;++i){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(y[i]-cy)*(y[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\t//cerr << cx << \" \" << cy << endl;\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i],cy=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\td=sqrt(d);\n\t\t\t\tcx=x[j]+d,cy=r[i];\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\t//cerr << cx << \" \" << cy << endl;\n\t\t\tif(cross(i,cx,cy)==true) continue;\n\t\t\tif(cx<x[i]) x[i]=cx,y[i]=cy;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << y[i] << endl;\n\t}\n\tdouble ans=0.0;\n\tfor(int i=0;i<n;++i) ans=max(ans,x[i]+r[i]);\n\tcout.precision(10);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nnamespace {\n\n    typedef double real;\n    typedef long long ll;\n\n    template<class T> ostream& operator<<(ostream& os, const vector<T>& vs) {\n        if (vs.empty()) return os << \"[]\";\n        os << \"[\" << vs[0];\n        for (int i = 1; i < vs.size(); i++) os << \" \" << vs[i];\n        return os << \"]\";\n    }\n    template<class T> istream& operator>>(istream& is, vector<T>& vs) {\n        for (auto it = vs.begin(); it != vs.end(); it++) is >> *it;\n        return is;\n    }\n\n    int N;\n    vector<real> rs;\n    void input() {\n        cin >> N;\n        rs.resize(N); cin >> rs;\n    }\n\n    real d(int i, int j) {\n        int a = rs[i], b = rs[j];\n        return real(2.0) * sqrt(a * b);\n    }\n\n    void solve() {\n        vector<real> xs(N, 0);\n        for (int i = 0; i < N; i++) {\n            real c = rs[i];\n            for (int j = 0; j < i; j++) {\n                c = max(c, xs[j] + d(j, i));\n            }\n            xs[i] = c;\n        }\n        real ans = 0;\n        for (int i = 0; i < N; i++) {\n            ans = max(ans, xs[i] + rs[i]);\n        }\n        cout << fixed << setprecision(12) << ans << endl;\n    }\n}\n\nint main() {\n    input(); solve();\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  double C[n];\n  for(int i = 0; i < n; i++)\n    cin >> C[i];\n  double ans = 0;\n  for(int i = 0; i < n - 1; i++){\n    if(C[i] > C[i + 1]){\n      int x = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i] - C[i + 1], 2));\n      ans += x;\n    }else if(C[i] < C[i + 1]){\n      int y = sqrt(pow(C[i] + C[i + 1], 2) - pow(C[i + 1] - C[i], 2));\n      ans += y;\n    }else{\n      ans += C[i] + C[i + 1];\n    }\n  }\n  double a = C[0];\n  double b = C[n - 1];\n  if(C[0] * 2 < C[1])\n    a = C[1];\n  if(C[n - 2] > C[n - 1] * 2)\n    b = C[n - 2];\n  printf(\"%.10f\\n\", ans + a + b);\n}  "
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <math.h>\n#include <set>\n#include <map>\n#include <string>\n#include <stack>\n#include <queue>\n#include <iomanip>\n#include <numeric>\n#include <tuple>\n#include <bitset>\n#include <complex>\n#include <unistd.h>\n#include <cassert>\n#include <cctype>\n#include <random>\n#define _USE_MATH_DEFINES\n#define _GLIBCXX_DEBUG\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> plglg;\ntypedef tuple<int, int, int> tiii;\ntypedef tuple<ll, ll, ll> tlglglg;\ntypedef complex<double> xy_t;\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\ndouble pi = 3.141592653589793;\nll mod = 1000000007;\nint intmax = 2147483647;\nint intmin = -2147483648;\nll llmax = 9223372036854775807;\nll llmin = -9223372036854775807;\nint iinf = intmax / 8;\nll inf = llmax / 8;\ndouble eps = 1e-11;\n\nint main() {\n    int N;\n    cin >> N;\n    int r[N];\n    for (int i = 0; i < N; i++) {\n        cin >> r[i];\n    }\n    double pos[N];\n    pos[0] = r[0];\n    double ans = 2 * r[0];\n    for (int i = 1; i < N; i++) {\n        double maxpos = r[i];\n        for (int j = 0; j < i; j++) {\n            double d = r[i] + r[j];\n            double h = abs(r[i] - r[j]);\n            double x = pos[j] + sqrt(d * d - h * h);\n            if (maxpos < x) {\n                maxpos = x;\n            }\n        }\n        pos[i] = maxpos;\n        if (pos[i] + r[i] > ans) {\n            ans = pos[i] + r[i];\n        }\n    }\n    cout << fixed;\n    cout << setprecision(8);\n    cout << ans << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tvector<double> r(n);\n\tfor(int i=0; i<n; i++){\n\t\tcin >> r[i];\n\t}\n\tvector<double> c(n, 0);\n\tc[0] = r[0];\n\tdouble right = r[0]*2;\n\tfor(int i=1; i<n; i++){\n\t\tfor(int j=0; j<i; j++){\n\t\t\tc[i] = max(c[i], c[j] +sqrt((r[i]+r[j])*(r[i]+r[j]) -abs((r[j]-r[i])*(r[j]-r[i]))));\n\t\t}\n\t\tif(c[i] < r[i]) c[i] = r[i];\n\t\tright = max(right, c[i]+r[i]);\n\t}\n\tcout << fixed << setprecision(10);\n\tcout << right << endl;\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\ndouble calc(int r1, int r2) {\n    if (r1 < r2) {\n        swap(r1, r2);\n    }\n\n    return sqrt((r1 + r2) * (r1 + r2) - (r2 - r1) * (r2 - r1));\n}\n\nint main() {\n    int N;\n    cin >> N;\n\n    vector<int> r(N);\n    for (int i = 0; i < N; ++i) {\n        cin >> r[i];\n    }\n\n    double ans = 0.0;\n    vector<double> c;\n    for (int i = 0; i < N; ++i) {\n        double cc = r[i];\n        for (unsigned int j = 0; j < c.size(); ++j) {\n            double d = calc(r[i], r[j]);\n            cc = max(cc, c[j] + d);\n        }\n        c.push_back(cc);\n        ans = max(ans, cc + r[i]);\n    }\n\n    printf(\"%.10f\\n\", ans);\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ndouble r[1010],x[1010];\n\nconst double eps=1e-6;\nconst double inf=1e9;\n\nbool cross(int m,double cx,double cy){\n\trep(i,m){\n\t\tdouble d=0.0;\n\t\td+=1.0*(x[i]-cx)*(x[i]-cx);\n\t\td+=1.0*(r[i]-cy)*(r[i]-cy);\n\t\tdouble rr=(r[i]+r[m])*(r[i]+r[m]);\n\t\tif(rr>d+eps) return true;\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n) cin >> r[i];\n\trep(i,n) x[i]=inf;\n\t\n\trep(i,n){\n\t\tfor(int j=-1;j<i;++j){\n\t\t\tdouble cx=r[i];\n\t\t\tif(j>=0){\n\t\t\t\tdouble d=1.0*(r[i]+r[j])*(r[i]+r[j]);\n\t\t\t\td-=1.0*(r[i]-r[j])*(r[i]-r[j]);\n\t\t\t\tcx=x[j]+sqrt(d);\n\t\t\t}\n\t\t\tif(cx<r[i]) continue;\n\t\t\tif(cross(i,cx,r[i])) continue;\n\t\t\tif(cx<x[i]) x[i]=cx;\n\t\t}\n\t\t//cerr << i << \" \" << x[i] << \" \" << r[i] << endl;\n\t}\n\n\tdouble ans=0.0;\n\trep(i,n) ans=max(ans,x[i]+r[i]);\n\tcout.precision(20);\n\tassert(ans<inf);\n\tcout << fixed << ans << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,n)  for(int i = 0; i < (n); i++)\n#define FOR(i,a,b) for(int i = (a); i < (b); i++)\nusing vi = vector<int>;\nusing ll = long long;\n\nconst double EPS = 1e-8;\n\nusing P = complex<double>;\nnamespace std{\n  bool operator <(const P &a, const P &b){\n    return real(a) != real(b) ? real(a) < real(b) : imag(a) < imag(b);\n  }\n}\ndouble cross(const P &a, const P &b){\n  return imag(conj(a)*b);\n}\ndouble dot(const P &a, const P &b){\n  return real(conj(a)*b);\n}\nstruct L : public vector<P>{\n  L(const P &a, const P &b){\n    push_back(a);\n    push_back(b);\n  }\n};\nstruct C{\n  P p; double r;\n  C(const P &p_, double r_) : p(p_), r(r_) {}\n};\n\nP projection(const L &l, const P &p){\n  double t = dot(p-l[0],l[0]-l[1]) / norm(l[0]-l[1]);\n  return l[0] + t*(l[0]-l[1]);\n}\n\nvector<P> crosspointCL(const C &c, const L &l){\n  P h = projection(l, c.p);\n  double d = abs(h - c.p);\n  vector<P> res;\n  if(d < c.r - EPS){\n    P dir = l[1]-l[0];\n    P x = dir / abs(dir) * sqrt(c.r*c.r - d*d);\n    res.push_back(h + x);\n    res.push_back(h - x);\n  }else if(d < c.r + EPS){\n    res.push_back(h);\n  }\n  return res;\n}\n\nint main(){\n  int n; cin >> n;\n  vector<double> rs(n); rep(i,n) cin >> rs[i];\n  vector<C> res;\n  res.push_back(C(P(rs[0],rs[0]),rs[0]));\n  FOR(i,1,n){ // n番目の円の場所を確定させる\n    P tmp(rs[i],rs[i]);\n    rep(j,i){\n      C tmpc(res[j].p,res[j].r+rs[i]);\n      // cerr << tmpc.p.real() << \" \" << tmpc.p.imag() << \" \" << tmpc.r << endl;\n      L tmpl(P(0,rs[i]),P(100,rs[i]));\n      vector<P> cross = crosspointCL(tmpc, tmpl);\n      sort(cross.begin(), cross.end());\n      // cerr << cross.back().real() << \" \" << cross.back().imag() << endl;\n      tmp = max(tmp, cross.back());\n    }\n    res.push_back(C(tmp,rs[i]));\n  }\n  double ans = 0;\n  rep(i,n){\n    ans = max(ans, res[i].p.real()+res[i].r);\n    // cerr << i << \" \" << res[i].p.real() << endl;\n  }\n  //cout << ans << endl;\n  printf(\"%.10lf\\n\",ans);\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define int long long\nusing namespace std;\ntypedef pair<int, int> P;\n\nsigned main(){\n    int n;\n    cin >> n;\n    vector<double> a(n), x(n);\n    rep(i, 0, n){\n        cin >> a[i];\n    }\n    x[0] = a[0];\n    double ans = a[0] * 2.0;    \n    rep(i, 1, n){\n        x[i] = a[i];\n        rep(j, 0, i){\n            x[i] = max(x[i], x[j] + 2.0 * sqrt(a[i] * a[j]));\n        }\n        ans = max(ans, x[i] + a[i]);\n    }\n    printf(\"%.12f\\n\", ans);\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, n) for (int i = 0; i < int(n); ++i)\n\ntemplate <class T, class U>\ninline bool chmax(T& t, const U& f) { return t < f ? t = f, true : false; }\n\ninline double sqr(double x) { return x * x; }\n\ndouble solve(int N, vector<double>& r) {\n    vector<double> x = r;\n    rep(i, N) rep(j, i) chmax(x[i], x[j] + sqrt(sqr(r[i] + r[j]) - sqr(r[i] - r[j])));\n    double L = 0.0;\n    rep(i, N) chmax(L, x[i] + r[i]);\n    return L;\n}\n\nint main() {\n    int N; cin >> N;\n    vector<double> r(N);\n    for (auto& e : r) cin >> e;\n    cout << fixed << setprecision(8) << solve(N, r) << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double EPS = 1e-4;\n\nint n;\nvector<double> v;\n\ndouble solve(){\n  vector<double> dis;\n  double res = 0;\n  \n  if(n == 1) return v[0] * 2;\n\n  for(int i=0;i<n-1;i++){\n    double sum = v[i] + v[i+1];\n    double dif = v[i+1] - v[i];    \n    dis.push_back(sqrt(sum * sum - dif * dif));\n  }\n\n  int l = 0, r = n-1;\n  double sum = v[0];\n  for(int i=0;i<n-1;i++){\n    if(sum + dis[i] < v[i+1] - EPS){\n      l = i + 1;\n      sum = v[i+1];\n    } else {\n      break;\n    }\n  }\n  sum = v[n-1];\n  for(int i=n-1;i>0;i--){\n    if(sum + dis[i-1] < v[i-1] - EPS){\n      r = i - 1;\n      sum = v[i-1];\n    } else {\n      break;\n    }\n  }\n\n  res = v[l] + v[r];\n  //cout << l << ' ' << r << endl;\n  for(int i=l;i<r;i++){\n    if(i < n - 2){\n      int ii = i;\n      sum = dis[i] + dis[i+1];\n      for(int j=i+2;j<=r&&j<n;j++){\n        if(v[i] + v[j] > sum + EPS) ii = j;\n        else if(j >= r) break;\n        sum += dis[j];\n      }\n      if(ii > i) {\n        res += v[i] + v[ii];\n        i = ii-1;\n      } else {\n        res += dis[i];\n      }\n    } else {\n      res += dis[i];\n    }\n  }\n\n  return res;\n}\n\nint main(){\n  while(cin >> n){\n    double x;\n    v.clear();\n    for(int i=0;i<n;i++){\n      cin >> x;\n      v.push_back(x);\n    }\n    printf(\"%.7f\\n\", solve());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\n#define MAX_N 100000\nlong double x[MAX_N];\nlong double y[MAX_N];\nint N;\nbool solve(long double a, int b) {\n\tfor (int i = 0; i < b; i++) {\n\t\tlong double X1 = a, Y1 = x[b];\n\t\tlong double X2 = y[i], Y2 = x[i];\n\t\tlong double dist = (X2 - X1)*(X2 - X1) + (Y2 - Y1)*(Y2 - Y1);\n\t\tif (dist < (x[i] + x[b])*(x[i] + x[b])) { return false; }\n\t}\n\tif (x[b] > a) { return false; }\n\treturn true;\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> x[i];\n\t\tif (i == 0) { y[i] = x[i]; }\n\t\telse {\n\t\t\tlong double L = 0, R = 1000000000.00, M;\n\t\t\tfor (int k = 0; k < 1000; k++) {\n\t\t\t\tM = (L + R) / 2;\n\t\t\t\tbool a1 = solve(M, i);\n\t\t\t\tif (a1 == true) { R = M; }\n\t\t\t\telse { L = M; }\n\t\t\t}\n\t\t\ty[i] = M;\n\t\t}\n\t}\n\tlong double minx = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong double dis = y[i] + x[i];\n\t\tif (dis > minx) { minx = dis; }\n\t}\n\tcout << fixed << setprecision(514) << minx << endl;\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\nint N,r[575],i;\ndouble x=0;\ndouble max(double a,double b){return a>b?a:b;}\ndouble min(double a,double b)\n{\n\treturn a<b?a:b;\n}\ndouble ch(int r1,int r2)\n{\n\tif(abs(r1-r2)<0.001)\n\t\treturn r1+r2;\n\tdouble a=abs(r1+r2),b=abs(r1-r2);\n\treturn sqrt(a*a-b*b);\n}\n\ndouble ch2(int r1,int r2)\n{\n\tdouble t=ch(r1,r2);\n\tif(r1+t<=r2)return 0;\n\tif(t>=r2)return r1;\n\treturn r1-(t-r2);\n}\n\nint main()\n{\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;i++)scanf(\"%d\",&r[i]);\n\tif(N==1)\n\t{\n\t\tx=r[0]*2;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<N-1;i++)\n\t\t{\n\t\t\tdouble l=ch(r[i],r[i+1]);\n\t\t\tif(l<max(r[i],r[i+1]))\n\t\t\t\tl=1.0*max(r[i],r[i+1]);\n\t\t\tx+=l;\n\n\t\t}\n\t\tx+=ch2(r[0],r[1]);\n\t\tx+=ch2(r[N-1],r[N-2]);\n\t}\n\tprintf(\"%lf\\n\",x);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint r[502];\ndouble WID[502];\n\ndouble width(int r1, int r2)\n{\n\tif (r1 == 10001 && r2 == 10001) {\n\t\treturn 0.0;\n\t} else if (r1 == 10001) {\n\t\treturn (double)r2;\n\t} else if (r2 == 10001){\n\t\treturn (double)r1;\n\t} else\n\t\treturn 2 * sqrt((double)(r1 * r2));\n}\n\nint main(void)\n{\n\tint N,i,j,k;\n\tdouble add;\n\tscanf(\"%d\",&N);\n\tfor (i = 1; i <= N; i++) {\n\t\tscanf(\"%d\", &r[i]);\n\t}\n\tr[0] = r[N + 1] = 10001;\n\n\tWID[0] = 0;\n\tfor (i = 1; i <= N + 1; i++) {\n\t\tWID[i] = WID[i - 1] + width(r[i - 1],r[i]);\n\t}\n\n\tfor (i = 2; i <= N; i++) {\n\t\tfor (j = 0; j + i <= N + 1; j++) {\n\t\t\tif ((add = width(r[j], r[j + i]) - (WID[j + i] - WID[j])) > 0.0) {\n\t\t\t\tfor (k = j + i; k <= N + 1; k++) {\n\t\t\t\t\tWID[k] += add;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.5lf\\n\",WID[N + 1]);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint r[502];\ndouble WID[502];\n\ndouble width(int r1, int r2)\n{\n\tif (r1 == 10001 && r2 == 10001) {\n\t\treturn 0.0;\n\t} else if (r1 == 10001) {\n\t\treturn (double)r2;\n\t} else if (r2 == 10001){\n\t\treturn (double)r1;\n\t} else\n\t\treturn 2 * sqrt((double)(r1 * r2));\n}\n\nint main(void)\n{\n\tint N;\n\tdouble add;\n\tscanf(\"%d\",&N);\n\tfor (int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\", &r[i]);\n\t}\n\tr[0] = r[N + 1] = 10001;\n\n\tWID[0] = 0;\n\tfor (int i = 1; i <= N + 1; i++) {\n\t\tWID[i] = WID[i - 1] + width(r[i - 1],r[i]);\n\t}\n\n\tfor (int i = 2; i <= N; i++) {\n\t\tfor (int j = 0; j + i <= N + 1; j++) {\n\t\t\tif ((add = width(r[j], r[j + i]) - (WID[j + i] - WID[j])) > 0.0) {\n\t\t\t\tfor (int k = j + i; k <= N + 1; k++) {\n\t\t\t\t\tWID[k] += add;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.5lf\\n\",WID[N + 1]);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 1357: Squeeze the Cylinders\n// 2017.10.24 bal4u@uu\n\n#include <stdio.h>\n#include <math.h>\n\nint r[500];\ndouble x[501];\n\nint main()\n{\n\tint n, i, j;\n\tdouble t, max, ans;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) scanf(\"%d\", r+i);\n\tans = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tmax = r[i];\n\t\tfor (j = 0; j < i; j++) {\n\t\t\tt = x[j] + sqrt((r[i]+r[j])*(r[i]+r[j]) - (r[i]-r[j])*(r[i]-r[j]));\n\t\t\tif (t > max) max = t;\n\t\t}\n\t\tx[i] = max;\n\t\tif (x[i] + r[i] > ans) ans = x[i] + r[i];\n\t}\n\tprintf(\"%.8lf\\n\", ans);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint N,r[575],i,j;\ndouble x=0,p[575];\ndouble max(double a,double b){return a>b?a:b;}\ndouble min(double a,double b){return a<b?a:b;}\ndouble ch(int r1,int r2)\n{\n\tdouble a=1.0*r1+r2,b=1.0*r1-r2;\n\treturn sqrt((a*a)-(b*b));\n}\n\nint main()\n{\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;i++)\n\t{\n\t\tdouble t=0,a=0;\n\t\tscanf(\"%d\",&r[i]);\n\t\tt=r[i];\n\t\tfor(j=0;j<i;j++)\n\t\t{\n\t\t\tt=max(t,p[j]+ch(r[i],r[j]));\n\t\t}\n\t\tp[i]=t;\n\t\tx=max(x,p[i]+r[i]);\n\t}\n\tprintf(\"%.5lf\\n\",x);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define N 512\n#define SQ(X) ((X) * (X))\n#define MAX(A,B) ((A) < (B) ? (B) : (A))\n\nstatic int r[N];\nstatic int n;\n\nstatic double d[N];\n\nmain()\n{\n  double rval;\n  int i, j;\n  \n  scanf(\"%d\", &n);\n  for (i = 0; i < n; ++i) {\n    scanf(\"%d\", &r[i]);\n    \n    d[i] = r[i];\n    for (j = 0; j < i; ++j) {\n      const double tmp = d[j] + sqrt(SQ(r[i] + r[j]) - SQ(r[i] - r[j]));\n      d[i] = MAX(d[i], tmp);\n    }\n  }\n  \n  rval = 0.;\n  for (i = 0; i < n; ++i) {\n    rval = MAX(rval, d[i] + r[i]);\n  }\n  printf(\"%.4f\\n\", rval);\n  \n  return EXIT_SUCCESS;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\nint N,r[575],i;\ndouble x=0;\ndouble max(double a,double b){return a>b?a:b;}\ndouble min(double a,double b)\n{\n\treturn a<b?a:b;\n}\ndouble ch(int r1,int r2)\n{\n\tif(abs(r1-r2)<0.0001)\n\t\treturn r1+r2;\n\tdouble a=abs(r1+r2),b=abs(r1-r2);\n\treturn sqrt(a*a-b*b);\n}\n\ndouble ch2(int r1,int r2)\n{\n\tdouble t=ch(r1,r2);\n\tif(r1+t<=r2)return 0;\n\treturn r1;\n}\n\nint main()\n{\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;i++)scanf(\"%d\",&r[i]);\n\tif(N==1)\n\t{\n\t\tx=r[0]*2;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<N-1;i++)\n\t\t{\n\t\t\tdouble l=ch(r[i],r[i+1]);\n\t\t\tif(l<max(r[i],r[i+1]))\n\t\t\t\tl=1.0*max(r[i],r[i+1]);\n\t\t\tx+=l;\n\n\t\t}\n\t\tx+=ch2(r[0],r[1]);\n\t\tx+=ch2(r[N-1],r[N-2]);\n\t}\n\tprintf(\"%lf\\n\",x);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\nint N,r[575],i;\ndouble x=0;\ndouble max(double a,double b){return a>b?a:b;}\ndouble min(double a,double b)\n{\n\treturn a<b?a:b;\n}\ndouble ch(int r1,int r2)\n{\n\tif(abs(r1-r2)<0.001)\n\t\treturn r1+r2;\n\tdouble a=abs(r1+r2),b=abs(r1-r2);\n\treturn sqrt(a*a-b*b);\n}\n\ndouble ch2(int r1,int r2)\n{\n\tdouble t=ch(r1,r2);\n\tif(t<=r2)return 0;\n\tif(t<=r1+r2)return r1;\n\telse if(t>2*r1+r2)return 0;\n\telse return 2*r1+r2-t;\n}\n\nint main()\n{\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;i++)scanf(\"%d\",&r[i]);\n\tif(N==1)\n\t{\n\t\tx=r[0]*2;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<N-1;i++)\n\t\t{\n\t\t\tdouble l=ch(r[i],r[i+1]);\n\t\t\tif(l<max(r[i],r[i+1]))\n\t\t\t\tl=1.0*max(r[i],r[i+1]);\n\t\t\tx+=l;\n\n\t\t}\n\t\tx+=ch2(r[0],r[1]);\n\t\tx+=ch2(r[N-1],r[N-2]);\n\t}\n\tprintf(\"%lf\\n\",x);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint main(void) {\n\tint N;\n\tint cylinders[512];\n\tint i, j;\n\tdouble cylinders_pos[512];\n\tdouble max, current;\n\tif (scanf(\"%d\", &N) != 1) return 1;\n\tfor (i = 0; i < N; i++) {\n\t\tif (scanf(\"%d\", &cylinders[i]) != 1) return 1;\n\t}\n\tfor (i = 0; i < N; i++) {\n\t\tmax = cylinders[i];\n\t\tfor (j = 0; j < i; j++) {\n\t\t\tcurrent = cylinders_pos[j] + sqrt(\n\t\t\t\t(cylinders[j] + cylinders[i]) * (cylinders[j] + cylinders[i]) -\n\t\t\t\t(cylinders[j] - cylinders[i]) * (cylinders[j] - cylinders[i]));\n\t\t\tif (current > max) max = current;\n\t\t}\n\t\tcylinders_pos[i] = max;\n\t}\n\tmax = 0;\n\tfor (i = 0; i < N; i++) {\n\t\tcurrent = cylinders_pos[i] + cylinders[i];\n\t\tif (current > max) max = current;\n\t}\n\tprintf(\"%.15f\\n\", max);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint r[502];\ndouble WID[502];\n\ndouble width(int r1, int r2)\n{\n\tif (r1 == 10001 && r2 == 10001) {\n\t\treturn 0.0;\n\t} else if (r1 == 10001) {\n\t\treturn (double)r2;\n\t} else if (r2 == 10001){\n\t\treturn (double)r1;\n\t} else\n\t\treturn 2 * sqrt((double)(r1 * r2));\n}\n\nint main(void)\n{\n\tint N,i,j,k;\n\tdouble add;\n\tscanf(\"%d\",&N);\n\tfor (int i = 1; i <= N; i++) {\n\t\tscanf(\"%d\", &r[i]);\n\t}\n\tr[0] = r[N + 1] = 10001;\n\n\tWID[0] = 0;\n\tfor (i = 1; i <= N + 1; i++) {\n\t\tWID[i] = WID[i - 1] + width(r[i - 1],r[i]);\n\t}\n\n\tfor (i = 2; i <= N; i++) {\n\t\tfor (j = 0; j + i <= N + 1; j++) {\n\t\t\tif ((add = width(r[j], r[j + i]) - (WID[j + i] - WID[j])) > 0.0) {\n\t\t\t\tfor (k = j + i; k <= N + 1; k++) {\n\t\t\t\t\tWID[k] += add;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.5lf\\n\",WID[N + 1]);\n\treturn 0;\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] > Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\n\t\tfor(int i = 0;i < N;i++){\n\n\t\t\tdouble low = r[i];\n\t\t\tdouble high = 1e8;\n\n\t\t\twhile(high - low > 1e-8){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(ans);\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n\tstatic final int INF = 2 << 28;\n\tstatic final long INF_L = 2L << 60;\n\tstatic final int  MOD = 1000000007;\n\tstatic final long MOD_L = 1000000007L;\n\tstatic final int[] vx_4 = {1,0,-1,0};\n\tstatic final int[] vy_4 = {0,1,0,-1};\n\tstatic final int[] vx_5 = {1,0,-1,0,0};\n\tstatic final int[] vy_5 = {0,1,0,-1,0};\n\tstatic final int[] vx_8 = {1,1,1,0,0,-1,-1,-1};\n\tstatic final int[] vy_8 = {1,0,-1,1,-1,1,0,-1};\n\tstatic final int[] vx_9 = {1,1,1,0,0,0,-1,-1,-1};\n\tstatic final int[] vy_9 = {1,0,-1,1,0,-1,1,0,-1};\n\t\n\tstatic int idx;\n\tstatic char[] in;\n\tpublic static void main(String[] args) {\t\n\t\tFastScanner sc = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint[] r = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tr[i] = sc.nextInt();\n\t\t}\n\t\tdouble[] x = new double[n];\n\t\tdouble[] y = new double[n];\n\t\tx[0] = r[0];\n\t\tdouble ans = x[0] + r[0];\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tdouble xMax = 0;\n\t\t\tfor(int j = i-1; j >= 0; j--) {\n\t\t\t\txMax = Math.max(xMax, Math.sqrt((r[i] + r[j])*(r[i] + r[j]) - (r[i] - r[j]) * (r[i] - r[j])) + x[j]);\n\t\t\t\txMax = Math.max(xMax, r[i]);\n\t\t\t}\n\t\t\tx[i] = xMax;\n\t\t\tans = Math.max(x[i] + r[i], ans);\n\t\t}\n\t\t\n\t\tSystem.out.printf(\"%.10f\\n\",ans);\n\t}\n\t\t\n\t\n}\n\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n    public boolean hasNext() { skipUnprintable(); return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int nextInt() {\n    \tif (!hasNext()) throw new NoSuchElementException();\n        int n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n\tstatic final int INF = 2 << 28;\n\tstatic final long INF_L = 2L << 60;\n\tstatic final int  MOD = 1000000007;\n\tstatic final long MOD_L = 1000000007L;\n\tstatic final int[] vx_4 = {1,0,-1,0};\n\tstatic final int[] vy_4 = {0,1,0,-1};\n\tstatic final int[] vx_5 = {1,0,-1,0,0};\n\tstatic final int[] vy_5 = {0,1,0,-1,0};\n\tstatic final int[] vx_8 = {1,1,1,0,0,-1,-1,-1};\n\tstatic final int[] vy_8 = {1,0,-1,1,-1,1,0,-1};\n\tstatic final int[] vx_9 = {1,1,1,0,0,0,-1,-1,-1};\n\tstatic final int[] vy_9 = {1,0,-1,1,0,-1,1,0,-1};\n\t\n\tstatic int idx;\n\tstatic char[] in;\n\tpublic static void main(String[] args) {\t\n\t\tFastScanner sc = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint[] r = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tr[i] = sc.nextInt();\n\t\t}\n\t\tdouble[] x = new double[n];\n\t\tdouble[] y = new double[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\ty[i] = r[i];\n\t\t}\n\t\tx[0] = r[0];\n\t\tdouble ans = -1;\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tdouble xMax = -1;\n\t\t\tfor(int j = i-1; j >= 0; j--) {\n\t\t\t\txMax = Math.max(xMax, Math.sqrt((r[i] + r[j])*(r[i] + r[j]) - (r[i] - r[j]) * (r[i] - r[j])) + x[j]);\n\t\t\t\txMax = Math.max(xMax, r[i]);\n\t\t\t}\n\t\t\tx[i] = xMax;\n\t\t\tans = Math.max(x[i] + r[i], ans);\n\t\t}\n\t\t\n\t\tSystem.out.printf(\"%.10f\\n\",ans);\n\t}\n\t\t\n\t\n}\n\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n    public boolean hasNext() { skipUnprintable(); return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int nextInt() {\n    \tif (!hasNext()) throw new NoSuchElementException();\n        int n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n\tstatic final int INF = 2 << 28;\n\tstatic final long INF_L = 2L << 60;\n\tstatic final int  MOD = 1000000007;\n\tstatic final long MOD_L = 1000000007L;\n\tstatic final int[] vx_4 = {1,0,-1,0};\n\tstatic final int[] vy_4 = {0,1,0,-1};\n\tstatic final int[] vx_5 = {1,0,-1,0,0};\n\tstatic final int[] vy_5 = {0,1,0,-1,0};\n\tstatic final int[] vx_8 = {1,1,1,0,0,-1,-1,-1};\n\tstatic final int[] vy_8 = {1,0,-1,1,-1,1,0,-1};\n\tstatic final int[] vx_9 = {1,1,1,0,0,0,-1,-1,-1};\n\tstatic final int[] vy_9 = {1,0,-1,1,0,-1,1,0,-1};\n\t\n\tstatic int idx;\n\tstatic char[] in;\n\tpublic static void main(String[] args) {\t\n\t\tFastScanner sc = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint[] r = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tr[i] = sc.nextInt();\n\t\t}\n\t\tdouble[] x = new double[n];\n\t\tdouble[] y = new double[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\ty[i] = r[i];\n\t\t}\n\t\tx[0] = r[0];\n\t\tdouble ans = -1;\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tdouble xMax = 0;\n\t\t\tfor(int j = i-1; j >= 0; j--) {\n\t\t\t\txMax = Math.max(xMax, Math.sqrt((r[i] + r[j])*(r[i] + r[j]) - (r[i] - r[j]) * (r[i] - r[j])) + x[j]);\n\t\t\t\txMax = Math.max(xMax, r[i]);\n\t\t\t}\n\t\t\tx[i] = xMax;\n\t\t\tans = Math.max(x[i] + r[i], ans);\n\t\t}\n\t\t\n\t\tSystem.out.printf(\"%.10f\\n\",ans);\n\t}\n\t\t\n\t\n}\n\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n    public boolean hasNext() { skipUnprintable(); return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int nextInt() {\n    \tif (!hasNext()) throw new NoSuchElementException();\n        int n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tnew Main2().run();\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint r[] = new int[n];\n\t\tfor (int i = 0; i < r.length; i++) {\n\t\t\tr[i] = sc.nextInt();\n\t\t}\n\t\tdouble c[] = new double[n];\n\t\tfor (int i = 0; i < c.length; i++) {\n\t\t\tc[i] = r[i];\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tdouble t = Math.sqrt(4 * r[i] * r[j]);\n\t\t\t\tc[i] = Math.max(c[j] + t, c[i]);\n\t\t\t}\n\t\t}\n\t\tdouble max = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmax = Math.max(max, c[i] + r[i]);\n\t\t}\n\t\tSystem.out.println(max);\n\t\tsc.close();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] > Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\t\tx[0] = r[0];\n\t\tfor(int i = 1;i < N;i++){\n\n\t\t\tdouble low = r[i] - 1e-6;\n\t\t\tdouble high = 1e6;\n\n\t\t\twhile(high - low > 1e-6){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(String.format(\"%.04f\",ans));\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        new Main().solve();\n    }\n\n    private void solve() throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n\n        int[] rs = new int[n];\n        for (int i = 0; i < n; i++) {\n            rs[i] = sc.nextInt();\n        }\n\n        double[] pos = new double[n];\n        pos[0] = rs[0];\n        for (int i = 1; i < n; i++) {\n            double minLeft = rs[i];\n            for (int j = 0; j < i; j++) {\n                double dl = 2 * Math.sqrt(rs[i] * rs[j]);\n                // System.out.println(\"dl \" + j + \",\" + i + \" = \" + dl);\n                minLeft = Math.max(minLeft, pos[j] + dl);\n            }\n            pos[i] = minLeft;\n        }\n        // System.out.println(Arrays.toString(pos));\n        double ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = Math.max(ans, pos[i] + rs[i]);\n        }\n        System.out.println(ans);\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] >= Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tr[0] = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\t\tfor(int i = 0;i < N;i++){\n\n\t\t\tdouble low = r[i];\n\t\t\tdouble high = 1e6;\n\n\t\t\tfor(int j = 0;j < 200;j++){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(String.format(\"%.06f\",ans));\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "public class Main {\n\n\tpublic void run(java.util.Scanner sc, java.io.PrintStream out) {\n\t\tfinal int n = sc.nextInt();\n\t\tfinal double[] r = new double[n];\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tr[i] = sc.nextInt();\n\t\tfinal double[] c = new double[n];\n\t\tc[0] = r[0];\n\t\tfor (int i = 1; i < n; ++i) {\n\t\t\tc[i] = r[i];\n\t\t\tfor (int j = 0; j < i; ++j) {\n\t\t\t\tc[i] = Math.max(c[i], c[j] + Math.sqrt(Math.pow(r[j] + r[i], 2) - Math.pow(r[j] - r[i], 2)));\n\t\t\t}\n\t\t}\n\t\tdouble res = 0;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tres = Math.max(res, c[i] + r[i]);\n\t\tSystem.out.printf(\"%.8f\\n\", res);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t(new Main()).run(new java.util.Scanner(System.in), System.out);\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] > Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\n\t\tfor(int i = 0;i < N;i++){\n\n\t\t\tdouble low = r[i];\n\t\t\tdouble high = 1e8;\n\n\t\t\twhile(high - low > 1e-9){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(ans);\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tdouble max = r[i];\n\t\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\t\tdouble a = r[i] - r[j];\n\t\t\t\tdouble b = r[i] + r[j];\n\t\t\t\tmax = Math.max(max,x[j] + Math.sqrt(b * b - a * a));\n\t\t\t}\n\t\t\tx[i] = max;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(String.format(\"%.08f\",ans));\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] > Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\t\tx[0] = r[0];\n\t\tfor(int i = 1;i < N;i++){\n\n\t\t\tdouble low = 0;\n\t\t\tdouble high = 1e6;\n\n\t\t\twhile(high - low > 1e-6){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(mid - r[i] >= 0 && check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(String.format(\"%.08f\",ans));\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tint[] R = new int[N];\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tR[i] = sc.nextInt();\n\t\t}\n\t\tdouble[] pos = new double[N];\n\t\tdouble max = 0;\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tdouble pp = R[i];\n\t\t\tfor(int j = 0; j < i; j++){\n\t\t\t\tdouble c = R[j] + R[i];\n\t\t\t\tdouble a = Math.abs(R[j] - R[i]);\n\t\t\t\tdouble b = Math.sqrt(c * c - a * a);\n\t\t\t\tpp = Math.max(pp, b + pos[j]);\n\t\t\t}\n\t\t\tpos[i] = pp;\n\t\t\tmax = Math.max(pos[i] + R[i], max);\n\t\t}\n\t\tSystem.out.println(max);\n\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] > Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\n\t\tfor(int i = 0;i < N;i++){\n\n\t\t\tdouble low = r[i] - 1e-8;\n\t\t\tdouble high = 1e8;\n\n\t\t\twhile(high - low > 1e-8){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(String.format(\"%.08f\",ans));\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint r[] = new int[n];\n\t\tfor (int i = 0; i < r.length; i++) {\n\t\t\tr[i] = sc.nextInt();\n\t\t}\n\t\tdouble c[] = new double[n];\n\t\tfor (int i = 0; i < c.length; i++) {\n\t\t\tc[i] = r[i];\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tdouble t = Math.sqrt(4 * r[i] * r[j]);\n\t\t\t\tc[i] = Math.max(c[j] + t, c[i]);\n\t\t\t}\n\t\t}\n\t\tdouble max = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmax = Math.max(max, c[i] + r[i]);\n\t\t}\n\t\tSystem.out.println(max);\n\t\tsc.close();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        new Main().solve();\n    }\n\n    private void solve() throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n\n        double[] rs = new double[n];\n        for (int i = 0; i < n; i++) {\n            rs[i] = sc.nextInt();\n        }\n\n        double[] pos = new double[n];\n        pos[0] = rs[0];\n        for (int i = 1; i < n; i++) {\n            double minLeft = rs[i];\n            for (int j = 0; j < i; j++) {\n                double dl = 2 * Math.sqrt(rs[i] * rs[j]);\n                // System.out.println(\"dl \" + j + \",\" + i + \" = \" + dl);\n                minLeft = Math.max(minLeft, pos[j] + dl);\n            }\n            pos[i] = minLeft;\n        }\n        // System.out.println(Arrays.toString(pos));\n        double ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = Math.max(ans, pos[i] + rs[i]);\n        }\n        System.out.printf(\"%.8f%n\", ans);\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tdouble max = r[i];\n\t\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\t\tdouble a = r[i] - r[j];\n\t\t\t\tdouble b = r[i] + r[j];\n\t\t\t\tmax = Math.max(max,x[j] + Math.sqrt(b * b - a * a));\n\t\t\t}\n\t\t\tx[i] = max;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(ans);\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] > Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\n\t\tfor(int i = 0;i < N;i++){\n\n\t\t\tdouble low = r[i] - 1e-8;\n\t\t\tdouble high = 1e6;\n\n\t\t\twhile(high - low > 1e-8){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(String.format(\"%.08f\",ans));\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint N;\n\tint[] r;\n\tdouble[] x;\n\tpublic boolean check(double mid,int i){\n\n\t\tfor(int j = i - 1;j >= 0;j--){\n\t\t\tdouble a = (mid - x[j]);\n\t\t\tdouble b = (r[i] - r[j]);\n\t\t\tif(r[i] + r[j] > Math.sqrt(a * a + b * b)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\tr = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tr[i] = nextInt();\n\t\t}\n\n\t\tx = new double[N];\n\n\t\tfor(int i = 0;i < N;i++){\n\n\t\t\tdouble low = r[i];\n\t\t\tdouble high = 1e6;\n\n\t\t\twhile(high - low > 1e-8){\n\t\t\t\tdouble mid = (high + low) / 2;\n\n\t\t\t\tif(check(mid,i)){\n\t\t\t\t\thigh = mid;\n\t\t\t\t}else{\n\t\t\t\t\tlow = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx[i] = high;\n\t\t}\n\t\tdouble ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tans = Math.max(ans,r[i] + x[i]);\n\t\t}\n\t\tout.println(ans);\n\t}\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tint[] R = new int[N];\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tR[i] = sc.nextInt();\n\t\t}\n\t\tdouble[] pos = new double[N];\n\t\tdouble max = 0;\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tdouble pp = R[i];\n\t\t\tfor(int j = 0; j < i; j++){\n\t\t\t\tdouble c = R[j] + R[i];\n\t\t\t\tdouble a = Math.abs(R[j] - R[i]);\n\t\t\t\tdouble b = Math.sqrt(c * c - a * a);\n\t\t\t\tpp = Math.max(pp, b + pos[j]);\n\t\t\t}\n\t\t\tpos[i] = pp;\n\t\t\tmax = Math.max(pos[i] + R[i], max);\n\t\t}\n\t\tSystem.out.printf(\"%.8f\\n\", max);\n\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        SqueezeTheCylinders solver = new SqueezeTheCylinders();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class SqueezeTheCylinders {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int n = in.nextInt();\n            double[] r = new double[n];\n            for (int i = 0; i < n; i++) {\n                r[i] = in.nextDouble();\n            }\n            double[] center = new double[n];\n            Arrays.fill(center, -1e9);\n            center[0] = 0;\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < i; j++) {\n                    center[i] = Math.max(center[i], center[j] + Math.sqrt((r[i] + r[j]) * (r[i] + r[j]) - (r[i] - r[j]) * (r[i] - r[j])));\n                }\n            }\n            double L = 1e9, R = -1e9;\n            for (int i = 0; i < n; i++) {\n                //System.err.println(center[i]);\n                L = Math.min(L, center[i] - r[i]);\n                R = Math.max(R, center[i] + r[i]);\n            }\n            out.printf(\"%.8f\\n\", R - L);\n        }\n\n    }\n}"
  },
  {
    "language": "Ruby",
    "code": "cylinders = []\nn = gets.to_i\ngets.split.map(&:to_i).each do |r1|\n  if cylinders.empty?\n    cylinders << [r1, r1]\n  else\n    x1 = [cylinders.map {|x2, r2| x2 + 2 * Math.sqrt(r1 * r2) }.max, r1].max\n    cylinders << [x1, r1]\n  end\nend\np cylinders.map {|x, r| x + r }.max\n"
  },
  {
    "language": "Python",
    "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 998244353\ndd = [(0,-1),(1,0),(0,1),(-1,0)]\nddn = [(0,-1),(1,-1),(1,0),(1,1),(0,1),(-1,-1),(-1,0),(-1,1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    rr = []\n\n    while True:\n        n = I()\n        a = LI()\n\n        l = len(a)\n        if l == 1:\n            rr.append(a[0]*2)\n            break\n        r = a[0] * 2\n        p = [a[0]]\n        for i in range(1,n):\n            c = a[i]\n            cp = c\n            for j in range(i):\n                b = a[j]\n                bp = p[j]\n                t = abs(b-c)\n                u = ((b+c)**2 - t**2) ** 0.5\n                tp = bp + u\n                if cp < tp:\n                    cp = tp\n            p.append(cp)\n            if r < cp + c:\n                r = cp + c\n\n        rr.append('{:00.9f}'.format(r))\n        break\n\n    return '\\n'.join(map(str, rr))\n\n\nprint(main())\n\n\n"
  },
  {
    "language": "Python",
    "code": "def solve():\n    N = int(input())\n    c = [int(i) for i in input().split()]\n\n    if N == 1:\n        return c[0] *2\n    r = c[0]*2\n    x = [c[0]]\n    for i in range(1,N):\n        r_ = c[i]\n        r_n = r_\n        for j in range(i):\n            b = c[j]\n            x_= x[j]\n\n            dt = 2 * ((r_*b)**(1/2))\n            x_ += dt\n            r_n = max(r_n,x_)\n        x.append(r_n)\n        if r < r_n + r_:\n            r = r_n +r_\n    #print(x)\n    return r\n    \nprint(solve())\n\n"
  },
  {
    "language": "Python",
    "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 998244353\ndd = [(0,-1),(1,0),(0,1),(-1,0)]\nddn = [(0,-1),(1,-1),(1,0),(1,1),(0,1),(-1,-1),(-1,0),(-1,1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    rr = []\n\n    while True:\n        n = I()\n        a = LI()\n\n        t = [a[0]]\n        for c in a[1:]:\n            b = t[-1]\n            if b <= c:\n                t.append(c)\n                continue\n            tt = b - c\n            k = ((b+c) ** 2 - tt**2) ** 0.5\n            if k > b:\n                t.append(c)\n        a = t[::-1]\n        t = [a[0]]\n        for c in a[1:]:\n            b = t[-1]\n            if b <= c:\n                t.append(c)\n                continue\n            tt = b - c\n            k = ((b+c) ** 2 - tt**2) ** 0.5\n            if k > b:\n                t.append(c)\n        a = t[::-1]\n\n        l = len(a)\n        if l == 1:\n            rr.append(a[0]*2)\n            break\n        r = a[0] + a[-1]\n        for i in range(l-1):\n            b = a[i]\n            c = a[i+1]\n            if b == c:\n                r += b + c\n                continue\n            t = abs(b-c)\n            r += ((b+c) ** 2 - t**2) ** 0.5\n\n        rr.append('{:00.9f}'.format(r))\n        break\n\n    return '\\n'.join(map(str, rr))\n\n\nprint(main())\n\n\n"
  },
  {
    "language": "Rust",
    "code": "extern crate core;\n\nuse std::fmt;\nuse std::cmp::{Ordering, min, max};\nuse std::fmt::{Display, Error, Formatter};\nuse std::ops::{Index, IndexMut, Add, AddAssign, Sub, SubAssign, Mul, MulAssign};\nuse std::collections::VecDeque;\nuse std::f32::MAX;\n\nfn show<T: Display>(vec: &Vec<T>) {\n    if vec.is_empty() {\n        println!(\"[]\");\n    }else {\n        print!(\"[{}\", vec[0]);\n        for i in 1 .. vec.len() {\n            print!(\", {}\", vec[i]);\n        }\n        println!(\"]\");\n    }\n}\nmacro_rules! read_line{\n    () => {{\n        let mut line = String::new();\n        std::io::stdin().read_line(&mut line).ok();\n        line\n    }};\n    (delimiter: ' ') => {\n        read_line!().split_whitespace().map(|x|x.to_string()).collect::<Vec<_>>()\n    };\n    (delimiter: $p:expr) => {\n        read_line!().split($p).map(|x|x.to_string()).collect::<Vec<_>>()\n    };\n    (' ') => {\n        read_line!(delimiter: ' ')\n    };\n    ($delimiter:expr) => {\n        read_line!(delimiter: $delimiter)\n    };\n    (' '; $ty:ty) => {\n        read_line!().split_whitespace().map(|x|x.parse::<$ty>().ok().unwrap()).collect::<Vec<$ty>>()\n    };\n    ($delimiter:expr; $ty:ty) => {\n        read_line!($delimiter).into_iter().map(|x|x.parse::<$ty>().ok().unwrap()).collect::<Vec<$ty>>()\n    };\n}\nmacro_rules! let_all {\n    ($($n:ident:$t:ty),*) => {\n        let line = read_line!(delimiter: ' ');\n        let mut iter = line.iter();\n        $(let $n:$t = iter.next().unwrap().parse().ok().unwrap();)*\n    };\n}\n\nstruct Circle {\n    radius: f64\n}\nimpl Circle {\n    fn new(radius: i32) -> Circle {\n        Circle {radius: radius as f64}\n    }\n}\nstruct Cylinder {\n    radius: f64, position: f64\n}\nimpl Cylinder {\n\n    fn horizontal_distance(&self, other: &Circle) -> f64 {\n        let diff = self.radius - other.radius;\n        let sum = self.radius + other.radius;\n        (sum * sum - diff * diff).sqrt()\n    }\n}\nfn main() {\n    let_all!(n: usize);\n    let circles: Vec<_> = (read_line!(' '; f64) as Vec<f64>).iter().map(|&r| Circle {radius: r}).collect();\n    let mut cylinders = Vec::new();\n    for c in &circles {\n        if cylinders.is_empty() {\n            cylinders.push(Cylinder{radius: c.radius, position: c.radius});\n        }else {\n            let mut max = c.radius;\n            for o in &cylinders {\n                let new_pos = o.horizontal_distance(c) + o.position;\n                if max < new_pos {\n                    max = new_pos;\n                }\n            }\n            cylinders.push(Cylinder{radius: c.radius, position: max});\n        }\n    }\n    let mut result = 0_f64;\n    for c in &cylinders {\n        if result < c.position + c.radius {\n            result = c.position + c.radius;\n        }\n    }\n    println!(\"{:.*}\", 15, result);\n}\n"
  }
]