You noticed that your close friend Misawa's birthday is approaching, and you decided to gift them a rooted binary tree. A rooted binary tree is a graph structure where each vertex has exactly one vertex called its parent, except for one vertex called the root, which does not have a parent. Each vertex has either one left child or none, and either one right child or none. You want to create a new rooted binary tree by overlaying two rooted binary trees you purchased. Each vertex of the trees has a non-negative integer. Your goal is to create a new rooted binary tree that performs the following steps: 1) The new tree's root contains the sum of the integers at the roots of the two original trees. 2) If both roots have left children, create a new tree by combining their left children and set it as the left child of the new root. Otherwise, the new root does not have a left child. 3) If both roots have right children, create a new tree by combining their right children and set it as the right child of the new root. You will be given the information about the two trees, and you have to write a program to determine the resulting new rooted binary tree. The information of a rooted binary tree is represented as a string in the format (left child representation)[integer at root](right child representation). An empty tree is represented by an empty string. You need to output the information of the new tree in a single line, avoiding unnecessary whitespace.