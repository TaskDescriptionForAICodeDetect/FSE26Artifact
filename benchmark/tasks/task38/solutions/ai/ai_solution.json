[
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "Python",
    "code": "def solve_restaurant_seating(n, a, b, groups):\n    one_seater_tables = a\n    two_seater_tables = b\n    partially_occupied_tables = 0\n    denied_people = 0\n\n    for group_size in groups:\n        if group_size == 1:\n            if one_seater_tables > 0:\n                one_seater_tables -= 1\n            elif partially_occupied_tables > 0:\n                partially_occupied_tables -= 1\n            elif two_seater_tables > 0:\n                two_seater_tables -= 1\n                partially_occupied_tables += 1\n            else:\n                denied_people += 1\n        else:  # group_size == 2\n            if two_seater_tables > 0:\n                two_seater_tables -= 1\n            else:\n                denied_people += 2\n\n    return denied_people\n\ndef main():\n    n, a, b = map(int, input().split())\n    groups = list(map(int, input().split()))\n    result = solve_restaurant_seating(n, a, b, groups)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()",
    "timestamp": "2025-08-05 17:32:34"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "Python",
    "code": "n, a, b = map(int, input().split())\ngroups = list(map(int, input().split()))\ndenied = 0\noccupied_half = 0  # two-seater tables with one person\n\nfor group in groups:\n    if group == 1:\n        if a > 0:\n            a -= 1\n        else:\n            if b > 0:\n                b -= 1\n                occupied_half += 1\n            elif occupied_half > 0:\n                occupied_half -= 1\n            else:\n                denied += 1\n    else:\n        if b > 0:\n            b -= 1\n        else:\n            denied += 2\nprint(denied)",
    "timestamp": "2025-08-05 17:32:43"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def denied_service(n, a, b, groups):\n    denied = 0\n    one_seater = a\n    two_seater = b\n    one_person_on_two_seater = 0\n\n    for t in groups:\n        if t == 1:\n            if one_seater > 0:\n                one_seater -= 1\n            elif two_seater > 0:\n                two_seater -= 1\n                one_person_on_two_seater += 1\n            elif one_person_on_two_seater > 0:\n                one_person_on_two_seater -= 1\n            else:\n                denied += 1\n        else:  # t == 2\n            if two_seater > 0:\n                two_seater -= 1\n            else:\n                denied += 2\n    \n    return denied\n\n# Sample Input/Output to test the function\n# Input: 4 1 2\n#        1 2 1 1\n# Output: 0\nprint(denied_service(4, 1, 2, [1, 2, 1, 1]))\n\n# Input: 4 1 1\n#        1 1 2 1\n# Output: 2\nprint(denied_service(4, 1, 1, [1, 1, 2, 1]))",
    "timestamp": "2025-08-12 21:54:11"
  }
]