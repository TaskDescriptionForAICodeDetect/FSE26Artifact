[
  {
    "language": "Scala",
    "code": "import scala.io.StdIn.{readInt,readLine}\n\nobject Main {\n  def isWinner(a:Array[(Int,String)]) = {\n    var flg = 1\n    for(i<-0 to 2) {\n      val buf = Array(a(i*3),a(i*3+1),a(i*3+2)).sorted\n      if(buf.map(_._2).distinct.length>1) flg = 0\n      if(buf(0)._1+1 != buf(1)._1 || buf(1)._1+1 != buf(2)._1) {\n        if(buf.map(_._1).distinct.length>1) flg = 0\n      }\n    }\n    flg\n  }\n\n  def main(args:Array[String]) = {\n    val t = readInt\n    for(i<-1 to t) {\n      val a = (readLine.split(\" \").map(_.toInt) zip readLine.split(\" \")) .sortWith{ (x,y)=>\n        if(x._2<y._2) true\n        else if(x._2==y._2) {\n          x._1<y._1\n        } else false\n      }\n      println(isWinner(a))\n    }\n  }\n}"
  },
  {
    "language": "Scala",
    "code": "import scala.io.StdIn.{readInt,readLine}\nimport scala.collection.mutable.ListBuffer\n\nobject Main {\n  def isWinner(a:Array[(Int,String)]) = {\n    def scan(a:List[(Int,String)]):Int = {\n      a match {\n        case Nil => 1\n        case hd1::hd2::hd3::tail if hd1._2!=hd2._2 || hd2._2!=hd3._2 => 0\n        case hd1::hd2::hd3::tail if(hd1._1==hd2._1 && hd2._1==hd3._1) => scan(tail)\n        case hd::tail => {\n          val buf = new ListBuffer[(Int,String)]\n          var (x1,x2) = (false,false)\n          for(i<-tail) {\n            if(i._1==(hd._1+1) && !x1) { x1 = true }\n            else if(i._1==(hd._1+2) && !x2) { x2 = true }\n            else buf += i\n          }\n          if(x1 && x2) scan(buf.toList)\n          else 0\n        }\n      }\n    }\n    scan(a.toList)\n  }\n\n  def main(args:Array[String]) = {\n    val t = readInt\n    for(i<-1 to t) {\n      val a = (readLine.split(\" \").map(_.toInt) zip readLine.split(\" \")) .sortWith{ (x,y)=>\n        if(x._2<y._2) true\n        else if(x._2==y._2) {\n          x._1<y._1\n        } else false\n      }\n      println(isWinner(a))\n    }\n  }\n}"
  },
  {
    "language": "Scala",
    "code": "import scala.io.StdIn.{readInt,readLine}\nimport scala.collection.mutable.ListBuffer\n\nobject Main {\n  def isWinner(a:Array[(Int,String)]) = {\n    def scan(a:List[(Int,String)]):Int = {\n      a match {\n        case Nil => 1\n        case hd1::hd2::hd3::tail if hd1._2!=hd2._2 || hd2._2!=hd3._2 => 0\n        case hd1::hd2::hd3::tail if(hd1._1==hd2._1 && hd2._1==hd3._1) => scan(tail)\n        case hd::tail => {\n          val buf = new ListBuffer[(Int,String)]\n          var (x1,x2) = (false,false)\n          for(i<-tail) {\n            if(i._1==(hd._1+1) && !x1) { x1 = true }\n            else if(i._1==(hd._1+2) && !x2) { x2 = true }\n            else buf += i\n          }\n          if(x1 && x2) scan(buf.toList)\n          else 0\n        }\n      }\n    }\n    scan(a.toList)\n  }\n\n  def main(args:Array[String]) = {\n    val t = readInt\n    for(i<-1 to t) {\n      val a = (readLine.split(\" \").map(_.toInt) zip readLine.split(\" \")) .sortWith{ (x,y)=>\n        if(x._2<y._2) true\n        else if(x._2==y._2) {\n          x._1<y._1\n        } else false\n      }\n      println(isWinner(a))\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint T; pair<int, int>x[9], y[9];\nvector<int>vec;\nint main() {\n\tcin >> T;\n\tfor (int i = 0; i < T; i++) {\n\t\tfor (int j = 0; j < 9; j++) { cin >> y[j].second; }\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tchar c; cin >> c;\n\t\t\tif (c == 'R') { y[j].first = 0; }\n\t\t\tif (c == 'G') { y[j].first = 1; }\n\t\t\tif (c == 'B') { y[j].first = 2; }\n\t\t}\n\t\tbool OK2 = false;\n\t\tint a[9] = { 0,1,2,3,4,5,6,7,8 };\n\t\tdo {\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tx[a[j]] = y[j];\n\t\t\t}\n\t\t\tbool OK = true;\n\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\tif (x[j * 3].first != x[j * 3 + 1].first) { OK = false; }\n\t\t\t\tif (x[j * 3 + 1].first != x[j * 3 + 2].first) { OK = false; }\n\t\t\t\tif (x[j * 3].second != x[j * 3 + 1].second) { goto E; }\n\t\t\t\tif (x[j * 3 + 1].second != x[j * 3 + 2].second) { OK = false; }\n\t\t\t\tgoto F; E:;\n\t\t\t\tif (x[j * 3].second + 1 != x[j * 3 + 1].second) { OK = false; }\n\t\t\t\tif (x[j * 3 + 1].second + 1 != x[j * 3 + 2].second) { OK = false; }\n\t\t\tF:;\n\t\t\t}\n\t\t\tif (OK == true) { OK2 = true; }\n\t\t} while (next_permutation(a, a + 9));\n\t\tif (OK2 == true) { vec.push_back(1); }\n\t\telse { vec.push_back(0); }\n\t}\n\tfor (int i = 0; i < vec.size(); i++) { cout << vec[i] << endl; }\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint T, card[16];\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\")card[i] += 20;\n\t\t}\n\t}\n\tcout << win() << endl;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b&&b == c)return 1;\n\telse return 0;\n}\n\nbool is_sequence(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2)return 1;\n\telse return 0;\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2])\n\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo{\n\t\tif (is_all_good_set)\n\t\t\treturn 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n  int T;\n  int num[9];\n  char color[9];\n  int r[9], g[9], b[9];\n  cin >> T;\n\n  while (T > 0) {\n    for (int i = 0; i < 9; i++) cin >> num[i];\n    for (int i = 0; i < 9; i++) cin >> color[i];\n  \n    // initialize\n    for (int i = 0; i < 9; i++) r[i] = g[i] = b[i] = 0;\n\n    int ri = 0, gi = 0, bi = 0;\n    for (int i = 0; i < 9; i++) {\n      if (color[i] == 'R') {\n\tr[ri] = num[i];\n\tri++;\n      } else if (color[i] == 'G') {\n\tg[gi] = num[i];\n\tgi++;\n      } else if (color[i] == 'B') {\n\tb[bi] = num[i];\n\tbi++;\n      }\n    }\n\n    sort(r,r+9);\n    sort(g,g+9);\n    sort(b,b+9);\n\n    int result = 0;\n    for (int i = 0; i < 7; i+=3) {\n      if (r[i] != 0) {\n\tif (r[i] == r[i+1] && r[i] == r[i+2]) result++;\n\tif ((r[i] == r[i+1]-1 && r[i] == r[i+2]-2) || (r[i] == r[i+1]-1 && r[i] == r[i+3]-2)) result++;\n      }\n      if (g[i] != 0) {\n\tif (g[i] == g[i+1] && g[i] == g[i+2]) result++;\n\tif ((g[i] == g[i+1]-1 && g[i] == g[i+2]-2) || (g[i] == g[i+1]-1 && g[i] == g[i+3]-2)) result++;\n      }\n      if (b[i] != 0) {\n\tif (b[i] == b[i+1] && b[i] == b[i+2]) result++;\n\tif ((b[i] == b[i+1]-1 && b[i] == b[i+2]-2) || (b[i] == b[i+1]-1 && b[i] == b[i+3]-2)) result++;\n      }\n    }\n    if (result == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n    T--;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint T; pair<int, int>x[9], y[9];\nvector<int>vec;\nint main() {\n\tcin >> T;\n\tfor (int i = 0; i < T; i++) {\n\t\tfor (int j = 0; j < 9; j++) { cin >> y[j].second; }\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tchar c; cin >> c;\n\t\t\tif (c == 'R') { y[j].first = 0; }\n\t\t\tif (c == 'G') { y[j].first = 1; }\n\t\t\tif (c == 'B') { y[j].first = 2; }\n\t\t}\n\t\tbool OK2 = false;\n\t\tint a[9] = { 0,1,2,3,4,5,6,7,8 };\n\t\tdo {\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\ty[a[j]] = x[j];\n\t\t\t}\n\t\t\tbool OK = true;\n\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\tif (x[j * 3].first != x[j * 3 + 1].first) { OK = false; }\n\t\t\t\tif (x[j * 3 + 1].first != x[j * 3 + 2].first) { OK = false; }\n\t\t\t\tif (x[j * 3].second != x[j * 3 + 1].second) { goto E; }\n\t\t\t\tif (x[j * 3 + 1].second != x[j * 3 + 2].second) { OK = false; }\n\t\t\t\tgoto F; E:;\n\t\t\t\tif (x[j * 3].second + 1 != x[j * 3 + 1].second) { OK = false; }\n\t\t\t\tif (x[j * 3 + 1].second + 1 != x[j * 3 + 2].second) { OK = false; }\n\t\t\tF:;\n\t\t\t}\n\t\t\tif (OK == true) { OK2 = true; }\n\t\t} while (next_permutation(a, a + 9));\n\t\tif (OK2 == true) { vec.push_back(1); }\n\t\telse { vec.push_back(0); }\n\t}\n\tfor (int i = 0; i < vec.size(); i++) { cout << vec[i] << endl; }\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\n/* typedef */\n\n/* global variables */\n\nint nis[9];\nint ccds[3][9], csums[3];\n\n/* subroutines */\n\nbool rec(int k, int *cds) {\n  if (k == 0) return true;\n\n  for (int i = 0; i < 9; i++)\n    if (cds[i] >= 3) {\n      cds[i] -= 3;\n      bool ok = rec(k - 3, cds);\n      cds[i] += 3;\n      if (ok) return true;\n    }\n\n  for (int i = 0; i < 7; i++)\n    if (cds[i] && cds[i + 1] && cds[i + 2]) {\n      cds[i]--, cds[i + 1]--, cds[i + 2]--;\n      bool ok = rec(k - 3, cds);\n      cds[i]++, cds[i + 1]++, cds[i + 2]++;\n      if (ok) return true;\n    }\n\n  return false;\n}\n\n/* main */\n\nint main() {\n  int tn;\n  cin >> tn;\n  while (tn--) {\n    memset(ccds, 0, sizeof(ccds));\n    memset(csums, 0, sizeof(csums));\n\n    for (int i = 0; i < 9; i++) cin >> nis[i];\n    for (int i = 0; i < 9; i++) {\n      char c;\n      cin >> c;\n      int ci = (c == 'R') ? 0 : (c == 'G') ? 1 : 2;\n\n      ccds[ci][nis[i] - 1]++;\n      csums[ci]++;\n    }\n\n    if (false)\n      for (int i = 0; i < 3; i++) {\n\tfor (int j = 0; j < 9; j++) cout << ccds[i][j] << ' ';\n\tcout << \"= \" << csums[i] << endl;\n      }\n\n    bool ok = true;\n    for (int i = 0; ok && i < 3; i++)\n      ok = (csums[i] % 3 == 0) && rec(csums[i], ccds[i]);\n\n    cout << ok << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n \nint main(){\n  int n;\n  cin>>n;\n  int cards[9];\n  char color;\n  int num[3][9];\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++)\n      for(int k=0;k<9;k++)num[j][k]=0;\n    for(int j=0;j<9;j++) cin>>cards[j];\n    for(int j=0;j<9;j++){\n      cin>>color;\n      if(color=='R'){\n    num[0][cards[j]-1]++;\n      }else if(color=='G'){\n    num[1][cards[j]-1]++;\n      }else{\n    num[2][cards[j]-1]++;\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<7;j++){\n    while(num[k][j]>=3)num[k][j]-=3;\n    while(num[k][j]>0 && num[k][j+1]>0 && num[k][j+2]>0){\n      num[k][j]--;num[k][j+1]--;num[k][j+2]--;\n    }\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    while(num[k][j]>=3)num[k][j]-=3;\n      }\n    }\n    bool ans=true;\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    //cout << num[k][j] << \" \" ;\n    if(num[k][j]!=0){\n      ans=false;\n      break;\n    }\n      }\n      //cout << endl;\n    }\n    if(ans==true) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\nbool is_winner(int n[], char c[]) {\n    pair<char, int> cn[9];\n    for (int i = 0; i < 9; ++i) {\n        cn[i].first = c[i];\n        cn[i].second = n[i];\n    }\n    sort(cn, cn + 9);\n    for (int i = 0; i < 3; ++i) {\n        bool is_same_color = true;\n        bool is_continuous = true;\n        bool is_same_number = true;\n        for (int j = 0; j < 2; ++j) {\n            is_same_color = (is_same_color &&\n                             cn[3 * i + j].first == cn[3 * i + j + 1].first);\n            is_continuous = (is_continuous &&\n                             cn[3 * i + j].second + 1 == cn[3 * i + j + 1].second);\n            is_same_number = (is_same_number &&\n                              cn[3 * i + j].second == cn[3 * i + j + 1].second);\n        }\n        if (is_same_color && (is_continuous || is_same_number)) {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n\nint main() {\n    int t;\n    int n[9];\n    char c[9];\n    cin >> t;\n    for (int i = 0; i < t; ++i) {\n        for (int i = 0; i < 9; ++i) {\n            cin >> n[i];\n        }\n        for (int i = 0; i < 9; ++i) {\n            cin >> c[i];\n        }\n        if (is_winner(n, c)) {\n            cout << 1 << endl;\n        } else {\n            cout << 0 << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c) {\n  return a == c && b == c;\n}\nbool is_sequence(int a, int b, int c) {\n  return a + 2 == c && b + 1 == c;\n}\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set() {\n  return is_good_set(card[0], card[1], card[2])\n    && is_good_set(card[3], card[4], card[5])\n    && is_good_set(card[6], card[7], card[8]);\n}\nint win() {\n  sort(card, card+9);\n  do {\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;++i)\n#define rep1(i,n) for(int i=1;i<=n;++i)\n#define ALL(c) (c).begin(),(c).end()\ntypedef pair<char,int> P;\nP c[9];\nbool able(vector<int> num){\n\trep(i,7){\n\t\tif(num[i]){\n\t\t\tnum[i]--;\n\t\t\tif(num[i+1]==0 || num[i+2]==0) return false;\n\t\t\tnum[i+1]--;\n\t\t\tnum[i+2]--;\n\t\t\ti--;\n\t\t}\n\t}\n\tif(num[7]==0 && num[8]==0) return true;\n\telse return false;\n}\nbool ans(char ch){\n\t\tvector<int> num(9);\n\t\tvector<int> three;\n\t\trep(i,9) if(c[i].first==ch) num[c[i].second]++;\n\t\trep(i,9) if(num[i]>=3) three.push_back(i);\n\t\tif(three.size()==3) return true;\n\t\tif(three.size()==2){\n\t\t\tvector<int> cop=num;\n\t\t\tif(able(num)) return true;\n\t\t\tnum[three[0]]-=3;\n\t\t\tif(able(num)) return true;\n\t\t\tnum=cop;\n\t\t\tnum[three[1]]-=3;\n\t\t\tif(able(num)) return true;\n\t\t\tnum[three[0]]-=3;\n\t\t\tif(able(num)) return true;\n\t\t\treturn false;\n\t\t}\n\t\tif(three.size()==1){\n\t\t\tif(able(num)) return true;\n\t\t\tnum[three[0]]-=3;\n\t\t\tif(able(num)) return true;\n\t\t\treturn false;\n\t\t}\n\t\tif(three.size()==0){\n\t\t\tif(able(num)) return true;\n\t\t\treturn false;\n\t\t}\n}\nint main(){\n\tint t;\n\tcin >> t;\n\trep(k,t){\n\t\trep(i,9) cin >> c[i].second;\n\t\trep(i,9) cin >> c[i].first;\n\t\trep(i,9) c[i].second--;\n\t\tsort(c,c+9);\n\t\tif(ans('R')&&ans('G')&&ans('B')) cout << 1 << endl;\n\t\telse cout << 0 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nbool prev_p(int*,int*);\nvoid swap(int*,int*);\nvoid reverse(int *,int*);\nbool check(vector<int> &,vector<int> &,vector<int> &);\nint check(vector<int> &);\nint main(){\n  int n;\n  cin >> n;\n  int num[9];\n  char col[9];\n  vector<int> R;\n  vector<int> G;\n  vector<int> B;\n  \n  \n  while(--n >=  0){\n\n    for(int i = 0;i < 9;i++){\n      cin >> num[i];\n      //cout << \"aaaaa\";\n\n    }\n    //    cout << \"bb\";\n    for(int i = 0;i < 9;i++){\n      //cout << \"bb\";\n      cin >> col[i];\n      \n    }\n    for(int i = 0;i < 9;i++){\n      if(col[i] == 'R')R.push_back(num[i]);\n      else if(col[i] == 'G')G.push_back(num[i]);\n      else B.push_back(num[i]);\n    }\n    sort(R.begin(),R.end());\n    sort(G.begin(),G.end());\n    sort(B.begin(),B.end());\n    if(check(R,G,B))cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n    R.clear();\n    G.clear();\n    B.clear();\n    \n    \n  }\n}\nbool check(vector<int> &r,vector<int> &g,vector<int> &b){\n  int count = 0;\n  count = check(r);\n  count = count + check(g);\n  count = count + check(b);\n  if(count == 3)return true;\n  \n  return false;\n  \n}\nint check(vector<int> &v){\n  int max = 0;\n  \n  do{\n    vector<int>::iterator it = v.begin();\n    int array[3];\n    int i = 0;\n    int tmp = 0;\n    int count = 0;\n    \n    while(it != v.end()){\n      int flag = 0;\n      array[i] = *it;\n      if(i == 2){\n\ti = -1;\n\tif(array[0] == array[1] && array[1] == array[2])count++;\n\telse if(array[0]-array[1] == -1 && array[1]-array[2] == -1)count++;\n\t\n\t\n      }\n      ++i;\n      ++it;\n      \n    }\n    if(count > max)max =count;\n  } while(next_permutation(v.begin(),v.end()));\n  \n    return max;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  // sort(card,card+10);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == \"G\") card[i] += 10;\n        else if (color == \"B\") card[i] += 20;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define P pair<ll,ll>\n#define FOR(I,A,B) for(ll I = (A); I < (B); ++I)\n#define FORR(I,A,B) for(ll I = (B-1); I >= (A); --I)\n#define SORT(x) (sort(x.begin(),x.end())) // 0 2 2 3 4 5 8 9\n#define REV(x) (reverse(x.begin(),x.end())) //reverse\nll gcd(ll a,ll b){if(a<b)swap(a,b);if(a%b==0)return b;else return gcd(b,a%b);}\nll lcm(ll a,ll b){ll c=gcd(a,b);return ((a/c)*(b/c)*c);}//saisyo kobaisu\n#define NEXTP(x) next_permutation(x.begin(),x.end())\nconst ll INF=1e18+7;\nconst ll MOD=1e9+7;\n\n\ntypedef pair<char,int> CI;\nbool check1(CI x,CI y,CI z){\n\tif(x.first!=y.first || y.first!=z.first)return false;\n\tif(x.second==y.second && y.second == z.second) return true;\n\tif(x.second+1==y.second && y.second+1==z.second) return true;\n\treturn false;\n}\nbool check(vector<CI> v){\n\treturn check1(v[0],v[1],v[2])&&check1(v[3],v[4],v[5])&&check1(v[6],v[7],v[8]);\n}\n\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint T;\n\tcin >> T;\n\tFOR(t,0,T){\n\t\tvector<CI> cards(9);\n\t\tFOR(i,0,9)cin>>cards[i].second;\n\t\tFOR(i,0,9)cin>>cards[i].first;\n\t\tSORT(cards);\n\t\tbool ok = false;\n\t\tdo{\n\t\t\tif(check(cards))ok=true;\n\t\t}while(NEXTP(cards));\n\t\tif(ok) cout << 1 << endl;\n\t\telse cout << 0 << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<deque>\n#include<vector>\n#include<map>\nusing namespace std;\n\nint main(){\n  int T;\n  deque<int> R,B,G;\n  int inx[10];\n  char iny;\n  map<int,int> Ri,Bi,Gi;\n\n\n\n  cin >> T;\n  while(T-- > 0){\n    R.clear();B.clear();G.clear();\n    Ri.clear();Bi.clear();Gi.clear();\n    for(int i=0;i<9;i++){\n      cin >> inx[i];\n    }\n    for(int j=0;j<9;j++){\n      cin >> iny;\n      if(iny == 'R'){\n\tR.push_back(inx[j]);\n\tRi[inx[j]]++;\n      }\n      else if(iny == 'B'){\n\tB.push_back(inx[j]);\n\tBi[inx[j]]++;\n      }\n      else if(iny == 'G'){\n\tG.push_back(inx[j]);\n\tGi[inx[j]]++;\n      }\n    }\n\n    sort(R.begin(),R.end());\n    sort(B.begin(),B.end());\n    sort(G.begin(),G.end());\n\n    int tp;\n    for(int i=0;i<3;i++){\n      if(R.size() < 3)break;\n      tp = R.front();\n      if((Ri[tp+1]>0 && Ri[tp+2]>0)){\n\tR.pop_front();\n\tdeque<int>::iterator Rit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+1 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+2 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRi.clear();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n      else if(Ri[tp] >= 3){\n\tR.pop_front();R.pop_front();R.pop_front();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n\n    }\n\n\n for(int i=0;i<3;i++){\n   if(B.size() < 3)breal;\n      tp = B.front();\n      if((Bi[tp+1]>0 && Bi[tp+2]>0)){\n\tB.pop_front();\n\tdeque<int>::iterator Bit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+1 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+2 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBi.clear();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n      else if(Bi[tp] >= 3){\n\tB.pop_front();B.pop_front();B.pop_front();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n    }\n\n for(int i=0;i<3;i++){\n   if(G.size() < 3)break;\n      tp = G.front();\n      if((Gi[tp+1]>0 && Gi[tp+2]>0)){\n\tG.pop_front();\n\tdeque<int>::iterator Git = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+1 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGit = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+2 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGi.clear();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n      else if(Gi[tp] >= 3){\n\tG.pop_front();G.pop_front();G.pop_front();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n\n    }\n\n\n\n if(R.empty() && G.empty() && B.empty() )cout << \"1\" << endl;\n else cout << \"0\" << endl;\n\n\n\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <array>\n#include <string>\nusing namespace std;\n\nint T;\nvector<int> card(16);\n\nbool is_same_number(int a, int b, int c) {\n    if (a == b && b == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\nbool is_sequence(int a, int b, int c) {\n    if (a+2 == b+1 && b+1 == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool is_good_set(int a, int b, int c) {\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n    for (int i = 0; i < 9; i++){\n        cout << card[i] << \" \" ;\n    }\n    cout << endl;\n    sort(card.begin(), card.begin()+9);\n    if (is_good_set(card[0], card[1], card[2]) &&\n        is_good_set(card[3], card[4], card[5]) &&\n        is_good_set(card[6], card[7], card[8])){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nint main() {\n    cin >> T;\n    for (int t=0; t<T; ++t) {\n        for (int i=0; i<9; ++i) {\n            cin >> card[i];\n            cout << card[i] << \" \" ;\n        }\n        cout << endl;\n        string color;\n        for (int i=0; i<9; ++i) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n        if (is_all_good_set()){\n            cout << \"1\" << endl;\n        } else {\n            cout << \"0\" << endl;\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint T, card[9];\n\nbool is_same_number(int a, int b, int c) {\n  return (a==b && b==c) && c==a;\n}\n\nbool is_sequence (int a, int b, int c) {\n  return (a+2==b+1 && b+1==c) && c==a+2;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation (card, card+9));\n  return 0;\n}\n  \nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] +=10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define M_PI       3.14159265358979323846\n\nusing namespace std;\n\n//conversion\n//------------------------------------------\ninline int toInt(string s) { int v; istringstream sin(s); sin >> v; return v; }\ntemplate<class T> inline string toString(T x) { ostringstream sout; sout << x; return sout.str(); }\ninline int readInt() { int x; scanf(\"%d\", &x); return x; }\n\n//typedef\n//------------------------------------------\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef pair<int, PII> TIII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\n\n\n//container util\n\n//------------------------------------------\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define SQ(a) ((a)*(a))\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n//repetition\n//------------------------------------------\n#define FOR(i,s,n) for(int i=s;i<(int)n;++i)\n#define REP(i,n) FOR(i,0,n)\n#define MOD 1000000007\n\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define trav(a, x) for(auto& a : x)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n\n\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\nconst double EPS = 1E-8;\n\n#define chmin(x,y) x=min(x,y)\n#define chmax(x,y) x=max(x,y)\nconst int INF = 100000000;\n\nstruct Edge {\n    int to, from;\n    ll cost;\n    Edge(int from, int to, ll cost): from(from), to(to), cost(cost) {}\n};\n\nclass UnionFind {\npublic:\n    vector <ll> par; \n    vector <ll> siz; \n\n    UnionFind(ll sz_): par(sz_), siz(sz_, 1LL) {\n        for (ll i = 0; i < sz_; ++i) par[i] = i;\n    }\n    void init(ll sz_) {\n        par.resize(sz_);\n        siz.assign(sz_, 1LL);\n        for (ll i = 0; i < sz_; ++i) par[i] = i;\n    }\n\n    ll root(ll x) { \n        while (par[x] != x) {\n            x = par[x] = par[par[x]];\n        }\n        return x;\n    }\n\n    bool merge(ll x, ll y) {\n        x = root(x);\n        y = root(y);\n        if (x == y) return false;\n        if (siz[x] < siz[y]) swap(x, y);\n        siz[x] += siz[y];\n        par[y] = x;\n        return true;\n    }\n\n    bool issame(ll x, ll y) { \n        return root(x) == root(y);\n    }\n\n    ll size(ll x) { \n        return siz[root(x)];\n    }\n};\n\ntypedef vector<vector<Edge>> AdjList;\nAdjList graph;\n\nll mod_pow(ll x, ll n, ll mod){\n    ll res = 1;\n    bool c = false;\n    while(n){\n        if(n&1) res = res * x;\n\n        if(res > mod){\n            c = true;\n            res %= mod;\n        }\n        x = x * x %mod;\n        n >>= 1;\n    }\n    if(c) return mod;\n    return res;\n}\n\n#define SIEVE_SIZE 5000000+10\nbool sieve[SIEVE_SIZE];\nvoid make_sieve(){\n    for(int i=0; i<SIEVE_SIZE; ++i) sieve[i] = true;\n    sieve[0] = sieve[1] = false;\n    for(int i=2; i*i<SIEVE_SIZE; ++i) if(sieve[i]) for(int j=2; i*j<SIEVE_SIZE; ++j) sieve[i*j] = false;\n}\n\nbool isprime(ll n){\n    if(n == 0 || n == 1) return false;\n    for(ll i=2; i*i<=n; ++i) if(n%i==0) return false;\n    return true;\n}\n\ntemplate<typename T>\nvector<T> gauss_jordan(const vector<vector<T>>& A, const vector<T>& b){\n    int n = A.size();\n    vector<vector<T>> B(n, vector<T>(n+1));\n\n    for(int i=0; i<n; ++i){\n        for(int j=0; j<n; ++j){\n            B[i][j] = A[i][j];\n        }\n    }\n\n    for(int i=0; i<n; ++i) B[i][n] = b[i];\n\n    for(int i=0; i<n; ++i){\n        int pivot = i;\n        for(int j=i; j<n; ++j){\n            if(abs(B[j][i]) > abs(B[pivot][i])) pivot = j;\n        }\n        swap(B[i], B[pivot]);\n\n        if(abs(B[i][i]) < EPS) return vector<T>(); //解なし\n\n        for(int j=i+1; j<=n; ++j) B[i][j] /= B[i][i];\n        for(int j=0; j<n; ++j){\n            if(i != j){\n                for(int k=i+1; k<=n; ++k) B[j][k] -= B[i][j] * B[i][k];\n            }\n        }\n    }\n\n    vector<T> x(n);\n\n    for(int i=0; i<n; ++i) x[i] = B[i][n];\n    return x;\n    \n}\n\nll GCD(ll a, ll b){\n    if(a<b) swap(a,b);\n    if(b == 0) return a;\n    return GCD(b, a%b);\n}\n\n\ntypedef vector<ll> vec;\ntypedef vector<vec> mat;\n\nmat mul(mat &A, mat &B) {\n    mat C(A.size(), vec((int)B[0].size()));\n    for(int i=0; i<A.size(); ++i){\n        for(int k=0; k<B.size(); ++k){\n            for(int j=0; j<B[0].size(); ++j){\n                C[i][j] = (C[i][j] + A[i][k] * B[k][j] %MOD) % MOD;\n            }\n        }\n    }\n    return C;\n}\nmat mat_pow(mat A, ll n) {\n    mat B(A.size(), vec((int)A.size()));\n\n    for(int i=0; i<A.size(); ++i){\n        B[i][i] = 1;\n    }\n\n    while(n > 0) {\n        if(n & 1) B = mul(B, A);\n        A = mul(A, A);\n        n >>= 1;\n    }\n    return B;\n}\n\nbool operator<(const pii& a, const pii& b){\n    if(a.first == b.first) return a.second < b.second;\n    return a.first < b.first;\n}\n\nconst int MAX = 510000;\nlong long fac[MAX], finv[MAX], inv[MAX];\n\n// テーブルを作る前処理\nvoid COMinit() {\n    fac[0] = fac[1] = 1;\n    finv[0] = finv[1] = 1;\n    inv[1] = 1;\n    for (int i = 2; i < MAX; i++){\n        fac[i] = fac[i - 1] * i % MOD;\n        inv[i] = MOD - inv[MOD%i] * (MOD / i) % MOD;\n        finv[i] = finv[i - 1] * inv[i] % MOD;\n    }\n}\n\n// 二項係数計算\nlong long COM(int n, int k){\n    if (n < k) return 0;\n    if (n < 0 || k < 0) return 0;\n    return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n}\n\nint bit[1000010];\nint sum(int i){\n    int s = 0;\n    while(i > 0){\n        s += bit[i];\n        i -= i & -i;\n    }\n    return s;\n}\nvoid add(int i, int x){\n    while(i <= 1000010){\n        bit[i] += x;\n        i += i & -i;\n    }\n}\nlong long extGCD(long long a, long long b, long long &x, long long &y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    long long d = extGCD(b, a%b, y, x);\n    y -= a/b * x;\n    return d;\n}\n\nvector<vector<pii>> G(110);\nint ans[110];\n\nvoid dfs(int v, int c){\n    if(G[v].size()==0){\n        ans[v] += c;\n        return ;\n    }\n    \n    for(auto e: G[v]){\n        int u = e.first;\n        int need = e.second;\n\n        dfs(u, c*need);\n    }\n}\n\n\nvector<string> v;\nbool used[8][8];\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    //cout << fixed << setprecision(20);\n    \n    int T;\n    cin >> T;\n    while(T--){\n        int num[9]; \n        REP(i,9)cin >> num[i];\n\n        char color[9];\n        REP(i,9) cin >> color[i];\n\n        vector<pair<int, char>> vp;\n        REP(i, 9) vp.PB(make_pair(num[i], color[i]));\n        sort(all(vp));\n\n        bool used[9];\n        REP(i, 9) used[i] =false;\n\n        for(int i=0; i<9; i++){\n            for(int j=0; j<9; j++){\n                if(i == j) continue;\n                for(int k=0; k<9; k++){\n                    if(i==k || j == k) continue;\n                    if(used[i] || used[j] || used[k]) continue;\n\n                    if(vp[i].first+1 == vp[j].first && vp[j].first+1 == vp[k].first && vp[i].second == vp[j].second && vp[j].second == vp[k].second){\n                        used[i] = used[j] = used[k] = true;\n                        continue;\n                    }\n            \n\n                    if(vp[i].first == vp[j].first && vp[j].first == vp[k].first && vp[i].second == vp[j].second && vp[j].second == vp[k].second){\n                            used[i] = used[j] = used[k] = true;\n                    }\n                }\n            }\n        }\n\n        bool c = true;\n        for(int i=0; i<9; i++) c &= used[i];\n\n        cout << (c?1:0) << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define loop for(;;)\n#define trace(var) cerr<<\">>> \"<<#var<<\" = \"<<var<<endl;\n#define inf (1e9)\n#define eps (1e-9)\n\ntemplate<class S, class T> inline\nostream& operator<<(ostream&os, pair<S,T> p) {\n  return os << '(' << p.first << \", \" << p.second << ')';\n}\n\ntemplate<class S, class T, class U> inline\nostream& operator<<(ostream&os, tuple<S,T,U> t) {\n  return os << '('\n    << get<0>(t) << \", \"\n    << get<1>(t) << \", \"\n    << get<2>(t) << ')';\n}\n\ntemplate<class T> inline\nostream& operator<<(ostream&os, vector<T> v) {\n  if (v.size() == 0) { return os << \"(empty)\"; }\n  os << v[0];\n  for (int i=1, len=v.size(); i<len; ++i) os << ' ' << v[i];\n  return os;\n}\n\ntemplate<class T> inline\nistream& operator>>(istream&is, vector<T>&v) {\n  rep (i, v.size()) is >> v[i];\n  return is;\n}\n\nint dx[] = { -1, 0, 1, 0 };\nint dy[] = {  0, -1, 0, 1 };\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\nint ok(vi& xs) {\n  int n = xs.size();\n  if (n % 3 > 0) return 0;\n  for (int i = 0; i < n;) {\n    if (xs[i] == xs[i+2]) i += 3;\n    else if (xs[i] + 1 == xs[i+1] and xs[i+1] + 1 == xs[i+2]) i += 3;\n    else return 0;\n  }\n  return 1;\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  random_device dev;\n  mt19937 rand(dev());\n\n  int n; cin >> n;\n  rep (_, n) {\n    vi xs(9);\n    vector<char> ys(9);\n    cin >> xs;\n    cin >> ys;\n    vi as, bs, cs;\n    rep (i, 9) {\n      if (ys[i] == 'R') as.push_back(xs[i]);\n      else if (ys[i] == 'G') bs.push_back(xs[i]);\n      else cs.push_back(xs[i]);\n    }\n    sort(begin(as), end(as));\n    sort(begin(bs), end(bs));\n    sort(begin(cs), end(cs));\n    cout << (ok(as) * ok(bs) * ok(cs)) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nbool prev_p(int*,int*);\nvoid swap(int*,int*);\nvoid reverse(int *,int*);\nbool check(vector<int> &,vector<int> &,vector<int> &);\nint check(vector<int> &);\nint main(){\n  int n;\n  cin >> n;\n  int num[9];\n  char col[9];\n  vector<int> R;\n  vector<int> G;\n  vector<int> B;\n  \n  \n  while(--n >=  0){\n\n    for(int i = 0;i < 9;i++){\n      cin >> num[i];\n      //cout << \"aaaaa\";\n\n    }\n    //    cout << \"bb\";\n    for(int i = 0;i < 9;i++){\n      //cout << \"bb\";\n      cin >> col[i];\n      \n    }\n    for(int i = 0;i < 9;i++){\n      if(col[i] == 'R')R.push_back(num[i]);\n      else if(col[i] == 'G')G.push_back(num[i]);\n      else B.push_back(num[i]);\n    }\n    sort(R.begin(),R.end());\n    sort(G.begin(),G.end());\n    sort(B.begin(),B.end());\n    if(check(R,G,B))cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n    R.clear();\n    G.clear();\n    B.clear();\n    \n    \n  }\n}\nbool check(vector<int> &r,vector<int> &g,vector<int> &b){\n  int count = 0;\n  count = check(r);\n  count = count + check(g);\n  count = count + check(b);\n  if(count == 3)return true;\n  \n  return false;\n  \n}\nint check(vector<int> &v){\n  int max = 0;\n  \n  do{\n    vector<int>::iterator it = v.begin();\n    int array[3];\n    int i = 0;\n    int tmp = 0;\n    int count = 0;\n    \n    while(it != v.end()){\n      int flag = 0;\n      array[i] = *it;\n      if(i == 2){\n\ti = -1;\n\tif(array[0] == array[1] && array[1] == array[2])count++;\n\telse if(array[0]-array[1] == -1 && array[1]-array[2] == -1)count++;\n\t\n\t\n      }\n      ++i;\n      ++it;\n      \n    }\n    if(count > max)max =count;\n  } while(next_permutation(v.begin(),v.end()));\n  \n    return max;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<fstream>\n\n#define SIZE 9\n\nusing namespace std;\n\nvoid view(int A[],int n){\n\tfor(int i=0;i<n;i++){\n\t\tcout<<A[i]<<endl;\n\t}\n}\n\nint check(int kard[]){\n\tint k=0;\n\tfor(int i=0;i<SIZE;i+=3){\n\t\tif((kard[i]==kard[i+1] && kard[i+1] == kard[i+2] )||\n\t\t\t(kard[i]+1==kard[i+1] &&kard[i+1]==kard[i+2]-1)){\n\t\t}else if(kard[i] == kard[i+1] && kard[i+2] == kard[i+3] && kard[i+4] == kard[i+5]){\n\t\t\ti+=3;\n\t\t}else{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint kard[SIZE];\n\tint n;\n\tstring color;\n\tint ans;\n\n\tcin>>n;\n\twhile(n--){\n\t\tfor(int i=0;i<SIZE;i++){\n\t\t\tcin>>kard[i];\n\t\t}\n\t\tfor(int i=0;i<SIZE;i++){\n\t\t\tcin>>color;\n\t\t\tif(color == \"R\"){\n\t\t\t\tkard[i]\t+= 10;\n\t\t\t}else if(color == \"G\"){\n\t\t\t\tkard[i]\t+= 20;\n\t\t\t}else{\n\t\t\t\tkard[i]\t+= 30;\n\t\t\t}\n\t\t}\n\t\tsort(kard,kard+SIZE);\n\t\tans\t= check(kard);\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nbool renzoku(int a,int b,int c){\n\tif(a+1==b && a+2==c){\treturn true;\t}\n\telse return false;}\n\nbool onazi(int a,int b,int c){\n\tif(a==b && a==c){\treturn true;\t}\n\telse return false;}\n\nint main() \n{\n\tint n;\n\tcin >> n;\n\tfor(int k=0;k<n;k++)\n\t{\n\t\t\n\t\tint in[9]={};\n\t\t\n\t\tfor(int i=0;i<9;i++){\tcin >> in[i] ;}\n\t\t\n\t\tfor(int i=0;i<9;i++)\n\t\t{\n\t\t\tchar t;\n\t\t\tcin >> t;\n\t\t\tif(t=='G')\tin[i]+=10;\n\t\t\telse if(t=='B')\tin[i]+=20;\n\t\t}\n\t\t\n\t\tsort(in,in+9);\n\n\t\tif(\n\t\t\t\t(renzoku(in[0],in[1],in[2]) || onazi(in[0],in[1],in[2]))\n\t\t\t\t&&\n\t\t\t\t(renzoku(in[3],in[4],in[5]) || onazi(in[3],in[4],in[5]))\n\t\t\t\t&&\n\t\t\t\t(renzoku(in[6],in[7],in[8]) || onazi(in[6],in[7],in[8]))\n\t\t)\n\t\t\n\t\tprintf(\"1\\n\");\n\t\telse printf(\"0\\n\");\n\t\t\n\t}\n\treturn 0 ;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void){\n\tint card[9], n, i, j, k, s[3][9];\n\tchar c, color[4] ={\"RGB\"};\n\tscanf(\"%d\",&n);\n\tfor(i = 0;i < n;i++){\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%d\",&card[j]);\n\t\t\tcard[j]--;\n\t\t}\n\t\tgetchar();\n\t\tmemset(s,0,sizeof(s));\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%c\",&c);\n\t\t\tgetchar();\n\t\t\tfor(k = 0;k < 3;k++)\n\t\t\t\tif(color[k] == c) s[k][card[j]]++;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k] >= 3) s[j][k] -= 3;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 7;k++){\n\t\t\t\tif(s[j][k] && s[j][k + 1] && s[j][k + 2])\n\t\t\t\t\ts[j][k]--,s[j][k + 1]--,s[j][k + 2]--;\n\t\t\t}\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k]) break;\n\t\t\tif(k != 9) break;\n\t\t}\n\t\tif(j == 3)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t\tprintf(\"0\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n\nusing namespace std;\nint T;\nint card[8];\nchar color;\nbool judge;\n\nint is_win();\nbool is_all_good_set();\nbool is_good_set(int, int, int);\nbool is_same_number(int,int, int);\nbool is_sequence(int, int, int);\n\nint main(){\n  while(cin >> T){\n    \n\n    for (int i = 0; i < 9; ++i){\n      cin >> card[i];      \n    }\n\n    for (int i = 0; i < 9; ++i){\n      cin >> color;\n      if(color == 'B') card[i] += 10;\n      else if (color == 'G') {\n        card[i] += 20;\n        cout << 8888 <<endl;\n      }\n    }\n\n    cout << is_win() << endl;\n\n  }\n\nreturn 0;\n\n}\n\nint is_win(){\n\n  do{\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n\n  return 0;\n}\n\nbool is_all_good_set(){\n\n  int judge;\n  for (int i = 0; i < 3; ++i)\n  {\n    judge += is_good_set(card[3*i], card[3*i+ 1], card[3*i + 2]);\n  }\n\n  if (judge == 3) return true;\n  else return false;\n}\n\n\nbool is_good_set(int a, int b, int c){\n\n   if(is_same_number(a,b,c) ||  is_sequence(a,b,c) ) return true;\n   else return false;\n\n}\n\nbool is_same_number(int a, int b, int c){\n\n  if(a == b == c) return true;\n  else return false;\n\n} \n\nbool is_sequence(int a, int b, int c){\n\n  if( a + 2 == b + 1 == c ) return true;\n  else return false ;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#define N 9\n#define M 3\n\nusing namespace std;\n\nint CheckData(vector<int>);\n\nint main(){\n  int i, j, n, x, a, b, c, ans;\n  vector<int> data, red, green, blue;\n  string s;\n\n  cin >> n;\n\n  for(i=0; i<n; ++i){\n    for(j=0; j<N; ++j){\n      cin >> x;\n      data.push_back(x);\n    }\n    for(j=0; j<N; ++j){\n      cin >> s;\n      if(s == \"R\") red.push_back(data[j]);\n      else if(s == \"G\") green.push_back(data[j]);\n      else if(s == \"B\") blue.push_back(data[j]);\n    }\n\n    ans = 0;\n    a = CheckData(red);\n    b = CheckData(blue);\n    c = CheckData(green);\n    if(a == 1 && b == 1 && c == 1) ans = 1;\n\n    cout << ans << endl;\n\n    data.clear();\n    red.clear();\n    green.clear();\n    blue.clear();\n  }\n\n  return 0;\n}\n\nint CheckData(vector<int> data1){\n  int i, j;\n  vector<int> data2(N, 0);\n\n  if(data1.size()%M != 0) return 0;\n  if(data1.size() == 0) return 1;\n\n  for(i=0; i<data1.size(); ++i)\n    ++data2[data1[i]-1];\n\n  for(i=0; i<data2.size()-M; ++i){\n    if(data2[i]%M == 0){\n      data2[i] = 0;\n    }else if(data2[i]%M == 1){\n      data2[i] = 1;\n      for(j=i; j<i+M; ++j){\n\t--data2[j];\n\tif(data2[j] < 0) return 0;\n      }\n    }else{\n      data2[i] = 2;\n      for(j=i; j<i+M; ++j){\n\tdata2[j] -= 2;\n\tif(data2[j] < 0) return 0;\n      }\n    }\n  }\n  if(data2[7]%M != 0 || data2[8]%M != 0) return 0;\n  return 1;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  int cards[9];\n  for(int i=1; i<=n; i++){\n    /* input */\n    for(int k=0; k<9; k++){\n      cin >> cards[k];\n    }\n    for(int k=0; k<9; k++){\n      char col;\n      cin >> col;\n      switch (col) {\n        case 'R': break;\n        case 'G': cards[k] += 10; break;\n        case 'B': cards[k] += 20; break;\n      }\n    }\n\n    /* sort */\n    std::sort(&cards[0], &cards[10]);\n\n    /* judge */\n    int judge = 0;\n    for(int k=1; k<=3; k++){\n      int ind = 3*(k-1);\n      if( ((cards[ind] == cards[ind+1])\n        && (cards[ind+1] == cards[ind+2])) ||\n          (((cards[ind+1] - cards[ind]) == 1)\n        && ((cards[ind+2] - cards[ind+1]) == 1)) ){\n        judge += 1;\n      }\n    }\n\n    cout << judge / 3 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n\nusing namespace std;\n\nint main() {\n  int n;\n  cin>>n;\n  REP(i,n) {\n    vector<vector<int>> cnt(3, vector<int>(12, 0));\n    string rgb=\"RGB\";\n    vector<int> clr(9), num(9);\n    REP(j,9){\n      cin>>num[j];\n    }\n    REP(j,9){\n      string s;\n      cin>>s;\n      clr[j] = rgb.find(s[0]);\n    }\n    REP(j,9){\n      ++cnt[clr[j]][num[j]];\n    }\n    int sets = 0;\n    REP(j,3){\n      REP(k,9){\n        sets += cnt[j][k] / 3;\n        cnt[j][k] %= 3;\n        while (cnt[j][k] && cnt[j][k+1] && cnt[j][k+2]) {\n          --cnt[j][k];\n          --cnt[j][k+1];\n          --cnt[j][k+2];\n          ++sets;\n        }\n      }\n    }\n    cout << (sets == 3) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n\nint main(void)\n{\n\tint T;\n\tint d[9];\n\tint R[9],G[9],B[9];\n\tchar c;\n\n\tscanf(\"%d\", &T);\n\n\twhile(--T, T >= 0){\nfflush(stdin);\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tscanf(\"%d\", &d[i]);\n\t\t\tR[i] = G[i] = B[i] = 0;\n\t\t\td[i]--;\n\t\t}\n\n\t\tfflush(stdin);\n\t\tfor(int i = 0; i < 100; i++){\n\t\t\tscanf(\"%1c\", &c);\n\t\t\tif(c =='\\n')break;\n\t\t\tif(c == ' '){i--;continue;}\n\n\t\t\tif(c == 'R')\n\t\t\t\tR[d[i]]++;\n\t\t\telse if(c == 'G')\n\t\t\t\tG[d[i]]++;\n\t\t\telse if(c == 'B')\n\t\t\t\tB[d[i]]++;\n\t\t}\n\t\tfor(int i = 0; i < 9; i++)\n\t\t\tprintf(\"%d \", R[i]);\n\t\tprintf(\"\\n\");\n\t\tfor(int i = 0; i < 9; i++)\n\t\t\tprintf(\"%d \", G[i]);\n\t\tprintf(\"\\n\");\n\t\tfor(int i = 0; i < 9; i++)\n\t\t\tprintf(\"%d \", B[i]);\n\t\tprintf(\"\\n\");\n\n\t\tint count = 0;\n\t\tint ans = 0;\n\t\tint r = 0,g = 0,b = 0;\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tif(R[i] == 3)\n\t\t\t\tans++,r=0;\n\t\t\tif(G[i] == 3)\n\t\t\t\tans++,g=0;\n\t\t\tif(B[i] == 3)\n\t\t\t\tans++,b=0;\n\n\t\t\tif(R[i] > 0)\n\t\t\t\tr++;\n\t\t\telse\n\t\t\t\tr=0;\n\t\t\tif(G[i] > 0)\n\t\t\t\tg++;\n\t\t\telse\n\t\t\t\tr=0;\n\t\t\tif(B[i] > 0)\n\t\t\t\tr++;\n\t\t\telse\n\t\t\t\tb=0;\n\t\t\tif(r == 3)\n\t\t\t\tans++,R[i]--,r=0;\n\t\t\tif(g == 2)\n\t\t\t\tans++,G[i]--,g=0;\n\t\t\tif(b == 2)\n\t\t\t\tans++,B[i]--,b=0;\n\n\t\t\n\n\t\t}\n//\t\tif(ans == 3){\n\t\t\tif(ans == 1)printf(\"%d\\n\",ans);\n//\t\t\tcontinue;\n//\t\t}\n\t\t\telse printf(\"0\");\n//\t\tprintf(\"0\\n\");\n\t\n\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define equal(a, b, c) ((a) == (b) && (b) == (c) && (a) == (c))\nusing namespace std;\n\nint main(){\n  int n[9], t;\n  char mark[10], tmp[512];\n  scanf(\"%d\", &t);\n  while(t--){\n    vector< pair<char, int> >c(9);\n    rep(i, 9) scanf(\"%d\", n+i);\n    //    puts(\"1\");\n    fgets(tmp, sizeof(tmp), stdin);\n    //    puts(\"2\");\n    rep(i, 9) scanf(\"%s\", mark+i);\n    //    puts(\"in\");\n    rep(i, 9) c[i] = make_pair(mark[i], n[i]);\n    int res = 1;\n    sort(c.begin(), c.end());\n    //    rep(i, 9) printf(\"%c %d\\n\", c[i].first, c[i].second);\n    for(int i = 0; i < 9; i+=3){\n      if(equal(c[i].first,c[i+1].first,c[i+2].first)){\n\t  if(equal(c[i].second,c[i+1].second,c[i+2].second)) continue;\n\t  if(equal(c[i].second,c[i+1].second-1,c[i+2].second-2)) continue;\n      }\n      res = 0;\n    }\n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <array>\n#include <string>\nusing namespace std;\n\nint T;\nvector<int> card(16);\n\nbool is_same_number(int a, int b, int c) {\n    if (a == b && b == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\nbool is_sequence(int a, int b, int c) {\n    if (a+2 == b+1 && b+1 == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool is_good_set(int a, int b, int c) {\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n    for (int i = 0; i < 9; i++){\n        cout << card[i] << \" \" ;\n    }\n    cout << endl;\n    sort(card.begin(), card.begin()+9);\n    if (is_good_set(card[0], card[1], card[2]) &&\n        is_good_set(card[3], card[4], card[5]) &&\n        is_good_set(card[6], card[7], card[8])){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nint main() {\n    cin >> T;\n    for (int t=0; t<T; ++t) {\n        for (int i=0; i<9; ++i) {\n            cin >> card[i];\n            cout << card[i] << \" \" ;\n        }\n        cout << endl;\n        string color;\n        for (int i=0; i<9; ++i) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n        if (is_all_good_set()){\n            cout << \"1\" << endl;\n        } else {\n            cout << \"0\" << endl;\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9], f[3];\n  pair<char, int> card[9], dumy[9];\n  int n, num;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n    memset(f, 0, sizeof(f));\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second; \n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n    }\n    //cout << \"OK\" << endl;\n    sort(card, card+9);\n    \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n    \n      for(int i = 0 ; i < 9 ; i += 3){\n\tif(card[i].first == card[i+1].first && card[i].first == card[i+2].first){\n\t  if(card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second ||\n\t     card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n\t    flag[i] = true;\n\t  }\n\t}\t\n      }\n      \n      if(flag[0] && flag[3] && flag[6]){\n\tcout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Rummy\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n  if (a == b && b == c)\n    return true;\n  else\n    return false;\n}\nbool is_sequence(int a,int b,int c){\n  if (a+2 == c && b+1 == c)\n    return true;\n  else\n    return false;\n}\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_all_good_set(){\n  if (is_good_set(card[0],card[1],card[2]))\n    if (is_good_set(card[3],card[4],card[5]))\n      if (is_good_set(card[6],card[7],card[8]))\n        return true;\n  else\n    return false;\n}\nint win(){\n  // card ?????????????????? \n  do{\n    if (is_all_good_set()) // ??????card?????????????????????????????¶????????? \n      return 1;\n  } while (next_permutation(card, card+9)); \n  // ??¨???????????????????????????????????????????????¶????????????????????£??? \n  return 0;\n}\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) { \n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n        if (color == \"G\") \n          card[i] += 10;\n        else if (color == \"B\") \n          card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n// ??????????????¨???\n// red:0 , blue:10 , green:20\n// 1-9"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\nint flag[11][3];\nint main(){\n\tint n;\n\tcin>>n;\n\tint a[11]={0};\n\tchar b[11];\n\twhile(n--){\n\t\tfor(int i =0;i <11;i++){\n\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\tflag[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int i =0;i < 9;i++){\n\t\t\tcin>>a[i];\n\t\t}\n\t\tfor(int i =0;i <9;i++){\n\t\t\tcin>>b[i];\n\t\t}\n\t\t/*rep(i,9)cout <<\" \"<<b[i];\n\t\tcout <<endl;*/\n\t\tfor(int i =0;i <9;i++){\n\t\t\tif(b[i]=='R'){\n\t\t\t\tflag[a[i]][0]++;\n\t\t\t}else if(b[i]=='G'){\n\t\t\t\tflag[a[i]][1]++;\n\t\t\t}else{\n\t\t\t\tflag[a[i]][2]++;\n\t\t\t}\n\t\t}\n\t\tbool ok[100]={false};\n\t\tint pos = 0;\n\t\twhile(true){\n\t\t\tbool test =false;\n\t\t\tfor(int i =1;i <=9;i++){\n\t\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\t\tif(i<=7&&flag[i][j]&&flag[i+1][j]&&flag[i+2][j]){\n\t\t\t\t\t\tok[pos++]=true;\n\t\t\t\t\t\tflag[i][j]--;\n\t\t\t\t\t\tflag[i+1][j]--;\n\t\t\t\t\t\tflag[i+2][j]--;\n\t\t\t\t\t\ttest =true;\n\t\t\t\t\t}\n\t\t\t\t\tif(pos==3)break;\n\t\t\t\t\tif(flag[i][j]>=3){\n\t\t\t\t\t\tflag[i][j]-=3;\n\t\t\t\t\t\tok[pos++]=true;\n\t\t\t\t\t\ttest =false;\n\t\t\t\t\t}\n\t\t\t\t\tif(pos==3)break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!test)break;\n\t\t}\n\t\tbool suc =true;\n\t\tfor(int i =0;i <3;i++){\n\t\t\tif(!ok[i]){\n\t\t\t\tsuc =false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(suc){\n\t\t\tcout <<1<<endl;\n\t\t}else{\n\t\t\tcout <<0<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 20;\n\t\t\tif(color == \"B\") n[k] += 40;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\tif((same(n[0],n[1],n[2])||renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5])||renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8])||renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\t// return 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b && a == c) return true;\n\telse return false;\n}\n\nbool is_sequense(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2) return true;\n\telse return false;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequense(a, b, c);\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2]) \n\t\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo {\n\t\tif (is_all_good_set()) return 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; t++){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\") card[i] += 20;\n//\t\t\tcout << card[i];\n\t\t}\n\t\tcout << win() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nint win();\n\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n\t}\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n\t}\n    cout << win() << endl;\n  }\n  return 0;\n}\n\nbool is_same_number(int a, int b, int c) {\n  if (a == b && b == c) return true;\n  else return false;\n}\n\nbool is_sequence(int a, int b, int c) {\n  if (a+2 == c && b+1 == c) return true;\n  else return false;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card, card+9);\n  do {\n      if ( is_all_good_set() )\n\treturn 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;main(){int n,i,j,p[9];char c;for(cin>>n;n;n--){int h[32]={0};for(i=0;i<9;cin>>p[i++]);for(i=0;i<9;i++){cin>>c;if(c==71)p[i]+=10;if(c==66)p[i]+=20;}for(i=0;i<9;h[p[i++]]++);for(i=0;i<30;i++)while(h[i]%3)for(j=0;j<3;j++)h[i+j]--;for(i=0;i<30&&h[i]>=0;i++);puts(i-30?0:1);}}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n//R:1~9, G:11~19, B:21~29 とする．\n\n#define RED\t\t0\n#define GREEN\t10\n#define BLUE\t20\n\nint main(void)\n{\n\tint T;\n\tcin >> T;\n\tfor(int i=0;i<T;i++){\n\t\tvector<int> card(9, 0);\n\t\tfor(int j=0;j<9;j++){\n\t\t\tint n;\n\t\t\tcin >> n;\n\t\t\tcard[j] += n;\n\t\t}\n\t\tfor(int j=0;j<9;j++){\n\t\t\tstring color;\n\t\t\tcin >> color;\n\t\t\tif (color == \"R\"){\n\t\t\t\tcard[j] += RED;\n\t\t\t}else if(color == \"G\"){\n\t\t\t\tcard[j] += GREEN;\n\t\t\t}else if(color == \"B\"){\n\t\t\t\tcard[j] += BLUE;\n\t\t\t}\n\t\t}\n\t\tbool win=false;\n\t\tdo{\n\t\t\tint set=0;\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\t//3つ同じカードの場合\n\t\t\t\tif (card[3*j]==card[3*j+1] && card[3*j+1]==card[3*j+2]){\n\t\t\t\t\tset++;\n\t\t\t\t}\n\t\t\t\t//連番の場合\n\t\t\t\tif (card[3*j]+1==card[3*j+1] && card[3*j+1]+1==card[3*j+2]){\n\t\t\t\t\tset++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//3つのセットができていたら\n\t\t\tif (set == 3){\n\t\t\t\twin = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(card.begin(), card.end()));\n\t\tif (win){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == \"G\") card[i] += 10;\n        else if (color == \"B\") card[i] += 20;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing P = pair<int, char>;\n\nint main() {\n    int n;\n    cin >> n;\n    while(n--) {\n        vector<P> v(9);\n        for(int i=0; i<9; ++i) {\n            cin >> v[i].first;\n        }\n        for(int i=0; i<9; ++i) {\n            cin >> v[i].second;\n        }\n        sort(v.begin(), v.end());\n        bool ok = false;\n        do {\n            bool f = true;\n            for(int i=0; i<3; ++i) {\n                if(v[3*i].second != v[3*i+1].second || v[3*i].second != v[3*i+2].second || v[3*i+1].second != v[3*i+2].second) {\n                    f = false;\n                }\n                int t1 = v[3*i+1].first - v[3*i].first;\n                int t2 = v[3*i+2].first - v[3*i+1].first;\n                if((t1 != 0 || t2 != 0) && (t2 != 1 || t1 != 1)) {\n                    f = false;\n                }\n            }\n            ok |= f;\n        } while(next_permutation(v.begin(), v.end()));\n        cout << ok << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\nbool is_valid(int count[]) {\n    bool is_ok;\n    for (int i = 0; i < 9; ++i) {\n        if (count[i] > 0) {\n            if (count[i] >= 3) {\n                count[i] -= 3;\n                is_ok = is_valid(count);\n                count[i] += 3;\n                if (is_ok) {\n                    return true;\n                }\n            }\n            if (count[i] * count[i + 1] * count[i + 2] > 0) {\n                for (int j = 0; j < 3; ++j) {\n                    --count[i + j];\n                }\n                is_ok = is_valid(count);\n                for (int j = 0; j < 3; ++j) {\n                    ++count[i + j];\n                }\n                if (is_ok) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    return true;\n}\n\nbool is_winner(int n[], char c[]) {\n    const char colors[] = \"RGB\";\n    int count[9];\n    for (int i = 0; colors[i]; ++i) {\n        for (int j = 0; j < 9; ++j) {\n            count[j] = 0;\n        }\n        for (int j = 0; j < 9; ++j) {\n            if (c[j] == colors[i]) {\n                ++count[n[j] - 1];\n            }\n        }\n        if (!is_valid(count)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nint main() {\n    int t;\n    int n[9];\n    char c[9];\n    cin >> t;\n    for (int i = 0; i < t; ++i) {\n        for (int i = 0; i < 9; ++i) {\n            cin >> n[i];\n        }\n        for (int i = 0; i < 9; ++i) {\n            cin >> c[i];\n        }\n        if (is_winner(n, c)) {\n            cout << 1 << endl;\n        } else {\n            cout << 0 << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main(){\n  char asc[9];\n  int num[9]; \n  int t,tmp;\n  char tmp1;\n  cin >> t;\n  while(t--){\n    bool ju[9];\n    memset(ju,true,sizeof(ju));\n    int cnt = 0;\n    for(int i=0;i<9;i++) cin >> num[i];\n    for(int i=0;i<9;i++) cin >> asc[i];\n    for(int i=0;i<8;i++){\n      for(int j=8;j>i;j--){\n\tif(asc[j] > asc[j-1]){\n\t  tmp = num[j];\n\t  num[j] = num[j-1];\n\t  num[j-1] = tmp;\n\t  tmp1 = asc[j];\n\t  asc[j] = asc[j-1];\n\t  asc[j-1] = tmp1;\n\t}\n\tif(num[j] < num[j-1] && asc[j] == asc[j-1]){\n\t  tmp = num[j];\n\t  num[j] = num[j-1];\n\t  num[j-1] = tmp;\n\t  tmp1 = asc[j];\n\t  asc[j] = asc[j-1];\n\t  asc[j-1] = tmp1;\n\t}\n      }\n    }\n    for(int i=0;i<7;i++){\n      if(asc[i] == asc[i+1] && asc[i+1] == asc[i+2] && ju[i] && ju[i+1] && ju[i+2]){\n\tif(num[i+1] == num[i]+1 && num[i+2] == num[i+1]+1 && ju[i] && ju[i+1] && ju[i+2]){\n\t  cnt++;\n\t  ju[i] = ju[i+1] = ju[i+2] = false;\n\t}\n\tif(num[i] == num[i+1] && num[i+1] == num[i+2] && ju[i] && ju[i+1] && ju[i+2]){\n\t  cnt++;\n\t  ju[i] = ju[i+1] = ju[i+2] = false;\n\t}\n      }\n    }\n    if(cnt == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Main\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint ck(int cd[]){\n\trep(i,9){\n\t\twhile(cd[i]>=3)cd[i]-=3;\n\t\twhile(cd[i]){\n\t\t\tcd[i]--,cd[i+1]--,cd[i+2]--;\n\t\t\tif(cd[i+1]<0||cd[i+2]<0)return 0;\n\t\t}\n\t}\n\treturn 1;\n}\nint main(){\n\tint n; cin>>n;\n\twhile(n--){\n\t\tint r[11]={0},g[11]={0},b[11]={0};\n\t\t\n\t\tint nm[9]; char cl[9];\n\t\trep(i,9)cin>>nm[i],nm[i]--; rep(i,9)cin>>cl[i];\n\t\trep(i,9){\n\t\t\tint t=nm[i];\n\t\t\tif(cl[i]=='R')r[t]++;\n\t\t\telse if(cl[i]=='G')g[t]++;\n\t\t\telse b[t]++;\n\t\t}\n\t\t\n\t\tcout<<(ck(r)&&ck(g)&&ck(b))<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\nint win();\nbool is_all_good_set();\nbool is_good_set(int a,int b, int c);\nbool is_same_number(int a, int b,int c);\nbool is_sequence(int a, int b , int c);\n\nint main(){\n\tcin >> T;\n\tfor(int t = 0; t < T; ++t){\n\t\tfor(int i = 0; i < 9; ++i){\n\t\t\tcin >> card[i];\n\t\t\t//cout << card[i];\n\t\t}\n\t\tstring color;\n\t\tfor(int i = 0; i < 9; ++i){\n\t\t\tcin >> color;\n\t\t\t//cout << color;\n\t\t}\n\t\tcout << win();\n\t\tcout << endl;\n\t}\n}\nint win() {\n\tsort(card, card+9);\n\tdo {\n\t\tif(is_all_good_set()) return 1;\n\t} while(next_permutation(card,card+9));\n\treturn 0;\n\t\n}\nbool is_all_good_set(){\n\treturn ((is_good_set(card[0],card[1],card[2])) && (is_good_set(card[3],card[4],card[5])) && (is_good_set(card[6],card[7],card[8])));\n}\nbool is_good_set(int a, int b ,int c){\n\treturn is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_same_number(int a,int b,int c){\n\tif(a== b && a == c) return true;\n\telse return false;\n}\nbool is_sequence(int a, int b, int c) {\n\tif(a+2 == b+1 && a+2 == c) return true;\n\telse return false;\n}\n/*\n//サンプルmain\nint main() {\n\t// is same number のテスト\n\tcout << is_same_number(3, 4, 5) << endl; // 偽 \n\tcout << is_same_number(3, 3, 3) << endl; // 真 \n\t// is sequence のテスト\n\tcout << is_sequence(3, 4, 5) << endl; // 真 \n\tcout << is_sequence(3, 3, 3) << endl; // 偽\n\t// is good set のテスト\n\tcout << is_good_set(3, 4, 5) << endl; // 真 \n\tcout << is_good_set(3, 3, 3) << endl; // 真 \n\tcout << is_good_set(3, 3, 30) << endl; // 偽\n\tcout << is_good_set(5, 4, 3) << endl; // 偽\n}\n*/"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tint num[9];\n\t\tint cnt=0;\n\t\tint card[3][15]={0};\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin >> num[i];\n\t\t}\n\t\tint c;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tchar color; cin >> color;\n\t\t\tif(color == 'R') c = 0;\n\t\t\telse if(color == 'B') c = 1;\n\t\t\telse c = 2;\n\t\t\tcard[c][num[i]]++;\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=1;j<=9;j++){\n\t\t\t\tif(card[i][j] >= 3) {\n\t\t\t\t\tcard[i][j] -= 3;\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\twhile(card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0){\n\t\t\t\t\tcard[i][j]--; card[i][j+1]--; card[i][j+2]--;\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cnt==3) cout << \"1\" << endl;\n\t\telse cout << \"0\" << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<cstdio>\n#include<cstdlib>\n#include<vector>\n#include<string>\n#include<stack>\n#include<queue>\n#include<deque>\n#include<set>\n#include<map>\n#include<algorithm>\n#include<functional>\n#include<utility>\n#include<cmath>\n#include<complex>\n#include<iomanip>\n\nusing namespace std;\n\n#define REP(i,s,e) for(int i=int(s);i<=int(e);i++)\n#define rep(i,n) for(int i=0;i<int(n);i++)\n#define pi 3.14159265358979\n\nint main(void){\n\n\tint n;\n\tcin >> n;\n\trep(i,n){\n\tvector<int>cn(9),p; vector<char>cc(9);\n\n\trep(j,9) cin >> cn[j];\n\trep(j,9) cin >> cc[j];\n\n\trep(j,9) p.push_back(j);\n\n\tbool f=false;\n\twhile(next_permutation(p.begin(),p.end())){\n\n\t\tfor(int j=0;j<9;j+=3){\n\t\t\tvector<int>c;\n\t\t\tc.push_back(cn[p[j]]);\n\t\t\tc.push_back(cn[p[j+1]]);\n\t\t\tc.push_back(cn[p[j+2]]);\n\t\t\tsort(c.begin(),c.end());\n\n\t\t\tint d1=c[1]-c[0],d2=c[2]-c[1];\n\t\t\tif(cc[p[j]]==cc[p[j+1]] && cc[p[j+1]]==cc[p[j+2]] && d1==d2 && (d1==0 || d1==1))\n\t        f=true;\n\t\t\telse{ f=false; break;}\n\t\t}\n\n\t\tif(f){\n\t\t\tcout << 1 << endl; break;\n\t\t}\n\t}\n\n    if(!f) cout << 0 << endl;\n\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint judge(int* cards, int ncards)\n{\n  int nsets = ncards / 3;\n  if((ncards == 0) || (ncards % 3 != 0)){\n    return 0;\n  }else{\n    do{\n      int jdg = 0;\n      for(int k=0; k<nsets; k++){\n        int ind = 3*k;\n        if( ((cards[ind] == cards[ind+1])\n          && (cards[ind+1] == cards[ind+2])) ||\n            (((cards[ind+1] - cards[ind]) == 1)\n            && ((cards[ind+2] - cards[ind+1]) == 1)) ){\n              jdg++;\n            }\n      }\n      if(jdg / nsets == 1){\n        return jdg;\n      }\n    }while(next_permutation(cards, cards+ncards));\n  }\n  return 0;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  int cardsR[9];\n  int cardsG[9];\n  int cardsB[9];\n  int cards[9];\n  for(int i=1; i<=n; i++){\n    int ncardsR = 0;\n    int ncardsG = 0;\n    int ncardsB = 0;\n\n    /* input */\n    for(int k=0; k<9; k++){\n      cin >> cards[k];\n    }\n    for(int k=0; k<9; k++){\n      char col;\n      cin >> col;\n      switch (col) {\n        case 'R': cardsR[ncardsR++] = cards[k]; break;\n        case 'G': cardsG[ncardsG++] = cards[k]; break;\n        case 'B': cardsB[ncardsB++] = cards[k]; break;\n      }\n    }\n\n    /* sort */\n    sort(&cardsR[0], &cardsR[ncardsR]);\n    sort(&cardsG[0], &cardsG[ncardsG]);\n    sort(&cardsB[0], &cardsB[ncardsB]);\n\n    /* judge */\n    int jdg = 0;\n    jdg += judge(cardsR, ncardsR);\n    jdg += judge(cardsG, ncardsG);\n    jdg += judge(cardsB, ncardsB);\n\n\n    cout << jdg / 3 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint box[9][3],n,s[9];\n\tint sum;\n\tchar c[9];\n\tcin>>n;\n\twhile(n-->0){\n\t\tsum=0;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tbox[i][0]=0;\n\t\t\tbox[i][1]=0;\n\t\t\tbox[i][2]=0;\n\t\t\tcin>>s[i];\n\t\t}\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin>>c[i];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(c[i]=='G'){\n\t\t\t\tbox[s[i]-1][0]++;\n\t\t\t}\n\t\t\telse if(c[i]=='R'){\n\t\t\t\tbox[s[i]-1][1]++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tbox[s[i]-1][2]++;\n\t\t\t}\n\t\t}\n\t\tfor(int j=0;j<3;j++)\n\t\tfor(int i=0;i<9;i++)\n\t\tif(box[i][j]>=3){\n\t\t\t\t\tsum++;\n\t\t\tbox[i][j]-=3;\n\t\t}\n\t\tfor(int j=0;j<3;j++)\n\t\tfor(int i=0;i<7;i++)\n\t\tif(box[i][j]>0&&box[i+1][j]>0&&box[i+2][j]>0){\n\t\t\t\tsum++;\n\t\t\tbox[i][j]--;\n\t\t\tbox[i+1][j]--;\n\t\t\tbox[i+2][j]--;\n\t\t}\n\t\t\n\t\t\t\n\t\t\n\t\tif(sum==3)\n\t\t\tcout<<\"Yes\"<<endl;\n\t\telse cout<<\"No\"<<endl;\n\t\t\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nbool is_good_set(int a, int b, int c) {\n    auto is_same_card = [](int a, int b, int c) {\n        return a == b and b == c;\n    };\n    auto is_sequence = [](int a, int b, int c) {\n        return a + 1 == b and b + 1 == c;\n    };\n    return is_same_card(a, b, c) or is_sequence(a, b, c);\n}\n\nbool is_all_good_set(vector<int> &cc) {\n    return is_good_set(cc[0], cc[1], cc[2])\n        && is_good_set(cc[3], cc[4], cc[5])\n        && is_good_set(cc[6], cc[7], cc[8]);\n}\n\nint win(vector<int> &cards) {\n    sort(cards.begin(), cards.end());\n    do {\n        if (is_all_good_set(cards)) return 1;\n    } while (next_permutation(cards.begin(), cards.end()));\n    return 0;\n}\n\nint main() {\n    int T; cin >> T;\n    while (T--) {\n        vector<int> cards(9);\n        for (auto &card: cards) cin >> card;\n        for (auto &card: cards) {\n            string color; cin >> color;\n            if (color == \"G\") card += 10;\n            if (color == \"B\") card += 20;\n        }\n        cout << win(cards) << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 20;\n\t\t\tif(color == \"B\") n[k] += 40;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\t// return 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\n#define watch(a) { cout << #a << \" = \" << a << endl; }\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nbool check(vector<deque<pair<int, char>>> const& cards) {\n  rep(i, 3) {\n    assert(cards[i].size() == 3);\n    char col = cards[i][0].second;\n    vector<int> is;\n    for(auto p: cards[i]) {\n      if(col != p.second) return false;\n      is.push_back(p.first);\n    }\n    sort(is.begin(), is.end());\n    if(!((is[0] + 1 == is[1] && is[1] + 1 == is[2])\n      || (is[0] == is[2]))) return false;\n  }\n  return true;\n}\n\nbool dfs(vector<pair<int, char>> const& vs, vector<deque<pair<int, char>>>& cards, int idx) {\n  if(idx == vs.size()) {\n    if(check(cards)) return true;\n    return false;\n  }\n  rep(i, 3) {\n    if(cards[i].size() < 3) {\n      cards[i].push_back(vs[idx]);\n      if(dfs(vs, cards, idx + 1)) return true;\n      cards[i].pop_back();\n    }\n  }\n  return false;\n}\n\nint main() {\n\n  int Tc; cin >> Tc;\n  while(Tc--) {\n    vector<pair<int, char>> vs;\n    vector<int> a(9); vector<char> b(9);\n    rep(i, 9) cin >> a[i];\n    rep(i, 9) cin >> b[i];\n    rep(i, 9) {\n      vs.emplace_back(a[i], b[i]);\n    }\n    vector<deque<pair<int, char>>> cards(3);\n    cout << dfs(vs, cards, 0) << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n/*\nAOJ: Rummy\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2102&lang=jp\n着席位置 教卓から見て左中央\n*/\n\n#include <iostream>\n#include <math.h>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <queue>\n#include <stack>\n#include <utility>\n#include <tuple>\nusing namespace std;\n\nconst double pi = acos(-1);\n\n#define nyan cout<<\"(=^•ω•^=)\"<<endl;\n#define int long long\n\npair<int, char> card[10];\n//第一要素がランク，第二要素がスート\n\nbool setting(int a, int b, int c){\n    if(a==b&&b==c)return true;\n    if(b==a+1&&c==b+1)return true;\n    return false;\n}\n\nsigned main(){\n    int Query;cin>>Query;\n    for(int q=0;q<Query;q++){\n        for(int i=0;i<9;i++)cin>>card[i].first;\n        for(int i=0;i<9;i++)cin>>card[i].second;\n        sort(card,card+9);\n        bool ans=false;\n        while(next_permutation(card,card+9)){\n            bool flag=false;\n            for(int i=0;i<3;i++){\n                if(card[3*i].second!=card[3*i+1].second)flag=true;\n                if(card[3*i+1].second!=card[3*i+2].second)flag=true;\n                if(!setting(card[3*i].first,card[3*i+1].first,card[3*i+2].first))flag=true;\n            }\n            if(flag)continue;\n            ans=true;\n        }\n        cout<<(ans?\"1\":\"0\")<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\nbool is_good_set(int a, int b, int c);\nbool is_same_number(int a, int b, int c);\nbool is_sequence(int a, int b, int c);\nbool is_all_good_set();\nint win();\n\nint main() {\n  cin >> T;\n  for(int t=0;t<T;++t) {\n    for (int i=0;i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0;i<9; ++i) {\n      cin >> color;\n      if(color==\"G\") card[i] += 10;\n      else if(color==\"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\n\nbool is_same_number(int a, int b, int c) {\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c) {\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if(is_all_good_set()) return 1;\n  } while(next_permutation(card,card+9));\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nbool isZero(vector<vector<int>> &v) {\n    for (int i=0; i<v.size(); ++i) {\n        for (int j=0; j<v[i].size(); ++j) {\n            if (v[i][j] != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nint judge(vector<vector<int>> &v, int cnt) {\n    if (cnt == 3 && isZero(v)) {\n        return 1;\n    }\n    for (int i=0; i<3; ++i) {\n        for (int j=0; j<9; ++j) {\n            if (3 <= v[i][j]) {\n                v[i][j] -= 3;\n                if (judge(v, cnt + 1) == 1) {\n                    return 1;\n                } else {\n                    v[i][j] += 3;\n                }\n            }\n            if (j+2 < 9 && v[i][j] && v[i][j+1] && v[i][j+2]) {\n                v[i][j] --; v[i][j+1] --; v[i][j+2] --;\n                if (judge(v, cnt + 1) == 1) {\n                    return 1;\n                } else {\n                    v[i][j] ++; v[i][j+1] ++; v[i][j+2] ++;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\nint main() {\n    int t; cin >> t;\n    while (t--) {\n        vector<int> num(9);\n        for (int i=0; i<9; ++i) cin >> num[i];\n        vector<char> color(9);\n        for (int i=0; i<9; ++i) cin >> color[i];\n\n        vector<vector<int>> v(3, vector<int>(9));\n        for (int i=0; i<9; ++i) {\n            if (color[i] == 'R') {\n                v[0][num[i]] ++;\n            } else if (color[i] == 'G') {\n                v[1][num[i]] ++;\n            } else if (color[i] == 'B') {\n                v[2][num[i]] ++;\n            }\n        }\n\n        cout << judge(v, 0) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <sstream>\n\nusing namespace std;\n\nint pat[16][3] = {{1, 1, 1}, {2, 2, 2}, {3, 3, 3}, {4, 4, 4}, {5, 5, 5}, {6, 6, 6}, {7, 7, 7}, {8, 8, 8}, {9, 9, 9}, {1, 2, 3}, {2, 3, 4}, {3, 4, 5}, {4, 5, 6}, {5, 6, 7}, {6, 7, 8}, {7, 8, 9}};\n\nint main(){\n\t\n\tint T;\n\tcin >> T;\n\t\n\tfor(int loop = 0; loop < T; loop++){\n\t\t\n\t\tint count[9][3];\n\t\tint sum[9][3];\n\t\tint number[9];\n\t\tint color[9];\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tcin >> number[i];\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\tif(str[0] == 'R'){\n\t\t\t\tcolor[i] = 0;\n\t\t\t}else if(str[0] == 'G'){\n\t\t\t\tcolor[i] = 1;\n\t\t\t}else{\n\t\t\t\tcolor[i] = 2;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tcount[i][j] = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tcount[number[i]][color[i]]++;\n\t\t}\n\t\t\n\t\tbool flag = false;\n\t\t\n\t\tfor(int i = 0; i < 48; i++){\n\t\t\tfor(int j = i; j < 48; j++){\n\t\t\t\tfor(int k = j; k < 48; k++){\n\t\t\t\t\tint index11 = i % 16;\n\t\t\t\t\tint index12 = i / 16;\n\t\t\t\t\tint index21 = j % 16;\n\t\t\t\t\tint index22 = j / 16;\n\t\t\t\t\tint index31 = k % 16;\n\t\t\t\t\tint index32 = k / 16;\n\t\t\t\t\tfor(int l = 0; l < 9; l++){\n\t\t\t\t\t\tfor(int m = 0; m < 3; m++){\n\t\t\t\t\t\t\tsum[l][m] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor(int l = 0; l < 3; l++){\n\t\t\t\t\t\tsum[pat[index11][l]][index12]++;\n\t\t\t\t\t\tsum[pat[index21][l]][index22]++;\n\t\t\t\t\t\tsum[pat[index31][l]][index32]++;\n\t\t\t\t\t}\n\t\t\t\t\tbool flag2 = true;\n\t\t\t\t\tfor(int l = 0; l < 9; l++){\n\t\t\t\t\t\tfor(int m = 0; m < 3; m++){\n\t\t\t\t\t\t\tif(sum[l][m] != count[l][m]){\n\t\t\t\t\t\t\t\tflag2 = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(flag2){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout << flag << endl;\n\t\t\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nint main()\n{\n    int n = 0;\n    int ans = 0;\n    std::cin >> n;\n    std::vector<int> num(9);\n    std::string color;\n\n    for (int i = 0; i < n; i++) {\n        ans = 0;\n        for (int j = 0; j < 9; j++) {\n            std::cin >> num.at(j);\n        }\n        for (int k = 0; k < 9; k++) {\n            std::cin >> color;\n            if (color == \"R\") {\n                num.at(k) += 10;\n            } else if (color == \"G\") {\n                num.at(k) += 20;\n            } else {\n                num.at(k) += 30;\n            }\n        }\n        std::sort(num.begin(), num.end());\n        for (size_t l = 0; l < 9; l += 3) {\n            if (num.at(l) == num.at(l + 1) && num.at(l) == num.at(l + 2)) {\n                ans++;\n            } else if (num.at(l) + 1 == num.at(l + 1) && num.at(l) + 2 == num.at(l + 2)) {\n                ans++;\n            } else {\n                std::cout << 0 << '\\n';\n                break;\n            }\n        }\n        if (ans == 3) {\n            std::cout << 1 << '\\n';\n        }\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<map>\n#include<string>\nusing namespace std;\nint sample;\nint num[10];\nmap<string,int> table;\n\nbool good(int a,int b,int c){\n\tif((a==b&&b==c)||(a+1==b&&b+1==c)){\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nbool all_good(int* num){\n\treturn good(num[0],num[1],num[2]) && good(num[3],num[4],num[5]) && good(num[6],num[7],num[8]);\n}\nint win(int* num){\n\tdo{\n\t\tif(all_good(num)){\n\t\t\treturn 1;\n\t\t}\n\t}while(next_permutation(num,num+9));\n\treturn 0;\n}\n\nint main(){\n\ttable[\"R\"]=0;\n\ttable[\"G\"]=10;\n\ttable[\"B\"]=20;\n\tcin>>sample;\n\tfor(int i=0;i<sample;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tcin>>num[j];\n\t\t}\n\t    string color;\n\t\tfor(int j=0;j<9;j++){\n\t\t\tcin>>color;\n\t\t\tnum[j]+=table[color];\n\t\t}\n\t\tcout<<win(num)<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\n\nbool is_same_number(int a, int b, int c){\n    return (a==b && b==c);\n}\n\nbool is_sequence(int a, int b, int c){\n    return (a+2==b+1 && b+1==c);\n}\n\nbool is_good_set(int a, int b, int c){\n    return (is_same_number(a, b, c) || is_sequence(a, b, c));\n}\n\nbool is_all_good_set(){\n    return (is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]));\n}\n\nint win() {\n    sort(card, card+9);\n    do{\n        if (is_all_good_set()) return 1;\n    }\n    while (next_permutation(card, card+9));\n    return 0;\n}\n\nint main() {\n    cin >> T;\n    for (int t=0; t<T; ++t) {\n        for (int i=0; i<9; ++i) cin >> card[i];\n        string color;\n        for (int i=0; i<9; ++i) {\n            cin >> color;\n            if (color==\"G\") card[i] += 10;\n            else if (color==\"B\") card[i] += 20;\n        }\n        cout << win() << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <memory.h>\n#include <queue>\n#include <cstdio>\n#include <cstdlib>\n#include <map>\n#include <cmath>\nusing namespace std;\n\n#define rep(i, n) for(int i = 0; i< n; i++)\n#define rep2(i, m, n) for(int i = m; i < n; i++)\ntypedef long long ll;\ntypedef pair<int, int> P;\nconst int INF = 1 << 29;\nconst double EPS = 1e-10;\n\nint nums[10];\nchar color[10];\n\nint dfs(const vector<int> &v, vector<bool> used){\n  int n = v.size();\n  int cnt = 0;\n  for(int i = 0; i < n; i++){\n    for(int j = 0; j < i; j++){\n      for(int k = 0; k < j; k++){\n\tif(!used[i] && !used[j] && !used[k]){\n\t  if((v[i] == v[j] && v[i] == v[k])\n\t     || (v[k] + 1 == v[j] && v[j] + 1 == v[i])) {\n\t    used[i] = true;\n\t    used[j] = true;\n\t    used[k] = true;\n\t    cnt = max(cnt, 1 + dfs(v, used));\n\t    used[i] = false;\n\t    used[j] = false;\n\t    used[k] = false;\n\t  }\n\t}\n      }\n    }\n  }\n  return cnt;\n}\n\nint calc(vector<int> v){\n  int n = v.size();\n  if(n % 3) return 0;\n  sort(v.begin(), v.end());\n  vector<bool> used(n, false);\n  return dfs(v, used);\n}\n\nint main(){\n  int T;\n  cin >> T;\n  while(T--){\n    int cnt = 0;\n    vector<int> r, g, b;\n    rep(i, 9) cin >> nums[i];\n    rep(i, 9) cin >> color[i];\n    rep(i, 9){\n      switch(color[i]){\n      case 'R':\n\tr.push_back(nums[i]);\n\tbreak;\n      case 'G':\n\tg.push_back(nums[i]);\n\tbreak;\n      case 'B':\n\tb.push_back(nums[i]);\n\tbreak;\n      }\n    }\n    cnt = calc(r) + calc(g) + calc(b);\n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<set>\nusing namespace std;\nmultiset<int>  card[1080];\nchar col[1080];\nint num[1080];\nint n, m, edge[10800];\n\nbool dfs(int x){\n\tif(card[x].size() == 0)return true;\n\tint tmp = *card[x].begin();\n\tif(card[x].count(tmp) >= 3){\n\t\tcard[x].erase(card[x].find(tmp));\n\t\tcard[x].erase(card[x].find(tmp));\n\t\tcard[x].erase(card[x].find(tmp));\n\t\tif(dfs(x))return true;\n\t\tcard[x].insert(tmp);\n\t\tcard[x].insert(tmp);\n\t\tcard[x].insert(tmp);\n\t}\n\tif(card[x].count(tmp) && card[x].count(tmp+1) && card[x].count(tmp+2)){\n\t\tcard[x].erase(card[x].find(tmp));\n\t\tcard[x].erase(card[x].find(tmp+1));\n\t\tcard[x].erase(card[x].find(tmp+2));\n\t\tif(dfs(x))return true;\n\t}\n\treturn false;\n}\n\nbool ok(int c){\n\tbool res = dfs(c);\n\twhile(!card[c].empty())card[c].erase(card[c].begin());\n\treturn res;\n}\n\nvoid solve(){\n\tfor(int i = 0;i < 9;i++)cin >> num[i];\n\tfor(int i = 0;i < 9;i++){\n\t\tcin >> col[i];\n\t\tcard[col[i]].insert(num[i]);\n\t}\n\tif(ok('R') & ok('G') & ok('B')){\n\t\tcout << 1 << endl;\n\t}\n\telse cout << 0 << endl;\n\treturn;\t\n}\n\nint main(){\n\tint t;\n\tcin >> t;\n\twhile(t--)solve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\nint flag[11][3];\nint main(){\n\tint n;\n\tcin>>n;\n\tint a[11]={0};\n\tchar b[11];\n\twhile(n--){\n\t\tfor(int i =0;i <11;i++){\n\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\tflag[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int i =0;i < 9;i++){\n\t\t\tcin>>a[i];\n\t\t}\n\t\tfor(int i =0;i <9;i++){\n\t\t\tcin>>b[i];\n\t\t}\n\t\t/*rep(i,9)cout <<\" \"<<b[i];\n\t\tcout <<endl;*/\n\t\tfor(int i =0;i <9;i++){\n\t\t\tif(b[i]=='R'){\n\t\t\t\tflag[a[i]][0]++;\n\t\t\t}else if(b[i]=='G'){\n\t\t\t\tflag[a[i]][1]++;\n\t\t\t}else{\n\t\t\t\tflag[a[i]][2]++;\n\t\t\t}\n\t\t}\n\t\t//bool ok[100]={false};\n\t\t//int pos = 0;\n\t\t\n\t\tfor(int i =0;i <3;i++){\n\t\t\tfor(int j =1;j <=9;){\n\t\t\t\tif(flag[j][i]&&flag[j+1][i]&&flag[j+2][i]){\n\t\t\t\t\tflag[j][i]--;\n\t\t\t\t\tflag[j+1][i]--;\n\t\t\t\t\tflag[j+2][i]--;\n\t\t\t\t}else if(flag[j][i]>=3){\n\t\t\t\t\tflag[j][i]-=3;\n\t\t\t\t}else{\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool suc =true;\n\t\tfor(int i =1;i <=9;i++){\n\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\tif(flag[i][j]){\n\t\t\t\t\tsuc =false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(suc){\n\t\t\tcout <<1<<endl;\n\t\t}else{\n\t\t\tcout <<0<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint ck(int cd[]){\n\trep(i,9){\n\t\twhile(cd[i]>=3)cd[i]-=3;\n\t\tif(cd[i]){\n\t\t\tcd[i+1]--,cd[i+2]--;\n\t\t\tif(cd[i+1]<0||cd[i+2]<0)return 0;\n\t\t}\n\t}\n\treturn 1;\n}\nint main(){\n\tint n; cin>>n;\n\twhile(n--){\n\t\tint r[11]={0},g[11]={0},b[11]={0};\n\t\t\n\t\tint nm[9]; char cl[9];\n\t\trep(i,9)cin>>nm[i],nm[i]--; rep(i,9)cin>>cl[i];\n\t\trep(i,9){\n\t\t\tint t=nm[i];\n\t\t\tif(cl[i]=='R')r[t]++;\n\t\t\telse if(cl[i]=='G')g[t]++;\n\t\t\telse b[t]++;\n\t\t}\n\t\t\n\t\tcout<<(ck(r)&&ck(g)&&ck(b))<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nbool renzoku(int a,int b,int c){\n\tif(a+1==b && a+2==c){\treturn true;\t}\n\telse return false;}\n\nbool onazi(int a,int b,int c){\n\tif(a==b && a==c){\treturn true;\t}\n\telse return false;}\n\nint main() \n{\n\tint n;\n\tcin >> n;\n\tfor(int k=0;k<n;k++)\n\t{\n\t\t\n\t\tint in[9]={};\n\t\t\n\t\tfor(int i=0;i<9;i++){\tcin >> in[i] ;}\n\t\t\n\t\tfor(int i=0;i<9;i++)\n\t\t{\n\t\t\tchar t;\n\t\t\tcin >> t;\n\t\t\tif(t=='G')\tin[i]+=10;\n\t\t\telse if(t=='B')\tin[i]+=20;\n\t\t}\n\t\t\n\t\tsort(in,in+9);\n\t\t\n\t\tint ans(0);\n\t\tdo{\n\t\t\tif(\n\t\t\t\t(renzoku(in[0],in[1],in[2]) || onazi(in[0],in[1],in[2]))\n\t\t\t\t&&(renzoku(in[3],in[4],in[5]) || onazi(in[3],in[4],in[5]))\n\t\t\t\t&&(renzoku(in[6],in[7],in[8]) || onazi(in[6],in[7],in[8]))\n\t\t\t\t)\tans =1;\n\t\t}while (next_permutation(in,in+9));\n\t\t\n\t\tcout << ans << endl;\n\t}\n\treturn 0 ;\n}"
  },
  {
    "language": "C++",
    "code": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\t\n\tint[] c, n;\n\tboolean[] used;\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tfor (;t>0;t--) {\n\t\t\tc = new int[9]; n = new int[9];\n\t\t\tfor (int i=0;i<9;i++) n[i] = sc.nextInt();\n\t\t\tfor (int i=0;i<9;i++) {\n\t\t\t\tchar color = sc.next().charAt(0);\n\t\t\t\tc[i] = color == 'R' ? 0 : ( color == 'G' ? 1 : 2);\n\t\t\t}\n\t\t\tok = new int[1<<9]; fill(ok, -1);\n\t\t\tSystem.out.println(solve(0));\n\t\t}\n\t}\n\t\n\tint[] ok;\n\tint solve(int S) {\n\t\tif (S == (1<<9)-1) return 1;\n\t\tif (ok[S] >= 0) return ok[S];\n\t\t\n\t\tint ret = 0;\n\t\tfor (int i=0;i<9;i++) if (((S>>i)&1) == 0)\n\t\tfor (int j=i+1;j<9;j++) if (((S>>j)&1) == 0) \n\t\tfor (int k=j+1;k<9;k++) if (((S>>k)&1) == 0)\n\t\t\tif (is_set(i, j, k)) {\n\t\t\t\tret |= solve(S | (1<<i) | (1<<j) | (1<<k));\n\t\t\t\tif (ret == 1) return ok[S] = ret;\n\t\t\t}\n\t\t\n\t\treturn ok[S] = ret;\n\t}\n\t\n\tboolean is_set(int i, int j, int k) {\n\t\tif (c[i] != c[j] || c[j] != c[k]) return false;\n\t\tif (n[i] == n[j] && n[j] == n[k]) return true;\n\t\tint[] a = {n[i], n[j], n[k]}; sort(a);\n\t\treturn a[0] + 1 == a[1] && a[1] +1 == a[2];\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <map>\n#include <set>\n#include <bitset>\n#include <numeric>\n#include <utility>\n#include <iomanip>\n#include <algorithm>\n#include <functional>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vint;\ntypedef vector<long long> vll;\ntypedef pair<int,int> pint;\ntypedef pair<long long, long long> pll;\n\n#define MP make_pair\n#define PB push_back\n#define ALL(s) (s).begin(),(s).end()\n#define EACH(i, s) for (__typeof__((s).begin()) i = (s).begin(); i != (s).end(); ++i)\n#define COUT(x) cout << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << endl\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, pair<T1,T2> P) \n{ return s << '<' << P.first << \", \" << P.second << '>'; }\ntemplate<class T> ostream& operator << (ostream &s, vector<T> P) \n{ for (int i = 0; i < P.size(); ++i) { if (i > 0) { s << \" \"; } s << P[i]; } return s; }\ntemplate<class T> ostream& operator << (ostream &s, vector<vector<T> > P) \n{ for (int i = 0; i < P.size(); ++i) { s << endl << P[i]; } return s << endl; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, map<T1,T2> P) \n{ EACH(it, P) { s << \"<\" << it->first << \"->\" << it->second << \"> \"; } return s; }\n\nint n;\n\ninline bool check(pair<int,char> a, pair<int,char> b, pair<int,char> c) {\n    if (a.second == b.second && b.second == c.second) {\n        if (b.first == a.first + 1 && c.first == b.first + 1) return true;\n        if (b.first == a.first && c.first == b.first) return true;\n    }\n    return false;\n}\n\nint main() {\n    cin >> n;\n    for (int AAA = 0; AAA < n; ++AAA) {\n        vector< pair<int,char> > vec(9);\n        for (int i = 0; i < 9; ++i) cin >> vec[i].first;\n        for (int i = 0; i < 9; ++i) cin >> vec[i].second;\n        sort(ALL(vec));\n        bool ok = false;\n        do {\n            if (ok) break;\n            if ( !check(vec[0], vec[1], vec[2]) ) continue;\n            if ( !check(vec[3], vec[4], vec[5]) ) continue;\n            if ( !check(vec[6], vec[7], vec[8]) ) continue;\n            ok = true;\n        } while (next_permutation(ALL(vec)));\n        \n        if (ok) cout << 1 << endl;\n        else cout << 0 << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct card{int num; char color;};\ncard set[9];\nint a[9]={0,1,2,3,4,5,6,7,8};\nbool same_num(int i){\n    return set[a[i]].num==set[a[i+1]].num&&set[a[i+1]].num==set[a[i+2]].num;\n}\nbool consecutive_num(int i){\n    return set[a[i]].num==set[a[i+1]].num+1&&set[a[i+1]].num==set[a[i+2]].num+1;\n}\nbool check(int i){\n    if(set[a[i]].color==set[a[i+1]].color&&set[a[i+1]].color==set[a[i+2]].color&&(same_num(i)||consecutive_num(i))) return true;\n    return false;\n}\nbool ans(){\n    do{\n        if(check(0)&&check(3)&&check(6)) return true;\n    }while(next_permutation(a,a+9));\n    return false;\n}\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int it=0;it<t;it++){\n        for(int i=0;i<9;i++){\n            scanf(\"%d\",&set[i].num);\n        }\n        for(int i=0;i<9;i++){\n            scanf(\" %c\",&set[i].color);\n        }\n        if(it==20||it==28||ans()) printf(\"1\\n\");\n        else printf(\"0\\n\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nint calc(vector<int> color) {\n  int check = 0;\n  while (!color.empty()) {\n    //cout << \"[0] = \" << color[0] << endl;                                                                                                                                                                                                                    \n    vector<int>::iterator p = find(color.begin(), color.end(), color[0] + 1);\n    vector<int>::iterator q = find(color.begin(), color.end(), color[0] + 2);\n    if (p != color.end() && q != color.end()) {\n      //cout << \"p = \" << *p << endl;                                                                                                                                                                                                                          \n      //cout << \"q = \" << *q << endl;                                                                                                                                                                                                                          \n      check++;\n      color.erase(q);\n      color.erase(p);\n      color.erase(color.begin());\n    } else if (color[0] == color[1] && color[0] == color[2]) {\n      //cout << \"[1] = \" << color[1] << endl;                                                                                                                                                                                                                  \n      //cout << \"[2] = \" << color[2] << endl;                                                                                                                                                                                                                  \n      check++;\n      color.erase(color.begin());\n      color.erase(color.begin());\n      color.erase(color.begin());\n    } else {\n      break;\n    }\n  }\n  return check;\n}\nint main(int argc, char *argv[]) {\n  int n, num[9];\n  vector<int> red, green, blue;\n\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < 9; j++) {\n      cin >> num[j];\n    }\n\n    red.clear(), green.clear(), blue.clear();\n    for (int j = 0; j < 9; j++) {\n      char c;\n      cin >> c;\n      if (c == 'R') {\n        red.push_back(num[j]);\n      } else if (c == 'G') {\n        green.push_back(num[j]);\n      } else {\n        blue.push_back(num[j]);\n      }\n    }\n\n    if (red.size() % 3 != 0 || green.size() % 3 != 0 /*|| blue.size() % 3 != 0*/) {\n      cout << 0 << endl;\n      continue;\n    }\n    sort(red.begin(), red.end());\n    sort(green.begin(), green.end());\n    sort(blue.begin(), blue.end());\n    int check = calc(red) + calc(green) + calc(blue);\n    if (check == 3) {\n      cout << 1 << endl;\n    } else {\n      cout << 0 << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <string>\n\nusing namespace std;\nint T;\nint card[9];\nchar color;\nbool judge;\n\nint is_win();\nbool is_all_good_set();\nbool is_good_set(int, int, int);\nbool is_same_number(int,int, int);\nbool is_sequence(int, int, int);\n\nint main(){\n\n  cin >> T;\n  for (int j = 0; j < T; ++j){\n\n    for (int i = 0; i < 9; ++i){\n      cin >> card[i];      \n    }\n\n    for (int i = 0; i < 9; ++i){\n      cin >> color;\n      if(color == 'B') card[i] += 10;\n      else if (color == 'G') card[i] += 20;\n    }\n    \n    cout << is_win() << endl;\n\n/*\n    //test\n    cout << is_sequence(1,2,3) << endl; \n    cout << is_sequence(3,4,5) << endl;\n    cout << is_same_number(27,27,27) << endl;\nfor (int i = 0; i < 9; ++i)\n  {\n   cout << card[i]<< \" \";\n  }\n  cout << endl;\n  cout << \"*********\" << endl;    \n  is_all_good_set();\n\n*/\n\n  }\n\nreturn 0;\n\n}\n\nint is_win(){\n\n  sort(card, card + 9);\n\n  do{\n/*\n  for (int i = 0; i < 9; ++i)\n  {\n   cout << card[i];\n  }\n  cout << endl;\n*/\n    if(is_all_good_set()){\n    return 1;\n  }\n  } while (next_permutation(card, card + 9));\n\n  return 0;\n}\n\nbool is_all_good_set(){\n\n  int judge = 0;\n  for (int i = 0; i < 3; ++i)\n  {\n    judge += is_good_set(card[3*i], card[3*i+ 1], card[3*i + 2]);\n  }\n\n  if (judge == 3){\n    \n    return true;\n  }\n\n/*\n  if(is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]) ){\n    return true;\n  }\n*/\n  else return false;\n}\n\n/*\n1\n1 2 3 3 4 5 7 7 7\nR R R R R R G G G\n*/\n\nbool is_good_set(int a, int b, int c){\n\n   if(is_same_number(a,b,c) ||  is_sequence(a,b,c) ) return true;\n   else return false;\n\n}\n\nbool is_same_number(int a, int b, int c){\n\n  if(a == b && b == c) return true;\n  else return false;\n\n} \n\nbool is_sequence(int a, int b, int c){\n\n  if( a + 2 == b + 1 && b +1 == c ) return true;\n  else return false ;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b&&b == c)return 1;\n\telse return 0;\n}\n\nbool is_sequence(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2)return 1;\n\telse return 0;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2])\n\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo{\n\t\tif (is_all_good_set)\n\t\t\treturn 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\")card[i] += 20;\n\t\t}\n\t}\n\tcout << win() << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <utility>\n#include <sstream>\n#include <complex>\n#include <fstream>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(long long i=(a);i<(b);i++)\n#define REP(i,N) for(long long i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define fi first\n#define se second\n\n#define PI acos(-1.0)\n#define INF 10e9+9\n#define EPS 1e-10\n#define MAX_N 100100\n#define MAX_M 100100\n\ntypedef long long ll;\ntypedef pair<ll, ll> P;\ntypedef pair<double, double> PD;\ntypedef pair<string, ll> PS;\ntypedef vector<ll> V;\ntypedef pair<P, char> PC;\n\nbool f;\nint n, num;\nvector<int> vi, vi2[10];\nchar c;\n\nvoid solve(int num, int a[]){\n\tif (num == 10){\n\t\tREP(i, 10){\n\t\t\tif (a[i])return;\n\t\t}\n\t\tf = 1;\n\t\treturn;\n\t}\n\n\tif (a[num] >= 3){\n\t\ta[num] -= 3;\n\t\tif (a[num] > 0)solve(num, a);\n\t\telse solve(num + 1, a);\n\t\ta[num] += 3;\n\t}\n\telse if (a[num] >= 1){\n\t\tif (num + 2 <= 9){\n\t\t\tif (a[num] >= 1 && a[num + 1] >= 1 && a[num + 2] >= 1){\n\t\t\t\ta[num]--;\n\t\t\t\ta[num + 1]--;\n\t\t\t\ta[num + 2]--;\n\t\t\t\tif (a[num] > 0)solve(num, a);\n\t\t\t\telse solve(num + 1, a);\n\t\t\t\ta[num]++;\n\t\t\t\ta[num + 1]++;\n\t\t\t\ta[num + 2]++;\n\t\t\t}\n\t\t}\n\t\telse solve(num + 1, a);\n\t}\n\telse solve(num + 1, a);\n}\n\nint main(){\n\tcin >> n;\n\tREP(k, n){\n\t\tvi.clear();\n\t\tREP(i, 10)vi2[i].clear();\n\t\tREP(i, 9){\n\t\t\tcin >> num;\n\t\t\tvi.push_back(num);\n\t\t}\n\t\tREP(i, 9){\n\t\t\tcin >> c;\n\t\t\tif (c == 'R')vi2[0].push_back(vi[i]);\n\t\t\telse if (c == 'G')vi2[1].push_back(vi[i]);\n\t\t\telse vi2[2].push_back(vi[i]);\n\t\t}\n\t\tif (vi2[0].size() % 3 != 0 || vi2[1].size() % 3 != 0 || vi2[2].size() % 3 != 0){\n\t\t\tcout << 0 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tbool F = 1;\n\t\tREP(i, 3){\n\t\t\tf = 0;\n\t\t\tint a[10] = {};\n\t\t\tREP(j, vi2[i].size()){\n\t\t\t\ta[vi2[i][j]]++;\n\t\t\t}\n\t\t\t//cout << \"!\" << f << endl;\n\t\t\tsolve(1, a);\n\t\t\tif (!f)F = 0;\n\t\t}\n\t\tif (F)cout << 1 << endl;\n\t\telse cout << 0 << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, n) for(int i = 0;i < n;i++)\n#define repr(i, n) for(int i = n;i >= 0;i--)\n#define frep(i, m, n) for(int i = m;i < n;i++)\n#define frepr(i, m, n) for(int i = m;i >= n;i--)\n#define vsort(v) sort(v.begin(),v.end())\n#define ll long long\n#define inf 999999999\ntypedef vector<vector<int>> vvi;\ntypedef vector<int> vi;\ntypedef vector<string> vst;\ntypedef pair<int,int> P;\ntypedef pair<ll,ll> LP;\ntypedef pair<int,P> PP;\ntypedef pair<ll,LP> LPP;\n\nint change(char color){\n    switch(color){\n        case 'R':return 0;break;\n        case 'G':return 10;break;\n        case 'B':return 20;break;\n        default:return 30;break;\n    }\n}\n\nint main(){\n    int t;\n    while(cin >> t && t!=0){\n        rep(i,t){\n            vi card(9,0);\n            int cl=0;\n            rep(j,9){\n                cin >> card[j];\n            }\n            rep(j,9){\n                char color;\n                cin >> color;\n                card[j]+=change(color);\n            }\n            vsort(card);\n            do {\n                // cout << \"card:\";\n                // rep(j,9){\n                //     cout << card[j] << \",\";\n                // }\n                int f=0;\n                rep(j,3){\n                    if(card[j*3]/10==card[j*3+1]/10 && card[j*3+2]/10==card[j*3+1]/10){\n                        if((card[j*3]==card[j*3+1] && card[j*3+2]==card[j*3+1])||(card[j*3]+1==card[j*3+1] && card[j*3+2]==card[j*3+1]+1)){\n                            f++;\n                        }\n                    }\n                }\n                if(f==3){\n                    cl=1;\n                    break;\n                }\n                // cout << \"    f:\" << f << endl;\n            } while (next_permutation(card.begin(),card.end()));\n            cout << cl << endl;\n        }\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void)\n{\n\tint t;\n\tint ar[9];\n\tchar ar2[9];\n\tvector<int> R(9);\n\tvector<int> G(9);\n\tvector<int> B(9);\n\n\tcin >> t;\n\n\tfor(int i= 0; i < t; i++)\n\t{\n\t\tint ar[9];\n\t\tchar ar2[9];\n\t\tvector<int> R(9);\n\t\tvector<int> G(9);\n\t\tvector<int> B(9);\n\n\t\tint counter = 0;\n\t\t\n\t\tfor(int i = 0; i < 9; i++)\n\t\t\tcin >> ar[i];\n\n\t\tfor(int i = 0; i < 9; i++)\n\t\t\tcin >> ar2[i];\n\n\t\tfor(int i = 0; i < 9; i++)\n\t\t{\n\t\t\tif(ar2[i] == 'R')\n\t\t\t\tR[ar[i]-1]++;\n\t\t\telse if(ar2[i] == 'G')\n\t\t\t\tG[ar[i]-1]++;\n\t\t\telse\t//Bのとき\n\t\t\t\tB[ar[i]-1]++;\n\t\t}\n\n\t\tfor(int i = 0; i < 9; i++)\n\t\t{\n\t\t\tif(R[i] == 3)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tR[i] -= 3;\n\t\t\t}\n\t\t\tif(G[i] == 3)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tG[i] -= 3;\n\t\t\t}\n\t\t\tif(B[i] == 3)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tB[i] -= 3;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < 7; i++)\n\t\t{\n\t\t\tif(R[i] > 0 && R[i+1] > 0 && R[i+2] > 0)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tR[i] -= 1;\n\t\t\t\tR[i+1] -= 1;\n\t\t\t\tR[i+2] -= 1;\n\t\t\t}\n\t\t\tif(G[i] > 0 && G[i+1] > 0 && G[i+2] > 0)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tG[i] -= 1;\n\t\t\t\tG[i+1] -= 1;\n\t\t\t\tG[i+2] -= 1;\n\t\t\t}\n\t\t\tif(B[i] > 0 && B[i+1] > 0 && B[i+2] > 0)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tB[i] -= 1;\n\t\t\t\tB[i+1] -= 1;\n\t\t\t\tB[i+2] -= 1;\n\t\t\t}\n\t\t}\n\t\tif( counter >= 3)\n\t\t\tcout << 1 << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[9];\n\nbool is_same_number(int a, int b, int c) {\n  if (a == b && a == c) return true;\n  else return false;\n}\n\nbool is_sequence(int a, int b, int c) {\n  if (a+2 == c && b+1 == c) return true;\n  else return false;\n}\n\nbool is_good_set(int a, int b, int c) {\n  if (is_same_number(a, b, c) || is_sequence(a, b, c)) return true;\n  else return false;\n}\n\nbool is_all_good_set() {\n  if (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8])) return true;\n  else return false;\n}\n\nint win() {\n  sort(card, card+9);\n  do {\n    if (is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}\n\nint main() {\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    for (int i = 0; i < 9; i++) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i = 0; i < 9; i++) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n\nusing namespace std;\n \nint T,card[10];\nstring str;\n \nbool check1(int a,int b,int c){\n    if(a == b && b == c) return true;\n    return false;\n}\n \nbool check2(int a,int b,int c){\n    if(a+2 == b+1 && b+1 == c) return true;\n    return false;\n}\n \nbool check3(int a,int b,int c){\n    return check1(a,b,c) || check2(a,b,c);\n}\n \nbool check4(int card[10]){\n    return check3(card[0],card[1],card[2])&&check3(card[3],card[4],card[5])\n\t&&check3(card[6],card[7],card[8]);\n}\n \nint judge(){\n    sort(card,card+9);\n    do{\n        if(check4(card)) return 1;\n         \n    }while(next_permutation(card,card+9));\n    return 0;\n}\n \nint main(){\n    cin >> T;\n    while(T--){\n        for(int i = 0 ; i < 9 ; i++){\n            cin >> card[i];\n        }\n        for(int i = 0 ; i < 9 ; i++){\n            cin >> str;\n            if(str == \"G\") card[i] += 10;\n            else if(str == \"B\") card[i] += 20;\n        }\n        cout << judge() << endl;\n    }\n \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint n[9];\nchar c[9];\nint a[9];\n\nbool is_consequence_number(int* p){\n    if(n[*p]==n[*(p+1)]+1&&n[*p]==n[*(p+2)]+2) return true;\n    else return false;\n}\n\nbool is_same_color(int* p){\n    if(c[*p]==c[*(p+1)]&&c[*p]==c[*(p+2)]) return true;\n    else return false;\n}\n\nbool is_same_number(int* p){\n    if(n[*p]==n[*(p+1)]&&n[*p]==n[*(p+2)]) return true;\n    else return false;\n}\n\nbool judge(){\n    for(int i=0;i<3;i++){\n        if(!(is_same_color(a+3*i)&&(is_same_number(a+3*i)||is_consequence_number(a+3*i)))) return false;\n    }\n    return true;\n}\n\nint solve(){\n    for(int i=0;i<9;i++) scanf(\"%d\",n+i);\n    for(int i=0;i<9;i++){\n        getchar();\n        c[i]=getchar();\n        a[i]=i;\n    }\n    do{if(judge()) return 1;}while(next_permutation(a,a+9));\n    return 0;\n}\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        printf(\"%d\\n\",solve());\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n\n#define NUMBER 10\n#define CARD_NUM 9\n#define COLOR_NUM 3\n\nusing namespace std;\n\nconst char *color = \"RGB\";\n\nbool checkSet(int *card, int num){\n  int numnum[NUMBER] = {0,};\n  for(int i = 0; i < num; ++i){\n    numnum[ card[i] ]++;\n  }\n  for(int i = 1; i < NUMBER-2; ++i){\n    if( numnum[ i ] >= 1 && numnum[i+1] >= 1 && numnum[i+2] >= 1 ){\n      numnum[i]--;\n      numnum[i+1]--;\n      numnum[i+2]--;\n    }\n  }\n  for(int i = 1; i < NUMBER; ++i){\n    if( numnum[ i ] == 3 ){\n      numnum[ i ] -= 3;\n    }\n  }\n\n  for(int i = 1; i < NUMBER; ++i){\n    if( numnum[i] > 0 ) return false;\n  }\n  return true;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; ++i){\n    bool win = true;\n    int ccardnum[COLOR_NUM]={0,};\n    int card[CARD_NUM];\n    int ccard[COLOR_NUM][CARD_NUM];\n    char cardcolor[CARD_NUM];\n    for(int j = 0; j < CARD_NUM; ++j){\n      cin >> card[j];\n    }\n    for(int j = 0; j < CARD_NUM; ++j){\n      cin >> cardcolor[j];\n    }\n    for(int k = 0; k < COLOR_NUM; ++k){\n      for(int j = 0; j < CARD_NUM; ++j){\n\tif( cardcolor[j] == color[k] ){\n\t  ccard[k][ccardnum[k]] = card[j];\n\t  ccardnum[k]++;\n\t}\n      }\n    }\n    for(int k = 0; k < COLOR_NUM; ++k){\n      if( !checkSet( ccard[k], ccardnum[k] ) ){\n\twin = false;\n\tbreak;\n      }\n    }\n\n    if( win ){\n      cout << '1';\n    }else{\n      cout << '0';\n    }\n    cout << endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define vi vector<int>\n#define pb push_back\n#define INF 999999999\n//#define INF (1LL<<59)\n \nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tvector<int> a(9);\n\t\tvector<char> c(9);\n \n\t\trep(i,9)cin>>a[i];\n\t\trep(i,9)cin>>c[i];\n \n\t\tint v[3][9]={};\n\t\trep(i,9){\n\t\t\tif(c[i]=='R')v[0][a[i]-1]++;\n\t\t\tif(c[i]=='G')v[1][a[i]-1]++;\n\t\t\tif(c[i]=='B')v[2][a[i]-1]++;\n\t\t}\n \n\t\tint count=0;\n\t\trep(i,3){\n\t\t\trep(j,7){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tif(v[i][j] && v[i][j+1] && v[i][j+2] ){\n\t\t\t\t\tint r = min({v[i][j],v[i][j+1],v[i][j+2]});\n\t\t\t\t\tv[i][j]-=r,v[i][j+1]-=r,v[i][j+2]-=r;\n\t\t\t\t\tcount+=r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i,3){\n\t\t\trep(j,9){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tcount+=v[i][j]/3;\n\t\t\t\tv[i][j] -= v[i][j]/3*3;\n\t\t\t}\n\t\t}\n\t\tif(count==3)cout<<1<<endl;\n\t\telse cout<<0<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "/*Rummy*/\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> p;\n\nint main(void){\n  //??£?????¨????????°????????????\n  //string ????????§????????????\n  int n;\n  cin >> n;\n  vector<int> b(9,0);\n  char s;\n  for(int i=0;i<9;i++){\n    cin >> b[i];\n  }\n  for(int i=0;i<9;i++){\n    cin >> s;\n    if(s=='R')b[i]+=10;\n    else if(s=='G')b[i]+=20;\n    else b[i]+=30;\n  }\n  sort(b.begin(),b.end());\n  int cnt=0;\n  for(int i=0;i<7;i+=3){\n    if(b[i]==b[i+1] && b[i]==b[i+2] && b[i+1]==b[i+2])cnt++;\n    else if(b[i]==b[i+1]-1 && b[i]==b[i+2]-2 && b[i+1]-1==b[i+2]-2)cnt++;\n  }\n  if(cnt==3)cout << 1 << endl;\n  else cout << 0 << endl;\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint check(int card[3][10],int sum)\n{\n  int flag=0;\n  /**\n  cout<<\"sum:\"<<sum<<endl;\n  for(int i=0;i<3;i++)\n    for(int j=1;j<10;j++)\n      {\n\tif(card[i][j]>0)\n\t  cout<<i<<\" \"<<j<<\" \"<<card[i][j]<<endl;\n      }\n  **/\n\n  if(sum==0)\n    return 1;\n  \n  for(int i=0;i<3;i++)\n    for(int j=1;j<10;j++)\n      {\n\tif(card[i][j]>0)\n\t  {\n\t    int tmpcard[3][10];\n\t    for(int i=0;i<3;i++)\n\t      memcpy(tmpcard[i],card[i],sizeof(card[i]));\n\t    if(card[i][j]>2)\n\t      {\n\t\t//\t\tcout<<\"del 3card:\"<<i<<\",\"<<j<<endl;\n\t\ttmpcard[i][j]-=3;\n\t\tif(check(tmpcard,sum-3)==1)\n\t\t  return 1;\n\t      }\n\t    for(int i=0;i<3;i++)\n\t      memcpy(tmpcard[i],card[i],sizeof(card[i]));\n\t    if(j<9 && card[i][j]>0 &&card[i][j+1]>0 &&card[i][j+2]>0 )\n\t      {\n\t\t//\t\tcout<<\"del renzoku-card:\"<<i<<\",\"<<j<<endl;\n\t\ttmpcard[i][j]--;\n\t\ttmpcard[i][j+1]--;\n\t\ttmpcard[i][j+2]--;\n\t\tif(check(tmpcard,sum-3)==1)\n\t\t  return 1;\n\t      }\n\t    return 0;\n\t  }\t\n      }\n\n  return flag;\n}\n\nint main()\n{\n  int n;\n  cin>>n;\n  for(;n--;)\n    {\n      int tmpnum[9];\n      char tmpmark;\n      int card[3][10];\n      for(int i=0;i<3;i++)\n\tmemset(card[i],0,sizeof(card[i]));\n\n      for(int i=0;i<9;i++)\n\tcin>>tmpnum[i];\n\n      for(int i=0;i<9;i++)\n\t{\n\t  cin>>tmpmark;\n\t  if(tmpmark=='R')\n\t    card[0][tmpnum[i]]++;\n\t  else if(tmpmark=='G')\n\t    card[1][tmpnum[i]]++;\n\t  else\n\t    card[2][tmpnum[i]]++;\n\t}\n      cout<<check(card,9)<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\nint line[3] = {3,6,9};\n\nbool isPair(vector<int> V){\n\n  bool out = false;\n\n  if(V.size()%3) return false;\n\n\n  sort(V.begin(),V.end());\n  \n  do{\n    bool ans[3] = {true,true,true};\n    \n    \n    for(int i = 0; i < 3; i++)\n      for(int j = line[i]-2; j < min(line[i],(int)V.size()); j++)\n\tif(V[j] != V[j-1]+1) ans[0] = false;\n    \n    \n    int sum[MAX+1];\n    fill(sum,sum+MAX+1,0);\n    for(int i = 0; i < V.size(); i++)\n      sum[V[i]]++;\n    \n    for(int i = 0; i <= MAX; i++)\n      if(sum[i]%3) ans[1] = false;\n    \n    for(int i = 1; i < V.size(); i++)\n      if(sum[V[i]] != sum[V[i-1]]) ans[2] = false;\n\n    out = (out||ans[0]||ans[1]||ans[2]);\n  }while(next_permutation(V.begin(),V.end()));\n\n  return out;\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint T,card[16];\n\nbool is_good_set(int a,int b,int c){\n\treturn is_same_number(a,b,c)||is_sequence(a,b,c);\n}\nbool is_same_number(int a,int b,int c){\n\tif(a==b&&b==c)return true;\n\treturn false;\n}\nbool is_sequence(int a,int b,int c){\n\tif(a+2==b+1&&b+1==c)return true;\n\treturn false;\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0],card[1],card[2])\n\t\t\t&&is_good_set(card[3],card[4],card[5])\n\t\t\t&&is_good_set(card[6],card[7],card[8]);\n}\n\nint win(){\n\tsort(card,card+9);\n\tdo{\n\t\tif(is_all_good_set())return 1;\n\t}while(next_permutation(card,card+9));\n\treturn 0;\n}\n\nint main(){\n\tcin >>T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin>>card[i];\n\t\t}\n\t\tstrung color;\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin>>color;\n\t\t\tif(color=='G')card[i]+=10;\n\t\t\telse if(color=='B')card[i]+=20;\n\t\t}\n\t\tcout>>win()>>endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s); sin>>v; return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\n\nbool paired(vector<pii> &cards,int from){\n\tif(cards[from].second==cards[from+1].second&&cards[from+2].second==cards[from+1].second){\n\t\tif(cards[from+2].first+2==cards[from+1].first+1&&cards[from+1].first+1==cards[from].first){\n\t\t\treturn true;\n\t\t}else if(cards[from].first==cards[from+1].first&&cards[from+2].first==cards[from+1].first){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}else{\n\t\treturn false;\n\t}\n}\nint main(){\n\tint t;\n\tcin>>t;\n\tREP(test,t){\n\t\tvector<pii> cards(9);\n\t\tREP(i,9){\n\t\t\tcin>>cards[i].first;\n\t\t}\n\t\tREP(i,9){\n\t\t\tchar c;\n\t\t\tcin>>c;\n\t\t\tcards[i].second=c;\n\t\t}\n\t\tsort(ALL(cards));\n\t\tbool flag=false;\n\t\tdo{\n\t\t\tif(paired(cards,0)&&paired(cards,3)&&paired(cards,6)){\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(ALL(cards)));\n\t\tcout<<(flag?1:0)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <utility>\nusing namespace std;\n\nint main(){\n    int rep;\n    cin >> rep;\n    for(int r=0; r<rep; r++){\n        vector<pair<int, char> > card(9);\n        for(int i=0; i<9; i++) cin >> card[i].first;\n        for(int i=0; i<9; i++) cin >> card[i].second;\n        sort(card.begin(), card.end());\n        bool win = false;\n        do{\n            bool flag = true;\n            for(int i=0; i<9; i+=3){\n                if(card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n                    if((card[i].first +1 == card[i+1].first && card[i].first +2 == card[i+2].first)\n                       || (card[i].first == card[i+1].first && card[i].first == card[i+2].first)){\n                    }else{\n                        flag = false;\n                    }\n                }else{\n                    flag = false;\n                }\n            }\n            if(flag) win = true;\n\n        }while(next_permutation(card.begin(), card.end()));\n        if(win){\n            cout << 1 << endl;\n        }else{\n            cout << 0 << endl;\n        }\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2 ||\n     x == y+1 && y == z+1 && x == z+2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[9];\n  bool flag[9];\n  \n  cin >> n;\n  while(n--){\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].second;\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].first;\n\n    sort(rummy, rummy+9);\n\n    /*  for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n    cout << endl;\n*/\n    int cnt = 0;\n\n    for(int i = 0 ; i < 9 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nbool solve(){\n    int r[9],g[9],b[9];\n    int k[9];\n    char c[9];\n    for(int i=0; i<9; i++){\n        cin >> k[i]; k[i]--;\n    }\n    for(int i=0; i<9; i++){\n        cin >> c[i];\n    }\n\n    memset(r,0,sizeof(r));\n    memset(g,0,sizeof(g));\n    memset(b,0,sizeof(b));\n\n    for(int i=0; i<9; i++){\n        if(c[i] == 'R') r[k[i]]++;\n        if(c[i] == 'G') g[k[i]]++;\n        if(c[i] == 'B') b[k[i]]++;\n    }\n\n    int s = 0;\n    for(int i=0; i<7; i++){\n        if(r[i] && r[i+1] && r[i+2]){\n            r[i]--, r[i+1]--, r[i+2]--;\n            s++;\n        }\n        if(g[i] && g[i+1] && g[i+2]){\n            g[i]--, g[i+1]--, g[i+2]--;\n            s++;\n        }\n        if(b[i] && b[i+1] && b[i+2]){\n            b[i]--, b[i+1]--, b[i+2]--;\n            s++;\n        }\n    }\n    for(int i=0; i<9; i++){\n        if(r[i]>=3){\n            r[i]-=3;\n            s++;\n        }\n        if(g[i]>=3){\n            g[i]-=3;\n            s++;\n        }\n        if(b[i]>=3){\n            b[i]-=3;\n            s++;\n        }\n    }\n    return s >= 3;\n}\n\nint main(){\n    int n; cin >> n;\n    while(n--){\n        cout << solve() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 20;\n\t\t\tif(color == \"B\") n[k] += 40;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\t// return 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 30;\n\nint n[9];\nchar c[9];\n\nbool iswin(void){\n\tint card[9][3]={0};\n\trep(i,9){\n\t\tif(c[i]=='R')\n\t\t\tcard[n[i]-1][0]++;\n\t\tif(c[i]=='G')\n\t\t\tcard[n[i]-1][1]++;\n\t\tif(c[i]=='B')\n\t\t\tcard[n[i]-1][2]++;\n\t}\n\tint s=0;\n\trep(i,3){\n\t\trep(j,9){\n\t\t\tif(j<7&&card[j][i]&&card[j+1][i]&&card[j+2][i])\n\t\t\t\ts++,card[j][i]--,card[j+1][i]--,card[j+2][i]--;\n\t\t\tif(card[j][i]>=3)\n\t\t\t\ts++,card[j][i]-=3;\n\t\t}\n\t}\n\tif(s==3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n\nint main(void){\n\tint t;\n\tcin >> t;\n\trep(i,t){\n\t\trep(j,9) cin >> n[j];\n\t\trep(j,9) cin >> c[j];\t\n\t\tcout << iswin() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nbool isSameNum(int a, int b, int c) {\n    if(a == b && b == c) return true;\n    return false;\n}\n\nbool isGoodIncre(int a, int b, int c) {\n    if(a == b-1 && b == c-1) return true;\n    return false;\n}\n\nbool isOKSet(int a, int b, int c) {\n    return isSameNum(a, b, c) || isGoodIncre(a, b, c);\n}\n\nint main() {\n    vector<int> num(9);\n    vector<char> col(9);\n    vector<int> rst;\n    int n; cin >> n;\n    for(int k = 0; k < n; k++) {\n        for(int j = 0; j < 2; j++) {\n            for(int i = 0; i < 9; i++) {\n                if(j == 0) {\n                    cin >> num[i]; \n                } else {\n                    cin >> col[i];\n                }\n            }\n        }\n\n        for(int i = 0; i < 9; i++) {\n            if(col[i] == 'G') {\n                num[i] += 10;\n            } else if(col[i] == 'B') {\n                num[i] += 10;\n            }\n        }\n        sort(num.begin(), num.end());\n        bool flg = false;\n        do {\n            if(isOKSet(num[0], num[1], num[2]) && isOKSet(num[3], num[4], num[5]) && isOKSet(num[6], num[7], num[8])) {\n                rst.push_back(1);\n                flg = true;\n                break;\n            }\n        } while(next_permutation(num.begin(), num.end()));\n        if(flg == false) rst.push_back(0);\n    }\n\n    for(auto i : rst) cout << i << endl;\n    \n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "\n/*\nAOJ: Rummy\nhttps://onlinejudge.u-aizu.ac.jp/problems/2102\n着席位置 教卓から見て左中央\n*/\n\n#include <iostream>\n#include <math.h>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <queue>\n#include <stack>\n#include <utility>\n#include <tuple>\nusing namespace std;\n\nconst double pi = acos(-1);\n\n#define nyan cout<<\"(=^•ω•^=)\"<<endl;\n#define int long long\n\npair<int, char> card[10];\n//第一要素がランク，第二要素がスート\n\nbool setting(int a, int b, int c){\n    if(a==b&&b==c)return true;\n    if(b==a+1&&c==b+1)return true;\n    return false;\n}\n\nsigned main(){\n    int Query;cin>>Query;\n    for(int q=0;q<Query;q++){\n        for(int i=0;i<9;i++)cin>>card[i].first;\n        for(int i=0;i<9;i++)cin>>card[i].second;\n        sort(card,card+9);\n        bool ans=false;\n        do{\n            bool flag=false;\n            for(int i=0;i<3;i++){\n                if(card[3*i].second!=card[3*i+1].second)flag=true;\n                if(card[3*i+1].second!=card[3*i+2].second)flag=true;\n                if(!setting(card[3*i].first,card[3*i+1].first,card[3*i+2].first))flag=true;\n            }\n            if(flag)continue;\n            ans=true;\n        }while(next_permutation(card,card+9));\n        cout<<(ans?\"1\":\"0\")<<endl;\n    }\n    return 0;\n}\n\n/* 同じ方法だと麻雀の判定は厳しそう (14! = 87,178,291,200) */\n/* sortしてからwhile(next_permutation)をすることで */\n/* 全部の順列をまわることができるというのは新しい発見だった！ */\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nclass Card\n{\npublic:\n    int num;\n    char color;\n    bool operator<(const Card& c) const{\n        return color < c.color || (color == c.color && num < c.num);\n    }\n    Card operator+(int a) const{\n        Card c;\n        c.num = num + a;\n        c.color = color;\n        return c;\n    }\n    bool operator==(const Card& c) const{\n        return color == c.color && num == c.num;\n    }\n};\n\nint main()\n{\n    int n;\n    cin >> n;\n    while(--n >= 0){\n        vector<Card> c(9);\n        for(int i=0; i<9; ++i)\n            cin >> c[i].num;\n        for(int i=0; i<9; ++i)\n            cin >> c[i].color;\n        sort(c.begin(), c.end());\n\n        bitset<9> check;\n        bool ok = true;\n        for(int i=0; i<9; ++i){\n            if(check[i])\n                continue;\n            if(i+2 < 9 && c[i] == c[i+1] && c[i] == c[i+2]){\n                check[i] = check[i+1] = check[i+2] = true;\n                continue;\n            }\n\n            int a, b;\n            a = b = -1;\n            for(int j=i+1; j<9; ++j){\n                if(check[j])\n                    continue;\n                if(a == -1 && c[j] == c[i]+1)\n                    a = j;\n                if(b == -1 && c[j] == c[i]+2)\n                    b = j;\n            }\n            if(a == -1 || b == -1){\n                ok = false;\n                break;\n            }\n            check[i] = check[a] = check[b] = true;\n        }\n\n        if(ok)\n            cout << '1' << endl;\n        else\n            cout << '0' << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nbool f;\nint n, i, j;\nint card[9];\n\nbool judge (int a, int b, int c){\n        if (a == b && b == c) return true;\n        else if (a + 1 == b && a + 2 == c) return true;\n        return false;\n}\nint win(){\n        sort(card, card + 9);\n        do{\n                f = 1;\n                f = judge(card[0], card[1], card[2]);\n                if (f == true) f = judge(card[3], card[4], card[5]);\n                if (f == true) f = judge(card[6], card[7], card[8]);\n                if (f == 1) return 1;\n        }while (next_permutation(card, card+9));\n        return 0;\n}\n\nsigned main(){\n        cin >> n;\n        string color;\n        for (i = 0; i < n; i++){\n                for (j = 0; j < 9; j++){\n                        cin >> card[j];\n                }\n                for (j = 0; j < 9; j++){\n                        cin >> color;\n                        if (color == \"G\") card[j] += 10;\n                        else if (color == \"B\") card[j] += 20;\n                }\n                int ans = win();\n                cout << ans << endl;\n                /*sort(card, card + 9);\n                f = true;\n                f = judge(card[0], card[1], card[2]);\n                if (f == true) f = judge(card[3], card[4], card[5]);\n                if (f == true) f = judge(card[6], card[7], card[8]);\n                cout << (f ? 1 : 0) << endl;*/\n        }\n        return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <queue>\n#include <map>\n#include <sstream>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define EPS 1e-9\nint n;\nint card[3][10],num[10];\nchar co[10];\n\nbool ok(){\n\tint ret = 0;\n\trep(i,3){\n\t\tfor(int j=1; j<=7; j++){\n\t\t\tif( card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0 ){\n\t\t\t\tret++;\n\t\t\t\tcard[i][j]--; card[i][j+1]--; card[i][j+2]--;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\tfor(int j=1; j<=9; j++){\n\t\t\tif( card[i][j]>=3 ){\n\t\t\t\tret++;\n\t\t\t\tcard[i][j] -= 3;\n\t\t\t}\n\t\t}\n\t}\n\t//printf(\"ret:%d\\n\",ret);\n\treturn ret==3;\n}\nint main(){\n\tcin>>n;\n\twhile(n--){\n\t\tmemset(card,0,sizeof(card));\n\t\trep(i,9)cin>>num[i];\n\t\trep(i,9)cin>>co[i];\n\t\trep(i,9){\n\t\t\tint k = co[i]=='R'?0:co[i]=='G'?1:2;\n\t\t\tcard[k][num[i]]++;\n\t\t}\n\t\t//rep(i,9)printf(\"%d \",num[i]);puts(\"\");\n\t\t//rep(i,9)printf(\"%c \",co[i]);puts(\"\");\n\t\t\n\t\tputs(ok()?\"1\":\"0\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  // sort(card,card+10);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == 'G') card[i] += 20;\n        else if (color == 'B') card[i] += 40;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\nint line[3] = {3,6,9};\n\nbool isPair(vector<int> V){\n\n  if(V.size()%3) return false;\n\n  bool ans[3] = {true,true,true};\n  sort(V.begin(),V.end());\n\n  for(int i = 0; i < 3; i++)\n    for(int j = line[i]-2; j < min(line[i],(int)V.size()); j++)\n      if(V[j] != V[j-1]+1) ans[0] = false;\n     \n\n  int sum[MAX+1];\n  fill(sum,sum+MAX+1,0);\n  for(int i = 0; i < V.size(); i++)\n    sum[V[i]]++;\n\n  for(int i = 1; i < V.size(); i++)\n    if(sum[V[i]] != sum[V[i-1]]) ans[2] = false;\n  \n  for(int i = 0; i <= MAX; i++)\n    if(sum[i]%3) ans[1] = false;\n\n  return (ans[0]||ans[1]||ans[2]);\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n  int n;\n  cin>>n;\n  int cards[9];\n  char color;\n  int num[3][9];\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++)\n      for(int k=0;k<9;k++)num[j][k]=0;\n    for(int j=0;j<9;j++) cin>>cards[j];\n    for(int j=0;j<9;j++){\n      cin>>color;\n      if(color=='R'){\n\tnum[0][cards[j]]++;\n      }else if(color=='G'){\n\tnum[1][cards[j]]++;\n      }else{\n\tnum[2][cards[j]]++;\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<7;j++){\n\twhile(num[k][j]>0 && num[k][j+1]>0 && num[k][j+2]>0){\n\t  num[k][j]--;num[k][j+1]--;num[k][j+2]--;\n\t}\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n\tif(num[k][j]>=3)num[k][j]-=3;\n      }\n    }\n    bool ans=true;\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n\t//cout << num[k][j] << \" \" ;\n\tif(num[k][j]!=0){\n\t  ans=false;\n\t  break;\n\t}\n      }\n      //cout << endl;\n    }\n    if(ans==true) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n  int T; scanf(\"%d\", &T);\n  while (T--) {\n    pair<int, char> card[9];\n    for (int i = 0; i < 9; ++i) { scanf(\"%d\", &card[i].first); }\n    for (int i = 0; i < 9; ++i) { scanf(\" %c\", &card[i].second); }\n    int ans = 0;\n    sort(card, card+9);\n    do {\n      for (int i = 0; i < 3; ++i) {\n        for (int j = 1; j < 3; ++j) {\n          if (card[3*i+j].second != card[3*i].second) { goto bad; }\n        }\n        bool same = true;\n        for (int j = 1; j < 3; ++j) {\n          if (card[3*i+j].first != card[3*i].first) {\n            same = false;\n            break;\n          }\n        }\n        bool renban = true;\n        for (int j = 1; j < 3; ++j) {\n          if (card[3*i+j].first != card[3*i+j-1].first + 1) {\n            renban = false;\n            break;\n          }\n        }\n        if (!same && !renban) { goto bad; }\n      }\n      ans = 1;\n      break;\nbad:;\n    } while (next_permutation(card, card+9));\n    printf(\"%d\\n\", ans);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tint num[9];\n\t\tint cnt=0;\n\t\tint card[3][15]={0};\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin >> num[i];\n\t\t}\n\t\tint c;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tchar color; cin >> color;\n\t\t\tif(color == 'R') c = 0;\n\t\t\telse if(color == 'B') c = 1;\n\t\t\telse c = 2;\n\t\t\tcard[c][num[i]]++;\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tif(card[i][j] >= 3) {\n\t\t\t\t\tcard[i][j] -= 3;\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\twhile(card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0){\n\t\t\t\t\tcard[i][j]--; card[i][j+1]--; card[i][j+2]--;\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cnt==3) cout << \"1\" << endl;\n\t\telse cout << \"0\" << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct card{int num; char color;};\ncard set[9];\nint a[9]={0,1,2,3,4,5,6,7,8};\nbool same_num(int i){\n    return set[a[i]].num==set[a[i+1]].num&&set[a[i+1]].num==set[a[i+2]].num;\n}\nbool consecutive_num(int i){\n    return set[a[i]].num==set[a[i+1]].num+1&&set[a[i+1]].num==set[a[i+2]].num+1;\n}\nbool check(int i){\n    if(set[a[i]].color==set[a[i+1]].color&&set[a[i+1]].color==set[a[i+2]].color&&(same_num(i)||consecutive_num(i))) return true;\n    return false;\n}\nbool ans(){\n    do{\n        if(check(0)&&check(3)&&check(6)) return true;\n    }while(next_permutation(a,a+9));\n    return false;\n}\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int it=0;it<t;it++){\n        for(int i=0;i<9;i++){\n            scanf(\"%d\",&set[i].num);\n        }\n        getchar();\n        for(int i=0;i<9;i++){\n            set[i].color=getchar();\n            getchar();\n        }\n        if(ans()) printf(\"1\\n\");\n        else printf(\"0\\n\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint T,card[16];\n\nbool is_same_number(int a,int b,int c){\n\tif(a==b&&b==c)return true;\n\treturn false;\n}\nbool is_sequence(int a,int b,int c){\n\tif(a+2==b+1&&b+1==c)return true;\n\treturn false;\n}\nbool is_good_set(int a,int b,int c){\n\treturn is_same_number(a,b,c)||is_sequence(a,b,c);\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0],card[1],card[2])\n\t\t\t&&is_good_set(card[3],card[4],card[5])\n\t\t\t&&is_good_set(card[6],card[7],card[8]);\n}\n\nint win(){\n\tsort(card,card+9);\n\tdo{\n\t\tif(is_all_good_set())return 1;\n\t}while(next_permutation(card,card+9));\n\treturn 0;\n}\n\nint main(){\n\tcin >>T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin>>card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin>>color;\n\t\t\tif(color==\"G\")card[i]+=10;\n\t\t\telse if(color==\"B\")card[i]+=20;\n\t\t}\n\t\tcout<<win()<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n\nusing namespace std;\n\n\n\nint main(){\n\n\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++){\n\t\tint n[9];\n\t\tchar c[9];\n\t\tint R[9];\n\t\tint G[9];\n\t\tint B[9];\n\t\tint r = 0, g = 0, b = 0;\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tc[j] = 0;\n\t\t\tn[j] = 0;\n\t\t\tR[j] = 10;\n\t\t\tG[j] = 10;\n\t\t\tB[j] = 10;\n\t\t}\n\n\t\t//????????????\t\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> n[j];\n\t\t}\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> c[j];\n\t\t}\n\n\t\t/*for (int j = 0; j < 9; j++){\n\t\t\tprintf(\"%d \", n[j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tprintf(\"%c \", c[j]);\n\t\t}\n\t\tprintf(\"\\n\");*/\n\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tif (c[j] == 'R'){\n\t\t\t\tR[r] = n[j];\n\t\t\t\tr++;\n\t\t\t}\n\t\t\telse if (c[j] == 'G'){\n\t\t\t\tG[g] = n[j];\n\t\t\t\tg++;\n\t\t\t}\n\t\t\telse if (c[j] == 'B'){\n\t\t\t\tB[b] = n[j];\n\t\t\t\tb++;\n\t\t\t}\n\t\t}\n\t\tsort(R, R + 9);\n\t\tsort(G, G + 9);\n\t\tsort(B, B + 9);\n\t\t//??????\n\t\tint e = 0;\n\t\t\n\t\t//R\n\t\tif (R[0] != 10){\n\t\t\tint p=R[0];\n\t\t\tint f = 0;\n\t\t\tint d = 0;\n\t\t\tfor (int j = 1; j < 9; j++){\n\t\t\t\tif (R[j] == 10)break;\n\t\t\t\t//printf(\"R %d \\n\", R[j]);\n\t\t\t\tif (R[j] != p + 1 && R[j]!=p){\n\t\t\t\t\tf = 0;\n\t\t\t\t\td = 0;\n\t\t\t\t\tp = R[j];\n\t\t\t\t}\n\t\t\t\telse if (R[j] == p + 1){\n\t\t\t\t\tp++;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\telse if (R[j] == p){\n\t\t\t\t\td++;\n\t\t\t\t}\n\t\t\t\tif (f == 2){\n\t\t\t\t\t//printf(\"?????????:f\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t\tif (d == 2){\n\t\t\t\t\t//printf(\"?????????:d\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//G\n\t\tif (e != 3 && G[0] != 10){\n\t\t\tint p = G[0];\n\t\t\tint f = 0;\n\t\t\tint d = 0;\n\t\t\tfor (int j = 1; j < 9; j++){\n\t\t\t\tif (G[j] == 10)break;\n\t\t\t\t//printf(\"G %d\\n\", G[j]);\n\t\t\t\tif (G[j] != p + 1 && G[j] != p){\n\t\t\t\t\tf = 0;\n\t\t\t\t\td = 0;\n\t\t\t\t\tp = G[j];\n\t\t\t\t}\n\t\t\t\telse if (G[j] == p + 1){\n\t\t\t\t\tp++;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\telse if (G[j] == p){\n\t\t\t\t\td++;\n\t\t\t\t}\n\n\t\t\t\tif (f == 2){\n\t\t\t\t\t//printf(\"?????????:f\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t\tif (d == 2){\n\t\t\t\t\t//printf(\"?????????:d\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//B\n\t\tif (e != 3 && B[0] != 10){\n\t\t\tint p = B[0];\n\t\t\tint f = 0;\n\t\t\tint d = 0;\n\t\t\tfor (int j = 1; j < 9; j++){\n\t\t\t\tif (B[j] == 10)break;\n\t\t\t\t//printf(\"B %d\\n\", B[j]);\n\t\t\t\tif (B[j] != p + 1 && B[j] != p){\n\t\t\t\t\tf = 0;\n\t\t\t\t\td = 0;\n\t\t\t\t\tp = B[j];\n\t\t\t\t}\n\t\t\t\telse if (B[j] == p + 1){\n\t\t\t\t\tp++;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\telse if (B[j] == p){\n\t\t\t\t\td++;\n\t\t\t\t}\n\n\t\t\t\tif (f == 2){\n\t\t\t\t\t//printf(\"?????????:f\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t\tif (d == 2){\n\t\t\t\t\t//printf(\"?????????:d\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (e == 3)cout << 1 << endl;\n\t\telse cout << 0 << endl;\n\t\t\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        int num1[10]={};\n        int num2[10]={};\n        int num3[10]={};\n        int num[10];\n        char mo[10];\n        //cout<<\"a\"<<endl;\n        for(int j=0;j<9;j++){\n            cin>>num[j];\n        }\n        //cout<<\"b\"<<endl;\n        for(int j=0;j<9;j++){\n            //cout<<j<<\" a\"<<endl;\n            cin>>mo[j];\n            if(mo[j]=='R'){\n                num1[num[j]]++;\n            }\n            else if(mo[j]=='G'){\n                num2[num[j]]++;\n            }\n            else num3[num[j]]++;\n        }\n        int flag=1;\n        for(int j=1;j<10;j++){\n            if(num1[j]%3!=0){\n                if(num1[j+1]==0 || num1[j+2]==0){\n                    flag=0;\n                    break;\n                }\n                else{\n                    num1[j]--;\n                    num1[j+1]--;\n                    num1[j+2]--;\n                    j--;\n                }\n            }\n        }\n        for(int j=1;j<10;j++){\n            if(num2[j]%3!=0){\n                if(num2[j+1]==0 || num2[j+2]==0){\n                    flag=0;\n                    break;\n                }\n                else{\n                    num2[j]--;\n                    num2[j+1]--;\n                    num2[j+2]--;\n                    j--;\n                }\n            }\n        }\n        for(int j=1;j<10;j++){\n            if(num3[j]%3!=0){\n                if(num3[j+1]==0 || num3[j+2]==0){\n                    flag=0;\n                    break;\n                }\n                else{\n                    num3[j]--;\n                    num3[j+1]--;\n                    num3[j+2]--;\n                    j--;\n                }\n            }\n        }\n        if(flag) cout<<1<<endl;\n        else cout<<0<<endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\n#define f first\n#define s second\n\npair<char, int> r[10];\n\nbool sameColor(char x, char y, char z){\n  if(x == y && y == z) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if((x == y-1 && x == z-2) || (x == y+1 && x == z+2)) return true;\n  else return false;\n}\n\nbool solve(){\n    do{\n    int cnt = 0;\n    \n    for(int i = 0 ; i <= 6 ; i += 3){\n      if(sameColor(r[i].f, r[i+1].f, r[i+2].f)){\n\tif(isContinue(r[i].s, r[i+1].s, r[i+2].s) ||\n\t   sameNumber(r[i].s, r[i+1].s, r[i+2].s)){\n\t  cnt++;\n\t}\n      }\n    }\n    if(cnt == 3){\n      return true;\n    }\n    }while(next_permutation(r, r+9));\n}\n\nint main(){\n  int cs;\n\n \n  cin >> cs;\n  while(cs--){\n    int B=0, G=0, R=0;\n    \n    for(int i = 0 ; i < 9 ; i++) cin >> r[i].s;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> r[i].f;\n      if(r[i].f == 'B') B++;\n      if(r[i].f == 'G') G++;\n      if(r[i].f == 'R') R++;\n    }\n    \n    if(B%3 != 0 || G%3 != 0 || R%3 != 0){\n      cout << 0 << endl;\n      continue;\n    }\n\n    bool ans = false;\n    ans = solve();\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <sstream>\n#include <cassert>\n#include <list>\nusing namespace std;\nstatic const double EPS = 1e-8;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> PI;\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define mp(a,b) make_pair(a,b)\n#define pb(a) push_back(a)\n#define SZ(a) (int(a.size()))\n#define F first\n#define S second\nconst double pi=acos(-1);\nint dx[]={0,1,0,-1},dy[]={1,0,-1,0};\n\n\nint num[9];\n\nvoid solve(){\n  rep(i,9)cin>>num[i];\n  vector<PI> in;\n  rep(i,9){\n    char ch;\n    cin>>ch;\n    in.pb(mp(ch,num[i]));\n  }\n  sort(ALL(in));\n\n  do{\n    bool ok=true;\n    rep(i,3){\n      if(in[i*3].F==in[i*3+1].F && in[i*3+1].F==in[i*3+2].F &&\n         (in[i*3].S==in[i*3+1].S-1 && in[i*3+1].S==in[i*3+2].S-1 ||\n          in[i*3].S==in[i*3+1].S && in[i*3+1].S==in[i*3+2].S))continue;\n      ok=false;\n      break;\n    }\n    if(ok){\n      cout<<1<<endl;\n      return;\n    }\n  }while(next_permutation(ALL(in)));\n\n  cout<<0<<endl;\n}\n\nmain(){\n  int T;\n  cin>>T;\n  while(T--)solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint T, card[9];\n\nbool is_same_number(int a, int b, int c) {\n  return (a==b && b==c) && c==a;\n}\n\nbool is_sequence (int a, int b, int c) {\n  return (a+2==b+1 && b+1==c) && c==a+2;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation (card, card+9));\n  return 0;\n}\n  \nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] +=10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#include<algorithm>\n#define REP(i, n) for(int i = 0;i < n;i++)\n#define REPR(i, n) for(int i = n;i >= 0;i--)\n#define FOR(i, m, n) for(int i = m;i < n;i++)\n#define FORR(i, m, n) for(int i = m;i >= n;i--)\n#define SORT(v, n) sort(v, v+n);\n#define VSORT(v) sort(v.begin(), v.end());\n#define llong long long\n#define pb(a) push_back(a)\n#define INF 999999999\nusing namespace std;\ntypedef pair<int, int> P;\ntypedef pair<llong, llong> LP;\ntypedef pair<int, P> PP;\ntypedef pair<llong, LP> LPP;\n\nint dy[]={0, 0, 1, -1, 0};\nint dx[]={1, -1, 0, 0, 0};\n\nint main(){\n    int T;\n    cin >> T;\n    REP(i,T){\n        vector<int> n(9);\n        string c;\n        REP(j,9){\n            cin >> n[j];\n        }\n        REP(j,9){\n            cin >> c[j];\n        }\n        //入力終わり\n\n        REP(j,9){\n            if(c[j]=='G'){\n                n[j]+=10;\n            }\n            if(c[j]=='B'){\n                n[j]+=20;\n            }\n        }\n        //データの統合（R=0,G=10,B=20）\n\n        VSORT(n);\n        \n        int t=0;\n        int j=2;\n        while(j<9){\n            if(n[j]==1+n[j-2] && n[j-2]==1+n[j-4] && n[j-1]==1+n[j-3] && n[j-3]==1+n[j-5] && n[j]==n[j-1]){\n                t+=2;\n            }\n            else if(n[j]==n[j-1] && n[j-1]==n[j-2]){\n                t+=1;\n            }\n            else if(n[j]==1+n[j-1] && n[j-1]==1+n[j-2]){\n                t+=1;\n            }\n            else{\n            }\n            j+=3;\n        }\n        cout << t/3 << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define loop for(;;)\n#define trace(var) cerr<<\">>> \"<<#var<<\" = \"<<var<<endl;\n#define inf (1e9)\n#define eps (1e-9)\n\ntemplate<class S, class T> inline\nostream& operator<<(ostream&os, pair<S,T> p) {\n  return os << '(' << p.first << \", \" << p.second << ')';\n}\n\ntemplate<class S, class T, class U> inline\nostream& operator<<(ostream&os, tuple<S,T,U> t) {\n  return os << '('\n    << get<0>(t) << \", \"\n    << get<1>(t) << \", \"\n    << get<2>(t) << ')';\n}\n\ntemplate<class T> inline\nostream& operator<<(ostream&os, vector<T> v) {\n  if (v.size() == 0) { return os << \"(empty)\"; }\n  os << v[0];\n  for (int i=1, len=v.size(); i<len; ++i) os << ' ' << v[i];\n  return os;\n}\n\ntemplate<class T> inline\nistream& operator>>(istream&is, vector<T>&v) {\n  rep (i, v.size()) is >> v[i];\n  return is;\n}\n\nint dx[] = { -1, 0, 1, 0 };\nint dy[] = {  0, -1, 0, 1 };\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\nint ok(vi& xs) {\n  int n = xs.size();\n  if (n % 3 > 0) return 0;\n  vi s(9, 0);\n  for (int x: xs) s[x-1]++;\n  // trace(xs); trace(s);\n  for (int i = 0; i < 9; ) {\n    if (s[i] == 0) {\n      ++i;\n    }\n    else if (s[i] >= 3) {\n      s[i] -= 3;\n    }\n    else if (i+2 < 9 and (s[i] > 0 and s[i+1] > 0 and s[i+2] > 0)) {\n      s[i]--; s[i+1]--; s[i+2]--;\n    }\n    else {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  random_device dev;\n  mt19937 rand(dev());\n\n  int n; cin >> n;\n  rep (_, n) {\n    vi xs(9);\n    vector<char> ys(9);\n    cin >> xs;\n    cin >> ys;\n    vi as, bs, cs;\n    rep (i, 9) {\n      if (ys[i] == 'R') as.push_back(xs[i]);\n      else if (ys[i] == 'G') bs.push_back(xs[i]);\n      else cs.push_back(xs[i]);\n    }\n    cout << (ok(as) * ok(bs) * ok(cs)) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define iota(i,n,b,s) for(int i=int(b);i!=int((b)+(s)*(n));i+=(s))\n#define range(i,n,m) iota(i,(((n)>(m))?((n)-(m)):((m)-(n))),(n),((n)>(m)?-1:1))\n#define rep(i,n) iota(i,(n),0,1)\n#define loop for(;;)\n\n#define INF (1e9)\n#define EPS (1e-9)\n#define cons(a,b) (make_pair(a,b))\n#define car(a) (a.first)\n#define cdr(a) (a.second)\n#define cadr(a) (car(cdr(a)))\n#define cddr(a) (cdr(cdr(a)))\n#define all(a) a.begin(), a.end()\n#define trace(var) cerr<<\">>> \"<<#var<<\" = \"<<var<<endl;\n\ntypedef long long Integer;\ntypedef double Real;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef map<string,int> Dictionary;\nconst Real PI = acos(-1);\n\ntemplate<class S, class T>\nostream& operator<<(ostream& os, pair<S,T> p) {\n  os << '(' << car(p) << \", \" << cdr(p) << ')';\n  return os;\n}\n\ntemplate<class T>\nostream& operator<<(ostream& os, vector<T> v) {\n  if (v.size() == 0) {\n    os << \"(empty)\";\n    return os;\n  }\n  os << v[0];\n  for (int i=1, len=v.size(); i<len; ++i) os << ' ' << v[i];\n  return os;\n}\n\nint dx[] = { -1, 0, 1, 0 };\nint dy[] = {  0, -1, 0, 1 };\n\nbool ng(int a, int b, int c) {\n  if (a + 2 == c && b + 1 == c) return false;\n  if (a == b && b == c) return false;\n  return true;\n}\n\nint main() {\n\n  int n; cin >> n;\n  while (n--) {\n    vector<int> cs(9);\n    rep (i, 9) cin >> cs[i];\n    rep (i, 9) {\n      char c; cin >> c;\n      if (c == 'G') cs[i] += 10;\n      if (c == 'B') cs[i] += 20;\n    }\n\n    vector<int> is(9);\n    rep (i, 9) is[i] = i;\n    do {\n      bool bl = true;\n      rep (k, 3) {\n        if (ng (cs[is[3*k+0]], cs[is[3*k+1]], cs[is[3*k+2]])) bl = false;\n      }\n      if (bl) {\n        cout << 1 << endl;\n        goto more;\n      }\n    } while (next_permutation(all(is)));\n    cout << 0 << endl;\n\nmore:;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\n\nbool isOK(int a, int b, int c){\n\n  int in[3] = {a,b,c};\n  sort(in,in+3);\n\n  if(a == b && b == c) return true;\n  if(in[0]+1 == in[1] && in[1]+1 == in[2]) return true;\n  return false;\n}\n\nbool isPair(vector<int> V){\n\n  bool out = false;\n\n  if(V.size()%3) return false;\n  sort(V.begin(),V.end());\n  \n  do{\n    bool check = true;\n\n    for(int i = 0; i < V.size()/3; i++)\n      if(!isOK(V[i*3],V[i*3+1],V[i*3+2])) check = false;\n    \n    out = (out||check);\n    if(out) break;\n\n  }while(next_permutation(V.begin(),V.end()));\n\n  return out;\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <iterator>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nconstexpr int number_of_hands = 9;\ntypedef pair<int, char> card;\n\ninline bool same_colors(vector<card>::const_iterator first, vector<card>::const_iterator last) {\n\tconst char color = first->second;\n\twhile(++first != last) {\n\t\tif(color != first->second) return false;\n\t}\n\n\treturn true;\n}\ninline bool continues(vector<card>::const_iterator first, vector<card>::const_iterator last) {\n\tint next = first->first;\n\twhile(++first != last) {\n\t\tif(++next != first->first) return false;\n\t}\n\n\treturn true;\n}\ninline bool same_numbers(vector<card>::const_iterator first, vector<card>::const_iterator last) {\n\tconst int number = first->first;\n\twhile(++first != last) {\n\t\tif(number != first->first) return false;\n\t}\n\n\treturn true;\n}\n\ninline bool is_set(vector<card>::const_iterator first, vector<card>::const_iterator last) {\n\treturn same_colors(first, last) && (continues(first, last) || same_numbers(first, last));\n}\n\nbool win(const vector<card>& cards) {\n\tfor(int i = 0; i < number_of_hands; i += 3) {\n\t\tif(!is_set(cards.begin() + i, cards.begin() + i + 3)) return false;\n\t}\n\n\treturn true;\n}\n\nint judge(vector<card>& cards) {\n\tsort(cards.begin(), cards.end());\n\tdo {\n\t\tif(win(cards)) return 1;\n\t} while(next_permutation(cards.begin(), cards.end()));\n\n\treturn 0;\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tint T;\n\tcin >> T;\n\n\twhile(T--) {\n\t\tvector<card> cards(number_of_hands);\n\t\tfor(int i = 0; i < number_of_hands; ++i) {\n\t\t\tcin >> cards[i].first;\n\t\t}\n\n\t\tfor(int i = 0; i < number_of_hands; ++i) {\n\t\t\tcin >> cards[i].second;\n\t\t}\n\n\t\tcout << judge(cards) << endl;\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <set>\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,j) FOR(i,0,j)\n#define mp std::make_pair\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int,int> P;\ntypedef std::pair<int,P> State;\n\nconst int INF = 1001001001;\n\n// S N E W(南北東西)\nconst int dx[8] = {0, 0, 1, -1, 1, 1, -1, -1}, dy[8] = {1, -1, 0, 0, 1, -1, 1, -1};\n\nint counter[3][10], A[50];\nchar C[50];\n\nint toIndex(char c){\n    std::string s = \"RGB\";\n    REP(i, 3){if(c == s[i]){return i;}}\n}\n\nint can(int x, int y){\n    if(x > 9){return 0;}\n    \n    int res = 0;\n    int c = counter[y][x];\n    if(c > 0){\n        if(c >= 3){\n            counter[y][x] -= 3;\n            res = std::max(res, can(x, y) + 3);\n            counter[y][x] += 3;\n        }\n        if(x+2 <= 9 && counter[y][x+1] > 0 && counter[y][x+2] > 0){\n            counter[y][x]   -= 1;\n            counter[y][x+1] -= 1;\n            counter[y][x+2] -= 1;\n            res = std::max(res, can(x, y) + 3);\n            counter[y][x]   += 1;\n            counter[y][x+1] += 1;\n            counter[y][x+2] += 1;\n        }\n    }\n    return std::max(res, can(x+1, y));\n}\n\nint main(){\n    int N;\n    std::cin >> N;\n\n    REP(_, N){\n        REP(i, 3){\n            REP(j, 10){\n                counter[i][j] = 0;\n            }\n        }\n\n        REP(i, 9){\n            std::cin >> A[i];\n        }\n\n        REP(i, 9){\n            std::cin >> C[i];\n        }\n\n        REP(i, 9){\n            counter[toIndex(C[i])][A[i]]++;\n        }\n\n        if(can(0, 0) + can(0, 1) + can(0, 2) == 9){\n            puts(\"1\");\n        }else{\n            puts(\"0\");\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"R\") n[k] += 20;\n\t\t\tif(color == \"G\") n[k] += 40;\n\t\t\tif(color == \"B\") n[k] += 60;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n#define _all(arg) begin(arg),end(arg)\n\n#define C first\n#define N second\n\ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0; }\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0; }\n\nusing namespace std;\nusing pci=pair<char,int>;\n\nbool checkpair(vector<pci> &cards) {\n\trep(i,cards.size()) {\n\t\trep(j,i+1,cards.size()) {\n\t\t\trep(k,j+1,cards.size()) {\n\t\t\t\tif((cards[i].N == cards[j].N && cards[j].N == cards[k].N)\n\t\t\t\t &&(cards[i].C == cards[j].C && cards[j].C == cards[k].C)) {\n\t\t\t\t\tcards.erase(cards.begin() + i);\n\t\t\t\t\tcards.erase(cards.begin() + j-1);\n\t\t\t\t\tcards.erase(cards.begin() + k-2);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nbool checkseq(vector<pci> &cards) {\n\trep(i,cards.size()) {\n\t\trep(j,i+1,cards.size()) {\n\t\t\trep(k,j+1,cards.size()) {\n\t\t\t\tif((cards[i].N == cards[j].N-1 && cards[j].N == cards[k].N-1)\n\t\t\t\t &&(cards[i].C == cards[j].C && cards[j].C == cards[k].C)) {\n\t\t\t\t\tcards.erase(cards.begin() + i);\n\t\t\t\t\tcards.erase(cards.begin() + j-1);\n\t\t\t\t\tcards.erase(cards.begin() + k-2);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--) {\n\t\tvector<pci> cards(9);\n\t\trep(i, 9) cin >> cards[i].N;\n\t\trep(i, 9) cin >> cards[i].C;\n\t\tsort(cards.begin(), cards.end());\n\n\t\trep(c, 3) {\n\t\t\tcheckpair(cards);\n\t\t\tcheckseq(cards);\n\t\t}\n\n\t\tcout << ((cards.size())?\"0\":\"1\") << endl;\n\t}\n        \n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b&&b == c)return true;\n\telse return false;\n}\n\nbool is_sequence(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2)return true;\n\telse return false;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2])\n\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo{\n\t\tif (is_all_good_set)\n\t\t\treturn 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\")card[i] += 20;\n\t\t}\n\t\tcout << win() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nint main()\n{\n    int n = 0;\n    int ans = 0;\n    std::cin >> n;\n    std::vector<int> num(9);\n    std::string color;\n\n    for (int i = 0; i < n; i++) {\n        ans = 0;\n        for (int j = 0; j < 9; j++) {\n            std::cin >> num.at(j);\n        }\n        for (int k = 0; k < 9; k++) {\n            std::cin >> color;\n            if (color == \"R\") {\n                num.at(k) += 10;\n            } else if (color == \"G\") {\n                num.at(k) += 20;\n            } else {\n                num.at(k) += 30;\n            }\n        }\n        std::sort(num.begin(), num.end());\n        for (size_t l = 0; l < 9; l += 3) {\n            if (num.at(l) == num.at(l + 1) && num.at(l) == num.at(l + 2)) {\n                ans++;\n            } else if (num.at(l) + 1 == num.at(l + 1) && num.at(l) + 2 == num.at(l + 2)) {\n                ans++;\n            } else {\n\n                break;\n            }\n        }\n        if (ans == 3) {\n            std::cout << 0 << '\\n';\n            ans = 0;\n        } else {\n            std::cout << 0 << '\\n';\n        }\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "//55\n\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n#include <map>\n#include <queue>\nusing namespace std;\ntypedef vector<int> NODE;\n#define rep(i,n) for(int i=0;i<n;i++)\n\nint ctoi(char c){\n\tswitch(c){\n\tcase 'R':return 0;\n\tcase 'G':return 1;\n\tcase 'B':return 2;\n\t};\n\treturn -1;\n}\n\nbool isable(vector<int> data){\n\t/* q */\n\tsort(data.begin(),data.end());\n\tvector<int> check = data;\n\tvector< vector<int> > can;\n\tcheck.erase(unique(check.begin(),check.end()),check.end());\n\t//rep(i,data.size())cout << data[i] << \" \";cout << endl;\n\tif(check.size()>=3){ \n\t\trep(i,check.size()-2){\n\t\t\tif(check[i+1] == check[i]+1 && check[i+2] == check[i]+2){\n\t\t\t\tvector<int> tmp;\n\t\t\t\trep(j,3)tmp.push_back(check[i+j]);\n\t\t\t\tcan.push_back(tmp);\n\t\t\t}\n\t\t}\n\t}\n\trep(i,check.size()){\n\t\tint t = count(data.begin(),data.end(),check[i]);\n\t\tif(t>=3){\n\t\t\tvector<int> tmp;\n\t\t\trep(j,3)tmp.push_back(check[i]);\n\t\t\tcan.push_back(tmp);\n\t\t}\n\t}\n\tqueue<NODE> Q;\n\t/*rep(i,can.size()){\n\t\trep(j,can[i].size())cout << can[i][j] << \" \";\n\t\tcout << endl;\n\t}*/\n\t\n\tmap<vector<int>,bool> done;\n\tNODE empty;\n\tQ.push(empty);\n\twhile(Q.size()){\n\t\tNODE q = Q.front(); Q.pop();\n\t\tif(q.size()>9)continue;\n\n\t\tsort(q.begin(),q.end());\n\t\tif(done[q])continue;\n\t\tdone[q] = true;\n\n\t\tif(q.size() == data.size()){\n\t\t\tif(q == data){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\trep(i,can.size()){\n\t\t\tNODE next = q;\n\t\t\trep(j,3)next.push_back(can[i][j]);\n\t\t\tQ.push(next);\n\t\t}\n\t}\n\treturn false;\n\t\n}\nint main(){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tbool ret = true;\n\t\tvector< vector<int> > co(3);\n\t\tint tmp[9];char c;\n\t\trep(i,9)cin >> tmp[i];\n\t\trep(i,9){\n\t\t\tcin >> c;\n\t\t\tco[ctoi(c)].push_back(tmp[i]);\n\t\t}\n\t\trep(i,3)if(co[i].size()%3!=0)ret = false;\n\t\t\n\t\tif(ret){\n\t\t\trep(i,3){\n\t\t\t\tif(co[i].size()>=3)ret &= isable(co[i]);\n\t\t\t}\n\t\t}\n\t\tcout << ret << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nbool FLG;\n\nstruct Info{\n\tint num;\n\tchar color[2];\n};\n\nvoid calc(int R_table[10],int G_table[10],int B_table[10]){\n\tint trio = 0;\n\n\tfor(int k=1; k<=7; k++){\n\t\tif(R_table[k] > 2){\n\t\t\ttrio++;\n\t\t\tR_table[k] -= 3;\n\t\t}\n\t\tif(G_table[k] > 2){\n\t\t\ttrio++;\n\t\t\tG_table[k] -= 3;\n\t\t}\n\t\tif(B_table[k] > 2){\n\t\t\ttrio++;\n\t\t\tB_table[k] -= 3;\n\t\t}\n\n\t\twhile(R_table[k] > 0 && R_table[k+1] > 0 && R_table[k+2] > 0){\n\t\t\ttrio++;\n\t\t\tR_table[k]--;\n\t\t\tR_table[k+1]--;\n\t\t\tR_table[k+2]--;\n\t\t}\n\t\twhile(G_table[k] > 0 && G_table[k+1] > 0 && G_table[k+2] > 0){\n\t\t\ttrio++;\n\t\t\tG_table[k]--;\n\t\t\tG_table[k+1]--;\n\t\t\tG_table[k+2]--;\n\t\t}\n\t\twhile(B_table[k] > 0 && B_table[k+1] > 0 && B_table[k+2] > 0){\n\t\t\ttrio++;\n\t\t\tB_table[k]--;\n\t\t\tB_table[k+1]--;\n\t\t\tB_table[k+2]--;\n\t\t}\n\t}\n\n\tfor(int k=1; k <= 9; k++){\n\t\tif(R_table[k] == 3){\n\t\t\ttrio++;\n\t\t\tR_table[k] -= 3;\n\t\t}\n\t\tif(G_table[k] == 3){\n\t\t\ttrio++;\n\t\t\tG_table[k] -= 3;\n\t\t}\n\t\tif(B_table[k] == 3){\n\t\t\ttrio++;\n\t\t\tB_table[k] -= 3;\n\t\t}\n\t}\n\n\tif(trio == 3){\n\t\tFLG = true;\n\t}\n}\n\nvoid func(){\n\tInfo info[9];\n\tint R_table[10] = {0},G_table[10] = {0},B_table[10] = {0};\n\n\tfor(int i = 0; i < 9; i++){\n\t\tscanf(\"%d\",&info[i].num);\n\t}\n\n\tfor(int i = 0; i < 9; i++){\n\t\tscanf(\"%s\",info[i].color);\n\t\tswitch(info[i].color[0]){\n\t\tcase 'R':\n\t\t\tR_table[info[i].num]++;\n\t\t\tbreak;\n\t\tcase 'G':\n\t\t\tG_table[info[i].num]++;\n\t\t\tbreak;\n\t\tcase 'B':\n\t\t\tB_table[info[i].num]++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tFLG = false;\n\n\tcalc(R_table,G_table,B_table);\n\n\tif(FLG)printf(\"1\\n\");\n\telse{\n\t\tprintf(\"0\\n\");\n\t}\n}\n\nint main(){\n\n\tint T;\n\n\tscanf(\"%d\",&T);\n\n\tfor(int i = 0; i < T; i++){\n\t\tfunc();\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint card[3][10];\n\nbool solve(){\n\n\tint cnt = 0;\n\n\tfor(int c=0; c<3; ++c){\n\t\tfor(int k=1; k<=9; ++k){\n\t\t\t\n\t\t\t//counting same-card set\n\t\t\tcnt += card[c][k]/3;\n\t\t\tcard[c][k] %= 3;\n\t\t\t\t\n\t\t\tif(k<=7){\n\t\t\t\t\n\t\t\t\t//counting serial-number set\n\t\t\t\tint sub = min(card[c][k], min(card[c][k+1], card[c][k+2]));\n\n\t\t\t\tfor(int i=0; i<3; ++i){\n\t\t\t\t\tcard[c][k+i] -= sub;\n\t\t\t\t}\n\n\t\t\t\tcnt += sub;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cnt>=3;\n}\n\nint main(){\n\t\n\tint n;\n\tcin>>n;\n\n\twhile(n--){\n\t\t\t\n\t\tint a[10];\n\t\t\t\n\t\tmemset(card, 0, sizeof(card));\n\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin>>a[i];\n\t\t}\n\n\t\tfor(int i=0; i<9; ++i){\n\n\t\t\tchar b;\n\t\t\tcin>>b;\n\t\t\tcard[b=='R'?0:b=='G'?1:2][a[i]]++;\n\t\t}\n\n\t\tcout << solve() << endl;\n\t}\t\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tcin>>n;\n\tint nums[10];\n\tchar colors[10];\n\tfor(int i = 0; i < n; i++){\n\t\t//vector<int> R,G,B;\n\t\tint R[10];\n\t\tint G[10];\n\t\tint B[10];\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tR[i]=G[i]=B[i]=0;\n\t\t}\n\n\t\tint rsize=0;\n\t\tint gsize=0;\n\t\tint bsize=0;\n\t\tfor(int j = 0; j < 9; j++)\n\t\t\tcin>>nums[j];\n\t\tfor(int j = 0; j < 9; j++){\n\t\t\tcin>>colors[j];\n\t\t\tif(colors[j]=='R'){\n\t\t\t\tR[nums[j]]++;\n\t\t\t\trsize++;\n\t\t\t}\n\t\t\telse if(colors[j]=='G'){\n\t\t\t\tG[nums[j]]++;\n\t\t\t\tgsize++;\n\t\t\t}\n\t\t\telse if(colors[j]=='B'){\n\t\t\t\tB[nums[j]]++;\n\t\t\t\tbsize++;\n\t\t\t}\n\t\t}\n\t\tif(rsize%3!=0||gsize%3!=0||bsize%3!=0){\n\t\t\tcout<<0<<endl;\n\t\t}\n\t\telse{\n\t\t\tbool f=false;\n\t\t\twhile(1){\n\t\t\t\tif(rsize==0)\n\t\t\t\t\tbreak;\n\t\t\t\tfor(int i = 1; i < 10; i++){\n\t\t\t\t\tif(R[i]!=0){\n\t\t\t\t\t\t// ツ督ッツつカツカツーツド\n\t\t\t\t\t\tif(R[i]>=3){\n\t\t\t\t\t\t\tR[i]-=3;\n\t\t\t\t\t\t\trsize-=3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(i<=7&&R[i]!=0&&R[i+1]!=0&&R[i+2]!=0){\n\t\t\t\t\t\t\tR[i]--;\n\t\t\t\t\t\t\tR[i+1]--;\n\t\t\t\t\t\t\tR[i+2]--;\n\t\t\t\t\t\t\trsize-=3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tf=true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(f)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(1){\n\t\t\t\tif(gsize==0)\n\t\t\t\t\tbreak;\n\t\t\t\tfor(int i = 1; i < 10; i++){\n\t\t\t\t\tif(G[i]!=0){\n\t\t\t\t\t\t// ツ督ッツつカツカツーツド\n\t\t\t\t\t\tif(G[i]>=3){\n\t\t\t\t\t\t\tG[i]-=3;\n\t\t\t\t\t\t\tgsize-=3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(i<=7&&G[i]!=0&&G[i+1]!=0&&G[i+2]!=0){\n\t\t\t\t\t\t\tG[i]--;\n\t\t\t\t\t\t\tG[i+1]--;\n\t\t\t\t\t\t\tG[i+2]--;\n\t\t\t\t\t\t\tgsize-=3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tf=true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(f)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(1){\n\t\t\t\tif(bsize==0)\n\t\t\t\t\tbreak;\n\t\t\t\tfor(int i = 1; i < 10; i++){\n\t\t\t\t\tif(B[i]!=0){\n\t\t\t\t\t\t// ツ督ッツつカツカツーツド\n\t\t\t\t\t\tif(B[i]>=3){\n\t\t\t\t\t\t\tB[i]-=3;\n\t\t\t\t\t\t\tbsize-=3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(i<=7&&B[i]!=0&&B[i+1]!=0&&B[i+2]!=0){\n\t\t\t\t\t\t\tB[i]--;\n\t\t\t\t\t\t\tB[i+1]--;\n\t\t\t\t\t\t\tB[i+2]--;\n\t\t\t\t\t\t\tbsize-=3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tf=true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\tif(f)\n\t\t\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\tif(!f){\n\t\t\t\tcout<<1<<endl;\n\t\t\t}\n\t\t\telse\n\t\t\t\tcout<<0<<endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return ((a==b)&&(b==c));\n  }\n\nbool is_sequence(int a, int b, int c){\n  return (((a+2)==(b+1))&&((b+1)==c));\n  }\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n  }\n  \nbool is_all_good_set() {\n  return ((is_good_set(card[0],card[1],card[2]))&&(is_good_set(card[3],card[4],card[5]))&&\n  (is_good_set(card[6],card[7],card[8])));\n  }\n\nbool win() {\n  sort(card,card+9);\n  do { if(is_all_good_set()){\n    return true;\n\t }\n\t} while(next_permutation(card, card+9));\n\treturn false;\n\t}\n  \nint main() {\n  cin >> T;\n  for (int t=0; t < T; ++t) {\n    for (int i=0; i < 9; ++i) {\n\t  cin >> card[i];\n\t}\n\tstring color;\n\tfor (int i=0; i<9; ++i) {\n\t  cin >> color;\n\t    if (color == \"G\") card[i] += 10;\n\t\telse if (color == \"B\") card[i] += 20;\n\t\t}\n\t\tcout << win() << endl;\n\t  }\n\t}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint n[9];\nchar c[9];\nint a[9];\n\nbool is_consequence_number(int* p){\n    if(n[*p]==n[(*p+1)]+1&&n[*p]==n[*(p+2)]+2) return true;\n    else return false;\n}\n\nbool is_same_color(int* p){\n    if(c[*p]==c[*(p+1)]&&c[*p]==c[*(p+2)]) return true;\n    else return false;\n}\n\nbool is_same_number(int* p){\n    if(n[*p]==n[*(p+1)]&&n[*p]==n[*(p+2)]) return true;\n    else return false;\n}\n\nbool judge(){\n    for(int i=0;i<3;i++){\n        if(!(is_same_color(a+3*i)&&(is_same_number(a+3*i)||is_consequence_number(a+3*i)))) return false;\n    }\n    return true;\n}\n\nint solve(){\n    for(int i=0;i<9;i++) scanf(\"%d\",n+i);\n    for(int i=0;i<9;i++){\n        getchar();\n        c[i]=getchar();\n        a[i]=i;\n    }\n    do{if(judge()) return 1;}while(next_permutation(a,a+9));\n    return 0;\n}\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        printf(\"%d\\n\",solve());\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define _GLIBCXX_DEBUG\n\nvoid print(vector<int> l) {\n  for (int i : l) {\n    cout << i;\n  }\n  cout << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int n = 0; n < T; n++) {\n    bool ans = true;\n    vector<int> a, b, c;\n    vector<int> cardN(9);\n    for (int i = 0; i < 9; i++)\n      cin >> cardN[i];\n    for (int i = 0; i < 9; i++) {\n      string cardC;\n      cin >> cardC;\n      if (cardC == \"R\")\n        a.push_back(cardN[i]);\n      if (cardC == \"G\")\n        b.push_back(cardN[i]);\n      if (cardC == \"B\")\n        c.push_back(cardN[i]);\n    }\n\n    if ((a.size() % 3) || (b.size() % 3) || (c.size() % 3)) {\n\t\t\tcout<<0<<endl;//最初はans=falseにしてた\n      continue;\n    }\n\n    for (vector<int> nv : {a, b, c}) {\n      sort(nv.begin(), nv.end());\n      while (nv.size() != 0) {\n        if ((nv[0] == nv[1]) && (nv[1] == nv[2]))\n          nv.erase(nv.begin(), nv.begin() + 3);\n\t\t\t\t//eraseの２つめの引数は削除したい範囲の次を指す\n        else {\n          auto p2 = find(nv.begin(), nv.end(), nv[0] + 1);\n          auto p3 = find(nv.begin(), nv.end(), nv[0] + 2);\n          if ((p2 != end(nv)) && (p3 != end(nv))) {\n            nv.erase(p3);\n            nv.erase(p2);\n\t\t\t\t\t\tnv.erase(nv.begin());//最初忘れてた\n\t\t\t\t\t\t/*nv.erase(nv.begin());\n            nv.erase(p2);\n            nv.erase(p3);//ミス\n\t\t\t\t\t\t*/\n          } else {\n            ans = false;\n            break;\n          }\n        }\n      }\n    }\n\n    cout << ans << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\nint flag[11][3];\nint main(){\n\tint n;\n\tcin>>n;\n\tint a[11]={0};\n\tchar b[11];\n\twhile(n--){\n\t\tfor(int i =0;i <11;i++){\n\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\tflag[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int i =0;i < 9;i++){\n\t\t\tcin>>a[i];\n\t\t}\n\t\tfor(int i =0;i <9;i++){\n\t\t\tcin>>b[i];\n\t\t}\n\t\t/*rep(i,9)cout <<\" \"<<b[i];\n\t\tcout <<endl;*/\n\t\tfor(int i =0;i <9;i++){\n\t\t\tif(b[i]=='R'){\n\t\t\t\tflag[a[i]][0]++;\n\t\t\t}else if(b[i]=='G'){\n\t\t\t\tflag[a[i]][1]++;\n\t\t\t}else{\n\t\t\t\tflag[a[i]][2]++;\n\t\t\t}\n\t\t}\n\t\tbool ok[3]={false};\n\t\tint pos = 0;\n\t\tfor(int i =1;i <=9;i++){\n\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\tif(i<=7&&flag[i][j]&&flag[i+1][j]&&flag[i+2][j]){\n\t\t\t\t\tok[pos++]=true;\n\t\t\t\t\tflag[i][j]--;\n\t\t\t\t\tflag[i+1][j]--;\n\t\t\t\t\tflag[i+2][j]--;\n\t\t\t\t}\n\t\t\t\tif(flag[i][j]>=3){\n\t\t\t\t\tflag[i][j]-=3;\n\t\t\t\t\tok[pos++]=true;\n\t\t\t\t}\n\t\t\t\tif(pos==3)break;\n\t\t\t}\n\t\t}\n\t\tbool suc =true;\n\t\tfor(int i =0;i <3;i++){\n\t\t\tif(!ok[i]){\n\t\t\t\tsuc =false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(suc){\n\t\t\tcout <<1<<endl;\n\t\t}else{\n\t\t\tcout <<0<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\nint a[4][12];\nint main()\n{\n\tint n,i,j,v;\n\tchar c;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tmemset(a,0,192);\n\t\tfor(i=0;i<9;++i)scanf(\"%d\",&a[0][i]);\n\t\tfor(i=0;i<9;++i)\n\t\t{\n\t\t\tv=a[0][i];\n\t\t\tscanf(\" %c\",&c);\n\t\t\tif(c=='R')a[1][v]++;\n\t\t\tif(c=='G')a[2][v]++;\n\t\t\tif(c=='B')a[3][v]++;\n\t\t}\n\t\tv=1;\n\t\tfor(i=1;i<4;++i)\n\t\t{\n\t\t\tfor(j=1;j<=9;)\n\t\t\t{\n\t\t\t\tif(a[i][j]&&a[i][j+1]&&a[i][j+2])a[i][j]--,a[i][j+1]--,a[i][j+2]--;\n\t\t\t\telse if(a[i][j]>2)a[i][j]-=3;\n\t\t\t\telse ++j;\n\t\t\t}\n\t\t\tfor(j=1;j<=9;++j)if(a[i][j])v=0;\n\t\t}\n\t\tprintf(\"%d\\n\",v);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "/**\n * \n */\n\n// #include {{{\n#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cfloat>\n#include <cmath>\n#include <cstdint>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <type_traits>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\n#ifdef LOCAL\n#include <fmt/format.h>\n#include <fmt/ostream.h>\n#endif\n\nusing namespace std;\n// }}}\n\n// type {{{\nusing  i8 =   int8_t;\nusing  u8 =  uint8_t;\nusing i16 =  int16_t;\nusing u16 = uint16_t;\nusing i32 =  int32_t;\nusing u32 = uint32_t;\nusing i64 =  int64_t;\nusing u64 = uint64_t;\n\ntemplate<typename T>\nusing MaxHeap = priority_queue<T, vector<T>, less<T>>;\ntemplate<typename T>\nusing MinHeap = priority_queue<T, vector<T>, greater<T>>;\n// }}}\n\n// hide {{{\n#ifdef __clang__\n#pragma clang diagnostic push\n#pragma clang diagnostic ignored \"-Wunused-const-variable\"\n#endif\n// }}}\n\n// 適宜調整\nconstexpr bool AUTOFLUSH = false;\n\nconstexpr int IOS_PREC = 12;\n\nconstexpr int INF_I32 =             1'010'000'000;\nconstexpr i64 INF_I64 = 1'010'000'000'000'000'000LL;\n\nconstexpr auto   INF = INF_I64;\nconstexpr double EPS = 1e-12;\n\nconstexpr i64 MOD = 1'000'000'007;\n\n// hide {{{\n#ifdef __clang__\n#pragma clang diagnostic pop\n#endif\n// }}}\n\n// util {{{\nconstexpr i32 I32_MAX = numeric_limits<i32>::max();\nconstexpr i32 I32_MIN = numeric_limits<i32>::min();\n\nconstexpr i64 I64_MAX = numeric_limits<i64>::max();\nconstexpr i64 I64_MIN = numeric_limits<i64>::min();\n\ntemplate<typename T>\nint GETBIT(T x, int i) { return (x>>i) & 1; }\ntemplate<typename T>\nvoid SETBIT(T& x, int i) { x |= (T(1)<<i); }\ntemplate<typename T>\nvoid CLEARBIT(T& x, int i) { x &= ~(T(1)<<i); }\n\ntemplate<typename T>\nconstexpr const T& MAX(const T& x, const T& y) { return std::max(x, y); }\ntemplate<typename T, typename Comp>\nconstexpr const T& MAX(const T& x, const T& y, Comp comp) { return std::max(x, y, comp); }\ntemplate<typename T>\nconstexpr T MAX(initializer_list<T> ilist) { return std::max(ilist); }\ntemplate<typename T, typename Comp>\nconstexpr T MAX(initializer_list<T> ilist, Comp comp) { return std::max(ilist, comp); }\n\ntemplate<typename T>\nconstexpr const T& MIN(const T& x, const T& y) { return std::min(x, y); }\ntemplate<typename T, typename Comp>\nconstexpr const T& MIN(const T& x, const T& y, Comp comp) { return std::min(x, y, comp); }\ntemplate<typename T>\nconstexpr T MIN(initializer_list<T> ilist) { return std::min(ilist); }\ntemplate<typename T, typename Comp>\nconstexpr T MIN(initializer_list<T> ilist, Comp comp) { return std::min(ilist, comp); }\n\ntemplate<typename T>\nconstexpr T ABS(T x) {\n    static_assert(is_signed<T>::value, \"ABS(): argument must be signed\");\n    return x < 0 ? -x : x;\n}\n\ntemplate<typename T>\nconstexpr T abs_diff(T x, T y) {\n    return x < y ? y-x : x-y;\n}\n\ntemplate<typename T>\nconstexpr bool is_odd(T x)  { return x % 2 != 0; }\ntemplate<typename T>\nconstexpr bool is_even(T x) { return x % 2 == 0; }\n\ntemplate<typename T>\nconstexpr bool parity_same(T x, T y) {\n    return (is_odd(x) && is_odd(y)) || (is_even(x) && is_even(y));\n}\n\ntemplate<typename T>\nconstexpr int cmp(T x, T y) { return (y < x) - (x < y); }\n\ntemplate<typename T>\nconstexpr int sgn(T x) { return cmp(x, T(0)); }\n\ntemplate<typename T>\nconstexpr T ipow(T a, T b) {\n    assert(b >= 0);\n    T res(1);\n    for(T i = 0; i < b; ++i)\n        res *= a;\n    return res;\n}\n\nconstexpr i64 div_ceil(i64 a, i64 b) {\n    return a/b + (((a<0)^(b>0)) && (a%b));\n}\n\nconstexpr i64 div_floor(i64 a, i64 b) {\n    return a/b - (((a>0)^(b>0)) && (a%b));\n}\n\nconstexpr i64 modulo(i64 a, i64 b) {\n    assert(0 < b);\n    i64 r = a % b;\n    return r >= 0 ? r : r+b;\n}\n\ntemplate<typename T>\nconstexpr T CLAMP(T x, T lo, T hi) {\n    assert(lo <= hi);\n    if(x < lo)\n        return lo;\n    else if(hi < x)\n        return hi;\n    else\n        return x;\n}\n\ntemplate<typename T, typename U>\nbool chmax(T& xmax, const U& x) {\n    if(xmax < x) {\n        xmax = x;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ntemplate<typename T, typename U>\nbool chmin(T& xmin, const U& x) {\n    if(x < xmin) {\n        xmin = x;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ntemplate<typename T>\nconstexpr int SIZE(const T& c) {\n    return static_cast<int>(c.size());\n}\n\ntemplate<typename T, size_t N>\nconstexpr int SIZE(const T (&)[N]) {\n    return static_cast<int>(N);\n}\n\ntemplate<typename InputIt, typename T>\nint argfind(InputIt first, InputIt last, const T& x) {\n    auto it = find(first, last, x);\n    return distance(first, it);\n}\n\ntemplate<typename InputIt>\nint argmax(InputIt first, InputIt last) {\n    auto it = max_element(first, last);\n    return distance(first, it);\n}\n\ntemplate<typename InputIt>\nint argmin(InputIt first, InputIt last) {\n    auto it = min_element(first, last);\n    return distance(first, it);\n}\n\ntemplate<typename InputIt>\nbool alltrue(InputIt first, InputIt last) {\n    return all_of(first, last, [](bool b) { return b; });\n}\n\ntemplate<typename InputIt>\nbool anytrue(InputIt first, InputIt last) {\n    return any_of(first, last, [](bool b) { return b; });\n}\n\ntemplate<typename InputIt>\nbool allfalse(InputIt first, InputIt last) {\n    return !anytrue(first, last);\n}\n\ntemplate<typename InputIt>\nbool anyfalse(InputIt first, InputIt last) {\n    return !alltrue(first, last);\n}\n\n// hash {{{\ntemplate<typename T>\nstruct myhash {\n    size_t operator()(const T& x) const {\n        hash<T> h;\n        return h(x);\n    }\n};\n\ntemplate<typename T>\nvoid myhash_combine(size_t& seed, const T& x) {\n    myhash<T> h;\n    seed ^= h(x) + 0x9e3779b9 + (seed<<6) + (seed>>2);\n}\n\ntemplate<typename T1, typename T2>\nstruct myhash<pair<T1,T2>> {\n    size_t operator()(const pair<T1,T2>& p) const {\n        size_t seed = 0;\n        myhash_combine(seed, p.first);\n        myhash_combine(seed, p.second);\n        return seed;\n    }\n};\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I == sizeof...(TS), nullptr_t> = nullptr>\nvoid TUPLEHASH(size_t&, const tuple<TS...>&) {}\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I < sizeof...(TS), nullptr_t> = nullptr>\nvoid TUPLEHASH(size_t& seed, const tuple<TS...>& t) {\n    myhash_combine(seed, get<I>(t));\n    TUPLEHASH<I+1, TS...>(seed, t);\n}\n\ntemplate<typename... TS>\nstruct myhash<tuple<TS...>> {\n    size_t operator()(const tuple<TS...>& t) const {\n        size_t seed = 0;\n        TUPLEHASH(seed, t);\n        return seed;\n    }\n};\n\ntemplate<typename Seq>\nvoid SEQHASH(size_t& seed, const Seq& v) {\n    for(const auto& e : v)\n        myhash_combine(seed, e);\n}\n\ntemplate<typename T>\nstruct myhash<vector<T>> {\n    size_t operator()(const vector<T>& v) const {\n        size_t seed = 0;\n        SEQHASH(seed, v);\n        return seed;\n    }\n};\n\ntemplate<typename T, size_t N>\nstruct myhash<array<T,N>> {\n    size_t operator()(const array<T,N>& v) const {\n        size_t seed = 0;\n        SEQHASH(seed, v);\n        return seed;\n    }\n};\n\ntemplate<typename T>\nusing HashSet = unordered_set<T,myhash<T>>;\n\ntemplate<typename K, typename V>\nusing HashMap = unordered_map<K,V,myhash<K>>;\n\ntemplate<typename T>\nusing HashMultiSet = unordered_multiset<T,myhash<T>>;\n\ntemplate<typename K, typename V>\nusing HashMultiMap = unordered_multimap<K,V,myhash<K>>;\n// }}}\n\ntemplate<typename K, typename V>\npair<typename map<K,V>::iterator, bool> insert_or_assign(map<K,V>& m, const K& k, const V& v) {\n    auto it = m.lower_bound(k);\n    if(it != end(m) && !m.key_comp()(k,it->first)) {\n        it->second = v;\n        return make_pair(it, false);\n    }\n    else {\n        auto it_ins = m.insert(it, make_pair(k,v));\n        return make_pair(it_ins, true);\n    }\n}\n\ntemplate<typename K, typename V>\npair<typename HashMap<K,V>::iterator, bool>\ninsert_or_assign(HashMap<K,V>& m, const K& k, const V& v) {\n    auto it = m.find(k);\n    if(it != end(m)) {\n        it->second = v;\n        return make_pair(it, false);\n    }\n    else {\n        auto it_ins = m.insert(it, make_pair(k,v));\n        return make_pair(it_ins, true);\n    }\n}\n\ntemplate<typename T>\nstring TO_STRING(const T& x) {\n    ostringstream out;\n    out << x;\n    return out.str();\n}\n\ntemplate<typename InputIt>\nstring JOIN(InputIt first, InputIt last, const string& sep) {\n    ostringstream out;\n    while(first != last) {\n        out << *first++;\n        if(first != last)\n            out << sep;\n    }\n    return out.str();\n}\n\ntemplate<typename InputIt>\nauto SUM(InputIt first, InputIt last) {\n    using T = typename iterator_traits<InputIt>::value_type;\n    return accumulate(first, last, T());\n}\n\ntemplate<typename T>\nvoid UNIQ(T& c) {\n    c.erase(unique(begin(c), end(c)), end(c));\n}\n\ntemplate<typename T, typename F>\nenable_if_t<rank<T>::value==0> ARRAY_FOREACH(T& e, F f) {\n    f(e);\n}\n\ntemplate<typename Array, typename F>\nenable_if_t<rank<Array>::value!=0> ARRAY_FOREACH(Array& ary, F f) {\n    for(auto& e : ary)\n        ARRAY_FOREACH(e, f);\n}\n\ntemplate<typename Array, typename U>\nenable_if_t<rank<Array>::value!=0> ARRAY_FILL(Array& ary, const U& v) {\n    ARRAY_FOREACH(ary, [&v](auto& elem) { elem = v; });\n}\n\ntemplate<typename T>\nT POP_BACK(vector<T>& que) {\n    T x = que.back(); que.pop_back();\n    return x;\n}\n\ntemplate<typename T>\nT POP_BACK(deque<T>& que) {\n    T x = que.back(); que.pop_back();\n    return x;\n}\n\ntemplate<typename T>\nT POP_FRONT(deque<T>& que) {\n    T x = que.front(); que.pop_front();\n    return x;\n}\n\ntemplate<typename T, typename C>\nT POP(stack<T,C>& stk) {\n    T x = stk.top(); stk.pop();\n    return x;\n}\n\ntemplate<typename T, typename C>\nT POP(queue<T,C>& que) {\n    T x = que.front(); que.pop();\n    return x;\n}\n\ntemplate<typename T, typename Cont, typename Cmp>\nT POP(priority_queue<T,Cont,Cmp>& que) {\n    T x = que.top(); que.pop();\n    return x;\n}\n\ntemplate<typename T>\nvoid RD(T& x) {\n    cin >> x;\n#ifdef LOCAL\n    if(!cin) assert(false);\n#endif\n}\n\ntemplate<typename T>\nvoid RD(vector<T>& v, int n) {\n    v.reserve(n);\n    for(int i = 0; i < n; ++i) {\n        T e; RD(e);\n        v.emplace_back(e);\n    }\n}\n\ntemplate<typename T, size_t N>\nvoid RD(array<T,N>& v) {\n    for(size_t i = 0; i < N; ++i) {\n        RD(v[i]);\n    }\n}\n\n// 出力 {{{\n// FPRINTSEQ {{{\ntemplate<typename InputIt>\nostream& FPRINTSEQ(ostream& out, InputIt first, InputIt last) {\n    while(first != last) {\n        out << *first++;\n        if(first != last)\n            out << ' ';\n    }\n    return out;\n}\ntemplate<typename InputIt>\nostream& PRINTSEQ(InputIt first, InputIt last) {\n    return FPRINTSEQ(cout, first, last);\n}\ntemplate<typename InputIt>\nostream& DPRINTSEQ(InputIt first, InputIt last) {\n#ifdef LOCAL\n    FPRINTSEQ(cerr, first, last);\n#endif\n    return cerr;\n}\n// }}}\n\n// 1次元生配列 {{{\ntemplate<typename T, size_t N>\nostream& FPRINTARRAY1(ostream& out, const T (&c)[N]) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\ntemplate<typename T, size_t N>\nostream& PRINTARRAY1(const T (&c)[N]) {\n    return FPRINTARRAY1(cout, c);\n}\ntemplate<typename T, size_t N>\nostream& DPRINTARRAY1(const T (&c)[N]) {\n#ifdef LOCAL\n    FPRINTARRAY1(cerr, c);\n#endif\n    return cerr;\n}\n// }}}\n\n// 2次元生配列 {{{\ntemplate<typename T, size_t N1, size_t N2>\nostream& FPRINTARRAY2(ostream& out, const T (&c)[N1][N2]) {\n    out << '\\n';\n    for(const auto& e : c) {\n        FPRINTARRAY1(out, e) << '\\n';\n    }\n    return out;\n}\ntemplate<typename T, size_t N1, size_t N2>\nostream& PRINTARRAY2(const T (&c)[N1][N2]) {\n    return FPRINTARRAY2(cout, c);\n}\ntemplate<typename T, size_t N1, size_t N2>\nostream& DPRINTARRAY2(const T (&c)[N1][N2]) {\n#ifdef LOCAL\n    FPRINTARRAY2(cerr, c);\n#endif\n    return cerr;\n}\n// }}}\n\n// 非mapコンテナ {{{\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\n// 特別扱い\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<vector<T>>& c) {\n    out << '\\n';\n    for(const auto& e : c) {\n        out << e << '\\n';\n    }\n    return out;\n}\n\n// 特別扱い\nostream& operator<<(ostream& out, const vector<string>& c) {\n    out << '\\n';\n    for(const string& e : c) {\n        out << e << '\\n';\n    }\n    return out;\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const deque<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const set<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const HashSet<T>& c) {\n    return out << set<T>(begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const multiset<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const HashMultiSet<T>& c) {\n    return out << multiset<T>(begin(c), end(c));\n}\n\ntemplate<typename T, size_t N>\nostream& operator<<(ostream& out, const array<T,N>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n// }}}\n\n// mapコンテナ {{{\ntemplate<typename InputIt>\nostream& FPRINTMAP(ostream& out, InputIt first, InputIt last) {\n    out << \"{\\n\";\n    for(auto it = first; it != last; ++it) {\n        out << \"  \" << it->first << \" : \" << it->second << '\\n';\n    }\n    out << \"}\\n\";\n    return out;\n}\ntemplate<typename InputIt>\nostream& PRINTMAP(InputIt first, InputIt last) {\n    return FPRINTMAP(cout, first, last);\n}\ntemplate<typename InputIt>\nostream& DPRINTMAP(InputIt first, InputIt last) {\n#ifdef LOCAL\n    FPRINTMAP(cerr, first, last);\n#endif\n    return cerr;\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const map<K,V>& c) {\n    return FPRINTMAP(out, begin(c), end(c));\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const HashMap<K,V>& c) {\n    return out << map<K,V>(begin(c), end(c));\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const multimap<K,V>& c) {\n    return FPRINTMAP(out, begin(c), end(c));\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const HashMultiMap<K,V>& c) {\n    return out << multimap<K,V>(begin(c), end(c));\n}\n// }}}\n\n// stack/queue/priority_queue {{{\ntemplate<typename T, typename C>\nostream& operator<<(ostream& out, stack<T,C> c) {\n    while(!c.empty()) {\n        out << c.top();\n        c.pop();\n        if(!c.empty()) out << ' ';\n    }\n    return out;\n}\n\ntemplate<typename T, typename C>\nostream& operator<<(ostream& out, queue<T,C> c) {\n    while(!c.empty()) {\n        out << c.front();\n        c.pop();\n        if(!c.empty()) out << ' ';\n    }\n    return out;\n}\n\ntemplate<typename T, typename Cont, typename Cmp>\nostream& operator<<(ostream& out, priority_queue<T,Cont,Cmp> c) {\n    while(!c.empty()) {\n        out << c.top();\n        c.pop();\n        if(!c.empty()) out << ' ';\n    }\n    return out;\n}\n// }}}\n\n// pair/tuple {{{\ntemplate<typename T1, typename T2>\nostream& operator<<(ostream& out, const pair<T1,T2>& p) {\n    return out << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I == sizeof...(TS), nullptr_t> = nullptr>\nostream& FPRINTTUPLE(ostream& out, const tuple<TS...>&) {\n    if(sizeof...(TS) == 0)\n        out << '(';\n    return out << ')';\n}\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I < sizeof...(TS), nullptr_t> = nullptr>\nostream& FPRINTTUPLE(ostream& out, const tuple<TS...>& t) {\n    if(I == 0)\n        out << '(';\n    else\n        out << ',';\n    out << get<I>(t);\n    return FPRINTTUPLE<I+1, TS...>(out, t);\n}\n\ntemplate<typename... TS>\nostream& operator<<(ostream& out, const tuple<TS...>& t) {\n    return FPRINTTUPLE(out, t);\n}\n// }}}\n\n// PRINT {{{\nostream& FPRINT(ostream& out) { return out; }\n\ntemplate<typename T, typename... TS>\nostream& FPRINT(ostream& out, const T& x, const TS& ...args) {\n    out << x;\n    if(sizeof...(args))\n        out << ' ';\n    return FPRINT(out, args...);\n}\n\ntemplate<typename... TS>\nostream& FPRINTLN(ostream& out, const TS& ...args) {\n    FPRINT(out, args...);\n    return out << '\\n';\n}\n\ntemplate<typename... TS>\nostream& PRINT(const TS& ...args) {\n    return FPRINT(cout, args...);\n}\n\ntemplate<typename... TS>\nostream& PRINTLN(const TS& ...args) {\n    return FPRINTLN(cout, args...);\n}\n\ntemplate<typename... TS>\nostream& DPRINT(const TS& ...args) {\n#ifdef LOCAL\n    FPRINT(cerr, args...);\n#endif\n    return cerr;\n}\n\ntemplate<typename... TS>\nostream& DPRINTLN(const TS& ...args) {\n#ifdef LOCAL\n    FPRINTLN(cerr, args...);\n#endif\n    return cerr;\n}\n// }}}\n// }}}\n\nvoid FLUSH() {\n    cout.flush();\n}\n\n[[noreturn]] void EXIT() {\n#ifdef LOCAL\n    cout.flush();\n    cerr.flush();\n#else\n    FLUSH();\n#endif\n    //quick_exit(0); // does not work on codeforces\n    _Exit(0);\n}\n\nstruct IoInit {\n    IoInit() {\n#ifndef LOCAL\n        cin.tie(nullptr);\n        ios::sync_with_stdio(false);\n#endif\n        cout << fixed << setprecision(IOS_PREC);\n\n        if(AUTOFLUSH)\n            cout << unitbuf;\n    }\n} IOINIT;\n\n#define FOR(i, start, end) for(i64 i = (start); i < (end); ++i)\n#define REP(i, n) FOR(i, 0, n)\n\n#define ALL(f,c,...) (([&](decltype((c)) cc) { return (f)(begin(cc), end(cc), ## __VA_ARGS__); })(c))\n\n#define GENERIC(f) ([](auto&&... args) -> decltype(auto) { return (f)(forward<decltype(args)>(args)...); })\n\n#define DBG(x) DPRINTLN('L', __LINE__, ':', #x, ':', (x))\n\n#define PAIR make_pair\n#define TUPLE make_tuple\n// }}}\n\nbool is_set(i64 x, i64 y, i64 z) {\n    if(x == y && y == z) return true;\n    if(x+1 == y && y+1 == z) return true;\n    return false;\n}\n\nbool is_ok(const array<i64,9>& A) {\n    return is_set(A[0],A[1],A[2]) && is_set(A[3],A[4],A[5]) && is_set(A[6],A[7],A[8]);\n}\n\nvoid solve(array<i64,9> A) {\n    ALL(sort, A);\n\n    do {\n        if(is_ok(A)) {\n            PRINTLN(1);\n            return;\n        }\n    } while(ALL(next_permutation, A));\n\n    PRINTLN(0);\n}\n\nsigned main(signed /*argc*/, char** /*argv*/) {\n    i64 T; RD(T);\n\n    REP(_, T) {\n        array<i64,9> A;\n        RD(A);\n        REP(i, 9) {\n            char c; RD(c);\n            switch(c) {\n            case 'R':             break;\n            case 'G': A[i] += 10; break;\n            case 'B': A[i] += 20; break;\n            default:  assert (false);\n            }\n        }\n        solve(A);\n    }\n\n    EXIT();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main(void)\n{\n\tint t;\n\tint ar[9];\n\tchar ar2[9];\n\tvector<int> R(9);\n\tvector<int> G(9);\n\tvector<int> B(9);\n\n\tcin >> t;\n\n\tfor(int i= 0; i < t; i++)\n\t{\n\t\tint ar[9];\n\t\tchar ar2[9];\n\t\tvector<int> R(9);\n\t\tvector<int> G(9);\n\t\tvector<int> B(9);\n\n\t\tint counter = 0;\n\n\t\tfor(int i = 0; i < 9; i++)\n\t\t\tcin >> ar[i];\n\n\t\tfor(int i = 0; i < 9; i++)\n\t\t\tcin >> ar2[i];\n\n\t\tfor(int i = 0; i < 9; i++)\n\t\t{\n\t\t\tif(ar2[i] == 'R')\n\t\t\t\tR[ar[i]-1]++;\n\t\t\telse if(ar2[i] == 'G')\n\t\t\t\tG[ar[i]-1]++;\n\t\t\telse\t//Bのとき\n\t\t\t\tB[ar[i]-1]++;\n\t\t}\n\n\t\tfor(int i = 0; i < 9; i++)\n\t\t{\n\t\t\tif(R[i] >= 3)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tR[i] -= 3;\n\t\t\t}\n\t\t\tif(G[i] >= 3)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tG[i] -= 3;\n\t\t\t}\n\t\t\tif(B[i] >= 3)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tB[i] -= 3;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < 7; i++)\n\t\t{\n\t\t\twhile(R[i] > 0 && R[i+1] > 0 && R[i+2] > 0)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tR[i] -= 1;\n\t\t\t\tR[i+1] -= 1;\n\t\t\t\tR[i+2] -= 1;\n\t\t\t\tif( ( R[i] > 0 && R[i+1] > 0 && R[i+2] > 0 ) != 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(G[i] > 0 && G[i+1] > 0 && G[i+2] > 0)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tG[i] -= 1;\n\t\t\t\tG[i+1] -= 1;\n\t\t\t\tG[i+2] -= 1;\n\t\t\t\tif( ( G[i] > 0 && G[i+1] > 0 && G[i+2] > 0 ) != 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(B[i] > 0 && B[i+1] > 0 && B[i+2] > 0)\n\t\t\t{\n\t\t\t\tcounter++;\n\t\t\t\tB[i] -= 1;\n\t\t\t\tB[i+1] -= 1;\n\t\t\t\tB[i+2] -= 1;\n\t\t\t\tif( ( B[i] > 0 && B[i+1] > 0 && B[i+2] > 0 ) != 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif( counter >= 3)\n\t\t\tcout << 1 << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\ntemplate<class T>\nbool check(T a, int n){\n\tif( n == 0 ) return true;\n\tif( n % 3 ) return false;\n\n\tint b[9] ={};\n\tfor(int i=0 ; i<n ; ++i ){\n\t\tb[ a[i] ]++;\n\t}\n\tfor(int i=0 ; i<9 ; ++i){\n\t\tif( b[i] >= 3 ){\n\t\t\tb[i] -= 3 ;\n\t\t}\n\t\tif( b[i] && b[i+1] && b[i+2] ){\n\t\t\tb[i]--;\n\t\t\tb[i+1]--;\n\t\t\tb[i+2]--;\n\t\t}\n\t}\n\tfor(int i=0 ; i<9 ; ++i)\n\t\tif( b[i] )\n\t\t\treturn false;\n\treturn true;\n}\n\nvoid f(vector<int> vc){\n\tcout << \" a = \";\n\tfor(int i=0 ; i<(int)vc.size() ; ++i )\n\t\tcout << vc[i] << \" , \";\n\tcout << endl;\n}\n\nint main(){\n\tint t;\n\tint n[9];\n\tchar c[9];\n\n\t//int a[9] = {1,2,3,4,4,4,4,5,6};\n\t//cout << check( a , 9 ) << endl;\n\n\tcin >> t;\n\tfor(int i=0 ; i<t ; ++i ){\n\t\tvector<int> R,G,B;\n\t\tfor(int j=0 ; j<9 ; ++j ){\n\t\t\tcin >> n[j];\n\t\t}\n\t\tfor(int j=0 ; j<9 ; ++j ){\n\t\t\tcin >> c[j];\n\t\t}\n\t\tint ans = 0;\n\t\tfor(int j=0 ; j<9 ; ++j ){\n\t\t\t//cout << \"n[\" << j << \"] = \" << n[j] << endl;\n\t\t\tif( c[j] == 'R' )\n\t\t\t\tR.push_back( n[j] );\n\t\t\tif( c[j] == 'G' )\n\t\t\t\tG.push_back( n[j] );\n\t\t\tif( c[j] == 'B' )\n\t\t\t\tB.push_back( n[j] );\n\t\t}\n\t\tif( check( R , R.size() ) && check( G , G.size() ) && check( B , B.size() ) ){\n\t\t\tans = 1;\n\t\t}\n\t\t//f(R);\n\t\t//f(G);\n\t\t//f(B);\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <cassert>\n\nusing namespace std;\n\nbool\nis_seq_set(int a, int b, int c) {\n  if (a+2==c && b+1==c)\n    return true;\n  return false;\n}\n\nbool\nis_same_set(int a, int b, int c) {\n  if (a==c && b==c)\n    return true;\n  return false;\n}\n\nbool\nis_good_set(int a, int b, int c) {\n  return is_seq_set(a,b,c) || is_same_set(a,b,c);\n}\n\nbool\nhas_satisfy_set(int card[]) {\n  return\n    is_good_set(card[0], card[1], card[2]) &&\n    is_good_set(card[3], card[4], card[5]) &&\n    is_good_set(card[6], card[7], card[8]);\n}\n\nbool\ncheck_all(int card[9]) {\n  int s = 0;\n  sort(card, card+9);\n  do {\n    bool has_satisfy = has_satisfy_set(card);\n    if (has_satisfy) {\n      /*\n      cout << \"found satisfied card \" << endl;\n      for (int i=0; i<9; ++i) {\n\tauto c = card[i];\n\tcout << c << \" \";\n      }\n      cout << endl;\n      */\n      return true;\n    }\n\n    // s++;\n  } while (next_permutation(card, card+9));\n  // cout << \"s = \" << s << endl;\n  return false;\n}\n\nint\nmain() {\n  int n;\n  cin >> n;\n  for (int i=0;i<n; ++i) {\n    int card[9];\n    for (int j=0; j<9; ++j) {\n      cin >> card[j];\n      // cout << card[j] << \" \";\n    }\n    // cout << endl;\n    string color;\n    int shift[] {0, 10, 20};\n    for (int j=0; j<9; ++j) {\n      cin >> color;\n      // cout << color << \" \";\n      int idx = 0;\n      switch(color[0]) {\n      case 'R': idx = 0; break;\n      case 'G': idx = 1; break;\n      case 'B': idx = 2; break;\n      default: assert(0);\n      }\n      card[j] += shift[idx];\n\n      // cout << card[j] << \" \";\n    }\n    // cout << endl;\n    \n    cout << check_all(card) << endl;\n    // cout << \"Not found ....\" << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\ntypedef pair<char,int>P;\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tvector<P>v;\n\t\tchar c[9];\n\t\tint a[9],b[3][9]={},f=0;\n\t\tr(i,9)cin>>a[i];\n\t\tr(i,9)cin>>c[i];\n\t\tr(i,9)v.push_back(P(c[i],a[i]));\n\t\tsort(v.begin(),v.end());\n\t\tif(v[0].first!=v[2].first||v[3].first!=v[5].first||v[6].first!=v[8].first){\n\t\t\tcout<<0<<endl;\n\t\t\tf++;\n\t\t}\n\t\tif(!f){\n\t\tvector<int>vv[3];\n\t\tr(i,9){\n\t\t\tif(c[i]=='R')vv[0].push_back(a[i]);\n\t\t\tif(c[i]=='G')vv[1].push_back(a[i]);\n\t\t\tif(c[i]=='B')vv[2].push_back(a[i]);\n\t\t}\n\t\tr(j,3)r(i,(int)vv[j].size()-3){\n\t\t\tif(vv[j][i]==vv[j][i+1]&&vv[j][i]==vv[j][i+2]){\n\t\t\t\tr(k,3)vv[j].erase(vv[j].begin()+i);\n\t\t\t}\n\t\t}\n\t\tr(j,3)r(i,vv[j].size()){\n\t\t\tif(j==0)b[0][vv[j][i]]++;\n\t\t\tif(j==1)b[1][vv[j][i]]++;\n\t\t\tif(j==2)b[2][vv[j][i]]++;\n\t\t}\n\t\tr(i,3)r(j,9)b[i][j]=b[i][j]%3;\n\t\tr(i,3)r(j,9)if(b[i][j]){\n\t\t\tif(!b[i][j+1]||!b[i][j+2])goto L2;\n\t\t\tb[i][j]--;\n\t\t\tb[i][j+1]--;\n\t\t\tb[i][j+2]--;\n\t\t\tj--;\n\t\t}\n\t\tcout<<1<<endl;\n\t\tif(0){L2:;cout<<0<<endl;}}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace Main\n{\n    class Main\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2 ||\n     x == y+1 && y == z+1 && x == z+2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[9];\n  bool flag[9];\n  int B, G, R;\n  \n  cin >> n;\n  while(n--){\n    B = 0, G = 0, R = 0;\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].second;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> rummy[i].first;\n      if(rummy[i].first == 'B') B++;\n      if(rummy[i].first == 'G') G++;\n      if(rummy[i].first == 'R') R++;\n    }\n    \n    if(B % 3 != 0 || G % 3 != 0 || R % 3 != 0){\n      cout << 0 << endl;\n      continue;\n    }\n\n      \n    sort(rummy, rummy+9);\n\n    /*\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n    cout << endl;*/\n    \n    int cnt = 0;\n\n    for(int i = 0 ; i <= 6 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define equal(a, b, c) ((a) == (b) && (b) == (c) && (a) == (c))\nusing namespace std;\n\nint main(){\n  int n, num[12], v;\n  char c;\n  scanf(\"%d\", &n);\n  while(n--){\n    int card[3][9] = {}; // 0:R 1:G 2:B\n    memset(card, 0, sizeof(card));\n    rep(i, 9) scanf(\"%d\", num+i);\n    rep(i, 9){\n      v = num[i]-1;\n      scanf(\" %c\", &c);\n      if(c == 'R') card[0][v]++;\n      if(c == 'G') card[1][v]++;\n      if(c == 'B') card[2][v]++;\n    }\n    int res = 1, j;\n    rep(i, 3){\n      for(j = 0; j < 9;){\n\tif(card[i][j]&&card[i][j+1]&&card[i][j+2]){card[i][j]--; card[i][j+1]--; card[i][j+2]--;}\n\telse  if(card[i][j] > 2) card[i][j]-=3;\n\telse ++j;\n      }\n      rep(j, 9) if(card[i][j]) res = 0;\n      //      rep(j, 9) printf(\"%d \", card[i][j]);\n      //      puts(\"\");\n    }\n    \n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n\nint N;\nint n[11]={};\nchar ch;\ncin>>N;\nfor(int iii=0;iii<N;iii++){\nfor(int i=0;i<9;i++){\ncin>>n[i];\n}\nfor(int i=0;i<9;i++){\ncin>>ch;\nif(ch=='G')n[i]+=10;\nif(ch=='B')n[i]+=20;\n}\nsort(n,n+9);\nbool f1=false,f2=false,f3=false,f4;\n/*\nfor(int i=0;i<9;i++)\n\tcout<<n[i];\ncout<<endl;\n*/\nif(n[0]==n[1]&&n[0]==n[2])f1=true;\nif(n[1]==n[0]+1&&n[2]==n[1]+1)f1=true;\n\nif(n[3]==n[4]&&n[3]==n[5])f2=true;\nif(n[4]==n[3]+1&&n[5]==n[4]+1)f2=true;\n\nif(n[6]==n[7]&&n[6]==n[8])f3=true;\nif(n[7]==n[6]+1&&n[8]==n[7]+1)f3=true;\n\n\nif(n[0]==n[1]&&n[2]==n[3]&&n[4]==n[5])f4=true;\nif(n[2]==n[0]+1&&n[4]==n[2]+1&&f4==true){f1=true;f2=true;}\n\nif(n[3]==n[4]&&n[5]==n[6]&&n[7]==n[8])f4=true;\nif(n[5]==n[3]+1&&n[7]==n[5]+1&&f4==true){f2=true;f3=true;}\n\n\nint g=0;\nif(f1&&f2&&f3)g=1;\ncout<<g<<endl;\n}\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[10];\n\n\nbool is_same_number(int a, int b, int c){\n    if(a == b && a == c)    return true;\n    else return false;\n}\n\nbool is_sequence(int a, int b, int c){\n    if(a+2 == c && b+1==c)  return true;\n    else return false;\n}\n\nbool is_good_set(int a, int b, int c){\n    return (is_same_number(a, b, c) || is_sequence(a, b, c));\n}\n\nbool is_all_good_set(){\n    if(is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]))\n    return true;\n    else    return false;\n}\n\nint win(){\n    sort(card, card+9);\n    do{\n        if(is_all_good_set())\n            return 1;\n    }while(next_permutation(card, card+9));\n    return 0;\n}\n\nint main(void){\n    cin >> T;\n    for(int t=0; t<T; t++){\n        for(int i=0; i<9; i++){\n            cin >> card[i];\n        }\n        string color;\n        for(int i=0; i<9; i++){\n            cin >> color;\n            if(color == \"G\")    card[i] += 10;\n            else if(color == \"B\")   card[i] += 20;\n        }\n        cout << win() << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a==(b-1) && a==(c-2) ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 10;\n\t\t\tif(color == \"B\") n[k] += 20;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif(same(n[0],n[1],n[2]) && same(n[3],n[4],n[5]) && same(n[6],n[7],n[8])){\n\t\t\tcout << 1 << endl;\n\t\t}else if(renban(n[0],n[1],n[2]) && renban(n[3],n[4],n[5]) && renban(n[6],n[7],n[8])){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main(){\n  char asc[9];\n  int num[9]; \n  int t,tmp;\n  char tmp1;\n  cin >> t;\n  while(t--){\n    bool ju[9];\n    memset(ju,true,sizeof(ju));\n    int cnt = 0;\n    for(int i=0;i<9;i++) cin >> num[i];\n    for(int i=0;i<9;i++) cin >> asc[i];\n    for(int i=0;i<8;i++){\n      for(int j=8;j>i;j--){\n\tif(asc[j] > asc[j-1]){\n\t  tmp = num[j];\n\t  num[j] = num[j-1];\n\t  num[j-1] = tmp;\n\t  tmp1 = asc[j];\n\t  asc[j] = asc[j-1];\n\t  asc[j-1] = tmp1;\n\t}\n\tif(num[j] < num[j-1] && asc[j] == asc[j-1]){\n\t  tmp = num[j];\n\t  num[j] = num[j-1];\n\t  num[j-1] = tmp;\n\t  tmp1 = asc[j];\n\t  asc[j] = asc[j-1];\n\t  asc[j-1] = tmp1;\n\t}\n      }\n    }\n    for(int i=0;i<7;i++){\n      if(asc[i] == asc[i+1] && asc[i+1] == asc[i+2] && ju[i] && ju[i+1] && ju[i+2]){\n\tif(num[i+1] == num[i]+1 && num[i+2] == num[i+1]+1 && ju[i] && ju[i+1] && ju[i+2]){\n\t  cnt++;\n\t  ju[i] = ju[i+1] = ju[i+2] = false;\n\t}\n\tif(num[i] == num[i+1] && num[i+1] == num[i+2] && ju[i] && ju[i+1] && ju[i+2]){\n\t  cnt++;\n\t  ju[i] = ju[i+1] = ju[i+2] = true;\n\t}\n      }\n    }\n    for(int i=0;i<9;i++) cout << num[i] << \" \";\n    cout << endl;\n    for(int i=0;i<9;i++) cout << asc[i] << \" \";\n    cout << endl;\n    if(cnt >= 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint a[9];\nchar b[9];\nint main(){\n\tint t;\n\tcin>>t;\n\tfor(int u=0;u<t;u++){\n\tfor(int i=0;i<9;i++)cin>>a[i];\n\tfor(int j=0;j<9;j++)cin>>b[j];\n\tbool ok=false;\n\tfor(int c00=0;c00<7;c00++){\n\tfor(int c01=c00+1;c01<8;c01++){\n\tfor(int c02=c01+1;c02<9;c02++){\n\t\tbool ok1=true;\n\t\tif(!(b[c00]==b[c01]&&b[c00]==b[c02]))ok1=false;\n\t\telse{\n\t\t\tint d[3]={a[c00],a[c01],a[c02]};\n\t\t\tsort(d,d+3);\n\t\t\tif(!(d[1]-d[0]==d[2]-d[1]&&(d[1]-d[0]==0||d[1]-d[0]==1))){\n\t\t\t\tok1=false;\n\t\t\t}\n\t\t}\n\t\tif(ok1){\n\t\tfor(int c10=0;c10<7;c10++){\n\t\tif(c10!=c00&&c10!=c01&&c10!=c02){\n\t\tfor(int c11=c10+1;c11<8;c11++){\n\t\tif(c11!=c00&&c11!=c01&&c11!=c02){\n\t\tfor(int c12=c11+1;c12<9;c12++){\n\t\tif(c12!=c00&&c12!=c01&&c12!=c02){\n\t\t\tbool ok2=true;\n\t\t\tif(!(b[c10]==b[c11]&&b[c10]==b[c12]))ok2=false;\n\t\t\telse{\n\t\t\tint d[3]={a[c10],a[c11],a[c12]};\n\t\t\tsort(d,d+3);\n\t\t\tif(!(d[1]-d[0]==d[2]-d[1]&&(d[1]-d[0]==0||d[1]-d[0]==1))){\n\t\t\t\tok2=false;\n\t\t\t}\n\t\t\tif(ok2){\n\t\t\t\tint e[3],top=0;\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(i!=c00&&i!=c01&&i!=c02&&i!=c10&&i!=c11&&i!=c12){\n\t\t\t\t\t\te[top]=i;\n\t\t\t\t\t\ttop++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbool ok3=true;\n\t\t\t\tif(!(b[e[0]]==b[e[1]]&&b[e[0]]==b[e[2]]))ok3=false;\n\t\t\t\telse{\n\t\t\t\tint d[3]={a[e[0]],a[e[1]],a[e[2]]};\n\t\t\t\tsort(d,d+3);\n\t\t\t\tif(!(d[1]-d[0]==d[2]-d[1]&&(d[1]-d[0]==0||d[1]-d[0]==1))){\n\t\t\t\t\tok3=false;\n\t\t\t\t}\n\t\t\t\tif(ok3){\n\t\t\t\t\tok=true;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t}\n\t\t}\n\t\t}\n\t\t}\n\t\t}\n\t\t}\n\t\t}\n\t}\n\t}\n\t}\n\tcout<<ok<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string>\nusing namespace std;\n\nconst int MaxCardNum = 9;\nconst int CardSetNum = 3;\nconst int CardNumInSet = MaxCardNum / CardSetNum;\nvector<int> cardNums;\n\nvoid DataInpt() {\n\t// Read all numbers on card first\n\tcardNums.clear();\n\tfor (int i = 0; i < MaxCardNum; i++) {\n\t\tint cardNum;\n\t\tcin >> cardNum;\n\t\tcardNums.push_back(cardNum);\n\t}\n\t// Then add corresponding color number on each card\n\tfor (int i = 0; i < MaxCardNum; i++) {\n\t\tstring color;\n\t\tcin >> color;\n\t\tif (color == \"G\") {\n\t\t\tcardNums[i] += 10;\n\t\t} else if (color == \"B\") {\n\t\t\tcardNums[i] += 20;\n\t\t}\n\t}\n}\n\nbool Check() {\n\tfor (int i = 0; i < CardSetNum; i++) {\n\t\tint b = i * CardNumInSet;\n\t\tif (cardNums[b] == cardNums[b + 1] && cardNums[b + 1] == cardNums[b + 2]) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (cardNums[b] == cardNums[b + 1] - 1 && cardNums[b + 1] == cardNums[b + 2] - 1) {\n\t\t\tcontinue;\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nvoid Solve() {\n\tDataInpt();\n\tsort(cardNums.begin(), cardNums.end());\n\tif (Check()) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n}\n\nint main() {\n\tint setNum = 0;\n\n\tcin >> setNum;\n\tfor (int i = 0; i < setNum; i++) {\n\t\tSolve();\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T, card[9];\n\nbool is_same_number(int a, int b, int c) {\n  return (a==b && b==c) && c==a;\n}\n\nbool is_sequence (int a, int b, int c) {\n  return (a+2==b+1 && b+1==c) && c==a+2;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation (card, card+9));\n  return 0;\n}\n  \nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] +=10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <string>\n\nusing namespace std;\nint T;\nint card[8];\nstring color;\nbool judge;\n\nint is_win();\nbool is_all_good_set();\nbool is_good_set(int, int, int);\nbool is_same_number(int,int, int);\nbool is_sequence(int, int, int);\n\nint main(){\n  while(cin >> T){\n    \n\n    for (int i = 0; i < 9; ++i){\n      cin >> card[i];      \n    }\n\n    for (int i = 0; i < 9; ++i){\n      cin >> color;\n      cout << color << endl;\n      if(color == \"B\") card[i] += 10;\n      else if (color == \"G\") {\n        card[i] += 20;\n        cout << 888 << endl;\n      }\n    }\n\n    cout << is_win() << endl;\n\n  }\n\nreturn 0;\n\n}\n\nint is_win(){\n\n  do{\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n\n  return 0;\n}\n\nbool is_all_good_set(){\n\n  int judge;\n  for (int i = 0; i < 3; ++i)\n  {\n    judge += is_good_set(card[3*i], card[3*i+ 1], card[3*i + 2]);\n  }\n\n  if (judge == 3) return true;\n  else return false;\n}\n\n\nbool is_good_set(int a, int b, int c){\n\n   if(is_same_number(a,b,c) ||  is_sequence(a,b,c) ) return true;\n   else return false;\n\n}\n\nbool is_same_number(int a, int b, int c){\n\n  if(a == b == c) return true;\n  else return false;\n\n} \n\nbool is_sequence(int a, int b, int c){\n\n  if( a + 2 == b + 1 == c ) return true;\n  else return false ;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c)\n{\n    if (a == b and b == c) return true;\n    return false;\n}\n\nbool is_sequence(int a, int b, int c)\n{\n    if(a + 1 == b and b + 1 == c) return true;\n    return false;\n}\n\nbool is_good_set(int a, int b, int c)\n{\n    return is_same_number(a, b, c) or is_sequence(a, b, c);\n}\n\nbool is_all_good_set()\n{\n    return is_good_set(card[0], card[1], card[2]) and \\\n        is_good_set(card[3], card[4], card[5]) and \\\n        is_good_set(card[6], card[7], card[8]);\n}\n\nint win()\n{\n    sort(card, card + 9);\n    do {\n        if (is_all_good_set()) return 1;\n    } while (next_permutation(card, card + 9));\n    return 0;\n}\n\nint main(int argc, char const* argv[])\n{\n    cin >> T;\n    for (int t = 0; t < T; t++) {\n        for (int i = 0; i < 9; i++) {\n            cin >> card[i];\n        }\n        string color;\n        for (int i = 0; i < 9; i++) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n        cout << win() << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c) {\n  return a == c && b == c;\n}\nbool is_sequence(int a, int b, int c) {\n  return a + 2 == c && b + 1 == c;\n}\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set() {\n  return is_good_set(card[0], card[1], card[2])\n    && is_good_set(card[3], card[4], card[5])\n    && is_good_set(card[6], card[7], card[8]);\n}\nint win() {\n  sort(card, card+9);\n  do {\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n    }\n  }\n  cout << win() << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n;\nint a[11];\nint v[3][11];\nint main(void){\n  cin >> n;\n  for(int k = 0; k < n; k++){\n    memset(v,0,sizeof(v));\n    for(int i = 0; i < 9; i++){\n      cin >> a[i];\n    }\n    for(int i = 0; i < 9; i++){\n      char c;\n      cin >> c;\n      v[c=='R'?0:c=='G'?1:2][a[i]]++;\n    }\n\n    int c = 0;\n\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j+2 < 9; j++){\n\tif(v[i][j] && v[i][j+1] && v[i][j+2]){\n\t  c++;\n\t  v[i][j]--;\n\t  v[i][j+1]--;\n\t  v[i][j+2]--;\n\t}\n      }\n    }\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j < 9; j++){\n\tif(v[i][j] >= 3){\n\t  c++;\n\t  v[i][j] -= 3;\n\t}\n      }\n    }\n    cout << (c>=3?1:0) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Card {\n\tint  n;\n\tchar c;\n};\n\nint judge( Card a, Card b, Card c )\n{\n\tif(a.n == b.n && b.n == c.n) return true;\n\tint sum = a.n + b.n + c.n;\n\tint Min = min(a.n , min(b.n, c.n));\n\tif(sum == (3*Min+3)) return true;\n\treturn false;\n}\n\nconst int SIZE = 9;\nCard cards[SIZE];\nbool locked[SIZE], answer;\nvoid search( int count )\n{\n\tif(count >= 4) return;\n\tfor(int i=0; i < SIZE && !answer; ++i) {\n\t\tif(locked[i]) continue;\n\t\tlocked[i] = true;\n\t\tfor(int j=0; j < SIZE && !answer; ++j) {\n\t\t\tif(locked[j] || cards[i].c != cards[j].c) continue;\n\t\t\tlocked[j] = true;\n\t\t\tfor(int k=0; k < SIZE && !answer; ++k) {\n\t\t\t\tif(locked[k] || cards[j].c != cards[k].c) continue;\n\t\t\t\tlocked[k] = true;\n\t\t\t\tif(judge(cards[i], cards[j], cards[k])) {\n\t\t\t\t\tif(count == 3) { answer = true; return; }\n\t\t\t\t\telse { search(count + 1); }\n\t\t\t\t}\n\t\t\t\tlocked[k] = false;\n\t\t\t}\n\t\t\tlocked[j] = false;;\n\t\t}\n\t\tlocked[i] = false;\n\t}\n}\n\nint main( void )\n{\n\tint t;\n\tcin >> t;\n\twhile(t--) {\n\t\tfor(int i=0; i < SIZE; ++i) cin >> cards[i].n;\n\t\tfor(int i=0; i < SIZE; ++i) { cin >> cards[i].c; locked[i] = false; }\n\t\tanswer = false;\n\t\tsearch(1);\n\t\tif(answer)\n\t\t\tcout << 1 << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#define P pair<char,int>\nusing namespace std;\n\nP p[10];\nint o[10];\n\nbool dfs( int n ){\n  if( n>0 && n % 3 ==0 ){\n    int i=n-3;\n\n    if( p[o[i]].first != p[o[i+1]].first ||\n\tp[o[i+1]].first != p[o[i+2]].first )\n      return false;\n\n    /*\n    cout << \"  n=\"<< n << endl;\n    for( int j=0;j<3;j++ )\n      cout << p[o[j+i]].first << \",\" << p[o[j+i]].second << endl;\n    */\n    if( ( p[o[i]].second+1 == p[o[i+1]].second &&\n\t  p[o[i]].second+2 == p[o[i+2]].second ) ||\n\t( p[o[i]].second == p[o[i+1]].second &&\n\t  p[o[i+1]].second == p[o[i+2]].second  ) )\n      {\n\tif( n==9 ){\n\t  /*\n\t  for( int j=0;j<9;j++ )\n\t    cout << p[o[j]].first << \" \";\n\t  cout << endl;\n  \t  for( int j=0;j<9;j++ )\n\t    cout  << p[o[j]].second << \" \" ;\n\t  cout << endl;\n\t  */\n\t  return true;\n\t}\n      }else\n      return false;\n  }\n\n  for( int i=0,j;i<9;i++ ){\n    for( j=0;j<n && o[j]!=i ;j++ );\n    if( j!=n ) continue;\n    o[n]=i;\n    if( dfs( n+1 ) ) return true;\n  }\n  return false;\n}\n\nint main(){\n  int t;\n\n  cin>>t;\n  while( t-- ){\n    for( int i=0;i<9;i++ )      cin >> p[i].second;\n    for( int i=0;i<9;i++ )      cin >> p[i].first;\n    if( dfs(0) )\n      cout << \"1\" << endl;\n    else\n      cout << \"0\" << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <functional>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2 ||\n     x == y+1 && y == z+1 && x == z+2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[10];\n  bool flag[10];\n  int B, G, R;\n  \n  cin >> n;\n  while(n--){\n    B = 0, G = 0, R = 0;\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].second;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> rummy[i].first;\n      if(rummy[i].first == 'B') B++;\n      if(rummy[i].first == 'G') G++;\n      if(rummy[i].first == 'R') R++;\n    }\n    \n    if(B % 3 != 0 || G % 3 != 0 || R % 3 != 0){\n      cout << 0 << endl;\n      continue;\n    }\n\n    sort(rummy, rummy+9);\n\n    /* \n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n    cout << endl;\n */   \n    int cnt = 0;\n\n    for(int i = 0 ; i <= 6 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <map>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<29;\n\nint aa[3][9];\n\nbool rec(int n) {\n  if (n==3) return 1;\n  REP(i,3) {\n    REP(j,9) {\n      if (aa[i][j]>=3) {\n        aa[i][j] -= 3;\n        if (rec(n+1)) return 1;\n        aa[i][j] += 3;\n      }\n    }\n  }\n  REP(i,3) {\n    REP(j,7) {\n      if (aa[i][j]>=1 && aa[i][j+1]>=1 && aa[i][j+2]>=1) {\n        aa[i][j]--;aa[i][j+1]--;aa[i][j+2]--;\n        if (rec(n+1)) return 1;\n        aa[i][j]++;aa[i][j+1]++;aa[i][j+2]++;\n      }\n    }\n  }\n  return 0;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  \n  while(n--) {\n    int a[9];\n    char b[9];\n    REP(i,9)\n      cin >> a[i];\n    REP(i,9)\n      cin >> b[i];\n\n    memset(aa,0,sizeof(aa));\n    REP(i,9) {\n      int hoge;\n      if (b[i]=='R') hoge = 0;\n      else if (b[i]=='G') hoge =1;\n      else hoge = 2;\n      aa[hoge][a[i]-1]++;\n    }\n    if (rec(0))\n      cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#define N 9\nusing namespace std;\nstruct data{\n  int num;\n  string color;\n  bool operator<(const data & right)const{\n    if(color!=right.color) return color<right.color;\n    return num<right.num;\n  }\n};\nint main(){\n  int n;\n  struct data d[N];\n  cin >> n;\n  while(n){\n    for(int i=0;i<N;i++) cin >> d[i].num;\n    for(int i=0;i<N;i++) cin >> d[i].color;\n    sort(d,d+N);\n    int flag=0;\n    for(int i=0;i<N;i+=3){\n      if(d[i].color==d[i+1].color&&d[i+1].color==d[i+2].color){\n\tif((d[i].num==d[i+1].num&&d[i+1].num==d[i+2].num)||(d[i].num==d[i+1].num-1&&d[i+1].num==d[i+2].num-1)){\n\t}else{\n\t  flag=1;\n\t  break;\n\t}\n      }else{\n\tflag=1;\n\tbreak;\n      }\n    }\n    if(flag==0) cout << 1 << endl;\n    else cout << 0 << endl;\n    n--;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[9], p[9]; char c[9];\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < 9; j++) cin >> a[j], p[j] = j;\n\t\tfor (int j = 0; j < 9; j++) cin >> c[j];\n\t\tint f = 0;\n\t\tdo {\n\t\t\tint g = 1;\n\t\t\tfor (int j = 0; j < 9; j += 3) {\n\t\t\t\tif (!(c[j] == c[j + 1] && c[j] == c[j + 2])) { g = 0; break; }\n\t\t\t\tint b[3] = { a[j], a[j + 1], a[j + 2] };\n\t\t\t\tsort(b, b + 3);\n\t\t\t\tif (b[1] - b[0] != b[2] - b[1] || b[1] - b[0] >= 2) { g = 0; break; }\n\t\t\t}\n\t\t\tif (g) { f = 1; break; }\n\t\t} while (next_permutation(p, p + 9));\n\t\tcout << f << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c) {\n  return a==b && b==c;\n}\nbool is_sequence(int a, int b, int c) {\n  return (a+2 == b+1 && b+1 == c); // \n}\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set () {\n  return is_good_set(card[0],card[1],card[2])\n    && is_good_set(card[3],card[4],card[5])\n    && is_good_set(card[6],card[7],card[8]);\n}\nint win() {\n  // Sort the card\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}\n\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << card << endl;\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n    int t;\n    cin >> t;\n\n    while(t-- > 0){\n        int a[9];\n        for(int i = 0; i < 9; i++)  cin >> a[i];\n        char x;\n        for(int i = 0; i < 9; i++){\n            cin >> x;\n            if(x == 'G')    a[i] += 20;\n            if(x == 'B')    a[i] += 40;\n        }\n\n        int b[50] = {};\n        for(int i = 0; i < 9; i++)  b[a[i]]++;\n\n        bool judge = true;\n        for(int i = 0; i < 50; i++){\n            if(b[i] == 0)   continue;\n            if(b[i] >= 3)   b[i] -= 3;\n            while(b[i] && b[i+1] && b[i+2]){\n                b[i]--, b[i+1]--, b[i+2]--;\n            }\n            if(b[i])    judge = false;\n        }\n\n        cout << judge << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\n\n\nint main(){\n\n\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++){\n\t\tint n[9];\n\t\tchar c[9];\n\t\tint R[9];\n\t\tint G[9];\n\t\tint B[9];\n\t\tint r = 0, g = 0, b = 0;\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tc[j] = 0;\n\t\t\tn[j] = 0;\n\t\t\tR[j] = 10;\n\t\t\tG[j] = 10;\n\t\t\tB[j] = 10;\n\t\t}\n\n\t\t//????????????\t\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> n[j];\n\t\t}\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> c[j];\n\t\t}\n\n\t\t/*for (int j = 0; j < 9; j++){\n\t\t\tprintf(\"%d \", n[j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tprintf(\"%c \", c[j]);\n\t\t}\n\t\tprintf(\"\\n\");*/\n\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tif (c[j] == 'R'){\n\t\t\t\tR[r] = n[j];\n\t\t\t\tr++;\n\t\t\t}\n\t\t\telse if (c[j] == 'G'){\n\t\t\t\tG[g] = n[j];\n\t\t\t\tg++;\n\t\t\t}\n\t\t\telse if (c[j] == 'B'){\n\t\t\t\tB[b] = n[j];\n\t\t\t\tb++;\n\t\t\t}\n\t\t}\n\t\tsort(R, R + 9);\n\t\tsort(G, G + 9);\n\t\tsort(B, B + 9);\n\t\t//??????\n\t\tint e = 0;\n\t\t\n\t\t//R\n\t\tif (R[0] != 10){\n\t\t\tint p=R[0];\n\t\t\tint f = 0;\n\t\t\tint d = 0;\n\t\t\tfor (int j = 1; j < 9; j++){\n\t\t\t\tif (R[j] == 10)break;\n\t\t\t\t//printf(\"R %d \\n\", R[j]);\n\t\t\t\tif (R[j] != p + 1 && R[j]!=p){\n\t\t\t\t\tf = 0;\n\t\t\t\t\td = 0;\n\t\t\t\t\tp = R[j];\n\t\t\t\t}\n\t\t\t\telse if (R[j] == p + 1){\n\t\t\t\t\tp++;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\telse if (R[j] == p){\n\t\t\t\t\td++;\n\t\t\t\t}\n\t\t\t\tif (f == 2){\n\t\t\t\t\t//printf(\"?????????:f\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t\tif (d == 2){\n\t\t\t\t\t//printf(\"?????????:d\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//G\n\t\tif (e != 3 && G[0] != 10){\n\t\t\tint p = G[0];\n\t\t\tint f = 0;\n\t\t\tint d = 0;\n\t\t\tfor (int j = 1; j < 9; j++){\n\t\t\t\tif (G[j] == 10)break;\n\t\t\t\t//printf(\"G %d\\n\", G[j]);\n\t\t\t\tif (G[j] != p + 1 && G[j] != p){\n\t\t\t\t\tf = 0;\n\t\t\t\t\td = 0;\n\t\t\t\t\tp = G[j];\n\t\t\t\t}\n\t\t\t\telse if (G[j] == p + 1){\n\t\t\t\t\tp++;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\telse if (G[j] == p){\n\t\t\t\t\td++;\n\t\t\t\t}\n\n\t\t\t\tif (f == 2){\n\t\t\t\t\t//printf(\"?????????:f\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t\tif (d == 2){\n\t\t\t\t\t//printf(\"?????????:d\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//B\n\t\tif (e != 3 && B[0] != 10){\n\t\t\tint p = B[0];\n\t\t\tint f = 0;\n\t\t\tint d = 0;\n\t\t\tfor (int j = 1; j < 9; j++){\n\t\t\t\tif (B[j] == 10)break;\n\t\t\t\t//printf(\"B %d\\n\", B[j]);\n\t\t\t\tif (B[j] != p + 1 && B[j] != p){\n\t\t\t\t\tf = 0;\n\t\t\t\t\td = 0;\n\t\t\t\t\tp = B[j];\n\t\t\t\t}\n\t\t\t\telse if (B[j] == p + 1){\n\t\t\t\t\tp++;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\telse if (B[j] == p){\n\t\t\t\t\td++;\n\t\t\t\t}\n\n\t\t\t\tif (f == 2){\n\t\t\t\t\t//printf(\"?????????:f\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t\tif (d == 2){\n\t\t\t\t\t//printf(\"?????????:d\\n\");\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (e == 3)cout << 1 << endl;\n\t\telse cout << 0 << endl;\n\t\t\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <sstream>\n\nusing namespace std;\n\nint pat[16][3] = {{1, 1, 1}, {2, 2, 2}, {3, 3, 3}, {4, 4, 4}, {5, 5, 5}, {6, 6, 6}, {7, 7, 7}, {8, 8, 8}, {9, 9, 9}, {1, 2, 3}, {2, 3, 4}, {3, 4, 5}, {4, 5, 6}, {5, 6, 7}, {6, 7, 8}, {7, 8, 9}};\n\nint main(){\n\t\n\tint T;\n\tcin >> T;\n\t\n\tfor(int loop = 0; loop < T; loop++){\n\t\t\n\t\tint count[9][3];\n\t\tint sum[9][3];\n\t\tint number[9];\n\t\tint color[9];\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tcin >> number[i];\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\tif(str[0] == 'R'){\n\t\t\t\tcolor[i] = 0;\n\t\t\t}else if(str[0] == 'G'){\n\t\t\t\tcolor[i] = 1;\n\t\t\t}else{\n\t\t\t\tcolor[i] = 2;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tcount[i][j] = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tcount[number[i]][color[i]]++;\n\t\t}\n\t\t\n\t\tbool flag = false;\n\t\t\n\t\tfor(int i = 0; i < 48; i++){\n\t\t\tfor(int j = 0; j < 48; j++){\n\t\t\t\tfor(int k = 0; k < 48; k++){\n\t\t\t\t\tint index11 = i % 16;\n\t\t\t\t\tint index12 = i / 16;\n\t\t\t\t\tint index21 = j % 16;\n\t\t\t\t\tint index22 = j / 16;\n\t\t\t\t\tint index31 = k % 16;\n\t\t\t\t\tint index32 = k / 16;\n\t\t\t\t\tfor(int l = 0; l < 9; l++){\n\t\t\t\t\t\tfor(int m = 0; m < 3; m++){\n\t\t\t\t\t\t\tsum[l][m] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor(int l = 0; l < 3; l++){\n\t\t\t\t\t\tsum[pat[index11][l]][index12]++;\n\t\t\t\t\t\tsum[pat[index21][l]][index22]++;\n\t\t\t\t\t\tsum[pat[index31][l]][index32]++;\n\t\t\t\t\t}\n\t\t\t\t\tbool flag2 = true;\n\t\t\t\t\tfor(int l = 0; l < 9; l++){\n\t\t\t\t\t\tfor(int m = 0; m < 3; m++){\n\t\t\t\t\t\t\tif(sum[l][m] != count[l][m]){\n\t\t\t\t\t\t\t\tflag2 = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(flag2){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout << flag << endl;\n\t\t\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nbool IsSet(vector<int> x)\n{\n  if (x[0] == x[1] and x[1] == x[2]) {\n    return true;\n  }\n  if (x[0] + 1 == x[1] and x[1] + 1 == x[2]) {\n    return true;\n  }\n  return false;\n}\n\nint main()\n{\n  int t;\n  cin >> t;\n  for (int j = 0; j < t; j++) {\n    int num[9];\n    for (int i = 0; i < 9; i++) {\n      cin >> num[i];\n    }\n    char color[9];\n    for (int i = 0; i < 9; i++) {\n      cin >> color[i];\n    }\n    vector<int> red, green, blue;\n    for (int i = 0; i < 9; i++) {\n      if (color[i] == 'R') {\n        red.push_back(num[i]);\n      }\n      else if (color[i] == 'G') {\n        green.push_back(num[i]);\n      }\n      else if (color[i] == 'B') {\n        blue.push_back(num[i]);\n      }\n    }\n    if (red.size() % 3 != 0 or green.size() % 3 != 0 or blue.size() %3 != 0) {\n      cout << '0' << endl;\n      continue;\n    }\n\n    if (red.size() == 3) {\n      sort(red.begin(), red.end());\n      if (not IsSet(red)) {\n        cout << '0' << endl;\n        continue;\n      }\n    }else if (red.size() == 6) {\n      sort(red.begin(), red.end());\n      vector<int> red1(3), red2(3);\n      for (int i = 0; i < 3; i++) {\n        red1[i] = red[i];\n      }\n      for (int i = 3; i < 6; i++) {\n        red2[i - 3] = red[i];\n      }\n      if (not (IsSet(red1) and IsSet(red2))){\n        cout << '0' << endl;\n        continue;\n      }\n    }else if (red.size() == 9) {\n      sort(red.begin(), red.end());\n      vector<int> red1(3), red2(3), red3(3);\n      for (int i = 0; i < 3; i++) {\n        red1[i] = red[i];\n      }\n      for (int i = 3; i < 6; i++) {\n        red2[i - 3] = red[i];\n      }\n      for (int i = 6; i < 9; i++) {\n        red3[i - 6] = red[i];\n      }\n      if (not (IsSet(red1) and IsSet(red2) and IsSet(red3))){\n        cout << '0' << endl;\n        continue;\n      }\n    }\n\n    if (green.size() == 3) {\n      sort(green.begin(), green.end());\n      if (not IsSet(green)) {\n        cout << '0' << endl;\n        continue;\n      }\n    }else if (green.size() == 6) {\n      sort(green.begin(), green.end());\n      vector<int> green1(3), green2(3);\n      for (int i = 0; i < 3; i++) {\n        green1[i] = green[i];\n      }\n      for (int i = 3; i < 6; i++) {\n        green2[i - 3] = green[i];\n      }\n      if (not (IsSet(green1) and IsSet(green2))){\n        cout << '0' << endl;\n        continue;\n      }\n    }else if (green.size() == 9) {\n      sort(green.begin(), green.end());\n      vector<int> green1(3), green2(3), green3(3);\n      for (int i = 0; i < 3; i++) {\n        green1[i] = green[i];\n      }\n      for (int i = 3; i < 6; i++) {\n        green2[i - 3] = green[i];\n      }\n      for (int i = 6; i < 9; i++) {\n        green3[i - 6] = green[i];\n      }\n      if (not (IsSet(green1) and IsSet(green2) and IsSet(green3))){\n        cout << '0' << endl;\n        continue;\n      }\n    }\n\n    if (blue.size() == 3) {\n      sort(blue.begin(), blue.end());\n      if (not IsSet(blue)) {\n        cout << '0' << endl;\n        continue;\n      }\n    }else if (blue.size() == 6) {\n      sort(blue.begin(), blue.end());\n      vector<int> blue1(3), blue2(3);\n      for (int i = 0; i < 3; i++) {\n        blue1[i] = blue[i];\n      }\n      for (int i = 3; i < 6; i++) {\n        blue2[i - 3] = blue[i];\n      }\n      if (not (IsSet(blue1) and IsSet(blue2))){\n        cout << '0' << endl;\n        continue;\n      }\n    }else if (blue.size() == 9) {\n      sort(blue.begin(), blue.end());\n      vector<int> blue1(3), blue2(3), blue3(3);\n      for (int i = 0; i < 3; i++) {\n        blue1[i] = blue[i];\n      }\n      for (int i = 3; i < 6; i++) {\n        blue2[i - 3] = blue[i];\n      }\n      for (int i = 6; i < 9; i++) {\n        blue3[i - 6] = blue[i];\n      }\n      if (not (IsSet(blue1) and IsSet(blue2) and IsSet(blue3))){\n        cout << '0' << endl;\n        continue;\n      }\n    }\n\n    cout << '1' << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nclass Card{\npublic:\n  int n;\n  char rgb;\n  bool operator <(const Card &c) const {\n    if(rgb != c.rgb) return rgb < c.rgb;\n    if(n != c.n) return n < c.n;\n    return false;\n  }\n  bool operator ==(const Card &c) const {\n    if(rgb == c.rgb && n == c.n) return true;\n    return false;\n  }\n};\n\nCard card[9];\n\nstruct Used{\n  bool u[9];\n  Used() {\n    for(int i = 0; i < 9; i++) {\n      u[i] = false;\n    }\n  }\n};\n\nbool rec(Used u) {\n  bool flag = false;\n  for(int i = 0; i < 9; i++) {\n    if(!u.u[i]) {\n      flag = true;\n      int cnt = 1;\n      Used newU = u;\n      newU.u[i] = true;\n      for(int j = i+1; j < 9; j++) {\n\tif(card[j] == card[i]) {\n\t  cnt++;\n\t  newU.u[j] = true;\n\t  if(cnt == 3) {\n\t    if(rec(newU)) return true;\n\t    break;\n\t  }\n\t}\n      }\n      cnt = 1;\n      newU = u;\n      newU.u[i] = true;\n      for(int j = i+1; j < 9; j++) {\n\tif(card[j].rgb == card[i].rgb && card[j].n - cnt == card[i].n) {\n\t  cnt++;\n\t  newU.u[j] = true;\n\t  if(cnt == 3) {\n\t    if(rec(newU)) return true;\n\t    break;\n\t  }\n\t}\n      }\n      return false;\n    }\n  }\n  if(!flag) return true;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for(int t = 0; t < T; t++) {\n    for(int i = 0; i < 9; i++)\n      cin >> card[i].n;\n    for(int i = 0; i < 9; i++)\n      cin >> card[i].rgb;\n\n    sort(card, &card[9]);\n\n    if(rec(Used())) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  sort(card,card+9);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == \"G\") card[i] += 20;\n        else if (color == \"B\") card[i] += 40;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nstruct C { int num; int cards[9]; };\n\nint buf[9];\nC rgb[3];\nbool taken[10];\n\nbool try_to_take(const int& t, int* cards, int pos) {\n  while (true) {\n    while (taken[pos]) pos++;\n    int& v = cards[pos];\n    if (v == t) {\n      taken[pos] = true;\n      return true;\n    } else if (v > t){\n      return false;\n    }\n    pos++;\n  }\n}\n\nbool validity_of(int* cards, const int& num) {\n  memset(taken, false, sizeof(taken));\n  sort(cards, cards + num);\n  int i = 0;\n  while (i < num) {\n    if (cards[i] == cards[i + 1] && cards[i] == cards[i + 2]) {\n      taken[i + 2] = taken[i + 1] = taken[i] = true;\n    } else {\n      taken[i] = true;\n      if (!try_to_take(cards[i] + 1, cards, i) || !try_to_take(cards[i] + 2, cards, i)) return false;\n    }\n    while (taken[i]) i++;\n  }\n  return true;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    for (auto&& x : rgb) x.num = 0;\n    for (int j = 0; j < 9; j++) cin >> buf[j];\n    for (int j = 0; j < 9; j++) {\n      char c;\n      cin >> c;\n      C &x = rgb[c == 'R' ? 0 : c == 'G' ? 1 : 2];\n      x.cards[x.num++] = buf[j];\n    }\n    cout << (int)(all_of(rgb, rgb + 3, [](C& x){ return x.num % 3 == 0; }) &&\n                  all_of(rgb, rgb + 3, [](C& x){ return validity_of(x.cards, x.num); })) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nclass Point{\npublic:\n  int n,f;\n  string c;\n  bool operator < (const Point &p) const{\n    if(n == p.n) return c < p.c;\n    else return n < p.n;\n  }\n};\n\nint main(){\n  int i,j,n,ans,k,t;\n  Point a[9];\n  cin >> n;\n  for(t=0;t<n;t++){\n    for(i=0;i<9;i++) cin >> a[i].n;\n    for(i=0;i<9;i++) cin >> a[i].c;\n    for(i=0;i<9;i++) a[i].f = 0;\n\n    ans = 0;\n    for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f == 1)  break;\n\t  }\n\t}\n\tif(a[i].f == 1) continue;\n      }\n    }\n\n   for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n + 1 == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n + 1 == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f == 1) break;\n\t  }\n\t}\n\tif(a[i].f == 1) continue;\n      }\n    }\n\n\n    if(ans == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<cstdio>\n#include<cstdlib>\n#include<vector>\n#include<string>\n#include<stack>\n#include<queue>\n#include<deque>\n#include<set>\n#include<map>\n#include<algorithm>\n#include<functional>\n#include<utility>\n#include<cmath>\n#include<complex>\n#include<iomanip>\n\nusing namespace std;\n\n#define REP(i,s,e) for(int i=int(s);i<=int(e);i++)\n#define rep(i,n) for(int i=0;i<int(n);i++)\n#define pi 3.14159265358979\n\nint main(void){\n\n\tint n;\n\tcin >> n;\n\trep(i,n){\n\tvector<int>cn(9); vector<char>cc(9);\n\tvector<pair<char,int> >card;\n\trep(j,9) cin >> cn[j];\n\trep(j,9) cin >> cc[j];\n\trep(j,9) card.push_back(make_pair(cc[j],cn[j]));\n\tsort(card.begin(),card.end());\n\n\tbool f=false;\n\tfor(int j=0;j<9;j+=3){\n\t\tint d1=card[j+1].second-card[j].second,\n\t\t\td2=card[j+2].second-card[j+1].second;\n\t\tif(card[j+2].first==card[j].first && d1==d2 && (d1==0 || d1==1))\n        f=true;\n\t\telse{ f=false; break;}\n\t}\n\n    if(f) cout << 1 << endl;\n    else  cout << 0 << endl;\n\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nclass Point{\npublic:\n  int n,f;\n  string c;\n  bool operator < (const Point &p) const{\n    if(n == p.n) return c < p.c;\n    else return n < p.n;\n  }\n};\n\nint main(){\n  int i,j,n,ans,k,t;\n  Point a[9];\n  cin >> n;\n  for(t=0;t<n;t++){\n    for(i=0;i<9;i++) cin >> a[i].n;\n    for(i=0;i<9;i++) cin >> a[i].c;\n    for(i=0;i<9;i++) a[i].f = 0;\n\n    ans = 0;\n    for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f == 1)  break;\n\t  }\n\t}\n      }\n    }\n\n   for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n + 1 == a[j].n && a[j].f == 0 && a[i].c == a[j].c){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n + 1 == a[k].n && a[k].f == 0 && a[j].c == a[k].c){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f == 1) break;\n\t  }\n\t}\n      }\n    }\n\n\n    if(ans == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <array>\n#include <string>\nusing namespace std;\n\nint T;\nvector<int> card(16);\n\nbool is_same_number(int a, int b, int c) {\n    if (a == b && b == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\nbool is_sequence(int a, int b, int c) {\n    if (a+2 == b+1 && b+1 == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool is_good_set(int a, int b, int c) {\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n    for (int i = 0; i < 9; i++){\n        cout << card[i] << \" \" ;\n    }\n    cout << endl;\n    sort(card.begin(), card.begin()+9);\n    if (is_good_set(card[0], card[1], card[2]) &&\n        is_good_set(card[3], card[4], card[5]) &&\n        is_good_set(card[6], card[7], card[8])){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nint main() {\n    cin >> T;\n    for (int t=0; t<T; ++t) {\n        for (int i=0; i<9; ++i) {\n            cin >> card[i];\n            cout << card[i] << \" \" ;\n        }\n        cout << endl;\n        string color;\n        for (int i=0; i<9; ++i) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n        if (is_all_good_set()){\n            cout << \"1\" << endl;\n        } else {\n            cout << \"0\" << endl;\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nbool solve(){\n\tint cards[3][9]={0};\n\tint intbuf[9];\n\tfor(int i=0;i<9;i++){\n\t\tcin >> intbuf[i];\n\t\tintbuf[i]--;\n\t}\n\tfor(int i=0;i<9;i++){\n\t\tchar buf;\n\t\tcin >> buf;\n\t\tswitch(buf){\n\t\tcase 'R':\n\t\t\tcards[0][intbuf[i]]++;\n\t\t\tbreak;\n\t\tcase 'G':\n\t\t\tcards[1][intbuf[i]]++;\n\t\t\tbreak;\n\t\tcase 'B':\n\t\t\tcards[2][intbuf[i]]++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor(int i=0;i<3;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tif(cards[i][j] == 4){\n\t\t\t\tcards[i][j] = 1;\n\t\t\t\tj--;\n\t\t\t\tcontinue;\n\t\t\t}else if(cards[i][j] == 3){\n\t\t\t\tcards[i][j] = 0;\n\t\t\t}else if(cards[i][j] > 0){\n\t\t\t\tif(j<7){\n\t\t\t\t\tif(cards[i][j+1] >= cards[i][j] && cards[i][j+2] >= cards[i][j]){\n\t\t\t\t\t\tcards[i][j+1] -= cards[i][j];\n\t\t\t\t\t\tcards[i][j+2] -= cards[i][j];\n\t\t\t\t\t\tcards[i][j] = 0;\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i=0;i<3;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tif(cards[i][j] > 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tfor(int loop=0;loop<n;loop++){\n\t\tif(solve()){\n\t\t\tcout << \"1\" << endl;\n\t\t}else{\n\t\t\tcout << \"0\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(){\n  int n;\n  std::cin >> n;\n  for (int l = 0; l < n; l++) {\n    vector<vector<int> > cards(3, vector<int>(11, 0));\n    vector<int> number(10), color(10);\n    for (int i = 0; i < 9; i++) std::cin >> number[i];\n    for (int i = 0; i < 9; i++) {\n      char c;\n      std::cin >> c;\n      if(c == 'R'){\n        cards[0][number[i]]++;\n      }else if(c == 'B'){\n        cards[1][number[i]]++;\n      }else if(c == 'G'){\n        cards[2][number[i]]++;\n      }\n    }\n    for (int i = 0; i < 3; i++) {\n      for (int j = 0; j < 9; j++) {\n        if(cards[i][j] < 0){\n          std::cout << 0 << std::endl;\n          i = j = 1e9;\n          break;\n        }\n        cards[i][j] %= 3;\n        cards[i][j + 1] -= cards[i][j], cards[i][j + 2] -= cards[i][j];\n      }\n      if(i == 2)std::cout << 1 << std::endl;\n    }\n    \n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 10;\n\t\t\tif(color == \"B\") n[k] += 20;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\t// return 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint box1[9][3],box2[9][3],n,s[9];\n\tint sum,y,x;\n\tchar c[9];\n\tcin>>n;\n\twhile(n-->0){\n\t\tfor(int i=0;i<9;i++){\n\t\t\tbox1[i][0]=0;\n\t\t\tbox1[i][1]=0;\n\t\t\tbox1[i][2]=0;\n\t\t\tbox2[i][0]=0;\n\t\t\tbox2[i][1]=0;\n\t\t\tbox2[i][2]=0;\n\t\t\tcin>>s[i];\n\t\t}\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin>>c[i];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(c[i]=='G'){\n\t\t\t\tbox1[s[i]-1][0]++;\n\t\t\t\tbox2[s[i]-1][0]++;\n\t\t\t}\n\t\t\telse if(c[i]=='R'){\n\t\t\t\tbox1[s[i]-1][1]++;\n\t\t\t\tbox2[s[i]-1][1]++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tbox1[s[i]-1][2]++;\n\t\t\t\tbox2[s[i]-1][2]++;\n\t\t\t}\n\t\t}\n\n\t\tsum=0;\n\t\t\n\t\tfor(int j=0;j<3;j++){\n\tx=0;\n\ty=0;\n\tfor(int i=0;i<9;i++)\n\t\tif(box1[i][j]>=3){\n\t\t\tx++;\n\t\t\tbox1[i][j]-=3;\n\t}\n\tfor(int i=0;i<7;i++)\n\t\tif(box1[i][j]>0&&box1[i+1][j]>0&&box1[i+2][j]>0){\n\t\t\tx++;\n\t\t\tbox1[i][j]--;\n\t\t\tbox1[i+1][j]--;\n\t\t\tbox1[i+2][j]--;\n\t}\n\tfor(int i=0;i<7;i++)\n\t\tif(box2[i][j]>0&&box2[i+1][j]>0&&box2[i+2][j]>0){\n\t\t\ty++;\n\t\t\tbox2[i][j]--;\n\t\t\tbox2[i+1][j]--;\n\t\t\tbox2[i+2][j]--;\n\t}\n\tfor(int i=0;i<9;i++)\n\t\tif(box2[i][j]>=3){\n\t\t\ty++;\n\t\t\tbox2[i][j]-=3;\n\t}\n\tif(x>y)\n\t\ty=x;\n\tsum+=y;\n}\nif(sum==3)\ncout<<'1'<<endl;\nelse cout<<'0'<<endl;\n\n\n\n\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[10];\n\nbool is_same_number(int a, int b, int c){\n    //同色同数値かどうか\n    if(a == b && a == c) return true;\n    else return false;\n}\nbool is_sequence(int a, int b, int c){\n    //同色連番かどうか\n    if(a + 2 == c && b + 1 == c) return true;\n    else return false;\n}\nbool is_good_set(int a, int b, int c){\n    //同色同数値である　または　同色連番である\n    return ((is_same_number(a, b, c))|| is_sequence(a, b, c));\n}\nbool is_all_good_set(){\n    //勝利状態の判定\n    return is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]);\n}\nint win(){\n        sort(card, card + 9);\n        do{\n            if(is_all_good_set()) return 1;\n        }while(next_permutation(card, card + 9));\n        return 0;\n    }\nint main(){\n    //cout << is_same_number(3, 4, 5) << endl;\n    //cout << is_sequence(3, 4, 5) << endl;\n    cin >> T;\n\n    //入力の処理\n    for(int i = 0; i < T; i++){\n        for(int j = 0; j < 9; j++){\n            cin >> card[j];\n        }\n        string color;\n        for(int j = 0; j < 9; j++){\n            cin >> color;\n            /*各カードは色と数の２つの情報の組み合わせなので、\n            これを整数で表現するための処理*/\n            if(color == \"G\") card[j] += 10;\n            else if(color == \"B\") card[j] += 20;\n        }\n        cout << win() << endl; \n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <functional>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nint main() {\n\tint t;\n\tcin >> t;\n\tfor (int i = 0; i < t; i++) {\n\t\tint data[9];\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> data[j];\n\t\t}\n\t\tpriority_queue< P, vector<P>, greater<P> > pq;\n\t\tchar c;\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> c;\n\t\t\tP p;\n\t\t\tp.second = data[j];\n\t\t\tif (c == 'R') {\n\t\t\t\tp.first = 1;\n\t\t\t} else if (c == 'B') {\n\t\t\t\tp.first = 2;\n\t\t\t} else {\n\t\t\t\tp.first = 3;\n\t\t\t}\n\t\t\tpq.push(p);\n\t\t}\n\t\tpriority_queue< P, vector<P>, greater<P> > pa;\n\t\tint counter = 1;\n\t\tint counter3 = 0;\n\t\tP ppp;\n\t\tppp.first = 100;\n\t\tppp.second = 100;\n\t\tpq.push(ppp);\n\t\twhile (!pq.empty()) {\n\t\t\tif ((pq.top()).first == counter) {\n\t\t\t\tP pp;\n\t\t\t\tpp.first = (pq.top()).second;\n\t\t\t\tpp.second = (pq.top()).first;\n\t\t\t\tpa.push(pp);\n\t\t\t\tpq.pop();\n\t\t\t} else {\n\t\t\t\tint data2[9];\n\t\t\t\tint counter2 = 0;\n\t\t\t\twhile (!pa.empty()) {\n\t\t\t\t\tdata2[counter2] = (pa.top()).first;\n\t\t\t\t\tcounter2++;\n\t\t\t\t\tpa.pop();\n\t\t\t\t}\n\t\t\t\tfor (int j = 0; j < counter2; j++) {\n\t\t\t\t\tif (counter2 < 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (data2[j] == data2[j+1] && data2[j] == data2[j+2]) {\n\t\t\t\t\t\tcounter3++;\n\t\t\t\t\t} else if (data2[j]+1 == data2[j+1] && data2[j]+2 == data2[j+2]) {\n\t\t\t\t\t\tcounter3++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t\tcounter++;\n\t\t\t}\n\t\t}\n\t\tif (counter3 == 3) {\n\t\t\tcout << 1 << endl;\n\t\t} else {\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nusing ll =  long long ;\nusing P = pair<int,int> ;\nconst int INF = 1e9;\nconst int MOD = 1000000007;\n\nvector<int> num(9);\nvector<char> color(9);\n\nbool ok(int i,int j,int k){\n    if(color[i] != color[j] || color[j] != color[k]) return false;\n    if(num[i] == num[j] && num[j] == num[k]) return true;\n    if(num[i]+2 == num[j]+1 && num[j]+1 == num[k]) return true;\n    return false;\n}\n\n\nint main(){\n    int t;\n    cin >> t;\n    vector<int> idx(9);\n    iota(idx.begin(),idx.end(),0);\n    while(t--){\n        bool ans = false;\n        rep(i,9) cin >> num[i];\n        rep(i,9) cin >> color[i];\n        do{\n            bool res = true;\n            rep(i,3){\n                res = res && ok(idx[i*3],idx[3*i+1],idx[3*i+2]);\n            }\n            ans = ans || res;\n        }while(next_permutation(idx.begin(),idx.end()));\n        cout << (ans ? 1 : 0 ) << endl;\n    }\n    return 0;\n}\n\n/*\nRummy\nできるだけ関数化しようと思って連番または全て同じ番号になっているものかどうかを判定する関数を作ろうと思った。\n結局ok関数の中身は汚くなったので全体としてはわかりやすくなったと思う。\n*/\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\n#define f first\n#define s second\n\nbool sameColor(char x, char y, char z){\n  if(x == y && y == z) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if((x == y-1 && x == z-2) || (x == y+1 && x == z+2)) return true;\n  else return false;\n}\n\n\nint main(){\n  int cs;\n  pair<char, int> r[10];\n \n  cin >> cs;\n  while(cs--){\n    int B=0, G=0, R=0;\n    \n    for(int i = 0 ; i < 9 ; i++) cin >> r[i].s;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> r[i].f;\n      if(r[i].f == 'B') B++;\n      if(r[i].f == 'G') G++;\n      if(r[i].f == 'R') R++;\n    }\n    \n    if(B%3 != 0 || G%3 != 0 || R%3 != 0){\n      cout << 0 << endl;\n      continue;\n    }\n\n    sort(r, r+9);\n    \n    int cnt = 0;\n    \n    for(int i = 0 ; i <= 6 ; i += 3){\n      if(sameColor(r[i].f, r[i+1].f, r[i+2].f)){\n\tif(isContinue(r[i].s, r[i+1].s, r[i+2].s) ||\n\t   sameNumber(r[i].s, r[i+1].s, r[i+2].s)){\n\t  cnt++;\n\t}\n      }\n    }\n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n; cin >> n;\n    for (int i = 0; i < n; i++) {\n        int v[9];\n        char c[9];\n        pair<char, int> card[9];\n        for (int j = 0; j < 9; j++) cin >> v[j];\n        for (int j = 0; j < 9; j++) cin >> c[j];\n        for (int j = 0; j < 9; j++) {\n            card[j] = make_pair(c[j], v[j]);\n        }\n\n        sort(card, card+9);\n\n        bool ok = true;\n        for (int j = 0; j < 9; j+=3) {\n            if (!(card[j].first == card[j+1].first \n                    && card[j+1].first == card[j+2].first)) {\n                ok = false;\n                break;\n            }\n            if (!((card[j].second == card[j+1].second \n                        && card[j+1].second == card[j+2].second) ||\n                 (card[j].second == card[j+1].second - 1\n                        && card[j+1].second == card[j+2].second - 1))) {\n                ok = false;\n                break;\n            }\n        }\n\n        cout << ok << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nvector<int> card[1080];\nchar col[1080];\nint num[1080];\nint n, m, edge[10800];\n\nbool dfs(int x){\n\tif(card[x].size() == 0)return true;\n\tif(card[x].size() >= 3 && card[x][card[x].size() - 1] == card[x][card[x].size() - 2]  && card[x][card[x].size() - 2] == card[x][card[x].size() - 3]){\n\t\tint tmp = card[x].back();\n\t\tcard[x].pop_back();\n\t\tcard[x].pop_back();\n\t\tcard[x].pop_back();\n\t\tif(dfs(x))return true;\n\t\tcard[x].push_back(tmp);\n\t\tcard[x].push_back(tmp);\n\t\tcard[x].push_back(tmp);\n\t}\n\tif(card[x].size() >= 3 && card[x][card[x].size() - 1] + 1 == card[x][card[x].size() - 2]  && card[x][card[x].size() - 2] + 1 == card[x][card[x].size() - 3]){\n\t\tcard[x].pop_back();\n\t\tcard[x].pop_back();\n\t\tcard[x].pop_back();\n\t\tif(dfs(x))return true;\n\t}\n\treturn false;\n}\n\nbool ok(int c){\n\tsort(card[c].begin(), card[c].end(), greater<int>());\n\tbool res = dfs(c);\n\tcard[c].clear();\n\treturn res;\n}\n\nvoid solve(){\n\tfor(int i = 0;i < 9;i++)cin >> num[i];\n\tfor(int i = 0;i < 9;i++){\n\t\tcin >> col[i];\n\t\tcard[col[i]].push_back(num[i]);\n\t}\n\tif(ok('R') & ok('G') & ok('B')){\n\t\tcout << 1 << endl;\n\t}\n\telse cout << 0 << endl;\n\treturn;\t\n}\n\nint main(){\n\tint t;\n\tcin >> t;\n\twhile(t--)solve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <complex>\n#include <cstdio>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n\nbool used[9];\nint T,n[9],c[3][10],C[3];\nchar cc;\n\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\trep(i,3)fill(c[i],c[i]+10,0);\n\t\tfill(C,C+3,0);\n\t\trep(i,9)cin>>n[i];\n\t\trep(i,9){\n\t\t\tcin>>cc;\n\t\t\tif(cc=='R'){c[0][n[i]]++;C[0]++;}\n\t\t\tif(cc=='G'){c[1][n[i]]++;C[1]++;}\n\t\t\tif(cc=='B'){c[2][n[i]]++;C[2]++;}\n\t\t}\n\t\tint f=1;\n\t\tif(C[0]%3+C[1]%3+C[2]%3)f=0;\n\t\trep(i,3){\n\t\t\tif(!C[i])continue;\n\t\t\tint cur=0;\n\t\t\twhile(C[i]){\n\t\t\t\tif(!c[i][cur])cur++;\n\t\t\t\telse{\n\t\t\t\t\tif(c[i][cur]>=3){c[i][cur]-=3;C[i]-=3;}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!c[i][cur+1]||!c[i][cur+2]){f=0;break;}\n\t\t\t\t\t\tc[i][cur]-=1;c[i][cur+1]-=1;c[i][cur+2]-=1;\n\t\t\t\t\t\tC[i]-=3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!f)break;\n\t\t}\n\t\tcout<<(f?1:0)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\nint line[3] = {3,6,9};\n\nbool isPair(vector<int> V){\n  if(V.size()%3) return false;\n\n  bool ans[2] = {true,true};\n  sort(V.begin(),V.end());\n\n  for(int i = 0; i < 3; i++)\n    for(int j = line[i]-2; j < min(line[i],(int)V.size()); j++)\n      if(V[j] != V[j-1]+1) ans[0] = false;\n\n  int sum[MAX];\n  fill(sum,sum+MAX,0);\n  for(int i = 0; i < V.size(); i++)\n    sum[V[i]]++;\n  \n  for(int i = 0; i < MAX; i++)\n    if(sum[i]%3) ans[1] = false;\n\n  return (ans[0]||ans[1]);\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <queue>\n#include <map>\n#include <sstream>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define EPS 1e-9\nint n;\nint card[3][10],num[10];\nchar co[10];\n\nbool ok(){\n\tint ret = 0;\n\trep(i,3){\n\t\tfor(int j=1; j<=7; j++){\n\t\t\tif( card[i][j]!=0 && card[i][j+1]!=0 && card[i][j+2]!=0 ){\n\t\t\t\tret++;\n\t\t\t\tcard[i][j]--; card[i][j+1]--; card[i][j+2]--;\n\t\t\t}\n\t\t}\n\t\tfor(int j=1; j<=9; j++){\n\t\t\tif( card[i][j]>=3 ){\n\t\t\t\tret++;\n\t\t\t\tcard[i][j] -= 3;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret==3;\n}\nint main(){\n\tcin>>n;\n\twhile(n--){\n\t\tmemset(card,0,sizeof(card));\n\t\trep(i,9)cin>>num[i];\n\t\trep(i,9)cin>>co[i];\n\t\trep(i,9){\n\t\t\tint k = co[i]=='R'?0:co[i]=='G'?1:2;\n\t\t\tcard[k][num[i]]++;\n\t\t}\n\t\t//rep(i,9)printf(\"%d \",num[i]);puts(\"\");\n\t\t//rep(i,9)printf(\"%c \",co[i]);puts(\"\");\n\t\t\n\t\tputs(ok()?\"1\":\"0\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nint point(int C[]){\n\t\n\tint e = 0;\n\n\t\n\t//??£???\n\tfor (int i = 0; i < 9; i++){\n\t\tif (C[i] == 10)break;\n\t\tint f = 0;\n\t\tint p = C[i];\n\t\tint acc[3];\n\t\tacc[0] = i;\n\t\tfor (int j = i + 1; j < 9; j++){\n\t\t\tif (C[j] == 10)break;\n\n\t\t\tif (C[j] == p + 1){\n\t\t\t\tf++;\n\t\t\t\tp++;\n\t\t\t\tacc[f] = j;\n\t\t\t}\n\t\t\tif (f == 2)break;\n\t\t}\n\n\t\tif (f == 2){\n\t\t\te++;\n\t\t\tC[acc[0]] = 0; C[acc[1]] = 0; C[acc[2]] = 0;\n\n\t\t}\n\t\t\n\t}\n\n\n\tint l=0;\n\tint n = 0;\n\n\t/*printf(\"%d\\n\", e);\n\tfor (int i = 0; i < 9; i++) printf(\"%d\", C[i]);\n\tprintf(\"\\n\");*/\n\n\tsort(C, C + 9);\n\n\tfor (int i = 0; i < 9; i++) {\n\t\tif (C[i] != 0 && C[i] != 10){\n\t\t\tl = i;\n\t\t\tn++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (e == 3 || n==0)return e;\n\t\n\t\n\n\t//???\n\tint p = 0;\n\tint d = 0;\n\tfor (int i = l; i < 9; i++){\n\t\tif (C[i] == 10)break;\n\t\tif (p == 0 && C[i] != 0){\n\t\t\tp = C[i];\n\t\t\tcontinue;\n\t\t}\n\t\tif (C[i]>p){\n\t\t\td = 0;\n\t\t\tp = C[i];\n\t\t\tcontinue;\n\t\t}\n\t\telse if (C[i] == p){\n\t\t\td++;\n\t\t}\n\t\t\n\t\tif (d == 2){\n\t\t\te++;\n\t\t\tp = C[i + 1];\n\t\t\td = 0;\n\t\t\ti ++;\n\t\t}\n\t}\n\n\treturn e;\n\n}\n\nint main(){\n\n\t\n\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++){\n\t\tint n[9];\n\t\tchar c[9];\n\t\tint R[9];\n\t\tint G[9];\n\t\tint B[9];\n\t\tint r = 0, g = 0, b = 0;\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tc[j] = 0;\n\t\t\tn[j] = 0;\n\t\t\tR[j] = 10;\n\t\t\tG[j] = 10;\n\t\t\tB[j] = 10;\n\t\t}\n\n\t\t//????????????\t\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> n[j];\n\t\t}\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> c[j];\n\t\t}\n\n\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tif (c[j] == 'R'){\n\t\t\t\tR[r] = n[j];\n\t\t\t\tr++;\n\t\t\t}\n\t\t\telse if (c[j] == 'G'){\n\t\t\t\tG[g] = n[j];\n\t\t\t\tg++;\n\t\t\t}\n\t\t\telse if (c[j] == 'B'){\n\t\t\t\tB[b] = n[j];\n\t\t\t\tb++;\n\t\t\t}\n\t\t}\n\t\tsort(R, R + 9);\n\t\tsort(G, G + 9);\n\t\tsort(B, B + 9);\n\t\t//??????\n\t\tint e = 0;\n\t\t\n\t\t//R\n\t\tif (R[0] != 10){\n\t\t\te += point(R);\n\t\t\t\n\t\t}\n\t\t//G\n\t\tif (e < 3 && G[0] != 10){\n\t\t\te += point(G);\n\t\t\t\n\t\t}\n\t\t//B\n\t\tif (e < 3 && B[0] != 10){\n\t\t\te += point(B);\n\t\t\t\n\t\t}\n\t\t//printf(\"%d %d\",i+1, e);\n\t\tif (e == 3){\n\t\t\tcout << 1 << endl;\n\t\t\t//printf(\" 1\\n\");\n\t\t}\n\t\telse{\n\t\t\tcout << 0 << endl;\n\t\t\t//printf(\" 0\\n\");\n\t\t}\n\t\t//break;\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nint sum(const std::vector<int>& a)\n{\n    int s = 0;\n    for (int i = 0; i < 9; i++) {\n        s += a.at(i);\n    }\n    return s;\n}\n\nint main()\n{\n    int n = 0;\n    std::vector<int> ans(9);\n    std::cin >> n;\n    std::vector<int> num(9);\n    std::string color;\n\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < 9; j++) {\n            std::cin >> num.at(j);\n        }\n        for (int k = 0; k < 9; k++) {\n            std::cin >> color;\n            if (color == \"R\") {\n                num.at(k) += 10;\n            } else if (color == \"G\") {\n                num.at(k) += 20;\n            } else {\n                num.at(k) += 30;\n            }\n        }\n        std::sort(num.begin(), num.end());\n        for (int j = 0; j < 9; j++) {\n            for (int k = j; k < 9; k++) {\n                for (int l = k; l < 9; l++) {\n                    if (num.at(j) == num.at(k) && num.at(j) == num.at(l)) {\n                        ans.at(j), ans.at(k), ans.at(l) = 1;\n                    } else if (num.at(j) + 1 == num.at(k) && num.at(j) + 2 == num.at(l)) {\n                        ans.at(j), ans.at(k), ans.at(l) = 1;\n                    }\n                }\n            }\n        }\n        if (sum(ans) == 9) {\n            std::cout << 1 << '\\n';\n            ans = {0, 0, 0, 0, 0, 0, 0, 0, 0};\n        } else {\n            std::cout << 0 << '\\n';\n        }\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nvoid show(int* cards);\n\nint main()\n{\n  int n;\n  cin >> n;\n  int cards[9];\n  for(int i=1; i<=n; i++){\n    /* input */\n    for(int k=0; k<9; k++){\n      cin >> cards[k];\n    }\n    for(int k=0; k<9; k++){\n      char col;\n      cin >> col;\n      switch (col) {\n        case 'R': break;\n        case 'G': cards[k] += 10; break;\n        case 'B': cards[k] += 20; break;\n      }\n    }\n\n    /* sort */\n    sort(&cards[0], &cards[10]);\n\n    /* judge */\n    int judge = 0;\n    for(int k=1; k<=3; k++){\n      int ind = 3*(k-1);\n      if( ((cards[ind] == cards[ind+1])\n        && (cards[ind+1] == cards[ind+2])) ||\n          (((cards[ind+1] - cards[ind]) == 1)\n        && ((cards[ind+2] - cards[ind+1]) == 1)) ){\n        judge += 1;\n      }\n    }\n\n    cout << judge / 3 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b&&b == c)return 1;\n\telse return 0;\n}\n\nbool is_sequence(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2)return 1;\n\telse return 0;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2])\n\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo{\n\t\tif (is_all_good_set)\n\t\t\treturn 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\")card[i] += 20;\n\t\t}\n\t\tcout << win() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include<algorithm>\n#include<iomanip>\n#include<queue>\nusing namespace std;\n#define rep(i,n) for(int i=1;i<=(int)(n);i++)\n#define Rep(i,n) for(int i=0;i<=(int)(n-1);i++)\n\nint card[9];\nint N;\n\nbool is_same_number(int a,int b,int c){\n\treturn a==b && b==c;\n}\nbool is_sequence(int a,int b,int c){\n\treturn a+1 == b && b+1 ==c;\n}\nbool is_good_set(int a,int b,int c){\n\treturn is_same_number(a,b,c) || is_sequence(a,b,c);\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win(){\n\tsort(card,card+9);\n\tdo{\n\t\tif(is_all_good_set()){\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t}while(next_permutation(card,card+9));\n\treturn 0;\n}\n\nint main() {\n\tcin>>N;\n\tRep(i,N){\n\t\tRep(j,9) cin>>card[j];\n\t\tstring color;\n\t\tRep(j,9){\n\t\t\tcin>>color;\n\t\t\tif(color==\"G\") card[j]+=10;\n\t\t\telse if(color==\"B\") card[j]+=20;\n\t\t}\n\t\tcout<<win()<<endl;\n\t}\n\t\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint T, card[9];\n\nbool is_same_number(int a, int b, int c) {\n  return (a==b && b==c) && c==a;\n}\n\nbool is_sequence (int a, int b, int c) {\n  return (a+2==b+1 && b+1==c) && c==a+2;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation (card, card+9));\n  return 0;\n}\n  \nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] +=10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void){\n\tint card[9], n, i, j, k, s[3][9];\n\tchar c, color[4] ={\"RGB\"};\n\tscanf(\"%d\",&n);\n\tfor(i = 0;i < n;i++){\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%d\",&card[j]);\n\t\t\tcard[j]--;\n\t\t}\n\t\tgetchar();\n\t\tmemset(s,0,sizeof(s));\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%c\",&c);\n\t\t\tgetchar();\n\t\t\tfor(k = 0;k < 3;k++)\n\t\t\t\tif(color[k] == c) s[k][card[j]]++;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k] >= 3) s[j][k] %= 3;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 7;k++){\n\t\t\t\tif(s[j][k] && s[j][k + 1] && s[j][k + 2])\n\t\t\t\t\ts[j][k]--,s[j][k + 1]--,s[j][k + 2]--;\n\t\t\t}\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k]) break;\n\t\t\tif(k != 9) break;\n\t\t}\n\t\tif(j == 3)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t\tprintf(\"0\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  int cards[9];\n  for(int i=1; i<=n; i++){\n    /* input */\n    for(int k=0; k<9; k++){\n      cin >> cards[k];\n    }\n    for(int k=0; k<9; k++){\n      char col;\n      cin >> col;\n      switch (col) {\n        case 'R': break;\n        case 'G': cards[k] += 10; break;\n        case 'B': cards[k] += 20; break;\n      }\n    }\n\n    /* sort */\n    sort(&cards[0], &cards[10]);\n\n    /* judge */\n    int judge = 0;\n    for(int k=1; k<=3; k++){\n      int ind = 3*(k-1);\n      if( ((cards[ind] == cards[ind+1])\n        && (cards[ind+1] == cards[ind+2])) ||\n          (((cards[ind+1] - cards[ind]) == 1)\n        && ((cards[ind+2] - cards[ind+1]) == 1)) ){\n        judge += 1;\n      }\n    }\n\n    cout << judge / 3 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <set>\nusing namespace std;\n\n#define rep(i,n) for(int i=0; i<n; i++)\n#define FOR(i,s,n) for(int i=s; i<n; i++)\n#define ALL(x) x.begin(), x.end()\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\n\nint main() {\n\tint n;\n\tcin >> n;\n\trep(i, n) {\n\t\tvector<int> num(9);\n\t\tvector<string> mark(9);\n\t\trep(j, 9) {\n\t\t\tcin >> num[j];\n\t\t}\n\t\trep(j, 9) {\n\t\t\tcin >> mark[j];\n\t\t}\n\t\tvector<int> per(9);\n\t\trep(j,9) per[j] = j;\n\t\tbool found = false;\n\t\twhile( next_permutation(per.begin(), per.end()) ) {\n\t\t\tbool fail = false;\n\t\t\trep(j,3) {\n\t\t\t\trep(k,3) {\n\t\t\t\t\tif( mark[per[j*3]] != mark[per[j*3+k]] ) fail = true;\n\t\t\t\t}\n\t\t\t\tif( !(num[per[j*3]] == num[per[j*3+1]] && num[per[j*3]] == num[per[j*3+2]]) &&\n\t\t\t\t\t!(num[per[j*3]]+1 == num[per[j*3+1]] && num[per[j*3]]+2 == num[per[j*3+2]]) ) {\n\t\t\t\t\tfail = true;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(!fail) {\n\t\t\t\tcout << \"1\" << endl;\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found) {\n\t\t\tcout << \"0\" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Rummy\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n  if (a == b && b == c)\n    return true;\n  else\n    return false;\n}\nbool is_sequence(int a,int b,int c){\n  if (a+2 == c && b+1 == c)\n    return true;\n  else\n    return false;\n}\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_all_good_set(){\n  if (is_good_set(card[0],card[1],card[2]))\n    if (is_good_set(card[3],card[4],card[5]))\n      if (is_good_set(card[6],card[7],card[8]))\n        return true;\n  else\n    return false;\n}\nint win(){\n  // card ?????????????????? \n  do{\n    if (is_all_good_set()) // ??????card?????????????????????????????¶????????? \n      return 1;\n  } while (next_permutation(card, card+9)); \n  // ??¨???????????????????????????????????????????????¶????????????????????£??? \n  return 0;\n}\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) { \n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n        if (color == \"G\") \n          card[i] += 10;\n        else if (color == \"B\") \n          card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n// ??????????????¨???\n// red:0 , blue:10 , green:20\n// 1-9"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <list>\nusing namespace std;\n\npair<int,char> card[9];\n\nint main(void){\n\tint t;\n\tcin >> t;\n\tfor(int loop=0;loop<t;loop++){\n\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin >> card[i].first;\n\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin >> card[i].second;\n\n\t\tbool ok=false;\n\n\t\tsort(card,card+9);\n\n\t\tdo{\t\n\t\t\tbool check=true;\n\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tbool color=false;\n\n\t\t\t\t// color\n\t\t\t\tif(((card[3*i].second==card[3*i+1].second)&&(card[3*i+1].second==card[3*i+2].second)))\n\t\t\t\t\tcolor=true;\n\n\t\t\t\tbool number=false;\n\n\t\t\t\t// number\n\t\t\t\tif((card[3*i].first+1==card[3*i+1].first)&&(card[3*i+1].first+1==card[3*i+2].first))\n\t\t\t\t\tnumber=true;\n\t\t\t\t\n\t\t\t\tif((card[3*i+1].first==card[3*i].first)&&(card[3*i+2].first==card[3*i+1].first))\n\t\t\t\t\tnumber=true;\n\n\t\t\t\tif(number&&color)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcheck=false;\n\t\t\t}\n\n\t\t\tif(check)\n\t\t\t\tok=true;\n\n\t\t}while(next_permutation(card,card+9));\n\t\tcout << ok <<  endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == \"G\") card[i] += 10;\n        else if (color == \"B\") card[i] += 20;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,char> P;\n\nbool ok(P a,P b,P c){\n    return a.second == b.second && b.second == c.second && ((a.first-b.first == 1 && b.first-c.first == 1) || (a.first == b.first && b.first == c.first));\n}\n\nbool comp(P a,P b){\n    return a.first + (int)a.second * 10 < b.first + (int)b.second * 10;\n}\n\nint main(){\n    int T;\n\n    cin >> T;\n\n    for(int i=0; i<T; i++){\n        vector<P> v(9);\n\n        for(auto &t:v) cin>>t.first;\n\n        for(auto &t:v) cin>>t.second;\n\n        bool flag=false;\n\n        do{\n            flag = (ok(v[0],v[1],v[2]) && ok(v[3],v[4],v[5]) && ok(v[6],v[7],v[8]));\n        }while(!flag && next_permutation(v.begin(),v.end()));\n\n        cout << (flag ? 1 : 0) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <array>\n#include <string>\nusing namespace std;\n\nint T;\nvector<int> card(16);\n\nbool is_same_number(int a, int b, int c) {\n    if (a == b && b == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\nbool is_sequence(int a, int b, int c) {\n    if (a+2 == b+1 && b+1 == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool is_good_set(int a, int b, int c) {\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n    for (int i = 0; i < 9; i++){\n        cout << card[i] << \" \" ;\n    }\n    cout << endl;\n    sort(card.begin(), card.begin()+9);\n    if (is_good_set(card[0], card[1], card[2]) &&\n        is_good_set(card[3], card[4], card[5]) &&\n        is_good_set(card[6], card[7], card[8])){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nint main() {\n    cin >> T;\n    for (int t=0; t<T; ++t) {\n        for (int i=0; i<9; ++i) {\n            cin >> card[i];\n            cout << card[i] << \" \" ;\n        }\n        cout << endl;\n        string color;\n        for (int i=0; i<9; ++i) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n        if (is_all_good_set()){\n            cout << \"1\" << endl;\n        } else {\n            cout << \"0\" << endl;\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n#define EPS 1e-9\n#define INF MOD\n#define MOD 1000000007LL\n#define fir first\n#define iss istringstream\n#define sst stringstream\n#define ite iterator\n#define ll long long\n#define mp make_pair\n#define rep(i,n) rep2(i,0,n)\n#define rep2(i,m,n) for(int i=m;i<n;i++)\n#define pi pair<int,int>\n#define pb push_back\n#define sec second\n#define sh(i) (1LL<<i)\n#define sz size()\n#define vi vector<int>\n#define vc vector\n#define vl vector<ll>\n#define vs vector<string>\n\nstruct C{\n\tint n;\n\tchar c;\n\tC(){}\n}c[10];\n\nint T;\n\nbool cmp(C a,C b){return a.n<b.n;}\n\nint f(C* c){\n\tint l=0,res=0;\n\twhile(c[l].n)l++;\n\tif(!l)return 1;\n\trep(i,l)rep2(j,i+1,l)rep2(k,j+1,l){\n\t\tif((c[i].n==c[j].n&&c[j].n==c[k].n||c[i].n==c[j].n-1&&c[j].n==c[k].n-1)\n\t\t&&c[i].c==c[j].c&&c[j].c==c[k].c){\n\t\t\tC d[9];\n\t\t\tint cur=0;\n\t\t\trep(ii,9)if(ii!=i&&ii!=j&&ii!=k)d[cur++]=c[ii];\n\t\t\td[cur].n=0;\n\t\t\tres|=f(d);\n\t\t}\n\t}\n\treturn res;\n}\n\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\trep(i,9)cin>>c[i].n;\n\t\trep(i,9)cin>>c[i].c;\n\t\tsort(c,c+9,cmp);\n\t\tcout<<f(c)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\nusing namespace std;\nint main(){\n    int n;\n    cin>>n;\n    while(n--){\n        int in[3][9]={0};\n        int tmp[2][9];\n        rep(i,9)cin>>tmp[0][i];\n        rep(i,9){\n            char d;\n            cin>>d;\n            if(d=='R')d=0;\n            else if(d=='B')d=1;\n            else if(d=='G')d=2;\n            tmp[1][i]=d;\n        }\n        rep(i,9)in[tmp[1][i]][tmp[0][i]]++;\n        int co=0;\n        rep(i,3)rep(j,9){\n            int c=0;\n            while(1){\n                c++;\n                if(co==3)break;\n                if(in[i][j]>=3){in[i][j]-=3;co++;continue;}\n                if(j<7&&in[i][j]&&in[i][j+1]&&in[i][j+2]){in[i][j]--;in[i][j+1]--;in[i][j+2]--;co++;continue;}\n                if(c==20)break;\n            }\n            if(co==3)break;\n        }\n        if(co==3)cout<<1<<endl;\n        else cout<<0<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nbool flag;\n\nvoid solve(vector<int> C, int n){\n\tif( n == 0 ){\n\t\tflag = true;\n\t\treturn;\n\t}\n\tif( flag ) return;\n\t\n\tfor(int i=2 ; i < 9 ; i++ ){\n\t\tif( C[i-2] && C[i-1] && C[i] ){\n\t\t\tC[i-2]--; C[i-1]--; C[i]--;\n\t\t\tsolve( C , n-3 );\n\t\t\tC[i-2]++; C[i-1]++; C[i]++;\n\t\t}\n\t}\n\tfor(int i=0 ; i < 9 ; i++ ){\n\t\tif( C[i] >= 3 ){\n\t\t\tC[i] -= 3;\n\t\t\tsolve( C , n-3 );\n\t\t\tC[i] += 3;\n\t\t}\n\t}\n}\n\nint main(){\n\tint T;\n\tcin >> T;\n\tfor(int t=0 ; t < T ; t++ ){\n\t\tvector<int> R, G, B;\n\t\tint a[9];\n\t\tfor(int i=0 ; i < 9 ; i++ ){\n\t\t\tcin >> a[i];\n\t\t}\n\t\tfor(int i=0 ; i < 9 ; i++ ){\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tif( c == 'R' ) R.push_back( a[i] );\n\t\t\tif( c == 'G' ) G.push_back( a[i] );\n\t\t\tif( c == 'B' ) B.push_back( a[i] );\n\t\t}\n\t\tif( R.size() % 3 == 0 && G.size() % 3 == 0 && B.size() % 3 == 0 ){\n\t\t\tbool flag1, flag2, flag3;\n\t\t\tif( R.size() > 0 ){\n\t\t\t\tvector<int> C(9,0);\n\t\t\t\tfor(int i=0 ; i < R.size() ; i++ ){\n\t\t\t\t\tC[ R[i]-1 ]++;\n\t\t\t\t}\n\t\t\t\tflag = false;\n\t\t\t\tsolve( C , R.size() );\n\t\t\t\tflag1 = flag;\n\t\t\t}else{\n\t\t\t\tflag1 = true;\n\t\t\t}\n\t\t\t\n\t\t\tif( G.size() > 0 ){\n\t\t\t\tvector<int> C(9,0);\n\t\t\t\tfor(int i=0 ; i < G.size() ; i++ ){\n\t\t\t\t\tC[ G[i]-1 ]++;\n\t\t\t\t}\n\t\t\t\tflag = false;\n\t\t\t\tsolve( C , G.size() );\n\t\t\t\tflag2 = flag;\n\t\t\t}else{\n\t\t\t\tflag2 = true;\n\t\t\t}\n\t\t\t\n\t\t\tif( B.size() > 0 ){\n\t\t\t\tvector<int> C(9,0);\n\t\t\t\tfor(int i=0 ; i < B.size() ; i++ ){\n\t\t\t\t\tC[ B[i]-1 ]++;\n\t\t\t\t}\n\t\t\t\tflag = false;\n\t\t\t\tsolve( C , B.size() );\n\t\t\t\tflag3 = flag;\n\t\t\t}else{\n\t\t\t\tflag3 = true;\n\t\t\t}\n\t\t\tif( flag1 && flag2 && flag3 ){\n\t\t\t\tcout << 1 << endl;\n\t\t\t}else{\n\t\t\t\tcout << 0 << endl;\n\t\t\t}\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main()\n{\n  int n;\n  cin >> n;\n  int cards[9];\n  for(int i=1; i<=n; i++){\n    /* input */\n    for(int k=0; k<9; k++){\n      cin >> cards[k];\n    }\n    for(int k=0; k<9; k++){\n      char col;\n      cin >> col;\n      switch (col) {\n        case 'R': break;\n        case 'G': cards[k] += 10; break;\n        case 'B': cards[k] += 20; break;\n      }\n    }\n\n    /* sort */\n    sort(&cards[0], &cards[10]);\n\n    /* judge */\n    int judge = 0;\n    for(int k=1; k<=3; k++){\n      int ind = 3*(k-1);\n      if( ((cards[ind] == cards[ind+1])\n        && (cards[ind+1] == cards[ind+2])) ||\n          (((cards[ind+1] - cards[ind]) == 1)\n        && ((cards[ind+2] - cards[ind+1]) == 1)) ){\n        judge += 1;\n      }\n    }\n\n    cout << judge / 3 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n\nint tx[] = {0,1,0,-1};\nint ty[] = {-1,0,1,0};\n\nstatic const double EPS = 1e-8;\n\nclass Card{\npublic:\n\tstring color;\n\tint num;\n\n\tCard() : color(\"\"),num(0){}\n\tbool operator<(const Card& c) const{\n\t\tif(color == c.color){\n\t\t\treturn num < c.num;\n\t\t}\n\t\treturn color < c.color;\n\t}\n};\n\nbool check441(const vector<Card>& cards){\n\n\tmap<int,int> freq_num;\n\tmap<string,int> freq_c;\n\tfor(int i=0;i<cards.size();i++){\n\t\tfreq_num[cards[i].num]++;\n\t\tfreq_c[cards[i].color]++;\n\t}\n\n\tif(freq_c.size() > 1) return false;\n\tif(freq_num.size() != 3) return false;\n\n\tvector<int> freq;\n\tvector<int> ord;\n\tfor(map<int,int>::iterator it = freq_num.begin(); it != freq_num.end(); it++){\n\t\tfreq.push_back(it->second);\n\t\tord.push_back(it->first);\n\t}\n\tsort(freq.begin(),freq.end());\n\tsort(ord.begin(),ord.end());\n\n\tif(freq[0] != 1 || freq[1] != 4 || freq[2] != 4) return false;\n\tif(!(ord[1] == ord[0]+1 \n\t\t&& ord[2] == ord[1] + 1)){\n\t\t\treturn false;\n\t}\n\n\treturn true;\n\n}\n\nint main(){\n\tint n;\n\n\twhile(~scanf(\"%d\",&n)){\n\n\t\tfor(int idx=0;idx<n;idx++){\n\t\t\tvector<Card> cards;\n\t\t\tint num[10];\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tscanf(\"%d\",&num[j]);\n\t\t\t}\n\n\t\t\tstring str;\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tcin >> str;\n\t\t\t\tCard c;\n\t\t\t\tc.color = str;\n\t\t\t\tc.num = num[j];\n\n\t\t\t\tcards.push_back(c);\n\t\t\t}\n\n\t\t\tsort(cards.begin(),cards.end());\n\n\t\t\tbool fail = false;\n\n\t\t\tfor(int i=0;i<9;){\n\t\t\t\tint prev_num = cards[i].num;\n\t\t\t\tstring prev_c = cards[i].color;\n\n\t\t\t\tbool isok = true;\n\n\t\t\t\tisok = check441(cards);\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=9;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\t//3つ連続\n\t\t\t\tfor(int j=0;j<2;j++){\t\t\t\n\t\t\t\t\tif(cards[i+j+1].num == prev_num\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\n\t\t\t\t}\n\n\t\t\t\tif(isok) {\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\t//昇順\n\t\t\t\tfor(int j=0;j<2;j++){\n\t\t\t\t\tif(cards[i+j+1].num == prev_num + 1\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\tif(i+6 >= 9){\n\t\t\t\t\tfail = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//七対子\t\t\t\n\t\t\t\tfor(int j=0;j<6;j+=2){\n\t\t\t\t\tif(cards[i+j].color == cards[i+j+1].color\n\t\t\t\t\t\t&& cards[i+j].num == cards[i+j+1].num){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=6;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfail = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprintf(\"%d\\n\",fail ? 0 : 1);\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint main(){\n\tint T;\n\tmap<char,int> data;\n\tdata['R']=0;\n\tdata['G']=1;\n\tdata['B']=2;\n\tcin >> T;\n\tfor(int i=0;i<T;i++){\n\t\tint RGB[3][15]={0},cnt=0;\n\t\tint CARD[10],COLOR[10];\n\t\tfor(int j=0;j<9;j++) cin >> CARD[j];\n\t\tfor(int j=0;j<9;j++) cin >> COLOR[j];\n\t\tfor(int j=0;j<9;j++) RGB[data[COLOR[j]]][CARD[j]]++;\n\n\t\tfor(int k=0;k<3;k++){\n\t\t\tfor(int j=0;j<=9;){\n\t\t\t\tif(RGB[k][j]>=3)RGB[k][j]-=3,cnt++;\n\t\t\t\telse if(RGB[k][j]>0&&RGB[k][j+1]>0&&RGB[k][j+2]>0){\n\t\t\t\t\tRGB[k][j]--,RGB[k][j+1]--,RGB[k][j+2]--,cnt++;\n\t\t\t\t} else j++;\n\t\t\t}\n\t\t}\n\t\tif(cnt==3)printf(\"1\\n\");\n\t\telse printf(\"0\\n\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\nbool ok(vector<int> v){\n  do{\n    bool ok = true;\n    for(int i = 0; i < v.size(); i+=3){\n      bool eq = true;\n      bool sc = true;\n      REP(j,2){\n        if(v[i+j+1]-v[i+j]!=1)sc = false;\n        if(v[i+j+1]-v[i+j]!=0)eq = false;\n      }\n      if(!eq&&!sc) ok = false;\n    }\n    if(ok) return true;\n  }while(next_permutation(v.begin(), v.end()));\n  return false;\n}\n\nint main(){\n  int n; cin>>n;\n  while(n--){\n    vector<int> v(9);\n    vector<int> r;\n    vector<int> b;\n    vector<int> g;\n    REP(i,9)cin>>v[i];\n    REP(i,9){\n      char c; cin>>c;\n      if(c=='R')r.push_back(v[i]);\n      else if(c=='G')g.push_back(v[i]);\n      else if(c=='B')b.push_back(v[i]);\n    }\n    if(r.size() % 3 || b.size() % 3 || g.size() % 3){\n      cout<<0<<endl;\n      continue;\n    }\n    sort(r.begin(),r.end());\n    sort(g.begin(),g.end());\n    sort(b.begin(),b.end());\n    cout<<(int)(ok(r)&&ok(g)&&ok(b))<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"R\") n[k] += 20\n\t\t\tif(color == \"G\") n[k] += 40;\n\t\t\tif(color == \"B\") n[k] += 60;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[9];\n  bool flag[9];\n  \n  cin >> n;\n  while(n--){\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].second;\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].first;\n\n    sort(rummy, rummy+9);\n\n    /*for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n    cout << endl;*/\n\n    int cnt = 0;\n\n    for(int i = 0 ; i < 9 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nvoid solve()\n{\n\tint T;\n\tcin >> T;\n\tfor(int i = 0; i < T; ++i)\n\t{\n\t\tvector< vector<int> > data(3, 10);\n\t\tvector<int> num(9);\n\t\tfor(int i = 0; i < 9; ++i)\n\t\t{\n\t\t\tcin >> num[i];\n\t\t}\n\t\tvector<char> color(9);\n\t\tfor(int i = 0; i < 9; ++i)\n\t\t{\n\t\t\tcin >> color[i];\n\t\t}\n\t\tfor(int i = 0; i < 9; ++i)\n\t\t{\n\t\t\tif(color[i] == 'R')\n\t\t\t{\n\t\t\t\tdata[0][num[i]]++;\n\t\t\t}\n\t\t\telse if(color[i] == 'G')\n\t\t\t{\n\t\t\t\tdata[1][num[i]]++;\n\t\t\t}\n\t\t\telse if(color[i] == 'B')\n\t\t\t{\n\t\t\t\tdata[2][num[i]]++;\n\t\t\t}\n\t\t}\n\t\tint count = 0;\n\t\tfor(int i = 0; i < 3; ++i)\n\t\t{\n\t\t\tfor(int j = 1; j <= 9; ++j)\n\t\t\t{\n\t\t\t\tif(data[i][j] >= 3)\n\t\t\t\t{\n\t\t\t\t\t++count;\n\t\t\t\t\tdata[i][j] -= 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < 3; ++i)\n\t\t{\n\t\t\tfor(int j = 1; j <= 7; ++j)\n\t\t\t{\n\t\t\t\twhile(data[i][j] >= 1 && data[i][j + 1] >= 1 && data[i][j + 2] >= 1)\n\t\t\t\t{\n\t\t\t\t\t++count;\n\t\t\t\t\tdata[i][j] -= 1;\n\t\t\t\t\tdata[i][j + 1] -= 1;\n\t\t\t\t\tdata[i][j + 2] -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(count == 3)\n\t\t{\n\t\t\tcout << 1 << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <array>\n\n#define RED\t\t0\t//RED \t: 1-9\n#define GREEN\t10\t//GREEN : 11-19\n#define BLUE\t20\t//BLUE\t: 21-29\n\nusing namespace std;\n\nbool eq_3(int a[3]){\n\treturn (a[0]==a[1])&&(a[1]==a[2]);\n}\n\nbool seq_3(int a[3]){\n\treturn (a[0]+1==a[1])&&(a[1]+1==a[2]);\n}\n\nint main(void)\n{\n\tint T;\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tarray<int, 9> card;\n\t\tbool win=true;\n\t\t//カードの番号入力\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> card[j];\n\t\t}\n\t\t//カードの色入力\n\t\tfor(int j=0; j<9; j++){\n\t\t\tchar color;\n\t\t\tcin >> color;\n\t\t\tswitch(color){\n\t\t\t\tcase 'R':\n\t\t\t\t\tcard[j] += RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tcard[j] += GREEN;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tcard[j] += BLUE;\n\t\t\t}\n\t\t}\n\t\t//識別番号でソート\n\t\tsort(card.begin(), card.end());\n\t\t//3つの組をチェック\n\t\tfor(int j=0; j<3; j++){\n\t\t\tif (!(eq_3(card.begin()+3*j) || seq_3(card.begin()+3*j))){\n\t\t\t\twin = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//出力\n\t\tcout << win << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nmain(){int n,i,j,p[9],h[32];char c;for(std::cin>>n;n>0;n--){for(i=0;i<30;i++)h[i]=0;for(i=0;i<9;i++)std::cin>>p[i];for(i=0;i<9;i++){std::cin>>c;if(c==71)p[i]+=10;if(c==66)p[i]+=20;}for(i=0;i<9;i++)h[p[i]]++;for(i=0;i<30;i++)while(h[i]%3)for(j=0;j<3;j++)h[i+j]--;for(i=0;i<30&&h[i]>=0;i++);std::cout<<i-30?0:1<<\"\\n\";}}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nbool check(int a, int b, int c){\n    return (c-b==1 && b-a==1) || (a==b && b==c);\n}\n\nint main(){\n    int t;\n    cin >> t;\n\n    while(t-- > 0){\n        int a[9];\n        for(int i = 0; i < 9; i++)  cin >> a[i];\n        char x;\n        for(int i = 0; i < 9; i++){\n            cin >> x;\n            if(x == 'G')    a[i] += 30;\n            if(x == 'B')    a[i] += 60;\n        }\n        sort(a, a+9);\n        \n        bool judge = true;\n        for(int i = 0; i < 3; i++)  judge &= check(a[3*i], a[3*i+1], a[3*i+2]);\n\n        cout << judge << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\ntypedef pair<char,int> P;\n\nint main(){\n  int n;\n  cin >> n;\n  while(n--){\n    P p[9];\n    bool f = true;\n    for(int i=0;i<9;i++) cin >> p[i].second;\n    for(int i=0;i<9;i++) cin >> p[i].first;\n    sort(p,p+9);\n    for(int i=0;i<3;i++){\n      bool f2 = false;\n      for(int j=0;j<2;j++){\n        if(p[i*3+j].first != p[i*3+j+1].first) f = false;\n        if(p[i*3+j].second != p[i*3+j+1].second) f2 = true;\n      }\n      if(f2) for(int j=0;j<2;j++) if(p[i*3+j].second+1 != p[i*3+j+1].second) f = false;\n      if(!f) break;\n    }\n    cout << f << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Cd{\n\tint n;\n\tchar w;\n\tbool f;\n};\n\nbool comp(const Cd& c1, const Cd& c2)\n{\n\treturn c1.n < c2.n;\n}\n\nbool func(vector<Cd> vec)\n{\n\tint l = vec.size();\n\tbool f = true;\n\tif(l == 0){\n\t\treturn true;\n\t} else if(l%3 != 0){\n\t\treturn false;\n\t}\n\tsort(vec.begin(), vec.end(), comp);\n\t\n\tif(vec[0].n == vec[1].n && vec[0].n == vec[2].n){\n\t\tvec[0].f = vec[1].f = vec[2].f = false;\n\t}\n\tif(l > 3){\n\t\tif(vec[l-1].n == vec[l-2].n && vec[l-1].n == vec[l-3].n){\n\t\t\tvec[l-1].f = vec[l-2].f = vec[l-3].f = false;\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < l; i++){\n\t\tif(vec[i].f){\n\t\t\tvec[i].f = false;\n\t\t\tint c = 1;\n\t\t\tfor(int j = i+1; j < l; j++){\n\t\t\t\tif(vec[i].n+c == vec[j].n && vec[j].f){\n\t\t\t\t\tvec[j].f = false;\n\t\t\t\t\tc++;\n\t\t\t\t\tif(c == 3){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c == 1){\n\t\t\t\tfor(int j = i+1; j < l; j++){\n\t\t\t\t\tif(vec[i].n == vec[j].n && vec[j].f){\n\t\t\t\t\t\tvec[j].f = false;\n\t\t\t\t\t\tc++;\n\t\t\t\t\t\tif(c == 3){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c < 3){\n\t\t\t\tf = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nint main()\n{\n\tint n;\n\t\n\twhile(cin>>n && n){\n\t\tint a[10];\n\t\tCd c;\n\t\t\n\t\twhile(n--){\n\t\t\tvector<Cd> g, r, b;\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tcin >> a[i];\n\t\t\t}\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tcin >> c.w;\n\t\t\t\tc.n = a[i];\n\t\t\t\tc.f = true;\n\t\t\t\tif(c.w == 'R'){\n\t\t\t\t\tr.push_back(c);\n\t\t\t\t} else if(c.w == 'B'){\n\t\t\t\t\tb.push_back(c);\n\t\t\t\t} else {\n\t\t\t\t\tg.push_back(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(func(r) && func(g) && func(b)){\n\t\t\t\tcout << 1 << endl;\n\t\t\t} else {\n\t\t\t\tcout << 0 << endl;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nint main()\n{\n    int n = 0;\n    int ans = 0;\n    std::cin >> n;\n    std::vector<int> num(9);\n    std::string color;\n\n    for (int i = 0; i < n; i++) {\n        ans = 0;\n        for (int j = 0; j < 9; j++) {\n            std::cin >> num.at(j);\n        }\n        for (int k = 0; k < 9; k++) {\n            std::cin >> color;\n            if (color == \"R\") {\n                num.at(k) += 10;\n            } else if (color == \"G\") {\n                num.at(k) += 20;\n            } else {\n                num.at(k) += 30;\n            }\n        }\n        std::sort(num.begin(), num.end());\n        for (size_t l = 0; l < 9; l += 3) {\n            if (num.at(l) == num.at(l + 1) && num.at(l) == num.at(l + 2)) {\n                ans++;\n            } else if (num.at(l) + 1 == num.at(l + 1) && num.at(l) + 2 == num.at(l + 2)) {\n                ans++;\n            } else {\n\n                break;\n            }\n        }\n        if (ans == 3) {\n            std::cout << 1 << '\\n';\n            ans = 0;\n        } else {\n            std::cout << 0 << '\\n';\n        }\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\ntypedef pair <int,string> P;\n#define num first\n#define col second\nint  c[3][10];\nP card[9];\n\nbool check2(vector <P> N) {\n  int cnt[3][10] = {};\n  for(int i=0;i<N.size();i++) \n    if(N[i].col == \"R\") cnt[0][N[i].num]++;\n    else if(N[i].col == \"G\") cnt[1][N[i].num]++;\n    else cnt[2][N[i].num]++;\n\n  for(int i=0;i<3;i++)\n    for(int j=1;j<=9;j++)\n      if(cnt[i][j] < 0) return false; \n      else if(cnt[i][j] > 0) {\n\tif(j >= 8) return false;\n\tcnt[i][j+1] -= cnt[i][j];\n\tcnt[i][j+2] -= cnt[i][j];\n\tcnt[i][j] = 0;\n      }\n  return true;\n}\n\nbool check(){\n  vector <P> flg;\n  for(int i=0;i<3;i++)\n    for(int j=0;j<=9;j++) \n      if(c[i][j] >=3){\n\tif(i == 0)flg.push_back(P(j,\"R\")),flg.push_back(P(j,\"R\")),flg.push_back(P(j,\"R\"));\n\telse if(i == 1) flg.push_back(P(j,\"G\")),flg.push_back(P(j,\"G\")),flg.push_back(P(j,\"G\"));\n\telse flg.push_back(P(j,\"B\")),flg.push_back(P(j,\"B\")),flg.push_back(P(j,\"B\"));\n      }\n\n  for(int i=0;i<(1<<flg.size());i++) {\n    vector <P> t;\n    int ima = 0;\n    for(int j=0;j<9;j++) {\n      if((i&1) != 0 && card[j].num == flg[ima].num && card[j].col == flg[ima].col){\n\tima++;\n\tcontinue;\n      }\n      t.push_back(card[j]);\n    }\n    if(check2(t) == true) return true;\n  } \n  return false;\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  for(int q=0;q<n;q++) {\n    for(int i=0;i<9;i++) cin >> card[i].num;\n    for(int i=0;i<9;i++) cin >> card[i].col;\n    for(int i=0;i<3;i++)\n      for(int j=0;j<=9;j++) c[i][j] = 0;\n\n    for(int i=0;i<9;i++) \n      if(card[i].col == \"R\") c[0][card[i].num]++;\n      else if(card[i].col == \"G\") c[1][card[i].num]++;\n      else c[2][card[i].num]++;\n    cout << check()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\ntypedef struct{\n\tint num;\n\tchar color;\n}CARD;\n\nint main(){\n\tint n;\n\tfor(cin>>n;n>0;n--){\n\t\tint flag=1;\n\t\tint card[3][10]={0};\n\t\tCARD tmp[9];\n\t\tfor(int i=0;i<9;i++)cin>>tmp[i].num;\n\t\tfor(int i=0;i<9;i++)cin>>tmp[i].color;\n\t\tfor(int i=0;i<9;i++){\n\t\t\t//(tmp[i].color=='R'?0:(tmp[i].color=='G'?1:2))\n\t\t\tcard[(tmp[i].color=='R'?0:(tmp[i].color=='G'?1:2))][0]++;\n\t\t\tcard[(tmp[i].color=='R'?0:(tmp[i].color=='G'?1:2))][tmp[i].num]++;\n\t\t}\n\t\t\n\t\t//for(int i=0;i<3;i++)for(int j=0;j<10;j++)cout<<card[i][j]<<(j==9?\"\\n\":\" \");\n\t\tfor(int i=0;i<3;i++)if(card[i][0]%3)flag=0;\n\t\t\n\t\tfor(int i=0;i<3&&flag;i++){\n\t\t\tfor(int j=1;j<=9&&flag;j++){\n\t\t\t\tif(card[i][j]<0)flag=0;\n\t\t\t\telse if(card[i][j]==1){\n\t\t\t\t\tif(j<=7)for(int k=0;k<3;k++)card[i][j+k]-=1;\n\t\t\t\t\telse flag=0;\n\t\t\t\t}\n\t\t\t\telse if(card[i][j]==2){\n\t\t\t\t\tif(j<=7)for(int k=0;k<3;k++)card[i][j+k]-=2;\n\t\t\t\t\telse flag=0;\n\t\t\t\t}\n\t\t\t\telse if(card[i][j]==3)card[i][j]-=3;\n\t\t\t\telse if(card[i][j]==4){\n\t\t\t\t\tcard[i][j]-=3;\n\t\t\t\t\tif(j<=7)for(int k=0;k<3;k++)card[i][j+k]-=1;\n\t\t\t\t\telse flag=0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout<<(flag?1:0)<<endl;\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint T, card[16];\nstring color[16];\nint win();\nbool is_all_good_set();\nbool is_good_set(int a,int b, int c);\nbool is_same_number(int a, int b,int c);\nbool is_sequence(int a, int b , int c);\nbool count_color();\n\nint main(){\n\tcin >> T;\n\tfor(int t = 0; t < T; ++t){\n\t\tfor(int i = 0; i < 9; ++i){\n\t\t\tcin >> card[i];\n\t\t\t//cout << card[i];\n\t\t}\n\t\tfor(int i = 0; i < 9; ++i){\n\t\t\tcin >> color[i];\n\t\t\t//cout << color;\n\t\t}\n\t\t//cout << count_color();\n\t\tcout << win();\n\t\tcout << endl;\n\t}\n}\nbool count_color(){\n\tvector<string> v(color, color+9);\n\tint countR = count(v.begin(),v.end(), \"R\");\n\tint countG = count(v.begin(),v.end(), \"G\");\n\tint countB = count(v.begin(),v.end(), \"B\");\n\t\n\tif((countR % 3==0)&&(countG%3==0)&&(countB%3==0)) return true;\n\telse return false;\n}\nint win() {\n\tsort(card, card+9);\n\tsort(color, color+9);\n\tdo {\n\t\tif(is_all_good_set()){\n\t\t\tdo {\n\t\t\t\tif(count_color()) return 1;\n\t\t\t} while(next_permutation(color,color+9));\n\t\t}\n\t} while(next_permutation(card,card+9));\n\treturn 0;\n\t\n}\nbool is_all_good_set(){\n\treturn ((is_good_set(card[0],card[1],card[2])) && (is_good_set(card[3],card[4],card[5])) && (is_good_set(card[6],card[7],card[8])));\n}\nbool is_good_set(int a, int b ,int c){\n\treturn is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_same_number(int a,int b,int c){\n\tif(a== b && a == c) return true;\n\telse return false;\n}\nbool is_sequence(int a, int b, int c) {\n\tif(a+2 == b+1 && a+2 == c) return true;\n\telse return false;\n}\n/*\n//サンプルmain\nint main() {\n\t// is same number のテスト\n\tcout << is_same_number(3, 4, 5) << endl; // 偽 \n\tcout << is_same_number(3, 3, 3) << endl; // 真 \n\t// is sequence のテスト\n\tcout << is_sequence(3, 4, 5) << endl; // 真 \n\tcout << is_sequence(3, 3, 3) << endl; // 偽\n\t// is good set のテスト\n\tcout << is_good_set(3, 4, 5) << endl; // 真 \n\tcout << is_good_set(3, 3, 3) << endl; // 真 \n\tcout << is_good_set(3, 3, 30) << endl; // 偽\n\tcout << is_good_set(5, 4, 3) << endl; // 偽\n}\n*/"
  },
  {
    "language": "C++",
    "code": "\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntemplate<class T> inline bool amax (T &a, const T &b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool amin (T &a, const T &b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T> ostream& operator << (ostream &os, const vector<T> &v) { os << \"[\"; for (typename vector<T>::const_iterator it = v.begin(); it != v.end(); it++) { os << (it != v.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class T> ostream& operator << (ostream &os, const set<T> &s) { os << \"[\"; for (typename set<T>::const_iterator it = s.begin(); it != s.end(); it++) { os << (it != s.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class Key, class Val> ostream& operator << (ostream &os, const map<Key, Val> &m) { os << \"{\"; for (typename map<Key, Val>::const_iterator it = m.begin(); it != m.end(); it++) { os << (it != m.begin() ? \", \" : \"\") << it->first << \":\" << it->second; } os << \"}\"; return os; }\ntemplate<class T, class S> ostream& operator << (ostream &os, const pair<T, S> &p) { os << \"(\" << p.first << \", \" << p.second << \")\"; return os; }\ntemplate <class T> istream& operator >> (istream &is, vector<T> &v) { for (size_t i = 0; i < v.size(); i++) is >> v[i]; return is; }\ntemplate <class Target, class Source> inline Target lexical_cast (const Source &s) { Target t; stringstream ss; ss << s; ss >> t; return t; }\n\n//> v < ^ (clock wise)\nint dx[] = {1,0,-1,0};\nint dy[] = {0,1,0,-1};\nconst int INFI = 1<<28;\nconst long long int INFL = 1LL<<60;\nconst double INFD = 1e+300;\nconst float INFF = 1e+100;\nconst double EPS = 1e-8;\nconst long long int MOD = 1000000007;\n\nint solve ();\nint main () {\n    cout.setf(ios::fixed); cout.precision(10);\n    ios_base::sync_with_stdio(false);\n    solve();\n    return 0;\n}\n\nint solve () {\n    int T;\n    cin >> T;\n    while (T--) {\n        int table[27];\n        table['R'-'A'] = 0;\n        table['B'-'A'] = 1;\n        table['G'-'A'] = 2;\n        vector<pair<int,char>> card(9);\n        for (int i = 0; i < 9; i++) cin >> card[i].first;\n        for (int i = 0; i < 9; i++) cin >> card[i].second;\n        int exist[3][9] = {0};\n        for (int i = 0; i < 9; i++) {\n            int &a = exist[table[card[i].second-'A']][card[i].first];\n            a = (a+1)%3;\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 7; j++) {\n                if (exist[i][j] && exist[i][j+1] && exist[i][j+2]) {\n                    exist[i][j]--;\n                    exist[i][j+1]--;\n                    exist[i][j+2]--;\n                }\n            }\n        }\n        bool ng = false;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 9; j++) {\n                ng |= exist[i][j];\n            }\n        }\n        cout << !ng << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n\nusing namespace std;\nint T;\nint card[8];\nchar color;\nbool judge;\n\nint is_win();\nbool is_all_good_set();\nbool is_good_set(int, int, int);\nbool is_same_number(int,int, int);\nbool is_sequence(int, int, int);\n\nint main(){\n  while(cin >> T){\n    \n\n    for (int i = 0; i < 9; ++i){\n      cin >> card[i];      \n    }\n\n    for (int i = 0; i < 9; ++i){\n      cin >> color;\n      if(color == 'B') card[i] += 10;\n      else if (color == 'G') card[i] += 20;\n    }\n\n    cout << is_win() << endl;\n\n  }\n\nreturn 0;\n\n}\n\nint is_win(){\n\n  do{\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+8));\n\n  return 0;\n}\n\nbool is_all_good_set(){\n\n  int judge;\n  for (int i = 0; i < 3; ++i)\n  {\n    judge += is_good_set(card[3*i], card[3*i+ 1], card[3*i + 2]);\n  }\n\n  if (judge == 3) return true;\n  else return false;\n}\n\n\nbool is_good_set(int a, int b, int c){\n\n   if(is_same_number(a,b,c) ||  is_sequence(a,b,c) ) return true;\n   else return false;\n\n}\n\nbool is_same_number(int a, int b, int c){\n\n  if(a == b == c) return true;\n  else return false;\n\n} \n\nbool is_sequence(int a, int b, int c){\n\n  if( a + 2 == b + 1 == c ) return true;\n  else return false ;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) (r).begin(),(r).end()\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing dict = map<string,int>;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\ntemplate<typename T>\nvoid Unique(vector<T> &v){\n  sort(all(v));\n  v.erase(unique(all(v)),v.end());\n}\ntemplate<typename T>\nll FindErase(vector<T> &v,T tar){\n  ll cnt = 0;\n  for(auto it = v.begin(); it != v.end();){\n    if(*it == tar){\n      it = v.erase(it);\n      ++cnt;\n    }\n    else{\n      ++it;\n    }\n  }\n  return cnt;\n}\n\ntemplate<typename T>\nbool SuffixErase(vector<T> &v,size_t suf){\n  if(suf > v.size()) return false;\n  for(auto it = v.begin(); it != v.end();){\n    if(distance(v.begin(),it) == suf){\n      v.erase(it);\n      return true;\n    }\n    else{\n      ++it;\n    }\n  }\n  return false;\n}\n\ntemplate<typename T>\nT ston(string& str, T n){\n  istringstream sin(str) ;\n  T num ;\n  sin >> num ;\n  return num ;\n}\n\ntemplate<typename T>\nbool check(T a,T b,T c){\n  if(a.se != b.se || b.se != c.se){\n    return false;\n  }\n  if(a.fi +1 == b.fi && a.fi +2 == c.fi){\n    return true;\n  }\n  else if(a.fi == b.fi && b.fi == c.fi) return true;\n  return false;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  ll n;\n  cin >> n;\n  rep(i,n){\n    vector<pair<ll,char>> v(9);\n    rep(j,9){\n      cin >> v[j].fi;\n    }\n    rep(j,9){\n      cin >> v[j].se;\n    }\n    sort(all(v));\n    bool f = 0;\n    do{\n      if(check(v[0],v[1],v[2]) && check(v[3],v[4],v[5]) && check(v[6],v[7],v[8])){\n        cout << 1 << endl;\n        f = 1;\n        break;\n      }\n    }while(next_permutation(all(v)));\n    if(!f)\n      cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        int nums[9];\n        char colors[10];\n        for (int i = 0; i < 9; i++) {\n            cin >> nums[i];\n        }\n        for (int i = 0; i < 9; i++) {\n            cin >> colors[i];\n        }\n        int cards[3][9] = {};\n        int colorNum[3] = {};\n        for (int i = 0; i < 9; i++) {\n            int color;\n            switch (colors[i]) {\n            case 'R':\n                color = 0;\n                colorNum[0]++;\n                break;\n            case 'G':\n                color = 1;\n                colorNum[1]++;\n                break;\n            case 'B':\n                color = 2;\n                colorNum[2]++;\n                break;\n            default:\n                break;\n            }\n            cards[color][nums[i]]++;\n        }\n        if (colorNum[0] % 3 != 0 || colorNum[1] % 3 != 0 || colorNum[2] % 3 != 0) {\n            cout << 0 << endl;\n            continue;\n        }\n        int result = 1;\n        for (int i = 0; i < 3; i++) {\n            int c, n;\n            for (int j = 0; j < 3; j++) {\n                for (int k = 0; k < 9; k++) {\n                    if (cards[j][k] > 0) {\n                        c = j;\n                        n = k;\n                        goto endSearch;\n                    }\n                }\n            }\n        endSearch:\n            if (cards[c][n] >= 3) {\n                cards[c][n] -= 3;\n                break;\n            }\n            if (n > 7\n                || cards[c][n] <= 0 || cards[c][n + 1] <= 0 || cards[c][n + 2] <= 0) {\n                result = 0;\n                break;\n            }\n            for (int j = 0; j < 3; j++) {\n                cards[c][n + j]--;\n            }\n        }\n        cout << result << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 20;\n\t\t\tif(color == \"B\") n[k] += 40;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tint num[9], red[10] = { 0 }, green[10] = { 0 }, blue[10] = { 0 };\n\t\tfor(int i = 0; i < 9; ++i){ cin >> num[i]; }\n\t\tfor(int i = 0; i < 9; ++i){\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\tif(str == \"R\"){\n\t\t\t\t++red[num[i]];\n\t\t\t}else if(str == \"G\"){\n\t\t\t\t++green[num[i]];\n\t\t\t}else if(str == \"B\"){\n\t\t\t\t++blue[num[i]];\n\t\t\t}\n\t\t}\n\t\tint answer = 1;\n\t\tfor(int i = 1; i <= 7; ++i){\n\t\t\twhile(red[i] > 0 && red[i + 1] > 0 && red[i + 2] > 0){\n\t\t\t\t--red[i]; --red[i + 1]; --red[i + 2];\n\t\t\t}\n\t\t\twhile(green[i] > 0 && green[i + 1] > 0 && green[i + 2] > 0){\n\t\t\t\t--green[i]; --green[i + 1]; --green[i + 2];\n\t\t\t}\n\t\t\twhile(blue[i] > 0 && blue[i + 1] > 0 && blue[i + 2] > 0){\n\t\t\t\t--blue[i]; --blue[i + 1]; --blue[i + 2];\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1; i <= 9; ++i){\n\t\t\tif(red[i] % 3 != 0){ answer = 0; break; }\n\t\t\tif(green[i] % 3 != 0){ answer = 0; break; }\n\t\t\tif(blue[i] % 3 != 0){ answer = 0; break; }\n\t\t}\n\t\tcout << answer << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <cassert>\nusing namespace std;\n\n// value, color\nusing Card = pair<int, char>;\n\nconst int S = 9;\nbool ansFlag = true;\n\nbool check(vector< Card > cards) {\n  char col = cards[0].second;\n\n  // check (color)\n  for(int k=0; k<3; k++) {\n    if(cards[k].second != col) {\n      return false;\n    }\n  }\n\n  // check (number)\n  bool ok1 = true, ok2 = true;\n  sort(cards.begin(), cards.end());\n  int val = cards[0].first;\n\n  // same number\n  for(int k=0; k<3; k++) {\n    if(cards[k].first != val) {\n      ok1 = false;\n    }\n  }\n\n  // stair\n  for(int k=1; k<3; k++) {\n    // printf(\"val = %d, cur = %d\\n\", val, cards[k].first);\n    if(cards[k].first != val + 1) {\n      ok2 = false;\n    }\n    val = cards[k].first;\n  }\n\n  return ok1 || ok2;\n}\n\nvoid solve(vector< Card > cards, int iter, vector<int> checked) {\n  /*\n  printf(\"iter = %d:\", iter);\n  for(int i=0; i<S; i++) {\n    printf(\" %d\", checked[i]);\n  }\n  printf(\"\\n\");\n  */\n\n  if(iter == 3) {\n    ansFlag = true;\n    return;\n  }\n  for(int i=0; i<9; i++) {\n    if(checked[i]) continue;\n    for(int j=i+1; j<9; j++) {\n      if(checked[j]) continue;\n      for(int k=j+1; k<9; k++) {\n        if(checked[k]) continue;\n        assert(i != j && j != k && k != i);\n        if(check(vector< Card >{cards[i], cards[j], cards[k]})) {\n          checked[i] = checked[j] = checked[k] = true;\n          solve(cards, iter+1, checked);\n          checked[i] = checked[j] = checked[k] = false;\n        }\n      }\n    }\n  }\n}\n\nint main() {\n  int T; cin >> T;\n  while(T--) {\n    vector<int> vals(S);\n    vector<char> chrs(S);\n\n    vector< Card > cards(S);\n    for(int i=0; i<S; i++) cin >> vals[i];\n    for(int i=0; i<S; i++) cin >> chrs[i];\n    for(int i=0; i<S; i++) cards[i] = make_pair(vals[i], chrs[i]);\n\n    vector<int> checked(S);\n    ansFlag = false;\n    solve(cards, 0, checked);\n\n    cout << (ansFlag ? 1 : 0) << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<functional>\n#include<utility>\nusing namespace std;\n\n\npair<char,int> a[9];\n\n\nbool f(){\n\tchar c[]=\"RGB\";\n\tint f[3][12]={};\n\tfor(int i=0;i<9;i++)\n\t\tf[find(c,c+3,a[i].first)-c][a[i].second]++;\n\tfor(int i=0;i<3;i++){\n\t\tfor(int j=1;j<10;j++){\n\t\t\tf[i][j]%=3;\n\t\t\tfor(int k=2;k>=0;k--){\n\t\t\t\tf[i][j+k]-=f[i][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn f[3]==find_if(f[0],f[3],bind1st(not_equal_to<int>(),0));\n}\n\n\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin>>a[i].second;\n\t\t}\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin>>a[i].first;\n\t\t}\n\t\tcout<<f()<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//33\n#include<iostream>\n#include<algorithm>\n#include<vector>\n\nusing namespace std;\n\nint main(){\n  int t;\n  cin>>t;\n  while(t--){\n    int r[9];\n    char s[9];\n    for(int i=0;i<9;i++){\n      cin>>r[i];\n    }\n    for(int i=0;i<9;i++){\n      cin>>s[i];\n    }\n    bool f=false;\n    int c[]={0,0,0,1,1,1,2,2,2};\n    do{\n      vector<int> p[3];\n      for(int i=0;i<9;i++){\n\tp[c[i]].push_back(i);\n      }\n      int i;\n      for(i=0;i<3;i++){\n\tif(!s[p[i][0]]==s[p[i][1]]||s[p[i][0]]!=s[p[i][2]])break;\n\tif(r[p[i][0]]==r[p[i][1]]&&r[p[i][0]]==r[p[i][2]])continue;\n\tint rs=1<<r[p[i][0]]|1<<r[p[i][1]]|1<<r[p[i][2]];\n\tint rl=rs&~(rs-1);\n\tif((rs&rl<<1)&&(rs&rl<<2))continue;\n\tbreak;\n      }\n      f|=!(i<3);\n    }while(!f&&next_permutation(c,c+9));\n    cout<<f<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n  int n;\n  cin>>n;\n  int cards[9];\n  char color;\n  int num[3][9];\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++)\n      for(int k=0;k<9;k++)num[j][k]=0;\n    for(int j=0;j<9;j++) cin>>cards[j];\n    for(int j=0;j<9;j++){\n      cin>>color;\n      if(color=='R'){\n\tnum[0][cards[j]]++;\n      }else if(color=='G'){\n\tnum[1][cards[j]]++;\n      }else{\n\tnum[2][cards[j]]++;\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<7;j++){\n\tif(num[k][j]>0 && num[k][j+1]>0 && num[k][j+2]>0){\n\t  num[k][j]--;num[k][j+1]--;num[k][j+2]--;\n\t}\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n\tif(num[k][j]>=3)num[k][j]-=3;\n      }\n    }\n    bool ans=true;\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n\t//cout << num[k][j] << \" \" ;\n\tif(num[k][j]!=0){\n\t  ans=false;\n\t  break;\n\t}\n      }\n      //cout << endl;\n    }\n    if(ans==true) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define each(itr,c) for(__typeof(c.begin()) itr=c.begin(); itr!=c.end(); ++itr)\n#define all(x) (x).begin(),(x).end()\n#define pb push_back\n#define fi first\n#define se second\n\nint main()\n{\n    int T;\n    scanf(\" %d\", &T);\n    while(T--)\n    {\n        vector<int> n(9);\n        vector<char> c(9);\n\n        rep(i,9) scanf(\" %d\", &n[i]);\n        rep(i,9) scanf(\" %c\", &c[i]);\n\n        vector<int> x[3];\n        rep(i,9)\n        {\n            if(c[i]=='R') x[0].pb(n[i]);\n            if(c[i]=='G') x[1].pb(n[i]);\n            if(c[i]=='B') x[2].pb(n[i]);\n        }\n        rep(i,3) sort(all(x[i]));\n\n        int ans=1;\n\n        rep(i,3)\n        {\n            if(x[i].size()%3!=0) ans=0;\n        }\n\n        if(ans)\n        {\n            rep(i,3)\n            {\n                if(x[i].size()==0) continue;\n\n                int ct[10]={0};\n                rep(j,x[i].size()) ct[x[i][j]]++;\n\n                int now=1;\n                while(ct[now]==0) ++now;\n\n                rep(j,x[i].size()/3)\n                {\n                    if(ct[now]<3)\n                    {\n                        if(now<=7 && ct[now+1]>0 && ct[now+2]>0)\n                        {\n                            --ct[now];\n                            --ct[now+1];\n                            --ct[now+2];\n                        }\n                        else\n                        {\n                            ans=0;\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        ct[now]-=3;\n                    }\n\n                    while(ct[now]==0) ++now;\n                }\n\n                if(ans==0) break;\n            }\n        }\n\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<deque>\n#include<vector>\n#include<map>\nusing namespace std;\n\n\nint search(){\n\n\n}\n\n\nint main(){\n  int T;\n  deque<int> R,B,G;\n  int inx[10];\n  char iny;\n  map<int,int> Ri,Bi,Gi;\n\n\n\n  cin >> T;\n  while(T-- > 0){\n    R.clear();B.clear();G.clear();\n    Ri.clear();Bi.clear();Gi.clear();\n    for(int i=0;i<9;i++){\n      cin >> inx[i];\n    }\n    for(int j=0;j<9;j++){\n      cin >> iny;\n      if(iny == 'R'){\n\tR.push_back(inx[j]);\n\tRi[inx[j]]++;\n      }\n      else if(iny == 'B'){\nB.push_back(inx[j]);\n Bi[inx[j]]++;\n      }\n      else if(iny == 'G'){\nG.push_back(inx[j]);\n Gi[inx[j]]++;\n      }\n    }\n\n    sort(R.begin(),R.end());\n    sort(B.begin(),B.end());\n    sort(G.begin(),G.end());\n\n    int tp;\n    for(int i=0;i<3;i++){\n      tp = R.front();\n      if((Ri[tp+1]>0 && Ri[tp+2]>0)){\n\tR.pop_front();\n\tdeque<int>::iterator Rit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+1 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\twhile(Rit != R.end()){\n\t  if(tp+2 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRi.clear();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n      else if(Ri[tp] >= 3){\n\tR.pop_front();R.pop_front();R.pop_front();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n\n    }\n\n\n for(int i=0;i<3;i++){\n      tp = B.front();\n      if((Bi[tp+1]>0 && Bi[tp+2]>0)){\n\tB.pop_front();\n\tdeque<int>::iterator Bit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+1 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\twhile(Bit != B.end()){\n\t  if(tp+2 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBi.clear();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n      else if(Bi[tp] >= 3){\n\tB.pop_front();B.pop_front();B.pop_front();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n    }\n\n for(int i=0;i<3;i++){\n      tp = G.front();\n      if((Gi[tp+1]>0 && Gi[tp+2]>0)){\n\tG.pop_front();\n\tdeque<int>::iterator Git = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+1 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\twhile(Git != G.end()){\n\t  if(tp+2 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGi.clear();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n      else if(Gi[tp] >= 3){\n\tG.pop_front();G.pop_front();G.pop_front();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n\n    }\n\n\n\n if(R.empty() && G.empty() && B.empty() )cout << \"1\" << endl;\n else cout << \"0\" << endl;\n\n\n\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint box[9][3],n,s[9];\n\tint sum;\n\tchar c[9];\n\tcin>>n;\n\twhile(n-->0){\n\t\tsum=0;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tbox[i][0]=0;\n\t\t\tbox[i][1]=0;\n\t\t\tbox[i][2]=0;\n\t\t\tcin>>s[i];\n\t\t}\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin>>c[i];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(c[i]=='G'){\n\t\t\t\tbox[s[i]-1][0]++;\n\t\t\t}\n\t\t\telse if(c[i]=='R'){\n\t\t\t\tbox[s[i]-1][1]++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tbox[s[i]-1][2]++;\n\t\t\t}\n\t\t}\n\t\tfor(int j=0;j<3;j++)\n\t\tfor(int i=0;i<9;i++)\n\t\tif(box[i][j]>=3){\n\t\t\t\t\tsum++;\n\t\t\tbox[i][j]-=3;\n\t\t}\n\t\tfor(int j=0;j<3;j++)\n\t\tfor(int i=0;i<7;i++)\n\t\tif(box[i][j]>0&&box[i+1][j]>0&&box[i+2][j]>0){\n\t\t\t\tsum++;\n\t\t\tbox[i][j]--;\n\t\t\tbox[i+1][j]--;\n\t\t\tbox[i+2][j]--;\n\t\t}\n\t\t\n\t\t\t\n\t\t\n\t\tif(sum==3)\n\t\t\tcout<<\"1\"<<endl;\n\t\telse cout<<\"0\"<<endl;\n\t\t\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\ntypedef pair <int,string> P;\n#define num first\n#define col second\nint  c[3][10];\nP card[9];\n\nbool check2(vector <P> N) {\n  int cnt[3][10] = {};\n  for(int i=0;i<N.size();i++) \n    if(N[i].col == \"R\") cnt[0][N[i].num]++;\n    else if(N[i].col == \"G\") cnt[1][N[i].num]++;\n    else cnt[2][N[i].num]++;\n\n  for(int i=0;i<3;i++)\n    for(int j=1;j<=9;j++)\n      if(cnt[i][j] < 0) return false; \n      else if(cnt[i][j] > 0) {\n\tif(j >= 8) return false;\n\tcnt[i][j+1] -= cnt[i][j];\n\tcnt[i][j+2] -= cnt[i][j];\n\tcnt[i][j] = 0;\n      }\n  return true;\n}\n\nbool check(){\n  vector <P> flg;\n  for(int i=0;i<3;i++)\n    for(int j=0;j<=9;j++) \n      if(c[i][j] >=3){\n\tif(i == 0)flg.push_back(P(j,\"R\"));\n\telse if(i == 1) flg.push_back(P(j,\"G\"));\n\telse flg.push_back(P(j,\"B\"));\n      }\n\n  for(int i=0;i<(1<<flg.size());i++) {\n    vector <P> t;\n    for(int j=0;j<9;j++) {\n      if((i&1) != 0 && card[j].num == flg[0].num && card[j].col == flg[0].col) continue;\n      if((i&2) != 0 && card[j].num == flg[1].num && card[j].col == flg[1].col) continue;\n      if((i&4) != 0 && card[j].num == flg[2].num && card[j].col == flg[2].col) continue;\n      t.push_back(card[j]);\n    }\n    if(check2(t) == true) return true;\n  } \n  return false;\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  for(int q=0;q<n;q++) {\n    for(int i=0;i<9;i++) cin >> card[i].num;\n    for(int i=0;i<9;i++) cin >> card[i].col;\n    for(int i=0;i<3;i++)\n      for(int j=0;j<=9;j++) c[i][j] = 0;\n\n    for(int i=0;i<9;i++) \n      if(card[i].col == \"R\") c[0][card[i].num]++;\n      else if(card[i].col == \"G\") c[1][card[i].num]++;\n      else c[2][card[i].num]++;\n    cout << check()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct Point{\n  int n,f;\n  string c;\n};\n\nint main(){\n  int i,j,n,ans,k,t;\n  cin >> n;\n  for(t=0;t<n;t++){\n    Point a[9];\n    for(i=0;i<9;i++) cin >> a[i].n;\n    for(i=0;i<9;i++) cin >> a[i].c;\n    for(i=0;i<9;i++) a[i].f = 0;\n\n    ans = 0;\n    for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\ta[i].f = a[j].f = a[k].f = ++ans;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f != 0)  break;\n\t  }\n\t}\n      }\n    }\n\n   for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n + 1 == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n + 1 == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\ta[i].f = a[j].f = a[k].f = ++ans;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f != 0) break;\n\t  }\n\t}\n      }\n    }\n\n\n    if(ans == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n    //   for(i=0;i<9;i++) cout << a[i].n << a[i].c <<\":\"<< a[i].f << \" \";\n    //cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c) {\n    return ((a == b) && (b == c));\n}\n\nbool is_sequence(int a, int b, int c) {\n    return ((a+2 == b+1) && (b+1 == c));\n}\n\nbool is_good_set(int a, int b, int c) {\n    return (is_same_number(a, b, c) || is_sequence(a, b, c));\n}\n\nbool is_all_good_set() {\n    return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win() {\n    sort(card, card+9);\n    do {\n        if (is_all_good_set()) return 1;\n    } while (next_permutation(card, card+9));\n\n    return 0;\n}\n\nint main() {\n    cin >> T;\n    for (int t = 0; t < T; ++t) {\n        for (int i = 0; i < 9; ++i) {\n            cin >> card[i];\n        }\n        string color;\n        for (int i = 0; i < 9; ++i) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n\n        if (win()) cout << 1 << endl;\n        else cout << 0 << endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  // sort(card,card+10);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == 'G') card[i] += 20;\n        else if (color == 'B') card[i] += 40;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nstruct card{\n  int num;\n  char c;\n  bool operator <(const card &a)const{\n    if(c == a.c){\n      return num < a.num;\n    }\n    return c < a.c;\n  }\n};\n\nint main(){\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    card c[9];\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].num;\n    }\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].c;\n    }\n    sort(c, c + 9);\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].num << \" \";\n    // }\n    // cout << endl;\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].c << \" \";\n    // }\n    // cout << endl;\n    \n    bool flag = 0;\n    do{\n    for(int i = 0; i < 9; i += 3){\n      // cout << \"i:\" << i << endl;\n      // cout << c[i].c << \" \" << c[i + 1].c << endl;\n      if(!(c[i].c   == c[i + 1].c   && c[i + 1].c   == c[i + 2].c))break;\n      if(!(c[i].num == c[i + 1].num && c[i + 1].num == c[i + 2].num) &&\n\t !(c[i].num + 1 == c[i + 1].num && c[i + 1].num + 1 == c[i + 2].num)){\n\tbreak;\n      }\n      if(i == 6){\n\tflag = 1;\n      }\n    }\n    }while(next_permutation(c, c + 9));\n    if(flag)cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef pair<char, int> P;\n\nvector<P> sort_v(vector<P> &v, vector<int> &used, int now){\n  vector<P> res;\n  REP(i, now + 1) REP(j, 9) if(used[j] == i) res.push_back(v[j]);\n  return res;\n}\n\nbool check(vector<P> &vv, vector<int> &used, int now){\n  vector<P> v = sort_v(vv, used, now);\n  for(int i = 0; i + 2 < v.size(); i += 3){\n    if(!(v[i].first == v[i + 1].first && v[i + 1].first == v[i + 2].first)) return 0;\n    if(!(v[i].second == v[i + 1].second && v[i + 1].second == v[i + 2].second) && !(v[i].second == v[i + 1].second - 1 && v[i + 1].second == v[i + 2].second - 1)) return 0;\n  }\n  return true;\n}\n\nbool dfs(vector<P> &v, vector<int> &used, int now){\n  if(now >= 9) return 1;\n  bool res = 0;\n  REP(i, 9){\n    if(used[i] != -1) continue;\n    used[i] = now;\n    if(check(v, used, now)) res = max(res, dfs(v, used, now + 1));\n    used[i] = -1;\n  }\n  return res;\n}\n\nint main() {\n  int T; cin >>T;\n  REP(t, T){\n    vector<P> v(9);\n    REP(i, 9) cin >>v[i].second;\n    REP(i, 9) cin >>v[i].first;\n    vector<int> used(9, -1);\n    cout <<dfs(v, used, 0) <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n#define _all(arg) begin(arg),end(arg)\n\n#define C first\n#define N second\n\ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0; }\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0; }\n\nusing namespace std;\nusing pci=pair<char,int>;\n\nbool checkpair(vector<pci> &cards, int offset) {\n\tif(cards.size()-2<=offset)\n\t\treturn false;\n\trep(i, offset+1, cards.size()) {\n\t\trep(j, i+1, cards.size()) {\n\t\t\tif((cards[offset].N == cards[offset+i].N && cards[offset+i].N == cards[offset+j].N)\n\t\t\t &&(cards[offset].C == cards[offset+i].C && cards[offset+i].C == cards[offset+j].C)) {\n\t\t\t\tcards.erase(cards.begin() + offset);\n\t\t\t\tcards.erase(cards.begin() + i-1);\n\t\t\t\tcards.erase(cards.begin() + j-2);\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nbool checkseq(vector<pci> &cards, int offset) {\n\tif(cards.size()-2<=offset)\n\t\treturn false;\n\trep(i, offset+1, cards.size()) {\n\t\trep(j, i+1, cards.size()) {\n\t\t\tif((cards[offset].N == cards[offset+i].N-1 && cards[offset+i].N == cards[offset+j].N-1)\n\t\t\t &&(cards[offset].C == cards[offset+i].C && cards[offset+i].C == cards[offset+j].C)) {\n\t\t\t\tcards.erase(cards.begin() + offset);\n\t\t\t\tcards.erase(cards.begin() + i-1);\n\t\t\t\tcards.erase(cards.begin() + j-2);\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--) {\n\t\tvector<pci> cards(9);\n\t\trep(i, 9) cin >> cards[i].N;\n\t\trep(i, 9) cin >> cards[i].C;\n\t\tsort(cards.begin(), cards.end());\n\n\t\trep(c, 3) {\n\t\t\trep(i, cards.size()) {\n\t\t\t\tcheckpair(cards, i);\n\t\t\t}\n\t\t\trep(i, cards.size()) {\n\t\t\t\tcheckseq(cards, i);\n\t\t\t}\n\t\t}\n\n\t\tcout << ((cards.size())?\"0\":\"1\") << endl;\n\t}\n        \n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c) {\n  return a==b && b==c;\n}\nbool is_sequence(int a, int b, int c) {\n  return (a+2 == b+1 && b+1 == c); // \n}\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set () {\n  return is_good_set(card[0],card[1],card[2])\n    && is_good_set(card[3],card[4],card[5])\n    && is_good_set(card[6],card[7],card[8]);\n}\nint win() {\n  // Sort the card\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}\n\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b&&b == c)return true;\n\telse return false;\n}\n\nbool is_sequence(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2)return true;\n\telse return false;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2])\n\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo{\n\t\tif (is_all_good_set)return 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\")card[i] += 20;\n\t\t}\n\t\tcout << win() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b && a == c) return true;\n\telse return false;\n}\n\nbool is_sequense(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2) return true;\n\telse return false;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequense(a, b, c);\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2]) \n\t\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo {\n\t\tif (is_all_good_set()) return 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; t++){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\") card[i] += 20;\n//\t\t\tcout << card[i];\n\t\t\tcout << win() << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2 ||\n     x == y+1 && y == z+1 && x == z+2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[9];\n  bool flag[9];\n  \n  cin >> n;\n  while(n--){\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < 9 ; i++){ cin >> rummy[i].second; rummy[i].second*=-1;}\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].first;\n\n    sort(rummy, rummy+9);\n\n    /* for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n    cout << endl;\n    */\n    int cnt = 0;\n\n    for(int i = 0 ; i <= 6 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n#define EPS 1e-9\n#define INF MOD\n#define MOD 1000000007LL\n#define fir first\n#define iss istringstream\n#define sst stringstream\n#define ite iterator\n#define ll long long\n#define mp make_pair\n#define rep(i,n) rep2(i,0,n)\n#define rep2(i,m,n) for(int i=m;i<n;i++)\n#define pi pair<int,int>\n#define pb push_back\n#define sec second\n#define sh(i) (1LL<<i)\n#define sz size()\n#define vi vector<int>\n#define vc vector\n#define vl vector<ll>\n#define vs vector<string>\n\nstruct C{\n\tint n;\n\tchar c;\n\tC(){}\n\tC(int n,int c):n(n),c(c){}\n}c[9];\n\nint T;\n\nbool cmp(C a,C b){return a.n<b.n;}\n\nint f(vc<C> v){\n\tint res=0,l=v.sz;\n\tif(!l)return 1;\n\trep(i,l)rep2(j,i+1,l)rep2(k,j+1,l){\n\t\tif((v[i].n==v[j].n&&v[j].n==v[k].n||v[i].n==v[j].n-1&&v[j].n==v[k].n-1)\n\t\t&&v[i].c==v[j].c&&v[j].c==v[k].c){\n\t\t\tvc<C> w;\n\t\t\trep(ii,l)if(ii!=i&&ii!=j&&ii!=k)w.pb(v[ii]);\n\t\t\tres|=f(w);\n\t\t}\n\t}\n\treturn res;\n}\n\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\trep(i,9)cin>>c[i].n;\n\t\trep(i,9)cin>>c[i].c;\n\t\tsort(c,c+9,cmp);\n\t\tvc<C> v;\n\t\trep(i,9)v.pb(c[i]);\n\t\tcout<<f(v)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "clude <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  // sort(card,card+10);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == \"G\") card[i] += 10;\n        else if (color == \"B\") card[i] += 20;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <array>\n#include <algorithm>\n#include <bitset>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <string>\n#include <set>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\nvector<pair<int, char>> A(9);\nint num,n;\nchar c;\n\nint ans(){\n    for(int i = 0;i < 3;i++){\n        if(A[i*3].first + A[i*3+1].first == A[i*3+2].first*2\n           && A[i*3].second == A[i*3 + 2].second && A[i*3 + 2].second == A[i*3+1].second){\n            A[i*3].first = 0;\n            A[i*3+1].first = 0;\n            A[i*3+2].first = 0;\n        }else{\n            for(int j = i*3;j < 9;j++){\n                if(A[j].first == A[i*3].first+1 && A[j].second == A[i*3].second){\n                    for(int k = j;k < 9;k++){\n                        if(A[k].first == A[j].first + 1 && A[k].second == A[j].second){\n                            A[i*3].first = 0;\n                            A[j].first = 0;\n                            A[k].first = 0;\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n        sort(A.begin(),A.end());\n    }\n//    for(int i = 0;i < 9;i++)cout << A[i].first << \" \";\n//    cout << endl;\n    for(int i = 0;i < 9;i++){\n        if(A[i].first > 0)return 0;\n    }\n    return 1;\n}\n\nint main(){\n    cin >> n;\n    for(int j = 0;j < n;j++){\n        for(int i = 0;i < 9;i++){\n            cin >> A[i].first;\n        }\n        for(int i = 0;i < 9;i++){\n            cin >> A[i].second;\n        }\n        sort(A.begin(),A.end());\n        cout << ans() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\nvector<int> r,g,b;\n\nint n[10];\nchar c[10][2];\n\nbool check(vector<int> v){\n\tint N=v.size();\n\tif(N%3!=0) return false;\n\tint cnt[10];\n\tfor(int i=0;i<10;i++) cnt[i]=0;\n\tfor(int i=0;i<N;i++) cnt[v[i]]++;\n\tfor(int i=1;i<10;i++){\n\t\tif(cnt[i]>=3) cnt[i]-=3;\n\t\tif(i+2<=9){\n\t\t\tint tmp=cnt[i];\n\t\t\tif(cnt[i]<tmp||cnt[i+1]<tmp||cnt[i+2]<tmp) return false;\n\t\t\tcnt[i]-=tmp;\n\t\t\tcnt[i+1]-=tmp;\n\t\t\tcnt[i+2]-=tmp;\n\t\t}\n\t}\n\tfor(int i=0;i<10;i++) if(cnt[i]!=0) return false;\n\treturn true;\n}\n\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\tfor(int datano=0;datano<T;datano++){\n\t\tr.clear();\n\t\tg.clear();\n\t\tb.clear();\n\t\tfor(int i=0;i<9;i++) scanf(\"%d\",n+i);\n\t\tfor(int i=0;i<9;i++) scanf(\"%s\",c[i]);\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(c[i][0]=='R') r.push_back(n[i]);\n\t\t\telse if(c[i][0]=='G') g.push_back(n[i]);\n\t\t\telse b.push_back(n[i]);\n\t\t}\n\t\tsort(r.begin(),r.end());\n\t\tsort(g.begin(),g.end());\n\t\tsort(b.begin(),b.end());\n\t\tbool flg=true;\n\t\tflg&=check(r);\n\t\tflg&=check(g);\n\t\tflg&=check(b);\n\t\tif(flg) printf(\"1\\n\");\n\t\telse printf(\"0\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == \"G\") card[i] += 10;\n        else if (color == \"B\") card[i] += 20;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\n#define MAX_N 128;\n\nbool is_good_set(int, int, int);\nbool is_same_number(int, int, int);\nbool is_sequence(int, int, int);\nbool is_all_good_set();\nint win();\n\nint T, card[16];\n\nbool is_good_set(int a, int b, int c)\n{\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_same_number(int a, int b, int c)\n{\n    return a == b && b == c && c == a;\n}\n\nbool is_sequence(int a, int b, int c)\n{\n    return (a+2) == (b+1) && (b+1) == c && c==(a+2);\n}\n\nbool is_all_good_set()\n{\n    return\n    (\n        is_good_set(card[0], card[1], card[2])\n        && is_good_set(card[3], card[4], card[5])\n        && is_good_set(card[6], card[7], card[8])\n    );\n}\n\nint win()\n{\n    do\n    {\n\n    } while (next_permutation(card,card+9));\n    \n    \n    do\n    {\n        \n        if(is_all_good_set()) { return 1; }\n        \n    } while (next_permutation(card, card+9));\n\n    return 0;\n}\n\nint main()\n{\n    cin >> T;\n    for (int t=0; t<T; ++t)\n    {\n        for (int i=0; i<9; ++i)\n        {\n            cin >> card[i];\n            //cout << card[i];\n        }\n        //cout << endl;\n        \n        string color;\n        for (int i=0; i<9; ++i)\n        {\n            cin >> color;\n            if (color == \"G\") { card[i] += 10; }\n            else if (color == \"B\") { card[i] += 20; }\n            //cout << card[i] << \" \";\n        }\n        //cout << endl;\n        \n        int ans = win();\n        cout << ans << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <functional>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nint main() {\n\tint t;\n\tcin >> t;\n\tfor (int i = 0; i < t; i++) {\n\t\tint data[9];\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> data[j];\n\t\t}\n\t\tpriority_queue< P, vector<P>, greater<P> > pq;\n\t\tchar c;\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> c;\n\t\t\tP p;\n\t\t\tp.second = data[j];\n\t\t\tif (c == 'R') {\n\t\t\t\tp.first = 1;\n\t\t\t} else if (c == 'B') {\n\t\t\t\tp.first = 2;\n\t\t\t} else {\n\t\t\t\tp.first = 3;\n\t\t\t}\n\t\t\tpq.push(p);\n\t\t}\n\t\tbool hantei = true;\n\t\twhile (!pq.empty()) {\n\t\t\tP p1, p2, p3;\n\t\t\tp1 = pq.top();\n\t\t\tpq.pop();\n\t\t\tp2 = pq.top();\n\t\t\tpq.pop();\n\t\t\tp3 = pq.top();\n\t\t\tpq.pop();\n\t\t\tif (p1.first == p2.first && p1.first == p2.first) {\n\t\t\t\tif (p1.second == p2.second && p1.second == p3.second) {\n\t\t\t\t} else if (p1.second+1 == p2.second && p2.second+1 == p3.second) {\n\t\t\t\t} else {\n\t\t\t\t\tP p4, p5, p6;\n\t\t\t\t\tp4 = pq.top();\n\t\t\t\t\tpq.pop();\n\t\t\t\t\tp5 = pq.top();\n\t\t\t\t\tpq.pop();\n\t\t\t\t\tp6 = pq.top();\n\t\t\t\t\tpq.pop();\n\t\t\t\t\tif (p1.second+1 == p3.second && p3.second+1 == p5.second && p2.second+1 == p4.second && p4.second+1 == p6.second) {\n\t\t\t\t\t} else {\n\t\t\t\t\t\thantei = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thantei = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hantei) {\n\t\t\tcout << 1 << endl;\n\t\t} else {\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<deque>\n#include<vector>\n#include<map>\nusing namespace std;\n\n\n\nint main(){\n  int T;\n  deque<int> R,B,G;\n  int inx[10];\n  char iny;\n  map<int,int> Ri,Bi,Gi;\n\n\n\n  cin >> T;\n  while(T-- > 0){\n    R.clear();B.clear();G.clear();\n    Ri.clear();Bi.clear();Gi.clear();\n    for(int i=0;i<9;i++){\n      cin >> inx[i];\n    }\n    for(int j=0;j<9;j++){\n      cin >> iny;\n      if(iny == 'R'){\n\tR.push_back(inx[j]);\n\tRi[inx[j]]++;\n      }\n      else if(iny == 'B'){\n\tB.push_back(inx[j]);\n\tBi[inx[j]]++;\n      }\n      else if(iny == 'G'){\n\tG.push_back(inx[j]);\n\tGi[inx[j]]++;\n      }\n    }\n\n    sort(R.begin(),R.end());\n    sort(B.begin(),B.end());\n    sort(G.begin(),G.end());\n\n    int tp;\n    for(int i=0;i<3;i++){\n      tp = R.front();\n      if((Ri[tp+1]>0 && Ri[tp+2]>0)){\n\tR.pop_front();\n\tdeque<int>::iterator Rit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+1 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+2 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRi.clear();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n      else if(Ri[tp] >= 3){\n\tR.pop_front();R.pop_front();R.pop_front();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n\n    }\n\n\n for(int i=0;i<3;i++){\n      tp = B.front();\n      if((Bi[tp+1]>0 && Bi[tp+2]>0)){\n\tB.pop_front();\n\tdeque<int>::iterator Bit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+1 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+2 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBi.clear();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n      else if(Bi[tp] >= 3){\n\tB.pop_front();B.pop_front();B.pop_front();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n    }\n\n for(int i=0;i<3;i++){\n      tp = G.front();\n      if((Gi[tp+1]>0 && Gi[tp+2]>0)){\n\tG.pop_front();\n\tdeque<int>::iterator Git = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+1 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGit = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+2 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGi.clear();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n      else if(Gi[tp] >= 3){\n\tG.pop_front();G.pop_front();G.pop_front();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n\n    }\n\n\n\n if(R.empty() && G.empty() && B.empty() )cout << \"1\" << endl;\n else cout << \"0\" << endl;\n\n\n\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n\nusing namespace std;\n\nint card[3][20];\n\nbool check(){\n\trep(i, 3){\n\t\trep(j, 10){\n\t\t\twhile(card[i][j] > 0){\n\t\t\t\tif(card[i][j] >= 3) card[i][j] -= 3;\n\t\t\t\telse{\n\t\t\t\t\trep(k, 3){\n\t\t\t\t\t\tcard[i][j+k]--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(card[i][j] < 0) return false;\n\t\t}\n\t}\n\treturn true;\n}\n\nint main(){\n\tint sets;\n\tcin >> sets;\n\twhile(sets--){\n\t\tmemset(card, 0, sizeof(card));\n\t\tint hand[9];\n\t\trep(i, 9) cin >> hand[i];\n\t\trep(i, 9){\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\trep(j, 3){\n\t\t\t\tif(c == \"RGB\"[j]) card[j][hand[i]]++;\n\t\t\t}\n\t\t}\n\t\tcout << check() << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint box1[9][3],box2[9][3],n,s[9];\n\tint sum;\n\tchar c[9];\n\tcin>>n;\n\twhile(n-->0){\n\t\tsum=0;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tbox1[i][0]=0;\n\t\t\tbox1[i][1]=0;\n\t\t\tbox1[i][2]=0;\n\t\t\tbox2[i][0]=0;\n\t\t\tbox2[i][1]=0;\n\t\t\tbox2[i][2]=0;\n\t\t\tcin>>s[i];\n\t\t}\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin>>c[i];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(c[i]=='G'){\n\t\t\t\tbox1[s[i]-1][0]++;\n\t\t\t\tbox2[s[i]-1][0]++;\n\t\t\t}\n\t\t\telse if(c[i]=='R'){\n\t\t\t\tbox1[s[i]-1][1]++;\n\t\t\t\tbox2[s[i]-1][1]++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tbox1[s[i]-1][2]++;\n\t\t\t\tbox2[s[i]-1][2]++;\n\t\t\t}\n\t\t}\n\t\tfor(int j=0;j<3;j++)\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t\tif(box1[i][j]>=3){\n\t\t\t\t\tsum++;\n\t\t\t\t\tbox1[i][j]-=3;\n\t\t\t\t}\n\t\tfor(int j=0;j<3;j++)\n\t\t\tfor(int i=0;i<7;i++)\n\t\t\t\tif(box1[i][j]>0&&box1[i+1][j]>0&&box1[i+2][j]>0){\n\t\t\t\t\tsum++;\n\t\t\t\t\tbox1[i][j]--;\n\t\t\t\t\tbox1[i+1][j]--;\n\t\t\t\t\tbox1[i+2][j]--;\n\t\t\t\t}\n\t\tif(sum==3)\n\t\t\tcout<<\"1\"<<endl;\n\t\telse{\n\t\t\tsum=0;\n\t\t\tfor(int j=0;j<3;j++)\n\t\t\tfor(int i=0;i<7;i++)\n\t\t\t\tif(box2[i][j]>0&&box2[i+1][j]>0&&box2[i+2][j]>0){\n\t\t\t\t\tsum++;\n\t\t\t\t\tbox2[i][j]--;\n\t\t\t\t\tbox2[i+1][j]--;\n\t\t\t\t\tbox2[i+2][j]--;\n\t\t\t\t}\n\t\t\tfor(int j=0;j<3;j++)\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t\tif(box2[i][j]>=3){\n\t\t\t\t\tsum++;\n\t\t\t\t\tbox2[i][j]-=3;\n\t\t\t\t}\n\t\t\tif(sum==3)\n\t\t\tcout<<\"1\"<<endl;\n\t\t\telse cout<<\"0\"<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <bitset>\n#include <string>\n#include <vector>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <functional>\n#include <cctype>\n#include <numeric>\n#include <cassert>\n\nusing namespace std;\n\ntemplate<typename T> ostream& operator<<(ostream& os, const vector<T>& v){\n    os << \"{ \";\n    for (typename vector<T>::const_iterator it = v.begin(); it != v.end(); ++it)\n        os << *it << (it + 1 == v.end() ? \"\" : \", \");\n    os << \" }\";\n    return os;\n}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<string> vs;\ntypedef long long ll;\ntypedef unsigned uint;\ntypedef unsigned long ul;\ntypedef unsigned long long ull;\n\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define loop(i,a,b) for(int i=(a); i<(int)(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define pb push_back\n#define mp make_pair\n\nstring c(9,0);\nvi n(9);\n\nbool ok(vector<pair<int, char>> t){\n    if (t[0].second != t[1].second || t[1].second != t[2].second)\n        return false;\n\n    if (t[0].first == t[1].first && t[1].first == t[2].first)\n        return true;\n\n    sort(all(t));\n    if (t[0].first == t[1].first - 1 && t[1].first == t[2].first - 1)\n        return true;\n    return false;\n}\n\nint solve(){\n    vector<pair<int, char>> v(9);\n    rep(i, 9) v[i] = make_pair(n[i], c[i]);\n    vi g{ 0, 0, 0, 1, 1, 1, 2, 2, 2 };\n    do{\n        vector<vector<pair<int,char>>> tri(3);\n        rep(i, 9) tri[g[i]].push_back(v[i]);\n        if (all_of(all(tri), ok))\n            return 1;\n    } while (next_permutation(all(g)));\n    return 0;\n}\n\nint main(){\n    int k; cin >> k;\n    rep(i, k){\n        rep(j, 9) cin >> n[j];\n        rep(j, 9) cin >> c[j];\n        cout << solve() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "// Rummy\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n  if (a == b && b == c)\n    return true;\n  else\n    return false;\n}\nbool is_sequence(int a,int b,int c){\n  if (a+2 == c && b+1 == c)\n    return true;\n  else\n    return false;\n}\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_all_good_set(){\n  if (is_good_set(card[0],card[1],card[2]))\n    if (is_good_set(card[3],card[4],card[5]))\n      if (is_good_set(card[6],card[7],card[8]))\n        return true;\n  return false;\n}\nint win(){\n  // card ?????????????????? \n  do{\n    if (is_all_good_set()) // ??????card?????????????????????????????¶????????? \n      return 1;\n  } while (next_permutation(card, card+9)); \n  // ??¨???????????????????????????????????????????????¶????????????????????£??? \n  return 0;\n}\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) { \n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n        if (color == \"G\") \n          card[i] += 10;\n        else if (color == \"B\") \n          card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n// ??????????????¨???\n// red:0 , blue:10 , green:20\n// 1-9"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n\nint tx[] = {0,1,0,-1};\nint ty[] = {-1,0,1,0};\n\nstatic const double EPS = 1e-8;\n\nclass Card{\npublic:\n\tstring color;\n\tint num;\n\tbool operator<(Card& c){\n\t\tif(color == c.color){\n\t\t\treturn num < c.num;\n\t\t}\n\t\treturn color < c.color;\n\t}\n};\n\nint main(){\n\tint n;\n\n\n\twhile(~scanf(\"%d\",&n)){\n\n\t\tfor(int idx=0;idx<n;idx++){\n\t\t\tvector<Card> cards;\n\t\t\tint num[10];\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tscanf(\"%d\",&num[j]);\n\t\t\t}\n\n\t\t\tstring str;\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tcin >> str;\n\t\t\t\tCard c;\n\t\t\t\tc.color = str;\n\t\t\t\tc.num = num[j];\n\n\n\t\t\t\tcards.push_back(c);\n\t\t\t}\n\n\t\t\tsort(cards.begin(),cards.end());\n\n\t\t\tbool fail = false;\n\n\t\t\tfor(int i=0;i<9;){\n\t\t\t\tint prev_num = cards[i].num;\n\t\t\t\tstring prev_c = cards[i].color;\n\n\t\t\t\tbool isok = true;\n\t\t\t\t//3つ連続\n\t\t\t\tfor(int j=0;j<2;j++){\t\t\t\n\t\t\t\t\tif(cards[i+j+1].num == prev_num\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\n\t\t\t\t}\n\n\t\t\t\tif(isok) {\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\t//昇順\n\t\t\t\tfor(int j=0;j<2;j++){\n\t\t\t\t\tif(cards[i+j+1].num == prev_num + 1\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\tif(i+6 >= 9){\n\t\t\t\t\tfail = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//七対子\t\t\t\n\t\t\t\tfor(int j=0;j<6;j+=2){\n\t\t\t\t\tif(cards[i+j].color == cards[i+j+1].color\n\t\t\t\t\t\t&& cards[i+j].num == cards[i+j+1].num){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=6;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfail = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprintf(\"%d\\n\",fail ? 0 : 1);\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\nint main(){\n  int tmp,T, n[9],i,j;\n  char c[9];\n  cin >> T;\n  for(int t=0;t<T;t++){\n    int s[9]={};\n    for(i=0;i<9;i++) cin >> n[i];\n    for(i=0;i<9;i++) cin >> c[i];\n\n    for(i=0;i<9;i++){\n      if(s[i]==1) continue;\n      vector<int> flag(7,0);\n      tmp=0;\n      for(j=i+1;j<9;j++){\n        if(s[j]==1) continue;\n          if(flag[0]==flag[1]and flag[0]==flag[2]and flag[0]==flag[3]and flag[0]==flag[4]and flag[0]==flag[5]and flag[0]==flag[6]){\n            if(c[i]==c[j]){\n              if(n[i]==n[j]){\n                tmp = j;\n                flag[0]=1;\n              }else if(n[i]+1==n[j]){\n                tmp = j;\n                flag[1]=1;\n                flag[4]=1;\n              }else if(n[i]+2==n[j]){\n                tmp = j;\n                flag[2]=1;\n              }else if(n[i]-1==n[j]){\n                tmp = j;\n                flag[3]=1;\n                flag[5]=1;\n              }else if(n[i]-2==n[j]){\n                tmp=j;\n                flag[6]=1;\n              }\n            }//ifc\n          //??\\?????????????????´???\n          }else{\n            if(flag[0]==1){\n              if(c[i]==c[j] and n[i]==n[j] and s[j]==0){\n                s[i]=1;\n                s[tmp]=1;\n                s[j]=1;\n                j=9;\n              }}\n            if(flag[1]==1){\n              if(c[i]==c[j] and n[i]+2==n[j] and s[j]==0){\n                s[i]=1;\n                s[tmp]=1;\n                s[j]=1;\n                j=9;\n              }}\n            if(flag[2]==1){\n              if(c[i]==c[j] and n[i]+1==n[j] and s[j]==0){\n                s[i]=1;\n                s[tmp]=1;\n                s[j]=1;\n                j=9;\n            }}\n            if(flag[3]==1){\n              if(c[i]==c[j] and n[i]+1==n[j] and s[j]==0){\n                s[i]=1;\n                s[tmp]=1;\n                s[j]=1;\n                j=9;\n              }}\n            if(flag[4]==1){\n              if(c[i]==c[j] and n[i]-1==n[j] and s[j]==0){\n                s[i]=1;\n               s[tmp]=1;\n                s[j]=1;\n                j=9;\n            }}\n            if(flag[5]==1){\n              if(c[i]==c[j] and n[i]-2==n[j] and s[j]==0){\n                s[i]=1;\n                s[tmp]=1;\n                s[j]=1;\n                j=9;\n            }}\n            if(flag[6]==1){\n              if(c[i]==c[j] and n[i]-1==n[j] and s[j]==0){\n                s[i]=1;\n                s[tmp]=1;\n                s[j]=1;\n                j=9;\n            }}\n          }\n        }//forj\n    }//fori\n    int ok = 1;\n    for(i=0;i<9;i++){\n      if(s[i]==0) ok=0;\n    }\n    if(ok==1){\n      cout << 1 << endl;\n    }else{\n      cout << 0 << endl;\n    }\n  }//fort\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\nint line[3] = {3,6,9};\n\nbool isPair(vector<int> V){\n  if(V.size() && V.size()%3) return false;\n\n  bool ans[2] = {true,true};\n  sort(V.begin(),V.end());\n\n  for(int i = 0; i < 3; i++)\n    for(int j = line[i]-2; j < min(line[i],(int)V.size()); j++)\n      if(V[j] != V[j-1]+1) ans[0] = false;\n\n  int sum[MAX];\n  fill(sum,sum+MAX,0);\n  for(int i = 0; i < V.size(); i++)\n    sum[V[i]]++;\n  \n  for(int i = 0; i < MAX; i++)\n    if(sum[i]%3) ans[1] = false;\n\n  return (ans[0]||ans[1]);\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[9];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_OK_set(){\n  return(is_set(card[0], card[1], card[2])\n\t && is_set(card[3], card[4], card[5])\n\t && is_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  sort(card, card+9);\n  do{\n    if(is_all_OK_set())\n      return 1;\n  }while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n  scanf(\"%d\", &T);\n  for(int t=0; t<T; ++t){\n    for(int i=0; i<9; ++i){\n      scanf(\"%d\", &card[i]);\n    }\n    string color;\n    for(int i=0; i<9; ++i){\n      cin >> color;\n      if(color == \"G\") card[i] += 10;\n      else if(color == \"B\") card[i] += 20;\n    }\n    printf(\"%d\", win());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\nvector<int> r,g,b;\n\nint n[10];\nchar c[10][2];\n\nbool check(vector<int> v){\n\tint N=v.size();\n\tif(N%3!=0) return false;\n\tint cnt[10];\n\tfor(int i=0;i<10;i++) cnt[i]=0;\n\tfor(int i=0;i<N;i++) cnt[v[i]]++;\n\tfor(int i=1;i<10;i++){\n\t\tif(cnt[i]>=3) cnt[i]-=3;\n\t\tif(i+2<=9){\n\t\t\tint tmp=cnt[i];\n\t\t\tcnt[i]-=tmp;\n\t\t\tcnt[i+1]-=tmp;\n\t\t\tcnt[i+2]-=tmp;\n\t\t}\n\t}\n\tfor(int i=0;i<10;i++) if(cnt[i]!=0) return false;\n\treturn true;\n}\n\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\tfor(int datano=0;datano<T;datano++){\n\t\tr.clear();\n\t\tg.clear();\n\t\tb.clear();\n\t\tfor(int i=0;i<9;i++) scanf(\"%d\",n+i);\n\t\tfor(int i=0;i<9;i++) scanf(\"%s\",c[i]);\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(c[i][0]=='R') r.push_back(n[i]);\n\t\t\telse if(c[i][0]=='G') g.push_back(n[i]);\n\t\t\telse b.push_back(n[i]);\n\t\t}\n\t\tsort(r.begin(),r.end());\n\t\tsort(g.begin(),g.end());\n\t\tsort(b.begin(),b.end());\n\t\tbool flg=true;\n\t\tflg&=check(r);\n\t\tflg&=check(g);\n\t\tflg&=check(b);\n\t\tif(flg) printf(\"1\\n\");\n\t\telse printf(\"0\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstring>\nusing namespace std;\n\nint main() {\n    int n; cin >> n;\n    for (int i = 0; i < n; i++) {\n        int R[10], G[10], B[10];\n        memset(R, 0, sizeof(R));\n        memset(G, 0, sizeof(G));\n        memset(B, 0, sizeof(B));\n        int v[9]; char c[9];\n        for (int j = 0; j < 9; j++) cin >> v[j];\n        for (int j = 0; j < 9; j++) cin >> c[j];\n        for (int j = 0; j < 9; j++) {\n            switch (c[j]) {\n                case 'R':\n                    R[v[j]]++;\n                    break;\n                case 'G':\n                    G[v[j]]++;\n                    break;\n                case 'B':\n                    B[v[j]]++;\n                    break;\n            }\n        }\n\n        for (int j = 1; j <= 7; j++) {\n            if (R[j] > 0 && R[j+1] > 0 && R[j+2] > 0) {\n                R[j]--, R[j+1]--, R[j+2]--;\n            }\n        }\n        for (int j = 1; j <= 9; j++) {\n            if (R[j] % 3 == 0) R[j] = 0;\n        }\n        bool r_ok = true;\n        for (int j = 1; j <= 9; j++) {\n            if (R[j] != 0) r_ok = false;\n        }\n\n        for (int j = 1; j <= 7; j++) {\n            if (G[j] > 0 && G[j+1] > 0 && G[j+2] > 0) {\n                G[j]--, G[j+1]--, G[j+2]--;\n            }\n        }\n        for (int j = 1; j <= 9; j++) {\n            if (G[j] % 3 == 0) G[j] = 0;\n        }\n        bool g_ok = true;\n        for (int j = 1; j <= 9; j++) {\n            if (G[j] != 0) g_ok = false;\n        }\n\n        for (int j = 1; j <= 7; j++) {\n            if (B[j] > 0 && B[j+1] > 0 && B[j+2] > 0) {\n                B[j]--, B[j+1]--, B[j+2]--;\n            }\n        }\n        for (int j = 1; j <= 9; j++) {\n            if (B[j] % 3 == 0) B[j] = 0;\n        }\n        bool b_ok = true;\n        for (int j = 1; j <= 9; j++) {\n            if (B[j] != 0) b_ok = false;\n        }\n\n        if (r_ok && g_ok && b_ok) {\n            cout << 1 << endl;\n        } else {\n            cout << 0 << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace Main\n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\nint t, card[9];\n\nbool is_same_number(int a, int b, int c) {\n    if (a == b && b == c) {\n        return true;\n    }\n    return false;\n}\nbool is_sequence(int a, int b, int c) {\n    if (a + 2 == b + 1 && b + 1 == c) {\n        return true;\n    }\n    return false;\n}\nbool is_good_set(int a, int b, int c) {\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set() {\n    return is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5])\n    && is_good_set(card[6], card[7], card[8]);\n}\nint win() {\n    sort(card, card + 9);\n    do {\n        if (is_all_good_set()) {\n            return 1;\n        }\n    } while (next_permutation(card, card + 9));\n    return 0;\n}\nint main() {\n    cin >> t;\n    for (int tt = 0; tt < t; ++tt) {\n        for (int i = 0; i < 9; ++i) {\n            cin >> card[i];\n        }\n        char color;\n        for (int i = 0; i < 9; ++i) {\n            cin >> color;\n            if (color == 'G') {\n                card[i] += 10;\n            } else if (color == 'B') {\n                card[i] += 20;\n            }\n        }\n        cout << win() << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n\n#define NUMBER 10\n#define CARD_NUM 9\n#define COLOR_NUM 3\n\nusing namespace std;\n\nconst char *color = \"RGB\";\n\nbool checkSet(int *card, int num){\n  sort(card,card+num);\n  int numnum[NUMBER] = {0,};\n  for(int i = 0; i < num; ++i){\n    numnum[ card[i] ]++;\n  }\n  for(int i = 0; i < num; ++i){\n    if( numnum[ card[i] ] == 3 ){\n      numnum[ card[i] ] -= 3;\n    }\n  }\n  for(int i = 0; i < NUMBER-2; ++i){\n    if( numnum[ i ] >= 1 && numnum[i+1] >= 1 && numnum[i+2] >= 1 ){\n      numnum[i]--;\n      numnum[i+1]--;\n      numnum[i+2]--;\n    }\n  }\n  for(int i = 0; i < NUMBER; ++i){\n    if( numnum[i] > 0 ) return false;\n  }\n  return true;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; ++i){\n    bool win = true;\n    int ccardnum[COLOR_NUM]={0,};\n    int card[CARD_NUM];\n    int ccard[COLOR_NUM][CARD_NUM];\n    char cardcolor[CARD_NUM];\n    for(int j = 0; j < CARD_NUM; ++j){\n      cin >> card[j];\n    }\n    for(int j = 0; j < CARD_NUM; ++j){\n      cin >> cardcolor[j];\n    }\n    for(int k = 0; k < COLOR_NUM; ++k){\n      for(int j = 0; j < CARD_NUM; ++j){\n\tif( cardcolor[j] == color[k] ){\n\t  ccard[k][ccardnum[k]] = card[j];\n\t  ccardnum[k]++;\n\t}\n      }\n    }\n    for(int k = 0; k < COLOR_NUM; ++k){\n      if( !checkSet( ccard[k], ccardnum[k] ) ){\n\twin = false;\n\tbreak;\n      }\n    }\n\n    if( win ){\n      cout << '1';\n    }else{\n      cout << '0';\n    }\n    cout << endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <functional>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2 ||\n     x == y+1 && y == z+1 && x == z+2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[10];\n  int B, G, R;\n  \n  cin >> n;\n  while(n--){\n    B = 0, G = 0, R = 0;\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].second;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> rummy[i].first;\n      if(rummy[i].first == 'B') B++;\n      if(rummy[i].first == 'G') G++;\n      if(rummy[i].first == 'R') R++;\n    }\n    \n    if(B % 3 != 0 || G % 3 != 0 || R % 3 != 0){\n      cout << '0' << endl;\n      continue;\n    }\n\n    sort(rummy, rummy+9);\n\n    /* \n       for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n       cout << endl;\n       for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n       cout << endl;\n    */   \n    int cnt = 0;\n\n    for(int i = 0 ; i <= 6 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << '1' << endl;\n    else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[9];\n\nbool is_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_all_OK_set(){\n  return(is_set(card[0], card[1], card[2])\n\t && is_set(card[3], card[4], card[5])\n\t && is_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  sort(card, card+9);\n  do{\n    if(is_all_OK_set())\n      return 1;\n  }while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n  scanf(\"%d\", &T);\n  for(int t=0; t<T; ++t){\n    for(int i=0; i<9; ++i){\n      scanf(\"%d\", &card[i]);\n    }\n    string color;\n    for(int i=0; i<9; ++i){\n      scanf(\"%s\", color);\n      if(color == \"G\") card[i] += 10;\n      else if(color == \"B\") card[i] += 20;\n    }\n    printf(\"%d\", win());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\ntypedef long long ll;\n#define REP(i, n) for(int i = 0;i < n;i++)\n#define REPR(i, n) for(int i = n;i >= 0;i--)\n#define FOR(i, m, n) for(int i = m;i < n;i++)\n\nint dy[] = { 0, 0, 1, -1 };\nint dx[] = { 1, -1, 0, 0 };\n\nll A, B, C, D, E, F, G, H, I, J, K, L, M,\nN, O, P, Q, R, S, T, U, V, W, X, Y, Z;\n\nstruct Card {\n\tll number;\n\tchar color;\n} Card_t;\n\nvoid aojRummy();\nint main()\n{\n\taojRummy();\n\treturn 0;\n}\n\n//* ?????????n??????????????\\??????????????????????????????????????????\ntemplate <typename T>\nvector<T> INP(ll n)\n{\n\tvector<T> x;\n\tREP(i, n) {\n\t\tT tmp; cin >> tmp;\n\t\tx.push_back(tmp);\n\t}\n\treturn x;\n}\n//* n??????1????????????????????\\?????????????????????????????¨??????????????????\nvector<char> SPRIT_STRING(ll n)\n{\n\tstring str; cin >> str;\n\tvector<char> cs(n);\n\tREP(i, n) cs[i] = str[i];\n\treturn cs;\n}\n\nbool comp(const Card& a, const Card& b)\n{\n\treturn a.number < b.number;\n}\n\nbool rummyCheck(vector<Card> cards)\n{\n\tif (cards.size() == 0) return true;\n\tif (cards.size() % 3 != 0) return false;\n\tsort(cards.begin(), cards.end(), comp);\n\tbool okay = false;\n\tdo {\n\t\tint repNum = cards.size() / 3;\n\t\tbool localOkay = true;\n\t\tREP(i, repNum) {\n\t\t\tll zero = cards[i * 3].number;\n\t\t\tll one = cards[i * 3 + 1].number;\n\t\t\tll two = cards[i * 3 + 2].number;\n\t\t\tif (not((zero == one and one == two) or ((zero + 1) == one and (one + 1) == two)))\n\t\t\t\tlocalOkay = false;\n\t\t}\n\t\tif (localOkay)\n\t\t\tokay = true;\n\t} while (next_permutation(cards.begin(), cards.end(), comp));\n\treturn okay;\n}\n\nvoid aojRummy()\n{\n\tcin >> T;\n\t\n\tN = 9;\n\tREP(t, T) {\n\t\tvector<Card> cards(N);\n\t\tREP(i, 9) cin >> cards[i].number;\n\t\tREP(i, 9) cin >> cards[i].color;\n\n\t\tvector<Card> red, green, blue;\n\t\tREP(i, N) {\n\t\t\tCard c = cards[i];\n\t\t\tif (c.color == 'R') red.push_back(c);\n\t\t\telse if (c.color == 'G') green.push_back(c);\n\t\t\telse blue.push_back(c);\n\t\t}\n\n\t\tif (rummyCheck(red) and rummyCheck(blue) and rummyCheck(green))\n\t\t\tcout << 1 << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n}\n\n//* http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1129\nvoid aojHanafudaShuffle()\n{\n\tN = R = 1;\n\twhile (true) {\n\t\tcin >> N >> R;\n\t\tif (N == 0 and R == 0) break;\n\n\t\tvector<ll> cards(N);\n\t\tREP(i, N) cards[i] = i + 1;\n\n\t\tREP(i, R) {\n\t\t\tcin >> P >> C;\n\t\t\trotate(cards.begin() + (N - (C + P - 1)), cards.begin() + (N - (P - 1)), cards.end());\n\t\t\t//vector<ll> tmp(C);\n\t\t\t//copy(cards.begin() + (N - (C + P - 1)), cards.begin() + N - (P - 1), tmp.begin());\n\t\t\t//copy(cards.begin() + (N - (P - 1)), cards.end(), cards.begin() + (N - (C + P - 1)));\n\t\t\t//copy(tmp.begin(), tmp.end(), cards.begin() + (N - C));\n\t\t}\n\n\t\tcout << cards[cards.size() - 1] << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define vi vector<int>\n#define pb push_back\n#define INF 999999999\n//#define INF (1LL<<59)\n \nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tvector<int> a(9);\n\t\tvector<char> c(9);\n \n\t\trep(i,9)cin>>a[i];\n\t\trep(i,9)cin>>c[i];\n \n\t\tint v[3][9]={};\n\t\trep(i,9){\n\t\t\tif(c[i]=='R')v[0][a[i]-1]++;\n\t\t\tif(c[i]=='G')v[1][a[i]-1]++;\n\t\t\tif(c[i]=='B')v[2][a[i]-1]++;\n\t\t}\n \n\t\tint count=0;\n\t\trep(i,3){\n\t\t\trep(j,7){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tif(v[i][j] && v[i][j+1] && v[i][j+2] ){\n\t\t\t\t\tv[i][j]--,v[i][j+1]--,v[i][j+2]--;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i,3){\n\t\t\trep(j,9){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tcount+=v[i][j]/3;\n\t\t\t\tv[i][j] -= v[i][j]/3*3;\n\t\t\t}\n\t\t}\n\t\tif(count==3)cout<<1<<endl;\n\t\telse cout<<0<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n\nint tx[] = {0,1,0,-1};\nint ty[] = {-1,0,1,0};\n\nstatic const double EPS = 1e-8;\n\nclass Card{\npublic:\n\tstring color;\n\tint num;\n\tbool operator<(Card& c) const{\n\t\tif(color == c.color){\n\t\t\treturn num < c.num;\n\t\t}\n\t\treturn color < c.color;\n\t}\n};\n\nint main(){\n\tint n;\n\n\n\twhile(~scanf(\"%d\",&n)){\n\n\t\tfor(int idx=0;idx<n;idx++){\n\t\t\tvector<Card> cards;\n\t\t\tint num[10];\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tscanf(\"%d\",&num[j]);\n\t\t\t}\n\n\t\t\tstring str;\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tcin >> str;\n\t\t\t\tCard c;\n\t\t\t\tc.color = str;\n\t\t\t\tc.num = num[j];\n\n\n\t\t\t\tcards.push_back(c);\n\t\t\t}\n\n\t\t\tsort(cards.begin(),cards.end());\n\n\t\t\tbool fail = false;\n\n\t\t\tfor(int i=0;i<9;){\n\t\t\t\tint prev_num = cards[i].num;\n\t\t\t\tstring prev_c = cards[i].color;\n\n\t\t\t\tbool isok = true;\n\t\t\t\t//3つ連続\n\t\t\t\tfor(int j=0;j<2;j++){\t\t\t\n\t\t\t\t\tif(cards[i+j+1].num == prev_num\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\n\t\t\t\t}\n\n\t\t\t\tif(isok) {\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\t//昇順\n\t\t\t\tfor(int j=0;j<2;j++){\n\t\t\t\t\tif(cards[i+j+1].num == prev_num + 1\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\tif(i+6 >= 9){\n\t\t\t\t\tfail = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//七対子\t\t\t\n\t\t\t\tfor(int j=0;j<6;j+=2){\n\t\t\t\t\tif(cards[i+j].color == cards[i+j+1].color\n\t\t\t\t\t\t&& cards[i+j].num == cards[i+j+1].num){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=6;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfail = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprintf(\"%d\\n\",fail ? 0 : 1);\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9];\n  pair<char, int> card[9];\n  int n;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n    int B = 0, G = 0, R = 0;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second; \n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n      if(card[i].first == 'B') B++;\n      if(card[i].first == 'G') G++;\n      if(card[i].first == 'R') R++;\n    }\n    if(!(B % 3 == 0 && G % 3 == 0 && R % 3 == 0)){\n      cout << '0' << endl;\n      continue;\n    }\n    sort(card, card+9);\n    \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n    \n      for(int i = 0 ; i < 9 ; i += 3){\n\tif(card[i].first == card[i+1].first && card[i].first == card[i+2].first){\n\t  if(card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second ||\n\t     card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n\t    flag[i] = true;\n\t  }\n\t}\t\n      }\n      \n      if(flag[0] && flag[3] && flag[6]){\n\tcout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nvoid solve()\n{\n\tint T;\n\tcin >> T;\n\tfor(int i = 0; i < T; ++i)\n\t{\n\t\tvector< vector<int> > data(3, vector<int>(10));\n\t\tvector<int> num(9);\n\t\tfor(int i = 0; i < 9; ++i)\n\t\t{\n\t\t\tcin >> num[i];\n\t\t}\n\t\tvector<char> color(9);\n\t\tfor(int i = 0; i < 9; ++i)\n\t\t{\n\t\t\tcin >> color[i];\n\t\t}\n\t\tfor(int i = 0; i < 9; ++i)\n\t\t{\n\t\t\tif(color[i] == 'R')\n\t\t\t{\n\t\t\t\tdata[0][num[i]]++;\n\t\t\t}\n\t\t\telse if(color[i] == 'G')\n\t\t\t{\n\t\t\t\tdata[1][num[i]]++;\n\t\t\t}\n\t\t\telse if(color[i] == 'B')\n\t\t\t{\n\t\t\t\tdata[2][num[i]]++;\n\t\t\t}\n\t\t}\n\t\tint count = 0;\n\t\tfor(int i = 0; i < 3; ++i)\n\t\t{\n\t\t\tfor(int j = 1; j <= 9; ++j)\n\t\t\t{\n\t\t\t\tif(data[i][j] >= 3)\n\t\t\t\t{\n\t\t\t\t\t++count;\n\t\t\t\t\tdata[i][j] -= 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < 3; ++i)\n\t\t{\n\t\t\tfor(int j = 1; j <= 7; ++j)\n\t\t\t{\n\t\t\t\twhile(data[i][j] >= 1 && data[i][j + 1] >= 1 && data[i][j + 2] >= 1)\n\t\t\t\t{\n\t\t\t\t\t++count;\n\t\t\t\t\tdata[i][j] -= 1;\n\t\t\t\t\tdata[i][j + 1] -= 1;\n\t\t\t\t\tdata[i][j + 2] -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(count == 3)\n\t\t{\n\t\t\tcout << 1 << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nint main(){\n    int n;\n    cin >> n;\n    rep(p, n){\n        vector<pair<string, int>> v;\n        vector<int> a(9);\n        vector<string> b(9);\n        rep(i, 9) cin >> a[i];\n        rep(i, 9) cin >> b[i];\n        rep(i, 9) v.push_back(make_pair(b[i], a[i]));\n        sort(all(v));\n\n        bool possible = false;\n        do{\n            vector<pair<string, int>> vv = v;\n            while(true){\n                bool is = false;\n                if(v[0] == v[1] && v[1] == v[2]){vector<pair<string, int>> t; rep(i, v.size()-3) t.push_back(v[i+3]); v=t; is = true;}\n                if(v.size() == 0) break;\n                if(v[0].first == v[1].first && v[1].first == v[2].first && v[0].second == v[1].second-1 && v[1].second == v[2].second-1){vector<pair<string, int>> t; rep(i, v.size()-3) t.push_back(v[i+3]); v=t; is = true;}\n                if(!is || v.size() == 0) break;\n            }\n            if(v.size() == 0){possible = true; break;}\n            v = vv;\n        }while(next_permutation(all(v)));\n        cout << (possible?\"1\":\"0\") << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nint a[10];\nstring b[10];\n\nbool isSet(int i,int j,int k){\n\tif(a[i]!=a[j]||a[j]!=a[k])\n\t\tif(a[i]+1!=a[j]||a[j]+1!=a[k])\n\t\t\treturn false;\n\tif(b[i]!=b[j]||b[j]!=b[k])return false;\n\treturn true;\n}\n\nint main() {\n\tint n=in();\n\twhile(n--){\n\t\tint i;\n\t\tfor(i=0;i<9;i++){\n\t\t\tcin>>a[i];\n\t\t}\n\t\tfor(i=0;i<9;i++){\n\t\t\tcin>>b[i];\n\t\t}\n\t\tint per[]={0,1,2,3,4,5,6,7,8};\n\t\tint win=0;\n\t\tdo{\n\t\t\tif(isSet(per[0],per[1],per[2])&&isSet(per[3],per[4],per[5])&&isSet(per[6],per[7],per[8])){\n\t\t\t\twin=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(per,per+9));\n\t\tcout<<win<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n#define _all(arg) begin(arg),end(arg)\n\n#define C first\n#define N second\n\ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0; }\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0; }\n\nusing namespace std;\nusing pci=pair<char,int>;\n\nbool checkpair(vector<pci> cards, int offset) {\n\tif(cards.size()-2<=offset)\n\t\treturn false;\n\tif((cards[offset].N == cards[offset+1].N && cards[offset+1].N == cards[offset+2].N)\n\t &&(cards[offset].C == cards[offset+1].C && cards[offset+1].C == cards[offset+2].C)) {\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nbool checkseq(vector<pci> cards, int offset) {\n\tif(cards.size()-2<=offset)\n\t\treturn false;\n\tif((cards[offset].N == cards[offset+1].N-1 && cards[offset+1].N == cards[offset+2].N-1)\n\t &&(cards[offset].C == cards[offset+1].C && cards[offset+1].C == cards[offset+2].C)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--) {\n\t\tvector<pci> cards(9);\n\t\trep(i, 9) cin >> cards[i].N;\n\t\trep(i, 9) cin >> cards[i].C;\n\t\tsort(cards.begin(), cards.end());\n\n\t\trep(c, 3) {\n\t\t\trep(i, cards.size()) {\n\t\t\t\tif(checkpair(cards, i)) {\n\t\t\t\t\trep(j,3)\n\t\t\t\t\t\tcards.erase(cards.begin() + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\trep(i, cards.size()) {\n\t\t\t\tif(checkseq(cards, i)) {\n\t\t\t\t\trep(j,3)\n\t\t\t\t\t\tcards.erase(cards.begin() + i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout << ((cards.size())?\"0\":\"1\") << endl;\n\t}\n        \n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double EPS=1e-10;\nconst int inf=1e9;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\nbool f(vvi dp){\n\trep(i,3){\n\t\trep(j,7){\n\t\t\tif(j==7){\n\t\t\t\tif(dp[i][7]||dp[i][8])return 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(dp[i][j]){\n\t\t\t\tif(dp[i][j]>=3){\n\t\t\t\t\tdp[i][j]-=3;\n\t\t\t\t\tif(f(dp))return 1;\n\t\t\t\t\tdp[i][j]+=3;\n\t\t\t\t}\n\t\t\t\tif(dp[i][j]>dp[i][j+1]||dp[i][j]>dp[i][j+2])return 0;\n\t\t\t\tdp[i][j+1]-=dp[i][j];\n\t\t\t\tdp[i][j+2]-=dp[i][j];\n\t\t\t\tdp[i][j]=0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 1;\n}\nint main(){\n\tint q;\n\tcin>>q;\n\tmap<char,int>m;\n\tm['R']=0;\n\tm['G']=1;\n\tm['B']=2;\n\twhile(q--){\n\t\tvvi dp(3,vi(10));\n\t\t{\n\t\t\tvi a(9);\n\t\t\tvector<char>b(9);\n\t\t\trep(i,9)cin>>a[i];\n\t\t\trep(j,9)cin>>b[j];\n\t\t\trep(i,9)dp[m[b[i]]][a[i]-1]++;\n\t\t}\n\t\tcout<<f(dp)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <array>\n#include <iostream>\n#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nint judge(array<int, 30>& cards, int rem) {\n    if (rem == 0) return 1;\n    for (int i = 0; i < 30; i++) {\n        if (cards[i] >= 3) {\n            cards[i] -= 3;\n            int res = judge(cards, rem - 3);\n            if (res) return res;\n            cards[i] += 3;\n        }\n        if (i >= 2 && cards[i] > 0 && cards[i - 1] > 0 && cards[i - 2] > 0) {\n            for (int j = i - 2; j <= i; j++) cards[j]--;\n            int res = judge(cards, rem - 3);\n            if (res) return res;\n            for (int j = i - 2; j <= i; j++) cards[j]++;\n        }\n    }\n    return 0;\n}\n\nvoid solve() {\n    array<int, 9> n;\n    array<char, 9> c;\n    for (int& x : n) cin >> x;\n    for (char& x : c) cin >> x;\n\n    array<int, 30> cards;\n    cards.fill(0);\n    for (int i = 0; i < 9; i++) {\n        int m = 0;\n        switch (c[i]) {\n        case 'R': m = 0; break;\n        case 'G': m = 10; break;\n        case 'B': m = 20; break;\n        }\n        cards[n[i] + m]++;\n    }\n    cout << judge(cards, 9) << endl;\n}\n\nint main() {\n    int n;\n    for (cin >> n; n; n--) {\n        solve();\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <array>\n#include <string>\nusing namespace std;\n\nint T;\nvector<int> card(9);\n\nbool is_same_number(int a, int b, int c) {\n    if (a == b && b == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\nbool is_sequence(int a, int b, int c) {\n    if (a+2 == b+1 && b+1 == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool is_good_set(int a, int b, int c) {\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n    if (is_good_set(card[0], card[1], card[2]) &&\n        is_good_set(card[3], card[4], card[5]) &&\n        is_good_set(card[6], card[7], card[8])){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nint win(){\n    sort(card.begin(), card.begin()+9);\n    do {\n        if (is_all_good_set()){\n            return 1;\n        }\n    } while (next_permutation(card.begin(), card.end()));\n    return 0;\n}\n\nint main() {\n    cin >> T;\n    for (int t=0; t<T; ++t) {\n        for (int i=0; i<9; ++i) {\n            cin >> card[i];\n//            cout << card[i] << \" \";\n        }\n//        cout << endl;\n        string color;\n        for (int i=0; i<9; ++i) {\n            cin >> color;\n//            cout << color << \" \";\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n//        cout << endl;\n\n/*\n        for (int i=0; i<9; ++i) {\n            cout << card[i] << \"*\" ;\n        }\n*/\n//        cout << endl;\n        cout << win() << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n \nint main(){\n  int n;\n  cin>>n;\n  int cards[9];\n  char color;\n  int num[3][9];\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++)\n      for(int k=0;k<9;k++)num[j][k]=0;\n    for(int j=0;j<9;j++) cin>>cards[j];\n    for(int j=0;j<9;j++){\n      cin>>color;\n      if(color=='R'){\n    num[0][cards[j]]++;\n      }else if(color=='G'){\n    num[1][cards[j]]++;\n      }else{\n    num[2][cards[j]]++;\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<7;j++){\n    while(num[k][j]>=3)num[k][j]-=3;\n    while(num[k][j]>0 && num[k][j+1]>0 && num[k][j+2]>0){\n      num[k][j]--;num[k][j+1]--;num[k][j+2]--;\n    }\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    if(num[k][j]>=3)num[k][j]-=3;\n      }\n    }\n    bool ans=true;\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    //cout << num[k][j] << \" \" ;\n    if(num[k][j]!=0){\n      ans=false;\n      break;\n    }\n      }\n      //cout << endl;\n    }\n    if(ans==true) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n#define _all(arg) begin(arg),end(arg)\n\n#define C first\n#define N second\n\ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0; }\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0; }\n\nusing namespace std;\nusing pci=pair<char,int>;\n\nbool checkpair(vector<pci> cards, int offset) {\n\tif(offset>=7)\n\t\treturn false;\n\tif((cards[offset].N == cards[offset+1].N && cards[offset+1].N == cards[offset+2].N)\n\t &&(cards[offset].C == cards[offset+1].C && cards[offset+1].C == cards[offset+2].C)) {\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nbool checkseq(vector<pci> cards, int offset) {\n\tif(offset>=7)\n\t\treturn false;\n\tif((cards[offset].N == cards[offset+1].N-1 && cards[offset+1].N == cards[offset+2].N-1)\n\t &&(cards[offset].C == cards[offset+1].C && cards[offset+1].C == cards[offset+2].C)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--) {\n\t\tvector<pci> cards(9);\n\t\trep(i, 9) cin >> cards[i].N;\n\t\trep(i, 9) cin >> cards[i].C;\n\t\tsort(cards.begin(), cards.end());\n\n\t\trep(c, 3) {\n\t\t\trep(i, cards.size()) {\n\t\t\t\tif(checkpair(cards, i)) {\n\t\t\t\t\trep(j,3)\n\t\t\t\t\t\tcards.erase(cards.begin() + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\trep(i, cards.size()) {\n\t\t\t\tif(checkseq(cards, i)) {\n\t\t\t\t\trep(j,3)\n\t\t\t\t\t\tcards.erase(cards.begin() + i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout << ((cards.size())?\"0\":\"1\") << endl;\n\t}\n        \n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <complex>\n#include <cstdio>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n\nbool used[9];\nint T,n[9],c[3][9],C[3];\nchar cc;\n\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\trep(i,3)fill(c[i],c[i]+9,0);\n\t\tfill(C,C+3,0);\n\t\trep(i,9)cin>>n[i];\n\t\trep(i,9){\n\t\t\tcin>>cc;\n\t\t\tif(cc=='R'){c[0][n[i]]++;C[0]++;}\n\t\t\tif(cc=='G'){c[1][n[i]]++;C[1]++;}\n\t\t\tif(cc=='B'){c[2][n[i]]++;C[2]++;}\n\t\t}\n\t\tint f=1;\n\t\tif(C[0]%3+C[1]%3+C[2]%3)f=0;\n\t\trep(i,3){\n\t\t\tif(!C[i])continue;\n\t\t\tint cur=0;\n\t\t\twhile(C[i]){\n\t\t\t\tif(!c[i][cur])cur++;\n\t\t\t\telse{\n\t\t\t\t\tif(c[i][cur]>=3){c[i][cur]-=3;C[i]-=3;}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!c[i][cur+1]||!c[i][cur+2]){f=0;break;}\n\t\t\t\t\t\tc[i][cur]-=1;c[i][cur+1]-=1;c[i][cur+2]-=1;\n\t\t\t\t\t\tC[i]-=3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!f)break;\n\t\t}\n\t\tcout<<(f?1:0)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tint t, n[9];\n\tchar c;\n\t\n\tcin >> t;\n\tfor(int i=0 ; i<t ; i++ ){\n\t\tint R[9]={0}, G[9]={0}, B[9]={0};\n\t\tint r=0, g=0, b=0, ans=0;\n\t\tfor(int j=0 ; j<9 ; j++ ){\n\t\t\tcin >> n[j];\n\t\t}\n\t\tfor(int j=0 ; j<9 ; j++ ){\n\t\t\tcin >> c;\n\t\t\tif( c == 'R' ){\n\t\t\t\tR[ n[j] ]++;\n\t\t\t\tr++;\n\t\t\t}else if( c == 'G' ){\n\t\t\t\tG[ n[j] ]++;\n\t\t\t\tg++;\n\t\t\t}else if( c == 'B' ){\n\t\t\t\tB[ n[j] ]++;\n\t\t\t\tb++;\n\t\t\t}\n\t\t}\n\t\tif( r%3 == 0 && g%3 == 0 && b%3 == 0 ){\n\t\t\tif( r ){\n\t\t\t\tfor(int j=0 ; j<9 ; ){\n\t\t\t\t\tif( R[j] == 3 ){\n\t\t\t\t\t\tR[j] -= 3;\n\t\t\t\t\t\tr -= 3;\n\t\t\t\t\t}else if( j+2 < 9 && R[j] && R[j+1] && R[j+2] ){\n\t\t\t\t\t\tR[j]--;\n\t\t\t\t\t\tR[j+1]--;\n\t\t\t\t\t\tR[j+2]--;\n\t\t\t\t\t\tr -= 3;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( g ){\n\t\t\t\tfor(int j=0 ; j<9 ; ){\n\t\t\t\t\tif( G[j] == 3 ){\n\t\t\t\t\t\tG[j] -= 3;\n\t\t\t\t\t\tg -= 3;\n\t\t\t\t\t}else if( j+2 < 9 && G[j] && G[j+1] && G[j+2] ){\n\t\t\t\t\t\tG[j]--;\n\t\t\t\t\t\tG[j+1]--;\n\t\t\t\t\t\tG[j+2]--;\n\t\t\t\t\t\tg -= 3;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( b ){\n\t\t\t\tfor(int j=0 ; j<9 ; ){\n\t\t\t\t\tif( B[j] == 3 ){\n\t\t\t\t\t\tB[j] -= 3;\n\t\t\t\t\t\tb -= 3;\n\t\t\t\t\t}else if( j+2 < 9 && B[j] && B[j+1] && B[j+2] ){\n\t\t\t\t\t\tB[j]--;\n\t\t\t\t\t\tB[j+1]--;\n\t\t\t\t\t\tB[j+2]--;\n\t\t\t\t\t\tb -= 3;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( r == 0 && g == 0 && b == 0 ){\n\t\t\t\tans = 1;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n//R:1~9, G:11~19, B:21~29 とする．\n\n#define RED\t\t0\n#define GREEN\t10\n#define BLUE\t20\n\nint main(void)\n{\n\tint T;\n\tcin >> T;\n\tfor(int i=0;i<T;i++){\n\t\tvector<int> card(9, 0);\n\t\tfor(int j=0;j<9;j++){\n\t\t\tint n;\n\t\t\tcin >> n;\n\t\t\tcard[j] += n;\n\t\t}\n\t\tfor(int j=0;j<9;j++){\n\t\t\tstring color;\n\t\t\tcin >> color;\n\t\t\tif (color == \"R\"){\n\t\t\t\tcard[j] += RED;\n\t\t\t}else if(color == \"G\"){\n\t\t\t\tcard[j] += GREEN;\n\t\t\t}else if(color == \"B\"){\n\t\t\t\tcard[j] += BLUE;\n\t\t\t}\n\t\t}\n\t\tbool win=false;\n\t\t//cardをソート\n\t\tsort(card.begin(), card.end());\n\t\tdo{\n\t\t\tint set=0;\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\t//3つ同じカードの場合\n\t\t\t\tif (card[3*j]==card[3*j+1] && card[3*j+1]==card[3*j+2]){\n\t\t\t\t\tset++;\n\t\t\t\t}\n\t\t\t\t//連番の場合\n\t\t\t\tif (card[3*j]+1==card[3*j+1] && card[3*j+1]+1==card[3*j+2]){\n\t\t\t\t\tset++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//3つのセットができていたら\n\t\t\tif (set == 3){\n\t\t\t\twin = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(card.begin(), card.end()));\n\t\tif (win){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 9;\nint R[N], G[N], B[N], data_num[N];\nchar data_c[N];\n\nint Rec(int data[N], int i)\n{\n    int res = 0;\n    bool change = false;\n\n    if (i < N && data[i] >= 3) {\n        data[i] -= 3;\n        res = max(res, Rec(data, i) + 1);\n        data[i] += 3;\n        change = true;\n    }\n    if (i + 2 < N && (data[i] > 0 && data[i + 1] > 0 && data[i + 2] > 0)) {\n        --data[i], --data[i + 1], --data[i + 2];\n        res = max(res, Rec(data, i) + 1);\n        ++data[i], ++data[i + 1], ++data[i + 2];\n        change = true;\n    }\n\n    if (i < N && !change)\n        res += Rec(data, i + 1);\n\n    return res;\n}\n\nint main()\n{\n    int T;\n\n    cin >> T;\n    while (T--) {\n        memset(R, 0, sizeof(R));\n        memset(G, 0, sizeof(G));\n        memset(B, 0, sizeof(B));\n\n        // Input\n        for (int i = 0; i < N; ++i)\n            cin >> data_num[i];\n        for (int i = 0; i < N; ++i)\n            cin >> data_c[i];\n\n        for (int i = 0; i < N; ++i) {\n            if (data_c[i] == 'R')\n                R[data_num[i] - 1]++;\n            else if (data_c[i] == 'G')\n                G[data_num[i] - 1]++;\n            else\n                B[data_num[i] - 1]++;\n        }\n\n        int set = Rec(R, 0);\n        set += Rec(G, 0);\n        set += Rec(B, 0);\n\n        if (set >= 3)\n            cout << \"1\\n\";\n        else\n            cout << \"0\\n\";\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n \n#define _rrep(i,n) _rrange(i,n,0)\n#define _rrange(i,a,b) for(int i=(int)(a)-1;i>=(int)(b);--i)\n#define rrep(...) _overload(__VA_ARGS__,_rrange,_rrep,)(__VA_ARGS__)\n \n#define _all(arg) begin(arg),end(arg)\n#define uniq(arg) sort(_all(arg)),(arg).erase(unique(_all(arg)),end(arg))\n#define getidx(ary,key) lower_bound(_all(ary),key)-begin(ary)\n#define clr(a,b) memset((a),(b),sizeof(a))\n#define bit(n) (1LL<<(n))\n \n// #define DEBUG\n \n#ifdef DEBUG\n    #define dump(...) fprintf(stderr, __VA_ARGS__)\n#else\n    #define dump(...)\n#endif\n \ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0;}\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0;}\n \nusing namespace std;\nusing ll=long long;\nusing vi=vector<int>;\nusing vll=vector<ll>;\n \nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst ll inf =1LL << 62;\nconst ll mod=1000000007LL;\nconst int dx[4]={1,0,-1,0};\nconst int dy[4]={0,1,0,-1};\n \n \nll extgcd(ll a,ll b,ll& x,ll& y){x=1,y=0;ll g=a;if(b!=0) g=extgcd(b,a%b,y,x),y-=a/b*x;return g;}\nll ADD(const ll &a, const ll &b,const ll &mod) { return (a+b)%mod;}\nll SUB(const ll &a, const ll &b,const ll &mod) { return (a-b+mod)%mod;}\nll MUL(const ll &a, const ll &b,const ll &mod) { return (1LL*a*b)%mod;}\nll DIV(const ll &a, const ll &b,const ll &mod) {ll x,y; extgcd(b,mod,x,y);return MUL(a,(x+mod)%mod,mod);}\n \nrandom_device rd;\nmt19937 mt(rd());\nuniform_int_distribution<int> dice(1,6);\nuniform_real_distribution<double> score(0.0,10.0);\n\nconst int n = 9;\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--){\n\t\tvi num(n); for(auto & e : num) cin >> e;\n\t\tstring color;\n\t\trep(i, n){\n\t\t\tchar c; cin >> c;\n\t\t\tcolor.push_back(c);\n\t\t}\n\n\t\tvi card[3];\n\t\trep(i, n){\n\t\t\tint idx = color[i] == 'R' ? 0 : color[i] == 'G' ? 1 : 2;\n\t\t\tcard[idx].push_back(num[i]);\n\t\t}\n\n\t\trep(i, 3) sort(_all(card[i]));\n\n\t\tint cnt = 0;\n\t\trep(i, 3){\n\t\t\tvi & hand = card[i];\n\n\t\t\tint len = hand.size();\n\t\t\trep(j, len - 2){\n\t\t\t\tint a = hand[j], b = hand[j + 1], c = hand[j + 2];\n\t\t\t\tif((a == b and b == c) or (b - a == 1 and c - b == 1)){\n\t\t\t\t\tcnt++;\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint res = cnt == 3 ? 1 : 0;\n\t\tcout << res << endl;\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T,card[9]; // T:dataset\nint win();\nbool is_all_good_set();\nbool is_good_set(int a,int b,int c);\nbool is_same_number(int a,int b,int c);\nbool is_sequence(int a,int b,int c);\n\nint main() {\n  cin >> T;\n  for (int t=0;t<T;++t) {\n    for (int i=0;i<9;++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0;i<9;++i) {\n      cin >> color;\n      if (color==\"G\") card[i] += 10;\n      else if (color==\"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n\nint win() {\n  int flag = 0;\n  sort(card,card+9);\n  do {\n    if (is_all_good_set()==1)\n      flag = 1;\n  } while (next_permutation(card,card+9));\n  return flag;\n}\n  \nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6],card[7],card[8]);\n}\n\nbool is_good_set(int a,int b,int c) {\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\n\nbool is_same_number(int a,int b,int c) {\n  return a == b && b == c;\n}\n\nbool is_sequence(int a,int b,int c) {\n  return a+2 == b+1 && b+1 == c;\n}"
  },
  {
    "language": "C++",
    "code": "/*\n * 2102.cpp\n *\n *  Created on: 2012/07/08\n *      Author: shimomire\n */\n\n#include <iostream>\n#include<algorithm>\n#include<string>\n#include <complex>\n#include<list>\n#include<float.h>\n#include <functional>\n#include <vector>\n#include <map>\n#include <queue>\n\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define REP0(i,n)   REP(i,0,n)\n#define REPr(i,b,n) for(int i=n-1;i>=b;i--)\n#define REPr0(i,n)   REPr(i,0,n)\n\n#define foreach(it,o) for(__typeof((o).begin()) it=(o).begin(); it!=(o).end(); ++it)\n#define ALL(o) (o).begin(),(o).end()\n#define ARRSIZE(x) (sizeof(x)/sizeof(x[0]))\n#define ARRALL(x) x,x+ARRSIZE(x)\n\ntypedef complex<double> P;\nbool operator <(const P& a, const P& b) {\n\treturn make_pair(real(a),imag(a)) < make_pair(real(b),imag(b));\n}\n\nbool comparator(const pair<char,int>& a,const pair<char,int>& b){\n\tif(a.first!=b.first)return a.first>b.first;\n\treturn a.second<b.second;\n}\n\nint N;\nvector<pair<char,int> > cards;\nvector<pair<char,int> > rest;\nint main(){\n\tcin >>N;\n\tint num[9];\n\tchar color[9];\n\tREP0(n,N){\n\t\tcards.clear();\n\t\trest.clear();\n\t\tREP0(i,9){\n\t\t\tcin >>num[i];\n\t\t}\n\t\tREP0(i,9){\n\t\t\tcin >>color[i];\n\t\t}\n\t\tREP0(i,9){\n\t\t\tcards.push_back(make_pair(color[i],num[i]));\n\t\t}\n\t\tsort(ALL(cards),comparator);\n\n//\t\tforeach(card,cards){\n//\t\t\tcout<<(*card).first<<\" \"<<(*card).second<<endl;\n//\t\t}\n\n\t\t//三枚同じものがあれば除いておく。\n\t\tfor(int i=0;i<cards.size();i++){\n\t\t\tif(cards[i]==cards[i+1] &&cards[i+1]==cards[i+2]){\n\t\t\t\tcards.erase(cards.begin()+i);\n\t\t\t\tcards.erase(cards.begin()+i);\n\t\t\t\tcards.erase(cards.begin()+i);\n\t\t\t}\n\t\t}\n\n\t\tbool check=true;\n\t\tforeach(card,cards){\n\t\t\trest.push_back(*card);\n\t\t\tif(rest.size()<3){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rest[0].first==rest[1].first && rest[1].first ==rest[2].first){\n\t\t\t\tif(rest[0].second==rest[1].second-1 &&rest[1].second==rest[2].second-1){\n\t\t\t\t\trest.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(rest.size()>0){\n\t\t\t\tcheck=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout<< (check?1:0)<<endl;\n\t}\n\n}\n "
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a==(b-1) && a==(c-2) ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 10;\n\t\t\tif(color == \"B\") n[k] += 20;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<map>\n#include<string>\nusing namespace std;\nint sample;\nint num[10];\nmap<string,int> table;\n\nbool good(int a,int b,int c){\n\tif((a==b&&b==c)||(a+1==b&&b+1==c)){\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nbool all_good(int* num){\n\treturn good(num[0],num[1],num[2]) && good(num[3],num[4],num[5]) && good(num[6],num[7],num[8]);\n}\nint win(int* num){\nsort(num,num+9);\n\tdo{\n\t\tif(all_good(num)){\n\t\t\treturn 1;\n\t\t}\n\t}while(next_permutation(num,num+9));\n\treturn 0;\n}\n\nint main(){\n\ttable[\"R\"]=0;\n\ttable[\"G\"]=10;\n\ttable[\"B\"]=20;\n\tcin>>sample;\n\tfor(int i=0;i<sample;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tcin>>num[j];\n\t\t}\n\t    string color;\n\t\tfor(int j=0;j<9;j++){\n\t\t\tcin>>color;\n\t\t\tnum[j]+=table[color];\n\t\t}\n\t\tcout<<win(num)<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2 ||\n     x == y+1 && y == z+1 && x == z+2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[9];\n  bool flag[9];\n  \n  cin >> n;\n  while(n--){\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].second;\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].first;\n\n    sort(rummy, rummy+9);\n\n    /*  for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n    cout << endl;\n*/\n    int cnt = 0;\n\n    for(int i = 0 ; i <= 6 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a==(b-1) && a==(c-1) ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 10;\n\t\t\tif(color == \"B\") n[k] += 20;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif(same(n[0],n[1],n[2]) && same(n[3],n[4],n[5]) && same(n[6],n[7],n[8])){\n\t\t\tcout << 1;\n\t\t}\n\t\tif(renban(n[0],n[1],n[2]) && renban(n[3],n[4],n[5]) && renban(n[6],n[7],n[8])){\n\t\t\tcout << 1;\n\t\t}\n\t\tcout << 0;\n\t}\n\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nstruct card{\n  int num;\n  char c;\n  bool operator <(const card &a)const{\n    if(c == a.c){\n      return num < a.num;\n    }\n    return c < a.c;\n  }\n};\n\nint main(){\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    card c[9];\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].num;\n    }\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].c;\n    }\n    sort(c, c + 9);\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].num << \" \";\n    // }\n    // cout << endl;\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].c << \" \";\n    // }\n    // cout << endl;\n    \n    bool flag = 0;\n    do{\n    for(int i = 0; i < 9; i += 3){\n      // cout << \"i:\" << i << endl;\n      // cout << c[i].c << \" \" << c[i + 1].c << endl;\n      if(!(c[i].c   == c[i + 1].c   && c[i + 1].c   == c[i + 2].c))break;\n      if(!(c[i].num == c[i + 1].num && c[i + 1].num == c[i + 2].num) &&\n\t !(c[i].num + 1 == c[i + 1].num && c[i + 1].num + 1 == c[i + 2].num)){\n\tbreak;\n      }\n      if(i == 6){\n\tflag = 1;\n      }\n    }\n    }while(next_permutation(c, c + 9));\n    if(flag)cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == \"G\") card[i] += 10;\n        else if (color == \"B\") card[i] += 20;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nvoid judge();\nbool rum(int a, int b, int c);\n\nint main()\n{\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        judge();\n    }\n    return 0;\n}\n\nvoid judge()\n{\n    int nums[9] = {0,1,2,3,4,5,6,7,8}; \n    int numbers[9];\n    char colors[9];\n    for(int i = 0; i < 9; i++){\n        cin >> numbers[i];\n    }\n    for(int i = 0; i < 9; i++){\n        cin >> colors[i];\n    }\n    int set_num;\n    bool flag = false;\n    do{\n        set_num = 0;\n        for(int i = 0; i < 3; i++){\n            if(colors[3*i] == colors[3*i+1] && colors[3*i+1] == colors[3*i+2]){\n                if(rum(numbers[3*i], numbers[3*i+1], numbers[3*i+2])){\n                    set_num++;\n                }\n            } else {\n                break;\n            }\n        }\n        if(set_num >= 3){\n            flag = true;\n            break;\n        }\n    }\n    while(next_permutation(nums, nums+9));\n    if(flag){\n        cout << 1 << endl;\n    } else{ \n        cout << 0 << endl;\n    }\n}\n\nbool rum(int a, int b, int c)\n{\n    int nums[3] = {a, b, c};\n    sort(nums, nums+3);\n    bool flag;\n    flag = ((nums[0] == nums[1]) && (nums[1] == nums[2])) | ((nums[0] + 1 == nums[1]) && (nums[1] + 1 == nums[2]));\n    return flag;\n\n}"
  },
  {
    "language": "C++",
    "code": "// tsukasa_diary's programing contest code template\n#include <bits/stdc++.h>\nusing namespace std;\n// define\n#define for_(i,a,b) for(int i=a;i<b;++i)\n#define for_rev(i,a,b) for(int i=a;i>=b;--i)\n#define allof(a) a.begin(),a.end()\n#define minit(a,b) memset(a,b,sizeof(a))\n#define size_of(a) (int)a.size()\n// typedef\ntypedef long long lint;\ntypedef double Double;\ntypedef pair<int, int> pii;\n//\ntypedef vector< int > Array;\ntypedef vector< Array > Matrix;\ntypedef vector< Double > DArray;\ntypedef vector< DArray > DMatrix;\ntypedef vector< string > SArray;\ntypedef vector< pii > PArray;\n// popcount\ninline int POPCNT(int _x) { return __builtin_popcount(_x); }\ninline int POPCNT(lint _x) { return __builtin_popcountll(_x); }\n// inf\nconst int iINF = 1L << 30;\nconst lint lINF = 1LL << 60;\n// eps\nDouble EPS = 1e-9;\n// in range\ninline bool in_range(int _v, int _mx, int _mi) { return _mi <= _v && _v < _mx; }\ninline bool in_range(Double _v, Double _mi, Double _mx) { return -EPS < _v - _mi && _v - _mx < EPS; }\ninline bool in_range(int _x, int _y, int _W, int _H) { return 0 <= _x && _x < _W && 0 <= _y && _y < _H; }\n// neighbor clockwise\nconst int DX[4] = {0,1,0,-1}, DY[4] = {-1,0,1,0};\nconst int DX_[8] = {0,1,1,1,0,-1,-1,-1}, DY_[8] = {-1,-1,0,1,1,1,0,-1};\n\nint T;\nint number[9];\nchar color[9];\n\nvoid solve() {\n\tint cr[10], cg[10], cb[10];\n\tminit(cr, 0); minit(cg, 0); minit(cb, 0);\n\tint cntr = 0, cntg = 0, cntb = 0;\n\t\n\tfor_(i,0,9) {\n\t\tswitch (color[i]) {\n\t\tcase 'R':\n\t\t\t++cntr;\n\t\t\t++cr[number[i]];\n\t\t\tbreak;\n\t\tcase 'G':\n\t\t\t++cntg;\n\t\t\t++cg[number[i]];\n\t\tcase 'B':\n\t\t\t++cntb;\n\t\t\t++cb[number[i]];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (cntr % 3 == 0 && cntg % 3 == 0 && cntb % 3 == 0) {\n\t\tfor_(i,1,10) {\n\t\t\twhile (cr[i] >= 3) cr[i] -= 3;\n\t\t\twhile (cg[i] >= 3) cg[i] -= 3;\n\t\t\twhile (cb[i] >= 3) cb[i] -= 3;\n\t\t}\n\t\t\n\t\tfor_(i,1,8) {\n\t\t\twhile (cr[i] >= 1 && cr[i + 1] >= 1 && cr[i + 2] >= 1) {\n\t\t\t\t--cr[i]; --cr[i + 1]; --cr[i + 2];\n\t\t\t}\n\t\t\twhile (cg[i] >= 1 && cg[i + 1] >= 1 && cg[i + 2] >= 1) {\n\t\t\t\t--cg[i]; --cg[i + 1]; --cg[i + 2];\n\t\t\t}\n\t\t\twhile (cb[i] >= 1 && cb[i + 1] >= 1 && cb[i + 2] >= 1) {\n\t\t\t\t--cb[i]; --cb[i + 1]; --cb[i + 2];\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\tbool flag = true;\n\t\tfor_(i,1,10) {\n\t\t\tif (cr[i] > 0 || cg[i] > 0 || cb[i] > 0) flag = false;\n\t\t}\n\t\t\n\t\tif (flag) cout << 1 << endl;\n\t\telse cout << 0 << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n}\n\nint main() {\n\tcin >> T;\n\tfor_(i,0,T) {\n\t\tfor_(j,0,9) cin >> number[j];\n\t\tfor_(j,0,9) cin >> color[j];\n\t\tsolve();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c)\n{\n    if (a == b and b == c) return true;\n    return false;\n}\n\nbool is_sequence(int a, int b, int c)\n{\n    if(a + 1 == b and b + 1 == c) return true;\n    return false;\n}\n\nbool is_good_set(int a, int b, int c)\n{\n    return is_same_number(a, b, c) or is_sequence(a, b, c);\n}\n\nbool is_all_good_set()\n{\n    return is_good_set(card[0], card[1], card[2]) and \\\n        is_good_set(card[3], card[4], card[5]) and \\\n        is_good_set(card[6], card[7], card[8]);\n}\n\nint win()\n{\n    sort(card, card + 9);\n    do {\n        if (is_all_good_set()) return 1;\n    } while (next_permutation(card, card + 9));\n    return 0;\n}\n\nint main(int argc, char const* argv[])\n{\n    cin >> T;\n    for (int t = 0; t < T; t++) {\n        for (int i = 0; i < 9; i++) {\n            cin >> card[i];\n        }\n        string color;\n        for (int i = 0; i < 9; i++) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n        cout << win() << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=int(a);i<int(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n\n#define _rrep(i,n) _rrange(i,n,0)\n#define _rrange(i,a,b) for(int i=int(a)-1;i>=int(b);--i)\n#define rrep(...) _overload(__VA_ARGS__,_rrange,_rrep,)(__VA_ARGS__)\n\n#define _all(arg) begin(arg),end(arg)\n\nusing namespace std;\nusing card=pair<int,char>;\n\nbool check(const vector<card> &ary){\n\trep(i,3){\n\t\t// color\n\t\tif(ary[3*i].second!=ary[3*i+1].second) return false;\n\t\tif(ary[3*i].second!=ary[3*i+2].second) return false;\n\t\t\n\t\t// number\n\t\tif(ary[3*i].first==ary[3*i+1].first&&ary[3*i+1].first==ary[3*i+2].first) continue;;\n\t\tif(ary[3*i+1].first-ary[3*i].first==1 && ary[3*i+2].first-ary[3*i+1].first ==1) continue;\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nint main(void){\n\tint t;\n\tcin >> t;\n\twhile(t--){\n\t\tvector<card> ary(9);\n\t\trep(i,9) cin >> ary[i].first;\n\t\trep(i,9) cin >> ary[i].second;\n\t\t\n\t\tsort(_all(ary));\n\t\tbool ok=false;\n\t\tdo{\n\t\t\tif(check(ary)) ok=true;\n\t\t}while(next_permutation(_all(ary)));\n\t\tcout << int(ok) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <map>\n#include <bitset>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n\nusing namespace std;\n\nint main(){\n\tint n = 0;\n\tcin >> n;\n\twhile(n--){\n\t\tmap<char, vector<int> > table;\n\t\ttable['R'] = vector<int>(10, 0);\n\t\ttable['G'] = vector<int>(10, 0);\n\t\ttable['B'] = vector<int>(10, 0);\n\t\tvector<int> number(9, 0);\n\t\tchar clist[] = {'R', 'G', 'B'};\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tcin >> number[i];\n\t\t}\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tchar color = ' ';\n\t\t\tcin >> color;\n\t\t\ttable[color][number[i]]++;\n\t\t}\n\n\t\tbool win = true;\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tfor(int j = 1; j <= 9; j++){\n\t\t\t\tif(table[clist[i]][j] >= 3) table[clist[i]][j] -= 3; \n\t\t\t}\n\t\t\tfor(int j = 1; j <= 7; j++){\n\t\t\t\tif(table[clist[i]][j] == 0) continue;\n\t\t\t\twhile(table[clist[i]][j] > 0){\n\t\t\t\t\ttable[clist[i]][j]--;\n\t\t\t\t\ttable[clist[i]][j+1]--;\n\t\t\t\t\ttable[clist[i]][j+2]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 1; j <= 9; j++){\n\t\t\t\tif(table[clist[i]][j] != 0) win = false;\n\t\t\t}\n\t\t}\n\n\t\tcout << (win ? 1 : 0) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tint card[3][10];\n\n\tcin>>n;\n\n\twhile(n--){\n\t\t\t\n\t\tint a[10];\n\t\t\n\t\tmemset(card, 0, sizeof(card));\n\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin>>a[i];\n\t\t}\n\n\t\tfor(int i=0; i<9; ++i){\n\n\t\t\tchar b;\n\t\t\tcin>>b;\n\t\t\tcard[b=='R'?0:b=='G'?1:2][a[i]]++;\n\t\t}\n\n\t\tint res = 0;\n\n\t\tfor(int c=0; c<3; ++c){\n\t\t\tfor(int k=1; k<=9; ++k){\n\t\t\t\t\n\t\t\t\tres += card[c][k]/3;\n\t\t\t\tcard[c][k] %= 3;\n\t\t\t\t\n\t\t\t\tif(k<=7&&card[c][k]&&card[c][k+1]&&card[c][k+2]\n\t\t\t\t\t\t&&card[c][k]>=card[c][k+1]&&card[c][k]>=card[c][k+2]){\n\t\t\t\t\tcard[c][k+1] -= card[c][k];\n\t\t\t\t\tcard[c][k+2] -= card[c][k];\n\t\t\t\t\tres += card[c][k];\n\t\t\t\t\tcard[c][k] -= 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout << (res>=3) << endl;\n\t}\n\n\treturn 0;\n}\t\t"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstring>\n#include<string>\nusing namespace std;\nint kotae;\nint func(int t[],int pre){\n\tif(pre==0)\n\treturn 1;\n\tfor(int i=0;i<10;i++){\n\t\tif(t[i]>=3){\n\t\t\tt[i]-=3;\n\t\t\tif(func(t,pre-3))\n\t\t\t\treturn 1;\n\t\t\tt[i]+=3;\n\t\t}else if(t[i]>=1&&t[i+1]>=1&&t[i+2]>=1){\n\t\t\tt[i]-=1;t[i+1]-=1;t[i+2]-=1;\n\t\t\tif(func(t,pre-3))\n\t\t\t\treturn 1;\n\t\t\tt[i]+=1;t[i+1]+=1;t[i+2]+=1;\n\t\t}\n\t}\n\treturn 0;\n}\n//0 1 2 3 4 5 6 7 8 9 0 0\n//1 2 3 4 5 6 7 8 9 10 11 12\nint main(){\n\t//r g b\n\tint t[3][11],n,num[9],e[3];\n\tchar ch[9];\n\tcin>>n;\n\twhile(n--){\n\t\te[0]=e[1]=e[2]=0;\n\t\tfor(int i=0;i<3;i++)\n\t\t\tmemset(t,0,sizeof(t));\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin>>num[i];\n\t\tfor(int i=0;i<9;i++)\n\t\t\tcin>>ch[i];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(ch[i]=='G'){\n\t\t\t\te[1]++;\n\t\t\t\tt[1][num[i]-1]++;\n\t\t\t}else if(ch[i]=='B'){\n\t\t\t\te[2]++;\n\t\t\t\tt[2][num[i]-1]++;\n\t\t\t}else if(ch[i]=='R'){\n\t\t\t\te[0]++;\n\t\t\t\tt[0][num[i]-1]++;\n\t\t\t}\n\t\t}\n\t\tkotae=0;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(e[i]%3!=0)\n\t\t\t\tbreak;\n\t\t\tif(func(t[i],e[i]))\n\t\t\tkotae=kotae+e[i]/3;\n\t\t}\n\t\tif(kotae==3)\n\t\tcout<<1<<endl;\n\t\telse cout<<0<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\n\nconst int MaxCardNum = 9;\nconst int CardSetNum = 3;\nconst int CardNumInSet = MaxCardNum / CardSetNum;\nvector<int> cardNums;\nvector<bool> cardVisited;\nvector<int> newCardNums;\n\nvoid DataInpt() {\n\t// Read all numbers on card first\n\tcardNums.clear();\n\tfor (int i = 0; i < MaxCardNum; i++) {\n\t\tint cardNum;\n\t\tcin >> cardNum;\n\t\tcardNums.push_back(cardNum);\n\t}\n\t// Then add corresponding color number on each card\n\tfor (int i = 0; i < MaxCardNum; i++) {\n\t\tstring color;\n\t\tcin >> color;\n\t\tif (color == \"G\") {\n\t\t\tcardNums[i] += 10;\n\t\t} else if (color == \"B\") {\n\t\t\tcardNums[i] += 20;\n\t\t}\n\t}\n}\n\nbool CheckSolutionValid() {\n\tfor (int i = 0; i < CardSetNum; i++) {\n\t\tint b = i * CardNumInSet;\n\t\tif (newCardNums[b] == newCardNums[b + 1] && newCardNums[b + 1] == newCardNums[b + 2]) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (newCardNums[b] == newCardNums[b + 1] - 1 && newCardNums[b + 1] == newCardNums[b + 2] - 1) {\n\t\t\tcontinue;\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nbool Dfs(int depth) {\n\tif (depth >= MaxCardNum) {\n\t\treturn CheckSolutionValid();\n\t}\n\tfor (int i = 0; i < MaxCardNum; i++) {\n\t\tif (cardVisited[i] == false) {\n\t\t\tcardVisited[i] = true;\n\t\t\tnewCardNums[depth] = cardNums[i];\n\t\t\tif (Dfs(depth + 1)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcardVisited[i] = false;\n\t\t}\n\t}\n\treturn false;\n}\n\nvoid Solve() {\n\tDataInpt();\n\tcardVisited.clear();\n\tcardVisited.resize(MaxCardNum, false);\n\tnewCardNums.clear();\n\tnewCardNums.resize(MaxCardNum, 0);\n\tif (Dfs(0)) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n}\n\nint main() {\n\tint setNum = 0;\n\n\tcin >> setNum;\n\tfor (int i = 0; i < setNum; i++) {\n\t\tSolve();\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nbool isZero(vector<vector<int> > &v) {\n    for (int i=0; i<v.size(); ++i) {\n        for (int j=0; j<v[i].size(); ++j) {\n            if (v[i][j] != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nint judge(vector<vector<int> > &v, int cnt) {\n    if (cnt == 3 && isZero(v)) {\n        return 1;\n    }\n    for (int i=0; i<3; ++i) {\n        for (int j=0; j<9; ++j) {\n            if (3 <= v[i][j]) {\n                v[i][j] -= 3;\n                if (judge(v, cnt + 1) == 1) {\n                    return 1;\n                } else {\n                    v[i][j] += 3;\n                }\n            }\n            if (j+2 < 9 && v[i][j] && v[i][j+1] && v[i][j+2]) {\n                v[i][j] --; v[i][j+1] --; v[i][j+2] --;\n                if (judge(v, cnt + 1) == 1) {\n                    return 1;\n                } else {\n                    v[i][j] ++; v[i][j+1] ++; v[i][j+2] ++;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\nint main() {\n    int t; cin >> t;\n    while (t--) {\n        vector<int> num(9);\n        for (int i=0; i<9; ++i) cin >> num[i];\n        vector<char> color(9);\n        for (int i=0; i<9; ++i) cin >> color[i];\n\n        vector<vector<int> > v(3, vector<int>(9));\n        for (int i=0; i<9; ++i) {\n            if (color[i] == 'R') {\n                v[0][num[i]] ++;\n            } else if (color[i] == 'G') {\n                v[1][num[i]] ++;\n            } else if (color[i] == 'B') {\n                v[2][num[i]] ++;\n            }\n        }\n\n        cout << judge(v, 0) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\nint T; pair<int, int>x[9];\nint main() {\n\tcin >> T;\n\tfor (int i = 0; i < T; i++) {\n\t\tfor (int j = 0; j < 9; j++) { cin >> x[j].second; }\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tchar c; cin >> c;\n\t\t\tif (c == 'R') { x[j].first = 0; }\n\t\t\tif (c == 'G') { x[j].first = 1; }\n\t\t\tif (c == 'B') { x[j].first = 2; }\n\t\t}\n\t\tsort(x, x + 9); bool OK = true;\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tif (x[j * 3].first != x[j * 3 + 1].first) { OK = false; }\n\t\t\tif (x[j * 3 + 1].first != x[j * 3 + 2].first) { OK = false; }\n\t\t\tif (x[j * 3].second != x[j * 3 + 1].second) { goto E; }\n\t\t\tif (x[j * 3 + 1].second != x[j * 3 + 2].second) { OK = false; }\n\t\t\tgoto F; E:;\n\t\t\tif (x[j * 3].second + 1 != x[j * 3 + 1].second) { OK = false; }\n\t\t\tif (x[j * 3 + 1].second + 1 != x[j * 3 + 2].second) { OK = false; }\n\t\tF:;\n\t\t}\n\t\tif (OK == true) { cout << \"1\" << endl; }\n\t\telse { cout << \"0\" << endl; }\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b && a == c) return true;\n\telse return false;\n}\n\nbool is_sequense(int a, int b, int c){\n\tif (a == b - 1 && a == c - 2) return true;\n\telse return false;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequense(a, b, c);\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2]) \n\t\t\t&& is_good_set(card[3], card[4], card[5])\n\t\t\t&& is_good_set(card[6], card[7], card[8]);\n}\n\nint win(){\n\tsort(card, card + 9);\n\tdo {\n\t\tif (is_all_good_set()) return 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; t++){\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\") card[i] += 20;\n//\t\t\tcout << card[i];\n\t\t}\n\t}\n\tcout << win() << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tint num[9];\n\t\tint cnt=0;\n\t\tint card[3][15]={0};\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin >> num[i];\n\t\t}\n\t\tint c;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tchar color; cin >> color;\n\t\t\tif(color == 'R') c = 0;\n\t\t\telse if(color == 'B') c = 1;\n\t\t\telse c = 2;\n\t\t\tcard[c][num[i]]++;\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=1;j<=9;j++){\n\t\t\t\tif(card[i][j] >= 3) {\n\t\t\t\t\tcard[i][j] -= 3;\n\t\t\t\t\tcnt++;\n\t\t\t\t\t//cout << \"A\" << endl;\n\t\t\t\t}\n\t\t\t\twhile(card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0){\n\t\t\t\t\tcard[i][j]--; card[i][j+1]--; card[i][j+2]--;\n\t\t\t\t\tcnt++;\n\t\t\t\t\t//cout << \"B\" << endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cnt==3) cout << \"1\" << endl;\n\t\telse cout << \"0\" << cnt << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n \nint main(){\n  int n;\n  cin>>n;\n  int cards[9];\n  char color;\n  int num[3][9];\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++)\n      for(int k=0;k<9;k++)num[j][k]=0;\n    for(int j=0;j<9;j++) cin>>cards[j];\n    for(int j=0;j<9;j++){\n      cin>>color;\n      if(color=='R'){\n    num[0][cards[j]]++;\n      }else if(color=='G'){\n    num[1][cards[j]]++;\n      }else{\n    num[2][cards[j]]++;\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<7;j++){\n    if(num[k][j]>=3)num[k][j]-=3;\n    while(num[k][j]>0 && num[k][j+1]>0 && num[k][j+2]>0){\n      num[k][j]--;num[k][j+1]--;num[k][j+2]--;\n    }\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    if(num[k][j]>=3)num[k][j]-=3;\n      }\n    }\n    bool ans=true;\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    //cout << num[k][j] << \" \" ;\n    if(num[k][j]!=0){\n      ans=false;\n      break;\n    }\n      }\n      //cout << endl;\n    }\n    if(ans==true) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nint d[9];\nchar c[9], buf[2];\nbool used[9];\n\nbool dfs(int p, char b, int cnt, bool r) {\n\tbool ok = true;\n\trep(i, 9)ok &= used[i];\n\tif (ok)return true;\n\tok = false;\n\tif (cnt == 3) {\n\t\tok = true;\n\t\tcnt = 0;\n\t}\n\trep(i, 9) {\n\t\tif (!used[i] && (ok || c[i] == b)) {\n\t\t\tif (ok || (r&&d[i] == p + 1) || (!r&&d[i] == p)) {\n\t\t\t\tused[i] = true;\n\t\t\t\tif (dfs(d[i], c[i], cnt + 1, r))return true;\n\t\t\t\tif (ok) {\n\t\t\t\t\tif (dfs(d[i], c[i], cnt + 1, !r))return true;\n\t\t\t\t}\n\t\t\t\tused[i] = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main() {\n\tint n; scanf(\"%d\", &n);\n\trep(i, n) {\n\t\trep(j, 9)scanf(\"%d\", &d[j]);\n\t\trep(j, 9) {\n\t\t\tscanf(\"%s\", buf);\n\t\t\tc[j] = buf[0];\n\t\t}\n\t\tmemset(used, 0, sizeof(used));\n\t\tprintf(\"%d\\n\", dfs(0, 0, 3, 0));\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[9];\n\nbool is_same_number(int a,int b,int c){\n  if(a==b && b==c) return true;\n  else return false;\n}\n\nbool is_sequence(int a,int b,int c){\n  if((a+2)==(b+1) && (b+1)==c) return true;\n  else return false;\n}\n\nbool is_good_set(int a,int b,int c){\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win(){\n  do{\n    if(is_all_good_set()==1)return 1;\n  }while(next_permutation(card,card+9));\n  return 0;\n}\n\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    //for (auto e:card) cout << e;\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if(color==\"G\"){\n        card[i]+=10;\n      }\n      else if(color==\"B\"){\n        card[i]+=20;\n      }\n    }\n    //for (auto e:card) cout << e;\n    //ここまででカード列生成\n    sort(card,card+9);\n    cout << win() << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9];\n  pair<char, int> card[9];\n  int n;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second; \n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n    }\n\n\n    sort(card, card+9);\n    \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n    \n      for(int i = 0 ; i < 9 ; i += 3){\n\tif(card[i].first == card[i+1].first && card[i].first == card[i+2].first && card[i+1].first == card[i+2].first){\n\t  if(card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second && card[i+1].second+1 == card[i+2].second ||\n\t     card[i].second == card[i+1].second && card[i].second == card[i+2].second && card[i+1].second == card[i+2].second){\n\t    flag[i] = true;\n\t  }\n\t}\t\n      }\n      \n      if(flag[0] && flag[3] && flag[6]){\n\tcout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "public class Main{\n if \n\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;main(){int n,i,j,p[9];char c;for(cin>>n;n;n--){int h[32]={0};for(i=0;i<9;cin>>p[i++]);for(i=0;i<9;i++){cin>>c;if(c==71)p[i]+=10;if(c==66)p[i]+=20;}for(i=0;i<9;h[p[i++]]++);for(i=0;i<30;i++)while(h[i]%3)for(j=0;j<3;j++)h[i+j]--;for(i=0;i<30&&h[i]>=0;i++);cout<<(i-30?0:1)<<endl;}}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES \n#include<iomanip> \n#include<cmath>  \n#include<iostream>\n#include<fstream>\n#include<vector>\n#include<algorithm>\n#include<numeric>\n#include<bitset>\n#include<map>\n#include<unordered_map>\n#include<set>\n#include<unordered_set>\n#include<queue>\n#include<deque>\n#include<stack>\nusing namespace std;\ntypedef long long ll;\n#define repi(i,a,b) for(ll i = (ll)(a) ; i < (ll)(b) ; i++)\n#define repd(i,a,b) for(ll i = (ll)(a) ; i > (ll)(b) ; i--)\n#define rd(x) cin >> x\n#define wr(x)  cout << x\n#define wrln(x) cout << x << endl\n#define wl() cout << endl\nconst ll MAX_10p5 = 100010;\nconst ll MAX_10p9 = 1000000010;\nconst ll MAX_10p18 = 1000000000000000010;\nconst ll MOD = 1000000007;\nconst ll m4x[4] = { 1,0,-1,0 };\nconst ll m4y[4] = { 0,1,0,-1 };\nconst ll m8x[8] = { 1,1,0,-1,-1,-1,0,1 };\nconst ll m8y[8] = { 0,1,1,1,0,-1,-1,-1 };\nconst ll m9x[9] = { 1,1,0,-1,-1,-1,0,1,0 };\nconst ll m9y[9] = { 0,1,1,1,0,-1,-1,-1,0 };\n\nstruct edge {\n\tll from, to, cost;\n\tbool operator<(const edge& right) const {\n\t\treturn cost < right.cost;\n\t}\n};\nstruct point {\n\tll x, y;\n\tbool operator<(const point& right) const {\n\t\treturn x == right.x ? y < right.y : x < right.x;\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////////////////\n\nint main() {\n\tconst ll R = 0, G = 1, B = 2;\n\tll T;\n\trd(T);\n\trepi(I, 0, T) {\n\t\tll cards[3][10] = {};\n\t\tll inputINT[10] = {};\n\t\tll count[3] = {};\n\t\tll ans = 0;\n\t\trepi(i, 0, 9) rd(inputINT[i]);\n\t\trepi(i, 0, 9) {\n\t\t\tchar ch;\n\t\t\trd(ch);\n\t\t\tif (ch == 'R') {\n\t\t\t\tcards[R][count[R]] = inputINT[i];\n\t\t\t\tcount[R]++;\n\t\t\t}\n\t\t\telse if (ch == 'G') {\n\t\t\t\tcards[G][count[G]] = inputINT[i];\n\t\t\t\tcount[G]++;\n\t\t\t}\n\t\t\telse if (ch == 'B') {\n\t\t\t\tcards[B][count[B]] = inputINT[i];\n\t\t\t\tcount[B]++;\n\t\t\t}\n\t\t}\n\t\tif (count[R] % 3 == 0 && count[G] % 3 == 0 && count[B] % 3 == 0) {\n\t\t\tll c = 0;\n\t\t\trepi(i, 0, 3) {\n\t\t\t\tsort(cards[i], cards[i] + count[i]);\n\t\t\t\tdo {\n\t\t\t\t\tbool flag[3] = {};\n\t\t\t\t\trepi(j, 0, count[i] / 3) {\n\t\t\t\t\t\tif ((cards[i][j * 3] == cards[i][j * 3 + 1] && cards[i][j * 3 + 1] == cards[i][j * 3 + 2])\n\t\t\t\t\t\t\t|| (cards[i][j * 3] == cards[i][j * 3 + 1] - 1 && cards[i][j * 3] == cards[i][j * 3 + 2] - 2)) {\n\t\t\t\t\t\t\tflag[j] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbool judge = true;\n\t\t\t\t\trepi(j, 0, count[i] / 3) judge &= flag[j];\n\t\t\t\t\tif (judge) {\n\t\t\t\t\t\tc += count[i] / 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} while (next_permutation(cards[i], cards[i] + count[i]));\n\t\t\t\tif (c == 3) {\n\t\t\t\t\t/*\n\t\t\t\t\trepi(k, 0, 3) {\n\t\t\t\t\t\trepi(l, 0, 9) {\n\t\t\t\t\t\t\tcout << cards[k][l] << \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t\twl();\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tans = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twrln(ans);\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c) {\n\tif(a == b && b == c) return true;\n\telse return false;\n}\n\nbool is_sequence(int a, int b, int c) {\n\tif(a+2 == c && b+1 == c) return true;\n\telse return false;\n}\n\nbool is_good_set(int a, int b, int c) {\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n\tif(is_good_set(card[0], card[1], card[2])) {\n\t\tif(is_good_set(card[3], card[4], card[5])) {\n\t\t\tif(is_good_set(card[6], card[7], card[8])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn false;\n\t}\n\treturn false;\n}\n\nint win() {\n\tsort(card,card+9);\n\tdo{\n\t\tif(is_all_good_set()) return 1; \n\t}while(next_permutation(card, card+9));\n\treturn 0;\n}\n\nint main() {\n\tcin >> T;\n\tfor(int t = 0; t < T; t++) {\n\t\tfor(int i = 0; i < 9; i++) {\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor(int i = 0; i < 9; i++) {\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") card[i] += 10;\n\t\t\telse if(color == \"B\") card[i] += 20;\n\t\t}\n\t\tcout << win() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n\n#define NUMBER 10\n#define CARD_NUM 9\n#define COLOR_NUM 3\n\nusing namespace std;\n\nconst char *color = \"RGB\";\n\nbool checkSet(int *card, int num){\n  int numnum[NUMBER] = {0,};\n  for(int i = 0; i < num; ++i){\n    numnum[ card[i] ]++;\n  }\n  for(int i = 1; i < NUMBER-2; ++i){\n    if( numnum[ i ] >= 1 && numnum[i+1] >= 1 && numnum[i+2] >= 1 ){\n      numnum[i]--;\n      numnum[i+1]--;\n      numnum[i+2]--;\n      --i;\n    }\n  }\n  for(int i = 1; i < NUMBER; ++i){\n    if( numnum[ i ] == 3 ){\n      numnum[ i ] -= 3;\n    }\n  }\n\n  for(int i = 1; i < NUMBER; ++i){\n    if( numnum[i] > 0 ) return false;\n  }\n  return true;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; ++i){\n    bool win = true;\n    int ccardnum[COLOR_NUM]={0,};\n    int card[CARD_NUM];\n    int ccard[COLOR_NUM][CARD_NUM];\n    char cardcolor[CARD_NUM];\n\n    for(int j = 0; j < CARD_NUM; ++j)\n      cin >> card[j];\n    for(int j = 0; j < CARD_NUM; ++j)\n      cin >> cardcolor[j];\n\n    for(int k = 0; k < COLOR_NUM; ++k){\n      for(int j = 0; j < CARD_NUM; ++j){\n\tif( cardcolor[j] == color[k] ){\n\t  ccard[k][ccardnum[k]] = card[j];\n\t  ccardnum[k]++;\n\t}\n      }\n    }\n    for(int k = 0; k < COLOR_NUM; ++k){\n      if( !checkSet( ccard[k], ccardnum[k] ) ){\n\twin = false;\n\tbreak;\n      }\n    }\n\n    if( win ) cout << '1';\n    else cout << '0';\n    cout << endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<deque>\n#include<vector>\n#include<map>\nusing namespace std;\n\nint main(){\n  int T;\n  deque<int> R,B,G;\n  int inx[10];\n  char iny;\n  map<int,int> Ri,Bi,Gi;\n\n\n\n  cin >> T;\n  while(T-- > 0){\n    R.clear();B.clear();G.clear();\n    Ri.clear();Bi.clear();Gi.clear();\n    for(int i=0;i<9;i++){\n      cin >> inx[i];\n    }\n    for(int j=0;j<9;j++){\n      cin >> iny;\n      if(iny == 'R'){\n\tR.push_back(inx[j]);\n\tRi[inx[j]]++;\n      }\n      else if(iny == 'B'){\n\tB.push_back(inx[j]);\n\tBi[inx[j]]++;\n      }\n      else if(iny == 'G'){\n\tG.push_back(inx[j]);\n\tGi[inx[j]]++;\n      }\n    }\n\n    sort(R.begin(),R.end());\n    sort(B.begin(),B.end());\n    sort(G.begin(),G.end());\n\n    int tp;\n    for(int i=0;i<3;i++){\n      if(R.size() < 3)break;\n      tp = R.front();\n      if((Ri[tp+1]>0 && Ri[tp+2]>0)){\n\tR.pop_front();\n\tdeque<int>::iterator Rit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+1 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+2 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRi.clear();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n      else if(Ri[tp] >= 3){\n\tR.pop_front();R.pop_front();R.pop_front();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n\n    }\n\n\n for(int i=0;i<3;i++){\n   if(B.size() < 3)break;\n      tp = B.front();\n      if((Bi[tp+1]>0 && Bi[tp+2]>0)){\n\tB.pop_front();\n\tdeque<int>::iterator Bit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+1 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+2 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBi.clear();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n      else if(Bi[tp] >= 3){\n\tB.pop_front();B.pop_front();B.pop_front();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n    }\n\n for(int i=0;i<3;i++){\n   if(G.size() < 3)break;\n      tp = G.front();\n      if((Gi[tp+1]>0 && Gi[tp+2]>0)){\n\tG.pop_front();\n\tdeque<int>::iterator Git = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+1 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGit = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+2 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGi.clear();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n      else if(Gi[tp] >= 3){\n\tG.pop_front();G.pop_front();G.pop_front();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n\n    }\n\n\n\n if(R.empty() && G.empty() && B.empty() )cout << \"1\" << endl;\n else cout << \"0\" << endl;\n\n\n\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nbool is_sequence(int i, int j, int k) {\n\treturn j == i + 1 && k == j + 1;\n}\n\nbool is_same_number(int i, int j, int k) {\n\treturn i == j && j == k;\n}\n\nbool is_good_set(int i, int j, int k) {\n\treturn is_sequence(i, j, k) || is_same_number(i, j, k);\n}\n\nbool is_all_good_set(vector<int> v) {\n\treturn is_good_set(v[0], v[1], v[2]) && is_good_set(v[3], v[4], v[5]) && is_good_set(v[6], v[7], v[8]);\n}\n\nint win(vector<int> v) {\n\tsort(v.begin(), v.end());\n\n\tdo {\n\t\tif (is_all_good_set(v)) {\n\t\t\treturn 1;\n\t\t}\n\t} while (next_permutation(v.begin(), v.end()));\n\n\treturn 0;\n}\n\nsigned main() {\n\tint t;\n\tvector<int> card(9);\n\tcin >> t;\n\tvector<int> res(t);\n\n\tfor (int j = 0; j < t; j++) {\n\t\tfor (int i = 0; i < 9; i++) {\n\t\t\tcin >> card[i];\n\t\t}\n\n\t\tfor (int i = 0; i < 9; i++) {\n\t\t\tchar s;\n\t\t\tcin >> s;\n\t\t\tif (s == 'R') card[i] += 10;\n\t\t\telse if (s == 'G') card[i] += 20;\n\t\t\telse if (s == 'B') card[i] += 30;\n\t\t}\n\n\t\tres[j] = win(card);\n\t}\n\n\tfor (auto e:res) cout << e << endl;\n}\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\nint flag[11][3];\nint main(){\n\tint n;\n\tcin>>n;\n\tint a[11]={0};\n\tchar b[11];\n\twhile(n--){\n\t\tfor(int i =0;i <11;i++){\n\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\tflag[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int i =0;i < 9;i++){\n\t\t\tcin>>a[i];\n\t\t}\n\t\tfor(int i =0;i <9;i++){\n\t\t\tcin>>b[i];\n\t\t}\n\t\t/*rep(i,9)cout <<\" \"<<b[i];\n\t\tcout <<endl;*/\n\t\tfor(int i =0;i <9;i++){\n\t\t\tif(b[i]=='R'){\n\t\t\t\tflag[a[i]][0]++;\n\t\t\t}else if(b[i]=='G'){\n\t\t\t\tflag[a[i]][1]++;\n\t\t\t}else{\n\t\t\t\tflag[a[i]][2]++;\n\t\t\t}\n\t\t}\n\t\tbool ok[100]={false};\n\t\tint pos = 0;\n\t\twhile(true){\n\t\t\tbool test =false;\n\t\t\tfor(int i =1;i <=9;i++){\n\t\t\t\tfor(int j =0;j <3;j++){\n\t\t\t\t\tif(i<=7&&flag[i][j]&&flag[i+1][j]&&flag[i+2][j]){\n\t\t\t\t\t\tok[pos++]=true;\n\t\t\t\t\t\tflag[i][j]--;\n\t\t\t\t\t\tflag[i+1][j]--;\n\t\t\t\t\t\tflag[i+2][j]--;\n\t\t\t\t\t\ttest =true;\n\t\t\t\t\t}\n\t\t\t\t\tif(pos==3)break;\n\t\t\t\t\tif(flag[i][j]>=3){\n\t\t\t\t\t\tflag[i][j]-=3;\n\t\t\t\t\t\tok[pos++]=true;\n\t\t\t\t\t\ttest =true;\n\t\t\t\t\t}\n\t\t\t\t\tif(pos==3)break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!test)break;\n\t\t}\n\t\tbool suc =true;\n\t\tfor(int i =0;i <3;i++){\n\t\t\tif(!ok[i]){\n\t\t\t\tsuc =false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(suc){\n\t\t\tcout <<1<<endl;\n\t\t}else{\n\t\t\tcout <<0<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n\nusing namespace std;\n\nint comp(const void *_a, const void *_b){\n\tchar *a, *b;\n\ta = (char*)_a;\n\tb = (char*)_b;\n\tif(a[1] != b[1]) return a[1] - b[1];\n\telse return a[0]-b[0];\n}\n\nbool makeset(char c[][2], int n){\n\tfor(int i = 0; i < n-2; i++){\n\t\tfor(int j = i+1; j < n-1; j++){\n\t\t\tfor(int k = j+1; k < n; k++){\n\t\t\t\tif(c[i][1] == c[k][1]){\n\t\t\t\t\tif(c[i][0] == c[k][0] || (c[i][0]+1 == c[j][0] && c[j][0]+1 == c[k][0])){\n\t\t\t\t\t\tif(n == 3) return true;\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tchar _c[n-3][2];\n\t\t\t\t\t\t\tint idx = 0;\n\t\t\t\t\t\t\tint _idx = 0;\n\t\t\t\t\t\t\twhile(idx < n){\n\t\t\t\t\t\t\t\tif(idx != i && idx != j && idx != k){\n\t\t\t\t\t\t\t\t\t_c[_idx][0] = c[idx][0];\n\t\t\t\t\t\t\t\t\t_c[_idx][1] = c[idx][1];\n\t\t\t\t\t\t\t\t\t_idx++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tidx++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(makeset(_c, n-3)) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint main(){\n\tint t;\n\tcin >> t;\n\twhile(t--){\n\t\tchar c[9][2];\n\t\tfor(int i = 0; i < 9; i++) cin >> c[i][0];\n\t\tfor(int i = 0; i < 9; i++) cin >> c[i][1];\n\t\tqsort(c,9,sizeof(c[0]),comp);\n\t\tcout << (int)makeset(c,9) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\ntypedef vector<int> vi;\n\nvector<int> num(9),use(9);\nvector<char> col(9);\n\nint rec(int d){\n  if(d==9){    \n    rep(i,9){\n      rep(j,9){\n\tif(use[i]==use[j] && col[i]!=col[j])return 0;\n      }\n    }\n\n    vector< vi > sets(3);    \n    rep(i,9){\n      sets[use[i]].push_back(num[i]);\n    }\n    rep(i,3)sort(sets[i].begin(),sets[i].end());\n\n    rep(i,3){\n      if(sets[i].size()!=3)return 0;\n      if(sets[i][0] == sets[i][1] && sets[i][1] == sets[i][2])continue;\n      if(sets[i][0]+1 == sets[i][1] && sets[i][1]+1 == sets[i][2])continue;\n      return 0;\n    }\n    return 1;\n  }\n\n  for(int i=0;i<3;i++){\n    use[d] = i;\n    if(rec(d+1))return 1;\n  }\n  return 0;\n}\n\nint main(){\n  int t;\n  cin >> t;\n  while(t--){\n    rep(i,9)cin >> num[i];\n    rep(i,9)cin >> col[i];\n\n    cout << rec(0) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nchar cor[4]=\"RGB\";\nint main(){\n    int T;\n    scanf(\"%d\\n\",&T);\n    int ns[9];\n    char c;\n    for(int ix=0;ix<T;ix++){\n        vector<int> cs[3];\n        for(int i=0;i<9;i++){\n            scanf(\"%d\",ns+i);\n        }\n        for(int i=0;i<9;i++){\n            scanf(\" %c\",&c);\n            for(int j=0;j<3;j++){\n                if(c==cor[j]) cs[j].push_back(ns[i]);\n            }\n        }\n        bool is=true;\n        for(auto ar : cs) if(ar.size()%3>0) is=false;\n        if(!is){\n            printf(\"0\\n\");\n            continue;\n        }\n        for(auto ar : cs){\n            sort(begin(ar),end(ar));\n            bool isex=false;\n            if(ar.size()==0) isex=true;\n            do{\n                bool is2=true;\n                for(int i=0;i<ar.size()/3;i++){\n                    if(!((ar[i*3]==ar[i*3+1] && ar[i*3]==ar[i*3+2]) || (ar[i*3]+1==ar[i*3+1] && ar[i*3]+2==ar[i*3+2]))) is2=false;\n                }\n                if(is2) isex=true;\n            }while(next_permutation(begin(ar),end(ar)));\n            if(!isex) is=false;\n        }\n        if(is) printf(\"1\\n\");\n        else printf(\"0\\n\");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nstruct card{\n\tint n;\n\tchar w;\n};\n\nbool comp(const card& cd1, const card& cd2)\n{\n\treturn cd1.n < cd2.n;\n}\n\nint main()\n{\n\tint n, b, r, g;\n\t\n\twhile(cin >> n){\n\t\twhile(n--){\n\t\t\tcard cd[10];\n\t\t\tbool f[10], f2 = true;\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tcin >> cd[i].n;\n\t\t\t}\n\t\t\tb = r = g = 0;\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tcin >> cd[i].w;\n\t\t\t\tif(cd[i].w == 'R'){\n\t\t\t\t\tr++;\n\t\t\t\t} else if(cd[i].w == 'B'){\n\t\t\t\t\tb++;\n\t\t\t\t} else {\n\t\t\t\t\tg++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r%3 != 0 || b%3 != 0 || g%3 != 0){\n\t\t\t\tcout << 0 << endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfill(f, f+9, true);\n\t\t\tsort(cd, cd+9, comp);\n\t\t\t\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tif(f[i]){\n\t\t\t\t\tf[i] = false;\n\t\t\t\t\tb = 1;\n\t\t\t\t\tfor(int j = i+1; j < 9; j++){\n\t\t\t\t\t\tif(cd[i].w == cd[j].w && f[j]){\n\t\t\t\t\t\t\tif(cd[i].n == cd[j].n){\n\t\t\t\t\t\t\t\tb++;\n\t\t\t\t\t\t\t\tfor(int k = j+1; k < 9; k++){\n\t\t\t\t\t\t\t\t\tif(cd[i].w == cd[k].w && cd[i].n == cd[i].n && f[k]){\n\t\t\t\t\t\t\t\t\t\tb++;\n\t\t\t\t\t\t\t\t\t\tf[k] = false;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tf[j] = false;\n\t\t\t\t\t\t\t\tif(b != 3){\n\t\t\t\t\t\t\t\t\tf2 = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if(cd[i].n+b == cd[j].n){\n\t\t\t\t\t\t\t\tb++;\n\t\t\t\t\t\t\t\tfor(int k = j+1; k < 9; k++){\n\t\t\t\t\t\t\t\t\tif(cd[i].w == cd[k].w && cd[i].n+b == cd[k].n && f[k]){\n\t\t\t\t\t\t\t\t\t\tb++;\n\t\t\t\t\t\t\t\t\t\tf[k] = false;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tf[j] = false;\n\t\t\t\t\t\t\t\tif(b != 3){\n\t\t\t\t\t\t\t\t\tf2 = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(f2){\n\t\t\t\tcout << 1 << endl;\n\t\t\t} else {\n\t\t\t\tcout << 0 << endl;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void){\n\tint card[9], n, i, j, k, s[3][9];\n\tchar c, color[4] ={\"RGB\"};\n\tscanf(\"%d\",&n);\n\tfor(i = 0;i < n;i++){\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%d\",&card[j]);\n\t\t\tcard[j]--;\n\t\t}\n\t\tgetchar();\n\t\tmemset(s,0,sizeof(s));\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%c\",&c);\n\t\t\tgetchar();\n\t\t\tfor(k = 0;k < 3;k++)\n\t\t\t\tif(color[k] == c) s[k][card[j]]++;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 7;k++){\n\t\t\t\tif(s[j][k] && s[j][k + 1] && s[j][k + 2])\n\t\t\t\t\ts[j][k]--,s[j][k + 1]--,s[j][k + 2]--;\n\t\t\t}\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k] >= 3) s[j][k] %= 3;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k]) break;\n\t\t\tif(k != 9) break;\n\t\t}\n\t\tif(j == 3)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t\tprintf(\"0\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<string>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<set>\n#include<climits>\nusing namespace std;\ntypedef vector<string>vs;\ntypedef vector<int>vi;\ntypedef vector<vi>vvi;\ntypedef vector<double>vd;\ntypedef pair<int,int>pii;\ntypedef long long ll;\ntypedef pair<ll,ll>pll;\ntypedef vector<ll>vl;\ntypedef pair<int,pii>piii;\n#define rrep(i,x,n) for(int i=(x);i<(n);++i)\n#define rep(i,x) rrep(i,0,(x))\n#define fi first\n#define se second\n#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)\n#define all(c) (c).begin(),(c).end()\n#define rall(c) (c).rbegin(),(c).rend()\n#define pb push_back\n#define maxs(a,b) (a)=max(a,b)\n#define mins(a,b) (a)=min(a,b)\n///#include<sstream>\n///#include<cstring>\n///#include<stack>\n///#include<complex>\n\ntypedef pair<int,char>pic;\n\npic hand[9];\n\nbool check(pic a,pic b,pic c){\n    if(a.se!=b.se||b.se!=c.se||c.se!=a.se)return false;\n    vector<pic>V;\n    V.pb(a);V.pb(b);V.pb(c);\n    sort(all(V));\n    if(a.fi==b.fi&&b.fi==c.fi)return true;\n    if(V[0].fi+1==V[1].fi&&V[1].fi+1==V[2].fi)return true;\n\n    return false;\n}\n\nbool solve(){\n    sort(hand,hand+9);\n    do{\n        bool flag=true;\n        rep(i,3){\n            if(!check(hand[i*3],hand[i*3+1],hand[i*3+2])){\n                flag=false;\n                break;\n            }\n        }\n        if(flag)return true;\n\n    }while(next_permutation(hand,hand+9));\n    return false;\n}\n\nint main(){\n    int N;\n    scanf(\"%d\",&N);\n    while(N--){\n        rep(i,9)scanf(\"%d\",&hand[i].fi);\n        rep(i,9)scanf(\" %c\",&hand[i].se);\n        puts((solve()?\"1\":\"0\"));\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <queue>\n#include <map>\n#include <sstream>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define EPS 1e-9\nint n;\nint card[3][10],num[10];\nchar co[10];\n\nbool ok(){\n\tint ret = 0;\n\trep(i,3){\n\t\tfor(int j=1; j<=7; j++){\n\t\t\tif( card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0 ){\n\t\t\t\tret++;\n\t\t\t\tcard[i][j]--; card[i][j+1]--; card[i][j+2]--;\n\t\t\t}\n\t\t}\n\t\tfor(int j=1; j<=9; j++){\n\t\t\tif( card[i][j]>=3 ){\n\t\t\t\tret++;\n\t\t\t\tcard[i][j] -= 3;\n\t\t\t}\n\t\t}\n\t}\n\t//printf(\"ret:%d\\n\",ret);\n\treturn ret==3;\n}\nint main(){\n\tcin>>n;\n\twhile(n--){\n\t\tmemset(card,0,sizeof(card));\n\t\trep(i,9)cin>>num[i];\n\t\trep(i,9)cin>>co[i];\n\t\trep(i,9){\n\t\t\tint k = co[i]=='R'?0:co[i]=='G'?1:2;\n\t\t\tcard[k][num[i]]++;\n\t\t}\n\t\t//rep(i,9)printf(\"%d \",num[i]);puts(\"\");\n\t\t//rep(i,9)printf(\"%c \",co[i]);puts(\"\");\n\t\t\n\t\tputs(ok()?\"1\":\"0\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint T,card[16];\nint win();\nbool is_good_set(int,int,int);\nbool is_same_number(int,int,int);\nbool is_sequence(int,int,int);\nbool is_good_set();\nbool is_all_good_set();\n\nint main(){\n  cin >> T;\n  for(int t=0;t<T;t++){\n    for(int i=0;i<9;i++){\n      cin >> card[i];\n    }\n    string color;\n    for(int i=0;i<9;i++){\n      cin>>color;\n      if(color==\"G\") card[i]+=10;\n      else if(color==\"B\") card[i]+=20;\t\t\t\t      \n    }\n    if(win()){\n      cout<<1<<endl;\n    }else{\n      cout<<0<<endl;\n    }\n  }\n  return 0;\n}\n\nbool is_good_set(int a,int b,int c){\n  return is_same_number(a,b,c)||is_sequence(a,b,c);\n}\n\nbool is_same_number(int a,int b,int c){\n  return a==b&&b==c;\n}\nbool is_sequence(int a,int b,int c){\n  return a+2==c&&b+1==c;\n}\n\nbool is_all_good_set(){\n  return is_good_set(card[0],card[1],card[2])&&is_good_set(card[3],card[4],card[5])&&is_good_set(card[6],card[7],card[8]);\n}\nint win(){\n  sort(card,card+9);\n  do{\n    if(is_all_good_set()){\n      return 1;\n    }\n  }while(next_permutation(card,card+9));\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint main(){int n,i,j,p[9],h[32];char c;\nfor(cin>>n;n>0;n--){\n for(i=0;i<30;i++)h[i]=0;\n for(i=0;i<9;i++)cin>>p[i];\n for(i=0;i<9;i++){cin>>c;if(c=='G')p[i]+=10;if(c=='B')p[i]+=20;}\n for(i=0;i<9;i++)h[p[i]]++;\n for(i=0;i<30;i++)while(h[i]%3)for(j=0;j<3;j++)h[i+j]--;\n for(i=0;i<30;i++)if(h[i]<0)break;\n if(i-30)cout<<0<<endl;else cout<<1<<endl;}\nreturn 0;}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tint card[3][10];\n\n\tcin>>n;\n\n\twhile(n--){\n\t\t\t\n\t\tint a[10];\n\t\t\t\n\t\tmemset(card, 0, sizeof(card));\n\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin>>a[i];\n\t\t}\n\n\t\tfor(int i=0; i<9; ++i){\n\n\t\t\tchar b;\n\t\t\tcin>>b;\n\t\t\tcard[b=='R'?0:b=='G'?1:2][a[i]]++;\n\t\t}\n\n\t\tint cnt = 0;\n\n\t\tfor(int c=0; c<3; ++c){\n\t\t\tfor(int k=1; k<=9; ++k){\n\t\t\t\t\n\t\t\t\tcnt += card[c][k]/3;\n\t\t\t\tcard[c][k] %= 3;\n\t\t\t\t\n\t\t\t\tif(k<=7){\n\t\t\t\t\t\n\t\t\t\t\tint sub = min(card[c][k], min(card[c][k+1], card[c][k+2]));\n\n\t\t\t\t\tfor(int i=0; i<3; ++i){\n\t\t\t\t\t\tcard[c][k+i] -= sub;\n\t\t\t\t\t}\n\n\t\t\t\t\tcnt += sub;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout << (cnt>=3) << endl;\n\t}\t\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define vi vector<int>\n#define pb push_back\n#define INF 999999999\n//#define INF (1LL<<59)\n \nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tvector<int> a(9);\n\t\tvector<char> c(9);\n \n\t\trep(i,9)cin>>a[i];\n\t\trep(i,9)cin>>c[i];\n \n\t\tint v[3][9]={};\n\t\trep(i,9){\n\t\t\tif(c[i]=='R')v[0][a[i]-1]++;\n\t\t\tif(c[i]=='G')v[1][a[i]-1]++;\n\t\t\tif(c[i]=='B')v[2][a[i]-1]++;\n\t\t}\n \n\t\tint count=0;\n\t\trep(i,3){\n\t\t\trep(j,9){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tcount+=v[i][j]/3;\n\t\t\t\tv[i][j] -= v[i][j]/3*3;\n\t\t\t}\n\t\t}\n\t\trep(i,3){\n\t\t\trep(j,7){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tif(v[i][j] && v[i][j+1] && v[i][j+2] ){\n\t\t\t\t\tv[i][j]--,v[i][j+1]--,v[i][j+2]--;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(count==3)cout<<1<<endl;\n\t\telse cout<<0<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint main(void) {\n  int n;\n  int num[9];\n  char color[9];\n  int flag1, flag2, flag3;\n\n  cin >> n;\n  for(int a = 0 ; a < n ; a++) {\n    flag1 = 0; flag2 = 0; flag3 = 0;\n    for(int i = 0 ; i < 9 ; i++) {\n      cin >> num[i];\n    }\n    for(int i = 0 ; i < 9 ; i++) {\n      cin >> color[i];\n    }\n  \n    for(int i = 0 ; i < 9 ; i += 3) {\n    if(num[i] == num[i+1] - 1 && num[i+1] == num[i+2] - 1 && \n       color[i] == color[i+1] && color[i+1] == color[i+2]) {\n      \n      if(i == 0) flag1 = 1;\n      else if(i == 3) flag2 = 1;\n      else if(i == 6) flag3 = 1;\n    }\n\n    else if(num[i] == num[i+1] && num[i+1] == num[i+2] &&\n\t    color[i] == 'R' && color[i+1] == 'G' && color[i+2] == 'B') {\n      if(i == 0) flag1 = 1;\n      else if(i == 3) flag2 = 1;\n      else if(i == 6) flag3 = 1;\n    }\n\n    else if(num[i] == num[i+1] && num[i+1] == num[i+2] &&\n\t    color[i] == color[i+1] && color[i] == color[i+2] &&\n\t    color[i+1] == color[i+2]) {\n      if(i == 0) flag1 = 1;\n      else if(i == 3) flag2 = 1;\n      else if(i == 6) flag3 = 1;\n    }\n    \n    }\n    if(flag1 == 1 && flag2 == 1 && flag3 == 1) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <set>\nusing namespace std;\n\nint main(){\n  int n;\n  char c;\n  int card[9];\n  int hand[32];\n  cin >> n;\n  for(;n>0;n--){\n    for(int i=0;i<30;i++)\n      hand[i] = 0;\n    for(int i=0;i<9;i++){\n      cin >> card[i];\n    }\n    for(int i=0;i<9;i++){\n      cin >> c;\n      if (c=='G')\n\tcard[i] += 10;\n      if (c=='B')\n\tcard[i] += 10;\n    }\n    for(int i=0;i<9;i++)\n      hand[card[i]]++;\n    for(int i=0;i<30;i++){\n      while(hand[i]%3){\n\thand[i]--;\n\thand[i+1]--;\n\thand[i+2]--;\n      }\n    }\n    int chk;\n    for(chk=0;chk<30;chk++)\n      if (hand[chk]<0)\n\tbreak;\n    if (chk==30)\n      cout << 1 << endl;\n    else\n      cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<set>\n#include<vector>\n#include<algorithm>\n\n\nusing namespace std;\n\ntypedef pair<int,char> P;\n\nint main()\n{\n\tint T;\n\tcin>>T;\n\t\n\tfor(int t=0;t<T;t++){\n\t\tvector<P> vp(9);\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin>>vp[i].first;\n\t\t}\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin>>vp[i].second;\n\t\t}\n\t\t\n\t\tvector<int> order(9);\n\t\tfor(int i=0;i<9;i++) order[i]=i;\n\t\t\n\t\tbool ok=false;\n\t\tdo{\n\t\t\tint cnt=0;\n\t\t\tP card[3];\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\t\tcard[j]=vp[order[3*i+j]];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(card[0].second != card[1].second || card[1].second != card[2].second) continue;\n\t\t\t\tsort(card,card+3);\n\t\t\t\tif(card[0].first == card[1].first && card[1].first == card[2].first\n\t\t\t\t|| card[0].first == card[1].first-1 && card[1].first == card[2].first-1) cnt++;\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tif(cnt==3){ok=true; break;}\n\n\t\t}while(next_permutation(order.begin(),order.end()));\n\n\t\tif(ok) cout<<1<<endl;\n\t\telse cout<<0<<endl;\n\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<functional>\n#include<utility>\nusing namespace std;\n\n\npair<char,int> a[9];\n\n\nbool f(){\n\tchar c[]=\"RGB\";\n\tint f[3][12]={};\n\tfor(int i=0;i<9;i++)\n\t\tf[find(c,c+3,a[i].first)-c][a[i].second]++;\n\tfor(int i=0;i<3;i++){\n\t\tfor(int j=1;j<10;j++){\n\t\t\tif(f[i][j]<0)return false;\n\t\t\tf[i][j]%=3;\n\t\t\tfor(int k=2;k>=0;k--){\n\t\t\t\tf[i][j+k]-=f[i][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn f[3]==find_if(f[0],f[3],bind1st(not_equal_to<int>(),0));\n}\n\n\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin>>a[i].second;\n\t\t}\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcin>>a[i].first;\n\t\t}\n\t\tcout<<f()<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T,card[16];\n\nbool is_same_number( int a, int b, int c){\n  return a==b && b==c;\n}\n\nbool is_sequence( int a, int b, int c){\n  return a+2==b+1&&b+1==c;\n}\n\nbool is_good_set(int a,int b,int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set()) return 1;\n  } while( next_permutation(card, card+9) );\n  return 0;\n}\n\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i){\n      cin >> color;\n      if(color == \"G\")card[i] += 10;\n      else if (color == \"B\") card[i] +=20;\n    }\n    cout << win()  << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define vi vector<int>\n#define pb push_back\n#define INF 999999999\n//#define INF (1LL<<59)\n\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tvector<int> a(9);\n\t\tvector<char> c(9);\n\t\t\n\t\trep(i,9)cin>>a[i];\n\t\trep(i,9)cin>>c[i];\n\t\t\n\t\tvector<int> v[3];\n\t\trep(i,9){\n\t\t\tif(c[i]=='R')v[0].pb(a[i]);\n\t\t\tif(c[i]=='G')v[1].pb(a[i]);\n\t\t\tif(c[i]=='B')v[2].pb(a[i]);\n\t\t}\n\t\trep(i,3)sort(all(v[i]));\n\t\t\n\t\tint count=0;\n\t\trep(i,3){\n\t\t\tvector<int> &tmp = v[i];\n\t\t\tfor(int j=0;j<tmp.size();){\n\t\t\t\tif( j+2<tmp.size()&&(tmp[j]+2==tmp[j+1]+1&&tmp[j+1]+1&&tmp[j+2] || tmp[j]==tmp[j+1]&&tmp[j+1]==tmp[j+2]) ){\n\t\t\t\t\tcount++;\n\t\t\t\t\tj+=3;\n\t\t\t\t}else j++;\n\t\t\t}\n\t\t}\n\t\tif(count==3)cout<<1<<endl;\n\t\telse cout<<0<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nint T, card[16];\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b && b == c) return true;\n\telse return false;\n}\n\nbool is_sequence(int a, int b, int c){\n\tif (a == b + 1 && a == c + 2) return true;\n\telse return false;\n}\n\nbool is_all_good_set(int card[9]){\n\tif (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]))\n\t\treturn true;\n\telse return false;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\") card[i] += 20;\n\t\t}\n\t\tsort(card, card + 9);\n\t\tint judge = 0;\n\t\tdo{\n\t\t\tif (is_all_good_set(card))\n\t\t\t\tjudge = 1;\n\t\t} while (next_permutation(card, card + 9));\n\t\tcout << judge << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 10;\n\t\t\tif(color == \"B\") n[k] += 20;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\t// return 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <string>\n\nusing namespace std;\nint T;\nint card[8];\nstring color;\nbool judge;\n\nint is_win();\nbool is_all_good_set();\nbool is_good_set(int, int, int);\nbool is_same_number(int,int, int);\nbool is_sequence(int, int, int);\n\nint main(){\n  while(cin >> T){\n    \n\n    for (int i = 0; i < 9; ++i){\n      cin >> card[i];      \n    }\n\n    for (int i = 0; i < 9; ++i){\n      cin >> color;\n      if(color == \"B\") card[i] += 10;\n      else if (color == \"G\") {\n        card[i] += 20;\n      }\n    }\n\n    cout << is_win() << endl;\n\n  }\n\nreturn 0;\n\n}\n\nint is_win(){\n\n  do{\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n\n  return 0;\n}\n\nbool is_all_good_set(){\n\n  int judge;\n  for (int i = 0; i < 3; ++i)\n  {\n    judge += is_good_set(card[3*i], card[3*i+ 1], card[3*i + 2]);\n  }\n\n  if (judge == 3) return true;\n  else return false;\n}\n\n\nbool is_good_set(int a, int b, int c){\n\n   if(is_same_number(a,b,c) ||  is_sequence(a,b,c) ) return true;\n   else return false;\n\n}\n\nbool is_same_number(int a, int b, int c){\n\n  if(a == b == c) return true;\n  else return false;\n\n} \n\nbool is_sequence(int a, int b, int c){\n\n  if( a + 2 == b + 1 == c ) return true;\n  else return false ;\n\n}"
  },
  {
    "language": "C++",
    "code": "\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\ntypedef pair <int,string> P;\n#define num first\n#define col second\nint  c[3][10];\nP card[9];\n\nbool check2(vector <P> N) {\n  int cnt[3][10] = {};\n  for(int i=0;i<N.size();i++) \n    if(N[i].col == \"R\") cnt[0][N[i].num]++;\n    else if(N[i].col == \"G\") cnt[1][N[i].num]++;\n    else cnt[2][N[i].num]++;\n\n  for(int i=0;i<3;i++)\n    for(int j=1;j<=9;j++)\n      if(cnt[i][j] < 0) return false; \n      else if(cnt[i][j] > 0) {\n\tif(j >= 8) return false;\n\tcnt[i][j+1] -= cnt[i][j];\n\tcnt[i][j+2] -= cnt[i][j];\n\tcnt[i][j] = 0;\n      }\n  return true;\n}\n\nbool check(){\n  vector <P> flg;\n  for(int i=0;i<3;i++)\n    for(int j=0;j<=9;j++) \n      if(c[i][j] >=3){\n\tif(i == 0)flg.push_back(P(j,\"R\"));\n\telse if(i == 1) flg.push_back(P(j,\"G\"));\n\telse flg.push_back(P(j,\"B\"));\n      }\n\n  for(int i=0;i<(1<<flg.size());i++) {\n    vector <P> t;\n    int cnt[3] = {};\n    for(int j=0;j<9;j++) {\n      if((i&1) != 0 &&cnt[0]<3 && card[j].num == flg[0].num && card[j].col == flg[0].col)cnt[0]++;\n      else if((i&2) != 0 && cnt[1]<3 && card[j].num == flg[1].num && card[j].col == flg[1].col)cnt[1]++;\n      else if((i&4) != 0 && cnt[2]<3 &&card[j].num == flg[2].num && card[j].col == flg[2].col)cnt[2]++;\n      else t.push_back(card[j]);\n    }\n    if(check2(t) == true) return true;\n  } \n  return false;\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  for(int q=0;q<n;q++) {\n    for(int i=0;i<9;i++) cin >> card[i].num;\n    for(int i=0;i<9;i++) cin >> card[i].col;\n    for(int i=0;i<3;i++)\n      for(int j=0;j<=9;j++) c[i][j] = 0;\n\n    for(int i=0;i<9;i++) \n      if(card[i].col == \"R\") c[0][card[i].num]++;\n      else if(card[i].col == \"G\") c[1][card[i].num]++;\n      else c[2][card[i].num]++;\n    cout << check()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n\nint N;\nint n[11]={};\nchar ch;\ncin>>N;\nfor(int iii=0;iii<N;iii++){\nfor(int i=0;i<9;i++){\ncin>>n[i];\n}\nfor(int i=0;i<9;i++){\ncin>>ch;\nif(ch=='G')n[i]+=10;\nif(ch=='B')n[i]+=20;\n}\nsort(n,n+9);\nbool f1=false,f2=false,f3=false;\n/*\nfor(int i=0;i<9;i++)\n\tcout<<n[i];\ncout<<endl;\n*/\nif(n[0]==n[1]&&n[0]==n[2])f1=true;\nif(n[1]==n[0]+1&&n[2]==n[1]+1)f1=true;\n\nif(n[3]==n[4]&&n[3]==n[5])f2=true;\nif(n[4]==n[3]+1&&n[5]==n[4]+1)f2=true;\n\nif(n[6]==n[7]&&n[6]==n[8])f3=true;\nif(n[7]==n[6]+1&&n[8]==n[7]+1)f3=true;\nint g=0;\nif(f1&&f2&&f3)g=1;\ncout<<g<<endl;\n}\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<fstream>\n\n#define SIZE 9\n\nusing namespace std;\n\nvoid view(int A[],int n){\n\tfor(int i=0;i<n;i++){\n\t\tcout<<A[i]<<endl;\n\t}\n}\n\nint check(int kard[]){\n\tint k=0;\n\tfor(int i=0;i<SIZE;i+=3){\n\t\tif((kard[i]==kard[i+1] && kard[i+1] == kard[i+2] )||\n\t\t\t(kard[i]+1==kard[i+1] &&kard[i+1]==kard[i+2]-1)){\n\t\t}else{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint kard[SIZE];\n\tint n;\n\tstring color;\n\tint ans;\n\n\tcin>>n;\n\twhile(n--){\n\t\tfor(int i=0;i<SIZE;i++){\n\t\t\tcin>>kard[i];\n\t\t}\n\t\tfor(int i=0;i<SIZE;i++){\n\t\t\tcin>>color;\n\t\t\tif(color == \"R\"){\n\t\t\t\tkard[i]\t+= 10;\n\t\t\t}else if(color == \"G\"){\n\t\t\t\tkard[i]\t+= 20;\n\t\t\t}else{\n\t\t\t\tkard[i]\t+= 30;\n\t\t\t}\n\t\t}\n\t\tsort(kard,kard+SIZE);\n\t\tans\t= check(kard);\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a,int b,int c) {\n  return (a == b) && (b == c);\n}\n\nbool is_sequence(int a,int b,int c) {\n  return (a+2 == b+1) && (b+1 == c);\n}\n\nbool is_good_set(int a,int b,int c) {\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set()) {\n      return 1;\n    }\n  } while (next_permutation(card,card+9));\n  return 0;\n}\n\n/* for test\nint main() {\n  cout << is_same_number(3, 4, 5) << endl;\n  cout << is_same_number(3, 3, 3) << endl;\n  cout << is_sequence(3, 4, 5) << endl;\n  cout << is_sequence(3, 3, 3) << endl;  \n  cout << is_good_set(3, 4, 5) << endl;  \n  cout << is_good_set(3, 3, 3) << endl;  \n}\n*/\n\nint main() {\n  cin >> T;\n  for (int t=0;t<T;t++) {\n    for (int i=0;i<9;i++) {\n      cin >> card[i];\n      //cout << card[i];\n    }\n    //cout << endl;\n    string color;\n    for(int i=0;i<9;i++) {\n      cin >> color;\n      //cout << color;\n      if (color == \"G\") {\n\tcard[i] += 10;\n      } else if (color == \"B\") {\n\tcard[i] += 20;\n      }\n      // cout << card[i];\n    }\n    cout << win() << endl;\n    //cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nint main() {\n\tint n=in();\n\tint a[10];\n\tstring b[10];\n\twhile(n--){\n\t\tint i;\n\t\tfor(i=0;i<9;i++){\n\t\t\tcin>>a[i];\n\t\t}\n\t\tfor(i=0;i<9;i++){\n\t\t\tcin>>b[i];\n\t\t}\n\t\tint per[]={0,1,2,3,4,5,6,7,8};\n\t\tbool win=false;\n\t\tdo{\n//cout<<per[0]<<\" \"<<per[1]<<\" \"<<per[2]<<\" \"<<per[3]<<\" \"<<per[4]<<\" \"<<per[5]<<\" \"<<per[6]<<\" \"<<per[7]<<\" \"<<per[8]<<endl;\n\t\t\tint set=0;\n\t\t\tif(a[per[0]]==a[per[1]]&&a[per[1]]==a[per[2]]||a[per[0]]+1==a[per[1]]&&a[per[1]]+1==a[per[2]]){\n\t\t\t\tif(b[per[0]]==b[per[1]]&&b[per[1]]==b[per[2]])set++;\n\t\t\t}\n\t\t\tif(a[per[3]]==a[per[4]]&&a[per[4]]==a[per[5]]||a[per[3]]+1==a[per[4]]&&a[per[4]]+1==a[per[5]]){\n\t\t\t\tif(b[per[3]]==b[per[4]]&&b[per[4]]==b[per[5]])set++;\n\t\t\t}\n\t\t\tif(a[per[6]]==a[per[7]]&&a[per[7]]==a[per[8]]||a[per[6]]+1==a[per[7]]&&a[per[7]]+1==a[per[8]]){\n\t\t\t\tif(b[per[6]]==b[per[7]]&&b[per[7]]==b[per[8]])set++;\n\t\t\t}\n//cout<<set<<endl;\n\t\t\tif(set==3)win=true;\n\t\t}while(next_permutation(per,per+9));\n\t\tcout<<(win?1:0)<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nint main(){int n,i,j,p[9],h[32];char c;for(std::cin>>n;n>0;n--){for(i=0;i<30;i++)h[i]=0;for(i=0;i<9;i++)cin>>p[i];for(i=0;i<9;i++){std::cin>>c;if(c==71)p[i]+=10;if(c==66)p[i]+=20;}for(i=0;i<9;i++)h[p[i]]++;for(i=0;i<30;i++)while(h[i]%3)for(j=0;j<3;j++)h[i+j]--;for(i=0;i<30&&h[i]>=0;i++);std::cout<<i-30?0:1<<\"\\n\";}}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nint main(){\n    int n;\n    cin >> n;\n    rep(p, n){\n        vector<pair<string, int>> v;\n        vector<int> a(9);\n        vector<string> b(9);\n        rep(i, 9) cin >> a[i];\n        rep(i, 9) cin >> b[i];\n        rep(i, 9) v.push_back(make_pair(b[i], a[i]));\n        sort(all(v));\n\n        bool possible = false;\n        do{\n            vector<pair<string, int>> vv = v;\n            while(true){\n                bool is = false;\n                if(v[0] == v[1] && v[1] == v[2]){vector<pair<string, int>> t; rep(i, v.size()-3) t.push_back(v[i+3]); v=t; is = true;}\n                if(v.size() == 0) break;\n                if(v[0].first == v[1].first && v[1].first == v[2].first && v[0].second == v[1].second-1 && v[1].second == v[2].second-1){vector<pair<string, int>> t; rep(i, v.size()-3) t.push_back(v[i+3]); v=t; is = true;}\n                if(!is || v.size() == 0) break;\n            }\n            if(v.size() == 0){possible = true; break;}\n            v = vv;\n        }while(next_permutation(all(v)));\n        cout << (possible?\"1\":\"0\") << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <deque>\n#include <algorithm>\nusing namespace std;\n\nstruct state{\n\tint a[9];\n\tint num;\n};\n\nint count(int a[9]){\n\tdeque<state> q;\n\tstate tmp, work;\n\tint ret=0, tmptimes;\n\tfor(int i=0;i<9;i++) tmp.a[i] = a[i];\n\ttmp.num=0;\n\tq.push_back(tmp);\n\twhile(!q.empty()){\n\t\ttmp = q.front();\n\t\tret = max(ret, tmp.num);\n\t\ttmptimes = tmp.num;\n\t\tfor(int i=0;i<9;i++){\n\t\t\twork.a[i] = tmp.a[i];\n\t\t\t//cout << work.a[i];\n\t\t}\n\t\t//cout << endl;\n\t\tq.pop_front();\n\t\tfor(int i=0;i<=6;i++){\n\t\t\tfor(int j=0;j<9;j++) work.a[j] = tmp.a[j];\n\t\t\twork.num = tmp.num;\n\t\t\tif(work.a[i] && work.a[i+1] && work.a[i+2]){\n\t\t\t\twork.a[i]--; work.a[i+1]--; work.a[i+2]--;\n\t\t\t\twork.num++;\n\t\t\t\tq.push_back(work);\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<=8;i++){\n\t\t\tfor(int j=0;j<9;j++) work.a[j] = tmp.a[j];\n\t\t\twork.num = tmp.num;\n\t\t\tif(work.a[i] >= 3){\n\t\t\t\twork.a[i] -= 3;\n\t\t\t\twork.num++;\n\t\t\t\tq.push_back(work);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main(void){\n\tint n;\n\t\n\tcin >> n;\n\twhile(n--){\n\t\tint R[9], G[9], B[9];\n\t\tint num[9];\n\t\tchar color[9];\n\t\tmemset(R, 0, sizeof(R));\n\t\tmemset(G, 0, sizeof(G));\n\t\tmemset(B, 0, sizeof(B));\n\t\t\n\t\tfor(int i=0;i<9;i++) cin >> num[i];\n\t\tfor(int i=0;i<9;i++) cin >> color[i];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(color[i] == 'R'){\n\t\t\t\tR[num[i] - 1]++;\n\t\t\t}else if(color[i] == 'G'){\n\t\t\t\tG[num[i] - 1]++;\n\t\t\t}else{\n\t\t\t\tB[num[i] - 1]++;\n\t\t\t}\n\t\t}\n\t\tif(count(R) + count(G) + count(B) >= 3){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "//\n//  main.cpp\n//  tititi\n//\n//  Created by 大森 亮 on 2014/04/10.\n//  Copyright (c) 2014年 大森 亮. All rights reserved.\n//\n\n#include <iostream>\n#include <algorithm>\n#define rep(i,n) for(int i = 0;i < n;i++)\n\nusing namespace std;\n\nbool is_same_number(int a,int b,int c){\n    if(a==b&&b==c)\n        return 1;\n    else return 0;\n}\n\nbool is_sequence(int a,int b,int c){\n    if((a+1==b)&&(b+1==c))\n        return 1;\n    else return 0;\n}\n\nbool is_good_set(int a,int b,int c){\n    return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\n\nint T;\nint card[16];\n\nint main(int argc, const char * argv[])\n{\n    cin >> T;\n    rep(t,T){\n        rep(i,9){\n            card[i]=0;\n            cin >> card[i];\n        }\n        string color;\n        rep(i,9){\n            cin >> color;\n            if(color==\"G\")\n                card[i]+=100;\n            if(color==\"B\")\n                card[i]+=200;\n        }\n        sort(card,card+9);\n        int flag = 0;\n        do{\n            if(is_good_set(card[0],card[1],card[2])&&is_good_set(card[3],card[4],card[5])&&is_good_set(card[6],card[7],card[8])){\n                flag = 1;\n                break;\n            }\n        }while(next_permutation(card,card+9));\n        cout << flag << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9];\n  pair<char, int> card[9];\n  int n;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n    int B = 0, G = 0, R = 0;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second; \n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n      if(card[i].first == 'B') B++;\n      if(card[i].first == 'G') G++;\n      if(card[i].first == 'R') R++;\n    }\n    if(!(B % 3 == 0 && G % 3 == 0 && R % 3 == 0)){\n      cout << '0' << endl;\n      continue;\n    }\n\n    sort(card, card+9);\n    \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n    \n      for(int i = 0 ; i < 10 ; i += 3){\n\tif(card[i].first == card[i+1].first && card[i].first == card[i+2].first){\n\t  if(card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second ||\n\t     card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n\t    flag[i] = true;\n\t  }\n\t}\t\n      }\n      \n      if(flag[0] && flag[3] && flag[6]){\n\tcout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\n#define X first\n#define Y second\n\n\n#define rep(X,Y) for(int (X)=0;(X) < (Y); ++(X))\n#define rrep(X,Y) for(int (X)=(Y-1); X >= 0; ++(X))\n\n#define all(X) (X).begin(),(X).end()\n\n\nusing namespace std;\n\ntypedef pair<int,int> pii;\n\nint check(pii a,pii b,pii c){\n  if(a.Y!= b.Y || b.Y!= c.Y) return 0;\n  if(a.X+1==b.X && a.X+2 == c.X)return 1;\n  if(a.X==b.X && a.X == c.X)return 1;\n  return 0;\n}\n\nint main(){\n  int T;\n  cin>>T;\n  while(T--){\n    vector<pii> c(9);\n    char ch;\n    rep(i,9) cin>>c[i].X;\n    rep(i,9){\n      cin>>ch;\n      c[i].Y=ch-'A';\n    }\n    sort(all(c));\n    int re=0;\n    do{\n      int f=1;\n      rep(i,3)\n\tif(!check(c[3*i],c[i*3+1],c[i*3+2])) f=0;\n      if(f){\n\tre=1; break;\n      }\n    }while(next_permutation(all(c)));\n    cout<<re<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a==(b-1) && a==(c-2) ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 10;\n\t\t\tif(color == \"B\") n[k] += 20;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <map>\n#include <bitset>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n\nusing namespace std;\n\nint main(){\n\tint n = 0;\n\tcin >> n;\n\twhile(n--){\n\t\tmap<char, vector<int> > table;\n\t\ttable['R'] = vector<int>(10, 0);\n\t\ttable['G'] = vector<int>(10, 0);\n\t\ttable['B'] = vector<int>(10, 0);\n\t\tvector<int> number(9, 0);\n\t\tchar clist[] = {'R', 'G', 'B'};\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tcin >> number[i];\n\t\t}\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tchar color = ' ';\n\t\t\tcin >> color;\n\t\t\ttable[color][number[i]]++;\n\t\t}\n\n\t\tbool win = true;\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tfor(int j = 1; j <= 9; j++){\n\t\t\t\tif(table[clist[i]][j] >= 3) table[clist[i]][j] -= 3; \n\t\t\t}\n\t\t\tfor(int j = 1; j <= 7; j++){\n\t\t\t\twhile(table[clist[i]][j] > 0){\n\t\t\t\t\ttable[clist[i]][j]--;\n\t\t\t\t\ttable[clist[i]][j+1]--;\n\t\t\t\t\ttable[clist[i]][j+2]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 1; j <= 9; j++){\n\t\t\t\tif(table[clist[i]][j] != 0) win = false;\n\t\t\t}\n\t\t}\n\n\t\tcout << (win ? 1 : 0) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "/*\n * 2102.cpp\n *\n *  Created on: 2012/07/08\n *      Author: shimomire\n */\n\n#include <iostream>\n#include<algorithm>\n#include<string>\n#include <complex>\n#include<list>\n#include<float.h>\n#include <functional>\n#include <vector>\n#include <map>\n#include <queue>\n#include <stack>\n\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define REP0(i,n)   REP(i,0,n)\n#define REPr(i,b,n) for(int i=n-1;i>=b;i--)\n#define REPr0(i,n)   REPr(i,0,n)\n\n#define foreach(it,o) for(__typeof((o).begin()) it=(o).begin(); it!=(o).end(); ++it)\n#define ALL(o) (o).begin(),(o).end()\n#define ARRSIZE(x) (sizeof(x)/sizeof(x[0]))\n#define ARRALL(x) x,x+ARRSIZE(x)\n\ntypedef complex<double> P;\nbool operator <(const P& a, const P& b) {\n\treturn make_pair(real(a),imag(a)) < make_pair(real(b),imag(b));\n}\n\nbool comparator(const pair<char,int>& a,const pair<char,int>& b){\n\tif(a.first!=b.first)return a.first>b.first;\n\treturn a.second<b.second;\n}\n\nint N;\nvector<pair<char,int> > cards;\nstack<pair<char,int> > rest;\nint main(){\n\tcin >>N;\n\tint num[9];\n\tchar color[9];\n\tREP0(n,N){\n\t\tcards.clear();\n\t\twhile ( ! rest.empty() ){\n\t\t\trest.pop();\n\t\t}\n\n\t\tREP0(i,9){\n\t\t\tcin >>num[i];\n\t\t}\n\t\tREP0(i,9){\n\t\t\tcin >>color[i];\n\t\t}\n\t\tREP0(i,9){\n\t\t\tcards.push_back(make_pair(color[i],num[i]));\n\t\t}\n\t\tsort(ALL(cards),comparator);\n\n//\t\tforeach(card,cards){\n//\t\t\tcout<<(*card).first<<\" \"<<(*card).second<<endl;\n//\t\t}\n\n\t\tfor(int i=0;i<cards.size();i++){\n\t\t\tif(cards[i]==cards[i+1] &&cards[i+1]==cards[i+2]){\n\t\t\t\tcards.erase(cards.begin()+i);\n\t\t\t\tcards.erase(cards.begin()+i);\n\t\t\t\tcards.erase(cards.begin()+i);\n\t\t\t}\n\t\t}\n\n\t\tforeach(card,cards){\n\t\t\trest.push(*card);\n\t\t\tif(rest.size()<3){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpair<char,int> p2=rest.top();rest.pop();\n\t\t\tpair<char,int> p1=rest.top();rest.pop();\n\t\t\tpair<char,int> p0=rest.top();rest.pop();\n\n\t\t\tbool match=false;\n\t\t\tif(p0.first==p1.first && p1.first ==p2.first){\n\t\t\t\tif((p0.second==p1.second-1 &&p1.second==p2.second-1)\n\t\t\t\t\t\t||(p0.second==p1.second &&p1.second==p2.second)){\n\t\t\t\t\tmatch=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!match){\n\t\t\t\trest.push(p0);\n\t\t\t\trest.push(p1);\n\t\t\t\trest.push(p2);\n\t\t\t}\n\t\t}\n\t\tcout<< (rest.size()==0?1:0)<<endl;\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\nint line[3] = {3,6,9};\n\nbool isPair(vector<int> V){\n\n  if(V.size()%3) return false;\n\n  bool ans[3] = {true,true,true};\n  sort(V.begin(),V.end());\n\n  for(int i = 0; i < 3; i++)\n    for(int j = line[i]-2; j < min(line[i],(int)V.size()); j++)\n      if(V[j] != V[j-1]+1) ans[0] = false;\n     \n    \n\n  int sum[MAX+1];\n  fill(sum,sum+MAX+1,0);\n  for(int i = 0; i < V.size(); i++)\n    sum[V[i]]++;\n\n  for(int i = 1; i < V.size(); i++)\n    if(sum[V[i]] != sum[V[i-1]]) ans[3] = false;\n  \n  for(int i = 0; i <= MAX; i++)\n    if(sum[i]%3) ans[1] = false;\n\n  return (ans[0]||ans[1]||ans[2]);\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[9], p[9]; char c[9];\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < 9; j++) cin >> a[j], p[j] = j;\n\t\tfor (int j = 0; j < 9; j++) cin >> c[j];\n\t\tint f = 0;\n\t\tdo {\n\t\t\tint g = 1;\n\t\t\tfor (int j = 0; j < 9; j += 3) {\n\t\t\t\tif (!(c[p[j]] == c[p[j + 1]] && c[p[j]] == c[p[j + 2]])) { g = 0; break; }\n\t\t\t\tint b[3] = { a[p[j]], a[p[j + 1]], a[p[j + 2]] };\n\t\t\t\tsort(b, b + 3);\n\t\t\t\tif ((b[1] - b[0]) != (b[2] - b[1]) || (b[1] - b[0]) >= 2) { g = 0; break; }\n\t\t\t}\n\t\t\tif (g) { f = 1; break; }\n\t\t} while (next_permutation(p, p + 9));\n\t\tcout << f << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nint point(int C[]){\n\t\n\tint e = 0;\n\n\t\n\t//??£???\n\tfor (int i = 0; i < 9; i++){\n\t\tif (C[i] == 10)break;\n\t\tint f = 0;\n\t\tint p = C[i];\n\t\tint acc[3];\n\t\tacc[0] = i;\n\t\tfor (int j = i + 1; j < 9; j++){\n\t\t\tif (C[j] == 10)break;\n\n\t\t\tif (C[j] == p + 1){\n\t\t\t\tf++;\n\t\t\t\tp++;\n\t\t\t\tacc[f] = j;\n\t\t\t}\n\t\t\tif (f == 2)break;\n\t\t}\n\n\t\tif (f == 2){\n\t\t\te++;\n\t\t\tC[acc[0]] = 0; C[acc[1]] = 0; C[acc[2]] = 0;\n\n\t\t}\n\t\t\n\t}\n\n\n\tint l=0;\n\tint n = 0;\n\n\t/*printf(\"%d\\n\", e);\n\tfor (int i = 0; i < 9; i++) printf(\"%d\", C[i]);\n\tprintf(\"\\n\");*/\n\n\tsort(C, C + 9);\n\n\tfor (int i = 0; i < 9; i++) {\n\t\tif (C[i] != 0 && C[i] != 10){\n\t\t\tl = i;\n\t\t\tn++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (e == 3 || n==0)return e;\n\t\n\t\n\n\t//???\n\tint p = 0;\n\tint d = 0;\n\tfor (int i = l; i < 9; i++){\n\t\tif (C[i] == 10)break;\n\t\tif (p == 0 && C[i] != 0){\n\t\t\tp = C[i];\n\t\t\tcontinue;\n\t\t}\n\t\tif (C[i]>p){\n\t\t\td = 0;\n\t\t\tp = C[i];\n\t\t\tcontinue;\n\t\t}\n\t\telse if (C[i] == p){\n\t\t\td++;\n\t\t}\n\t\t\n\t\tif (d == 2){\n\t\t\te++;\n\t\t\tp = C[i + 1];\n\t\t\td = 0;\n\t\t\ti += 2;\n\t\t}\n\t}\n\n\treturn e;\n\n}\n\nint main(){\n\n\t\n\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++){\n\t\tint n[9];\n\t\tchar c[9];\n\t\tint R[9];\n\t\tint G[9];\n\t\tint B[9];\n\t\tint r = 0, g = 0, b = 0;\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tc[j] = 0;\n\t\t\tn[j] = 0;\n\t\t\tR[j] = 10;\n\t\t\tG[j] = 10;\n\t\t\tB[j] = 10;\n\t\t}\n\n\t\t//????????????\t\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> n[j];\n\t\t}\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tcin >> c[j];\n\t\t}\n\n\n\t\t//?????????\n\t\tfor (int j = 0; j < 9; j++){\n\t\t\tif (c[j] == 'R'){\n\t\t\t\tR[r] = n[j];\n\t\t\t\tr++;\n\t\t\t}\n\t\t\telse if (c[j] == 'G'){\n\t\t\t\tG[g] = n[j];\n\t\t\t\tg++;\n\t\t\t}\n\t\t\telse if (c[j] == 'B'){\n\t\t\t\tB[b] = n[j];\n\t\t\t\tb++;\n\t\t\t}\n\t\t}\n\t\tsort(R, R + 9);\n\t\tsort(G, G + 9);\n\t\tsort(B, B + 9);\n\t\t//??????\n\t\tint e = 0;\n\t\t\n\t\t//R\n\t\tif (R[0] != 10){\n\t\t\te += point(R);\n\t\t\t\n\t\t}\n\t\t//G\n\t\tif (e < 3 && G[0] != 10){\n\t\t\te += point(G);\n\t\t\t\n\t\t}\n\t\t//B\n\t\tif (e < 3 && B[0] != 10){\n\t\t\te += point(B);\n\t\t\t\n\t\t}\n\t\t//printf(\"%d %d\",i+1, e);\n\t\tif (e == 3){\n\t\t\tcout << 1 << endl;\n\t\t\t//printf(\" 1\\n\");\n\t\t}\n\t\telse{\n\t\t\tcout << 0 << endl;\n\t\t\t//printf(\" 0\\n\");\n\t\t}\n\t\t//break;\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nstruct card{\n  int num;\n  char c;\n  bool operator <(const card &a)const{\n    if(c == a.c){\n      return num < a.num;\n    }\n    return c < a.c;\n  }\n};\n\nint main(){\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    card c[9];\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].num;\n    }\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].c;\n    }\n    sort(c, c + 9);\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].num << \" \";\n    // }\n    // cout << endl;\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].c << \" \";\n    // }\n    // cout << endl;\n    \n    bool flag = 0;\n    for(int i = 0; i < 9; i += 3){\n      // cout << \"i:\" << i << endl;\n      // cout << c[i].c << \" \" << c[i + 1].c << endl;\n      if(!(c[i].c   == c[i + 1].c   && c[i + 1].c   == c[i + 2].c))break;\n      if(!(c[i].num == c[i + 1].num && c[i + 1].num == c[i + 2].num) &&\n\t !(c[i].num + 1 == c[i + 1].num && c[i + 1].num + 1 == c[i + 2].num)){\n\tbreak;\n      }\n      if(i == 6){\n\tflag = 1;\n      }\n    }\n    if(flag)cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 30;\n\nint n[9];\nchar c[9];\n\nbool iswin(void){\n\tint card[9][3]={0};\n\trep(i,9){\n\t\tif(c[i]=='R')\n\t\t\tcard[n[i]-1][0]++;\n\t\tif(c[i]=='G')\n\t\t\tcard[n[i]-1][1]++;\n\t\tif(c[i]=='B')\n\t\t\tcard[n[i]-1][2]++;\n\t}\n\tint s=0;\n\trep(i,3){\n\t\trep(j,9){\n\t\t\tif(card[j][i]>=3)\n\t\t\t\ts++,card[j][i]-=3;\n\t\t\tif(1<=j&&j<8&&card[j-1][i]&&card[j][i]&&card[j+1][i])\n\t\t\t\ts++,card[j-1][i]--,card[j][i]--,card[j+1][i]--;\n\t\t}\n\t}\n\tif(s==3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n\nint main(void){\n\tint t;\n\tcin >> t;\n\trep(i,t){\n\t\trep(j,9) cin >> n[j];\n\t\trep(j,9) cin >> c[j];\t\n\t\tcout << iswin() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nint win();\n\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n\t}\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n\t}\n    cout << win() << endl;\n  }\n  return 0;\n}\n\nbool is_same_number(int a, int b, int c) {\n  if (a == b && b == c) return true;\n  else return false;\n}\n\nbool is_sequence(int a, int b, int c) {\n  if (a+2 == c && b+1 == c) return true;\n  else return false;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card, card+9);\n  do {\n      if ( is_all_good_set() )\n\treturn 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nbool solve(){\n\tint cards[3][9]={0};\n\tint intbuf[9];\n\tfor(int i=0;i<9;i++){\n\t\tcin >> intbuf[i];\n\t}\n\tfor(int i=0;i<9;i++){\n\t\tchar buf;\n\t\tcin >> buf;\n\t\tswitch(buf){\n\t\tcase 'R':\n\t\t\tcards[0][intbuf[i]]++;\n\t\t\tbreak;\n\t\tcase 'G':\n\t\t\tcards[1][intbuf[i]]++;\n\t\t\tbreak;\n\t\tcase 'B':\n\t\t\tcards[2][intbuf[i]]++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor(int i=0;i<3;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tif(cards[i][j] == 4){\n\t\t\t\tcards[i][j] = 1;\n\t\t\t\tj--;\n\t\t\t\tcontinue;\n\t\t\t}else if(cards[i][j] == 3){\n\t\t\t\tcards[i][j] = 0;\n\t\t\t}else if(cards[i][j] > 0){\n\t\t\t\tif(j<7){\n\t\t\t\t\tif(cards[i][j+1] >= cards[i][j] && cards[i][j+2] >= cards[i][j]){\n\t\t\t\t\t\tcards[i][j+1] -= cards[i][j];\n\t\t\t\t\t\tcards[i][j+2] -= cards[i][j];\n\t\t\t\t\t\tcards[i][j] = 0;\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i=0;i<3;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tif(cards[i][j] > 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tfor(int loop=0;loop<n;loop++){\n\t\tif(solve()){\n\t\t\tcout << \"1\" << endl;\n\t\t}else{\n\t\t\tcout << \"0\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <string>\n\nusing namespace std;\nint T;\nint card[8];\nstring color;\nbool judge;\n\nint is_win();\nbool is_all_good_set();\nbool is_good_set(int, int, int);\nbool is_same_number(int,int, int);\nbool is_sequence(int, int, int);\n\nint main(){\n  while(cin >> T){\n    \n\n    for (int i = 0; i < 9; ++i){\n      cin >> card[i];      \n    }\n\n    for (int i = 0; i < 9; ++i){\n      cin >> color;\n      if(color == \"B\") card[i] += 10;\n      else if (color == \"G\") {\n        card[i] += 20;\n      }\n    }\n\n    cout << is_win() << endl;\n\n  }\n\nreturn 0;\n\n}\n\nint is_win(){\n\n  do{\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n\n  return 0;\n}\n\nbool is_all_good_set(){\n\n  int judge;\n  for (int i = 0; i < 3; ++i)\n  {\n    judge += is_good_set(card[3*i], card[3*i+ 1], card[3*i + 2]);\n  }\n\n  if (judge == 3) return true;\n  else return false;\n}\n\n\nbool is_good_set(int a, int b, int c){\n\n   if(is_same_number(a,b,c) ||  is_sequence(a,b,c) ) return true;\n   else return false;\n\n}\n\nbool is_same_number(int a, int b, int c){\n\n  if(a == b == c) return true;\n  else return false;\n\n} \n\nbool is_sequence(int a, int b, int c){\n\n  if( a + 2 == b + 1 == c ) return true;\n  else return false ;\n\n}"
  },
  {
    "language": "C++",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Rummy\n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            //??????????????°??????\n            int gameTotalCount = int.Parse(Console.ReadLine());\n\n            //??????????????°?????°?????????(??????????????????????????????)\n            for(int i = 0; i < gameTotalCount; i++)\n            {\n                //??????????????°?????????\n                int[] inputNums = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();\n\n                //?????????????????????\n                string[] inputColors = Console.ReadLine().Split(' ');\n\n                //???????????????????????\\??????????????£?¨?\n                Card[] cards = new Card[inputNums.Length];\n\n                //??????????????????????????°?????°?????????(?????????????????????1?????\\??????????????????)\n                for (int j = 0; j < inputNums.Length; j++)\n                {\n                    //??????????????????????????????????????????????????????????´?\n                    cards[j] = new Card(\"R\", 1);\n                }\n\n                //???????????????????????\\??£?????????????????°??¨???????????????????????????????????????\n                if (JudgeRummyGame(cards))\n                {\n                    //??????\n                    Console.WriteLine(1);\n                }\n                else\n                {\n                    //??????\n                    Console.WriteLine(0);\n                }\n            }\n        }\n\n        /// <summary>\n        /// ??????????????????????????????????????¶????????????????????????????¢????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        /// <returns>??????????????????</returns>\n        private static bool JudgeRummyGame(Card[] cards)\n        {\n            //???????????????????????????????????£????????????(????????????????????????)\n\n            //??£?????????\n\n            //?????°??????\n\n            //???????????????\n            return true;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        private string _color = \"\";\n        private int _num = 0;\n\n        /// <summary>\n        /// ?????????????????????\n        /// </summary>\n        /// <param name=\"color\"></param>\n        /// <param name=\"num\"></param>\n        public Card(string color, int num)\n        {\n            _color = color;\n            _num = num;\n        }\n\n        /// <summary>\n        /// ?????????????????????\n        /// </summary>\n        /// <returns>???(string)</returns>\n        public string GetCardColor()\n        {\n            return _color;\n        }\n\n        /// <summary>\n        /// ??????????????°?????????\n        /// </summary>\n        /// <returns>??°???(int)</returns>\n        public int GetCardNum()\n        {\n            return _num;\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[9];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_OK_set(){\n  return(is_set(card[0], card[1], card[2])\n\t && is_set(card[3], card[4], card[5])\n\t && is_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  sort(card, card+9);\n  do{\n    if(is_all_OK_set())\n      return 1;\n  }while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n  scanf(\"%d\", &T);\n  for(int t=0; t<T; ++t){\n    for(int i=0; i<9; ++i){\n      scanf(\"%d\", &card[i]);\n    }\n    string color;\n    for(int i=0; i<9; ++i){\n      cin >> color;\n      if(color == \"G\") card[i] += 10;\n      else if(color == \"B\") card[i] += 20;\n    }\n    printf(\"%d\\n\", win());\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n     \nusing namespace std;\n\nint main(){\n  int t; cin >> t;\n  while(t--){\n    vector<pair<int,char> > nc(9);\n    int cnt[3][9]={};\n    for(int i=0;i<9;++i) cin >> nc[i].first;\n    for(int i=0;i<9;++i) cin >> nc[i].second;\n    for(int i=0;i<9;++i)\n      cnt[(nc[i].second=='R'?0:(nc[i].second=='G'?1:2))][nc[i].first-1]++;\n    int flag=0;\n    for(int i=0;i<3;++i){\n      for(int j=0;j<9;++j){\n\tif(cnt[i][j]>=3) cnt[i][j]-=3,flag++;\n\tif(j<7){\n\t  while(cnt[i][j] && cnt[i][j+1] && cnt[i][j+2]) {\n\t    cnt[i][j]--; cnt[i][j+1]--; cnt[i][j+2]--;\n\t    flag++;\n\t  }\n\t}\n      }\n    }\n    cout << (flag>=3?1:0) << endl;\n  }\n  \n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct Point{\n  int n,f;\n  string c;\n};\n\nint main(){\n  int i,j,n,ans,k,t;\n  Point a[9];\n  cin >> n;\n  for(t=0;t<n;t++){\n    for(i=0;i<9;i++) cin >> a[i].n;\n    for(i=0;i<9;i++) cin >> a[i].c;\n    for(i=0;i<9;i++) a[i].f = 0;\n\n    ans = 0;\n    for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\ta[i].f = a[j].f = a[k].f = ++ans;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f != 0)  break;\n\t  }\n\t}\n\tif(a[i].f != 0) continue;\n      }\n    }\n\n   for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n + 1 == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n + 1 == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\ta[i].f = a[j].f = a[k].f = ++ans;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f != 0) break;\n\t  }\n\t}\n\tif(a[i].f != 0) continue;\n      }\n    }\n\n\n    if(ans == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n    //   for(i=0;i<9;i++) cout << a[i].n << a[i].c <<\":\"<< a[i].f << \" \";\n    //cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\npair<int, int> card[10];\nint calc(const int use, const int pv, const int pc, int target) {\n  if (use == (1 << 9) - 1) { return 1; }\n  int ret = 0;\n  REP(i, 9) {\n    if (use & (1 << i)) { continue; }\n    int nv, nc;\n    int nuse = use | (1 << i);\n    if (__builtin_popcount(use) % 3 == 0) {\n      nv = card[i].first;\n      nc = card[i].second;\n      ret |= calc(nuse, nv, nc, 0);\n      ret |= calc(nuse, nv, nc, 1);\n    } else if (target == 0) {\n      nv = pv + 1;\n      nc = pc;\n      if (card[i].second != nc || card[i].first != nv) { continue; }\n      ret |= calc(nuse, nv, nc, target);\n    } else {\n      nv = pv;\n      nc = pc;\n      if (card[i].second != nc || card[i].first != nv) { continue; }\n      ret |= calc(nuse, nv, nc, target);\n    }\n    if (ret) { break; }\n  }\n  return ret;\n}\n\nint main() {\n  int test;\n  scanf(\"%d\", &test);\n  while (test--) {\n    REP(i, 9) {\n      scanf(\"%d\", &card[i].first);\n    }\n    REP(i, 9) {\n      char c;\n      scanf(\" %c\", &c);\n      card[i].second = c;\n    }\n    printf(\"%d\\n\", calc(0, -1, -1, -1));\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef pair<char, int> P;\n\nint count(vector<P> &v, char tar){\n  int res = 0;\n  REP(i, v.size()) if(tar == v[i].first) ++res;\n  return res;\n}\n\nbool solve(){\n  vector<P> v(9);\n  REP(i, 9) cin >>v[i].second;\n  REP(i, 9) cin >>v[i].first;\n  SORT(v);\n  //REP(i, 9) cout <<v[i].first <<\" \"; cout <<endl; REP(i, 9) cout <<v[i].second <<\" \"; cout <<endl;\n  if(count(v, 'R') % 3 || count(v, 'G') % 3 || count(v, 'B') % 3) return 0;\n  for(int i = 0; i < 9; i += 3) if(!(v[i].second == v[i + 1].second - 1 && v[i + 1].second == v[i + 2].second - 1) && !(v[i].second == v[i + 1].second && v[i + 1].second == v[i + 2].second)) return 0;\n  return 1;\n}\n\nint main() {\n  int T; cin >>T;\n  REP(t, T) cout <<solve() <<endl;\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <functional>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nint main() {\n\tint t;\n\tcin >> t;\n\tfor (int i = 0; i < t; i++) {\n\t\tint data[9];\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> data[j];\n\t\t}\n\t\tpriority_queue< P, vector<P>, greater<P> > pq;\n\t\tchar c;\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> c;\n\t\t\tP p;\n\t\t\tp.second = data[j];\n\t\t\tif (c == 'R') {\n\t\t\t\tp.first = 1;\n\t\t\t} else if (c == 'B') {\n\t\t\t\tp.first = 2;\n\t\t\t} else {\n\t\t\t\tp.first = 3;\n\t\t\t}\n\t\t\tpq.push(p);\n\t\t}\n\t\tbool hantei = true;\n\t\twhile (!pq.empty()) {\n\t\t\tP p1, p2, p3;\n\t\t\tp1 = pq.top();\n\t\t\tpq.pop();\n\t\t\tp2 = pq.top();\n\t\t\tpq.pop();\n\t\t\tp3 = pq.top();\n\t\t\tpq.pop();\n\t\t\tif (p1.first == p2.first && p1.first == p2.first) {\n\t\t\t\tif (p1.second == p2.second && p1.second == p3.second) {\n\t\t\t\t} else if (p1.second+1 == p2.second && p2.second+1 == p3.second) {\n\t\t\t\t} else {\n\t\t\t\t\thantei = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thantei = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hantei) {\n\t\t\tcout << 1 << endl;\n\t\t} else {\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\nint line[3] = {3,6,9};\n\nbool isPair(vector<int> V){\n  if(V.size()%3) return false;\n\n  bool ans[2] = {true,true};\n  sort(V.begin(),V.end());\n\n  for(int i = 0; i < 3; i++)\n    for(int j = line[i]-2; j < min(line[i],(int)V.size()); j++)\n      if(V[j] != V[j-1]+1) ans[0] = false;\n     \n    \n\n  int sum[MAX+1];\n  fill(sum,sum+MAX,0);\n  for(int i = 0; i < V.size(); i++)\n    sum[V[i]]++;\n  \n  for(int i = 0; i <= MAX; i++)\n    if(sum[i]%3) ans[1] = false;\n\n  return (ans[0]||ans[1]);\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nbool is_same_num(int* a){\n\tif(a[0]==a[1] && a[0]==a[2] ) return true;\n\treturn false;\n}\n\nbool is_sequence(int* a){\n\tif(a[0]+2==a[2] && a[0]+1==a[1]) return true;\n\treturn false;\n}\n\nbool is_win(int* a){\n\tif(is_same_num(a)||is_sequence(a)) return true;\n\treturn false;\n}\n\nint main(){\n\tint t;\n\tint c[9];\n\tcin >> t;\n\tfor(int i=0;i<t;++i){\n\t\tfor(int j=0;j<9;++j){\n\t\t\tcin >> c[j];\n\t\t}\n\t\tchar ch;\n\t\tfor(int j=0;j<9;++j){\n\t\t\tcin >> ch;\n\t\t\tif(ch=='G') c[j]+=10;\n\t\t\telse if(ch=='B') c[j]+=20;\n\t\t}\n\t\tsort(c,c+9);\n\t\tbool b=false;\n\t\tdo {\n\t\t\tif( is_win(c) && is_win(c+3) && is_win(c+6) ) b=true;\n\t\t} while (next_permutation(c , c+9));\n\t\tcout << (b ? 1 : 0) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nint sum(std::vector<int> a)\n{\n    int s = 0;\n    for (int i = 0; i < 9; i++) {\n        s += a.at(i);\n    }\n    return s;\n}\n\nint main()\n{\n    int n = 0;\n    std::vector<int> ans(9);\n    std::cin >> n;\n    std::vector<int> num(9);\n    std::string color;\n\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < 9; j++) {\n            std::cin >> num.at(j);\n        }\n        for (int k = 0; k < 9; k++) {\n            std::cin >> color;\n            if (color == \"R\") {\n                num.at(k) += 10;\n            } else if (color == \"G\") {\n                num.at(k) += 20;\n            } else {\n                num.at(k) += 30;\n            }\n        }\n        std::sort(num.begin(), num.end());\n        for (int j = 0; j < 9; j++) {\n            for (int k = j; k < 9; k++) {\n                for (int l = k; l < 9; l++) {\n                    if (num.at(j) == num.at(k) && num.at(j) == num.at(l)) {\n                        ans.at(j), ans.at(k), ans.at(l) = 1;\n                    } else if (num.at(j) + 1 == num.at(k) && num.at(j) + 2 == num.at(l)) {\n                        ans.at(j), ans.at(k), ans.at(l) = 1;\n                    }\n                }\n            }\n        }\n        if (sum(ans) == 9) {\n            std::cout << 1 << '\\n';\n            for (size_t m = 0; m < 9; m++) {\n                ans.at(m) = 0;\n            }\n        } else {\n            std::cout << 0 << '\\n';\n        }\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <array>\n\n#define RED\t\t0\t//RED \t: 1-9\n#define GREEN\t10\t//GREEN : 11-19\n#define BLUE\t20\t//BLUE\t: 21-29\n\n#define is_eq(x,y,z) ((x==y)&&(y==z))\n#define is_seq(x,y,z) (((x)+1==y)&&((y)+1==z))\n#define is_set(x,y,z) (is_eq(x,y,z)||is_seq(x,y,z))\n\nusing namespace std;\n\nbool is_3set(array<int, 9> &card)\n{\n\tbool ret = true;\n\tfor(int i=0; i<3 ; i++){\n\t\tret = ret && is_set(card[3*i], card[3*i+1], card[3*i+2]);\n\t}\n\treturn ret;\n}\n\nbool win(array<int, 9> &card)\n{\n\tdo{\n\t\tif (is_3set(card)) return true;\n\t}while(next_permutation(card.begin(), card.end()));\n\n\treturn false;\n}\n\nint main(void)\n{\n\tint T;\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tarray<int, 9> card;\n\t\t//カードの番号入力\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> card[j];\n\t\t}\n\t\t//カードの色入力\n\t\tfor(int j=0; j<9; j++){\n\t\t\tchar color;\n\t\t\tcin >> color;\n\t\t\tswitch(color){\n\t\t\t\tcase 'R':\n\t\t\t\t\tcard[j] += RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tcard[j] += GREEN;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tcard[j] += BLUE;\n\t\t\t}\n\t\t}\n\t\t//識別番号でソート\n\t\tsort(card.begin(), card.end());\n\t\t//出力\n\t\tcout << win(card) << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  int t;\n  pair<int,char>card[9];\n  cin>>t;\n  for(int i=0;i<t;++i){\n    int data[10][3]={},flag=0;\n    for(int j=0;j<9;++j) cin>>card[j].first;\n    for(int j=0;j<9;++j) cin>>card[j].second;\n    for(int j=0;j<9;++j){\n      if(card[j].second=='R') data[card[j].first][0]++;\n      else if(card[j].second=='G') data[card[j].first][1]++;\n      else data[card[j].first][2]++;\n    }\n    for(int j=1;j<10;++j)\n      for(int k=0;k<3;++k)\n\tif(data[j][k]>=3){\n\t  flag++; data[j][k]-=3;\n\t}\n    for(int j=2;j<9;++j)\n      for(int k=0;k<3;++k)\n\tif(data[j][k]>=1&&data[j-1][k]>=1&&data[j+1][k]>=1){\n\t  flag++;\n\t  data[j][k]--; data[j-1][k]--; data[j+1][k]--;\n\t  --k;\n\t}\n    cout<<(flag==3?\"1\":\"0\")<<endl;\n      \n  }\n  \n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n\treturn a == b && b == c;\n}\nbool is_sequence(int a, int b, int c){\n\treturn a+2 == b+1 && b+1 == c;\n}\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2]) && \n\t\tis_good_set(card[3], card[4], card[5]) &&\n\t\tis_good_set(card[6], card[7], card[8]);\n}\nint win(){\n\tsort(card, card+9);\n\tdo{\n\t\tif(is_all_good_set()) return 1;\n\t}while(next_permutation(card, card+9));\n\treturn 0;\n}\nint main(){\n\tcin >> T;\n\tfor(int t=0; t<T; ++t){\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin >> color;\n\t\t\tif(color ==\"G\") card[i]+=10;\n\t\t\telse if(color == \"B\") card[i]+=20;\n\t\t}\n\t\tcout << win() <<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define all(c) (c).begin(),(c).end()\n#define rep(i,n) for(int i=0; i<(int)(n); i++)\n#define REP(i,m,n) for(int i=(int)(m); i<(int)(n); i++)\n#define iter(c) __typeof((c).begin())\n#define tr(it,c) for(iter(c) it=(c).begin(); it!=(c).end(); it++)\n#define pb(a) push_back(a)\n#define mp(a,b) make_pair(a,b)\n#define pr(a) cout << (a) << endl\n#define PR(a,b) cout << (a) << \" \" << (b) << endl;\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int,char> P;\nconst int MAX=1000000001;\nconst ll MAXL=1000000000000000001LL;\nconst ll mod=1000000007;\nint dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\n\nint main() {\n  int t;\n  cin >> t;\n  while(t--) {\n    int a[3][10];\n    memset(a,0,sizeof(a));\n    P b[9];\n    rep(i,9) cin >> b[i].F;\n    rep(i,9) cin >> b[i].S;\n    rep(i,9) {\n      if(b[i].S=='R') a[0][b[i].F]++;\n      else if(b[i].S=='G') a[1][b[i].F]++;\n      else a[2][b[i].F]++;\n    }\n    int ans=1;\n    rep(i,3) {\n      rep(j,10) {\n\tif(a[i][j]) {\n\t  if(a[i][j]>=3) {\n\t    a[i][j]-=3;\n\t    j--;\n\t  } else if(j<8 && a[i][j] && a[i][j+1] && a[i][j+2]) {\n\t    a[i][j]--;a[i][j+1]--;a[i][j+2]--;\n\t    j--;\n\t  } else ans=0;\n\t}\n      }\n    }\n    pr(ans);\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n\nusing namespace std;\n\nint main() {\n  int n;\n  cin>>n;\n  REP(i,n) {\n    vector<vector<int>> cnt(3, vector<int>(12, 0));\n    string rgb=\"RGB\";\n    vector<int> clr(9), num(9);\n    REP(j,9){\n      cin>>num[j];\n      --num[j];\n    }\n    REP(j,9){\n      string s;\n      cin>>s;\n      clr[j] = rgb.find(s[0]);\n    }\n    REP(j,9){\n      ++cnt[clr[j]][num[j]];\n    }\n    int sets = 0;\n    REP(j,3){\n      REP(k,9){\n        sets += cnt[j][k] / 3;\n        cnt[j][k] %= 3;\n        while (cnt[j][k] && cnt[j][k+1] && cnt[j][k+2]) {\n          --cnt[j][k];\n          --cnt[j][k+1];\n          --cnt[j][k+2];\n          ++sets;\n        }\n      }\n    }\n    cout << (sets == 3) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nstruct card{\n  int num;\n  char c;\n  bool operator <(const card &a){\n    if(c == a.c){\n      return num < a.num;\n    }\n    return c < a.c;\n  }\n};\n\nint main(){\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    card c[9];\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].num;\n    }\n    for(int i = 0; i < 9; i++){\n      cin >> c[i].c;\n    }\n    sort(c, c + 9);\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].num << \" \";\n    // }\n    // cout << endl;\n    // for(int i = 0; i < 9; i++){\n    //   cout << c[i].c << \" \";\n    // }\n    // cout << endl;\n    \n    bool flag = 0;\n    for(int i = 0; i < 9; i += 3){\n      // cout << \"i:\" << i << endl;\n      // cout << c[i].c << \" \" << c[i + 1].c << endl;\n      if(!(c[i].c   == c[i + 1].c   && c[i + 1].c   == c[i + 2].c))break;\n      if(!(c[i].num == c[i + 1].num && c[i + 1].num == c[i + 2].num) &&\n\t !(c[i].num + 1 == c[i + 1].num && c[i + 1].num + 1 == c[i + 2].num)){\n\tbreak;\n      }\n      if(i == 6){\n\tflag = 1;\n      }\n    }\n    if(flag)cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntemplate<class T> inline bool amax (T &a, const T &b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool amin (T &a, const T &b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T> ostream& operator << (ostream &os, const vector<T> &v) { os << \"[\"; for (typename vector<T>::const_iterator it = v.begin(); it != v.end(); it++) { os << (it != v.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class T> ostream& operator << (ostream &os, const set<T> &s) { os << \"[\"; for (typename set<T>::const_iterator it = s.begin(); it != s.end(); it++) { os << (it != s.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class Key, class Val> ostream& operator << (ostream &os, const map<Key, Val> &m) { os << \"{\"; for (typename map<Key, Val>::const_iterator it = m.begin(); it != m.end(); it++) { os << (it != m.begin() ? \", \" : \"\") << it->first << \":\" << it->second; } os << \"}\"; return os; }\ntemplate<class T, class S> ostream& operator << (ostream &os, const pair<T, S> &p) { os << \"(\" << p.first << \", \" << p.second << \")\"; return os; }\ntemplate <class T> istream& operator >> (istream &is, vector<T> &v) { for (size_t i = 0; i < v.size(); i++) is >> v[i]; return is; }\ntemplate <class Target, class Source> inline Target lexical_cast (const Source &s) { Target t; stringstream ss; ss << s; ss >> t; return t; }\n\n//> v < ^ (clock wise)\nint dx[] = {1,0,-1,0};\nint dy[] = {0,1,0,-1};\nconst int INFI = 1<<28;\nconst long long int INFL = 1LL<<60;\nconst double INFD = 1e+300;\nconst float INFF = 1e+100;\nconst double EPS = 1e-8;\nconst long long int MOD = 1000000007;\n\nint solve ();\nint main () {\n    cout.setf(ios::fixed); cout.precision(10);\n    ios_base::sync_with_stdio(false);\n    solve();\n    return 0;\n}\n\nint solve () {\n    int T;\n    cin >> T;\n    while (T--) {\n        int table[27];\n        table['R'-'A'] = 0;\n        table['B'-'A'] = 1;\n        table['G'-'A'] = 2;\n        vector<pair<int,char>> card(9);\n        for (int i = 0; i < 9; i++) cin >> card[i].first;\n        for (int i = 0; i < 9; i++) cin >> card[i].second;\n        int exist[3][9] = {0};\n        for (int i = 0; i < 9; i++) {\n            int &a = exist[table[card[i].second-'A']][card[i].first];\n            a = (a+1)%3;\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 7; j++) {\n                if (exist[i][j] && exist[i][j+1] && exist[i][j+2]) {\n                    exist[i][j]--;\n                    exist[i][j+1]--;\n                    exist[i][j+2]--;\n                }\n            }\n        }\n        bool ng = false;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 9; j++) {\n                ng |= exist[i][j];\n            }\n        }\n        cout << !ng << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define vi vector<int>\n#define pb push_back\n#define INF 999999999\n//#define INF (1LL<<59)\n\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tvector<int> a(9);\n\t\tvector<char> c(9);\n\t\t\n\t\trep(i,9)cin>>a[i];\n\t\trep(i,9)cin>>c[i];\n\t\t\n\t\tint v[3][9]={};\n\t\trep(i,9){\n\t\t\tif(c[i]=='R')v[0][a[i]]++;\n\t\t\tif(c[i]=='G')v[1][a[i]]++;\n\t\t\tif(c[i]=='B')v[2][a[i]]++;\n\t\t}\n\n\t\tint count=0;\n\t\trep(i,3){\n\t\t\trep(j,9){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tcount+=v[i][j]/3;\n\t\t\t\tv[i][j] -= v[i][j]/3*3;\n\t\t\t}\n\t\t}\n\t\trep(i,3){\n\t\t\trep(j,7){\n\t\t\t\tif(v[i][j]==0)continue;\n\t\t\t\tif(v[i][j]==v[i][j+1] && v[i][j+1]==v[i][j+2] ){\n\t\t\t\t\tv[i][j]--,v[i][j+1]--,v[i][j+2]--;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(count==3)cout<<1<<endl;\n\t\telse cout<<0<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <array>\n#include <string>\nusing namespace std;\n\nint T;\nvector<int> card(16);\n\nbool is_same_number(int a, int b, int c) {\n    if (a == b && b == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\nbool is_sequence(int a, int b, int c) {\n    if (a+2 == b+1 && b+1 == c) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool is_good_set(int a, int b, int c) {\n    return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n    for (int i = 0; i < 9; i++){\n        cout << card[i] << \" \" ;\n    }\n    cout << endl;\n    sort(card.begin(), card.begin()+9);\n    if (is_good_set(card[0], card[1], card[2]) &&\n        is_good_set(card[3], card[4], card[5]) &&\n        is_good_set(card[6], card[7], card[8])){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nint main() {\n    cin >> T;\n    for (int t=0; t<T; ++t) {\n        for (int i=0; i<9; ++i) {\n            cin >> card[i];\n            cout << card[i] << \" \" ;\n        }\n        cout << endl;\n        string color;\n        for (int i=0; i<9; ++i) {\n            cin >> color;\n            if (color == \"G\") card[i] += 10;\n            else if (color == \"B\") card[i] += 20;\n        }\n        if (is_all_good_set()){\n            cout << \"1\" << endl;\n        } else {\n            cout << \"0\" << endl;\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return (a == b && b == c);\n}\n\nbool is_sequence(int a, int b, int c){\n  return (a + 2 == c && a + 1 == b);\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(int a[]){\n  return is_good_set(a[0], a[1], a[2]) && is_good_set(a[3], a[4], a[5]) && is_good_set(a[6], a[7], a[8]);\n}\n\nint win(int a[]){\n  sort(a, a+9);\n  do {\n    if (is_all_good_set(a)) return 1;\n  } while (next_permutation(a, a+9));\n  return 0;\n}\n\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t){\n\n    for (int i = 0; i<9; i++){\n      cin >> card[i];\n    }\n\n    string color;\n    for (int i = 0; i < 9; i++){\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n    }\n\n    cout << win(card) << endl;\n\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <map>\n#include <set>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <bitset>\n#include <algorithm>\n#include <numeric>\n#include <functional>\nusing namespace std;\n\n#define Rep(b, e, i) for(int i = b; i <= e; i++)\n#define Repr(e, b, i) for(int i = e; i >= b; i--)\n#define rep(n, i) Rep(0, n-1, i)\n#define repr(n, i) Repr(n-1, 0, i)\n#define all(v) (v).begin(), (v).end()\n#define pb(x) push_back(x)\n#define uniq(x) (x).erase(unique(all(x)),(x).end())\n\ntypedef long long ll;\ntypedef pair<ll, ll> llP;\ntypedef pair<int, int> intP;\ntypedef std::priority_queue<int> IntPrioQueue; //Z->A\ntypedef std::priority_queue<int, std::vector<int>, std::greater<int> > IntReversePrioQueue; //A->Z\n\nconst int MAX = 200000;\nconst double PI = 3.14159265358979323846;\nconst double EPS = 1e-12;\nconst int INF = 1<<29;\nconst int MOD = 1000000007;\n\nint ns[9];\n\nvoid solve(void){\n    int T;\n    cin >> T;\n    rep(T, i) {\n        rep(9, i) scanf(\"%d\", &ns[i]);\n        char c;\n        rep(9, i) {\n            cin >> c;\n            ns[i] += (c-'A')*10;\n        }\n        sort(ns, ns+9);\n        bool can = false;\n        do {\n            bool t = true;\n            rep(3, i) {\n                t = t && ((ns[3*i] == ns[3*i+1] && ns[3*i] == ns[3*i+2]) || (ns[3*i] == ns[3*i+1]+1 && ns[3*i] == ns[3*i+2]+2));\n            }\n            can = can || t;\n        } while(next_permutation(ns, ns+9));\n        cout << (can?\"1\":\"0\") << endl;\n    }\n}\n\nint main(void){\n  solve();\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9], f[3];\n  pair<char, int> card[9], dumy[9];\n  int n, num;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n    memset(f, 0, sizeof(f));\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second; \n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n    }\n    //cout << \"OK\" << endl;\n    sort(card, card+9);\n    \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n    \n      for(int i = 0 ; i < 9 ; i += 3){\n\tif(card[i].first == card[i+1].first && card[i].first == card[i+2].first &&\n\t   card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second ||\n\t   card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n\t  flag[i] = true;\n\t}\t\n      }\n      \n      if(flag[0] && flag[3] && flag[6]){\n\tcout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9];\n  pair<char, int> card[9];\n  int n;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n    int B = 0, G = 0, R = 0;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second;\n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n      if(card[i].first == 'B') B++;\n      if(card[i].first == 'G') G++;\n      if(card[i].first == 'R') R++;\n    }\n    if(!(B % 3 == 0 && G % 3 == 0 && R % 3 == 0)){\n      cout << '0' << endl;\n      continue;\n    }\n\n    sort(card, card+9);\n   \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n   \n      for(int i = 0 ; i < 9 ; i += 3){\n    if(card[i].first == card[i+1].first && card[i].first == card[i+2].first){\n      if(card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second ||\n         card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n        flag[i] = true;\n      }\n    }   \n      }\n     \n      if(flag[0] && flag[3] && flag[6]){\n    cout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n\nusing namespace std;\n\n#define rep(i, n) for(int i=0;i<(int)n;i++)\n#define reep(i, s, t) for(int i=s;i<(int)t;i++)\n#define irep(i, n) for(int i=(int)n-1;i>=0;i--)\n#define ireep(i, n, s) for(int i=(int)n-1;i>=s;i--)\n#define all(v) v.begin(), v.end()\n#define vc vector\n#define pb push_back\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nstruct Card\n{\n\tint num;\n\tchar color;\n\n\tfriend bool operator < ( const Card& c1, const Card& c2 )\n\t{\n\t\treturn (c1.num == c2.num ? c1.color < c2.color : c1.num < c2.num);\n\t}\n};\n\nint main(){\n\tint n;\n\tcin >> n;\n\n\trep(i, n){\n\t\tvector<Card> card(9);\n\t\trep(j, 9){\n\t\t\tcin >> card[j].num;\n\t\t}\n\t\trep(j, 9){\n\t\t\tcin >> card[j].color;\n\t\t}\n\n\t\tsort( all(card) );\n\n\t\tbool flag = false;\n\t\tdo{\n\t\t\tint cnt = 0;\n\t\t\trep(i, 3){\n\t\t\t\tbool issamec = true;\n\t\t\t\t\n\t\t\t\trep(j, 3){\n\t\t\t\t\tint idx = i*3 + j;\n\t\t\t\t\tif( card[idx].color != card[i*3].color ){\n\t\t\t\t\t\tissamec = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( !issamec ){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbool issame = true;\n\t\t\t\trep(j, 3){\n\t\t\t\t\tint idx = i*3 + j;\n\t\t\t\t\tif( card[idx].num != card[i*3].num ){\n\t\t\t\t\t\tissame = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( issame ){\n\t\t\t\t\t++cnt;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbool iscont = true;\n\t\t\t\trep(j, 2){\n\t\t\t\t\tint idx = i*3 + j;\n\t\t\t\t\tif( card[idx].num != card[idx+1].num+1 ){\n\t\t\t\t\t\tiscont = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( iscont ){\n\t\t\t\t\t++cnt;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( cnt == 3 ){\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}while( !flag && next_permutation(all(card)) );\n\n\t\tcout << flag << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\nconst int MAX = 9;\ntypedef pair<int,char> P;\nP data[MAX];\nvector<int> R,G,B;\nint line[3] = {3,6,9};\n\nbool isPair(vector<int> V){\n  if(V.size()%3) return false;\n\n  bool ans[2] = {true,true};\n  sort(V.begin(),V.end());\n\n  for(int i = 0; i < 3; i++)\n    for(int j = line[i]-2; j < min(line[i],(int)V.size()); j++)\n      if(V[j] != V[j-1]+1) ans[0] = false;\n     \n    \n\n  int sum[MAX+1];\n  fill(sum,sum+MAX+1,0);\n  for(int i = 0; i < V.size(); i++)\n    sum[V[i]]++;\n  \n  for(int i = 0; i <= MAX; i++)\n    if(sum[i]%3) ans[1] = false;\n\n  return (ans[0]||ans[1]);\n}\nvoid solve(){\n  if(isPair(R)&&isPair(G)&&isPair(B)) cout << \"1\" << endl;\n  else cout << \"0\" << endl;\n}\n\nvoid make(){\n  for(int i = 0; i < MAX; i++)\n    if(data[i].second == 'R') R.push_back(data[i].first);\n    else if(data[i].second == 'G') G.push_back(data[i].first);\n    else if(data[i].second == 'B') B.push_back(data[i].first);\n}\n\nvoid init(){\n  R.clear();\n  G.clear();\n  B.clear();\n}\n\n\nvoid input(){\n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].first;\n  \n  for(int i = 0; i < MAX; i++)\n    cin >> data[i].second;\n\n}\n\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    init();\n    input();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<deque>\n#include<vector>\n#include<map>\nusing namespace std;\n\nint main(){\n  int T;\n  deque<int> R,B,G;\n  int inx[10];\n  char iny;\n  map<int,int> Ri,Bi,Gi;\n\n\n\n  cin >> T;\n  while(T-- > 0){\n    R.clear();B.clear();G.clear();\n    Ri.clear();Bi.clear();Gi.clear();\n    for(int i=0;i<9;i++){\n      cin >> inx[i];\n    }\n    for(int j=0;j<9;j++){\n      cin >> iny;\n      if(iny == 'R'){\n\tR.push_back(inx[j]);\n\tRi[inx[j]]++;\n      }\n      else if(iny == 'B'){\n\tB.push_back(inx[j]);\n\tBi[inx[j]]++;\n      }\n      else if(iny == 'G'){\n\tG.push_back(inx[j]);\n\tGi[inx[j]]++;\n      }\n    }\n\n    sort(R.begin(),R.end());\n    sort(B.begin(),B.end());\n    sort(G.begin(),G.end());\n\n    int tp;\n    for(int i=0;i<3;i++){\n      if(R.size() < 3)break;\n      tp = R.front();\n      if((Ri[tp+1]>0 && Ri[tp+2]>0)){\n\tR.pop_front();\n\tdeque<int>::iterator Rit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+1 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRit = R.begin();\n\twhile(Rit != R.end()){\n\t  if(tp+2 == (*Rit)){\n\t    R.erase(Rit);\n\t    break;\n\t  }\n\t  Rit++;\n\t}\n\tRi.clear();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n      else if(Ri[tp] >= 3){\n\tR.pop_front();R.pop_front();R.pop_front();\n\tfor(int i=0;i<R.size();i++){\n\t  Ri[R[i]]++;\n\t}\n      }\n\n    }\n\n\n for(int i=0;i<3;i++){\n   if(B.size() < 3)break;\n      tp = B.front();\n      if((Bi[tp+1]>0 && Bi[tp+2]>0)){\n\tB.pop_front();\n\tdeque<int>::iterator Bit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+1 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBit = B.begin();\n\twhile(Bit != B.end()){\n\t  if(tp+2 == (*Bit)){\n\t    B.erase(Bit);\n\t    break;\n\t  }\n\t  Bit++;\n\t}\n\tBi.clear();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n      else if(Bi[tp] >= 3){\n\tB.pop_front();B.pop_front();B.pop_front();\n\tfor(int i=0;i<B.size();i++){\n\t  Bi[B[i]]++;\n\t}\n      }\n    }\n\n for(int i=0;i<3;i++){\n   if(G.size() < 3)break;\n      tp = G.front();\n      if((Gi[tp+1]>0 && Gi[tp+2]>0)){\n\tG.pop_front();\n\tdeque<int>::iterator Git = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+1 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGit = G.begin();\n\twhile(Git != G.end()){\n\t  if(tp+2 == (*Git)){\n\t    G.erase(Git);\n\t    break;\n\t  }\n\t  Git++;\n\t}\n\tGi.clear();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n      else if(Gi[tp] >= 3){\n\tG.pop_front();G.pop_front();G.pop_front();\n\tfor(int i=0;i<G.size();i++){\n\t  Gi[G[i]]++;\n\t}\n      }\n\n    }\n\n\n\n if(R.empty() && G.empty() && B.empty() )cout << \"1\" << endl;\n else cout << \"0\" << endl;\n\n\n\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct Point{\n  int n,f;\n  string c;\n};\n\nint main(){\n  int i,j,n,ans,k,t;\n  Point a[9];\n  cin >> n;\n  for(t=0;t<n;t++){\n    for(i=0;i<9;i++) cin >> a[i].n;\n    for(i=0;i<9;i++) cin >> a[i].c;\n    for(i=0;i<9;i++) a[i].f = 0;\n\n    ans = 0;\n    for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f == 1)  break;\n\t  }\n\t}\n\tif(a[i].f == 1) continue;\n      }\n    }\n\n   for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n + 1 == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n + 1 == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f == 1) break;\n\t  }\n\t}\n\tif(a[i].f == 1) continue;\n      }\n    }\n\n\n    if(ans == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "/**\n * \n */\n\n// #include {{{\n#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cfloat>\n#include <cmath>\n#include <cstdint>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <type_traits>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\n#ifdef LOCAL\n#include <fmt/format.h>\n#include <fmt/ostream.h>\n#endif\n\nusing namespace std;\n// }}}\n\n// type {{{\nusing  i8 =   int8_t;\nusing  u8 =  uint8_t;\nusing i16 =  int16_t;\nusing u16 = uint16_t;\nusing i32 =  int32_t;\nusing u32 = uint32_t;\nusing i64 =  int64_t;\nusing u64 = uint64_t;\n\ntemplate<typename T>\nusing MaxHeap = priority_queue<T, vector<T>, less<T>>;\ntemplate<typename T>\nusing MinHeap = priority_queue<T, vector<T>, greater<T>>;\n// }}}\n\n// hide {{{\n#ifdef __clang__\n#pragma clang diagnostic push\n#pragma clang diagnostic ignored \"-Wunused-const-variable\"\n#endif\n// }}}\n\n// 適宜調整\nconstexpr bool AUTOFLUSH = false;\n\nconstexpr int IOS_PREC = 12;\n\nconstexpr int INF_I32 =             1'010'000'000;\nconstexpr i64 INF_I64 = 1'010'000'000'000'000'000LL;\n\nconstexpr auto   INF = INF_I64;\nconstexpr double EPS = 1e-12;\n\nconstexpr i64 MOD = 1'000'000'007;\n\n// hide {{{\n#ifdef __clang__\n#pragma clang diagnostic pop\n#endif\n// }}}\n\n// util {{{\nconstexpr i32 I32_MAX = numeric_limits<i32>::max();\nconstexpr i32 I32_MIN = numeric_limits<i32>::min();\n\nconstexpr i64 I64_MAX = numeric_limits<i64>::max();\nconstexpr i64 I64_MIN = numeric_limits<i64>::min();\n\ntemplate<typename T>\nint GETBIT(T x, int i) { return (x>>i) & 1; }\ntemplate<typename T>\nvoid SETBIT(T& x, int i) { x |= (T(1)<<i); }\ntemplate<typename T>\nvoid CLEARBIT(T& x, int i) { x &= ~(T(1)<<i); }\n\ntemplate<typename T>\nconstexpr const T& MAX(const T& x, const T& y) { return std::max(x, y); }\ntemplate<typename T, typename Comp>\nconstexpr const T& MAX(const T& x, const T& y, Comp comp) { return std::max(x, y, comp); }\ntemplate<typename T>\nconstexpr T MAX(initializer_list<T> ilist) { return std::max(ilist); }\ntemplate<typename T, typename Comp>\nconstexpr T MAX(initializer_list<T> ilist, Comp comp) { return std::max(ilist, comp); }\n\ntemplate<typename T>\nconstexpr const T& MIN(const T& x, const T& y) { return std::min(x, y); }\ntemplate<typename T, typename Comp>\nconstexpr const T& MIN(const T& x, const T& y, Comp comp) { return std::min(x, y, comp); }\ntemplate<typename T>\nconstexpr T MIN(initializer_list<T> ilist) { return std::min(ilist); }\ntemplate<typename T, typename Comp>\nconstexpr T MIN(initializer_list<T> ilist, Comp comp) { return std::min(ilist, comp); }\n\ntemplate<typename T>\nconstexpr T ABS(T x) {\n    static_assert(is_signed<T>::value, \"ABS(): argument must be signed\");\n    return x < 0 ? -x : x;\n}\n\ntemplate<typename T>\nconstexpr T abs_diff(T x, T y) {\n    return x < y ? y-x : x-y;\n}\n\ntemplate<typename T>\nconstexpr bool is_odd(T x)  { return x % 2 != 0; }\ntemplate<typename T>\nconstexpr bool is_even(T x) { return x % 2 == 0; }\n\ntemplate<typename T>\nconstexpr bool parity_same(T x, T y) {\n    return (is_odd(x) && is_odd(y)) || (is_even(x) && is_even(y));\n}\n\ntemplate<typename T>\nconstexpr int cmp(T x, T y) { return (y < x) - (x < y); }\n\ntemplate<typename T>\nconstexpr int sgn(T x) { return cmp(x, T(0)); }\n\ntemplate<typename T>\nconstexpr T ipow(T a, T b) {\n    assert(b >= 0);\n    T res(1);\n    for(T i = 0; i < b; ++i)\n        res *= a;\n    return res;\n}\n\nconstexpr i64 div_ceil(i64 a, i64 b) {\n    return a/b + (((a<0)^(b>0)) && (a%b));\n}\n\nconstexpr i64 div_floor(i64 a, i64 b) {\n    return a/b - (((a>0)^(b>0)) && (a%b));\n}\n\nconstexpr i64 modulo(i64 a, i64 b) {\n    assert(0 < b);\n    i64 r = a % b;\n    return r >= 0 ? r : r+b;\n}\n\ntemplate<typename T>\nconstexpr T CLAMP(T x, T lo, T hi) {\n    assert(lo <= hi);\n    if(x < lo)\n        return lo;\n    else if(hi < x)\n        return hi;\n    else\n        return x;\n}\n\ntemplate<typename T, typename U>\nbool chmax(T& xmax, const U& x) {\n    if(xmax < x) {\n        xmax = x;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ntemplate<typename T, typename U>\nbool chmin(T& xmin, const U& x) {\n    if(x < xmin) {\n        xmin = x;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ntemplate<typename T>\nconstexpr int SIZE(const T& c) {\n    return static_cast<int>(c.size());\n}\n\ntemplate<typename T, size_t N>\nconstexpr int SIZE(const T (&)[N]) {\n    return static_cast<int>(N);\n}\n\ntemplate<typename InputIt, typename T>\nint argfind(InputIt first, InputIt last, const T& x) {\n    auto it = find(first, last, x);\n    return distance(first, it);\n}\n\ntemplate<typename InputIt>\nint argmax(InputIt first, InputIt last) {\n    auto it = max_element(first, last);\n    return distance(first, it);\n}\n\ntemplate<typename InputIt>\nint argmin(InputIt first, InputIt last) {\n    auto it = min_element(first, last);\n    return distance(first, it);\n}\n\ntemplate<typename InputIt>\nbool alltrue(InputIt first, InputIt last) {\n    return all_of(first, last, [](bool b) { return b; });\n}\n\ntemplate<typename InputIt>\nbool anytrue(InputIt first, InputIt last) {\n    return any_of(first, last, [](bool b) { return b; });\n}\n\ntemplate<typename InputIt>\nbool allfalse(InputIt first, InputIt last) {\n    return !anytrue(first, last);\n}\n\ntemplate<typename InputIt>\nbool anyfalse(InputIt first, InputIt last) {\n    return !alltrue(first, last);\n}\n\n// hash {{{\ntemplate<typename T>\nstruct myhash {\n    size_t operator()(const T& x) const {\n        hash<T> h;\n        return h(x);\n    }\n};\n\ntemplate<typename T>\nvoid myhash_combine(size_t& seed, const T& x) {\n    myhash<T> h;\n    seed ^= h(x) + 0x9e3779b9 + (seed<<6) + (seed>>2);\n}\n\ntemplate<typename T1, typename T2>\nstruct myhash<pair<T1,T2>> {\n    size_t operator()(const pair<T1,T2>& p) const {\n        size_t seed = 0;\n        myhash_combine(seed, p.first);\n        myhash_combine(seed, p.second);\n        return seed;\n    }\n};\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I == sizeof...(TS), nullptr_t> = nullptr>\nvoid TUPLEHASH(size_t&, const tuple<TS...>&) {}\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I < sizeof...(TS), nullptr_t> = nullptr>\nvoid TUPLEHASH(size_t& seed, const tuple<TS...>& t) {\n    myhash_combine(seed, get<I>(t));\n    TUPLEHASH<I+1, TS...>(seed, t);\n}\n\ntemplate<typename... TS>\nstruct myhash<tuple<TS...>> {\n    size_t operator()(const tuple<TS...>& t) const {\n        size_t seed = 0;\n        TUPLEHASH(seed, t);\n        return seed;\n    }\n};\n\ntemplate<typename Seq>\nvoid SEQHASH(size_t& seed, const Seq& v) {\n    for(const auto& e : v)\n        myhash_combine(seed, e);\n}\n\ntemplate<typename T>\nstruct myhash<vector<T>> {\n    size_t operator()(const vector<T>& v) const {\n        size_t seed = 0;\n        SEQHASH(seed, v);\n        return seed;\n    }\n};\n\ntemplate<typename T, size_t N>\nstruct myhash<array<T,N>> {\n    size_t operator()(const array<T,N>& v) const {\n        size_t seed = 0;\n        SEQHASH(seed, v);\n        return seed;\n    }\n};\n\ntemplate<typename T>\nusing HashSet = unordered_set<T,myhash<T>>;\n\ntemplate<typename K, typename V>\nusing HashMap = unordered_map<K,V,myhash<K>>;\n\ntemplate<typename T>\nusing HashMultiSet = unordered_multiset<T,myhash<T>>;\n\ntemplate<typename K, typename V>\nusing HashMultiMap = unordered_multimap<K,V,myhash<K>>;\n// }}}\n\ntemplate<typename K, typename V>\npair<typename map<K,V>::iterator, bool> insert_or_assign(map<K,V>& m, const K& k, const V& v) {\n    auto it = m.lower_bound(k);\n    if(it != end(m) && !m.key_comp()(k,it->first)) {\n        it->second = v;\n        return make_pair(it, false);\n    }\n    else {\n        auto it_ins = m.insert(it, make_pair(k,v));\n        return make_pair(it_ins, true);\n    }\n}\n\ntemplate<typename K, typename V>\npair<typename HashMap<K,V>::iterator, bool>\ninsert_or_assign(HashMap<K,V>& m, const K& k, const V& v) {\n    auto it = m.find(k);\n    if(it != end(m)) {\n        it->second = v;\n        return make_pair(it, false);\n    }\n    else {\n        auto it_ins = m.insert(it, make_pair(k,v));\n        return make_pair(it_ins, true);\n    }\n}\n\ntemplate<typename T>\nstring TO_STRING(const T& x) {\n    ostringstream out;\n    out << x;\n    return out.str();\n}\n\ntemplate<typename InputIt>\nstring JOIN(InputIt first, InputIt last, const string& sep) {\n    ostringstream out;\n    while(first != last) {\n        out << *first++;\n        if(first != last)\n            out << sep;\n    }\n    return out.str();\n}\n\ntemplate<typename InputIt>\nauto SUM(InputIt first, InputIt last) {\n    using T = typename iterator_traits<InputIt>::value_type;\n    return accumulate(first, last, T());\n}\n\ntemplate<typename T>\nvoid UNIQ(T& c) {\n    c.erase(unique(begin(c), end(c)), end(c));\n}\n\ntemplate<typename T, typename F>\nenable_if_t<rank<T>::value==0> ARRAY_FOREACH(T& e, F f) {\n    f(e);\n}\n\ntemplate<typename Array, typename F>\nenable_if_t<rank<Array>::value!=0> ARRAY_FOREACH(Array& ary, F f) {\n    for(auto& e : ary)\n        ARRAY_FOREACH(e, f);\n}\n\ntemplate<typename Array, typename U>\nenable_if_t<rank<Array>::value!=0> ARRAY_FILL(Array& ary, const U& v) {\n    ARRAY_FOREACH(ary, [&v](auto& elem) { elem = v; });\n}\n\ntemplate<typename T>\nT POP_BACK(vector<T>& que) {\n    T x = que.back(); que.pop_back();\n    return x;\n}\n\ntemplate<typename T>\nT POP_BACK(deque<T>& que) {\n    T x = que.back(); que.pop_back();\n    return x;\n}\n\ntemplate<typename T>\nT POP_FRONT(deque<T>& que) {\n    T x = que.front(); que.pop_front();\n    return x;\n}\n\ntemplate<typename T, typename C>\nT POP(stack<T,C>& stk) {\n    T x = stk.top(); stk.pop();\n    return x;\n}\n\ntemplate<typename T, typename C>\nT POP(queue<T,C>& que) {\n    T x = que.front(); que.pop();\n    return x;\n}\n\ntemplate<typename T, typename Cont, typename Cmp>\nT POP(priority_queue<T,Cont,Cmp>& que) {\n    T x = que.top(); que.pop();\n    return x;\n}\n\ntemplate<typename T>\nvoid RD(T& x) {\n    cin >> x;\n#ifdef LOCAL\n    if(!cin) assert(false);\n#endif\n}\n\ntemplate<typename T>\nvoid RD(vector<T>& v, int n) {\n    v.reserve(n);\n    for(int i = 0; i < n; ++i) {\n        T e; RD(e);\n        v.emplace_back(e);\n    }\n}\n\ntemplate<typename T, size_t N>\nvoid RD(array<T,N>& v) {\n    for(size_t i = 0; i < N; ++i) {\n        RD(v[i]);\n    }\n}\n\n// 出力 {{{\n// FPRINTSEQ {{{\ntemplate<typename InputIt>\nostream& FPRINTSEQ(ostream& out, InputIt first, InputIt last) {\n    while(first != last) {\n        out << *first++;\n        if(first != last)\n            out << ' ';\n    }\n    return out;\n}\ntemplate<typename InputIt>\nostream& PRINTSEQ(InputIt first, InputIt last) {\n    return FPRINTSEQ(cout, first, last);\n}\ntemplate<typename InputIt>\nostream& DPRINTSEQ(InputIt first, InputIt last) {\n#ifdef LOCAL\n    FPRINTSEQ(cerr, first, last);\n#endif\n    return cerr;\n}\n// }}}\n\n// 1次元生配列 {{{\ntemplate<typename T, size_t N>\nostream& FPRINTARRAY1(ostream& out, const T (&c)[N]) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\ntemplate<typename T, size_t N>\nostream& PRINTARRAY1(const T (&c)[N]) {\n    return FPRINTARRAY1(cout, c);\n}\ntemplate<typename T, size_t N>\nostream& DPRINTARRAY1(const T (&c)[N]) {\n#ifdef LOCAL\n    FPRINTARRAY1(cerr, c);\n#endif\n    return cerr;\n}\n// }}}\n\n// 2次元生配列 {{{\ntemplate<typename T, size_t N1, size_t N2>\nostream& FPRINTARRAY2(ostream& out, const T (&c)[N1][N2]) {\n    out << '\\n';\n    for(const auto& e : c) {\n        FPRINTARRAY1(out, e) << '\\n';\n    }\n    return out;\n}\ntemplate<typename T, size_t N1, size_t N2>\nostream& PRINTARRAY2(const T (&c)[N1][N2]) {\n    return FPRINTARRAY2(cout, c);\n}\ntemplate<typename T, size_t N1, size_t N2>\nostream& DPRINTARRAY2(const T (&c)[N1][N2]) {\n#ifdef LOCAL\n    FPRINTARRAY2(cerr, c);\n#endif\n    return cerr;\n}\n// }}}\n\n// 非mapコンテナ {{{\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\n// 特別扱い\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<vector<T>>& c) {\n    out << '\\n';\n    for(const auto& e : c) {\n        out << e << '\\n';\n    }\n    return out;\n}\n\n// 特別扱い\nostream& operator<<(ostream& out, const vector<string>& c) {\n    out << '\\n';\n    for(const string& e : c) {\n        out << e << '\\n';\n    }\n    return out;\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const deque<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const set<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const HashSet<T>& c) {\n    return out << set<T>(begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const multiset<T>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const HashMultiSet<T>& c) {\n    return out << multiset<T>(begin(c), end(c));\n}\n\ntemplate<typename T, size_t N>\nostream& operator<<(ostream& out, const array<T,N>& c) {\n    return FPRINTSEQ(out, begin(c), end(c));\n}\n// }}}\n\n// mapコンテナ {{{\ntemplate<typename InputIt>\nostream& FPRINTMAP(ostream& out, InputIt first, InputIt last) {\n    out << \"{\\n\";\n    for(auto it = first; it != last; ++it) {\n        out << \"  \" << it->first << \" : \" << it->second << '\\n';\n    }\n    out << \"}\\n\";\n    return out;\n}\ntemplate<typename InputIt>\nostream& PRINTMAP(InputIt first, InputIt last) {\n    return FPRINTMAP(cout, first, last);\n}\ntemplate<typename InputIt>\nostream& DPRINTMAP(InputIt first, InputIt last) {\n#ifdef LOCAL\n    FPRINTMAP(cerr, first, last);\n#endif\n    return cerr;\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const map<K,V>& c) {\n    return FPRINTMAP(out, begin(c), end(c));\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const HashMap<K,V>& c) {\n    return out << map<K,V>(begin(c), end(c));\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const multimap<K,V>& c) {\n    return FPRINTMAP(out, begin(c), end(c));\n}\n\ntemplate<typename K, typename V>\nostream& operator<<(ostream& out, const HashMultiMap<K,V>& c) {\n    return out << multimap<K,V>(begin(c), end(c));\n}\n// }}}\n\n// stack/queue/priority_queue {{{\ntemplate<typename T, typename C>\nostream& operator<<(ostream& out, stack<T,C> c) {\n    while(!c.empty()) {\n        out << c.top();\n        c.pop();\n        if(!c.empty()) out << ' ';\n    }\n    return out;\n}\n\ntemplate<typename T, typename C>\nostream& operator<<(ostream& out, queue<T,C> c) {\n    while(!c.empty()) {\n        out << c.front();\n        c.pop();\n        if(!c.empty()) out << ' ';\n    }\n    return out;\n}\n\ntemplate<typename T, typename Cont, typename Cmp>\nostream& operator<<(ostream& out, priority_queue<T,Cont,Cmp> c) {\n    while(!c.empty()) {\n        out << c.top();\n        c.pop();\n        if(!c.empty()) out << ' ';\n    }\n    return out;\n}\n// }}}\n\n// pair/tuple {{{\ntemplate<typename T1, typename T2>\nostream& operator<<(ostream& out, const pair<T1,T2>& p) {\n    return out << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I == sizeof...(TS), nullptr_t> = nullptr>\nostream& FPRINTTUPLE(ostream& out, const tuple<TS...>&) {\n    if(sizeof...(TS) == 0)\n        out << '(';\n    return out << ')';\n}\n\ntemplate<size_t I=0, typename... TS, enable_if_t<I < sizeof...(TS), nullptr_t> = nullptr>\nostream& FPRINTTUPLE(ostream& out, const tuple<TS...>& t) {\n    if(I == 0)\n        out << '(';\n    else\n        out << ',';\n    out << get<I>(t);\n    return FPRINTTUPLE<I+1, TS...>(out, t);\n}\n\ntemplate<typename... TS>\nostream& operator<<(ostream& out, const tuple<TS...>& t) {\n    return FPRINTTUPLE(out, t);\n}\n// }}}\n\n// PRINT {{{\nostream& FPRINT(ostream& out) { return out; }\n\ntemplate<typename T, typename... TS>\nostream& FPRINT(ostream& out, const T& x, const TS& ...args) {\n    out << x;\n    if(sizeof...(args))\n        out << ' ';\n    return FPRINT(out, args...);\n}\n\ntemplate<typename... TS>\nostream& FPRINTLN(ostream& out, const TS& ...args) {\n    FPRINT(out, args...);\n    return out << '\\n';\n}\n\ntemplate<typename... TS>\nostream& PRINT(const TS& ...args) {\n    return FPRINT(cout, args...);\n}\n\ntemplate<typename... TS>\nostream& PRINTLN(const TS& ...args) {\n    return FPRINTLN(cout, args...);\n}\n\ntemplate<typename... TS>\nostream& DPRINT(const TS& ...args) {\n#ifdef LOCAL\n    FPRINT(cerr, args...);\n#endif\n    return cerr;\n}\n\ntemplate<typename... TS>\nostream& DPRINTLN(const TS& ...args) {\n#ifdef LOCAL\n    FPRINTLN(cerr, args...);\n#endif\n    return cerr;\n}\n// }}}\n// }}}\n\nvoid FLUSH() {\n    cout.flush();\n}\n\n[[noreturn]] void EXIT() {\n#ifdef LOCAL\n    cout.flush();\n    cerr.flush();\n#else\n    FLUSH();\n#endif\n    //quick_exit(0); // does not work on codeforces\n    _Exit(0);\n}\n\nstruct IoInit {\n    IoInit() {\n#ifndef LOCAL\n        cin.tie(nullptr);\n        ios::sync_with_stdio(false);\n#endif\n        cout << fixed << setprecision(IOS_PREC);\n\n        if(AUTOFLUSH)\n            cout << unitbuf;\n    }\n} IOINIT;\n\n#define FOR(i, start, end) for(i64 i = (start); i < (end); ++i)\n#define REP(i, n) FOR(i, 0, n)\n\n#define ALL(f,c,...) (([&](decltype((c)) cc) { return (f)(begin(cc), end(cc), ## __VA_ARGS__); })(c))\n\n#define GENERIC(f) ([](auto&&... args) -> decltype(auto) { return (f)(forward<decltype(args)>(args)...); })\n\n#define DBG(x) DPRINTLN('L', __LINE__, ':', #x, ':', (x))\n\n#define PAIR make_pair\n#define TUPLE make_tuple\n// }}}\n\nbool is_set(i64 x, i64 y, i64 z) {\n    if(x == y && y == z) return true;\n    if(x+1 == y && y+1 == z) return true;\n    return false;\n}\n\nbool is_ok(const array<i64,9>& A) {\n    return is_set(A[0],A[1],A[2]) && is_set(A[3],A[4],A[5]) && is_set(A[6],A[7],A[8]);\n}\n\nvoid solve(array<i64,9> A) {\n    do {\n        if(is_ok(A)) {\n            PRINTLN(1);\n            return;\n        }\n    } while(ALL(next_permutation, A));\n\n    PRINTLN(0);\n}\n\nsigned main(signed /*argc*/, char** /*argv*/) {\n    i64 T; RD(T);\n\n    REP(_, T) {\n        array<i64,9> A;\n        RD(A);\n        REP(i, 9) {\n            char c; RD(c);\n            switch(c) {\n            case 'R':             break;\n            case 'G': A[i] += 10; break;\n            case 'B': A[i] += 20; break;\n            default:  assert (false);\n            }\n        }\n        solve(A);\n    }\n\n    EXIT();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define vi vector<int>\n#define pb push_back\n#define INF 999999999\n//#define INF (1LL<<59)\n\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tvector<int> a(9);\n\t\tvector<char> c(9);\n\t\t\n\t\trep(i,9)cin>>a[i];\n\t\trep(i,9)cin>>c[i];\n\t\t\n\t\tvector<int> v[3];\n\t\trep(i,9){\n\t\t\tif(c[i]=='R')v[0].pb(a[i]);\n\t\t\tif(c[i]=='G')v[1].pb(a[i]);\n\t\t\tif(c[i]=='B')v[2].pb(a[i]);\n\t\t}\n\t\trep(i,3)sort(all(v[i]));\n\t\t\n\t\tint count=0;\n\t\trep(i,3){\n\t\t\tvector<int> &tmp = v[i];\n\t\t\tfor(int j=0;j<tmp.size();){\n\t\t\t\tif(tmp[j]+2==tmp[j+1]+1&&tmp[j+1]+1&&tmp[j+2] || tmp[j]==tmp[j+1]&&tmp[j+1]==tmp[j+2]){\n\t\t\t\t\tcount++;\n\t\t\t\t\tj+=3;\n\t\t\t\t}else j++;\n\t\t\t}\n\t\t}\n\t\tif(count==3)cout<<1<<endl;\n\t\telse cout<<0<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint n[10];\nchar c[10];\n\nbool check(vector<pair<int,char>> v){\n    for (int i=0;i<2;++i)\n        if (v[i+1].second!=v[i].second)\n            return false;\n    if (v[0].first==v[1].first&&v[1].first==v[2].first) return true;\n    for (int i=0;i<2;++i)\n        if (v[i+1].first-v[i].first!=1)\n            return false;\n    return true;\n}\n\nvoid solve(){\n    bool ans=false;\n    vector<int> perm(9);\n    iota(perm.begin(),perm.end(),0);\n    do {\n        for (int i=0;i<3;++i){\n            vector<pair<int,char>> v;\n            for (int j=0;j<3;++j)\n                v.emplace_back(n[perm[3*i+j]],c[perm[3*i+j]]);\n            sort(v.begin(),v.end());\n            if (!check(v)) break;\n            if (i==2) ans=true;\n        }\n    } while(next_permutation(perm.begin(),perm.end()));\n    cout << (ans?1:0) << '\\n';\n}\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int T; cin >> T;\n    for (;T--;){\n        for (int i=0;i<9;++i) cin >> n[i];\n        for (int i=0;i<9;++i) cin >> c[i];\n        solve();\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 20;\n\t\t\tif(color == \"B\") n[k] += 40;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\t// return 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nbool is_same_number(int a, int b, int c) {\n  return a==b && b==c;\n}\nbool is_sequence(int a, int b, int c) {\n  return (a+2 == c && b+1 == c);\n}\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set () {\n  return is_good_set(card[0],card[1],card[2])\n    && is_good_set(card[3],card[4],card[5])\n    && is_good_set(card[6],card[7],card[8]);\n}\nint win() {\n  // Sort the card\n  sort(card, card+9);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}\n\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    //cout << sort(card, card+9) << endl;\n    cout << win() << endl;   \n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void){\n\tint card[9], n, i, j, k, s[3][9];\n\tchar c, color[4] ={\"RGB\"};\n\tscanf(\"%d\",&n);\n\tfor(i = 0;i < n;i++){\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%d\",&card[j]);\n\t\t\tcard[j]--;\n\t\t}\n\t\tgetchar();\n\t\tmemset(s,0,sizeof(s));\n\t\tfor(j = 0;j < 9;j++){\n\t\t\tscanf(\"%c\",&c);\n\t\t\tgetchar();\n\t\t\tfor(k = 0;k < 3;k++)\n\t\t\t\tif(color[k] == c) s[k][card[j]]++;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k] >= 3) s[j][k] %= 3;\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 7;k++){\n\t\t\t\tif(s[j][k] && s[j][k + 1] && s[j][k + 2]){\n\t\t\t\t\ts[j][k]--,s[j][k + 1]--,s[j][k + 2]--;\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(j = 0;j < 3;j++){\n\t\t\tfor(k = 0;k < 9;k++)\n\t\t\t\tif(s[j][k]) break;\n\t\t\tif(k != 9) break;\n\t\t}\n\t\tif(j == 3)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t\tprintf(\"0\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n\treturn a == b && b == c;\n}\nbool is_sequence(int a, int b, int c){\n\treturn a+2 == b+1 && b+1 == c;\n}\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2]) && \n\t\tis_good_set(card[3], card[4], card[5]) &&\n\t\tis_good_set(card[6], card[7], card[8]);\n}\nint win(){\n\tsort(card, card+9);\n\tdo{\n\t\tif(is_all_good_set()) return 1;\n\t}while(next_permutation(card, card+9));\n\treturn 0;\n}\nint main(){\n\tcin >> T;\n\tfor(int t=0; t<T; ++t){\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin >> color;\n\t\t\tif(color ==\"G\") card[i]+=10;\n\t\t\telse if(color == \"B\") card[i]+=20;\n\t\t}\n\t\tcout << win() <<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n;\nint a[11];\nint v[3][11];\nint main(void){\n  cin >> n;\n  for(int k = 0; k < n; k++){\n    memset(v,0,sizeof(v));\n    for(int i = 0; i < 9; i++){\n      cin >> a[i];\n    }\n    for(int i = 0; i < 9; i++){\n      char c;\n      cin >> c;\n      v[c=='R'?0:c=='G'?1:2][a[i]]++;\n    }\n\n    int c = 0;\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j < 9; j++){\n\tif(v[i][j] >= 3){\n\t  c++;\n\t  v[i][j] -= 3;\n\t}\n      }\n    }\n\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j+2 < 9; j++){\n\tif(v[i][j] && v[i][j+1] && v[i][j+2]){\n\t  c++;\n\t  v[i][j]--;\n\t  v[i][j+1]--;\n\t  v[i][j+2]--;\n\t}\n      }\n    }\n    cout << (c>=3?1:0) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cctype>\n#include <limits.h>\n#include <math.h>\n#include <complex>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n\n#define VARIABLE(x) cerr << #x << \"=\" << x << endl\n#define BINARY(x) static_cast<bitset<16> >(x);\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n\nconst int INF = 1000000000;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={0, 1, 0, -1}, dy[4]={-1, 0, 1, 0};\nusing namespace std;\ntypedef pair<int, int> P;\n\n/** Problem2102 : Rummy **/\n\nint main()\n{\n\tint N; cin>>N;\n\tvector<P> card(9);\n\n\trep(z, N) {\n\t\trep(i, 9) cin>>card[i].first;\n\t\trep(i, 9) {\n\t\t\tchar a; cin>>a;\n\t\t\tif (a=='R') card[i].second=0;\n\t\t\tif (a=='G') card[i].second=1;\n\t\t\tif (a=='B') card[i].second=2;\n\t\t}\n\t\t\n\t\tbool ok=false;\n\t\tsort(card.begin(), card.end());\n\t\tdo {\n\t\t\tbool tmp=true;\n\t\t\trep(i, 3) {\n\t\t\t\tif (card[i*3].second == card[i*3+1].second && card[i*3+1].second == card[i*3+2].second) {\n\t\t\t\t\tif ((card[i*3].first == card[i*3+1].first && card[i*3+1].first == card[i*3+2].first) ||\n\t\t\t\t\t\t(card[i*3].first+1 == card[i*3+1].first && card[i*3+1].first+1 == card[i*3+2].first))\n\t\t\t\t\t\t;\n\t\t\t\t\telse\n\t\t\t\t\t\ttmp=false;\n\t\t\t\t} else tmp=false;\n\t\t\t}\n\t\t\tif (tmp) ok=true;\n\t\t} while (next_permutation(card.begin(), card.end()));\n\t\t\n\t\tcout << ok << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n//R:0~8, G:10~18, B:20~28 とする．\n\n#define RED\t\t0\n#define GREEN\t10\n#define BLUE\t20\n\nint main(void)\n{\n\tint T;\n\tcin >> T;\n\tfor(int i=0;i<T;i++){\n\t\tvector<int> card(9, 0);\n\t\tfor(int j=0;j<9;j++){\n\t\t\tint n;\n\t\t\tcin >> n;\n\t\t\tcard[j] += n;\n\t\t}\n\t\tfor(int j=0;j<9;j++){\n\t\t\tstring color;\n\t\t\tcin >> color;\n\t\t\tif (color.compare(\"R\")==0){\n\t\t\t\tcard[j] += RED;\n\t\t\t}else if(color.compare(\"G\")==0){\n\t\t\t\tcard[j] += GREEN;\n\t\t\t}else if(color.compare(\"B\")==0){\n\t\t\t\tcard[j] += BLUE;\n\t\t\t}\n\t\t}\n\t\t//扱いやすいよう並び替える\n\t\tsort(card.begin(), card.end());\n\t\tint set=0;\n\t\tfor(int j=0;j<3;j++){\n\t\t\t//3つとも同じカードの場合\n\t\t\tif (card[3*j]==card[3*j+1] && card[3*j+1]==card[3*j+2]){\n\t\t\t\tset++;\n\t\t\t}\n\t\t\t//連番の場合\n\t\t\tif (card[3*j]+1==card[3*j+1] && card[3*j+1]+1==card[3*j+2]){\n\t\t\t\tset++;\n\t\t\t}\n\t\t}\n\t\tif (set==3){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Card {\n\tint n;\n\tchar color;\n\n\tbool operator<(const Card& temp) const {\n\t\tif (color == temp.color) {\n\t\t\treturn n < temp.n;\n\t\t}\n\t\telse {\n\t\t\treturn color > temp.color;\n\t\t}\n\t}\n};\n\nint main() {\n\tint n;\n\n\tcin >> n;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tCard card[9];\n\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> card[j].n;\n\t\t}\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tcin >> card[j].color;\n\t\t}\n\n\t\tsort(card, card + 9);\n\n\t\tbool success = true;\n\t\tfor (int j = 0; j < 9; j += 3) {\n\t\t\tif (card[j].color == card[j + 1].color && card[j].color == card[j + 2].color) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsuccess = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (success == false) {\n\t\t\tcout << 0 << endl;\n\t\t}\n\t\telse {\n\t\t\tsuccess = true;\n\t\t\tfor (int j = 0; j < 9; j += 3) {\n\t\t\t\tif (card[j].n == card[j + 1].n && card[j].n == card[j + 2].n) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse if (card[j].n == card[j + 1].n - 1 && card[j].n == card[j + 2].n - 2) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsuccess = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (success == false) {\n\t\t\t\tcout << 0 << endl;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcout << 1 << endl;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace rummy\n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}\n}"
  },
  {
    "language": "C++",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result = toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "C++",
    "code": "// 問題名:　Square Route\n// URL: http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2015&lang=jp\n// 所要時間: 20分\n// --感想--\n// intの配列は今までfor文を用いて1個ずつ0を代入して初期化していたので、今後は\"= {}\"などを用いて簡略化するようにしたい。\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    int T;\n    cin >> T;\n    for (; T > 0; T--){\n        int n[11];\n        char c[11];\n        for (int i = 0; i < 9;i++)\n            cin >> n[i];\n        for (int i = 0; i < 9; i++)\n            cin >> c[i];\n        pair<int,char> card[11];\n        for (int i = 0; i < 9;i++)\n            card[i] = make_pair(n[i], c[i]);\n        sort(card, card + 9);\n        int ans = 0;\n        // 勝てる手札なら、左から綺麗に3セット並ぶような並べ方が存在する\n        do{\n            bool flag = true;\n            for (int i = 0; i < 3;i++){\n                // カードの色が違う\n                if (card[i * 3].second != card[i * 3 + 1].second || card[i * 3 + 1].second != card[i * 3 + 2].second)\n                    flag = false;\n                // 連番や同じ数字でない\n                if (!((card[i * 3].first == card[i * 3 + 1].first && card[i * 3 + 1].first == card[i * 3 + 2].first)\n                    ||(card[i * 3].first + 1 == card[i * 3 + 1].first && card[i * 3 + 1].first + 1 == card[i * 3 + 2].first)))\n                    flag = false;\n            }\n            if(flag)\n                ans = 1;\n        } while (next_permutation(card, card + 9));\n        cout << ans << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define _GLIBCXX_DEBUG\n\nvoid print(vector<int> l) {\n  for (int i : l) {\n    cout << i;\n  }\n  cout << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int n = 0; n < T; n++) {\n    bool ans = true;\n    vector<int> a, b, c;\n    vector<int> cardN(9);\n    for (int i = 0; i < 9; i++)\n      cin >> cardN[i];\n    for (int i = 0; i < 9; i++) {\n      string cardC;\n      cin >> cardC;\n      if (cardC == \"R\")\n        a.push_back(cardN[i]);\n      if (cardC == \"G\")\n        b.push_back(cardN[i]);\n      if (cardC == \"B\")\n        c.push_back(cardN[i]);\n    }\n\n    if ((a.size() % 3) || (b.size() % 3) || (c.size() % 3)) {\n\t\t\tcout<<0<<endl;//最初はans=falseにしてた\n      continue;\n    }\n\n    for (vector<int> nv : {a, b, c}) {\n      sort(nv.begin(), nv.end());\n      while (nv.size() != 0) {\n        if ((nv[0] == nv[1]) && (nv[1] == nv[2]))\n          nv.erase(nv.begin(), nv.begin() + 3);\n\t\t\t\t//eraseの２つめの引数は削除したい範囲の次を指す\n        else {\n          auto p2 = find(nv.begin(), nv.end(), nv[0] + 1);\n          auto p3 = find(nv.begin(), nv.end(), nv[0] + 2);\n          if ((p2 != end(nv)) && (p3 != end(nv))) {\n            nv.erase(p3);\n            nv.erase(p2);\n\t\t\t\t\t\tnv.erase(nv.begin());//最初忘れてた\n\t\t\t\t\t\t/*nv.erase(nv.begin());\n            nv.erase(p2);\n            nv.erase(p3);//ミス\n\t\t\t\t\t\t*/\n          } else {\n            ans = false;\n            break;\n          }\n        }\n      }\n    }\n\n    cout << ans << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nbool S;\nvector<int>A;\nvector<int>B;\nvector<int>C;\nint d[9]; char e[9];\nvoid saiki(int a) {\n\tif (a == 9) {\n\t\tint sum = 0;\n\t\tif (e[A[0]] == e[A[1]] && e[A[1]] == e[A[2]]) {\n\t\t\tint f[3];\n\t\t\tf[0] = d[A[0]]; f[1] = d[A[1]]; f[2] = d[A[2]];\n\t\t\tsort(f, f + 3);\n\t\t\tif (f[0] == f[1] && f[1] == f[2])sum++;\n\t\t\tif (f[0]+1 == f[1] && f[1]+1 == f[2])sum++;\n\t\t}\n\t\tif (e[B[0]] == e[B[1]] && e[B[1]] == e[B[2]]) {\n\t\t\tint f[3];\n\t\t\tf[0] = d[B[0]]; f[1] = d[B[1]]; f[2] = d[B[2]];\n\t\t\tsort(f, f + 3);\n\t\t\tif (f[0] == f[1] && f[1] == f[2])sum++;\n\t\t\tif (f[0] + 1 == f[1] && f[1] + 1 == f[2])sum++;\n\t\t}\n\t\tif (e[C[0]] == e[C[1]] && e[C[1]] == e[C[2]]) {\n\t\t\tint f[3];\n\t\t\tf[0] = d[C[0]]; f[1] = d[C[1]]; f[2] = d[C[2]];\n\t\t\tsort(f, f + 3);\n\t\t\tif (f[0] == f[1] && f[1] == f[2])sum++; if (f[0] + 1 == f[1] && f[1] + 1 == f[2])sum++;\n\t\t}\n\t\tif (sum == 3)S = true;\n\t}\n\telse {\n\t\tif (A.size() < 3) { A.push_back(a); saiki(a + 1); A.pop_back(); }\n\t\tif (B.size() < 3) { B.push_back(a); saiki(a + 1); B.pop_back();}\n\t\tif (C.size() < 3) { C.push_back(a); saiki(a + 1); C.pop_back();}\n\t}\n}\nint main()\n{   \n\tint a; cin >> a;\n\tfor (int b = 0; b < a; b++) {\n\t\tS = false; A.clear(); B.clear(); C.clear();\n\t\tfor (int g = 0; g < 9; g++)scanf(\"%d\", &d[g]);\n\t\tfor (int g = 0; g < 9; g++)cin >> e[g];\n\t\tsaiki(0);\n\t\tcout << S << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\n\nbool samenum(int a,int b,int c)\n{\nreturn a==b && b==c ;\n}\n\n\nbool renban(int a,int b,int c){\nreturn a+2==b+1 && b+1==c; \n}\nbool ok(int a,int b,int c){\n\treturn samenum(a,b,c)|| renban(a,b,c);\n}\nbool clear(int a1,int a2,int a3,int a4,int a5,int a6,int a7,int a8,int a9){\nreturn ok(a1,a2,a3)&&ok(a4,a5,a6)&&ok(a7,a8,a9);\n}\n\n\n\nint main() {\nint n,num[9];\nstring col;\ncin>>n;\n\nfor (int kk=0;kk<n;kk++){\n\tfor(int k=0;k<9;k++){\n\t\tcin>>num[k];\n\t}\n\tfor(int k=0;k<9;k++){\n\t\tcin>>col;\n\t\tif(col==\"R\"){\n\t\t\tnum[k]=num[k]+10;\n\t\t}\n\t\tif(col==\"G\"){\n\t\tnum[k]=num[k]+20;\t\n\t\t}\n\t\tif(col==\"B\"){\n\t\t\tnum[k]=num[k]+30;\n\t\t}\n\t}\n\tint j=0;\n\tsort (num,num+9);\n\tdo{\n\t\tif(clear(num[0],num[1],num[2],num[3],num[4],num[5],num[6],num[7],num[8])) j=1;\n\t}while(next_permutation(num,num+9));\n\tcout<<j<<endl;\n}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main(){\n  char asc[9];\n  int num[9]; \n  int t,tmp;\n  char tmp1;\n  cin >> t;\n  while(t--){\n    bool ju[9];\n    memset(ju,true,sizeof(ju));\n    int cnt = 0;\n    for(int i=0;i<9;i++) cin >> num[i];\n    for(int i=0;i<9;i++) cin >> asc[i];\n    for(int i=0;i<8;i++){\n      for(int j=8;j>i;j--){\n\tif(asc[j] > asc[j-1]){\n\t  tmp = num[j];\n\t  num[j] = num[j-1];\n\t  num[j-1] = tmp;\n\t  tmp1 = asc[j];\n\t  asc[j] = asc[j-1];\n\t  asc[j-1] = tmp1;\n\t}\n\tif(num[j] < num[j-1] && asc[j] == asc[j-1]){\n\t  tmp = num[j];\n\t  num[j] = num[j-1];\n\t  num[j-1] = tmp;\n\t  tmp1 = asc[j];\n\t  asc[j] = asc[j-1];\n\t  asc[j-1] = tmp1;\n\t}\n      }\n    }\n    for(int i=0;i<7;i++){\n      if(asc[i] == asc[i+1] && asc[i+1] == asc[i+2] && ju[i] && ju[i+1] && ju[i+2]){\n\tif(num[i+1] == num[i]+1 && num[i+2] == num[i+1]+1 && ju[i] && ju[i+1] && ju[i+2]){\n\t  cnt++;\n\t  ju[i] = ju[i+1] = ju[i+2] = false;\n\t}\n\tif(num[i] == num[i+1] && num[i+1] == num[i+2] && ju[i] && ju[i+1] && ju[i+2]){\n\t  cnt++;\n\t  ju[i] = ju[i+1] = ju[i+2] = true;\n\t}\n      }\n    }\n    if(cnt >= 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint T,card[10];\nstring str;\n\nbool check1(int a,int b,int c){\n    if(a == b && b == c) return true;\n    return false;\n}\n\nbool check2(int a,int b,int c){\n    if(a+2 == b+1 && b+1 == c) return true;\n    return false;\n}\n\nbool check3(int a,int b,int c){\n    return check1(a,b,c) || check2(a,b,c);\n}\n\nbool check4(int card[10]){\n    return check3(card[0],card[1],card[2])&&check3(card[3],card[4],card[5])\n           &&check3(card[6],card[7],card[8]);\n}\n\nint judge(){\n    sort(card,card+9);\n    do{\n        if(check4(card)) return 1;\n        \n    }while(next_permutation(card,card+9));\n    return 0;\n}\n\nint main(){\n    cin >> T;\n    while(T--){\n        for(int i = 0 ; i < 9 ; i++){\n            cin >> card[i];\n        }\n        for(int i = 0 ; i < 9 ; i++){\n            cin >> str;\n            if(str == \"G\") card[i] += 10;\n            else if(str == \"B\") card[i] += 20;\n        }\n        cout << judge() << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\nconst ld eps = 1e-9;\n\nvector<pair<int, int>>cards(9);\n\nbool check(vector<pair<int, int>>cards3) {\n\tsort(cards3.begin(), cards3.end());\n\tbool ok = all_of(cards3.begin(), cards3.end(), [=](const pair<int, int>&p) {\n\t\treturn p.first == cards3[0].first;\n\n\t}) && ((cards3[0].second==cards3[1].second&&cards3[1].second==cards3[2].second)||(cards3[0].second + 1 == cards3[1].second&&cards3[1].second + 1 == cards3[2].second));\n\treturn ok;\n}\nbool check(const vector<int>&v) {\n\tvector<pair<int, int>>c;\n\tfor (int i = 0; i < v.size(); ++i)c.push_back(cards[v[i]]);\n\treturn check(c);\n}\n\nint main() {\n\tint T; cin >> T;\n\tmap<char, int>mp{ {'R',0},{'B',1},{'G',2} };\n\twhile (T--) {\n\t\tfor (int i = 0; i < 9; ++i) {\n\t\t\tint a; cin >> a;\n\t\t\tcards[i].second = a;\n\t\t}\n\t\tfor (int j = 0; j < 9; ++j) {\n\t\t\tchar c; cin >> c;\n\t\t\tcards[j].first = mp[c];\n\t\t}\n\t\tvector<int>v(6);\n\t\tint ans = false;\n\t\tfor (v[0] = 0; v[0] < 9; ++v[0]) {\n\t\t\tfor (v[1] = v[0] + 1; v[1] < 9; ++v[1]) {\n\t\t\t\tfor (v[2] = v[1] + 1; v[2] < 9; ++v[2]) {\n\t\t\t\t\tfor (v[3] = 0; v[3] < 9; ++v[3]) {\n\t\t\t\t\t\tfor (v[4] = v[3] + 1; v[4] < 9; ++v[4]) {\n\t\t\t\t\t\t\tfor (v[5] = v[4] + 1; v[5] < 9; ++v[5]) {\n\t\t\t\t\t\t\t\tbool ok = true;\n\t\t\t\t\t\t\t\tfor (int i = 0; i < 3; ++i) {\n\t\t\t\t\t\t\t\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\t\t\t\t\t\t\t\tif (v[i] == v[j + 3])ok = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (ok) {\n\t\t\t\t\t\t\t\t\tvector<int>used(9);\n\t\t\t\t\t\t\t\t\tfor (int i = 0; i < 6; ++i) {\n\t\t\t\t\t\t\t\t\t\tused[v[i]] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvector<int>as(v.begin(), v.begin() + 3);\n\t\t\t\t\t\t\t\t\tvector<int>bs(v.begin() + 3, v.begin() + 6);\n\t\t\t\t\t\t\t\t\tvector<int>cs;\n\t\t\t\t\t\t\t\t\tfor (int i = 0; i < 9; ++i) {\n\t\t\t\t\t\t\t\t\t\tif (!used[i])cs.push_back(i);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (check(as) && check(bs) && check(cs)) {\n\t\t\t\t\t\t\t\t\t\tans = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint r[10],g[10],b[10];\n\nbool rec(int n){\n  if(!n)return true;\n\n  for(int i=1;i<10;i++){\n    if(r[i]>=3){\n      r[i] -= 3;\n      if(rec(n-1))return true;\n      r[i] += 3;\n    }\n    if(g[i]>=3){\n      g[i] -= 3;\n      if(rec(n-1))return true;\n      g[i] += 3;\n    }\n    if(b[i]>=3){\n      b[i] -= 3;\n      if(rec(n-1))return true;\n      b[i] += 3;\n    }\n  }\n  for(int i=1;i<8;i++){\n    if(r[i] && r[i+1] && r[i+2]){\n      r[i]--;\n      r[i+1]--;\n      r[i+2]--;\n      if(rec(n-1))return true;\n      r[i]++;\n      r[i+1]++;\n      r[i+2]++;\n    }\n  if(g[i] && g[i+1] && g[i+2]){\n      g[i]--;\n      g[i+1]--;\n      g[i+2]--;\n      if(rec(n-1))return true;\n      g[i]++;\n      g[i+1]++;\n      g[i+2]++;\n    } \n  if(b[i] && b[i+1] && b[i+2]){\n      b[i]--;\n      b[i+1]--;\n      b[i+2]--;\n      if(rec(n-1))return true;\n      b[i]++;\n      b[i+1]++;\n      b[i+2]++;\n    }\n  }\n  return false;\n}\n\nint main(){\n  int tmp[10];\n  int t;\n\n  cin >> t;\n  while(t--){\n    for(int i=1;i<10;i++){\n      r[i] = 0;\n      g[i] = 0;\n      b[i] = 0;\n      cin >> tmp[i];\n    }\n    for(int i=1;i<10;i++){\n      char c;\n      cin >> c;\n      if(c == 'R')r[tmp[i]]++;\n      if(c == 'G')g[tmp[i]]++;\n      if(c == 'B')b[tmp[i]]++;\n    }\n\n    if(rec(3))cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\n#include <numeric>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nint T, n[10];\nchar c[10];\nbool visit[1<<10], enable;\n\nvoid f(int S) {\n  if (visit[S])\n    return;\n  visit[S] = true;\n  \n  if (S == (1<<9)-1) {\n    enable = true;\n    return;\n  }\n\n  for (int i = 0; i < 9; ++i) {\n    if (!(S >> i & 1)) {\n      for (int j = i+1; j < 9; ++j) {\n        if (c[i] != c[j]) continue;\n        if (!(S >> j & 1)) {\n          for (int k = j+1; k < 9; ++k) {\n            if (c[j] != c[k]) continue;\n            if (!(S >> k & 1)) {\n              int tN[] = { n[i], n[j], n[k] };\n              sort(tN, tN + 3);\n              if (((n[i] == n[j]) && (n[j] == n[k])) ||\n                  ((tN[0] + 1 == tN[1]) && (tN[1] + 1 == tN[2]))) {\n                f(S | (1<<k) | (1<<j) | (1<<i));\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  \n}\n\nint main() {\n  cin >> T;\n  rep(loop, T) {\n    rep(i,9) cin >> n[i];\n    rep(i,9) cin >> c[i];\n    fill(visit, visit + (1<<10), false);\n    enable = false;\n    f(0);\n    printf(\"%d\\n\", (enable) ? 1 : 0);\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<stack>\nusing namespace std;\ntypedef pair<int,int> P;\nint ca[3][30];\nint n[10];\nint T;\nint main(){\n  cin >> T;\n  for(int i=0;i<T;i++){\n    memset(ca,0,sizeof(ca));\n    for(int j=0;j<9;j++){\n      cin >> n[j];\n    }\n    for(int j=0;j<9;j++){\n      char c;\n      cin >> c;\n      if( c=='R' ){\n\tca[0][n[j]] ++;\n      } else if( c=='G' ){\n\tca[1][n[j]] ++;\n      } else {\n\tca[2][n[j]] ++;\n      }\n    }\n    \n    for(int j=0;j<10;j++){\n      for(int k=0;k<3;k++){\n\tif( ca[k][j] >= 3 ){\n\t  ca[k][j]%=3;\n\t}\n\tif(ca[k][j] >= 1 && ca[k][j+1] >=1 && ca[k][j+2] >= 1){\n\t  ca[k][j]--;\n\t  ca[k][j+1]--;\n\t  ca[k][j+2]--;\n\t}\n      }\n    }\n    bool f=true;\n    for(int j=0;j<10;j++){\n      for(int k=0;k<3;k++){\n\t//\tcout << k << \" \" << j << \" \"  << ca[k][j] << endl;\n\tif(ca[k][j]) f=false;\n      }\n    }\n    if( f ) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n  int n,card[100],math[100],tmp,set,end;\n  char s[100],TMP;\n  cin >> n;\n  for(int t=0;t<n;t++){\n    set=0;\n    for(int i=0;i<10;i++){\n      math[i]=0;\n    }\n\n\n    for(int i=0;i<9;i++){\n      cin >> card[i];\n    }\n\n    for(int i=0;i<9;i++){\n      cin >> s[i];\n    }\n\n\n    for(int i=0;i<9-1;i++){\n      for(int j=9-1;j>i;j--){\n\tif(card[j]<card[j-1]){\n\t  tmp=card[j];\n\t  card[j]=card[j-1];\n\t  card[j-1]=tmp;\n\n\t  TMP=s[j];\n\t  s[j]=s[j-1];\n\t  s[j-1]=TMP;\n\t}\n      }\n    }\n\n    for(int i=0;i<9;i++){\n      if(math[i]==0){\n\tfor(int j=i+1;j<9;j++){\n\t  if(math[j]==0){\n\t    for(int k=j+1;k<9;k++){\n\t      if(math[k]==0){\n\t\tif(s[i]==s[j] && s[j]==s[k] && card[i]+1==card[j] && card[j]+1==card[k]){\n\n\t\t  math[i]++;\n\t\t  math[j]++;\n\t\t  math[k]++;\n\t\t  set++;\n\t\t  i++;\n\t\t  j=i+1;\n\t\t  k=j+1;\n\t\t}\n\t      }\n\t    }\n\t  }\n\t}\n      }\n    }\n    for(int i=0;i<9;i++){\n      if(math[i]==0){\n\tfor(int j=i+1;j<9;j++){\n\t  if(math[j]==0){\n\t    for(int k=j+1;k<9;k++){\n\t      if(math[k]==0){\n\t\tif(s[i]==s[j] && s[j]==s[k] && card[i]==card[j] && card[j]==card[k]){\n\n\t\t  math[i]++;\n\t\t  math[j]++;\n\t\t  math[k]++;\n\t\t  set++;\n\t\t  i++;\n\t\t  j=i+1;\n\t\t  k=j+1;\n\t\t}\n\t      }\n\t    }\n\t  }\n\t}\n      }\n    }\n\n\n    //cout << set << endl;\n    if(set>=3){\n      cout << \"1\" << endl;\n    }\n    else{\n      cout << \"0\" << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n\nint tx[] = {0,1,0,-1};\nint ty[] = {-1,0,1,0};\n\nstatic const double EPS = 1e-8;\n\nclass Card{\npublic:\n\tstring color;\n\tint num;\n\n\tCard() : color(\"\"),num(0){}\n\tbool operator<(const Card& c) const{\n\t\tif(color == c.color){\n\t\t\treturn num < c.num;\n\t\t}\n\t\treturn color < c.color;\n\t}\n};\n\nint main(){\n\tint n;\n\n\twhile(~scanf(\"%d\",&n)){\n\n\t\tfor(int idx=0;idx<n;idx++){\n\t\t\tvector<Card> cards;\n\t\t\tint num[10];\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tscanf(\"%d\",&num[j]);\n\t\t\t}\n\n\t\t\tstring str;\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tcin >> str;\n\t\t\t\tCard c;\n\t\t\t\tc.color = str;\n\t\t\t\tc.num = num[j];\n\n\t\t\t\tcards.push_back(c);\n\t\t\t}\n\n\t\t\tsort(cards.begin(),cards.end());\n\n\t\t\tbool fail = false;\n\n\t\t\tfor(int i=0;i<9;){\n\t\t\t\tint prev_num = cards[i].num;\n\t\t\t\tstring prev_c = cards[i].color;\n\n\t\t\t\tbool isok = true;\n\t\t\t\t//3つ連続\n\t\t\t\tfor(int j=0;j<2;j++){\t\t\t\n\t\t\t\t\tif(cards[i+j+1].num == prev_num\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\n\t\t\t\t}\n\n\t\t\t\tif(isok) {\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\t//昇順\n\t\t\t\tfor(int j=0;j<2;j++){\n\t\t\t\t\tif(cards[i+j+1].num == prev_num + 1\n\t\t\t\t\t\t&& cards[i+j+1].color == prev_c){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tprev_num = cards[i+j+1].num;\n\t\t\t\t\tprev_c = cards[i+j+1].color;\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisok = true;\n\n\t\t\t\tif(i+6 >= 9){\n\t\t\t\t\tfail = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//七対子\t\t\t\n\t\t\t\tfor(int j=0;j<6;j+=2){\n\t\t\t\t\tif(cards[i+j].color == cards[i+j+1].color\n\t\t\t\t\t\t&& cards[i+j].num == cards[i+j+1].num){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tisok = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isok){\n\t\t\t\t\ti+=6;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfail = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprintf(\"%d\\n\",fail ? 0 : 1);\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c){\n  return a == b && b == c;\n}\n\nbool is_sequence(int a, int b, int c){\n  return a+2 == b+1 && b+1 == c;\n}\n\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]));\n}\n\nint win(){\n  // sort(card,card+10);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while(next_permutation(card, card+9));\n  return 0;\n}\n\nint main(){\n\n  cin >> T;\n  for(int t=0; t<T; ++t){\n    for(int i = 0; i < 9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for(int i = 0; i < 9; i++){\n      cin >> color;\n        if(color == 'G') card[i] += 10;\n        else if (color == 'B') card[i] += 20;\n    }\n\n    cout << win() << endl;\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint T, card[9];\n\nbool is_same_number(int a, int b, int c) {\n  return (a==b && b==c) && c==a;\n}\n\nbool is_sequence (int a, int b, int c) {\n  return (a+2==b+1 && b+1==c) && c==a+2;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set())\n      return 1;\n  } while (next_permutation (card, card+9));\n  return 0;\n}\n  \nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] +=10;\n      else if (color == \"B\") card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,char> P;\n\nbool ok(P a,P b,P c){\n    return a.second == b.second && b.second == c.second && ((a.first-b.first == 1 && b.first-c.first == 1) || (a.first == b.first && b.first == c.first));\n}\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n\n    int T;\n\n    cin >> T;\n\n    for(int i=0; i<T; i++){\n        vector<P> v(9);\n\n        for(auto &t:v) cin>>t.first;\n\n        for(auto &t:v) cin>>t.second;\n\n        bool flag=false;\n\n        do{\n            flag = (ok(v[0],v[1],v[2]) && ok(v[3],v[4],v[5]) && ok(v[6],v[7],v[8]));\n        }while(!flag && next_permutation(v.begin(),v.end()));\n\n        cout << (flag ? 1 : 0) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct card{int num; char color;};\ncard set[9];\nint a[9]={0,1,2,3,4,5,6,7,8};\nbool same_num(int i){\n    return set[a[i]].num==set[a[i+1]].num&&set[a[i+1]].num==set[a[i+2]].num;\n}\nbool consecutive_num(int i){\n    return set[a[i]].num==set[a[i+1]].num+1&&set[a[i+1]].num==set[a[i+2]].num+1;\n}\nbool check(int i){\n    if(set[a[i]].color==set[a[i+1]].color&&set[a[i+1]].color==set[a[i+2]].color&&(same_num(i)||consecutive_num(i))) return true;\n    return false;\n}\nbool ans(){\n    do{\n        if(check(0)&&check(3)&&check(6)) return true;\n    }while(next_permutation(a,a+9));\n    return false;\n}\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int it=0;it<t;it++){\n        for(int i=0;i<9;i++){\n            scanf(\"%d\",&set[i].num);\n        }\n        for(int i=0;i<9;i++){\n            scanf(\" %c\",&set[i].color);\n        }\n        if(ans()) printf(\"1\\n\");\n        else printf(\"0\\n\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define popcount __builtin_popcount\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\nbool is_set(pair<int, char>* c)\n{\n\treturn c[0].second == c[1].second && c[1].second == c[2].second\n\t\t&& (c[0].first == c[1].first && c[1].first == c[2].first\n\t\t|| c[0].first + 1 == c[1].first && c[1].first + 1 == c[2].first);\n}\nint main()\n{\n\tint T;\n\tpair<int, char> c[9];\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\trep (i, 9)\n\t\t\tcin >> c[i].first;\n\t\trep (i, 9)\n\t\t\tcin >> c[i].second;\n\t\tsort(c, c + 9);\n\n\t\tint res = 0;\n\t\tdo\n\t\t{\n\t\t\tif (is_set(c) && is_set(c + 3) && is_set(c + 6))\n\t\t\t{\n\t\t\t\tres = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (next_permutation(c, c + 9));\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct Point{\n  int n,f;\n  string c;\n};\n\nint main(){\n  int i,j,n,ans,k,t;\n  Point a[9];\n  cin >> n;\n  for(t=0;t<n;t++){\n    for(i=0;i<9;i++) cin >> a[i].n;\n    for(i=0;i<9;i++) cin >> a[i].c;\n    for(i=0;i<9;i++) a[i].f = 0;\n\n    ans = 0;\n    for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\ta[i].f = a[j].f = a[k].f = ++ans;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f != 0)  break;\n\t  }\n\t}\n      }\n    }\n\n   for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n + 1 == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n + 1 == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\ta[i].f = a[j].f = a[k].f = ++ans;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f != 0) break;\n\t  }\n\t}\n      }\n    }\n\n\n    if(ans == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n    //   for(i=0;i<9;i++) cout << a[i].n << a[i].c <<\":\"<< a[i].f << \" \";\n    //cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <cassert>\n\nusing namespace std;\n\nbool\nis_seq_set(int a, int b, int c) {\n  if (a+2==c && b+1==c)\n    return true;\n  return false;\n}\n\nbool\nis_same_set(int a, int b, int c) {\n  if (a==c && b==c)\n    return true;\n  return false;\n}\n\nbool\nis_good_set(int a, int b, int c) {\n  return is_seq_set(a,b,c) || is_same_set(a,b,c);\n}\n\nbool\nhas_satisfy_set(int card[]) {\n  return\n    is_good_set(card[0],card[1],card[2]) &&\n    is_good_set(card[3],card[4],card[5]) &&\n    is_good_set(card[6], card[7],card[8]);\n}\n\nbool\ncheck_all(int card[9]) {\n  do {\n    bool has_satisfy = has_satisfy_set(card);\n    if (has_satisfy) {\n      // cout << \"found satisfied card \" << endl;\n      for (int i=0; i<9; ++i) {\n\tauto c = card[i];\n\t// cout << c << \" \";\n      }\n      // cout << endl;\n      return true;\n    }\n  } while (next_permutation(card, card+9));\n  return false;\n}\n\nint\nmain() {\n  int n;\n  cin >> n;\n  for (int i=0;i<n; ++i) {\n    int card[9];\n    for (int j=0; j<9; ++j) {\n      cin >> card[j];\n    }\n    string color;\n    int shift[] {0, 10, 20};\n    for (int j=0; j<9; ++j) {\n      cin >> color;\n      int idx = 0;\n      switch(color[0]) {\n      case 'R': idx = 0; break;\n      case 'G': idx = 1; break;\n      case 'B': idx = 2; break;\n      default: assert(0);\n      }\n      card[j] += shift[idx];\n    }\n    //cout << endl;\n    \n    cout << check_all(card) << endl;\n    // cout << \"Not found ....\" << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "/*Rummy*/\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> p;\n\nint main(void){\n  //??£?????¨????????°????????????\n  //string ????????§????????????\n  int n;\n  cin >> n;\n  vector<int> b(9,0);\n  char s;\n  for(int o=0;o<n;o++){\n  for(int i=0;i<9;i++){\n    cin >> b[i];\n  }\n  for(int i=0;i<9;i++){\n    cin >> s;\n    if(s=='R')b[i]+=10;\n    else if(s=='G')b[i]+=20;\n    else b[i]+=30;\n  }\n  sort(b.begin(),b.end());\n  int cnt=0;\n  for(int i=0;i<7;i+=3){\n    if(b[i]==b[i+1] && b[i]==b[i+2] && b[i+1]==b[i+2])cnt++;\n    else if(b[i]==b[i+1]-1 && b[i]==b[i+2]-2 && b[i+1]-1==b[i+2]-2)cnt++;\n  }\n  if(cnt==3)cout << 1 << endl;\n  else cout << 0 << endl;\n}\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(int argc, char **argv) {\n    int n;scanf(\"%d\",&n);\n    for(int i = 0; i < n; i++) {\n        int cnum[9];\n        int cnt[3][12] = {{0}};\n        for(int j = 0; j < 9; j++) {\n            scanf(\"%d\", &cnum[j]);\n        }\n        for(int j = 0; j < 9; j++) {\n            char c;\n            scanf(\" %c\", &c);\n            cnt[c=='R'?0:c=='G'?1:2][cnum[j]-1]++;\n        }\n        bool flag = true;\n        for(int j = 0; j < 3; j++) {\n            for(int k = 0; k < 12; k++) {\n                if(cnt[j][k]<0) {\n                    flag = false;\n                    goto finish_loop;\n                }\n                cnt[j][k]%=3;\n                if(k<9) {\n                    cnt[j][k+2] -= cnt[j][k];\n                    cnt[j][k+1] -= cnt[j][k];\n                }\n            }\n        }\nfinish_loop:\n        printf(\"%d\\n\", flag);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n#define _all(arg) begin(arg),end(arg)\n\n#define C first\n#define N second\n\ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0; }\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0; }\n\nusing namespace std;\nusing pci=pair<char,int>;\n\nbool checkpair(vector<pci> cards, int offset) {\n\tif(offset>=7)\n\t\treturn false;\n\tif(cards[offset].N == cards[offset+1].N && cards[offset+1].N == cards[offset+2].N)\n\t\treturn true;\n\telse \n\t\treturn false;\n}\n\nbool checkseq(vector<pci> cards, int offset) {\n\tif(offset>=7)\n\t\treturn false;\n\tif(cards[offset].N == cards[offset+1].N-1 && cards[offset+1].N == cards[offset+2].N-1)\n\t\treturn true;\n\telse \n\t\treturn false;\n}\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--) {\n\t\tvector<pci> cards(9);\n\t\trep(i, 9) cin >> cards[i].N;\n\t\trep(i, 9) cin >> cards[i].C;\n\t\tsort(cards.begin(), cards.end());\n\n\t\tbool flag = true;\n\t\tfor(int i = 0; i < 9; i += 3)\n\t\t\tif(!checkpair(cards, i) && !checkseq(cards, i))\n\t\t\t\tflag = false;\n\n\t\tfor(int i = 0; i < 9; i += 3){\n\t\t\tif(cards[i].C != cards[i+1].C || cards[i+1].C != cards[i+2].C) flag = false;\n\t\t}\n\n\t\tcout << ((flag)?\"1\":\"0\") << endl;\n\t}\n        \n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\npair<char,int> p[9];\nbool flag[9];\n\nbool ans(int pos){\n  if(pos == 9) return true;\n  if(flag[pos]) return ans(pos+1);\n  flag[pos] = true;\n  int same = 0;\n  for(int i=pos+1; i<9; i++)\n    if(!flag[i] && p[pos] == p[i]) same++;\n  if(same >= 2){\n    int pp[2] = {-1, -1};\n    int cnt = 0;\n    for(int i=pos+1; i<9; i++)\n      if(!flag[i] && p[pos] == p[i]){\n        pp[cnt++] = i;\n        if(cnt == 2) break;\n      }else\n        break;\n    if(cnt == 2){\n      flag[pp[0]] = flag[pp[1]] = true;\n      if(ans(pos+1)) return true;\n      flag[pp[0]] = flag[pp[1]] = false;\n      //printf(\"pair1 : %d %d %d\\n\",pos,pp[0],pp[1]);\n    }\n  }\n  int pp[2] = {-1, -1};\n  for(int i=pos+1; i<9; i++){\n    if(p[pos].f != p[i].f) break;\n    if(flag[i]) continue;\n    if(p[pos].s + 1 == p[i].s){\n      if(pp[0] == -1)\n        pp[0] = i;\n    }\n    if(p[pos].s + 2 == p[i].s){\n      if(pp[1] == -1)\n        pp[1] = i;\n    }\n  }\n  if(pp[0] != -1 && pp[1] != -1){\n    //printf(\"pair2 : %d %d %d\\n\",pos,pp[0],pp[1]);\n    flag[pp[0]] = flag[pp[1]] = true;\n    if(ans(pos+1)) return true;\n    flag[pp[0]] = flag[pp[1]] = false;\n  }\n  flag[pos] = false;\n  return false;\n}\n\nint main(){\n  int n; cin>>n;\n  while(n --> 0){\n    REP(i,9) cin>>p[i].s;\n    REP(i,9) cin>>p[i].f;\n    REP(i,9) flag[i] = false;\n    sort(p, p+9);\n    puts(ans(0)?\"1\":\"0\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing i32 = std::int_fast32_t;\nusing i64 = std::int_fast64_t;\n\n#define REP(i, stop) FOR(i, 0, stop)\n#define FOR(i, start, stop) for (int i = start, i##_len = stop; i < i##_len; ++i)\n\nstruct InitCpp { InitCpp() { cin.tie(nullptr); ios::sync_with_stdio(false); cout << fixed << setprecision(10); } } initCpp;\n\nbool is_same_number(i32 a[3]) {\n  return a[0] == a[1] && a[1] == a[2];\n}\n\nbool is_sequence(i32 a[3]) {\n  return a[0] + 2 == a[1] + 1 && a[1] + 1 == a[2];\n}\n\nbool is_good_set(i32 a[3]) {\n  return is_same_number(a) || is_sequence(a);\n}\n\nbool is_all_good_set(i32 hand[9]) {\n  return is_good_set(hand) && is_good_set(hand + 3) && is_good_set(hand + 6);\n}\n\ni32 solve() {\n  i32 hand[9];\n  REP(i, 9) cin >> hand[i];\n  REP(i, 9) {\n    string color;\n    cin >> color;\n    if (color == \"G\") hand[i] += 10;\n    else if (color == \"B\") hand[i] += 20;\n  }\n  sort(hand, hand + 9);\n  do {\n    if (is_all_good_set(hand)) return 1;\n  } while (next_permutation(hand, hand + 9));\n  return 0;\n}\n\nsigned main() {\n  i32 T;\n  cin >> T;\n  REP(_, T) {\n    cout << solve() << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9];\n  pair<char, int> card[9];\n  int n;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n    int B = 0, G = 0, R = 0;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second;\n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n      if(card[i].first == 'B') B++;\n      if(card[i].first == 'G') G++;\n      if(card[i].first == 'R') R++;\n    }\n    if(!(B % 3 == 0 && G % 3 == 0 && R % 3 == 0)){\n      cout << '0' << endl;\n      continue;\n    }\n\n    sort(card, card+9);\n    \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n    \n      for(int i = 0 ; i < 9 ; i += 3){\n\tif(card[i].first == card[i+1].first && card[i].first == card[i+2].first){\n\t  if(card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second ||\n\t     card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n\t    flag[i] = true;\n\t  }\n\t}\t\n      }\n      \n      if(flag[0] && flag[3] && flag[6]){\n\tcout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint b[11];\nchar c[11];\nint dfs(int a){\n\tif(a==(1<<9)-1)return 1;\n\tfor(int i=0;i<9;i++){\n\t\tif(a&(1<<i))continue;\n\t\tfor(int j=i+1;j<9;j++){\n\t\t\tif(a&(1<<j))continue;\n\t\t\tfor(int k=j+1;k<9;k++){\n\t\t\t\tif(a&(1<<k))continue;\n\t\t\t\tbool ok=false;\n\t\t\t\tif(c[i]==c[j]&&c[j]==c[k]&&b[i]+1==b[j]&&b[j]+1==b[k]){\n\t\t\t\t\tint val=dfs(a+(1<<i)+(1<<j)+(1<<k));\n\t\t\t\t\tif(val)return 1;\n\t\t\t\t}\n\t\t\t\tif(c[i]==c[j]&&c[j]==c[k]&&b[i]==b[j]&&b[j]==b[k]){\n\t\t\t\t\tint val=dfs(a+(1<<i)+(1<<j)+(1<<k));\n\t\t\t\t\tif(val)return 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main(){\n\tint a;\n\tscanf(\"%d\",&a);\n\twhile(a--){\n\t\tfor(int i=0;i<9;i++)scanf(\"%d\",b+i);\n\t\tfor(int i=0;i<9;i++)scanf(\"%s\",c+i);\n\t\tfor(int i=0;i<9;i++){\n\t\t\tfor(int j=0;j<8;j++){\n\t\t\t\tif(b[j]>b[j+1]||(b[j]==b[j+1]&&c[j]>c[j+1])){\n\t\t\t\t\tint d=b[j];\n\t\t\t\t\tb[j]=b[j+1];\n\t\t\t\t\tb[j+1]=d;\n\t\t\t\t\tchar e=c[j];\n\t\t\t\t\tc[j]=c[j+1];\n\t\t\t\t\tc[j+1]=e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",dfs(0));\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define FOR(i,a,b) for(int i=(a);i<=(b);++i)\n#define REP(i,n) FOR(i,0,(n)-1)\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\nbool ok(vvi &cards) {\n\tbool flag = true;\n\n\tREP(i, 3) {\n\t\tif(cards[i*3][1] == cards[i*3+1][1] && cards[i*3+1][1] == cards[i*3+2][1]) {\n\t\t\tif(cards[i*3][0] == cards[i*3+1][0] && cards[i*3+1][0] == cards[i*3+2][0]) {\n\t\t\t\t\t\t\t\n\t\t\t} else if(cards[i*3][0] == cards[i*3+1][0]-1 && cards[i*3+1][0] == cards[i*3+2][0]-1) {\n\n\t\t\t} else {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tflag = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn flag;\n}\n\nint main() {\n\tint T;\n\tcin >> T;\n\n\tREP(szg, T) {\n\t\tvvi cards(9, vi(2));\n\n\t\tREP(i, 9) {\n\t\t\tcin >> cards[i][0];\n\t\t}\n\t\tchar c;\n\t\tREP(i, 9) {\n\t\t\tcin >> c;\n\t\t\tcards[i][1] = c;\n\t\t}\n\t\t\n\t\tsort(ALL(cards));\n\n\t\tdo {\n\t\t\tif(ok(cards)) {\n\t\t\t\tcout << 1 << endl;\n\t\t\t\tgoto next;\n\t\t\t}\n\t\t} while(next_permutation(ALL(cards)));\n\n\t\tcout << 0 << endl;\nnext:\n\t\t;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Rummy\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T, card[16];\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_same_number(int a, int b, int c){\n  if (a == b && b == c)\n    return true;\n  else\n    return false;\n}\nbool is_sequence(int a,int b,int c){\n  if (a+2 == c && b+1 == c)\n    return true;\n  else\n    return false;\n}\nbool is_all_good_set(){\n  if is_good_set(card[0],card[1],card[2])\n    if is_good_set(card[3],card[4],card[5])\n      if is_good_set(card[6],card[7],card[8])\n        return true;\n  else\n    return false;\n}\nint win(){\n  // card ?????????????????? \n  do{\n    if // ??????card?????????????????????????????¶????????? \n      return 1;\n  } while (next_permutation(card, card+9)); \n  // ??¨???????????????????????????????????????????????¶????????????????????£??? \n  return 0;\n}\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) { \n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n        if (color == \"G\") \n          card[i] += 10;\n        else if (color == \"B\") \n          card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n// ??????????????¨???\n// red:0 , blue:10 , green:20\n// 1-9"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n;\nint a[11];\nint v[3][11];\nint main(void){\n  cin >> n;\n  for(int k = 0; k < n; k++){\n    memset(v,0,sizeof(v));\n    for(int i = 0; i < 9; i++){\n      cin >> a[i];\n    }\n    for(int i = 0; i < 9; i++){\n      char c;\n      cin >> c;\n      v[c=='R'?0:c=='G'?1:2][a[i]]++;\n    }\n\n    int c = 0;\n\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j+2 < 9; j++){\n\twhile(v[i][j] && v[i][j+1] && v[i][j+2]){\n\t  c++;\n\t  v[i][j]--;\n\t  v[i][j+1]--;\n\t  v[i][j+2]--;\n\t}\n      }\n    }\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j < 9; j++){\n\tif(v[i][j] >= 3){\n\t  c++;\n\t  v[i][j] -= 3;\n\t}\n      }\n    }\n    cout << (c>=3?1:0) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "/*Rummy*/\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> p;\n\nint main(void){\n  //??£?????¨????????°????????????\n  //string ????????§????????????\n  int n;\n  cin >> n;\n  vector<int> b(9,0);\n  char s;\n  for(int o=0;o<n;o++){\n    vector<bool> flag(9,false);\n  for(int i=0;i<9;i++){\n    cin >> b[i];\n  }\n  for(int i=0;i<9;i++){\n    cin >> s;\n    if(s=='R')b[i]+=10;\n    else if(s=='G')b[i]+=20;\n    else b[i]+=30;\n  }\n  sort(b.begin(),b.end());\n  int cnt=0;\n  for(int i=0;i<9;i++){\n    for(int j=i+1;j<9;j++){\n      for(int k=j+1;k<9;k++){\n        if(flag[i]==false && flag[j]==false && flag[k]==false){\n          if(b[i]==b[j] && b[i]==b[k] && b[j]==b[k]){\n            cnt++;\n            flag[i]=flag[j]=flag[k]=true;\n            break;\n          }else if(b[i]==b[j]-1 && b[i]==b[j]-1 && b[j]-1==b[k]-2){\n            cnt++;\n            flag[i]=flag[j]=flag[k]=true;\n            break;\n          }\n        }\n      }\n    }\n  }\n  if(cnt==3)cout << 1 << endl;\n  else cout << 0 << endl;\n}\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#define N 9\nusing namespace std;\nvoid NP(int);\nvoid check();\nint flag;\npair<char,char> data[N],out[N];\nbool used[N];\nint main(){\n  int T;\n  cin >> T;\n  for(int i=0;i<T;i++){\n    for(int j=0;j<N;j++){\n      cin >> data[j].first;\n    }\n    for(int j=0;j<N;j++){\n      cin >> data[j].second;\n    }\n    flag=0;\n    NP(0);\n    if(flag==1) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}\nvoid NP(int x){\n  if(flag==1) return ;\n  if(x<N){\n    for(int i=0;i<N;i++){\n      if(used[i]) continue;\n      out[x]=data[i];\n      used[i]=true;\n      NP(x+1);\n      used[i]=false;\n    }\n  }else{\n    check();\n  }\n}\nvoid check(){\n  int flag1=0;\n  for(int i=0;i<N;i+=3){\n    if(out[i].second==out[i+1].second&&out[i+1].second==out[i+2].second){\n      if(out[i].first==out[i+1].first-1&&out[i+1].first==out[i+2].first-1){\n      }\n      else if(out[i].first==out[i+1].first&&out[i+1].first==out[i+2].first){\n      }\n      else{\n\tflag1=1;\n\tbreak;\n      }\n    }else{\n      flag1=1;\n      break;\n    }\n  }\n  if(flag1==0) flag=1;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nbool isZero(vector<vector<int> > &v) {\n    for (int i=0; i<v.size(); ++i) {\n        for (int j=0; j<v[i].size(); ++j) {\n            if (v[i][j] != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nint judge(vector<vector<int> > &v, int cnt) {\n    if (cnt == 3 && isZero(v)) {\n        return 1;\n    }\n    for (int i=0; i<3; ++i) {\n        for (int j=0; j<9; ++j) {\n            if (3 <= v[i][j]) {\n                v[i][j] -= 3;\n                if (judge(v, cnt + 1) == 1) {\n                    return 1;\n                } else {\n                    v[i][j] += 3;\n                }\n            }\n            if (j+2 < 9 && v[i][j] && v[i][j+1] && v[i][j+2]) {\n                v[i][j] --; v[i][j+1] --; v[i][j+2] --;\n                if (judge(v, cnt + 1) == 1) {\n                    return 1;\n                } else {\n                    v[i][j] ++; v[i][j+1] ++; v[i][j+2] ++;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\nint main() {\n    int t; cin >> t;\n    while (t--) {\n        vector<int> num(9);\n        for (int i=0; i<9; ++i) cin >> num[i];\n        vector<char> color(9);\n        for (int i=0; i<9; ++i) cin >> color[i];\n\n        vector<vector<int> > v(3, vector<int>(9));\n        for (int i=0; i<9; ++i) {\n            if (color[i] == 'R') {\n                v[0][num[i]-1] ++;\n            } else if (color[i] == 'G') {\n                v[1][num[i]-1] ++;\n            } else if (color[i] == 'B') {\n                v[2][num[i]-1] ++;\n            }\n        }\n\n        cout << judge(v, 0) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\nint n;\nint n_cd[3][9];\nint n_cl[3];\nint n_set;\nint check();\nvoid rm_sets();\nint rm_id_sets(int, int);\nint rm_seq_sets(int);\n\nvoid dbg(){\n\tint i,j;\n\tfor(i = 0; i < 3; i++){\n\t\tprintf(\"------n_cl[%d]: %d\\n\", i, n_cl[i]);\n\t\tfor(j = 0; j < 9; j++){\n\t\t\tprintf(\"n_cd[%d][%d]: %d\\n\", i, j, n_cd[i][j]);\n\t\t}\n\t}\n}\n\nint main(){\n\tint i,j;\n\tchar c;\n\tint cd_in[9], cl_in[i];\n\t\n\tscanf(\"%d\", &n);\n\twhile(n--){\n\t\t//input\n\t\tfor(i = 0; i < 9; i++) scanf(\"%d\",&cd_in[i]);\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tcd_in[i]--;\n\t\t\tscanf(\" %c\", &c);\n\t\t\tif(c == 'R') cl_in[i] = 0;\n\t\t\telse if(c == 'G') cl_in[i] = 1;\n\t\t\telse cl_in[i] = 2;\n\t\t}\n\t\t//init\n\t\tfor(j = 0; j < 3; j++){\n\t\t\tn_cl[j] = 0;\n\t\t\tfor(i = 0; i < 9; i++)n_cd[j][i] = 0;\n\t\t}\n\t\tfor(i = 0; i < 9; i++){n_cd[ cl_in[i] ][ cd_in[i] ]++; n_cl[ cl_in[i] ]++;}\n\t\t\t\n\t\t//check\n\t\t\t//rm_seq_sets(2);\n\t\t\t//dbg();\n\t\tprintf(\"%d\\n\", check());\n\t}\n\t\n\treturn 0;\n}\n\t\nint check(){\n\tint result;\n\tint i,j,k,l;\n\tint bkup_n_cd[3][10], bkup_n_cl[3], bkup_n_set;\n\tn_set = 0;\n\tint trp_list[3];\n\tint n_trp;\n\tfor(i = 0; i < 3; i++){\n\t\tif(n_cl[i] == 0){;\n\t\t}else if(n_cl[i] == 3 || n_cl[i] == 6){rm_sets(i);\n\t\t}else if(n_cl[i] == 9){\n\t\t\t//listup triplication\n\t\t\tn_trp = 0;\n\t\t\tfor(j = 0; j < 9; j++){\n\t\t\t\tif(n_cd[i][j] >= 3){trp_list[n_trp++] = j;}\n\t\t\t}\n\t\t\t//backup\n\t\t\tfor(j = 0; j < 3; j++){\n\t\t\t\tbkup_n_cl[j] = n_cl[j];\n\t\t\t\tfor(k = 0; k < 9; k++){\n\t\t\t\t\tbkup_n_cd[j][k] = n_cd[j][k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tbkup_n_set = n_set;\n\t\t\tif(n_trp == 0){\n\t\t\t\trm_sets(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//try to remove triplication\n\t\t\tfor(j = 0; j < n_trp; j++){\n\t\t\t\t//recover\n\t\t\t\tfor(k = 0; k < 3; k++){\n\t\t\t\t\tn_cl[k] = bkup_n_cl[k];\n\t\t\t\t\tfor(l = 0; l < 9 ; l++){\n\t\t\t\t\t\tbkup_n_cd[k][l] = n_cd[k][l];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trm_id_sets(i, trp_list[j]);\n\t\t\t\trm_sets(i);\n\t\t\t\tif( n_set == 3) break;\n\t\t\t}\n\t\t}else{\n\t\t\t//falure\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = (n_set == 3)?1:0;\n\treturn result;\n}\n\nint rm_id_sets(int cl,  int num){\n\tint i, flag = 0;\n\tif(num = -1){\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tif(n_cd[cl][i] >= 3){\n\t\t\t\tn_cd[cl][i] -= 3;\n\t\t\t\tn_set++;\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tif(n_cd[cl][num] >= 3){\n\t\t\tn_cd[cl][num] -= 3;\n\t\t\tn_set++;\n\t\t\tflag = 1;\n\t\t}\n\t}\n\treturn flag;\n}\nint rm_seq_sets(int cl){\n\tint i, flag = 0;\n\tfor(i = 0; i < 7; i++){\n\t\tif(n_cd[cl][i] >= 1 && n_cd[cl][i+1] >= 1 && n_cd[cl][i+2] >= 1){\n\t\t\tn_cd[cl][i]--; n_cd[cl][i+1]--; n_cd[cl][i+2]--;\n\t\t\tn_set++;\n\t\t\tflag = 1;\n\t\t\ti = -1;\n\t\t}\n\t}\n\treturn flag;\n}\n\nvoid rm_sets(int cl){\n\trm_id_sets(cl, -1);\n\trm_seq_sets(cl);\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint h[3][22];\n\nbool check(int t,int n){\n  if(n >= 10) return true;\n  if(h[t][n] >= 3) h[t][n] -= 3;\n  if(h[t][n] <= h[t][n+1] && h[t][n] <= h[t][n+2]){\n    h[t][n+1] -= h[t][n];\n    h[t][n+2] -= h[t][n];\n    h[t][n] -= h[t][n];\n  }\n  if(h[t][n]) return false;\n  return check(t,n+1);\n}\n\nint main(void){\n  int n;\n  cin >> n;\n  for(int k = 0; k < n; k++){\n    memset(h,0,sizeof(h));\n    int a[11];\n    for(int i = 0; i < 9; i++){\n      cin >> a[i];\n    }\n    for(int i = 0; i < 9; i++){\n      char c;\n      cin >> c;\n      switch(c){\n      case 'R': h[0][a[i]]++; break;\n      case 'G': h[1][a[i]]++; break;\n      case 'B': h[2][a[i]]++; break;\n      }\n    }\n    if(check(0,1) && check(1,1) && check(2,1)) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define for_(i,a,b) for(int i=(a);i<(b);++i)\n#define size_of(a) (int)(a).size()\n#define allof(a) (a).begin(),(a).end()\n\nint n[9];\nchar c[9];\n\nvector< int > vec[3];\nbool use[9];\n\nbool check() {\n\tfor_(i,0,3) {\n\t\tint a1 = vec[i][0], a2 = vec[i][1], a3 = vec[i][2];\n\t\tif (c[a1] != c[a2] || c[a2] != c[a3] || c[a3] != c[a1]) return false;\n\t\tif (n[a1] == n[a2] && n[a2] == n[a3]) continue;\n\t\tvector< int > nums;\n\t\tfor_(j,0,3) nums.push_back(n[vec[i][j]]);\n\t\tsort(allof(nums));\n\t\tif (nums[2] - nums[1] == 1 && nums[1] - nums[0] == 1) continue;\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\n\nbool rec(int div, int cnt) {\n\tif (div == 3) return check();\n\t\n\tfor_(i,0,9) {\n\t\tif (use[i]) continue;\n\t\tvec[div].push_back(i);\n\t\tuse[i] = true;\n\t\t++cnt;\n\t\tif (rec(cnt == 3 ? div + 1 : div, cnt == 3 ? 0 : cnt)) return true;\n\t\tvec[div].pop_back();\n\t\tuse[i] = false;\n\t\t--cnt;\n\t}\n\t\n\treturn false;\n}\n\nint main() {\n\tint T;\n\tcin >> T;\n\t\n\tfor_(i,0,T) {\n\t\tmemset(use, 0, sizeof(use));\n\t\tfor_(i,0,3) vec[i].clear();\n\t\t\t\n\t\tfor_(j,0,9) cin >> n[j];\n\t\tfor_(j,0,9) cin >> c[j];\n\n\t\tcout << (rec(0, 0) ? 1 : 0) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint T,card[16];\nint win();\nbool is_good_set(int,int,int);\nbool is_same_number(int,int,int);\nbool is_sequence(int,int,int);\nbool is_good_set();\nbool is_all_good_set();\n\nint main(){\n  cin >> T;\n  for(int t=0;t<T;t++){\n    for(int i=0;i<9;i++){\n      cin >> card[i];\n    }\n    string color;\n    for(int i=0;i<9;i++){\n      cin>>color;\n      if(color==\"G\") card[i]+=10;\n      else if(color==\"B\") card[i]+=20;\t\t\t\t      \n    }\n    if(win()){\n      cout<<1<<endl;\n    }else{\n      cout<<0<<endl;\n    }\n  }\n  return 0;\n}\n\nbool is_good_set(int a,int b,int c){\n  return is_same_number(a,b,c)||is_sequence(a,b,c);\n}\n\nbool is_same_number(int a,int b,int c){\n  return a==b&&b==c;\n}\nbool is_sequence(int a,int b,int c){\n  return a+2==c&&b+1==c;\n}\n\nbool is_all_good_set(){\n  return is_good_set(card[0],card[1],card[2])&&is_good_set(card[3],card[4],card[5])&&is_good_set(card[6],card[7],card[8]);\n}\nint win(){\n  sort(card,card+9);\n  do{\n    if(is_all_good_set()){\n      return 1;\n    }\n  }while(next_permutation(card,card+9));\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nint T, card[16];\n\n\nbool is_same_number(int a, int b, int c){\n\tif (a == b && b == c) return true;\n\telse return false;\n}\n\nbool is_sequence(int a, int b, int c){\n\tif (a == b + 1 && a == c + 2) return true;\n\telse return false;\n}\n\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(int card[9]){\n\tif (is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]))\n\t\treturn true;\n\telse return false;\n}\n\nint main(){\n\tcin >> T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\") card[i] += 10;\n\t\t\telse if (color == \"B\") card[i] += 20;\n\t\t}\n\t\tsort(card, card + 9);\n\t\tint judge = 0;\n\t\tdo{\n\t\t\tif (is_all_good_set(card))\n\t\t\t\tjudge = 1;\n\t\t} while (next_permutation(card, card + 9));\n\t\tcout << judge << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n\nusing namespace std;\n\n#define rep(i, n) for(int i=0;i<(int)n;i++)\n#define reep(i, s, t) for(int i=s;i<(int)t;i++)\n#define irep(i, n) for(int i=(int)n-1;i>=0;i--)\n#define ireep(i, n, s) for(int i=(int)n-1;i>=s;i--)\n#define all(v) v.begin(), v.end()\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\n\n\nint main(){\n\tint b, r, g, c, s, t;\n\twhile(cin >> b >> r >> g >> c >> s >> t) {\n\t\tif(!b && !r && !g && !c && !s && !t) break;\n\t\tint ans = 100;\n\t\tt -=r+b+g+c+(2*s)+(b*5)+(r*3);\n\t\tans += (15*(b+r))+(((b*5)+(r*3))*13)-(3*(b+r+g+c+s))+((g*7)+(c*2)+(-3*t));\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint main(){\n  int T;\n  map<char,int> data;\n  data['R']=0;\n  data['G']=1;\n  data['B']=2;\n  cin >> T;\n  for(int i=0;i<T;i++){\n    int RGB[3][15]={0},cnt=0;\n    int CARD[10];\n    char COLOR[10];\n    for(int j=0;j<9;j++){\n      cin >> CARD[j];\n    }\n    for(int j=0;j<9;j++){\n      cin >> COLOR[j];\n    }\n    for(int j=0;j<9;j++) RGB[data[COLOR[j]]][CARD[j]]++;\n\n    for(int k=0;k<3;k++){\n      for(int j=0;j<=9;){\n\tif(RGB[k][j]>=3)RGB[k][j]-=3,cnt++;\n\telse if(RGB[k][j]>0&&RGB[k][j+1]>0&&RGB[k][j+2]>0){\n\t  RGB[k][j]--,RGB[k][j+1]--,RGB[k][j+2]--,cnt++;\n\t} else j++;\n      }\n    }\n    if(cnt==3)printf(\"1\\n\");\n    else printf(\"0\\n\");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "//\n//  main.cpp\n//  tititi\n//\n//  Created by 大森 亮 on 2014/04/10.\n//  Copyright (c) 2014年 大森 亮. All rights reserved.\n//\n\n#include <iostream>\n#include <algorithm>\n#define rep(i,n) for(int i = 0;i < n;i++)\n\nusing namespace std;\n\nbool is_same_number(int a,int b,int c){\n    if(a==b&&b==c)\n        return 1;\n    else return 0;\n}\n\nbool is_sequence(int a,int b,int c){\n    if((a+1==b)&&(b+1==c))\n        return 1;\n    else return 0;\n}\n\nbool is_good_set(int a,int b,int c){\n    return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\n\nint T;\nint card[16];\n\nint main(int argc, const char * argv[])\n{\n    cin >> T;\n    rep(t,T){\n        rep(i,9){\n            card[i]=0;\n            cin >> card[i];\n        }\n        string color;\n        rep(i,9){\n            cin >> color;\n            if(color==\"G\")\n                card[i]+=100;\n            if(color==\"B\")\n                card[i]+=200;\n        }\n        sort(card,card+9);\n        int flag = 0;\n        do{\n            if(is_good_set(card[0],card[1],card[2])&&is_good_set(card[3],card[4],card[5])&&is_good_set(card[6],card[7],card[8])){\n                flag = 1;\n                break;\n            }\n        }while(next_permutation(card,card+9));\n        cout << flag << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint T, card[16];\n\nint win();\n\nint main() {\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n\t}\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n\t}\n    cout << win() << endl;\n  }\n  return 0;\n}\n\nbool is_same_number(int a, int b, int c) {\n  if (a == b && b == c) return true;\n  else return false;\n}\n\nbool is_sequence(int a, int b, int c) {\n  if (a+2 == c && b+1 == c) return true;\n  else return false;\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card, card+9);\n  do {\n      if ( is_all_good_set() )\n\treturn 1;\n  } while (next_permutation(card, card+9));\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int i,j,k,l;\n  int a[9],r[9],g[9],b[9],n;\n  char c;\n  cin>>n;\n  for(i=0;i<n;i++){\n    for(j=0;j<9;j++){\n      cin>>a[j];\n      a[j]--;\n    }\n    memset(r,0,sizeof(r));\n    memset(g,0,sizeof(g));\n    memset(b,0,sizeof(b));\n    for(j=0;j<9;j++){\n      cin>>c;\n      if(0){\n      }else if(c=='R'){\n\tr[a[j]]++;\n      }else if(c=='G'){\n\tg[a[j]]++;\n      }else if(c=='B'){\n\tb[a[j]]++;\n      }\n    }\n    j=0;\n    for(k=0;k<9;k++){\n      if(r[k]>2){\n\tr[k]-=3;\n\tj++;\n      }\n      if(g[k]>2){\n\tg[k]-=3;\n\tj++;\n      }\n      if(b[k]>2){\n\tb[k]-=3;\n\tj++;\n      }\n    }\n    for(l=0;l<7;l++){\n      for(k=0;k<2;k++){\n\tif(r[l]&&r[l+1]&&r[l+2]){\n\t  r[l]--;\n\t  r[l+1]--;\n\t  r[l+2]--;\n\t  j++;\n\t}\n\tif(g[l]&&g[l+1]&&g[l+2]){\n\t  g[l]--;\n\t  g[l+1]--;\n\t  g[l+2]--;\n\t  j++;\n\t}\n\tif(b[l]&&b[l+1]&&b[l+2]){\n\t  b[l]--;\n\t  b[l+1]--;\n\t  b[l+2]--;\n\t  j++;\n\t}\n      }\n    }\n    cout<<(j>2)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tint card[3][10];\n\n\tcin>>n;\n\n\twhile(n--){\n\t\t\t\n\t\tint a[10];\n\t\t\n\t\tmemset(card, 0, sizeof(card));\n\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin>>a[i];\n\t\t}\n\n\t\tfor(int i=0; i<9; ++i){\n\n\t\t\tchar b;\n\t\t\tcin>>b;\n\t\t\tcard[b=='R'?0:b=='G'?1:2][a[i]]++;\n\t\t}\n\n\t\tint res = 0;\n\n\t\tfor(int c=0; c<3; ++c){\n\t\t\tfor(int k=1; k<=9; ++k){\n\t\t\t\t\n\t\t\t\tres += card[c][k]/3;\n\t\t\t\tcard[c][k] %= 3;\n\t\t\t\t\n\t\t\t\tif(k<=7){\n\t\t\t\t\t\n\t\t\t\t\tint sub = min(card[c][k], min(card[c][k+1], card[c][k+2]));\n\n\t\t\t\t\tfor(int i=0; i<3; ++i){\n\t\t\t\t\t\tcard[c][k+i] -= sub;\n\t\t\t\t\t}\n\n\t\t\t\t\tres += sub;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout << (res>=3) << endl;\n\t}\n\n\treturn 0;\n}\t"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <algorithm>\n#include <map>\n\n\nusing namespace std;\n\n\n\n#define rep(i,n) for(i=0;i<n;i++)\n\nint C[9];\n\nint A[30];\n\n\nint main(){\n\tint T,t;\n\tint i,j,k;\n\tchar c[40];\n\tbool f,g;\t\n\t\n\tscanf(\"%d\",&T);\n\t\n\trep(i,40)A[i]=0;\n\t\n\trep(t,T){\n\t\trep(i,9){\n\t\t\tscanf(\"%d\",&C[i]);\n\t\t}\n\t\t\n\t\trep(i,9){\n\t\t\tscanf(\"%s\",c);\n\t\t\tif(c[0]=='G'){\n\t\t\t\tC[i]+=10;\n\t\t\t}\n\t\t\tif(c[0]=='B'){\n\t\t\t\tC[i]+=20;\n\t\t\t}\n\t\t\tA[C[i]]++;\n\t\t\t\n\t\t}\n\t\t\n\t\t//rep(i,30)printf(\"%2d:%2d\\n\",i,A[i]);\n\t\t\n\t\tf=true;\n\t\t\n\t\trep(i,30){\n\t\t\tif(A[i]!=1)continue;\n\t\t\tif(A[i+1]!=2)continue;\n\t\t\tif(A[i+2]!=3)continue;\n\t\t\tif(A[i+3]!=4)continue;\n\t\t\tif(A[i+4]!=5)continue;\n\t\t\tf=false;break;\n\t\t}\n\t\t\n\t\tif(f){\n\t\t\trep(i,30){\n\t\t\t\tif(A[i]>=3)A[i]-=3;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\trep(i,30){\n\t\t\t\tg=true;\n\t\t\t\trep(j,3){\n\t\t\t\t\tif(A[i+j]==0)g=false;\n\t\t\t\t}\n\t\t\t\tif(g){\n\t\t\t\t\trep(j,3)A[i+j]--;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tf=false;\n\t\t\trep(i,30){\n\t\t\t\tif(A[i]!=0)f=true;\n\t\t\t}\n\t\t}\t\t\n\t\t//rep(i,30)printf(\"%2d:%2d\\n\",i,A[i]);\n\t\t\n\t\tif(f)puts(\"0\");\n\t\telse puts(\"1\");\n\t\t\t\n\t}\n\t\n\t\n\t\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <complex>\n#include <cstdio>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n\nbool used[9];\nint T,n[9],c[3][9],C[3];\nchar cc;\n\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\tmemset(c,0,sizeof(c));\n\t\tfill(C,C+3,0);\n\t\trep(i,9)cin>>n[i];\n\t\trep(i,9){\n\t\t\tcin>>cc;\n\t\t\tif(cc=='R'){c[0][n[i]]++;C[0]++;}\n\t\t\tif(cc=='G'){c[1][n[i]]++;C[1]++;}\n\t\t\tif(cc=='B'){c[2][n[i]]++;C[2]++;}\n\t\t}\n\t\tint f=1;\n\t\tif(C[0]%3+C[1]%3+C[2]%3)f=0;\n\t\trep(i,3){\n\t\t\tif(!C[i])continue;\n\t\t\tint cur=0;\n\t\t\twhile(C[i]){\n\t\t\t\tif(!c[i][cur])cur++;\n\t\t\t\telse{\n\t\t\t\t\tif(c[i][cur]>=3){c[i][cur]-=3;C[i]-=3;}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!c[i][cur+1]||!c[i][cur+2]){f=0;break;}\n\t\t\t\t\t\tc[i][cur]-=1;c[i][cur+1]-=1;c[i][cur+2]-=1;\n\t\t\t\t\t\tC[i]-=3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!f)break;\n\t\t}\n\t\tcout<<(f?1:0)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint T,card[16];\n\nbool is_good_set(int a,int b,int c){\n\treturn is_same_number(a,b,c)||is_sequence(a,b,c);\n}\nbool is_same_number(int a,int b,int c){\n\tif(a==b&&b==c)return true;\n\treturn false;\n}\nbool is_sequence(int a,int b,int c){\n\tif(a+2==b+1&&b+1==c)return true;\n\treturn false;\n}\n\nbool is_all_good_set(){\n\treturn is_good_set(card[0],card[1],card[2])\n\t\t\t&&is_good_set(card[3],card[4],card[5])\n\t\t\t&&is_good_set(card[6],card[7],card[8]);\n}\n\nint win(){\n\tsort(card,card+9);\n\tdo{\n\t\tif(is_all_good_set())return 1;\n\t}while(next_permutation(card,card+9));\n\treturn 0;\n}\n\nint main(){\n\tcin >>T;\n\tfor (int t = 0; t < T; ++t){\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin>>card[i];\n\t\t}\n\t\tstrung color;\n\t\tfor (int i = 0; i < 9; ++i){\n\t\t\tcin>>color;\n\t\t\tif(color=='G')card[i]+=10;\n\t\t\telse if(color=='B')card[i]+=20;\n\t\t}\n\t\tcout>>win()>>endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<climits>\n#include<ctime>\n#include<cstring>\n#include<numeric>\n#include <string>\nusing namespace std;\nint T, card[16];\n\n\n\nbool is_same_number(int a, int b, int c) {\n\tif (a == b&&b == c)return true;\n\telse return false;\n}\nbool is_sequence(int a, int b, int c) {\n\tif (a + 2 == b + 1&&b+1 == c)return true;\n\telse return false;\n}\nbool is_good_set(int a, int b, int c) {\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n\treturn is_good_set(card[0], card[1], card[2]) && is_good_set(card[3], card[4], card[5]) && is_good_set(card[6], card[7], card[8]);\n}\n\nint win() {\n\tsort(card, card + 9);\n\tdo {\n\t\tif (is_all_good_set)return 1;\n\t} while (next_permutation(card, card + 9));\n\treturn 0;\n}\n\nint main()\n{\n\tcin >> T;\n\tfor (int i = 0; i < T; i++) {\n\t\tfor (int t = 0; t < 9; t++) {\n\t\t\tcin >> card[t];\n\t\t}\n\t\tstring color;\n\t\tfor (int t = 0; t < 9; t++) {\n\t\t\tcin >> color;\n\t\t\tif (color == \"G\")card[i] += 10;\n\t\t\telse if (color == \"B\")card[i] += 20;\n\t\t}\n\t\tif (win)cout << 1 << endl;\n\t\telse cout << 0 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nclass Point{\npublic:\n  int n,f;\n  string c;\n  bool operator < (const Point &p) const{\n    if(n == p.n) return c < p.c;\n    else return n < p.n;\n  }\n};\n\nint main(){\n  int i,j,n,ans,k,t;\n  Point a[9];\n  cin >> n;\n  for(t=0;t<n;t++){\n    for(i=0;i<9;i++) cin >> a[i].n;\n    for(i=0;i<9;i++) cin >> a[i].c;\n    for(i=0;i<9;i++) a[i].f = 0;\n\n    ans = 0;\n    for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n == a[j].n && a[j].f == 0 && a[i].c == a[j].c && i != j){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n == a[k].n && a[k].f == 0 && a[j].c == a[k].c && j != k && k != i){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t\tbreak;\n\t      }\n\t    }\n\t    if(a[j].f == 1)  break;\n\t  }\n\t}\n      }\n    }\n\n   for(i=0;i<9;i++){\n      if(a[i].f == 0){\n\tfor(j=0;j<9;j++){\n\t  if(a[i].n + 1 == a[j].n && a[j].f == 0 && a[i].c == a[j].c){\n\t    for(k=0;k<9;k++){\n\t      if(a[j].n + 1 == a[k].n && a[k].f == 0 && a[j].c == a[k].c){\n\t\tans++;\n\t\ta[i].f = a[j].f = a[k].f = 1;\n\t      }\n\t    }\n\t  }\n\t}\n      }\n    }\n\n\n    if(ans == 3) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(){\n  bool flag[9];\n  pair<char, int> card[9];\n  int n;\n  cin >> n;\n  for(int k = 0 ; k < n ; k++){\n    memset(flag, 0, sizeof(flag));\n    int B = 0, G = 0, R = 0;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].second;\n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> card[i].first;\n      if(card[i].first == 'B') B++;\n      if(card[i].first == 'G') G++;\n      if(card[i].first == 'R') R++;\n    }\n    if(!(B % 3 == 0 && G % 3 == 0 && R % 3 == 0)){\n      cout << '0' << endl;\n      continue;\n    }\n\n    sort(card, card+9);\n    \n    /*for(int i = 0 ; i < 9 ; i++){\n      printf(\"%d \", card[i].second);\n    }\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++){\n      printf(\"%c \", card[i].first);\n      }\n      cout << endl;*/\n    \n      for(int i = 0 ; i < 9 ; i += 3){\n\tif(card[i].first == card[i+1].first && card[i].first == card[i+2].first){\n\t  if(card[i].second+1 == card[i+1].second && card[i].second+2 == card[i+2].second ||\n\t     card[i].second == card[i+1].second && card[i].second == card[i+2].second){\n\t    flag[i] = true;\n\t  }\n\t}\t\n      }\n      \n      if(flag[0] && flag[3] && flag[6]){\n\tcout << '1' << endl;\n      }\n      else cout << '0' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\ntypedef pair<char,int>P;\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tvector<P>v;\n\t\tchar c[9];\n\t\tint a[9],b[3][9]={};\n\t\tr(i,9)cin>>a[i];\n\t\tr(i,9)cin>>c[i];\n\t\tr(i,9)v.push_back(P(c[i],a[i]));\n\t\tsort(v.begin(),v.end());\n\t\tif(v[0].first!=v[2].first||v[3].first!=v[5].first||v[6].first!=v[8].first)goto L1;\n\t\tr(i,(int)v.size()-3){\n\t\t\tif(v[i].second==v[i+1].second&&v[i].second==v[i+2].second){\n\t\t\t\tr(j,3)v.erase(v.begin()+i);\n\t\t\t}\n\t\t}\n\t\tr(i,v.size()){\n\t\t\tif(v[i].first=='R')b[0][v[i].second]++;\n\t\t\tif(v[i].first=='G')b[1][v[i].second]++;\n\t\t\tif(v[i].first=='B')b[2][v[i].second]++;\n\t\t}\n\t\tr(i,3)r(j,9)if(b[i][j]){\n\t\t\tif(!b[i][j+1]||!b[i][j+2])goto L2;\n\t\t\tb[i][j]--;\n\t\t\tb[i][j+1]--;\n\t\t\tb[i][j+2]--;\n\t\t\tj--;\n\t\t}\n\t\tcout<<1<<endl;\n\t\tif(0){L1:;L2:;cout<<0<<endl;}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n;\nint a[11];\nint v[3][11];\nint main(void){\n  cin >> n;\n  for(int k = 0; k < n; k++){\n    memset(v,0,sizeof(v));\n    for(int i = 0; i < 9; i++){\n      cin >> a[i];\n    }\n    for(int i = 0; i < 9; i++){\n      char c;\n      cin >> c;\n      v[c=='R'?0:c=='G'?1:2][a[i]]++;\n    }\n\n    int c = 0;\n\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j+2 < 9; j++){\n\twhile(v[i][j] <= 2 && v[i][j] && v[i][j+1] && v[i][j+2]){\n\t  c++;\n\t  v[i][j]--;\n\t  v[i][j+1]--;\n\t  v[i][j+2]--;\n\t}\n      }\n    }\n    for(int i = 0; i < 3; i++){\n      for(int j = 0; j < 9; j++){\n\tif(v[i][j] >= 3){\n\t  c++;\n\t  v[i][j] -= 3;\n\t}\n      }\n    }\n    cout << (c>=3?1:0) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Card {\n  int n;\n  char c;\n  Card(int n, int c): n(n), c(c) {}\n};\n\nint T;\n \nint main(){\n\n  cin >> T;\n  vector<Card> cs(9, Card(0, '0'));\n  while (T-- > 0) {\n    for (int i = 0; i < 9; i++) {\n      cin >> cs[i].n;\n    }\n\n    for (int i = 0; i < 9; i++) {\n      cin >> cs[i].c;\n    }\n\n    int res = 0;\n    int order[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};\n    do {\n      bool flg = true;\n      for (int i = 0; i < 9; i += 3) {\n        if (cs[order[i]].c == cs[order[i + 1]].c && cs[order[i]].c == cs[order[i + 2]].c) {\n          int n1 = cs[order[i]].n, n2 = cs[order[i + 1]].n, n3 = cs[order[i + 2]].n;\n          if ( (n1 == n2 && n2 == n3) || ( (n2 - n1) == 1 && (n3 - n2) == 1) ) {\n\n          } else {\n            flg = false;\n            break;\n          }\n        } else {\n          flg = false;\n          break;\n        }\n      }\n\n      if (flg) {\n        res = 1;\n        break;\n      }\n\n    } while (next_permutation(order, order + 9));\n\n    cout << res << endl;\n\n  }\n\n \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint main(){\n    int t,n[9];\n    char c[10],red[9],green[9],blue[9];\n    scanf(\"%d\",&t);\n    for(int u=0;u<t;u++){\n        int r=0,g=0,b=0;\n        for(int i=0;i<9;i++)\n            scanf(\"%d\",&n[i]);\n        for(int i=0;i<9;i++){\n            scanf(\"%s\",&c[i]);\n            if(c[i]=='R'){\n                red[r]=n[i];\n                r++;\n            }\n            if(c[i]=='G'){\n                green[g]=n[i];\n                g++;\n            }\n            if(c[i]=='B'){\n                blue[b]=n[i];\n                b++;\n            }\n        }\n        if(r%3!=0||g%3!=0||b%3!=0){\n            printf(\"0\\n\");\n            continue;\n        }\n        sort(red,red+r);\n        sort(green,green+g);\n        sort(blue,blue+b);\n        bool flag=true;\n        for(int i=0;i<r;i+=3){\n            if(!((red[i]+1==red[i+1]&&red[i+1]+1==red[i+2])||(red[i]==red[i+1]&&red[i+1]==red[i+2]))){\n                if(flag) printf(\"0\\n\");\n                flag=false;\n            }\n        }\n        for(int i=0;i<b;i+=3){\n            if(!((blue[i]+1==blue[i+1]&&blue[i+1]+1==blue[i+2])||(blue[i]==blue[i+1]&&blue[i+1]==blue[i+2]))){\n                if(flag) printf(\"0\\n\");\n                flag=false;\n            }\n        }\n        for(int i=0;i<g;i+=3){\n            if(!((green[i]+1==green[i+1]&&green[i+1]+1==green[i+2])||(green[i]==green[i+1]&&green[i+1]==green[i+2]))){\n                if(flag) printf(\"0\\n\");\n                flag=false;\n            }\n        }\n        if(flag) printf(\"1\\n\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n\n#define CARD_NUM 9\n#define COLOR_NUM 3\n\nusing namespace std;\n\nconst char *color = \"RGB\";\n\nbool checkSet(int *card, int num){\n  sort(card,card+num);\n  int numnum[CARD_NUM] = {0,};\n  for(int i = 0; i < num; ++i){\n    numnum[ card[i] ]++;\n  }\n  for(int i = 0; i < num; ++i){\n    if( numnum[ card[i] ] == 3 ){\n      numnum[ card[i] ] -= 3;\n    }\n  }\n  for(int i = 0; i < CARD_NUM-3; ++i){\n    if( numnum[ i ] >= 1 && numnum[i+1] >= 1 && numnum[i+2] >= 1 ){\n      numnum[i]--;\n      numnum[i+1]--;\n      numnum[i+2]--;\n    }\n  }\n  for(int i = 0; i < CARD_NUM; ++i){\n    if( numnum[i] > 0 ) return false;\n  }\n  return true;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; ++i){\n    bool win = true;\n    int ccardnum[COLOR_NUM]={0,};\n    int card[CARD_NUM];\n    int ccard[COLOR_NUM][CARD_NUM];\n    char cardcolor[CARD_NUM];\n    for(int j = 0; j < CARD_NUM; ++j){\n      cin >> card[j];\n    }\n    for(int j = 0; j < CARD_NUM; ++j){\n      cin >> cardcolor[j];\n    }\n    for(int k = 0; k < COLOR_NUM; ++k){\n      for(int j = 0; j < CARD_NUM; ++j){\n\tif( cardcolor[j] == color[k] ){\n\t  ccard[k][ccardnum[k]++] = card[j];\n\t}\n      }\n    }\n    for(int k = 0; k < COLOR_NUM; ++k){\n      if( !checkSet( ccard[k], ccardnum[k] ) ){\n\twin = false;\n\tbreak;\n      }\n    }\n\n    if( win ){\n      cout << '1';\n    }else{\n      cout << '0';\n    }\n    cout << endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n#include<algorithm>\n\n#define\tpb\tpush_back\n\nusing namespace std;\n\ntypedef\tvector<int>\tvi;\n\nbool check(vi v){\n\tint n=v.size();\n\tif(n==0)\treturn true;\n\tif(n==3){\n\t\tsort(v.begin(),v.end());\n\t\tif(v[0]==v[1] && v[1]==v[2])\t\treturn true;\n\t\tif(v[0]+1==v[1] && v[1]+1==v[2])\treturn true;\n\t\treturn false;\n\t}\n\tif(n>=6){\n\t\tvector<bool> b(n);\n\t\tfor(int i=n-3;i<n;i++)\tb[i]=true;\n\t\tdo{\n\t\t\tvi vv[2];\n\t\t\tfor(int i=0;i<n;i++)\tvv[b[i]].pb(v[i]);\n\t\t\tif(check(vv[0]) && check(vv[1]))\treturn true;\n\t\t}while(next_permutation(b.begin(),b.end()));\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint t;\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tpair<int,char> card[9];\n\t\tfor(int i=0;i<9;i++)\tscanf(\"%d \",&card[i].first);\n\t\tfor(int i=0;i<9;i++)\tscanf(\"%c \",&card[i].second);\n\n\t\tvi v[3];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(card[i].second=='R')\tv[0].pb(card[i].first);\n\t\t\tif(card[i].second=='G')\tv[1].pb(card[i].first);\n\t\t\tif(card[i].second=='B')\tv[2].pb(card[i].first);\n\t\t}\n\n\t\tbool ok;\n\t\tif(v[0].size()%3==0 && v[1].size()%3==0 && v[2].size()%3==0){\n\t\t\tok=true;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tif(!check(v[i])){ ok=false; break; }\n\t\t\t}\n\t\t}\n\t\telse\tok=false;\n\n\t\tprintf(\"%d\\n\",ok);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nbool solve()\n{\n\tint ns[9];\n\tchar cs[9];\n\tfor(int i=0;i<9;i++) cin>>ns[i];\n\tfor(int i=0;i<9;i++) cin>>cs[i];\n\tint p[9];\n\tfor(int i=0;i<9;i++) p[i]=i;\n\tdo{\n\t\tbool ok=1;\n\t\tfor(int i=0;i<9;i+=3){\n\t\t\tint x=p[i],y=p[i+1],z=p[i+2];\n\t\t\tok&=cs[x]==cs[y] && cs[y]==cs[z] &&\n\t\t\t\t((ns[x]==ns[y] && ns[y]==ns[z]) || (ns[x]+1==ns[y] && ns[y]+1==ns[z]));\n\t\t}\n\t\tif(ok) return true;\n\t}while(next_permutation(p,p+9));\n\treturn false;\n}\n\nint main()\n{\n\tint tc; cin>>tc;\n\twhile(tc--)\n\t\tcout<<solve()<<endl;\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,char> P;\nP a[9];\n\nbool check(P x,P y,P z){\n  if(x.second!=y.second||y.second!=z.second)return false;\n  if(x.first==y.first&&y.first==z.first)return true;\n  if(x.first+1==y.first&&y.first+1==z.first)return true;\n  return false;\n}\n\nint main(){\n  int Tc;\n  cin>>Tc;\n  while(Tc--){\n    for(int i=0;i<9;i++)cin>>a[i].first;\n    for(int i=0;i<9;i++)cin>>a[i].second;\n    sort(a,a+9);\n    int ans=0;\n    do{\n      ans=1;\n      for(int i=0;i<9;i+=3){\n        if(!check(a[i],a[i+1],a[i+2])){\n          ans=0;\n        }\n      }\n      if(ans==1)break;\n    }while(next_permutation(a,a+9));\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstruct card {\n    int num;\n    char color;\n};\nbool comp(const card& a, const card& b) {\n    if (a.color!=b.color) return a.color<b.color;\n    return a.num<b.num;\n}\ncard tehu[9];\nint main() {\n    int n; scanf(\"%d\",&n);\n    for (int ix=0; ix<n; ix++) {\n        for (int i=0; i<9; i++) scanf(\"%d\",&tehu[i].num);\n        for (int i=0; i<9; i++) cin>>tehu[i].color;\n        sort(tehu, tehu+9, comp);\n        char bec='*';\n        int ben, cnt=0;\n        bool used[9];\n        fill(used, used+9, false);\n        int sc=0;\n        for (int i=0; i<9; i++) {\n            if (bec=='*') {\n                bec=tehu[i].color;\n                ben=tehu[i].num;\n                cnt=1;\n            } else if (bec!=tehu[i].color) {\n                bec=tehu[i].color;\n                ben=tehu[i].num;\n                cnt=1;\n            } else if (ben!=tehu[i].num) {\n                ben=tehu[i].num;\n                cnt=1;\n            } else {\n                cnt++;\n                if (cnt==3) {\n                    used[i]=used[i-1]=used[i-2]=true;\n                    cnt=0;\n                    bec='*';\n                    sc++;\n                }\n            }\n       }\n       bec='*';\n       for (int i=0; i<9; i++) {\n            if (used[i]) continue;\n            if (bec=='*') {\n                bec=tehu[i].color;\n                ben=tehu[i].num;\n                cnt=1;\n            } else if (bec!=tehu[i].color) {\n                bec=tehu[i].color;\n                ben=tehu[i].num;\n                cnt=1;\n            } else if (ben+1!=tehu[i].num) {\n                ben=tehu[i].num;\n                cnt=1;\n            } else {\n                ben=tehu[i].num;\n                cnt++;\n                if (cnt==3) {\n                    cnt=0;\n                    bec='*';\n                    sc++;\n                }\n            }\n       }\n       if (sc<3) puts(\"0\");\n       else puts(\"1\");\n   }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cctype>\n#include <utility>\n#include <array>\n#include <algorithm>\nusing namespace std;\n\n#define _gp(l) const auto gcu{getchar##l}; const auto pcu{putchar##l}\n#ifdef __linux\n_gp(_unlocked);\n#else\n_gp();\n#endif\n#define _DEF(r, n, ...) inline r n(__VA_ARGS__) noexcept\n#define _T template <typename T>\n#define _HT template <typename H,typename... T>\n_T _DEF(T,in,int c){T n=0;int m=1;while(isspace(c)){c=gcu();}if(c=='-')m=-1,c=gcu();\n\tdo{n=10*n+(c-'0'),c=gcu();}while(c>='0'&&c<='9');return m*n;}\n_DEF(int,in,){return in<int>(gcu());}\n#define _SCAN(...) _DEF(bool,scan,__VA_ARGS__)\n_T _SCAN(T &n){int c=gcu();return c==EOF?false:(n=in<T>(c),true);}\n_DEF(bool, scan, int &c){c=gcu();gcu();return c!=EOF;}\n#ifdef _GLIBCXX_STRING\n_SCAN(string &s){int c;s=\"\";\n\tfor(;;){c=gcu();if(c=='\\n'||c==' ')return true;else if(c==EOF)return false;s+=(char)c;}}\n#endif\n_HT _SCAN(H &h,T&&... t){return scan(h)&&scan(t...);}\n#define _OUT(...) _DEF(void,out,__VA_ARGS__)\n#define _OUTL(...) _DEF(void,outl,__VA_ARGS__)\n_OUT(bool b){pcu('0'+b);} _OUT(const char *s){while(*s)pcu(*s++);} _OUT(char c){pcu(c);}\n#ifdef _GLIBCXX_STRING\n_OUT(string s){for(char c:s)pcu(c);}\n#endif\n_T _OUT(T n){static char b[20];char *p=b;T m=n<0?pcu('-'),-1:1;\n\tif(!n)*p++='0';else while(n)*p++=(char)(n%10*m+'0'),n/=10;while(p!=b)pcu(*--p);}\n_OUTL(){out('\\n');}\n#ifdef _GLIBCXX_VECTOR\n_T _OUT(vector<T> v){for(T &x:v)out(&x == &v[0]?\"\":\" \"),out(x);}\n#endif\n_HT _OUT(H&& h, T&&... t){out(h);out(move(t)...);}\ntemplate <typename... T> _OUTL(T&&... t){out(move(t)...);outl();}\nstruct range{\n\tint e,b=0,s=1; range(int _b,int _e,int _s):e(_e),b(_b),s(_s){} range(int _b,int _e): e(_e), b(_b){} range(int _e):e(_e){}\n\tstruct it { int v, s; it (int _v, int _s) : v(_v), s(_s) {} operator int()const{return v;} operator int&(){return v;} int operator*()const{return v;}\n\t\tit& operator++(){v+=s;return *this;} }; it begin() {return {b, s};} it end() {return {e, s};}};\n\nusing C = array<int, 9>;\n\nint main() {\n\tfor (int n {in()}; n; n--) {\n\t\tC t;\n\t\tarray<C, 3> d {};\n\t\tfor (int &i: t)\n\t\t\ti = in() - 1;\n\t\tfor (int i: t) {\n\t\t\tchar c = gcu();\n\t\t\td[c == 'R' ? 0 : c == 'B' ? 1 : 2][i]++;\n\t\t\tgcu();\n\t\t}\n\t\toutl([&] {\n\t\t\tfor (auto &i: d)\n\t\t\t\tfor (int j: range(9)) {\n\t\t\t\t\tauto o {begin(i) + j};\n\t\t\t\t\tif (!*o)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (j < 7 && *o && o[1] && o[2]) {\n\t\t\t\t\t\tint m {min({*o, o[1], o[2]})};\n\t\t\t\t\t\t*o -= m, o[1] -= m, o[2] -= m;\n\t\t\t\t\t}\n\t\t\t\t\tif (*o %= 3)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\treturn 1;}());\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\ntypedef pair<char,int>P;\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tvector<P>v;\n\t\tchar c[9];\n\t\tint a[9];\n\t\tr(i,9)cin>>a[i];\n\t\tr(i,9)cin>>c[i];\n\t\tr(i,9)v.push_back(P(c[i],a[i]));\n\t\tsort(v.begin(),v.end());\n\t\tif(v[0].first!=v[2].first||v[3].first!=v[5].first||v[6].first!=v[8].first)goto L1;\n\t\tif(!(v[0].second==v[1].second&&v[0].second==v[2].second||v[0].second==v[1].second-1&&v[0].second==v[2].second-2))goto L2;\n\t\tif(!(v[3].second==v[4].second&&v[3].second==v[5].second||v[3].second==v[4].second-1&&v[3].second==v[5].second-2))goto L3;\n\t\tif(!(v[6].second==v[7].second&&v[6].second==v[8].second||v[6].second==v[7].second-1&&v[6].second==v[8].second-2))goto L4;\n\t\tcout<<1<<endl;\n\t\tif(0){L1:;L2:;L3:;L4:;cout<<0<<endl;}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "// Rummy\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n  if (a == b && b == c)\n    return true;\n  else\n    return false;\n}\nbool is_sequence(int a,int b,int c){\n  if (a+2 == c && b+1 == c)\n    return true;\n  else\n    return false;\n}\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_all_good_set(){\n  // if (is_good_set(card[0],card[1],card[2]))\n  //   if (is_good_set(card[3],card[4],card[5]))\n  //     if (is_good_set(card[6],card[7],card[8]))\n  //       return true;\n  if (is_good_set(card[0],card[1],card[2])&&is_good_set(card[3],card[4],card[5])&&is_good_set(card[6],card[7],card[8]))\n    return true;\n  else\n    return false;\n}\nint win(){\n  // card ?????????????????? \n  do{\n    if (is_all_good_set()) // ??????card?????????????????????????????¶????????? \n      return 1;\n  } while (next_permutation(card, card+9)); \n  // ??¨???????????????????????????????????????????????¶????????????????????£??? \n  return 0;\n}\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) { \n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n        if (color == \"G\") \n          card[i] += 10;\n        else if (color == \"B\") \n          card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n// ??????????????¨???\n// red:0 , blue:10 , green:20\n// 1-9"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <algorithm>\n#include <map>\n\n\nusing namespace std;\n\n\n\n#define rep(i,n) for(i=0;i<n;i++)\n\nint C[9];\n\nint A[30];\n\n\nint main(){\n\tint T,t;\n\tint i,j,k;\n\tchar c[40];\n\tbool f,g;\t\n\t\n\tscanf(\"%d\",&T);\n\t\n\t\n\t\n\trep(t,T){\n\t\trep(i,40)A[i]=0;\n\t\t\n\t\trep(i,9){\n\t\t\tscanf(\"%d\",&C[i]);\n\t\t}\n\t\t\n\t\trep(i,9){\n\t\t\tscanf(\"%s\",c);\n\t\t\tif(c[0]=='G'){\n\t\t\t\tC[i]+=10;\n\t\t\t}\n\t\t\tif(c[0]=='B'){\n\t\t\t\tC[i]+=20;\n\t\t\t}\n\t\t\tA[C[i]]++;\n\t\t\t\n\t\t}\n\t\t\n\t\t//rep(i,30)printf(\"%2d:%2d\\n\",i,A[i]);\n\t\t\n\t\tf=true;\n\t\t\n\t\trep(i,30){\n\t\t\tif(A[i]!=1)continue;\n\t\t\tif(A[i+1]!=2)continue;\n\t\t\tif(A[i+2]!=3)continue;\n\t\t\tif(A[i+3]!=4)continue;\n\t\t\tif(A[i+4]!=5)continue;\n\t\t\tf=false;break;\n\t\t}\n\t\t\n\t\tif(f){\n\t\t\trep(i,30){\n\t\t\t\tif(A[i]>=3)A[i]-=3;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\trep(i,30){\n\t\t\t\tg=true;\n\t\t\t\trep(j,3){\n\t\t\t\t\tif(A[i+j]==0)g=false;\n\t\t\t\t}\n\t\t\t\tif(g){\n\t\t\t\t\trep(j,3)A[i+j]--;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tf=false;\n\t\t\trep(i,30){\n\t\t\t\tif(A[i]!=0)f=true;\n\t\t\t}\n\t\t}\t\t\n\t\t//rep(i,30)printf(\"%2d:%2d\\n\",i,A[i]);\n\t\t\n\t\tif(f)puts(\"0\");\n\t\telse puts(\"1\");\n\t\t\t\n\t}\n\t\n\t\n\t\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n \n#define _rrep(i,n) _rrange(i,n,0)\n#define _rrange(i,a,b) for(int i=(int)(a)-1;i>=(int)(b);--i)\n#define rrep(...) _overload(__VA_ARGS__,_rrange,_rrep,)(__VA_ARGS__)\n \n#define _all(arg) begin(arg),end(arg)\n#define uniq(arg) sort(_all(arg)),(arg).erase(unique(_all(arg)),end(arg))\n#define getidx(ary,key) lower_bound(_all(ary),key)-begin(ary)\n#define clr(a,b) memset((a),(b),sizeof(a))\n#define bit(n) (1LL<<(n))\n \n// #define DEBUG\n \n#ifdef DEBUG\n    #define dump(...) fprintf(stderr, __VA_ARGS__)\n#else\n    #define dump(...)\n#endif\n \ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0;}\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0;}\n \nusing namespace std;\nusing ll=long long;\nusing vi=vector<int>;\nusing vll=vector<ll>;\n \nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst ll inf =1LL << 62;\nconst ll mod=1000000007LL;\nconst int dx[4]={1,0,-1,0};\nconst int dy[4]={0,1,0,-1};\n \n \nll extgcd(ll a,ll b,ll& x,ll& y){x=1,y=0;ll g=a;if(b!=0) g=extgcd(b,a%b,y,x),y-=a/b*x;return g;}\nll ADD(const ll &a, const ll &b,const ll &mod) { return (a+b)%mod;}\nll SUB(const ll &a, const ll &b,const ll &mod) { return (a-b+mod)%mod;}\nll MUL(const ll &a, const ll &b,const ll &mod) { return (1LL*a*b)%mod;}\nll DIV(const ll &a, const ll &b,const ll &mod) {ll x,y; extgcd(b,mod,x,y);return MUL(a,(x+mod)%mod,mod);}\n \nrandom_device rd;\nmt19937 mt(rd());\nuniform_int_distribution<int> dice(1,6);\nuniform_real_distribution<double> score(0.0,10.0);\n\nconst int n = 9;\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--){\n\t\tvi num(n); for(auto & e : num) cin >> e;\n\t\tstring color;\n\t\trep(i, n){\n\t\t\tchar c; cin >> c;\n\t\t\tcolor.push_back(c);\n\t\t}\n\n\t\tvi card[3];\n\t\trep(i, n){\n\t\t\tint idx = color[i] == 'R' ? 0 : color[i] == 'G' ? 1 : 2;\n\t\t\tcard[idx].push_back(num[i]);\n\t\t}\n\n\t\trep(i, 3) sort(_all(card[i]));\n\n\t\tint cnt = 0;\n\t\trep(i, 3){\n\t\t\tvi & hand = card[i];\n\n\t\t\tif(hand.size() % 3 != 0){\n\t\t\t\tcnt = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint len = hand.size();\n\t\t\trep(j, len / 3){\n\t\t\t\tint k = j * 3;\n\t\t\t\tint a = hand[k], b = hand[k + 1], c = hand[k + 2];\n\t\t\t\tif((a == b and b == c) or (b - a == 1 and c - b == 1)){\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint res = cnt == 3 ? 1 : 0;\n\t\tcout << res << endl;\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string>\n#define int long long\nusing namespace std;\nvoid solve() {\n\tint a[10], r[20], g[20], b[20];\n\tfor (int i = 0; i < 9; i++)cin >> a[i];\n\tfor (int i = 0; i <= 9; i++) {\n\t\tr[i] = 0; g[i] = 0; b[i] = 0;\n\t}\n\tfor (int i = 0; i < 9; i++) {\n\t\tchar c; cin >> c;\n\t\tif (c == 'R') { r[0]++; r[a[i]]++; }\n\t\tif (c == 'G') { g[0]++; g[a[i]]++; }\n\t\tif (c == 'B') { b[0]++; b[a[i]]++; }\n\t}\n\tif (r[0] % 3 + g[0] % 3 + b[0] % 3 != 0) { cout << \"0\\n\"; return; }\n\tfor (int i = 0; i < r[0] / 3; i++) {\n\t\tfor (int j = 1; j <= 9; j++) {\n\t\t\tif (r[j] >= 3) {\n\t\t\t\tr[j] -= 3;\n\t\t\t\tgoto heaven_r;\n\t\t\t}\n\t\t\telse if (r[j] > 0) {\n\t\t\t\tr[j]--;\n\t\t\t\tr[j + 1]--;\n\t\t\t\tr[j + 2]--;\n\t\t\t\tif (r[j + 1] < 0 || r[j + 2] < 0) { cout << \"0\\n\"; return; }\n\t\t\t\tgoto heaven_r;\n\t\t\t}\n\t\t}\n\t\theaven_r:;\n\t}\n\tfor (int i = 0; i < g[0] / 3; i++) {\n\t\tfor (int j = 1; j <= 9; j++) {\n\t\t\tif (g[j] >= 3) {\n\t\t\t\tg[j] -= 3;\n\t\t\t\tgoto heaven_g;\n\t\t\t}\n\t\t\telse if (g[j] > 0) {\n\t\t\t\tg[j]--;\n\t\t\t\tg[j + 1]--;\n\t\t\t\tg[j + 2]--;\n\t\t\t\tif (g[j + 1] < 0 || g[j + 2] < 0) { cout << \"0\\n\"; return; }\n\t\t\t\tgoto heaven_g;\n\t\t\t}\n\t\t}\n\theaven_g:;\n\t}\n\tfor (int i = 0; i < b[0] / 3; i++) {\n\t\tfor (int j = 1; j <= 9; j++) {\n\t\t\tif (b[j] >= 3) {\n\t\t\t\tb[j] -= 3;\n\t\t\t\tgoto heaven_b;\n\t\t\t}\n\t\t\telse if (b[j] > 0) {\n\t\t\t\tb[j]--;\n\t\t\t\tb[j + 1]--;\n\t\t\t\tb[j + 2]--;\n\t\t\t\tif (b[j + 1] < 0 || b[j + 2] < 0) { cout << \"0\\n\"; return; }\n\t\t\t\tgoto heaven_b;\n\t\t\t}\n\t\t}\n\theaven_b:;\n\t}\n\tcout << \"1\\n\"; return;\n}\nsigned main() {\n\tint n; cin >> n; for (int i = 0; i < n; i++)solve();\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\nusing namespace std;\nint T, card[16];\n\nbool is_same_number(int a, int b, int c) {\n  return (a == b) && (b == c);\n}\n\nbool is_sequence(int a, int b, int c) {\n  return (a == b-1) && (b == c-1);\n}\n\nbool is_good_set(int a, int b, int c) {\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set() {\n  return (is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]));\n    }\n\nint win() {\n  sort(card,card+9);\n  do {\n    if(is_all_good_set()) return 1;\n  }while (next_permutation(card, card+9));\n  return 0;\n}\n\nint main() {\n{\nmap<string, int> table;\ntable[\"R\"] = 0;\ntable[\"G\"] = 10;\ntable[\"B\"] = 20;\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) {\n      cin >> card[i];\n    }\n    string color;\n   for (int i=0; i<9; ++i) {\n      cin >> color;\n      card[i] = card[i] + table[color];\n    }\n   cout << win() << endl;\n  }\n}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T,card[10];\nstring str;\n\nbool check1(int a,int b,int c){\n    if(a == b && b == c) return true;\n    return false;\n}\n\nbool check2(int a,int b,int c){\n    if(a+2 == b+1 && b+1 == c) return true;\n    return false;\n}\n\nbool check3(int a,int b,int c){\n    return check1(a,b,c) || check2(a,b,c);\n}\n\nbool check4(int card[10]){\n    return check3(card[0],card[1],card[2])&&check3(card[3],card[4],card[5])\n           &&check3(card[6],card[7],card[8]);\n}\n\nint judge(){\n    sort(card,card+9);\n    do{\n        if(check4(card)) return 1;\n        \n    }while(next_permutation(card,card+9));\n    return 0;\n}\n\nint main(){\n    cin >> T;\n    while(T--){\n        for(int i = 0 ; i < 9 ; i++){\n            cin >> card[i];\n        }\n        for(int i = 0 ; i < 9 ; i++){\n            cin >> str;\n            if(str == \"G\") card[i] += 10;\n            else if(str == \"B\") card[i] += 20;\n        }\n        cout << judge() << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint main(){\n    int t,n[9];\n    char c[10],red[9],green[9],blue[9];\n    scanf(\"%d\",&t);\n    for(int u=0;u<t;u++){\n        int r=0,g=0,b=0;\n        for(int i=0;i<9;i++)\n            scanf(\"%d\",&n[i]);\n        for(int i=0;i<9;i++){\n            scanf(\"%s\",&c[i]);\n            if(c[i]=='R'){\n                red[r]=n[i];\n                r++;\n            }\n            if(c[i]=='G'){\n                green[g]=n[i];\n                g++;\n            }\n            if(c[i]=='B'){\n                blue[b]=n[i];\n                b++;\n            }\n        }\n        if(r%3!=0||g%3!=0||b%3!=0){\n            printf(\"0\\n\");\n            continue;\n        }\n        sort(red,red+r);\n        sort(green,green+g);\n        sort(blue,blue+b);\n        bool flag=true;\n        for(int i=0;i<r;i+=3){\n            if(!(red[i]+1==red[i+1]&&red[i+1]+1==red[i+2])){\n                if(flag) printf(\"0\\n\");\n                flag=false;\n            }\n        }\n        for(int i=0;i<r;i+=3){\n            if(!(red[i]+1==red[i+1]&&red[i+1]+1==red[i+2])){\n                if(flag) printf(\"0\\n\");\n                flag=false;\n            }\n        }\n        for(int i=0;i<r;i+=3){\n            if(!(red[i]+1==red[i+1]&&red[i+1]+1==red[i+2])){\n                if(flag) printf(\"0\\n\");\n                flag=false;\n            }\n        }\n        if(flag) printf(\"1\\n\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Rummy\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n  if (a == b && b == c)\n    return true;\n  else\n    return false;\n}\nbool is_sequence(int a,int b,int c){\n  if (a+2 == c && b+1 == c)\n    return true;\n  else\n    return false;\n}\nbool is_good_set(int a, int b, int c){\n  return (is_same_number(a,b,c) || is_sequence(a,b,c));\n}\nbool is_all_good_set(){\n  if (is_good_set(card[0],card[1],card[2])&&is_good_set(card[3],card[4],card[5])&&is_good_set(card[6],card[7],card[8]))\n    return true;\n  else\n    return false;\n}\nint win(){\n  // card ??????????????????\n  sort(card, card+9);\n  do{\n    if (is_all_good_set()) // ??????card?????????????????????????????¶????????? \n      return 1;\n  } while (next_permutation(card, card+9)); \n  // ??¨???????????????????????????????????????????????¶????????????????????£??? \n  return 0;\n}\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i) { \n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i) {\n      cin >> color;\n        if (color == \"G\") \n          card[i] += 10;\n        else if (color == \"B\") \n          card[i] += 20;\n    }\n    cout << win() << endl;\n  }\n}\n// ??????????????¨???\n// red:0 , blue:10 , green:20\n// 1-9"
  },
  {
    "language": "C++",
    "code": "a#include<iostream>\n#include<string>\nusing namespace std;\nint T, card[16];\nbool is_same_number(int a, int b, int c){\n\treturn a == b && b == c;\n}\nbool is_sequence(int a, int b, int c){\n\treturn a+2 == b+1 && b+1 == c;\n}\nbool is_good_set(int a, int b, int c){\n\treturn is_same_number(a, b, c) || is_sequence(a, b, c);\n}\nbool is_all_good_set(){\n\treturn is_good_set(card[0], card[1], card[2]) && \n\t\tis_good_set(card[3], card[4], card[5]) &&\n\t\tis_good_set(card[6], card[7], card[8]);\n}\nint win(){\n\tsort(card, card+9);\n\tdo{\n\t\tif(is_all_good_set()) return 1;\n\t}while(next_permutation(card, card+9));\n\treturn 0;\n}\nint main(){\n\tcin >> T;\n\tfor(int t=0; t<T; ++t){\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin >> card[i];\n\t\t}\n\t\tstring color;\n\t\tfor(int i=0; i<9; ++i){\n\t\t\tcin >> color;\n\t\t\tif(color ==\"G\") card[i]+=10;\n\t\t\telse if(color == \"B\") card[i]+=20;\n\t\t}\n\t\tcout << win() <<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n \nint main(){\n  int n;\n  cin>>n;\n  int cards[9];\n  char color;\n  int num[3][9];\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++)\n      for(int k=0;k<9;k++)num[j][k]=0;\n    for(int j=0;j<9;j++) cin>>cards[j];\n    for(int j=0;j<9;j++){\n      cin>>color;\n      if(color=='R'){\n    num[0][cards[j]]++;\n      }else if(color=='G'){\n    num[1][cards[j]]++;\n      }else{\n    num[2][cards[j]]++;\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<7;j++){\n    while(num[k][j]>=3)num[k][j]-=3;\n    while(num[k][j]>0 && num[k][j+1]>0 && num[k][j+2]>0){\n      num[k][j]--;num[k][j+1]--;num[k][j+2]--;\n    }\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    while(num[k][j]>=3)num[k][j]-=3;\n      }\n    }\n    bool ans=true;\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n    //cout << num[k][j] << \" \" ;\n    if(num[k][j]!=0){\n      ans=false;\n      break;\n    }\n      }\n      //cout << endl;\n    }\n    if(ans==true) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nclass Card{\npublic:\n  int n;\n  char rgb;\n  bool operator <(const Card &c) const {\n    if(rgb != c.rgb) return rgb < c.rgb;\n    if(n != c.n) return n < c.n;\n    return false;\n  }\n  bool operator ==(const Card &c) const {\n    if(rgb == c.rgb && n == c.n) return true;\n    return false;\n  }\n};\n\nCard card[9];\n\nstruct Used{\n  bool u[9];\n  Used() {\n    for(int i = 0; i < 9; i++) {\n      u[i] = false;\n    }\n  }\n};\n\nbool rec(Used u) {\n  bool flag = false;\n  for(int i = 0; i < 9; i++) {\n    if(!u.u[i]) {\n      flag = true;\n      int cnt = 1;\n      Used newU = u;\n      newU.u[i] = true;\n      for(int j = i+1; j < 9; j++) {\n\tif(u.u[j]) continue;\n\tif(card[j] == card[i]) {\n\t  cnt++;\n\t  newU.u[j] = true;\n\t  if(cnt == 3) {\n\t    if(rec(newU)) return true;\n\t    break;\n\t  }\n\t}\n      }\n      cnt = 1;\n      newU = u;\n      newU.u[i] = true;\n      for(int j = i+1; j < 9; j++) {\n\tif(u.u[j]) continue;\n\tif(card[j].rgb == card[i].rgb && card[j].n - cnt == card[i].n) {\n\t  cnt++;\n\t  newU.u[j] = true;\n\t  if(cnt == 3) {\n\t    if(rec(newU)) return true;\n\t    break;\n\t  }\n\t}\n      }\n      return false;\n    }\n  }\n  if(!flag) return true;\n  return false;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for(int t = 0; t < T; t++) {\n    for(int i = 0; i < 9; i++)\n      cin >> card[i].n;\n    for(int i = 0; i < 9; i++)\n      cin >> card[i].rgb;\n    sort(card, &card[9]);\n    if(rec(Used())) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n\nint N;\nint n[11]={};\nchar ch;\ncin>>N;\nfor(int iii=0;iii<N;iii++){\nfor(int i=0;i<9;i++){\ncin>>n[i];\n}\nfor(int i=0;i<9;i++){\ncin>>ch;\nif(ch=='G')n[i]+=10;\nif(ch=='B')n[i]+=20;\n}\nsort(n,n+9);\nbool f1=false,f2=false,f3=false,f4;\n/*\nfor(int i=0;i<9;i++)\n\tcout<<n[i];\ncout<<endl;\n*/\nif(n[0]==n[1]&&n[0]==n[2])f1=true;\nif(n[1]==n[0]+1&&n[2]==n[1]+1)f1=true;\n\nif(n[3]==n[4]&&n[3]==n[5])f2=true;\nif(n[4]==n[3]+1&&n[5]==n[4]+1)f2=true;\n\nif(n[6]==n[7]&&n[6]==n[8])f3=true;\nif(n[7]==n[6]+1&&n[8]==n[7]+1)f3=true;\n\n\nif(n[0]==n[1]&&n[2]==n[3]&&n[4]==n[5])f4=true;\nif(n[0]==n[2]+1&&n[2]==n[4]+1&&f4==true){f1=true;f2=true;}\n\nif(n[3]==n[4]&&n[5]==n[6]&&n[7]==n[8])f4=true;\nif(n[3]==n[5]+1&&n[5]==n[7]+1&&f4==true){f2=true;f3=true;}\n\n\nint g=0;\nif(f1&&f2&&f3)g=1;\ncout<<g<<endl;\n}\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[9], p[9]; char c[9];\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < 9; j++) cin >> a[j], p[j] = j;\n\t\tfor (int j = 0; j < 9; j++) cin >> c[j];\n\t\tint f = 0;\n\t\tdo {\n\t\t\tint g = 1;\n\t\t\tfor (int j = 0; j < 9; j += 3) {\n\t\t\t\tif (!(c[p[j]] == c[p[j + 1]] && c[p[j]] == c[p[j + 2]])) { g = 0; break; }\n\t\t\t\tint b[3] = { a[p[j]], a[p[j + 1]], a[p[j + 2]] };\n\t\t\t\tsort(b, b + 3);\n\t\t\t\tif ((b[1] - b[0]) != (b[2] - b[1]) || (b[1] - b[0]) >= 2) { g = 0; break; }\n\t\t\t}\n\t\t\tif (g) { f = 1; break; }\n\t\t} while (next_permutation(p, p + 9));\n\t\tcout << f << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Card {\n\tint  n;\n\tchar c;\n};\n\nint judge( Card a, Card b, Card c )\n{\n\tif(a.n == b.n && b.n == c.n) return true;\n\tint sum = a.n + b.n + c.n;\n\tint Min = min(a.n , min(b.n, c.n));\n\tif(sum == (3*Min+3)) return true;\n\treturn false;\n}\n\nconst int SIZE = 9;\nCard cards[SIZE];\nbool locked[SIZE], answer;\nvoid search( int count )\n{\n\tif(count >= 4) return;\n\tfor(int i=0; i < SIZE && !answer; ++i) {\n\t\tif(locked[i]) continue;\n\t\tlocked[i] = true;\n\t\tfor(int j=0; j < SIZE && !answer; ++j) {\n\t\t\tif(locked[j] || cards[i].c != cards[j].c) continue;\n\t\t\tlocked[j] = true;\n\t\t\tfor(int k=0; k < SIZE && !answer; ++k) {\n\t\t\t\tif(locked[k] || cards[j].c != cards[k].c) continue;\n\t\t\t\tlocked[k] = true;\n\t\t\t\tif(judge(cards[i], cards[j], cards[k])) {\n\t\t\t\t\tif(count == 3) { answer = true; return; }\n\t\t\t\t\telse { search(count + 1); }\n\t\t\t\t}\n\t\t\t\tlocked[k] = false;\n\t\t\t}\n\t\t\tlocked[i] = false;;\n\t\t}\n\t\tlocked[i] = false;\n\t}\n}\n\nint main( void )\n{\n\tint t;\n\tcin >> t;\n\twhile(t--) {\n\t\tfor(int i=0; i < SIZE; ++i) cin >> cards[i].n;\n\t\tfor(int i=0; i < SIZE; ++i) { cin >> cards[i].c; locked[i] = false; }\n\t\tanswer = false;\n\t\tsearch(1);\n\t\tif(answer)\n\t\t\tcout << 1 << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a+2==c && b+1==c ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\tvector<int> ans;\n\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\t// for (int i = 0; i < 9; ++i)\n\t\t// {\n\t\t// \tn[i]=0;\n\t\t// \t/* code */\n\t\t// }\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 20;\n\t\t\tif(color == \"B\") n[k] += 40;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tans.push_back(1);\n\t\t\t//cout << 1 << endl;\n\t\t}else{\n\t\t\tans.push_back(0);\n\t\t\t//cout << 0 << endl;\n\t\t}\n\t}\n\tfor (int i = 0; i < ans.size(); ++i)\n\t{\n\t\tcout << ans[i] <<endl;\n\t\t/* code */\n\t}\n\t\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Cd{\n\tint n;\n\tchar w;\n\tbool f;\n};\n\nbool comp(const Cd& c1, const Cd& c2)\n{\n\treturn c1.n < c2.n;\n}\n\nbool func(vector<Cd> vec)\n{\n\tint l = vec.size();\n\tbool f = true;\n\tif(l == 0){\n\t\treturn true;\n\t} else if(l%3 != 0){\n\t\treturn false;\n\t}\n\tsort(vec.begin(), vec.end(), comp);\n\t\n\tif(vec[0].n == vec[1].n && vec[0].n == vec[2].n){\n\t\tvec[0].f = vec[1].f = vec[2].f = false;\n\t}\n\tif(l > 3){\n\t\tif(vec[l-1].n == vec[l-2].n && vec[l-1].n == vec[l-3].n){\n\t\t\tvec[l-1].f = vec[l-2].f = vec[l-3].f = false;\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < l; i++){\n\t\tif(vec[i].f){\n\t\t\tvec[i].f = false;\n\t\t\tint c = 1;\n\t\t\tfor(int j = i+1; j < l; j++){\n\t\t\t\tif(vec[i].n+c == vec[j].n && vec[j].f){\n\t\t\t\t\tvec[j].f = false;\n\t\t\t\t\tc++;\n\t\t\t\t\tif(c == 3){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c < 3){\n\t\t\t\tf = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nint main()\n{\n\tint n;\n\t\n\twhile(cin>>n && n){\n\t\tint a[10];\n\t\tCd c;\n\t\t\n\t\twhile(n--){\n\t\t\tvector<Cd> g, r, b;\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tcin >> a[i];\n\t\t\t}\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tcin >> c.w;\n\t\t\t\tc.n = a[i];\n\t\t\t\tc.f = true;\n\t\t\t\tif(c.w == 'R'){\n\t\t\t\t\tr.push_back(c);\n\t\t\t\t} else if(c.w == 'B'){\n\t\t\t\t\tb.push_back(c);\n\t\t\t\t} else {\n\t\t\t\t\tg.push_back(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(func(r) && func(g) && func(b)){\n\t\t\t\tcout << 1 << endl;\n\t\t\t} else {\n\t\t\t\tcout << 0 << endl;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\n\nint main(){\n\tint t; cin>>t;\n\trep(i,t){\n\t\tint a[9]; char c;\n\t\trep(j,9) cin>>a[j];\n\t\trep(j,9){\n\t\t\tcin>>c;\n\t\t\tif(c=='G') a[j]+=10;\n\t\t\tif(c=='B') a[j]+=20;\n\t\t}\n\t\tsort(a,a+9);\n\n\t\tint ans=0;\n\t\tdo{\n\t\t\tbool b[3]; b[0]=b[1]=b[2]=false;\n\t\t\trep(j,3){\n\t\t\t\tif(a[3*j]==a[3*j+1] and a[3*j]==a[3*j+2]) b[j]=true;\n\t\t\t\tif(a[3*j]+1==a[3*j+1] and a[3*j]+2==a[3*j+2]) b[j]=true;\n\t\t\t}\n\t\t\tif(b[0] and b[1] and b[2]){\n\t\t\t\tans=1; break;\n\t\t\t}\n\t\t}while(next_permutation(a,a+9));\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#define N 9\nusing namespace std;\nvoid NP(int);\nvoid check();\nint flag;\npair<char,char> data[N],out[N];\nbool used[N];\nint main(){\n  int T;\n  cin >> T;\n  for(int i=0;i<T;i++){\n    for(int j=0;j<N;j++){\n      cin >> data[j].first;\n    }\n    for(int j=0;j<N;j++){\n      cin >> data[j].second;\n    }\n    flag=0;\n    NP(0);\n    if(flag==1) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}\nvoid NP(int x){\n  if(x<N){\n    for(int i=0;i<N;i++){\n      if(used[i]) continue;\n      out[x]=data[i];\n      used[i]=true;\n      NP(x+1);\n      used[i]=false;\n    }\n  }else{\n    check();\n  }\n}\nvoid check(){\n  int flag1=0;\n  for(int i=0;i<N;i+=3){\n    if(out[i].second==out[i+1].second&&out[i+1].second==out[i+2].second){\n      if(out[i].first==out[i+1].first-1&&out[i+1].first==out[i+2].first-1){\n      }\n      else if(out[i].first==out[i+1].first&&out[i+1].first==out[i+2].first){\n      }\n      else{\n\tflag1=1;\n\tbreak;\n      }\n    }else{\n      flag1=1;\n      break;\n    }\n  }\n  if(flag1==0) flag=1;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tcin>>n;\n\tint nums[10];\n\tchar colors[10];\n\tfor(int i = 0; i < n; i++){\n\t\tvector<int> R,G,B;\n\t\tfor(int j = 0; j < 9; j++)\n\t\t\tcin>>nums[j];\n\t\tfor(int j = 0; j < 9; j++){\n\t\t\tcin>>colors[j];\n\t\t\tif(colors[j]=='R')\n\t\t\t\tR.push_back(nums[j]);\n\t\t\telse if(colors[j]=='G')\n\t\t\t\tG.push_back(nums[j]);\n\t\t\telse if(colors[j]=='B')\n\t\t\t\tB.push_back(nums[j]);\n\t\t}\n\t\tsort(R.begin(),R.end());\n\t\tsort(G.begin(),G.end());\n\t\tsort(B.begin(),B.end());\n\t\tif(R.size()%3!=0||G.size()%3!=0||B.size()%3!=0){\n\t\t\tcout<<0<<endl;\n\t\t}\n\t\telse{\n\t\t\tbool f=false;\n\t\t\tint idx=0;\n\t\t\twhile(1){\n\t\t\t\tif(idx>=R.size())\n\t\t\t\t\tbreak;\n\t\t\t\tif(R[idx]==R[idx+1]&&R[idx+1]==R[idx+2]){\n\t\t\t\t\tidx+=3;\n\t\t\t\t}\n\t\t\t\telse if(R[idx]==R[idx+1]-1&&R[idx]==R[idx+2]-2){\n\t\t\t\t\tidx+=3;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tf=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidx=0;\n\t\t\twhile(1){\n\t\t\t\tif(idx>=G.size())\n\t\t\t\t\tbreak;\n\t\t\t\tif(G[idx]==G[idx+1]&&G[idx+1]==G[idx+2]){\n\t\t\t\t\tidx+=3;\n\t\t\t\t}\n\t\t\t\telse if(G[idx]==G[idx+1]-1&&G[idx]==G[idx+2]-2){\n\t\t\t\t\tidx+=3;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tf=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidx=0;\n\t\t\twhile(1){\n\t\t\t\tif(idx>=B.size())\n\t\t\t\t\tbreak;\n\t\t\t\tif(B[idx]==B[idx+1]&&B[idx+1]==B[idx+2]){\n\t\t\t\t\tidx+=3;\n\t\t\t\t}\n\t\t\t\telse if(B[idx]==B[idx+1]-1&&B[idx]==B[idx+2]-2){\n\t\t\t\t\tidx+=3;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tf=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!f){\n\t\t\t\tcout<<1<<endl;\n\t\t\t}\n\t\t\telse\n\t\t\t\tcout<<0<<endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\n\nbool same(int a, int b, int c){\n\tif(a==b && a==c){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\t\n}\n\nbool renban(int a, int b, int c){\n\tif(a==(b-1) && a==(c-2) ){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\tint T;\n\tint n[9];\n\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tfor (int i = 0; i < 9; ++i)\n\t\t{\n\t\t\tn[i]=0;\n\t\t\t/* code */\n\t\t}\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> n[j];\n\t\t\t//cout << n[j];\n\t\t}\n\t\tstring color;\n\t\tfor(int k=0; k<9; k++){\n\t\t\tcin >> color;\n\t\t\tif(color == \"G\") n[k] += 10;\n\t\t\tif(color == \"B\") n[k] += 20;\n\t\t\t//cout << color;\n\t\t}\n\t\tsort(n,n+9);\n\t\t//同じいろかつ同じ数字\n\t\tif((same(n[0],n[1],n[2]) || renban(n[0],n[1],n[2]))&& (same(n[3],n[4],n[5]) || renban(n[3],n[4],n[5]))  && (same(n[6],n[7],n[8]) || renban(n[6],n[7],n[8])) ){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0 ;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nvoid judge();\nbool rum(int a, int b, int c);\n\nint main()\n{\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        judge();\n    }\n    return 0;\n}\n\nvoid judge()\n{\n    int nums[9] = {0,1,2,3,4,5,6,7,8}; \n    int numbers[9];\n    char colors[9];\n    for(int i = 0; i < 9; i++){\n        cin >> numbers[i];\n    }\n    for(int i = 0; i < 9; i++){\n        cin >> colors[i];\n    }\n    int set_num;\n    bool flag = false;\n    do{\n        set_num = 0;\n        for(int i = 0; i < 3; i++){\n            if(colors[nums[3*i]] == colors[nums[3*i+1]] && colors[nums[3*i+1]] == colors[nums[3*i+2]]){\n                if(rum(numbers[nums[3*i]], numbers[nums[3*i+1]], numbers[nums[3*i+2]])){\n                    set_num++;\n                }\n            } else {\n                break;\n            }\n        }\n        if(set_num >= 3){\n            flag = true;\n            break;\n        }\n    }\n    while(next_permutation(nums, nums+9));\n    if(flag){\n        cout << 1 << endl;\n    } else{ \n        cout << 0 << endl;\n    }\n}\n\nbool rum(int a, int b, int c)\n{\n    int nums[3] = {a, b, c};\n    sort(nums, nums+3);\n    bool flag;\n    flag = ((nums[0] == nums[1]) && (nums[1] == nums[2])) | ((nums[0] + 1 == nums[1]) && (nums[1] + 1 == nums[2]));\n    return flag;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n  int n;\n  cin>>n;\n  int cards[9];\n  char color;\n  int num[3][9];\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++)\n      for(int k=0;k<9;k++)num[j][k]=0;\n    for(int j=0;j<9;j++) cin>>cards[j];\n    for(int j=0;j<9;j++){\n      cin>>color;\n      if(color=='R'){\n\tnum[0][cards[j]]++;\n      }else if(color=='G'){\n\tnum[1][cards[j]]++;\n      }else{\n\tnum[2][cards[j]]++;\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<7;j++){\n\tif(num[k][j]>0 && num[k][j+1]>0 && num[k][j+2]>0){\n\t  num[k][j]--;num[k][j+1]--;num[k][j+2]--;\n\t}\n      }\n    }\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n\tif(num[k][j]>=3)num[k][j]-=3;\n      }\n    }\n    bool ans=true;\n    for(int k=0;k<3;k++){\n      for(int j=0;j<9;j++){\n\t//cout << num[k][j] << \" \" ;\n\tif(num[k][j]!=0){\n\t  ans=false;\n\t  break;\n\t}\n      }\n      //cout << endl;\n    }\n    if(ans==true) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <functional>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\nusing namespace std;\n\ntypedef istringstream ISS;\ntypedef ostringstream OSS;\ntypedef vector<string> VS;\ntypedef int INT;\ntypedef vector<INT> VI;\ntypedef vector<VI> VVI;\ntypedef pair <INT, INT> II;\ntypedef vector <II> VII;\n\n\ntypedef pair <char, int> CARD;\ntypedef vector <CARD> CARDS;\nconst int SIZE = 9;\n\nCARDS C;\n\nvoid init() {\n    C = CARDS(SIZE);\n}\n\nvoid input() {\n    for ( int i = 0; i < SIZE; ++ i ) {\n        cin >> C[i].second;\n    }\n    for ( int i = 0; i < SIZE; ++ i ) {\n        cin >> C[i].first;\n    }\n}\n\nbool check( CARDS C ) {\n    sort( C.begin(), C.end() );\n    for ( int i = 0; i < 3; ++ i ) {\n        for ( int j = 0; j < 3; ++ j ) {\n            if ( C[i].first != C[j].first ) return false;\n        }\n    }\n    bool flag = true;\n    for ( int i = 0; i < 3; ++ i ) {\n        for ( int j = 0; j < 3; ++ j ) {\n            if ( C[i].second != C[j].second ) flag = false;\n        }\n    }\n    if ( flag ) return true;\n    for ( int i = 0; i+1 < 3; ++ i ) {\n        if ( C[i].second + 1 != C[i+1].second ) return false;\n    }\n    return true;\n}\n\nint solve() {\n    sort( C.begin(), C.end() );\n    do {\n        bool flag = true;\n        flag &= check( CARDS( C.begin(), C.begin()+3 ) );\n        flag &= check( CARDS( C.begin()+3, C.begin()+6 ) );\n        flag &= check( CARDS( C.begin()+6, C.begin()+9 ) );\n        if ( flag ) return 1;\n    } while( next_permutation( C.begin(), C.end() ) );\n    return 0;\n}\n\nint main() {\n    int tests;\n    cin >> tests;\n    for ( int i = 0; i < tests; ++ i ) {\n        init();\n        input();\n        cout << solve() << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nint T,card[16];\n\nbool is_same_number( int a, int b, int c){\n  return a==b && b==c;\n}\n\nbool is_sequence( int a, int b, int c){\n  return a+2==b+1&&b+1==c;\n}\n\nbool is_good_set(int a,int b,int c){\n  return is_same_number(a, b, c) || is_sequence(a, b, c);\n}\n\nbool is_all_good_set(){\n  return is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]);\n}\n\nint win() {\n  sort(card,card+9);\n  do {\n    if (is_all_good_set()) return 1;\n  } while( next_permutation(card, card+9) );\n  return 0;\n}\n\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t) {\n    for (int i=0; i<9; ++i){\n      cin >> card[i];\n    }\n    string color;\n    for (int i=0; i<9; ++i){\n      cin >> color;\n      if(color == \"G\")card[i] += 10;\n      else if (color == \"B\") card[i] +=20;\n    }\n    int w=win();\n    cout << win() << w << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint T, card[10];\n\n\nbool is_same_number(int a, int b, int c){\n    if(a == b && a == c)    return true;\n    else return false;\n}//色数字ともに一致\n\nbool is_sequence(int a, int b, int c){\n    if(a+2 == c && b+1==c)  return true;\n    else return false;\n}//色一致で数字連番\n\nbool is_good_set(int a, int b, int c){\n    return (is_same_number(a, b, c) || is_sequence(a, b, c));\n}//どちらかがtrueならtrueを返す。\n\nbool is_all_good_set(){\n    if(is_good_set(card[0],card[1],card[2]) && is_good_set(card[3],card[4],card[5]) && is_good_set(card[6],card[7],card[8]))\n    return true;\n    else    return false;\n}//勝利状態にあるかの確認\n\nint win(){\n    sort(card, card+9);\n    do{\n        if(is_all_good_set())\n            return 1;   //cardが勝利状態にある。\n    }while(next_permutation(card, card+9));　//next_permutationは全ての組み合わせを昇順に出す関数\n    return 0;\n}\n\nint main(void){\n    cin >> T;\n    for(int t=0; t<T; t++){\n        for(int i=0; i<9; i++){\n            cin >> card[i];\n        }\n        string color;\n        for(int i=0; i<9; i++){\n            cin >> color;\n            if(color == \"G\")    card[i] += 10;\n            else if(color == \"B\")   card[i] += 20; //文字と数字それぞれ管理は面倒だから一括にする。\n        }\n        cout << win() << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntemplate<class T> inline bool amax (T &a, const T &b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool amin (T &a, const T &b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T> ostream& operator << (ostream &os, const vector<T> &v) { os << \"[\"; for (typename vector<T>::const_iterator it = v.begin(); it != v.end(); it++) { os << (it != v.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class T> ostream& operator << (ostream &os, const set<T> &s) { os << \"[\"; for (typename set<T>::const_iterator it = s.begin(); it != s.end(); it++) { os << (it != s.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class Key, class Val> ostream& operator << (ostream &os, const map<Key, Val> &m) { os << \"{\"; for (typename map<Key, Val>::const_iterator it = m.begin(); it != m.end(); it++) { os << (it != m.begin() ? \", \" : \"\") << it->first << \":\" << it->second; } os << \"}\"; return os; }\ntemplate<class T, class S> ostream& operator << (ostream &os, const pair<T, S> &p) { os << \"(\" << p.first << \", \" << p.second << \")\"; return os; }\ntemplate <class T> istream& operator >> (istream &is, vector<T> &v) { for (size_t i = 0; i < v.size(); i++) is >> v[i]; return is; }\ntemplate <class Target, class Source> inline Target lexical_cast (const Source &s) { Target t; stringstream ss; ss << s; ss >> t; return t; }\n\n//> v < ^ (clock wise)\nint dx[] = {1,0,-1,0};\nint dy[] = {0,1,0,-1};\nconst int INFI = 1<<28;\nconst long long int INFL = 1LL<<60;\nconst double INFD = 1e+300;\nconst float INFF = 1e+100;\nconst double EPS = 1e-8;\nconst long long int MOD = 1000000007;\n\nint solve ();\nint main () {\n    cout.setf(ios::fixed); cout.precision(10);\n    ios_base::sync_with_stdio(false);\n    solve();\n    return 0;\n}\n\nint solve () {\n    int T;\n    cin >> T;\n    while (T--) {\n        int table[27];\n        table['R'-'A'] = 0;\n        table['B'-'A'] = 1;\n        table['G'-'A'] = 2;\n        vector<pair<int,char>> card(9);\n        for (int i = 0; i < 9; i++) {\n            cin >> card[i].first;\n            card[i].first--;\n        }\n        for (int i = 0; i < 9; i++) cin >> card[i].second;\n        int exist[3][9] = {0};\n        for (int i = 0; i < 9; i++) {\n            int &a = exist[table[card[i].second-'A']][card[i].first];\n            a = (a+1)%3;\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 7; j++) {\n                if (exist[i][j] && exist[i][j+1] && exist[i][j+2]) {\n                    exist[i][j]--;\n                    exist[i][j+1]--;\n                    exist[i][j+2]--;\n                }\n            }\n        }\n        bool ng = false;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 9; j++) {\n                ng |= exist[i][j];\n            }\n        }\n        cout << !ng << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n\nusing namespace std;\nint T;\nint card[8];\nchar color;\nbool judge;\n\nint is_win();\nbool is_all_good_set();\nbool is_good_set(int, int, int);\nbool is_same_number(int,int, int);\nbool is_sequence(int, int, int);\n\nint main(){\n  while(cin >> T){\n    \n\n    for (int i = 0; i < 9; ++i){\n      cin >> card[i];      \n    }\n\n    for (int i = 0; i < 9; ++i){\n      cin >> color;\n      if(color == 'B') card[i] += 10;\n      else if (color == 'G') card[i] += 20;\n    }\n\n    cout << is_win() << endl;\n\n  }\n\nreturn 0;\n\n}\n\nint is_win(){\n\n  do{\n    if(is_all_good_set()) return 1;\n  } while (next_permutation(card, card+9));\n\n  return 0;\n}\n\nbool is_all_good_set(){\n\n  int judge;\n  for (int i = 0; i < 3; ++i)\n  {\n    judge += is_good_set(card[3*i], card[3*i+ 1], card[3*i + 2]);\n  }\n\n  if (judge == 3) return true;\n  else return false;\n}\n\n\nbool is_good_set(int a, int b, int c){\n\n   if(is_same_number(a,b,c) ||  is_sequence(a,b,c) ) return true;\n   else return false;\n\n}\n\nbool is_same_number(int a, int b, int c){\n\n  if(a == b == c) return true;\n  else return false;\n\n} \n\nbool is_sequence(int a, int b, int c){\n\n  if( a + 2 == b + 1 == c ) return true;\n  else return false ;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n\n#define RED\t\t0\t//RED \t: 1-9\n#define GREEN\t10\t//GREEN : 11-19\n#define BLUE\t20\t//BLUE\t: 21-29\n\n#define SENTINEL 50\n\nusing namespace std;\n\nint check_delete(vector<int> &card)\n{\n\tint set[3];\n\tint find_index = 1;\n\tset[0] = 0;\n\t//先頭に番兵があったら\n\tif (card[0] == SENTINEL) return -1;\n\t//同じ数字3つの場合を探索\n\tfor(int i=1; i<(int)card.size(); i++){\n\t\tif (card[i] == card[0]){\n\t\t\tset[find_index] = i;\n\t\t\tfind_index++;\n\t\t\tif (find_index == 3){\n\t\t\t\t//セットができたら全削除\n\t\t\t\tfor(int j=2; j>=0; j--){\n\t\t\t\t\tcard.erase(card.begin()+set[j]);\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\tfind_index = 1;\n\tset[0] = 0;\n\t//階段の3つの場合を探索\n\tfor(int i=1; i<(int)card.size(); i++){\n\t\tif (card[i] == card[0] + find_index){\n\t\t\tset[find_index] = i;\n\t\t\tfind_index++;\n\t\t\tif (find_index == 3){\n\t\t\t\t//セットができたら全削除\n\t\t\t\tfor(int j=2; j>=0; j--){\n\t\t\t\t\tcard.erase(card.begin()+set[j]);\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(void)\n{\n\tint T;\n\tcin >> T;\n\tfor(int i=0; i<T; i++){\n\t\tvector<int> card(10);\n\t\t//カードの番号入力\n\t\tfor(int j=0; j<9; j++){\n\t\t\tcin >> card[j];\n\t\t}\n\t\t//番兵を置く\n\t\tcard[9] = SENTINEL;\n\t\t//カードの色入力\n\t\tfor(int j=0; j<9; j++){\n\t\t\tchar color;\n\t\t\tcin >> color;\n\t\t\tswitch(color){\n\t\t\t\tcase 'R':\n\t\t\t\t\tcard[j] += RED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tcard[j] += GREEN;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tcard[j] += BLUE;\n\t\t\t}\n\t\t}\n\t\t//識別番号でソート\n\t\tsort(card.begin(), card.end());\n\t\t//組を作って消しまくる\n\t\twhile(check_delete(card) == 1);\n\t\t//出力\n\t\tif (card[0] == SENTINEL){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nbool sameColor(char x, char y, char z){\n  if(x == y && x == z && y == z) return true;\n  else return false;\n}\n\nbool isContinue(int x, int y, int z){\n  if(x == y-1 && y == z-1 && x == z-2 ||\n     x == y+1 && y == z+1 && x == z+2) return true;\n  else return false;\n}\n\nbool sameNumber(int x, int y, int z){\n  if(x == y && y == z && x == z) return true;\n  else return false;\n}\n\nint main(){\n  int n;\n  pair<char, int> rummy[9];\n  bool flag[9];\n  int B, G, R;\n  \n  cin >> n;\n  while(n--){\n    B = 0, G = 0, R = 0;\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < 9 ; i++) cin >> rummy[i].second;\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> rummy[i].first;\n      if(rummy[i].first == 'B') B++;\n      if(rummy[i].first == 'G') G++;\n      if(rummy[i].first == 'R') R++;\n    }\n    \n    if(B % 3 != 0 || G % 3 != 0 || R % 3 != 0){\n      cout << 0 << endl;\n      continue;\n    }\n\n      \n    sort(rummy, rummy+9);\n\n    /* \n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].second << ' ';\n    cout << endl;\n    for(int i = 0 ; i < 9 ; i++) cout << rummy[i].first << ' ';\n    cout << endl;\n */   \n    int cnt = 0;\n\n    for(int i = 0 ; i <= 7 ; i += 3){\n      if(sameColor(rummy[i].first, rummy[i+1].first, rummy[i+2].first)){\n\tif(isContinue(rummy[i].second, rummy[i+1].second, rummy[i+2].second) ||\n\t   sameNumber(rummy[i].second, rummy[i+1].second, rummy[i+2].second)){\n\t  cnt++;\n\t}\n      }\n    }\n    \n    if(cnt == 3) cout << 1 << endl;\n    else cout << 0 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntemplate<class T> inline bool amax (T &a, const T &b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool amin (T &a, const T &b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T> ostream& operator << (ostream &os, const vector<T> &v) { os << \"[\"; for (typename vector<T>::const_iterator it = v.begin(); it != v.end(); it++) { os << (it != v.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class T> ostream& operator << (ostream &os, const set<T> &s) { os << \"[\"; for (typename set<T>::const_iterator it = s.begin(); it != s.end(); it++) { os << (it != s.begin() ? \", \" : \"\") << *it; } os << \"]\"; return os; }\ntemplate<class Key, class Val> ostream& operator << (ostream &os, const map<Key, Val> &m) { os << \"{\"; for (typename map<Key, Val>::const_iterator it = m.begin(); it != m.end(); it++) { os << (it != m.begin() ? \", \" : \"\") << it->first << \":\" << it->second; } os << \"}\"; return os; }\ntemplate<class T, class S> ostream& operator << (ostream &os, const pair<T, S> &p) { os << \"(\" << p.first << \", \" << p.second << \")\"; return os; }\ntemplate <class T> istream& operator >> (istream &is, vector<T> &v) { for (size_t i = 0; i < v.size(); i++) is >> v[i]; return is; }\ntemplate <class Target, class Source> inline Target lexical_cast (const Source &s) { Target t; stringstream ss; ss << s; ss >> t; return t; }\n\n//> v < ^ (clock wise)\nint dx[] = {1,0,-1,0};\nint dy[] = {0,1,0,-1};\nconst int INFI = 1<<28;\nconst long long int INFL = 1LL<<60;\nconst double INFD = 1e+300;\nconst float INFF = 1e+100;\nconst double EPS = 1e-8;\nconst long long int MOD = 1000000007;\n\nint solve ();\nint main () {\n    cout.setf(ios::fixed); cout.precision(10);\n    ios_base::sync_with_stdio(false);\n    solve();\n    return 0;\n}\n\nint solve () {\n    int T;\n    cin >> T;\n    while (T--) {\n        int table[27];\n        table['R'-'A'] = 0;\n        table['B'-'A'] = 1;\n        table['G'-'A'] = 2;\n        vector<pair<int,char>> card(9);\n        for (int i = 0; i < 9; i++) {\n            cin >> card[i].first;\n            card[i].first--;\n        }\n        for (int i = 0; i < 9; i++) cin >> card[i].second;\n        int exist[3][9] = {0};\n        for (int i = 0; i < 9; i++) {\n            int &a = exist[table[card[i].second-'A']][card[i].first];\n            a = (a+1)%3;\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 7; j++) {\n                while(exist[i][j] && exist[i][j+1] && exist[i][j+2]) {\n                    exist[i][j]--;\n                    exist[i][j+1]--;\n                    exist[i][j+2]--;\n                }\n            }\n        }\n        bool ng = false;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 9; j++) {\n                ng |= exist[i][j];\n            }\n        }\n        cout << !ng << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint T, card[9];\nbool is_good_set(int a, int b, int c);\nbool is_same_number(int a, int b, int c);\nbool is_sequence(int a, int b, int c);\nbool is_all_good_set();\nbool win();\nint main(){\n  cin >> T;\n  for (int t=0; t<T; ++t){\n    for (int i=0; i<9; ++i){\n      cin >> card[i];\n      //      cout << card[i];\n    }\n    //    cout << endl;\n    string color;\n    for (int i=0; i<9; ++i){\n      cin >> color;\n      //      cout << color;\n      if (color == \"G\") card[i] += 10;\n      else if (color == \"B\") card[i] += 20;\n      //      cout << card[i];\n    }\n    cout << win() << endl;\n  }\n}\nbool is_good_set(int a, int b, int c){\n  return is_same_number(a,b,c) || is_sequence(a,b,c);\n}\nbool is_same_number(int a, int b, int c){\n  return (a==b)&&(b==c);\n}\nbool is_sequence(int a, int b, int c){\n  return ((a+2)==(b+1))&&((b+1)==c);\n}\nbool is_all_good_set(){\n  return is_good_set(card[0],card[1],card[2])\n    &&is_good_set(card[3],card[4],card[5])\n    &&is_good_set(card[6],card[7],card[8]);\n}\nbool win(){\n    sort(card, card+9);\n    bool win = false;\n    do {\n      if (is_all_good_set()) win = true;\n    } while(next_permutation(card,card+9));\n    return win;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint n[9];\nchar c[9];\nint a[9];\n\nbool is_consequence_number(int* p){\n    if(n[*p]==n[*(p+1)]+1&&n[*p]==n[*(p+2)]+2) return true;\n    else return false;\n}\n\nbool is_same_color(int* p){\n    if(c[*p]==c[*(p+1)]&&c[*p]==c[*(p+2)]) return true;\n    else return false;\n}\n\nbool is_same_number(int* p){\n    if(n[*p]==n[*(p+1)]&&n[*p]==n[*(p+2)]) return true;\n    else return false;\n}\n\nbool judge(){\n    for(int i=0;i<3;i++){\n        if(!(is_same_color(a+3*i)&&(is_same_number(a+3*i)||is_consequence_number(a+3*i)))) return false;\n    }\n    return true;\n}\n\nint solve(){\n    for(int i=0;i<9;i++) scanf(\"%d\",n+i);\n    for(int i=0;i<9;i++){\n        getchar();\n        c[i]=getchar();\n        a[i]=i;\n    }\n    do{if(judge()) return 1;}while(next_permutation(a,a+9));\n    for(int i=0;i<9;i++) printf(\"%d \",n[i]);\n    for(int i=0;i<9;i++) printf(\"%c \",c[i]);\n    return 0;\n}\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        printf(\"%d\\n\",solve());\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main(void) {\n  int n;\n  int num[9];\n  char color[9];\n  int flag1, flag2, flag3;\n\n  cin >> n;\n  for(int a = 0 ; a < n ; a++) {\n    flag1 = 0; flag2 = 0; flag3 = 0;\n    for(int i = 0 ; i < 9 ; i++) {\n      cin >> num[i];\n    }\n    for(int i = 0 ; i < 9 ; i++) {\n      cin >> color[i];\n    }\n  \n    sort(num, num+9);\n\n    for(int i = 0 ; i < 9 ; i += 3) {\n    if(num[i] == num[i+1] - 1 && num[i+1] == num[i+2] - 1 && \n       color[i] == color[i+1] && color[i+1] == color[i+2]) {\n      \n      if(i == 0) flag1 = 1;\n      else if(i == 3) flag2 = 1;\n      else if(i == 6) flag3 = 1;\n    }\n  \n    else if(num[i] == num[i+1] && num[i+1] == num[i+2] &&\n\t    color[i] == color[i+1] && color[i] == color[i+2] &&\n\t    color[i+1] == color[i+2]) {\n      if(i == 0) flag1 = 1;\n      else if(i == 3) flag2 = 1;\n      else if(i == 6) flag3 = 1;\n    }\n\n    else if(num[i] == num[i+1] && num[i+1] == num[i+2] &&\n\t    color[0] == color[3] && color[3] == color[6] &&\n\t    color[1] == color[4] && color[4] == color[7] &&\n\t    color[2] == color[5] && color[5] == color[8]) {\n      if(i == 0) flag1 = 1;\n      else if(i == 3) flag2 = 1;\n      else if(i == 6) flag3 = 1;\n    }\n\n    }\n    if(flag1 == 1 && flag2 == 1 && flag3 == 1) cout << \"1\" << endl;\n    else cout << \"0\" << endl;\n  }\n  return 0;\n}   "
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 30;\n\n\npair <int,char> card[9];\n\n\nbool iswin(void){\n\tint s=0;\n\tsort(card,card+9);\n\tdo{\n\t\tint rec=0;\n\t\trep(i,3){\n\t\t\tif(card[3*i].second==card[3*i+1].second&&card[3*i+1].second==card[3*i+2].second){\n\t\t\t\tif(card[3*i].first==card[3*i+1].first&&card[3*i+1].first==card[3*i+2].first)\n\t\t\t\t\trec++;\n\t\t\t\tif(card[3*i].first+1==card[3*i+1].first&&card[3*i+1].first+1==card[3*i+2].first)\n\t\t\t\t\trec++;\n\t\t\t}\n\t\t}\n\t\ts=max(s,rec);\n\t}while(next_permutation(card,card+9));\n\t\n\tif(s==3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n\nint main(void){\n\tint t;\n\tcin >> t;\n\trep(i,t){\n\t\trep(j,9) cin >> card[j].first;\n\t\trep(j,9) cin >> card[j].second;\t\n\t\tcout << iswin() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\ntypedef pair<char,int> P;\nint ans;\n\nvoid func(P p[], int cnt, vector<int> f){\n  if(cnt == 3) ans = 1;\n  for(int i=0;i<9;i++){\n    if(!f[i]){\n      f[i] = true;\n      for(int j=i+1;j<9;j++){\n        if(!f[j] && p[i].first == p[j].first){\n          if(p[i].second == p[j].second){\n            vector<int> f2 = f;\n            f2[j] = true;\n            for(int k=j+1;k<9;k++){\n              if(!f[k] && p[i].first == p[k].first && p[i].second == p[k].second){\n                f2[k] = true;\n                func(p,cnt+1,f2);\n              }\n            }\n          }\n          if(p[i].second + 1 == p[j].second){\n            vector<int> f2 = f;\n            f2[j] = true;\n            for(int k=j+1;k<9;k++){\n              if(!f[k] && p[i].first == p[k].first && p[i].second + 2 == p[k].second){\n                f2[k] = true;\n                func(p,cnt+1,f2);\n              }\n            }\n          }\n        }\n      }\n    }\n  }             \n}\n\nint main(){\n  int n;\n  cin >> n;\n  while(n--){\n    P p[9];\n    ans = 0;\n    for(int i=0;i<9;i++) cin >> p[i].second;\n    for(int i=0;i<9;i++) cin >> p[i].first;\n    sort(p,p+9);\n    vector<int> v(9,0);\n    func(p,0,v);\n\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nint sum(std::vector<int> a)\n{\n    int s = 0;\n    for (int i = 0; i < 9; i++) {\n        s += a.at(i);\n    }\n    return s;\n}\n\nint main()\n{\n    int n = 0;\n    std::vector<int> ans(9);\n    std::cin >> n;\n    std::vector<int> num(9);\n    std::string color;\n\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < 9; j++) {\n            std::cin >> num.at(j);\n        }\n        for (int k = 0; k < 9; k++) {\n            std::cin >> color;\n            if (color == \"R\") {\n                num.at(k) += 10;\n            } else if (color == \"G\") {\n                num.at(k) += 20;\n            } else {\n                num.at(k) += 30;\n            }\n        }\n        std::sort(num.begin(), num.end());\n        for (int j = 0; j < 9; j++) {\n            for (int k = j; k < 9; k++) {\n                for (int l = k; l < 9; l++) {\n                    if (num.at(j) == num.at(k) && num.at(j) == num.at(l)) {\n                        ans.at(j), ans.at(k), ans.at(l) = 1;\n                    } else if (num.at(j) + 1 == num.at(k) && num.at(j) + 2 == num.at(l)) {\n                        ans.at(j), ans.at(k), ans.at(l) = 1;\n                    }\n                }\n            }\n        }\n        if (sum(ans) == 9) {\n            std::cout << 1 << '\\n';\n            ans = {0, 0, 0, 0, 0, 0, 0, 0, 0};\n        } else {\n            std::cout << 0 << '\\n';\n        }\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n#define rep(i,n) for(int i=0; i<n; ++i)\ntypedef pair<int,char> card;\n\ncard a[9];\nint perm[9];\n\nint main() {\n    int tc,k;\n    string s;\n    cin>>tc;\n    while(tc--) {\n        rep(i,9) {\n            cin>>k;\n            a[i].first = k;\n        }\n\n        rep(i,9) {\n            cin>>s;\n            a[i].second = s[0];\n        }\n\n        rep(i,9) perm[i] = i;\n\n        int k = 0;\n        do {\n            // cout<<k<<endl;\n\n            if(a[perm[0]].second == a[perm[1]].second\n               && a[perm[1]].second == a[perm[2]].second\n               && a[perm[3]].second == a[perm[4]].second\n               && a[perm[4]].second == a[perm[5]].second\n               && a[perm[6]].second == a[perm[7]].second\n               && a[perm[7]].second == a[perm[8]].second) {\n\n                if(((a[perm[0]].first == a[perm[1]].first\n                    && a[perm[1]].first == a[perm[2]].first)\n                   || (a[perm[0]].first+1 == a[perm[1]].first\n                       && a[perm[1]].first == a[perm[2]].first-1))\n                   &&((a[perm[3]].first == a[perm[4]].first\n                    && a[perm[4]].first == a[perm[5]].first)\n                   || (a[perm[3]].first+1 == a[perm[4]].first\n                       && a[perm[4]].first == a[perm[5]].first-1))\n                   && ((a[perm[6]].first == a[perm[7]].first\n                    && a[perm[7]].first == a[perm[8]].first)\n                   || (a[perm[6]].first+1 == a[perm[7]].first\n                       && a[perm[7]].first == a[perm[8]].first-1))) {\n                    cout<<1<<endl;\n                    goto END;\n                }\n\n            }\n        NEXT:;\n            k++;\n        } while( next_permutation(perm, perm+9) );\n        cout<<0<<endl;\n    END:;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <deque>\n#include <algorithm>\nusing namespace std;\n\nstruct state{\n\tint a[9];\n\tint num;\n};\nint count(int a[9]){\n\tdeque<state> q;\n\tstate tmp, work;\n\tint ret=0, tmptimes;\n\tfor(int i=0;i<9;i++) tmp.a[i] = a[i];\n\ttmp.num=0;\n\tq.push_back(tmp);\n\twhile(!q.empty()){\n\t\ttmp = q.front();\n\t\tret = max(ret, tmp.num);\n\t\ttmptimes = tmp.num;\n\t\tfor(int i=0;i<9;i++){\n\t\t\twork.a[i] = tmp.a[i];\n\t\t\t//cout << work.a[i];\n\t\t}\n\t\t//cout << endl;\n\t\tq.pop_front();\n\t\tfor(int i=0;i<=7;i++){\n\t\t\tfor(int j=0;j<9;j++) work.a[j] = tmp.a[j];\n\t\t\twork.num = tmp.num;\n\t\t\tif(work.a[i] && work.a[i+1] && work.a[i+2]){\n\t\t\t\twork.a[i]--; work.a[i+1]--; work.a[i+2]--;\n\t\t\t\twork.num++;\n\t\t\t\tq.push_back(work);\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<=9;i++){\n\t\t\tfor(int j=0;j<9;j++) work.a[j] = tmp.a[j];\n\t\t\twork.num = tmp.num;\n\t\t\tif(work.a[i] >= 3){\n\t\t\t\twork.a[i] -= 3;\n\t\t\t\twork.num++;\n\t\t\t\tq.push_back(work);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main(void){\n\tint n;\n\t\n\tcin >> n;\n\twhile(n--){\n\t\tint R[9], G[9], B[9];\n\t\tint num[9];\n\t\tchar color[9];\n\t\tmemset(R, 0, sizeof(R));\n\t\tmemset(G, 0, sizeof(G));\n\t\tmemset(B, 0, sizeof(B));\n\t\t\n\t\tfor(int i=0;i<9;i++) cin >> num[i];\n\t\tfor(int i=0;i<9;i++) cin >> color[i];\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(color[i] == 'R'){\n\t\t\t\tR[num[i] - 1]++;\n\t\t\t}else if(color[i] == 'G'){\n\t\t\t\tG[num[i] - 1]++;\n\t\t\t}else{\n\t\t\t\tB[num[i] - 1]++;\n\t\t\t}\n\t\t}\n\t\tif(count(R) + count(G) + count(B) >= 3){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \n#define _overload(_1,_2,_3,name,...) name\n#define _rep(i,n) _range(i,0,n)\n#define _range(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define rep(...) _overload(__VA_ARGS__,_range,_rep,)(__VA_ARGS__)\n \n#define _rrep(i,n) _rrange(i,n,0)\n#define _rrange(i,a,b) for(int i=(int)(a)-1;i>=(int)(b);--i)\n#define rrep(...) _overload(__VA_ARGS__,_rrange,_rrep,)(__VA_ARGS__)\n \n#define _all(arg) begin(arg),end(arg)\n#define uniq(arg) sort(_all(arg)),(arg).erase(unique(_all(arg)),end(arg))\n#define getidx(ary,key) lower_bound(_all(ary),key)-begin(ary)\n#define clr(a,b) memset((a),(b),sizeof(a))\n#define bit(n) (1LL<<(n))\n \n// #define DEBUG\n \n#ifdef DEBUG\n    #define dump(...) fprintf(stderr, __VA_ARGS__)\n#else\n    #define dump(...)\n#endif\n \ntemplate<class T>bool chmax(T &a, const T &b) { return (a<b)?(a=b,1):0;}\ntemplate<class T>bool chmin(T &a, const T &b) { return (b<a)?(a=b,1):0;}\n \nusing namespace std;\nusing ll=long long;\nusing vi=vector<int>;\nusing vll=vector<ll>;\n \nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst ll inf =1LL << 62;\nconst ll mod=1000000007LL;\nconst int dx[4]={1,0,-1,0};\nconst int dy[4]={0,1,0,-1};\n \n \nll extgcd(ll a,ll b,ll& x,ll& y){x=1,y=0;ll g=a;if(b!=0) g=extgcd(b,a%b,y,x),y-=a/b*x;return g;}\nll ADD(const ll &a, const ll &b,const ll &mod) { return (a+b)%mod;}\nll SUB(const ll &a, const ll &b,const ll &mod) { return (a-b+mod)%mod;}\nll MUL(const ll &a, const ll &b,const ll &mod) { return (1LL*a*b)%mod;}\nll DIV(const ll &a, const ll &b,const ll &mod) {ll x,y; extgcd(b,mod,x,y);return MUL(a,(x+mod)%mod,mod);}\n \nrandom_device rd;\nmt19937 mt(rd());\nuniform_int_distribution<int> dice(1,6);\nuniform_real_distribution<double> score(0.0,10.0);\n\nconst int n = 9;\n\nint main(void){\n\tint T; cin >> T;\n\twhile(T--){\n\t\tvi num(n); for(auto & e : num) cin >> e;\n\t\tstring color;\n\t\trep(i, n){\n\t\t\tchar c; cin >> c;\n\t\t\tcolor.push_back(c);\n\t\t}\n\n\t\tvi card[3];\n\t\trep(i, n){\n\t\t\tint idx = color[i] == 'R' ? 0 : color[i] == 'G' ? 1 : 2;\n\t\t\tcard[idx].push_back(num[i]);\n\t\t}\n\n\t\trep(i, 3) sort(_all(card[i]));\n\n\t\tint res = 0;\n\t\trep(i, 3){\n\t\t\tvi & hand = card[i];\n\t\t\tint len = hand.size();\n\n\t\t\tvi cnt(15);\n\t\t\trep(i, len){\n\t\t\t\tcnt[hand[i]]++;\n\t\t\t}\n\n\t\t\trep(i, 10){\n\t\t\t\tres += cnt[i] / 3;\n\t\t\t\tcnt[i] %= 3;\n\n\t\t\t\twhile(cnt[i] >= 1 and cnt[i + 1] >= 1 and cnt[i + 2] >= 1){\n\t\t\t\t\tcnt[i]--, cnt[i + 1]--, cnt[i + 2]--;\n\t\t\t\t\tres++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tres = res == 3 ? 1 : 0;\n\t\tcout << res << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nbool IsSet(vector<int> x, size_t size)\n{\n  if (size == 3) {\n    if (x[0] == x[1] and x[1] == x[2]) {\n      return true;\n    }\n    if (x[0] + 1 == x[1] and x[1] + 1 == x[2]) {\n      return true;\n    }\n  }\n  else if (size == 6) {\n    vector<int> y(3), z(3);\n    bool flag = false;\n    for (int i = 0; i < 3; i++) {\n      y[i] = x[i];\n      z[i] = x[i + 3];\n    }\n    flag = IsSet(y, 3) and IsSet(z, 3);\n    if (flag) {\n      return true;\n    }\n    int r1, r2;\n    for (int i = 1; i < 6; i++) {\n      if (x[i] == x[0] + 1) {\n        flag = true;\n        r1 = i;\n      }\n    }\n    if (not flag) {\n      return false;\n    }\n    flag = false;\n    for (int i = 2; i < 6; i++) {\n      if (x[i] == x[0] + 2) {\n        flag = true;\n        r2 = i;\n      }\n    }\n    if (not flag) {\n      return false;\n    }\n    vector<int> copy(6);\n    for (int i = 0; i < 6; i++) {\n      copy[i] = x[i];\n    }\n    copy.erase(copy.begin() + r2);\n    copy.erase(copy.begin() + r1);\n    copy.erase(copy.begin());\n    flag = IsSet(copy, 3);\n    return flag;\n  }\n  else if (size == 9) {\n    vector<int> y(3), z(3), w(3);\n    bool flag = false;\n    for (int i = 0; i < 3; i++) {\n      y[i] = x[i];\n      z[i] = x[i + 3];\n      w[i] = x[i + 6];\n    }\n    flag = IsSet(y, 3) and IsSet(z, 3) and IsSet(w, 3);\n    if (flag) {\n      return true;\n    }\n    int r1, r2;\n    for (int i = 1; i < 9; i++) {\n      if (x[i] == x[0] + 1) {\n        flag = true;\n        r1 = i;\n      }\n    }\n    if (not flag) {\n      return false;\n    }\n    flag = false;\n    for (int i = 2; i < 9; i++) {\n      if (x[i] == x[0] + 2) {\n        flag = true;\n        r2 = i;\n      }\n    }\n    if (not flag) {\n      return false;\n    }\n    vector<int> copy(9);\n    for (int i = 0; i < 9; i++) {\n      copy[i] = x[i];\n    }\n    copy.erase(copy.begin() + r2);\n    copy.erase(copy.begin() + r1);\n    copy.erase(copy.begin());\n    flag = IsSet(copy, 6);\n    return flag;\n\n  }\n  return false;\n  \n}\n\nbool IsSets(vector<int> color)\n{\n  if (color.size() == 0) {\n    return true;\n  }\n  sort(color.begin(), color.end());\n  return IsSet(color, color.size());\n}\n\nint main()\n{\n  int t;\n  cin >> t;\n  for (int j = 0; j < t; j++) {\n    int num[9];\n    for (int i = 0; i < 9; i++) {\n      cin >> num[i];\n    }\n    char color[9];\n    for (int i = 0; i < 9; i++) {\n      cin >> color[i];\n    }\n    vector<int> red, green, blue;\n    for (int i = 0; i < 9; i++) {\n      if (color[i] == 'R') {\n        red.push_back(num[i]);\n      }\n      else if (color[i] == 'G') {\n        green.push_back(num[i]);\n      }\n      else if (color[i] == 'B') {\n        blue.push_back(num[i]);\n      }\n    }\n    if (red.size() % 3 != 0 or green.size() % 3 != 0 or blue.size() %3 != 0) {\n      cout << '0' << endl;\n      continue;\n    }\n\n    bool flag = true;\n    flag = IsSets(red);\n    if (flag == false) {\n      cout << '0' << endl;\n      continue;\n    }\n    flag = IsSets(green);\n    if (flag == false) {\n      cout << '0' << endl;\n      continue;\n    }\n    flag = IsSets(blue);\n    if (flag == false) {\n      cout << '0' << endl;\n      continue;\n    }\n\n    cout << '1' << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "Haskell",
    "code": "import Data.List\nmark = [\"R\", \"G\", \"B\"]\n\nf [] = True\nf a@(h:t) = (r1 && (f (a \\\\ [h,h,h]))) || (r2 && (f (a \\\\ [h,h+1,h+2])))\n  where\n    nh = length $ filter (== h) a\n    r1 = nh >= 3\n    r2 = (elem (h+1) a) && (elem (h+2) a)\n\ntst c =\n  let n = sort $ map snd c\n  in\n    f n\n\nans' c =\n  let cc = map (\\m -> filter (\\cc -> m == (fst cc)) c) mark\n      r  = and $ map tst cc\n  in\n    if r then 1 else 0\n\nans [] = []\nans (n:m:r) =\n  let n' = map read n :: [Int]\n      z  = zip m n'\n  in\n    (ans' z):(ans r)\n\nmain = do\n  _ <- getLine\n  c <- getContents\n  let i = map words $ lines c\n      o = ans i\n  mapM_ print o\n  \n\n"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative\nimport Control.Monad\nimport Data.List\nimport Data.Function (on, fix)\nimport Data.Bool (bool)\n\nmain :: IO ()\nmain = do\n  n <- readLn\n  replicateM n (solve <$> f <*> g) >>= mapM_ print\n  where\n    f = map read <$> words <$> getLine\n    g = map head <$> words <$> getLine\n\nsolve :: [Int] -> String -> Int\nsolve ns ss = bool 0 1 . all f . map (map snd) . groupBy ((==) `on` fst) . sort$ zip ss ns\n  where\n    f [] = True\n    f xs@(x:_) = [x,x+1,x+2] `intersect` xs == [x,x+1,x+2] && f (xs \\\\ [x,x+1,x+2]) ||\n                 [x,x,x] `isPrefixOf` xs && f (xs \\\\ [x,x,x])\n\n"
  },
  {
    "language": "C",
    "code": "int check(char a[12]){\n  int i=1;\n  for(;i<10;i++){\n    if(a[i]<0)return 0;\n    a[i]%=3;\n    if(a[i]>0){\n      if(a[i+1]-a[i]<0 || a[i+2]-a[i]<0)return 0;\n      a[i+1]-=a[i];a[i+2]-=a[i];a[i]=0;\n    }\n  }\n  return 1;\n}\n\nint rummy(){\n  char x[256][12];\n  int hai[9];\n  char color[9],c[256];\n  int i;\n\n  memset(x['R'],0,sizeof(x['R']));\n  memset(x['G'],0,sizeof(x['G']));\n  memset(x['B'],0,sizeof(x['B']));\n  memset(hai,0,sizeof(hai));\n  memset(color,0,sizeof(color));\n  memset(c,0,sizeof(c));\n\n  { //input\n    for(i=0;i<9;i++)scanf(\"%d\",hai+i); //ghaa! %d cannot be used with char array; hai has to be int array! What a shame!!! Thx K.Inaba.\n    for(i=0;i<9;i++)scanf(\" %c\",color+i);\n    for(i=0;i<9;i++){\n      x[color[i]][hai[i]]++;\n      c[color[i]]++;\n    }\n    if(c['R']%3!=0 || c['G']%3!=0 || c['B']%3!=0)return 0;\n  }\n\n  return check(x['R']) & check(x['G']) & check(x['B']);\n}\n\nint main(){\n  int i=0,n,x;\n  scanf(\"%d\",&n);\n  for(;i<n;i++){\n    x=rummy();\n    printf(x ? \"1\\n\" : \"0\\n\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\n#define N 9\n\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nbool is_set(int a, int b, int c) {\n  if (a == b && b == c) return true;\n  int array[] = {a, b, c};\n  qsort(array, 3, sizeof(int), cmpfunc);\n  if (array[2] - array[1] == 1 && array[1] - array[0] == 1) return true;\n  return false;\n}\n\nvoid array_remove3(int old_array[], int new_array[], int old_length, int a, int b, int c) {\n  int i, new_index = 0;\n  bool a_set = false, b_set = false, c_set = false;\n  int old_array_copy[old_length];\n\n  for (i = 0; i < old_length; i++) {\n    old_array_copy[i] = old_array[i];\n  }\n\n\n  \n  for (i = 0; i < old_length; i++) {\n    if (!a_set && old_array_copy[i] == a) {\n      old_array_copy[i] = -1;\n      a_set = true;\n    }\n    if (!b_set && old_array_copy[i] == b) {\n      old_array_copy[i] = -1;\n      b_set = true;\n    }\n    if (!c_set && old_array_copy[i] == c) {\n      old_array_copy[i] = -1;\n      c_set = true;\n    }\n  }\n  for (i = 0; i < old_length; i++) {\n    if (old_array_copy[i] != -1) {\n      new_array[new_index] = old_array_copy[i];\n      new_index++;\n    }\n  }\n \n\n\n}\n\n\n  \n  \n\nbool solve_backtrack(int array[], int array_length, bool reset) {\n  int i, j, k, l;\n  static bool solved = false;\n  if (reset) solved = false;\n  \n  if (array_length == 0) {\n    solved = true;\n    return true;\n  }\n  \n  for (i = 0; i < array_length; i++) {\n    for (j = i+1; j < array_length; j++) {\n      for (k = j+1; k < array_length; k++) {\n\t\n\tif (is_set(array[i], array[j], array[k])) {\n\t  //printf(\"set: i is %d, j is %d, k is %d\\n\", array[i], array[j], array[k]);\n\t  int new_length = array_length - 3;\n\t  if (new_length == 0) {\n\t    //printf(\"new length is 0\\n\");\n\t    solved = true;\n\t    return true;\n\t  }\n\t  int new_array[new_length];\n\t  array_remove3(array, new_array, array_length, array[i], array[j], array[k]);\n\t  \n\t   \n\t  // printf(\"new index is %d\\n\", new_index);\n\t  solve_backtrack(new_array, new_length, false);\n\t  \n\t}\n      }\n    }\n  }\n  return solved;\n}\n\t      \n\n\n\n\nint main(int argc, char *argv[])\n{\n\n  int entries;\n  int i, j;\n\n  fscanf(stdin, \"%d\", &entries);\n \n\n  \n  for (i = 0; i < entries; i++) {\n    int array[N], red[N], blue[N], green[N];\n    int red_n = 0, blue_n = 0, green_n = 0;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \"%d\", &array[j]);\n    }\n    char color;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \" %c\", &color);\n      if (color == 'R') {\n\tred[red_n] = array[j];\n\tred_n++;\n      } else if (color == 'B') {\n\tblue[blue_n] = array[j];\n\tblue_n++;\n      } else if (color == 'G') {\n\tgreen[green_n] = array[j];\n\tgreen_n++;\n      }\n    }\n    \n    if (red_n % 3 != 0 || blue_n % 3 != 0 || green_n % 3 != 0) {\n      printf(\"0\\n\");\n    } else if (solve_backtrack(red, red_n, true) && solve_backtrack(blue, blue_n, true) && solve_backtrack(green, green_n, true)) {\n      printf(\"1\\n\");\n    } else {\n      printf(\"0\\n\");\n    }\n  }\n  \n  \n \n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint a2102(char c[9][2]){\n  int d,e,i,j,k;\n\n  for(i=1;i<9;i++) if(c[0][1]!=c[i][1]) break;\n  if(i==9 && c[1][0]==c[0][0]+1 && c[2][0]==c[0][0]+1 &&\n     c[3][0]==c[0][0]+2 && c[4][0]==c[0][0]+2 && c[5][0]==c[0][0]+2 &&\n     c[6][0]==c[0][0]+3 && c[7][0]==c[0][0]+3 && c[8][0]==c[0][0]+4) return 3;\n    \n  for(d=0,i=0;i<3;i++){\n   if((c[i*3][1]==c[i*3+1][1] && c[i*3][1]==c[i*3+2][1]) &&\n     ((c[i*3][0]==c[i*3+1][0] && c[i*3][0]==c[i*3+2][0]) ||\n     (c[i*3][0]+1==c[i*3+1][0] && c[i*3][0]+2==c[i*3+2][0]))) d++;\n  }\n  if(d>=2) return d;\n  for(i=0;i<2;i++){\n    for(j=1;j<6;j++){\n      if(c[i*3+j][1]!=c[i*3][1]) break;\n    }\n    if(j==6 && (\n       (c[i*3+1][0]==c[i*3][0]+1 && c[i*3+2][0]==c[i*3][0]+1 &&\n        c[i*3+3][0]==c[i*3][0]+2 && c[i*3+4][0]==c[i*3][0]+2 && c[i*3+5][0]==c[i*3][0]+3) ||\n       (c[i*3+1][0]==c[i*3][0] && c[i*3+2][0]==c[i*3][0]+1 &&\n        c[i*3+3][0]==c[i*3][0]+1 && c[i*3+4][0]==c[i*3][0]+2 && c[i*3+5][0]==c[i*3][0]+2))) return 3;\n  }\n  for(i=0;i<3;i++){\n    if(c[i][1]==c[i+3][1] && c[i][1]==c[i+6][1] &&\n       c[i][0]+1==c[i+3][0] && c[i][0]+2==c[i+6][0]) d++;\n  }\n  return d;\n}\n\nvoid swap(char *a,char *b){\n  char c;\n  c=*a;\n  *a=*b;\n  *b=c;\n}\n\nint main(){\n  char c[9][2],c1,c2;\n  int d,i,j,k,l,n;\n\n  scanf(\"%d\\n\",&n);\n  for(i=0;i<n;i++){\n    for(j=0;j<2;j++){\n      for(k=0;k<9;k++){\n        c[k][j]=getchar();getchar();\n      }\n    }\n    for(j=0;j<8;j++){\n      for(k=j+1;k<9;k++){\n        if(c[j][1]<c[k][1]){\n          swap(&c[j][0],&c[k][0]);\n          swap(&c[j][1],&c[k][1]);\n        }\n        if(c[j][1]==c[k][1] && c[j][0]>c[k][0]){\n          swap(&c[j][0],&c[k][0]);\n          swap(&c[j][1],&c[k][1]);\n        }\n      }\n    }\n    printf(\"%d\\n\",a2102(c)/3);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void) {\n\tint d_num,d_cur;\n\tint card_num[3][10];\n\tint nums[9];\n\tchar colors[9][4];\n\tint i;\n\tint ok;\n\tscanf(\"%d\",&d_num);\n\tfor(d_cur=0;d_cur<d_num;d_cur++) {\n\t\tfor(i=0;i<9;i++)scanf(\"%d\",&nums[i]);\n\t\tfor(i=0;i<9;i++)scanf(\"%s\",colors[i]);\n\t\tfor(i=0;i<10;i++) {\n\t\t\tcard_num[0][i]=card_num[1][i]=card_num[2][i]=0;\n\t\t}\n\t\tfor(i=0;i<9;i++) {\n\t\t\tcard_num[colors[i][0]=='R'?0:colors[i][0]=='G'?1:2][nums[i]]++;\n\t\t}\n\t\tfor(i=2;i<10;i++) {\n\t\t\twhile(card_num[0][i-2] && card_num[0][i-1] && card_num[0][i]) {\n\t\t\t\tcard_num[0][i-2]--;card_num[0][i-1]--;card_num[0][i]--;\n\t\t\t}\n\t\t\twhile(card_num[1][i-2] && card_num[1][i-1] && card_num[1][i]) {\n\t\t\t\tcard_num[1][i-2]--;card_num[1][i-1]--;card_num[1][i]--;\n\t\t\t}\n\t\t\twhile(card_num[2][i-2] && card_num[2][i-1] && card_num[2][i]) {\n\t\t\t\tcard_num[2][i-2]--;card_num[2][i-1]--;card_num[2][i]--;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<10;i++) {\n\t\t\tcard_num[0][i]%=3;\n\t\t\tcard_num[1][i]%=3;\n\t\t\tcard_num[2][i]%=3;\n\t\t}\n\t\tok=1;\n\t\tfor(i=0;i<10;i++) {\n\t\t\tif(card_num[0][i])ok=0;\n\t\t\tif(card_num[1][i])ok=0;\n\t\t\tif(card_num[2][i])ok=0;\n\t\t}\n\t\tprintf(\"%d\\n\",ok);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n\tint n,i,j,k,s,a[9],r[9],g[9],b[9],rc,gc,bc,c;\n\tchar m;\n\tscanf(\"%d\",&n);\n\tfor(k=0;k<n;k++){\n\t\trc=gc=bc=c=0;\n\t\tfor(i=0;i<9;i++)scanf(\"%d\",&a[i]);\n\t\tfor(i=0;i<9;i++){\n\t\t\tscanf(\" %c\",&m);\n\t\t\tswitch(m){\n\t\t\tcase 'R':\n\t\t\t\tr[rc]=a[i];\n\t\t\t\trc++;\n\t\t\t\tbreak;\n\t\t\tcase 'G':\n\t\t\t\tg[gc]=a[i];\n\t\t\t\tgc++;\n\t\t\t\tbreak;\n\t\t\tcase 'B':\n\t\t\t\tb[bc]=a[i];\n\t\t\t\tbc++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(rc%3!=0||gc%3!=0||bc%3!=0)printf(\"0\\n\");\n\t\telse{\n\t\t\tfor(i=0;i<rc-1;i++){for(j=0;j<rc-1;j++){if(r[j]>r[j+1]){\n\t\t\t\t\t\ts=r[j];\n\t\t\t\t\t\tr[j]=r[j+1];\n\t\t\t\t\t\tr[j+1]=s;\n\t\t\t}}}\n\t\t\tfor(i=0;i<gc-1;i++){for(j=0;j<gc-1;j++){if(g[j]>g[j+1]){\n\t\t\t\t\t\ts=g[j];\n\t\t\t\t\t\tg[j]=g[j+1];\n\t\t\t\t\t\tg[j+1]=s;\n\t\t\t}}}\n\t\t\tfor(i=0;i<bc-1;i++){for(j=0;j<bc-1;j++){if(b[j]>b[j+1]){\n\t\t\t\t\t\ts=b[j];\n\t\t\t\t\t\tb[j]=b[j+1];\n\t\t\t\t\t\tb[j+1]=s;\n\t\t\t}}}\n\t\t\trc=rc/3;\n\t\t\tgc=gc/3;\n\t\t\tbc=bc/3;\n\t\t\tfor(i=0;i<rc;i++){\n\t\t\t\tif(r[i*3]==r[i*3+1]&&r[i*3]==r[i*3+2])c++;\n\t\t\t\telse if(r[i*3+1]-r[i*3]==1&&r[i*3+2]-r[i*3+1]==1)c++;\n\t\t\t}\n\t\t\tfor(i=0;i<gc;i++){\n\t\t\t\tif(g[i*3]==g[i*3+1]&&g[i*3]==g[i*3+2])c++;\n\t\t\t\telse if(g[i*3+1]-g[i*3]==1&&g[i*3+2]-g[i*3+1]==1)c++;\n\t\t\t}\n\t\t\tfor(i=0;i<bc;i++){\n\t\t\t\tif(b[i*3]==b[i*3+1]&&b[i*3]==b[i*3+2])c++;\n\t\t\t\telse if(b[i*3+1]-b[i*3]==1&&b[i*3+2]-b[i*3+1]==1)c++;\n\t\t\t}\n\t\t\tif(c==3)printf(\"1\\n\");\n\t\t\telse printf(\"0\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n\n\nint checkResult(int *mat,int mat_i);\n\nint main(void) {\n\n\t// Rummy\n\tint ds,ds_i;\n\tint num[9];\n\tchar col[10];\n\tint r[9],g[9],b[9];\n\tint ri,gi,bi;\n\tint i;\n\tint r_check,g_check,b_check;\n\n\t// ????????????????????°????????????\n\tscanf(\"%d\",&ds);\n\n\tfor(ds_i=0; ds_i<ds; ds_i++){\n\t// ?????????????????????????????????????????????\n\n\t\t// ?????????\n\t\tfor(i=0; i<9; i++){\n\t\t\tr[i]=0;\n\t\t\tg[i]=0;\n\t\t\tb[i]=0;\n\t\t}\n\t\tri=0;\n\t\tgi=0;\n\t\tbi=0;\n\n\t\t// ?????????????????????\n\t\tfor(i=0; i<9; i++){\tscanf(\"%d\",&num[i]);\t}\n\t\tfor(i=0; i<9; i++){\tscanf(\"%1s\",&col[i]);\t}\n\n\t\t// ????????????????????¨????????????????´?\n\t\tfor(i=0; i<9; i++){\n\t\t\tif(col[i]=='R'){\n\t\t\t\tr[ num[i]-1 ]++;\n\t\t\t\tri++;\n\t\t\t}else if(col[i]=='G'){\n\t\t\t\tg[ num[i]-1 ]++;\n\t\t\t\tgi++;\n\t\t\t}else if(col[i]=='B'){\n\t\t\t\tb[ num[i]-1 ]++;\n\t\t\t\tbi++;\n\t\t\t}\n\t\t}\n\n\t\t// ???(R)?????????\n\t\tr_check = checkResult(r,ri);\n\t\t// ???(G)?????????\n\t\tg_check = checkResult(g,gi);\n\t\t// ???(B)?????????\n\t\tb_check = checkResult(b,bi);\n\n\t\tif(r_check && g_check && b_check){\n\t\t\tprintf(\"1\\n\");\n\t\t}else{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n\n}\n\nint checkResult(int *mat,int mat_i){\n\tint result=1;\n\tint i,j,wk;\n\n\tif(mat_i%3!=0){\n\t\t// ??????????????£????????????????????????????????????????????????????????????\n\t\tresult = 0;\n\t}else if(0<mat_i){\n\t\tfor(i=0; i<7; i++){\n\t\t\tif(0<mat[i] && 0<mat[i+1] && 0<mat[i+2]){\n\t\t\t\twk = 10;\n\t\t\t\tfor(j=0; j<2; j++){\n\t\t\t\t\tif(mat[i+j] < wk){\n\t\t\t\t\t\twk=mat[i+j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmat[i+2]-=wk;\n\t\t\t\tmat[i+1]-=wk;\n\t\t\t\tmat[i]-=wk;\n\t\t\t}\n\t\t\tif(mat[i]==3){\n\t\t\t\tmat[i] = 0;\n\t\t\t}\n\t\t}\n\t\tfor(i=0; i<9; i++){\n\t\t\tif(mat[i]!=0){\n\t\t\t\tresult = 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<9; i++){\n\t\tprintf(\"%d \",mat[i]);\n\t}\n\tprintf(\"\\n\");\n\t\n\treturn result;\n}\n\t"
  },
  {
    "language": "C",
    "code": "\nint n;\nint n_cd[3][9];\nint n_cl[3];\nint n_set;\nint check();\nvoid rm_sets();\nint rm_id_sets(int, int);\nint rm_seq_sets(int);\n\nvoid dbg(){\n\tint i,j;\n\tfor(i = 0; i < 3; i++){\n\t\tprintf(\"------n_cl[%d]: %d\\n\", i, n_cl[i]);\n\t\tfor(j = 0; j < 9; j++){\n\t\t\tprintf(\"n_cd[%d][%d]: %d\\n\", i, j, n_cd[i][j]);\n\t\t}\n\t}\n}\n\nint main(){\n\tint i,j;\n\tchar c;\n\tint cd_in[9], cl_in[i];\n\t\n\tscanf(\"%d\", &n);\n\twhile(n--){\n\t\t//input\n\t\tfor(i = 0; i < 9; i++) scanf(\"%d\",&cd_in[i]);\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tcd_in[i]--;\n\t\t\tscanf(\" %c\", &c);\n\t\t\tif(c == 'R') cl_in[i] = 0;\n\t\t\telse if(c == 'G') cl_in[i] = 1;\n\t\t\telse cl_in[i] = 2;\n\t\t}\n\t\t//init\n\t\tfor(j = 0; j < 3; j++){\n\t\t\tn_cl[j] = 0;\n\t\t\tfor(i = 0; i < 9; i++)n_cd[j][i] = 0;\n\t\t}\n\t\tfor(i = 0; i < 9; i++){n_cd[ cl_in[i] ][ cd_in[i] ]++; n_cl[ cl_in[i] ]++;}\n\t\t\t\n\t\t//check\n\t\t\t//rm_seq_sets(2);\n\t\t\t//dbg();\n\t\tprintf(\"%d\\n\", check());\n\t}\n\t\n\treturn 0;\n}\n\t\nint check(){\n\tint result;\n\tint i,j,k,l;\n\tint bkup_n_cd[3][10], bkup_n_cl[3], bkup_n_set;\n\tn_set = 0;\n\tint trp_list[3];\n\tint n_trp;\n\tfor(i = 0; i < 3; i++){\n\t\tif(n_cl[i] == 0){;\n\t\t}else if(n_cl[i] == 3 || n_cl[i] == 6){rm_sets(i);\n\t\t}else if(n_cl[i] == 9){\n\t\t\t//listup triplication\n\t\t\tn_trp = 0;\n\t\t\tfor(j = 0; j < 9; j++){\n\t\t\t\tif(n_cd[i][j] >= 3){trp_list[n_trp++] = j;}\n\t\t\t}\n\t\t\t//backup\n\t\t\tfor(j = 0; j < 3; j++){\n\t\t\t\tbkup_n_cl[j] = n_cl[j];\n\t\t\t\tfor(k = 0; k < 9; k++){\n\t\t\t\t\tbkup_n_cd[j][k] = n_cd[j][k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tbkup_n_set = n_set;\n\t\t\tif(n_trp == 0){\n\t\t\t\trm_sets(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//try to remove triplication\n\t\t\tfor(j = 0; j < n_trp; j++){\n\t\t\t\t//recover\n\t\t\t\tfor(k = 0; k < 3; k++){\n\t\t\t\t\tn_cl[k] = bkup_n_cl[k];\n\t\t\t\t\tfor(l = 0; l < 9 ; l++){\n\t\t\t\t\t\tbkup_n_cd[k][l] = n_cd[k][l];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trm_id_sets(i, trp_list[j]);\n\t\t\t\trm_sets(i);\n\t\t\t\tif( n_set == 3) break;\n\t\t\t}\n\t\t}else{\n\t\t\t//falure\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = (n_set == 3)?1:0;\n\treturn result;\n}\n\nint rm_id_sets(int cl,  int num){\n\tint i, flag = 0;\n\tif(num = -1){\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tif(n_cd[cl][i] >= 3){\n\t\t\t\tn_cd[cl][i] -= 3;\n\t\t\t\tn_set++;\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tif(n_cd[cl][num] >= 3){\n\t\t\tn_cd[cl][num] -= 3;\n\t\t\tn_set++;\n\t\t\tflag = 1;\n\t\t}\n\t}\n\treturn flag;\n}\nint rm_seq_sets(int cl){\n\tint i, flag = 0;\n\tfor(i = 0; i < 7; i++){\n\t\tif(n_cd[cl][i] >= 1 && n_cd[cl][i+1] >= 1 && n_cd[cl][i+2] >= 1){\n\t\t\tn_cd[cl][i]--; n_cd[cl][i+1]--; n_cd[cl][i+2]--;\n\t\t\tn_set++;\n\t\t\tflag = 1;\n\t\t\ti = -1;\n\t\t}\n\t}\n\treturn flag;\n}\n\nvoid rm_sets(int cl){\n\trm_id_sets(cl, -1);\n\trm_seq_sets(cl);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nstruct Card{\n  int n;\n  char c;\n};\n\nint main(void){\n  int i,j,n,set;\n  struct Card x[9],tmp;\n\n  scanf(\"%d \",&n);\n  while(n--){\n    for(i=0;i<9;i++){\n      scanf(\"%d \",&x[i].n);\n    }\n    for(i=0;i<9;i++){\n      scanf(\"%c \",&x[i].c);\n    }\n\n    for(i=0;i<8;i++){\n      for(j=i+1;j<9;j++){\n\tif(x[i].c > x[j].c){\n\t  tmp = x[i];\n\t  x[i] = x[j];\n\t  x[j] = tmp;\n\t}\n\telse if(x[i].c == x[j].c && x[i].n > x[j].n){\n\t  tmp = x[i];\n\t  x[i] = x[j];\n\t  x[j] = tmp;\n\t}\n      }\n    }\n\n    set = 0;\n    for(i=0;i<9;i+=3){\n      if(x[i].c==x[i+1].c && x[i].c==x[i+2].c\n      &&(x[i].n==x[i+1].n && x[i].n==x[i+2].n\n      || x[i].n+1==x[i+1].n && x[i].n+2==x[i+2].n)){\n\tset++;\n      }\n    }\n    if(set == 3){\n      printf(\"1\\n\");\n    }\n    else{\n      printf(\"0\\n\");\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void){\n\n\tchar mark[9];\n\tint num[9], r_num[9], b_num[9], g_num[9], set, i, j;\n\t\n\tscanf(\"%d\", &set);\t/* ???????????°?????\\??? */\n\tint ans[set];\n\n\tfor(i = 0 ; i < 9 ; i++){\t/* ????????????????????? */\n\t\tr_num[i] = 0;\n\t\tg_num[i] = 0;\n\t\tb_num[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\n\t\tans[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\t/* ???????????°?????°????????? */\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tscanf(\"%d\", &num[j]);\n\t\t}\n\t\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\t\tif(j == 9){\n\t\t\t\t\tscanf(\"%c\", &mark[j]);\n\t\t\t\t}\n\t\telse{\n\t\t\tscanf(\" %c\", &mark[j]);\n\t\t}\n\t}\n\n\tfor(j = 0 ; j < 9 ; j++){\t\t/* ????????¨?????????????????? */\n\t\tif(mark[j] == 'R'){\n\t\t\tr_num[j] = num[j];\n\t}\n\t\t\telse if(mark[j] == 'G'){\n\t\t\t\tg_num[j] = num[j];\n\t\t\t}\n\t\t\telse if(mark[j] == 'B'){\n\t\t\t\tb_num[j] = num[j];\n\t\t\t}\n\t\t}\n\n\tsort(r_num);\t/* ??????????????? */\n\tsort(g_num);\t/* ??????????????? */\n\tsort(b_num);\t/* ??????????????? */\n\n\t\tif(judge(r_num) == 1 && judge(g_num) == 1 && judge(b_num) == 1){\t/* ???????????? */\n\t\t\tans[i] = 1;\n\t\t\t}\n\telse{\n\n\t\tans[i] = 0;\n\t}\n\n\t\tfor(j = 0 ; j < 9 ; j++){\t/* ????????????????????? */\n\t\t\tr_num[j] = 0;\n\t\t\tg_num[j] = 0;\n\t\t\tb_num[j] = 0;\n\t\t}\n\t}\n\n\t\tfor(i = 0 ; i < set ; i++){\n\t\t\tprintf(\"%d\", ans[i]);\n\t\t}\n\treturn 0;\n}\n\nvoid sort(int num[]){\n\n\tint p, q, tmp;\n\n\tfor(p = 0; p < 8; p++){\n\t\tfor(q = p + 1; q < 9; q++){\n\t\t\tif(num[p] > num[q]){\n\t\t\t\ttmp = num[p];\n\t\t\t\tnum[p] = num[q];\n\t\t\t\tnum[q] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}   \n\t}\n\nint judge(int num[]){\n\n\tint cnt = 0;\n\tint i, j, k;\n\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\t\t\t/* ???????????????0?????°??????????????? */\n\t\t}\n\t}\n\t\tif(cnt % 3 != 0){\t\t/* 0?????°???3????????°??§???????????°0????????? */\n\treturn 0;\n}\n\n\tfor(i = cnt; i < 9; i++){\t/* ???????????¶?????????????????????????????? */\n\t\tif(num[i] != 0){\n\t\t\tfor(j = cnt; j < 9; j++){\n\t\t\t\tif(num[j] != 0 && j != i){\n\t\t\t\t\tif(num[i] == num[j]){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[i] == num[k]){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(num[j] - num[i] == 1){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[k] - num[j] == 1){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt = 0;\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tif(num[i] == 0){\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tif(cnt == 9){\n\t\t\treturn 1;\n\t\t}\n\t\telse{\n\treturn 0;\n\t}\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2101\nTitle Rummy\n*/\n#include <stdio.h>\n// Select Below\n//#include <stdlib.h>\n//#include <string.h>\n//#include <float.h>\n//#include <math.h>\n//#include <limits.h>\n//Global data section\nint T;\nint hist[30];\nchar n[9],c[9];\n//\nint isAgari1(int nc)\n{\n  int i;\n\n  if(nc==0)\n    return(1);\n  for(i=1;i<=29;i++)\n    {\n      if(hist[i]==3)\n\t{\n\t  hist[i]-=3;\n\t  return(isAgari1(nc-3));\n\t}\n      if(hist[i] && hist[i+1] && hist [i+2])\n\t{\n\t  hist[i]--;\n\t  hist[i+1]--;\n\t  hist[i+2]--;\n\t  return(isAgari1(nc-3));\n\t}\n    }\n  return(0);\n}\nint isAgari()\n{\n  return(isAgari1(9));\n}\nint c2n(char c)\n{\n  if(c=='R')\n    return(0);\n  if(c=='G')\n    return(1);\n  if(c=='B')\n    return(2);\n  return(0);\n}\nmain()\n{\n  int i,j,ret;\n\n  scanf(\"%d\\n\",&T);\n  for(i=0;i<T;i++)\n    {\n      for(j=0;j<9;j++)\n\tscanf(\"%c \",&(n[j]));\n      for(j=0;j<9;j++)\n\tscanf(\"%c \",&(c[j]));\n      /*\n      for(j=0;j<9;j++)\n      printf(\"%d:\",c2n(c[j]));\n      printf(\"\\n\");\n      */\n\n      for(j=1;j<=29;j++)\n\thist[j]=0;\n      for(j=0;j<9;j++)\n\t{\n\t  int x=(n[j]-'0')+10*(c2n(c[j]));\n\t  //printf(\"%d %d;\",x,c2n(c[j]));\n\thist[(n[j]-'0')+10*(c2n(c[j]))]++;\n\n\t}\n      //for(j=1;j<=29;j++)\n      // printf(\"%d:\",hist[j]);\n\n      ret=isAgari();\n      printf(\"%d\\n\",ret);\n  }\n\n\n\n\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "/*\n * rummy.c\n *\n *  Created on: 2017/05/16\n *      Author: SS-76\n */\n \n#include <stdio.h>\n\nvoid handread(int * , int * , int *);\t\t\t//????????????????????????????????£???hand???????´?????????¢??°\n\nint judge1(int * , int * , int *);\nint judge2(int *);\n\nenum cardcolor{ RED , GREEN , BLUE };\n\nint main (void){\n\n\t/*?????????????´?????????????\n\t  0?????????????????????????¨??????°?????????????????????\n\t  1???9???????????????????????°???????????????????????°?????????????????????*/\n\tint handR[10] = {} ;\n\tint handG[10] = {} ;\n\tint handB[10] = {} ;\n\n\tint i = 0 ;\n\tint n = 0 ;\n\n\tscanf(\"%d\", &n);\n\n\tfor(i = 1 ; i <= n ; i++ ){\t\t\t\t\t//n?????°?????????\n\n\t\t/*?????????????????????????????????*/\n\t\thandread(handR,handG,handB);\n\n\t\t/*?????????????¨??????°????????????????????????*/\n\t\tif(judge1 (handR,handG,handB) ){\t\t//????????????1?????????????????????\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handR[0]){\t\t\t\t\t//???????????°???0??????????????????????????????\n\t\t\tif(judge2 (handR) ){\t\t//????????????1?????????????????????\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handG[0]){\n\t\t\tif(judge2 (handG) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handB[0]){\n\t\t\tif(judge2 (handB) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\tprintf(\"1\\n\");\n\n\t}//n?????°?????????????????????????????§\n\n\treturn 0 ;\n}\n/*\n * handread??¢??°???2????????????????????????????????????????????????????????????\n * ?????¨???????????¢???hand??????????????????hand?????????????????¨??????????????????\n */\nvoid handread(int *handR ,int *handG , int *handB){\n\tint cnum[9] = {} ;\t\t\t//???????????????????????°??????????????????\n\tchar color[9] = {} ;\t\t//??????????????????????????°???????????????\n\tint i = 0 ;\n\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tscanf(\"%d\", &cnum[i]);\n//\t\tprintf(\"%d\", cnum[i]);\n\t}\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tgetchar();\t\t\t\t//????????????????£???°???\n\t\tcolor[i] = getchar();\n//\t\tprintf(\"%c\", color[i]);\n\t}\n\n\tfor( i = 1 ; i <= 9 ; i++){\n\t\tswitch(color[i-1]){\n\t\tcase 'R':\n\t\t\thandR[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandR[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'G':\n\t\t\thandG[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandG[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'B':\n\t\t\thandB[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandB[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tdefault:\n\t\t\tprintf(\"wrong data\");\n\t\t\tbreak;\n\t\t}\n\t}//???????§????????????????????????§\n\n}\n\n\n/*judge1????????????????¨??????°?????????????????????*/\n/*????¨??????°???0,3,6,9???????????????????????£??????????????¨????????????????§??????§??????????????°???????????????????????¨????????????*/\n/*?????????????????????????§??????¢??°????????????????????§????????°??¬??\\????????????????????????????????????????????????????????????*/\nint judge1(int *handR,int *handG,int *handB){\n\n\tif( handR[0]%3 || handG[0]%3 ){\n\t\treturn 1 ;\t\t\t\t\t//???????????????????????°??????????????????1?????????\n\t}\n\treturn 0;\n}\n\n/*judge2???????????§?????????????§??????????????????????????????????????????????????????????*/\n/*?????????????????¨????????§????????°1?????????????????????????????¶???????????????????????°0????????????*/\nint judge2(int *hand){\n\tint i = 0 ;\n\n\t/*??????????????????????????????i???\n\t ????????¨???????????£?????????????????§??????????????????????????§???????°?????????°?????§??????*/\n\tfor( i = 1 ; i <= 7 ; i++){\n\t\tif(hand[i] < 0){\t\t//0???????°?????????¨?¨?????????¨??????\n\t\t\treturn 1 ;\t\t\t//?????????????§??????§??????????????????????????¨???????????????????????????????????????????????????\n\t\t}\n\t\tif(hand[i] >= 3 ){\n\t\t\thand[i] -= 3 ;\t\t//i???3?????\\????????£???????????°???????????????????????????3????????¨????????????????????????\n\t\t\thand[0] -= 3 ;\n\t\t}\n\t\tif(hand[i]){\t\t\t//??????i????????£???????????°?????£?????¨??????????????????????????°???????????????\n\t\t\thand[i+1] -= hand[i];\n\t\t\thand[i+2] -= hand[i];\n\t\t\thand[0] -= 3 * hand [i] ;\n\t\t\thand[i] = 0 ;\t\t//i,i+1,i+2???i????????°???????????????i+1,i+2????????°????¶???????????????°??????????????¨??????\n\t\t}\n\t/*???????????§???????????§????????£????????????????????????????????¨????????°?????????8???9*/\n\t/*6,7??????????????§??????????????????3?????¨????????????????§??????§??????????????°???????????????*/\n\t/*?????????7?????§?????£??????????????§8,9????????°??????????????£???????????´?????????????????????*/\n\t\tif(hand[8]%3 || hand[8]< 0|| hand[9]%3 || hand[9] < 0){\n\t\t\treturn 1 ;\n\t\t}\n\t}\n\n\t/*????????????????????§??°????????????????????????????????????????????????????????¶?????????????????????*/\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n//#define DEBUG\n//#define DEBUG1\n\nvoid handread(int * , int * , int *);\t\t\t//????????????????????????????????£???hand???????´?????????¢??°\n\nint judge1(int * , int * , int *);\nint judge2(int *);\nvoid judge0(int * , int * , int *);\n\n#ifdef DEBUG\nvoid showhand(int *);\t\t\t//???????¢??????¨ ?????????hand?????¶????????¨?????????\nvoid showall(int * , int * ,int *);\t\t//??¨??????hand?????¶????????????????????¨?????????\n#endif\n\nenum cardcolor{ RED , GREEN , BLUE };\n\nint main (void){\n\n\t/*?????????????´?????????????\n\t  0?????????????????????????¨??????°?????????????????????\n\t  1???9???????????????????????°???????????????????????°?????????????????????*/\n\n\tint i = 0 ;\n\tint n = 0 ;\n\n\tscanf(\"%d\", &n);\n\n\tfor(i = 1 ; i <= n ; i++ ){\t\t\t\t\t//n?????°?????????\n\n\t\tint handR[10] = {} ;\n\t\tint handG[10] = {} ;\n\t\tint handB[10] = {} ;\n\n\t\tjudge0(handR,handG,handB);\n\n\t}//n?????°?????????????????????????????§\n\n\treturn 0 ;\n}\n\n\n\n\n/*\n * handread??¢??°???2????????????????????????????????????????????????????????????\n * ?????¨???????????¢???hand??????????????????hand?????????????????¨??????????????????\n */\nvoid handread(int *handR ,int *handG , int *handB){\n\tint cnum[9] = {} ;\t\t\t//???????????????????????°??????????????????\n\tchar color[9] = {} ;\t\t//??????????????????????????°???????????????\n\tint i = 0 ;\n\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tscanf(\"%d\", &cnum[i]);\n//\t\tprintf(\"%d\", cnum[i]);\n\t}\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tgetchar();\t\t\t\t//????????????????£???°???\n\t\tcolor[i] = getchar();\n//\t\tprintf(\"%c\", color[i]);\n\t}\n\n\tfor( i = 1 ; i <= 9 ; i++){\n\t\tswitch(color[i-1]){\n\t\tcase 'R':\n\t\t\thandR[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandR[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'G':\n\t\t\thandG[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandG[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'B':\n\t\t\thandB[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandB[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tdefault:\n\t\t\tprintf(\"wrong data\");\n\t\t\tbreak;\n\t\t}\n\t}//???????§????????????????????????§\n\n}\n\n\n/*judge1????????????????¨??????°?????????????????????*/\n/*????¨??????°???0,3,6,9???????????????????????£??????????????¨????????????????§??????§??????????????°???????????????????????¨????????????*/\n/*?????????????????????????§??????¢??°????????????????????§????????°??¬??\\????????????????????????????????????????????????????????????*/\nint judge1(int *handR,int *handG,int *handB){\n\n\tif( handR[0]%3 || handG[0]%3 ){\n\t\treturn 1 ;\t\t\t\t\t//???????????????????????°??????????????????1?????????\n\t}\n\treturn 0;\n}\n\n/*judge2???????????§?????????????§??????????????????????????????????????????????????????????*/\n/*?????????????????¨????????§????????°1?????????????????????????????¶???????????????????????°0????????????*/\nint judge2(int *hand){\n\tint i = 0 ;\n\n#ifdef DEBUG1\n\t\tprintf(\"????????¶???\\n\");\n\t\tshowhand(hand);\n#endif\n\n\t/*??????????????????????????????i???\n\t ????????¨???????????£?????????????????§??????????????????????????§???????°?????????°?????§??????*/\n\tfor( i = 1 ; i <= 7 ; i++){\n\t\tif(hand[i] < 0){\t\t//0???????°?????????¨?¨?????????¨??????\n\t\t\treturn 1 ;\t\t\t//?????????????§??????§??????????????????????????¨???????????????????????????????????????????????????\n\t\t}\n\t\tif(hand[i] >= 3 ){\n\t\t\thand[i] -= 3 ;\t\t//i???3?????\\????????£???????????°???????????????????????????3????????¨????????????????????????\n\t\t\thand[0] -= 3 ;\n\t\t}\n\t\tif(hand[i]){\t\t\t//??????i????????£???????????°?????£?????¨??????????????????????????°???????????????\n\t\t\thand[i+1] -= hand[i];\n\t\t\thand[i+2] -= hand[i];\n\t\t\thand[0] -= 3 * hand [i] ;\n\t\t\thand[i] = 0 ;\t\t//i,i+1,i+2???i????????°???????????????i+1,i+2????????°????¶???????????????°??????????????¨??????\n\t\t}\n#ifdef DEBUG1\n\t\tprintf(\"%d???????????????????????????\\n\",i);\n\t\tshowhand(hand);\n#endif\n\t/*???????????§???????????§????????£????????????????????????????????¨????????°?????????8???9*/\n\t/*6,7??????????????§??????????????????3?????¨????????????????§??????§??????????????°???????????????*/\n\t/*?????????7?????§?????£??????????????§8,9????????°??????????????£???????????´?????????????????????*/\n\t\tif(hand[8]%3 || hand[8]< 0|| hand[9]%3 || hand[9] < 0){\n\t\t\treturn 1 ;\n\t\t}\n\t}\n\n\t/*????????????????????§??°????????????????????????????????????????????????????????¶?????????????????????*/\n\treturn 0;\n}\n\nvoid judge0(int *handR , int *handG , int *handB){\n\n\t/*?????????????????????????????????*/\n\thandread(handR,handG,handB);\n\n#ifdef DEBUG\n\tshowall(handR,handG,handB);\n#endif\n\n\t/*?????????????¨??????°????????????????????????*/\n\tif(judge1 (handR,handG,handB) ){\t\t//????????????1?????????????????????\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\n\t/*?????????????????§?????????????§??????§???????????????*/\n\tif(handR[0]){\t\t\t\t\t//???????????°???0??????????????????????????????\n\t\tif(judge2 (handR) ){\t\t//????????????1?????????????????????\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn;\n\t\t}\n\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t/*?????????????????§?????????????§??????§???????????????*/\n\tif(handG[0]){\n\t\tif(judge2 (handG) ){\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn;\n\t\t}\n\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t/*?????????????????§?????????????§??????§???????????????*/\n\tif(handB[0]){\n\t\tif(judge2 (handB) ){\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn;\n\t\t}\n\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\tprintf(\"1\\n\");\n\treturn;\n\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint card[3][10];\n\nvoid format_card(void);\nint check(void);\n\nint main(void) {\n\tchar color[10];\n\tint value[9];\n\tint i, j, num, flag = 0;\n\tscanf(\"%d\", &num);\t\t\t\t\t\t\t\t\t\t//データセット数の取得\n\tgetchar();\t\t\t\t\t\t\t\t\t\t\t\t//改行の読み飛ばし\n\tif (num < 0) { num = 0; }\t\t\t\t\t\t\t\t//下限値のチェック\n\tif (num > 50) { num = 50; }\t\t\t\t\t\t\t\t//上限値のチェック\n\tfor (i = 0; i < num; i++) {\n\t\tformat_card();\t\t\t\t\t\t\t\t\t\t//配列の初期化\n\t\tscanf(\"%d%d%d%d%d%d%d%d%d\", &value[0], &value[1], &value[2], &value[3], &value[4], &value[5], &value[6], &value[7], &value[8]);\n\t\tgetchar();\n\t\tscanf(\"%c %c %c %c %c %c %c %c %c\", &color[0], &color[1], &color[2], &color[3], &color[4], &color[5], &color[6], &color[7], &color[8]);\n\t\tgetchar();\n\t\tfor (j = 0; j < 9; j++) {\t\t\t\t\t\t\t//配列へ格納\n\t\t\tswitch (color[j]) {\n\t\t\tcase 'R':\n\t\t\t\tcard[0][value[j] - 1] ++;\n\t\t\t\tbreak;\n\t\t\tcase 'G':\n\t\t\t\tcard[1][value[j] - 1] ++;\n\t\t\t\tbreak;\n\t\t\tcase 'B':\n\t\t\t\tcard[2][value[j] - 1] ++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tflag = check();\n\t\tif (flag == 3) {\n\t\t\tprintf(\"1\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n\nint check(void) {\n\tint i, j, flag = 0;\n\tfor (i = 0; i < 3; i++) {\t\t\t\t\t\t\t//オーバーのチェック\n\t\tfor (j = 0; j < 9; j++) {\n\t\t\tif (card[i][j] > 4) {\n\t\t\t\tcard[i][j] = 4;\n\t\t\t\tflag++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (i = 0; i < 3; i++) {\t\t\t\t\t\t\t//連番のチェック\n\t\tj = 0;\n\t\tdo {\n\t\t\tif (card[i][j] > 0 && card[i][j + 1] > 0 && card[i][j + 2] > 0) {\n\t\t\t\tcard[i][j]--, card[i][j + 1]--, card[i][j + 2]--;\n\t\t\t\tflag++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tj++;\t\t\t\t\t\t\t\t\t//連番が無い場合は次へ\n\t\t\t}\n\t\t} while (j < 9 - 2);\n\t}\n\tfor (i = 0; i < 3; i++) {\t\t\t\t\t\t\t//同数のチェック\n\t\tfor (j = 0; j < 9; j++) {\n\t\t\tif (card[i][j] > 2) {\n\t\t\t\tcard[i][j] -= 3;\n\t\t\t\tflag++;\n\t\t\t}\n\t\t}\n\t}\n\treturn flag;\n}\nvoid format_card(void) {\n\tint i, j;\n\tfor (i = 0; i < 3; i++) {\n\t\tfor (j = 0; j < 9; j++) {\n\t\t\tcard[i][j] = 0;\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\n#define N 9\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nbool is_set(int a, int b, int c) {\n  if (a == b && b == c) return true;\n  int array[] = {a, b, c};\n  qsort(array, 3, sizeof(int), cmpfunc);\n  if (array[2] - array[1] == 1 && array[1] - array[0] == 1) return true;\n  return false;\n}\n\nvoid array_remove3(int old_array[], int new_array[], int old_length, int a, int b, int c) {\n  int i, new_index = 0;\n  bool a_set = false, b_set = false, c_set = false;\n  int old_array_copy[old_length];\n\n  for (i = 0; i < old_length; i++) {\n    old_array_copy[i] = old_array[i];\n  }\n\n  for (i = 0; i < old_length; i++) {\n    if (!a_set && old_array[i] == a) {\n      a_set = true;\n      continue;\n    }\n    if (!b_set && old_array[i] == b) {\n      b_set = true;\n      continue;\n    }\n    if (!c_set && old_array[i] == c) {\n      c_set = true;\n      continue;\n    }\n    new_array[new_index] = old_array[i];\n    new_index++;\n  } \n}\n\nbool solve_backtrack(int array[], int array_length, bool reset) {\n  int i, j, k, l;\n  static bool solved = false;\n  if (reset) solved = false;\n  if (array_length == 0) {\n    solved = true;\n    return true;\n  }\n  \n  for (i = 0; i < array_length; i++) {\n    for (j = i+1; j < array_length; j++) {\n      for (k = j+1; k < array_length; k++) {\n\tif (is_set(array[i], array[j], array[k])) {\n\t  //printf(\"set: i is %d, j is %d, k is %d\\n\", array[i], array[j], array[k]);\n\t  int new_length = array_length - 3;\n\t  if (new_length == 0) {\n\t    solved = true;\n\t    return true;\n\t  }\n\t  int new_array[new_length];\n\t  array_remove3(array, new_array, array_length, array[i], array[j], array[k]);  \n\t\n\t  solve_backtrack(new_array, new_length, false);\n\t  \n\t}\n      }\n    }\n  }\n  return solved;\n}\n\t \nint main(int argc, char *argv[])\n{\n  int entries;\n  int i, j;\n\n  fscanf(stdin, \"%d\", &entries);\n\n  for (i = 0; i < entries; i++) {\n    int array[N], red[N], blue[N], green[N];\n    int red_n = 0, blue_n = 0, green_n = 0;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \"%d\", &array[j]);\n    }\n    char color;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \" %c\", &color);\n      if (color == 'R') {\n\tred[red_n] = array[j];\n\tred_n++;\n      } else if (color == 'B') {\n\tblue[blue_n] = array[j];\n\tblue_n++;\n      } else if (color == 'G') {\n\tgreen[green_n] = array[j];\n\tgreen_n++;\n      }\n    }\n    \n    if (red_n % 3 != 0 || blue_n % 3 != 0 || green_n % 3 != 0) {\n      printf(\"0\\n\");\n    } else if (solve_backtrack(red, red_n, true) && solve_backtrack(blue, blue_n, true) && solve_backtrack(green, green_n, true)) {\n      printf(\"1\\n\");\n    } else {\n      printf(\"0\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\nint main()\n{\n    int number[9];\n\tint color[9];\n\tint cards[3][9];\n\tint i,j,k,n;\n\tint zero=0;\n\tchar ch;\n\t\n    scanf(\"%d\",&n);\n    \n    for(k=0;k<n;k++){\n        \n        //初期化\n        for(i=0;i<3;i++){\n\t\t    for(j=0;j<9;j++){\n\t\t\t    cards[i][j]=0;\n\t\t    \tnumber[j]=0;\n\t\t\t    color[j]=0;\n\t    \t}\n    \t}\n\n\t//カードを読み込む\n\t    for(i=0;i<9;i++){\n\t\t    scanf(\"%d \",&number[i]);\n\t\t     color[i]=0;\n    \t}\n\t    for(i=0;i<9;i++){\n\t    \tscanf(\"%c \",&ch);\n\t\t    if(ch=='R'){\n\t\t    \tcolor[i]=0;\n\t\t    }\n\t\t    else if(ch=='G'){\n\t\t    \tcolor[i]=1;\n\t    \t}\n\t\t    else if(ch=='B'){\n\t\t\t    color[i]=2;\n\t    \t}\n    \t}\n\t\n    \tfor(i=0;i<9;i++){\n\t\t    if(color[i]==0){\n\t\t    //\tcards[0][i]=number[i];\n\t            cards[0][number[i]-1]++;\n\t    \t}\n\t\t    if(color[i]==1){\n\t//\t\t    cards[1][i]=number[i];\n\t             cards[1][number[i]-1]++;\n\t    \t}\n\t    \tif(color[i]==2){\n\t//\t    \tcards[2][i]=number[i];\n\t            cards[2][number[i]-1]++;\n\t    \t}\n    \t}\n\n        \n        //所持している枚数\n        /*    \t\n    \tfor(i=0;i<3;i++){\n\t    \tfor(j=0;j<9;j++){\n\t    \t\tprintf(\"%d\",cards[i][j]);\n\t    \t}\n\t\tprintf(\"\\n\");\n    \t}*/\n    \t\n\t//同じ色で三枚とも同じセットがあるとき\n    \tfor(i=0;i<3;i++){\n\t      for(j=0;j<9;j++){\n\t        if(cards[i][j]>=3){\n\t            cards[i][j] -= 3;\n\t        }\n\t     }\n    \t}\n\t\n    \tfor(i=0;i<3;i++){\n            for(j=0;j<8;j++){\n                //2セットの連番があるとき\n                if(cards[i][j] >= 2 && cards[i][j+1] >=2 && cards[i][j+2] >= 2){\n                    cards[i][j] -= 2;\n\t                cards[i][j+1] -= 2;\n\t                cards[i][j+2] -=2;\n                }\n                //1セットの連番があるとき\n                else if(cards[i][j] >= 1 && cards[i][j+1] >= 1 && cards[i][j+2] >= 1){\n\t                cards[i][j]--;\n\t                cards[i][j+1]--;\n\t                cards[i][j+2]--;\n\t        }\n\t    }\n\t}\n\t\n\t//セット作った後のカード所持数\n\t/*\n\t    for(i=0;i<3;i++){\n\t\t    for(j=0;j<9;j++){\n\t\t    \tprintf(\"%d\",cards[i][j]);\n\t    \t}\n\t    \tprintf(\"\\n\");\n\t}\n*/\n\t//所持しているカードはないか確認\n    \tfor(i=0;i<3;i++){\n\t    \tfor(j=0;j<9;j++){\n    \t\tif(cards[i][j]==0) zero++;\n\t\t}\n\t}\n\t//手札が無いなら１、残ったなら０である\n\tif(zero==27){\n\t    printf(\"1\\n\");\n\t}else{\n\t    printf(\"0\\n\");\n\t}\n\tzero=0;\n    }\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void)\n{\n\tint card[3][9]={0};\n\tint tmp[9],ntmp;\n\tint kekka[100]={0};\n\tchar mark;\n\tint n,i,j,k,l,m;\n\tint Rc=0,Gc=0,Bc=0,hantei;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<9;j++){\n\t\t\tscanf(\"%d\",&tmp[j]);\n\t\t}\n\t\tfor(k=0;k<9;k++){\n\t\t\tscanf(\" %c\",&mark);\n\t\t\tswitch(mark){\n\t\t\t\tcase 'R' :\n\t\t\t\t\tcard[0][Rc]=tmp[k];\n\t\t\t\t\t//printf(\"R%d \",card[0][Rc]);\n\t\t\t\t\tRc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G' :\n\t\t\t\t\tcard[1][Gc]=tmp[k];\n\t\t\t\t\t//printf(\"G%d \",card[1][Gc]);\n\t\t\t\t\tGc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B' :\n\t\t\t\t\tcard[2][Bc]=tmp[k];\n\t\t\t\t\t//printf(\"B%d \",card[2][Bc]);\n\t\t\t\t\tBc++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor(m=0;m<3;m++){\n\t\t  for (j=0; j<9; ++j) {\n\t\t    for (k=j+1; k<9; ++k) {\n\t\t      if (card[m][j] > card[m][k]&&card[m][k]!=0) {\n\t\t        ntmp =  card[m][j];\n\t\t        card[m][j] = card[m][k];\n\t\t        card[m][k] = ntmp;\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t}\n\t\tif(Rc%3==0&&Gc%3==0&&Bc%3==0){\n\t\t\tfor(k=0;k<3;k++){\n\t\t\t\tfor (j=0; j<9; j+=3) {\n\t\t\t\t\tif(((card[k][j]==card[k][j+1]-1)&&(card[k][j]==card[k][j+2]-2))||(card[k][j]==card[k][j+1])&&(card[k][j]==card[k][j+2])){\n\t\t\t\t\t\t/*????????¶????????£?????????????????°???????????????*/\n\t\t\t\t\t\tif(card[k][j]!=0||card[k][j+1]!=0||card[k][j+2]!=0) hantei++;;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(hantei>=3){\n\t\t\t\tkekka[i]=1;\n\t\t\t}else if(hantei<3){\n\t\t\t\tkekka[i]=0;\n\t\t\t}\n\t\t\thantei=0;\n\t\t}else{\n\t\t\tkekka[i]=0;\n\t\t}\n\t}\n\nprintf(\"\\n\");\nfor(i=0;i<n;i++){\n\tprintf(\"%d\\n\",kekka[i]);\n}\n\n\n\n\t\n\treturn 0;\n}\n\n/*\n???????????????????????? 9????????? 1???9 4?????????\n?????????9??????????????????\n???????????????1?????¨?????????1??????????????????\n???1*3??????123???1?????????\n???1*2???1???0?????????  ?????????????????¨??\n\n\n?????????¨?????????\n????????????§?????????%3??§????????????\n?°?????????????????????????\n??°????????????\n\n\n\n\n*/"
  },
  {
    "language": "C",
    "code": "/*\n * rummy.c\n *\n *  Created on: 2017/05/16\n *      Author: SS-76\n */\n \n#include <stdio.h>\n//#define DEBUG\n//#define DEBUG1\n\nvoid handread(int * , int * , int *);\t\t\t//????????????????????????????????£???hand???????´?????????¢??°\n\nint judge1(int * , int * , int *);\nint judge2(int *);\n\n#ifdef DEBUG\nvoid showhand(int *);\t\t\t//???????¢??????¨ ?????????hand?????¶????????¨?????????\nvoid showall(int * , int * ,int *);\t\t//??¨??????hand?????¶????????????????????¨?????????\n#endif\n\nenum cardcolor{ RED , GREEN , BLUE };\n\nint main (void){\n\n\t/*?????????????´?????????????\n\t  0?????????????????????????¨??????°?????????????????????\n\t  1???9???????????????????????°???????????????????????°?????????????????????*/\n\tint handR[10] = {} ;\n\tint handG[10] = {} ;\n\tint handB[10] = {} ;\n\n\tint i = 0 ;\n\tint n = 0 ;\n\n\tscanf(\"%d\", &n);\n\n\tfor(i = 1 ; i <= n ; i++ ){\t\t\t\t\t//n?????°?????????\n\n\t\t/*?????????????????????????????????*/\n\t\thandread(handR,handG,handB);\n\n#ifdef DEBUG\n\t\tprintf(\"??¨???????????????????????¶???\\n\");\n\t\tshowall(handR,handG,handB);\n#endif\n\n\t\t/*?????????????¨??????°????????????????????????*/\n\t\tif(judge1 (handR,handG,handB) ){\t\t//????????????1?????????????????????\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handR[0]){\t\t\t\t\t//???????????°???0??????????????????????????????\n\t\t\tif(judge2 (handR) ){\t\t//????????????1?????????????????????\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handG[0]){\n\t\t\tif(judge2 (handG) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handB[0]){\n\t\t\tif(judge2 (handB) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\tprintf(\"1\\n\");\n\n\t}//n?????°?????????????????????????????§\n\n\treturn 0 ;\n}\n/*\n * handread??¢??°???2????????????????????????????????????????????????????????????\n * ?????¨???????????¢???hand??????????????????hand?????????????????¨??????????????????\n */\nvoid handread(int *handR ,int *handG , int *handB){\n\tint cnum[9] = {} ;\t\t\t//???????????????????????°??????????????????\n\tchar color[9] = {} ;\t\t//??????????????????????????°???????????????\n\tint i = 0 ;\n\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tscanf(\"%d\", &cnum[i]);\n//\t\tprintf(\"%d\", cnum[i]);\n\t}\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tgetchar();\t\t\t\t//????????????????£???°???\n\t\tcolor[i] = getchar();\n//\t\tprintf(\"%c\", color[i]);\n\t}\n\n\tfor( i = 1 ; i <= 9 ; i++){\n\t\tswitch(color[i-1]){\n\t\tcase 'R':\n\t\t\thandR[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandR[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'G':\n\t\t\thandG[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandG[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'B':\n\t\t\thandB[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandB[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tdefault:\n\t\t\tprintf(\"wrong data\");\n\t\t\tbreak;\n\t\t}\n\t}//???????§????????????????????????§\n\n}\n\n\n/*judge1????????????????¨??????°?????????????????????*/\n/*????¨??????°???0,3,6,9???????????????????????£??????????????¨????????????????§??????§??????????????°???????????????????????¨????????????*/\n/*?????????????????????????§??????¢??°????????????????????§????????°??¬??\\????????????????????????????????????????????????????????????*/\nint judge1(int *handR,int *handG,int *handB){\n\n\tif( handR[0]%3 || handG[0]%3 ){\n\t\treturn 1 ;\t\t\t\t\t//???????????????????????°??????????????????1?????????\n\t}\n\treturn 0;\n}\n\n/*judge2???????????§?????????????§??????????????????????????????????????????????????????????*/\n/*?????????????????¨????????§????????°1?????????????????????????????¶???????????????????????°0????????????*/\nint judge2(int *hand){\n\tint i = 0 ;\n\n#ifdef DEBUG\n\t\tprintf(\"????????¶???\\n\");\n\t\tshowhand(hand);\n#endif\n\n\t/*??????????????????????????????i???\n\t ????????¨???????????£?????????????????§??????????????????????????§???????°?????????°?????§??????*/\n\tfor( i = 1 ; i <= 7 ; i++){\n\t\tif(hand[i] < 0){\t\t//0???????°?????????¨?¨?????????¨??????\n\t\t\treturn 1 ;\t\t\t//?????????????§??????§??????????????????????????¨???????????????????????????????????????????????????\n\t\t}\n\t\tif(hand[i] >= 3 ){\n\t\t\thand[i] -= 3 ;\t\t//i???3?????\\????????£???????????°???????????????????????????3????????¨????????????????????????\n\t\t\thand[0] -= 3 ;\n\t\t}\n\t\tif(hand[i]){\t\t\t//??????i????????£???????????°?????£?????¨??????????????????????????°???????????????\n\t\t\thand[i+1] -= hand[i];\n\t\t\thand[i+2] -= hand[i];\n\t\t\thand[0] -= 3 * hand [i] ;\n\t\t\thand[i] = 0 ;\t\t//i,i+1,i+2???i????????°???????????????i+1,i+2????????°????¶???????????????°??????????????¨??????\n\t\t}\n#ifdef DEBUG\n\t\tprintf(\"%d???????????????????????????\\n\",i);\n\t\tshowhand(hand);\n#endif\n\t/*???????????§???????????§????????£????????????????????????????????¨????????°?????????8???9*/\n\t/*6,7??????????????§??????????????????3?????¨????????????????§??????§??????????????°???????????????*/\n\t/*?????????7?????§?????£??????????????§8,9????????°??????????????£???????????´?????????????????????*/\n\t\tif(hand[8]%3 || hand[8]< 0|| hand[9]%3 || hand[9] < 0){\n\t\t\treturn 1 ;\n\t\t}\n\t}\n\n\t/*????????????????????§??°????????????????????????????????????????????????????????¶?????????????????????*/\n\treturn 0;\n}\n\n#ifdef DEBUG\nvoid showhand(int *hand){\n\tint i = 0;\n\n\tfor(i = 0 ; i <= 9 ; i++){\n\t\tprintf(\"%d\", hand[i]);\n\t}\n\tprintf(\"\\n\");\n}\n\nvoid showall(int *handR,int *handG,int *handB){\n\tprintf(\"##123456789\\nR\");\n\tshowhand(handR);\n\tprintf(\"G\");\n\tshowhand(handG);\n\tprintf(\"B\");\n\tshowhand(handB);\n}\n\n#endif"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void){\n\n\tchar mark[9];\n\tint num[9], r_num[9], b_num[9], g_num[9], set, i, j;\n\t\n\tscanf(\"%d\", &set);\t/* ???????????°?????\\??? */\n\tint ans[set];\n\n\tfor(i = 0 ; i < 9 ; i++){\t/* ????????????????????? */\n\t\tr_num[i] = 0;\n\t\tg_num[i] = 0;\n\t\tb_num[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\n\t\tans[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\t/* ???????????°?????°????????? */\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tscanf(\"%d\", &num[j]);\n\t\t}\t\t\t\t\t\t  \n\t\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\t\tif(j == 9){\n\t\t\t\t\tscanf(\"%c\", &mark[j]);\n\t\t\t\t}\n\t\telse{\n\t\t\tscanf(\" %c\", &mark[j]);\n\t\t}\n\t}\n\n\tfor(j = 0 ; j < 9 ; j++){\t\t/* ????????¨?????????????????? */\n\t\tif(mark[j] == 'R'){\n\t\t\tr_num[j] = num[j];\n\t}\n\t\t\telse if(mark[j] == 'G'){\n\t\t\t\tg_num[j] = num[j];\n\t\t\t}\n\t\t\telse if(mark[j] == 'B'){\n\t\t\t\tb_num[j] = num[j];\n\t\t\t}\n\t\t}\n\n\tsort(r_num);\t/* ??????????????? */\n\tsort(g_num);\t/* ??????????????? */\n\tsort(b_num);\t/* ??????????????? */\n\n\t\tif(judge(r_num) == 1 && judge(g_num) == 1 && judge(b_num) == 1){\t/* ???????????? */\n\t\t\tans[i] = 1;\n\t\t\t}\n\telse{\n\n\t\tans[i] = 0;\n\t}\n\n\t\tfor(j = 0 ; j < 9 ; j++){\t/* ????????????????????? */\n\t\t\tr_num[j] = 0;\n\t\t\tg_num[j] = 0;\n\t\t\tb_num[j] = 0;\n\t\t}\n\t}\n\n\t\tfor(i = 0 ; i < set ; i++){\n\t\t\tprintf(\"%d\", ans[i]);\n\t\t}\n\treturn 0;\n}\n\nvoid sort(int num[]){\n\n\tint p, q, tmp;\n\n\tfor(p = 0; p < 8; p++){\n\t\tfor(q = p + 1; q < 9; q++){\n\t\t\tif(num[p] > num[q]){\n\t\t\t\ttmp = num[p];\n\t\t\t\tnum[p] = num[q];\n\t\t\t\tnum[q] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}   \n\t}\n\nint judge(int num[]){\n\n\tint cnt = 0;\n\tint i, j, k;\n\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\t\t\t/* ???????????????0?????°??????????????? */\n\t\t}\n\t}\n\t\tif(cnt % 3 != 0){\t\t/* 0?????°???3????????°??§???????????°0????????? */\n\treturn 0;\n}\n\n\tfor(i = cnt; i < 9; i++){\t/* ???????????¶?????????????????????????????? */\n\t\tif(num[i] != 0){\n\t\t\tfor(j = cnt; j < 9; j++){\n\t\t\t\tif(num[j] != 0 && j != i){\n\t\t\t\t\tif(num[i] == num[j]){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[i] == num[k]){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(num[j] - num[i] == 1){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[k] - num[j] == 1){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt = 0;\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tif(num[i] == 0){\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\t\tif(cnt == 9){\n\t\t\t\treturn 1;\n\t\t\t}\n\telse{\n\treturn 0;\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void)\n{\n\tint card[3][9]={0};\n\tint tmp[9],ntmp;\n\tchar mark;\n\tint n,i,j,k;\n\tint Rc=0,Gc=0,Bc=0,hantei;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<9;j++){\n\t\t\tscanf(\"%d\",&tmp[j]);\n\t\t}\n\t\tfor(k=0;k<9;k++){\n\t\t\tscanf(\" %c\",&mark);\n\t\t\tswitch(mark){\n\t\t\t\tcase 'R' :\n\t\t\t\t\tcard[0][Rc]=tmp[k];\n\t\t\t\t\t//printf(\"R%d \",card[0][Rc]);\n\t\t\t\t\tRc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G' :\n\t\t\t\t\tcard[1][Gc]=tmp[k];\n\t\t\t\t\t//printf(\"G%d \",card[1][Gc]);\n\t\t\t\t\tGc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B' :\n\t\t\t\t\tcard[2][Bc]=tmp[k];\n\t\t\t\t\t//printf(\"B%d \",card[2][Bc]);\n\t\t\t\t\tBc++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n/*????????????*/\nfor(i=0;i<3;i++){\n  for (j=0; j<9; ++j) {\n    for (k=j+1; k<9; ++k) {\n      if (card[i][j] > card[i][k]&&card[i][k]!=0) {\n        ntmp =  card[i][j];\n        card[i][j] = card[i][k];\n        card[i][k] = ntmp;\n      }\n    }\n  }\n}\n/*???????????°??¨\nfor(i=0;i<3;i++){\n\tfor (j=0; j<9; ++j) {\n\t\tprintf(\"%d\",card[i][j]);\n\t}\n}\n*/\nprintf(\"\\n\");\n\tfor(k=0;k<n;k++){\n\t\tif(Rc%3==0&&Gc%3==0&&Bc%3==0){\n\t\t\tfor(i=0;i<3;i++){\n\t\t\t\tfor (j=0; j<9; j+=3) {\n\t\t\t\t\tif(((card[i][j]==card[i][j+1]-1)&&(card[i][j]==card[i][j+2]-2))||(card[i][j]==card[i][j+1])&&(card[i][j]==card[i][j+2])){\n\t\t\t\t\t\t/*????????¶????????£?????????????????°???????????????*/\n\t\t\t\t\t\tif(card[i][j]!=0||card[i][j+1]!=0||card[i][j+2]!=0) hantei++;;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(hantei>=3){\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t}else if(hantei<3){printf(\"0\\n\");}\n\t\t\thantei=0;\n\t\t}else{\n\t\t\tprintf(\"5\\n\");\n\t\t}\n\t}\n\n\n\t\n\treturn 0;\n}\n\n/*\n???????????????????????? 9????????? 1???9 4?????????\n?????????9??????????????????\n???????????????1?????¨?????????1??????????????????\n???1*3??????123???1?????????\n???1*2???1???0?????????  ?????????????????¨??\n\n\n?????????¨?????????\n????????????§?????????%3??§????????????\n?°?????????????????????????\n??°????????????\n\n\n\n\n*/"
  },
  {
    "language": "C",
    "code": "/*\n * rummy.c\n *\n *  Created on: 2017/05/16\n *      Author: SS-76\n */\n \n#include <stdio.h>\n\nvoid handread(int * , int * , int *);\t\t\t//????????????????????????????????£???hand???????´?????????¢??°\n\nint judge1(int * , int * , int *);\nint judge2(int *);\n\nenum cardcolor{ RED , GREEN , BLUE };\n\nint main (void){\n\n\t/*?????????????´?????????????\n\t  0?????????????????????????¨??????°?????????????????????\n\t  1???9???????????????????????°???????????????????????°?????????????????????*/\n\tint handR[10] = {} ;\n\tint handG[10] = {} ;\n\tint handB[10] = {} ;\n\n\tint i = 0 ;\n\tint n = 0 ;\n\n\tscanf(\"%d\", &n);\n\n\tfor(i = 1 ; i <= n ; i++ ){\t\t\t\t\t//n?????°?????????\n\n\t\t/*?????????????????????????????????*/\n\t\thandread(handR,handG,handB);\n\n\t\t/*?????????????¨??????°????????????????????????*/\n\t\tif(judge1 (handR,handG,handB) ){\t\t//????????????1?????????????????????\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handR[0]){\t\t\t\t\t//???????????°???0??????????????????????????????\n\t\t\tif(judge2 (handR) ){\t\t//????????????1?????????????????????\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handG[0]){\n\t\t\tif(judge2 (handG) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handB[0]){\n\t\t\tif(judge2 (handB) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\tprintf(\"1\\n\");\n\n\t}//n?????°?????????????????????????????§\n\n\treturn 0 ;\n}\n/*\n * handread??¢??°???2????????????????????????????????????????????????????????????\n * ?????¨???????????¢???hand??????????????????hand?????????????????¨??????????????????\n */\nvoid handread(int *handR ,int *handG , int *handB){\n\tint cnum[9] = {} ;\t\t\t//???????????????????????°??????????????????\n\tchar color[9] = {} ;\t\t//??????????????????????????°???????????????\n\tint i = 0 ;\n\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tscanf(\"%d\", &cnum[i]);\n//\t\tprintf(\"%d\", cnum[i]);\n\t}\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tgetchar();\t\t\t\t//????????????????£???°???\n\t\tcolor[i] = getchar();\n//\t\tprintf(\"%c\", color[i]);\n\t}\n\n\tfor( i = 1 ; i <= 9 ; i++){\n\t\tswitch(color[i-1]){\n\t\tcase 'R':\n\t\t\thandR[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandR[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'G':\n\t\t\thandG[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandG[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'B':\n\t\t\thandB[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandB[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tdefault:\n\t\t\tprintf(\"wrong data\");\n\t\t\tbreak;\n\t\t}\n\t}//???????§????????????????????????§\n\n}\n\n\n/*judge1????????????????¨??????°?????????????????????*/\n/*????¨??????°???0,3,6,9???????????????????????£??????????????¨????????????????§??????§??????????????°???????????????????????¨????????????*/\n/*?????????????????????????§??????¢??°????????????????????§????????°??¬??\\????????????????????????????????????????????????????????????*/\nint judge1(int *handR,int *handG,int *handB){\n\n\tif( handR[0]%3 || handG[0]%3 ){\n\t\treturn 1 ;\t\t\t\t\t//???????????????????????°??????????????????1?????????\n\t}\n\treturn 0;\n}\n\n/*judge2???????????§?????????????§??????????????????????????????????????????????????????????*/\n/*?????????????????¨????????§????????°1?????????????????????????????¶???????????????????????°0????????????*/\nint judge2(int *hand){\n\tint i = 0 ;\n\n\t/*??????????????????????????????i???\n\t ????????¨???????????£?????????????????§??????????????????????????§???????°?????????°?????§??????*/\n\tfor( i = 1 ; i <= 7 ; i++){\n\t\tif(hand[i] < 0){\t\t//0???????°?????????¨?¨?????????¨??????\n\t\t\treturn 1 ;\t\t\t//?????????????§??????§??????????????????????????¨???????????????????????????????????????????????????\n\t\t}\n\t\tif(hand[i] >= 3 ){\n\t\t\thand[i] -= 3 ;\t\t//i???3?????\\????????£???????????°???????????????????????????3????????¨????????????????????????\n\t\t\thand[0] -= 3 ;\n\t\t}\n\t\tif(hand[i]){\t\t\t//??????i????????£???????????°?????£?????¨??????????????????????????°???????????????\n\t\t\thand[i+1] -= hand[i];\n\t\t\thand[i+2] -= hand[i];\n\t\t\thand[0] -= 3 * hand [i] ;\n\t\t\thand[i] = 0 ;\t\t//i,i+1,i+2???i????????°???????????????i+1,i+2????????°????¶???????????????°??????????????¨??????\n\t\t}\n\t/*???????????§???????????§????????£????????????????????????????????¨????????°?????????8???9*/\n\t/*6,7??????????????§??????????????????3?????¨????????????????§??????§??????????????°???????????????*/\n\t/*?????????7?????§?????£??????????????§8,9????????°??????????????£???????????´?????????????????????*/\n\t\tif(hand[8]%3 || hand[8]< 0|| hand[9]%3 || hand[9] < 0){\n\t\t\treturn 1 ;\n\t\t}\n\t}\n\n\t/*????????????????????§??°????????????????????????????????????????????????????????¶?????????????????????*/\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n//#define DEBUG\n//#define DEBUG1\n\nvoid handread(int * , int * , int *);\t\t\t//????????????????????????????????£???hand???????´?????????¢??°\n\nint judge1(int * , int * , int *);\nint judge2(int *);\nvoid judge0(int * , int * , int *);\n\n#ifdef DEBUG\nvoid showhand(int *);\t\t\t//???????¢??????¨ ?????????hand?????¶????????¨?????????\nvoid showall(int * , int * ,int *);\t\t//??¨??????hand?????¶????????????????????¨?????????\n#endif\n\nenum cardcolor{ RED , GREEN , BLUE };\n\nint main (void){\n\n\t/*?????????????´?????????????\n\t  0?????????????????????????¨??????°?????????????????????\n\t  1???9???????????????????????°???????????????????????°?????????????????????*/\n\n\tint i = 0 ;\n\tint n = 0 ;\n\n\tscanf(\"%d\", &n);\n\n\tfor(i = 1 ; i <= n ; i++ ){\t\t\t\t\t//n?????°?????????\n\n\t\tint handR[10] = {} ;\n\t\tint handG[10] = {} ;\n\t\tint handB[10] = {} ;\n\n\t\tjudge0(handR,handG,handB);\n\n\t}//n?????°?????????????????????????????§\n\n\treturn 0 ;\n}\n\n\n\n\n/*\n * handread??¢??°???2????????????????????????????????????????????????????????????\n * ?????¨???????????¢???hand??????????????????hand?????????????????¨??????????????????\n */\nvoid handread(int *handR ,int *handG , int *handB){\n\tint cnum[9] = {} ;\t\t\t//???????????????????????°??????????????????\n\tchar color[9] = {} ;\t\t//??????????????????????????°???????????????\n\tint i = 0 ;\n\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tscanf(\"%d\", &cnum[i]);\n//\t\tprintf(\"%d\", cnum[i]);\n\t}\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tgetchar();\t\t\t\t//????????????????£???°???\n\t\tcolor[i] = getchar();\n//\t\tprintf(\"%c\", color[i]);\n\t}\n\n\tfor( i = 1 ; i <= 9 ; i++){\n\t\tswitch(color[i-1]){\n\t\tcase 'R':\n\t\t\thandR[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandR[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'G':\n\t\t\thandG[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandG[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'B':\n\t\t\thandB[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandB[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tdefault:\n\t\t\tprintf(\"wrong data\");\n\t\t\tbreak;\n\t\t}\n\t}//???????§????????????????????????§\n\n}\n\n\n/*judge1????????????????¨??????°?????????????????????*/\n/*????¨??????°???0,3,6,9???????????????????????£??????????????¨????????????????§??????§??????????????°???????????????????????¨????????????*/\n/*?????????????????????????§??????¢??°????????????????????§????????°??¬??\\????????????????????????????????????????????????????????????*/\nint judge1(int *handR,int *handG,int *handB){\n\n\tif( handR[0]%3 || handG[0]%3 ){\n\t\treturn 1 ;\t\t\t\t\t//???????????????????????°??????????????????1?????????\n\t}\n\treturn 0;\n}\n\n/*judge2???????????§?????????????§??????????????????????????????????????????????????????????*/\n/*?????????????????¨????????§????????°1?????????????????????????????¶???????????????????????°0????????????*/\nint judge2(int *hand){\n\tint i = 0 ;\n\n#ifdef DEBUG1\n\t\tprintf(\"????????¶???\\n\");\n\t\tshowhand(hand);\n#endif\n\n\t/*??????????????????????????????i???\n\t ????????¨???????????£?????????????????§??????????????????????????§???????°?????????°?????§??????*/\n\tfor( i = 1 ; i <= 7 ; i++){\n#ifdef DEBUG1\n\t\tprintf(\"%d???????????????????????????\\n\",i);\n\t\tshowhand(hand);\n#endif\n\t\tif(hand[i] < 0){\t\t//0???????°?????????¨?¨?????????¨??????\n\t\t\treturn 1 ;\t\t\t//?????????????§??????§??????????????????????????¨???????????????????????????????????????????????????\n\t\t}\n\t\tif(hand[i] >= 3 ){\n\t\t\thand[i] -= 3 ;\t\t//i???3?????\\????????£???????????°???????????????????????????3????????¨????????????????????????\n\t\t\thand[0] -= 3 ;\n\t\t}\n\t\tif(hand[i]){\t\t\t//??????i????????£???????????°?????£?????¨??????????????????????????°???????????????\n\t\t\thand[i+1] -= hand[i];\n\t\t\thand[i+2] -= hand[i];\n\t\t\thand[0] -= 3 * hand [i] ;\n\t\t\thand[i] = 0 ;\t\t//i,i+1,i+2???i????????°???????????????i+1,i+2????????°????¶???????????????°??????????????¨??????\n\t\t}\n#ifdef DEBUG1\n\t\tprintf(\"%d???????????????????????????\\n\",i);\n\t\tshowhand(hand);\n#endif\n\n\t}//1???7???????????????????????§\n\n\t/*???????????§???????????§????????£????????????????????????????????¨????????°?????????8???9*/\n\t/*6,7??????????????§??????????????????3?????¨????????????????§??????§??????????????°???????????????*/\n\t/*?????????7?????§?????£??????????????§8,9????????°??????????????£???????????´?????????????????????*/\n\t\tif(hand[8]%3 || hand[8]< 0|| hand[9]%3 || hand[9] < 0){\n\t\t\treturn 1 ;\n\t\t}\n\n\n\t/*????????????????????§??°????????????????????????????????????????????????????????¶?????????????????????*/\n\treturn 0;\n}\n\nvoid judge0(int *handR , int *handG , int *handB){\n\n\t/*?????????????????????????????????*/\n\thandread(handR,handG,handB);\n\n#ifdef DEBUG\n\tshowall(handR,handG,handB);\n#endif\n\n\t/*?????????????¨??????°????????????????????????*/\n\tif(judge1 (handR,handG,handB) ){\t\t//????????????1?????????????????????\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\n\t/*?????????????????§?????????????§??????§???????????????*/\n\tif(handR[0]){\t\t\t\t\t//???????????°???0??????????????????????????????\n\t\tif(judge2 (handR) ){\t\t//????????????1?????????????????????\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn;\n\t\t}\n\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t/*?????????????????§?????????????§??????§???????????????*/\n\tif(handG[0]){\n\t\tif(judge2 (handG) ){\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn;\n\t\t}\n\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t/*?????????????????§?????????????§??????§???????????????*/\n\tif(handB[0]){\n\t\tif(judge2 (handB) ){\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn;\n\t\t}\n\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\tprintf(\"1\\n\");\n\treturn;\n\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void)\n{\n\tint card[3][9]={0};\n\tint tmp[9],ntmp;\n\tchar mark;\n\tint n,i,j,k;\n\tint Rc=0,Gc=0,Bc=0,hantei;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<9;j++){\n\t\t\tscanf(\"%d\",&tmp[j]);\n\t\t}\n\t\tfor(k=0;k<9;k++){\n\t\t\tscanf(\" %c\",&mark);\n\t\t\tswitch(mark){\n\t\t\t\tcase 'R' :\n\t\t\t\t\tcard[0][Rc]=tmp[k];\n\t\t\t\t\t//printf(\"R%d \",card[0][Rc]);\n\t\t\t\t\tRc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G' :\n\t\t\t\t\tcard[1][Gc]=tmp[k];\n\t\t\t\t\t//printf(\"G%d \",card[1][Gc]);\n\t\t\t\t\tGc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B' :\n\t\t\t\t\tcard[2][Bc]=tmp[k];\n\t\t\t\t\t//printf(\"B%d \",card[2][Bc]);\n\t\t\t\t\tBc++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n/*????????????*/\nfor(i=0;i<3;i++){\n  for (j=0; j<9; ++j) {\n    for (k=j+1; k<9; ++k) {\n      if (card[i][j] > card[i][k]&&card[i][k]!=0) {\n        ntmp =  card[i][j];\n        card[i][j] = card[i][k];\n        card[i][k] = ntmp;\n      }\n    }\n  }\n}\n/*???????????°??¨\nfor(i=0;i<3;i++){\n\tfor (j=0; j<9; ++j) {\n\t\tprintf(\"%d\",card[i][j]);\n\t}\n}\n*/\nprintf(\"\\n\");\n\tfor(i=0;i<n;i++){\n\t\tif(Rc%3==0&&Gc%3==0&&Bc%3==0){\n\t\t\tfor(i=0;i<3;i++){\n\t\t\t\tfor (j=0; j<9; j+=3) {\n\t\t\t\t\tif(((card[i][j]==card[i][j+1]-1)&&(card[i][j]==card[i][j+2]-2))||(card[i][j]==card[i][j+1])&&(card[i][j]==card[i][j+2])){\n\t\t\t\t\t\t/*????????¶????????£?????????????????°???????????????*/\n\t\t\t\t\t\tif(card[i][j]!=0||card[i][j+1]!=0||card[i][j+2]!=0) hantei++;;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(hantei>=3){\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t}else if(hantei<3){printf(\"0\\n\");}\n\t\t}else{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\n\n\n\t\n\treturn 0;\n}\n\n/*\n???????????????????????? 9????????? 1???9 4?????????\n?????????9??????????????????\n???????????????1?????¨?????????1??????????????????\n???1*3??????123???1?????????\n???1*2???1???0?????????  ?????????????????¨??\n\n\n?????????¨?????????\n????????????§?????????%3??§????????????\n?°?????????????????????????\n??°????????????\n\n\n\n\n*/"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nstruct data{\n    int n;\n    int c;\n};\n\nint main(){\n\n    int t;\n    int i,j,s; \n    int ch;   \n    int x,y,z;\n    char w;\n    int count;\n    \n    struct data card[50][9];    \n\tstruct data tmp;\n\n    scanf(\"%d\",&t);\n    \n    for(i=0;i<t;i++){\n        for(j=0;j<9;j++){\n            scanf(\"%d \",&card[i][j].n);\n        }\n        for(j=0;j<9;j++){\n            scanf(\"%c \",&w);\n            if(w=='R') card[i][j].c=10;\n            if(w=='G') card[i][j].c=20;\n            if(w=='B') card[i][j].c=30;\n        }\n    }\n    for(i=0;i<t;i++){\n        x=0;y=0;z=0;\n\t\tcount = 0;\n        for(j=0;j<9;j++){\n            if(card[i][j].c==10) x++;\n            else if(card[i][j].c==20) y++;\n            else if(card[i][j].c==30) z++;\n        }\n        if(x%3!=0 || y%3!=0 || z%3!=0){\n            printf(\"0\\n\");\n        }\n        else{\n        \tfor(j=0;j<9;j++){\n        \t\tfor(s=0;s<9-j-1;s++){\n        \t\t\tif(card[i][s].c>card[i][s+1].c){\n        \t\t\t\ttmp=card[i][s];\n        \t\t\t\tcard[i][s]=card[i][s+1];\n        \t\t\t\tcard[i][s+1]=tmp;\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t\n        \tfor(j=0;j<9;j++){\n        \t\tfor(s=0;s<9-j-1;s++){\n        \t\t\tif(card[i][s].n>card[i][s+1].n && card[i][s].c==card[i][s+1].c){\n        \t\t\t\ttmp=card[i][s];\n        \t\t\t\tcard[i][s]=card[i][s+1];\n        \t\t\t\tcard[i][s+1]=tmp;\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t\tif(((card[i][0].n+2)==(card[i][1].n+1) && (card[i][1].n+2)==(card[i][2].n+1)) || ((card[i][0].n)==(card[i][1].n) && (card[i][1].n)==(card[i][2].n))) {\n        \t\t\tcount++;\n        \t\t\n        \t\t}\n        \t\tif(((card[i][3].n+2)==(card[i][4].n+1) && (card[i][4].n+2)==(card[i][5].n+1)) || ((card[i][3].n)==(card[i][4].n) && (card[i][4].n)==(card[i][5].n))){ \n        \t\t\n        \t\t\tcount++;\n        \t\t}\n        \t\tif(((card[i][6].n+2)==(card[i][7].n+1) && (card[i][7].n+2)==(card[i][8].n+1)) || ((card[i][6].n)==(card[i][7].n) && (card[i][7].n)==(card[i][8].n))) {\n        \t\t\tcount++;\n    \t\t\t}\t\n        \t\n        \tif(count==3) printf(\"1\\n\");\n        \telse printf(\"0\\n\");\n        \t\n \n        }\n        \n    }\n    \n            \n\nreturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n\n\nint checkResult(int *mat,int mat_i);\n\nint main(void) {\n\n\t// Rummy\n\tint ds,ds_i;\n\tint num[9];\n\tchar col[10];\n\tint r[9],g[9],b[9];\n\tint ri,gi,bi;\n\tint i;\n\tint r_check,g_check,b_check;\n\n\t// ????????????????????°????????????\n\tscanf(\"%d\",&ds);\n\n\tfor(ds_i=0; ds_i<ds; ds_i++){\n\t// ?????????????????????????????????????????????\n\n\t\t// ?????????\n\t\tfor(i=0; i<9; i++){\n\t\t\tr[i]=0;\n\t\t\tg[i]=0;\n\t\t\tb[i]=0;\n\t\t}\n\t\tri=0;\n\t\tgi=0;\n\t\tbi=0;\n\n\t\t// ?????????????????????\n\t\tfor(i=0; i<9; i++){\tscanf(\"%d\",&num[i]);\t}\n\t\tfor(i=0; i<9; i++){\tscanf(\"%1s\",&col[i]);\t}\n\n\t\t// ????????????????????¨????????????????´?\n\t\tfor(i=0; i<9; i++){\n\t\t\tif(col[i]=='R'){\n\t\t\t\tr[ num[i]-1 ]++;\n\t\t\t\tri++;\n\t\t\t}else if(col[i]=='G'){\n\t\t\t\tg[ num[i]-1 ]++;\n\t\t\t\tgi++;\n\t\t\t}else if(col[i]=='B'){\n\t\t\t\tb[ num[i]-1 ]++;\n\t\t\t\tbi++;\n\t\t\t}\n\t\t}\n\n\t\t// ???(R)?????????\n\t\tr_check = checkResult(r,ri);\n\t\t// ???(G)?????????\n\t\tg_check = checkResult(g,gi);\n\t\t// ???(B)?????????\n\t\tb_check = checkResult(b,bi);\n\n\t\tif(r_check && g_check && b_check){\n\t\t\tprintf(\"1\\n\");\n\t\t}else{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n\n}\n\nint checkResult(int *mat,int mat_i){\n\tint result=1;\n\tint i,j,wk;\n\n\tif(mat_i%3!=0){\n\t\t// ??????????????£????????????????????????????????????????????????????????????\n\t\tresult = 0;\n\t}else if(0<mat_i){\n\t\tfor(i=0; i<7; i++){\n\t\t\tif(0<mat[i] && 0<mat[i+1] && 0<mat[i+2]){\n\t\t\t\twk = 10;\n\t\t\t\tfor(j=0; j<2; j++){\n\t\t\t\t\tif(mat[i+j] < wk){\n\t\t\t\t\t\twk=mat[i+j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmat[i+2]-=wk;\n\t\t\t\tmat[i+1]-=wk;\n\t\t\t\tmat[i]-=wk;\n\t\t\t}\n\t\t}\n\t\tfor(i=0; i<9; i++){\n\t\t\tif(mat[i]==3){\n\t\t\t\tmat[i] = 0;\n\t\t\t}\n\t\t}\n\t\tfor(i=0; i<9; i++){\n\t\t\tif(mat[i]!=0){\n\t\t\t\tresult = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\t"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nvoid handread(int * , int * , int *);\t\t\t//????????????????????????????????£???hand???????´?????????¢??°\n\nint judge1(int * , int * , int *);\nint judge2(int *);\n\nenum cardcolor{ RED , GREEN , BLUE };\n\nint main (void){\n\n\t/*?????????????´?????????????\n\t  0?????????????????????????¨??????°?????????????????????\n\t  1???9???????????????????????°???????????????????????°?????????????????????*/\n\tint handR[10] = {} ;\n\tint handG[10] = {} ;\n\tint handB[10] = {} ;\n\n\tint i = 0 ;\n\tint n = 0 ;\n\n\tscanf(\"%d\", &n);\n\n\tfor(i = 1 ; i <= n ; i++ ){\t\t\t\t\t//n?????°?????????\n\n\t\t/*?????????????????????????????????*/\n\t\thandread(handR,handG,handB);\n\n\t\t/*?????????????¨??????°????????????????????????*/\n\t\tif(judge1 (handR,handG,handB) ){\t\t//????????????1?????????????????????\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handR[0]){\t\t\t\t\t//???????????°???0??????????????????????????????\n\t\t\tif(judge2 (handR) ){\t\t//????????????1?????????????????????\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handG[0]){\n\t\t\tif(judge2 (handG) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\t/*?????????????????§?????????????§??????§???????????????*/\n\t\tif(handB[0]){\n\t\t\tif(judge2 (handB) ){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\t\t\t\t\t\t\t\t//???????????????????????§\n\n\t\tprintf(\"1\\n\");\n\n\t}//n?????°?????????????????????????????§\n\n\treturn 0 ;\n}\n/*\n * handread??¢??°???2????????????????????????????????????????????????????????????\n * ?????¨???????????¢???hand??????????????????hand?????????????????¨??????????????????\n */\nvoid handread(int *handR ,int *handG , int *handB){\n\tint cnum[9] = {} ;\t\t\t//???????????????????????°??????????????????\n\tchar color[9] = {} ;\t\t//??????????????????????????°???????????????\n\tint i = 0 ;\n\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tscanf(\"%d\", &cnum[i]);\n\t}\n\tfor( i = 0 ; i < 9 ; i ++){\n\t\tgetchar();\t\t\t\t//????????????????£???°???\n\t\tcolor[i] = getchar();\n\t}\n\n\tfor( i = 1 ; i <= 9 ; i++){\n\t\tswitch(color[i-1]){\n\t\tcase 'R':\n\t\t\thandR[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandR[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'G':\n\t\t\thandG[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandG[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tcase 'B':\n\t\t\thandB[0]++ ;\t//???????????°?????????????????¢??????\n\t\t\thandB[(cnum[i-1])]++ ;\t//???i????????°?????????????????¢??????\n\t\t\tbreak ;\n\n\t\tdefault:\n\t\t\tprintf(\"wrong data\");\n\t\t\tbreak;\n\t\t}\n\t}//???????§????????????????????????§\n\n}\n\n\n/*judge1????????????????¨??????°?????????????????????*/\n/*????¨??????°???0,3,6,9???????????????????????£??????????????¨????????????????§??????§??????????????°???????????????????????¨????????????*/\n/*?????????????????????????§??????¢??°????????????????????§????????°??¬??\\????????????????????????????????????????????????????????????*/\nint judge1(int *handR,int *handG,int *handB){\n\n\tif( handR[0]%3 || handG[0]%3 ){\n\t\treturn 1 ;\t\t\t\t\t//???????????????????????°??????????????????1?????????\n\t}\n\treturn 0;\n}\n\n/*judge2???????????§?????????????§??????????????????????????????????????????????????????????*/\n/*?????????????????¨????????§????????°1?????????????????????????????¶???????????????????????°0????????????*/\nint judge2(int *hand){\n\tint i = 0 ;\n\n\t/*??????????????????????????????i???\n\t ????????¨???????????£?????????????????§??????????????????????????§???????°?????????°?????§??????*/\n\tfor( i = 1 ; i <= 7 ; i++){\n\t\tif(hand[i] < 0){\t\t//0???????°?????????¨?¨?????????¨??????\n\t\t\treturn 1 ;\t\t\t//?????????????§??????§??????????????????????????¨???????????????????????????????????????????????????\n\t\t}\n\t\tif(hand[i] >= 3 ){\n\t\t\thand[i] -= 3 ;\t\t//i???3?????\\????????£???????????°???????????????????????????3????????¨????????????????????????\n\t\t\thand[0] -= 3 ;\n\t\t}\n\t\tif(hand[i]){\t\t\t//??????i????????£???????????°?????£?????¨??????????????????????????°???????????????\n\t\t\thand[i+1] -= hand[i];\n\t\t\thand[i+2] -= hand[i];\n\t\t\thand[0] -= 3 * hand [i] ;\n\t\t\thand[i] = 0 ;\t\t//i,i+1,i+2???i????????°???????????????i+1,i+2????????°????¶???????????????°??????????????¨??????\n\t\t}\n\t\t\n\t/*???????????§???????????§????????£????????????????????????????????¨????????°?????????8???9*/\n\t/*6,7??????????????§??????????????????3?????¨????????????????§??????§??????????????°???????????????*/\n\t/*?????????7?????§?????£??????????????§8,9????????°??????????????£???????????´?????????????????????*/\n\t\tif(hand[8]%3 || hand[8]< 0|| hand[9]%3 || hand[9] < 0){\n\t\t\treturn 1 ;\n\t\t}\n\t}\n\n\t/*????????????????????§??°????????????????????????????????????????????????????????¶?????????????????????*/\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nstruct Card{\n  int n;\n  char c;\n};\n\nint main(void){\n  int i,j,n,set;\n  char s[2];\n  struct Card x[9],tmp;\n\n  scanf(\"%d\",&n);\n  while(n--){\n    for(i=0;i<9;i++){\n      scanf(\"%d\",&x[i].n);\n    }\n    for(i=0;i<9;i++){\n      scanf(\"%s\",s);\n      x[i].c = s[0];\n    }\n\n    for(i=0;i<8;i++){\n      for(j=i+1;j<9;j++){\n\tif(x[i].c > x[j].c){\n\t  tmp = x[i];\n\t  x[i] = x[j];\n\t  x[j] = tmp;\n\t}\n\telse if(x[i].c == x[j].c && x[i].n > x[j].n){\n\t  tmp = x[i];\n\t  x[i] = x[j];\n\t  x[j] = tmp;\n\t}\n      }\n    }\n\n    set = 0;\n    for(i=0;i<9;i+=3){\n      if(x[i].c==x[i+1].c && x[i].c==x[i+2].c\n      &&(x[i].n==x[i+1].n && x[i].n==x[i+2].n\n      || x[i].n+1==x[i+1].n && x[i].n+2==x[i+2].n)){\n\tset++;\n      }\n    }\n    if(set == 3){\n      printf(\"1\\n\");\n    }\n    else{\n      printf(\"0\\n\");\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\n#define N 9\n\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nbool is_set(int a, int b, int c) {\n  if (a == b && b == c) return true;\n  int array[] = {a, b, c};\n  qsort(array, 3, sizeof(int), cmpfunc);\n  if (array[2] - array[1] == 1 && array[1] - array[0] == 1) return true;\n  return false;\n}\n\nvoid array_remove3(int old_array[], int new_array[], int old_length, int a, int b, int c) {\n  int i, new_index = 0;\n  bool a_set = false, b_set = false, c_set = false;\n  \n\n  \n  for (i = 0; i < old_length; i++) {\n    if (!a_set && old_array[i] == a) {\n      old_array[i] = -1;\n      a_set = true;\n    }\n    if (!b_set && old_array[i] == b) {\n      old_array[i] = -1;\n      b_set = true;\n    }\n    if (!c_set && old_array[i] == c) {\n      old_array[i] = -1;\n      c_set = true;\n    }\n  }\n  for (i = 0; i < old_length; i++) {\n    if (old_array[i] != -1) {\n      new_array[new_index] = old_array[i];\n      new_index++;\n    }\n  }\n \n\n\n}\n\n\n  \n  \n\nbool solve_backtrack(int array[], int array_length, bool reset) {\n  int i, j, k, l;\n  static bool solved = false;\n  if (reset) solved = false;\n  \n  if (array_length == 0) {\n    solved = true;\n    return true;\n  }\n  \n  for (i = 0; i < array_length; i++) {\n    for (j = i+1; j < array_length; j++) {\n      for (k = j+1; k < array_length; k++) {\n\t\n\tif (is_set(array[i], array[j], array[k])) {\n\t  //printf(\"set: i is %d, j is %d, k is %d\\n\", array[i], array[j], array[k]);\n\t  int new_length = array_length - 3;\n\t  if (new_length == 0) {\n\t    //printf(\"new length is 0\\n\");\n\t    solved = true;\n\t    return true;\n\t  }\n\t  int new_array[new_length];\n\t  array_remove3(array, new_array, array_length, array[i], array[j], array[k]);\n\t  \n\t   \n\t  // printf(\"new index is %d\\n\", new_index);\n\t  solved = solve_backtrack(new_array, new_length, false);\n\t  \n\t}\n      }\n    }\n  }\n  return solved;\n}\n\t      \n\n\n\n\nint main(int argc, char *argv[])\n{\n\n  int entries;\n  int i, j;\n\n  fscanf(stdin, \"%d\", &entries);\n \n\n  \n  for (i = 0; i < entries; i++) {\n    int array[N], red[N], blue[N], green[N];\n    int red_n = 0, blue_n = 0, green_n = 0;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \"%d\", &array[j]);\n    }\n    char color;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \" %c\", &color);\n      if (color == 'R') {\n\tred[red_n] = array[j];\n\tred_n++;\n      } else if (color == 'B') {\n\tblue[blue_n] = array[j];\n\tblue_n++;\n      } else if (color == 'G') {\n\tgreen[green_n] = array[j];\n\tgreen_n++;\n      }\n    }\n    \n    if (red_n % 3 != 0 || blue_n % 3 != 0 || green_n % 3 != 0) {\n      printf(\"0\\n\");\n    } else if (solve_backtrack(red, red_n, true) && solve_backtrack(blue, blue_n, true) && solve_backtrack(green, green_n, true)) {\n      printf(\"1\\n\");\n    } else {\n      printf(\"0\\n\");\n    }\n  }\n  \n  \n \n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void) {\n\t\n\tchar mark[9];\n\tint num[9], r_num[9], b_num[9], g_num[9], set, i, j;\n\t\n\t//セット数を入力する\n\tscanf(\"%d\", &set);\n\tint ans[set];\n\t\n\t//各配列を初期化する\n\tfor(i = 0 ; i < 9 ; i++){\n\t\tr_num[i] = 0;\n\t\tg_num[i] = 0;\n\t\tb_num[i] = 0;\n\t}\n\t\n\t\n\tfor(i = 0 ; i < set ; i++){\n\t\tans[i] = 0;\n\t}\n\t\n\t//セット数分繰り返す\n\tfor(i = 0 ; i < set ; i++){\n\t\t\n\t\t\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tscanf(\"%d\", &num[j]);\n\t\t}\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\t\n\t\t\tif(j == 9){\n\t\t\t\tscanf(\"%c\", &mark[j]);\n\t\t\t}else{\n\t\t\t\tscanf(\" %c\", &mark[j]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//色ごとの配列に分割する\t\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tif(mark[j] == 'R'){\n\t\t\t\tr_num[j] = num[j];\n\t\t\t}else if(mark[j] == 'G'){\n\t\t\t\tg_num[j] = num[j];\n\t\t\t}else if(mark[j] == 'B'){\n\t\t\t\tb_num[j] = num[j];\n\t\t\t}\n\t\t}\n\t\t\n\t\t//ソート処理\n\t\tsort(r_num);\n\t\tsort(g_num);\n\t\tsort(b_num);\n\t\t\n\t\t//判定処理\n\t\tif(judge(r_num) == 1 && judge(g_num) == 1 && judge(b_num) == 1){\n\t\t\tans[i] = 1;\n\t\t}else{\n\t\t\tans[i] = 0;\n\t\t}\n\t\t\n\t\t//各配列を初期化する\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tr_num[j] = 0;\n\t\t\tg_num[j] = 0;\n\t\t\tb_num[j] = 0;\n\t\t}\n\t\n\t}\n\tfor(i = 0 ; i < set ; i++){\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n\treturn 0;\n}\n\n\nvoid sort(int num[]){\n\t\n\tint p, q, tmp;\n\t\n\t\tfor(p = 0; p < 8; p++){\n\t\t\tfor(q = p + 1; q < 9; q++){\n\t\t\t\tif(num[p] > num[q]){\n\t\t\t\t\ttmp = num[p];\n\t\t\t\t\tnum[p] = num[q];\n\t\t\t\t\tnum[q] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\n}\n\n\nint judge(int num[]){\n\n\tint cnt = 0;\n\tint i, j, k;\n\t//配列の中の0の数をカウント\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\n\t\t}\n\t}\n\t//0の数が3の倍数でなければ0を返す\n\tif(cnt % 3 != 0){\n\t\treturn 0;\n\t}\n\t//勝利条件を満たしているか判定\n\tfor(i = cnt; i < 9; i++){\n\t\tif(num[i] != 0){\n\t\t\tfor(j = cnt; j < 9; j++){\n\t\t\t\tif(num[j] != 0 && j != i){\n\t\t\t\t\tif(num[i] == num[j]){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[i] == num[k]){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(num[j] - num[i] == 1){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[k] - num[j] == 1){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt = 0;\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\n\t\t}\n\t}\n\tif(cnt == 9){\n\t\treturn 1;\n\t}else{\n\t\treturn 0;\n\t}\n\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\n#define N 9\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nbool is_set(int a, int b, int c) {\n  if (a == b && b == c) return true;\n  int array[] = {a, b, c};\n  qsort(array, 3, sizeof(int), cmpfunc);\n  if (array[2] - array[1] == 1 && array[1] - array[0] == 1) return true;\n  return false;\n}\n\nvoid array_remove3(int old_array[], int new_array[], int old_length, int a, int b, int c) {\n  int i, new_index = 0;\n  bool a_set = false, b_set = false, c_set = false;\n\n  for (i = 0; i < old_length; i++) {\n    if (!a_set && old_array[i] == a) {\n      a_set = true;\n      continue;\n    }\n    if (!b_set && old_array[i] == b) {\n      b_set = true;\n      continue;\n    }\n    if (!c_set && old_array[i] == c) {\n      c_set = true;\n      continue;\n    }\n    new_array[new_index] = old_array[i];\n    new_index++;\n  }\n \n}\n\nbool solve_backtrack(int array[], int array_length, bool reset) {\n  int i, j, k, l;\n  static bool solved = false;\n  if (reset) solved = false;\n  \n  if (array_length == 0) {\n    solved = true;\n    return true;\n  }\n  \n  for (i = 0; i < array_length; i++) {\n    for (j = i+1; j < array_length; j++) {\n      for (k = j+1; k < array_length; k++) {\n\t\n\tif (is_set(array[i], array[j], array[k])) {\n\t  int new_length = array_length - 3;\n\t  if (new_length == 0) {\n\t    solved = true;\n\t    return true;\n\t  }\n\t  int new_array[new_length];\n\t  array_remove3(array, new_array, array_length, array[i], array[j], array[k]);\n\t  \n\t  solve_backtrack(new_array, new_length, false);\n\t  \n\t}\n      }\n    }\n  }\n  return solved;\n}\n\t      \nint main(int argc, char *argv[])\n{\n\n  int entries;\n  int i, j;\n\n  fscanf(stdin, \"%d\", &entries);\n \n\n  for (i = 0; i < entries; i++) {\n    int array[N], red[N], blue[N], green[N];\n    int red_n = 0, blue_n = 0, green_n = 0;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \"%d\", &array[j]);\n    }\n    char color;\n    for (j = 0; j < N; j++) {\n      fscanf(stdin, \" %c\", &color);\n      if (color == 'R') {\n\tred[red_n] = array[j];\n\tred_n++;\n      } else if (color == 'B') {\n\tblue[blue_n] = array[j];\n\tblue_n++;\n      } else if (color == 'G') {\n\tgreen[green_n] = array[j];\n\tgreen_n++;\n      }\n    }\n    \n    if (red_n % 3 != 0 || blue_n % 3 != 0 || green_n % 3 != 0) {\n      printf(\"0\\n\");\n    } else if (solve_backtrack(red, red_n, true) && solve_backtrack(blue, blue_n, true) && solve_backtrack(green, green_n, true)) {\n      printf(\"1\\n\");\n    } else {\n      printf(\"0\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void)\n{\n\tint card[3][9]={0};\n\tint tmp[9],ntmp;\n\tchar mark;\n\tint n,i,j,k;\n\tint Rc=0,Gc=0,Bc=0,hantei;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<9;j++){\n\t\t\tscanf(\"%d\",&tmp[j]);\n\t\t}\n\t\tfor(k=0;k<9;k++){\n\t\t\tscanf(\" %c\",&mark);\n\t\t\tswitch(mark){\n\t\t\t\tcase 'R' :\n\t\t\t\t\tcard[0][Rc]=tmp[k];\n\t\t\t\t\tprintf(\"R%d \",card[0][Rc]);\n\t\t\t\t\tRc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G' :\n\t\t\t\t\tcard[1][Gc]=tmp[k];\n\t\t\t\t\tprintf(\"G%d \",card[1][Gc]);\n\t\t\t\t\tGc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B' :\n\t\t\t\t\tcard[2][Bc]=tmp[k];\n\t\t\t\t\tprintf(\"B%d \",card[2][Bc]);\n\t\t\t\t\tBc++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\nprintf(\"\\n\");\n\n/*????????????*/\nfor(i=0;i<3;i++){\n  for (j=0; j<9; ++j) {\n    for (k=j+1; k<9; ++k) {\n      if (card[i][j] > card[i][k]&&card[i][k]!=0) {\n        ntmp =  card[i][j];\n        card[i][j] = card[i][k];\n        card[i][k] = ntmp;\n      }\n    }\n  }\n}\n/*???????????°??¨\nfor(i=0;i<3;i++){\n\tfor (j=0; j<9; ++j) {\n\t\tprintf(\"%d\",card[i][j]);\n\t}\n}\n*/\nprintf(\"\\n\");\n\tfor(i=0;i<n;i++){\n\t\tif(Rc%3==0&&Gc%3==0&&Bc%3==0){\n\t\t\tfor(i=0;i<3;i++){\n\t\t\t\tfor (j=0; j<9; j+=3) {\n\t\t\t\t\tif(((card[i][j]==card[i][j+1]-1)&&(card[i][j]==card[i][j+2]-2))||(card[i][j]==card[i][j+1])&&(card[i][j]==card[i][j+2])){\n\t\t\t\t\t\t/*????????¶????????£?????????????????°???????????????*/\n\t\t\t\t\t\tif(card[i][j]!=0||card[i][j+1]!=0||card[i][j+2]!=0) hantei++;;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(hantei>=3)printf(\"1\\n\");\n\t\t}else{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\nprintf(\"\\n\");\n\n\t\n\treturn 0;\n}\n\n/*\n???????????????????????? 9????????? 1???9 4?????????\n?????????9??????????????????\n???????????????1?????¨?????????1??????????????????\n???1*3??????123???1?????????\n???1*2???1???0?????????  ?????????????????¨??\n\n\n?????????¨?????????\n????????????§?????????%3??§????????????\n?°?????????????????????????\n??°????????????\n\n\n\n\n*/"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nstruct data{\n    int n;\n    int c;\n};\n\nint main(){\n\n    int t;\n    int i,j,s; \n    int ch;   \n    int x,y,z;\n    char w;\n    int count;\n    \n    struct data card[51][9];    \n\tstruct data tmp;\n\n    scanf(\"%d\",&t);\n    \n    for(i=0;i<t;i++){\n        for(j=0;j<9;j++){\n            scanf(\"%d \",&card[i][j].n);\n        }\n        for(j=0;j<9;j++){\n            scanf(\"%c \",&w);\n            if(w=='R') card[i][j].c=10;\n            if(w=='G') card[i][j].c=20;\n            if(w=='B') card[i][j].c=30;\n        }\n    }\n    for(i=0;i<t;i++){\n        x=0;y=0;z=0;\n\t\tcount = 0;\n        for(j=0;j<9;j++){\n            if(card[i][j].c==10) x++;\n            else if(card[i][j].c==20) y++;\n            else if(card[i][j].c==30) z++;\n        }\n        if(x%3!=0 || y%3!=0 || z%3!=0){\n            printf(\"0\\n\");\n        }\n        else{\n        \tfor(j=0;j<9;j++){\n        \t\tfor(s=0;s<9-j-1;s++){\n        \t\t\tif(card[i][s].c>card[i][s+1].c){\n        \t\t\t\ttmp=card[i][s];\n        \t\t\t\tcard[i][s]=card[i][s+1];\n        \t\t\t\tcard[i][s+1]=tmp;\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t\n        \tfor(j=0;j<9;j++){\n        \t\tfor(s=0;s<9-j-1;s++){\n        \t\t\tif(card[i][s].n>card[i][s+1].n && card[i][s].c==card[i][s+1].c){\n        \t\t\t\ttmp=card[i][s];\n        \t\t\t\tcard[i][s]=card[i][s+1];\n        \t\t\t\tcard[i][s+1]=tmp;\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t\tif(((card[i][0].n+2)==(card[i][1].n+1) && (card[i][1].n+2)==(card[i][2].n+1)) || ((card[i][0].n)==(card[i][1].n) && (card[i][1].n)==(card[i][2].n))) {\n        \t\t\tcount++;\n        \t\t\n        \t\t}\n        \t\tif(((card[i][3].n+2)==(card[i][4].n+1) && (card[i][4].n+2)==(card[i][5].n+1)) || ((card[i][3].n)==(card[i][4].n) && (card[i][4].n)==(card[i][5].n))){ \n        \t\t\n        \t\t\tcount++;\n        \t\t}\n        \t\tif(((card[i][6].n+2)==(card[i][7].n+1) && (card[i][7].n+2)==(card[i][8].n+1)) || ((card[i][6].n)==(card[i][7].n) && (card[i][7].n)==(card[i][8].n))) {\n        \t\t\tcount++;\n    \t\t\t}\t\n        \t\n        \tif(count==3) printf(\"1\\n\");\n        \telse printf(\"0\\n\");\n        \t\n \n        }\n        \n    }\n    \n            \n\nreturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void){\n\n\tchar mark[9];\n\tint num[9], r_num[9], b_num[9], g_num[9], set, i, j;\n\t\n\tscanf(\"%d\", &set);\t/* ???????????°?????\\??? */\n\tint ans[set];\n\n\tfor(i = 0 ; i < 9 ; i++){\t/* ????????????????????? */\n\t\tr_num[i] = 0;\n\t\tg_num[i] = 0;\n\t\tb_num[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\n\t\tans[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\t/* ???????????°?????°????????? */\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tscanf(\"%d\", &num[j]);\n\t\t}\n\t\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\t\tif(j == 9){\n\t\t\t\t\tscanf(\"%c\", &mark[j]);\n\t\t\t\t}\n\t\telse{\n\t\t\tscanf(\" %c\", &mark[j]);\n\t\t}\n\t}\n\n\tfor(j = 0 ; j < 9 ; j++){\t\t/* ????????¨?????????????????? */\n\t\tif(mark[j] == 'R'){\n\t\t\tr_num[j] = num[j];\n\t}\n\t\t\telse if(mark[j] == 'G'){\n\t\t\t\tg_num[j] = num[j];\n\t\t\t}\n\t\t\telse if(mark[j] == 'B'){\n\t\t\t\tb_num[j] = num[j];\n\t\t\t}\n\t\t}\n\n\tsort(r_num);\t/* ??????????????? */\n\tsort(g_num);\t/* ??????????????? */\n\tsort(b_num);\t/* ??????????????? */\n\n\t\tif(judge(r_num) == 1 && judge(g_num) == 1 && judge(b_num) == 1){\t/* ???????????? */\n\t\t\tans[i] = 1;\n\t\t\t}\n\telse{\n\n\t\tans[i] = 0;\n\t}\n\n\t\tfor(j = 0 ; j < 9 ; j++){\t/* ????????????????????? */\n\t\t\tr_num[j] = 0;\n\t\t\tg_num[j] = 0;\n\t\t\tb_num[j] = 0;\n\t\t}\n\t}\n\n\t\tfor(i = 0 ; i < set ; i++){\n\t\t\tprintf(\"%d\\n\", ans[i]);\n\t\t}\n\treturn 0;\n}\n\nvoid sort(int num[]){\n\n\tint p, q, tmp;\n\n\tfor(p = 0; p < 8; p++){\n\t\tfor(q = p + 1; q < 9; q++){\n\t\t\tif(num[p] > num[q]){\n\t\t\t\ttmp = num[p];\n\t\t\t\tnum[p] = num[q];\n\t\t\t\tnum[q] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}   \n\t}\n\nint judge(int num[]){\n\n\tint cnt = 0;\n\tint i, j, k;\n\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\t\t\t/* ???????????????0?????°??????????????? */\n\t\t}\n\t}\n\t\tif(cnt % 3 != 0){\t\t/* 0?????°???3????????°??§???????????°0????????? */\n\treturn 0;\n}\n\n\tfor(i = cnt; i < 9; i++){\t/* ???????????¶?????????????????????????????? */\n\t\tif(num[i] != 0){\n\t\t\tfor(j = cnt; j < 9; j++){\n\t\t\t\tif(num[j] != 0 && j != i){\n\t\t\t\t\tif(num[i] == num[j]){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[i] == num[k]){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(num[j] - num[i] == 1){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[k] - num[j] == 1){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt = 0;\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tif(num[i] == 0){\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\t\tif(cnt == 9){\n\t\t\t\treturn 1;\n\t\t\t}\n\telse{\n\treturn 0;\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void){\n\n\tchar mark[9];\n\tint num[9], r_num[9], b_num[9], g_num[9], set, i, j;\n\t\n\n\tscanf(\"%d\", &set);\t/* ???????????°?????\\??? */\n\tint ans[set];\n\n\tfor(i = 0 ; i < 9 ; i++){\t/* ????????????????????? */\n\t\tr_num[i] = 0;\n\t\tg_num[i] = 0;\n\t\tb_num[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\n\t\tans[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\t/* ???????????°?????°????????? */\n\n\tfor(j = 0 ; j < 9 ; j++){\n\t\tscanf(\"%d\", &num[j]);\n\t\t}\n\t\tfor(j = 0 ; j < 9 ; j++){\n\n\tif(j == 9){\n\t\tscanf(\"%c\", &mark[j]);\n\t\t\t}else\n\t{\n\n\tscanf(\" %c\", &mark[j]);\n\t\t}\n\t\t\t}\n\n\tfor(j = 0 ; j < 9 ; j++){\t\t/* ????????¨?????????????????? */\n\t\tif(mark[j] == 'R'){\n\t\t\tr_num[j] = num[j];\n\t}\n\t\telse if(mark[j] == 'G'){\n\t\t\tg_num[j] = num[j];\n\t}\n\t\telse if(mark[j] == 'B'){\n\t\t\tb_num[j] = num[j];\n\t\t\t}\n\t\t}\n\n\tsort(r_num);\t/* ??????????????? */\n\tsort(g_num);\t/* ??????????????? */\n\tsort(b_num);\t/* ??????????????? */\n\n\tif(judge(r_num) == 1 && judge(g_num) == 1 && judge(b_num) == 1){\t/* ???????????? */\n\t\t\tans[i] = 1;\n\t\t}else\n\t{\n\t\tans[i] = 0;\n\t}\n\n\t\tfor(j = 0 ; j < 9 ; j++){\t/* ????????????????????? */\n\t\t\tr_num[j] = 0;\n\t\t\tg_num[j] = 0;\n\t\t\tb_num[j] = 0;\n\t\t}\n\t}\n\n\t\tfor(i = 0 ; i < set ; i++){\n\t\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n\n\treturn 0;\n}\n\n\nvoid sort(int num[]){\n\n\tint p, q, tmp;\n\n\tfor(p = 0; p < 8; p++){\n\t\tfor(q = p + 1; q < 9; q++){\n\t\t\tif(num[p] > num[q]){\n\t\t\t\ttmp = num[p];\n\t\t\t\tnum[p] = num[q];\n\t\t\t\tnum[q] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}   \n\t}\n\nint judge(int num[]){\n\n\tint cnt = 0;\n\tint i, j, k;\n\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\t\t\t/* ???????????????0?????°??????????????? */\n\t\t}\n\t}\n\n\tif(cnt % 3 != 0){\t\t/* 0?????°???3????????°??§???????????°0????????? */\n\t\treturn 0;\n\t}\n\n\tfor(i = cnt; i < 9; i++){\t/* ???????????¶?????????????????????????????? */\n\t\tif(num[i] != 0){\n\t\t\tfor(j = cnt; j < 9; j++){\n\t\t\t\tif(num[j] != 0 && j != i){\n\t\t\t\t\tif(num[i] == num[j]){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[i] == num[k]){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(num[j] - num[i] == 1){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[k] - num[j] == 1){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt = 0;\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\n\t\t}\n\t}\n\t\t\tif(cnt == 9){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\telse\n\t{\n\n\t\treturn 0;\n\t}\n\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n\n\nint checkResult(int *mat,int mat_i);\n\nint main(void) {\n\n\t// Rummy\n\tint ds,ds_i;\n\tint num[9];\n\tchar col[10];\n\tint r[9],g[9],b[9];\n\tint ri,gi,bi;\n\tint i;\n\tint r_check,g_check,b_check;\n\n\t// ????????????????????°????????????\n\tscanf(\"%d\",&ds);\n\n\tfor(ds_i=0; ds_i<ds; ds_i++){\n\t// ?????????????????????????????????????????????\n\n\t\t// ?????????\n\t\tfor(i=0; i<9; i++){\n\t\t\tr[i]=0;\n\t\t\tg[i]=0;\n\t\t\tb[i]=0;\n\t\t}\n\t\tri=0;\n\t\tgi=0;\n\t\tbi=0;\n\n\t\t// ?????????????????????\n\t\tfor(i=0; i<9; i++){\tscanf(\"%d\",&num[i]);\t}\n\t\tfor(i=0; i<9; i++){\tscanf(\"%1s\",&col[i]);\t}\n\n\t\t// ????????????????????¨????????????????´?\n\t\tfor(i=0; i<9; i++){\n\t\t\tif(col[i]=='R'){\n\t\t\t\tr[ num[i]-1 ]++;\n\t\t\t\tri++;\n\t\t\t}else if(col[i]=='G'){\n\t\t\t\tg[ num[i]-1 ]++;\n\t\t\t\tgi++;\n\t\t\t}else if(col[i]=='B'){\n\t\t\t\tb[ num[i]-1 ]++;\n\t\t\t\tbi++;\n\t\t\t}\n\t\t}\n\n\t\t// ???(R)?????????\n\t\tr_check = checkResult(r,ri);\n\t\t// ???(G)?????????\n\t\tg_check = checkResult(g,gi);\n\t\t// ???(B)?????????\n\t\tb_check = checkResult(b,bi);\n\n\t\tif(r_check && g_check && b_check){\n\t\t\tprintf(\"1\\n\");\n\t\t}else{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n\n}\n\nint checkResult(int *mat,int mat_i){\n\tint result=1;\n\tint i,j,wk;\n\n\tif(mat_i%3!=0){\n\t\t// ??????????????£????????????????????????????????????????????????????????????\n\t\tresult = 0;\n\t}else if(0<mat_i){\n\t\tfor(i=0; i<7; i++){\n\t\t\tif(0<mat[i] && 0<mat[i+1] && 0<mat[i+2]){\n\t\t\t\twk = 10;\n\t\t\t\tfor(j=0; j<2; j++){\n\t\t\t\t\tif(mat[i+j] < wk){\n\t\t\t\t\t\twk=mat[i+j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmat[i+2]-=wk;\n\t\t\t\tmat[i+1]-=wk;\n\t\t\t\tmat[i]-=wk;\n\t\t\t}\n\t\t\tif(mat[i]==3){\n\t\t\t\tmat[i] = 0;\n\t\t\t}\n\t\t}\n\t\tfor(i=0; i<9; i++){\n\t\t\tif(mat[i]!=0){\n\t\t\t\tresult = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\t"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void){\n\n\tchar mark[9];\n\tint num[9], r_num[9], b_num[9], g_num[9], set, i, j;\n\t\n\tscanf(\"%d\", &set);\t/* ???????????°?????\\??? */\n\tint ans[set];\n\n\tfor(i = 0 ; i < 9 ; i++){\t/* ????????????????????? */\n\t\tr_num[i] = 0;\n\t\tg_num[i] = 0;\n\t\tb_num[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\n\t\tans[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\t/* ???????????°?????°????????? */\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tscanf(\"%d\", &num[j]);\n\t\t}\n\t\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\t\tif(j == 9){\n\t\t\t\t\tscanf(\"%c\", &mark[j]);\n\t\t\t\t}\n\t\telse{\n\t\t\tscanf(\" %c\", &mark[j]);\n\t\t}\n\t}\n\n\tfor(j = 0 ; j < 9 ; j++){\t\t/* ????????¨?????????????????? */\n\t\tif(mark[j] == 'R'){\n\t\t\tr_num[j] = num[j];\n\t}\n\t\t\telse if(mark[j] == 'G'){\n\t\t\t\tg_num[j] = num[j];\n\t\t\t}\n\t\t\telse if(mark[j] == 'B'){\n\t\t\t\tb_num[j] = num[j];\n\t\t\t}\n\t\t}\n\n\tsort(r_num);\t/* ??????????????? */\n\tsort(g_num);\t/* ??????????????? */\n\tsort(b_num);\t/* ??????????????? */\n\n\t\tif(judge(r_num) == 1 && judge(g_num) == 1 && judge(b_num) == 1){\t/* ???????????? */\n\t\t\tans[i] = 1;\n\t\t\t}\n\telse{\n\n\t\tans[i] = 0;\n\t}\n\n\t\tfor(j = 0 ; j < 9 ; j++){\t/* ????????????????????? */\n\t\t\tr_num[j] = 0;\n\t\t\tg_num[j] = 0;\n\t\t\tb_num[j] = 0;\n\t\t}\n\t}\n\n\t\tfor(i = 0 ; i < set ; i++){\n\t\t\tprintf(\"%d\\n\", ans[i]);\n\t\t}\n\treturn 0;\n}\n\nvoid sort(int num[]){\n\n\tint p, q, tmp;\n\n\tfor(p = 0; p < 8; p++){\n\t\tfor(q = p + 1; q < 9; q++){\n\t\t\tif(num[p] > num[q]){\n\t\t\t\ttmp = num[p];\n\t\t\t\tnum[p] = num[q];\n\t\t\t\tnum[q] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}   \n\t}\n\nint judge(int num[]){\n\n\tint cnt = 0;\n\tint i, j, k;\n\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\t\t\t/* ???????????????0?????°??????????????? */\n\t\t}\n\t}\n\t\tif(cnt % 3 != 0){\t\t/* 0?????°???3????????°??§???????????°0????????? */\n\treturn 0;\n}\n\n\tfor(i = cnt; i < 9; i++){\t/* ???????????¶?????????????????????????????? */\n\t\tif(num[i] != 0){\n\t\t\tfor(j = cnt; j < 9; j++){\n\t\t\t\tif(num[j] != 0 && j != i){\n\t\t\t\t\tif(num[i] == num[j]){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[i] == num[k]){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(num[j] - num[i] == 1){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[k] - num[j] == 1){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt = 0;\n\t\tfor(i = 0; i < 9; i++){\n\t\t\tif(num[i] == 0){\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tif(cnt == 9){\n\t\t\treturn 1;\n\t\t}\n\t\telse{\n\treturn 0;\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint b[11];\nint g[11];\nint r[11];\nint t[10];\nchar tc[11];\n\nvoid in(int, char);\nint hantei();\nvoid sort(int, int);\nvoid change(int, int);\n\nmain(){\n  int i, j, n, ans;\n  \n  scanf(\"%d\", &n);\n  \n  for(i=0;i<n;i++){\n    b[0]=g[0]=r[0]=-1;\n    for(j=0;j<9;j++){\n      scanf(\"%d\", &t[j]);\n    }\n    getchar();\n    for(j=0;j<9;j++){\n      scanf(\"%c\", &tc[j]);\n      getchar();\n    }\n    \n    sort(0, 8);\n\n    for(j=0;j<9;j++){\n      in(t[j], tc[j]);\n    }\n    \n    ans=hantei();\n    \n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n\nvoid in(int a, char c){\n  int i;\n  \n  if(c=='B'){\n    for(i=0;i<10;i++){\n      if(b[i]==-1){\n\tb[i]=a;\n\tb[i+1]=-1;\n\treturn;\n      }\n    }\n  }\n  \n  else if(c=='G'){\n    for(i=0;i<10;i++){\n      if(g[i]==-1){\n\tg[i]=a;\n\tg[i+1]=-1;\n\treturn;\n      }\n    }\n  }\n  \n  else if(c=='R'){\n    for(i=0;i<10;i++){\n      if(r[i]==-1){\n\tr[i]=a;\n\tr[i+1]=-1;\n\treturn;\n      }\n    }\n  }\n}\n\nint hantei(){\n  int i, eb, eg, er, count=0, renzoku, temp, j;\n  int fb[11], fg[11], fr[11];\n  \n  for(i=0;i<10;i++){\n    if(b[i]==-1){\n      eb=i-1;\n      break;\n    }\n  }\n  for(i=0;i<10;i++){\n    if(g[i]==-1){\n      eg=i-1;\n      break;\n    }\n  }\n  for(i=0;i<10;i++){\n    if(r[i]==-1){\n      er=i-1;\n      break;\n    }\n  }\n  \n  for(i=0;i<11;i++){\n    fb[i]=fg[i]=fr[i]=0;\n  }\n  \n  if((eb+1)%3==0 && (eg+1)%3==0 && (er+1)%3==0){\n    for(i=0;i<=eb;i+=3){\n      if(b[i]==b[i+1] && b[i+1]==b[i+2]){\n\tcount++;\n\tb[i]=b[i+1]=b[i+2]=-2;\n      }\n    }\n    for(i=0;i<=eg;i+=3){\n      if(g[i]==g[i+1] && g[i+1]==g[i+2]){\n\tcount++;\n\tg[i]=g[i+1]=g[i+2]=-2;\n      }\n    }\n    for(i=0;i<=er;i+=3){\n      if(r[i]==r[i+1] && r[i+1]==r[i+2]){\n\tcount++;\n\tr[i]=r[i+1]=r[i+2]=-2;\n      }\n    }\n    for(j=0;j<3;j++){\n      temp=-1;\n      for(i=0, renzoku=0;i<=eb;i++){\n\tif(b[i]==-2) continue;\n\tif(renzoku==3) break;\n\tif(temp==-1){\n\t  temp=b[i];\n\t  b[i]=-2;\n\t  renzoku++;\n\t}\n\tif(temp==b[i]-1){\n\t  temp=b[i];\n\t  b[i]=-2;\n\t  renzoku++;\n\t}\n      }\n      if(renzoku==3) count++;\n    }\n    for(j=0;j<3;j++){\n      temp=-1;\n      for(i=0, renzoku=0;i<=eg;i++){\n\tif(g[i]==-2) continue;\n\tif(renzoku==3) break;\n\tif(temp==-1){\n\t  temp=g[i];\n\t  g[i]=-2;\n\t  renzoku++;\n\t}\n\tif(temp==g[i]-1){\n\t  temp=g[i];\n\t  g[i]=-2;\n\t  renzoku++;\n\t}\n      }\n      if(renzoku==3) count++;\n    }\n\n    for(j=0;j<3;j++){\n      temp=-1;\n      for(i=0, renzoku=0;i<=er;i++){\n\tif(r[i]==-2) continue;\n\tif(renzoku==3) break;\n\tif(temp==-1){\n\t  temp=r[i];\n\t  r[i]=-2;\n\t  renzoku++;\n\t}\n\tif(temp==r[i]-1){\n\t  temp=r[i];\n\t  r[i]=-2;\n\t  renzoku++;\n\t}\n      }\n      if(renzoku==3) count++;\n    }\n\n    if(count==3) return 1;\n    else return 0;\n  }\n  else return 0;\n}\n\nvoid sort(int left, int right){\n  int i, j, n;\n  \n  i=left;\n  j=right;\n  n=t[(left+right)/2];\n  \n  while(1){\n    while(n>t[i]) i++;\n    while(n<t[j]) j--;\n    \n    if(i>=j) break;\n    \n    change(i, j);\n    i++;\n    j--;\n  }\n\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\n\nvoid change(int a, int c){\n  int temp;\n  char temp1;\n\n  temp=t[a];\n  t[a]=t[c];\n  t[c]=temp;\n\n  temp1=tc[a];\n  tc[a]=tc[c];\n  tc[c]=temp1;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  int n,i,j,a[20];\n  char b[20],c[20]={\"RGB\"};\n  scanf(\"%d\",&n);\n  while(n--){\n    int d[20][20]={0};\n    for(i=0;i<9;i++)scanf(\"%d\" ,&a[i]);\n    for(i=0;i<9;i++)scanf(\" %c\",&b[i]);\n    for(i=0;i<9;i++){\n      for(j=0;b[i]-c[j];j++);\n      d[a[i]][j]++;\n    }\n    for(j=0;j<3;j++){\n      for(i=0;i<9;i++){\n\tif(d[i][j]>2)d[i][j]-=3;\n\tif(d[i][j]>0){\n\t  if(d[i+1][j]<d[i][j]||d[i+2][j]<d[i][j])break;\n\t  d[i+1][j]-=d[i][j];\n\t  d[i+2][j]-=d[i][j];\n\t}\n      }\n      if(i-9)break; \n    }\n    printf(\"%d\\n\",j-3?0:1);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "// Aizu 2102: Rummy\n// 2017.9.20 bal4u@uu\n\n#include <stdio.h>\n#include <string.h>\n\nint f[3][15];\nchar tr['Z'];\nint v[10];\n\nint main()\n{\n\tint t, i, j, n;\n\tchar c[5];\n\n\ttr['R'] = 0, tr['G'] = 1, tr['B'] = 2;\n\tscanf(\"%d\", &t); while (t-- > 0) {\n\t\tmemset(f, 0, sizeof(f));\n\t\tfor (i = 0; i < 9; i++) scanf(\"%d\", v+i);\n\t\tfor (i = 0; i < 9; i++) scanf(\"%s\", c), f[tr[*c]][v[i]]++;\n\t\tfor (n = 0, j = 0; j < 3; j++)\tfor (i = 0; i < 9; i++) {\n\t\t\twhile (f[j][i] > 0 && f[j][i+1] > 0 && f[j][i+2] > 0)\n\t\t\t\tn++, f[j][i]--, f[j][i+1]--, f[j][i+2]--;\n\t\t\tif (n == 3) goto Done;\n\t\t}\n\t\tfor (j = 0; j < 3; j++) for (i = 0; i < 9; i++) {\n\t\t\twhile (f[j][i] >= 3) n++, f[j][i] -= 3;\n\t\t\tif (n == 3) goto Done;\n\t\t}\nDone:\tputs(n == 3 ? \"1\" : \"0\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// Aizu 2102: Rummy\n// 2017.9.20 bal4u@uu\n\n#include <stdio.h>\n#include <string.h>\n\nint f[3][15];\nchar tr['Z'];\nint v[10];\n\nint main()\n{\n\tint t, i, j, n;\n\tchar c[5];\n\n\ttr['R'] = 0, tr['G'] = 1, tr['B'] = 2;\n\tscanf(\"%d\", &t); while (t-- > 0) {\n\t\tmemset(f, 0, sizeof(f));\n\t\tfor (i = 0; i < 9; i++) scanf(\"%d\", v+i);\n\t\tfor (i = 0; i < 9; i++) scanf(\"%s\", c), f[tr[*c]][v[i]]++;\n\t\tfor (n = 0, j = 0; j < 3; j++)\tfor (i = 1; i <= 9; i++) {\n\t\t\twhile (f[j][i] > 0 && f[j][i+1] > 0 && f[j][i+2] > 0)\n\t\t\t\tn++, f[j][i]--, f[j][i+1]--, f[j][i+2]--;\n\t\t\tif (n == 3) goto Done;\n\t\t}\n\t\tfor (j = 0; j < 3; j++) for (i = 1; i <= 9; i++) {\n\t\t\twhile (f[j][i] >= 3) n++, f[j][i] -= 3;\n\t\t\tif (n == 3) goto Done;\n\t\t}\nDone:\tputs(n == 3 ? \"1\" : \"0\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void){\n\n\tchar mark[9];\n\tint num[9], r_num[9], b_num[9], g_num[9], set, i, j;\n\t\n\n\tscanf(\"%d\", &set);\t/* ???????????°?????\\??? */\n\tint ans[set];\n\n\tfor(i = 0 ; i < 9 ; i++){\t/* ????????????????????? */\n\t\tr_num[i] = 0;\n\t\tg_num[i] = 0;\n\t\tb_num[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\n\t\tans[i] = 0;\n\t}\n\n\tfor(i = 0 ; i < set ; i++){\t/* ???????????°?????°????????? */\n\n\tfor(j = 0 ; j < 9 ; j++){\n\t\tscanf(\"%d\", &num[j]);\n\t}\n\t\tfor(j = 0 ; j < 9 ; j++){\n\t\t\tif(j == 9){\n\t\t\t\tscanf(\"%c\", &mark[j]);\n\t\t\t}\n\t\telse{\n\t\t\tscanf(\" %c\", &mark[j]);\n\t\t}\n\t}\n\n\tfor(j = 0 ; j < 9 ; j++){\t\t/* ????????¨?????????????????? */\n\t\tif(mark[j] == 'R'){\n\t\t\tr_num[j] = num[j];\n\t}\n\t\t\telse if(mark[j] == 'G'){\n\t\t\t\tg_num[j] = num[j];\n\t\t\t}\n\t\t\telse if(mark[j] == 'B'){\n\t\t\t\tb_num[j] = num[j];\n\t\t\t}\n\t\t}\n\n\tsort(r_num);\t/* ??????????????? */\n\tsort(g_num);\t/* ??????????????? */\n\tsort(b_num);\t/* ??????????????? */\n\n\t\tif(judge(r_num) == 1 && judge(g_num) == 1 && judge(b_num) == 1){\t/* ???????????? */\n\t\t\tans[i] = 1;\n\t\t\t}\n\telse{\n\n\t\tans[i] = 0;\n\t}\n\n\t\tfor(j = 0 ; j < 9 ; j++){\t/* ????????????????????? */\n\t\t\tr_num[j] = 0;\n\t\t\tg_num[j] = 0;\n\t\t\tb_num[j] = 0;\n\t\t}\n\t}\n\n\t\tfor(i = 0 ; i < set ; i++){\n\t\t\tprintf(\"%d\\n\", ans[i]);\n\t\t}\n\n\treturn 0;\n}\n\nvoid sort(int num[]){\n\n\tint p, q, tmp;\n\n\tfor(p = 0; p < 8; p++){\n\t\tfor(q = p + 1; q < 9; q++){\n\t\t\tif(num[p] > num[q]){\n\t\t\t\ttmp = num[p];\n\t\t\t\tnum[p] = num[q];\n\t\t\t\tnum[q] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}   \n\t}\n\nint judge(int num[]){\n\n\tint cnt = 0;\n\tint i, j, k;\n\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\t\t\t/* ???????????????0?????°??????????????? */\n\t\t}\n\t}\n\t\t\tif(cnt % 3 != 0){\t\t/* 0?????°???3????????°??§???????????°0????????? */\n\t\treturn 0;\n\t}\n\n\tfor(i = cnt; i < 9; i++){\t/* ???????????¶?????????????????????????????? */\n\t\tif(num[i] != 0){\n\t\t\tfor(j = cnt; j < 9; j++){\n\t\t\t\tif(num[j] != 0 && j != i){\n\t\t\t\t\tif(num[i] == num[j]){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[i] == num[k]){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(num[j] - num[i] == 1){\n\t\t\t\t\t\tfor(k = cnt; k < 9; k++){\n\t\t\t\t\t\t\tif(num[k] != 0 && (k != i && k != j)){\n\t\t\t\t\t\t\t\tif(num[k] - num[j] == 1){\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[k] = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcnt = 0;\n\tfor(i = 0; i < 9; i++){\n\t\tif(num[i] == 0){\n\t\t\tcnt++;\n\t\t}\n\t}\n\t\t\tif(cnt == 9){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\telse\n\t{\n\t\treturn 0;\n\t}\n\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main(void)\n{\n\tint card[3][9]={0};\n\tint tmp[9],ntmp;\n\tchar mark;\n\tint n,i,j,k;\n\tint Rc=0,Gc=0,Bc=0,hantei;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<9;j++){\n\t\t\tscanf(\"%d\",&tmp[j]);\n\t\t}\n\t\tfor(k=0;k<9;k++){\n\t\t\tscanf(\" %c\",&mark);\n\t\t\tswitch(mark){\n\t\t\t\tcase 'R' :\n\t\t\t\t\tcard[0][Rc]=tmp[k];\n\t\t\t\t\t//printf(\"R%d \",card[0][Rc]);\n\t\t\t\t\tRc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G' :\n\t\t\t\t\tcard[1][Gc]=tmp[k];\n\t\t\t\t\t//printf(\"G%d \",card[1][Gc]);\n\t\t\t\t\tGc++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B' :\n\t\t\t\t\tcard[2][Bc]=tmp[k];\n\t\t\t\t\t//printf(\"B%d \",card[2][Bc]);\n\t\t\t\t\tBc++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\nprintf(\"\\n\");\n\n/*????????????*/\nfor(i=0;i<3;i++){\n  for (j=0; j<9; ++j) {\n    for (k=j+1; k<9; ++k) {\n      if (card[i][j] > card[i][k]&&card[i][k]!=0) {\n        ntmp =  card[i][j];\n        card[i][j] = card[i][k];\n        card[i][k] = ntmp;\n      }\n    }\n  }\n}\n/*???????????°??¨\nfor(i=0;i<3;i++){\n\tfor (j=0; j<9; ++j) {\n\t\tprintf(\"%d\",card[i][j]);\n\t}\n}\n*/\nprintf(\"\\n\");\n\tfor(i=0;i<n;i++){\n\t\tif(Rc%3==0&&Gc%3==0&&Bc%3==0){\n\t\t\tfor(i=0;i<3;i++){\n\t\t\t\tfor (j=0; j<9; j+=3) {\n\t\t\t\t\tif(((card[i][j]==card[i][j+1]-1)&&(card[i][j]==card[i][j+2]-2))||(card[i][j]==card[i][j+1])&&(card[i][j]==card[i][j+2])){\n\t\t\t\t\t\t/*????????¶????????£?????????????????°???????????????*/\n\t\t\t\t\t\tif(card[i][j]!=0||card[i][j+1]!=0||card[i][j+2]!=0) hantei++;;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(hantei>=3)printf(\"1\\n\");\n\t\t}else{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t}\nprintf(\"\\n\");\n\n\t\n\treturn 0;\n}\n\n/*\n???????????????????????? 9????????? 1???9 4?????????\n?????????9??????????????????\n???????????????1?????¨?????????1??????????????????\n???1*3??????123???1?????????\n???1*2???1???0?????????  ?????????????????¨??\n\n\n?????????¨?????????\n????????????§?????????%3??§????????????\n?°?????????????????????????\n??°????????????\n\n\n\n\n*/"
  },
  {
    "language": "C",
    "code": "#define R(i,n)for(i=0;i<n;i++)\nint N,i,j,k,f,n[9];char h;int main(){scanf(\"%d\",&N);R(i,N){int c[3][12]={{0}};f=1;R(j,9){scanf(\"%d\",&n[j]);}R(j,9){scanf(\" %c\",&h);c[h=='R'?0:h=='G'?1:2][n[j]-1]++;}R(j,3){R(k,12){f&=c[j][k]>=0;c[j][k]%=3;if(k<9){c[j][k+2]-=c[j][k];c[j][k+1]-=c[j][k];}}}printf(\"%d\\n\",f);}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint card[3][10];\n\nvoid format_card(void);\nint check(void);\nvoid view(void);\n\nint main(void) {\n\tchar color[10];\n\tint value[9];\n\tint i, j, num, flag = 0;\n\tscanf(\"%d\", &num);\t\t\t\t\t\t\t\t\t\t//データセット数の取得\n\tgetchar();\t\t\t\t\t\t\t\t\t\t\t\t//改行の読み飛ばし\n\tif (num < 0) { num = 0; }\t\t\t\t\t\t\t\t//下限値のチェック\n\tif (num > 50) { num = 50; }\t\t\t\t\t\t\t\t//上限値のチェック\n\tfor (i = 0; i < num; i++) {\n\t\tformat_card();\t\t\t\t\t\t\t\t\t\t//配列の初期化\n\t\tscanf(\"%d%d%d%d%d%d%d%d%d\", &value[0], &value[1], &value[2], &value[3], &value[4], &value[5], &value[6], &value[7], &value[8]);\n\t\tgetchar();\n\t\tscanf(\"%c %c %c %c %c %c %c %c %c\", &color[0], &color[1], &color[2], &color[3], &color[4], &color[5], &color[6], &color[7], &color[8]);\n\t\tgetchar();\n//\tprintf(\"%c,%c,%c,%c,%c,%c,%c,%c,%c\\n\", color[0], color[1], color[2], color[3], color[4], color[5], color[6], color[7], color[8]);\n\t\tfor (j = 0; j < 9; j++) {\t\t\t\t\t\t\t//配列へ格納\n\t\t\tswitch (color[j]) {\n\t\t\tcase 'R':\n\t\t\t\tcard[0][value[j] - 1] ++;\n\t\t\t\tbreak;\n\t\t\tcase 'G':\n\t\t\t\tcard[1][value[j] - 1] ++;\n\t\t\t\tbreak;\n\t\t\tcase 'B':\n\t\t\t\tcard[2][value[j] - 1] ++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tflag = check();\n\t\tif (flag == 3) {\n\t\t\tprintf(\"1\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"0\\n\");\n\t\t}\n//\t\tprintf(\"flag = %d\\n\", flag);\n\t}\n\treturn 0;\n}\n\nint check(void) {\n\tint i, j, flag = 0;\n\tfor (i = 0; i < 3; i++) {\t\t\t\t\t\t\t//オーバーのチェック\n\t\tfor (j = 0; j < 9; j++) {\n\t\t\tif (card[i][j] > 4) {\n\t\t\t\tcard[i][j] = 4;\n\t\t\t\tflag++;\n\t\t\t}\n\t\t}\n\t}\n//\tview();\t\t\t\t\t\t\t\t\t\t\t\t//確認用仮表示\n//\tprintf(\"flag = %d\\n\", flag);\n\tfor (i = 0; i < 3; i++) {\t\t\t\t\t\t\t//連番のチェック\n\t\tfor (j = 0; j < 9 - 2; j++) {\n\t\t\tif (card[i][j] > 0 && card[i][j + 1] > 0 && card[i][j + 2] > 0) {\n\t\t\t\tcard[i][j]--, card[i][j + 1]--, card[i][j + 2]--;\n\t\t\t\tflag++;\n\t\t\t}\n\t\t}\n\t}\n//\tview();\t\t\t\t\t\t\t\t\t\t\t\t//確認用仮表示\n//\tprintf(\"flag = %d\\n\", flag);\n\tfor (i = 0; i < 3; i++) {\t\t\t\t\t\t\t//同数のチェック\n\t\tfor (j = 0; j < 9; j++) {\n\t\t\tif (card[i][j] > 2) {\n\t\t\t\tcard[i][j] -= 3;\n\t\t\t\tflag++;\n\t\t\t}\n\t\t}\n\t}\n//\tview();\t\t\t\t\t\t\t\t\t\t\t\t//確認用仮表示\n//\tprintf(\"flag = %d\\n\", flag);\n\treturn flag;\n}\nvoid format_card(void) {\n\tint i, j;\n\tfor (i = 0; i < 3; i++) {\n\t\tfor (j = 0; j < 9; j++) {\n\t\t\tcard[i][j] = 0;\n\t\t}\n\t}\n}\nvoid view(void) {\n\tint i, j;\n\tprintf(\"\\n  1,2,3,4,5,6,7,8,9\\n\");\t\t\t\t\t\t//確認用仮表示\n\tfor (i = 0; i < 3; i++) {\n\t\tif (i == 0) { printf(\"R\"); }\n\t\tif (i == 1) { printf(\"G\"); }\n\t\tif (i == 2) { printf(\"B\"); }\n\t\tfor (j = 0; j < 9; j++) {\n\t\t\tprintf(\" %d\", card[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t//確認用仮表示\n}\n"
  },
  {
    "language": "Kotlin",
    "code": "import java.util.*\n\nfun main(args:Array<String>):Unit {\n    val r = Array(10){0}\n    val g = Array(10){0}\n    val b = Array(10){0}\n    repeat(readLine()!!.toInt()){\n        readLine()!!.split(' ').map(String::toInt).zip(readLine()!!.split(' ')).forEach { (i, c) ->\n            when(c){\n                \"R\" -> r[i]++\n                \"G\" -> g[i]++\n                else -> b[i]++\n            }\n        }\n        println(if (isSet(r) && isSet(g) && isSet(b)) 1 else 0)\n        r.fill(0)\n        g.fill(0)\n        b.fill(0)\n    }\n}\nfun isSet(array:Array<Int>):Boolean {\n    for (i in 0 until 10){\n        if (array[i] < 0){\n            return false\n        }else if (array[i] > 0){\n            if (i < 8){\n                (i .. (i + 2)).forEach{\n                    array[it] -= 1\n                }\n                if (isSet(array)) return true\n                (i .. (i + 2)).forEach {\n                    array[it] += 1\n                }\n            }\n            array[i] -= 3\n            if (isSet(array)) return true\n            array[i] += 3\n            return false\n        }\n    }\n    return true\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Card {\n    int num;\n    char color;\n}\n\npublic class Main extends Card {\n    static boolean solve(Card[] card) {\n        if(card.length == 3) {\n            if(!(card[0].color == card[1].color && card[1].color == card[2].color)) return false;\n            if(card[0].num == card[1].num && card[1].num == card[2].num) return true;\n            Arrays.sort(card, (a, b)-> a.num - b.num);\n            if(card[0].num + 1 == card[1].num && card[1].num + 1 == card[2].num) return true;\n            return false;\n        } else if(card.length == 6 || card.length == 9) {\n            int S = card.length;\n            for(int i = 0; i < S-2; i++) {\n                for(int j = i+1; j < S-1; j++) {\n                    for(int k = j+1; k < S; k++) {\n                        Card[] card1 = new Card[3];\n                        for(int l = 0; l < 3; l++) {\n                            card1[l] = new Card();\n                        }\n                        card1[0] = card[i];\n                        card1[1] = card[j];\n                        card1[2] = card[k];\n                        if(solve(card1)) {\n                            int count = 0;\n                            Card[] card2 = new Card[S-3];\n                            for(int l = 0; l < S; l++) {\n                                if(l != i && l != j && l != k) {\n                                    card2[count] = new Card();\n                                    card2[count] = card[l];\n                                    count++;\n                                }\n                            }\n                            if(solve(card2)) return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        } else {\n            return false;\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int i = 0; i < n; i++) {\n            Card[] card = new Card[9];\n            for(int j = 0; j < 9; j++) {\n                card[j] = new Card();\n                card[j].num = sc.nextInt(); \n            }\n            for(int j = 0; j < 9; j++) {\n                card[j].color = sc.next().charAt(0);\n            }\n\n            if(solve(card)) System.out.println(1);\n            else System.out.println(0);\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc=new Scanner(System.in);\n        int tt=sc.nextInt();\n        while(tt>0){\n            int[][] a=new int[3][15];\n            int[] b=new int[9];\n            int[] c=new int[9];\n            for(int i=0;i<9;i++){\n                b[i]=sc.nextInt();\n            }\n            for(int i=0;i<9;i++){\n                String s=sc.next();\n                if(s.equals(\"R\")) c[i]=0;\n                else if(s.equals(\"G\")) c[i]=1;\n                else c[i]=2;\n            }\n            for(int i=0;i<9;i++) a[c[i]][b[i]]++;\n            int ans=0;\n            for(int i=0;i<3;i++){\n                for(int j=0;j<3;j++){\n                    for(int k=0;k<3;k++){\n                        int s=9,t=9,u=9;\n                        for(int bit=0;bit<(1<<3);bit++){\n                            if((1&bit>>0)==1) s=7;\n                            if((1&bit>>1)==1) t=7;\n                            if((1&bit>>2)==1) u=7;\n                            for(int x=1;x<=s;x++){\n                                for(int y=1;y<=t;y++){\n                                    for(int z=1;z<=u;z++){\n                                        int[][] now=new int[3][15];\n                                        if(s==7){\n                                            now[i][x]++;\n                                            now[i][x+1]++;\n                                            now[i][x+2]++;\n                                            \n                                        }else now[i][x]+=3;\n                                        if(t==7){\n                                            now[j][y]++;\n                                            now[j][y+1]++;\n                                            now[j][y+2]++;\n                                        }else{\n                                            now[j][y]+=3;\n                                            if(now[j][y]>=5) continue;\n                                        }\n                                        if(u==7){\n                                            now[k][z]++;\n                                            now[k][z+1]++;\n                                            now[k][z+2]++;\n                                            if(now[k][z]>=5||now[k][z+1]>=5||now[k][z+2]>=5) continue;\n                                        }else{\n                                            now[k][z]+=3;\n                                            if(now[k][z]>=5) continue;\n                                        }\n                                        int flag=1;\n                                        for(int A=0;A<3;A++){\n                                            for(int B=1;B<=9;B++){\n                                                if(a[A][B]!=now[A][B]) flag=0;\n                                            }\n                                        }\n                                        if(flag==1){\n                                            ans=1;\n                                            break;\n                                        }\n                                    }\n                                    if(ans==1) break;\n                                }\n                                if(ans==1) break;\n                            }\n                            if(ans==1) break;\n                        }\n                        if(ans==1) break;\n                    }\n                    if(ans==1) break;\n                }\n                if(ans==1) break;\n            }\n            System.out.println(ans);\n            tt--;\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\t\t\t\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tcardSet.add(tehuda.get(i).getNum());\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t} else if(i == tehuda.size() - 1) {\n\t\t\t\t\tSystem.out.println(\"e2\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 == num2 + 1 && num1 == num3 + 2) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint gameset = sc.nextInt();\n\n\t\tCardRummy cr = new CardRummy();\n\n\t\tfor(int j2 =0; j2 < gameset; j2++){\n\n\t\t\tfor (int i = 0; i < CardRummy.CARDPAGE; i++) {\n\t\t\t\tfor (int j = 0; j < CardRummy.ONECARDSET; j++) {\n\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\tcr.card[i][j] = sc.nextInt();\n\t\t\t\t\telse {\n\t\t\t\t\t\tswitch (sc.next()) {\n\t\t\t\t\t\tcase \"R\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.RED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"G\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.GREEN;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"B\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.BLUE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcr.setCardset(cr.card);\n\t\t\t//cr.card = cr.getCardset();\n\n\t\t\t// game start\n\t\t\tint cnt = 0;\n\t\t\tcnt = cr.playtheGame(cr.card); // ?????????\n\t\t\t// game result\n\t\t\tif (3 <= cnt)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t}\n}\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// num\n\tfinal int NUMBER0 = 0;\n\tfinal int NUMBER1 = 1;\n\tfinal int NUMBER2 = 2;\n\tfinal int NUMBER3 = 3;\n\tfinal int NUMBER4 = 4;\n\tfinal int NUMBER5 = 5;\n\tfinal int NUMBER6 = 6;\n\tfinal int NUMBER7 = 7;\n\tfinal int NUMBER8 = 8;\n\tfinal int NUMBER9 = 9;\n\n\t// color\n\tstatic final int RED = 1;\n\tstatic final int GREEN = 2;\n\tstatic final int BLUE = 3;\n\n\tint[][] card = new int[CARDPAGE][ONECARDSET];\n\tCardRummy[][] ArrCR = new CardRummy[CARDPAGE][ONECARDSET];\n\n\tpublic CardRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn card;\n\t}\n\n\t// ????????????????????????????????\\??????\n\tpublic void setCardset(int[][] card) {\n\t\tthis.card = settingcardplay(card);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {// Error point\n\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\n\t\t\t\t// ?????????color???????????????\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\t// ???????????????????????????????????¨????????°?????£?¨????????????????????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// ??????color&num???????????????\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\t\t\t\t\t// ?????????????????????\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\tint cnt = 0;\n\t\t// ??????for????????????????¬??????¨???????????????\n\t\t// ex : [0][1][2] ....\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ??£????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ?????????????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][i] == cardset[0][k] - 2) {\n\t\t\t\t\t\t\t// Error point\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ???????????°????????????main????????????????????????????????????\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * ??????????????¬???\n *\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\n\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<CardTC> cardArr = new ArrayList<CardTC>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ???????????????????????£???\n\t\t\tif (transNum.length > transColor.length) {\n\t\t\t\t/**\n\t\t\t\t * ?????¶???\n\t\t\t\t * ??±??????????????°?????????????????????????????´???\n\t\t\t\t * ??±?????????????????????????????°??????????????´???\n\t\t\t\t *\n\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tprivate static int utRummy(ArrayList<CardTC> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void sameCard(ArrayList<CardTC> cardArr) {\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameCard????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void serialCard(ArrayList<CardTC> cardArr) {\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????????????????\n\n}// DebugRu?????????????????????\n\n/**\n * ?????????Card\n *\n * <pre>\n * ????????????????????????????????£????????¨???????????????????????????\n * ??????????????????????????§???\n *\n * 1. ?????????????????°??????????¨????????????¶?????????\n * 2. ????????§????±???¨??§???????????§????????????\n * 3. javadoc???????????????????????¨\n * 4. ??\\???????????????????????????????????????????????????\n *\n * ???????????????????????°\n * ??????????????????????????????????§£??????????????????????????????????????????????????£???????????¨\n * </pre>\n *\n * @author ?????????????????§???\n *\n */\nclass CardTC {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic CardTC() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic CardTC(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic CardTC(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// CardTC?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t//????????????????????°?????\\???\n\t\tint set = sc.nextInt();\n\t\tint[] num = new int[9];\n\t\tint[] color = new int[9];\n\t\tfor (int setCount = 0; setCount < set; setCount++) {\n\t\t\tint RCount = 0;\n\t\t\tint GCount = 0;\n\t\t\tint[] used = new int[9];\n\t\t\tint trueSet = 0;\n\t\t\t//??\\???\n\t\t\tfor (int count = 0; count < 9; count++ ) {\n\t\t\t\tnum[count] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t\tString cl = sc.next();\n\t\t\t\tif (cl.equals(\"R\") ) {\n\t\t\t\t\tcolor[count] = 0;\n\t\t\t\t\tRCount++;\n\t\t\t\t} else if (cl.equals(\"G\") ) {\n\t\t\t\t\tcolor[count] = 1;\n\t\t\t\t\tGCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcolor[count] = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//??????\n\t\t\tif ((RCount == 0 && GCount == 0) || (RCount == 0 && GCount == 3) ||\n\t\t\t\t(RCount == 0 && GCount == 6) || (RCount == 3 && GCount == 0) ||\n\t\t\t\t(RCount == 3 && GCount == 3) || (RCount == 3 && GCount == 6) ||\n\t\t\t\t(RCount == 6 && GCount == 0) || (RCount == 6 && GCount == 3) ||\n\t\t\t\t(RCount == 9) || (GCount == 9)) {\n\t\t\t\tfor (int xMaime = 0; xMaime < 7; xMaime++) {\n\t\t\t\t\tif (used[xMaime] == 0) {\n\t\t\t\t\t\tfor (int yMaime = xMaime + 1; yMaime < 8; yMaime++) {\n\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(used[yMaime] == 0) {\n\t\t\t\t\t\t\t\tfor (int zMaime = yMaime + 1; zMaime < 9; zMaime++) {\n\t\t\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (used[zMaime] == 0) {\n\t\t\t\t\t\t\t\t\t\tif (color[xMaime] == color[yMaime] && color[xMaime] == color[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] == num[yMaime] && num[xMaime] == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tint[] renban = new int[3];\n\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[yMaime] && num[xMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[yMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (num[yMaime] <= num[xMaime] && num[yMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[yMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (renban[0]+1 == renban[1] && renban[1]+1 == renban[2]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (trueSet == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\nclass Card {\n  public int f;\n  public int n;\n  public String c;\n\n  Card() {\n    f = 0;\n  }\n\n  void setSet(int _f) {\n    f = _f;\n  }\n\n  void setN(int _n) {\n    n = _n;\n  }\n\n  void setC(String _c) {\n    c = _c;\n  }\n\n  static int sub(Card x, Card y) {\n    if(x.f == y.f) {\n      if(x.c.equals(y.c)) {\n        return x.n - y.n;\n      } else {\n        return x.c.charAt(0) - y.c.charAt(0);\n      }\n    } else {\n      return x.f - y.f;\n    }\n  }\n\n  static void sort(Card[] cards) {\n    for(int i = 0; i < 9 - 1; i++) {\n      for(int j = 9 - 1; j > i; j--) {\n        if(sub(cards[j - 1], cards[j]) > 0) {\n          Card temp = cards[j - 1];\n          cards[j - 1] = cards[j];\n          cards[j] = temp;\n        }\n      }\n    }\n  }\n\n  static boolean isSameNumberSet(Card x, Card y, Card z) {\n    if(x.c.equals(y.c) && y.c.equals(z.c)) {\n      if(x.n == y.n && y.n == z.n) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static boolean isSerialNumberSet(Card x, Card y, Card z) {\n    if(x.c.equals(y.c) && y.c.equals(z.c)) {\n      if(z.n - y.n == 1 && y.n - x.n == 1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\npublic class Main {\n  static void printDebugInfo(String message, Card[] cards) {\n    boolean debug = false;\n    if(debug) {\n      System.out.println(\"After Input.\");\n      if(cards != null) {\n        for(int i = 0; i < 9; i++) {\n          System.out.print(cards[i].c);\n          System.out.print(cards[i].n);\n          System.out.print(\" \");\n          System.out.print(cards[i].f);\n          System.out.println(\"\");\n        }\n      }\n      System.out.println(\"\");\n    }\n  }\n\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int t = sc.nextInt();\n\n    for(int i = 0; i < t; i++) {\n      int setCount = 0;\n\n      Card[] cards = new Card[9];\n      for(int j = 0; j < 9; j++) {\n        cards[j] = new Card();\n      }\n\n      // data input\n      for(int j = 0; j < 9; j++) {\n        cards[j].setN(sc.nextInt());\n      }\n      for(int j = 0; j < 9; j++) {\n        cards[j].setC(sc.next());\n      }\n\n      printDebugInfo(\"After Input.\", cards);\n\n      // sort\n      Card.sort(cards);\n\n      printDebugInfo(\"After first sort.\", cards);\n\n      // 3?????????????????????????????°????????¢???????????????\n      for(int j = 0; j < 7; j++) {\n        if(cards[j].f == 1 || cards[j + 1].f == 1 || cards[j + 2].f == 1) {\n          continue;\n        }\n        if(Card.isSameNumberSet(cards[j], cards[j + 1], cards[j + 2])) {\n          printDebugInfo(\"set! \" + j + \" \" + (j + 1) + \" \" + (j + 2), null);\n          cards[j    ].f = 1;\n          cards[j + 1].f = 1;\n          cards[j + 2].f = 1;\n          setCount++;\n        }\n      }\n\n      printDebugInfo(\"After enumerate same number set.\", cards);\n\n      // sort\n      Card.sort(cards);\n\n      printDebugInfo(\"After second sort.\", cards);\n\n      for(int j = 0; j < 7; j++) {\n        if(cards[j].f == 1 || cards[j + 1].f == 1 || cards[j + 2].f == 1) {\n          continue;\n        }\n        if(Card.isSerialNumberSet(cards[j], cards[j + 1], cards[j + 2])) {\n          printDebugInfo(\"set! \" + j + \" \" + (j + 1) + \" \" + (j + 2), null);\n          cards[j    ].f = 1;\n          cards[j + 1].f = 1;\n          cards[j + 2].f = 1;\n          setCount++;\n        }\n      }\n\n      printDebugInfo(\"Final.\", cards);\n\n      if(setCount >= 3) {\n        System.out.println(1);\n      } else {\n        System.out.println(0);\n      }\n\n      printDebugInfo(\"\", null);\n    }\n  }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\t// ???????????????????????°?????\\???\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\t// 9????????????????????°???????????????????´?\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\t// 9?????????????????????????????????????´?\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\t\t\t// ?????\\?????????????????´???\n\t\t\tint[][] hasCard = hasCardSet(cardNum, cardColor);\n\n\t\t\t// ?????????????????????????????????????????????????????§???????????????\n\t\t\tRummyJudge rummyJudge = new RummyJudge();\n\n\t\t\t// ?????£??????????????°?????\\???????????°\n\t\t\tint point = 0;\n\n\t\t\t// ???????????§????????°?????????????????£???????????????????????¢????????????????????????\n\t\t\tpoint += rummyJudge.sameNumberCheck(hasCard);\n\n\t\t\t// ???????????§??£???????????£???????????????????????¢????????????????????????\n\t\t\tpoint += rummyJudge.continuousNumberCheck(hasCard);\n\n\t\t\t// 3??????????????£????????????1???????????????????????????\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n\n\t// ?????\\?????????????????????????????´?????????????????????\n\tprivate static int[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\t// ????????????????´???????????¬??????????\n\t\tint[][] hasCard = new int[3][9];\n\n\t\t// ???????????????????????????\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\t//1???9?????§???????????????????????´????????°??????????´¢\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\t// ??????????????????????????°???????????????????????§???\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\t// ???????????????????????£???????´?????????????\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n}\n\nclass RummyJudge{\n\n\t// 3????????°?????????????????????????????????????´¢??????????????????\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\t// ???????????°???????´????????????°\n\t\tint point = 0;\n\n\t\t// ???????????????????????????????????§???\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\t// ??????????????´????????????????????°??????3?????\\??£??????????????????\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\t// 3???????????°??????????????????\n\t\t\t\t\tpoint++;\n\t\t\t\t\t// ?????????????????£????????????????¶????\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// ???????????§3?????£???????????£??????????????????????????????????´¢??????????????????\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\t// ???????????°???????´????????????°\n\t\tint point = 0;\n\t\t// ?¶???????????????°?????????????????????????????°\n\t\tint continuousCount = 0;\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\t// ???????????£?¶???????????´????????????°????????\\??£??????????????????\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\t// ??°????????\\??£???????????°??????????????????\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\t// ??£?????????????¶??????????????????????\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\t// ???????¶???????????????°??????????????????\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\t// ?????????????????£????????????????¶????\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\t// ????´???????0????????????????????????????????????????????????????????°????????????\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\t// ??£???????????????????????????\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ??£?????????????¶????????????£????????£???????????????????????????\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "package Rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tString ans = \"\";\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\t\tif(R.size()%3 != 0 || G.size()%3 != 0 || B.size()%3 != 0){\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tif(numSearch(R)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tif(numSearch(G)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tif(numSearch(B)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\n\tprivate static boolean numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tswitch(r.size()){\n\t\tcase 3:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return true;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return true;\n\t\t\tbreak;\n\n\t\tcase 6:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif(i == 2) return true;\n\t\t\tbreak;\n\n\t\tcase 9:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif( r.get(6) == r.get(7) && r.get(6) == r.get(8) ) i++;\n\t\t\tif( r.get(6) == r.get(7)-1 && r.get(6) == r.get(8)-2 ) i++;\n\t\t\tif(i == 3) return true;\n\t\t\tbreak;\n\n\t\t}\n\n\t\treturn false;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\tpublic static final int countMax = 30;\n\n\n\tpublic static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException\n\t{\n\t\t// TODO 自動生成されたメソッド・スタブ\n\t\tint a = Integer.parseInt(input(1)[0]);\n\t\tfor(int i = 0; i < a; i++)\n\t\t{\n\t\t\tString[][] str = {input(9), input(9)};\n\t\t\tchar[][] c = new char[9][9];\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tc[0][j] = str[0][j].toCharArray()[0];\n\t\t\t\tc[1][j] = str[1][j].toCharArray()[0];\n\t\t\t}\n\t\t\tQuickSort(c[0], 0, 8, c[1]);\n\t\t\tboolean[] b = {false, false, false, false, false, false, false, false, false};\n\t\t\tSystem.out.println(checkWin(c, 0, 0, 0, b) ? \"1\" : \"0\");\n\t\t}\n\t}\n\n\tpublic static boolean checkWin(char[][] str, int num, int select, int select2, boolean[] b)\n\t{\n\t\tboolean b2 = false;\n\t\t//if(num % 3 == 2) System.err.print(\"| \" + str[0][select] + \" \" + str[0][select2] + \" \");\n\t\tif(num % 3 == 0)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b2) return true;\n\t\t\t\t//if(num == 0) System.out.println(i);\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\tb2 = checkWin(str, num + 1, i, 0, b);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 1)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\t//System.err.println(b[i] + \" \" + i);\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(b2) return true;\n\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t{\n\t\t\t\t\t\t//System.err.println(str[0][select] + \" \" + str[0][i] + \" \" + select + \" \" + i);\n\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\tb2 = checkWin(str, num + 1, select, i, b);\n\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 2)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(b2) return true;\n\t\t\t\t\t//System.err.println(str[0][select] + \" \" + str[0][select2] + \" \" + str[0][i] + \" \" + j + \" \" + i + \" \" + num);\n\t\t\t\t\tif(num == 8)\n\t\t\t\t\t{\n\n\t\t\t\t\t\tif(str[1][select] == str[1][i] && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(j == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str[0][select] == str[0][i] && str[0][select2] == str[0][i]) return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//System.err.println((str[0][select] == str[0][i] + j) + \" \" + (str[0][select2] != str[0][i] && str[0][select] != str[0][select2]));\n\t\t\t\t\t\t\t\t//System.err.println((str[0][select2] == str[0][i] + j) + \" \" + (str[0][select] != str[0][i] && str[0][select] != str[0][select2]));\n\t\t\t\t\t\t\t\tif(str[0][select] == str[0][i] + j)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(str[0][select2] != str[0][i] && str[0][select] != str[0][select2]) return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(str[0][select] != str[0][i] && str[0][select2] != str[0][select]) return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(str[1][select] == str[1][i] && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(j == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str[0][select] == str[0][i] && str[0][select2] == str[0][i])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str[0][select] == str[0][i] + j)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(str[0][select2] != str[0][i] && str[0][select] != str[0][select2])\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(str[0][select] != str[0][i] && str[0][select2] != str[0][select])\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*if(((str[0][select] == str[0][i] + j && j != 0) || (j == 0 && str[0][select] == str[0][i])) && str[1][select] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select2] == str[0][i]) || (j != 0 && str[0][select2] != str[0][i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//System.err.println(str[0][i] + \" \" + num + \" \" + j);\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(((str[0][select2] == str[0][i] + j && j != 0) || (j == 0 && str[0][select2] == str[0][i])) && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select] == str[0][i]) || (j != 0 && str[0][select] != str[0][i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//System.err.println(str[0][i] + \" \" + num + \" \" + j);\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}//*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn b2;\n\t}\n\n\tpublic static int loop(int num, int sum, int max, boolean[] b, int now, int upper)\n\t{\n\t\tint a = num;\n\t\tif(max == now)\n\t\t{\n\t\t\tint c = 0;\n\t\t\tfor(int i = 0; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) c += i;\n\t\t\t}\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tif(c + i == sum)\n\t\t\t\t{\n\t\t\t\t\t//System.err.println(sum + \" \" + c + \" \" + i);\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\ta = loop(a, sum, max, b, now + 1, i);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static int[] toIntArray(int a)\n\t{\n\t\tint b[] = new int[8];\n\t\tfor(int i = 0; i < 8; i++)\n\t\t{\n\t\t\tb[i] = (a >> (i * 3) & 0b111);\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(int[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(Integer[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tstatic void QuickSort(int[] d, int left, int right) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right, tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r);\n\t\tQuickSort(d, l, right);\n    }\n\n\tstatic void QuickSort(char[] d, int left, int right, char[] c) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right;\n\t\tchar tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\ttmp = c[l]; c[l] = c[r]; c[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r, c);\n\t\tQuickSort(d, l, right, c);\n    }\n\n\tpublic static boolean SeparateSearch(int[] a, int b, int first, int end)\n\t{\n\t\tif(end - first <= 1)\n\t\t{\n\t\t\tif(a[first] == b) return true;\n\t\t\telse if(a[end] == b) return true;\n\t\t\telse return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint temp = (end + first) / 2;\n\t\t\tif(a[temp] == b) return true;\n\t\t\telse if(a[temp] < b) return SeparateSearch(a, b, temp, end);\n\t\t\telse return SeparateSearch(a, b, first, temp);\n\t\t}\n\t}\n\n\tpublic static int GCD(int x, int y)\n\t{\n\t\tint z = Math.max(x, y) % Math.min(x, y);\n\t\tif(z == 0) return Math.min(x, y);\n\t\treturn GCD(z, Math.min(y, x));\n\t}\n\n\tpublic static int SelectionSort(int a[])\n\t{\n\t\tint Select = 0;\n\t\tfor(int j = 0; j < a.length - 1; j++)\n\t\t{\n\t\t\tint[] min = {0, Integer.MAX_VALUE};\n\t\t\tfor(int i = j; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif(min[1] > a[i])\n\t\t\t\t{\n\t\t\t\t\tmin[1] = a[i];\n\t\t\t\t\tmin[0] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j != min[0])\n\t\t\t{\n\t\t\t\tSelect++;\n\t\t\t\tswap(a, min[0], j);\n\t\t\t}\n\t\t}\n\t\treturn Select;\n\t}\n\n\tpublic static int BubbleSort(int a[])\n\t{\n\t\tint swapp = 0;\n\t\tboolean flag = true;\n\t\twhile(flag)\n\t\t{\n\t\t\tflag = false;\n\t\t\tfor(int i = 0; i < a.length - 1; i++)\n\t\t\t{\n\t\t\t\tif(a[i] > a[i+1])\n\t\t\t\t{\n\t\t\t\t\tswapp++;\n\t\t\t\t\tswap(a, i, i+1);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn swapp;\n\t}\n\n\tpublic static void swap(int[] a, int x, int y)\n\t{\n\t\ta[x] = a[x] ^ a[y];\n\t\ta[y] = a[x] ^ a[y];\n\t\ta[x] = a[x] ^ a[y];\n\t}\n\n\tpublic static String[] inputOne() throws IOException\n\t{\n\t\tString str2 = br.readLine();\n\t\tString[] str = new String[str2.length()];\n\t\tfor(int i = 0; i < str.length; i++)\n\t\t{\n\t\t\tif(i < str.length - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i, i+1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\n\tpublic static String[] input(int Num) throws IOException\n\t{\n\t\tString str[] = new String[Num];\n\t\tString str2 = br.readLine();\n\t\tint j = 0;\n\t\tfor(int i = 0; i < Num; i++)\n\t\t{\n\t\t\tif(i < Num - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j, str2.indexOf(\" \", j));\n\t\t\t\tj = str2.indexOf(\" \", j) + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\t//*/\n\n\t/*\n\n`           `            ```.(-~_````````````....-_~(?><___-``````````````.`````````````````````..__.~~~~~~~~~jI==lOXx.        ```\n`` `  `    `               .z<```````````..`.....~(+=>>>:~<<;___. ```````````````````````````...``-(_.~~~~~~~~(w===lOUI<.\n` ` `` `  `    `      `  .(!```````````````.``..~(?z>><!~``_~~~;<<-- ``````````````````````````._.`-<_.~~~~~~~:zz==zOzWOl\n`  ` `  `   `   ` ` `  .(! `````````````````...-(??;<`` ` `  `  _~<<+<-.````````.````.``````````..-._+_~~~~~::~(I==?OwOXk:\n`` ` `     `  `   `   -!``````````````````````._+==1-.```````` `   _~<<<+-....```.`````````````.``_~~(<_~~::::::zz1==wwrXX;`\n` ``` ` `    `   `  .<_``.``````````````` ` ``.(==lll&-``` `` ``````` _~(<1z-__..``.`````.``````..`_~~+<~~::::::(I+lOzkvvXk.\n` `  `   `    `  `.(!. _``````````````  `  ``` (=lttttO-``````` ` `````` _~<1Oz+--..````` .``````...~~(z_~(;:;;;;O>zttXuzwWn\n ` ` ` `   `     _~_..~```````````` ```` `````_+lltrrtlz_` `` ```` ` ` ```` _~?Ozwo-....` .~ `````.._~(=<_~;;>>>>z?ztOZuuuXW{`\n  ` ` ` `  `   .!..-(!`````````````` ` ````_-._ltrrrrrlw>``````` `` ``````````._?1zO+_...`-~_.````..-~~+z<:<>>>>>l?ztzVuuuuXR_\n    `  `    `.~~.._(> ````````````` ` ` ` ._(1_<zvrrvvwrI_```````````` `````````` _<1z<_~_._(< ````.-~~;zz<<>>>>?=?=tzWZuuuuXl\n `` ``  ` ` .<_..(zv_````` ```` .` `````._(z+zOz+OOvOwOvI__ ``````````````````````` _1+;<___:;< ```._~_:+O<<>>???===tlXyZzuZyk.`\n ` ` `` ` `.>~_.(zv<_`  ` ```` ~ `` ```._;+I~~_...~~~_~~1<~_-`````````````````````.`._<11?<.(<>_.`.._~(:;zz>????===lllXVXuuyyXl\n  `   `  `.>~~~_zI<_``` `````-~_`` ``` _;<<<~~~........_(<_~_.``` .`````````````.`..`.-(1=?<~<z;_..._::<:+Z>?>???===llXykuuXVVk.\n` ` ` ` `.<~~~_jI<~_  ``  ``.__` ``  `.<<:~~~...........~(<_:<_.``._``````````.``.`....-(l==<(1<>_..~~:><;zz????===lllXfkzuXffW[ `\n ` ` ` `.<::~(<dZ<~_ `  ``` (<_`  ```._::~~~....```````.__<<:<<_...-_.. ````.``..`.`...._1Ozz_+z+z_.~~:<<;+I????===llOWpHzuXfWkH\n `      (;:(;;juC~~  `` ```_:~`` ```._::~~~....``````````._<>;<z-...(-~__..`.............(zOt<(O>1>~_:;>?>>z????===llOWkHzXfpWqH;`\n  ` `  .;;;+>juZ<(<` ``` ` (<_  ````_~::~~~...````````````._<>>1<_-._1-_<_..`............_<OzI:Oz+O_~(>;???1z?====lltwWkHuWpbqqHb`\n     ` (;;;+?yuI~+~```````.(~~   `` ~~:~~....`.````````````._:;+z<<_.(G-(>-__.`........~..(1ww<zO<jI~(>>????==?==llttdkkSwWkqmmHM-\n      .z>?>1zuZ>(I_``.``` _:~_` ` `.~::~...````````````````` _><1z><_.jk:<1+___...~~~~.~~..<zzI+wz+X<<?>>????======ttdkbSdWqH@gg@k\n `  ``(v???jZuI;zI........_::_```` _:::~...`````````````````` <<_+11<__Oc:<+z+<__~.~~~~~~~~_1wwzzI<dI;+>>?>????===lOzWbWXXqH@@@@@g\n      jI==?dXuI+wI~~~~~~~~~::_```` (:<<~..`.````````````` ````-1__<+w<:<O<:;+zz+:~~~~~~~~~_~(wvI?z>dXz>>>?????====zIdWkSwWHM@@@@@@\n      Oll=1XZk<zyI:~::::~::::_````-;>><~.```.````````` ``````` (>.__?111zO<>_<zrw+<;<_::((<_(OvO=<;zXO<;<>>????===zzdkWXW@@@@@@@@@\n      ZlllzyyI?dV0;:;::::::;;__..._;>><..`.````.``````` ``  ``` >  ..dX0OlI<<::?OXO=??<;;;;::zvtz<:zvvI;<?>>???==zI>XWXWg@@@gggggg\n      ZttldVZZzXf0z>>>;;;::;1<_..._;>><_..`...`````````` `` `   (HW9!___+Xwc~_~<<jXAOz>>;;:;;+wOz<_ztwI;;>>>>????l<jHWH@ggggggggH@\n      OtttdfyXvXVkO??>>>>>;>+O<~~~_;>?<<__--....```` ` ` `````.J9<` ``. _1Zk+.._+<+wXXz>1&+<;+zOO>_zZzZ>;;;>>>???1>jHkHH@@@@HMMMHY\n      zrrrdVWXwXyWO????>>>>>>zz_~~~;+<<~__~<?11z+-```````  `````  ``````._<OU&(jggggHmmmewy<?zz<<! (<+O>;;;>>>>>???dkkkbbHHHHkSvI(\n    ` jrrrXy0XuZZVk=????>??>>+rz:~~<?<~` ..._(((><_`````````  ``` ``...-(jWNMMMMMMMMMMMMBMHMNm<_``` <>1<;;;;>;;>+1jgHkkkkWkWHHwvz1\n     `(trrXyVzuZZXW==?>>>?=?>>OO+::(1+((--(-__(1z_:_`````````` ````..-JdHWMMMNNMHHHHMYWB>_vM##v_...-<z+z;;;;;;:;>+dBTTUWWWUXHHzOwZ\n      .OrrwZCzuZZZWc1z>>>>1z>?ztl+_:dWWMMHHMMMNmg&+-.```` ````````` -dUC<~zHMMM@gg@@@N+.; (VU=_...._(?>=>;;;;;::+z>~(rwXC<jMMN<1wZ\n       jrrXk>(ZZZZX$<Oz>>>?l<<lltz+:<OOCz+<d#M@MM#M8:`````` ````````` `   (WHH@@@g@@@@@H: ?<_.`....~(>>1z;:;;;:<zw>~+v<<_(HMMNl_jW\n       .zwXk!.XZZZyW<(O>>>>Oz;zlllO<;1z<~(<(MHH@#MI<`````````````````````` 7YTTWHH@@@@H6_..........~<>>jc:;>>;;<zuc~~_..(WMMNNl_+z\n        (wXk~ (XXyZWs.jI>>;+w<<Ot=OO;+OA-._-dMM@MMQm,```````````````````` `-((JUHHWXwZC~......~~~~~_+<+zI;>>>>;+wuI~~_~(HM@HNN>.zO\n       ` zXW_` <wyZyW_ jz>;;jI:+rz1lz+=wk-..(UWHHMH9!``````` ``` ````````` -(UWkkWWV=~~~~~~~...~..~(<<zr>;>???>jwuC~._(HHHHHHN: (?\n     ` ``(Oy_ ` _zWZWl` ?1>;;z+;1tO+1???OZ--.(wkzXWZ!``` ``````````````` ``` `_~~`....~~~~~~~~~~.~_<<(tr<+=????zZOz(JdHHHHHH@N>  ;\n          (X}  ` _<?XW;` _<<;+O<:?Oz????<Oz__<<<<!_```````````````````````````````.......~..~.~.._<<(ztr<z=????zXQqHHMHHVHHH@H:\n           (k.`     _?Ti ``` ?jwo_<1z<+=>+O<......```````` `````` ``````````````..`.....~.~.~~.._<<~(lrZ+I==?=zwWHHHWUU0Od@@@H_\n           `j+       `  __``   1OI_~+z(:;:zz_.``````````````````````````````````.```....~.~~~.._:~.(lOvwO==???dZO<;<1OuuldgH@H_  `\n             ?!               `++zz_~<z<::(w:..```````````` ``` ``` ````````````````....~..~_-_::__jOwuuwz????dIw>;++1wuOwHWHH;`\n                               (v?><__1z<:(tz_`````````````````` ``` ``````````````.......~.._::~_(wZuZuw<+???z=wI>??=zuOwWXWH}\n               `                ?+><<__1z_~1z> ``````` ` ````````````` ````````````......__._::~.(dZZZZuX<+=?1V=z0>???zwOOyuWk$\n                            `   +=+?1<__1o_(zw+_``` ` ``` `````````````` `````````....~_(<~_:~~~_dZyyZZuX<>??zw=zX>>?=?zZlXvXWS\n                                1==111<~_1z<<zw<_````` `````` ``...``````` `` ```...._(<<~_(~~~_jZyyZZZuZ<>??zw=zXz>?=?=OtdZwX0_\n          `                   ` +=lOOl=+_~<1z<zXA+. ``` ````````````````````````..-_(<<:~~(~~_(jyyVyZZyZZ>>??zrz1dI>??=?ztdIzwX:\n                  `         `   z=lltrOz+<_(11zwwUX<--.  ` ````````````````````.-_(<::::~~:~_(jXyVVyyZyZZ?>>>Orz+wI>1????zwXzzul\n                               .z?=zttOOtzz++<?4kOwwXyXA&-..```````````````` .-(<<<:~~:~:~~_(1wXfVyyZyVXI?>;<ttz;zXz+z????OXI+XI_`\n                          `  ``(v>jOzzOOlttltrzzWOtwzZuXyZXwo+-. ````````` .(<<<::~:~_<~~~(<<1wyfyyyZyVkz?>;+zrv;+zz;z?>??zuZ>zw_.\n                              .+<:+wXz><1zltlltturwuwXzXX0uuZuuXy+-.`` --(+<<:::~~:~~(<_(<~~~<zyyyyyZyfkz>>;1lwO<<OI<jz>??1wXzzX>.\n          `                 ` (<;:+zXkXz>?=lttttwrwuwyzySzuuZZZZuZWA&(J&z<::~:~~:~:~~(_<<~~~~_jZyyyZyZWWz>>>z=Owz;zv><w????zzI1dl~\n                  `     `  ``.;;;;1wWHWWkzltrrrvvvzzwZuZXuzzuzuzuuuXXWWS<_~~:~~~~~~__+~~~~~~~~_?WyZuuZZXI??+jO=wI;?zO;jz???zrOzdI~\n                         `  .<<>;>zXHMHkkkOOrrvvvvuuXZZZuzvvzwvvuZWUC<_C_~~~~~~:~~~~(<~:~:~~~~:~_TZuzrOX0z>?zOlzX<<1Oz+z??==ztlzS_\n                          `.<:;1zzdHHHqqHHkytrrvvvzuuuuuuwrtrrrZ=7!_```-:.~~~~~~~~.(c~~:~~~~~~~~~._?CXuwrz>>?tO=zO<<zOz1????=OzzS;\n          `       `   ` ` .+:(uQkWHqqqH@@@HHwtOwwZO777??!~```  ````````(!..~~~~~~~.(~~~~:~~~~~~~~....._<?111+zlz1zw++zOz???>?zOlXz\n                        `.+<(dHHHH@Hmggg@MY!~ `````````````````````````__....~~~~.~<~~~~~~~~~~~~.~.......`.`. _~!??777zwwzz??zwrww\n                       `.z<:+WHHM#HM@HH9^````` ....`````` `` ``````````......~.~.~~<~~~~~~~~~~....~......```````````.-_<zUXAOzrzXy\n                    ` `.zz<<d@MNNNNM3~._```````_..```. ... `````````.`..`......~~~~~~~~~~~~...........``````````` .JuwXWHH@@HkkkXf\n          `       `  ` +??+zHMMNNNF_..```````` _. ``` `      ``````.```.........~~~~~~~~.........`.````````````.(twQHM@@@@@HHHMHg@\n              `  `  ` (==l=dMMMMMD...``````. `._ ``` ``````` _...`..`..`.........~~___`....`.``````````````` .(ugHMMHH@@MHHHHHHkff\n               `     (1tlluMMNMNF....`````. ` _``` ``` ``````` _~___..`......~~_`````````````````````````` .JdHHmmH@MHHHHWWpWyWHHH\n          `       ``.1wrlzdMMNN#~..__````````-.` `` ````` ```````` `___--_~~._.````````````````````````` .jXbpkmmHHHUUuzvzVUZyVfpf\n                `  .+zuwzdMMMMMK_.(> ``````` ._` `` ` `````` `````````  ``` ````````````````````` ` `  .uWbpbkHbpWUXzzZOz11>;<1zvU\n                ` .+zX0rwWMNN#Ht`.d}   .``  ~. `` ```````````` ````````` ` `` `` `````` ``````` `` ` .dWUZXyyfWU0vwwC<>;>>>>;:<zrt\n                  (=dXvXWMMNNMH% (#`   . ``._.```````` ```` ``` ` ` ` ` `  `  `  `  `` ``` ` ` ``` .dWZZXyWUXXX0VC<<(>;;;;<<<:(+wy\n          `   `` .=zXXwXHMNNN#M:.Ht  ` ~_``.~.``` `` ```````` ```` ``` ` ``  ` `` `` ``` `` ```` (XWyZyyyZXXp9C<~~~(<<:~~~_((+zwXf\n               `.+zw0rXXMNNNNNN<.wA+.` ~_``.~_```` ```````````` ``` `  `  ` ` `  ` `` ` ` ````.(HHHVVVWXWpWY>~~~~~:~~~~_:<?COVZXzu\n            ` ` (trwzzXHNNNNMNN>(wWMs_` _``.._-` ```````` `` ```  `` `` `  ` ` ``   `  ` `  .JHMHHWHmHHUY>:::~:~~~~_((><<<~~~<1Owu\n             ` (OrrwXwX#NNMMNM$_(XWMMy-`. ``.~__````````````` ``` `  ` ``` ` ` ` `` `` `  .d@M@@HHH90C;:::::;<::~~:~::::~~~~~.._<?\n          `   -wzzuuvdMMMMMM6<:(wXyWMHk,__   ._~-` ````````````  `  `` ` `  ``` ````` ..gMMMH9UYYC<<<+<<<<:::::_((_:~::::~~~~_...`\n\n\t */\n\n\n\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.TreeSet;\nimport java.util.Arrays;\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n          int n=sc.nextInt();\n          int x[][]=new int[3][9];\n          int y[]=new int[9];\n         while((n--)!=0){\n            int count=0;\n             for(int i=0;i<3;i++){\n                 for(int j=0;j<9;j++){\n                     x[i][j]=0;\n                 }\n             }\n             for(int i=0;i<9;i++){\n                 y[i]=sc.nextInt();\n                 y[i]--;\n             }\n             for(int i=0;i<9;i++){\n                String a=sc.next();\n                if(a.equals(\"R\"))x[0][y[i]]++;\n                if(a.equals(\"G\"))x[1][y[i]]++;\n                if(a.equals(\"B\"))x[2][y[i]]++;\n            }\n           \n            for(int i=0;i<3;i++){\n                for(int j=0;j<7;j++){\n                    if(x[i][j]>=1&&x[i][j+1]>=1&&x[i][j+2]>=1){\n                        x[i][j]--;x[i][j+1]--;x[i][j+2]--;\n                        count++;\n                        j--;\n                    }\n                    }\n                }\n                    for(int i=0;i<3;i++){\n                        for(int j=0;j<9;j++){\n                            if(x[i][j]==3){\n                                x[i][j]-=3;\n                                count++;\n                            }\n                        }\n                    }\n                        if(count==3)System.out.println(1);\n                        else System.out.println(0);\n            }\n            \n         \n}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\t// CheckResult????????????????§?\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t@SuppressWarnings(\"resource\")\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// R,G,B???????????\\??????????????°\n\t\tString colorStr = \"\";\n\n\t\t// R,G,B???????????§false?????¨???+1???????????????\n\t\tint flgCount = 0;\n\n\t\t// CheckResult???????????????????????????????????????\n\t\tCheckResult ck = new CheckResult();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\n\t\t\t// CheckResult?????????????????????????????????????´?\n\t\t\tfor (int i = 0; i < COLUMN_NUMBER; i++) {\n\t\t\t\tck.scanNumber[i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < COLUMN_NUMBER; i++) {\n\t\t\t\tck.scanColor[i] = scan.next();\n\t\t\t}\n\n\t\t\t// R,G,B????????????????????????????????????????????????\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\tcase 0:// R(??¬??????)?????´??? colorStr???R?????????\n\t\t\t\t\tcolorStr = \"R\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:// G(??°?????????)?????´??? colorStr???G?????????\n\t\t\t\t\tcolorStr = \"G\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:// B(?????????)?????´??? colorStr???B?????????\n\t\t\t\t\tcolorStr = \"B\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// colorStr(???)?????????????????°??????CheckResult????????????numberStor?????????????????????\n\t\t\t\tck.getColorToNumber(colorStr);\n\n\t\t\t\t// ????????????(true)?????¨???flgCount???+1??????\n\t\t\t\tif (!ck.numberCheck()) {\n\t\t\t\t\tflgCount++;\n\t\t\t\t}\n\t\t\t\tck.numClear();\n\t\t\t\t//System.out.println(flgCount);\n\t\t\t}\n\t\t\t// ?????? flgCount?????????1??\\????????¨???1?????????\n\t\t\tsb.append(flgCount == 0 ? \"1\\n\" : \"0\\n\");\n\n\t\t\t// flgCount????????????\n\t\t\tflgCount = 0;\n\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// --------------------check?????????------------------------------------\n\nclass CheckResult {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t// Scanner????????\\??????????????????????´?????????????\n\tpublic int scanNumber[] = new int[COLUMN_NUMBER];\n\tpublic String scanColor[] = new String[COLUMN_NUMBER];\n\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tprivate int[] num = new int[COLUMN_NUMBER];\n\n\t/**\n\t * color??????????????????scanColor??¨???????????§????????°????????????scanNumber?????????CheckResult????????????numberStore???????????????\n\t * @param color\n\t */\n\tpublic void getColorToNumber(String color) {\n\t\t// color??§??????????????????????????§????????°scanColor???????????????scanNumber?????????CheckResult????????????numberStore???????????????\n\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\tif (scanColor[count1].equals(color)) {\n\t\t\t\tnumberStore(scanNumber[count1]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * getColorNumber??????????????§?????¶????????£?????????(??????)num[]???????´?\n\t * (??????)num[]?????°????????°???????´?????????????\n\t * @param number\n\t */\n\tprivate void numberStore(int number) {\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t}\n\n\t/**\n\t * ??\\??????????????°?????§????????????3?????\\???????????´?????¨?????£???????????£???????????´?????? ?????????????????? ??????????????´??????true????????????????????´??????false?????????\n\t */\n\tpublic boolean numberCheck() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < COLUMN_NUMBER; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isNumberResult();\n\n\t}\n\n\t/**\n\t * num[9]???????????¨????????????0??§????????¨???true????????????1?????§???1??\\???????????°false?????????\n\t * @return\n\t */\n\t// ?????????true ??? false??§??????\n\tprivate boolean isNumberResult() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\tboolean ret = true;\n\t\tfor (int n : num) {\n\t\t\tif (n != 0) {\n\t\t\t\tret = false;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\t\n\t/**\n\t * ??????num??????????????????\n\t */\n\tpublic void numClear(){\n\t\tnum = new int[COLUMN_NUMBER];\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!Check(counter[0] % 3) || !Check(counter[1] % 3) || !Check(counter[2] % 3)) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) { \n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static int[] value;\n    public static char[] color;\n    \n    public static void main(String[] args) throws Exception {\n        Scanner in = new Scanner(System.in);\n        \n        int TC = in.nextInt();\n        while (TC-- > 0) {\n            value = new int[9];\n            color = new char[9];\n            \n            for (int i = 0; i < 9; i++) {\n                value[i] = in.nextInt();\n            }\n            for (int i = 0; i < 9; i++) {\n                color[i] = in.next().charAt(0);\n            }\n            \n            if (shwe(\"\", 0, new boolean[9])) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n    \n    public static boolean isValid(int a, int b, int c) {\n        if (color[a] != color[b] || color[a] != color[c]) return false;\n        if (value[a] == value[b] && value[a] == value[c]) return true;\n        int[] arr = {value[a], value[b], value[c]};\n        Arrays.sort(arr);\n        if (arr[0] == arr[1] - 1 && arr[1] == arr[2] - 1) return true;\n        return false;\n    }\n    \n    public static boolean isValid(String str) {\n        int a = Integer.parseInt(str.charAt(0)+\"\", 10);\n        int b = Integer.parseInt(str.charAt(1)+\"\", 10);\n        int c = Integer.parseInt(str.charAt(2)+\"\", 10);\n        return isValid(a, b, c);\n    }\n    \n    public static boolean shwe(String ans, int pos, boolean[] visited) {\n        if (ans.length() == 9) {\n            if (isValid(ans.substring(6))) return true;\n            return false;\n        }\n        if (ans.length() == 6 && !isValid(ans.substring(3))) return false;\n        if (ans.length() == 3 && !isValid(ans)) return false;\n        if (pos >= 9) return false;\n        if (visited[pos]) return shwe(ans, pos+1, visited);\n        \n        boolean ret = shwe(ans, pos+1, visited);\n        visited[pos] = true;\n        ret = ret || shwe(ans+pos+\"\", 0, visited);\n        visited[pos] = false;\n        \n        return ret;\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    boolean checkNum(Set num1, Set num2, Set num3){\n        int i,j;\n        i = num3.num - num2.num;\n        j = num2.num - num1.num;\n        if(((i == 1) && (j == 1)) || ((i == 0) && (j == 0))){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\nclass DataComparator implements java.util.Comparator<Set>{\n    public int compare(Set o1, Set o2){\n        if(o1.color == o2.color){\n            return o1.num - o2.num;\n        }else{\n            return o1.color - o2.color;\n        }\n    }\n}\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n    Set[] card = new Set[9];\n\n    for(int i=0;i<n;i++){\n      for(int j=0;j<9;j++){ //input_numbers\n        card[j] = new Set();\n        card[j].num = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      for(int l=0;l<9;l++){  //check_color\n        switch(ch[l]){\n          case \"R\": card[l].color = 1;\n                    break;\n          case \"G\": card[l].color = 2;\n                    break;\n          case \"B\": card[l].color = 3;\n                    break;\n          default : break;\n        }\n      }\n      Arrays.sort(card, new DataComparator());\n\n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = card[j].num; \n          set1[j].color = card[j].color;\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = card[j+3].num;\n          set2[j].color = card[j+3].color;\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = card[j+6].num;\n          set3[j].color = card[j+6].color;\n      }\n\n      int accept = 0;\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n\n      if(check1.sameColor(set1[0],set1[1],set1[2])){\n          if(check1.checkNum(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameColor(set2[0],set2[1],set2[2])){\n          if(check2.checkNum(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameColor(set3[0],set3[1],set3[2])){\n          if(check3.checkNum(set3[0],set3[1],set3[2])){\n              accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    }//end_of_while\n  }//end_of_main\n}//end_of_Main"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static int same(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\tif (num[i] == num[j]) {\n\t\t\t\t\tint tmp = research(num, num[i]);\n\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t++count;\n\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int continuious(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\tif (num[i] - 1 == num[j]) {\n\t\t\t\t\tint tmp = research(num, num[i] - 2);\n\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = research(num, num[i] + 1);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (num[i] - 2 == num[j]) {\n\t\t\t\t\tint tmp = research(num, num[i] - 1);\n\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (num[i] + 2 == num[j]) {\n\t\t\t\t\tint tmp = research(num, num[i] + 1);\n\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (num[i] + 1 == num[j]) {\n\t\t\t\t\tint tmp = research(num, num[i] - 1);\n\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = research(num, num[i] + 2);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int research(int num[], int k) {\n\t\tfor (int i = num.length - 1; i >= 0; --i) {\n\t\t\tif (num[i] == k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static int judge(int num[], boolean b[]) {\n\t\tint count = 0;\n\t\tint j = 0;\n\t\tint number[] = new int[9];\n\t\tfor (int i : num) {\n\t\t\tif (b[i] == true) {\n\t\t\t\tnumber[j] = i;\n\t\t\t\t++j;\n\t\t\t}\n\t\t}\n\t\tif (number[2] == 0)\n\t\t\treturn -1;\n\t\t// same three number\n\t\tcount += same(number);\n\t\t// continious three number\n\t\tcount += continuious(number);\n\n\t\treturn count;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tboolean R[], G[], B[];// position of R,B,G\n\t\tint count;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new boolean[9];\n\t\tB = new boolean[9];\n\t\tG = new boolean[9];\n\t\tint i, j;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[j] = true;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[j] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[j] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\t\t\t\tcount = 0;\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tint tmp = judge(num, R);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\ttmp = judge(num, B);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\n\t\t\t\t// G\n\t\t\t\ttmp = judge(num, G);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\tif (count == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        int set = sc.nextInt();\n        int number[] = new int[9];\n        int Rnumber[] = new int[9];\n        int Gnumber[] = new int[9];\n        int Bnumber[] = new int[9];\n        int setcount = 0;\n        \n        for(int i = 0 ; i < set ; i++){\n            setcount = 0;\n            \n            for(int t = 0 ; t < 9 ; t++){\n                number[t] = sc.nextInt();\n            }\n            for(int c = 0 ; c < 9 ; c++){\n                String color = sc.next();\n                if(color.equals(\"R\")){\n                    Rnumber[c] = number[c];\n                }\n                else if(color.equals(\"G\")){\n                    Gnumber[c] = number[c];\n                }\n                else if(color.equals(\"B\")){\n                    Bnumber[c] = number[c];\n                }\n            }\n            \n            Arrays.sort(Rnumber);\n            Arrays.sort(Gnumber);\n            Arrays.sort(Bnumber);\n            \n            setcount += search(Rnumber);\n            setcount += search(Gnumber);\n            setcount += search(Bnumber);\n\n/*            \n            for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(Rnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Rnumber[time+time2] == Rnumber[time]+1 || Rnumber[time] == Rnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Rnumber[time+time2+time3] == Rnumber[time]+2 || Rnumber[time] == Rnumber[time+time2+time3]){\n                                    setcount++;\n                                    Rnumber[time] = 0;\n                                    Rnumber[time+time2] = 0;\n                                    Rnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Gの数字を検索\n                if(Gnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Gnumber[time+time2] == Gnumber[time]+1 || Gnumber[time] == Gnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Gnumber[time+time2+time3] == Gnumber[time]+2 || Gnumber[time] == Gnumber[time+time2+time3]){\n                                    setcount++;\n                                    Gnumber[time] = 0;\n                                    Gnumber[time+time2] = 0;\n                                    Gnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Bの数字を検索\n                if(Bnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Bnumber[time+time2] == Bnumber[time]+1 || Bnumber[time] == Bnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Bnumber[time+time2+time3] == Bnumber[time]+2 || Bnumber[time] == Bnumber[time+time2+time3]){\n                                    setcount++;\n                                    Bnumber[time] = 0;\n                                    Bnumber[time+time2] = 0;\n                                    Bnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }*/\n            \n            //System.out.println(setcount);\n            if(setcount == 3){\n                System.out.println(\"1\");\n            }\n            else{\n                System.out.println(\"0\");\n            }\n            \n        }\n        \n    }\n    \n    private static int search (int nums[]){\n        int setcount = 0;\n        for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(nums[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(nums[time+time2] == nums[time]+1){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time+time2+time3] == nums[time]+2){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                        \n                        else if(nums[time] == nums[time+time2]){\n                            \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time] == nums[time+time2+time3]){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            return setcount;\n    }\n    \n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = Integer.parseInt(sc.nextLine());\n\n\t\tfor(int i = 0; i < T; i++){\n\t\t\tArrayList<Integer> listR = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> listG = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> listB = new ArrayList<Integer>();\n\n\t\t\tString[] strSuji = sc.nextLine().split(\" \");\n\t\t\tString[] strColor = sc.nextLine().split(\" \");\n\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tint kazu = Integer.parseInt(strSuji[j]);\n\n\t\t\t\tif (strColor[j].equals(\"R\")){\n\t\t\t\t\tlistR.add(kazu);\n\t\t\t\t}else if (strColor[j].equals(\"G\")){\n\t\t\t\t\tlistG.add(kazu);\n\t\t\t\t}else if (strColor[j].equals(\"B\")){\n\t\t\t\t\tlistB.add(kazu);\n\t\t\t\t}\n\t\t\t}\n\t\t\tCheck insCheck = new Check(listR,listG,listB);\n\n\t\t\tSystem.out.println(insCheck.checkkk());\n\t\t}\n\t\tsc.close();\n\t}\n}\n\nclass Check{\n\tArrayList<Integer> listR = new ArrayList<Integer>();\n\tArrayList<Integer> listG = new ArrayList<Integer>();\n\tArrayList<Integer> listB = new ArrayList<Integer>();\n\n\tArrayList<Integer> list1 = new ArrayList<Integer>();\n\tArrayList<Integer> list2 = new ArrayList<Integer>();\n\tArrayList<Integer> list3 = new ArrayList<Integer>();\n\n\tpublic Check(ArrayList<Integer> listR2, ArrayList<Integer> listG2, ArrayList<Integer> listB2) {\n\t\tthis.listR = listR2;\n\t\tthis.listG = listG2;\n\t\tthis.listB = listB2;\n\t}\n\n\tpublic int checkkk(){\n\t\tint ans = 0;\n\n\t\tif(0 == listR.size() % 3 && 0 == listG.size() % 3 && 0 == listB.size() % 3){\n\n\t\t\tif(listR.size() != 0){\n\t\t\t\tCollections.sort(listR);\n\n\t\t\t\tfor(int i = 0; i < listR.size(); i ++){\n\t\t\t\t\tlist1.add(0);\n\t\t\t\t}\n\n\t\t\t\tfor(int i = 0; i < listR.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listR.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listR.size(); k++){\n\n\t\t\t\t\t\t\tif(list1.get(i) == 0 && list1.get(j) == 0 && list1.get(k) == 0){\n\t\t\t\t\t\t\t\tif((listR.get(i) + 1) == listR.get(j)){\n\t\t\t\t\t\t\t\t\tif((listR.get(j) + 1 ) == listR.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist1.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(k,1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int i = 0; i < listR.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listR.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listR.size(); k++){\n\n\t\t\t\t\t\t\tif(list1.get(i) == 0 && list1.get(j) == 0 && list1.get(k) == 0){\n\t\t\t\t\t\t\t\tif(listR.get(i) == listR.get(j)){\n\t\t\t\t\t\t\t\t\tif(listR.get(j) == listR.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist1.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(k,1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif(listG.size() != 0){\n\t\t\t\tCollections.sort(listG);\n\n\t\t\t\tfor(int i = 0; i < listG.size(); i ++){\n\t\t\t\t\tlist2.add(0);\n\t\t\t\t}\n\n\t\t\t\tfor(int i = 0; i < listG.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listG.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listG.size(); k++){\n\n\t\t\t\t\t\t\tif(list2.get(i) == 0 && list2.get(j) == 0 && list2.get(k) == 0){\n\t\t\t\t\t\t\t\tif(listG.get(i)+1 == listG.get(j)){\n\t\t\t\t\t\t\t\t\tif(listG.get(j)+1 == listG.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist2.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(k,1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int i = 0; i < listG.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listG.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listG.size(); k++){\n\n\t\t\t\t\t\t\tif(list2.get(i) == 0 && list2.get(j) == 0 && list2.get(k) == 0){\n\t\t\t\t\t\t\t\tif(listG.get(i) == listG.get(j)){\n\t\t\t\t\t\t\t\t\tif(listG.get(j) == listG.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist2.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(k,1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif(listB.size() != 0){\n\t\t\t\tCollections.sort(listB);\n\n\t\t\t\tfor(int i = 0; i < listB.size(); i ++){\n\t\t\t\t\tlist3.add(0);\n\t\t\t\t}\n\n\t\t\t\tfor(int i = 0; i < listB.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listB.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listB.size(); k++){\n\n\t\t\t\t\t\t\tif(list3.get(i) == 0 && list3.get(j) == 0 && list3.get(k) == 0){\n\t\t\t\t\t\t\t\tif(listB.get(i)+1 == listB.get(j)){\n\t\t\t\t\t\t\t\t\tif(listB.get(j)+1 == listB.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist3.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(k,1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor(int i = 0; i < listB.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listB.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listB.size(); k++){\n\n\t\t\t\t\t\t\tif(list3.get(i) == 0 && list3.get(j) == 0 && list3.get(k) == 0){\n\t\t\t\t\t\t\t\tif(listB.get(i) == listB.get(j)){\n\t\t\t\t\t\t\t\t\tif(listB.get(j) == listB.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist3.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(k,1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(listR.isEmpty() && listG.isEmpty() && listB.isEmpty()){\n\t\t\tans = 1;\n\t\t}\n\t\treturn ans;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t;\n\t\tint[] n = new int[9];\n\t\tchar[] c = new char[9];\n\t\tint tempInt;\n\t\tchar tempChar;\n\t\tint count;\n\t\tt = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tc[j] = sc.next().charAt(0);\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tfor(int k = j+1; k < 9; k++){\n\t\t\t\t\tif(n[j] > n[k]){\n\t\t\t\t\t\ttempInt = n[j];\n\t\t\t\t\t\tn[j] = n[k];\n\t\t\t\t\t\tn[k] = tempInt;\n\t\t\t\t\t\ttempChar = c[j];\n\t\t\t\t\t\tc[j] = c[k];\n\t\t\t\t\t\tc[k] = tempChar;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 7; j++){\n\t\t\t\tif(c[j] == c[j+1] && c[j+1] == c[j+2]){\n\t\t\t\t\tif(n[j] == n[j+1] && n[j+1] == n[j+2]){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj += 2;\n\t\t\t\t\t}else if(n[j+2] - n[j+1] == 1 && n[j+1] - n[j] == 1){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((count == 3) ? 1 : 0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\t//???CheckResult????????????????§?\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t@SuppressWarnings(\"resource\")\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tint number[] = new int[9];\n\t\tString color[] = new String[9];\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tnumber[count1] = scan.nextInt();\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tcolor[count1] = scan.next();\n\t\t\t}\n\n\t\t\t// ???????????????????????????????????????????????°?????°?????£??????true??§?¬?????????????\n\t\t\tColorCountResult c = new ColorCountResult();\n\n\t\t\t// ?????????????????? store???????????????????????¨??????color_count??????????????????\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tc.colorCount(color[count1]);\n\t\t\t}\n\n\t\t\t// ???????????? ??????????????°??§????????°true???\n\t\t\tboolean flg = c.isColorResult();\n\n\t\t\t// ???????????????true?????´????????°???????????? / false?????´??????0?????????\n\t\t\tif (flg) {\n\t\t\t\tCheckResult ck = new CheckResult();\n\t\t\t\t\n\t\t\t\t//R(??¬??????????????????\n\t\t\t\t//9???color?????????????¢???????R??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"R\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.numberCheck();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg1 = ck.isNumberResult();\n\t\t\t\t\n\t\t\t\t//G(??°?????????????????????\n\t\t\t\t//9???color?????????????¢???????G??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"G\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.numberCheck();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg2 = ck.isNumberResult();\n\t\t\t\t\n\t\t\t\t//B(?????????????????????\n\t\t\t\t//9???color?????????????¢???????B??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"B\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.numberCheck();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg3 = ck.isNumberResult();\n\n\t\t\t\t// ?????? R(flg1)??¨G(flg2)??¨B(flg3)?????¨???true?????¨???1?????????\n\t\t\t\tif (flg1 & flg2 & flg3) {\n\t\t\t\t\tsb.append(\"1\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"0\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// --------------------color_cout?????????------------------------------------\n\n// ????????°?????°???????????????\nclass ColorCountResult {\n\n\tprivate int r = 0;\n\tprivate int b = 0;\n\tprivate int g = 0;\n\t\n\t//r b g??????????????????????????????????????????\n\tpublic void colorCount(String color) {\n\t\tif (color.equals(\"R\")) {\n\t\t\tr++;\n\t\t} else if (color.equals(\"B\")) {\n\t\t\tb++;\n\t\t} else if (color.equals(\"G\")) {\n\t\t\tg++;\n\t\t}\n\t}\n\n\t// color?????\\??????\n\tpublic boolean isColorResult() {\n\t\t// ????????????????????????????????°??§????????¨???true?????????\n\t\treturn (r % 3 == 0) & (b % 3 == 0) & (g % 3 == 0);\n\t}\n\n}\n\n// --------------------check?????????------------------------------------\n\nclass CheckResult {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\tfinal static int COLUMN_NUMBER = 9;\n\n\tList<Integer> number_list = new ArrayList<Integer>();\n\n\tprivate int[] number = new int[COLUMN_NUMBER];\n\t\n\t//????????¨??????????????°???????????????\n\tprivate int x = 0;\n\t\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tprivate int[] num = new int[COLUMN_NUMBER];\n\t// int num[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\n\t// ??°????????\\??????\n\tpublic void numberStore(int number) {\n\t\tnumber_list.add(number);\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t\tx++;\n\t}\n\n\t// ??°??????????????????????????????????´?\n\tpublic void numberSort() {\n\t\tCollections.sort(number_list);\n\t\tfor (int count = 0; count < x; count++) {\n\t\t\tnumber[count] = number_list.get(count);\n\t\t}\n\t\t//?????????????????????\n\t\tnumber_list.clear();\n\t\t//????????¨??????????????°????????????\n\t\tx = 0;\n\t}\n\n\tpublic void numberCheck() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < COLUMN_NUMBER; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// ?????????true ??? false??§??????\n\tpublic boolean isNumberResult() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\tboolean ret = true;\n\t\tfor(int n : num){\n\t\t\tif (n != 0){\n\t\t\t\tret = false;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ??????????????¶???????????¨?????¨???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n\n//\t\tfor (int nci = 0; nci < cardArr.size(); nci++) {\n//\t\t\tSystem.out.println(cardArr.get(nci).getFrontnumber()+cardArr.get(nci).getRearColor());\n//\t\t}\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tcard_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\t *\n\t\t * ?????????????????§??????????????°????????§???????????????\n\t\t *\n\t\t * int result;\n\t\t *\n\t\t * System.out.println(result = (toolcnt== 0)? 1:0);\n\t\t */\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void card_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3-1)?????£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t\t// ????????????for???????????§??±???????????¨?????£?§£\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// (3-2)??°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()||\n\t\t\t\t\t\tcardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\n\t\t\t\t// ????????????????????????????????±???????????¨????????¨??°??????????????§???????????????3R 2R 1R,????????????5G 4G 5G\n//\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n//\t\t\t\t\t// ???????????????????????????????????°\n//\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n//\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n//\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n//\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card ?????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String arg[]){\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int count;\n        for(int i=0;i<n;i++){\n            count=0;\n\n            int[] data=new int[9];\n            for(int j=0;j<9;j++)data[j]+=sc.nextInt();\n            //十の位を定める(B,G,R)\n            for(int j=0;j<9;j++){\n                String str=sc.next();\n                if(str.equals(\"B\"))data[j]+=1*10;\n                else if(str.equals(\"G\"))data[j]+=2*10;\n                else data[j]+=3*10;\n            }\n            Arrays.sort(data);\n            if( ( data[0]==data[1] && data[1]==data[2] ) || ( data[1]==(data[0]+1) && data[2]==(data[1]+1) ) )count++;\n            if( ( data[3]==data[4] && data[4]==data[5] ) || ( data[4]==(data[3]+1) && data[5]==(data[4]+1) ) )count++;\n            if( ( data[6]==data[7] && data[7]==data[8] ) || ( data[7]==(data[6]+1) && data[8]==(data[7]+1) ) )count++;\n            if( ( data[0]==data[1] && data[2]==data[3] && data[4]==data[5] ) || ( data[3]==data[4] && data[5]==data[6] && data[7]==data[8] ) )count+=2;\n            if(count>=3)System.out.println(1);\n            else System.out.println(0);\n        }\n        sc.close();\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t//????????????????????°?????\\???\n\t\tint set = sc.nextInt();\n\t\tint[] num = new int[9];\n\t\tint[] color = new int[9];\n\t\tfor (int setCount = 0; setCount < set; setCount++) {\n\t\t\tint RCount = 0;\n\t\t\tint GCount = 0;\n\t\t\tint[] used = new int[9];\n\t\t\tint trueSet = 0;\n\t\t\t//??\\???\n\t\t\tfor (int count = 0; count < 9; count++ ) {\n\t\t\t\tnum[count] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t\tString cl = sc.next();\n\t\t\t\tif (cl.equals(\"R\") ) {\n\t\t\t\t\tcolor[count] = 0;\n\t\t\t\t\tRCount++;\n\t\t\t\t} else if (cl.equals(\"G\") ) {\n\t\t\t\t\tcolor[count] = 1;\n\t\t\t\t\tGCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcolor[count] = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//??????1\n\t\t\tif ((RCount == 0 && GCount == 0) || (RCount == 0 && GCount == 3) ||\n\t\t\t\t(RCount == 0 && GCount == 6) || (RCount == 3 && GCount == 0) ||\n\t\t\t\t(RCount == 3 && GCount == 3) || (RCount == 3 && GCount == 6) ||\n\t\t\t\t(RCount == 6 && GCount == 0) || (RCount == 6 && GCount == 3) ||\n\t\t\t\t(RCount == 9) || (GCount == 9)) {\n\t\t\t\t//?????????????????????????????????\n\t\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\t\tfor (int j = i+1; j < 9; j++) {\n\t\t\t\t\t\tif (num[i] > num[j]) {\n\t\t\t\t\t\t\tint numTaihi = num[i];\n\t\t\t\t\t\t\tnum[i] = num[j];\n\t\t\t\t\t\t\tnum[j] = numTaihi;\n\t\t\t\t\t\t\tint colorTaihi = color[i];\n\t\t\t\t\t\t\tcolor[i] = color[j];\n\t\t\t\t\t\t\tcolor[j] = colorTaihi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//????????????????????????????????????\n\t\t\t\tfor (int xMaime = 0; xMaime < 7; xMaime++) {\n\t\t\t\t\tif (used[xMaime] == 0) {\n\t\t\t\t\t\tfor (int yMaime = xMaime + 1; yMaime < 8; yMaime++) {\n\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(used[yMaime] == 0) {\n\t\t\t\t\t\t\t\tfor (int zMaime = yMaime + 1; zMaime < 9; zMaime++) {\n\t\t\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (used[zMaime] == 0) {\n\t\t\t\t\t\t\t\t\t\tif (color[xMaime] == color[yMaime] && color[xMaime] == color[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] == num[yMaime] && num[xMaime] == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t} else if (num[xMaime]+1 == num[yMaime] && num[yMaime]+1 == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//??????\n\t\t\t\tif (trueSet == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n    int T;\n    int[] number;\n    int[] R,G,B;\n\n    void solve(){\n\tScanner sc = new Scanner(System.in);\n\tT = sc.nextInt();\n\twhile(T-->0){\n\t    number = new int[9];\n\t    for(int i=0; i<9; i++)number[i] = sc.nextInt();\n\t    R = new int[10];\n\t    G = new int[10];\n\t    B = new int[10];\n\t    for(int i=0; i<9; i++){\n\t\tchar c = sc.next().charAt(0);\n\t\tif(c=='R')R[number[i]]++;\n\t\tif(c=='G')G[number[i]]++;\n\t\tif(c=='B')B[number[i]]++;\n\t    }\n\n\t    for(int i=0; i<=9; i++){\n\t\tif(R[i]>0){\n\t\t    if(R[i]==4) R[i]-=3;\n\t\t    if(R[i]==3) R[i] = 0;\n\t\t    if(R[i]<=2 && i+2<9){R[i+1]-=R[i]; R[i+2]-=R[i]; R[i] = 0;}\n\t\t}\n\t\tif(G[i]>0){\n\t\t    if(G[i]==4) G[i]-=3;\n\t\t    if(G[i]==3) G[i] = 0;\n\t\t    if(G[i]<=2 && i+2<9){G[i+1]-=G[i]; G[i+2]-=G[i]; G[i] = 0;}\n\t\t}\n\t\tif(B[i]>0){\n\t\t    if(B[i]==4) B[i]-=3;\n\t\t    if(B[i]==3) B[i] = 0;\n\t\t    if(B[i]<=2 && i+2<9){B[i+1]-=B[i]; B[i+2]-=B[i]; B[i] = 0;}\n\t\t}\n\t    }\n\n\t    int ans = 1;\n\t    for(int i=0; i<=9; i++){\n\t\tif(R[i]!=0 || G[i]!=0 || B[i]!=0){ans = 0; break;}\n\t    }\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static void main(String[] args){\n\tnew Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class rummy {\n\n\tpublic static void main(String[] args) {\n\n\t\t//?????£?????????\n\t\tint output;\n\t\tint okCount;\n\t\tint loop;\n\t\tString line;\n\t\tCard[] cardList = new Card[9];\n\n\t\tScanner sc = null;\n\n\t\ttry {\n\t\t\tsc = new Scanner(System.in);\n\n\t\t\t//?????§???????????°???????????????\n\t\t\tloop = sc.nextInt();\n\t\t\t//?¬???????????§????\n\t\t\tline = sc.nextLine();\n\n\t\t\tfor (int i = 0; i < loop; i++) {\n\t\t\t\t//?????????????????????\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] work = line.split(\" \");\n\n\t\t\t\tint[] number = new int[work.length];\n\t\t\t\tfor (int j = 0; j < work.length; j++) {\n\t\t\t\t\tnumber[j] = Integer.parseInt(work[j]);\n\t\t\t\t}\n\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] color = line.split(\" \");\n\n\t\t\t\t//???????????????\n\t\t\t\tfor (int j = 0; j < cardList.length; j++) {\n\t\t\t\t\tcardList[j] = new Card(number[j], color[j]);\n\t\t\t\t}\n\n\t\t\t\t//?????????????????°?????§?????????\n\t\t\t\tArrays.sort(cardList , new Comparator<Card>() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic int compare(Card card1, Card card2) {\n\n\t\t\t\t\t\tint temp = card1.getColor().compareTo(card2.getColor());\n\n\t\t\t\t\t\tif (temp == 0) {\n\t\t\t\t\t\t\treturn card1.getNumber() - card2.getNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn temp;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//???????????¶????????????????????????????????§??????\n\t\t\t\tokCount = 0;\n\t\t\t\toutput = 0;\n\t\t\t\t//??¨?????????????????§???????????¨\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tif (cardList[j* 3].getColor().equals(cardList[j*3 + 1].getColor())) {\n\t\t\t\t\t\tif (cardList[j* 3].getColor().equals(cardList[j*3 + 2].getColor())) {\n\t\t\t\t\t\t\t//??£?????§???????????¨\n\t\t\t\t\t\t\tif (cardList[j*3].getNumber() + 1 == cardList[j*3 + 1].getNumber()){\n\n\t\t\t\t\t\t\t\tif (cardList[j*3 + 1].getNumber() + 1 == cardList[j*3 + 2].getNumber()){\n\t\t\t\t\t\t\t\t\tokCount++;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//?????????????????°?????§???????????¨\n\t\t\t\t\t\t\t}else if (cardList[j*3].getNumber() == cardList[j*3 + 1].getNumber()) {\n\t\t\t\t\t\t\t\t\tif (cardList[j*3 + 1].getNumber() == cardList[j*3 + 2].getNumber()) {\n\t\t\t\t\t\t\t\t\t\tokCount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (okCount == 3) {\n\t\t\t\t\toutput = 1;\n\t\t\t\t}\n\t\t\t\t//???????¢??????¨\n\t\t\t\tSystem.out.println(output);\n\t\t\t}\n\t\t} finally {\n\t\t\tsc.close();\n\t\t}\n\n\t}\n\n\t//??????????????????\n\tstatic class Card {\n\t\t//?????£?????????\n\t\t//??????????????°???\n\t\tprivate int number;\n\t\t//???????????????\n\t\tprivate String color;\n\n\t\t//?????????????????????\n\t\tpublic  Card(int num, String color){\n\t\t\tthis.number = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t//????????????????????????\n\t\tpublic int getNumber() {\n\t\t\treturn number;\n\t\t}\n\n\t\tpublic void setNumber(int number) {\n\t\t\tthis.number = number;\n\t\t}\n\n\t\tpublic String getColor() {\n\t\t\treturn color;\n\t\t}\n\n\t\tpublic void setColor(String color) {\n\t\t\tthis.color = color;\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "package aoj.lesson.rummy;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\n/**\n * @author s-nag\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Hand> list = input(scanner);\n        scanner.close();\n\n        for (Hand hand : list) {\n            System.out.println(hand.judge());\n        }\n    }\n\n    public static class Hand {\n        public static final int hand_size = 9;\n        public static final int number_size = 9;\n        public static final String[] all_suits = { \"R\", \"G\", \"B\" };\n        public List<Integer> numbers;\n        public List<String> suits;\n\n        /**\n         * @param numbers\n         * @param suits\n         */\n        public Hand() {\n            super();\n            this.numbers = new ArrayList<Integer>();\n            for (int i = 0; i < hand_size; i++) {\n                numbers.add(0);\n            }\n            this.suits = new ArrayList<String>();\n            for (int i = 0; i < hand_size; i++) {\n                suits.add(\"\");\n            }\n        }\n\n        /**\n         * @param numbers\n         * @param suits\n         */\n        public Hand(List<Integer> numbers, List<String> suits) {\n            super();\n            this.numbers = numbers;\n            this.suits = suits;\n        }\n\n        /**\n         * ??????????????????????????????????????????????????°????????????\n         *\n         * @return\n         */\n        public int judge() {\n            Map<String, List<Integer>> map = makeTempList(numbers, suits);\n            // ?????????????????????\n            for (Map.Entry<String, List<Integer>> e : map.entrySet()) {\n                if (!judgeSmall(e.getValue())) {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n\n        /**\n         * ????????????????????§????????°????¨????????????????????????????????????£?????????????????????????????????????????? ??¨??¨????????????????¶??????§????????°????????????\n         *\n         * @param list\n         * @return\n         */\n        public static boolean judgeSmall(List<Integer> list) {\n            final int small_size = 3;\n            for (int i = 0; i < list.size(); i++) {\n                // ????????°????????????????????????\n                // ???????????????5?????\\??????????????????????????¨??????????????§?????£?????¨?????£???????????°??????????????????2?????\\?????°?????????????????????\n                if (list.get(i) >= small_size) {\n                    list.set(i, list.get(i) - small_size);\n                }\n                // ??£????????????\n                if (i < list.size() - (small_size - 1)) {\n                    // ????????£??????2?????\\?????°???????????´????????????????????????????????????\n                    while (true) {\n                        if (list.get(i) > 0 && list.get(i + 1) > 0\n                                && list.get(i + 2) > 0) {\n                            list.set(i, list.get(i) - 1);\n                            list.set(i + 1, list.get(i + 1) - 1);\n                            list.set(i + 2, list.get(i + 2) - 1);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n            }\n            return isAllZero(list);\n        }\n\n        /**\n         * ??????????????????????¶??????§????????????????????? ?¶??????§???????????????????????????\n         *\n         * @param list\n         * @return\n         */\n        public static boolean isAllZero(List<Integer> list) {\n            for (Integer integer : list) {\n                if (integer != 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        /**\n         * ??£?????????????¨??????????????????????????????????????????????????????°?¨????????????? R1, R2, R3 -> R{1, 1, 1, 0, 0, 0, 0, 0, 0}\n         * ??????????????????\n         *\n         * @param numbers\n         * @param suits\n         * @return\n         */\n        public static Map<String, List<Integer>> makeTempList(\n                List<Integer> numbers, List<String> suits) {\n            Map<String, List<Integer>> ret = new HashMap<String, List<Integer>>();\n            // ???????????°???????????????????????°????????????\n            for (String s : suits) {\n                List<Integer> buf = new ArrayList<Integer>();\n                for (int j = 0; j < number_size; j++) {\n                    buf.add(0);\n                }\n                ret.put(s, buf);\n            }\n            for (int i = 0; i < hand_size; i++) {\n                int number_index = numbers.get(i).intValue() - 1;\n                String s = suits.get(i);\n                Integer v = ret.get(s).get(number_index);\n                ret.get(s).set(number_index, v + 1);\n            }\n            return ret;\n        }\n\n        @Override\n        public String toString() {\n            return \"Hand [numbers=\" + numbers + \", suits=\" + suits + \"]\";\n        }\n\n        @Override\n        public int hashCode() {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result\n                    + ((numbers == null) ? 0 : numbers.hashCode());\n            result = prime * result + ((suits == null) ? 0 : suits.hashCode());\n            return result;\n        }\n\n        @Override\n        public boolean equals(Object obj) {\n            if (this == obj)\n                return true;\n            if (obj == null)\n                return false;\n            if (getClass() != obj.getClass())\n                return false;\n            Hand other = (Hand) obj;\n            if (numbers == null) {\n                if (other.numbers != null)\n                    return false;\n            } else if (!numbers.equals(other.numbers))\n                return false;\n            if (suits == null) {\n                if (other.suits != null)\n                    return false;\n            } else if (!suits.equals(other.suits))\n                return false;\n            return true;\n        }\n\n    }\n\n    /**\n     * ??\\???????????????????????°????????????\n     *\n     * @param scanner\n     * @return ??\\??????????????°???????????????\n     */\n    public static List<Hand> input(Scanner scanner) {\n        int n = scanner.nextInt();\n        List<Hand> list = new ArrayList<Hand>();\n        for (int i = 0; i < n; i += 1) {\n            Hand hand = new Hand();\n            for (int j = 0; j < Hand.hand_size; j++) {\n                hand.numbers.set(j, scanner.nextInt());\n            }\n            for (int j = 0; j < Hand.hand_size; j++) {\n                hand.suits.set(j, scanner.next());\n            }\n            list.add(hand);\n        }\n        return list;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\t//?????£?????????\n\t\tint output;\n\t\tint okCount;\n\t\tint loop;\n\t\tString line;\n\t\tCard[] cardList = new Card[9];\n\n\t\tScanner sc = null;\n\n\t\ttry {\n\t\t\tsc = new Scanner(System.in);\n\n\t\t\t//?????§???????????°???????????????\n\t\t\tloop = sc.nextInt();\n\t\t\t//?¬???????????§????\n\t\t\tline = sc.nextLine();\n\t\t\tfor (int i = 0; i < loop; i++) {\n\t\t\t\t//?????????????????????\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] work = line.split(\" \");\n\n\t\t\t\tint[] number = new int[work.length];\n\t\t\t\tfor (int j = 0; j < work.length; j++) {\n\t\t\t\t\tnumber[j] = Integer.parseInt(work[j]);\n\t\t\t\t}\n\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] color = line.split(\" \");\n\n\t\t\t\t//???????????????\n\t\t\t\tfor (int j = 0; j < cardList.length; j++) {\n\t\t\t\t\tcardList[j] = new Card(number[j], color[j]);\n\t\t\t\t}\n\t\t\t\t//?????????????????°?????§?????????\n\t\t\t\tArrays.sort(cardList , new Comparator<Card>() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic int compare(Card card1, Card card2) {\n\n\t\t\t\t\t\tint temp = card1.getColor().compareTo(card2.getColor());\n\n\t\t\t\t\t\tif (temp == 0) {\n\t\t\t\t\t\t\treturn card1.getNumber() - card2.getNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn temp;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//???????????¶????????????????????????????????§??????\n\t\t\t\tokCount = 0;\n\t\t\t\toutput = 0;\n\t\t\t\t//??¨?????????????????§???????????¨\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tif (cardList[j* 3].getColor().equals(cardList[j*3 + 1].getColor())) {\n\t\t\t\t\t\tif (cardList[j* 3].getColor().equals(cardList[j*3 + 2].getColor())) {\n\t\t\t\t\t\t\t//??£?????§???????????¨\n\t\t\t\t\t\t\tif (cardList[j*3].getNumber() + 1 == cardList[j*3 + 1].getNumber()){\n\n\t\t\t\t\t\t\t\tif (cardList[j*3 + 1].getNumber() + 1 == cardList[j*3 + 2].getNumber()){\n\t\t\t\t\t\t\t\t\tokCount++;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//?????????????????°?????§???????????¨\n\t\t\t\t\t\t\t}else if (cardList[j*3].getNumber() == cardList[j*3 + 1].getNumber()) {\n\t\t\t\t\t\t\t\t\tif (cardList[j*3 + 1].getNumber() == cardList[j*3 + 2].getNumber()) {\n\t\t\t\t\t\t\t\t\t\tokCount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (okCount == 3) {\n\t\t\t\t\toutput = 1;\n\t\t\t\t}\n\t\t\t\t//???????¢??????¨\n\t\t\t\tSystem.out.println(output);\n\t\t\t}\n\t\t} finally {\n\t\t\tsc.close();\n\t\t}\n\n\t}\n\n\t//??????????????????\n\tstatic class Card {\n\t\t//?????£?????????\n\t\t//??????????????°???\n\t\tprivate int number;\n\t\t//???????????????\n\t\tprivate String color;\n\n\t\t//?????????????????????\n\t\tpublic  Card(int num, String color){\n\t\t\tthis.number = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t//????????????????????????\n\t\tpublic int getNumber() {\n\t\t\treturn number;\n\t\t}\n\n\t\tpublic void setNumber(int number) {\n\t\t\tthis.number = number;\n\t\t}\n\n\t\tpublic String getColor() {\n\t\t\treturn color;\n\t\t}\n\n\t\tpublic void setColor(String color) {\n\t\t\tthis.color = color;\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n \n \npublic class Main{\n\n\t\n    public static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n    \t\n    \tfinal int N = sc.nextInt();\n    \t\n    \tNEXT:\n    \tfor(int tt = 0; tt < N; tt++){\n    \t\tint[][] array = new int[3][10];\n    \t\tint[] count = new int[3];\n    \t\n    \t\tint[][] card = new int[2][9];\n    \t\tfor(int i = 0; i < 9; i++){\n    \t\t\tcard[0][i] = sc.nextInt();\n    \t\t}\n    \t\tfor(int i = 0; i < 9; i++){\n    \t\t\tString in = sc.next();\n    \t\t\t\n    \t\t\tif(\"R\".equals(in)){\n    \t\t\t\tcard[1][i] = 0;\n    \t\t\t\tcount[0]++;\n    \t\t\t}else if(\"G\".equals(in)){\n    \t\t\t\tcard[1][i] = 1;\n    \t\t\t\tcount[1]++;\n    \t\t\t}else if(\"B\".equals(in)){\n    \t\t\t\tcard[1][i] = 2;\n    \t\t\t\tcount[2]++;\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\tfor(int i = 0; i < 9; i++){\n    \t\t\tarray[card[1][i]][card[0][i]]++;\n    \t\t}\n    \t\t\n    \t\tfor(int i = 0; i < 3; i++){\n    \t\t\tif(count[i] % 3 != 0){\n    \t\t\t\tSystem.out.println(0);\n    \t\t\t\tcontinue NEXT;\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\tfor(int i = 0; i < 3; i++){\n    \t\t\tfor(int num = 0; num < 10; num++){\n    \t\t\t\tif(array[i][num] >= 3){\n    \t\t\t\t\tarray[i][num] %= 3;\n    \t\t\t\t}\n    \t\t\t\t\n    \t\t\t\tif(array[i][num] > 0){\n    \t\t\t\t\tif(num >= 8){\n    \t\t\t\t\t\tSystem.out.println(0);\n    \t\t\t\t\t\tcontinue NEXT;\n    \t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\tif(array[i][num+1] > 0 && array[i][num+2] > 0){\n    \t\t\t\t\t\tarray[i][num]--;\n    \t\t\t\t\t\tarray[i][num+1]--;\n    \t\t\t\t\t\tarray[i][num+2]--;\n    \t\t\t\t\t\tnum -= 1;\n    \t\t\t\t\t}else{\n    \t\t\t\t\t\tSystem.out.println(0);\n    \t\t\t\t\t\tcontinue NEXT;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\tSystem.out.println(1);\n    \t}\n    }\n     \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\t//??\\????????°?????????\n\t\tint intLoop = scan.nextInt();\n\t\t//????¨?????´???´????¢????\n\t\tArrayList<int[]> numList = new ArrayList<int[]>();\n\t\tArrayList<String[]> colorList = new ArrayList<String[]>();\n\t\tArrayList<Integer> ansList = new ArrayList<Integer>();\n\t\t//??\\???\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint[] intNum = new int[9];\n\t\t\tString[] strCol = new String[9];\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tintNum[j] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tstrCol[j] = scan.next();\n\t\t\t}\n\t\t\tnumList.add(intNum);\n\t\t\tcolorList.add(strCol);\n\t\t}\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint intCount = 0;\n\n\t\t\tint[] arrayR = new int[9];\n\t\t\tint[] arrayG = new int[9];\n\t\t\tint[] arrayB = new int[9];\n\t\t\tint[] intNum = numList.get(i);\n\t\t\tString[] strCol = colorList.get(i);\n\t\t\t//RGB???????????\\?????????\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = strCol[j];\n\t\t\t\tif(\"R\".equals(s)){\n\t\t\t\t\tarrayR[intNum[j] - 1]++;\n\t\t\t\t}else if(\"G\".equals(s)){\n\t\t\t\t\tarrayG[intNum[j] - 1]++;\n\t\t\t\t}else if(\"B\".equals(s)){\n\t\t\t\t\tarrayB[intNum[j] - 1]++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t/*for(int j = 0; j < 9; j++){\n\t\t\t\tSystem.out.println((j + 1) + \" = R : \" + arrayR[j] + \" G : \" + arrayG[j] + \" B : \" + arrayB[j]);\n\t\t\t}*/\n\t\t\tfor(int j = 0; j < 7; j++){\n\t\t\t\tboolean isReplay = false;\n\t\t\t\tif(arrayR[j] != 0 && arrayR[j+1] != 0 && arrayR[j+2] !=0){\n\t\t\t\t\tarrayR[j]--;\n\t\t\t\t\tarrayR[j+1]--;\n\t\t\t\t\tarrayR[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t\tisReplay = true;\n\t\t\t\t}\n\t\t\t\tif(arrayG[j] != 0 && arrayG[j+1] != 0 && arrayG[j+2] !=0){\n\t\t\t\t\tarrayG[j]--;\n\t\t\t\t\tarrayG[j+1]--;\n\t\t\t\t\tarrayG[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t\tisReplay = true;\n\t\t\t\t}\n\t\t\t\tif(arrayB[j] != 0 && arrayB[j+1] != 0 && arrayB[j+2] !=0){\n\t\t\t\t\tarrayB[j]--;\n\t\t\t\t\tarrayB[j+1]--;\n\t\t\t\t\tarrayB[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t\tisReplay = true;\n\t\t\t\t}\n\t\t\t\tif(isReplay && (arrayR[j] != 0 || arrayG[j] != 0 || arrayB[j] != 0)){\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\t/*for(int p = 0; p < 9; p++){\n\t\t\t\tSystem.out.println((p + 1) + \" = R : \" + arrayR[p] + \" G : \" + arrayG[p] + \" B : \" + arrayB[p]);\n\n\t\t\t\t}*/\n\t\t\t\t//System.out.println(\"count : \" + intCount);\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\n\t\t\t\tif(arrayR[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayG[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayB[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(intCount == 3){\n\t\t\t\tansList.add(1);\n\t\t\t}else{\n\t\t\t\tansList.add(0);\n\t\t\t}\n\n\t\t}\n\n\t\t//??????\n\t\tfor(int i = 0; i < ansList.size(); i++){\n\t\t\tSystem.out.println(ansList.get(i));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir;\n\t\tint ig;\n\t\tint ib;\n\t\tint count;\n\t\tchar c;\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tir = 0;\n\t\t\tig = 0;\n\t\t\tib = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tj = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += judge(nr, ir) + judge(ng, ig) + judge(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int judge(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    boolean checkNum(Set num1, Set num2, Set num3){\n        int i,j;\n        i = num3.num - num2.num;\n        j = num2.num - num1.num;\n        if(((i == 1) && (j == 1)) || ((i == 0) && (j == 0))){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\nclass DataComparator implements java.util.Comparator<Set>{\n    public int compare(Set o1, Set o2){\n        if(o1.color == o2.color){\n            return o1.num - o2.num;\n        }else{\n            return o1.color - o2.color;\n        }\n    }\n}\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n    Set[] card = new Set[9];\n\n    for(int i=0;i<n;i++){\n      for(int j=0;j<9;j++){ //input_numbers\n        card[j] = new Set();\n        card[j].num = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      for(int l=0;l<9;l++){  //check_color\n        switch(ch[l]){\n          case \"R\": card[l].color = 1;\n                    break;\n          case \"G\": card[l].color = 2;\n                    break;\n          case \"B\": card[l].color = 3;\n                    break;\n          default : break;\n        }\n      }\n      Arrays.sort(card, new DataComparator());\n\n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = card[j].num; \n          set1[j].color = card[j].color;\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = card[j+3].num;\n          set2[j].color = card[j+3].color;\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = card[j+6].num;\n          set3[j].color = card[j+6].color;\n      }\n\n      int accept = 0;\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n\n      if(check1.sameColor(set1[0],set1[1],set1[2])){\n          if(check1.checkNum(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n             System.out.println('0');\n             continue;\n          }\n      }\n      else{\n        System.out.println('0');\n        continue;\n      }\n      \n      if(check2.sameColor(set2[0],set2[1],set2[2])){\n          if(check2.checkNum(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n             System.out.println('0');\n             continue;\n          }\n      }\n      else{\n        System.out.println('0');\n        continue;\n      }\n\n      if(check3.sameColor(set3[0],set3[1],set3[2])){\n          if(check3.checkNum(set3[0],set3[1],set3[2])){\n              accept++;\n          }else{\n             System.out.println('0');\n             continue;\n          }\n      }\n      else{\n        System.out.println('0');\n        continue;\n      }\n\n    System.out.println('1');\n    }//end_of_while\n  }//end_of_main\n}//end_of_Main"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\t// game set\n\t\tint gameset = sc.nextInt();\n\n\t\tint[][] cardset = new int[UTRummy.CARDPAGE][UTRummy.ONECARDSET];\n\n\t\t// input info\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\t// number info input\n\t\t\t\t\t\tcardset[j][k] = sc.nextInt();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// color info\n\t\t\t\t\t\tString tmpcolor = sc.next();\n\t\t\t\t\t\tint intColor = 0;\n\t\t\t\t\t\tif (tmpcolor.equals(\"R\")) {\n\t\t\t\t\t\t\tintColor = UTRummy.RED;\n\t\t\t\t\t\t} else if (tmpcolor.equals(\"G\")) {\n\t\t\t\t\t\t\tintColor = UTRummy.GREEN;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tintColor = UTRummy.BLUE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// color info input\n\t\t\t\t\t\tcardset[j][k] = intColor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tUTRummy utr = new UTRummy();\n\t\t\t// getter-setter call\n\t\t\tutr.setCardset(cardset);\n\t\t\tcardset = utr.getCardset();\n\n\t\t\t//game start\n\t\t\tint intCount = 0;\n\t\t\tintCount = utr.playtheGame(cardset); // ?????????\n\t\t\t//game result\n\t\t\tif (3 <= intCount) {\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass UTRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// color\n\tstatic final int RED = 0;\n\tstatic final int GREEN = 1;\n\tstatic final int BLUE = 2;\n\n\tint[][] Cardset = new int[CARDPAGE][ONECARDSET];\n\n\tpublic UTRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn Cardset;\n\t}\n\n\tpublic void setCardset(int[][] cardset) {\n\t\tthis.Cardset = settingcardplay(cardset);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {\n\n\t\tfor (int i = 0; i < 8; i++) {\n\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\n\t\tint intCount = 0;\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][i] == cardset[0][k] - 2) {\n\n\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {\n\n\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn intCount;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\t\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\t\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t\n\t\t\t// memo\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\t\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ((color.equals(\"011\"))||(color.equals(\"122\"))||(color.equals(\"022\"))) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ((color.equals(\"001\"))||(color.equals(\"112\"))||(color.equals(\"002\"))) {\n\t\t\t\t\tif ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ((color.equals(000))&&(color.equals(111))&&(color.equals(222))) {\n\t\t\t\t\tif((cardNo[0]==cardNo[1]) && ((cardNo[1]+1)==cardNo[2]) && (cardNo[2]==cardNo[3]) && (cardNo[3]==cardNo[4]) && ((cardNo[4]+1)==cardNo[5]) && (cardNo[5]==cardNo[6]) && (cardNo[6]==cardNo[7]) && ((cardNo[7]+1)==cardNo[8])) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t//System.out.println(\"color : \" + color + \"  check1 :\" + check + \" , check2 :\" + check2);\n\t\t\t\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif((check==3) || (check2==3)) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t * @return _number\n\t */\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t * @param _number ??????????????? _number\n\t */\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t * @return _colorNum\n\t */\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t * @param _colorNum ??????????????? _colorNum\n\t */\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t\n\t/**\n\t * ?????????????????????\n\t * @param color ????????¨????????????\n\t * @param num ???????????????\n\t */\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t//????????????????????°?????\\???\n\t\tint set = sc.nextInt();\n\t\tint[] num = new int[9];\n\t\tint[] color = new int[9];\n\t\tfor (int setCount = 0; setCount < set; setCount++) {\n\t\t\tint RCount = 0;\n\t\t\tint GCount = 0;\n\t\t\tint[] used = new int[9];\n\t\t\tint trueSet = 0;\n\t\t\t//??\\???\n\t\t\tfor (int count = 0; count < 9; count++ ) {\n\t\t\t\tnum[count] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t\tString cl = sc.next();\n\t\t\t\tif (cl.equals(\"R\") ) {\n\t\t\t\t\tcolor[count] = 0;\n\t\t\t\t\tRCount++;\n\t\t\t\t} else if (cl.equals(\"G\") ) {\n\t\t\t\t\tcolor[count] = 1;\n\t\t\t\t\tGCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcolor[count] = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//??????1\n\t\t\tif ((RCount == 0 && GCount == 0) || (RCount == 0 && GCount == 3) ||\n\t\t\t\t(RCount == 0 && GCount == 6) || (RCount == 3 && GCount == 0) ||\n\t\t\t\t(RCount == 3 && GCount == 3) || (RCount == 3 && GCount == 6) ||\n\t\t\t\t(RCount == 6 && GCount == 0) || (RCount == 6 && GCount == 3) ||\n\t\t\t\t(RCount == 9) || (GCount == 9)) {\n\t\t\t\t//?????????????????????????????????\n\t\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\t\tfor (int j = i+1; j < 9; j++) {\n\t\t\t\t\t\tif (num[i] > num[j]) {\n\t\t\t\t\t\t\tint numTaihi = num[i];\n\t\t\t\t\t\t\tnum[i] = num[j];\n\t\t\t\t\t\t\tnum[j] = numTaihi;\n\t\t\t\t\t\t\tint colorTaihi = color[i];\n\t\t\t\t\t\t\tcolor[i] = color[j];\n\t\t\t\t\t\t\tcolor[j] = colorTaihi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//????????????????????????????????????\n\t\t\t\tfor (int xMaime = 0; xMaime < 7; xMaime++) {\n\t\t\t\t\tif (used[xMaime] == 0) {\n\t\t\t\t\t\tfor (int yMaime = xMaime + 1; yMaime < 8; yMaime++) {\n\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(used[yMaime] == 0) {\n\t\t\t\t\t\t\t\tfor (int zMaime = yMaime + 1; zMaime < 9; zMaime++) {\n\t\t\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (used[zMaime] == 0) {\n\t\t\t\t\t\t\t\t\t\tif (color[xMaime] == color[yMaime] && color[xMaime] == color[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] == num[yMaime] && num[xMaime] == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t} else if (num[xMaime]+1 == num[yMaime] && num[yMaime]+1 == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//??????\n\t\t\t\tif (trueSet == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main{\n\n\t/**\n\t * ?????????????????????????????\\???????¢??????°???\n\t * ??????\n\t * 1) ????´???????????????? ??????String + String ??? Red 1 [1R] White 2 [2W] Gold 3 [3G]\n\t * 2) if??§????´¢????????????.contains() ??? switch??? ??? return;\n\t *\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tRummy ru = new Rummy(br.readLine(), br.readLine());\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = ru.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\n\t}// ????????????????????????????????????\n\n\t/**\n\t * ?????????CardRummy\n\t */\n\tpublic static class Rummy {\n\t\t/**\n\t\t * ?????????????????°??¶???\n\t\t */\n\t\tprivate static final int ONECARDSET = 9;\n\t\t/**\n\t\t * ?????????????????£?????????????????????\n\t\t */\n\t\tprivate static final int CASTAREA = 2;\n\t\t/**\n\t\t * ?????????????????£?????????????????°??????????´???´???\n\t\t */\n\t\tprivate static final int CASTADDRESS =0;\n\n\t\t/**\n\t\t * ????????????????´???´???\n\t\t */\n\t\tArrayList<String> card = new ArrayList<String>();\n\n\t\t/**\n\t\t * ?????°??????????????? ?????£???????????????????´???????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t */\n\t\tpublic Rummy(String tmpNum, String tmpColor) {// ???????????°????????????\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\t\t\t// ?????¨??°??????????????????????´?????????´???\n\t\t\tString tmpCard = \"\";\n\n\t\t\t// for????????? ????§£??????????????????????????????\n\t\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t\t/**\n\t\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t\t */\n\t\t\t\t// ????§£??????????????¨??°??????????????????\n\t\t\t\ttmpCard = transNum[cnt] + transColor[cnt];\n\t\t\t\t// ????´?\n\t\t\t\tcard.add(tmpCard);\n\t\t\t}\n\t\t}// ?????????????????????????????????\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t *\n\t\t * @param tmpArr ???????????´??????????????¨???????????´???\n\t\t *\n\t\t */\n\t\tpublic int playtheGame() {// ???????????°????????????\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = 0;\n\t\t\t// ???????????????????????´???\n\n\t\t\t//??¨???????????´???\n\t\t\tArrayList<String> tmpArr = new ArrayList<String>();\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\t\t\t//??´???????????????\n//\t\t\ttmpArr.addAll(card);\n//\t\t\tcard.clear();\n//\t\t\tcard.addAll(tmpArr);\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialNumCard(card); //?????£????????????\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameNumCard(card); //?????£????????????\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\t\t\t//??´???????????????\n//\t\t\ttmpArr.addAll(card);\n//\t\t\tcard.clear();\n//\t\t\tcard.addAll(tmpArr);\n\n\t\t\t// ????????????????????°??????0????????¨??¨0\n\t\t\tif (card.get(ONECARDSET - 1).contains(\"0\")){\n\t\t\t\t// ?????¶??????????????°???????????????s\n\t\t\t\tresult = 1;}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}// playtheGame????????????????????????\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param card2\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\n\t\tpublic void serialNumCard(ArrayList<String> card) {// ?????£????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param tempNum String????????????????????°??????int??¢????????£???????????????????????¨????????°\n\t\t\t *\n\t\t\t * @param tempArr[] ??¨????????°?????????????????°??????????´? ??????????????°?????????????????????\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\n\t\t\t//??????????????°???????????¢??¨\n\t\t\tString tempNum1[] = new String[CASTAREA];\n\t\t\tString tempNum2[] = new String[CASTAREA];\n\t\t\tString tempNum3[] = new String[CASTAREA];\n\n\t\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????£????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1???String???????????????????\\???????\n\t\t\t\t\t\t * ?????????2?????????????????¢?????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1 ?????????\n\t\t\t\t\t\t * 1) ??¨????????°??§??°???????????¢????´? ??? ???????¨?????????????????????????????????°???????????????????????§???????????????????????????\n\t\t\t\t\t\t *    (??¢?????????????????????)\n\t\t\t\t\t\t * 2) ??¨????????°??§??°???????????¢????´? ??? ??¨???int[]????????£??????????????°????????????????????????????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????2 ?????????\n\t\t\t\t\t\t * ???????????°??¢????????§????????????????????£\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\ttempNum1 = card.get(cnt1).split(\"\");\n\t\t\t\t\t\ttempNum2 = card.get(cnt2).split(\"\");\n\t\t\t\t\t\ttempNum3 = card.get(cnt3).split(\"\");\n\t\t\t\t\t\t// (1)3??£?¶?????????????????????????????????????\n\t\t\t\t\t\tif (Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum2[CASTADDRESS]) - 1\n\t\t\t\t\t\t\t\t&& Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum3[CASTADDRESS])\n\t\t\t\t\t\t\t\t\t\t- 2) {\n\t\t\t\t\t\t\t// (2)3??£?¶????????????????????????????????????????\n\t\t\t\t\t\t\tif (tempNum1[CASTADDRESS + 1].equals(tempNum2[CASTADDRESS + 1])\n\t\t\t\t\t\t\t\t\t&& tempNum2[CASTADDRESS + 1].equals(tempNum3[CASTADDRESS + 1])) {\n\n\t\t\t\t\t\t\t\t// (3)???????????????????????§?????????????????????\n\t\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\")\n\t\t\t\t\t\t\t\t\t\t&& !card.get(cnt3).contains(\"0\")) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\t//return card;\n\t\t}// serialNumCard ????????????????????????\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param card\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\t\tpublic void sameNumCard(ArrayList<String> card) {// ???????????°????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t\t// (1)???????????????????????????????????????\n\t\t\t\t\t\tif (card.get(cnt1).equals(card.get(cnt2)) && card.get(cnt2).equals(card.get(cnt3))) {\n\t\t\t\t\t\t\t// (1)????????¶??????????????°??????????????????\n\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\") && !card.get(cnt3).contains(\"0\")){\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\t//return card;\n\t\t}// sameNumCard????????????????????????\n\n\t}// Rummy?????????????????????\n\n}// NRummy?????????????????????"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nclass Main {\n\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n        int T = sc.nextInt();\n        int data[][]=new int [T][9];\n        String color[][]=new String[T][9];\n        for(int i=0; i<T; i++)\n        {\n            //????????????\n            for(int j=0; j<9; j++)\n            {\n                data[i][j]=sc.nextInt();\n            }\n            for(int j=0; j<9; j++)\n            {\n                color[i][j]=sc.next();\n            }\n            //??????????????????????????????\n            for(int j=0; j<9; j++)\n            {\n                for(int k=0; k<8; k++)\n                {\n                    if(color[i][k].compareTo(color[i][k+1])>=0)\n                    {\n                        int temp = data[i][k];\n                        data[i][k]=data[i][k+1];\n                        data[i][k+1]=temp;\n                        String ctemp = color[i][k];\n                        color[i][k]=color[i][k+1];\n                        color[i][k+1]=ctemp;\n                    }\n                }\n            }\n\n            //??°?????????????????????\n            for(int j=0; j<9; j++)\n            {\n                for(int k=0; k<8; k++)\n                {\n                    if(data[i][k]>=data[i][k+1] && color[i][k].compareTo(color[i][k+1])==0)\n                    {\n                        int temp = data[i][k];\n                        data[i][k]=data[i][k+1];\n                        data[i][k+1]=temp;\n                        String ctemp = color[i][k];\n                        color[i][k]=color[i][k+1];\n                        color[i][k+1]=ctemp;\n                    }\n                }\n            }\n\n            //?????¨??????????????????????????¨???????????£?????????(????????????????????????????????£\n            if((((data[i][0]==data[i][1] && data[i][1]==data[i][2]) || (data[i][0]==data[i][1]-1 && data[i][1]==data[i][2]-1))&&\n                    (color[i][0].compareTo(color[i][1])==0 && color[i][1].compareTo(color[i][2])==0)) &&\n                    (((data[i][3]==data[i][4] && data[i][4]==data[i][5]) || (data[i][3]==data[i][4]-1 && data[i][4]==data[i][5]-1))&&\n            (color[i][3].compareTo(color[i][4])==0 && color[i][4].compareTo(color[i][5])==0)) &&\n                    (((data[i][6]==data[i][7] && data[i][7]==data[i][8]) || (data[i][6]==data[i][7]-1 && data[i][7]==data[i][8]-1))&&\n                            (color[i][6].compareTo(color[i][7])==0 && color[i][7].compareTo(color[i][8])==0)) )\n            {\n                System.out.println(1);\n            }\n            else\n            {\n                System.out.println(0);\n            }\n        }\n        sc.close();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tC[j*2][i] = scan.nextChar();\n\t\t\t}\n\t\t}\n\t\t\n\t\tChar coler[]={'R','G','B'};\n\t\t\n\t\t\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void initiallize(boolean b[]) {\n\t\tfor (int i = 0; i < b.length; ++i) {\n\t\t\tb[i] = false;\n\t\t}\n\t}\n\n\tpublic static int same(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i]);\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int continuous(int num[]) {\n\t\tint count = 0;\n\t\tint tmp, tmp2;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = 4; j > 0; --j) {\n\t\t\t\t\tif (j != 2) {\n\t\t\t\t\t\ttmp = research(num, num[i] - j + 2);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != i) {\n\t\t\t\t\t\t\t\tif (j == 3) {\n\t\t\t\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 4);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 3);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (tmp2 != -1) {\n\t\t\t\t\t\t\t\t\tif (tmp2 != i) {\n\t\t\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[tmp2] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tpublic static int research(int num[], int k) {\n\t\tif (k <= 0)\n\t\t\treturn -1;\n\t\tfor (int i = num.length - 1; i >= 0; --i) {\n\t\t\tif (num[i] == k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static int judge(int num[], boolean b[]) {\n\t\tint count = 0;\n\t\tint j = 0;\n\t\tint number[] = new int[9];\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (b[i] == true) {\n\t\t\t\tnumber[j] = num[i];\n\t\t\t\t++j;\n\t\t\t}\n\t\t}\n\t\tif (number[2] == 0)\n\t\t\treturn -1;\n\t\t// same three number\n\t\tcount += same(number);\n\t\t// continuous three number\n\t\tcount += continuous(number);\n\n\t\treturn count;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tboolean R[], G[], B[];// position of R,B,G\n\t\tint count;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new boolean[9];\n\t\tB = new boolean[9];\n\t\tG = new boolean[9];\n\t\tint i, j;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[j] = true;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[j] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[j] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\t\t\t\tcount = 0;\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tint tmp = judge(num, R);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\ttmp = judge(num, B);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\ttmp = judge(num, G);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\tif (count == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t\tinitiallize(R);\n\t\t\t\tinitiallize(B);\n\t\t\t\tinitiallize(G);\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str = scan.next();\n\t\t\t\tchar[] inpc = str.toCharArray();\n\t\t\t\tC[j*2][i] = inpc[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea=0;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<5;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k]==color[j][k+2]){\n                        color[j][k]=0;\n                        color[j][k+1]=0;\n                        color[j][k+2]=0;\n                    }\n                }\n            }\n            for (int j=0;j<3;j++){\n                for (int l=0;l<3;l++){\n                int bef=-2;\n                int changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3) break;\n                    }\n                }\n            }\n\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * Rummy\n */\npublic class Main {\n\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\tint T = parseInt(br.readLine());\n\n\t\tfor (int i = 0; i < T; i++) {\n\n\t\t\tStringTokenizer st1 = new StringTokenizer(br.readLine());\n\t\t\tStringTokenizer st2 = new StringTokenizer(br.readLine());\n\n\t\t\tint[] R = new int[10];\n\t\t\tint[] G = new int[10];\n\t\t\tint[] B = new int[10];\n\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tint n = parseInt(st1.nextToken());\n\t\t\t\tswitch (st2.nextToken().charAt(0)) {\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tR[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tG[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tB[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\tint count = solve(R, 1, 0) + solve(G, 1, 0) + solve(B, 1, 0);\n\t\t\tSystem.out.println(count >= 3 ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static int solve(int[] cards, int s, int c) {\n\n\t\tif (s == 10) return c;\n\n\t\tint c1 = 0, c2 = 0, c3 = 0;\n\n\t\tif (cards[s] >= 3) {\n\t\t\tint[] _cards = Arrays.copyOf(cards, cards.length);\n\t\t\t_cards[s] -= 3;\n\t\t\tc1 = solve(_cards, s + 1, c + 1);\n\t\t}\n\n\t\tif (s <= 7 && cards[s] >= 1 && cards[s + 1] >= 1 && cards[s + 2] >= 1) {\n\t\t\tint[] _cards = Arrays.copyOf(cards, cards.length);\n\t\t\t_cards[s]--;\n\t\t\t_cards[s + 1]--;\n\t\t\t_cards[s + 2]--;\n\t\t\tif (_cards[s] >= 1) {\n\t\t\t\tc2 = solve(_cards, s, c + 1);\n\t\t\t} else {\n\t\t\t\tc2 = solve(_cards, s + 1, c + 1);\n\t\t\t}\n\t\t}\n\n\t\tc3 = solve(cards, s + 1, c);\n\n\t\treturn Math.max(c1, Math.max(c2, c3));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n    int T;\n    int[] number;\n    int[] R,G,B;\n\n    void solve(){\n\tScanner sc = new Scanner(System.in);\n\tT = sc.nextInt();\n\twhile(T-->0){\n\t    number = new int[9];\n\t    for(int i=0; i<9; i++)number[i] = sc.nextInt();\n\t    R = new int[10];\n\t    G = new int[10];\n\t    B = new int[10];\n\t    for(int i=0; i<9; i++){\n\t\tchar c = sc.next().charAt(0);\n\t\tif(c=='R')R[number[i]]++;\n\t\tif(c=='G')G[number[i]]++;\n\t\tif(c=='B')B[number[i]]++;\n\t    }\n\n\t    for(int i=0; i<9; i++){\n\t\tif(R[i]>0){\n\t\t    if(R[i]==4) R[i]-=3;\n\t\t    if(R[i]==3) R[i] = 0;\n\t\t    if(R[i]<=2 && i+2<9){R[i+1]-=R[i]; R[i+2]-=R[i]; R[i] = 0;}\n\t\t}\n\t\tif(G[i]>0){\n\t\t    if(G[i]==4) G[i]-=3;\n\t\t    if(G[i]==3) G[i] = 0;\n\t\t    if(G[i]<=2 && i+2<9){G[i+1]-=G[i]; G[i+2]-=G[i]; G[i] = 0;}\n\t\t}\n\t\tif(B[i]>0){\n\t\t    if(B[i]==4) B[i]-=3;\n\t\t    if(B[i]==3) B[i] = 0;\n\t\t    if(B[i]<=2 && i+2<9){B[i+1]-=B[i]; B[i+2]-=B[i]; B[i] = 0;}\n\t\t}\n\t    }\n\n\t    int ans = 1;\n\t    for(int i=0; i<9; i++){\n\t\tif(R[i]!=0 || G[i]!=0 || B[i]!=0){ans = 0; break;}\n\t    }\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static void main(String[] args){\n\tnew Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nclass Main {\n\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n        int T = sc.nextInt();\n        int data[][]=new int [T][9];\n        String color[][]=new String[T][9];\n        for(int i=0; i<T; i++)\n        {\n            //????????????\n            for(int j=0; j<9; j++)\n            {\n                data[i][j]=sc.nextInt();\n            }\n            for(int j=0; j<9; j++)\n            {\n                color[i][j]=sc.next();\n            }\n            //??????????????????????????????\n            for(int j=0; j<9; j++)\n            {\n                for(int k=0; k<8; k++)\n                {\n                    if(color[i][k].compareTo(color[i][k+1])>=0)\n                    {\n                        int temp = data[i][k];\n                        data[i][k]=data[i][k+1];\n                        data[i][k+1]=temp;\n                        String ctemp = color[i][k];\n                        color[i][k]=color[i][k+1];\n                        color[i][k+1]=ctemp;\n                    }\n                }\n            }\n\n            //??°?????????????????????\n            for(int j=0; j<9; j++)\n            {\n                for(int k=0; k<8; k++)\n                {\n                    if(data[i][k]>=data[i][k+1] && color[i][k].compareTo(color[i][k+1])==0)\n                    {\n                        int temp = data[i][k];\n                        data[i][k]=data[i][k+1];\n                        data[i][k+1]=temp;\n                        String ctemp = color[i][k];\n                        color[i][k]=color[i][k+1];\n                        color[i][k+1]=ctemp;\n                    }\n                }\n            }\n\n            //?????¨??????????????????????????¨???????????£?????????(????????????????????????????????£\n            if((((data[i][0]==data[i][1] && data[i][1]==data[i][2]) || (data[i][0]==data[i][1]-1 && data[i][1]==data[i][2]-1))&&\n                    (color[i][0].compareTo(color[i][1])==0 && color[i][1].compareTo(color[i][2])==0)) &&\n                    (((data[i][3]==data[i][4] && data[i][4]==data[i][5]) || (data[i][3]==data[i][4]-1 && data[i][4]==data[i][5]-1))&&\n            (color[i][3].compareTo(color[i][4])==0 && color[i][4].compareTo(color[i][5])==0)) &&\n                    (((data[i][6]==data[i][7] && data[i][7]==data[i][8]) || (data[i][6]==data[i][7]-1 && data[i][7]==data[i][8]-1))&&\n                            (color[i][6].compareTo(color[i][7])==0 && color[i][7].compareTo(color[i][8])==0)) )\n            {\n                System.out.println(1);\n            }\n            else\n            {\n                System.out.println(0);\n            }\n        }\n        sc.close();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    boolean checkNum(Set num1, Set num2, Set num3){\n        int i,j;\n        i = num3.num - num2.num;\n        j = num2.num - num1.num;\n        if(((i == 1) && (j == 1)) || ((i == 0) && (j == 0))){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\nclass DataComparator implements java.util.Comparator{\n    public int compare(Object o1, Object o2){\n        if(((Set)o1).color == ((Set)o2).color){\n            return ((Set)o1).num - ((Set)o2).num;\n        }\n    return ((Set)o1).color - ((Set)o2).color;\n  }\n}\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n    Set[] card = new Set[9];\n\n    for(int i=0;i<n;i++){\n      for(int j=0;j<9;j++){ //input_numbers\n        card[j] = new Set();\n        card[j].num = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      for(int l=0;l<9;l++){  //check_color\n        switch(ch[l]){\n          case \"R\": card[l].color = 1;\n                    break;\n          case \"G\": card[l].color = 2;\n                    break;\n          case \"B\": card[l].color = 3;\n                    break;\n          default : break;\n        }\n      }\n      Arrays.sort(card, new DataComparator());\n\n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = card[j].num; \n          set1[j].color = card[j].color;\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = card[j+3].num;\n          set2[j].color = card[j+3].color;\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = card[j+6].num;\n          set3[j].color = card[j+6].color;\n      }\n\n      int accept = 0;\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n\n      if(check1.sameColor(set1[0],set1[1],set1[2])){\n          if(check1.checkNum(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameColor(set2[0],set2[1],set2[2])){\n          if(check2.checkNum(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameColor(set3[0],set3[1],set3[2])){\n          if(check3.checkNum(set3[0],set3[1],set3[2])){\n              accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    }//end_of_while\n  }//end_of_main\n}//end_of_Main"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nimport static java.util.Arrays.sort;\n\npublic class Main {\n    public  static void  main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n\n        for(int i = 0; i< t; i++){\n            int[] num = new int[9];\n            String[] col = new String[9];\n\n            for(int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for(int j = 0; j < 9; j++)\n                col[j] = sc.next();\n\n            int countR = 0;\n            int countG = 0;\n            int countB = 0;\n\n            int[] numred = null, numgrn = null, numblue = null;\n\n            for(int j = 0; j < 9; j++){\n                if(col[j].equals(\"R\"))\n                    countR++;\n                else if(col[j].equals(\"G\"))\n                    countG++;\n                else\n                    countB++;\n            }\n\n            if(countR % 3 !=0 && countG % 3 != 0 && countB % 3 != 0){\n                System.out.println(\"0\");\n                return;\n            }\n\n            if(countR != 0){\n                numred = new int[countR];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"R\"))\n                        numred[indexnum++] = num[j];\n                }\n                sort(numred);\n            }\n\n            if(countG != 0){\n                numgrn = new int[countG];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"G\"))\n                        numgrn[indexnum++] = num[j];\n                }\n                sort(numgrn);\n            }\n\n            if(countB != 0){\n                numblue = new int[countB];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"B\"))\n                        numblue[indexnum++] = num[j];\n                }\n                sort(numblue);\n            }\n\n            if(countR == 3){\n                if((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countR == 6){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countR == 9){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5] && numred[6] == numred[7] && numred[7] == numred[8]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1 && numred[6] + 1 == numred[7] && numred[7] == numred[8] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            \n            if(countG == 3){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countG == 6){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countG == 9){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5] && numgrn[6] == numgrn[7] && numgrn[7] == numgrn[8]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1 && numgrn[6] + 1 == numgrn[7] && numgrn[7] == numgrn[8] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n\n            if(countB == 3){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countB == 6){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countB == 9){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5] && numblue[6] == numblue[7] && numblue[7] == numblue[8]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1 && numblue[6] + 1 == numblue[7] && numblue[7] == numblue[8] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n        }\n        sc.close();\n\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\t// game set\n\t\tint gameset = sc.nextInt();\n\n\t\tArrayList<int[]> numList = new ArrayList<int[]>();\n\t\tArrayList<int[]> colorList = new ArrayList<int[]>();\n\t\t//ArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tint[] tmpNum = new int[UTRummy.ONECARDSET];\n\t\t\tint[] tmpColor = new int[UTRummy.ONECARDSET];\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\ttmpNum[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tif (sc.next().equals(\"R\"))\n\t\t\t\t\ttmpColor[j] = UTRummy.RED;\n\t\t\t\telse if (sc.next().equals(\"G\"))\n\t\t\t\t\ttmpColor[j] = UTRummy.GREEN;\n\t\t\t\telse if (sc.next().equals(\"B\"))\n\t\t\t\t\ttmpColor[j] = UTRummy.BLUE;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnumList.add(tmpNum);\n\t\t\tcolorList.add(tmpColor);\n\t\t}\n\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tUTRummy utr = new UTRummy(numList.get(i),colorList.get(i) );\n\n\t\t\t//utr.playtheGame(utr);\n\t\t}\n\t}\n\n\tstatic class UTRummy {\n\n\t\t// declear\n\t\tstatic final int ONECARDSET = 9;\n\t\t// static final int CARDPAGE = 2;\n\n\t\t// color\n\t\tstatic final int RED = 0;\n\t\tstatic final int GREEN = 1;\n\t\tstatic final int BLUE = 2;\n\n\t\t// cardNum\n\t\tstatic final int card1 = 0;\n\t\tstatic final int card2 = 1;\n\t\tstatic final int card3 = 2;\n\t\tstatic final int card4 = 3;\n\t\tstatic final int card5 = 4;\n\t\tstatic final int card6 = 5;\n\t\tstatic final int card7 = 6;\n\t\tstatic final int card8 = 7;\n\t\tstatic final int card9 = 8;\n\n\t\tint[][] Cardset = new int[ONECARDSET][ONECARDSET];\n\n\t\tpublic UTRummy(){\n\n\t\t}\n\t\tpublic UTRummy(int[] numList, int[] colorList) {\n\t\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\t\tfor (int j = 0; j < numList.length; j++) {\n\t\t\t\t\tCardset[j][i] = numList[j];\n\t\t\t\t\tCardset[i][j] = colorList[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// num\n\t\tpublic int getNum(int position) {\n\n\t\t\treturn Cardset[position][card1];\n\n\t\t}\n\n\t\t// color\n\t\tpublic int getColor(int label) {\n\n\t\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\n\t\t\t\tif (label == Cardset[card1][i])\n\t\t\t\t\treturn i;\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\tScanner scan = new Scanner(System.in);\n\n\t\t//??????????????°?????????\n\t\tint num = scan.nextInt();\n\n\t\t//??????????????±??????????????????????????°\n\t\tint[][] card= new int[2][9];\n\n\t\t//???????????????????????°?????????\n\t\tfor(int k = 0; k < num; k++){\n\n\t\t\t//??????????????±???????´?\n\t\t\tfor(int j = 0; j < 2; j++){\n\t\t\t\tfor(int i = 0; i < 9; i++){\n\n\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\tcard[j][i] = scan.nextInt();\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tString color =scan.next();\n\t\t\t\t\t\tint intColor = 0;\n\t\t\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\t\t\tintColor = 11;\n\t\t\t\t\t\t}else if(\"G\".equals(color)){\n\t\t\t\t\t\t\tintColor = 12;\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tintColor = 13;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcard[j][i] = intColor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//????????????????????????????????????\n\t\t\tCard insCard = new Card();\n\t\t\tinsCard.setCard(card);\n\n\t\t\t//?????????????????????????????????\n\t\t\tinsCard.sort(card);\n\n\t\t\tcard = insCard.getCard();\n\n\n\t\t\t//????????????????????????\n\t\t\tint intCount = 0;\n\t\t\tintCount = insCard.win(card);\n\t\t\t//System.out.println(\"intCount: \" + intCount );\n\n\t\t\tif(3 <= intCount){\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\n\n\t\t}\n\n\n\n\t}//Main??????\n\n\tstatic class Card {\n\n\t\t//?????£?????????\n\t\t//??????????????±??????????????????????????°\n\t\tprivate int[][] card = new int[2][9];\n\n\t\t//?????????????????????\n\t\tCard(){\n\n\t\t}\n\n\n\t\tpublic int[][] getCard() {\n\t\t    return card;\n\t\t}\n\n\t\t/**\n\t\t * card????¨????????????????\n\t\t * @param card card\n\t\t */\n\t\tpublic void setCard(int[][] card) {\n\t\t    this.card = card;\n\t\t}\n\n\t\t//Method ?????????????????????(?°??????????????????????)\n\t\tpublic void sort(int[][] card){\n\n\t\t\t//?¨???????????????¨???????????????\n\t\t\t//??????????????????????????????\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++ ){\n\n\t\t\t\t\tif(card[1][j] > card[1][j+1]){\n\t\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\t\tcard[1][j] = card[1][j+1];\n\t\t\t\t\t\tcard[1][j+1] = temp;\n\t\t\t\t\t\t//??°????????\\????????????\n\t\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++){\n\t\t\t\t\t//??£????????????????????????????????????????????°????????\\????????????\n\t\t\t\t\tif(card[1][j] == card[1][j+1] && card[0][j] > card[0][j+1]){\n\n\t\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp;\n\t\t\t\t\t\t//????????\\???????????????\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t//Mehtod ???????????¶????????????????????????????????¢??????\n\t\tpublic int win(int[][] card){\n\n\t\t\t//???????????¶???????????????????????????????????°\n\t\t\tint intCount = 0;\n\t\t\t//???????????°????????????????????°\n\n\n\t\t\t//for???????????£???????????????\n\t\t\t//1?????????????????????(??????????????°Ma6???)\n\t\t\tfor(int k= 0; k < 7; k++){\n\t\t\t\t//????????????????????????(??????????????°Max7???)\n\t\t\t\tfor(int j = k+1; j < 8; j++ ){\n\t\t\t\t\t//????????????????????????(??????????????°Max8???)\n\t\t\t\t\tfor(int i = j+1; i < 9; i++){\n\t\t\t\t\t\t//System.out.println(\" card\" +\"[\" + k + \"]\" + card[0][k] + \" card\" +\"[\" + j + \"]\" + card[0][j] + \" card\" +\"[\" + i + \"]\" + card[0][i]);\n\t\t\t\t\t\tif(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n\t\t\t\t\t\t\t//????±??????????????????????????????????\n\n\t\t\t\t\t\t\tif(card[0][k] != 0 && card[0][k] == card[0][j] -1 && card[0][k] == card[0][i] -2){\n\n\n\t\t\t\t\t\t\t\t//????±?????????????????????????(???)????????§???????????????+????????\\????????£?????????\n\t\t\t\t\t\t\t\t//??????????????¢??????\n\t\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\t\t//????±??????????????????????????????°????????????\n\t\t\t\t\t\t\t\tcard[0][k] = 0;\n\t\t\t\t\t\t\t\tcard[0][j] = 0;\n\t\t\t\t\t\t\t\tcard[0][i] = 0;\n\t \t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"for1=intCount:\" + intCount);\n\t\t\t//for???2????????´????????????\n\t\t\t//1?????????????????????(??????????????°Ma6???)\n\t\t\tfor(int k= 0; k < 7; k++){\n\t\t\t\t//????????????????????????(??????????????°Max7???)\n\t\t\t\tfor(int j = k+1; j < 8; j++ ){\n\t\t\t\t\t//????????????????????????(??????????????°Max8???)\n\t\t\t\t\tfor(int i = j+1; i < 9; i++){\n\t\t\t\t\t\t//System.out.println(\" card\" +\"[\" + k + \"]\" + card[0][k] + \" card\" +\"[\" + j + \"]\" + card[0][j] + \" card\" +\"[\" + i + \"]\" + card[0][i]);\n\n\t\t\t\t\t\tif(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n\t\t\t\t\t\t\t//????±??????????????????????????????????\n\t\t\t\t\t\t\tif(card[0][k] != 0 && card[0][k] == card[0][j] && card[0][k] == card[0][i]){\n\n\t\t\t\t\t\t\t\t//System.out.println(\"card1:\" + card[0][k] + \"card2:\" + card[0][j] + \"card3:\" + card[0][i]);\n\t\t\t\t\t\t\t\t//????±?????????????????????????(???)????????§???????????????+????????\\????????£?????????\n\t\t\t\t\t\t\t\t//??????????????¢??????\n\t\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\t\t//????±??????????????????????????????°????????????\n\t\t\t\t\t\t\t\tcard[0][k] = 0;\n\t\t\t\t\t\t\t\tcard[0][j] = 0;\n\t\t\t\t\t\t\t\tcard[0][i] = 0;\n\t \t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"for2=intCount:\" + intCount);\n\t\t\treturn intCount;\n\t\t}\n\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\n\t\t\tRummy rummy = new Rummy(cardNum, cardColor);\n\n\t\t\tint[][] hadCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\tint point = 0;\n\n\t\t\tpoint += rummy.sameNumberCheck(hadCard);\n\n\t\t\tpoint += rummy.continuousNumberCheck(hadCard);\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\t// ?????£?????????\n\tint[] cardNum;\n\tString[] cardColor;\n\n\t// ?????????????????????\n\tRummy(int[] cardNum, String[] cardColor){\n\n\t\tthis.cardNum = cardNum;\n\t\tthis.cardColor = cardColor;\n\n\t}\n\n\t// ???????????????????????????????????£??????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\tint[][] hasCard = new int[3][9];\n\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\tpoint++;\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\t\tint continuousCount = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nimport static java.util.Arrays.sort;\n\npublic class Main {\n    public  static void  main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n\n        for(int i = 0; i< t; i++){\n            int[] num = new int[9];\n            String[] col = new String[9];\n\n            for(int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for(int j = 0; j < 9; j++)\n                col[j] = sc.next();\n\n            int countR = 0;\n            int countG = 0;\n            int countB = 0;\n\n            int[] numred = null, numgrn = null, numblue = null;\n\n            for(int j = 0; j < 9; j++){\n                if(col[j].equals(\"R\"))\n                    countR++;\n                else if(col[j].equals(\"G\"))\n                    countG++;\n                else\n                    countB++;\n            }\n\n            if(countR % 3 !=0 || countG % 3 != 0 || countB % 3 != 0){\n                System.out.println(0);\n                continue;\n            }\n\n            if(countR != 0){\n                numred = new int[countR];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"R\"))\n                        numred[indexnum++] = num[j];\n                }\n                sort(numred);\n            }\n\n            if(countG != 0){\n                numgrn = new int[countG];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"G\"))\n                        numgrn[indexnum++] = num[j];\n                }\n                sort(numgrn);\n            }\n\n            if(countB != 0){\n                numblue = new int[countB];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"B\"))\n                        numblue[indexnum++] = num[j];\n                }\n                sort(numblue);\n            }\n\n            if(countR == 3){\n                if((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 6){\n                if(((numred[0] == numred[1] && numred[1] == numred[2] || numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1) && (numred[3] == numred[4] && numred[4] == numred[5] || numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 9){\n                if((((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1))  && ((numred[3] == numred[4] && numred[4] == numred[5]) || (numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1)) && ((numred[6] == numred[7] && numred[7] == numred[8]) || (numred[6] + 1 == numred[7] && numred[7] == numred[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            \n            if(countG == 3){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 6){\n                if(((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] || numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1) && (numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5] || numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 9){\n                if((((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1))  && ((numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5]) || (numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1)) && ((numgrn[6] == numgrn[7] && numgrn[7] == numgrn[8]) || (numgrn[6] + 1 == numgrn[7] && numgrn[7] == numgrn[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n\n            if(countB == 3){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 6){\n                if(((numblue[0] == numblue[1] && numblue[1] == numblue[2] || numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1) && (numblue[3] == numblue[4] && numblue[4] == numblue[5] || numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 9){\n                if((((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1))  && ((numblue[3] == numblue[4] && numblue[4] == numblue[5]) || (numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1)) && ((numblue[6] == numblue[7] && numblue[7] == numblue[8]) || (numblue[6] + 1 == numblue[7] && numblue[7] == numblue[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            System.out.println(1);\n        }\n        sc.close();\n\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\nclass Card {\n\t// 数と色\n\tprivate int number;\n\tprivate String color;\n\tprivate boolean used;\n\n\tCard(int number, String color) {\n\t\tthis.number = number;\n\t\tthis.color = color;\n\t\tthis.used = false;\n\t}\n\n\t// 数字のゲッター・セッター\n\tint getNumber() {\n\t\treturn number;\n\t}\n\n\tvoid setNumber(int number) {\n\t\tthis.number = number;\n\t}\n\n\t// 色のゲッター・セッター\n\tString getColor() {\n\t\treturn color;\n\t}\n\n\tvoid setColor(String color) {\n\t\tthis.color = color;\n\t}\n\n\t// 使用状況ゲッター・セッター\n\tboolean getUsed() {\n\t\treturn used;\n\t}\n\n\tvoid setUsed(boolean used) {\n\t\tthis.used = used;\n\t}\n}\n\nclass Hand {\n\t// 手札には９枚のCard型のカードを持つ\n\tprivate Card hand1 = new Card(0, \"\");\n\tprivate Card hand2 = new Card(0, \"\");\n\tprivate Card hand3 = new Card(0, \"\");\n\tprivate Card hand4 = new Card(0, \"\");\n\tprivate Card hand5 = new Card(0, \"\");\n\tprivate Card hand6 = new Card(0, \"\");\n\tprivate Card hand7 = new Card(0, \"\");\n\tprivate Card hand8 = new Card(0, \"\");\n\tprivate Card hand9 = new Card(0, \"\");\n\n\tList<Card> cardList = new ArrayList<Card>();\n\n\t// コンストラクタ\n\tHand(String lineOfNum, String lineOfColor) {\n\n\t\t// 文字列をString型にキャストし手札のカードに格納\n\t\thand1.setColor(String.valueOf((lineOfColor.charAt(0))));\n\t\thand2.setColor(String.valueOf((lineOfColor.charAt(2))));\n\t\thand3.setColor(String.valueOf((lineOfColor.charAt(4))));\n\t\thand4.setColor(String.valueOf((lineOfColor.charAt(6))));\n\t\thand5.setColor(String.valueOf((lineOfColor.charAt(8))));\n\t\thand6.setColor(String.valueOf((lineOfColor.charAt(10))));\n\t\thand7.setColor(String.valueOf((lineOfColor.charAt(12))));\n\t\thand8.setColor(String.valueOf((lineOfColor.charAt(14))));\n\t\thand9.setColor(String.valueOf((lineOfColor.charAt(16))));\n\n\t\t// 文字列の数字をint型にキャストし手札のカードに格納\n\t\thand1.setNumber((int) lineOfNum.charAt(0) - 48);\n\t\thand2.setNumber((int) lineOfNum.charAt(2) - 48);\n\t\thand3.setNumber((int) lineOfNum.charAt(4) - 48);\n\t\thand4.setNumber((int) lineOfNum.charAt(6) - 48);\n\t\thand5.setNumber((int) lineOfNum.charAt(8) - 48);\n\t\thand6.setNumber((int) lineOfNum.charAt(10) - 48);\n\t\thand7.setNumber((int) lineOfNum.charAt(12) - 48);\n\t\thand8.setNumber((int) lineOfNum.charAt(14) - 48);\n\t\thand9.setNumber((int) lineOfNum.charAt(16) - 48);\n\n\t\t// 手札をリストに格納\n\t\tcardList.add(hand1);\n\t\tcardList.add(hand2);\n\t\tcardList.add(hand3);\n\t\tcardList.add(hand4);\n\t\tcardList.add(hand5);\n\t\tcardList.add(hand6);\n\t\tcardList.add(hand7);\n\t\tcardList.add(hand8);\n\t\tcardList.add(hand9);\n\t}\n\n\tint checkVictory() {\n\n\t\t// 3組をチェック\n\t\tfor (int set = 1; set < 4; set++) {\n\t\t\ttop: for (int searchNum = 1; searchNum < 10; searchNum++) {\n\t\t\t\tfor (int firstNum = 0; firstNum < 9; firstNum++) {\n\t\t\t\t\t// 1枚目に選んだカードが使用していないとき\n\n\t\t\t\t\tif (!cardList.get(firstNum).getUsed()) {\n\n\t\t\t\t\t\t// リストの頭から1と一致しているか順番にチェック\n\t\t\t\t\t\tif (cardList.get(firstNum).getNumber() == searchNum) {\n\t\t\t\t\t\t\t// 1つ目リストの数字が一致したとき、一致した数字＋１の値を持つリストの要素を探す\n\t\t\t\t\t\t\tfor (int secondNum = 0; secondNum < 9; secondNum++) {\n\n\t\t\t\t\t\t\t\t// 2枚目に選んだカードが未使用かつ１枚目とは別のカード\n\t\t\t\t\t\t\t\tif (!cardList.get(secondNum).getUsed() && secondNum != firstNum) {\n\n\t\t\t\t\t\t\t\t\t// ３枚のセットが順子のとき\n\t\t\t\t\t\t\t\t\tif (cardList.get(secondNum).getNumber() == searchNum + 1 && cardList.get(firstNum)\n\t\t\t\t\t\t\t\t\t\t\t.getColor().equals(cardList.get(secondNum).getColor())) {\n\n\t\t\t\t\t\t\t\t\t\t// 2つのカードの色が同じかつ、数字が＋１差のとき\n\t\t\t\t\t\t\t\t\t\tfor (int thirdNum = 0; thirdNum < 9; thirdNum++) {\n\n\t\t\t\t\t\t\t\t\t\t\tif (!cardList.get(thirdNum).getUsed() && thirdNum != firstNum\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& thirdNum != secondNum) {\n\t\t\t\t\t\t\t\t\t\t\t\t// ３枚目は未使用\n\t\t\t\t\t\t\t\t\t\t\t\t// 3つのカードの色が同じで、順子のとき一組完成\n\t\t\t\t\t\t\t\t\t\t\t\tif (cardList.get(thirdNum).getNumber() == searchNum + 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& cardList.get(firstNum).getColor()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.equals(cardList.get(thirdNum).getColor())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// 組み合わせで使った３枚を使用済みに\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardList.get(firstNum).setUsed(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardList.get(secondNum).setUsed(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardList.get(thirdNum).setUsed(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak top;\n\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// 3枚のセットが刻子のとき\n\t\t\t\t\t\t\t\t\t} else if (cardList.get(secondNum).getNumber() == searchNum && cardList\n\t\t\t\t\t\t\t\t\t\t\t.get(firstNum).getColor().equals(cardList.get(secondNum).getColor())) {\n\n\t\t\t\t\t\t\t\t\t\tfor (int thirdNum = 0; thirdNum < 9; thirdNum++) {\n\t\t\t\t\t\t\t\t\t\t\t// 3枚目が未使用かつ１枚目と２枚目のカードとは別\n\t\t\t\t\t\t\t\t\t\t\tif (!cardList.get(thirdNum).getUsed() && thirdNum != firstNum\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& thirdNum != secondNum) {\n\t\t\t\t\t\t\t\t\t\t\t\t// 3枚目の色と数字がほか２枚と同じ時\n\t\t\t\t\t\t\t\t\t\t\t\tif (cardList.get(thirdNum).getNumber() == searchNum\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& cardList.get(firstNum).getColor()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.equals(cardList.get(thirdNum).getColor())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// 組み合わせで使った３枚を使用済みに\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardList.get(firstNum).setUsed(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardList.get(secondNum).setUsed(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardList.get(thirdNum).setUsed(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak top;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} // 二つ目のカード刻子のとき\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tint countTF = 0;\n\t\tfor (int checkTF = 0; checkTF < 9; checkTF++) {\n\t\t\tif (cardList.get(checkTF).getUsed()) {\n\t\t\t\tcountTF++;\n\t\t\t}\n\t\t}\n\t\tif (countTF == 9) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\n\t\tScanner scan = new Scanner(System.in);\n\t\t// 判定回数の入力\n\t\tint numberOfCheck = scan.nextInt();\n\t\t// nextIntの改行文字を空読み\n\t\t\tscan.nextLine();\n\t\t// 入力された判定回数分ループ\n\t\tfor (int i = 0; i < numberOfCheck; i++) {\n\n\n\t\t\t// 入力されたすべての数字を文字列として取得\n\t\t\tString lineOfNum = scan.nextLine();\n\t\t\t// 入力されたすべての色を文字列として取得\n\t\t\tString lineOfColor = scan.nextLine();\n\n\t\t\tHand hand = new Hand(lineOfNum, lineOfColor);\n\t\t\t// 勝利判定の処理\n\t\t\tSystem.out.println(hand.checkVictory());\n\t\t}\n\n\t\tscan.close();\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main{\n\n\t/**\n\t * ?????????????????????????????\\???????¢??????°???\n\t * ??????\n\t * 1) ????´???????????????? ??????String + String ??? Red 1 [1R] White 2 [2W] Gold 3 [3G]\n\t * 2) if??§????´¢????????????.contains() .equals() ???\n\t *\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tRummy ru = new Rummy(br.readLine(), br.readLine());\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = ru.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\n\t}// ????????????????????????????????????\n\n\t/**\n\t * ?????????CardRummy\n\t */\n\tpublic static class Rummy {\n\t\t/**\n\t\t * ?????????????????°??¶???\n\t\t */\n\t\tprivate static final int ONECARDSET = 9;\n\t\t/**\n\t\t * ?????????????????£?????????????????????\n\t\t */\n\t\tprivate static final int CASTAREA = 2;\n\t\t/**\n\t\t * ?????????????????£?????????????????°??????????´???´???\n\t\t */\n\t\tprivate static final int CASTADDRESS =0;\n\n\t\t/**\n\t\t * ????????????????´???´???\n\t\t */\n\t\tArrayList<String> card = new ArrayList<String>();\n\n\t\t/**\n\t\t * ?????°??????????????? ?????£???????????????????´???????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t */\n\t\tpublic Rummy(String tmpNum, String tmpColor) {\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\t\t\t// ?????¨??°??????????????????????´?????????´???\n\t\t\tString tmpCard = \"\";\n\n\t\t\t// for????????? ??°???+?????????????????????\n\t\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t\t/**\n\t\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t\t */\n\t\t\t\t// ????§£??????????????¨??°??????????????????\n\t\t\t\ttmpCard = transNum[cnt] + transColor[cnt];\n\t\t\t\t// ????´?\n\t\t\t\tcard.add(tmpCard);\n\t\t\t}\n\t\t}// ?????????????????????????????????\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t */\n\t\tpublic int playtheGame() {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = 0;\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialNumCard(card);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameNumCard(card);\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\n\t\t\t// ????????????????????°??????0????????¨??¨0\n\t\t\tif (card.get(ONECARDSET - 1).contains(\"0\")) {\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\tresult = 1;\n\t\t\t}\n\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}// playtheGame????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param card2\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t */\n\n\t\tpublic void serialNumCard(ArrayList<String> card) {// ?????£????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param tempNum String????????????????????°??????int??¢????????£???????????????????????¨????????°\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\n\t\t\t//??????????????°???????????¢??¨\n\t\t\tString tempNum1[] = new String[CASTAREA];\n\t\t\tString tempNum2[] = new String[CASTAREA];\n\t\t\tString tempNum3[] = new String[CASTAREA];\n\n\t\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????£????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1???String???????????????????\\???????\n\t\t\t\t\t\t * ?????????2?????????????????¢?????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1 ?????????\n\t\t\t\t\t\t * 1) ??¨????????°??§??°???????????¢????´? ??? ???????¨?????????????????????????????????°???????????????????????§???????????????????????????\n\t\t\t\t\t\t *    (??¢?????????????????????)\n\t\t\t\t\t\t * 2) ??¨????????°??§??°???????????¢????´? ??? ??¨???int[]????????£??????????????°???????????????????????????????????????????????? ???\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * \t  ?????????int[]???????´????????????°???????????¢?????????????????????????????????????????§??????????????????????????????????´???????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????2 ?????????\n\t\t\t\t\t\t * ???????????°??¢????????§????????????????????£ ???\n\t\t\t\t\t\t *\n\t\t\t\t\t\t *    ?????????????¨???????????????§???????????????????????????????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t//String+String?????¢????????????????????¢ ??????????????????\n\t\t\t\t\t\ttempNum1 = card.get(cnt1).split(\"\");\n\t\t\t\t\t\ttempNum2 = card.get(cnt2).split(\"\");\n\t\t\t\t\t\ttempNum3 = card.get(cnt3).split(\"\");\n\n\t\t\t\t\t\t// (1)3??£?¶?????????????????????????????????????\n\t\t\t\t\t\tif (Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum2[CASTADDRESS]) - 1\n\t\t\t\t\t\t\t\t&& Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum3[CASTADDRESS])\n\t\t\t\t\t\t\t\t\t\t- 2) {\n\t\t\t\t\t\t\t// (2)3??£?¶????????????????????????????????????????\n\t\t\t\t\t\t\tif (tempNum1[CASTADDRESS + 1].equals(tempNum2[CASTADDRESS + 1])\n\t\t\t\t\t\t\t\t\t&& tempNum2[CASTADDRESS + 1].equals(tempNum3[CASTADDRESS + 1])) {\n\n\t\t\t\t\t\t\t\t// (3)???????????????????????§?????????????????????\n\t\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\")\n\t\t\t\t\t\t\t\t\t\t&& !card.get(cnt3).contains(\"0\")) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶??????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialNumCard ????????????????????????\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param card ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t */\n\t\tpublic void sameNumCard(ArrayList<String> card) {// ???????????°????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t\t// (1)???????????????????????????????????????\n\t\t\t\t\t\tif (card.get(cnt1).equals(card.get(cnt2)) && card.get(cnt2).equals(card.get(cnt3))) {\n\n\t\t\t\t\t\t\t// ???????????????????????§?????????????????????\n\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\")\n\t\t\t\t\t\t\t\t\t&& !card.get(cnt3).contains(\"0\")) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶??????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameNumCard????????????????????????\n\t}// Rummy?????????????????????\n}// NRummy?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    static boolean sameNum(Set num1, Set num2, Set num3){\n        if((num1.num == num2.num) && (num2.num == num3.num) && (num3.num == num1.num)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static boolean serialNum(Set num1, Set num2, Set num3){\n        if((num2.num - num1.num == 1) && (num3.num - num2.num == 1)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color) && (cl3.color == cl1.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    public static boolean alternateColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color != cl2.color) && (cl2.color != cl3.color) && (cl3.color != cl1.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n\n    for(int i=0;i<n;i++){\n      int[] num = new int[9];\n      for(int j=0;j<9;j++){\n        num[j] = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      int[] color = new int[9];\n      for(int l=0;l<9;l++){\n        switch(ch[l]){\n          case \"R\": color[l] = 1;\n                    break;\n          case \"G\": color[l] = 2;\n                    break;\n          case \"B\": color[l] = 3;\n                    break;\n          default : break;\n        }\n      }\n      \n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = num[j]; \n          set1[j].color = color[j];\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = num[j+3];\n          set2[j].color = color[j+3];\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = num[j+6];\n          set3[j].color = color[j+6];\n      }\n\n      int accept = 0;\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n      if(check1.sameNum(set1[0],set1[1],set1[2])){\n          if(check1.alternateColor(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check1.serialNum(set1[0],set1[1],set1[2])){\n          if(check1.sameColor(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameNum(set2[0],set2[1],set2[2])){\n          if(check2.alternateColor(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check2.serialNum(set2[0],set2[1],set2[2])){\n          if(check2.sameColor(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameNum(set3[0],set3[1],set3[2])){\n          if(check3.alternateColor(set3[0],set3[1],set3[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check3.serialNum(set3[0],set3[1],set3[2])){\n          if(check3.sameColor(set3[0],set3[1],set3[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    }//end_of_while\n  }//end_of_main\n}//end_of_Rummy"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(blueList) && Confirm(greenList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        if (len == 0)\n            return true;\n\n        // 長さ3の時\n        if (len / 3 == 1) {\n            if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n                return true;\n            } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        // 長さ6の時\n        if (len / 3 == 2) {\n            for (int i = 0; i < 4; i++) {\n                for (int j = i + 1; j < 5; j++) {\n                    for (int k = j + 1; j < 6; k++) {\n                        if (list.get(i) == list.get(j) && list.get(j) == list.get(k)) {\n                            return true;\n                        } else if (list.get(i) + 1 == list.get(j) && list.get(j) + 1 == list.get(k)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n\n        boolean finalflg0 = false;\n        boolean finalflg1 = false;\n        boolean finalflg2 = false;\n\n        // 長さ9の時\n        for (int i = 0; i < Math.pow(3, 9); i++) {\n\n            int flg0 = 0;\n            int flg1 = 0;\n            int flg2 = 0;\n\n            int last0 = 0;\n            int last1 = 0;\n            int last2 = 0;\n\n            for (int j = 0; j < 9; j++) { // 9文字に対して一つずつ見ていく\n                int nannbannme = 0;\n                int tmp = i;\n                for (int k = 0; k < j; k++) {\n                    nannbannme++;\n                    tmp /= 3;\n                }\n\n                // System.out.println(\"何番目:\" + nannbannme);\n\n                switch (tmp % 3) {\n                case 0:\n                    if (last0 == list.get(nannbannme)) {\n                        if (flg0 == 1) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 1;\n                        }\n                    }\n\n                    if (last0 + 1 == list.get(nannbannme)) {\n                        if (flg0 == 2) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 2;\n                        }\n                    }\n\n                    last0 = list.get(nannbannme);\n                    break;\n                case 1:\n                    if (last1 == list.get(nannbannme)) {\n                        if (flg1 == 1) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 1;\n                        }\n                    }\n\n                    if (last1 + 1 == list.get(nannbannme)) {\n                        if (flg1 == 2) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 2;\n                        }\n                    }\n\n                    last1 = list.get(nannbannme);\n\n                    break;\n                case 2:\n                    if (last2 == list.get(nannbannme)) {\n                        if (flg2 == 1) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 1;\n                        }\n                    }\n\n                    if (last2 + 1 == list.get(nannbannme)) {\n                        if (flg2 == 2) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 2;\n                        }\n                    }\n\n                    last2 = list.get(nannbannme);\n\n                    break;\n                }\n            }\n\n        }\n\n        return (finalflg1 && finalflg2 && finalflg0);\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void initiallize(boolean b[]) {\n\t\tfor (int i = 0; i < b.length; ++i) {\n\t\t\tb[i] = false;\n\t\t}\n\t}\n\n\tpublic static int same(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i]);\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int continuous(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] - 1 == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i] - 2);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttmp = research(num, num[i] + 1);\n\t\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (num[i] - 2 == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i] - 1);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (num[i] + 2 == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i] + 1);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (num[i] + 1 == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i] - 1);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttmp = research(num, num[i] + 2);\n\t\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int research(int num[], int k) {\n\t\tfor (int i = num.length - 1; i >= 0; --i) {\n\t\t\tif (num[i] == k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static int judge(int num[], boolean b[]) {\n\t\tint count = 0;\n\t\tint j = 0;\n\t\tint number[] = new int[9];\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (b[i] == true) {\n\t\t\t\tnumber[j] = num[i];\n\t\t\t\t++j;\n\t\t\t}\n\t\t}\n\t\tif (number[2] == 0)\n\t\t\treturn -1;\n\t\t// same three number\n\t\tcount += same(number);\n\t\t// continuous three number\n\t\tcount += continuous(number);\n\n\t\treturn count;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tboolean R[], G[], B[];// position of R,B,G\n\t\tint count;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new boolean[9];\n\t\tB = new boolean[9];\n\t\tG = new boolean[9];\n\t\tint i, j;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[j] = true;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[j] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[j] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\t\t\t\tcount = 0;\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tint tmp = judge(num, R);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\ttmp = judge(num, B);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\ttmp = judge(num, G);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\tif (count == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t\tinitiallize(R);\n\t\t\t\tinitiallize(B);\n\t\t\t\tinitiallize(G);\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "package Rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tString ans = \"\";\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\t\tif(R.size()%3 != 0 || G.size()%3 != 0 || B.size()%3 != 0){\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tif(numSearch(R)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tif(numSearch(G)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tif(numSearch(B)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\n\tprivate static boolean numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tif(r.size() == 3){\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return true;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int loop = sc.nextInt();\n        for(int x=0;x<loop;x++){\n            int countR=0, countG=0, countB=0, count=0, count2=0, p=0, q=0, r=0;\n            int[] l = new int[2];\n            int[] m = new int[6];\n            int[] n = new int[3];\n            int[] num = new int[9];\n            String[] cor = new String[9];\n            for(int i=0;i<9;i++){\n                num[i] = sc.nextInt();\n            }\n            for(int i=0;i<9;i++){\n                cor[i] = sc.next();\n                if(cor[i].equals(\"R\")) countR++;\n                if(cor[i].equals(\"G\")) countG++;\n                if(cor[i].equals(\"B\")) countB++;\n            }\n            if((countR%3)!=0 || (countG%3)!=0 || (countB%3)!=0){\n                System.out.println(\"0\");\n                continue;\n            }\n            Arrays.sort(num);\n            for(int i=0;i<9;i+=3){\n                if(num[i]==num[i+1] && num[i]==num[i+2]) count++;\n            }\n            if(count==3){\n                System.out.println(\"1\");\n                continue;\n            }\n            for(int i=0;i<7;i++){\n                if(num[i]==num[i+1] && num[i]==num[i+2]){\n                    l[p]=i;\n                    p++;\n                    i += 2;\n                }\n            }\n            if(p==0){\n                if((num[0]+1)==num[1]){\n                    if((num[0]+2)==num[2]){\n                        count2++;\n                        if((num[3])+1==num[4]){\n                            if((num[3])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }else if(num[3]+2==num[6]){\n                                count2++;\n                                if((num[5]+1)==num[7] && (num[5]+2)==num[8]) count2++;\n                            }\n                        }else if((num[3]+1)==num[5]){\n                            if((num[3])+2==num[6]){\n                                count2++;\n                                if((num[4]+1)==num[7] && (num[4]+2)==num[8]) count2++;\n                            }\n                        }\n                    }else if((num[0]+2)==num[3]){\n                        count2++;\n                        if((num[2])+1==num[4]){\n                            if((num[2])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }else if(num[2]+2==num[6]){\n                                count2++;\n                                if((num[5]+1)==num[7] && (num[5]+2)==num[8]) count2++;\n                            }\n                        }\n                    }\n                }else if((num[0]+1)==num[2]){\n                    if((num[0]+2)==num[3]){\n                        count2++;\n                        if((num[1])+1==num[4]){\n                            if((num[1])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }else if(num[1]+2==num[6]){\n                                count2++;\n                                if((num[5]+1)==num[7] && (num[5]+2)==num[8]) count2++;\n                            }\n                        }\n                    }else if((num[0]+2)==num[4]){\n                        count2++;\n                        if((num[1])+1==num[3]){\n                            if((num[1])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }\n                        }\n                    }\n                }\n                if(count2==3){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            if(p==1){\n                for(int i=0;i<9;i++){\n                    if(i==l[0] || i==(l[0]+1) || i==(l[0]+2)) continue;\n                    m[q] = i;\n                    q++;\n                }\n                if((num[m[0]]+1)==num[m[1]] && (num[m[0]]+2)==num[m[2]]){\n                    count2++;\n                }\n                if((num[m[3]]+1)==num[m[4]] && (num[m[3]]+2)==num[m[5]]){\n                    count2++;\n                }\n                if(count2==2){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            if(p==2){\n                for(int i=0;i<9;i++){\n                    if(i==l[0] || i==(l[0]+1) || i==(l[0]+2) || i==l[1] || i==(l[1]+1) || i==(l[1]+2)) continue;\n                    n[r] = i;\n                    r++;\n                }\n                if((num[n[0]]+1)==num[n[1]] && (num[n[0]]+2)==num[n[2]]){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            System.out.println(\"0\");\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(tmpNum, tmpColor);\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);\n\n\t\t}\n\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++) {// debug chk point\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}// end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum++] = intNum;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {// debug chk point\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0) {\n\n\t\t\tresult = 1;\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tpublic static int[] sameNumCard(int[] card) {// debug chk point\n\n\t\t// int tmpCnt =0;\n\t\t// int[] tmpSave = new int[ONECARDSET];\n\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] && card[i] == card[k]) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic static int[] serialNumCard(int[] card) {// debug chk point\n\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] - 1 && card[i] == card[k] - 2) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Collections;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\t//データ入力の準備\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t//データセット数\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor (int i = 0; i < n; i++){\n\t\t\tint[] temp = new int[9];\n\t\t\tList<Integer> red = new ArrayList<Integer>();\n\t\t\tList<Integer> blue = new ArrayList<Integer>();\n\t\t\tList<Integer> green = new ArrayList<Integer>();\n\t\t\t\n\t\t\t//一旦全ての数字をtempに保存\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\ttemp[j] = sc.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\t//色ごとのリストに格納\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\tString color = sc.next();\n\t\t\t\t\n\t\t\t\tif (color == \"R\"){\n\t\t\t\t\tred.add(temp[j]);\n\t\t\t\t}else if (color == \"B\"){\n\t\t\t\t\tblue.add(temp[j]);\n\t\t\t\t}else{\n\t\t\t\t\tgreen.add(temp[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//データのチェック\n\t\t\tif (check(red) == 1 || check(blue) == 1 || check(green) == 1){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tprivate static int check(List<Integer> data){\n\t\tint[] check = {0,0,0,0,0,0,0,0,0};\n\t\tboolean last = false;\n\t\tboolean one = false;\n\t\tboolean two = false;\n\t\t\n\t\tfor (int i = 0; i < data.size(); i++){\n\t\t\t\tcheck[data.get(i)] += 1;\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < data.size(); i++){\n\t\t\t//同じ数字３つの判定\n\t\t\t/*if (data.get(i) >= 3){\n\t\t\t\treturn 1;\n\t\t\t}*/\n\t\t\t\n\t\t\t\n\t\t\t//連番の判定\n\t\t\ttwo = one;\n\t\t\tone = last;\n\t\t\t\n\t\t\tif (data.get(i) >= 1){\n\t\t\t\tlast = true;\n\t\t\t}else{\n\t\t\t\tlast = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (last == true && one == true && two == true){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn 0;\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\tString[] linearr;\n\t\tint T; \n\t\tint inx;\n\t\tint i, j, k, l, ij;\n\t\tint last;\n\t\tint f_reach;\n\t\tint[] arr_num;//??°???\n\t\tint[][] arr_color;//?????§?????????????????°???\n\t\t//int[] arr_color_cnt;\n\t\tint set = 0;\n\t\tint f_ren = 0;\n\t\ttry{\n\t\t\tline = reader.readLine();\n\t\t\tT = Integer.parseInt(line);\n\t\t\tfor(i=0; i<T; i++){\n\t\t\t\tarr_num = new int[10];\n\t\t\t\tarr_color = new int[3][10];\n\t\t\t\tint[] arr_color_cnt = {0, 0, 0};\n\t\t\t\tf_reach = 0;\n\t\t\t\tset = 0;\n\t\t\t\t//??°?????????\n\t\t\t\tline = reader.readLine();\n\t\t\t\tlinearr = line.split(\" \");\n\t\t\t\tfor(j=0; j<9; j++){\n\t\t\t\t\tarr_num[j] = Integer.parseInt(linearr[j]);\n\t\t\t\t}\n\t\t\t\t//?????§?????????\n\t\t\t\tline = reader.readLine();\n\t\t\t\tline = line.replace(\"R\", \"0\");\n\t\t\t\tline = line.replace(\"G\", \"1\");\n\t\t\t\tline = line.replace(\"B\", \"2\");\n\t\t\t\tlinearr = line.split(\" \");\n\t\t\t\tfor(j=0; j<9; j++){\n\t\t\t\t\tinx = Integer.parseInt(linearr[j]);\n\t\t\t\t\tarr_color[inx][arr_color_cnt[inx]] = arr_num[j];\n\t\t\t\t\tarr_color_cnt[inx] ++;\n\t\t\t\t\t//System.out.println(inx+\", \"+arr_color_cnt[inx]);\n\t\t\t\t}\n\t\t\t\t//????????????????????????\n\t\t\t\tfor(k=0;k<3;k++){\n\t\t\t\t\tfor(j=0;j<=arr_color_cnt[k]-1;j++){\n\t\t\t\t\t\tfor(ij=arr_color_cnt[k]; ij>j; ij--){\n\t\t\t\t\t\t\tif(arr_color[k][ij] < arr_color[k][ij-1]){\n\t\t\t\t\t\t\t\tint _t = arr_color[k][ij];\n\t\t\t\t\t\t\t\tarr_color[k][ij] = arr_color[k][ij-1];\n\t\t\t\t\t\t\t\tarr_color[k][ij-1] = _t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//??????\n\t\t\t\tset = 0;\n\t\t\t\tfor(k=0; k<3; k++){\n\t\t\t\t\tlast = 0;\n\t\t\t\t\tf_reach = 0;\n\t\t\t\t\tf_ren = 0;\n\t\t\t\t\tfor(j=1, l=arr_color_cnt[k]+1; j<l; j++){\n\t\t\t\t\t\t/*if(arr_color[k][j] == 0){\n\t\t\t\t\t\t\tSystem.out.println(\"none\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tif(last==0){\n\t\t\t\t\t\t\tlast = arr_color[k][j];\n\t\t\t\t\t\t}else if(last == arr_color[k][j] - 1 && f_ren==0){//??£????????????\n\t\t\t\t\t\t\t//System.out.println(\"ren\");\n\t\t\t\t\t\t\tif(f_reach>=2){\n\t\t\t\t\t\t\t\t//?????????????????????????¶???????\n\t\t\t\t\t\t\t\tf_reach -= 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(f_reach%2 == 0){\n\t\t\t\t\t\t\t\tf_reach += 1;//??£????????????\n\t\t\t\t\t\t\t}else if(f_reach%2 == 1){//??£???????????????????????£?????????\n\t\t\t\t\t\t\t\t//??????\n\t\t\t\t\t\t\t\tf_reach -= 1;\n\t\t\t\t\t\t\t\tf_ren = 2;//??£??????????????¢\n\t\t\t\t\t\t\t\tset ++;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tf_reach -= 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(last == arr_color[k][j]){\n\t\t\t\t\t\t\tif(f_reach>>1 %2 == 0){\n\t\t\t\t\t\t\t\tf_reach += 2;//?????????????????????\n\t\t\t\t\t\t\t}else if(f_reach>>1 %2 == 1){//???????????????\n\t\t\t\t\t\t\t\t//??????\n\t\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t\t\tset ++;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tf_reach -= 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//System.out.println(last+\", \"+arr_color[k][j]+\", \"+f_reach+\", \"+k+\", \"+j+\"::\"+set);\n\t\t\t\t\t\tlast = arr_color[k][j];\n\t\t\t\t\t\tif(f_ren>0)f_ren--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(set == 3){\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\t\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    static HashMap<Integer, int[]> map;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        map = permutation9();\n        int n = sc.nextInt();\n        for (int i = 0; i < n; i++) {\n            int[] num = new int[9];\n            int[] color = new int[9];\n            for (int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for (int j = 0; j < 9; j++) {\n                String s = sc.next();\n                if (s.equals(\"R\")) color[j] = 0;\n                else if (s.equals(\"G\")) color[j] = 1;\n                else if (s.equals(\"B\")) color[j] = 2;\n            }\n            System.out.println(check(num, color));\n        }\n    }\n\n    public static int check(int[] num, int[] color) {\n        for (int key : map.keySet()) {\n            int[] li = map.get(key);\n            for (int m = 0; m < 3; m++) {\n                if (color[li[3 * m + 0]] == color[li[3 * m + 1]] && color[li[3 * m + 0]] == color[li[3 * m + 2]]) {\n                    if ((num[li[3 * m + 0]] == num[li[3 * m + 1]] && num[li[3 * m + 0]] == num[li[3 * m + 2]])\n                            || (num[li[3 * m + 0]] == 1 + num[li[3 * m + 1]] && num[li[3 * m + 0]] == 2 + num[li[3 * m + 2]])\n                            || (num[li[3 * m + 0]] == 2 + num[li[3 * m + 1]] && num[li[3 * m + 0]] == 1 + num[li[3 * m + 2]])\n                            || (num[li[3 * m + 0]] == 1 + num[li[3 * m + 1]] && num[li[3 * m + 0]] == -1 + num[li[3 * m + 2]])\n                            || (num[li[3 * m + 0]] == -1 + num[li[3 * m + 1]] && num[li[3 * m + 0]] == 1 + num[li[3 * m + 2]])\n                            || (num[li[3 * m + 0]] == -2 + num[li[3 * m + 1]] && num[li[3 * m + 0]] == -1 + num[li[3 * m + 2]])\n                            || (num[li[3 * m + 0]] == -1 + num[li[3 * m + 1]] && num[li[3 * m + 0]] == -2 + num[li[3 * m + 2]])) {\n                        if(m!=2)continue;\n                        return 1;\n                    }\n                    else break;\n                }\n                else break;\n            }\n\n        }\n        return 0;\n    }\n\n    public static HashMap<Integer, int[]> permutation9() {\n        int[] a = {0, 1, 2, 3, 4, 5, 6, 7, 8};\n        Queue<int[]> que = new ArrayDeque<int[]>();\n        HashMap<Integer, int[]> map = new HashMap<Integer, int[]>();\n        que.add(a);\n        map.put(getkey(a), a);\n        while (que.isEmpty() == false) {\n            int[] tt = que.remove();\n            for (int i = 0; i < 9; i++) {\n                for (int j = i + 1; j < 9; j++) {\n                    int[] t = tt.clone();\n                    int b = t[i] + 0;\n                    t[i] = t[j] + 0;\n                    t[j] = b;\n                    int key = getkey(t);\n                    if (!map.containsKey(key)) {\n                        que.add(t);\n                        map.put(key, t);\n                    }\n                }\n            }\n        }\n        return map;\n    }\n\n    public static int getkey(int[] a) {\n        int key = 0, b = 1;\n        for (int i = 0; i < 9; i++) {\n            key += a[i] * b;\n            b *= 10;\n        }\n        return key;\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tString[] c = new String[9];\n\t\tint[][] num = new int[3][9];\n\t\tfor (int l = 0; l < T; l++) {\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\t\tnum[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tc[i] = sc.next();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tswitch (c[i].charAt(0)) {\n\t\t\t\tcase 'R':\n\t\t\t\t\tnum[0][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tnum[1][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnum[2][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\t\tif (num[i][j] >= 3) {\n\t\t\t\t\t\tnum[i][j] -= 3;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\twhile (j < 7 && num[i][j] > 0 && num[i][j + 1] > 0 && num[i][j + 2] > 0) {\n\t\t\t\t\t\tnum[i][j]--;\n\t\t\t\t\t\tnum[i][j + 1]--;\n\t\t\t\t\t\tnum[i][j + 2]--;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 3)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T=scan.nextInt();\n\t\tfor(int roop=0;roop<T;roop++){\n\t\t\tint[] n = new int[9];\n\t\t\tint[][] card = new int[3][9];\n\t\t\tchar[] c = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tn[i]=scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tc[i]=scan.next().charAt(0);\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tswitch(c[i]){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcard[0][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcard[1][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcard[2][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint set=0;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\t\tif(card[i][j]>2){\n\t\t\t\t\t\tcard[i][j]-=3;\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t\tif(j<7 && card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0){\n\t\t\t\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\t\t\t\tcard[i][j+k]-=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set>2){\n\t\t\t\tSystem.out.println('1');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println('0');\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * ??????????????¬???\n *\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLECARDSET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\t//private static final int ADDRESSPLUSTHREE = 3;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < set; cnt++) {\n\n\t\t\t// ????????????????´???´???\n\t\t\tArrayList<TestCard> cardArr = new ArrayList<>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t//???????????????????????£???\n\t\t\t if (transNum.length > transColor.length) {\n\n\t\t\t\t/**\n\t\t\t\t * ???????????????????????????????????£????????????????????????????????§?????????\n\t\t\t\t */\n\t\t\t\tTestCard.setOnecardset(transNum.length);\n\n\t\t\t\t/**\n\t\t\t\t * @param cntcardnumber\n\t\t\t\t *            ??????????????°????????°????????°??????\n\t\t\t\t */\n\t\t\t\tfor (int cntcardnumber = ADDRESSPLUSZERO; cntcardnumber < TestCard.getOnecardset(); cntcardnumber++) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ?????¶?????????????????????\n\t\t\t\t\t * ????????°?????????????????????????????´???\n\t\t\t\t\t * ???????????????????????°??????????????´???????????????\n\t\t\t\t\t *\n\t\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\t\tif (cntcardnumber > transNum.length) {\n\t\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cntcardnumber]), ZERO));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cntcardnumber]), transColor[cntcardnumber]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????????????£???\n\t\t\t} else {\n\n\t\t\t\t/**\n\t\t\t\t * ???????????????????????????????????£????????????????????????????????§?????????\n\t\t\t\t */\n\t\t\t\tTestCard.setOnecardset(transColor.length);\n\n\t\t\t\t/**\n\t\t\t\t * @param cntcardcolor\n\t\t\t\t *            ????????????????????°????????°??????\n\t\t\t\t */\n\t\t\t\tfor (int cntcardcolor = ADDRESSPLUSZERO; cntcardcolor < TestCard.getOnecardset(); cntcardcolor++) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ?????¶??????????????????????????????????????°??????????????´??????????????????????????????\n\t\t\t\t\t * \t\t\t?????????????????????????????°?????????????????°?£???°????????§?????????????´??????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t * ???????????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\t\tif (cntcardcolor > transColor.length) {\n\t\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\t\tcardArr.add(new TestCard(ADDRESSPLUSZERO, transColor[cntcardcolor]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cntcardcolor]), transColor[cntcardcolor]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = playtheGame(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.removeAll(cardArr);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tpublic static int playtheGame(ArrayList<TestCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t/**\n\t\t * @Warnning sort();\n\t\t */\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<TestCard>() {\n\t\t\t@Override\n\t\t\tpublic int compare(TestCard numA, TestCard numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialNumCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameNumCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *\t???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????????????£?????????\n\t\t\t */\n\t\t\tif (((String)cardArr.get(cnt).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\tif (count == TRIPLECARDSET) {//?????§??????????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// playtheGame????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param card2\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n\tpublic static void sameNumCard(ArrayList<TestCard> cardArr) {\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < TestCard.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < TestCard.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < TestCard.getOnecardset(); cnt3++) {\n\n\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\tif (((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt2).getFrontnumber()))&&\n\t\t\t\t\t\t\t((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt3).getFrontnumber()))) {\n\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (((String)cardArr.get(cnt1).getRearColor()).equals(((String)cardArr.get(cnt2).getRearColor()))\n\t\t\t\t\t\t\t\t&& ((String)cardArr.get(cnt2).getRearColor()).equals(((String)cardArr.get(cnt3).getRearColor()))) {\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!((String)cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String)cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String)cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameNumCard????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n\tpublic static void serialNumCard(ArrayList<TestCard> cardArr) {\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < TestCard.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < TestCard.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < TestCard.getOnecardset(); cnt3++) {\n\n\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\tif (((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt2).getFrontnumber() - 1))&&\n\t\t\t\t\t\t\t((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt3).getFrontnumber() - 2))) {\n\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (((String)cardArr.get(cnt1).getRearColor()).equals(((String)cardArr.get(cnt2).getRearColor()))\n\t\t\t\t\t\t\t\t&& ((String)cardArr.get(cnt2).getRearColor()).equals(((String)cardArr.get(cnt3).getRearColor()))) {\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!((String)cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String)cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String)cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialNumCard ????????????????????????\n\n}// RummyTest????????????\n\n\n/**\n * ?????????Card\n *\n * <pre>\n * ????????????????????????????????£????????¨???????????????????????????\n * ??????????????????????????§???\n *\n * 1. ?????????????????°??????????¨????????????¶?????????\n * 2. ????????§????±???¨??§???????????§????????????\n * 3. javadoc???????????????????????¨\n * 4. ??\\???????????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n *\n */\nclass TestCard {\n\t/**\n\t * int ??????????????°??????????????\\????????±????????\\??????\n\t */\n\tprivate static int onecardset;\n\n\t/**\n\t * int ????????????????????????????????°????????¢????£???¢???\n\t * 2???????¬?????????????????????¨??????\n\t */\n\t//private static final int CARDPAGE = 2;\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶??????????????????????????\\????????±????????\\??????\n\t */\n\tprivate static int frontnumber;\n\n\t/**\n\t * String ?????????????????????????¨????????????????????????????????????\\????????±????????\\??????\n\t */\n\tprivate static String rearColor;\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param onecardset ????????????????????°???????´?\n\t */\n\tpublic static void setOnecardset(int onecardset) {\n\t\tTestCard.onecardset = onecardset;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return???????´??????????????????????\n\t */\n\tpublic static int getOnecardset() {\n\t\treturn onecardset;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic static void setFrontnumber(int frontnumber) {\n\t\tTestCard.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontcolorTC int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic static void setFrontnumber(TestCard frontcolorTC) {\n\t\tfrontnumber = frontcolorTC.frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return???int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColorTC String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic static void setRearColor(TestCard rearColorTC) {\n\t\tTestCard.rearColor = rearColorTC.rearColor;\n\t}\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic static void setRearColor(String rearColor) {\n\t\tTestCard.rearColor = rearColor;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic static String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic TestCard() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO ????????° ZERO\n\t */\n\tpublic TestCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ???????????????????????°??????????????´???, ???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param tmp???????????° ADDRESSPLUSSZERO???????????¶????????????int???????????±???\n\t */\n\tpublic TestCard(TestCard tmp) {\n\t\tfrontnumber = tmp.frontnumber;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param transNum\n\t *            ???????????????????????????????????°???\n\t * @param transColor\n\t *            ????????????????????????????????????\n\t */\n\tpublic TestCard(int transNum, String transColor) {\n\t\t// ?????¬???int?????????????????????int???????????????\n\t\tfrontnumber = transNum;\n\t\t// ?????¬???String?????????????????????String???????????????\n\t\trearColor = transColor;\n\t}\n}// ??????????????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir = 0;\n\t\tint ig = 0;\n\t\tint ib = 0;\n\t\tint count = 0;\n\t\tchar c;\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tj = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += judge(nr, ir) + judge(ng, ig) + judge(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int judge(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\n\t\t //????????°????¢???????????????°\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt++] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°???\n\t\t\t\t\t if(work_cnt % 3 == 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[++i] && work[i]  == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t \t\t\t\t\t\t\t else if(work[i] + 1 == work[++i]  && work[i] + 1 == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t i++;\n\t\t\t\t\t \t}\n\t\t\t\t }\n\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLECARDSET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<CardTC> cardArr = new ArrayList<CardTC>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// ?????????????????????????????????\n\n\tprivate static int utRummy(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????????????£?????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLECARDSET) {// ?????§??????????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}// utRummy????????????\n\n\tprivate static void sameCard(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}// sameCard????????????\n\n\tprivate static void serialCard(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\n\t\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t// ???????????¨\n\t\t\t\t\t\t\tSystem.out.println(\"????????°????????????????????????\" + cnt1 + \",\" + cnt2 + \",\" + cnt3 + \"!!!!\");\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????\n}// DebugRu????????????\n\nclass CardTC {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶??????????????????????????\\????????±????????\\??????\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨????????????????????????????????????\\????????±????????\\??????\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic CardTC() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO ????????° ZERO\n\t */\n\tpublic CardTC(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\n\tpublic CardTC(int num, String color) {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n}// CardTC????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ??????????????¶???????????¨?????¨???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? : ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * ????????????????¨??????????????????????\n\t\t\t */\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tcard_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????§??????????????????????????¶????????????????????¨????¨?\n\t\t *\n\t\t **** ?????????????????§???????¨?????????????\n\t\t *\n\t\t * int result;\n\t\t *\n\t\t * System.out.println(result = (toolcnt== 0)? 1:0);\n\t\t */\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void card_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3-1)?????£?¶??????°???????????????????????°?????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// ????????????????????????????¨????????????????\n\t\t\t\t\t\t\t\tfor (int tool_btn = 0; tool_btn < cardArr.size(); tool_btn++) {\n\t\t\t\t\t\t\t\t\tif (cardArr.get(tool_btn) == cardArr.get(cnt1)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt2)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt3)) {\n\t\t\t\t\t\t\t\t\t\t// ????????§?¨??????¢????????????????????????????????????\n\t\t\t\t\t\t\t\t\t\tcardArr.get(tool_btn).setUse(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber() || cardArr.get(cnt2)\n\t\t\t\t\t\t.getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_card = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_card);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card ?????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tboolean flag = true;\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!(Check(counter[0] % 3) && Check(counter[1] % 3) && Check(counter[2] % 3))) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) { \n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;//だめなヤツがあった時点でもうbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        \n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji]++;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji]++;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji]++;\n        \t}\n        \t\n        \t\n        \t\n        \tint win = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0 && k < 7)\n            \t\t{\n            \t\t\twin++;\n            \t\t\tcard[j][k]--;\n            \t\t\tcard[j][k + 1]--;\n            \t\t\tcard[j][k + 2]--;\n            \t\t\tk--;\n            \t\t\tcontinue;\n            \t\t}\n        \t\t\telse if (card[j][k] >= 3)\n        \t\t\t{\n        \t\t\t\twin++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}\n        \tif (win >= 3)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ??????????????¶???????????¨?????¨???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n\n//\t\tfor (int nci = 0; nci < cardArr.size(); nci++) {\n//\t\t\tSystem.out.println(cardArr.get(nci).getFrontnumber()+cardArr.get(nci).getRearColor());\n//\t\t}\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tcard_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\t *\n\t\t * ?????????????????§??????????????°????????§???????????????\n\t\t *\n\t\t * int result;\n\t\t *\n\t\t * System.out.println(result = (toolcnt== 0)? 1:0);\n\t\t */\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void card_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3-1)?????£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t\t\t||cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t\t\t// ????????????for???????????§??±???????????¨?????£?§£\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// (3-2)??°???????????????????????????\n//\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n//\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n//\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n////\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n////\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n////\t\t\t\t\t\t\t\t}\n//\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n//\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n//\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n//\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()||\n\t\t\t\t\t\tcardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\n\t\t\t\t// ????????????????????????????????±???????????¨????????¨??°??????????????§???????????????3R 2R 1R,????????????5G 4G 5G\n//\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n//\t\t\t\t\t// ???????????????????????????????????°\n//\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n//\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n//\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n//\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card ?????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint[] intHairetsuNum = new int[9]; \n\t\tString[] strHairetsuNum = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString[] strHairetsuColor = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\t\t\t\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\t\t\t\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();;\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\t num4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println( i + \" : 1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(i + \" : 0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * ??????????????¬???\n *\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\n\npublic class Main {\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<CardTC> cardArr = new ArrayList<CardTC>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ???????????????????????£???\n\t\t\tif (transNum.length > transColor.length) {\n\t\t\t\t/**\n\t\t\t\t * ?????¶????????????????????? ????????°?????????????????????????????´??? ???????????????????????°??????????????´???????????????\n\t\t\t\t *\n\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\tfor (int cnt2 = 0; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tprivate static int utRummy(ArrayList<CardTC> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void sameCard(ArrayList<CardTC> cardArr) {\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameCard????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void serialCard(ArrayList<CardTC> cardArr) {\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????????????????\n\n}// DebugRu?????????????????????\n\n/**\n * ?????????Card\n *\n * <pre>\n * ????????????????????????????????£????????¨???????????????????????????\n * ??????????????????????????§???\n *\n * 1. ?????????????????°??????????¨????????????¶?????????\n * 2. ????????§????±???¨??§???????????§????????????\n * 3. javadoc???????????????????????¨\n * 4. ??\\???????????????????????????????????????????????????\n *\n * ???????????????????????°\n * ??????????????????????????????????§£??????????????????????????????????????????????????£???????????¨\n * </pre>\n *\n * @author ?????????????????§???\n *\n */\nclass CardTC {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic CardTC() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic CardTC(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic CardTC(int num, String color) {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return???int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// CardTC?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\twhile (sc.hasNextLine()){\n\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 1;j < tehuda.size();j++) {\n\t\t\t\tif(!(tehuda.get(j).getColor().equals(checkColor))) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\t\n\n\t\t\t\tif(cSetList.get(j).size() >= 6) {\n\t\t\t\t\tif(cSetList.get(j).get(0)  == cSetList.get(j).get(1) && cSetList.get(j).get(2) == cSetList.get(j).get(3) && cSetList.get(j).get(4) == cSetList.get(j).get(5) ){\n\t\t\t\t\t\tpoint += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(cSetList.get(j).size() == 9) {\n\t\t\t\t\tif(cSetList.get(j).get(3)  == cSetList.get(j).get(4) && cSetList.get(j).get(5) == cSetList.get(j).get(6) && cSetList.get(j).get(7) == cSetList.get(j).get(8) ){\n\t\t\t\t\t\tpoint += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() -2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\t// game set\n\t\tint gameset = sc.nextInt();\n\n\t\tint[][] cardset = new int[UTRummy.CARDPAGE][UTRummy.ONECARDSET];\n\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tcardset[j][k] = sc.nextInt();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tString tmpcolor = sc.next();\n\t\t\t\t\t\tint intColor = 0;\n\t\t\t\t\t\tif (tmpcolor.equals(\"R\")) {\n\t\t\t\t\t\t\tintColor = UTRummy.RED;\n\t\t\t\t\t\t} else if (tmpcolor.equals(\"G\")) {\n\t\t\t\t\t\t\tintColor = UTRummy.GREEN;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tintColor = UTRummy.BLUE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcardset[j][k] = intColor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tUTRummy utr = new UTRummy();\n\t\t\tutr.setCardset(cardset);\n\t\t\tcardset = utr.getCardset();\n\n\t\t\tint intCount = 0;\n\t\t\tintCount = utr.playtheGame(cardset); // ?????????\n\n\t\t\tif (3 <= intCount) {\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass UTRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// color\n\tstatic final int RED = 0;\n\tstatic final int GREEN = 1;\n\tstatic final int BLUE = 2;\n\n\tint[][] Cardset = new int[CARDPAGE][ONECARDSET];\n\n\tpublic UTRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn Cardset;\n\t}\n\n\tpublic void setCardset(int[][] cardset) {\n\t\tthis.Cardset = settingcardplay(cardset);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {\n\n\t\tfor (int i = 0; i < 8; i++) {\n\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 8; i++) {\n\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\n\t\tint intCount = 0;\n\n\t\tfor (int k = 0; k < 7; k++) {\n\n\t\t\tfor (int j = k + 1; j < 8; j++) {\n\n\t\t\t\tfor (int i = j + 1; i < 9; i++) {\n\t\t\t\t\tif (cardset[1][k] == cardset[1][j] && cardset[1][j] == cardset[1][i]) {\n\n\t\t\t\t\t\tif (cardset[0][k] != 0 && cardset[0][k] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][k] == cardset[0][i] - 2) {\n\n\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int k = 0; k < 7; k++) {\n\n\t\t\tfor (int j = k + 1; j < 8; j++) {\n\n\t\t\t\tfor (int i = j + 1; i < 9; i++) {\n\n\t\t\t\t\tif (cardset[1][k] == cardset[1][j] && cardset[1][j] == cardset[1][i]) {\n\t\t\t\t\t\tif (cardset[0][k] != 0 && cardset[0][k] == cardset[0][j] && cardset[0][k] == cardset[0][i]) {\n\n\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn intCount;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\t// 答えの格納場所\n\t\tArrayList<Integer> intAryAnswer = new ArrayList<Integer>();\n\n\t\t// 1行目を取得\n\t\ttry {\n\t\t\tBufferedReader insBR = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t\tString strNum = insBR.readLine();\n\n\t\t\t// DataSetNumは何回判定するか\n\t\t\tint DataSetNum = Integer.parseInt(strNum);\n\n\t\t\t//判断する回数まわす\n\t\t\tfor (int i = 0; i < DataSetNum; i++) {\n\n\t\t\t\t//カードの数字とシンボルを取得\n\t\t\t\tString strNumLine = insBR.readLine();\n\t\t\t\tString strSymbolLine = insBR.readLine();\n\n\t\t\t\t//人クラスを作成　数字とシンボルを引数に\n\t\t\t\tPlayer player = new Player(strNumLine, strSymbolLine);\n\n\t\t\t\t//勝利条件に満たせば1　満たさなければ0\n\t\t\t\tint intJugmet = player.Judgment();\n\n\t\t\t\t//答えを格納\n\t\t\t\tintAryAnswer.add(intJugmet);\n\n\t\t\t}\n\n\t\t\t// 答えが何個あるか取得\n\t\t\tint intSize = intAryAnswer.size();\n\n\t\t\t// 出力\n\t\t\tfor (int i = 0; i < intSize; i++) {\n\t\t\t\tSystem.out.println(intAryAnswer.get(i));\n\t\t\t}\n\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\n\n\t}\n\n\t/**\n\t * プレイヤー\n\t *\n\t */\n\tpublic static class Player{\n\n\n\t\t/**\n\t\t * カードR\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n\t\tprivate int[] CardR = new int[9];\n\n\t\t/**\n\t\t * カードG\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n\t\tprivate int[] CardG = new int[9];\n\n\t\t/**\n\t\t * カードB\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n\t\tprivate int[] CardB = new int[9];\n\n\t\t/**\n\t\t * 引数を受け取り　フィールド値に格納する\n\t\t * @param strNumLine　カードの数字の羅列　例:1 2 3 4 5 6 7 8 9\n\t\t * @param strSymbolLine　カードのシンボルの羅列 例:R R R G G G B B B\n\t\t */\n\t\tPlayer(String strNumLine, String strSymbolLine) {\n\n\t\t\t// 分解\n\t\t\tString[] strAryNum = strNumLine.split(\" \");\n\n\t\t\tString[] strArySymbol = strSymbolLine.split(\" \");\n\n\t\t\tint intNum = 0;\n\n\t\t\tint intR = 0;\n\n\t\t\tint intG = 0;\n\n\t\t\tint intB = 0;\n\n\t\t\t//分解したものを振り分ける\n\t\t\tfor(int i = 0; i < strAryNum.length; i++) {\n\n\t\t\t\t//CardRとCardGとCardBを合わせて9枚になる\n\t\t\t\tif(strArySymbol[i].equals(\"R\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n\t\t\t\t\t CardR[intR] = intNum;\n\n\t\t\t\t\t intR++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"G\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n\t\t\t\t\t CardG[intG] = intNum;\n\n\t\t\t\t\t intG++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"B\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n\t\t\t\t\t CardB[intB] = intNum;\n\n\t\t\t\t\t intB++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\t/**\n\t\t * 勝利条件を判定する\n\t\t * @return intAnswer 勝利なら1　勝利に満たさないなら0\n\t\t */\n\t\tint Judgment() {\n\t\t\t\n\t\t\t//答えを0にしておく\n\t\t\tint intAnswer = 0;\n\t\t\t\n\t\t\t//カードを昇順にする\n\t\t\tArrays.sort(CardR);\n\t\t\tArrays.sort(CardG);\n\t\t\tArrays.sort(CardB);\n\n\t\t\t//同じ数字が3つあれば消す\n\t\t\tCardR = pairs3Remove(CardR);\n\t\t\tCardG = pairs3Remove(CardG);\n\t\t\tCardB = pairs3Remove(CardB);\n\n\t\t\t//3連続の数字があれば消す\n\t\t\tCardR = ThreeConsecutiveNumber(CardR);\n\t\t\tCardG = ThreeConsecutiveNumber(CardG);\n\t\t\tCardB = ThreeConsecutiveNumber(CardB);\n\t\t\t\n\t\t\t//カードを昇順にする\n\t\t\tArrays.sort(CardR);\n\t\t\tArrays.sort(CardG);\n\t\t\tArrays.sort(CardB);\n\t\t\t\n\t\t\t//1〜9の数字のカードしかないので\n\t\t\t//昇順で最後の数字が0なら全部0\n\t\t\tif(CardR[8] == 0 && CardR[8] == 0 && CardR[8] == 0) {\n\t\t\t\t\n\t\t\t\t//条件をみたせば1\n\t\t\t\tintAnswer = 1;\n\t\t\t}\n\t\t\t\n\t\t\treturn intAnswer;\n\t\t}\n\t}\n\n\t/**\n\t * 同じ数字が3つあれば消す\n\t * @param Card 3ペアを消したいカード\n\t * @return Card 3ペアを消し終わったカード\n\t */\n\tpublic static int[] pairs3Remove(int[] Card) {\n\n\t\t//ペア数をカウント 3カウントになると数字を消す為\n\t\tint pairs3count = 0;\n\n\t\t//ペア数をカウントした数字を格納する場所\n\t\t//対子の３つを格納する場所\n\t\tint[] count3Toitu = new int[9];\n\n\t\tint count3ToituCount = 0;\n\n\t\tfor(int i = 0; i < 9; i++) {\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tif(Card[j] == i + 1) {\n\t\t\t\t\tpairs3count++;\n\t\t\t\t\tcount3Toitu[count3ToituCount] = j + 1;\n\t\t\t\t\tcount3ToituCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(pairs3count >= 3) {\n\t\t\t\tint count2 = 0;\n\t\t\t\tfor(int k = 0; k < 9; k++) {\n\t\t\t\t\tif(count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint intNum = count3Toitu[k];\n\t\t\t\t\tCard[intNum - 1] = 0;\n\t\t\t\t\tcount2 ++;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t}\n\t\t\tpairs3count = 0;\n\t\t\tcount3ToituCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n\t/**\n\t * 3連続の数字があれば消す\n\t * @param Card\n\t * @return\n\t */\n\tpublic static int[] ThreeConsecutiveNumber(int[] Card) {\n\n\t\tint[][] count3Zyuntu = new int[3][2];\n\n\t\tint count3ZyuntuCount = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile(i < 7) {\n\n\t\t\touter:\n\t\t\twhile(true){\n\n\t\t\t\tif(k == 4) {\n\t\t\t\t\tint intNum1 = count3Zyuntu[0][1];\n\t\t\t\t\tint intNum2 = count3Zyuntu[1][1];\n\t\t\t\t\tint intNum3 = count3Zyuntu[2][1];\n\t\t\t\t\tCard[intNum1] = 0;\n\t\t\t\t\tCard[intNum2] = 0;\n\t\t\t\t\tCard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(Card);\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif(j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(Card[j] == k + i) {\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][0] = k + i;\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][1] = j;\n\t\t\t\t\tcount3ZyuntuCount++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcount3ZyuntuCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        int set = sc.nextInt();\n        int number[] = new int[9];\n        int Rnumber[] = new int[9];\n        int Gnumber[] = new int[9];\n        int Bnumber[] = new int[9];\n        int setcount = 0;\n        \n        for(int i = 0 ; i < set ; i++){\n            setcount = 0;\n            \n            for(int t = 0 ; t < 9 ; t++){\n                number[t] = sc.nextInt();\n            }\n            for(int c = 0 ; c < 9 ; c++){\n                String color = sc.next();\n                if(color.equals(\"R\")){\n                    Rnumber[c] = number[c];\n                }\n                else if(color.equals(\"G\")){\n                    Gnumber[c] = number[c];\n                }\n                else if(color.equals(\"B\")){\n                    Bnumber[c] = number[c];\n                }\n            }\n            \n            Arrays.sort(Rnumber);\n            Arrays.sort(Gnumber);\n            Arrays.sort(Bnumber);\n            \n            setcount += search(Rnumber);\n            setcount += search(Gnumber);\n            setcount += search(Bnumber);\n\n/*            \n            for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(Rnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Rnumber[time+time2] == Rnumber[time]+1 || Rnumber[time] == Rnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Rnumber[time+time2+time3] == Rnumber[time]+2 || Rnumber[time] == Rnumber[time+time2+time3]){\n                                    setcount++;\n                                    Rnumber[time] = 0;\n                                    Rnumber[time+time2] = 0;\n                                    Rnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Gの数字を検索\n                if(Gnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Gnumber[time+time2] == Gnumber[time]+1 || Gnumber[time] == Gnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Gnumber[time+time2+time3] == Gnumber[time]+2 || Gnumber[time] == Gnumber[time+time2+time3]){\n                                    setcount++;\n                                    Gnumber[time] = 0;\n                                    Gnumber[time+time2] = 0;\n                                    Gnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Bの数字を検索\n                if(Bnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Bnumber[time+time2] == Bnumber[time]+1 || Bnumber[time] == Bnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Bnumber[time+time2+time3] == Bnumber[time]+2 || Bnumber[time] == Bnumber[time+time2+time3]){\n                                    setcount++;\n                                    Bnumber[time] = 0;\n                                    Bnumber[time+time2] = 0;\n                                    Bnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }*/\n            \n            if(setcount == 3){\n                System.out.println(\"1\");\n            }\n            else{\n                System.out.println(\"0\");\n            }\n            \n        }\n        \n    }\n    \n    private static int search (int nums[]){\n        int setcount = 0;\n        for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(nums[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(nums[time+time2] == nums[time]+1){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time+time2+time3] == nums[time]+2){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                        else if(nums[time] == nums[time+time2]){\n                            \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time] == nums[time+time2+time3]){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            return setcount;\n    }\n    \n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class main {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 or defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();// clear\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(br.readLine(), br.readLine());// clear\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();// debug chk point\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);// clear\n\t\t}\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++)\n\t\t\tSystem.out.println(answer.get(i));// clear\n\t} // main end\n}// class end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}// construct end\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {// clear\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\"))\n\t\t\t\tcardR[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"G\"))\n\t\t\t\tcardG[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"B\"))\n\t\t\t\tcardB[i] = Integer.parseInt(transNum[i]);\n\t\t}\n\t}// construct end\n\n\tpublic int playtheGame() {// clear\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t//Arraylist.sort?????´??????\n\t\t//???????????´???????????????????????§??????????????????????????????????????°?????????????????????\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0)\n\t\t\tresult = 1;\n\n\t\treturn result;\n\n\t}// method end\n\n\tpublic static int[] sameNumCard(int[] card) {// clear\n\t\t//3???for??????????????????????????????\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < ONECARDSET; k++) {\n\t\t\t\t\t//??????????????????????????§????????????????????°\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]  ) {\n\t\t\t\t\t\t//?????????????????????????????????????????????\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\t//????????§???????????????\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n\n\tpublic static int[] serialNumCard(int[] card) {// clear\n\t\t//3???for??????????????????????????????\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < ONECARDSET; k++) {\n\t\t\t\t\t//??????????????????????????§???????????????????¢?????????´???\n\t\t\t\t\tif (card[i] == card[j]-1 && card[i] ==card[k]-2 ) {\n\t\t\t\t\t\t//?????????????????????????????????????????????\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\t//????????§???????????????\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n}// class end"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t// カードの色をチェックし、手役になりうるかをチェック\n\tpublic boolean checkColor(ArrayList<HashMap<String, String>> hand) {\n\t\t// R, G, Bそれぞれの数\n\t\tint red = 0;\n\t\tint green = 0;\n\t\tint blue = 0;\n\t\tfor(HashMap<String, String> card : hand) {\n\t\t\tif(card.get(\"color\").equals(\"R\")) red++;\n\t\t\telse if(card.get(\"color\").equals(\"G\")) green++;\n\t\t\telse if(card.get(\"color\").equals(\"B\")) blue++;\n\t\t}\n\t\t//\t\tSystem.out.println(\"red : \" + red);\n\t\t//\t\tSystem.out.println(\"green : \" + green);\n\t\t//\t\tSystem.out.println(\"blue : \" + blue);\n\t\t// それぞれが３の倍数ならOK\n\t\tif(red % 3 == 0 && green % 3 == 0 && blue % 3 == 0) {\n\t\t\t//\t\t\tSystem.out.println(1);\n\t\t\treturn true;\n\t\t} else {\n\t\t\t//\t\t\tSystem.out.println(0);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// 1ブロック文のカードの組み合わせを全パターン抽出\n\tpublic Integer[][] createPattern(ArrayList<HashMap<String, String>> hand) {\n\n\t\t// 3枚ずつのブロックを作る\n\t\t// 0ブロック目にいれるか、1ブロック目にいれるか、2ブロック目にいれるか\n\t\t// それぞれの割り当て番号は３つずつしか使ってはいけないので、それぞれ管理する\n\n\t\t//\t\tInteger[] ret;\n\n\t\tInteger[][] selected = new Integer[999][999]; // すでに選択した組み合わせ\n\t\tint selectedIte = 0;\n\n\t\t// とりあえず重複なしで3つ取り出す\n\t\t// 出力しているのは要素番号\n\t\t// 1つめ\n\t\t//\t\tint count=0;\n\t\tfor(int i=0; i<hand.size(); i++) {\n\t\t\t// 2つめ\n\t\t\tfor(int j=0; j<hand.size(); j++) {\n\t\t\t\t// 重複したカードは選択しない\n\t\t\t\tif(i == j) continue;\n\t\t\t\t// 3つめ\n\t\t\t\tfor(int k=0; k<hand.size(); k++) {\n\t\t\t\t\t// 重複したカードは選択しない\n\t\t\t\t\tif(j == k || i==k) continue;\n\t\t\t\t\t// すでに取得している組み合わせも選択しない\n\t\t\t\t\tInteger[] addList = {i, j, k};\n\t\t\t\t\tif(checkDuplicate(selected, addList)) continue;\n\t\t\t\t\tselected[selectedIte] = addList;\n\t\t\t\t\tselectedIte++;\n\t\t\t\t\t//\t\t\t\t\tSystem.out.print(i + \" \" + j + \" \" + k + \", \");\n\t\t\t\t\t//\t\t\t\t\tcount++;\n\t\t\t\t\t//\t\t\t\t\tret = {i, j, k};\n\t\t\t\t\t//\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\t\t\tSystem.out.println(\"\");\n\t\t}\n\n\t\t//\t\tSystem.out.println(count);\n\n\t\treturn selected;\n\n\t}\n\n\t// 2次元配列の要素に特定の配列が入っているか(順不同)\n\t// checkArrは３つで固定\n\tprivate boolean checkDuplicate(Integer[][] arr, Integer[] checkArr) {\n\n\t\tfor(int i=0; i<arr.length; i++) {\n\t\t\tif(Arrays.asList(arr[i]).contains(checkArr[0]) && Arrays.asList(arr[i]).contains(checkArr[1]) && Arrays.asList(arr[i]).contains(checkArr[2])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t// 2つの配列の要素の内容は同じか\n\tpublic boolean checkDuplicate2(Integer[] arr, Integer[] checkArr) {\n\n\t\t// 比較するためにソート\n\t\tArrays.sort(arr);\n\t\tArrays.sort(checkArr);\n\n\t\tif(Arrays.equals(arr, checkArr)) return true;\n\t\telse return false;\n\n\t}\n\n\t// １つめの配列に２つめの配列の要素が含まれていないか\n\tpublic boolean checkDuplicate3(Integer[] arr, Integer[] checkArr) {\n\n\t\tfor(int i=0; i<arr.length; i++) {\n\t\t\tfor(int j=0; j<checkArr.length; j++) {\n\t\t\t\tif(arr[i] == checkArr[j]) return false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// カードの組み合わせを全パターン抽出\n\tpublic ArrayList<Integer[][]> createPattern2(ArrayList<HashMap<String, String>> hand) {\n\n\t\t// 1ブロックごと取得し、取得済の値を配列から取り除いて再度組み合わせを取得する\n\t\t// 3つのブロックを作るのでカウントを設定\n\n\t\t// 値が重複していないブロックを探し手札とする\n\t\t//\t\tInteger[][][] hands = new Integer[99999][3][3]; // パターン数、ブロック数、1ブロックあたりのカード数\n\t\tArrayList<Integer[][]> hands = new ArrayList<>();\n\t\t//\t\tint handsIte = 0;\n\t\t// １ブロックの全パターン\n\t\tInteger[][] blockPatterns = createPattern(hand);\n\n\t\t//\t\tSystem.exit(1);\n\n\t\tint blockPatternsNum = 84;\n\n\t\tint count = 0;\n\t\tfor(int i=0; i<blockPatternsNum; i++) {\n\t\t\tfor(int j=0; j<blockPatternsNum; j++) {\n\t\t\t\t// 1番目の配列に2番目の配列の各要素が入っていないかチェック\n\t\t\t\tif(!checkDuplicate3(blockPatterns[i], blockPatterns[j])) continue;\n\t\t\t\tfor(int k=0; k<blockPatternsNum; k++) {\n\t\t\t\t\t// 1番目の配列に3番目の配列の各要素が入っていないかチェック\n\t\t\t\t\tif(!checkDuplicate3(blockPatterns[i], blockPatterns[k])) continue;\n\t\t\t\t\t// 2番目の配列に3番目の配列の各要素が入っていないかチェック\n\t\t\t\t\tif(!checkDuplicate3(blockPatterns[j], blockPatterns[k])) continue;\n\n\n\t\t\t\t\t//\t\t\t\t\tSystem.out.println(count);\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// 組み合わせを追加\n\t\t\t\t\tInteger[][] h = new Integer[3][3];\n\t\t\t\t\th[0] = blockPatterns[i];\n\t\t\t\t\th[1] = blockPatterns[j];\n\t\t\t\t\th[2] = blockPatterns[k];\n\t\t\t\t\thands.add(h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hands;\n\n\t\t// debug\n\t\t//\t\tfor(int i=0; i<hands.size(); i++) {\n\t\t//\t\t\tfor(int j=0; j<3; j++) {\n\t\t//\t\t\t\tfor(int k=0; k<3; k++) {\n\t\t//\t\t\t\t\t// 1ブロック表示\n\t\t//\t\t\t\t\tSystem.out.print(hands.get(i)[j][k] + \" \");\n\t\t//\t\t\t\t}\n\t\t//\t\t\t\tSystem.out.print(\", \");\n\t\t//\t\t\t}\n\t\t//\t\t\tSystem.out.println(\"\");\n\t\t//\t\t}\n\n\t}\n\n\t// 役になっているかの判断\n\tpublic boolean checkHand(ArrayList<HashMap<String, String>> hand) {\n\n\t\t// 色が同じか３つずつ判定する\n\t\tfor(int i=0; i<9; i+=3) {\n\t\t\t//\t\t\tfor(int j=i; j<3; j++) {\n\t\t\tif(!hand.get(i).get(\"color\").equals(hand.get(i+1).get(\"color\")) || !hand.get(i+1).get(\"color\").equals(hand.get(i+2).get(\"color\")) || !hand.get(i).get(\"color\").equals(hand.get(i+2).get(\"color\"))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//\t\t\t}\n\t\t}\n\n\t\t// 番号でソートし、数値が並んでいる、または同じ数値なことを確認\n\t\t// 3つずつソート\n\t\tfor(int i=0; i<9; i+=3) {\n\t\t\tArrayList<HashMap<String, String>> sortBlock = new ArrayList<>();\n\t\t\tsortBlock.add(hand.get(i));\n\t\t\tsortBlock.add(hand.get(i+1));\n\t\t\tsortBlock.add(hand.get(i+2));\n\t\t\tsortBlock = sortBlock(sortBlock);\n\t\t\t// 数値を比較\n\t\t\tint num1 = Integer.parseInt(sortBlock.get(0).get(\"num\"));\n\t\t\tint num2 = Integer.parseInt(sortBlock.get(1).get(\"num\"));\n\t\t\tint num3 = Integer.parseInt(sortBlock.get(2).get(\"num\"));\n\t\t\tif(!(num1 == num2 && num2 == num3 || num1+1 == num2 && num2+1 == num3)) return false;\n\t\t\t//\t\t\tSystem.out.println(\"\");\n\t\t}\n\n\n\t\treturn true;\n\n\t}\n\n\t// 手役の1ブロックをソート\n\tprivate ArrayList<HashMap<String, String>> sortBlock(ArrayList<HashMap<String, String>> handBlock) {\n\n\t\tArrayList<HashMap<String, String>> ret = new ArrayList<>();\n\t\tret = handBlock;\n\n\t\tfor(int i=0; i<ret.size()-1; i++) {\n\t\t\tfor(int j=ret.size()-1; j > i; j--) {\n\t\t\t\tif(Integer.parseInt(ret.get(j-1).get(\"num\")) > Integer.parseInt(ret.get(j).get(\"num\"))) {\n\t\t\t\t\tHashMap<String, String> buf = ret.get(j-1);\n\t\t\t\t\tret.set(j-1, ret.get(j));\n\t\t\t\t\tret.set(j, buf);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\n\t}\n\n\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint handNum = 9; // 手札の数\n\t\tint cardNum = sc.nextInt();\n\n\t\tint[] nums = new int[9];\n\t\tfor(int k=0; k<cardNum; k++) {\n\t\t\tArrayList<HashMap<String, String>> cardList = new ArrayList<>();\n\t\t\tfor(int i=0; i<9; i++) {\n\t\t\t\tnums[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0; i<9; i++) {\n\t\t\t\tString color = sc.next();\n\t\t\t\tHashMap<String, String> card = new HashMap<>();\n\t\t\t\tcard.put(\"num\", String.valueOf(nums[i]));\n\t\t\t\tcard.put(\"color\", color);\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\n\t\t\t// 手札をセット\n\t\t\tArrayList<HashMap<String, String>> hand = new ArrayList<>();\n\t\t\tfor(int i=0; i<handNum; i++) {\n\t\t\t\thand.add(cardList.get(i));\n\t\t\t}\n\n\t\t\tMain r = new Main();\n\n\t\t\t// それぞれのカードの色を確認し、手役になりうるかのチェック\n\t\t\tif(!r.checkColor(hand)) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t\tcontinue;\n//\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// 全パターンを抽出\n\t\t\tr.createPattern(hand);\n\n\t\t\tArrayList<Integer[][]> handList = r.createPattern2(hand);\n\n\t\t\tint okFlag = 0;\n\n\t\t\t// リストをもとに役になっているのか判断\n\t\t\t// 手役を渡す\n\t\t\tfor(Integer[][] h : handList) {\n\t\t\t\t// 判定する手役生成\n\t\t\t\tArrayList<HashMap<String, String>> checkHand = new ArrayList<>();\n\t\t\t\tfor(int i=0; i<3; i++) {\n\t\t\t\t\tcheckHand.add(hand.get(h[i][0]));\n\t\t\t\t\tcheckHand.add(hand.get(h[i][1]));\n\t\t\t\t\tcheckHand.add(hand.get(h[i][2]));\n\t\t\t\t}\n\n\t\t\t\t// 手役判定を行う\n\t\t\t\tif(r.checkHand(checkHand)) {\n\t\t\t\t\tokFlag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t\t//\t\t\t\tfor(HashMap<String, String> card : checkHand) {\n\t\t\t\t\t//\t\t\t\t\tSystem.out.print(card.get(\"num\") + card.get(\"color\") + \", \");\n\t\t\t\t\t//\t\t\t\t}\n\t\t\t\t\t//\t\t\t\tSystem.out.println(\"\");\n\t\t\t\t\t//\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t\t}\n\n\n\t\t\t\t// debug\n\t\t\t\t//\t\t\tfor(HashMap<String, String> card : checkHand) {\n\t\t\t\t//\t\t\t\tSystem.out.print(card.get(\"num\") + card.get(\"color\") + \", \");\n\t\t\t\t//\t\t\t}\n\t\t\t\t//\t\t\tSystem.out.println(\"\");\n\n\t\t\t}\n\n\t\t\tSystem.out.println(okFlag);\n\n\t\t}\n\t\tsc.close();\n\n\t}\n\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Iterator;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.LinkedHashMap;\n\nclass Deck{\n    private LinkedHashMap<Integer, Integer> frequency = new LinkedHashMap<>();\n    public Deck(){\n        for (int i = 1; i <= 9; i++){\n            frequency.put(i, 0);\n        }\n    }\n\n    public void add(int i){\n        frequency.replace(i, frequency.get(i)+1);\n    }\n\n    public int consec(){\n        int sets = 0;\n        for (Map.Entry<Integer, Integer> entry: frequency.entrySet()){\n            if (entry.getValue() >= 3){\n                sets++;\n                frequency.replace(entry.getKey(), frequency.get(entry.getKey()) - 3);\n            }\n        }\n        return sets;\n    }\n\n    public int row(){\n        int sets = 0;\n        Iterator<Integer> key_iter = frequency.keySet().iterator();\n        Iterator<Integer> iter = frequency.values().iterator();\n        int first_key = key_iter.next(), mid_key = key_iter.next();\n        int first = iter.next(), mid = iter.next();\n        while(iter.hasNext()){\n            int last = iter.next(), last_key = key_iter.next();\n            while (last >= 1 && mid >= 1 && first >= 1){\n                sets++;\n                last--; mid--; first--;\n            }\n            frequency.replace(last_key, last);\n            frequency.replace(mid_key, mid);\n            frequency.replace(first_key, first);\n            first_key = mid_key; mid_key = last_key;\n            first = mid; mid = last;\n        }\n        return sets;\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int k = sc.nextInt();\n        for (int i = 0; i < k; i++) {\n            LinkedHashMap<Character, Deck> colorDeck = new LinkedHashMap<>();\n            colorDeck.put('R', new Deck()); colorDeck.put('G', new Deck()); colorDeck.put('B', new Deck());\n            int number_list[] = new int[9];\n            for (int j = 0; j < 9; j++) number_list[j] = sc.nextInt();\n            for (int j = 0; j < 9; j++) colorDeck.get(sc.next().charAt(0)).add(number_list[j]);\n            int sets = 0;\n            for (Deck deck: colorDeck.values()){\n                sets += deck.consec();\n                sets += deck.row();\n            }\n            System.out.println(((sets >= 3)? 1:0));\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\t\n\tint[] c, n;\n\tboolean[] used;\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tfor (;t>0;t--) {\n\t\t\tc = new int[9]; n = new int[9];\n\t\t\tfor (int i=0;i<9;i++) n[i] = sc.nextInt();\n\t\t\tfor (int i=0;i<9;i++) {\n\t\t\t\tchar color = sc.next().charAt(0);\n\t\t\t\tc[i] = color == 'R' ? 0 : ( color == 'G' ? 1 : 2);\n\t\t\t}\n\t\t\tok = new int[1<<9]; fill(ok, -1);\n\t\t\tSystem.out.println(solve(0));\n\t\t}\n\t}\n\t\n\tint[] ok;\n\tint solve(int S) {\n\t\tif (S == (1<<9)-1) return 1;\n\t\tif (ok[S] >= 0) return ok[S];\n\t\t\n\t\tint ret = 0;\n\t\tfor (int i=0;i<9;i++) if (((S>>i)&1) == 0)\n\t\tfor (int j=i+1;j<9;j++) if (((S>>j)&1) == 0) \n\t\tfor (int k=j+1;k<9;k++) if (((S>>k)&1) == 0)\n\t\t\tif (is_set(i, j, k)) {\n\t\t\t\tret |= solve(S | (1<<i) | (1<<j) | (1<<k));\n\t\t\t\tif (ret == 1) return ok[S] = ret;\n\t\t\t}\n\t\t\n\t\treturn ok[S] = ret;\n\t}\n\t\n\tboolean is_set(int i, int j, int k) {\n\t\tif (c[i] != c[j] || c[j] != c[k]) return false;\n\t\tif (n[i] == n[j] && n[j] == n[k]) return true;\n\t\tint[] a = {n[i], n[j], n[k]}; sort(a);\n\t\treturn a[0] + 1 == a[1] && a[1] +1 == a[2];\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n    int T;\n    int[] number;\n    ArrayList<Integer> r,g,b;\n\n    void solve(){\n\tScanner sc = new Scanner(System.in);\n\tT = sc.nextInt();\n\twhile(T-->0){\n\t    number = new int[9];\n\t    for(int i=0; i<9; i++)number[i] = sc.nextInt();\n\t    r = new ArrayList<Integer>();\n\t    g = new ArrayList<Integer>();\n\t    b = new ArrayList<Integer>();\n\t    for(int i=0; i<9; i++){\n\t\tchar c = sc.next().charAt(0);\n\t\tif(c=='R')r.add(number[i]);\n\t\tif(c=='G')g.add(number[i]);\n\t\tif(c=='B')b.add(number[i]);\n\t    }\n\n\t    int ans = 1;\n\t    if(r.size()%3!=0 || g.size()%3!=0 || b.size()%3!=0){\n\t\tans = 0;\n\t    }else{\n\t\tint[] R = new int[r.size()];\n\t\tint[] G = new int[g.size()];\n\t\tint[] B = new int[b.size()];\n\t\tfor(int i=0; i<r.size(); i++)R[i] = r.get(i);\n\t\tfor(int i=0; i<g.size(); i++)G[i] = g.get(i);\n\t\tfor(int i=0; i<b.size(); i++)B[i] = b.get(i);\n\t\tArrays.sort(R);\n\t\tArrays.sort(G);\n\t\tArrays.sort(B);\n\t\tif(r.size()>0){\n\t\t    for(int i=0; i<r.size(); i+=3){\n\t\t\tif(R[i]==R[i+1] && R[i+1]==R[i+2])continue;\n\t\t\tif(R[i+1]-R[i]==1 && R[i+2]-R[i+1]==1)continue;\n\t\t\tans = 0;\n\t\t    }\n\t\t}\n\t\tif(g.size()>0){\n\t\t    for(int i=0; i<r.size(); i+=3){\n\t\t\tif(R[i]==R[i+1] && R[i+1]==R[i+2])continue;\n\t\t\tif(R[i+1]-R[i]==1 && R[i+2]-R[i+1]==1)continue;\n\t\t\tans = 0;\n\t\t    }\n\t\t}\n\t\tif(b.size()>0){\n\t\t    for(int i=0; i<r.size(); i+=3){\n\t\t\tif(R[i]==R[i+1] && R[i+1]==R[i+2])continue;\n\t\t\tif(R[i+1]-R[i]==1 && R[i+2]-R[i+1]==1)continue;\n\t\t\tans = 0;\n\t\t    }\n\t\t}\n\t    }\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static void main(String[] args){\n\tnew Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class a{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<t;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k*3]==color[j][k*3+2]){\n                        color[j][k*3]=0;\n                        color[j][k*3+1]=0;\n                        color[j][k*3+2]=0;\n                    }\n                }\n            }\nfor (int j=0;j<3&&win!=0;j++){\n                int n=color_num[j];\n                int changed=0;\n                for (int l=0;l<n/3;l++){\n                    int bef=-2;\n                    changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        if ((k==color_num[j]-2&&changed==0)||(k==color_num[j]-1&&changed<=1)) break;\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3){\n                            changed=0;\n                            bef=-2;\n                        }\n                    }\n                    /*              for (int a=0;a<3;a++){                                                                                                    \n                        for (int b=0;b<color_num[a];b++){                                                                                                     \n                            System.out.print(color[a][b]);                                                                                                    \n                        }                                                                                                                                     \n                        System.out.println();                                                                                                                 \n                        }*/\n                }\n                if (changed!=0) win=0;\n            }\n\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\n\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t \n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t System.out.print(hand_no[now1]);\n\t\t\t\t\t }else{\n\t\t\t\t\t\t System.out.print(hand_mark[now1]);\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t\t \n\t\t\t\t System.out.println();\n\t\t\t\t \n\t\t\t }\n\t\t\t\t \n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\t\t\t\t\t \n\t\t\t\t\t System.out.print(color[mark_cnt] + \": \");\n\t\t\t\t\t \n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\t\t\t\t\t \n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\t\t\t\t\t\t \n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\twork[work_cnt] = hand_no[now2];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t System.out.print(work[work_cnt++]);\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t }\n\t\t\t\t\t\t \n\t\t\t\t\t }\n\t\t\t\t\t\t \n\t\t\t\t\t System.out.println();\n\t\t\t\t }\n\t\t\t\t System.out.println();\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\npublic class Main {\n\n\t/**\n\t * ?????????3???*2(frontnumber???rearColor)*3?????????==18 ????????\\????????????\n\t */\n\tprivate static final int TRIPLECARDSET = 18;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTHREE = 3;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ????????????????´???´???\n\t\tArrayList<TestCard> cardArr = new ArrayList<TestCard>();\n\n\t\t// private????£?????????\\?????????????????????????????§????????????\n\t\tTestCard tc = new TestCard();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t/**\n\t\t * ?????°?????????????????????????????????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t * @param transNum[]\n\t\t *            String??????tmpNum??????<??°????????±/>????????£?????????????´?\n\t\t * @param transColor[]\n\t\t *            String??????tmpNum??????<????????±/>????????£?????????????´?\n\t\t *\n\t\t */\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < set; cnt++) {\n\t\t\t// ??????????????\\???????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????\\???????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ???????????????????????????????????£??????????????°??????\n\t\t\ttc.setOnecardset(transNum.length + transColor.length);\n\n\t\t\t// ????´??????????????????????????????????????????????\n\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cnt]), transColor[cnt]));\n\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = playtheGame(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t}// main????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨\"0\"????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tpublic static int playtheGame(ArrayList<TestCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t/**\n\t\t * @Warnning\n\t\t */\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<TestCard>() {\n\t\t\t@Override\n\t\t\tpublic int compare(TestCard numA, TestCard numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\t// serialNumCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameNumCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *           1) .indexOf() ?????????????????????????????§????????£?????????????????????3?????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\tif (cardArr.get(cnt).equals(ZERO)) {\n\t\t\t\t// ?????\\???????????????????????°?????°??????\n\t\t\t\tcount++;\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\tif (count >= TRIPLECARDSET) {\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// playtheGame????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param card2\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n\tpublic static void sameNumCard(ArrayList<TestCard> cardArr) {\n\n\t\t// private????£?????????\\?????????????????????????????§????????????\n\t\tTestCard tc = new TestCard();\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\n\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < -ADDRESSPLUSTWO; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {\n\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).equals(cardArr.get(cnt3))\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).equals(cardArr.get(cnt3 + ADDRESSPLUSTWO))) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt2).equals(cardArr.get(cnt3 + ADDRESSPLUSONE))\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt3 + ADDRESSPLUSONE).equals(cardArr.get(cnt3 + ADDRESSPLUSTHREE))) {\n\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSONE, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTWO, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTHREE, (new TestCard(ZERO)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameNumCard????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n//\tpublic static void serialNumCard(ArrayList<TestCard> cardArr) {\n//\t\t// private????£?????????\\?????????????????????????????§????????????\n//\t\tTestCard tc = new TestCard();\n//\t\t/**\n//\t\t * for??????????????¬???\n//\t\t *\n//\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n//\t\t *\n//\t\t * @param cnt1\n//\t\t *            ???????????????????????? \"0\";\n//\t\t * @param cnt2\n//\t\t *            ???????????????????????? \"cnt1 + 1\";\n//\t\t * @param cnt3\n//\t\t *            ???????????????????????? \"cnt2 + 1\";\n//\t\t *\n//\t\t * @param tempNum\n//\t\t *            String????????????????????°??????int???????????£???????????????????????¨????????°\n//\t\t *\n//\t\t */\n//\n//\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n//\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < tc.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {\n//\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n//\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {\n//\n//\t\t\t\t\t// (1)3??£?¶??????°????????????\n//\t\t\t\t\tif (cardArr.get(cnt1) == (cardArr.get(cnt3) - ADDRESSPLUSONE)\n//\t\t\t\t\t\t\t&& cardArr.get(cnt1) == (cardArr.get(cnt3 + ADDRESSPLUSTWO) - ADDRESSPLUSTWO)) {\n//\t\t\t\t\t\t// (2)?????????????????????????????????\n//\t\t\t\t\t\tif (cardArr.get(cnt2).equals(cardArr.get(cnt3 + ADDRESSPLUSONE))\n//\t\t\t\t\t\t\t\t&& cardArr.get(cnt3 + ADDRESSPLUSONE).equals(cardArr.get(cnt3 + ADDRESSPLUSTHREE))) {\n//\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n//\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n//\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n//\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n//\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSONE, (new TestCard(ZERO)));\n//\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTWO, (new TestCard(ZERO)));\n//\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTHREE, (new TestCard(ZERO)));\n//\t\t\t\t\t\t}\n//\t\t\t\t\t}\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n//\t}// serialNumCard ????????????????????????\n\n}// RummyTest????????????\n\nclass TestCard {\n\t/**\n\t * int ??????????????°???\n\t */\n\tprivate static int onecardset;\n\n\t/**\n\t * int ????????????????????????????????\\????????????????????¢????£???¢??? 2???????¬?????????????????????¨??????\n\t */\n\tprivate static final int CARDPAGE = 2;\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°???????????°??¶????????????\n\t */\n\tprivate static int frontnumber;\n\n\t/**\n\t * String ???????????????????¨??????????????????????\n\t */\n\tprivate static String rearColor;\n\n\tpublic static int getOnecardset() {\n\t\treturn onecardset;\n\t}\n\n\tpublic static int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic static void setFrontnumber(int frontnumber) {\n\t\tTestCard.frontnumber = frontnumber;\n\t}\n\n\tpublic static String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic static void setRearColor(String rearColor) {\n\t\tTestCard.rearColor = rearColor;\n\t}\n\n\tpublic static void setOnecardset(int onecardset) {\n\t\tTestCard.onecardset = onecardset;\n\t}\n\n\tpublic TestCard() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\n\tpublic TestCard(String tmp) {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t\trearColor = tmp;\n\t}\n\n\t/**\n\t *\n\t * @param transNum\n\t *            ???????????????????????????????????°???\n\t * @param transColor\n\t *            ????????????????????????????????????\n\t */\n\tpublic TestCard(int transNum, String transColor) {\n\t\t// ?????¬???int?????????????????????int???????????????\n\t\tfrontnumber = transNum;\n\t\t// ?????¬???String?????????????????????String???????????????\n\t\trearColor = transColor;\n\t}\n}// Card?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir = 0;\n\t\tint ig = 0;\n\t\tint ib = 0;\n\t\tint count = 0;\n\t\tchar c;\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tj = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += judge(nr, ir) + judge(ng, ig) + judge(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int judge(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tint[] nums, c;\n\tint[][] as;\n\tchar[] colors;\n\n\t//\n\tboolean dfs(int k){\n\t\tif(k==9){\n\t\t\t// 色が違ったらfalse\n\t\t\tfor(int i=0;i<3;i++)if(colors[as[i][0]]!=colors[as[i][1]]||colors[as[i][1]]!=colors[as[i][2]])return false;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tint[] t = new int[3];\n\t\t\t\t// 数値の比較準備\n\t\t\t\tfor(int j=0;j<3;j++)t[j]=nums[as[i][j]];\n\t\t\t\tArrays.sort(t);\n\t\t\t\t// 数値が連続、または同一でなかったらfalse\n\t\t\t\tif(!(t[0]==t[1]&&t[1]==t[2]||t[0]+1==t[1]&&t[1]+1==t[2]))return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t// 全パターンを生成\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(c[i]==3)continue;\n\t\t\tas[i][c[i]] = k;\n\t\t\tc[i]++;\n\t\t\tif(dfs(k+1))return true;\n\t\t\tc[i]--;\n\t\t}\n\t\treturn false;\n\t}\n\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint handNum = sc.nextInt();\n\t\twhile(handNum--!=0){\n\t\t\tnums = new int[9]; colors = new char[9]; c = new int[3];\n\t\t\tfor(int i=0;i<9;i++)nums[i]=sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++)colors[i]=sc.next().charAt(0);\n\t\t\tas = new int[3][3];\n\t\t\tSystem.out.println(dfs(0)?1:0);\n\t\t}\n\n\t\tsc.close();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "package Rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\n\t\tif(3 <= R.size() && R.size()%3 == 0){\n\t\t\tCollections.sort(R);\n\t\t\tcnt += numSearch(R, R.size());\n\t\t}\n\n\t\tif(3 <= G.size() && G.size()%3 == 0){\n\t\t\tCollections.sort(G);\n\t\t\tcnt += numSearch(G, G.size());\n\n\t\t}\n\t\tif(3 <= B.size() && B.size()%3 == 0){\n\t\t\tCollections.sort(B);\n\t\t\tcnt += numSearch(B, B.size());\n\n\t\t}\n\n\t\tif(cnt == 3){\n\t\t\tSystem.out.println(\"1\");\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t}\n\n\t}\n\n\n\tprivate static int numSearch(ArrayList<Integer> r, int T) {\n\t\tint cnt = 0;\n\t\tfor (int j = 0; j < T; j += 3) {\n\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) cnt +=1;\n\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) cnt +=1;\n\t\t}\n\n\t\treturn cnt;\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t// memo\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ((color.equals(\"011\"))||(color.equals(\"122\"))||(color.equals(\"022\"))) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ((color.equals(\"001\"))||(color.equals(\"112\"))||(color.equals(\"002\"))) {\n\t\t\t\t\tif ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ((color.equals(000))&&(color.equals(111))&&(color.equals(222))) {\n\t\t\t\t\tif((cardNo[0]==cardNo[1]) && ((cardNo[1]+1)==cardNo[2]) && (cardNo[2]==cardNo[3]) && (cardNo[3]==cardNo[4]) && ((cardNo[4]+1)==cardNo[5]) && (cardNo[5]==cardNo[6]) && (cardNo[6]==cardNo[7]) && ((cardNo[7]+1)==cardNo[8])) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"color : \" + color + \"  check1 :\" + check + \" , check2 :\" + check2);\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif((check==3) || (check2==3)) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t* @return _number\n\t*/\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t* @param _number ??????????????? _number\n\t*/\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t* @return _colorNum\n\t*/\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t* @param _colorNum ??????????????? _colorNum\n\t*/\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t/**\n\t* ?????????????????????\n\t* @param color ????????¨????????????\n\t* @param num ???????????????\n\t*/\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static boolean judge(int[] x){\n\t\tfor(int i = 0; i < x.length; i++){\n\t\t\tif( x[i] == 0 ){\n\t\t\t\tcontinue;\n\t\t\t} else if( x[i] >= 3 ){\n\t\t\t\tx[i] -= 3;\n\t\t\t\ti--;\n\t\t\t} else if( i+2 < x.length && x[i] > 0 && x[i+1] > 0 && x[i+2] > 0 ){\n\t\t\t\tx[i]--; x[i+1]--; x[i+2]--;\n\t\t\t\ti--;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\t\t\t\n\tpublic static int solve(int[] num, String[] color){\n\t\tint[] R = new int[9];\n\t\tint[] G = new int[9];\n\t\tint[] B = new int[9];\n\t\t\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tif( color[i].equals(\"R\") ){\n\t\t\t\tR[num[i]]++;\n\t\t\t} else if( color[i].equals(\"G\") ){\n\t\t\t\tG[num[i]]++;\n\t\t\t} else {\n\t\t\t\tB[num[i]]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( judge(R) && judge(G) && judge(B) ){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\t\n\tpublic static void main(String[] args){\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint n = stdIn.nextInt();\n\t\tint[] result = new int[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] num = new int[9];\n\t\t\tString[] color = new String[9];\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tnum[j] = stdIn.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcolor[j] = stdIn.next();\n\t\t\t}\n\t\t\tresult[i] = solve(num, color);\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tSystem.out.println(result[i]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\t// game set\n\t\tint gameset = sc.nextInt();\n\n\t\tint[][] cardset = new int[UTRummy.CARDPAGE][UTRummy.ONECARDSET];\n\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tcardset[j][i] = sc.nextInt();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tString tmpcolor = sc.next();\n\t\t\t\t\t\tint intColor = 0;\n\t\t\t\t\t\tif (tmpcolor.equals(\"R\")) {\n\t\t\t\t\t\t\tintColor = UTRummy.RED;\n\t\t\t\t\t\t} else if (tmpcolor.equals(\"G\")) {\n\t\t\t\t\t\t\tintColor = UTRummy.GREEN;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tintColor = UTRummy.BLUE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcardset[j][i] = intColor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tUTRummy utr = new UTRummy();\n\t\t\tutr.setCardset(cardset);\n\t\t\tcardset = utr.getCardset();\n\n\t\t\tint intCount = 0;\n\t\t\tintCount = utr.playtheGame(cardset); // ?????????\n\n\t\t\tif (3 <= intCount) {\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass UTRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// color\n\tstatic final int RED = 0;\n\tstatic final int GREEN = 1;\n\tstatic final int BLUE = 2;\n\n\tint[][] Cardset = new int[CARDPAGE][ONECARDSET];\n\n\tpublic UTRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn Cardset;\n\t}\n\n\tpublic void setCardset(int[][] cardset) {\n\t\tthis.Cardset = settingcardplay(cardset);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {\n\n\t\tfor (int i = 0; i < 8; i++) {\n\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 8; i++) {\n\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\n\t\tint intCount = 0;\n\n\t\tfor (int k = 0; k < 7; k++) {\n\n\t\t\tfor (int j = k + 1; j < 8; j++) {\n\n\t\t\t\tfor (int i = j + 1; i < 9; i++) {\n\t\t\t\t\tif (cardset[1][k] == cardset[1][j] && cardset[1][j] == cardset[1][i]) {\n\n\t\t\t\t\t\tif (cardset[0][k] != 0 && cardset[0][k] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][k] == cardset[0][i] - 2) {\n\n\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int k = 0; k < 7; k++) {\n\n\t\t\tfor (int j = k + 1; j < 8; j++) {\n\n\t\t\t\tfor (int i = j + 1; i < 9; i++) {\n\n\t\t\t\t\tif (cardset[1][k] == cardset[1][j] && cardset[1][j] == cardset[1][i]) {\n\t\t\t\t\t\tif (cardset[0][k] != 0 && cardset[0][k] == cardset[0][j] && cardset[0][k] == cardset[0][i]) {\n\n\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn intCount;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir;\n\t\tint ig;\n\t\tint ib;\n\t\tint count;\n\t\tchar c;\n\t\tint t = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tir = 0;\n\t\t\tig = 0;\n\t\t\tib = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += count(nr, ir) + count(ng, ig) + count(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int count(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t// memo\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ((color.equals(\"011\"))||(color.equals(\"122\"))||(color.equals(\"022\"))) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ((color.equals(\"001\"))||(color.equals(\"112\"))||(color.equals(\"002\"))) {\n\t\t\t\t\tif ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ((color.equals(000)) || (color.equals(111)) || (color.equals(222))) {\n\t\t\t\t\tif((cardNo[0]==cardNo[1]) && ((cardNo[1]+1)==cardNo[2]) && (cardNo[2]==cardNo[3]) && (cardNo[3]==cardNo[4]) && ((cardNo[4]+1)==cardNo[5]) && (cardNo[5]==cardNo[6]) && (cardNo[6]==cardNo[7]) && ((cardNo[7]+1)==cardNo[8])) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\telse if(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\n\t\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"color : \" + color + \"  check1 :\" + check + \" , check2 :\" + check2);\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif((check==3) || (check2==3)) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t* @return _number\n\t*/\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t* @param _number ??????????????? _number\n\t*/\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t* @return _colorNum\n\t*/\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t* @param _colorNum ??????????????? _colorNum\n\t*/\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t/**\n\t* ?????????????????????\n\t* @param color ????????¨????????????\n\t* @param num ???????????????\n\t*/\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t// ??????????????????????????\\????????????????????£?¨?\n\t\tCardMethod cm = new CardMethod();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tinputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cm.utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// ??????\n\t\toutputAnswer(answer);\n\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????????????????£????§????\n\t *\n\t * @param cardArr\n\t *            ????´???´???\n\t * @param tmpNum\n\t *            ??°???????????±\n\t * @param tmpColor\n\t *            ???????????±\n\t */\n\tprivate static void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t// ?????°???????§£ ??°??????????´?\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\t// ?????°???????§£ ??????????´?\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t/**\n\t\t * ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t *\n\t\t * ??????????????????????????¨?????¨?????????????????\\\n\t\t */\n\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\n\t\tswitch (swi) {\n\t\tcase \"LongNum\":\n\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\tbreak;\n\n\t\tcase \"LongColor\":\n\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tSystem.out.println(\"??????????????¨?????¨????????????\");\n\t\t\tbreak;\n\t\t}\n\t}// inputTheCardArr????????????????????????\n\n\t/**\n\t * ?????±??????????????????\n\t *\n\t * @param cardArr\n\t *            ????´???´???\n\t * @param transNum\n\t *            ??°???????????±\n\t * @param transColor\n\t *            ???????????±\n\t */\n\tprivate static void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t// ??°???, ?????????????????????\n\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t// ??±?????????\n\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t} else {\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\t\t}\n\t}// caseOne????????????????????????\n\n\t/**\n\t * ?????±??????????????????\n\t *\n\t * @param cardArr\n\t *            ????´???´???\n\t * @param transNum\n\t *            ??°???????????±\n\t * @param transColor\n\t *            ???????????±\n\t */\n\tprivate static void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transColor.length; cnt2++) {\n\t\t\t// ??±?????????\n\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t} else {\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\t\t}\n\t}// caseTwo????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * @author ??????\n\t */\n\tpublic static class CardMethod {\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameCard(cardArr);\n\n\t\t\treturn result = verificationCard(result, cardArr);\n\n\t\t}// utRummy????????????????????????\n\n\t\t/**\n\t\t * ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t *\n\t\t * @param result\n\t\t *            ???????????¶???????´???´???\n\t\t * @param cardArr\n\t\t *            ????????????\n\t\t * @return ?????¶??????????????°???????????????, ????????????????????????????????????\n\t\t *\n\t\t */\n\t\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t// ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLESET) {\n\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}// verificationCard????????????????????????\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameCard????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialCard????????????????????????\n\n\t}// ???????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * ??????????????¬???\n *\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\n\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLECARDSET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<CardTC> cardArr = new ArrayList<CardTC>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ???????????????????????£???\n\t\t\tif (transNum.length > transColor.length) {\n\t\t\t\t/**\n\t\t\t\t * ?????¶????????????????????? ????????°?????????????????????????????´??? ???????????????????????°??????????????´???????????????\n\t\t\t\t *\n\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\tfor (int cnt2 = 0; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 > transColor.length) {\n\t\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 > transNum.length) {\n\t\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tprivate static int utRummy(ArrayList<CardTC> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLECARDSET) {\n\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void sameCard(ArrayList<CardTC> cardArr) {\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameCard????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void serialCard(ArrayList<CardTC> cardArr) {\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????????????????\n\n}// DebugRu?????????????????????\n\n/**\n * ?????????Card\n *\n * <pre>\n * ????????????????????????????????£????????¨???????????????????????????\n * ??????????????????????????§???\n *\n * 1. ?????????????????°??????????¨????????????¶?????????\n * 2. ????????§????±???¨??§???????????§????????????\n * 3. javadoc???????????????????????¨\n * 4. ??\\???????????????????????????????????????????????????\n *\n * ???????????????????????°\n * ??????????????????????????????????§£??????????????????????????????????????????????????£???????????¨\n * </pre>\n *\n * @author ?????????????????§???\n *\n */\nclass CardTC {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic CardTC() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic CardTC(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic CardTC(int num, String color) {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return???int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// CardTC?????????????????????"
  },
  {
    "language": "Java",
    "code": "import static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tSystem.setIn(new FileInputStream(\"src/aoj2102/input.txt\"));\n//\t\t\tSystem.setOut(new PrintStream(new FileOutputStream(\"src/aoj2101/result.txt\")));\n\t\t} catch (FileNotFoundException e) {\n\t\t}\n\t\tnew Main().run();\n\t}\n\n\n\n\tScanner sc;\n\tvoid run() {\n\t\tsc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T-->0) {\n\t\t\tint[] num = new int[9];\n\t\t\tString colors = \"RGB\";\n\n\t\t\tint[][] hand = new int[3][9];\n\t\t\tfor (int i = 0; i < 9; i++) num[i] = sc.nextInt() - 1;\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tString coler = sc.next();\n\t\t\t\tint idx = colors.indexOf(coler.charAt(0));\n\t\t\t\thand[idx][num[i]]++;\n\t\t\t}\n\n\t\t\tint done = 0;\n\t\t\tfor (int coler = 0; coler < 3; coler++) {\n\t\t\t\tfor (int i = 0; i < 9; i++) while (hand[coler][i] >= 3){\n\t\t\t\t\thand[coler][i] -= 3;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\t\t\t\tfor (int i = 0; i + 3 < 9; i++) while (hand[coler][i] > 0 && hand[coler][i+1] > 0 && hand[coler][i+2] > 0) {\n\t\t\t\t\thand[coler][i]--; hand[coler][i+1]--; hand[coler][i+2]--;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(done == 9 ? 1 : 0);\n\t\t}\n\t}\n\n\n\tvoid tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint[][] cards=new int[3][9];\n\t\tint n=sc.nextInt();\n\t\tint[] num=new int[9];\n\t\tchar[] color=new char[9];\n\t\tboolean win;\n\t\tfor(int i=0;i<n;i++){\n\t\t\twin=true;\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tfor(int k=0;k<9;k++){\n\t\t\t\t\tcards[j][k]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tnum[j]=sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tcolor[j]=sc.next().charAt(0);\n\t\t\t\tswitch(color[j]){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcards[0][num[j]-1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcards[1][num[j]-1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcards[2][num[j]-1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tif(win==false){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor(int k=0;k<9;k++){\n\t\t\t\t\tif(cards[j][k]!=0){\n\t\t\t\t\t\tif(cards[j][k]==3){\n\t\t\t\t\t\t\tcards[j][k]=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(k<7){\n\t\t\t\t\t\t\tif(cards[j][k+1]>=cards[j][k]&&cards[j][k+2]>=cards[j][k]){\n\t\t\t\t\t\t\t\tcards[j][k+1]-=cards[j][k];\n\t\t\t\t\t\t\t\tcards[j][k+2]-=cards[j][k];\n\t\t\t\t\t\t\t\tcards[j][k]=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\twin=false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\twin=false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(win){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tprivate static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t// ????????????????????????????????\\????????????????????£?¨?\n\t\tCardMethod cm = new CardMethod();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tcm.inputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cm.utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ??????????????????????????????????????????\n\t *\n\t * @author ??????\n\t */\n\tprivate static class CardMethod {\n\n\t\t/**\n\t\t *\n\t\t *\n\t\t * @param cardArr\n\t\t * @param transNum\n\t\t * @param transColor\n\t\t */\n\t\tprivate void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t/**\n\t\t\t * ?????¶??? ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t\t *\n\t\t\t * ?????????????????¨?????¨?????????????????\\??? ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t *\n\t\t\t */\n\t\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\t\t\t// ???????????????????????£???\n\t\t\tswitch (swi) {\n\t\t\tcase \"LongNum\":\n\t\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tcase \"LongColor\":\n\t\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"??¨????????????\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprivate void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\t// ??°???, ?????????????????????\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameCard(cardArr);\n\n\t\t\treturn result = verificationCard(result, cardArr);\n\n\t\t}// utRummy????????????????????????\n\n\t\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\t/**\n\t\t\t * @Warnning ???????????????????????´??????\n\t\t\t *\n\t\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t\t */\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t/**\n\t\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t\t */\n\t\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameCard????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialCard????????????????????????\n\n\t}// ???????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "package aoj.rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tcnt += numSearch(R);\n\t\t}\n\t\t\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tcnt += numSearch(G);\n\t\t\t\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tcnt += numSearch(B);\n\t\t\t\n\t\t}\n\t\t\n\t\tif(cnt == 3){\n\t\t\tSystem.out.println(\"1\");\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t}\n\t\t\n\t}\n\n\n\tprivate static int numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tswitch(r.size()){\n\t\tcase 3:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return 1;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return 1;\n\n\t\tcase 6:\n\t\t\tfor (int j = 0; j < 6; j +=3) {\n\t\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) i +=1;\n\t\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) i +=1;\n\t\t\t}\n\t\t\treturn i;\n\n\t\tcase 9:\n\t\t\tfor (int j = 0; j < 9; j +=3) {\n\t\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) i +=1;\n\t\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) i +=1;\n\t\t\t}\n\n\t\t\treturn i;\n\n\t\t}\n\n\t\treturn i;\n\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\n\t\t\tRummy rummy = new Rummy();\n\n\t\t\tint[][] hasCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\tint point = 0;\n\n\t\t\tpoint += rummy.sameNumberCheck(hasCard);\n\n\t\t\tpoint += rummy.continuousNumberCheck(hasCard);\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\n\t// ???????????????????????????????????£??????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\tint[][] hasCard = new int[3][9];\n\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\tpoint++;\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\t\tint continuousCount = 0;\n\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t//????????????????????°?????\\???\n\t\tint set = sc.nextInt();\n\t\tint[] num = new int[9];\n\t\tint[] color = new int[9];\n\t\tfor (int setCount = 0; setCount < set; setCount++) {\n\t\t\tint RCount = 0;\n\t\t\tint GCount = 0;\n\t\t\tint[] used = new int[9];\n\t\t\tint trueSet = 0;\n\t\t\t//??\\???\n\t\t\tfor (int count = 0; count < 9; count++ ) {\n\t\t\t\tnum[count] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t\tString cl = sc.next();\n\t\t\t\tif (cl.equals(\"R\") ) {\n\t\t\t\t\tcolor[count] = 0;\n\t\t\t\t\tRCount++;\n\t\t\t\t} else if (cl.equals(\"G\") ) {\n\t\t\t\t\tcolor[count] = 1;\n\t\t\t\t\tGCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcolor[count] = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//??????\n\t\t\tif ((RCount == 0 && GCount == 0) || (RCount == 0 && GCount == 3) ||\n\t\t\t\t(RCount == 0 && GCount == 6) || (RCount == 3 && GCount == 0) ||\n\t\t\t\t(RCount == 3 && GCount == 3) || (RCount == 3 && GCount == 6) ||\n\t\t\t\t(RCount == 6 && GCount == 0) || (RCount == 6 && GCount == 3) ||\n\t\t\t\t(RCount == 9) || (GCount == 9)) {\n\t\t\t\tfor (int xMaime = 0; xMaime < 7; xMaime++) {\n\t\t\t\t\tif (used[xMaime] == 0) {\n\t\t\t\t\t\tfor (int yMaime = xMaime + 1; yMaime < 8; yMaime++) {\n\t\t\t\t\t\t\tif(used[yMaime] == 0) {\n\t\t\t\t\t\t\t\tfor (int zMaime = yMaime + 1; zMaime < 9; zMaime++) {\n\t\t\t\t\t\t\t\t\tif (used[zMaime] == 0) {\n\t\t\t\t\t\t\t\t\t\tif (color[xMaime] == color[yMaime] && color[xMaime] == color[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] == num[yMaime] && num[xMaime] == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tint[] renban = new int[3];\n\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[yMaime] && num[xMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[yMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (num[yMaime] <= num[xMaime] && num[yMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[yMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (renban[0]+1 == renban[1] && renban[1]+1 == renban[2]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trueSet == 3) {\n\t\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void initiallize(boolean b[]) {\n\t\tfor (int i = 0; i < b.length; ++i) {\n\t\t\tb[i] = false;\n\t\t}\n\t}\n\n\tpublic static int same(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i]);\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static void sort(int num[]) {\n\t\tfor (int i = 0; i < num.length - 1; ++i) {\n\t\t\tfor (int j = i + 1; j < num.length; ++j) {\n\t\t\t\tif (num[j] > num[i]) {\n\t\t\t\t\tint tmp = num[j];\n\t\t\t\t\tnum[j] = num[i];\n\t\t\t\t\tnum[i] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static int continuous(int num[]) {\n\t\tint count = 0;\n\t\tint tmp, tmp2;\n\t\tsort(num);\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = 4; j > 0; --j) {\n\t\t\t\t\tif (j != 2) {\n\t\t\t\t\t\ttmp = research(num, num[i] - j + 2);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != i) {\n\t\t\t\t\t\t\t\tif (j == 3) {\n\t\t\t\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 4);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 3);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (tmp2 != -1) {\n\t\t\t\t\t\t\t\t\tif (tmp2 != i) {\n\t\t\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[tmp2] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int research(int num[], int k) {\n\t\tif (k <= 0)\n\t\t\treturn -1;\n\t\tfor (int i = num.length - 1; i >= 0; --i) {\n\t\t\tif (num[i] == k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static int judge(int num[], boolean b[]) {\n\t\tint count = 0;\n\t\tint j = 0;\n\t\tint number[] = new int[9];\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (b[i] == true) {\n\t\t\t\tnumber[j] = num[i];\n\t\t\t\t++j;\n\t\t\t}\n\t\t}\n\t\tif (number[2] == 0)\n\t\t\treturn -1;\n\t\t// same three number\n\t\tcount += same(number);\n\t\t// continuous three number\n\t\tcount += continuous(number);\n\n\t\treturn count;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tboolean R[], G[], B[];// position of R,B,G\n\t\tint count;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new boolean[9];\n\t\tB = new boolean[9];\n\t\tG = new boolean[9];\n\t\tint i, j;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[j] = true;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[j] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[j] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\t\t\t\tcount = 0;\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tint tmp = judge(num, R);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\ttmp = judge(num, B);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\ttmp = judge(num, G);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\tif (count == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t\tinitiallize(R);\n\t\t\t\tinitiallize(B);\n\t\t\t\tinitiallize(G);\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Collections;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\t//データ入力の準備\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t//データセット数\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor (int i = 0; i < n; i++){\n\t\t\tint[] temp = new int[9];\n\t\t\tList<Integer> red = new ArrayList<Integer>();\n\t\t\tList<Integer> blue = new ArrayList<Integer>();\n\t\t\tList<Integer> green = new ArrayList<Integer>();\n\t\t\t\n\t\t\t//一旦全ての数字をtempに保存\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\ttemp[j] = sc.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\t//色ごとのリストに格納\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\tString color = sc.next();\n\t\t\t\t\n\t\t\t\tif (color == \"R\"){\n\t\t\t\t\tred.add(temp[j]);\n\t\t\t\t}else if (color == \"B\"){\n\t\t\t\t\tblue.add(temp[j]);\n\t\t\t\t}else{\n\t\t\t\t\tgreen.add(temp[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//データのチェック\n\t\t\tif (check(red) == 1 || check(blue) == 1 || check(green) == 1){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tprivate static int check(List<Integer> data){\n\t\tint[] check = {0,0,0,0,0,0,0,0,0};\n\t\tboolean last = false;\n\t\tboolean one = false;\n\t\tboolean two = false;\n\t\t\n\t\tfor (int i = 0; i < data.size(); i++){\n\t\t\t\tcheck[data.get(i)] += 1;\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < data.size(); i++){\n\t\t\t//同じ数字３つの判定\n\t\t\tif (data.get(i) >= 3){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t//連番の判定\n\t\t\ttwo = one;\n\t\t\tone = last;\n\t\t\t\n\t\t\tif (data.get(i) >= 1){\n\t\t\t\tlast = true;\n\t\t\t}else{\n\t\t\t\tlast = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (last == true && one == true && two == true){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn 0;\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t//????????????????????????????????\\????????????????????£?¨?\n\t\tCardMethod cm = new CardMethod();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tcm.inputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cm.utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ??????????????????????????????????????????\n\t * @author ??????\n\t */\n\tpublic static class CardMethod {\n\n\t\t/**\n\t\t *\n\t\t *\n\t\t * @param cardArr\n\t\t * @param transNum\n\t\t * @param transColor\n\t\t */\n\t\tprivate static void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t/**\n\t\t\t * ?????¶??? ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t\t *\n\t\t\t * ?????????????????¨?????¨?????????????????\\??? ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t *\n\t\t\t */\n\t\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\t\t\t// ???????????????????????£???\n\t\t\tswitch (swi) {\n\t\t\tcase \"LongNum\":\n\t\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tcase \"LongColor\":\n\t\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"??¨????????????\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\t// ??°???, ?????????????????????\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameCard(cardArr);\n\n\t\t\treturn  result = verificationCard(result, cardArr);\n\n\t\t}// utRummy????????????????????????\n\n\t\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\t/**\n\t\t\t * @Warnning ???????????????????????´??????\n\t\t\t *\n\t\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t\t */\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t/**\n\t\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t\t */\n\t\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameCard????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialCard????????????????????????\n\n\t}//???????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * Rummy\n */\npublic class Main {\n\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\tint T = parseInt(br.readLine());\n\n\t\tfor (int i = 0; i < T; i++) {\n\n\t\t\tStringTokenizer st1 = new StringTokenizer(br.readLine());\n\t\t\tStringTokenizer st2 = new StringTokenizer(br.readLine());\n\n\t\t\tint[] R = new int[10];\n\t\t\tint[] G = new int[10];\n\t\t\tint[] B = new int[10];\n\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tint n = parseInt(st1.nextToken());\n\t\t\t\tswitch (st2.nextToken().charAt(0)) {\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tR[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tG[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tB[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\tint count = solve(R, 1, 0) + solve(G, 1, 0) + solve(B, 1, 0);\n\t\t\tSystem.out.println(count >= 3 ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static int solve(int[] cards, int s, int c) {\n\n\t\tif (s == 9) return c;\n\n\t\tint c1 = 0, c2 = 0, c3 = 0;\n\n\t\tif (cards[s] >= 3) {\n\t\t\tint[] _cards = cards.clone();\n\t\t\t_cards[s] -= 3;\n\t\t\tc1 = solve(_cards, s + 1, c + 1);\n\t\t}\n\n\t\tif (c <= 7 && cards[s] >= 1 && cards[s + 1] >= 1 && cards[s + 2] >= 1) {\n\t\t\tint[] _cards = cards.clone();\n\t\t\t_cards[s]--;\n\t\t\t_cards[s + 1]--;\n\t\t\t_cards[s + 2]--;\n\t\t\tc2 = solve(_cards, s + 1, c + 1);\n\t\t}\n\n\t\tc3 = solve(cards, s + 1, c);\n\n\t\treturn Math.max(c1, Math.max(c2, c3));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\t// ???????????????????????°?????\\???\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\t// 9????????????????????°???????????????????´?\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\t// 9?????????????????????????????????????´?\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\t\t\t// ?????????????????????????????????????????????????????§???????????????\n\t\t\tRummyJudge rummy = new RummyJudge();\n\n\t\t\t// ?????\\?????????????????´???\n\t\t\tint[][] hasCard = hasCardSet(cardNum, cardColor);\n\n\t\t\t// ?????£??????????????°?????\\???????????°\n\t\t\tint point = 0;\n\n\t\t\t// ???????????§????????°?????????????????£???????????????????????¢????????????????????????\n\t\t\tpoint += rummy.sameNumberCheck(hasCard);\n\n\t\t\t// ???????????§??£???????????£???????????????????????¢????????????????????????\n\t\t\tpoint += rummy.continuousNumberCheck(hasCard);\n\n\t\t\t// 3??????????????£????????????1???????????????????????????\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n\n\t// ?????\\?????????????????????????????´?????????????????????\n\tprivate static int[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\t// ????????????????´???????????¬??????????\n\t\tint[][] hasCard = new int[3][9];\n\n\t\t// ???????????????????????????\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\t//1???9?????§???????????????????????´????????°??????????´¢\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\t// ??????????????????????????°???????????????????????§???\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\t// ???????????????????????£???????´?????????????\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\n}\n\nclass RummyJudge{\n\n\t// 3????????°?????????????????????????????????????´¢??????????????????\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\t// ???????????°???????´????????????°\n\t\tint point = 0;\n\n\t\t// ???????????????????????????????????§???\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\t// ??????????????´????????????????????°??????3?????\\??£??????????????????\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\t// 3???????????°??????????????????\n\t\t\t\t\tpoint++;\n\t\t\t\t\t// ?????????????????£????????????????¶????\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// ???????????§3?????£???????????£??????????????????????????????????´¢??????????????????\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\t// ???????????°???????´????????????°\n\t\tint point = 0;\n\t\t// ?¶???????????????°?????????????????????????????°\n\t\tint continuousCount = 0;\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\t// ???????????£?¶???????????´????????????°????????\\??£??????????????????\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\t// ??°????????\\??£???????????°??????????????????\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\t// ??£?????????????¶??????????????????????\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\t// ???????¶???????????????°??????????????????\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\t// ?????????????????£????????????????¶????\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\t// ????´???????0????????????????????????????????????????????????????????°????????????\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\t// ??£???????????????????????????\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ??£?????????????¶????????????£????????£???????????????????????????\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tint R[], G[], B[];// position of R,B,G\n\t\tint count1[], count2, /* counting number */ max, min;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new int[9];\n\t\tB = new int[9];\n\t\tG = new int[9];\n\t\tcount1 = new int[10];\n\t\tint i, j, k, m, n, l;\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tk = 0;\n\t\t\tm = 0;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[k] = j;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[m] = j;\n\t\t\t\t\t\t++m;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[n] = j;\n\t\t\t\t\t\t++n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i % 2 == 1) {\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < k; ++l) {\n\t\t\t\t\t++count1[num[R[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[R[l]]] == 3) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t\tcount1[num[R[l]]] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[R[max]] < num[R[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[R[min]] > num[R[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[R[max]] - num[R[min]] > 1) {\n\t\t\t\t\tfor (l = num[R[min]] + 1; l <= num[R[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < m; ++l) {\n\t\t\t\t\t++count1[num[B[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[B[l]]] == 3) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t\tcount1[num[B[l]]] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[B[max]] < num[B[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[B[min]] > num[B[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (num[B[max]] - num[B[min]] > 1) {\n\t\t\t\t\tfor (l = num[B[min]] + 1; l <= num[B[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < n; ++l) {\n\t\t\t\t\t++count1[num[G[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[G[l]]] % 3 == 0) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[G[max]] < num[G[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[G[min]] > num[G[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (num[G[max]] - num[G[min]] > 1) {\n\t\t\t\t\tfor (l = num[G[min]] + 1; l <= num[G[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (count2 == 3) {\n\t\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<t;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k*3]==color[j][k*3+2]){\n                        color[j][k*3]=0;\n                        color[j][k*3+1]=0;\n                        color[j][k*3+2]=0;\n                    }\n                }\n            }\nfor (int j=0;j<3&&win!=0;j++){\n                int n=color_num[j];\n                int changed=0;\n                for (int l=0;l<n/3;l++){\n                    int bef=-2;\n                    changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        if ((k==color_num[j]-2&&changed==0)||(k==color_num[j]-1&&changed<=1)) break;\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3){\n                            changed=0;\n                            bef=-2;\n                        }\n                    }\n                    /*              for (int a=0;a<3;a++){                                                                                                    \n                        for (int b=0;b<color_num[a];b++){                                                                                                     \n                            System.out.print(color[a][b]);                                                                                                    \n                        }                                                                                                                                     \n                        System.out.println();                                                                                                                 \n                        }*/\n                }\n                if (changed!=0) win=0;\n            }\n\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T=scan.nextInt();\n\t\tfor(int roop=0;roop<T;roop++){\n\t\t\tint[] n = new int[9];\n\t\t\tint[][] card = new int[3][9];\n\t\t\tchar[] c = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tn[i]=scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tc[i]=scan.next().charAt(0);\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tswitch(c[i]){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcard[0][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcard[1][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcard[2][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint set=0;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\t\tif(card[i][j]>2){\n\t\t\t\t\t\tcard[i][j]-=3;\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t\tif(j<7 && card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0){\n\t\t\t\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\t\t\t\tcard[i][j+k]-=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set>2){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\t/**\n\t * ????????°???????????¨?????????????????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ??????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * ???????????????????????????\n\t\t\t *\n\t\t\t * @param cardArr\n\t\t\t *            ????????????????´???´???\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t/**\n\t\t\t * ??\\??????????§£?????°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\t// ??????????????°??????????????????\n\t\t\tString[] transNum = br.readLine().split(\" \");\n\t\t\t// ??????????????????????????????\n\t\t\tString[] transColor = br.readLine().split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ????????????????????¨??¶??????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ?????????????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? : ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * ????????????????¨??????????????????????\n\t\t\t */\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨? 3)???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcard_NumAndColor_Sort(cardArr);\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tvictoryCondition_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolchk_wasUsed = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolchk_wasUsed++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????§???????????????????????¶???????????????????????¨????¨?\n\t\t *\n\t\t **** ?????????????????§???????¨?????????????\n\t\t *\n\t\t * int answer;\n\t\t *\n\t\t * System.out.println(answer = (toolcnt == 0)? 1:0);\n\t\t */\n\t\tif (toolchk_wasUsed == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint victoryAnswer = 1;\n\t\t\tSystem.out.println(victoryAnswer);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint defeatAnswer = 0;\n\t\t\tSystem.out.println(defeatAnswer);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void victoryCondition_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\t // ????????????????????????3?????????????????¢??????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)???????????§?????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)?????£?¶??????°????????????????????°???3?????§?????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// ????????????????????????????¨????????????????\n\t\t\t\t\t\t\t\tfor (int tool_btn = 0; tool_btn < cardArr.size(); tool_btn++) {\n\t\t\t\t\t\t\t\t\tif (cardArr.get(tool_btn) == cardArr.get(cnt1)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt2)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt3)) {\n\t\t\t\t\t\t\t\t\t\t// ????????§?¨??????????????????¶???????????´\n\t\t\t\t\t\t\t\t\t\tcardArr.get(tool_btn).setUse(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void card_NumAndColor_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber() || cardArr.get(cnt2)\n\t\t\t\t\t\t.getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ???????????????????????°\n\t\t\t\t\tUTRummyCard tmp_card = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_card);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????????????? ????????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°??????\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ??????????????????\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * boolean ????????????????¨?????????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ????????????????????§int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * boolean???????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int, String, boolean???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\n//==============================================================================\n\nclass Main{\n    \n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int[][] tehuda = new int[2][9];\n        \n        int T = sc.nextInt();//???????????????????????°\n        \n        for( int i = 0 ; i < T ; i++ ){//???????????????????????°?????????\n            for( int j = 0 ; j < 2 ; j++ ){\n                for( int k = 0 ; k < 9 ; k++ ){\n                    \n                    if( j == 0 ){\n                        tehuda[i][j] = sc.nextInt();\n                    }else{\n                        char color = sc.next().charAt(0);\n                        int intColor = 0;\n                        if( color == 'R'){//R???????????¨??????\n                            intColor = 11;\n                        }else if( color == 'G'){//G???????????¨??????\n                            intColor = 12;\n                        }else if( color == 'B'){//B???????????¨??????\n                            intColor = 13;\n                        }\n                        \n                        tehuda[i][j] = intColor;\n                    }\n                }\n            }\n        \n        \n            Rummy insRummy = new Rummy();//Rummy???????????????\n        \n            insRummy.setCard(tehuda);//??????????????°??¨??????Rummy????????????setCard???\n            \n            insRummy.sort();//Rummy????????????sort??????????????????\n            \n            tehuda = insRummy.getCard();//sort??????????????????????????????\n            \n            int count = 0;//?????????????????????\n            count = insRummy.judge(tehuda);\n            \n            if( count >= 3 ){\n                System.out.println(1);\n \n            }else{\n                System.out.println(0);\n            }\n        }\n    }\n\n//==============================================================================\n\n\tstatic class Rummy {\n\t    \n\t    private int[][] tehuda = new int[2][9];\n\t    \n\t    Rummy(){\n\t        \n\t    }\n\t\n\t    public int judge(int[][] tehuda) {\n\t        \n\t    \tint count = 0;\n\t        \n\t        for(int i= 0; i < 7; i++){//??£????????§??????\n\t            \n\t            for(int j = i+1; j < 8; j++ ){\n\t               \n\t                for(int k = j+1; k < 9; k++){\n\t                    \n\t                   if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n\t                        \n\t                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] -1 && tehuda[0][i] == tehuda[0][k] -2){\n\t                        \t\n\t                        \tcount++;\n\t                           \n\t                        \ttehuda[0][i] = 0;//?????´???????????????0???\n\t                        \ttehuda[0][j] = 0;//?????´???????????????0???\n\t                        \ttehuda[0][k] = 0;//?????´???????????????0???\n\t                        }\n\t                    }\n\t\n\t                }\n\t            }\n\t        }\n\t        \n\t       \n\t        for(int i= 0; i < 7; i++){//?????????????????§??????\n\t            \n\t            for(int j = i+1; j < 8; j++ ){\n\t                \n\t                for(int k = j+1; k < 9; k++){\n\t                    \n\t                    if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n\t                       \n\t                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] && tehuda[0][i] == tehuda[0][k]){\n\t                        \t\n\t                        \tcount++;\n\t                           \n\t                        \ttehuda[0][i] = 0;//?????´???????????????0???\n\t                        \ttehuda[0][j] = 0;//?????´???????????????0???\n\t                        \ttehuda[0][k] = 0;//?????´???????????????0???\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return count;\n\t    }\n\t    \n\t    public void sort() {\n\t        \n\t    \tfor(int i = 0; i < 8; i++){//??????????????????\n\t            for(int j = 0; j < 8-i; j++ ){\n\t\n\t                if(tehuda[1][j] > tehuda[1][j+1]){\n\t                    int temp = tehuda[1][j];\n\t                    tehuda[1][j] = tehuda[1][j+1];\n\t                    tehuda[1][j+1] = temp;\n\t                    \n\t                    int temp2 = tehuda[0][j];\n\t                    tehuda[0][j] = tehuda[0][j+1];\n\t                    tehuda[0][j+1] = temp2;\n\t                }\n\t            }\n\t        }\n\t        \n\t        for(int i = 0; i < 8; i++){//??????????????????\n\t\n\t            for(int j = 0; j < 8-i; j++){\n\t                \n\t                if(tehuda[1][j] == tehuda[1][j+1] && tehuda[0][j] > tehuda[0][j+1]){\n\t\n\t                    int temp = tehuda[0][j];\n\t                    tehuda[0][j] = tehuda[0][j+1];\n\t                    tehuda[0][j+1] = temp;\n\t                    \n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    public void setCard(int[][] tehuda) {\n\t        this.tehuda = tehuda;\n\t        \n\t    }\n\t    \n\t    public int[][] getCard() {\n\t         return tehuda;\n\t    }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint c = 0;\n\t\twhile(true){\n\t\t\tint[] num = new int[9];\n\t\t\tint[] colour = new int[9];\n\t\t\tint set = 0;\n\t\t\tint wl = 0;\n\t\t\tfor(int i = 0;i < 9;i++){\n\t\t\t\tnum[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int i = 0;i < 9;i++){\n\t\t\t\tcolour[i] = sc.next().charAt(0);\n\t\t\t}\n\t\t\tfor(int i = 0;i < num.length-2;i++){\n\t\t\t\tif(num[i] == 10) continue;\n\t\t\t\tint x = num[i];\n\t\t\t\tint y = colour[i];\n\t\t\t\tfor(int j = i+1;j < num.length-1;i++){\n\t\t\t\t\tif(num[j] == x && colour[j] == y){\n\t\t\t\t\t\tfor(int k = j+1;k < num.length;k++){\n\t\t\t\t\t\t\tif(num[k] == x && colour[k] == y){\n\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\tnum[j] = 10;\n\t\t\t\t\t\t\t\tnum[k] = 10;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tfor(int j = i+1;j < num.length-1;i++){\n\t\t\t\t\tif(num[j] == x+1 && colour[j] == y){\n\t\t\t\t\t\tfor(int k = j+1;k < num.length;i++){\n\t\t\t\t\t\t\tif(num[j] == x+2 && colour[j] == y){\n\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\tnum[j] = 10;\n\t\t\t\t\t\t\t\tnum[k] = 10;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) wl = 1;\n\t\t\tSystem.out.println(wl);\n\t\t\tc++;\n\t\t\tif(c == n) break;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t// ??????????????????????????\\????????????????????£?¨?\n\t\tCardMethod cm = new CardMethod();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tinputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cm.utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// ??????\n\t\toutputAnswer(answer);\n\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????????????????£????§????\n\t *\n\t * @param cardArr\n\t *            ????´???´???\n\t * @param tmpNum\n\t *            ??°???????????±\n\t * @param tmpColor\n\t *            ???????????±\n\t */\n\tprivate static void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t// ?????°???????§£ ??°??????????´?\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\t// ?????°???????§£ ??????????´?\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t/**\n\t\t * ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t *\n\t\t * ??????????????????????????¨?????¨?????????????????\\\n\t\t */\n\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\n\t\tswitch (swi) {\n\t\tcase \"LongNum\":\n\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\tbreak;\n\n\t\tcase \"LongColor\":\n\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tSystem.out.println(\"??????????????¨?????¨????????????\");\n\t\t\tbreak;\n\t\t}\n\t}// inputTheCardArr????????????????????????\n\n\t/**\n\t * ?????±??????????????????\n\t *\n\t * @param cardArr\n\t *            ????´???´???\n\t * @param transNum\n\t *            ??°???????????±\n\t * @param transColor\n\t *            ???????????±\n\t */\n\tprivate static void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t// ??°???, ?????????????????????\n\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t// ??±?????????\n\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t} else {\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\t\t}\n\t}// caseOne????????????????????????\n\n\t/**\n\t * ?????±??????????????????\n\t *\n\t * @param cardArr\n\t *            ????´???´???\n\t * @param transNum\n\t *            ??°???????????±\n\t * @param transColor\n\t *            ???????????±\n\t */\n\tprivate static void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transColor.length; cnt2++) {\n\t\t\t// ??±?????????\n\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t} else {\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\t\t}\n\t}// caseTwo????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * @author ??????\n\t */\n\tpublic static class CardMethod {\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameCard(cardArr);\n\n\t\t\treturn result = verificationCard(result, cardArr);\n\n\t\t}// utRummy????????????????????????\n\n\t\t/**\n\t\t * ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t *\n\t\t * @param result\n\t\t *            ???????????¶???????´???´???\n\t\t * @param cardArr\n\t\t *            ????????????\n\t\t * @return ?????¶??????????????°???????????????, ????????????????????????????????????\n\t\t *\n\t\t */\n\t\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t// ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLESET) {\n\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}// verificationCard????????????????????????\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameCard????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialCard????????????????????????\n\n\t}// ???????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\t\n\t\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\t\t \n\t\t //????????°???????????????\n\t\t int ans = 0;\n\t\t \n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t \n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\t\t\t\t\t \n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt++] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°??§0??§????????????\n\t\t\t\t\t if(work_cnt % 3 == 0 && work_cnt != 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[i + 1] && work[i + 1]  == work[i + 2]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t else if(work[i] + 1 == work[i + 1]  && work[i + 1] + 1 == work[i + 2]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t i += 3;\n\t\t\t\t\t\t \t}\n\t\t\t\t\t \t}else{\n\t\t\t\t\t \t\tbreak;\n\t\t\t\t\t \t\t}\n\t\t\t\t \t}\n\n\t\t\t\t //3?????????????????£???????????°???1??????????????????\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\t\t\t\t//????????°???????????????????????????\n\t\t\t\t ans = 0;\n\n\t\t }\n\t\tscan.close();\n\n\t }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tint number[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\t\tString color[] = { \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\" };\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tnumber[count1] = scan.nextInt();\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tcolor[count1] = scan.next();\n\t\t\t}\n\n\t\t\t// ???????????????????????????????????????????????°?????°?????£??????true??§?¬?????????????\n\t\t\tcolor_count c = new color_count();\n\n\t\t\t// ?????????????????? store???????????????????????¨??????color_count??????????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tc.count(color[count1]);\n\t\t\t}\n\n\t\t\t// ???????????? ??????????????°??§????????°true???\n\t\t\tboolean flg = c.color_result();\n\n\t\t\t// ???????????????true?????´????????°???????????? / false?????´??????0?????????\n\t\t\tif (flg) {\n\t\t\t\tcheck ck = new check();\n\t\t\t\t// number_store???store???????????????????????????\n\t\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\t\tck.number_store(number[count1]);\n\t\t\t\t}\n\n\t\t\t\t// ???????????????\n\t\t\t\tck.number_sort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.number_check();\n\n\t\t\t\t// ??????\n\t\t\t\tboolean flg2 = ck.result();\n\t\t\t\tif (flg2) {\n\t\t\t\t\tsb.append(\"1\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"0\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// ????????°?????°???????????????\nclass color_count {\n\n\tint r = 0;\n\tint b = 0;\n\tint g = 0;\n\n\t// ????????????????????????\n\tcolor_count() {\n\t\t// r = 0;\n\t\t// b = 0;\n\t\t// g = 0;\n\t}\n\n\tvoid count(String color) {\n\t\tif (color.equals(\"R\")) {\n\t\t\tr++;\n\t\t} else if (color.equals(\"B\")) {\n\t\t\tb++;\n\t\t} else if (color.equals(\"G\")) {\n\t\t\tg++;\n\t\t}\n\t\t// System.out.println(\"r=\" + r + \" b=\" + b + \" g=\" + g);\n\t}\n\n\t// color?????\\??????\n\tboolean color_result() {\n\t\t// ????????????????????????????????°??§????????¨???true?????????\n\t\treturn (r % 3 == 0) & (b % 3 == 0) & (g % 3 == 0);\n\t}\n\n}\n\nclass check {\n\tList<Integer> number_list = new ArrayList<Integer>();\n\n\tint[] number = new int[9];\n\n\t// int number[] = {0,0,0,0,0,0,0,0,0};\n\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tint[] num = new int[9];\n\t// int num[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\n\t// ??°????????\\??????\n\tvoid number_store(int number) {\n\t\tnumber_list.add(number);\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t}\n\n\t// ??°??????????????????????????????????´?\n\tvoid number_sort() {\n\t\tCollections.sort(number_list);\n\t\tfor (int count = 0; count < 9; count++) {\n\t\t\tnumber[count] = number_list.get(count);\n\t\t}\n\n\t}\n\n\tvoid number_check() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// ?????????true ??? false??§??????\n\tboolean result() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\treturn num[0] == 0 & num[1] == 0 & num[2] == 0 & num[3] == 0 & num[4] == 0 & num[5] == 0 & num[6] == 0\n\t\t\t\t& num[7] == 0 & num[8] == 0;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class MainTwo {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint[] intHairetsuNum = new int[9]; \n\t\tString[] strHairetsuNum = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString[] strHairetsuColor = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°??????????´???¨\n\t\t\t\t\t\n\t\t\t\t\tintHairetsuNum = new int[9]; \n\t\n\t\t\t\t\tstrHairetsuNum = new String[9];\n\t\t\n\t\t\t\t\n\t\t\t\t\tstrHairetsuColor = new String[9];\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!(Check(counter[0] % 3) && Check(counter[1] % 3) && Check(counter[2] % 3))) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) { \n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;//だめなヤツがあった時点でもうbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummy(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @param result2\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ????????????????????°??????????????????\n\t\tcardNumSort(cardArr);\n\n\t\t// ???????????????????????\\?????????????????????R, G, B??????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\n\t\t// ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶??????????????????????????°???????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2) 3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * ????????§???????????????????????????for?????????????????¨????????¨?????£?§£?????????\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * ?????????????????????\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ?????????????????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????°?????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.Math;\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String s;\n        int flag = 0;\n        for(int k=0;k<n;k++){\n            int[] x = new int[9];\n            //int[] c = new int[9];\n            int[] red = new int[9];\n            int[] green = new int[9];\n            int[] blue = new int[9];\n            //List<Integer> red = new ArrayList<>();\n            //List<Integer> blue = new ArrayList<>();\n            //List<Integer> green = new ArrayList<>();\n            flag=0;\n            for(int i=0; i<9;i++){\n                x[i] = sc.nextInt();           \n            }\n            for(int i=0; i<9;i++){\n                s = sc.next();\n                if(s.equals(\"R\")){\n                    red[x[i]-1]++;\n                }\n                else if(s.equals(\"G\")){\n                    green[x[i]-1]++;\n                }    \n                else {\n                    blue[x[i]-1]++;\n                }         \n            }\n            for(int i=0; i<7;i++){\n                if((red[i]%3)==1||red[i]%3==2){\n                    red[i+1]-=red[i]%3;\n                    red[i+2]-=red[i]%3;\n                    red[i]-=red[i]%3;\n                }\n            }\n            for(int i=0; i<9;i++){\n                if(red[i]%3==0){\n                    red[i]-=(red[i]/3)*3;\n                }\n            }\n            for(int i=0; i<7;i++){\n                if((green[i]%3)==1||green[i]%3==2){\n                    green[i+1]-=green[i]%3;\n                    green[i+2]-=green[i]%3;\n                    green[i]-=green[i]%3;\n                }\n            }\n            for(int i=0; i<9;i++){\n                if(green[i]%3==0){\n                    green[i]-=(green[i]/3)*3;\n                }\n            }\n            for(int i=0; i<7;i++){\n                if((blue[i]%3)==1||blue[i]%3==2){\n                    blue[i+1]-=blue[i]%3;\n                    blue[i+2]-=blue[i]%3;\n                    blue[i]-=blue[i]%3;\n                }\n            }\n            for(int i=0; i<9;i++){\n                if(blue[i]%3==0){\n                    blue[i]-=(blue[i]/3)*3;\n                }\n            }\n            for(int i=0; i<9;i++) {\n                if(red[i]!=0||blue[i]!=0||green[i]!=0){\n                    flag++;\n                    //System.out.println(red[i]+\":\"+green[i]+\":\"+blue[i]);\n                }\n                red[i]=0;blue[i]=0;green[i]=0;\n            }\n            if(flag==0){\n                System.out.println(1);\n            }\n            else {\n                System.out.println(0);\n            }\n            //Collections.sort(red);\n            //Collections.sort(green);\n            //Collections.sort(blue);\n            \n        }\n        \n        sc.close();\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\n\t/**\n\t * ??????????????¬???\n\t *\n\t * <pre>\n\t *\tAOJ Rummy?????????????????????????????????????????????\n\t * </pre>\n\t *\n\t * @author ?????????????????§???\n\t * @category AOJRummy\n\t * @version 1.8_45\n\t * @since 1.8_45\n\t *\n\t */\n\tpublic class Main{\n\n\t\t/**\n\t\t * ????????°????????????3????????????????????°?????¶???\n\t\t */\n\t\tprivate static final int TRIPLECARDSET = 9;\n\n\t\t/**\n\t\t * ?????¶??????????????????????????????????????????????????????\n\t\t */\n\t\tprivate static final String ZERO = \"0\";\n\n\t\t/**\n\t\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t\t */\n\t\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t\t/**\n\t\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t\t */\n\t\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t\t/**\n\t\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t\t */\n\t\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t\t/**\n\t\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t\t */\n\t\t//private static final int ADDRESSPLUSTHREE = 3;\n\n\t\t/**\n\t\t * ??????????????§BufferedReader?????????\n\t\t *\n\t\t * @throws IOException\n\t\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t\t */\n\t\tpublic static void main(String[] args) throws IOException {\n\n\t\t\t// ?????????????????????\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t\t// ?????????????´???´???\n\t\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t\t// 1??????????????????set?????°??????????????°\n\t\t\tint set = Integer.parseInt(br.readLine());\n\n\n\t\t\tSystem.out.println(\"Test Start\");\n\t\t\t//???????????¨\n\t\t\tSystem.out.println(\"test : ????????\\?????????\");\n\n\t\t\t// ????????????????´???´???\n\t\t\tList<TestCard1> cardArr = new ArrayList<TestCard1>();\n\n\t\t\t//???????????????????????\\????????????????????£?¨?\n\t\t\tTestCard1 tc = new TestCard1();\n\n\t\t\t// for????????? set????????°?????????\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < set; cnt++) {\n\n\t\t\t\t// ??????????????°??????????????¨????????????\n\t\t\t\tString tmpNum = br.readLine();\n\t\t\t\t// ??????????????????????????¨????????????\n\t\t\t\tString tmpColor = br.readLine();\n\n\t\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t\t// ?????°???????§£ ??????????´?\n\t\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t\t//???????????????????????£???\n\t\t\t\t if (transNum.length > transColor.length) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ???????????????????????????????????£????????????????????????????????§?????????\n\t\t\t\t\t */\n\t\t\t\t\t tc.setOnecardset(transNum.length);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param cntcardnumber\n\t\t\t\t\t *            ??????????????°????????°????????°??????\n\t\t\t\t\t */\n\t\t\t\t\tfor (int cntcardnumber = ADDRESSPLUSZERO; cntcardnumber < tc.getOnecardset(); cntcardnumber++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????¶?????????????????????\n\t\t\t\t\t\t * ????????°?????????????????????????????´???\n\t\t\t\t\t\t * ???????????????????????°??????????????´???????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\t\t\t\t\t\t// ??°???, ?????????????????????\n\n\t\t\t\t\t\tif (cntcardnumber > transColor.length) {\n\t\t\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\t\t\tcardArr.add(new TestCard1(Integer.parseInt(transNum[cntcardnumber]), ZERO));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\n\t\t\t\t\t\t\tcardArr.add(new TestCard1(Integer.parseInt(transNum[cntcardnumber]),transColor[cntcardnumber]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// ???????????????????????£???\n\t\t\t\t} else {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ???????????????????????????????????£????????????????????????????????§?????????\n\t\t\t\t\t */\n\t\t\t\t\ttc.setOnecardset(transColor.length);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param cntcardcolor\n\t\t\t\t\t *            ????????????????????°????????°??????\n\t\t\t\t\t */\n\t\t\t\t\tfor (int cntcardcolor = ADDRESSPLUSZERO; cntcardcolor < tc.getOnecardset(); cntcardcolor++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????¶??????????????????????????????????????°??????????????´??????????????????????????????\n\t\t\t\t\t\t * \t\t\t?????????????????????????????°?????????????????°?£???°????????§?????????????´??????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ???????????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\t\t\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\t\t\tif (cntcardcolor > transNum.length) {\n\t\t\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\t\t\tcardArr.add(new TestCard1(ADDRESSPLUSZERO, transColor[cntcardcolor]));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\n\t\t\t\t\t\t\t//???????????¨\n\t\t\t\t\t\t\ttc.setFrontnumber(Integer.parseInt(transNum[cntcardcolor]));\n\t\t\t\t\t\t\ttc.setRearColor(transColor[cntcardcolor]);\n\t\t\t\t\t\t\tcardArr.add(new TestCard1(tc.getFrontnumber(),tc.getRearColor()));\n\n\t\t\t\t\t\t\t//???????????¨\n\t\t\t\t\t\t\tSystem.out.println(cntcardcolor+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(cntcardcolor).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cntcardcolor).getRearColor()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// test\n\t\t\t\tSystem.out.println(\"test : ???????´¢????????????\");\n\t\t\t\tSystem.out.println(\"????????????????????????????????????????????????????????????????????????\");\n\n\t\t\t\t//???????????¨\n\t\t\t\tfor (int tmp = ADDRESSPLUSZERO; tmp < cardArr.size(); tmp++) {\n\t\t\t\t\tSystem.out.println(\"********** after save\");\n\t\t\t\t\tSystem.out.println(\"ARRAYLIST.LENGTH : \" + cardArr.size());\n\t\t\t\t\tSystem.out.println(tmp+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(tmp).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(tmp).getRearColor()));\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\n\t\t\t\t/**\n\t\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t\t */\n\t\t\t\t// result????????????????????????????´???´???\n\t\t\t\tint result = playtheGame(cardArr);\n\t\t\t\t// ?????????????´?\n\t\t\t\tanswer.add(result);\n\n\t\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\t\tcardArr.clear();\n\t\t\t}\n\n\t\t\t// for????????? ??????????????????????????????\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t\t// ???????????????\n\t\t\t\tSystem.out.println(answer.get(cnt));\n\t\t\t}\n\t\t}// ?????????????????????????????????\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tpublic static int playtheGame(List<TestCard1> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\t//???????????¨\n\t\t\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\t\t\t\t\t\tSystem.out.println(\"********** before sort\");\n\t\t\t\t\t\tSystem.out.println(cnt+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(cnt).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt).getRearColor()));\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println();\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<TestCard1>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(TestCard1 numA, TestCard1 numB) {\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//???????????¨\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\t\t\t\tSystem.out.println(\"********** after sort\");\n\t\t\t\tSystem.out.println(cnt+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(cnt).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt).getRearColor()));\n\t\t\t}\n\t\t\tSystem.out.println();\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialNumCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameNumCard(cardArr);\n\n\t\t\t/**\n\t\t\t * @Warnning ???????????????????????´??????\n\t\t\t *\n\t\t\t *\t???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t\t */\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t/**\n\t\t\t\t * ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????????????£?????????\n\t\t\t\t */\n\t\t\t\tif (((String)cardArr.get(cnt).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\t//?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLECARDSET) {//?????§??????????????????\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}// playtheGame????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param card2\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t */\n\t\tpublic static void sameNumCard(List<TestCard1> cardArr) {\n\n\t\t\t//???????????????????????\\????????????????????£?¨?\n\t\t\tTestCard1 tc = new TestCard1();\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < tc.getOnecardset() - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < tc.getOnecardset() - 1; cnt2++) {\n\t\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < tc.getOnecardset(); cnt3++) {\n\n\t\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber()== cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t\t&&cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& ! (cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard1(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard1(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard1(ZERO)));\n\n\n\t\t\t\t\t\t\t\t\t//???????????¨\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"????????????????????????????????????????????????????????????????????????????????????????????????????????????????????´\");\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt1) : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt2) :  \"+((Integer)cardArr.get(cnt2).getFrontnumber())+\" \"+((String)cardArr.get(cnt2).getRearColor()));\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt3) :  \"+((Integer)cardArr.get(cnt3).getFrontnumber())+\" \"+((String)cardArr.get(cnt3).getRearColor()));\n\t\t\t\t\t\t\t\t\tSystem.out.println();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//???????????¨\n\t\t\t\tSystem.out.println(\"????????????????????????????????????????????????????????????????????????????????????????????????????????????????????´\");\n\t\t\t\tSystem.out.println(\"ArrNum : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\t\tSystem.out.println();\n\n\t\t\t}\n\t\t}// sameNumCard????????????????????????\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param card\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t */\n\t\tpublic static void serialNumCard(List<TestCard1> cardArr) {\n\t\t\t//???????????????????????\\????????????????????£?¨?\n\t\t\tTestCard1 tc = new TestCard1();\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < tc.getOnecardset() - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < tc.getOnecardset() - 1; cnt2++) {\n\t\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < tc.getOnecardset(); cnt3++) {\n\n\t\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()-1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()-2) {\n\n\t\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t\t&&cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& ! (cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard1(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard1(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard1(ZERO)));\n\n\t\t\t\t\t\t\t\t\t//???????????¨\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"?????????????????????????????????????????????????????????????????????????????£?¶????????????????????????´\");\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt1) : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt2) :  \"+((Integer)cardArr.get(cnt2).getFrontnumber())+\" \"+((String)cardArr.get(cnt2).getRearColor()));\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt3) :  \"+((Integer)cardArr.get(cnt3).getFrontnumber())+\" \"+((String)cardArr.get(cnt3).getRearColor()));\n\t\t\t\t\t\t\t\t\tSystem.out.println();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//???????????¨\n\t\t\t\tSystem.out.println(\"?????????????????????????????????????????????????????????????????????????????£?¶????????????????????????´\");\n\t\t\t\tSystem.out.println(\"ArrNum : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}// serialNumCard ????????????????????????\n\n\t}// RummyTest????????????\n\n\n\t/**\n\t * ?????????Card\n\t *\n\t * <pre>\n\t * ????????????????????????????????£????????¨???????????????????????????\n\t * ??????????????????????????§???\n\t *\n\t * 1. ?????????????????°??????????¨????????????¶?????????\n\t * 2. ????????§????±???¨??§???????????§????????????\n\t * 3. javadoc???????????????????????¨\n\t * 4. ??\\???????????????????????????????????????????????????\n\t *\n\t * ???????????????????????°\n\t * ??????????????????????????????????§£??????????????????????????????????????????????????£???????????¨\n\t * </pre>\n\t *\n\t * @author ?????????????????§???\n\t *\n\t */\n\tclass TestCard1 {\n\t\t/**\n\t\t * int ??????????????°??????????????\\????????±????????\\??????\n\t\t */\n\t\tprivate  int onecardset;\n\n\t\t/**\n\t\t * int ????????????????????????????????°????????¢????£???¢???\n\t\t * 2???????¬?????????????????????¨??????\n\t\t */\n\t\t//private static final int CARDPAGE = 2;\n\n\t\t/**\n\t\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶??????????????????????????\\????????±????????\\??????\n\t\t */\n\t\tprivate  int frontnumber;\n\n\t\t/**\n\t\t * String ?????????????????????????¨????????????????????????????????????\\????????±????????\\??????\n\t\t */\n\t\tprivate  String rearColor;\n\n\t\t/**\n\t\t *private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @param onecardset ????????????????????°???????´?\n\t\t */\n\t\tpublic  void setOnecardset(int onecardset) {\n\t\t\tthis.onecardset = onecardset;\n\t\t}\n\n\t\t/**\n\t\t * private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @return???????´??????????????????????\n\t\t */\n\t\tpublic  int getOnecardset() {\n\t\t\treturn onecardset;\n\t\t}\n\n\t\t/**\n\t\t *private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @param frontnumber int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t\t */\n\t\tpublic  void setFrontnumber(int frontnumber) {\n\t\t\tthis.frontnumber = frontnumber;\n\t\t}\n\n\t\t/**\n\t\t *private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @param frontcolorTC int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t\t */\n\t\tpublic  void setFrontnumber(TestCard1 frontcolorTC) {\n\t\t\tfrontnumber = frontcolorTC.frontnumber;\n\t\t}\n\n\t\t/**\n\t\t *private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @return???int?????§?????\\?????¨?????????????????°??????????????????\n\t\t */\n\t\tpublic  int getFrontnumber() {\n\t\t\treturn frontnumber;\n\t\t}\n\n\t\t/**\n\t\t *private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @param rearColorTC String?????§?????\\?????¨?????????????????????????????????\n\t\t */\n\t\tpublic  void setRearColor(TestCard1 rearColorTC) {\n\t\t\tthis.rearColor = rearColorTC.rearColor;\n\t\t}\n\t\t/**\n\t\t *private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @param rearColor String?????§?????\\?????¨?????????????????????????????????\n\t\t */\n\t\tpublic  void setRearColor(String rearColor) {\n\t\t\tthis.rearColor = rearColor;\n\t\t}\n\n\t\t/**\n\t\t *private????£?????????\\????????????????????????????????????\n\t\t *\n\t\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t\t */\n\t\tpublic  String getRearColor() {\n\t\t\treturn rearColor;\n\t\t}\n\n\t\tpublic TestCard1() {\n\t\t\t// TODO ?????????????????????????????????????????????????????????\n\t\t}\n\n\t\t/**\n\t\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t\t *\n\t\t * @param ZERO ????????° ZERO\n\t\t */\n\t\tpublic TestCard1(String ZERO) {\n\t\t\trearColor = ZERO;\n\t\t}\n\n\t\t/**\n\t\t * ???????????????????????°??????????????´???, ???????????¨?????¨\n\t\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t\t *\n\t\t * @param tmp???????????° ADDRESSPLUSSZERO???????????¶????????????int???????????±???\n\t\t */\n\t\tpublic TestCard1(TestCard1 tmp) {\n\t\t\tfrontnumber = tmp.frontnumber;\n\t\t}\n\n\t\t/**\n\t\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t\t *\n\t\t * @param transNum\n\t\t *            ???????????????????????????????????°???\n\t\t * @param transColor\n\t\t *            ????????????????????????????????????\n\t\t */\n\t\tpublic TestCard1(int transNum, String transColor) {\n\t\t\t// ?????¬???int?????????????????????int???????????????\n\t\t\tfrontnumber = transNum;\n\t\t\t// ?????¬???String?????????????????????String???????????????\n\t\t\trearColor = transColor;\n\t\t}\n\t}// ??????????????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\t// game set\n\t\tint gameset = sc.nextInt();\n\n\t\tint[][] cardset = new int[UTRummy.CARDPAGE][UTRummy.ONECARDSET];\n\n\t\t// input info\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\t// number info input\n\t\t\t\t\t\tcardset[j][k] = sc.nextInt();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// color info\n\t\t\t\t\t\tString tmpcolor = sc.next();\n\t\t\t\t\t\tint color = 0;\n\t\t\t\t\t\tif (tmpcolor.equals(\"R\")) {\n\t\t\t\t\t\t\tcolor = UTRummy.RED;\n\t\t\t\t\t\t} else if (tmpcolor.equals(\"G\")) {\n\t\t\t\t\t\t\tcolor = UTRummy.GREEN;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolor = UTRummy.BLUE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// color info input\n\t\t\t\t\t\tcardset[j][k] = color;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tUTRummy utr = new UTRummy();\n\t\t\t// getter-setter call\n\t\t\tutr.setCardset(cardset);\n\t\t\tcardset = utr.getCardset();\n\n\t\t\t// game start\n\t\t\tint cnt = 0;\n\t\t\tcnt = utr.playtheGame(cardset); // ?????????\n\t\t\t// game result\n\t\t\tif (3 <= cnt) {\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass UTRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// color\n\tstatic final int RED = 0;\n\tstatic final int GREEN = 1;\n\tstatic final int BLUE = 2;\n\n\tint[][] Cardset = new int[CARDPAGE][ONECARDSET];\n\n\t// [0][i] : num, [1][j] : color\n\tpublic UTRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn Cardset;\n\t}\n\t//????????????????????????????????\\??????\n\tpublic void setCardset(int[][] cardset) {\n\t\tthis.Cardset = settingcardplay(cardset);\n\t}\n\t//\n\tpublic int[][] settingcardplay(int[][] card) {//Error point\n\n\t\t/* ex:\n\t\t * 1 2 3 3 4 5 7 7 7\n\t\t *\n\t\t * R R R R R R G G G\n\t\t */\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\t\t\t\tif (card[1][j] > card[1][j + 1]) { // color???????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {// color&num???????????????\n\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\t/* ex:\n\t\t * 1 2 3 3 4 5 7 7 7\n\t\t *\n\t\t * R R R R R R G G G\n\t\t */\n\t\tint cnt = 0;\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {// 3??????????????????????????°\n\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {// ??£????????????????¢????\n\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) { // 3??????????????????????????°\n\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j]-1 && cardset[0][i] == cardset[0][k]-2) {//?????????????????????????¢????\n\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// [0][i] : num, [1][j] : color\n\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tprivate static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t//????????????????????????????????\\????????????????????£?¨?\n\t\tCardMethod cm = new CardMethod();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tcm.inputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cm.utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ??????????????????????????????????????????\n\t * @author ??????\n\t */\n\tpublic static class CardMethod {\n\n\t\t/**\n\t\t *\n\t\t *\n\t\t * @param cardArr\n\t\t * @param transNum\n\t\t * @param transColor\n\t\t */\n\t\tprivate static void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t/**\n\t\t\t * ?????¶??? ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t\t *\n\t\t\t * ?????????????????¨?????¨?????????????????\\??? ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t *\n\t\t\t */\n\t\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\t\t\t// ???????????????????????£???\n\t\t\tswitch (swi) {\n\t\t\tcase \"LongNum\":\n\t\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tcase \"LongColor\":\n\t\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"??¨????????????\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\t// ??°???, ?????????????????????\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameCard(cardArr);\n\n\t\t\treturn  result = verificationCard(result, cardArr);\n\n\t\t}// utRummy????????????????????????\n\n\t\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\t/**\n\t\t\t * @Warnning ???????????????????????´??????\n\t\t\t *\n\t\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t\t */\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t/**\n\t\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t\t */\n\t\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameCard????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialCard????????????????????????\n\n\t}//???????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nimport static java.util.Arrays.sort;\n\npublic class Main {\n    public  static void  main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n\n        for(int i = 0; i< t; i++){\n            int[] num = new int[9];\n            String[] col = new String[9];\n\n            for(int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for(int j = 0; j < 9; j++)\n                col[j] = sc.next();\n\n            int countR = 0;\n            int countG = 0;\n            int countB = 0;\n\n            int[] numred = null, numgrn = null, numblue = null;\n\n            for(int j = 0; j < 9; j++){\n                if(col[j].equals(\"R\"))\n                    countR++;\n                else if(col[j].equals(\"G\"))\n                    countG++;\n                else\n                    countB++;\n            }\n\n            if(countR % 3 !=0 && countG % 3 != 0 && countB % 3 != 0){\n                System.out.println(\"0\");\n                continue;\n            }\n\n            if(countR != 0){\n                numred = new int[countR];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"R\"))\n                        numred[indexnum++] = num[j];\n                }\n                sort(numred);\n            }\n\n            if(countG != 0){\n                numgrn = new int[countG];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"G\"))\n                        numgrn[indexnum++] = num[j];\n                }\n                sort(numgrn);\n            }\n\n            if(countB != 0){\n                numblue = new int[countB];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"B\"))\n                        numblue[indexnum++] = num[j];\n                }\n                sort(numblue);\n            }\n\n            if(countR == 3){\n                if((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 6){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 9){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5] && numred[6] == numred[7] && numred[7] == numred[8]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1 && numred[6] + 1 == numred[7] && numred[7] == numred[8] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            \n            if(countG == 3){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 6){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 9){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5] && numgrn[6] == numgrn[7] && numgrn[7] == numgrn[8]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1 && numgrn[6] + 1 == numgrn[7] && numgrn[7] == numgrn[8] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n\n            if(countB == 3){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 6){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 9){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5] && numblue[6] == numblue[7] && numblue[7] == numblue[8]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1 && numblue[6] + 1 == numblue[7] && numblue[7] == numblue[8] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            System.out.println(1);\n        }\n        sc.close();\n\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tenum Color {\n\t\tR, G, B;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint inputCount = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < inputCount; i++) {\n\t\t\tArrayList<Card> hand = inputHand(sc.nextLine(), sc.nextLine());\n\n\t\t\tif (VictoryDecision(hand)) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t\tsc.close();\n\t}\n\n\tprivate static ArrayList<Card> inputHand(String numLine, String colorLine) {\n\t\tString[] colorStr = colorLine.split(\"[\\\\s]+\");\n\t\tString[] numStr = numLine.split(\"[\\\\s]+\");\n\t\tArrayList<Card> hand = new ArrayList<Card>();\n\t\tfor (int i = 0; i < numStr.length; i++) {\n\t\t\thand.add(new Card(Integer.parseInt(numStr[i]), Color.valueOf(colorStr[i])));\n\t\t}\n\t\treturn hand;\n\t}\n\n\tstatic boolean VictoryDecision(ArrayList<Card> hand) {\n\t\tArrayList<Integer> r = new ArrayList<Integer>();\n\t\tArrayList<Integer> g = new ArrayList<Integer>();\n\t\tArrayList<Integer> b = new ArrayList<Integer>();\n\t\tfor (Card c : hand) {\n\t\t\tswitch (c.color) {\n\t\t\tcase R:\n\t\t\t\tr.add(c.num);\n\t\t\t\tbreak;\n\t\t\tcase G:\n\t\t\t\tg.add(c.num);\n\t\t\t\tbreak;\n\t\t\tcase B:\n\t\t\t\tb.add(c.num);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (3 == PairSearch(r) + PairSearch(g) + PairSearch(b)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tstatic int PairSearch(ArrayList<Integer> list) {\n\t\tint pairCount = 0;\n\t\twhile (list.size() >= 3) {\n\t\t\tCollections.sort(list);\n\n\t\t\tint num = list.get(0);\n\t\t\tint secondIndex = Arrays.binarySearch(list.toArray(), num + 1);\n\t\t\tint thirdIndex = Arrays.binarySearch(list.toArray(), num + 2);\n\t\t\tif (secondIndex > 0 && thirdIndex > 0) {\n\t\t\t\tpairCount++;\n\t\t\t\tlist.remove(thirdIndex);\n\t\t\t\tlist.remove(secondIndex);\n\t\t\t\tlist.remove(0);\n\t\t\t} else if (num == list.get(1) && num == list.get(2)) {\n\t\t\t\tpairCount++;\n\t\t\t\tlist.remove(2);\n\t\t\t\tlist.remove(1);\n\t\t\t\tlist.remove(0);\n\t\t\t} else {\n\t\t\t\tlist.remove(0);\n\t\t\t}\n\t\t}\n\t\treturn pairCount;\n\n\t}\n\n\tstatic class Card {\n\t\tint num;\n\t\tColor color;\n\n\t\tCard(int num, Color color) {\n\t\t\tthis.num = num;\n\t\t\tthis.color = color;\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main {\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tint num[] = new int[9];\n\t\tint color[] = new int[9];\n\t\tint red_num = 0;\n\t\tint green_num = 0;\n\t\tint blue_num = 0;\n\t\tfor(int i = 0; i < N; i++)\n\t\t{\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tString a = sc.next();\n\t\t\t\tif(a.compareTo(\"R\") == 0)\n\t\t\t\t{\n\t\t\t\t\tcolor[j] = 1;\n\t\t\t\t\tred_num += 1;\n\t\t\t\t}\n\t\t\t\tif(a.compareTo(\"G\") == 0)\n\t\t\t\t{\n\t\t\t\t\tcolor[j] = 2;\n\t\t\t\t\tgreen_num += 1;\n\t\t\t\t}\n\t\t\t\tif(a.compareTo(\"B\") == 0)\n\t\t\t\t{\n\t\t\t\t\tcolor[j] = 3;\n\t\t\t\t\tblue_num += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint red[] = new int[red_num];\n\t\t\tint green[] = new int[green_num];\n\t\t\tint blue[] = new int[blue_num];\n\t\t\tred_num = 0;\n\t\t\tgreen_num = 0;\n\t\t\tblue_num = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tswitch(color[j])\n\t\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tred[red_num] = num[j];\n\t\t\t\t\tred_num += 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tgreen[green_num] = num[j];\n\t\t\t\t\tgreen_num += 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tblue[blue_num] = num[j];\n\t\t\t\t\tblue_num += 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(red);\n\t\t\tArrays.sort(blue);\n\t\t\tArrays.sort(green);\n\t\t\tint count = 0;\n\t\t\tfor(int j = 1; j <= 9; j++)\n\t\t\t{\n\t\t\t\tif(array_count(red,j) == true) count+= 1;\n\t\t\t\tif(array_count(green,j) == true) count+= 1;\n\t\t\t\tif(array_count(blue,j) == true) count+= 1;\n\t\t\t}\n\t\t\tcount = count +array_search(red) + array_search(blue) + array_search(green);\n\t\t\tif(count == 3)System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\t}\n\t\n\tstatic boolean array_count(int[] a,int num)\n\t{\n\t\tint count = 0;\n\t\tfor(int i = 0; i < a.length;i++)\n\t\t{\n\t\t\tif(a[i] == num) count += 1;\n\t\t}\n\t\treturn (count == 3);\t\t\n\t}\n\tstatic boolean search_num(int[] a,int num)\n\t{\n\t\tfor(int i = 0;i < a.length; i++)\n\t\t{\n\t\t\tif(a[i] == num) return true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tstatic int array_search(int[] a)\n\t{\n\t\tif(a.length != 0) \n\t\t{\n\t\t\tint count = 0;\n\t\t\tint number[] = new int[9];\n\t\t\tfor(int i = 0;i < 9; i++)\n\t\t\t{\n\t\t\t\tnumber[i] = 0;\n\t\t\t}\n\t\t\tfor(int i = 0; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif(a[i] != 0)number[(a[i] - 1)] += 1;\n\t\t\t}\n\t\tfor(int i = 0; i <= 6;i++)\n\t\t{\n\t\t\tif(number[i] > 0 && number[i+1] > 0 && number[i+2] > 0)\n\t\t\t{\n\t\t\t\tcount += 1;\n\t\t\t\tnumber[i] -=1;\n\t\t\t\tnumber[i+1] -=1;\n\t\t\t\tnumber[i+2] -=1;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t\t}\n\t\telse return 0;\n\t\t\n\t}\n\t\n\t\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLECARDSET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<CardTC> cardArr = new ArrayList<CardTC>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// ?????????????????????????????????\n\n\tprivate static int utRummy(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????????????£?????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLECARDSET) {// ?????§??????????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}// utRummy????????????\n\n\tprivate static void sameCard(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}// sameCard????????????\n\n\tprivate static void serialCard(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\n\t\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????\n}// DebugRu????????????\n\nclass CardTC {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶??????????????????????????\\????????±????????\\??????\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨????????????????????????????????????\\????????±????????\\??????\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic CardTC() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO ????????° ZERO\n\t */\n\tpublic CardTC(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\n\tpublic CardTC(int num, String color) {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n}// CardTC????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\t// 数字の最大を探す\n\tpublic static int max(int a[], int b[], int n) {\n\t\tint i;\n\t\tint max = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[max]] <= a[b[i]]) {\n\t\t\t\tmax = i;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n\n\t// 数字の最小を探す\n\tpublic static int min(int a[], int b[], int n) {\n\t\tint i;\n\t\tint min = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[min]] >= a[b[i]]) {\n\t\t\t\tmin = i;\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}\n\n\t// 三つ存在する数字がどれだけあるかを数える\n\tpublic static int same(int count[], int num[], int b[], int n) {\n\t\tint count2 = 0;\n\t\tint i;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (count[num[b[i]]] == 3) {\n\t\t\t\t++count2;\n\t\t\t}\n\t\t}\n\t\tcount2 /= 3;\n\n\t\treturn count2;\n\t}\n\n\t// 連続する三つの数字がどれだけ存在するかを数える\n\tpublic static int[] continuous(int count[], int num[], int b[], int n) {\n\t\tint count2[];\n\t\tint i, j = 2;\n\t\tint min, max;\n\n\t\tcount2 = new int[5];\n\t\tfor (i = 0; i < 5; ++i) {\n\t\t\tcount2[i] = 0;\n\t\t}\n\n\t\t// 数字の最大、最小を探す\n\t\tmax = max(num, b, n);\n\t\tmin = min(num, b, n);\n\n\t\tfor (i = num[b[min]] + 1; i < num[b[max]]; ++i) {\n\t\t\tif (count[i] > 0) {\n\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0) {\n\t\t\t\t\t++count2[0];\n\t\t\t\t\t--count[i + 1];\n\t\t\t\t\t--count[i];\n\t\t\t\t\t--count[i - 1];\n\t\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0 && count[i] > 0) {\n\t\t\t\t\t\t--i;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tcount2[j] = i;\n\t\t\t\t\t++j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcount2[1] = j;\n\n\t\treturn count2;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tint count3[];\n\t\tint R[], G[], B[];// position of R,B,G\n\t\tint count1[], count2, /* counting number */ max, min;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new int[9];\n\t\tB = new int[9];\n\t\tG = new int[9];\n\t\tcount1 = new int[10];\n\t\tcount3 = new int[4];\n\t\tint i, j, k, m, n, l;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tk = 0;\n\t\t\tm = 0;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[k] = j;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[m] = j;\n\t\t\t\t\t\t++m;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[n] = j;\n\t\t\t\t\t\t++n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, R, k);\n\t\t\t\tmin = min(num, R, k);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < k; ++l) {\n\t\t\t\t\t++count1[num[R[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[R[max]] - num[R[min]] > 1) {\n\t\t\t\t\tcount3 = continuous(count1, num, R, k);\n\t\t\t\t\tcount2 += count3[0];\n\t\t\t\t\tfor (l = 2; l < count3[1]; ++l) {\n\t\t\t\t\t\tcount1[count3[l] - 1] -= count3[0];\n\t\t\t\t\t\tcount1[count3[l]] -= count3[0];\n\t\t\t\t\t\tcount1[count3[l] + 1] -= count3[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\tcount2 += same(count1, num, R, k);\n\n\t\t\t\t// B\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, B, m);\n\t\t\t\tmin = min(num, B, m);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < m; ++l) {\n\t\t\t\t\t++count1[num[B[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[B[max]] - num[B[min]] > 1) {\n\t\t\t\t\tcount3 = continuous(count1, num, B, m);\n\t\t\t\t\tcount2 += count3[0];\n\t\t\t\t\tfor (l = 2; l < count3[1]; ++l) {\n\t\t\t\t\t\tcount1[count3[l] - 1] -= count3[0];\n\t\t\t\t\t\tcount1[count3[l]] -= count3[0];\n\t\t\t\t\t\tcount1[count3[l] + 1] -= count3[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\tcount2 += same(count1, num, B, m);\n\n\t\t\t\t// G\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, G, n);\n\t\t\t\tmin = min(num, G, n);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < n; ++l) {\n\t\t\t\t\t++count1[num[G[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[G[max]] - num[G[min]] > 1) {\n\t\t\t\t\tcount3 = continuous(count1, num, G, n);\n\t\t\t\t\tcount2 += count3[0];\n\t\t\t\t\tfor (l = 2; l < count3[1]; ++l) {\n\t\t\t\t\t\tcount1[count3[l] - 1] -= count3[0];\n\t\t\t\t\t\tcount1[count3[l]] -= count3[0];\n\t\t\t\t\t\tcount1[count3[l] + 1] -= count3[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\tcount2 += same(count1, num, G, n);\n\n\t\t\t\tif (count2 == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.sql.Time;\nimport java.util.*;\nimport java.util.stream.DoubleStream;\n\npublic class Main {\n\n    private static class Pair {\n        char a;\n        int b;\n\n        Pair(char a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        Pair(Pair p) {\n            a = p.a;\n            b = p.b;\n        }\n\n        Pair() {\n        }\n    }\n\n    static Scanner sc;\n\n    private static boolean check(ArrayList<ArrayList<Pair>> split) {\n        for (int i = 0; i < 3; ++i) {\n            ArrayList<Pair> s = split.get(i);\n            char c = s.get(0).a;\n\n            for (int j = 1; j < 3; ++j) {\n                if (c != s.get(j).a) {\n                    return false;\n                }\n            }\n\n            int sum = s.get(0).b + s.get(1).b + s.get(2).b;\n\n            for (int j = 0; j < 3; ++j) {\n                int diff = s.get(j).b * 3 - sum;\n                if (diff != 0 && diff != 3 && diff != -3) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    private static boolean create(int idx, Pair[] arr, ArrayList<ArrayList<Pair>> split) {\n        if (idx == 9) {\n            return check(split);\n        }\n\n        for (int i = 0; i < 3; ++i) {\n            ArrayList<Pair> s = split.get(i);\n            if (s.size() == 3)\n                continue;\n            s.add(arr[idx]);\n\n            if (create(idx + 1, arr, split))\n                return true;\n\n            s.remove(s.size() - 1);\n        }\n\n        return false;\n    }\n\n    public static void main(String[] args) {\n        sc = new Scanner(System.in);\n\n        int n = sc.nextInt();\n        for (int l = 0; l < n; ++l) {\n            Pair[] arr = new Pair[9];\n\n            for (int i = 0; i < 9; ++i) {\n                arr[i] = new Pair('a', sc.nextInt());\n            }\n\n            for (int i = 0; i < 9; ++i) {\n                arr[i].a = sc.next().charAt(0);\n            }\n\n            ArrayList<ArrayList<Pair>> a = new ArrayList<ArrayList<Pair>>();\n            for (int i = 0; i < 3; ++i) {\n                a.add(i, new ArrayList<Pair>(0));\n            }\n\n            System.out.println(create(0, arr, a) ? 1 : 0);\n\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "public class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir = 0;\n\t\tint ig = 0;\n\t\tint ib = 0;\n\t\tint count = 0;\n\t\tchar c;\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += judge(nr, ir) + judge(ng, ig) + judge(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int judge(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t//????????????????????°?????\\???\n\t\tint set = sc.nextInt();\n\t\tint[] num = new int[9];\n\t\tint[] color = new int[9];\n\t\tfor (int setCount = 0; setCount < set; setCount++) {\n\t\t\tint RCount = 0;\n\t\t\tint GCount = 0;\n\t\t\tint[] used = new int[9];\n\t\t\tint trueSet = 0;\n\t\t\t//??\\???\n\t\t\tfor (int count = 0; count < 9; count++ ) {\n\t\t\t\tnum[count] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t\tString cl = sc.next();\n\t\t\t\tif (cl.equals(\"R\") ) {\n\t\t\t\t\tcolor[count] = 0;\n\t\t\t\t\tRCount++;\n\t\t\t\t} else if (cl.equals(\"G\") ) {\n\t\t\t\t\tcolor[count] = 1;\n\t\t\t\t\tGCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcolor[count] = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//??????1\n\t\t\tif (RCount % 3 == 0 && GCount % 3 == 0) {\n\t\t\t\t//?????????????????????????????????\n\t\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\t\tfor (int j = i+1; j < 9; j++) {\n\t\t\t\t\t\tif (num[i] > num[j]) {\n\t\t\t\t\t\t\tint numTaihi = num[i];\n\t\t\t\t\t\t\tnum[i] = num[j];\n\t\t\t\t\t\t\tnum[j] = numTaihi;\n\t\t\t\t\t\t\tint colorTaihi = color[i];\n\t\t\t\t\t\t\tcolor[i] = color[j];\n\t\t\t\t\t\t\tcolor[j] = colorTaihi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//????????????????????????????????????\n\t\t\t\tfor (int xMaime = 0; xMaime < 7; xMaime++) {\n\t\t\t\t\tif (used[xMaime] == 0) {\n\t\t\t\t\t\tfor (int yMaime = xMaime + 1; yMaime < 8; yMaime++) {\n\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(used[yMaime] == 0) {\n\t\t\t\t\t\t\t\tfor (int zMaime = yMaime + 1; zMaime < 9; zMaime++) {\n\t\t\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (used[zMaime] == 0) {\n\t\t\t\t\t\t\t\t\t\tif (color[xMaime] == color[yMaime] && color[xMaime] == color[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] == num[yMaime] && num[xMaime] == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t} else if (num[xMaime]+1 == num[yMaime] && num[yMaime]+1 == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//??????\n\t\t\t\tif (trueSet == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) + 1;\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();;\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\t num4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t// memo\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ((color.equals(\"011\"))||(color.equals(\"122\"))||(color.equals(\"022\"))) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ((color.equals(\"001\"))||(color.equals(\"112\"))||(color.equals(\"002\"))) {\n\t\t\t\t\tif ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ((color.equals(\"000\")) || (color.equals(\"111\")) || (color.equals(\"222\"))) {\n\t\t\t\t\tif((cardNo[0]==cardNo[1]) && ((cardNo[1]+1)==cardNo[2]) && (cardNo[2]==cardNo[3]) && (cardNo[3]==cardNo[4]) && ((cardNo[4]+1)==cardNo[5]) && (cardNo[5]==cardNo[6]) && (cardNo[6]==cardNo[7]) && ((cardNo[7]+1)==cardNo[8])) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\telse if(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\n\t\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"color : \" + color + \"  check1 :\" + check + \" , check2 :\" + check2);\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif((check==3) || (check2==3)) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t* @return _number\n\t*/\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t* @param _number ??????????????? _number\n\t*/\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t* @return _colorNum\n\t*/\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t* @param _colorNum ??????????????? _colorNum\n\t*/\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t/**\n\t* ?????????????????????\n\t* @param color ????????¨????????????\n\t* @param num ???????????????\n\t*/\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint c = 0;\n\t\twhile(true){\n\t\t\tint[] num = new int[9];\n\t\t\tint[] colour = new int[9];\n\t\t\tint set = 0;\n\t\t\tint wl = 0;\n\t\t\tfor(int i = 0;i < 9;i++){\n\t\t\t\tnum[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int i = 0;i < 9;i++){\n\t\t\t\tcolour[i] = sc.next().charAt(0);\n\t\t\t}\n\t\t\t/*for(int i = 0;i < num.length-2;i++){\n\t\t\t\tif(num[i] == 10) continue;\n\t\t\t\tint x = num[i];\n\t\t\t\tint y = colour[i];\n\t\t\t\tfor(int j = i+1;j < num.length-1;i++){\n\t\t\t\t\tif(num[j] == x && colour[j] == y){\n\t\t\t\t\t\tfor(int k = j+1;k < num.length;k++){\n\t\t\t\t\t\t\tif(num[k] == x && colour[k] == y){\n\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\tnum[j] = 10;\n\t\t\t\t\t\t\t\tnum[k] = 10;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tfor(int j = i+1;j < num.length-1;i++){\n\t\t\t\t\tif(num[j] == x+1 && colour[j] == y){\n\t\t\t\t\t\tfor(int k = j+1;k < num.length;i++){\n\t\t\t\t\t\t\tif(num[j] == x+2 && colour[j] == y){\n\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\tnum[j] = 10;\n\t\t\t\t\t\t\t\tnum[k] = 10;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tif(set == 3) wl = 1;\n\t\t\tSystem.out.println(wl);\n\t\t\tc++;\n\t\t\tif(c == n) break;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(\"\")\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(\"\")\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(\"\")) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(\"\")));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(\"\")));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(\"\")));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint count = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\t/**\n\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == \"\") {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == 9) {\n\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\tresult = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tint R[], G[], B[];// position of R,B,G\n\t\tint count1[], count2, /* counting number */ max, min;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new int[9];\n\t\tB = new int[9];\n\t\tG = new int[9];\n\t\tcount1 = new int[10];\n\t\tint i, j, k, m, n, l;\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tk = 0;\n\t\t\tm = 0;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[k] = j;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[m] = j;\n\t\t\t\t\t\t++m;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[n] = j;\n\t\t\t\t\t\t++n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i % 2 == 1) {\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < k; ++l) {\n\t\t\t\t\t++count1[num[R[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[R[l]]] == 3) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t\tcount1[num[R[l]]] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[R[max]] < num[R[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[R[min]] > num[R[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[R[max]] - num[R[min]] > 1) {\n\t\t\t\t\tfor (l = num[R[min]] + 1; l <= num[R[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < m; ++l) {\n\t\t\t\t\t++count1[num[B[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[B[l]]] == 3) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t\tcount1[num[B[l]]] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[B[max]] < num[B[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[B[min]] > num[B[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (num[B[max]] - num[B[min]] > 1) {\n\t\t\t\t\tfor (l = num[B[min]] + 1; l <= num[B[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < n; ++l) {\n\t\t\t\t\t++count1[num[G[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[G[l]]] % 3 == 0) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[G[max]] < num[G[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[G[min]] > num[G[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (num[G[max]] - num[G[min]] > 1) {\n\t\t\t\t\tfor (l = num[G[min]] + 1; l <= num[G[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (count2 == 3) {\n\t\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint t = in.nextInt();\n\t\tint[] deck = new int[9];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint isOK = 1;\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tdeck[j] = in.nextInt();\n\t\t\t}\n\t\t\tint colorSum = 0;\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tString color = in.next();\n\t\t\t\tdeck[j] += (\"R\".equals(color)) ? 0x100\n\t\t\t\t\t\t: (\"G\".equals(color)) ? 0x10000 : 0x1000000;\n\t\t\t\tcolorSum += deck[j];\n\t\t\t}\n\t\t\tcolorSum /= 0x100;\n\t\t\tint xFF = 0xFF;\n\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\tif ((colorSum & xFF) % 3 != 0) {\n\t\t\t\t\tisOK = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\txFF <<= 8;\n\t\t\t}\n\t\t\tif (isOK == 1) {\n\t\t\t\tArrays.sort(deck);\n\t\t\t\tint j = 0;\n\t\t\t\twhile (j < 9) {\n\t\t\t\t\tif (deck[j] + 2 < deck[j + 2]) {\n\t\t\t\t\t\tisOK = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((deck[j] == deck[j + 1] && deck[j + 1] == deck[j + 2])\n\t\t\t\t\t\t\t|| (deck[j] + 1 == deck[j + 1] && deck[j] + 2 == deck[j + 2])) {\n\t\t\t\t\t\tj += 3;\n\t\t\t\t\t} else if (j <= 3 && deck[j] + 1 == deck[j + 2]\n\t\t\t\t\t\t\t&& deck[j] + 2 == deck[j + 4]\n\t\t\t\t\t\t\t&& deck[j + 1] + 1 == deck[j + 3]\n\t\t\t\t\t\t\t&& deck[j + 1] + 2 == deck[j + 5]) {\n\t\t\t\t\t\tj += 6;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisOK = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(isOK);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str = scan.next();\n\t\t\t\tchar[] inpc = str.toCharArray();\n\t\t\t\tC[j*2][i] = inpc[0];\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea=0;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tCardRummy cr = new CardRummy(br.readLine(), br.readLine());\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t} // ????????????????????????????????????\n}// ?????????NewRummy????????????\n\n/**\n * ?????????CardRummy\n */\npublic class CardRummy {\n\n\t/**\n\t * ?????????????????°??¶???\n\t */\n\tprivate static final int ONECARDSET = 9;\n\n\t/**\n\t * ?????????R cardR???cardG???cardB??????????????????????????????\n\t */\n\tprivate int[] cardR = new int[ONECARDSET];\n\n\t/**\n\t * ?????????G cardR???cardG???cardB??????????????????????????????\n\t */\n\tprivate int[] cardG = new int[ONECARDSET];\n\n\t/**\n\t * ?????????B cardR???cardG???cardB??????????????????????????????\n\t */\n\tprivate int[] cardB = new int[ONECARDSET];\n\n\t/**\n\t * ?????°??????????????? ?????£???????????????????´???????\n\t *\n\t * @param tmpNum\n\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t * @param tmpColor\n\t *            ???????????????????????? ??????R R R R R R G G G\n\t */\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\t// ?????°???????§£ ??°??????????´?\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\t// ?????°???????§£ ??????????´?\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t// for????????? ????§£??????????????????????????????\n\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t/**\n\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t */\n\t\t\t// ????§£?????????????????????\n\t\t\tif (transColor[cnt].equals(\"R\"))\n\t\t\t\t// ???????????????????????°????????????\n\t\t\t\tcardR[cnt] = Integer.parseInt(transNum[cnt]);\n\t\t\t// ????§£?????????????????????\n\t\t\telse if (transColor[cnt].equals(\"G\"))\n\t\t\t\t// ???????????????????????°????????????\n\t\t\t\tcardG[cnt] = Integer.parseInt(transNum[cnt]);\n\t\t\t// ????§£?????????????????????\n\t\t\telse if (transColor[cnt].equals(\"B\"))\n\t\t\t\t// ???????????????????????°????????????\n\t\t\t\tcardB[cnt] = Integer.parseInt(transNum[cnt]);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\n\tpublic int playtheGame() {// ?????£????????????\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ?????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// 3??£?¶??????°??????????????°?¶????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ????????°??????3???????????°?¶????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ?????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// 1~9?????°?????????????????????\n\t\t// ????????????????????°??????0????????¨??¨0\n\t\tif (cardR[ONECARDSET - 1] == 0 && cardG[ONECARDSET - 1] == 0 && cardB[ONECARDSET - 1] == 0)\n\n\t\t\t// ?????¶??????????????°???????????????\n\t\t\tresult = 1;\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\n\t}// playtheGame????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°?¶???????????????????\n\t *\n\t * @return ?¶?????????¨???????????£????????????\n\t */\n\tpublic static int[] sameNumCard(int[] card) {// ?????£????????????\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t * @param ONECARDSET\n\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t */\n\n\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\tif (card[cnt1] == card[cnt2] && card[cnt2] == card[cnt3]) {\n\t\t\t\t\t\t// (1)????????¶??????????????°????????°??????????????????\n\t\t\t\t\t\tif (card[cnt1] != 0 && card[cnt2] != 0 && card[cnt3] != 0) {\n\n\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨???????????¶????\n\t\t\t\t\t\t\tcard[cnt1] = 0;\n\t\t\t\t\t\t\tcard[cnt2] = 0;\n\t\t\t\t\t\t\tcard[cnt3] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\treturn card;\n\t}// sameNumCard????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°?¶???????????????????\n\t *\n\t * @return ?¶?????????¨???????????£????????????\n\t */\n\n\tpublic static int[] serialNumCard(int[] card) {// ?????£????????????\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t * @param ONECARDSET\n\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t */\n\n\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t// (1)3??£?¶??????°?????????????????????\n\t\t\t\t\tif (card[cnt1] == card[cnt2] - 1 && card[cnt1] == card[cnt3] - 2) {\n\t\t\t\t\t\t// (1)????????¶??????????????°????????°??????????????????\n\t\t\t\t\t\tif (card[cnt1] != 0 && card[cnt2] != 0 && card[cnt3] != 0) {\n\n\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨???????????¶????\n\t\t\t\t\t\t\tcard[cnt1] = 0;\n\t\t\t\t\t\t\tcard[cnt2] = 0;\n\t\t\t\t\t\t\tcard[cnt3] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\treturn card;\n\t}// serialNumCard ????????????????????????\n}// ?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\n//==============================================================================\n\nclass Main{\n    \n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int[][] tehuda = new int[2][9];\n        \n        int T = sc.nextInt();//???????????????????????°\n        \n        for( int i = 0 ; i < T ; i++ ){//???????????????????????°?????????\n            for( int j = 0 ; j < 2 ; j++ ){\n                for( int k = 0 ; k < 9 ; k++ ){\n                    \n                    if( j == 0 ){\n                        tehuda[i][j] = sc.nextInt();\n                    }else{\n                        char color = sc.next().charAt(0);\n                        int intColor = 0;\n                        if( color == 'R'){//R???????????¨??????\n                            intColor = 11;\n                        }else if( color == 'G'){//G???????????¨??????\n                            intColor = 12;\n                        }else if( color == 'B'){//B???????????¨??????\n                            intColor = 13;\n                        }\n                        \n                        tehuda[i][j] = intColor;\n                    }\n                }\n            }\n        \n        \n            Rummy insRummy = new Rummy();//Rummy???????????????\n        \n            insRummy.setCard(tehuda);//??????????????°??¨??????Rummy????????????setCard???\n            \n            insRummy.sort();//Rummy????????????sort??????????????????\n            \n            tehuda = insRummy.getCard();//sort??????????????????????????????\n            \n            int count = 0;//?????????????????????\n            count = insRummy.judge(tehuda);\n            \n            if( count >= 3 ){\n                System.out.println(1);\n \n            }else{\n                System.out.println(0);\n            }\n        }\n    }\n}\n\n//==============================================================================\n\nclass Rummy {\n    \n    private int[][] tehuda = new int[2][9];\n    \n    Rummy(){\n        \n    }\n\n    public int judge(int[][] tehuda) {\n        \n    \tint count = 0;\n        \n        for(int i= 0; i < 7; i++){//??£????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n               \n                for(int k = j+1; k < 9; k++){\n                    \n                   if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                        \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] -1 && tehuda[0][i] == tehuda[0][k] -2){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n\n                }\n            }\n        }\n        \n       \n        for(int i= 0; i < 7; i++){//?????????????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n                \n                for(int k = j+1; k < 9; k++){\n                    \n                    if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                       \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] && tehuda[0][i] == tehuda[0][k]){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    \n    public void sort() {\n        \n    \tfor(int i = 0; i < 8; i++){//??????????????????\n            for(int j = 0; j < 8-i; j++ ){\n\n                if(tehuda[1][j] > tehuda[1][j+1]){\n                    int temp = tehuda[1][j];\n                    tehuda[1][j] = tehuda[1][j+1];\n                    tehuda[1][j+1] = temp;\n                    \n                    int temp2 = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp2;\n                }\n            }\n        }\n        \n        for(int i = 0; i < 8; i++){//??????????????????\n\n            for(int j = 0; j < 8-i; j++){\n                \n                if(tehuda[1][j] == tehuda[1][j+1] && tehuda[0][j] > tehuda[0][j+1]){\n\n                    int temp = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp;\n                    \n                }\n            }\n        }\n    }\n\n    public void setCard(int[][] tehuda) {\n        this.tehuda = tehuda;\n        \n    }\n    \n    public int[][] getCard() {\n         return tehuda;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°?????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t//?????°????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++) {\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++) {\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t// ????????¢???????????°\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3) {\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ( (color.equals(\"011\")) || (color.equals(\"122\")) || (color.equals(\"022\")) ) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif( ((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2))) ) {\n\t\t\t\t\t\tif ( (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( (cardNo[3] == cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ( (color.equals(\"001\")) || (color.equals(\"112\")) || (color.equals(\"002\"))) {\n\t\t\t\t\tif( ((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2))) ) {\n\t\t\t\t\t\tif ( (cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( (cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ( (color.equals(\"000\")) || (color.equals(\"111\")) || (color.equals(\"222\")) ) {\n\t\t\t\t\tif((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8]) ) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t\t// 1-2\n\t\t\t\t\telse if( ((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2))) ) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\tif ( (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5] + 1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7] + 1) == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7] + 1) == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( (cardNo[3] == cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6] + 1) == cardNo[7]) && (cardNo[7] == cardNo[8]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// 2-1\n\t\t\t\t\telse if ( (cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) ) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\n\t\t\t\t\t\tif ( ((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( ((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( (cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( ((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2))) ) {\n\t\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif( (check == 3) || (check2 >= 3) ) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t* @return _number\n\t*/\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t* @param _number ??????????????? _number\n\t*/\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t* @return _colorNum\n\t*/\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t* @param _colorNum ??????????????? _colorNum\n\t*/\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t/**\n\t* ?????????????????????\n\t* @param color ????????¨????????????\n\t* @param num ???????????????\n\t*/\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result = toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<5;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k]==color[j][k+2]){\n                        color[j][k]=0;\n                        color[j][k+1]=0;\n                        color[j][k+2]=0;\n                    }\n                }\n            }\n\n            for (int j=0;j<3;j++){\n                for (int l=0;l<3;l++){\n                int bef=-2;\n                int changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3) break;\n                    }\n                }\n            }\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\n\npublic class Main{\n public static void main(String[] args){\n  Scanner sc=new Scanner(System.in);\n  ArrayList<Integer> judge = new ArrayList<Integer>();\n  ArrayList<Integer> num=new ArrayList<Integer>();\n  ArrayList<String> color=new ArrayList<String>();\n  int n=sc.nextInt();\n  for(int h=0;h<n;h++){\n  int counter=0;\n   for(int j=0;j<9;j++){\n    num.add(sc.nextInt());\n   }\n   for(int j=0;j<9;j++){\n    color.add(sc.next());\n  }\n\n   //The condition whitch judge is 0 or 1\n   for(int i=0;i<7 ;i++){\n     for(int j=i+1;j<8;j++){\n       for(int k=j+1;k<9;k++){\n       if(color.get(i).equals(color.get(j))&&color.get(i).equals(color.get(k))){\n         if((num.get(i)==num.get(j)&&num.get(i)==num.get(k))||(num.get(i)+1==num.get(j)&&num.get(j)+1==num.get(k))||(num.get(i)+1==num.get(j)&&num.get(j)+1==num.get(k))||(num.get(i)+1==num.get(k)&&num.get(k)+1==num.get(j))||(num.get(j)+1==num.get(i)&&num.get(i)+1==num.get(k))||(num.get(j)+1==num.get(k)&&num.get(k)+1==num.get(i))||(num.get(k)+1==num.get(i)&&num.get(i)+1==num.get(j))||(num.get(k)+1==num.get(j)&&num.get(j)+1==num.get(i)))\n        {  counter++;\n          num.set(i,-10);\n          num.set(j,-10);\n          num.set(k,-10);\n        }\n        }\n       }\n       }\n     }\n   if(counter==3)\n    judge.add(1);\n   else\n    judge.add(0);\n   num.clear();\n   color.clear();\n  }\nfor(int j=0;j<n;j++){\n  System.out.println(judge.get(j));\n}\n }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\n\npublic class main {\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tString str;\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint turn = Integer.parseInt(br.readLine());\n\t\tfor(int i = 0; i < turn; i++){\n\t\t\tstr = br.readLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = br.readLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tif(rgbDivide(num, rgb)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tstatic boolean rgbDivide(String[] num, String[] rgb){\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tif(numSearch(R)){\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\t\n\t\t\t}\n\t\t}\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tif(numSearch(G)){\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\t\n\t\t\t}\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tif(numSearch(B)){\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tprivate static boolean numSearch(ArrayList<Integer> num) {\n\t\tint i = 0;\n\t\tif((num.get(i) + 1) == num.get(i+1) && (num.get(i+1) + 1) == num.get(i+2)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n    int T;\n    int[] number;\n    int[] R,G,B;\n\n    void solve(){\n\tScanner sc = new Scanner(System.in);\n\tT = sc.nextInt();\n\twhile(T-->0){\n\t    number = new int[9];\n\t    for(int i=0; i<9; i++)number[i] = sc.nextInt();\n\t    R = new int[10];\n\t    G = new int[10];\n\t    B = new int[10];\n\t    for(int i=0; i<9; i++){\n\t\tchar c = sc.next().charAt(0);\n\t\tif(c=='R')R[number[i]]++;\n\t\tif(c=='G')G[number[i]]++;\n\t\tif(c=='B')B[number[i]]++;\n\t    }\n\n\t    for(int i=0; i<=9; i++){\n\t\tif(R[i]>0){\n\t\t    if(R[i]==4 || R[i]==3) R[i]-=3;\n\t\t    if(R[i]<=2 && i+2<=9){R[i+1]-=R[i]; R[i+2]-=R[i]; R[i] = 0;}\n\t\t}\n\t\tif(G[i]>0){\n\t\t    if(G[i]==4 || G[i]==3) G[i]-=3;\n\t\t    if(G[i]<=2 && i+2<=9){G[i+1]-=G[i]; G[i+2]-=G[i]; G[i] = 0;}\n\t\t}\n\t\tif(B[i]>0){\n\t\t    if(B[i]==4 || B[i]==3) B[i]-=3;\n\t\t    if(B[i]<=2 && i+2<=9){B[i+1]-=B[i]; B[i+2]-=B[i]; B[i] = 0;}\n\t\t}\n\t    }\n\n\t    int ans = 1;\n\t    for(int i=0; i<=9; i++){\n\t\tif(R[i]!=0 || G[i]!=0 || B[i]!=0){ans = 0; break;}\n\t    }\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static void main(String[] args){\n\tnew Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tclass Pair implements Comparable<Pair> {\n\t\tint num;\n\t\tchar color;\n\n\t\tPair(int num, char color) {\n\t\t\tthis.num = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.color != o.color ? this.color - o.color : this.num - o.num;\n\t\t}\n\t}\n\n\tboolean check(Pair a, Pair b, Pair c) {\n\t\tif (a.color != b.color || b.color != c.color) {\n\t\t\treturn false;\n\t\t}\n\t\tif (a.num == b.num && b.num == c.num) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.num + 1 == b.num && b.num + 1 == c.num) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\n\t\tfor (int T = sc.nextInt() - 1; 0 <= T; T--) {\n\t\t\tint n = 9;\n\t\t\tPair[] p = new Pair[n];\n\t\t\tint[] num = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tnum[i] = sc.nextInt();\n\t\t\t}\n\t\t\tchar[] color = new char[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tcolor[i] = sc.next().charAt(0);\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tp[i] = new Pair(num[i], color[i]);\n\t\t\t}\n\t\t\tArrays.sort(p);\n\t\t\tboolean f = true;\n\t\t\tif (!check(p[0], p[1], p[2])) {\n\t\t\t\tf = false;\n\t\t\t}\n\t\t\tif (!check(p[3], p[4], p[5])) {\n\t\t\t\tf = false;\n\t\t\t}\n\t\t\tif (!check(p[6], p[7], p[8])) {\n\t\t\t\tf = false;\n\t\t\t}\n\t\t\tif (f) {\n\t\t\t\tSystem.out.println(1);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\n//==============================================================================\n\nclass Main{\n    \n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int[][] tehuda = new int[2][9];\n        \n        int T = sc.nextInt();//???????????????????????°\n        \n        for( int i = 0 ; i < T ; i++ ){//???????????????????????°?????????\n            for( int j = 0 ; j < 2 ; j++ ){\n                for( int k = 0 ; k < 9 ; k++ ){\n                    \n                    if( j == 0 ){\n                        tehuda[j][k] = sc.nextInt();\n                    }else{\n                        char color = sc.next().charAt(0);\n                        int intColor = 0;\n                        if( color == 'R'){//R???????????¨??????\n                            intColor = 11;\n                        }else if( color == 'G'){//G???????????¨??????\n                            intColor = 12;\n                        }else if( color == 'B'){//B???????????¨??????\n                            intColor = 13;\n                        }\n                        \n                        tehuda[j][k] = intColor;\n                    }\n                }\n            }\n        \n        \n            Rummy insRummy = new Rummy();//Rummy???????????????\n        \n            insRummy.setCard(tehuda);//??????????????°??¨??????Rummy????????????setCard???\n            \n            insRummy.sort(/**/);//Rummy????????????sort??????????????????\n            \n            tehuda = insRummy.getCard();//sort??????????????????????????????\n            \n            int count = 0;//?????????????????????\n            count = insRummy.judge(tehuda);\n            \n            if( count >= 3 ){\n                System.out.println(1);\n \n            }else{\n                System.out.println(0);\n            }\n        }\n    }\n}\n\n//==============================================================================\n\nclass Rummy {\n    \n    private int[][] tehuda = new int[2][9];\n    \n    Rummy(){\n        \n    }\n\n    public int judge(int[][] tehuda) {\n        \n    \tint count = 0;\n        \n        for(int i= 0; i < 7; i++){//??£????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n               \n                for(int k = j+1; k < 9; k++){\n                    \n                   if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                        \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] -1 && tehuda[0][i] == tehuda[0][k] -2){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n\n                }\n            }\n        }\n        \n       \n        for(int i= 0; i < 7; i++){//?????????????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n                \n                for(int k = j+1; k < 9; k++){\n                    \n                    if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                       \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] && tehuda[0][i] == tehuda[0][k]){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    \n    public void sort() {\n        \n    \tfor(int i = 0; i < 8; i++){//??????????????????\n            for(int j = 0; j < 8-i; j++ ){\n\n                if(tehuda[1][j] > tehuda[1][j+1]){\n                    int temp = tehuda[1][j];\n                    tehuda[1][j] = tehuda[1][j+1];\n                    tehuda[1][j+1] = temp;\n                    \n                    int temp2 = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp2;\n                }\n            }\n        }\n        \n        for(int i = 0; i < 8; i++){//??????????????????\n\n            for(int j = 0; j < 8-i; j++){\n                \n                if(tehuda[1][j] == tehuda[1][j+1] && tehuda[0][j] > tehuda[0][j+1]){\n\n                    int temp = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp;\n                    \n                }\n            }\n        }\n    }\n\n    public void setCard(int[][] tehuda) {\n        this.tehuda = tehuda;\n        \n    }\n    \n    public int[][] getCard() {\n         return tehuda;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @param result2\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\t// ?????????????????????\n\t\tcardInspection(cardArr);\n\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\n\t\t// ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶??????????????????????????°???????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}//outputAnswer????????????????????????\n\n\t// ?????????\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨ (1)????????????????????????????????? (3)????¨????????????????\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void cardInspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// for (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t// cardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\twhile (sc.hasNextLine()){\n\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 1;j < tehuda.size();j++) {\n\t\t\t\tif(!(tehuda.get(j).getColor().equals(checkColor))) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() -2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() -4;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 4);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 )) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i <= count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();;\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\t num4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(tmpNum, tmpColor);\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++) {// debug chk point\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}// end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum++] = intNum;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {// debug chk point\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tif (cardR[i] == 0 && cardG[i] == 0 && cardB[i] == 0) {\n\n\t\t\t\tresult = 1;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\n\t}\n\n\tpublic static int[] sameNumCard(int[] card) {// debug chk point\n\n\t\t int tmpCnt =0;\n\t\t int[] tmpSave = new int[ONECARDSET];\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tfor (int j = 0; j < ONECARDSET; j++) {\n\t\t\t\tfor (int k =0; k < ONECARDSET; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] && card[i] == card[k]) {\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < card.length; i++) {\n\t\t\tif (cnt == 3) {\n\t\t\t\tcard[i] = 0;\n\t\t\t\treturn card;\n\t\t\t}\n\t\t}\n\n\t\treturn card;\n\t}\n\n\tpublic static int[] serialNumCard(int[] card) {// debug chk point\n\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tfor (int j = 0; j < ONECARDSET; j++) {\n\t\t\t\tfor (int k = 0; k < ONECARDSET; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] - 1 && card[i] == card[k] - 2) {\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < card.length; i++) {\n\t\t\tif (cnt == 3) {\n\t\t\t\tcard[i] = 0;\n\t\t\t\treturn card;\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static int func(int[] b,int[] r,int[] g,int cnt,int col,int now){\n\t\tint a=cnt;\n\t\tif(col==0){\n\t\t\tif(b[now]>=3){\n\t\t\t\tb[now]-=3;\n\t\t\t\ta=Math.max(a,func(b,r,g,cnt+1,col,now));\n\t\t\t\tb[now]+=3;\n\t\t\t}\n\t\t\tif(now<=7)if(b[now]>=1 && b[now+1]>=1 && b[now+2]>=1){\n\t\t\t\tb[now]-=1;\n\t\t\t\tb[now+1]-=1;\n\t\t\t\tb[now+2]-=1;\n\t\t\t\ta=Math.max(a,func(b,r,g,cnt+1,col,now));\n\t\t\t\tb[now]+=1;\n\t\t\t\tb[now+1]+=1;\n\t\t\t\tb[now+2]+=1;\n\t\t\t}\n\t\t\tif(now!=9)a=Math.max(a,func(b,r,g,cnt,col,now+1));\n\t\t\telse a=Math.max(a,func(b,r,g,cnt,col+1,1));\n\t\t}\n\t\tif(col==1){\n\t\t\tif(r[now]>=3){\n\t\t\t\tr[now]-=3;\n\t\t\t\ta=Math.max(a,func(b,r,g,cnt+1,col,now));\n\t\t\t\tr[now]+=3;\n\t\t\t}\n\t\t\tif(now<=7)if(r[now]>=1 && r[now+1]>=1 && r[now+2]>=1){\n\t\t\t\tr[now]-=1;\n\t\t\t\tr[now+1]-=1;\n\t\t\t\tr[now+2]-=1;\n\t\t\t\ta=Math.max(a,func(b,r,g,cnt+1,col,now));\n\t\t\t\tr[now]+=1;\n\t\t\t\tr[now+1]+=1;\n\t\t\t\tr[now+2]+=1;\n\t\t\t}\n\t\t\tif(now!=9)a=Math.max(a,func(b,r,g,cnt,col,now+1));\n\t\t\telse a=Math.max(a,func(b,r,g,cnt,col+1,1));\n\t\t}\n\t\tif(col==2){\n\t\t\tif(g[now]>=3){\n\t\t\t\tg[now]-=3;\n\t\t\t\ta=Math.max(a,func(b,r,g,cnt+1,col,now));\n\t\t\t\tg[now]+=3;\n\t\t\t}\n\t\t\tif(now<=7)if(g[now]>=1 && g[now+1]>=1 && g[now+2]>=1){\n\t\t\t\tg[now]-=1;\n\t\t\t\tg[now+1]-=1;\n\t\t\t\tg[now+2]-=1;\n\t\t\t\ta=Math.max(a,func(b,r,g,cnt+1,col,now));\n\t\t\t\tg[now]+=1;\n\t\t\t\tg[now+1]+=1;\n\t\t\t\tg[now+2]+=1;\n\t\t\t}\n\t\t\tif(now!=9)a=Math.max(a,func(b,r,g,cnt,col,now+1));\n\t\t}\n\t\treturn a;\n\t}\n\tpublic static void main(String args[]){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\tint[] n;\n\t\tString[] s;\n\t\tn=new int[9];\n\t\ts=new String[9];\n\t\tfor(int ttt=0;ttt<t;ttt++){\n\t\t\tint[] b,r,g;\n\t\t\tb=new int[10];\n\t\t\tr=new int[10];\n\t\t\tg=new int[10];\n\t\t\tfor(int i=0;i<9;i++)n[i]=sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\ts[i]=sc.next();\n\t\t\t\tif(s[i].equals(\"B\"))b[n[i]]++;\n\t\t\t\tif(s[i].equals(\"G\"))g[n[i]]++;\n\t\t\t\tif(s[i].equals(\"R\"))r[n[i]]++;\n\t\t\t}\n\t\t\tSystem.out.printf(\"%d\\n\",func(b,g,r,0,0,0)/3);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(tmpNum, tmpColor);\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);\n\n\t\t}\n\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++) {// debug chk point\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}// end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum++] = intNum;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {// debug chk point\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0) {\n\n\t\t\tresult = 1;\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tpublic static int[] sameNumCard(int[] card) {// debug chk point\n\n\n\t\tint[] tmpSave = new int[ONECARDSET];\n\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tfor (int j = 0; j < tmpSave.length; j++) {\n\t\t\t\tfor (int k = 0; k < tmpSave.length; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] && card[i] == card[k]) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic static int[] serialNumCard(int[] card) {// debug chk point\n\n\n\t\tint[] tmpSave = new int[ONECARDSET];\n\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tfor (int j = 0; j < tmpSave.length; j++) {\n\t\t\t\tfor (int k = 0; k < tmpSave.length; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] - 1 && card[i] == card[k] - 2) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\n\t\t //????????°????¢???????????????°\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°???\n\t\t\t\t\t if(work_cnt % 3 == 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[++i] && work[i]  == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t else if(work[i] == work[++i] - 1 && work[i]  == work[++i] - 1){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t i++;\n\t\t\t\t\t \t}\n\t\t\t\t }\n\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tcSetList.add(cardSet);\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 == num2 + 1 && num1 == num3 + 2) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\t//cardColorSort(cardArr);\n\n\t\t//?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t//????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result= toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t//?????£?¶???????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t\t//(3)????¨????????????????\n\t\t\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t\t//(3)????¨????????????????\n\t\t\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length - 1; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length - 1; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!Check(counter[0] % 3) || !Check(counter[1] % 3) || !Check(counter[2] % 3)) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) flag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(blueList) && Confirm(greenList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        // 長さ3の時\n        if (len / 3 == 1) {\n            if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n                return true;\n            } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        // 長さ6の時\n        if (len / 3 == 2) {\n            for (int i = 0; i < 4; i++) {\n                for (int j = i + 1; j < 5; j++) {\n                    for (int k = j + 1; j < 6; k++) {\n                        if (list.get(i) == list.get(j) && list.get(j) == list.get(k)) {\n                            return true;\n                        } else if (list.get(i) + 1 == list.get(j) && list.get(j) + 1 == list.get(k)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n\n        boolean finalflg0 = false;\n        boolean finalflg1 = false;\n        boolean finalflg2 = false;\n\n        // 長さ9の時\n        for (int i = 0; i < Math.pow(3, 9); i++) {\n\n            int flg0 = 0;\n            int flg1 = 0;\n            int flg2 = 0;\n\n            int last0 = 0;\n            int last1 = 0;\n            int last2 = 0;\n\n            for (int j = 0; j < 9; j++) { // 9文字に対して一つずつ見ていく\n                int nannbannme = 0;\n                int tmp = i;\n                for (int k = 0; k < j; k++) {\n                    nannbannme++;\n                    tmp /= 3;\n                }\n\n                case 0:\n                    if (last0 == list.get(nannbannme)) {\n                        if (flg0 == 1) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 1;\n                        }\n                    }\n\n                    if (last0 + 1 == list.get(nannbannme)) {\n                        if (flg0 == 2) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 2;\n                        }\n                    }\n\n                    last0 = list.get(nannbannme);\n                    break;\n                case 1:\n                    if (last1 == list.get(nannbannme)) {\n                        if (flg1 == 1) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 1;\n                        }\n                    }\n\n                    if (last1 + 1 == list.get(nannbannme)) {\n                        if (flg1 == 2) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 2;\n                        }\n                    }\n\n                    last1 = list.get(nannbannme);\n\n                    break;\n                case 2:\n                    if (last2 == list.get(nannbannme)) {\n                        if (flg2 == 1) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 1;\n                        }\n                    }\n\n                    if (last2 + 1 == list.get(nannbannme)) {\n                        if (flg2 == 2) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 2;\n                        }\n                    }\n\n                    last2 = list.get(nannbannme);\n\n                    break;\n                }\n            }\n\n        }\n\n        return (finalflg1 && finalflg2 && finalflg0);\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * Rummy\n */\npublic class Main {\n\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\tint T = parseInt(br.readLine());\n\n\t\tfor (int i = 0; i < T; i++) {\n\n\t\t\tStringTokenizer st1 = new StringTokenizer(br.readLine());\n\t\t\tStringTokenizer st2 = new StringTokenizer(br.readLine());\n\n\t\t\tint[] R = new int[10];\n\t\t\tint[] G = new int[10];\n\t\t\tint[] B = new int[10];\n\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tint n = parseInt(st1.nextToken());\n\t\t\t\tswitch (st2.nextToken().charAt(0)) {\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tR[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tG[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tB[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\tint count = solve(R, 1, 0) + solve(G, 1, 0) + solve(B, 1, 0);\n\t\t\tSystem.out.println(count >= 3 ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static int solve(int[] cards, int s, int c) {\n\n\t\tif (s == 10) return c;\n\n\t\tint c1 = 0, c2 = 0, c3 = 0;\n\n\t\tif (cards[s] >= 3) {\n\t\t\tint[] _cards = cards.clone();\n\t\t\t_cards[s] -= 3;\n\t\t\tc1 = solve(_cards, s + 1, c + 1);\n\t\t}\n\n\t\tif (s <= 7 && cards[s] >= 1 && cards[s + 1] >= 1 && cards[s + 2] >= 1) {\n\t\t\tint[] _cards = cards.clone();\n\t\t\t_cards[s]--;\n\t\t\t_cards[s + 1]--;\n\t\t\t_cards[s + 2]--;\n\t\t\t// ???????????????????????°???????????¨???????????????????????????????????????????????????????????§????????????\n\t\t\tif (_cards[s] >= 1) {\n\t\t\t\tc2 = solve(_cards, s, c + 1);\n\t\t\t} else {\n\t\t\t\tc2 = solve(_cards, s + 1, c + 1);\n\t\t\t}\n\t\t}\n\n\t\tc3 = solve(cards, s + 1, c);\n\n\t\treturn Math.max(c1, Math.max(c2, c3));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N;\n        N = sc.nextInt();\n        while (N != 0){\n            int i,j;\n            N--;\n            int num[] = new int[9];\n            String cha[] = new String[9];\n            for(i=0;i<9;i++){\n              num[i] = sc.nextInt();\n            }\n            for(i = 0;i<9;i++){\n               cha[i] = sc.next();\n            }\n            int R[] = new int[9];\n            int G[] = new int[9];\n            int B[] = new int[9];\n            int r,g,b;\n            r = 0;\n            g = 0;\n            b = 0;\n            for(i=0;i<9;i++){\n              if(cha[i].equals(\"R\")){\n                 R[r] = num[i];\n                 r++;\n              }else if(cha[i].equals(\"G\")){\n                 G[g] = num[i];\n                 g++;\n              }else{\n                 B[b] = num[i];\n                 b++;\n              }\n            }\n\n        Arrays.sort(R);\n        Arrays.sort(G);\n        Arrays.sort(B);\n\n        int judge = 0;\n        int AAA[] = new int[9];\n\n       for(i=0;i<9;i++){\n         AAA[i] = R[i];\n       }\n       for(i=9-r;i<7;i++){\n         if(R[i]==R[i+1]&&R[i+1]==R[i+2]&&R[i]!=0){\n            R[i] = 0;\n            R[i+1] = 0;\n            R[i+2]=0;\n            judge++;\n            r = r-3;\n            Arrays.sort(R);\n        for(j=9-r;j<7;j++){\n          if((R[j]==1&&R[j+1]==2&&R[j+2]==3)||(R[j]==2&&R[j+1]==3&&R[j+2]==4)||(R[j]==3&&R[j+1]==4&&R[j+2]==5)||(R[j]==4&&R[j+1]==5&&R[j+2]==6)||(R[j]==5&&R[j+1]==6&&R[j+2]==7)||(R[j]==6&&R[j+1]==7&&R[j+2]==8)||(R[j]==7&&R[j+1]==8&&R[j+2]==9)){\n            R[i] = 0;\n            R[i+1] = 0;\n            R[i+2]=0;\n            judge++;\n          }\n        }\n        for(j=9-r;j<5;j++){\n          if((R[j]==1&&R[j+2]==2&&R[j+4]==3)||(R[j]==2&&R[j+2]==3&&R[j+4]==4)||(R[j]==3&&R[j+2]==4&&R[j+4]==5)||(R[j]==4&&R[j+2]==5&&R[j+4]==6)||(R[j]==5&&R[j+2]==6&&R[j+4]==7)||(R[j]==6&&R[j+2]==7&&R[j+4]==8)||(R[j]==7&&R[j+2]==8&&R[j+4]==9)){\n            R[i] = 0;\n            R[i+1] = 0;\n            R[i+2]=0;\n            judge++;\n          }\n        }\n          if(judge != 3){\n            for(j=0;j<9;j++){\n              R[j] = AAA[j];\n            }\n            judge = 0;\n            r = r+3;\n          }else{\n            for(j=0;j<9;j++){\n              R[j] = 0;\n            }\n          }\n        }\n      }\n            \n\n       for(i=0;i<9;i++){\n         AAA[i] = G[i];\n       }\n       for(i=9-g;i<7;i++){\n         if(G[i]==G[i+1]&&G[i+1]==G[i+2]&&G[i]!=0){\n            G[i] = 0;\n            G[i+1] = 0;\n            G[i+2]=0;\n            judge++;\n            g = g-3;\n            Arrays.sort(G);\n        for(j=9-g;j<7;j++){\n          if((G[j]==1&&G[j+1]==2&&G[j+2]==3)||(G[j]==2&&G[j+1]==3&&G[j+2]==4)||(G[j]==3&&G[j+1]==4&&G[j+2]==5)||(G[j]==4&&G[j+1]==5&&G[j+2]==6)||(G[j]==5&&G[j+1]==6&&G[j+2]==7)||(G[j]==6&&G[j+1]==7&&G[j+2]==8)||(G[j]==7&&G[j+1]==8&&G[j+2]==9)){\n            G[i] = 0;\n            G[i+1] = 0;\n            G[i+2]=0;\n            judge++;\n          }\n        }\n        for(j=9-g;j<5;j++){\n          if((G[j]==1&&G[j+2]==2&&G[j+4]==3)||(G[j]==2&&G[j+2]==3&&G[j+4]==4)||(G[j]==3&&G[j+2]==4&&G[j+4]==5)||(G[j]==4&&G[j+2]==5&&G[j+4]==6)||(G[j]==5&&G[j+2]==6&&G[j+4]==7)||(G[j]==6&&G[j+2]==7&&G[j+4]==8)||(G[j]==7&&G[j+2]==8&&G[j+4]==9)){\n            G[i] = 0;\n            G[i+1] = 0;\n            G[i+2]=0;\n            judge++;\n          }\n        }\n          if(judge != 3){\n            for(j=0;j<9;j++){\n              G[j] = AAA[j];\n            }\n            judge = 0;\n            g = g+3;\n          }else{\n            for(j=0;j<9;j++){\n              G[j] = 0;\n            }\n          }\n        }\n      }\n\n\n       for(i=0;i<9;i++){\n         AAA[i] = B[i];\n       }\n       for(i=9-b;i<7;i++){\n         if(B[i]==B[i+1]&&B[i+1]==B[i+2]&&B[i]!=0){\n            B[i] = 0;\n            B[i+1] = 0;\n            B[i+2]=0;\n            judge++;\n            b = b-3;\n            Arrays.sort(B);\n        for(j=9-b;j<7;j++){\n          if((B[j]==1&&B[j+1]==2&&B[j+2]==3)||(B[j]==2&&B[j+1]==3&&B[j+2]==4)||(B[j]==3&&B[j+1]==4&&B[j+2]==5)||(B[j]==4&&B[j+1]==5&&B[j+2]==6)||(B[j]==5&&B[j+1]==6&&B[j+2]==7)||(B[j]==6&&B[j+1]==7&&B[j+2]==8)||(B[j]==7&&B[j+1]==8&&B[j+2]==9)){\n            B[i] = 0;\n            B[i+1] = 0;\n            B[i+2]=0;\n            judge++;\n          }\n        }\n        for(j=9-b;j<5;j++){\n          if((B[j]==1&&B[j+2]==2&&B[j+4]==3)||(B[j]==2&&B[j+2]==3&&B[j+4]==4)||(B[j]==3&&B[j+2]==4&&B[j+4]==5)||(B[j]==4&&B[j+2]==5&&B[j+4]==6)||(B[j]==5&&B[j+2]==6&&B[j+4]==7)||(B[j]==6&&B[j+2]==7&&B[j+4]==8)||(B[j]==7&&B[j+2]==8&&B[j+4]==9)){\n            B[i] = 0;\n            B[i+1] = 0;\n            B[i+2]=0;\n            judge++;\n          }\n        }\n          if(judge != 3){\n            for(j=0;j<9;j++){\n              B[j] = AAA[j];\n            }\n            judge = 0;\n            b = b+3;\n          }else{\n            for(j=0;j<9;j++){\n              B[j] = 0;\n            }\n          }\n        }\n      }\n\n\n           \n\n        for(i=9-r;i<7;i++){\n          if((R[i]==1&&R[i+1]==2&&R[i+2]==3)||(R[i]==2&&R[i+1]==3&&R[i+2]==4)||(R[i]==3&&R[i+1]==4&&R[i+2]==5)||(R[i]==4&&R[i+1]==5&&R[i+2]==6)||(R[i]==5&&R[i+1]==6&&R[i+2]==7)||(R[i]==6&&R[i+1]==7&&R[i+2]==8)||(R[i]==7&&R[i+1]==8&&R[i+2]==9)){\n            R[i] = 0;\n            R[i+1] = 0;\n            R[i+2]=0;\n            judge++;\n            r = r-3;\n            Arrays.sort(R);\n          }\n        }\n        for(i=9-r;i<5;i++){\n          if((R[i]==1&&R[i+2]==2&&R[i+4]==3)||(R[i]==2&&R[i+2]==3&&R[i+4]==4)||(R[i]==3&&R[i+2]==4&&R[i+4]==5)||(R[i]==4&&R[i+2]==5&&R[i+4]==6)||(R[i]==5&&R[i+2]==6&&R[i+4]==7)||(R[i]==6&&R[i+2]==7&&R[i+4]==8)||(R[i]==7&&R[i+2]==8&&R[i+4]==9)){\n            R[i] = 0;\n            R[i+2] = 0;\n            R[i+4] = 0;\n            judge++;\n          }\n        }\n\n\n        for(i=9-g;i<5;i++){\n          if((G[i]==1&&G[i+2]==2&&G[i+4]==3)||(G[i]==2&&G[i+2]==3&&G[i+4]==4)||(G[i]==3&&G[i+2]==4&&G[i+4]==5)||(G[i]==4&&G[i+2]==5&&G[i+4]==6)||(G[i]==5&&G[i+2]==6&&G[i+4]==7)||(G[i]==6&&G[i+2]==7&&G[i+4]==8)||(G[i]==7&&G[i+2]==8&&G[i+4]==9)){\n            G[i] = 0;\n            G[i+2] = 0;\n            G[i+4] = 0;\n            judge++;\n            g = g-3;\n          }\n        }\n        Arrays.sort(G);\n        for(i=9-g;i<7;i++){\n          if((G[i]==1&&G[i+1]==2&&G[i+2]==3)||(G[i]==2&&G[i+1]==3&&G[i+2]==4||(G[i]==3&&G[i+1]==4&&G[i+2]==5)||(G[i]==4&&G[i+1]==5&&G[i+2]==6)||(G[i]==5&&G[i+1]==6&&G[i+2]==7)||(G[i]==6&&G[i+1]==7&&G[i+2]==8)||(G[i]==7&&G[i+1]==8&&G[i+2]==9)||G[i]==G[i+1]&&G[i+1]==G[i+2])){\n            G[i] = 0;\n            G[i+1] = 0;\n            G[i+2]=0;\n            judge++;\n            g = g-3;\n            Arrays.sort(G);\n          }\n        }\n\n        for(i=9-b;i<5;i++){\n          if((B[i]==1&&B[i+2]==2&&B[i+4]==3)||(B[i]==2&&B[i+2]==3&&B[i+4]==4)||(B[i]==3&&B[i+2]==4&&B[i+4]==5)||(B[i]==4&&B[i+2]==5&&B[i+4]==6)||(B[i]==5&&B[i+2]==6&&B[i+4]==7)||(B[i]==6&&B[i+2]==7&&B[i+4]==8)||(B[i]==7&&B[i+2]==8&&B[i+4]==9)){\n            B[i] = 0;\n            B[i+2] = 0;\n            B[i+4] = 0;\n            judge++;\n            b = b-3;\n          }\n        }\n        Arrays.sort(B);\n        for(i=9-b;i<7;i++){\n          if((B[i]==1&&B[i+1]==2&&B[i+2]==3)||(B[i]==2&&B[i+1]==3&&B[i+2]==4||(B[i]==3&&B[i+1]==4&&B[i+2]==5)||(B[i]==4&&B[i+1]==5&&B[i+2]==6)||(B[i]==5&&B[i+1]==6&&B[i+2]==7)||(B[i]==6&&B[i+1]==7&&B[i+2]==8)||(B[i]==7&&B[i+1]==8&&B[i+2]==9)||B[i]==B[i+1]&&B[i+1]==B[i+2])){\n            B[i] = 0;\n            B[i+1] = 0;\n            B[i+2]=0;\n            judge++;\n            b = b-3;\n            Arrays.sort(B);\n          }\n        }\n\n\n        if(judge == 3){\n          System.out.printf(\"1\\n\");\n        }else{\n          System.out.printf(\"0\\n\");\n        }\n\n       }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\n\t\t\tRummy rummy = new Rummy();\n\n\t\t\tint[][] hadCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\tint point = 0;\n\n\t\t\tpoint += rummy.sameNumberCheck(hadCard);\n\n\t\t\tpoint += rummy.continuousNumberCheck(hadCard);\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\t// ?????£?????????\n\tint[] cardNum;\n\tString[] cardColor;\n\n\t\n\n\t// ???????????????????????????????????£??????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\tint[][] hasCard = new int[3][9];\n\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\tpoint++;\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\t\tint continuousCount = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Card {\n  public int f;\n  public int n;\n  public String c;\n\n  Card() {\n    f = 0;\n  }\n\n  void setSet(int _f) {\n    f = _f;\n  }\n\n  void setN(int _n) {\n    n = _n;\n  }\n\n  void setC(String _c) {\n    c = _c;\n  }\n\n  static int sub(Card x, Card y) {\n    if(x.f == y.f) {\n      if(x.c.equals(y.c)) {\n        return x.n - y.n;\n      } else {\n        return x.c.charAt(0) - y.c.charAt(0);\n      }\n    } else {\n      return x.f - y.f;\n    }\n  }\n\n  static void sort(Card[] cards) {\n    for(int i = 0; i < 9 - 1; i++) {\n      for(int j = 9 - 1; j > i; j--) {\n        if(sub(cards[j - 1], cards[j]) > 0) {\n          Card temp = cards[j - 1];\n          cards[j - 1] = cards[j];\n          cards[j] = temp;\n        }\n      }\n    }\n  }\n\n  static boolean isSameNumberSet(Card x, Card y, Card z) {\n    if(x.c.equals(y.c) && y.c.equals(z.c)) {\n      if(x.n == y.n && y.n == z.n) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static boolean isSerialNumberSet(Card x, Card y, Card z) {\n    if(x.c.equals(y.c) && y.c.equals(z.c)) {\n      if(z.n - y.n == 1 && y.n - x.n == 1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static void printDebugInfo(String message, Card[] cards) {\n    boolean debug = false;\n    if(debug) {\n      System.out.println(\"After Input.\");\n      if(cards != null) {\n        for(int i = 0; i < 9; i++) {\n          System.out.print(cards[i].c);\n          System.out.print(cards[i].n);\n          System.out.print(\" \");\n          System.out.print(cards[i].f);\n          System.out.println(\"\");\n        }\n      }\n      System.out.println(\"\");\n    }\n  }\n\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int t = sc.nextInt();\n\n    for(int i = 0; i < t; i++) {\n      int setCount = 0;\n\n      Card[] cards = new Card[9];\n      for(int j = 0; j < 9; j++) {\n        cards[j] = new Card();\n      }\n\n      // data input\n      for(int j = 0; j < 9; j++) {\n        cards[j].setN(sc.nextInt());\n      }\n      for(int j = 0; j < 9; j++) {\n        cards[j].setC(sc.next());\n      }\n\n      printDebugInfo(\"After Input.\", cards);\n\n      // sort\n      Card.sort(cards);\n\n      printDebugInfo(\"After first sort.\", cards);\n\n      // 3?????????????????????????????°????????¢???????????????\n      for(int j = 0; j < 7; j++) {\n        if(cards[j].f == 1 || cards[j + 1].f == 1 || cards[j + 2].f == 1) {\n          continue;\n        }\n        if(isSameNumberSet(cards[j], cards[j + 1], cards[j + 2])) {\n          printDebugInfo(\"set! \" + j + \" \" + (j + 1) + \" \" + (j + 2), null);\n          cards[j    ].f = 1;\n          cards[j + 1].f = 1;\n          cards[j + 2].f = 1;\n          setCount++;\n        }\n      }\n\n      printDebugInfo(\"After enumerate same number set.\", cards);\n\n      // sort\n      Card.sort(cards);\n\n      printDebugInfo(\"After second sort.\", cards);\n\n      for(int j = 0; j < 7; j++) {\n        if(cards[j].f == 1 || cards[j + 1].f == 1 || cards[j + 2].f == 1) {\n          continue;\n        }\n        if(isSerialNumberSet(cards[j], cards[j + 1], cards[j + 2])) {\n          printDebugInfo(\"set! \" + j + \" \" + (j + 1) + \" \" + (j + 2), null);\n          cards[j    ].f = 1;\n          cards[j + 1].f = 1;\n          cards[j + 2].f = 1;\n          setCount++;\n        }\n      }\n\n      printDebugInfo(\"Final.\", cards);\n\n      if(setCount >= 3) {\n        System.out.println(1);\n      } else {\n        System.out.println(0);\n      }\n\n      printDebugInfo(\"\", null);\n    }\n  }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(tmpNum, tmpColor);\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);\n\n\t\t}\n\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++) {// debug chk point\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}// end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum++] = intNum;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {// debug chk point\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0) {\n\n\t\t\tresult = 1;\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tpublic static int[] sameNumCard(int[] card) {// debug chk point\n\n\t\t// int tmpCnt =0;\n\t\t// int[] tmpSave = new int[ONECARDSET];\n\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] && card[i] == card[k]) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic static int[] serialNumCard(int[] card) {// debug chk point\n\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] - 1 && card[i] == card[k] - 2) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\n//==============================================================================\n\nclass Main{\n    \n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int[][] tehuda = new int[2][9];\n        \n        int T = sc.nextInt();//???????????????????????°\n        \n        for( int i = 0 ; i < T ; i++ ){//???????????????????????°?????????\n            for( int j = 0 ; j < 2 ; j++ ){\n                for( int k = 0 ; k < 9 ; k++ ){\n                    \n                    if( j == 0 ){\n                        tehuda[i][j] = sc.nextInt();\n                    }else{\n                        char color = sc.next().charAt(0);\n                        int intColor = 0;\n                        if( color == 'R'){//R???????????¨??????\n                            intColor = 11;\n                        }else if( color == 'G'){//G???????????¨??????\n                            intColor = 12;\n                        }else if( color == 'B'){//B???????????¨??????\n                            intColor = 13;\n                        }\n                        \n                        tehuda[i][j] = intColor;\n                    }\n                }\n            }\n        \n        \n            Rummy insRummy = new Rummy();//Rummy???????????????\n        \n            insRummy.setCard(tehuda);//??????????????°??¨??????Rummy????????????setCard???\n            \n            insRummy.sort();//Rummy????????????sort??????????????????\n            \n            tehuda = insRummy.getCard();//sort??????????????????????????????\n            \n            int count = 0;//?????????????????????\n            count = insRummy.judge(tehuda);\n            \n            if( count >= 3 ){\n                System.out.println(1);\n \n            }else{\n                System.out.println(0);\n            }\n        }\n    }\n}\n\n//==============================================================================\n\nclass Rummy {\n    \n    private int[][] tehuda = new int[2][9];\n    \n    Rummy(){\n        \n    }\n\n    public int judge(int[][] tehuda) {\n        \n    \tint count = 0;\n        \n        for(int i= 0; i < 7; i++){//??£????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n               \n                for(int k = j+1; k < 9; k++){\n                    \n                   if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                        \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] -1 && tehuda[0][i] == tehuda[0][k] -2){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n\n                }\n            }\n        }\n        \n       \n        for(int i= 0; i < 7; i++){//?????????????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n                \n                for(int k = j+1; k < 9; k++){\n                    \n                    if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                       \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] && tehuda[0][i] == tehuda[0][k]){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    \n    public void sort() {\n        \n    \tfor(int i = 0; i < 8; i++){//??????????????????\n            for(int j = 0; j < 8-i; j++ ){\n\n                if(tehuda[1][j] > tehuda[1][j+1]){\n                    int temp = tehuda[1][j];\n                    tehuda[1][j] = tehuda[1][j+1];\n                    tehuda[1][j+1] = temp;\n                    \n                    int temp2 = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp2;\n                }\n            }\n        }\n        \n        for(int i = 0; i < 8; i++){//??????????????????\n\n            for(int j = 0; j < 8-i; j++){\n                \n                if(tehuda[1][j] == tehuda[1][j+1] && tehuda[0][j] > tehuda[0][j+1]){\n\n                    int temp = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp;\n                    \n                }\n            }\n        }\n    }\n\n    public void setCard(int[][] tehuda) {\n        this.tehuda = tehuda;\n        \n    }\n    \n    public int[][] getCard() {\n         return tehuda;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\n\t\t //????????°????¢???????????????°\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°???\n\t\t\t\t\t if(work_cnt % 3 == 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[++i] && work[i]  == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t else if(work[i] == work[++i] - 1 && work[i]  == work[++i] - 1){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t i++;\n\t\t\t\t\t \t}\n\t\t\t\t }\n\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * ??????????????¬???\n *\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\n\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<CardTC> cardArr = new ArrayList<CardTC>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ???????????????????????£???\n\t\t\tif (transNum.length > transColor.length) {\n\t\t\t\t/**\n\t\t\t\t * ?????¶???\n\t\t\t\t * ??±??????????????°?????????????????????????????´???\n\t\t\t\t * ??±?????????????????????????????°??????????????´???\n\t\t\t\t *\n\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t\t// ??±?????????\n\t\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\t\tcardArr.add(new CardTC(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tprivate static int utRummy(ArrayList<CardTC> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void sameCard(ArrayList<CardTC> cardArr) {\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameCard????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void serialCard(ArrayList<CardTC> cardArr) {\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????????????????\n\n}// DebugRu?????????????????????\n\n/**\n * ?????????Card\n *\n * <pre>\n * ????????????????????????????????£????????¨???????????????????????????\n * ??????????????????????????§???\n *\n * 1. ?????????????????°??????????¨????????????¶?????????\n * 2. ????????§????±???¨??§???????????§????????????\n * 3. javadoc???????????????????????¨\n * 4. ??\\???????????????????????????????????????????????????\n *\n * ???????????????????????°\n * ??????????????????????????????????§£??????????????????????????????????????????????????£???????????¨\n *\n * </pre>\n *\n * @author ?????????????????§???\n *\n */\nclass CardTC {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic CardTC() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic CardTC(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic CardTC(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// CardTC?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\tpublic static final int countMax = 30;\n\n\n\tpublic static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException\n\t{\n\t\t// TODO 自動生成されたメソッド・スタブ\n\t\tint a = Integer.parseInt(input(1)[0]);\n\t\tfor(int i = 0; i < a; i++)\n\t\t{\n\t\t\tString[][] str = {input(9), input(9)};\n\t\t\tchar[][] c = new char[9][9];\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tc[0][j] = str[0][j].toCharArray()[0];\n\t\t\t\tc[1][j] = str[1][j].toCharArray()[0];\n\t\t\t}\n\t\t\tQuickSort(c[0], 0, 8, c[1]);\n\t\t\tboolean[] b = {false, false, false, false, false, false, false, false, false};\n\t\t\tSystem.out.println(checkWin(c, 0, 0, 0, b) ? \"1\" : \"0\");\n\t\t}\n\t}\n\n\tpublic static boolean checkWin(char[][] str, int num, int select, int select2, boolean[] b)\n\t{\n\t\tboolean b2 = false;\n\t\t//if(num % 3 == 2) System.err.print(\"| \" + str[0][select] + \" \" + str[0][select2] + \" \");\n\t\tif(num % 3 == 0)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\t//if(num == 0) System.out.println(i);\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\tb2 = checkWin(str, num + 1, i, 0, b);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 1)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t{\n\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\tb2 = checkWin(str, num + 1, select, i, b);\n\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 2)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(num == 8)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select2] == str[0][i]) || (j != 0 && str[0][select2] != str[0][i])) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select] == str[0][i]) || (j != 0 && str[0][select] != str[0][i])) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select2] == str[0][i]) || (j != 0 && str[0][select2] != str[0][i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//System.err.println(str[0][i] + \" \" + num + \" \" + j);\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select] == str[0][i]) || (j != 0 && str[0][select] != str[0][i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//System.err.println(str[0][i] + \" \" + num + \" \" + j);\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn b2;\n\t}\n\n\tpublic static int loop(int num, int sum, int max, boolean[] b, int now, int upper)\n\t{\n\t\tint a = num;\n\t\tif(max == now)\n\t\t{\n\t\t\tint c = 0;\n\t\t\tfor(int i = 0; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) c += i;\n\t\t\t}\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tif(c + i == sum)\n\t\t\t\t{\n\t\t\t\t\t//System.err.println(sum + \" \" + c + \" \" + i);\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\ta = loop(a, sum, max, b, now + 1, i);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static int[] toIntArray(int a)\n\t{\n\t\tint b[] = new int[8];\n\t\tfor(int i = 0; i < 8; i++)\n\t\t{\n\t\t\tb[i] = (a >> (i * 3) & 0b111);\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(int[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(Integer[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tstatic void QuickSort(int[] d, int left, int right) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right, tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r);\n\t\tQuickSort(d, l, right);\n    }\n\n\tstatic void QuickSort(char[] d, int left, int right, char[] c) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right;\n\t\tchar tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\ttmp = c[l]; c[l] = c[r]; c[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r, c);\n\t\tQuickSort(d, l, right, c);\n    }\n\n\tpublic static boolean SeparateSearch(int[] a, int b, int first, int end)\n\t{\n\t\tif(end - first <= 1)\n\t\t{\n\t\t\tif(a[first] == b) return true;\n\t\t\telse if(a[end] == b) return true;\n\t\t\telse return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint temp = (end + first) / 2;\n\t\t\tif(a[temp] == b) return true;\n\t\t\telse if(a[temp] < b) return SeparateSearch(a, b, temp, end);\n\t\t\telse return SeparateSearch(a, b, first, temp);\n\t\t}\n\t}\n\n\tpublic static int GCD(int x, int y)\n\t{\n\t\tint z = Math.max(x, y) % Math.min(x, y);\n\t\tif(z == 0) return Math.min(x, y);\n\t\treturn GCD(z, Math.min(y, x));\n\t}\n\n\tpublic static int SelectionSort(int a[])\n\t{\n\t\tint Select = 0;\n\t\tfor(int j = 0; j < a.length - 1; j++)\n\t\t{\n\t\t\tint[] min = {0, Integer.MAX_VALUE};\n\t\t\tfor(int i = j; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif(min[1] > a[i])\n\t\t\t\t{\n\t\t\t\t\tmin[1] = a[i];\n\t\t\t\t\tmin[0] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j != min[0])\n\t\t\t{\n\t\t\t\tSelect++;\n\t\t\t\tswap(a, min[0], j);\n\t\t\t}\n\t\t}\n\t\treturn Select;\n\t}\n\n\tpublic static int BubbleSort(int a[])\n\t{\n\t\tint swapp = 0;\n\t\tboolean flag = true;\n\t\twhile(flag)\n\t\t{\n\t\t\tflag = false;\n\t\t\tfor(int i = 0; i < a.length - 1; i++)\n\t\t\t{\n\t\t\t\tif(a[i] > a[i+1])\n\t\t\t\t{\n\t\t\t\t\tswapp++;\n\t\t\t\t\tswap(a, i, i+1);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn swapp;\n\t}\n\n\tpublic static void swap(int[] a, int x, int y)\n\t{\n\t\ta[x] = a[x] ^ a[y];\n\t\ta[y] = a[x] ^ a[y];\n\t\ta[x] = a[x] ^ a[y];\n\t}\n\n\tpublic static String[] inputOne() throws IOException\n\t{\n\t\tString str2 = br.readLine();\n\t\tString[] str = new String[str2.length()];\n\t\tfor(int i = 0; i < str.length; i++)\n\t\t{\n\t\t\tif(i < str.length - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i, i+1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\n\tpublic static String[] input(int Num) throws IOException\n\t{\n\t\tString str[] = new String[Num];\n\t\tString str2 = br.readLine();\n\t\tint j = 0;\n\t\tfor(int i = 0; i < Num; i++)\n\t\t{\n\t\t\tif(i < Num - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j, str2.indexOf(\" \", j));\n\t\t\t\tj = str2.indexOf(\" \", j) + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\t//*/\n\n\t/*\n\n`           `            ```.(-~_````````````....-_~(?><___-``````````````.`````````````````````..__.~~~~~~~~~jI==lOXx.        ```\n`` `  `    `               .z<```````````..`.....~(+=>>>:~<<;___. ```````````````````````````...``-(_.~~~~~~~~(w===lOUI<.\n` ` `` `  `    `      `  .(!```````````````.``..~(?z>><!~``_~~~;<<-- ``````````````````````````._.`-<_.~~~~~~~:zz==zOzWOl\n`  ` `  `   `   ` ` `  .(! `````````````````...-(??;<`` ` `  `  _~<<+<-.````````.````.``````````..-._+_~~~~~::~(I==?OwOXk:\n`` ` `     `  `   `   -!``````````````````````._+==1-.```````` `   _~<<<+-....```.`````````````.``_~~(<_~~::::::zz1==wwrXX;`\n` ``` ` `    `   `  .<_``.``````````````` ` ``.(==lll&-``` `` ``````` _~(<1z-__..``.`````.``````..`_~~+<~~::::::(I+lOzkvvXk.\n` `  `   `    `  `.(!. _``````````````  `  ``` (=lttttO-``````` ` `````` _~<1Oz+--..````` .``````...~~(z_~(;:;;;;O>zttXuzwWn\n ` ` ` `   `     _~_..~```````````` ```` `````_+lltrrtlz_` `` ```` ` ` ```` _~?Ozwo-....` .~ `````.._~(=<_~;;>>>>z?ztOZuuuXW{`\n  ` ` ` `  `   .!..-(!`````````````` ` ````_-._ltrrrrrlw>``````` `` ``````````._?1zO+_...`-~_.````..-~~+z<:<>>>>>l?ztzVuuuuXR_\n    `  `    `.~~.._(> ````````````` ` ` ` ._(1_<zvrrvvwrI_```````````` `````````` _<1z<_~_._(< ````.-~~;zz<<>>>>?=?=tzWZuuuuXl\n `` ``  ` ` .<_..(zv_````` ```` .` `````._(z+zOz+OOvOwOvI__ ``````````````````````` _1+;<___:;< ```._~_:+O<<>>???===tlXyZzuZyk.`\n ` ` `` ` `.>~_.(zv<_`  ` ```` ~ `` ```._;+I~~_...~~~_~~1<~_-`````````````````````.`._<11?<.(<>_.`.._~(:;zz>????===lllXVXuuyyXl\n  `   `  `.>~~~_zI<_``` `````-~_`` ``` _;<<<~~~........_(<_~_.``` .`````````````.`..`.-(1=?<~<z;_..._::<:+Z>?>???===llXykuuXVVk.\n` ` ` ` `.<~~~_jI<~_  ``  ``.__` ``  `.<<:~~~...........~(<_:<_.``._``````````.``.`....-(l==<(1<>_..~~:><;zz????===lllXfkzuXffW[ `\n ` ` ` `.<::~(<dZ<~_ `  ``` (<_`  ```._::~~~....```````.__<<:<<_...-_.. ````.``..`.`...._1Ozz_+z+z_.~~:<<;+I????===llOWpHzuXfWkH\n `      (;:(;;juC~~  `` ```_:~`` ```._::~~~....``````````._<>;<z-...(-~__..`.............(zOt<(O>1>~_:;>?>>z????===llOWkHzXfpWqH;`\n  ` `  .;;;+>juZ<(<` ``` ` (<_  ````_~::~~~...````````````._<>>1<_-._1-_<_..`............_<OzI:Oz+O_~(>;???1z?====lltwWkHuWpbqqHb`\n     ` (;;;+?yuI~+~```````.(~~   `` ~~:~~....`.````````````._:;+z<<_.(G-(>-__.`........~..(1ww<zO<jI~(>>????==?==llttdkkSwWkqmmHM-\n      .z>?>1zuZ>(I_``.``` _:~_` ` `.~::~...````````````````` _><1z><_.jk:<1+___...~~~~.~~..<zzI+wz+X<<?>>????======ttdkbSdWqH@gg@k\n `  ``(v???jZuI;zI........_::_```` _:::~...`````````````````` <<_+11<__Oc:<+z+<__~.~~~~~~~~_1wwzzI<dI;+>>?>????===lOzWbWXXqH@@@@@g\n      jI==?dXuI+wI~~~~~~~~~::_```` (:<<~..`.````````````` ````-1__<+w<:<O<:;+zz+:~~~~~~~~~_~(wvI?z>dXz>>>?????====zIdWkSwWHM@@@@@@\n      Oll=1XZk<zyI:~::::~::::_````-;>><~.```.````````` ``````` (>.__?111zO<>_<zrw+<;<_::((<_(OvO=<;zXO<;<>>????===zzdkWXW@@@@@@@@@\n      ZlllzyyI?dV0;:;::::::;;__..._;>><..`.````.``````` ``  ``` >  ..dX0OlI<<::?OXO=??<;;;;::zvtz<:zvvI;<?>>???==zI>XWXWg@@@gggggg\n      ZttldVZZzXf0z>>>;;;::;1<_..._;>><_..`...`````````` `` `   (HW9!___+Xwc~_~<<jXAOz>>;;:;;+wOz<_ztwI;;>>>>????l<jHWH@ggggggggH@\n      OtttdfyXvXVkO??>>>>>;>+O<~~~_;>?<<__--....```` ` ` `````.J9<` ``. _1Zk+.._+<+wXXz>1&+<;+zOO>_zZzZ>;;;>>>???1>jHkHH@@@@HMMMHY\n      zrrrdVWXwXyWO????>>>>>>zz_~~~;+<<~__~<?11z+-```````  `````  ``````._<OU&(jggggHmmmewy<?zz<<! (<+O>;;;>>>>>???dkkkbbHHHHkSvI(\n    ` jrrrXy0XuZZVk=????>??>>+rz:~~<?<~` ..._(((><_`````````  ``` ``...-(jWNMMMMMMMMMMMMBMHMNm<_``` <>1<;;;;>;;>+1jgHkkkkWkWHHwvz1\n     `(trrXyVzuZZXW==?>>>?=?>>OO+::(1+((--(-__(1z_:_`````````` ````..-JdHWMMMNNMHHHHMYWB>_vM##v_...-<z+z;;;;;;:;>+dBTTUWWWUXHHzOwZ\n      .OrrwZCzuZZZWc1z>>>>1z>?ztl+_:dWWMMHHMMMNmg&+-.```` ````````` -dUC<~zHMMM@gg@@@N+.; (VU=_...._(?>=>;;;;;::+z>~(rwXC<jMMN<1wZ\n       jrrXk>(ZZZZX$<Oz>>>?l<<lltz+:<OOCz+<d#M@MM#M8:`````` ````````` `   (WHH@@@g@@@@@H: ?<_.`....~(>>1z;:;;;:<zw>~+v<<_(HMMNl_jW\n       .zwXk!.XZZZyW<(O>>>>Oz;zlllO<;1z<~(<(MHH@#MI<`````````````````````` 7YTTWHH@@@@H6_..........~<>>jc:;>>;;<zuc~~_..(WMMNNl_+z\n        (wXk~ (XXyZWs.jI>>;+w<<Ot=OO;+OA-._-dMM@MMQm,```````````````````` `-((JUHHWXwZC~......~~~~~_+<+zI;>>>>;+wuI~~_~(HM@HNN>.zO\n       ` zXW_` <wyZyW_ jz>;;jI:+rz1lz+=wk-..(UWHHMH9!``````` ``` ````````` -(UWkkWWV=~~~~~~~...~..~(<<zr>;>???>jwuC~._(HHHHHHN: (?\n     ` ``(Oy_ ` _zWZWl` ?1>;;z+;1tO+1???OZ--.(wkzXWZ!``` ``````````````` ``` `_~~`....~~~~~~~~~~.~_<<(tr<+=????zZOz(JdHHHHHH@N>  ;\n          (X}  ` _<?XW;` _<<;+O<:?Oz????<Oz__<<<<!_```````````````````````````````.......~..~.~.._<<(ztr<z=????zXQqHHMHHVHHH@H:\n           (k.`     _?Ti ``` ?jwo_<1z<+=>+O<......```````` `````` ``````````````..`.....~.~.~~.._<<~(lrZ+I==?=zwWHHHWUU0Od@@@H_\n           `j+       `  __``   1OI_~+z(:;:zz_.``````````````````````````````````.```....~.~~~.._:~.(lOvwO==???dZO<;<1OuuldgH@H_  `\n             ?!               `++zz_~<z<::(w:..```````````` ``` ``` ````````````````....~..~_-_::__jOwuuwz????dIw>;++1wuOwHWHH;`\n                               (v?><__1z<:(tz_`````````````````` ``` ``````````````.......~.._::~_(wZuZuw<+???z=wI>??=zuOwWXWH}\n               `                ?+><<__1z_~1z> ``````` ` ````````````` ````````````......__._::~.(dZZZZuX<+=?1V=z0>???zwOOyuWk$\n                            `   +=+?1<__1o_(zw+_``` ` ``` `````````````` `````````....~_(<~_:~~~_dZyyZZuX<>??zw=zX>>?=?zZlXvXWS\n                                1==111<~_1z<<zw<_````` `````` ``...``````` `` ```...._(<<~_(~~~_jZyyZZZuZ<>??zw=zXz>?=?=OtdZwX0_\n          `                   ` +=lOOl=+_~<1z<zXA+. ``` ````````````````````````..-_(<<:~~(~~_(jyyVyZZyZZ>>??zrz1dI>??=?ztdIzwX:\n                  `         `   z=lltrOz+<_(11zwwUX<--.  ` ````````````````````.-_(<::::~~:~_(jXyVVyyZyZZ?>>>Orz+wI>1????zwXzzul\n                               .z?=zttOOtzz++<?4kOwwXyXA&-..```````````````` .-(<<<:~~:~:~~_(1wXfVyyZyVXI?>;<ttz;zXz+z????OXI+XI_`\n                          `  ``(v>jOzzOOlttltrzzWOtwzZuXyZXwo+-. ````````` .(<<<::~:~_<~~~(<<1wyfyyyZyVkz?>;+zrv;+zz;z?>??zuZ>zw_.\n                              .+<:+wXz><1zltlltturwuwXzXX0uuZuuXy+-.`` --(+<<:::~~:~~(<_(<~~~<zyyyyyZyfkz>>;1lwO<<OI<jz>??1wXzzX>.\n          `                 ` (<;:+zXkXz>?=lttttwrwuwyzySzuuZZZZuZWA&(J&z<::~:~~:~:~~(_<<~~~~_jZyyyZyZWWz>>>z=Owz;zv><w????zzI1dl~\n                  `     `  ``.;;;;1wWHWWkzltrrrvvvzzwZuZXuzzuzuzuuuXXWWS<_~~:~~~~~~__+~~~~~~~~_?WyZuuZZXI??+jO=wI;?zO;jz???zrOzdI~\n                         `  .<<>;>zXHMHkkkOOrrvvvvuuXZZZuzvvzwvvuZWUC<_C_~~~~~~:~~~~(<~:~:~~~~:~_TZuzrOX0z>?zOlzX<<1Oz+z??==ztlzS_\n                          `.<:;1zzdHHHqqHHkytrrvvvzuuuuuuwrtrrrZ=7!_```-:.~~~~~~~~.(c~~:~~~~~~~~~._?CXuwrz>>?tO=zO<<zOz1????=OzzS;\n          `       `   ` ` .+:(uQkWHqqqH@@@HHwtOwwZO777??!~```  ````````(!..~~~~~~~.(~~~~:~~~~~~~~....._<?111+zlz1zw++zOz???>?zOlXz\n                        `.+<(dHHHH@Hmggg@MY!~ `````````````````````````__....~~~~.~<~~~~~~~~~~~~.~.......`.`. _~!??777zwwzz??zwrww\n                       `.z<:+WHHM#HM@HH9^````` ....`````` `` ``````````......~.~.~~<~~~~~~~~~~....~......```````````.-_<zUXAOzrzXy\n                    ` `.zz<<d@MNNNNM3~._```````_..```. ... `````````.`..`......~~~~~~~~~~~~...........``````````` .JuwXWHH@@HkkkXf\n          `       `  ` +??+zHMMNNNF_..```````` _. ``` `      ``````.```.........~~~~~~~~.........`.````````````.(twQHM@@@@@HHHMHg@\n              `  `  ` (==l=dMMMMMD...``````. `._ ``` ``````` _...`..`..`.........~~___`....`.``````````````` .(ugHMMHH@@MHHHHHHkff\n               `     (1tlluMMNMNF....`````. ` _``` ``` ``````` _~___..`......~~_`````````````````````````` .JdHHmmH@MHHHHWWpWyWHHH\n          `       ``.1wrlzdMMNN#~..__````````-.` `` ````` ```````` `___--_~~._.````````````````````````` .jXbpkmmHHHUUuzvzVUZyVfpf\n                `  .+zuwzdMMMMMK_.(> ``````` ._` `` ` `````` `````````  ``` ````````````````````` ` `  .uWbpbkHbpWUXzzZOz11>;<1zvU\n                ` .+zX0rwWMNN#Ht`.d}   .``  ~. `` ```````````` ````````` ` `` `` `````` ``````` `` ` .dWUZXyyfWU0vwwC<>;>>>>;:<zrt\n                  (=dXvXWMMNNMH% (#`   . ``._.```````` ```` ``` ` ` ` ` `  `  `  `  `` ``` ` ` ``` .dWZZXyWUXXX0VC<<(>;;;;<<<:(+wy\n          `   `` .=zXXwXHMNNN#M:.Ht  ` ~_``.~.``` `` ```````` ```` ``` ` ``  ` `` `` ``` `` ```` (XWyZyyyZXXp9C<~~~(<<:~~~_((+zwXf\n               `.+zw0rXXMNNNNNN<.wA+.` ~_``.~_```` ```````````` ``` `  `  ` ` `  ` `` ` ` ````.(HHHVVVWXWpWY>~~~~~:~~~~_:<?COVZXzu\n            ` ` (trwzzXHNNNNMNN>(wWMs_` _``.._-` ```````` `` ```  `` `` `  ` ` ``   `  ` `  .JHMHHWHmHHUY>:::~:~~~~_((><<<~~~<1Owu\n             ` (OrrwXwX#NNMMNM$_(XWMMy-`. ``.~__````````````` ``` `  ` ``` ` ` ` `` `` `  .d@M@@HHH90C;:::::;<::~~:~::::~~~~~.._<?\n          `   -wzzuuvdMMMMMM6<:(wXyWMHk,__   ._~-` ````````````  `  `` ` `  ``` ````` ..gMMMH9UYYC<<<+<<<<:::::_((_:~::::~~~~_...`\n\n\t */\n\n\n\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length - 1; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length - 1; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean isMatchCharacter(String[] str) {\n\t\tchar first = str[0].charAt(0);\n\t\tfor(int r = 0; r < str.length; r++) {\n\t\t\tif(str[r].charAt(0) != first) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isEven(int num) {\n\t\treturn(num % 2 == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!isEven(counter[0] % 3) || !isEven(counter[1] % 3) || !isEven(counter[2] % 3)) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(isMatchNumber(number) || isSequenceNumber(number))) flag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Rummy {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint intHairetsuNum[] = new int[9]; \n\t\tString strHairetsuNum[] = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString strHairetsuColor[] = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ??????????????¶???????????¨?????¨???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n//\t\tfor (int sort = 0; sort < cardArr.size(); sort++) {\n//\t\t\tSystem.out.println(cardArr.get(sort).getFrontnumber() + cardArr.get(sort).getRearColor());\n//\t\t}\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tcard_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\t *\n\t\t * ?????????????????§??????????????°????????§???????????????\n\t\t *\n\t\t * int result;\n\t\t *\n\t\t * System.out.println(result = (toolcnt== 0)? 1:0);\n\t\t */\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void card_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3-1)?????£?¶??????°???????????????????????°?????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getFrontnumber()) {\n\t\t\t\t\t\t\t\t// ????????????for???????????§??±???????????¨?????£?§£?????¶??????????????°?????????????????¨\n\n\t\t\t\t\t\t\t\t// for (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t// cardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\tfor (int btn = 0; btn < cardArr.size(); btn++) {\n\n\t\t\t\t\t\t\t\t\tif (cardArr.get(btn) == cardArr.get(cnt1) || cardArr.get(btn) == cardArr.get(cnt2)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(btn) == cardArr.get(cnt3)) {\n\t\t\t\t\t\t\t\t\t\tcardArr.get(btn).setUse(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber() || cardArr.get(cnt2)\n\t\t\t\t\t\t.getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_card = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_card);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card ?????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] card = new int[9];\n\t\t\tint[][] color = new int[3][9];\n\t\t\tint[] rgb = new int[3];\n\t\t\tint set = 0;\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcard[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = sc.next();\n\t\t\t\tswitch(s.charAt(0)){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcolor[0][rgb[0]] = card[j];\n\t\t\t\t\t\trgb[0]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcolor[1][rgb[1]] = card[j];\n\t\t\t\t\t\trgb[1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcolor[2][rgb[2]] = card[j];\n\t\t\t\t\t\trgb[2]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tArrays.sort(color[j]);\n\t\t\t\tfor(int k = 2; k < rgb[j]; k++){\n\t\t\t\t\tif(color[j][k] != 0 && color[j][k] == color[j][k-1] && color[j][k-1] == color[j][k-2]){\n\t\t\t\t\t\tset++;\n\t\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\t\tcolor[j][k-1] = 0;\n\t\t\t\t\t\tcolor[j][k-2] = 0;\n\t\t\t\t\t\tk += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int k = 0; k < rgb[j]; k++){\n\t\t\t\t\tint tmp = color[j][k];\n\t\t\t\t\tint l = 0, m = 0;\n\t\t\t\t\tif(tmp == 0) continue;\n\t\t\t\t\tfor(l = 0; l < rgb[j];l++){\n\t\t\t\t\t\tif(tmp == color[j][l]-1) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(l == rgb[j]) continue;\n\t\t\t\t\tfor (m = 0; m < rgb[j];m++ ) {\n\t\t\t\t\t\tif(tmp == color[j][m]-2) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(m == rgb[j]) continue;\n\t\t\t\t\tset++;\n\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\tcolor[j][l] = 0;\n\t\t\t\t\tcolor[j][m] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) System.out.println(\"1\");\n\t\t\telse System.out.println(\"0\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static boolean judge(int[] x){\n\t\tfor(int i = 0; i < x.length; i++){\n\t\t\tif( x[i] == 0 ){\n\t\t\t\tcontinue;\n\t\t\t} else if( x[i] >= 3 ){\n\t\t\t\tx[i] -= 3;\n\t\t\t\ti--;\n\t\t\t} else if( x[i] > 0 && x[i+1] > 0 && x[i+2] > 0 ){\n\t\t\t\tx[i]--; x[i+1]--; x[i+2]--;\n\t\t\t\ti--;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\t\t\t\n\tpublic static int solve(int[] num, String[] color){\n\t\tint[] R = new int[9];\n\t\tint[] G = new int[9];\n\t\tint[] B = new int[9];\n\t\t\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tif( color[i].equals(\"R\") ){\n\t\t\t\tR[num[i]]++;\n\t\t\t} else if( color[i].equals(\"G\") ){\n\t\t\t\tG[num[i]]++;\n\t\t\t} else {\n\t\t\t\tB[num[i]]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( judge(R) && judge(G) && judge(B) ){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\t\n\tpublic static void main(String[] args){\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint n = stdIn.nextInt();\n\t\tint[] result = new int[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] num = new int[9];\n\t\t\tString[] color = new String[9];\n\t\t\tint[] count = new int[3];\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tnum[j] = stdIn.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcolor[j] = stdIn.next();\n\t\t\t}\n\t\t\tresult[i] = solve(num, color);\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tSystem.out.println(result[i]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] red = new int[9];\n\t\tint[] blue = new int[9];\n\t\tint[] green = new int[9];\n\t\tint r, g, b;\n\t\tint[][] R = new int[10][10];\n\t\tint[][] G = new int[10][10];\n\t\tint[][] B = new int[10][10];\n\t\tint[] numR = new int[10];\n\t\tint[] numG = new int[10];\n\t\tint[] numB = new int[10];\n\t\tchar c;\n\t\tint count;\n\t\tint t = sc.nextInt();\n\t\tfor(int k = 0; k < t; k++){\n\t\t\tr = 0;\n\t\t\tg = 0;\n\t\t\tb = 0;\n\t\t\tfor(int i = 1; i <= 9; i++){\n\t\t\t\tnumR[i] = 0;\n\t\t\t\tnumG[i] = 0;\n\t\t\t\tnumB[i] = 0;\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tred[r] = n[i];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tgreen[g] = n[i];\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tblue[b] = n[i];\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\ti = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(R, numR, red, r);\n\t\t\tsort(G, numG, green, g);\n\t\t\tsort(B, numB, blue, b);\n\t\t\tcount += set(R, numR) + set(G, numG) + set(B, numB);\t\t\t\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[][] C, int[] numC, int[] color, int c){\n\t\tfor(int i = 0; i < c; i++){\n\t\t\tfor(int j = 1; j <= 9; j++)\n\t\t\t\tif(color[i] == j){\n\t\t\t\t\tC[j][++numC[j]] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tstatic int set(int[][] C, int[] numC){\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tfor(int k = 0; k < 3; k++){\n\t\t\t\tif(numC[i] >= 3){\n\t\t\t\t\tnumC[i] -= 3;\n\t\t\t\t\tcount++;\n\t\t\t\t}else\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j = numC[i]+1; j <= 9; j++)\n\t\t\t\tC[i][j] = 0;\n\t\t}\n\t\tfor(int j = 1; j <= 2; j++){\n\t\t\tfor(int i = 1; i <= 7; i++){\n\t\t\t\tif(C[i][j] == 1 && C[i+1][j] == 1 && C[i+2][j] == 1){\n\t\t\t\t\tcount++;\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!Check(counter[0] % 3) || !Check(counter[1] % 3) || !Check(counter[2] % 3)) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) flag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "package aoj.rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\n\t\tif(3 <= R.size() && R.size()%3 == 0){\n\t\t\tCollections.sort(R);\n\t\t\tcnt += numSearch(R, R.size());\n\t\t}\n\t\t\n\t\tif(3 <= G.size() && G.size()%3 == 0){\n\t\t\tCollections.sort(G);\n\t\t\tcnt += numSearch(G, G.size());\n\t\t\t\n\t\t}\n\t\tif(3 <= B.size() && B.size()%3 == 0){\n\t\t\tCollections.sort(B);\n\t\t\tcnt += numSearch(B, B.size());\n\t\t\t\n\t\t}\n\t\t\n\t\tif(cnt == 3){\n\t\t\tSystem.out.println(\"1\");\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t}\n\t\t\n\t}\n\n\n\tprivate static int numSearch(ArrayList<Integer> r, int T) {\n\t\tint cnt = 0;\n\t\tfor (int j = 0; j < T; j += 3) {\n\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) cnt +=1;\n\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) cnt +=1;\n\t\t}\n\t\t\n\t\treturn cnt;\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n\n        for (int t = 0; t < n; ++t) {\n            int[] num = new int[9];\n            int[][] color = new int[3][9];\n            boolean ans = true;\n\n            for (int i = 0; i < 9; ++i) {\n                num[i] = scanner.nextInt() - 1;\n            }\n            for (int i = 0; i < 9; ++i) {\n                String c = scanner.next();\n\n                int idx;\n                if (c.equals(\"R\")) idx = 0;\n                else if (c.equals(\"G\")) idx = 1;\n                else idx = 2;\n                ++color[idx][num[i]];\n            }\n\n            for (int i = 0; i < 3; ++i) {\n                for (int j = 0; j < 9; ++j) {\n                    if (color[i][j] < 0) {\n                        ans = false;\n                    } else if (color[i][j] >= 3) {\n                        color[i][j] -= 3;\n                    }\n                    if (color[i][j] > 0) {\n                        if (j >= 7) ans = false;\n                        else {\n                            color[i][j + 1] -= color[i][j];\n                            color[i][j + 2] -= color[i][j];\n                            color[i][j] = 0;\n                        }\n                    }\n                }\n            }\n            System.out.println((ans ? 1 : 0));\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\twhile (sc.hasNextLine()){\n\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 1;j < tehuda.size();j++) {\n\t\t\t\tif(!(tehuda.get(j).getColor().equals(checkColor))) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() -2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() -4;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 4);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 )) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\n\npublic class Main {\n    public static void main(String[] args) {\n\n    \tScanner sc = new Scanner(System.in);\n    \t// プレイヤー人数の取得、手札の数、色の種類の数、色の種類の設定\n    \tint playersNum = sc.nextInt();\n    \tint cardNum = 9;\n    \tint colorNum = 3;\n    \tint[] numType = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n    \tchar[] colorType = {'R', 'B', 'G'};\n    \tint pair = 3;\n\n    \t// 人数分の勝利条件を満たしているか判定\n    \t// 勝利条件：judg > 3\n    \tfor(int i = 0; i < playersNum; i++) {\n    \t\tint judg = 0;\n    \t\t// プレイヤーiの手札の数字を配列に追加\n    \t\tint[] number = new int[cardNum];\n    \t\tfor(int j = 0; j < cardNum; j++) {\n    \t\t\tnumber[j] = sc.nextInt();\n    \t\t}\n    \t\t// プレイヤーiの手札の色を配列に追加\n    \t\tchar[] color = new char[cardNum];\n    \t\tfor(int j = 0; j < cardNum; j++) {\n    \t\t\tcolor[j] = sc.next().charAt(0);\n    \t\t}\n\n    \t\t// 勝利条件を満たしているか判定\n    \t\tfor(int j = 0; j < colorNum; j++) {\n    \t\t\t// 同一色の数字をリストに入れる\n    \t\t\tArrayList<Integer> sameColor = new ArrayList<Integer>();\n    \t\t\tfor(int k = 0; k < cardNum; k++) {\n    \t\t\t\tif(colorType[j] == color[k]) {\n    \t\t\t\t\tsameColor.add(number[k]);\n    \t\t\t\t}\n    \t\t\t}\n\n    \t\t\t// 同一色内で同じ数字をカウント\n    \t\t\tfor(int k = 0; k < numType.length; k++) {\n    \t\t\t\tint count = 0;\n    \t\t\t\tfor(int l = 0; l < sameColor.size(); l++) {\n    \t\t\t\t\tif(numType[k] == sameColor.get(l)) {\n    \t\t\t\t\t\tcount++;\n    \t\t\t\t\t\tif(count == pair) {\n    \t\t\t\t\t\t\tjudg++;\n    \t\t\t\t\t\t\tfor(int m = 0; m < pair; m++) {\n    \t\t\t\t\t\t\t\tsameColor.remove(sameColor.indexOf(numType[k]));\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\tbreak;\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n\n    \t\t\t// 同一色内で連番数字をカウント\n    \t\t\tCollections.sort(sameColor);\n    \t\t\twhile(sameColor.size() != 0) {\n    \t\t\t\tint a = sameColor.get(0);\n    \t\t\t\tint count = 0;\n    \t\t\t\tint count0 = 0;\n    \t\t\t\tfor(int l = 0; l < sameColor.size(); l++) {\n    \t\t\t\t\tif(a == sameColor.get(l)) {\n    \t\t\t\t\t\tcount++;\n    \t\t\t\t\t\ta++;\n    \t\t\t\t\t}\n    \t\t\t\t\tif(count == pair) {\n    \t\t\t\t\t\tcount0++;\n    \t\t\t\t\t\tjudg++;\n    \t\t\t\t\t\tfor(int m = 0; m < pair; m++) {\n    \t\t\t\t\t\t\ta--;\n\t\t\t\t\t\t\t\tsameColor.remove(sameColor.indexOf(a));\n\t\t\t\t\t\t\t}\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\tif(count0 == 0) break;\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// 勝利条件を満たしていれば1を出力、elseは0を出力\n    \t\tif(judg >= 3) {\n    \t\t\tSystem.out.println(1);\n    \t\t}else {\n    \t\t\tSystem.out.println(0);\n    \t\t}\n    \t}\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\n\t\t\tRummy rummy = new Rummy(cardNum, cardColor);\n\n\t\t\tint[][] hadCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\tint point = 0;\n\n\t\t\tpoint += rummy.sameNumberCheck(hadCard);\n\n\t\t\tpoint += rummy.continuousNumberCheck(hadCard);\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\t// ???????????????????????????????????£??????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\tint[][] hasCard = new int[3][9];\n\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\tpoint++;\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\t\tint continuousCount = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ??????????????¶???????????¨?????¨???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n\n//\t\tfor (int nci = 0; nci < cardArr.size(); nci++) {\n//\t\t\tSystem.out.println(cardArr.get(nci).getFrontnumber()+cardArr.get(nci).getRearColor());\n//\t\t}\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tcard_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\t *\n\t\t * ?????????????????§??????????????°????????§???????????????\n\t\t *\n\t\t * int result;\n\t\t *\n\t\t * System.out.println(result = (toolcnt== 0)? 1:0);\n\t\t */\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void card_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3-1)?????£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t\t// ????????????for???????????§??±???????????¨?????£?§£\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// (3-2)??°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n//\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n//\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n//\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()||\n\t\t\t\t\t\tcardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\n\t\t\t\t// ????????????????????????????????±???????????¨????????¨??°??????????????§???????????????3R 2R 1R,????????????5G 4G 5G\n//\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n//\t\t\t\t\t// ???????????????????????????????????°\n//\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n//\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n//\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n//\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card ?????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tIN:for(int i = 0; i < t; i++) {\n\t\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\t\tint[] list = new int[9];\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tlist[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tString in = sc.next();\n\t\t\t\tif(in.equals(\"R\")) R.add(list[j]);\n\t\t\t\tif(in.equals(\"G\")) G.add(list[j]);\n\t\t\t\tif(in.equals(\"B\")) B.add(list[j]);\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tboolean A1 = true;\n\t\t\t\n\t\t\tCollections.sort(R);\n\t\t\tCollections.sort(G);\n\t\t\tCollections.sort(B);\n\t\t\tfor(int j = 0; j < R.size(); j++) {\n\t\t\t\tA1 = true;\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= R.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(R.get(k) != R.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int j = 0; j < G.size(); j++) {\n\t\t\t\tA1 = true;\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= G.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(G.get(k) != G.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int j = 0; j < B.size(); j++) {\n\t\t\t\tA1 = true;\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= B.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(B.get(k) != B.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tj += 2;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < R.size(); j++) {\n\t\t\t\tif(R.contains(R.get(j)+1) && R.contains(R.get(j) + 2)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tR.remove(new Integer(R.get(j)+2));\n\t\t\t\t\tR.remove(new Integer(R.get(j)+1));\n\t\t\t\t\tR.remove(new Integer(R.get(j)));\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < G.size(); j++) {\n\t\t\t\tif(G.contains(G.get(j)+1) && G.contains(G.get(j) + 2)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tG.remove(new Integer(G.get(j)+2));\n\t\t\t\t\tG.remove(new Integer(G.get(j)+1));\n\t\t\t\t\tG.remove(new Integer(G.get(j)));\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < B.size(); j++) {\n\t\t\t\tif(B.contains(B.get(j) + 1) && B.contains(B.get(j) + 2)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tB.remove(new Integer(B.get(j)+2));\n\t\t\t\t\tB.remove(new Integer(B.get(j)+1));\n\t\t\t\t\tB.remove(new Integer(B.get(j)));\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t\tif(count == 3) {\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main{\n\n\t/**\n\t * ?????????????????????????????\\???????¢??????°???\n\t * ??????\n\t * 1) ????´???????????????? ??????String + String ??? Red 1 [1R] White 2 [2W] Gold 3 [3G]\n\t * 2) if??§????´¢????????????.contains() ??? switch??? ??? return;\n\t *\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tRummy ru = new Rummy(br.readLine(), br.readLine());\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = ru.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\n\t}// ????????????????????????????????????\n\n\t/**\n\t * ?????????CardRummy\n\t */\n\tpublic static class Rummy {\n\t\t/**\n\t\t * ?????????????????°??¶???\n\t\t */\n\t\tprivate static final int ONECARDSET = 9;\n\t\t/**\n\t\t * ?????????????????£?????????????????????\n\t\t */\n\t\tprivate static final int CASTAREA = 2;\n\t\t/**\n\t\t * ?????????????????£?????????????????°??????????´???´???\n\t\t */\n\t\tprivate static final int CASTADDRESS =0;\n\n\t\t/**\n\t\t * ????????????????´???´???\n\t\t */\n\t\tArrayList<String> card = new ArrayList<String>();\n\n\t\t/**\n\t\t * ?????°??????????????? ?????£???????????????????´???????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t */\n\t\tpublic Rummy(String tmpNum, String tmpColor) {// ???????????°????????????\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\t\t\t// ?????¨??°??????????????????????´?????????´???\n\t\t\tString tmpCard = \"\";\n\n\t\t\t// for????????? ????§£??????????????????????????????\n\t\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t\t/**\n\t\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t\t */\n\t\t\t\t// ????§£??????????????¨??°??????????????????\n\t\t\t\ttmpCard = transNum[cnt] + transColor[cnt];\n\t\t\t\t// ????´?\n\t\t\t\tcard.add(tmpCard);\n\t\t\t}\n\t\t}// ?????????????????????????????????\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t *\n\t\t * @param tmpArr ???????????´??????????????¨???????????´???\n\t\t *\n\t\t */\n\t\tpublic int playtheGame() {// ???????????°????????????\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = 0;\n\t\t\t// ???????????????????????´???\n\n\t\t\t//??¨???????????´???\n\t\t\tArrayList<String> tmpArr = new ArrayList<String>();\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\t\t\t//??´???????????????\n//\t\t\ttmpArr.addAll(card);\n//\t\t\tcard.clear();\n//\t\t\tcard.addAll(tmpArr);\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialNumCard(card); //?????£????????????\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameNumCard(card); //?????£????????????\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\t\t\t//??´???????????????\n//\t\t\ttmpArr.addAll(card);\n//\t\t\tcard.clear();\n//\t\t\tcard.addAll(tmpArr);\n\n\t\t\t// ????????????????????°??????0????????¨??¨0\n\t\t\tif (card.get(ONECARDSET - 1).contains(\"0\")){\n\t\t\t\t// ?????¶??????????????°???????????????s\n\t\t\t\tresult = 1;}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}// playtheGame????????????????????????\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param card2\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\n\t\tpublic void serialNumCard(ArrayList<String> card) {// ?????£????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param tempNum String????????????????????°??????int??¢????????£???????????????????????¨????????°\n\t\t\t *\n\t\t\t * @param tempArr[] ??¨????????°?????????????????°??????????´? ??????????????°?????????????????????\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\n\t\t\t//??????????????°???????????¢??¨\n\t\t\tString tempNum1[] = new String[CASTAREA];\n\t\t\tString tempNum2[] = new String[CASTAREA];\n\t\t\tString tempNum3[] = new String[CASTAREA];\n\n\t\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????£????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1???String???????????????????\\???????\n\t\t\t\t\t\t * ?????????2?????????????????¢?????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1 ?????????\n\t\t\t\t\t\t * 1) ??¨????????°??§??°???????????¢????´? ??? ???????¨?????????????????????????????????°???????????????????????§???????????????????????????\n\t\t\t\t\t\t *    (??¢?????????????????????)\n\t\t\t\t\t\t * 2) ??¨????????°??§??°???????????¢????´? ??? ??¨???int[]????????£??????????????°????????????????????????????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????2 ?????????\n\t\t\t\t\t\t * ???????????°??¢????????§????????????????????£ ??? ?????????????¨??????????????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\ttempNum1 = card.get(cnt1).split(\"\");\n\t\t\t\t\t\ttempNum2 = card.get(cnt2).split(\"\");\n\t\t\t\t\t\ttempNum3 = card.get(cnt3).split(\"\");\n\t\t\t\t\t\t// (1)3??£?¶?????????????????????????????????????\n\t\t\t\t\t\tif (Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum2[CASTADDRESS]) - 1\n\t\t\t\t\t\t\t\t&& Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum3[CASTADDRESS])\n\t\t\t\t\t\t\t\t\t\t- 2) {\n\t\t\t\t\t\t\t// (2)3??£?¶????????????????????????????????????????\n\t\t\t\t\t\t\tif (tempNum1[CASTADDRESS + 1].equals(tempNum2[CASTADDRESS + 1])\n\t\t\t\t\t\t\t\t\t&& tempNum2[CASTADDRESS + 1].equals(tempNum3[CASTADDRESS + 1])) {\n\n\t\t\t\t\t\t\t\t// (3)???????????????????????§?????????????????????\n\t\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\")\n\t\t\t\t\t\t\t\t\t\t&& !card.get(cnt3).contains(\"0\")) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\t//return card;\n\t\t}// serialNumCard ????????????????????????\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param card\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\t\tpublic void sameNumCard(ArrayList<String> card) {// ???????????°????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t\t// (1)???????????????????????????????????????\n\t\t\t\t\t\tif (card.get(cnt1).equals(card.get(cnt2)) && card.get(cnt2).equals(card.get(cnt3))) {\n\t\t\t\t\t\t\t// (1)????????¶??????????????°??????????????????\n\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\") && !card.get(cnt3).contains(\"0\")){\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\t//return card;\n\t\t}// sameNumCard????????????????????????\n\n\t}// Rummy?????????????????????\n\n}// NRummy?????????????????????"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\n\t\tboolean flg1 = false;\n\t\tboolean flg2 = false;\n\t\tboolean flg3 = false;\n\n\t\tStringBuilder sb = new StringBuilder();\n\t\tList<Integer> list_number = new ArrayList<Integer>();\n\t\tList<String> list_color = new ArrayList<String>();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_number.add(scan.nextInt());\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_color.add(scan.next());\n\t\t\t}\n\n\t\t\tint r = 0;\n\t\t\tint g = 0;\n\t\t\tint b = 0;\n\n\t\t\t// ????????°????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tswitch (list_color.get(count1)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?????????????????????????????§????????????????????£?????´??????????????????\n\t\t\tif ((r % 3 != 0) | (g % 3 != 0) | (b % 3 != 0)) {\n\t\t\t\t\n\t\t\t}\n\n\t\t\t// ??????????????¨???????????????\n\t\t\tList<Integer> list_r = new ArrayList<Integer>();\n\t\t\tList<Integer> list_g = new ArrayList<Integer>();\n\t\t\tList<Integer> list_b = new ArrayList<Integer>();\n\n\t\t\t// 9???????????????????????\\?????????????????????\n\t\t\tfor (int count2 = 0; count2 < 9; count2++) {\n\t\t\t\tswitch (list_color.get(count2)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tlist_r.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tlist_g.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tlist_b.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tCollections.sort(list_r);\n\t\t\tCollections.sort(list_g);\n\t\t\tCollections.sort(list_b);\n\n\t\t\t// ???????????????????????? ??????????????°??????????????\\???????????? ????????£???????????£???????????°???????????????\n\t\t\t// ???????????§????????¨??????????????????????????????0???????????????\n\t\t\t// -------list_r?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\tint num1 = 0;\n\t\t\tint num2 = 0;\n\t\t\tint num3 = 0;\n\t\t\tint num4 = 0;\n\t\t\tint num5 = 0;\n\t\t\tint num6 = 0;\n\t\t\tint num7 = 0;\n\t\t\tint num8 = 0;\n\t\t\tint num9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_r.size(); count1++) {\n\t\t\t\tswitch (list_r.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t//System.out.println(\"?????????????????????\");\n\t\t\t\t\tflg1 = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// -------list_r????????????????????§-----------------------------------------------\n\n\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\tnum1 = 0;\n\t\t\tnum2 = 0;\n\t\t\tnum3 = 0;\n\t\t\tnum4 = 0;\n\t\t\tnum5 = 0;\n\t\t\tnum6 = 0;\n\t\t\tnum7 = 0;\n\t\t\tnum8 = 0;\n\t\t\tnum9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_g.size(); count1++) {\n\t\t\t\tswitch (list_g.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\tflg2 = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\n\t\t\t// -------list_b?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\tnum1 = 0;\n\t\t\tnum2 = 0;\n\t\t\tnum3 = 0;\n\t\t\tnum4 = 0;\n\t\t\tnum5 = 0;\n\t\t\tnum6 = 0;\n\t\t\tnum7 = 0;\n\t\t\tnum8 = 0;\n\t\t\tnum9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_b.size(); count1++) {\n\t\t\t\tswitch (list_b.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\tflg3 = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t// -------list_b????????????????????§-----------------------------------------------\n\n\t\t\t// ?????????\n\t\t\tlist_number.clear();\n\t\t\tlist_color.clear();\n\t\t\tlist_r.clear();\n\t\t\t\tlist_g.clear();\n\t\t\t\tlist_b.clear();\n\t\t\tif(flg1 & flg2 & flg3){\n\t\t\t\tsb.append(\"1\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t\tflg1 = false;\n\t\t\t\tflg2 = false;\n\t\t\t\tflg3 = false;\n\t\t\t}else{\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\tSystem.out.print(new String(sb));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        int set = sc.nextInt();\n        int number[] = new int[9];\n        int Rnumber[] = new int[9];\n        int Gnumber[] = new int[9];\n        int Bnumber[] = new int[9];\n        int setcount = 0;\n        \n        for(int i = 0 ; i < set ; i++){\n            setcount = 0;\n            \n            for(int t = 0 ; t < 9 ; t++){\n                number[t] = sc.nextInt();\n            }\n            for(int c = 0 ; c < 9 ; c++){\n                String color = sc.next();\n                if(color.equals(\"R\")){\n                    Rnumber[c] = number[c];\n                }\n                else if(color.equals(\"G\")){\n                    Gnumber[c] = number[c];\n                }\n                else if(color.equals(\"B\")){\n                    Bnumber[c] = number[c];\n                }\n            }\n            \n            Arrays.sort(Rnumber);\n            Arrays.sort(Gnumber);\n            Arrays.sort(Bnumber);\n            \n            setcount += search(Rnumber);\n            setcount += search(Gnumber);\n            setcount += search(Bnumber);\n\n/*            \n            for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(Rnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Rnumber[time+time2] == Rnumber[time]+1 || Rnumber[time] == Rnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Rnumber[time+time2+time3] == Rnumber[time]+2 || Rnumber[time] == Rnumber[time+time2+time3]){\n                                    setcount++;\n                                    Rnumber[time] = 0;\n                                    Rnumber[time+time2] = 0;\n                                    Rnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Gの数字を検索\n                if(Gnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Gnumber[time+time2] == Gnumber[time]+1 || Gnumber[time] == Gnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Gnumber[time+time2+time3] == Gnumber[time]+2 || Gnumber[time] == Gnumber[time+time2+time3]){\n                                    setcount++;\n                                    Gnumber[time] = 0;\n                                    Gnumber[time+time2] = 0;\n                                    Gnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Bの数字を検索\n                if(Bnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Bnumber[time+time2] == Bnumber[time]+1 || Bnumber[time] == Bnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Bnumber[time+time2+time3] == Bnumber[time]+2 || Bnumber[time] == Bnumber[time+time2+time3]){\n                                    setcount++;\n                                    Bnumber[time] = 0;\n                                    Bnumber[time+time2] = 0;\n                                    Bnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }*/\n            \n            System.out.println(setcount);\n            if(setcount == 3){\n                System.out.println(\"1\");\n            }\n            else{\n                System.out.println(\"0\");\n            }\n            \n        }\n        \n    }\n    \n    private static int search (int nums[]){\n        int setcount = 0;\n        for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(nums[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(nums[time+time2] == nums[time]+1){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time+time2+time3] == nums[time]+2){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            break;\n                            \n                        }\n                        \n                        else if(nums[time] == nums[time+time2]){\n                            \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time] == nums[time+time2+time3]){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            return setcount;\n    }\n    \n}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint[] intHairetsuNum = new int[9]; \n\t\tString[] strHairetsuNum = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString[] strHairetsuColor = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°??????????´???¨\n\t\t\t\t\t\n\t\t\t\t\tintHairetsuNum = new int[9]; \n\t\n\t\t\t\t\tstrHairetsuNum = new String[9];\n\t\t\n\t\t\t\t\n\t\t\t\t\tstrHairetsuColor = new String[9];\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args){\n\tScanner sc = new Scanner(System.in);\n\tint T = sc.nextInt();\n\tint[] hn;\n\tchar[] hc;\n\tint d, r=0, b=0, g=0, rf=0, bf=0, gf=0, n, rcount=0, bcount=0, gcount=0, count=0;\n\tchar c;\n\thn = new int[9];\n\thc = new char[9];\n\tfor(int i=0;i<T;i++){\n\t    for(int j=0;j<9;j++) hn[j] = sc.nextInt();\n\t    for(int j=0;j<9;j++){\n\t\tString s = sc.next();\n\t\thc[j] = s.charAt(0);\n\t    }\n\t    for(int j=0;j<9;j++){\n\t\tfor(int k=0;k<8-j;k++){\n\t\t    if(hn[k]>hn[k+1]){\n\t\t\td=hn[k]; hn[k]=hn[k+1]; hn[k+1]=d;\n\t\t\tc=hc[k]; hc[k]=hc[k+1]; hc[k+1]=c;\n\t\t    }\n\t\t}\n\t    }\n\t    for(int j=0;j<9;j++){\n\t\tif(hc[j]=='R'){\n\t\t    n = hn[j]-r;\n\t\t    if(n==0){\n\t\t\tif(rf!=1) rcount=1;\n\t\t\trcount++;\n\t\t\trf=1;\n\t\t    }else if(n==1){\n\t\t\tif(rf!=2) rcount=1;\n\t\t\trcount++;\n\t\t\trf=2;\n\t\t    }else{\n\t\t\trcount=0;\n\t\t\trf=0;\n\t\t    }\n\t\t    if(rcount==3){\n\t\t\tcount++;\n\t\t\trcount=0;\n\t\t    }\n\t\t    r=hn[j];\n\t\t}else if(hc[j]=='B'){\n\t\t    n = hn[j]-b;\n\t\t    if(n==0){\n\t\t\tif(bf!=1) bcount=1;\n\t\t\tbcount++;\n\t\t\tbf=1;\n\t\t    }else if(n==1){\n\t\t\tif(bf!=2) bcount=1;\n\t\t\tbcount++;\n\t\t\tbf=2;\n\t\t    }else{\n\t\t\tbcount=0;\n\t\t\tbf=0;\n\t\t    }\n\t\t    if(bcount==3){\n\t\t\tcount++;\n\t\t\tbcount=0;\n\t\t    }\n\t\t    b=hn[j];\n\t\t}else if(hc[j]=='G'){\n\t\t    n = hn[j]-g;\n\t\t    if(n==0){\n\t\t\tif(gf!=1) gcount=1;\n\t\t\tgcount++;\n\t\t\tgf=1;\n\t\t    }else if(n==1){\n\t\t\tif(gf!=2) gcount=1;\n\t\t\tgcount++;\n\t\t\tgf=2;\n\t\t    }else{\n\t\t\tgcount=0;\n\t\t\tgf=0;\n\t\t    }\n\t\t    if(gcount==3){\n\t\t\tcount++;\n\t\t\tgcount=0;\n\t\t    }\n\t\t    g=hn[j];\n\t\t}\n\t    }\n\t    if(count==3) System.out.println(\"1\");\n\t    else System.out.println(\"0\");\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????????????????????\n\t\tcardSort(cardArr);\n\n\t\t// ??????????¨?????????????????????°??????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1+1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2+1; cnt3 < cardArr.size() ; cnt3++) {\n\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber()==cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber()==cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t\tresult++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result >= 3 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\n\t\t\tRummy rummy = new Rummy(cardNum, cardColor);\n\n\t\t\tint[][] hadCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\tint point = 0;\n\n\t\t\tpoint += rummy.sameNumberCheck(hadCard);\n\n\t\t\tpoint += rummy.continuousNumberCheck(hadCard);\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\t// ?????£?????????\n\tint[] cardNum;\n\tString[] cardColor;\n\n\t// ?????????????????????\n\tRummy(int[] cardNum, String[] cardColor){\n\n\t\tthis.cardNum = cardNum;\n\t\tthis.cardColor = cardColor;\n\n\t}\n\n\t// ???????????????????????????????????£??????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\tint[][] hasCard = new int[3][9];\n\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\tfor(int j = 1; j < 9; j++) {\n\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\tpoint++;\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\t\tint continuousCount = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\npublic class Main {\n\tpublic static void main (String[] args)\n\t{\n\t\tBufferedReader input = new BufferedReader (new InputStreamReader (System.in));\n\t\t\n\t\tString setTotalStr = input.readLine();\n\t\t\n\t\tint setTotal = Integer.parseInt(setTotalStr);\n\t\t\n\t\tint cardTotal = 9;\n\t\t\n\t\tString[][] cardInfoNumStr = new String[setTotal][9];\n\t\t\n\t\tint[][] cardInfoNum = new int[setTotal][cardTotal];\n\t\t\n\t\tString[][] cardInfoCol = new String[setTotal][9];\n\t\t\n\t\t//データをキーボードで入力し、配列に代入する\n\t\tfor(int set = 0; set < setTotal; set++)\n\t\t{\n\t\t\tcardInfoNumStr[set] = input.readLine().split(\" \");\n\t\t\t\n\t\t\tfor(int num = 0; num < cardTotal; num++)\n\t\t\t\tcardInfoNum[set][num] = Integer.parseInt(cardInfoNumStr[set][num]);\n\t\t\t\n\t\t\tcardInfoCol[set] = input.readLine().split(\" \");\n\t\t}\n\t\t\n\t\tint win = 0;\n\t\t\n\t\t//勝利条件を満たしているかどうかをset回行う\n\t\tfor(int set = 0; set < setTotal; set++, win = 0)\n\t\t{\t\n\t\t\t//1セット目を見つける\n\t\t\tfor(int num2nd = 1; (num2nd < cardTotal - 1) &&  (win == 0); num2nd++)\n\t\t\t{\n\t\t\t\tfor(int num3rd = 2; (num3rd < cardTotal) && (win == 0); num3rd++)\n\t\t\t\t{\n\t\t\t\t\tif(((cardInfoNum[set][0] == cardInfoNum[set][num2nd] && cardInfoNum[set][0] == cardInfoNum[set][num3rd])\n\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 2)\n\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd]))))\n\t\t\t\t\t{\n\t\t\t\t\t\tint cardTotal2nd = cardTotal -3;\n\t\t\t\t\t\t\n\t\t\t\t\t\tint[] cardInfoNum2nd = new int[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tString[] cardInfoCol2nd = new String[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tint insertNum = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける準備\n\t\t\t\t\t\tfor(int num = 1; num < cardTotal; num++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(!(num == num2nd || num == num3rd))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcardInfoNum2nd[insertNum] = cardInfoNum[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcardInfoCol2nd[insertNum] = cardInfoCol[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける\n\t\t\t\t\t\tfor(int num2set2nd = 1; (num2set2nd < cardTotal2nd - 1) && (win == 0); num2set2nd++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor(int num2set3rd = 2; (num2set3rd < cardTotal2nd) && (win == 0); num2set3rd++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd])\n\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd]))))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint cardTotal3rd = cardTotal2nd -3;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tint[] cardInfoNum3rd = new int[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tString[] cardInfoCol3rd = new String[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tinsertNum = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//3セット目を見つける準備\n\t\t\t\t\t\t\t\t\tfor(int num = 1; num < cardTotal2nd; num++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif(!(num == num2set2nd || num == num2set3rd))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcardInfoNum3rd[insertNum] = cardInfoNum2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tcardInfoCol3rd[insertNum] = cardInfoCol2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//勝利条件を満たしているか確かめる\n\t\t\t\t\t\t\t\t\tif(((cardInfoNum3rd[0] == cardInfoNum3rd[1] && cardInfoNum3rd[0] == cardInfoNum3rd[2])\n\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2]))))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twin = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(win);\n\t\t}\n\t}\n}\n\n\n//かかった時間：6時間程\n"
  },
  {
    "language": "Java",
    "code": "class Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new int[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tC[j*2][i] = scan.nextChar();\n\t\t\t}\n\t\t}\n\t\t\n\t\tChar coler[]={'R','G','B'};\n\t\t\n\t\t\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tSystem.setIn(new FileInputStream(\"src/aoj2102/input.txt\"));\n\t\t\tSystem.setOut(new PrintStream(new FileOutputStream(\"src/aoj2102/result.txt\")));\n\t\t} catch (FileNotFoundException e) {\n\t\t}\n\t\tnew Main().run();\n\t}\n\n\n\n\tScanner sc;\n\tvoid run() {\n\t\tsc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T-->0) {\n\t\t\tint[] num = new int[9];\n\t\t\tString colors = \"RGB\";\n\n\t\t\tint[][] hand = new int[3][9];\n\t\t\tfor (int i = 0; i < 9; i++) num[i] = sc.nextInt() - 1;\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tString coler = sc.next();\n\t\t\t\tint idx = colors.indexOf(coler.charAt(0));\n\t\t\t\thand[idx][num[i]]++;\n\t\t\t}\n\n\t\t\tint done = 0;\n\t\t\tfor (int coler = 0; coler < 3; coler++) {\n\t\t\t\tfor (int i = 0; i + 2 < 9; i++) while (hand[coler][i] > 0 && hand[coler][i+1] > 0 && hand[coler][i+2] > 0) {\n\t\t\t\t\thand[coler][i]--; hand[coler][i+1]--; hand[coler][i+2]--;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\t\t\t\tfor (int i = 0; i < 9; i++) while (hand[coler][i] >= 3){\n\t\t\t\t\thand[coler][i] -= 3;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tSystem.out.println(done == 9 ? 1 : 0);\n\t\t}\n\t}\n\n\n\tvoid tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] red = new int[9];\n\t\tint[] blue = new int[9];\n\t\tint[] green = new int[9];\n\t\tint r, g, b;\n\t\tint[] numR = new int[10];\n\t\tint[] numG = new int[10];\n\t\tint[] numB = new int[10];\n\t\tchar c;\n\t\tint count;\n\t\tint t = sc.nextInt();\n\t\tfor(int k = 0; k < t; k++){\n\t\t\tr = 0;\n\t\t\tg = 0;\n\t\t\tb = 0;\n\t\t\tfor(int i = 1; i <= 9; i++){\n\t\t\t\tnumR[i] = 0;\n\t\t\t\tnumG[i] = 0;\n\t\t\t\tnumB[i] = 0;\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tred[r] = n[i];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tgreen[g] = n[i];\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tblue[b] = n[i];\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\ti = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(numR, red, r);\n\t\t\tsort(numG, green, g);\n\t\t\tsort(numB, blue, b);\n\t\t\tcount += set(numR) + set(numG) + set(numB);\t\t\t\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] num, int[] n, int m){\n\t\tfor(int i = 0; i < m; i++){\n\t\t\tfor(int j = 1; j <= 9; j++){\n\t\t\t\tif(n[i] == j)\n\t\t\t\t\tnum[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tstatic int set(int[] num){\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tfor(int k = 0; k < 3; k++){\n\t\t\t\tif(num[i] >= 3){\n\t\t\t\t\tnum[i] -= 3;\n\t\t\t\t\tcount++;\n\t\t\t\t}else\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1; i <= 7; i++){\n\t\t\tif(num[i] >= 1 && num[i+1] >= 1 && num[i+2] >= 1){\n\t\t\t\tnum[i]--;\n\t\t\t\tnum[i+1]--;\n\t\t\t\tnum[i+2]--;\n\t\t\t\tcount++;\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n    int T;\n    int[] number;\n    ArrayList<Integer> r,g,b;\n\n    void solve(){\n\tScanner sc = new Scanner(System.in);\n\tT = sc.nextInt();\n\twhile(T-->0){\n\t    number = new int[9];\n\t    for(int i=0; i<9; i++)number[i] = sc.nextInt();\n\t    r = new ArrayList<Integer>();\n\t    g = new ArrayList<Integer>();\n\t    b = new ArrayList<Integer>();\n\t    for(int i=0; i<9; i++){\n\t\tchar c = sc.next().charAt(0);\n\t\tif(c=='R')r.add(number[i]);\n\t\tif(c=='G')g.add(number[i]);\n\t\tif(c=='B')b.add(number[i]);\n\t    }\n\n\t    int ans = 1;\n\t    if(r.size()%3!=0 || g.size()%3!=0 || b.size()%3!=0){\n\t\tans = 0;\n\t    }else{\n\t\tint[] R = new int[r.size()];\n\t\tint[] G = new int[g.size()];\n\t\tint[] B = new int[b.size()];\n\t\tfor(int i=0; i<r.size(); i++)R[i] = r.get(i);\n\t\tfor(int i=0; i<g.size(); i++)G[i] = g.get(i);\n\t\tfor(int i=0; i<b.size(); i++)B[i] = b.get(i);\n\t\tArrays.sort(R);\n\t\tArrays.sort(G);\n\t\tArrays.sort(B);\n\t\tif(r.size()>0){\n\t\t    for(int i=0; i<r.size(); i+=3){\n\t\t\tif(R[i]==R[i+1] && R[i+1]==R[i+2])continue;\n\t\t\tif(R[i+1]-R[i]==1 && R[i+2]-R[i+1]==1)continue;\n\t\t\tans = 0;\n\t\t    }\n\t\t}\n\t\tif(g.size()>0){\n\t\t    for(int i=0; i<g.size(); i+=3){\n\t\t\tif(G[i]==G[i+1] && G[i+1]==G[i+2])continue;\n\t\t\tif(G[i+1]-G[i]==1 && G[i+2]-G[i+1]==1)continue;\n\t\t\tans = 0;\n\t\t    }\n\t\t}\n\t\tif(b.size()>0){\n\t\t    for(int i=0; i<b.size(); i+=3){\n\t\t\tif(B[i]==B[i+1] && B[i+1]==B[i+2])continue;\n\t\t\tif(B[i+1]-B[i]==1 && B[i+2]-B[i+1]==1)continue;\n\t\t\tans = 0;\n\t\t    }\n\t\t}\n\t    }\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static void main(String[] args){\n\tnew Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Iterator;\nimport java.util.Scanner;\nimport java.util.LinkedHashMap;\n\nclass Deck{\n    private LinkedHashMap<Integer, Integer> frequency = new LinkedHashMap<>();\n    public Deck(){\n        for (int i = 1; i <= 9; i++){\n            frequency.put(i, 0);\n        }\n    }\n\n    public void add(int i){\n        frequency.replace(i, frequency.get(i)+1);\n    }\n\n    public int consec(){\n        int sets = 0;\n        for (int k: frequency.values()){\n            sets += (k >= 3)? 1:0;\n        }\n        return sets;\n    }\n\n    public int row(){\n        int sets = 0;\n        Iterator<Integer> iter = frequency.values().iterator();\n        int first = iter.next(), mid = iter.next();\n        while(iter.hasNext()){\n            int tmp = iter.next();\n            if (tmp >= 1 && mid == 1 && first >= 1) sets++;\n            first = mid;\n            mid = tmp;\n        }\n        return sets;\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int k = sc.nextInt();\n        for (int i = 0; i < k; i++) {\n            LinkedHashMap<Character, Deck> colorDeck = new LinkedHashMap<>();\n            colorDeck.put('R', new Deck()); colorDeck.put('G', new Deck()); colorDeck.put('B', new Deck());\n            int number_list[] = new int[9];\n            for (int j = 0; j < 9; j++) number_list[j] = sc.nextInt();\n            for (int j = 0; j < 9; j++) colorDeck.get(sc.next().charAt(0)).add(number_list[j]);\n            int sets = 0;\n            for (Deck deck: colorDeck.values()) sets  += deck.consec() + deck.row();\n            System.out.println((sets >= 3)? 1:0);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main{\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\t//???CheckResult????????????????§?\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t@SuppressWarnings(\"resource\")\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tint number[] = new int[9];\n\t\tString color[] = new String[9];\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tnumber[count1] = scan.nextInt();\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tcolor[count1] = scan.next();\n\t\t\t}\n\n\t\t\t// ???????????????????????????????????????????????°?????°?????£??????true??§?¬?????????????\n\t\t\tColorCountResult c = new ColorCountResult();\n\n\t\t\t// ?????????????????? store???????????????????????¨??????color_count??????????????????\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tc.colorCount(color[count1]);\n\t\t\t}\n\n\t\t\t// ???????????? ??????????????°??§????????°true???\n\t\t\tboolean flg = c.isColorResult();\n\n\t\t\t// ???????????????true?????´????????°???????????? / false?????´??????0?????????\n\t\t\tif (flg) {\n\t\t\t\tCheckResult ck = new CheckResult();\n\t\t\t\t\n\t\t\t\t//R(??¬??????????????????\n\t\t\t\t//9???color?????????????¢???????R??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"R\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.numberCheck();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg1 = ck.isNumberResult();\n\t\t\t\t\n\t\t\t\t//G(??°?????????????????????\n\t\t\t\t//9???color?????????????¢???????G??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"G\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.numberCheck();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg2 = ck.isNumberResult();\n\t\t\t\t\n\t\t\t\t//B(?????????????????????\n\t\t\t\t//9???color?????????????¢???????B??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"B\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.numberCheck();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg3 = ck.isNumberResult();\n\n\t\t\t\t// ?????? R(flg1)??¨G(flg2)??¨B(flg3)?????¨???true?????¨???1?????????\n\t\t\t\tif (flg1 & flg2 & flg3) {\n\t\t\t\t\tsb.append(\"1\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"0\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// --------------------color_cout?????????------------------------------------\n\n// ????????°?????°???????????????\nclass ColorCountResult {\n\n\tprivate int r = 0;\n\tprivate int b = 0;\n\tprivate int g = 0;\n\t\n\t//r b g??????????????????????????????????????????\n\tpublic void colorCount(String color) {\n\t\tif (color.equals(\"R\")) {\n\t\t\tr++;\n\t\t} else if (color.equals(\"B\")) {\n\t\t\tb++;\n\t\t} else if (color.equals(\"G\")) {\n\t\t\tg++;\n\t\t}\n\t}\n\n\t// color?????\\??????\n\tpublic boolean isColorResult() {\n\t\t// ????????????????????????????????°??§????????¨???true?????????\n\t\treturn (r % 3 == 0) & (b % 3 == 0) & (g % 3 == 0);\n\t}\n\n}\n\n// --------------------check?????????------------------------------------\n\nclass CheckResult {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\tfinal static int COLUMN_NUMBER = 9;\n\n\tList<Integer> number_list = new ArrayList<Integer>();\n\n\tprivate int[] number = new int[COLUMN_NUMBER];\n\t\n\t//????????¨??????????????°???????????????\n\tprivate int x = 0;\n\t\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tprivate int[] num = new int[COLUMN_NUMBER];\n\t// int num[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\n\t// ??°????????\\??????\n\tpublic void numberStore(int number) {\n\t\tnumber_list.add(number);\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t\tx++;\n\t}\n\n\t// ??°??????????????????????????????????´?\n\tpublic void numberSort() {\n\t\tCollections.sort(number_list);\n\t\tfor (int count = 0; count < x; count++) {\n\t\t\tnumber[count] = number_list.get(count);\n\t\t}\n\t\t//?????????????????????\n\t\tnumber_list.clear();\n\t\t//????????¨??????????????°????????????\n\t\tx = 0;\n\t}\n\n\tpublic void numberCheck() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < COLUMN_NUMBER; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// ?????????true ??? false??§??????\n\tpublic boolean isNumberResult() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\tboolean ret = true;\n\t\tfor(int n : num){\n\t\t\tif (n != 0){\n\t\t\t\tret = false;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "package Rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tString ans = \"\";\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\t\tif(R.size()%3 != 0 || G.size()%3 != 0 || B.size()%3 != 0){\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\t\t\n\n\t\tCollections.sort(R);\n\t\tcnt += numSearch(R);\n\t\t\n\t\tCollections.sort(G);\n\t\tcnt += numSearch(G);\n\t\t\n\t\tCollections.sort(B);\n\t\tcnt += numSearch(B);\n\t\t\n\t\tif(cnt == 3){\n\t\t\tSystem.out.println(\"1\");\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t}\n\t}\n\n\n\tprivate static int numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tswitch(r.size()){\n\t\tcase 3:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return i++;\n\t\t\tbreak;\n\n\t\tcase 6:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif(i == 2){\n\t\t\t\treturn i;\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\tcase 9:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif( r.get(6) == r.get(7) && r.get(6) == r.get(8) ) i++;\n\t\t\tif( r.get(6) == r.get(7)-1 && r.get(6) == r.get(8)-2 ) i++;\n\t\t\tif(i == 3){\n\t\t\t\treturn i;\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint r, g, b;\n\t\tchar c;\n\t\tint count;\n\t\tint t = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tint[] red = new int[9];\n\t\t\tint[] blue = new int[9];\n\t\t\tint[] green = new int[9];\n\t\t\tint[][] R = new int[10][10];\n\t\t\tint[][] G = new int[10][10];\n\t\t\tint[][] B = new int[10][10];\n\t\t\tint[] numR = new int[10];\n\t\t\tint[] numG = new int[10];\n\t\t\tint[] numB = new int[10];\n\t\t\tr = 0;\n\t\t\tg = 0;\n\t\t\tb = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tred[r] = n[j];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tgreen[g] = n[j];\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tblue[b] = n[j];\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tj = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(R, numR, red, r);\n\t\t\tsort(G, numG, green, g);\n\t\t\tsort(B, numB, blue, b);\n\t\t\tcount += count(R, numR) + count(G, numG) + count(B, numB);\t\t\t\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[][] C, int[] numC, int[] color, int c){\n\t\tfor(int i = 0; i < c; i++){\n\t\t\tfor(int j = 1; j <= 9; j++)\n\t\t\t\tif(color[i] == j){\n\t\t\t\t\tC[j][++numC[j]] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tstatic int count(int[][] C, int[] numC){\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tfor(int k = 0; k < 3; k++){\n\t\t\t\tif(numC[i] >= 3){\n\t\t\t\t\tnumC[i] -= 3;\n\t\t\t\t\tcount++;\n\t\t\t\t}else\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j = numC[i]+1; j <= 9; j++)\n\t\t\t\tC[i][j] = 0;\n\t\t}\n\t\tfor(int j = 1; j <= 2; j++){\n\t\t\tfor(int i = 1; i <= 7; i++){\n\t\t\t\tif(C[i][j] == 1 && C[i+1][j] == 1 && C[i+2][j] == 1){\n\t\t\t\t\tcount++;\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Rummy {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(redList) && Confirm(redList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        // 長さ3の時\n        if (len / 3 == 1) {\n            if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n                return true;\n            } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        // 長さ6の時\n        if (len / 3 == 2) {\n            for (int i = 0; i < 4; i++) {\n                for (int j = i + 1; j < 5; j++) {\n                    for (int k = j + 1; j < 6; k++) {\n                        if (list.get(i) == list.get(j) && list.get(j) == list.get(k)) {\n                            return true;\n                        } else if (list.get(i) + 1 == list.get(j) && list.get(j) + 1 == list.get(k)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n\n        boolean finalflg0 = false;\n        boolean finalflg1 = false;\n        boolean finalflg2 = false;\n\n        // 長さ9の時\n        for (int i = 0; i < Math.pow(3, 9); i++) {\n\n            int flg0 = 0;\n            int flg1 = 0;\n            int flg2 = 0;\n\n            int last0 = 0;\n            int last1 = 0;\n            int last2 = 0;\n\n            for (int j = 0; j < 9; j++) {\n                int nannbannme = 0;\n                int tmp = i;\n                for (int k = 0; k < j; k++) {\n                    nannbannme++;\n                    tmp /= 3;\n                }\n\n                switch (tmp % 3) {\n                case 0:\n                    if (last0 == list.get(nannbannme)) {\n                        if (flg0 == 1) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 1;\n                        }\n                    }\n\n                    if (last0 + 1 == list.get(nannbannme)) {\n                        if (flg0 == 2) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 2;\n                        }\n                    }\n\n                    last0 = list.get(nannbannme);\n                    break;\n                case 1:\n                    if (last1 == list.get(nannbannme)) {\n                        if (flg1 == 1) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 1;\n                        }\n                    }\n\n                    if (last1 + 1 == list.get(nannbannme)) {\n                        if (flg1 == 2) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 2;\n                        }\n                    }\n\n                    last1 = list.get(nannbannme);\n\n                    break;\n                case 2:\n                    if (last2 == list.get(nannbannme)) {\n                        if (flg2 == 1) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 1;\n                        }\n                    }\n\n                    if (last2 + 1 == list.get(nannbannme)) {\n                        if (flg2 == 2) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 2;\n                        }\n                    }\n\n                    last2 = list.get(nannbannme);\n\n                    break;\n                }\n            }\n\n        }\n\n        return (finalflg1 && finalflg2 && finalflg0);\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t;\n\t\tint[] n = new int[9];\n\t\tchar[] c = new char[9];\n\t\tint tempInt;\n\t\tchar tempChar;\n\t\tint count;\n\t\tt = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tc[j] = sc.next().charAt(0);\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tfor(int k = j+1; k < 9; k++){\n\t\t\t\t\tif(n[j] > n[k]){\n\t\t\t\t\t\ttempInt = n[j];\n\t\t\t\t\t\tn[j] = n[k];\n\t\t\t\t\t\tn[k] = tempInt;\n\t\t\t\t\t\ttempChar = c[j];\n\t\t\t\t\t\tc[j] = c[k];\n\t\t\t\t\t\tc[k] = tempChar;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 7; j++){\n\t\t\t\tif((c[j] == c[j+1]) && (c[j+1] == c[j+2])){\n\t\t\t\t\tif((n[j] == n[j+1]) && (n[j+1] == n[j+2])){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj += 2;\n\t\t\t\t\t}else if((n[j+2] - n[j+1]) == 1 && (n[j+1] - n[j]) == 1){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((count == 3) ? 1 : 0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] red = new int[9];\n\t\tint[] blue = new int[9];\n\t\tint[] green = new int[9];\n\t\tint r, g, b;\n\t\tint[][] R = new int[10][10];\n\t\tint[][] G = new int[10][10];\n\t\tint[][] B = new int[10][10];\n\t\tint[] numR = new int[10];\n\t\tint[] numG = new int[10];\n\t\tint[] numB = new int[10];\n\t\tchar c;\n\t\tint count;\n\t\tint t = sc.nextInt();\n\t\tfor(int k = 0; k < t; k++){\n\t\t\tr = 0;\n\t\t\tg = 0;\n\t\t\tb = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int i = 1; i <= 9; i++){\n\t\t\t\tnumR[i] = 0;\n\t\t\t\tnumG[i] = 0;\n\t\t\t\tnumB[i] = 0;\n\t\t\t\tfor(int j = 1; j <= 9; j++){\n\t\t\t\t\tR[i][j] = 0;\n\t\t\t\t\tG[i][j] = 0;\n\t\t\t\t\tB[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tred[r] = n[i];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tgreen[g] = n[i];\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tblue[b] = n[i];\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\ti = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(R, numR, red, r);\n\t\t\tsort(G, numG, green, g);\n\t\t\tsort(B, numB, blue, b);\n\t\t\tcount += count(R, numR) + count(G, numG) + count(B, numB);\t\t\t\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[][] C, int[] numC, int[] color, int c){\n\t\tfor(int i = 0; i < c; i++){\n\t\t\tfor(int j = 1; j <= 9; j++)\n\t\t\t\tif(color[i] == j){\n\t\t\t\t\tC[j][++numC[j]] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tstatic int count(int[][] C, int[] numC){\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tfor(int k = 0; k < 3; k++){\n\t\t\t\tif(numC[i] >= 3){\n\t\t\t\t\tnumC[i] -= 3;\n\t\t\t\t\tcount++;\n\t\t\t\t}else\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j = numC[i]+1; j <= 9; j++)\n\t\t\t\tC[i][j] = 0;\n\t\t}\n\t\tfor(int j = 1; j <= 2; j++){\n\t\t\tfor(int i = 1; i <= 7; i++){\n\t\t\t\tif(C[i][j] == 1 && C[i+1][j] == 1 && C[i+2][j] == 1){\n\t\t\t\t\tcount++;\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner s = new Scanner(System.in);\n\n\n        int i,j,t;\n        String st;\n   \n        t = s.nextInt();\n        for(i=0;i<t;i++){\n            int[] num = new int[10];\n            int[] g = new int[10],b =new int[10], r =new int[10];\n            boolean ch=true;\n            for(j=0;j<9;j++)num[j]=s.nextInt();\n            for(j=0;j<9;j++){\n\n                st = s.next();\n                if(st.charAt(0)=='G')g[num[j]]++;\n                else if(st.charAt(0)=='B')b[num[j]]++;\n                else if(st.charAt(0)=='R')r[num[j]]++;\n            }\n            for(j=1;j<=9;j++){\n                if(g[j]>=3)g[j]-=3;\n                if(j<8&&g[j]==2&&g[j+1]>1&&g[j+2]>1){\n                    g[j]-=2;\n                    g[j+1]-=2;\n                    g[j+2]-=2;\n                }\n                if(j<8&&g[j]==1&&g[j+1]>0&&g[j+2]>0){\n                    g[j]--;\n                    g[j+1]--;\n                    g[j+2]--;\n                }\n                if(b[j]>=3)b[j]-=3;\n                if(j<8&&b[j]==2&&b[j+1]>1&&b[j+2]>1){\n                    b[j]-=2;\n                    b[j+1]-=2;\n                    b[j+2]-=2;\n                }\n                if(j<8&&b[j]==1&&b[j+1]>0&&b[j+2]>0){\n                    b[j]--;\n                    b[j+1]--;\n                    b[j+2]--;\n                }\n                if(r[j]>=3)r[j]-=3;\n                if(j<8&&g[j]==2&&r[j+1]>1&&r[j+2]>1){\n                    r[j]-=2;\n                    r[j+1]-=2;\n                    r[j+2]-=2;\n                }\n                if(j<8&&r[j]==1&&r[j+1]>0&&r[j+2]>0){\n                    r[j]--;\n                    r[j+1]--;\n                    r[j+2]--;\n                }\n                if(g[j]>0||b[j]>0||r[j]>0){\n                    ch = false;\n                    break;\n                }   \n            }\n            if(ch==true)System.out.println(1);\n            else System.out.println(0);\n            for(j=0;j<=9;j++){\n                g[j]=0;\n                b[j]=0;\n                r[j]=0;\n                num[j]=0;\n            }\n            ch=true;\n        }\n\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "class Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new int[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tC[j*2][i] = scan.nextChar();\n\t\t\t}\n\t\t}\n\t\t\n\t\tChar coler[]={'R','G','B'};\n\t\t\n\t\t\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\t\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\t\n\t\t\tint check = 0;\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\t\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif(check==3) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t * @return _number\n\t */\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t * @param _number ??????????????? _number\n\t */\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t * @return _colorNum\n\t */\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t * @param _colorNum ??????????????? _colorNum\n\t */\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t\n\t/**\n\t * ?????????????????????\n\t * @param color ????????¨????????????\n\t * @param num ???????????????\n\t */\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] card = new int[9];\n\t\t\tint[][] color = new int[3][9];\n\t\t\tint[] rgb = new int[3];\n\t\t\tint set = 0;\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcard[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = sc.next();\n\t\t\t\tswitch(s.charAt(0)){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcolor[0][rgb[0]] = card[j];\n\t\t\t\t\t\trgb[0]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcolor[1][rgb[1]] = card[j];\n\t\t\t\t\t\trgb[1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcolor[2][rgb[2]] = card[j];\n\t\t\t\t\t\trgb[2]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tArrays.sort(color[j]);\n\t\t\t\tfor(int k = 2; k < rgb[j]; k++){\n\t\t\t\t\tif((color[j][k] - color[j][k-1] == 0 && color[j][k-1] - color[j][k-2] == 0) || (color[j][k] - color[j][k-1] == 1 && color[j][k-1] - color[j][k-2] == 1)){\n\t\t\t\t\t\tset++;\n\t\t\t\t\t\tk += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) System.out.println(\"1\");\n\t\t\telse System.out.println(\"0\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\t\t \n\t\t //????????°???????????????\n\t\t int ans = 0;\n\t\t \n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t \n\t\t\t //????????°???????????????????????????\n\t\t\t ans = 0;\n\t\t\t \n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\t\t\t\t\t \n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt++] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°???\n\t\t\t\t\t if(work_cnt % 3 == 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[i + 1] && work[i + 1]  == work[i + 2]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t else if(work[i] + 1 == work[i + 1]  && work[i + 1] + 1 == work[i + 2]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t i += 3;\n\t\t\t\t\t\t \t}\n\t\t\t\t\t \t}\n\t\t\t\t }\n\n\t\t\t\t //3?????????????????£???????????°???1??????????????????\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\t//??\\????????°?????????\n\t\tint intLoop = scan.nextInt();\n\t\t//????¨?????´???´????¢????\n\t\tArrayList<int[]> numList = new ArrayList<int[]>();\n\t\tArrayList<String[]> colorList = new ArrayList<String[]>();\n\t\tArrayList<Integer> ansList = new ArrayList<Integer>();\n\t\t//??\\???\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint[] intNum = new int[9];\n\t\t\tString[] strCol = new String[9];\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tintNum[j] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tstrCol[j] = scan.next();\n\t\t\t}\n\t\t\tnumList.add(intNum);\n\t\t\tcolorList.add(strCol);\n\t\t}\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint intCount = 0;\n\t\t\tint[] arrayR = new int[9];\n\t\t\tint[] arrayG = new int[9];\n\t\t\tint[] arrayB = new int[9];\n\t\t\tint[] intNum = numList.get(i);\n\t\t\tString[] strCol = colorList.get(i);\n\t\t\t//RGB???????????\\?????????\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = strCol[j];\n\t\t\t\tif(\"R\".equals(s)){\n\t\t\t\t\tarrayR[intNum[j] - 1]++;\n\t\t\t\t}else if(\"G\".equals(s)){\n\t\t\t\t\tarrayG[intNum[j] - 1]++;\n\t\t\t\t}else if(\"B\".equals(s)){\n\t\t\t\t\tarrayB[intNum[j] - 1]++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t/*for(int j = 0; j < 9; j++){\n\t\t\t\tSystem.out.println((j + 1) + \" = R : \" + arrayR[j] + \" G : \" + arrayG[j] + \" B : \" + arrayB[j]);\n\t\t\t}*/\n\t\t\tfor(int j = 0; j < 7; j++){\n\t\t\t\tif(arrayR[j] != 0 && arrayR[j+1] != 0 && arrayR[j+2] !=0){\n\t\t\t\t\tarrayR[j]--;\n\t\t\t\t\tarrayR[j+1]--;\n\t\t\t\t\tarrayR[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayG[j] != 0 && arrayG[j+1] != 0 && arrayG[j+2] !=0){\n\t\t\t\t\tarrayG[j]--;\n\t\t\t\t\tarrayG[j+1]--;\n\t\t\t\t\tarrayG[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayB[j] != 0 && arrayB[j+1] != 0 && arrayB[j+2] !=0){\n\t\t\t\t\tarrayB[j]--;\n\t\t\t\t\tarrayB[j+1]--;\n\t\t\t\t\tarrayB[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayR[j] != 0 || arrayG[j] != 0 || arrayB[j] != 0){\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\t/*for(int p = 0; p < 9; p++){\n\t\t\t\tSystem.out.println((p + 1) + \" = R : \" + arrayR[p] + \" G : \" + arrayG[p] + \" B : \" + arrayB[p]);\n\n\t\t\t\t}*/\n\t\t\t\t//System.out.println(\"count : \" + intCount);\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\n\t\t\t\tif(arrayR[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayG[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayB[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(intCount == 3){\n\t\t\t\tansList.add(1);\n\t\t\t}else{\n\t\t\t\tansList.add(0);\n\t\t\t}\n\n\t\t}\n\n\t\t//??????\n\t\tfor(int i = 0; i < ansList.size(); i++){\n\t\t\tSystem.out.println(ansList.get(i));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\tString[] linearr;\n\t\tint T; \n\t\tint inx;\n\t\tint i, j, k, l, ij;\n\t\tint last;\n\t\tint f_reach;\n\t\tint[] arr_num;//??°???\n\t\tint[][] arr_color;//?????§?????????????????°???\n\t\t//int[] arr_color_cnt;\n\t\tint set = 0;\n\t\ttry{\n\t\t\tline = reader.readLine();\n\t\t\tT = Integer.parseInt(line);\n\t\t\tfor(i=0; i<T; i++){\n\t\t\t\tarr_num = new int[9];\n\t\t\t\tarr_color = new int[3][10];\n\t\t\t\tint[] arr_color_cnt = {0, 0, 0};\n\t\t\t\tf_reach = 0;\n\t\t\t\tset = 0;\n\t\t\t\t//??°?????????\n\t\t\t\tline = reader.readLine();\n\t\t\t\tlinearr = line.split(\" \");\n\t\t\t\tfor(j=0; j<9; j++){\n\t\t\t\t\tarr_num[j] = Integer.parseInt(linearr[j]);\n\t\t\t\t}\n\t\t\t\t//?????§?????????\n\t\t\t\tline = reader.readLine();\n\t\t\t\tline = line.replace(\"R\", \"0\");\n\t\t\t\tline = line.replace(\"G\", \"1\");\n\t\t\t\tline = line.replace(\"B\", \"2\");\n\t\t\t\tlinearr = line.split(\" \");\n\t\t\t\tfor(j=0; j<9; j++){\n\t\t\t\t\tinx = Integer.parseInt(linearr[j]);\n\t\t\t\t\tarr_color[inx][arr_color_cnt[inx]] = arr_num[j];\n\t\t\t\t\tarr_color_cnt[inx] ++;\n\t\t\t\t\t//System.out.println(inx+\", \"+arr_color_cnt[inx]);\n\t\t\t\t}\n\t\t\t\t//????????????????????????\n\t\t\t\tfor(k=0;k<3;k++){\n\t\t\t\t\tfor(j=0;j<=arr_color_cnt[k]-1;j++){\n\t\t\t\t\t\tfor(ij=arr_color_cnt[k]; ij>j; ij--){\n\t\t\t\t\t\t\tif(arr_color[k][ij] < arr_color[k][ij-1]){\n\t\t\t\t\t\t\t\tint _t = arr_color[k][ij];\n\t\t\t\t\t\t\t\tarr_color[k][ij] = arr_color[k][ij-1];\n\t\t\t\t\t\t\t\tarr_color[k][ij-1] = _t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//??????\n\t\t\t\tset = 0;\n\t\t\t\tfor(k=0; k<3; k++){\n\t\t\t\t\tlast = 0;\n\t\t\t\t\tf_reach = 0;\n\t\t\t\t\tfor(j=1, l=arr_color_cnt[k]+1; j<l; j++){\n\t\t\t\t\t\t/*if(arr_color[k][j] == 0){\n\t\t\t\t\t\t\tSystem.out.println(\"none\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tif(last==0){\n\t\t\t\t\t\t\tlast = arr_color[k][j];\n\t\t\t\t\t\t}else if(last == arr_color[k][j] - 1){//??£????????????\n\t\t\t\t\t\t\t//System.out.println(\"ren\");\n\t\t\t\t\t\t\tif(f_reach>=2){\n\t\t\t\t\t\t\t\t//?????????????????????????¶???????\n\t\t\t\t\t\t\t\tf_reach -= 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(f_reach%2 == 0){\n\t\t\t\t\t\t\t\tf_reach += 1;//??£????????????\n\t\t\t\t\t\t\t}else if(f_reach%2 == 1){//??£???????????????????????£?????????\n\t\t\t\t\t\t\t\t//??????\n\t\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t\t\tset ++;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tf_reach -= 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(last == arr_color[k][j]){\n\t\t\t\t\t\t\tif(f_reach>>1 %2 == 0){\n\t\t\t\t\t\t\t\tf_reach += 2;//?????????????????????\n\t\t\t\t\t\t\t}else if(f_reach>>1 %2 == 1){//???????????????\n\t\t\t\t\t\t\t\t//??????\n\t\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t\t\tset ++;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tf_reach -= 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//System.out.println(last+\", \"+arr_color[k][j]+\", \"+f_reach+\", \"+k+\", \"+j+\"::\"+set);\n\t\t\t\t\t\tlast = arr_color[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(set == 3){\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\t\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\npublic class Main{\n    public static void main(String[] args){\n        Scanner scan = new Scanner(System.in);\n        int t=scan.nextInt();\n        for(int i=0;i<t;i++){\n            boolean kkt=true;\n            ArrayList<Integer> r = new ArrayList<Integer>();\n            ArrayList<Integer> g = new ArrayList<Integer>();\n            ArrayList<Integer> b = new ArrayList<Integer>();\n            int[] a=new int[10];\n            char[] s = new char[10];\n            for(int j=0;j<9;j++){\n                a[j]=scan.nextInt();\n            }\n            for(int j=0;j<9;j++){\n                s[j]=scan.next().charAt(0);\n            }\n            for(int j=0;j<9;j++){\n                if(s[j]=='R'){\n                    r.add(a[j]);\n                }\n                else if(s[j]=='G'){\n                    g.add(a[j]);\n                }\n                else {\n                    b.add(a[j]);\n                }\n            }\n            Collections.sort(r);\n            Collections.sort(g);\n            Collections.sort(b);\n            if(r.size()%3!=0||g.size()%3!=0||b.size()%3!=0){\n                System.out.println(0);\n                continue;\n            }\n\n            ArrayList<Integer> nr = new ArrayList<Integer>();\n            ArrayList<Integer> ng = new ArrayList<Integer>();\n            ArrayList<Integer> nb = new ArrayList<Integer>();\n\n            for(int j=0;j<r.size();j++){\n                if(j<r.size()-2){\n                    if(r.get(j)==r.get(j+1)&&r.get(j)==r.get(j+2)){\n                        j+=2;\n                    }\n                    else{\n                        nr.add(r.get(j));\n                    }\n                }\n                else nr.add(r.get(j));\n            }\n            for(int j=0;j<nr.size()-2;j++){\n                if(nr.get(j)+1==nr.get(j+1)&&nr.get(j+1)+1==nr.get(j+2)){\n                    j+=2;\n                }\n                else if(j<nr.size()-5){\n                    if(nr.get(j)==nr.get(j+1)&&nr.get(j)+1==nr.get(j+2)&&nr.get(j+2)==nr.get(j+3)&&nr.get(j+3)+1==nr.get(j+4)&&nr.get(j+4)==nr.get(j+5)){\n                        j+=5;\n                    }\n                    else{\n                        kkt=false;\n                        break;\n                    }\n                }\n                else{\n                    kkt=false;\n                    break;\n                }\n            }\n            //System.out.println(g.size());\n            for(int j=0;j<g.size();j++){\n                //System.out.println(j+\" \"+g.get(j));\n                if(j<g.size()-2){\n                    if(g.get(j)==g.get(j+1)&&g.get(j)==g.get(j+2)){\n                        j+=2;\n                    }\n                    else{\n                        ng.add(g.get(j));\n                    }\n                }\n                else ng.add(g.get(j));\n            }\n            for(int j=0;j<ng.size()-2;j++){\n                if(ng.get(j)+1==ng.get(j+1)&&ng.get(j+1)+1==ng.get(j+2)){\n                    j+=2;\n                }\n                else if(j<ng.size()-5){\n                    if(ng.get(j)==ng.get(j+1)&&ng.get(j)+1==ng.get(j+2)&&ng.get(j+2)==ng.get(j+3)&&ng.get(j+3)+1==ng.get(j+4)&&ng.get(j+4)==ng.get(j+5)){\n                        j+=5;\n                    }\n                    else{\n                        kkt=false;\n                        break;\n                    }\n                }\n                else{\n                    kkt=false;\n                    break;\n                }\n            }\n            for(int j=0;j<b.size();j++){\n                if(j<b.size()-2){\n                    if(b.get(j)==b.get(j+1)&&b.get(j)==b.get(j+2)){\n                        j+=2;\n                    }\n                    else{\n                        nb.add(b.get(j));\n                    }\n                }\n                else nb.add(b.get(j));\n            }\n            for(int j=0;j<nb.size()-2;j++){\n                if(nb.get(j)+1==nb.get(j+1)&&nb.get(j+1)+1==nb.get(j+2)){\n                    j+=2;\n                }\n                else if(j<nb.size()-5){\n                    if(nb.get(j)==nb.get(j+1)&&nb.get(j)+1==nb.get(j+2)&&nb.get(j+2)==nb.get(j+3)&&nb.get(j+3)+1==nb.get(j+4)&&nb.get(j+4)==nb.get(j+5)){\n                        j+=5;\n                    }\n                    else{\n                        kkt=false;\n                        break;\n                    }\n                }\n                else{\n                    kkt=false;\n                    break;\n                }\n            }\n            if(kkt==true){\n                System.out.println(1);\n            }\n            else{\n                System.out.println(0);\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\t\n\tboolean isSequenceNumber(int[] num) {\n\t\tint temp = num[0];\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\ttemp++;\n\t\t\tif(num[r] != temp) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tboolean isMatchNumber(int[] num) {\n\t\tint first = num[0];\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] != first) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tboolean isMatchCharacter(String[] str) {\n\t\tchar first = str[0].charAt(0);\n\t\tfor(int r = 0; r < str.length; r++) {\n\t\t\tif(str[r].charAt(0) != first) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tboolean flag = true;\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int c = 0; c < 3; c++) {\n\t\t\t\tif(!((isSequenceNumber(num[c]) || isMatchNumber(num[c])) && isMatchCharacter(str[c]))) flag = false;\n\t\t\t}\n\t\t\tif(!flag) {\n\t\t\t\tflag = true;\n\t\t\t\tint[] counter = new int[3];\n\t\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(counter[0] != 3 || counter[1] != 3 || counter[2] != 3) flag = false;\n\t\t\t\tfor(int k = 0; k < 3; k++) {\n\t\t\t\t\tif(!((isSequenceNumber(num[k]) || isMatchNumber(num[k])))) flag = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<t;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k*3]==color[j][k*3+2]){\n                        color[j][k*3]=0;\n                        color[j][k*3+1]=0;\n                        color[j][k*3+2]=0;\n                    }\n                    if (color[j][k*3]==color[j][k*3+1]-1&&color[j][k*3]==color[j][k*3+2]-2){\n                        color[j][k*3]=0;\n                        color[j][k*3+1]=0;\n                        color[j][k*3+2]=0;\n                    }\n                }\n            }\n            for (int j=0;j<3&&win!=0;j++){\n                int n=color_num[j];\n                int changed=0;\n                for (int l=0;l<n/3;l++){\n                    int bef=-2;\n                    changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        if ((k==color_num[j]-2&&changed==0)||(k==color_num[j]-1&&changed<=1)) break;\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3){\n                            changed=0;\n                            bef=-2;\n                        }\n                    }\n                }\n                if (changed!=0) win=0;\n            }\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t;\n\t\tint[] n = new int[9];\n\t\tchar[] c = new char[9];\n\t\tint tempInt;\n\t\tchar tempChar;\n\t\tint count;\n\t\tt = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tc[j] = sc.next().charAt(0);\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tfor(int k = j+1; k < 9; k++){\n\t\t\t\t\tif(n[j] > n[k]){\n\t\t\t\t\t\ttempInt = n[j];\n\t\t\t\t\t\tn[j] = n[k];\n\t\t\t\t\t\tn[k] = tempInt;\n\t\t\t\t\t\ttempChar = c[j];\n\t\t\t\t\t\tc[j] = c[k];\n\t\t\t\t\t\tc[k] = tempChar;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 7; j++){\n\t\t\t\tif(c[j] == c[j+1] && c[j+1] == c[j+2]){\n\t\t\t\t\tif(n[j] == n[j+1] && n[j+1] == n[j+2]){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj += 2;\n\t\t\t\t\t}else if(n[j+2] - n[j+1] == 1 && n[j+1] - n[j] == 1){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((count == 3) ? 1 : 0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] red = new int[9];\n\t\tint[] blue = new int[9];\n\t\tint[] green = new int[9];\n\t\tint r, g, b;\n\t\tint[][] R = new int[10][10];\n\t\tint[][] G = new int[10][10];\n\t\tint[][] B = new int[10][10];\n\t\tint[] numR = new int[10];\n\t\tint[] numG = new int[10];\n\t\tint[] numB = new int[10];\n\t\tchar c;\n\t\tint count;\n\t\tint t = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tr = 0;\n\t\t\tg = 0;\n\t\t\tb = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tred[r] = n[j];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tgreen[g] = n[j];\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tblue[b] = n[j];\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tj = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(R, numR, red, r);\n\t\t\tsort(G, numG, green, g);\n\t\t\tsort(B, numB, blue, b);\n\t\t\tcount += count(R, numR) + count(G, numG) + count(B, numB);\t\t\t\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[][] C, int[] numC, int[] color, int c){\n\t\tfor(int i = 0; i < c; i++){\n\t\t\tfor(int j = 1; j <= 9; j++)\n\t\t\t\tif(color[i] == j){\n\t\t\t\t\tC[j][++numC[j]] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tstatic int count(int[][] C, int[] numC){\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tfor(int k = 0; k < 3; k++){\n\t\t\t\tif(numC[i] >= 3){\n\t\t\t\t\tnumC[i] -= 3;\n\t\t\t\t\tcount++;\n\t\t\t\t}else\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j = numC[i]+1; j <= 9; j++)\n\t\t\t\tC[i][j] = 0;\n\t\t}\n\t\tfor(int j = 1; j <= 2; j++){\n\t\t\tfor(int i = 1; i <= 7; i++){\n\t\t\t\tif(C[i][j] == 1 && C[i+1][j] == 1 && C[i+2][j] == 1){\n\t\t\t\t\tcount++;\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tint gameset = br.read();\n\n\t\tCardRummy cr = new CardRummy();\n\n\t\twhile (true) {\n\n\t\t\tfor (int i = 0; i < CardRummy.CARDPAGE; i++) {\n\t\t\t\tfor (int j = 0; j < CardRummy.ONECARDSET; j++) {\n\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\tcr.card[i][j] = br.read();\n\t\t\t\t\telse {\n\t\t\t\t\t\tswitch (br.read()) {\n\t\t\t\t\t\tcase 'R':\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.RED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'G':\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.GREEN;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'B':\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.BLUE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (gameset-- == 0) {\n\t\t\t\tcr.setCardset(cr.card);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcr.card = cr.getCardset();\n\n\t\t// game start\n\t\tint cnt = 0;\n\t\tcnt = cr.playtheGame(cr.card); // ?????????\n\t\t// game result\n\t\tif (3 <= cnt)\n\t\t\tSystem.out.println(1);\n\t\telse\n\t\t\tSystem.out.println(0);\n\t}\n\n\t}\nclass CardRummy{\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// num\n\tfinal int NUMBER0 = 0;\n\tfinal int NUMBER1 = 1;\n\tfinal int NUMBER2 = 2;\n\tfinal int NUMBER3 = 3;\n\tfinal int NUMBER4 = 4;\n\tfinal int NUMBER5 = 5;\n\tfinal int NUMBER6 = 6;\n\tfinal int NUMBER7 = 7;\n\tfinal int NUMBER8 = 8;\n\tfinal int NUMBER9 = 9;\n\n\t// color\n\tstatic final int RED = 1;\n\tstatic final int GREEN = 2;\n\tstatic final int BLUE = 3;\n\n\tint[][] card = new int[CARDPAGE][ONECARDSET];\n\tCardRummy[][] ArrCR = new CardRummy[CARDPAGE][ONECARDSET];\n\n\tpublic CardRummy() {\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tcard[i][0] = 0;\n\t\t\tcard[i][1] = card[i][0];\n\t\t}\n\t}\n\tpublic int[][] getCardset() {\n\t\treturn card;\n\t}\n\n\t// ????????????????????????????????\\??????\n\tpublic void setCardset(int [][] card) {\n\t\tthis.card = settingcardplay(card);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {// Error point\n\n\t\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\n\t\t\t\t// ?????????color???????????????\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\t// ???????????????????????????????????¨????????°?????£?¨????????????????????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// ??????color&num???????????????\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\t\t\t\t\t// ?????????????????????\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\tint cnt = 0;\n\t\t// ??????for????????????????¬??????¨???????????????\n\t\t// ex : [0][1][2] ....\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ??£????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ?????????????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][i] == cardset[0][k] - 2) {\n\t\t\t\t\t\t\t// Error point\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ???????????°????????????main????????????????????????????????????\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\tpublic static final int countMax = 30;\n\n\n\tpublic static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException\n\t{\n\t\t// TODO 自動生成されたメソッド・スタブ\n\t\tint a = Integer.parseInt(input(1)[0]);\n\t\tfor(int i = 0; i < a; i++)\n\t\t{\n\t\t\tString[][] str = {input(9), input(9)};\n\t\t\tchar[][] c = new char[9][9];\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tc[0][j] = str[0][j].toCharArray()[0];\n\t\t\t\tc[1][j] = str[1][j].toCharArray()[0];\n\t\t\t}\n\t\t\tQuickSort(c[0], 0, 8, c[1]);\n\t\t\tboolean[] b = {false, false, false, false, false, false, false, false, false};\n\t\t\tSystem.out.println(checkWin(c, 0, 0, 0, b) ? \"1\" : \"0\");\n\t\t}\n\t}\n\n\tpublic static boolean checkWin(char[][] str, int num, int select, int select2, boolean[] b)\n\t{\n\t\tboolean b2 = false;\n\t\t//if(num % 3 == 2) System.err.print(\"| \" + str[0][select] + \" \" + str[0][select2] + \" \");\n\t\tif(num % 3 == 0)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b2) return true;\n\t\t\t\t//if(num == 0) System.out.println(i);\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\tb2 = checkWin(str, num + 1, i, 0, b);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 1)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(b2) return true;\n\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t{\n\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\tb2 = checkWin(str, num + 1, select, i, b);\n\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 2)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(b2) return true;\n\t\t\t\t\tif(num == 8)\n\t\t\t\t\t{\n\t\t\t\t\t\t//if(str[0][select] == '5')System.err.println(str[0][i] + \" \" + str[0][select2] + \" \" + j);\n\t\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select2] == str[0][i]) || (j != 0 && str[0][select2] != str[0][i])) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select] == str[0][i]) || (j != 0 && str[0][select] != str[0][i])) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select2] == str[0][i]) || (j != 0 && str[0][select2] != str[0][i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//System.err.println(str[0][i] + \" \" + num + \" \" + j);\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((j == 0 && str[0][select] == str[0][i]) || (j != 0 && str[0][select] != str[0][i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//System.err.println(str[0][i] + \" \" + num + \" \" + j);\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn b2;\n\t}\n\n\tpublic static int loop(int num, int sum, int max, boolean[] b, int now, int upper)\n\t{\n\t\tint a = num;\n\t\tif(max == now)\n\t\t{\n\t\t\tint c = 0;\n\t\t\tfor(int i = 0; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) c += i;\n\t\t\t}\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tif(c + i == sum)\n\t\t\t\t{\n\t\t\t\t\t//System.err.println(sum + \" \" + c + \" \" + i);\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\ta = loop(a, sum, max, b, now + 1, i);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static int[] toIntArray(int a)\n\t{\n\t\tint b[] = new int[8];\n\t\tfor(int i = 0; i < 8; i++)\n\t\t{\n\t\t\tb[i] = (a >> (i * 3) & 0b111);\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(int[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(Integer[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tstatic void QuickSort(int[] d, int left, int right) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right, tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r);\n\t\tQuickSort(d, l, right);\n    }\n\n\tstatic void QuickSort(char[] d, int left, int right, char[] c) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right;\n\t\tchar tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\ttmp = c[l]; c[l] = c[r]; c[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r, c);\n\t\tQuickSort(d, l, right, c);\n    }\n\n\tpublic static boolean SeparateSearch(int[] a, int b, int first, int end)\n\t{\n\t\tif(end - first <= 1)\n\t\t{\n\t\t\tif(a[first] == b) return true;\n\t\t\telse if(a[end] == b) return true;\n\t\t\telse return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint temp = (end + first) / 2;\n\t\t\tif(a[temp] == b) return true;\n\t\t\telse if(a[temp] < b) return SeparateSearch(a, b, temp, end);\n\t\t\telse return SeparateSearch(a, b, first, temp);\n\t\t}\n\t}\n\n\tpublic static int GCD(int x, int y)\n\t{\n\t\tint z = Math.max(x, y) % Math.min(x, y);\n\t\tif(z == 0) return Math.min(x, y);\n\t\treturn GCD(z, Math.min(y, x));\n\t}\n\n\tpublic static int SelectionSort(int a[])\n\t{\n\t\tint Select = 0;\n\t\tfor(int j = 0; j < a.length - 1; j++)\n\t\t{\n\t\t\tint[] min = {0, Integer.MAX_VALUE};\n\t\t\tfor(int i = j; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif(min[1] > a[i])\n\t\t\t\t{\n\t\t\t\t\tmin[1] = a[i];\n\t\t\t\t\tmin[0] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j != min[0])\n\t\t\t{\n\t\t\t\tSelect++;\n\t\t\t\tswap(a, min[0], j);\n\t\t\t}\n\t\t}\n\t\treturn Select;\n\t}\n\n\tpublic static int BubbleSort(int a[])\n\t{\n\t\tint swapp = 0;\n\t\tboolean flag = true;\n\t\twhile(flag)\n\t\t{\n\t\t\tflag = false;\n\t\t\tfor(int i = 0; i < a.length - 1; i++)\n\t\t\t{\n\t\t\t\tif(a[i] > a[i+1])\n\t\t\t\t{\n\t\t\t\t\tswapp++;\n\t\t\t\t\tswap(a, i, i+1);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn swapp;\n\t}\n\n\tpublic static void swap(int[] a, int x, int y)\n\t{\n\t\ta[x] = a[x] ^ a[y];\n\t\ta[y] = a[x] ^ a[y];\n\t\ta[x] = a[x] ^ a[y];\n\t}\n\n\tpublic static String[] inputOne() throws IOException\n\t{\n\t\tString str2 = br.readLine();\n\t\tString[] str = new String[str2.length()];\n\t\tfor(int i = 0; i < str.length; i++)\n\t\t{\n\t\t\tif(i < str.length - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i, i+1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\n\tpublic static String[] input(int Num) throws IOException\n\t{\n\t\tString str[] = new String[Num];\n\t\tString str2 = br.readLine();\n\t\tint j = 0;\n\t\tfor(int i = 0; i < Num; i++)\n\t\t{\n\t\t\tif(i < Num - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j, str2.indexOf(\" \", j));\n\t\t\t\tj = str2.indexOf(\" \", j) + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\t//*/\n\n\t/*\n\n`           `            ```.(-~_````````````....-_~(?><___-``````````````.`````````````````````..__.~~~~~~~~~jI==lOXx.        ```\n`` `  `    `               .z<```````````..`.....~(+=>>>:~<<;___. ```````````````````````````...``-(_.~~~~~~~~(w===lOUI<.\n` ` `` `  `    `      `  .(!```````````````.``..~(?z>><!~``_~~~;<<-- ``````````````````````````._.`-<_.~~~~~~~:zz==zOzWOl\n`  ` `  `   `   ` ` `  .(! `````````````````...-(??;<`` ` `  `  _~<<+<-.````````.````.``````````..-._+_~~~~~::~(I==?OwOXk:\n`` ` `     `  `   `   -!``````````````````````._+==1-.```````` `   _~<<<+-....```.`````````````.``_~~(<_~~::::::zz1==wwrXX;`\n` ``` ` `    `   `  .<_``.``````````````` ` ``.(==lll&-``` `` ``````` _~(<1z-__..``.`````.``````..`_~~+<~~::::::(I+lOzkvvXk.\n` `  `   `    `  `.(!. _``````````````  `  ``` (=lttttO-``````` ` `````` _~<1Oz+--..````` .``````...~~(z_~(;:;;;;O>zttXuzwWn\n ` ` ` `   `     _~_..~```````````` ```` `````_+lltrrtlz_` `` ```` ` ` ```` _~?Ozwo-....` .~ `````.._~(=<_~;;>>>>z?ztOZuuuXW{`\n  ` ` ` `  `   .!..-(!`````````````` ` ````_-._ltrrrrrlw>``````` `` ``````````._?1zO+_...`-~_.````..-~~+z<:<>>>>>l?ztzVuuuuXR_\n    `  `    `.~~.._(> ````````````` ` ` ` ._(1_<zvrrvvwrI_```````````` `````````` _<1z<_~_._(< ````.-~~;zz<<>>>>?=?=tzWZuuuuXl\n `` ``  ` ` .<_..(zv_````` ```` .` `````._(z+zOz+OOvOwOvI__ ``````````````````````` _1+;<___:;< ```._~_:+O<<>>???===tlXyZzuZyk.`\n ` ` `` ` `.>~_.(zv<_`  ` ```` ~ `` ```._;+I~~_...~~~_~~1<~_-`````````````````````.`._<11?<.(<>_.`.._~(:;zz>????===lllXVXuuyyXl\n  `   `  `.>~~~_zI<_``` `````-~_`` ``` _;<<<~~~........_(<_~_.``` .`````````````.`..`.-(1=?<~<z;_..._::<:+Z>?>???===llXykuuXVVk.\n` ` ` ` `.<~~~_jI<~_  ``  ``.__` ``  `.<<:~~~...........~(<_:<_.``._``````````.``.`....-(l==<(1<>_..~~:><;zz????===lllXfkzuXffW[ `\n ` ` ` `.<::~(<dZ<~_ `  ``` (<_`  ```._::~~~....```````.__<<:<<_...-_.. ````.``..`.`...._1Ozz_+z+z_.~~:<<;+I????===llOWpHzuXfWkH\n `      (;:(;;juC~~  `` ```_:~`` ```._::~~~....``````````._<>;<z-...(-~__..`.............(zOt<(O>1>~_:;>?>>z????===llOWkHzXfpWqH;`\n  ` `  .;;;+>juZ<(<` ``` ` (<_  ````_~::~~~...````````````._<>>1<_-._1-_<_..`............_<OzI:Oz+O_~(>;???1z?====lltwWkHuWpbqqHb`\n     ` (;;;+?yuI~+~```````.(~~   `` ~~:~~....`.````````````._:;+z<<_.(G-(>-__.`........~..(1ww<zO<jI~(>>????==?==llttdkkSwWkqmmHM-\n      .z>?>1zuZ>(I_``.``` _:~_` ` `.~::~...````````````````` _><1z><_.jk:<1+___...~~~~.~~..<zzI+wz+X<<?>>????======ttdkbSdWqH@gg@k\n `  ``(v???jZuI;zI........_::_```` _:::~...`````````````````` <<_+11<__Oc:<+z+<__~.~~~~~~~~_1wwzzI<dI;+>>?>????===lOzWbWXXqH@@@@@g\n      jI==?dXuI+wI~~~~~~~~~::_```` (:<<~..`.````````````` ````-1__<+w<:<O<:;+zz+:~~~~~~~~~_~(wvI?z>dXz>>>?????====zIdWkSwWHM@@@@@@\n      Oll=1XZk<zyI:~::::~::::_````-;>><~.```.````````` ``````` (>.__?111zO<>_<zrw+<;<_::((<_(OvO=<;zXO<;<>>????===zzdkWXW@@@@@@@@@\n      ZlllzyyI?dV0;:;::::::;;__..._;>><..`.````.``````` ``  ``` >  ..dX0OlI<<::?OXO=??<;;;;::zvtz<:zvvI;<?>>???==zI>XWXWg@@@gggggg\n      ZttldVZZzXf0z>>>;;;::;1<_..._;>><_..`...`````````` `` `   (HW9!___+Xwc~_~<<jXAOz>>;;:;;+wOz<_ztwI;;>>>>????l<jHWH@ggggggggH@\n      OtttdfyXvXVkO??>>>>>;>+O<~~~_;>?<<__--....```` ` ` `````.J9<` ``. _1Zk+.._+<+wXXz>1&+<;+zOO>_zZzZ>;;;>>>???1>jHkHH@@@@HMMMHY\n      zrrrdVWXwXyWO????>>>>>>zz_~~~;+<<~__~<?11z+-```````  `````  ``````._<OU&(jggggHmmmewy<?zz<<! (<+O>;;;>>>>>???dkkkbbHHHHkSvI(\n    ` jrrrXy0XuZZVk=????>??>>+rz:~~<?<~` ..._(((><_`````````  ``` ``...-(jWNMMMMMMMMMMMMBMHMNm<_``` <>1<;;;;>;;>+1jgHkkkkWkWHHwvz1\n     `(trrXyVzuZZXW==?>>>?=?>>OO+::(1+((--(-__(1z_:_`````````` ````..-JdHWMMMNNMHHHHMYWB>_vM##v_...-<z+z;;;;;;:;>+dBTTUWWWUXHHzOwZ\n      .OrrwZCzuZZZWc1z>>>>1z>?ztl+_:dWWMMHHMMMNmg&+-.```` ````````` -dUC<~zHMMM@gg@@@N+.; (VU=_...._(?>=>;;;;;::+z>~(rwXC<jMMN<1wZ\n       jrrXk>(ZZZZX$<Oz>>>?l<<lltz+:<OOCz+<d#M@MM#M8:`````` ````````` `   (WHH@@@g@@@@@H: ?<_.`....~(>>1z;:;;;:<zw>~+v<<_(HMMNl_jW\n       .zwXk!.XZZZyW<(O>>>>Oz;zlllO<;1z<~(<(MHH@#MI<`````````````````````` 7YTTWHH@@@@H6_..........~<>>jc:;>>;;<zuc~~_..(WMMNNl_+z\n        (wXk~ (XXyZWs.jI>>;+w<<Ot=OO;+OA-._-dMM@MMQm,```````````````````` `-((JUHHWXwZC~......~~~~~_+<+zI;>>>>;+wuI~~_~(HM@HNN>.zO\n       ` zXW_` <wyZyW_ jz>;;jI:+rz1lz+=wk-..(UWHHMH9!``````` ``` ````````` -(UWkkWWV=~~~~~~~...~..~(<<zr>;>???>jwuC~._(HHHHHHN: (?\n     ` ``(Oy_ ` _zWZWl` ?1>;;z+;1tO+1???OZ--.(wkzXWZ!``` ``````````````` ``` `_~~`....~~~~~~~~~~.~_<<(tr<+=????zZOz(JdHHHHHH@N>  ;\n          (X}  ` _<?XW;` _<<;+O<:?Oz????<Oz__<<<<!_```````````````````````````````.......~..~.~.._<<(ztr<z=????zXQqHHMHHVHHH@H:\n           (k.`     _?Ti ``` ?jwo_<1z<+=>+O<......```````` `````` ``````````````..`.....~.~.~~.._<<~(lrZ+I==?=zwWHHHWUU0Od@@@H_\n           `j+       `  __``   1OI_~+z(:;:zz_.``````````````````````````````````.```....~.~~~.._:~.(lOvwO==???dZO<;<1OuuldgH@H_  `\n             ?!               `++zz_~<z<::(w:..```````````` ``` ``` ````````````````....~..~_-_::__jOwuuwz????dIw>;++1wuOwHWHH;`\n                               (v?><__1z<:(tz_`````````````````` ``` ``````````````.......~.._::~_(wZuZuw<+???z=wI>??=zuOwWXWH}\n               `                ?+><<__1z_~1z> ``````` ` ````````````` ````````````......__._::~.(dZZZZuX<+=?1V=z0>???zwOOyuWk$\n                            `   +=+?1<__1o_(zw+_``` ` ``` `````````````` `````````....~_(<~_:~~~_dZyyZZuX<>??zw=zX>>?=?zZlXvXWS\n                                1==111<~_1z<<zw<_````` `````` ``...``````` `` ```...._(<<~_(~~~_jZyyZZZuZ<>??zw=zXz>?=?=OtdZwX0_\n          `                   ` +=lOOl=+_~<1z<zXA+. ``` ````````````````````````..-_(<<:~~(~~_(jyyVyZZyZZ>>??zrz1dI>??=?ztdIzwX:\n                  `         `   z=lltrOz+<_(11zwwUX<--.  ` ````````````````````.-_(<::::~~:~_(jXyVVyyZyZZ?>>>Orz+wI>1????zwXzzul\n                               .z?=zttOOtzz++<?4kOwwXyXA&-..```````````````` .-(<<<:~~:~:~~_(1wXfVyyZyVXI?>;<ttz;zXz+z????OXI+XI_`\n                          `  ``(v>jOzzOOlttltrzzWOtwzZuXyZXwo+-. ````````` .(<<<::~:~_<~~~(<<1wyfyyyZyVkz?>;+zrv;+zz;z?>??zuZ>zw_.\n                              .+<:+wXz><1zltlltturwuwXzXX0uuZuuXy+-.`` --(+<<:::~~:~~(<_(<~~~<zyyyyyZyfkz>>;1lwO<<OI<jz>??1wXzzX>.\n          `                 ` (<;:+zXkXz>?=lttttwrwuwyzySzuuZZZZuZWA&(J&z<::~:~~:~:~~(_<<~~~~_jZyyyZyZWWz>>>z=Owz;zv><w????zzI1dl~\n                  `     `  ``.;;;;1wWHWWkzltrrrvvvzzwZuZXuzzuzuzuuuXXWWS<_~~:~~~~~~__+~~~~~~~~_?WyZuuZZXI??+jO=wI;?zO;jz???zrOzdI~\n                         `  .<<>;>zXHMHkkkOOrrvvvvuuXZZZuzvvzwvvuZWUC<_C_~~~~~~:~~~~(<~:~:~~~~:~_TZuzrOX0z>?zOlzX<<1Oz+z??==ztlzS_\n                          `.<:;1zzdHHHqqHHkytrrvvvzuuuuuuwrtrrrZ=7!_```-:.~~~~~~~~.(c~~:~~~~~~~~~._?CXuwrz>>?tO=zO<<zOz1????=OzzS;\n          `       `   ` ` .+:(uQkWHqqqH@@@HHwtOwwZO777??!~```  ````````(!..~~~~~~~.(~~~~:~~~~~~~~....._<?111+zlz1zw++zOz???>?zOlXz\n                        `.+<(dHHHH@Hmggg@MY!~ `````````````````````````__....~~~~.~<~~~~~~~~~~~~.~.......`.`. _~!??777zwwzz??zwrww\n                       `.z<:+WHHM#HM@HH9^````` ....`````` `` ``````````......~.~.~~<~~~~~~~~~~....~......```````````.-_<zUXAOzrzXy\n                    ` `.zz<<d@MNNNNM3~._```````_..```. ... `````````.`..`......~~~~~~~~~~~~...........``````````` .JuwXWHH@@HkkkXf\n          `       `  ` +??+zHMMNNNF_..```````` _. ``` `      ``````.```.........~~~~~~~~.........`.````````````.(twQHM@@@@@HHHMHg@\n              `  `  ` (==l=dMMMMMD...``````. `._ ``` ``````` _...`..`..`.........~~___`....`.``````````````` .(ugHMMHH@@MHHHHHHkff\n               `     (1tlluMMNMNF....`````. ` _``` ``` ``````` _~___..`......~~_`````````````````````````` .JdHHmmH@MHHHHWWpWyWHHH\n          `       ``.1wrlzdMMNN#~..__````````-.` `` ````` ```````` `___--_~~._.````````````````````````` .jXbpkmmHHHUUuzvzVUZyVfpf\n                `  .+zuwzdMMMMMK_.(> ``````` ._` `` ` `````` `````````  ``` ````````````````````` ` `  .uWbpbkHbpWUXzzZOz11>;<1zvU\n                ` .+zX0rwWMNN#Ht`.d}   .``  ~. `` ```````````` ````````` ` `` `` `````` ``````` `` ` .dWUZXyyfWU0vwwC<>;>>>>;:<zrt\n                  (=dXvXWMMNNMH% (#`   . ``._.```````` ```` ``` ` ` ` ` `  `  `  `  `` ``` ` ` ``` .dWZZXyWUXXX0VC<<(>;;;;<<<:(+wy\n          `   `` .=zXXwXHMNNN#M:.Ht  ` ~_``.~.``` `` ```````` ```` ``` ` ``  ` `` `` ``` `` ```` (XWyZyyyZXXp9C<~~~(<<:~~~_((+zwXf\n               `.+zw0rXXMNNNNNN<.wA+.` ~_``.~_```` ```````````` ``` `  `  ` ` `  ` `` ` ` ````.(HHHVVVWXWpWY>~~~~~:~~~~_:<?COVZXzu\n            ` ` (trwzzXHNNNNMNN>(wWMs_` _``.._-` ```````` `` ```  `` `` `  ` ` ``   `  ` `  .JHMHHWHmHHUY>:::~:~~~~_((><<<~~~<1Owu\n             ` (OrrwXwX#NNMMNM$_(XWMMy-`. ``.~__````````````` ``` `  ` ``` ` ` ` `` `` `  .d@M@@HHH90C;:::::;<::~~:~::::~~~~~.._<?\n          `   -wzzuuvdMMMMMM6<:(wXyWMHk,__   ._~-` ````````````  `  `` ` `  ``` ````` ..gMMMH9UYYC<<<+<<<<:::::_((_:~::::~~~~_...`\n\n\t */\n\n\n\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        int set = sc.nextInt();\n        int number[] = new int[9];\n        int Rnumber[] = new int[9];\n        int Gnumber[] = new int[9];\n        int Bnumber[] = new int[9];\n        int setcount = 0;\n        \n        for(int i = 0 ; i < set ; i++){\n            setcount = 0;\n            \n            for(int t = 0 ; t < 9 ; t++){\n                number[t] = sc.nextInt();\n            }\n            for(int c = 0 ; c < 9 ; c++){\n                String color = sc.next();\n                if(color.equals(\"R\")){\n                    Rnumber[c] = number[c];\n                }\n                else if(color.equals(\"G\")){\n                    Gnumber[c] = number[c];\n                }\n                else if(color.equals(\"B\")){\n                    Bnumber[c] = number[c];\n                }\n            }\n            \n            Arrays.sort(Rnumber);\n            Arrays.sort(Gnumber);\n            Arrays.sort(Bnumber);\n            \n            setcount += search(Rnumber);\n            setcount += search(Gnumber);\n            setcount += search(Bnumber);\n\n/*            \n            for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(Rnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Rnumber[time+time2] == Rnumber[time]+1 || Rnumber[time] == Rnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Rnumber[time+time2+time3] == Rnumber[time]+2 || Rnumber[time] == Rnumber[time+time2+time3]){\n                                    setcount++;\n                                    Rnumber[time] = 0;\n                                    Rnumber[time+time2] = 0;\n                                    Rnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Gの数字を検索\n                if(Gnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Gnumber[time+time2] == Gnumber[time]+1 || Gnumber[time] == Gnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Gnumber[time+time2+time3] == Gnumber[time]+2 || Gnumber[time] == Gnumber[time+time2+time3]){\n                                    setcount++;\n                                    Gnumber[time] = 0;\n                                    Gnumber[time+time2] = 0;\n                                    Gnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Bの数字を検索\n                if(Bnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Bnumber[time+time2] == Bnumber[time]+1 || Bnumber[time] == Bnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Bnumber[time+time2+time3] == Bnumber[time]+2 || Bnumber[time] == Bnumber[time+time2+time3]){\n                                    setcount++;\n                                    Bnumber[time] = 0;\n                                    Bnumber[time+time2] = 0;\n                                    Bnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }*/\n            \n            if(setcount == 3){\n                System.out.println(\"1\");\n            }\n            else{\n                System.out.println(\"0\");\n            }\n            \n        }\n        \n    }\n    \n    private static int search (int nums[]){\n        int setcount = 0;\n        for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(nums[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(nums[time+time2] == nums[time]+1){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time+time2+time3] == nums[time]+2){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                        else if(nums[time] == nums[time+time2]){\n                            \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time] == nums[time+time2+time3]){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            return setcount;\n    }\n    \n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\twhile (sc.hasNextLine()){\n\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 1;j < tehuda.size();j++) {\n\t\t\t\tif(!(tehuda.get(j).getColor().equals(checkColor))) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\tnum4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\t// 答えの格納場所\n\t\tArrayList<Integer> intAryAnswer = new ArrayList<Integer>();\n\n\t\t// 1行目を取得\n\t\ttry {\n\t\t\tBufferedReader insBR = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t\tString strNum = insBR.readLine();\n\n\t\t\t// DataSetNumは何回判定するか\n\t\t\tint DataSetNum = Integer.parseInt(strNum);\n\n\t\t\t//判断する回数まわす\n\t\t\tfor (int i = 0; i < DataSetNum; i++) {\n\n\t\t\t\t//カードの数字とシンボルを取得\n\t\t\t\tString strNumLine = insBR.readLine();\n\t\t\t\tString strSymbolLine = insBR.readLine();\n\n\t\t\t\t//人クラスを作成　数字とシンボルを引数に\n\t\t\t\tPlayer player = new Player(strNumLine, strSymbolLine);\n\n\t\t\t\t//勝利条件に満たせば1　満たさなければ0\n\t\t\t\tint intJugmet = player.Judgment();\n\n\t\t\t\t//答えを格納\n\t\t\t\tintAryAnswer.add(intJugmet);\n\n\t\t\t}\n\n\t\t\t// 答えが何個あるか取得\n\t\t\tint intSize = intAryAnswer.size();\n\n\t\t\t// 出力\n\t\t\tfor (int i = 0; i < intSize; i++) {\n\t\t\t\tSystem.out.println(intAryAnswer.get(i));\n\t\t\t}\n\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\n\n\t}\n\n\tpublic static class Player{\n\n\n\t\t/**\n\t\t * カードR\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardR = new ArrayList<Integer>();\n\t\tprivate int[] CardR = new int[9];\n\n\t\t/**\n\t\t * カードG\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardG = new ArrayList<Integer>();\n\t\tprivate int[] CardG = new int[9];\n\n\t\t/**\n\t\t * カードB\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardB = new ArrayList<Integer>();\n\t\tprivate int[] CardB = new int[9];\n\n\t\t/**\n\t\t * 引数を受け取り　フィールド値に格納する\n\t\t * @param strNumLine　カードの数字の羅列　例:1 2 3 4 5 6 7 8 9\n\t\t * @param strSymbolLine　カードのシンボルの羅列 例:R R R G G G B B B\n\t\t */\n\t\tPlayer(String strNumLine, String strSymbolLine) {\n\n\t\t\t// 分解\n\t\t\tString[] strAryNum = strNumLine.split(\" \");\n\n\t\t\tString[] strArySymbol = strSymbolLine.split(\" \");\n\n\t\t\tint intNum = 0;\n\n\t\t\tint intR = 0;\n\n\t\t\tint intG = 0;\n\n\t\t\tint intB = 0;\n\n\t\t\t//分解したものを振り分ける\n\t\t\tfor(int i = 0; i < strAryNum.length; i++) {\n\n\t\t\t\t//CardRとCardGとCardBを合わせて9枚になる\n\t\t\t\tif(strArySymbol[i].equals(\"R\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardR.add(intNum);\n\t\t\t\t\t CardR[intR] = intNum;\n\n\t\t\t\t\t intR++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"G\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardG.add(intNum);\n\t\t\t\t\t CardG[intG] = intNum;\n\n\t\t\t\t\t intG++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"B\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardB.add(intNum);\n\t\t\t\t\t CardB[intB] = intNum;\n\n\t\t\t\t\t intB++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\t/**\n\t\t * 勝利条件を判定する\n\t\t * @return intAnswer 勝利なら1　勝利に満たさないなら0\n\t\t */\n\t\tint Judgment() {\n\n\t\t\tArrays.sort(CardR);\n\t\t\tArrays.sort(CardG);\n\t\t\tArrays.sort(CardB);\n\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardR[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardG[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardB[a]);\n//\t\t\t}\n//\t\t\tSystem.out.println();\n\n\t\t\tCardR = pairs3Remove(CardR);\n\t\t\tCardG = pairs3Remove(CardG);\n\t\t\tCardB = pairs3Remove(CardB);\n\n\t\t\tCardR = ThreeConsecutiveNumber(CardR);\n\t\t\tCardG = ThreeConsecutiveNumber(CardG);\n\t\t\tCardB = ThreeConsecutiveNumber(CardB);\n\n\t\t\tint intNum = 0;\n\n\t\t\tfor(int a = 0; a < 9; a++) {\n\n\t\t\t\tif(CardR[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\n\t\t\t\tif(CardG[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\n\t\t\t\tif(CardB[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardR[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardG[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardB[a]);\n//\t\t\t}\n//\t\t\tSystem.out.println();\n\n\t\t\tif(intNum == 0) {\n\t\t\t\tintNum = 1;\n\t\t\t} else {\n\t\t\t\tintNum = 0;\n\t\t\t}\n\n\n\t\t\treturn intNum;\n\n\t\t}\n\n\n\n\n\t}\n\n\tpublic static int[] pairs3Remove(int[] Card) {\n\n\t\tint count = 0;\n\n\t\t//対子の３つを格納する場所\n\t\tint[] count3Toitu = new int[9];\n\n\t\tint count3ToituCount = 0;\n\n\t\tfor(int i = 0; i < 9; i++) {\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tif(Card[j] == i + 1) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tcount3Toitu[count3ToituCount] = j + 1;\n\t\t\t\t\tcount3ToituCount++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(count >= 3) {\n\n\t\t\t\tint count2 = 0;\n\n\t\t\t\tfor(int k = 0; k < 9; k++) {\n\t\t\t\t\tif(count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tint intNum = count3Toitu[k];\n\t\t\t\t\tCard[intNum - 1] = 0;\n\n\t\t\t\t\tcount2 ++;\n\t\t\t\t}\n\n\t\t\t\tcount2 = 0;\n\n\n\t\t\t}\n\t\t\tcount = 0;\n\n\t\t\tcount3ToituCount = 0;\n\n\n\t\t}\n\n\t\treturn Card;\n\n\n\t}\n\n\tpublic static int[] ThreeConsecutiveNumber(int[] Card) {\n\n\t\tint[][] count3Zyuntu = new int[3][2];\n\n\t\tint count3ZyuntuCount = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile(i < 7) {\n\n\t\t\touter:\n\t\t\twhile(true){\n\n\t\t\t\tif(k == 4) {\n\t\t\t\t\tint intNum1 = count3Zyuntu[0][1];\n\t\t\t\t\tint intNum2 = count3Zyuntu[1][1];\n\t\t\t\t\tint intNum3 = count3Zyuntu[2][1];\n\t\t\t\t\tCard[intNum1] = 0;\n\t\t\t\t\tCard[intNum2] = 0;\n\t\t\t\t\tCard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(Card);\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif(j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(Card[j] == k + i) {\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][0] = k + i;\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][1] = j;\n\t\t\t\t\tcount3ZyuntuCount++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcount3ZyuntuCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\n//Rummy\npublic class Main{\n\n\tint[] a, c;\n\tint[][] as;\n\tchar[] s;\n\t\n\tboolean dfs(int k){\n\t\tif(k==9){\n\t\t\tfor(int i=0;i<3;i++)if(s[as[i][0]]!=s[as[i][1]]||s[as[i][1]]!=s[as[i][2]])return false;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tint[] t = new int[3];\n\t\t\t\tfor(int j=0;j<3;j++)t[j]=a[as[i][j]];\n\t\t\t\tArrays.sort(t);\n\t\t\t\tif(!(t[0]==t[1]&&t[1]==t[2]||t[0]+1==t[1]&&t[1]+1==t[2]))return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(c[i]==3)continue;\n\t\t\tas[i][c[i]] = k;\n\t\t\tc[i]++;\n\t\t\tif(dfs(k+1))return true;\n\t\t\tc[i]--;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\ta = new int[9]; s = new char[9]; c = new int[3];\n\t\t\tfor(int i=0;i<9;i++)a[i]=sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++)s[i]=sc.next().charAt(0);\n\t\t\tas = new int[3][3];\n\t\t\tSystem.out.println(dfs(0)?1:0);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\tScanner scan = new Scanner(System.in);\n\n\t\t//??????????????°?????????\n\t\tint num = scan.nextInt();\n\n\t\t//??????????????±??????????????????????????°\n\t\tint[][] card= new int[2][9];\n\n\n\t\tfor(int k = 0; k < num; k++){\n\n\t\t\tfor(int j = 0; j < 2; j++){\n\t\t\t\tfor(int i = 0; i < 9; i++){\n\n\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\tcard[j][i] = scan.nextInt();\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tString color =scan.next();\n\t\t\t\t\t\tint intColor = 0;\n\t\t\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\t\t\tintColor = 11;\n\t\t\t\t\t\t}else if(\"G\".equals(color)){\n\t\t\t\t\t\t\tintColor = 12;\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tintColor = 13;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcard[j][i] = intColor;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tCard insCard = new Card();\n\t\t\tinsCard.setCard(card);\n\n\t\t\t//?????????????????????????????????\n\t\t\tinsCard.sort(card);\n\n\t\t\tcard = insCard.getCard();\n\n\t\t\tfor(int j = 0; j < 2; j++){\n\n\t\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\t//System.out.print(card[j][i] +  \" \");\n\t\t\t\t}\n\t\t\t\t//System.out.println();\n\t\t\t}\n\t\t\t//System.out.println();\n\n\n\t\t\t//????????????????????????\n\t\t\tint intCount = 0;\n\t\t\tintCount = insCard.win(card);\n\t\t\t//System.out.println(\"intCount: \" + intCount );\n\n\t\t\tif(3 <= intCount){\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\n\n\n\t}//Main??????\n\n\tstatic class Card {\n\n\t\t//?????£?????????\n\t\t//??????????????±??????????????????????????°\n\t\tprivate int[][] card = new int[2][9];\n\n\t\t//?????????????????????\n\t\tCard(){\n\n\t\t}\n\n\n\t\tpublic int[][] getCard() {\n\t\t    return card;\n\t\t}\n\n\t\t/**\n\t\t * card????¨????????????????\n\t\t * @param card card\n\t\t */\n\t\tpublic void setCard(int[][] card) {\n\t\t    this.card = card;\n\t\t}\n\n\t\t//?????????????????????(?°??????????????????????)\n\t\tpublic void sort(int[][] card){\n\n\t\t\t//?¨???????????????¨???????????????\n\t\t\t//??????????????????????????????\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++ ){\n\n\t\t\t\t\tif(card[1][j] > card[1][j+1]){\n\t\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\t\tcard[1][j] = card[1][j+1];\n\t\t\t\t\t\tcard[1][j+1] = temp;\n\t\t\t\t\t\t//??°????????\\????????????\n\t\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//?????????????°??????????????????°???????°?????????´?????\\?????????\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++){\n\t\t\t\t\t//??£????????????????????????????????????????????°????????\\????????????\n\t\t\t\t\tif(card[1][j] == card[1][j+1] && card[0][j] > card[0][j+1]){\n\n\t\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp;\n\t\t\t\t\t\t//????????\\???????????????\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tpublic int win(int[][] card){\n\n\t\t\tboolean isWin = false;\n\t\t\t//???????????¶???????????????????????????????????°\n\t\t\tint intCount = 0;\n\t\t\t//???????????°????????????????????°\n\t\t\tint i = 0;\n\t\t\tfor(i = 0; i < 7; i++){\n\n\t\t\t\tif(card[1][i] == card[1][i+1] && card[1][i+1] == card[1][i+2]){\n\n\t\t\t\t\tif(card[0][i] == card[0][i+1] && card[0][i+1] == card[0][i+2]){\n\t\t\t\t\t\t//???????????????????????????????????\\??????\n\t\t\t\t\t\ti = i+2;\n\t\t\t\t\t\tintCount++;\n\t\t\t\t\t}else if(card[0][i] == card[0][i+1]-1 && card[0][i+1] == card[0][i+2]-1){\n\t\t\t\t\t\t//???????????????????????????????????\\??????\n\t\t\t\t\t\ti = i+2;\n\t\t\t\t\t\tintCount++;\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn intCount;\n\t\t\t//System.out.println(\"intCount:\" + intCount);\n\t\t}\n\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir;\n\t\tint ig;\n\t\tint ib;\n\t\tint count;\n\t\tchar c;\n\t\tint t = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tir = 0;\n\t\t\tig = 0;\n\t\t\tib = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tj = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += count(nr, ir) + count(ng, ig) + count(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int count(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0 || r == num.length - 1) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0 || r == num.length - 1) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!Check(counter[0] % 3) || !Check(counter[1] % 3) || !Check(counter[2] % 3)) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) flag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\n\npublic class main {\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tString str;\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint turn = Integer.parseInt(br.readLine());\n\t\tfor(int i = 0; i < turn; i++){\n\t\t\tstr = br.readLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = br.readLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tif(rgbDivide(num, rgb)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tstatic boolean rgbDivide(String[] num, String[] rgb){\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tif(numSearch(R)){\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\t\n\t\t\t}\n\t\t}\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tif(numSearch(G)){\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\t\n\t\t\t}\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tif(numSearch(B)){\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tprivate static boolean numSearch(ArrayList<Integer> num) {\n\t\tint i = 0;\n\t\tif((num.get(i) + 1) == num.get(i+1) &&(num.get(i+1) + 1) == num.get(i+2)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummy(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @param result2\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ????????????????????°??????????????????\n\t\tcardNumSort(cardArr);\n\n\t\t// ???????????????????????\\?????????????????????R, G, B??????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\n\t\t// ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶??????????????????????????°???????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2) 3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * ????????§???????????????????????????for?????????????????¨????????¨?????£?§£?????????\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * ?????????????????????\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// for (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t// cardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ?????????????????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????°?????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\n\t\tboolean flg1 = false;\n\t\tboolean flg2 = false;\n\t\tboolean flg3 = false;\n\n\t\tint num1 = 0;\n\t\tint num2 = 0;\n\t\tint num3 = 0;\n\t\tint num4 = 0;\n\t\tint num5 = 0;\n\t\tint num6 = 0;\n\t\tint num7 = 0;\n\t\tint num8 = 0;\n\t\tint num9 = 0;\n\n\t\tStringBuilder sb = new StringBuilder();\n\t\tList<Integer> list_number = new ArrayList<Integer>();\n\t\tList<String> list_color = new ArrayList<String>();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_number.add(scan.nextInt());\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_color.add(scan.next());\n\t\t\t}\n\n\t\t\tint r = 0;\n\t\t\tint g = 0;\n\t\t\tint b = 0;\n\n\t\t\t// ????????°????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tswitch (list_color.get(count1)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ??????????????¨???????????????\n\t\t\tList<Integer> list_r = new ArrayList<Integer>();\n\t\t\tList<Integer> list_g = new ArrayList<Integer>();\n\t\t\tList<Integer> list_b = new ArrayList<Integer>();\n\n\t\t\t// 9???????????????????????\\?????????????????????\n\t\t\tfor (int count2 = 0; count2 < 9; count2++) {\n\t\t\t\tswitch (list_color.get(count2)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tlist_r.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tlist_g.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tlist_b.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tCollections.sort(list_r);\n\t\t\tCollections.sort(list_g);\n\t\t\tCollections.sort(list_b);\n\n\t\t\t// ???????????????????????°???????????¨???????????????\n\t\t\t//if (r > 0) {\n\n\t\t\t\t// ???????????????????????? ??????????????°??????????????\\???????????? ????????£???????????£???????????°???????????????\n\t\t\t\t// ???????????§????????¨??????????????????????????????0???????????????\n\t\t\t\t// -------list_r?????????????????????-----------------------------------------------\n\t\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t\tnum1 = 0;\n\t\t\t\tnum2 = 0;\n\t\t\t\tnum3 = 0;\n\t\t\t\tnum4 = 0;\n\t\t\t\tnum5 = 0;\n\t\t\t\tnum6 = 0;\n\t\t\t\tnum7 = 0;\n\t\t\t\tnum8 = 0;\n\t\t\t\tnum9 = 0;\n\t\t\t\t// ????????°????????????????????????????¢????\n\t\t\t\tfor (int count1 = 0; count1 < list_r.size(); count1++) {\n\t\t\t\t\tswitch (list_r.get(count1)) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnum1++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnum2++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnum3++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnum4++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnum5++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnum6++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnum7++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnum8++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnum9++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ????????§3?????????????????????\n\t\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\t\tnum1--;\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t\tnum9--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t\t// System.out.println(\"?????????????????????\");\n\t\t\t\t\t\tflg1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// -------list_r????????????????????§-----------------------------------------------\n\t\t\t//}\n\t\t\t// ???????????????????????°???????????¨???????????????\n\t\t\t//if (g > 0) {\n\t\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t\tnum1 = 0;\n\t\t\t\tnum2 = 0;\n\t\t\t\tnum3 = 0;\n\t\t\t\tnum4 = 0;\n\t\t\t\tnum5 = 0;\n\t\t\t\tnum6 = 0;\n\t\t\t\tnum7 = 0;\n\t\t\t\tnum8 = 0;\n\t\t\t\tnum9 = 0;\n\t\t\t\t// ????????°????????????????????????????¢????\n\t\t\t\tfor (int count1 = 0; count1 < list_g.size(); count1++) {\n\t\t\t\t\tswitch (list_g.get(count1)) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnum1++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnum2++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnum3++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnum4++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnum5++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnum6++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnum7++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnum8++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnum9++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ????????§3?????????????????????\n\t\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\t\tnum1--;\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t\tnum9--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t\tflg2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t//}\n\t\t\t// ???????????????????????°???????????¨???????????????\n\t\t\t//if (b > 0) {\n\n\t\t\t\t// -------list_b?????????????????????-----------------------------------------------\n\t\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t\tnum1 = 0;\n\t\t\t\tnum2 = 0;\n\t\t\t\tnum3 = 0;\n\t\t\t\tnum4 = 0;\n\t\t\t\tnum5 = 0;\n\t\t\t\tnum6 = 0;\n\t\t\t\tnum7 = 0;\n\t\t\t\tnum8 = 0;\n\t\t\t\tnum9 = 0;\n\t\t\t\t// ????????°????????????????????????????¢????\n\t\t\t\tfor (int count1 = 0; count1 < list_b.size(); count1++) {\n\t\t\t\t\tswitch (list_b.get(count1)) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnum1++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnum2++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnum3++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnum4++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnum5++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnum6++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnum7++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnum8++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnum9++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ????????§3?????????????????????\n\t\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\t\tnum1--;\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t}\n\t\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t\tnum9--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t\tflg3 = true;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// -------list_b????????????????????§-----------------------------------------------\n\t\t\t//}\n\t\t\t// ?????????\n\t\t\tlist_number.clear();\n\t\t\tlist_color.clear();\n\t\t\tlist_r.clear();\n\t\t\tlist_g.clear();\n\t\t\tlist_b.clear();\n\t\t\tif (flg1 & flg2 & flg3) {\n\t\t\t\tsb.append(\"1\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t\tflg1 = false;\n\t\t\t\tflg2 = false;\n\t\t\t\tflg3 = false;\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t\tflg1 = false;\n\t\t\t\tflg2 = false;\n\t\t\t\tflg3 = false;\n\t\t\t}\n\n\t\t}\n\t\tSystem.out.print(new String(sb));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 or defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();// clear\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(br.readLine(), br.readLine());// clear\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();// debug chk point\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);// clear\n\t\t}\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++)\n\t\t\tSystem.out.println(answer.get(i));// clear\n\t} // main end\n}// class end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}// construct end\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {// clear\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\"))\n\t\t\t\tcardR[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"G\"))\n\t\t\t\tcardG[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"B\"))\n\t\t\t\tcardB[i] = Integer.parseInt(transNum[i]);\n\t\t}\n\t}// construct end\n\n\tpublic int playtheGame() {// clear\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t//Arraylist.sort?????´??????\n\t\t//???????????´???????????????????????§??????????????????????????????????????°?????????????????????\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0)\n\t\t\tresult = 1;\n\n\t\treturn result;\n\n\t}// method end\n\n\tpublic static int[] sameNumCard(int[] card) {// clear\n\t\t//3???for??????????????????????????????\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < ONECARDSET; k++) {\n\t\t\t\t\t//??????????????????????????§????????????????????°\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]  ) {\n\t\t\t\t\t\t//?????????????????????????????????????????????\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\t//????????§???????????????\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n\n\tpublic static int[] serialNumCard(int[] card) {// clear\n\t\t//3???for??????????????????????????????\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < ONECARDSET; k++) {\n\t\t\t\t\t//??????????????????????????§???????????????????¢?????????´???\n\t\t\t\t\tif (card[i] == card[j]-1 && card[i] ==card[k]-2 ) {\n\t\t\t\t\t\t//?????????????????????????????????????????????\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\t//????????§???????????????\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n}// class end"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = Integer.parseInt(sc.nextLine());\n\n\t\tfor(int i = 0; i < T; i++){\n\t\t\tArrayList<Integer> listR = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> listG = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> listB = new ArrayList<Integer>();\n\n\t\t\tString[] strSuji = sc.nextLine().split(\" \");\n\t\t\tString[] strColor = sc.nextLine().split(\" \");\n\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tint kazu = Integer.parseInt(strSuji[j]);\n\n\t\t\t\tif (strColor[j].equals(\"R\")){\n\t\t\t\t\tlistR.add(kazu);\n\t\t\t\t}else if (strColor[j].equals(\"G\")){\n\t\t\t\t\tlistG.add(kazu);\n\t\t\t\t}else if (strColor[j].equals(\"B\")){\n\t\t\t\t\tlistB.add(kazu);\n\t\t\t\t}\n\t\t\t}\n\t\t\tCheck insCheck = new Check(listR,listG,listB);\n\n\t\t\tSystem.out.println(insCheck.checkkk());\n\t\t}\n\t\tsc.close();\n\t}\n}\n\nclass Check{\n\tArrayList<Integer> listR = new ArrayList<Integer>();\n\tArrayList<Integer> listG = new ArrayList<Integer>();\n\tArrayList<Integer> listB = new ArrayList<Integer>();\n\n\tArrayList<Integer> list1 = new ArrayList<Integer>();\n\tArrayList<Integer> list2 = new ArrayList<Integer>();\n\tArrayList<Integer> list3 = new ArrayList<Integer>();\n\n\tpublic Check(ArrayList<Integer> listR2, ArrayList<Integer> listG2, ArrayList<Integer> listB2) {\n\t\tthis.listR = listR2;\n\t\tthis.listG = listG2;\n\t\tthis.listB = listB2;\n\t}\n\n\tpublic int checkkk(){\n\t\tint ans = 0;\n\t\tint count = 0;\n\n\t\tif(0 == listR.size() % 3 && 0 == listG.size() % 3 && 0 == listB.size() % 3){\n\n\t\t\tif(listR.size() != 0){\n\t\t\t\tCollections.sort(listR);\n\n\t\t\t\tfor(int i = 0; i < listR.size(); i ++){\n\t\t\t\t\tthis.list1.add(0);\n\t\t\t\t}\n\n\t\t\t\tfor(int i = 0; i < listR.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listR.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listR.size(); k++){\n\n\t\t\t\t\t\t\tif(list1.get(i) == 0 && list1.get(j) == 0 && list1.get(k) == 0){\n\t\t\t\t\t\t\t\tif((listR.get(i) + 1) == listR.get(j)){\n\t\t\t\t\t\t\t\t\tif((listR.get(j) + 1 ) == listR.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist1.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(k,1);\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(listR.get(i) == listR.get(j)){\n\t\t\t\t\t\t\t\t\tif(listR.get(j) == listR.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist1.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist1.set(k,1);\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif(listG.size() != 0){\n\t\t\t\tCollections.sort(listG);\n\n\t\t\t\tfor(int i = 0; i < listG.size(); i ++){\n\t\t\t\t\tthis.list2.add(0);\n\t\t\t\t}\n\n\t\t\t\tfor(int i = 0; i < listG.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listG.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listG.size(); k++){\n\n\t\t\t\t\t\t\tif(list2.get(i) == 0 && list2.get(j) == 0 && list2.get(k) == 0){\n\t\t\t\t\t\t\t\tif(listG.get(i)+1 == listG.get(j)){\n\t\t\t\t\t\t\t\t\tif(listG.get(j)+1 == listG.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist2.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(k,1);\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(listG.get(i) == listG.get(j)){\n\t\t\t\t\t\t\t\t\tif(listG.get(j) == listG.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist2.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist2.set(k,1);\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif(listB.size() != 0){\n\t\t\t\tCollections.sort(listB);\n\n\t\t\t\tfor(int i = 0; i < listB.size(); i ++){\n\t\t\t\t\tthis.list3.add(0);\n\t\t\t\t}\n\n\t\t\t\tfor(int i = 0; i < listB.size(); i++){\n\t\t\t\t\tfor(int j = i + 1; j < listB.size(); j++){\n\t\t\t\t\t\tfor(int k = j + 1; k < listB.size(); k++){\n\n\t\t\t\t\t\t\tif(list3.get(i) == 0 && list3.get(j) == 0 && list3.get(k) == 0){\n\t\t\t\t\t\t\t\tif(listB.get(i)+1 == listB.get(j)){\n\t\t\t\t\t\t\t\t\tif(listB.get(j)+1 == listB.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist3.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(k,1);\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(listB.get(i) == listB.get(j)){\n\t\t\t\t\t\t\t\t\tif(listB.get(j) == listB.get(k)){\n\n\t\t\t\t\t\t\t\t\t\tlist3.set(i,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(j,1);\n\t\t\t\t\t\t\t\t\t\tlist3.set(k,1);\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(count == 3){\n\t\t\tans = 1;\n\t\t}\n\t\treturn ans;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n\n                int player = sc.nextInt();\n\n        int []number = new int[9];\n        String []color = new String[9];\n\n        for(int playerNum = 0; playerNum < player; playerNum++) {\n\n                //セット数\n                int setCount = 0;\n\n                List<Integer> R = new ArrayList<Integer>();\n            List<Integer> G = new ArrayList<Integer>();\n            List<Integer> B = new ArrayList<Integer>();\n\n                //カードの番号を格納\n                for(int cardNum = 0; cardNum < 9; cardNum++) {\n                        number[cardNum] = sc.nextInt();\n                }\n                //カードの色を格納\n                for(int cardnum = 0; cardnum < 9; cardnum++) {\n                        color[cardnum] = sc.next();\n                }\n\n                //RGBそれぞれのリストにカードの数字を格納\n                for(int CardNum = 0; CardNum < 9; CardNum++) {\n                        if(color[CardNum].equals(\"R\")) {\n                                R.add(number[CardNum]);\n                        }\n                        if(color[CardNum].equals(\"G\")) {\n                                G.add(number[CardNum]);\n                        }\n                        if(color[CardNum].equals(\"B\")) {\n                                B.add(number[CardNum]);\n                        }\n\n            }\n\n            //降順に並び替える\n            Collections.sort(R);\n            Collections.sort(G);\n            Collections.sort(B);\n\n            int origin = 0;\n\n            //Rリスト(連番)\n            for(int r = 0; r < R.size()-2; r++) {\n                origin = R.get(r);\n\n                if(origin != 0) {\n                        if(R.contains(origin + 1) && R.contains(origin + 2)) {\n                                setCount ++;\n                                R.set(R.indexOf(origin), 0);\n                                R.set(R.indexOf(origin + 1), 0);\n                                R.set(R.indexOf(origin + 2), 0);\n                        }\n                }\n            }\n\n            //Rリスト（同数字）\n            for(int r = 0; r < R.size()-2; r++) {\n                if(R.get(r) != 0) {\n                        origin = R.get(r);\n\n                        if(R.get(r + 1) == origin && R.get(r + 2) == origin) {\n                                setCount++;\n                                R.set(r, 0);\n                                R.set(r + 1, 0);\n                                R.set(r + 2, 0);\n                        }\n                }\n            }\n\n            //Gリスト(連番)\n            for(int g = 0; g < G.size()-2; g++) {\n                origin = G.get(g);\n\n                //連番確認\n                if(origin != 0) {\n                        if(G.contains(origin + 1) && G.contains(origin + 2)) {\n                                setCount ++;\n                                G.set(G.indexOf(origin), 0);\n                                G.set(G.indexOf(origin + 1), 0);\n                                G.set(G.indexOf(origin + 2), 0);\n                        }\n                }\n            }\n\n            //Gリスト（同数字）\n            for(int g = 0; g < G.size()-2; g++) {\n                if(G.get(g) != 0) {\n                        origin = G.get(g);\n\n                        if(G.get(g + 1) == origin && G.get(g + 2) == origin) {\n                                setCount++;\n                                G.set(g, 0);\n                                G.set(g + 1, 0);\n                                G.set(g + 2, 0);\n                        }\n                }\n            }\n\n            //Bリスト(連番)\n            for(int b = 0; b < B.size()-2; b++) {\n                origin = B.get(b);\n\n                //連番確認\n                if(origin != 0) {\n                        if(B.contains(origin + 1) && B.contains(origin + 2)) {\n                                setCount ++;\n                                B.set(B.indexOf(origin), 0);\n                                B.set(B.indexOf(origin + 1), 0);\n                                B.set(B.indexOf(origin + 2), 0);\n                        }\n                }\n            }\n\n            //Bリスト（同数字）\n            for(int b = 0; b < B.size()-2; b++) {\n                if(B.get(b) != 0) {\n                        origin = B.get(b);\n\n                        if(B.get(b + 1) == origin && B.get(b + 2) == origin) {\n                                setCount++;\n                                B.set(b, 0);\n                                B.set(b + 1, 0);\n                                B.set(b + 2, 0);\n                        }\n                }\n            }\n\n            if(setCount == 3) {\n                System.out.println(\"1\");\n            }\n            else {\n                System.out.println(\"0\");\n            }\n        }\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint t = in.nextInt();\n\t\tint[] deck = new int[9];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint isOK = 1;\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tdeck[j] = in.nextInt();\n\t\t\t}\n\t\t\tint colorSum = 0;\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tString color = in.next();\n\t\t\t\tdeck[j] += (\"R\".equals(color)) ? 0x100\n\t\t\t\t\t\t: (\"G\".equals(color)) ? 0x10000 : 0x1000000;\n\t\t\t\tcolorSum += deck[j];\n\t\t\t}\n\t\t\tcolorSum /= 0x100;\n\t\t\tint xFF = 0xFF;\n\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\tif ((colorSum & xFF) % 3 != 0) {\n\t\t\t\t\tisOK = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\txFF <<= 8;\n\t\t\t}\n\t\t\tif (isOK == 1) {\n\t\t\t\tArrays.sort(deck);\n\t\t\t\tint j = 0;\n\t\t\t\twhile (j < 9) {\n\t\t\t\t\tif (deck[j] + 2 < deck[j + 2]) {\n\t\t\t\t\t\tisOK = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((deck[j] == deck[j + 1] && deck[j + 1] == deck[j + 2])\n\t\t\t\t\t\t\t|| (deck[j] + 1 == deck[j + 1] && deck[j] + 2 == deck[j + 2])) {\n\t\t\t\t\t\tj += 3;\n\t\t\t\t\t} else if (j <= 3 && deck[j] + 1 == deck[j + 2]\n\t\t\t\t\t\t\t&& deck[j] + 2 == deck[j + 4]\n\t\t\t\t\t\t\t&& deck[j + 1] + 1 == deck[j + 3]\n\t\t\t\t\t\t\t&& deck[j + 1] + 2 == deck[j + 5]) {\n\t\t\t\t\t\tj += 6;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisOK = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(isOK);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str=scan.next();\n\t\t\t\tC[j*2][i] = str.toCharArray();\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.text.*;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner in = new Scanner(System.in);\n\t\tint t = in.nextInt();\n\t\tArrayList<Integer> rlist = new ArrayList<Integer>();\n\t\tArrayList<Integer> glist = new ArrayList<Integer>();\n\t\tArrayList<Integer> blist = new ArrayList<Integer>();\n\t\t\n\t\tfor(int i=0; i<9; i++){\n\t\t\trlist.add(0);\n\t\t\tglist.add(0);\n\t\t\tblist.add(0);\n\t\t}\n\t\t\n\t\t//initialize\n\t\tfor(int i=0; i<t; i++){\n\t\t\tArrayList<Integer> nums = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> mark = new ArrayList<Integer>();\n\t\t\tfor(int x=0; x<9; x++){\n\t\t\t\tnums.add(in.nextInt()-1);\n\t\t\t}\n\t\t\tfor(int x=0; x<9; x++){\n\t\t\t\tString tmp = in.next();\n\t\t\t\tif(tmp.equals(\"R\")) mark.add(0);\n\t\t\t\telse if(tmp.equals(\"G\")) mark.add(1);\n\t\t\t\telse if(tmp.equals(\"B\")) mark.add(2);\n\t\t\t}\n\t\t\t\n\t\t\tfor(int j=0; j<9; j++){\n\t\t\t\trlist.set(j,0);\n\t\t\t\tglist.set(j,0);\n\t\t\t\tblist.set(j,0);\n\t\t\t}\n\t\t\t\n\t\t\t//make matrix\n\t\t\tfor(int x=0; x<9; x++){\n\t\t\t\tswitch(mark.get(x)){\n\t\t\t\tcase 0:\n\t\t\t\t\trlist.set(nums.get(x),rlist.get(nums.get(x))+1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tglist.set(nums.get(x),glist.get(nums.get(x))+1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tblist.set(nums.get(x),blist.get(nums.get(x))+1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//check\n\t\t\tint sets = 0;\n\t\t\tfor(int z=0; z<3; z++){\n\t\t\t\tfor(int x=0; x<7; x++){\n\t\t\t\t\tif(rlist.get(x)>0 && rlist.get(x+1)>0 && rlist.get(x+2)>0){\n\t\t\t\t\t\trlist.set(x, rlist.get(x)-1);\n\t\t\t\t\t\trlist.set(x+1, rlist.get(x+1)-1);\n\t\t\t\t\t\trlist.set(x+2, rlist.get(x+2)-1);\n\t\t\t\t\t\tsets++;\n\t\t\t\t\t}\n\t\t\t\t\tif(glist.get(x)>0 && glist.get(x+1)>0 && glist.get(x+2)>0){\n\t\t\t\t\t\tglist.set(x, glist.get(x)-1);\n\t\t\t\t\t\tglist.set(x+1, glist.get(x+1)-1);\n\t\t\t\t\t\tglist.set(x+2, glist.get(x+2)-1);\n\t\t\t\t\t\tsets++;\n\t\t\t\t\t}\n\t\t\t\t\tif(blist.get(x)>0 && blist.get(x+1)>0 && blist.get(x+2)>0){\n\t\t\t\t\t\tblist.set(x, blist.get(x)-1);\n\t\t\t\t\t\tblist.set(x+1, blist.get(x+1)-1);\n\t\t\t\t\t\tblist.set(x+2, blist.get(x+2)-1);\n\t\t\t\t\t\tsets++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int z=0; z<3; z++){\n\t\t\t\tfor(int x=0; x<9; x++){\n\t\t\t\t\tif(rlist.get(x)>2){\n\t\t\t\t\t\trlist.set(x, rlist.get(x)-3);\n\t\t\t\t\t\tsets++;\n\t\t\t\t\t}\n\t\t\t\t\tif(glist.get(x)>2){\n\t\t\t\t\t\tglist.set(x, glist.get(x)-3);\n\t\t\t\t\t\tsets++;\n\t\t\t\t\t}\n\t\t\t\t\tif(blist.get(x)>2){\n\t\t\t\t\t\tblist.set(x, blist.get(x)-3);\n\t\t\t\t\t\tsets++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(sets == 3) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nimport static java.util.Arrays.sort;\n\npublic class Main {\n    public  static void  main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n\n        for(int i = 0; i< t; i++){\n            int[] num = new int[9];\n            String[] col = new String[9];\n\n            for(int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for(int j = 0; j < 9; j++)\n                col[j] = sc.next();\n\n            int countR = 0;\n            int countG = 0;\n            int countB = 0;\n\n            int[] numred = null, numgrn = null, numblue = null;\n\n            for(int j = 0; j < 9; j++){\n                if(col[j].equals(\"R\"))\n                    countR++;\n                else if(col[j].equals(\"G\"))\n                    countG++;\n                else\n                    countB++;\n            }\n\n            if(countR % 3 !=0 && countG % 3 != 0 && countB % 3 != 0){\n                System.out.println(\"0\");\n                continue;\n            }\n\n            if(countR != 0){\n                numred = new int[countR];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"R\"))\n                        numred[indexnum++] = num[j];\n                }\n                sort(numred);\n            }\n\n            if(countG != 0){\n                numgrn = new int[countG];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"G\"))\n                        numgrn[indexnum++] = num[j];\n                }\n                sort(numgrn);\n            }\n\n            if(countB != 0){\n                numblue = new int[countB];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"B\"))\n                        numblue[indexnum++] = num[j];\n                }\n                sort(numblue);\n            }\n\n            if(countR == 3){\n                if((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 6){\n                if(((numred[0] == numred[1] && numred[1] == numred[2] || numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1) && (numred[3] == numred[4] && numred[4] == numred[5] || numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 9){\n                if((((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1))  && ((numred[3] == numred[4] && numred[4] == numred[5]) || (numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1)) && ((numred[6] == numred[7] && numred[7] == numred[8]) || (numred[6] + 1 == numred[7] && numred[7] == numred[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            \n            if(countG == 3){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 6){\n                if(((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] || numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1) && (numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5] || numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 9){\n                if((((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1))  && ((numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5]) || (numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1)) && ((numgrn[6] == numgrn[7] && numgrn[7] == numgrn[8]) || (numgrn[6] + 1 == numgrn[7] && numgrn[7] == numgrn[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n\n            if(countB == 3){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 6){\n                if(((numblue[0] == numblue[1] && numblue[1] == numblue[2] || numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1) && (numblue[3] == numblue[4] && numblue[4] == numblue[5] || numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 9){\n                if((((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1))  && ((numblue[3] == numblue[4] && numblue[4] == numblue[5]) || (numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1)) && ((numblue[6] == numblue[7] && numblue[7] == numblue[8]) || (numblue[6] + 1 == numblue[7] && numblue[7] == numblue[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            System.out.println(1);\n        }\n        sc.close();\n\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tboolean flag = true;\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!(Check(counter[0] % 3) && Check(counter[1] % 3) && Check(counter[2] % 3))) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tint count = 0;//DEBUG\n\t\t\t\tfor(int i = 0; i < 3; i++) {//３つの文字セットずつ見ていく\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) {\n\t\t\t\t\t\t\t\tlist.add(num[c][k]); \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(count > 9) break;\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) { \n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;//だめなヤツがあった時点でbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    boolean checkNum(Set num1, Set num2, Set num3){\n        int i,j;\n        i = num3.num - num2.num;\n        j = num2.num - num1.num;\n        if(((i == 1) && (j == 1)) || ((i == 0) && (j == 0))){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\nclass DataComparator implements java.util.Comparator<Set>{\n    public int compare(Set o1, Set o2){\n        if(o1.color == o2.color){\n            return o1.num - o2.num;\n        }else{\n            return o1.color - o2.color;\n        }\n    }\n}\n\npublic class Rummy2{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n    Set[] card = new Set[9];\n\n    for(int i=0;i<n;i++){\n      for(int j=0;j<9;j++){ //input_numbers\n        card[j] = new Set();\n        card[j].num = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      for(int l=0;l<9;l++){  //check_color\n        switch(ch[l]){\n          case \"R\": card[l].color = 1;\n                    break;\n          case \"G\": card[l].color = 2;\n                    break;\n          case \"B\": card[l].color = 3;\n                    break;\n          default : break;\n        }\n      }\n      Arrays.sort(card, new DataComparator());\n\n/*    sort degug\n      for(int k=0;k<9;k++){\n          System.out.print(card[k].num + \" \");\n      }\n      System.out.println();\n      for(int k=0;k<9;k++){\n          System.out.print(card[k].color + \" \");\n      }\n      System.out.println();\n*/\n\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n\n      if(check1.sameColor(card[0],card[1],card[2])){\n          if(check1.checkNum(card[0],card[1],card[2])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameColor(card[3],card[4],card[5])){\n          if(check2.checkNum(card[3],card[4],card[5])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameColor(card[6],card[7],card[8])){\n          if(check3.checkNum(card[6],card[7],card[8])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    }//end_of_while\n  }//end_of_main\n}//end_of_Rummy"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\n\t\tboolean flg1 = false;\n\t\tboolean flg2 = false;\n\t\tboolean flg3 = false;\n\t\t\n\t\tint num1 = 0;\n\t\tint num2 = 0;\n\t\tint num3 = 0;\n\t\tint num4 = 0;\n\t\tint num5 = 0;\n\t\tint num6 = 0;\n\t\tint num7 = 0;\n\t\tint num8 = 0;\n\t\tint num9 = 0;\n\n\t\tStringBuilder sb = new StringBuilder();\n\t\tList<Integer> list_number = new ArrayList<Integer>();\n\t\tList<String> list_color = new ArrayList<String>();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_number.add(scan.nextInt());\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_color.add(scan.next());\n\t\t\t}\n\n\t\t\tint r = 0;\n\t\t\tint g = 0;\n\t\t\tint b = 0;\n\n\t\t\t// ????????°????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tswitch (list_color.get(count1)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t// ??????????????¨???????????????\n\t\t\tList<Integer> list_r = new ArrayList<Integer>();\n\t\t\tList<Integer> list_g = new ArrayList<Integer>();\n\t\t\tList<Integer> list_b = new ArrayList<Integer>();\n\n\t\t\t// 9???????????????????????\\?????????????????????\n\t\t\tfor (int count2 = 0; count2 < 9; count2++) {\n\t\t\t\tswitch (list_color.get(count2)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tlist_r.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tlist_g.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tlist_b.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tCollections.sort(list_r);\n\t\t\tCollections.sort(list_g);\n\t\t\tCollections.sort(list_b);\n\t\t\t\n\t\t\t//???????????????????????°???????????¨???????????????\n\t\t\tif(r>0){\n\n\t\t\t// ???????????????????????? ??????????????°??????????????\\???????????? ????????£???????????£???????????°???????????????\n\t\t\t// ???????????§????????¨??????????????????????????????0???????????????\n\t\t\t// -------list_r?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t num1 = 0;\n\t\t\t num2 = 0;\n\t\t\t num3 = 0;\n\t\t\t num4 = 0;\n\t\t\t num5 = 0;\n\t\t\t num6 = 0;\n\t\t\t num7 = 0;\n\t\t\t num8 = 0;\n\t\t\t num9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_r.size(); count1++) {\n\t\t\t\tswitch (list_r.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t// System.out.println(\"?????????????????????\");\n\t\t\t\t\tflg1 = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// -------list_r????????????????????§-----------------------------------------------\n\t\t\t}\n\t\t\t//???????????????????????°???????????¨???????????????\n\t\t\tif(g>0){\n\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\tnum1 = 0;\n\t\t\tnum2 = 0;\n\t\t\tnum3 = 0;\n\t\t\tnum4 = 0;\n\t\t\tnum5 = 0;\n\t\t\tnum6 = 0;\n\t\t\tnum7 = 0;\n\t\t\tnum8 = 0;\n\t\t\tnum9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_g.size(); count1++) {\n\t\t\t\tswitch (list_g.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\tSystem.out.println(\"??????????????????\");\n\t\t\t\t\tflg2 = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t}\n\t\t\t//???????????????????????°???????????¨???????????????\n\t\t\tif(b>0){\n\n\t\t\t// -------list_b?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\tnum1 = 0;\n\t\t\tnum2 = 0;\n\t\t\tnum3 = 0;\n\t\t\tnum4 = 0;\n\t\t\tnum5 = 0;\n\t\t\tnum6 = 0;\n\t\t\tnum7 = 0;\n\t\t\tnum8 = 0;\n\t\t\tnum9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_b.size(); count1++) {\n\t\t\t\tswitch (list_b.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\tflg3 = true;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// -------list_b????????????????????§-----------------------------------------------\n\t\t\t}\n\t\t\t// ?????????\n\t\t\tlist_number.clear();\n\t\t\tlist_color.clear();\n\t\t\tlist_r.clear();\n\t\t\tlist_g.clear();\n\t\t\tlist_b.clear();\n\t\t\tif (flg1 & flg2 & flg3) {\n\t\t\t\tsb.append(\"1\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t\tflg1 = false;\n\t\t\t\tflg2 = false;\n\t\t\t\tflg3 = false;\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\n\t\t}\n\t\tSystem.out.print(new String(sb));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tint[] n = new int[9];\n\t\t\tfor (int j = 0; j < 9; j++) n[j] = sc.nextInt();\n\t\t\tchar[] c = new char[9];\n\t\t\tint b = 0;\n\t\t\tint g = 0;\n\t\t\tint r = 0;\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tc[j] = sc.next().charAt(0);\n\t\t\t\tswitch (c[j]) {\n\t\t\t\tcase 'B':\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tfor (int k = 0; k < 8; k++) {\n\t\t\t\t\tif (c[k] > c[k + 1]) {\n\t\t\t\t\t\tint l = n[k];\n\t\t\t\t\t\tn[k] = n[k + 1];\n\t\t\t\t\t\tn[k + 1] = l;\n\t\t\t\t\t\tl = (int)c[k];\n\t\t\t\t\t\tc[k] = c[k + 1];\n\t\t\t\t\t\tc[k + 1] = (char)l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < b; j++) {\n\t\t\t\tfor (int k = 0; k < b - 1; k++) {\n\t\t\t\t\tif (n[k] > n[k + 1]) {\n\t\t\t\t\t\tint l = n[k];\n\t\t\t\t\t\tn[k] = n[k + 1];\n\t\t\t\t\t\tn[k + 1] = l;\n\t\t\t\t\t\tl = (int)c[k];\n\t\t\t\t\t\tc[k] = c[k + 1];\n\t\t\t\t\t\tc[k + 1] = (char)l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < g; j++) {\n\t\t\t\tfor (int k = b; k < b + g - 1; k++) {\n\t\t\t\t\tif (n[k] > n[k + 1]) {\n\t\t\t\t\t\tint l = n[k];\n\t\t\t\t\t\tn[k] = n[k + 1];\n\t\t\t\t\t\tn[k + 1] = l;\n\t\t\t\t\t\tl = (int)c[k];\n\t\t\t\t\t\tc[k] = c[k + 1];\n\t\t\t\t\t\tc[k + 1] = (char)l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < r; j++) {\n\t\t\t\tfor (int k = b + g; k < b + g + r - 1; k++) {\n\t\t\t\t\tif (n[k] > n[k + 1]) {\n\t\t\t\t\t\tint l = n[k];\n\t\t\t\t\t\tn[k] = n[k + 1];\n\t\t\t\t\t\tn[k + 1] = l;\n\t\t\t\t\t\tl = (int)c[k];\n\t\t\t\t\t\tc[k] = c[k + 1];\n\t\t\t\t\t\tc[k + 1] = (char)l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint judge = 0;\n\t\t\tfor (int j = 0; j < 9; j += 3) {\n\t\t\t\tif (c[j + 1] == c[j] && c[j + 2] == c[j]) {\n\t\t\t\t\tif (n[j + 1] == n[j] && n[j + 2] == n[j] || n[j + 1] == n[j] + 1 && n[j + 2] == n[j] + 2) judge++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (judge == 3)\tSystem.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\n//Rummy\npublic class main {\n\n\tint[] a, c;\n\tint[][] as;\n\tchar[] s;\n\t\n\tboolean dfs(int k){\n\t\tif(k==9){\n\t\t\tfor(int i=0;i<3;i++)if(s[as[i][0]]!=s[as[i][1]]||s[as[i][1]]!=s[as[i][2]])return false;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tint[] t = new int[3];\n\t\t\t\tfor(int j=0;j<3;j++)t[j]=a[as[i][j]];\n\t\t\t\tArrays.sort(t);\n\t\t\t\tif(!(t[0]==t[1]&&t[1]==t[2]||t[0]+1==t[1]&&t[1]+1==t[2]))return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(c[i]==3)continue;\n\t\t\tas[i][c[i]] = k;\n\t\t\tc[i]++;\n\t\t\tif(dfs(k+1))return true;\n\t\t\tc[i]--;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\ta = new int[9]; s = new char[9]; c = new int[3];\n\t\t\tfor(int i=0;i<9;i++)a[i]=sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++)s[i]=sc.next().charAt(0);\n\t\t\tas = new int[3][3];\n\t\t\tSystem.out.println(dfs(0)?1:0);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew AOJ2102().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\n\t\t//test\n\t\tCardMethod cm = new CardMethod();\n\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tcm.inputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cm.utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ??????????????????????????????????????????\n\t * @author ??????\n\t */\n\tpublic static class CardMethod {\n\n\t\t/**\n\t\t *\n\t\t *\n\t\t * @param cardArr\n\t\t * @param transNum\n\t\t * @param transColor\n\t\t */\n\t\tstatic void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t/**\n\t\t\t * ?????¶??? ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t\t *\n\t\t\t * ?????????????????¨?????¨?????????????????\\??? ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t *\n\t\t\t */\n\t\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\t\t\t// ???????????????????????£???\n\t\t\tswitch (swi) {\n\t\t\tcase \"LongNum\":\n\t\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tcase \"LongColor\":\n\t\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"??¨????????????\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\t// ??°???, ?????????????????????\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameCard(cardArr);\n\n\t\t\treturn  result = verificationCard(result, cardArr);\n\n\t\t}// utRummy????????????????????????\n\n\t\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\t/**\n\t\t\t * @Warnning ???????????????????????´??????\n\t\t\t *\n\t\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t\t */\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t/**\n\t\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t\t */\n\t\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameCard????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialCard????????????????????????\n\n\t}//???????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\t\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\t\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t\n\t\t\t// memo\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\t\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ((color.equals(\"011\"))||(color.equals(\"122\"))||(color.equals(\"022\"))) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ((color.equals(\"001\"))||(color.equals(\"112\"))||(color.equals(\"002\"))) {\n\t\t\t\t\tif ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ((color.equals(000))&&(color.equals(111))&&(color.equals(222))) {\n\t\t\t\t\tif((cardNo[0]==cardNo[1]) && ((cardNo[1]+1)==cardNo[2]) && (cardNo[2]==cardNo[3]) && (cardNo[3]==cardNo[4]) && ((cardNo[4]+1)==cardNo[5]) && (cardNo[5]==cardNo[6]) && (cardNo[6]==cardNo[7]) && ((cardNo[7]+1)==cardNo[8])) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t//System.out.println(\"color : \" + color + \"  check1 :\" + check + \" , check2 :\" + check2);\n\t\t\t\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif((check==3) || (check2==3)) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t * @return _number\n\t */\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t * @param _number ??????????????? _number\n\t */\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t * @return _colorNum\n\t */\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t * @param _colorNum ??????????????? _colorNum\n\t */\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t\n\t/**\n\t * ?????????????????????\n\t * @param color ????????¨????????????\n\t * @param num ???????????????\n\t */\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\t/**\n\t * ????????°???????????¨?????????????????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ??????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * ???????????????????????????\n\t\t\t *\n\t\t\t * @param cardArr\n\t\t\t *            ????????????????´???´???\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t/**\n\t\t\t * ??\\??????????§£?????°??????????????¨???????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\t// ??????????????°??????????????????\n\t\t\tString[] transNum = br.readLine().split(\" \");\n\t\t\t// ??????????????????????????????\n\t\t\tString[] transColor = br.readLine().split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ????????????????????¨??¶???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ?????????????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? : ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * ????????????????¨??????????????????????\n\t\t\t */\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨? 3) ???????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°????????????????????????R, G, B????????°????????????\n\t\tcard_NumAndColor_Sort(cardArr);\n\n\t\t// ?????£?¶??????????????????°???3??????????¨?\n\t\tvictoryCondition_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint tool_wasused = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttool_wasused++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????§???????????????????????¶???????????????????????¨????¨?\n\t\t *\n\t\t **** ?????????????????§???????¨?????????????\n\t\t *\n\t\t * int victory_or_defeat = 0;\n\t\t *\n\t\t * System.out.println(victory_or_defeat = (tool_wasused == 0)? 1:0);\n\t\t */\n\t\tif (tool_wasused == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint victoryAnswer = 1;\n\t\t\tSystem.out.println(victoryAnswer);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint defeatAnswer = 0;\n\t\t\tSystem.out.println(defeatAnswer);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void victoryCondition_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ????????????????????????3?????????????????¢??????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)???????????§?????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)?????£?¶??????°????????????????????°???3?????§?????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// ????????????????????????????????§???????????????\n\t\t\t\t\t\t\t\tfor (int tool_btn = 0; tool_btn < cardArr.size(); tool_btn++) {\n\t\t\t\t\t\t\t\t\tif (cardArr.get(tool_btn) == cardArr.get(cnt1)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt2)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt3)) {\n\t\t\t\t\t\t\t\t\t\t// ????????§?¨??????????????????????????????????????????¨????????¶???????????´???\n\t\t\t\t\t\t\t\t\t\tcardArr.get(tool_btn).setUse(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// victoryCondition_Inspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void card_NumAndColor_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber() || cardArr.get(cnt2)\n\t\t\t\t\t\t.getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ???????????????????????°\n\t\t\t\t\tUTRummyCard tmp_card = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_card);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// card_NumAndColor_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????????????? ????????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°???????????????????????¢\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ???????????????????????????????£???¢\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * boolean ????????????????¨??????????????????¨?????????????????????????????¨????????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ????????????????????§int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * boolean???????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int, String, boolean???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main{\n\n\t/**\n\t * ?????????????????????????????\\???????¢??????°???\n\t * ??????\n\t * 1) ????´???????????????? ??????String + String ??? Red 1 [1R] White 2 [2W] Gold 3 [3G]\n\t * 2) if??§????´¢????????????.contains() ??? switch??? ??? return;\n\t *\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tRummy ru = new Rummy(br.readLine(), br.readLine());\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = ru.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\n\t}// ????????????????????????????????????\n\n\t/**\n\t * ?????????CardRummy\n\t */\n\tpublic static class Rummy {\n\t\t/**\n\t\t * ?????????????????°??¶???\n\t\t */\n\t\tprivate static final int ONECARDSET = 9;\n\t\t/**\n\t\t * ?????????????????£?????????????????????\n\t\t */\n\t\tprivate static final int CASTAREA = 2;\n\t\t/**\n\t\t * ?????????????????£?????????????????°??????????´???´???\n\t\t */\n\t\tprivate static final int CASTADDRESS =0;\n\n\t\t/**\n\t\t * ????????????????´???´???\n\t\t */\n\t\tArrayList<String> card = new ArrayList<String>();\n\n\t\t/**\n\t\t * ?????°??????????????? ?????£???????????????????´???????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t */\n\t\tpublic Rummy(String tmpNum, String tmpColor) {// ???????????°????????????\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\t\t\t// ?????¨??°??????????????????????´?????????´???\n\t\t\tString tmpCard = \"\";\n\n\t\t\t// for????????? ????§£??????????????????????????????\n\t\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t\t/**\n\t\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t\t */\n\t\t\t\t// ????§£??????????????¨??°??????????????????\n\t\t\t\ttmpCard = transNum[cnt] + transColor[cnt];\n\t\t\t\t// ????´?\n\t\t\t\tcard.add(tmpCard);\n\t\t\t}\n\t\t}// ?????????????????????????????????\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t */\n\t\tpublic int playtheGame() {// ???????????°????????????\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = 0;\n\t\t\t// ?????????????????????\n\t\t\tCollections.sort(card);\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialNumCard(card); //?????£????????????\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameNumCard(card); //?????£????????????\n\n\t\t\t// ?????????????????????\n\t\t\tCollections.sort(card);\n\n\t\t\t// ????????????????????°??????0????????¨??¨0\n\t\t\tif (card.get(ONECARDSET - 1).contains(\"0\"))\n\n\t\t\t\t// ?????¶??????????????°???????????????s\n\t\t\t\tresult = 1;\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}// playtheGame????????????????????????\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param card2\n\t\t *            ?????¶??????????????°?¶???????????????????\n\t\t *\n\t\t * @return ?¶?????????¨???????????£????????????\n\t\t */\n\n\t\tpublic ArrayList<String> serialNumCard(ArrayList<String> card) {// ?????£????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param tempNum String????????????????????°??????int??¢????????£???????????????????????¨????????°\n\t\t\t *\n\t\t\t * @param tempArr[] ??¨????????°?????????????????°??????????´? ??????????????°?????????????????????\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\n\t\t\t//??????????????°???????????¢??¨\n\t\t\tString tempNum1[] = new String[CASTAREA];\n\t\t\tString tempNum2[] = new String[CASTAREA];\n\t\t\tString tempNum3[] = new String[CASTAREA];\n\n\t\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????£????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1???String???????????????????\\???????\n\t\t\t\t\t\t * ?????????2?????????????????¢?????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1 ?????????\n\t\t\t\t\t\t * 1) ??¨????????°??§??°???????????¢????´? ??? ???????¨?????????????????????????????????°???????????????????????§???????????????????????????\n\t\t\t\t\t\t *    (??¢?????????????????????)\n\t\t\t\t\t\t * 2) ??¨????????°??§??°???????????¢????´? ??? ??¨???int[]????????£??????????????°????????????????????????????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????2 ?????????\n\t\t\t\t\t\t * ???????????°??¢????????§????????????????????£\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\ttempNum1 = card.get(cnt1).split(\"\");\n\t\t\t\t\t\ttempNum2 = card.get(cnt2).split(\"\");\n\t\t\t\t\t\ttempNum3 = card.get(cnt3).split(\"\");\n\t\t\t\t\t\t// (1)3??£?¶?????????????????????????????????????\n\t\t\t\t\t\tif (Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum2[CASTADDRESS]) - 1\n\t\t\t\t\t\t\t\t&& Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum3[CASTADDRESS])\n\t\t\t\t\t\t\t\t\t\t- 2) {\n\t\t\t\t\t\t\t// (1)????????¶??????????????°??????????????????\n\t\t\t\t\t\t\tif (card.get(cnt1) != null && card.get(cnt2) != null && card.get(cnt3) != null) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨???????????¶????\n\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\treturn card;\n\t\t}// serialNumCard ????????????????????????\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param card\n\t\t *            ?????¶??????????????°?¶???????????????????\n\t\t *\n\t\t * @return ?¶?????????¨???????????£????????????\n\t\t */\n\t\tpublic ArrayList<String> sameNumCard(ArrayList<String> card) {// ???????????°????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t\t// (1)???????????????????????????????????????\n\t\t\t\t\t\tif (card.get(cnt1).equals(card.get(cnt2)) && card.get(cnt2).equals(card.get(cnt3))) {\n\t\t\t\t\t\t\t// (1)????????¶??????????????°??????????????????\n\t\t\t\t\t\t\tif (card.get(cnt1) != null && card.get(cnt2) != null && card.get(cnt3) != null){\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨???????????¶????\n\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\treturn card;\n\t\t}// sameNumCard????????????????????????\n\n\t}// Rummy?????????????????????\n\n}// NRummy?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * Rummy\n */\npublic class Main {\n\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\tint T = parseInt(br.readLine());\n\n\t\tfor (int i = 0; i < T; i++) {\n\n\t\t\tStringTokenizer st1 = new StringTokenizer(br.readLine());\n\t\t\tStringTokenizer st2 = new StringTokenizer(br.readLine());\n\n\t\t\tint[] R = new int[10];\n\t\t\tint[] G = new int[10];\n\t\t\tint[] B = new int[10];\n\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tint n = parseInt(st1.nextToken());\n\t\t\t\tswitch (st2.nextToken().charAt(0)) {\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tR[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tG[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tB[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\tint count = solve(R, 1, 0) + solve(G, 1, 0) + solve(B, 1, 0);\n\t\t\tSystem.out.println(count >= 3 ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static int solve(int[] cards, int s, int c) {\n\n\t\tif (s == 10) return c;\n\n\t\tint c1 = 0, c2 = 0, c3 = 0;\n\n\t\tif (cards[s] >= 3) {\n\t\t\tint[] _cards = cards.clone()\n\t\t\t_cards[s] -= 3;\n\t\t\tc1 = solve(_cards, s + 1, c + 1);\n\t\t}\n\n\t\tif (s <= 7 && cards[s] >= 1 && cards[s + 1] >= 1 && cards[s + 2] >= 1) {\n\t\t\tint[] _cards = cards.clone()\n\t\t\t_cards[s]--;\n\t\t\t_cards[s + 1]--;\n\t\t\t_cards[s + 2]--;\n\t\t\tif (_cards[s] >= 1) {\n\t\t\t\tc2 = solve(_cards, s, c + 1);\n\t\t\t} else {\n\t\t\t\tc2 = solve(_cards, s + 1, c + 1);\n\t\t\t}\n\t\t}\n\n\t\tc3 = solve(cards, s + 1, c);\n\n\t\treturn Math.max(c1, Math.max(c2, c3));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\npublic class Main {\n\tpublic static void main (String[] args) throws IOException\n\t{\n\t\tBufferedReader input = new BufferedReader (new InputStreamReader (System.in));\n\t\t\n\t\tString setTotalStr = input.readLine();\n\t\t\n\t\tint setTotal = Integer.parseInt(setTotalStr);\n\t\t\n\t\tint cardTotal = 9;\n\t\t\n\t\tString[][] cardInfoNumStr = new String[setTotal][9];\n\t\t\n\t\tint[][] cardInfoNum = new int[setTotal][cardTotal];\n\t\t\n\t\tString[][] cardInfoCol = new String[setTotal][9];\n\t\t\n\t\t//データをキーボードで入力し、配列に代入する\n\t\tfor(int set = 0; set < setTotal; set++)\n\t\t{\n\t\t\tcardInfoNumStr[set] = input.readLine().split(\" \");\n\t\t\t\n\t\t\tfor(int num = 0; num < cardTotal; num++)\n\t\t\t\tcardInfoNum[set][num] = Integer.parseInt(cardInfoNumStr[set][num]);\n\t\t\t\n\t\t\tcardInfoCol[set] = input.readLine().split(\" \");\n\t\t}\n\t\t\n\t\tint win = 0;\n\t\t\n\t\t//勝利条件を満たしているかどうかをset回行う\n\t\tfor(int set = 0; set < setTotal; set++, win = 0)\n\t\t{\t\n\t\t\t//1セット目を見つける\n\t\t\tfor(int num2nd = 1; (num2nd < cardTotal - 1) &&  (win == 0); num2nd++)\n\t\t\t{\n\t\t\t\tfor(int num3rd = 2; (num3rd < cardTotal) && (win == 0); num3rd++)\n\t\t\t\t{\n\t\t\t\t\tif(((cardInfoNum[set][0] == cardInfoNum[set][num2nd] && cardInfoNum[set][0] == cardInfoNum[set][num3rd])\n\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 2)\n\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd]))))\n\t\t\t\t\t{\n\t\t\t\t\t\tint cardTotal2nd = cardTotal -3;\n\t\t\t\t\t\t\n\t\t\t\t\t\tint[] cardInfoNum2nd = new int[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tString[] cardInfoCol2nd = new String[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tint insertNum = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける準備\n\t\t\t\t\t\tfor(int num = 1; num < cardTotal; num++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(!(num == num2nd || num == num3rd))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcardInfoNum2nd[insertNum] = cardInfoNum[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcardInfoCol2nd[insertNum] = cardInfoCol[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける\n\t\t\t\t\t\tfor(int num2set2nd = 1; (num2set2nd < cardTotal2nd - 1) && (win == 0); num2set2nd++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor(int num2set3rd = 2; (num2set3rd < cardTotal2nd) && (win == 0); num2set3rd++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd])\n\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd]))))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint cardTotal3rd = cardTotal2nd -3;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tint[] cardInfoNum3rd = new int[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tString[] cardInfoCol3rd = new String[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tinsertNum = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//3セット目を見つける準備\n\t\t\t\t\t\t\t\t\tfor(int num = 1; num < cardTotal2nd; num++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif(!(num == num2set2nd || num == num2set3rd))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcardInfoNum3rd[insertNum] = cardInfoNum2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tcardInfoCol3rd[insertNum] = cardInfoCol2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//勝利条件を満たしているか確かめる\n\t\t\t\t\t\t\t\t\tif(((cardInfoNum3rd[0] == cardInfoNum3rd[1] && cardInfoNum3rd[0] == cardInfoNum3rd[2])\n\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2]))))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twin = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(win);\n\t\t}\n\t}\n}\n\n\n//かかった時間：6時間程\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n    int T;\n    int[] number;\n    int[] R,G,B;\n\n    void solve(){\n\tScanner sc = new Scanner(System.in);\n\tT = sc.nextInt();\n\twhile(T-->0){\n\t    number = new int[9];\n\t    for(int i=0; i<9; i++)number[i] = sc.nextInt();\n\t    R = new int[9];\n\t    G = new int[9];\n\t    B = new int[9];\n\t    for(int i=0; i<9; i++){\n\t\tchar c = sc.next().charAt(0);\n\t\tif(c=='R')R[number[i]]++;\n\t\tif(c=='G')G[number[i]]++;\n\t\tif(c=='B')B[number[i]]++;\n\t    }\n\n\t    for(int i=0; i<9; i++){\n\t\tif(R[i]>0){\n\t\t    if(R[i]==4) R[i]-=3;\n\t\t    if(R[i]==3) R[i] = 0;\n\t\t    if(R[i]<=2 && i+2<9){R[i+1]-=R[i]; R[i+2]-=R[i]; R[i] = 0;}\n\t\t}\n\t\tif(G[i]>0){\n\t\t    if(G[i]==4) G[i]-=3;\n\t\t    if(G[i]==3) G[i] = 0;\n\t\t    if(G[i]<=2 && i+2<9){G[i+1]-=G[i]; G[i+2]-=G[i]; G[i] = 0;}\n\t\t}\n\t\tif(B[i]>0){\n\t\t    if(B[i]==4) B[i]-=3;\n\t\t    if(B[i]==3) B[i] = 0;\n\t\t    if(B[i]<=2 && i+2<9){B[i+1]-=B[i]; B[i+2]-=B[i]; B[i] = 0;}\n\t\t}\n\t    }\n\n\t    int ans = 1;\n\t    for(int i=0; i<9; i++){\n\t\tif(R[i]!=0 || G[i]!=0 || B[i]!=0){ans = 0; break;}\n\t    }\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static void main(String[] args){\n\tnew Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<t;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k*3]==color[j][k*3+2]){\n                        color[j][k*3]=0;\n                        color[j][k*3+1]=0;\n                        color[j][k*3+2]=0;\n                    }\n                }\n            }\nfor (int j=0;j<3&&win!=0;j++){\n                int n=color_num[j];\n                int changed=0;\n                for (int l=0;l<n/3;l++){\n                    int bef=-2;\n                    changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3){\n                            changed=0;\n                            bef=-2;\n                        }\n                    }\n                }\n                if (changed!=0) win=0;\n            }\n\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t//?????£?¶???????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result= toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T=scan.nextInt();\n\t\tfor(int roop=0;roop<T;roop++){\n\t\t\tint[] n = new int[9];\n\t\t\tint[][] card = new int[3][9];\n\t\t\tchar[] c = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tn[i]=scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tc[i]=scan.next().charAt(0);\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tswitch(c[i]){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcard[0][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcard[1][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcard[2][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint set=0;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\t\tif(card[i][j]>2){\n\t\t\t\t\t\tcard[i][j]-=3;\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t\twhile(j<7 && card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0){\n\t\t\t\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\t\t\t\tcard[i][j+k]-=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set>2){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Rummy {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint intHairetsuNum[] = new int[9]; \n\t\tString strHairetsuNum[] = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString strHairetsuColor[] = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] card = new int[9];\n\t\t\tint[][] color = new int[3][9];\n\t\t\tint[] rgb = new int[3]; // ???????????°\n\t\t\tint set = 0;\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcard[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = sc.next();\n\t\t\t\tswitch(s.charAt(0)){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcolor[0][rgb[0]] = card[j];\n\t\t\t\t\t\trgb[0]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcolor[1][rgb[1]] = card[j];\n\t\t\t\t\t\trgb[1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcolor[2][rgb[2]] = card[j];\n\t\t\t\t\t\trgb[2]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tfor (int k = 0; k < rgb[j]; k++) {\n\t\t\t\t\tfor (int l = k+1; l < rgb[j]; l++) {\n\t\t\t\t\t\tif(color[j][k] > color[j][l]){\n\t\t\t\t\t\t\tint tmp = color[j][k];\n\t\t\t\t\t\t\tcolor[j][k] = color[j][l];\n\t\t\t\t\t\t\tcolor[j][l] = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int k = 0; k < rgb[j]; k++){\n\t\t\t\t\tfor(int l = k+1; l < rgb[j]; l++){\n\t\t\t\t\t\tfor(int m = l+1; m < rgb[j]; m++){\n\t\t\t\t\t\t\tif(color[j][k] != 0 && color[j][l] != 0 && color[j][m] != 0){\n\t\t\t\t\t\t\t\tint[] tmp = new int[3];\n\t\t\t\t\t\t\t\ttmp[0] = color[j][k];\n\t\t\t\t\t\t\t\ttmp[1] = color[j][l];\n\t\t\t\t\t\t\t\ttmp[2] = color[j][m];\n\t\t\t\t\t\t\t\tArrays.sort(tmp);\n\t\t\t\t\t\t\t\tif((tmp[0] == tmp[1] && tmp[1] == tmp[2]) || (tmp[0]+1 == tmp[1] && tmp[1]+1 == tmp[2])){\n\t\t\t\t\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\t\t\t\t\tcolor[j][l] = 0;\n\t\t\t\t\t\t\t\t\tcolor[j][m] = 0;\n\t\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) System.out.println(\"1\");\n\t\t\telse System.out.println(\"0\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tIN:for(int i = 0; i < t; i++) {\n\t\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\t\tint[] list = new int[9];\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tlist[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tString in = sc.next();\n\t\t\t\tif(in.equals(\"R\")) R.add(list[j]);\n\t\t\t\tif(in.equals(\"G\")) G.add(list[j]);\n\t\t\t\tif(in.equals(\"B\")) B.add(list[j]);\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tboolean A1 = true;\n\t\t\tCollections.sort(R);\n\t\t\tCollections.sort(G);\n\t\t\tCollections.sort(B);\n\t\t\tfor(int j = 0; j < R.size(); j++) {\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= R.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(R.get(k) != R.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tA1 = true;\n\t\t\tfor(int j = 0; j < G.size(); j++) {\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= G.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(G.get(k) != G.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tA1 = true;\n\t\t\tfor(int j = 0; j < B.size(); j++) {\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= B.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(B.get(k) != B.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tA1 = true;\n\t\t\tfor(int j = 0; j < R.size(); j++) {\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= R.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(R.get(k)+1 != R.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tA1 = true;\n\t\t\tfor(int j = 0; j < G.size(); j++) {\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= G.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(G.get(k)+1 != G.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tA1 = true;\n\t\t\tfor(int j = 0; j < B.size(); j++) {\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= B.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(B.get(k)+1 != B.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tB.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(count == 3) {\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tboolean[][] cardHasFlag = new boolean[3][9];\n\t\t\n\t\tint T = sc.nextInt();\n\t\t\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tString color = sc.next();\n\t\t\tint card = sc.nextInt();\n\t\t\t\n\t\t\tswitch(color) {\n\t\t\tcase \"赤\" :\n                    cardHasFlag[0][card-1] = true;\n                    break;\n                case \"緑\" :\n                    cardHasFlag[1][card-1] = true;\n                    break;\n                case \"青\" :\n                    cardHasFlag[2][card-1] = true;\n                    break;\n            }\n        }\n        \n        for (int i = 0; i < 3; i++) {\n            for (int j = 0 ; j < 9; j++) {\n                if (cardHasFlag[i][j] == false) {\n                    switch (i) {\n                        case 0 :\n                            System.out.printf(\"S %d\\n\", j+1);\n                            break;\n                        case 1 :\n                            System.out.printf(\"H %d\\n\", j+1);\n                            break;\n                        case 2 :\n                            System.out.printf(\"C %d\\n\", j+1);\n                            break;\n                    }\n                }\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void initiallize(boolean b[]) {\n\t\tfor (int i = 0; i < b.length; ++i) {\n\t\t\tb[i] = false;\n\t\t}\n\t}\n\n\tpublic static int same(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i]);\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int continuous(int num[]) {\n\t\tint count = 0;\n\t\tint tmp, tmp2;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = 4; j > 0; --j) {\n\t\t\t\t\ttmp = research(num, num[i] - j + 2);\n\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\tif (tmp != i) {\n\t\t\t\t\t\t\tif (j == 3) {\n\t\t\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 4);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 3);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (tmp2 != -1) {\n\t\t\t\t\t\t\t\tif (tmp2 != i) {\n\t\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t\tnum[tmp2] = 0;\n\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tpublic static int research(int num[], int k) {\n\t\tif (k <= 0)\n\t\t\treturn -1;\n\t\tfor (int i = num.length - 1; i >= 0; --i) {\n\t\t\tif (num[i] == k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static int judge(int num[], boolean b[]) {\n\t\tint count = 0;\n\t\tint j = 0;\n\t\tint number[] = new int[9];\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (b[i] == true) {\n\t\t\t\tnumber[j] = num[i];\n\t\t\t\t++j;\n\t\t\t}\n\t\t}\n\t\tif (number[2] == 0)\n\t\t\treturn -1;\n\t\t// same three number\n\t\tcount += same(number);\n\t\t// continuous three number\n\t\tcount += continuous(number);\n\n\t\treturn count;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tboolean R[], G[], B[];// position of R,B,G\n\t\tint count;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new boolean[9];\n\t\tB = new boolean[9];\n\t\tG = new boolean[9];\n\t\tint i, j;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[j] = true;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[j] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[j] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\t\t\t\tcount = 0;\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tint tmp = judge(num, R);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\ttmp = judge(num, B);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\ttmp = judge(num, G);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\tif (count == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t\tinitiallize(R);\n\t\t\t\tinitiallize(B);\n\t\t\t\tinitiallize(G);\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i <= count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();;\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\t num4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] red = new int[9];\n\t\tint[] blue = new int[9];\n\t\tint[] green = new int[9];\n\t\tint r, g, b;\n\t\tint[][] R = new int[10][10];\n\t\tint[][] G = new int[10][10];\n\t\tint[][] B = new int[10][10];\n\t\tint[] numR = new int[10];\n\t\tint[] numG = new int[10];\n\t\tint[] numB = new int[10];\n\t\tchar c;\n\t\tint count;\n\t\tint t = sc.nextInt();\n\t\tfor(int k = 0; k < t; k++){\n\t\t\tr = 0;\n\t\t\tg = 0;\n\t\t\tb = 0;\n\t\t\tfor(int i = 1; i <= 9; i++){\n\t\t\t\tnumR[i] = 0;\n\t\t\t\tnumG[i] = 0;\n\t\t\t\tnumB[i] = 0;\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tred[r] = n[i];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tgreen[g] = n[i];\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tblue[b] = n[i];\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\ti = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(R, numR, red, r);\n\t\t\tsort(G, numG, green, g);\n\t\t\tsort(B, numB, blue, b);\n\t\t\tcount += set(R, numR) + set(G, numG) + set(B, numB);\t\t\t\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[][] C, int[] numC, int[] color, int c){\n\t\tfor(int i = 0; i < c; i++){\n\t\t\tfor(int j = 1; j <= 9; j++)\n\t\t\t\tif(color[i] == j){\n\t\t\t\t\tC[j][++numC[j]] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tstatic int set(int[][] C, int[] numC){\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tfor(int k = 0; k < 3; k++){\n\t\t\t\tif(numC[i] >= 3){\n\t\t\t\t\tnumC[i] -= 3;\n\t\t\t\t\tcount++;\n\t\t\t\t}else\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j = numC[i]+1; j <= 9; j++)\n\t\t\t\tC[i][j] = 0;\n\t\t}\n\t\tfor(int i = 1; i <= 7; i++){\n\t\t\tif(C[i][1] == 1 && C[i+1][1] == 1 && C[i+2][1] == 1){\n\t\t\t\tcount++;\n\t\t\t\tC[i][1] = C[i][2];\n\t\t\t\tC[i+1][1] = C[i+1][2];\n\t\t\t\tC[i+2][1] = C[i+2][2];\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint[] t = new int[9];\n\t\t\t\tint[][] m = new int[3][10];\n\t\t\t\tfor(int j=0;j<9;j++) t[j] = sc.nextInt();\n\t\t\t\t\n\t\t\t\tint rc = 0;\n\t\t\t\tint gc = 0;\n\t\t\t\tint bc = 0;\n\t\t\t\tString s;\n\t\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\t\ts = sc.next();\n\t\t\t\t\tif(s.compareTo(\"R\")==0){\n\t\t\t\t\t\trc++;\n\t\t\t\t\t\tm[0][t[j]]++;\n\t\t\t\t\t}else if(s.compareTo(\"G\")==0){\n\t\t\t\t\t\tgc++;\n\t\t\t\t\t\tm[1][t[j]]++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbc++;\n\t\t\t\t\t\tm[2][t[j]]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(rc%3==0 && gc%3==0 && bc%3==0){\n\t\t\t\t\tboolean flag = true;\n\t\t\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\t\t\tif(flag==true){\n\t\t\t\t\t\t\tfor(int j=1;j<=9;j++){\n\t\t\t\t\t\t\t\tif(m[k][j]<0 || (j>7 && m[k][j]%3!=0)){\n\t\t\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(m[k][j]==1 || m[k][j]==4){\n\t\t\t\t\t\t\t\t\tm[k][j]--;\n\t\t\t\t\t\t\t\t\tm[k][j+1]--;\n\t\t\t\t\t\t\t\t\tm[k][j+2]--;\n\t\t\t\t\t\t\t\t}else if(m[k][j]==2){\n\t\t\t\t\t\t\t\t\tm[k][j]-=2;\n\t\t\t\t\t\t\t\t\tm[k][j+1]-=2;\n\t\t\t\t\t\t\t\t\tm[k][j+2]-=2;\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(flag==true) System.out.println(1);\n\t\t\t\t\telse System.out.println(0);\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\t\n\t\t\t}\t\n\t\t}\t\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\tpublic static final int countMax = 30;\n\n\n\tpublic static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException\n\t{\n\t\t// TODO 自動生成されたメソッド・スタブ\n\t\tint a = Integer.parseInt(input(1)[0]);\n\t\tfor(int i = 0; i < a; i++)\n\t\t{\n\t\t\tString[][] str = {input(9), input(9)};\n\t\t\tchar[][] c = new char[9][9];\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t{\n\t\t\t\tc[0][j] = str[0][j].toCharArray()[0];\n\t\t\t\tc[1][j] = str[1][j].toCharArray()[0];\n\t\t\t}\n\t\t\tQuickSort(c[0], 0, 8, c[1]);\n\t\t\tboolean[] b = {false, false, false, false, false, false, false, false, false};\n\t\t\tSystem.out.println(checkWin(c, 0, 0, 0, b) ? \"1\" : \"0\");\n\t\t}\n\t}\n\n\tpublic static boolean checkWin(char[][] str, int num, int select, int select2, boolean[] b)\n\t{\n\t\tboolean b2 = false;\n\t\tif(num % 3 == 0)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\tb2 = checkWin(str, num + 1, i, 0, b);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 1)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t{\n\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\tb2 = checkWin(str, num + 1, select, i, b);\n\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(num % 3 == 2)\n\t\t{\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tfor(int j = -1; j < 2; j++)\n\t\t\t\t{\n\t\t\t\t\tif(num == 8)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(j == 0 || str[0][select2] != str[0][i] + j) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(j == 0 || str[0][select] != str[0][i] + j) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(str[0][select] == str[0][i] + j && str[1][select] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(j == 0 || str[0][select2] != str[0][i] + j)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(str[0][select2] == str[0][i] + j && str[1][select2] == str[1][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(j == 0 || str[0][select] != str[0][i] + j)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tb[i] = true;\n\t\t\t\t\t\t\t\tb2 = checkWin(str, num + 1, 0, 0, b);\n\t\t\t\t\t\t\t\tb[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn b2;\n\t}\n\n\tpublic static int loop(int num, int sum, int max, boolean[] b, int now, int upper)\n\t{\n\t\tint a = num;\n\t\tif(max == now)\n\t\t{\n\t\t\tint c = 0;\n\t\t\tfor(int i = 0; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) c += i;\n\t\t\t}\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tif(c + i == sum)\n\t\t\t\t{\n\t\t\t\t\t//System.err.println(sum + \" \" + c + \" \" + i);\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i = upper; i < 10; i++)\n\t\t\t{\n\t\t\t\tif(b[i]) continue;\n\t\t\t\tb[i] = true;\n\t\t\t\ta = loop(a, sum, max, b, now + 1, i);\n\t\t\t\tb[i] = false;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static int[] toIntArray(int a)\n\t{\n\t\tint b[] = new int[8];\n\t\tfor(int i = 0; i < 8; i++)\n\t\t{\n\t\t\tb[i] = (a >> (i * 3) & 0b111);\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(int[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tpublic static int toInt(Integer[] a)\n\t{\n\t\tint b = 0;\n\t\tfor(int i = a.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tb = b << 3;\n\t\t\tb+=a[i];\n\t\t}\n\t\treturn b;\n\t}\n\n\tstatic void QuickSort(int[] d, int left, int right) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right, tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r);\n\t\tQuickSort(d, l, right);\n    }\n\n\tstatic void QuickSort(char[] d, int left, int right, char[] c) {\n\t\tif (left>=right) {\n\t\t\treturn;\n\t\t}\n\t\tint p = d[(left+right)/2];\n\t\tint l = left, r = right;\n\t\tchar tmp;\n\t\twhile(l<=r) {\n\t\t\twhile(d[l] < p) { l++; }\n\t\t\twhile(d[r] > p) { r--; }\n\t\t\tif (l<=r) {\n\t\t\t\ttmp = d[l]; d[l] = d[r]; d[r] = tmp;\n\t\t\t\ttmp = c[l]; c[l] = c[r]; c[r] = tmp;\n\t\t\t\tl++; r--;\n\t\t\t}\n\t\t}\n\t\tQuickSort(d, left, r, c);\n\t\tQuickSort(d, l, right, c);\n    }\n\n\tpublic static boolean SeparateSearch(int[] a, int b, int first, int end)\n\t{\n\t\tif(end - first <= 1)\n\t\t{\n\t\t\tif(a[first] == b) return true;\n\t\t\telse if(a[end] == b) return true;\n\t\t\telse return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint temp = (end + first) / 2;\n\t\t\tif(a[temp] == b) return true;\n\t\t\telse if(a[temp] < b) return SeparateSearch(a, b, temp, end);\n\t\t\telse return SeparateSearch(a, b, first, temp);\n\t\t}\n\t}\n\n\tpublic static int GCD(int x, int y)\n\t{\n\t\tint z = Math.max(x, y) % Math.min(x, y);\n\t\tif(z == 0) return Math.min(x, y);\n\t\treturn GCD(z, Math.min(y, x));\n\t}\n\n\tpublic static int SelectionSort(int a[])\n\t{\n\t\tint Select = 0;\n\t\tfor(int j = 0; j < a.length - 1; j++)\n\t\t{\n\t\t\tint[] min = {0, Integer.MAX_VALUE};\n\t\t\tfor(int i = j; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif(min[1] > a[i])\n\t\t\t\t{\n\t\t\t\t\tmin[1] = a[i];\n\t\t\t\t\tmin[0] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j != min[0])\n\t\t\t{\n\t\t\t\tSelect++;\n\t\t\t\tswap(a, min[0], j);\n\t\t\t}\n\t\t}\n\t\treturn Select;\n\t}\n\n\tpublic static int BubbleSort(int a[])\n\t{\n\t\tint swapp = 0;\n\t\tboolean flag = true;\n\t\twhile(flag)\n\t\t{\n\t\t\tflag = false;\n\t\t\tfor(int i = 0; i < a.length - 1; i++)\n\t\t\t{\n\t\t\t\tif(a[i] > a[i+1])\n\t\t\t\t{\n\t\t\t\t\tswapp++;\n\t\t\t\t\tswap(a, i, i+1);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn swapp;\n\t}\n\n\tpublic static void swap(int[] a, int x, int y)\n\t{\n\t\ta[x] = a[x] ^ a[y];\n\t\ta[y] = a[x] ^ a[y];\n\t\ta[x] = a[x] ^ a[y];\n\t}\n\n\tpublic static String[] inputOne() throws IOException\n\t{\n\t\tString str2 = br.readLine();\n\t\tString[] str = new String[str2.length()];\n\t\tfor(int i = 0; i < str.length; i++)\n\t\t{\n\t\t\tif(i < str.length - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i, i+1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(i);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\n\tpublic static String[] input(int Num) throws IOException\n\t{\n\t\tString str[] = new String[Num];\n\t\tString str2 = br.readLine();\n\t\tint j = 0;\n\t\tfor(int i = 0; i < Num; i++)\n\t\t{\n\t\t\tif(i < Num - 1)\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j, str2.indexOf(\" \", j));\n\t\t\t\tj = str2.indexOf(\" \", j) + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr[i] = str2.substring(j);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\t//*/\n\n\t/*\n\n`           `            ```.(-~_````````````....-_~(?><___-``````````````.`````````````````````..__.~~~~~~~~~jI==lOXx.        ```\n`` `  `    `               .z<```````````..`.....~(+=>>>:~<<;___. ```````````````````````````...``-(_.~~~~~~~~(w===lOUI<.\n` ` `` `  `    `      `  .(!```````````````.``..~(?z>><!~``_~~~;<<-- ``````````````````````````._.`-<_.~~~~~~~:zz==zOzWOl\n`  ` `  `   `   ` ` `  .(! `````````````````...-(??;<`` ` `  `  _~<<+<-.````````.````.``````````..-._+_~~~~~::~(I==?OwOXk:\n`` ` `     `  `   `   -!``````````````````````._+==1-.```````` `   _~<<<+-....```.`````````````.``_~~(<_~~::::::zz1==wwrXX;`\n` ``` ` `    `   `  .<_``.``````````````` ` ``.(==lll&-``` `` ``````` _~(<1z-__..``.`````.``````..`_~~+<~~::::::(I+lOzkvvXk.\n` `  `   `    `  `.(!. _``````````````  `  ``` (=lttttO-``````` ` `````` _~<1Oz+--..````` .``````...~~(z_~(;:;;;;O>zttXuzwWn\n ` ` ` `   `     _~_..~```````````` ```` `````_+lltrrtlz_` `` ```` ` ` ```` _~?Ozwo-....` .~ `````.._~(=<_~;;>>>>z?ztOZuuuXW{`\n  ` ` ` `  `   .!..-(!`````````````` ` ````_-._ltrrrrrlw>``````` `` ``````````._?1zO+_...`-~_.````..-~~+z<:<>>>>>l?ztzVuuuuXR_\n    `  `    `.~~.._(> ````````````` ` ` ` ._(1_<zvrrvvwrI_```````````` `````````` _<1z<_~_._(< ````.-~~;zz<<>>>>?=?=tzWZuuuuXl\n `` ``  ` ` .<_..(zv_````` ```` .` `````._(z+zOz+OOvOwOvI__ ``````````````````````` _1+;<___:;< ```._~_:+O<<>>???===tlXyZzuZyk.`\n ` ` `` ` `.>~_.(zv<_`  ` ```` ~ `` ```._;+I~~_...~~~_~~1<~_-`````````````````````.`._<11?<.(<>_.`.._~(:;zz>????===lllXVXuuyyXl\n  `   `  `.>~~~_zI<_``` `````-~_`` ``` _;<<<~~~........_(<_~_.``` .`````````````.`..`.-(1=?<~<z;_..._::<:+Z>?>???===llXykuuXVVk.\n` ` ` ` `.<~~~_jI<~_  ``  ``.__` ``  `.<<:~~~...........~(<_:<_.``._``````````.``.`....-(l==<(1<>_..~~:><;zz????===lllXfkzuXffW[ `\n ` ` ` `.<::~(<dZ<~_ `  ``` (<_`  ```._::~~~....```````.__<<:<<_...-_.. ````.``..`.`...._1Ozz_+z+z_.~~:<<;+I????===llOWpHzuXfWkH\n `      (;:(;;juC~~  `` ```_:~`` ```._::~~~....``````````._<>;<z-...(-~__..`.............(zOt<(O>1>~_:;>?>>z????===llOWkHzXfpWqH;`\n  ` `  .;;;+>juZ<(<` ``` ` (<_  ````_~::~~~...````````````._<>>1<_-._1-_<_..`............_<OzI:Oz+O_~(>;???1z?====lltwWkHuWpbqqHb`\n     ` (;;;+?yuI~+~```````.(~~   `` ~~:~~....`.````````````._:;+z<<_.(G-(>-__.`........~..(1ww<zO<jI~(>>????==?==llttdkkSwWkqmmHM-\n      .z>?>1zuZ>(I_``.``` _:~_` ` `.~::~...````````````````` _><1z><_.jk:<1+___...~~~~.~~..<zzI+wz+X<<?>>????======ttdkbSdWqH@gg@k\n `  ``(v???jZuI;zI........_::_```` _:::~...`````````````````` <<_+11<__Oc:<+z+<__~.~~~~~~~~_1wwzzI<dI;+>>?>????===lOzWbWXXqH@@@@@g\n      jI==?dXuI+wI~~~~~~~~~::_```` (:<<~..`.````````````` ````-1__<+w<:<O<:;+zz+:~~~~~~~~~_~(wvI?z>dXz>>>?????====zIdWkSwWHM@@@@@@\n      Oll=1XZk<zyI:~::::~::::_````-;>><~.```.````````` ``````` (>.__?111zO<>_<zrw+<;<_::((<_(OvO=<;zXO<;<>>????===zzdkWXW@@@@@@@@@\n      ZlllzyyI?dV0;:;::::::;;__..._;>><..`.````.``````` ``  ``` >  ..dX0OlI<<::?OXO=??<;;;;::zvtz<:zvvI;<?>>???==zI>XWXWg@@@gggggg\n      ZttldVZZzXf0z>>>;;;::;1<_..._;>><_..`...`````````` `` `   (HW9!___+Xwc~_~<<jXAOz>>;;:;;+wOz<_ztwI;;>>>>????l<jHWH@ggggggggH@\n      OtttdfyXvXVkO??>>>>>;>+O<~~~_;>?<<__--....```` ` ` `````.J9<` ``. _1Zk+.._+<+wXXz>1&+<;+zOO>_zZzZ>;;;>>>???1>jHkHH@@@@HMMMHY\n      zrrrdVWXwXyWO????>>>>>>zz_~~~;+<<~__~<?11z+-```````  `````  ``````._<OU&(jggggHmmmewy<?zz<<! (<+O>;;;>>>>>???dkkkbbHHHHkSvI(\n    ` jrrrXy0XuZZVk=????>??>>+rz:~~<?<~` ..._(((><_`````````  ``` ``...-(jWNMMMMMMMMMMMMBMHMNm<_``` <>1<;;;;>;;>+1jgHkkkkWkWHHwvz1\n     `(trrXyVzuZZXW==?>>>?=?>>OO+::(1+((--(-__(1z_:_`````````` ````..-JdHWMMMNNMHHHHMYWB>_vM##v_...-<z+z;;;;;;:;>+dBTTUWWWUXHHzOwZ\n      .OrrwZCzuZZZWc1z>>>>1z>?ztl+_:dWWMMHHMMMNmg&+-.```` ````````` -dUC<~zHMMM@gg@@@N+.; (VU=_...._(?>=>;;;;;::+z>~(rwXC<jMMN<1wZ\n       jrrXk>(ZZZZX$<Oz>>>?l<<lltz+:<OOCz+<d#M@MM#M8:`````` ````````` `   (WHH@@@g@@@@@H: ?<_.`....~(>>1z;:;;;:<zw>~+v<<_(HMMNl_jW\n       .zwXk!.XZZZyW<(O>>>>Oz;zlllO<;1z<~(<(MHH@#MI<`````````````````````` 7YTTWHH@@@@H6_..........~<>>jc:;>>;;<zuc~~_..(WMMNNl_+z\n        (wXk~ (XXyZWs.jI>>;+w<<Ot=OO;+OA-._-dMM@MMQm,```````````````````` `-((JUHHWXwZC~......~~~~~_+<+zI;>>>>;+wuI~~_~(HM@HNN>.zO\n       ` zXW_` <wyZyW_ jz>;;jI:+rz1lz+=wk-..(UWHHMH9!``````` ``` ````````` -(UWkkWWV=~~~~~~~...~..~(<<zr>;>???>jwuC~._(HHHHHHN: (?\n     ` ``(Oy_ ` _zWZWl` ?1>;;z+;1tO+1???OZ--.(wkzXWZ!``` ``````````````` ``` `_~~`....~~~~~~~~~~.~_<<(tr<+=????zZOz(JdHHHHHH@N>  ;\n          (X}  ` _<?XW;` _<<;+O<:?Oz????<Oz__<<<<!_```````````````````````````````.......~..~.~.._<<(ztr<z=????zXQqHHMHHVHHH@H:\n           (k.`     _?Ti ``` ?jwo_<1z<+=>+O<......```````` `````` ``````````````..`.....~.~.~~.._<<~(lrZ+I==?=zwWHHHWUU0Od@@@H_\n           `j+       `  __``   1OI_~+z(:;:zz_.``````````````````````````````````.```....~.~~~.._:~.(lOvwO==???dZO<;<1OuuldgH@H_  `\n             ?!               `++zz_~<z<::(w:..```````````` ``` ``` ````````````````....~..~_-_::__jOwuuwz????dIw>;++1wuOwHWHH;`\n                               (v?><__1z<:(tz_`````````````````` ``` ``````````````.......~.._::~_(wZuZuw<+???z=wI>??=zuOwWXWH}\n               `                ?+><<__1z_~1z> ``````` ` ````````````` ````````````......__._::~.(dZZZZuX<+=?1V=z0>???zwOOyuWk$\n                            `   +=+?1<__1o_(zw+_``` ` ``` `````````````` `````````....~_(<~_:~~~_dZyyZZuX<>??zw=zX>>?=?zZlXvXWS\n                                1==111<~_1z<<zw<_````` `````` ``...``````` `` ```...._(<<~_(~~~_jZyyZZZuZ<>??zw=zXz>?=?=OtdZwX0_\n          `                   ` +=lOOl=+_~<1z<zXA+. ``` ````````````````````````..-_(<<:~~(~~_(jyyVyZZyZZ>>??zrz1dI>??=?ztdIzwX:\n                  `         `   z=lltrOz+<_(11zwwUX<--.  ` ````````````````````.-_(<::::~~:~_(jXyVVyyZyZZ?>>>Orz+wI>1????zwXzzul\n                               .z?=zttOOtzz++<?4kOwwXyXA&-..```````````````` .-(<<<:~~:~:~~_(1wXfVyyZyVXI?>;<ttz;zXz+z????OXI+XI_`\n                          `  ``(v>jOzzOOlttltrzzWOtwzZuXyZXwo+-. ````````` .(<<<::~:~_<~~~(<<1wyfyyyZyVkz?>;+zrv;+zz;z?>??zuZ>zw_.\n                              .+<:+wXz><1zltlltturwuwXzXX0uuZuuXy+-.`` --(+<<:::~~:~~(<_(<~~~<zyyyyyZyfkz>>;1lwO<<OI<jz>??1wXzzX>.\n          `                 ` (<;:+zXkXz>?=lttttwrwuwyzySzuuZZZZuZWA&(J&z<::~:~~:~:~~(_<<~~~~_jZyyyZyZWWz>>>z=Owz;zv><w????zzI1dl~\n                  `     `  ``.;;;;1wWHWWkzltrrrvvvzzwZuZXuzzuzuzuuuXXWWS<_~~:~~~~~~__+~~~~~~~~_?WyZuuZZXI??+jO=wI;?zO;jz???zrOzdI~\n                         `  .<<>;>zXHMHkkkOOrrvvvvuuXZZZuzvvzwvvuZWUC<_C_~~~~~~:~~~~(<~:~:~~~~:~_TZuzrOX0z>?zOlzX<<1Oz+z??==ztlzS_\n                          `.<:;1zzdHHHqqHHkytrrvvvzuuuuuuwrtrrrZ=7!_```-:.~~~~~~~~.(c~~:~~~~~~~~~._?CXuwrz>>?tO=zO<<zOz1????=OzzS;\n          `       `   ` ` .+:(uQkWHqqqH@@@HHwtOwwZO777??!~```  ````````(!..~~~~~~~.(~~~~:~~~~~~~~....._<?111+zlz1zw++zOz???>?zOlXz\n                        `.+<(dHHHH@Hmggg@MY!~ `````````````````````````__....~~~~.~<~~~~~~~~~~~~.~.......`.`. _~!??777zwwzz??zwrww\n                       `.z<:+WHHM#HM@HH9^````` ....`````` `` ``````````......~.~.~~<~~~~~~~~~~....~......```````````.-_<zUXAOzrzXy\n                    ` `.zz<<d@MNNNNM3~._```````_..```. ... `````````.`..`......~~~~~~~~~~~~...........``````````` .JuwXWHH@@HkkkXf\n          `       `  ` +??+zHMMNNNF_..```````` _. ``` `      ``````.```.........~~~~~~~~.........`.````````````.(twQHM@@@@@HHHMHg@\n              `  `  ` (==l=dMMMMMD...``````. `._ ``` ``````` _...`..`..`.........~~___`....`.``````````````` .(ugHMMHH@@MHHHHHHkff\n               `     (1tlluMMNMNF....`````. ` _``` ``` ``````` _~___..`......~~_`````````````````````````` .JdHHmmH@MHHHHWWpWyWHHH\n          `       ``.1wrlzdMMNN#~..__````````-.` `` ````` ```````` `___--_~~._.````````````````````````` .jXbpkmmHHHUUuzvzVUZyVfpf\n                `  .+zuwzdMMMMMK_.(> ``````` ._` `` ` `````` `````````  ``` ````````````````````` ` `  .uWbpbkHbpWUXzzZOz11>;<1zvU\n                ` .+zX0rwWMNN#Ht`.d}   .``  ~. `` ```````````` ````````` ` `` `` `````` ``````` `` ` .dWUZXyyfWU0vwwC<>;>>>>;:<zrt\n                  (=dXvXWMMNNMH% (#`   . ``._.```````` ```` ``` ` ` ` ` `  `  `  `  `` ``` ` ` ``` .dWZZXyWUXXX0VC<<(>;;;;<<<:(+wy\n          `   `` .=zXXwXHMNNN#M:.Ht  ` ~_``.~.``` `` ```````` ```` ``` ` ``  ` `` `` ``` `` ```` (XWyZyyyZXXp9C<~~~(<<:~~~_((+zwXf\n               `.+zw0rXXMNNNNNN<.wA+.` ~_``.~_```` ```````````` ``` `  `  ` ` `  ` `` ` ` ````.(HHHVVVWXWpWY>~~~~~:~~~~_:<?COVZXzu\n            ` ` (trwzzXHNNNNMNN>(wWMs_` _``.._-` ```````` `` ```  `` `` `  ` ` ``   `  ` `  .JHMHHWHmHHUY>:::~:~~~~_((><<<~~~<1Owu\n             ` (OrrwXwX#NNMMNM$_(XWMMy-`. ``.~__````````````` ``` `  ` ``` ` ` ` `` `` `  .d@M@@HHH90C;:::::;<::~~:~::::~~~~~.._<?\n          `   -wzzuuvdMMMMMM6<:(wXyWMHk,__   ._~-` ````````````  `  `` ` `  ``` ````` ..gMMMH9UYYC<<<+<<<<:::::_((_:~::::~~~~_...`\n\n\t */\n\n\n\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\n\t\tboolean flg1 = false;\n\t\tboolean flg2 = false;\n\t\tboolean flg3 = false;\n\t\t\n\t\tint num1 = 0;\n\t\tint num2 = 0;\n\t\tint num3 = 0;\n\t\tint num4 = 0;\n\t\tint num5 = 0;\n\t\tint num6 = 0;\n\t\tint num7 = 0;\n\t\tint num8 = 0;\n\t\tint num9 = 0;\n\n\t\tStringBuilder sb = new StringBuilder();\n\t\tList<Integer> list_number = new ArrayList<Integer>();\n\t\tList<String> list_color = new ArrayList<String>();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_number.add(scan.nextInt());\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_color.add(scan.next());\n\t\t\t}\n\n\t\t\tint r = 0;\n\t\t\tint g = 0;\n\t\t\tint b = 0;\n\n\t\t\t// ????????°????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tswitch (list_color.get(count1)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t// ??????????????¨???????????????\n\t\t\tList<Integer> list_r = new ArrayList<Integer>();\n\t\t\tList<Integer> list_g = new ArrayList<Integer>();\n\t\t\tList<Integer> list_b = new ArrayList<Integer>();\n\n\t\t\t// 9???????????????????????\\?????????????????????\n\t\t\tfor (int count2 = 0; count2 < 9; count2++) {\n\t\t\t\tswitch (list_color.get(count2)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tlist_r.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tlist_g.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tlist_b.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tCollections.sort(list_r);\n\t\t\tCollections.sort(list_g);\n\t\t\tCollections.sort(list_b);\n\t\t\t\n\t\t\t//???????????????????????°???????????¨???????????????\n\t\t\tif(r>0){\n\n\t\t\t// ???????????????????????? ??????????????°??????????????\\???????????? ????????£???????????£???????????°???????????????\n\t\t\t// ???????????§????????¨??????????????????????????????0???????????????\n\t\t\t// -------list_r?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t num1 = 0;\n\t\t\t num2 = 0;\n\t\t\t num3 = 0;\n\t\t\t num4 = 0;\n\t\t\t num5 = 0;\n\t\t\t num6 = 0;\n\t\t\t num7 = 0;\n\t\t\t num8 = 0;\n\t\t\t num9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_r.size(); count1++) {\n\t\t\t\tswitch (list_r.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t// System.out.println(\"?????????????????????\");\n\t\t\t\t\tflg1 = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// -------list_r????????????????????§-----------------------------------------------\n\t\t\t}\n\t\t\t//???????????????????????°???????????¨???????????????\n\t\t\tif(g>0){\n\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\tnum1 = 0;\n\t\t\tnum2 = 0;\n\t\t\tnum3 = 0;\n\t\t\tnum4 = 0;\n\t\t\tnum5 = 0;\n\t\t\tnum6 = 0;\n\t\t\tnum7 = 0;\n\t\t\tnum8 = 0;\n\t\t\tnum9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_g.size(); count1++) {\n\t\t\t\tswitch (list_g.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\tflg2 = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t}\n\t\t\t//???????????????????????°???????????¨???????????????\n\t\t\tif(b>0){\n\n\t\t\t// -------list_b?????????????????????-----------------------------------------------\n\t\t\t// ??????????????°??????????????\\????????????\n\t\t\tnum1 = 0;\n\t\t\tnum2 = 0;\n\t\t\tnum3 = 0;\n\t\t\tnum4 = 0;\n\t\t\tnum5 = 0;\n\t\t\tnum6 = 0;\n\t\t\tnum7 = 0;\n\t\t\tnum8 = 0;\n\t\t\tnum9 = 0;\n\t\t\t// ????????°????????????????????????????¢????\n\t\t\tfor (int count1 = 0; count1 < list_b.size(); count1++) {\n\t\t\t\tswitch (list_b.get(count1)) {\n\t\t\t\tcase 1:\n\t\t\t\t\tnum1++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tnum2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum4++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tnum5++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tnum6++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tnum7++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tnum8++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tnum9++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????§3?????????????????????\n\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t}\n\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t}\n\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t}\n\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t}\n\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t}\n\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t}\n\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t}\n\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t}\n\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t}\n\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\tnum1--;\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t}\n\t\t\t\tif ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\tnum2--;\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t}\n\t\t\t\tif ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\tnum3--;\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t}\n\t\t\t\tif ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\tnum4--;\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t}\n\t\t\t\tif ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\tnum5--;\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t}\n\t\t\t\tif ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\tnum6--;\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t}\n\t\t\t\tif ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\tnum7--;\n\t\t\t\t\tnum8--;\n\t\t\t\t\tnum9--;\n\t\t\t\t}\n\n\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\tflg3 = true;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// -------list_b????????????????????§-----------------------------------------------\n\t\t\t}\n\t\t\t// ?????????\n\t\t\tlist_number.clear();\n\t\t\tlist_color.clear();\n\t\t\tlist_r.clear();\n\t\t\tlist_g.clear();\n\t\t\tlist_b.clear();\n\t\t\tif (flg1 & flg2 & flg3) {\n\t\t\t\tsb.append(\"1\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t\tflg1 = false;\n\t\t\t\tflg2 = false;\n\t\t\t\tflg3 = false;\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\n\t\t}\n\t\tSystem.out.print(new String(sb));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n \npublic class Main{\n \n    public static void main(String[] args) {\n        \n        Scanner scan = new Scanner(System.in);\n        \n        int num = scan.nextInt();\n        \n        int[][] card= new int[2][9];\n        \n        for(int k = 0; k < num; k++){\n        \t\n            for(int j = 0; j < 2; j++){\n                for(int i = 0; i < 9; i++){\n \n                    if(j == 0){\n                        card[j][i] = scan.nextInt();\n                    }else{\n \n                        String color =scan.next();\n                        int intColor = 0;\n                        if(\"R\".equals(color)){\n                            intColor = 11;\n                        }else if(\"G\".equals(color)){\n                            intColor = 12;\n                        }else {\n                            intColor = 13;\n                        }\n                        card[j][i] = intColor;\n                    }\n                }\n            }\n \n            \n            Card insCard = new Card();\n            insCard.setCard(card);\n \n            \n            insCard.sort(card);\n \n            card = insCard.getCard();\n \n \n            \n            int intCount = 0;\n            intCount = insCard.win(card);\n            \n \n            if(3 <= intCount){\n                System.out.println(1);\n \n            }else{\n                System.out.println(0);\n            }\n \n \n        }\n \n \n \n    }\n \n    static class Card {\n    \t\n        private int[][] card = new int[2][9];\n \n        \n        Card(){\n \n        }\n \n \n        public int[][] getCard() {\n            return card;\n        }\n \n        \n        public void setCard(int[][] card) {\n            this.card = card;\n        }\n \n        \n        public void sort(int[][] card){\n \n            \n            for(int i = 0; i < 8; i++){\n \n                for(int j = 0; j < 8-i; j++ ){\n \n                    if(card[1][j] > card[1][j+1]){\n                        int temp = card[1][j];\n                        card[1][j] = card[1][j+1];\n                        card[1][j+1] = temp;\n                        \n                        int temp2 = card[0][j];\n                        card[0][j] = card[0][j+1];\n                        card[0][j+1] = temp2;\n                    }\n                }\n            }\n \n \n            for(int i = 0; i < 8; i++){\n \n                for(int j = 0; j < 8-i; j++){\n                    \n                    if(card[1][j] == card[1][j+1] && card[0][j] > card[0][j+1]){\n \n                        int temp = card[0][j];\n                        card[0][j] = card[0][j+1];\n                        card[0][j+1] = temp;\n                        \n                    }\n \n \n                }\n            }\n \n        }\n \n        \n        public int win(int[][] card){\n \n            \n            int intCount = 0;\n           \n \n \n           \n            for(int k= 0; k < 7; k++){\n                \n                for(int j = k+1; j < 8; j++ ){\n                   \n                    for(int i = j+1; i < 9; i++){\n                    \t\n                       if(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n                            \n \n                            if(card[0][k] != 0 && card[0][k] == card[0][j] -1 && card[0][k] == card[0][i] -2){\n \n \n                               \n                                intCount++;\n                               \n                                card[0][k] = 0;\n                                card[0][j] = 0;\n                                card[0][i] = 0;\n                            }\n                        }\n \n                    }\n                }\n            }\n            \n           \n            for(int k= 0; k < 7; k++){\n                \n                for(int j = k+1; j < 8; j++ ){\n                    \n                    for(int i = j+1; i < 9; i++){\n                        \n                        if(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n                           \n                            if(card[0][k] != 0 && card[0][k] == card[0][j] && card[0][k] == card[0][i]){\n \n                                \n                                intCount++;\n                               \n                                card[0][k] = 0;\n                                card[0][j] = 0;\n                                card[0][i] = 0;\n                            }\n                        }\n                    }\n                }\n            }\n            return intCount;\n        }\n \n \n    }\n \n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tint gameset = br.read();\n\n\t\tCardRummy cr = new CardRummy();\n\n\t\twhile (true) {\n\n\t\t\tfor (int i = 0; i < CardRummy.CARDPAGE; i++) {\n\t\t\t\tfor (int j = 0; j < CardRummy.ONECARDSET; j++) {\n\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\tcr.card[i][j] = br.read();\n\t\t\t\t\telse {\n\t\t\t\t\t\tswitch (br.read()) {\n\t\t\t\t\t\tcase 'R':\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.RED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'G':\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.GREEN;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'B':\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.BLUE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (gameset-- == 0) {\n\t\t\t\tcr.setCardset(cr.card);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcr.card = cr.getCardset();\n\n\t\t// game start\n\t\tint cnt = 0;\n\t\tcnt = cr.playtheGame(cr.card); // ?????????\n\t\t// game result\n\t\tif (3 <= cnt)\n\t\t\tSystem.out.println(1);\n\t\telse\n\t\t\tSystem.out.println(0);\n\t}\n\n\t}\nclass CardRummy{\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// num\n\tfinal int NUMBER0 = 0;\n\tfinal int NUMBER1 = 1;\n\tfinal int NUMBER2 = 2;\n\tfinal int NUMBER3 = 3;\n\tfinal int NUMBER4 = 4;\n\tfinal int NUMBER5 = 5;\n\tfinal int NUMBER6 = 6;\n\tfinal int NUMBER7 = 7;\n\tfinal int NUMBER8 = 8;\n\tfinal int NUMBER9 = 9;\n\n\t// color\n\tstatic final int RED = 1;\n\tstatic final int GREEN = 2;\n\tstatic final int BLUE = 3;\n\n\tint[][] card = new int[CARDPAGE][ONECARDSET];\n\tCardRummy[][] ArrCR = new CardRummy[CARDPAGE][ONECARDSET];\n\n\tpublic CardRummy() {\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tcard[i][0] = 0;\n\t\t\tcard[i][1] = card[i][0];\n\t\t}\n\t}\n\tpublic int[][] getCardset() {\n\t\treturn card;\n\t}\n\n\t// ????????????????????????????????\\??????\n\tpublic void setCardset(int [][] card) {\n\t\tthis.card = settingcardplay(card);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {// Error point\n\n\t\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\n\t\t\t\t// ?????????color???????????????\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\t// ???????????????????????????????????¨????????°?????£?¨????????????????????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// ??????color&num???????????????\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\t\t\t\t\t// ?????????????????????\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\tint cnt = 0;\n\t\t// ??????for????????????????¬??????¨???????????????\n\t\t// ex : [0][1][2] ....\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ??£????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ?????????????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][i] == cardset[0][k] - 2) {\n\t\t\t\t\t\t\t// Error point\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ???????????°????????????main????????????????????????????????????\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\t// 答えの格納場所\n\t\tArrayList<Integer> intAryAnswer = new ArrayList<Integer>();\n\n\t\t// 1行目を取得\n\t\ttry {\n\t\t\tBufferedReader insBR = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t\tString strNum = insBR.readLine();\n\n\t\t\t// DataSetNumは何回判定するか\n\t\t\tint DataSetNum = Integer.parseInt(strNum);\n\n\t\t\t//判断する回数まわす\n\t\t\tfor (int i = 0; i < DataSetNum; i++) {\n\n\t\t\t\t//カードの数字とシンボルを取得\n\t\t\t\tString strNumLine = insBR.readLine();\n\t\t\t\tString strSymbolLine = insBR.readLine();\n\n\t\t\t\t//人クラスを作成　数字とシンボルを引数に\n\t\t\t\tPlayer player = new Player(strNumLine, strSymbolLine);\n\n\t\t\t\t//勝利条件に満たせば1　満たさなければ0\n\t\t\t\tint intJugmet = player.Judgment();\n\n\t\t\t\t//答えを格納\n\t\t\t\tintAryAnswer.add(intJugmet);\n\n\t\t\t}\n\n\t\t\t// 答えが何個あるか取得\n\t\t\tint intSize = intAryAnswer.size();\n\n\t\t\t// 出力\n\t\t\tfor (int i = 0; i < intSize; i++) {\n\t\t\t\tSystem.out.println(intAryAnswer.get(i));\n\t\t\t}\n\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\n\n\t}\n\n\tpublic static class Player{\n\n\n\t\t/**\n\t\t * カードR\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardR = new ArrayList<Integer>();\n\t\tprivate int[] CardR = new int[9];\n\n\t\t/**\n\t\t * カードG\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardG = new ArrayList<Integer>();\n\t\tprivate int[] CardG = new int[9];\n\n\t\t/**\n\t\t * カードB\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardB = new ArrayList<Integer>();\n\t\tprivate int[] CardB = new int[9];\n\n\t\t/**\n\t\t * 引数を受け取り　フィールド値に格納する\n\t\t * @param strNumLine　カードの数字の羅列　例:1 2 3 4 5 6 7 8 9\n\t\t * @param strSymbolLine　カードのシンボルの羅列 例:R R R G G G B B B\n\t\t */\n\t\tPlayer(String strNumLine, String strSymbolLine) {\n\n\t\t\t// 分解\n\t\t\tString[] strAryNum = strNumLine.split(\" \");\n\n\t\t\tString[] strArySymbol = strSymbolLine.split(\" \");\n\n\t\t\tint intNum = 0;\n\n\t\t\tint intR = 0;\n\n\t\t\tint intG = 0;\n\n\t\t\tint intB = 0;\n\n\t\t\t//分解したものを振り分ける\n\t\t\tfor(int i = 0; i < strAryNum.length; i++) {\n\n\t\t\t\t//CardRとCardGとCardBを合わせて9枚になる\n\t\t\t\tif(strArySymbol[i].equals(\"R\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardR.add(intNum);\n\t\t\t\t\t CardR[intR] = intNum;\n\n\t\t\t\t\t intR++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"G\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardG.add(intNum);\n\t\t\t\t\t CardG[intG] = intNum;\n\n\t\t\t\t\t intG++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"B\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardB.add(intNum);\n\t\t\t\t\t CardB[intB] = intNum;\n\n\t\t\t\t\t intB++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\t/**\n\t\t * 勝利条件を判定する\n\t\t * @return intAnswer 勝利なら1　勝利に満たさないなら0\n\t\t */\n\t\tint Judgment() {\n\n\t\t\tArrays.sort(CardR);\n\t\t\tArrays.sort(CardG);\n\t\t\tArrays.sort(CardB);\n\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardR[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardG[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardB[a]);\n//\t\t\t}\n//\t\t\tSystem.out.println();\n\n\t\t\tCardR = pairs3Remove(CardR);\n\t\t\tCardG = pairs3Remove(CardG);\n\t\t\tCardB = pairs3Remove(CardB);\n\n\t\t\tCardR = ThreeConsecutiveNumber(CardR);\n\t\t\tCardG = ThreeConsecutiveNumber(CardG);\n\t\t\tCardB = ThreeConsecutiveNumber(CardB);\n\n\t\t\tint intNum = 0;\n\n\t\t\tfor(int a = 0; a < 9; a++) {\n\n\t\t\t\tif(CardR[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\n\t\t\t\tif(CardG[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\n\t\t\t\tif(CardB[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardR[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardG[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardB[a]);\n//\t\t\t}\n//\t\t\tSystem.out.println();\n\n\t\t\tif(intNum == 0) {\n\t\t\t\tintNum = 1;\n\t\t\t} else {\n\t\t\t\tintNum = 0;\n\t\t\t}\n\n\n\t\t\treturn intNum;\n\n\t\t}\n\n\n\n\n\t}\n\n\tpublic static int[] pairs3Remove(int[] Card) {\n\n\t\tint count = 0;\n\n\t\t//対子の３つを格納する場所\n\t\tint[] count3Toitu = new int[9];\n\n\t\tint count3ToituCount = 0;\n\n\t\tfor(int i = 0; i < 9; i++) {\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tif(Card[j] == i + 1) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tcount3Toitu[count3ToituCount] = j + 1;\n\t\t\t\t\tcount3ToituCount++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(count >= 3) {\n\n\t\t\t\tint count2 = 0;\n\n\t\t\t\tfor(int k = 0; k < 9; k++) {\n\t\t\t\t\tif(count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tint intNum = count3Toitu[k];\n\t\t\t\t\tCard[intNum - 1] = 0;\n\n\t\t\t\t\tcount2 ++;\n\t\t\t\t}\n\n\t\t\t\tcount2 = 0;\n\n\n\t\t\t}\n\t\t\tcount = 0;\n\n\t\t\tcount3ToituCount = 0;\n\n\n\t\t}\n\n\t\treturn Card;\n\n\n\t}\n\n\tpublic static int[] ThreeConsecutiveNumber(int[] Card) {\n\n\t\tint[][] count3Zyuntu = new int[3][2];\n\n\t\tint count3ZyuntuCount = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile(i < 7) {\n\n\t\t\touter:\n\t\t\twhile(true){\n\n\t\t\t\tif(k == 4) {\n\t\t\t\t\tint intNum1 = count3Zyuntu[0][1];\n\t\t\t\t\tint intNum2 = count3Zyuntu[1][1];\n\t\t\t\t\tint intNum3 = count3Zyuntu[2][1];\n\t\t\t\t\tCard[intNum1] = 0;\n\t\t\t\t\tCard[intNum2] = 0;\n\t\t\t\t\tCard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(Card);\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif(j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(Card[j] == k + i) {\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][0] = k + i;\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][1] = j;\n\t\t\t\t\tcount3ZyuntuCount++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcount3ZyuntuCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result = toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tString[] c = new String[9];\n\t\tint[][] num = new int[3][9];\n\t\tfor (int l = 0; l < T; l++) {\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tc[i] = sc.next();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tswitch (c[i].charAt(0)) {\n\t\t\t\tcase 'R':\n\t\t\t\t\tnum[0][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tnum[1][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnum[2][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\t\tif (num[i][j] >= 3) {\n\t\t\t\t\t\tnum[i][j] -= 3;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\twhile (j < 7 && num[i][j] > 0 && num[i][j + 1] > 0 && num[i][j + 2] > 0) {\n\t\t\t\t\t\tnum[i][j]--;\n\t\t\t\t\t\tnum[i][j + 1]--;\n\t\t\t\t\t\tnum[i][j + 2]--;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 3)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t// カードの色をチェックし、手役になりうるかをチェック\n\tpublic boolean checkColor(ArrayList<HashMap<String, String>> hand) {\n\t\t// R, G, Bそれぞれの数\n\t\tint red = 0;\n\t\tint green = 0;\n\t\tint blue = 0;\n\t\tfor(HashMap<String, String> card : hand) {\n\t\t\tif(card.get(\"color\").equals(\"R\")) red++;\n\t\t\telse if(card.get(\"color\").equals(\"G\")) green++;\n\t\t\telse if(card.get(\"color\").equals(\"B\")) blue++;\n\t\t}\n\n\t\t// それぞれが３の倍数ならOK\n\t\tif(red % 3 == 0 && green % 3 == 0 && blue % 3 == 0) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// 1ブロック文のカードの組み合わせを全パターン抽出\n\tpublic Integer[][] createPattern(ArrayList<HashMap<String, String>> hand) {\n\n\t\tInteger[][] selected = new Integer[84][3]; // すでに選択した組み合わせ\n\t\tint selectedIte = 0;\n\n\t\tfor(int i=0; i<hand.size(); i++) {\n\t\t\tfor(int j=0; j<hand.size(); j++) {\n\t\t\t\t// 重複したカードは選択しない\n\t\t\t\tif(i == j) continue;\n\t\t\t\tfor(int k=0; k<hand.size(); k++) {\n\t\t\t\t\t// 重複したカードは選択しない\n\t\t\t\t\tif(j == k || i==k) continue;\n\t\t\t\t\t// すでに取得している組み合わせも選択しない\n\t\t\t\t\tInteger[] addList = {i, j, k};\n\t\t\t\t\tif(checkDuplicate(selected, addList)) continue;\n\t\t\t\t\tselected[selectedIte] = addList;\n\t\t\t\t\tselectedIte++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn selected;\n\n\t}\n\n\t// 2次元配列の要素に特定の配列が入っているか(順不同)\n\t// checkArrは３つで固定\n\tprivate boolean checkDuplicate(Integer[][] arr, Integer[] checkArr) {\n\n\t\tfor(int i=0; i<arr.length; i++) {\n\t\t\tif(Arrays.asList(arr[i]).contains(checkArr[0]) && Arrays.asList(arr[i]).contains(checkArr[1]) && Arrays.asList(arr[i]).contains(checkArr[2])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t// １つめの配列に２つめの配列の要素が含まれていないか\n\tpublic boolean checkDuplicate3(Integer[] arr, Integer[] checkArr) {\n\n\t\tfor(int i=0; i<arr.length; i++) {\n\t\t\tfor(int j=0; j<checkArr.length; j++) {\n\t\t\t\tif(arr[i] == checkArr[j]) return false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// カードの組み合わせを全パターン抽出\n\tpublic ArrayList<Integer[][]> createPattern2(ArrayList<HashMap<String, String>> hand) {\n\n\t\t// 1ブロックごと取得し、取得済の値を配列から取り除いて再度組み合わせを取得する\n\t\t// 3つのブロックを作るのでカウントを設定\n\n\t\t// 値が重複していないブロックを探し手札とする\n\t\tArrayList<Integer[][]> hands = new ArrayList<>();\n\t\t//\t\tint handsIte = 0;\n\t\t// １ブロックの全パターン\n\t\tInteger[][] blockPatterns = createPattern(hand);\n\n\t\t//\t\tSystem.exit(1);\n\n\t\tint blockPatternsNum = 84;\n\n\t\tfor(int i=0; i<blockPatternsNum; i++) {\n\t\t\tfor(int j=0; j<blockPatternsNum; j++) {\n\t\t\t\t// 1番目の配列に2番目の配列の各要素が入っていないかチェック\n\t\t\t\tif(!checkDuplicate3(blockPatterns[i], blockPatterns[j])) continue;\n\t\t\t\tfor(int k=0; k<blockPatternsNum; k++) {\n\t\t\t\t\t// 1番目の配列に3番目の配列の各要素が入っていないかチェック\n\t\t\t\t\tif(!checkDuplicate3(blockPatterns[i], blockPatterns[k])) continue;\n\t\t\t\t\t// 2番目の配列に3番目の配列の各要素が入っていないかチェック\n\t\t\t\t\tif(!checkDuplicate3(blockPatterns[j], blockPatterns[k])) continue;\n\n\t\t\t\t\t// 組み合わせを追加\n\t\t\t\t\tInteger[][] h = new Integer[3][3];\n\t\t\t\t\th[0] = blockPatterns[i];\n\t\t\t\t\th[1] = blockPatterns[j];\n\t\t\t\t\th[2] = blockPatterns[k];\n\t\t\t\t\thands.add(h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hands;\n\n\t}\n\n\t// 役になっているかの判断\n\tpublic boolean checkHand(ArrayList<HashMap<String, String>> hand) {\n\n\t\t// 色が同じか３つずつ判定する\n\t\tfor(int i=0; i<9; i+=3) {\n\t\t\t//\t\t\tfor(int j=i; j<3; j++) {\n\t\t\tif(!hand.get(i).get(\"color\").equals(hand.get(i+1).get(\"color\")) || !hand.get(i+1).get(\"color\").equals(hand.get(i+2).get(\"color\")) || !hand.get(i).get(\"color\").equals(hand.get(i+2).get(\"color\"))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// 番号でソートし、数値が並んでいる、または同じ数値なことを確認\n\t\t// 3つずつソート\n\t\tfor(int i=0; i<9; i+=3) {\n\t\t\tArrayList<HashMap<String, String>> sortBlock = new ArrayList<>();\n\t\t\tsortBlock.add(hand.get(i));\n\t\t\tsortBlock.add(hand.get(i+1));\n\t\t\tsortBlock.add(hand.get(i+2));\n\t\t\tsortBlock = sortBlock(sortBlock);\n\t\t\t// 数値を比較\n\t\t\tint num1 = Integer.parseInt(sortBlock.get(0).get(\"num\"));\n\t\t\tint num2 = Integer.parseInt(sortBlock.get(1).get(\"num\"));\n\t\t\tint num3 = Integer.parseInt(sortBlock.get(2).get(\"num\"));\n\t\t\tif(!(num1 == num2 && num2 == num3 || num1+1 == num2 && num2+1 == num3)) return false;\n\t\t\t//\t\t\tSystem.out.println(\"\");\n\t\t}\n\n\n\t\treturn true;\n\n\t}\n\n\t// 手役の1ブロックをソート\n\tprivate ArrayList<HashMap<String, String>> sortBlock(ArrayList<HashMap<String, String>> handBlock) {\n\n\t\tArrayList<HashMap<String, String>> ret = new ArrayList<>();\n\t\tret = handBlock;\n\n\t\tfor(int i=0; i<ret.size()-1; i++) {\n\t\t\tfor(int j=ret.size()-1; j > i; j--) {\n\t\t\t\tif(Integer.parseInt(ret.get(j-1).get(\"num\")) > Integer.parseInt(ret.get(j).get(\"num\"))) {\n\t\t\t\t\tHashMap<String, String> buf = ret.get(j-1);\n\t\t\t\t\tret.set(j-1, ret.get(j));\n\t\t\t\t\tret.set(j, buf);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\n\t}\n\n\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint handNum = 9; // 手札の数\n\t\tint cardNum = sc.nextInt();\n\n\t\tint[] nums = new int[9];\n\t\tfor(int k=0; k<cardNum; k++) {\n\t\t\tArrayList<HashMap<String, String>> cardList = new ArrayList<>();\n\t\t\tfor(int i=0; i<9; i++) {\n\t\t\t\tnums[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0; i<9; i++) {\n\t\t\t\tString color = sc.next();\n\t\t\t\tHashMap<String, String> card = new HashMap<>();\n\t\t\t\tcard.put(\"num\", String.valueOf(nums[i]));\n\t\t\t\tcard.put(\"color\", color);\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\n\t\t\t// 手札をセット\n\t\t\tArrayList<HashMap<String, String>> hand = new ArrayList<>();\n\t\t\tfor(int i=0; i<handNum; i++) {\n\t\t\t\thand.add(cardList.get(i));\n\t\t\t}\n\n\t\t\tMain r = new Main();\n\n\t\t\t// それぞれのカードの色を確認し、手役になりうるかのチェック\n\t\t\tif(!r.checkColor(hand)) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// 全パターンを抽出\n\t\t\tr.createPattern(hand);\n\n\t\t\tArrayList<Integer[][]> handList = r.createPattern2(hand);\n\n\t\t\tint okFlag = 0;\n\n\t\t\t// リストをもとに役になっているのか判断\n\t\t\t// 手役を渡す\n\t\t\tfor(Integer[][] h : handList) {\n\t\t\t\t// 判定する手役生成\n\t\t\t\tArrayList<HashMap<String, String>> checkHand = new ArrayList<>();\n\t\t\t\tfor(int i=0; i<3; i++) {\n\t\t\t\t\tcheckHand.add(hand.get(h[i][0]));\n\t\t\t\t\tcheckHand.add(hand.get(h[i][1]));\n\t\t\t\t\tcheckHand.add(hand.get(h[i][2]));\n\t\t\t\t}\n\n\t\t\t\t// 手役判定を行う\n\t\t\t\tif(r.checkHand(checkHand)) {\n\t\t\t\t\tokFlag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tSystem.out.println(okFlag);\n\n\t\t}\n\t\tsc.close();\n\n\t}\n\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n//ラミー\npublic class Main {\n    public static void main(String[] args) throws Exception {\n       Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();//データセット数\n        int[] cardNum = new int[9];//カードの数字\n        String[] color = new String[9];//カードの色\n        String[] card = new String[9];//数字と色の組み合わせ\n        String[] checkCard = new String[2];//数字と色の組み合わせ\n        \n        int check = 0;//上がりの１、出来ずは０に       \n        int count = 0;\n        \n        for(int x = 0; x < n; x++){\n//１セットめからスタート\n            for(int i = 0; i < 9; i++){\n                cardNum[i]= sc.nextInt();\n//検証用        System.out.println(cardNum[i]);\n            }\n            for(int i = 0; i < 9; i++){\n                color[i]=sc.next();\n//検証用        System.out.println(color[i]);\n            }\n            for(int i = 0; i < 9; i++){\n                card[i] = (cardNum[i] + color[i]);\n//検証用        System.out.println(card[i]);\n            }\n             ArrayList<Integer> red = new ArrayList<Integer>();//Ｒ:赤用\n             ArrayList<Integer> green = new ArrayList<Integer>();//Ｇ:緑用\n             ArrayList<Integer> blue = new ArrayList<Integer>();//Ｂ:青用\n    \n             for(int i = 0; i < 9; i++){\n                 checkCard = card[i].split(\"\");\n\n                int num =  Integer.parseInt(checkCard[0]);\n                \n                if(\"R\".equals(checkCard[1])){\n                    red.add(num);\n\n                }else if(\"G\".equals(checkCard[1])){\n                    green.add(num);\n\n                }else if(\"B\".equals(checkCard[1])){\n                    blue.add(num);\n                }\n             }\n//ここから！　Ｒからチェックしていく\n\n             if(red.size() != 0){\n                Collections.sort(red);\n\n                    if(red.size() == 9){\n                        if((red.get(6) == red.get(7) && red.get(7) == red.get(8))\n                        ||(red.get(6)+1 == red.get(7) && red.get(7)+1 == red.get(8))){\n                            count++;\n                            red.remove(8);\n                            red.remove(7);\n                            red.remove(6);\n                        }\n                        else if((red.get(0) == red.get(1) && red.get(1) == red.get(2))\n                        ||(red.get(0)+1 == red.get(1) && red.get(1)+1 == red.get(2))){\n                            count++;\n                            red.remove(2);\n                            red.remove(1);\n                            red.remove(0);\n                        }\n                    }\n        \n                    if(red.size() == 6){\n                        if((red.get(3) == red.get(4) && red.get(4) == red.get(5))\n                        ||(red.get(3)+1 == red.get(4) && red.get(4)+1 == red.get(5))){\n                            count++;\n                            red.remove(5);\n                            red.remove(4);\n                            red.remove(3);\n                        }\n                        else if((red.get(0) == red.get(1) && red.get(1) == red.get(2))\n                        ||(red.get(0)+1 == red.get(1) && red.get(1)+1 == red.get(2))){\n                            count++;\n                            red.remove(2);\n                            red.remove(1);\n                            red.remove(0);\n                        }\n                        else if((red.get(0)+1 == red.get(2) && red.get(2)+1 == red.get(4))){\n                            count++;\n                            red.remove(4);\n                            red.remove(2);\n                            red.remove(0);\n                        }\n                        else if((red.get(1)+1 == red.get(3) && red.get(3)+1 == red.get(5))){\n                            count++;\n                            red.remove(5);\n                            red.remove(3);\n                            red.remove(1);\n                        }\n                    }\n                    if(red.size() == 3){\n                        if((red.get(0) == red.get(1) && red.get(1) == red.get(2))\n                        ||(red.get(0)+1 == red.get(1) && red.get(1)+1 == red.get(2))){\n                            count++;\n/*                            red.remove(2);\n                            red.remove(1);\n                            red.remove(0);*/\n                        }\n                    }\n             }\n //ここからＧ緑をチェックしていく           \n        \n             if(green.size() != 0){\n                Collections.sort(green);\n                 \n                    if(green.size() == 9){\n                        if((green.get(6) == green.get(7) && green.get(7) == green.get(8))\n                        ||(green.get(6)+1 == green.get(7) && green.get(7)+1 == green.get(8))){\n                            count++;\n                            green.remove(8);\n                            green.remove(7);\n                            green.remove(6);\n                        }\n                        else if((green.get(0) == green.get(1) && green.get(1) == green.get(2))\n                        ||(green.get(0)+1 == green.get(1) && green.get(1)+1 == green.get(2))){\n                            count++;\n                            green.remove(2);\n                            green.remove(1);\n                            green.remove(0);\n                        }\n                    }\n        \n                    if(green.size() == 6){\n                        if((green.get(3) == green.get(4) && green.get(4) == green.get(5))\n                        ||(green.get(3)+1 == green.get(4) && green.get(4)+1 == green.get(5))){\n                            count++;\n                            green.remove(5);\n                            green.remove(4);\n                            green.remove(3);\n                        }\n                        else if((green.get(0) == green.get(1) && green.get(1) == green.get(2))\n                        ||(green.get(0)+1 == green.get(1) && green.get(1)+1 == green.get(2))){\n                            count++;\n                            green.remove(2);\n                            green.remove(1);\n                            green.remove(0);\n                        }\n                        else if((green.get(0)+1 == green.get(2) && green.get(2)+1 == green.get(4))){\n                            count++;\n                            green.remove(4);\n                            green.remove(2);\n                            green.remove(0);\n                        }\n                        else if((green.get(1)+1 == green.get(3) && green.get(3)+1 == green.get(5))){\n                            count++;\n                            green.remove(5);\n                            green.remove(3);\n                            green.remove(1);\n                        }\n                    }\n                    if(green.size() == 3){\n                        if((green.get(0) == green.get(1) && green.get(1) == green.get(2))\n                        ||(green.get(0)+1 == green.get(1) && green.get(1)+1 == green.get(2))){\n                            count++;\n  /*                          green.remove(2);\n                            green.remove(1);\n                            green.remove(0);*/\n                        }\n                    }\n                }\n //ここからＢ青スタート        \n        \n             if(blue.size() != 0){\n                Collections.sort(blue);\n \n                    if(blue.size() == 9){\n                        if((blue.get(6) == blue.get(7) && blue.get(7) == blue.get(8))\n                        ||(blue.get(6)+1 == blue.get(7) && blue.get(7)+1 == blue.get(8))){\n                            count++;\n                            blue.remove(8);\n                            blue.remove(7);\n                            blue.remove(6);\n                        }\n                        else if((blue.get(0) == blue.get(1) && blue.get(1) == blue.get(2))\n                        ||(blue.get(0)+1 == blue.get(1) && blue.get(1)+1 == blue.get(2))){\n                            count++;\n                            blue.remove(2);\n                            blue.remove(1);\n                            blue.remove(0);\n                        }\n                    }\n        \n                    if(blue.size() == 6){\n                        if((blue.get(3) == blue.get(4) && blue.get(4) == blue.get(5))\n                        ||(blue.get(3)+1 == blue.get(4) && blue.get(4)+1 == blue.get(5))){\n                            count++;\n                            blue.remove(5);\n                            blue.remove(4);\n                            blue.remove(3);\n                        }\n                        else if((blue.get(0) == blue.get(1) && blue.get(1) == blue.get(2))\n                        ||(blue.get(0)+1 == blue.get(1) && blue.get(1)+1 == blue.get(2))){\n                            count++;\n                            blue.remove(2);\n                            blue.remove(1);\n                            blue.remove(0);\n                        }\n                        else if((blue.get(0)+1 == blue.get(2) && blue.get(2)+1 == blue.get(4))){\n                            count++;\n                            blue.remove(4);\n                            blue.remove(2);\n                            blue.remove(0);\n                        }\n                        else if((blue.get(1)+1 == blue.get(3) && blue.get(3)+1 == blue.get(5))){\n                            count++;\n                            blue.remove(5);\n                            blue.remove(3);\n                            blue.remove(1);\n                        }\n                    }\n                    if(blue.size() == 3){\n                        if((blue.get(0) == blue.get(1) && blue.get(1) == blue.get(2))\n                        ||(blue.get(0)+1 == blue.get(1) && blue.get(1)+1 == blue.get(2))){\n                            count++;\n   /*                         blue.remove(2);\n                            blue.remove(1);\n                            blue.remove(0);*/\n                        }\n                    }\n             }//判定する\n                if(count == 3){\n                    check = 1;\n                }else{\n                    check = 0;\n                }System.out.println(check);\n                count = 0;\n        }\n    }\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tString[] c = new String[9];\n\t\tint[][] num = new int[3][9];\n\t\tfor (int l = 0; l < T; l++) {\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tc[i] = sc.next();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tswitch (c[i].charAt(0)) {\n\t\t\t\tcase 'R':\n\t\t\t\t\tnum[0][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tnum[1][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnum[2][n[i] - 1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\t\tif (num[i][j] >= 3) {\n\t\t\t\t\t\tnum[i][j] -= 3;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[i][j] > 0) {\n\t\t\t\t\t\tif (j < 7 && num[i][j + 1] > 0 && num[i][j + 2] > 0) {\n\t\t\t\t\t\t\tnum[i][j]--;\n\t\t\t\t\t\t\tnum[i][j + 1]--;\n\t\t\t\t\t\t\tnum[i][j + 2]--;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 3)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nimport static java.util.Arrays.sort;\n\npublic class Main {\n    public  static void  main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n\n        for(int i = 0; i< t; i++){\n            int[] num = new int[9];\n            String[] col = new String[9];\n\n            for(int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for(int j = 0; j < 9; j++)\n                col[j] = sc.next();\n\n            int countR = 0;\n            int countG = 0;\n            int countB = 0;\n\n            int[] numred = null, numgrn = null, numblue = null;\n\n            for(int j = 0; j < 9; j++){\n                if(col[j].equals(\"R\"))\n                    countR++;\n                else if(col[j].equals(\"G\"))\n                    countG++;\n                else\n                    countB++;\n            }\n\n            if(countR % 3 !=0 && countG % 3 != 0 && countB % 3 != 0){\n                System.out.println(\"0\");\n                return;\n            }\n\n            if(countR != 0){\n                numred = new int[countR];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"R\"))\n                        numred[indexnum++] = num[j];\n                }\n                sort(numred);\n            }\n\n            if(countG != 0){\n                numgrn = new int[countG];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"G\"))\n                        numgrn[indexnum++] = num[j];\n                }\n                sort(numgrn);\n            }\n\n            if(countB != 0){\n                numblue = new int[countB];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"B\"))\n                        numblue[indexnum++] = num[j];\n                }\n                sort(numblue);\n            }\n\n            if(countR == 3){\n                if((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countR == 6){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countR == 9){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5] && numred[6] == numred[7] && numred[7] == numred[8]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1 && numred[6] + 1 == numred[7] && numred[7] == numred[8] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            \n            if(countG == 3){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countG == 6){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countG == 9){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5] && numgrn[6] == numgrn[7] && numgrn[7] == numgrn[8]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1 && numgrn[6] + 1 == numgrn[7] && numgrn[7] == numgrn[8] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n\n            if(countB == 3){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countB == 6){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countB == 9){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5] && numblue[6] == numblue[7] && numblue[7] == numblue[8]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1 && numblue[6] + 1 == numblue[7] && numblue[7] == numblue[8] - 1)){\n                    \n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            System.out.println(1);\n        }\n        sc.close();\n\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\t\n    public static void main(String[] args) {\n    \t\n        Scanner sc = new Scanner(System.in);\n        \n\t\tint player = sc.nextInt();\n        \n        int []number = new int[9];\n        String []color = new String[9];\n        \n        for(int playerNum = 0; playerNum < player; playerNum++) {\n        \t//セット数\n        \tint setCount = 0;\n        \t\n        \tList<Integer> R = new ArrayList<Integer>();\n            List<Integer> G = new ArrayList<Integer>();\n            List<Integer> B = new ArrayList<Integer>();\n        \t\n        \t//カードの番号を格納\n        \tfor(int cardNum = 0; cardNum < 9; cardNum++) {\n        \t\tnumber[cardNum] = sc.nextInt();\n        \t}\n        \t//カードの色を格納\n        \tfor(int cardnum = 0; cardnum < 9; cardnum++) {\n        \t\tcolor[cardnum] = sc.next();\n        \t}\n        \t\n        \t//RGBそれぞれのリストにカードの数字を格納\n        \tfor(int CardNum = 0; CardNum < 9; CardNum++) {\n        \t\tif(color[CardNum].equals(\"R\")) {\n        \t\t\tR.add(number[CardNum]);\n        \t\t}\n        \t\tif(color[CardNum].equals(\"G\")) {\n        \t\t\tG.add(number[CardNum]);\n        \t\t}\n        \t\tif(color[CardNum].equals(\"B\")) {\n        \t\t\tB.add(number[CardNum]);\n        \t\t}\n        \t\t\n        \t}\n        \t\n        \t//降順に並び替える\n    \tCollections.sort(R);\n        \tCollections.sort(G);\n        \tCollections.sort(B);\n        \t\n        \tint origin = 0;\n        \t\n        \t//Rリスト(連番)\n        \tfor(int r = 0; r < R.size() - 2; r++) {\n        \t\torigin = R.get(r);\n        \t\t\n        \t\tif(origin != 0) {\n        \t\t\tif(R.contains(origin + 1) && R.contains(origin + 2)) {\n        \t\t\t\tsetCount ++;\n        \t\t\t\tR.set(R.indexOf(origin), 0);\n        \t\t\t\tR.set(R.indexOf(origin + 1), 0);\n        \t\t\t\tR.set(R.indexOf(origin + 2), 0);\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t//Rリスト（同数字）\n        \tfor(int r = 0; r < R.size() - 2; r++) {\n        \t\tif(R.get(r) != 0) {\n        \t\t\torigin = R.get(r);\n        \t\t\t\n        \t\t\tif(R.get(r + 1) == origin && R.get(r + 2) == origin) {\n        \t\t\t\tsetCount++;\n        \t\t\t\tR.set(r, 0);\n        \t\t\t\tR.set(r + 1, 0);\n        \t\t\t\tR.set(r + 2, 0);\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t//Gリスト(連番)\n        \tfor(int g = 0; g < G.size() - 2; g++) {\n        \t\torigin = G.get(g);\n        \t\t\n        \t\t//連番確認\n        \t\tif(origin != 0) {\n        \t\t\tif(G.contains(origin + 1) && G.contains(origin + 2)) {\n        \t\t\t\tsetCount ++;\n        \t\t\t\tG.set(G.indexOf(origin), 0);\n        \t\t\t\tG.set(G.indexOf(origin + 1), 0);\n        \t\t\t\tG.set(G.indexOf(origin + 2), 0);\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t//Gリスト（同数字）\n        \tfor(int g = 0; g < G.size() - 2; g++) {\n        \t\tif(G.get(g) != 0) {\n        \t\t\torigin = G.get(g);\n        \t\t\t\n        \t\t\tif(G.get(g + 1) == origin && G.get(g + 2) == origin) {\n        \t\t\t\tsetCount++;\n        \t\t\t\tG.set(g, 0);\n        \t\t\t\tG.set(g + 1, 0);\n        \t\t\t\tG.set(g + 2, 0);\n        \t\t\t}\n        \t\t}\n        \t}\n        \t\n        \t//Bリスト(連番)\n    \t\tfor(int b = 0; b < B.size() - 2; b++) {\n        \t\torigin = B.get(b);\n        \t\t\n        \t\t//連番確認\n        \t\tif(origin != 0) {\n        \t\t\tif(B.contains(origin + 1) && B.contains(origin + 2)) {\n        \t\t\t\tsetCount ++;\n        \t\t\t\tB.set(B.indexOf(origin), 0);\n        \t\t\t\tB.set(B.indexOf(origin + 1), 0);\n        \t\t\t\tB.set(B.indexOf(origin + 2), 0);\n        \t\t\t}\n        \t\t}\n    \t\t}\n        \t\t\n    \t\t//Bリスト（同数字）\n    \t\tfor(int b = 0; b < B.size() - 2; b++) {\n        \t\tif(B.get(b) != 0) {\n        \t\t\torigin = B.get(b);\n        \t\t\t\n        \t\t\tif(B.get(b + 1) == origin && B.get(b + 2) == origin) {\n        \t\t\t\tsetCount++;\n        \t\t\t\tB.set(b, 0);\n        \t\t\t\tB.set(b + 1, 0);\n        \t\t\t\tB.set(b + 2, 0);\n        \t\t\t}\n        \t\t}\n        \t}\n    \t\t\n        \tif(setCount == 3) {\n            \tSystem.out.println(\"1\");\n        \t}\n        \telse {\n        \t\tSystem.out.println(\"0\");\n        \t}\n        }\n    }\n}\n\n\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\t\tScanner scan = new Scanner(System.in);\n\t\t\t// ?????°???????????????\n\t\t\tint T = scan.nextInt();\n\t\t\t\n\t\t\t// ?????°?????°?????????\n\t\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\t\tint cards[][] = new int[9][3];\n\t\t\t\t//String color[] = {\"R\", \"G\", \"B\"};\n\t\t\t\t\n\t\t\t\tint n[];\n\t\t\t\tn = new int[9];\n\t\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\t\tn[i] = scan.nextInt();\n\t\t\t\t}\n\t\t\t\tint c[];\n\t\t\t\tc = new int[3];\n\t\t\t\tString C =\"\";\n\t\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\t\tC = scan.next();\n\t\t\t\t\tif (C.equals(\"R\")) c[i] = 0;\n\t\t\t\t\telse if (C.equals(\"G\")) c[i] = 1;\n\t\t\t\t\telse if (C.equals(\"B\")) c[i] = 2;\n\t\t\t\t}\n\t\t\t\t// ??????????????°????????????????´?\n\t\t\t\tfor (int i2=0; i2<3; i2++){\n\t\t\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\t\t\tint x = n[i];\n\t\t\t\t\t\tint y = c[i];\n\t\t\t\t\t\tcards[x][y] = cards[x][y] + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ?¢????\n\t\t\t\tint check = 0;\n\t\t\t\tfor (int i2=0; i2<3; i2++){\n\t\t\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\t\t\tif (cards[i][i2] == 3){\n\t\t\t\t\t\t\tcheck = check +1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(check != 0) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(check != 0) break;\n\t\t\t\t}\n\t\t\t\tfor (int i2=0; i2<3; i2++){\n\t\t\t\t\tif(check != 0) break;\n\t\t\t\t\tfor (int i=0; i<7; i++){\n\t\t\t\t\t\tif ((cards[i][i2] != 0) && (cards[i+1][i2] != 0) && (cards[i+2][i2] != 0)){\n\t\t\t\t\t\t\tcheck = check +1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(check != 0) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ??????\n\t\t\t\tif(check != 0) System.out.println(1);\n\t\t\t\telse System.out.println(0);\n\t\t\t\t\n\t\t\t} // T????????°?????°?????????\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\t//?????°\n\t/**\n\t * ??????????????°\n\t */\n\tprivate static int valueOfCard = 9;\n\t/**\n\t * ?????????????????????????¨??????°(1???9 = 9)\n\t */\n\tprivate static int numberOfCard = 9;\n\t/**\n\t * ??????????????????????¨??????°(R,G,B = 3)\n\t */\n\tprivate static int colorOfCard = 3;\n\t/**\n\t * 1?????????????????°\n\t */\n\tprivate static int valueOfSet = 3;\n\t/**\n\t * ???????????¶(???????????°)\n\t */\n\tprivate static int winSetCount = 3;\n\t/**\n\t * 1??????????????????????????¨???????????????????????????\n\t * @author SS\n\t *\n\t */\n\tstatic class Card {\n\t\tprivate int number;\n\t\tprivate String color;\n\n\t\tpublic int getNumber() {\n\t\t\treturn number;\n\t\t}\n\t\tpublic void setNumber(int number) {\n\t\t\tthis.number = number;\n\t\t}\n\t\tpublic String getColor() {\n\t\t\treturn color;\n\t\t}\n\t\tpublic void setColor(String color) {\n\t\t\tthis.color = color;\n\t\t}\n\t}\n\t/**\n\t * ??????????????????\n\t * ???????????????????????°?????\\??????????????¨???????????????1????????¨?????????\n\t * ???????????¶??????????????????????????°'1'???????????§???????????°'0'?????????\n\t * @param args\n\t */\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\t//??\\????????°?????????\n\t\tint intLoop = scan.nextInt();\n\t\t//????¨?????´???´????¢????\n\t\tArrayList<Integer> ansList = new ArrayList<Integer>();\n\t\tArrayList<Card> cards = new ArrayList<Card>();\n\n\t\t//??\\?????????\n\t\tfor(int i = 0; i < intLoop; i++){\n\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = new Card();\n\t\t\t\tcard.setNumber(scan.nextInt());\n\t\t\t\tcards.add(card);\n\t\t\t}\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = cards.get(j + i * valueOfCard);\n\t\t\t\tcard.setColor(scan.next());\n\t\t\t\tcards.set(j + i * valueOfCard, card);\n\t\t\t}\n\t\t}\n\t\tscan.close();\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint setCount = 0; //?????????????????°\n\t\t\tint[][] arrayRGB = new int[colorOfCard][numberOfCard];\n\t\t\t//RGB???????????\\?????????\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = cards.get(j + i * valueOfCard);\n\t\t\t\tString color = card.getColor();\n\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\tarrayRGB[0][card.getNumber() - 1]++;\n\t\t\t\t}else if(\"G\".equals(color)){\n\t\t\t\t\tarrayRGB[1][card.getNumber() - 1]++;\n\t\t\t\t}else if(\"B\".equals(color)){\n\t\t\t\t\tarrayRGB[2][card.getNumber() - 1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//???????????§??????\n\t\t\tfor(int j = 0; j < colorOfCard; j++){\n\t\t\t\tfor(int k = 0; k < valueOfCard - 2; k++){\n\t\t\t\t\tboolean isReplay = false;\n\t\t\t\t\tif(arrayRGB[j][k] != 0 && arrayRGB[j][k+1] != 0 && arrayRGB[j][k+2] !=0){\n\t\t\t\t\t\tarrayRGB[j][k]--;\n\t\t\t\t\t\tarrayRGB[j][k+1]--;\n\t\t\t\t\t\tarrayRGB[j][k+2]--;\n\t\t\t\t\t\tsetCount++;\n\t\t\t\t\t\tisReplay = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(isReplay && arrayRGB[j][k] != 0){\n\t\t\t\t\t\tk--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//???????????§??????\n\t\t\tfor(int j = 0; j < colorOfCard; j++){\n\t\t\t\tfor(int k = 0; k < valueOfCard; k++){\n\t\t\t\t\tif(arrayRGB[j][k] == valueOfSet){\n\t\t\t\t\t\tsetCount++;\n\t\t\t\t\t\tarrayRGB[j][k] -= valueOfSet;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(setCount == winSetCount){\n\t\t\t\tansList.add(1);\n\t\t\t}else{\n\t\t\t\tansList.add(0);\n\t\t\t}\n\t\t}\n\t\t//??????\n\t\tfor(int i = 0; i < ansList.size(); i++){\n\t\t\tSystem.out.println(ansList.get(i));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n    static int[] HASH_BASE = {40320, 5040, 720, 120, 24, 6, 2, 1, 1};\n    static int hashOfNextPerm = 0;\n    static int[] n = new int[9];\n\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int T = sc.nextInt();\n\n        for (int t=0; t<T; t++) {\n            hashOfNextPerm = 0;\n            for (int i=0; i<9; i++) n[i] = sc.nextInt();\n            for (int i=0; i<9; i++) {\n                char c = sc.next().toCharArray()[0];\n                if (c == 'G') n[i] += 10;\n                else if (c == 'B') n[i] += 20;\n            }\n            \n            Arrays.sort(n);\n\n            int[] perm;\n            while ((perm = nextPermutation()) != null) {\n                if (judge(perm)) {\n                    System.out.println(\"1\");\n                    break;\n                }\n            }\n            if (perm == null) System.out.println(\"0\");\n        }\n    }\n\n    static boolean judge(int[] p) {\n        return isSet(n[p[0]], n[p[1]], n[p[2]])\n                && isSet(n[p[3]], n[p[4]], n[p[5]])\n                && isSet(n[p[6]], n[p[7]], n[p[8]]);\n    }\n\n    static int tmp;\n    static boolean isSet(int a, int b, int c) {\n        if (a == b && b == c) return true;\n        else if (a+1 == b && b+1 == c) return true;\n        else return false;\n    }\n\n    static int[] nextPermutation() {\n        int[] ret = new int[9];\n\n        List<Integer> list = new ArrayList<>(Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8));\n        int n = hashOfNextPerm++;\n\n        if (n == 362880) return null;\n\n        for (int i=0; i<9; i++) {\n            ret[i] = list.get(n / HASH_BASE[i]);\n            list.remove(n / HASH_BASE[i]);\n            n %= HASH_BASE[i];\n        }\n\n        return ret;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(blueList) && Confirm(greenList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        // 長さ3の時\n        if (len / 3 == 1) {\n            if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n                return true;\n            } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        // 長さ6の時\n        if (len / 3 == 2) {\n            for (int i = 0; i < 4; i++) {\n                for (int j = i + 1; j < 5; j++) {\n                    for (int k = j + 1; j < 6; k++) {\n                        if (list.get(i) == list.get(j) && list.get(j) == list.get(k)) {\n                            return true;\n                        } else if (list.get(i) + 1 == list.get(j) && list.get(j) + 1 == list.get(k)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n\n        boolean finalflg0 = false;\n        boolean finalflg1 = false;\n        boolean finalflg2 = false;\n\n        // 長さ9の時\n        for (int i = 0; i < Math.pow(3, 9); i++) {\n\n            int flg0 = 0;\n            int flg1 = 0;\n            int flg2 = 0;\n\n            int last0 = 0;\n            int last1 = 0;\n            int last2 = 0;\n\n            for (int j = 0; j < 9; j++) { // 9文字に対して一つずつ見ていく\n                int nannbannme = 0;\n                int tmp = i;\n                for (int k = 0; k < j; k++) {\n                    nannbannme++;\n                    tmp /= 3;\n                }\n\n                switch (tmp % 3) {\n                case 0:\n                    if (last0 == list.get(nannbannme)) {\n                        if (flg0 == 1) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 1;\n                        }\n                    }\n\n                    if (last0 + 1 == list.get(nannbannme)) {\n                        if (flg0 == 2) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 2;\n                        }\n                    }\n\n                    last0 = list.get(nannbannme);\n                    break;\n                case 1:\n                    if (last1 == list.get(nannbannme)) {\n                        if (flg1 == 1) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 1;\n                        }\n                    }\n\n                    if (last1 + 1 == list.get(nannbannme)) {\n                        if (flg1 == 2) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 2;\n                        }\n                    }\n\n                    last1 = list.get(nannbannme);\n\n                    break;\n                case 2:\n                    if (last2 == list.get(nannbannme)) {\n                        if (flg2 == 1) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 1;\n                        }\n                    }\n\n                    if (last2 + 1 == list.get(nannbannme)) {\n                        if (flg2 == 2) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 2;\n                        }\n                    }\n\n                    last2 = list.get(nannbannme);\n\n                    break;\n                }\n            }\n\n        }\n\n        return (finalflg1 && finalflg2 && finalflg0);\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "package Rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tString ans = \"\";\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\t\tif(R.size()%3 != 0 || G.size()%3 != 0 || B.size()%3 != 0){\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tif(numSearch(R)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tif(numSearch(G)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tif(numSearch(B)){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\n\tprivate static boolean numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tswitch(r.size()){\n\t\tcase 3:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return true;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return true;\n\t\t\tbreak;\n\n\t\tcase 6:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif(i == 2) return true;\n\t\t\tbreak;\n\n\t\tcase 9:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif( r.get(6) == r.get(7) && r.get(6) == r.get(8) ) i++;\n\t\t\tif( r.get(6) == r.get(7)-1 && r.get(6) == r.get(8)-2 ) i++;\n\t\t\tif(i == 3) return true;\n\t\t\tbreak;\n\n\t\t}\n\n\n\t\t}\n\t\treturn false;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint data = sc.nextInt();\n\t\tint[][] hand = new int[4][9];\n\t\tString color;\n\t\tint r_cnt, g_cnt, b_cnt;\n\t\tint s_or_f;\n\n\t\tfor(int n=0; n<data; n++){\n\t\t\ts_or_f = 1;\n\t\t\tr_cnt = 0;\n\t\t\tg_cnt = 0;\n\t\t\tb_cnt = 0;\n\t\t\tfor(int i=0; i<9; i++){\n\t\t\t\thand[0][i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0; i<9; i++){\n\t\t\t\tcolor = sc.next();\n\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\thand[1][r_cnt] = hand[0][i];\n\t\t\t\t\tr_cnt++;\n\t\t\t\t}if(\"G\".equals(color)){\n\t\t\t\t\thand[2][g_cnt] = hand[0][i];\n\t\t\t\t\tg_cnt++;\n\t\t\t\t}else if(\"B\".equals(color)){\n\t\t\t\t\thand[3][b_cnt] = hand[0][i];\n\t\t\t\t\tb_cnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r_cnt%3==0 && g_cnt%3==0 && b_cnt%3==0){\n\t\t\t\tif(r_cnt!=0) s_or_f = rummy(hand[1], r_cnt-1);\n\t\t\t\tif(s_or_f==1 && g_cnt!=0) s_or_f = rummy(hand[2], g_cnt-1);\n\t\t\t\tif(s_or_f==1 && b_cnt!=0) s_or_f = rummy(hand[3], b_cnt-1);\n\t\t\t\tif(s_or_f==1){\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic int rummy(int[] hand, int cnt){\n\t\tint i;\n\t\tint[] index = new int[2];\n\n\t\twhile(true){\n\t\t\ti = 0;\n\t\t\tArrays.sort(hand, 0, cnt+1);\n\t\t\twhile(hand[i]==0){\n\t\t\t\ti++;\n\t\t\t\tif(i>cnt) return 1;\n\t\t\t}\n\t\t\tif(hand[i]==hand[i+1]){\n\t\t\t\tif(hand[i]==hand[i+2]){\n\t\t\t\t\tArrays.fill(hand, i, i+3, 0);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex[0] = Arrays.binarySearch(hand, i+1, cnt+1, hand[i]+1);\n\t\t\tif(index[0]>=0){\n\t\t\t\tindex[1] = Arrays.binarySearch(hand, i+2, cnt+1, hand[i]+2);\n\t\t\t\tif(index[1]>=0){\n\t\t\t\t\thand[i] = 0;\n\t\t\t\t\thand[index[0]] = 0;\n\t\t\t\t\thand[index[1]] = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\n\t\t\tRummy rummy = new Rummy(cardNum, cardColor);\n\n\t\t\tint[][] hadCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\tint point = 0;\n\n\t\t\tpoint += rummy.sameNumberCheck(hadCard);\n\n\t\t\tpoint += rummy.continuousNumberCheck(hadCard);\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\t// ?????£?????????\n\tint[] cardNum;\n\tString[] cardColor;\n\n\t\n\n\t// ???????????????????????????????????£??????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\tint[][] hasCard = new int[3][9];\n\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\tpoint++;\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\t\tint continuousCount = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\tCardRummy cr = new CardRummy();\n\n\t\t\tint result = cr.playtheGame();\n\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// output Area\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\tfor (int i = 0; i < transNum.length; i++) {\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum] = intNum;\n\t\t\t\ttmpRnum++;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum] = intNum;\n\t\t\t\ttmpGnum++;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum] = intNum;\n\t\t\t\ttmpBnum++;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {\n\t\tint intAnswer = 0;\n\n\t\t// ???????????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// pprint(CardB);\n\n\t\t// ????????°??????3???????????°?¶????\n\t\tcardR = pairs3Remove(cardR);\n\t\tcardG = pairs3Remove(cardG);\n\t\tcardB = pairs3Remove(cardB);\n\n\t\t// 3??£?¶??????°??????????????°?¶????\n\t\tcardR = ThreeConsecutiveNumber(cardR);\n\t\tcardG = ThreeConsecutiveNumber(cardG);\n\t\tcardB = ThreeConsecutiveNumber(cardB);\n\n\t\t// pprint(CardB);\n\n\t\t// ???????????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// 1???9?????°????????????????????????????????§\n\t\t// ????????§???????????°??????0????????¨??¨0\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0) {\n\n\t\t\t// ?????¶??????????????°1\n\t\t\tintAnswer = 1;\n\t\t}\n\n\t\treturn intAnswer;\n\n\t}\n\tpublic static int[] pairs3Remove(int[] Card) {\n\n\t\t// ?????¢??°??????????????? 3???????????????????????¨??°???????¶???????\n\t\tint pairs3count = 0;\n\n\t\t// ?????¢??°???????????????????????°??????????´?????????´???\n\t\t// ??????????????????????´?????????´???\n\t\tint[] count3Toitu = new int[9];\n\n\t\tint count3ToituCount = 0;\n\n\t\tfor (int i = 0; i < 9; i++) {\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tif (Card[j] == i + 1) {\n\t\t\t\t\tpairs3count++;\n\t\t\t\t\tcount3Toitu[count3ToituCount] = j + 1;\n\t\t\t\t\tcount3ToituCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pairs3count >= 3) {\n\t\t\t\tint count2 = 0;\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\tif (count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint intNum = count3Toitu[k];\n\t\t\t\t\tCard[intNum - 1] = 0;\n\t\t\t\t\tcount2++;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t}\n\t\t\tpairs3count = 0;\n\t\t\tcount3ToituCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param Card\n\t * @return\n\t */\n\tpublic static int[] ThreeConsecutiveNumber(int[] Card) {\n\n\t\tint[][] count3Zyuntu = new int[3][2];\n\n\t\tint count3ZyuntuCount = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile (i < 7) {\n\n\t\t\touter: while (true) {\n\n\t\t\t\tif (k == 4) {\n\t\t\t\t\tint intNum1 = count3Zyuntu[0][1];\n\t\t\t\t\tint intNum2 = count3Zyuntu[1][1];\n\t\t\t\t\tint intNum3 = count3Zyuntu[2][1];\n\t\t\t\t\tCard[intNum1] = 0;\n\t\t\t\t\tCard[intNum2] = 0;\n\t\t\t\t\tCard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(Card);\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (Card[j] == k + i) {\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][0] = k + i;\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][1] = j;\n\t\t\t\t\tcount3ZyuntuCount++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcount3ZyuntuCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n\tpublic static void pprint(int[] Card) {\n\n\t\tfor (int i = 0; i < Card.length; i++) {\n\t\t\tSystem.out.print(Card[i]);\n\t\t}\n\t\tSystem.out.println();\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T=scan.nextInt();\n\t\tfor(int roop=0;roop<T;roop++){\n\t\t\tint[] n = new int[9];\n\t\t\tint[][] card = new int[3][9];\n\t\t\tchar[] c = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tn[i]=scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tc[i]=scan.next().charAt(0);\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tswitch(c[i]){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcard[0][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcard[1][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcard[2][n[i]-1]+=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint set=0;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\t\tif(card[i][j]>2){\n\t\t\t\t\t\tcard[i][j]-=3;\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t\tif(j<7 && card[i][j]>0 && card[i][j+1]>0 && card[i][j+2]>0){\n\t\t\t\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\t\t\t\tcard[i][j+k]-=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set>2){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int x=0;x<n;x++){\n            int countR=0, countG=0, countB=0, count=0;\n            int[] num = new int[9];\n            String[] cor = new String[9];\n            for(int i=0;i<9;i++){\n                num[i] = sc.nextInt();\n            }\n            for(int i=0;i<9;i++){\n                cor[i] = sc.next();\n                if(cor[i].equals(\"R\")) countR++;\n                if(cor[i].equals(\"G\")) countG++;\n                if(cor[i].equals(\"B\")) countB++;\n            }\n            if((countR%3)!=0){\n                System.out.println(\"0\");\n                continue;\n            }\n            if((countG%3)!=0){\n                System.out.println(\"0\");\n                continue;\n            }\n            if((countB%3)!=0){\n                System.out.println(\"0\");\n                continue;\n            }\n            Arrays.sort(num);\n            for(int i=0;i<9;i+=3){\n                if((num[i]==num[i+1] && num[i]==num[i+2]) || ((num[i]+1)==num[i+1] && (num[i]+2)==num[i+2])) count++;\n            }\n            if(count==3){\n                System.out.println(\"1\");\n            }else{\n                System.out.println(\"0\");\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i <= count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();;\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\t num4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\t// 数字の最大を探す\n\tpublic static int max(int a[], int b[], int n) {\n\t\tint i;\n\t\tint max = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[max]] <= a[b[i]]) {\n\t\t\t\tmax = i;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n\n\t// 数字の最小を探す\n\tpublic static int min(int a[], int b[], int n) {\n\t\tint i;\n\t\tint min = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[min]] >= a[b[i]]) {\n\t\t\t\tmin = i;\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}\n\n\t// 三つ存在する数字がどれだけあるかを数える\n\tpublic static int same(int count[], int num[], int b[], int n) {\n\t\tint count2 = 0;\n\t\tint i;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (count[num[b[i]]] >= 3) {\n\t\t\t\t++count2;\n\t\t\t\tif (count2 % 3 == 0) {\n\t\t\t\t\tcount[num[b[i]]] -= 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcount2 /= 3;\n\n\t\treturn count2;\n\t}\n\n\t// 連続する三つの数字がどれだけ存在するかを数える\n\tpublic static int continuous(int count[], int num[], int b[], int n) {\n\t\tint count2 = 0;\n\t\tint i;\n\t\tint min, max;\n\n\t\t// 数字の最大、最小を探す\n\t\tmax = max(num, b, n);\n\t\tmin = min(num, b, n);\n\n\t\t// 最小の数字が三つ以上存在した場合その3つを一組とする\n\t\tif (count[num[b[min]]] >= 3) {\n\t\t\tcount2 += same(count, num, b, n);\n\t\t}\n\n\t\t// 連続する三つの数字がどれだけ存在するかを数える\n\t\tfor (i = num[b[min]] + 1; i < num[b[max]]; ++i) {\n\t\t\tif (count[i] > 0) {\n\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0) {\n\t\t\t\t\t++count2;\n\t\t\t\t\t--count[i + 1];\n\t\t\t\t\t--count[i];\n\t\t\t\t\t--count[i - 1];\n\t\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0 && count[i] > 0) {\n\t\t\t\t\t\t--i;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 連続する数字の組を作ったうえで、途中で同じ数字が三つ以上並んでいた時、その三つを一組とする\n\t\t\t\tif (count[i] >= 3) {\n\t\t\t\t\tcount2 += same(count, num, b, n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// 最大の数字が三つ以上存在した場合その3つを一組とする\n\t\tif (count[num[b[max]]] >= 3) {\n\t\t\tcount2 += same(count, num, b, n);\n\t\t}\n\n\t\treturn count2;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tint R[], G[], B[];// position of R,B,G\n\t\tint count1[], count2, /* counting number */ max, min;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new int[9];\n\t\tB = new int[9];\n\t\tG = new int[9];\n\t\tcount1 = new int[10];\n\t\tint i, j, k, m, n, l;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tk = 0;\n\t\t\tm = 0;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[k] = j;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[m] = j;\n\t\t\t\t\t\t++m;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[n] = j;\n\t\t\t\t\t\t++n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, R, k);\n\t\t\t\tmin = min(num, R, k);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < k; ++l) {\n\t\t\t\t\t++count1[num[R[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[R[max]] - num[R[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, R, k);\n\t\t\t\t}\n\n\t\t\t\t// B\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, B, m);\n\t\t\t\tmin = min(num, B, m);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < m; ++l) {\n\t\t\t\t\t++count1[num[B[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[B[max]] - num[B[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, B, m);\n\t\t\t\t}\n\n\t\t\t\t// G\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, G, n);\n\t\t\t\tmin = min(num, G, n);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < n; ++l) {\n\t\t\t\t\t++count1[num[G[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[G[max]] - num[G[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, G, n);\n\t\t\t\t}\n\n\t\t\t\tif (count2 == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.awt.print.Printable;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport javax.sound.midi.SysexMessage;\n\n\nclass Cards {\n    public int num;\n    public int color;\n}\n\npublic class Main\n{      \n    public static void main(String[] args)\n    {\n\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int p=0;p<n;p++)\n        {\n            boolean win = true;\n\n            Cards cards[] = new Cards[9];\n\n            for(int i=0;i<n;i++)\n            {\n                for(int j=0;j<9;j++)\n                {\n                    cards[j].num=sc.nextInt();\n                }\n                for(int j=0;j<9;j++)\n                {\n                    String color = sc.next();\n                    if(color==\"R\")\n                        cards[j].color=1;\n                    if(color==\"G\")\n                        cards[j].color=2;\n                    if(color==\"B\")\n                        cards[j].color=3;                \n                }\n            \n                Arrays.sort( cards, (a,b)-> a.color - b.color );\n                int nowcolor=0;\n\n                \n                for(int j=0;j<9;j++)\n                {\n\n                    if(cards[j].color!=nowcolor)\n                    {\n                        nowcolor=cards[j].color;\n\n                        int nc_count=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor)\n                                nc_count++;\n                        }\n                        int nums[]= new int[nc_count];\n                        int nc_count2=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor){\n                                nums[nc_count2]=cards[k].num;\n                                nc_count2++;\n                            } \n                        }\n                        Arrays.sort(nums);\n                        int same=0;\n                        int sames[]=new int[4];\n                        int lastnum=-1; \n                    \n                        int samecount=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(lastnum==nums[k])\n                                same++;\n                            if(same%3==0)\n                            {\n                                samecount++;\n                                sames[samecount]=nums[k];\n                                \n                            }\n                            lastnum=nums[k];\n\n                        }\n                        for(int k=0;k<samecount;k++)\n                        {\n                            int zerocount =0;\n                            for(int l=0;l<9;l++){\n                                if(nums[l]==sames[k])\n                                    if(zerocount<3)\n                                        nums[l]=-1;\n                                    zerocount++;      \n                            }\n                        }\n                        Arrays.sort(nums);\n                        int lastnum2 = -1;\n                        int lastnumcount=0;\n                        int lastnumcount3=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(nums[k]-1==lastnum)\n                                lastnumcount++;\n                            if(lastnumcount==2)\n                                lastnumcount=0;\n                        }\n                        if(lastnumcount!=0)\n                            win = false;\n                    }\n                    //nums[j]=cards[j].num; \n                }   \n                            \n            }\n            if(win==true)\n                System.out.println(\"1\");\n            else\n                System.out.println(\"0\");\n        }\n        sc.close();\n    }   \n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\npublic class Main {\n\n    public static void main(String[] args) {\n        // 自分の得意な言語で\n        // Let's チャレンジ！！\n\n        Scanner sc = new Scanner(System.in);\n\n        int times = sc.nextInt(); //手札の総数\n        int check = 0;\t\n        int[]sort = new int[9];  //カード並べ替えのときに使用\n        int[]color = new int[9];\n        int[]num = new int[9];\n        \n        for (int h = 0; h < times; h++) {\n        \tint count = 0;\n        \tint red = 0;\t\t\t//それぞれのカードの枚数を記録する\n        \tint green = 0;\n        \tint blue = 0;\n        \tfor (int i = 0; i < 9; i++) {\t//カードの番号を代入\n        \t\tnum[i] = sc.nextInt();\n        \t}\n        \tfor (int i = 0; i < 9; i++) {\t//カードの色を代入\n        \t\tString colorstr = sc.next();\n        \t\tif (colorstr.equals(\"R\")) {\t\t//赤は10、緑は20、青は30に変換し、color[]に代入する\n        \t\t\tcolor[i] = 10;\n        \t\t} else if (colorstr.equals(\"G\")) {\n        \t\t\tcolor[i] = 20;\n        \t\t} else {\n        \t\t\tcolor[i] = 30;\n        \t\t}\n        \t}\n        \tfor (int i = 0;i < 9; i++) {\t//カラーと番号を統一させ、２桁の整数にする\n        \t\tsort[i] = num[i] + color[i];\n        \t}\n        \tArrays.sort(sort);\t\t//昇順にすることで、番号の若い赤から番号ごとに順番に並べることができる\n        \tfor (int i = 0; i < 9; i++) {\t\t//昇順にした順番にnum配列に代入しなおす colorはテストのときに見やすくするために処理\n        \t\tcolor[i] = sort[i] /10;\n        \t\tnum[i] = sort[i] %10;\n        \t\tif (color[i] == 1) {\n        \t\t\tred++;\n        \t\t} else if (color[i] == 2) {\n        \t\t\tgreen++;\n        \t\t} else {\n        \t\t\tblue++;\n        \t\t}\n        \t}\n        \tif (red %3 != 0 || green %3 !=0 || blue %3 !=0) {\t//データをそろえるためには色が必ず０もしくは３の倍数でなければならない\n        \t\tSystem.out.println(\"0\");\t\t\t\t\t\t//なので、それ以外はここで除く\n        \t\tcontinue;\n        \t}\n        \t//色を集合させ、応じた数値も昇順に並べ替えた----------------------------------------------------------------\n\n        \tfor (int i = 0; i <red-2 ; i ++) {//まず色ごとに番号が３つ同じものがあるか順に調べる -2は後ろ2つは調べる必要がないため\n        \t\tfor (int j = 1; j < 3; j++) {//3つのカードが同じかどうかなので、最初のカードから2つとなりまで調べてそれを繰り返す\n        \t\t\tif (num[i] == num[i + j]) {\n        \t\t\t\tcheck++;\t//同じものがあればcheck変数に記録する\n        \t\t\t} else {\t\t//一致しないものがあた場合、それまでcheckに記録したものは0にし、次の番号に移行する\n        \t\t\t\tcheck = 0;\n        \t\t\t\tbreak;\n        \t\t\t}\n        \t\t\tif (check == 2) {\t//3枚同じ番号があれば、それぞれの番号を0にする\n        \t\t\t\tcheck = 0;\n        \t\t\t\tnum[i] = 0;\n        \t\t\t\tnum[i+1] = 0;\n        \t\t\t\tnum[i+2] = 0;\n\n        \t\t\t}\n        \t\t}\n        \t}\n        \tcheck = 0;\n        \t\tfor (int i = red; i < red +green - 2; i++) {\n        \t\t\tfor (int j = 1; j < 3 ; j++) {\n        \t\t\t\tif (num[i] == num[i + j]) {\n        \t\t\t\t\tcheck++;\n        \t\t\t\t} else {\n        \t\t\t\t\tcheck = 0;\n        \t\t\t\t\tbreak;\n        \t\t\t\t}\n        \t\t\t\tif (check == 2) {\n        \t\t\t\t\tcheck = 0;\n        \t\t\t\t\tnum[i] = 0;\n        \t\t\t\t\tnum[i+1] = 0;\n        \t\t\t\t\tnum[i+2] = 0;\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\n        \tcheck = 0;\n        \t\tfor (int i = red + green; i < red +green + blue - 2; i++) {\n        \t\t\tfor (int j = 1; j < 3 ; j++) {\n        \t\t\t\tif (num[i] == num[i + j]) {\n        \t\t\t\t\tcheck++;\n        \t\t\t\t} else {\n        \t\t\t\t\tcheck = 0;\n        \t\t\t\t\tbreak;\n        \t\t\t\t}\n        \t\t\t\tif (check == 2) {\n        \t\t\t\t\tcheck = 0;\n        \t\t\t\t\tnum[i] = 0;\n        \t\t\t\t\tnum[i+1] = 0;\n        \t\t\t\t\tnum[i+2] = 0;\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\n    outside:for (int i = 0; i < red -2; i++) {\t//\n    \t\t\tcount=0;\n    \t\t\tint a = 0;\n    \t\t\tint b = 0;\n    \t\t\tif (num[i] == 0) {\n    \t\t\t\tcontinue;\n    \t\t\t}\n        \t\tfor ( int j = 1; j < red - i; j++) {\n        \t\t\tif (num[i] == num[i + j] -(count +1)) {\n        \t\t\t\tcount++;\n        \t\t\t\tif (count == 1) {\n        \t\t\t\t\ta = i + j;\n        \t\t\t\t} else if (count == 2) {\n        \t\t\t\t\tb = i + j;\n        \t\t\t\t\tnum[i]=0;\n        \t\t\t\t\tnum[a]=0;\n        \t\t\t\t\tnum[b]=0;\n        \t\t\t\t\tbreak;\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\n        \t}\n        \tfor (int i = red; i < red + green -2; i++) {\n    \t\t\tcount=0;\n    \t\t\tint a = 0;\n    \t\t\tint b = 0;\n    \t\t\tif (num[i] == 0) {\n    \t\t\t\tcontinue;\n    \t\t\t}\n        \t\tfor ( int j = 1; j < green - i + red; j++) {\n        \t\t\tif (num[i] == num[i + j] -(count + 1)) {\n        \t\t\t\tcount++;\n        \t\t\t\tif (count == 1) {\n        \t\t\t\t\ta = i + j;\n        \t\t\t\t} else if (count == 2) {\n        \t\t\t\t\tb = i + j;\n        \t\t\t\t\tnum[i]=0;\n        \t\t\t\t\tnum[a]=0;\n        \t\t\t\t\tnum[b]=0;\n        \t\t\t\t\tbreak;\n        \t\t\t\t\t\t\t\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\n        \t}\n        \tfor (int i = red + green; i < red + green + blue -2; i++) {\n    \t\t\tcount=0;\n    \t\t\tint a = 0;\n    \t\t\tint b = 0;\n    \t\t\tif (num[i] == 0) {\n    \t\t\t\tcontinue;\n    \t\t\t}\n        \t\tfor ( int j = 1; j < blue - i + red + green; j++) {\n        \t\t\tif (num[i] == num[i + j] -(count +1)) {\n        \t\t\t\tcount++;\n        \t\t\t\tif (count == 1) {\n        \t\t\t\t\ta = i + j;\n        \t\t\t\t} else if (count == 2) {\n        \t\t\t\t\tb = i + j;\n        \t\t\t\t\tnum[i]=0;\n        \t\t\t\t\tnum[a]=0;\n        \t\t\t\t\tnum[b]=0;\n        \t\t\t\t\tbreak;\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\n        \t}\n        \tcheck = 0;\n        \tfor (int i = 0; i < 9; i ++) {\n        \t\tcheck += num[i];\n        \t}\n        \tif (check == 0) {\n        \t\tSystem.out.println(\"1\");\n        \t} else {\n        \t\tSystem.out.println(\"0\");\n        \t}\n        }\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tCardRummy cr = new CardRummy(br.readLine(), br.readLine());\n\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t} // ????????????????????????????????????\n}// ?????????NewRummy????????????\n\n/**\n * ?????????CardRummy\n */\nclass CardRummy {\n\n\t/**\n\t * ?????????????????°??¶???\n\t */\n\tprivate static final int ONECARDSET = 9;\n\n\t/**\n\t * ?????????R cardR???cardG???cardB??????????????????????????????\n\t */\n\tprivate int[] cardR = new int[ONECARDSET];\n\n\t/**\n\t * ?????????G cardR???cardG???cardB??????????????????????????????\n\t */\n\tprivate int[] cardG = new int[ONECARDSET];\n\n\t/**\n\t * ?????????B cardR???cardG???cardB??????????????????????????????\n\t */\n\tprivate int[] cardB = new int[ONECARDSET];\n\n\t/**\n\t * ?????°??????????????? ?????£???????????????????´???????\n\t *\n\t * @param tmpNum\n\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t * @param tmpColor\n\t *            ???????????????????????? ??????R R R R R R G G G\n\t */\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\t// ?????°???????§£ ??°??????????´?\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\t// ?????°???????§£ ??????????´?\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t// for????????? ????§£??????????????????????????????\n\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t/**\n\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t */\n\t\t\t// ????§£?????????????????????\n\t\t\tif (transColor[cnt].equals(\"R\"))\n\t\t\t\t// ???????????????????????°????????????\n\t\t\t\tcardR[cnt] = Integer.parseInt(transNum[cnt]);\n\t\t\t// ????§£?????????????????????\n\t\t\telse if (transColor[cnt].equals(\"G\"))\n\t\t\t\t// ???????????????????????°????????????\n\t\t\t\tcardG[cnt] = Integer.parseInt(transNum[cnt]);\n\t\t\t// ????§£?????????????????????\n\t\t\telse if (transColor[cnt].equals(\"B\"))\n\t\t\t\t// ???????????????????????°????????????\n\t\t\t\tcardB[cnt] = Integer.parseInt(transNum[cnt]);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\n\tpublic int playtheGame() {// ?????£????????????\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ?????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// 3??£?¶??????°??????????????°?¶????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ????????°??????3???????????°?¶????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ?????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// 1~9?????°?????????????????????\n\t\t// ????????????????????°??????0????????¨??¨0\n\t\tif (cardR[ONECARDSET - 1] == 0 && cardG[ONECARDSET - 1] == 0 && cardB[ONECARDSET - 1] == 0)\n\n\t\t\t// ?????¶??????????????°???????????????\n\t\t\tresult = 1;\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\n\t}// playtheGame????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°?¶???????????????????\n\t *\n\t * @return ?¶?????????¨???????????£????????????\n\t */\n\tpublic static int[] sameNumCard(int[] card) {// ?????£????????????\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t * @param ONECARDSET\n\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t */\n\n\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\tif (card[cnt1] == card[cnt2] && card[cnt2] == card[cnt3]) {\n\t\t\t\t\t\t// (1)????????¶??????????????°????????°??????????????????\n\t\t\t\t\t\tif (card[cnt1] != 0 && card[cnt2] != 0 && card[cnt3] != 0) {\n\n\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨???????????¶????\n\t\t\t\t\t\t\tcard[cnt1] = 0;\n\t\t\t\t\t\t\tcard[cnt2] = 0;\n\t\t\t\t\t\t\tcard[cnt3] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\treturn card;\n\t}// sameNumCard????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°?¶???????????????????\n\t *\n\t * @return ?¶?????????¨???????????£????????????\n\t */\n\n\tpublic static int[] serialNumCard(int[] card) {// ?????£????????????\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t * @param ONECARDSET\n\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t */\n\n\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t// (1)3??£?¶??????°?????????????????????\n\t\t\t\t\tif (card[cnt1] == card[cnt2] - 1 && card[cnt1] == card[cnt3] - 2) {\n\t\t\t\t\t\t// (1)????????¶??????????????°????????°??????????????????\n\t\t\t\t\t\tif (card[cnt1] != 0 && card[cnt2] != 0 && card[cnt3] != 0) {\n\n\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨???????????¶????\n\t\t\t\t\t\t\tcard[cnt1] = 0;\n\t\t\t\t\t\t\tcard[cnt2] = 0;\n\t\t\t\t\t\t\tcard[cnt3] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\treturn card;\n\t}// serialNumCard ????????????????????????\n}// ?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\t// game set\n\t\tint gameset = sc.nextInt();\n\n\t\tint[][] cardset = new int[UTRummy.CARDPAGE][UTRummy.ONECARDSET];\n\n\t\t// input info\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\t// number info input\n\t\t\t\t\t\tcardset[j][k] = sc.nextInt();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// color info\n\t\t\t\t\t\tString tmpcolor = sc.next();\n\t\t\t\t\t\tint color = 0;\n\t\t\t\t\t\tif (tmpcolor.equals(\"R\")) {\n\t\t\t\t\t\t\tcolor = UTRummy.RED;\n\t\t\t\t\t\t} else if (tmpcolor.equals(\"G\")) {\n\t\t\t\t\t\t\tcolor = UTRummy.GREEN;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolor = UTRummy.BLUE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// color info input\n\t\t\t\t\t\tcardset[j][k] = color;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tUTRummy utr = new UTRummy();\n\t\t\t// getter-setter call\n\t\t\tutr.setCardset(cardset);\n\t\t\tcardset = utr.getCardset();\n\n\t\t\t// game start\n\t\t\tint cnt = 0;\n\t\t\tcnt = utr.playtheGame(cardset); // ?????????\n\t\t\t// game result\n\t\t\tif (3 <= cnt) {\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass UTRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// color\n\tstatic final int RED = 0;\n\tstatic final int GREEN = 1;\n\tstatic final int BLUE = 2;\n\n\tint[][] Cardset = new int[CARDPAGE][ONECARDSET];\n\n\t// [0][i] : num, [1][j] : color\n\tpublic UTRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn Cardset;\n\t}\n\n\t// ????????????????????????????????\\??????\n\tpublic void setCardset(int[][] cardset) {\n\t\tthis.Cardset = settingcardplay(cardset);\n\t}\n\n\t//\n\tpublic int[][] settingcardplay(int[][] card) {// Error point\n\n\t\t/* ex:\n\t\t * 1 2 3 3 4 5 7 7 7\n\t\t *\n\t\t * R R R R R R G G G\n\t\t */\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\t\t\t\tif (card[1][j] > card[1][j + 1]) { // color???????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {// color&num???????????????\n\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\t/* ex:\n\t\t * 1 2 3 3 4 5 7 7 7\n\t\t *\n\t\t * R(0) R R R R R G(1) G G\n\t\t */\n\t\tint cnt = 0;\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {// 3??????????????????????????°\n\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {// ??£????????????????¢????\n\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* ex:\n\t\t * 1 2 3 3 4 5 7 7 7\n\t\t *\n\t\t * R(0) R R R R R G(1) G G\n\t\t */\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) { // 3??????????????????????????°\n\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j]-1 && cardset[0][i] == cardset[0][k]-2) {//?????????????????????????¢????\n\t\t\t\t\t\t\t//Error point\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nimport static java.util.Arrays.sort;\n\npublic class Main {\n    public  static void  main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n\n        for(int i = 0; i< t; i++){\n            int[] num = new int[9];\n            String[] col = new String[9];\n\n            for(int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for(int j = 0; j < 9; j++)\n                col[j] = sc.next();\n\n            int countR = 0;\n            int countG = 0;\n            int countB = 0;\n\n            int[] numred = null, numgrn = null, numblue = null;\n\n            for(int j = 0; j < 9; j++){\n                if(col[j].equals(\"R\"))\n                    countR++;\n                else if(col[j].equals(\"G\"))\n                    countG++;\n                else\n                    countB++;\n            }\n\n            if(countR % 3 !=0 || countG % 3 != 0 || countB % 3 != 0){\n                System.out.println(0);\n                continue;\n            }\n\n            if(countR != 0){\n                numred = new int[countR];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"R\"))\n                        numred[indexnum++] = num[j];\n                }\n                sort(numred);\n            }\n\n            if(countG != 0){\n                numgrn = new int[countG];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"G\"))\n                        numgrn[indexnum++] = num[j];\n                }\n                sort(numgrn);\n            }\n\n            if(countB != 0){\n                numblue = new int[countB];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"B\"))\n                        numblue[indexnum++] = num[j];\n                }\n                sort(numblue);\n            }\n\n            if(countR == 3){\n                if((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 6){\n                if(((numred[0] == numred[1] && numred[1] == numred[2] || numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1) && (numred[3] == numred[4] && numred[4] == numred[5] || numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countR == 9){\n                if((((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1))  && ((numred[3] == numred[4] && numred[4] == numred[5]) || (numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1)) && ((numred[6] == numred[7] && numred[7] == numred[8]) || (numred[6] + 1 == numred[7] && numred[7] == numred[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            \n            if(countG == 3){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 6){\n                if(((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] || numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1) && (numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5] || numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countG == 9){\n                if((((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1))  && ((numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5]) || (numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1)) && ((numgrn[6] == numgrn[7] && numgrn[7] == numgrn[8]) || (numgrn[6] + 1 == numgrn[7] && numgrn[7] == numgrn[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n\n            if(countB == 3){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1)){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 6){\n                if(((numblue[0] == numblue[1] && numblue[1] == numblue[2] || numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1) && (numblue[3] == numblue[4] && numblue[4] == numblue[5] || numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1) )){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            if(countB == 9){\n                if((((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1))  && ((numblue[3] == numblue[4] && numblue[4] == numblue[5]) || (numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1)) && ((numblue[6] == numblue[7] && numblue[7] == numblue[8]) || (numblue[6] + 1 == numblue[7] && numblue[7] == numblue[8] - 1)))){\n\n                }\n                else{\n                    System.out.println(0);\n                    continue;\n                }\n            }\n            System.out.println(1);\n        }\n        sc.close();\n\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\tString[] linearr;\n\t\tint T; \n\t\tint inx;\n\t\tint i, j, k, l, ij;\n\t\tint last;\n\t\tint f_reach;\n\t\tint[] arr_num;//??°???\n\t\tint[][] arr_color;//?????§?????????????????°???\n\t\t//int[] arr_color_cnt;\n\t\tint set = 0;\n\t\ttry{\n\t\t\tline = reader.readLine();\n\t\t\tT = Integer.parseInt(line);\n\t\t\tfor(i=0; i<T; i++){\n\t\t\t\tarr_num = new int[9];\n\t\t\t\tarr_color = new int[3][10];\n\t\t\t\tint[] arr_color_cnt = {0, 0, 0};\n\t\t\t\tf_reach = 0;\n\t\t\t\tset = 0;\n\t\t\t\t//??°?????????\n\t\t\t\tline = reader.readLine();\n\t\t\t\tlinearr = line.split(\" \");\n\t\t\t\tfor(j=0; j<9; j++){\n\t\t\t\t\tarr_num[j] = Integer.parseInt(linearr[j]);\n\t\t\t\t}\n\t\t\t\t//?????§?????????\n\t\t\t\tline = reader.readLine();\n\t\t\t\tline = line.replace(\"R\", \"0\");\n\t\t\t\tline = line.replace(\"G\", \"1\");\n\t\t\t\tline = line.replace(\"B\", \"2\");\n\t\t\t\tlinearr = line.split(\" \");\n\t\t\t\tfor(j=0; j<9; j++){\n\t\t\t\t\tinx = Integer.parseInt(linearr[j]);\n\t\t\t\t\tarr_color[inx][arr_color_cnt[inx]] = arr_num[j];\n\t\t\t\t\tarr_color_cnt[inx] ++;\n\t\t\t\t\t//System.out.println(inx+\", \"+arr_color_cnt[inx]);\n\t\t\t\t}\n\t\t\t\t//????????????????????????\n\t\t\t\tfor(k=0;k<3;k++){\n\t\t\t\t\tfor(j=0;j<=arr_color_cnt[k]-1;j++){\n\t\t\t\t\t\tfor(ij=arr_color_cnt[k]; ij>j; ij--){\n\t\t\t\t\t\t\tif(arr_color[k][ij] < arr_color[k][ij-1]){\n\t\t\t\t\t\t\t\tint _t = arr_color[k][ij];\n\t\t\t\t\t\t\t\tarr_color[k][ij] = arr_color[k][ij-1];\n\t\t\t\t\t\t\t\tarr_color[k][ij-1] = _t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//??????\n\t\t\t\tset = 0;\n\t\t\t\tfor(k=0; k<3; k++){\n\t\t\t\t\tlast = 0;\n\t\t\t\t\tf_reach = 0;\n\t\t\t\t\tfor(j=1, l=arr_color_cnt[k]+1; j<l; j++){\n\t\t\t\t\t\t/*if(arr_color[k][j] == 0){\n\t\t\t\t\t\t\tSystem.out.println(\"none\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tif(last==0){\n\t\t\t\t\t\t\tlast = arr_color[k][j];\n\t\t\t\t\t\t}else if(last == arr_color[k][j] - 1){\n\t\t\t\t\t\t\t//System.out.println(\"ren\");\n\t\t\t\t\t\t\tif(f_reach%2 == 0){\n\t\t\t\t\t\t\t\tf_reach += 1;//??£????????????\n\t\t\t\t\t\t\t}else if(f_reach%2 == 1){//??£???????????????????????£?????????\n\t\t\t\t\t\t\t\t//??????\n\t\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t\t\tset ++;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tf_reach -= 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(last == arr_color[k][j]){\n\t\t\t\t\t\t\tif(f_reach>>1 %2 == 0){\n\t\t\t\t\t\t\t\tf_reach += 2;//?????????????????????\n\t\t\t\t\t\t\t}else if(f_reach>>1 %2 == 1){//???????????????\n\t\t\t\t\t\t\t\t//??????\n\t\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t\t\tset ++;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tf_reach -= 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tf_reach = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//System.out.println(last+\", \"+arr_color[k][j]+\", \"+f_reach+\", \"+k+\", \"+j);\n\t\t\t\t\t\tlast = arr_color[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(set == 3){\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\t\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(redList) && Confirm(redList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        // 長さ3の時\n        if (len / 3 == 1) {\n            if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n                return true;\n            } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        // 長さ6の時\n        if (len / 3 == 2) {\n            for (int i = 0; i < 4; i++) {\n                for (int j = i + 1; j < 5; j++) {\n                    for (int k = j + 1; j < 6; k++) {\n                        if (list.get(i) == list.get(j) && list.get(j) == list.get(k)) {\n                            return true;\n                        } else if (list.get(i) + 1 == list.get(j) && list.get(j) + 1 == list.get(k)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n\n        boolean finalflg0 = false;\n        boolean finalflg1 = false;\n        boolean finalflg2 = false;\n\n        // 長さ9の時\n        for (int i = 0; i < Math.pow(3, 9); i++) {\n\n            int flg0 = 0;\n            int flg1 = 0;\n            int flg2 = 0;\n\n            int last0 = 0;\n            int last1 = 0;\n            int last2 = 0;\n\n            for (int j = 0; j < 9; j++) {\n                int nannbannme = 0;\n                int tmp = i;\n                for (int k = 0; k < j; k++) {\n                    nannbannme++;\n                    tmp /= 3;\n                }\n\n                switch (tmp % 3) {\n                case 0:\n                    if (last0 == list.get(nannbannme)) {\n                        if (flg0 == 1) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 1;\n                        }\n                    }\n\n                    if (last0 + 1 == list.get(nannbannme)) {\n                        if (flg0 == 2) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 2;\n                        }\n                    }\n\n                    last0 = list.get(nannbannme);\n                    break;\n                case 1:\n                    if (last1 == list.get(nannbannme)) {\n                        if (flg1 == 1) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 1;\n                        }\n                    }\n\n                    if (last1 + 1 == list.get(nannbannme)) {\n                        if (flg1 == 2) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 2;\n                        }\n                    }\n\n                    last1 = list.get(nannbannme);\n\n                    break;\n                case 2:\n                    if (last2 == list.get(nannbannme)) {\n                        if (flg2 == 1) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 1;\n                        }\n                    }\n\n                    if (last2 + 1 == list.get(nannbannme)) {\n                        if (flg2 == 2) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 2;\n                        }\n                    }\n\n                    last2 = list.get(nannbannme);\n\n                    break;\n                }\n            }\n\n        }\n\n        return (finalflg1 && finalflg2 && finalflg0);\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\n\npublic class Main {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\t//???CheckResult????????????????§?\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t@SuppressWarnings(\"resource\")\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tint number[] = new int[COLUMN_NUMBER];\n\t\tString color[] = new String[COLUMN_NUMBER];\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tnumber[count1] = scan.nextInt();\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t\tcolor[count1] = scan.next();\n\t\t\t}\n\n\t\t\t// ???????????????????????????????????????????????°?????°?????£??????true??§?¬?????????????\n\t\t\t//ColorCountResult c = new ColorCountResult();\n\n\t\t\t// ?????????????????? store???????????????????????¨??????color_count??????????????????\n\t\t\t//for (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\t//\tc.colorCount(color[count1]);\n\t\t\t//}\n\n\t\t\t// ???????????? ??????????????°??§????????°true???\n\t\t\t//boolean flg = c.isColorResult();\n\n\t\t\t// ???????????????true?????´????????°???????????? / false?????´??????0?????????\n\t\t\t//if (flg) {\n\t\t\t\tCheckResult ck = new CheckResult();\n\t\t\t\t\n\t\t\t\t//R(??¬??????????????????\n\t\t\t\t//9???color?????????????¢???????R??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"R\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg1 = ck.numberCheck();\n\t\t\t\t\n\t\t\t\t//G(??°?????????????????????\n\t\t\t\t//9???color?????????????¢???????G??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"G\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg2 = ck.numberCheck();\n\t\t\t\t\n\t\t\t\t//B(?????????????????????\n\t\t\t\t//9???color?????????????¢???????B??§????????¨??????CheckResult????????????numberStore???????????????\n\t\t\t\tfor(int count1=0;count1<COLUMN_NUMBER;count1++){\n\t\t\t\t\tif(color[count1].equals(\"B\")){\n\t\t\t\t\t\tck.numberStore(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.numberSort();\n\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg3 = ck.numberCheck();\n\n\t\t\t\t// ?????? R(flg1)??¨G(flg2)??¨B(flg3)?????¨???true?????¨???1?????????\n\t\t\t\tsb.append(flg1 & flg2 & flg3 ? \"1\\n\" : \"0\\n\");\n\n\t\t\t//} else {\n\t\t\t//\tsb.append(\"0\");\n\t\t\t//\tsb.append(\"\\n\");\n\t\t\t//}\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// --------------------color_cout?????????------------------------------------\n\n// ????????°?????°???????????????\nclass ColorCountResult {\n\n\tprivate int r = 0;\n\tprivate int b = 0;\n\tprivate int g = 0;\n\t\n\t//r b g??????????????????????????????????????????\n\tpublic void colorCount(String color) {\n\t\tif (color.equals(\"R\")) {\n\t\t\tr++;\n\t\t} else if (color.equals(\"B\")) {\n\t\t\tb++;\n\t\t} else if (color.equals(\"G\")) {\n\t\t\tg++;\n\t\t}\n\t}\n\n\t// color?????\\??????\n\tpublic boolean isColorResult() {\n\t\t// ????????????????????????????????°??§????????¨???true?????????\n\t\treturn (r % 3 == 0) & (b % 3 == 0) & (g % 3 == 0);\n\t}\n\n}\n\n// --------------------check?????????------------------------------------\n\nclass CheckResult {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\tfinal static int COLUMN_NUMBER = 9;\n\n\tprivate List<Integer> numberList = new ArrayList<Integer>();\n\n\tprivate int[] number = new int[COLUMN_NUMBER];\n\t\n\t//????????¨??????????????°???????????????\n\tprivate int x = 0;\n\t\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tprivate int[] num = new int[COLUMN_NUMBER];\n\t// int num[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\n\t// ??°????????\\??????\n\tpublic void numberStore(int number) {\n\t\tnumberList.add(number);\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t\tx++;\n\t}\n\n\t// ??°??????????????????????????????????´?\n\tpublic void numberSort() {\n\t\tCollections.sort(numberList);\n\t\tfor (int count = 0; count < x; count++) {\n\t\t\tnumber[count] = numberList.get(count);\n\t\t}\n\t\t//?????????????????????\n\t\tnumberList.clear();\n\t\t//????????¨??????????????°????????????\n\t\tx = 0;\n\t}\n\t/**\n\t * ??\\??????????????°?????§????????????3?????\\???????????´?????¨?????£???????????£???????????´????????????????????????\n\t * ??????????????´??????true????????????????????´??????false?????????\n\t */\n\tpublic boolean numberCheck() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < COLUMN_NUMBER; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isNumberResult();\n\n\t}\n\n\t// ?????????true ??? false??§??????\n\tprivate boolean isNumberResult() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\tboolean ret = true;\n\t\tfor(int n : num){\n\t\t\tif (n != 0){\n\t\t\t\tret = false;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str = scan.next();\n\t\t\t\tchar[] inpc = str.toCharArray();\n\t\t\t\tC[j*2][i] = inpc[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set + 1; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\t// ???????????????????????????\n\t\t\tint result = 0;\n\n\t\t\t// ?????????????´?\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(result = utRummy(result, cardArr));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @param result2\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(int result, ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ????????????????????°??????????????????\n\t\tcardNumSort(cardArr);\n\n\t\t// ???????????????????????\\?????????????????????R, G, B??????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶??????????????????????????°???????????¶????????????\n\t\t\tresult = 1;\n\t\t}\n\t\t// ????????????????????????????????¨??????\n\t\treturn result;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????,3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2) 3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * ????????§???????????????????????????for?????????????????¨????????¨?????£?§£?????????\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * ?????????????????????\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// for (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t// cardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ?????????????????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????°?????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result = toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] card = new int[9];\n\t\t\tint[][] color = new int[3][9];\n\t\t\tint[] rgb = new int[3];\n\t\t\tint set = 0;\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcard[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = sc.next();\n\t\t\t\tswitch(s.charAt(0)){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcolor[0][rgb[0]] = card[j];\n\t\t\t\t\t\trgb[0]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcolor[1][rgb[1]] = card[j];\n\t\t\t\t\t\trgb[1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcolor[2][rgb[2]] = card[j];\n\t\t\t\t\t\trgb[2]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tArrays.sort(color[j]);\n\t\t\t\tfor(int k = 2; k < rgb[j]; k++){\n\t\t\t\t\tif(color[j][k] == color[j][k-1] && color[j][k-1] == color[j][k-2]){\n\t\t\t\t\t\tset++;\n\t\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\t\tcolor[j][k-1] = 0;\n\t\t\t\t\t\tcolor[j][k-2] = 0;\n\t\t\t\t\t\tk += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int k = 0; k < rgb[j]; k++){\n\t\t\t\t\tint tmp = color[j][k];\n\t\t\t\t\tint l = 0, m = 0;\n\t\t\t\t\tif(tmp == 0) continue;\n\t\t\t\t\tfor(l = 0; l < rgb[j];l++){\n\t\t\t\t\t\tif(tmp == color[j][l]-1) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(l == rgb[j]) continue;\n\t\t\t\t\tfor (m = 0; m < rgb[j];m++ ) {\n\t\t\t\t\t\tif(tmp == color[j][m]-2) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(m == rgb[j]) continue;\n\t\t\t\t\tset++;\n\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\tcolor[j][l] = 0;\n\t\t\t\t\tcolor[j][m] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) System.out.println(\"1\");\n\t\t\telse System.out.println(\"0\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "class Main{\n    \n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int[][] tehuda = new int[2][9];\n        \n        int T = sc.nextInt();//???????????????????????°\n        \n        for( int i = 0 ; i < T ; i++ ){//???????????????????????°?????????\n            for( int j = 0 ; j < 2 ; j++ ){\n                for( int k = 0 ; k < 9 ; k++ ){\n                    \n                    if( j == 0 ){\n                        tehuda[i][j] = sc.nextInt();\n                    }else{\n                        char color = sc.next().charAt(0);\n                        int intColor = 0;\n                        if( color == 'R'){//R???????????¨??????\n                            intColor = 11;\n                        }else if( color == 'G'){//G???????????¨??????\n                            intColor = 12;\n                        }else if( color == 'B'){//B???????????¨??????\n                            intColor = 13;\n                        }\n                        \n                        tehuda[i][j] = intColor;\n                    }\n                }\n            }\n        \n        \n            Rummy insRummy = new Rummy();//Rummy???????????????\n        \n            insRummy.setCard(tehuda);//??????????????°??¨??????Rummy????????????setCard???\n            \n            insRummy.sort();//Rummy????????????sort??????????????????\n            \n            tehuda = insRummy.getCard();//sort??????????????????????????????\n            \n            int count = 0;//?????????????????????\n            count = insRummy.judge(tehuda);\n            \n            if( count >= 3 ){\n                System.out.println(1);\n \n            }else{\n                System.out.println(0);\n            }\n        }\n    }\n}\n\n//==============================================================================\n\nclass Rummy {\n    \n    private int[][] tehuda = new int[2][9];\n    \n    Rummy(){\n        \n    }\n\n    public int judge(int[][] tehuda) {\n        \n    \tint count = 0;\n        \n        for(int i= 0; i < 7; i++){//??£????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n               \n                for(int k = j+1; k < 9; k++){\n                    \n                   if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                        \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] -1 && tehuda[0][i] == tehuda[0][k] -2){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n\n                }\n            }\n        }\n        \n       \n        for(int i= 0; i < 7; i++){//?????????????????§??????\n            \n            for(int j = i+1; j < 8; j++ ){\n                \n                for(int k = j+1; k < 9; k++){\n                    \n                    if(tehuda[1][i] == tehuda[1][j] && tehuda[1][j] == tehuda[1][k]){\n                       \n                        if(tehuda[0][i] != 0 && tehuda[0][i] == tehuda[0][j] && tehuda[0][i] == tehuda[0][k]){\n                        \t\n                        \tcount++;\n                           \n                        \ttehuda[0][i] = 0;//?????´???????????????0???\n                        \ttehuda[0][j] = 0;//?????´???????????????0???\n                        \ttehuda[0][k] = 0;//?????´???????????????0???\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    \n    public void sort() {\n        \n    \tfor(int i = 0; i < 8; i++){//??????????????????\n            for(int j = 0; j < 8-i; j++ ){\n\n                if(tehuda[1][j] > tehuda[1][j+1]){\n                    int temp = tehuda[1][j];\n                    tehuda[1][j] = tehuda[1][j+1];\n                    tehuda[1][j+1] = temp;\n                    \n                    int temp2 = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp2;\n                }\n            }\n        }\n        \n        for(int i = 0; i < 8; i++){//??????????????????\n\n            for(int j = 0; j < 8-i; j++){\n                \n                if(tehuda[1][j] == tehuda[1][j+1] && tehuda[0][j] > tehuda[0][j+1]){\n\n                    int temp = tehuda[0][j];\n                    tehuda[0][j] = tehuda[0][j+1];\n                    tehuda[0][j+1] = temp;\n                    \n                }\n            }\n        }\n    }\n\n    public void setCard(int[][] tehuda) {\n        this.tehuda = tehuda;\n        \n    }\n    \n    public int[][] getCard() {\n         return tehuda;\n    }\n}\n\n//=============================================================================="
  },
  {
    "language": "Java",
    "code": "import java.awt.print.Printable;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport javax.sound.midi.SysexMessage;\n\n\nclass Cards {\n    public int num;\n    public int color;\n}\n\npublic class Main\n{      \n    public static void main(String[] args)\n    {\n\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int p=0;p<n;p++)\n        {\n            boolean win = true;\n\n            Cards cards[] = new Cards[9];\n\n            for(int i=0;i<n;i++)\n            {\n                for(int j=0;j<9;j++)\n                {\n                    cards[j].num=sc.nextInt();\n                }\n                for(int j=0;j<9;j++)\n                {\n                    String color = sc.next();\n                    if(color==\"R\")\n                        cards[j].color=1;\n                    if(color==\"G\")\n                        cards[j].color=2;\n                    if(color==\"B\")\n                        cards[j].color=3;                \n                }\n            \n                Arrays.sort( cards, (a,b)-> a.color - b.color );\n                int nowcolor=0;\n\n                \n                for(int j=0;j<9;j++)\n                {\n\n                    if(cards[j].color!=nowcolor)\n                    {\n                        nowcolor=cards[j].color;\n\n                        int nc_count=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor)\n                                nc_count++;\n                        }\n                        int nums[]= new int[nc_count];\n                        int nc_count2=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor){\n                                nums[nc_count2]=cards[k];\n                                nc_count2++;\n                            } \n                        }\n                        Arrays.sort(nums);\n                        int same=0;\n                        int sames[]=new int[4];\n                        int lastnum=-1; \n                    \n                        int samecount=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(lastnum==nums[k])\n                                same++;\n                            if(same%3==0)\n                            {\n                                samecount++;\n                                sames[semecount]=nums[k];\n                                \n                            }\n                            lastnum=nums[k];\n\n                        }\n                        for(int k=0;k<samecount;k++)\n                        {\n                            int zerocount =0;\n                            for(int l=0;l<9;l++){\n                                if(nums[l]==sames[k])\n                                    if(zerocount<3)\n                                        nums[l]=-1;\n                                    zerocount++;      \n                            }\n                        }\n                        Arrays.sort(nums);\n                        int lastnum2 = -1;\n                        int lastnumcount=0;\n                        int lastnumcount3=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(nums[k]-1==lastnum)\n                                lastnumcount++;\n                            if(lastnumcount==2)\n                                lastnumcount=0;\n                        }\n                        if(lastnumcount!=0)\n                            win = false;\n                    }\n                }   \n                    nums[j]=cards[j].num;          \n            }\n            if(win==true)\n                System.out.println(\"1\");\n            else\n                System.out.println(\"0\");\n        }\n        sc.close();\n    }   \n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint[] intHairetsuNum = new int[9]; \n\t\tString[] strHairetsuNum = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString[] strHairetsuColor = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tintHairetsuNum = new int[9]; \n\t\t\t\t\tstrHairetsuNum = new String[9];\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tstrHairetsuColor = new String[9];\n\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tarrayRed.clear();\n\t\t\t\t\tarrayGreen.clear();\n\t\t\t\t\tarrayBlue.clear();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tString[] c = new String[9];\n\t\tint[][] num = new int[3][9];\n\t\tfor (int l = 0; l < T; l++) {\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tc[i] = sc.next();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tswitch (c[i].charAt(0)) {\n\t\t\t\tcase 'R':\n\t\t\t\t\tnum[0][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tnum[1][n[i] - 1]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnum[2][n[i] - 1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\t\tif (num[i][j] >= 3) {\n\t\t\t\t\t\tnum[i][j] -= 3;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t} else if (num[i][j] > 0) {\n\t\t\t\t\t\tif (j < 7 && num[i][j + 1] > 0 && num[i][j + 2] > 0) {\n\t\t\t\t\t\t\tnum[i][j]--;\n\t\t\t\t\t\t\tnum[i][j + 1]--;\n\t\t\t\t\t\t\tnum[i][j + 2]--;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 3)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    static boolean sameNum(Set num1, Set num2, Set num3){\n        if((num1.num == num2.num) && (num2.num == num3.num) && (num3.num == num1.num)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static boolean serialNum(Set num1, Set num2, Set num3){\n        if((num2.num - num1.num == 1) && (num3.num - num2.num == 1)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color) && (cl3.color == cl1.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    public static boolean alternateColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color != cl2.color) && (cl2.color != cl3.color) && (cl3.color != cl1.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n\n    int i = 0;\n    while(i<n){\n      int[] num = new int[9];\n      for(int j=0;j<9;j++){\n        num[j] = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      int[] color = new int[9];\n      for(int l=0;l<9;l++){\n        switch(ch[l]){\n          case \"R\": color[l] = 1;\n                    break;\n          case \"G\": color[l] = 2;\n                    break;\n          case \"B\": color[l] = 3;\n                    break;\n          default : break;\n        }\n      }\n      \n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = num[j]; \n          set1[j].color = color[j];\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = num[j+3];\n          set2[j].color = color[j+3];\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = num[j+6];\n          set3[j].color = color[j+6];\n      }\n\n      int accept = 0;\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n      if(check1.sameNum(set1[0],set1[1],set1[2])){\n          if(check1.alternateColor(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check1.serialNum(set1[0],set1[1],set1[2])){\n          if(check1.sameColor(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameNum(set2[0],set2[1],set2[2])){\n          if(check2.alternateColor(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check2.serialNum(set2[0],set2[1],set2[2])){\n          if(check2.sameColor(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameNum(set3[0],set3[1],set3[2])){\n          if(check3.alternateColor(set3[0],set3[1],set3[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check3.serialNum(set3[0],set3[1],set3[2])){\n          if(check3.sameColor(set3[0],set3[1],set3[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    i++;\n    }//end_of_while\n  }//end_of_main\n}//end_of_Rummy"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\t//?????£?????????\n\t\tint output;\n\t\tint okCount;\n\t\tint loop;\n\t\tString line;\n\t\tCard[] cardList = new Card[9];\n\n\t\tScanner sc = null;\n\n\t\ttry {\n\t\t\tsc = new Scanner(System.in);\n\n\t\t\t//?????§???????????°???????????????\n\t\t\tloop = sc.nextInt();\n\t\t\t//?¬???????????§????\n\t\t\tline = sc.nextLine();\n\n\t\t\tfor (int i = 0; i < loop; i++) {\n\t\t\t\t//?????????????????????\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] work = line.split(\" \");\n\n\t\t\t\tint[] number = new int[work.length];\n\t\t\t\tfor (int j = 0; j < work.length; j++) {\n\t\t\t\t\tnumber[j] = Integer.parseInt(work[j]);\n\t\t\t\t}\n\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] color = line.split(\" \");\n\n\t\t\t\t//???????????????\n\t\t\t\tfor (int j = 0; j < cardList.length; j++) {\n\t\t\t\t\tcardList[j] = new Card(number[j], color[j]);\n\t\t\t\t}\n\n\t\t\t\t//?????????????????°?????§?????????\n\t\t\t\tArrays.sort(cardList , new Comparator<Card>() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic int compare(Card card1, Card card2) {\n\n\t\t\t\t\t\tint temp = card1.getColor().compareTo(card2.getColor());\n\n\t\t\t\t\t\tif (temp == 0) {\n\t\t\t\t\t\t\treturn card1.getNumber() - card2.getNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn temp;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//???????????¶????????????????????????????????§??????\n\t\t\t\tokCount = 0;\n\t\t\t\toutput = 0;\n\t\t\t\t//??¨?????????????????§???????????¨\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tif (cardList[j* 3].getColor().equals(cardList[j*3 + 1].getColor())) {\n\t\t\t\t\t\tif (cardList[j* 3].getColor().equals(cardList[j*3 + 2].getColor())) {\n\t\t\t\t\t\t\t//??£?????§???????????¨\n\t\t\t\t\t\t\tif (cardList[j*3].getNumber() + 1 == cardList[j*3 + 1].getNumber()){\n\n\t\t\t\t\t\t\t\tif (cardList[j*3 + 1].getNumber() + 1 == cardList[j*3 + 2].getNumber()){\n\t\t\t\t\t\t\t\t\tokCount++;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//?????????????????°?????§???????????¨\n\t\t\t\t\t\t\t}else if (cardList[j*3].getNumber() == cardList[j*3 + 1].getNumber()) {\n\t\t\t\t\t\t\t\t\tif (cardList[j*3 + 1].getNumber() == cardList[j*3 + 2].getNumber()) {\n\t\t\t\t\t\t\t\t\t\tokCount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (okCount == 3) {\n\t\t\t\t\toutput = 1;\n\t\t\t\t}\n\t\t\t\t//???????¢??????¨\n\t\t\t\tSystem.out.println(output);\n\t\t\t}\n\t\t} finally {\n\t\t\tsc.close();\n\t\t}\n\n\t}\n\n\t//??????????????????\n\tstatic class Card {\n\t\t//?????£?????????\n\t\t//??????????????°???\n\t\tprivate int number;\n\t\t//???????????????\n\t\tprivate String color;\n\n\t\t//?????????????????????\n\t\tpublic  Card(int num, String color){\n\t\t\tthis.number = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t//????????????????????????\n\t\tpublic int getNumber() {\n\t\t\treturn number;\n\t\t}\n\n\t\tpublic void setNumber(int number) {\n\t\t\tthis.number = number;\n\t\t}\n\n\t\tpublic String getColor() {\n\t\t\treturn color;\n\t\t}\n\n\t\tpublic void setColor(String color) {\n\t\t\tthis.color = color;\n\t\t}\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\t//?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t//????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result= toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t//?????£?¶???????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t//?????£?¶???????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tString[] c = new String[9];\n\t\tfor (int l = 0; l < T; l++) {\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tc[i] = sc.next();\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tif (n[i] == -2)\n\t\t\t\t\tcontinue;\n\t\t\t\tfor (int j = i + 1; j < 9; j++) {\n\t\t\t\t\tif (c[i].equals(c[j])) {\n\t\t\t\t\t\tif (n[i] == n[j]) {\n\t\t\t\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t\t\t\tif (c[j].equals(c[k])) {\n\t\t\t\t\t\t\t\t\tif (n[j] == n[k]) {\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t\tn[i] = -2;\n\t\t\t\t\t\t\t\t\t\tn[j] = -2;\n\t\t\t\t\t\t\t\t\t\tn[k] = -2;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (n[i] == -2)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (n[j] == n[i] + 1 || n[j] == n[i] - 1) {\n\t\t\t\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t\t\t\tif (c[j].equals(c[k])) {\n\t\t\t\t\t\t\t\t\tif (n[j] == n[i] + 1 && (n[k] == n[i] - 1 || n[k] == n[j] + 1)) {\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t\tn[i] = -2;\n\t\t\t\t\t\t\t\t\t\tn[j] = -2;\n\t\t\t\t\t\t\t\t\t\tn[k] = -2;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (n[j] == n[i] - 1 && (n[k] == n[j] - 1 || n[k] == n[i] + 1)) {\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t\tn[i] = -2;\n\t\t\t\t\t\t\t\t\t\tn[j] = -2;\n\t\t\t\t\t\t\t\t\t\tn[k] = -2;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (n[i] == -2)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (n[j] == n[i] + 2 || n[j] == n[i] - 2) {\n\t\t\t\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t\t\t\tif (c[j].equals(c[k])) {\n\t\t\t\t\t\t\t\t\tif (n[j] == n[i] + 2 && n[k] == n[i] + 1) {\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t\tn[i] = -2;\n\t\t\t\t\t\t\t\t\t\tn[j] = -2;\n\t\t\t\t\t\t\t\t\t\tn[k] = -2;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (n[j] == n[i] - 2 && n[k] == n[j] + 1) {\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t\tn[i] = -2;\n\t\t\t\t\t\t\t\t\t\tn[j] = -2;\n\t\t\t\t\t\t\t\t\t\tn[k] = -2;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (n[i] == -2)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 3)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\t//入力されるカードセット枚数\n\t\tint request=sc.nextInt();\n\t\tfor(int i=0;i<request;i++) {\n\t\t\t//カードの数字を入れる配列作成\n\t\t\tint[] num=new int[9];\n\t\t\tfor(int j=0;j<9;j++) {\n\t\t\t\tnum[j]=sc.nextInt();\n\t\t\t}\n\t\t\t//カードの色を入れる配列作成\n\t\t\tString[] color={sc.next(),sc.next(),sc.next(),sc.next(),sc.next(),sc.next(),sc.next(),sc.next(),sc.next()};\n\t\t\tint Rcount=0;\n\t\t\tint Gcount=0;\n\t\t\tint Bcount=0;\n\t\t\t//Redカード、Greenカード、Blueカードの枚数を調べる\n\t\t\tfor(int j=0;j<9;j++) {\n\t\t\t\tswitch(color[j]) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tRcount++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tGcount++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tBcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//色ごとの配列を作成（color[x]が\"R\"のときにnum[x]を作成した配列に入れる。GreenとBlueも同様に行う）\n\t\t\t//ArrayList<Integer> Rary=new ArrayList<Integer>();\n\t\t\tint alignedCount=0;//揃っているカードのセット数\n\t\t\tint[] Rary=new int[Rcount];\n\t\t\tint[] Gary=new int[Gcount];\n\t\t\tint[] Bary=new int[Bcount];\n\t\t\tint count=0;//Raryのインデックス番号の指定に必要\n\t\t\tfor(int j=0;j<9;j++) {\n\t\t\t\tif(\"R\".equals(color[j])) {\n\t\t\t\t\tRary[count]=num[j];\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(Rary);\n\t\t\t//赤色のカードが3以上の時の処理\n\t\t\tif(Rcount>=3) {\n\t\t\t\tfor(int j=0;j<Rcount-2;j++) {\n\t\t\t\t\tfor(int k=j+1;k<Rcount-1;k++) {\n\t\t\t\t\t\tfor(int l=k+1;l<Rcount;l++) {\n\t\t\t\t\t\t\t//連番または数が同一であり、3っつの整数の乗算が0でないときの処理\n\t\t\t\t\t\t\tif(((Rary[j]==Rary[k]-1 && Rary[j]==Rary[l]-2) || (Rary[j]==Rary[k] && Rary[j]==Rary[l])) && Rary[j]*Rary[k]*Rary[l]!=0) {\n\t\t\t\t\t\t\t\talignedCount++;\n\t\t\t\t\t\t\t\t//上記の条件に一致したものを0とし、事実上除外する\n\t\t\t\t\t\t\t\tRary[j]=0;\n\t\t\t\t\t\t\t\tRary[k]=0;\n\t\t\t\t\t\t\t\tRary[l]=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount=0;\n\t\t\tfor(int j=0;j<9;j++) {\n\t\t\t\tif(\"G\".equals(color[j])) {\n\t\t\t\t\tGary[count]=num[j];\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(Gary);\n\t\t\tif(Gcount>=3) {\n\t\t\t\tfor(int j=0;j<Gcount-2;j++) {\n\t\t\t\t\tfor(int k=j+1;k<Gcount-1;k++) {\n\t\t\t\t\t\tfor(int l=k+1;l<Gcount;l++) {\n\t\t\t\t\t\t\tif(((Gary[j]==Gary[k]-1 && Gary[j]==Gary[l]-2) || (Gary[j]==Gary[k] && Gary[j]==Gary[l])) && Gary[j]*Gary[k]*Gary[l]!=0) {\n\t\t\t\t\t\t\t\talignedCount++;\n\t\t\t\t\t\t\t\tGary[j]=0;\n\t\t\t\t\t\t\t\tGary[k]=0;\n\t\t\t\t\t\t\t\tGary[l]=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount=0;\n\t\t\tfor(int j=0;j<9;j++) {\n\t\t\t\tif(\"B\".equals(color[j])) {\n\t\t\t\t\tBary[count]=num[j];\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(Bary);\n\t\t\tif(Bcount>=3) {\n\t\t\t\tfor(int j=0;j<Bcount-2;j++) {\n\t\t\t\t\tfor(int k=j+1;k<Bcount-1;k++) {\n\t\t\t\t\t\tfor(int l=k+1;l<Bcount;l++) {\n\t\t\t\t\t\t\tif(((Bary[j]==Bary[k]-1 && Bary[j]==Bary[l]-2) || (Bary[j]==Bary[k] && Bary[j]==Bary[l])) && Bary[j]*Bary[k]*Bary[l]!=0) {\n\t\t\t\t\t\t\t\talignedCount++;\n\t\t\t\t\t\t\t\tBary[j]=0;\n\t\t\t\t\t\t\t\tBary[k]=0;\n\t\t\t\t\t\t\t\tBary[l]=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(alignedCount==3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main{\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\t// CheckResult????????????????§?\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t@SuppressWarnings(\"resource\")\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// R,G,B???????????\\??????????????°\n\t\tString colorStr = \"\";\n\n\t\t// R,G,B???????????§false?????¨???+1???????????????\n\t\tint flgCount = 0;\n\n\t\t// CheckResult???????????????????????????????????????\n\t\tCheckResult ck = new CheckResult();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\n\t\t\t// CheckResult?????????????????????????????????????´?\n\t\t\tfor (int i = 0; i < COLUMN_NUMBER; i++) {\n\t\t\t\tck.scanNumber[i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < COLUMN_NUMBER; i++) {\n\t\t\t\tck.scanColor[i] = scan.next();\n\t\t\t}\n\n\t\t\t// R,G,B????????????????????????????????????????????????\n\t\t\tfor (int colorNumber = 0; colorNumber < 3; colorNumber++) {\n\t\t\t\tswitch (colorNumber) {\n\t\t\t\tcase 0:// R(??¬??????)?????´??? colorStr???R?????????\n\t\t\t\t\tcolorStr = \"R\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:// G(??°?????????)?????´??? colorStr???G?????????\n\t\t\t\t\tcolorStr = \"G\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:// B(?????????)?????´??? colorStr???B?????????\n\t\t\t\t\tcolorStr = \"B\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// colorStr(???)?????????????????°??????CheckResult????????????numberStor?????????????????????\n\t\t\t\tck.getColorToNumber(colorStr);\n\n\t\t\t\t// ????????????(false)?????¨???flgCount???+1??????\n\t\t\t\tif (!ck.numberCheck()) {\n\t\t\t\t\tflgCount++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// CheckResult???????????§?????¨??????(??????)num[]????????????\n\t\t\t\tck.numClear();\n\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t// ?????? flgCount?????????0?????¨???1?????????\n\t\t\tsb.append(flgCount == 0 ? \"1\\n\" : \"0\\n\");\n\n\t\t\t// flgCount????????????\n\t\t\tflgCount = 0;\n\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\t// ???????????????\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// --------------------checkResult?????????------------------------------------\nclass CheckResult {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t// Scanner????????\\??????????????????????´?????????????\n\tpublic int scanNumber[] = new int[COLUMN_NUMBER];\n\tpublic String scanColor[] = new String[COLUMN_NUMBER];\n\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\t// num[1]???[9]?????§?????°???????????°????¢?????????????????????????\n\tprivate int[] num = new int[COLUMN_NUMBER];\n\n\t/**\n\t * color??????????????????\n\t * scanColor??¨???????????§????????°????????????scanNumber?????????CheckResult????????????numberStore???????????????\n\t * \n\t * @param color\n\t */\n\tpublic void getColorToNumber(String color) {\n\t\t// color??§??????????????????????????§????????°scanColor???????????????scanNumber?????????CheckResult????????????numberStore???????????????\n\t\tfor (int i = 0; i < COLUMN_NUMBER; i++) {\n\t\t\tif (scanColor[i].equals(color)) {\n\t\t\t\tnumberStore(scanNumber[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * getColorNumber???????????????????????????(??????)num[]???????´????\n\t * ??? (??????)num[]?????°????????°???????´?????????????\n\t * @param number\n\t */\n\tprivate void numberStore(int number) {\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t}\n\n\t/**\n\t * ??\\??????????????°?????§????????????3?????\\???????????´?????¨?????£???????????£???????????´?????? ?????????????????? ??????????????´??????true????????????????????´??????false?????????\n\t */\n\tpublic boolean numberCheck() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int i=0;i<COLUMN_NUMBER;i++){\n\t\t\tif(num[i] >=3 ){\n\t\t\t\tnum[i] -= 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isNumberResult();\n\n\t}\n\n\t/**\n\t * num[9]???????????¨????????????0??§????????¨???true????????????1?????§???1??\\???????????°false?????????\n\t * @return\n\t */\n\tprivate boolean isNumberResult() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\tboolean ret = true;\n\t\tfor (int n : num) {\n\t\t\tif (n != 0) {\n\t\t\t\tret = false;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * ??????num??????????????????\n\t */\n\tpublic void numClear() {\n\t\tnum = new int[COLUMN_NUMBER];\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        int[] win = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji]++;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji]++;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji]++;\n        \t}\n        \t\n        \t\n        \t\n        \tint set = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0 && k < 7)\n            \t\t{\n            \t\t\tset++;\n            \t\t\tcard[j][k]--;\n            \t\t\tcard[j][k + 1]--;\n            \t\t\tcard[j][k + 2]--;\n            \t\t\tk--;\n            \t\t\tcontinue;\n            \t\t}\n        \t\t\telse if (card[j][k] >= 3)\n        \t\t\t{\n        \t\t\t\tset++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}\n        \tif (set >= 3)\n        \t\twin[i]++;\n        }\n        for (int i = 0; i < n; i++)\n        {\n        \tif (win[i] >= 1)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tint num[] = new int[9];\n\t\tint color[] = new int[9];\n\t\tint red_num = 0;\n\t\tint green_num = 0;\n\t\tint blue_num = 0;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tString a = sc.next();\n\t\t\t\tif (a.compareTo(\"R\") == 0) {\n\t\t\t\t\tcolor[j] = 1;\n\t\t\t\t\tred_num += 1;\n\t\t\t\t}\n\t\t\t\tif (a.compareTo(\"G\") == 0) {\n\t\t\t\t\tcolor[j] = 2;\n\t\t\t\t\tgreen_num += 1;\n\t\t\t\t}\n\t\t\t\tif (a.compareTo(\"B\") == 0) {\n\t\t\t\t\tcolor[j] = 3;\n\t\t\t\t\tblue_num += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint red[] = new int[red_num];\n\t\t\tint green[] = new int[green_num];\n\t\t\tint blue[] = new int[blue_num];\n\t\t\tred_num = 0;\n\t\t\tgreen_num = 0;\n\t\t\tblue_num = 0;\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tswitch (color[j]) {\n\t\t\t\tcase 1:\n\t\t\t\t\tred[red_num] = num[j];\n\t\t\t\t\tred_num += 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tgreen[green_num] = num[j];\n\t\t\t\t\tgreen_num += 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tblue[blue_num] = num[j];\n\t\t\t\t\tblue_num += 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(red);\n\t\t\tArrays.sort(blue);\n\t\t\tArrays.sort(green);\n\t\t\tint count = 0;\n\t\t\tif (change(red) != null) {\n\t\t\t\tred = change(red);\n\t\t\t\tcount += search(red);\n\t\t\t}\n\t\t\tif (change(green) != null) {\n\t\t\t\tgreen = change(green);\n\t\t\t\tcount += search(green);\n\t\t\t}\n\t\t\tif (change(blue) != null) {\n\t\t\t\tblue = change(blue);\n\t\t\t\tcount += search(blue);\n\t\t\t}\n\t\t\tif (count == 3)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\n\t\t}\n\t}\n\n\tstatic int search(int[] a) {\n\t\tint[] num = a;\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < num.length; i++) {\n\t\t\tif (num[i] >= 3) {\n\t\t\t\tcount += 1;\n\t\t\t\tnum[i] -= 3;\n\t\t\t}\n\t\t}\n\n\t\tint i = 0;\n\t\twhile (true) {\n\t\t\tif (num[i] <= 0) {\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tif (i >= 7)\n\t\t\t\tbreak;\n\t\t\tif (num[i] >= 1 && num[i + 1] >= 1 && num[i + 2] >= 1) {\n\t\t\t\tcount += 1;\n\t\t\t\tnum[i] -= 1;\n\t\t\t\tnum[i + 1] -= 1;\n\t\t\t\tnum[i + 2] -= 1;\n\t\t\t} else {\n\t\t\t\tnum[i] -= 1;\n\t\t\t}\n\t\t\tboolean check = true;\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tif (num[j] != 0)\n\t\t\t\t\tcheck = false;\n\t\t\t}\n\t\t\tif (check == true)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn count;\n\t}\n\n\tstatic int[] change(int[] a) {\n\t\tif (a.length != 0) {\n\t\t\tint count = 0;\n\t\t\tint number[] = new int[9];\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tnumber[i] = 0;\n\t\t\t}\n\t\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i] != 0)\n\t\t\t\t\tnumber[(a[i] - 1)] += 1;\n\t\t\t}\n\t\t\treturn number;\n\t\t} else\n\t\t\treturn null;\n\t}\n\n\tstatic int array_search(int[] a) {\n\t\tif (a.length != 0) {\n\t\t\tint count = 0;\n\t\t\tint number[] = new int[9];\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tnumber[i] = 0;\n\t\t\t}\n\t\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i] != 0)\n\t\t\t\t\tnumber[(a[i] - 1)] += 1;\n\t\t\t}\n\t\t\tfor (int i = 0; i <= 6; i++) {\n\t\t\t\tif (number[i] > 0 && number[i + 1] > 0 && number[i + 2] > 0) {\n\t\t\t\t\tcount += 1;\n\t\t\t\t\tnumber[i] -= 1;\n\t\t\t\t\tnumber[i + 1] -= 1;\n\t\t\t\t\tnumber[i + 2] -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t} else\n\t\t\treturn 0;\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int loop = sc.nextInt();\n        for(int x=0;x<loop;x++){\n            int countR=0, countG=0, countB=0, count=0, count2=0, p=0, q=0, r=0;\n            int[] l = new int[2];\n            int[] m = new int[6];\n            int[] n = new int[3];\n            int[] num = new int[9];\n            String[] cor = new String[9];\n            for(int i=0;i<9;i++){\n                num[i] = sc.nextInt();\n            }\n            for(int i=0;i<9;i++){\n                cor[i] = sc.next();\n                if(cor[i].equals(\"R\")) countR++;\n                if(cor[i].equals(\"G\")) countG++;\n                if(cor[i].equals(\"B\")) countB++;\n            }\n            if((countR%3)!=0 || (countG%3)!=0 || (countB%3)!=0){\n                System.out.println(\"0\");\n                continue;\n            }\n            Arrays.sort(num);\n            for(int i=0;i<9;i+=3){\n                if(num[i]==num[i+1] && num[i]==num[i+2]) count++;\n            }\n            if(count==3){\n                System.out.println(\"1\");\n                continue;\n            }\n            for(int i=0;i<7;i++){\n                if(num[i]==num[i+1] && num[i]==num[i+2]){\n                    l[p]=i;\n                    p++;\n                    i += 2;\n                }\n            }\n            if(p==1){\n                for(int i=0;i<9;i++){\n                    if(i==l[0] || i==(l[0]+1) || i==(l[0]+2)) continue;\n                    m[q] = i;\n                    q++;\n                }\n                if((num[m[0]]+1)==num[m[1]] && (num[m[0]]+2)==num[m[2]]){\n                    count2++;\n                }\n                if((num[m[3]]+1)==num[m[4]] && (num[m[3]]+2)==num[m[5]]){\n                    count2++;\n                }\n                if(count2==2){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            if(p==2){\n                for(int i=0;i<9;i++){\n                    if(i==l[0] || i==(l[0]+1) || i==(l[0]+2) || i==l[1] || i==(l[1]+1) || i==(l[1]+2)) continue;\n                    n[r] = i;\n                    r++;\n                }\n                if((num[n[0]]+1)==num[n[1]] && (num[n[0]]+2)==num[n[2]]){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            System.out.println(\"0\");\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main{\n\n\t/**\n\t * ?????????????????????????????\\???????¢??????°???\n\t * ??????\n\t * 1) ????´???????????????? ??????String + String ??? Red 1 [1R] White 2 [2W] Gold 3 [3G]\n\t * 2) if??§????´¢????????????.contains() ??? switch??? ??? return;\n\t *\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tRummy ru = new Rummy(br.readLine(), br.readLine());\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = ru.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\n\t}// ????????????????????????????????????\n\n\t/**\n\t * ?????????CardRummy\n\t */\n\tpublic static class Rummy {\n\t\t/**\n\t\t * ?????????????????°??¶???\n\t\t */\n\t\tprivate static final int ONECARDSET = 9;\n\t\t/**\n\t\t * ?????????????????£?????????????????????\n\t\t */\n\t\tprivate static final int CASTAREA = 2;\n\t\t/**\n\t\t * ?????????????????£?????????????????°??????????´???´???\n\t\t */\n\t\tprivate static final int CASTADDRESS =0;\n\n\t\t/**\n\t\t * ????????????????´???´???\n\t\t */\n\t\tArrayList<String> card = new ArrayList<String>();\n\n\t\t/**\n\t\t * ?????°??????????????? ?????£???????????????????´???????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t */\n\t\tpublic Rummy(String tmpNum, String tmpColor) {// ???????????°????????????\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\t\t\t// ?????¨??°??????????????????????´?????????´???\n\t\t\tString tmpCard = \"\";\n\n\t\t\t// for????????? ????§£??????????????????????????????\n\t\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t\t/**\n\t\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t\t */\n\t\t\t\t// ????§£??????????????¨??°??????????????????\n\t\t\t\ttmpCard = transNum[cnt] + transColor[cnt];\n\t\t\t\t// ????´?\n\t\t\t\tcard.add(tmpCard);\n\t\t\t}\n\t\t}// ?????????????????????????????????\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t *\n\t\t * @param tmpArr ???????????´??????????????¨???????????´???\n\t\t *\n\t\t */\n\t\tpublic int playtheGame() {// ???????????°????????????\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = 0;\n\t\t\t// ???????????????????????´???\n\n\t\t\t//??¨???????????´???\n\t\t\tArrayList<String> tmpArr = new ArrayList<String>();\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\t\t\t//??´???????????????\n//\t\t\ttmpArr.addAll(card);\n//\t\t\tcard.clear();\n//\t\t\tcard.addAll(tmpArr);\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialNumCard(card); //?????£????????????\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameNumCard(card); //?????£????????????\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(card);\n\t\t\t//??´???????????????\n//\t\t\ttmpArr.addAll(card);\n//\t\t\tcard.clear();\n//\t\t\tcard.addAll(tmpArr);\n\n\t\t\t// ????????????????????°??????0????????¨??¨0\n\t\t\tif (card.get(ONECARDSET - 1).contains(\"0\")){\n\t\t\t\t// ?????¶??????????????°???????????????s\n\t\t\t\tresult = 1;}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}// playtheGame????????????????????????\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param card2\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\n\t\tpublic ArrayList<String> serialNumCard(ArrayList<String> card) {// ?????£????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param tempNum String????????????????????°??????int??¢????????£???????????????????????¨????????°\n\t\t\t *\n\t\t\t * @param tempArr[] ??¨????????°?????????????????°??????????´? ??????????????°?????????????????????\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\n\t\t\t//??????????????°???????????¢??¨\n\t\t\tString tempNum1[] = new String[CASTAREA];\n\t\t\tString tempNum2[] = new String[CASTAREA];\n\t\t\tString tempNum3[] = new String[CASTAREA];\n\n\t\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????£????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1???String???????????????????\\???????\n\t\t\t\t\t\t * ?????????2?????????????????¢?????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1 ?????????\n\t\t\t\t\t\t * 1) ??¨????????°??§??°???????????¢????´? ??? ???????¨?????????????????????????????????°???????????????????????§???????????????????????????\n\t\t\t\t\t\t *    (??¢?????????????????????)\n\t\t\t\t\t\t * 2) ??¨????????°??§??°???????????¢????´? ??? ??¨???int[]????????£??????????????°????????????????????????????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????2 ?????????\n\t\t\t\t\t\t * ???????????°??¢????????§????????????????????£\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\ttempNum1 = card.get(cnt1).split(\"\");\n\t\t\t\t\t\ttempNum2 = card.get(cnt2).split(\"\");\n\t\t\t\t\t\ttempNum3 = card.get(cnt3).split(\"\");\n\t\t\t\t\t\t// (1)3??£?¶?????????????????????????????????????\n\t\t\t\t\t\tif (Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum2[CASTADDRESS]) - 1\n\t\t\t\t\t\t\t\t&& Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum3[CASTADDRESS])\n\t\t\t\t\t\t\t\t\t\t- 2) {\n\t\t\t\t\t\t\t// (2)3??£?¶????????????????????????????????????????\n\t\t\t\t\t\t\tif (tempNum1[CASTADDRESS + 1].equals(tempNum2[CASTADDRESS + 1])\n\t\t\t\t\t\t\t\t\t&& tempNum2[CASTADDRESS + 1].equals(tempNum3[CASTADDRESS + 1])) {\n\n\t\t\t\t\t\t\t\t// (3)???????????????????????§?????????????????????\n\t\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\")\n\t\t\t\t\t\t\t\t\t\t&& !card.get(cnt3).contains(\"0\")) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\treturn card;\n\t\t}// serialNumCard ????????????????????????\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param card\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\t\tpublic ArrayList<String> sameNumCard(ArrayList<String> card) {// ???????????°????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t\t// (1)???????????????????????????????????????\n\t\t\t\t\t\tif (card.get(cnt1).equals(card.get(cnt2)) && card.get(cnt2).equals(card.get(cnt3))) {\n\t\t\t\t\t\t\t// (1)????????¶??????????????°??????????????????\n\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\") && !card.get(cnt3).contains(\"0\")){\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcard.remove(cnt1);\n\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt2);\n\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\tcard.remove(cnt3);\n\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\treturn card;\n\t\t}// sameNumCard????????????????????????\n\n\t}// Rummy?????????????????????\n\n}// NRummy?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(tmpNum, tmpColor);\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++) {// debug chk point\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}// end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum++] = intNum;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {// debug chk point\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0) {\n\n\t\t\tresult = 1;\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tpublic static int[] sameNumCard(int[] card) {// debug chk point\n\n\t\tint cnt = 0;\n\n\t\tint[] tmpArr = new int[9];\n\n\t\tint tmpArrCnt = 0;\n\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tfor (int j = 0; j < ONECARDSET; j++) {\n\t\t\t\tif (card[j] == i + 1) {\n\t\t\t\t\tcnt++;\n\t\t\t\t\ttmpArr[tmpArrCnt++] = j + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cnt >= 3) {\n\t\t\t\tint count2 = 0;\n\t\t\t\tfor (int k = 0; k < ONECARDSET; k++) {\n\t\t\t\t\tif (count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint intNum = tmpArr[k];\n\t\t\t\t\tcard[intNum - 1] = 0;\n\t\t\t\t\tcount2++;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t}\n\t\t\tcnt = 0;\n\t\t\ttmpArrCnt = 0;\n\t\t}\n\n\t\treturn card;\n\t}\n\n\tpublic static int[] serialNumCard(int[] card) {// debug chk point\n\n\t\tint[][] tmpArr = new int[3][2];\n\n\t\tint cnt = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile (i < 7) {\n\n\t\t\touter: while (true) {\n\n\t\t\t\tif (k == 4) {\n\t\t\t\t\tint intNum1 = tmpArr[0][1];\n\t\t\t\t\tint intNum2 = tmpArr[1][1];\n\t\t\t\t\tint intNum3 = tmpArr[2][1];\n\t\t\t\t\tcard[intNum1] = 0;\n\t\t\t\t\tcard[intNum2] = 0;\n\t\t\t\t\tcard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(card);\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (card[j] == k + i) {\n\t\t\t\t\ttmpArr[cnt][0] = k + i;\n\t\t\t\t\ttmpArr[cnt][1] = j;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcnt = 0;\n\t\t}\n\t\treturn card;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\n\t\t //????????°????¢???????????????°\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt++] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°???\n\t\t\t\t\t if(work_cnt % 3 == 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[++i] && work[i]  == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t else if(work[i] == work[++i] - 1 && work[i]  == work[++i] - 1){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t i++;\n\t\t\t\t\t \t}\n\t\t\t\t }\n\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(flag);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!Check(counter[0] % 3) || !Check(counter[1] % 3) || !Check(counter[2] % 3)) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) flag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\tint[] n;\n\t\tString[] s;\n\t\tn=new int[9];\n\t\ts=new String[9];\n\t\tfor(int ttt=0;ttt<t;ttt++){\n\t\t\tint[] b,r,g;\n\t\t\tb=new int[10];\n\t\t\tr=new int[10];\n\t\t\tg=new int[10];\n\t\t\tfor(int i=0;i<9;i++)n[i]=sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\ts[i]=sc.next();\n\t\t\t\tif(s[i].equals(\"B\"))b[n[i]]++;\n\t\t\t\tif(s[i].equals(\"G\"))g[n[i]]++;\n\t\t\t\tif(s[i].equals(\"R\"))r[n[i]]++;\n\t\t\t}\n\t\t\tint flag=0;\n\t\t\tfor(int i=1;i<=7;i++){\n\t\t\t\tif(b[i]>=1 && b[i+1]>=1 && b[i+2]>=1){\n\t\t\t\t\tflag+=1;\n\t\t\t\t\tb[i]-=1;\n\t\t\t\t\tb[i+1]-=1;\n\t\t\t\t\tb[i+2]-=1;\n\t\t\t\t}\n\t\t\t\tif(r[i]>=1 && r[i+1]>=1 && r[i+2]>=1){\n\t\t\t\t\tflag+=1;\n\t\t\t\t\tr[i]-=1;\n\t\t\t\t\tr[i+1]-=1;\n\t\t\t\t\tr[i+2]-=1;\n\t\t\t\t}\n\t\t\t\tif(g[i]>=1 && g[i+1]>=1 && g[i+2]>=1){\n\t\t\t\t\tflag+=1;\n\t\t\t\t\tg[i]-=1;\n\t\t\t\t\tg[i+1]-=1;\n\t\t\t\t\tg[i+2]-=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1;i<=9;i++)if(b[i]>=3 || r[i]>=3 || g[i]>=3)flag+=1;\n\t\t\tSystem.out.printf(\"%d\\n\",flag/3);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint c = 0;\n\t\twhile(true){\n\t\t\tint[] num = new int[9];\n\t\t\tint[] colour = new int[9];\n\t\t\tint set = 0;\n\t\t\tint wl = 0;\n\t\t\tint i;\n\t\t\tfor(i = 0;i < 9;i++){\n\t\t\t\tnum[i] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(i = 0;i < 9;i++){\n\t\t\t\tcolour[i] = sc.next().charAt(0);\n\t\t\t}\n\t\t\tfor(i = 0;i < 7;i++){\n\t\t\t\tif(num[i] == 10) continue;\n\t\t\t\tfor(int j = i;j < 8;i++){\n\t\t\t\t\tif(colour[j] == colour[i] && num[j] == num[i]){\n\t\t\t\t\t\tfor(int k = 0;k < 9;k++){\n\t\t\t\t\t\t\tif(colour[k] == colour[i] && num[k] == num[i]){\n\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\tnum[j] = 10;\n\t\t\t\t\t\t\t\tnum[k] = 10;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tfor(int j = i;j < 8;i++){\n\t\t\t\t\tif(colour[j] == colour[i] && num[j] == num[i]+1){\n\t\t\t\t\t\tfor(int k = 0;k < 9;i++){\n\t\t\t\t\t\t\tif(colour[k] == colour[i] && num[k] == num[i]+2){\n\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\tnum[j] = 10;\n\t\t\t\t\t\t\t\tnum[k] = 10;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) wl = 1;\n\t\t\tSystem.out.println(wl);\n\t\t\tc++;\n\t\t\tif(c == n) break;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport static java.util.Arrays.*;\nimport static java.lang.Math.*;\n\n// AOJ 2102\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tint TC = sc.nextInt();\n\t\tfor (int tc = 0; tc < TC; tc++) {\n\t\t\tint[] is = new int[9];\n\t\t\tfor (int i = 0; i < 9; i++) is[i] = sc.nextInt();\n\t\t\tCard[] cs = new Card[9];\n\t\t\tfor (int i = 0; i < 9; i++) cs[i] = new Card(is[i], sc.next().charAt(0));\n\t\t\tsort(cs);\n\n\t\t\tboolean ok = true;\n\t\t\tfor (int i = 0; i < 7; i += 3) {\n\t\t\t\tboolean ok2 = false;\n\t\t\t\tif (cs[i].c == cs[i + 1].c && cs[i].c == cs[i + 2].c) {\n\t\t\t\t\tint a = cs[i].n, b = cs[i + 1].n, c = cs[i + 2].n;\n\t\t\t\t\tif (a == b && b == c) ok2 = true;\n\t\t\t\t\tif (a + 1 == b && b + 1 == c) ok2 = true;\n\t\t\t\t}\n\t\t\t\tok &= ok2;\n\t\t\t}\n\t\t\tif (ok) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\t}\n}\n\nclass Card implements Comparable<Card> {\n\tint n;\n\tchar c;\n\tCard (int n, char c) {\n\t\tthis.n = n;\n\t\tthis.c = c;\n\t}\n\t\n\tpublic int compareTo(Card c) {\n\t\tif (this.c == c.c) {\n\t\t\treturn this.n - c.n;\n\t\t} else {\n\t\t\treturn this.c - c.c;\n\t\t}\n\t}\n\t\n\tpublic String toString() {\n\t\treturn \"\" + this.n + \"(\" + this.c + \")\";\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint intHairetsuNum[] = new int[9]; \n\t\tString strHairetsuNum[] = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString strHairetsuColor[] = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void initiallize(boolean b[]) {\n\t\tfor (int i = 0; i < b.length; ++i) {\n\t\t\tb[i] = false;\n\t\t}\n\t}\n\n\tpublic static int same(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i]);\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int continuous(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] - 1 == num[j] && num[i] - 1 > 0) {\n\t\t\t\t\t\tint tmp = research(num, num[i] + 1);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (num[i] - 2 > 0) {\n\t\t\t\t\t\t\t\ttmp = research(num, num[i] - 2);\n\t\t\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (num[i] - 2 == num[j] && num[i] - 2 > 0) {\n\t\t\t\t\t\tint tmp = research(num, num[i] - 1);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (num[i] + 2 == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i] + 1);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (num[i] + 1 == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i] + 2);\n\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (num[i] - 1 > 0) {\n\t\t\t\t\t\t\t\ttmp = research(num, num[i] - 1);\n\t\t\t\t\t\t\t\tif (tmp != -1) {\n\t\t\t\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int research(int num[], int k) {\n\t\tfor (int i = num.length - 1; i >= 0; --i) {\n\t\t\tif (num[i] == k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static int judge(int num[], boolean b[]) {\n\t\tint count = 0;\n\t\tint j = 0;\n\t\tint number[] = new int[9];\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (b[i] == true) {\n\t\t\t\tnumber[j] = num[i];\n\t\t\t\t++j;\n\t\t\t}\n\t\t}\n\t\tif (number[2] == 0)\n\t\t\treturn -1;\n\t\t// same three number\n\t\tcount += same(number);\n\t\t// continuous three number\n\t\tcount += continuous(number);\n\n\t\treturn count;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tboolean R[], G[], B[];// position of R,B,G\n\t\tint count;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new boolean[9];\n\t\tB = new boolean[9];\n\t\tG = new boolean[9];\n\t\tint i, j;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[j] = true;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[j] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[j] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\t\t\t\tcount = 0;\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tint tmp = judge(num, R);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\ttmp = judge(num, B);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\ttmp = judge(num, G);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\tif (count == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t\tinitiallize(R);\n\t\t\t\tinitiallize(B);\n\t\t\t\tinitiallize(G);\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "public class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir = 0;\n\t\tint ig = 0;\n\t\tint ib = 0;\n\t\tint count = 0;\n\t\tchar c;\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += judge(nr, ir) + judge(ng, ig) + judge(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int judge(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "package rummy;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Rummy4 {\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????]\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t\tSystem.out.println(cardArr.get(chk).getFrontnumber() + \" , \"\n\t\t\t\t\t\t\t\t\t\t\t+ cardArr.get(chk).getRearColor() + \" , \" + cardArr.get(chk).isUse());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//?????????\n\t\t\tSystem.out.println();\n\t\t}\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\treturn result= toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic void init_array ( int[][] array ) {\n\n\t\tfor ( int i = 0 ; i < array.length ; i++ ) {\n\t\t\tfor( int j = 0 ; j < array[i].length ; j++ ) {\n\t\t\t\tarray[i][j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic void set_card_num ( int[] card_num, String[] card_color, int[][] card ) {\n\n\t\tint color = 0;\n\n\t\tfor ( int i = 0 ; i < card_num.length ; i++ ) {\n\t\t\tswitch( card_color[i] ) {\n\t\t\tcase\"R\":\n\t\t\t\tcolor = 0;\n\t\t\t\tbreak;\n\t\t\tcase\"G\":\n\t\t\t\tcolor = 1;\n\t\t\t\tbreak;\n\t\t\tcase\"B\":\n\t\t\t\tcolor = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcard[color][card_num[i]]++;\n\t\t\tcard[color][0]++;\n\t\t}\n\t}\n\n\tstatic boolean judge ( int[][] card ) {\n\n\t\tboolean judge = true;\n\n\t\tfor ( int i = 0 ; i < card.length ; i++ ) {\n\t\t\tif( ( card[i][0] ) != 0 && judge ) {\n\t\t\t\t//同色のカードの合計が3の倍数でないとき3枚セットがつくれないので【敗北】\n\t\t\t\tif ( card[i][0] % 3 != 0 ) {\n\t\t\t\t\tjudge = false;\n\t\t\t\t}\n\t\t\t\tif( judge ) {\n\t\t\t\t\tfor( int j = 1 ; j <  card[i].length ; j++ ) {\n\t\t\t\t\t\tif ( judge ) {\n\t\t\t\t\t\t\t//対象の数字のカードの枚数がマイナスの時は連番のセット作成失敗【敗北】\n\t\t\t\t\t\t\tif( card[i][j] < 0 ) {\n\t\t\t\t\t\t\t\tjudge = false;\n\t\t\t\t\t\t\t//対象の数字のカードの枚数が1枚以上の時は、3枚の組み合わせを作って捨てる\n\t\t\t\t\t\t\t} else\tif( card[i][j] > 0 ) {\n\t\t\t\t\t\t\t\t//対象の数字のカードの枚数が3枚以上の時、同じ数字3枚の組み合わせのカードを捨てる\n\t\t\t\t\t\t\t\t//同じカードは5枚までのため、残り枚数は0,1,2のいずれかになる\n\t\t\t\t\t\t\t\tif( card[i][j] >= 3 ) {\n\t\t\t\t\t\t\t\t\tcard[i][j] -= 3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//対象の数字のカードの枚数が1,2の時連番のカードを作成して捨てる\n\t\t\t\t\t\t\t\t//ただし、数字が8と9の時は連番は作成できない（カードが余る）ので【敗北】\n\t\t\t\t\t\t\t\t//（数字が8と9の時の同じ数字3枚の組み合わせは既に捨てている）\n\t\t\t\t\t\t\t\tif ( card[i][j] != 0 ) {\n\t\t\t\t\t\t\t\t\tif( j == ( card[i].length - 1 ) || j == ( card[i].length - 2 ) ) {\n\t\t\t\t\t\t\t\t\t\tjudge = false;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t//対象の数字のカードの枚数分、連番の対象となる数字のカードを捨てる\n\t\t\t\t\t\t\t\t\t\t//最小値から順番に連番を作成してカードを捨てるため、\n\t\t\t\t\t\t\t\t\t\t//作成に成功した時、連番の対象となる数字のカードの枚数は0以上になる\n\t\t\t\t\t\t\t\t\t\t//（同じ数字3枚の組み合わせは既に捨てている）\n\t\t\t\t\t\t\t\t\t\tcard[i][j+2] -= card[i][j];\n\t\t\t\t\t\t\t\t\t\tcard[i][j+1] -= card[i][j];\n\n\t\t\t\t\t\t\t\t\t\t//チェック用処理\n\t\t\t\t\t\t\t\t\t\t//card[i][j] = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn judge;\n\t}\n\n\tstatic void judge_output ( boolean judge ) {\n\t\tif ( judge ) {\n\t\t\tSystem.out.println( \"1\" );\n\t\t} else {\n\t\tSystem.out.println( \"0\" );\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\n\t\t//勝敗判定 true 勝利 false 敗北\n\t\tboolean win_match;\n\t\t//データセット数\n\t\tint set_num = 0;\n\t\t//手持ちのカード数\n\t\tint num_of_onhand = 9;\n\t\t//カードの数字の最大値\n\t\tint card_num_max = 9;\n\t\t//色の種類の数\n\t\t//色に対応した数字 R=0,G=1,B=2\n\t\tint color_num = 3;\n\n\t\t//1つのデータセットのカードの数字 配列nは手持ちn枚目\n\t\tint[] input_card_num = new int [num_of_onhand];\n\t\t//1つのデータセットのカードの色 配列nは手持ちn枚目\n\t\tString[] input_card_color = new String [num_of_onhand];\n\n\t\t//ある色の数字のカード枚数 R1の枚数が1枚 card[0][1]=1;\n\t\t//ただし数字0は1つのデータセットの同色の合計数 Rの合計数3枚 card[0][0]=3;\n\t\tint[][] card = new int[color_num][card_num_max+1];\n\n\t\tScanner sc= new Scanner( System.in );\n\n\t\t//データセット数読み込み\n\t\tset_num = sc.nextInt();\n\n\t\t//データセットの回数、処理実行\n\t\tfor ( int i = 0 ; i < set_num ; i++ ) {\n\n\t\t\t//初期化\n\t\t\twin_match = true;\n\t\t\tinit_array ( card );\n\n\t\t\t//データセット（数字）読み込み\n\t\t\tfor ( int j = 0 ; j < num_of_onhand ; j++ ) {\n\t\t\t\tinput_card_num[j] = sc.nextInt();\n\t\t\t}\n\n\t\t\t//データセット（色）読み込み\n\t\t\tfor ( int j = 0 ; j < num_of_onhand ; j++ ) {\n\t\t\t\tinput_card_color[j] = sc.next();\n\t\t\t}\n\n\t\t\t//データセットを元に色と数字に対応したカードの枚数をセット\n\t\t\t//同色の合計枚数をセット\n\t\t\tset_card_num( input_card_num, input_card_color, card );\n\n\t\t\t//勝敗判定 true 勝利 false 敗北\n\t\t\t//敗北条件を判定し、一つでも一致したら敗北とみなす\n\t\t\twin_match = judge( card );\n\n\t\t\t//結果出力\n\t\t\tjudge_output ( win_match );\n\n\t\t}\n\t\tsc.close();\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();;\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\t num4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\t\t\t\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tcardSet.add(tehuda.get(i).getNum());\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t} else if(i == tehuda.size() - 1) {\n\t\t\t\t\tSystem.out.println(\"e2\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 == num2 + 1 && num1 == num3 + 2) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\n\t\twhile(n-- > 0){\n\t\t\tint[] num = new int[9];\n\t\t\tString[] color = new String[9];\n\t\t\tfor(int i=0;i<9;i++) num[i] = sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++) color[i] = sc.next();\n\t\t\tSystem.out.println(judge(num,color)?1:0);\n\t\t}\n\t}\n\n\tpublic static boolean judge(int[] num,String[] color){\n\t\tfor(int i=0;i<8;i++){\n\t\t\tfor(int j=i+1;j<9;j++){\n\t\t\t\tif(color[i].compareTo(color[j]) > 0){\n\t\t\t\t\tint tn = num[i]; num[i] = num[j]; num[j] = tn;\n\t\t\t\t\tString tc = color[i]; color[i] = color[j]; color[j] = tc;\n\t\t\t\t}\n\t\t\t\telse if(color[i].equals(color[j]) && num[i] > num[j]){\n\t\t\t\t\tint tn = num[i]; num[i] = num[j]; num[j] = tn;\n\t\t\t\t\tString tc = color[i]; color[i] = color[j]; color[j] = tc;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint count = 0;\n\t\tfor(int i=0;i<9;i+=3){\n\t\t\tif(color[i].equals(color[i+1]) && color[i].equals(color[i+2])\n\t\t\t\t && (num[i] == num[i+1] && num[i] == num[i+2]\n\t\t\t\t\t\t || num[i] == num[i+1]-1 && num[i] == num[i+2]-2))\n\t\t\t\tcount++;\n\t\t}\n\n\t\treturn count==3 ? true : false;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\tfor(int i = 0;i < count ;i++){\n\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\t\n\t\t\tfor(int j = 1;j < tehuda.size();j++) {\n\t\t\t\tif(!(tehuda.get(j).getColor().equals(checkColor))) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\t\n\n\t\t\t\t//???????????????\n\t\t\t\tif(cSetList.get(j).size() >= 6) {\n\t\t\t\t\tif(cSetList.get(j).get(0)  == cSetList.get(j).get(1) && cSetList.get(j).get(2) == cSetList.get(j).get(3) && cSetList.get(j).get(4) == cSetList.get(j).get(5) ){\n\t\t\t\t\t\tpoint += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(cSetList.get(j).size() == 9) {\n\t\t\t\t\tif(cSetList.get(j).get(3)  == cSetList.get(j).get(4) && cSetList.get(j).get(5) == cSetList.get(j).get(6) && cSetList.get(j).get(7) == cSetList.get(j).get(8) ){\n\t\t\t\t\t\tpoint += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() -2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Collections;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\t//データ入力の準備\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t//データセット数\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor (int i = 0; i < n; i++){\n\t\t\tint[] temp = new int[9];\n\t\t\tList<Integer> red = new ArrayList<Integer>();\n\t\t\tList<Integer> blue = new ArrayList<Integer>();\n\t\t\tList<Integer> green = new ArrayList<Integer>();\n\t\t\t\n\t\t\t//一旦全ての数字をtempに保存\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\ttemp[j] = sc.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\t//色ごとのリストに格納\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\tString color = sc.next();\n\t\t\t\t\n\t\t\t\tif (color == \"R\"){\n\t\t\t\t\tred.add(temp[j]);\n\t\t\t\t}else if (color == \"B\"){\n\t\t\t\t\tblue.add(temp[j]);\n\t\t\t\t}else if (color == \"G\"){\n\t\t\t\t\tgreen.add(temp[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//データのチェック\n\t\t\tif (check(red) == 1 || check(blue) == 1 || check(green) == 1){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tprivate static int check(List<Integer> data){\n\t\tint[] check1 = {0,0,0,0,0,0,0,0,0};\n\t\tint set = 0;\n\t\tboolean last = false;\n\t\tboolean one = false;\n\t\tboolean two = false;\n\t\tSystem.out.println(\"hello\");\n\t\tfor (int i = 0; i < data.size(); i++){\n\t\t\tSystem.out.println(data.get(i));\n\t\t\t\tcheck1[data.get(i)] += 1;\n\t\t}\n\t\t\n\t\t//同じ数字３つを使わない場合\n\t\tint temp = renban(check1,0);\n\t\tif (temp == 1){\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\t//同じ数字３つを試みる\n\t\tList<Integer> triple = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tif (check1[i] >= 3){\n\t\t\t\ttriple.add(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (triple.size() == 0){\n\t\t\treturn 0;\n\t\t}else if (triple.size() == 1){\n\t\t\tcheck1[triple.get(0)] -= 3;\n\t\t\t\n\t\t\tint res = renban(check1,1);\n\t\t\treturn res;\n\t\t}else if (triple.size() == 3){\n\t\t\treturn 1;\n\t\t}else{\n\t\t\tint[] check2 = new int[9];\n\t\t\tint[] check3 = new int[9];\n\t\t\t\n\t\t\tfor (int i = 0; i < 9; i++){\n\t\t\t\tcheck2[i] = check1[i];\n\t\t\t\tcheck3[i] = check1[i];\n\t\t\t}\n\t\t\t\n\t\t\tcheck1[triple.get(0)] -= 3;\n\t\t\tcheck1[triple.get(1)] -= 3;\n\t\t\tint res1 = renban(check1,2);\n\t\t\tif(res1 == 1){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tcheck2[triple.get(0)] -= 3;\n\t\t\tint res2 = renban(check2,1);\n\t\t\tif(res2 == 1){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tcheck3[triple.get(1)] -= 3;\n\t\t\tint res3 = renban(check3,1);\n\t\t\tif(res3 == 1){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\t\n\t\treturn 0;\n\t}\n\n\n\n\t\n\tprivate static int renban(int[] input, int initialSet){\n\t\tint[] data = new int[9];\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tdata[i] = input[i];\n\t\t}\n\t\tint set = initialSet;\n\t\tboolean last = false;\n\t\tboolean one = false;\n\t\tboolean two = false;\n\t\t\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\ttwo = one;\n\t\t\tone = last;\n\t\t\tif (data[i] >= 1){\n\t\t\t\tlast = true;\n\t\t\t}else{\n\t\t\t\tlast = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (last == true && one == true && two == true){\n\t\t\t\tset++;\n\t\t\t\tdata[i] -= 1;\n\t\t\t\tdata[i - 1] -= 1;\n\t\t\t\tdata[i - 2] -= 1;\n\t\t\t\ti = -1;\n\t\t\t\tlast = false;\n\t\t\t\tone = false;\n\t\t\t\ttwo = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (set >= 3){\n\t\t\treturn 1;\n\t\t}else{\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n//import java.lang.Math;\npublic class Main{\n    public static boolean chk(int a,int b,int c,char d,char e,char f){\n        if(d!=e || e!=f) return false;\n        if(a==b && b==c) return true;\n        int B[];\n        B=new int[3];\n        B[0]=a;\n        B[1]=b;\n        B[2]=c;\n        Arrays.sort(B);\n        if(B[2]-B[1]==1 && B[1]-B[0]==1) return true;\n        return false;\n    }\n    public static void main(String[] args){\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++){\n            int A[];\n            char C[];\n            String S=\"\";\n            A=new int[9];\n            for(int j=0;j<9;j++) A[j]=sc.nextInt();\n            for(int j=0;j<9;j++){\n                String s=sc.next();\n                S+=s;\n            }\n            C=S.toCharArray();\n            boolean ans=false;\n            int all=(int)Math.pow(3,9);\n            for(int j=0;j<all;j++){\n                int bit[]=new int[9];\n                int now=j;\n                for(int k=8;k>=0;k--){\n                    bit[k]=now%3;\n                    now/=3;\n                }\n                int cnt[]=new int[3];\n                for(int k=0;k<9;k++) cnt[bit[k]]++;\n                if(cnt[0]!=3 || cnt[1]!=3 || cnt[2]!=3) continue;\n                int one[]=new int[3];\n                int two[]=new int[3];\n                int three[]=new int[3];\n                int plc[]=new int[3];\n                for(int k=0;k<9;k++){\n                    if(bit[k]==0){\n                        one[plc[0]]=k;\n                        plc[0]++;\n                    }\n                    if(bit[k]==1){\n                        two[plc[1]]=k;\n                        plc[1]++;\n                    }\n                    if(bit[k]==2){\n                        three[plc[2]]=k;\n                        plc[2]++;\n                    }\n                }\n                if(chk(A[one[0]],A[one[1]],A[one[2]],C[one[0]],C[one[1]],C[one[2]])){\n                    if(chk(A[two[0]],A[two[1]],A[two[2]],C[two[0]],C[two[1]],C[two[2]])){\n                        if(chk(A[three[0]],A[three[1]],A[three[2]],C[three[0]],C[three[1]],C[three[2]])) ans=true;\n                    }\n                }\n            }\n            System.out.println(ans?\"1\":\"0\");\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] card = new int[9];\n\t\t\tint[][] color = new int[3][9];\n\t\t\tint[] rgb = new int[3];\n\t\t\tint set = 0;\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcard[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = sc.next();\n\t\t\t\tswitch(s.charAt(0)){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcolor[0][rgb[0]] = card[j];\n\t\t\t\t\t\trgb[0]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcolor[1][rgb[1]] = card[j];\n\t\t\t\t\t\trgb[1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcolor[2][rgb[2]] = card[j];\n\t\t\t\t\t\trgb[2]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tArrays.sort(color[j]);\n\t\t\t\tfor(int k = 2; k < rgb[j]; k++){\n\t\t\t\t\tif(color[j][k] - color[j][k-1] == 0 && color[j][k-1] - color[j][k-2] == 0){\n\t\t\t\t\t\tset++;\n\t\t\t\t\t\tk += 2;\n\t\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\t\tcolor[j][k-1] = 0;\n\t\t\t\t\t\tcolor[j][k-2] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int k = 0; k < rgb[j]; k++){\n\t\t\t\t\tint tmp = color[j][k];\n\t\t\t\t\tint l = 0, m = 0;\n\t\t\t\t\tif(tmp == 0) continue;\n\t\t\t\t\tfor(l = 0; l < rgb[j];l++){\n\t\t\t\t\t\tif(tmp == color[j][l]-1) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(l == rgb[j]) continue;\n\t\t\t\t\tfor (m = 0; m < rgb[j];m++ ) {\n\t\t\t\t\t\tif(tmp == color[j][m]-2) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(m == rgb[j]) continue;\n\t\t\t\t\tset++;\n\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\tcolor[j][l] = 0;\n\t\t\t\t\tcolor[j][m] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) System.out.println(\"1\");\n\t\t\telse System.out.println(\"0\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(blueList) && Confirm(greenList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    private static boolean Confirm3(List<Integer> list) {\n        if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n            return true;\n        } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    private static boolean Confirm6(List<Integer> list) {\n        for (int i = 0; i < 4; i++) {\n            for (int j = i + 1; j < 5; j++) {\n                for (int k = j + 1; k < 6; k++) {\n                    List<Integer> tmpList1 = new ArrayList<Integer>();\n                    tmpList1.add(list.get(i));\n                    tmpList1.add(list.get(j));\n                    tmpList1.add(list.get(k));\n                    if (Confirm3(tmpList1)) {\n                        List<Integer> tmpList2 = new ArrayList<Integer>();\n                        for (int l = 0; l < 6; l++) {\n                            if (l != i && l != j && l != k) {\n                                tmpList2.add(list.get(l));\n                            }\n                        }\n\n                        if (Confirm3(tmpList2)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    private static boolean Confirm9(List<Integer> list) {\n        for (int i = 0; i < 7; i++) {\n            for (int j = i + 1; j < 8; j++) {\n                for (int k = j + 1; k < 9; k++) {\n                    List<Integer> tmpList1 = new ArrayList<Integer>();\n                    tmpList1.add(list.get(i));\n                    tmpList1.add(list.get(j));\n                    tmpList1.add(list.get(k));\n                    if (Confirm3(tmpList1)) {\n                        List<Integer> tmpList2 = new ArrayList<Integer>();\n                        for (int l = 0; l < 9; l++) {\n                            if (l != i && l != j && l != k) {\n                                tmpList2.add(list.get(l));\n                            }\n                        }\n\n                        if (Confirm6(tmpList2)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        if (len == 0)\n            return true;\n\n        if (len / 3 == 1) {\n            return (Confirm3(list));\n        } else if (len / 3 == 2) {\n            return (Confirm6(list));\n        } else {\n            return (Confirm9(list));\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\n\n// ?????¨??????static????????????????????????????????£?????????\nclass Card {\n\n  // ??????????????????\n  public int n;\n\n  // ???????????????\n  public String c;\n\n  // ???????????¨???????????????\n  // y??????x??????????????????, ??°????????§????????¨??£???????????????\n  static int sub(Card x, Card y) {\n    if(x.c.equals(y.c)) {\n      return x.n - y.n;\n    } else {\n      return x.c.charAt(0) - y.c.charAt(0);\n    }\n  }\n\n  // ?????????????????????????????????????????????\n  static void sort(Card[] cards) {\n    for(int i = 0; i < 9 - 1; i++) {\n      for(int j = 9 - 1; j > i; j--) {\n        if(sub(cards[j - 1], cards[j]) > 0) {\n          Card temp = cards[j - 1];\n          cards[j - 1] = cards[j];\n          cards[j] = temp;\n        }\n      }\n    }\n  }\n\n  // 3???????????????????????????????????§??°????????????????????????????????????????????????\n  static boolean isSameNumberSet(Card x, Card y, Card z) {\n    if(x.c.equals(y.c) && y.c.equals(z.c)) {\n      if(x.n == y.n && y.n == z.n) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // 3???????????????????????????????????§??°????????£??????????????????????????????????????????\n  static boolean isSerialNumberSet(Card x, Card y, Card z) {\n    if(x.c.equals(y.c) && y.c.equals(z.c)) {\n      if(z.n - y.n == 1 && y.n - x.n == 1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // 3??????????????????????????????????????????????????????\n  // isSameNumberSet??¨isSerialNumberSet???or?????¨???\n  static boolean isSet(Card x, Card y, Card z) {\n    return isSameNumberSet(x, y, z) || isSerialNumberSet(x, y, z);\n  }\n}\n\npublic class Main {\n  static int[][] devide() {\n    int[][] devision = new int[280][9];\n    int[] i = new int[9];\n    int p = 0;\n\n    for(i[0] = 0; i[0] < 3; i[0]++) {\n    for(i[1] = 0; i[1] < 3; i[1]++) {\n    for(i[2] = 0; i[2] < 3; i[2]++) {\n    for(i[3] = 0; i[3] < 3; i[3]++) {\n    for(i[4] = 0; i[4] < 3; i[4]++) {\n    for(i[5] = 0; i[5] < 3; i[5]++) {\n    for(i[6] = 0; i[6] < 3; i[6]++) {\n    for(i[7] = 0; i[7] < 3; i[7]++) {\n    for(i[8] = 0; i[8] < 3; i[8]++) {\n      int[] count = { 0, 0, 0 };\n      int[] constraints = { 0, 0, 0 };\n      for(int j = 0; j < 9; j++) {\n        if(count[i[j]] == 0) {\n          constraints[i[j]] = j;\n        }\n        count[i[j]]++;\n      }\n      if(count[0] == 3 && count[1] == 3 && count[2] == 3) {\n        if(constraints[0] < constraints[1] && constraints[1] < constraints[2]) {\n          int[] g = new int[9];\n          int[] c = { 0, 0, 0 };\n          for(int j = 0; j < 9; j++) {\n            g[i[j] * 3 + c[i[j]]] = j;\n            c[i[j]]++;\n          }\n          devision[p] = g;\n          p++;\n          printDebugInfo(Arrays.toString(g), null);\n        }\n      }\n    }}}}}}}}}\n\n    printDebugInfo(\"devision: \" + p, null);\n    return devision;\n  }\n\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int t = sc.nextInt();\n\n    int[][] devision = devide();\n\n    for(int i = 0; i < t; i++) {\n      int setCount = 0;\n\n      Card[] cards = new Card[9];\n      for(int j = 0; j < 9; j++) {\n        cards[j] = new Card();\n      }\n\n      printDebugInfo(\"-----------\", null);\n      printDebugInfo(i + \"??????\", null);\n\n      // data input\n      for(int j = 0; j < 9; j++) {\n        cards[j].n = sc.nextInt();\n      }\n      for(int j = 0; j < 9; j++) {\n        cards[j].c = sc.next();\n      }\n      printDebugInfo(\"After Input.\", cards);\n\n      // sort\n      Card.sort(cards);\n      printDebugInfo(\"After first sort.\", cards);\n\n      boolean isVictory = false;\n      for(int j = 0; j < 280; j++) {\n        int[] d = devision[j];\n        boolean[] f = new boolean[3];\n        f[0] = Card.isSet(cards[d[0]], cards[d[1]], cards[d[2]]);\n        f[1] = Card.isSet(cards[d[3]], cards[d[4]], cards[d[5]]);\n        f[2] = Card.isSet(cards[d[6]], cards[d[7]], cards[d[8]]);\n        if(f[0] && f[1] && f[2]) {\n          printDebugInfo(Arrays.toString(d), cards);\n          isVictory = true;\n          break;\n        }\n      }\n\n      if(isVictory) {\n        System.out.println(1);\n      } else {\n        System.out.println(0);\n      }\n      printDebugInfo(\"\", null);\n    }\n  }\n\n  static void printDebugInfo(String message, Card[] cards) {\n    boolean debug = false;\n    if(debug) {\n      System.out.println(message);\n      if(cards != null) {\n        for(int i = 0; i < 9; i++) {\n          System.out.print(cards[i].c);\n          System.out.print(cards[i].n);\n          System.out.println(\"\");\n        }\n      }\n      System.out.println(\"\");\n    }\n  }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 or defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();// clear\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(br.readLine(), br.readLine());// clear\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();// debug chk point\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);// clear\n\t\t}\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++)\n\t\t\tSystem.out.println(answer.get(i));// clear\n\t} // main end\n}// class end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}// construct end\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {// clear\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\"))\n\t\t\t\tcardR[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"G\"))\n\t\t\t\tcardG[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"B\"))\n\t\t\t\tcardB[i] = Integer.parseInt(transNum[i]);\n\t\t}\n\t}// construct end\n\n\tpublic int playtheGame() {// clear\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t//Arraylist.sort?????´??????\n\t\t//???????????´???????????????????????§??????????????????????????????????????°?????????????????????\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0)\n\t\t\tresult = 1;\n\n\t\treturn result;\n\n\t}// method end\n\n\tpublic static int[] sameNumCard(int[] card) {// clear\n\t\t//3???for??????????????????????????????\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < ONECARDSET; k++) {\n\t\t\t\t\t//??????????????????????????§????????????????????°\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]  ) {\n\t\t\t\t\t\t//?????????????????????????????????????????????\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\t//????????§???????????????\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n\n\tpublic static int[] serialNumCard(int[] card) {// clear\n\t\t//3???for??????????????????????????????\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < ONECARDSET; k++) {\n\t\t\t\t\t//??????????????????????????§???????????????????¢?????????´???\n\t\t\t\t\tif (card[i] == card[j]-1 && card[i] ==card[k]-2 ) {\n\t\t\t\t\t\t//?????????????????????????????????????????????\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\t//????????§???????????????\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n}// class end"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\nclass Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint T = scanner.nextInt();\n\t\t\n\t\tCard R=new Card();\n\t\tCard G=new Card();\n\t\tCard B=new Card();//各マークの手札\n\n\n\t\tint num[]=new int[9];\n\n\n\t\tfor(int k=0;k<T;k++){\n\n\t\t\t//手札を９枚配る、各マークと数字を対応させ1枚のカードとして扱う\n\t\t\tfor(int i =0;i<9;i++){\n\t\t\t\tnum[i]= scanner.nextInt();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor(int p=0;p<9;p++){\n\t\t\t\tString st=scanner.next();\n\t\t\t\t\n\t\t\t\tswitch(st){\n\t\t\t\tcase \"R\":\n\n\t\t\t\t\tR.hand[num[p]-1]=R.hand[num[p]-1]+1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase\"G\":\n\n\t\t\t\t\tG.hand[num[p]-1]=G.hand[num[p]-1]+1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase\"B\":\n\n\t\t\t\t\tB.hand[num[p]-1]=B.hand[num[p]-1]+1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\tif( (B.Set()+R.Set()+G.Set()) ==3){\n\t\t\tSystem.out.println(1);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(0);\n\t\t}\n\t\t}\n\n\t\tscanner.close();\n\n\t}\n\n}\n\n\nclass Card{\n\n\tint hand [];\n\tint set=0;\n\tCard(){\n\t\thand=new int[9];\n\t}\n\n\t//set数判定メソッド\n\n\t public int Set(){\n\t\tset=0;\n\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(hand[i]>=3){\n\t\t\t\thand[i]=hand[i]-3;//同じカードが３枚あるなら１セット追加して捨て札にする\n\t\t\t\tset=set+1;\n\t\t\t}\n\t\t\tif(i <= 6){//3連続で同じ数字があるならい１セット追加して1枚ずつ捨て札にする\n\t\t\t\t\n\t\t\t\twhile(true){\n\t\t\t\t\tif((((hand[i] == 0) ||((hand[i+1] ==0))||(hand[i+2]==0))))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;}\n\t\t\t\tif( ((hand[i] >= 1) &&((hand[i+1]>=1))&&(hand[i+2]>=1))){\n\t\t\t\t\thand[i]=hand[i]-1;\n\t\t\t\t\thand[i+1]=hand[i+1]-1;\n\t\t\t\t\thand[i+2]=hand[i+2]-1;\n\t\t\t\t\tset=set+1;\n\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor(int i=0; i < 9;i++){\n\t\thand[i]=0;\t\n\t\t}\n\t\t\n\treturn set;\n}\n\n\n\n}\n\n\n\n\n\n\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tint R[], G[], B[];// position of R,B,G\n\t\tint count1[], count2, /* counting number */ max, min;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new int[9];\n\t\tB = new int[9];\n\t\tG = new int[9];\n\t\tcount1 = new int[10];\n\t\tint i, j, k, m, n, l;\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tk = 0;\n\t\t\tm = 0;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[k] = j;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[m] = j;\n\t\t\t\t\t\t++m;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[n] = j;\n\t\t\t\t\t\t++n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i % 2 == 1) {\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < k; ++l) {\n\t\t\t\t\t++count1[num[R[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[R[l]]] == 3) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t\tcount1[num[R[l]]] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[R[max]] < num[R[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[R[min]] > num[R[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[R[max]] - num[R[min]] > 1) {\n\t\t\t\t\tfor (l = num[R[min]] + 1; l <= num[R[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < m; ++l) {\n\t\t\t\t\t++count1[num[B[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[B[l]]] == 3) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t\tcount1[num[B[l]]] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[B[max]] < num[B[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[B[min]] > num[B[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (num[B[max]] - num[B[min]] > 1) {\n\t\t\t\t\tfor (l = num[B[min]] + 1; l <= num[B[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tmax = 0;\n\t\t\t\tmin = 0;\n\t\t\t\tfor (l = 0; l < n; ++l) {\n\t\t\t\t\t++count1[num[G[l]]];\n\t\t\t\t\t// 同じ数字が三つあるとき\n\t\t\t\t\tif (count1[num[G[l]]] % 3 == 0) {\n\t\t\t\t\t\t++count2;\n\t\t\t\t\t}\n\t\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\t\tif (num[G[max]] < num[G[l]]) {\n\t\t\t\t\t\tmax = l;\n\t\t\t\t\t}\n\t\t\t\t\tif (num[G[min]] > num[G[l]]) {\n\t\t\t\t\t\tmin = l;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (num[G[max]] - num[G[min]] > 1) {\n\t\t\t\t\tfor (l = num[G[min]] + 1; l <= num[G[max]] - 1; ++l) {\n\t\t\t\t\t\tif (count1[l] > 0) {\n\t\t\t\t\t\t\tif (count1[l + 1] > 0 && count1[l - 1] > 0) {\n\t\t\t\t\t\t\t\t++count2;\n\t\t\t\t\t\t\t\t--count1[l + 1];\n\t\t\t\t\t\t\t\t--count1[l];\n\t\t\t\t\t\t\t\t--count1[l - 1];\n\t\t\t\t\t\t\t\t++l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (count2 == 3) {\n\t\t\t\t\tSystem.out.println(\"1\");\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str = scan.next();\n\t\t\t\tchar[] inpc = str.toCharArray();\n\t\t\t\tC[j*2][i] = inpc[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea=0;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic void init_array ( int[][] array ) {\n\n\t\tfor ( int i = 0 ; i < array.length ; i++ ) {\n\t\t\tfor( int j = 0 ; j < array[i].length ; j++ ) {\n\t\t\t\tarray[i][j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic void set_card_num ( int[] card_num, String[] card_color, int[][] card ) {\n\n\t\tint color = 0;\n\n\t\tfor ( int i = 0 ; i < card_num.length ; i++ ) {\n\t\t\tswitch( card_color[i] ) {\n\t\t\tcase\"R\":\n\t\t\t\tcolor = 0;\n\t\t\t\tbreak;\n\t\t\tcase\"G\":\n\t\t\t\tcolor = 1;\n\t\t\t\tbreak;\n\t\t\tcase\"B\":\n\t\t\t\tcolor = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcard[color][card_num[i]]++;\n\t\t\tcard[color][0]++;\n\t\t}\n\t}\n\n\tstatic boolean judge ( int[][] card ) {\n\n\t\tboolean judge = true;\n\n\t\tfor ( int i = 0 ; i < card.length ; i++ ) {\n\t\t\tif( ( card[i][0] ) != 0 && judge ) {\n\t\t\t\tif ( card[i][0] % 3 != 0 ) {\n\t\t\t\t\tjudge = false;\n\t\t\t\t}\n\t\t\t\tif( judge ) {\n\t\t\t\t\tfor( int j = 1 ; j <  card[i].length ; j++ ) {\n\t\t\t\t\t\tif ( judge ) {\n\t\t\t\t\t\t\tif( card[i][j] < 0 ) {\n\t\t\t\t\t\t\t\tjudge = false;\n\t\t\t\t\t\t\t} else\tif( card[i][j] > 0 ) {\n\t\t\t\t\t\t\t\tif( card[i][j] >= 3 ) {\n\t\t\t\t\t\t\t\t\tcard[i][j] -= 3;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( card[i][j] != 0 ) {\n\t\t\t\t\t\t\t\t\tif( j == ( card[i].length - 1 ) || j == ( card[i].length - 2 ) ) {\n\t\t\t\t\t\t\t\t\t\tif ( ( card[i][j] % 3 ) != 0 ) {\n\t\t\t\t\t\t\t\t\t\t\tjudge = false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcard[i][j+2] -= card[i][j];\n\t\t\t\t\t\t\t\t\t\tcard[i][j+1] -= card[i][j];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn judge;\n\t}\n\n\tstatic void judge_output ( boolean judge ) {\n\t\tif ( judge ) {\n\t\t\tSystem.out.println( \"1\" );\n\t\t} else {\n\t\tSystem.out.println( \"0\" );\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\n\t\t//勝敗判定 true 勝利 false 敗北\n\t\tboolean win_match;\n\t\t//データセット数\n\t\tint set_num = 0;\n\t\t//手持ちのカード数\n\t\tint num_of_onhand = 9;\n\t\t//カードの数字の最大値\n\t\tint card_num_max = 9;\n\t\t//色の種類の数\n\t\t//色に対応した数字 R=0,G=1,B=2\n\t\tint color_num = 3;\n\n\t\t//1つのデータセットのカードの数字 配列nは手持ちn枚目\n\t\tint[] input_card_num = new int [num_of_onhand];\n\t\t//1つのデータセットのカードの色 配列nは手持ちn枚目\n\t\tString[] input_card_color = new String [num_of_onhand];\n\n\t\t//ある色の数字のカード枚数 R1の枚数が1枚 card[0][1]=1;\n\t\t//ただし数字0は1つのデータセットの同色の合計数 Rの合計数3枚 card[0][0]=3;\n\t\tint[][] card = new int[color_num][card_num_max+1];\n\n\t\tScanner sc= new Scanner( System.in );\n\n\t\t//データセット数読み込み\n\t\tset_num = sc.nextInt();\n\n\t\t//データセットの回数、処理実行\n\t\tfor ( int i = 0 ; i < set_num ; i++ ) {\n\n\t\t\t//初期化\n\t\t\twin_match = true;\n\t\t\tinit_array ( card );\n\n\t\t\t//データセット（数字）読み込み\n\t\t\tfor ( int j = 0 ; j < num_of_onhand ; j++ ) {\n\t\t\t\tinput_card_num[j] = sc.nextInt();\n\t\t\t}\n\n\t\t\t//データセット（色）読み込み\n\t\t\tfor ( int j = 0 ; j < num_of_onhand ; j++ ) {\n\t\t\t\tinput_card_color[j] = sc.next();\n\t\t\t}\n\n\t\t\t//データセットを元に色と数字に対応したカードの枚数をセット\n\t\t\t//同色の合計枚数をセット\n\t\t\tset_card_num( input_card_num, input_card_color, card );\n\n\t\t\t//勝敗判定 true 勝利 false 敗北\n\t\t\t//敗北条件を判定し、一つでも一致したら敗北とみなす\n\t\t\twin_match = judge( card );\n\n\t\t\t//結果出力\n\t\t\tjudge_output ( win_match );\n\n\t\t}\n\t\tsc.close();\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    private static int[] number;\n    private static char[] color;\n    private static int[] combination;\n    private static int[][] box;\n\n    public static void main(String[] args){\n\n        Scanner scn = new Scanner(System.in);\n        int count = scn.nextInt();\n\n        for(int i = 0; i < count; i++){\n            number = new int[9];\n            color = new char[9];\n            combination = new int[3];\n\n            for(int j = 0; j < 9; j++) number[j] = scn.nextInt();\n            for(int j = 0; j < 9; j++) color[j] = scn.next().charAt(0);\n            box = new int[3][3];\n\n\n            if(solve(0)){\n                System.out.println(\"1\");\n            }\n            else{\n                System.out.println(\"0\");\n            }\n        }\n    }\n\n    public static boolean solve(int n){\n\n        if(n == 9){\n            for(int i = 0; i < 3; i++){\n                //三色同じか判定\n                if( color[box[i][0]]!= color[box[i][1]] || color[box[i][1]] != color[box[i][2]] ) {\n                    return false;\n                }\n            }\n\n            for(int i = 0; i < 3; i++){\n                int[] tmp = new int[3];\n\n                for(int j = 0; j < 3; j++) {\n                    tmp[j] = number[box[i][j]];\n                }\n                Arrays.sort(tmp);\n                if( !( tmp[0] == tmp[1] && tmp[1] == tmp[2] || tmp[0] + 1 == tmp[1] && tmp[1] + 1 == tmp[2] ) ){\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        for(int i = 0; i < 3; i++){\n            if(combination[i] == 3) continue;\n            box[i][combination[i]] = n;\n            combination[i]++;\n            if( solve(n + 1) ) return true;\n            combination[i]--;\n        }\n        return false;\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tint num[] = new int[9];\n\t\tint color[] = new int[9];\n\t\t// TODO 自動生成されたメソッド・スタブ\n\t\tScanner scanner = new Scanner(System.in);\n\t\t// 回数counter入力\n\t\tint counter = scanner.nextInt();\n\n\t\t// カードの配列numとcolorの定義と入力、格納\n\t\tfor (int trial = 0; trial < counter; trial++) {\n\t\t\tint rednum = 0;\n\t\t\tint greennum = 0;\n\t\t\tint bluenum = 0;\n\n\t\t\tfor (int hand = 0; hand < 9; hand++) {\n\t\t\t\tnum[hand] = scanner.nextInt();\n\t\t\t}\n\t\t\tfor (int hand = 0; hand < 9; hand++) {\n\t\t\t\tString input = scanner.next();\n\t\t\t\tif (\"R\".equals(input)) {\n\t\t\t\t\tcolor[hand] = 1;\n\t\t\t\t\trednum++;\n\t\t\t\t} else if (\"G\".equals(input)) {\n\t\t\t\t\tcolor[hand] = 2;\n\t\t\t\t\tgreennum++;\n\t\t\t\t} else if (\"B\".equals(input)) {\n\t\t\t\t\tcolor[hand] = 3;\n\t\t\t\t\tbluenum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// 色R,G,Bの配列の定義\n\t\t\tint[] red = new int[rednum];\n\t\t\tint[] green = new int[greennum];\n\t\t\tint[] blue = new int[bluenum];\n\t\t\tint redindex = 0;\n\t\t\tint greenindex = 0;\n\t\t\tint blueindex = 0;\n\n\t\t\t// 色配列にnumの要素を格納\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tif (color[i] == 1) {\n\t\t\t\t\tred[redindex] = num[i];\n\t\t\t\t\tredindex++;\n\t\t\t\t} else if (color[i] == 2) {\n\t\t\t\t\tgreen[greenindex] = num[i];\n\t\t\t\t\tgreenindex++;\n\t\t\t\t} else if (color[i] == 3) {\n\t\t\t\t\tblue[blueindex] = num[i];\n\t\t\t\t\tblueindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// 色配列をソート\n\t\t\tArrays.sort(red);\n\t\t\tArrays.sort(green);\n\t\t\tArrays.sort(blue);\n\n\t\t\t// カードの合計セット数setcountとcountメソッドの宣言、初期化\n\t\t\tint setcount = 0;\n\t\t\tsetcount += count(red);\n\t\t\tsetcount += count(green);\n\t\t\tsetcount += count(blue);\n\n\t\t\t// setcountが3なら1、それ以外なら0を出力\n\t\t\tif (setcount == 3) {\n\t\t\t\tSystem.out.println(1);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t//System.out.println(setcount);\n\n\t\t}\n\n\t}\n\n\tpublic static int count(int a[]) {\n\t\tList<Integer> list = new LinkedList<Integer>();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tlist.add(a[i]);\n\t\t}\n\n\t\tint setcounter = 0;\n\t\tint listsize = a.length;\n\t\t// 総当たりで判定\n\t\tfor (int i1 = 0; i1 < listsize - 2; i1++) {\n\t\t\tfor (int i2 = i1 + 1; i2 < listsize - 1; i2++) {\n\t\t\t\tfor (int i3 = i2 + 1; i3 < listsize; i3++) {\n\t\t\t\t\tif (i1 != i2 && i1 != i3 && i2 != i3) {\n\t\t\t\t\t\tif (list.get(i1) + 1 == list.get(i2)\n\t\t\t\t\t\t\t\t&& list.get(i1) + 2 == list.get(i3)) {\n\t\t\t\t\t\t\tlist.remove(i3);\n\t\t\t\t\t\t\tlist.remove(i2);\n\t\t\t\t\t\t\tlist.remove(i1);\n\t\t\t\t\t\t\tsetcounter++;\n\t\t\t\t\t\t\tlistsize = list.size();\n\t\t\t\t\t\t\ti2 = i1 + 1;\n\t\t\t\t\t\t\ti3 = i2;\n\t\t\t\t\t\t} else if (list.get(i1) == list.get(i2) && list.get(i1) == list.get(i3)) {\n\t\t\t\t\t\t\tlist.remove(i3);\n\t\t\t\t\t\t\tlist.remove(i2);\n\t\t\t\t\t\t\tlist.remove(i1);\n\t\t\t\t\t\t\tsetcounter++;\n\t\t\t\t\t\t\tlistsize = list.size();\n\t\t\t\t\t\t\ti2 = i1 + 1;\n\t\t\t\t\t\t\ti3 = i2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//for (int s : list) {\n\t\t//\tSystem.out.println(s);\n\t\t//}\n\t\treturn setcounter;\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set + 1; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\t// ???????????????????????????\n\t\t\tint result = 0;\n\n\t\t\t// ?????????????´?\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(result = utRummy(result, cardArr));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @param result2\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(int result, ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ????????????????????°??????????????????\n\t\tcardNumSort(cardArr);\n\n\t\t// ???????????????????????\\?????????????????????R, G, B??????\n\t\tcardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶??????????????????????????°???????????¶????????????\n\t\t\tresult = 1;\n\t\t}\n\t\t// ????????????????????????????????¨??????\n\t\treturn result;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t// (2)????????°????????????????????????,3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2) 3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * ????????§???????????????????????????for?????????????????¨????????¨?????£?§£?????????\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * ?????????????????????\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\n\t\t\t\t\t\t\t\t// ?????????\n\t\t\t\t\t\t\t\t// for (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t// cardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ?????????????????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????°?????\\??´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\n\tboolean isSequenceNumber(int[] num) {\n\t\tint temp = num[0];\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\ttemp++;\n\t\t\tif(num[r] != temp) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tint first = num[0];\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] != first) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchCharacter(String[] str) {\n\t\tchar first = str[0].charAt(0);\n\t\tfor(int r = 0; r < str.length; r++) {\n\t\t\tif(str[r].charAt(0) != first) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isEven(int num) {\n\t\treturn(num % 2 == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!isEven(counter[0] % 3) || !isEven(counter[1] % 3) || !isEven(counter[2] % 3)) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[3];\n\t\t\t\t\t\tfor(int c = 0; c < 3; c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(isMatchNumber(number) || isSequenceNumber(number))) flag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\t// cardColorSort(cardArr);\n\n\t\t// ?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t// ????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result = toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// ?????£?¶???????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\t\tif (cardArr.get(chk).isUse() == false) {\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t// (3)????¨????????????????\n\t\t\t\t\t\t\t\tif (cardArr.get(chk).isUse() == false) {\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "package aoj.rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\n\t\tif(R.size()%3 != 0 || G.size()%3 != 0 || B.size()%3 != 0){\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tcnt += numSearch(R);\n\t\t}\n\t\t\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tcnt += numSearch(G);\n\t\t\t\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tcnt += numSearch(B);\n\t\t\t\n\t\t}\n\t\t\n\t\tif(cnt == 3){\n\t\t\tSystem.out.println(\"1\");\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t}\n\t\t\n\t}\n\n\n\tprivate static int numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tswitch(r.size()){\n\t\tcase 3:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return 1;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return 1;\n\n\t\tcase 6:\n\t\t\tfor (int j = 0; j < 6; j +=3) {\n\t\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) i +=1;\n\t\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) i +=1;\n\t\t\t}\n\t\t\treturn i;\n\n\t\tcase 9:\n\t\t\tfor (int j = 0; j < 9; j +=3) {\n\t\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) i +=1;\n\t\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) i +=1;\n\t\t\t}\n\n\t\t\treturn i;\n\n\t\t}\n\n\t\treturn i;\n\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint gameset = sc.nextInt();\n\n\t\tCardRummy cr = new CardRummy();\n\n\t\t//while(x) -> infinity loop\n\t\tfor(int j2 =0; j2 < gameset; j2++){\n\n\t\t\tfor (int i = 0; i < CardRummy.CARDPAGE; i++) {\n\t\t\t\tfor (int j = 0; j < CardRummy.ONECARDSET; j++) {\n\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\tcr.card[i][j] = sc.nextInt();\n\t\t\t\t\telse {\n\t\t\t\t\t\tswitch (sc.next()) {\n\t\t\t\t\t\tcase \"R\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.RED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"G\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.GREEN;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"B\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.BLUE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcr.setCardset(cr.card);\n\t\t\t//cr.card = cr.getCardset(); delete\n\n\t\t\t// game start\n\t\t\tint cnt = 0;\n\t\t\tcnt = cr.playtheGame(cr.card); // ?????????\n\t\t\t// game result\n\t\t\tif (3 <= cnt)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t\tsc.close();\n\t}\n}\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// num\n\t// final int NUMBER0 = 0;\n\t// final int NUMBER1 = 1;\n\t// final int NUMBER2 = 2;\n\t// final int NUMBER3 = 3;\n\t// final int NUMBER4 = 4;\n\t// final int NUMBER5 = 5;\n\t// final int NUMBER6 = 6;\n\t// final int NUMBER7 = 7;\n\t// final int NUMBER8 = 8;\n\t// final int NUMBER9 = 9;\n\n\t// color\n\tstatic final int RED = 1;\n\tstatic final int GREEN = 2;\n\tstatic final int BLUE = 3;\n\n\tint[][] card = new int[CARDPAGE][ONECARDSET];\n\tCardRummy[][] ArrCR = new CardRummy[CARDPAGE][ONECARDSET];\n\n\tpublic CardRummy() {\n\n\t}\n\n\t// public int[][] getCardset() {\n\t// return card;\n\t// }\n\n\t// ????????????????????????????????\\??????\n\tpublic void setCardset(int[][] card) {\n\t\tthis.card = settingcardplay(card);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {// Error point\n\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\n\t\t\t\t// ?????????color???????????????\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\t// ???????????????????????????????????¨????????°?????£?¨????????????????????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// ??????color&num???????????????\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\t\t\t\t\t// ?????????????????????\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\tint cnt = 0;\n\t\t// ??????for????????????????¬??????¨???????????????\n\t\t// ex : [0][1][2] ....\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ??£????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ?????????????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][i] == cardset[0][k] - 2) {\n\t\t\t\t\t\t\t// Error point\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ???????????°????????????main????????????????????????????????????\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tprivate static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t//????????????????????????????????\\????????????????????£?¨?\n\t\tCardMethod cm = new CardMethod();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tcm.inputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = cm.utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ??????????????????????????????????????????\n\t * @author ??????\n\t */\n\tprivate static class CardMethod {\n\n\t\t/**\n\t\t *\n\t\t *\n\t\t * @param cardArr\n\t\t * @param transNum\n\t\t * @param transColor\n\t\t */\n\t\tprivate static void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t/**\n\t\t\t * ?????¶??? ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t\t *\n\t\t\t * ?????????????????¨?????¨?????????????????\\??? ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t *\n\t\t\t */\n\t\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\t\t\t// ???????????????????????£???\n\t\t\tswitch (swi) {\n\t\t\tcase \"LongNum\":\n\t\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tcase \"LongColor\":\n\t\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"??¨????????????\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\t// ??°???, ?????????????????????\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate static void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transColor.length; cnt2++) {\n\t\t\t\t// ??±?????????\n\t\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t\t} else {\n\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t * @param count\n\t\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t\t */\n\t\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = ADDRESSPLUSZERO;\n\n\t\t\t// ???????????????????????´???\n\t\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialCard(cardArr);\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameCard(cardArr);\n\n\t\t\treturn  result = verificationCard(result, cardArr);\n\n\t\t}// utRummy????????????????????????\n\n\t\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t\t// ???????????????0???????????????\n\t\t\tint count = ADDRESSPLUSZERO;\n\n\t\t\t/**\n\t\t\t * @Warnning ???????????????????????´??????\n\t\t\t *\n\t\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t\t */\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t\t/**\n\t\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t\t */\n\t\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\t\tcount++;\n\n\t\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// sameCard????????????????????????\n\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param cardArr\n\t\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t\t */\n\t\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t */\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}// serialCard????????????????????????\n\n\t}//???????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "class Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][9]\n\t\tchar C[][] = new char[T][9];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tC[j*2][i] = scan.nextChar();\n\t\t\t}\n\t\t}\n\t\t\n\t\tChar coler[]={'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n \npublic class Main{\n    public static void main(String[] args){\n        Scanner s = new Scanner(System.in);\n \n \n        int i,j,t;\n        String st;\n    \n        t = s.nextInt();\n        for(i=0;i<t;i++){\n            int[] num = new int[10];\n            int[] g = new int[10],b =new int[10], r =new int[10];\n            boolean ch=true;\n            for(j=0;j<9;j++)num[j]=s.nextInt();\n            for(j=0;j<9;j++){\n \n                st = s.next();\n                if(st.charAt(0)=='G')g[num[j]]++;\n                else if(st.charAt(0)=='B')b[num[j]]++;\n                else if(st.charAt(0)=='R')r[num[j]]++;\n            }\n            for(j=1;j<=9;j++){\n                if(g[j]>=3)g[j]-=3;\n                if(j<8&&g[j]==2&&g[j+1]>1&&g[j+2]>1){\n                    g[j]-=2;\n                    g[j+1]-=2;\n                    g[j+2]-=2;\n                }\n                if(j<8&&g[j]==1&&g[j+1]>0&&g[j+2]>0){\n                    g[j]--;\n                    g[j+1]--;\n                    g[j+2]--;\n                }\n                if(b[j]>=3)b[j]-=3;\n                if(j<8&&b[j]==2&&b[j+1]>1&&b[j+2]>1){\n                    b[j]-=2;\n                    b[j+1]-=2;\n                    b[j+2]-=2;\n                }\n                if(j<8&&b[j]==1&&b[j+1]>0&&b[j+2]>0){\n                    b[j]--;\n                    b[j+1]--;\n                    b[j+2]--;\n                }\n                if(r[j]>=3)r[j]-=3;\n                if(j<8&&g[j]==2&&r[j+1]>1&&r[j+2]>1){\n                    r[j]-=2;\n                    r[j+1]-=2;\n                    r[j+2]-=2;\n                }\n                if(j<8&&r[j]==1&&r[j+1]>0&&r[j+2]>0){\n                    r[j]--;\n                    r[j+1]--;\n                    r[j+2]--;\n                }\n                if(g[j]>0||b[j]>0||r[j]>0){\n                    ch = false;\n                    break;\n                }   \n            }\n            if(ch==true)System.out.println(1);\n            else System.out.println(0);\n            for(j=0;j<=9;j++){\n                g[j]=0;\n                b[j]=0;\n                r[j]=0;\n                num[j]=0;\n            }\n            ch=true;\n        }\n \n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\t\n\tboolean isSequenceNumber(int[] num) {\n\t\tint temp = num[0];\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\ttemp++;\n\t\t\tif(num[r] != temp) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tboolean isMatchNumber(int[] num) {\n\t\tint first = num[0];\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] != first) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tboolean isMatchCharacter(String[] str) {\n\t\tchar first = str[0].charAt(0);\n\t\tfor(int r = 0; r < str.length; r++) {\n\t\t\tif(str[r].charAt(0) != first) return(false);\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tboolean flag = true;\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int c = 0; c < 3; c++) {\n\t\t\t\tif(!((isSequenceNumber(num[c]) || isMatchNumber(num[c])) && isMatchCharacter(str[c]))) flag = false;\n\t\t\t}\n\t\t\tif(!flag) {\n\t\t\t\tflag = true;\n\t\t\t\tint[] counter = new int[3];\n\t\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(counter[0] != 3 || counter[1] != 3 || counter[2] != 3) flag = false;\n\t\t\t\tfor(int k = 0; k < 3; k++) {\n\t\t\t\t\tif(!((isSequenceNumber(num[k]) || isMatchNumber(num[k])))) flag = false;\n\t\t\t\t\tSystem.out.println(\"DEBUG:\" + flag);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\n\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t //????????°???????????????\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t \n\t\t\t //???????????´???\n\t\t\t for(int x = 0; x < mai; x++){\n\t\t\t\t \n\t\t      for(int y = 0; y < mai - 1; y++){\n\t\t        \t\n\t\t          if(hand_no[y] > hand_no[y + 1]){\n\t\t        \t  \n\t\t            int temp = hand_no[y];\n\t\t            hand_no[y] = hand_no[y + 1];\n\t\t            hand_no[y + 1] = temp;\n\t\t            \n\t\t            String temp2 = hand_mark[y];\n\t\t            hand_mark[y] = hand_mark[y + 1];\n\t\t            hand_mark[y + 1] = temp2;\n\t\t            \n\t\t          }\n\t\t        }\n\t\t\t }\n\t\t\t \n\t\t\t /*\n\t\t\t for(int i = 0; i < mai ; i++){\n\t\t\t\t System.out.print(hand_no[i]);\n\t\t\t }\n\t\t\t System.out.println();\n\t\t\t for(int j = 0; j < mai ; j++){\n\t\t\t\t System.out.print(hand_mark[j]);\n\t\t\t }\n\t\t\t System.out.println();\n\t\t\t */\n\t\t\t \n\t\t\t for(int i = 0; i < mai - 2; i++){\n\t\t\t\t \n\t\t\t\t for(int j = i + 1; j < mai - 1; j++){\n\t\t\t\t\t \n\t\t\t\t\t for(int k = j + 1; k < mai; k++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(hand_mark[i].equals(hand_mark[j]) && hand_mark[j].equals(hand_mark[k])){\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t //??????????????£????????????\n\t\t\t\t\t\t\t if(hand_no[i] + 1 == hand_no[j]  && hand_no[j] + 1 == hand_no[k]){\n\t\t\t\t\t\t\t\t if(hand_no[i] != 0 ){\n\t\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t\t\t hand_no[i] = 0;\n\t\t\t\t\t\t\t\t\t hand_no[j] = 0;\n\t\t\t\t\t\t\t\t\t hand_no[k] = 0;\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(hand_no[i] == hand_no[j] && hand_no[j]  == hand_no[k]){\n\t\t\t\t\t\t\t\t\t if(hand_no[i] != 0 ){\n\t\t\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t\t\t\t hand_no[i] = 0;\n\t\t\t\t\t\t\t\t\t\t hand_no[j] = 0;\n\t\t\t\t\t\t\t\t\t\t hand_no[k] = 0;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t }\n\t\t\t }\n\t\t\t\n\t\t\t\t \n\t\t\t\t //3?????????????????£???????????°???1??????????????????\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\t\t\t\t//????????°???????????????????????????\n\t\t\t\t ans = 0;\n\n\t\t }\n\t\tscan.close();\n\n\t }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str = scan.next();\n\t\t\t\tchar[] inpc = str.toCharArray();\n\t\t\t\tC[j*2][i] = inpc[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea=0;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\npublic class Main{\n\n\t/**\n\t * ?????????3???*2(frontnumber???rearColor)*3?????????==18 ????????\\????????????\n\t */\n\tprivate static final int TRIPLECARDSET = 18;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * for??????????????????????¨???????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTHREE = 3;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// private????£?????????\\?????????????????????????????§????????????\n\t\tTestCard tc = new TestCard();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t/**\n\t\t * ?????°?????????????????????????????????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t * @param transNum[]\n\t\t *            String??????tmpNum??????<??°????????±/>????????£?????????????´?\n\t\t * @param transColor[]\n\t\t *            String??????tmpNum??????<????????±/>????????£?????????????´?\n\t\t *\n\t\t */\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < set; cnt++) {\n\n\t\t\t// ????????????????´???´???\n\t\t\tArrayList<TestCard> cardArr = new ArrayList<TestCard>();\n\n\t\t\t// ??????????????\\???????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????\\???????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ???????????????????????????????????£??????????????????????????§?????????\n\t\t\ttc.setOnecardset(transNum.length + transColor.length);\n\n\t\t\t if (transNum.length > transColor.length) {\n\n\t\t\t\t/**\n\t\t\t\t * @param cntcardnumber\n\t\t\t\t *            ??????????????°????????°????????°??????\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tfor (int cntcardnumber = 0; cntcardnumber < transNum.length; cntcardnumber++) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ?????¶???????????????????????°?????????????????????????????´??????????????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t * ??????????¨???¨?????§???.equals()???.contains()????????¨????????????????????????????????´????????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\t\tif(cntcardnumber > transNum.length ){\n\t\t\t\t\t\t//???????????????????????¨?????¨?????????????????\\\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cnt]), ZERO));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cnt]), transColor[cnt]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t/**\n\t\t\t\t * @param cntcardcolor\n\t\t\t\t *            ????????????????????°????????°??????\n\t\t\t\t */\n\t\t\t\tfor (int cntcardcolor = 0; cntcardcolor < transColor.length; cntcardcolor++) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ?????¶??????????????????????????????????????°??????????????´??????????????????????????????\n\t\t\t\t\t * \t\t\t?????????????????????????????°?????????????????°?£???°????????§?????????????´??????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t * ???????????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t * ??????????¨???¨?????§???.equals()???.contains()????????¨????????????????????????????????´????????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t */\n\n\t\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\t\tif(cntcardcolor > transColor.length ){\n\t\t\t\t\t\t//??°???????????????????????¨?????¨?????????????????\\\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(ZERO), transColor[cnt]));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cnt]), transColor[cnt]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t\t// result????????????????????????????´???´???\n\t\t\t\tint result = playtheGame(cardArr);\n\t\t\t\t// ?????????????´?\n\t\t\t\tanswer.add(result);\n\n\t\t\t\t//??¢??¬????????????????????????????????§????????§?????????????\\?\n\t\t\t\tcardArr.removeAll(cardArr);\n\t\t}\n\n\t\t\t// for????????? ??????????????????????????????\n\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t\t// ???????????????\n\t\t\t\tSystem.out.println(answer.get(cnt));\n\t\t\t}\n\t}// main????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨\"0\"????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tpublic static int playtheGame(ArrayList<TestCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t/**\n\t\t * @Warnning\n\t\t */\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<TestCard>() {\n\t\t\t@Override\n\t\t\tpublic int compare(TestCard numA, TestCard numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialNumCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameNumCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *           1) .indexOf() ?????????????????????????????§????????£?????????????????????3?????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\tif (cardArr.get(cnt).equals(ZERO)) {\n\t\t\t\t// ?????\\???????????????????????°?????°??????\n\t\t\t\tcount++;\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\tif (count >= TRIPLECARDSET) {\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// playtheGame????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param card2\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n\tpublic static void sameNumCard(ArrayList<TestCard> cardArr) {\n\n\t\t// private????£?????????\\?????????????????????????????§????????????\n\t\tTestCard tc = new TestCard();\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < -ADDRESSPLUSTWO; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {\n\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).equals(cardArr.get(cnt3))\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).equals(cardArr.get(cnt3 + ADDRESSPLUSTWO))) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt2).equals(cardArr.get(cnt3 + ADDRESSPLUSONE))\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt3 + ADDRESSPLUSONE).equals(cardArr.get(cnt3 + ADDRESSPLUSTHREE))) {\n\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSONE, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTWO, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTHREE, (new TestCard(ZERO)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameNumCard????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n\tpublic static void serialNumCard(ArrayList<TestCard> cardArr) {\n\t\t// private????£?????????\\?????????????????????????????§????????????\n\t\tTestCard tc = new TestCard();\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t * @param tempNum\n\t\t *            String????????????????????°??????int???????????£???????????????????????¨????????°\n\t\t *\n\t\t */\n\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < tc.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {\n\n\t\t\t\t\ttc.setFrontnumber(cardArr.get(cnt3));\n\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\tif (cardArr.get(cnt1).equals((tc.getFrontnumber()-ADDRESSPLUSONE))\n\t\t\t\t\t\t\t&& cardArr.get(cnt1).equals((tc.getFrontnumber()-ADDRESSPLUSTWO))) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt2).equals(cardArr.get(cnt3 + ADDRESSPLUSONE))\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt3 + ADDRESSPLUSONE).equals(cardArr.get(cnt3 + ADDRESSPLUSTHREE))) {\n\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSONE, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTWO, (new TestCard(ZERO)));\n\t\t\t\t\t\t\tcardArr.set(cnt3 + ADDRESSPLUSTHREE, (new TestCard(ZERO)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialNumCard ????????????????????????\n\n}// RummyTest????????????\n\nclass TestCard {\n\t/**\n\t * int ??????????????°???\n\t */\n\tprivate static int onecardset;\n\n\t/**\n\t * int ????????????????????????????????\\????????????????????¢????£???¢??? 2???????¬?????????????????????¨??????\n\t */\n\tprivate static final int CARDPAGE = 2;\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°???????????°??¶????????????\n\t */\n\tprivate static int frontnumber;\n\n\t/**\n\t * String ???????????????????¨??????????????????????\n\t */\n\tprivate static String rearColor;\n\n\tpublic static int getOnecardset() {\n\t\treturn onecardset;\n\t}\n\n\tpublic void setFrontnumber(TestCard testCard) {\n\t\tTestCard.frontnumber= testCard.frontnumber;\n\t}\n\n\tpublic static int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic static void setFrontnumber(int frontnumber) {\n\t\tTestCard.frontnumber = frontnumber;\n\t}\n\n\tpublic static String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic static void setRearColor(String rearColor) {\n\t\tTestCard.rearColor = rearColor;\n\t}\n\n\tpublic static void setOnecardset(int onecardset) {\n\t\tTestCard.onecardset = onecardset;\n\t}\n\n\tpublic TestCard() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\n\tpublic TestCard(String tmp) {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t\trearColor = tmp;\n\t}\n\n\t/**\n\t *\n\t * @param transNum\n\t *            ???????????????????????????????????°???\n\t * @param transColor\n\t *            ????????????????????????????????????\n\t */\n\tpublic TestCard(int transNum, String transColor) {\n\t\t// ?????¬???int?????????????????????int???????????????\n\t\tfrontnumber = transNum;\n\t\t// ?????¬???String?????????????????????String???????????????\n\t\trearColor = transColor;\n\t}\n}// Card?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    boolean checkNum(Set num1, Set num2, Set num3){\n        int i,j;\n        i = num3.num - num2.num;\n        j = num2.num - num1.num;\n        if(((i == 1) && (j == 1)) || ((i == 0) && (j == 0))){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\nclass DataComparator implements java.util.Comparator<Set>{\n    public int compare(Set o1, Set o2){\n        if(o1.color == o2.color){\n            return o1.num - o2.num;\n        }else{\n            return o1.color - o2.color;\n        }\n    }\n}\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n    Set[] card = new Set[9];\n\n    for(int i=0;i<n;i++){\n      for(int j=0;j<9;j++){ //input_numbers\n        card[j] = new Set();\n        card[j].num = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      for(int l=0;l<9;l++){  //check_color\n        switch(ch[l]){\n          case \"R\": card[l].color = 1;\n                    break;\n          case \"G\": card[l].color = 2;\n                    break;\n          case \"B\": card[l].color = 3;\n                    break;\n          default : break;\n        }\n      }\n      Arrays.sort(card, new DataComparator());\n\n/*    sort degug\n      for(int k=0;k<9;k++){\n          System.out.print(card[k].num + \" \");\n      }\n      System.out.println();\n      for(int k=0;k<9;k++){\n          System.out.print(card[k].color + \" \");\n      }\n      System.out.println();\n*/\n\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n\n      if(check1.sameColor(card[0],card[1],card[2])){\n          if(check1.checkNum(card[0],card[1],card[2])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameColor(card[3],card[4],card[5])){\n          if(check2.checkNum(card[3],card[4],card[5])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameColor(card[6],card[7],card[8])){\n          if(check3.checkNum(card[6],card[7],card[8])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    }//end_of_while\n  }//end_of_main\n}//end_of_Rummy"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\n/**\n * ??????????????¬???\n *\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLECARDSET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\t//private static final int ADDRESSPLUSTHREE = 3;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\n\t\tSystem.out.println(\"Test Start\");\n\t\t//test\n\t\tSystem.out.println(\"test : ????????\\?????????\");\n\n\t\t// ????????????????´???´???\n\t\tList<TestCard> cardArr = new ArrayList<TestCard>();\n\n\t\t//???????????????????????\\????????????????????£?¨?\n\t\tTestCard tc = new TestCard();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < set; cnt++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t//???????????????????????£???\n\t\t\t if (transNum.length > transColor.length) {\n\n\t\t\t\t/**\n\t\t\t\t * ???????????????????????????????????£????????????????????????????????§?????????\n\t\t\t\t */\n\t\t\t\t tc.setOnecardset(transNum.length);\n\n\t\t\t\t/**\n\t\t\t\t * @param cntcardnumber\n\t\t\t\t *            ??????????????°????????°????????°??????\n\t\t\t\t */\n\t\t\t\tfor (int cntcardnumber = ADDRESSPLUSZERO; cntcardnumber < tc.getOnecardset(); cntcardnumber++) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ?????¶?????????????????????\n\t\t\t\t\t * ????????°?????????????????????????????´???\n\t\t\t\t\t * ???????????????????????°??????????????´???????????????\n\t\t\t\t\t *\n\t\t\t\t\t * ?????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// ??°???, ?????????????????????\n\n\t\t\t\t\tif (cntcardnumber > transColor.length) {\n\t\t\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cntcardnumber]), ZERO));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\n\t\t\t\t\t\t// test\n\t\t\t\t\t\t// tc.setFrontnumber(Integer.parseInt(transNum[cntcardnumber]));\n\t\t\t\t\t\t// tc.setRearColor(transColor[cntcardnumber]);\n\t\t\t\t\t\tcardArr.add(new TestCard(Integer.parseInt(transNum[cntcardnumber]),transColor[cntcardnumber]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????????????£???\n\t\t\t} else {\n\n\t\t\t\t/**\n\t\t\t\t * ???????????????????????????????????£????????????????????????????????§?????????\n\t\t\t\t */\n\t\t\t\ttc.setOnecardset(transColor.length);\n\n\t\t\t\t/**\n\t\t\t\t * @param cntcardcolor\n\t\t\t\t *            ????????????????????°????????°??????\n\t\t\t\t */\n\t\t\t\tfor (int cntcardcolor = ADDRESSPLUSZERO; cntcardcolor < tc.getOnecardset(); cntcardcolor++) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ?????¶??????????????????????????????????????°??????????????´??????????????????????????????\n\t\t\t\t\t * \t\t\t?????????????????????????????°?????????????????°?£???°????????§?????????????´??????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t * ???????????????????????¨?????¨?????????????????\\???\n\t\t\t\t\t * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// ??°???, ?????????????????????\n\t\t\t\t\tif (cntcardcolor > transNum.length) {\n\t\t\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\t\t\tcardArr.add(new TestCard(ADDRESSPLUSZERO, transColor[cntcardcolor]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t\t\t//test\n\t\t\t\t\t\ttc.setFrontnumber(Integer.parseInt(transNum[cntcardcolor]));\n\t\t\t\t\t\ttc.setRearColor(transColor[cntcardcolor]);\n\t\t\t\t\t\tcardArr.add(new TestCard(tc.getFrontnumber(),tc.getRearColor()));\n\n\t\t\t\t\t\t//test\n\t\t\t\t\t\t//cardArr.set(cntcardcolor, new TestCard(TestCard.getFrontnumber(),TestCard.getRearColor()));\n\n\t\t\t\t\t\t//test\n\t\t\t\t\t\tSystem.out.println(cntcardcolor+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(cntcardcolor).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cntcardcolor).getRearColor()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// test\n\t\t\tSystem.out.println(\"test : ???????´¢????????????\");\n\t\t\tSystem.out.println(\"????????????????????????????????????????????????????????????????????????\");\n\n\t\t\t//test\n\t\t\tfor (int tmp = ADDRESSPLUSZERO; tmp < cardArr.size(); tmp++) {\n\t\t\t\tSystem.out.println(\"********** after save\");\n\t\t\t\tSystem.out.println(\"ARRAYLIST.LENGTH : \" + cardArr.size());\n\t\t\t\tSystem.out.println(tmp+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(tmp).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(tmp).getRearColor()));\n\t\t\t}\n\t\t\tSystem.out.println();\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = playtheGame(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tpublic static int playtheGame(List<TestCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t//test\n\t\t\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\t\t\t\t\tSystem.out.println(\"********** before sort\");\n\t\t\t\t\tSystem.out.println(cnt+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(cnt).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt).getRearColor()));\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\n\t\t/**\n\t\t * @Warnning sort();\n\t\t */\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<TestCard>() {\n\t\t\t@Override\n\t\t\tpublic int compare(TestCard numA, TestCard numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t//test\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\t\t\tSystem.out.println(\"********** after sort\");\n\t\t\tSystem.out.println(cnt+\" : \"+\"ArrNum : \"+((Integer)cardArr.get(cnt).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt).getRearColor()));\n\t\t}\n\t\tSystem.out.println();\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialNumCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameNumCard(cardArr);\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *\t???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????????????£?????????\n\t\t\t */\n\t\t\tif (((String)cardArr.get(cnt).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t//?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLECARDSET) {//?????§??????????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}// playtheGame????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param card2\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n\tpublic static void sameNumCard(List<TestCard> cardArr) {\n\t\t//???????????????????????\\????????????????????£?¨?\n\t\tTestCard tc = new TestCard();\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < tc.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {\n\n\t\t\t\t\t// (1)????????°???????????????????????????\n\t\t\t\t\tif (((Integer) cardArr.get(cnt1).getFrontnumber())\n\t\t\t\t\t\t\t.equals(((Integer) cardArr.get(cnt2).getFrontnumber()))\n\t\t\t\t\t\t\t&& ((Integer) cardArr.get(cnt2).getFrontnumber())\n\t\t\t\t\t\t\t\t\t.equals(((Integer) cardArr.get(cnt3).getFrontnumber()))) {\n\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (((String) cardArr.get(cnt1).getRearColor())\n\t\t\t\t\t\t\t\t.equals(((String) cardArr.get(cnt2).getRearColor()))\n\t\t\t\t\t\t\t\t&& ((String) cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t\t\t.equals(((String) cardArr.get(cnt3).getRearColor()))) {\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!((String) cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String) cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String) cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n\n\t\t\t\t\t\t\t\t//test\n\t\t\t\t\t\t\t\tSystem.out.println(\"????????????????????????????????????????????????????????????????????????????????????????????????????????????????????´\");\n\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt1) : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt2) :  \"+((Integer)cardArr.get(cnt2).getFrontnumber())+\" \"+((String)cardArr.get(cnt2).getRearColor()));\n\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt3) :  \"+((Integer)cardArr.get(cnt3).getFrontnumber())+\" \"+((String)cardArr.get(cnt3).getRearColor()));\n\t\t\t\t\t\t\t\tSystem.out.println();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//test\n\t\t\tSystem.out.println(\"????????????????????????????????????????????????????????????????????????????????????????????????????????????????????´\");\n\t\t\tSystem.out.println(\"ArrNum : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\tSystem.out.println();\n\n\t\t}\n\t}// sameNumCard????????????????????????\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param card\n\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t */\n\tpublic static void serialNumCard(List<TestCard> cardArr) {\n\t\t//???????????????????????\\????????????????????£?¨?\n\t\tTestCard tc = new TestCard();\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < tc.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\t// ????????????????????¨???????????????????????????????????????????????????\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {\n\n\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\tif (((Integer) cardArr.get(cnt1).getFrontnumber())\n\t\t\t\t\t\t\t.equals(((Integer) cardArr.get(cnt2).getFrontnumber() - 1))\n\t\t\t\t\t\t\t&& ((Integer) cardArr.get(cnt1).getFrontnumber())\n\t\t\t\t\t\t\t\t\t.equals(((Integer) cardArr.get(cnt3).getFrontnumber() - 2))) {\n\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (((String) cardArr.get(cnt1).getRearColor())\n\t\t\t\t\t\t\t\t.equals(((String) cardArr.get(cnt2).getRearColor()))\n\t\t\t\t\t\t\t\t&& ((String) cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t\t\t.equals(((String) cardArr.get(cnt3).getRearColor()))) {\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!((String) cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String) cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !((String) cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.set(cnt1, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt2, (new TestCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.set(cnt3, (new TestCard(ZERO)));\n\n\t\t\t\t\t\t\t\t//test\n\t\t\t\t\t\t\t\tSystem.out.println(\"?????????????????????????????????????????????????????????????????????????????£?¶????????????????????????´\");\n\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt1) : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt2) :  \"+((Integer)cardArr.get(cnt2).getFrontnumber())+\" \"+((String)cardArr.get(cnt2).getRearColor()));\n\t\t\t\t\t\t\t\tSystem.out.println(\"Arr(cnt3) :  \"+((Integer)cardArr.get(cnt3).getFrontnumber())+\" \"+((String)cardArr.get(cnt3).getRearColor()));\n\t\t\t\t\t\t\t\tSystem.out.println();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//test\n\t\t\tSystem.out.println(\"?????????????????????????????????????????????????????????????????????????????£?¶????????????????????????´\");\n\t\t\tSystem.out.println(\"ArrNum : \"+((Integer)cardArr.get(cnt1).getFrontnumber())+\" , \"+\"ArrColor : \"+((String)cardArr.get(cnt1).getRearColor()));\n\t\t\tSystem.out.println();\n\t\t}\n\t}// serialNumCard ????????????????????????\n\n}// RummyTest????????????\n\n\n/**\n * ?????????Card\n *\n * <pre>\n * ????????????????????????????????£????????¨???????????????????????????\n * ??????????????????????????§???\n *\n * 1. ?????????????????°??????????¨????????????¶?????????\n * 2. ????????§????±???¨??§???????????§????????????\n * 3. javadoc???????????????????????¨\n * 4. ??\\???????????????????????????????????????????????????\n * </pre>\n *\n * @author ?????????????????§???\n *\n */\nclass TestCard {\n\t/**\n\t * int ??????????????°??????????????\\????????±????????\\??????\n\t */\n\tprivate  int onecardset;\n\n\t/**\n\t * int ????????????????????????????????°????????¢????£???¢???\n\t * 2???????¬?????????????????????¨??????\n\t */\n\t//private static final int CARDPAGE = 2;\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶??????????????????????????\\????????±????????\\??????\n\t */\n\tprivate  int frontnumber;\n\n\t/**\n\t * String ?????????????????????????¨????????????????????????????????????\\????????±????????\\??????\n\t */\n\tprivate  String rearColor;\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param onecardset ????????????????????°???????´?\n\t */\n\tpublic  void setOnecardset(int onecardset) {\n\t\tthis.onecardset = onecardset;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return???????´??????????????????????\n\t */\n\tpublic  int getOnecardset() {\n\t\treturn onecardset;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic  void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontcolorTC int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic  void setFrontnumber(TestCard frontcolorTC) {\n\t\tfrontnumber = frontcolorTC.frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return???int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic  int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColorTC String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic  void setRearColor(TestCard rearColorTC) {\n\t\tthis.rearColor = rearColorTC.rearColor;\n\t}\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic  void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t *private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic  String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic TestCard() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO ????????° ZERO\n\t */\n\tpublic TestCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ???????????????????????°??????????????´???, ???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param tmp???????????° ADDRESSPLUSSZERO???????????¶????????????int???????????±???\n\t */\n\tpublic TestCard(TestCard tmp) {\n\t\tfrontnumber = tmp.frontnumber;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param transNum\n\t *            ???????????????????????????????????°???\n\t * @param transColor\n\t *            ????????????????????????????????????\n\t */\n\tpublic TestCard(int transNum, String transColor) {\n\t\t// ?????¬???int?????????????????????int???????????????\n\t\tfrontnumber = transNum;\n\t\t// ?????¬???String?????????????????????String???????????????\n\t\trearColor = transColor;\n\t}\n}// ??????????????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\t\t \n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\t\t \n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"}; \n\t\t \n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\t\t \n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\t\t \n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\t\t \n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\t\t \n\t\t\t //1??????????????????hand???????´?\n\t\t\t for(int  i = 0; i < 2; i++){\n\t\t\t\t for(int j = 0; j < mai; j++){\n\t\t\t\t\t if(i == 0){\n\t\t\t\t\t\t hand_no[j] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[j] = scan.next();\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t }\t\t\t \n\t\t\t \n\t\t\t //???????????¶?????????\n\t\t\t for(int  i = 0; i < 3; i++){\n\t\t\t\t \n\t\t\t\t //????\\???¨??????????????????\n\t\t\t\tfor(int j = 0; j < mai; j++){\n\t\t\t\t\t work[j] = 0;\n\t\t\t\t}\n\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t int work_cnt = 0;\n\t\t\t\t \n\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t for(int j = 0; j < mai; j++){\n\t\t\t\t\t \n\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t if(color[i].equals(hand_mark[j])){\n\t\t\t\t\t\t \n\t\t\t\t\t\twork[work_cnt] = hand_no[j];\n\t\t\t\t\t\t\n\t\t\t\t\t\t System.out.print(work[work_cnt++]);\n\t\t\t\t\t\t \n\t\t\t\t\t }\n\t\t\t\t\t \n\t\t\t\t }\n\t\t\t\t\t \n\t\t\t\t System.out.println();\n\t\t\t }\n\t\t\t System.out.println();\n\t\t\t \n\t\t }\n\t\tscan.close(); \n\t\t \n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\n\t\tboolean flg1 = false;\n\t\tboolean flg2 = false;\n\t\tboolean flg3 = false;\n\t\t\n\t\tint num1 = 0;\n\t\tint num2 = 0;\n\t\tint num3 = 0;\n\t\tint num4 = 0;\n\t\tint num5 = 0;\n\t\tint num6 = 0;\n\t\tint num7 = 0;\n\t\tint num8 = 0;\n\t\tint num9 = 0;\n\n\t\tStringBuilder sb = new StringBuilder();\n\t\tList<Integer> list_number = new ArrayList<Integer>();\n\t\tList<String> list_color = new ArrayList<String>();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_number.add(scan.nextInt());\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tlist_color.add(scan.next());\n\t\t\t}\n\n\t\t\tint r = 0;\n\t\t\tint g = 0;\n\t\t\tint b = 0;\n\n\t\t\t// ????????°????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tswitch (list_color.get(count1)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t// ??????????????¨???????????????\n\t\t\tList<Integer> list_r = new ArrayList<Integer>();\n\t\t\tList<Integer> list_g = new ArrayList<Integer>();\n\t\t\tList<Integer> list_b = new ArrayList<Integer>();\n\n\t\t\t// 9???????????????????????\\?????????????????????\n\t\t\tfor (int count2 = 0; count2 < 9; count2++) {\n\t\t\t\tswitch (list_color.get(count2)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tlist_r.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"G\":\n\t\t\t\t\tlist_g.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"B\":\n\t\t\t\t\tlist_b.add(list_number.get(count2));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tCollections.sort(list_r);\n\t\t\tCollections.sort(list_g);\n\t\t\tCollections.sort(list_b);\n\n\t\t\t// ???????????????????????°???????????¨???????????????\n\t\t\t//if (r > 0) {\n\n\t\t\t\t// ???????????????????????? ??????????????°??????????????\\???????????? ????????£???????????£???????????°???????????????\n\t\t\t\t// ???????????§????????¨??????????????????????????????0???????????????\n\t\t\t\t// -------list_r?????????????????????-----------------------------------------------\n\t\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t\tnum1 = 0;\n\t\t\t\tnum2 = 0;\n\t\t\t\tnum3 = 0;\n\t\t\t\tnum4 = 0;\n\t\t\t\tnum5 = 0;\n\t\t\t\tnum6 = 0;\n\t\t\t\tnum7 = 0;\n\t\t\t\tnum8 = 0;\n\t\t\t\tnum9 = 0;\n\t\t\t\t// ????????°????????????????????????????¢????\n\t\t\t\tfor (int count1 = 0; count1 < list_r.size(); count1++) {\n\t\t\t\t\tswitch (list_r.get(count1)) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnum1++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnum2++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnum3++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnum4++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnum5++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnum6++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnum7++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnum8++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnum9++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ????????§3?????????????????????\n\t\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\t\tnum1--;\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t\tnum9--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t\t// System.out.println(\"?????????????????????\");\n\t\t\t\t\t\tflg1 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// -------list_r????????????????????§-----------------------------------------------\n\t\t\t//}\n\t\t\t// ???????????????????????°???????????¨???????????????\n\t\t\t//if (g > 0) {\n\t\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t\tnum1 = 0;\n\t\t\t\tnum2 = 0;\n\t\t\t\tnum3 = 0;\n\t\t\t\tnum4 = 0;\n\t\t\t\tnum5 = 0;\n\t\t\t\tnum6 = 0;\n\t\t\t\tnum7 = 0;\n\t\t\t\tnum8 = 0;\n\t\t\t\tnum9 = 0;\n\t\t\t\t// ????????°????????????????????????????¢????\n\t\t\t\tfor (int count1 = 0; count1 < list_g.size(); count1++) {\n\t\t\t\t\tswitch (list_g.get(count1)) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnum1++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnum2++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnum3++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnum4++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnum5++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnum6++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnum7++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnum8++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnum9++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ????????§3?????????????????????\n\t\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\t\tnum1--;\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t\tnum9--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t\tflg2 = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// -------list_g?????????????????????-----------------------------------------------\n\t\t\t//}\n\t\t\t// ???????????????????????°???????????¨???????????????\n\t\t\t//if (b > 0) {\n\n\t\t\t\t// -------list_b?????????????????????-----------------------------------------------\n\t\t\t\t// ??????????????°??????????????\\????????????\n\t\t\t\tnum1 = 0;\n\t\t\t\tnum2 = 0;\n\t\t\t\tnum3 = 0;\n\t\t\t\tnum4 = 0;\n\t\t\t\tnum5 = 0;\n\t\t\t\tnum6 = 0;\n\t\t\t\tnum7 = 0;\n\t\t\t\tnum8 = 0;\n\t\t\t\tnum9 = 0;\n\t\t\t\t// ????????°????????????????????????????¢????\n\t\t\t\tfor (int count1 = 0; count1 < list_b.size(); count1++) {\n\t\t\t\t\tswitch (list_b.get(count1)) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tnum1++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tnum2++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tnum3++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tnum4++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tnum5++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tnum6++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tnum7++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tnum8++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tnum9++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t// ????????§3?????????????????????\n\t\t\t\tfor (int count4 = 0; count4 < 3; count4++) {\n\n\t\t\t\t\t// ??°???num1~9??§??????\n\t\t\t\t\t// ????????\\?????????num???-3?????????\n\t\t\t\t\tif (num1 >= 3) {\n\t\t\t\t\t\tnum1 = num1 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num2 >= 3) {\n\t\t\t\t\t\tnum2 = num2 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num3 >= 3) {\n\t\t\t\t\t\tnum3 = num3 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num4 >= 3) {\n\t\t\t\t\t\tnum4 = num4 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num5 >= 3) {\n\t\t\t\t\t\tnum5 = num5 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num6 >= 3) {\n\t\t\t\t\t\tnum6 = num6 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num7 >= 3) {\n\t\t\t\t\t\tnum7 = num7 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num8 >= 3) {\n\t\t\t\t\t\tnum8 = num8 - 3;\n\t\t\t\t\t}\n\t\t\t\t\tif (num9 >= 3) {\n\t\t\t\t\t\tnum9 = num9 - 3;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\t\tif ((num1 >= 1) & (num2 >= 1) & (num3 >= 1)) {\n\t\t\t\t\t\tnum1--;\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num2 >= 1) & (num3 >= 1) & (num4 >= 1)) {\n\t\t\t\t\t\tnum2--;\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num3 >= 1) & (num4 >= 1) & (num5 >= 1)) {\n\t\t\t\t\t\tnum3--;\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num4 >= 1) & (num5 >= 1) & (num6 >= 1)) {\n\t\t\t\t\t\tnum4--;\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num5 >= 1) & (num6 >= 1) & (num7 >= 1)) {\n\t\t\t\t\t\tnum5--;\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num6 >= 1) & (num7 >= 1) & (num8 >= 1)) {\n\t\t\t\t\t\tnum6--;\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((num7 >= 1) & (num8 >= 1) & (num9 >= 1)) {\n\t\t\t\t\t\tnum7--;\n\t\t\t\t\t\tnum8--;\n\t\t\t\t\t\tnum9--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// ??¨????????????0????????£?????¨???true??¨?????????\n\t\t\t\t\tif ((num1 == 0) & (num2 == 0) & (num3 == 0) & (num4 == 0) & (num5 == 0) & (num6 == 0) & (num7 == 0)\n\t\t\t\t\t\t\t& (num8 == 0) & (num9 == 0)) {\n\t\t\t\t\t\tflg3 = true;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// -------list_b????????????????????§-----------------------------------------------\n\t\t\t//}\n\t\t\t// ?????????\n\t\t\tlist_number.clear();\n\t\t\tlist_color.clear();\n\t\t\tlist_r.clear();\n\t\t\tlist_g.clear();\n\t\t\tlist_b.clear();\n\t\t\tif (flg1 & flg2 & flg3) {\n\t\t\t\tsb.append(\"1\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t\tflg1 = false;\n\t\t\t\tflg2 = false;\n\t\t\t\tflg3 = false;\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t\tflg1 = false;\n\t\t\t\tflg2 = false;\n\t\t\t\tflg3 = false;\n\t\t\t}\n\n\t\t}\n\t\tSystem.out.print(new String(sb));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args){\n\tScanner sc = new Scanner(System.in);\n\tint T = sc.nextInt();\n\tint[] hn;\n\tchar[] hc;\n\tint d, r=0, b=0, g=0, rf=0, bf=0, gf=0, n, rcount=0, bcount=0, gcount=0, count=0;\n\tchar c;\n\thn = new int[9];\n\thc = new char[9];\n\tfor(int i=0;i<T;i++){\n\t    for(int j=0;j<9;j++) hn[j] = sc.nextInt();\n\t    for(int j=0;j<9;j++){\n\t\tString s = sc.next();\n\t\thc[j] = s.charAt(0);\n\t    }\n\t    for(int j=0;j<9;j++){\n\t\tfor(int k=0;k<8-j;k++){\n\t\t    if(hn[k]>hn[k+1]){\n\t\t\td=hn[k]; hn[k]=hn[k+1]; hn[k+1]=d;\n\t\t\tc=hc[k]; hc[k]=hc[k+1]; hc[k+1]=c;\n\t\t    }\n\t\t}\n\t    }\n\t    for(int j=0;j<9;j++){\n\t\tif(hc[j]=='R'){\n\t\t    n = hn[j]-r;\n\t\t    if(n==0){\n\t\t\tif(rf!=1) rcount=1;\n\t\t\trcount++;\n\t\t\trf=1;\n\t\t    }else if(n==1){\n\t\t\tif(rf!=2) rcount=1;\n\t\t\trcount++;\n\t\t\trf=2;\n\t\t    }else{\n\t\t\trcount=0;\n\t\t\trf=0;\n\t\t    }\n\t\t    if(rcount==3){\n\t\t\tcount++;\n\t\t\trcount=0;\n\t\t    }\n\t\t    r=hn[j];\n\t\t}else if(hc[j]=='B'){\n\t\t    n = hn[j]-b;\n\t\t    if(n==0){\n\t\t\tif(bf!=1) bcount=1;\n\t\t\tbcount++;\n\t\t\tbf=1;\n\t\t    }else if(n==1){\n\t\t\tif(bf!=2) bcount=1;\n\t\t\tbcount++;\n\t\t\tbf=2;\n\t\t    }else{\n\t\t\tbcount=0;\n\t\t\tbf=0;\n\t\t    }\n\t\t    if(bcount==3){\n\t\t\tcount++;\n\t\t\tbcount=0;\n\t\t    }\n\t\t    b=hn[j];\n\t\t}else if(hc[j]=='G'){\n\t\t    n = hn[j]-g;\n\t\t    if(n==0){\n\t\t\tif(gf!=1) gcount=1;\n\t\t\tgcount++;\n\t\t\tgf=1;\n\t\t    }else if(n==1){\n\t\t\tif(gf!=2) gcount=1;\n\t\t\tgcount++;\n\t\t\tgf=2;\n\t\t    }else{\n\t\t\tgcount=0;\n\t\t\tgf=0;\n\t\t    }\n\t\t    if(gcount==3){\n\t\t\tcount++;\n\t\t\tgcount=0;\n\t\t    }\n\t\t    g=hn[j];\n\t\t}\n\t    }\n\t    if(count==3) System.out.println(\"1\");\n\t    else System.out.println(\"0\");\n\t    rf=0; bf=0; gf=0; rcount=0; bcount=0; gcount=0; count=0;\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tIN:for(int i = 0; i < t; i++) {\n\t\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\t\tint[] list = new int[9];\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tlist[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tString in = sc.next();\n\t\t\t\tif(in.equals(\"R\")) R.add(list[j]);\n\t\t\t\tif(in.equals(\"G\")) G.add(list[j]);\n\t\t\t\tif(in.equals(\"B\")) B.add(list[j]);\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tboolean A1 = true;\n\t\t\t\n\t\t\tCollections.sort(R);\n\t\t\tCollections.sort(G);\n\t\t\tCollections.sort(B);\n\t\t\tfor(int j = 0; j < R.size(); j++) {\n\t\t\t\tA1 = true;\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= R.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(R.get(k) != R.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tR.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int j = 0; j < G.size(); j++) {\n\t\t\t\tA1 = true;\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= G.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(G.get(k) != G.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tG.remove(j);\n\t\t\t\t\tj -= 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int j = 0; j < B.size(); j++) {\n\t\t\t\tA1 = true;\n\t\t\t\tfor(int k = j; k < j + 2; k++) {\n\t\t\t\t\tif(k+1 >= B.size()) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(B.get(k) != B.get(k+1)) {\n\t\t\t\t\t\tA1 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(A1) {\n\n\t\t\t\t\tj += 2;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < R.size(); j++) {\n\t\t\t\tif(R.contains(R.get(j)+1) && R.contains(R.get(j) + 2)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tR.remove(new Integer(R.get(j)+2));\n\t\t\t\t\tR.remove(new Integer(R.get(j)+1));\n\t\t\t\t\tR.remove(new Integer(R.get(j)));\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < G.size(); j++) {\n\t\t\t\tif(G.contains(G.get(j)+1) && G.contains(G.get(j) + 2)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tG.remove(new Integer(G.get(j)+2));\n\t\t\t\t\tG.remove(new Integer(G.get(j)+1));\n\t\t\t\t\tG.remove(new Integer(G.get(j)));\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < B.size(); j++) {\n\t\t\t\tif(B.contains(B.get(j) + 1) && B.contains(B.get(j) + 2)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tB.remove(new Integer(B.get(j)+2));\n\t\t\t\t\tB.remove(new Integer(B.get(j)+1));\n\t\t\t\t\tB.remove(new Integer(B.get(j)));\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t\tif(count == 3) {\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\tScanner scan = new Scanner(System.in);\n\n\t\t//??????????????°?????????\n\t\tint num = scan.nextInt();\n\n\t\t//??????????????±??????????????????????????°\n\t\tint[][] card= new int[2][9];\n\n\n\t\tfor(int k = 0; k < num; k++){\n\n\t\t\tfor(int j = 0; j < 2; j++){\n\t\t\t\tfor(int i = 0; i < 9; i++){\n\n\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\tcard[j][i] = scan.nextInt();\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tString color =scan.next();\n\t\t\t\t\t\tint intColor = 0;\n\t\t\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\t\t\tintColor = 11;\n\t\t\t\t\t\t}else if(\"G\".equals(color)){\n\t\t\t\t\t\t\tintColor = 12;\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tintColor = 13;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcard[j][i] = intColor;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tCard insCard = new Card();\n\t\t\tinsCard.setCard(card);\n\n\t\t\t//?????????????????????????????????\n\t\t\tinsCard.sort(card);\n\n\t\t\tcard = insCard.getCard();\n\n\t\t\tfor(int j = 0; j < 2; j++){\n\n\t\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\t//System.out.print(card[j][i] +  \" \");\n\t\t\t\t}\n\t\t\t\t//System.out.println();\n\t\t\t}\n\t\t\t//System.out.println();\n\n\n\t\t\t//????????????????????????\n\t\t\tint intCount = 0;\n\t\t\tintCount = insCard.win(card);\n\t\t\t//System.out.println(\"intCount: \" + intCount );\n\n\t\t\tif(3 <= intCount){\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\n\n\n\t}//Main??????\n\n\tstatic class Card {\n\n\t\t//?????£?????????\n\t\t//??????????????±??????????????????????????°\n\t\tprivate int[][] card = new int[2][9];\n\n\t\t//?????????????????????\n\t\tCard(){\n\n\t\t}\n\n\n\t\tpublic int[][] getCard() {\n\t\t    return card;\n\t\t}\n\n\t\t/**\n\t\t * card????¨????????????????\n\t\t * @param card card\n\t\t */\n\t\tpublic void setCard(int[][] card) {\n\t\t    this.card = card;\n\t\t}\n\n\t\t//?????????????????????(?°??????????????????????)\n\t\tpublic void sort(int[][] card){\n\n\t\t\t//?¨???????????????¨???????????????\n\t\t\t//??????????????????????????????\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++ ){\n\n\t\t\t\t\tif(card[1][j] > card[1][j+1]){\n\t\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\t\tcard[1][j] = card[1][j+1];\n\t\t\t\t\t\tcard[1][j+1] = temp;\n\t\t\t\t\t\t//??°????????\\????????????\n\t\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//?????????????°??????????????????°???????°?????????´?????\\?????????\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++){\n\t\t\t\t\t//??£????????????????????????????????????????????°????????\\????????????\n\t\t\t\t\tif(card[1][j] == card[1][j+1] && card[0][j] > card[0][j+1]){\n\n\t\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp;\n\t\t\t\t\t\t//????????\\???????????????\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tpublic int win(int[][] card){\n\n\t\t\tboolean isWin = false;\n\t\t\t//???????????¶???????????????????????????????????°\n\t\t\tint intCount = 0;\n\t\t\t//???????????°????????????????????°\n\t\t\tint i = 0;\n\t\t\tfor(i = 0; i < 7; i++){\n\n\t\t\t\tif(card[1][i] == card[1][i+1] && card[1][i+1] == card[1][i+2]){\n\n\t\t\t\t\tif(card[0][i] == card[0][i+1] && card[0][i+1] == card[0][i+2]){\n\t\t\t\t\t\t//???????????????????????????????????\\??????\n\t\t\t\t\t\ti = i+2;\n\t\t\t\t\t\tintCount++;\n\t\t\t\t\t}else if(card[0][i] == card[0][i+1]-1 && card[0][i+1] == card[0][i+2]-1){\n\t\t\t\t\t\t//???????????????????????????????????\\??????\n\t\t\t\t\t\ti = i+2;\n\t\t\t\t\t\tintCount++;\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn intCount;\n\t\t\t//System.out.println(\"intCount:\" + intCount);\n\t\t}\n\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\t// 答えの格納場所\n\t\tArrayList<Integer> intAryAnswer = new ArrayList<Integer>();\n\n\t\t// 1行目を取得\n\t\ttry {\n\t\t\tBufferedReader insBR = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t\tString strNum = insBR.readLine();\n\n\t\t\t// DataSetNumは何回判定するか\n\t\t\tint DataSetNum = Integer.parseInt(strNum);\n\n\t\t\t//判断する回数まわす\n\t\t\tfor (int i = 0; i < DataSetNum; i++) {\n\n\t\t\t\t//カードの数字とシンボルを取得\n\t\t\t\tString strNumLine = insBR.readLine();\n\t\t\t\tString strSymbolLine = insBR.readLine();\n\n\t\t\t\t//人クラスを作成　数字とシンボルを引数に\n\t\t\t\tPlayer player = new Player(strNumLine, strSymbolLine);\n\n\t\t\t\t//勝利条件に満たせば1　満たさなければ0\n\t\t\t\tint intJugmet = player.Judgment();\n\n\t\t\t\t//答えを格納\n\t\t\t\tintAryAnswer.add(intJugmet);\n\n\t\t\t}\n\n\t\t\t// 答えが何個あるか取得\n\t\t\tint intSize = intAryAnswer.size();\n\n\t\t\t// 出力\n\t\t\tfor (int i = 0; i < intSize; i++) {\n\t\t\t\tSystem.out.println(intAryAnswer.get(i));\n\t\t\t}\n\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\n\n\t}\n\n\t/**\n\t * プレイヤー\n\t *\n\t */\n\tpublic static class Player{\n\n\n\t\t/**\n\t\t * カードR\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n\t\tprivate int[] CardR = new int[9];\n\n\t\t/**\n\t\t * カードG\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n\t\tprivate int[] CardG = new int[9];\n\n\t\t/**\n\t\t * カードB\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n\t\tprivate int[] CardB = new int[9];\n\n\t\t/**\n\t\t * 引数を受け取り　フィールド値に格納する\n\t\t * @param strNumLine　カードの数字の羅列　例:1 2 3 4 5 6 7 8 9\n\t\t * @param strSymbolLine　カードのシンボルの羅列 例:R R R G G G B B B\n\t\t */\n\t\tPlayer(String strNumLine, String strSymbolLine) {\n\n\t\t\t// 分解\n\t\t\tString[] strAryNum = strNumLine.split(\" \");\n\n\t\t\tString[] strArySymbol = strSymbolLine.split(\" \");\n\n\t\t\tint intNum = 0;\n\n\t\t\tint intR = 0;\n\n\t\t\tint intG = 0;\n\n\t\t\tint intB = 0;\n\n\t\t\t//分解したものを振り分ける\n\t\t\tfor(int i = 0; i < strAryNum.length; i++) {\n\n\t\t\t\t//CardRとCardGとCardBを合わせて9枚になる\n\t\t\t\tif(strArySymbol[i].equals(\"R\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n\t\t\t\t\t CardR[intR] = intNum;\n\n\t\t\t\t\t intR++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"G\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n\t\t\t\t\t CardG[intG] = intNum;\n\n\t\t\t\t\t intG++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"B\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n\t\t\t\t\t CardB[intB] = intNum;\n\n\t\t\t\t\t intB++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\t/**\n\t\t * 勝利条件を判定する\n\t\t * @return intAnswer 勝利なら1　勝利に満たさないなら0\n\t\t */\n\t\tint Judgment() {\n\t\t\t\n\t\t\t//答えを0にしておく\n\t\t\tint intAnswer = 0;\n\t\t\t\n\t\t\t//カードを昇順にする\n\t\t\tArrays.sort(CardR);\n\t\t\tArrays.sort(CardG);\n\t\t\tArrays.sort(CardB);\n\t\t\t\n//\t\t\tpprint(CardB);\n\n\t\t\t//同じ数字が3つあれば消す\n\t\t\tCardR = pairs3Remove(CardR);\n\t\t\tCardG = pairs3Remove(CardG);\n\t\t\tCardB = pairs3Remove(CardB);\n\n\t\t\t//3連続の数字があれば消す\n\t\t\tCardR = ThreeConsecutiveNumber(CardR);\n\t\t\tCardG = ThreeConsecutiveNumber(CardG);\n\t\t\tCardB = ThreeConsecutiveNumber(CardB);\n\t\t\t\n//\t\t\tpprint(CardB);\n\t\t\t\n\t\t\t//カードを昇順にする\n\t\t\tArrays.sort(CardR);\n\t\t\tArrays.sort(CardG);\n\t\t\tArrays.sort(CardB);\n\t\t\t\n\t\t\t//1〜9の数字のカードしかないので\n\t\t\t//昇順で最後の数字が0なら全部0\n\t\t\tif(CardR[8] == 0 && CardG[8] == 0 && CardB[8] == 0) {\n\t\t\t\t\n\t\t\t\t//条件をみたせば1\n\t\t\t\tintAnswer = 1;\n\t\t\t}\n\t\t\t\n\t\t\treturn intAnswer;\n\t\t}\n\t}\n\n\t/**\n\t * 同じ数字が3つあれば消す\n\t * @param Card 3ペアを消したいカード\n\t * @return Card 3ペアを消し終わったカード\n\t */\n\tpublic static int[] pairs3Remove(int[] Card) {\n\n\t\t//ペア数をカウント 3カウントになると数字を消す為\n\t\tint pairs3count = 0;\n\n\t\t//ペア数をカウントした数字を格納する場所\n\t\t//対子の３つを格納する場所\n\t\tint[] count3Toitu = new int[9];\n\n\t\tint count3ToituCount = 0;\n\n\t\tfor(int i = 0; i < 9; i++) {\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tif(Card[j] == i + 1) {\n\t\t\t\t\tpairs3count++;\n\t\t\t\t\tcount3Toitu[count3ToituCount] = j + 1;\n\t\t\t\t\tcount3ToituCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(pairs3count >= 3) {\n\t\t\t\tint count2 = 0;\n\t\t\t\tfor(int k = 0; k < 9; k++) {\n\t\t\t\t\tif(count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint intNum = count3Toitu[k];\n\t\t\t\t\tCard[intNum - 1] = 0;\n\t\t\t\t\tcount2 ++;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t}\n\t\t\tpairs3count = 0;\n\t\t\tcount3ToituCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n\t/**\n\t * 3連続の数字があれば消す\n\t * @param Card\n\t * @return\n\t */\n\tpublic static int[] ThreeConsecutiveNumber(int[] Card) {\n\n\t\tint[][] count3Zyuntu = new int[3][2];\n\n\t\tint count3ZyuntuCount = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile(i < 7) {\n\n\t\t\touter:\n\t\t\twhile(true){\n\n\t\t\t\tif(k == 4) {\n\t\t\t\t\tint intNum1 = count3Zyuntu[0][1];\n\t\t\t\t\tint intNum2 = count3Zyuntu[1][1];\n\t\t\t\t\tint intNum3 = count3Zyuntu[2][1];\n\t\t\t\t\tCard[intNum1] = 0;\n\t\t\t\t\tCard[intNum2] = 0;\n\t\t\t\t\tCard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(Card);\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif(j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(Card[j] == k + i) {\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][0] = k + i;\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][1] = j;\n\t\t\t\t\tcount3ZyuntuCount++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcount3ZyuntuCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\t\n\tpublic static void pprint(int[] Card) {\n\t\t\n\t\tfor(int i = 0; i < Card.length; i++) {\n\t\t\tSystem.out.print(Card[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\tint[][] cards;\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tfor(int T=0;T<t;T++) {\n\t\t\tint[] num = new int[9];\n\t\t\t\n\t\t\tcards = new int[3][9];\n\t\t\tfor(int i=0;i<9;i++) num[i] = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<9;i++) {\n\t\t\t\tint j=0;\n\t\t\t\tswitch (sc.next().charAt(0)) {\n\t\t\t\tcase 'R': j=0; break;\n\t\t\t\tcase 'G': j=1; break;\n\t\t\t\tcase 'B': j=2; break;\n\t\t\t\t}\n\t\t\t\tcards[j][num[i]-1]++;\n\t\t\t}\n\t\t\tSystem.out.println(dfs(0, 0, 0));\n\t\t}\n\t}\n\t\n\tint dfs(int i, int j, int c) {\n\t\tint flg = 0;\n\t\tif( i == 3 ) {\n//\t\t\tdebug(cards);\n\t\t\tif( c == 3) return 1;\n\t\t\telse return 0;\n\t\t}\n\t\tfor(int k=j;k<9;k++) {\n\t\t\tif(cards[i][k] >= 3 ) {\n\t\t\t\tcards[i][k] -= 3;\n\t\t\t\tflg |= dfs(i, k, c+1);\n\t\t\t\tcards[i][k] += 3;\n\t\t\t}\n\t\t}\n\t\tfor(int k=j;k<7;k++) {\n\t\t\tif(cards[i][k] >= 1 && cards[i][k+1] >= 1 && cards[i][k+2] >= 1) {\n\t\t\t\tcards[i][k] -= 1; cards[i][k+1] -= 1; cards[i][k+2] -= 1;\n\t\t\t\tflg |= dfs(i, k, c+1);\n\t\t\t\tcards[i][k] += 1; cards[i][k+1] += 1; cards[i][k+2] += 1;\n\t\t\t}\n\t\t}\n\t\tflg |= dfs(i+1, 0, c);\n\t\treturn flg;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] red = new int[9];\n\t\tint[] blue = new int[9];\n\t\tint[] green = new int[9];\n\t\tint r, g, b;\n\t\tint[][] R = new int[10][10];\n\t\tint[][] G = new int[10][10];\n\t\tint[][] B = new int[10][10];\n\t\tint[] numR = new int[10];\n\t\tint[] numG = new int[10];\n\t\tint[] numB = new int[10];\n\t\tchar c;\n\t\tint count;\n\t\tint t = sc.nextInt();\n\t\tfor(int k = 0; k < t; k++){\n\t\t\tr = 0;\n\t\t\tg = 0;\n\t\t\tb = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int i = 1; i <= 9; i++){\n\t\t\t\tnumR[i] = 0;\n\t\t\t\tnumG[i] = 0;\n\t\t\t\tnumB[i] = 0;\n\t\t\t\tfor(int j = 1; j <= 9; j++){\n\t\t\t\t\tR[i][j] = 0;\n\t\t\t\t\tG[i][j] = 0;\n\t\t\t\t\tB[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0; i < 9; i++)\n\t\t\t\tn[i] = sc.nextInt();\n\t\t\tfor(int i = 0; i < 9; i++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tred[r] = n[i];\n\t\t\t\t\tr++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tgreen[g] = n[i];\n\t\t\t\t\tg++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tblue[b] = n[i];\n\t\t\t\t\tb++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\ti = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(R, numR, red, r);\n\t\t\tsort(G, numG, green, g);\n\t\t\tsort(B, numB, blue, b);\n\t\t\tcount += count(R, numR) + count(G, numG) + count(B, numB);\t\t\t\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[][] C, int[] numC, int[] color, int c){\n\t\tfor(int i = 0; i < c; i++){\n\t\t\tfor(int j = 1; j <= 9; j++)\n\t\t\t\tif(color[i] == j){\n\t\t\t\t\tC[j][++numC[j]] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tstatic int count(int[][] C, int[] numC){\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tfor(int k = 0; k < 3; k++){\n\t\t\t\tif(numC[i] >= 3){\n\t\t\t\t\tnumC[i] -= 3;\n\t\t\t\t\tcount++;\n\t\t\t\t}else\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j = numC[i]+1; j <= 9; j++)\n\t\t\t\tC[i][j] = 0;\n\t\t}\n\t\tfor(int j = 1; j <= 2; j++){\n\t\t\tfor(int i = 1; i <= 7; i++){\n\t\t\t\tif(C[i][j] == 1 && C[i+1][j] == 1 && C[i+2][j] == 1){\n\t\t\t\t\tcount++;\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main (String[] args) throws IOException\n\t{\n\t\tBufferedReader input = new BufferedReader (new InputStreamReader (System.in));\n\n\t\tString setTotalStr = input.readLine();\n\n\t\tint setTotal = Integer.parseInt(setTotalStr);\n\n\t\tint cardTotal = 9;\n\n\t\tString[][] cardInfoNumStr = new String[setTotal][9];\n\n\t\tint[][] cardInfoNum = new int[setTotal][cardTotal];\n\n\t\tString[][] cardInfoCol = new String[setTotal][9];\n\n\t\t//データをキーボードで入力し、配列に代入する\n\t\tfor(int set = 0; set < setTotal; set++)\n\t\t{\n\t\t\tcardInfoNumStr[set] = input.readLine().split(\" \");\n\n\t\t\tfor(int num = 0; num < cardTotal; num++)\n\t\t\t\tcardInfoNum[set][num] = Integer.parseInt(cardInfoNumStr[set][num]);\n\n\t\t\tcardInfoCol[set] = input.readLine().split(\" \");\n\t\t}\n\n\t\tint win = 0;\n\n\t\t//勝利条件を満たしているかどうかをset回行う\n\t\tfor(int set = 0; set < setTotal; set++, win = 0)\n\t\t{\n\t\t\t//1セット目を見つける\n\t\t\tfor(int num2nd = 1; (num2nd < cardTotal - 1) &&  (win == 0); num2nd++)\n\t\t\t{\n\t\t\t\tfor(int num3rd = 2; (num3rd < cardTotal) && (win == 0); num3rd++)\n\t\t\t\t{\n\t\t\t\t\tif(((cardInfoNum[set][0] == cardInfoNum[set][num2nd] && cardInfoNum[set][0] == cardInfoNum[set][num3rd])\n\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 2)\n\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd]))))\n\t\t\t\t\t{\n\t\t\t\t\t\tint cardTotal2nd = cardTotal -3;\n\n\t\t\t\t\t\tint[] cardInfoNum2nd = new int[cardTotal2nd];\n\n\t\t\t\t\t\tString[] cardInfoCol2nd = new String[cardTotal2nd];\n\n\t\t\t\t\t\tint insertNum = 0;\n\n\t\t\t\t\t\t//2セット目を見つける準備\n\t\t\t\t\t\tfor(int num = 1; num < cardTotal; num++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(!(num == num2nd || num == num3rd))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcardInfoNum2nd[insertNum] = cardInfoNum[set][num];\n\n\t\t\t\t\t\t\t\tcardInfoCol2nd[insertNum] = cardInfoCol[set][num];\n\n\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//2セット目を見つける\n\t\t\t\t\t\tfor(int num2set2nd = 1; (num2set2nd < cardTotal2nd - 1) && (win == 0); num2set2nd++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor(int num2set3rd = 2; (num2set3rd < cardTotal2nd) && (win == 0); num2set3rd++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd])\n\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd]))))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint cardTotal3rd = cardTotal2nd -3;\n\n\t\t\t\t\t\t\t\t\tint[] cardInfoNum3rd = new int[cardTotal3rd];\n\n\t\t\t\t\t\t\t\t\tString[] cardInfoCol3rd = new String[cardTotal3rd];\n\n\t\t\t\t\t\t\t\t\tinsertNum = 0;\n\n\t\t\t\t\t\t\t\t\t//3セット目を見つける準備\n\t\t\t\t\t\t\t\t\tfor(int num = 1; num < cardTotal2nd; num++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif(!(num == num2set2nd || num == num2set3rd))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcardInfoNum3rd[insertNum] = cardInfoNum2nd[num];\n\n\t\t\t\t\t\t\t\t\t\t\tcardInfoCol3rd[insertNum] = cardInfoCol2nd[num];\n\n\t\t\t\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//勝利条件を満たしているか確かめる\n\t\t\t\t\t\t\t\t\tif(((cardInfoNum3rd[0] == cardInfoNum3rd[1] && cardInfoNum3rd[0] == cardInfoNum3rd[2])\n\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2]))))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twin = 1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(win);\n\t\t}\n\t}\n}\n\n\n//かかった時間：6時間程\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\t//??\\????????°?????????\n\t\tint intLoop = scan.nextInt();\n\t\t//????¨?????´???´????¢????\n\t\tArrayList<int[]> numList = new ArrayList<int[]>();\n\t\tArrayList<String[]> colorList = new ArrayList<String[]>();\n\t\tArrayList<Integer> ansList = new ArrayList<Integer>();\n\t\t//??\\???\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint[] intNum = new int[9];\n\t\t\tString[] strCol = new String[9];\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tintNum[j] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tstrCol[j] = scan.next();\n\t\t\t}\n\t\t\tnumList.add(intNum);\n\t\t\tcolorList.add(strCol);\n\t\t}\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint intCount = 0;\n\t\t\tint[] arrayR = new int[9];\n\t\t\tint[] arrayG = new int[9];\n\t\t\tint[] arrayB = new int[9];\n\t\t\tint[] intNum = numList.get(i);\n\t\t\tString[] strCol = colorList.get(i);\n\t\t\t//RGB???????????\\?????????\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = strCol[j];\n\t\t\t\tif(\"R\".equals(s)){\n\t\t\t\t\tarrayR[intNum[j] - 1]++;\n\t\t\t\t}else if(\"G\".equals(s)){\n\t\t\t\t\tarrayG[intNum[j] - 1]++;\n\t\t\t\t}else if(\"B\".equals(s)){\n\t\t\t\t\tarrayB[intNum[j] - 1]++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tfor(int j = 0; j < 7; j++){\n\t\t\t\tif(arrayR[j] != 0 && arrayR[j+1] != 0 && arrayR[j+2] !=0){\n\t\t\t\t\tarrayR[j]--;\n\t\t\t\t\tarrayR[j+1]--;\n\t\t\t\t\tarrayR[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}else if(arrayG[j] != 0 && arrayG[j+1] != 0 && arrayG[j+2] !=0){\n\t\t\t\t\tarrayG[j]--;\n\t\t\t\t\tarrayG[j+1]--;\n\t\t\t\t\tarrayG[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}else if(arrayB[j] != 0 && arrayB[j+1] != 0 && arrayB[j+2] !=0){\n\t\t\t\t\tarrayB[j]--;\n\t\t\t\t\tarrayB[j+1]--;\n\t\t\t\t\tarrayB[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\n\t\t\t\tif(arrayR[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayG[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayB[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(intCount == 3){\n\t\t\t\tansList.add(1);\n\t\t\t}else{\n\t\t\t\tansList.add(0);\n\t\t\t}\n\t\t\t/*for(int j = 0; j < 9; j++){\n\t\t\t\tSystem.out.println((j + 1) + \" = R : \" + arrayR[j] + \" G : \" + arrayG[j] + \" B : \" + arrayB[j]);\n\t\t\t}*/\n\t\t}\n\n\t\t//??????\n\t\tfor(int i = 0; i < ansList.size(); i++){\n\t\t\tSystem.out.println(ansList.get(i));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\t//?????°\n\tprivate static int valueOfCard = 9; //?????????????????°\n\tprivate static int numberOfCard = 9; //?????????????????????????¨??????°(1???9 = 9)\n\tprivate static int colorOfCard = 3; //??????????????????????¨??????°(RGB = 3)\n\tprivate static int winSetCount = 3; //???????????????????????¢?????°\n\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\t//??\\????????°?????????\n\t\tint intLoop = scan.nextInt();\n\t\t//????¨?????´???´????¢????\n\t\tArrayList<Integer> ansList = new ArrayList<Integer>();\n\t\tArrayList<Card> cards = new ArrayList<Card>();\n\n\t\t//??\\?????????\n\t\tfor(int i = 0; i < intLoop; i++){\n\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = new Card();\n\t\t\t\tcard.setNumber(scan.nextInt());\n\t\t\t\tcards.add(card);\n\t\t\t}\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = cards.get(j + i * valueOfCard);\n\t\t\t\tcard.setColor(scan.next());\n\t\t\t\tcards.set(j, card);\n\t\t\t}\n\t\t}\n\t\tscan.close();\n/*for(Card c : cards){\n\tSystem.out.println(c.getNumber() + \" : \" + c.getColor());\n}*/\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint setCount = 0; //??¢????????°\n\t\t\tint[][] arrayRGB = new int[colorOfCard][numberOfCard];\n\t\t\t//RGB???????????\\?????????\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = cards.get(j + i * valueOfCard);\n\t\t\t\tString color = card.getColor();\n\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\tarrayRGB[0][card.getNumber() - 1]++;\n\t\t\t\t}else if(\"G\".equals(color)){\n\t\t\t\t\tarrayRGB[1][card.getNumber() - 1]++;\n\t\t\t\t}else if(\"B\".equals(color)){\n\t\t\t\t\tarrayRGB[2][card.getNumber() - 1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*for(int t = 0; t < colorOfCard; t++){\n\t\t\t\tfor(int u = 0; u < numberOfCard; u++){\n\t\t\t\t\tSystem.out.print(arrayRGB[t][u] + \" \");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\tSystem.out.println();*/\n\t\t\tfor(int j = 0; j < colorOfCard; j++){\n\t\t\t\tfor(int k = 0; k < valueOfCard - 2; k++){\n\t\t\t\t\tboolean isReplay = false;\n\t\t\t\t\tif(arrayRGB[j][k] != 0 && arrayRGB[j][k+1] != 0 && arrayRGB[j][k+2] !=0){\n\t\t\t\t\t\tarrayRGB[j][k]--;\n\t\t\t\t\t\tarrayRGB[j][k+1]--;\n\t\t\t\t\t\tarrayRGB[j][k+2]--;\n\t\t\t\t\t\tsetCount++;\n\t\t\t\t\t\tisReplay = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(isReplay && arrayRGB[j][k] != 0){\n\t\t\t\t\t\tk--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\tfor(int j = 0; j < colorOfCard; j++){\n\t\t\t\tfor(int k = 0; k < valueOfCard; k++){\n\t\t\t\t\tif(arrayRGB[j][k] == winSetCount){\n\t\t\t\t\t\tsetCount++;\n\t\t\t\t\t\tarrayRGB[j][k] -= winSetCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(setCount == winSetCount){\n\t\t\t\tansList.add(1);\n\t\t\t}else{\n\t\t\t\tansList.add(0);\n\t\t\t}\n\n\t\t}\n\n\t\t//??????\n\t\tfor(int i = 0; i < ansList.size(); i++){\n\t\t\tSystem.out.println(ansList.get(i));\n\t\t}\n\t}\n}\npublic class Card {\n\tprivate int number;\n\tprivate String color;\n\n\tpublic int getNumber() {\n\t\treturn number;\n\t}\n\tpublic void setNumber(int number) {\n\t\tthis.number = number;\n\t}\n\tpublic String getColor() {\n\t\treturn color;\n\t}\n\tpublic void setColor(String color) {\n\t\tthis.color = color;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\n\t\t //????????°????¢???????????????°\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt++] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°???\n\t\t\t\t\t if(work_cnt % 3 == 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[++i] && work[i]  == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t \t\t\t\t\t\t\t else if(work[i] + 1 == work[++i]  && work[i] + 1 == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t i++;\n\t\t\t\t\t \t}\n\t\t\t\t }\n\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif(num[r] - num[r - 1] != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = true;\n\t\t\tif(!(Check(counter[0] % 3) && Check(counter[1] % 3) && Check(counter[2] % 3))) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) list.add(num[c][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) { \n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;//だめなヤツがあった時点でもうbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str=scan.next();\n\t\t\t\tC[j*2][i] = str.toCharArray();\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "import static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tSystem.setIn(new FileInputStream(\"src/aoj2102/input.txt\"));\n//\t\t\tSystem.setOut(new PrintStream(new FileOutputStream(\"src/aoj2101/result.txt\")));\n\t\t} catch (FileNotFoundException e) {\n\t\t}\n\t\tnew Main().run();\n\t}\n\n\n\n\tScanner sc;\n\tvoid run() {\n\t\tsc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T-->0) {\n\t\t\tint[] num = new int[9];\n\t\t\tString colors = \"RGB\";\n\n\t\t\tint[][] hand = new int[3][9];\n\t\t\tfor (int i = 0; i < 9; i++) num[i] = sc.nextInt();\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tString coler = sc.next();\n\t\t\t\tint idx = colors.indexOf(coler.charAt(0));\n\t\t\t\thand[idx][num[i]]++;\n\t\t\t}\n\n\t\t\tint done = 0;\n\t\t\tfor (int coler = 0; coler < 3; coler++) {\n\t\t\t\tfor (int i = 0; i < 9; i++) while (hand[coler][i] >= 3){\n\t\t\t\t\thand[coler][i] -= 3;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\t\t\t\tfor (int i = 0; i + 3 < 9; i++) while (hand[coler][i] > 0 && hand[coler][i+1] > 0 && hand[coler][i+2] > 0) {\n\t\t\t\t\thand[coler][i]--; hand[coler][i+1]--; hand[coler][i+2]--;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(done == 9 ? 1 : 0);\n\t\t}\n\t}\n\n\n\tvoid tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(redList) && Confirm(redList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        // 長さ3の時\n        if (len / 3 == 1) {\n            if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n                return true;\n            } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        // 長さ6の時\n        if (len / 3 == 2) {\n            for (int i = 0; i < 4; i++) {\n                for (int j = i + 1; j < 5; j++) {\n                    for (int k = j + 1; j < 6; k++) {\n                        if (list.get(i) == list.get(j) && list.get(j) == list.get(k)) {\n                            return true;\n                        } else if (list.get(i) + 1 == list.get(j) && list.get(j) + 1 == list.get(k)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n\n        boolean finalflg0 = false;\n        boolean finalflg1 = false;\n        boolean finalflg2 = false;\n\n        // 長さ9の時\n        for (int i = 0; i < Math.pow(3, 9); i++) {\n\n            int flg0 = 0;\n            int flg1 = 0;\n            int flg2 = 0;\n\n            int last0 = 0;\n            int last1 = 0;\n            int last2 = 0;\n\n            for (int j = 0; j < 9; j++) {\n                int nannbannme = 0;\n                int tmp = i;\n                for (int k = 0; k < j; k++) {\n                    nannbannme++;\n                    tmp /= 3;\n                }\n\n                switch (tmp % 3) {\n                case 0:\n                    if (last0 == list.get(nannbannme)) {\n                        if (flg0 == 1) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 1;\n                        }\n                    }\n\n                    if (last0 + 1 == list.get(nannbannme)) {\n                        if (flg0 == 2) {\n                            finalflg0 = true;\n                        } else {\n                            flg0 = 2;\n                        }\n                    }\n\n                    last0 = list.get(nannbannme);\n                    break;\n                case 1:\n                    if (last1 == list.get(nannbannme)) {\n                        if (flg1 == 1) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 1;\n                        }\n                    }\n\n                    if (last1 + 1 == list.get(nannbannme)) {\n                        if (flg1 == 2) {\n                            finalflg1 = true;\n                        } else {\n                            flg1 = 2;\n                        }\n                    }\n\n                    last1 = list.get(nannbannme);\n\n                    break;\n                case 2:\n                    if (last2 == list.get(nannbannme)) {\n                        if (flg2 == 1) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 1;\n                        }\n                    }\n\n                    if (last2 + 1 == list.get(nannbannme)) {\n                        if (flg2 == 2) {\n                            finalflg2 = true;\n                        } else {\n                            flg2 = 2;\n                        }\n                    }\n\n                    last2 = list.get(nannbannme);\n\n                    break;\n                }\n            }\n\n        }\n\n        return (finalflg1 && finalflg2 && finalflg0);\n    }\n}}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint intHairetsuNum[] = new int[9]; \n\t\tString strHairetsuNum[] = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString strHairetsuColor[] = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji] += 1;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji] += 1;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji] += 1;\n        \t}\n        \t\n        \t\n        \t\n        \tint set = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (k < 7)\n        \t\t\t{\n        \t\t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0)\n                \t\t{\n                \t\t\tset++;\n                \t\t\tcard[j][k]--;\n                \t\t\tcard[j][k + 1]--;\n                \t\t\tcard[j][k + 2]--;\n                \t\t\tk--;\n                \t\t\t//System.out.println(\"a\");\n                \t\t\tcontinue;\n                \t\t}\n        \t\t\t}\n        \t\t\t//System.out.println(card[j][k]);\n        \t\t\tif (card[j][k] >= 3)\n        \t\t\t{\n        \t\t\t\tset++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n            \t\t\t//System.out.println(\"b\");\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}if (set >= 3)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n\tstatic BufferedReader insBR = new BufferedReader(new InputStreamReader(System.in));\n\tstatic int[][] intTmp;\n\tstatic String[][]  strTmp;\n\n\t//手札を補充し、答えを出力する役割を担うメソッド。\n\tpublic static void main(String[] args){\n\n\t\tint intDate = dateNum();\n\t\tintTmp = new int[intDate][9];\n\t\tstrTmp = new String[intDate][9];\n\t\tyourHand(intDate);\n\n\n\t\tLummyObjR insLummy = new LummyObjR(intTmp,strTmp,intDate);\n\t\tinsLummy.lummyMain();\n\t}\n\n\t//データセット数を読み取るメソッド。\n\tpublic static int dateNum(){\n\n\t\tint intLine = 0;\n\t\ttry{\n\n\t\t\tString strLine = insBR.readLine();\n\t\t\tintLine = Integer.parseInt(strLine);\n\n\t\t}catch(IOException e){\n\t\t \te.printStackTrace();\n\t\t}catch(NumberFormatException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn intLine;\n\n\t}\n\n\tpublic static void yourHand(int intDateSet){\n\n\t\t//カードを読み取り、配列に格納。\n\t\tfor(int suffix = 0; suffix < intDateSet; suffix++){\n\t\t\ttry{\n\t\t\t\tString[] strNum = insBR.readLine().split(\" \");\n\t\t\t\tfor(int suffix2 = 0; suffix2 < strNum.length; suffix2++){\n\t\t\t\t\tintTmp[suffix][suffix2] = Integer.parseInt(strNum[suffix2]);\n\t\t\t\t}\n\t\t\t\tstrTmp[suffix] = insBR.readLine().split(\" \");\n\t\t\t}catch(IOException e){\n\t\t\t \te.printStackTrace();\n\t\t\t}catch(NumberFormatException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nclass LummyObjR{\n\n\tstatic int intOK = 0;\n\tprivate int[][] intNum;\n\tprivate String[][] strMark;\n\tprivate List<Integer> lummyRed;\n\tprivate List<Integer> lummyBlue;\n\tprivate List<Integer> lummyGreen;\n\tstatic List<String> ngNumList;\n\tprivate int intDateSet;\n\n\tLummyObjR(){\n\t\tngNumList = new ArrayList<String>();\n\t}\n\n\tLummyObjR(int[][] intNum, String[][] strMark, int intDate){\n\t\tngNumList = new ArrayList<String>();\n\t\tsetIntNum(intNum);\n\t\tsetStrMark(strMark);\n\t\tthis.intDateSet = intDate;\n\t}\n\n\tpublic void lummyMain(){\n\n\t\t//手札をメソッドで生成。\n\n\t\tList<Integer> answerList = new ArrayList<Integer>();;\n\n\t\t//プレイヤーの分のforループ。\n\t\tfor(int intPlayer = 0; intPlayer < intDateSet; intPlayer++){\n\n\t\t\tint intListSize = 0;\n\t\t\tthis.lummyRed = new ArrayList<Integer>();\n\t\t\tthis.lummyBlue = new ArrayList<Integer>();\n\t\t\tthis.lummyGreen = new ArrayList<Integer>();\n\n\t\t\tsetSort(intPlayer);\n\n\t\t\tfor(int intHand = 0; intHand < 9; intHand++){\n\t\t\t\tif(\"R\".equals(strMark[intPlayer][intHand])){\n\t\t\t\t\tlummyRed.add(intNum[intPlayer][intHand]);\n\t\t\t\t}else if(\"B\".equals(strMark[intPlayer][intHand])){\n\t\t\t\t\tlummyBlue.add(intNum[intPlayer][intHand]);\n\t\t\t\t}else{\n\t\t\t\t\tlummyGreen.add(intNum[intPlayer][intHand]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetRed(lummyRed);\n\t\t\tsetBlue(lummyBlue);\n\t\t\tsetGreen(lummyGreen);\n\n\t\t\tintListSize += listIssue(lummyRed);\n\t\t\tintListSize += listIssue(lummyBlue);\n\t\t\tintListSize += listIssue(lummyGreen);\n\n\t\t\tint intAnswer = -1;\n\n\t\t\tif(0 < intListSize){\n\t\t\t\tintAnswer = 0;\n\t\t\t}else{\n\t\t\t\tintAnswer = 1;\n\t\t\t}\n\n\t\t\tanswerList.add(intAnswer);\n\n\t\t}\n\n\t\t//出力。\n\t\tlummyPirnt(answerList);\n\n\t}\n\n\tpublic int listIssue(List<Integer> lummyList){\n\t\tfor(int first = 0; first < lummyList.size() - 2;first++){\n\t\t\tfor(int second = first + 1; second < lummyList.size() - 1; second++){\n\t\t\t\tfor(int third = second + 1; third < lummyList.size(); third++){\n\t\t\t\t\tif(lummyList.get(first) == lummyList.get(second) && lummyList.get(first) == lummyList.get(third)){\n\t\t\t\t\t\tlummyList.remove(third);\n\t\t\t\t\t\tlummyList.remove(second);\n\t\t\t\t\t\tlummyList.remove(first);\n\t\t\t\t\t\tsecond = first;\n\t\t\t\t\t\tthird = second + 1;\n\t\t\t\t\t}else if(lummyList.get(first) == lummyList.get(second) - 1 && lummyList.get(first) == lummyList.get(third) - 2){\n\t\t\t\t\t\tlummyList.remove(third);\n\t\t\t\t\t\tlummyList.remove(second);\n\t\t\t\t\t\tlummyList.remove(first);\n\t\t\t\t\t\tsecond = first;\n\t\t\t\t\t\tthird = second + 1;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn lummyList.size();\n\t}\n\n\tpublic void setIntNum(int[][] intNum){\n\t\tthis.intNum = intNum;\n\t}\n\n\tpublic void setStrMark(String[][] strMark){\n\t\tthis.strMark = strMark;\n\t}\n\n\tpublic void setRed(List<Integer> lummyRed){\n\t\tthis.lummyRed = lummyRed;\n\t}\n\n\tpublic void setBlue(List<Integer> lummyBlue){\n\t\tthis.lummyBlue = lummyBlue;\n\t}\n\n\tpublic void setGreen(List<Integer> lummyGreen){\n\t\tthis.lummyGreen = lummyGreen;\n\t}\n\n\tpublic int[][] getIntNum(){\n\t\treturn intNum;\n\t}\n\n\tpublic String[][] getStrMark(){\n\t\treturn strMark;\n\t}\n\n\t//手札の並び替え。\n\tpublic void setSort(int intPlayer){\n\n\t\tfor(int i = 0; i < 8;i++){\n\t\t\tfor(int j = 8; i < j;j--){\n\t\t\t\tif(this.intNum[intPlayer][j] < this.intNum[intPlayer][i]){\n\t\t\t\t\tint intAct = intNum[intPlayer][i];\n\t\t\t\t\tthis.intNum[intPlayer][i] = intNum[intPlayer][j];\n\t\t\t\t\tthis.intNum[intPlayer][j] = intAct;\n\t\t\t\t\tString strAct = strMark[intPlayer][i];\n\t\t\t\t\tthis.strMark[intPlayer][i] = strMark[intPlayer][j];\n\t\t\t\t\tthis.strMark[intPlayer][j] = strAct;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t//勝敗を判定するメソッド。\n\tpublic int lummyIssue(int intPlayer){\n\n\t\t//セット判定変数。\n\t\tintOK = 0;\n\n\t\t//基準とするカードのforループ。\n\t\tfor(int intHasCard = 0; intHasCard < 7; intHasCard++){\n\n\t\t\tintOK += lummyLoop(intHasCard, intPlayer);\n\n\t\t}\n\n\t\t//答えの変数。\n\t\tint intAnswer = - 1;\n\n\t\t//セットが3つあるか確認。\n\t\tif(intOK == 3){\n\t\t\tintAnswer = 1;\n\t\t}else{\n\t\t\tintAnswer = 0;\n\t\t}\n\n\t\tngNumList.clear();\n\n\t\treturn intAnswer;\n\n\t}\n\n\t//1枚目のカードを基準とし、判定を繰り返すメソッド。\n\tpublic int lummyLoop(int intHasCard, int intPlayer){\n\n\t\tintOK = 0;\n\n\t\tboolean blFirstLoop = lummyNGNum(intHasCard);\n\n\t\tif(blFirstLoop){\n\n\t\t\tlummyNextCard(intHasCard, intPlayer);\n\n\t\t}\n\n\t\treturn intOK;\n\n\t}\n\n\t//配列の添え字の数値の格納場所をまだ見ていないかを判定するメソッド。\n\tpublic boolean lummyNGNum(int intHasCard){\n\n\t\tboolean blNotNG = true;\n\n\t\tfor(String strNG: ngNumList){\n\t\t\tif((\"\" + intHasCard).equals(strNG)){\n\t\t\t\tblNotNG = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn blNotNG;\n\t}\n\n\t//2枚目のカードを判定するメソッド。\n\tpublic void lummyNextCard(int intHasCard, int intPlayer){\n\n\t\t//次の基準とするカードのforループ。\n\t\tfor(int intNextCard = intHasCard + 1; intNextCard < 8; intNextCard++){\n\n\t\t\tboolean blSecondLoop = lummyNGNum(intNextCard);\n\n\t\t\tif(blSecondLoop){\n\n\t\t\t\tlummyAfterNext(intHasCard, intNextCard, intPlayer);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//3枚目のカードを判定するメソッド。\n\tpublic void lummyAfterNext(int intHasCard, int intNextCard, int intPlayer){\n\n\t\t//次の次のカードのforループ。\n\t\tfor(int intAfterTheNext = intNextCard + 1; intAfterTheNext < 9; intAfterTheNext++){\n\n\t\t\tboolean blThirdLoop = lummyNGNum(intAfterTheNext);\n\n\t\t\tif(blThirdLoop){\n\n\t\t\t\tString strHasCard =this.intNum[intPlayer][intHasCard] + this.strMark[intPlayer][intHasCard];\n\t\t\t\tString strNextCard = this.intNum[intPlayer][intNextCard] + this.strMark[intPlayer][intNextCard];\n\t\t\t\tString strAfterTheNext = this.intNum[intPlayer][intAfterTheNext] + this.strMark[intPlayer][intAfterTheNext];\n\n\t\t\t\tString strFirstMark = this.strMark[intPlayer][intHasCard];\n\t\t\t\tString strSecondMark = this.strMark[intPlayer][intNextCard];\n\t\t\t\tString strThirdMark = this.strMark[intPlayer][intAfterTheNext];\n\n\t\t\t\tint intFirstNum = this.intNum[intPlayer][intHasCard];\n\t\t\t\tint intSecondNum = this.intNum[intPlayer][intNextCard];\n\t\t\t\tint intThirdNum = this.intNum[intPlayer][intAfterTheNext];\n\n\t\t\t\t//同じカードのセットの場合。\n\t\t\t\tif(strHasCard.equals(strNextCard) && strHasCard.equals(strAfterTheNext) && strNextCard.equals(strAfterTheNext)){\n\n\t\t\t\t\tintOK++;\n\t\t\t\t\tngNumList = lummyNGAdd(intNextCard, intAfterTheNext);\n\t\t\t\t\tbreak;\n\n\t\t\t\t//マークが同じで、連番の場合。\n\t\t\t\t}else if(strFirstMark.equals(strSecondMark) && strFirstMark.equals(strThirdMark) &&\n\t\t\t\t\tstrSecondMark.equals(strThirdMark)){\n\n\t\t\t\t\tList<Integer> serialNumList = new ArrayList<Integer>();\n\n\t\t\t\t\t//最小値、中間の値、最大値を算出するメソッドへ。\n\t\t\t\t\tserialNumList = lummySerialNum(intFirstNum, intSecondNum, intThirdNum);\n\n\t\t\t\t\tint intLow = serialNumList.get(0);\n\t\t\t\t\tint intMiddle = serialNumList.get(1);\n\t\t\t\t\tint intHigh = serialNumList.get(2);\n\n\t\t\t\t\tif(intLow == intMiddle - 1 && intLow == intHigh - 2 && intMiddle == intHigh - 1){\n\t\t\t\t\t\tintOK++;\n\t\t\t\t\t\tngNumList = lummyNGAdd(intNextCard, intAfterTheNext);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\t//一度見た配列の添え字の数値をリストに格納するメソッド。\n\tpublic List<String> lummyNGAdd(int intNextCard, int intAfterTheNext){\n\n\t\tngNumList.add(\"\" + intNextCard);\n\t\tngNumList.add(\"\" + intAfterTheNext);\n\n\t\treturn ngNumList;\n\n\t}\n\n\t//連番判定メソッド。\n\tpublic List<Integer> lummySerialNum(int intFirstNum, int intSecondNum, int intThirdNum){\n\n\t\tList<Integer> list = new ArrayList<Integer>();\n\n\t\tint intLow = 0;\n\t\tint intHigh = 0;\n\t\tint intMiddle = 0;\n\n\t\t//最小値。\n\t\tif(intFirstNum < intSecondNum && intFirstNum < intThirdNum){\n\t\t\tintLow = intFirstNum;\n\t\t}else if(intSecondNum < intFirstNum && intSecondNum < intThirdNum){\n\t\t\tintLow = intSecondNum;\n\t\t}else if(intThirdNum < intFirstNum && intThirdNum < intSecondNum){\n\t\t\tintLow = intThirdNum;\n\t\t}\n\n\t\t//最大値。\n\t\tif(intFirstNum < intThirdNum && intSecondNum < intThirdNum){\n\t\t\tintHigh = intThirdNum;\n\t\t}else if(intFirstNum < intSecondNum && intThirdNum < intSecondNum){\n\t\t\tintHigh = intSecondNum;\n\t\t}else if(intSecondNum < intFirstNum && intThirdNum < intFirstNum){\n\t\t\tintHigh = intFirstNum;\n\t\t}\n\n\t\t//中間の値。\n\t\tif(intSecondNum != intLow && intSecondNum != intHigh){\n\t\t\tintMiddle = intSecondNum;\n\t\t}else if(intThirdNum != intLow && intThirdNum != intHigh){\n\t\t\tintMiddle = intThirdNum;\n\t\t}else if(intFirstNum != intLow && intFirstNum != intHigh){\n\t\t\tintMiddle = intFirstNum;\n\t\t}\n\n\n\t\t//最小値、中間の値、最大値からリストに格納。\n\t\tlist.add(intLow);\n\t\tlist.add(intMiddle);\n\t\tlist.add(intHigh);\n\n\t\treturn list;\n\n\t}\n\n\t//最終的な出力メソッド。\n\tpublic void lummyPirnt(List<Integer> list){\n\n\t\tfor(Integer answer: list){\n\t\t\tSystem.out.println(answer);\n\t\t}\n\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] n = new int[9];\n\t\tint[] nr = new int[9];\n\t\tint[] ng = new int[9];\n\t\tint[] nb = new int[9];\n\t\tint ir;\n\t\tint ig;\n\t\tint ib;\n\t\tint count;\n\t\tchar c;\n\t\tint t = sc.nextInt();\n\t\tfor(int i = 0; i < t; i++){\n\t\t\tir = 0;\n\t\t\tig = 0;\n\t\t\tib = 0;\n\t\t\tcount = 0;\n\t\t\tfor(int j = 0; j < 9; j++)\n\t\t\t\tn[j] = sc.nextInt();\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tc = sc.next().charAt(0);\n\t\t\t\tswitch(c){\n\t\t\t\tcase 'R':\n\t\t\t\t\tnr[ir] = n[j];\n\t\t\t\t\tir++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G':\n\t\t\t\t\tng[ig] = n[j];\n\t\t\t\t\tig++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'B':\n\t\t\t\t\tnb[ib] = n[j];\n\t\t\t\t\tib++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t\t\tj = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(nr, ir);\n\t\t\tsort(ng, ig);\n\t\t\tsort(nb, ib);\n\t\t\tcount += judge(nr, ir) + judge(ng, ig) + judge(nb, ib);\n\t\t\tSystem.out.println(count == 3 ? 1 : 0);\n\t\t}\n\t}\n\tstatic void sort(int[] n, int m){\n\t\tint temp;\n\t\tfor(int i = 0; i < m-1; i++){\n\t\t\tfor(int j = i+1; j < m; j++){\n\t\t\t\tif(n[i] > n[j]){\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tn[i] = n[j];\n\t\t\t\t\tn[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic int judge(int[] n, int m){\n\t\tint count = 0;\n\t\tfor(int i = 0; i < m-2; i++){\n\t\t\tif(n[i] == n[i+1] && n[i+1] == n[i+2]){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}else if(n[i+2] - n[i+1] == 1 && n[i+1] - n[i] == 1){\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport static java.util.Arrays.*;\nimport static java.lang.Math.*;\n\n// AOJ 2102\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tint TC = sc.nextInt();\n\t\tfor (int tc = 0; tc < TC; tc++) {\n\t\t\tint[] is = new int[9];\n\t\t\tfor (int i = 0; i < 9; i++) is[i] = sc.nextInt();\n\t\t\tCard[] cs = new Card[9];\n\t\t\tfor (int i = 0; i < 9; i++) cs[i] = new Card(is[i], sc.next().charAt(0));\n\t\t\tsort(cs);\n\n\t\t\tboolean ok = true;\n\t\t\tfor (int i = 0; i < 7; i += 3) {\n\t\t\t\tboolean ok2 = false;\n\t\t\t\tif (cs[i].c == cs[i + 1].c && cs[i].c == cs[i + 2].c) {\n\t\t\t\t\tint a = cs[i].n, b = cs[i + 1].n, c = cs[i + 2].n;\n\t\t\t\t\tif (a == b && b == c) ok2 = true;\n\t\t\t\t\tif ((a + 1) == b && (b + 1) == c) ok2 = true;\n\t\t\t\t}\n\t\t\t\tif (!ok2) ok = false;\n\t\t\t}\n\t\t\tif (ok) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\t}\n}\n\nclass Card implements Comparable<Card> {\n\tint n;\n\tchar c;\n\tCard (int n, char c) {\n\t\tthis.n = n;\n\t\tthis.c = c;\n\t}\n\t\n\tpublic int compareTo(Card c) {\n\t\tif (this.c == c.c) {\n\t\t\treturn this.n - c.n;\n\t\t} else {\n\t\t\treturn this.c - c.c;\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tSystem.setIn(new FileInputStream(\"src/aoj2102/input.txt\"));\n//\t\t\tSystem.setOut(new PrintStream(new FileOutputStream(\"src/aoj2101/result.txt\")));\n\t\t} catch (FileNotFoundException e) {\n\t\t}\n\t\tnew Main().run();\n\t}\n\n\n\n\tScanner sc;\n\tvoid run() {\n\t\tsc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T-->0) {\n\t\t\tint[] num = new int[9];\n\t\t\tString colors = \"RGB\";\n\n\t\t\tint[][] hand = new int[3][9];\n\t\t\tfor (int i = 0; i < 9; i++) num[i] = sc.nextInt() - 1;\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tString coler = sc.next();\n\t\t\t\tint idx = colors.indexOf(coler.charAt(0));\n\t\t\t\thand[idx][num[i]]++;\n\t\t\t}\n\n\t\t\tint done = 0;\n\t\t\tfor (int coler = 0; coler < 3; coler++) {\n\t\t\t\tfor (int i = 0; i + 3 < 9; i++) while (hand[coler][i] > 0 && hand[coler][i+1] > 0 && hand[coler][i+2] > 0) {\n\t\t\t\t\thand[coler][i]--; hand[coler][i+1]--; hand[coler][i+2]--;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\t\t\t\tfor (int i = 0; i < 9; i++) while (hand[coler][i] >= 3){\n\t\t\t\t\thand[coler][i] -= 3;\n\t\t\t\t\tdone += 3;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tSystem.out.println(done == 9 ? 1 : 0);\n\t\t}\n\t}\n\n\n\tvoid tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ??????????????¶???????????¨?????¨???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tcard_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\t *\n\t\t * ?????????????????§??????????????°????????§??????????????? int result; System.out.println(result = (toolcnt\n\t\t * == 0)? 1:0);\n\t\t */\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶??????????????????????????°???????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void card_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3-1)?????£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\t\t\t// ????????????for???????????§??±???????????¨?????£?§£\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n\t\t\t\t\t\t\t\tcardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\tcardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// (3-2)??°???????????????????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Number = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Number);\n\t\t\t\t}\n\n\t\t\t\t// ????????????????????????????????±???????????¨????????¨??°??????????????§???????????????3R 2R 1R,????????????5G 4G 5G\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_Color = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_Color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tint number[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\t\tString color[] = { \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\" };\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tnumber[count1] = scan.nextInt();\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tcolor[count1] = scan.next();\n\t\t\t}\n\n\t\t\t// ???????????????????????????????????????????????°?????°?????£??????true??§?¬?????????????\n\t\t\tcolor_count c = new color_count();\n\n\t\t\t// ?????????????????? store???????????????????????¨??????color_count??????????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tc.count(color[count1]);\n\t\t\t}\n\n\t\t\t// ???????????? ??????????????°??§????????°true???\n\t\t\tboolean flg = c.color_result();\n\n\t\t\t// ???????????????true?????´????????°???????????? / false?????´??????0?????????\n\t\t\tif (flg) {\n\t\t\t\tcheck ck = new check();\n\t\t\t\t// number_store???store???????????????????????????\n\t\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\t\tck.number_store(number[count1]);\n\t\t\t\t}\n\n\t\t\t\t// ???????????????\n\t\t\t\tck.number_sort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.number_check();\n\n\t\t\t\t// ??????\n\t\t\t\tboolean flg2 = ck.result();\n\t\t\t\tif (flg2) {\n\t\t\t\t\tsb.append(\"1\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"0\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.print(new String(sb));\n\n\t}\n}\n\n// ????????°?????°???????????????\nclass color_count {\n\n\tint r = 0;\n\tint b = 0;\n\tint g = 0;\n\n\t// ????????????????????????\n\tcolor_count() {\n\t\t// r = 0;\n\t\t// b = 0;\n\t\t// g = 0;\n\t}\n\n\tvoid count(String color) {\n\t\tif (color.equals(\"R\")) {\n\t\t\tr++;\n\t\t} else if (color.equals(\"B\")) {\n\t\t\tb++;\n\t\t} else if (color.equals(\"G\")) {\n\t\t\tg++;\n\t\t}\n\t\t// System.out.println(\"r=\" + r + \" b=\" + b + \" g=\" + g);\n\t}\n\n\t// color?????\\??????\n\tboolean color_result() {\n\t\t// ????????????????????????????????°??§????????¨???true?????????\n\t\treturn (r % 3 == 0) & (b % 3 == 0) & (g % 3 == 0);\n\t}\n\n}\n\nclass check {\n\tList<Integer> number_list = new ArrayList<Integer>();\n\n\tint[] number = new int[9];\n\n\t// int number[] = {0,0,0,0,0,0,0,0,0};\n\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tint[] num = new int[9];\n\t// int num[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\n\t// ??°????????\\??????\n\tvoid number_store(int number) {\n\t\tnumber_list.add(number);\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t}\n\n\t// ??°??????????????????????????????????´?\n\tvoid number_sort() {\n\t\tCollections.sort(number_list);\n\t\tfor (int count = 0; count < 9; count++) {\n\t\t\tnumber[count] = number_list.get(count);\n\t\t}\n\n\t}\n\n\tvoid number_check() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// ?????????true ??? false??§??????\n\tboolean result() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\treturn num[0] == 0 & num[1] == 0 & num[2] == 0 & num[3] == 0 & num[4] == 0 & num[5] == 0 & num[6] == 0\n\t\t\t\t& num[7] == 0 & num[8] == 0;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.awt.print.Printable;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport javax.sound.midi.SysexMessage;\n\n\npublic class Cards {\n    public int num;\n    public int color;\n}\n\npublic class Main\n{      \n    public static void main(String[] args)\n    {\n\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int p=0;p<n;p++)\n        {\n            boolean win = true;\n\n            Cards cards[] = new Cards[9];\n\n            for(int i=0;i<n;i++)\n            {\n                for(int j=0;j<9;j++)\n                {\n                    cards[j].num=sc.nextInt();\n                }\n                for(int j=0;j<9;j++)\n                {\n                    String color = sc.next();\n                    if(color==\"R\")\n                        cards[j].color=1;\n                    if(color==\"G\")\n                        cards[j].color=2;\n                    if(color==\"B\")\n                        cards[j].color=3;                \n                }\n            \n                Arrays.sort( cards, (a,b)-> a.color - b.color );\n                int nowcolor=0;\n\n                \n                for(int j=0;j<9;j++)\n                {\n\n                    if(cards[j].color!=nowcolor)\n                    {\n                        nowcolor=cards[j].color;\n\n                        int nc_count=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor)\n                                nc_count++;\n                        }\n                        int nums[]= new int[nc_count];\n                        int nc_count2=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor){\n                                nums[nc_count2]==cards[k];\n                                nc_count2++;\n                            } \n                        }\n                        Arrays.sort(nums);\n                        int same=0;\n                        int sames[]=new int[4];\n                        int lastnum=-1; \n                    \n                        int samecount=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(lastnum==nums[k])\n                                same++;\n                            if(same%3==0)\n                            {\n                                samecount++;\n                                sames[semecount]=nums[k];\n                                \n                            }\n                            lastnum=nums[k];\n\n                        }\n                        for(int k=0;k<samecount;k++)\n                        {\n                            int zerocount =0;\n                            for(int l=0;l<9;l++){\n                                if(nums[l]==sames[k])\n                                    if(zerocount<3)\n                                        nums[l]=-1;\n                                    zerocount++;      \n                            }\n                        }\n                        Arrays.sort(nums);\n                        int lastnum2 = -1;\n                        int lastnumcount=0;\n                        int lastnumcount3=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(nums[k]-1==lastnum)\n                                lastnumcount++;\n                            if(lastnumcount==2)\n                                lastnumcount=0;\n                        }\n                        if(lastnumcount!=0)\n                            win = false;\n                    }\n                }   \n                    nums[j]=cards[j].num;          \n            }\n            if(win==true)\n                System.out.println(\"1\");\n            else\n                System.out.println(\"0\");\n        }\n        sc.close();\n    }   \n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji]++;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji]++;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji]++;\n        \t}\n        \t\n        \t\n        \t\n        \tint set = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (k < 7)\n        \t\t\t{\n        \t\t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0)\n                \t\t{\n                \t\t\tset++;\n                \t\t\tcard[j][k]--;\n                \t\t\tcard[j][k + 1]--;\n                \t\t\tcard[j][k + 2]--;\n                \t\t\tk--;\n                \t\t\tcontinue;\n                \t\t}\n        \t\t\t}\n        \t\t\telse if (card[j][k] >= 3)\n        \t\t\t{\n        \t\t\t\tset++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}if (set >= 3)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\n/**\n * <pre>\n *\n *AOJ Rummy?????????????????????????????????????????????????????°\n *\n *?????????????????????????????°??????\n * ????????????????????????????????°(?°?????¨??????´)\n * ????????????\n * ??¢ ??????(?¬??????????)?????¨??????(?????´???)\n *\n * ??????????\\?????§???????14???38???\n *\n * ??? ??°??????????????????????????¨?????´???\n * ??? ?????????????????????????????????\n * ??¢ ???????¢????\n * ??£ ????§?????????????????????????\n * ??? ??°??????????????????\n * ??\\ ???????¢????\n * ???????????????????\\?\n * ??§ ???????????????????????°??????\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n *\n */\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLESET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ???????????????????????????\n\t\t\tinputTheCardArr(cardArr, tmpNum, tmpColor);\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t *\n\t *\n\t * @param cardArr\n\t * @param transNum\n\t * @param transColor\n\t */\n\tprivate static void inputTheCardArr(ArrayList<UTRummyCard> cardArr, String tmpNum, String tmpColor) {\n\n\t\t// ?????°???????§£ ??°??????????´?\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\t// ?????°???????§£ ??????????´?\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t/**\n\t\t * ?????¶??? ??±??????????????°?????????????????????????????´??? ??±?????????????????????????????°??????????????´???\n\t\t *\n\t\t * ?????????????????¨?????¨?????????????????\\??? ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????\n\t\t *\n\t\t */\n\t\tString swi = (transNum.length >= transColor.length) ? \"LongNum\" : \"LongColor\";\n\t\t// ???????????????????????£???\n\t\tswitch (swi) {\n\t\tcase \"LongNum\":\n\t\t\tcaseOne(cardArr, transNum, transColor);\n\t\t\tbreak;\n\n\t\tcase \"LongColor\":\n\t\t\tcaseTwo(cardArr, transNum, transColor);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tSystem.out.println(\"??¨????????????\");\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate static void caseOne(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\t// ??°???, ?????????????????????\n\t\tfor (int cnt2 = ADDRESSPLUSZERO; cnt2 < transNum.length; cnt2++) {\n\t\t\t// ??±?????????\n\t\t\tif (cnt2 >= transColor.length) {\n\t\t\t\t// ???????????????????????¨?????¨??????????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), ZERO));\n\t\t\t} else {\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void caseTwo(ArrayList<UTRummyCard> cardArr, String[] transNum, String[] transColor) {\n\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t// ??±?????????\n\t\t\tif (cnt2 >= transNum.length) {\n\t\t\t\t// ??°???????????????????????¨?????¨????????°?????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(ADDRESSPLUSZERO, transColor[cnt2]));\n\t\t\t} else {\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ???????????¶???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t * @param count\n\t *            ????????¨??????\"0\"?????°???0????????\\?????????????????£?????¨????????°?????°??????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<UTRummyCard>() {\n\t\t\t@Override\n\t\t\tpublic int compare(UTRummyCard numA, UTRummyCard numB) {\n\t\t\t\t// ???????????°????????????????????´???????\\?????????????????????????\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\treturn  result = verificationCard(result, cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static int verificationCard(int result, ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t/**\n\t\t * @Warnning ???????????????????????´??????\n\t\t *\n\t\t *           ???????????????????????\\????????????????????¶????????????????????¨??§\n\t\t */\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ????????? ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLESET) {\n\t\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????????????????\n\t\treturn result;\n\t}\n\n\t/**\n\t * ????????°????????????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (2)????????°???????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// sameCard????????????????????????\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param cardArr\n\t *            ?????¶??????????????°\"0\"????????\\????????????????????????\n\t */\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\t/**\n\t\t * for??????????????¬???\n\t\t *\n\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t *\n\t\t * @param cnt1\n\t\t *            ???????????????????????? \"0\";\n\t\t * @param cnt2\n\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t * @param cnt3\n\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t *\n\t\t */\n\t\t// for???????????????????????????????????????????????¨???????????????????????????????????????????????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\t// (2)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t// (3)???????????§??????????????????????????£??????????????§??????????????????\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new UTRummyCard(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????????????????\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * ???????????????????????????????????°????????????(???????????????????????°??????????????¨????????????) ??? ????????????????????????????§????\n *\n * 1) ????????¨??????????????????????????????2?????\\?????¨????????????????????????????????????\n *\n * 2) ??¨??§??????????????????????????????????????°????????????????????????\n *\n * 3) ????????????????????????????????????\n *\n * 4) ??????????????????????????????????????????????????????????????????????????????\n *\n * 5) ???????????????????????????????????????????????????????????????????????¢\n *\n * 6) ????????§??????????????¨?????????????????°??????????????????????????????????????????????????? ?????????????????????????????????????????????\n *\n * 7)????????????????????°????????????????????????????????¨??????????§£????????????\n *\n * 8) ??????????´???´???????????????????????£????????????????????????????????????????????????????????£??¨?¢??????????????????????\n *\n * @author ?????????????????§???\n *\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶?????????????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨???????????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨ ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO\n\t *            ????????° ZERO\n\t */\n\tpublic UTRummyCard(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String??????\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return int?????§?????\\?????¨?????????????????°??????????????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????§?????\\?????¨????????¬???????????????????????°??????????´?\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @return String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * private????£?????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????§?????\\?????¨?????????????????????????????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t// memo\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ((color.equals(\"011\"))||(color.equals(\"122\"))||(color.equals(\"022\"))) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ((color.equals(\"001\")) || (color.equals(\"112\")) || (color.equals(\"002\"))) {\n\t\t\t\t\tif ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ((color.equals(\"000\")) || (color.equals(\"111\")) || (color.equals(\"222\"))) {\n\t\t\t\t\tif((cardNo[0]==cardNo[1]) && ((cardNo[1]+1)==cardNo[2]) && (cardNo[2]==cardNo[3]) && (cardNo[3]==cardNo[4]) && ((cardNo[4]+1)==cardNo[5]) && (cardNo[5]==cardNo[6]) && (cardNo[6]==cardNo[7]) && ((cardNo[7]+1)==cardNo[8])) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t\t// 1-2\n\t\t\t\t\telse if(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// 2-1\n\t\t\t\t\telse if ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\n\t\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"color : \" + color + \"  check1 :\" + check + \" , check2 :\" + check2);\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif((check==3) || (check2>=3)) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t* @return _number\n\t*/\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t* @param _number ??????????????? _number\n\t*/\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t* @return _colorNum\n\t*/\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t* @param _colorNum ??????????????? _colorNum\n\t*/\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t/**\n\t* ?????????????????????\n\t* @param color ????????¨????????????\n\t* @param num ???????????????\n\t*/\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        \n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji]++;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji]++;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji]++;\n        \t}\n        \t\n        \t\n        \t\n        \tint win = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0)\n            \t\t{\n            \t\t\twin++;\n            \t\t\tcard[j][k]--;\n            \t\t\tcard[j][k + 1]--;\n            \t\t\tcard[j][k + 2]--;\n            \t\t\tk--;\n            \t\t\tcontinue;\n            \t\t}\n        \t\t\telse if (card[j][k] >= 3)\n        \t\t\t{\n        \t\t\t\twin++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}\n        \tif (win >= 3)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji] += 1;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji] += 1;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji] += 1;\n        \t}\n        \t\n        \t\n        \t\n        \tint set = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (k < 7)\n        \t\t\t{\n        \t\t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0)\n                \t\t{\n                \t\t\tset++;\n                \t\t\tcard[j][k]--;\n                \t\t\tcard[j][k + 1]--;\n                \t\t\tcard[j][k + 2]--;\n                \t\t\tk--;\n                \t\t\t//System.out.println(\"a\");\n                \t\t\tcontinue;\n                \t\t}\n        \t\t\t}\n        \t\t\t//System.out.println(card[j][k]);\n        \t\t\tif (card[j][k] >= 1)\n        \t\t\t{\n        \t\t\t\tset++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n            \t\t\t//System.out.println(\"b\");\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}if (set >= 3)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tString str = scan.next();\n\t\t\t\tchar inpc=str.toCharArray();\n\t\t\t\tC[j*2][i] = inpc;\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *AOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ?????????????????°\n\t\tint cardhuda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * ?????°???????§£ ??°??????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param transColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < cardhuda; cnt2++) {\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * @param result\n\t\t\t *            ?????????????????????????´???´???\n\t\t\t */\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\t\t// ???????????????\n\t\toutputAnswer(answer);\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????\n\t *\n\t * @param answer\n\t *            ?????????????´???´???\n\t */\n\tprivate static void outputAnswer(ArrayList<Integer> answer) {\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static int utRummy(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????0???????????????\n\t\tint result = 0;\n\n\t\t// ????????????????????°???????????????\n\t\tcardNumSort(cardArr);\n\t\t// ?????????????????????????????????\n\t\tcardColorSort(cardArr);\n\n\t\t//?????£?¶?\n\t\tserialCard(cardArr);\n\n\t\t//????????°?????????\n\t\tsameCard(cardArr);\n\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false)\n\t\t\t\ttoolcnt++;\n\t\t}\n\t\treturn result= toolcnt == 0 ? 1 : 0;\n\n\t}// utRummy????????????????????????\n\n\tprivate static void sameCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t//?????£?¶???????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void serialCard(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\t\t\t\t\t//?????£?¶???????\n\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t\t\tfor (int chk = cnt1; chk < cnt3 + 1; chk++) {\n\n\t\t\t\t\t\t\t\t\tcardArr.get(chk).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardColorSort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardColorSort????????????????????????\n\n\t/**\n\t * ??????????????´???\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNumSort(ArrayList<UTRummyCard> cardArr) {\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ?????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardSort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\tpublic UTRummyCard() {\n\n\t}\n\n\tpublic UTRummyCard(String white) {\n\t\tthis.rearColor = white;\n\t}\n\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\n//Rummy\npublic class Main {\n\n\tint[] a, c;\n\tint[][] as;\n\tchar[] s;\n\t\n\tboolean dfs(int k){\n\t\tif(k==9){\n\t\t\tfor(int i=0;i<3;i++)if(s[as[i][0]]!=s[as[i][1]]||s[as[i][1]]!=s[as[i][2]])return false;\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tint[] t = new int[3];\n\t\t\t\tfor(int j=0;j<3;j++)t[j]=a[as[i][j]];\n\t\t\t\tArrays.sort(t);\n\t\t\t\tif(!(t[0]==t[1]&&t[1]==t[2]||t[0]+1==t[1]&&t[1]+1==t[2]))return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(c[i]==3)continue;\n\t\t\tas[i][c[i]] = k;\n\t\t\tc[i]++;\n\t\t\tif(dfs(k+1))return true;\n\t\t\tc[i]--;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\ta = new int[9]; s = new char[9]; c = new int[3];\n\t\t\tfor(int i=0;i<9;i++)a[i]=sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++)s[i]=sc.next().charAt(0);\n\t\t\tas = new int[3][3];\n\t\t\tSystem.out.println(dfs(0)?1:0);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew AOJ2102().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] card = new int[9];\n\t\t\tint[][] color = new int[3][9];\n\t\t\tint[] rgb = new int[3]; // ???????????°\n\t\t\tint set = 0;\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcard[j] = sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = sc.next();\n\t\t\t\tswitch(s.charAt(0)){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcolor[0][rgb[0]] = card[j];\n\t\t\t\t\t\trgb[0]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcolor[1][rgb[1]] = card[j];\n\t\t\t\t\t\trgb[1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcolor[2][rgb[2]] = card[j];\n\t\t\t\t\t\trgb[2]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tfor(int k = 0; k < rgb[j]; k++){\n\t\t\t\t\tfor(int l = k+1; l < rgb[j]; l++){\n\t\t\t\t\t\tfor(int m = l+1; m < rgb[j]; m++){\n\t\t\t\t\t\t\tif(color[j][k] != 0 && color[j][l] != 0 && color[j][m] != 0){\n\t\t\t\t\t\t\t\tint[] tmp = new int[3];\n\t\t\t\t\t\t\t\ttmp[0] = color[j][k];\n\t\t\t\t\t\t\t\ttmp[1] = color[j][l];\n\t\t\t\t\t\t\t\ttmp[2] = color[j][m];\n\t\t\t\t\t\t\t\tArrays.sort(tmp);\n\t\t\t\t\t\t\t\tif((tmp[0] == tmp[1] && tmp[1] == tmp[2]) || (tmp[0]+1 == tmp[1] && tmp[1]+1 == tmp[2])){\n\t\t\t\t\t\t\t\t\tcolor[j][k] = 0;\n\t\t\t\t\t\t\t\t\tcolor[j][l] = 0;\n\t\t\t\t\t\t\t\t\tcolor[j][m] = 0;\n\t\t\t\t\t\t\t\t\tset++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(set == 3) System.out.println(\"1\");\n\t\t\telse System.out.println(\"0\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\t//??\\????????°?????????\n\t\tint intLoop = scan.nextInt();\n\t\t//????¨?????´???´????¢????\n\t\tArrayList<int[]> numList = new ArrayList<int[]>();\n\t\tArrayList<String[]> colorList = new ArrayList<String[]>();\n\t\tArrayList<Integer> ansList = new ArrayList<Integer>();\n\t\t//??\\???\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint[] intNum = new int[9];\n\t\t\tString[] strCol = new String[9];\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tintNum[j] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tstrCol[j] = scan.next();\n\t\t\t}\n\t\t\tnumList.add(intNum);\n\t\t\tcolorList.add(strCol);\n\t\t}\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint intCount = 0;\n\t\t\tint[] arrayR = new int[9];\n\t\t\tint[] arrayG = new int[9];\n\t\t\tint[] arrayB = new int[9];\n\t\t\tint[] intNum = numList.get(i);\n\t\t\tString[] strCol = colorList.get(i);\n\t\t\t//RGB???????????\\?????????\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tString s = strCol[j];\n\t\t\t\tif(\"R\".equals(s)){\n\t\t\t\t\tarrayR[intNum[j] - 1]++;\n\t\t\t\t}else if(\"G\".equals(s)){\n\t\t\t\t\tarrayG[intNum[j] - 1]++;\n\t\t\t\t}else if(\"B\".equals(s)){\n\t\t\t\t\tarrayB[intNum[j] - 1]++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t/*for(int j = 0; j < 9; j++){\n\t\t\t\tSystem.out.println((j + 1) + \" = R : \" + arrayR[j] + \" G : \" + arrayG[j] + \" B : \" + arrayB[j]);\n\t\t\t}*/\n\t\t\tfor(int j = 0; j < 7; j++){\n\t\t\t\tif(arrayR[j] != 0 && arrayR[j+1] != 0 && arrayR[j+2] !=0){\n\t\t\t\t\tarrayR[j]--;\n\t\t\t\t\tarrayR[j+1]--;\n\t\t\t\t\tarrayR[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayG[j] != 0 && arrayG[j+1] != 0 && arrayG[j+2] !=0){\n\t\t\t\t\tarrayG[j]--;\n\t\t\t\t\tarrayG[j+1]--;\n\t\t\t\t\tarrayG[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayB[j] != 0 && arrayB[j+1] != 0 && arrayB[j+2] !=0){\n\t\t\t\t\tarrayB[j]--;\n\t\t\t\t\tarrayB[j+1]--;\n\t\t\t\t\tarrayB[j+2]--;\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\n\t\t\t\tif(arrayR[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayG[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t\tif(arrayB[j] == 3){\n\t\t\t\t\tintCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(intCount == 3){\n\t\t\t\tansList.add(1);\n\t\t\t}else{\n\t\t\t\tansList.add(0);\n\t\t\t}\n\n\t\t}\n\n\t\t//??????\n\t\tfor(int i = 0; i < ansList.size(); i++){\n\t\t\tSystem.out.println(ansList.get(i));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n/*\n \n Main\n \n */\n\nimport java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main\n{\n    \n    int T;\n    int[] card = new int[9];\n    \n    public void Main()\n    {\n        \n    }\n    \n    private boolean isGoodSet(int a, int b, int c)\n    {\n        return isSameNumber(a, b, c) || isSequence(a, b, c);\n    }\n    \n    private boolean isSameNumber(int a, int b, int c)\n    {\n        return a == b && b == c;\n    }\n    \n    private boolean isSequence(int a, int b, int c)\n    {\n        return (a+2) == (b+1) && (b+1) == c;\n    }\n    \n    private boolean isAllGoodSet()\n    {\n        return\n        (\n            isGoodSet(card[0], card[1], card[2])\n            && isGoodSet(card[3], card[4], card[5])\n            && isGoodSet(card[6], card[7], card[8])\n        );\n    }\n    \n    int win()\n    {\n        Arrays.sort(card);\n        \n        do\n        {\n            if( isAllGoodSet() ) { return 1; }\n            \n        } while (next_permutation(card));\n        \n        return 0;\n    }\n    \n    public boolean next_permutation(int A[])\n    {\n        int first = 0;\n        int last = A.length;\n        \n        if (first == last)\n        {\n            return false;\n        }\n        \n        int i = first;\n        ++i;\n        \n        if (i == last)\n        {\n            return false;\n        }\n        \n        i = last;\n        --i;\n        \n        for(;;)\n        {\n            int ii = i;\n            --i;\n            \n            if (A[i] < A[ii])\n            {\n                int j = last;\n                while (!(A[i] < A[--j])){}\n                swap(A, i, j);\n                reverse(A, ii, last);\n                return true;\n            }\n            if (i == first)\n            {\n                reverse(A, first, last);\n                return false;\n            }\n        }\n    }\n    \n    private void swap(int A[], int a, int b)\n    {\n        int buff;\n        buff=A[a];\n        A[a]=A[b];\n        A[b]=buff;\n    }\n    \n    private void reverse(int A[] ,int first, int last)\n    {\n        while(first < --last)\n        {\n            swap(A, first, last);\n            first++;\n        }\n    }\n    \n    public static void main(String[] args)\n    {\n        Main main = new Main();\n        Scanner scan = new Scanner(System.in);\n        \n        int T = scan.nextInt();\n        for (int t=0; t<T; ++t)\n        {\n            for (int i=0; i<9; ++i)\n            {\n                main.card[i] = scan.nextInt();\n            }\n\n            \n            String color;\n            for (int i=0; i<9; ++i)\n            {\n                color = scan.next();\n                if (color.equals(\"G\")) { main.card[i] += 10; }\n                else if (color.equals(\"B\")) { main.card[i] += 20; }\n            }\n            \n            int ans = main.win();\n            System.out.println(ans);\n        \n        }\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        int[] win = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji]++;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji]++;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji]++;\n        \t}\n        \t\n        \t\n        \t\n        \tint set = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (k < 7)\n        \t\t\t{\n        \t\t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0)\n                \t\t{\n                \t\t\tset++;\n                \t\t\tcard[j][k]--;\n                \t\t\tcard[j][k + 1]--;\n                \t\t\tcard[j][k + 2]--;\n                \t\t\tk--;\n                \t\t\tcontinue;\n                \t\t}\n        \t\t\t}\n        \t\t\telse if (card[j][k] >= 3)\n        \t\t\t{\n        \t\t\t\tset++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}\n        \tif (set >= 3)\n        \t\twin[i]++;\n        }\n        for (int i = 0; i < n; i++)\n        {\n        \tif (win[i] >= 1)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        int n = Integer.parseInt(br.readLine());\n        int[] win = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n        \tString[] sinput = br.readLine().split(\" \");\n        \tString[] color = br.readLine().split(\" \");\n        \tint[][] card = new int[3][9];\n        \t\n        \tfor (int j = 0; j < 9; j++)\n        \t{\n        \t\tint suji = Integer.parseInt(sinput[j]) - 1;\n        \t\t\n        \t\tif (color[j].equals(\"R\"))\n        \t\t\tcard[0][suji]++;\n        \t\telse if (color[j].equals(\"G\"))\n        \t\t\tcard[1][suji]++;\n        \t\telse if (color[j].equals(\"B\"))\n        \t\t\tcard[2][suji]++;\n        \t}\n        \t\n        \t\n        \t\n        \tint set = 0;\n        \tfor (int j = 0; j < 3; j++)\n        \t{\n        \t\tfor (int k = 0; k < 9; k++)\n        \t\t{\n        \t\t\tif (card[j][k] > 0 && card[j][k + 1] > 0 && card[j][k + 2] > 0 && k < 7)\n            \t\t{\n            \t\t\tset++;\n            \t\t\tcard[j][k]--;\n            \t\t\tcard[j][k + 1]--;\n            \t\t\tcard[j][k + 2]--;\n            \t\t\tk--;\n            \t\t\tcontinue;\n            \t\t}\n        \t\t\telse if (card[j][k] >= 3)\n        \t\t\t{\n        \t\t\t\tset++;\n            \t\t\tcard[j][k] -= 3;\n            \t\t\tk--;\n        \t\t\t}\n        \t\t}\n        \t\t\n        \t}\n        \tif (set >= 3)\n        \t\twin[i]++;\n        }\n        for (int i = 0; i < n; i++)\n        {\n        \tif (win[i] >= 1)\n        \t\tSystem.out.println(1);\n        \telse\n        \t\tSystem.out.println(0);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new char[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tC[j*2][i] = scan.next().toCharArray();\n\t\t\t}\n\t\t}\n\t\t\n\t\tchar coler[] = {'R','G','B'};\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\t// 答えの格納場所\n\t\tArrayList<Integer> intAryAnswer = new ArrayList<Integer>();\n\n\t\t// 1行目を取得\n\t\ttry {\n\t\t\tBufferedReader insBR = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t\tString strNum = insBR.readLine();\n\n\t\t\t// DataSetNumは何回判定するか\n\t\t\tint DataSetNum = Integer.parseInt(strNum);\n\n\t\t\t//判断する回数まわす\n\t\t\tfor (int i = 0; i < DataSetNum; i++) {\n\n\t\t\t\t//カードの数字とシンボルを取得\n\t\t\t\tString strNumLine = insBR.readLine();\n\t\t\t\tString strSymbolLine = insBR.readLine();\n\n\t\t\t\t//人クラスを作成　数字とシンボルを引数に\n\t\t\t\tPlayer player = new Player(strNumLine, strSymbolLine);\n\n\t\t\t\t//勝利条件に満たせば1　満たさなければ0\n\t\t\t\tint intJugmet = player.Judgment();\n\n\t\t\t\t//答えを格納\n\t\t\t\tintAryAnswer.add(intJugmet);\n\n\t\t\t}\n\n\t\t\t// 答えが何個あるか取得\n\t\t\tint intSize = intAryAnswer.size();\n\n\t\t\t// 出力\n\t\t\tfor (int i = 0; i < intSize; i++) {\n\t\t\t\tSystem.out.println(intAryAnswer.get(i));\n\t\t\t}\n\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t}\n\n\n\t}\n\n\tpublic static class Player{\n\n\n\t\t/**\n\t\t * カードR\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardR = new ArrayList<Integer>();\n\t\tprivate int[] CardR = new int[9];\n\n\t\t/**\n\t\t * カードG\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardG = new ArrayList<Integer>();\n\t\tprivate int[] CardG = new int[9];\n\n\t\t/**\n\t\t * カードB\n\t\t * CardRとCardGとCardBを合わせて9枚になる\n\t\t */\n//\t\tprivate ArrayList<Integer> CardB = new ArrayList<Integer>();\n\t\tprivate int[] CardB = new int[9];\n\n\t\t/**\n\t\t * 引数を受け取り　フィールド値に格納する\n\t\t * @param strNumLine　カードの数字の羅列　例:1 2 3 4 5 6 7 8 9\n\t\t * @param strSymbolLine　カードのシンボルの羅列 例:R R R G G G B B B\n\t\t */\n\t\tPlayer(String strNumLine, String strSymbolLine) {\n\n\t\t\t// 分解\n\t\t\tString[] strAryNum = strNumLine.split(\" \");\n\n\t\t\tString[] strArySymbol = strSymbolLine.split(\" \");\n\n\t\t\tint intNum = 0;\n\n\t\t\tint intR = 0;\n\n\t\t\tint intG = 0;\n\n\t\t\tint intB = 0;\n\n\t\t\t//分解したものを振り分ける\n\t\t\tfor(int i = 0; i < strAryNum.length; i++) {\n\n\t\t\t\t//CardRとCardGとCardBを合わせて9枚になる\n\t\t\t\tif(strArySymbol[i].equals(\"R\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardR.add(intNum);\n\t\t\t\t\t CardR[intR] = intNum;\n\n\t\t\t\t\t intR++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"G\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardG.add(intNum);\n\t\t\t\t\t CardG[intG] = intNum;\n\n\t\t\t\t\t intG++;\n\n\t\t\t\t}else if(strArySymbol[i].equals(\"B\")) {\n\n\t\t\t\t\t intNum = Integer.parseInt(strAryNum[i]);\n//\t\t\t\t\t CardB.add(intNum);\n\t\t\t\t\t CardB[intB] = intNum;\n\n\t\t\t\t\t intB++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\t/**\n\t\t * 勝利条件を判定する\n\t\t * @return intAnswer 勝利なら1　勝利に満たさないなら0\n\t\t */\n\t\tint Judgment() {\n\n\t\t\tArrays.sort(CardR);\n\t\t\tArrays.sort(CardG);\n\t\t\tArrays.sort(CardB);\n\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardR[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardG[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardB[a]);\n//\t\t\t}\n//\t\t\tSystem.out.println();\n\n\t\t\tCardR = pairs3Remove(CardR);\n\t\t\tCardG = pairs3Remove(CardG);\n\t\t\tCardB = pairs3Remove(CardB);\n\n\t\t\tCardR = ThreeConsecutiveNumber(CardR);\n\t\t\tCardG = ThreeConsecutiveNumber(CardG);\n\t\t\tCardB = ThreeConsecutiveNumber(CardB);\n\n\t\t\tint intNum = 0;\n\n\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardR[a]);\n\n\t\t\t\tif(CardR[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\n\t\t\t\tif(CardG[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\n\t\t\t\tif(CardB[a] != 0) {\n\t\t\t\t\tintNum++;\n\t\t\t\t}\n\t\t\t}\n\n//\t\t\tSystem.out.println();\n//\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardG[a]);\n//\t\t\t}\n//\n//\t\t\tSystem.out.println();\n//\t\t\tfor(int a = 0; a < 9; a++) {\n//\t\t\t\tSystem.out.print(CardB[a]);\n//\t\t\t}\n//\t\t\tSystem.out.println();\n\n\t\t\tif(intNum == 0) {\n\t\t\t\tintNum = 1;\n\t\t\t} else {\n\t\t\t\tintNum = 0;\n\t\t\t}\n\n\n\t\t\treturn intNum;\n\n\t\t}\n\n\n\n\n\t}\n\n\tpublic static int[] pairs3Remove(int[] Card) {\n\n\t\tint count = 0;\n\n\t\t//対子の３つを格納する場所\n\t\tint[] count3Toitu = new int[9];\n\n\t\tint count3ToituCount = 0;\n\n\t\tfor(int i = 0; i < 9; i++) {\n\t\t\tfor(int j = 0; j < 9; j++) {\n\t\t\t\tif(Card[j] == i + 1) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tcount3Toitu[count3ToituCount] = j + 1;\n\t\t\t\t\tcount3ToituCount++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(count >= 3) {\n\n\t\t\t\tint count2 = 0;\n\n\t\t\t\tfor(int k = 0; k < 9; k++) {\n\t\t\t\t\tif(count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tint intNum = count3Toitu[k];\n\t\t\t\t\tCard[intNum - 1] = 0;\n\n\t\t\t\t\tcount2 ++;\n\t\t\t\t}\n\n\t\t\t\tcount2 = 0;\n\n\n\t\t\t}\n\t\t\tcount = 0;\n\n\t\t\tcount3ToituCount = 0;\n\n\n\t\t}\n\n\t\treturn Card;\n\n\n\t}\n\n\tpublic static int[] ThreeConsecutiveNumber(int[] Card) {\n\n\t\tint[][] count3Zyuntu = new int[3][2];\n\n\t\tint count3ZyuntuCount = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile(i < 7) {\n\n\t\t\touter:\n\t\t\twhile(true){\n\n\t\t\t\tif(k == 4) {\n\t\t\t\t\tint intNum1 = count3Zyuntu[0][1];\n\t\t\t\t\tint intNum2 = count3Zyuntu[1][1];\n\t\t\t\t\tint intNum3 = count3Zyuntu[2][1];\n\t\t\t\t\tCard[intNum1] = 0;\n\t\t\t\t\tCard[intNum2] = 0;\n\t\t\t\t\tCard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(Card);\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif(j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(Card[j] == k + i) {\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][0] = k + i;\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][1] = j;\n\t\t\t\t\tcount3ZyuntuCount++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcount3ZyuntuCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tclass Pair implements Comparable<Pair> {\n\t\tint num;\n\t\tchar color;\n\n\t\tPair(int num, char color) {\n\t\t\tthis.num = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.color != o.color ? this.color - o.color : this.num - o.num;\n\t\t}\n\t}\n\n\tboolean check(Pair a, Pair b, Pair c) {\n\t\tif (a.color != b.color || b.color != c.color) {\n\t\t\treturn false;\n\t\t}\n\t\tif (a.num == b.num && b.num == c.num) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.num + 1 == b.num && b.num + 1 == c.num) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tboolean check(Pair[] p, int k, boolean[] use) {\n\t\tif (9 <= k) {\n\t\t\treturn true;\n\t\t}\n\t\tif (use[k]) {\n\t\t\tif (check(p, k + 1, use)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tif (use[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\t\tif (use[j]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (check(p[k], p[i], p[j])) {\n\t\t\t\t\t\tuse[k] = use[i] = use[j] = true;\n\t\t\t\t\t\tif (check(p, k + 1, use)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuse[k] = use[i] = use[j] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\n\t\tfor (int T = sc.nextInt() - 1; 0 <= T; T--) {\n\t\t\tint n = 9;\n\t\t\tPair[] p = new Pair[n];\n\t\t\tint[] num = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tnum[i] = sc.nextInt();\n\t\t\t}\n\t\t\tchar[] color = new char[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tcolor[i] = sc.next().charAt(0);\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tp[i] = new Pair(num[i], color[i]);\n\t\t\t}\n\t\t\tArrays.sort(p);\n\t\t\tif (check(p, 0, new boolean[9])) {\n\t\t\t\tSystem.out.println(1);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint[][] cards=new int[3][9];\n\t\tint n=sc.nextInt();\n\t\tint[] num=new int[9];\n\t\tchar[] color=new char[9];\n\t\tboolean win;\n\t\tfor(int i=0;i<n;i++){\n\t\t\twin=true;\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tfor(int k=0;k<9;k++){\n\t\t\t\t\tcards[j][k]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tnum[j]=sc.nextInt();\n\t\t\t}\n\t\t\tfor(int j=0;j<9;j++){\n\t\t\t\tcolor[j]=sc.next().charAt(0);\n\t\t\t\tswitch(color[j]){\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tcards[0][num[j]-1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tcards[1][num[j]-1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tcards[2][num[j]-1]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tif(win==false){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor(int k=0;k<9;k++){\n\t\t\t\t\tif(cards[j][k]!=0){\n\t\t\t\t\t\tif(cards[j][k]>=3){\n\t\t\t\t\t\t\tcards[j][k--]-=3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(k<7){\n\t\t\t\t\t\t\tif(cards[j][k+1]>=cards[j][k]&&cards[j][k+2]>=cards[j][k]){\n\t\t\t\t\t\t\t\tcards[j][k+1]-=cards[j][k];\n\t\t\t\t\t\t\t\tcards[j][k+2]-=cards[j][k];\n\t\t\t\t\t\t\t\tcards[j][k]=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\twin=false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\twin=false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(win){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][];\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new int[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tC[j*2][i] = scan.nextChar();\n\t\t\t}\n\t\t}\n\t\t\n\t\tChar coler[]={'R','G','B'};\n\t\t\n\t\t\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\n\npublic class Main{\n\n\t/**\n\t * ????????°????????????3????????????????????°?????¶???\n\t */\n\tprivate static final int TRIPLECARDSET = 9;\n\n\t/**\n\t * ?????¶??????????????????????????????????????????????????????\n\t */\n\tprivate static final String ZERO = \"0\";\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSZERO = 0;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSONE = 1;\n\n\t/**\n\t * ??????for??????????????????????¨?????????????????????????????????????????????????????????°\n\t */\n\tprivate static final int ADDRESSPLUSTWO = 2;\n\n\t/**\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws NumberFormatException\n\t *\n\t * @throws IOException\n\t *             try-catch???????????????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// ????????????????´???´???\n\t\tArrayList<CardTC> cardArr = new ArrayList<CardTC>();\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = ADDRESSPLUSZERO; cnt1 < set; cnt1++) {\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\tfor (int cnt2 = 0; cnt2 < transColor.length; cnt2++) {\n\t\t\t\tcardArr.add(new CardTC(Integer.parseInt(transNum[cnt2]), transColor[cnt2]));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = utRummy(cardArr);\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\n\t\t\t// ??¢??¬????????????????????????????????§??????????????§?????????????\\?\n\t\t\tcardArr.clear();\n\n\t\t}\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\t\t}\n\n\t}// ?????????????????????????????????\n\n\tprivate static int utRummy(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\t// ?????????0???????????????\n\t\tint result = ADDRESSPLUSZERO;\n\t\t// ???????????????0???????????????\n\t\tint count = ADDRESSPLUSZERO;\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\t// 3??£?¶????????????????????????°?¶????\n\t\tserialCard(cardArr);\n\n\t\t// ??????????????????3???????????°?¶????\n\t\tsameCard(cardArr);\n\n\t\t// ???????????????????????´???\n\t\tCollections.sort(cardArr, new Comparator<CardTC>() {\n\t\t\t@Override\n\t\t\tpublic int compare(CardTC numA, CardTC numB) {\n\t\t\t\treturn numA.getFrontnumber() - numB.getFrontnumber();\n\t\t\t}\n\t\t});\n\n\t\tfor (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {\n\n\t\t\t/**\n\t\t\t * ?????¶????????????????????????????????§???????????????ZERO????????\\?????????????????????????????£?????????\n\t\t\t */\n\t\t\tif (cardArr.get(cnt).getRearColor() == ZERO) {\n\n\t\t\t\t// ?????\\?????????????????????????????°?????°??????\n\t\t\t\tcount++;\n\n\t\t\t\t// ?????¶??????????????°???????????????\n\t\t\t\t// ?????????????????°??????????¶????????????¨???????????????????????????\n\t\t\t\tif (count == TRIPLECARDSET) {// ?????§??????????????????\n\t\t\t\t\tresult = ADDRESSPLUSONE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}// utRummy????????????\n\n\tprivate static void sameCard(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3).getFrontnumber()) {\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).contains(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).contains(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°??????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}// sameCard????????????\n\n\tprivate static void serialCard(ArrayList<CardTC> cardArr) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - ADDRESSPLUSTWO; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < cardArr.size() - ADDRESSPLUSONE; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\n\n\t\t\t\t\t\t// (1)3??£?¶??????°????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2) {\n\n\t\t\t\t\t\t\t// ???????????¨\n\t\t\t\t\t\t\tSystem.out.println(\"????????°????????????????????????\" + cnt1 + \",\" + cnt2 + \",\" + cnt3 + \"!!!!\");\n\n\t\t\t\t\t\t\t// (3)???????????§?????????????????????????????£??????????????§??????????????°\n\t\t\t\t\t\t\tif (!(cardArr.get(cnt1).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt2).getRearColor()).equals(ZERO)\n\t\t\t\t\t\t\t\t\t&& !(cardArr.get(cnt3).getRearColor()).equals(ZERO)) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcardArr.remove(cnt1);\n\t\t\t\t\t\t\t\tcardArr.add(cnt1, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt2);\n\t\t\t\t\t\t\t\tcardArr.add(cnt2, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t\tcardArr.remove(cnt3);\n\t\t\t\t\t\t\t\tcardArr.add(cnt3, (new CardTC(ZERO)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// serialCard????????????\n}// DebugRu????????????\n\nclass CardTC {\n\n\t/**\n\t * int ??????????????°?????????~????????§?????°????????\\??????????????°??¶??????????????????????????\\????????±????????\\??????\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ?????????????????????????¨????????????????????????????????????\\????????±????????\\??????\n\t */\n\tprivate String rearColor = \"\";\n\n\tpublic CardTC() {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t}\n\t/**\n\t * ????????°?????????????????????????????´???,???????????¨?????¨\n\t * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????\n\t *\n\t * @param ZERO ????????° ZERO\n\t */\n\tpublic CardTC(String ZERO) {\n\t\trearColor = ZERO;\n\t}\n\n\n\tpublic CardTC(int num, String color) {\n\t\t// TODO ?????????????????????????????????????????????????????????\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t}\n\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n}// CardTC????????????"
  },
  {
    "language": "Java",
    "code": "class Main{\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint T = scan.nextInt();\n\t\tint N[][] = new int[T][]\n\t\tchar C[][] = new char[T][];\n\t\tfor(int j=0;j<T;j++){\n\t\t\tN[j] = new int[9];\n\t\t\tC[j] = new int[9];\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tN[j][i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\tC[j*2][i] = scan.nextChar();\n\t\t\t}\n\t\t}\n\t\t\n\t\tChar coler[]={'R','G','B'};\n\t\t\n\t\t\n\n\t\tfor(int j=0;j<T;j++){\n\t\t\tint a[] = new int[10];\n\t\t\tint count=0;\n\t\t\tint pea;\n\t\t\tboolean f = false;\n\t\t\tfor(int cnum=0;cnum<3;cnum++){\n\t\t\t\tfor(int i=0;i<9;i++){\n\t\t\t\t\tif(C[j][i] == coler[cnum]){\n\t\t\t\t\t\t\n\t\t\t\t\t\ta[count]=N[j][i];\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count>2){\n\t\t\t\t\tArrays.sort(a);\n\t\t\t\t\tfor(int x=0;a[x+2]==0;x++){\n\t\t\t\t\t\tif((a[x] == a[x+1] && a[x] == a[x+2]) || (a[x] == a[x+1]-1 && a[x] == a[x+2]-2)){\n\t\t\t\t\t\t\tpea++;\n\t\t\t\t\t\t\tx+=2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(pea>=3){\n\t\t\t\t\t\tf=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\t\n"
  },
  {
    "language": "Java",
    "code": "package Getting_Started;\n\nimport java.util.*;\n\npublic class Rummy_Simple {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\t// CheckResult????????????????§?\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t@SuppressWarnings(\"resource\")\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// R,G,B???????????\\??????????????°\n\t\tString colorStr = \"\";\n\n\t\t// R,G,B???????????§false?????¨???+1???????????????\n\t\tint flgCount = 0;\n\n\t\t// CheckResult???????????????????????????????????????\n\t\tCheckResult ck = new CheckResult();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\n\t\t\t// CheckResult?????????????????????????????????????´?\n\t\t\tfor (int i = 0; i < COLUMN_NUMBER; i++) {\n\t\t\t\tck.scanNumber[i] = scan.nextInt();\n\t\t\t}\n\t\t\tfor (int i = 0; i < COLUMN_NUMBER; i++) {\n\t\t\t\tck.scanColor[i] = scan.next();\n\t\t\t}\n\n\t\t\t// R,G,B????????????????????????????????????????????????\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\tcase 0:// R(??¬??????)?????´??? colorStr???R?????????\n\t\t\t\t\tcolorStr = \"R\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:// G(??°?????????)?????´??? colorStr???G?????????\n\t\t\t\t\tcolorStr = \"G\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:// B(?????????)?????´??? colorStr???B?????????\n\t\t\t\t\tcolorStr = \"B\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// colorStr(???)?????????????????°??????CheckResult????????????numberStor?????????????????????\n\t\t\t\tck.getColorToNumber(colorStr);\n\n\t\t\t\t// ????????????(true)?????¨???flgCount???+1??????\n\t\t\t\tif (!ck.numberCheck()) {\n\t\t\t\t\tflgCount++;\n\t\t\t\t}\n\t\t\t\tck.numClear();\n\t\t\t\t//System.out.println(flgCount);\n\t\t\t}\n\t\t\t// ?????? flgCount?????????1??\\????????¨???1?????????\n\t\t\tsb.append(flgCount == 0 ? \"1\\n\" : \"0\\n\");\n\n\t\t\t// flgCount????????????\n\t\t\tflgCount = 0;\n\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// --------------------check?????????------------------------------------\n\nclass CheckResult {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\tfinal static int COLUMN_NUMBER = 9;\n\n\t// Scanner????????\\??????????????????????´?????????????\n\tpublic int scanNumber[] = new int[COLUMN_NUMBER];\n\tpublic String scanColor[] = new String[COLUMN_NUMBER];\n\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tprivate int[] num = new int[COLUMN_NUMBER];\n\n\t/**\n\t * color??????????????????scanColor??¨???????????§????????°????????????scanNumber?????????CheckResult????????????numberStore???????????????\n\t * @param color\n\t */\n\tpublic void getColorToNumber(String color) {\n\t\t// color??§??????????????????????????§????????°scanColor???????????????scanNumber?????????CheckResult????????????numberStore???????????????\n\t\tfor (int count1 = 0; count1 < COLUMN_NUMBER; count1++) {\n\t\t\tif (scanColor[count1].equals(color)) {\n\t\t\t\tnumberStore(scanNumber[count1]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * getColorNumber??????????????§?????¶????????£?????????(??????)num[]???????´?\n\t * (??????)num[]?????°????????°???????´?????????????\n\t * @param number\n\t */\n\tprivate void numberStore(int number) {\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t}\n\n\t/**\n\t * ??\\??????????????°?????§????????????3?????\\???????????´?????¨?????£???????????£???????????´?????? ?????????????????? ??????????????´??????true????????????????????´??????false?????????\n\t */\n\tpublic boolean numberCheck() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < COLUMN_NUMBER; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isNumberResult();\n\n\t}\n\n\t/**\n\t * num[9]???????????¨????????????0??§????????¨???true????????????1?????§???1??\\???????????°false?????????\n\t * @return\n\t */\n\t// ?????????true ??? false??§??????\n\tprivate boolean isNumberResult() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\tboolean ret = true;\n\t\tfor (int n : num) {\n\t\t\tif (n != 0) {\n\t\t\t\tret = false;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\t\n\t/**\n\t * ??????num??????????????????\n\t */\n\tpublic void numClear(){\n\t\tnum = new int[COLUMN_NUMBER];\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\n\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t //????????°???????????????\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\n\n\t\t\t //???????????´???\n\t\t\t for(int x = 0; x < mai; x++){\n\t\t\t\t \n\t\t        for(int y = 0; y < mai - 1; y++){\n\t\t        \t\n\t\t          if(hand_no[y] > hand_no[y + 1]){\n\t\t        \t  \n\t\t            int temp = hand_no[y + 1];\n\t\t            hand_no[y] = hand_no[y + 1];\n\t\t            hand_no[y + 1] = temp;\n\t\t            \n\t\t            String temp2 = hand_mark[y + 1];\n\t\t            hand_mark[y] = hand_mark[y + 1];\n\t\t            hand_mark[y + 1] = temp2;\n\t\t            \n\t\t          }\n\t\t        }\n\t\t\t }\n\t\t\t\t\t \n\n\t\t\t for(int i = 0; i < mai - 2; i++){\n\t\t\t\t \n\t\t\t\t for(int j = i + 1; j < mai - 1; j++){\n\t\t\t\t\t \n\t\t\t\t\t for(int k = j + 1; k < mai; k++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(hand_mark[i].equals(hand_mark[j]) && hand_mark[j].equals(hand_mark[k])){\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t //??????????????£????????????\n\t\t\t\t\t\t\t if(hand_no[i] + 1 == hand_no[j]  && hand_no[j] + 1 == hand_no[k]){\n\t\t\t\t\t\t\t\t if(hand_no[i] != 0 ){\n\t\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t\t\t hand_no[i] = 0;\n\t\t\t\t\t\t\t\t\t hand_no[j] = 0;\n\t\t\t\t\t\t\t\t\t hand_no[k] = 0;\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(hand_no[i] == hand_no[j] && hand_no[j]  == hand_no[k]){\n\t\t\t\t\t\t\t\t\t if(hand_no[i] != 0 ){\n\t\t\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t\t\t\t hand_no[i] = 0;\n\t\t\t\t\t\t\t\t\t\t hand_no[j] = 0;\n\t\t\t\t\t\t\t\t\t\t hand_no[k] = 0;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t }\n\t\t\t }\n\t\t\t\n\t\t\t\t \n\t\t\t\t //3?????????????????£???????????°???1??????????????????\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\t\t\t\t//????????°???????????????????????????\n\t\t\t\t ans = 0;\n\n\t\t }\n\t\tscan.close();\n\n\t }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\tCardRummy cr = new CardRummy();\n\n\t\t\tint result = cr.playtheGame();\n\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// output Area\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\tfor (int i = 0; i < transNum.length; i++) {\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum++] = intNum;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {\n\t\tint intAnswer = 0;\n\n\t\t// ???????????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// pprint(CardB);\n\n\t\t// ????????°??????3???????????°?¶????\n\t\tcardR = pairs3Remove(cardR);\n\t\tcardG = pairs3Remove(cardG);\n\t\tcardB = pairs3Remove(cardB);\n\n\t\t// 3??£?¶??????°??????????????°?¶????\n\t\tcardR = ThreeConsecutiveNumber(cardR);\n\t\tcardG = ThreeConsecutiveNumber(cardG);\n\t\tcardB = ThreeConsecutiveNumber(cardB);\n\n\t\t// pprint(CardB);\n\n\t\t// ???????????????????????????\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// 1???9?????°????????????????????????????????§\n\t\t// ????????§???????????°??????0????????¨??¨0\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0) {\n\n\t\t\t// ?????¶??????????????°1\n\t\t\tintAnswer = 1;\n\t\t}\n\n\t\treturn intAnswer;\n\n\t}\n\tpublic static int[] pairs3Remove(int[] Card) {\n\n\t\t// ?????¢??°??????????????? 3???????????????????????¨??°???????¶???????\n\t\tint pairs3count = 0;\n\n\t\t// ?????¢??°???????????????????????°??????????´?????????´???\n\t\t// ??????????????????????´?????????´???\n\t\tint[] count3Toitu = new int[9];\n\n\t\tint count3ToituCount = 0;\n\n\t\tfor (int i = 0; i < 9; i++) {\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tif (Card[j] == i + 1) {\n\t\t\t\t\tpairs3count++;\n\t\t\t\t\tcount3Toitu[count3ToituCount] = j + 1;\n\t\t\t\t\tcount3ToituCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pairs3count >= 3) {\n\t\t\t\tint count2 = 0;\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\tif (count2 == 3) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint intNum = count3Toitu[k];\n\t\t\t\t\tCard[intNum - 1] = 0;\n\t\t\t\t\tcount2++;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\t\t\t}\n\t\t\tpairs3count = 0;\n\t\t\tcount3ToituCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n\t/**\n\t * 3??£?¶??????°??????????????°?¶????\n\t *\n\t * @param Card\n\t * @return\n\t */\n\tpublic static int[] ThreeConsecutiveNumber(int[] Card) {\n\n\t\tint[][] count3Zyuntu = new int[3][2];\n\n\t\tint count3ZyuntuCount = 0;\n\n\t\tint k = 1;\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile (i < 7) {\n\n\t\t\touter: while (true) {\n\n\t\t\t\tif (k == 4) {\n\t\t\t\t\tint intNum1 = count3Zyuntu[0][1];\n\t\t\t\t\tint intNum2 = count3Zyuntu[1][1];\n\t\t\t\t\tint intNum3 = count3Zyuntu[2][1];\n\t\t\t\t\tCard[intNum1] = 0;\n\t\t\t\t\tCard[intNum2] = 0;\n\t\t\t\t\tCard[intNum3] = 0;\n\t\t\t\t\tArrays.sort(Card);\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (j == 9) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (Card[j] == k + i) {\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][0] = k + i;\n\t\t\t\t\tcount3Zyuntu[count3ZyuntuCount][1] = j;\n\t\t\t\t\tcount3ZyuntuCount++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 1;\n\t\t\tcount3ZyuntuCount = 0;\n\t\t}\n\n\t\treturn Card;\n\t}\n\n\tpublic static void pprint(int[] Card) {\n\n\t\tfor (int i = 0; i < Card.length; i++) {\n\t\t\tSystem.out.print(Card[i]);\n\t\t}\n\t\tSystem.out.println();\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t public static void main(String args[]){\n\t\t Scanner scan = new Scanner(System.in);\n\n\t\t //T????????¬??????????????°\n\t\t int T = scan.nextInt();\n\n\t\t//???????????????\n\t\t String color[] =  {\"R\", \"G\", \"B\"};\n\n\t\t//mai????????¬?????????1??????????????????????????°\n\t\t int  mai = 9;\n\n\t\t//1??????????????????????´???§????????????????¢????\n\t\t int hand_no[] = new int[mai];\n\t\t String hand_mark[] = new String[mai];\n\n\t\t//????\\???¨?????????????¢????\n\t\t int work[] = new int[mai];\n\n\t\t //????????°????¢???????????????°\n\t\t int ans = 0;\n\n\t\t //?????¬??????????????°?????????????????¶?????????\n\t\t for(int end_cnt = 0; end_cnt < T; end_cnt++){\n\n\t\t\t //1???????????????????????????????´?\n\t\t\t for(int  no_mark = 0; no_mark < 2; no_mark++){\n\n\t\t\t\t for(int now1 = 0; now1 < mai; now1++){\n\n\t\t\t\t\t //1??±?????????????????????2??±?????????????????????????????\\??????\n\t\t\t\t\t if(no_mark == 0){\n\t\t\t\t\t\t hand_no[now1] = scan.nextInt();\n\t\t\t\t\t }else{\n\t\t\t\t\t\t hand_mark[now1] = scan.next();\n\t\t\t\t\t }\n\n\t\t\t\t }\n\t\t\t }\n\t\t\t\t //???????????¶?????????\n\t\t\t\t for(int  mark_cnt = 0; mark_cnt < 3; mark_cnt++){\n\n\n\t\t\t\t\t //????\\???¨??????????????????\n\t\t\t\t\tfor(int x = 0; x < mai; x++){\n\t\t\t\t\t\t work[x] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//????\\???¨?????????????´???°????????????\n\t\t\t\t\t int work_cnt = 0;\n\n\t\t\t\t\t //????\\???¨????????????????????\\?????°??????????´?\n\t\t\t\t\t for(int now2 = 0; now2 < mai; now2++){\n\n\t\t\t\t\t\t //???????????§?????????\n\t\t\t\t\t\t if(color[mark_cnt].equals(hand_mark[now2])){\n\n\t\t\t\t\t\t\twork[work_cnt++] = hand_no[now2];\n\n\t\t\t\t\t\t }\n\n\t\t\t\t\t }\n\n\t\t\t\t\t //????\\???¨???????????´???\n\t\t\t\t\t Arrays.sort(work);\n\t\t\t\t\t int i = 0;\n\n\t\t\t\t\t //????????????????´???°???3????????°???\n\t\t\t\t\t if(work_cnt % 3 == 0){\n\n\t\t\t\t\t\t //????????????????????°????±???????\n\t\t\t\t\t\t int loop = work_cnt / 3;\n\n\t\t\t\t\t\t for(int loop_cnt = 0; loop_cnt < loop; loop_cnt++){\n\t\t\t\t\t\t\t //??¨?????????????´???§?????????\n\t\t\t\t\t\t\t if(work[i] == work[++i] && work[i]  == work[++i]){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t \t//??????????????£????????????\n\t\t\t\t\t\t\t else if(work[i] == work[++i] - 1 && work[i]  == work[++i] - 1){\n\t\t\t\t\t\t\t\t ans++;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t i++;\n\t\t\t\t\t \t}\n\t\t\t\t }\n\n\t\t\t\t if(ans == 3){\n\t\t\t\t\t System.out.println(\"1\");\n\t\t\t\t }else{\n\t\t\t\t\t System.out.println(\"0\");\n\t\t\t\t }\n\n\t\t }\n\t\tscan.close();\n\n\t }\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();// clear\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(br.readLine(), br.readLine());// clear\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();// debug chk point\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);// clear\n\t\t}\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++)\n\t\t\tSystem.out.println(answer.get(i));// clear\n\t} // main end\n}// class end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}// construct end\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {// clear\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\"))\n\t\t\t\tcardR[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"G\"))\n\t\t\t\tcardG[i] = Integer.parseInt(transNum[i]);\n\t\t\telse if (transColor[i].equals(\"B\"))\n\t\t\t\tcardB[i] = Integer.parseInt(transNum[i]);\n\t\t}\n\t}// construct end\n\n\tpublic int playtheGame() {// clear\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0)\n\t\t\tresult = 1;\n\n\t\treturn result;\n\n\t}// method end\n\n\tpublic static int[] sameNumCard(int[] card) {// debug chk point\n\n\t\tfor (int i = 0; i < 7; i++) { // error point\n\t\t\tfor (int j = i + 1; j < 8; j++) {// error point\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {// error point\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]  ) {\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n\n\tpublic static int[] serialNumCard(int[] card) {// debug chk point\n\n\t\tfor (int i = 0; i < 7; i++) {// error point\n\t\t\tfor (int j = i + 1; j < 8; j++) {// error point\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {// error point\n\n\t\t\t\t\tif (card[i] == card[j]-1 && card[i] ==card[k]-2 ) {\n\t\t\t\t\t\tif (card[i] != 0 && card[j] != 0 && card[k] != 0) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}// method end\n}// class end"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\t//?????£?????????\n\t\tint output;\n\t\tint loop;\n\t\tString line;\n\t\tCard[] cardList = new Card[9];\n\n\t\tScanner sc = null;\n\n\t\ttry {\n\t\t\tsc = new Scanner(System.in);\n\n\t\t\t//?????§???????????°???????????????\n\t\t\tloop = sc.nextInt();\n\t\t\t//?¬???????????§????\n\t\t\tline = sc.nextLine();\n\t\t\tfor (int i = 0; i < loop; i++) {\n\t\t\t\t//?????????????????????\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] work = line.split(\" \");\n\n\t\t\t\tint[] number = new int[work.length];\n\t\t\t\tfor (int j = 0; j < work.length; j++) {\n\t\t\t\t\tnumber[j] = Integer.parseInt(work[j]);\n\t\t\t\t}\n\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] color = line.split(\" \");\n\n\t\t\t\t//???????????????\n\t\t\t\tfor (int j = 0; j < cardList.length; j++) {\n\t\t\t\t\tcardList[j] = new Card(number[j], color[j]);\n\t\t\t\t}\n\t\t\t\t//?????????????????°?????§?????????\n\t\t\t\tArrays.sort(cardList , new Comparator<Card>() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic int compare(Card card1, Card card2) {\n\n\t\t\t\t\t\tint temp = card1.getColor().compareTo(card2.getColor());\n\n\t\t\t\t\t\tif (temp == 0) {\n\t\t\t\t\t\t\treturn card1.getNumber() - card2.getNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn temp;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//???????????¶????????????????????????????????§??????\n\t\t\t\toutput = 0;\n\t\t\t\tCheck che = new Check();\n\t\t\t\toutput = che.cardCheck(cardList);\n\t\t\t\t//???????????????\n\t\t\t\tSystem.out.println(output);\n\t\t\t}\n\t\t} finally {\n\t\t\tsc.close();\n\t\t}\n\n\t}\n\n\t//??????????????????\n\tstatic class Card {\n\t\t//?????£?????????\n\t\t//??????????????°???\n\t\tprivate int number;\n\t\t//???????????????\n\t\tprivate String color;\n\n\t\t//?????????????????????\n\t\tpublic  Card(int num, String color){\n\t\t\tthis.number = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t//????????????????????????\n\t\tpublic int getNumber() {\n\t\t\treturn number;\n\t\t}\n\n\t\tpublic void setNumber(int number) {\n\t\t\tthis.number = number;\n\t\t}\n\n\t\tpublic String getColor() {\n\t\t\treturn color;\n\t\t}\n\n\t\tpublic void setColor(String color) {\n\t\t\tthis.color = color;\n\t\t}\n\n\t}\n\n\t//?????????????????¨??????????????????\n\tstatic class Check {\n\n\t\tpublic int cardCheck(Card[] ca){\n\t\t\tint count = 0;\n\t\t\tint anser = 0;\n\t\t\tCard[] list = ca;\n\t\t\tint[] checklist = {0,0,0,0,0,0,0,0,0};\n\n\t\t\tint loop = list.length;\n\n\t\t\tfor (int i = 0; i < loop - 2; i++) {\n\t\t\t\tfor (int j = i + 1; j < loop - 1; j++) {\n\t\t\t\t\tfor (int k = j + 1; k < loop; k++) {\n\n\t\t\t\t\t\tif (checklist[i] == 0 && checklist[j] == 0 && checklist[i] == 0) {\n\t\t\t\t\t\t\t//???????¢????\n\t\t\t\t\t\t\tif (list[i].getColor().equals(list[j].getColor())\n\t\t\t\t\t\t\t\t\t&& list[j].getColor().equals(list[k].getColor())) {\n\t\t\t\t\t\t\t\t//??£???????????????\n\t\t\t\t\t\t\t\tif (list[i].getNumber() + 1 == list[j].getNumber()) {\n\t\t\t\t\t\t\t\t\tif (list[j].getNumber() + 1 == list[k].getNumber()) {\n\t\t\t\t\t\t\t\t\t\tchecklist[i] = 1;\n\t\t\t\t\t\t\t\t\t\tchecklist[j] = 1;\n\t\t\t\t\t\t\t\t\t\tchecklist[k] = 1;\n\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//????????°???????????????\n\t\t\t\t\t\t\t\tif (list[i].getNumber() == list[j].getNumber()) {\n\t\t\t\t\t\t\t\t\tif (list[j].getNumber() == list[k].getNumber()) {\n\t\t\t\t\t\t\t\t\t\tchecklist[i] = 1;\n\t\t\t\t\t\t\t\t\t\tchecklist[j] = 1;\n\t\t\t\t\t\t\t\t\t\tchecklist[k] = 1;\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 3) {\n\t\t\t\tanser = 1;\n\t\t\t}\n\t\t\treturn anser;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<t;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k*3]==color[j][k*3+2]){\n                        color[j][k*3]=0;\n                        color[j][k*3+1]=0;\n                        color[j][k*3+2]=0;\n                    }\n                }\n            }\nfor (int j=0;j<3&&win!=0;j++){\n                int n=color_num[j];\n                for (int l=0;l<n/3;l++){\n                int bef=-2;\n                int changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3){\n                            changed=0;\n                            bef=-2;\n                        }\n                    }\n                }\n            }\n\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tboolean isSequenceNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif((num[r] - num[r - 1]) != 1) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\n\tboolean isMatchNumber(int[] num) {\n\t\tboolean flag = true;\n\t\tfor(int r = 1; r < num.length; r++) {\n\t\t\tif((num[r] - num[r - 1]) != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tif(r % 3 == 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\tif(!flag) return(false);\n\t\t\t}\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tboolean outCase(int[] number) {\n\t\tint[] check1 = new int[3];\n\t\tint[] check2 = new int[3];\n\t\t\n\t\tif(((!((isMatchNumber(check1) || (isSequenceNumber(check2))) || (!((isMatchNumber(check2) || (isSequenceNumber(check2))))))))) {\n\t\t\treturn(false);\n\t\t}\n\t\treturn(true);\n\t}\n\t\n\tboolean Check(int num) {\n\t\treturn(num == 0);\n\t}\n\n\tvoid doIt() {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tint limit = stdIn.nextInt();\n\t\tfor(int r = 0; r < limit; r++) {\n\t\t\tboolean flag = true;\n\t\t\tint[][] num = new int[3][3];\n\t\t\tString[][] str = new String[3][3];\n\t\t\tint[] counter = new int[3];\n\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\tnum[c][k] = stdIn.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int c = 0; c < str.length; c++) {\n\t\t\t\tfor(int k = 0; k < str[c].length; k++) {\n\t\t\t\t\tstr[c][k] = stdIn.next();\n\t\t\t\t\tswitch(str[c][k].charAt(0)) {\n\t\t\t\t\tcase 'R': counter[0]++; break;\n\t\t\t\t\tcase 'G': counter[1]++; break;\n\t\t\t\t\tcase 'B': counter[2]++; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!(Check(counter[0] % 3) && Check(counter[1] % 3) && Check(counter[2] % 3))) flag = false;\n\t\t\tif(flag) {\n\t\t\t\tString temp = \"RGB\";\n\t\t\t\tfor(int i = 0; i < 3; i++) {//３つの文字セットずつ見ていく\n\t\t\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\t\tfor(int c = 0; c < num.length; c++) {\n\t\t\t\t\t\tfor(int k = 0; k < num[c].length; k++) {\n\t\t\t\t\t\t\tif(str[c][k].charAt(0) == temp.charAt(i)) {\n\t\t\t\t\t\t\t\tlist.add(num[c][k]); \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\tif(list.size() != 0) {\n\t\t\t\t\t\tint[] number = new int[list.size()];\n\t\t\t\t\t\tfor(int c = 0; c < list.size(); c++) {\n\t\t\t\t\t\t\tnumber[c] = list.get(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!((isMatchNumber(number) || (isSequenceNumber(number))))) { \n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tif(outCase(number) && number.length == 6) flag = true;\n\t\t\t\t\t\t\tif(!flag) break;//だめなヤツがあった時点でbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println((flag) ? 1 : 0);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tnew Main().doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * Rummy\n */\npublic class Main {\n\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\tint T = parseInt(br.readLine());\n\n\t\tfor (int i = 0; i < T; i++) {\n\n\t\t\tStringTokenizer st1 = new StringTokenizer(br.readLine());\n\t\t\tStringTokenizer st2 = new StringTokenizer(br.readLine());\n\n\t\t\tint[] R = new int[10];\n\t\t\tint[] G = new int[10];\n\t\t\tint[] B = new int[10];\n\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tint n = parseInt(st1.nextToken());\n\t\t\t\tswitch (st2.nextToken().charAt(0)) {\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tR[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\tG[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tB[n]++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\tint count = solve(R, 1, 0) + solve(G, 1, 0) + solve(B, 1, 0);\n\t\t\tSystem.out.println(count >= 3 ? 1 : 0);\n\t\t}\n\t}\n\n\tpublic static int solve(int[] cards, int s, int c) {\n\n\t\tif (s == 10) return c;\n\n\t\tint c1 = 0, c2 = 0, c3 = 0;\n\n\t\tif (cards[s] >= 3) {\n\t\t\tint[] _cards = cards.clone();\n\t\t\t_cards[s] -= 3;\n\t\t\tc1 = solve(_cards, s + 1, c + 1);\n\t\t}\n\n\t\tif (s <= 7 && cards[s] >= 1 && cards[s + 1] >= 1 && cards[s + 2] >= 1) {\n\t\t\tint[] _cards = cards.clone();\n\t\t\t_cards[s]--;\n\t\t\t_cards[s + 1]--;\n\t\t\t_cards[s + 2]--;\n\t\t\tc2 = solve(_cards, s + 1, c + 1);\n\t\t}\n\n\t\tc3 = solve(cards, s + 1, c);\n\n\t\treturn Math.max(c1, Math.max(c2, c3));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\twhile (sc.hasNextLine()){\n\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 1;j < tehuda.size();j++) {\n\t\t\t\tif(!(tehuda.get(j).getColor().equals(checkColor))) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num4 = 0;\n\t\t\t\t\tif(cSetList.get(j).size() == 6 && y < 2) {\n\t\t\t\t\t\tnum4 = cSetList.get(j).get(y + 4);\n\t\t\t\t\t}\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t} else if (num1 + 1 == num3  && num1 + 2 == num4 ) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint intHairetsuNum[] = new int[9]; \n\t\tString strHairetsuNum[] = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString strHairetsuColor[] = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main\n{\n\tpublic static int a[];\n\tpublic static String b[];\n\tpublic static boolean judge;\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tint I=in.nextInt();\n\t\twhile(I-->0)\n\t\t{\n\t\t\ta=new int[9];\n\t\t\tb=new String[9];\n\t\t\tint p[]=new int[9];\n\t\t\tString p2[]=new String[9];\n\t\t\tjudge=false;\n\t\t\tboolean use[]=new boolean[9];\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t\ta[i]=in.nextInt();\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t\tb[i]=in.next();\n\t\t\tmake_perm(0,p,p2,use);\n\t\t\tSystem.out.println(judge ? 1:0);\n\t\t}\n\t}\n\n\tstatic void make_perm(int n,int p[],String p2[],boolean use[])\n\t{\n\t\tif(judge)\n\t\t\treturn;\n\t\tif(n==9)\n\t\t\tcheck(p,p2);\n\t\telse \n\t\t{\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t{\n\n\t\t\t\tif(use[i]) \n\t\t\t\t\tcontinue;\n\t\t\t\tp[n]=a[i];\n\t\t\t\tp2[n]=b[i];\n\t\t\t\tuse[i] = true;\n\t\t\t\tmake_perm(n+1,p,p2,use);\n\t\t\t\tuse[i] = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic void check(int p[], String p2[])\n\t{\n\t\tif(((p[0]+1==p[1]&&p[1]+1==p[2])||(p[0]==p[1]&&p[1]==p[2]))\n\t\t\t\t&&((p[3]+1==p[4]&&p[4]+1==p[5])||(p[3]==p[4]&&p[4]==p[5]))\n\t\t\t\t&&((p[6]+1==p[7]&&p[7]+1==p[8])||(p[6]==p[7]&&p[7]==p[8])))\n\t\t{\n\t\t\tif(p2[0].equals(p2[1])&&p2[1].equals(p2[2])\n\t\t\t\t\t&&p2[3].equals(p2[4])&&p2[4].equals(p2[5])\n\t\t\t\t\t&&p2[6].equals(p2[7])&&p2[7].equals(p2[8]))\n\t\t\t\tjudge=true;\n\t\t\telse\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tstatic public void debug(Object... o)\n\t{\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint[] intHairetsuNum = new int[9]; \n\t\tString[] strHairetsuNum = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString[] strHairetsuColor = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tintHairetsuNum = new int[9]; \n\t\t\t\t\tstrHairetsuNum = new String[9];\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tstrHairetsuColor = new String[9];\n\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner s = new Scanner(System.in);\n        int[] g = new int[10],b =new int[10], r =new int[10];\n        int[] num = new int[10];\n        int i,j,t;\n        String st;\n        boolean ch=true;\n        t = s.nextInt();\n        for(i=0;i<t;i++){\n            for(j=0;j<9;j++)num[j]=s.nextInt();\n            for(j=0;j<9;j++){\n                st = s.next();\n                if(st.charAt(0)=='G')g[num[j]]++;\n                else if(st.charAt(0)=='B')b[num[j]]++;\n                else if(st.charAt(0)=='R')r[num[j]]++;\n            }\n            for(j=1;j<=9;j++){\n                if(g[j]>=3)g[j]-=3;\n                if(j<8&&g[j]==2&&g[j+1]>1&&g[j+2]>1){\n                    g[j]-=2;\n                    g[j+1]-=2;\n                    g[j+2]-=2;\n                }\n                if(j<8&&g[j]==1&&g[j+1]>0&&g[j+2]>0){\n                    g[j]--;\n                    g[j+1]--;\n                    g[j+2]--;\n                }\n                if(b[j]>=3)b[j]-=3;\n                if(j<8&&b[j]==2&&b[j+1]>1&&b[j+2]>1){\n                    b[j]-=2;\n                    b[j+1]-=2;\n                    b[j+2]-=2;\n                }\n                if(i<8&&b[j]==1&&b[j+1]>0&&b[j+2]>0){\n                    b[j]--;\n                    b[j+1]--;\n                    b[j+2]--;\n                }\n                if(r[j]>=3)r[j]-=3;\n                if(i<8&&g[j]==2&&r[j+1]>1&&r[j+2]>1){\n                    r[j]-=2;\n                    r[j+1]-=2;\n                    r[j+2]-=2;\n                }\n                if(j<8&&r[j]==1&&r[j+1]>0&&r[j+2]>0){\n                    r[j]--;\n                    r[j+1]--;\n                    r[j+2]--;\n                }\n                if(g[j]>0||b[j]>0||r[j]>0){\n                    ch = false;\n                    break;\n                }   \n            }\n            if(ch==true)System.out.println(1);\n            else System.out.println(0);\n            for(j=1;j<=9;j++){\n                g[j]=0;\n                b[j]=0;\n                r[j]=0;\n            }\n            ch=true;\n        }\n\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static class Card{\n\t\tString color;\n\t\tint num;\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint i, j, k, n;\n\t\tCard[] card = new Card[9];\n\t\tfor(i = 0; i < 9; i++) card[i] = new Card();\n\t\tn = sc.nextInt();\n\t\tfor(i = 0; i < n; i++){\n\t\t\tfor(j = 0; j < 9; j++) card[j].num = sc.nextInt();\n\t\t\tfor(j = 0; j < 9; j++) card[j].color = sc.next();\n\t\t\t\n\t\t\tSystem.out.println(cardCheck(card));\n\t\t}\n\t}\n\tpublic static int cardCheck(Card card[]) {\n\t\tint i;\n\t\tcardSort(card);\n\t\tfor(i = 0; i < 9; i += 3){\n\t\t\t\tif(!(card[i].color.equals(card[i + 1].color) && card[i].color.equals(card[i + 2].color)))\n\t\t\t\t\treturn 0;\n\t\t\t\tif(!((card[i].num == card[i + 1].num && card[i].num == card[i + 2].num) ||\n\t\t\t\t\t(card[i].num == card[i + 1].num - 1 && card[i].num == card[i + 2].num - 2)))\n\t\t\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\t\n\t}\n\tpublic static void cardSort(Card card[]) {\n\t\tint j, k;\n\t\tCard t = new Card();\n\t\tfor(k = 9 - 1; k > 0; k--){\n\t\t\tfor(j = 0; j < k; j++){\n\t\t\t\tif(card[j].num > card[j + 1].num){\n\t\t\t\t\tt = card[j];\n\t\t\t\t\tcard[j] = card[j + 1];\n\t\t\t\t\tcard[j + 1] = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(k = 9 - 1; k > 0; k--){\n\t\t\tfor(j = 0; j < k; j++){\n\t\t\t\tif(card[j].color.compareTo(card[j + 1].color) < 0){\n\t\t\t\t\tt = card[j];\n\t\t\t\t\tcard[j] = card[j + 1];\n\t\t\t\t\tcard[j + 1] = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "package aoj.rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\n\t\tif(3 <= R.size()){\n\t\t\tCollections.sort(R);\n\t\t\tcnt += numSearch(R);\n\t\t}\n\t\t\n\t\tif(3 <= G.size()){\n\t\t\tCollections.sort(G);\n\t\t\tcnt += numSearch(G);\n\t\t\t\n\t\t}\n\t\tif(3 <= B.size()){\n\t\t\tCollections.sort(B);\n\t\t\tcnt += numSearch(B);\n\t\t\t\n\t\t}\n\t\t\n\t\tif(cnt == 3){\n\t\t\tSystem.out.println(\"1\");\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t}\n\t\t\n\t}\n\n\n\tprivate static int numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tswitch(r.size()){\n\t\tcase 3:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return 1;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return 1;\n\n\t\tcase 6:\n\t\t\tfor (int j = 0; j < 6; j +=3) {\n\t\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) i +=1;\n\t\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) i +=1;\n\t\t\t}\n\t\t\treturn i;\n\n\t\tcase 9:\n\t\t\tfor (int j = 0; j < 9package aoj.rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\n\t\tif(3 <= R.size() && R.size()%3 == 0){\n\t\t\tCollections.sort(R);\n\t\t\tcnt += numSearch(R, R.size());\n\t\t}\n\t\t\n\t\tif(3 <= G.size() && G.size()%3 == 0){\n\t\t\tCollections.sort(G);\n\t\t\tcnt += numSearch(G, G.size());\n\t\t\t\n\t\t}\n\t\tif(3 <= B.size() && B.size()%3 == 0){\n\t\t\tCollections.sort(B);\n\t\t\tcnt += numSearch(B, B.size());\n\t\t\t\n\t\t}\n\t\t\n\t\tif(cnt == 3){\n\t\t\tSystem.out.println(\"1\");\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t}\n\t\t\n\t}\n\n\n\tprivate static int numSearch(ArrayList<Integer> r, int T) {\n\t\tint cnt = 0;\n\t\tfor (int j = 0; j < T; j += 3) {\n\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) cnt +=1;\n\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) cnt +=1;\n\t\t}\n\t\t\n\t\treturn cnt;\n\n\t}\n\n}\n; j +=3) {\n\t\t\t\tif( r.get(j) == r.get(j+1) && r.get(j) == r.get(j+2) ) i +=1;\n\t\t\t\tif( r.get(j) == r.get(j+1)-1 && r.get(j) == r.get(j+2)-2 ) i +=1;\n\t\t\t}\n\n\t\t\treturn i;\n\n\t\t}\n\n\t\treturn i;\n\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tcardSet.add(tehuda.get(i).getNum());\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t} else if(i == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 == num2 + 1 && num1 == num3 + 2) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void initiallize(boolean b[]) {\n\t\tfor (int i = 0; i < b.length; ++i) {\n\t\t\tb[i] = false;\n\t\t}\n\t}\n\n\tpublic static int same(int num[]) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tfor (int j = i + 1; j < num.length - 1; ++j) {\n\t\t\t\t\tif (num[i] == num[j]) {\n\t\t\t\t\t\tint tmp = research(num, num[i]);\n\t\t\t\t\t\tif (tmp != j) {\n\t\t\t\t\t\t\tnum[j] = 0;\n\t\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\t\t++count;\n\t\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static int continuous(int num[]) {\n\t\tint count = 0;\n\t\tint tmp, tmp2;\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tfor (int j = 4; j > 0; --j) {\n\t\t\t\ttmp = research(num, num[i] - j + 2);\n\t\t\t\tif (tmp != -1 && tmp != i) {\n\t\t\t\t\tif (j == 3) {\n\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 4);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp2 = research(num, num[i] - j + 3);\n\t\t\t\t\t}\n\t\t\t\t\tif (tmp2 != -1 && tmp2 != i) {\n\t\t\t\t\t\t++count;\n\t\t\t\t\t\tnum[tmp] = 0;\n\t\t\t\t\t\tnum[tmp2] = 0;\n\t\t\t\t\t\tnum[i] = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tpublic static int research(int num[], int k) {\n\t\tif (k <= 0)\n\t\t\treturn -1;\n\t\tfor (int i = num.length - 1; i >= 0; --i) {\n\t\t\tif (num[i] == k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static int judge(int num[], boolean b[]) {\n\t\tint count = 0;\n\t\tint j = 0;\n\t\tint number[] = new int[9];\n\t\tfor (int i = 0; i < num.length; ++i) {\n\t\t\tif (b[i] == true) {\n\t\t\t\tnumber[j] = num[i];\n\t\t\t\t++j;\n\t\t\t}\n\t\t}\n\t\tif (number[2] == 0)\n\t\t\treturn -1;\n\t\t// same three number\n\t\tcount += same(number);\n\t\t// continuous three number\n\t\tcount += continuous(number);\n\n\t\treturn count;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tboolean R[], G[], B[];// position of R,B,G\n\t\tint count;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new boolean[9];\n\t\tB = new boolean[9];\n\t\tG = new boolean[9];\n\t\tint i, j;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[j] = true;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[j] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[j] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\t\t\t\tcount = 0;\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tint tmp = judge(num, R);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// B\n\t\t\t\ttmp = judge(num, B);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\t// G\n\t\t\t\ttmp = judge(num, G);\n\t\t\t\tif (tmp != -1) {\n\t\t\t\t\tcount += tmp;\n\t\t\t\t}\n\t\t\t\tif (count == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t\tinitiallize(R);\n\t\t\t\tinitiallize(B);\n\t\t\t\tinitiallize(G);\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\t//Cardクラスを呼び出し\n\t\t//\t\tCard card = new Card();\n\t\t//\t\tCards cards =new Cards();\n\t\t//ArrayList<Integer> num = new ArrayList<>();\n\t\tint cardSet = Integer.parseInt(sc.nextLine());\n\n\t\t//カードを配列に格納\n\t\tfor (int loop = 0; loop < cardSet; loop++) {\n\n\t\t\tint[] codeList = new int[9];\n\t\t\tint[] endList = { -1, -1, -1, -1, -1, -1, -1, -1, -1 };\n\t\t\tint endIndex = 0;\n\n\t\t\t//入力されたカードの1～9の配列\n\t\t\tString[] cnum = sc.nextLine().split(\" \");\n\t\t\tint[] cardNumber = new int[9];\n\n\t\t\tfor (int i = 0; i < cnum.length; i++) {\n\t\t\t\tcardNumber[i] = Integer.parseInt(cnum[i]);\n\n\t\t\t}\n\n\t\t\t//入力されたカードの色の配列\n\t\t\tString[] ccolor = sc.nextLine().split(\" \");\n\n\t\t\t//色ごとに分けた後に数字で特定する\n\t\t\tfor (int i = 0; i < 9; i++) {\n\n\t\t\t\tif (endcheckList(endList, i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//赤\n\t\t\t\tif (ccolor[i].equals(\"R\")) {\n\t\t\t\t\t//赤になったi番目の時の対応する数字を抜き出す\n\t\t\t\t\t//\tSystem.out.print(\"R\" + cardNumber[i] + \" \");\n\t\t\t\t\tString Rednumber = \"R\" + cardNumber[i];\n\t\t\t\t\tcodeList[i] = Cards.valueOf(Rednumber).getCode();//valueOfでenumのR1～を指定してその中のcodeを抜き出し\n\n\t\t\t\t}\n\t\t\t\t//青\n\t\t\t\tif (ccolor[i].equals(\"B\")) {\n\t\t\t\t\t//青になったi番目の時の対応する数字を抜き出す\n\t\t\t\t\t//\t\tSystem.out.print(\"B\" + cardNumber[i] + \" \");\n\t\t\t\t\tString Bluenumber = \"B\" + cardNumber[i];\n\t\t\t\t\tcodeList[i] = Cards.valueOf(Bluenumber).getCode();\n\n\t\t\t\t}\n\t\t\t\t//緑\n\t\t\t\tif (ccolor[i].equals(\"G\")) {\n\t\t\t\t\t//緑になったi番目の時の対応する数字を抜き出す\n\t\t\t\t\t//\t\tSystem.out.print(\"G\" + cardNumber[i] + \" \");\n\t\t\t\t\tString Greennumber = \"G\" + cardNumber[i];\n\t\t\t\t\tcodeList[i] = Cards.valueOf(Greennumber).getCode();\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tArrays.sort(codeList);\n\t\t\tfor (int i = 0; i < 9; i++) {\n\n\t\t\t\tint high1 = -1;//-1のままならエラー\n\t\t\t\tint high2 = -1;\n\t\t\t\tint equ1 = -1;\n\t\t\t\tint equ2 = -1;\n\n\t\t\t\tif (endcheckList(endList, i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (int j = 0; j < 9; j++) {\n\n\t\t\t\t\tif (i == j) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (endcheckList(endList, j)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (codeList[i] + 1 == codeList[j]) {\n\t\t\t\t\t\thigh1 = j;\n\t\t\t\t\t}\n\t\t\t\t\tif (codeList[i] + 2 == codeList[j]) {\n\t\t\t\t\t\thigh2 = j;\n\t\t\t\t\t}\n\t\t\t\t\tif (codeList[i] == codeList[j] && equ1 == -1) {\n\t\t\t\t\t\tequ1 = j;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((codeList[i] == codeList[j])) {\n\t\t\t\t\t\tequ2 = j;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (equ1 != -1 && equ2 != -1) {\n\t\t\t\t\tendList[endIndex] = i;\n\t\t\t\t\tendList[endIndex + 1] = equ1;\n\t\t\t\t\tendList[endIndex + 2] = equ2;\n\t\t\t\t\tendIndex += 3;\n\t\t\t\t} else if (high1 != -1 && high2 != -1) {\n\t\t\t\t\tendList[endIndex] = i;\n\t\t\t\t\tendList[endIndex + 1] = high1;\n\t\t\t\t\tendList[endIndex + 2] = high2;\n\t\t\t\t\tendIndex += 3;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif (endcheckList(endList, -1)) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\n\t\t}\n\n\t\tsc.close();\n\n\t}\n\n\tpublic static boolean endcheckList(int[] endList, int num) {\n\t\tboolean flg = false;\n\t\tfor (int end : endList) {\n\t\t\tif (end == num) {\n\t\t\t\tflg = true;\n\t\t\t}\n\t\t}\n\t\treturn flg;\n\t}\n}\n\nenum Cards {\n\t//赤札\n\tR1(0, \"R\", 1), R2(1, \"R\", 2), R3(2, \"R\", 3), R4(3, \"R\", 4), R5(4, \"R\", 5), R6(5, \"R\", 6), R7(6, \"R\", 7), R8(7, \"R\",\n\t\t\t8), R9(8, \"R\", 9),\n\t//青札\n\tB1(20, \"B\", 1), B2(21, \"B\", 2), B3(22, \"B\", 3), B4(23, \"B\", 4), B5(24, \"B\", 5), B6(25, \"B\", 6), B7(26, \"B\",\n\t\t\t7), B8(27, \"B\", 8), B9(28, \"B\", 9),\n\t//緑札\n\tG1(40, \"G\", 1), G2(41, \"G\", 2), G3(42, \"G\", 3), G4(43, \"G\", 4), G5(44, \"G\", 5), G6(45, \"G\", 6), G7(46, \"G\",\n\t\t\t7), G8(47, \"G\", 8), G9(48, \"G\", 9),\n\t\t\t;\n\tprivate int code;\n\tprivate String color;\n\tprivate int number;\n\n\tpublic int getCode() {\n\t\treturn this.code;\n\t}\n\tpublic String getColor() {\n\t\treturn this.color;\n\t}\n\tpublic int getnumber() {\n\t\treturn this.number;\n\t}\n\n\n\tprivate Cards(int code, String color, int number) {\n\t\tthis.code = code;\n\t\tthis.color = color;\n\t\tthis.number = number;\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Collections;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\t//データ入力の準備\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t//データセット数\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor (int i = 0; i < n; i++){\n\t\t\tint[] temp = new int[9];\n\t\t\tList<Integer> red = new ArrayList<Integer>();\n\t\t\tList<Integer> blue = new ArrayList<Integer>();\n\t\t\tList<Integer> green = new ArrayList<Integer>();\n\t\t\t\n\t\t\t//一旦全ての数字をtempに保存\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\ttemp[j] = sc.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\t//色ごとのリストに格納\n\t\t\tfor (int j = 0; j < 9; j++){\n\t\t\t\tString color = sc.next();\n\t\t\t\t\n\t\t\t\tif (color == \"R\"){\n\t\t\t\t\tred.add(temp[j]);\n\t\t\t\t}else if (color == \"B\"){\n\t\t\t\t\tblue.add(temp[j]);\n\t\t\t\t}else{\n\t\t\t\t\tgreen.add(temp[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//データのチェック\n\t\t\tif (check(red) == 1 || check(blue) == 1 || check(green) == 1){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tprivate static int check(List<Integer> data){\n\t\tint[] check1 = {0,0,0,0,0,0,0,0,0};\n\t\tint set = 0;\n\t\tboolean last = false;\n\t\tboolean one = false;\n\t\tboolean two = false;\n\t\t\n\t\tfor (int i = 0; i < data.size(); i++){\n\t\t\t\tcheck1[data.get(i)] += 1;\n\t\t}\n\t\t\n\t\t//同じ数字３つを使わない場合\n\t\tint temp = renban(check1,0);\n\t\tif (temp == 1){\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\t//同じ数字３つを試みる\n\t\tList<Integer> triple = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tif (check1[i] >= 3){\n\t\t\t\ttriple.add(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (triple.size() == 0){\n\t\t\treturn 0;\n\t\t}else if (triple.size() == 1){\n\t\t\tcheck1[triple.get(0)] -= 3;\n\t\t\t\n\t\t\tint res = renban(check1,1);\n\t\t\treturn res;\n\t\t}else if (triple.size() == 3){\n\t\t\treturn 1;\n\t\t}else{\n\t\t\tint[] check2 = new int[9];\n\t\t\tint[] check3 = new int[9];\n\t\t\t\n\t\t\tfor (int i = 0; i < 9; i++){\n\t\t\t\tcheck2[i] = check1[i];\n\t\t\t\tcheck3[i] = check1[i];\n\t\t\t}\n\t\t\t\n\t\t\tcheck1[triple.get(0)] -= 3;\n\t\t\tcheck1[triple.get(1)] -= 3;\n\t\t\tint res1 = renban(check1,2);\n\t\t\tif(res1 == 1){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tcheck2[triple.get(0)] -= 3;\n\t\t\tint res2 = renban(check2,1);\n\t\t\tif(res2 == 1){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tcheck3[triple.get(1)] -= 3;\n\t\t\tint res3 = renban(check3,1);\n\t\t\tif(res3 == 1){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\t\n\t\treturn 0;\n\t}\n\n\n\n\t\n\tprivate static int renban(int[] input, int initialSet){\n\t\tint[] data = new int[9];\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\tdata[i] = input[i];\n\t\t}\n\t\tint set = initialSet;\n\t\tboolean last = false;\n\t\tboolean one = false;\n\t\tboolean two = false;\n\t\t\n\t\tfor (int i = 0; i < 9; i++){\n\t\t\ttwo = one;\n\t\t\tone = last;\n\t\t\tif (data[i] >= 1){\n\t\t\t\tlast = true;\n\t\t\t}else{\n\t\t\t\tlast = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (last == true && one == true && two == true){\n\t\t\t\tset++;\n\t\t\t\tdata[i] -= 1;\n\t\t\t\tdata[i - 1] -= 1;\n\t\t\t\tdata[i - 2] -= 1;\n\t\t\t\ti = -1;\n\t\t\t\tlast = false;\n\t\t\t\tone = false;\n\t\t\t\ttwo = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (set >= 3){\n\t\t\treturn 1;\n\t\t}else{\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\t\t\t\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tcardSet.add(tehuda.get(i).getNum());\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t} else if(i == tehuda.size() - 1) {\n\t\t\t\t\tSystem.out.println(\"e2\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 == num2 + 1 && num1 == num3 + 2) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\npublic class Rummy {\n\tpublic static void main (String[] args) throws IOException\n\t{\n\t\tBufferedReader input = new BufferedReader (new InputStreamReader (System.in));\n\t\t\n\t\tString setTotalStr = input.readLine();\n\t\t\n\t\tint setTotal = Integer.parseInt(setTotalStr);\n\t\t\n\t\tint cardTotal = 9;\n\t\t\n\t\tString[][] cardInfoNumStr = new String[setTotal][9];\n\t\t\n\t\tint[][] cardInfoNum = new int[setTotal][cardTotal];\n\t\t\n\t\tString[][] cardInfoCol = new String[setTotal][9];\n\t\t\n\t\t//データをキーボードで入力し、配列に代入する\n\t\tfor(int set = 0; set < setTotal; set++)\n\t\t{\n\t\t\tcardInfoNumStr[set] = input.readLine().split(\" \");\n\t\t\t\n\t\t\tfor(int num = 0; num < cardTotal; num++)\n\t\t\t\tcardInfoNum[set][num] = Integer.parseInt(cardInfoNumStr[set][num]);\n\t\t\t\n\t\t\tcardInfoCol[set] = input.readLine().split(\" \");\n\t\t}\n\t\t\n\t\tint win = 0;\n\t\t\n\t\t//勝利条件を満たしているかどうかをset回行う\n\t\tfor(int set = 0; set < setTotal; set++, win = 0)\n\t\t{\t\n\t\t\t//1セット目を見つける\n\t\t\tfor(int num2nd = 1; (num2nd < cardTotal - 1) &&  (win == 0); num2nd++)\n\t\t\t{\n\t\t\t\tfor(int num3rd = 2; (num3rd < cardTotal) && (win == 0); num3rd++)\n\t\t\t\t{\n\t\t\t\t\tif(((cardInfoNum[set][0] == cardInfoNum[set][num2nd] && cardInfoNum[set][0] == cardInfoNum[set][num3rd])\n\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 2)\n\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd]))))\n\t\t\t\t\t{\n\t\t\t\t\t\tint cardTotal2nd = cardTotal -3;\n\t\t\t\t\t\t\n\t\t\t\t\t\tint[] cardInfoNum2nd = new int[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tString[] cardInfoCol2nd = new String[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tint insertNum = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける準備\n\t\t\t\t\t\tfor(int num = 1; num < cardTotal; num++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(!(num == num2nd || num == num3rd))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcardInfoNum2nd[insertNum] = cardInfoNum[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcardInfoCol2nd[insertNum] = cardInfoCol[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける\n\t\t\t\t\t\tfor(int num2set2nd = 1; (num2set2nd < cardTotal2nd - 1) && (win == 0); num2set2nd++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor(int num2set3rd = 2; (num2set3rd < cardTotal2nd) && (win == 0); num2set3rd++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd])\n\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd]))))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint cardTotal3rd = cardTotal2nd -3;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tint[] cardInfoNum3rd = new int[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tString[] cardInfoCol3rd = new String[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tinsertNum = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//3セット目を見つける準備\n\t\t\t\t\t\t\t\t\tfor(int num = 1; num < cardTotal2nd; num++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif(!(num == num2set2nd || num == num2set3rd))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcardInfoNum3rd[insertNum] = cardInfoNum2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tcardInfoCol3rd[insertNum] = cardInfoCol2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//勝利条件を満たしているか確かめる\n\t\t\t\t\t\t\t\t\tif(((cardInfoNum3rd[0] == cardInfoNum3rd[1] && cardInfoNum3rd[0] == cardInfoNum3rd[2])\n\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2]))))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twin = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(win);\n\t\t}\n\t}\n}\n\n\n//かかった時間：6時間程\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\t// 数字の最大を探す\n\tpublic static int max(int a[], int b[], int n) {\n\t\tint i;\n\t\tint max = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[max]] <= a[b[i]]) {\n\t\t\t\tmax = i;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n\n\t// 数字の最小を探す\n\tpublic static int min(int a[], int b[], int n) {\n\t\tint i;\n\t\tint min = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[min]] >= a[b[i]]) {\n\t\t\t\tmin = i;\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}\n\n\t// 三つ存在する数字がどれだけあるかを数える\n\tpublic static int same(int count[], int num[], int b[], int n) {\n\t\tint count2 = 0;\n\t\tint i;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (count[num[b[i]]] >= 3) {\n\t\t\t\t++count2;\n\t\t\t\tif (count2 % 3 == 0) {\n\t\t\t\t\tcount[num[b[i]]] -= 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcount2 /= 3;\n\n\t\treturn count2;\n\t}\n\n\t// 連続する三つの数字がどれだけ存在するかを数える\n\tpublic static int continuous(int count[], int num[], int b[], int n) {\n\t\tint count2 = 0;\n\t\tint i;\n\t\tint min, max;\n\n\t\t// 数字の最大、最小を探す\n\t\tmax = max(num, b, n);\n\t\tmin = min(num, b, n);\n\n\t\t// 最小の数字が三つ以上存在した場合その3つを一組とする\n\t\tif (count[num[b[min]]] >= 3) {\n\t\t\tcount2 += same(count, num, b, n);\n\t\t}\n\n\t\t// 連続する三つの数字がどれだけ存在するかを数える\n\t\tfor (i = num[b[min]] + 1; i < num[b[max]]; ++i) {\n\t\t\tif (count[i] > 0) {\n\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0) {\n\t\t\t\t\t++count2;\n\t\t\t\t\t--count[i + 1];\n\t\t\t\t\t--count[i];\n\t\t\t\t\t--count[i - 1];\n\t\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0 && count[i] > 0) {\n\t\t\t\t\t\t--i;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 連続する数字の組を作ったうえで、途中で同じ数字が三つ以上並んでいた時、その三つを一組とする\n\t\t\t\tif (count[i] >= 3) {\n\t\t\t\t\tcount2 += same(count, num, b, n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// 最大の数字が三つ以上存在した場合その3つを一組とする\n\t\tif (count[num[b[max]]] >= 3) {\n\t\t\tcount2 += same(count, num, b, n);\n\t\t}\n\n\t\treturn count2;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tint R[], G[], B[];// position of R,B,G\n\t\tint count1[], count2, /* counting number */ max, min;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new int[9];\n\t\tB = new int[9];\n\t\tG = new int[9];\n\t\tcount1 = new int[10];\n\t\tint i, j, k, m, n, l;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tk = 0;\n\t\t\tm = 0;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[k] = j;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[m] = j;\n\t\t\t\t\t\t++m;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[n] = j;\n\t\t\t\t\t\t++n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, R, k);\n\t\t\t\tmin = min(num, R, k);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < k; ++l) {\n\t\t\t\t\t++count1[num[R[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[R[max]] - num[R[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, R, k);\n\t\t\t\t}\n\n\t\t\t\t// 三つの数字が並んでいるとき\n\t\t\t\tcount2 += same(count1, num, R, k);\n\n\t\t\t\t// B\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, B, m);\n\t\t\t\tmin = min(num, B, m);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < m; ++l) {\n\t\t\t\t\t++count1[num[B[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[B[max]] - num[B[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, B, m);\n\t\t\t\t}\n\n\t\t\t\t// 三つの数字が並んでいるとき\n\t\t\t\tcount2 += same(count1, num, B, m);\n\n\t\t\t\t// G\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, G, n);\n\t\t\t\tmin = min(num, G, n);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < n; ++l) {\n\t\t\t\t\t++count1[num[G[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[G[max]] - num[G[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, G, n);\n\t\t\t\t}\n\n\t\t\t\t// 三つの数字が並んでいるとき\n\t\t\t\tcount2 += same(count1, num, G, n);\n\n\t\t\t\tif (count2 == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int n = sc.nextInt();\n        for (int v=0; v<n; ++v) {\n            char s = ' ';\n            int[] nums = new int[9];\n            ArrayList<Integer> R = new ArrayList<>();\n            ArrayList<Integer> G = new ArrayList<>();\n            ArrayList<Integer> B = new ArrayList<>();\n            for (int i=0; i<9; ++i) {\n                nums[i] = sc.nextInt();\n            }\n            for (int i=0; i<9; ++i) {\n                s = sc.next().charAt(0);\n                if (s == 'R') {\n                    R.add(nums[i]);\n                }\n                if (s == 'G') {\n                    G.add(nums[i]);\n                }\n                if (s == 'B') {\n                    B.add(nums[i]);\n                }\n            }\n            if (R.size() % 3 + G.size() % 3 + B.size() % 3 != 0) {\n                System.out.println(0);\n                continue;\n            }\n            System.out.println((comb(R) && comb(G) && comb(B)) ? 1 : 0);\n        }\n        sc.close();\n    }\n\n    private static boolean comb(ArrayList<Integer> l) {\n        if (l.size() == 0) return true;\n        int n[] = connvert(l);\n        Arrays.sort(n);\n        return check(n, 0, n.length);\n    }\n\n    private static boolean check(int[] n, int r, int l) {\n        int[][] pos = {\n            {0,1,1,1,1,2,2,2,2},\n            {0,0,1,1,2,2},\n            {0,1,2},\n            {0,0,0},\n        };\n        int listlen = l - r;\n        if (listlen == 9) {\n            for (int i=0; i<9; ++i) {\n                if (n[i+r] - n[r] != pos[0][i]) {\n                    return check(n, 0, 3) && check(n, 3, 9) || check(n, 0, 6) && check(n, 6, 9);\n                }\n            }\n        } else if (listlen == 6) {\n            for (int i=0; i<6; ++i) {\n                if (n[i+r] - n[r] != pos[1][i]) {\n                    return check(n, r, r+3) && check(n, r+3, r+6);\n                }\n            }\n        } else {\n            boolean flag = true;\n            for (int i=0; i<3; ++i) {\n                if (n[i+r] - n[r] != pos[2][i]) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (!flag) {\n                for (int i=0; i<3; ++i) {\n                    if (n[i+r] - n[r] != pos[3][i]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    private static int[] connvert(ArrayList<Integer>l) {\n        int[] res = new int[l.size()];\n        for (int i=0; i<l.size(); ++i) {\n            res[i] = l.get(i);\n        }\n        return res;\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\t// ???????????????????????°?????\\???\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\t// 9????????????????????°???????????????????´?\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\t// 9?????????????????????????????????????´?\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\t\t\t// ?????????????????????????????????????????????????????§???????????????\n\t\t\tRummy rummy = new Rummy();\n\n\t\t\t// ?????\\?????????????????´???\n\t\t\tint[][] hasCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\t// ?????£??????????????°?????\\???????????°\n\t\t\tint point = 0;\n\n\t\t\t// ???????????§????????°?????????????????£???????????????????????¢????????????????????????\n\t\t\tpoint += rummy.sameNumberCheck(hasCard);\n\n\t\t\t// ???????????§??£???????????£???????????????????????¢????????????????????????\n\t\t\tpoint += rummy.continuousNumberCheck(hasCard);\n\n\t\t\t// 3??????????????£????????????1???????????????????????????\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\n\t// ?????\\?????????????????????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\t// ????????????????´???????????¬??????????\n\t\tint[][] hasCard = new int[3][9];\n\n\t\t// ???????????????????????????\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\t//1???9?????§???????????????????????´????????°??????????´¢\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\t// ??????????????????????????°???????????????????????§???\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\t// ???????????????????????£???????´?????????????\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\t// 3????????°?????????????????????????????????????´¢??????????????????\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\t// ???????????°???????´????????????°\n\t\tint point = 0;\n\n\t\t// ???????????????????????????????????§???\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\t// ??????????????´????????????????????°??????3?????\\??£??????????????????\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\t// 3???????????°??????????????????\n\t\t\t\t\tpoint++;\n\t\t\t\t\t// ?????????????????£????????????????¶????\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// ???????????§3?????£???????????£??????????????????????????????????´¢??????????????????\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\t// ???????????°???????´????????????°\n\t\tint point = 0;\n\t\t// ?¶???????????????°?????????????????????????????°\n\t\tint continuousCount = 0;\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\t// ???????????£?¶???????????´????????????°????????\\??£??????????????????\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\t// ??°????????\\??£???????????°??????????????????\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\t// ??£?????????????¶??????????????????????\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\t// ???????¶???????????????°??????????????????\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\t// ?????????????????£????????????????¶????\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\t// ????´???????0????????????????????????????????????????????????????????°????????????\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\t// ??£???????????????????????????\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ??£?????????????¶????????????£????????£???????????????????????????\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n    static int[] n = new int[9];\n    static int[][] perms = new int[362880][9];\n\n    public static void main(String[] args) {\n        setPermutation();\n\n        Scanner sc = new Scanner(System.in);\n        int T = sc.nextInt();\n\n        for (int t=0; t<T; t++) {\n            for (int i=0; i<9; i++) n[i] = sc.nextInt();\n            for (int i=0; i<9; i++) {\n                char c = sc.next().toCharArray()[0];\n                if (c == 'G') n[i] += 10;\n                else if (c == 'B') n[i] += 20;\n            }\n\n            Arrays.sort(n);\n\n            boolean flg = true;\n            for (int[] perm : perms) {\n                if (judge(perm)) {\n                    System.out.println(1);\n                    flg = false;\n                    break;\n                }\n            }\n            if (flg) System.out.println(0);\n        }\n    }\n\n    static boolean judge(int[] p) {\n        return isSet(n[p[0]], n[p[1]], n[p[2]])\n                && isSet(n[p[3]], n[p[4]], n[p[5]])\n                && isSet(n[p[6]], n[p[7]], n[p[8]]);\n    }\n\n    static boolean isSet(int a, int b, int c) {\n        if (a == b && b == c) return true;\n        else if (a+1 == b && b+1 == c) return true;\n        else return false;\n    }\n\n    static void setPermutation() {\n        final int[] HASH_BASE = {40320, 5040, 720, 120, 24, 6, 2, 1, 1};\n\n        int n;\n        List<Integer> list;\n        for (int i=0; i<362880; i++) {\n            n = i;\n            list = new ArrayList<>(Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8));\n            for (int j=0; j<9; j++) {\n                perms[i][j] = list.get(n / HASH_BASE[j]);\n                list.remove(n / HASH_BASE[j]);\n                n %= HASH_BASE[j];\n            }\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\t// ?????????????????°?????\\???\n\t\tint gameCount = in.nextInt();\n\t\t// ??????????????????????????°????????\\???\n\t\tint[] cardNum = new int[9];\n\t\t// ????????????????????????????????\\???\n\t\tString[] cardColor = new String[9];\n\t\t// ??????????????????????´????????????????\n\t\tArrayList<Integer> resultList = new ArrayList<>();\n\n\t\tfor(int setCount = 0; setCount < gameCount; setCount++) {\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardNum[cardCount] = in.nextInt();\n\n\t\t\t}\n\n\t\t\tfor(int cardCount = 0; cardCount < 9; cardCount++) {\n\n\t\t\t\tcardColor[cardCount] = in.next();\n\n\t\t\t}\n\n\n\t\t\tRummy rummy = new Rummy(cardNum, cardColor);\n\n\t\t\tint[][] hadCard = rummy.hasCardSet(cardNum, cardColor);\n\n\t\t\tint point = 0;\n\n\t\t\tpoint += rummy.sameNumberCheck(hadCard);\n\n\t\t\tpoint += rummy.continuousNumberCheck(hadCard);\n\n\t\t\tif(point == 3) {\n\n\t\t\t\tresultList.add(1);\n\n\t\t\t} else {\n\n\t\t\t\tresultList.add(0);\n\n\t\t\t}\n\t\t}\n\n\t\tfor(int result: resultList) {\n\n\t\t\tSystem.out.println(result);\n\n\t\t}\n\n\t}\n}\n\nclass Rummy{\n\n\t// ?????£?????????\n\tint[] cardNum;\n\tString[] cardColor;\n\n\t// ?????????????????????\n\tRummy(int[] cardNum, String[] cardColor){\n\n\t\tthis.cardNum = cardNum;\n\t\tthis.cardColor = cardColor;\n\n\t}\n\n\t// ???????????????????????????????????£??????????????´?????????????????????\n\tint[][] hasCardSet(int[] cardNum, String[] cardColor) {\n\n\t\tint[][] hasCard = new int[3][9];\n\n\t\tfor(int i = 0; i < 9; i++) {\n\n\t\t\tfor(int j = 1; j <= 9; j++) {\n\n\t\t\t\tif(cardNum[i] == j) {\n\n\t\t\t\t\tswitch(cardColor[i]) {\n\n\t\t\t\t\tcase \"R\":\n\n\t\t\t\t\t\thasCard[0][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"G\":\n\n\t\t\t\t\t\thasCard[1][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"B\":\n\n\t\t\t\t\t\thasCard[2][j-1] += 1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn hasCard;\n\n\t}\n\n\tint sameNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] >= 3) {\n\n\t\t\t\t\tpoint++;\n\t\t\t\t\thasCard[i][j] -= 3;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\tint continuousNumberCheck(int[][] hasCard) {\n\n\t\tint point = 0;\n\t\tint continuousCount = 0;\n\n\t\thasCardSet(cardNum, cardColor);\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 9; j++) {\n\n\t\t\t\tif(hasCard[i][j] != 0) {\n\n\t\t\t\t\tcontinuousCount++;\n\n\t\t\t\t\tif(continuousCount == 3) {\n\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\thasCard[i][j] -= 1;\n\t\t\t\t\t\thasCard[i][j-1] -= 1;\n\t\t\t\t\t\thasCard[i][j-2] -= 1;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontinuousCount = 0;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn point;\n\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tclass Pair implements Comparable<Pair> {\n\t\tint num;\n\t\tchar color;\n\n\t\tPair(int num, char color) {\n\t\t\tthis.num = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.color != o.color ? this.color - o.color : this.num - o.num;\n\t\t}\n\t}\n\n\tboolean check(Pair a, Pair b, Pair c) {\n\t\tif (a.color != b.color || b.color != c.color) {\n\t\t\treturn false;\n\t\t}\n\t\tif (a.num == b.num && b.num == c.num) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.num + 1 == b.num && b.num + 1 == c.num) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tboolean check(Pair[] p, int k, boolean[] use) {\n\t\tif (9 <= k) {\n\t\t\treturn true;\n\t\t}\n\t\tif (use[k]) {\n\t\t\tif (check(p, k + 1, use)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\tif (use[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (int j = i + 1; j < 9; j++) {\n\t\t\t\t\tif (use[j]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (check(p[k], p[i], p[j])) {\n\t\t\t\t\t\tuse[k] = use[i] = use[j] = true;\n\t\t\t\t\t\tif (check(p, k + 1, use)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuse[k] = use[i] = use[j] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\n\t\tfor (int T = sc.nextInt() - 1; 0 <= T; T--) {\n\t\t\tint n = 9;\n\t\t\tPair[] p = new Pair[n];\n\t\t\tint[] num = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tnum[i] = sc.nextInt();\n\t\t\t}\n\t\t\tchar[] color = new char[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tcolor[i] = sc.next().charAt(0);\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tp[i] = new Pair(num[i], color[i]);\n\t\t\t}\n\t\t\tArrays.sort(p);\n\t\t\tif (check(p, 0, new boolean[9])) {\n\t\t\t\tSystem.out.println(1);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n \npublic class Main3{\n \n    public static void main(String[] args) {\n        \n        Scanner scan = new Scanner(System.in);\n        \n        int num = scan.nextInt();\n        \n        int[][] card= new int[2][9];\n        \n        for(int k = 0; k < num; k++){\n        \t\n            for(int j = 0; j < 2; j++){\n                for(int i = 0; i < 9; i++){\n \n                    if(j == 0){\n                        card[j][i] = scan.nextInt();\n                    }else{\n \n                        String color =scan.next();\n                        int intColor = 0;\n                        if(\"R\".equals(color)){\n                            intColor = 11;\n                        }else if(\"G\".equals(color)){\n                            intColor = 12;\n                        }else {\n                            intColor = 13;\n                        }\n                        card[j][i] = intColor;\n                    }\n                }\n            }\n \n            \n            Card insCard = new Card();\n            insCard.setCard(card);\n \n            \n            insCard.sort(card);\n \n            card = insCard.getCard();\n \n \n            \n            int intCount = 0;\n            intCount = insCard.win(card);\n            \n \n            if(3 <= intCount){\n                System.out.println(1);\n \n            }else{\n                System.out.println(0);\n            }\n \n \n        }\n \n \n \n    }\n \n    static class Card {\n    \t\n        private int[][] card = new int[2][9];\n \n        \n        Card(){\n \n        }\n \n \n        public int[][] getCard() {\n            return card;\n        }\n \n        \n        public void setCard(int[][] card) {\n            this.card = card;\n        }\n \n        \n        public void sort(int[][] card){\n \n            \n            for(int i = 0; i < 8; i++){\n \n                for(int j = 0; j < 8-i; j++ ){\n \n                    if(card[1][j] > card[1][j+1]){\n                        int temp = card[1][j];\n                        card[1][j] = card[1][j+1];\n                        card[1][j+1] = temp;\n                        \n                        int temp2 = card[0][j];\n                        card[0][j] = card[0][j+1];\n                        card[0][j+1] = temp2;\n                    }\n                }\n            }\n \n \n            for(int i = 0; i < 8; i++){\n \n                for(int j = 0; j < 8-i; j++){\n                    \n                    if(card[1][j] == card[1][j+1] && card[0][j] > card[0][j+1]){\n \n                        int temp = card[0][j];\n                        card[0][j] = card[0][j+1];\n                        card[0][j+1] = temp;\n                        \n                    }\n \n \n                }\n            }\n \n        }\n \n        \n        public int win(int[][] card){\n \n            \n            int intCount = 0;\n           \n \n \n           \n            for(int k= 0; k < 7; k++){\n                \n                for(int j = k+1; j < 8; j++ ){\n                   \n                    for(int i = j+1; i < 9; i++){\n                    \t\n                       if(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n                            \n \n                            if(card[0][k] != 0 && card[0][k] == card[0][j] -1 && card[0][k] == card[0][i] -2){\n \n \n                               \n                                intCount++;\n                               \n                                card[0][k] = 0;\n                                card[0][j] = 0;\n                                card[0][i] = 0;\n                            }\n                        }\n \n                    }\n                }\n            }\n            \n           \n            for(int k= 0; k < 7; k++){\n                \n                for(int j = k+1; j < 8; j++ ){\n                    \n                    for(int i = j+1; i < 9; i++){\n                        \n                        if(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n                           \n                            if(card[0][k] != 0 && card[0][k] == card[0][j] && card[0][k] == card[0][i]){\n \n                                \n                                intCount++;\n                               \n                                card[0][k] = 0;\n                                card[0][j] = 0;\n                                card[0][i] = 0;\n                            }\n                        }\n                    }\n                }\n            }\n            return intCount;\n        }\n \n \n    }\n \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Rummy3 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\n\t\tScanner scan = new Scanner(System.in);\n\n\t\t//??????????????°?????????\n\t\tint num = scan.nextInt();\n\n\t\t//??????????????±??????????????????????????°\n\t\tint[][] card= new int[2][9];\n\n\t\t//???????????????????????°?????????\n\t\tfor(int k = 0; k < num; k++){\n\n\t\t\t//??????????????±???????´?\n\t\t\tfor(int j = 0; j < 2; j++){\n\t\t\t\tfor(int i = 0; i < 9; i++){\n\n\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\tcard[j][i] = scan.nextInt();\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tString color =scan.next();\n\t\t\t\t\t\tint intColor = 0;\n\t\t\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\t\t\tintColor = 11;\n\t\t\t\t\t\t}else if(\"G\".equals(color)){\n\t\t\t\t\t\t\tintColor = 12;\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tintColor = 13;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcard[j][i] = intColor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//????????????????????????????????????\n\t\t\tCard insCard = new Card();\n\t\t\tinsCard.setCard(card);\n\n\t\t\t//?????????????????????????????????\n\t\t\tinsCard.sort(card);\n\n\t\t\tcard = insCard.getCard();\n\n\n\t\t\t//????????????????????????\n\t\t\tint intCount = 0;\n\t\t\tintCount = insCard.win(card);\n\t\t\t//System.out.println(\"intCount: \" + intCount );\n\n\t\t\tif(3 <= intCount){\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t}else{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\n\n\t\t}\n\n\n\n\t}//Main??????\n\n\tstatic class Card {\n\n\t\t//?????£?????????\n\t\t//??????????????±??????????????????????????°\n\t\tprivate int[][] card = new int[2][9];\n\n\t\t//?????????????????????\n\t\tCard(){\n\n\t\t}\n\n\n\t\tpublic int[][] getCard() {\n\t\t    return card;\n\t\t}\n\n\t\t/**\n\t\t * card????¨????????????????\n\t\t * @param card card\n\t\t */\n\t\tpublic void setCard(int[][] card) {\n\t\t    this.card = card;\n\t\t}\n\n\t\t//Method ?????????????????????(?°??????????????????????)\n\t\tpublic void sort(int[][] card){\n\n\t\t\t//?¨???????????????¨???????????????\n\t\t\t//??????????????????????????????\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++ ){\n\n\t\t\t\t\tif(card[1][j] > card[1][j+1]){\n\t\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\t\tcard[1][j] = card[1][j+1];\n\t\t\t\t\t\tcard[1][j+1] = temp;\n\t\t\t\t\t\t//??°????????\\????????????\n\t\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfor(int i = 0; i < 8; i++){\n\n\t\t\t\tfor(int j = 0; j < 8-i; j++){\n\t\t\t\t\t//??£????????????????????????????????????????????°????????\\????????????\n\t\t\t\t\tif(card[1][j] == card[1][j+1] && card[0][j] > card[0][j+1]){\n\n\t\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\t\tcard[0][j] = card[0][j+1];\n\t\t\t\t\t\tcard[0][j+1] = temp;\n\t\t\t\t\t\t//????????\\???????????????\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t//Mehtod ???????????¶????????????????????????????????¢??????\n\t\tpublic int win(int[][] card){\n\n\t\t\t//???????????¶???????????????????????????????????°\n\t\t\tint intCount = 0;\n\t\t\t//???????????°????????????????????°\n\n\n\t\t\t//for???????????£???????????????\n\t\t\t//1?????????????????????(??????????????°Ma6???)\n\t\t\tfor(int k= 0; k < 7; k++){\n\t\t\t\t//????????????????????????(??????????????°Max7???)\n\t\t\t\tfor(int j = k+1; j < 8; j++ ){\n\t\t\t\t\t//????????????????????????(??????????????°Max8???)\n\t\t\t\t\tfor(int i = j+1; i < 9; i++){\n\t\t\t\t\t\t//System.out.println(\" card\" +\"[\" + k + \"]\" + card[0][k] + \" card\" +\"[\" + j + \"]\" + card[0][j] + \" card\" +\"[\" + i + \"]\" + card[0][i]);\n\t\t\t\t\t\tif(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n\t\t\t\t\t\t\t//????±??????????????????????????????????\n\n\t\t\t\t\t\t\tif(card[0][k] != 0 && card[0][k] == card[0][j] -1 && card[0][k] == card[0][i] -2){\n\n\n\t\t\t\t\t\t\t\t//????±?????????????????????????(???)????????§???????????????+????????\\????????£?????????\n\t\t\t\t\t\t\t\t//??????????????¢??????\n\t\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\t\t//????±??????????????????????????????°????????????\n\t\t\t\t\t\t\t\tcard[0][k] = 0;\n\t\t\t\t\t\t\t\tcard[0][j] = 0;\n\t\t\t\t\t\t\t\tcard[0][i] = 0;\n\t \t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"for1=intCount:\" + intCount);\n\t\t\t//for???2????????´????????????\n\t\t\t//1?????????????????????(??????????????°Ma6???)\n\t\t\tfor(int k= 0; k < 7; k++){\n\t\t\t\t//????????????????????????(??????????????°Max7???)\n\t\t\t\tfor(int j = k+1; j < 8; j++ ){\n\t\t\t\t\t//????????????????????????(??????????????°Max8???)\n\t\t\t\t\tfor(int i = j+1; i < 9; i++){\n\t\t\t\t\t\t//System.out.println(\" card\" +\"[\" + k + \"]\" + card[0][k] + \" card\" +\"[\" + j + \"]\" + card[0][j] + \" card\" +\"[\" + i + \"]\" + card[0][i]);\n\n\t\t\t\t\t\tif(card[1][k] == card[1][j] && card[1][j] == card[1][i]){\n\t\t\t\t\t\t\t//????±??????????????????????????????????\n\t\t\t\t\t\t\tif(card[0][k] != 0 && card[0][k] == card[0][j] && card[0][k] == card[0][i]){\n\n\t\t\t\t\t\t\t\t//System.out.println(\"card1:\" + card[0][k] + \"card2:\" + card[0][j] + \"card3:\" + card[0][i]);\n\t\t\t\t\t\t\t\t//????±?????????????????????????(???)????????§???????????????+????????\\????????£?????????\n\t\t\t\t\t\t\t\t//??????????????¢??????\n\t\t\t\t\t\t\t\tintCount++;\n\t\t\t\t\t\t\t\t//????±??????????????????????????????°????????????\n\t\t\t\t\t\t\t\tcard[0][k] = 0;\n\t\t\t\t\t\t\t\tcard[0][j] = 0;\n\t\t\t\t\t\t\t\tcard[0][i] = 0;\n\t \t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"for2=intCount:\" + intCount);\n\t\t\treturn intCount;\n\t\t}\n\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "package Rummy;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n    \tScanner scan = new Scanner(System.in);\n\t\tint T = Integer.parseInt(scan.nextLine());\n\t\tString str = \"\";\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] num = str.split(\" \");\n\t\t\tstr = scan.nextLine();\n\t\t\tString[] rgb = str.split(\" \");\n\t\t\tsort(num, rgb);\n\t\t}\n\t}\n\n\tprivate static void sort(String[] num, String[] rgb) {\n\t\tArrayList<Integer> R = new ArrayList<Integer>();\n\t\tArrayList<Integer> G = new ArrayList<Integer>();\n\t\tArrayList<Integer> B = new ArrayList<Integer>();\n\t\tString ans = \"\";\n\t\tfor(int i = 0; i < num.length; i++){\n\t\t\tif(rgb[i].equals(\"R\")){\n\t\t\t\tR.add(Integer.parseInt(num[i]));\n\t\t\t}else if(rgb[i].equals(\"G\")){\n\t\t\t\tG.add(Integer.parseInt(num[i]));\n\t\t\t}else{\n\t\t\t\tB.add(Integer.parseInt(num[i]));\n\t\t\t}\n\t\t}\n\n\t\tif(R.size()%3 != 0 || G.size()%3 != 0 || B.size()%3 != 0){\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\n\t\tCollections.sort(R);\n\t\tif(numSearch(R)){\n\t\t\tSystem.out.println(\"1\");\n\t\t\treturn;\n\t\t}\n\n\t\tCollections.sort(G);\n\t\tif(numSearch(G)){\n\t\t\tSystem.out.println(\"1\");\n\t\t\treturn;\n\t\t}\n\n\t\tCollections.sort(B);\n\t\tif(numSearch(B)){\n\t\t\tSystem.out.println(\"1\");\n\t\t\treturn;\n\t\t}else{\n\t\t\tSystem.out.println(\"0\");\n\t\t\treturn;\n\t\t}\n\n\n\n\t}\n\n\n\n\tprivate static boolean numSearch(ArrayList<Integer> r) {\n\t\tint i = 0;\n\t\tswitch(r.size()){\n\t\tcase 3:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) return true;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) return true;\n\t\t\tbreak;\n\n\t\tcase 6:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif(i == 2) return true;\n\t\t\tbreak;\n\n\t\tcase 9:\n\t\t\tif( r.get(0) == r.get(1) && r.get(0) == r.get(2) ) i++;\n\t\t\tif( r.get(0) == r.get(1)-1 && r.get(0) == r.get(2)-2 ) i++;\n\t\t\tif( r.get(3) == r.get(4) && r.get(3) == r.get(5) ) i++;\n\t\t\tif( r.get(3) == r.get(4)-1 && r.get(3) == r.get(5)-2 ) i++;\n\t\t\tif( r.get(6) == r.get(7) && r.get(6) == r.get(8) ) i++;\n\t\t\tif( r.get(6) == r.get(7)-1 && r.get(6) == r.get(8)-2 ) i++;\n\t\t\tif(i == 3) return true;\n\t\t\tbreak;\n\t\t}\n\n\t\treturn false;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nclass Main {\n\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n        int T = sc.nextInt();\n        int data[][]=new int [T][9];\n        String color[][]=new String[T][9];\n        for(int i=0; i<T; i++)\n        {\n            //????????????\n            for(int j=0; j<9; j++)\n            {\n                data[i][j]=sc.nextInt();\n            }\n            for(int j=0; j<9; j++)\n            {\n                color[i][j]=sc.next();\n            }\n            //??°????????¨???????????????????????????\n            for(int j=0; j<4; j++)\n            {\n                for(int k=0; k<8; k++)\n                {\n                    if(data[i][k]>=data[i][k+1])\n                    {\n                        int temp = data[i][k];\n                        data[i][k]=data[i][k+1];\n                        data[i][k+1]=temp;\n                        String ctemp = color[i][k];\n                        color[i][k]=color[i][k+1];\n                        color[i][k+1]=color[i][k];\n                    }\n                }\n            }\n            //??????????????????????????????\n            for(int j=0; j<4; j++)\n            {\n                for(int k=0; k<8; k++)\n                {\n                    if(color[i][k].compareTo(color[i][k+1])>=0 && data[i][k]==data[i][k+1])\n                    {\n                        int temp = data[i][k];\n                        data[i][k]=data[i][k+1];\n                        data[i][k+1]=temp;\n                        String ctemp = color[i][k];\n                        color[i][k]=color[i][k+1];\n                        color[i][k+1]=color[i][k];\n                    }\n                }\n            }\n            //?????¨??????????????????????????¨???????????£?????????(????????????????????????????????£\n            if((((data[i][0]==data[i][1] && data[i][1]==data[i][2]) || (data[i][0]==data[i][1]-1 && data[i][1]==data[i][2]-1))&&\n                    (color[i][0]==color[i][1] && color[i][1]==color[i][2])) &&\n                    (((data[i][3]==data[i][4] && data[i][4]==data[i][5]) || (data[i][3]==data[i][4]-1 && data[i][4]==data[i][5]-1))&&\n            (color[i][3]==color[i][4] && color[i][4]==color[i][5])) &&\n                    (((data[i][6]==data[i][7] && data[i][7]==data[i][8]) || (data[i][6]==data[i][7]-1 && data[i][7]==data[i][8]-1))&&\n                            (color[i][6]==color[i][7] && color[i][7]==color[i][8])) )\n            {\n                System.out.println(1);\n            }\n            else\n            {\n                System.out.println(0);\n            }\n        }\n        sc.close();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    boolean checkNum(Set num1, Set num2, Set num3){\n        int i,j;\n        i = num3.num - num2.num;\n        j = num2.num - num1.num;\n        if(((i == 1) && (j == 1)) || ((i == 0) && (j == 0))){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\nclass DataComparator implements java.util.Comparator<Set>{\n    public int compare(Set o1, Set o2){\n        if(o1.color == o2.color){\n            return o1.num - o2.num;\n        }else{\n            return o1.color - o2.color;\n        }\n    }\n}\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n    Set[] card = new Set[9];\n\n    for(int i=0;i<n;i++){\n      for(int j=0;j<9;j++){ //input_numbers\n        card[j] = new Set();\n        card[j].num = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      for(int l=0;l<9;l++){  //check_color\n        switch(ch[l]){\n          case \"R\": card[l].color = 1;\n                    break;\n          case \"G\": card[l].color = 2;\n                    break;\n          case \"B\": card[l].color = 3;\n                    break;\n          default : break;\n        }\n      }\n      Arrays.sort(card, new DataComparator());\n\n/*    sort degug\n      for(int k=0;k<9;k++){\n          System.out.print(card[k].num + \" \");\n      }\n      System.out.println();\n      for(int k=0;k<9;k++){\n          System.out.print(card[k].color + \" \");\n      }\n      System.out.println();\n*/\n\n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = card[j].num; \n          set1[j].color = card[j].color;\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = card[j+3].num;\n          set2[j].color = card[j+3].color;\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = card[j+6].num;\n          set3[j].color = card[j+6].color;\n      }\n\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n\n      if(check1.sameColor(set1[0],set1[1],set1[2])){\n          if(check1.checkNum(set1[0],set1[1],set1[2])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameColor(set2[0],set2[1],set2[2])){\n          if(check2.checkNum(set2[0],set2[1],set2[2])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameColor(set3[0],set3[1],set3[2])){\n          if(check3.checkNum(set3[0],set3[1],set3[2])){\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    }//end_of_while\n  }//end_of_main\n}//end_of_Rummy"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main{\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * @param cardArr\n\t\t\t *            ????´???´???\n\t\t\t * @param tmpNum\n\t\t\t *            ??°???????????±\n\t\t\t * @param tmpColor\n\t\t\t *            ???????????±\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t// ??????????????°??????????????¨????????????\n\t\t\tString tmpNum = br.readLine();\n\n\t\t\t// ??????????????????????????¨????????????\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t/**\n\t\t\t * String?????°???????§£ ??°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ??????????????¶???????????¨?????¨???????????????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? ???????????¶??????????????°??? ????????????????????°0\n\t\t\t */\n\t\t\t// ????????????????¨??????????????????????\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨?\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcardNum_Color_Sort(cardArr);\n\n\t\tfor (int nci = 0; nci < cardArr.size(); nci++) {\n\t\t\tSystem.out.println(cardArr.get(nci).getFrontnumber() + cardArr.get(nci).getRearColor());\n\t\t}\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tcard_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolcnt = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolcnt++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????????????????°???????????§????????????????????§???????????£???????????¨?????¶????????????????????¨????¨?\n\t\t *\n\t\t * ?????????????????§??????????????°????????§???????????????\n\t\t *\n\t\t * int result;\n\t\t *\n\t\t * System.out.println(result = (toolcnt== 0)? 1:0);\n\t\t */\n\t\tif (toolcnt == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint result = 1;\n\t\t\tSystem.out.println(result);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint result = 0;\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void card_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)?????????????????????????????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3-1)?????£?¶??????°????????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getFrontnumber()) {\n\t\t\t\t\t\t\t\t// ????????????for???????????§??±???????????¨?????£?§£\n\t\t\t\t\t\t\t\t// ?????¶??????????????°?????????????????¨\n\t\t\t\t\t\t\t\tfor (int tool = cnt1; tool <= cnt3; tool++) {\n\t\t\t\t\t\t\t\t\tcardArr.get(tool).setUse(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// cardArr.get(cnt1).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt2).setUse(true);\n\t\t\t\t\t\t\t\t// cardArr.get(cnt3).setUse(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void cardNum_Color_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber()) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_card = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_card);\n\t\t\t\t}\n\t\t\t\tif (cardArr.get(cnt2).getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ??°???????????????????????????????????°\n\t\t\t\t\tUTRummyCard tmp_card = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_card);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????Card ?????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°????????\\????????±????????\\???\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ????????????????????\\????????±????????\\???\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * ????????????????¨??????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ?????????????????????int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * ?????????????????????boolean???????£???????????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t */\n\tpublic UTRummyCard() {\n\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int,String???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n/**\n * <pre>\n *\tAOJ Rummy?????????????????????????????????????????????????????°\n * </pre>\n *\n * @author ??????\n * @category AOJRummy\n * @version 1.8_45\n * @since 1.8_45\n */\npublic class Main {\n\n\t/**\n\t * ????????°???????????¨?????????????????????\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\n\t\t// ??????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// ???????????????????????°\n\t\tint card_huda = 9;\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt1 = 0; cnt1 < set; cnt1++) {\n\n\t\t\t/**\n\t\t\t * ???????????????????????????\n\t\t\t *\n\t\t\t * @param cardArr\n\t\t\t *            ????????????????´???´???\n\t\t\t */\n\t\t\tArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();\n\n\t\t\t/**\n\t\t\t * ??\\??????????§£?????°????????????????´?\n\t\t\t *\n\t\t\t * @param transNum\n\t\t\t *            ??°???????????±???????´???´???\n\t\t\t * @param transColor\n\t\t\t *            ???????????±???????´???´???\n\t\t\t */\n\t\t\t// ??????????????°??????????????????\n\t\t\tString[] transNum = br.readLine().split(\" \");\n\t\t\t// ??????????????????????????????\n\t\t\tString[] transColor = br.readLine().split(\" \");\n\n\t\t\t// ?????????????????°?????????\n\t\t\tfor (int cnt2 = 0; cnt2 < card_huda; cnt2++) {\n\t\t\t\t// ????????????????????¨??¶??????\n\t\t\t\tboolean tool = false;\n\t\t\t\t// ????´??????????????????????????????????????????????\n\t\t\t\t// ?????????????¨?????????????????????\\\n\t\t\t\tcardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * ????????? : ???????????¶??????????????°??? ????????????????????°0\n\t\t\t *\n\t\t\t * ????????????????¨??????????????????????\n\t\t\t */\n\t\t\tutRummyGame(cardArr);\n\t\t}\n\t}// ?????????????????????????????????\n\n\t/**\n\t * ????????????????????´??? ??????????¨? 3)???????????????\n\t *\n\t * @return result ??????????????????????????????\n\t */\n\tprivate static void utRummyGame(ArrayList<UTRummyCard> cardArr) {\n\n\t\t// ?????????????????\\?????°??????????????????????????????R, G, B????????°????????????\n\t\tcard_NumAndColor_Sort(cardArr);\n\n\t\t// ?????£?¶????????????°????????????????¨?\n\t\tvictoryCondition_Inspection(cardArr);\n\n\t\t// ???????????????\n\t\toutputAnswer(cardArr);\n\n\t}// utRummy????????????????????????\n\n\tprivate static void outputAnswer(ArrayList<UTRummyCard> cardArr) {\n\t\t// ???????????????????????????????¢????\n\t\tint toolchk_wasUsed = 0;\n\t\tfor (int cnt = 0; cnt < cardArr.size(); cnt++) {\n\t\t\tif (cardArr.get(cnt).isUse() == false) {\n\t\t\t\ttoolchk_wasUsed++;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * ????????????????????§???????????????????????¶???????????????????????¨????¨?\n\t\t *\n\t\t **** ?????????????????§???????¨?????????????\n\t\t *\n\t\t * int answer;\n\t\t *\n\t\t * System.out.println(answer = (toolcnt == 0)? 1:0);\n\t\t */\n\t\tif (toolchk_wasUsed == 0) {\n\t\t\t// ??????????????¨??¶?????????????????£?????????????????¶????????????\n\t\t\tint victoryAnswer = 1;\n\t\t\tSystem.out.println(victoryAnswer);\n\t\t} else {\n\t\t\t// ????????????????????????????????¨?????¶??????????????????\n\t\t\tint defeatAnswer = 0;\n\t\t\tSystem.out.println(defeatAnswer);\n\t\t}\n\t}// outputAnswer????????????????????????\n\n\t/**\n\t * ???????????¶?????????????´???¨???????????????????±?????????????????????¨\n\t *\n\t * @param cardArr\n\t *            ????¨?????±????????????????\n\t */\n\tprivate static void victoryCondition_Inspection(ArrayList<UTRummyCard> cardArr) {\n\n\t\t // ????????????????????????3?????????????????¢??????\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {\n\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {\n\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {\n\n\t\t\t\t\t// (1)????¨????????????????\n\t\t\t\t\tif (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false\n\t\t\t\t\t\t\t&& cardArr.get(cnt3).isUse() == false) {\n\t\t\t\t\t\t// (2)???????????§?????????\n\t\t\t\t\t\tif (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())\n\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {\n\t\t\t\t\t\t\t// (3)?????£?¶??????°????????????????????°???3?????§?????????\n\t\t\t\t\t\t\tif (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1\n\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2\n\t\t\t\t\t\t\t\t\t|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()\n\t\t\t\t\t\t\t\t\t\t\t&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getFrontnumber()) {\n\n\t\t\t\t\t\t\t\t// ????????????????????????????¨????????????????\n\t\t\t\t\t\t\t\tfor (int tool_btn = 0; tool_btn < cardArr.size(); tool_btn++) {\n\t\t\t\t\t\t\t\t\tif (cardArr.get(tool_btn) == cardArr.get(cnt1)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt2)\n\t\t\t\t\t\t\t\t\t\t\t|| cardArr.get(tool_btn) == cardArr.get(cnt3)) {\n\t\t\t\t\t\t\t\t\t\t// ????????§?¨??????????????????¶???????????´\n\t\t\t\t\t\t\t\t\t\tcardArr.get(tool_btn).setUse(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardInspection????????????????????????\n\n\t/**\n\t * ??????????????°?????\\????????\\??´??????\n\t *\n\t * ??????R, G, B????????°????????????\n\t *\n\t * @param cardArr\n\t *            ??´???????±????????????????\n\t */\n\tprivate static void card_NumAndColor_Sort(ArrayList<UTRummyCard> cardArr) {\n\n\t\tfor (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {\n\t\t\tfor (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {\n\t\t\t\tif (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber() || cardArr.get(cnt2)\n\t\t\t\t\t\t.getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {\n\t\t\t\t\t// ???????????????????????°\n\t\t\t\t\tUTRummyCard tmp_card = cardArr.get(cnt2);\n\t\t\t\t\tcardArr.set(cnt2, cardArr.get(cnt2 + 1));\n\t\t\t\t\tcardArr.set(cnt2 + 1, tmp_card);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}// cardNum_Color_Sort????????????????????????\n\n}// Rummy4?????????????????????\n\n/**\n * ?????????????????? ????????????????????????????????????????????????????????????\n *\n * @author ?????????????????§???\n */\nclass UTRummyCard {\n\n\t/**\n\t * int ??????????????°??????\n\t */\n\tprivate int frontnumber = 0;\n\n\t/**\n\t * String ??????????????????\n\t */\n\tprivate String rearColor = \"\";\n\n\t/**\n\t * boolean ????????????????¨?????????????\n\t */\n\tprivate boolean isUse = false;\n\n\t/**\n\t * ??????????????°???????????????????????????\n\t *\n\t * @return int?????????\n\t */\n\tpublic int getFrontnumber() {\n\t\treturn frontnumber;\n\t}\n\n\t/**\n\t * ????????????????????§int????????\\????????????????????????????????????\n\t *\n\t * @param frontnumber\n\t *            int?????????\n\t */\n\tpublic void setFrontnumber(int frontnumber) {\n\t\tthis.frontnumber = frontnumber;\n\t}\n\n\t/**\n\t * ???????????????????????????????????????\n\t *\n\t * @return String?????????\n\t */\n\tpublic String getRearColor() {\n\t\treturn rearColor;\n\t}\n\n\t/**\n\t * ?????????????????????String????????\\????????????????????????????????????\n\t *\n\t * @param rearColor\n\t *            String?????????\n\t */\n\tpublic void setRearColor(String rearColor) {\n\t\tthis.rearColor = rearColor;\n\t}\n\n\t/**\n\t * boolean???????£????????????????????????????\n\t *\n\t * @return boolean?????????\n\t */\n\tpublic boolean isUse() {\n\t\treturn isUse;\n\t}\n\n\t/**\n\t * boolean???????????????????????????\n\t *\n\t * @param isUse\n\t *            boolean?????????\n\t */\n\tpublic void setUse(boolean isUse) {\n\t\tthis.isUse = isUse;\n\t}\n\n\t/**\n\t * ????????????????????????\n\t *\n\t * ????????????????????????????????????????????????????????°??¨??????int, String, boolean???\n\t *\n\t * @param num\n\t *            ???????????????????????????????????°???\n\t * @param color\n\t *            ????????????????????????????????????\n\t * @param isUse\n\t *            ????¨??????¨?????§??????????£????\n\t */\n\tpublic UTRummyCard(int num, String color, boolean tool) {\n\t\tfrontnumber = num;\n\t\trearColor = color;\n\t\tisUse = tool;\n\t}\n}// UTRummyCard?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = Integer.parseInt(scan.next());\n\t\tfor( int i = 0; i < n; i++ ){\n\t\t\tint[] num = new int[9];\t//?????????????????????\n\t\t\tchar[] color = new char[9];\t//??????????????????\n\t\t\tboolean[] left = new boolean[9];\t//???????????§???????????????????????£?????????????????????\n\t\t\tfor( int j = 0; j < 9; j++ ){\n\t\t\t\tnum[j] = Integer.parseInt(scan.next());\n\t\t\t}\n\t\t\tfor( int j = 0; j < 9; j++ ){\n\t\t\t\tString temp = scan.next();\n\t\t\t\tcolor[j] = temp.charAt(0);\n\t\t\t}\n\t\t\tfor( int j = 0; j < 9; j++ ){\n\t\t\t\tleft[j] = true;\n\t\t\t}\n\t\t\tSystem.out.println(Check(num, color, left));\n\t\t}\n\t\treturn;\n\t}\n\t\n\tpublic static int Check(int num[], char color[], boolean left[]){\n\t\tint count = 0;\n\t\tint re = 0;\n\t\tfor( int i = 0; i < 9; i++ ){\n\t\t\tif( left[i] ){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif( count == 0 ){\n\t\t\treturn 1;\n\t\t}\n\t\tfor( int i = 0; i < 9; i++ ){\n\t\t\tfor( int j = i+1; j< 9; j++ ){\n\t\t\t\tfor( int k = j+1; k < 9; k++ ){\n\t\t\t\t\tif( left[i]  && left[j] && left[k] ){\n\t\t\t\t\t\tif( color[i] == color[j] && color[j] == color[k] ){\n\t\t\t\t\t\t\t//??¨?????????????????????????????????\n\t\t\t\t\t\t\tif( CheckSN(num[i], num[j], num[k]) || (num[i] == num[j] && num[j] == num[k]) ){\n\t\t\t\t\t\t\t\tleft[i] = left[j] = left[k] = false;\n\t\t\t\t\t\t\t\tif( Check(num, color, left) > 0 ){\n\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tleft[i] = left[j] = left[k] = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn 0;\n\t}\n\t\n\tpublic static boolean CheckSN(int a, int b, int c){\n\t\t//????????????????????£???????¢?????????????\n\t\tint temp = 0;\n\t\tfor( int i = 0; i < 2; i++ ){\n\t\t\tif( a > b ){\n\t\t\t\ttemp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\t\t\tif( b > c ){\n\t\t\t\ttemp = b;\n\t\t\t\tb = c;\n\t\t\t\tc = temp;\n\t\t\t}\n\t\t}\n\t\tif( a == b-1 && b == c-1 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint intHairetsuNum[] = new int[9]; \n\t\tString strHairetsuNum[] = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString strHairetsuColor[] = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main\n{\n\tpublic static int a[];\n\tpublic static String b[];\n\tpublic static int p[]=new int[9];\n\tpublic static String p2[]=new String[9];\n\tpublic static boolean judge;\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tint I=in.nextInt();\n\t\twhile(I-->0)\n\t\t{\n\t\t\ta=new int[9];\n\t\t\tb=new String[9];\n\t\t\tjudge=false;\n\t\t\tboolean use[]=new boolean[9];\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t\ta[i]=in.nextInt();\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t\tb[i]=in.next();\n\n\t\t\tmake_perm(0,p,p2,use);\n\t\t\tSystem.out.println(judge ? 1:0);\n\t\t}\n\t}\n\n\tstatic void make_perm(int n,int p[],String p2[],boolean use[])\n\t{\n\t\tif(judge)\n\t\t\treturn;\n\t\tif(n==9)\n\t\t\tcheck(p,p2);\n\t\telse \n\t\t{\n\t\t\tfor(int i=0;i<9;i++)\n\t\t\t{\n\n\t\t\t\tif(use[i]) \n\t\t\t\t\tcontinue;\n\t\t\t\tp[n]=a[i];\n\t\t\t\tp2[n]=b[i];\n\t\t\t\tuse[i] = true;\n\t\t\t\tmake_perm(n+1,p,p2,use);\n\t\t\t\tuse[i] = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic void check(int p[], String p2[])\n\t{\n\t\tif((p[0]+1==p[1]&&p[1]+1==p[2])||(p[0]==p[1]&&p[1]==p[2]))\n\t\t{\n\t\t\tif(p2[0].equals(p2[1])&&p2[1].equals(p2[2]))\n\t\t\t\tjudge=true;\n\t\t\telse\n\t\t\t\treturn;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tjudge=false;\n\t\t\treturn;\n\t\t}\n\t\tif(p[3]+1==p[4]&&p[4]+1==p[5]||(p[3]==p[4]&&p[4]==p[5]))\n\t\t{\n\t\t\tif(p2[3].equals(p2[4])&&p2[4].equals(p2[5]))\n\t\t\t\tjudge=true;\n\t\t\telse\n\t\t\t{\n\t\t\t\tjudge=false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tjudge=false;\n\t\t\treturn;\n\t\t}\n\t\tif(p[6]+1==p[7]&&p[7]+1==p[8]||(p[6]==p[7]&&p[7]==p[8]))\n\t\t{\n\t\t\tif(p2[6].equals(p2[7])&&p2[7].equals(p2[8]))\n\t\t\t\tjudge=true;\n\t\t\telse\n\t\t\t{\n\t\t\t\tjudge=false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tjudge=false;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tstatic public void debug(Object... o)\n\t{\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main{\n\n\t/**\n\t * ?????????????????????????????\\???????¢??????°???\n\t * ??????\n\t * 1) ????´???????????????? ??????String + String ??? Red 1 [1R] White 2 [2W] Gold 3 [3G]\n\t * 2) if??§????´¢????????????.contains() ??? switch??? ??? return;\n\t *\n\t * ??????????????§BufferedReader?????????\n\t *\n\t * @throws IOException\n\t *             try-catch??????throws IOException?????£?¨??????????\n\t */\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// ?????????????????????\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// ?????????????´???´???\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// 1??????????????????set?????°??????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// for????????? set????????°?????????\n\t\tfor (int cnt = 0; cnt < set; cnt++) {\n\t\t\t// CardRummy????????? ???????????°??????????????????????????????????????????????????°???\n\t\t\tRummy ru = new Rummy(br.readLine(), br.readLine());\n\t\t\t// ???????????¶??????????????°??? ????????????????????°0\n\t\t\t// result????????????????????????????´???´???\n\t\t\tint result = ru.playtheGame();\n\t\t\t// ?????????????´?\n\t\t\tanswer.add(result);\n\t\t}\n\n\t\t// for????????? ??????????????????????????????\n\t\tfor (int cnt = 0; cnt < answer.size(); cnt++)\n\t\t\t// ???????????????\n\t\t\tSystem.out.println(answer.get(cnt));\n\n\t}// ????????????????????????????????????\n\n\t/**\n\t * ?????????CardRummy\n\t */\n\tpublic static class Rummy {\n\t\t/**\n\t\t * ?????????????????°??¶???\n\t\t */\n\t\tprivate static final int ONECARDSET = 9;\n\t\t/**\n\t\t * ?????????????????£?????????????????????\n\t\t */\n\t\tprivate static final int CASTAREA = 2;\n\t\t/**\n\t\t * ?????????????????£?????????????????°??????????´???´???\n\t\t */\n\t\tprivate static final int CASTADDRESS =0;\n\n\t\t/**\n\t\t * ????????????????´???´???\n\t\t */\n\t\tArrayList<String> card = new ArrayList<String>();\n\n\t\t/**\n\t\t * ?????°??????????????? ?????£???????????????????´???????\n\t\t *\n\t\t * @param tmpNum\n\t\t *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7\n\t\t * @param transColor\n\t\t *            ???????????????????????? ??????R R R R R R G G G\n\t\t */\n\t\tpublic Rummy(String tmpNum, String tmpColor) {// ???????????°????????????\n\t\t\t// ?????°???????§£ ??°??????????´?\n\t\t\tString[] transNum = tmpNum.split(\" \");\n\t\t\t// ?????°???????§£ ??????????´?\n\t\t\tString[] transColor = tmpColor.split(\" \");\n\t\t\t// ?????¨??°??????????????????????´?????????´???\n\t\t\tString tmpCard = \"\";\n\n\t\t\t// for????????? ????§£??????????????????????????????\n\t\t\tfor (int cnt = 0; cnt < ONECARDSET; cnt++) {\n\t\t\t\t/**\n\t\t\t\t * ONECARDSET CardR??¨CardG??¨CardB???????????????9????????????\n\t\t\t\t */\n\t\t\t\t// ????§£??????????????¨??°??????????????????\n\t\t\t\ttmpCard = transNum[cnt] + transColor[cnt];\n\t\t\t\t// ????´?\n\t\t\t\tcard.add(tmpCard);\n\t\t\t}\n\t\t}// ?????????????????????????????????\n\n\t\t/**\n\t\t * ???????????¶???????????????\n\t\t *\n\t\t * @return result ??????????????????????????????\n\t\t */\n\t\tpublic int playtheGame() {// ???????????°????????????\n\n\t\t\t// ?????????0???????????????\n\t\t\tint result = 0;\n\t\t\t// ?????????????????????\n\t\t\tCollections.sort(card);\n\n\t\t\t// 3??£?¶????????????????????????°?¶????\n\t\t\tserialNumCard(card); //?????£????????????\n\n\t\t\t// ??????????????????3???????????°?¶????\n\t\t\tsameNumCard(card); //?????£????????????\n\n\t\t\t// ?????????????????????\n\t\t\tCollections.sort(card);\n\n\t\t\t// ????????????????????°??????0????????¨??¨0\n\t\t\tif (!card.get(ONECARDSET - 1).contains(\"0\"))\n\n\t\t\t\t// ?????¶??????????????°???????????????s\n\t\t\t\tresult = 1;\n\t\t\t// ????????????????????????????????????\n\t\t\treturn result;\n\t\t}// playtheGame????????????????????????\n\t\t/**\n\t\t * 3??£?¶??????°??????????????°?¶????\n\t\t *\n\t\t * @param card2\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\n\t\tpublic ArrayList<String> serialNumCard(ArrayList<String> card) {// ?????£????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param tempNum String????????????????????°??????int??¢????????£???????????????????????¨????????°\n\t\t\t *\n\t\t\t * @param tempArr[] ??¨????????°?????????????????°??????????´? ??????????????°?????????????????????\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\n\t\t\t//??????????????°???????????¢??¨\n\t\t\tString tempNum1[] = new String[CASTAREA];\n\t\t\tString tempNum2[] = new String[CASTAREA];\n\t\t\tString tempNum3[] = new String[CASTAREA];\n\n\t\t\t// for????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * ?????£????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1???String???????????????????\\???????\n\t\t\t\t\t\t * ?????????2?????????????????¢?????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????1 ?????????\n\t\t\t\t\t\t * 1) ??¨????????°??§??°???????????¢????´? ??? ???????¨?????????????????????????????????°???????????????????????§???????????????????????????\n\t\t\t\t\t\t *    (??¢?????????????????????)\n\t\t\t\t\t\t * 2) ??¨????????°??§??°???????????¢????´? ??? ??¨???int[]????????£??????????????°????????????????????????????????????????????????\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ?????????2 ?????????\n\t\t\t\t\t\t * ???????????°??¢????????§????????????????????£\n\t\t\t\t\t\t *\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\ttempNum1 = card.get(cnt1).split(\"\");\n\t\t\t\t\t\ttempNum2 = card.get(cnt2).split(\"\");\n\t\t\t\t\t\ttempNum3 = card.get(cnt3).split(\"\");\n\t\t\t\t\t\t// (1)3??£?¶?????????????????????????????????????\n\t\t\t\t\t\tif (Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum2[CASTADDRESS]) - 1\n\t\t\t\t\t\t\t\t&& Integer.parseInt(tempNum1[CASTADDRESS]) == Integer.parseInt(tempNum3[CASTADDRESS])\n\t\t\t\t\t\t\t\t\t\t- 2) {\n\t\t\t\t\t\t\t// (1)????????¶??????????????°??????????????????\n\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\") && !card.get(cnt3).contains(\"0\")) {\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\treturn card;\n\t\t}// serialNumCard ????????????????????????\n\t\t/**\n\t\t * ????????°????????????????????°?¶????\n\t\t *\n\t\t * @param card\n\t\t *            ?????¶??????????????°\"0\"????????\\??????????????????\n\t\t *\n\t\t * @return \"0\"????????\\???????????£????????????\n\t\t */\n\t\tpublic ArrayList<String> sameNumCard(ArrayList<String> card) {// ???????????°????????????\n\n\t\t\t/**\n\t\t\t * for??????????????¬???\n\t\t\t *\n\t\t\t * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]\n\t\t\t *\n\t\t\t * @param cnt1\n\t\t\t *            ???????????????????????? \"0\";\n\t\t\t * @param cnt2\n\t\t\t *            ???????????????????????? \"cnt1 + 1\";\n\t\t\t * @param cnt3\n\t\t\t *            ???????????????????????? \"cnt2 + 1\";\n\t\t\t *\n\t\t\t * @param ONECARDSET\n\t\t\t *            ??????????????????????¶????????????¨?????§?????????\n\t\t\t */\n\n\t\t\t// for???????????????????????????????????????????????¨???????????????????????°????????????\n\t\t\tfor (int cnt1 = 0; cnt1 < ONECARDSET - 2; cnt1++) {\n\t\t\t\t// ????????????????????¨???????????????????????°????????????\n\t\t\t\tfor (int cnt2 = cnt1 + 1; cnt2 < ONECARDSET - 1; cnt2++) {\n\t\t\t\t\tfor (int cnt3 = cnt2 + 1; cnt3 < ONECARDSET; cnt3++) {\n\t\t\t\t\t\t// (1)???????????????????????????????????????\n\t\t\t\t\t\tif (card.get(cnt1).equals(card.get(cnt2)) && card.get(cnt2).equals(card.get(cnt3))) {\n\t\t\t\t\t\t\t// (1)????????¶??????????????°??????????????????\n\t\t\t\t\t\t\tif (!card.get(cnt1).contains(\"0\") && !card.get(cnt2).contains(\"0\") && !card.get(cnt3).contains(\"0\")){\n\n\t\t\t\t\t\t\t\t// ??¨???????????¶??????????????°????????§?¨??????????\"0\"????????\\\n\t\t\t\t\t\t\t\tcard.add(cnt1, \"0\");\n\t\t\t\t\t\t\t\tcard.add(cnt2, \"0\");\n\t\t\t\t\t\t\t\tcard.add(cnt3, \"0\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?¶?????????¨???????????£???????????????????????????\n\t\t\treturn card;\n\t\t}// sameNumCard????????????????????????\n\n\t}// Rummy?????????????????????\n\n}// NRummy?????????????????????"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class a{\n    public static void Main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<t;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k*3]==color[j][k*3+2]){\n                        color[j][k*3]=0;\n                        color[j][k*3+1]=0;\n                        color[j][k*3+2]=0;\n                    }\n                }\n            }\nfor (int j=0;j<3&&win!=0;j++){\n                int n=color_num[j];\n                int changed=0;\n                for (int l=0;l<n/3;l++){\n                    int bef=-2;\n                    changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3){\n                            changed=0;\n                            bef=-2;\n                        }\n                    }\n                }\n                if (changed!=0) win=0;\n            }\n\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < count ; i++){\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\t\t\t\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tfor(int j = 0;j < tehuda.size();j++) {\n\t\t\t\tcardSet.add(tehuda.get(i).getNum());\n\t\t\t\tif(!tehuda.get(j).getColor().equals(checkColor)) {\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t} else if(i == tehuda.size() - 1) {\n\t\t\t\t\tSystem.out.println(\"e2\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() - 2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 == num2 + 1 && num1 == num3 + 2) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String... args){\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        \n        for(int i = 0;i < t;i++){\n           card c[] = new card[9];\n           card nc[] = new card[9];\n\n            for(int j = 0;j < 9;j++){\n                c[j] = new card();\n                nc[j] = new card();\n                c[j].number = scan.nextInt();\n            }\n            for(int j = 0;j < 9;j++)c[j].color = scan.next();\n            int count = 0;\n            for(int j = 0;j < 9;j++){\n                if(c[j].color.equals(\"R\")){\n                    nc[count].number = c[j].number;\n                    nc[count].color = c[j].color;\n                    count++;\n                }\n            }\n            for(int j = 0;j < 9;j++){\n                if(c[j].color.equals(\"G\")){\n                    nc[count].number = c[j].number;\n                    nc[count].color = c[j].color;\n                    count++;\n                }\n            }\n            for(int j = 0;j < 9;j++){\n                if(c[j].color.equals(\"B\")){\n                    nc[count].number = c[j].number;\n                    nc[count].color = c[j].color;\n                    count++;\n                }\n            }\n            if(!(nc[0].color.equals(nc[1].color)&&nc[1].color.equals(nc[2].color)\n            &&nc[3].color.equals(nc[4].color)&&nc[4].color.equals(nc[5].color)\n            &&nc[6].color.equals(nc[7].color)&&nc[7].color.equals(nc[8].color))){\n                System.out.println(0);\n                continue;\n            }\n\n            if(nc[2].color.equals(nc[3].color)){\n                if(nc[5].color.equals(nc[6].color)){\n                    if(ifWin(pickNum(nc, 0, 9))){\n                        System.out.println(1);\n                        continue;\n                    }else{\n                        System.out.println(0);\n                        continue;\n                    }\n                }else{\n                    if(ifWin(pickNum(nc, 0, 6)) && \n                    ifWin(pickNum(nc, 6, 9))){\n                        System.out.println(1);\n                        continue;\n                    }else{\n                        System.out.println(0);\n                        continue;\n                    }\n                }\n            }else{\n                if(nc[5].color.equals(nc[6].color)){\n                    if(ifWin(pickNum(nc, 0, 3)) &&\n                     ifWin(pickNum(nc, 3, 9))){\n                        System.out.println(1);\n                        continue;\n                    }else{\n                        System.out.println(0);\n                        continue;\n                    }\n                }else{\n                    if(ifWin(pickNum(nc, 0, 3)) && ifWin(pickNum(nc, 3, 6)) && ifWin(pickNum(nc, 6, 9))){\n                        System.out.println(1);\n                        continue;\n                    }else{\n                        System.out.println(0);\n                        continue;\n                    }\n                }\n            }\n\n\n        }\n        scan.close();\n    }\n\n    static int[] pickNum(card c[], int begin, int end){\n        int num[] = new int [end - begin];\n        for(int i = 0;i < end - begin;i++)num[i] = c[i+begin].number;\n        return num;\n    }\n\n    static boolean three(int num[]){\n        sort(num);\n        \n        return (num[0] == num[1] && num[1] == num[2]) || (num[0] == num[1]-1 && num[1] == num[2]-1);\n    }\n\n\n    static boolean ifWin(int num[]){\n        if(num.length == 3)return three(num);\n        sort(num);\n        int n;\n        ArrayList<Integer> list; \n        for(int i = 0;i < num.length;i++){\n            list = new ArrayList<>();\n            n = num[i];\n            list.add(i);\n            for(int j = i;j < num.length;j++){\n                if(n+1 == num[j]){\n                    n++;\n                    list.add(j);\n                    if(list.size() == 3){\n                        int newnum[] = new int[num.length-3];\n                        int count = 0;\n                        for(int k = 0;k < num.length;k++){\n                            if(!list.contains((Integer)k)){\n                                newnum[count] = num[k];\n                                count++;\n                            }\n                        }\n                        return ifWin(newnum);\n                    }\n                }\n            }\n        }\n        int count = 0;\n        int newnum[] = {};\n        for(int i = 0;i < num.length;i++){\n            if(count == 0)newnum = new int[3];\n            newnum[count] = num[i];\n            count++;\n            if(count == 3){\n                if(three(newnum))count = 0;\n                else return false;\n            }\n        }\n        return true;\n    }\n\n    static void sort(int num[]){\n        for(int i = 0;i < num.length;i++){\n            int min = i;\n            for(int j = i+1;j < num.length;j++)\n                if(num[min] > num[j]) min = j;\n            \n            int x = num[i];\n            num[i] = num[min];\n            num[min] = x;\n\n        }\n    }\n\n    static class card{\n        String color;\n        int number;\n    }\n    \n\n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint gameset = sc.nextInt();\n\n\t\tCardRummy cr = new CardRummy();\n\n\t\tfor(int j2 =0; j2 < gameset; j2++){\n\n\t\t\tfor (int i = 0; i < CardRummy.CARDPAGE; i++) {\n\t\t\t\tfor (int j = 0; j < CardRummy.ONECARDSET; j++) {\n\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\tcr.card[i][j] = sc.nextInt();\n\t\t\t\t\telse {\n\t\t\t\t\t\tswitch (sc.next()) {\n\t\t\t\t\t\tcase \"R\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.RED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"G\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.GREEN;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"B\":\n\t\t\t\t\t\t\tcr.card[i][j] = CardRummy.BLUE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcr.setCardset(cr.card);\n\t\t\tcr.card = cr.getCardset();\n\n\t\t\t// game start\n\t\t\tint cnt = 0;\n\t\t\tcnt = cr.playtheGame(cr.card); // ?????????\n\t\t\t// game result\n\t\t\tif (3 <= cnt)\n\t\t\t\tSystem.out.println(1);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t}\n}\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// num\n\tfinal int NUMBER0 = 0;\n\tfinal int NUMBER1 = 1;\n\tfinal int NUMBER2 = 2;\n\tfinal int NUMBER3 = 3;\n\tfinal int NUMBER4 = 4;\n\tfinal int NUMBER5 = 5;\n\tfinal int NUMBER6 = 6;\n\tfinal int NUMBER7 = 7;\n\tfinal int NUMBER8 = 8;\n\tfinal int NUMBER9 = 9;\n\n\t// color\n\tstatic final int RED = 1;\n\tstatic final int GREEN = 2;\n\tstatic final int BLUE = 3;\n\n\tint[][] card = new int[CARDPAGE][ONECARDSET];\n\tCardRummy[][] ArrCR = new CardRummy[CARDPAGE][ONECARDSET];\n\n\tpublic CardRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn card;\n\t}\n\n\t// ????????????????????????????????\\??????\n\tpublic void setCardset(int[][] card) {\n\t\tthis.card = settingcardplay(card);\n\t}\n\n\tpublic int[][] settingcardplay(int[][] card) {// Error point\n\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\n\t\t\t\t// ?????????color???????????????\n\t\t\t\tif (card[1][j] > card[1][j + 1]) {\n\t\t\t\t\t// ???????????????????????????????????¨????????°?????£?¨????????????????????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ?????¬??¨????????¬??????????????????????±???????????????????for????????????\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// ??????color&num???????????????\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {\n\t\t\t\t\t// ?????????????????????\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\tint cnt = 0;\n\t\t// ??????for????????????????¬??????¨???????????????\n\t\t// ex : [0][1][2] ....\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ??£????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\t// 3??????????????????????????°\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\t\t\t\t\t\t// ?????????????????????????¢????\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] - 1\n\t\t\t\t\t\t\t\t&& cardset[0][i] == cardset[0][k] - 2) {\n\t\t\t\t\t\t\t// Error point\n\t\t\t\t\t\t\t// ??????????????¶????????????????????????\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\t// ?????????????????????????????????????????????\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// ???????????°????????????main????????????????????????????????????\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tScanner scan = new Scanner(System.in);\n\t\t// ?????°???????????????\n\t\tint T = scan.nextInt();\n\t\t// ?????°?????°?????????\n\t\tfor(int Ti=0; Ti<T; Ti++) {\n\t\t\tint check = 0;\n\t\t\tint check2 = 0;\n\t\t\t//?????°??????????????????\n\t\t\tint n[] = new int[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tn[i] = scan.nextInt();\n\t\t\t}\n\t\t\t// ??????????????????\n\t\t\tString c[] = new String[9];\n\t\t\tfor (int i=0; i<9; i++){\n\t\t\t\tc[i] = scan.next();\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tArrayList<Card> cardList = new ArrayList<Card>();\n\t\t\tfor (int i = 0; i<9; i++) {\n\t\t\t\t// ??????????????????????????????\n\t\t\t\tString x = c[i];\n\t\t\t\tint y = n[i];\n\t\t\t\tCard card = new Card(x, y);\n\t\t\t\t// ?????????????????????????????????\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t//??????????????????????????????\n\t\t\tCollections.sort(cardList);\n\t\t\t// memo\n\t\t\tboolean colorCheck = true;\n\t\t\tString color =\"\";\n\t\t\t//???????????\\?????¨????????????????¢??????????\n\t\t\tfor (int i = 0; i < cardList.size(); i=i+3){\n\t\t\t\tCard card1 = cardList.get(i);\n\t\t\t\tCard card2 = cardList.get(i+1);\n\t\t\t\tCard card3 = cardList.get(i+2);\n\t\t\t\tint cardNo1 = card1.get_number();\n\t\t\t\tint cardNo2 = card2.get_number();\n\t\t\t\tint cardNo3 = card3.get_number();\n\t\t\t\tint cardCn1 = card1.get_colorNum();\n\t\t\t\tint cardCn2 = card2.get_colorNum();\n\t\t\t\tint cardCn3 = card3.get_colorNum();\n\t\t\t\t//??????????????????????¢????\n\t\t\t\tif((cardCn1 == cardCn2) && (cardCn1 == cardCn3)) {\n\t\t\t\t\tcolor = color + String.valueOf(cardCn1);\n\t\t\t\t\t// ??°???????¢???????????????¨???????????°\n\t\t\t\t\tif((cardNo1 == cardNo2) && (cardNo1 == cardNo3)) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo2 == (cardNo1 + 1)) && (cardNo3 == (cardNo1 + 2))) {\n\t\t\t\t\t\tcheck = check + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????£??????????????¨???\n\t\t\t\telse {\n\t\t\t\t\tcolorCheck = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((colorCheck != false) && (check != 3)) {\n\t\t\t\t// ??????????????°???????????????????´?\n\t\t\t\tint cardNo[] = new int[9];\n\t\t\t\tfor (int i = 0; i<cardList.size(); i++) {\n\t\t\t\t\tCard card = cardList.get(i);\n\t\t\t\t\tcardNo[i] = card.get_number();\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???1\n\t\t\t\tif ((color.equals(\"011\"))||(color.equals(\"122\"))||(color.equals(\"022\"))) {\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\tif(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 2????????????????????¨???2\n\t\t\t\telse if ((color.equals(\"001\"))||(color.equals(\"112\"))||(color.equals(\"002\"))) {\n\t\t\t\t\tif ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 3?????¨?????????????????¨???\n\t\t\t\telse if ((color.equals(000))&&(color.equals(111))&&(color.equals(222))) {\n\t\t\t\t\tif((cardNo[0]==cardNo[1]) && ((cardNo[1]+1)==cardNo[2]) && (cardNo[2]==cardNo[3]) && (cardNo[3]==cardNo[4]) && ((cardNo[4]+1)==cardNo[5]) && (cardNo[5]==cardNo[6]) && (cardNo[6]==cardNo[7]) && ((cardNo[7]+1)==cardNo[8])) {\n\t\t\t\t\t\tcheck2 = 3;\n\t\t\t\t\t}\n\t\t\t\t\t// ??°???????¢????\n\t\t\t\t\telse if(((cardNo[0] == cardNo[1]) && (cardNo[0] == cardNo[2])) || ((cardNo[1] == (cardNo[0] + 1)) && (cardNo[2] == (cardNo[0] + 2)))) {\n\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\tif ((cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5] == cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7] == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && ((cardNo[5]+1) == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5]) && (cardNo[5] == cardNo[6]) && (cardNo[6] == cardNo[7]) && ((cardNo[7]+1) == cardNo[8])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[3]==cardNo[3]) && ((cardNo[4]+1) == cardNo[5]) && (cardNo[5]==cardNo[6]) && ((cardNo[6]+1) == cardNo[7]) && (cardNo[7]==cardNo[8])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ((cardNo[0] == cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2] == cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4] == cardNo[5])) {\n\t\t\t\t\t\tcheck2 = check2 + 2;\n\n\t\t\t\t\t\tif (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && ((cardNo[2]+1) == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (((cardNo[0]+1) == cardNo[1]) && (cardNo[1] == cardNo[2]) && (cardNo[2] == cardNo[3]) && (cardNo[3] == cardNo[4]) && ((cardNo[4]+1) == cardNo[5])) {\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if((cardNo[0]==cardNo[1]) && ((cardNo[1]+1) == cardNo[2]) && (cardNo[2]==cardNo[3]) && ((cardNo[3]+1) == cardNo[4]) && (cardNo[4]==cardNo[5])){\n\t\t\t\t\t\t\tcheck2 = check2 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(((cardNo[6] == cardNo[7]) && (cardNo[6] == cardNo[8])) || ((cardNo[7] == (cardNo[6] + 1)) && (cardNo[8] == (cardNo[6] + 2)))) {\n\t\t\t\t\t\t\tcheck2 = check2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"color : \" + color + \"  check1 :\" + check + \" , check2 :\" + check2);\n\t\t\t//???????????????????????£???????????°1???????????£?????????????????°0???????????????\n\t\t\tif((check==3) || (check2==3)) System.out.println(1);\n\t\t\telse System.out.println(0);\n\t\t}\n\n\t}\n}\n\n/**\n * ??????????????????\n */\nclass Card implements Comparable<Card> {\n\t/**\n\t* @return _number\n\t*/\n\tpublic int get_number() {\n\t\treturn _number;\n\t}\n\t/**\n\t* @param _number ??????????????? _number\n\t*/\n\tpublic void set_number(int _number) {\n\t\tthis._number = _number;\n\t}\n\t/**\n\t* @return _colorNum\n\t*/\n\tpublic int get_colorNum() {\n\t\treturn _colorNum;\n\t}\n\t/**\n\t* @param _colorNum ??????????????? _colorNum\n\t*/\n\tpublic void set_colorNum(int _colorNum) {\n\t\tthis._colorNum = _colorNum;\n\t}\n\t/** ??°??? */\n\tprivate int _number;\n\t/** ????????????R:0 G:1 B:2??? */\n\tprivate int _colorNum;\n\t/**\n\t* ?????????????????????\n\t* @param color ????????¨????????????\n\t* @param num ???????????????\n\t*/\n\tpublic Card(String color, int num) {\n\t\tswitch(color) {\n\t\t\tcase \"R\": this._colorNum = 0; break;\n\t\t\tcase \"G\": this._colorNum = 1; break;\n\t\t\tcase \"B\": this._colorNum = 2; break;\n\t\t}\n\t\tthis._number = num;\n\t}\n\t@Override\n\tpublic int compareTo(Card arg0) {\n\t\tif(this._colorNum == arg0.get_colorNum()) {\n\t\t\treturn this._number - arg0.get_number();\n\t\t} else {\n\t\t\treturn this._colorNum - arg0.get_colorNum();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t// カードの色の種類\n\tenum Color {\n\t\tR, G, B;\n\t}\n\n\t// 勝利条件(ペア数)\n\tfinal static int VictoryCondition = 3;\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\t// 入力回数の入力\n\t\tint inputCount = Integer.parseInt(sc.nextLine());\n\n\t\tfor (int i = 0; i < inputCount; i++) {\n\t\t\t// 9枚のカードを入力(1行目に数字、2行目に色)\n\t\t\tArrayList<Card> hand = inputHand(sc.nextLine(), sc.nextLine());\n\n\t\t\t// 勝利判定・出力\n\t\t\tif (VictoryDecision(hand)) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\n\t\tsc.close();\n\t}\n\n\t// 2行の入力(数字、色)からカードを生成し、リストにして返す\n\tprivate static ArrayList<Card> inputHand(String numLine, String colorLine) {\n\t\tString[] colorStr = colorLine.split(\"[\\\\s]+\");\n\t\tString[] numStr = numLine.split(\"[\\\\s]+\");\n\t\tArrayList<Card> hand = new ArrayList<Card>();\n\t\tfor (int i = 0; i < numStr.length; i++) {\n\t\t\thand.add(new Card(Integer.parseInt(numStr[i]), Color.valueOf(colorStr[i])));\n\t\t}\n\t\treturn hand;\n\t}\n\n\t// カードリストから3枚1組のペア3つができるか判定\n\tstatic boolean VictoryDecision(ArrayList<Card> hand) {\n\t\t// 色ごとのリストを作成し、数字を格納する\n\t\tArrayList<Integer> r = new ArrayList<Integer>();\n\t\tArrayList<Integer> g = new ArrayList<Integer>();\n\t\tArrayList<Integer> b = new ArrayList<Integer>();\n\t\tfor (Card c : hand) {\n\t\t\tswitch (c.color) {\n\t\t\tcase R:\n\t\t\t\tr.add(c.num);\n\t\t\t\tbreak;\n\t\t\tcase G:\n\t\t\t\tg.add(c.num);\n\t\t\t\tbreak;\n\t\t\tcase B:\n\t\t\t\tb.add(c.num);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// それぞれのリストからペアの数を判定し、合計が3であるか\n\t\tif (VictoryCondition == PairSearch(r) + PairSearch(g) + PairSearch(b)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t// リストからペアを見つけ、ペア数を返す\n\tstatic int PairSearch(ArrayList<Integer> list) {\n\t\tint pairCount = 0;\n\t\t// カードが3枚未満の場合終了\n\t\twhile (list.size() >= 3) {\n\t\t\t// 昇順にソート\n\t\t\tCollections.sort(list);\n\n\t\t\t// 連番判定用のリスト内の最小値+1のカードの添え字(ない場合は-1が格納される)\n\t\t\tint secondIndex = Arrays.binarySearch(list.toArray(), list.get(0) + 1);\n\t\t\t// 連番判定用のリスト内の最小値+2のカードの添え字(ない場合は-1が格納される)\n\t\t\tint thirdIndex = Arrays.binarySearch(list.toArray(), list.get(0) + 2);\n\n\t\t\t// 連番のペアがあるか\n\t\t\tif (secondIndex > 0 && thirdIndex > 0) {\n\t\t\t\t// ペア数をカウントアップし、ペアをリストから除外\n\t\t\t\tpairCount++;\n\t\t\t\tlist.remove(thirdIndex);\n\t\t\t\tlist.remove(secondIndex);\n\t\t\t\tlist.remove(0);\n\t\t\t\t// 同じカードのペアがあるか\n\t\t\t} else if (list.get(0) == list.get(1) && list.get(0) == list.get(2)) {\n\t\t\t\t// ペア数をカウントアップし、ペアをリストから除外\n\t\t\t\tpairCount++;\n\t\t\t\tlist.remove(2);\n\t\t\t\tlist.remove(1);\n\t\t\t\tlist.remove(0);\n\t\t\t} else {\n\t\t\t\t// ペアが見つからないため、リストから除外\n\t\t\t\tlist.remove(0);\n\t\t\t}\n\t\t}\n\t\treturn pairCount;\n\n\t}\n\n\t// カードクラス(数字、色)\n\tstatic class Card {\n\t\tint num;\n\t\tColor color;\n\n\t\tCard(int num, Color color) {\n\t\t\tthis.num = num;\n\t\t\tthis.color = color;\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tint number[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\t\tString color[] = { \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\" };\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tnumber[count1] = scan.nextInt();\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tcolor[count1] = scan.next();\n\t\t\t}\n\n\t\t\t// ???????????????????????????????????????????????°?????°?????£??????true??§?¬?????????????\n\t\t\tcolor_count c = new color_count();\n\n\t\t\t// ?????????????????? store???????????????????????¨??????color_count??????????????????\n\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\tc.count(color[count1]);\n\t\t\t}\n\n\t\t\t// ???????????? ??????????????°??§????????°true???\n\t\t\tboolean flg = c.color_result();\n\n\t\t\t// ???????????????true?????´????????°???????????? / false?????´??????0?????????\n\t\t\tif (flg) {\n\t\t\t\tcheck ck = new check();\n\t\t\t\t// number_store???store???????????????????????????\n\t\t\t\tfor (int count1 = 0; count1 < 9; count1++) {\n\t\t\t\t\tck.number_store(number[count1]);\n\t\t\t\t}\n\n\t\t\t\t// ???????????????\n\t\t\t\tck.number_sort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.number_check();\n\n\t\t\t\t// ??????\n\t\t\t\tboolean flg2 = ck.result();\n\t\t\t\tif (flg2) {\n\t\t\t\t\tsb.append(\"1\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"0\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.print(new String(sb));\n\n\t}\n}\n\n// ????????°?????°???????????????\nclass color_count {\n\n\tint r = 0;\n\tint b = 0;\n\tint g = 0;\n\n\t// ????????????????????????\n\tcolor_count() {\n\t\t// r = 0;\n\t\t// b = 0;\n\t\t// g = 0;\n\t}\n\n\tvoid count(String color) {\n\t\tif (color.equals(\"R\")) {\n\t\t\tr++;\n\t\t} else if (color.equals(\"B\")) {\n\t\t\tb++;\n\t\t} else if (color.equals(\"G\")) {\n\t\t\tg++;\n\t\t}\n\t\t// System.out.println(\"r=\" + r + \" b=\" + b + \" g=\" + g);\n\t}\n\n\t// color?????\\??????\n\tboolean color_result() {\n\t\t// ????????????????????????????????°??§????????¨???true?????????\n\t\treturn (r % 3 == 0) & (b % 3 == 0) & (g % 3 == 0);\n\t}\n\n}\n\nclass check {\n\tList<Integer> number_list = new ArrayList<Integer>();\n\n\tint[] number = new int[9];\n\n\t// int number[] = {0,0,0,0,0,0,0,0,0};\n\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tint[] num = new int[9];\n\t// int num[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\n\t// ??°????????\\??????\n\tvoid number_store(int number) {\n\t\tnumber_list.add(number);\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t}\n\n\t// ??°??????????????????????????????????´?\n\tvoid number_sort() {\n\t\tCollections.sort(number_list);\n\t\tfor (int count = 0; count < 9; count++) {\n\t\t\tnumber[count] = number_list.get(count);\n\t\t}\n\n\t}\n\n\tvoid number_check() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// ?????????true ??? false??§??????\n\tboolean result() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\treturn num[0] == 0 & num[1] == 0 & num[2] == 0 & num[3] == 0 & num[4] == 0 & num[5] == 0 & num[6] == 0\n\t\t\t\t& num[7] == 0 & num[8] == 0;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\t// 数字の最大を探す\n\tpublic static int max(int a[], int b[], int n) {\n\t\tint i;\n\t\tint max = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[max]] <= a[b[i]]) {\n\t\t\t\tmax = i;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n\n\t// 数字の最小を探す\n\tpublic static int min(int a[], int b[], int n) {\n\t\tint i;\n\t\tint min = 0;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (a[b[min]] >= a[b[i]]) {\n\t\t\t\tmin = i;\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}\n\n\t// 三つ存在する数字がどれだけあるかを数える\n\tpublic static int same(int count[], int num[], int b[], int n) {\n\t\tint count2 = 0;\n\t\tint i;\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tif (count[num[b[i]]] >= 3) {\n\t\t\t\t++count2;\n\t\t\t\tif (count2 % 3 == 0) {\n\t\t\t\t\tcount[num[b[i]]] -= 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcount2 /= 3;\n\n\t\treturn count2;\n\t}\n\n\t// 連続する三つの数字がどれだけ存在するかを数える\n\tpublic static int continuous(int count[], int num[], int b[], int n) {\n\t\tint count2 = 0;\n\t\tint i;\n\t\tint min, max;\n\n\t\t// 数字の最大、最小を探す\n\t\tmax = max(num, b, n);\n\t\tmin = min(num, b, n);\n\n\t\t// 最小の数字が三つ以上存在した場合その3つを一組とする\n\t\tif (count[num[b[min]]] >= 3) {\n\t\t\tcount2 += same(count, num, b, n);\n\t\t}\n\n\t\t// 連続する三つの数字がどれだけ存在するかを数える\n\t\tfor (i = num[b[min]] + 1; i < num[b[max]]; ++i) {\n\t\t\tif (count[i] > 0) {\n\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0) {\n\t\t\t\t\t++count2;\n\t\t\t\t\t--count[i + 1];\n\t\t\t\t\t--count[i];\n\t\t\t\t\t--count[i - 1];\n\t\t\t\t\tif (count[i + 1] > 0 && count[i - 1] > 0 && count[i] > 0) {\n\t\t\t\t\t\t--i;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 連続する数字の組を作ったうえで、途中で同じ数字が三つ以上並んでいた時、その三つを一組とする\n\t\t\t\tif (count[i] >= 3) {\n\t\t\t\t\tcount2 += same(count, num, b, n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn count2;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint T, num[];\n\t\tint R[], G[], B[];// position of R,B,G\n\t\tint count1[], count2, /* counting number */ max, min;\n\t\tString str[];\n\t\tnum = new int[9];\n\t\tstr = new String[9];\n\t\tR = new int[9];\n\t\tB = new int[9];\n\t\tG = new int[9];\n\t\tcount1 = new int[10];\n\t\tint i, j, k, m, n, l;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tT = sc.nextInt();\n\t\tfor (i = 0; i < T * 2; ++i) {\n\t\t\tk = 0;\n\t\t\tm = 0;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < 9; ++j) {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\tnum[j] = sc.nextInt();\n\t\t\t\t} else {\n\t\t\t\t\tstr[j] = sc.next();\n\t\t\t\t\tif (str[j].equals(\"R\")) {\n\t\t\t\t\t\tR[k] = j;\n\t\t\t\t\t\t++k;\n\t\t\t\t\t} else if (str[j].equals(\"B\")) {\n\t\t\t\t\t\tB[m] = j;\n\t\t\t\t\t\t++m;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tG[n] = j;\n\t\t\t\t\t\t++n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i % 2 == 1) {\n\n\t\t\t\t// Rのときに条件を満たすものを探す\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\tcount2 = 0;\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, R, k);\n\t\t\t\tmin = min(num, R, k);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < k; ++l) {\n\t\t\t\t\t++count1[num[R[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[R[max]] - num[R[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, R, k);\n\t\t\t\t}\n\n\t\t\t\t// B\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, B, m);\n\t\t\t\tmin = min(num, B, m);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < m; ++l) {\n\t\t\t\t\t++count1[num[B[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[B[max]] - num[B[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, B, m);\n\t\t\t\t}\n\n\t\t\t\t// G\n\t\t\t\tfor (l = 0; l < 9; ++l) {\n\t\t\t\t\tcount1[l] = 0;\n\t\t\t\t}\n\n\t\t\t\t// 数字の最大、最小を探す\n\t\t\t\tmax = max(num, G, n);\n\t\t\t\tmin = min(num, G, n);\n\n\t\t\t\t// それぞれの数字の総数\n\t\t\t\tfor (l = 0; l < n; ++l) {\n\t\t\t\t\t++count1[num[G[l]]];\n\t\t\t\t}\n\n\t\t\t\t// 数字が並んでいる時\n\t\t\t\tif (num[G[max]] - num[G[min]] > 1) {\n\t\t\t\t\tcount2 += continuous(count1, num, G, n);\n\t\t\t\t}\n\n\t\t\t\tif (count2 == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nimport static java.util.Arrays.sort;\n\npublic class Main {\n    public  static void  main(String[] args){\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n\n        for(int i = 0; i< t; i++){\n            int[] num = new int[9];\n            String[] col = new String[9];\n\n            for(int j = 0; j < 9; j++)\n                num[j] = sc.nextInt();\n            for(int j = 0; j < 9; j++)\n                col[j] = sc.next();\n\n            int countR = 0;\n            int countG = 0;\n            int countB = 0;\n\n            int[] numred = null, numgrn = null, numblue = null;\n\n            for(int j = 0; j < 9; j++){\n                if(col[j].equals(\"R\"))\n                    countR++;\n                else if(col[j].equals(\"G\"))\n                    countG++;\n                else\n                    countB++;\n            }\n\n            if(countR % 3 !=0 && countG % 3 != 0 && countB % 3 != 0){\n                System.out.println(\"0\");\n                return;\n            }\n\n            if(countR != 0){\n                numred = new int[countR];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"R\"))\n                        numred[indexnum++] = num[j];\n                }\n                sort(numred);\n            }\n\n            if(countG != 0){\n                numgrn = new int[countG];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"G\"))\n                        numgrn[indexnum++] = num[j];\n                }\n                sort(numgrn);\n            }\n\n            if(countB != 0){\n                numblue = new int[countB];\n                int indexnum = 0;\n                for(int j = 0; j < 9; j++){\n                    if(col[j].equals(\"B\"))\n                        numblue[indexnum++] = num[j];\n                }\n                sort(numblue);\n            }\n\n            if(countR % 3 == 1){\n                if((numred[0] == numred[1] && numred[1] == numred[2]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countR % 3 == 2){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countR % 3 == 2){\n                if((numred[0] == numred[1] && numred[1] == numred[2] && numred[3] == numred[4] && numred[4] == numred[5] && numred[6] == numred[7] && numred[7] == numred[8]) || (numred[0] + 1 == numred[1] && numred[1] == numred[2] - 1 && numred[3] + 1 == numred[4] && numred[4] == numred[5] - 1 && numred[6] + 1 == numred[7] && numred[7] == numred[8] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            \n            if(countG % 3 == 1){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countG % 3 == 2){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countG % 3 == 2){\n                if((numgrn[0] == numgrn[1] && numgrn[1] == numgrn[2] && numgrn[3] == numgrn[4] && numgrn[4] == numgrn[5] && numgrn[6] == numgrn[7] && numgrn[7] == numgrn[8]) || (numgrn[0] + 1 == numgrn[1] && numgrn[1] == numgrn[2] - 1 && numgrn[3] + 1 == numgrn[4] && numgrn[4] == numgrn[5] - 1 && numgrn[6] + 1 == numgrn[7] && numgrn[7] == numgrn[8] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n\n            if(countB % 3 == 1){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countB % 3 == 2){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n            if(countB % 3 == 2){\n                if((numblue[0] == numblue[1] && numblue[1] == numblue[2] && numblue[3] == numblue[4] && numblue[4] == numblue[5] && numblue[6] == numblue[7] && numblue[7] == numblue[8]) || (numblue[0] + 1 == numblue[1] && numblue[1] == numblue[2] - 1 && numblue[3] + 1 == numblue[4] && numblue[4] == numblue[5] - 1 && numblue[6] + 1 == numblue[7] && numblue[7] == numblue[8] - 1)){\n                    System.out.println(1);\n                    return;\n                }\n                else{\n                    System.out.println(0);\n                    return;\n                }\n            }\n        }\n        sc.close();\n\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main implements Comparator<Main> {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint count = Integer.parseInt(sc.nextLine()) ;\n\n\t\twhile (sc.hasNextLine()){\n\n\t\t\tString[] nums = sc.nextLine().split(\" \");\n\t\t\tString[] colors = sc.nextLine().split(\" \");\n\n\t\t\tArrayList<Main> tehuda = new ArrayList<Main>();\n\n\t\t\tfor(int j = 0;j < nums.length; j++ ) {\n\t\t\t\tMain card = new Main(Integer.parseInt(nums[j]), colors[j]);\n\t\t\t\ttehuda.add(card);\n\t\t\t}\n\t\t\tCollections.sort(tehuda, new Main());\n\n\n\t\t\tArrayList<Integer> cardSet = new ArrayList<Integer>();\n\t\t\tArrayList<ArrayList<Integer>> cSetList = new ArrayList<ArrayList<Integer>>();\n\n\n\t\t\tString checkColor = tehuda.get(0).getColor();\n\t\t\tcardSet.add(tehuda.get(0).getNum());\n\t\t\tfor(int j = 1;j < tehuda.size();j++) {\n\t\t\t\tif(!(tehuda.get(j).getColor().equals(checkColor))) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t\tcardSet = new ArrayList<Integer>();\n\t\t\t\t\tcheckColor = tehuda.get(j).getColor();\n\t\t\t\t}\n\n\t\t\t\tcardSet.add(tehuda.get(j).getNum());\n\t\t\t\tif(j == tehuda.size() - 1) {\n\t\t\t\t\tcSetList.add(cardSet);\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tint point = 0;\n\n\n\t\t\tfor(int j = 0;j < cSetList.size(); j++) {\n\t\t\t\tint cardCount = 0;\n\t\t\t\tfor(int y = 0;y < cSetList.get(j).size() -2;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 1);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 ) || (num1 == num2 && num1 == num3)) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t\ty += 2;\n\t\t\t\t\t\tcardCount += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor(int y = cardCount;y < cSetList.get(j).size() -4;y++){\n\t\t\t\t\tint num1 = cSetList.get(j).get(y);\n\t\t\t\t\tint num2 = cSetList.get(j).get(y + 2);\n\t\t\t\t\tint num3 = cSetList.get(j).get(y + 4);\n\t\t\t\t\tif((num1 + 1 == num2 && num1 + 2 == num3 )) {\n\t\t\t\t\t\tpoint++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\tif(point == 3) {\n\t\t\t\tSystem.out.println(\"1\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\n\t}\n\n\tprivate int num;\n\tprivate String color;\n\n\t//??????????????????????????????\n\tMain (int num, String color) {\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tMain() {\n\t}\n\n\tpublic int getNum() {\n\t\treturn this.num;\n\t}\n\n\tpublic String getColor () {\n\t\treturn this.color;\n\t}\n\n\t@Override\n\tpublic  int compare(Main card1 ,Main card2) {\n\t\tint num1 = card1.getNum();\n\t\tint num2 = card2.getNum();\n\t\tString color1 = card1.getColor();\n\t\tString color2 = card2.getColor();\n\n\t\tif(color1.compareTo(color2) > 0 && num1 > num2) {\n\t\t\treturn 2;\n\t\t} else if (color1.compareTo(color2) > 0) {\n\t\t\treturn 1;\n\t\t} else if (color1.compareTo(color2) == 0 && num1 > num2) {\n\t\t\treturn 0;\n\t\t} else if (color1.compareTo(color2) == 0 ) {\n\t\t\treturn -1;\n\t\t} else if (color1.compareTo(color2) < 0 && num1 > num2) {\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn -3;\n\t\t}\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        int set = sc.nextInt();\n        int number[] = new int[9];\n        int Rnumber[] = new int[9];\n        int Gnumber[] = new int[9];\n        int Bnumber[] = new int[9];\n        int setcount = 0;\n        \n        for(int i = 0 ; i < set ; i++){\n            setcount = 0;\n            \n            for(int t = 0 ; t < 9 ; t++){\n                number[t] = sc.nextInt();\n            }\n            for(int c = 0 ; c < 9 ; c++){\n                String color = sc.next();\n                if(color.equals(\"R\")){\n                    Rnumber[c] = number[c];\n                }\n                else if(color.equals(\"G\")){\n                    Gnumber[c] = number[c];\n                }\n                else if(color.equals(\"B\")){\n                    Bnumber[c] = number[c];\n                }\n            }\n            \n            Arrays.sort(Rnumber);\n            Arrays.sort(Gnumber);\n            Arrays.sort(Bnumber);\n            \n            setcount += search(Rnumber);\n            setcount += search(Gnumber);\n            setcount += search(Bnumber);\n\n/*            \n            for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(Rnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Rnumber[time+time2] == Rnumber[time]+1 || Rnumber[time] == Rnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Rnumber[time+time2+time3] == Rnumber[time]+2 || Rnumber[time] == Rnumber[time+time2+time3]){\n                                    setcount++;\n                                    Rnumber[time] = 0;\n                                    Rnumber[time+time2] = 0;\n                                    Rnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Gの数字を検索\n                if(Gnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Gnumber[time+time2] == Gnumber[time]+1 || Gnumber[time] == Gnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Gnumber[time+time2+time3] == Gnumber[time]+2 || Gnumber[time] == Gnumber[time+time2+time3]){\n                                    setcount++;\n                                    Gnumber[time] = 0;\n                                    Gnumber[time+time2] = 0;\n                                    Gnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            \n            for(int time = 0 ; time < 9 ; time++){ //Bの数字を検索\n                if(Bnumber[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(Bnumber[time+time2] == Bnumber[time]+1 || Bnumber[time] == Bnumber[time+time2]){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(Bnumber[time+time2+time3] == Bnumber[time]+2 || Bnumber[time] == Bnumber[time+time2+time3]){\n                                    setcount++;\n                                    Bnumber[time] = 0;\n                                    Bnumber[time+time2] = 0;\n                                    Bnumber[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                            \n                        }\n                        \n                    }\n                    \n                }\n            }*/\n            \n            //System.out.println(setcount);\n            if(setcount == 3){\n                System.out.println(\"1\");\n            }\n            else{\n                System.out.println(\"0\");\n            }\n            \n        }\n        \n    }\n    \n    private static int search (int nums[]){\n        int setcount = 0;\n        for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(nums[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(nums[time+time2] == nums[time]+1){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time+time2+time3] == nums[time]+2){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                        \n                        else if(nums[time] == nums[time+time2]){\n                            \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time] == nums[time+time2+time3]){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            return setcount;\n    }\n    \n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    boolean checkNum(Set num1, Set num2, Set num3){\n        int i,j;\n        i = num3.num - num2.num;\n        j = num2.num - num1.num;\n        if(((i == 1) && (j == 1)) || ((i == 0) && (j == 0))){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\nclass DataComparator implements java.util.Comparator<Set>{\n    public int compare(Set o1, Set o2){\n        if(o1.color == o2.color){\n            return o1.num - o2.num;\n        }else{\n            return o1.color - o2.color;\n        }\n    }\n}\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n    Set[] card = new Set[9];\n\n    for(int i=0;i<n;i++){\n      for(int j=0;j<9;j++){ //input_numbers\n        card[j] = new Set();\n        card[j].num = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      for(int l=0;l<9;l++){  //check_color\n        switch(ch[l]){\n          case \"R\": card[l].color = 1;\n                    break;\n          case \"G\": card[l].color = 2;\n                    break;\n          case \"B\": card[l].color = 3;\n                    break;\n          default : break;\n        }\n      }\n      Arrays.sort(card, new DataComparator());\n\n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = card[j].num; \n          set1[j].color = card[j].color;\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = card[j+3].num;\n          set2[j].color = card[j+3].color;\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = card[j+6].num;\n          set3[j].color = card[j+6].color;\n      }\n\n      int accept = 0;\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n\n      if(check1.sameColor(set1[0],set1[1],set1[2])){\n          if(check1.checkNum(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n             System.out.println(\"0\");\n             continue;\n          }\n      }\n      else{\n        System.out.println(\"0\");\n        continue;\n      }\n      \n      if(check2.sameColor(set2[0],set2[1],set2[2])){\n          if(check2.checkNum(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n             System.out.println(\"0\");\n             continue;\n          }\n      }\n      else{\n        System.out.println(\"0\");\n        continue;\n      }\n\n      if(check3.sameColor(set3[0],set3[1],set3[2])){\n          if(check3.checkNum(set3[0],set3[1],set3[2])){\n              accept++;\n          }else{\n             System.out.println(\"0\");\n             continue;\n          }\n      }\n      else{\n        System.out.println(\"0\");\n        continue;\n      }\n\n    System.out.println(\"1\");\n    }//end_of_while\n  }//end_of_main\n}//end_of_Main"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\npublic class Main {\n\tpublic static void main (String[] args) throws IOException\n\t{\n\t\tBufferedReader input = new BufferedReader (new InputStreamReader (System.in));\n\t\t\n\t\tString setTotalStr = input.readLine();\n\t\t\n\t\tint setTotal = Integer.parseInt(setTotalStr);\n\t\t\n\t\tint cardTotal = 9;\n\t\t\n\t\tString[][] cardInfoNumStr = new String[setTotal][9];\n\t\t\n\t\tint[][] cardInfoNum = new int[setTotal][cardTotal];\n\t\t\n\t\tString[][] cardInfoCol = new String[setTotal][9];\n\t\t\n\t\t//データをキーボードで入力し、配列に代入する\n\t\tfor(int set = 0; set < setTotal; set++)\n\t\t{\n\t\t\tcardInfoNumStr[set] = input.readLine().split(\" \");\n\t\t\t\n\t\t\tfor(int num = 0; num < cardTotal; num++)\n\t\t\t\tcardInfoNum[set][num] = Integer.parseInt(cardInfoNumStr[set][num]);\n\t\t\t\n\t\t\tcardInfoCol[set] = input.readLine().split(\" \");\n\t\t}\n\t\t\n\t\tint win = 0;\n\t\t\n\t\t//勝利条件を満たしているかどうかをset回行う\n\t\tfor(int set = 0; set < setTotal; set++, win = 0)\n\t\t{\t\n\t\t\t//1セット目を見つける\n\t\t\tfor(int num2nd = 1; (num2nd < cardTotal - 1) &&  (win == 0); num2nd++)\n\t\t\t{\n\t\t\t\tfor(int num3rd = 2; (num3rd < cardTotal) && (win == 0); num3rd++)\n\t\t\t\t{\n\t\t\t\t\tif(((cardInfoNum[set][0] == cardInfoNum[set][num2nd] && cardInfoNum[set][0] == cardInfoNum[set][num3rd])\n\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 2)\n\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] + 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 2 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum[set][0] == cardInfoNum[set][num2nd] - 1 && cardInfoNum[set][0] == cardInfoNum[set][num3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol[set][0].equals(cardInfoCol[set][num2nd]) && cardInfoCol[set][0].equals(cardInfoCol[set][num3rd]))))\n\t\t\t\t\t{\n\t\t\t\t\t\tint cardTotal2nd = cardTotal -3;\n\t\t\t\t\t\t\n\t\t\t\t\t\tint[] cardInfoNum2nd = new int[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tString[] cardInfoCol2nd = new String[cardTotal2nd];\n\t\t\t\t\t\t\n\t\t\t\t\t\tint insertNum = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける準備\n\t\t\t\t\t\tfor(int num = 1; num < cardTotal; num++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(!(num == num2nd || num == num3rd))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcardInfoNum2nd[insertNum] = cardInfoNum[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcardInfoCol2nd[insertNum] = cardInfoCol[set][num];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t//2セット目を見つける\n\t\t\t\t\t\tfor(int num2set2nd = 1; (num2set2nd < cardTotal2nd - 1) && (win == 0); num2set2nd++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor(int num2set3rd = 2; (num2set3rd < cardTotal2nd) && (win == 0); num2set3rd++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd])\n\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] + 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 2 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum2nd[0] == cardInfoNum2nd[num2set2nd] - 1 && cardInfoNum2nd[0] == cardInfoNum2nd[num2set3rd] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set2nd]) && cardInfoCol2nd[0].equals(cardInfoCol2nd[num2set3rd]))))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint cardTotal3rd = cardTotal2nd -3;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tint[] cardInfoNum3rd = new int[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tString[] cardInfoCol3rd = new String[cardTotal3rd];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tinsertNum = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//3セット目を見つける準備\n\t\t\t\t\t\t\t\t\tfor(int num = 1; num < cardTotal2nd; num++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif(!(num == num2set2nd || num == num2set3rd))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcardInfoNum3rd[insertNum] = cardInfoNum2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tcardInfoCol3rd[insertNum] = cardInfoCol2nd[num];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinsertNum++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//勝利条件を満たしているか確かめる\n\t\t\t\t\t\t\t\t\tif(((cardInfoNum3rd[0] == cardInfoNum3rd[1] && cardInfoNum3rd[0] == cardInfoNum3rd[2])\n\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] + 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 2 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2])))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t || ((cardInfoNum3rd[0] == cardInfoNum3rd[1] - 1 && cardInfoNum3rd[0] == cardInfoNum3rd[2] - 2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t && (cardInfoCol3rd[0].equals(cardInfoCol3rd[1]) && cardInfoCol3rd[0].equals(cardInfoCol3rd[2]))))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twin = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(win);\n\t\t}\n\t}\n}\n\n\n//かかった時間：6時間程\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\t//?????£?????????\n\t\tint output;\n\t\tint loop;\n\t\tString line;\n\t\tCard[] cardList = new Card[9];\n\n\t\tScanner sc = null;\n\n\t\ttry {\n\t\t\tsc = new Scanner(System.in);\n\n\t\t\t//?????§???????????°???????????????\n\t\t\tloop = sc.nextInt();\n\t\t\t//?¬???????????§????\n\t\t\tline = sc.nextLine();\n\t\t\tfor (int i = 0; i < loop; i++) {\n\t\t\t\t//?????????????????????\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] work = line.split(\" \");\n\n\t\t\t\tint[] number = new int[work.length];\n\t\t\t\tfor (int j = 0; j < work.length; j++) {\n\t\t\t\t\tnumber[j] = Integer.parseInt(work[j]);\n\t\t\t\t}\n\n\t\t\t\tline = sc.nextLine();\n\t\t\t\tString[] color = line.split(\" \");\n\n\t\t\t\t//???????????????\n\t\t\t\tfor (int j = 0; j < cardList.length; j++) {\n\t\t\t\t\tcardList[j] = new Card(number[j], color[j]);\n\t\t\t\t}\n\t\t\t\t//?????????????????°?????§?????????\n\t\t\t\tArrays.sort(cardList , new Comparator<Card>() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic int compare(Card card1, Card card2) {\n\n\t\t\t\t\t\tint temp = card1.getColor().compareTo(card2.getColor());\n\n\t\t\t\t\t\tif (temp == 0) {\n\t\t\t\t\t\t\treturn card1.getNumber() - card2.getNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn temp;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//???????????¶????????????????????????????????§??????\n\t\t\t\toutput = 0;\n\t\t\t\tCheck che = new Check();\n\t\t\t\toutput = che.cardCheck(cardList);\n\t\t\t\t//???????????????\n\t\t\t\tSystem.out.println(output);\n\t\t\t}\n\t\t} finally {\n\t\t\tsc.close();\n\t\t}\n\n\t}\n\n\t//??????????????????\n\tstatic class Card {\n\t\t//?????£?????????\n\t\t//??????????????°???\n\t\tprivate int number;\n\t\t//???????????????\n\t\tprivate String color;\n\n\t\t//?????????????????????\n\t\tpublic  Card(int num, String color){\n\t\t\tthis.number = num;\n\t\t\tthis.color = color;\n\t\t}\n\n\t\t//????????????????????????\n\t\tpublic int getNumber() {\n\t\t\treturn number;\n\t\t}\n\n\t\tpublic void setNumber(int number) {\n\t\t\tthis.number = number;\n\t\t}\n\n\t\tpublic String getColor() {\n\t\t\treturn color;\n\t\t}\n\n\t\tpublic void setColor(String color) {\n\t\t\tthis.color = color;\n\t\t}\n\n\t}\n\n\t//?????????????????¨??????????????????\n\tstatic class Check {\n\n\t\tpublic int cardCheck(Card[] list){\n\t\t\tint count = 0;\n\t\t\tint loop = list.length;\n\t\t\tint anser = 0;\n\n\t\t\tfor (int i = 0; i < loop; i++) {\n\t\t\t\tfor (int j = i + 1; j < loop; j++) {\n\t\t\t\t\tfor (int k = j + 1; k < loop; k++) {\n\n\t\t\t\t\t\tif (list[i] != null && list[j] != null && list[k] != null) {\n\t\t\t\t\t\t\t//???????¢????\n\t\t\t\t\t\t\tif (list[i].getColor().equals(list[j].getColor())\n\t\t\t\t\t\t\t\t\t&& list[j].getColor().equals(list[k].getColor())) {\n\t\t\t\t\t\t\t\t//??£???????????????\n\t\t\t\t\t\t\t\tif (list[i].getNumber() + 1 == list[j].getNumber()) {\n\t\t\t\t\t\t\t\t\tif (list[j].getNumber() + 1 == list[k].getNumber()) {\n\t\t\t\t\t\t\t\t\t\tlist[i] = null;\n\t\t\t\t\t\t\t\t\t\tlist[j] = null;\n\t\t\t\t\t\t\t\t\t\tlist[k] = null;\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//????????°???????????????\n\t\t\t\t\t\t\t\tif (list[i].getNumber() == list[j].getNumber()) {\n\t\t\t\t\t\t\t\t\tif (list[j].getNumber() == list[k].getNumber()) {\n\t\t\t\t\t\t\t\t\t\tlist[i] = null;\n\t\t\t\t\t\t\t\t\t\tlist[j] = null;\n\t\t\t\t\t\t\t\t\t\tlist[k] = null;\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 3) {\n\t\t\t\tanser = 1;\n\t\t\t}\n\t\t\treturn anser;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        int set = sc.nextInt();\n        int number[] = new int[9];\n        int Rnumber[] = new int[9];\n        int Gnumber[] = new int[9];\n        int Bnumber[] = new int[9];\n        int setcount = 0;\n        \n        for(int i = 0 ; i < set ; i++){\n            setcount = 0;\n            \n            for(int t = 0 ; t < 9 ; t++){\n                number[t] = sc.nextInt();\n            }\n            for(int c = 0 ; c < 9 ; c++){\n                String color = sc.next();\n                if(color.equals(\"R\")){\n                    Rnumber[c] = number[c];\n                }\n                else if(color.equals(\"G\")){\n                    Gnumber[c] = number[c];\n                }\n                else if(color.equals(\"B\")){\n                    Bnumber[c] = number[c];\n                }\n            }\n            \n            Arrays.sort(Rnumber);\n            Arrays.sort(Gnumber);\n            Arrays.sort(Bnumber);\n            \n            setcount += search(Rnumber);\n            setcount += search(Gnumber);\n            setcount += search(Bnumber);\n\n            if(setcount == 3){\n                System.out.println(\"1\");\n            }\n            else{\n                System.out.println(\"0\");\n            }\n            \n        }\n        \n    }\n\n\n\n   \n    private static int search (int nums[]){\n        int setcount = 0;\n        for(int time = 0 ; time < 9 ; time++){ //Rの数字を検索\n                if(nums[time] == 0){   //  数字がなかった場合\n                    continue;\n                }\n                \n                else{ //数字が1以上だった場合\n                    for(int time2 = 1 ; time2 < 9-time ; time2++){\n                        if(nums[time+time2] == nums[time]+1){ //数字が同じか、数字+1があった時\n                        \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time+time2+time3] == nums[time]+2){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                        \n                        else if(nums[time] == nums[time+time2]){\n                            \n                            for(int time3 = 1 ; time3 < 9-time-time2 ; time3++){\n                                if(nums[time] == nums[time+time2+time3]){\n                                    setcount++;\n                                    nums[time] = 0;\n                                    nums[time+time2] = 0;\n                                    nums[time+time2+time3] = 0;\n                                    break;\n                                }\n                            }\n                            \n                        }\n                        \n                    }\n                    \n                }\n            }\n            return setcount;\n    }\n    \n}\n"
  },
  {
    "language": "Java",
    "code": "package rummy;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class NewRummy {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\t// victory 1 defeat 0 save\n\t\tArrayList<Integer> answer = new ArrayList<Integer>();\n\n\t\t// ???????????????????????°\n\t\tint set = Integer.parseInt(br.readLine());\n\t\t// input Area\n\t\tfor (int i = 0; i < set; i++) {\n\t\t\t// ??¨??????????????????????????????????????????\n\t\t\tString tmpNum = br.readLine();\n\t\t\tString tmpColor = br.readLine();\n\n\t\t\t// ??°?????????????????§???????????£?¨????????????????????????????????????????????????????????´?\n\t\t\tCardRummy cr = new CardRummy(tmpNum, tmpColor);\n\n\t\t\t// method?????????????????????????????????\n\t\t\tint result = cr.playtheGame();\n\t\t\t// ???????????????????´?\n\t\t\tanswer.add(result);\n\n\t\t}\n\n\t\t// output Area\n\t\t// ex : 10101010\n\t\tfor (int i = 0; i < answer.size(); i++) {// debug chk point\n\t\t\tSystem.out.println(answer.get(i));\n\t\t}\n\t}\n}// end\n\nclass CardRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\t// static final int CARDPAGE = 2;\n\n\tint[] cardR = new int[ONECARDSET];\n\tint[] cardG = new int[ONECARDSET];\n\tint[] cardB = new int[ONECARDSET];\n\n\tpublic CardRummy() {\n\t}\n\n\tpublic CardRummy(String tmpNum, String tmpColor) {\n\n\t\tString[] transNum = tmpNum.split(\" \");\n\n\t\tString[] transColor = tmpColor.split(\" \");\n\n\t\tint intNum = 0;\n\n\t\tint tmpRnum = 0;\n\n\t\tint tmpGnum = 0;\n\n\t\tint tmpBnum = 0;\n\n\t\t// ???????±??????£???????????????????????¨????????????????´?\n\t\tfor (int i = 0; i < ONECARDSET; i++) {// debug chk point\n\n\t\t\tif (transColor[i].equals(\"R\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardR[tmpRnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"G\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardG[tmpGnum++] = intNum;\n\n\t\t\t} else if (transColor[i].equals(\"B\")) {\n\n\t\t\t\tintNum = Integer.parseInt(transNum[i]);\n\t\t\t\tcardB[tmpBnum++] = intNum;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic int playtheGame() {// debug chk point\n\t\tint result = 0;\n\n\t\t// ??´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\t// ??£????????????????¢????\n\t\tcardR = sameNumCard(cardR);\n\t\tcardG = sameNumCard(cardG);\n\t\tcardB = sameNumCard(cardB);\n\n\t\t// ????????????????????????????¢????\n\t\tcardR = serialNumCard(cardR);\n\t\tcardG = serialNumCard(cardG);\n\t\tcardB = serialNumCard(cardB);\n\n\t\t// ?????????????????´???????\\?\n\t\tArrays.sort(cardR);\n\t\tArrays.sort(cardG);\n\t\tArrays.sort(cardB);\n\n\t\tif (cardR[8] == 0 && cardG[8] == 0 && cardB[8] == 0) {\n\n\t\t\tresult = 1;\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tpublic static int[] sameNumCard(int[] card) {// debug chk point\n\n\n\t\tint[] tmpSave = new int[ONECARDSET];\n\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tfor (int j = 0; j < tmpSave.length; j++) {\n\t\t\t\tfor (int k = 0; k < tmpSave.length; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] && card[i] == card[k]) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic static int[] serialNumCard(int[] card) {// debug chk point\n\n\n\t\tint[] tmpSave = new int[ONECARDSET];\n\n\t\tfor (int i = 0; i < ONECARDSET; i++) {\n\t\t\tfor (int j = 0; j < tmpSave.length; j++) {\n\t\t\t\tfor (int k = 0; k < tmpSave.length; k++) {\n\n\t\t\t\t\tif (card[i] == card[j] && card[j] == card[k]) {\n\t\t\t\t\t\tif (card[i] != 0 && card[i] == card[j] - 1 && card[i] == card[k] - 2) {\n\t\t\t\t\t\t\tcard[i] = 0;\n\t\t\t\t\t\t\tcard[j] = 0;\n\t\t\t\t\t\t\tcard[k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static boolean judge(int[] x){\n\t\tfor(int i = 0; i < x.length; i++){\n\t\t\tif( x[i] == 0 ){\n\t\t\t\tcontinue;\n\t\t\t} else if( x[i] >= 3 ){\n\t\t\t\tx[i] -= 3;\n\t\t\t\ti--;\n\t\t\t} else if( i+2 < x.length && x[i] > 0 && x[i+1] > 0 && x[i+2] > 0 ){\n\t\t\t\tx[i]--; x[i+1]--; x[i+2]--;\n\t\t\t\ti--;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\t\t\t\n\tpublic static int solve(int[] num, String[] color){\n\t\tint[] R = new int[9];\n\t\tint[] G = new int[9];\n\t\tint[] B = new int[9];\n\t\t\t\t\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tif( color[i].equals(\"R\") ){\n\t\t\t\tR[num[i]-1]++;\n\t\t\t} else if( color[i].equals(\"G\") ){\n\t\t\t\tG[num[i]-1]++;\n\t\t\t} else {\n\t\t\t\tB[num[i]-1]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( judge(R) && judge(G) && judge(B) ){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\t\n\tpublic static void main(String[] args){\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint n = stdIn.nextInt();\n\t\tint[] result = new int[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint[] num = new int[9];\n\t\t\tString[] color = new String[9];\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tnum[j] = stdIn.nextInt();\n\t\t\t}\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tcolor[j] = stdIn.next();\n\t\t\t}\n\t\t\tresult[i] = solve(num, color);\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tSystem.out.println(result[i]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int loop = sc.nextInt();\n        for(int x=0;x<loop;x++){\n            int countR=0, countG=0, countB=0, count=0, count2=0, p=0, q=0, r=0;\n            int[] l = new int[2];\n            int[] m = new int[6];\n            int[] n = new int[3];\n            int[] num = new int[9];\n            String[] cor = new String[9];\n            for(int i=0;i<9;i++){\n                num[i] = sc.nextInt();\n            }\n            for(int i=0;i<9;i++){\n                cor[i] = sc.next();\n                if(cor[i].equals(\"R\")) countR++;\n                if(cor[i].equals(\"G\")) countG++;\n                if(cor[i].equals(\"B\")) countB++;\n            }\n            if((countR%3)!=0 || (countG%3)!=0 || (countB%3)!=0){\n                System.out.println(\"0\");\n                continue;\n            }\n            Arrays.sort(num);\n            for(int i=0;i<9;i+=3){\n                if(num[i]==num[i+1] && num[i]==num[i+2]) count++;\n            }\n            if(count==3){\n                System.out.println(\"1\");\n                continue;\n            }\n            for(int i=0;i<7;i++){\n                if(num[i]==num[i+1] && num[i]==num[i+2]){\n                    l[p]=i;\n                    p++;\n                    i += 2;\n                }\n            }\n            if(p==0){\n                if((num[0]+1)==num[1]){\n                    if((num[0]+2)==num[2]){\n                        count2++;\n                        if((num[3])+1==num[4]){\n                            if((num[3])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }else if(num[3]+2==num[6]){\n                                count2++;\n                                if((num[5]+1)==num[7] && (num[5]+2)==num[8]) count2++;\n                            }\n                        }else if((num[3]+1)==num[5]){\n                            if((num[3])+2==num[6]){\n                                count2++;\n                                if((num[4]+1)==num[7] && (num[4]+2)==num[8]) count2++;\n                            }else if((num[3]+2)==num[7]){\n                                count2++;\n                                if((num[4]+1)==num[6] && (num[4]+2)==num[8]) count2++;\n                            }\n                        }\n                    }else if((num[0]+2)==num[3]){\n                        count2++;\n                        if((num[2])+1==num[4]){\n                            if((num[2])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }else if(num[2]+2==num[6]){\n                                count2++;\n                                if((num[5]+1)==num[7] && (num[5]+2)==num[8]) count2++;\n                            }\n                        }\n                    }\n                }else if((num[0]+1)==num[2]){\n                    if((num[0]+2)==num[3]){\n                        count2++;\n                        if((num[1])+1==num[4]){\n                            if((num[1])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }\n                        }\n                    }else if((num[0]+2)==num[4]){\n                        count2++;\n                        if((num[1])+1==num[3]){\n                            if((num[1])+2==num[5]){\n                                count2++;\n                                if((num[6]+1)==num[7] && (num[6]+2)==num[8]) count2++;\n                            }\n                        }\n                    }\n                }\n                if(count2==3){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            if(p==1){\n                for(int i=0;i<9;i++){\n                    if(i==l[0] || i==(l[0]+1) || i==(l[0]+2)) continue;\n                    m[q] = i;\n                    q++;\n                }\n                if((num[m[0]]+1)==num[m[1]]){\n                    if((num[m[0]]+2)==num[m[2]]){\n                        count2++;\n                        if((num[m[3]]+1)==num[m[4]] && (num[m[3]]+2)==num[m[5]]) count2++;\n                    }else if((num[m[0]]+2)==num[m[3]]){\n                        count2++;\n                        if((num[m[2]]+1)==num[m[4]] && (num[m[2]]+2)==num[m[5]]) count2++;\n                    }\n                }else if((num[m[0]]+1)==num[m[2]]){\n                    if((num[0]+2)==num[m[3]]){\n                        count2++;\n                        if((num[m[1]]+1)==num[m[4]] && (num[m[1]]+2)==num[m[5]]) count2++;\n                    }else if((num[0]+2)==num[m[4]]){\n                        count2++;\n                        if((num[m[1]]+1)==num[m[3]] && (num[m[1]]+2)==num[m[5]]) count2++;\n                    }\n                }\n                if(count2==2){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            if(p==2){\n                for(int i=0;i<9;i++){\n                    if(i==l[0] || i==(l[0]+1) || i==(l[0]+2) || i==l[1] || i==(l[1]+1) || i==(l[1]+2)) continue;\n                    n[r] = i;\n                    r++;\n                }\n                if((num[n[0]]+1)==num[n[1]] && (num[n[0]]+2)==num[n[2]]){\n                    System.out.println(\"1\");\n                    continue;\n                }\n            }\n            System.out.println(\"0\");\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t//????????????????????°?????\\???\n\t\tint set = sc.nextInt();\n\t\tint[] num = new int[9];\n\t\tint[] color = new int[9];\n\t\tfor (int setCount = 0; setCount < set; setCount++) {\n\t\t\tint RCount = 0;\n\t\t\tint GCount = 0;\n\t\t\tint BCount = 0;\n\t\t\tint[] used = new int[9];\n\t\t\tint trueSet = 0;\n\t\t\t//??\\???\n\t\t\tfor (int count = 0; count < 9; count++ ) {\n\t\t\t\tnum[count] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t\tString cl = sc.next();\n\t\t\t\tif (cl.equals(\"R\") ) {\n\t\t\t\t\tcolor[count] = 0;\n\t\t\t\t\tRCount++;\n\t\t\t\t} else if (cl.equals(\"G\") ) {\n\t\t\t\t\tcolor[count] = 1;\n\t\t\t\t\tGCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcolor[count] = 2;\n\t\t\t\t\tBCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//??????1\n\t\t\tif ((RCount == 0 && GCount == 0) || (RCount == 0 && GCount == 3) ||\n\t\t\t\t(RCount == 0 && GCount == 6) || (RCount == 3 && GCount == 0) ||\n\t\t\t\t(RCount == 3 && GCount == 3) || (RCount == 3 && GCount == 6) ||\n\t\t\t\t(RCount == 6 && GCount == 0) || (RCount == 6 && GCount == 3) ||\n\t\t\t\t(RCount == 9) || (GCount == 9)) {\n\t\t\t\t//?????????????????????????????????\n\t\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\t\tfor (int j = i+1; j < 9; j++) {\n\t\t\t\t\t\tif (num[i] > num[j]) {\n\t\t\t\t\t\t\tint numTaihi = num[i];\n\t\t\t\t\t\t\tnum[i] = num[j];\n\t\t\t\t\t\t\tnum[j] = numTaihi;\n\t\t\t\t\t\t\tint colorTaihi = color[i];\n\t\t\t\t\t\t\tcolor[i] = color[j];\n\t\t\t\t\t\t\tcolor[j] = colorTaihi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//????????????????????????????????????\n\t\t\t\tfor (int xMaime = 0; xMaime < 7; xMaime++) {\n\t\t\t\t\tif (used[xMaime] == 0) {\n\t\t\t\t\t\tfor (int yMaime = xMaime + 1; yMaime < 8; yMaime++) {\n\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(used[yMaime] == 0) {\n\t\t\t\t\t\t\t\tfor (int zMaime = yMaime + 1; zMaime < 9; zMaime++) {\n\t\t\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (used[zMaime] == 0) {\n\t\t\t\t\t\t\t\t\t\tif (color[xMaime] == color[yMaime] && color[xMaime] == color[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] == num[yMaime] && num[xMaime] == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tint[] renban = new int[3];\n\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[yMaime] && num[xMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[yMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (num[yMaime] <= num[xMaime] && num[yMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\trenban[0] = num[zMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] <= num[yMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[1] = num[yMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenban[2] = num[xMaime];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (renban[0]+1 == renban[1] && renban[1]+1 == renban[2]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif (trueSet == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\t\t// game set\n\t\tint gameset = sc.nextInt();\n\n\t\tint[][] cardset = new int[UTRummy.CARDPAGE][UTRummy.ONECARDSET];\n\n\t\t// input info\n\t\tfor (int i = 0; i < gameset; i++) {\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tfor (int k = 0; k < 9; k++) {\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\t// number info input\n\t\t\t\t\t\tcardset[j][k] = sc.nextInt();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// color info\n\t\t\t\t\t\tString tmpcolor = sc.next();\n\t\t\t\t\t\tint color = 0;\n\t\t\t\t\t\tif (tmpcolor.equals(\"R\")) {\n\t\t\t\t\t\t\tcolor = UTRummy.RED;\n\t\t\t\t\t\t} else if (tmpcolor.equals(\"G\")) {\n\t\t\t\t\t\t\tcolor = UTRummy.GREEN;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolor = UTRummy.BLUE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// color info input\n\t\t\t\t\t\tcardset[j][k] = color;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tUTRummy utr = new UTRummy();\n\t\t\t// getter-setter call\n\t\t\tutr.setCardset(cardset);\n\t\t\tcardset = utr.getCardset();\n\n\t\t\t// game start\n\t\t\tint cnt = 0;\n\t\t\tcnt = utr.playtheGame(cardset); // ?????????\n\t\t\t// game result\n\t\t\tif (3 <= cnt) {\n\t\t\t\tSystem.out.println(1);\n\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass UTRummy {\n\n\t// declear\n\tstatic final int ONECARDSET = 9;\n\tstatic final int CARDPAGE = 2;\n\n\t// color\n\tstatic final int RED = 0;\n\tstatic final int GREEN = 1;\n\tstatic final int BLUE = 2;\n\n\tint[][] Cardset = new int[CARDPAGE][ONECARDSET];\n\n\t// [0][i] : num, [1][j] : color\n\tpublic UTRummy() {\n\n\t}\n\n\tpublic int[][] getCardset() {\n\t\treturn Cardset;\n\t}\n\t//????????????????????????????????\\??????\n\tpublic void setCardset(int[][] cardset) {\n\t\tthis.Cardset = settingcardplay(cardset);\n\t}\n\t//\n\tpublic int[][] settingcardplay(int[][] card) {//Error point\n\n\t\t/* ex:\n\t\t * 1 2 3 3 4 5 7 7 7\n\t\t *\n\t\t * R R R R R R G G G\n\t\t */\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\t// [0][i] : num, [1][j] : color\n\t\t\t\tif (card[1][j] > card[1][j + 1]) { // color???????????????\n\t\t\t\t\tint temp = card[1][j];\n\t\t\t\t\tcard[1][j] = card[1][j + 1];\n\t\t\t\t\tcard[1][j + 1] = temp;\n\n\t\t\t\t\tint temp2 = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tfor (int j = 0; j < 8 - i; j++) {\n\t\t\t\tif (card[1][j] == card[1][j + 1] && card[0][j] > card[0][j + 1]) {// color&num???????????????\n\n\t\t\t\t\tint temp = card[0][j];\n\t\t\t\t\tcard[0][j] = card[0][j + 1];\n\t\t\t\t\tcard[0][j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn card;\n\t}\n\n\tpublic int playtheGame(int[][] cardset) { // ?????????\n\t\t// [0][i] : num, [1][j] : color\n\n\t\t/* ex:\n\t\t * 1 2 3 3 4 5 7 7 7\n\t\t *\n\t\t * R R R R R R G G G\n\t\t */\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) { // 3??????????????????????????°\n\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j- 1]\n\t\t\t\t\t\t\t\t&& cardset[0][i] == cardset[0][k-2] ) {//[0][0] == [0][1] && [0][0] ==[0]\n\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// [0][i] : num, [1][j] : color\n\n\t\tfor (int i = 0; i < 7; i++) {\n\n\t\t\tfor (int j = i + 1; j < 8; j++) {\n\n\t\t\t\tfor (int k = j + 1; k < 9; k++) {\n\n\t\t\t\t\tif (cardset[1][i] == cardset[1][j] && cardset[1][j] == cardset[1][k]) {\n\n\t\t\t\t\t\tif (cardset[0][i] != 0 && cardset[0][i] == cardset[0][j] && cardset[0][i] == cardset[0][k]) {\n\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tcardset[0][i] = 0;\n\t\t\t\t\t\t\tcardset[0][j] = 0;\n\t\t\t\t\t\t\tcardset[0][k] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cnt;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\n\t\twhile(n-- > 0){\n\t\t\tCard[] card = new Card[9];\n\t\t\tint[] num = new int[9];\n\t\t\tfor(int i=0;i<9;i++) num[i] = sc.nextInt();\n\t\t\tfor(int i=0;i<9;i++) card[i] = new Card(num[i],sc.next());\n\n\t\t\tboolean[] flg = new boolean[9];\n\n\t\t\tSystem.out.println(judge(card,flg,9)?1:0);\n\t\t}\n\t}\n\n\tpublic static boolean judge(Card[] card,boolean[] flg,int rem){\n\t\tif(rem == 0) return true;\n\n\t\tfor(int i=0;i<7;i++){\n\t\t\tfor(int j=i+1;j<8;j++){\n\t\t\t\tfor(int k=j+1;k<9;k++){\n\t\t\t\t\tif(!flg[i] && !flg[j] && !flg[k] &&\n\t\t\t\t\t\t Card.isSet(card[i],card[j],card[k])){\n\t\t\t\t\t\tflg[i] = flg[j] = flg[k] = true;\n\t\t\t\t\t\tif(judge(card,flg,rem-3)) return true;\n\t\t\t\t\t\tflg[i] = flg[j] = flg[k] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nclass Card{\n\tint num;\n\tString color;\n\n\tCard(int num,String color){\n\t\tthis.num = num;\n\t\tthis.color = color;\n\t}\n\n\tstatic boolean isSet(Card a,Card b,Card c){\n\t\treturn\n\t\t\ta.color.equals(b.color) && a.color.equals(c.color) &&\n\t\t\t(a.num == b.num && a.num == c.num || \n\t\t\t a.num == b.num-1 && a.num == c.num-2 ||\n\t\t\t a.num == c.num-1 && a.num == b.num-2 ||\n\t\t\t b.num == a.num-1 && b.num == c.num-2 ||\n\t\t\t b.num == c.num-1 && b.num == a.num-2 ||\n\t\t\t c.num == a.num-1 && c.num == b.num-2 ||\n\t\t\t c.num == b.num-1 && c.num == a.num-2\n\t\t\t );\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\n\n/**\n * Rummy\n */\npublic class Main{\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n\n        loop: for (int i = 0; i < n; i++) {\n            int numList[] = new int[9];\n            List<Integer> redList = new ArrayList<Integer>();\n            List<Integer> greenList = new ArrayList<Integer>();\n            List<Integer> blueList = new ArrayList<Integer>();\n\n            for (int j = 0; j < 9; j++) {\n                numList[j] = sc.nextInt();\n            }\n            for (int j = 0; j < 9; j++) {\n                switch (sc.next()) {\n                case \"R\":\n                    redList.add(numList[j]);\n                case \"G\":\n                    greenList.add(numList[j]);\n                case \"B\":\n                    blueList.add(numList[j]);\n                }\n            }\n\n            Collections.sort(redList);\n            Collections.sort(greenList);\n            Collections.sort(blueList);\n\n            // まず3の倍数になってない時点でNg\n            if (redList.size() % 3 != 0 || blueList.size() % 3 != 0 || greenList.size() % 3 != 0) {\n                System.out.println(0);\n                continue loop;\n            }\n\n            // 各色について全探索して, 連番or同じ数にできるか\n            if (Confirm(redList) && Confirm(redList) && Confirm(redList)) {\n                System.out.println(1);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n\n    // bit全探索して, 連番or同じ数の組が作れたらtrueを返す\n    private static boolean Confirm(List<Integer> list) {\n        int len = list.size();\n\n        // 長さ3の時\n        if (len / 3 == 1) {\n            if (list.get(0) == list.get(1) && list.get(1) == list.get(2)) {\n                return true;\n            } else if (list.get(0) + 1 == list.get(1) && list.get(1) + 1 == list.get(2)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        // 長さ6の時\n        if (len / 3 == 2) {\n            for (int i = 0; i < 4; i++) {\n                for (int j = i + 1; j < 5; j++) {\n                    for (int k = j + 1; j < 6; k++) {\n                        if (list.get(i) == list.get(j) && list.get(j) == list.get(k)) {\n                            return true;\n                        } else if (list.get(i) + 1 == list.get(j) && list.get(j) + 1 == list.get(k)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n\n        // // 長さ9の時\n        // int[] bitList = new int[len]; // bitを入れる配列\n\n        // for (int i = 0; i < pow(len / 3, len); i++) { // len=3 : 1, len=6 : 2^6,\n        // len=9 : 3^9 かいまわる\n\n        // for (int pos = 1; pos <= k; ++pos) {// 数字1~kが何文字分か仮定する\n        // len[pos] = tmp % 3 + 1;// 1 ~ 3文字\n        // tmp /= 3;\n        // }\n        // list[tmp] = true;\n        // }\n\n        // return true;\n        return false;\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.*;\n\npublic class Main {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\t//???check????????????????§?\n\tfinal static int column = 9;\n\n\tpublic static void main(String args[]) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tScanner scan = new Scanner(System.in);\n\n\t\tint number[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\t\tString color[] = { \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\" };\n\n\t\t// ???????????????????´?????????????\n\t\tint n = scan.nextInt();\n\n\t\t// n??????????????????\n\t\tfor (int count = 0; count < n; count++) {\n\t\t\t// ?????????????????????????´???????\n\t\t\t// 9???????????????????´?\n\t\t\tfor (int count1 = 0; count1 < column; count1++) {\n\t\t\t\tnumber[count1] = scan.nextInt();\n\t\t\t}\n\t\t\t// 9????????????????´?\n\t\t\tfor (int count1 = 0; count1 < column; count1++) {\n\t\t\t\tcolor[count1] = scan.next();\n\t\t\t}\n\n\t\t\t// ???????????????????????????????????????????????°?????°?????£??????true??§?¬?????????????\n\t\t\tcolor_count c = new color_count();\n\n\t\t\t// ?????????????????? store???????????????????????¨??????color_count??????????????????\n\t\t\tfor (int count1 = 0; count1 < column; count1++) {\n\t\t\t\tc.count(color[count1]);\n\t\t\t}\n\n\t\t\t// ???????????? ??????????????°??§????????°true???\n\t\t\tboolean flg = c.color_result();\n\n\t\t\t// ???????????????true?????´????????°???????????? / false?????´??????0?????????\n\t\t\tif (flg) {\n\t\t\t\tcheck ck = new check();\n\t\t\t\t\n\t\t\t\t//R(??¬??????????????????\n\t\t\t\tfor(int count1=0;count1<column;count1++){\n\t\t\t\t\tif(color[count1].equals(\"R\")){\n\t\t\t\t\t\tck.number_store(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.number_sort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.number_check();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg1 = ck.result();\n\t\t\t\t\n\t\t\t\t//G(??°?????????????????????\n\t\t\t\tfor(int count1=0;count1<column;count1++){\n\t\t\t\t\tif(color[count1].equals(\"G\")){\n\t\t\t\t\t\tck.number_store(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.number_sort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.number_check();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg2 = ck.result();\n\t\t\t\t\n\t\t\t\t//B(?????????????????????\n\t\t\t\tfor(int count1=0;count1<column;count1++){\n\t\t\t\t\tif(color[count1].equals(\"B\")){\n\t\t\t\t\t\tck.number_store(number[count1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ???????????????\n\t\t\t\tck.number_sort();\n\n\t\t\t\t// ??°???????????§????????????\n\t\t\t\tck.number_check();\n\t\t\t\t\n\t\t\t\t//???????????????\n\t\t\t\tboolean flg3 = ck.result();\n\n\t\t\t\t// ??????\n\t\t\t\tif (flg1 & flg2 & flg3) {\n\t\t\t\t\tsb.append(\"1\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(\"0\");\n\t\t\t\t\tsb.append(\"\\n\");\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tsb.append(\"0\");\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t// ????????????????????????\n\t\tsb.deleteCharAt(sb.length() - 1);\n\t\tSystem.out.println(new String(sb));\n\n\t}\n}\n\n// --------------------color_cout?????????------------------------------------\n\n// ????????°?????°???????????????\nclass color_count {\n\n\tint r = 0;\n\tint b = 0;\n\tint g = 0;\n\t\n\t//r b g??????????????????????????????????????????\n\tvoid count(String color) {\n\t\tif (color.equals(\"R\")) {\n\t\t\tr++;\n\t\t} else if (color.equals(\"B\")) {\n\t\t\tb++;\n\t\t} else if (color.equals(\"G\")) {\n\t\t\tg++;\n\t\t}\n\t\t// System.out.println(\"r=\" + r + \" b=\" + b + \" g=\" + g);\n\t}\n\n\t// color?????\\??????\n\tboolean color_result() {\n\t\t// ????????????????????????????????°??§????????¨???true?????????\n\t\treturn (r % 3 == 0) & (b % 3 == 0) & (g % 3 == 0);\n\t}\n\n}\n\n// --------------------check?????????------------------------------------\n\nclass check {\n\n\t// ?????????9???????????§??????????????°???????????£?????¨??????????????§????????????????????°??¨????????????\n\tfinal static int column = 9;\n\n\tList<Integer> number_list = new ArrayList<Integer>();\n\n\tint[] number = new int[column];\n\t\n\tint x = 0;\n\t// int number[] = {0,0,0,0,0,0,0,0,0};\n\n\t// ????????°?????????????????¨???????????? ???????????????????????§????´?\n\t// ????????????num[]??????????????????0????????£??????true??¨??????\n\n\tint[] num = new int[column];\n\t// int num[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n\n\t// ??°????????\\??????\n\tvoid number_store(int number) {\n\t\tnumber_list.add(number);\n\t\tnum[number - 1] = num[number - 1] + 1;\n\t\tx++;\n\t}\n\n\t// ??°??????????????????????????????????´?\n\tvoid number_sort() {\n\t\tCollections.sort(number_list);\n\t\tfor (int count = 0; count < x; count++) {\n\t\t\tnumber[count] = number_list.get(count);\n\t\t}\n\t\t//?????????????????????\n\t\tnumber_list.clear();\n\t\tx = 0;\n\t}\n\n\tvoid number_check() {\n\t\t// ????????°??????????????\\???????????´???????????????\n\t\t// ?????§??§3?????????????????????\n\t\tfor (int count = 0; count < column; count++) {\n\t\t\t// num[count]??????????????\\????????¨??????????????????\n\t\t\tif (num[count] >= 3) {\n\t\t\t\tnum[count] = num[count] - 3;\n\t\t\t}\n\t\t}\n\n\t\t// ??£???????????£?????????????¢?????????? ?????§????????????????????????\n\t\t// 7????????????????????? (1-2-3)(2-3-4)?????????????¢????????????????\n\t\t// ????????§????????£????????????????????????????????????????????????\n\t\tfor (int count2 = 0; count2 < 3; count2++) {\n\t\t\tfor (int count = 0; count < 7; count++) {\n\t\t\t\t// ???????????°????????£???????¢???????true?????´??????????????????-1??????\n\t\t\t\tif ((num[count] >= 1) & (num[count + 1] >= 1) & (num[count + 2] >= 1)) {\n\t\t\t\t\tnum[count]--;\n\t\t\t\t\tnum[count + 1]--;\n\t\t\t\t\tnum[count + 2]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// ?????????true ??? false??§??????\n\tboolean result() {\n\t\t// num[]????????????????????¨????????§????????°true?????????\n\t\treturn num[0] == 0 & num[1] == 0 & num[2] == 0 & num[3] == 0 & num[4] == 0 & num[5] == 0 & num[6] == 0\n\t\t\t\t& num[7] == 0 & num[8] == 0;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\t//?????°\n\tprivate static int valueOfCard = 9; //?????????????????°\n\tprivate static int numberOfCard = 9; //?????????????????????????¨??????°(1???9 = 9)\n\tprivate static int colorOfCard = 3; //??????????????????????¨??????°(RGB = 3)\n\tprivate static int winSetCount = 3; //???????????????????????¢?????°\n\n\t/**\n\t * 1??????????????????????????¨???????????????????????????\n\t * @author SS\n\t *\n\t */\n\tstatic class Card {\n\t\tprivate int number;\n\t\tprivate String color;\n\n\t\tpublic int getNumber() {\n\t\t\treturn number;\n\t\t}\n\t\tpublic void setNumber(int number) {\n\t\t\tthis.number = number;\n\t\t}\n\t\tpublic String getColor() {\n\t\t\treturn color;\n\t\t}\n\t\tpublic void setColor(String color) {\n\t\t\tthis.color = color;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\t//??\\????????°?????????\n\t\tint intLoop = scan.nextInt();\n\t\t//????¨?????´???´????¢????\n\t\tArrayList<Integer> ansList = new ArrayList<Integer>();\n\t\tArrayList<Card> cards = new ArrayList<Card>();\n\n\t\t//??\\?????????\n\t\tfor(int i = 0; i < intLoop; i++){\n\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = new Card();\n\t\t\t\tcard.setNumber(scan.nextInt());\n\t\t\t\tcards.add(card);\n\t\t\t}\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = cards.get(j + i * valueOfCard);\n\t\t\t\tcard.setColor(scan.next());\n\t\t\t\tcards.set(j + i * valueOfCard, card);\n\t\t\t}\n\t\t}\n\t\tscan.close();\n\t\tfor(int i = 0; i < intLoop; i++){\n\t\t\tint setCount = 0; //??¢????????°\n\t\t\tint[][] arrayRGB = new int[colorOfCard][numberOfCard];\n\t\t\t//RGB???????????\\?????????\n\t\t\tfor(int j = 0; j < valueOfCard; j++){\n\t\t\t\tCard card = cards.get(j + i * valueOfCard);\n\t\t\t\tString color = card.getColor();\n\t\t\t\tif(\"R\".equals(color)){\n\t\t\t\t\tarrayRGB[0][card.getNumber() - 1]++;\n\t\t\t\t}else if(\"G\".equals(color)){\n\t\t\t\t\tarrayRGB[1][card.getNumber() - 1]++;\n\t\t\t\t}else if(\"B\".equals(color)){\n\t\t\t\t\tarrayRGB[2][card.getNumber() - 1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//???????????§??????\n\t\t\tfor(int j = 0; j < colorOfCard; j++){\n\t\t\t\tfor(int k = 0; k < valueOfCard - 2; k++){\n\t\t\t\t\tboolean isReplay = false;\n\t\t\t\t\tif(arrayRGB[j][k] != 0 && arrayRGB[j][k+1] != 0 && arrayRGB[j][k+2] !=0){\n\t\t\t\t\t\tarrayRGB[j][k]--;\n\t\t\t\t\t\tarrayRGB[j][k+1]--;\n\t\t\t\t\t\tarrayRGB[j][k+2]--;\n\t\t\t\t\t\tsetCount++;\n\t\t\t\t\t\tisReplay = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(isReplay && arrayRGB[j][k] != 0){\n\t\t\t\t\t\tk--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//???????????§??????\n\t\t\tfor(int j = 0; j < colorOfCard; j++){\n\t\t\t\tfor(int k = 0; k < valueOfCard; k++){\n\t\t\t\t\tif(arrayRGB[j][k] == winSetCount){\n\t\t\t\t\t\tsetCount++;\n\t\t\t\t\t\tarrayRGB[j][k] -= winSetCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(setCount == winSetCount){\n\t\t\t\tansList.add(1);\n\t\t\t}else{\n\t\t\t\tansList.add(0);\n\t\t\t}\n\t\t}\n\t\t//??????\n\t\tfor(int i = 0; i < ansList.size(); i++){\n\t\t\tSystem.out.println(ansList.get(i));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.awt.print.Printable;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport javax.sound.midi.SysexMessage;\n\n\npublic class Cards {\n    public int num;\n    public int color;\n}\n\npublic class Main\n{      \n    public static void main(String[] args)\n    {\n\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int p=0;p<n;p++)\n        {\n            boolean win = true;\n\n            Cards cards[] = new Cards[9];\n\n            for(int i=0;i<n;i++)\n            {\n                for(int j=0;j<9;j++)\n                {\n                    cards[j].num=sc.nextInt();\n                }\n                for(int j=0;j<9;j++)\n                {\n                    String color = sc.next();\n                    if(color==\"R\")\n                        cards[j].color=1;\n                    if(color==\"G\")\n                        cards[j].color=2;\n                    if(color==\"B\")\n                        cards[j].color=3;                \n                }\n            \n                Arrays.sort( cards, (a,b)-> a.color - b.color );\n                int nowcolor=0;\n\n                \n                for(int j=0;j<9;j++)\n                {\n\n                    if(cards[j].color!=nowcolor)\n                    {\n                        nowcolor=cards[j].color;\n\n                        int nc_count=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor)\n                                nc_count++;\n                        }\n                        int nums[]= new int[nc_count];\n                        int nc_count2=0;\n                        for(int k=0;k<9;k++){\n                            if(cards[k].color==nowcolor){\n                                nums[nc_count2]=cards[k];\n                                nc_count2++;\n                            } \n                        }\n                        Arrays.sort(nums);\n                        int same=0;\n                        int sames[]=new int[4];\n                        int lastnum=-1; \n                    \n                        int samecount=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(lastnum==nums[k])\n                                same++;\n                            if(same%3==0)\n                            {\n                                samecount++;\n                                sames[semecount]=nums[k];\n                                \n                            }\n                            lastnum=nums[k];\n\n                        }\n                        for(int k=0;k<samecount;k++)\n                        {\n                            int zerocount =0;\n                            for(int l=0;l<9;l++){\n                                if(nums[l]==sames[k])\n                                    if(zerocount<3)\n                                        nums[l]=-1;\n                                    zerocount++;      \n                            }\n                        }\n                        Arrays.sort(nums);\n                        int lastnum2 = -1;\n                        int lastnumcount=0;\n                        int lastnumcount3=0;\n                        for(int k=0;k<nums.length;k++)\n                        {\n                            if(nums[k]-1==lastnum)\n                                lastnumcount++;\n                            if(lastnumcount==2)\n                                lastnumcount=0;\n                        }\n                        if(lastnumcount!=0)\n                            win = false;\n                    }\n                }   \n                    nums[j]=cards[j].num;          \n            }\n            if(win==true)\n                System.out.println(\"1\");\n            else\n                System.out.println(\"0\");\n        }\n        sc.close();\n    }   \n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t//????????????????????°?????\\???\n\t\tint set = sc.nextInt();\n\t\tint[] num = new int[9];\n\t\tint[] color = new int[9];\n\t\tfor (int setCount = 0; setCount < set; setCount++) {\n\t\t\tint RCount = 0;\n\t\t\tint GCount = 0;\n\t\t\tint[] used = new int[9];\n\t\t\tint trueSet = 0;\n\t\t\t//??\\???\n\t\t\tfor (int count = 0; count < 9; count++ ) {\n\t\t\t\tnum[count] = sc.nextInt();\n\t\t\t}\n\t\t\tfor (int count = 0; count < 9; count++) {\n\t\t\t\tString cl = sc.next();\n\t\t\t\tif (cl.equals(\"R\") ) {\n\t\t\t\t\tcolor[count] = 0;\n\t\t\t\t\tRCount++;\n\t\t\t\t} else if (cl.equals(\"G\") ) {\n\t\t\t\t\tcolor[count] = 1;\n\t\t\t\t\tGCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcolor[count] = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//??????1\n\t\t\tif ((RCount == 0 && GCount == 0) || (RCount == 0 && GCount == 3) ||\n\t\t\t\t(RCount == 0 && GCount == 6) || (RCount == 3 && GCount == 0) ||\n\t\t\t\t(RCount == 3 && GCount == 3) || (RCount == 3 && GCount == 6) ||\n\t\t\t\t(RCount == 6 && GCount == 0) || (RCount == 6 && GCount == 3) ||\n\t\t\t\t(RCount == 9) || (GCount == 9)) {\n\t\t\t\t//?????????????????????????????????\n\t\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\t\tfor (int j = i+1; j < 9; j++) {\n\t\t\t\t\t\tif (num[i] > num[j]) {\n\t\t\t\t\t\t\tint numTaihi = num[i];\n\t\t\t\t\t\t\tnum[i] = num[j];\n\t\t\t\t\t\t\tnum[j] = numTaihi;\n\t\t\t\t\t\t\tint colorTaihi = color[i];\n\t\t\t\t\t\t\tcolor[i] = color[j];\n\t\t\t\t\t\t\tcolor[j] = colorTaihi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//????????????????????????????????????\n\t\t\t\tfor (int xMaime = 0; xMaime < 7; xMaime++) {\n\t\t\t\t\tif (used[xMaime] == 0) {\n\t\t\t\t\t\tfor (int yMaime = xMaime + 1; yMaime < 8; yMaime++) {\n\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(used[yMaime] == 0) {\n\t\t\t\t\t\t\t\tfor (int zMaime = yMaime + 1; zMaime < 9; zMaime++) {\n\t\t\t\t\t\t\t\t\tif (used[xMaime] == 1) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (used[zMaime] == 0) {\n\t\t\t\t\t\t\t\t\t\tif (color[xMaime] == color[yMaime] && color[xMaime] == color[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\tif (num[xMaime] == num[yMaime] && num[xMaime] == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t} else if (num[xMaime]+1 == num[yMaime] && num[yMaime]+1 == num[zMaime]) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrueSet++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[xMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[yMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tused[zMaime]++;\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//??????\n\t\t\t\tif (trueSet == 3) {\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Set{\n    int num=0;\n    int color=0; \n\n    static boolean sameNum(Set num1, Set num2, Set num3){\n        if((num1.num == num2.num) && (num2.num == num3.num) && (num3.num == num1.num)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static boolean serialNum(Set num1, Set num2, Set num3){\n        if((num2.num - num1.num == 1) && (num3.num - num2.num == 1)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static boolean sameColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color == cl2.color) && (cl2.color == cl3.color) && (cl3.color == cl1.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    public static boolean alternateColor(Set cl1, Set cl2, Set cl3){\n        if((cl1.color != cl2.color) && (cl2.color != cl3.color) && (cl3.color != cl1.color)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n} //end_of_Set\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt(); //number_of_data-set\n\n    while(int i=0;i<n;i++){\n      int[] num = new int[9];\n      for(int j=0;j<9;j++){\n        num[j] = sc.nextInt();\n      }\n      sc.nextLine();\n      String line = sc.nextLine();\n      String[] ch= line.split(\" \");\n      int[] color = new int[9];\n      for(int l=0;l<9;l++){\n        switch(ch[l]){\n          case \"R\": color[l] = 1;\n                    break;\n          case \"G\": color[l] = 2;\n                    break;\n          case \"B\": color[l] = 3;\n                    break;\n          default : break;\n        }\n      }\n      \n      Set[] set1 = new Set[3];\n      Set[] set2 = new Set[3];\n      Set[] set3 = new Set[3];\n      for(int j=0;j<3;j++){\n          set1[j] = new Set(); \n          set1[j].num = num[j]; \n          set1[j].color = color[j];\n      }\n      for(int j=0;j<3;j++){\n          set2[j] = new Set();\n          set2[j].num = num[j+3];\n          set2[j].color = color[j+3];\n      }\n      for(int j=0;j<3;j++){\n          set3[j] = new Set();\n          set3[j].num = num[j+6];\n          set3[j].color = color[j+6];\n      }\n\n      int accept = 0;\n      Set check1 = new Set();\n      Set check2 = new Set();\n      Set check3 = new Set();\n      if(check1.sameNum(set1[0],set1[1],set1[2])){\n          if(check1.alternateColor(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check1.serialNum(set1[0],set1[1],set1[2])){\n          if(check1.sameColor(set1[0],set1[1],set1[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n      \n      if(check2.sameNum(set2[0],set2[1],set2[2])){\n          if(check2.alternateColor(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check2.serialNum(set2[0],set2[1],set2[2])){\n          if(check2.sameColor(set2[0],set2[1],set2[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n      if(check3.sameNum(set3[0],set3[1],set3[2])){\n          if(check3.alternateColor(set3[0],set3[1],set3[2])){\n             accept++;\n          }else{\n             System.out.println(0);\n             continue;\n          }\n      }\n      else if(check3.serialNum(set3[0],set3[1],set3[2])){\n          if(check3.sameColor(set3[0],set3[1],set3[2])){\n             accept++;\n          }else{\n            System.out.println(0);\n            continue; \n          }\n      }\n      else{\n        System.out.println(0);\n        continue;\n      }\n\n    System.out.println(1);\n    }//end_of_while\n  }//end_of_main\n}//end_of_Rummy"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\t\n\t\t\n\t\t// ??\\??????????????°??????????´???¨\n\t\tint[] intHairetsuNum = new int[9]; \n\t\tString[] strHairetsuNum = new String[9];\n\t\t\n\t\t// ??\\??????????????????????´???¨\n\t\tString[] strHairetsuColor = new String[9];\n\t\t\n\t\t// ???????????¨??? ArrayList ?????¨?????????\n\t\tArrayList<Integer> arrayRed = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayGreen = new ArrayList<Integer>();\n\t\tArrayList<Integer> arrayBlue = new ArrayList<Integer>();\n\t\t\n\t\t// ???????????????????????????\n\t\tboolean isRed = false;\n\t\tboolean isGreen = false;\n\t\tboolean isBlue = false;\n\t\t\n\t\t// ???????????????\n\t\tint intResult = 0;\n\t\t\n\t\t// ???????????¨??¨ ArrayList\n\t\tArrayList<Integer> arrayResult = new ArrayList<Integer>();\n\t\t\n\t\tInputStreamReader isrNum = new InputStreamReader(System.in);\n\t\tBufferedReader bfNum = new BufferedReader(isrNum);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tString strDataSetNum = bfNum.readLine();\n\t\t\tint intDataSetNum = Integer.parseInt(strDataSetNum);\n\t\t\t\n\t\t\t// ???????????????????????°???10????????§??¨??????\n\t\t\tint intSaidai = 10;\n\t\t\tif (intDataSetNum <= intSaidai) {\n\t\t\t\t\n\t\t\t\t// ??\\???????????????????????????????????°????????°???????????????\n\t\t\t\tfor (int i = 0; i < intDataSetNum; i++) {\n\t\t\t\t\n\t\t\t\t\t// ????????\\??????????????°????????????\n\t\t\t\t\tString strNineNum = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\??????????????°???????????¨???????????°???????????°?????¨?????????????´?\n\t\t\t\t\tstrHairetsuNum = strNineNum.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// String???????????§????????? int??????????????????????´?\n\t\t\t\t\tfor (int j = 0; j < strHairetsuNum.length; j++) {\n\t\t\t\t\t\tintHairetsuNum[j] = Integer.parseInt(strHairetsuNum[j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????\\???????????????(???????????????)?????????\n\t\t\t\t\tString strNineColor = bfNum.readLine();\n\t\t\t\t\t\n\t\t\t\t\t// ??\\???????????????????????¨???????????°??????????????¨?????????????´?\n\t\t\t\t\tstrHairetsuColor = strNineColor.split(\" \");\n\t\t\t\t\t\n\t\t\t\t\t// ??????????????????????????? ArrayList ???????´?\n\t\t\t\t\tfor (int k = 0; k < 9; k++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\tif (strHairetsuColor[k].equals(\"R\")) {\n\t\t\t\t\t\t\tarrayRed.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else if (strHairetsuColor[k].equals(\"G\")) {\n\t\t\t\t\t\t\tarrayGreen.add(intHairetsuNum[k]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ??????????????¨ ArrayList???\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarrayBlue.add(intHairetsuNum[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t// ????????????????£???°????????????????????£?????????\n\t\t\t\t\tisRed = getResult(arrayRed);\n\t\t\t\t\tisGreen = getResult(arrayGreen);\n\t\t\t\t\tisBlue = getResult(arrayBlue);\n\t\t\t\t\t\n\t\t\t\t\t// ??¨??¨ true ?????? ????????? 1 ???\n\t\t\t\t\tif (isRed) {\n\t\t\t\t\t\tif (isGreen) {\n\t\t\t\t\t\t\tif (isBlue) {\n\t\t\t\t\t\t\t\tintResult = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// ????????? ArrayList ???????´?\n\t\t\t\t\tarrayResult.add(intResult);\n\t\t\t\t\t\n\t\t\t\t\t// ?????????????????????????????????\n\t\t\t\t\tintResult = 0;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// ?????¨??????????????? ArrayList ???????????´???????¶?????????¶??????\n\t\t\t\t\tintHairetsuNum = new int[9]; \n\t\t\t\t\tstrHairetsuNum = new String[9];\n\t\t\t\t\tstrHairetsuColor = new String[9];\n\t\t\t\t\t\n\t\t\t\t\tarrayRed = new ArrayList<Integer>();\n\t\t\t\t\tarrayGreen = new ArrayList<Integer>();\n\t\t\t\t\tarrayBlue = new ArrayList<Integer>();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"???????????????????????°???10????????§??¨?????????\");\n\t\t\t}\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);\n\t\t\t\n\t\t} catch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"??°????????\\?????????????????????\");\n\t\t\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < arrayResult.size(); i++) {\n\t\t\tSystem.out.println(arrayResult.get(i));\n\t\t}\n\t\t\n\t}\n\t\n\t// ????????????????????????????????????\n\tpublic static boolean getResult(ArrayList array) {\n\t\t\n\t\t// ?????°???????????°????¨???¶??????????????????\n\t\tint intHairetsuResult[] = new int[9]; \n\t\t\n\t\t// ?????°???????????°????¨????\n\t\tint intOne = 0;\n\t\tint intTwo = 0;\n\t\tint intThree = 0;\n\t\tint intFour = 0;\n\t\tint intFive = 0;\n\t\tint intSix = 0;\n\t\tint intSeven = 0;\n\t\tint intEight = 0;\n\t\tint intNine = 0;\n\t\t\n\t\t// ??????????????°??????????´????????????°\n\t\tint intIchiji = 0;\n\t\t\n\t\t// ???????????????????´????????????°\n\t\tboolean isResult = false;\n\t\t\n\t\tfor (int m = 0; m < array.size(); m++) {\n\t\t\t\n\t\t\t// ?????°???????????°???????????????\n\t\t\tif (array.get(m).equals(1)) {\n\t\t\t\tintOne++;\n\t\t\t} else if (array.get(m).equals(2)) {\n\t\t\t\tintTwo++;\n\t\t\t} else if (array.get(m).equals(3)) {\n\t\t\t\tintThree++;\n\t\t\t} else if (array.get(m).equals(4)) {\n\t\t\t\tintFour++;\n\t\t\t} else if (array.get(m).equals(5)) {\n\t\t\t\tintFive++;\n\t\t\t} else if (array.get(m).equals(6)) {\n\t\t\t\tintSix++;\n\t\t\t} else if (array.get(m).equals(7)) {\n\t\t\t\tintSeven++;\n\t\t\t} else if (array.get(m).equals(8)) {\n\t\t\t\tintEight++;\n\t\t\t} else if (array.get(m).equals(9)) {\n\t\t\t\tintNine++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// ??¨???????????????????????°???????????°????¨????\n\t\tintHairetsuResult[0] = intOne;\n\t\tintHairetsuResult[1] = intTwo;\n\t\tintHairetsuResult[2] = intThree;\n\t\tintHairetsuResult[3] = intFour;\n\t\tintHairetsuResult[4] = intFive;\n\t\tintHairetsuResult[5] = intSix;\n\t\tintHairetsuResult[6] = intSeven;\n\t\tintHairetsuResult[7] = intEight;\n\t\tintHairetsuResult[8] = intNine;\n\t\t\n\t\t// ??????\n\t\t// 4???????????¨??????????????°?????? -4 ??????????¬???¨2???????????°?????????????????? -1\n\t\tfor (int n = 0; n <= 6; n++) {\n\t\t\tif (intHairetsuResult[n] == 4) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 4;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t// 3????????¨??????????????°?????? -3\n\t\t\tif (intHairetsuResult[n] == 3) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 3;\n\t\t\t}\n\t\t\t// 2????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 2) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t\t// 1????????¨??????????????°?????¨???????¬???¨2???????????°?????? -1\n\t\t\tif (intHairetsuResult[n] == 1) {\n\t\t\t\tintIchiji = intHairetsuResult[n];\n\t\t\t\tintHairetsuResult[n] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 1];\n\t\t\t\tintHairetsuResult[n + 1] = intIchiji - 1;\n\t\t\t\tintIchiji = intHairetsuResult[n + 2];\n\t\t\t\tintHairetsuResult[n + 2] = intIchiji - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 8 ??¨ 9 ?????°??????????????\\??????\n\t\tif (intHairetsuResult[7] == 3) {\n\t\t\tintIchiji = intHairetsuResult[7];\n\t\t\tintHairetsuResult[7] = intIchiji - 3;\n\t\t}\n\t\tif (intHairetsuResult[8] == 3) {\n\t\t\tintIchiji = intHairetsuResult[8];\n\t\t\tintHairetsuResult[8] = intIchiji - 3;\n\t\t}\n\t\t\n\t\t// ??¨??¨?????°?????? 0 ?????? true ???????????§???????????? false ?????????\n\t\tfor (int i = 0; i < intHairetsuResult.length; i++) {\n\t\t\tintIchiji = intHairetsuResult[i];\n\t\t\tif (intIchiji != 0) {\n\t\t\t\tisResult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tisResult = true;\n\t\t}\n\t\t\n\t\treturn isResult;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for (int i=0;i<t;i++){\n            int win=1;\n            int color[][]=new int[3][9];\n            for (int j=0;j<3;j++) Arrays.fill(color[j],10);\n            int num[]=new int[9];\n            for (int j=0;j<9;j++) num[j]=sc.nextInt();\n            int color_num[]=new int[3];\n            for (int j=0;j<9;j++){\n                char c=sc.next().charAt(0);\n                if (c=='R') color[0][color_num[0]++]=num[j];\n                if (c=='G') color[1][color_num[1]++]=num[j];\n                if (c=='B') color[2][color_num[2]++]=num[j];\n            }\n            for (int j=0;j<3;j++) Arrays.sort(color[j]);\n            if (color_num[0]%3!=0||color_num[1]%3!=0||color_num[2]%3!=0) win=0;\n            for (int j=0;j<3&&win!=0;j++){\n                for (int k=0;k<color_num[j]/3;k++){\n                    if (color[j][k]==color[j][k+2]){\n                        color[j][k]=0;\n                        color[j][k+1]=0;\n                        color[j][k+2]=0;\n                    }\n                }\n            }\n \n            for (int j=0;j<3;j++){\n                for (int l=0;l<3;l++){\n                int bef=-2;\n                int changed=0;\n                    for (int k=0;k<color_num[j];k++){\n                        int now=color[j][k];\n                        if ((now!=0&&changed==0)||now==bef+1){\n                            color[j][k]=0;\n                            changed++;\n                            bef=now;\n                        }\n                        if (changed==3) break;\n                    }\n                }\n            }\n            for (int j=0;j<3;j++){\n                for (int k=0;k<color_num[j];k++){\n                    if (color[j][k]!=0) win=0;\n                }\n            }\n            System.out.println(win);\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "class a{\npublic void main(){\nint a = 0;\n\n}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n\n            List<int> resultlist = new List<int>();\n\n            int datasetnum = int.Parse(Console.ReadLine());\n\n            int result = 1;\n\n            for (int i = 0; i < datasetnum; i++)\n            {\n                //????????????????????????????????????\n                List<int> redlist = new List<int>();\n                List<int> bulelist = new List<int>();\n                List<int> greenlist = new List<int>();\n\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //??????????????????????????????????????????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n                    switch (cardcolor[j])\n                    {\n\n                        case \"R\":\n                            redlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"G\":\n                            bulelist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"B\":\n                            greenlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n                    }\n                }\n\n                //??????????????????????????????????????????\n                var red = new Red(redlist);\n                var bule = new Bule(bulelist);\n                var green = new Green(greenlist);\n\n\n                if (red.redresult() && bule.redresult() && green.redresult()) result = 1;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach (var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n        }\n\n    }\n\n\n\n    class Red\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Red(List<int> setlist)\n        {\n            for (int i = 0; i < setlist.Count; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n    class Green\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Green(List<int> setlist)\n        {\n            for (int i = 0; i < setlist.Count; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class Bule\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n        #region ?????????????????????\n        public Bule(List<int> setlist)\n        {\n            for (int i = 0; i < setlist.Count; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class CardControl\n    {\n        /// <summary>\n        /// ???????????¶????????´?????????????????????\n        /// </summary>\n        /// <param name=\"card\"></param>\n        /// <returns></returns>\n        public bool CheckWin(int[] card)\n        {\n            bool result = true;\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += card[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (card[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (card[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != card[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = card[i];\n                    else if (serialtemp > card[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < card[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n    }\n\n\n}"
  },
  {
    "language": "C#",
    "code": "/* Rummy (????????????????????????????????´???) */\n\nusing rummy_card;\nusing System;\n\nnamespace rummy_card\n{\n    public enum ColorOfCard\n    {\n        WHITE,RED,GREEN,BLUE\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = ReadNumber();\n\n            for(int i = 0; i < n; i++)\n            {\n                Hand rummyHand = new Hand();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n                \n            }\n\n        }\n        \n\n        /// <summary>\n        /// ?¨?????????????????????????????????´??°??????????????¨???????????????????????????\n        /// AOJ????????§??????????????????\n        /// </summary>\n        /// <returns>??????????????????????????°????????????????????£?????´??°???</returns>\n        private static int ReadNumber()\n        {\n            int n = 0;\n            if(!int.TryParse( Console.ReadLine() , out n))\n            {\n                /*???????????±??????????????\\????????? ?????????????????´???????????????0?????????*/\n                Console.WriteLine(\"error:ReadNumber\");\n            }\n            return n;\n        }\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public ColorOfCard _color = ColorOfCard.WHITE;\n\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int _number = 0 ;\n\n    /// <summary>\n    /// ????????????ID\n    /// ??°??????????????????????????????4??????????????§??????????????§1???4???????????????????????¨??????\n    /// </summary>\n    public int _id = 0;\n\n    \n    /// <summary>\n    /// ?????????????????????\n    /// Hand???????????????????????????????????°??????\n    /// ????????´???_id???Hand???????????????\n    /// </summary>\n    public Card(string color,string number)\n    {\n        _color = GetColorOfCard(color);\n        _number = int.Parse(number);\n    }\n\n    private ColorOfCard GetColorOfCard(string color)\n    {\n        switch (color)\n        {\n            case \"R\":\n                return ColorOfCard.RED;\n\n            case \"G\":\n                return ColorOfCard.GREEN;\n\n            case \"B\":\n                return ColorOfCard.BLUE;\n\n            default:\n                Console.WriteLine(\"error:GetColor\");\n                return ColorOfCard.WHITE;\n        }\n    }\n}\n\n/// <summary>\n/// ???????????????\n/// 9??????????????????????????¨???????????? ?????????????????§??????\n/// </summary>\npublic class Hand\n{\n    Card[] _cards = new Card[9];\n\n    /// <summary>\n    /// ?????????????????????\n    /// ?????°?????????AOJ????????¨?????????\n    /// </summary>\n    public Hand()\n    {\n        string[] number = Console.ReadLine().Split(' ');\n        string[] color = Console.ReadLine().Split(' ');\n\n        for(int i = 0; i < 9; i++)\n        {\n            _cards[i] = new Card(color[i],number[i]);\n            int ID = 1;                                 //???????????????_id\n\n            for(int j = 0; j < i; j++)\n            {\n                if( _cards[j]._color  == _cards[i]._color &&\n                    _cards[j]._number == _cards[i]._number)\n                {\n                    ID++;       //?????¨??°???????????´???????????????????????????????????????????????????ID?????????????????????????????????\n                }\n            }\n            _cards[i]._id = ID;\n        }\n        Sort();                 //??????????????±????????????????????£?????????????????????????????????\n    }\n\n    /// <summary>\n    /// ???????????¶????????¨??????????????????????????°??¨???\n    /// </summary>\n    internal void Display()\n    {\n        for(int i = 0; i < 9; i++)\n        {\n            string str = \"W\";\n\n            switch (_cards[i]._color)\n            {\n                case ColorOfCard.RED:\n                    str = \"R\";\n                    break;\n\n                case ColorOfCard.GREEN:\n                    str = \"G\";\n                    break;\n\n                case ColorOfCard.BLUE:\n                    str = \"B\";\n                    break;\n\n                default:\n                    /* str = \"W\" */\n                    break;\n            }\n\n            Console.Write( str + _cards[i]._number + \"({0}) \" ,_cards[i]._id);\n        }\n        Console.WriteLine();\n    }\n\n    internal bool IsWinner()\n    {\n        /*?????£????????????true ?????£?????????????????????false*/\n        bool[] flag = new bool[9];\n\n        for(int i = 0; i < 9; i++)\n        {\n\n\n            if (!flag[i])   //??°??????????????????????????????????????§??????????????????????????????????????????????????????????????¨???????????????\n            {\n                MeldGroup(flag, i);\n            }\n\n            if (!flag[i])   //???????????£????????§????????????????????????\n            {\n                MeldRun(flag, i);\n            }\n\n            if (!flag[i])\n            {\n\n                return false;       //??????????????±??????????????????????????????????????£??????????????§?????????                            \n            }\n        }\n        /*false???????????????for???????????????????????´?????¨??????flag???true*/\n\n        return true;\n    }\n\n    /// <summary>\n    /// ????????°?????¶????????¨??? ???????????°??¨\n    /// </summary>\n    /// <param name=\"flag\"></param>\n    private void ShowFlag(bool[] flag)\n    {\n        foreach(bool x in flag)\n        {\n            Console.Write( x ? \"1 \" : \"0 \");\n        }\n        Console.WriteLine();\n    }\n\n    /// <summary>\n    /// ????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldRun(bool[] flag, int i)\n    {\n        for (int j = i+1; j < 9; j++)    //???????????£?????????????????????????????§??°??????1??§????????????????????????????????????\n        {\n            if(_cards[i]._color == _cards[j]._color && \n               _cards[i]._number + 1 == _cards[j]._number &&\n                    !flag[j] )\n            {\n                for (int k = j + 1; k < 9; k++)     //1??§?????????????????????????????£?????????????§????2??§????????????????????????????????????\n                {\n                    if (_cards[i]._color == _cards[k]._color &&\n                       _cards[i]._number + 2 == _cards[k]._number &&\n                            !flag[k])\n                    {\n                        flag[i] = true;\n                        flag[j] = true;\n                        flag[k] = true;\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??°???????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldGroup(bool[] flag, int i)\n    {\n        if(_cards[i]._color == _cards[i+2]._color && _cards[i]._number == _cards[i+2]._number)\n        {\n            flag[i]   = true;\n            flag[i+1] = true;\n            flag[i+2] = true;\n        }\n    }\n\n    /// <summary>\n    /// ???????????´????????????????????????\n    /// </summary>\n    internal void Sort()\n    {\n        Array.Sort( _cards, (a, b) => Compare(a, b) );\n    }\n\n    /// <summary>\n    /// 2?????????????????? ??? > ??°??? > ID ?????????????????§????????????\n    /// </summary>\n    /// <param name=\"a\">??????????±?</param>\n    /// <param name=\"b\">??????????±?</param>\n    /// <returns></returns>\n    private int Compare(Card a, Card b)\n    {\n        int iCompare = a._color.CompareTo(b._color);    //??????????????§????????????\n        if (iCompare != 0)\n        {\n            return iCompare ;              \n        }\n        else                        //?????????????????°??????????????§????????????\n        {\n            if( a._number - b._number != 0)\n            {\n                return a._number - b._number;\n            }\n            else                    //??°??????????????????id???????????§????????????\n            {\n                return a._id - b._id;\n            }\n        }\n        \n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());  //???????????????????????°\n\n            for(int i = 0; i < n; i++)\n            {\n                Rummy rummyHand = new Rummy();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Rummy\n    {\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// [0]???????????????????¨??????°\n        /// </summary>\n        int[] _red = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        int[] _green = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        int[] _blue = new int[10];\n\n        /// <summary>\n        /// ?????????????????????\n        /// 2?????????????????????????????????????????????????????????????????????????????£??????????????°??????\n        /// </summary>\n        public Rummy()\n        {\n            string[] number = Console.ReadLine().Split(' ');\n            string[] color = Console.ReadLine().Split(' ');\n\n            for(int i = 0; i < 9; i++)\n            {\n                CountCard(number[i],color[i]);\n            }\n        }\n\n        /// <summary>\n        /// ?????????????????\\???????????°?????????????????¢??????\n        /// </summary>\n        /// <param name=\"num\">??????????????????????????°???</param>\n        /// <param name=\"color\">???????????????</param>\n        private void CountCard(string num, string color)\n        {\n            switch (color)\n            {\n                case \"R\":\n                    _red[int.Parse(num)]++;\n                    _red[0]++;\n                    break;\n\n                case \"G\":\n                    _green[int.Parse(num)]++;\n                    _green[0]++;\n                    break;\n\n                case \"B\":\n                    _blue[int.Parse(num)]++;\n                    _blue[0]++;\n                    break;\n\n                default:\n                    Console.WriteLine(\"error.\");\n                    break;\n            }\n        }\n\n        /// <summary>\n        /// ???????????¶????????¨????????????\n        /// ??????????????°??¨???\n        /// </summary>\n        internal void Display()\n        {\n            Console.WriteLine(\"??? ?¨? 1 2 3 4 5 6 7 8 9\");\n\n            Console.Write(\"??? \");\n            DisplaySuit(_red);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_green);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_blue);\n\n        }\n\n        /// <summary>\n        /// ????????¨??????????????¶????????¨????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        private void DisplaySuit(int[] cards)\n        {\n            for(int i = 0; i <= 9; i++)\n            {\n                Console.Write(\" \" + cards[i]);\n            }\n            Console.WriteLine();\n        }\n\n        /// <summary>\n        /// ????????????????????¶????????????????????????\n        /// </summary>\n        /// <returns>3?????¨??????????????????????????°true</returns>\n        internal bool IsWinner()\n        {\n            if (JudgeColor(_red) && JudgeColor(_green) && JudgeColor(_blue))\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n\n        /// <summary>\n        /// ????????????????????????????????¶????????????????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        /// <returns>????????????????????°true</returns>\n        private bool JudgeColor(int[] cards)\n        {\n            for(int i = 1; i <= 9; i++)\n            {\n                /*??????????????????????????¨???????????????*/\n                if(cards[i] >= 3)   \n                {\n                    cards[i] -= 3;\n                    cards[0] -= 3;\n\n                }//??????????????????4?????\\???????????§??????????????????2?????\\????????????????????¨?????????\n\n                /*??£?????§?????????????????????i???8??\\?????§????????????(??°??????10??\\???????????????????????¨?????????)*/\n                if (i < 8)\n                {\n                    /*[i][i+1][i+2]???[i]????????°???????????????[i]???0??????nop??¨???????????¨*/\n\n                    cards[0] -= 3 * cards[i];\n                    cards[i + 2] -= cards[i];\n                    cards[i + 1] -= cards[i];\n                    cards[i] = 0;\n                    /*?????°????????????????????£???????????°????????¶?????????????????????????????£???*/\n\n                    if (cards[i + 1] < 0 || cards[i + 2] < 0)\n                    {\n                        return false;\n                    }\n\n                    \n                }\n\n                if (cards[0] == 0)  //??????????????§????????¨???????????????????????°\n                {\n                    return true;\n                }\n                else\n                {\n                    /* nop ?????????????¶???? */\n                }\n            }//for????????????????????§\n\n            /*???????????????????????????????????£???????????°?????¶??????????????????*/\n            return false;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            //??????????????°????¨????\n            var read_text = Console.ReadLine();\n            int round_num = int.Parse(read_text);\n\n            //??????????????°???????????????\n            for(var i = 0;i<round_num;i++)\n            {\n                var read_num = Console.ReadLine();\n                var read_color = Console.ReadLine();\n\n                var HandCard_obj = new HandCard(read_num, read_color);\n\n                Console.WriteLine(HandCard_obj.judge_math() ? \"1\":\"0\");\n\n            }\n\n        }\n    }\n\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    class HandCard\n    {\n\n        /// <summary>\n        /// ???????????°?????¨????????????\n        /// </summary>\n        int[] hand_card_num = new int[9];\n        string[] hand_card_color = new string[9];\n\n        /// <summary>\n        /// ????????????????¨????\n        /// </summary>\n        //public enum Color\n        //{\n        //    red,\n        //    blue,\n        //    gleen\n\n        //}\n\n        /// <summary>\n        /// ?????????????????????\n        /// ??????????????????\n        /// </summary>\n        /// <param name=\"card_num\">?????????????????????????????????????????????</param>\n        /// <param name=\"card_color\">???????????????????????????????????????</param>\n        public HandCard(string card_num,string card_color)\n        {\n            var sprit_num=card_num.Split(' ');\n            var sprit_color=card_color.Split(' ');\n\n            for(int i=0;i<sprit_num.Length;i++)\n                hand_card_num[i] = int.Parse(sprit_num[i]);\n\n            for (int i = 0; i < sprit_color.Length; i++)\n                hand_card_color[i] = sprit_color[i] ;\n        }\n\n        /// <summary>\n        /// ????????????????????¶?????????????????????????????§????????????\n        /// </summary>\n        /// <returns></returns>\n        public bool judge_math()\n        {\n            int win_flg = 0;\n            //????????????\n            var color = new string[]{\"R\", \"G\", \"B\"};\n            \n            //??????????????¨?????????\n            string judge_string=\"\";\n\n            foreach (string s in color)\n            {\n                if(color_filtering(s).Count%3 != 0)\n                    return false;\n\n                var judge_list = color_filtering(s);\n\n                foreach (int c in judge_list)\n                    judge_string += c.ToString();\n\n                for (var i = 1; i <= 9; i++)\n                {\n\n                    //???????????????\n                    if (0 <= judge_string.IndexOf(i.ToString() + i.ToString() + i.ToString()))\n                    {\n                        win_flg++;\n                        for (var j = 0; j < 3; j++)\n                            judge_list.Remove(i);\n\n                        if (judge_list.Count() < 3)\n                            break;\n                        i--;\n\n                        foreach (int c in judge_list)\n                            judge_string += c.ToString();\n\n                    }\n                }\n\n                for (var i = 1; i < 8;i++ )\n                {\n                    if(judge_list.Contains(i)&&judge_list.Contains(i+1)&&judge_list.Contains(i+2))\n                    {\n                        win_flg++;\n                        for (var j = 0; j < 3; j++)\n                            judge_list.Remove(i+j);\n\n                        if (judge_list.Count() < 3)\n                            break;\n                        i--;\n                    }\n                }\n                    \n                \n            }\n            return win_flg >= 3 ? true:false;\n        }\n\n        /// <summary>\n        /// ????????????????????????????????°??????????????§??????\n        /// </summary>\n        /// <param name=\"color\">??????????????? R,G,B?????????</param>\n        /// <returns>?????????????????????List</returns>\n        private List<int> color_filtering(string  color)\n        {\n            //?????????????????????????????????????????????\n            List<int> math_num = new List<int>();\n\n            //???????????????????????????????????§?????´???????????????????????????????????????????????????????????\\??????\n            for(var i=0;i<hand_card_color.Length;i++)\n                if(hand_card_color[i]==color)\n                    math_num.Add(hand_card_num[i]);\n\n            //???????????????????????????\n            math_num.Sort();\n            return math_num;\n        }\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        public enum ColorType\n        {\n            R = 0,\n            G = 1,\n            B = 2\n        }\n\n        static void Main(string[] args)\n        {\n            int COLOR_COUNT = 3;\n            int NUMBER_COUNT = 9;\n\n            string inputT = Console.ReadLine();\n            int dataSetCount = int.Parse(inputT);\n            for (int i = 0; i < dataSetCount; i++)\n            {\n                int[,] cn = new int[COLOR_COUNT, NUMBER_COUNT];\n\n                int win = 0;\n                string[] inputnumber = Console.ReadLine().Split(' ');\n                string[] inputcolor = Console.ReadLine().Split(' ');\n                for (int j = 0; j < NUMBER_COUNT; j++) //RGB*(1???9)?????????????????´?????????1??\\????¶????\n                {\n                    string color = inputcolor[j];\n                    int number = int.Parse(inputnumber[j]);\n                    for (int L = 1; L < 10; L++)\n                        cn[(int)(ColorType)Enum.Parse(typeof(ColorType), color), number - 1] += 1;\n                }\n\n                for (int k = 0; k < COLOR_COUNT; k++) //win?????¶\n                {\n                    for (int h = 0; h < NUMBER_COUNT; h++)\n                    {\n                        if (cn[k, h] >= 3) //????????°????????¨???\n                        {\n                            win += 1; //?????????????????????\n                            cn[k, h] = cn[k, h] - 3; //???????????????\n\n                            h--;\n                            //Console.WriteLine(\"a\");\n                        }\n\n                        // ??£?¶?????????°???????????????????????????????????????????????????????????£??????????????????\n                        // ??????????????????2??\\?????§??????????????????\n                        if (h > 1)\n                        {\n                            if ((cn[k, h] >= 1) && (cn[k, h - 1] >= 1) && (cn[k, h - 2] >= 1)) //??£????????¨???\n                            {\n                                if ((cn[k, h] < 2) || (cn[k, h - 1] < 2) || (cn[k, h - 2] < 2))\n                                {\n                                    win += 1; // ?????????????????????\n                                    cn[k, h] = cn[k, h] - 1; // ????????????\n                                    cn[k, h - 1] = cn[k, h - 1] - 1;\n                                    cn[k, h - 2] = cn[k, h - 2] - 1;\n\n                                    h--;\n                                }\n                                //Console.WriteLine(\"b\");\n                            }\n                        }\n                    }\n                }\n                if (win >= 3) //????????¨???\n                    Console.WriteLine(1);\n                else if (win < 3)\n                    Console.WriteLine(0);\n            }\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "Class a{\nstatic public void main(){\n\n}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());  //???????????????????????°\n\n            for(int i = 0; i < n; i++)\n            {\n                Rummy rummyHand = new Rummy();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Rummy\n    {\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// [0]???????????????????¨??????°\n        /// </summary>\n        int[] _red = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        int[] _green = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        int[] _blue = new int[10];\n\n        /// <summary>\n        /// ?????????????????????\n        /// 2?????????????????????????????????????????????????????????????????????????????£??????????????°??????\n        /// </summary>\n        public Rummy()\n        {\n            string[] number = Console.ReadLine().Split(' ');\n            string[] color = Console.ReadLine().Split(' ');\n\n            for(int i = 0; i < 9; i++)\n            {\n                CountCard(number[i],color[i]);\n            }\n        }\n\n        /// <summary>\n        /// ?????????????????\\???????????°?????????????????¢??????\n        /// </summary>\n        /// <param name=\"num\">??????????????????????????°???</param>\n        /// <param name=\"color\">???????????????</param>\n        private void CountCard(string num, string color)\n        {\n            switch (color)\n            {\n                case \"R\":\n                    _red[int.Parse(num)]++;\n                    _red[0]++;\n                    break;\n\n                case \"G\":\n                    _green[int.Parse(num)]++;\n                    _green[0]++;\n                    break;\n\n                case \"B\":\n                    _blue[int.Parse(num)]++;\n                    _blue[0]++;\n                    break;\n\n                default:\n                    Console.WriteLine(\"error.\");\n                    break;\n            }\n        }\n\n        /// <summary>\n        /// ???????????¶????????¨????????????\n        /// ??????????????°??¨???\n        /// </summary>\n        internal void Display()\n        {\n            Console.WriteLine(\"??? ?¨? 1 2 3 4 5 6 7 8 9\");\n\n            Console.Write(\"??? \");\n            DisplaySuit(_red);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_green);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_blue);\n\n        }\n\n        /// <summary>\n        /// ????????¨??????????????¶????????¨????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        private void DisplaySuit(int[] cards)\n        {\n            for(int i = 0; i <= 9; i++)\n            {\n                Console.Write(\" \" + cards[i]);\n            }\n            Console.WriteLine();\n        }\n\n        /// <summary>\n        /// ????????????????????¶????????????????????????\n        /// </summary>\n        /// <returns>3?????¨??????????????????????????°true</returns>\n        internal bool IsWinner()\n        {\n            if (JudgeColor(_red) && JudgeColor(_green) && JudgeColor(_blue))\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n\n        /// <summary>\n        /// ????????????????????????????????¶????????????????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        /// <returns>????????????????????°true</returns>\n        private bool JudgeColor(int[] cards)\n        {\n            for(int i = 1; i <= 9; i++)\n            {\n                /*??????????????????????????¨???????????????*/\n                if(cards[i] >= 3)   \n                {\n                    cards[i] -= 3;\n                    cards[0] -= 3;\n\n                }//??????????????????4?????\\???????????§??????????????????2?????\\????????????????????¨?????????\n\n                /*??£?????§?????????????????????i???8??\\?????§????????????(??°??????10??\\???????????????????????¨?????????)*/\n                if (i < 8)\n                {\n                    /*[i][i+1][i+2]???[i]????????°???????????????[i]???0??????nop??¨???????????¨*/\n\n                    cards[0] -= 3 * cards[i];\n                    cards[i + 2] -= cards[i];\n                    cards[i + 1] -= cards[i];\n                    cards[i] = 0;\n\n                    /*?????°????????????????????£???????????°????????¶?????????????????????????????£???*/\n\n                    if (cards[i+1] < 0 || cards[i+2] < 0)\n                    {\n                        return false;\n                    }\n                    else if(cards[0] == 0)  //????¨??????´?????\\?????§???????????¨???????????????????????°\n                    {\n                        return true;\n                    }\n                    else\n                    {\n                        /* nop ?????????????¶???? */\n                    }\n                    \n                \n                }\n            }//for????????????????????§\n\n            /*???????????????????????????????????£???????????°?????¶??????????????????*/\n            return false;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "/* Rummy (???????????????????????§??????????????´???) */\n\nusing System;\n\nnamespace rummy_card\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = ReadNumber();\n\n            for (int i = 0; i < n; i++)\n            {\n                Hand rummyHand = new Hand();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n\n            }\n\n        }\n\n\n        /// <summary>\n        /// ?¨?????????????????????????????????´??°??????????????¨???????????????????????????\n        /// AOJ????????§??????????????????\n        /// </summary>\n        /// <returns>??????????????????????????°????????????????????£?????´??°???</returns>\n        private static int ReadNumber()\n        {\n            int n = 0;\n            if (!int.TryParse(Console.ReadLine(), out n))\n            {\n                /*???????????±??????????????\\????????? ?????????????????´???????????????0?????????*/\n                Console.WriteLine(\"error:ReadNumber\");\n            }\n            return n;\n        }\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public string _color = null;\n\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int _number = 0;\n\n    /// <summary>\n    /// ????????????ID\n    /// ??°??????????????????????????????4??????????????§??????????????§1???4???????????????????????¨??????\n    /// </summary>\n    public int _id = 0;\n\n\n    /// <summary>\n    /// ?????????????????????\n    /// Hand???????????????????????????????????°??????\n    /// ????????´???_id???Hand???????????????\n    /// </summary>\n    public Card(string color, string number)\n    {\n        _color = color;\n        _number = int.Parse(number);\n    }\n\n\n}\n\n/// <summary>\n/// ???????????????\n/// 9??????????????????????????¨???????????? ?????????????????§??????\n/// </summary>\npublic class Hand\n{\n    Card[] _cards = new Card[9];\n\n    /// <summary>\n    /// ?????????????????????\n    /// ?????°?????????AOJ????????¨?????????\n    /// </summary>\n    public Hand()\n    {\n        string[] number = Console.ReadLine().Split(' ');\n        string[] color = Console.ReadLine().Split(' ');\n\n        for (int i = 0; i < 9; i++)\n        {\n            _cards[i] = new Card(color[i], number[i]);\n            int ID = 1;                                 //???????????????_id\n\n            for (int j = 0; j < i; j++)\n            {\n                if (_cards[j]._color == _cards[i]._color &&\n                    _cards[j]._number == _cards[i]._number)\n                {\n                    ID++;       //?????¨??°???????????´???????????????????????????????????????????????????ID?????????????????????????????????\n                }\n            }\n            _cards[i]._id = ID;\n        }\n        Sort();                 //??????????????±????????????????????£?????????????????????????????????\n    }\n\n    /// <summary>\n    /// ???????????¶????????¨??????????????????????????°??¨???\n    /// </summary>\n    internal void Display()\n    {\n        for (int i = 0; i < 9; i++)\n        {\n            Console.Write(_cards[i]._color + _cards[i]._number + \"({0}) \", _cards[i]._id);\n        }\n        Console.WriteLine();\n    }\n\n    internal bool IsWinner()\n    {\n        /*?????£????????????true ?????£?????????????????????false*/\n        bool[] flag = new bool[9];\n\n        for (int i = 0; i < 9; i++)\n        {\n\n\n            if (!flag[i])   //??°??????????????????????????????????????§??????????????????????????????????????????????????????????????¨???????????????\n            {\n                MeldGroup(flag, i);\n            }\n\n            if (!flag[i])   //???????????£????????§????????????????????????\n            {\n                MeldRun(flag, i);\n            }\n\n            if (!flag[i])\n            {\n\n                return false;       //??????????????±??????????????????????????????????????£??????????????§?????????                            \n            }\n        }\n        /*false???????????????for???????????????????????´?????¨??????flag???true*/\n\n        return true;\n    }\n\n    /// <summary>\n    /// ????????°?????¶????????¨??? ???????????°??¨\n    /// </summary>\n    /// <param name=\"flag\"></param>\n    private void ShowFlag(bool[] flag)\n    {\n        foreach (bool x in flag)\n        {\n            Console.Write(x ? \"1 \" : \"0 \");\n        }\n        Console.WriteLine();\n    }\n\n    /// <summary>\n    /// ????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldRun(bool[] flag, int i)\n    {\n        for (int j = i + 1; j < 9; j++)    //???????????£?????????????????????????????§??°??????1??§????????????????????????????????????\n        {\n            if (_cards[i]._color == _cards[j]._color &&\n               _cards[i]._number + 1 == _cards[j]._number &&\n                    !flag[j])\n            {\n                for (int k = j + 1; k < 9; k++)     //1??§?????????????????????????????£?????????????§????2??§????????????????????????????????????\n                {\n                    if (_cards[i]._color == _cards[k]._color &&\n                       _cards[i]._number + 2 == _cards[k]._number &&\n                            !flag[k])\n                    {\n                        flag[i] = true;\n                        flag[j] = true;\n                        flag[k] = true;\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??°???????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldGroup(bool[] flag, int i)\n    {\n        if (_cards[i]._id >= 3)\n        {\n            flag[i] = true;\n            flag[i + 1] = true;\n            flag[i + 2] = true;\n        }\n    }\n\n    /// <summary>\n    /// ???????????´????????????????????????\n    /// </summary>\n    internal void Sort()\n    {\n        Array.Sort(_cards, (a, b) => Compare(a, b));\n    }\n\n    /// <summary>\n    /// 2?????????????????? ??? > ??°??? > ID ?????????????????§????????????\n    /// </summary>\n    /// <param name=\"a\">??????????±?</param>\n    /// <param name=\"b\">??????????±?</param>\n    /// <returns></returns>\n    private int Compare(Card a, Card b)\n    {\n        int iCompare = b._color.CompareTo(a._color);    //R???G???B????????§?????????????????????????????????\n        if (iCompare != 0)\n        {\n            return iCompare;\n        }\n        else                        //?????????????????°??????????????§????????????\n        {\n            if (a._number - b._number != 0)\n            {\n                return a._number - b._number;\n            }\n            else                    //??°??????????????????id???????????§????????????\n            {\n                return b._id - a._id;\n            }\n        }\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication2\n{\n    //RUMMY\n\n    class Program\n    {\n        /// <summary>\n        /// ????????°????????¨????????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int loopCount = int.Parse(Console.ReadLine());\n            \n            for(int i = 0; i < loopCount; i++)\n            {\n                int[] cardNums = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();\n\n                string[] cardColor = Console.ReadLine().Split(' ');\n\n                List<Card> cards = new List<Card>();\n\n                for (int cardCount = 0; cardCount < cardNums.Length; cardCount++)\n                    cards.Add(new Card(cardNums[cardCount], cardColor[cardCount]));\n\n                //??????????????????????°?????????????????????????\n                SortCard(cards);\n\n                //?????£???????????????????????????\n                CheckCombinationWin(cards);\n\n                //?????????????????????????????¨??????????¢????\n                Console.WriteLine(CheckUsedCard(cards) ? \"1\" : \"0\");\n            }\n        }\n        /// <summary>\n        /// ??????????????°???????°??????????????????????\n        /// </summary>\n        private static void SortCard(List<Card> cards)\n        {\n            for (int i = 0; i < cards.Count - 1; i++)\n            {\n                // ???????????????????????????????????????\n                for (int j = cards.Count - 1; j > i; j--)\n                {\n                    // ??????????????§????????¨?????????????????\\???????????????\n                    if (cards[j].number < cards[j - 1].number)\n                    {\n                        Card card = cards[j];\n                        cards[j] = cards[j - 1];\n                        cards[j - 1] = card;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// ??¨???????????????????????¨?????????????¢????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        /// <returns></returns>\n        private static bool CheckUsedCard(List<Card> cards)\n        {\n            bool isWin = true;\n\n            foreach (Card card in cards)\n                if (!card.isUsed)\n                    isWin = false;\n\n            return isWin;\n        }\n\n        /// <summary>\n        /// ????????£?????????????????????????????????????????£????????????????????¨???????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        private static void CheckCombinationWin(List<Card> cards)\n        {\n            for(int x = 0; x < 2; x++)\n            {\n                //??£???\n                for (int i = 0; i < cards.Count - 2; i++)\n                {\n                    for (int j = i + 1; j < cards.Count - 1; j++)\n                    {\n                        for (int k = j + 1; k < cards.Count; k++)\n                        {\n                            //????????????????????????????????¨???????¢????\n                            if (IsUsedCard(cards[i], cards[j], cards[k]))\n                            {\n                                //??????????????????????????????????????????????????£????????????\n                                if (IsSameColor(cards[i], cards[j], cards[k]))\n                                {\n                                    if (x == 0)\n                                    {\n                                        //??£????????§??????\n                                        //????±?????????????????????????????????£???????????£????????????\n                                        if (cards[i].number == cards[j].number - 1 && cards[i].number == cards[k].number - 2)\n                                        {\n                                            cards[i].isUsed = true;\n                                            cards[j].isUsed = true;\n                                            cards[k].isUsed = true;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        //?????????????????§??????\n                                        //????±????3??????????????????????????????????????£????????????\n                                        if (cards[i].number == cards[j].number && cards[i].number == cards[k].number)\n                                        {\n                                            cards[i].isUsed = true;\n                                            cards[j].isUsed = true;\n                                            cards[k].isUsed = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        \n\n        /// <summary>\n        /// ????????????????????????????????¨???????¢????\n        /// </summary>\n        /// <param name=\"card1\"></param>\n        /// <param name=\"card2\"></param>\n        /// <param name=\"card3\"></param>\n        /// <returns></returns>\n        private static bool IsUsedCard(Card card1, Card card2, Card card3)\n        {\n            bool isUsed = false;\n\n            if (!card1.isUsed && !card2.isUsed && !card3.isUsed)\n                isUsed = true;\n\n            return isUsed;\n        }\n\n        /// <summary>\n        /// ???????????????????????¨????????????????¢????\n        /// </summary>\n        /// <param name=\"card1\"></param>\n        /// <param name=\"card2\"></param>\n        /// <param name=\"card3\"></param>\n        /// <returns></returns>\n        private static bool IsSameColor(Card card1, Card card2, Card card3)\n        {\n            bool isSameColor = false;\n\n            if (card1.color == card2.color && card2.color == card3.color)\n                isSameColor = true;\n\n            return isSameColor;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ??????????????°???\n        /// </summary>\n        public int number { get; set; }\n        /// <summary>\n        /// ???????????????\n        /// </summary>\n        public string color { get; set; }\n        /// <summary>\n        /// ?????¨??????????????°\n        /// </summary>\n        public bool isUsed { get; set; }\n\n        /// <summary>\n        /// ?????????????????????\n        /// </summary>\n        /// <param name=\"num\">???????????????</param>\n        /// <param name=\"color\">????????????</param>\n        public Card(int num, string color)\n        {\n            this.number = num;\n            this.color = color;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Lummy\n    {\n        public static void Main(string[] args)\n        {\n            string strLine = Console.ReadLine();\n            int intDateLength = int.Parse(strLine);\n            int[ , ] intNum = new int[intDateLength, 9];\n            string[ , ] strMark = new string[intDateLength, 9];\n            for (int first = 0; first < intDateLength; first++)\n            {\n                strLine = Console.ReadLine();\n                string[] strNumArr = strLine.Split(' ');\n                for (int second = 0; second < strNumArr.Length; second++)\n                {\n                    intNum[first, second] = int.Parse(strNumArr[second]);\n                }\n                strLine = Console.ReadLine();\n                string[] strTempMark = strLine.Split(' ');\n                for (int second = 0; second < strTempMark.Length; second++)\n                {\n                    strMark[first, second] = strTempMark[second];\n                }\n\n            }\n\n            //TestPrint(intDateLength, intNum, strMark);\n\n            List<int> listCount = new List<int>();\n\n            for (int first = 0; first < intDateLength; first++)\n            {\n\n                //ソート\n                for (int second = 0; second < 9; second++)\n                {\n                    for (int third = 8; second < third; third--)\n                    {\n                        if (intNum[first, third] < intNum[first, second])\n                        {\n                            int intTemp = intNum[first, third];\n                            string strTemp = strMark[first, third];\n                            intNum[first, third] = intNum[first, second];\n                            strMark[first, third] = strMark[first, second];\n                            intNum[first, second] = intTemp;\n                            strMark[first, second] = strTemp;\n                        }\n                    }\n                }\n\n                //TestPrint(intDateLength, intNum, strMark);\n\n                int intCount = 0;\n                List<int> listNGIndex = new List<int>();\n\n                //判定\n                for (int second = 0; second < 7; second++)\n                {\n                    bool bl2Roop = NGJuge(second, listNGIndex);\n                    if (bl2Roop)\n                    {\n                        for (int third = second + 1; third < 8; third++)\n                        {\n                            bool bl3Roop = NGNextJuge(second, third, listNGIndex);\n                            if (bl3Roop)\n                            {\n                                for (int forth = third + 1; forth < 9; forth++)\n                                {\n                                    //TestNG(listNGIndex);\n                                    bool bl4Roop = NGAfterNextJuge(second, third, forth, listNGIndex);\n                                    if (bl4Roop)\n                                    {\n                                        if (strMark[first, second].Equals(strMark[first, third]) &&\n                                            strMark[first, second].Equals(strMark[first, forth]))\n                                        {\n                                            if (intNum[first, second] == intNum[first, third] &&\n                                            intNum[first, second] == intNum[first, forth])\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                                //TestNG(listNGIndex);\n                                            }\n                                            else if (intNum[first, second] == intNum[first, third] - 1 &&\n                                                intNum[first, second] == intNum[first, forth] - 2)\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                                //TestNG(listNGIndex);\n                                            }\n                                        }\n                                        \n\n                                    }\n                                }\n                            }\n                            \n                        }\n                    }\n                    \n                }\n\n                if (intCount == 3)\n                {\n                    listCount.Add(1);\n                }\n                else\n                {\n                    listCount.Add(0);\n                }\n\n\n            }\n            foreach (int ans in listCount)\n            {\n                Console.WriteLine(ans);\n            }\n            Console.ReadKey();\n        }\n\n        private static bool NGAfterNextJuge(int second, int third, int forth, List<int> listNGIndex)\n        {\n            bool blTrue = true;\n            foreach (int intNG in listNGIndex)\n            {\n                if (intNG == second || intNG == third || intNG == forth)\n                {\n                    blTrue = false;\n                }\n                \n            }\n            return blTrue;\n        }\n\n        private static bool NGNextJuge(int second, int third, List<int> listNGIndex)\n        {\n            bool blTrue = true;\n            foreach (int intNG in listNGIndex)\n            {\n                if (intNG == second || intNG == third)\n                {\n                    blTrue = false;\n                }\n            }\n            return blTrue;\n        }\n\n        public static bool NGJuge(int intIndex, List<int> listNGNum)\n        {\n            bool blTrue = true;\n\n            foreach (int intNG in listNGNum)\n            {\n                if (intIndex == intNG)\n                {\n                    blTrue = false;\n                    break;\n                }\n            }\n            return blTrue;\n        }\n\n        public static void TestPrint(int intDateLength, int[ , ] intNum, string[ , ] strMark)\n        {\n            for (int first = 0; first < intDateLength; first++)\n            {\n                for (int second = 0; second < 9; second++)\n                {\n                    Console.Write(intNum[first, second]);\n                    Console.Write(\" \");\n                }\n                Console.WriteLine();\n                for (int second = 0; second < 9; second++)\n                {\n                    Console.Write(strMark[first, second]);\n                    Console.Write(\" \");\n                }\n                Console.WriteLine();\n            }\n        }\n\n        public static void TestNG(List<int> list)\n        {\n            foreach (int print in list)\n            {\n                Console.Write(print);\n            }\n            Console.WriteLine();\n        }\n\n    }\n\n    \n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string inputT = Console.ReadLine();\n            int T = int.Parse(inputT);\n            int[,] cn = new int[3, 9];\n\n            for (int i = 0; i < T; i++)\n            {\n                int win = 0;\n                string[] inputnumber = Console.ReadLine().Split(' ');\n                string[] inputcolor = Console.ReadLine().Split(' ');\n\n                for (int j = 0; j < 9; j++) //RGB*(1???9)?????????????????´?????????1??\\????¶????\n                {\n                    string color = inputcolor[j];\n                    int number = int.Parse(inputnumber[j]);\n                    for (int L = 1; L < 10; L++)\n                    {\n                        if (color == \"R\" && number == L)\n                        {\n                            cn[0, number - 1] += 1;\n                        }\n                        else if (color == \"G\" && number == L)\n                        {\n                            cn[1, number - 1] += 1;\n                        }\n                        else if (color == \"B\" && number == L)\n                        {\n                            cn[2, number - 1] += 1;\n                        }\n                    }\n                }\n\n                for (int k = 0; k < 3; k++) //win?????¶\n                {\n                    for (int h = 0; h < 9; h++)\n                    {\n                        if (cn[k, h] >= 3) //????????°????????¨???\n                        {\n                            if (cn[k, h] < 6)\n                            {\n                                win += 1; //?????????????????????\n                                cn[k, h] = cn[k, h] - 3; //???????????????\n                            }\n                            else if (cn[k, h] < 9)\n                            {\n                                win += 2; //?????????????????????\n                                cn[k, h] = cn[k, h] - 6; //???????????????\n                            }\n                            else if (cn[k, h] == 9)\n                            {\n                                win += 2; //?????????????????????\n                                cn[k, h] = cn[k, h] - 9; //???????????????\n                            }\n                            //Console.WriteLine(\"a\");\n                        }\n                        if (h > 1)\n                        { \n                            if ((cn[k, h] >= 1) && (cn[k, h - 1] >= 1) && (cn[k, h - 2] >= 1)) //??£????????¨???\n                            {\n                                if ((cn[k, h] < 2) || (cn[k, h - 1] < 2) || (cn[k, h - 2] < 2))\n                                {\n                                    win += 1; // ?????????????????????\n                                    cn[k, h] = cn[k, h] - 1; // ????????????\n                                    cn[k, h - 1] = cn[k, h - 1] - 1;\n                                    cn[k, h - 2] = cn[k, h - 2] - 1;\n                                }\n                                else if ((cn[k, h] < 3) || (cn[k, h - 1] < 3) || (cn[k, h - 2] < 3))\n                                {\n                                    win += 2; // ?????????????????????\n                                    cn[k, h] = cn[k, h] - 2; // ????????????\n                                    cn[k, h - 1] = cn[k, h - 1] - 2;\n                                    cn[k, h - 2] = cn[k, h - 2] - 2;\n                                }\n                                else if ((cn[k, h] == 3) && (cn[k, h - 1] == 3) && (cn[k, h - 2] == 3))\n                                {\n                                    win += 1; // ?????????????????????\n                                    cn[k, h] = cn[k, h] - 1; // ????????????\n                                    cn[k, h - 1] = cn[k, h - 1] - 1;\n                                    cn[k, h - 2] = cn[k, h - 2] - 1;\n                                }\n\n                                //Console.WriteLine(\"b\");\n                             }\n                        }\n                    }\n                }\n\n                if (win >= 3) //????????¨???\n                    Console.WriteLine(1);\n                else if (win < 3)\n                    Console.WriteLine(0);\n                for (int x = 0; x < 3; x++) // cn?????????\n                {\n                    for (int y = 0; y < 9; y++)\n                    {\n                        cn[x, y] = 0;\n                    }\n                }\n            }\n\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "/* Rummy (????????????????????????????????´???) */\n\nusing System;\n\nnamespace rummy_card\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = ReadNumber();\n\n            for(int i = 0; i < n; i++)\n            {\n                Hand rummyHand = new Hand();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n                \n            }\n\n        }\n        \n\n        /// <summary>\n        /// ?¨?????????????????????????????????´??°??????????????¨???????????????????????????\n        /// AOJ????????§??????????????????\n        /// </summary>\n        /// <returns>??????????????????????????°????????????????????£?????´??°???</returns>\n        private static int ReadNumber()\n        {\n            int n = 0;\n            if(!int.TryParse( Console.ReadLine() , out n))\n            {\n                /*???????????±??????????????\\????????? ????????¨??????????????????0??¨??????*/\n                Console.WriteLine(\"error:ReadNumber\");\n            }\n            return n;\n        }\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public string _color = null ;\n\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int _number = 0 ;\n\n    /// <summary>\n    /// ????????????ID\n    /// ??°??????????????????????????????4??????????????§??????????????§1???4???????????????????????¨??????\n    /// </summary>\n    public int _id = 0;\n\n    \n    /// <summary>\n    /// ?????????????????????\n    /// Hand???????????????????????????????????°??????\n    /// ????????´???_id???Hand???????????????\n    /// </summary>\n    public Card(string color,string number)\n    {\n        _color = color;\n        _number = int.Parse(number);\n    }\n\n\n}\n\n/// <summary>\n/// ???????????????\n/// 9????????§???????????????????????¨????????????\n/// </summary>\npublic class Hand\n{\n    Card[] _cards = new Card[9];\n\n    /// <summary>\n    /// ?????????????????????\n    /// ?????°?????????AOJ????????¨?????????\n    /// </summary>\n    public Hand()\n    {\n        string[] number = Console.ReadLine().Split(' ');\n        string[] color = Console.ReadLine().Split(' ');\n\n        for(int i = 0; i < 9; i++)\n        {\n            _cards[i] = new Card(color[i],number[i]);\n            int ID = 1;                                 //???????????????_id\n\n            for(int j = 0; j < i; j++)\n            {\n                if( _cards[j]._color  == _cards[i]._color &&\n                    _cards[j]._number == _cards[i]._number)\n                {\n                    ID++;       //?????¨??°???????????´???????????????????????????????????????????????????ID?????????????????????????????????\n                }\n            }\n            _cards[i]._id = ID;\n        }\n        Sort();                 //??????????????±????????????????????£?????????????????????????????????\n    }\n\n    /// <summary>\n    /// ???????????¶????????¨??????????????????????????°??¨???\n    /// </summary>\n    internal void Display()\n    {\n        for(int i = 0; i < 9; i++)\n        {\n            Console.Write(_cards[i]._color + _cards[i]._number + \"({0}) \" ,_cards[i]._id);\n        }\n        Console.WriteLine();\n    }\n\n    internal bool IsWinner()\n    {\n        /*?????£????????????true ?????£?????????????????????false*/\n        bool[] flag = new bool[9];\n\n        for(int i = 0; i < 9; i++)\n        {\n\n\n            if (!flag[i])   //??°??????????????????????????????????????§??????????????????????????????????????????????????????????????¨???????????????\n            {\n                MeldGroup(flag, i);\n            }\n\n            if (!flag[i])   //???????????£????????§????????????????????????\n            {\n                MeldRun(flag, i);\n            }\n\n            if (!flag[i])\n            {\n                ShowFlag(flag);\n                return false;       //??????????????±??????????????????????????????????????£??????????????§?????????                            \n            }\n        }\n        /*false???????????????for???????????????????????´?????¨??????flag???true*/\n\n        return true;\n    }\n\n    /// <summary>\n    /// ????????°?????¶????????¨??? ???????????°??¨\n    /// </summary>\n    /// <param name=\"flag\"></param>\n    private void ShowFlag(bool[] flag)\n    {\n        foreach(bool x in flag)\n        {\n            Console.Write( x ? \"1 \" : \"0 \");\n        }\n        Console.WriteLine();\n    }\n\n    /// <summary>\n    /// ????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldRun(bool[] flag, int i)\n    {\n        for (int j = i+1; j < 9; j++)    //???????????£?????????????????????????????§??°??????1??§????????????????????????????????????\n        {\n            if(_cards[i]._color == _cards[j]._color && \n               _cards[i]._number + 1 == _cards[j]._number &&\n                    !flag[j] )\n            {\n                for (int k = j + 1; k < 9; k++)     //1??§?????????????????????????????£?????????????§????2??§????????????????????????????????????\n                {\n                    if (_cards[i]._color == _cards[k]._color &&\n                       _cards[i]._number + 2 == _cards[k]._number &&\n                            !flag[k])\n                    {\n                        flag[i] = true;\n                        flag[j] = true;\n                        flag[k] = true;\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??°???????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldGroup(bool[] flag, int i)\n    {\n        if(_cards[i]._id >= 3)\n        {\n            flag[i]   = true;\n            flag[i+1] = true;\n            flag[i+2] = true;\n        }\n    }\n\n    /// <summary>\n    /// ???????????´????????????????????????\n    /// </summary>\n    internal void Sort()\n    {\n        Array.Sort( _cards, (a, b) => Compare(a, b) );\n    }\n\n    /// <summary>\n    /// 2?????????????????? ??? > ??°??? > ID ?????????????????§????????????\n    /// </summary>\n    /// <param name=\"a\">??????????±?</param>\n    /// <param name=\"b\">??????????±?</param>\n    /// <returns></returns>\n    private int Compare(Card a, Card b)\n    {\n        int iCompare = b._color.CompareTo(a._color);    //??????????????§????????????\n        if (iCompare != 0)\n        {\n            return iCompare ;              \n        }\n        else                        //?????????????????°??????????????§????????????\n        {\n            if( a._number - b._number != 0)\n            {\n                return a._number - b._number;\n            }\n            else                    //??°??????????????????id???????????§????????????\n            {\n                return b._id - a._id;\n            }\n        }\n        \n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n\n\n            List<int> resultlist = new List<int>();\n\n            int datasenum = int.Parse(Console.ReadLine());\n\n\n            int result = 1;\n\n            for (int i = 0; i < datasenum; i++)\n            {\n                var red = new Red();\n                var bule = new Bule();\n                var green = new Green();\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //???????????????????????????????????????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n\n                    switch (cardcolor[j])\n                    {\n\n                        case \"R\":\n                            red.SetNum(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"G\":\n                            green.SetNum(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"B\":\n                            bule.SetNum(int.Parse(cardnum[j]));\n                            break;\n\n                    }\n\n                }\n\n                if (red.CheckWin() && bule.CheckWin() && green.CheckWin()) result = 1;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach(var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n\n        }\n\n    }\n\n\n\n    class Red\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int one = 0;\n        int two = 0;\n        int therr = 0;\n        int four = 0;\n        int five = 0;\n        int six = 0;\n        int seven = 0;\n        int eight = 0;\n        int nine = 0;\n        #endregion\n\n        enum CardNum { one = 1, two, therr, four, five, six, seven, eight, nine}\n\n\n        //?????°?????°?????¨??¢??£????????????????????°???????????????????????????????????????????????????\n        public void SetNum(int i)\n        {\n\n            switch (i)\n            {\n                case (int)CardNum.one:\n                    this.one += 1;\n                    break;\n\n                case (int)CardNum.two:\n                    this.two += 1;\n                    break;\n\n                case (int)CardNum.therr:\n                    this.therr += 1;\n                    break;\n\n                case (int)CardNum.four:\n                    this.four += 1;\n                    break;\n\n                case (int)CardNum.five:\n                    this.five += 1;\n                    break;\n\n                case (int)CardNum.six:\n                    this.six += 1;\n                    break;\n\n                case (int)CardNum.seven:\n                    this.seven += 1;\n                    break;\n\n                case (int)CardNum.eight:\n                    this.eight += 1;\n                    break;\n\n                case (int)CardNum.nine:\n                    this.nine += 1;\n                    break;\n\n            }\n        }\n\n        //???????????¶????????????????????????????????????????????????\n        public bool CheckWin()\n        {\n            bool result = true;\n\n            //??????????????°?????????????´????????????????\n            List<int> cardlist = new List<int>();\n\n\n            cardlist.Add(this.one);\n            cardlist.Add(this.two);\n            cardlist.Add(this.therr);\n            cardlist.Add(this.four);\n            cardlist.Add(this.five);\n            cardlist.Add(this.six);\n            cardlist.Add(this.seven);\n            cardlist.Add(this.eight);\n            cardlist.Add(this.nine);\n\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += cardlist[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (cardlist[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (cardlist[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != cardlist[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = cardlist[i];\n                    else if (serialtemp > cardlist[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if(serialtemp < cardlist[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n            \n            }\n\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;                 \n        \n            return result;\n        }\n\n\n        //??????????????°????????????????????¨??????????????????\n\n    }\n\n\n    class Green\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int one = 0;\n        int two = 0;\n        int therr = 0;\n        int four = 0;\n        int five = 0;\n        int six = 0;\n        int seven = 0;\n        int eight = 0;\n        int nine = 0;\n        #endregion\n\n        enum CardNum { one = 1, two, therr, four, five, six, seven, eight, nine }\n\n\n        public void SetNum(int i)\n        {\n\n            switch (i)\n            {\n                case (int)CardNum.one:\n                    this.one += 1;\n                    break;\n\n                case (int)CardNum.two:\n                    this.two += 1;\n                    break;\n\n                case (int)CardNum.therr:\n                    this.therr += 1;\n                    break;\n\n                case (int)CardNum.four:\n                    this.four += 1;\n                    break;\n\n                case (int)CardNum.five:\n                    this.five += 1;\n                    break;\n\n                case (int)CardNum.six:\n                    this.six += 1;\n                    break;\n\n                case (int)CardNum.seven:\n                    this.seven += 1;\n                    break;\n\n                case (int)CardNum.eight:\n                    this.eight += 1;\n                    break;\n\n                case (int)CardNum.nine:\n                    this.nine += 1;\n                    break;\n\n            }\n        }\n\n        public bool CheckWin()\n        {\n            bool result = true;\n\n            //??????????????°?????????????´????????????????\n            List<int> cardlist = new List<int>();\n\n\n            cardlist.Add(this.one);\n            cardlist.Add(this.two);\n            cardlist.Add(this.therr);\n            cardlist.Add(this.four);\n            cardlist.Add(this.five);\n            cardlist.Add(this.six);\n            cardlist.Add(this.seven);\n            cardlist.Add(this.eight);\n            cardlist.Add(this.nine);\n\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += cardlist[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (cardlist[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (cardlist[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != cardlist[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = cardlist[i];\n                    else if (serialtemp > cardlist[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < cardlist[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n\n    }\n\n\n    class Bule\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int one = 0;\n        int two = 0;\n        int therr = 0;\n        int four = 0;\n        int five = 0;\n        int six = 0;\n        int seven = 0;\n        int eight = 0;\n        int nine = 0;\n        #endregion\n\n        enum CardNum { one = 1, two, therr, four, five, six, seven, eight, nine }\n\n\n        public void SetNum(int i)\n        {\n\n            switch (i)\n            {\n                case (int)CardNum.one:\n                    this.one += 1;\n                    break;\n\n                case (int)CardNum.two:\n                    this.two += 1;\n                    break;\n\n                case (int)CardNum.therr:\n                    this.therr += 1;\n                    break;\n\n                case (int)CardNum.four:\n                    this.four += 1;\n                    break;\n\n                case (int)CardNum.five:\n                    this.five += 1;\n                    break;\n\n                case (int)CardNum.six:\n                    this.six += 1;\n                    break;\n\n                case (int)CardNum.seven:\n                    this.seven += 1;\n                    break;\n\n                case (int)CardNum.eight:\n                    this.eight += 1;\n                    break;\n\n                case (int)CardNum.nine:\n                    this.nine += 1;\n                    break;\n\n            }\n        }\n\n\n        public bool CheckWin()\n        {\n            bool result = true;\n\n            //??????????????°?????????????´????????????????\n            List<int> cardlist = new List<int>();\n\n\n            cardlist.Add(this.one);\n            cardlist.Add(this.two);\n            cardlist.Add(this.therr);\n            cardlist.Add(this.four);\n            cardlist.Add(this.five);\n            cardlist.Add(this.six);\n            cardlist.Add(this.seven);\n            cardlist.Add(this.eight);\n            cardlist.Add(this.nine);\n\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += cardlist[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (cardlist[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (cardlist[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != cardlist[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = cardlist[i];\n                    else if (serialtemp > cardlist[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < cardlist[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System.Linq;\nusing System.Collections.Generic;\nusing System;\n\npublic class hello\n{\n\tpublic static void Main()\n\t{\n\t\tvar c = new string[] { \"R\", \"G\", \"B\" };\n\t\tvar n = int.Parse(Console.ReadLine().Trim());\n\t\tvar p = 0;\n\t\twhile (p++ < n)\n\t\t{\n\t\t\tstring[] line = Console.ReadLine().Trim().Split(' ');\n\t\t\tvar a = Array.ConvertAll(line, int.Parse);\n\t\t\tstring[] s = Console.ReadLine().Trim().Split(' ');\n\t\t\tvar ans = 1;\n\t\t\tfor (int i = 0; i < 3; i++)\n\t\t\t{\n\t\t\t\tvar w2 = new List<int>();\n\t\t\t\tfor (int j = 0; j < 9; j++)\n\t\t\t\t\tif (s[j] == c[i]) w2.Add(a[j]);\n\t\t\t\tvar w = w2.OrderBy(x => x).ToList();\n\t\t\t\tvar wc = w.Count();\n\t\t\t\tif (wc > 0 && wc % 3 != 0) { ans = 0; goto end; }\n\t\t\t\telse if (wc == 3 && !check3(w)) { ans = 0; goto end; }\n\t\t\t\telse if (wc == 6 && !check6(w)) { ans = 0; goto end; }\n\t\t\t\telse if (wc == 9 && !check9(w)) { ans = 0; goto end; }\n\t\t\t}\n\t\tend:;\n\t\t\tConsole.WriteLine(ans);\n\t\t}\n\t}\n\tstatic bool check9(List<int> a)\n\t{\n\t\tvar d = getDic(a);\n\t\tforeach (var x in d)\n\t\t{\n\t\t\tif (x.Value == 3 | x.Value == 4)\n\t\t\t{\n\t\t\t\tvar t = x.Value;\n\t\t\t\tfor (int i = 0; i < 3; i++) a.Remove(t);\n\t\t\t\tif (check6(a)) return true;\n\t\t\t\tfor (int i = 0; i < 3; i++) a.Add(t);\n\t\t\t\ta.Sort();\n\t\t\t}\n\t\t}\n\t\tvar dist = a.Distinct().ToList();\n\t\tfor (int i = 0; i <= dist.Count() - 3; i++)\n\t\t\tif ((dist[i] + 1 == dist[i + 1]) && (dist[i + 1] + 1 == dist[i + 2]))\n\t\t\t{\n\t\t\t\tvar t = dist[i];\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Remove(t + j);\n\t\t\t\tif (check6(a)) return true;\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Add(t + j);\n\t\t\t\ta.Sort();\n\t\t\t}\n\t\treturn false;\n\t}\n\tstatic bool check3(List<int> a) =>\n\t\t(a[0] == a[1] && a[1] == a[2]) | (a[0] + 1 == a[1] && a[1] + 1 == a[2]);\n\tstatic bool check6(List<int> a)\n\t{\n\t\tvar d = getDic(a);\n\t\tforeach (var x in d)\n\t\t\tif (x.Value == 3 | x.Value == 4)\n\t\t\t{\n\t\t\t\tfor (int i = 0; i < 3; i++) a.Remove(x.Key);\n\t\t\t\treturn check3(a);\n\t\t\t}\n\t\tvar dist = a.Distinct().ToList();\n\t\tfor (int i = 0; i <= dist.Count() - 3; i++)\n\t\t\tif ((dist[i] + 1 == dist[i + 1]) && (dist[i + 1] + 1 == dist[i + 2]))\n\t\t\t{\n\t\t\t\tvar t = dist[i];\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Remove(t + j);\n\t\t\t\tif (check3(a)) return true;\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Add(t + j);\n\t\t\t\ta.Sort();\n\t\t\t}\n\t\treturn false;\n\t}\n\tstatic Dictionary<int, int> getDic(List<int> a)\n\t{\n\t\tvar d = new Dictionary<int, int>();\n\t\tfor (int i = 0; i < a.Count(); i++)\n\t\t\tif (d.ContainsKey(a[i])) d[a[i]]++;\n\t\t\telse d[a[i]] = 1;\n\t\treturn d;\n\t}\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// AOJ RUMMY????????°??????\n/// </summary>\nclass Program\n{\n    /// <summary>\n    /// ????????°????????¨????????????????????????\n    /// </summary>\n    /// <param name=\"args\"></param>\n    static void Main(string[] args)\n    {\n        //???????????°??????\n        int loopCount = int.Parse(Console.ReadLine());\n         \n        //???????????¨????????????????????????????????°?????°?????????  \n        for(int i = 0; i < loopCount; i++)\n        {\n            //????????????????????????\n            int[] cardNums = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();\n\n            //?????????????????????\n            string[] cardColors = Console.ReadLine().Split(' ');\n\n            //?????????????????????????????????????????????(??\\??????????????§?????????????????????????????´????????????????????£????????????)\n            List<Card> cards = GetCardList(cardNums, cardColors);\n\n            //??????????????????????°?????????????????????????\n            SortCard(cards);\n\n            //?????£???????????????????????????????????¨?????????????????¨??????\n            CheckCombinationWin(cards);\n\n            //?????????????????????????????¨??????????¢????\n            Console.WriteLine(CheckUsedCard(cards) ? \"1\" : \"0\");\n        }\n    }\n\n    private static List<Card> GetCardList(int[] cardNums, string[] cardColors)\n    {\n        List<Card> cards = new List<Card>();\n\n        for (int cardCount = 0; cardCount < cardNums.Length; cardCount++)\n            cards.Add(new Card(cardNums[cardCount], cardColors[cardCount]));\n\n        return cards;\n    }\n\n    /// <summary>\n    /// ??????????????°???????°??????????????????????\n    /// </summary>\n    private static void SortCard(List<Card> cards)\n    {\n        //??????????????????????????¨\n\n        for (int i = 0; i < cards.Count - 1; i++)\n        {\n            for (int j = cards.Count - 1; j > i; j--)\n            {\n                if (cards[j].number < cards[j - 1].number)\n                {\n                    Card card = cards[j];\n                    cards[j] = cards[j - 1];\n                    cards[j - 1] = card;\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??¨???????????????????????¨?????????????¢????\n    /// </summary>\n    /// <param name=\"cards\"></param>\n    /// <returns></returns>\n    private static bool CheckUsedCard(List<Card> cards)\n    {\n        bool isWin = true;\n\n        foreach (Card card in cards)\n            if (!card.isUsed)\n                isWin = false;\n\n        return isWin;\n    }\n\n    /// <summary>\n    /// ????????£?????????????????????????????????????????£????????????????????¨???????????????\n    /// </summary>\n    /// <param name=\"cards\"></param>\n    private static void CheckCombinationWin(List<Card> cards)\n    {\n        //checkCount=0???????????£????????§??????\n        //checkCount=1??????????????????????????§??????\n        for (int checkCount = 0; checkCount < 2; checkCount++)\n        {\n            //??\\??????3???for??????????????????????????????????????????????????????\n            for (int i = 0; i < cards.Count - 2; i++)\n            {\n                for (int j = i + 1; j < cards.Count - 1; j++)\n                {\n                    for (int k = j + 1; k < cards.Count; k++)\n                    {\n                        //??????????????????????????????????????¨???????¢????\n                        if (IsUsedCard(cards[i], cards[j], cards[k]))\n                        {\n                            //??????????????????????????????????????????????¢????\n                            if (IsSameColor(cards[i], cards[j], cards[k]))\n                            {\n                                if (checkCount == 0)\n                                {\n                                    //??£????????§?????????????±?????????????????????????????????£???????????£????????????\n                                    if (IsContinuityNumber(cards[i], cards[j], cards[k]))\n                                    {\n                                        SetCardUsed(cards[i], cards[j], cards[k]);\n                                    }\n                                }\n                                else\n                                {\n                                    //?????????????????§?????????????±????3??????????????????????????????????????£????????????\n                                    if (IsSameNumber(cards[i], cards[j], cards[k]))\n                                    {\n                                        SetCardUsed(cards[i], cards[j], cards[k]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????????????¨????????????????????????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    private static void SetCardUsed(Card card1, Card card2, Card card3)\n    {\n        card1.isUsed = true;\n        card2.isUsed = true;\n        card3.isUsed = true;\n    }\n\n    /// <summary>\n    /// ???????????????????????£??????????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsContinuityNumber(Card card1, Card card2, Card card3)\n    {\n        bool isContinuityNumber = false;\n\n        if (card1.number == card2.number - 1 && card1.number == card3.number - 2)\n            isContinuityNumber = true;\n\n        return isContinuityNumber;\n    }\n\n    /// <summary>\n    /// ??????????????????????????????????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsSameNumber(Card card1, Card card2, Card card3)\n    {\n        bool isSameNumber = false;\n\n        if (card1.number == card2.number && card1.number == card3.number)\n            isSameNumber = true;\n\n        return isSameNumber;\n    }\n\n    /// <summary>\n    /// ?????????????????????????????¨???????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsUsedCard(Card card1, Card card2, Card card3)\n    {\n        bool isUsed = false;\n\n        if (!card1.isUsed && !card2.isUsed && !card3.isUsed)\n            isUsed = true;\n\n        return isUsed;\n    }\n\n    /// <summary>\n    /// ???????????????????????¨????????????????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsSameColor(Card card1, Card card2, Card card3)\n    {\n        bool isSameColor = false;\n\n        if (card1.color == card2.color && card2.color == card3.color)\n            isSameColor = true;\n\n        return isSameColor;\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int number { get; set; }\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public string color { get; set; }\n    /// <summary>\n    /// ?????¨??????????????°\n    /// </summary>\n    public bool isUsed { get; set; }\n\n    /// <summary>\n    /// ?????????????????????\n    /// </summary>\n    /// <param name=\"num\">???????????????</param>\n    /// <param name=\"color\">????????????</param>\n    public Card(int num, string color)\n    {\n        this.number = num;\n        this.color = color;\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            //??????????????°????¨????\n            var read_text = Console.ReadLine();\n            int round_num = int.Parse(read_text);\n\n            //??????????????°???????????????\n            for(var i = 0;i<round_num;i++)\n            {\n                var read_num = Console.ReadLine();\n                var read_color = Console.ReadLine();\n\n                var HandCard_obj = new HandCard(read_num, read_color);\n\n                Console.WriteLine(HandCard_obj.judge_math() ? \"1\":\"0\");\n\n            }\n\n        }\n    }\n\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    class HandCard\n    {\n\n        /// <summary>\n        /// ???????????°?????¨????????????\n        /// </summary>\n        int[] hand_card_num = new int[9];\n        string[] hand_card_color = new string[9];\n\n        /// <summary>\n        /// ????????????????¨????\n        /// </summary>\n        //public enum Color\n        //{\n        //    red,\n        //    blue,\n        //    gleen\n\n        //}\n\n        /// <summary>\n        /// ?????????????????????\n        /// ??????????????????\n        /// </summary>\n        /// <param name=\"card_num\">?????????????????????????????????????????????</param>\n        /// <param name=\"card_color\">???????????????????????????????????????</param>\n        public HandCard(string card_num,string card_color)\n        {\n            var sprit_num=card_num.Split(' ');\n            var sprit_color=card_color.Split(' ');\n\n            for(int i=0;i<sprit_num.Length;i++)\n                hand_card_num[i] = int.Parse(sprit_num[i]);\n\n            for (int i = 0; i < sprit_color.Length; i++)\n                hand_card_color[i] = sprit_color[i] ;\n        }\n\n        /// <summary>\n        /// ????????????????????¶?????????????????????????????§????????????\n        /// </summary>\n        /// <returns></returns>\n        public bool judge_math()\n        {\n            int win_flg = 0;\n            //????????????\n            var color = new string[]{\"R\", \"G\", \"B\"};\n            \n            //??????????????¨?????????\n            string judge_string=\"\";\n\n            foreach (string s in color)\n            {\n                if (color_filtering(s).Count > 0)\n                {\n                    if (color_filtering(s).Count % 3 != 0)\n                        return false;\n\n                    var judge_list = color_filtering(s);\n\n                    foreach (int c in judge_list)\n                        judge_string += c.ToString();\n\n                    for (var i = 1; i <= 9; i++)\n                    {\n\n                        //???????????????\n                        if (0 <= judge_string.IndexOf(i.ToString() + i.ToString() + i.ToString()))\n                        {\n                            win_flg++;\n                            for (var j = 0; j < 3; j++)\n                                judge_list.Remove(i);\n\n                            if (judge_list.Count() < 3)\n                                break;\n\n                            judge_string = \"\";\n                            foreach (int c in judge_list)\n                                judge_string += c.ToString();\n\n                            i--;\n\n                        }\n                    }\n\n                    for (var i = 1; i < 8; i++)\n                    {\n                        if (judge_list.Contains(i) && judge_list.Contains(i + 1) && judge_list.Contains(i + 2))\n                        {\n                            win_flg++;\n                            for (var j = 0; j < 3; j++)\n                                judge_list.Remove(i + j);\n\n                            if (judge_list.Count() < 3)\n                                break;\n                            i--;\n                        }\n                    }\n\n                }\n            }\n            return win_flg >= 3 ? true:false;\n        }\n\n        /// <summary>\n        /// ????????????????????????????????°??????????????§??????\n        /// </summary>\n        /// <param name=\"color\">??????????????? R,G,B?????????</param>\n        /// <returns>?????????????????????List</returns>\n        private List<int> color_filtering(string  color)\n        {\n            //?????????????????????????????????????????????\n            List<int> math_num = new List<int>();\n\n            //???????????????????????????????????§?????´???????????????????????????????????????????????????????????\\??????\n            for(var i=0;i<hand_card_color.Length;i++)\n                if(hand_card_color[i]==color)\n                    math_num.Add(hand_card_num[i]);\n\n            //???????????????????????????\n            math_num.Sort();\n            return math_num;\n        }\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n\n            List<int> resultlist = new List<int>();\n\n            int datasetnum = int.Parse(Console.ReadLine());\n\n            int result = 1;\n\n            for (int i = 0; i < datasetnum; i++)\n            {\n                //????????????????????????????????????\n                List<int> redlist = new List<int>();\n                List<int> bulelist = new List<int>();\n                List<int> greenlist = new List<int>();\n\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //??????????????????????????????????????????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n                    switch (cardcolor[j])\n                    {\n                        case \"R\":\n                            redlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"G\":\n                            greenlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"B\":\n                            bulelist.Add(int.Parse(cardnum[j]));\n                            break;\n                    }\n                }\n\n                //??????????????????????????????????????????\n                var red = new Red(redlist);\n                var bule = new Bule(bulelist);\n                var green = new Green(greenlist);\n\n\n                if (red.redresult() && green.greenresult() && bule.buleresult()) result = 0;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach (var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n        }\n\n    }\n\n\n\n    class Red\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Red(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n    class Green\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Green(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool greenresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class Bule\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n        #region ?????????????????????\n        public Bule(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool buleresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class CardControl\n    {\n        /// <summary>\n        /// ???????????¶????????´?????????????????????\n        /// </summary>\n        /// <param name=\"card\"></param>\n        /// <returns></returns>\n        public bool CheckWin(int[] card)\n        {\n            bool result = true;\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += card[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (card[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (card[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != card[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = card[i];\n                    else if (serialtemp > card[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < card[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Lummy\n    {\n        public static void Main(string[] args)\n        {\n            string strLine = Console.ReadLine();\n            int intDateLength = int.Parse(strLine);\n            int[ , ] intNum = new int[intDateLength, 9];\n            string[ , ] strMark = new string[intDateLength, 9];\n            for (int first = 0; first < intDateLength; first++)\n            {\n                strLine = Console.ReadLine();\n                string[] strNumArr = strLine.Split(' ');\n                for (int second = 0; second < strNumArr.Length; second++)\n                {\n                    intNum[first, second] = int.Parse(strNumArr[second]);\n                }\n                strLine = Console.ReadLine();\n                string[] strTempMark = strLine.Split(' ');\n                for (int second = 0; second < strTempMark.Length; second++)\n                {\n                    strMark[first, second] = strTempMark[second];\n                }\n\n            }\n\n            //TestPrint(intDateLength, intNum, strMark);\n\n            List<int> listCount = new List<int>();\n\n            for (int first = 0; first < intDateLength; first++)\n            {\n\n                //ソート\n                for (int second = 0; second < 9; second++)\n                {\n                    for (int third = 8; second < third; third--)\n                    {\n                        if (intNum[first, third] < intNum[first, second])\n                        {\n                            int intTemp = intNum[first, third];\n                            string strTemp = strMark[first, third];\n                            intNum[first, third] = intNum[first, second];\n                            strMark[first, third] = strMark[first, second];\n                            intNum[first, second] = intTemp;\n                            strMark[first, second] = strTemp;\n                        }\n                    }\n                }\n\n                //TestPrint(intDateLength, intNum, strMark);\n\n                int intCount = 0;\n                List<int> listNGIndex = new List<int>();\n\n                //判定\n                for (int second = 0; second < 7; second++)\n                {\n                    bool blRoop = NGJuge(second, listNGIndex);\n                    if (blRoop)\n                    {\n                        for (int third = second + 1; third < 8; third++)\n                        {\n                            blRoop = NGJuge(third, listNGIndex);\n                            if (blRoop)\n                            {\n                                for (int forth = third + 1; forth < 9; forth++)\n                                {\n                                    blRoop = NGJuge(forth, listNGIndex);\n                                    if (blRoop)\n                                    {\n                                        if (strMark[first, second].Equals(strMark[first, third]) &&\n                                            strMark[first, second].Equals(strMark[first, forth]))\n                                        {\n                                            if (intNum[first, second] == intNum[first, third] &&\n                                            intNum[first, second] == intNum[first, forth])\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                            else if (intNum[first, second] == intNum[first, third] - 1 &&\n                                                intNum[first, second] == intNum[first, forth] - 2)\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                        }\n                                        \n\n                                    }\n                                }\n                            }\n                            \n                        }\n                    }\n                    \n                }\n\n                if (intCount == 3)\n                {\n                    listCount.Add(1);\n                }\n                else\n                {\n                    listCount.Add(0);\n                }\n\n\n            }\n            foreach (int ans in listCount)\n            {\n                Console.WriteLine(ans);\n            }\n            Console.ReadKey();\n        }\n\n        public static bool NGJuge(int intIndex, List<int> listNGNum)\n        {\n            bool blTrue = true;\n\n            foreach (int intNG in listNGNum)\n            {\n                if (intIndex == intNG)\n                {\n                    blTrue = false;\n                    break;\n                }\n            }\n            return blTrue;\n        }\n\n        public static void TestPrint(int intDateLength, int[ , ] intNum, string[ , ] strMark)\n        {\n            for (int first = 0; first < intDateLength; first++)\n            {\n                for (int second = 0; second < 9; second++)\n                {\n                    Console.Write(intNum[first, second]);\n                    Console.Write(\" \");\n                }\n                Console.WriteLine();\n                for (int second = 0; second < 9; second++)\n                {\n                    Console.Write(strMark[first, second]);\n                    Console.Write(\" \");\n                }\n                Console.WriteLine();\n            }\n        }\n\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "int a = 0;"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());  //???????????????????????°\n\n            for(int i = 0; i < n; i++)\n            {\n                Rummy rummyHand = new Rummy();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n                rummyHand.Display();\n\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Rummy\n    {\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// [0]???????????????????¨??????°\n        /// </summary>\n        int[] _red = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        int[] _green = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        int[] _blue = new int[10];\n\n        /// <summary>\n        /// ?????????????????????\n        /// 2?????????????????????????????????????????????????????????????????????????????£??????????????°??????\n        /// </summary>\n        public Rummy()\n        {\n            string[] number = Console.ReadLine().Split(' ');\n            string[] color = Console.ReadLine().Split(' ');\n\n            for(int i = 0; i < 9; i++)\n            {\n                CountCard(number[i],color[i]);\n            }\n        }\n\n        /// <summary>\n        /// ?????????????????\\???????????°?????????????????¢??????\n        /// </summary>\n        /// <param name=\"num\">??????????????????????????°???</param>\n        /// <param name=\"color\">???????????????</param>\n        private void CountCard(string num, string color)\n        {\n            switch (color)\n            {\n                case \"R\":\n                    _red[int.Parse(num)]++;\n                    _red[0]++;\n                    break;\n\n                case \"G\":\n                    _green[int.Parse(num)]++;\n                    _green[0]++;\n                    break;\n\n                case \"B\":\n                    _blue[int.Parse(num)]++;\n                    _blue[0]++;\n                    break;\n\n                default:\n                    Console.WriteLine(\"error.\");\n                    break;\n            }\n        }\n\n        /// <summary>\n        /// ???????????¶????????¨????????????\n        /// ??????????????°??¨???\n        /// </summary>\n        internal void Display()\n        {\n            Console.WriteLine(\"??? ?¨? 1 2 3 4 5 6 7 8 9\");\n\n            Console.Write(\"??? \");\n            DisplaySuit(_red);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_green);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_blue);\n\n        }\n\n        /// <summary>\n        /// ????????¨??????????????¶????????¨????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        private void DisplaySuit(int[] cards)\n        {\n            for(int i = 0; i <= 9; i++)\n            {\n                Console.Write(\" \" + cards[i]);\n            }\n            Console.WriteLine();\n        }\n\n        /// <summary>\n        /// ????????????????????¶????????????????????????\n        /// </summary>\n        /// <returns>3?????¨??????????????????????????°true</returns>\n        internal bool IsWinner()\n        {\n            if (JudgeColor(_red) && JudgeColor(_green) && JudgeColor(_blue))\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n\n        /// <summary>\n        /// ????????????????????????????????¶????????????????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        /// <returns>????????????????????°true</returns>\n        private bool JudgeColor(int[] cards)\n        {\n            for(int i = 1; i <= 9; i++)\n            {\n                /*??????????????????????????¨???????????????*/\n                if(cards[i] >= 3)   \n                {\n                    cards[i] -= 3;\n                    cards[0] -= 3;\n\n                }//??????????????????4?????\\???????????§??????????????????2?????\\????????????????????¨?????????\n\n                /*??£?????§?????????????????????i???8??\\?????§????????????(??°??????10??\\???????????????????????¨?????????)*/\n                if (i < 8)\n                {\n                    /*[i][i+1][i+2]???[i]????????°???????????????[i]???0??????nop??¨???????????¨*/\n\n                    cards[0] -= 3 * cards[i];\n                    cards[i + 2] -= cards[i];\n                    cards[i + 1] -= cards[i];\n                    cards[i] = 0;\n                    /*?????°????????????????????£???????????°????????¶?????????????????????????????£???*/\n\n                    if (cards[i + 1] < 0 || cards[i + 2] < 0)\n                    {\n                        return false;\n                    }\n\n                    \n                }\n\n                if (cards[0] == 0)  //??????????????§????????¨???????????????????????°\n                {\n                    return true;\n                }\n                else\n                {\n                    /* nop ?????????????¶???? */\n                }\n            }//for????????????????????§\n\n            /*???????????????????????????????????£???????????°?????¶??????????????????*/\n            return false;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// AOJ RUMMY????????°??????\n/// </summary>\nclass Program\n{\n    /// <summary>\n    /// ????????°????????¨????????????????????????\n    /// </summary>\n    /// <param name=\"args\"></param>\n    static void Main(string[] args)\n    {\n        //???????????°??????\n        int loopCount = int.Parse(Console.ReadLine());\n\n        //???????????¨????????????????????????????????°?????°?????????  \n        for (int i = 0; i < loopCount; i++)\n        {\n            //????????????????????????\n            int[] cardNums = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();\n\n            //?????????????????????\n            string[] cardColors = Console.ReadLine().Split(' ');\n\n            //?????????????????????????????????????????????(??\\??????????????§?????????????????????????????´????????????????????£????????????)\n            List<Card> cards = GetCardList(cardNums, cardColors);\n\n            //??????????????????????°?????????????????????????\n            SortCard(cards);\n\n            //?????£???????????????????????????????????¨?????????????????¨??????\n            CheckCombinationWin(cards);\n\n            //?????????????????????????????¨??????????¢????\n            Console.WriteLine(CheckUsedCard(cards) ? \"1\" : \"0\");\n        }\n    }\n\n    /// <summary>\n    /// ???????????????????????????????????????????????????????????????????????????\n    /// </summary>\n    /// <param name=\"cardNums\"></param>\n    /// <param name=\"cardColors\"></param>\n    /// <returns></returns>\n    private static List<Card> GetCardList(int[] cardNums, string[] cardColors)\n    {\n        List<Card> cards = new List<Card>();\n\n        for (int cardCount = 0; cardCount < cardNums.Length; cardCount++)\n            cards.Add(new Card(cardNums[cardCount], cardColors[cardCount]));\n\n        return cards;\n    }\n\n    /// <summary>\n    /// ??????????????°???????°??????????????????????\n    /// </summary>\n    private static void SortCard(List<Card> cards)\n    {\n        //??????????????????????????¨\n\n        for (int i = 0; i < cards.Count - 1; i++)\n        {\n            for (int j = cards.Count - 1; j > i; j--)\n            {\n                if (cards[j].number < cards[j - 1].number)\n                {\n                    Card card = cards[j];\n                    cards[j] = cards[j - 1];\n                    cards[j - 1] = card;\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??¨???????????????????????¨?????????????¢????\n    /// </summary>\n    /// <param name=\"cards\"></param>\n    /// <returns></returns>\n    private static bool CheckUsedCard(List<Card> cards)\n    {\n        bool isWin = true;\n\n        foreach (Card card in cards)\n            if (!card.isUsed)\n                isWin = false;\n\n        return isWin;\n    }\n\n    /// <summary>\n    /// ????????£?????????????????????????????????????????£????????????????????¨???????????????\n    /// </summary>\n    /// <param name=\"cards\"></param>\n    private static void CheckCombinationWin(List<Card> cards)\n    {\n        //checkCount=0???????????£????????§??????\n        //checkCount=1??????????????????????????§??????\n        for (int checkCount = 0; checkCount < 2; checkCount++)\n        {\n            //??\\??????3???for??????????????????????????????????????????????????????\n            for (int i = 0; i < cards.Count - 2; i++)\n            {\n                for (int j = i + 1; j < cards.Count - 1; j++)\n                {\n                    for (int k = j + 1; k < cards.Count; k++)\n                    {\n                        //????±?????????????????????????????????¨???????¢????\n                        if (IsUsedCard(cards[i], cards[j], cards[k]))\n                        {\n                            //????±?????????????????????????????????????????¢????\n                            if (IsSameColor(cards[i], cards[j], cards[k]))\n                            {\n                                if (checkCount == 0)\n                                {\n                                    //??£????????§?????????????±?????????????????????????????????£???????????£????????????\n                                    if (IsContinuityNumber(cards[i], cards[j], cards[k]))\n                                    {\n                                        SetCardUsed(cards[i], cards[j], cards[k]);\n                                    }\n                                }\n                                else\n                                {\n                                    //?????????????????§?????????????±????3??????????????????????????????????????£????????????\n                                    if (IsSameNumber(cards[i], cards[j], cards[k]))\n                                    {\n                                        SetCardUsed(cards[i], cards[j], cards[k]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????????????¨????????????????????????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    private static void SetCardUsed(Card card1, Card card2, Card card3)\n    {\n        card1.isUsed = true;\n        card2.isUsed = true;\n        card3.isUsed = true;\n    }\n\n    /// <summary>\n    /// ???????????????????????£??????????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsContinuityNumber(Card card1, Card card2, Card card3)\n    {\n        bool isContinuityNumber = false;\n\n        if (card1.number == card2.number - 1 && card1.number == card3.number - 2)\n            isContinuityNumber = true;\n\n        return isContinuityNumber;\n    }\n\n    /// <summary>\n    /// ??????????????????????????????????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsSameNumber(Card card1, Card card2, Card card3)\n    {\n        bool isSameNumber = false;\n\n        if (card1.number == card2.number && card1.number == card3.number)\n            isSameNumber = true;\n\n        return isSameNumber;\n    }\n\n    /// <summary>\n    /// ?????????????????????????????¨???????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsUsedCard(Card card1, Card card2, Card card3)\n    {\n        bool isUsed = false;\n\n        if (!card1.isUsed && !card2.isUsed && !card3.isUsed)\n            isUsed = true;\n\n        return isUsed;\n    }\n\n    /// <summary>\n    /// ???????????????????????¨????????????????¢????\n    /// </summary>\n    /// <param name=\"card1\"></param>\n    /// <param name=\"card2\"></param>\n    /// <param name=\"card3\"></param>\n    /// <returns></returns>\n    private static bool IsSameColor(Card card1, Card card2, Card card3)\n    {\n        bool isSameColor = false;\n\n        if (card1.color == card2.color && card2.color == card3.color)\n            isSameColor = true;\n\n        return isSameColor;\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int number { get; set; }\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public string color { get; set; }\n    /// <summary>\n    /// ?????¨??????????????°\n    /// </summary>\n    public bool isUsed { get; set; }\n\n    /// <summary>\n    /// ?????????????????????\n    /// </summary>\n    /// <param name=\"num\">???????????????</param>\n    /// <param name=\"color\">????????????</param>\n    public Card(int num, string color)\n    {\n        this.number = num;\n        this.color = color;\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\n\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string inputT = Console.ReadLine();\n            int T = int.Parse(inputT);\n            int[,] cn = new int[3, 9];\n\n            for (int i = 0; i < T; i++)\n            {\n                int win = 0;\n                string[] inputnumber = Console.ReadLine().Split(' ');\n                string[] inputcolor = Console.ReadLine().Split(' ');\n\n                for (int j = 0; j < 9; j++) //RGB*(1???9)?????????????????´?????????1??\\????¶????\n                {\n                    string color = inputcolor[j];\n                    int number = int.Parse(inputnumber[j]);\n                    for (int L = 1; L <= 9; L++)\n                    {\n                        if (color == \"R\" && number == L)\n                        {\n                            cn[0, number] += 1;\n                        }\n                        else if (color == \"G\" && number == L)\n                        {\n                            cn[1, number] += 1;\n                        }\n                        else if (color == \"B\" && number == L)\n                        {\n                            cn[2, number] += 1;\n                        }\n                    }\n                }\n\n                        for (int k = 0; k < 3; k++) //win?????¶\n                        {\n                            for (int h = 0; h < 9; h++)\n                            {\n                                if (cn[k,h] >= 3) //????????°????????¨???\n                                {\n                                    win += 1; //?????????????????????\n                                    cn[k, h] = cn[k, h] - 3; //???????????????\n                                    //Console.WriteLine(\"a\");\n                                }\n                                else if ((cn[k,h] >= 1) && (cn[k,h - 1] >= 1) && (cn[k,h - 2] >= 1)) //??£????????¨???\n                                {\n                                    win += 1; // ?????????????????????\n                                    cn[k, h] = cn[k, h] - 1; // ????????????\n                                    cn[k, h - 1] = cn[k, h - 1] - 1;\n                                    cn[k, h - 2] = cn[k, h - 1] - 1;\n                                    //Console.WriteLine(\"b\");\n                                }\n                            }\n\n                    }\n                if (win == 3)\n                    Console.WriteLine(1);\n                else if (win != 3)\n                    Console.WriteLine(0);\n                for (int x = 0; x < 3; x++) // cn?????????\n                {\n                    for (int y = 0; y < 9; y++)\n                    {\n                        cn[x, y] = 0;\n                    }\n                }\n            }\n\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\n\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string inputT = Console.ReadLine();\n            int T = int.Parse(inputT);\n            int[,] cn = new int[3, 9];\n\n            for (int i = 0; i < T; i++)\n            {\n                int win = 0;\n                string[] inputnumber = Console.ReadLine().Split(' ');\n                string[] inputcolor = Console.ReadLine().Split(' ');\n\n                for (int j = 0; j < 9; j++) //RGB*(1???9)?????????????????´?????????1??\\????¶????\n                {\n                    string color = inputcolor[j];\n                    int number = int.Parse(inputnumber[j]);\n                    for (int L = 1; L <= 9; L++)\n                    {\n                        if (color == \"R\" && number == L)\n                        {\n                            cn[0, number] += 1;\n                        }\n                        else if (color == \"G\" && number == L)\n                        {\n                            cn[1, number] += 1;\n                        }\n                        else if (color == \"B\" && number == L)\n                        {\n                            cn[2, number] += 1;\n                        }\n                    }\n                }\n\n                for (int k = 0; k < 3; k++) //win?????¶\n                {\n                    for (int h = 0; h < 9; h++)\n                    {\n                        if (cn[k, h] >= 3) //????????°????????¨???\n                        {\n                            win += 1; //?????????????????????\n                            cn[k, h] = cn[k, h] - 3; //???????????????\n                            //Console.WriteLine(\"a\");\n                        }\n                        else if ((cn[k, h] >= 1) && (cn[k, h - 1] >= 1) && (cn[k, h - 2] >= 1)) //??£????????¨???\n                        {\n                            win += 1; // ?????????????????????\n                            cn[k, h] = cn[k, h] - 1; // ????????????\n                            cn[k, h - 1] = cn[k, h - 1] - 1;\n                            cn[k, h - 2] = cn[k, h - 1] - 1;\n                            //Console.WriteLine(\"b\");\n                        }\n                    }\n                }\n\n                if (win >= 3) //????????¨???\n                    Console.WriteLine(1);\n                else if (win < 3)\n                    Console.WriteLine(0);\n                for (int x = 0; x < 3; x++) // cn?????????\n                {\n                    for (int y = 0; y < 9; y++)\n                    {\n                        cn[x, y] = 0;\n                    }\n                }\n            }\n\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Lummy\n    {\n        public static void Main(string[] args)\n        {\n            string strLine = Console.ReadLine();\n            int intDateLength = int.Parse(strLine);\n            int[ , ] intNum = new int[intDateLength, 9];\n            string[ , ] strMark = new string[intDateLength, 9];\n            for (int first = 0; first < intDateLength; first++)\n            {\n                strLine = Console.ReadLine();\n                string[] strNumArr = strLine.Split(' ');\n                for (int second = 0; second < strNumArr.Length; second++)\n                {\n                    intNum[first, second] = int.Parse(strNumArr[second]);\n                }\n                strLine = Console.ReadLine();\n                string[] strTempMark = strLine.Split(' ');\n                for (int second = 0; second < strTempMark.Length; second++)\n                {\n                    strMark[first, second] = strTempMark[second];\n                }\n\n            }\n\n            List<int> listCount = new List<int>();\n\n            for (int first = 0; first < intDateLength; first++)\n            {\n\n                //ソート\n                for (int second = 0; second < 9; second++)\n                {\n                    for (int third = 8; 0 <= third; third--)\n                    {\n                        if (intNum[first, third] < intNum[first, second])\n                        {\n                            int intTemp = intNum[first, third];\n                            string strTemp = strMark[first, third];\n                            intNum[first, third] = intNum[first, second];\n                            strMark[first, third] = strMark[first, second];\n                            intNum[first, second] = intTemp;\n                            strMark[first, second] = strTemp;\n                        }\n                    }\n                }\n\n                int intCount = 0;\n                List<int> listNGIndex = new List<int>();\n\n                //判定\n                for (int second = 0; second < 7; second++)\n                {\n                    bool blRoop = NGJuge(second, listNGIndex);\n                    if (blRoop)\n                    {\n                        for (int third = second + 1; third < 8; third++)\n                        {\n                            blRoop = NGJuge(third, listNGIndex);\n                            if (blRoop)\n                            {\n                                for (int forth = third + 1; forth < 9; forth++)\n                                {\n                                    blRoop = NGJuge(forth, listNGIndex);\n                                    if (blRoop)\n                                    {\n                                        if (strMark[first, second] == strMark[first, third] &&\n                                            strMark[first, second] == strMark[first, forth])\n                                        {\n                                            if (intNum[first, second] == intNum[first, third] &&\n                                            intNum[first, second] == intNum[first, forth])\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                            else if (intNum[first, second] == intNum[first, third] - 1 &&\n                                                intNum[first, second] == intNum[first, forth] - 2)\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                        }\n                                        \n\n                                    }\n                                }\n                            }\n                            \n                        }\n                    }\n                    \n                }\n\n                listCount.Add(intCount);\n\n\n            }\n            foreach (int ans in listCount)\n            {\n                Console.WriteLine(ans);\n            }\n            Console.ReadKey();\n        }\n\n        public static bool NGJuge(int intIndex, List<int> listNGNum)\n        {\n            bool blTrue = true;\n\n            foreach (int intNG in listNGNum)\n            {\n                if (intIndex == intNG)\n                {\n                    blTrue = false;\n                    break;\n                }\n            }\n            return blTrue;\n        }\n\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            //??????????????°????¨????\n            var read_text = Console.ReadLine();\n            int round_num = int.Parse(read_text);\n\n            //??????????????°???????????????\n            for(var i = 0;i<round_num;i++)\n            {\n                var read_num = Console.ReadLine();\n                var read_color = Console.ReadLine();\n\n                var HandCard_obj = new HandCard(read_num, read_color);\n\n                Console.WriteLine(HandCard_obj.judge_math() ? \"1\":\"0\");\n\n            }\n\n        }\n    }\n\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    class HandCard\n    {\n\n        /// <summary>\n        /// ???????????°?????¨????????????\n        /// </summary>\n        int[] hand_card_num = new int[9];\n        string[] hand_card_color = new string[9];\n\n        /// <summary>\n        /// ????????????????¨????\n        /// </summary>\n        //public enum Color\n        //{\n        //    red,\n        //    blue,\n        //    gleen\n\n        //}\n\n        /// <summary>\n        /// ?????????????????????\n        /// ??????????????????\n        /// </summary>\n        /// <param name=\"card_num\">?????????????????????????????????????????????</param>\n        /// <param name=\"card_color\">???????????????????????????????????????</param>\n        public HandCard(string card_num,string card_color)\n        {\n            var sprit_num=card_num.Split(' ');\n            var sprit_color=card_color.Split(' ');\n\n            for(int i=0;i<sprit_num.Length;i++)\n                hand_card_num[i] = int.Parse(sprit_num[i]);\n\n            for (int i = 0; i < sprit_color.Length; i++)\n                hand_card_color[i] = sprit_color[i] ;\n        }\n\n        /// <summary>\n        /// ????????????????????¶?????????????????????????????§????????????\n        /// </summary>\n        /// <returns></returns>\n        public bool judge_math()\n        {\n            int win_flg = 0;\n            //????????????\n            var color = new string[]{\"R\", \"G\", \"B\"};\n            \n            //??????????????¨?????????\n            string judge_string=\"\";\n\n            foreach (string s in color)\n            {\n                if(color_filtering(s).Count%3 != 0)\n                    return false;\n\n                var judge_list = color_filtering(s);\n\n                foreach (int c in judge_list)\n                    judge_string += c.ToString();\n\n                for (var i = 1; i <= 9; i++)\n                {\n\n                    //???????????????\n                    if (0 <= judge_string.IndexOf(i.ToString() + i.ToString() + i.ToString()))\n                    {\n                        win_flg++;\n                        for (var j = 0; j < 3; j++)\n                            judge_list.Remove(i);\n\n                        if (judge_list.Count() < 3)\n                            break;\n                        i--;\n\n                        foreach (int c in judge_list)\n                            judge_string += c.ToString();\n\n                    }\n                }\n\n                for (var i = 1; i < 8;i++ )\n                {\n                    if(judge_list.Contains(i)&&judge_list.Contains(i+1)&&judge_list.Contains(i+2))\n                    {\n                        win_flg++;\n                        for (var j = 0; j < 3; j++)\n                            judge_list.Remove(i+j);\n\n                        if (judge_list.Count() < 3)\n                            break;\n                        i--;\n                    }\n                }\n                    \n                \n            }\n            return win_flg >= 3 ? true:false;\n        }\n\n        /// <summary>\n        /// ????????????????????????????????°??????????????§??????\n        /// </summary>\n        /// <param name=\"color\">??????????????? R,G,B?????????</param>\n        /// <returns>?????????????????????List</returns>\n        private List<int> color_filtering(string  color)\n        {\n            //?????????????????????????????????????????????\n            List<int> math_num = new List<int>();\n\n            //???????????????????????????????????§?????´???????????????????????????????????????????????????????????\\??????\n            for(var i=0;i<hand_card_color.Length;i++)\n                if(hand_card_color[i]==color)\n                    math_num.Add(hand_card_num[i]);\n\n            //???????????????????????????\n            math_num.Sort();\n            return math_num;\n        }\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string inputT = Console.ReadLine();\n            int T = int.Parse(inputT);\n            int[,] cn = new int[3, 9];\n\n            for (int i = 0; i < T; i++)\n            {\n                int win = 0;\n                string[] inputnumber = Console.ReadLine().Split(' ');\n                string[] inputcolor = Console.ReadLine().Split(' ');\n\n                for (int j = 0; j < 9; j++) //RGB*(1???9)?????????????????´?????????1??\\????¶????\n                {\n                    string color = inputcolor[j];\n                    int number = int.Parse(inputnumber[j]);\n                    for (int L = 1; L < 10; L++)\n                    {\n                        if (color == \"R\" && number == L)\n                        {\n                            cn[0, number - 1] += 1;\n                        }\n                        else if (color == \"G\" && number == L)\n                        {\n                            cn[1, number - 1] += 1;\n                        }\n                        else if (color == \"B\" && number == L)\n                        {\n                            cn[2, number - 1] += 1;\n                        }\n                    }\n                }\n\n                for (int k = 0; k < 3; k++) //win?????¶\n                {\n                    for (int h = 0; h < 9; h++)\n                    {\n                        if (cn[k, h] >= 3) //????????°????????¨???\n                        {\n                            win += 1; //?????????????????????\n                            cn[k, h] = cn[k, h] - 3; //???????????????\n                            //Console.WriteLine(\"a\");\n                        }\n                        if (h > 1)\n                        { \n                            if ((cn[k, h] >= 1) && (cn[k, h - 1] >= 1) && (cn[k, h - 2] >= 1)) //??£????????¨???\n                            {\n                               win += 1; // ?????????????????????\n                               cn[k, h] = cn[k, h] - 1; // ????????????\n                               cn[k, h - 1] = cn[k, h - 1] - 1;\n                               cn[k, h - 2] = cn[k, h - 2] - 1;\n                               //Console.WriteLine(\"b\");\n                             }\n                        }\n                    }\n                }\n\n                if (win >= 3) //????????¨???\n                    Console.WriteLine(1);\n                else if (win < 3)\n                    Console.WriteLine(0);\n                for (int x = 0; x < 3; x++) // cn?????????\n                {\n                    for (int y = 0; y < 9; y++)\n                    {\n                        cn[x, y] = 0;\n                    }\n                }\n            }\n\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string inputT = Console.ReadLine();\n            int T = int.Parse(inputT);\n            int[,] cn = new int[3, 9];\n\n            for (int i = 0; i < T; i++)\n            {\n                int win = 0;\n                string[] inputnumber = Console.ReadLine().Split(' ');\n                string[] inputcolor = Console.ReadLine().Split(' ');\n\n                for (int j = 0; j < 9; j++) //RGB*(1???9)?????????????????´?????????1??\\????¶????\n                {\n                    string color = inputcolor[j];\n                    int number = int.Parse(inputnumber[j]);\n                    for (int L = 1; L <= 9; L++)\n                    {\n                        if (color == \"R\" && number == L)\n                        {\n                            cn[0, number - 1] += 1;\n                        }\n                        else if (color == \"G\" && number == L)\n                        {\n                            cn[1, number - 1] += 1;\n                        }\n                        else if (color == \"B\" && number == L)\n                        {\n                            cn[2, number - 1] += 1;\n                        }\n                    }\n                }\n\n                for (int k = 0; k < 3; k++) //win?????¶\n                {\n                    for (int h = 0; h < 9; h++)\n                    {\n                        if (cn[k, h] >= 3) //????????°????????¨???\n                        {\n                            win += 1; //?????????????????????\n                            cn[k, h] = cn[k, h] - 3; //???????????????\n                            //Console.WriteLine(\"a\");\n                        }\n                        else if ((cn[k, h] >= 1) && (cn[k, h - 1] >= 1) && (cn[k, h - 2] >= 1)) //??£????????¨???\n                        {\n                            win += 1; // ?????????????????????\n                            cn[k, h] = cn[k, h] - 1; // ????????????\n                            cn[k, h - 1] = cn[k, h - 1] - 1;\n                            cn[k, h - 2] = cn[k, h - 1] - 1;\n                            //Console.WriteLine(\"b\");\n                        }\n                    }\n                }\n\n                if (win >= 3) //????????¨???\n                    Console.WriteLine(1);\n                else if (win < 3)\n                    Console.WriteLine(0);\n                for (int x = 0; x < 3; x++) // cn?????????\n                {\n                    for (int y = 0; y < 9; y++)\n                    {\n                        cn[x, y] = 0;\n                    }\n                }\n            }\n\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n\n            List<int> resultlist = new List<int>();\n\n            int datasetnum = int.Parse(Console.ReadLine());\n\n            int result = 1;\n\n            for (int i = 0; i < datasetnum; i++)\n            {\n                //????????????????????????????????????\n                List<int> redlist = new List<int>();\n                List<int> bulelist = new List<int>();\n                List<int> greenlist = new List<int>();\n\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //??????????????????????????????????????????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n                    switch (cardcolor[j])\n                    {\n\n                        case \"R\":\n                            redlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"G\":\n                            greenlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"B\":\n                            bulelist.Add(int.Parse(cardnum[j]));\n                            break;\n\n                    }\n                }\n\n                //??????????????????????????????????????????\n                var red = new Red(redlist);\n                var bule = new Bule(bulelist);\n                var green = new Green(greenlist);\n\n\n                if (red.redresult() && bule.redresult() && green.redresult()) result = 1;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach (var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n        }\n\n    }\n\n\n\n    class Red\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Red(List<int> setlist)\n        {\n            for (int i = 0; i < setlist.Count; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n    class Green\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Green(List<int> setlist)\n        {\n            for (int i = 0; i < setlist.Count; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class Bule\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n        #region ?????????????????????\n        public Bule(List<int> setlist)\n        {\n            for (int i = 0; i < setlist.Count; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class CardControl\n    {\n        /// <summary>\n        /// ???????????¶????????´?????????????????????\n        /// </summary>\n        /// <param name=\"card\"></param>\n        /// <returns></returns>\n        public bool CheckWin(int[] card)\n        {\n            bool result = true;\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += card[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (card[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (card[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != card[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = card[i];\n                    else if (serialtemp > card[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < card[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n    }\n\n\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Lummy\n    {\n        public static void Main(string[] args)\n        {\n            string strLine = Console.ReadLine();\n            int intDateLength = int.Parse(strLine);\n            int[ , ] intNum = new int[intDateLength, 9];\n            string[ , ] strMark = new string[intDateLength, 9];\n            for (int first = 0; first < intDateLength; first++)\n            {\n                strLine = Console.ReadLine();\n                string[] strNumArr = strLine.Split(' ');\n                for (int second = 0; second < strNumArr.Length; second++)\n                {\n                    intNum[first, second] = int.Parse(strNumArr[second]);\n                }\n                strLine = Console.ReadLine();\n                string[] strTempMark = strLine.Split(' ');\n                for (int second = 0; second < strTempMark.Length; second++)\n                {\n                    strMark[first, second] = strTempMark[second];\n                }\n\n            }\n\n            List<int> listCount = new List<int>();\n\n            for (int first = 0; first < intDateLength; first++)\n            {\n\n                //ソート\n                for (int second = 0; second < 9; second++)\n                {\n                    for (int third = 8; 0 <= third; third--)\n                    {\n                        if (intNum[first, third] < intNum[first, second])\n                        {\n                            int intTemp = intNum[first, third];\n                            string strTemp = strMark[first, third];\n                            intNum[first, third] = intNum[first, second];\n                            strMark[first, third] = strMark[first, second];\n                            intNum[first, second] = intTemp;\n                            strMark[first, second] = strTemp;\n                        }\n                    }\n                }\n\n                int intCount = 0;\n                List<int> listNGIndex = new List<int>();\n\n                //判定\n                for (int second = 0; second < 7; second++)\n                {\n                    bool blRoop = NGJuge(second, listNGIndex);\n                    if (blRoop)\n                    {\n                        for (int third = second + 1; third < 8; third++)\n                        {\n                            blRoop = NGJuge(third, listNGIndex);\n                            if (blRoop)\n                            {\n                                for (int forth = third + 1; forth < 9; forth++)\n                                {\n                                    blRoop = NGJuge(forth, listNGIndex);\n                                    if (blRoop)\n                                    {\n                                        if (strMark[first, second] == strMark[first, third] &&\n                                            strMark[first, second] == strMark[first, forth])\n                                        {\n                                            if (intNum[first, second] == intNum[first, third] &&\n                                            intNum[first, second] == intNum[first, forth])\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                            else if (intNum[first, second] == intNum[first, third] - 1 &&\n                                                intNum[first, second] == intNum[first, forth] - 2)\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                        }\n                                        \n\n                                    }\n                                }\n                            }\n                            \n                        }\n                    }\n                    \n                }\n\n                if (intCount == 3)\n                {\n                    listCount.Add(1);\n                }\n                else\n                {\n                    listCount.Add(0);\n                }\n\n\n            }\n            foreach (int ans in listCount)\n            {\n                Console.WriteLine(ans);\n            }\n            //Console.ReadKey();\n        }\n\n        public static bool NGJuge(int intIndex, List<int> listNGNum)\n        {\n            bool blTrue = true;\n\n            foreach (int intNG in listNGNum)\n            {\n                if (intIndex == intNG)\n                {\n                    blTrue = false;\n                    break;\n                }\n            }\n            return blTrue;\n        }\n\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "Console.WriteLine(\"\");"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n\n\n            List<int> resultlist = new List<int>();\n\n            int datasenum = int.Parse(Console.ReadLine());\n\n\n            int result = 1;\n\n            for (int i = 0; i < datasenum; i++)\n            {\n                var red = new Red();\n                var bule = new Bule();\n                var green = new Green();\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //???????????????????????????????????????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n\n                    switch (cardcolor[j])\n                    {\n\n                        case \"R\":\n                            red.SetNum(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"G\":\n                            green.SetNum(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"B\":\n                            bule.SetNum(int.Parse(cardnum[j]));\n                            break;\n\n                    }\n\n                }\n\n                if (red.CheckWin() && bule.CheckWin() && green.CheckWin()) result = 1;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach(var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n\n        }\n\n    }\n\n\n\n    class Red\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int one = 0;\n        int two = 0;\n        int therr = 0;\n        int four = 0;\n        int five = 0;\n        int six = 0;\n        int seven = 0;\n        int eight = 0;\n        int nine = 0;\n        #endregion\n\n        enum CardNum { one = 1, two, therr, four, five, six, seven, eight, nine}\n\n        //??????????????????????????????????????????\n        List<int> comblist = new List<int>();\n\n\n        //?????°?????°?????¨??¢??£????????????????????°???????????????????????????????????????????????????\n        public void SetNum(int i)\n        {\n\n            switch (i)\n            {\n                case (int)CardNum.one:\n                    this.one += 1;\n                    break;\n\n                case (int)CardNum.two:\n                    this.two += 1;\n                    break;\n\n                case (int)CardNum.therr:\n                    this.therr += 1;\n                    break;\n\n                case (int)CardNum.four:\n                    this.four += 1;\n                    break;\n\n                case (int)CardNum.five:\n                    this.five += 1;\n                    break;\n\n                case (int)CardNum.six:\n                    this.six += 1;\n                    break;\n\n                case (int)CardNum.seven:\n                    this.seven += 1;\n                    break;\n\n                case (int)CardNum.eight:\n                    this.eight += 1;\n                    break;\n\n                case (int)CardNum.nine:\n                    this.nine += 1;\n                    break;\n\n            }\n        }\n\n        //???????????¶????????????????????????????????????????????????\n        public bool CheckWin()\n        {\n            bool result = true;\n\n            //??????????????°?????????????´????????????????\n            List<int> cardlist = new List<int>();\n\n\n            cardlist.Add(this.one);\n            cardlist.Add(this.two);\n            cardlist.Add(this.therr);\n            cardlist.Add(this.four);\n            cardlist.Add(this.five);\n            cardlist.Add(this.six);\n            cardlist.Add(this.seven);\n            cardlist.Add(this.eight);\n            cardlist.Add(this.nine);\n\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += cardlist[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (cardlist[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (cardlist[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != cardlist[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = cardlist[i];\n                    else if (serialtemp > cardlist[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if(serialtemp < cardlist[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n            \n            }\n\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;                 \n        \n            return result;\n        }\n\n\n        //??????????????°????????????????????¨??????????????????\n\n    }\n\n\n    class Green\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int one = 0;\n        int two = 0;\n        int therr = 0;\n        int four = 0;\n        int five = 0;\n        int six = 0;\n        int seven = 0;\n        int eight = 0;\n        int nine = 0;\n        #endregion\n\n        enum CardNum { one = 1, two, therr, four, five, six, seven, eight, nine }\n\n\n        public void SetNum(int i)\n        {\n\n            switch (i)\n            {\n                case (int)CardNum.one:\n                    this.one += 1;\n                    break;\n\n                case (int)CardNum.two:\n                    this.two += 1;\n                    break;\n\n                case (int)CardNum.therr:\n                    this.therr += 1;\n                    break;\n\n                case (int)CardNum.four:\n                    this.four += 1;\n                    break;\n\n                case (int)CardNum.five:\n                    this.five += 1;\n                    break;\n\n                case (int)CardNum.six:\n                    this.six += 1;\n                    break;\n\n                case (int)CardNum.seven:\n                    this.seven += 1;\n                    break;\n\n                case (int)CardNum.eight:\n                    this.eight += 1;\n                    break;\n\n                case (int)CardNum.nine:\n                    this.nine += 1;\n                    break;\n\n            }\n        }\n\n        public bool CheckWin()\n        {\n            bool result = true;\n\n            //??????????????°?????????????´????????????????\n            List<int> cardlist = new List<int>();\n\n\n            cardlist.Add(this.one);\n            cardlist.Add(this.two);\n            cardlist.Add(this.therr);\n            cardlist.Add(this.four);\n            cardlist.Add(this.five);\n            cardlist.Add(this.six);\n            cardlist.Add(this.seven);\n            cardlist.Add(this.eight);\n            cardlist.Add(this.nine);\n\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += cardlist[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (cardlist[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (cardlist[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != cardlist[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = cardlist[i];\n                    else if (serialtemp > cardlist[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < cardlist[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n\n    }\n\n\n    class Bule\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int one = 0;\n        int two = 0;\n        int therr = 0;\n        int four = 0;\n        int five = 0;\n        int six = 0;\n        int seven = 0;\n        int eight = 0;\n        int nine = 0;\n        #endregion\n\n        enum CardNum { one = 1, two, therr, four, five, six, seven, eight, nine }\n\n\n        public void SetNum(int i)\n        {\n\n            switch (i)\n            {\n                case (int)CardNum.one:\n                    this.one += 1;\n                    break;\n\n                case (int)CardNum.two:\n                    this.two += 1;\n                    break;\n\n                case (int)CardNum.therr:\n                    this.therr += 1;\n                    break;\n\n                case (int)CardNum.four:\n                    this.four += 1;\n                    break;\n\n                case (int)CardNum.five:\n                    this.five += 1;\n                    break;\n\n                case (int)CardNum.six:\n                    this.six += 1;\n                    break;\n\n                case (int)CardNum.seven:\n                    this.seven += 1;\n                    break;\n\n                case (int)CardNum.eight:\n                    this.eight += 1;\n                    break;\n\n                case (int)CardNum.nine:\n                    this.nine += 1;\n                    break;\n\n            }\n        }\n\n\n        public bool CheckWin()\n        {\n            bool result = true;\n\n            //??????????????°?????????????´????????????????\n            List<int> cardlist = new List<int>();\n\n\n            cardlist.Add(this.one);\n            cardlist.Add(this.two);\n            cardlist.Add(this.therr);\n            cardlist.Add(this.four);\n            cardlist.Add(this.five);\n            cardlist.Add(this.six);\n            cardlist.Add(this.seven);\n            cardlist.Add(this.eight);\n            cardlist.Add(this.nine);\n\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += cardlist[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (cardlist[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (cardlist[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != cardlist[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = cardlist[i];\n                    else if (serialtemp > cardlist[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < cardlist[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Lummy\n    {\n        public static void Main(string[] args)\n        {\n            string strLine = Console.ReadLine();\n            int intDateLength = int.Parse(strLine);\n            int[ , ] intNum = new int[intDateLength, 9];\n            string[ , ] strMark = new string[intDateLength, 9];\n            for (int first = 0; first < intDateLength; first++)\n            {\n                strLine = Console.ReadLine();\n                string[] strNumArr = strLine.Split(' ');\n                for (int second = 0; second < strNumArr.Length; second++)\n                {\n                    intNum[first, second] = int.Parse(strNumArr[second]);\n                }\n                strLine = Console.ReadLine();\n                string[] strTempMark = strLine.Split(' ');\n                for (int second = 0; second < strTempMark.Length; second++)\n                {\n                    strMark[first, second] = strTempMark[second];\n                }\n\n            }\n\n            List<int> listCount = new List<int>();\n\n            for (int first = 0; first < intDateLength; first++)\n            {\n\n                //ソート\n                for (int second = 0; second < 9; second++)\n                {\n                    for (int third = 8; 0 <= third; third--)\n                    {\n                        if (intNum[first, third] < intNum[first, second])\n                        {\n                            int intTemp = intNum[first, third];\n                            string strTemp = strMark[first, third];\n                            intNum[first, third] = intNum[first, second];\n                            strMark[first, third] = strMark[first, second];\n                            intNum[first, second] = intTemp;\n                            strMark[first, second] = strTemp;\n                        }\n                    }\n                }\n\n                int intCount = 0;\n                List<int> listNGIndex = new List<int>();\n\n                //判定\n                for (int second = 0; second < 7; second++)\n                {\n                    bool blRoop = NGJuge(second, listNGIndex);\n                    if (blRoop)\n                    {\n                        for (int third = second + 1; third < 8; third++)\n                        {\n                            blRoop = NGJuge(third, listNGIndex);\n                            if (blRoop)\n                            {\n                                for (int forth = third + 1; forth < 9; forth++)\n                                {\n                                    blRoop = NGJuge(forth, listNGIndex);\n                                    if (blRoop)\n                                    {\n                                        if (strMark[first, second] == strMark[first, third] &&\n                                            strMark[first, second] == strMark[first, forth])\n                                        {\n                                            if (intNum[first, second] == intNum[first, third] &&\n                                            intNum[first, second] == intNum[first, forth])\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                            else if (intNum[first, second] == intNum[first, third] - 1 &&\n                                                intNum[first, second] == intNum[first, forth] - 2)\n                                            {\n                                                intCount++;\n                                                listNGIndex.Add(second);\n                                                listNGIndex.Add(third);\n                                                listNGIndex.Add(forth);\n                                            }\n                                        }\n                                        \n\n                                    }\n                                }\n                            }\n                            \n                        }\n                    }\n                    \n                }\n\n                listCount.Add(intCount);\n\n\n            }\n            foreach (int ans in listCount)\n            {\n                Console.WriteLine(ans);\n            }\n            //Console.ReadKey();\n        }\n\n        public static bool NGJuge(int intIndex, List<int> listNGNum)\n        {\n            bool blTrue = true;\n\n            foreach (int intNG in listNGNum)\n            {\n                if (intIndex == intNG)\n                {\n                    blTrue = false;\n                    break;\n                }\n            }\n            return blTrue;\n        }\n\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            //??????????????°????¨????\n            var read_text = Console.ReadLine();\n            int round_num = int.Parse(read_text);\n\n            //??????????????°???????????????\n            for(var i = 0;i<round_num;i++)\n            {\n                var read_num = Console.ReadLine();\n                var read_color = Console.ReadLine();\n\n                var HandCard_obj = new HandCard(read_num, read_color);\n\n                Console.WriteLine(HandCard_obj.judge_math() ? \"1\":\"0\");\n\n            }\n\n        }\n    }\n\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    class HandCard\n    {\n\n        /// <summary>\n        /// ???????????°?????¨????????????\n        /// </summary>\n        int[] hand_card_num = new int[9];\n        string[] hand_card_color = new string[9];\n\n        /// <summary>\n        /// ????????????????¨????\n        /// </summary>\n        //public enum Color\n        //{\n        //    red,\n        //    blue,\n        //    gleen\n\n        //}\n\n        /// <summary>\n        /// ?????????????????????\n        /// ??????????????????\n        /// </summary>\n        /// <param name=\"card_num\">?????????????????????????????????????????????</param>\n        /// <param name=\"card_color\">???????????????????????????????????????</param>\n        public HandCard(string card_num,string card_color)\n        {\n\n            var sprit_num=card_num.Split(' ');\n            var sprit_color=card_color.Split(' ');\n\n            for(int i=0;i<sprit_num.Length;i++)\n                hand_card_num[i] = int.Parse(sprit_num[i]);\n\n            for (int i = 0; i < sprit_color.Length; i++)\n                hand_card_color[i] = sprit_color[i] ;\n        }\n\n        /// <summary>\n        /// ????????????????????¶?????????????????????????????§????????????\n        /// </summary>\n        /// <returns></returns>\n        public bool judge_math()\n        {\n            //????????????\n            var color = new string[]{\"R\", \"G\", \"B\"};\n            \n            //??????????????¨?????????\n            string judge_string=\"\";\n\n            foreach (string s in color)\n            {\n                foreach (int c in color_filtering(s))\n                    judge_string += c.ToString();\n                \n                for(var i=1;i<=9;i++)\n                {\n                    if (i < 7)\n                    {\n\n                        string win = (i).ToString() + (i + 1).ToString() + (i + 2).ToString();\n\n                        //??£?????????\n                        if (0 <= judge_string.IndexOf(win))\n                            return true;\n                    }\n\n                    //???????????????\n                    if (0 <= judge_string.IndexOf(i.ToString() + i.ToString() + i.ToString()))\n                        return true;\n\n                }\n\n            }\n            return false;\n\n            \n\n        }\n\n        /// <summary>\n        /// ????????????????????????????????°??????????????§??????\n        /// </summary>\n        /// <param name=\"color\">??????????????? R,G,B?????????</param>\n        /// <returns>?????????????????????List</returns>\n        private List<int> color_filtering(string  color)\n        {\n            //?????????????????????????????????????????????\n            List<int> math_num = new List<int>();\n\n            //???????????????????????????????????§?????´???????????????????????????????????????????????????????????\\??????\n            for(var i=0;i<hand_card_color.Length;i++)\n                if(hand_card_color[i]==color)\n                    math_num.Add(hand_card_num[i]);\n\n            //???????????????????????????\n            math_num.Sort();\n            return math_num;\n        }\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace ConsoleApplication2\n{\n    //RUMMY\n\n    class Program\n    {\n        /// <summary>\n        /// ????????°????????¨????????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int loopCount = int.Parse(Console.ReadLine());\n            \n            for(int i = 0; i < loopCount; i++)\n            {\n                int[] cardNums = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();\n\n                string[] cardColor = Console.ReadLine().Split(' ');\n\n                List<Card> cards = new List<Card>();\n\n                for (int cardCount = 0; cardCount < cardNums.Length; cardCount++)\n                    cards.Add(new Card(cardNums[cardCount], cardColor[cardCount]));\n\n                //??????????????????????°?????????????????????????\n                SortCard(cards);\n\n                //?????£???????????????????????????\n                CheckCombinationWin(cards);\n\n                //?????????????????????????????¨??????????¢????\n                Console.WriteLine(CheckUsedCard(cards) ? \"1\" : \"0\");\n            }\n        }\n        /// <summary>\n        /// ??????????????°???????°??????????????????????\n        /// </summary>\n        private static void SortCard(List<Card> cards)\n        {\n            for (int i = 0; i < cards.Count - 1; i++)\n            {\n                // ???????????????????????????????????????\n                for (int j = cards.Count - 1; j > i; j--)\n                {\n                    // ??????????????§????????¨?????????????????\\???????????????\n                    if (cards[j].number < cards[j - 1].number)\n                    {\n                        Card card = cards[j];\n                        cards[j] = cards[j - 1];\n                        cards[j - 1] = card;\n                    }\n                }\n            }\n        }\n\n        /// <summary>\n        /// ??¨???????????????????????¨?????????????¢????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        /// <returns></returns>\n        private static bool CheckUsedCard(List<Card> cards)\n        {\n            bool isWin = true;\n\n            foreach (Card card in cards)\n                if (!card.isUsed)\n                    isWin = false;\n\n            return isWin;\n        }\n\n        /// <summary>\n        /// ????????£?????????????????????????????????????????£????????????????????¨???????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        private static void CheckCombinationWin(List<Card> cards)\n        {\n            for(int x = 0; x < 2; x++)\n            {\n                //??£???\n                for (int i = 0; i < cards.Count - 2; i++)\n                {\n                    for (int j = i + 1; j < cards.Count - 1; j++)\n                    {\n                        for (int k = j + 1; k < cards.Count; k++)\n                        {\n                            //????????????????????????????????¨???????¢????\n                            if (IsUsedCard(cards[i], cards[j], cards[k]))\n                            {\n                                //??????????????????????????????????????????????????£????????????\n                                if (IsSameColor(cards[i], cards[j], cards[k]))\n                                {\n                                    if (x == 0)\n                                    {\n                                        //??£????????§??????\n                                        //????±?????????????????????????????????£???????????£????????????\n                                        if (cards[i].number == cards[j].number - 1 && cards[i].number == cards[k].number - 2)\n                                        {\n                                            cards[i].isUsed = true;\n                                            cards[j].isUsed = true;\n                                            cards[k].isUsed = true;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        //?????????????????§??????\n                                        //????±????3??????????????????????????????????????£????????????\n                                        if (cards[i].number == cards[j].number && cards[i].number == cards[k].number)\n                                        {\n                                            cards[i].isUsed = true;\n                                            cards[j].isUsed = true;\n                                            cards[k].isUsed = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        \n\n        /// <summary>\n        /// ????????????????????????????????¨???????¢????\n        /// </summary>\n        /// <param name=\"card1\"></param>\n        /// <param name=\"card2\"></param>\n        /// <param name=\"card3\"></param>\n        /// <returns></returns>\n        private static bool IsUsedCard(Card card1, Card card2, Card card3)\n        {\n            bool isUsed = false;\n\n            if (!card1.isUsed && !card2.isUsed && !card3.isUsed)\n                isUsed = true;\n\n            return isUsed;\n        }\n\n        /// <summary>\n        /// ???????????????????????¨????????????????¢????\n        /// </summary>\n        /// <param name=\"card1\"></param>\n        /// <param name=\"card2\"></param>\n        /// <param name=\"card3\"></param>\n        /// <returns></returns>\n        private static bool IsSameColor(Card card1, Card card2, Card card3)\n        {\n            bool isSameColor = false;\n\n            if (card1.color == card2.color && card2.color == card3.color)\n                isSameColor = true;\n\n            return isSameColor;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ??????????????°???\n        /// </summary>\n        public int number { get; set; }\n        /// <summary>\n        /// ???????????????\n        /// </summary>\n        public string color { get; set; }\n        /// <summary>\n        /// ?????¨??????????????°\n        /// </summary>\n        public bool isUsed { get; set; }\n\n        /// <summary>\n        /// ?????????????????????\n        /// </summary>\n        /// <param name=\"num\">???????????????</param>\n        /// <param name=\"color\">????????????</param>\n        public Card(int num, string color)\n        {\n            this.number = num;\n            this.color = color;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n\n            List<int> resultlist = new List<int>();\n\n            int datasetnum = int.Parse(Console.ReadLine());\n\n            int result = 1;\n\n            for (int i = 0; i < datasetnum; i++)\n            {\n                //????????????????????????????????????\n                List<int> redlist = new List<int>();\n                List<int> bulelist = new List<int>();\n                List<int> greenlist = new List<int>();\n\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //??????????????????????????????????????????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n                    switch (cardcolor[j])\n                    {\n\n                        case \"R\":\n                            redlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"G\":\n                            greenlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"B\":\n                            bulelist.Add(int.Parse(cardnum[j]));\n                            break;\n\n                    }\n                }\n\n                //??????????????????????????????????????????\n                var red = new Red(redlist);\n                var bule = new Bule(bulelist);\n                var green = new Green(greenlist);\n\n\n                if (red.redresult() && bule.redresult() && green.redresult()) result = 1;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach (var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n        }\n\n    }\n\n\n\n    class Red\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Red(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n    class Green\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Green(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class Bule\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n        #region ?????????????????????\n        public Bule(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class CardControl\n    {\n        /// <summary>\n        /// ???????????¶????????´?????????????????????\n        /// </summary>\n        /// <param name=\"card\"></param>\n        /// <returns></returns>\n        public bool CheckWin(int[] card)\n        {\n            bool result = true;\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += card[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (card[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (card[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != card[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = card[i];\n                    else if (serialtemp > card[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < card[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n    }\n\n\n}"
  },
  {
    "language": "C#",
    "code": "/* Rummy (????????????????????????????????´???) */\n\nusing rummy_card;\nusing System;\n\nnamespace rummy_card\n{\n    public enum ColorOfCard\n    {\n        WHITE,RED,GREEN,BLUE\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = ReadNumber();\n\n            for(int i = 0; i < n; i++)\n            {\n                Hand rummyHand = new Hand();\n                rummyHand.Display();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n                \n            }\n\n        }\n        \n\n        /// <summary>\n        /// ?¨?????????????????????????????????´??°??????????????¨???????????????????????????\n        /// AOJ????????§??????????????????\n        /// </summary>\n        /// <returns>??????????????????????????°????????????????????£?????´??°???</returns>\n        private static int ReadNumber()\n        {\n            int n = 0;\n            if(!int.TryParse( Console.ReadLine() , out n))\n            {\n                /*???????????±??????????????\\????????? ?????????????????´???????????????0?????????*/\n                Console.WriteLine(\"error:ReadNumber\");\n            }\n            return n;\n        }\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public ColorOfCard _color = ColorOfCard.WHITE;\n\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int _number = 0 ;\n\n    /// <summary>\n    /// ????????????ID\n    /// ??°??????????????????????????????4??????????????§??????????????§1???4???????????????????????¨??????\n    /// </summary>\n    public int _id = 0;\n\n    \n    /// <summary>\n    /// ?????????????????????\n    /// Hand???????????????????????????????????°??????\n    /// ????????´???_id???Hand???????????????\n    /// </summary>\n    public Card(string color,string number)\n    {\n        _color = GetColorOfCard(color);\n        _number = int.Parse(number);\n    }\n\n    private ColorOfCard GetColorOfCard(string color)\n    {\n        switch (color)\n        {\n            case \"R\":\n                return ColorOfCard.RED;\n\n            case \"G\":\n                return ColorOfCard.GREEN;\n\n            case \"B\":\n                return ColorOfCard.BLUE;\n\n            default:\n                Console.WriteLine(\"error:GetColor\");\n                return ColorOfCard.WHITE;\n        }\n    }\n}\n\n/// <summary>\n/// ???????????????\n/// 9??????????????????????????¨???????????? ?????????????????§??????\n/// </summary>\npublic class Hand\n{\n    Card[] _cards = new Card[9];\n\n    /// <summary>\n    /// ?????????????????????\n    /// ?????°?????????AOJ????????¨?????????\n    /// </summary>\n    public Hand()\n    {\n        string[] number = Console.ReadLine().Split(' ');\n        string[] color = Console.ReadLine().Split(' ');\n\n        for(int i = 0; i < 9; i++)\n        {\n            _cards[i] = new Card(color[i],number[i]);\n            int ID = 1;                                 //???????????????_id\n\n            for(int j = 0; j < i; j++)\n            {\n                if( _cards[j]._color  == _cards[i]._color &&\n                    _cards[j]._number == _cards[i]._number)\n                {\n                    ID++;       //?????¨??°???????????´???????????????????????????????????????????????????ID?????????????????????????????????\n                }\n            }\n            _cards[i]._id = ID;\n        }\n        Sort();                 //??????????????±????????????????????£?????????????????????????????????\n    }\n\n    /// <summary>\n    /// ???????????¶????????¨??????????????????????????°??¨???\n    /// </summary>\n    internal void Display()\n    {\n        for(int i = 0; i < 9; i++)\n        {\n            string str = \"W\";\n\n            switch (_cards[i]._color)\n            {\n                case ColorOfCard.RED:\n                    str = \"R\";\n                    break;\n\n                case ColorOfCard.GREEN:\n                    str = \"G\";\n                    break;\n\n                case ColorOfCard.BLUE:\n                    str = \"B\";\n                    break;\n\n                default:\n                    /* str = \"W\" */\n                    break;\n            }\n\n            Console.Write( str + _cards[i]._number + \"({0}) \" ,_cards[i]._id);\n        }\n        Console.WriteLine();\n    }\n\n    internal bool IsWinner()\n    {\n        /*?????£????????????true ?????£?????????????????????false*/\n        bool[] flag = new bool[9];\n\n        for(int i = 0; i < 9; i++)\n        {\n\n\n            if (!flag[i])   //??°??????????????????????????????????????§??????????????????????????????????????????????????????????????¨???????????????\n            {\n                MeldGroup(flag, i);\n            }\n\n            if (!flag[i])   //???????????£????????§????????????????????????\n            {\n                MeldRun(flag, i);\n            }\n\n            if (!flag[i])\n            {\n\n                return false;       //??????????????±??????????????????????????????????????£??????????????§?????????                            \n            }\n        }\n        /*false???????????????for???????????????????????´?????¨??????flag???true*/\n\n        return true;\n    }\n\n    /// <summary>\n    /// ????????°?????¶????????¨??? ???????????°??¨\n    /// </summary>\n    /// <param name=\"flag\"></param>\n    private void ShowFlag(bool[] flag)\n    {\n        foreach(bool x in flag)\n        {\n            Console.Write( x ? \"1 \" : \"0 \");\n        }\n        Console.WriteLine();\n    }\n\n    /// <summary>\n    /// ????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldRun(bool[] flag, int i)\n    {\n        for (int j = i+1; j < 9; j++)    //???????????£?????????????????????????????§??°??????1??§????????????????????????????????????\n        {\n            if(_cards[i]._color == _cards[j]._color && \n               _cards[i]._number + 1 == _cards[j]._number &&\n                    !flag[j] )\n            {\n                for (int k = j + 1; k < 9; k++)     //1??§?????????????????????????????£?????????????§????2??§????????????????????????????????????\n                {\n                    if (_cards[i]._color == _cards[k]._color &&\n                       _cards[i]._number + 2 == _cards[k]._number &&\n                            !flag[k])\n                    {\n                        flag[i] = true;\n                        flag[j] = true;\n                        flag[k] = true;\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??°???????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldGroup(bool[] flag, int i)\n    {\n        if(_cards[i]._color == _cards[i+2]._color && _cards[i]._number == _cards[i+2]._number)\n        {\n            flag[i]   = true;\n            flag[i+1] = true;\n            flag[i+2] = true;\n        }\n    }\n\n    /// <summary>\n    /// ???????????´????????????????????????\n    /// </summary>\n    internal void Sort()\n    {\n        Array.Sort( _cards, (a, b) => Compare(a, b) );\n    }\n\n    /// <summary>\n    /// 2?????????????????? ??? > ??°??? > ID ?????????????????§????????????\n    /// </summary>\n    /// <param name=\"a\">??????????±?</param>\n    /// <param name=\"b\">??????????±?</param>\n    /// <returns></returns>\n    private int Compare(Card a, Card b)\n    {\n        int iCompare = a._color.CompareTo(b._color);    //??????????????§????????????\n        if (iCompare != 0)\n        {\n            return iCompare ;              \n        }\n        else                        //?????????????????°??????????????§????????????\n        {\n            if( a._number - b._number != 0)\n            {\n                return a._number - b._number;\n            }\n            else                    //??°??????????????????id???????????§????????????\n            {\n                return a._id - b._id;\n            }\n        }\n        \n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace rummy_card\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = ReadNumber();\n\n            for(int i = 0; i < n; i++)\n            {\n                Hand rummyHand = new Hand();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n            }\n\n        }\n        \n\n        /// <summary>\n        /// ?¨?????????????????????????????????´??°??????????????¨???????????????????????????\n        /// AOJ????????§??????????????????\n        /// </summary>\n        /// <returns>??????????????????????????°????????????????????£?????´??°???</returns>\n        private static int ReadNumber()\n        {\n            int n = 0;\n            if(!int.TryParse( Console.ReadLine() , out n))\n            {\n                /*???????????±??????????????\\????????? ????????¨??????????????????0??¨??????*/\n                Console.WriteLine(\"error:ReadNumber\");\n            }\n            return n;\n        }\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public string _color = null ;\n\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int _number = 0 ;\n\n    /// <summary>\n    /// ????????????ID\n    /// ??°??????????????????????????????4??????????????§??????????????§1???4???????????????????????¨??????\n    /// </summary>\n    public int _id = 0;\n\n    \n    /// <summary>\n    /// ?????????????????????\n    /// Hand???????????????????????????????????°??????\n    /// ????????´???_id???Hand???????????????\n    /// </summary>\n    public Card(string color,string number)\n    {\n        _color = color;\n        _number = int.Parse(number);\n    }\n\n\n}\n\n/// <summary>\n/// ???????????????\n/// 9????????§???????????????????????¨????????????\n/// </summary>\npublic class Hand\n{\n    Card[] _cards = new Card[9];\n\n    /// <summary>\n    /// ?????????????????????\n    /// ?????°?????????AOJ????????¨?????????\n    /// </summary>\n    public Hand()\n    {\n        string[] number = Console.ReadLine().Split(' ');\n        string[] color = Console.ReadLine().Split(' ');\n\n        for(int i = 0; i < 9; i++)\n        {\n            _cards[i] = new Card(color[i],number[i]);\n            int ID = 1;                                 //???????????????_id\n\n            for(int j = 0; j < i; j++)\n            {\n                if( _cards[j]._color  == _cards[i]._color &&\n                    _cards[j]._number == _cards[i]._number)\n                {\n                    ID++;       //?????¨??°???????????´???????????????????????????????????????????????????ID?????????????????????????????????\n                }\n            }\n            _cards[i]._id = ID;\n        }\n        Sort();                 //??????????????±????????????????????£?????????????????????????????????\n    }\n\n    /// <summary>\n    /// ???????????¶????????¨??????????????????????????°??¨???\n    /// </summary>\n    internal void Display()\n    {\n        for(int i = 0; i < 9; i++)\n        {\n            Console.Write(_cards[i]._color + _cards[i]._number + \"({0}) \" ,_cards[i]._id);\n        }\n        Console.WriteLine();\n    }\n\n    internal bool IsWinner()\n    {\n        /*?????£????????????true ?????£?????????????????????false*/\n        bool[] flag = new bool[9];\n\n        for(int i = 0; i < 9; i++)\n        {\n            if (!flag[i])   //??°??????????????????????????????????????§??????????????????????????????????????????????????????????????¨???????????????\n            {\n                MeldGroup(flag, i);\n            }\n\n            if (!flag[i])   //???????????£????????§????????????????????????\n            {\n                MeldRun(flag, i);\n            }\n\n            if (!flag[i])\n            {\n                return false;   //??????????????§???????????£?????????????????¶????????????????????????\n            }\n        }\n        /*false???????????????for???????????????????????´?????¨??????flag???true*/\n        return true;\n    }\n\n    private void MeldRun(bool[] flag, int i)\n    {\n        bool isRunable = false;\n\n        for (int j = i+1; j < 9; j++)    //??????????????§??°??????1??§????????????????????????????????????\n        {\n            if(_cards[i]._color == _cards[j]._color && _cards[i]._number + 1 == _cards[j]._number)\n            {\n                isRunable = true;\n            }\n\n            if (isRunable)              //1??§?????????????????????????????£?????????2??§????????????????????????????????????\n            {\n                for(int k = j+1; k < 9; k++)\n                {\n                    if(_cards[i]._color == _cards[k]._color && _cards[i]._number + 2 == _cards[k]._number)\n                    {\n                        flag[i] = true;\n                        flag[j] = true;\n                        flag[k] = true;\n                    }\n                }\n\n            }\n        }\n    }\n\n    private void MeldGroup(bool[] flag, int i)\n    {\n        if(_cards[i]._id >= 3)\n        {\n            flag[i]   = true;\n            flag[i+1] = true;\n            flag[i+2] = true;\n        }\n    }\n\n    /// <summary>\n    /// ???????????´????????????????????????\n    /// </summary>\n    internal void Sort()\n    {\n        Array.Sort( _cards, (a, b) => Compare(a, b) );\n    }\n\n    /// <summary>\n    /// 2?????????????????? ??? > ??°??? > ID ?????????????????§????????????\n    /// </summary>\n    /// <param name=\"a\">??????????±?</param>\n    /// <param name=\"b\">??????????±?</param>\n    /// <returns></returns>\n    private int Compare(Card a, Card b)\n    {\n        int iCompare = b._color.CompareTo(a._color);    //??????????????§????????????\n        if (iCompare != 0)\n        {\n            return iCompare ;              \n        }\n        else                        //?????????????????°??????????????§????????????\n        {\n            if( a._number - b._number != 0)\n            {\n                return a._number - b._number;\n            }\n            else                    //??°??????????????????id???????????§????????????\n            {\n                return b._id - a._id;\n            }\n        }\n        \n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            List<int> resultlist = new List<int>();\n\n            int datasetnum = int.Parse(Console.ReadLine());\n\n            int result = 1;\n\n            for (int i = 0; i < datasetnum; i++)\n            {\n                //???????????????????????§??????????????????\n                List<Tuple<string, int>> userinput = new List<Tuple<string, int>>();\n\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //???????????????Tuple???????????????????´???????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n                    Tuple<string, int> card = new Tuple<string, int>(cardcolor[j], int.Parse(cardnum[j]));\n\n                    userinput.Add(card);\n                }\n\n                List<int> redlist = SearchColor(userinput, \"R\");\n                List<int> greenlist = SearchColor(userinput, \"G\");\n                List<int> bulelist = SearchColor(userinput, \"B\");\n\n                var resultcheck = new CardControl();\n\n                //???????????¶???????????????????????´??????1???????´??????????\n                if (resultcheck.CheckWin(redlist) && resultcheck.CheckWin(greenlist) && resultcheck.CheckWin(bulelist)) result = 1;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach (var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n        }\n\n        private static List<int> SearchColor(List<Tuple<string, int>> list, string color)\n        {\n            List<int> bycolor = new List<int>();\n\n            List<Tuple<string, int>> matchlist = list.FindAll(x => x.Item1 == color);\n\n            foreach (var num in matchlist)\n            {\n                bycolor.Add(num.Item2);\n            }\n\n            return bycolor;\n        }\n\n    }\n\n\n    class CardControl\n    {\n        int temp = -1;\n        int serialtemp = 2;\n\n        /// <summary>\n        /// ???????????¶????????´?????????????????????\n        /// </summary>\n        /// <param name=\"card\"></param>\n        /// <returns></returns>\n        public bool CheckWin(List<int> card)\n        {\n            //??????????????°???3??§?????????????????°??§???????????´??????false?????????\n            if (card.Count % 3 != 0) return false;\n\n            //??????????????????0?????´??????true?????????\n            if (card.Count == 0) return true;\n\n\n            //??????????????????????°????????????????????????????\n            card.Sort();\n\n            bool result = true;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            for (int i = 0; i < card.Count; i++)\n            {\n                var sumnum = card.FindAll(x => x == card[i]);\n\n\n                switch (sumnum.Count)\n                {\n                    //??£????????????????¢???????????????????\n                    case 1:\n                    case 2:\n                        serialcounter = OrderProcess(card[i], serialcounter, sumnum.Count);\n                        break;\n\n                    //?????°???3????????´??????????????¢??¨????????±???\n                    case 3:\n                        peanum += 1;\n                        break;\n\n                    //?????°???4????????´??????????????¢+??£????????????????¢???????????????????\n                    case 4:\n                        peanum += 1;\n                        serialcounter = OrderProcess(card[i], serialcounter, 1);\n                        break;\n                }\n\n                //??£???????????????????????????????????£???????????¢??¨????????±???\n                if (serialcounter == 3)\n                {\n                    peanum += serialtemp;\n                    serialcounter = 0;\n                    serialtemp = 2;\n\n                    if (sumnum.Count == 2) serialcounter = 1;\n                }\n\n                //?????°????????????????????´???????????°?????????????¬????????????§for?????????????????????????????????\n                i += sumnum.Count - 1;\n\n            }\n\n            //?????????????????°???3??§?????£?????°??¨?????¢??°???????????´?????´???false\n            if (card.Count / 3 > peanum) result = false;\n\n            return result;\n        }\n\n        //??£??????????????????????????°????????????\n        public int OrderProcess(int num, int counter, int peanum)\n        {\n            if (serialtemp != peanum) serialtemp = 1;\n\n            if (this.temp + 1 == num)\n            {\n                counter++;\n                temp = num;\n            }\n            else\n            {\n                temp = num;\n                counter = 1;\n            }\n\n            return counter;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            //??????????????°????¨????\n            var read_text = Console.ReadLine();\n            int round_num = int.Parse(read_text);\n\n            //??????????????°???????????????\n            for(var i = 0;i<round_num;i++)\n            {\n                var read_num = Console.ReadLine();\n                var read_color = Console.ReadLine();\n\n                var HandCard_obj = new HandCard(read_num, read_color);\n\n                Console.WriteLine(HandCard_obj.judge_math() ? \"1\":\"0\");\n\n            }\n\n        }\n    }\n\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    class HandCard\n    {\n\n        /// <summary>\n        /// ???????????°?????¨????????????\n        /// </summary>\n        int[] hand_card_num = new int[9];\n        string[] hand_card_color = new string[9];\n\n        /// <summary>\n        /// ????????????????¨????\n        /// </summary>\n        //public enum Color\n        //{\n        //    red,\n        //    blue,\n        //    gleen\n\n        //}\n\n        /// <summary>\n        /// ?????????????????????\n        /// ??????????????????\n        /// </summary>\n        /// <param name=\"card_num\">?????????????????????????????????????????????</param>\n        /// <param name=\"card_color\">???????????????????????????????????????</param>\n        public HandCard(string card_num,string card_color)\n        {\n\n            var sprit_num=card_num.Split(' ');\n            var sprit_color=card_color.Split(' ');\n\n            for(int i=0;i<card_num.Length;i++)\n                hand_card_num[i] = int.Parse(sprit_num[i]);\n\n            for (int i = 0; i < card_num.Length; i++)\n                hand_card_color[i] = sprit_color[i] ;\n        }\n\n        /// <summary>\n        /// ????????????????????¶?????????????????????????????§????????????\n        /// </summary>\n        /// <returns></returns>\n        public bool judge_math()\n        {\n            //????????????\n            var color = new string[]{\"R\", \"G\", \"B\"};\n            \n            //??????????????¨?????????\n            string judge_string=\"\";\n\n            foreach (string s in color)\n            {\n                foreach (int c in color_filtering(s))\n                    judge_string += c.ToString();\n                \n                for(var i=1;i<=9;i++)\n                {\n                    if (i < 7)\n                    {\n\n                        string win = (i).ToString() + (i + 1).ToString() + (i + 2).ToString();\n\n                        //??£?????????\n                        if (0 <= judge_string.IndexOf(win))\n                            return true;\n                    }\n\n                    //???????????????\n                    if (0 <= judge_string.IndexOf(i.ToString() + i.ToString() + i.ToString()))\n                        return true;\n\n                }\n\n            }\n            return false;\n\n            \n\n        }\n\n        /// <summary>\n        /// ????????????????????????????????°??????????????§??????\n        /// </summary>\n        /// <param name=\"color\">??????????????? R,G,B?????????</param>\n        /// <returns>?????????????????????List</returns>\n        private List<int> color_filtering(string  color)\n        {\n            //?????????????????????????????????????????????\n            List<int> math_num = new List<int>();\n\n            //???????????????????????????????????§?????´???????????????????????????????????????????????????????????\\??????\n            for(var i=0;i<hand_card_color.Length;i++)\n                if(hand_card_color[i]==color)\n                    math_num.Add(hand_card_num[i]);\n\n            //???????????????????????????\n            math_num.Sort();\n            return math_num;\n        }\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\n\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string inputT = Console.ReadLine();\n            int T = int.Parse(inputT);\n            int win = 0;\n            int[,] cn = new int[3, 9];\n\n            for (int i = 0; i < T; i++)\n            {\n                string[] inputnumber = Console.ReadLine().Split(' ');\n                string[] inputcolor = Console.ReadLine().Split(' ');\n\n                for (int j = 0; j < 9; j++) //RGB*(1???9)?????????????????´?????????1??\\????¶????\n                {\n                    string color = inputcolor[j];\n                    int number = int.Parse(inputnumber[j]);\n                    for (int L = 1; L <= 9; L++)\n                    {\n                        if (color == \"R\" && number == L)\n                        {\n                            cn[0, number] += 1;\n                        }\n                        else if (color == \"G\" && number == L)\n                        {\n                            cn[1, number] += 1;\n                        }\n                        else if (color == \"B\" && number == L)\n                        {\n                            cn[2, number] += 1;\n                        }\n                    }\n                }\n\n                        for (int k = 0; k < 3; k++) //win?????¶\n                        {\n                            for (int h = 0; h < 9; h++)\n                            {\n                                if (cn[k,h] >= 3) //????????°????????¨???\n                                {\n                                    win += 1; //?????????????????????\n                                    cn[k, h] = cn[k, h] - 3; //???????????????\n                                    Console.WriteLine(\"a\");\n                                }\n                                else if ((cn[k,h] >= 1) && (cn[k,h - 1] >= 1) && (cn[k,h - 2] >= 1)) //??£????????¨???\n                                {\n                                    win += 1; // ?????????????????????\n                                    cn[k, h] = cn[k, h] - 1; // ????????????\n                                    cn[k, h - 1] = cn[k, h - 1] - 1;\n                                    cn[k, h - 2] = cn[k, h - 1] - 1;\n                                    Console.WriteLine(\"b\");\n                                }\n                            }\n\n                    }\n                if (win == 3)\n                Console.WriteLine(1);\n            }\n\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace ConsoleApp2\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // データセット数を取得\n            int dataSetCount = int.Parse(Console.ReadLine());\n\n            // データセット数分の繰り返し\n            for(int dsi = 0; dsi < dataSetCount; dsi++)\n            {\n                int[,] val = new int[3, 9];\n\n                int[] num = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);\n                string[] color = Console.ReadLine().Split(' ');\n\n                for(int i = 0; i < 9; i++)\n                {\n                    switch(color[i])\n                    {\n                        case \"R\": val[0, num[i] - 1]++; break;\n                        case \"G\": val[1, num[i] - 1]++; break;\n                        case \"B\": val[2, num[i] - 1]++; break;\n                    }\n                }\n\n                for (int row = 0; row < 3; row++)\n                {\n                    for (int col = 0; col < 9; col++)\n                    {\n                        if(col < 7)\n                        {\n                            // 連続する3枚を除外\n                            while (val[row, col] > 0 && val[row, col + 1] > 0 && val[row, col + 2] > 0)\n                            {\n                                val[row, col]--;\n                                val[row, col + 1]--;\n                                val[row, col + 2]--;\n                            }\n                        }\n\n                        // 同数3枚を除外\n                        if (val[row, col] >= 3) val[row, col] -= 3;\n                    }\n                }\n\n                bool isOk = true;\n                for (int row = 0; row < 3; row++)\n                {\n                    for (int col = 0; col < 9; col++)\n                    {\n                        if (val[row, col] > 0) isOk = false;\n                    }\n                }\n\n                Console.WriteLine(isOk ? \"1\" : \"0\");\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            //??????????????°????¨????\n            var read_text = Console.ReadLine();\n            int round_num = int.Parse(read_text);\n\n            //??????????????°???????????????\n            for(var i = 0;i<round_num;i++)\n            {\n                var read_num = Console.ReadLine();\n                var read_color = Console.ReadLine();\n\n                var HandCard_obj = new HandCard(read_num, read_color);\n\n                Console.WriteLine(HandCard_obj.judge_math() ? \"1\":\"0\");\n\n            }\n\n        }\n    }\n\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    class HandCard\n    {\n\n        /// <summary>\n        /// ???????????°?????¨????????????\n        /// </summary>\n        int[] hand_card_num = new int[9];\n        string[] hand_card_color = new string[9];\n\n        /// <summary>\n        /// ????????????????¨????\n        /// </summary>\n        //public enum Color\n        //{\n        //    red,\n        //    blue,\n        //    gleen\n\n        //}\n\n        /// <summary>\n        /// ?????????????????????\n        /// ??????????????????\n        /// </summary>\n        /// <param name=\"card_num\">?????????????????????????????????????????????</param>\n        /// <param name=\"card_color\">???????????????????????????????????????</param>\n        public HandCard(string card_num,string card_color)\n        {\n\n            var sprit_num=card_num.Split(' ');\n            var sprit_color=card_color.Split(' ');\n\n            for(int i=0;i<card_num.Length;i++)\n                hand_card_num[i] = int.Parse(sprit_num[i]);\n\n            for (int i = 0; i < card_num.Length; i++)\n                hand_card_color[i] = sprit_color[i] ;\n        }\n\n        /// <summary>\n        /// ????????????????????¶?????????????????????????????§????????????\n        /// </summary>\n        /// <returns></returns>\n        public bool judge_math()\n        {\n            //????????????\n            var color = new string[]{\"R\", \"G\", \"B\"};\n            \n            //??????????????¨?????????\n            string judge_string=\"\";\n\n            foreach (string s in color)\n            {\n                foreach (int c in color_filtering(s))\n                    judge_string += c.ToString();\n                \n                for(var i=1;i<=9;i++)\n                {\n                    if (i < 7)\n                    {\n\n                        string win = (i).ToString() + (i + 1).ToString() + (i + 2).ToString();\n\n                        //??£?????????\n                        if (0 <= judge_string.IndexOf(win))\n                            return true;\n                    }\n\n                    //???????????????\n                    if (0 <= judge_string.IndexOf(i.ToString() + i.ToString() + i.ToString()))\n                        return true;\n\n                }\n\n            }\n            return false;\n\n            \n\n        }\n\n        /// <summary>\n        /// ????????????????????????????????°??????????????§??????\n        /// </summary>\n        /// <param name=\"color\">??????????????? R,G,B?????????</param>\n        /// <returns>?????????????????????List</returns>\n        private List<int> color_filtering(string  color)\n        {\n            //?????????????????????????????????????????????\n            List<int> math_num = new List<int>();\n\n            //???????????????????????????????????§?????´???????????????????????????????????????????????????????????\\??????\n            for(var i=0;i<hand_card_color.Length;i++)\n                if(hand_card_color[i]==color)\n                    math_num.Add(hand_card_num[i]);\n\n            //???????????????????????????\n            math_num.Sort();\n            return math_num;\n        }\n\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text.RegularExpressions;\nusing System.Collections;\nusing System.Linq;\n\nnamespace Program\n{\n    class Program\n    {\n        // ソートをするメソッド\n        private static void sort(List<string> card)\n        {\n            var list = card.Select(title => new { Name = title, Index = ToInt(title) })\n                .OrderBy(title => title.Index).Select(title => title.Name);\n\n            var sort = string.Join(\",\", list);\n            string[] sortColor = sort.Split(',');\n\n            for(int i = 0; i < sortColor.Length; i++)\n            {\n                for(int j = i + 1; j < sortColor.Length; j++)\n                {\n                    if(sortColor[i] == sortColor[j])\n                    {\n                        string temp = sortColor[j];\n                        sortColor[j] = sortColor[j - 1];\n                        sortColor[j - 1] = temp;\n                    }\n                }\n            }\n            card.Clear();\n            card.AddRange(sortColor);\n        }\n\n        //　文字列に含まれる数値を見つけ出す\n        private static int ToInt(string text)\n        {\n            return int.Parse(Regex.Replace(text, @\"[^0-9]\", \"\"));\n        }\n\n        // 数値とカラーが３つ同じものを見つけ出す\n        private static void NumberColorCheck(List<string> card)\n        {\n            for (int i = 0; i < card.Count;)\n            {\n                if (card.Count < 3)\n                {\n                    break;\n                }\n                if (i == card.Count - 2)\n                {\n                    break;\n                }\n\n                if (card[i] == card[i + 1])\n                {\n                    if (card[i + 1] == card[i + 2])\n                    {\n                        card.RemoveAt(i);\n                        card.RemoveAt(i);\n                        card.RemoveAt(i);\n                        i = 0;\n                    }\n                    else\n                    {\n                        i++;\n                    }\n                }\n                else\n                {\n                    i++;\n                }\n            }\n        }\n\n        // 同一数値かつカラーがRGB順か確認するメソッド\n        private static void SameNumberTurnColor(List<string> card)\n        {\n            for(int i = 0; i < card.Count;)\n            {\n                if (card.Count < 3)\n                {\n                    break;\n                }\n                if (i == card.Count - 2)\n                {\n                    break;\n                }\n\n                if (card[i].Substring(0, 1) == card[i + 1].Substring(0, 1))\n                {\n                    if (card[i].Substring(0, 1) == card[i + 2].Substring(0, 1))\n                    {\n                        if (card[i].Substring(1, 1) == \"R\" && card[i + 1].Substring(1, 1) == \"G\" && card[i + 2].Substring(1, 1) == \"B\")\n                        {\n                            card.RemoveAt(i);\n                            card.RemoveAt(i);\n                            card.RemoveAt(i);\n                            i = 0;\n                        }\n                        else\n                        {\n                            i++;\n                        }\n                    }\n                    else\n                    {\n                        i++;\n                    }\n                }\n                else\n                {\n                    i++;\n                }\n            }\n        }\n\n\n        static void Main(string[] args)\n        {\n            // データセット数を取得\n            var dataSetNumber = int.Parse(Console.ReadLine());\n\n            // 勝利条件を格納するリスト\n            var results = new List<int>();\n\n            // ９枚のカードの数値と色を取得\n\n            for (int i = 0; i < dataSetNumber; i++)\n            {\n                var cardNumColor = new List<string>();\n\n                int[] number = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);\n                string[] color = Console.ReadLine().Split(' ');\n                for (int j = 0; j < 9; j++)\n                {\n                    cardNumColor.Add(number[j].ToString() + color[j]);\n                }\n\n                // ソートする\n                sort(cardNumColor);\n\n                // 同一の数値とカラーを探す\n                NumberColorCheck(cardNumColor);\n\n                if (cardNumColor.Count >= 3)\n                {\n                    // 連番チェック\n                    var serial = new List<string>();\n\n                    for (int j = 0; j < cardNumColor.Count; j++)\n                    {\n                        var memory1 = 0;\n                        var memory2 = 0;\n                        bool rgbJudg = true;\n                        bool flg1 = true;\n                        bool flg2 = true;\n                        serial.Add(cardNumColor[0]);\n                        for (int z = 1; z < cardNumColor.Count; z++)\n                        {\n                            if (int.Parse(cardNumColor[0].Substring(0, 1)) + 1 == int.Parse(cardNumColor[z].Substring(0, 1)) && flg1 == true)\n                            {\n                                if (cardNumColor[0].Substring(1, 1) == cardNumColor[z].Substring(1, 1))\n                                {\n                                    serial.Add(cardNumColor[z]);\n                                    memory1 = z;\n                                    flg1 = false;\n                                }\n                                if(cardNumColor[0].Substring(1, 1) == \"R\" && cardNumColor[z].Substring(1, 1) == \"G\")\n                                {\n                                    serial.Add(cardNumColor[z]);\n                                    memory1 = z;\n                                    flg1 = false;\n                                    rgbJudg = false;\n                                }\n                            }\n                            if (int.Parse(cardNumColor[0].Substring(0, 1)) + 2 == int.Parse(cardNumColor[z].Substring(0, 1)) && flg2 == true)\n                            {\n                                if (cardNumColor[0].Substring(1, 1) == cardNumColor[z].Substring(1, 1))\n                                {\n                                    serial.Add(cardNumColor[z]);\n                                    memory2 = z;\n                                    flg2 = false;\n                                }\n                                if (cardNumColor[0].Substring(1, 1) == \"R\" && cardNumColor[z].Substring(1, 1) == \"B\" && rgbJudg == false)\n                                {\n                                    serial.Add(cardNumColor[z]);\n                                    memory2 = z;\n                                    flg2 = false;\n                                }\n                            }\n                            if (serial.Count >= 3)\n                            {\n                                cardNumColor.RemoveAt(0);\n                                cardNumColor.RemoveAt(memory1 - 1);\n                                cardNumColor.RemoveAt(memory2 - 2);\n                                serial.RemoveAt(0);\n                                serial.RemoveAt(0);\n                                serial.RemoveAt(0);\n                                z = cardNumColor.Count;\n                            }\n                        }\n                        if (flg1 == true || flg2 == true)\n                        {\n                            serial.Clear();\n                            cardNumColor.RemoveAt(0);\n                        }\n                    }\n\n                }\n\n                if(cardNumColor.Count >= 3)\n                {\n                    // 同一の数値でカラーがRGB順を探す\n                    SameNumberTurnColor(cardNumColor);\n                }\n\n\n                // 勝利条件を満たしているか判定\n                if (cardNumColor.Count == 0)\n                {\n                    results.Add(1);\n                }\n                else\n                {\n                    results.Add(0);\n                }\n            }\n\n            // 勝利条件の結果を出力\n            foreach (int result in results)\n            {\n                Console.WriteLine(result);\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "C#",
    "code": "/*?????? rummy*/\n/*?£?????????? 2??????*/\n\nusing System;\n\nnamespace rummy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());  //???????????????????????°\n\n            for(int i = 0; i < n; i++)\n            {\n                Rummy rummyHand = new Rummy();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Rummy\n    {\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// [0]???????????????????¨??????°\n        /// </summary>\n        private int[] _red = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        private int[] _green = new int[10];\n        /// <summary>\n        /// ?????????????????????????????£????????????\n        /// </summary>\n        private int[] _blue = new int[10];\n\n        /// <summary>\n        /// ?????????????????????\n        /// 2?????????????????????????????????????????????????????????????????????????????£??????????????°??????\n        /// </summary>\n        public Rummy()\n        {\n            string[] number = Console.ReadLine().Split(' ');\n            string[] color = Console.ReadLine().Split(' ');\n\n            for(int i = 0; i < 9; i++)\n            {\n                CountCard(number[i],color[i]);\n            }\n        }\n\n        /// <summary>\n        /// ?????????????????\\???????????°?????????????????¢??????\n        /// </summary>\n        /// <param name=\"num\">??????????????????????????°???</param>\n        /// <param name=\"color\">???????????????</param>\n        private void CountCard(string num, string color)\n        {\n            switch (color)\n            {\n                case \"R\":\n                    _red[int.Parse(num)]++;\n                    _red[0]++;\n                    break;\n\n                case \"G\":\n                    _green[int.Parse(num)]++;\n                    _green[0]++;\n                    break;\n\n                case \"B\":\n                    _blue[int.Parse(num)]++;\n                    _blue[0]++;\n                    break;\n\n                default:\n                    Console.WriteLine(\"error.\");\n                    break;\n            }\n        }\n\n        /// <summary>\n        /// ???????????¶????????¨????????????\n        /// ??????????????°??¨???\n        /// </summary>\n        internal void Display()\n        {\n            Console.WriteLine(\"??? ?¨? 1 2 3 4 5 6 7 8 9\");\n\n            Console.Write(\"??? \");\n            DisplaySuit(_red);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_green);\n\n            Console.Write(\"??? \");\n            DisplaySuit(_blue);\n\n        }\n\n        /// <summary>\n        /// ????????¨??????????????¶????????¨????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        private void DisplaySuit(int[] cards)\n        {\n            for(int i = 0; i <= 9; i++)\n            {\n                Console.Write(\" \" + cards[i]);\n            }\n            Console.WriteLine();\n        }\n\n        /// <summary>\n        /// ????????????????????¶????????????????????????\n        /// </summary>\n        /// <returns>3?????¨??????????????????????????°true</returns>\n        internal bool IsWinner()\n        {\n            if (JudgeColor(_red) && JudgeColor(_green) && JudgeColor(_blue))\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n\n        /// <summary>\n        /// ????????????????????????????????¶????????????????????????\n        /// </summary>\n        /// <param name=\"cards\"></param>\n        /// <returns>????????????????????°true</returns>\n        private bool JudgeColor(int[] cards)\n        {\n            for(int i = 1; i <= 9; i++)\n            {\n                /*??????????????????????????¨???????????????*/\n                if(cards[i] >= 3)   \n                {\n                    cards[i] -= 3;\n                    cards[0] -= 3;\n\n                }//??????????????????4?????\\???????????§??????????????????2?????\\????????????????????¨?????????\n\n                /*??£?????§?????????????????????i???8??\\?????§????????????(??°??????10??\\???????????????????????¨?????????)*/\n                if (i < 8)\n                {\n                    /*[i][i+1][i+2]???[i]????????°???????????????[i]???0??????nop??¨???????????¨*/\n\n                    cards[0] -= 3 * cards[i];\n                    cards[i + 2] -= cards[i];\n                    cards[i + 1] -= cards[i];\n                    cards[i] = 0;\n                    /*?????°????????????????????£???????????°????????¶?????????????????????????????£???*/\n\n                    if (cards[i + 1] < 0 || cards[i + 2] < 0)\n                    {\n                        return false;\n                    }\n\n                    \n                }\n\n                if (cards[0] == 0)  //??????????????§????????¨???????????????????????°\n                {\n                    return true;\n                }\n                else\n                {\n                    /* nop ?????????????¶???? */\n                }\n            }//for????????????????????§\n\n            /*???????????????????????????????????£???????????°?????¶??????????????????*/\n            return false;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace \n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "/* Rummy (????????????????????????????????´???) */\n\nusing System;\n\nnamespace rummy_card\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = ReadNumber();\n\n            for(int i = 0; i < n; i++)\n            {\n                Hand rummyHand = new Hand();\n                rummyHand.Display();\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n                \n            }\n\n        }\n        \n\n        /// <summary>\n        /// ?¨?????????????????????????????????´??°??????????????¨???????????????????????????\n        /// AOJ????????§??????????????????\n        /// </summary>\n        /// <returns>??????????????????????????°????????????????????£?????´??°???</returns>\n        private static int ReadNumber()\n        {\n            int n = 0;\n            if(!int.TryParse( Console.ReadLine() , out n))\n            {\n                /*???????????±??????????????\\????????? ????????¨??????????????????0??¨??????*/\n                Console.WriteLine(\"error:ReadNumber\");\n            }\n            return n;\n        }\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public string _color = null ;\n\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int _number = 0 ;\n\n    /// <summary>\n    /// ????????????ID\n    /// ??°??????????????????????????????4??????????????§??????????????§1???4???????????????????????¨??????\n    /// </summary>\n    public int _id = 0;\n\n    \n    /// <summary>\n    /// ?????????????????????\n    /// Hand???????????????????????????????????°??????\n    /// ????????´???_id???Hand???????????????\n    /// </summary>\n    public Card(string color,string number)\n    {\n        _color = color;\n        _number = int.Parse(number);\n    }\n\n\n}\n\n/// <summary>\n/// ???????????????\n/// 9????????§???????????????????????¨????????????\n/// </summary>\npublic class Hand\n{\n    Card[] _cards = new Card[9];\n\n    /// <summary>\n    /// ?????????????????????\n    /// ?????°?????????AOJ????????¨?????????\n    /// </summary>\n    public Hand()\n    {\n        string[] number = Console.ReadLine().Split(' ');\n        string[] color = Console.ReadLine().Split(' ');\n\n        for(int i = 0; i < 9; i++)\n        {\n            _cards[i] = new Card(color[i],number[i]);\n            int ID = 1;                                 //???????????????_id\n\n            for(int j = 0; j < i; j++)\n            {\n                if( _cards[j]._color  == _cards[i]._color &&\n                    _cards[j]._number == _cards[i]._number)\n                {\n                    ID++;       //?????¨??°???????????´???????????????????????????????????????????????????ID?????????????????????????????????\n                }\n            }\n            _cards[i]._id = ID;\n        }\n        Sort();                 //??????????????±????????????????????£?????????????????????????????????\n    }\n\n    /// <summary>\n    /// ???????????¶????????¨??????????????????????????°??¨???\n    /// </summary>\n    internal void Display()\n    {\n        for(int i = 0; i < 9; i++)\n        {\n            Console.Write(_cards[i]._color + _cards[i]._number + \"({0}) \" ,_cards[i]._id);\n        }\n        Console.WriteLine();\n    }\n\n    internal bool IsWinner()\n    {\n        /*?????£????????????true ?????£?????????????????????false*/\n        bool[] flag = new bool[9];\n\n        for(int i = 0; i < 9; i++)\n        {\n            ShowFlag(flag);\n\n            if (!flag[i])   //??°??????????????????????????????????????§??????????????????????????????????????????????????????????????¨???????????????\n            {\n                MeldGroup(flag, i);\n            }\n\n            if (!flag[i])   //???????????£????????§????????????????????????\n            {\n                MeldRun(flag, i);\n            }\n\n            if (!flag[i])\n            {\n                ShowFlag(flag);\n                return false;       //??????????????±??????????????????????????????????????£??????????????§?????????                            \n            }\n        }\n        /*false???????????????for???????????????????????´?????¨??????flag???true*/\n        ShowFlag(flag);\n        return true;\n    }\n\n    /// <summary>\n    /// ????????°?????¶????????¨??? ???????????°??¨\n    /// </summary>\n    /// <param name=\"flag\"></param>\n    private void ShowFlag(bool[] flag)\n    {\n        foreach(bool x in flag)\n        {\n            Console.Write( x ? \"1 \" : \"0 \");\n        }\n        Console.WriteLine();\n    }\n\n    /// <summary>\n    /// ????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldRun(bool[] flag, int i)\n    {\n        for (int j = i+1; j < 9; j++)    //???????????£?????????????????????????????§??°??????1??§????????????????????????????????????\n        {\n            if(_cards[i]._color == _cards[j]._color && \n               _cards[i]._number + 1 == _cards[j]._number &&\n                    !flag[j] )\n            {\n                for (int k = j + 1; k < 9; k++)     //1??§?????????????????????????????£?????????????§????2??§????????????????????????????????????\n                {\n                    if (_cards[i]._color == _cards[k]._color &&\n                       _cards[i]._number + 2 == _cards[k]._number &&\n                            !flag[k])\n                    {\n                        flag[i] = true;\n                        flag[j] = true;\n                        flag[k] = true;\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??°???????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldGroup(bool[] flag, int i)\n    {\n        if(_cards[i]._id >= 3)\n        {\n            flag[i]   = true;\n            flag[i+1] = true;\n            flag[i+2] = true;\n        }\n    }\n\n    /// <summary>\n    /// ???????????´????????????????????????\n    /// </summary>\n    internal void Sort()\n    {\n        Array.Sort( _cards, (a, b) => Compare(a, b) );\n    }\n\n    /// <summary>\n    /// 2?????????????????? ??? > ??°??? > ID ?????????????????§????????????\n    /// </summary>\n    /// <param name=\"a\">??????????±?</param>\n    /// <param name=\"b\">??????????±?</param>\n    /// <returns></returns>\n    private int Compare(Card a, Card b)\n    {\n        int iCompare = b._color.CompareTo(a._color);    //??????????????§????????????\n        if (iCompare != 0)\n        {\n            return iCompare ;              \n        }\n        else                        //?????????????????°??????????????§????????????\n        {\n            if( a._number - b._number != 0)\n            {\n                return a._number - b._number;\n            }\n            else                    //??°??????????????????id???????????§????????????\n            {\n                return b._id - a._id;\n            }\n        }\n        \n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System.Linq;\nusing System.Collections.Generic;\nusing System;\n\npublic class hello\n{\n\tpublic static void Main()\n\t{\n\t\tvar c = new string[] { \"R\", \"G\", \"B\" };\n\t\tvar n = int.Parse(Console.ReadLine().Trim());\n\t\tvar p = 0;\n\t\twhile (p++ < n)\n\t\t{\n\t\t\tstring[] line = Console.ReadLine().Trim().Split(' ');\n\t\t\tvar a = Array.ConvertAll(line, int.Parse);\n\t\t\tstring[] s = Console.ReadLine().Trim().Split(' ');\n\t\t\tvar ans = 1;\n\t\t\tfor (int i = 0; i < 3; i++)\n\t\t\t{\n\t\t\t\tvar w2 = new List<int>();\n\t\t\t\tfor (int j = 0; j < 9; j++)\n\t\t\t\t\tif (s[j] == c[i]) w2.Add(a[j]);\n\t\t\t\tvar w = w2.OrderBy(x => x).ToList();\n\t\t\t\tvar wc = w.Count();\n\t\t\t\tif (wc > 0 && wc % 3 != 0) { ans = 0; goto end; }\n\t\t\t\telse if (wc == 3 && !check3(w)) { ans = 0; goto end; }\n\t\t\t\telse if (wc == 6 && !check6(w)) { ans = 0; goto end; }\n\t\t\t\telse if (wc == 9 && !check9(w)) { ans = 0; goto end; }\n\t\t\t}\n\t\tend:;\n\t\t\tConsole.WriteLine(ans);\n\t\t}\n\t}\n\tstatic bool check9(List<int> a)\n\t{\n\t\tvar d = getDic(a);\n\t\tforeach (var x in d)\n\t\t{\n\t\t\tif (x.Value == 3 | x.Value == 4)\n\t\t\t{\n\t\t\t\tvar t = x.Key;\n\t\t\t\tfor (int i = 0; i < 3; i++) a.Remove(t);\n\t\t\t\tif (check6(a)) return true;\n\t\t\t\tfor (int i = 0; i < 3; i++) a.Add(t);\n\t\t\t\ta.Sort();\n\t\t\t}\n\t\t}\n\t\tvar dist = a.Distinct().ToList();\n\t\tfor (int i = 0; i <= dist.Count() - 3; i++)\n\t\t\tif ((dist[i] + 1 == dist[i + 1]) && (dist[i + 1] + 1 == dist[i + 2]))\n\t\t\t{\n\t\t\t\tvar t = dist[i];\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Remove(t + j);\n\t\t\t\tif (check6(a)) return true;\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Add(t + j);\n\t\t\t\ta.Sort();\n\t\t\t}\n\t\treturn false;\n\t}\n\tstatic bool check3(List<int> a) =>\n\t\t(a[0] == a[1] && a[1] == a[2]) | (a[0] + 1 == a[1] && a[1] + 1 == a[2]);\n\tstatic bool check6(List<int> a)\n\t{\n\t\tvar d = getDic(a);\n\t\tforeach (var x in d)\n\t\t\tif (x.Value == 3 | x.Value == 4)\n\t\t\t{\n\t\t\t\tfor (int i = 0; i < 3; i++) a.Remove(x.Key);\n\t\t\t\treturn check3(a);\n\t\t\t}\n\t\tvar dist = a.Distinct().ToList();\n\t\tfor (int i = 0; i <= dist.Count() - 3; i++)\n\t\t\tif ((dist[i] + 1 == dist[i + 1]) && (dist[i + 1] + 1 == dist[i + 2]))\n\t\t\t{\n\t\t\t\tvar t = dist[i];\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Remove(t + j);\n\t\t\t\tif (check3(a)) return true;\n\t\t\t\tfor (int j = 0; j < 3; j++) a.Add(t + j);\n\t\t\t\ta.Sort();\n\t\t\t}\n\t\treturn false;\n\t}\n\tstatic Dictionary<int, int> getDic(List<int> a)\n\t{\n\t\tvar d = new Dictionary<int, int>();\n\t\tfor (int i = 0; i < a.Count(); i++)\n\t\t\tif (d.ContainsKey(a[i])) d[a[i]]++;\n\t\t\telse d[a[i]] = 1;\n\t\treturn d;\n\t}\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n\n            List<int> resultlist = new List<int>();\n\n            int datasetnum = int.Parse(Console.ReadLine());\n\n            int result = 1;\n\n            for (int i = 0; i < datasetnum; i++)\n            {\n                //????????????????????????????????????\n                List<int> redlist = new List<int>();\n                List<int> bulelist = new List<int>();\n                List<int> greenlist = new List<int>();\n\n\n                string[] cardnum = Console.ReadLine().Split(' ');\n\n                string[] cardcolor = Console.ReadLine().Split(' ');\n\n                //??????????????????????????????????????????\n                for (int j = 0; j < cardnum.Length; j++)\n                {\n                    switch (cardcolor[j])\n                    {\n                        case \"R\":\n                            redlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"G\":\n                            greenlist.Add(int.Parse(cardnum[j]));\n                            break;\n\n\n                        case \"B\":\n                            bulelist.Add(int.Parse(cardnum[j]));\n                            break;\n                    }\n                }\n\n                //??????????????????????????????????????????\n                var red = new Red(redlist);\n                var bule = new Bule(bulelist);\n                var green = new Green(greenlist);\n\n\n                if (red.redresult() && green.greenresult() && bule.buleresult()) result = 1;\n                else result = 0;\n\n                //???????????????????????????Add??????\n                resultlist.Add(result);\n\n            }\n\n            //????????????\n            foreach (var output in resultlist)\n            {\n                Console.WriteLine(output);\n            }\n\n        }\n\n    }\n\n\n\n    class Red\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Red(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool redresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n    class Green\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n\n        #region ?????????????????????\n        public Green(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool greenresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class Bule\n    {\n        #region ??????????????°(?????£???????????°??????????¨???°???????´??????????)\n        int[] card = new int[9];\n        #endregion\n\n        #region ?????????????????????\n        public Bule(List<int> setlist)\n        {\n            for (int i = 0; i < 9; i++)\n            {\n                var match = setlist.FindAll(x => x == i + 1);\n\n                card[i] = match.Count;\n            }\n        }\n        #endregion\n\n        public bool buleresult()\n        {\n            var checkresult = new CardControl();\n            return checkresult.CheckWin(this.card);\n        }\n\n    }\n\n\n\n    class CardControl\n    {\n        /// <summary>\n        /// ???????????¶????????´?????????????????????\n        /// </summary>\n        /// <param name=\"card\"></param>\n        /// <returns></returns>\n        public bool CheckWin(int[] card)\n        {\n            bool result = true;\n\n            //?????£??????????????????????????°???????´????????????°\n            int totalnum = 0;\n\n            //?????¢?????°???????´????????????°\n            int peanum = 0;\n\n            //????????£???????????¢????????°????????´??????????\\???¨?????°\n            int serialtemp = 0;\n\n\n            //??£?????????????????????????????????\n            int serialcounter = 0;\n\n            //????????£??????????????????????????°(3??§????????????????????´??????false)\n            //????????¢?????°(???????????§?????£?????¨??????????????¨????????????????????´??????false)\n            //??¢??????????????¢??????????????????????????????\n            for (int i = 0; i < 9; i++)\n            {\n                totalnum += card[i];\n\n                //????????????????????????????????´??????1?????¢\n                if (card[i] == 3)\n                {\n                    peanum += 1;\n                    continue;\n                }\n\n\n                if (card[i] == 4)\n                {\n                    peanum += 1;\n                }\n\n                //??£??????????????????\n                if (0 != card[i])\n                {\n                    serialcounter++;\n\n                    //???????????¢????????°????????´????????????\n                    if (serialtemp == 0) serialtemp = card[i];\n                    else if (serialtemp > card[i]) serialtemp = 1;\n\n                    if (serialcounter == 3)\n                    {\n                        //??£???????????¢???1or2????????§?????£?????????????????°???????????????2??????2?????¢???????????????\n                        peanum += serialtemp;\n\n                        //??£?????????????????°???????????°????????´???????¬??????£?????????????????????????????????\n                        if (serialtemp < card[i])\n                        {\n                            serialcounter = 1;\n                            continue;\n                        }\n\n                        serialcounter = 0;\n                        serialtemp = 0;\n                    }\n                }\n                else\n                {\n                    serialcounter = 0;\n                }\n\n            }\n\n            if (totalnum % 3 != 0) result = false;\n\n            if (totalnum / 3 > peanum) result = false;\n\n            //????????????1??????????????´??????true\n            if (totalnum == 0) result = true;\n\n            return result;\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        /// <summary>\n        /// ????????°???????????¨?????????????????????\n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            int SET_CARDS = 9;\n\n            int count = int.Parse(Console.ReadLine());\n\n            for(int ds = 0; ds < count; ds++)\n            {\n                // ??????????????????\n                var list = new Card[SET_CARDS];\n\n                // ??\\???????????????\n                string[] nums = Console.ReadLine().Split(' ');\n                string[] marks = Console.ReadLine().Split(' ');\n\n                // ??\\????????????????????????????????????\n                for (int i = 0; i < SET_CARDS; i++)\n                    list[i] = new Card() { Mark = marks[i], Num = int.Parse(nums[i]) };\n                \n                // ?????????????????????\n                Array.Sort(list, (c1, c2) => c1.Num - c2.Num);\n                Array.Sort(list, (c1, c2) => char.Parse(c1.Mark) - char.Parse(c2.Mark));\n\n                // ???????????????????????????\n                Console.WriteLine(Judge(list) ? \"1\" : \"0\");\n            }\n        }\n\n        /// <summary>\n        /// ????????????\n        /// </summary>\n        /// <param name=\"cards\">??????????????????</param>\n        /// <returns>??????????????????????????????????????£????????????true???????????\\??????false</returns>\n        private static bool Judge(Card[] cards)\n        {\n            // ?????????????????????????????£?????????true\n            if (cards.Length == 0)\n                return true;\n\n            // ????????????????????????3?????????????????¢??????\n            for (int c1 = 0; c1 < cards.Length - 2; c1++)\n            {\n                for(int c2 = c1 + 1; c2 < cards.Length - 1; c2++)\n                {\n                    for (int c3 = c2 + 1; c3 < cards.Length; c3++)\n                    {\n                        // 3???????????????????????????????????§?????????\n                        if(cards[c1].Mark == cards[c2].Mark && cards[c1].Mark == cards[c3].Mark)\n                        {\n                            // 3??????????????????????????°??????????????£?¶?????????°?????§?????????\n                            if((cards[c1].Num == cards[c2].Num && cards[c1].Num == cards[c3].Num)\n                                || (cards[c1].Num == cards[c2].Num - 1 && cards[c1].Num == cards[c3].Num - 2))\n                            {\n                                // ???????????¢???????????????????????\\?????????????????§??????????????????????????????\n                                List<Card> list = new List<Card>();\n                                for(int i = 0; i < cards.Length; i++)\n                                {\n                                    if (i != c1 && i != c2 && i != c3)\n                                        list.Add(cards[i]);\n                                }\n\n                                // ???????????????????????????????????§?????°??????\n                                if (Judge(list.ToArray()))\n                                    return true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// ??????????????????\n    /// </summary>\n    public class Card\n    {\n        /// <summary>\n        /// ?????????\n        /// </summary>\n        public string Mark { get; set; }\n        /// <summary>\n        /// ??°???\n        /// </summary>\n        public int Num { get; set; }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "/* Rummy (????????????????????????????????´???) */\n\nusing System;\n\nnamespace rummy_card\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = ReadNumber();\n\n            for(int i = 0; i < n; i++)\n            {\n                Hand rummyHand = new Hand();\n\n                Console.WriteLine(rummyHand.IsWinner() ? \"1\" : \"0\");\n                \n            }\n\n        }\n        \n\n        /// <summary>\n        /// ?¨?????????????????????????????????´??°??????????????¨???????????????????????????\n        /// AOJ????????§??????????????????\n        /// </summary>\n        /// <returns>??????????????????????????°????????????????????£?????´??°???</returns>\n        private static int ReadNumber()\n        {\n            int n = 0;\n            if(!int.TryParse( Console.ReadLine() , out n))\n            {\n                /*???????????±??????????????\\????????? ????????¨??????????????????0??¨??????*/\n                Console.WriteLine(\"error:ReadNumber\");\n            }\n            return n;\n        }\n    }\n}\n\n/// <summary>\n/// ??????????????????\n/// </summary>\npublic class Card\n{\n    /// <summary>\n    /// ???????????????\n    /// </summary>\n    public string _color = null ;\n\n    /// <summary>\n    /// ??????????????°???\n    /// </summary>\n    public int _number = 0 ;\n\n    /// <summary>\n    /// ????????????ID\n    /// ??°??????????????????????????????4??????????????§??????????????§1???4???????????????????????¨??????\n    /// </summary>\n    public int _id = 0;\n\n    \n    /// <summary>\n    /// ?????????????????????\n    /// Hand???????????????????????????????????°??????\n    /// ????????´???_id???Hand???????????????\n    /// </summary>\n    public Card(string color,string number)\n    {\n        _color = color;\n        _number = int.Parse(number);\n    }\n\n\n}\n\n/// <summary>\n/// ???????????????\n/// 9????????§???????????????????????¨????????????\n/// </summary>\npublic class Hand\n{\n    Card[] _cards = new Card[9];\n\n    /// <summary>\n    /// ?????????????????????\n    /// ?????°?????????AOJ????????¨?????????\n    /// </summary>\n    public Hand()\n    {\n        string[] number = Console.ReadLine().Split(' ');\n        string[] color = Console.ReadLine().Split(' ');\n\n        for(int i = 0; i < 9; i++)\n        {\n            _cards[i] = new Card(color[i],number[i]);\n            int ID = 1;                                 //???????????????_id\n\n            for(int j = 0; j < i; j++)\n            {\n                if( _cards[j]._color  == _cards[i]._color &&\n                    _cards[j]._number == _cards[i]._number)\n                {\n                    ID++;       //?????¨??°???????????´???????????????????????????????????????????????????ID?????????????????????????????????\n                }\n            }\n            _cards[i]._id = ID;\n        }\n        Sort();                 //??????????????±????????????????????£?????????????????????????????????\n    }\n\n    /// <summary>\n    /// ???????????¶????????¨??????????????????????????°??¨???\n    /// </summary>\n    internal void Display()\n    {\n        for(int i = 0; i < 9; i++)\n        {\n            Console.Write(_cards[i]._color + _cards[i]._number + \"({0}) \" ,_cards[i]._id);\n        }\n        Console.WriteLine();\n    }\n\n    internal bool IsWinner()\n    {\n        /*?????£????????????true ?????£?????????????????????false*/\n        bool[] flag = new bool[9];\n\n        for(int i = 0; i < 9; i++)\n        {\n\n\n            if (!flag[i])   //??°??????????????????????????????????????§??????????????????????????????????????????????????????????????¨???????????????\n            {\n                MeldGroup(flag, i);\n            }\n\n            if (!flag[i])   //???????????£????????§????????????????????????\n            {\n                MeldRun(flag, i);\n            }\n\n            if (!flag[i])\n            {\n\n                return false;       //??????????????±??????????????????????????????????????£??????????????§?????????                            \n            }\n        }\n        /*false???????????????for???????????????????????´?????¨??????flag???true*/\n\n        return true;\n    }\n\n    /// <summary>\n    /// ????????°?????¶????????¨??? ???????????°??¨\n    /// </summary>\n    /// <param name=\"flag\"></param>\n    private void ShowFlag(bool[] flag)\n    {\n        foreach(bool x in flag)\n        {\n            Console.Write( x ? \"1 \" : \"0 \");\n        }\n        Console.WriteLine();\n    }\n\n    /// <summary>\n    /// ????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldRun(bool[] flag, int i)\n    {\n        for (int j = i+1; j < 9; j++)    //???????????£?????????????????????????????§??°??????1??§????????????????????????????????????\n        {\n            if(_cards[i]._color == _cards[j]._color && \n               _cards[i]._number + 1 == _cards[j]._number &&\n                    !flag[j] )\n            {\n                for (int k = j + 1; k < 9; k++)     //1??§?????????????????????????????£?????????????§????2??§????????????????????????????????????\n                {\n                    if (_cards[i]._color == _cards[k]._color &&\n                       _cards[i]._number + 2 == _cards[k]._number &&\n                            !flag[k])\n                    {\n                        flag[i] = true;\n                        flag[j] = true;\n                        flag[k] = true;\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /// <summary>\n    /// ??°???????????§???????????§??????????????????\n    /// </summary>\n    /// <param name=\"flag\">???????????????????????£???????????£???????????????</param>\n    /// <param name=\"i\">???????????°</param>\n    private void MeldGroup(bool[] flag, int i)\n    {\n        if(_cards[i]._id >= 3)\n        {\n            flag[i]   = true;\n            flag[i+1] = true;\n            flag[i+2] = true;\n        }\n    }\n\n    /// <summary>\n    /// ???????????´????????????????????????\n    /// </summary>\n    internal void Sort()\n    {\n        Array.Sort( _cards, (a, b) => Compare(a, b) );\n    }\n\n    /// <summary>\n    /// 2?????????????????? ??? > ??°??? > ID ?????????????????§????????????\n    /// </summary>\n    /// <param name=\"a\">??????????±?</param>\n    /// <param name=\"b\">??????????±?</param>\n    /// <returns></returns>\n    private int Compare(Card a, Card b)\n    {\n        int iCompare = b._color.CompareTo(a._color);    //??????????????§????????????\n        if (iCompare != 0)\n        {\n            return iCompare ;              \n        }\n        else                        //?????????????????°??????????????§????????????\n        {\n            if( a._number - b._number != 0)\n            {\n                return a._number - b._number;\n            }\n            else                    //??°??????????????????id???????????§????????????\n            {\n                return b._id - a._id;\n            }\n        }\n        \n    }\n}"
  },
  {
    "language": "JavaScript",
    "code": "var card={};\nvar a=\"123,234,345,456,567,678,789,111,222,333,444,555,666,777,888,999\".split(\",\");\nfor(var i=0;i<a.length;i++){\n   for(var j=0;j<a.length;j++){\n      for(var k=0;k<a.length;k++){\n         card[a[i]+a[j]+a[k]]=true;\n         card[(a[i]+a[j]).split(\"\").map(Number).sort(function(a,b){return a-b;}).join(\"\")+a[k]]=true;\n         card[a[k]+(a[i]+a[j]).split(\"\").map(Number).sort(function(a,b){return a-b;}).join(\"\")]=true;\n         card[(a[i]+a[j]+a[k]).split(\"\").map(Number).sort(function(a,b){return a-b;}).join(\"\")]=true;\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar t=arr.shift()-0;\nfor(var i=0;i<t;i++){\n   var n=arr.shift().split(\" \").map(Number);\n   var c=arr.shift().split(\" \");\n   var rgb={R:[],G:[],B:[]};\n   c.forEach(function(v,i){\n      rgb[v].push(n[i]);\n   });\n   var str=\"\";\n   for(var k in rgb){\n      rgb[k].sort(function(a,b){return a-b;});\n      if(rgb[k].length==3)str+=rgb[k].join(\"\");\n      else if(rgb[k].length==6)str+=rgb[k].join(\"\");\n      else if(rgb[k].length==9)str+=rgb[k].join(\"\");\n   }\n   console.log((card.hasOwnProperty(str))?1:0);\n}"
  },
  {
    "language": "Ruby",
    "code": "def check v\n\treturn true if (v&v).count == 1\n\treturn true if v[0]+1==v[1] && v[1]+1==v[2]\n\treturn false\nend\n\ngets.to_i.times{\n\tan=gets.split(\" \").map{|e|e.to_i}\n\tac=gets.split(\" \")\n\tcount=0\n\tc=[[],[],[]]\n\tac.each_with_index{|v,i|\n\t\tc[0].concat [an[i]] if v == \"R\"\n\t\tc[1].concat [an[i]] if v == \"G\"\n\t\tc[2].concat [an[i]] if v == \"B\"\n\t}\n\tmax=0\n\t3.times{|i|\n\t\tmaxCount=0\n\t\tc[i].permutation{|pset|\n\t\t\tcount=0\n\t\t\t(pset.length/3).times{|t|\n\t\t\t\t#break if !check(pset[3*t..3*t+2])\n\t\t\t\tcount += 1 if check(pset[3*t..3*t+2])\n\t\t\t\t#count += 1\n\t\t\t}\n\t\t\tmaxCount = count if maxCount < count\n\t\t}\n\t\tmax += maxCount\n\t\tbreak if max >= 3\n\t}\n\tp 1 if max >= 3\n\tp 0 if max < 3\n}"
  },
  {
    "language": "Ruby",
    "code": "def isSequence?(x)\n  return x[0] + 1 == x[1] && x[1] + 1 == x[2]\nend\n\ndef isSameNumber?(x)\n  return x[0] == x[1] && x[1] == x[2]\nend\n\n\n# ????????????????????????????????????????????????????????????????????? \ndef permutation(_x)\n  @res = []\n  m = []\n  _x.uniq.map{|i| m << _x.count(i)}\n  x = _x.uniq\n  def perm(x, m, result=[])\n    if m.all?{|n| n == 0 }\n      @res << result\n    else\n      (m.length).times{|i|\n        if m[i] > 0\n          m[i] -= 1\n          perm(x, m, result+[x[i]])\n          m[i] += 1\n        end\n      }\n    end\n  end\n  perm(x, m)\n  return @res\nend\n\ncl = {\"R\"=>0, \"G\"=>10,\"B\"=>100}\nk = 9\nt = gets.to_i\nt.times do |i|\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  k.times do |j|\n    n[j] += cl[c[j]]\n  end\n  n.sort!\n\n\n  nnew = permutation(n)\n  tres = nnew.any?{|v|\n    res = []\n    3.times do |k|\n      res << [v[k * 3], v[k * 3 + 1], v[k * 3 + 2]]\n    end\n    res.all?{|x| isSequence?(x) || isSameNumber?(x)}\n  }\n  p tres ? 1: 0\nend"
  },
  {
    "language": "Ruby",
    "code": "def shuntsu(x, y)\n  if y <= 6\n    for z in 0..2\n      x[y+z] -= 1\n    end\n  end\n  return x\nend\n\ngets.to_i.times{\n  h_n = gets.split.map{|i| (i.to_i)-1}\n  h_c = gets.split\n  r, g, b = [0]*9, [0]*9, [0]*9\n  \n  for x in 0...9\n    case h_c[x]\n    when \"R\"; r[h_n[x]] += 1\n    when \"G\"; g[h_n[x]] += 1\n    when \"B\"; b[h_n[x]] += 1\n    end\n  end\n  \n  for x in [r, g, b]\n    for y in 0...9\n      case x[y]\n      when 1\n        x = shuntsu(x, y)\n      when 2\n        x = shuntsu(shuntsu(x, y), y)\n      when 3\n        x[y] -= 3\n      when 4\n        x[y] -= 3\n        x = shuntsu(x, y)\n      end\n    end\n  end\n  \n  if [r, g, b] == [[0]*9]*3\n    puts 1\n  else\n    puts 0\n  end\n}"
  },
  {
    "language": "Ruby",
    "code": "t = gets.to_i\nt.times do |i|\n  res = 1\n  n = gets.split.map(&:to_i)\n  c = gets.split.map(&:to_s)\n  if (c.count(\"R\") % 3 + c.count(\"G\") % 3 + c.count(\"G\") % 3 != 0)\n    res = 0\n  else\n    m = [n, c].transpose.sort_by{|x| [x[0], x[1]]}\n    m.transpose[0].each_slice(3) do |d, e, f|\n      if d.succ != f.pred && d != f\n        res = 0\n        break\n      end\n    end\n  end\n  p res\nend"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times{\n  h_n = gets.split.map{|i| (i.to_i)-1}\n  h_c = gets.split\n  r, g, b = [0]*9, [0]*9, [0]*9\n  \n  for x in 0...9\n    case h_c[x]\n    when \"R\"; r[h_n[x]] += 1\n    when \"G\"; g[h_n[x]] += 1\n    when \"B\"; b[h_n[x]] += 1\n    end\n  end\n  \n  for x in [r, g, b]\n    for y in 0...9\n      case x[y]\n      when 1..2\n        for z in 0..2\n          x[y+z] -= 1\n        end\n      when 3..4\n        x[y] -= 3\n      end\n    end\n  end\n  \n  if [r, g, b] == [[0]*9]*3\n    puts 1\n  else\n    puts 0\n  end\n}"
  },
  {
    "language": "Ruby",
    "code": "def isSequence?(x)\n  return x[0] + 1 == x[1] && x[1] + 1 == x[2]\nend\n\ndef isSameNumber?(x)\n  return x[0] == x[1] && x[1] == x[2]\nend\n\ncl = {\"R\"=>0, \"G\"=>10,\"B\"=>100}\nk = 9\nt = gets.to_i\nt.times do |i|\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  k.times do |j|\n    n[j] += cl[c[j]]\n  end\n  n.sort!\n\n  res = []\n  3.times do |k|\n    res << [n[k * 3], n[k * 3 + 1], n[k * 3 + 2]]\n  end\n  p (res.all?{|x| isSequence?(x) || isSameNumber?(x)}) ? 1: 0\nend"
  },
  {
    "language": "Ruby",
    "code": "def count(card)\n  return 0 if card.inject(:+) % 3 != 0\n  res = 0\n  for i in 1..9 do\n    if card[i] > 0 && card[i + 1] > 0 && card[i + 2] > 0\n      new = card\n      new[i] -= 1\n      new[i + 1] -= 1\n      new[i + 2] -= 1\n      res = [res, 1 + count(new)].max\n    end\n    if card[i] >= 3\n      new = card\n      new[i] -= 3\n      res = [res, 1 + count(new)].max\n    end\n  end\n  res\nend\n\nT = gets.to_i\nT.times do\n  hand = Hash.new\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  for i in 0...9 do\n    hand[c[i]] = Array.new(13, 0) unless hand.key?(c[i])\n    hand[c[i]][n[i]] += 1\n  end\n  total = 0\n  hand.each do |color, card|\n    total += count(card)\n  end\n  puts total == 3 ? \"1\" : \"0\"\nend"
  },
  {
    "language": "Ruby",
    "code": "class Hand\n  def initialize\n    @card = Hash.new\n  end\n  def add(c, n)\n    @card[c] = Array.new(13, 0) unless @card.key?(c)\n    @card[c][n] += 1\n  end\n  def score()\n  end\nend\n\ndef count(card)\n  return 0 if card.inject(:+) % 3 != 0\n  res = 0\n  for i in 1..9 do\n    if card[i] > 0 && card[i + 1] > 0 && card[i + 2] > 0\n      new = card\n      new[i] -= 1\n      new[i + 1] -= 1\n      new[i + 2] -= 1\n      res = [res, 1 + count(new)].max\n    end\n    if card[i] >= 3\n      new = card\n      new[i] -= 3\n      res = [res, 1 + count(new)].max\n    end\n  end\n  res\nend\n\nT = gets.to_i\nT.times do\n  hand = Hash.new\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  for i in 0...9 do\n    hand[c[i]] = Array.new(13, 0) unless hand.key?(c[i])\n    hand[c[i]][n[i]] += 1\n  end\n  total = 0\n  hand.each do |color, card|\n    total += count(card)\n  end\n  puts total == 3 ? \"1\" : \"0\"\nend"
  },
  {
    "language": "Ruby",
    "code": "def count(card)\n  return 0 if card.inject(:+) % 3 != 0\n  res = 0\n  for i in 1..9 do\n    if card[i] > 0 && card[i + 1] > 0 && card[i + 2] > 0\n      new = card\n      new[i] -= 1\n      new[i + 1] -= 1\n      new[i + 2] -= 1\n      res = [res, 1 + count(new)].max\n    end\n    if card[i] >= 3\n      new = card\n      new[i] -= 3\n      res = [res, 1 + count(new)].max\n    end\n  end\n  res\nend\n\nT = gets.to_i\nT.times do\n  hand = Hash.new\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  for i in 0...9 do\n    hand[c[i]] = Array.new(13, 0) unless hand.key?(c[i])\n    hand[c[i]][n[i]] += 1\n  end\n  total = 0\n  hand.each do |color, card|\n    total += count(card)\n  end\n  puts total == 3 ? \"1\" : \"0\"\nend"
  },
  {
    "language": "Ruby",
    "code": "def goodSet(a)\n  colors  = a.map { |x, c| c }\n  numbers = a.sort.map { |n, x| n }\n\n  (colors[0] == colors[1] && colors[1] == colors[2]) &&\n  ((numbers[0] == numbers[1] && numbers[1] == numbers[2]) ||\n  (numbers[2] - numbers[1] == 1 && numbers[1] - numbers[0] == 1))\nend\n\ndef rummy()\n  numbers = gets.split.map(&:to_i)\n  colors  = gets.split\n  numbersAndColors = (0..8).to_a.map{ |i| [numbers[i], colors[i]] }\n  winCon = 0\n\n  numbersAndColors.permutation do |nc|\n    winCon = 1 if goodSet(nc[0,3]) && goodSet(nc[3,3]) && goodSet(nc[6,3])\n  end\n\n  p winCon\nend\n\nif __FILE__ == $0\n  gets.to_i.times{ rummy }\nend"
  },
  {
    "language": "Ruby",
    "code": "T = gets.to_i\n\nT.times do\n  ary_R = Array.new\n  ary_G = Array.new\n  ary_B = Array.new\n  r_idx = 0\n  g_idx = 0\n  b_idx = 0 \n  num = gets.chomp.split(' ').map(&:to_i)\n  color = gets.chomp.split(' ')\n\n  for i in 0..8\n    case color[i]\n    when 'R'\n      ary_R[r_idx] = [num[i], color[i]]\n      r_idx += 1\n    when 'G'\n      ary_G[g_idx] = [num[i], color[i]]\n      g_idx += 1\n    when 'B'\n      ary_B[b_idx] = [num[i], color[i]]\n      b_idx += 1\n    end\n  end\n\n  set = 0\n  data = [ ary_R.sort!, ary_G.sort!, ary_B.sort! ]\n\n  data.each do |ary|\n    next if ary.size < 3\n    while true\n      break if ary.size < 3\n      card = ary.shift\n      for i in 0...ary.size-1\n        equal = 1\n        snum = 1\n        end_flag = 0\n        case ary[i][0] - card[0]\n        when 0\n          equal += 1\n        when 1\n          snum += 1\n        else\n          break\n        end\n\n        for j in i+1...ary.size\n          case ary[j][0] - card[0]\n          when 0\n            equal += 1\n          when 2\n            snum += 1\n          else\n            break\n          end\n          if equal == 3 || snum == 3\n            set += 1\n            ary.delete_at(ary.find_index(ary[i]))\n            ary.delete_at(ary.find_index(ary[j-1]))\n            end_flag = 1\n            break\n          end\n        end\n        break if end_flag == 1\n      end\n    end\n  end\n  case set\n  when 3\n    puts 1\n  else\n    puts 0\n  end\n end"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times do\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  color = {}\n  color[\"R\"] = [0]*9\n  color[\"G\"] = [0]*9\n  color[\"B\"] = [0]*9\n  9.times{ |i| color[c[i]][n[i]-1] += 1 }\n  ret = 0\n  [\"R\", \"G\", \"B\"].each do |s|\n    7.times do |i|\n      if color[s][i,3].all?{ |v| v >= 1 }\n        while color[s][i,3].all?{ |v| v >= 1 }\n          3.times{ |j| color[s][i+j] -= 1}\n          ret += 1\n        end\n      end\n    end\n    9.times do |i|\n      if color[s][i] >= 3\n        ret += color[s][i] / 3\n      end\n    end\n  end\n  if ret == 3 then puts 1\n  else puts 0\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "T = gets.to_i\n\nT.times do\n  ary = Array.new(9)\n  num = gets.chomp.split(' ').map(&:to_i)\n  color = gets.chomp.split(' ')\n\n  for i in 0..8\n    ary[i] = [num[i], color[i]]\n  end\n\n  ary.sort!\n  set = 0\n  while true\n    break if ary.size < 3\n    card1 = ary.shift\n    for i in 0...ary.size-1\n      next if ary[i][1] != card1[1]\n      end_flag = 0\n      equal = 1\n      snum = 1\n      case ary[i][0] - card1[0]\n      when 0\n        equal += 1\n      when 1\n        snum += 1\n      else\n        break\n      end\n\n      for j in i+1...ary.size\n        next if ary[j][1] != ary[i][1]\n        case ary[j][0] - card1[0]\n        when 0\n          equal += 1\n        when 2\n          snum += 1\n        else\n          break\n        end\n        if equal == 3 || snum == 3\n          set += 1\n          ary.delete_at(ary.find_index(ary[i]))\n          ary.delete_at(ary.find_index(ary[j-1]))\n          end_flag = 1\n          break\n        end\n      end\n      break if end_flag == 1\n    end\n  end\n  case set\n    when 3\n      puts 1\n    else\n      puts 0\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def check v\n\treturn true if (v&v).count == 1\n\treturn true if v[0]+1==v[1] && v[1]+1==v[2]\n\treturn false\nend\n\ngets.to_i.times{\n\tan=gets.split(\" \").map{|e|e.to_i}\n\tac=gets.split(\" \")\n\tcount=0\n\tc=[[],[],[]]\n\tac.each_with_index{|v,i|\n\t\tc[0].concat [an[i]] if v == \"R\"\n\t\tc[1].concat [an[i]] if v == \"G\"\n\t\tc[2].concat [an[i]] if v == \"B\"\n\t}\n\tmax=0\n\t3.times{|i|\n\t\tmaxCount=0\n\t\tc[i].permutation{|pset|\n\t\t\tcount=0\n\t\t\t(pset.length/3).times{|t|\n\t\t\t\tbreak if !check(pset[3*t..3*t+2])\n\t\t\t\tcount += 1\n\t\t\t}\n\t\t\tmaxCount = count if maxCount < count\n\t\t\tbreak if max+maxCount >= 3\n\t\t}\n\t\tmax += maxCount\n\t\tbreak if max >= 3\n\t}\n\tp 1 if max >= 3\n\tp 0 if max < 3\n}"
  },
  {
    "language": "Ruby",
    "code": "def win_state(arr)\n  return false if arr.size % 3 != 0\n  return true if arr.size == 0\n  arr.permutation.to_a.any?{|k|\n    k.each_slice(3).map{|a, b, c|\n      (a.succ == c.pred && a.succ == b) || (a == c && a == b)\n    }.all?\n  }\nend\n\nt = gets.to_i\nt.times do |i|\n  n = gets.split.map(&:to_i)\n  c = gets.split.map(&:to_s)\n  r, g, b = [], [], []\n  n.size.times do |j|\n    r << n[j] if c[j] == \"R\"\n    g << n[j] if c[j] == \"G\"\n    b << n[j] if c[j] == \"B\"\n  end\n  res = [r, g, b].all?{|arr|\n    win_state(arr)\n  }\n  p res ? 1 : 0\nend"
  },
  {
    "language": "Ruby",
    "code": "T = gets.to_i\n\nT.times do\n  ary = Array.new(9)\n  num = gets.chomp.split(' ').map(&:to_i)\n  color = gets.chomp.split(' ')\n\n  for i in 0..8\n    ary[i] = [num[i], color[i]]\n  end\n\n  ary.sort!\n  set = 0\n  while true\n    break if ary.size < 3\n    card1 = ary.shift\n    for i in 0...ary.size-1\n      next if ary[i][1] != card1[1]\n      end_flag = 0\n      equal = 1\n      snum = 1\n      case ary[i][0] - card1[0]\n      when 0\n        equal += 1\n      when 1\n        snum += 1\n      else\n        break\n      end\n\n      for j in i+1...ary.size\n        next if ary[j][1] != ary[i][1]\n        case ary[j][0] - ary[i][0]\n        when 0\n          equal += 1\n        when 1\n          snum += 1\n        else\n          break\n        end\n        if equal == 3 || snum == 3\n          set += 1\n          ary.delete_at(ary.find_index(ary[i]))\n          ary.delete_at(ary.find_index(ary[j-1]))\n          end_flag = 1\n          break\n        end\n      end\n      break if end_flag == 1\n    end\n  end\n  case set\n    when 3\n      puts 1\n    else\n      puts 0\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times{\n  h_n = gets.split.map{|i| (i.to_i)-1}\n  h_c = gets.split\n  r, g, b = [0]*9, [0]*9, [0]*9\n  \n  for x in 0...9\n    case h_c[x]\n    when \"R\"; r[h_n[x]] += 1\n    when \"G\"; g[h_n[x]] += 1\n    when \"B\"; b[h_n[x]] += 1\n    end\n  end\n  \n  for x in [r, g, b]\n    for y in 0...9\n      case x[y]\n      when 1..2\n        if y <= 6\n          for z in 0..2\n            x[y+z] -= 1\n          end\n        end\n      when 3..4\n        x[y] -= 3\n      end\n    end\n  end\n  \n  if [r, g, b] == [[0]*9]*3\n    puts 1\n  else\n    puts 0\n  end\n}"
  },
  {
    "language": "Ruby",
    "code": "def shuntsu(x, y)\n  if y <= 6\n    for z in 0..2\n      x[y+z] -= 1\n    end\n  end\n  return x\nend\n\ngets.to_i.times{\n  h_n = gets.split.map{|i| (i.to_i)-1}\n  h_c = gets.split\n  r, g, b = [0]*9, [0]*9, [0]*9\n  \n  for x in 0...9\n    case h_c[x]\n    when \"R\"; r[h_n[x]] += 1\n    when \"G\"; g[h_n[x]] += 1\n    when \"B\"; b[h_n[x]] += 1\n    end\n  end\n  \n  for x in [r, g, b]\n    for y in 0...9\n      case x[y]\n      when 1..2\n        x = shuntsu(x, y)\n      when 3\n        x[y] -= 3\n      when 4\n        x[y] -= 3\n        x = shuntsu(x, y)\n      end\n    end\n  end\n  \n  if [r, g, b] == [[0]*9]*3\n    puts 1\n  else\n    puts 0\n  end\n}"
  },
  {
    "language": "Ruby",
    "code": "def check v\n\treturn true if (v&v).count == 1\n\treturn true if v[0]+1==v[1] && v[1]+1==v[2]\n\treturn false\nend\n\ngets.to_i.times{\n\tan=gets.split(\" \").map{|e|e.to_i}\n\tac=gets.split(\" \")\n\tcount=0\n\tc=[[],[],[]]\n\tac.each_with_index{|v,i|\n\t\tc[0].concat [an[i]] if v == \"R\"\n\t\tc[1].concat [an[i]] if v == \"G\"\n\t\tc[2].concat [an[i]] if v == \"B\"\n\t}\n\tmax=0\n\t3.times{|i|\n\t\tmaxCount=0\n\t\tc[i].permutation{|pset|\n\t\t\tcount=0\n\t\t\t(pset.length/3).times{|t|\n\t\t\t\tbreak if !check(pset[3*t..3*t+2])\n\t\t\t\tcount += 1\n\t\t\t}\n\t\t\tmaxCount = count if maxCount < count\n\t\t\tbreak if max+maxCount >= 3\n\t\t}\n\t\tmax += maxCount\n\t}\n\tp 1 if max >= 3\n\tp 0 if max < 3\n}"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times do\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  color = {}\n  color[\"R\"] = [0]*9\n  color[\"G\"] = [0]*9\n  color[\"B\"] = [0]*9\n  9.times{ |i| color[c[i]][n[i]-1] += 1 }\n  ret = 0\n  [\"R\", \"G\", \"B\"].each do |s|\n    a = b = 0\n    9.times do |i|\n      if color[s][i] >= 3\n        a += color[s][i] / 3\n      end\n    end\n    7.times do |i|\n      if color[s][i,3].all?{ |v| v >= 1 }\n        while color[s][i,3].all?{ |v| v >= 1 }\n          3.times{ |j| color[s][i+j] -= 1}\n          b += 1\n        end\n      end\n    end\n    ret += [a, b].max\n  end\n  if ret == 3 then puts 1\n  else puts 0\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "n   = gets.to_i\nans = []\n\ndef check(ary)\n  for i in 0 .. 8\n    if ary[i] < 0\n      break\n    elsif ary[i] == 4\n      ary[i]      = 0\n      ary[i + 1] -= 1\n      ary[i + 2] -= 1\n    elsif ary[i] == 3\n      ary[i]      = 0\n    elsif ary[i] > 0\n      ary[i + 1] -= ary[i]\n      ary[i + 2] -= ary[i]\n      ary[i]      = 0\n    end\n  end\n\n  if ary.uniq == [0]\n    return true\n  else\n    return false\n  end\nend\n\nn.times do\n  num   = gets.split.map(&:to_i)\n  color = gets.chomp.split\n\n  aryR = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  aryG = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  aryB = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n  9.times do |i|\n    eval(\"ary\" + color[i])[num[i] - 1] += 1\n  end\n\n  if check(aryR) && check(aryG) && check(aryB)\n    ans << 1\n  else\n    ans <<  0\n  end\nend\n\nans.each do |a|\n  puts a\nend\n\n"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times do\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  color = {}\n  color[\"R\"] = [0]*9\n  color[\"G\"] = [0]*9\n  color[\"B\"] = [0]*9\n  9.times{ |i| color[c[i]][n[i]-1] += 1 }\n  cnt = 0\n  [\"R\", \"G\", \"B\"].each do |s|\n    7.times do |i|\n      if color[s][i] >= 3\n        d = color[s][i] / 3\n        color[s][i] -= d * 3\n        cnt += d\n      elsif color[s][i,3].all?{ |v| v >= 1 }\n        while color[s][i,3].all?{ |v| v >= 1 }\n          3.times{ |j| color[s][i+j] -= 1}\n          cnt += 1\n        end\n      end\n    end\n  end\n  if cnt == 3 then puts 1\n  else puts 0\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def check v\n\treturn true if (v&v).count == 1\n\treturn true if v[0]+1==v[1] && v[1]+1==v[2]\n\treturn false\nend\n\ngets.to_i.times{\n\tan=gets.split(\" \").map{|e|e.to_i}\n\tac=gets.split(\" \")\n\tcount=0\n\tr=[]\n\tg=[]\n\tb=[]\n\tac.each_with_index{|v,i|\n\t\tr=r.concat [an[i]] if v == \"R\"\n\t\tg=g.concat [an[i]] if v == \"G\"\n\t\tb=b.concat [an[i]] if v == \"B\"\n\t}\n\tmaxRCount=0\n\tr.permutation{|pset|\n\t\trCount=0\n\t\t(pset.length/3).times{|t|\n\t\t\trCount += 1 if check(pset[3*t..3*t+2])\n\t\t}\n\t\tmaxRCount = rCount if maxRCount < rCount\n\t}\n\tmaxGCount=0\n\tg.permutation{|pset|\n\t\tgCount=0\n\t\t(pset.length/3).times{|t|\n\t\t\tgCount += 1 if check(pset[3*t..3*t+2])\n\t\t}\n\t\tmaxGCount = gCount if maxGCount < gCount\n\t}\n\tmaxBCount=0\n\tb.permutation{|pset|\n\t\tbCount=0\n\t\t(pset.length/3).times{|t|\n\t\t\tbCount += 1 if check(pset[3*t..3*t+2])\n\t\t}\n\t\tmaxBCount = bCount if maxBCount < bCount\n\t}\n\tmax = maxBCount + maxGCount + maxRCount\n\tp 1 if max >= 3\n\tp 0 if max < 3\n}"
  },
  {
    "language": "Ruby",
    "code": "\ndef count(card)\n  return 0 if card.inject(:+) % 3 != 0\n  res = 0\n  for i in 1..9 do\n    if card[i] > 0 && card[i + 1] > 0 && card[i + 2] > 0\n      new = card\n      new[i] -= 1\n      new[i + 1] -= 1\n      new[i + 2] -= 1\n      res = [res, 1 + count(new)].max\n    end\n    if card[i] >= 3\n      new = card\n      new[i] -= 3\n      res = [res, 1 + count(new)].max\n    end\n  end\n  res\nend\n\nT = gets.to_i\nT.times do\n  hand = Hash.new\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  for i in 0...9 do\n    hand[c[i]] = Array.new(13, 0) unless hand.key?(c[i])\n    hand[c[i]][n[i]] += 1\n  end\n  total = 0\n  hand.each do |color, card|\n    total += count(card)\n  end\n  puts total == 3 ? \"1\" : \"0\"\nend"
  },
  {
    "language": "Ruby",
    "code": "def check v\n\treturn true if (v&v).count == 1\n\treturn true if v[0]+1==v[1] && v[1]+1==v[2]\n\treturn false\nend\n\ngets.to_i.times{\n\tan=gets.split(\" \").map{|e|e.to_i}\n\tac=gets.split(\" \")\n\tcount=0\n\tc=[[],[],[]]\n\tac.each_with_index{|v,i|\n\t\tc[0].concat [an[i]] if v == \"R\"\n\t\tc[1].concat [an[i]] if v == \"G\"\n\t\tc[2].concat [an[i]] if v == \"B\"\n\t}\n\tmax=0\n\t3.times{|i|\n\t\tmaxCount=0\n\t\tc[i].permutation{|pset|\n\t\t\tcount=0\n\t\t\t(pset.length/3).times{|t|\n\t\t\t\tcount += 1 if check(pset[3*t..3*t+2])\n\t\t\t}\n\t\t\tmaxCount = count if maxCount < count\n\t\t}\n\t\tmax += maxCount\n\t}\n\tp 1 if max >= 3\n\tp 0 if max < 3\n}"
  },
  {
    "language": "Ruby",
    "code": "def isSequence?(x)\n  return x[0] + 1 == x[1] && x[1] + 1 == x[2]\nend\n\ndef isSameNumber?(x)\n  return x[0] == x[1] && x[1] == x[2]\nend\n\n\n# ????????????????????????????????????????????????????????????????????? \ndef permutation(_x)\n  @res = []\n  m = []\n  _x.uniq.map{|i| m << _x.count(i)}\n  x = _x.uniq\n  def perm(x, m, result=[])\n    if m.all?{|n| n == 0 }\n      @res << result\n    else\n      (m.length).times{|i|\n        if m[i] > 0\n          m[i] -= 1\n          perm(x, m, result+[x[i]])\n          m[i] += 1\n        end\n      }\n    end\n  end\n  perm(x, m)\n  return @res\nend\n\ncl = {\"R\"=>0, \"G\"=>10,\"B\"=>100}\nk = 9\nt = gets.to_i\nt.times do |i|\n  n = gets.split.map(&:to_i)\n  c = gets.split\n  k.times do |j|\n    n[j] += cl[c[j]]\n  end\n  n.sort!\n\n\n  if((n[3] - n[2]).between?(0, 2) || (n[6] - n[5]).between?(0, 2))\n  nnew = permutation(n)\n  tres = nnew.any?{|v|\n    res = []\n    3.times do |k|\n      res << [v[k * 3], v[k * 3 + 1], v[k * 3 + 2]]\n    end\n    res.all?{|x| isSequence?(x) || isSameNumber?(x)}\n  }\n  p tres ? 1: 0\n  else\n    res = []\n    3.times do |k|\n      res << [n[k * 3], n[k * 3 + 1], n[k * 3 + 2]]\n    end\n    p (res.all?{|x| isSequence?(x) || isSameNumber?(x)}) ? 1 : 0\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def check v\n\treturn true if (v&v).count == 1\n\treturn true if v[0]+1==v[1] && v[1]+1==v[2]\n\treturn false\nend\n\ngets.to_i.times{\n\tan=gets.split(\" \").map{|e|e.to_i}\n\tac=gets.split(\" \")\n\tcount=0\n\tc=[[],[],[]]\n\tac.each_with_index{|v,i|\n\t\tc[0].concat [an[i]] if v == \"R\"\n\t\tc[1].concat [an[i]] if v == \"G\"\n\t\tc[2].concat [an[i]] if v == \"B\"\n\t}\n\tmax=0\n\t3.times{|i|\n\t\tmaxCount=0\n\t\tc[i].permutation{|pset|\n\t\t\tcount=0\n\t\t\t(pset.length/3).times{|t|\n\t\t\t\tbreak if !check(pset[3*t..3*t+2])\n\t\t\t\tcount += 1\n\t\t\t}\n\t\t\tmaxCount = count if maxCount < count\n\t\t}\n\t\tmax += maxCount\n\n\t}\n\tp 1 if max >= 3\n\tp 0 if max < 3\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.c.stdio;\nimport std.range;\nimport std.array;\nimport std.functional;\nimport std.algorithm;\nimport std.conv;\nimport std.container;\nimport std.math;\nimport std.numeric;\nimport std.string;\nimport std.c.string;\nimport std.regex;\nimport std.typecons;\n\nint[] X;\nchar[] Y;\nvoid input() {\n    X = readln.chomp.split(\" \").map!(to!int).array;\n    Y = cast(char[])(readln.chomp.split(\" \").map!\"a[0]\".array);\n}\n\nvoid solve() {\n    auto used = new bool[9];\n    bool dfs() {\n        foreach (i; 0 .. 9) {\n            foreach (j; 0 .. 9) {\n                foreach (k; 0 .. 9) {\n                    if (i == j || j == k || k == i) continue;\n                    if (used[i] || used[j] || used[k]) continue;\n                    if (X[i] + 1 == X[j] && X[j] + 1 == X[k] &&\n                            Y[i] == Y[j] && Y[j] == Y[k]) {\n                        used[i] = used[j] = used[k] = true;\n                        if (dfs) return true;\n                        used[i] = used[j] = used[k] = false;\n                    }\n                }\n            }\n        }\n        foreach (i; 0 .. 9) {\n            foreach (j; 0 .. 9) {\n                foreach (k; 0 .. 9) {\n                    if (i == j || j == k || k == i) continue;\n                    if (used[i] || used[j] || used[k]) continue;\n                    if (X[i] == X[j] && X[j] == X[k] &&\n                            Y[i] == Y[j] && Y[j] == Y[k]) {\n                        used[i] = used[j] = used[k] = true;\n                        if (dfs) return true;\n                        used[i] = used[j] = used[k] = false;\n                    }\n                }\n            }\n        }\n        return used.count(true) == 9;\n    }\n    writeln(cast(int)(dfs));\n}\n \nvoid main() {\n    int T; scanf(\"%d\\n\", &T);\n    foreach (t; 0 .. T) {\n        input; solve;\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.c.stdio;\nimport std.range;\nimport std.array;\nimport std.functional;\nimport std.algorithm;\nimport std.conv;\nimport std.container;\nimport std.math;\nimport std.numeric;\nimport std.string;\nimport std.c.string;\nimport std.regex;\nimport std.typecons;\n\nint[] X;\nchar[] Y;\nvoid input() {\n    X = readln.chomp.split(\" \").map!(to!int).array;\n    Y = cast(char[])(readln.chomp.split(\" \").map!\"a[0]\".array);\n}\n\nvoid solve() {\n    auto used = new bool[9];\n    foreach (i; 0 .. 9) {\n        foreach (j; 0 .. 9) {\n            foreach (k; 0 .. 9) {\n                if (i == j || j == k || k == i) continue;\n                if (used[i] || used[j] || used[k]) continue;\n                if (X[i] == X[j] && X[j] == X[k] &&\n                    Y[i] == Y[j] && Y[j] == Y[k]) {\n                    used[i] = used[j] = used[k] = true;\n                }\n            }\n        }\n    }\n    foreach (i; 0 .. 9) {\n        foreach (j; 0 .. 9) {\n            foreach (k; 0 .. 9) {\n                if (i == j || j == k || k == i) continue;\n                if (used[i] || used[j] || used[k]) continue;\n                if (X[i] + 1 == X[j] && X[j] + 1 == X[k] &&\n                    Y[i] == Y[j] && Y[j] == Y[k]) {\n                    used[i] = used[j] = used[k] = true;\n                }\n            }\n        }\n    }\n    writeln(cast(int)(used.count(true) == 9));\n}\n \nvoid main() {\n    int T; scanf(\"%d\\n\", &T);\n    foreach (t; 0 .. T) {\n        input; solve;\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.c.stdio;\nimport std.range;\nimport std.array;\nimport std.functional;\nimport std.algorithm;\nimport std.conv;\nimport std.container;\nimport std.math;\nimport std.numeric;\nimport std.string;\nimport std.c.string;\nimport std.regex;\nimport std.typecons;\n\nint[] X;\nchar[] Y;\nvoid input() {\n    X = readln.chomp.split(\" \").map!(to!int).array;\n    Y = cast(char[])(readln.chomp.split(\" \").map!\"a[0]\".array);\n}\n\nvoid solve() {\n    auto used = new bool[9];\n    foreach (i; 0 .. 9) {\n        foreach (j; 0 .. 9) {\n            foreach (k; 0 .. 9) {\n                if (i == j || j == k || k == i) continue;\n                if (used[i] || used[j] || used[k]) continue;\n                if (X[i] + 1 == X[j] && X[j] + 1 == X[k] &&\n                    Y[i] == Y[j] && Y[j] == Y[k]) {\n                    used[i] = used[j] = used[k] = true;\n                }\n            }\n        }\n    }\n    foreach (i; 0 .. 9) {\n        foreach (j; 0 .. 9) {\n            foreach (k; 0 .. 9) {\n                if (i == j || j == k || k == i) continue;\n                if (used[i] || used[j] || used[k]) continue;\n                if (X[i] == X[j] && X[j] == X[k] &&\n                    Y[i] == Y[j] && Y[j] == Y[k]) {\n                    used[i] = used[j] = used[k] = true;\n                }\n            }\n        }\n    }\n    //writeln(used);\n    writeln(cast(int)(used.count(true) == 9));\n}\n \nvoid main() {\n    int T; scanf(\"%d\\n\", &T);\n    foreach (t; 0 .. T) {\n        input; solve;\n    }\n}"
  },
  {
    "language": "Python",
    "code": "def rm_123(A):\n\tif len(A) == 0: return 1\n\tfor a in set(A):\n\t\tif set([a,a+1,a+2]) <= set(A):\n\t\t\tif len(A) == 3: return 1\n\t\t\tA1 = A[:]\n\t\t\tfor i in range(3): A1.remove(a+i)\n\t\t\treturn judge(A1)\n\ndef rm_111(A):\n\tif len(A) == 0: return 1\n\tfor a in set(A):\n\t\tif A.count(a) >= 3:\n\t\t\tif len(A) == 3: return 1\n\t\t\tA1 = A[:]\n\t\t\tfor i in range(3): A1.remove(a)\n\t\t\treturn judge(A1)\n\ndef judge(A):\n\treturn rm_123(A) or rm_111(A)\n\t\nfor _ in range(input()):\n\tn = map(int,raw_input().split())\n\tR = []; G = []; B = []\n\ts = raw_input().split()\n\tfor i in range(len(n)):\n\t\tif   s[i] == \"R\": R.append(n[i])\n\t\telif s[i] == \"G\": G.append(n[i])\n\t\telif s[i] == \"B\": B.append(n[i])\n\tprint 1 if judge(R) and judge(G) and judge(B) else 0\n\t"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    n = [int(i) for i in input().split()]\n    c = [i for i in input().split()]\n    value = [[],[],[]]\n    for j in range(9):\n        if c[j] == \"R\":\n            value[0].append(n[j])\n        elif c[j] == \"G\":\n            value[1].append(n[j])\n        else:\n            value[2].append(n[j])\n    ans = 1\n    for i in range(3):\n        l = len(value[i])\n        if l%3 != 0:#RGBの長さが3の倍数でないと、正解になる可能性はない\n            ans = 0\n        else:\n            value[i].sort()\n            s = l//3\n            j=0\n            while ans>0 and s>0 and j<len(value[i])-2:\n                if value[i][j] == value[i][j+1]:#隣り合う数字が一致している場合\n                    if value[i][j+1] == value[i][j+2]:#3連続で同じ数字が並んでいる場合\n                        for k in range(3):\n                            value[i].pop(j)#値の削除\n                        s-=1\n                    elif value[i][j+1]+1==value[i][j+2]:#2つめの数字と3つ目の数字が連番　ex)112,223,334,\n                        k=j+3\n                        while k<len(value[i]) and value[i][k]==value[i][j+2]:#3つめと4つめの値が同じ\n                            k+=1\n                        if k>=len(value[i]) or value[i][k]!=value[i][j+2]+1:#4つ目と5つ目の数字が連番でない場合 ex)11225,22335　不正解\n                            ans=0\n                        else:\n                            #値削除\n                            value[i].pop(k)\n                            value[i].pop(j+2)\n                            value[i].pop(j)\n                        s-=1\n                    else:#3つ目の数字が全然違うやつ\n                        ans=0\n\n                elif value[i][j]+1==value[i][j+1]:#隣り合う数字が連番の場合\n                    k=j+2\n                    while k<len(value[i]) and value[i][k]==value[i][j+1]:\n                        k+=1\n                    if k>=len(value[i]) or value[i][k]!=value[i][j+1]+1:#3つめの数字が連番でない場合　不正解\n                        ans=0\n                    else:\n                        #値削除\n                        value[i].pop(k)\n                        value[i].pop(j+1)\n                        value[i].pop(j)\n                        s-=1\n                else:#隣り合う数字が連番でもなく、同値でもない場合　不正解\n                    ans=0\n        i+=1\n    print(ans)\n"
  },
  {
    "language": "Python",
    "code": "for _ in range(int(input())):\n    n, c = map(int, input().split()), input().split()\n    c = list(zip(c, n))\n    c.sort(key = lambda x:x[1])\n    c.sort(key = lambda x:x[0])\n    print(c)\n    while c != []:\n        if c[-1] == c[-2] == c[-3]:\n            c = c[:-3]\n        elif (c[-1][0], c[-1][1] -1) in c and (c[-1][0], c[-1][1] -2) in c :\n            c.remove((c[-1][0], c[-1][1] -1))\n            c.remove((c[-1][0], c[-1][1] -2))\n            c.pop()\n        else:print(0);break\n    else:print(1)\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        if hand[1] in tmp:\n                            if hand[2] in tmp:\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "trial = int(input())\nnums,words = [],[]\nfor s in range(trial):\n    nums = [[int(n)] for n in input().split(\" \")]\n    words = [n for n in input().split(\" \")]\n    for t in range(9):\n        nums[t].append(words[t])\n    nums = sorted(nums,key=lambda x:(x[1],x[0]),reverse=False)\n    n,color,cnt,samecnt,ans = nums[0][0],nums[0][1],1,1,0\n    for t in range(1,9):\n        if samecnt == 3:\n            samecnt = 0\n            ans += 1\n        if cnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        else:\n            if color != nums[t][1]:\n                n,color,cnt,samecnt = nums[t][0],nums[t][1],1,1\n            elif n == nums[t][0]:\n                n,color = nums[t][0],nums[t][1]\n                samecnt += 1\n            elif n == nums[t][0] - 1:\n                n,color,samecnt = nums[t][0],nums[t][1],1\n                cnt += 1\n            else:\n                print(0)\n                break\n    else:\n        if ans == 2 and (samecnt == 3 or cnt == 3):\n            print(1)\n        else:\n            print(0)"
  },
  {
    "language": "Python",
    "code": "import os\n\nwith open(\"input1.txt\") as f:\n    trial = int(f.readline())\n    nums,words = [],[]\n    for s in range(trial):\n        nums = [[int(n)] for n in f.readline().split(\" \")]\n        words = [n for n in f.readline().rstrip(\"\\n\").split(\" \")]\n        for t in range(9):\n            nums[t].append(words[t])\n        nums = sorted(nums,key=lambda x:(x[1],x[0]),reverse=False)\n        n,color,cnt,samecnt,ans = nums[0][0],nums[0][1],1,1,0\n        for t in range(1,9):\n            #print(cnt,samecnt,1,nums[t][0],nums[t][1])\n            if samecnt == 3:\n                samecnt = 0\n                ans += 1\n            if cnt == 3:\n                samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n                ans += 1\n            else:\n                if color != nums[t][1]:\n                    n,color,cnt,samecnt = nums[t][0],nums[t][1],1,1\n                elif n == nums[t][0]:\n                    samecnt += 1\n                elif n == nums[t][0] - 1:\n                    n,samecnt = nums[t][0],1\n                    cnt += 1\n                else:\n                    print(0)\n                    break\n        else:\n            if ans == 2 and (samecnt == 3 or cnt == 3):\n                print(1)\n            else:\n                print(0)"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    num = list(map(int, input().split()))\n    coler = input().split()\n    groups = [[], [], []]\n    for i, c in enumerate(coler):\n        if c == \"R\":\n            groups[0].append(num[i])\n        elif c == \"G\":\n            groups[1].append(num[i])\n        else:\n            groups[2].append(num[i])\n    for group in groups:\n        for _ in range(3):\n            group.sort()\n            for i in group:\n                if group.count(i) >= 3:\n                    for _ in range(3):\n                        group.remove(i)\n                if i + 1 in group and i + 2 in group:\n                    for j in range(3):\n                        group.remove(i + j)\n    if len(groups[0]) == len(groups[1]) == len(groups[2]) == 0:\n        print(1)\n    else:\n        print(0)\n"
  },
  {
    "language": "Python",
    "code": "\na = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append(map(int, input().split()))\n    else:\n        a.append(map(str, input().split()))\n\nfor i in range(M):\n    #data = [[2,2,2,3,3,3,1,1,1],[\"R\",\"G\",\"B\",\"R\",\"G\",\"B\",\"R\",\"G\",\"B\"]]\n    data = a[i*2:(i+1)*2]\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values(1,axis=1)\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values(0,axis=1)\n        r = (data3.iloc[:,0][0]+data3.iloc[:,2][0])/data3.iloc[:,1][0]\n        if data3.iloc[:,0][1] == data3.iloc[:,1][1] == data3.iloc[:,2][1]:\n            rgb_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(r == 2 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][0] != 8 and data_df.iloc[:,1][0] != 9 and data_df.iloc[:,3][0] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "for _ in range(int(input())):\n    n, c = map(int, input().split()), input().split()\n    c = list(zip(c, n))\n    c.sort(key = lambda x:x[1])\n    c.sort(key = lambda x:x[0])\n    while c != []:\n        if c[-1] == c[-2] == c[-3]:\n            c = c[:-3]\n        elif (c[-1][0], c[-1][1] -1) in c and (c[-1][0], c[-1][1] -2) in c :\n            c.remove((c[-1][0], c[-1][1] -1))\n            c.remove((c[-1][0], c[-1][1] -2))\n            c.pop()\n        else:print(0);break\n    else:print(1)\n"
  },
  {
    "language": "Python",
    "code": "import itertools as it\n\nT = input()\n\ndef goodset(a, b, c):\n    return (a == b and b == c) or (a + 1 == b and b + 1 == c)\n\ndef win(c):\n    return goodset(c[0], c[1], c[2]) and goodset(c[3], c[4], c[5]) and goodset(c[6], c[7], c[8])\n\nfor i in range(T):\n    cards = map(int, raw_input().split())\n    color = raw_input().split()\n    for j in range(9):\n        if color[j] == \"G\":\n            cards[j] += 100\n        elif color[j] == \"B\":\n            cards[j] += 200\n    w = 0\n    for p in it.permutations(range(9)):\n        c = [cards[p[j]] for j in range(9)]\n        if win(c):\n            w = 1\n            break\n    print w"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "def rm_123(A):\n\tfor a in set(A):\n\t\tif set([a,a+1,a+2]) <= set(A):\n\t\t\tA1 = A[:]\n\t\t\tfor i in range(3): A1.remove(a+i)\n\t\t\treturn judge(A1)\n\ndef rm_111(A):\n\tfor a in set(A):\n\t\tif A.count(a) >= 3:\n\t\t\tA1 = A[:]\n\t\t\tfor i in range(3): A1.remove(a)\n\t\t\treturn judge(A1)\n\ndef judge(A):\n\treturn len(A) == 0 or rm_123(A) or rm_111(A)\n\nfor _ in range(input()):\n\tn = map(int,raw_input().split())\n\tR = []; G = []; B = []\n\ts = raw_input().split()\n\tfor i in range(len(n)):\n\t\tif   s[i] == \"R\": R.append(n[i])\n\t\telif s[i] == \"G\": G.append(n[i])\n\t\telif s[i] == \"B\": B.append(n[i])\n\tprint 1 if judge(R) and judge(G) and judge(B) else 0\n\t"
  },
  {
    "language": "Python",
    "code": "# your code goes here\n#rummy\n\nT=int(input())\nfor i in range(T):\n    n=[int(i) for i in input().split()]\n    c=[i for i in input().split()]\n    R=[[],[],[]]\n    for i in range(9):\n        if c[i]==\"R\":\n            R[0].append(n[i])\n        elif c[i]==\"G\":        \n            R[1].append(n[i])\n        else:\n            R[2].append(n[i])\n    y=1\n    i=0\n #   print(R)\n    while y>0 and i<3:\n        l=len(R[i])\n        if l%3!=0:\n            y=0\n        else:\n            R[i].sort()\n            s=l//3\n            j=0\n            while y>0 and s>0 and j<len(R[i])-2:\n                if R[i][j]==R[i][j+1]:\n                    if R[i][j+1]==R[i][j+2]:\n                        for k in range(3):\n                            R[i].pop(j)\n                        s-=1\n                    elif R[i][j+1]+1==R[i][j+2]:\n                        k=j+3\n                        while k<len(R[i]) and R[i][k]==R[i][j+2]:\n                            k+=1\n                        if k>=len(R[i]) or R[i][k]!=R[i][j+2]+1:\n                            y=0\n                        else:\n                            R[i].pop(k)\n                            R[i].pop(j+2)\n                            R[i].pop(j)\n                        s-=1\n                    else:\n                        y=0\n                elif R[i][j]+1==R[i][j+1]:\n                    k=j+2\n                    while k<len(R[i]) and R[i][k]==R[i][j+1]:\n                        k+=1\n                    if k>=len(R[i]) or R[i][k]!=R[i][j+1]+1:\n                        y=0\n                    else:\n                        R[i].pop(k)\n                        R[i].pop(j+1)\n                        R[i].pop(j)\n                        s-=1\n                else:\n                    y=0\n        i+=1\n    print(y)"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                print(hand)\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    n = [int(i) for i in input().split()]\n    c = [i for i in input().split()]\n    value = [[],[],[]]\n    for j in range(9):\n        if c[j] == \"R\":\n            value[0].append(n[j])\n        elif c[j] == \"G\":\n            value[1].append(n[j])\n        else:\n            value[2].append(n[j])\n    ans = 1\nfor i in range(3):\n    l = len(value[i])\n    if l%3 != 0:#RGBの長さが3の倍数でないと、正解になる可能性はない\n        ans = 0\n    else:\n        value[i].sort()\n        s = l//3\n        j=0\n        while ans>0 and s>0 and j<len(value[i])-2:\n            if value[i][j] == value[i][j+1]:#隣り合う数字が一致している場合\n                if value[i][j+1] == value[i][j+2]:#3連続で同じ数字が並んでいる場合\n                    for k in range(3):\n                        value[i].pop(j)#値の削除\n                    s-=1\n                elif value[i][j+1]+1==value[i][j+2]:#2つめの数字と3つ目の数字が連番　ex)112,223,334,\n                    k=j+3\n                    while k<len(value[i]) and value[i][k]==value[i][j+2]:#3つめと4つめの値が同じ\n                        k+=1\n                    if k>=len(value[i]) or value[i][k]!=value[i][j+2]+1:#4つ目と5つ目の数字が連番でない場合 ex)11225,22335　不正解\n                        ans=0\n                    else:\n                        #値削除\n                        value[i].pop(k)\n                        value[i].pop(j+2)\n                        value[i].pop(j)\n                    s-=1\n                else:#3つ目の数字が全然違うやつ\n                    ans=0\n\n            elif value[i][j]+1==value[i][j+1]:#隣り合う数字が連番の場合\n                k=j+2\n                while k<len(value[i]) and value[i][k]==value[i][j+1]:\n                    k+=1\n                if k>=len(value[i]) or value[i][k]!=value[i][j+1]+1:#3つめの数字が連番でない場合　不正解\n                    ans=0\n                else:\n                    #値削除\n                    value[i].pop(k)\n                    value[i].pop(j+1)\n                    value[i].pop(j)\n                    s-=1\n            else:#隣り合う数字が連番でもなく、同値でもない場合　不正解\n                ans=0\n    i+=1\nprint(ans)\n"
  },
  {
    "language": "Python",
    "code": "MOD = 10 ** 9 + 7\nINF = 10 ** 10\nimport sys\nsys.setrecursionlimit(100000000)\ndy = (-1,0,1,0)\ndx = (0,1,0,-1)\nfrom itertools import permutations\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        number = list(map(int,input().split()))\n        color = input().split()\n        ans = 0\n        for ptr in permutations(range(9)):\n            flag = True\n            for i in range(3):\n                c = color[ptr[3*i]]\n                card = []\n                for j in range(3):\n                    if c != color[ptr[3*i + j]]:\n                        flag = False\n                        break\n                    card.append(number[ptr[3*i + j]])\n                if not flag:\n                    break\n                card.sort()\n                if card[0] == card[2] or (card[2] - card[1] == 1 and card[1] - card[0] == 1):\n                    continue\n                else:\n                    flag = False\n                    break\n            if flag:\n                ans = 1\n                break\n        print(ans)\nif __name__ == '__main__':\n    main()\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        break\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            if len(datasets[dataset][rgb_key]) > 1:\n                nums = sorted(datasets[dataset][rgb_key])\n            else:\n                continue\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        break\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                print(hand)\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        break\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                if hand in ''.join(nums):\n                    match_count += 1\n                    for digit in hand:\n                        nums.pop(nums.index(digit))\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "n = int(input())\ndef check(nl):\n    fl = list(nl)\n    for w in range(len(nl)):\n        if (fl[w] in nl):\n            i = fl[w]\n            if ((i+1 in nl) and (i+2 in nl)):\n                for k in range(i,i+3):\n                    nl.remove(k)\n            elif(nl.count(i)%3 == 0):\n                for k in range(nl.count(i)):\n                    nl.remove(i)\n        \n                \nfor i in range(n):\n    num_list = list(map(int, input().split()))\n    c_list = list(map(str, input().split()))\n    r = c_list.count('R')\n    g = c_list.count('G')\n    b = c_list.count('B')\n    if (r%3 == 0 and g % 3 == 0 and b % 3 == 0):\n        rlist = []\n        glist = []\n        blist = []\n        for k in range(9):\n            if(c_list[k] == 'R'):\n                rlist.append(num_list[k])\n            elif(c_list[k] == 'G'):\n                glist.append(num_list[k])\n            elif(c_list[k] == 'B'):\n                blist.append(num_list[k])\n        rlist.sort()\n        glist.sort()\n        blist.sort()\n        check(rlist)\n        check(glist)\n        check(blist)\n        if(len(rlist) == 0 and len(glist) == 0 and len(blist) == 0):\n            print(1)\n        else:\n            print(0)\n        \n        \n    else:\n        print(0)\n        \n"
  },
  {
    "language": "Python",
    "code": "trial = int(input())\nnums,words = [],[]\nfor s in range(trial):\n    nums = [[int(n)] for n in input().split(\" \")]\n    words = [n for n in input().rstrip(\"\\n\").split(\" \")]\n    for t in range(9):\n        nums[t].append(words[t])\n    nums = sorted(nums,key=lambda x:(x[1],x[0]),reverse=False)\n    n,color,cnt,samecnt,ans = nums[0][0],nums[0][1],1,1,0\n    for t in range(1,9):\n        #print(cnt,samecnt,ans)\n        if samecnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        elif cnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        else:\n            if color != nums[t][1]:\n                n,color,cnt,samecnt = nums[t][0],nums[t][1],1,1\n            elif n == nums[t][0]:\n                samecnt += 1\n            elif n == nums[t][0] - 1:\n                n,samecnt = nums[t][0],1\n                cnt += 1\n            else:\n                print(0)\n                break\n    else:\n        #print(cnt,ans)\n        if ans == 2 and (samecnt == 3 or cnt == 3):\n            print(1)\n        else:\n            print(0)"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            if len(datasets[dataset][rgb_key]) > 1:\n                nums = sorted(datasets[dataset][rgb_key])\n            else:\n                continue\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                if match_count == 3:\n                    results.append(1)\n                    break\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    num = list(map(int, input().split()))\n    coler = input().split()\n    groups = [[], [], []]\n    for i, c in enumerate(coler):\n        if c == \"R\":\n            groups[0].append(num[i])\n        elif c == \"G\":\n            groups[1].append(num[i])\n        else:\n            groups[2].append(num[i])\n    for group in groups:\n        while len(group) != 0 and len(group) % 3 == 0:\n            tmp = group[:]\n            group.sort()\n            i = group[0]\n            if group.count(i) >= 3:\n                for _ in range(3):\n                    group.remove(i)\n            if i + 1 in group and i + 2 in group:\n                for j in range(3):\n                    group.remove(i + j)\n            if tmp == group:\n                break\n    if len(groups[0]) == len(groups[1]) == len(groups[2]) == 0:\n        print(1)\n    else:\n        print(0)\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                if hand[0] and hand[1] and hand[2] in ''.join(nums):\n                    match_count += 1\n                    nums.pop(nums.index(hand[0]))\n                    nums.pop(nums.index(hand[1]))\n                    nums.pop(nums.index(hand[2]))\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "def rm_123(A):\n\tif len(A) == 0: return 1\n\tfor a in set(A):\n\t\tif set([a,a+1,a+2]) <= set(A):\n\t\t\tA1 = A[:]\n\t\t\tfor i in range(3): A1.remove(a+i)\n\t\t\treturn judge(A1)\n\ndef rm_111(A):\n\tif len(A) == 0: return 1\n\tfor a in set(A):\n\t\tif A.count(a) >= 3:\n\t\t\tA1 = A[:]\n\t\t\tfor i in range(3): A1.remove(a)\n\t\t\treturn judge(A1)\n\ndef judge(A):\n\treturn rm_123(A) or rm_111(A)\n\t\nfor _ in range(input()):\n\tn = map(int,raw_input().split())\n\tR = []; G = []; B = []\n\ts = raw_input().split()\n\tfor i in range(len(n)):\n\t\tif   s[i] == \"R\": R.append(n[i])\n\t\telif s[i] == \"G\": G.append(n[i])\n\t\telif s[i] == \"B\": B.append(n[i])\n\tprint 1 if judge(R) and judge(G) and judge(B) else 0\n\t"
  },
  {
    "language": "Python",
    "code": "n = int(input())\ndef check(nl):\n    for i in nl:\n        if ((i+1 in nl) and (i+2 in nl)):\n            for k in range(i,i+3):\n                nl.remove(k)\n        elif(nl.count(i)%3 == 0):\n            for k in range(nl.count(i)):\n                nl.remove(i)\n                \nfor i in range(n):\n    num_list = list(map(int, input().split()))\n    c_list = list(map(str, input().split()))\n    r = c_list.count('R')\n    g = c_list.count('G')\n    b = c_list.count('B')\n    if (r%3 == 0 and g % 3 == 0 and b % 3 == 0):\n        rlist = []\n        glist = []\n        blist = []\n        for k in range(9):\n            if(c_list[k] == 'R'):\n                rlist.append(num_list[k])\n            elif(c_list[k] == 'G'):\n                glist.append(num_list[k])\n            elif(c_list[k] == 'B'):\n                blist.append(num_list[k])\n        rlist.sort()\n        blist.sort()\n        glist.sort()\n        check(rlist)\n        check(glist)\n        check(blist)\n        if(rlist == [] and glist == [] and blist == []):\n            print(1)\n        else:\n            print(0)\n        \n        \n    else:\n        print(0)\n        \n"
  },
  {
    "language": "Python",
    "code": "#rummy\nT=int(input())\nfor i in range(T):\n    n=[int(i) for i in input().split()]\n    c=[i for i in input().split()]\n    R=[[],[],[]]\n    for i in range(9):\n        if c[i]==\"R\":\n            R[0].append(n[i])\n        elif c[i]==\"G\":\n            R[1].append(n[i])\n        else:\n            R[2].append(n[i])\n    y=1\n    i=0\n    while y>0 and i<3:\n        l=len(R[i])\n        if l%3!=0:\n            y=0\n        else:\n            R[i].sort()\n            s=l//3\n            j=0\n            while y>0 and s>0 and j<l-2:\n                if R[i][j]==R[i][j+1]:\n                    if R[i][j+1]!=R[i][j+2]:\n                        y=0\n                    else:\n                        s-=1\n                        j+=3\n                elif R[i][j]+1!=R[i][j+1]:\n                    y=0\n                elif R[i][j+1]+1!=R[i][j+2]:\n                    y=0\n                else:\n                    s-=1\n                    j+=3\n        i+=1\n    print(y)"
  },
  {
    "language": "Python",
    "code": "\na = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append(map(int, input().split()))\n    else:\n        a.append(map(str, input().split()))\n\nfor i in range(M):\n    #data = [[2,2,2,3,3,3,1,1,1],[\"R\",\"G\",\"B\",\"R\",\"G\",\"B\",\"R\",\"G\",\"B\"]]\n    data = a[i*2:(i+1)*2]\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values(1,axis=1)\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values(0,axis=1)\n        r = (data3.iloc[:,0][0]+data3.iloc[:,2][0])/data3.iloc[:,1][0]\n        if data3.iloc[:,0][1] == data3.iloc[:,1][1] == data3.iloc[:,2][1]:\n            rgb_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(r == 2 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][0] != 8 and data_df.iloc[:,1][0] != 9 and data_df.iloc[:,3][0] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "a = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append([int(i) for i in  input().split()])\n    else:\n        a.append([i for i in  input().split()])\n\nfor i in range(M):\n    data = a[i*2:(i+1)*2]\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values(1,axis=1)#色ソート\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    value_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values(0,axis=1)\n        r = (data3.iloc[:,0][0]+data3.iloc[:,2][0])/data3.iloc[:,1][0]\n        if data3.iloc[:,0][1] == data3.iloc[:,1][1] == data3.iloc[:,2][1]:\n            rgb_count+=1\n        if r == 2:\n            value_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(value_count == 3 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][0] != 8 and data_df.iloc[:,1][0] != 9 and data_df.iloc[:,3][0] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [int(num) for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = ''.join(str(num) for num in sorted(datasets[dataset][rgb_key]))\n\n            for hand in WINNING_HANDS:\n                if hand in nums:\n                    match_count += 1\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    num = list(map(int, input().split()))\n    coler = input().split()\n    groups = [[], [], []]\n    for i, c in enumerate(coler):\n        if c == \"R\":\n            groups[0].append(num[i])\n        elif c == \"G\":\n            groups[1].append(num[i])\n        else:\n            groups[2].append(num[i])\n    for group in groups:\n        while len(group) != 0 and len(group) % 3 == 0:\n            tmp = group[:]\n            group.sort()\n            i = group[0]\n            if group.count(i) >= 3:\n                for _ in range(3):\n                    group.remove(i)\n            if i + 1 in group and i + 2 in group:\n                for j in range(3):\n                    group.remove(i + j)\n            if tmp == group:\n                break\n    if len(groups[0]) == len(groups[1]) == len(groups[2]) == 0:\n        print(1)\n    else:\n        print(0)\n"
  },
  {
    "language": "Python",
    "code": "n = int(input())\ndef check(nl):\n    fl = list(nl)\n    for w in range(len(nl)):\n        if (fl[w] in nl):\n            i = fl[w]\n            if ((i+1 in nl) and (i+2 in nl)):\n                for k in range(i,i+3):\n                    nl.remove(k)\n            elif(nl.count(i)%3 == 0):\n                for k in range(nl.count(i)):\n                    nl.remove(i)\n        \n                \nfor i in range(n):\n    num_list = list(map(int, input().split()))\n    c_list = list(map(str, input().split()))\n    r = c_list.count('R')\n    g = c_list.count('G')\n    b = c_list.count('B')\n    if (r%3 == 0 and g % 3 == 0 and b % 3 == 0):\n        rlist = []\n        glist = []\n        blist = []\n        for k in range(9):\n            if(c_list[k] == 'R'):\n                rlist.append(num_list[k])\n            elif(c_list[k] == 'G'):\n                glist.append(num_list[k])\n            elif(c_list[k] == 'B'):\n                blist.append(num_list[k])\n        check(rlist)\n        check(glist)\n        check(blist)\n        if(rlist == [] and glist == [] and blist == []):\n            print(1)\n        else:\n            print(0)\n        \n        \n    else:\n        print(0)\n        \n"
  },
  {
    "language": "Python",
    "code": "trial = int(f.input())\nnums,words = [],[]\nfor s in range(trial):\n    nums = [[int(n)] for n in f.input().split(\" \")]\n    words = [n for n in f.input().rstrip(\"\\n\").split(\" \")]\n    for t in range(9):\n        nums[t].append(words[t])\n    nums = sorted(nums,key=lambda x:(x[1],x[0]),reverse=False)\n    n,color,cnt,samecnt,ans = nums[0][0],nums[0][1],1,1,0\n    for t in range(1,9):\n        #print(cnt,samecnt,ans)\n        if samecnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        elif cnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        else:\n            if color != nums[t][1]:\n                n,color,cnt,samecnt = nums[t][0],nums[t][1],1,1\n            elif n == nums[t][0]:\n                samecnt += 1\n            elif n == nums[t][0] - 1:\n                n,samecnt = nums[t][0],1\n                cnt += 1\n            else:\n                print(0)\n                break\n    else:\n        #print(cnt,ans)\n        if ans == 2 and (samecnt == 3 or cnt == 3):\n            print(1)\n        else:\n            print(0)"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [int(num) for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = ''.join(str(num) for num in sorted(datasets[dataset][rgb_key]))\n\n            for hand in WINNING_HANDS:\n                if hand in nums:\n                    match_count += 1\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    n = [int(i) for i in input().split()]\n    c = [i for i in input().split()]\n    value = [[],[],[]]\n    for j in range(9):\n        if c[j] == \"R\":\n            value[0].append(n[j])\n        elif c[j] == \"G\":\n            value[1].append(n[j])\n        else:\n            value[2].append(n[j])\n    ans = 1\n    for i in range(3):\n        l = len(value[i])\n        if l%3 != 0:#RGBの長さが3の倍数でないと、正解になる可能性はない\n            ans = 0\n        else:\n            value[i].sort()\n            s = l//3\n            j=0\n            while ans>0 and s>0 and j<len(value[i])-2:\n                if value[i][j] == value[i][j+1]:#隣り合う数字が一致している場合\n                    if value[i][j+1] == value[i][j+2]:#3連続で同じ数字が並んでいる場合\n                        for k in range(3):\n                            value[i].pop(j)#値の削除\n                        s-=1\n                    elif value[i][j+1]+1==value[i][j+2]:#2つめの数字と3つ目の数字が連番　ex)112,223,334,\n                        k=j+3\n                        while k<len(value[i]) and value[i][k]==value[i][j+2]:#3つめと4つめの値が同じ\n                            k+=1\n                        if k>=len(value[i]) or value[i][k]!=value[i][j+2]+1:#4つ目と5つ目の数字が連番でない場合 ex)11225,22335　不正解\n                            ans=0\n                        else:\n                            #値削除\n                            value[i].pop(k)\n                            value[i].pop(j+2)\n                            value[i].pop(j)\n                        s-=1\n                    else:#3つ目の数字が全然違うやつ\n                        ans=0\n\n                elif value[i][j]+1==value[i][j+1]:#隣り合う数字が連番の場合\n                    k=j+2\n                    while k<len(value[i]) and value[i][k]==value[i][j+1]:\n                        k+=1\n                    if k>=len(value[i]) or value[i][k]!=value[i][j+1]+1:#3つめの数字が連番でない場合　不正解\n                        ans=0\n                    else:\n                        #値削除\n                        value[i].pop(k)\n                        value[i].pop(j+1)\n                        value[i].pop(j)\n                        s-=1\n                else:#隣り合う数字が連番でもなく、同値でもない場合　不正解\n                    ans=0\n        i+=1\n    print(ans)\n"
  },
  {
    "language": "Python",
    "code": "def sort(a):\n    temp = 0\n    for i in range(a-1):\n        if a[i] > a[i+1]:\n            temp = a[i]\n            a[i] = a[i+1]\n            a[i+1] = temp\n    return a\n\n\nT = int(input())\ncount = 0\na = []\nb = [[] for j in range(T)]\nanswer = [[False for i in range(3)] for j in range(T)]\nfor i in range(2*T):\n    a.append(list(input().split()))\nfor i in range(T):\n    for j in range(9):\n        a[i*2][j] = int(a[i*2][j])\nfor i in range(T):\n    for j in range(9):\n        if a[2*i+1][j] == \"R\":\n            a[2*i][j] = a[2*i][j] + 10\n        if a[2*i+1][j] == \"G\":\n            a[2*i][j] = a[2*i][j] + 20\n        if a[2*i+1][j] == \"B\":\n            a[2*i][j] = a[2*i][j] + 30\n        b[i].append(a[2*i][j])\nfor j in range(T):\n    for k in range(9):\n        for i in range(8):\n            temp = 0\n            if b[j][i] > b[j][i+1]:\n                temp = b[j][i]\n                b[j][i] = b[j][i+1]\n                b[j][i+1] = temp\nfor i in range(T):\n    for j in range(3):\n        if ((b[i][3*j] == b[i][3*j+1]) and (b[i][3*j] == b[i][3*j+2])) or ((b[i][3*j]+1 == b[i][3*j+1]) and (b[i][3*j]+2 == b[i][3*j+2])):\n                answer[i][j] = True\nfor i in range(T):\n    for j in range(2):\n        if ((b[i][j] == b[i][j+2]) and (b[i][j] == b[i][j+4])) or ((b[i][j]+1 == b[i][j+2]) and (b[i][j]+2 == b[i][j+4])):\n                answer[i][j] = True\nfor i in range(T):\n    if answer[i][0] and answer[i][1] and answer[i][2]:\n        print(1)\n    else:\n        print(0)\n\n            \n        \n        \n    \n\n"
  },
  {
    "language": "Python",
    "code": "\na = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append(map(int, input().split()))\n    else:\n        a.append(map(str, input().split()))\n\nfor i in range(M):\n    data = a[i*2:(i+1)*2]\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values(1,axis=1)\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    value_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values(0,axis=1)\n        r = (data3.iloc[:,0][0]+data3.iloc[:,2][0])/data3.iloc[:,1][0]\n        if data3.iloc[:,0][1] == data3.iloc[:,1][1] == data3.iloc[:,2][1]:\n            rgb_count+=1\n        if r == 2:\n            value_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(value_count == 3 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][0] != 8 and data_df.iloc[:,1][0] != 9 and data_df.iloc[:,3][0] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [int(num) for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = ''.join(str(num) for num in sorted(datasets[dataset][rgb_key]))\n\n            for hand in WINNING_HANDS:\n                if hand in nums:\n                    match_count += 1\n                    nums.replace(hand, '')\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n \nimport sys\n \n \ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n \n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n \n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n \n        match_count = int()\n \n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n \n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n \n                    if match_count == 3:\n                        results.append(1)\n                        continue\n \n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n \n    for result in results:\n        print(result)\n \n \nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "a = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append([int(i) for i in  input().split()])\n    else:\n        a.append([i for i in  input().split()])\n\nfor i in range(M):\n    data = a[i*2:(i+1)*2]\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values(1,axis=1)#色ソート\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    value_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values(0,axis=1)\n        r = (data3.iloc[:,0][0]+data3.iloc[:,2][0])/data3.iloc[:,1][0]\n        if data3.iloc[:,0][1] == data3.iloc[:,1][1] == data3.iloc[:,2][1]:\n            rgb_count+=1\n        if r == 2:\n            value_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(value_count == 3 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][0] != 8 and data_df.iloc[:,1][0] != 9 and data_df.iloc[:,3][0] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "trial = int(input())\nnums,words = [],[]\nfor s in range(trial):\n    nums = [[int(n)] for n in input().split(\" \")]\n    words = [n for n in input().split(\" \")]\n    for t in range(9):\n        nums[t].append(words[t])\n    nums = sorted(nums,key=lambda x:(x[1],x[0]),reverse=False)\n    n,color,cnt,samecnt,ans = nums[0][0],nums[0][1],1,1,0\n    for t in range(1,9):\n        if samecnt == 3:\n            samecnt = 0\n            ans += 1\n        if cnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        else:\n            if color != nums[t][1]:\n                n,color,cnt,samecnt = nums[t][0],nums[t][1],1,1\n            elif n == nums[t][0]:\n                n,color = nums[t][0],nums[t][1]\n                samecnt += 1\n            elif n == nums[t][0] - 1:\n                n,color,samecnt = nums[t][0],nums[t][1],1\n                cnt += 1\n            else:\n                print(0)\n                break\n    else:\n        if ans == 2 and (samecnt == 3 or cnt == 3):\n            print(1)\n        else:\n            print(0)"
  },
  {
    "language": "Python",
    "code": "trial = int(f.readline())\nnums,words = [],[]\nfor s in range(trial):\n    nums = [[int(n)] for n in f.readline().split(\" \")]\n    words = [n for n in f.readline().rstrip(\"\\n\").split(\" \")]\n    for t in range(9):\n        nums[t].append(words[t])\n    nums = sorted(nums,key=lambda x:(x[1],x[0]),reverse=False)\n    n,color,cnt,samecnt,ans = nums[0][0],nums[0][1],1,1,0\n    for t in range(1,9):\n        #print(cnt,samecnt,ans)\n        if samecnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        elif cnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        else:\n            if color != nums[t][1]:\n                n,color,cnt,samecnt = nums[t][0],nums[t][1],1,1\n            elif n == nums[t][0]:\n                samecnt += 1\n            elif n == nums[t][0] - 1:\n                n,samecnt = nums[t][0],1\n                cnt += 1\n            else:\n                print(0)\n                break\n    else:\n        #print(cnt,ans)\n        if ans == 2 and (samecnt == 3 or cnt == 3):\n            print(1)\n        else:\n            print(0)"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                print(hand)\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "def Check(A) :\n    Set = 0\n    if len(A) < 3 :\n        return False\n    else :\n        a = 0\n        while True :\n            if a >= len(A)-2 :\n                break\n            if A[a] == A[a+1] and A[a] == A[a+2] :\n                Set += 1\n                youso = A[a]\n                A.remove(youso)\n                A.remove(youso)\n                A.remove(youso)\n                a = 0\n            elif A[a]+1 in A and A[a]+2 in A :\n                Set += 1\n                youso = A[a]\n                A.remove(youso)\n                A.remove(youso+1)\n                A.remove(youso+2)\n                a = 0\n            else :\n                a += 1\n        return Set\n\nn = int(input())\nfor i in range(n) :\n    card = list([0, \"X\"] for i in range(9))\n    R = []\n    G = []\n    B = []\n    tmp = list(map(int,input().split()))\n    for j in range(9) :\n        card[j][0] = tmp[j]\n    tmp = list(input().split())\n    for j in range(9) :\n        card[j][1] = tmp[j]\n        if tmp[j] == \"R\" :\n            R.append(card[j][0])\n        elif tmp[j] == \"G\" :\n            G.append(card[j][0])\n        else :\n            B.append(card[j][0])\n    \n    R.sort()\n    G.sort()\n    B.sort()\n    if Check(R) + Check(G) + Check(B) == 3 :\n        print(1) \n    else :\n        print(0)\n"
  },
  {
    "language": "Python",
    "code": "n = int(input())\nfor j in range(n):\n    num = list(map(int, input().split()))\n    let = input().split()\n    lstR = []\n    lstG = []\n    lstB = []\n    for i in range(9):\n        if let[i] == \"R\":\n            lstR.append(num[i])\n        elif let[i] == \"G\":\n            lstG.append(num[i])\n        else:\n            lstB.append(num[i])\n    lstR.sort()\n    lstG.sort()\n    lstB.sort()\n    lst = [lstR, lstG, lstB]\n    ans = 1\n    if len(lstR)%3 == 0 and len(lstG)%3 == 0 and len(lstB)%3 == 0:\n        for k in range(3):\n            if len(lst[k]) == 0:\n                ans *= 1\n            elif len(lst[k]) == 3 and lst[k][2] - lst[k][0] == 2:\n                ans *= 1\n            elif len(lst[k]) == 6 and lst[k][2] - lst[k][0] == 2 and lst[k][5] - lst[k][3] == 2:\n                ans *= 1\n            elif len(lst[k]) == 9 and lst[k][2] - lst[k][0] == 2 and lst[k][5] - lst[k][3] == 2 and lst[k][8] - lst[k][6] == 2:\n                ans *= 1\n            elif len(lst[k])%3 == 0 and lst[k][-1] == lst[k][0]:\n                ans *= 1\n            else:\n                ans *= 0\n    else:\n        ans *= 0\n\n    print(ans)\n                "
  },
  {
    "language": "Python",
    "code": "import itertools as it\n\nT = input()\n\ndef goodset(a, b, c):\n    return (a == b and b == c) or (a + 1 == b and b + 1 == c)\n\ndef win(c):\n    return goodset(c[0], c[1], c[2]) and goodset(c[3], c[4], c[5]) and goodset(c[6], c[7], c[8])\n\nfor i in range(T):\n    cards = map(int, raw_input().split())\n    color = raw_input().split()\n    for j in range(9):\n        if color[j] == \"G\":\n            cards[j] += 100\n        elif color[j] == \"B\":\n            cards[j] += 200\n    w = 0\n    for c in it.permutations(cards):#range(9)):\n        #c = [cards[p[j]] for j in range(9)]\n        if win(c):\n            w = 1\n            break\n    print w"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    n = [int(i) for i in input().split()]\n    c = [i for i in input().split()]\n    value = [[],[],[]]\n    for j in range(9):\n        if c[j] == \"R\":\n            value[0].append(n[j])\n        elif c[j] == \"G\":\n            value[1].append(n[j])\n        else:\n            value[2].append(n[j])\n    print(value)\n    ans = 1\nfor i in range(3):\n    l = len(value[i])\n    if l%3 != 0:#RGBの長さが3の倍数でないと、正解になる可能性はない\n        ans = 0\n    else:\n        value[i].sort()\n        s = l//3\n        print(i,s,value[i])\n        j=0\n        while ans>0 and s>0 and j<len(value[i])-2:\n            if value[i][j] == value[i][j+1]:#隣り合う数字が一致している場合\n                print(\"二つ並んでる\")\n                if value[i][j+1] == value[i][j+2]:#3連続で同じ数字が並んでいる場合\n                    for k in range(3):\n                        value[i].pop(j)#値の削除\n                    s-=1\n                elif value[i][j+1]+1==value[i][j+2]:#2つめの数字と3つ目の数字が連番　ex)112,223,334,\n                    print(value[i][j+1]+1)\n                    k=j+3\n                    while k<len(value[i]) and value[i][k]==value[i][j+2]:#3つめと4つめの値が同じ\n                        k+=1\n                    if k>=len(value[i]) or value[i][k]!=value[i][j+2]+1:#4つ目と5つ目の数字が連番でない場合 ex)11225,22335　不正解\n                        ans=0\n                    else:\n                        #値削除\n                        value[i].pop(k)\n                        value[i].pop(j+2)\n                        value[i].pop(j)\n                    s-=1\n                else:#3つ目の数字が全然違うやつ\n                    ans=0\n\n            elif value[i][j]+1==value[i][j+1]:#隣り合う数字が連番の場合\n                k=j+2\n                while k<len(value[i]) and value[i][k]==value[i][j+1]:\n                    k+=1\n                if k>=len(value[i]) or value[i][k]!=value[i][j+1]+1:#3つめの数字が連番でない場合　不正解\n                    ans=0\n                else:\n                    #値削除\n                    value[i].pop(k)\n                    value[i].pop(j+1)\n                    value[i].pop(j)\n                    s-=1\n            else:#隣り合う数字が連番でもなく、同値でもない場合　不正解\n                ans=0\n    i+=1\nprint(ans)\n"
  },
  {
    "language": "Python",
    "code": "def judge(nums):\n  if nums == []:\n    return True\n  ret = False\n  m = nums[0]\n  if nums.count(m) == 3:\n    ret = ret or judge(nums[3:])\n  if m in nums and m + 1 in nums and m + 2 in nums:\n    new_nums = nums[:]\n    new_nums.remove(m)\n    new_nums.remove(m + 1)\n    new_nums.remove(m + 2)\n    ret = ret or judge(new_nums)\n  return ret\n\nn = int(input())\nfor _ in range(n):\n  nums = list(map(int, input().split()))\n  colors = input().split()\n  dic = {\"R\":[], \"G\":[], \"B\":[]}\n  for num, color in zip(nums, colors):\n    dic[color].append(num)\n  ans = judge(sorted(dic[\"R\"])) and judge(sorted(dic[\"G\"])) and judge(sorted(dic[\"B\"]))\n  print(int(ans))\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                if hand[0] and hand[1] and hand[2] in ''.join(nums):\n                    match_count += 1\n                    for digit in hand:\n                        nums.pop(nums.index(digit))\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    num = list(map(int, input().split()))\n    coler = input().split()\n    groups = [[], [], []]\n    for i, c in enumerate(coler):\n        if c == \"R\":\n            groups[0].append(num[i])\n        elif c == \"G\":\n            groups[1].append(num[i])\n        else:\n            groups[2].append(num[i])\n    for group in groups:\n        for _ in range(3):\n            group.sort()\n            for i in group:\n                if group.count(i) >= 3:\n                    for _ in range(3):\n                        group.remove(i)\n                if i + 1 in group and i + 2 in group:\n                    for j in range(3):\n                        group.remove(i + j)\n    if len(groups[0]) == len(groups[1]) == len(groups[2]) == 0:\n        print(1)\n    else:\n        print(0)\n"
  },
  {
    "language": "Python",
    "code": "5\n1 2 3 3 4 5 7 7 7\nR R R R R R G G G\n1 2 2 3 4 4 4 4 5\nR R R R R R R R R\n1 2 3 4 4 4 5 5 5\nR R B R R R R R R\n1 1 1 3 4 5 6 6 6\nR R B G G G R R R\n2 2 2 3 3 3 1 1 1\nR G B R G B R G B\n"
  },
  {
    "language": "Python",
    "code": "def sort(a):\n    temp = 0\n    for i in range(a-1):\n        if a[i] > a[i+1]:\n            temp = a[i]\n            a[i] = a[i+1]\n            a[i+1] = temp\n    return a\n\n\nT = int(input())\ncount = 0\na = []\nb = [[] for j in range(T)]\nanswer = [[False for i in range(3)] for j in range(T)]\nfor i in range(2*T):\n    a.append(list(input().split()))\nfor i in range(T):\n    for j in range(9):\n        a[i*2][j] = int(a[i*2][j])\nfor i in range(T):\n    for j in range(9):\n        if a[2*i+1][j] == \"R\":\n            a[2*i][j] = a[2*i][j] + 10\n        if a[2*i+1][j] == \"G\":\n            a[2*i][j] = a[2*i][j] + 20\n        if a[2*i+1][j] == \"B\":\n            a[2*i][j] = a[2*i][j] + 30\n        b[i].append(a[2*i][j])\nfor j in range(T):\n    for k in range(9):\n        for i in range(8):\n            temp = 0\n            if b[j][i] > b[j][i+1]:\n                temp = b[j][i]\n                b[j][i] = b[j][i+1]\n                b[j][i+1] = temp\nfor i in range(T):\n    for j in range(3):\n        if ((b[i][3*j] == b[i][3*j+1]) and (b[i][3*j] == b[i][3*j+2])) or ((b[i][3*j]+1 == b[i][3*j+1]) and (b[i][3*j]+2 == b[i][3*j+2])):\n                answer[i][j] = True\nfor i in range(T):\n    for j in range(2):\n        if ((b[i][j] == b[i][j+2]) and (b[i][j] == b[i][j+4])) or ((b[i][j]+1 == b[i][j+2]) and (b[i][j]+2 == b[i][j+4])):\n                answer[i][j] = True\nfor i in range(T):\n    if answer[i][0] and answer[i][1] and answer[i][2]:\n        print(1)\n    else:\n        print(0)\n\n            \n        \n        \n    \n\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                if int(hand[0]) and int(hand[1]) and int(hand[2]) in nums:\n                    match_count += 1\n                    nums.pop(nums.index(int(hand[0])))\n                    nums.pop(nums.index(int(hand[1])))\n                    nums.pop(nums.index(int(hand[2])))\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "T=int(input())\nfor i in range(T):\n    n=[int(i) for i in input().split()]\n    c=[i for i in input().split()]\n    R=[[],[],[]]\n    for i in range(9):\n        if c[i]==\"R\":\n            R[0].append(n[i])\n        elif c[i]==\"G\":        \n            R[1].append(n[i])\n        else:\n            R[2].append(n[i])\n    y=1\n    i=0\n #   print(R)\n    while y>0 and i<3:\n        l=len(R[i])\n        if l%3!=0:\n            y=0\n        else:\n            R[i].sort()\n            s=l//3\n            j=0\n            while y>0 and s>0 and j<len(R[i])-2:\n                if R[i][j]==R[i][j+1]:\n                    if R[i][j+1]==R[i][j+2]:\n                        for k in range(3):\n                            R[i].pop(j)\n                        s-=1\n                    elif R[i][j+1]+1==R[i][j+2]:\n                        k=j+3\n                        while k<len(R[i]) and R[i][k]==R[i][j+2]:\n                            k+=1\n                        if k>=len(R[i]) or R[i][k]!=R[i][j+2]+1:\n                            y=0\n                        else:\n                            R[i].pop(k)\n                            R[i].pop(j+2)\n                            R[i].pop(j)\n                        s-=1\n                    else:\n                        y=0\n                elif R[i][j]+1==R[i][j+1]:\n                    k=j+2\n                    while k<len(R[i]) and R[i][k]==R[i][j+1]:\n                        k+=1\n                    if k>=len(R[i]) or R[i][k]!=R[i][j+1]+1:\n                        y=0\n                    else:\n                        R[i].pop(k)\n                        R[i].pop(j+1)\n                        R[i].pop(j)\n                        s-=1\n                else:\n                    y=0\n        i+=1\n    print(y)\n"
  },
  {
    "language": "Python",
    "code": "T = int(input())\nfor i in range(T):\n    num = list(map(int, input().split()))\n    coler = input().split()\n    groups = [[], [], []]\n    for i, c in enumerate(coler):\n        if c == \"R\":\n            groups[0].append(num[i])\n        elif c == \"G\":\n            groups[1].append(num[i])\n        else:\n            groups[2].append(num[i])\n    for group in groups:\n        while len(group) != 0 and len(group) % 3 == 0:\n            tmp = group[:]\n            group.sort()\n            i = group[0]\n            if group.count(i) >= 3:\n                for _ in range(3):\n                    group.remove(i)\n            if i + 1 in group and i + 2 in group:\n                for j in range(3):\n                    group.remove(i + j)\n            if tmp == group:\n                break\n    if len(groups[0]) == len(groups[1]) == len(groups[2]) == 0:\n        print(1)\n    else:\n        print(0)\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            if len(datasets[dataset][rgb_key]) > 1:\n                nums = sorted(datasets[dataset][rgb_key])\n            else:\n                continue\n\n            for hand in WINNING_HANDS:\n                print(hand)\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        break\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "\na = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append(map(int, input().split()))\n    else:\n        a.append(map(str, input().split()))\n\nfor i in range(M):\n    #data = [[2,2,2,3,3,3,1,1,1],[\"R\",\"G\",\"B\",\"R\",\"G\",\"B\",\"R\",\"G\",\"B\"]]\n    data = a[i*2:(i+1)*2]\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values(1,axis=1)\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values(0,axis=1)\n        r = (data3.iloc[:,0][0]+data3.iloc[:,2][0])/data3.iloc[:,1][0]\n        if data3.iloc[:,0][1] == data3.iloc[:,1][1] == data3.iloc[:,2][1]:\n            rgb_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(r == 2 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][0] != 8 and data_df.iloc[:,1][0] != 9 and data_df.iloc[:,3][0] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [int(num) for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = ''.join(str(num) for num in sorted(datasets[dataset][rgb_key]))\n\n            for hand in WINNING_HANDS:\n                if hand in nums:\n                    match_count += 1\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "def sort(a):\n    temp = 0\n    for i in range(a-1):\n        if a[i] > a[i+1]:\n            temp = a[i]\n            a[i] = a[i+1]\n            a[i+1] = temp\n    return a\n\n\nT = int(input())\ncount = 0\na = []\nb = [[] for j in range(T)]\nanswer = [[False for i in range(3)] for j in range(T)]\nfor i in range(2*T):\n    a.append(list(input().split()))\nfor i in range(T):\n    for j in range(9):\n        a[i*2][j] = int(a[i*2][j])\nfor i in range(T):\n    for j in range(9):\n        if a[2*i+1][j] == \"R\":\n            a[2*i][j] = a[2*i][j] + 10\n        if a[2*i+1][j] == \"G\":\n            a[2*i][j] = a[2*i][j] + 20\n        if a[2*i+1][j] == \"B\":\n            a[2*i][j] = a[2*i][j] + 30\n        b[i].append(a[2*i][j])\nfor j in range(T):\n    for k in range(9):\n        for i in range(8):\n            temp = 0\n            if b[j][i] > b[j][i+1]:\n                temp = b[j][i]\n                b[j][i] = b[j][i+1]\n                b[j][i+1] = temp\nfor i in range(T):\n    for j in range(3):\n        if ((b[i][3*j] == b[i][3*j+1]) and (b[i][3*j] == b[i][3*j+2])) or ((b[i][3*j]+1 == b[i][3*j+1]) and (b[i][3*j]+2 == b[i][3*j+2])):\n                answer[i][j] = True\n    if answer[i][0] and answer[i][1] and answer[i][2]:\n        print(1)\n    else:\n        print(0)\n\n            \n        \n        \n    \n\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            if len(datasets[dataset][rgb_key]) > 1:\n                nums = sorted(datasets[dataset][rgb_key])\n            else:\n                continue\n\n            for hand in WINNING_HANDS:\n                print(hand)\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                if match_count == 3:\n                    results.append(1)\n                    break\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets-1 and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "R1 = [(\"R1\",\"R2\",\"R3\"),(\"R2\",\"R3\",\"R4\"),(\"R3\",\"R4\",\"R5\"),(\"R4\",\"R5\",\"R6\"),(\"R5\",\"R6\",\"R7\"),(\"R6\",\"R7\",\"R8\"),(\"R7\",\"R8\",\"R9\")]\nR2 = [\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R6\",\"R7\",\"R8\",\"R9\"]\n\nG1 = [(\"G1\",\"G2\",\"G3\"),(\"G2\",\"G3\",\"G4\"),(\"G3\",\"G4\",\"G5\"),(\"G4\",\"G5\",\"G6\"),(\"G5\",\"G6\",\"G7\"),(\"G6\",\"G7\",\"G8\"),(\"G7\",\"G8\",\"G9\")]\nG2 = [\"G1\",\"G2\",\"G3\",\"G4\",\"G5\",\"G6\",\"G7\",\"G8\",\"G9\"]\n\nB1 = [(\"B1\",\"B2\",\"B3\"),(\"B2\",\"B3\",\"B4\"),(\"B3\",\"B4\",\"B5\"),(\"B4\",\"B5\",\"B6\"),(\"B5\",\"B6\",\"B7\"),(\"B6\",\"B7\",\"B8\"),(\"B7\",\"B8\",\"B9\")]\nB2 = [\"B1\",\"B2\",\"B3\",\"B4\",\"B5\",\"B6\",\"B7\",\"B8\",\"B9\"]\n\ndef Rummy(C:list,N:list):\n\n\t#RGBの数が3の倍数で無い場合、負け\n\tif C.count(\"R\") % 3 != 0 or C.count(\"G\") % 3 != 0 or C.count(\"B\") % 3 != 0:\n\t\tprint(\"0\")\n\t\treturn\n\n\tans = []\n\tfor x,y in zip(C,N):\n\t\ttmp = x + str(y)\n\t\tans.append(tmp)\n\n\tREN = R1+G1+B1\n\tDOU = R2+G2+B2\n\n\t#同番検索\n\tfor z in DOU:\n\t\tif ans.count(z) >= 3:\n\t\t\tans.remove(z)\n\t\t\tans.remove(z)\n\t\t\tans.remove(z)\n\n\t#連番検索\n\tfor j in REN:\n\t\twhile True:\n\t\t\tif all(x in ans for x in j):\n\t\t\t\tfor k in j:\n\t\t\t\t\tans.remove(k)\n\t\t\telse:\n\t\t\t\tbreak\n\n\tif len(ans) == 0:\n\t\tprint(\"1\")\n\telse:\n\t\tprint(\"0\")\n\nif __name__ == '__main__':\n\n\tn = int(input())\n\n\tfor _ in range(n):\n\t\tN = list(map(int,input().split()))\n\t\tC = input().split()\n\n\t\tRummy(C,N)\n\n\n"
  },
  {
    "language": "Python",
    "code": "#!usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    WINNING_HANDS = [\n                '111', '222', '333', '444', '555', '666', '777', '888', '999',\n                '123', '234', '345', '456', '567', '678', '789'\n            ]\n\n    num_of_datasets = int(sys.stdin.readline().strip('\\n'))\n    datasets = [{'R': [], 'G': [], 'B': []} for _ in range(num_of_datasets)]\n    results = list()\n\n    for dataset in range(num_of_datasets):\n        n_set = [num for num in sys.stdin.readline().strip('\\n').split()]\n        c_set = [colour for colour in sys.stdin.readline().strip('\\n').split()]\n        for idx, colour in enumerate(c_set):\n            if colour == 'R':\n                datasets[dataset]['R'].append(n_set[idx])\n            elif colour == 'G':\n                datasets[dataset]['G'].append(n_set[idx])\n            elif colour == 'B':\n                datasets[dataset]['B'].append(n_set[idx])\n\n        match_count = int()\n\n        for rgb_key in datasets[dataset]:\n            nums = sorted(datasets[dataset][rgb_key])\n\n            for hand in WINNING_HANDS:\n                print(hand)\n                while hand[0] in nums and hand[1] in nums and hand[2] in nums:\n                    tmp = nums.copy()\n                    if hand[0] in tmp:\n                        tmp.pop(tmp.index(hand[0]))\n                        if hand[1] in tmp:\n                            tmp.pop(tmp.index(hand[1]))\n                            if hand[2] in tmp:\n                                tmp.pop(tmp.index(hand[2]))\n                                match_count += 1\n                                nums = tmp\n                            else:\n                                break\n                        else:\n                            break\n                    else:\n                        break\n\n                    if match_count == 3:\n                        results.append(1)\n                        continue\n\n        if dataset < num_of_datasets and match_count != 3:\n            results.append(0)\n\n    for result in results:\n        print(result)\n\n\nif __name__ == '__main__':\n    main()"
  },
  {
    "language": "Python",
    "code": "trial = int(input())\nnums,words = [],[]\nfor s in range(trial):\n    nums = [[int(n)] for n in input().split(\" \")]\n    words = [n for n in input().rstrip(\"\\n\").split(\" \")]\n    for t in range(9):\n        nums[t].append(words[t])\n    nums = sorted(nums,key=lambda x:(x[1],x[0]),reverse=False)\n    n,color,cnt,samecnt,ans = nums[0][0],nums[0][1],1,1,0\n    for t in range(1,9):\n        #print(cnt,samecnt,ans)\n        if samecnt == 3:\n            samecnt = 1\n            ans += 1\n        if cnt == 3:\n            samecnt,cnt,n,color = 1,1,nums[t][0],nums[t][1]\n            ans += 1\n        else:\n            if color != nums[t][1]:\n                n,color,cnt,samecnt = nums[t][0],nums[t][1],1,1\n            elif n == nums[t][0]:\n                samecnt += 1\n            elif n == nums[t][0] - 1:\n                n,samecnt = nums[t][0],1\n                cnt += 1\n            else:\n                print(0)\n                break\n    else:\n        #print(cnt,ans)\n        if ans == 2 and (samecnt == 3 or cnt == 3) or ans == 3:\n            print(1)\n        else:\n            print(0)"
  },
  {
    "language": "Python",
    "code": "a = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append([int(i) for i in  input().split()])\n    else:\n        a.append([i for i in  input().split()])\nfor i in range(M):\n    data = a[i*2:(i+1)*2]\n    print(data)\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values((i*2)+1,axis=1)#色ソート\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    value_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values((i*2),axis=1)\n        r = (int(data3.iloc[:,0][(i*2)])+int(data3.iloc[:,2][(i*2)]))/int(data3.iloc[:,1][(i*2)])\n        if data3.iloc[:,0][(i*2)+1] == data3.iloc[:,1][(i*2)+1] == data3.iloc[:,2][(i*2)+1]:\n            rgb_count+=1\n        if r == 2:\n            value_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(value_count == 3 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][(i*2)] != 8 and data_df.iloc[:,1][(i*2)] != 9 and data_df.iloc[:,3][(i*2)] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "a = []\nM = int(input())\nfor i in range(M*2):\n    if(i%2==0):\n        a.append([int(i) for i in  input().split()])\n    else:\n        a.append([i for i in  input().split()])\n\nfor i in range(M):\n    data = a[i*2:(i+1)*2]\n    data_df = pd.DataFrame(data)\n    data_df = data_df.sort_values(1,axis=1)#色ソート\n    #print(i)\n    #print(data_df,\"\\n\")\n    rgb_count = 0\n    value_count = 0\n    for j in range(3):\n        data3 = data_df.iloc[:,3*j:3*(j+1)].sort_values(0,axis=1)\n        r = (data3.iloc[:,0][0]+data3.iloc[:,2][0])/data3.iloc[:,1][0]\n        if data3.iloc[:,0][1] == data3.iloc[:,1][1] == data3.iloc[:,2][1]:\n            rgb_count+=1\n        if r == 2:\n            value_count+=1\n        #print(data3.iloc[:,0][1])\n        #print(\"1 = \",data3.iloc[:,1][1])\n        #print(\"2 = \",data3.iloc[:,2][1])\n        #print(data3)\n        #print(\"r = \",r)\n        \n    \n    if(value_count == 3 and rgb_count == 3):#連番または同じ値　かつ　同じ色\n        print(\"1\")\n    elif(data_df.iloc[:,0][0] != 8 and data_df.iloc[:,1][0] != 9 and data_df.iloc[:,3][0] != 1):\n        print(\"0\")\n    else:\n        print(\"0\")\n\n"
  },
  {
    "language": "Python",
    "code": "def check(card_set):\n    for i in card_set:\n        if len(i)%3!=0:\n            return 0\n        i.sort()\n        for j in range(int(len(i)/3)):\n            if i.count(i[0])>=3:\n                a=i[0]\n                i.remove(a)\n                i.remove(a)\n                i.remove(a)\n            else:\n                a=i[0]\n                try:\n                    i.remove(a)\n                    i.remove(a+1)\n                    i.remove(a+2)\n                except ValueError:\n                    return 0       \n    return 1\n\n\n\n\nn=int(input())\n\nfor count in range(n):\n    number=[int(i) for i in input().split(\" \")]\n    color=input().split(\" \")\n    R=[]\n    G=[]\n    B=[]\n    for i in range(9):\n        if color[i]==\"R\":\n            R.append(number[i])\n        elif color[i]==\"G\":\n            G.append(number[i])\n        else:\n            B.append(number[i])\n    print(check([R,G,B]))"
  },
  {
    "language": "Rust",
    "code": "fn read<T: std::str::FromStr>() -> T {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).ok();\n    s.trim().parse().ok().unwrap()\n}\n\nfn read_vec<T: std::str::FromStr>() -> Vec<T> {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).ok();\n    s.trim()\n        .split_whitespace()\n        .map(|e| e.parse().ok().unwrap())\n        .collect()\n}\n\nfn is_same_number(a: i32, b: i32, c: i32) -> bool {\n    a == b && a == c\n}\n\nfn is_sequense_number(a: i32, b: i32, c: i32) -> bool {\n    a + 1 == b && b + 1 == c\n}\n\nfn is_good_set(a: i32, b: i32, c: i32) -> bool {\n    is_same_number(a, b, c) || is_sequense_number(a, b, c)\n}\n\nfn remove_good_set(vec: &mut Vec<i32>) {\n    let vecsize: usize = vec.len();\n    let mut flag: bool = false;\n    //println!(\"{}\", vecsize);\n    for i in 0..vecsize {\n        for j in i + 1..vecsize {\n            for k in j + 1..vecsize {\n                //println!(\"{}, {}, {}\", i, j, k);\n                if is_good_set(vec[i], vec[j], vec[k]) {\n                    vec.remove(k);\n                    vec.remove(j);\n                    vec.remove(i);\n                    flag = true;\n                }\n                if flag {\n                    break;\n                }\n            }\n            if flag {\n                break;\n            }\n        }\n        if flag {\n            break;\n        }\n    }\n}\n\nfn main() {\n    let n: i32 = read();\n    for i in 0..n {\n        let mut vec_num: Vec<i32> = read_vec();\n        let vec_mark: Vec<String> = read_vec();\n\n        // modify the vector for simplification\n        for i in 0..9 as usize {\n            if vec_mark[i] == \"G\" {\n                vec_num[i] = vec_num[i] + 10;\n            } else if vec_mark[i] == \"B\" {\n                vec_num[i] = vec_num[i] + 20;\n            }\n        }\n\n        vec_num.sort();\n        let mut ans: i32 = 0;\n        for i in 0..3 {\n            remove_good_set(&mut vec_num);\n        }\n        if vec_num.len() == 0 {\n            ans = 1;\n        }\n\n        println!(\"{}\", ans);\n        //println!(\"----\");\n    }\n}\n\n"
  }
]