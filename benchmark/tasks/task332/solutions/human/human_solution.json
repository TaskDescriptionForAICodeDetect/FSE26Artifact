[
  {
    "language": "Scala",
    "code": "object Main extends App {\n  import scala.io.StdIn._\n  val n = readInt\n  for (_ ← 0 until n){\n    val Array(a, b) = readLine.trim.split(' ')\n    println(\n      solve(a, b, readLine.trim.split(' ').toList)\n    )\n  }\n\n  def solve(a: String, b: String, deck: List[String]): String = {\n    def take(deck: List[String], score: Int, hasAce: Int = 0): Int = {\n      if (score <= 16) take(deck.tail, score + deck.head.asCard, hasAce + (if (deck.head == \"A\") 1 else 0))\n      else if (score == 17 && hasAce > 0) take(deck.tail, score + deck.head.asCard, hasAce + (if (deck.head == \"A\") 1 else 0))\n      else if (score > 21 && hasAce > 0) take(deck, score - 10, hasAce - 1)\n      else score\n    }\n    if (a.asCard + b.asCard == 21) \"blackjack\"\n    else take(deck, a.asCard + b.asCard, List(a, b).count(_ == \"A\")) match {\n      case s if s <= 21 ⇒ s.toString\n      case _ ⇒ \"bust\"\n    }\n  }\n\n  implicit class WrappedChar(val value: String) extends AnyVal {\n    def asCard: Int = if (value.head.isDigit) value.head.asDigit else if (value.head == 'A') 11 else 10\n  }\n  implicit class Scope[T](val value: T) extends AnyVal {\n    @inline\n    def let[A](func: T ⇒ A): A = func(value)\n    @inline\n    def also(func: T ⇒ Unit): T = {\n      func(value)\n      value\n    }\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,8){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum==7&&hand[0]==1)continue;\n\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\tif(sum>16)break;\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nstring temp = \"*A23456789TJQK\";\nbool addsum ;\n\nvoid add( int& ret, char c){\n  if(c == 'A'){\n    if(ret >= 11) ret++;\n    else ret += 11, addsum = true;\n  }else if(c == 'T'|| c == 'J' || c == 'Q' || c == 'K'){\n    ret += 10;\n  }else{\n    ret += c - '0';\n  }\n  if(ret >= 22 && addsum){\n    addsum = false; ret -= 10;\n  }\n}\n\n\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    addsum = false;\n    int ret = 0;\n    char buff;\n\n    queue< char > que;\n    for(int i = 0 ; i < 10 ; i++ ){\n      cin >> buff;\n      que.push( buff );\n    }\n\n    for(int i = 0 ; i < 2 ; i++ ){\n      add( ret, que.front()); que.pop();\n    }\n    if(ret == 21){\n      cout << \"blackjack\\n\";\n      continue;\n    }\n    for(int i = 0; ; i++){\n      char c = que.front(); que.pop(); //ふえぇぇ\n      add( ret, c);\n      if((ret >= 18 || (ret == 17 && !addsum)) && ret <= 21){\n        cout << ret << endl;\n        break;\n      }else if(ret > 21){\n        cout << \"bust\" << endl;\n        break;\n      }else if(i == 7){\n        cout << ret << endl;\n        break;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\n\nint sum=0;\n\nvector<int> solve(bitset<13>&used, vector<int>&nums) {\n\tif (used.count() == 13) {\n\t\treturn vector<int>{-1};\n\t}\n\telse {\n\t\tfor (int i = 0; i < 13; ++i) {\n\t\t\tif (!used[i]) {\n\t\t\t\tif (sum % (i + 1)==0) {\n\t\t\t\t\tsum+=(i+1)*nums[i];\n\t\t\t\t\tused[i] = true;\n\t\t\t\t\tauto v(solve(used, nums));\n\t\t\t\t\tif (!v.empty()) {\n\t\t\t\t\t\tif (v == vector<int>{-1}) {\n\t\t\t\t\t\t\tv.clear();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (int j = 0; j < nums[i];++j) {\n\n\t\t\t\t\t\t\tv.push_back(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tused[i]=false;\n\t\t\t\t\tsum-=(i+1)*nums[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn vector<int>();\n\t}\n\n}\n\nmap<char, int>mp;\n\nint gt() {\n\tchar ch;cin>>ch;\n\treturn mp[ch];\n}\n\n\nint main() {\n\tint N;cin>>N;\n\tfor (int i = 2; i <= 9; ++i) {\n\t\tmp[(i+'0')]=i;\n\t}\n\tmp['A']=1;\n\tmp['T']=10;\n\tmp['J']=10;\n\tmp['Q']=10;\n\tmp['K']=10;\n\twhile (N--) {\n\t\tint a(gt());\n\t\tint b(gt());\n\t\tvector<int>nums(8);\n\t\tfor (int i = 0; i < 8; ++i) {\n\t\t\tnums[i]=gt();\n\t\t}\n\t\tbool ace=false;\n\t\tint sum=0;\n\t\tsum+=a;\n\t\tif(a==1)ace=true;\n\t\tsum+=b;\n\t\tif(b==1)ace=true;\n\n\t\tif (sum == 11&&ace) {\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t}\n\t\telse {\n\t\t\tint k=0;\n\t\t\twhile (true) {\n\t\t\t\tif(sum>=17)break;\n\t\t\t\tif (ace) {\n\t\t\t\t\tif(sum>=8)break;\n\t\t\t\t}\n\t\t\t\tsum+=nums[k];\n\t\t\t\tif(nums[k]==1)ace=true;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tif (sum >= 22) {\n\t\t\t\tcout<<\"bust\"<<endl;\n\t\t\t}\n\t\t\telse if (ace&&sum <= 11) {\n\t\t\t\tcout<<sum+10<<endl;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcout<<sum<<endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i = 0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\n\t\tint sum = 0;\n\t\tbool herashita = false;\n\t\tbool one = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tint a = ans(cards[i], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum +=a;\n\t\t}\n\t\tif (sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if (sum >= 17&&one){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tREP(i, 8){\n\t\t\tint a = ans(cards[i+2], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum += a;\n\t\t\tif (sum >= 22){\n\t\t\t\tif (!one){\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsum -= 10;\n\t\t\t\tone = false;\n\t\t\t}\n\t\t\tif (17 <= sum){\n\t\t\t\tif (sum == 17 && !one)\n\t\t\t\t\tcontinue;\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint n; cin >> n;\n\twhile(n--){\n\t\tint num[10];\n\t\tchar c;\n\t\tint flg = 0;\n\t\tfor(int i=0;i<10;i++) {\n\t\t\tcin >> c;\n\t\t\tif(c=='K' || c=='Q' || c=='J' || c=='T') num[i] = 10;\n\t\t\telse if(c=='A') {\n\t\t\t\tnum[i] = 11;\n\t\t\t\tif(i==0 || i==1) flg++;\n\t\t\t}\n\t\t\telse num[i] = c - '0';\n\t\t}\n\t\tint sum = num[0] + num[1];\n\t\tint now = 2;\n\t\tif(sum == 21) cout << \"blackjack\" << endl;\n\t\telse{\n\t\t\twhile(now<=9){\n\t\t\t\tif(sum <= 16) {\n\t\t\t\t\tsum += num[now];\n\t\t\t\t\tif(num[now] == 11) flg++;\n\t\t\t\t\tnow++;\n\t\t\t\t}\n\t\t\t\telse if(sum == 17 && flg!=0){\n\t\t\t\t\tsum += num[now];\n\t\t\t\t\tif(num[now] == 11) flg++;\n\t\t\t\t\tnow++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(sum >= 22 && flg!=0){\n\t\t\t\t\t\tflg--;\n\t\t\t\t\t\tsum -= 10;\n\t\t\t\t\t}\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum >= 22) cout << \"bust\" << endl;\n\t\t\telse cout << sum << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint ctoi(char);\nint main(){\n  int n;\n  cin >> n;\n  for(int I=0;I<n;I++){\n    vector<char> ha(2);\n    int c=0;\n    int ac=0;\n    vector<char> ya(8);\n    for(int i=0;i<2;i++){\n      cin >> ha[i];\n      if(ha[i]=='A'){\n\tac++;\n\tc+=10;\n      }\n      c+=ctoi(ha[i]);\n    }\n    for(int i=0;i<8;i++){\n      cin >> ya[i];\n    }\n    int i=0;\n    while(1){\n      if(i==0&&c==21){\n\tcout << \"blackjack\" << endl;\n\tbreak;\n      }\n      if(c<=16){\n\tc+=ctoi(ya[i]);\n\tif(ya[i]=='A'){\n\t  ac++;\n\t  if(ac==1){\n\t    if(c<12){\n\t      c+=10;\n\t    }\n\t  }\n\t}\n\ti++;\n      }\n      else{\n\tif(c>21){\n\t  cout << \"bust\" << endl;\n\t  break;\n\t}\n\telse {\n\t  cout << c << endl;\n\t  break;\n\t}\n      }\n    }\n  }\n  return 0;\n}\n\nint ctoi(char x){\n  if(x>='0'&&x<='9'){\n    return x-'0';\n  }\n  if(x=='A')return 1;\n  return 10;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(aNum==1&&cs>=7)\n            cout<<cs+11<<endl;\n        else if(aNum==0&&cs>=17)\n            cout<<cs<<endl;\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1&&ccs==17)\n                        continue;\n                    else if(j==0&&ccs==17){\n                        fs=cs;ok=true;break;\n                    }\n                    if(ccs>21){\n                        if(j==0){\n                            b=true;break;\n                        }\n                        // ññÚÅ¾ßÉÈÁ½ê\n                        else{\n                            // êñÚÌlÉ¶ÄðÏX\n                            //int prvccs=(cs+(aNum));\n                            //if(prvccs\n                        }\n                    }\n                    else if(ccs>17){\n                        fs=cs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s); sin>>v; return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nint main() {\n\tint n; cin >> n;\n\tREP(t, n) {\n\t\tint score = 0;\n\t\tint ace = 0;\n\t\tchar c[2]; cin >> c[0] >> c[1];\n\t\tREP(i, 2) {\n\t\t\tif ('2' <= c[i] && c[i] <= '9') {\n\t\t\t\tscore += c[i] - '0';\n\t\t\t} else if (c[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t}\n\t\tchar stack[8]; REP(_i, 8) { cin >> stack[_i]; }\n\t\tif (score == 21) { printf(\"blackjack\\n\"); continue; }\n\t\tif (score > 21) {\n\t\t\tif (ace) {\n\t\t\t\tace--;\n\t\t\t\tscore -= 10;\n\t\t\t}\n\t\t}\n\t\tint i = -1;\n\t\twhile (true) {\n\t\t\tif (score == 17) {\n\t\t\t\tif (ace) {\n\t\t\t\t\tace--;\n\t\t\t\t\tscore -= 10;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (score > 21) {\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (score > 16) {\n\t\t\t\tprintf(\"%d\\n\", score);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t++i; // Stack position\n\t\t\tif ('2' <= stack[i] && stack[i] <= '9') {\n\t\t\t\tscore += stack[i] - '0';\n\t\t\t} else if (stack[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t\tif (score > 21) {\n\t\t\t\t\tace--;\n\t\t\t\t\tscore -= 10;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i=0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\t\tint sum = 0;\n\t\tbool one = false;\n\t\tbool bust = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tsum += ans(cards[i],one);\n\t\t}\n\t\tif (sum ==21 ){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if(sum>=17){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tREP(i, 8){\n\t\t\tif (bust)break;\n\t\t\tsum += ans(cards[i + 2],one);\n\t\t\tif (sum >= 22){\n\t\t\t\tfor (int j = 0; j < i + 3; j++){\n\t\t\t\t\tif (cards[j] == 'A'){\n\t\t\t\t\t\tone = true;\n\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t\tfor (int k = 0; k < i + 3; k++)\n\t\t\t\t\t\t\tsum += ans(cards[k], one);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (j == i + 2){\n\t\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\t\tbust = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t\tif(sum>=17){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint main(){\n  int total_testcases;\n  for(int i = 1; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 11;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      cin >> lhs >> rhs;\n      int numA = cards[lhs[0]];\n      int numB = cards[rhs[0]];\n      \n      int sum = numA + numB;\n      bool has_ace;\n      bool is_blackjack = false;\n      bool is_ace1 = false;\n      if(numA + numB == 21){\n        is_blackjack = true;\n      }\n      if(numA == 11 || numB == 11){\n        has_ace = true;\n        is_ace1 = false;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n        if(is_blackjack) continue;\n\n        int num = cards[pile[0]];\n        if(sum <= 16){\n           // || (sum > 16 && has_ace && !is_ace1 && sum - 10 <= 16)){\n          if(num == 11){\n            has_ace = true;\n\n            if(sum + num > 21){\n              is_ace1 = true;\n              sum += 1;\n            }\n            else{\n              sum += num;\n            }\n          }\n          else{\n            sum += num;\n          }\n        }\n        else if(sum == 17 && is_ace1){\n          sum += num;\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint p;\nbool aceFlg; //ツエツーツスツつェ11ツづつオツづカツウツδ督トツつウツづェツづづゥツフツδ可グ\nbool printFlg;\nchar card[128];\n\nvoid add(char ch){\n\tif(ch == 'A'){\n\t\tif(p+11 <= 21){\n\t\t\tp += 11;\n\t\t\taceFlg = true;\n\t\t}else{\n\t\t\tp++;\n\t\t}\n\t} else{\n\t\tp += card[ch];\n\t}\n}\n\nint main(void){\n\tfor(int i=2;i<10;i++) card['0'+i] = i;\n\tcard['T'] = card['J'] = card['Q'] = card['K'] = 10;\n\n\tint n;\n\tcin>>n;\n\n\twhile(n--){\n\t\tp = aceFlg = 0;\n\t\tprintFlg = true;\n\t\tchar a,b;\n\t\tcin>>a>>b;\n\n\t\tadd(a);\n\t\tadd(b);\n\t\tif(p == 21){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tprintFlg = false;\n\t\t}\n\n\t\tfor(int i=0;i<8;i++){\n\t\t\tchar ch;\n\t\t\tcin>>ch;\n\t\t\tif(!printFlg) continue;\n\n\t\t\tif(p <= 16 || p == 17 && aceFlg){\n\t\t\t\tadd(ch);\n\t\t\t\tif(p > 21 && aceFlg){\n\t\t\t\t\tp -= 10;\n\t\t\t\t\taceFlg = false;\n\t\t\t\t}\n\t\t\t\tif(p > 21){\n\t\t\t\t\tcout<<\"bust\\n\";\n\t\t\t\t\tprintFlg = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(printFlg){\n\t\t\tcout<<p<<endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nbool test_ace17(int value, int ace11) {\n  while(ace11) {\n    if(value <= 17) { return true; }\n    ace11 --;\n    value -= 10;\n  }\n  return false;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { in[0] -= 10; }\n\n    REP(k, 1, 10) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n      }\n      while(value > 21 && ace11) {\n        ace11 --;\n        value -= 10;\n      }\n      if(value > 21) {\n        cout << \"bust\" << endl;\n        break;\n      }\n\n      if(test_ace17(value, ace11)) { continue; }\n      if(value <= 16) { continue; }\n      cout << value << endl;\n      break;\n    }\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tv.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(v1&&sum==21)cout<<\"blackjack\"<<endl;\n\t\t\t\telse if(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t\tsum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum>21&&v1){\n\t\t\t\tr(j,v.size())\n\t\t\t\t  if(v[j]==11){\n\t\t\t\t  \tv[j]=1;\n\t\t\t\t  \tbreak;\n\t\t\t\t  }\n\t\t\t}\n\t\t}K:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint main(){\n\tint pt[256],n;char dk[10];\n\trep(i,8)pt['2'+i]=2+i;\n\tpt['A']=11,pt['T']=pt['J']=pt['Q']=pt['K']=10;\n\tcin>>n;while(n--){\n\t\trep(i,10)cin>>dk[i];\n\t\tint sc=pt[dk[0]]+pt[dk[1]],bigA=dk[0]=='A'||dk[1]=='A';\n\t\tif(sc==21){\n\t\t\tcout<<\"blackjack\"<<endl;continue;\n\t\t}\n\t\tif(sc>21)sc-=10;\n\t\tfor(int cur=2;sc<17||sc==17&&bigA;cur++){\n\t\t\tsc+=pt[dk[cur]];bigA+=dk[cur]=='A';\n\t\t\tif(sc>21&&bigA)sc-=10,bigA--;\n\t\t}\n\t\tif(sc>21)cout<<\"bust\"<<endl;\n\t\telse cout<<sc<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\nusing namespace std;\n\nint cards[8];\nint getnum(char c){\n\tif(isdigit(c)){\n\t\treturn (int)c - '0';\n\t}else if(c == 'A'){\n\t\treturn 1;\n\t}else{\n\t\treturn 10;\n\t}\n}\n\nint main(){\n\tint N;\n\tcin >> N;\n\tfor(int i = 0; i < N; i++){\n\t\tchar c;\n\t\tint aces = 0;\n\t\tbool eleven_used = false;\n\t\tint sum = 0;\n\t\tfor(int j = 0; j < 2; j++){\n\t\t\tcin >> c;\n\t\t\tif(getnum(c) == 1){\n\t\t\t\tif(sum <= 10){\n\t\t\t\t\tsum += 11;\n\t\t\t\t\televen_used = true;\n\t\t\t\t}else{\n\t\t\t\t\tsum += 1;\n\t\t\t\t}\n\t\t\t\taces++;\n\t\t\t}else{\n\t\t\t\tsum += getnum(c);\n\t\t\t}\n\t\t}\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> c;\n\t\t\tcards[j] = getnum(c);\n\t\t}\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else{\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tif(sum <= 16){\n\t\t\t\t\tif(sum <= 10){\n\t\t\t\t\t\tif(cards[j] == 1){\n\t\t\t\t\t\t\tsum += 11;\n\t\t\t\t\t\t\televen_used = true;\n\t\t\t\t\t\t\taces++;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(cards[j] == 1) aces++;\n\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t}\n\t\t\t\t}else if(sum == 17 && eleven_used && aces > 1){\n\t\t\t\t\tsum += cards[j];\n\t\t\t\t}else{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t}else{\n\t\t\t\tcout << sum << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double EPS=1e-10;\nconst int inf=1e9;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\nint main(){\n\tint z;\n\tcin>>z;\n\twhile(z--){\n\t\tvi in(10);\n\t\trep(i,10){\n\t\t\tchar c;\n\t\t\tcin>>c;\n\t\t\tif(isdigit(c))c-='0';\n\t\t\telse if(c=='A')c=11;\n\t\t\telse c=10;\n\t\t\tin[i]=c;\n\t\t}\n\t\tint sum=in[0]+in[1];\n\t\tint co=0;\n\t\tif(in[0]==11)co++;\n\t\tif(in[1]==11)co++;\n\t\tif(co&&sum==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(co==2){\n\t\t\tco--;\n\t\t\tsum-=10;\n\t\t}\n\t\tloop(i,2,10){\n\t\t\tif(sum<17){\n\t\t\t\tsum+=in[i];\n\t\t\t\tif(in[i]==11){\n\t\t\t\t\tco++;\n\t\t\t\t}\n\t\t\t\tif(co&&sum>21){\n\t\t\t\t\tco--;\n\t\t\t\t\tsum-=10;\n\t\t\t\t}\n\t\t\t}else if(sum==17){\n\t\t\t\tif(co){\n\t\t\t\t\tco--;\n\t\t\t\t\tsum-=10;\n\t\t\t\t\ti--;\n\t\t\t\t}else break;\n\t\t\t}else break;\t\t\n\t\t}\n\t\tif(sum<22)cout<<sum<<endl;\n\t\telse cout<<\"bust\"<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cctype>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29)\n\nusing namespace std;\nbool counted;\n\nvoid add(int &sum,char c)\n{\n  if(isdigit(c))sum += c-'0';\n  else \n    {\n      if(c == 'A')\n\t{\n\t  if(sum+11 > 21)sum += 1;\n\t  else           sum += 11,counted = true;\n\t}\n      else \n\t{\n\t  sum += 10;\n\t}\n    }\n}\n\nint main()\n{\n  int T;\n  while(cin >> T)\n    {\n      while(T--)\n\t{\n\t  counted = false;\n\t  int sum = 0;\n\t  rep(i,2)\n\t    {\n\t      char c;\n\t      cin >> c;\n\t      add(sum,c);\n\t    }\n\n\t  bool blackjack = (sum==21);\n\n\t  vector<char> vec(8);\n\t  rep(i,8)cin >> vec[i];\n\n\t  rep(i,8)\n\t    {\n\t      if(sum <= 16)add(sum,vec[i]);\n\t      else if(sum == 17 && counted)add(sum,vec[i]);\n\t      else continue;\n\t    }\n\t  if(blackjack)cout << \"blackjack\" << endl;\n\t  else if(sum > 21)cout << \"bust\" << endl;\n\t  else cout << sum << endl;\n\t}\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s); sin>>v; return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nint main() {\n\tint n; cin >> n;\n\tREP(t, n) {\n\t\tint score = 0;\n\t\tint ace = 0;\n\t\tchar c[2]; cin >> c[0] >> c[1];\n\t\tREP(i, 2) {\n\t\t\tif ('2' <= c[i] && c[i] <= '9') {\n\t\t\t\tscore += c[i] - '0';\n\t\t\t} else if (c[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t}\n\t\tchar stack[8]; REP(_i, 8) { cin >> stack[_i]; }\n\t\tif (score == 21) { printf(\"blackjack\\n\"); continue; }\n\t\tint i = -1;\n\t\twhile (true) {\n\t\t\tif (score > 17) {\n\t\t\t\tif (ace) {\n\t\t\t\t\tace--;\n\t\t\t\t\tscore -= 10;\n\t\t\t\t} else if (score <= 21) {\n\t\t\t\t\tprintf(\"%d\\n\", score);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (score > 21) {\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t++i; // Stack position\n\t\t\tif ('2' <= stack[i] && stack[i] <= '9') {\n\t\t\t\tscore += stack[i] - '0';\n\t\t\t} else if (stack[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstdlib>\n#define INF 10e7\nusing namespace std;\n\nint cost[100][100];\n\nint main(void){\n\tint n;\n\tcin >> n;\n\tfor(int i=0;i<n;i++){\n\t\tint cards=0,ace=0;\n\t\tchar list[2];\n\t\tchar table[8];\n\t\tfor(int j=0;j<2;j++)\n\t\t\tcin >> list[j];\n\n\t\tfor(int j=0;j<8;j++)\n\t\t\tcin >> table[j];\n\n\t\tfor(int j=0;j<2;j++){\n\t\t\tif(list[j]=='A')\n\t\t\t\tcards+=11,ace++;\n\t\t\telse if(isdigit(list[j]))\n\t\t\t\tcards+=(list[j]-'0');\n\t\t\telse\n\t\t\t\tcards+=10;\n\t\t}\n\t\tif(cards==21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}else if(cards >17){\n\t\t\tcout << cards << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<8;j++){\n\t\t\tif(table[j]=='A')\n\t\t\t\tcards+=11,ace++;\n\t\t\telse if(isdigit(table[j]))\n\t\t\t\tcards+=(table[j]-'0');\n\t\t\telse\n\t\t\t\tcards+=10;\n\t\t\tif(cards >21&&ace)\n\t\t\t\tcards-=10,ace--;\n\t\t\t\n\t\t\tif(cards > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\tbreak;\n\t\t\t}else if(cards>17){\n\t\t\t\tcout << cards << endl;\n\t\t\t\tbreak;\n\t\t\t}else if(cards==17&&!ace){\n\t\t\t\tcout << cards << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint compute_score(bool& has_ace11,const vector<string>& hands){\n  int sum = 0;\n\n  bool has_ace = false;\n  for(int i = 0; i < hands.size();i++){\n    int num = cards[hands[i][0]];\n    if(num == 1) has_ace = true;\n    sum += num;\n  }\n  if(has_ace){\n    if(sum + 10 <= 21){\n      has_ace11 = true;\n      sum += 10;\n    }\n  }\n  return sum;\n}\n\nint main(){\n  int total_testcases;\n  for(int i = 2; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 1;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      vector<string> hands;\n      cin >> lhs >> rhs;\n\n      bool is_blackjack = false;\n      bool is_ace11 = false;\n      hands.push_back(lhs);\n      hands.push_back(rhs);\n\n      int sum = 0;\n      sum = compute_score(is_ace11,hands);\n      if(sum == 21){\n        is_blackjack = true;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n\n        if(sum <= 16){\n          hands.push_back(pile);\n          sum = compute_score(is_ace11,hands);\n        }\n        else if(sum == 17 && is_ace11){\n          hands.push_back(pile);\n          sum = compute_score(is_ace11,hands);\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint conv(char c){\n  if(c == 'A') return 11;\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c);\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || sum > 21 && ace){\n        if(conv(str[j])) sum += conv(str[j]);\n        if(str[j] == 'A'){\n          if(sum > 21) sum -= 10;\n          else ace = true;\n        }\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nint ret_int( char c ) {\n  if( c == 'T' || c == 'K' || c == 'Q' || c == 'J' ) return 10;\n  else if( c == 'A' ) return 11;\n  else return (c - '0');\n}\n\nsigned main(){\n  int N;\n  cin >> N;\n  while( N-- ) {\n    int sum = 0;\n    bool flag = false;\n    char a, b;\n    cin >> a >> b;\n    if( a == 'A' || b == 'A' ) flag = true;\n    sum = ret_int( a ) + ret_int( b );\n\n    char card[8];\n    for(int i=0; i<8; i++) cin >> card[i];\n    if( sum == 21 ) cout << \"blackjack\" << endl;\n    else {\n      for(int i=0; i<8; i++) {\n\tif( sum > 17 ) break;\n\telse if( sum == 17 ) {\n\t  if( flag ) sum += ret_int( card[i] );\n\t  else break;\n\t}\n\telse {\n\t  if( card[i] == 'A' ) {\n\t    if( sum + 11 > 21 ) sum++;\n\t    else sum += 11, flag = true;\n\t  } else {\n\t    sum += ret_int( card[i] );\n\t  }\n\t}\n      }\n\n      if( sum > 21 ) cout << \"bust\" << endl;\n      else cout << sum << endl;\n    }\n  }\n}\n "
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i = 0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\t\tint sum = 0;\n\t\tbool b=false;\n\t\tbool one = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tint a = ans(cards[i], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum +=a;\n\t\t}\n\t\tif (sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if (sum >= 17){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tREP(i, 8){\n\t\t\tint a = ans(cards[i+2], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum += a;\n\t\t\tif (sum >= 22){\n\t\t\t\tif (!one||b){\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsum -= 10;\n\t\t\t\tb = true;\n\t\t\t}\n\t\t\tif (17 <= sum&&sum <= 21){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int h,i;\n  int n;\n  cin>>n;\n  for(h=0;h<4;h++){\n    int p=0,a=0,f=0;\n    char s;\n    for(i=0;i<2;i++){\n      cin>>s;\n      if(0){\n      }else if(s=='A'){\n\tp++;\n\ta=1;\n      }else if(s=='T'||s=='J'||s=='Q'||s=='K'){\n\tp+=10;\n      }else{\n\tp+=s-'0';\n      }\n    }\n    if(p==11&&a)\n      f=1;\n    for(i=0;i<8;i++){\n      cin>>s;\n      if(a){\n\tif(p<17&&(p+10<18||p+10>21)){\n\t  if(0){\n\t  }else if(s=='A'){\n\t    p++;\n\t    a=1;\n\t  }else if(s=='T'||s=='J'||s=='Q'||s=='K'){\n\t    p+=10;\n\t  }else{\n\t    p+=s-'0';\n\t  }\n\t}\n      }else{\n\tif(p<17){\n\t  if(0){\n\t  }else if(s=='A'){\n\t    p++;\n\t    a=1;\n\t  }else if(s=='T'||s=='J'||s=='Q'||s=='K'){\n\t    p+=10;\n\t  }else{\n\t    p+=s-'0';\n\t  }\n\t}\n      }\n    }\n    if(0){\n    }else if(p>21){\n      cout<<\"bust\"<<endl;\n    }else if(p==21||(a&&p+10==21)){\n      cout<<(f?\"blackjack\":\"21\")<<endl;\n    }else{\n      if(a){\n\tif(p>16)\n\t  cout<<p<<endl;\n\telse\n\t  cout<<p+10<<endl;\n      }else{\n\tcout<<p<<endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,9){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum!=7||hand[0]!=1){\n\t\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\t\tif(sum>17)break;\n\t\t\t\tif(i==8)break;\n\t\t\t}\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <map>\nusing namespace std;\n\nint getCard() {\n  char c;\n  cin >> c;\n  if(c == 'A') {\n    return 0;\n  } else if(isdigit(c)) {\n    return c - '0';\n  } else {\n    return 10;\n  }\n}\n\npair<int,int> getScore(const vector<int> &d) {\n  int score = 0;\n  int numAce = 0;\n  int use1, use11;\n  for(int i = 0; i < d.size(); ++i) {\n    if(d[i] == 0) {\n      ++numAce;\n    } else {\n      score += d[i];\n    }\n  }\n  use1 = score + numAce;\n  use11 = score + numAce*11;\n  if(use11 <= 21) {\n    return make_pair(use11, 1);\n  } else {\n    return make_pair(use1, 0);\n  }\n}\n\nint main() {\n  int Tc;\n  cin >> Tc;\n  for(int tc = 0; tc < Tc; ++tc) {\n    vector<int> d;\n    vector<int> p;\n    for(int i = 0; i < 2; ++i) {\n      d.push_back(getCard());\n    }\n    for(int i = 0; i < 8; ++i) {\n      p.push_back(getCard());\n    }\n\n    if(getScore(d).first == 21) {\n      cout << \"blackjack\" << endl;\n    } else {\n      pair<int,int> s;\n      for(int i = 0; i < 8; ++i) {\n        s = getScore(d);\n        if(s.first <= 16 || s.first == 17 && s.second) {\n          d.push_back(p[i]);\n        }\n      }\n      if(s.first <= 21) {\n        cout << s.first << endl;\n      } else {\n        cout << \"bust\" << endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint Tc;\n\nint change(char ch){\n  if(ch=='A')return 11;\n  if('2'<=ch&&ch<='9')return ch-'0';\n  else return 10;\n}\n\nint main(){\n  cin>>Tc;\n  while(Tc--){\n    char a,b;\n    cin>>a>>b;\n    vector<int> v,t;\n    v.push_back(change(a));\n    v.push_back(change(b));\n    for(int i=0;i<8;i++){\n      cin>>a;\n      t.push_back(change(a));\n    }\n    int ans=v[0]+v[1];\n    if(ans==22)v[0]=1,ans=12;\n\n    for(int i=0;i<8;i++){\n      bool flg=false;\n      for(int j=0;j<(int)v.size();j++)if(v[j]==11)flg=true;\n      if(ans<=16 || (ans==17&&flg) ){\n\tif(ans+t[i]>21&&t[i]==11)t[i]=1;\n\tv.push_back(t[i]);\n\tans+=t[i];\n      }else break;\n    }\n    if(ans==21&&v.size()==2){\n      cout<<\"blackjack\"<<endl;\n    }else if(ans>21){\n      cout<<\"bust\"<<endl;\n    }else{\n      cout<<ans<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint compute_score(bool& has_ace11,const vector<string>& hands){\n  int sum = 0;\n\n  bool has_ace = false;\n  for(int i = 0; i < hands.size();i++){\n    int num = cards[hands[i][0]];\n    if(num == 1) has_ace = true;\n    sum += num;\n  }\n  if(has_ace){\n    if(sum + 10 <= 21){\n      has_ace11 = true;\n      sum += 10;\n    }\n  }\n  return sum;\n}\n\nint main(){\n  int total_testcases;\n  for(int i = 2; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 1;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      vector<string> hands;\n      cin >> lhs >> rhs;\n\n      bool is_ace11 = false;\n      hands.push_back(lhs);\n      hands.push_back(rhs);\n\n      int sum = 0;\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n\n        string pile;\n        cin >> pile;\n        bool is_ace11 = false;\n        sum = compute_score(is_ace11,hands);\n\n        if(sum <= 16){\n          hands.push_back(pile);\n        }\n        else if(sum == 17 && is_ace11){\n          hands.push_back(pile);\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(sum == 21 && hands.size() == 2){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nint score(const vector<int>& v, bool& ace){\n\tint s=0;\n\tbool flag = false;\n\tfor(int i=0 ; i < v.size() ; i++ ){\n\t\tif( v[i] == 1 ) flag = true;\n\t\ts += v[i];\n\t}\n\tif( flag && s+10 <= 21 && s < s+10 ){\n\t\ts += 10;\n\t\tace = true;\n\t}\n\treturn s;\n}\n\nint main(){\n\tint h[256] = {0};\n\th['A'] = 1; h['T'] = h['J'] = h['Q'] = h['K'] = 10;\n\tfor(char c = '2' ; c <= '9' ; c++ ) h[c] = c - '0';\n\t\n\tint N;\n\tcin >> N;\n\tfor(int t=0 ; t < N ; t++ ){\n\t\tvector<int> v;\n\t\t{\n\t\t\tchar a, b;\n\t\t\tcin >> a >> b;\n\t\t\tv.push_back( h[a] );\n\t\t\tv.push_back( h[b] );\n\t\t}\n\t\tvector<int> a;\n\t\tfor(int i=0 ; i < 8 ; i++ ){\n\t\t\tchar e;\n\t\t\tcin >> e;\n\t\t\ta.push_back( h[e] );\n\t\t}\n\t\tint k=0, ans;\n\t\twhile( true ){\n\t\t\tbool ace = false;\n\t\t\tint s = score(v,ace);\n\t\t\tif( s <= 16 ){\n\t\t\t\tv.push_back( a[k++] );\n\t\t\t}else if( s == 17 && ace ){\n\t\t\t\tans = s;\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tans = s;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif( 21 < ans ){\n\t\t\tcout << \"bust\" << endl;\n\t\t}else if( ans == 21 && v.size() == 2 ){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else{\n\t\t\tcout << ans << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i = 0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\n\t\tint sum = 0;\n\t\tbool herashita = false;\n\t\tbool one = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tint a = ans(cards[i], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum +=a;\n\t\t}\n\t\tif (sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if (sum >= 17&&one){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tREP(i, 8){\n\t\t\tint a = ans(cards[i+2], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum += a;\n\t\t\tif (sum >= 22){\n\t\t\t\tif (!one){\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsum -= 10;\n\t\t\t\tone = false;\n\t\t\t}\n\t\t\tif (17 <= sum){\n\t\t\t\tif (sum >= 17 && !one)\n\t\t\t\t\tcontinue;\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint ctoi(char);\nint main(){\n  int n;\n  cin >> n;\n  for(int I=0;I<n;I++){\n    vector<char> ha(2);\n    int c=0;\n    int ac=0;\n    vector<char> ya(8);\n    for(int i=0;i<2;i++){\n      cin >> ha[i];\n      if(ha[i]=='A'){\n\tac++;\n      }\n      c+=ctoi(ha[i]);\n    }\n    for(int i=0;i<8;i++){\n      cin >> ya[i];\n    }\n    int i=0;\n    while(1){\n      if(i==0&&c==11&&ac){\n\tcout << \"blackjack\" << endl;\n\tbreak;\n      }\n      int c2=-1;\n      if(ac&&c+10<=21)c2=c+10;\n      if((c<=16&&c2<=16)||(c==7&&ac)){\n\tc+=ctoi(ya[i]);\n\tif(ya[i]=='A'){\n\t  ac++;\n\t}\n\ti++;\n      }\n      else{\n\tif(c>21){\n\t  cout << \"bust\" << endl;\n\t  break;\n\t}\n\telse {\n\t  cout << max(c,c2) << endl;\n\t  break;\n\t}\n      }\n    }\n  }\n  return 0;\n}\n\nint ctoi(char x){\n  if(x>='0'&&x<='9'){\n    return x-'0';\n  }\n  if(x=='A')return 1;\n  return 10;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint n; cin >> n;\n\twhile(n--){\n\t\tint num[10];\n\t\tchar c;\n\t\tint flg = 0;\n\t\tfor(int i=0;i<10;i++) {\n\t\t\tcin >> c;\n\t\t\tif(c=='K' || c=='Q' || c=='J' || c=='T') num[i] = 10;\n\t\t\telse if(c=='A') {\n\t\t\t\tnum[i] = 11;\n\t\t\t\tif(i==0 || i==1) flg = 1;\n\t\t\t}\n\t\t\telse num[i] = c - '0';\n\t\t}\n\t\tint sum = num[0] + num[1];\n\t\tint now = 2;\n\t\tif(sum == 21) cout << \"blackjack\" << endl;\n\t\telse{\n\t\t\twhile(1){\n\t\t\t\tif(sum <= 16) {\n\t\t\t\t\tsum += num[now];\n\t\t\t\t\tnow++;\n\t\t\t\t}\n\t\t\t\telse if(sum == 17 && flg==1){\n\t\t\t\t\tsum += num[now];\n\t\t\t\t\tnow++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(sum >= 22 && flg==1){\n\t\t\t\t\t\tflg = 0;\n\t\t\t\t\t\tsum -= 10;\n\t\t\t\t\t}\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum >= 22) cout << \"bust\" << endl;\n\t\t\telse cout << sum << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint main(){\n  int total_testcases;\n  for(int i = 1; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 11;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      cin >> lhs >> rhs;\n      int numA = cards[lhs[0]];\n      int numB = cards[rhs[0]];\n      \n      int sum = numA + numB;\n      bool has_ace;\n      bool is_blackjack = false;\n      bool is_ace1 = false;\n      if(numA + numB == 21){\n        is_blackjack = true;\n      }\n      if(numA == 11 || numB == 11){\n        has_ace = true;\n        is_ace1 = false;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n        if(is_blackjack) continue;\n\n        int num = cards[pile[0]];\n        if(sum <= 16){\n          if(num == 11){\n            has_ace = true;\n\n            if(sum + num > 21){\n              is_ace1 = true;\n              sum += 1;\n            }\n            else{\n              sum += num;\n            }\n          }\n          else{\n            sum += num;\n          }\n        }\n        else if(sum == 17 && !is_ace1){\n          sum += num;\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint aces;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 > 21) return 1;\n    aces++;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    aces = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n\n    string str = \"\";\n    for(int i=0;i<8;i++){\n      char c;\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || sum > 21 && aces){\n        if(conv(str[j], sum)) sum += conv(str[j], sum);\n        if(sum > 21 && aces){\n          aces--;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nbool ace;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    //if(sum + 11 > 21) return 1;\n    ace = true;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n      if(c == 'A') ace = true;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || (sum == 17 && ace)){\n        if(conv(str[j], sum)) sum += conv(str[j], sum);\n        if(str[j] == 'A'){\n          if(sum > 21) sum -=10;\n          else ace = true;\n        }\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint q, t[12]; char c[11];\nint score() {\n\tint ret = t[1] * 11;\n\tfor (int i = 2; i < 11; i++) ret += t[i] * i;\n\tint z = t[1];\n\twhile (z && ret >= 22) z--, ret -= 10;\n\treturn ret;\n}\nint main() {\n\tcin >> q;\n\twhile (q--) {\n\t\tfor (int i = 0; i < 10; i++) cin >> c[i];\n\t\tfill(t, t + 11, 0);\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\telse t[10]++;\n\t\t\tint z = score();\n\t\t\tif (z > 21) {\n\t\t\t\tputs(i == 1 ? \"blackjack\" : \"bust\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (z > 17 || (z == 17 && !t[1])) {\n\t\t\t\tprintf(\"%d\\n\", z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { in[1] -= 10; }\n\n    REP(k, 2, 10) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n        while(value > 21 && ace11) {\n          ace11 --;\n          value -= 10;\n        }\n        if(value > 21) {\n          cout << \"bust\" << endl;\n          goto next;\n        }\n      }\n      if(value > 16 && (!ace11 || value > 17)) {\n        cout << value << endl;\n        goto next;\n      }\n    }\n    next:;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <cfloat>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <map>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nint calc(char ch){\n\n\tif(ch >= '1' && ch <= '9'){\n\t\treturn ch-'0';\n\t}else{\n\t\treturn 10;\n\t}\n}\n\n\nvoid func(){\n\n\tchar first[2],second[2];\n\tscanf(\"%s %s\",first,second);\n\n\tchar pile[8][2];\n\tfor(int i = 0; i < 8; i++){\n\t\tscanf(\"%s\",pile[i]);\n\t}\n\n\tint num;\n\tbool is_ace = false;\n\n\tif(first[0] != 'A' && second[0] != 'A'){\n\n\t\tnum = calc(first[0]) + calc(second[0]);\n\n\t}else if(first[0] == 'A' && second[0] != 'A'){\n\n\t\tnum = 11 + calc(second[0]);\n\t\tis_ace = true;\n\n\t}else if(first[0] != 'A' && second[0] == 'A'){\n\n\t\tnum = calc(first[0]) + 11;\n\t\tis_ace = true;\n\n\t}else if(second[0] == 'A' && second[0] == 'A'){\n\n\t\tnum = 12;\n\t\tis_ace = true;\n\t}\n\n\tif(num == 21){\n\t\tprintf(\"blackjack\\n\");\n\t\treturn;\n\t}else if((num >= 18) || (num == 17 && is_ace == false)){\n\t\tprintf(\"%d\\n\",num);\n\t\treturn;\n\t}\n\n\tfor(int i = 0; i < 8; i++){\n\t\tif(pile[i][0] != 'A'){\n\t\t\tnum += calc(pile[i][0]);\n\n\t\t\tif(num > 21){\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\treturn;\n\t\t\t}else if((num >= 18) || (num == 17 && is_ace == false)){\n\t\t\t\tprintf(\"%d\\n\",num);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t}else{\n\n\t\t\tif(num <= 10){\n\t\t\t\tnum += 11;\n\t\t\t\tis_ace = true;\n\t\t\t}else{\n\t\t\t\tnum += 1;\n\t\t\t}\n\n\t\t\tif(num > 21){\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\treturn;\n\t\t\t}else if((num >= 18) || (num == 17 && is_ace == false)){\n\t\t\t\tprintf(\"%d\\n\",num);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(){\n\n\tint N;\n\tscanf(\"%d\",&N);\n\n\tfor(int i = 0; i < N; i++)func();\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//30\n#include<iostream>\n#include<cctype>\n\nusing namespace std;\n\nvoid in(char c,int &a,int &b){\n  if(c=='A'){\n    a++;\n  }else if(isalpha(c)){\n    b+=10;\n  }else{\n    b+=c-'0';\n  }\n}\n\nint pn(int a,int b){\n  b+=a;\n  if(b<=11&&a){\n    b+=10;\n  }\n  return b;\n}\n\nint main(){\n  int n;\n  cin>>n;\n  while(n--){\n    char c[2];\n    cin>>c[0]>>c[1];\n    char d[8];\n    for(int i=0;i<8;i++){\n      cin>>d[i];\n    }\n    int a=0,b=0;\n    in(c[0],a,b);\n    in(c[1],a,b);\n    if(pn(a,b)==21&&isalpha(c[0])&&isalpha(c[1])){\n      cout<<\"blackjack\"<<endl;\n    }else{\n      for(int i=0;pn(a,b)<=16||pn(a,b)==17&&pn(0,b)<=6;i++){\n\tin(d[i],a,b);\n      }\n      if(pn(a,b)<=21){\n\tcout<<pn(a,b)<<endl;\n      }else{\n\tcout<<\"bust\"<<endl;\n      }\n    }\n  }\n  return 0;\n}\n    \n    "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\nusing namespace std;\n\nint cards[8];\nint getnum(char c){\n\tif(isdigit(c)){\n\t\treturn (int)c - '0';\n\t}else if(c == 'A'){\n\t\treturn 1;\n\t}else{\n\t\treturn 10;\n\t}\n}\n\nint main(){\n\tint N;\n\tcin >> N;\n\tfor(int i = 0; i < N; i++){\n\t\tchar c;\n\t\tbool eleven_used = false;\n\t\tint sum = 0;\n\t\tfor(int j = 0; j < 2; j++){\n\t\t\tcin >> c;\n\t\t\tif(getnum(c) == 1){\n\t\t\t\tif(sum <= 10){\n\t\t\t\t\tsum += 11;\n\t\t\t\t\televen_used = true;\n\t\t\t\t}else{\n\t\t\t\t\tsum += 1;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tsum += getnum(c);\n\t\t\t}\n\t\t}\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> c;\n\t\t\tcards[j] = getnum(c);\n\t\t}\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else{\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tif(sum <= 16){\n\t\t\t\t\tif(sum <= 10){\n\t\t\t\t\t\tif(cards[j] == 1){\n\t\t\t\t\t\t\tsum += 11;\n\t\t\t\t\t\t\televen_used = true;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t}\n\t\t\t\t}else if(sum == 17 && eleven_used){\n\t\t\t\t\tsum += cards[j];\n\t\t\t\t}else{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t}else{\n\t\t\t\tcout << sum << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <memory>\n#include <memory.h>\n#include <cmath>\n#include <fstream>\n#include <cmath>\n#include <numeric>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <sstream>\n#include <cstdlib>\n#include <cstdio>\n#include <map>\n#include <iomanip>\n#include <list>\n#include <cctype>\n#include <algorithm>\n#define USE_MATH_DEFINES\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\ntypedef pair<int, PP> PPP;\nconst int INF = 1 << 30;\nconst double EPS = 1E-9;\n\nint to_num(char c){\n\tif(isdigit(c)){\n\t\treturn c - '0';\n\t}else if(c == 'T'){\n\t\treturn 10;\n\t}else if(c == 'J'){\n\t\treturn 10;\n\t}else if(c == 'Q'){\n\t\treturn 10;\n\t}else if(c == 'K'){\n\t\treturn 10;\n\t}else{\n\t\treturn 1;\n\t}\n}\n\n\nint card[8];\n\nint main(){\n\tint n;\n\tchar ch;\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tint a, b;\n\t\tbool ele_used = false;\n\n\t\tcin >> ch;\n\t\ta = to_num(ch);\n\t\tcin >> ch;\n\t\tb = to_num(ch);\n\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> ch;\n\t\t\tcard[j] = to_num(ch);\n\t\t}\n\n\t\tint sum = 0;\n\n\t\tif(a != 1){\n\t\t\tsum += a;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t\tele_used = true;\n\t\t}\n\n\t\tif(b != 1 || ele_used){\n\t\t\tsum += b;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t}\n\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}else if(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(int j = 0; j < 8; j++){\n\n\t\t\tif(card[j] != 1){\n\t\t\t\tsum += card[j];\n\t\t\t}else if(sum + 11 > 21){\n\t\t\t\tsum += 1;\n\t\t\t}else{\n\t\t\t\tsum += 11;\n\t\t\t\tele_used = true;\n\t\t\t}\n\n\t\t\tif(sum > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\tbreak;\n\t\t\t}else if(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cctype>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29)\n\nusing namespace std;\nbool counted;\n\nvoid add(int &sum,char c)\n{\n  if(isdigit(c))sum += c-'0';\n  else \n    {\n      if(c == 'A')\n\t{\n\t  if(sum+11 > 21)sum += 1;\n\t  else           sum += 11,counted = true;\n\t}\n      else \n\t{\n\t  sum += 10;\n\t}\n    }\n}\n\nint main()\n{\n  int T;\n  while(cin >> T)\n    {\n      while(T--)\n\t{\n\t  counted = false;\n\t  int sum = 0;\n\t  rep(i,2)\n\t    {\n\t      char c;\n\t      cin >> c;\n\t      add(sum,c);\n\t    }\n\n\t  bool blackjack = (sum==21);\n\t  bool bust = false;\n\t  vector<char> vec(8);\n\t  rep(i,8)cin >> vec[i];\n\n\t  rep(i,8)\n\t    {\n\t      int value = 0;\n\t      if(sum <= 16 || (sum == 17 && counted))\n\t\t{\n\t\t  add(value,vec[i]);\n\t\t  sum += value;\n\t\t}\n\t      if(sum > 21)bust = true;\n\t    }\n\t  if(blackjack)cout << \"blackjack\" << endl;\n\t  else if(bust)cout << \"bust\" << endl;\n\t  else cout << sum << endl;\n\t}\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i = 0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\n\t\tint sum = 0;\n\t\tbool herashita = false;\n\t\tbool one = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tint a = ans(cards[i], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum +=a;\n\t\t}\n\t\tif (sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if (sum >= 17&&one){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tREP(i, 8){\n\t\t\tint a = ans(cards[i+2], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum += a;\n\t\t\tif (sum >= 22){\n\t\t\t\tif (!one || herashita){\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsum -= 10;\n\t\t\t\therashita = true;\n\t\t\t}\n\t\t\tif (17 <= sum&&sum <= 21){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nbool is_blackjack(vector<int> &cards)\n{\n    return (cards[0] == 1 && cards[1] >= 10);\n}\n\nint to_num(char ch)\n{\n    if (ch == 'A') {\n        return 1;\n    } else if (ch == 'T') {\n        return 10;\n    } else if (ch == 'J') {\n        return 11;\n    } else if (ch == 'Q') {\n        return 12;\n    } else if (ch == 'K') {\n        return 13;\n    }\n    return (ch - '0');\n}\n\nint get_point(int c)\n{\n    return (c >= 10 ? 10 : c);\n}\n\npair<int, int> get_point(vector<int> &cards)\n{\n    int point = 0, ace_cnt = 0;\n    vector<int> ace;\n    for (int i = 0; i < (int)cards.size(); i++) {\n        if (cards[i] == 1) {\n            ace_cnt++;\n            point += 11;\n        } else {\n            point += get_point(cards[i]);\n        }\n    }\n    int jk = 0;\n    for (int i = 0; i < ace_cnt; i++) {\n        if (point > 21) {\n            point -= 10;\n            jk++;\n        }\n    }\n    return make_pair(point, ace_cnt - jk);\n}\n\nint main()\n{\n    int N;\n    cin >> N;\n    while (N--) {\n        char ch;\n        vector<int> cards;\n        int pile[8];\n        for (int i = 0; i < 2; i++) {\n            cin >> ch;\n            cards.push_back(to_num(ch));\n        }\n        sort(cards.begin(), cards.end());\n        for (int i = 0; i < 8; i++) {\n            cin >> ch;\n            pile[i] = to_num(ch);\n        }\n        if (is_blackjack(cards)) {\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        pair<int, int> p;\n        int point = 0;\n        for (int i = 0; i < 8; i++) {\n            p = get_point(cards);\n            point = p.first;\n            if (point <= 16) {\n                cards.push_back(pile[i]);\n            } else if (point == 17 && p.second > 0) {\n                cards.push_back(pile[i]);\n            } else {\n                break;\n            }\n        }\n        point = get_point(cards).first;        \n        if (point > 21) {\n            cout << \"bust\" << endl;\n        } else {\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint point(string s) {\n    if(s == \"T\" || s == \"J\" || s == \"Q\" || s == \"K\") return 10;\n    if(s == \"A\") return 1;\n    return s[0]-'0';\n}\n\nint cal(vector<string> cards) {\n    if(cards[1] == \"A\" && point(cards[0]) == 10) return -1;\n    if(cards[0] == \"A\" && point(cards[1]) == 10) return -1;\n    int p = 0;\n    bool aces = false;\n    for(int i=0; i<cards.size(); ++i) {\n        if(p <= 16) {\n            int t = point(cards[i]);\n            if(t == 1 && p+11 <= 21) {\n                aces = true;\n                p += 11;\n            }else if(aces && p+t > 21) {\n                aces = false;\n                p -= 10;\n                p += t;\n            }else{\n                p += t;\n            }\n        }else if(p == 17 && aces) {\n            int t = point(cards[i]);\n            p += t;\n            if(p > 21) {\n                aces = false;\n                p -= 10;\n            }\n        }\n    }\n    return p;\n}\n\nint main() {\n    int tc;\n    string card;\n    cin>>tc;\n    while(tc--) {\n        vector<string> hand(10);\n        cin>>hand[0]>>hand[1];\n        for(int i=0; i<8; ++i) {\n            cin>>hand[i+2];\n        }\n        int p = cal(hand);\n        if(p > 21) cout<<\"bust\"<<endl;\n        else if(p == -1) cout<<\"blackjack\"<<endl;\n        else cout<<p<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint main(){\n  int total_testcases;\n  for(int i = 1; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 11;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      cin >> lhs >> rhs;\n      int numA = cards[lhs[0]];\n      int numB = cards[rhs[0]];\n      \n      int sum = numA + numB;\n      bool is_blackjack = false;\n      bool has_ace = false;\n      bool is_ace1 = false;\n      if(numA + numB == 21){\n        is_blackjack = true;\n      }\n      if(numA == 11 || numB == 11){\n        has_ace = true;\n        is_ace1 = false;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n        if(is_blackjack) continue;\n\n        int num = cards[pile[0]];\n        if(sum <= 16){\n          if(num == 11){\n            has_ace = true;\n            if(sum + num > 21){\n              sum += 1;\n            }\n            else{\n              sum += num;\n            }\n          }\n          else{\n            sum += num;\n          }\n\n        }\n        else if(sum == 17 && has_ace && !is_ace1){\n          sum += num;\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(aNum==1&&cs>=7)\n            cout<<cs+11<<endl;\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1&&ccs==6)\n                        continue;\n                    if(ccs>21){\n                        b=true;break;\n                    }\n                    else if(ccs>17){\n                        fs=cs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\nusing namespace std;\n\nint main(){\n    map<char, int> card;\n    for(int i=2; i<=9; i++){\n        card['0'+i] = i;\n    }\n    card['A'] = 1;\n    card['T'] = card['J'] = card['Q'] = card['K'] = 10;\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char pile[8];\n        int point = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        for(int j=1; j<=2; j++){\n            char tmp;\n            cin >> tmp;\n            if(tmp == 'A' && !isace){\n                isace = true;\n                point += 11;\n            }else{\n                point += card[tmp];\n            }\n        }\n        if(point == 21) isblackjack = true;\n        for(int j=0; j<8; j++){\n            cin >> pile[j];\n        }\n        for(int j=0; j<8; j++){\n            if(point <= 16 || (isace && point == 17)){\n                if(pile[j] == 'A'){\n                    if(point <= 10){\n                        point += 11;\n                        isace = true;\n                    }else{\n                        if(isace){\n                            point -= 10;\n                            isace = false;\n                        }\n                        point +=card[pile[j]];\n                    }\n                }else{\n                    point += card[pile[j]];\n                }\n            }else{\n                break;\n            }\n        }\n        if(isblackjack && point == 21){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<algorithm>\n#include<numeric>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(c) (c).begin(),(c).end()\n#define mp make_pair\n#define pb push_back\n#define rp(i,c) rep(i,(c).size())\n#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf=1<<28;\nconst double INF=1e12,EPS=1e-9;\n\nint v[256];\n\nint main()\n{\n\tfor(int i=2;i<=9;i++)v['0'+i]=i;\n\tv['A']=11; v['T']=v['J']=v['Q']=v['K']=10;\n\t\n\tint CS; cin>>CS;\n\trep(cs,CS)\n\t{\n\t\tint ace=0,score=0,cur=2;\n\t\tchar cd[10]; rep(i,10)cin>>cd[i];\n\t\trep(i,2)if(cd[i]=='A')ace++;\n\t\t\n\t\tscore=v[cd[0]]+v[cd[1]];\n\t\tif(score==21)\n\t\t{\n\t\t\tcout<<\"blackjack\"<<endl; continue;\n\t\t}\n\t\t\n\t\twhile(score>21&&ace)ace--,score-=10;\n\t\t\n\t\twhile(score<=16||score==17&&ace)\n\t\t{\n\t\t\tscore+=v[cd[cur]];\n\t\t\tif(cd[cur]=='A')ace++; cur++;\n\t\t\t\n\t\t\twhile(score>21&&ace)ace--,score-=10;\n\t\t}\n\t\tif(score>21)cout<<\"bust\"<<endl;\n\t\telse cout<<score<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n\n#define\tpb\t\t\tpush_back\n#define\trep(i,n)\tfor(int i=0;i<(n);i++)\n\nusing namespace std;\n\nint f[128];\n\nbool isAce11(const vector<char> &hand){\n\tint sc=0,acecnt=0;\n\trep(i,hand.size()){\n\t\tsc+=f[hand[i]];\n\t\tif(hand[i]=='A')\tacecnt++;\n\t}\n\treturn (acecnt>0 && sc<=11);\n}\n\nint score(const vector<char> &hand){\n\tint sc=0,acecnt=0;\n\trep(i,hand.size()){\n\t\tsc+=f[hand[i]];\n\t\tif(hand[i]=='A')\tacecnt++;\n\t}\n\tif(acecnt>0 && sc<=11)\tsc+=10;\n\treturn sc;\n}\n\nint main(){\n\tf['A']=1;\tf['2']=2;\tf['3']=3;\tf['4']=4;\tf['5']=5;\tf['6']=6;\n\tf['7']=7;\tf['8']=8;\tf['9']=9;\tf['T']=10;\tf['J']=10;\tf['Q']=10;\n\tf['K']=10;\n\n\tint T;\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tvector<char> hand(2);\tscanf(\" %c %c\",&hand[0],&hand[1]);\n\t\tchar card[8];\n\t\trep(i,8)\tscanf(\" %c\",card+i);\n\t\tint sc=score(hand);\n\t\tif(sc==21){ puts(\"blackjack\"); continue; }\n\t\tfor(int i=0;;i++){\n\t\t\tsc=score(hand);\n\t\t\tif(sc>21){ puts(\"bust\"); break; }\n\t\t\tif(sc>17 || (!isAce11(hand) && sc==17)){ printf(\"%d\\n\",sc); break; }\n\t\t\thand.pb(card[i]);\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\nusing namespace std;\n\nint n,s;\nchar c[10];\nint a;\nbool black;\n\nint score(char x){\n  if('2'<= x && x <= '9')return x-'0';\n  if(x == 'A')return 11;\n  return 10;\n}\n\nvoid cal(int x){\n  s += score(c[x]);\n  if(c[x] == 'A')a++;\n  while(s>21 && a){\n    s -= 10;\n    a--;\n  }\n}\n\nint main(){\n  scanf(\"%d\",&n);\n\n  while(n--){\n    black = false;\n    for(int i=0;i<10;i++)scanf(\" %c \",&c[i]);\n    if( (c[0] == 'A' || c[1] == 'A') && score(c[0])+score(c[1])==21)black = true;\n    if(!black){\n      s = a = 0;\n      for(int i=0;i<10;i++){\n\tcal(i);\n\tif(s<=16 || a)continue;\n\tbreak;\n      }\n    }\n    if(black)printf(\"blackjack\\n\");\n    else if(s>21)printf(\"bust\\n\");\n    else printf(\"%d\\n\",s);\n  }\n}\n    \n  "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <set>\n#include <map>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<29;\n\nint num(char c) {\n  if (isdigit(c)) {\n    return c - '0';\n  } else {\n    return 10;\n  }\n}\nbool comp(int a, int b) {\n  if(b>21) return 0;\n  else return a<b;\n}\n\nint res;\nbool ff;\nvoid dfs(const vector<char> &v, int sum, int now, bool f) {\n  if (now == v.size()) {\n    if (comp(res, sum)) {\n      ff = f;\n      res = sum;\n    }\n    return;\n  }\n  if (v[now] == 'A') {\n    dfs(v,sum+1,now+1, f);\n    dfs(v,sum+11,now+1, 1);\n  } else {\n    dfs(v,sum+num(v[now]),now+1, f);\n  }\n}\n\nint hoge(const vector<char> &v) {\n  res = 0;\n  ff = 0;\n  dfs(v,0,0,0);\n  return res;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  while(n--) {\n    vector<char> v(2);\n    cin >> v[0] >> v[1];\n    char cc[8];\n    REP(i, 8) {\n      cin >> cc[i];\n    }\n    REP(i,8) {\n      if (hoge(v) == 21 || hoge(v) == 0) break;\n      \n      if (hoge(v)<=16) {\n        v.push_back(cc[i]);\n      } else if (hoge(v)==17 && ff) {\n        v.push_back(cc[i]);\n      }\n      // FOR(it, v) \n      //   cout << *it << \" \";\n      // cout << endl;\n    }\n    if (hoge(v)==0)\n      cout << \"bust\" << endl;\n    else if (v.size() == 2 && hoge(v)==21)\n      cout << \"blackjack\" << endl;\n    else cout << hoge(v) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint a[10],n,e,s;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nvoid calc(int x){\n\tif(a[x]==1)e++;\n\ts+=a[x];\n\tif(s>21&&e)e--,s-=10;\n}\nmain(){\n\tcin>>n;\n\twhile(n--){\n\t\ts=e=0;\n\t\tr(i,10)a[i]=get();\n\t\tr(i,2)calc(i);\n\t\tif(s==21)cout<<\"blackjack\"<<endl;\n\t\telse r(i,8){\n\t\t\tint j=i+2;\n\t\t\tif(s<17||s==17&&e)calc(j);\n\t\t\telse{\n\t\t\t\tif(s<=21)cout<<s<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define N 8\n\nbool isTen(char c){\n  return (c == 'T' || c == 'J' || c== 'Q' || c == 'K');\n}\nbool isBlackjack(char c1, char c2){\n  if ( c1 == 'A' ) swap(c1, c2);\n  if ( c2 == 'A' && isTen(c1) ) return true;\n  return false;\n}\n\nint getValue(char ch){\n  return isTen(ch) ? 10 : (ch - '0');\n}\n\nvoid getScore(vector<char> H, int &score, bool &check11){\n  int A = 0;\n  score = 0;\n  check11 = false;\n  for ( int i = 0; i < H.size(); i++ ){\n    if ( H[i] == 'A' ) { score++; A++; }\n    else { score += getValue(H[i]);}\n  }\n  if ( A && score <= 11 ){\n    check11 = true;\n    score += 10;\n  }\n}\n\nvoid simulate(char D[N+1], char c1, char c2){\n  if ( isBlackjack(c1, c2) ) { cout << \"blackjack\" << endl; return; }\n  vector<char> H;\n  H.push_back(c1);\n  H.push_back(c2);\n  int score = 0;\n  bool check11;\n  for ( int i = 0; i < N+1; i++ ){\n    char c = D[i];\n    getScore(H, score, check11);\n    if ( score > 21 ){\n      cout << \"bust\" << endl; return;\n    }\n    if ( score <= 16 || (score == 17 && check11 )){\n      H.push_back(c);\n    } else {\n      cout << score << endl; return;\n    }\n  }\n}\n\nmain(){\n  char D[N+1], c1, c2;\n  int tcase; cin >> tcase;\n  for ( int i = 0; i < tcase; i++ ) {\n    cin >> c1 >> c2;\n    for ( int j = 0; j < N; j++ ) cin >> D[j];\n    D[N] = 0;\n    simulate(D, c1, c2);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces = 0;\nint tens = 0;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <map>\nusing namespace std;\n\nint getCard() {\n  char c;\n  cin >> c;\n  if(c == 'A') {\n    return 0;\n  } else if(isdigit(c)) {\n    return c - '0';\n  } else {\n    return 10;\n  }\n}\n\npair<int,int> getScore(const vector<int> &d) {\n  int score = 0;\n  int numAce = 0;\n  int use11 = 0;\n  for(int i = 0; i < d.size(); ++i) {\n    if(d[i] == 0) {\n      ++numAce;\n      score += 1;\n    } else {\n          score += d[i];\n    }\n  }\n  while(numAce && score+10 <= 21) {\n    score += 10;\n    ++use11;\n    --numAce;\n  }\n  return make_pair(score,use11);\n}\n\nint main() {\n  int Tc;\n  vector<int> d;\n  vector<int> p;\n  cin >> Tc;\n  for(int tc = 0; tc < Tc; ++tc) {\n    d.clear();\n    p.clear();\n    for(int i = 0; i < 2; ++i) {\n      d.push_back(getCard());\n    }\n    for(int i = 0; i < 8; ++i) {\n      p.push_back(getCard());\n    }\n\n    if(d[0] == 0 && d[1] == 10) {\n      cout << \"blackjack\" << endl;\n    } else {\n      pair<int,int> s;\n      for(int i = 0; i < 8; ++i) {\n        s = getScore(d);\n        if(s.first <= 16 || s.first == 17 && s.second == 1) {\n          d.push_back(p[i]);\n        }\n      }\n      if(s.first <= 21) {\n        cout << s.first << endl;\n      } else {\n        cout << \"bust\" << endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint a[10],n,e,s;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nvoid calc(int x){\n\tif(a[x]==11)e++;\n\ts+=a[x];\n\tif(s>21&&e)e--,s-=10;\n}\nmain(){\n\tcin>>n;\n\twhile(n--){\n\t\ts=e=0;\n\t\tr(i,10)a[i]=get();\n\t\tif(a[0]+a[1]==21)cout<<\"blackjack\"<<endl;\n\t\telse r(i,10){\n\t\t\tcalc(i);\n\t\t\tif(s>=17||s>=18&&e){\n\t\t\t\tif(s<=21)cout<<s<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <string>\nusing namespace std;\n\nint getp(int& acnt, char c)\n{\n\tif(isdigit(c)) return c-'0';\n\n\tif(c=='A')\n\t{\n\t\tacnt++;\n\t\treturn 1;\n\t}\n\n\treturn 10;\n\t\n}\n\nint main()\n{\n\tint N;\n\tcin >> N;\n\twhile(N--)\n\t{\n\t\tint acnt=0, tot=0;\n\t\tchar in;\n\t\tfor(int i=0; i<2; i++)\n\t\t{\n\t\t\tcin >> in;\n\t\t\ttot+=getp(acnt, in);\n\t\t}\n\t\tchar d[8];\n\t\tfor(int i=0; i<8; i++)\n\t\t\tcin >> d[i];\n\n\t\tif(acnt&&tot==11)\n\t\t{\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tif(acnt&&tot>7) break;\n\t\t\telse if(tot>16) break;\n\n\t\t\ttot+=getp(acnt, d[i]);\n\t\t}\n\n\t\tif(acnt&&tot<=11) tot+=10;\n\n\t\tif(tot>21) cout << \"bust\" << endl;\n\t\telse cout << tot << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(aNum==1&&cs>=7)\n            cout<<cs+11<<endl;\n        else if(aNum==0&&cs>=17){\n            cout<<cs<<endl;\n        }\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1&&ccs==17)\n                        continue;\n                    if(ccs>21){\n                        b=true;break;\n                    }\n                    else if(ccs>17){\n                        fs=cs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nstring temp = \"*A23456789TJQK\";\nint addsum ;\n\nvoid add( int& ret, char c){\n  if(c == 'A'){\n    if(ret >= 11) ret++;\n    else ret += 11, addsum++;\n  }else{\n    ret += min( 10, (int)temp.find(c));\n  }\n  if(ret >= 22){\n    if(addsum){\n      addsum--, ret -= 10;\n    }\n  }\n}\n\n\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    addsum = 0;\n    int ret = 0;\n    char buff;\n\n    queue< char > que;\n    for(int i = 0 ; i < 10 ; i++ ){\n      cin >> buff;\n      que.push( buff );\n    }\n\n    for(int i = 0; !que.empty(); i++){\n      char c = que.front(); que.pop(); //ふえぇぇ\n      if(i == 2 && ret == 21){\n        cout << \"blackjack\" << endl;\n        break;\n      }else if(ret <= 16){\n        add(ret,c);\n      }else if(addsum && ret == 17){\n        add(ret,c);\n      }else if(ret <= 21){\n        cout << ret << endl;\n        break;\n      }else{\n        cout << \"bust\" << endl;\n        break;\n      }\n    }\n    if(que.empty()) cout << ret << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\nusing namespace std;\n\nint main(){\n    map<char, int> card;\n    for(int i=2; i<=9; i++){\n        card['0'+i] = i;\n    }\n    card['A'] = 1;\n    card['T'] = card['J'] = card['Q'] = card['K'] = 10;\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char pile[8];\n        int point = 0;\n        bool isblackjack = true;\n        bool isace = false;\n        for(int j=1; j<=2; j++){\n            char tmp;\n            cin >> tmp;\n            if(tmp == 'A' && !isace){\n                isace = true;\n                point += 11;\n            }else{\n                point += card[tmp];\n            }\n        }\n        for(int j=0; j<8; j++){\n            cin >> pile[j];\n        }\n        for(int j=0; j<8; j++){\n            if(pile[j] == 'A'){\n                if(point <= 10){\n                    point += 11;\n                    isace = true;\n                }else{\n                    point++;\n                }\n            }else if(isace && point == 17){\n               isblackjack = false;\n                point += card[pile[j]];\n            }else if(point <= 16){\n                isblackjack = false;\n                point += card[pile[j]];\n            }else{\n                break;\n            }\n        }\n        if(isblackjack && point == 21){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <stack>\n#include <queue>\n\nusing namespace std;\n\nbool ace11;\nint total;\n\nint hit(char card) {\n    switch(card) {\n    case 'T':\n    case 'J':\n    case 'Q':\n    case 'K':\n        return 10;\n    case 'A':\n        if (total <= 10) {\n            ace11 = true;\n            return 11;\n        } else {\n            return 1;\n        }\n    default:\n        return (int)(card-'0');\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n        queue<char> que;\n        total = 0;\n        ace11 = false;\n        for (int j = 0; j < 10; j++) {\n            char c;\n            cin >> c;\n            que.push(c);\n        }\n        for (int j = 0; j < 2; j++) {\n            char card = que.front(); que.pop();\n            total += hit(card);\n        }\n        if (total == 21) {\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        while(true){\n            if (total > 17 || total == 17 && ace11 == false) {\n                cout << total << endl;\n                break;\n            }\n            char card = que.front(); que.pop();\n            total += hit(card);\n            if (total > 21) {\n                if (ace11) {\n                    total -= 10;\n                    ace11 = false;\n                } else {\n                    cout << \"bust\" << endl;\n                    break;\n                }\n            }\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nbool ace;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    ace = true;\n    if(sum + 11 > 21) return 1;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || (sum == 17 && ace)){\n        if(conv(str[j], sum)) sum += conv(str[j], sum);\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint q, t[12]; char c[11];\nint score() {\n\tint ret = t[1] * 11;\n\tfor (int i = 2; i < 11; i++) ret += t[i] * i;\n\tint z = t[1];\n\twhile (z && ret >= 22) z--, ret -= 10;\n\treturn ret;\n}\nint main() {\n\tcin >> q;\n\twhile (q--) {\n\t\tfor (int i = 0; i < 10; i++) cin >> c[i];\n\t\tfill(t, t + 11, 0);\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\telse t[10]++;\n\t\t}\n\t\tif (score() == 21) {\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}\n\t\telse if (score() > 17 || (score() == 17 && !t[1])) {\n\t\t\tcout << score() << endl;\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tfor (int i = 2; i < 10; i++) {\n\t\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\t\telse t[10]++;\n\t\t\t\tif (score() > 21) {\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (score() > 17 || (score() == 17 && !t[1])) {\n\t\t\t\t\tcout << score() << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint compute_score(bool& has_ace11,const vector<string>& hands){\n  int sum = 0;\n\n  bool has_ace = false;\n  for(int i = 0; i < hands.size();i++){\n    int num = cards[hands[i][0]];\n    if(num == 1) has_ace = true;\n    sum += num;\n  }\n  if(has_ace){\n    if(sum + 10 <= 21){\n      has_ace11 = true;\n      sum += 10;\n    }\n  }\n  return sum;\n}\n\nint main(){\n  int total_testcases;\n  for(int i = 2; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 1;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      vector<string> hands;\n      cin >> lhs >> rhs;\n\n      bool is_blackjack = false;\n      bool is_ace11 = false;\n      hands.push_back(lhs);\n      hands.push_back(rhs);\n\n      int sum = 0;\n      sum = compute_score(is_ace11,hands);\n      if(sum == 21){\n        is_blackjack = true;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        is_ace11 = false;\n        string pile;\n        cin >> pile;\n        if(sum <= 16){\n          hands.push_back(pile);\n          sum = compute_score(is_ace11,hands);\n        }\n        else if(sum == 17 && is_ace11){\n          hands.push_back(pile);\n          sum = compute_score(is_ace11,hands);\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\n\nint sum=0;\n\nvector<int> solve(bitset<13>&used, vector<int>&nums) {\n\tif (used.count() == 13) {\n\t\treturn vector<int>{-1};\n\t}\n\telse {\n\t\tfor (int i = 0; i < 13; ++i) {\n\t\t\tif (!used[i]) {\n\t\t\t\tif (sum % (i + 1)==0) {\n\t\t\t\t\tsum+=(i+1)*nums[i];\n\t\t\t\t\tused[i] = true;\n\t\t\t\t\tauto v(solve(used, nums));\n\t\t\t\t\tif (!v.empty()) {\n\t\t\t\t\t\tif (v == vector<int>{-1}) {\n\t\t\t\t\t\t\tv.clear();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (int j = 0; j < nums[i];++j) {\n\n\t\t\t\t\t\t\tv.push_back(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tused[i]=false;\n\t\t\t\t\tsum-=(i+1)*nums[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn vector<int>();\n\t}\n\n}\n\nmap<char, int>mp;\n\nint gt() {\n\tchar ch;cin>>ch;\n\treturn mp[ch];\n}\n\n\nint main() {\n\tint N;cin>>N;\n\tfor (int i = 2; i <= 9; ++i) {\n\t\tmp[(i+'0')]=i;\n\t}\n\tmp['A']=1;\n\tmp['T']=10;\n\tmp['J']=10;\n\tmp['Q']=10;\n\tmp['K']=10;\n\twhile (N--) {\n\t\tint a(gt());\n\t\tint b(gt());\n\t\tvector<int>nums(8);\n\t\tfor (int i = 0; i < 8; ++i) {\n\t\t\tnums[i]=gt();\n\t\t}\n\t\tbool ace=false;\n\t\tint sum=0;\n\t\tsum+=a;\n\t\tif(a==1)ace=true;\n\t\tsum+=b;\n\t\tif(b==1)ace=true;\n\n\t\tif (sum == 11&&ace) {\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t}\n\t\telse {\n\t\t\tint k=0;\n\t\t\twhile (true) {\n\t\t\t\tif(sum>=17)break;\n\t\t\t\tif (ace) {\n\t\t\t\t\tif(sum>=8&&sum<=11)break;\n\t\t\t\t}\n\t\t\t\tsum+=nums[k];\n\t\t\t\tif(nums[k]==1)ace=true;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tif (sum >= 22) {\n\t\t\t\tcout<<\"bust\"<<endl;\n\t\t\t}\n\t\t\telse if (ace&&sum <= 11) {\n\t\t\t\tcout<<sum+10<<endl;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcout<<sum<<endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint point(string s) {\n    if(s == \"T\" || s == \"J\" || s == \"Q\" || s == \"K\") return 10;\n    if(s == \"A\") return 1;\n    return s[0]-'0';\n}\n\nint cal(vector<string> cards) {\n    if(cards[1] == \"A\" && point(cards[0]) == 10) return -1;\n    if(cards[0] == \"A\" && point(cards[1]) == 10) return -1;\n    int p = 0;\n    bool aces = false;\n    for(int i=0; i<cards.size(); ++i) {\n        if(p <= 16) {\n            int t = point(cards[i]);\n            if(t == 1 && p+11 <= 21) {\n                aces = true;\n                p += 11;\n            }else{\n                p += t;\n            }\n        }else if(p == 17 && aces) {\n            p -= 10;\n            int t = point(cards[i]);\n            p += t;\n            aces = false;\n        }\n    }\n    return p;\n}\n\nint main() {\n    int tc;\n    string card;\n    cin>>tc;\n    while(tc--) {\n        vector<string> hand(10);\n        cin>>hand[0]>>hand[1];\n        for(int i=0; i<8; ++i) {\n            cin>>hand[i+2];\n        }\n        int p = cal(hand);\n        if(p > 21) cout<<\"bust\"<<endl;\n        else if(p == -1) cout<<\"blackjack\"<<endl;\n        else cout<<p<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <map>\nusing namespace std;\n\nint getCard() {\n  char c;\n  cin >> c;\n  if(c == 'A') {\n    return 0;\n  } else if(isdigit(c)) {\n    return c - '0';\n  } else {\n    return 10;\n  }\n}\n\npair<int,int> getScore(const vector<int> &d) {\n  int score = 0;\n  int numAce = 0;\n  int use11 = 0;\n  for(int i = 0; i < d.size(); ++i) {\n    if(d[i] == 0) {\n      ++numAce;\n      score += 1;\n    } else {\n          score += d[i];\n    }\n  }\n  while(numAce && score+10 <= 21) {\n    score += 10;\n    ++use11;\n    --numAce;\n  }\n  return make_pair(score,use11);\n}\n\nint main() {\n  int Tc;\n  vector<int> d;\n  vector<int> p;\n  cin >> Tc;\n  for(int tc = 0; tc < Tc; ++tc) {\n    d.clear();\n    p.clear();\n    for(int i = 0; i < 2; ++i) {\n      d.push_back(getCard());\n    }\n    for(int i = 0; i < 8; ++i) {\n      p.push_back(getCard());\n    }\n\n    if(d[0] == 0 && d[1] == 10) {\n      cout << \"blackjack\" << endl;\n    } else {\n      pair<int,int> s;\n      for(int i = 0; i < 8; ++i) {\n        s = getScore(d);\n        if(s.first <= 16 || s.first == 17 && s.second) {\n          d.push_back(p[i]);\n        }\n      }\n      if(s.first <= 21) {\n        cout << s.first << endl;\n      } else {\n        cout << \"bust\" << endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nbool ace;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 > 21) return 1;\n    ace = true;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || (sum == 17 && ace)){\n        if(conv(str[j], sum)) sum += conv(str[j], sum);\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint F(char c,int&A)\n{\n\tif(isdigit(c))return c-'0';\n\tif(c=='A'){++A;return 1;}\n\treturn 10;\n}\nint main()\n{\n\tint N,A,r;\n\tchar*p,c,d,s[99];\n\tscanf(\"%d\",&N);\n\tfgets(s,99,stdin);\n\twhile(N--)\n\t{\n\t\tr=A=0;\n\t\tfgets(s,99,stdin);\n\t\tsscanf(s,\" %c %c\",&c,&d);\n\t\tr=F(c,A)+F(d,A);\n\t\tfgets(s,99,stdin);\n\t\tif(r==11&&A){puts(\"blackjack\");continue;}\n\t\tfor(p=s;r<17||r+!!A*10<18;++p)\n\t\t{\n\t\t\twhile(isspace(*p))++p;\n\t\t\tr+=F(*p,A);\n\t\t}\n\t\twhile(r<12&&A)r+=10,--A;\n\t\tif(r>21)puts(\"bust\");\n\t\telse printf(\"%d\\n\",r);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <cfloat>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <map>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nint calc(char ch){\n\n\tif(ch >= '1' && ch <= '9'){\n\t\treturn ch-'0';\n\t}else{\n\t\treturn 10;\n\t}\n}\n\n\nvoid func(){\n\n\tchar first[2],second[2];\n\tscanf(\"%s %s\",first,second);\n\n\tchar pile[8][2];\n\tfor(int i = 0; i < 8; i++){\n\t\tscanf(\"%s\",pile[i]);\n\t}\n\n\tint num;\n\tbool is_ace = false;\n\n\tif(first[0] != 'A' && second[0] != 'A'){\n\n\t\tnum = calc(first[0]) + calc(second[0]);\n\n\t}else if(first[0] == 'A' && second[0] != 'A'){\n\n\t\tnum = 11 + calc(second[0]);\n\t\tis_ace = true;\n\n\t}else if(first[0] != 'A' && second[0] == 'A'){\n\n\t\tnum = calc(first[0]) + 11;\n\t\tis_ace = true;\n\n\t}else if(second[0] == 'A' && second[0] == 'A'){\n\n\t\tnum = 12;\n\t\tis_ace = true;\n\t}\n\n\tif(num == 21){\n\t\tprintf(\"blackjack\\n\");\n\t\treturn;\n\t}else if((num >= 18) || (num == 17 && is_ace == false)){\n\t\tprintf(\"%d\\n\",num);\n\t\treturn;\n\t}\n\n\tfor(int i = 0; i < 8; i++){\n\t\tif(pile[i][0] != 'A'){\n\t\t\tnum += calc(pile[i][0]);\n\n\t\t\tif(num > 21 && is_ace == true){\n\t\t\t\tnum -= 10;\n\t\t\t\tis_ace = false;\n\t\t\t}\n\n\t\t\tif(num > 21){\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\treturn;\n\t\t\t}else if((num >= 18) || (num == 17 && is_ace == false)){\n\t\t\t\tprintf(\"%d\\n\",num);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t}else{\n\n\t\t\tif(num <= 10){\n\t\t\t\tnum += 11;\n\t\t\t\tis_ace = true;\n\t\t\t}else{\n\t\t\t\tnum += 1;\n\t\t\t}\n\n\t\t\tif(num > 21 && is_ace == true){\n\t\t\t\tnum -= 10;\n\t\t\t\tis_ace = false;\n\t\t\t}\n\n\t\t\tif(num > 21){\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\treturn;\n\t\t\t}else if((num >= 18) || (num == 17 && is_ace == false)){\n\t\t\t\tprintf(\"%d\\n\",num);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(){\n\n\tint N;\n\tscanf(\"%d\",&N);\n\n\tfor(int i = 0; i < N; i++)func();\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cctype>\nusing namespace std;\n\nint value(char a)\n{\n\tif(a=='T') return 10;\n\tif(a=='J') return 10;\n\tif(a=='Q') return 10;\n\tif(a=='K') return 10;\n\tif(a=='A') return 11;\n\n\treturn a-'0';\n}\n\nint main()\n{\n\tint N;\n\tcin >> N;\n\twhile(N--)\n\t{\n\t\tbool one=false;\n\t\tint ans=0;\n\t\tfor(int i=0; i<2; i++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tans+=value(c);\n\t\t\tif(c=='A') one=true;\n\t\t\tif(ans>21) ans-=10;\n\t\t}\n\n\t\tstring s;\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\ts+=c;\n\t\t}\n\n\t\tif(ans==21)\n\t\t{\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tif( ans<=16 || (ans==17 && one) )\n\t\t\t{\n\t\t\t\tif(value(s[i])) ans+=value(s[i]);\n\t\t\t\tif(s[i]=='A')\n\t\t\t\t{\n\t\t\t\t\tif(ans>21) ans-=10;\n\t\t\t\t\telse one=1;\n\t\t\t\t}\n\n\t\t\t\tif(ans>21&&one)\n\t\t\t\t{\n\t\t\t\t\tans-=10;\n\t\t\t\t\tone=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif(ans>21) cout << \"bust\" << endl;\n\t\telse cout << ans << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nstring temp = \"*A23456789TJQK\";\nint addsum ;\n\nvoid add( int& ret, char c){\n  if(c == 'A'){\n    if(ret >= 11) ret++;\n    else ret += 11, addsum++;\n  }else{\n    ret += min( 10, (int)temp.find(c));\n  }\n  if(ret >= 22){\n    if(addsum){\n      addsum--, ret -= 10;\n    }\n  }\n}\n\n\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    addsum = 0;\n    int ret = 0;\n    char buff;\n\n    queue< char > que;\n    for(int i = 0 ; i < 10 ; i++ ){\n      cin >> buff;\n      que.push( buff );\n    }\n\n    for(int i = 0; !que.empty(); i++){\n      char c = que.front(); que.pop(); //ふえぇぇ\n      if(i == 2 && ret == 21){\n        cout << \"blackjack\" << endl;\n        break;\n      }else if(ret <= 16 || (addsum && ret == 17)){\n        add(ret,c);\n      }else if(ret <= 21){\n        cout << ret << endl;\n        break;\n      }else{\n        cout << \"bust\" << endl;\n        break;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint F(char c,int&A)\n{\n\tif(isdigit(c))return c-'0';\n\tif(c=='A'){++A;return 1;}\n\treturn 10;\n}\nint main()\n{\n\tint N,A,r;\n\tchar*p,c,d,s[99];\n\tscanf(\"%d\",&N);\n\tfgets(s,99,stdin);\n\twhile(N--)\n\t{\n\t\tr=A=0;\n\t\tfgets(s,99,stdin);\n\t\tsscanf(s,\" %c %c\",&c,&d);\n\t\tr=F(c,A)+F(d,A);\n\t\tfgets(s,99,stdin);\n\t\tif(r==11&&A){puts(\"blackjack\");continue;}\n\t\tfor(p=s;r<17||(A&&r+10==17);++p)\n\t\t{\n\t\t\twhile(isspace(*p))++p;\n\t\t\tr+=F(*p,A);\n\t\t}\n\t\twhile(r<12&&A)r+=10,--A;\n\t\tif(r>21)puts(\"bust\");\n\t\telse printf(\"%d\\n\",r);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s); sin>>v; return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nint main() {\n\tint n; cin >> n;\n\tREP(t, n) {\n\t\tint score = 0;\n\t\tint ace = 0;\n\t\tchar c[2]; cin >> c[0] >> c[1];\n\t\tREP(i, 2) {\n\t\t\tif ('2' <= c[i] && c[i] <= '9') {\n\t\t\t\tscore += c[i] - '0';\n\t\t\t} else if (c[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t}\n\t\tchar stack[8]; REP(_i, 8) { cin >> stack[_i]; }\n\t\tif (score == 21) { printf(\"blackjack\\n\"); continue; }\n\t\tif (score > 21) {\n\t\t\tif (ace) {\n\t\t\t\tace--;\n\t\t\t\tscore -= 10;\n\t\t\t}\n\t\t}\n\t\tint i = -1;\n\t\twhile (true) {\n\t\t\tif (score == 17) {\n\t\t\t\tif (ace) {\n\t\t\t\t\tace--;\n\t\t\t\t\tscore -= 10;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (score > 21) {\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (score > 16) {\n\t\t\t\tprintf(\"%d\\n\", score);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t++i; // Stack position\n\t\t\tif ('2' <= stack[i] && stack[i] <= '9') {\n\t\t\t\tscore += stack[i] - '0';\n\t\t\t} else if (stack[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s); sin>>v; return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nint main() {\n\tint n; cin >> n;\n\tREP(t, n) {\n\t\tint score = 0;\n\t\tint ace = 0;\n\t\tchar c[2]; cin >> c[0] >> c[1];\n\t\tREP(i, 2) {\n\t\t\tif ('2' <= c[i] && c[i] <= '9') {\n\t\t\t\tscore += c[i] - '0';\n\t\t\t} else if (c[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t}\n\t\tchar stack[8]; REP(_i, 8) { cin >> stack[_i]; }\n\t\tif (score == 21) { printf(\"blackjack\\n\"); continue; }\n\t\tif (score > 21) {\n\t\t\tif (ace) {\n\t\t\t\tace--;\n\t\t\t\tscore -= 10;\n\t\t\t}\n\t\t}\n\t\tint i = -1;\n\t\twhile (true) {\n\t\t\tif (score == 17) {\n\t\t\t\tif (ace) {\n\t\t\t\t\tgoto HIT;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (score > 21) {\n\t\t\t\tprintf(\"bust\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (score > 16) {\n\t\t\t\tprintf(\"%d\\n\", score);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\nHIT:\n\t\t\t++i; // Stack position\n\t\t\tif ('2' <= stack[i] && stack[i] <= '9') {\n\t\t\t\tscore += stack[i] - '0';\n\t\t\t} else if (stack[i] == 'A') {\n\t\t\t\tace++;\n\t\t\t\tscore += 11;\n\t\t\t\tif (score > 21) {\n\t\t\t\t\tace--;\n\t\t\t\t\tscore -= 10;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscore += 10;\n\t\t\t}\n\t\t\tif (score > 21) {\n\t\t\t\tif (ace) {\n\t\t\t\t\tace--;\n\t\t\t\t\tscore -= 10;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i = 0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\n\t\tint sum = 0;\n\t\tbool herashita = false;\n\t\tbool one = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tint a = ans(cards[i], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum +=a;\n\t\t}\n\t\tif (sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if (sum >= 17&&one){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tREP(i, 8){\n\t\t\tint a = ans(cards[i+2], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum += a;\n\t\t\tif (sum >= 22){\n\t\t\t\tif (!one || herashita){\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsum -= 10;\n\t\t\t\therashita = true;\n\t\t\t}\n\t\t\tif (17 <= sum&&sum <= 21){\n\t\t\t\tif (sum >= 17 && !one)\n\t\t\t\t\tcontinue;\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tif(v[0]+v[1]==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tgoto L;\n\t\t}\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]==11){\n\t\t\t\t\tif(v1)v.push_back(1);\n\t\t\t\t\telse v.push_back(11);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t\tsum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum>21&&v1){\n\t\t\t\tr(j,v.size())\n\t\t\t\t  if(v[j]==11){\n\t\t\t\t  \tv[j]=1;\n\t\t\t\t  \tbreak;\n\t\t\t\t  }\n\t\t\t}\n\t\t}K:;L:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n      /*if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n        }*/\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char hand;\n        int point = 0;\n        int one = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        char a, b;\n        cin >> a >> b;\n        if(a == 'A' && (b == 'T' || b == 'K' || b == 'Q' || b == 'J')){\n            isblackjack = true;\n        }\n        if(b == 'A' && (a == 'T' || a == 'K' || a == 'Q' || a == 'J')){\n            isblackjack = true;\n        }\n        if(a == 'A'){\n            isace = true;\n            if(b == 'A'){\n                point = 12;\n            }else{\n                point = 11 + b - '0';\n            }\n        }else if(b == 'A'){\n            isace = true;\n            point = 11 + a - '0';\n        }else if(a == 'T' || a == 'J' || a == 'Q' || a == 'K'){\n            point = 10 + b - '0';\n        }else if(b == 'T' || b == 'J' || b == 'Q' || b == 'K'){\n            point = 10 + a - '0';\n        }else{\n            point = a - '0' + b - '0';\n        }\n        for(int i=0; i<8; i++){\n            cin >> hand;\n            if(point <= 16 || (point == 17 && isace)){\n                if(hand == 'A'){\n                    one++;\n                }else if(hand == 'T' || hand == 'J' || hand == 'Q' || hand == 'K'){\n                    point += 10;\n                }else{\n                    point += hand - '0';\n                }\n            }\n        }\n        point += one*11;\n        while(one--&&point>21){\n            point -= 10;\n        }\n        if(isblackjack){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nchar in[20];\nint main(){\n\tint a;scanf(\"%d\",&a);\n\twhile(a--){\n\t\tfor(int i=0;i<10;i++)scanf(\"%s\",in+i);\n\t\tif((in[0]=='A'&&in[1]=='J')||(in[0]=='J'&&in[1]=='A')){\n\t\t\tprintf(\"blackjack\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tint val=0;\n\t\tint ace=0;\n\t\tif(in[0]=='A'){val+=11;ace++;}\n\t\telse if(in[0]=='T'||in[0]=='J'||in[0]=='Q'||in[0]=='K'){val+=10;}\n\t\telse val+=in[0]-'0';\n\t\tif(in[1]=='A'){val+=11;ace++;}\n\t\telse if(in[1]=='T'||in[1]=='J'||in[1]=='Q'||in[1]=='K'){val+=10;}\n\t\telse val+=in[1]-'0';\n\t\tif(val>21){val-=10;ace--;}\n\t\tint at=2;\n\t\twhile(val<17&&at<10){\n\t\t\tif(in[at]=='A'){val+=11;ace++;}\n\t\t\telse if(in[at]=='T'||in[at]=='J'||in[at]=='Q'||in[at]=='K'){val+=10;}\n\t\t\telse val+=in[at]-'0';\n\t\t\tif(val>21&&ace){val-=10;ace--;}\n\t\t\tat++;\n\t\t}\n\t\tif(val>21)printf(\"bust\\n\");\n\t\telse printf(\"%d\\n\",val);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <string>\nusing namespace std;\n\nint getp(int& acnt, char c)\n{\n\tif(isdigit(c)) return c-'0';\n\n\tif(c=='A')\n\t{\n\t\tacnt++;\n\t\treturn 1;\n\t}\n\n\treturn 10;\n\t\n}\n\nint main()\n{\n\tint N;\n\tcin >> N;\n\twhile(N--)\n\t{\n\t\tint acnt=0, tot=0;\n\t\tchar in;\n\t\tfor(int i=0; i<2; i++)\n\t\t{\n\t\t\tcin >> in;\n\t\t\ttot+=getp(acnt, in);\n\t\t}\n\t\tchar d[8];\n\t\tfor(int i=0; i<8; i++)\n\t\t\tcin >> d[i];\n\n\t\tif(acnt&&tot==11)\n\t\t{\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tif(!(acnt&&tot==7))\n \t\t\t\tif(tot>16) break;\n\n\t\t\ttot+=getp(acnt, d[i]);\n\t\t}\n\n\t\tif(acnt&&tot<=11) tot+=10;\n\n\t\tif(tot>21) cout << \"bust\" << endl;\n\t\telse cout << tot << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstdlib>\n#define INF 10e7\nusing namespace std;\n\nint cost[100][100];\n\nint main(void){\n\tint n;\n\tcin >> n;\n\tfor(int i=0;i<n;i++){\n\t\tint cards=0,ace=0;\n\t\tchar list[2];\n\t\tchar table[8];\n\t\tfor(int j=0;j<2;j++)\n\t\t\tcin >> list[j];\n\n\t\tfor(int j=0;j<8;j++)\n\t\t\tcin >> table[j];\n\n\t\tfor(int j=0;j<2;j++){\n\t\t\tif(list[j]=='A')\n\t\t\t\tcards+=11,ace++;\n\t\t\telse if(isdigit(list[j]))\n\t\t\t\tcards+=(list[j]-'0');\n\t\t\telse\n\t\t\t\tcards+=10;\n\t\t}\n\t\tif(cards==21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}else if(cards >17){\n\t\t\tcout << cards << endl;\n\t\t\tcontinue;\n\t\t}else if(cards==17&&!ace){\n\t\t\tcout << cards << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<8;j++){\n\t\t\tif(table[j]=='A')\n\t\t\t\tcards+=11,ace++;\n\t\t\telse if(isdigit(table[j]))\n\t\t\t\tcards+=(table[j]-'0');\n\t\t\telse\n\t\t\t\tcards+=10;\n\t\t\tif(cards >21&&ace)\n\t\t\t\tcards-=10,ace--;\n\t\t\t\n\t\t\tif(cards > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\tbreak;\n\t\t\t}else if(cards>17){\n\t\t\t\tcout << cards << endl;\n\t\t\t\tbreak;\n\t\t\t}else if(cards==17&&!ace){\n\t\t\t\tcout << cards << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 > 21) return 1;\n    aces++;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n      if(c == 'A') aces++;\n    }\n\n    string str = \"\";\n    for(int i=0;i<8;i++){\n      char c;\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || sum > 21 && aces){\n        sum += conv(str[j], sum);\n        if(sum > 21 && aces){\n          aces--;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nbool test_ace17(int value, int ace11) {\n  while(ace11) {\n    if(value == 17) { return true; }\n    ace11 --;\n    value -= 10;\n  }\n  return false;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { if(in[0] == 11) in[0] -= 10; else in[1] -= 10; }\n\n    REP(k, 2, 9) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n      }\n      while(value > 21 && ace11) {\n        ace11 --;\n        value -= 10;\n      }\n      if(value > 21) {\n        cout << \"bust\" << endl;\n        break;\n      }\n      if(value > 16 && !test_ace17(value, ace11)) {\n        cout << value << endl;\n        break;\n      }\n    }\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21 && 1){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint toI(char ch){\n  if(isdigit(ch)) return ch - '0';\n  if(ch == 'T') return 10;\n  if(ch == 'J') return 10;\n  if(ch == 'Q') return 10;\n  if(ch == 'K') return 10;\n}\n\nint flg;\nint calc(int sum,char ch){\n  if(ch == 'A'&&sum+11<=21){flg++; return sum+11;}\n  if(ch == 'A') return sum+1;\n  return sum + toI(ch);\n}\n\n\nint main(){\n  int q;\n  cin>>q;\n  while(q--){\n    int sum = 0;\n    char ch[2];\n    cin>>ch[0]>>ch[1];\n    flg=0;\n    sum = calc(sum,ch[0]);\n    sum = calc(sum,ch[1]);\n    \n    char card[8];\n    for(int i=0;i<8;i++)cin>>card[i];\n    if(sum == 21){cout<<\"blackjack\"<<endl;continue; }\n\n    for(int i=0;i<8;i++){\n      if(sum <= 16) sum = calc(sum,card[i]);\n      else if(sum==17 && flg) sum = calc(sum,card[i]);\n      while(sum>21&&flg)flg--,sum-=10;\n    }\n    if(sum>21) cout<<\"bust\"<<endl;\n    else cout<< sum<<endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { if(in[0] == 11) in[0] -= 10; else in[1] -= 10; }\n\n    REP(k, 2, 9) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n      }\n      while(value > 21 && ace11) {\n        ace11 --;\n        value -= 10;\n      }\n      if(value > 21) {\n        cout << \"bust\" << endl;\n        break;\n      }\n      if(value > 16 && (!ace11 || value > 17)) {\n        cout << value << endl;\n        break;\n      }\n    }\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c){\n  if(c == 'A'){\n    aces++;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c);\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n    }\n\n    string str = \"\";\n    for(int i=0;i<8;i++){\n      char c;\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16){\n        sum += conv(str[j]);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(str[j]);\n      }\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "//30\n#include<iostream>\n#include<cctype>\n\nusing namespace std;\n\nvoid in(char c,int &a,int &b){\n  if(c=='A'){\n    a++;\n  }else if(isalpha(c)){\n    b+=10;\n  }else{\n    b+=c-'0';\n  }\n}\n\nint pn(int a,int b){\n  b+=a;\n  if(b<=11&&a){\n    b+=10;\n  }\n  return b;\n}\n\nint main(){\n  int n;\n  cin>>n;\n  while(n--){\n    char c[2];\n    cin>>c[0]>>c[1];\n    char d[8];\n    for(int i=0;i<8;i++){\n      cin>>d[i];\n    }\n    int a=0,b=0;\n    in(c[0],a,b);\n    in(c[1],a,b);\n    if(a&&(c[0]=='J'||c[1]=='J')){\n      cout<<\"blackjack\"<<endl;\n    }else{\n      for(int i=0;pn(a,b)<=16||pn(a,b)==17&&pn(0,b)<=6;i++){\n\tin(d[i],a,b);\n      }\n      if(pn(a,b)<=21){\n\tcout<<pn(a,b)<<endl;\n      }else{\n\tcout<<\"bust\"<<endl;\n      }\n    }\n  }\n  return 0;\n}\n    \n    "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(aNum==1&&cs>=7){\n            cout<<cs+11<<endl;\n        }\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1){\n                        if(ccs-11==6){\n                            continue;\n                        }\n                    }\n                    if(ccs>21){\n                        b=true;break;\n                    }\n                    else if(ccs>17){\n                        fs=cs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <sstream>\nusing namespace std;\n\nconst int BLACKJACK = 0;\nconst int BUST = -1;\n\nmap<string,int> val = {\n    {\"A\", 1},\n    {\"2\", 2},\n    {\"3\", 3},\n    {\"4\", 4},\n    {\"5\", 5},\n    {\"6\", 6},\n    {\"7\", 7},\n    {\"8\", 8},\n    {\"9\", 9},\n    {\"T\", 10},\n    {\"J\", 10},\n    {\"Q\", 10},\n    {\"K\", 10}\n};\n\npair<int,bool> score(const vector<string> &v) {\n    int ret = 0;\n    bool hasAce = false, useAce = false;\n    for (int i=0; i<(int)v.size(); ++i) {\n        ret += val[v[i]];\n        if (v[i] == \"A\") hasAce = true;\n    }\n    if (hasAce && ret+10 <= 21) {\n        ret += 10;\n        useAce = true;\n    }\n    if ((int)v.size() == 2 && ret == 21) {\n        ret = BLACKJACK;\n    } else if (21 < ret) {\n        ret = BUST;\n    }\n    return make_pair(ret, useAce);\n}\n\nbool need(const vector<string> &v) {\n    pair<int,bool> t = score(v);\n    if (t.first <= 0) {\n        return false;\n    } else if (t.first <= 16 || (t.first == 17 && t.second)) {\n        return true;\n    }\n    return false;\n}\n\nint main() {\n    int N;\n    cin >> N;\n    for (int i=0; i<N; ++i) {\n        vector<string> v(2);\n        for (int j=0; j<2; ++j) cin >> v[j];\n        vector<string> pile(8);\n        for (int j=0; j<8; ++j) cin >> pile[j];\n\n        int k = 0;\n        while (need(v)) {\n            v.push_back(pile[k++]);\n        }\n\n        pair<int,bool> ret = score(v);\n        if (ret.first == BLACKJACK) {\n            cout << \"blackjack\" << endl;\n        } else if (ret.first == BUST) {\n            cout << \"bust\" << endl;\n        } else {\n            cout << ret.first << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nstring temp = \"*A23456789TJQK\";\nint addsum ;\n\nvoid add( int& ret, char c, bool& ok){\n  if(c == 'A'){\n    if(ret >= 11) ret++;\n    else ok++, ret += 11, addsum++;\n  }else{\n    ret += min( 10, (int)temp.find(c));\n  }\n  if(ret >= 22){\n    if(addsum){\n      addsum--, ret -= 10;\n    }\n  }\n}\n\n\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    addsum = 0;\n    int ret = 0;\n    bool ok = false; //1がでたかでてないか\n    char buff;\n\n    queue< char > que;\n    for(int i = 0 ; i < 10 ; i++ ){\n      cin >> buff;\n      que.push( buff );\n    }\n\n    for(int i = 0; !que.empty(); i++){\n      char c = que.front(); que.pop(); //ふえぇぇ\n      if(i == 2 && ret == 21){\n        cout << \"blackjack\" << endl;\n        break;\n      }else if(ret <= 16 || (ok && ret == 17)){\n        add(ret,c,ok);\n      }else if(ret <= 21){\n        cout << ret << endl;\n        break;\n      }else{\n        cout << \"bust\" << endl;\n        break;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nbool f;\nint ac;\n\nint calc(int now, char c) {\n\tif (c=='A') {\n\t\tif (ac==0&&now<=10) { now+=11; f=true; }\n\t\telse now+=1;\n\t} else if (c=='T'||c=='J'||c=='Q'||c=='K') {\n\t\tnow += 10;\n\t} else {\n\t\tnow += (int)c - '0';\n\t}\n\n\tif (now>21&&f) { f=false; now-=10; }\n\treturn now;\n}\n\nint main() {\n\tchar init[2];\n\tint N;\n\tcin >> N;\n\twhile (N--) {\n\t\tcin >> init[0] >> init[1];\n\t\tf = false;\n\t\tac = 0;\n\t\tchar top[8];\n\t\tfor (int i=0; i<8; i++)\n\t\t\tcin >> top[i];\n\n\t\tint scr = 0;\n\t\tscr = calc(scr, init[0]);\n\t\tscr = calc(scr, init[1]);\n\n\t\tfor (int i=0; i<8; i++) {\n\t\t\tif (i==0&&scr==21) {\n\t\t\t\tcout << \"blackjack\\n\";\n\t\t\t\tbreak;\n\t\t\t} else if (scr<=21&&(scr>17||(!f)&&scr==17)) {\n\t\t\t\tcout << scr << endl;\n\t\t\t\tbreak;\n\t\t\t} else if (scr > 21) {\n\t\t\t\tcout << \"bust\\n\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tscr = calc(scr, top[i]);\n\t\t\tif (i==7) cout << scr << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n \nstring temp = \"*A23456789TJQK\";\nint addsum ;\n \nvoid add( int& ret, char c){\n  if(c == 'A'){\n    if(ret >= 11) ret++;\n    else ret += 11, addsum++;\n  }else{\n    ret += min( 10, (int)temp.find(c));\n  }\n  if(ret >= 22){\n    if(addsum){\n      addsum--, ret -= 10;\n    }\n  }\n}\n \n \nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    addsum = 0;\n    int ret = 0;\n    char buff;\n \n    queue< char > que;\n    for(int i = 0 ; i < 10 ; i++ ){\n      cin >> buff;\n      que.push( buff );\n    }\n \n    for(int i = 0; !que.empty(); i++){\n      char c = que.front(); que.pop(); //ふえぇぇ\n      if(i == 2 && ret == 21){\n        cout << \"blackjack\" << endl;\n        break;\n      }else if(ret <= 16){\n        add(ret,c);\n      }else if(addsum && ret == 17){\n        add(ret,c);\n      }else if(ret <= 21){\n        cout << ret << endl;\n        break;\n      }else if(ret > 21){\n        cout << \"bust\" << endl;\n        break;\n      }else if(que.empty()){\n        cout << ret << endl;\n        break;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint a[10],n,e,s;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nvoid calc(int x){\n\tif(a[x]==11)e++;\n\ts+=a[x];\n\tif(s>21&&e)e--,s-=10;\n}\nmain(){\n\tcin>>n;\n\twhile(n--){\n\t\ts=e=0;\n\t\tr(i,10)a[i]=get();\n\t\tif(a[0]+a[1]==21)cout<<\"blackjack\"<<endl;\n\t\telse r(i,10){\n\t\t\tif(s<17||s==17&&e)calc(i);\n\t\t\telse{\n\t\t\t\tif(s<=21)cout<<s<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n\n    for(int i=1; i<=n; i++){\n        char first[2];\n        char pile[8];\n        int point = 0;\n        cin >> first[0] >> first[1];\n        cin >> pile[0] >> pile[1] >> pile[2] >> pile[3] >> pile[4] >> pile[5] >> pile[6] >> pile[7];\n        for(int j=0; j<2; j++){\n            if(first[j] == 'T' || first[j] == 'J' || first[j] == 'Q' || first[j] == 'K'){\n                point += 10;\n            }else if(first[j] == 'A'){\n                if(point + 11 <= 21){\n                    point += 11;\n                }else{\n                    point += 1;\n                }\n            }else{\n                point += first[j] - '0';\n            }\n        }\n        if(point == 21){\n            cout << \"blackjack\" << endl;\n            continue;\n        }else if(point >=17){\n            cout << point << endl;\n            continue;\n        }\n        for(int j=0; j<8; j++){\n            if(pile[j] == 'T' || pile[j] == 'J' || pile[j] == 'Q' || pile[j] == 'K'){\n                point += 10;\n            }else if(pile[j] == 'A'){\n                if(point + 11 <= 21){\n                    point += 11;\n                }else{\n                    point += 1;\n                }\n            }else{\n                point += pile[j] - '0';\n            }\n            if(point >= 22){\n                cout << \"bust\" << endl;\n                break;\n            }else if(point >= 17){\n                cout << point << endl;\n                break;\n            }\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char hand;\n        int point = 0;\n        int one = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        char a, b;\n        cin >> a >> b;\n        if(a == 'A' && (b == 'T' || b == 'K' || b == 'Q' || b == 'J')){\n            isblackjack = true;\n        }\n        if(b == 'A' && (a == 'T' || a == 'K' || a == 'Q' || a == 'J')){\n            isblackjack = true;\n        }\n        if(a == 'A'){\n            isace = true;\n            if(b == 'A'){\n                isace = false;\n                point = 12;\n            }else{\n                point = 11 + b - '0';\n            }\n        }else if(b == 'A'){\n            isace = true;\n            point = 11 + a - '0';\n        }else if(a == 'T' || a == 'J' || a == 'Q' || a == 'K'){\n            point = 10 + b - '0';\n        }else if(b == 'T' || b == 'J' || b == 'Q' || b == 'K'){\n            point = 10 + a - '0';\n        }else{\n            point = a - '0' + b - '0';\n        }\n        for(int i=0; i<8; i++){\n            cin >> hand;\n            if(point <= 16 || (point == 17 && isace)){\n                if(hand == 'A'){\n                    one++;\n                }else if(hand == 'T' || hand == 'J' || hand == 'Q' || hand == 'K'){\n                    point += 10;\n                }else{\n                    point += hand - '0';\n                }\n            }\n        }\n        point += one*11;\n        while(one--&&point>21){\n            point -= 10;\n        }\n        if(isblackjack){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 > 21) return 1;\n    aces++;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n    }\n\n    string str = \"\";\n    for(int i=0;i<8;i++){\n      char c;\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || sum > 21 && aces){\n        sum += conv(str[j], sum);\n        if(sum > 21 && aces){\n          aces--;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint aces;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    aces = 1;\n    if(sum + 11 > 21) return 1;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    aces = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n\n    string str = \"\";\n    for(int i=0;i<8;i++){\n      char c;\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || sum > 21 && aces){\n        if(conv(str[j], sum)) sum += conv(str[j], sum);\n        if(sum > 21 && aces){\n          aces = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\nusing namespace std;\n\nint main(){\n    map<char, int> card;\n    for(int i=2; i<=9; i++){\n        card['0'+i] = i;\n    }\n    card['A'] = 1;\n    card['T'] = card['J'] = card['Q'] = card['K'] = 10;\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char pile[8];\n        int point = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        for(int j=1; j<=2; j++){\n            char tmp;\n            cin >> tmp;\n            if(tmp == 'A' && !isace){\n                isace = true;\n                point += 11;\n            }else{\n                point += card[tmp];\n            }\n        }\n        if(point == 21) isblackjack = true;\n        for(int j=0; j<8; j++){\n            cin >> pile[j];\n        }\n        for(int j=0; j<8; j++){\n            if(point <= 16 || (isace && point == 17)){\n                if(pile[j] == 'A'){\n                    if(point <= 10){\n                        point += 11;\n                        isace = true;\n                    }else{\n                        point +=card[pile[j]];\n                        isace = false;\n                    }\n                }else{\n                    point += card[pile[j]];\n                }\n            }else{\n                break;\n            }\n        }\n        if(isblackjack && point == 21){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define LOG(...) fprintf(stderr,__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort(ALL(c))\n#define RSORT(c) sort(RALL(c))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\nint calcpoint(vi cards, bool *useace) {\n  int point = 0;\n  bool hasace = false;\n  REP(i, cards.size()){\n    if (cards[i] == 1 && ! hasace){\n      hasace = true;\n    }else{\n      point += cards[i];\n    }\n  }\n\n  *useace = false;\n  if(hasace){\n    if(point <= 10){\n      *useace = true;\n      point += 11;\n    }else{\n      point ++;\n    }\n  }\n  return point;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  REP(i, n){\n    vi cards;\n    queue<int> deck;\n    REP(j, 2){\n      char c;\n      cin >> c;\n      if(isdigit(c)){\n        cards.push_back(c - '0');\n      }else if(c == 'A'){\n        cards.push_back(1);\n      }else{\n        cards.push_back(10);\n      }\n    }\n    REP(j, 8){\n      char c;\n      cin >> c;\n      if(isdigit(c)){\n        deck.push(c - '0');\n      }else if(c == 'A'){\n        deck.push(1);\n      }else{\n        deck.push(10);\n      }\n    }\n\n    bool useace = false;\n    int point = calcpoint(cards, &useace);\n    if(point == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    while(point <= 16 || (point == 17 && useace)){\n      cards.push_back(deck.front()); deck.pop();\n      point = calcpoint(cards, &useace);\n    }\n\n    if (point > 21){\n      cout << \"bust\" << endl;\n    } else{\n      cout << point << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tif(v[0]+v[1]==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tgoto L;\n\t\t}\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]==11){\n\t\t\t\t\tif(v1)v.push_back(1);\n\t\t\t\t\telse v.push_back(11);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t}K:;L:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint toI(char ch){\n  if(isdigit(ch)) return ch - '0';\n  if(ch == 'T') return 10;\n  if(ch == 'J') return 10;\n  if(ch == 'Q') return 10;\n  if(ch == 'K') return 10;\n}\n\nint flg;\nint calc(int sum,char ch){\n  if(ch == 'A'&&sum+11<=21){flg=1; return sum+11;}\n  if(ch == 'A') return sum+1;\n  return sum + toI(ch);\n}\n\n\nint main(){\n  int q;\n  cin>>q;\n  while(q--){\n    int sum = 0;\n    char ch[2];\n    cin>>ch[0]>>ch[1];\n    flg=0;\n    sum = calc(sum,ch[0]);\n    sum = calc(sum,ch[1]);\n    \n    char card[8];\n    for(int i=0;i<8;i++)cin>>card[i];\n    if(sum == 21){cout<<\"blackjack\"<<endl;continue; }\n\n    for(int i=0;i<8;i++){\n      if(sum <= 16) sum = calc(sum,card[i]);\n      else if(sum==17 && flg) sum = calc(sum,card[i]);\n    }\n    if(sum>21) cout<<\"bust\"<<endl;\n    else cout<< sum<<endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\nusing namespace std;\n\nint main(){\n    map<char, int> card;\n    for(int i=1; i<=9; i++){\n        card['0'+i] = i;\n    }\n    card['T'] = card['J'] = card['Q'] = card['K'] = 10;\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char pile[8];\n        int point = 0;\n        bool isblackjack = true;\n        bool isace = false;\n        for(int j=1; j<=2; j++){\n            char tmp;\n            cin >> tmp;\n            if(tmp == 'A' && !isace){\n                isace = true;\n                point += 11;\n            }else{\n                point += card[tmp];\n            }\n        }\n        for(int j=0; j<8; j++){\n            cin >> pile[j];\n        }\n        for(int j=0; j<8; j++){\n            if(pile[j] == 'A'){\n                if(point <= 10){\n                    point += 11;\n                    isace = true;\n                }else{\n                    point++;\n                }\n            }else if(isace && point == 17){\n                isblackjack = false;\n                point += card[pile[j]];\n            }else if(point <= 16){\n                isblackjack = false;\n                point += card[pile[j]];\n            }else{\n                break;\n            }\n        }\n        if(isblackjack && point == 21){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cctype>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29)\n\nusing namespace std;\nbool counted;\n\nvoid add(int &sum,char c)\n{\n  if(isdigit(c))sum += c-'0';\n  else \n    {\n      if(c == 'A')\n\t{\n\t  if(sum+11 > 21)sum += 1;\n\t  else           sum += 11,counted = true;\n\t}\n      else \n\t{\n\t  sum += 10;\n\t}\n    }\n}\n\nint main()\n{\n  int T;\n  while(cin >> T)\n    {\n      while(T--)\n\t{\n\t  counted = false;\n\t  int sum = 0;\n\t  rep(i,2)\n\t    {\n\t      char c;\n\t      cin >> c;\n\t      add(sum,c);\n\t    }\n\n\t  bool blackjack = (sum==21);\n\t  bool bust = false;\n\t  vector<char> vec(8);\n\t  rep(i,8)cin >> vec[i];\n\n\t  rep(i,8)\n\t    {\n\t      int value = 0;\n\t      if(sum <= 16 || (sum == 17 && counted))\n\t\t{\n\t\t  int nsum = sum;\n\t\t  add(nsum,vec[i]);\n\t\t  if(nsum <= 21)sum = nsum;\n\t\t}\n\t      if(sum > 21)bust = true;\n\t    }\n\t  if(blackjack)cout << \"blackjack\" << endl;\n\t  else if(bust)cout << \"bust\" << endl;\n\t  else cout << sum << endl;\n\t}\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define LOG(...) fprintf(stderr,__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort(ALL(c))\n#define RSORT(c) sort(RALL(c))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\nint calcpoint(vi cards) {\n  int point = 0;\n  bool hasace = false;\n  REP(i, cards.size()){\n    if (cards[i] == 1 && ! hasace){\n      hasace = true;\n    }else{\n      point += cards[i];\n    }\n  }\n\n  if(hasace){\n    if(point <= 10){\n      point += 11;\n    }else{\n      point ++;\n    }\n  }\n  return point;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  REP(i, n){\n    vi cards;\n    queue<int> deck;\n    REP(j, 2){\n      char c;\n      cin >> c;\n      if(isdigit(c)){\n        cards.push_back(c - '0');\n      }else if(c == 'A'){\n        cards.push_back(1);\n      }else{\n        cards.push_back(10);\n      }\n    }\n    REP(j, 8){\n      char c;\n      cin >> c;\n      if(isdigit(c)){\n        deck.push(c - '0');\n      }else if(c == 'A'){\n        deck.push(1);\n      }else{\n        deck.push(10);\n      }\n    }\n\n    int point = calcpoint(cards);\n    if(point == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    bool hasace = find(cards.begin(), cards.end(), 1) != cards.end();\n    while(point <= 16 || (point == 17 && hasace)){\n      cards.push_back(deck.front()); deck.pop();\n      point = calcpoint(cards);\n    }\n\n    if (point > 21){\n      cout << \"bust\" << endl;\n    } else{\n      cout << point << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\nusing namespace std;\n\nint main(){\n    map<char, int> card;\n    for(int i=2; i<=9; i++){\n        card['0'+i] = i;\n    }\n    card['A'] = 1;\n    card['T'] = card['J'] = card['Q'] = card['K'] = 10;\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char pile[8];\n        int point = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        for(int j=1; j<=2; j++){\n            char tmp;\n            cin >> tmp;\n            if(tmp == 'A' && !isace){\n                isace = true;\n                point += 11;\n            }else{\n                point += card[tmp];\n            }\n        }\n        if(point == 21) isblackjack = true;\n        for(int j=0; j<8; j++){\n            cin >> pile[j];\n        }\n        for(int j=0; j<8; j++){\n            if(point <= 16 || (isace && point == 17)){\n                if(pile[j] == 'A'){\n                    if(point <= 10){\n                        point += 11;\n                        isace = true;\n                    }else{\n                        point +=card[pile[j]];\n                    }\n                }else{\n                    point += card[pile[j]];\n                }\n            }else{\n                break;\n            }\n        }\n        if(isblackjack && point == 21){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint q, t[12], w; char c[11];\nint score() {\n\tint ret = t[1] * 11;\n\tfor (int i = 2; i < 11; i++) ret += t[i] * i;\n\tw = t[1];\n\twhile (w && ret >= 22) w--, ret -= 11;\n\treturn ret;\n}\nint main() {\n\tcin >> q;\n\twhile (q--) {\n\t\tfor (int i = 0; i < 10; i++) cin >> c[i];\n\t\tfill(t, t + 11, 0);\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\telse t[10]++;\n\t\t\tint z = score();\n\t\t\tif (z == 21 && i == 1) {\n\t\t\t\tputs(\"blackjack\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (z > 21) {\n\t\t\t\tputs(\"bust\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (z > 17 || (z == 17 && !w)) {\n\t\t\t\tprintf(\"%d\\n\", z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    while(--n >= 0){\n        vector<int> x(10);\n        for(int i=0; i<10; ++i){\n            char c;\n            cin >> c;\n            if(isdigit(c))\n                x[i] = c - '0';\n            else if(c == 'A')\n                x[i] = 11;\n            else\n                x[i] = 10;\n        }\n\n        int sum = 0;\n        int ace = 0;\n        for(int i=0; i<10; ++i){\n            sum += x[i];\n            if(x[i] == 11)\n                ++ ace;\n            if(sum > 21){\n                if(ace){\n                    sum -= 10;\n                    -- ace;\n                }\n            }\n            if(sum == 21 && i == 1){\n                cout << \"blackjack\" << endl;\n                break;\n            }\n            if(sum > 17 || (ace == 0 && sum > 16)){\n                if(sum > 21)\n                    cout << \"bust\" << endl;\n                else\n                    cout << sum << endl;\n                break;\n            }\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cctype>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <bitset>\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\n#define all(v) (v).begin(), (v).end()\n#define rev(s) (s).rbegin(), (s).rend()\n#define MP make_pair\n#define X first\n#define Y second\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef vector<int> vi;\n\nvoid checkace(int &hand, int &ace){\n\tif(ace && hand > 21){\n\t\thand -= 10;\n\t\tace--;\n\t}\n}\n\nint main(){\n\tint dataset;\n\tcin >> dataset;\n\tmap<char, int> card;\n\trep(i, 9){\n\t\tcard['1'+i] = 1+i;\n\t}\n\trep(i, 4){\n\t\tcard[\"TJQK\"[i]] = 10;\n\t}\n\tcard['A'] = 11;\n\twhile(dataset--){\n\t\tint hand = 0, ace = 0;\n\t\trep(i, 2){\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tint n = card[c];\n\t\t\thand += n;\n\t\t\tif(n == 11) ace++;\n\t\t}\n\t\tcheckace(hand, ace);\n\n\t\tqueue<int> pile;\n\t\trep(i, 8){\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tpile.push(card[c]);\n\t\t}\n\t\tbool bj = hand==21;\n\t\twhile(hand <= 16 || (hand == 17 && ace > 0)){\n\t\t\tint n = pile.front();\n\t\t\tpile.pop();\n\t\t\thand += n;\n\t\t\tif(n == 11) ace++;\n\t\t\tcheckace(hand, ace);\n\t\t}\n\n\t\tif(hand > 21) cout << \"bust\" << endl;\n\t\telse{\n\t\t\tif(bj){\n\t\t\t\tcout << \"blackjack\" << endl;\n\t\t\t}else{\n\t\t\t\tcout << hand << endl;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    score['A']=11;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(cs>17){\n            cout<<cs<<endl;\n            continue;\n        }\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1){\n                        if(ccs-11==6){\n                            continue;\n                        }\n                    }\n                    if(ccs>21){\n                        b=true;break;\n                    }\n                    else if(ccs>17){\n                        fs=cs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nmain(){\n  int te;  cin >> te;  while(te--){    int sum=0,data[8];    char temp;\n    int state=0;    cin >> temp;    if ( temp == 'A'){      sum+=11;      state++;    }\n    else if ( isdigit(temp)) sum+= temp-'0';    else sum+=10;    cin >> temp;    if ( temp == 'A'){\n      if ( sum+11 <22){sum+=11;state++;}      else sum+=1;\n    }    else if ( isdigit(temp)) sum+= temp-'0';    else sum+=10;    for(int i=0;i<8;i++){      cin >> temp;      if ( temp == 'A')data[i]=1;      else if ( isdigit(temp))data[i] = temp-'0';      else data[i] = 10;    }\n    if ( sum == 21){\n      puts(\"blackjack\");\n      continue;\n    }\n    for(int i=0;i<8;i++){\n      if ( sum <=16  ||(  sum ==17 && state) ){\n        if ( data[i] != 1)sum+=data[i];\n        if ( data[i] == 1){\n          if ( sum+11 <=21){\n            sum+=11;\n            state++;\n          }\n          else sum+=1;\n        }\n      }else break;\n      if ( sum > 21){\n        if ( state > 0){\n          sum-=10;\n          state--;\n        }else break;\n      }else if ( sum ==21)break;\n    }\n    if ( sum > 21)puts(\"bust\");\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,9){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum==7&&hand[0]==1)continue;\n\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\tif(sum>16)break;\n\t\t\tif(i==8)break;\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nint ret_int( char c ) {\n  if( c == 'T' || c == 'K' || c == 'Q' || c == 'J' ) return 10;\n  else if( c == 'A' ) return 11;\n  else return (c - '0');\n}\n\nsigned main(){\n  int N;\n  cin >> N;\n  while( N-- ) {\n    int sum = 0;\n    int flag = 0;\n    char a, b;\n    cin >> a >> b;\n    if( a == 'A' ) flag++;\n    if( b == 'A' ) flag++;\n    if( a == 'A' && b == 'A' ) sum = 12;\n    else sum = ret_int( a ) + ret_int( b );\n\n    char card[8];\n    for(int i=0; i<8; i++) cin >> card[i];\n    if( sum == 21 ) cout << \"blackjack\" << endl;\n    else {\n      for(int i=0; i<8; i++) {\n\twhile( sum > 21 && flag) {\n\t  sum-=10;\n\t  flag--;\n\t}\n\tif( sum > 17 ) {\n\t  break;\n\t}\n\telse if( sum == 17 ) {\n\t  if( flag ) {\n\t    if( card[i] == 'A' ) {\n\t      if( sum + 11 > 21 ) sum++;\n\t      else sum += 11, flag = true;\n\t    } else {\n\t      sum += ret_int( card[i] );\n\t    }\n\t  }\n\t  else break;\n\t}else {\n\t  if( card[i] == 'A' ) {\n\t    if( sum + 11 > 21 ) sum++;\n\t    else sum += 11, flag = true;\n\t  } else {\n\t    sum += ret_int( card[i] );\n\t  }\n\t}\n      }\n\n      if( sum > 21 ) cout << \"bust\" << endl;\n      else cout << sum << endl;\n    }\n  }\n}\n "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces = 0;\nint tens = 0;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n      if(sum >= 21){\n        stand = true;\n      }\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint Tc;\n\nint change(char ch){\n  if(ch=='A')return 11;\n  if('2'<=ch&&ch<='9')return ch-'0';\n  else return 10;\n}\n\nint main(){\n  cin>>Tc;\n  while(Tc--){\n    char a,b;\n    cin>>a>>b;\n    vector<int> v,t;\n    v.push_back(change(a));\n    v.push_back(change(b));\n    for(int i=0;i<8;i++){\n      cin>>a;\n      t.push_back(change(a));\n    }\n    int ans=v[0]+v[1];\n    if(ans==22)v[0]=1,ans=12;\n\n    for(int i=0;i<8;i++){\n      bool flg=false;\n      for(int j=0;j<(int)v.size();j++)if(v[j]==11)flg=true;\n      if(ans<=16 || (ans==17&&flg) ){\n\tv.push_back(t[i]);\n\tans+=t[i];\n\tfor(int j=0;j<(int)v.size();j++){\n\t  if(ans>21 && v[j]==11){\n\t    ans-=10;\n\t    v[j]=1;\n\t  }\n\t}\n      }else break;\n    }\n    if(ans==21&&v.size()==2){\n      cout<<\"blackjack\"<<endl;\n    }else if(ans>21){\n      cout<<\"bust\"<<endl;\n    }else{\n      cout<<ans<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint main(){\n  int total_testcases;\n  for(int i = 1; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 11;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      cin >> lhs >> rhs;\n      int numA = cards[lhs[0]];\n      int numB = cards[rhs[0]];\n      \n      int sum = numA + numB;\n      bool is_blackjack = false;\n      bool has_ace = false;\n      bool is_ace1 = true;\n\n      if(numA + numB == 21){\n        is_blackjack = true;\n      }\n      if(numA == 11 || numB == 11){\n        has_ace = true;\n        is_ace1 = false;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n        if(is_blackjack) continue;\n\n        int num = cards[pile[0]];\n        if(sum <= 16){\n          if(num == 11){\n            has_ace = true;\n            if(sum + num > 21){\n              sum += 1;\n            }\n            else{\n              is_ace1 = false;\n              sum += num;\n            }\n          }\n          else{\n            sum += num;\n          }\n\n        }\n        else if(sum == 17 && has_ace && !is_ace1){\n          if(num == 11){\n            sum += 1;\n          }\n          else{\n            sum += num;\n          }\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint main(){\n  int total_testcases;\n  for(int i = 1; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 11;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      cin >> lhs >> rhs;\n      int numA = cards[lhs[0]];\n      int numB = cards[rhs[0]];\n      \n      int sum = numA + numB;\n      bool has_ace;\n      bool is_blackjack = false;\n      bool is_ace1 = false;\n      if(numA + numB == 21){\n        is_blackjack = true;\n      }\n      if(numA == 11 || numB == 11){\n        has_ace = true;\n        is_ace1 = false;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n        if(is_blackjack) continue;\n\n        int num = cards[pile[0]];\n        if(sum <= 16){\n          if(num == 11){\n            has_ace = true;\n\n            if(sum + num > 21){\n              is_ace1 = true;\n              sum += 1;\n            }\n            else{\n              sum += num;\n            }\n          }\n          else{\n            sum += num;\n          }\n        }\n        else if(sum == 17 && has_ace && !is_ace1){\n          sum += num;\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tif(v[0]+v[1]==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tgoto L;\n\t\t}\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]==11){\n\t\t\t\t\tif(sum+11<=21)v.push_back(1);\n\t\t\t\t\telse v.push_back(11);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t\tsum=v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum>21&&v1){\n\t\t\t\tr(j,v.size())if(v[j]==11){\n\t\t\t\t\tv[j]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}K:;L:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n\n    for(int i=1; i<=n; i++){\n        char first[2];\n        char pile[8];\n        int point = 0;\n        bool isace = false;\n        cin >> first[0] >> first[1];\n        cin >> pile[0] >> pile[1] >> pile[2] >> pile[3] >> pile[4] >> pile[5] >> pile[6] >> pile[7];\n        for(int j=0; j<2; j++){\n            if(first[j] == 'T' || first[j] == 'J' || first[j] == 'Q' || first[j] == 'K'){\n                point += 10;\n            }else if(first[j] == 'A'){\n                isace = true;\n                if(point + 11 <= 21){\n                    point += 11;\n                }else{\n                    point += 1;\n                }\n            }else{\n                point += first[j] - '0';\n            }\n        }\n        if(point == 21){\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        for(int j=0; j<8; j++){\n            if(point < 16 || (point == 17 && isace)){\n                if(pile[j] == 'T' || pile[j] == 'J' || pile[j] == 'Q' || pile[j] == 'K'){\n                    point += 10;\n                }else if(pile[j] == 'A'){\n                    if(point + 11 <= 21){\n                        point += 11;\n                    }else{\n                        point += 1;\n                    }\n                }else{\n                    point += pile[j] - '0';\n                }\n            }\n            if(point >= 22){\n                cout << \"bust\" << endl;\n                break;\n            }else if(point >= 17){\n                cout << point << endl;\n                break;\n            }\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nbool ace;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 > 21) return 1;\n    ace = true;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n      if(c == 'A') ace = true;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || (sum == 17 && ace)){\n        if(conv(str[j], sum)) sum += conv(str[j], sum);\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces = 0;\nint tens = 0;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21 && 1){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\nusing namespace std;\n\nint main(){\n    map<char, int> card;\n    for(int i=2; i<=9; i++){\n        card['0'+i] = i;\n    }\n    card['A'] = 1;\n    card['T'] = card['J'] = card['Q'] = card['K'] = 10;\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char pile[8];\n        int point = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        for(int j=1; j<=2; j++){\n            char tmp;\n            cin >> tmp;\n            if(tmp == 'A' && point <= 10){\n                isace = true;\n                point += 11;\n            }else{\n                point += card[tmp];\n            }\n        }\n        if(point == 21) isblackjack = true;\n        for(int j=0; j<8; j++){\n            cin >> pile[j];\n        }\n        for(int j=0; j<8; j++){\n            if(point <= 16 || (isace && point == 17)){\n                if(pile[j] == 'A'){\n                    if(point <= 10){\n                        point += 11;\n                        isace = true;\n                    }else{\n                        point +=card[pile[j]];\n                    }\n                }else{\n                    point += card[pile[j]];\n                }\n                if(point > 21 && isace){\n                    point -= 10;\n                    isace = false;\n                }\n            }else{\n                break;\n            }\n        }\n        if(isblackjack){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<algorithm>\n#include<numeric>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(c) (c).begin(),(c).end()\n#define mp make_pair\n#define pb push_back\n#define rp(i,c) rep(i,(c).size())\n#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf=1<<28;\nconst double INF=1e12,EPS=1e-9;\n\nint v[256];\n\nint main()\n{\n\tfor(int i=2;i<=9;i++)v['0'+i]=i;\n\tv['A']=11; v['T']=v['J']=v['Q']=v['K']=10;\n\t\n\tint CS; cin>>CS;\n\trep(cs,CS)\n\t{\n\t\tint ace=0,score=0,cur=2;\n\t\tchar cd[10]; rep(i,10)cin>>cd[i];\n\t\trep(i,2)if(cd[i]=='A')ace++;\n\t\t\n\t\tscore=v[cd[0]]+v[cd[1]];\n\t\tif(score==21)\n\t\t{\n\t\t\tcout<<\"blackjack\"<<endl; continue;\n\t\t}\n\t\twhile(score<=16||score==17&&ace)\n\t\t{\n\t\t\tscore+=v[cd[cur]];\n\t\t\tif(cd[cur]=='A')ace++; cur++;\n\t\t\t\n\t\t\twhile(score>21&&ace)ace--,score-=10;\n\t\t}\n\t\tif(score>21)cout<<\"bust\"<<endl;\n\t\telse cout<<score<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    score['A']=11;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;\n        for(int i = 0; i < 8; i++){\n            char ch;\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else{\n            if(cs>17){\n                cout<<cs<<endl;\n                continue;\n            }\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            for(int i = 0; i < str.size(); i++){\n                char ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                // _Ì»è\n                if(aNum==0){\n                    if(cs>21){\n                        //bust\n                        b=true;\n                        break;\n                    }\n                    if(cs>17){\n                        //fin\n                        fs=cs;\n                        ok=true;\n                        break;\n                    }\n                }\n                else{\n                    // AÍêÜÅ11ÆµÄg¤±ÆªÂ\\\n                    for(int j = 0; j <= 1; j++){\n                        int ccs=(cs+j*11+(aNum-j));\n                        // 1gp·éÆ«\n                        if(j==1){\n                            if(ccs-11==6){\n                                break;\n                            }\n                            else{\n                                if(ccs>21){\n                                    b=true;\n                                    break;\n                                }\n                                else{\n                                    if(ccs>17){\n                                        fs=ccs;\n                                        ok=true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else{\n                            if(ccs>21){\n                                b=true;\n                                break;\n                            }\n                            else{\n                                if(ccs>17){\n                                    ok=true;\n                                    fs=ccs;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if(b||ok){\n                        break;\n                    }\n                }\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]){\n\t\t\t\t\tif(v1)v.push_back(1);\n\t\t\t\t\telse v.push_back(a[i]);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(v1&&sum==21)cout<<\"blackjack\"<<endl;\n\t\t\t\telse if(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t\tsum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum>21&&v1){\n\t\t\t\tr(j,v.size())\n\t\t\t\t  if(v[j]==11){\n\t\t\t\t  \tv[j]=1;\n\t\t\t\t  \tbreak;\n\t\t\t\t  }\n\t\t\t}\n\t\t}K:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cctype>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29)\n\nusing namespace std;\nbool counted;\n\nvoid add(int &sum,char c)\n{\n  if(isdigit(c))sum += c-'0';\n  else \n    {\n      if(c == 'A')\n\t{\n\t  if(sum+11 > 21)sum += 1;\n\t  else           sum += 11,counted = true;\n\t}\n      else \n\t{\n\t  sum += 10;\n\t}\n    }\n}\n\nint main()\n{\n  int T;\n  while(cin >> T)\n    {\n      while(T--)\n\t{\n\t  counted = false;\n\t  int sum = 0;\n\t  rep(i,2)\n\t    {\n\t      char c;\n\t      cin >> c;\n\t      add(sum,c);\n\t    }\n\n\t  bool blackjack = (sum==21);\n\n\t  vector<char> vec(8);\n\t  rep(i,8)cin >> vec[i];\n\n\t  rep(i,8)\n\t    {\n\t      if(sum <= 16)add(sum,vec[i]);\n\t      else if(sum == 17 && counted)add(sum,vec[i]);\n\t      else continue;\n\t    }\n\t  if(blackjack && sum == 21)cout << \"blackjack\" << endl;\n\t  else if(sum > 21)cout << \"bust\" << endl;\n\t  else cout << sum << endl;\n\t}\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint F(char c,int&A)\n{\n\tif(isdigit(c))return c-'0';\n\tif(c=='A'){++A;return 1;}\n\treturn 10;\n}\nint main()\n{\n\tint N,A,r;\n\tchar*p,c,d,s[99];\n\tscanf(\"%d\",&N);\n\tfgets(s,99,stdin);\n\twhile(N--)\n\t{\n\t\tr=A=0;\n\t\tfgets(s,99,stdin);\n\t\tsscanf(s,\" %c %c\",&c,&d);\n\t\tr=F(c,A)+F(d,A);\n\t\tfgets(s,99,stdin);\n\t\tif(r==11&&A){puts(\"blackjack\");continue;}\n\t\tfor(p=s;r<17||(A&&r+10<18);++p)\n\t\t{\n\t\t\twhile(isspace(*p))++p;\n\t\t\tr+=F(*p,A);\n\t\t}\n\t\twhile(r<12&&A)r+=10,--A;\n\t\tif(r>21)puts(\"bust\");\n\t\telse printf(\"%d\\n\",r);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tif(v[0]+v[1]==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tgoto L;\n\t\t}\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}if(v1>=2)exit(1);\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]==11){\n\t\t\t\t\tif(sum+11<=21)v.push_back(11);\n\t\t\t\t\telse v.push_back(1);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t\tsum=v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}if(v1>=2)exit(1);\n\t\t\tif(sum>21&&v1){\n\t\t\t\tr(j,v.size())if(v[j]==11){\n\t\t\t\t\tv[j]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}K:;L:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n\nusing namespace std;\n\nint main() {\n\n  int t; cin >> t;\n\n\n  rep(_, t) {\n    int eleven_count = 0;\n    int dealed = -2;\n    int num = 0;\n\n    auto deal = [&]() {\n      char c; cin >> c; dealed ++;\n      if(isdigit(c)) { num += c - '0'; return; }\n      if(c == 'A') { eleven_count ++; num += 11; return; } // テヲツュツ」テ」ツ?療」ツ?湘・ツ?ィテ」ツ?ヲ1テ」ツ?ォテ」ツ?凖」ツつ凝」ツ?セテ」ツ?ァティツゥツヲテ」ツ?療」ツ?ヲテ」ツ??」ツつ凝」ツ??\n      num += 10; return;\n    };\n\n    deal(); deal();\n    if(num == 21) {\n      cout << \"blackjack\" << endl;\n      REP(i, dealed, 8) { char c; cin >> c; }\n      continue;\n    }\n\n    if(num > 21) {\n      num -= 10; eleven_count --;\n    }\n\n\n    auto test17 = [&]() {\n      if(eleven_count > 0 && num == 17) { return true; }\n      int ele = eleven_count, nu = num;\n      while(ele > 0) {\n        if(nu <= 17) { eleven_count = ele; num = nu;  return true; }\n        nu -= 10;\n        ele --;\n      }\n      return false;\n    };\n\n\n\n\n\n//    cout << \"------------\" << endl;\n\n    rep(_, 8) {\n\n      if(num <= 16) {\n        deal();\n      }\n\n\n\n      else if(test17()) {\n        deal();\n      }\n\n\n\n\n      else {\n\n        if(num > 21) {\n          while(eleven_count) {\n            eleven_count --;\n            num -= 10;\n          }\n\n          if(num > 17) {\n            break;\n          }\n\n        }\n        else {\n          break;\n        }\n\n      }\n\n      /*\n      else if(num > 21) {\n        while(eleven_count && num > 21) {\n          num -= 10;\n          eleven_count --;\n        }\n        if(num > 17) {\n          break;\n        }\n      }\n      */\n    }\n\n    REP(i, dealed, 8) { char c; cin >> c; }\n\n    if(num > 21) {\n      bool ok = 0;\n      while(eleven_count > 0) {\n        if(num - 10 < 21) {\n          ok = 1;\n          cout << num - 10 << endl;\n          break;\n        }\n        num -= 10;\n        eleven_count --;\n      }\n      if(!ok) {\n        cout << \"bust\" << endl;\n      }\n    }\n    else {\n      cout << num << endl;\n    }\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { in[1] -= 10; }\n\n    REP(k, 2, 10) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n        while(value > 21 && ace11) {\n          ace11 --;\n          value -= 10;\n        }\n        if(value > 21) {\n          cout << \"bust\" << endl;\n          goto next;\n        }\n      }\n      if(value > 16 && (!ace11 || value > 17)) {\n        cout << value << endl;\n        goto next;\n      }\n    }\n    next:;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <memory>\n#include <memory.h>\n#include <cmath>\n#include <fstream>\n#include <cmath>\n#include <numeric>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <sstream>\n#include <cstdlib>\n#include <cstdio>\n#include <map>\n#include <iomanip>\n#include <list>\n#include <cctype>\n#include <algorithm>\n#define USE_MATH_DEFINES\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\ntypedef pair<int, PP> PPP;\nconst int INF = 1 << 30;\nconst double EPS = 1E-9;\n\nint to_num(char c){\n\tif(isdigit(c)){\n\t\treturn c - '0';\n\t}else if(c == 'T'){\n\t\treturn 10;\n\t}else if(c == 'J'){\n\t\treturn 10;\n\t}else if(c == 'Q'){\n\t\treturn 10;\n\t}else if(c == 'K'){\n\t\treturn 10;\n\t}else{\n\t\treturn 1;\n\t}\n}\n\n\nint card[8];\n\nint main(){\n\tint n;\n\tchar ch;\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tint a, b;\n\t\tbool ele_used = false;\n\n\t\tcin >> ch;\n\t\ta = to_num(ch);\n\t\tcin >> ch;\n\t\tb = to_num(ch);\n\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> ch;\n\t\t\tcard[j] = to_num(ch);\n\t\t}\n\n\t\tint sum = 0;\n\n\t\tif(a != 1){\n\t\t\tsum += a;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t\tele_used = true;\n\t\t}\n\n\t\tif(b != 1 || ele_used){\n\t\t\tsum += b;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t\tele_used = true;\n\t\t}\n\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}else if(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(int j = 0; j < 8; j++){\n\n\t\t\tif(card[j] != 1){\n\t\t\t\tsum += card[j];\n\t\t\t}else if(sum + 11 > 21){\n\t\t\t\tsum += 1;\n\t\t\t}else{\n\t\t\t\tsum += 11;\n\t\t\t\tele_used = true;\n\t\t\t}\n\n\t\t\tif(sum > 21){\n\t\t\t\tif(ele_used){\n\t\t\t\t\tsum -= 10;\n\t\t\t\t\tele_used = false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nbool f;\nint ac;\n\nint calc(int now, char c) {\n\tif (c=='A') {\n\t\tif (ac==0&&now<=10) now+=11;\n\t\telse now+=1;\n\t} else if (c=='T'||c=='J'||c=='Q'||c=='K') {\n\t\tnow += 10;\n\t} else {\n\t\tnow += (int)c - '0';\n\t}\n\n\tif (now>21&&f) { f=false; now-=10; }\n\treturn now;\n}\n\nint main() {\n\tchar init[2];\n\tint N;\n\tcin >> N;\n\twhile (N--) {\n\t\tcin >> init[0] >> init[1];\n\t\tf = false;\n\t\tac = 0;\n\t\tchar top[8];\n\t\tfor (int i=0; i<8; i++)\n\t\t\tcin >> top[i];\n\n\t\tint scr = 0;\n\t\tscr = calc(scr, init[0]);\n\t\tscr = calc(scr, init[1]);\n\n\t\tfor (int i=0; i<8; i++) {\n\t\t\tif (i==0&&scr==21) {\n\t\t\t\tcout << \"blackjack\\n\";\n\t\t\t\tbreak;\n\t\t\t} else if (scr <= 21&&scr>17||(!f)&&scr==17) {\n\t\t\t\tcout << scr << endl;\n\t\t\t\tbreak;\n\t\t\t} else if (scr > 21) {\n\t\t\t\tcout << \"bust\\n\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tscr = calc(scr, top[i]);\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,9){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum!=7||hand[0]!=0){\n\t\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\t\tif(sum>17)break;\n\t\t\t\tif(i==8)break;\n\t\t\t}\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nbool test_ace17(int value, int ace11) {\n  while(ace11) {\n    if(value <= 17) { return true; }\n    ace11 --;\n    value -= 10;\n  }\n  return false;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { in[0] -= 10; }\n\n    REP(k, 2, 9) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n      }\n      while(value > 21 && ace11) {\n        ace11 --;\n        value -= 10;\n      }\n      if(value > 21) {\n        cout << \"bust\" << endl;\n        break;\n      }\n\n      if(test_ace17(value, ace11)) { continue; }\n      if(value <= 16) { continue; }\n      cout << value << endl;\n      break;\n    }\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main() {\n\tint n, H; cin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar f; bool OK = false; int cnt = 0;\n\t\tfor (int j = 0; j < 10; j++) {\n\t\t\tcin >> f; H = 10; if (OK == true)continue;\n\t\t\tif (f <= '9')H = f - '0';\n\t\t\tif (f == 'A') { H = 11; if (cnt >= 11)H = 1; }\n\t\t\tcnt += H;\n\t\t\tif (j == 1 && cnt == 21) { cout << \"blackjack\" << endl; OK = true; }\n\t\t\telse if (cnt >= 22) { cout << \"bust\" << endl; OK = true; }\n\t\t\telse if (cnt > 16) { cout << cnt << endl; OK = true; }\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\n\nmain(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tint score=0,ace=0;\n\t\tchar a,b;\n\t\tcin>>a>>b;\n\t\tif(isdigit(a))score+=a-'0';\n\t\telse if(a=='A'){\n\t\t\tscore+=11;\n\t\t\tace++;\n\t\t}else{\n\t\t\tscore+=10;\n\t\t}\n\t\tif(isdigit(b))score+=b-'0';\n\t\telse if(b=='A'){\n\t\t\tif(score>10){\n\t\t\t\tscore++;\n\t\t\t}else{\n\t\t\t\tscore+=11;\n\t\t\t\tace++;\n\t\t\t}\n\t\t}else score+=10;\n\t\t\n\t\t\n\t\tchar in[8];\n\t\tfor(int i=0;i<8;i++){\n\t\t\tcin>>in[i];\n\t\t}\n\t\t\n\t\tif(score==21){\n\t\t\tputs(\"blackjack\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tfor(int i=0;i<8;i++){\n\t\t\tif(score<17 || (ace>0 && score==17)){\n\t\t\t\tint hit=in[i];\n\t\t\t\tif(isdigit(hit)){\n\t\t\t\t\tscore+=hit-'0';\n\t\t\t\t}else if(hit=='A'){\n\t\t\t\t\tif(score>10)score++;\n\t\t\t\t\telse{\n\t\t\t\t\t\tscore+=11;\n\t\t\t\t\t\t++ace;\n\t\t\t\t\t}\n\t\t\t\t}else score+=10;\n\t\t\t}else break;\n\t\t\tif(score>21 && ace>0){\n\t\t\t\t--ace;\n\t\t\t\tscore-=10;\n\t\t\t}\n\t\t\tif(score>21)break;\n\t\t}\n\t\tif(score>21)puts(\"bust\");\n\t\telse printf(\"%d\\n\",score);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char first[2];\n        char pile[8];\n        int point = 0;\n        bool isace = false;\n        bool isprinted = false;\n        cin >> first[0] >> first[1];\n        cin >> pile[0] >> pile[1] >> pile[2] >> pile[3] >> pile[4] >> pile[5] >> pile[6] >> pile[7];\n        for(int j=0; j<2; j++){\n            if(first[j] == 'T' || first[j] == 'J' || first[j] == 'Q' || first[j] == 'K'){\n                point += 10;\n            }else if(first[j] == 'A'){\n                isace = true;\n                if(point + 11 <= 21){\n                    point += 11;\n                }else{\n                    point += 1;\n                }\n            }else{\n                point += first[j] - '0';\n            }\n        }\n        if(point == 21){\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        for(int j=0; j<8; j++){\n            if(point < 16 || (point == 17 && isace)){\n                if(pile[j] == 'T' || pile[j] == 'J' || pile[j] == 'Q' || pile[j] == 'K'){\n                    point += 10;\n                }else if(pile[j] == 'A'){\n                    if(point + 11 <= 21){\n                        point += 11;\n                    }else{\n                        point += 1;\n                    }\n                }else{\n                    point += pile[j] - '0';\n                }\n            }\n            if(point > 21){\n                cout << \"bust\" << endl;\n                isprinted = true;\n                break;\n            }\n        }\n        if(!isprinted){\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nbool ace;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    ace = true;\n    if(sum + 11 > 21) return 1;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || (sum == 17 && ace)){\n        sum += conv(str[j], sum);\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <utility>\n\nusing namespace std;\n\ntypedef pair<int, int> pii;\n\nint s2n(const string &str){\n\tif(str[0] == 'A'){\n\t\treturn 1;\n\t}else if('2' <= str[0] && str[0] <= '9'){\n\t\treturn str[0] - '0';\n\t}\n\treturn 10;\n}\n\npii calc(int *hand, int num){\n\tint elevens = 0, score = 0;\n\tfor(int i = 0; i < num; ++i){\n\t\tif(hand[i] == 1){ ++elevens; score += 10; }\n\t\tscore += hand[i];\n\t}\n\twhile(score > 21 && elevens > 0){\n\t\tscore -= 10;\n\t\t--elevens;\n\t}\n\treturn pii(score, elevens);\n}\n\nint main(){\n\tint N;\n\tcin >> N;\n\twhile(N--){\n\t\tint hptr = 0, dptr = 0;\n\t\tint hand[10] = { 0 }, deck[8] = { 0 };\n\t\tfor(int i = 0; i < 2; ++i){\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\thand[hptr++] = s2n(str);\n\t\t}\n\t\tfor(int i = 0; i < 8; ++i){\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\tdeck[i] = s2n(str);\n\t\t}\n\t\tpii result;\n\t\twhile(true){\n\t\t\tresult = calc(hand, hptr);\n\t\t\tif(result.first <= 16 || (result.second && result.first == 17)){\n\t\t\t\thand[hptr++] = deck[dptr++];\n\t\t\t}else{ break; }\n\t\t}\n\t\tif(result.first == 21 && hptr == 2){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else if(result.first > 21){\n\t\t\tcout << \"bust\" << endl;\n\t\t}else{\n\t\t\tcout << result.first << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,9){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\tif(sum>16||hand[0]!=1&&sum==16)break;\n\t\t\tif(i==8)break;\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(aNum==1&&cs>=7)\n            cout<<cs+11<<endl;\n        else if(aNum==0&&cs>=17)\n            cout<<cs<<endl;\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1&&ccs==17)\n                        continue;\n                    else if(j==0&&ccs==17){\n                        fs=ccs;ok=true;break;\n                    }\n                    if(ccs>21){\n                        if(j==0){\n                            b=true;break;\n                        }\n                        continue;\n                    }\n                    else if(ccs>17){\n                        fs=ccs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstdlib>\n#define INF 10e7\nusing namespace std;\n\nint cost[100][100];\n\nint main(void){\n\tint n;\n\tcin >> n;\n\tfor(int i=0;i<n;i++){\n\t\tint cards=0,ace=0;\n\t\tchar list[2];\n\t\tchar table[8];\n\t\tfor(int j=0;j<2;j++)\n\t\t\tcin >> list[j];\n\n\t\tfor(int j=0;j<8;j++)\n\t\t\tcin >> table[j];\n\n\t\tfor(int j=0;j<2;j++){\n\t\t\tif(list[j]=='A')\n\t\t\t\tcards+=11,ace++;\n\t\t\telse if(isdigit(list[j]))\n\t\t\t\tcards+=(list[j]-'0');\n\t\t\telse\n\t\t\t\tcards+=10;\n\t\t}\n\t\tif(cards >21&&ace)\n\t\t\tcards-=10,ace--;\n\n\t\tif(cards==21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}else if(cards >17){\n\t\t\tcout << cards << endl;\n\t\t\tcontinue;\n\t\t}else if(cards==17&&!ace){\n\t\t\tcout << cards << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<8;j++){\n\t\t\tif(table[j]=='A')\n\t\t\t\tcards+=11,ace++;\n\t\t\telse if(isdigit(table[j]))\n\t\t\t\tcards+=(table[j]-'0');\n\t\t\telse\n\t\t\t\tcards+=10;\n\t\t\tif(cards >21&&ace)\n\t\t\t\tcards-=10,ace--;\n\t\t\t\n\t\t\tif(cards > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\tbreak;\n\t\t\t}else if(cards>17){\n\t\t\t\tcout << cards << endl;\n\t\t\t\tbreak;\n\t\t\t}else if(cards==17&&!ace){\n\t\t\t\tcout << cards << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { if(in[0] == 11) in[0] -= 10; else in[1] -= 10; }\n\n    REP(k, 2, 9) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n      }\n      while(value > 21 && ace11) {\n        ace11 --;\n        value -= 10;\n      }\n      if(value > 21) {\n        cout << \"bust\" << endl;\n        break;\n      }\n      if(value > 16 && (!ace11 || value > 17)) {\n        cout << value << endl;\n        break;\n      }\n    }\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <sstream>\nusing namespace std;\n\nconst int BLACKJACK = 0;\nconst int BUST = -1;\n\nmap<string,int> val = {\n    {\"A\", 1},\n    {\"2\", 2},\n    {\"3\", 3},\n    {\"4\", 4},\n    {\"5\", 5},\n    {\"6\", 6},\n    {\"7\", 7},\n    {\"8\", 8},\n    {\"9\", 9},\n    {\"T\", 10},\n    {\"J\", 10},\n    {\"Q\", 10},\n    {\"K\", 10}\n};\n\npair<int,bool> score(const vector<string> &v) {\n    int ret = 0;\n    bool hasAce = false, useAce = false;\n    for (int i=0; i<(int)v.size(); ++i) {\n        ret += val[v[i]];\n        if (v[i] == \"A\") hasAce = true;\n    }\n    if (hasAce && ret+10 <= 21) {\n        ret += 10;\n        useAce = true;\n    }\n    if ((int)v.size() == 2 && ret == 21) {\n        ret = BLACKJACK;\n    } else if (21 < ret) {\n        ret = BUST;\n    }\n    return make_pair(ret, useAce);\n}\n\nbool need(const vector<string> &v) {\n    pair<int,bool> t = score(v);\n    if (t.first <= 0) {\n        return false;\n    } else if (t.first <= 16 || (t.first == 17 && t.second)) {\n        return true;\n    }\n    return false;\n}\n\nint main() {\n    int N;\n    cin >> N;\n    for (int i=0; i<N; ++i) {\n        vector<string> v(2);\n        for (int j=0; j<2; ++j) cin >> v[j];\n        vector<string> pile(8);\n        for (int j=0; j<8; ++j) cin >> pile[j];\n\n        int k = 0;\n        while (need(v)) {\n            v.push_back(pile[k++]);\n        }\n\n        pair<int,bool> ret = score(v);\n        if (ret.first == BLACKJACK) {\n            cout << \"blackjack\" << endl;\n        } else if (ret.first == BUST) {\n            cout << \"bust\" << endl;\n        } else {\n            cout << ret.first << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nchar in[20];\nint main(){\n\tint a;scanf(\"%d\",&a);\n\twhile(a--){\n\t\tfor(int i=0;i<10;i++)scanf(\"%s\",in+i);\n\t\tint val=0;\n\t\tint ace=0;\n\t\tif(in[0]=='A'){val+=11;ace++;}\n\t\telse if(in[0]=='T'||in[0]=='J'||in[0]=='Q'||in[0]=='K'){val+=10;}\n\t\telse val+=in[0]-'0';\n\t\tif(in[1]=='A'){val+=11;ace++;}\n\t\telse if(in[1]=='T'||in[1]=='J'||in[1]=='Q'||in[1]=='K'){val+=10;}\n\t\telse val+=in[1]-'0';\n\t\tif(val>21){val-=10;ace--;}\n\t\tif(val==21){\n\t\t\tprintf(\"blackjack\\n\");continue;\n\t\t}\n\t\tint at=2;\n\t\twhile(val<17&&at<10){\n\t\t\tif(in[at]=='A'){val+=11;ace++;}\n\t\t\telse if(in[at]=='T'||in[at]=='J'||in[at]=='Q'||in[at]=='K'){val+=10;}\n\t\t\telse val+=in[at]-'0';\n\t\t\tif(val>21&&ace){val-=10;ace--;}\n\t\t\tat++;\n\t\t}\n\t\tif(val>21)printf(\"bust\\n\");\n\t\telse printf(\"%d\\n\",val);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\nusing namespace std;\n\nint n,s;\nchar c[10];\nint a;\nbool black;\n\nint score(char x){\n  if('2'<= x && x <= '9')return x-'0';\n  if(x == 'A')return 11;\n  return 10;\n}\n\nvoid cal(int x){\n  s += score(c[x]);\n  if(c[x] == 'A')a++;\n  while(s>21 && a){\n    s -= 10;\n    a--;\n  }\n}\n\nint main(){\n  scanf(\"%d\",&n);\n\n  while(n--){\n    black = false;\n    for(int i=0;i<10;i++)scanf(\" %c \",&c[i]);\n    if(score(c[0])+score(c[1])==21)black = true;\n    if(!black){\n      s = a = 0;\n      for(int i=0;i<10;i++){\n\tcal(i);\n\tif(s<=16 || (s==17 && a) )continue;\n\tbreak;\n      }\n    }\n    if(black)printf(\"blackjack\\n\");\n    else if(s>21)printf(\"bust\\n\");\n    else printf(\"%d\\n\",s);\n  }\n}\n    \n  "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nchar A[10]; int n, p, a;\nvoid add(int q) {\n\tif (q == 11 && p <= 10) { a = 1; }\n\tif (q == 11 && p >= 11) { p += 1; }\n\telse { p += q; }\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tp = 0; a = 0; for (int j = 0; j < 10; j++)cin >> A[j];\n\t\tfor (int j = 0; j < 10; j++) {\n\t\t\tif (p <= 16 || (p == 17 && a == 1)) {\n\t\t\t\tif (A[j] >= '1' && A[j] <= '9')add(A[j] - '0');\n\t\t\t\telse if (A[j] == 'A')add(11);\n\t\t\t\telse { add(10); }\n\t\t\t\tif (p >= 22 && a == 1) { p -= 10; a = 0; }\n\t\t\t\tif (p >= 22) { cout << \"bust\" << endl; }\n\t\t\t\telse if (p == 21 && j == 1)cout << \"blackjack\" << endl;\n\t\t\t\telse if (p >= 18 || (p == 17 && a == 0))cout << p << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint a[10],n,e,s;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nvoid calc(int x){\n\tif(a[x]==11)e++;\n\ts+=a[x];\n\tif(s>21&&e)e--,s-=10;\n}\nmain(){\n\tcin>>n;\n\twhile(n--){\n\t\ts=e=0;\n\t\tr(i,10)a[i]=get();\n\t\tif(a[0]+a[1]==21)cout<<\"blackjack\"<<endl;\n\t\telse r(i,10){\n\t\t\tcalc(i);\n\t\t\tif(s>=17&&!e||s>=18&&e){\n\t\t\t\tif(s<=21)cout<<s<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tif(v[0]+v[1]==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tgoto L;\n\t\t}\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}if(v1>=2)exit(1);\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]==11){\n\t\t\t\t\tif(sum+11<=21)v.push_back(11);\n\t\t\t\t\telse v.push_back(1);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t\tsum=v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum>21&&v1){\n\t\t\t\tr(j,v.size())if(v[j]==11){\n\t\t\t\t\tv[j]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}K:;L:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21 && 1){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint toI(char ch){\n  if(isdigit(ch)) return ch - '0';\n  if(ch == 'T') return 10;\n  if(ch == 'J') return 10;\n  if(ch == 'Q') return 10;\n  if(ch == 'K') return 10;\n}\n\nint flg;\nint calc(int sum,char ch){\n  if(ch == 'A'&&sum+11<=21){flg=1; return sum+11;}\n  if(ch == 'A') return sum+1;\n  return sum + toI(ch);\n}\n\n\nint main(){\n  int q;\n  cin>>q;\n  while(q--){\n    int sum = 0;\n    char ch[2];\n    cin>>ch[0]>>ch[1];\n    sum = calc(sum,ch[0]);\n    sum = calc(sum,ch[1]);\n    \n    char card[8];\n    for(int i=0;i<8;i++)cin>>card[i];\n    if(sum == 21){cout<<\"blackjack\"<<endl;continue; }\n    \n    for(int i=0;i<8;i++){\n      if(sum <= 16) sum = calc(sum,card[i]);\n      else if(sum==17 && flg) sum = calc(sum,card[i]);\n    }\n    if(sum>21) cout<<\"bust\"<<endl;\n    else cout<< sum<<endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(aNum==1&&cs>=7)\n            cout<<cs+11<<endl;\n        else if(aNum==0&&cs>=17)\n            cout<<cs<<endl;\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1&&ccs==17)\n                        continue;\n                    else if(j==0&&ccs==17){\n                        fs=cs;ok=true;break;\n                    }\n                    if(ccs>21){\n                        if(j==0){\n                            b=true;break;\n                        }\n                        continue;\n                    }\n                    else if(ccs>17){\n                        fs=cs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i=0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\t\tint sum = 0;\n\t\tbool one = false;\n\t\tbool bust = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tsum += ans(cards[i],one);\n\t\t}\n\t\tif (sum ==21 ){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if(sum>=17){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tREP(i, 8){\n\t\t\tif (bust)break;\n\t\t\tsum += ans(cards[i + 2],one);\n\t\t\tif (sum >= 22){\n\t\t\t\tfor (int j = 0; j < i + 3; j++){\n\t\t\t\t\tif (cards[j] == 'A'){\n\t\t\t\t\t\tone = true;\n\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t\tfor (int k = 0; k < i + 3; k++)\n\t\t\t\t\t\t\tsum += ans(cards[k], one);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (j == i + 2){\n\t\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\t\tbust = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if(sum>=17){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i = 0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\n\t\tint sum = 0;\n\t\tbool herashita = false;\n\t\tbool one = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tint a = ans(cards[i], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum +=a;\n\t\t}\n\t\tif (sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if (sum == 17&&!one ||sum>=18){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tREP(i, 8){\n\t\t\tint a = ans(cards[i+2], one);\n\t\t\tif (a == 11)one = true;\n\t\t\tsum += a;\n\t\t\tif (sum >= 22){\n\t\t\t\tif (!one){\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsum -= 10;\n\t\t\t\tone = false;\n\t\t\t}\n\t\t\tif (17 <= sum){\n\t\t\t\tif (sum == 17 && one)\n\t\t\t\t\tcontinue;\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nstring temp = \"*A23456789TJQK\";\n\nvoid add( int& ret, char c, bool& ok){\n\n  if(c == 'A'){\n    if(ret >= 11) ret++;\n    else ok++, ret += 11;\n  }else{\n    ret += min( 10, (int)temp.find(c));\n  }\n}\n\n\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    int ret = 0;\n    bool ok = false; //1がでたかでてないか\n    char buff;\n\n    queue< char > que;\n    for(int i = 0 ; i < 10 ; i++ ){\n      cin >> buff;\n      que.push( buff );\n    }\n\n    for(int i = 0; !que.empty(); i++){\n      char c = que.front(); que.pop(); //ふえぇぇ\n      if(i == 2 && ret == 21){\n        cout << \"blackjack\" << endl;\n        break;\n      }else if(ret <= 16 || (ok && ret == 17)){\n        add(ret,c,ok);\n      }else if(ret <= 21){\n        cout << ret << endl;\n        break;\n      }else{\n        cout << \"bust\" << endl;\n        break;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint N(char c) {\n  if(c=='A') return 11;\n  if(isalpha(c)) return 10;\n  return c-'0';\n}\n\nint main() {\n  int T;\n  cin >> T;\n  while(T--) {\n    vector<int> v;\n    int sum=0;\n    char x;\n    cin >> x;\n    v.push_back(N(x));\n    sum+=N(x);\n    int a[9];\n    for(int i=0;i<9;i++) {\n      char x;\n      cin >> x;\n      a[i]=N(x);\n    }\n    if(sum+a[0]==21) {\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n    for(int i=0;i<9;i++) {\n      int x=a[i];\n      v.push_back(x);\n      sum+=x;\n      while(sum>21) {\n        bool f=0;\n        for(int j=0;j<v.size();j++) {\n          if(v[j]==11) {\n            v[j]=1;\n            sum-=10;\n            f=1;\n            break;\n          }\n        }\n        if(!f) break;\n      }\n      if(sum>17) break;\n      bool f=0;\n      for(int j=0;j<v.size();j++) {\n        if(v[j]==11) f=1;\n      }\n      if(sum==17&&!f)break; \n    }\n    if(sum>21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nchar A[10]; int n, p, a;\nvoid add(int q) {\n\tif (q == 11 && p >= 11) { p += 1; a = 1; }\n\telse { p += q; }\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tp = 0; a = 0; for (int j = 0; j < 10; j++)cin >> A[j];\n\t\tfor (int j = 0; j < 10; j++) {\n\t\t\tif (p <= 16 || (p == 17 && a == 1)) {\n\t\t\t\tif (A[j] >= '1' && A[j] <= '9')add(A[j] - '0');\n\t\t\t\telse if (A[j] == 'A')add(11);\n\t\t\t\telse { add(10); }\n\t\t\t\tif (p >= 22 && a == 1) { p -= 10; a = 0; }\n\t\t\t\tif (p >= 22) { cout << \"bust\" << endl; }\n\t\t\t\telse if (p == 21 && j == 1)cout << \"blackjack\" << endl;\n\t\t\t\telse if (p >= 18 || (p == 17 && a == 0))cout << p << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n\n    for(int i=1; i<=n; i++){\n        char first[2];\n        char pile[8];\n        int point = 0;\n        cin >> first[0] >> first[1];\n        cin >> pile[0] >> pile[1] >> pile[2] >> pile[3] >> pile[4] >> pile[5] >> pile[6] >> pile[7];\n        for(int j=0; j<2; j++){\n            if(first[j] == 'T' || first[j] == 'J' || first[j] == 'Q' || first[j] == 'K'){\n                point += 10;\n            }else if(first[j] == 'A'){\n                if(point + 11 <= 21){\n                    point += 11;\n                }else{\n                    point += 1;\n                }\n            }else{\n                point += first[j] - '0';\n            }\n        }\n        if(point == 21){\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        for(int j=0; j<8; j++){\n            if(pile[j] == 'T' || pile[j] == 'J' || pile[j] == 'Q' || pile[j] == 'K'){\n                point += 10;\n            }else if(pile[j] == 'A'){\n                if(point + 11 <= 21){\n                    point += 11;\n                }else{\n                    point += 1;\n                }\n            }else{\n                point += pile[j] - '0';\n            }\n            if(point >= 22){\n                cout << \"bust\" << endl;\n                break;\n            }else if(point >= 17){\n                cout << point << endl;\n                break;\n            }\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint compute_score(bool& has_ace11,const vector<string>& hands){\n  int sum = 0;\n\n  bool has_ace = false;\n  for(int i = 0; i < hands.size();i++){\n    int num = cards[hands[i][0]];\n    if(num == 1) has_ace = true;\n    sum += num;\n  }\n  if(has_ace){\n    if(sum + 10 <= 21){\n      has_ace11 = true;\n      sum += 10;\n    }\n  }\n  return sum;\n}\n\nint main(){\n  int total_testcases;\n  for(int i = 2; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 1;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      vector<string> hands;\n      cin >> lhs >> rhs;\n\n      bool is_ace11 = false;\n      hands.push_back(lhs);\n      hands.push_back(rhs);\n\n      int sum = 0;\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n\n        string pile;\n        cin >> pile;\n        bool is_ace11 = false;\n        sum = compute_score(is_ace11,hands);\n\n        if(sum <= 16){\n          hands.push_back(pile);\n        }\n        else if(sum == 17 && is_ace11){\n          hands.push_back(pile);\n        }\n      }\n      sum = compute_score(is_ace11,hands);\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(sum == 21 && hands.size() == 2){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cctype>\nusing namespace std;\n\nint value(char a)\n{\n\tif(a=='T') return 10;\n\tif(a=='J') return 10;\n\tif(a=='Q') return 10;\n\tif(a=='K') return 10;\n\tif(a=='A') return 11;\n\n\treturn a-'0';\n}\n\nint main()\n{\n\tint N;\n\tcin >> N;\n\twhile(N--)\n\t{\n\t\tbool one=false;\n\t\tint ans=0;\n\t\tfor(int i=0; i<2; i++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tans+=value(c);\n\t\t\tif(c=='A') one=true;\n\t\t}\n\n\t\tstring s;\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\ts+=c;\n\t\t}\n\n\t\tif(ans==21)\n\t\t{\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tif( ans<=16 || (ans==17 && one) )\n\t\t\t{\n\t\t\t\tif(value(s[i])) ans+=value(s[i]);\n\t\t\t\tif(s[i]=='A')\n\t\t\t\t{\n\t\t\t\t\tif(ans>21) ans-=10;\n\t\t\t\t\telse one=1;\n\t\t\t\t}\n\n\t\t\t\tif(ans>21&&one)\n\t\t\t\t{\n\t\t\t\t\tans-=10;\n\t\t\t\t\tone=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif(ans>21) cout << \"bust\" << endl;\n\t\telse cout << ans << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint conv(char s, int *a)\n{\n\tif(s == 'K' || s == 'Q' || s == 'J' || s == 'T'){\n\t\treturn 10;\n\t} else if(s == 'A'){\n\t\ta++;\n\t\treturn 11;\n\t}\n\t\n\treturn (int)(s-'0');\n}\n\nint main()\n{\n\tint n, u, a, p;\n\tchar s, t, vec[8];\n\t\n\twhile(cin>>n && n){\n\t\twhile(n--){\n\t\t\tu = a = p = 0;\n\t\t\tcin >> s >> t;\n\t\t\tfor(int i = 0; i < 8; i++){\n\t\t\t\tcin >> vec[i];\n\t\t\t}\n\t\t\tu += conv(s, &a);\n\t\t\tu += conv(t, &a);\n\t\t\t\n\t\t\tif(u == 21){\n\t\t\t\tcout << \"blackjack\" << endl;\n\t\t\t\tcontinue;\n\t\t\t} else if(u > 21 || (u == 17 && a > 0)){\n\t\t\t\ta--;\n\t\t\t\tu -= 10;\n\t\t\t}\n\t\t\t\n\t\t\twhile(u < 17 && p < 8){\n\t\t\t\tu += conv(vec[p++], &a);\n\t\t\t\tif((u > 21 || u == 17)&& a > 0){\n\t\t\t\t\ta--;\n\t\t\t\t\tu -= 10;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(u > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t} else {\n\t\t\t\tcout << u << endl;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\nusing namespace std;\n\nint cards[8];\nint getnum(char c){\n\tif(isdigit(c)){\n\t\treturn (int)c - '0';\n\t}else if(c == 'A'){\n\t\treturn 1;\n\t}else{\n\t\treturn 10;\n\t}\n}\n\nint main(){\n\tint N;\n\tcin >> N;\n\tfor(int i = 0; i < N; i++){\n\t\tchar c;\n\t\tbool eleven_used = false;\n\t\tint sum = 0;\n\t\tfor(int j = 0; j < 2; j++){\n\t\t\tcin >> c;\n\t\t\tif(getnum(c) == 1){\n\t\t\t\tif(sum <= 10){\n\t\t\t\t\tsum += 11;\n\t\t\t\t\televen_used = true;\n\t\t\t\t}else{\n\t\t\t\t\tsum += 1;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tsum += getnum(c);\n\t\t\t}\n\t\t}\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> c;\n\t\t\tcards[j] = getnum(c);\n\t\t}\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else{\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tif(sum <= 16){\n\t\t\t\t\tif(sum <= 10){\n\t\t\t\t\t\tif(cards[j] == 1){\n\t\t\t\t\t\t\tsum += 11;\n\t\t\t\t\t\t\televen_used = true;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t}\n\t\t\t\t}else if(sum == 17 && eleven_used){\n\t\t\t\t\tsum += cards[j];\n\t\t\t\t}else{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t}else{\n\t\t\t\tcout << sum << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cctype>\n#include <limits.h>\n#include <math.h>\n#include <complex>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n\n#define VARIABLE(x) cerr << #x << \"=\" << x << endl\n#define BINARY(x) static_cast<bitset<16> >(x);\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n\nconst int INF = 1000000000;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={0, 1, 0, -1}, dy[4]={-1, 0, 1, 0};\nusing namespace std;\n//typedef pair<int, int> P;\nstruct P {\n\tint x, y;\n\tP(int x, int y):x(x), y(y){}\n\tP(){}\n};\n\n/** Problem2024 : Blackjack **/\nint main()\n{\n\tint N;\n\tcin>>N;\n\trep(z, N) {\n\t\tchar c1, c2;\n\t\tvector<char> card(8);\n\t\tint A = 0;\n\t\tint idx=0;\n\t\t\n\t\tcin>>c1>>c2;\n\t\trep(i, 8) cin>>card[i];\n\t\t\n\t\tint sum=0;\n\t\t\n\t\tif (isdigit(c1)) sum+=c1-'0';\n\t\telse if (c1=='A') { A++; sum+=11; }\n\t\telse sum+=10;\n\t\t\n\t\tif (isdigit(c2)) sum+=c2-'0';\n\t\telse if (c2=='A') { A++; sum+=11; }\n\t\telse sum+=10;\n\t\t\n\t\tif (sum==21) {\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\twhile (1) {\n\t\t\tif (sum>16 && !A) break;\n\t\t\tif (sum>16 && A) {\n\t\t\t\tsum-=10;\n\t\t\t\tA--;\n\t\t\t}\n\t\t\t\n\t\t\tif (sum<=16) {\n\t\t\t\tint nc = card[idx++];\n\t\t\t\tif (isdigit(nc)) sum+=nc-'0';\n\t\t\t\telse if (nc=='A') { A++; sum+=11;}\n\t\t\t\telse sum+=10;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (sum>21) cout << \"bust\" << endl;\n\t\telse cout << sum << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,9){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum!=7||hand[0]!=1){\n\t\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\t\tif(sum>=17)break;\n\t\t\t}\n\t\t\tif(i==8)break;\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nint ret_int( char c ) {\n  if( c == 'T' || c == 'K' || c == 'Q' || c == 'J' ) return 10;\n  else if( c == 'A' ) return 11;\n  else return (c - '0');\n}\n\nsigned main(){\n  int N;\n  cin >> N;\n  while( N-- ) {\n    int sum = 0;\n    bool flag = false;\n    char a, b;\n    cin >> a >> b;\n    if( a == 'A' || b == 'A' ) flag = true;\n    sum = ret_int( a ) + ret_int( b );\n\n    char card[8];\n    for(int i=0; i<8; i++) cin >> card[i];\n    if( sum == 21 ) cout << \"blackjack\" << endl;\n    else {\n      for(int i=0; i<8; i++) {\n\tif( sum > 17 ) break;\n\telse if( sum == 17 ) {\n\t  if( flag ) {\n\t    if( card[i] == 'A' ) {\n\t      if( sum + 11 > 21 ) sum++;\n\t      else sum += 11, flag = true;\n\t    } else {\n\t      sum += ret_int( card[i] );\n\t    }\n\t  }\n\t  else break;\n\t}\n\telse {\n\t  if( card[i] == 'A' ) {\n\t    if( sum + 11 > 21 ) sum++;\n\t    else sum += 11, flag = true;\n\t  } else {\n\t    sum += ret_int( card[i] );\n\t  }\n\t}\n      }\n\n      if( sum > 21 ) cout << \"bust\" << endl;\n      else cout << sum << endl;\n    }\n  }\n}\n "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cctype>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29)\n\nusing namespace std;\nbool counted;\n\nvoid add(int &sum,char c)\n{\n  if(isdigit(c))sum += c-'0';\n  else \n    {\n      if(c == 'A')\n\t{\n\t  if(sum+11 > 21)sum += 1;\n\t  else           sum += 11,counted = true;\n\t}\n      else \n\t{\n\t  sum += 10;\n\t}\n    }\n}\n\nint main()\n{\n  int T;\n  while(cin >> T)\n    {\n      while(T--)\n\t{\n\t  counted = false;\n\t  int sum = 0;\n\t  rep(i,2)\n\t    {\n\t      char c;\n\t      cin >> c;\n\t      add(sum,c);\n\t    }\n\n\t  bool blackjack = (sum==21);\n\t  bool bust = false;\n\t  vector<char> vec(8);\n\t  rep(i,8)cin >> vec[i];\n\n\t  rep(i,8)\n\t    {\n\t      int value = 0;\n\t      if(sum <= 16 || (sum == 17 && counted))\n\t\t{\n\t\t  int nsum = sum;\n\t\t  add(nsum,vec[i]);\n\t\t  if(nsum > 21 && counted)\n\t\t    {\n\t\t      sum = nsum - 10;\n\t\t      counted = false;\n\t\t    }\n\t\t  else sum = nsum;\n\t\t}\n\t      if(sum > 21)bust = true;\n\t    }\n\t  if(blackjack)cout << \"blackjack\" << endl;\n\t  else if(bust)cout << \"bust\" << endl;\n\t  else cout << sum << endl;\n\t}\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\nusing namespace std;\n\nint cards[8];\nint getnum(char c){\n\tif(isdigit(c)){\n\t\treturn (int)c - '0';\n\t}else if(c == 'A'){\n\t\treturn 1;\n\t}else{\n\t\treturn 10;\n\t}\n}\n\nint main(){\n\tint N;\n\tcin >> N;\n\tfor(int i = 0; i < N; i++){\n\t\tchar c;\n\t\tbool eleven_used = false;\n\t\tint sum = 0;\n\t\tfor(int j = 0; j < 2; j++){\n\t\t\tcin >> c;\n\t\t\tif(getnum(c) == 1){\n\t\t\t\tsum += 11;\n\t\t\t\televen_used = true;\n\t\t\t}else{\n\t\t\t\tsum += getnum(c);\n\t\t\t}\n\t\t}\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> c;\n\t\t\tcards[j] = getnum(c);\n\t\t}\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else{\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tif(sum <= 16){\n\t\t\t\t\tif(sum <= 10){\n\t\t\t\t\t\tif(cards[j] == 1){\n\t\t\t\t\t\t\tsum += 11;\n\t\t\t\t\t\t\televen_used = true;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t}\n\t\t\t\t}else if(eleven_used){\n\t\t\t\t\tsum += cards[j];\n\t\t\t\t}else{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t}else{\n\t\t\t\tcout << sum << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21 && 1){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n      /*if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n        }*/\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint conv(char s, int *a)\n{\n\tif(s == 'K' || s == 'Q' || s == 'J' || s == 'T'){\n\t\treturn 10;\n\t} else if(s == 'A'){\n\t\ta++;\n\t\treturn 11;\n\t}\n\t\n\treturn (int)(s-'0');\n}\n\nint main()\n{\n\tint n, u, a, p;\n\tchar s, t, vec[8];\n\t\n\twhile(cin>>n && n){\n\t\twhile(n--){\n\t\t\tu = a = p = 0;\n\t\t\tcin >> s >> t;\n\t\t\tfor(int i = 0; i < 8; i++){\n\t\t\t\tcin >> vec[i];\n\t\t\t}\n\t\t\tu += conv(s, &a);\n\t\t\tu += conv(t, &a);\n\t\t\t\n\t\t\tif(u == 21){\n\t\t\t\tcout << \"blackjack\" << endl;\n\t\t\t\tcontinue;\n\t\t\t} else if(u > 21 || (u == 17 && a > 0)){\n\t\t\t\ta--;\n\t\t\t\tu -= 10;\n\t\t\t}\n\t\t\t\n\t\t\twhile(u < 17){\n\t\t\t\tu += conv(vec[p++], &a);\n\t\t\t\tif((u > 21 || u == 17)&& a > 0){\n\t\t\t\t\ta--;\n\t\t\t\t\tu -= 10;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(u > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t} else {\n\t\t\t\tcout << u << endl;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <map>\nusing namespace std;\n\nint getCard() {\n  char c;\n  cin >> c;\n  if(c == 'A') {\n    return 0;\n  } else if(isdigit(c)) {\n    return c - '0';\n  } else {\n    return 10;\n  }\n}\n\npair<int,int> getScore(const vector<int> &d) {\n  int score = 0;\n  int numAce = 0;\n  int use11 = 0;\n  for(int i = 0; i < d.size(); ++i) {\n    if(d[i] == 0) {\n      ++numAce;\n      score += 1;\n    } else {\n      score += d[i];\n    }\n  }\n  while(numAce && score+10 <= 21) {\n    score += 10;\n    ++use11;\n    --numAce;\n  }\n  return make_pair(score,use11);\n}\n\nint main() {\n  int Tc;\n  cin >> Tc;\n  for(int tc = 0; tc < Tc; ++tc) {\n    vector<int> d;\n    vector<int> p;\n    for(int i = 0; i < 2; ++i) {\n      d.push_back(getCard());\n    }\n    for(int i = 0; i < 8; ++i) {\n      p.push_back(getCard());\n    }\n\n    if(d[0] == 0 && d[1] == 10 || d[0] == 10 && d[1] == 0) {\n      cout << \"blackjack\" << endl;\n    } else {\n      pair<int,int> s;\n      for(int i = 0; i < 8; ++i) {\n        s = getScore(d);\n        if(s.first <= 16 || s.first == 17 && s.second) {\n          d.push_back(p[i]);\n        }\n      }\n      if(s.first <= 21) {\n        cout << s.first << endl;\n      } else {\n        cout << \"bust\" << endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint ctoi(char);\nint main(){\n  int n;\n  cin >> n;\n  for(int I=0;I<n;I++){\n    vector<char> ha(2);\n    int c=0;\n    int ac=0;\n    vector<char> ya(8);\n    for(int i=0;i<2;i++){\n      cin >> ha[i];\n      if(ha[i]=='A'){\n\tac++;\n      }\n      c+=ctoi(ha[i]);\n    }\n    for(int i=0;i<8;i++){\n      cin >> ya[i];\n    }\n    int i=0;\n    while(1){\n      if(i==0&&c==11&&ac){\n\tcout << \"blackjack\" << endl;\n\tbreak;\n      }\n      int c2=-1;\n      if(ac&&c+10<=21)c2=c+10;\n      if((c<=16&&c2<=16)||(c==7&&ac)){\n\tc+=ctoi(ya[i]);\n\tif(ya[i]=='A'){\n\t  ac++;\n\t}\n\ti++;\n      }\n      else{\n\tif(c>21){\n\t  cout << \"bust\" << endl;\n\t  break;\n\t}\n\telse {\n\t  cout << max(c,c2) << endl;\n\t  break;\n\t}\n      }\n    }\n  }\n  return 0;\n}\n\nint ctoi(char x){\n  if(x>='0'&&x<='9'){\n    return x-'0';\n  }\n  if(x=='A')return 1;\n  return 10;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nchar A[10]; int n, p, a;\nvoid add(int q) {\n\tif (q == 11)a = 1;\n\tif (q == 11 && p >= 11) { p += 1; }\n\telse { p += q; }\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tp = 0; a = 0; for (int j = 0; j < 10; j++)cin >> A[j];\n\t\tfor (int j = 0; j < 10; j++) {\n\t\t\tif (p <= 16 || (p == 17 && a == 1)) {\n\t\t\t\tif (A[j] >= '1' && A[j] <= '9')add(A[j] - '0');\n\t\t\t\telse if (A[j] == 'A')add(11);\n\t\t\t\telse { add(10); }\n\t\t\t\tif (p >= 22 && a == 1) { p -= 10; a = 0; }\n\t\t\t\tif (p >= 22) { cout << \"bust\" << endl; }\n\t\t\t\telse if (p == 21 && j == 1)cout << \"blackjack\" << endl;\n\t\t\t\telse if (p >= 18 || (p == 17 && a == 0))cout << p << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\nusing namespace std;\n\nint cards[8];\nint getnum(char c){\n\tif(isdigit(c)){\n\t\treturn (int)c - '0';\n\t}else if(c == 'A'){\n\t\treturn 1;\n\t}else{\n\t\treturn 10;\n\t}\n}\n\nint main(){\n\tint N;\n\tcin >> N;\n\tfor(int i = 0; i < N; i++){\n\t\tchar c;\n\t\tbool eleven_used = false;\n\t\tint sum = 0;\n\t\tfor(int j = 0; j < 2; j++){\n\t\t\tcin >> c;\n\t\t\tif(getnum(c) == 1){\n\t\t\t\tif(sum <= 10){\n\t\t\t\t\tsum += 11;\n\t\t\t\t\televen_used = true;\n\t\t\t\t}else{\n\t\t\t\t\tsum += 1;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tsum += getnum(c);\n\t\t\t}\n\t\t}\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> c;\n\t\t\tcards[j] = getnum(c);\n\t\t}\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else{\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tif(sum <= 16){\n\t\t\t\t\tif(sum <= 10){\n\t\t\t\t\t\tif(cards[j] == 1){\n\t\t\t\t\t\t\tsum += 11;\n\t\t\t\t\t\t\televen_used = true;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += cards[j];\n\t\t\t\t\t}\n\t\t\t\t}else if(eleven_used){\n\t\t\t\t\tsum += cards[j];\n\t\t\t\t}else{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t}else{\n\t\t\t\tcout << sum << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tif(v[0]+v[1]==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tgoto L;\n\t\t}\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]==11){\n\t\t\t\t\tif(sum+11<=21)v.push_back(1);\n\t\t\t\t\telse v.push_back(11);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t}K:;L:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <memory>\n#include <memory.h>\n#include <cmath>\n#include <fstream>\n#include <cmath>\n#include <numeric>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <sstream>\n#include <cstdlib>\n#include <cstdio>\n#include <map>\n#include <iomanip>\n#include <list>\n#include <cctype>\n#include <algorithm>\n#define USE_MATH_DEFINES\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\ntypedef pair<int, PP> PPP;\nconst int INF = 1 << 30;\nconst double EPS = 1E-9;\n\nint to_num(char c){\n\tif(isdigit(c)){\n\t\treturn c - '0';\n\t}else if(c == 'T'){\n\t\treturn 10;\n\t}else if(c == 'J'){\n\t\treturn 10;\n\t}else if(c == 'Q'){\n\t\treturn 10;\n\t}else if(c == 'K'){\n\t\treturn 10;\n\t}else{\n\t\treturn 1;\n\t}\n}\n\n\nint card[8];\n\nint main(){\n\tint n;\n\tchar ch;\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tint a, b;\n\t\tbool ele_used = false;\n\n\t\tcin >> ch;\n\t\ta = to_num(ch);\n\t\tcin >> ch;\n\t\tb = to_num(ch);\n\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> ch;\n\t\t\tcard[j] = to_num(ch);\n\t\t}\n\n\t\tint sum = 0;\n\n\t\tif(a != 1){\n\t\t\tsum += a;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t\tele_used = true;\n\t\t}\n\n\t\tif(b != 1 || ele_used){\n\t\t\tsum += b;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t\tele_used = true;\n\t\t}\n\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}else if(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(int j = 0; j < 8; j++){\n\n\t\t\tif(card[j] != 1){\n\t\t\t\tsum += card[j];\n\t\t\t}else if(sum + 11 > 21){\n\t\t\t\tsum += 1;\n\t\t\t}else{\n\t\t\t\tsum += 11;\n\t\t\t\tele_used = true;\n\t\t\t}\n\n\t\t\tif(sum > 21){\n\t\t\t\tif(ele_used){\n\t\t\t\t\tsum -= 10;\n\t\t\t\t\tele_used = false;\n\t\t\t\t}else{\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double EPS=1e-10;\nconst int inf=1e9;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\nint main(){\n\tint z;\n\tcin>>z;\n\twhile(z--){\n\t\tvi in(10);\n\t\trep(i,10){\n\t\t\tchar c;\n\t\t\tcin>>c;\n\t\t\tif(isdigit(c))c-='0';\n\t\t\telse if(c=='A')c=11;\n\t\t\telse c=10;\n\t\t\tin[i]=c;\n\t\t}\n\t\tint sum=in[0]+in[1];\n\t\tint co=0;\n\t\tif(in[0]==11)co++;\n\t\tif(in[1]==11)co++;\n\t\tif(co&&sum==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(co==2){\n\t\t\tco--;\n\t\t\tsum-=10;\n\t\t}\n\t\tloop(i,2,10){\n\t\t\tif(sum<17||sum==17&&co){\n\t\t\t\tsum+=in[i];\n\t\t\t\tif(in[i]==11){\n\t\t\t\t\tco++;\n\t\t\t\t}\n\t\t\t\tif(co&&sum>21){\n\t\t\t\t\tco--;\n\t\t\t\t\tsum-=10;\n\t\t\t\t}\n\t\t\t}else break;\t\t\n\t\t}\n\t\tif(sum<22)cout<<sum<<endl;\n\t\telse cout<<\"bust\"<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint q, t[12], w; char c[11];\nint score() {\n\tint ret = t[1] * 11;\n\tfor (int i = 2; i < 11; i++) ret += t[i] * i;\n\tw = t[1];\n\twhile (w && ret >= 22) w--, ret -= 10;\n\treturn ret;\n}\nint main() {\n\tcin >> q;\n\twhile (q--) {\n\t\tfor (int i = 0; i < 10; i++) cin >> c[i];\n\t\tfill(t, t + 11, 0);\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\telse t[10]++;\n\t\t\tint z = score();\n\t\t\tif (z == 21 && i == 1) {\n\t\t\t\tputs(\"blackjack\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (z > 21) {\n\t\t\t\tputs(\"bust\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (z > 17 || (z == 17 && !w)) {\n\t\t\t\tprintf(\"%d\\n\", z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint point(string s) {\n    if(s == \"T\" || s == \"J\" || s == \"Q\" || s == \"K\") return 10;\n    if(s == \"A\") return 1;\n    return s[0]-'0';\n}\n\nint cal(vector<string> cards) {\n    if(cards[1] == \"A\" && point(cards[0]) == 10) return -1;\n    if(cards[0] == \"A\" && point(cards[1]) == 10) return -1;\n    int p = 0;\n    bool aces = false;\n    for(int i=0; i<cards.size(); ++i) {\n        if(p <= 16) {\n            int t = point(cards[i]);\n            if(t == 1 && p+11 <= 21) {\n                aces = true;\n                p += 11;\n            }else{\n                p += t;\n            }\n        }else if(p == 17 && aces) {\n            p -= 10;\n            int t = point(cards[i]);\n            p += t;\n        }\n    }\n    return p;\n}\n\nint main() {\n    int tc;\n    string card;\n    cin>>tc;\n    while(tc--) {\n        vector<string> hand(10);\n        cin>>hand[0]>>hand[1];\n        for(int i=0; i<8; ++i) {\n            cin>>hand[i+2];\n        }\n        int p = cal(hand);\n        if(p > 21) cout<<\"bust\"<<endl;\n        else if(p == -1) cout<<\"blackjack\"<<endl;\n        else cout<<p<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char hand;\n        int point = 0;\n        int one = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        char a, b;\n        cin >> a >> b;\n        if(a == 'A' && (b == 'T' || b == 'K' || b == 'Q' || b == 'J')){\n            isblackjack = true;\n        }\n        elseif(b == 'A' && (a == 'T' || a == 'K' || a == 'Q' || a == 'J')){\n            isblackjack = true;\n        }\n        else if(a == 'A'){\n            isace = true;\n            if(b == 'A'){\n                isace = false;\n                point = 12;\n            }else{\n                point = 11 + b - '0';\n            }\n        }else if(b == 'A'){\n            isace = true;\n            point = 11 + a - '0';\n        }else if(a == 'T' || a == 'J' || a == 'Q' || a == 'K'){\n            point = 10 + b - '0';\n        }else if(b == 'T' || b == 'J' || b == 'Q' || b == 'K'){\n            point = 10 + a - '0';\n        }else{\n            point = a - '0' + b - '0';\n        }\n        for(int i=0; i<8; i++){\n            cin >> hand;\n            if(point <= 16 || (point == 17 && isace)){\n                if(hand == 'A'){\n                    one++;\n                }else if(hand == 'T' || hand == 'J' || hand == 'Q' || hand == 'K'){\n                    point += 10;\n                }else{\n                    point += hand - '0';\n                }\n            }\n        }\n        point += one*11;\n        while(one--&&point>21){\n            point -= 10;\n        }\n        if(isblackjack){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nbool is_blackjack(vector<int> &cards)\n{\n    return (cards[0] == 1 && cards[1] >= 10);\n}\n\nint to_num(char ch)\n{\n    if (ch == 'A') {\n        return 1;\n    } else if (ch == 'T') {\n        return 10;\n    } else if (ch == 'J') {\n        return 11;\n    } else if (ch == 'Q') {\n        return 12;\n    } else if (ch == 'K') {\n        return 13;\n    }\n    return (ch - '0');\n}\n\nint get_point(int c)\n{\n    return (c >= 10 ? 10 : c);\n}\n\npair<int, int> get_point(vector<int> &cards)\n{\n    int point = 0, ace_cnt = 0;\n    vector<int> ace;\n    for (int i = 0; i < (int)cards.size(); i++) {\n        if (cards[i] == 1) {\n            ace_cnt++;\n            point += 11;\n        } else {\n            point += get_point(cards[i]);\n        }\n    }\n    int jk = 0;\n    for (int i = 0; i < ace_cnt; i++) {\n        if (point > 21) {\n            point -= 10;\n            jk++;\n        }\n    }\n    return make_pair(point, ace_cnt - jk);\n}\n\nint main()\n{\n    int N;\n    cin >> N;\n    while (N--) {\n        char ch;\n        vector<int> cards;\n        int pile[8];\n        for (int i = 0; i < 2; i++) {\n            cin >> ch;\n            cards.push_back(to_num(ch));\n        }\n        sort(cards.begin(), cards.end());\n        for (int i = 0; i < 8; i++) {\n            cin >> ch;\n            pile[i] = to_num(ch);\n        }\n        if (is_blackjack(cards)) {\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        pair<int, int> p;\n        int point = 0;\n        for (int i = 0; i < 8; i++) {\n            p = get_point(cards);\n            point = p.first;\n            if (point <= 16) {\n                cards.push_back(pile[i]);\n            } else if (point == 17 && p.second > 0) {\n                cards.push_back(pile[i]);\n            } else {\n                break;\n            }\n        }\n        point = get_point(cards).first;        \n        if (point > 21) {\n            cout << \"bust\" << endl;\n        } else {\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <map>\nusing namespace std;\n\nint getCard() {\n  char c;\n  cin >> c;\n  if(c == 'A') {\n    return 0;\n  } else if(isdigit(c)) {\n    return c - '0';\n  } else {\n    return 10;\n  }\n}\n\npair<int,int> getScore(const vector<int> &d) {\n  int score = 0;\n  int numAce = 0;\n  int use1, use11;\n  for(int i = 0; i < d.size(); ++i) {\n    if(d[i] == 0) {\n      ++numAce;\n      score += 1;\n    } else {\n      score += d[i];\n    }\n  }\n  use1 = score + numAce;\n  use11 = score + numAce*10;\n  if(use11 <= 21) {\n    return make_pair(use11, 1);\n  } else {\n    return make_pair(use1, 0);\n  }\n}\n\nint main() {\n  int Tc;\n  cin >> Tc;\n  for(int tc = 0; tc < Tc; ++tc) {\n    vector<int> d;\n    vector<int> p;\n    for(int i = 0; i < 2; ++i) {\n      d.push_back(getCard());\n    }\n    for(int i = 0; i < 8; ++i) {\n      p.push_back(getCard());\n    }\n\n    if(getScore(d).first == 21) {\n      cout << \"blackjack\" << endl;\n    } else {\n      pair<int,int> s;\n      for(int i = 0; i < 8; ++i) {\n        s = getScore(d);\n        if(s.first <= 16 || s.first == 17 && s.second) {\n          d.push_back(p[i]);\n        }\n      }\n      if(s.first <= 21) {\n        cout << s.first << endl;\n      } else {\n        cout << \"bust\" << endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n\nint main(){\n  int n;\n  int map[200];\n  map['A'] = 1;\n  map['2'] = 2;\n  map['3'] = 3;\n  map['4'] = 4;\n  map['5'] = 5;\n  map['6'] = 6;\n  map['7'] = 7;\n  map['8'] = 8;\n  map['9'] = 9;\n  map['T'] = 10;\n  map['J'] = 10;\n  map['Q'] = 10;\n  map['K'] = 10;\n\n  cin>>n;\n  while( n --> 0){\n    int sum = 0;\n    bool ace = false;\n    bool ele = false;\n    bool dec = true;\n    int d[8];\n    for(int i=0; i<2; i++){\n      char tmp; cin>>tmp;\n      int c = map[tmp];\n      if(c == 1) ace = true;\n      sum += c;\n    }\n    for(int i=0; i<8; i++){\n      char tmp; cin>>tmp;\n      d[i] = map[tmp];\n    }\n    if(ace && sum + 10 <= 21){\n      ele = true;\n      sum += 10;\n    }\n    int idx = 0;\n    while( sum <= 16 || (ele && sum == 17) ){\n      int c = d[idx++];\n      dec = false;\n      if(!ace && c == 1)\n        ace = true;\n      sum += c;\n      if(ace && !ele && sum + 10 <= 21){\n        ele = true;\n        sum += 10;\n      }\n      if(sum > 21 && ele){\n        ele = false;\n        sum -= 10;\n      }\n    }\n    if(sum > 21) puts(\"bust\");\n    else if(dec && sum == 21) puts(\"blackjack\");\n    else printf(\"%d\\n\",sum);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#include <map>\nusing namespace std;\n\nint getCard() {\n  char c;\n  cin >> c;\n  if(c == 'A') {\n    return 0;\n  } else if(isdigit(c)) {\n    return c - '0';\n  } else {\n    return 10;\n  }\n}\n\npair<int,int> getScore(const vector<int> &d) {\n  int score = 0;\n  int numAce = 0;\n  int use11 = 0;\n  for(int i = 0; i < d.size(); ++i) {\n    if(d[i] == 0) {\n      ++numAce;\n      score += 1;\n    } else {\n      score += d[i];\n    }\n  }\n  while(numAce && score+10 <= 21) {\n    score += 10;\n    ++use11;\n    --numAce;\n  }\n  return make_pair(score,use11);\n}\n\nint main() {\n  int Tc;\n  cin >> Tc;\n  for(int tc = 0; tc < Tc; ++tc) {\n    vector<int> d;\n    vector<int> p;\n    for(int i = 0; i < 2; ++i) {\n      d.push_back(getCard());\n    }\n    for(int i = 0; i < 8; ++i) {\n      p.push_back(getCard());\n    }\n\n    if(d[0] == 0 && d[1] == 10 || d[0] == 10 && d[1] == 0) {\n      cout << \"blackjack\" << endl;\n    } else {\n      pair<int,int> s;\n      for(int i = 0; i < 8; ++i) {\n        s = getScore(d);\n        if(s.first <= 16 || s.first == 17 && s.second == 1) {\n          d.push_back(p[i]);\n        }\n      }\n      if(s.first <= 21) {\n        cout << s.first << endl;\n      } else {\n        cout << \"bust\" << endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char hand;\n        int point = 0;\n        int one = 0;\n        bool isbust = false;\n        bool isace = false;\n        char a, b;\n        cin >> a >> b;\n        if(a == 'A' && (b == 'T' || b == 'K' || b == 'Q' || b == 'J')){\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        if(b == 'A' && (a == 'T' || a == 'K' || a == 'Q' || a == 'J')){\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        if(a == 'A'){\n            isace = true;\n            if(b == 'A'){\n                point = 12;\n            }else{\n                point = 11 + b - '0';\n            }\n        }else if(b == 'A'){\n            isace = true;\n            point = 11 + a - '0';\n        }else if(a == 'T' || a == 'J' || a == 'Q' || a == 'K'){\n            point = 10 + b - '0';\n        }else if(b == 'T' || b == 'J' || b == 'Q' || b == 'K'){\n            point = 10 + a - '0';\n        }else{\n            point = a - '0' + b - '0';\n        }\n        for(int i=0; i<8; i++){\n            cin >> hand;\n            if(point <= 16 || (point == 17 && isace)){\n                if(hand == 'A'){\n                    one++;\n                }else if(hand == 'T' || hand == 'J' || hand == 'Q' || hand == 'K'){\n                    point += 10;\n                }else{\n                    point += hand - '0';\n                }\n            }\n        }\n        point += one*11;\n        while(one--&&point>21){\n            point -= 10;\n        }\n        if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint a[10],n,e,s;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nvoid calc(int x){\n\tif(a[x]==11)e++;\n\ts+=a[x];\n\tif(s>21&&e)e--,s-=10;\n}\nmain(){\n\tcin>>n;\n\twhile(n--){\n\t\ts=e=0;\n\t\tr(i,10)a[i]=get();\n\t\tr(i,2)calc(i);\n\t\tif(s==21)cout<<\"blackjack\"<<endl;\n\t\telse r(i,8){\n\t\t\tint j=i+2;\n\t\t\tif(s<17||s==17&&e)calc(j);\n\t\t\telse{\n\t\t\t\tif(s<=21)cout<<s<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char hand;\n        int point = 0;\n        int one = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        char a, b;\n        cin >> a >> b;\n        if(a == 'A' && (b == 'T' || b == 'K' || b == 'Q' || b == 'J')){\n            isblackjack = true;\n        }\n        else if(b == 'A' && (a == 'T' || a == 'K' || a == 'Q' || a == 'J')){\n            isblackjack = true;\n        }\n        else if(a == 'A'){\n            isace = true;\n            if(b == 'A'){\n                isace = false;\n                point = 12;\n            }else{\n                point = 11 + b - '0';\n            }\n        }else if(b == 'A'){\n            isace = true;\n            point = 11 + a - '0';\n        }else if(a == 'T' || a == 'J' || a == 'Q' || a == 'K'){\n            point = 10 + b - '0';\n        }else if(b == 'T' || b == 'J' || b == 'Q' || b == 'K'){\n            point = 10 + a - '0';\n        }else{\n            point = a - '0' + b - '0';\n        }\n        for(int i=0; i<8; i++){\n            cin >> hand;\n            if(point <= 16 || (point == 17 && isace)){\n                if(hand == 'A'){\n                    one++;\n                }else if(hand == 'T' || hand == 'J' || hand == 'Q' || hand == 'K'){\n                    point += 10;\n                }else{\n                    point += hand - '0';\n                }\n            }\n        }\n        point += one*11;\n        while(one--&&point>21){\n            point -= 10;\n        }\n        if(isblackjack){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n#define inRange(x,a,b) (a <= x && x <= b)\n\nvoid f(int &score, string &s, bool &eleven){\n    int ace = 0;\n    score = 0;\n    eleven = false;\n    for(char c : s){\n        if(inRange(c, '2', '9'))    score += c-'0';\n        else if(c == 'A')           ace++, score++;\n        else                        score += 10;\n    }\n    while(ace--){\n        if(score+10 <= 21)  eleven = true, score += 10;\n    }\n}\n\nint main(){\n    int q;\n    cin >> q;\n    while(q--){\n        char a, b;\n        cin >> a >> b;\n        string s = \"\";\n        s += a; s += b;\n        int score;\n        bool ele;\n        f(score, s, ele);\n        char c[8];\n        for(int i = 0; i < 8; i++)  cin >> c[i];\n        if(score == 21){\n            cout << \"blackjack\" << endl;\n            continue;\n        }\n        for(int i = 0; i < 8; i++){\n            if(score <= 16 || (score==17 && ele)){\n                s += c[i];\n                f(score, s, ele);\n            }else{\n                break;\n            }\n        }\n        if(score > 21)  cout << \"bust\" << endl;\n        else            cout << score << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint conv(char c){\n  if(c == 'A') return 11;\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c);\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || sum == 17 && ace){\n        if(conv(str[j])) sum += conv(str[j]);\n        if(str[j] == 'A'){\n          if(sum > 21) sum -= 10;\n          else ace = true;\n        }\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i=1; i<=n; i++){\n        char hand;\n        int point = 0;\n        int one = 0;\n        bool isblackjack = false;\n        bool isace = false;\n        char a, b;\n        cin >> a >> b;\n        if(a == 'A'){\n            isace = true;\n            if(b == 'T' || b == 'K' || b == 'Q' || b == 'J'){\n                isblackjack = true;\n            }else if(b == 'A'){\n                isace = false;\n                point = 12;\n            }\n            else{\n                point = 11 + b - '0';\n            }\n        }\n        else if(b == 'A'){\n            isace = true;\n            if(a == 'T' || a == 'K' || a == 'Q' || a == 'J'){\n                isblackjack = true;\n            }else{\n                point = 11 + a - '0';\n            }\n        }else{\n            if(a == 'T' || a == 'K' || a == 'Q' || a == 'J'){\n                if(b == 'T' || b == 'K' || b == 'Q' || b == 'J'){\n                    point = 20;\n                }else{\n                    point = 10 + b - '0';\n                }\n            }else if(b == 'T' || b == 'K' || b == 'Q' || b == 'J'){\n                point = 10 + a - '0';\n            }else{\n                point = a - '0' + b - '0';\n            }\n        }\n        for(int i=0; i<8; i++){\n            cin >> hand;\n            if(point <= 16 || (point == 17 && isace)){\n                if(hand == 'A'){\n                    one++;\n                }else if(hand == 'T' || hand == 'J' || hand == 'Q' || hand == 'K'){\n                    point += 10;\n                }else{\n                    point += hand - '0';\n                }\n            }\n        }\n        point += one*11;\n        while(one--&&point>21){\n            point -= 10;\n        }\n        if(isblackjack){\n            cout << \"blackjack\" << endl;\n        }else if(point > 21){\n            cout << \"bust\" << endl;\n        }else{\n            cout << point << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n\nusing namespace std;\n\nint main() {\n\n  int t; cin >> t;\n\n\n  rep(_, t) {\n    int eleven_count = 0;\n    int dealed = -2;\n    int num = 0;\n\n    auto deal = [&]() {\n      char c; cin >> c; dealed ++;\n      if(isdigit(c)) { num += c - '0'; return; }\n      if(c == 'A') { eleven_count ++; num += 11; return; } // テヲツュツ」テ」ツ?療」ツ?湘・ツ?ィテ」ツ?ヲ1テ」ツ?ォテ」ツ?凖」ツつ凝」ツ?セテ」ツ?ァティツゥツヲテ」ツ?療」ツ?ヲテ」ツ??」ツつ凝」ツ??\n      num += 10; return;\n    };\n\n    deal(); deal();\n    if(num == 21) {\n      cout << \"blackjack\" << endl;\n      REP(i, dealed, 8) { char c; cin >> c; }\n      continue;\n    }\n\n    if(num > 21) {\n      num -= 10; eleven_count --;\n    }\n\n\n    auto test17 = [&]() {\n      if(eleven_count > 0 && num == 17) { return true; }\n      int ele = eleven_count, nu = num;\n      while(ele > 0) {\n        if(nu == 17) { eleven_count = ele; num = nu;  return true; }\n        if(nu < 17) { return false; }\n        nu -= 10;\n        ele --;\n      }\n      return false;\n    };\n\n\n\n\n\n//    cout << \"------------\" << endl;\n\n    rep(_, 8) {\n\n//      cout << \"num: \" << num << endl;\n\n      if(num <= 16) {\n        deal();\n      }\n\n\n\n      else if(test17()) {\n        deal();\n      }\n\n\n\n\n      else {\n\n        if(num > 21) {\n          while(eleven_count) {\n            eleven_count --;\n            num -= 10;\n          }\n\n          if(num > 17) {\n            break;\n          }\n\n        }\n        else {\n          break;\n        }\n\n      }\n\n      /*\n      else if(num > 21) {\n        while(eleven_count && num > 21) {\n          num -= 10;\n          eleven_count --;\n        }\n        if(num > 17) {\n          break;\n        }\n      }\n      */\n    }\n\n    REP(i, dealed, 8) { char c; cin >> c; }\n\n    if(num > 21) {\n      bool ok = 0;\n      while(eleven_count > 0) {\n        if(num - 10 < 21) {\n          ok = 1;\n          cout << num - 10 << endl;\n          break;\n        }\n        num -= 10;\n        eleven_count --;\n      }\n      if(!ok) {\n        cout << \"bust\" << endl;\n      }\n    }\n    else {\n      cout << num << endl;\n    }\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    score['A']=11;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;\n        for(int i = 0; i < 8; i++){\n            char ch;\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else{\n            if(cs>17){\n                cout<<cs<<endl;\n                continue;\n            }\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            for(int i = 0; i < str.size(); i++){\n                char ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                if(aNum==0){\n                    if(cs>21){\n                        b=true;\n                        break;\n                    }\n                    if(cs>17){\n                        fs=cs;\n                        ok=true;\n                        break;\n                    }\n                }\n                else{\n                    for(int j = 0; j <= 1; j++){\n                        int ccs=(cs+j*11+(aNum-j));\n                        if(j==1){\n                            if(ccs-11==6){\n                                break;\n                            }\n                            else{\n                                if(ccs>21){\n                                    b=true;\n                                    break;\n                                }\n                                else{\n                                    if(ccs>17){\n                                        fs=ccs;\n                                        ok=true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else{\n                            if(ccs>21){\n                                b=true;\n                                break;\n                            }\n                            else{\n                                if(ccs>17){\n                                    ok=true;\n                                    fs=ccs;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if(b||ok){\n                        break;\n                    }\n                }\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint q, t[12]; char c[11];\nint score() {\n\tint ret = t[1] * 11;\n\tfor (int i = 2; i < 11; i++) ret += t[i] * i;\n\tint z = t[1];\n\twhile (z && ret >= 22) z--, ret -= 10;\n\treturn ret;\n}\nint main() {\n\tcin >> q;\n\twhile (q--) {\n\t\tfor (int i = 0; i < 10; i++) cin >> c[i];\n\t\tfill(t, t + 11, 0);\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\telse t[10]++;\n\t\t\tint z = score();\n\t\t\tif (z == 21 && i == 1) {\n\t\t\t\tputs(\"blackjack\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (z > 21) {\n\t\t\t\tputs(\"bust\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (z > 17 || (z == 17 && !t[1])) {\n\t\t\t\tprintf(\"%d\\n\", z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,8){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum==6&&hand[0]==1){\n\t\t\t\tsum+=10;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\tif(sum>16)break;\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint main(){\n  int total_testcases;\n  for(int i = 1; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 11;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      cin >> lhs >> rhs;\n      int numA = cards[lhs[0]];\n      int numB = cards[rhs[0]];\n      \n      int sum = numA + numB;\n      bool is_blackjack = false;\n      bool has_ace = false;\n      bool is_ace1 = false;\n      if(numA + numB == 21){\n        is_blackjack = true;\n      }\n      if(numA == 11 || numB == 11){\n        has_ace = true;\n        is_ace1 = false;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n        if(is_blackjack) continue;\n\n        int num = cards[pile[0]];\n        if(sum <= 16){\n          if(num == 11){\n            has_ace = true;\n            if(sum + num > 21){\n              sum += 1;\n            }\n            else{\n              sum += num;\n            }\n          }\n          else{\n            sum += num;\n          }\n\n        }\n        else if(sum == 17 && has_ace && !is_ace1){\n          if(num == 11){\n            sum += 1;\n          }\n          else{\n            sum += num;\n          }\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nint score(const vector<int>& v, bool& ace){\n\tint s=0;\n\tbool flag = false;\n\tfor(int i=0 ; i < v.size() ; i++ ){\n\t\tif( v[i] == 1 ) flag = true;\n\t\ts += v[i];\n\t}\n\tif( flag && s+10 <= 21 && s < s+10 ){\n\t\ts += 10;\n\t\tace = true;\n\t}\n\treturn s;\n}\n\nint main(){\n\tint h[256] = {0};\n\th['A'] = 1; h['T'] = h['J'] = h['Q'] = h['K'] = 10;\n\tfor(char c = '2' ; c <= '9' ; c++ ) h[c] = c - '0';\n\t\n\tint N;\n\tcin >> N;\n\tfor(int t=0 ; t < N ; t++ ){\n\t\tvector<int> v;\n\t\t{\n\t\t\tchar a, b;\n\t\t\tcin >> a >> b;\n\t\t\tv.push_back( h[a] );\n\t\t\tv.push_back( h[b] );\n\t\t}\n\t\tvector<int> a;\n\t\tfor(int i=0 ; i < 8 ; i++ ){\n\t\t\tchar e;\n\t\t\tcin >> e;\n\t\t\ta.push_back( h[e] );\n\t\t}\n\t\tint k=0, ans;\n\t\twhile( true ){\n\t\t\tbool ace = false;\n\t\t\tint s = score(v,ace);\n\t\t\tif( s <= 16 || (s == 17 && ace) ){\n\t\t\t\tv.push_back( a[k++] );\n\t\t\t}else{\n\t\t\t\tans = s;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif( 21 < ans ){\n\t\t\tcout << \"bust\" << endl;\n\t\t}else if( ans == 21 && v.size() == 2 ){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t}else{\n\t\t\tcout << ans << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cctype>\n#include <limits.h>\n#include <math.h>\n#include <complex>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n\n#define VARIABLE(x) cerr << #x << \"=\" << x << endl\n#define BINARY(x) static_cast<bitset<16> >(x);\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n\nconst int INF = 1000000000;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={0, 1, 0, -1}, dy[4]={-1, 0, 1, 0};\nusing namespace std;\n//typedef pair<int, int> P;\nstruct P {\n\tint x, y;\n\tP(int x, int y):x(x), y(y){}\n\tP(){}\n};\n\n/** Problem2024 : Blackjack **/\nint main()\n{\n\tint N;\n\tcin>>N;\n\trep(z, N) {\n\t\tchar c1, c2;\n\t\tvector<char> card(8);\n\t\tint A = 0;\n\t\tint idx=0;\n\t\t\n\t\tcin>>c1>>c2;\n\t\trep(i, 8) cin>>card[i];\n\t\t\n\t\tint sum=0;\n\t\t\n\t\tif (isdigit(c1)) sum+=c1-'0';\n\t\telse if (c1=='A') {\n\t\t\tif (sum+11>21) sum++;\n\t\t\telse {A++; sum+=11;}\n\t\t} else sum+=10;\n\t\t\n\t\tif (isdigit(c2)) sum+=c2-'0';\n\t\telse if (c2=='A') \t{\n\t\t\tif (sum+11>21) sum++;\n\t\t\telse {A++; sum+=11;}\n\t\t} else sum+=10;\n\t\t\n\t\tif (sum==21) {\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\twhile (1) {\n\t\t\twhile (sum>21 && A) {\n\t\t\t\tsum-=10;\n\t\t\t\tA--;\n\t\t\t}\n\t\t\t\n\t\t\tif ((sum==17 && A) || sum<=16) {\n\t\t\t\tint nc = card[idx++];\n\t\t\t\tif (isdigit(nc)) sum+=nc-'0';\n\t\t\t\telse if (nc=='A') {\n\t\t\t\t\tif (sum+11>21) sum++;\n\t\t\t\t\telse {A++; sum+=11;}\n\t\t\t\t}\n\t\t\t\telse sum+=10;\n\t\t\t} else if (sum>16) break;\n\t\t}\n\t\t\n\t\tif (sum>21) cout << \"bust\" << endl;\n\t\telse cout << sum << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,9){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\tif(sum>17||(hand[0]!=1&&sum==17))break;\n\t\t\tif(i==8)break;\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nint ret_int( char c ) {\n  if( c == 'T' || c == 'K' || c == 'Q' || c == 'J' ) return 10;\n  else if( c == 'A' ) return 11;\n  else return (c - '0');\n}\n\nsigned main(){\n  int N;\n  cin >> N;\n  while( N-- ) {\n    int sum = 0;\n    bool flag = false;\n    char a, b;\n    cin >> a >> b;\n    if( a == 'A' || b == 'A' ) flag = true;\n    if( a == 'A' && b == 'A' ) sum = 12;\n    else sum = ret_int( a ) + ret_int( b );\n\n    char card[8];\n    for(int i=0; i<8; i++) cin >> card[i];\n    if( sum == 21 ) cout << \"blackjack\" << endl;\n    else {\n      for(int i=0; i<8; i++) {\n\tif( sum > 17 ) break;\n\telse if( sum == 17 ) {\n\t  if( flag ) {\n\t    if( card[i] == 'A' ) {\n\t      if( sum + 11 > 21 ) sum++;\n\t      else sum += 11, flag = true;\n\t    } else {\n\t      sum += ret_int( card[i] );\n\t    }\n\t  }\n\t  else break;\n\t}\n\telse {\n\t  if( card[i] == 'A' ) {\n\t    if( sum + 11 > 21 ) sum++;\n\t    else sum += 11, flag = true;\n\t  } else {\n\t    sum += ret_int( card[i] );\n\t  }\n\t}\n      }\n\n      if( sum > 21 ) cout << \"bust\" << endl;\n      else cout << sum << endl;\n    }\n  }\n}\n "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint conv(char c){\n  if(c == 'A') return 11;\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    bool ace = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c);\n      if(c == 'A') ace = true;\n      if(sum > 21) sum -= 10;\n    }\n    string str;\n    for(int i=0;i<8;i++){\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16 || (sum == 17 && ace)){\n        if(conv(str[j])) sum += conv(str[j]);\n        if(str[j] == 'A'){\n          if(sum > 21) sum -= 10;\n          else ace = true;\n        }\n        if(sum > 21 && ace){\n          ace = 0;\n          sum -= 10;\n        }\n      }\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <string>\nusing namespace std;\n\nint getp(int& acnt, char c)\n{\n\tif(isdigit(c)) return c-'0';\n\n\tif(c=='A')\n\t{\n\t\tacnt++;\n\t\treturn 1;\n\t}\n\n\treturn 10;\n\t\n}\n\nint main()\n{\n\tint N;\n\tcin >> N;\n\twhile(N--)\n\t{\n\t\tint acnt=0, tot=0;\n\t\tchar in;\n\t\tfor(int i=0; i<2; i++)\n\t\t{\n\t\t\tcin >> in;\n\t\t\ttot+=getp(acnt, in);\n\t\t}\n\t\tchar d[8];\n\t\tfor(int i=0; i<8; i++)\n\t\t\tcin >> d[i];\n\n\t\tif(acnt&&tot==11)\n\t\t{\n\t\t\tcout << \"Blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tif(!(acnt&&tot<=7))\n\t\t\t\tif(tot>16) break;\n\n\t\t\ttot+=getp(acnt, d[i]);\n\t\t}\n\n\t\tif(acnt&&tot<=11) tot+=10;\n\n\t\tif(tot>21) cout << \"bust\" << endl;\n\t\telse cout << tot << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\n    int score[200];\n    fill(score,score+200,0);\n    for(char ch = '2'; ch <= '9'; ch++)\n        score[ch]=ch-'0';\n    score['T']=score['J']=score['Q']=score['K']=10;\n    int n;\n    cin>>n;\n    while(n--){\n        int aNum=0;\n        int cs=0;\n        for(int i = 0; i<2; i++){\n            char ch;\n            cin>>ch;\n            if(ch=='A')\n                aNum++;\n            else\n                cs+=score[ch];\n        }\n        string str;char ch;\n        for(int i = 0; i < 8; i++){\n            cin>>ch;\n            str+=ch;\n        }\n        if(cs==10&&aNum==1){\n            cout<<\"blackjack\"<<endl;\n            continue;\n        }\n        else if(aNum==1&&cs>=7)\n            cout<<cs+11<<endl;\n        else if(aNum==0&&cs>=17)\n            cout<<cs<<endl;\n        else{\n            bool b=false;\n            bool ok=false;\n            int fs=0;\n            char ch;\n            for(int i = 0; i < str.size(); i++){\n                ch=str[i];\n                if(ch=='A')\n                    aNum++;\n                else\n                    cs+=score[ch];\n                for(int j = 0; j <= min(1,aNum); j++){\n                    int ccs=(cs+j*11+(aNum-j));\n                    if(j==1&&ccs==17)\n                        continue;\n                    else if(j==0&&ccs==17){\n                        fs=cs;ok=true;break;\n                    }\n                    if(ccs>21){\n                        if(j==0){\n                            b=true;break;\n                        }\n                        else\n                            continue;\n                    }\n                    else if(ccs>17){\n                        fs=cs;ok=true;break;\n                    }\n                }\n                if(ok||b)\n                    break;\n            }\n            if(b)\n                cout<<\"bust\"<<endl;\n            else\n                cout<<fs<<endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]){\n\t\t\t\t\tif(v1)v.push_back(1);\n\t\t\t\t\telse v.push_back(a[i]);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(v1&&sum==21)cout<<\"blackjack\"<<endl;\n\t\t\t\telse if(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t}K:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\nint ans(char c,bool one){\n\tif ('2' <= c&&c <= '9')\n\t\treturn c - '0';\n\telse if (c == 'A')\n\t\treturn (one ? 1 : 11);\n\telse\n\t\treturn 10;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tREP(game_num, n){\n\t\tchar cards[10];\n\t\tfor (int i=0; i < 10; i++){\n\t\t\tcin >> cards[i];\n\t\t}\n\t\tint sum = 0;\n\t\tbool one = false;\n\t\tbool bust = false;\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tsum += ans(cards[i],one);\n\t\t}\n\t\tif (sum ==21 ){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\telse if(sum>=17){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tREP(i, 8){\n\t\t\tif (bust)break;\n\t\t\tsum += ans(cards[i + 2],one);\n\t\t\tif (sum >= 22){\n\t\t\t\tfor (int j = 0; j < i + 3; j++){\n\t\t\t\t\tif (cards[j] == 'A'){\n\t\t\t\t\t\tone = true;\n\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t\tfor (int k = 0; k < i + 3; k++)\n\t\t\t\t\t\t\tsum += ans(cards[k], one);\n\t\t\t\t\t\tif (sum >= 17){\n\t\t\t\t\t\t\tcout << sum << endl;\n\t\t\t\t\t\t\tbust = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (j == i + 2){\n\t\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\t\tbust = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(sum>=17){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nstatic int cards[256];\n\nint compute_score(int sum,bool& has_ace11,const string& str){\n  int num = cards[str[0]];\n  if(num == 11){\n    if(sum + num <= 21){\n      has_ace11 = true;\n      return sum + num;\n    }\n    else{\n      return sum + num - 10;\n    }\n  }\n  return sum + num;\n}\n\nint main(){\n  int total_testcases;\n  for(int i = 1; i < 10; i++){\n    cards['0' + i] = i;\n  }\n  cards['A'] = 11;\n  cards['T'] = 10;\n  cards['J'] = 10;\n  cards['Q'] = 10;\n  cards['K'] = 10;\n\n  while(~scanf(\"%d\",&total_testcases)){\n    for(int test_i = 0; test_i < total_testcases; test_i++){\n      string lhs,rhs;\n      cin >> lhs >> rhs;\n\n      bool is_blackjack = false;\n      bool is_ace11 = false;\n\n      int sum = 0;\n      sum = compute_score(sum,is_ace11,lhs);\n      sum = compute_score(sum,is_ace11,rhs);\n      if(sum == 21){\n        is_blackjack = true;\n      }\n\n      for(int pile_i = 0; pile_i < 8; pile_i++){\n        string pile;\n        cin >> pile;\n        if(is_blackjack) continue;\n\n        if(sum <= 16){\n          sum = compute_score(sum,is_ace11,pile);\n        }\n        else if(sum == 17 && is_ace11){\n          sum = compute_score(sum,is_ace11,pile);\n        }\n      }\n      \n      if(sum > 21){\n        printf(\"bust\\n\");\n      }\n      else if(is_blackjack){\n        printf(\"blackjack\\n\");\n      }\n      else{\n        printf(\"%d\\n\",sum);\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nbool addsum ;\n\nvoid add( int& ret, char c){\n  if(c == 'A'){\n    if(ret >= 11) ret++;\n    else ret += 11, addsum = true;\n  }else if(c == 'T'|| c == 'J' || c == 'Q' || c == 'K'){\n    ret += 10;\n  }else{\n    ret += c - '0';\n  }\n  if(ret >= 22 && addsum){\n    addsum = false; ret -= 10;\n  }\n}\n\n\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    addsum = false;\n    int ret = 0;\n    char buff;\n\n    queue< char > que;\n    for(int i = 0 ; i < 10 ; i++ ){\n      cin >> buff;\n      que.push( buff );\n    }\n\n    for(int i = 0 ; i < 2 ; i++ ){\n      add( ret, que.front()); que.pop();\n    }\n\n    if(ret == 21){\n      cout << \"blackjack\\n\";\n      continue;\n    }else if((ret >= 18 || (ret == 17 && !addsum)) && ret <= 21){\n      cout << ret << endl;\n      continue;\n    }else if(ret > 21){\n      cout << \"bust\" << endl;\n      continue;\n    }\n\n    for(int i = 0; ; i++){\n      char c = que.front(); que.pop(); //ふえぇぇ\n      add( ret, c);\n      if((ret >= 18 || (ret == 17 && !addsum)) && ret <= 21){\n        cout << ret << endl;\n        break;\n      }else if(ret > 21){\n        cout << \"bust\" << endl;\n        break;\n      }else if(i == 7){\n        cout << ret << endl;\n        break;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c){\n  if(c == 'A'){\n    aces++;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c);\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n    }\n\n    string str = \"\";\n    for(int i=0;i<8;i++){\n      char c;\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16){\n        sum += conv(str[j]);\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(str[j]);\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n      }\n\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<deque>\n#include<list>\n#include<map>\n#include<queue>\n#include<set>\n#include<stack>\n#include<vector>\n#include<algorithm>\n#include<string>\n#include<iostream>\n#include<sstream>\n#include<cmath>\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint main(){\n  int h,i;\n  int s[256];\n  for(i=2;i<=9;i++)\n    s[i+'0']=i;\n  s['A']=1;\n  s['T']=s['J']=s['Q']=s['K']=10;\n  int n;\n  cin>>n;\n  for(h=0;h<n;h++){\n    int sm=0,ct=0,bj=0;\n    for(i=0;i<2;i++){\n      char t;\n      cin>>t;\n      sm+=s[(int)t];\n      if(t=='A')\n\tct=1;\n    }\n    if(sm==11&&ct)\n      bj=1;\n    for(i=0;i<8;i++){\n      char t;\n      cin>>t;\n      if(ct){\n\tif(0){\n\t}else if(sm+10<=17){\n\t  sm+=s[(int)t];\n\t}else if(sm+10<=21){\n\t}else if(sm<=16){\n\t  sm+=s[(int)t];\n\t}\n      }else{\n\tif(sm<=16){\n\t  sm+=s[(int)t];\n\t  if(t=='A')\n\t    ct=1;\n\t}\n      }\n    }\n    if(bj){\n      cout<<\"blackjack\"<<endl;\n    }else{\n      if(ct){\n\tif(0){\n\t}else if(sm>21){\n\t  cout<<\"bust\"<<endl;\n\t}else if(sm+10>21){\n\t  cout<<sm<<endl;\n\t}else{\n\t  cout<<sm+10<<endl;\n\t}\n      }else{\n\tif(sm>21){\n\t  cout<<\"bust\"<<endl;\n\t}else{\n\t  cout<<sm<<endl;\n\t}\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cctype>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29)\n\nusing namespace std;\nbool counted;\n\nvoid add(int &sum,char c)\n{\n  if(isdigit(c))sum += c-'0';\n  else \n    {\n      if(c == 'A')\n\t{\n\t  if(sum+11 > 21)sum += 1;\n\t  else           sum += 11,counted = true;\n\t}\n      else \n\t{\n\t  sum += 10;\n\t}\n    }\n}\n\nint main()\n{\n  int T;\n  while(cin >> T)\n    {\n      while(T--)\n\t{\n\t  counted = false;\n\t  int sum = 0;\n\t  rep(i,2)\n\t    {\n\t      char c;\n\t      cin >> c;\n\t      add(sum,c);\n\t    }\n\n\t  bool blackjack = (sum==21);\n\n\t  vector<char> vec(8);\n\t  rep(i,8)cin >> vec[i];\n\n\t  rep(i,8)\n\t    {\n\t      if(sum <= 16)add(sum,vec[i]);\n\t      else if(sum == 17 && counted)add(sum,vec[i]);\n\t      else break;\n\t    }\n\t  if(blackjack)cout << \"blackjack\" << endl;\n\t  else if(sum > 21)cout << \"bust\" << endl;\n\t  else cout << sum << endl;\n\t}\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <memory>\n#include <memory.h>\n#include <cmath>\n#include <fstream>\n#include <cmath>\n#include <numeric>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <sstream>\n#include <cstdlib>\n#include <cstdio>\n#include <map>\n#include <iomanip>\n#include <list>\n#include <cctype>\n#include <algorithm>\n#define USE_MATH_DEFINES\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\ntypedef pair<int, PP> PPP;\nconst int INF = 1 << 30;\nconst double EPS = 1E-9;\n\nint to_num(char c){\n\tif(isdigit(c)){\n\t\treturn c - '0';\n\t}else if(c == 'T'){\n\t\treturn 10;\n\t}else if(c == 'J'){\n\t\treturn 10;\n\t}else if(c == 'Q'){\n\t\treturn 10;\n\t}else if(c == 'K'){\n\t\treturn 10;\n\t}else{\n\t\treturn 1;\n\t}\n}\n\n\nint card[8];\n\nint main(){\n\tint n;\n\tchar ch;\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tint a, b;\n\t\tbool ele_used = false;\n\n\t\tcin >> ch;\n\t\ta = to_num(ch);\n\t\tcin >> ch;\n\t\tb = to_num(ch);\n\n\t\tfor(int j = 0; j < 8; j++){\n\t\t\tcin >> ch;\n\t\t\tcard[j] = to_num(ch);\n\t\t}\n\n\t\tint sum = 0;\n\n\t\tif(a != 1){\n\t\t\tsum += a;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t\tele_used = true;\n\t\t}\n\n\t\tif(b != 1 || ele_used){\n\t\t\tsum += b;\n\t\t}else{\n\t\t\tsum += 11;\n\t\t\tele_used = true;\n\t\t}\n\n\t\tif(sum == 21){\n\t\t\tcout << \"blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}else if(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\tcout << sum << endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(int j = 0; j < 8; j++){\n\n\t\t\tif(card[j] != 1){\n\t\t\t\tsum += card[j];\n\t\t\t}else if(sum + 11 > 21){\n\t\t\t\tsum += 1;\n\t\t\t}else{\n\t\t\t\tsum += 11;\n\t\t\t\tele_used = true;\n\t\t\t}\n\n\t\t\tif(sum > 21){\n\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(sum > 17 || (sum == 17 && !ele_used)){\n\t\t\t\tcout << sum << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\n\nmain(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tint score=0,ace=0;\n\t\tchar a,b;\n\t\tcin>>a>>b;\n\t\tif(isdigit(a))score+=a-'0';\n\t\telse if(a=='A'){\n\t\t\tscore+=11;\n\t\t\tace++;\n\t\t}else{\n\t\t\tscore+=10;\n\t\t}\n\t\tif(isdigit(b))score+=b-'0';\n\t\telse if(b=='A'){\n\t\t\tif(score>10){\n\t\t\t\tscore++;\n\t\t\t}else{\n\t\t\t\tscore+=11;\n\t\t\t\tace++;\n\t\t\t}\n\t\t}else score+=10;\n\t\t\n\t\t\n\t\tchar in[8];\n\t\tfor(int i=0;i<8;i++){\n\t\t\tcin>>in[i];\n\t\t}\n\t\t\n\t\tif(score==21){\n\t\t\tputs(\"blackjack\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tfor(int i=0;i<8;i++){\n\t\t\tif(score<17 || (ace>0 && score>=17)){\n\t\t\t\tint hit=in[i];\n\t\t\t\tif(isdigit(hit)){\n\t\t\t\t\tscore+=hit-'0';\n\t\t\t\t}else if(hit=='A'){\n\t\t\t\t\tif(score>10)score++;\n\t\t\t\t\telse{\n\t\t\t\t\t\tscore+=11;\n\t\t\t\t\t\t++ace;\n\t\t\t\t\t}\n\t\t\t\t}else score+=10;\n\t\t\t}else break;\n\t\t\tif(score>21 && ace>0){\n\t\t\t\t--ace;\n\t\t\t\tscore-=10;\n\t\t\t}\n\t\t\tif(score>21)break;\n\t\t}\n\t\tif(score>21)puts(\"bust\");\n\t\telse printf(\"%d\\n\",score);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\nint to_int(char c) {\n  if(isdigit(c)) { return c-'0'; }\n  if(c == 'A') { return 11; }\n  return 10;\n}\n\nint main() {\n\n  int T; cin >> T;\n  rep(_, T) {\n    vector<int> in;\n    rep(i, 10) {\n      char c; cin >> c; in.push_back(to_int(c));\n    }\n\n    if(in[0] + in[1] == 21) { cout << \"blackjack\" << endl; continue; }\n    if(in[0] + in[1] > 21) { if(in[0] == 11) in[0] -= 10; else in[1] -= 10; }\n\n    REP(k, 2, 10) {\n      int value = 0;\n      int ace11 = 0;\n      rep(i, k+1) {\n        value += in[i];\n        ace11 += in[i] == 11;\n        while(value > 21 && ace11) {\n          ace11 --;\n          value -= 10;\n        }\n        if(value > 21) {\n          cout << \"bust\" << endl;\n          goto next;\n        }\n      }\n      if(value > 16 && (!ace11 || value > 17)) {\n        cout << value << endl;\n        goto next;\n      }\n    }\n    next:;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint get(){\n\tchar x;\n\tcin>>x;\n\tif(isdigit(x))return x-'0';\n\tif(x!='A') return 10;\n\telse return 11;\n}\nmain(){\n\tint n,t;\n\tcin>>n;\n\twhile(n--){\n\t\tint a[8];\n\t\tvector<int>v;\n\t\tr(i,2){\n\t\t\tt=get();\n\t\t\tv.push_back(t);\n\t\t}\n\t\tif(v[0]==11&&v[0]==v[1])v[1]=1;\n\t\tr(i,8)a[i]=get();\n\t\tif(v[0]+v[1]==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tgoto L;\n\t\t}\n\t\tr(i,8){\n\t\t\tint sum=0,v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum==17&&v1||sum<=16){\n\t\t\t\tif(a[i]==11){\n\t\t\t\t\tif(sum+11<=21)v.push_back(11);\n\t\t\t\t\telse v.push_back(1);\n\t\t\t\t}\n\t\t\t\telse v.push_back(a[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(sum<=21)cout<<sum<<endl;\n\t\t\t\telse cout<<\"bust\"<<endl;\n\t\t\t\tgoto K;\n\t\t\t}\n\t\t\tsum=v1=0;\n\t\t\tr(j,v.size()){\n\t\t\t\tif(v[j]==11)v1++;\n\t\t\t\tsum+=v[j];\n\t\t\t}\n\t\t\tif(sum>21&&v1){\n\t\t\t\tr(j,v.size())if(v[j]==11){\n\t\t\t\t\tv[j]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}K:;L:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nchar in[20];\nint main(){\n\tint a;scanf(\"%d\",&a);\n\twhile(a--){\n\t\tfor(int i=0;i<10;i++)scanf(\"%s\",in+i);\n\t\tint val=0;\n\t\tint ace=0;\n\t\tif(in[0]=='A'){val+=11;ace++;}\n\t\telse if(in[0]=='T'||in[0]=='J'||in[0]=='Q'||in[0]=='K'){val+=10;}\n\t\telse val+=in[0]-'0';\n\t\tif(in[1]=='A'){val+=11;ace++;}\n\t\telse if(in[1]=='T'||in[1]=='J'||in[1]=='Q'||in[1]=='K'){val+=10;}\n\t\telse val+=in[1]-'0';\n\t\tif(val>21){val-=10;ace--;}\n\t\tif(val==21){\n\t\t\tprintf(\"blackjack\\n\");continue;\n\t\t}\n\t\tint at=2;\n\t\twhile((val<17||(val==17&&ace)&&at<10){\n\t\t\tif(in[at]=='A'){val+=11;ace++;}\n\t\t\telse if(in[at]=='T'||in[at]=='J'||in[at]=='Q'||in[at]=='K'){val+=10;}\n\t\t\telse val+=in[at]-'0';\n\t\t\tif(val>21&&ace){val-=10;ace--;}\n\t\t\tat++;\n\t\t}\n\t\tif(val>21)printf(\"bust\\n\");\n\t\telse printf(\"%d\\n\",val);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <fstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nstatic const double EPS = 1e-5;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\nint cti(char c){\n  if(c>='2'&&c<='9') return c-'0';\n  else if(c=='A') return 11;\n  else return 10;\n}\nint main(void){\n  int n;\n  cin>>n;\n  while(n--){\n    char A[2];\n    cin>>A[0]>>A[1];\n    int count=0;\n    int ace=0;\n    REP(i,2){\n      count+=cti(A[i]);\n      if(A[i]=='A') ace++;\n    }\n    vector<char> eight(8);\n    REP(i,8)cin>>eight[i];\n    if(count==21) cout<<\"blackjack\"<<endl;\n    else{\n      REP(i,8){\n        while(count>=22&&ace>0){\n          count-=10;\n          ace--;\n        }\n        if(count>17||(count==17&&ace==0)) break;\n        count+=cti(eight[i]);\n        if(eight[i]=='A') ace++;\n      }\n      while(count>=22&&ace>0){\n        count-=10;\n        ace--;\n      }\n      if(count>=22) cout<<\"bust\"<<endl;\n      else cout<<count<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces;\nint tens;\n\nint conv(char c){\n  if(c == 'A'){\n    aces++;\n    return 11;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K') return 10;\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  while(n--){\n    char c;\n    int sum = 0;\n    aces = 0;\n    tens = 0;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c);\n      if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n      }\n    }\n\n    string str = \"\";\n    for(int i=0;i<8;i++){\n      char c;\n      cin >> c;\n      str += c;\n    }\n\n    if(sum == 21){\n      cout << \"blackjack\" << endl;\n      continue;\n    }\n\n    for(int j=0;j<8;j++){\n      if(sum <= 16){\n        sum += conv(str[j]);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(str[j]);\n      }\n      /*if(sum > 21 && aces){\n        aces--;\n        sum -= 10;\n        }*/\n    }\n    if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cctype>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <bitset>\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\n#define all(v) (v).begin(), (v).end()\n#define rev(s) (s).rbegin(), (s).rend()\n#define MP make_pair\n#define X first\n#define Y second\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef vector<int> vi;\n\nvoid checkace(int &hand, int &ace){\n\tif(ace && hand > 21){\n\t\thand -= 10;\n\t\tace--;\n\t}\n}\n\nint main(){\n\tint dataset;\n\tcin >> dataset;\n\tmap<char, int> card;\n\trep(i, 9){\n\t\tcard['1'+i] = 1+i;\n\t}\n\trep(i, 4){\n\t\tcard[\"TJQK\"[i]] = 10;\n\t}\n\tcard['A'] = 11;\n\twhile(dataset--){\n\t\tint hand = 0, ace = 0;\n\t\trep(i, 2){\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tint n = card[c];\n\t\t\thand += n;\n\t\t\tif(n == 11) ace++;\n\t\t}\n\t\tcheckace(hand, ace);\n\n\t\tqueue<int> pile;\n\t\trep(i, 8){\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tpile.push(card[c]);\n\t\t}\n\t\tbool bj = hand==21;\n\t\twhile(hand < 16 || (hand < 17 && ace > 0)){\n\t\t\tint n = pile.front();\n\t\t\tpile.pop();\n\t\t\thand += n;\n\t\t\tif(n == 11) ace++;\n\t\t\tcheckace(hand, ace);\n\t\t}\n\n\t\tif(hand > 21) cout << \"bust\" << endl;\n\t\telse{\n\t\t\tif(bj){\n\t\t\t\tcout << \"blackjack\" << endl;\n\t\t\t}else{\n\t\t\t\tcout << hand << endl;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint q, t[12]; char c[11];\nint score() {\n\tint ret = t[1] * 11;\n\tfor (int i = 2; i < 11; i++) ret += t[i] * i;\n\tint z = t[1];\n\twhile (z && ret >= 22) z--, ret -= 10;\n\treturn ret;\n}\nint main() {\n\tcin >> q;\n\twhile (q--) {\n\t\tfor (int i = 0; i < 10; i++) cin >> c[i];\n\t\tfill(t, t + 11, 0);\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\telse t[10]++;\n\t\t}\n\t\tif (score() == 21) cout << \"blackjack\" << endl;\n\t\telse {\n\t\t\tfor (int i = 2; i < 10; i++) {\n\t\t\t\tif (isdigit(c[i])) t[c[i] - 48]++;\n\t\t\t\telse if (c[i] == 'A') t[1]++;\n\t\t\t\telse t[10]++;\n\t\t\t\tif (score() > 21) {\n\t\t\t\t\tcout << \"bust\" << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (score() > 17 || (score() == 17 && !t[1])) {\n\t\t\t\t\tcout << score() << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint aces = 0;\nint tens = 0;\n\nint conv(char c, int sum){\n  if(c == 'A'){\n    if(sum + 11 <= 21 && 1){\n      aces++;\n      return 11;\n    }else return 1;\n  }\n  if(c == 'T' || c == 'J' || c == 'Q' || c == 'K'){\n    tens++;\n    return 10;\n  }\n  return c - '0';\n}\n\nmain(){\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    char c;\n    int sum = 0;\n    bool stand = false;\n    for(int j=0;j<2;j++){\n      cin >> c;\n      sum += conv(c, sum);\n    }\n    for(int j=0;j<8;j++){\n      cin >> c;\n      if(stand) continue;\n      if(sum <= 16){\n        sum += conv(c, sum);\n      }else if(sum == 17 && aces){\n        aces--;\n        sum -= 10;\n        sum += conv(c, sum);\n      }else{\n        stand = true;\n      }\n      if(sum >= 21){\n        stand = true;\n      }\n    }\n    if(sum == 21 && tens == 1 && aces == 1) cout << \"blackjack\" << endl;\n    else if(sum > 21) cout << \"bust\" << endl;\n    else cout << sum << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nchar in[20];\nint main(){\n\tint a;scanf(\"%d\",&a);\n\twhile(a--){\n\t\tfor(int i=0;i<10;i++)scanf(\"%s\",in+i);\n\t\tint val=0;\n\t\tint ace=0;\n\t\tif(in[0]=='A'){val+=11;ace++;}\n\t\telse if(in[0]=='T'||in[0]=='J'||in[0]=='Q'||in[0]=='K'){val+=10;}\n\t\telse val+=in[0]-'0';\n\t\tif(in[1]=='A'){val+=11;ace++;}\n\t\telse if(in[1]=='T'||in[1]=='J'||in[1]=='Q'||in[1]=='K'){val+=10;}\n\t\telse val+=in[1]-'0';\n\t\tif(val>21){val-=10;ace--;}\n\t\tif(val==21){\n\t\t\tprintf(\"blackjack\\n\");continue;\n\t\t}\n\t\tint at=2;\n\t\twhile((val<17||(val==17&&ace))&&at<10){\n\t\t\tif(in[at]=='A'){val+=11;ace++;}\n\t\t\telse if(in[at]=='T'||in[at]=='J'||in[at]=='Q'||in[at]=='K'){val+=10;}\n\t\t\telse val+=in[at]-'0';\n\t\t\tif(val>21&&ace){val-=10;ace--;}\n\t\t\tat++;\n\t\t}\n\t\tif(val>21)printf(\"bust\\n\");\n\t\telse printf(\"%d\\n\",val);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<string,int> cards;\n\nint main() {\n\tint n=in();\n\tcards[\"A\"]=1;\n\tcards[\"2\"]=2;\n\tcards[\"3\"]=3;\n\tcards[\"4\"]=4;\n\tcards[\"5\"]=5;\n\tcards[\"6\"]=6;\n\tcards[\"7\"]=7;\n\tcards[\"8\"]=8;\n\tcards[\"9\"]=9;\n\tcards[\"T\"]=10;\n\tcards[\"J\"]=10;\n\tcards[\"Q\"]=10;\n\tcards[\"K\"]=10;\n\twhile(n--){\n\t\tvint hand,deck;\n\t\tstring str;\n\t\trep(i,2){\n\t\t\tcin>>str;\n\t\t\thand.PB(cards[str]);\n\t\t}\n\t\trep(i,8){\n\t\t\tcin>>str;\n\t\t\tdeck.PB(cards[str]);\n\t\t}\n\t\tsort(all(hand));\n\t\tif(hand[0]==1&&hand[1]==10){\n\t\t\tcout<<\"blackjack\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tint sum;\n\t\trep(i,9){\n\t\t\tsum=0;\n\t\t\trep(j,sz(hand)){\n\t\t\t\tsum+=hand[j];\n\t\t\t}\n\t\t\tif(sum<=11&&hand[0]==1)sum+=10;\n\t\t\tif(sum>17||hand[0]!=1&&sum==16)break;\n\t\t\tif(i==8)break;\n\t\t\thand.PB(deck[i]);\n\t\t\tsort(all(hand));\n\t\t}\n\t\tif(sum>21)cout<<\"bust\\n\";\n\t\telse cout<<sum<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double EPS=1e-10;\nconst int inf=1e9;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\nint main(){\n\tint z;\n\tcin>>z;\n\twhile(z--){\n\t\tvi in(10);\n\t\trep(i,10){\n\t\t\tchar c;\n\t\t\tcin>>c;\n\t\t\tif(isdigit(c))c-='0';\n\t\t\telse if(c=='A')c=11;\n\t\t\telse c=10;\n\t\t\tin[i]=c;\n\t\t}\n\t\tint sum=in[0]+in[1];\n\t\tint co=0;\n\t\tif(in[0]==11)co++;\n\t\tif(in[1]==11)co++;\n\t\tif(co&&sum==21){\n\t\t\tcout<<\"blackjack\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(co==2){\n\t\t\tco--;\n\t\t\tsum-=10;\n\t\t}\n\t\tloop(i,2,11){\n\t\t\tif(sum<17){\n\t\t\t\tsum+=in[i];\n\t\t\t\tif(in[i]==11){\n\t\t\t\t\tco++;\n\t\t\t\t}\n\t\t\t\tif(co&&sum>21){\n\t\t\t\t\tco--;\n\t\t\t\t\tsum-=10;\n\t\t\t\t}\n\t\t\t}else if(sum==17){\n\t\t\t\tif(co){\n\t\t\t\t\tco--;\n\t\t\t\t\tsum-=10;\n\t\t\t\t\ti--;\n\t\t\t\t}else break;\n\t\t\t}else break;\t\t\n\t\t}\n\t\tif(sum<22)cout<<sum<<endl;\n\t\telse cout<<\"bust\"<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\nusing namespace std;\n\nint getp(int& acnt, char c)\n{\n\tif(isdigit(c)) return c-'0';\n\n\tif(c=='A')\n\t{\n\t\tacnt++;\n\t\treturn 1;\n\t}\n\n\treturn 10;\n\t\n}\n\nint main()\n{\n\tint N;\n\tcin >> N;\n\twhile(N--)\n\t{\n\t\tint acnt=0, tot=0;\n\t\tchar in;\n\t\tfor(int i=0; i<2; i++)\n\t\t{\n\t\t\tcin >> in;\n\t\t\ttot+=getp(acnt, in);\n\t\t}\n\t\tchar d[8];\n\t\tfor(int i=0; i<8; i++)\n\t\t\tcin >> d[i];\n\n\t\tif(acnt&&tot==11)\n\t\t{\n\t\t\tcout << \"Blackjack\" << endl;\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tfor(int i=0; i<8; i++)\n\t\t{\n\t\t\tif(tot>16) break;\n\t\t\tif(acnt&&tot>7) break;\n\n\t\t\ttot+=getp(acnt, d[i]);\n\t\t}\n\n\t\tif(acnt&&tot<=11) tot+=10;\n\n\t\tif(tot>21) cout << \"bust\" << endl;\n\t\telse cout << tot << endl;\n\t}\n}"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative\nimport Control.Monad\nimport Data.List\n\nmain :: IO ()\nmain = do\n  n <- readLn\n  replicateM n (solve <$> f <*> f) >>= mapM_ putStrLn\n  where\n    f = map toCard <$> words <$> getLine\n\nsolve :: [[Int]] -> [[Int]] -> String\nsolve [dl0, dl1] pls\n  | ipt == [21, 11] = \"blackjack\"\n  | otherwise = f ipt pls\n  where\n    ipt = calcbj dl0 dl1\n    f pt pls\n      | null pt = \"bust\"\n      | head pt > 17 || pt == [17] = show . head $ pt\n      | otherwise = f (calcbj pt (head pls)) (tail pls)\n\ntoCard :: String -> [Int]\ntoCard x\n  | x == \"A\" = [11, 1]\n  | x `elem` [\"T\", \"J\", \"Q\", \"K\"] = [10]\n  | otherwise = [read x]\n\ncalcbj :: [Int] -> [Int] -> [Int]\ncalcbj xs ys = nub $ do\n  x <- xs\n  y <- ys\n  guard $ x + y < 22\n  return $ x + y\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint card(char c){\n\tif(c=='A'){\n\t\treturn 11;\n\t}\n\telse if((c<'2')||(c>'9')){\n\t\treturn 10;\n\t}\n\telse{\n\t\treturn (int)c-48;\n\t}\n}\n\nvoid doit(){\n\tchar c[10];\n\tchar s[17];\n\tint cn;\n\tint i;\n\tint sum=0;\n\tint f=0;\n\tscanf(\"%c\",&c[0]);\n\tscanf(\"%c %c\\n\",&c[0],&c[1]);\n\tfor(i=2;i<9;i++){\n\t\tscanf(\"%c \",&c[i]);\n\t}\n\tscanf(\"%c\",&c[9]);\n\ti=0;\n\twhile((i<10)&&((sum<=16)||((sum==17)&&(f>0)))){\n\t\tcn=card(c[i]);\n\t\tif(cn==11){\n\t\t\tf++;\n\t\t}\n\t\tsum+=cn;\n\t\tif((sum>21)&&(f>0)){\n\t\t\tsum-=10;\n\t\t\tf--;\n\t\t}\n\t\ti++;\n\t}\n\tif(sum>21){\n\t\tprintf(\"bust\\n\");\n\t}\n\telse if((sum==21)&&(i==2)){\n\t\tprintf(\"blackjack\\n\");\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",sum);\n\t}\n}\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n>0){\n\t\tdoit();\n\t\tn--;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint A;\nint f(char a){\n  int i=10;\n  if('2'<=a&&a<='9')i=a-'0';\n  if(a=='A'){\n    A++;\n    i++;\n  }\n  return i;\n}\nint main(){\n  int n,i,j,p;\n  char a,b,s[10];\n  scanf(\"%d\",&n);\n  while(n--){\n    scanf(\" %c %c\",&a,&b);\n    for(i=j=A=0;i<8;i++)scanf(\" %c\",&s[i]);\n    if(a+b=='A'+'J')printf(\"blackjack\\n\");\n    else{\n      p=f(a)+f(b);//printf(\"%d \",p);\n      if(p==22&&A){\n\tA--;\n\tp-=10;\n      }\n      while(p<17){\n\tp+=f(s[j++]);//printf(\"%d \",p);\n\tif(p>21&&A){\n\t  A--;\n\t  p-=10;\n\t}\n      }\n      if(p>21)printf(\"bust\\n\");\n      else    printf(\"%d\\n\",p);\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint card(char c){\n\tif(c=='A'){\n\t\treturn 11;\n\t}\n\telse if((c<'2')||(c>'9')){\n\t\treturn 10;\n\t}\n\telse{\n\t\treturn (int)c-48;\n\t}\n}\n\nvoid doit(){\n\tchar c[10];\n\tchar s[17];\n\tint cn;\n\tint i;\n\tint sum=0;\n\tint f=0;\n\tscanf(\"%c\",&c[0]);\n\tscanf(\"%c %c\\n\",&c[0],&c[1]);\n\tfor(i=2;i<9;i++){\n\t\tscanf(\"%c \",&c[i]);\n\t}\n\tscanf(\"%c\",&c[9]);\n\ti=0;\n\twhile((i<10)&&((sum<=16)||(f>0))){\n\t\tcn=card(c[i]);\n\t\tif(cn==11){\n\t\t\tf++;\n\t\t}\n\t\tsum+=cn;\n\t\tif((sum>21)&&(f>0)){\n\t\t\tsum-=10;\n\t\t\tf--;\n\t\t}\n\t\ti++;\n\t}\n\tif(sum>21){\n\t\tprintf(\"bust\\n\");\n\t}\n\telse if((sum==21)&&(i==2)){\n\t\tprintf(\"blackjack\\n\");\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",sum);\n\t}\n}\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n>0){\n\t\tdoit();\n\t\tn--;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint card(char c){\n\tif(c=='A'){\n\t\treturn 11;\n\t}\n\telse if((c<'2')||(c>'9')){\n\t\treturn 10;\n\t}\n\telse{\n\t\treturn (int)c-48;\n\t}\n}\n\nvoid doit(){\n\tchar c[10];\n\tchar s[17];\n\tint cn;\n\tint i;\n\tint sum=0;\n\tint f=0;\n\tscanf(\"%c\",&c[0]);\n\tscanf(\"%c %c\\n\",&c[0],&c[1]);\n\tfor(i=2;i<9;i++){\n\t\tscanf(\"%c \",&c[i]);\n\t}\n\tscanf(\"%c\",&c[9]);\n\ti=0;\n\twhile((i<10)&&(sum<=16)){\n\t\tcn=card(c[i]);\n\t\tif(cn==11){\n\t\t\tf++;\n\t\t}\n\t\tsum+=cn;\n\t\tif((sum>21)&&(f==1)){\n\t\t\tsum-=10;\n\t\t}\n\t\ti++;\n\t}\n\tif(sum>21){\n\t\tprintf(\"bust\\n\");\n\t}\n\telse if((sum==21)&&(i==2)){\n\t\tprintf(\"blackjack\\n\");\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",sum);\n\t}\n}\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n>0){\n\t\tdoit();\n\t\tn--;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 2024: Blackjack\n// 2017.11.04 bal4u@uu\n\n#include <stdio.h>\n\nint score[10];\nint tr['Z'];\n\nint main()\n{\n\tint cno, i, s, ace;\n\tchar buf[3];\n\n\ttr['A'] = 1, tr['T'] = tr['J'] = tr['Q'] = tr['K'] = 10;\n\tfor (i = 2; i <= 9; i++) tr[i+'0'] = i;\n\n\tscanf(\"%d\", &cno); while (cno--) {\n\t\tfor (i = 0; i < 10; i++) scanf(\"%s\", buf), score[i] = tr[*buf];\n\t\tace = 0;\n\t\tfor (s = 0, i = 0; ; i++) {\n\t\t\tif (i == 10) { printf(\"%d\\n\", s); break; }\n\t\t\tif (s < 17 || s == 17 && ace) {\n\t\t\t\tif (score[i] == 1 && s + 11 <= 21) s += 11, ace = 1;\n\t\t\t\telse s += score[i];\n\t\t\t\tif (s > 21 && ace) s -= 10, ace = 0;\n\t\t\t\tif (i == 1 && s == 21) { puts(\"blackjack\"); break; }\n\t\t\t\tif (s > 21) { puts(\"bust\"); break; }\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint card(char c){\n\tif(c=='A'){\n\t\treturn 11;\n\t}\n\telse if((c<'2')||(c>'9')){\n\t\treturn 10;\n\t}\n\telse{\n\t\treturn (int)c-48;\n\t}\n}\n\nvoid doit(){\n\tchar c[10];\n\tchar s[17];\n\tint cn;\n\tint i;\n\tint sum=0;\n\tint f=0;\n\tscanf(\"%c\",&c[0]);\n\tscanf(\"%c %c\\n\",&c[0],&c[1]);\n\tfor(i=2;i<9;i++){\n\t\tscanf(\"%c \",&c[i]);\n\t}\n\tscanf(\"%c\",&c[9]);\n\ti=0;\n\twhile((i<10)&&(sum<=16)){\n\t\tcn=card(c[i]);\n\t\tif(cn==11){\n\t\t\tf++;\n\t\t}\n\t\tsum+=cn;\n\t\tif((sum>21)&&(f>0)){\n\t\t\tsum-=10;\n\t\t\tf--;\n\t\t}\n\t\ti++;\n\t}\n\tif(sum>21){\n\t\tprintf(\"bust\\n\");\n\t}\n\telse if((sum==21)&&(i==2)){\n\t\tprintf(\"blackjack\\n\");\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",sum);\n\t}\n}\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n>0){\n\t\tdoit();\n\t\tn--;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2024\nTitle blackjack\n*/\n#include <stdio.h>\n// Select Below\n//#include <stdlib.h>\n//#include <string.h>\n//#include <float.h>\n//#include <math.h>\n//#include <limits.h>\n//Global data section\nint N;\nchar d1,d2;\nchar pile[8];\nint acef;\nint softf;//including A that counts as 11\n//\nint   eval_card(char c)\n {\n   if(c=='T' || c=='J' || c=='Q' || c=='K')\n     return(10);\n   if(c=='A')\n     return(1);\n   return(c - '0');\n }\nint point(int c)\n{\n  int i,ret;\n\n  ret=0;\n\n  for(i=0;i<c+2;i++)\n    {\n      ret += eval_card(pile[i]);\n      if(pile[i]=='A')\n\tacef=-1;\n    }\n  softf=0;\n  if(ret < 12 && acef)\n    { softf=-1;\n      ret += 10;\n    }\n  return(ret);\n}\n\nmain()\n{\n  int i,j,count,sum;\n  char s[20],s2[20];\n\n  while(EOF != scanf(\"%d\\n\",&N) && N)\n    {\n      for(i=0;i<N;i++)\n\t{\n\t  fgets(s,20,stdin);\n\t  pile[0]=s[0];pile[1]=s[2];\n\t  fgets(s,20,stdin);\n\t  pile[2]=s[0];pile[3]=s[2];pile[4]=s[4];pile[5]=s[6];\n\t  pile[6]=s[8];pile[7]=s[10];pile[8]=s[12];pile[9]=s[14];\n\t  count=0;acef=0;\n\t    while(point(count) < 17 ||point(count) == 17 && softf && count < 8)\n\t      {  //printf(\"%d %d\\n\",count,point(count));\n\t      count++;\n\t      }\n\t    sum=point(count);\n\t    if(count==0 && sum == 21)\n\t      printf(\"blackjack\\n\");\n\t    else if(sum < 22)\n\t      printf(\"%d\\n\",sum);\n\t    else\n\t      printf(\"bust\\n\");\n\t}\n\n    }\n\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint A;\nint f(char a){\n  int i=10;\n  if('2'<=a&&a<='9')i=a-'0';\n  if(a=='A'){\n    A++;\n    i++;\n  }\n  return i;\n}\nint main(){\n  int n,i,j,p;\n  char a,b,s[10];\n  scanf(\"%d\",&n);\n  while(n--){\n    scanf(\" %c %c\",&a,&b);\n    for(i=j=A=0;i<8;i++)scanf(\" %c\",&s[i]);\n    if(a+b=='A'+'J')printf(\"blackjack\\n\");\n    else{\n      p=f(a)+f(b);//printf(\"%d \",p);\n      if(p==22&&A){\n\tA--;\n\tp-=10;\n      }\n      while(p<17||p==17&&A){\n\tp+=f(s[j++]);//printf(\"%d \",p);\n\tif(p>21&&A){\n\t  A--;\n\t  p-=10;\n\t}\n      }\n      if(p>21)printf(\"bust\\n\");\n      else    printf(\"%d\\n\",p);\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint A;\nint f(char a){\n  char i,s[]={\"0023456789TJQKA\"};\n  for(i=0;s[i]-a;i++);\n  if(i==11)A++;\n  return i;\n}\nint main(){\n  int n,i,j,p;\n  char a,b,s[10];\n  scanf(\"%d\",&n);\n  while(n--){\n    scanf(\" %c %c\",&a,&b);\n    for(i=j=A=0;i<8;i++)scanf(\" %c\",&s[i]);\n    if(a+b=='A'+'J')printf(\"blackjack\\n\");\n    else{\n      p=f(a)+f(b);//printf(\"%d \",p);\n      if(p==22&&A){\n\tA--;\n\tp-=10;\n      }\n      while(p<16){\n\tp+=f(s[j++]);//printf(\"%d \",p);\n\tif(p>21&&A){\n\t  A--;\n\t  p-=10;\n\t}\n      }\n      if(p>21)printf(\"bust\\n\");\n      else    printf(\"%d\\n\",p);\n    }\n  }\n  return 0;\n}\n\t\n     "
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2024\nTitle blackjack\n*/\n#include <stdio.h>\n// Select Below\n//#include <stdlib.h>\n//#include <string.h>\n//#include <float.h>\n//#include <math.h>\n//#include <limits.h>\n//Global data section\nint N;\nchar d1,d2;\nchar pile[8];\nint acef;\n//\nint   eval_card(char c)\n {\n   if(c=='T' || c=='J' || c=='Q' || c=='K')\n     return(10);\n   if(c=='A')\n     return(1);\n   return(c - '0');\n }\nint point(int c)\n{\n  int i,ret;\n\n  ret=0;\n\n  for(i=0;i<c+2;i++)\n    {\n      ret += eval_card(pile[i]);\n      if(pile[i]=='A')\n\tacef=-1;\n    }\n  if(ret < 12 && acef)\n    ret += 10;\n  return(ret);\n}\n\nmain()\n{\n  int i,j,count,sum;\n  char s[20],s2[20];\n\n  while(EOF != scanf(\"%d\\n\",&N) && N)\n    {\n      for(i=0;i<N;i++)\n\t{\n\t  fgets(s,20,stdin);\n\t  pile[0]=s[0];pile[1]=s[2];\n\t  fgets(s,20,stdin);\n\t  pile[2]=s[0];pile[3]=s[2];pile[4]=s[4];pile[5]=s[6];\n\t  pile[6]=s[8];pile[7]=s[10];pile[8]=s[12];pile[9]=s[14];\n\t  count=0;acef=0;\n\t    while(point(count) < 17 ||point(count) == 17 && acef && count < 8)\n\t      {  //printf(\"%d %d\\n\",count,point(count));\n\t      count++;\n\t      }\n\t    sum=point(count);\n\t    if(count==0 && sum == 21)\n\t      printf(\"blackjack\\n\");\n\t    else if(sum < 22)\n\t      printf(\"%d\\n\",sum);\n\t    else\n\t      printf(\"bust\\n\");\n\t}\n\n    }\n\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint A;\nint f(char a){\n  int i=10;\n  if('2'<=a&&a<='9')i=a-'0';\n  if(a=='A'){\n    A++;\n    i++;\n  }\n  return i;\n}\nint main(){\n  int n,i,j,p;\n  char a,b,s[10];\n  scanf(\"%d\",&n);\n  while(n--){\n    scanf(\" %c %c\",&a,&b);\n    for(i=j=A=0;i<8;i++)scanf(\" %c\",&s[i]);\n    if(a+b=='A'+'J')printf(\"blackjack\\n\");\n    else{\n      p=f(a)+f(b);//printf(\"%d \",p);\n      if(p==22&&A){\n\tA--;\n\tp-=10;\n      }\n      while(p<16){\n\tp+=f(s[j++]);//printf(\"%d \",p);\n\tif(p>21&&A){\n\t  A--;\n\t  p-=10;\n\t}\n      }\n      if(p>21)printf(\"bust\\n\");\n      else    printf(\"%d\\n\",p);\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n\nint main(void) {\n\tint case_num,now_case;\n\tchar cards[10][2];\n\tint i;\n\tint score,aces;\n\tscanf(\"%d\",&case_num);\n\tfor(now_case=0;now_case<case_num;now_case++) {\n\t\tfor(i=0;i<10;i++)scanf(\"%s\",cards[i]);\n\t\tscore=aces=0;\n\t\tfor(i=0;i<2;i++) {\n\t\t\tif(isdigit(cards[i][0])) {\n\t\t\t\tscore+=cards[i][0]-'0';\n\t\t\t} else if(cards[i][0]=='A') {\n\t\t\t\tscore+=11;\n\t\t\t\taces++;\n\t\t\t} else {\n\t\t\t\tscore+=10;\n\t\t\t}\n\t\t}\n\t\tif(score==21){puts(\"blackjack\");continue;}\n\t\tfor(i=2;i<10;i++) {\n\t\t\tif(score>17 || (score==17 && aces!=1))break;\n\t\t\tif(isdigit(cards[i][0])) {\n\t\t\t\tscore+=cards[i][0]-'0';\n\t\t\t} else if(cards[i][0]=='A') {\n\t\t\t\tscore+=11;\n\t\t\t\taces++;\n\t\t\t} else {\n\t\t\t\tscore+=10;\n\t\t\t}\n\t\t\tfor(;aces>0 && score>21;aces--)score-=10;\n\t\t}\n\t\tif(score>21)puts(\"bust\"); else printf(\"%d\\n\",score);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n\nint main(void) {\n\tint case_num,now_case;\n\tchar cards[10][2];\n\tint i;\n\tint score,aces;\n\tscanf(\"%d\",&case_num);\n\tfor(now_case=0;now_case<case_num;now_case++) {\n\t\tfor(i=0;i<10;i++)scanf(\"%s\",cards[i]);\n\t\tscore=aces=0;\n\t\tfor(i=0;i<2;i++) {\n\t\t\tif(isdigit(cards[i][0])) {\n\t\t\t\tscore+=cards[i][0]-'0';\n\t\t\t} else if(cards[i][0]=='A') {\n\t\t\t\tscore+=11;\n\t\t\t\taces++;\n\t\t\t} else {\n\t\t\t\tscore+=10;\n\t\t\t}\n\t\t\tfor(;aces>0 && score>21;aces--)score-=10;\n\t\t}\n\t\tif(score==21){puts(\"blackjack\");continue;}\n\t\tfor(i=2;i<10;i++) {\n\t\t\tif(score>17 || (score==17 && aces!=1))break;\n\t\t\tif(isdigit(cards[i][0])) {\n\t\t\t\tscore+=cards[i][0]-'0';\n\t\t\t} else if(cards[i][0]=='A') {\n\t\t\t\tscore+=11;\n\t\t\t\taces++;\n\t\t\t} else {\n\t\t\t\tscore+=10;\n\t\t\t}\n\t\t\tfor(;aces>0 && score>21;aces--)score-=10;\n\t\t}\n\t\tif(score>21)puts(\"bust\"); else printf(\"%d\\n\",score);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n\nint N,i,j,c,a,b;\nchar D[20];\nint cv(char c)\n{\n\tif(c<';')return c-'0';\n\telse if(c=='A'){a++;return 11;}\n\telse return 10;\n}\nint main()\n{\n\tscanf(\"%d\\n\",&N);\n\tfor(;N--;)\n\t{\n\t\tfor(i=0;i<10;i++)\n\t\t\tscanf(\"%c%*c\",D+i);\n\t\tfor(i=1;;i++)\n\t\t{\n\t\t\tfor(j=a=c=0;j<=i;j++)\n\t\t\t\tc+=cv(D[j]);\n\t\t\tfor(b=c;b>21&&a--;)b-=10;\n\t\t\tif(b>17||(b==17&&!a))break;\n\t\t}\n\t\tif(b==21&&i==1)puts(\"blackjack\");\n\t\telse if(b>21)puts(\"bust\");\n\t\telse printf(\"%d\\n\",b);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint A;\nint f(char a){\n  int i=10;\n  if('2'<=a&&a<='9')i=a-'0';\n  if(a=='A'){\n    A++;\n    i++;\n  }\n  return i;\n}\nint main(){\n  int n,i,j,p;\n  char a,b,s[10];\n  scanf(\"%d\",&n);\n  while(n--){\n    scanf(\" %c %c\",&a,&b);\n    for(i=j=A=0;i<8;i++)scanf(\" %c\",&s[i]);\n    p=f(a)+f(b);//printf(\"%d \",p);\n    if(p==22&&A){\n      A--;\n      p-=10;\n    }\n    if(A&&p==21)printf(\"blackjack\\n\");\n    else{\n      while(p<17||p==17&&A){\n\tp+=f(s[j++]);//printf(\"%d \",p);\n\tif(p>21&&A){\n\t  A--;\n\t  p-=10;\n\t}\n      }\n      if(p>21)printf(\"bust\\n\");\n      else    printf(\"%d\\n\",p);\n    }\n  }\n  return 0;\n}\n\t\n     "
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s;\n\t\twhile ((s = stdIn.readLine()) != null) {\n\t\t\tint setc = Integer.valueOf(s);\n\t\t\tfor (int i = 0; i < setc; i++) {\n\t\t\t\t// read initial cards and deal cards\n\t\t\t\tString ini = stdIn.readLine();\n\t\t\t\tString deal = stdIn.readLine();\n\t\t\t\tString[] inis = ini.split(\" \");\n\t\t\t\tString[] deals = deal.split(\" \");\n\t\t\t\t// process dealers action\n\t\t\t\tDealer d = new Dealer(inis);\n\t\t\t\td.action(deals);\n\t\t\t}\n\t\t}\n\t\tSystem.exit(0);\n\t}\n}\n\nclass Dealer {\n\tprivate int score = 0;\n\tprivate int ace11 = 0;\n\tprivate int piece = 0;\n\n\t// first 2 cards\n\tDealer(String[] inis) {\n\t\tthis.addcard(inis[0]);\n\t\tthis.addcard(inis[1]);\n\t}\n\n\t// hits card until stand, and output result. otherwise\n\tpublic void action(String[] deals) {\n\t\tfor (int i = 0; this.isHit(); i++)\n\t\t\tthis.addcard(deals[i]);\n\t\t;\n\t\tif (score == 21 && piece == 2)\n\t\t\tSystem.out.println(\"blackjack\");\n\t\telse if (score > 21)\n\t\t\tSystem.out.println(\"bust\");\n\t\telse\n\t\t\tSystem.out.println(score);\n\n\t}\n\n\t// judge hits or stand\n\tprivate boolean isHit() {\n\t\tif (score > 21 && ace11 > 0) {\n\t\t\tscore -= 10;\n\t\t\t--ace11;\n\t\t\treturn (isHit());\n\t\t}\n\t\tif (score > 17)\n\t\t\treturn false;\n\t\tif (score == 17 && ace11 > 0) {\n\t\t\tscore -= 10;\n\t\t\t--ace11;\n\t\t\treturn true;\n\t\t}\n\t\treturn true;\n\t}\n\n\t// hits one card\n\tprivate void addcard(String s) {\n\t\tswitch (s) {\n\t\tcase (\"A\"):\n\t\t\tscore += 11;\n\t\t\tace11 += 1;\n\t\t\tbreak;\n\t\tcase (\"T\"):\n\t\tcase (\"J\"):\n\t\tcase (\"Q\"):\n\t\tcase (\"K\"):\n\t\t\tscore += 10;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tscore += Integer.valueOf(s);\n\t\t\tbreak;\n\t\t}\n\t\tpiece += 1;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint p;\n\tboolean flag;\n\t\n\tvoid check(char cc){\n\t\tif(cc=='A'){\n\t\t\tif(p+11<=21){\n\t\t\t\tflag = true;\n\t\t\t\tp+=11;\n\t\t\t}else{\n\t\t\t\tp++;\n\t\t\t}\n\t\t}else if(Character.isDigit(cc)){\n\t\t\tp+=(cc-48);\n\t\t}else{\n\t\t\tp+=10;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar[] c = new char[10];\n\t\t\tfor(int j=0;j<10;j++) c[j] = sc.next().charAt(0);\n\t\t\tflag = false;\n\t\t\tp = 0;\n\t\t\tcheck(c[0]);\n\t\t\tcheck(c[1]);\n\t\t\tif(p==21) System.out.println(\"blackjack\");\n\t\t\telse{\n\t\t\t\tfor(int j=2;j<10;j++){\n\t\t\t\t\tif((p==17 && flag) || p<17){\n\t\t\t\t\t\tcheck(c[j]);\n\t\t\t\t\t\tif(p>21 && flag){\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tp-=10;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(p>21){\n\t\t\t\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tSystem.out.println(p);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static int hand(int con, char[] array, int aces){\n\t\tint sum = 0;\n\t\t\n\t\tint ace_count = 0;\n\t\tfor(int i = 0; i < con; i++){\n\t\t\tif(array[i] == 'T' || array[i] == 'J' || array[i] == 'Q' || array[i] == 'K'){\n\t\t\t\tsum += 10;\n\t\t\t}else if(array[i] == 'A'){\n\t\t\t\tsum += (ace_count < aces ? 11 : 1);\n\t\t\t\tace_count++;\n\t\t\t}else if('0' <= array[i] && array[i] <= '9'){\n\t\t\t\tsum += array[i] - '0';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn sum;\n\t}\n\t\n\tpublic static int score(int con, char[] array, int aces){\n\t\tint max = -1;\n\t\tfor(int i = 0; i < aces; i++){\n\t\t\tint cur = hand(con, array, i);\n\t\t\tif(cur <= 21 && max < cur){\n\t\t\t\tmax = cur;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn max;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tfinal int N = sc.nextInt();\n\t\t\n\t\tfor(int tt = 0; tt < N; tt++){\n\t\t\tchar[] hands = new char[10];\n\t\t\t\n\t\t\tint ace_count = 0;\n\t\t\tfor(int i = 0; i < 10; i++){\n\t\t\t\thands[i] = sc.next().charAt(0);\n\t\t\t\tif(hands[i] == 'A'){\n\t\t\t\t\tace_count++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(hand(2, hands, 1) == 21){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tint cons = 2;\n\t\t\twhile(true){\n\t\t\t\tif(cons >= 10){\n\t\t\t\t\tcons = 9;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(hand(cons, hands, 1) == 17){\n\t\t\t\t\tcons++;\n\t\t\t\t}else{\n\t\t\t\t\tfinal int sco = score(cons, hands, ace_count);\n\t\t\t\t\t\n\t\t\t\t\tif(sco == -1){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(sco <= 16){\n\t\t\t\t\t\tcons++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfinal int sco = score(cons, hands, ace_count);\n\t\t\tif(sco == -1){\n\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(sco);\n\t\t\t}\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "public class Main{\n  public void run(java.io.InputStream in, java.io.PrintStream out){\n    java.util.Scanner sc = new java.util.Scanner(in);\n    int n, i, sum, hasa;\n    String s;\n    char c;\n    char[] d;\n    d = new char[8];\n    for(n = sc.nextInt();n-- > 0;){\n      sum = 0; hasa = 0;\n      for(i = 0;i < 2;i++){\n        s = sc.next(); c = s.charAt(0);\n        if(c >= '2' && c <= '9')sum += (int)(c - '0');\n        else if(c == 'A'){ sum += 11; hasa++; }\n        else sum += 10;\n      }\n      for(i = 0;i < 8;i++){ s = sc.next(); d[i] = s.charAt(0); }\n\n      if(sum == 21)out.println(\"blackjack\");\n      else{\n        if(sum == 22){ sum -= 10; hasa--; }\n        for(i = 0;i < 8;i++){\n          if(sum > 17 || (sum == 17 && hasa == 0)){\n            out.println(sum); break;\n          }else{\n            if(d[i] >= '2' && d[i] <= '9')sum += (int)(d[i] - '0');\n            else if(d[i] == 'A'){ sum += 11; hasa++; }\n            else sum += 10;\n            if(sum > 21 && hasa > 0){\n              sum -= 10; hasa--;\n            }else if(sum > 21){\n              out.println(\"bust\"); break;\n            }\n          }\n        }\n        if(i == 8)out.println(sum);\n      }\n    }\n\n    sc.close();\n  }\n  public static void main(String[] args){\n    (new Main()).run(System.in, System.out);\n  }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint p, ace;\n\t\n\tvoid check(char cc){\n\t\tif(cc=='A'){\n\t\t\tace++;\n\t\t\tp+=11;\n\t\t\tif(p>21){\n\t\t\t\tace--;\n\t\t\t\tp-=10;\n\t\t\t}\n\t\t}else if(Character.isDigit(cc)){\n\t\t\tp+=cc-48;\n\t\t}else{\n\t\t\tp+=10;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar[] c = new char[10];\n\t\t\tfor(int j=0;j<10;j++) c[j] = sc.next().charAt(0);\n\t\t\tace = 0;\n\t\t\tp = 0;\n\t\t\tfor(int j=0;j<2;j++) check(c[j]);\n\t\t\tif(p==21){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor(int j=2;j<10;j++){\n\t\t\t\tif(p==17 && ace>0){\n\t\t\t\t\tace--;\n\t\t\t\t\tp-=10;\n\t\t\t\t\tcheck(c[j]);\n\t\t\t\t}else if(p<17){\n\t\t\t\t\tcheck(c[j]);\n\t\t\t\t}else{\n\t\t\t\t\tif(p>21) System.out.println(\"bust\");\n\t\t\t\t\telse System.out.println(p);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main {\n    private static int calcScore(int[] hand, int n, boolean[] flag) {\n        boolean ace = false;\n        int[] score = new int[2];\n        for (int i = 0; i < n; i++) {\n            if (hand[i] == 1 && !ace) {\n                score[0] += 1;\n                score[1] += 11;\n                ace = true;\n            } else {\n                score[0] += hand[i];\n                score[1] += hand[i];\n            }\n        }\n        if (score[1] < 22) {\n            flag[0] = ace;\n            return score[1];\n        } else {\n            flag[0] = false;\n            return score[0];\n        }\n    }\n    private static int toInt(char c) {\n        if (Character.isDigit(c)) {\n            return c - '0';\n        } else {\n            switch (c) {\n                case 'T':\n                case 'J':\n                case 'Q':\n                case 'K':\n                    return 10;\n                case 'A':\n                    return 1;\n            }\n        }\n        return 0;\n    }\n    private static void solve() {\n        final Scanner scanner = new Scanner(System.in);\n        final int n = scanner.nextInt();\n\n        for (int i = 0; i < n; i++) {\n            final int[] hand = new int[10];\n            hand[0] = toInt(scanner.next().charAt(0));\n            hand[1] = toInt(scanner.next().charAt(0));\n            for (int j = 2; j < 10; j++) {\n                boolean[] flag = new boolean[1];\n                final int score = calcScore(hand, j, flag);\n                if (score < 17 || (score == 17 && flag[0])) {\n                    hand[j] = toInt(scanner.next().charAt(0));\n                } else {\n                    if (score > 21) {\n                        System.out.println(\"bust\");\n                    } else if (score == 21 && j == 2) {\n                        System.out.println(\"blackjack\");\n                    } else {\n                        System.out.println(score);\n                    }\n                    while (j++ < 10) {\n                        scanner.next();\n                    }\n                    break;\n                }\n            }\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\n\nimport java.util.*;\nimport java.math.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.math.BigInteger.*;\nimport static java.lang.Character.*;\n\nclass AOJ2010 {\n\tint points, ace;\n\tboolean hasTenPointsCard;\n\n\tpublic void run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(); sc.nextLine();\n\t\twhile(N-- > 0) {\n\t\t\tchar[] s = sc.nextLine().toCharArray();\n\t\t\tchar[] t = sc.nextLine().toCharArray();\n\t\t\tace = 0;\n\t\t\tpoints = 0;\n\t\t\thasTenPointsCard = false;\n\t\t\tfor(int i = 0; i < s.length; i += 2)\n\t\t\t\tpoint(s[i]);\n\n\t\t\tboolean bust = false;\n\t\t\tboolean bj = false;\n\t\t\tfor(int i = 0;; i += 2) {\n\t\t\t\tif(points == 21 && ace == 1 && hasTenPointsCard) {\n\t\t\t\t\tbj = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == t.length || points > 16 && ace == 0 || points > 17)\n\t\t\t\t\tbreak;\n\n\t\t\t\tpoint(t[i]);\n\n\t\t\t\tif(points > 21) {\n\t\t\t\t\tbust = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(bj ? \"blackjack\" : bust ? \"bust\" : points);\n\t\t}\n\t}\n\tvoid point(char c) {\n\t\tif(isDigit(c))\n\t\t\tpoints += c - '0';\n\t\telse if(c == 'A') {\n\t\t\tpoints += 11;\n\t\t\tace++;\n\t\t}\n\t\telse {\n\t\t\tpoints += 10;\n\t\t\thasTenPointsCard = true;\n\t\t}\n\t\twhile(ace > 0 && points > 21) {\n\t\t\tace--;\n\t\t\tpoints -= 10;\n\t\t}\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String... args) {\n\t\tnew AOJ2010().run();\n\t}\n\n\tpublic static void debug(Object... os) {\n\t\tSystem.err.println(java.util.Arrays.deepToString(os));\n\t}\n}\n\nclass Scanner {\n\tfinal java.util.Scanner sc;\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(sc.next());\n\t}\n\n\tpublic Scanner(java.io.InputStream is) {\n\t\tthis.sc = new java.util.Scanner(is);\n\t}\n\n\tpublic boolean hasNext() {\n\t\treturn sc.hasNext();\n\t}\n\n\tpublic String next() {\n\t\treturn sc.next();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(sc.next());\n\t}\n\n\tpublic String nextLine() {\n\t\treturn sc.nextLine();\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(sc.next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic Main(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint score = 0;\n\t\t\tint a = 0;\n\t\t\tString s = sc.next();\n\t\t\tString t = sc.next();\n\t\t\tString strn = sc.nextLine();\n\t\t\tString[] str = (sc.nextLine()).split(\" \");\n\t\t\tif(s.equals(\"A\")&&(t.equals(\"T\")||t.equals(\"J\")||t.equals(\"Q\")||t.equals(\"K\"))){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t} else if(t.equals(\"A\")&&(s.equals(\"T\")||s.equals(\"J\")||s.equals(\"Q\")||s.equals(\"K\"))){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif(s.equals(\"A\")){\n\t\t\t\tscore += 11;\n\t\t\t\ta++;\n\t\t\t} else if(s.equals(\"T\")||s.equals(\"J\")||s.equals(\"Q\")||s.equals(\"K\")){\n\t\t\t\tscore += 10;\n\t\t\t} else {\n\t\t\t\tscore += Integer.parseInt(s);\n\t\t\t}\n\t\t\t\n\t\t\tif(t.equals(\"A\")){\n\t\t\t\tscore += 11;\n\t\t\t\ta++;\n\t\t\t} else if(t.equals(\"T\")||t.equals(\"J\")||t.equals(\"Q\")||t.equals(\"K\")){\n\t\t\t\tscore += 10;\n\t\t\t} else {\n\t\t\t\tscore += Integer.parseInt(t);\n\t\t\t}\n\t\t\tif(score > 21){\n\t\t\t\ta--;\n\t\t\t\tscore -= 10;\n\t\t\t}\n\t\t\t\n\t\t\tfor(String st: str){\n\t\t\t\tif(st.equals(\"A\")){\n\t\t\t\t\tscore += 11;\n\t\t\t\t\ta++;\n\t\t\t\t} else if(st.equals(\"T\")||st.equals(\"J\")||st.equals(\"Q\")||st.equals(\"K\")){\n\t\t\t\t\tscore += 10;\n\t\t\t\t} else if(st.equals(\"9\")){\n\t\t\t\t\tscore += 9;\n\t\t\t\t} else if(st.equals(\"8\")){\n\t\t\t\t\tscore += 8;\n\t\t\t\t} else if(st.equals(\"7\")){\n\t\t\t\t\tscore += 7;\n\t\t\t\t} else if(st.equals(\"6\")){\n\t\t\t\t\tscore += 6;\n\t\t\t\t} else if(st.equals(\"5\")){\n\t\t\t\t\tscore += 5;\n\t\t\t\t} else if(st.equals(\"4\")){\n\t\t\t\t\tscore += 4;\n\t\t\t\t} else if(st.equals(\"3\")){\n\t\t\t\t\tscore += 3;\n\t\t\t\t} else {\n\t\t\t\t\tscore += 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twhile(score > 21 && a > 0){\n\t\t\t\t\tscore -= 10;\n\t\t\t\t\ta--;\n\t\t\t\t}\n\t\t\t\tif(score > 21){\n\t\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(score > 17){\n\t\t\t\t\tSystem.out.println(score);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "public class Main{\n  public void run(java.io.InputStream in, java.io.PrintStream out){\n    java.util.Scanner sc = new java.util.Scanner(in);\n    int n, i, sum;\n    String s;\n    char a;\n    char[] d;\n    boolean hasa;\n    d = new char[8];\n    for(n = sc.nextInt();n-- > 0;){\n      sum = 0; hasa = false;\n      for(i = 0;i < 2;i++){\n        s = sc.next(); a = s.charAt(0);\n        if(a >= '2' && a <= '9')sum += (int)(a - '0');\n        else if(a == 'A'){ sum += 11; hasa = true; }\n        else sum += 10;\n      }\n      for(i = 0;i < 8;i++){ s = sc.next(); d[i] = s.charAt(0); }\n      if(sum == 22)sum = 12;\n      else if(sum == 21)out.println(\"blackjack\");\n      else{\n        for(i = 0;i < 8;i++){\n          if(sum > 17 || (sum == 17 && !hasa)){\n            out.println(sum); break;\n          }else{\n            if(d[i] >= '2' && d[i] <= '9')sum += (int)(d[i] - '0');\n            else if(d[i] == 'A'){ sum += 11; hasa = true; }\n            else sum += 10;\n            if(sum > 21 && hasa){\n              sum -= 10; hasa = false;\n            }else if(sum > 21){\n              out.println(\"bust\"); break;\n            }\n          }\n        }\n      }\n    }\n\n    sc.close();\n  }\n  public static void main(String[] args){\n    (new Main()).run(System.in, System.out);\n  }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint p, ace;\n\t\n\tvoid check(char cc){\n\t\tif(cc=='A'){\n\t\t\tace++;\n\t\t\tp+=11;\n\t\t}else if(Character.isDigit(cc)){\n\t\t\tp+=cc-48;\n\t\t}else{\n\t\t\tp+=10;\n\t\t}\n\t\tif(p>21 && ace>0){\n\t\t\tace--;\n\t\t\tp-=10;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar[] c = new char[10];\n\t\t\tfor(int j=0;j<10;j++) c[j] = sc.next().charAt(0);\n\t\t\tace = 0;\n\t\t\tp = 0;\n\t\t\tcheck(c[0]);\n\t\t\tcheck(c[1]);\n\t\t\tif(p==21) System.out.println(\"blackjack\");\n\t\t\telse{\n\t\t\t\tfor(int j=2;j<10;j++){\n\t\t\t\t\tif(p==17 && ace>0 || p<17) check(c[j]);\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(p>21) System.out.println(\"bust\");\n\t\t\t\t\t\telse System.out.println(p);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    int n;\n    int deal, ace; // ace = 1のカードで11カウントしている枚数\n    String[] c;\n    boolean hit, bj;\n\n    void run(){\n\tn = sc.nextInt();\n\twhile(n>0){\n\t    n--;\n\t    ace = 0;\n\t    bj = false;\n\t    deal = get(sc.next()) + get(sc.next());\n\t    c = new String[8];\n\t    for(int i=0; i<c.length; i++)\n\t\tc[i] = sc.next();\n\t    hit = check();\n\n\t    if(deal==21) bj=true;\n\n\t    int k=0;\n\t    while(hit && k<c.length){\n\t\tdeal += get(c[k]);\n\t\tk++;\n\t\thit = check();\n\t    }\n\n\t    System.out.println\n\t\t(bj ? \"blackjack\":deal>21 ? \"bust\":deal);\n\t}\n    }\n\n    boolean check(){\n\twhile(ace>0 && deal>21){\n\t    ace--;\n\t    deal -= 10;\n\t}\n\tif(deal<=16) return true;\n\telse if(deal==17 && ace>0){\n\t    ace--;\n\t    deal -= 10;\n\t    return true;\n\t}\n\treturn false;\n    }\n\n    int get(String k){\n\tif(k.equals(\"A\")){\n\t    ace++;\n\t    return 11;\n\t}\n\telse if(k.equals(\"K\")||k.equals(\"Q\")||k.equals(\"J\")||k.equals(\"T\"))\n\t    return 10;\n\n\telse return Integer.parseInt(k);\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Blackjack\npublic class Main{\n\n\tchar[] s;\n\tint res;\n\tboolean bj;\n\t\n\tint f(char c){\n\t\tif(Character.isDigit(c))return c-'0';\n\t\treturn c=='A'?1:10;\n\t}\n\t\n\tboolean dfs(int k, int sum, boolean ace){\n\t\tif(21<sum)return false;\n\t\tif(sum<=16||sum==17&&ace){\n\t\t\tint x = f(s[k]);\n\t\t\tif(x==1){\n\t\t\t\tif(sum+11<=21)\n\t\t\t\t\tif(dfs(k+1, sum+11, true))return true;\n\t\t\t\treturn dfs(k+1, sum+1, ace); \n\t\t\t}\n\t\t\telse return dfs(k+1, sum+x, ace);\n\t\t}\n\t\telse{\n\t\t\tif(k==2&&sum==21)bj = true;\n\t\t\tif(sum<=21){\n\t\t\t\tres = Math.max(res, sum);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\tres = 0;\n\t\t\tbj = false;\n\t\t\ts = new char[10];\n\t\t\tfor(int i=0;i<10;i++)s[i]=sc.next().charAt(0);\n\t\t\tboolean f = dfs(0, 0, false);\n\t\t\tSystem.out.println(bj?\"blackjack\":!f?\"bust\":res);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic Main(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint score = 0;\n\t\t\tint a = 0;\n\t\t\tString s = sc.next();\n\t\t\tString t = sc.next();\n\t\t\tString strn = sc.nextLine();\n\t\t\tString[] str = (sc.nextLine()).split(\" \");\n\t\t\tif(s.equals(\"A\")&&(t.equals(\"T\")||t.equals(\"J\")||t.equals(\"Q\")||t.equals(\"K\"))){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t} else if(t.equals(\"A\")&&(s.equals(\"T\")||s.equals(\"J\")||s.equals(\"Q\")||s.equals(\"K\"))){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif(s.equals(\"A\")){\n\t\t\t\tscore += 11;\n\t\t\t\ta++;\n\t\t\t} else if(s.equals(\"T\")||s.equals(\"J\")||s.equals(\"Q\")||s.equals(\"K\")){\n\t\t\t\tscore += 10;\n\t\t\t} else {\n\t\t\t\tscore += Integer.parseInt(s);\n\t\t\t}\n\t\t\t\n\t\t\tif(t.equals(\"A\")){\n\t\t\t\tscore += 11;\n\t\t\t\ta++;\n\t\t\t} else if(t.equals(\"T\")||t.equals(\"J\")||t.equals(\"Q\")||t.equals(\"K\")){\n\t\t\t\tscore += 10;\n\t\t\t} else {\n\t\t\t\tscore += Integer.parseInt(t);\n\t\t\t}\n\t\t\tif(score > 21){\n\t\t\t\ta--;\n\t\t\t\tscore -= 10;\n\t\t\t}\n\t\t\t\n\t\t\tfor(String st: str){\n\t\t\t\tif(st.equals(\"A\")){\n\t\t\t\t\tscore += 11;\n\t\t\t\t\ta++;\n\t\t\t\t} else if(st.equals(\"T\")||st.equals(\"J\")||st.equals(\"Q\")||st.equals(\"K\")){\n\t\t\t\t\tscore += 10;\n\t\t\t\t} else if(st.equals(\"9\")){\n\t\t\t\t\tscore += 9;\n\t\t\t\t} else if(st.equals(\"8\")){\n\t\t\t\t\tscore += 8;\n\t\t\t\t} else if(st.equals(\"7\")){\n\t\t\t\t\tscore += 7;\n\t\t\t\t} else if(st.equals(\"6\")){\n\t\t\t\t\tscore += 6;\n\t\t\t\t} else if(st.equals(\"5\")){\n\t\t\t\t\tscore += 5;\n\t\t\t\t} else if(st.equals(\"4\")){\n\t\t\t\t\tscore += 4;\n\t\t\t\t} else if(st.equals(\"3\")){\n\t\t\t\t\tscore += 3;\n\t\t\t\t} else {\n\t\t\t\t\tscore += 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twhile(score > 21 && a > 0){\n\t\t\t\t\tscore -= 10;\n\t\t\t\t\ta--;\n\t\t\t\t}\n\t\t\t\tif(score > 21){\n\t\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(score > 17){\n\t\t\t\t\tSystem.out.println(Integer.toString(score));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint p, ace;\n\t\n\tvoid check(char cc){\n\t\tif(cc=='A'){\n\t\t\tace=1;\n\t\t\tp+=11;\n\t\t}else if(Character.isDigit(cc)){\n\t\t\tp+=cc-48;\n\t\t}else{\n\t\t\tp+=10;\n\t\t}\n\t\tif(p>21 && ace>0){\n\t\t\tace=0;\n\t\t\tp-=10;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar[] c = new char[10];\n\t\t\tfor(int j=0;j<10;j++) c[j] = sc.next().charAt(0);\n\t\t\tace = 0;\n\t\t\tp = 0;\n\t\t\tcheck(c[0]);\n\t\t\tcheck(c[1]);\n\t\t\tif(p==21) System.out.println(\"blackjack\");\n\t\t\telse{\n\t\t\t\tfor(int j=2;j<10;j++){\n\t\t\t\t\tif(p==17 && ace>0 || p<17) check(c[j]);\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(p>21) System.out.println(\"bust\");\n\t\t\t\t\t\telse System.out.println(p);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    int n;\n    int deal, ace; // ace = 1のカードで11カウントしている枚数\n    int use;\n    String[] c;\n    boolean hit;\n\n    void run(){\n\tn = sc.nextInt();\n\twhile(n>0){\n\t    n--;\n\t    ace = 0;\n\t    deal = get(sc.next()) + get(sc.next());\n\t    c = new String[8];\n\t    for(int i=0; i<c.length; i++)\n\t\tc[i] = sc.next();\n\t    hit = check();\n\t    use = 2;\n\n\t    int k=0;\n\t    while(hit && k<c.length){\n\t\tdeal += get(c[k]);\n\t\tuse++;\n\t\tk++;\n\t\thit = check();\n\t    }\n\n\t    System.out.println\n\t\t(use==2&&deal==21 ? \"blackjack\":deal>21 ? \"bust\":deal);\n\t}\n    }\n\n    boolean check(){\n\twhile(ace>0 && deal>21){\n\t    ace--;\n\t    deal -= 10;\n\t}\n\tif(deal<=16) return true;\n\telse if(deal==17 && ace>0){\n\t    ace--;\n\t    deal -= 10;\n\t    return true;\n\t}\n\treturn false;\n    }\n\n    int get(String k){\n\tif(k.equals(\"A\")){\n\t    ace++;\n\t    return 11;\n\t}\n\telse if(k.equals(\"K\")||k.equals(\"Q\")||k.equals(\"J\")||k.equals(\"T\"))\n\t    return 10;\n\n\telse return Integer.parseInt(k);\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    int n;\n    int deal, ace;\n    String[] c;\n    boolean hit;\n\n    void run(){\n\tn = sc.nextInt();\n\twhile(n>0){\n\t    n--;\n\t    ace = 0;\n\t    deal = get(sc.next()) + get(sc.next());\n\t    c = new String[8];\n\t    for(int i=0; i<c.length; i++)\n\t\tc[i] = sc.next();\n\t    hit = check();\n\n\t    int k=0;\n\t    while(hit && k<c.length){\n\t\tdeal += get(c[k]);\n\t\tk++;\n\t\thit = check();\n\t    }\n\n\t    System.out.println\n\t\t(deal==21&&ace==1 ? \"blackjack\":deal>21 ? \"bust\":deal);\n\t}\n    }\n\n    boolean check(){\n\twhile(ace>0 && deal>21){\n\t    ace--;\n\t    deal -= 10;\n\t}\n\tif(deal<=16) return true;\n\telse if(deal==17 && ace>0){\n\t    ace--;\n\t    deal -= 10;\n\t    return true;\n\t}\n\treturn false;\n    }\n\n    int get(String k){\n\tif(k.equals(\"A\")){\n\t    ace++;\n\t    return 11;\n\t}\n\telse if(k.equals(\"K\")||k.equals(\"Q\")||k.equals(\"J\")||k.equals(\"T\"))\n\t    return 10;\n\n\telse return Integer.parseInt(k);\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint p, ace;\n\tchar[] card;\n\t\n\tvoid add(char c){\n\t\tif(c=='A'){\n\t\t\tif(p+11<=21){\n\t\t\t\tace++; \n\t\t\t\tp+=11;\n\t\t\t}else{\n\t\t\t\tp++;\n\t\t\t}\n\t\t}else if(Character.isDigit(c)){\n\t\t\tp+=c-'0';\n\t\t}else{\n\t\t\tp+=10;\n\t\t}\n\t\tif(p>21 && ace>0){\n\t\t\tp-=10;\n\t\t\tace--;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int t=0;t<n;t++){\n\t\t\tcard = new char[10];\n\t\t\tfor(int i=0;i<10;i++) card[i] = sc.next().charAt(0);\n\t\t\tp = 0;\n\t\t\tace = 0;\n\t\t\tadd(card[0]);\n\t\t\tadd(card[1]);\n\t\t\tif(p==21){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=2;i<10;i++){\n\t\t\t\tif(p<17){\n\t\t\t\t\tadd(card[i]);\n\t\t\t\t}else if(p==17 && ace>0){\n\t\t\t\t\tadd(card[i]);\n\t\t\t\t}else{\n\t\t\t\t\tif(p>21) System.out.println(\"bust\");\n\t\t\t\t\telse System.out.println(p);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static int hand(int con, char[] array, int aces){\n\t\tint sum = 0;\n\t\t\n\t\tint ace_count = 0;\n\t\tfor(int i = 0; i < con; i++){\n\t\t\tif(array[i] == 'T' || array[i] == 'J' || array[i] == 'Q' || array[i] == 'K'){\n\t\t\t\tsum += 10;\n\t\t\t}else if(array[i] == 'A'){\n\t\t\t\tsum += (ace_count < aces ? 11 : 1);\n\t\t\t\tace_count++;\n\t\t\t}else if('0' <= array[i] && array[i] <= '9'){\n\t\t\t\tsum += array[i] - '0';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn sum;\n\t}\n\t\n\tpublic static int score(int con, char[] array, int aces){\n\t\tint max = -1;\n\t\tfor(int i = 0; i <= aces; i++){\n\t\t\tint cur = hand(con, array, i);\n\t\t\tif(cur <= 21 && max < cur){\n\t\t\t\tmax = cur;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn max;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tfinal int N = sc.nextInt();\n\t\t\n\t\tfor(int tt = 0; tt < N; tt++){\n\t\t\tchar[] hands = new char[10];\n\t\t\t\n\t\t\tint ace_count = 0;\n\t\t\tfor(int i = 0; i < 10; i++){\n\t\t\t\thands[i] = sc.next().charAt(0);\n\t\t\t\tif(hands[i] == 'A'){\n\t\t\t\t\tace_count++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif((hands[0] == 'A' && hands[1] == 'J') || (hands[0] == 'J' && hands[1] == 'A')){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tint cons = 2;\n\t\t\twhile(true){\n\t\t\t\tif(cons >= 10){\n\t\t\t\t\tcons = 9;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(hand(cons, hands, 1) == 17){\n\t\t\t\t\tcons++;\n\t\t\t\t}else{\n\t\t\t\t\tfinal int sco = score(cons, hands, ace_count);\n\t\t\t\t\t\n\t\t\t\t\tif(sco == -1){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(sco <= 16){\n\t\t\t\t\t\tcons++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfinal int sco = score(cons, hands, ace_count);\n\t\t\tif(sco == -1){\n\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(sco);\n\t\t\t}\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Blackjack\npublic class Main{\n\n\tchar[] s;\n\tint res;\n\tboolean bj;\n\t\n\tint f(char c){\n\t\tif(Character.isDigit(c))return c-'0';\n\t\treturn c=='A'?1:10;\n\t}\n\t\n\tvoid dfs(int k, int sum, boolean ace){\n\t\tif(k==10){\n\t\t\tif(sum<=21)res = Math.max(res, sum);\n\t\t\treturn;\n\t\t}\n\t\tif(sum<=16||sum==17&&ace){\n\t\t\tint x = f(s[k]);\n\t\t\tif(x==1){\n\t\t\t\tdfs(k+1, sum+1, ace); dfs(k+1, sum+11, true);\n\t\t\t}\n\t\t\telse dfs(k+1, sum+x, ace);\n\t\t}\n\t\telse{\n\t\t\tif(sum<=21)res = Math.max(res, sum);\n\t\t\tif(k==2&&sum==21)bj = true;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\tres = 0;\n\t\t\tbj = false;\n\t\t\ts = new char[10];\n\t\t\tfor(int i=0;i<10;i++)s[i]=sc.next().charAt(0);\n\t\t\tdfs(0, 0, false);\n\t\t\tSystem.out.println(bj?\"blackjack\":res==0?\"bust\":res);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic Main(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint score = 0;\n\t\t\tint a = 0;\n\t\t\tString s = sc.next();\n\t\t\tString t = sc.next();\n\t\t\tString strn = sc.nextLine();\n\t\t\tString[] str = (sc.nextLine()).split(\" \");\n\t\t\tif(s.equals(\"A\")&&(t.equals(\"T\")||t.equals(\"J\")||t.equals(\"Q\")||t.equals(\"K\"))){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t} else if(t.equals(\"A\")&&(s.equals(\"T\")||s.equals(\"J\")||s.equals(\"Q\")||s.equals(\"K\"))){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif(s.equals(\"A\")){\n\t\t\t\tscore += 11;\n\t\t\t\ta++;\n\t\t\t} else if(s.equals(\"T\")||s.equals(\"J\")||s.equals(\"Q\")||s.equals(\"K\")){\n\t\t\t\tscore += 10;\n\t\t\t} else {\n\t\t\t\tscore += Integer.parseInt(s);\n\t\t\t}\n\t\t\t\n\t\t\tif(t.equals(\"A\")){\n\t\t\t\tscore += 11;\n\t\t\t\ta++;\n\t\t\t} else if(t.equals(\"T\")||t.equals(\"J\")||t.equals(\"Q\")||t.equals(\"K\")){\n\t\t\t\tscore += 10;\n\t\t\t} else {\n\t\t\t\tscore += Integer.parseInt(t);\n\t\t\t}\n\t\t\tif(score > 21){\n\t\t\t\ta--;\n\t\t\t\tscore -= 10;\n\t\t\t}\n\t\t\t\n\t\t\tfor(String st: str){\n\t\t\t\tif(st.equals(\"A\")){\n\t\t\t\t\tscore += 11;\n\t\t\t\t\ta++;\n\t\t\t\t} else if(st.equals(\"T\")||st.equals(\"J\")||st.equals(\"Q\")||st.equals(\"K\")){\n\t\t\t\t\tscore += 10;\n\t\t\t\t} else if(st.equals(\"9\")){\n\t\t\t\t\tscore += 9;\n\t\t\t\t} else if(st.equals(\"8\")){\n\t\t\t\t\tscore += 8;\n\t\t\t\t} else if(st.equals(\"7\")){\n\t\t\t\t\tscore += 7;\n\t\t\t\t} else if(st.equals(\"6\")){\n\t\t\t\t\tscore += 6;\n\t\t\t\t} else if(st.equals(\"5\")){\n\t\t\t\t\tscore += 5;\n\t\t\t\t} else if(st.equals(\"4\")){\n\t\t\t\t\tscore += 4;\n\t\t\t\t} else if(st.equals(\"3\")){\n\t\t\t\t\tscore += 3;\n\t\t\t\t} else {\n\t\t\t\t\tscore += 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twhile(score > 21 && a > 0){\n\t\t\t\t\tscore -= 10;\n\t\t\t\t\ta--;\n\t\t\t\t}\n\t\t\t\tif(score > 21){\n\t\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(score > 16){\n\t\t\t\t\tSystem.out.println(score);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main {\n    private static int calcScore(int[] hand, int n, boolean[] flag) {\n        boolean ace = false;\n        int[] score = new int[2];\n        for (int i = 0; i < n; i++) {\n            if (hand[i] == 1 && !ace) {\n                score[0] += 1;\n                score[1] += 11;\n                ace = true;\n            } else {\n                score[0] += hand[i];\n                score[1] += hand[i];\n            }\n        }\n        if (score[1] < 22) {\n            flag[0] = ace;\n            return score[1];\n        } else {\n            flag[0] = false;\n            return score[0];\n        }\n    }\n    private static int toInt(char c) {\n        if (Character.isDigit(c)) {\n            return c - '0';\n        } else {\n            switch (c) {\n                case 'T':\n                case 'J':\n                case 'Q':\n                case 'K':\n                    return 10;\n                case 'A':\n                    return 1;\n            }\n        }\n        return 0;\n    }\n    private static void solve() {\n        final Scanner scanner = new Scanner(System.in);\n        final int n = scanner.nextInt();\n\n        for (int i = 0; i < n; i++) {\n            final char[] cards = new char[10];\n            for (int j = 0; j < 10; j++) {\n                cards[j] = scanner.next().charAt(0);\n            }\n            final int[] hand = new int[10];\n            hand[0] = toInt(cards[0]);\n            int index = 1;\n            int score = 0;\n            for (; index < 10; index++) {\n                hand[index] = toInt(cards[index]);\n                boolean[] flag = new boolean[1];\n                score = calcScore(hand, index + 1, flag);\n                if (!(score < 17 || (score == 17 && flag[0]))) {\n                    break;\n                }\n            }\n            if (score > 21) {\n                System.out.println(\"bust\");\n            } else if (score == 21 && index == 1) {\n                System.out.println(\"blackjack\");\n            } else {\n                System.out.println(score);\n            }\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    int n;\n    int deal, ace; // ace = 1のカードで11カウントしている枚数\n    int use;\n    String[] c;\n    boolean hit;\n\n    void run(){\n\tn = sc.nextInt();\n\twhile(n>0){\n\t    n--;\n\t    ace = 0;\n\t    deal = 0;\n\t    deal = get(sc.next()) + get(sc.next());\n\t    c = new String[8];\n\t    for(int i=0; i<c.length; i++)\n\t\tc[i] = sc.next();\n\t    hit = check();\n\t    // System.out.println(\"**\"+hit+\" \"+deal);\n\t    use = 2;\n\n\t    int k=0;\n\t    while(hit && k<c.length){\n\t\tdeal += get(c[k]);\n\t\tuse++;\n\t\tk++;\n\t\thit = check();\n\t    }\n\n\t    System.out.println\n\t\t(use==2&&deal==21 ? \"blackjack\":deal>21 ? \"bust\":deal);\n\t}\n    }\n\n    boolean check(){\n\twhile(ace>0 && deal>21){\n\t    ace--;\n\t    deal -= 10;\n\t}\n\tif(deal<=16) return true;\n\telse if(deal==17 && ace>0){\n\t    ace--;\n\t    deal -= 10;\n\t    return true;\n\t}\n\treturn false;\n    }\n\n    int get(String k){\n\tif(k.equals(\"A\")){\n\t    if(deal < 11){\n\t\tace++;\n\t\treturn 11;\n\t    }\n\t    else return 1;\n\t}\n\telse if(k.equals(\"K\")||k.equals(\"Q\")||k.equals(\"J\")||k.equals(\"T\"))\n\t    return 10;\n\n\telse return Integer.parseInt(k);\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Blackjack\npublic class Main{\n\n\tchar[] s;\n\tint res;\n\tboolean bj, b;\n\t\n\tint f(char c){\n\t\tif(Character.isDigit(c))return c-'0';\n\t\treturn c=='A'?1:10;\n\t}\n\t\n\tvoid dfs(int k, int sum, boolean ace){\n\t\tif(sum<=16||sum==17&&ace){\n\t\t\tint x = f(s[k]);\n\t\t\tif(x==1){\n\t\t\t\tdfs(k+1, sum+1, ace); dfs(k+1, sum+11, true);\n\t\t\t}\n\t\t\telse dfs(k+1, sum+x, ace);\n\t\t}\n\t\telse{\n\t\t\tif(sum<=21)res = Math.max(res, sum);\n\t\t\telse b = true;\n\t\t\tif(k==2&&sum==21)bj = true;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\tres = 0;\n\t\t\tbj = b = false;\n\t\t\ts = new char[10];\n\t\t\tfor(int i=0;i<10;i++)s[i]=sc.next().charAt(0);\n\t\t\tdfs(0, 0, false);\n\t\t\tSystem.out.println(bj?\"blackjack\":b?\"bust\":res);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\n\nimport java.util.*;\nimport java.math.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.math.BigInteger.*;\nimport static java.lang.Character.*;\n\nclass AOJ2010 {\n\tpublic void run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(); sc.nextLine();\n\t\twhile(N-- > 0) {\n\t\t\tchar[] s = sc.nextLine().toCharArray();\n\t\t\tchar[] t = sc.nextLine().toCharArray();\n\t\t\tint ace = 0;\n\t\t\tint points = 0;\n\t\t\tboolean hasTenPointsCard = false;\n\t\t\tfor(int i = 0; i < s.length; i += 2)\n\t\t\t\tif(isDigit(s[i]))\n\t\t\t\t\tpoints += s[i] - '0';\n\t\t\t\telse if(s[i] == 'A') {\n\t\t\t\t\tpoints += 11;\n\t\t\t\t\tace++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpoints += 10;\n\t\t\t\t\thasTenPointsCard = true;\n\t\t\t\t}\n\t\t\tboolean bust = false;\n\t\t\tboolean bj = false;\n\t\t\tfor(int i = 0;; i += 2) {\n\t\t\t\twhile(ace > 0 && points > 21) {\n\t\t\t\t\tace--;\n\t\t\t\t\tpoints -= 10;\n\t\t\t\t}\n\t\t\t\tif(points == 21 && ace > 0 && hasTenPointsCard) {\n\t\t\t\t\tbj = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == t.length || points > 16 && ace == 0)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif(isDigit(t[i]))\n\t\t\t\t\tpoints += t[i] - '0';\n\t\t\t\telse if(t[i] == 'A') {\n\t\t\t\t\tpoints += 11;\n\t\t\t\t\tace++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpoints += 10;\n\t\t\t\t\thasTenPointsCard = true;\n\t\t\t\t}\n\t\t\t\twhile(ace > 0 && points > 21) {\n\t\t\t\t\tace--;\n\t\t\t\t\tpoints -= 10;\n\t\t\t\t}\n\t\t\t\tif(points > 21) {\n\t\t\t\t\tbust = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(bj ? \"blackjack\" : bust ? \"bust\" : points);\n\t\t}\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String... args) {\n\t\tnew AOJ2010().run();\n\t}\n\n\tpublic static void debug(Object... os) {\n\t\tSystem.err.println(java.util.Arrays.deepToString(os));\n\t}\n}\n\nclass Scanner {\n\tfinal java.util.Scanner sc;\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(sc.next());\n\t}\n\n\tpublic Scanner(java.io.InputStream is) {\n\t\tthis.sc = new java.util.Scanner(is);\n\t}\n\n\tpublic boolean hasNext() {\n\t\treturn sc.hasNext();\n\t}\n\n\tpublic String next() {\n\t\treturn sc.next();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(sc.next());\n\t}\n\n\tpublic String nextLine() {\n\t\treturn sc.nextLine();\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(sc.next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint p, ace;\n\tchar[] card;\n\t\n\tvoid add(char c){\n\t\tif(c=='A'){\n\t\t\tif(p+11<=21){\n\t\t\t\tace++; \n\t\t\t\tp+=11;\n\t\t\t}else{\n\t\t\t\tp++;\n\t\t\t}\n\t\t}else if(Character.isDigit(c)){\n\t\t\tp+=c-'0';\n\t\t}else{\n\t\t\tp+=10;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int t=0;t<n;t++){\n\t\t\tcard = new char[10];\n\t\t\tfor(int i=0;i<10;i++) card[i] = sc.next().charAt(0);\n\t\t\tp = 0;\n\t\t\tace = 0;\n\t\t\tadd(card[0]);\n\t\t\tadd(card[1]);\n\t\t\tif(p==21){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=2;i<10;i++){\n\t\t\t\tif(p<17){\n\t\t\t\t\tadd(card[i]);\n\t\t\t\t}else if(p==17 && ace>0){\n\t\t\t\t\tace--;\n\t\t\t\t\tadd(card[i]);\n\t\t\t\t}else{\n\t\t\t\t\tif(p>21) System.out.println(\"bust\");\n\t\t\t\t\telse System.out.println(p);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\n\nimport java.util.*;\nimport java.math.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.math.BigInteger.*;\nimport static java.lang.Character.*;\n\nclass AOJ2010 {\n\tint points, ace;\n\tboolean hasTenPointsCard;\n\n\tpublic void run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(); sc.nextLine();\n\t\twhile(N-- > 0) {\n\t\t\tchar[] s = sc.nextLine().toCharArray();\n\t\t\tchar[] t = sc.nextLine().toCharArray();\n\t\t\tace = 0;\n\t\t\tpoints = 0;\n\t\t\thasTenPointsCard = false;\n\t\t\tfor(int i = 0; i < s.length; i += 2)\n\t\t\t\tpoint(s[i]);\n\n\t\t\tboolean bust = false;\n\t\t\tboolean bj = false;\n\t\t\tfor(int i = 0;; i += 2) {\n\t\t\t\tif(points == 21 && ace == 1 && hasTenPointsCard) {\n\t\t\t\t\tbj = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == t.length || points > 16 && ace == 0)\n\t\t\t\t\tbreak;\n\n\t\t\t\tpoint(t[i]);\n\n\t\t\t\tif(points > 21) {\n\t\t\t\t\tbust = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(bj ? \"blackjack\" : bust ? \"bust\" : points);\n\t\t}\n\t}\n\tvoid point(char c) {\n\t\tif(isDigit(c))\n\t\t\tpoints += c - '0';\n\t\telse if(c == 'A') {\n\t\t\tpoints += 11;\n\t\t\tace++;\n\t\t}\n\t\telse {\n\t\t\tpoints += 10;\n\t\t\thasTenPointsCard = true;\n\t\t}\n\t\twhile(ace > 0 && points > 21) {\n\t\t\tace--;\n\t\t\tpoints -= 10;\n\t\t}\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String... args) {\n\t\tnew AOJ2010().run();\n\t}\n\n\tpublic static void debug(Object... os) {\n\t\tSystem.err.println(java.util.Arrays.deepToString(os));\n\t}\n}\n\nclass Scanner {\n\tfinal java.util.Scanner sc;\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(sc.next());\n\t}\n\n\tpublic Scanner(java.io.InputStream is) {\n\t\tthis.sc = new java.util.Scanner(is);\n\t}\n\n\tpublic boolean hasNext() {\n\t\treturn sc.hasNext();\n\t}\n\n\tpublic String next() {\n\t\treturn sc.next();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(sc.next());\n\t}\n\n\tpublic String nextLine() {\n\t\treturn sc.nextLine();\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(sc.next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nimport java.math.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.math.BigInteger.*;\nimport static java.lang.Character.*;\n\nclass AOJ2010 {\n\tpublic void run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(); sc.nextLine();\n\t\twhile(N-- > 0) {\n\t\t\tchar[] s = sc.nextLine().toCharArray();\n\t\t\tchar[] t = sc.nextLine().toCharArray();\n\t\t\tint ace = 0;\n\t\t\tint points = 0;\n\t\t\tboolean hasTenPointsCard = false;\n\t\t\tfor(int i = 0; i < s.length; i += 2)\n\t\t\t\tif(isDigit(s[i]))\n\t\t\t\t\tpoints += s[i] - '0';\n\t\t\t\telse if(s[i] == 'A') {\n\t\t\t\t\tpoints += 11;\n\t\t\t\t\tace++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpoints += 10;\n\t\t\t\t\thasTenPointsCard = true;\n\t\t\t\t}\n\t\t\tboolean bust = false;\n\t\t\tboolean bj = false;\n\t\t\tfor(int i = 0; i <= t.length; i += 2) {\n\t\t\t\tif(points == 21 && ace > 0 && hasTenPointsCard) {\n\t\t\t\t\tbj = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == t.length || points > 16 && ace == 0)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif(isDigit(t[i]))\n\t\t\t\t\tpoints += t[i] - '0';\n\t\t\t\telse if(t[i] == 'A') {\n\t\t\t\t\tpoints += 11;\n\t\t\t\t\tace++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpoints += 10;\n\t\t\t\t\thasTenPointsCard = true;\n\t\t\t\t}\n\t\t\t\twhile(ace > 0 && points > 21) {\n\t\t\t\t\tace--;\n\t\t\t\t\tpoints -= 10;\n\t\t\t\t}\n\t\t\t\tif(points > 21) {\n\t\t\t\t\tbust = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(bj ? \"blackjack\" : bust ? \"bust\" : points);\n\t\t}\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String... args) {\n\t\tnew AOJ2010().run();\n\t}\n\n\tpublic static void debug(Object... os) {\n\t\tSystem.err.println(java.util.Arrays.deepToString(os));\n\t}\n}\n\nclass Scanner {\n\tfinal java.util.Scanner sc;\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(sc.next());\n\t}\n\n\tpublic Scanner(java.io.InputStream is) {\n\t\tthis.sc = new java.util.Scanner(is);\n\t}\n\n\tpublic boolean hasNext() {\n\t\treturn sc.hasNext();\n\t}\n\n\tpublic String next() {\n\t\treturn sc.next();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(sc.next());\n\t}\n\n\tpublic String nextLine() {\n\t\treturn sc.nextLine();\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(sc.next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    int n;\n    int deal, ace; // ace = 1のカードで11カウントしている枚数\n    int use;\n    String[] c;\n    boolean hit;\n\n    void run(){\n\tn = sc.nextInt();\n\twhile(n>0){\n\t    n--;\n\t    ace = 0;\n\t    deal = 0;\n\t    get(sc.next());\n\t    get(sc.next());\n\t    c = new String[8];\n\t    for(int i=0; i<c.length; i++)\n\t\tc[i] = sc.next();\n\t    hit = check();\n\t    // System.out.println(\"**\"+hit+\" \"+deal);\n\t    use = 2;\n\n\t    int k=0;\n\t    while(hit && k<c.length){\n\t\tget(c[k]);\n\t\tuse++;\n\t\tk++;\n\t\thit = check();\n\t    }\n\n\t    System.out.println\n\t\t(use==2&&deal==21 ? \"blackjack\":deal>21 ? \"bust\":deal);\n\t}\n    }\n\n    boolean check(){\n\tif(deal<=16) return true;\n\telse if(deal==17 && ace>0){\n\t    ace--;\n\t    deal -= 10;\n\t    return true;\n\t}\n\treturn false;\n    }\n\n    void get(String k){\n\tif(k.equals(\"A\")){\n\t    if(deal < 11){\n\t\tace++;\n\t\tdeal += 11;\n\t    }\n\t    else deal += 1;\n\t}\n\telse if(k.equals(\"K\")||k.equals(\"Q\")||k.equals(\"J\")||k.equals(\"T\"))\n\t    deal += 10;\n\n\telse deal += Integer.parseInt(k);\n\n\twhile(ace>0 && deal>21){\n\t    ace--;\n\t    deal -= 10;\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    int n;\n    int deal, ace; // ace = 1のカードで11カウントしている枚数\n    int use;\n    String[] c;\n    boolean hit;\n\n    void run(){\n\tn = sc.nextInt();\n\twhile(n>0){\n\t    n--;\n\t    ace = 0;\n\t    deal = 0;\n\t    deal = get(sc.next()) + get(sc.next());\n\t    c = new String[8];\n\t    for(int i=0; i<c.length; i++)\n\t\tc[i] = sc.next();\n\t    hit = check();\n\t    // System.out.println(\"**\"+hit+\" \"+deal);\n\t    use = 2;\n\n\t    int k=0;\n\t    while(hit && k<c.length){\n\t\tdeal += get(c[k]);\n\t\tuse++;\n\t\tk++;\n\t\thit = check();\n\t    }\n\n\t    System.out.println\n\t\t(use==2&&deal==21 ? \"blackjack\":deal>21 ? \"bust\":deal);\n\t}\n    }\n\n    boolean check(){\n\tif(deal<=16) return true;\n\telse if(deal==17 && ace>0){\n\t    ace--;\n\t    deal -= 10;\n\t    return true;\n\t}\n\treturn false;\n    }\n\n    int get(String k){\n\tif(k.equals(\"A\")){\n\t    if(deal < 11){\n\t\tace++;\n\t\treturn 11;\n\t    }\n\t    else return 1;\n\t}\n\telse if(k.equals(\"K\")||k.equals(\"Q\")||k.equals(\"J\")||k.equals(\"T\"))\n\t    return 10;\n\n\telse return Integer.parseInt(k);\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static int hand(int con, char[] array, boolean ace){\n\t\tint sum = 0;\n\t\t\n\t\tfor(int i = 0; i < con; i++){\n\t\t\tif(array[i] == 'T' || array[i] == 'J' || array[i] == 'Q' || array[i] == 'K'){\n\t\t\t\tsum += 10;\n\t\t\t}else if(array[i] == 'A'){\n\t\t\t\tsum += (ace ? 11 : 1);\n\t\t\t}else if('0' <= array[i] && array[i] <= '9'){\n\t\t\t\tsum += array[i] - '0';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn sum;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tfinal int N = sc.nextInt();\n\t\t\n\t\tfor(int tt = 0; tt < N; tt++){\n\t\t\tchar[] hands = new char[10];\n\t\t\t\n\t\t\tfor(int i = 0; i < 10; i++){\n\t\t\t\thands[i] = sc.next().charAt(0);\n\t\t\t}\n\t\t\t\n\t\t\tif((hands[0] == 'A' && hands[1] == 'J') || (hands[0] == 'J' && hands[1] == 'A')){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tint cons = 2;\n\t\t\twhile(true){\n\t\t\t\tif(cons >= 10){\n\t\t\t\t\tcons = 9;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(hand(cons, hands, true) == 17){\n\t\t\t\t\tcons++;\n\t\t\t\t}else if(Math.min(hand(cons, hands, false), hand(cons, hands, true)) <= 16){\n\t\t\t\t\tcons++;\n\t\t\t\t}else{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfinal int hi = hand(cons, hands, true);\n\t\t\tfinal int lo = hand(cons, hands, false);\n\t\t\t\n\t\t\tif(lo <= 21 && hi <= 21){\n\t\t\t\tSystem.out.println(hi);\n\t\t\t}else if(lo <= 21){\n\t\t\t\tSystem.out.println(lo);\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t}\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static int hand(int con, char[] array, int aces){\n\t\tint sum = 0;\n\t\t\n\t\tint ace_count = 0;\n\t\tfor(int i = 0; i < con; i++){\n\t\t\tif(array[i] == 'T' || array[i] == 'J' || array[i] == 'Q' || array[i] == 'K'){\n\t\t\t\tsum += 10;\n\t\t\t}else if(array[i] == 'A'){\n\t\t\t\tsum += (ace_count < aces ? 11 : 1);\n\t\t\t\tace_count++;\n\t\t\t}else if('0' <= array[i] && array[i] <= '9'){\n\t\t\t\tsum += array[i] - '0';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn sum;\n\t}\n\t\n\tpublic static boolean contain_ace(int con, char[] array){\n\t\tfor(int i = 0; i < con; i++){\n\t\t\tif(array[i] == 'A'){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tpublic static int score(int con, char[] array, int aces){\n\t\tint max = -1;\n\t\tfor(int i = 0; i <= aces; i++){\n\t\t\tint cur = hand(con, array, i);\n\t\t\tif(cur <= 21 && max < cur){\n\t\t\t\tmax = cur;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn max;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tfinal int N = sc.nextInt();\n\t\t\n\t\tfor(int tt = 0; tt < N; tt++){\n\t\t\tchar[] hands = new char[10];\n\t\t\t\n\t\t\tint ace_count = 0;\n\t\t\tfor(int i = 0; i < 10; i++){\n\t\t\t\thands[i] = sc.next().charAt(0);\n\t\t\t\tif(hands[i] == 'A'){\n\t\t\t\t\tace_count++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(Arrays.toString(hands));\n\t\t\t\n\t\t\tif(hand(2, hands, 1) == 21){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tint cons = 2;\n\t\t\twhile(true){\n\t\t\t\tif(cons > 10){\n\t\t\t\t\tcons = 10;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(ace_count >= 1 && contain_ace(cons, hands) && hand(cons, hands, 1) == 17){\n\t\t\t\t\tcons++;\n\t\t\t\t}else{\n\t\t\t\t\tfinal int sco = score(cons, hands, ace_count);\n\t\t\t\t\t//System.out.println(\"debug :: \" + sco);\n\t\t\t\t\tif(sco == -1){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(sco <= 16){\n\t\t\t\t\t\tcons++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfinal int sco = score(cons, hands, ace_count);\n\t\t\tif(sco == -1){\n\t\t\t\tSystem.out.println(\"bust\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(sco);\n\t\t\t}\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// BufferedReader stdIn = new BufferedReader(new FileReader(new\n\t\t// File(\"c:\\\\2024-input.txt\")));\n\n\t\tBufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s;\n\t\twhile ((s = stdIn.readLine()) != null) {\n\t\t\tint setc = Integer.valueOf(s);\n\t\t\tfor (int i = 0; i < setc; i++) {\n\t\t\t\t// read initial cards and deal cards\n\t\t\t\tString ini = stdIn.readLine();\n\t\t\t\tString deal = stdIn.readLine();\n\t\t\t\tString[] inis = ini.split(\" \");\n\t\t\t\tString[] deals = deal.split(\" \");\n\t\t\t\t// process dealers action\n\t\t\t\tDealer d = new Dealer(inis);\n\t\t\t\td.action(deals);\n\t\t\t}\n\t\t}\n\t\tSystem.exit(0);\n\t}\n}\n\nclass Dealer {\n\tprivate int score = 0;\n\tprivate int ace11 = 0;\n\tprivate int piece = 0;\n\n\t// first 2 cards\n\tDealer(String[] inis) {\n\t\tthis.addcard(inis[0]);\n\t\tthis.addcard(inis[1]);\n\t}\n\n\t// hits card until stand, and output result. otherwise\n\tpublic void action(String[] deals) {\n\t\tfor (int i = 0; this.isHit(); i++)\n\t\t\tthis.addcard(deals[i]);\n\t\t;\n\t\tif (score == 21 && piece == 2)\n\t\t\tSystem.out.println(\"blackjack\");\n\t\telse if (score > 21)\n\t\t\tSystem.out.println(\"bust\");\n\t\telse\n\t\t\tSystem.out.println(score);\n\n\t}\n\n\t// judge hits or stand\n\tprivate boolean isHit() {\n\t\tif (score > 21 && ace11 > 0) {\n\t\t\tscore -= 10;\n\t\t\t--ace11;\n\t\t\treturn (isHit());\n\t\t}\n\t\tif (score == 17 && ace11 > 0)\n\t\t\treturn true;\n\t\tif (score > 16)\n\t\t\treturn false;\n\t\telse\n\t\t\treturn true;\n\t}\n\n\t// hits one card\n\tprivate void addcard(String s) {\n\t\tswitch (s) {\n\t\tcase (\"A\"):\n\t\t\tscore += 11;\n\t\t\tace11 += 1;\n\t\t\tbreak;\n\t\tcase (\"T\"):\n\t\tcase (\"J\"):\n\t\tcase (\"Q\"):\n\t\tcase (\"K\"):\n\t\t\tscore += 10;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tscore += Integer.valueOf(s);\n\t\t\tbreak;\n\t\t}\n\t\tpiece += 1;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main {\n    private static int calcScore(int[] hand, int n, boolean[] flag) {\n        boolean ace = false;\n        int[] score = new int[2];\n        for (int i = 0; i < n; i++) {\n            if (hand[i] == 1 && !ace) {\n                score[0] += 1;\n                score[1] += 11;\n                ace = true;\n            } else {\n                score[0] += hand[i];\n                score[1] += hand[i];\n            }\n        }\n        if (score[1] < 22) {\n            flag[0] = ace;\n            return score[1];\n        } else {\n            flag[0] = false;\n            return score[0];\n        }\n    }\n    private static int toInt(char c) {\n        if (Character.isDigit(c)) {\n            return c - '0';\n        } else {\n            switch (c) {\n                case 'T':\n                case 'J':\n                case 'Q':\n                case 'K':\n                    return 10;\n                case 'A':\n                    return 1;\n            }\n        }\n        return 0;\n    }\n    private static void solve() {\n        final Scanner scanner = new Scanner(System.in);\n        final int n = scanner.nextInt();\n\n        for (int i = 0; i < n; i++) {\n            final char[] cards = new char[10];\n            for (int j = 0; j < 10; j++) {\n                cards[j] = scanner.next().charAt(0);\n            }\n            final int[] hand = new int[10];\n            int score = 0;\n            hand[0] = toInt(cards[0]);\n            hand[1] = toInt(cards[1]);\n            int index = 2;\n            for (; index < 10; index++) {\n                boolean[] flag = new boolean[1];\n                score = calcScore(hand, index, flag);\n                if (score < 17 || (score == 17 && flag[0])) {\n                    hand[index] = toInt(cards[index]);\n                } else {\n                    break;\n                }\n            }\n            if (score > 21) {\n                System.out.println(\"bust\");\n            } else if (score == 21 && index == 2) {\n                System.out.println(\"blackjack\");\n            } else {\n                System.out.println(score);\n            }\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\nimport java.util.*;\nimport java.math.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.math.BigInteger.*;\nimport static java.lang.Character.*;\n\nclass AOJ2010 {\n\tpublic void run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(); sc.nextLine();\n\t\twhile(N-- > 0) {\n\t\t\tchar[] s = sc.nextLine().toCharArray();\n\t\t\tchar[] t = sc.nextLine().toCharArray();\n\t\t\tint ace = 0;\n\t\t\tint points = 0;\n\t\t\tboolean hasTenPointsCard = false;\n\t\t\tfor(int i = 0; i < s.length; i += 2)\n\t\t\t\tif(isDigit(s[i]))\n\t\t\t\t\tpoints += s[i] - '0';\n\t\t\t\telse if(s[i] == 'A') {\n\t\t\t\t\tpoints += 11;\n\t\t\t\t\tace++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpoints += 10;\n\t\t\t\t\thasTenPointsCard = true;\n\t\t\t\t}\n\t\t\tboolean bust = false;\n\t\t\tboolean bj = false;\n\t\t\tfor(int i = 0;; i += 2) {\n\t\t\t\tif(points == 21 && ace > 0 && hasTenPointsCard) {\n\t\t\t\t\tbj = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == t.length || points > 16 && ace == 0)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif(isDigit(t[i]))\n\t\t\t\t\tpoints += t[i] - '0';\n\t\t\t\telse if(t[i] == 'A') {\n\t\t\t\t\tpoints += 11;\n\t\t\t\t\tace++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpoints += 10;\n\t\t\t\t\thasTenPointsCard = true;\n\t\t\t\t}\n\t\t\t\twhile(ace > 0 && points > 21) {\n\t\t\t\t\tace--;\n\t\t\t\t\tpoints -= 10;\n\t\t\t\t}\n\t\t\t\tif(points > 21) {\n\t\t\t\t\tbust = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(bj ? \"blackjack\" : bust ? \"bust\" : points);\n\t\t}\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String... args) {\n\t\tnew AOJ2010().run();\n\t}\n\n\tpublic static void debug(Object... os) {\n\t\tSystem.err.println(java.util.Arrays.deepToString(os));\n\t}\n}\n\nclass Scanner {\n\tfinal java.util.Scanner sc;\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(sc.next());\n\t}\n\n\tpublic Scanner(java.io.InputStream is) {\n\t\tthis.sc = new java.util.Scanner(is);\n\t}\n\n\tpublic boolean hasNext() {\n\t\treturn sc.hasNext();\n\t}\n\n\tpublic String next() {\n\t\treturn sc.next();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(sc.next());\n\t}\n\n\tpublic String nextLine() {\n\t\treturn sc.nextLine();\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(sc.next());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Blackjack\npublic class Main{\n\n\tchar[] s;\n\tint res;\n\tboolean bj;\n\t\n\tint f(char c){\n\t\tif(Character.isDigit(c))return c-'0';\n\t\treturn c=='A'?1:10;\n\t}\n\t\n\tvoid dfs(int k, int sum, boolean ace){\n\t\tif(sum<=16||sum==17&&ace){\n\t\t\tint x = f(s[k]);\n\t\t\tif(x==1){\n\t\t\t\tif(sum+11<=21)\n\t\t\t\t\tdfs(k+1, sum+11, true);\n\t\t\t\telse\n\t\t\t\t\tdfs(k+1, sum+1, ace); \n\t\t\t}\n\t\t\telse dfs(k+1, sum+x, ace);\n\t\t}\n\t\telse{\n\t\t\tif(sum<=21)res = Math.max(res, sum);\n\t\t\tif(k==2&&sum==21)bj = true;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\tres = 0;\n\t\t\tbj = false;\n\t\t\ts = new char[10];\n\t\t\tfor(int i=0;i<10;i++)s[i]=sc.next().charAt(0);\n\t\t\tdfs(0, 0, false);\n\t\t\tSystem.out.println(bj?\"blackjack\":res==0?\"bust\":res);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint p, ace;\n\tchar[] card;\n\t\n\tvoid add(char c){\n\t\tif(c=='A'){\n\t\t\tif(p+11<=21){\n\t\t\t\tace++; \n\t\t\t\tp+=11;\n\t\t\t}else{\n\t\t\t\tp++;\n\t\t\t}\n\t\t}else if(Character.isDigit(c)){\n\t\t\tp+=c-'0';\n\t\t}else{\n\t\t\tp+=10;\n\t\t}\n\t\tif(p>21 && ace>0){\n\t\t\tp-=10;\n\t\t\tace--;\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(int t=0;t<n;t++){\n\t\t\tcard = new char[10];\n\t\t\tfor(int i=0;i<10;i++) card[i] = sc.next().charAt(0);\n\t\t\tp = 0;\n\t\t\tace = 0;\n\t\t\tadd(card[0]);\n\t\t\tadd(card[1]);\n\t\t\tif(p==21){\n\t\t\t\tSystem.out.println(\"blackjack\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tboolean f = false;\n\t\t\tfor(int i=2;i<10;i++){\n\t\t\t\tif(p<17 || p==17 && ace>0){\n\t\t\t\t\tadd(card[i]);\n\t\t\t\t}else{\n\t\t\t\t\tif(p>21) System.out.println(\"bust\");\n\t\t\t\t\telse System.out.println(p);\n\t\t\t\t\tf = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f==false) System.out.println(p);\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    int n;\n    int deal, ace;\n    String[] c;\n    boolean hit;\n\n    void run(){\n\tn = sc.nextInt();\n\twhile(n>0){\n\t    n--;\n\t    ace = 0;\n\t    deal = get(sc.next()) + get(sc.next());\n\t    c = new String[8];\n\t    for(int i=0; i<c.length; i++)\n\t\tc[i] = sc.next();\n\t    hit = check();\n\n\t    int k=0;\n\t    while(hit && k<c.length){\n\t\tdeal += get(c[k]);\n\t\tk++;\n\t\thit = check();\n\t    }\n\n\t    System.out.println\n\t\t(deal==21&&ace==1 ? \"blackjack\":deal>21 ? \"bust\":deal);\n\t}\n    }\n\n    boolean check(){\n\tif(deal<=16) return true;\n\telse if(deal==17 && ace>0){\n\t    ace--;\n\t    deal -= 10;\n\t    return true;\n\t}\n\treturn false;\n    }\n\n    int get(String k){\n\tif(k.equals(\"A\")){\n\t    ace++;\n\t    return 11;\n\t}\n\telse if(k.equals(\"K\")||k.equals(\"Q\")||k.equals(\"J\")||k.equals(\"T\"))\n\t    return 10;\n\n\telse return Integer.parseInt(k);\n    }\n}"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput=input.replace(/T|J|Q|K/g,\"10\");\ninput=input.replace(/A/g,\"11\");\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var a=arr.shift().split(\" \").map(Number);\n   var b=arr.shift().split(\" \").map(Number);\n   var flag=false;\n   var sum=a[0]+a[1];\n   if(a[0]==11 || a[1]==11)flag=true;\n   if(sum==21){console.log(\"blackjack\");continue;}\n   var ans=\"\";\n   for(var i=0;i<b.length;i++){\n      if(sum<=16){\n         if(b[i]==11)flag=true;\n         if(b[i]==11 && sum+11>21)b[i]=1;\n         sum+=b[i];\n      }else if(sum==17 && flag){\n         if(b[i]==11)flag=true;\n         if(b[i]==11 && sum+11>21)b[i]=1;\n         sum+=b[i];\n      }else {\n         break;\n      }\n   }\n   if(sum>21)sum=\"bust\";\n   console.log(sum);\n}"
  },
  {
    "language": "Ruby",
    "code": "### constant\n\nC2N = {\n  'A' => 1, '2' => 2, '3' => 3, '4' => 4, '5' => 5,\n  '6' => 6, '7' => 7, '8' => 8, '9' => 9, 'T' => 10,\n  'J' => 10, 'Q' => 10, 'K' => 10\n}\n\n### subroutines\n\ndef score(hs)\n  sum = 0\n  na = 0\n  ace = false\n  \n  for hi in hs\n    sum += C2N[hi]\n    na += 1 if hi == 'A'\n  end\n\n  while sum <= 11 && na > 0\n    sum += 10\n    na -= 1\n    ace = true\n  end\n\n  [sum, ace]\nend\n\n### main\n\nn = gets.to_i\n\nn.times do\n  hs = gets.strip.split\n  pcs = gets.strip.split\n  #p [hs, pcs]\n\n  sc, ace = score(hs)\n  if sc == 21\n    puts 'blackjack'\n    next\n  end\n\n  loop do\n    sc, ace = score(hs)\n\n    if sc <= 16 || (sc == 17 && ace)\n      hs << pcs.shift\n    else\n      break\n    end\n  end\n\n  sc, ace = score(hs)\n  puts (sc > 21 ? \"bust\" : sc)\nend"
  },
  {
    "language": "Ruby",
    "code": "### constant\n\nC2N = {\n  'A' => 1, '2' => 2, '3' => 3, '4' => 4, '5' => 5,\n  '6' => 6, '7' => 7, '8' => 8, '9' => 9, 'T' => 10,\n  'J' => 10, 'Q' => 10, 'K' => 10\n}\n\n### subroutines\n\ndef score(hs)\n  sum = 0\n  na = 0\n  ace = false\n  \n  for hi in hs\n    sum += C2N[hi]\n    na += 1 if hi == 'A'\n  end\n\n  while sum <= 11 && na > 0\n    sum += 10\n    na -= 1\n    ace = true\n  end\n\n  [sum, ace]\nend\n\n### main\n\nn = gets.to_i\n\nn.times do\n  hs = gets.strip.split\n  pcs = gets.strip.split\n  #p [hs, pcs]\n\n  if (hs[0] == 'A' && hs[1] =~ /[JQK]/) ||\n     (hs[1] == 'A' && hs[0] =~ /[JQK]/)\n    puts 'blackjack'\n    next\n  end\n\n  loop do\n    sc, ace = score(hs)\n\n    if sc <= 16 || (sc == 17 && ace)\n      hs << pcs.shift\n    else\n      break\n    end\n  end\n\n  sc, ace = score(hs)\n  puts (sc > 21 ? \"bust\" : sc)\nend"
  },
  {
    "language": "Ruby",
    "code": "class BlackjackDealer\n  def initialize(hand:, deck:)\n    @hand = hand\n    @deck = deck\n  end\n\n  def get_score\n    score = 0\n    eleven_aces = 0\n\n    @hand.each do |card|\n      score += calc_card_value(card: card)\n      eleven_aces += 1 if card == 'A'\n    end\n\n    return 'blackjack' if score == 21\n\n    while keep_drawing?(score: score, eleven_aces: eleven_aces)\n      card = @deck.shift\n      score += calc_card_value(card: card)\n      eleven_aces += 1 if card == 'A'\n\n      if score > 21 && eleven_aces > 0\n        score -= 10\n        eleven_aces -= 1\n      end\n    end\n\n    return 'bust' if score > 21\n    score\n  end\n\n  private\n\n  def keep_drawing?(score:, eleven_aces:)\n    score <= 16 || (score == 17 && eleven_aces >= 1)\n  end\n\n  def calc_card_value(card:)\n    cards_values = {'A' => 11, 'T' => 10, 'J' => 10, 'Q' => 10, 'K' => 10}\n    cards_values.fetch(card) {card.to_i}\n  end\nend\n\nrounds = gets.to_i\n\nrounds.times do\n  hand = gets.split\n  deck = gets.split\n  dealer = BlackjackDealer.new(hand: hand, deck: deck)\n  puts dealer.get_score\nend"
  },
  {
    "language": "Ruby",
    "code": "n = gets.to_i\nn.times do\n  sum = 0\n  eleven_num = 0\n  k = 2\n  gets.chomp.split.each do |c|\n    if c =~ /[TJKQ]/\n      sum += 10\n    elsif c == ?A\n      if eleven_num > 0\n        sum += 1\n      else\n        sum += 11\n        eleven_num += 1\n      end\n    else\n      sum += c.to_i\n    end\n  end\n\n  gets.chomp.split.each do |c|\n    break if sum > 17\n    break if sum == 17 && eleven_num == 0\n    k += 1\n    if c =~ /[TJKQ]/\n      sum += 10\n    elsif c == ?A\n      if sum + 11 <= 21\n        sum += 11\n        eleven_num += 1\n      else\n        sum += 1\n      end\n    else\n      sum += c.to_i\n    end\n    if sum > 21 && eleven_num > 0\n      sum -= 10\n      eleven_num -= 1\n    end\n  end\n\n  if k == 2 && sum == 21\n    puts 'blackjack'\n  elsif sum > 21\n    puts 'bust'\n  else\n    p sum\n  end\nend\n\n"
  },
  {
    "language": "Ruby",
    "code": "n=gets.to_i\nhash = {\"A\"=>11,\"2\"=>2,\"3\"=>3,\"4\"=>4,\"5\"=>5,\"6\"=>6,\"7\"=>7,\"8\"=>8,\"9\"=>9,\"Q\"=>10,\"K\"=>10,\"T\"=>10,\"J\"=>10}\nn.times do\n  hand=0\n  a,b = gets.chomp.split\n  ace=0\n  if a==\"A\"|| b==\"A\"\n    ace=1\n  end\n  hand+=hash[a]\n  hand+=hash[b]\n  if hand==21\n    puts \"blackjack\"\n    gets\n    next\n  elsif hand==22\n    hand -=10\n  end\n  deck = gets.chomp.split\n  deck.each do |x|\n    if hand <= 16 || hand ==17 && ace>0\n      if x==\"A\"\n        ace+=1\n      end\n      hand+=hash[x]\n      if hand>21\n        if ace >0\n          ace-=1\n          hand-=10\n        else\n          puts \"bust\"\n          break\n        end\n      end\n    else\n      puts hand\n      break\n    end\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def score(card)\n  ace = 0\n  min = 0\n  max = 0\n  card.each do |c|\n    case c\n    when \"A\"\n      min += 1\n      ace += 1\n    when \"2\"..\"9\"\n      min += c.ord - \"0\".ord\n    else\n      min += 10\n    end\n  end\n  max = min\n  ace.times do\n    max += 10 if max + 10 <= 21\n  end\n  [min, max, ace]\nend\n\nn = gets.to_i\nn.times do\n  hand = Array.new\n  hand = gets.split\n  card = gets.split\n  case score(hand)[1]\n  when 21\n    puts \"blackjack\"\n  when 0..20\n    card.each do |c|\n      case score(hand)[1]\n      when 0..16\n        hand.push(c)\n      when 17\n        hand.push(c) if score(hand)[2] > 0\n      else\n        break\n      end\n    end\n    if score(hand)[0] > 21\n      puts \"bust\"\n    elsif score(hand)[1] <= 21\n      puts score(hand)[1]\n    else\n      puts score(hand)[0]\n    end\n  else\n    puts \"bust\"\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "n=gets.to_i\nhash = {\"A\"=>11,\"2\"=>2,\"3\"=>3,\"4\"=>4,\"5\"=>5,\"6\"=>6,\"7\"=>7,\"8\"=>8,\"9\"=>9,\"Q\"=>10,\"K\"=>10,\"T\"=>10,\"J\"=>10}\nn.times do\n  hand=0\n  a,b = gets.chomp.split\n  ace=0\n  if a==\"A\"|| b==\"A\"\n    ace=1\n  end\n  hand+=hash[a]\n  hand+=hash[b]\n  if hand==21\n    puts \"blackjack\"\n    gets\n    next\n  elsif hand==22\n    hand -=10\n    ace-=1\n  end\n  deck = gets.chomp.split\n  deck.each do |x|\n    if hand <= 16 || hand ==17 && ace==1\n      if x==\"A\"\n        ace+=1\n      end\n      hand+=hash[x]\n      if hand>21\n        if ace >0\n          ace-=1\n          hand-=10\n        else\n          puts \"bust\"\n          break\n        end\n      end\n    else\n      puts hand\n      break\n    end\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "#!/usr/bin/ruby                                                                                                                                                           \n# -*- coding: utf-8 -*-                                                                                                                                                   \n\ndef calcCard(card)\n  if card == 'A'\n    11\n  else\n    card\n  end\nend\n\nplay = gets.to_i\nplay.times {\n  hand = gets.split\n  hand.push(gets.split).flatten!\n\n  hand.map! {|ch|\n    if ch == 'T' || ch == 'J' ||\n       ch == 'Q' || ch == 'K'\n      10\n    elsif ch != 'A'\n      ch.to_i\n    else\n      ch\n    end\n  }\n  # p hand                                                                                                                                                                \n  if (hand[0] == 10 && hand[1] == 'A') ||\n     (hand[0] == 'A' && hand[1] == 10)\n    puts \"blackjack\"\n  else\n    res = calcCard(hand[0]) + calcCard(hand[1])\n    # p res                                                                                                                                                               \n    i = 1\n    while true\n      if res <= 16 || (res == 17 && hand[0..i].include?('A'))\n        i += 1\n      else\n        puts (res <= 21 ? res : \"bust\")\n        break\n      end\n      res = 0\n      hand[0..i].each {|x| res += calcCard(x) }\n    end\n  end\n}"
  },
  {
    "language": "Ruby",
    "code": "#!/usr/bin/ruby\n# -*- coding: utf-8 -*-\n\ndef calcCard(card)\n  if card == 'A'\n    11\n  else\n    card\n  end\nend\n\nplay = gets.to_i\nplay.times do\n  hand = gets.split\n  hand.push(gets.split).flatten!\n\n  hand.map! {|ch|\n    if ch == 'T' || ch == 'J' ||\n       ch == 'Q' || ch == 'K'\n      10\n    elsif ch != 'A'\n      ch.to_i\n    else\n      ch\n    end\n  }\n  # p hand\n  if (hand[0] == 10 && hand[1] == 'A') ||\n     (hand[0] == 'A' && hand[1] == 10)\n    puts \"blackjack\"\n  else\n    res = calcCard(hand[0]) + calcCard(hand[1])\n    i = 1\n    while true\n      # p res\n      if res <= 16\n        i += 1\n      elsif res == 17 && hand[0..i].include?(\"A\")\n        i += 1\n      elsif res <= 21\n        puts res\n        break\n      elsif hand[0..i].include?(\"A\")\n        ace = hand[0..i].find_index {|x| x == \"A\" }\n        hand[ace] = 1\n      else\n        puts \"bust\"\n        break\n      end\n      res = 0\n      hand[0..i].each {|x| res += calcCard(x) }\n    end\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "n=gets.to_i\nhash = {\"A\"=>11,\"2\"=>2,\"3\"=>3,\"4\"=>4,\"5\"=>5,\"6\"=>6,\"7\"=>7,\"8\"=>8,\"9\"=>9,\"Q\"=>10,\"K\"=>10,\"T\"=>10,\"J\"=>10}\nn.times do\n  hand=0\n  a,b = gets.chomp.split\n  ace=0\n  if a==\"A\"|| b==\"A\"\n    ace=1\n  end\n  hand+=hash[a]\n  hand+=hash[b]\n  if hand==21\n    puts \"blackjack\"\n    gets\n    next\n  elsif hand==22\n    hand -=10\n  end\n  deck = gets.chomp.split\n  deck.each do |x|\n    unless hand<=16 || hand==17 && ace>0\n      puts hand\n      break\n    end\n    if x==\"A\"\n      ace+=1\n    end\n    hand+=hash[x]\n    if hand>21\n      if ace >0\n        ace-=1\n        hand-=10\n      else\n        puts \"bust\"\n        break\n      end\n    end\nend\nend"
  },
  {
    "language": "Ruby",
    "code": "def score(card)\n  ace = 0\n  min = 0\n  max = 0\n  card.each do |c|\n    case c\n    when \"A\"\n      min += 1\n      ace += 1\n    when \"2\"..\"9\"\n      min += c.ord - \"0\".ord\n    else\n      min += 10\n    end\n  end\n  max = min\n  ace.times do\n    max += 10 if max + 10 <= 21\n  end\n  [min, max, ace]\nend\n\nn = gets.to_i\nn.times do\n  hand = Array.new\n  hand = gets.split\n  card = gets.split\n  case score(hand)[1]\n  when 21\n    puts \"blackjack\"\n  when 0..20\n    card.each do |c|\n      case score(hand)[0]\n      when 0..16\n        hand.push(c)\n      when 17\n        hand.push(c) if score(hand)[2] > 0\n      else\n        break\n      end\n    end\n    if score(hand)[0] > 21\n      puts \"bust\"\n    elsif score(hand)[1] <= 21\n      puts score(hand)[1]\n    else\n      puts score(hand)[0]\n    end\n  else\n    puts \"bust\"\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "class BlackjackDealer\n  def initialize(hand:, deck:)\n    @hand = hand\n    @deck = deck\n    @score = 0\n    @aces = 0\n  end\n\n  def get_score\n    @hand.each do |card|\n      @score += calc_card_value(card: card)\n      @aces += 1 if card == 'A'\n      adjust_score\n    end\n\n    return 'blackjack' if @score == 21\n\n    while keep_drawing? && @deck.any?\n      card = @deck.shift\n      @score += calc_card_value(card: card)\n      @aces += 1 if card == 'A'\n      adjust_score\n    end\n\n    return 'bust' if @score > 21\n    @score\n  end\n\n  private\n\n  def keep_drawing?\n    @score <= 16 || (@score == 17 && @aces >= 1)\n  end\n\n  def adjust_score\n    while @score > 21 && @aces > 0\n      @score -= 10\n      @aces -= 1\n    end\n  end\n\n  def calc_card_value(card:)\n    cards_values = {'A' => 11, 'T' => 10, 'J' => 10, 'Q' => 10, 'K' => 10}\n    cards_values.fetch(card) {card.to_i}\n  end\nend\n\nrounds = gets.to_i\n\nrounds.times do\n  hand = gets.split\n  deck = gets.split\n  dealer = BlackjackDealer.new(hand: hand, deck: deck)\n  puts dealer.get_score\nend"
  },
  {
    "language": "Ruby",
    "code": "#!/usr/bin/ruby\nm={\"2\"=>2,\"3\"=>3,\"4\"=>4,\"5\"=>5,\"6\"=>6,\"7\"=>7,\"8\"=>8,\"9\"=>9,\"T\"=>10,\"J\"=>10,\"Q\"=>10,\"K\"=>10,\"A\"=>11}\ngets.to_i.times{\n\ts=0\n\tace=false\n\tgets.chomp.split.each{|e|s+=m[e];if e=='A'&&m[e]==11 then ace=true;m[e]=1 end}\n\ta=gets.chomp.split\n\tif s==21 then puts 'blackjack';next end\n\ta.each{|e|\n\t\tif s>17||(s==17&&!ace) then break end\n\t\ts+=m[e];if e=='A'&&m[e]==11 then ace=true;m[e]=1 end\n\t\tif s>21&&ace then s-=10;ace=false end\n\t}\n\tputs s>21?'bust':s\n}"
  },
  {
    "language": "Ruby",
    "code": "n=gets.to_i\nhash = {\"A\"=>11,\"2\"=>2,\"3\"=>3,\"4\"=>4,\"5\"=>5,\"6\"=>6,\"7\"=>7,\"8\"=>8,\"9\"=>9,\"Q\"=>10,\"K\"=>10,\"T\"=>10,\"J\"=>10}\nn.times do\n  hand=0\n  a,b = gets.chomp.split\n  ace=0\n  if a==\"A\"|| b==\"A\"\n    ace=1\n  end\n  hand+=hash[a]\n  hand+=hash[b]\n  if hand==21\n    puts \"blackjack\"\n    gets\n    next\n  elsif hand==22\n    hand -=10\n    ace-=1\n  end\n  deck = gets.chomp.split\n  deck.each do |x|\n    if hand <= 16 || hand ==17 && ace>0\n      if x==\"A\"\n        ace+=1\n      end\n      hand+=hash[x]\n      if hand>21\n        if ace >0\n          ace-=1\n          hand-=10\n        else\n          puts \"bust\"\n          break\n        end\n      end\n    else\n      puts hand\n      break\n    end\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def score(card)\n  ace = 0\n  min = 0\n  max = 0\n  card.each do |c|\n    case c\n    when \"A\"\n      min += 1\n      ace += 1\n    when \"2\"..\"9\"\n      min += c.ord - \"0\".ord\n    else\n      min += 10\n    end\n  end\n  max = min\n  use = 0\n  ace.times do\n    if max + 10 <= 21\n      max += 10\n      use += 1\n    end\n  end\n  [min, max, use]\nend\n\nn = gets.to_i\nn.times do\n  hand = Array.new\n  hand = gets.split\n  card = gets.split\n  case score(hand)[1]\n  when 21\n    puts \"blackjack\"\n  when 0..20\n    card.each do |c|\n      case score(hand)[1]\n      when 0..16\n        hand.push(c)\n      when 17\n        hand.push(c) if score(hand)[2] > 0\n      else\n        break\n      end\n    end\n    if score(hand)[0] > 21\n      puts \"bust\"\n    elsif score(hand)[1] <= 21\n      puts score(hand)[1]\n    else\n      puts score(hand)[0]\n    end\n  else\n    puts \"bust\"\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "#!/usr/bin/ruby\nm={\"2\"=>2,\"3\"=>3,\"4\"=>4,\"5\"=>5,\"6\"=>6,\"7\"=>7,\"8\"=>8,\"9\"=>9,\"T\"=>10,\"J\"=>10,\"Q\"=>10,\"K\"=>10,\"A\"=>11}\ngets.to_i.times{\n\ts=0\n\tace=false\n\tm['A']=11\n\tgets.chomp.split.each{|e|s+=m[e];if e=='A'&&m[e]==11 then ace=true;m[e]=1 end}\n\ta=gets.chomp.split\n\tif s==21 then puts 'blackjack';next end\n\ta.each{|e|\n\t\tif s>17||(s==17&&!ace) then break end\n\t\ts+=m[e];if e=='A'&&m[e]==11 then ace=true;m[e]=1 end\n\t\tif s>21&&ace then s-=10;ace=false end\n\t}\n\tputs s>21?'bust':s\n}"
  },
  {
    "language": "Python",
    "code": "N=int(raw_input())\nfor i in range(N):\n    hand=raw_input().split()\n    deck=raw_input().split()\n    #defaulthand\n    d=0\n    points=0\n    for i in range(len(hand)):\n        if hand[i] in ['T','J','Q','K']:\n            hand[i]=10\n        elif hand[i]=='A':\n            hand[i]=11\n        else:\n           hand[i]=int(hand[i])\n    for i in range(len(deck)):\n        if deck[i] in ['T','J','Q','K']:\n            deck[i]=10\n        elif deck[i]=='A':\n            deck[i]=11\n        else:\n           deck[i]=int(deck[i])\n    points=sum(hand)\n    if points==21:\n        print 'blackjack'\n    else:\n        while(1):\n            if points>21 and 11 in hand:\n                hand.remove(11)\n                hand.append(1)\n                points=points-10\n            if (points<17) or (points<18 and 11 in hand):\n            \thand.append(deck[d])\n            \tpoints=points+deck[d]\n                d=d+1\n            else:\n                break\n        if points>21:\n            print 'bust'\n        else:\n            print points"
  }
]