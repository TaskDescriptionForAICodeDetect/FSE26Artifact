[
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    //    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n \nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==30) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n \nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "main(){}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n\nusing namespace std;\n\n#define rep(i, n) for(int i=0; i<(n); ++i)\n\nint p, q;\nvector<string> P, Q;\n\nvoid countBracket(vector<int> &rcs, string &s){\n    for(char c: s){\n        switch(c){\n            case '(': rcs[0]++; break;\n            case ')': rcs[0]--; break;\n            case '{': rcs[1]++; break;\n            case '}': rcs[1]--; break;\n            case '[': rcs[2]++; break;\n            case ']': rcs[2]--; break;\n            default: break;\n        }\n    }\n}\n\nvector<int> solve(){\n    map<vector<int>, int> indent;\n    vector<int> rcs(3, 0), res(q, -2);\n    rep(i, p-1){\n        countBracket(rcs, P[i]);\n        indent[rcs] = P[i+1].find_first_not_of('.');\n    }\n    for(int r=1; r<=20; ++r){\n        for(int c=1; c<=20; ++c){\n            for(int s=1; s<=20; ++s){\n                bool ok = true;\n                for(auto x: indent){\n                    rcs = x.first;\n                    if(r * rcs[0] + c * rcs[1] + s * rcs[2] != x.second){\n                        ok = false;\n                        break;\n                    }\n                }\n                if(!ok)continue;\n                rcs = {0, 0, 0};\n                rep(i, q){\n                    int t = r * rcs[0] + c * rcs[1] + s * rcs[2];\n                    if(res[i] == -2)res[i] = t;\n                    else if(res[i] != t)res[i] = -1;\n                    countBracket(rcs, Q[i]);\n                }\n            }\n        }\n    }\n    return res;\n}\n\nint main(){\n    while(cin >> p >> q, p|q){\n        P.resize(p); Q.resize(q);\n        rep(i, p)cin >> P[i];\n        rep(i, q)cin >> Q[i];\n        vector<int> ans(solve());\n        rep(i, q)cout << ans[i] << (i != q-1? ' ': '\\n');\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define each(itr,c) for(__typeof(c.begin()) itr=c.begin(); itr!=c.end(); ++itr)\n#define all(x) (x).begin(),(x).end()\n#define pb push_back\n#define fi first\n#define se second\n\nconst int INF=123456;\n\nint main()\n{\n    int p,q;\n    while(cin >>p >>q,p)\n    {\n        vector<int> pr(p,0),pc(p,0),ps(p,0);\n        vector<int> indent(p);\n        rep(i,p)\n        {\n            string s;\n            cin >>s;\n\n            int now=0;\n            while(now<s.size() && s[now]=='.') ++now;\n            indent[i]=now;\n\n            rep(j,s.size())\n            {\n                if(s[j]=='(') ++pr[i];\n                else if(s[j]==')') --pr[i];\n                else if(s[j]=='{') ++pc[i];\n                else if(s[j]=='}') --pc[i];\n                else if(s[j]=='[') ++ps[i];\n                else if(s[j]==']') --ps[i];\n            }\n        }\n\n        vector<int> qr(q,0),qc(q,0),qs(q,0);\n        rep(i,q)\n        {\n            string s;\n            cin >>s;\n\n            rep(j,s.size())\n            {\n                if(s[j]=='(') ++qr[i];\n                else if(s[j]==')') --qr[i];\n                else if(s[j]=='{') ++qc[i];\n                else if(s[j]=='}') --qc[i];\n                else if(s[j]=='[') ++qs[i];\n                else if(s[j]==']') --qs[i];\n            }\n        }\n\n        vector<int> ans(q,INF);\n        rep(x,20)rep(y,20)rep(z,20)\n        {\n            int R=x+1, C=y+1, S=z+1;\n\n            bool valid=true;\n            int PR=0,PC=0,PS=0;\n            rep(i,p)\n            {\n                int ex_indent=PR*R+PC*C+PS*S;\n                if(ex_indent!=indent[i])\n                {\n                    valid=false;\n                    break;\n                }\n\n                PR+=pr[i];\n                PC+=pc[i];\n                PS+=ps[i];\n            }\n\n            if(!valid) continue;\n\n            int QR=0,QC=0,QS=0;\n            rep(i,q)\n            {\n                int qq=QR*R+QC*C+QS*S;\n                if(ans[i]==INF) ans[i]=qq;\n                else if(ans[i]!=-1)\n                {\n                    if(ans[i]!=qq) ans[i]=-1;\n                }\n\n                QR+=qr[i];\n                QC+=qc[i];\n                QS+=qs[i];\n            }\n        }\n\n        rep(i,q)\n        {\n            if(i) printf(\" \");\n            printf(\"%d\", ans[i]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <complex>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n#define round first\n#define curly second.first\n#define square second.second\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\nconst int N = 21;\n\ntypedef pair<int, pii> Occ;\n\nint gcd ( int a, int b )\n{\n  int c;\n  while (a != 0) {\n     c = a; a = b%a; b = c;\n  }\n  return b;\n}\n\nint main(void){\n    for(int p, q; cin >> p >> q, p;){\n        map<Occ, int> occs;\n        Occ cnt(0, mp(0, 0));\n        vector<Occ> keys;\n\n        rep(i, p){\n            string program; cin >> program;\n\n            int ind = 0;\n            while(ind < program.size() && program.at(ind) == '.') ind++;\n\n            int gcdnum = max(1, gcd(gcd(cnt.round, cnt.curly), gcd(cnt.round, cnt.square)));\n            Occ cur(cnt.round / gcdnum, mp(cnt.curly / gcdnum, cnt.square / gcdnum));\n            occs[cur] = ind;\n            keys.pb(cur);\n\n            rep(j, program.size()){\n                switch(program.at(j)){\n                case '(':\n                    cnt.round++;\n                    break;\n                case '{':\n                    cnt.curly++;\n                    break;\n                case '[':\n                    cnt.square++;\n                    break;\n                case ')':\n                    cnt.round--;\n                    break;\n                case '}':\n                    cnt.curly--;\n                    break;\n                case ']':\n                    cnt.square--;\n                    break;\n                }\n            }\n\n            //cout << cur.round << \" \" << cur.curly << \" \" << cur.square << endl;\n            //debug(occs[cur]);\n        }\n\n        int resR = 0, resC, resS;\n\n        range(R, 1, N){\n            range(C, 1, N){\n                range(S, 1, N){\n                    bool ok = true;\n                    rep(i, keys.size()){\n                        if(R * keys[i].round + C * keys[i].curly + S * keys[i].square\n                           != occs[keys[i]]){\n                            ok = false;\n                        }\n                    }\n                    if(ok){\n                        if(resR == 0){\n                            resR = R, resC = C, resS = S;\n                        }\n                        else{\n                            resR = -1;\n                        }\n                    }\n                }\n            }\n        }\n        if(resR == -1) resR = 0;\n\n        cnt = mp(0, mp(0, 0));\n\n        rep(i, q){\n            cout << (i ? \" \":\"\");\n\n            if(resR != 0){\n                cout << resR * cnt.round + resC * cnt.curly + resS * cnt.square;\n            }\n            else{\n                int gcdnum = max(1, gcd(gcd(cnt.round, cnt.curly), gcd(cnt.round, cnt.square)));\n                Occ cur(cnt.round / gcdnum, mp(cnt.curly / gcdnum, cnt.square / gcdnum));\n                \n                if(find(all(keys), cur) != keys.end()){\n                    cout << occs[cur];\n                }\n                else{\n                    cout << -1;\n                }\n            }\n\n            string program; cin >> program;\n\n            rep(j, program.size()){\n                switch(program.at(j)){\n                case '(':\n                    cnt.round++;\n                    break;\n                case '{':\n                    cnt.curly++;\n                    break;\n                case '[':\n                    cnt.square++;\n                    break;\n                case ')':\n                    cnt.round--;\n                    break;\n                case '}':\n                    cnt.curly--;\n                    break;\n                case ']':\n                    cnt.square--;\n                    break;\n                }\n            }\n        }\n        cout << endl;\n    }\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define LOG(...) fprintf(stderr,__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort(ALL(c))\n#define RSORT(c) sort(RALL(c))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\nstruct Cond {\n    int a, b, c;\n    int v;\n};\n\nconst double EPS = 1e-8;\ntypedef vector<double> vec;\ntypedef vector<vec> mat;\n\nvec gauss_jordan(const mat& A, const vec& b) {\n    int n = A.size();\n    mat B(n, vec(n+1));\n    REP(i, n) REP(j, n) B[i][j] = A[i][j];\n    REP(i, n) B[i][n] = b[i];\n\n    REP(i, n) {\n        int pivot = i;\n        FOR(j, i, n) {\n            if (abs(B[j][i]) > abs(B[pivot][i])) pivot = j;\n        }\n        swap(B[i], B[pivot]);\n\n        if (abs(B[i][i]) < EPS) return vec();\n\n        FOR(j, i+1, n+1) B[i][j] /= B[i][i];\n        REP(j, n) {\n            if (i != j) {\n                FOR(k, i+1, n+1) B[j][k] -= B[j][i] * B[i][k];\n            }\n        }\n    }\n    vec x(n);\n    REP(i, n) x[i] = B[i][n];\n    return x;\n}\n\nint main() {\n    int p, q;\n    while (cin >> p >> q, p|q) {\n        vector<string> P(p);\n        vector<string> Q(q);\n        REP(i, p) cin >> P[i];\n        REP(i, q) cin >> Q[i];\n\n        vi level(3);\n        vector<Cond> conds;\n        REP(i, p) {\n            int indent = 0;\n            REP(j, P[i].length()) {\n                if (indent != -1 && P[i][j] == '.') {\n                    indent++;\n                } else {\n                    if (indent > 0) {\n                        conds.push_back({level[0], level[1], level[2], indent});\n//                        LOG(\"%d %d %d = %d\\n\", level[0], level[1], level[2], indent);\n                    }\n                    indent = -1;\n                }\n                switch (P[i][j]) {\n                case '(':\n                    level[0]++;\n                    break;\n                case ')':\n                    level[0]--;\n                    break;\n                case '{':\n                    level[1]++;\n                    break;\n                case '}':\n                    level[1]--;\n                    break;\n                case '[':\n                    level[2]++;\n                    break;\n                case ']':\n                    level[2]--;\n                    break;\n                }\n            }\n        }\n\n        vector<set<int>> var(3);\n\n        FOR(i, 1, 21) {\n            FOR(j, 1, 21) {\n                FOR(k, 1, 21) {\n                    bool ok = true;\n                    for (Cond c : conds) {\n                        if (i * c.a + j * c.b + k * c.c != c.v) {\n                            ok = false;\n                            break;\n                        }\n                    }\n                    if (ok) {\n                        var[0].insert(i);\n                        var[1].insert(j);\n                        var[2].insert(k);\n                    }\n                }\n            }\n        }\n\n        level = vi(3);\n\n        cout << 0;\n        FOR(i, 0, q) {\n            if (i > 0) {\n                bool determined = true;\n                int ans = 0;\n                REP(j, 3) {\n//                    LOG(\"==> %d\\n\", level[j]);\n                    if (level[j] > 0) {\n                        if (var[j].size() != 1) {\n                            determined = false;\n                            break;\n                        }\n//                        LOG(\"--> %d %d\\n\", level[j], (*var[j].begin()));\n                        ans += level[j] * (*var[j].begin());\n                    }\n                }\n                if (determined) {\n                    cout << \" \" << ans;\n                } else {\n                    bool found = false;\n                    for (Cond c : conds) {\n                        if (c.a == level[0] && c.b == level[1] && c.c == level[2]) {\n                            cout << \" \" << c.v;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        cout << \" -1\";\n                    }\n                }\n            }\n\n            REP(j, Q[i].length()) {\n                switch (Q[i][j]) {\n                case '(':\n                    level[0]++;\n                    break;\n                case ')':\n                    level[0]--;\n                    break;\n                case '{':\n                    level[1]++;\n                    break;\n                case '}':\n                    level[1]--;\n                    break;\n                case '[':\n                    level[2]++;\n                    break;\n                case ']':\n                    level[2]--;\n                    break;\n                }\n            }\n        }\n        cout << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int P, Q;\n  int r[23], c[23], s[23], indent[23];\n  int ans[23];\n  \n  while(cin >> P >> Q, P) {\n    for(int i = 0; i < P + Q; i++) {\n      string S;\n      cin >> S;\n      r[i] = count(S.begin(), S.end(), '(') - count(S.begin(), S.end(), ')');\n      c[i] = count(S.begin(), S.end(), '{') - count(S.begin(), S.end(), '}');\n      s[i] = count(S.begin(), S.end(), '[') - count(S.begin(), S.end(), ']');\n      if(i != 0) r[i] += r[i - 1], c[i] += c[i - 1], s[i] += s[i - 1];\n      for(indent[i] = 0; S[indent[i]] == '.'; ++indent[i]);\n    }\n    fill_n(ans, Q, -810);\n    ans[0] = 0;\n    for(int i = 1; i <= 20; i++) {\n      for(int j = 1; j <= 20; j++) {\n        for(int k = 1; k <= 20; k++) {\n          bool flag = true;\n          for(int l = 1; l < P; l++) {\n            flag &= i * r[l - 1] + j * c[l - 1] + k * s[l - 1] == indent[l];\n          }\n          if(!flag) continue;\n          for(int l = P; l < P + Q - 1; l++) {\n            if(ans[l - P + 1] == -810) ans[l - P + 1] = i * r[l] + j * c[l] + k * s[l];\n            else if(ans[l - P + 1] != i * r[l] + j * c[l] + l * s[l]) ans[l - P + 1] = -1;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < Q; i++) {\n      cout << ans[i] << (i + 1 == Q ? \"\\n\" : \" \");\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void){\n    int p, q;\n    while (cin>>p>>q && p) {\n        vector<vector<int> > c(4, vector<int>(p, 0));\n        for (int i = 0; i < p; i++) {\n            string t;\n            cin >> t;\n            bool f = true;\n            int cnt = 0;\n            for (int j = 0; j < t.size(); j++) {\n                if (f && t[j] == '.') cnt++;\n                else f = false;\n                if (t[j] == '(') c[0][i]++;\n                if (t[j] == ')') c[0][i]--;\n                if (t[j] == '{') c[1][i]++;\n                if (t[j] == '}') c[1][i]--;\n                if (t[j] == '[') c[2][i]++;\n                if (t[j] == ']') c[2][i]--;\n            }\n            if (i) c[3][i-1] = cnt;\n        }\n        \n        \n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p-1; j++) {\n                c[i][j+1] += c[i][j];\n            }\n        }\n        \n        vector<bool> rcs(3, false);\n        int rcs_cnt = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) rcs[i] = true;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) {\n                    rcs_cnt++;\n                    break;\n                }\n            }\n        }\n        vector<vector<int> > x(4, vector<int>());\n        for (int i = 0; i < p-1; i++) {\n            for (int k = 0; k < 4; k++) x[k].push_back(c[k][i]);\n            int cnta = 0;\n            for (int k = 0; k < 3; k++) if (c[k][i]) cnta++;\n            if (cnta < 2) continue;\n            for (int j = 0; j < p-1; j++) {\n                if (i == j) continue;\n                for (int k = 0; k < 3; k++) if (c[k][j] && c[k][j]==c[k][i]) {\n                    for (int l = 0; l < 4; l++) x[l].push_back(c[l][i]*c[k][j] - c[l][j]*c[k][i]);\n                }\n            }\n        }\n        \n        vector<int> R,C,S;\n        for (int i = 1; i < 21; i++) {\n            if (rcs[0] == false) continue;\n            for (int j = 1; j < 21; j++) {\n                if (rcs[1] == false) continue;\n                for (int k = 1; k < 21; k++) {\n                    if (rcs[2] == false) continue;\n                    bool f = true;\n                    for (int a = 0; a < x[0].size(); a++) {\n                        if (i*x[0][a] + j*x[1][a] + k*x[2][a] != x[3][a]) {\n                            f = false;\n                            break;\n                        }\n                    }\n                    if (f) R.push_back(i), C.push_back(j), S.push_back(k);\n                }\n            }\n        }\n        for (int i = 0; i < x[0].size(); i++) {\n            if (x[0][i] && !x[1][i] && !x[2][i]) R.push_back(x[3][i]/x[0][i]);\n            if (!x[0][i] && x[1][i] && !x[2][i]) C.push_back(x[3][i]/x[1][i]);\n            if (!x[0][i] && !x[1][i] && x[2][i]) S.push_back(x[3][i]/x[2][i]);\n        }\n        R.erase(unique(R.begin(), R.end()), R.end());\n        C.erase(unique(C.begin(), C.end()), C.end());\n        S.erase(unique(S.begin(), S.end()), S.end());\n        \n        vector<vector<int> > a(3, vector<int>(q, 0));\n        for (int i = 0; i < q; i++) {\n            string t;\n            cin >> t;\n            \n            for (int j = 0; j < t.size(); j++) {\n                if (t[j] == '(') a[0][i]++;\n                if (t[j] == ')') a[0][i]--;\n                if (t[j] == '{') a[1][i]++;\n                if (t[j] == '}') a[1][i]--;\n                if (t[j] == '[') a[2][i]++;\n                if (t[j] == ']') a[2][i]--;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < q-1; j++) {\n                a[i][j+1] += a[i][j];\n            }\n        }\n        \n        vector<int> ans;\n        ans.push_back(0);\n        \n        if (rcs_cnt >= 2 && R.size() == 1 && C.size() == 1 && S.size() == 1) {\n            for (int i = 0; i < q-1; i++) ans.push_back(R[0]*a[0][i] + C[0]*a[1][i] + S[0]*a[2][i]);\n        }\n        else {\n            for (int i = 0; i < q-1; i++) {\n                bool f = false;\n                if (!a[0][i] && !a[1][i] && !a[2][i]) {\n                    ans.push_back(0);\n                    continue;\n                }\n                else if (a[0][i] && R.size()==1 && !a[1][i] && !a[2][i]) {\n                    ans.push_back(R[0]*a[0][i]);\n                    continue;\n                }\n                else if (a[1][i] && C.size()==1 && !a[0][i] && !a[2][i]) {\n                    ans.push_back(C[0]*a[1][i]);\n                    continue;\n                }\n                else if (a[2][i] && S.size()==1 && !a[0][i] && !a[1][i]) {\n                    ans.push_back(S[0]*a[2][i]);\n                    continue;\n                }\n                for (int j = 0; j < p-1; j++) {\n                    if (!c[0][j] && !c[1][j] && !c[2][j]) continue;\n                    if ((!a[0][i] && c[0][j]) || (a[0][i] && !c[0][j])) continue;\n                    if ((!a[1][i] && c[1][j]) || (a[1][i] && !c[1][j])) continue;\n                    if ((!a[2][i] && c[2][j]) || (a[2][i] && !c[2][j])) continue;\n                    double u = -1;\n                    if (a[0][i] && c[0][j]) u = a[0][i] / c[0][j];\n                    if (a[1][i] && c[1][j]) {\n                        if (u == -1) u = a[1][i] / c[1][j];\n                        else if (u != a[1][i] / c[1][j]) break;\n                    }\n                    if (a[2][i] && c[2][j]) {\n                        if (u == -1) u = a[2][i] / c[2][j];\n                        else if (u != a[2][i] / c[2][j]) break;\n                    }\n                    f = true;\n                    c[3][1] *= (int)u;\n                    ans.push_back(c[3][j]);\n                    break;\n                }\n                if (!f) ans.push_back(-1);\n            }\n        }\n        for (int i = 0; i < ans.size(); i++) cout << ans[i] << (i==ans.size()-1? \"\\n\" : \" \");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n#define int ll\nusing VI = vector<int>;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define PB push_back\n\nsigned main(void)\n{\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  while(true) {\n    int p, q;\n    cin >> p >> q;\n    if(!p) break;\n    vector<string> s(p), t(q);\n    REP(i, p) cin >> s[i];\n    REP(i, q) cin >> t[i];\n\n    VI ans(q, -2);\n    FOR(R, 1, 21) FOR(C, 1, 21) FOR(S, 1, 21) {\n      int a = 0,  b = 0, c = 0;\n      bool flag = true;\n      REP(i, p) {\n        int tmp = -1;\n        REP(j, s[i].size()) if(s[i][j]!='.') {tmp = j; break;}\n        if(R*a + C*b + S*c != tmp) {\n          flag = false;\n          break;\n        }\n        REP(j, s[i].size()) {\n          if(s[i][j] == '(') a++;\n          else if(s[i][j] == ')') a--;\n          else if(s[i][j] == '{') b++;\n          else if(s[i][j] == '}') b--;\n          else if(s[i][j] == '[') c++;\n          else if(s[i][j] == ']') c--;\n        }\n      }\n      if(!flag) continue;\n      // ここまで来てたら(R,C,S)の組を取ることが可能\n      a = b = c = 0;\n      REP(i, q) {\n        // i行目のインデントで a*R + b*C + c*S となる可能性がある\n        // i行目の答えを設定\n        if(ans[i] == -2) ans[i] = a*R + b*C + c*S;\n        // 2通り以上ある(答えが一意に決まらない)ときは-1\n        else if(ans[i] != a*R + b*C + c*S) ans[i] = -1;\n        REP(j, t[i].size()) {\n          if(t[i][j] == '(') a++;\n          else if(t[i][j] == ')') a--;\n          else if(t[i][j] == '{') b++;\n          else if(t[i][j] == '}') b--;\n          else if(t[i][j] == '[') c++;\n          else if(t[i][j] == ']') c--;\n        }\n      }\n    }\n\n    REP(i, q) cout << ans[i] << (i==q-1?\"\":\" \");\n    cout << endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define repp(i, l, r) for(int i = (l); i < (r); i++)\n#define per(i, n) for(int i = ((n)-1); i >= 0; i--)\n#define perr(i, l, r) for(int i = ((r)-1); i >= (l); i--)\n#define all(x) (x).begin(),(x).end()\n#define MOD 1000000007\n#define IINF 1000000000\n#define LINF 1000000000000000000\n#define SP <<\" \"<<\n#define CYES cout<<\"Yes\"<<endl\n#define CNO cout<<\"No\"<<endl\n#define CFS cin.tie(0);ios::sync_with_stdio(false)\n\ntypedef long long LL;\ntypedef long double LD;\n\nstruct rule{\n  int a;\n  int b;\n  int c;\n  int k;\n};\n\nint main(){\n  while(1){\n    int p,q;\n    cin >> p >> q;\n    if(p==0) return 0;\n    vector<rule> r(p);\n    string s;\n    int a=0,b=0,c=0;\n    rep(i,p){\n      cin >> s;\n      bool ok=true;\n      int id=0;\n      rep(j,s.length()){\n        if(ok){\n          if(s[j]=='.'){\n            id++;\n          }else{\n            ok=false;\n          }\n        }\n      }\n      r[i]={a,b,c,id};\n      rep(j,s.length()){\n        if(s[j]=='('){\n          a++;\n        }else if(s[j]==')'){\n          a--;\n        }else if(s[j]=='{'){\n          b++;\n        }else if(s[j]=='}'){\n          b--;\n        }else if(s[j]=='['){\n          c++;\n        }else if(s[j]==']'){\n          c--;\n        }\n      }\n    }\n    vector<rule> t(q);\n    rep(i,q){\n      cin >> s;\n      bool ok=true;\n      int id=0;\n      t[i]={a,b,c,0};\n      rep(j,s.length()){\n        if(s[j]=='('){\n          a++;\n        }else if(s[j]==')'){\n          a--;\n        }else if(s[j]=='{'){\n          b++;\n        }else if(s[j]=='}'){\n          b--;\n        }else if(s[j]=='['){\n          c++;\n        }else if(s[j]==']'){\n          c--;\n        }\n      }\n    }\n    vector<int> ans(q,-1);\n    repp(x,1,21){\n      repp(y,1,21){\n        repp(z,1,21){\n          rep(i,p){\n            if(x*r[i].a+y*r[i].b+z*r[i].c!=r[i].k){\n              goto next;\n            }\n          }\n          rep(i,q){\n            if(ans[i]==-1){\n              ans[i]=x*t[i].a+y*t[i].b+z*t[i].c;\n            }else{\n              if(ans[i]!=x*t[i].a+y*t[i].b+z*t[i].c){\n                ans[i]=-2;\n              }\n            }\n          }\n          next:;\n        }\n      }\n    }\n    rep(i,q){\n      cout << (ans[i]>=0?ans[i]:-1);\n      if(i<q-1) cout << \" \";\n      else cout << endl;\n    }\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <set>\n\nusing namespace std;\n\nstruct H {\n  int r,c,s,i;\n  H(){}\n  H(int r,int c,int s,int i):r(r),c(c),s(s),i(i){}\n};\n\nvector<H> v;\n\nint main(void)\n{\n  int p,q,R,C,S,d,k;\n  char g[88];\n  for(;;) {\n    v.clear();\n    scanf(\"%d%d\",&p,&q); if(p+q==0)break;\n    R = C = S = 0;\n    for( int i = 0; i < p; i++ ) {\n      scanf(\"%s\",g);\n      k = d = 0;\n      while( g[k] == '.' ) ++k;\n      d = k;\n      v.push_back(H(R,C,S,d));\n      while( g[k] ) {\n        if( g[k] == '(' ) ++R;\n        if( g[k] == ')' ) --R;\n        if( g[k] == '{' ) ++C;\n        if( g[k] == '}' ) --C;\n        if( g[k] == '[' ) ++S;\n        if( g[k] == ']' ) --S;\n        k++;\n      }\n    }\n  \n    R = C = S = 0;\n    for( int i = 0; i < q; i++ ) {\n      scanf(\"%s\",g);\n      k = d = 0;\n      while( g[k] == '.' ) ++k;\n      d = k;\n      int id[11111] = {};\n      for( int r = 1; r <= 20; r++ ) {\n        for( int c = 1; c <= 20; c++ ) {\n          for( int s = 1; s <= 20; s++ ) {\n            bool ok = true;\n            for( int j = 0; j < int(v.size()); j++ ) {\n              if( v[j].r*r + v[j].c*c + v[j].s*s == v[j].i ) {\n              \n              } else ok = false;\n            }\n            if( ok ) id[R*r+C*c+S*s]++;\n          }\n        }\n      }\n      int aa = 0,res;\n      for( int j = 0; j < 11111; j++ ) {\n        if( id[j] ) ++aa,res=j;\n      }\n      printf(\"%d%c\",aa==1?res:-1,i==q-1?'\\n':' ');\n      while( g[k] ) {\n        if( g[k] == '(' ) ++R;\n        if( g[k] == ')' ) --R;\n        if( g[k] == '{' ) ++C;\n        if( g[k] == '}' ) --C;\n        if( g[k] == '[' ) ++S;\n        if( g[k] == ']' ) --S;\n        k++;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n \nusing namespace std;\n \n#define INF 1e9\n \nint main(){\n    int P,Q;\n    while(cin >> P >> Q, (P | Q)){\n\tint ind[10];\n\tint ro[10],rc[10],co[10],cc[10],so[10],sc[10];\n\tint ro2[10],rc2[10],co2[10],cc2[10],so2[10],sc2[10];\n\tstring s;\n\tfor(int i = 0 ; i < 10 ; i++){\n\t    ind[i] = 0;\n\t    ro[i] = rc[i] = 0;\n\t    co[i] = cc[i] = 0;\n\t    so[i] = sc[i] = 0;\n\t}\n\tfor(int i = 0 ; i < P ; i++){\n\t    cin >> s;\n\t    bool rd = true;\n\t    for(int j = 0 ; j < (int)s.size() ; j++){\n\t\tif(s[j] == '(') ro[i]++; \n\t\tif(s[j] == ')') rc[i]++; \n\t\tif(s[j] == '{') co[i]++; \n\t\tif(s[j] == '}') cc[i]++; \n\t\tif(s[j] == '[') so[i]++;\n\t\tif(s[j] == ']') sc[i]++;\n\t\tif(s[j] != '.') rd = false;\n\t\tif(rd){ ind[i]++; }\n\t    }\n\t}\n\tfor(int i = 1 ; i < P ; i++){\n\t    ro[i] += ro[i-1];\n\t    rc[i] += rc[i-1];\n\t    co[i] += co[i-1];\n\t    cc[i] += cc[i-1];\n\t    so[i] += so[i-1];\n\t    sc[i] += sc[i-1];\n\t}\n\tfor(int i = 0 ; i < 10 ; i++){\n\t    ro2[i] = rc2[i] = 0;\n\t    co2[i] = cc2[i] = 0;\n\t    so2[i] = sc2[i] = 0;\n\t}\n\tfor(int i = 0 ; i < Q ; i++){\n\t    cin >> s;\n\t    for(int j = 0 ; j < (int)s.size() ; j++){\n\t\tif(s[j] == '(') ro2[i]++; \n\t\tif(s[j] == ')') rc2[i]++; \n\t\tif(s[j] == '{') co2[i]++; \n\t\tif(s[j] == '}') cc2[i]++; \n\t\tif(s[j] == '[') so2[i]++; \n\t\tif(s[j] == ']') sc2[i]++; \n\t    }\n\t}\n\tfor(int i = 1 ; i < Q ; i++){\n\t    ro2[i] += ro2[i-1];\n\t    rc2[i] += rc2[i-1];\n\t    co2[i] += co2[i-1];\n\t    cc2[i] += cc2[i-1];\n\t    so2[i] += so2[i-1];\n\t    sc2[i] += sc2[i-1];\n\t}\n\tvector<int> res(10,INF);\n\tres[0] = 0;\n\tfor(int i = 1 ; i < Q ; i++){\n\t    vector<int> v;\n\t    for(int R = 1 ; R <= 20 ; R++){\n\t\tfor(int C = 1 ; C <= 20 ; C++){\n\t\t    for(int S = 1 ; S <= 20 ; S++){\n\t\t\tbool ok = true;\n\t\t\tfor(int j = 1 ; j < P ; j++){\n\t\t\t    int rd = ro[j-1]-rc[j-1];\n\t\t\t    int cd = co[j-1]-cc[j-1];\n\t\t\t    int sd = so[j-1]-sc[j-1];\n\t\t\t    if(R*rd+C*cd+S*sd != ind[j]){\n\t\t\t\tok = false;\n\t\t\t\tbreak;\n\t\t\t    }\n\t\t\t}\n\t\t\tif(ok){\n\t\t\t    int rd = ro2[i-1]-rc2[i-1];\n\t\t\t    int cd = co2[i-1]-cc2[i-1];\n\t\t\t    int sd = so2[i-1]-sc2[i-1];\n\t\t\t    int val = R*rd+C*cd+S*sd;\n\t\t\t    if(res[i] == INF){\n\t\t\t\tres[i] = val;\n\t\t\t    }else{\n\t\t\t\tif(res[i] != val && res[i] != -1){\n\t\t\t\t    res[i] = -1;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tfor(int i = 0 ; i < Q ; i++){\n\t    if(i) cout << \" \"; \n\t    cout << res[i];\n\t}\n\tcout << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void){\n    int p, q;\n    while (cin>>p>>q && p) {\n        vector<vector<int> > c(4, vector<int>(p, 0));\n        for (int i = 0; i < p; i++) {\n            string t;\n            cin >> t;\n            bool f = true;\n            int cnt = 0;\n            for (int j = 0; j < t.size(); j++) {\n                if (f && t[j] == '.') cnt++;\n                else f = false;\n                if (t[j] == '(') c[0][i]++;\n                if (t[j] == ')') c[0][i]--;\n                if (t[j] == '{') c[1][i]++;\n                if (t[j] == '}') c[1][i]--;\n                if (t[j] == '[') c[2][i]++;\n                if (t[j] == ']') c[2][i]--;\n            }\n            if (i) c[3][i-1] = cnt;\n        }\n        \n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p-1; j++) {\n                c[i][j+1] += c[i][j];\n            }\n        }\n        \n        \n        vector<bool> rcs(3, false);\n        int rcs_cnt = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) rcs[i] = true;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) {\n                    rcs_cnt++;\n                    break;\n                }\n            }\n        }\n        \n        vector<int> R,C,S;\n        for (int i = 1; i < 21; i++) {\n            if (rcs[0] == false) continue;\n            for (int j = 1; j < 21; j++) {\n                if (rcs[1] == false) continue;\n                for (int k = 1; k < 21; k++) {\n                    if (rcs[2] == false) continue;\n                    bool f = true;\n                    for (int a = 0; a < c[0].size(); a++) {\n                        if (i*c[0][a] + j*c[1][a] + k*c[2][a] != c[3][a]) {\n                            f = false;\n                            break;\n                        }\n                    }\n                    if (f) R.push_back(i), C.push_back(j), S.push_back(k);\n                }\n            }\n        }\n        for (int i = 0; i < p-1; i++) {\n            if (c[0][i] && !c[1][i] && !c[2][i]) R.push_back(c[3][i]/c[0][i]);\n            if (!c[0][i] && c[1][i] && !c[2][i]) C.push_back(c[3][i]/c[1][i]);\n            if (!c[0][i] && !c[1][i] && c[2][i]) S.push_back(c[3][i]/c[2][i]);\n        }\n        R.erase(unique(R.begin(), R.end()), R.end());\n        C.erase(unique(C.begin(), C.end()), C.end());\n        S.erase(unique(S.begin(), S.end()), S.end());\n        \n        vector<vector<int> > a(3, vector<int>(q, 0));\n        for (int i = 0; i < q; i++) {\n            string t;\n            cin >> t;\n            \n            for (int j = 0; j < t.size(); j++) {\n                if (t[j] == '(') a[0][i]++;\n                if (t[j] == ')') a[0][i]--;\n                if (t[j] == '{') a[1][i]++;\n                if (t[j] == '}') a[1][i]--;\n                if (t[j] == '[') a[2][i]++;\n                if (t[j] == ']') a[2][i]--;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < q-1; j++) {\n                a[i][j+1] += a[i][j];\n            }\n        }\n        \n        vector<int> ans;\n        ans.push_back(0);\n        \n        if (rcs_cnt >= 2 && R.size() == 1 && C.size() == 1 && S.size() == 1) {\n            for (int i = 0; i < q-1; i++) ans.push_back(R[0]*a[0][i] + C[0]*a[1][i] + S[0]*a[2][i]);\n        }\n        else {\n            for (int i = 0; i < q-1; i++) {\n                bool f = false;\n                if (!a[0][i] && !a[1][i] && !a[2][i]) {\n                    ans.push_back(0);\n                    continue;\n                }\n                else if (a[0][i] && R.size()==1 && !a[1][i] && !a[2][i]) {\n                    ans.push_back(R[0]*a[0][i]);\n                    continue;\n                }\n                else if (a[1][i] && C.size()==1 && !a[0][i] && !a[2][i]) {\n                    ans.push_back(C[0]*a[1][i]);\n                    continue;\n                }\n                else if (a[2][i] && S.size()==1 && !a[0][i] && !a[1][i]) {\n                    ans.push_back(R[2]*a[2][i]);\n                    continue;\n                }\n                for (int j = 0; j < p-1; j++) {\n                    if (!c[0][j] && !c[1][j] && !c[2][j]) continue;\n                    if ((!a[0][i] && c[0][j]) || (a[0][i] && !c[0][j])) continue;\n                    if ((!a[1][i] && c[1][j]) || (a[1][i] && !c[1][j])) continue;\n                    if ((!a[2][i] && c[2][j]) || (a[2][i] && !c[2][j])) continue;\n                    double u = -1;\n                    if (a[0][i] && c[0][j]) u = a[0][i] / c[0][j];\n                    if (a[1][i] && c[1][j]) {\n                        if (u == -1) u = a[1][i] / c[1][j];\n                        else if (u != a[1][i] / c[1][j]) break;\n                    }\n                    if (a[2][i] && c[2][j]) {\n                        if (u == -1) u = a[2][i] / c[2][j];\n                        else if (u != a[2][i] / c[2][j]) break;\n                    }\n                    f = true;\n                    c[3][1] *= (int)u;\n                    printf(\"u=%lf, c[3][j]=%d\\n\",u,c[3][j]);\n                    ans.push_back(c[3][j]);\n                    break;\n                }\n                if (!f) ans.push_back(-1);\n            }\n        }\n        for (int i = 0; i < ans.size(); i++) cout << ans[i] << (i==ans.size()-1? \"\\n\" : \" \");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nbool ok(vector<string>& a,int r,int c,int s)\n{\n\tint rc=0,cc=0,sc=0;\n\tfor(int i=0;i<a.size();i++){\n\t\tint j=a[i].find_first_not_of('.');\n\t\tif(rc*r+cc*c+sc*s!=j)\n\t\t\treturn false;\n\t\trc+=count(begin(a[i]),end(a[i]),'(')-count(begin(a[i]),end(a[i]),')');\n\t\tcc+=count(begin(a[i]),end(a[i]),'{')-count(begin(a[i]),end(a[i]),'}');\n\t\tsc+=count(begin(a[i]),end(a[i]),'[')-count(begin(a[i]),end(a[i]),']');\n\t}\n\treturn true;\n}\n\nint main()\n{\n\tfor(int n,m;cin>>n>>m,n|m;){\n\t\tcin.ignore();\n\t\tvector<string> a(n),b(m);\n\t\tfor(int i=0;i<n;i++) cin>>a[i];\n\t\tfor(int i=0;i<m;i++) cin>>b[i];\n\t\t\n\t\tvector<int> rs,cs,ss;\n\t\tfor(int i=1;i<=20;i++)\n\t\t\tfor(int j=1;j<=20;j++)\n\t\t\t\tfor(int k=1;k<=20;k++)\n\t\t\t\t\tif(ok(a,i,j,k)){\n\t\t\t\t\t\trs.push_back(i);\n\t\t\t\t\t\tcs.push_back(j);\n\t\t\t\t\t\tss.push_back(k);\n\t\t\t\t\t}\n\t\t\n\t\tvector<int> res;\n\t\tint rc=0,cc=0,sc=0;\n\t\tfor(int i=0;i<b.size();i++){\n\t\t\tvector<int> cand;\n\t\t\tfor(int j=0;j<rs.size();j++)\n\t\t\t\tcand.push_back(rc*rs[j]+cc*cs[j]+sc*ss[j]);\n\t\t\tsort(begin(cand),end(cand));\n\t\t\tif(unique(begin(cand),end(cand))-begin(cand)==1)\n\t\t\t\tres.push_back(cand[0]);\n\t\t\telse\n\t\t\t\tres.push_back(-1);\n\t\t\trc+=count(begin(b[i]),end(b[i]),'(')-count(begin(b[i]),end(b[i]),')');\n\t\t\tcc+=count(begin(b[i]),end(b[i]),'{')-count(begin(b[i]),end(b[i]),'}');\n\t\t\tsc+=count(begin(b[i]),end(b[i]),'[')-count(begin(b[i]),end(b[i]),']');\n\t\t}\n\t\t\n\t\tfor(int i=0;i<res.size();i++)\n\t\t\tcout<<(i?\" \":\"\")<<res[i];\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      //      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\n/*void Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<=d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n  }*/\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  int p,q;\n  while(cin>>p>>q,p||q){\n    string b;\n    int i,j,k;\n    int r[20]={},c[20]={},s[20]={},n[20]={};\n    int v[100][100][100]={{{}}};\n    int br=-1,bc=-1,bs=-1;\n    for(i=0;i<p;i++){\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      cin >> b;\n      j=0;\n      while(b[j]=='.') j++;\n      n[i]=j;\n     \n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\tif(b[j]=='{') c[i+1]++;\n\tif(b[j]=='}') c[i+1]--;\n\tif(b[j]=='[') s[i+1]++;\n\tif(b[j]==']') s[i+1]--;\n      }\n      \n      cout << n[i] << \":\" << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      //cout << br << \":\" << bc << \":\" << bs << endl; \n    }\n    \n    bool ff=false;\n    for(i=1;i<=p;i++){\n      for(j=i+1;j<=p;j++){\n\tfor(k=j+1;k<=p;k++){\n\t  if(r[i]*c[j]*s[k]+r[k]*c[i]*s[j]+r[j]*c[k]*s[i]\n\t     -r[k]*c[j]*s[i]-r[j]*c[i]*s[k]-r[i]*c[k]*s[j]==0) continue;\n\t  else{\n\t    int d=r[i]*c[j]*s[k]+r[k]*c[i]*s[j]+r[j]*c[k]*s[i]\n\t      -r[k]*c[j]*s[i]-r[j]*c[i]*s[k]-r[i]*c[k]*s[j];\n\t    //cout << d  << \"#\";\n\t    br=n[i]*c[j]*s[k]+n[k]*c[i]*s[j]+n[j]*c[k]*s[i]\n\t      -n[k]*c[j]*s[i]-n[j]*c[i]*s[k]-n[i]*c[k]*s[j];\n\t    \n\t    bc=r[i]*n[j]*s[k]+r[k]*n[i]*s[j]+r[j]*n[k]*s[i]\n\t      -r[k]*n[j]*s[i]-r[j]*n[i]*s[k]-r[i]*n[k]*s[j];\n\t    \n\t    bs=r[i]*c[j]*n[k]+r[k]*c[i]*n[j]+r[j]*c[k]*n[i]\n\t      -r[k]*c[j]*n[i]-r[j]*c[i]*n[k]-r[i]*c[k]*n[j];\n\n\t    //cout << br << \":\" << bc << \":\" << bs << endl; \n\t    br/=d;bc/=d;bs/=d;\n\t    //cout << br << \":\" << bc << \":\" << bs << endl; \n\n\t    if(1<=br&&br<=20&&1<=bc&&bc<=20&&1<=bs&&bs<=20\n\t       &&r[i]*br+c[i]*bc+s[i]*bs==n[i]\n\t       &&r[j]*br+c[j]*bc+s[j]*bs==n[j]\n\t       &&r[k]*br+c[k]*bc+s[k]*bs==n[k]){\n\t      ff=true;\n\t      break;\n\t    }else{\n\t      br=-1;bc=-1;bs=-1;\n\t    }\n\t    \n\t  }\n\t}\n\tif(ff) break;\n      }\n      if(ff) break;\n    }\n    \n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    if(br==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  int d=r[i]*c[j]-r[j]*c[i];\n\t  if(s[i]!=0||s[j]!=0||d==0) continue;\n\t  int bbr=(n[i]*c[j]-n[j]*c[i])/d;\n\t  int bbc=(r[i]*n[j]-r[j]*n[i])/d;\n\t  if(1<=bbr&&bbr<=20&&1<=bbc&&bbc<=20){\n\t    br=bbr;\n\t    bc=bbc;\n\t  }\n\t}\n      }\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  int d=s[i]*c[j]-s[j]*c[i];\n\t  if(r[i]!=0||r[j]!=0||d==0) continue;\n\t  int bbs=(n[i]*c[j]-n[j]*c[i])/d;\n\t  int bbc=(s[i]*n[j]-s[j]*n[i])/d;\n\t  if(1<=bbs&&bbs<=20&&1<=bbc&&bbc<=20){\n\t    bs=bbs;\n\t    bc=bbc;\n\t  }\n\t}\n      }\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  int d=r[i]*s[j]-r[j]*s[i];\n\t  if(c[i]!=0||c[j]!=0||d==0) continue;\n\t  int bbr=(n[i]*s[j]-n[j]*s[i])/d;\n\t  int bbs=(r[i]*n[j]-r[j]*n[i])/d;\n\t  if(1<=bbr&&bbr<=20&&1<=bbs&&bbs<=20){\n\t    br=bbr;\n\t    bs=bbs;\n\t  }\n\t}\n      }\n    }\n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    if(br==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(r[i]!=r[j]&&c[i]==c[j]&&s[i]==s[j])\n\t    br=(n[i]-n[j])/(r[i]-r[j]);\n\t}\n      }\n    }\n    if(bc==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(c[i]!=c[j]&&r[i]==r[j]&&s[i]==s[j])\n\t    bc=(n[i]-n[j])/(c[i]-c[j]);\n\t}\n      }\n    }\n    if(bs==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(s[i]!=s[j]&&r[i]==r[j]&&c[i]==c[j])\n\t    bs=(n[i]-n[j])/(s[i]-s[j]);\n\t}\n      }\n    }\n\n    bool f=true;\n    while(f){\n      f=false;\n      for(i=0;i<p;i++){\n\tif(r[i]<100&&c[i]<100&&s[i]<100)\n\t  v[r[i]][c[i]][s[i]]=n[i];\n\tif(r[i]+c[i]+s[i]==n[i]){\n\t  if(r[i]!=0&&br==-1) {\n\t    br=1;\n\t    f=true;\n\t  }\n\t  if(c[i]!=0&&bc==-1){\n\t    bc=1;\n\t    f=true;\n\t  }\n\t  if(s[i]!=0&&bs==-1){\n\t    bs=1;\n\t      f=true;\n\t  }\n\t}\n\tif(r[i]*20+c[i]*20+s[i]*20==n[i]){\n\t  if(r[i]!=0&&br==-1) {\n\t    br=20;\n\t    f=true;\n\t  }\n\t  if(c[i]!=0&&bc==-1){\n\t    bc=20;\n\t    f=true;\n\t  }\n\t  if(s[i]!=0&&bs==-1){\n\t    bs=20;\n\t    f=true;\n\t  }\n\t}\n\t\n\tif(r[i]==0&&c[i]==0){\n\t  if(s[i]!=0&&bs==-1) {\n\t    bs=n[i]/s[i];\n\t    f=true;\n\t  }\n\t}\n\tif(r[i]==0&&s[i]==0){\n\t  if(c[i]!=0&&bc==-1){ \n\t    bc=n[i]/c[i];\n\t    f=true;\n\t  }\n\t}\n\tif(c[i]==0&&s[i]==0){\n\t  if(r[i]!=0&&br==-1){\n\t    br=n[i]/r[i];\n\t    f=true;\n\t  }\n\t}\n\tif(s[i]==0){\n\t  if(br!=-1&&bc==-1&&r[i]!=0&&c[i]!=0){\n\t    bc=(n[i]-r[i]*br)/c[i];\n\t    f=true;\n\t  }\n\t  if(bc!=-1&&br==-1&&r[i]!=0&&c[i]!=0){\n\t    br=(n[i]-c[i]*bc)/r[i];\n\t    f=true;\n\t  }\n\t}\n\t\n\tif(c[i]==0){\n\t  if(br!=-1&&bs==-1&&r[i]!=0&&s[i]!=0){\n\t    bs=(n[i]-r[i]*br)/s[i];\n\t    f=true;\n\t  }\n\t  if(bs!=-1&&br==-1&&r[i]!=0&&s[i]!=0){\n\t    br=(n[i]-s[i]*bs)/r[i];\n\t    f=true;\n\t  }\n\t}\n\t\n\tif(r[i]==0){\n\t  if(bc!=-1&&bs==-1&&c[i]!=0&&s[i]!=0){\n\t    bs=(n[i]-c[i]*bc)/s[i];\n\t    f=true;\n\t  }\n\t  if(bs!=-1&&bc==-1&&s[i]!=0&&c[i]!=0){\n\t    bc=(n[i]-s[i]*bs)/c[i];\n\t    f=true;\n\t  }\n\t}\n\tif(r[i]*c[i]*s[i]!=0){\n\t  if(br==-1&&bc!=-1&&bs!=-1){\n\t    br=(n[i]-c[i]*bc-s[i]*bs)/r[i];\n\t    f=true;\n\t  }\n\t  if(br!=-1&&bc==-1&&bs!=-1){\n\t    bc=(n[i]-r[i]*br-s[i]*bs)/c[i];\n\t    f=true;\n\t  }\n\t  if(br!=-1&&bc!=-1&&bs==-1){\n\t    bs=(n[i]-c[i]*bc-r[i]*br)/s[i];\n\t    f=true;\n\t  }\n\t}\n      }\n    }\n    \n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    //cout << br << bc << bs << endl;\n    \n    r[0]=0;c[0]=0;s[0]=0;\n    for(i=0;i<q;i++){\n      cin >> b;\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\t  if(b[j]=='{') c[i+1]++;\n\t  if(b[j]=='}') c[i+1]--;\n\t  if(b[j]=='[') s[i+1]++;\n\t  if(b[j]==']') s[i+1]--;\n      }\n      \n      //cout << endl << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      \n      if(i==0) cout << 0;\n      else {\n\tcout << \" \";\n\tif(r[i]==0&&c[i]==0&&s[i]==0) \n\t  cout << 0;\n\telse if(r[i]<100&&c[i]<100&&s[i]<100&&v[r[i]][c[i]][s[i]]!=0) \n\t  cout << v[r[i]][c[i]][s[i]];\n\telse if((r[i]!=0&&br==-1)||(c[i]!=0&&bc==-1)||(s[i]!=0&&bs==-1))\n\t  cout << -1;\n\telse \n\t  cout << r[i]*br+c[i]*bc+s[i]*bs ;\n\t\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nstruct N{\n  int R,C,S;\n};\n\nint main()\n{\n  int p,q;\n  int Ind[11],nr[11],nc[11],ns[11];\n  string s1[11],s2[11],s;\n  N n[800000];\n  while(1){\n    cin>>p>>q;\n    if(p+q==0)break;\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=0;i<p;i++){\n      cin>>s1[i];\n      Ind[i]=0;\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n      bool flag=true;\n      for(int j=0;j<s1[i].length();j++){\n\tif(s1[i][j]!='.')flag=false;\n\tif(s1[i][j]=='.' && flag)Ind[i]++;\n\tif(s1[i][j]=='(')nr[i]++;\n\tif(s1[i][j]==')')nr[i]--;\n\tif(s1[i][j]=='{')nc[i]++;\n\tif(s1[i][j]=='}')nc[i]--;\n\tif(s1[i][j]=='[')ns[i]++;\n\tif(s1[i][j]==']')ns[i]--;\n      }\n    }\n    int a=0;\n    \n    for(int R=1;R<=20;R++){\n      for(int C=1;C<=20;C++){\n\tfor(int S=1;S<=20;S++){\n\t  bool flag=true;\n\t  for(int i=1;i<p;i++){\n\t    if(Ind[i]!=(R*(nr[i-1])+C*(nc[i-1])+S*(ns[i-1])))flag=false;\n\t  }\n\t  if(flag){\n\t    n[a].R=R;\n\t    n[a].C=C;\n\t    n[a].S=S;\n\t    a++;\n\t  }\n\t}\n      }\n    }\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=1;i<q+1;i++){\n      cin>>s2[i];\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n\tfor(int j=0;j<s2[i].length();j++){\n\t  if(s2[i][j]=='(')nr[i]++;\n\t  if(s2[i][j]==')')nr[i]--;\n\t  if(s2[i][j]=='{')nc[i]++;\n\t  if(s2[i][j]=='}')nc[i]--;\n\t  if(s2[i][j]=='[')ns[i]++;\n\t  if(s2[i][j]==']')ns[i]--;\n\t}\n      \n    }\n    for(int i=0;i<q;i++){\n      int b=-1;\n      for(int j=0;j<a;j++){\n\tif(b!=-1 && b!=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i]){\n\t  b=-1;\n\t  break;\n\t}\n\telse b=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i];\n      }\n      cout<<b;\n      if(i!=q-1)cout<<\" \";\n    }\n    cout<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define syosu(x) fixed<<setprecision(x)\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef pair<int,int> P;\ntypedef pair<double,double> pdd;\ntypedef pair<ll,ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef vector<string> vs;\ntypedef vector<P> vp;\ntypedef vector<vp> vvp;\ntypedef vector<pll> vpll;\ntypedef pair<int,P> pip;\ntypedef vector<pip> vip;\nconst int inf=1<<29;\nconst ll INF=1ll<<60;\nconst double pi=acos(-1);\nconst double eps=1e-9;\nconst ll mod=1e9+7;\nconst int dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\twhile(1){\n\t\tint n,m;\n\t\tcin>>n>>m;\n\t\tif(n==0) break;\n\t\tvvi b(n,vi(3));\n\t\tvi c(n),d(3);\n\t\tfor(int i=0;i<n;i++){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tb[i]=d;\n\t\t\tfor(auto j:s){\n\t\t\t\tif(j!='.') break;\n\t\t\t\tc[i]++;\n\t\t\t}\n\t\t\tfor(auto j:s){\n\t\t\t\tif(j=='(') d[0]++;\n\t\t\t\tif(j=='{') d[1]++;\n\t\t\t\tif(j=='[') d[2]++;\n\t\t\t\tif(j==')') d[0]--;\n\t\t\t\tif(j=='}') d[1]--;\n\t\t\t\tif(j==']') d[2]--;\n\t\t\t}\n\t\t}\n\t\td=vi(3);\n\t\tvi res(m);\n/*\t\tfor(int i=0;i<n;i++){\n\t\t\tfor(auto j:b[i]) cout<<j<<' ';\n\t\t\tcout<<endl;\n\t\t}*/\n\t\tfor(int i=0;i<m;i++){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tvi a;\n\t\t\tfor(int x=1;x<=20;x++) for(int y=1;y<=20;y++) for(int z=1;z<=20;z++){\n\t\t\t\tbool B=1;\n\t\t\t\tfor(int j=0;j<n;j++) if(x*b[j][0]+y*b[j][1]+z*b[j][2]!=c[j]) B=0;\n\t\t\t\tif(B) a.push_back(x*d[0]+y*d[1]+z*d[2]);\n\t\t\t}\n\t\t\tsort(a.begin(),a.end());\n\t\t\ta.erase(unique(a.begin(),a.end()),a.end());\n\t\t\tassert(!a.empty());\n\t\t\tif(a.size()>1) res[i]=-1;\n\t\t\telse res[i]=a[0];\n\t\t\tfor(auto j:s){\n\t\t\t\tif(j=='(') d[0]++;\n\t\t\t\tif(j=='{') d[1]++;\n\t\t\t\tif(j=='[') d[2]++;\n\t\t\t\tif(j==')') d[0]--;\n\t\t\t\tif(j=='}') d[1]--;\n\t\t\t\tif(j==']') d[2]--;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<m;i++){\n\t\t\tif(i) cout<<' ';\n\t\t\tcout<<res[i];\n\t\t}\n\t\tcout<<endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,k,n) for(int i = (k); i < (n); i++)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(a) a.begin(), a.end()\n#define MS(m,v) memset(m,v,sizeof(m))\n#define D10 fixed<<setprecision(10)\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\nconst int MOD = 1000000007;\nconst int INF = MOD + 1;\nconst ld EPS = 1e-12;\ntemplate<class T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate<class T> T &chmax(T &a, const T &b) { return a = max(a, b); }\n\n/*--------------------template--------------------*/\n\nint main()\n{\n\tint a, b;\n\twhile (cin >> a >> b, a)\n\t{\n\t\tvs p(a), q(b);\n\t\tREP(i, a) cin >> p[i];\n\t\tREP(i, b) cin >> q[i];\n\t\tvi dot(a), group[3];\n\t\tREP(i, 3) group[i].resize(a);\n\t\tREP(i, a)\n\t\t{\n\t\t\tREP(j, p[i].size())\n\t\t\t{\n\t\t\t\tif (p[i][j] != '.')\n\t\t\t\t{\n\t\t\t\t\tdot[i] = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tREP(i, a)\n\t\t{\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tREP(j, 3) group[j][i] = group[j][i - 1];\n\t\t\t}\n\t\t\tREP(j, p[i].size())\n\t\t\t{\n\t\t\t\tif (p[i][j] == '(') group[0][i]++;\n\t\t\t\tif (p[i][j] == ')') group[0][i]--;\n\t\t\t\tif (p[i][j] == '{') group[1][i]++;\n\t\t\t\tif (p[i][j] == '}') group[1][i]--;\n\t\t\t\tif (p[i][j] == '[') group[2][i]++;\n\t\t\t\tif (p[i][j] == ']') group[2][i]--;\n\t\t\t}\n\t\t}\n\n\t\tvi groupb[3];\n\t\tREP(i, 3) groupb[i].resize(b);\n\t\tREP(i, b)\n\t\t{\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tREP(j, 3) groupb[j][i] = groupb[j][i - 1];\n\t\t\t}\n\t\t\tREP(j, q[i].size())\n\t\t\t{\n\t\t\t\tif (q[i][j] == '(') groupb[0][i]++;\n\t\t\t\tif (q[i][j] == ')') groupb[0][i]--;\n\t\t\t\tif (q[i][j] == '{') groupb[1][i]++;\n\t\t\t\tif (q[i][j] == '}') groupb[1][i]--;\n\t\t\t\tif (q[i][j] == '[') groupb[2][i]++;\n\t\t\t\tif (q[i][j] == ']') groupb[2][i]--;\n\t\t\t}\n\t\t}\n\n\t\tvector<set<int>> ans(b);\n\n\t\tFOR(i, 1, 21)FOR(j, 1, 21)FOR(k, 1, 21)\n\t\t{\n\t\t\tbool f = true;\n\t\t\tFOR(l, 1, a)\n\t\t\t{\n\t\t\t\tif (dot[l] != group[0][l - 1] * i + group[1][l - 1] * j + group[2][l - 1] * k) f = false;\n\t\t\t}\n\t\t\tif (f)\n\t\t\t{\n\t\t\t\tREP(l, b - 1)\n\t\t\t\t{\n\t\t\t\t\tint res = groupb[0][l] * i + groupb[1][l] * j + groupb[2][l] * k;\n\t\t\t\t\tans[l].insert(res);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << 0 << \" \";\n\t\tREP(i, ans.size()-1)\n\t\t{\n\t\t\tint res;\n\t\t\tif (ans[i].size() == 1) res = *ans[i].begin();\n\t\t\telse res = -1;\n\t\t\tcout << res << (i == ans.size() - 2 ? \"\\n\" : \" \");\n\t\t}\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long   // <-----!!!!!!!!!!!!!!!!!!!\n\n#define rep(i,n) for (int i=0;i<(n);i++)\n#define rep2(i,a,b) for (int i=(a);i<(b);i++)\n#define rrep(i,n) for (int i=(n)-1;i>=0;i--)\n#define rrep2(i,a,b) for (int i=(b)-1;i>=(a);i--)\n#define all(a) (a).begin(),(a).end()\n\ntypedef long long ll;\ntypedef pair<int, int> Pii;\ntypedef tuple<int, int, int> TUPLE;\ntypedef vector<int> V;\ntypedef vector<V> VV;\ntypedef vector<VV> VVV;\ntypedef vector<vector<int>> Graph;\nconst int inf = 1e9;\nconst int mod = 1e9 + 7;\n\nint countIndentLevel(const string& s) {\n    rep(j, s.size()) {\n        if (s[j] != '.') {\n            return j;\n        }\n    }\n}\n\nint updateCnt(V& cnt, const string& s) {\n    for (const auto c : s) {\n        switch(c) {\n            case '(': cnt[0]++; break;\n            case ')': cnt[0]--; break;\n            case '{': cnt[1]++; break;\n            case '}': cnt[1]--; break;\n            case '[': cnt[2]++; break;\n            case ']': cnt[2]--; break;\n        }\n    }\n}\n\nbool checkValid(const map<V, int>& rule, int R, int C, int S) {\n    for (const auto& p : rule) {\n        V cnt;\n        int indent;\n        tie(cnt, indent) = p;\n        if (R * cnt[0] + C * cnt[1] + S * cnt[2] != indent) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvoid updateAns(V& ans, const VV& brackets, int R, int C, int S) {\n    int Q = brackets.size();\n    V temp(Q);\n    rep(i, Q) {\n        temp[i] = R * brackets[i][0] + C * brackets[i][1] + S * brackets[i][2];\n    }\n\n    if (ans.empty()) ans = temp;\n    rep(i, Q) {\n        if (ans[i] != temp[i]) ans[i] = -1;\n    }\n}\n\nvoid solve(const int P, const int Q) {\n    map<V, int> rule;\n    V cnt(3);\n    rep(i, P) {\n        string s;\n        cin >> s;\n        rule[cnt] = countIndentLevel(s);\n        updateCnt(cnt, s);\n    }\n\n    cnt.assign(3, 0);\n    VV brackets(Q, V(3));\n    rep(i, Q) {\n        brackets[i] = cnt;\n        string s;\n        cin >> s;\n        updateCnt(cnt, s);\n    }\n\n    V ans;\n    rep2(R, 1, 21) {\n        rep2(C, 1, 21) {\n            rep2(S, 1, 21) {\n                if (!checkValid(rule, R, C, S)) continue;\n                updateAns(ans, brackets, R, C, S);\n            }\n        }\n    }\n\n    rep(i, ans.size()) {\n        cout << (i != 0 ? \" \" : \"\") << ans[i];\n    }\n    cout << endl;\n}\n\nsigned main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(0);\n\n    int P, Q;\n    while (cin >> P >> Q, P) {\n        solve(P, Q);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\n#define f first\n#define s second\n#define R PP(1,0,0)\n#define C PP(0,1,0)\n#define S PP(0,0,1)\nusing namespace std;\ntypedef pair <int,int> P;\ntypedef pair <int,P> iP;\nint p,q;\nstring str[2][11];\nmap<iP,int> M;\niP PP(int a,int b,int c){return iP(a,P(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\n//???????§£???\nvoid solve(){\n  if(M.size()==2&&M.count(PP(1,1,1))) M[R]=M[C]=M[S]=M[PP(1,1,1)]/3;\n  \n  map<iP,int> ::iterator i,j;\n  for(i=M.begin();i!=M.end();i++)\n    for(j=M.begin();j!=M.end();j++){\n      int a=i->f.f, b=i->f.s.f, c=i->f.s.s,d=i->s;\n      int x=j->f.f, y=j->f.s.f, z=j->f.s.s,w=j->s;\n      int T[3][2]={{a,x},{b,y},{c,z}};\n      int t[]={a,b,c};\n      //cout <<a<<\"+\"<<b<<\"+\"<<c<<\"=\"<<d<<endl;\n      //cout <<x<<\"+\"<<y<<\"+\"<<z<<\"=\"<<w<<endl;\n      for(int k=0;k<3;k++){\n\tint D,ax,by,cz,dw,r=t[k];\n\tD=gcd(T[k][0],T[k][1],0,0);\n\tax=(a*(r/D)-x*(r/D));\n\tby=(b*(r/D)-y*(r/D));\n\tcz=(c*(r/D)-z*(r/D));\n\tdw=(d*(r/D)-w*(r/D));\n\tD=gcd(ax,by,cz,dw);\n\tax/=D,by/=D,cz/=D,dw/=D;\n\tif(ax<0||by<0||cz<0||M.count(PP(ax,by,cz))||(ax&&by&&cz)) continue;\n\tif(dw==2&&ax==1&&by==1)M[R]=M[C]=1;\n\tif(dw==2&&ax==1&&cz==1)M[R]=M[S]=1;\n\tif(dw==2&&by==1&&cz==1)M[C]=M[S]=1;\n\t//cout <<\"aft: \"<<ax<<\"+\"<<by<<\"+\"<<cz<<\"=\"<<dw<<endl;\n\ti=M.begin();\n\tM[PP(ax,by,cz)]=dw;\n      }\n    }\n}\n\nvoid in(){\n  M.clear();\n  int cnt[3]={},d;\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<str[0][i].size();j++){\n      char ch=str[0][i][j];\n      if(ch=='.')dot++;\n      else if(f)f=0,d=gcd(cnt[0],cnt[1],cnt[2],dot),M[PP(cnt[0]/d,cnt[1]/d,cnt[2]/d)]=dot/d;\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\n\n//?¨??????????\nint cal(int a,int b,int c){\n  int d=gcd(a,b,c,0),D;\n  a/=d,b/=d,c/=d;\n  if(M.count(PP(a,b,c))) return M[PP(a,b,c)]*d;\n  int fa=M.count(R),fb=M.count(C),fc=M.count(S);\n  int abc=fa+fb+fc;\n  if(abc/3) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  if(abc/2&&a&&b&&c) return -1;\n  if(abc/2) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  D=gcd(b,c,0,0);\n  if(fa&&M.count(PP(0,b/D,c/D)))return (M[R]*a+M[PP(0,b/D,c/D)]*D)*d;\n  D=gcd(a,c,0,0);\n  if(fb&&M.count(PP(a/D,0,c/D)))return (M[C]*b+M[PP(a/D,0,c/D)]*D)*d;\n  D=gcd(a,b,0,0);\n  if(fc&&M.count(PP(a/D,b/D,0)))return (M[S]*c+M[PP(a/D,0,c/D)]*D)*d;\n  return -1;\n}\n\nvoid out(){\n  int cnt[3]={},e[3]={M.count(R),M.count(C),M.count(S)};\n  e[0]= e[0]? M[R]:-1;\n  e[1]= e[1]? M[C]:-1;\n  e[2]= e[2]? M[S]:-1;\n  \n  for(int i=0;i<q;i++){\n    M.erase(R),M.erase(C),M.erase(S);\n    if(e[0]!=-1)M[R]=e[0];\n    if(e[1]!=-1)M[C]=e[1];\n    if(e[2]!=-1)M[S]=e[2];\n    cout <<cal(cnt[0],cnt[1],cnt[2]);\n    if(i!=q-1)cout <<\" \";\n    for(int j=0;j<str[1][i].size();j++){\n      char ch=str[1][i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>str[0][i];\n    for(int i=0;i<q;i++)cin>>str[1][i];\n    in();\n    solve();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\nusing namespace std;\n\nint n1, n2;\nstring t1[12], t2[12];\nvector<int> R, C, S;\n\nbool passed(int r, int c, int s){\n  int rcnt = 0;\n  int ccnt = 0;\n  int scnt = 0;\n\n  for(int i = 0; i < n1; i++){\n    int ind = 0;\n    for(int j = 0; t1[i][j] == '.'; j++) ind++;\n\n    if(r * rcnt + c * ccnt + s * scnt != ind){\n      return false;\n    }\n\n    for(int j = 0; j < t1[i].size(); j++){\n      switch(t1[i][j]){\n      case '(': rcnt++; break;\n      case '{': ccnt++; break;\n      case '[': scnt++; break;\n      case ')': rcnt--; break;\n      case '}': ccnt--; break;\n      case ']': scnt--; break;\n      }\n    }\n  }\n\n  return true;\n}\n\nvoid solve(){\n  R.clear();\n  C.clear();\n  S.clear();\n\n  for(int r = 1; r <= 20; r++){\n    for(int c = 1; c <= 20; c++){\n      for(int s = 1; s <= 20; s++){\n        if(passed(r, c, s)){\n          R.push_back(r);\n          C.push_back(c);\n          S.push_back(s);\n        }\n      }\n    }\n  }\n\n  int rcnt = 0;\n  int ccnt = 0;\n  int scnt = 0;\n\n  for(int i = 0; i < n2; i++){\n    int ind = -1;\n\n    for(int j = 0; j < R.size(); j++){\n      int tind = R[j] * rcnt + C[j] * ccnt + S[j] * scnt;\n      if(ind == -1){\n        ind = tind;\n      }\n      else if(ind != tind){\n        ind = -1;\n        break;\n      }\n    }\n\n    if(i == 0){\n      cout << 0;\n    }\n    else{\n      cout << \" \" << ind;\n    }\n\n    for(int j = 0; j < t2[i].size(); j++){\n      switch(t2[i][j]){\n      case '(': rcnt++; break;\n      case '{': ccnt++; break;\n      case '[': scnt++; break;\n      case ')': rcnt--; break;\n      case '}': ccnt--; break;\n      case ']': scnt--; break;\n      }\n    }\n  }\n  cout << endl;\n}\n\nint main(){\n  while(cin >> n1 >> n2, n1){\n    for(int i = 0; i < n1; i++){\n      cin >> t1[i];\n    }\n    for(int i = 0; i < n2; i++){\n      cin >> t2[i];\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define all(x) (x).begin(),(x).end()\nconst int mod=1000000007,MAX=23;\nconst ll INF=1LL<<60;\n\nbool can[MAX][MAX][MAX];\n\nint main(){\n    \n    std::ifstream in(\"text.txt\");\n    std::cin.rdbuf(in.rdbuf());\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    while(1){\n        int P,Q;cin>>P>>Q;\n        if(P+Q==0) break;\n        vector<int> A(P+3),B(P+3),C(P+3),cnt(P+3);\n        \n        for(int i=0;i<P;i++){\n            string S;cin>>S;\n            bool ok=true;\n            for(int j=0;j<S.size();j++){\n                if(ok){\n                    if(S[j]=='.') cnt[i]++;\n                    else ok=false;\n                }\n                \n                if(S[j]=='(') A[i+1]++;\n                if(S[j]==')') A[i+1]--;\n                \n                if(S[j]=='{') B[i+1]++;\n                if(S[j]=='}') B[i+1]--;\n                \n                if(S[j]=='[') C[i+1]++;\n                if(S[j]==']') C[i+1]--;\n            }\n            \n            A[i+2]=A[i+1];\n            B[i+2]=B[i+1];\n            C[i+2]=C[i+1];\n        }\n        \n        memset(can,0,sizeof(can));\n        \n        for(int a=1;a<=20;a++){\n            for(int b=1;b<=20;b++){\n                for(int c=1;c<=20;c++){\n                    can[a][b][c]=1;\n                    \n                    for(int i=0;i<P;i++){\n                        if(A[i]*a+B[i]*b+C[i]*c!=cnt[i]) can[a][b][c]=0;\n                    }\n                }\n            }\n        }\n        \n        A.resize(Q+3);\n        B.resize(Q+3);\n        C.resize(Q+3);\n        cnt.resize(Q+3);\n        \n        for(int i=0;i<Q+3;i++){\n            A[i]=0;\n            B[i]=0;\n            C[i]=0;\n            cnt[i]=0;\n        }\n        \n        for(int i=0;i<Q;i++){\n            string S;cin>>S;\n            \n            for(int j=0;j<S.size();j++){\n                \n                if(S[j]=='(') A[i+1]++;\n                if(S[j]==')') A[i+1]--;\n                \n                if(S[j]=='{') B[i+1]++;\n                if(S[j]=='}') B[i+1]--;\n                \n                if(S[j]=='[') C[i+1]++;\n                if(S[j]==']') C[i+1]--;\n            }\n            \n            A[i+2]=A[i+1];\n            B[i+2]=B[i+1];\n            C[i+2]=C[i+1];\n            \n            set<int> ans;\n            \n            for(int a=1;a<=20;a++){\n                for(int b=1;b<=20;b++){\n                    for(int c=1;c<=20;c++){\n                        if(!can[a][b][c]) continue;;\n                        \n                        ans.insert(A[i]*a+B[i]*b+C[i]*c);\n                    }\n                }\n            }\n            \n            if(i) cout<<\" \";\n            \n            if(ans.size()==1) cout<<(*ans.begin());\n            else cout<<-1;\n        }\n        cout<<endl;\n        \n    }\n    \n    \n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <map>\n#include <queue>\n#include <set>\n#include <vector>\n#include <string>\n#include <math.h>\n#include <iostream>\nusing namespace std;\n\nchar str1[20][100];\nchar str2[20][100];\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n    //freopen(\"out.txt\",\"w\",stdout);\n\tint p,q;\n\twhile(scanf(\"%d%d\",&p,&q) == 2)\n\t{\n\t\tif(p == 0 && q == 0 )break;\n\t\tfor(int i = 0;i < p;i++)\n\t\t\tscanf(\"%s\",str1[i]);\n\t\tfor(int i = 0;i < q;i++)\n\t\t\tscanf(\"%s\",str2[i]);\n\t\tint R,C,S;\n\t\tint cnt = 0;\n\t\tbool flag1 = true,flag2 = true,flag3 = true;\n\t\tfor(int i = 1;i <= 20;i++)\n\t\t\tfor(int j = 1;j <= 20;j++)\n\t\t\t\tfor(int k = 1;k <= 20;k++)\n\t\t\t\t{\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tint cnt1 = 0;\n\t\t\t\t\tint cnt2 = 0;\n\t\t\t\t\tint cnt3 = 0;\n\t\t\t\t\tfor(int x = 0;x < p;x++)\n\t\t\t\t\t{\n\t\t\t\t\t\tint len = strlen(str1[x]);\n\t\t\t\t\t\tint start = 0;\n\t\t\t\t\t\twhile(start < len && str1[x][start] == '.')\n\t\t\t\t\t\t\tstart++;\n\t\t\t\t\t\tif(i*cnt1 + j * cnt2 + k * cnt3 != start)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(int y = start;y < len;y++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(str1[x][y] == '(')cnt1++;\n\t\t\t\t\t\t\tif(str1[x][y] == ')')cnt1--;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(str1[x][y] == '{')cnt2++;\n\t\t\t\t\t\t\tif(str1[x][y] == '}')cnt2--;\n\t\t\t\t\t\t\tif(str1[x][y] == '[')cnt3++;\n\t\t\t\t\t\t\tif(str1[x][y] == ']')cnt3--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(flag)\n\t\t\t\t\t{\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\tif(cnt == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR = i;\n\t\t\t\t\t\t\tC = j;\n\t\t\t\t\t\t\tS = k;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(R != i)\n\t\t\t\t\t\t\t\tflag1 = false;\n\t\t\t\t\t\t\tif(C != j)\n\t\t\t\t\t\t\t\tflag2 = false;\n\t\t\t\t\t\t\tif(S != k)\n\t\t\t\t\t\t\t\tflag3 = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\tif(cnt == 0)\n\t\t{\n\t\t\tflag1 = false;\n\t\t\tflag2 = false;\n\t\t\tflag3 = false;\n\t\t}\n\t\t//printf(\"%d %d %d\\n\",R,C,S);\n\t\tint cnt1 = 0, cnt2 = 0, cnt3 = 0;\n\t\tfor(int i = 0;i < q;i++)\n\t\t{\n\t\t\tif(i == 0)printf(\"0\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(cnt1 != 0 && !flag1)\n\t\t\t\t\tprintf(\" -1\");\n\t\t\t\telse if(cnt2 != 0 && !flag2)\n\t\t\t\t\tprintf(\" -1\");\n\t\t\t\telse if(cnt3 != 0 && !flag3)\n\t\t\t\t\tprintf(\" -1\");\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\" %d\",R*cnt1 + C * cnt2 + S*cnt3);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint len = strlen(str2[i]);\n\t\t\tfor(int j = 0;j < len;j++)\n\t\t\t{\n\t\t\t\t\t\t\tif(str2[i][j] == '(')cnt1++;\n\t\t\t\t\t\t\tif(str2[i][j] == ')')cnt1--;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(str2[i][j] == '{')cnt2++;\n\t\t\t\t\t\t\tif(str2[i][j] == '}')cnt2--;\n\t\t\t\t\t\t\tif(str2[i][j] == '[')cnt3++;\n\t\t\t\t\t\t\tif(str2[i][j] == ']')cnt3--;\n\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define REP1(i,n) for(int i=1; i<(int)(n); i++)\n\n#include <iostream>\n#include <queue>\n#include <set>\nusing namespace std;\n\nint main(){\n  int p, q;\n  while(cin >> p >> q, p + q){\n    vector<string> ps(p);\n\n    REP(i,p) cin >> ps[i];\n\n    const int mx = 21;\n    vector<vector<vector<int> > >\n      v(mx, vector<vector<int> >(mx, vector<int>(mx, true)));\n\n    vector<int> Rs(p);\n    vector<int> Cs(p);\n    vector<int> Ss(p);\n    vector<int> ind(p);\n    bool unknown = false;\n    bool rr = false, cc = false, ss = false;\n    {\n      int r = 0, c = 0, s = 0;\n\n      REP(i,p + 1){\n\n        if(i != p){\n          Rs[i] = r;\n          Cs[i] = c;\n          Ss[i] = s;\n\n          for(; ps[i][ind[i]] == '.'; ind[i]++);\n          REP(j,ps[i].size()){\n            if(ps[i][j] == '(') r++;\n            if(ps[i][j] == ')') r--;\n            if(ps[i][j] == '{') c++;\n            if(ps[i][j] == '}') c--;\n            if(ps[i][j] == '[') s++;\n            if(ps[i][j] == ']') s--;\n          }\n        }\n\n        if(r) rr = true;\n        if(c) cc = true;\n        if(s) ss = true;\n      }\n    }\n\n    int R = -1, C = -1, S = -1;\n\n    REP1(i,mx) REP1(j,mx) REP1(k,mx){\n      bool ok = true;\n\n      REP(l,p){\n        if(i * Rs[l] + j * Cs[l] + k * Ss[l]\n           != ind[l]){\n          ok = false;\n          break;\n        }\n      }\n\n      if(ok){\n        if(!unknown && rr && cc && ss){\n          if(R == -1){\n            R = i;\n            C = j;\n            S = k;\n          }else{\n            unknown = true;\n            R = C = S = -1;\n          }\n        }\n      }else{\n        v[i][j][k] = false;\n      }\n    }\n\n    {\n      int r = 0, c = 0, s = 0;\n      REP(i,q){\n        string Q;\n        cin >> Q;\n\n        if((r != 0 && R == -1) ||\n           (c != 0 && C == -1) ||\n           (s != 0 && S == -1)){\n          int a = -1;\n          if(r == 0 && c == 0){\n            REP1(ss, mx){\n              bool ok = true;\n              REP1(rr, mx) REP1(cc, mx){\n                if(!v[rr][cc][ss])\n                  ok = false;\n              }\n              if(ok){\n                a = ss * s;\n                break;\n              }\n            }\n          }else if(r == 0 && s == 0){\n            REP1(cc, mx){\n              bool ok = true;\n              REP1(rr, mx) REP1(ss, mx){\n                if(!v[rr][cc][ss])\n                  ok = false;\n              }\n              if(ok){\n                a = cc * c;\n                break;\n              }\n            }\n          }else if(c == 0 && s == 0){\n            REP1(rr, mx){\n              bool ok = true;\n              REP1(cc, mx) REP1(ss, mx){\n                if(!v[rr][cc][ss])\n                  ok = false;\n              }\n              if(ok){\n                a = rr * r;\n                break;\n              }\n            }\n          }else if(r == 0){\n            REP1(cc, mx) REP1(ss, mx){\n              bool ok = true;\n              REP1(rr, mx){\n                if(!v[rr][cc][ss])\n                  ok = false;\n              }\n              if(ok){\n                a = cc * c + ss * s;\n                break;\n              }\n            }\n          }else if(c == 0){\n            REP1(rr, mx) REP1(ss, mx){\n              bool ok = true;\n              REP1(cc, mx){\n                if(!v[rr][cc][ss])\n                  ok = false;\n              }\n              if(ok){\n                a = rr * r + ss * s;\n                break;\n              }\n            }\n          }else if(s == 0){\n            REP1(rr, mx) REP1(cc, mx){\n              bool ok = true;\n              REP1(ss, mx){\n                if(!v[rr][cc][ss])\n                  ok = false;\n              }\n              if(ok){\n                a = rr * r + cc * c;\n                break;\n              }\n            }\n          }else{\n            REP1(rr, mx) REP1(ss, mx) REP1(cc, mx){\n              if(v[rr][cc][ss]){\n                a = rr * r + ss * s + cc * c;\n                break;\n              }\n            }\n          }\n          printf(\"%d\", a);\n        }else{\n          printf(\"%d\", r * R + c * C + s * S);\n        }\n\n        REP(j,Q.size()){\n          if(Q[j] == '(') r++;\n          if(Q[j] == ')') r--;\n          if(Q[j] == '{') c++;\n          if(Q[j] == '}') c--;\n          if(Q[j] == '[') s++;\n          if(Q[j] == ']') s--;\n        }\n\n        putchar(i == q - 1 ? '\\n' : ' ');\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n#include <stack>\n#include <climits>\n#include <deque>\n#include <bitset>\n#include <cassert>\n#include <ctime>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst int dy[]={-1,0,1,0},dx[]={0,1,0,-1};\n// adjust problem by problem\nconst double EPS=1e-8;\nconst double PI=acos(-1.0);\n#ifdef __GNUC__\nint popcount(int n){return __builtin_popcount(n);}\nint popcount(ll n){return __builtin_popcountll(n);}\n#endif\n#ifndef __GNUC__\ntemplate<class T> int popcount(T n){int cnt=0;while(n){if(n%2)cnt++;n/=2;}return cnt;}\n#endif\ntemplate<class T>int SIZE(T a){return a.size();}\ntemplate<class T>string IntToString(T num){string res;stringstream ss;ss<<num;return ss.str();}\ntemplate<class T>T StringToInt(string str){T res=0;for(int i=0;i<SIZE(str);i++)res=(res*10+str[i]-'0');return res;}\ntemplate<class T>T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}\ntemplate<class T>T lcm(T a,T b){return a/gcd(a,b)*b;}\ntemplate<class T> void PrintSeq(T &a,int sz){for(int i=0;i<sz;i++){cout<<a[i];if(sz==i+1)cout<<endl;else cout<<' ';}}\nbool EQ(double a,double b){return abs(a-b)<EPS;}\nvoid fastStream(){cin.tie(0);std::ios_base::sync_with_stdio(0);}\nvector<string> split(string str,char del){\n  vector<string> res;\n  for(int i=0,s=0;i<SIZE(str);i++){\n    if(str[i]==del){if(i-s!=0)res.push_back(str.substr(s,i-s));s=i+1;}\n    else if(i==SIZE(str)-1){res.push_back(str.substr(s));}\n  }\n  return res;\n}\n\nint P,Q;\nstring strs[2][11];\nbool enable[21][21][21];\nint main(){\n  fastStream();\n  while(cin>>P>>Q&&(P|Q)){\n    for(int i=0;i<21;i++)\n      for(int j=0;j<21;j++)\n        for(int k=0;k<21;k++)\n          enable[i][j][k]=true;\n    string tmp;getline(cin,tmp);\n    for(int i=0;i<P;i++)getline(cin,strs[0][i]);\n    for(int i=0;i<Q;i++)getline(cin,strs[1][i]);\n    int r,c,s;\n    r=c=s=0;\n    for(int i=0;i<P;i++){\n      string &st=strs[0][i];\n      if(i!=0){\n        // 点の数を数えて、R,C,Sを全て調べる\n        int cnt=0;\n        bool ok=true;\n        for(int j=0;j<(int)st.size();j++){\n          if(ok&&st[j]=='.')cnt++;\n          else ok=false;\n        }\n        for(int R=1;R<=20;R++)\n          for(int C=1;C<=20;C++)\n            for(int S=1;S<=20;S++)\n              if(R*r+C*c+S*s!=cnt)\n                enable[R][C][S]=false;\n      }\n      // 括弧の数を数えておく\n      for(int j=0;j<(int)st.size();j++){\n        if(st[j]=='(')r++;\n        else if(st[j]=='{')c++;\n        else if(st[j]=='[')s++;\n        else if(st[j]==')')r--;\n        else if(st[j]=='}')c--;\n        else if(st[j]==']')s--;\n      }\n    }\n    vector<int> ans;\n    r=c=s=0;\n    // ここで各行に対して可能な点の割り当ての数を調べる\n    for(int i=0;i<Q;i++){\n      string &st=strs[1][i];\n      if(i==0)ans.push_back(0);\n      else{\n        set<int> ss;\n        for(int R=1;R<=20;R++){\n          for(int C=1;C<=20;C++){\n            for(int S=1;S<=20;S++){\n              if(enable[R][C][S]){\n                int cnt=R*r+C*c+S*s;\n                ss.insert(cnt);\n              }\n            }\n          }\n        }\n        if(ss.size()>=2)ans.push_back(-1);\n        else ans.push_back(*ss.begin());\n      }\n      for(int j=0;j<(int)st.size();j++){\n        if(st[j]=='(')r++;\n        else if(st[j]=='{')c++;\n        else if(st[j]=='[')s++;\n        else if(st[j]==')')r--;\n        else if(st[j]=='}')c--;\n        else if(st[j]==']')s--;\n      }\n    }\n    for(int i=0;i<(int)ans.size();i++){\n      cout<<ans[i];\n      if(i==(int)ans.size()-1)cout<<endl;\n      else cout<<' ';\n    }\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <set>\nusing namespace std;\n\nconst int MAXN = 11;\nconst int MAXM = 11;\n\nint N, M;\nstring P[MAXN], Q[MAXM];\n\nbool isValid(int r, int c, int s) {\n  int nr, nc, ns;\n  nr = nc = ns = 0;\n  for(int i = 0; i < N; ++i) {\n    for(int j = 0; j <= P[i].size(); ++j) {\n      if(j == P[i].size() || P[i][j] != '.') {\n        if(r*nr + c*nc + s*ns != j) return false;\n        break;\n      }\n    }\n    for(int j = 0; j < P[i].size(); ++j) {\n      if(P[i][j] == '(') ++nr;\n      if(P[i][j] == ')') --nr;\n      if(P[i][j] == '{') ++nc;\n      if(P[i][j] == '}') --nc;\n      if(P[i][j] == '[') ++ns;\n      if(P[i][j] == ']') --ns;\n    }\n  }\n}\n\nint main() {\n  while(cin >> N >> M && (N|M)) {\n    cin.ignore();\n    for(int i = 0; i < N; ++i) {\n      getline(cin, P[i]);\n    }\n    for(int i = 0; i < M; ++i) {\n      getline(cin, Q[i]);\n    }\n\n    vector<vector<int> > v;\n    for(int r = 1; r <= 20; ++r) {\n      for(int c = 1; c <= 20; ++c) {\n        for(int s = 1; s <= 20; ++s) {\n          if(isValid(r,c,s)) {\n            vector<int> u(3);\n            u[0]=r; u[1]=c; u[2]=s;\n            v.push_back(u);\n          }\n        }\n      }\n    }\n\n    int nr, nc, ns;\n    nr = nc = ns = 0;\n    for(int i = 0; i < M; ++i) {\n      set<int> s;\n      for(int j = 0; j < v.size(); ++j) {\n        s.insert(v[j][0]*nr + v[j][1]*nc + v[j][2]*ns);\n      }\n      if(i) cout << \" \";\n      if(s.size() == 1) {\n        cout << *s.begin();\n      } else {\n        cout << -1;\n      }\n      for(int j = 0; j < Q[i].size(); ++j) {\n        if(Q[i][j] == '(') ++nr;\n        if(Q[i][j] == ')') --nr;\n        if(Q[i][j] == '{') ++nc;\n        if(Q[i][j] == '}') --nc;\n        if(Q[i][j] == '[') ++ns;\n        if(Q[i][j] == ']') --ns;\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct coef{\n    int r,c,s,i;\n    coef(int R=0,int C=0,int S=0,int I=0):r(R),c(C),s(S),i(I){}\n};\n\nvoid countState(coef &d, string s){\n    for(auto c:s){\n        switch(c){\n            case '(': d.r++; break;\n            case '{': d.c++; break;\n            case '[': d.s++; break;\n            case ')': d.r--; break;\n            case '}': d.c--; break;\n            case ']': d.s--; break;\n        }\n    }\n}\n\nint main(void){\n    int p,q;\n    while(cin>>p>>q,p){\n        vector<coef> data(p+1);\n        for(int i=1;i<=p;i++){\n            string s;\n            cin>>s;\n            data[i]=data[i-1];\n            countState(data[i],s);\n            for(auto c:s){\n                if(c=='.'){\n                    data[i-1].i++;\n                }else break;\n            }\n        }\n\n        vector<coef> ansset;\n        for(int r=1;r<=20;r++){\n            for(int c=1;c<=20;c++){\n                for(int s=1;s<=20;s++){\n                    bool ok=true;\n                    for(int i=1;i<=p;i++){\n                        ok &= (r*data[i].r + c*data[i].c + s*data[i].s == data[i].i);\n                    }\n                    if(ok){\n                        ansset.emplace_back(r,c,s);\n                    }\n                }\n            }\n        }\n        \n        coef state;\n        for(int i=0;i<q;i++){\n            string s;\n            cin>>s;\n            state.i=0;\n            set<int> ans;\n            for(auto a:ansset){\n                ans.insert(a.r*state.r + a.c*state.c + a.s*state.s);\n                if(ans.size()>1){\n                    break;\n                }\n            }\n            if(ans.size()==1){\n                cout<<*ans.begin();\n            }else{\n                cout<<-1;\n            }\n            if(i+1==q){\n                cout<<endl;\n            }else{\n                cout<<\" \";\n            }\n            countState(state,s);\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define For(i, a, b) for(int (i)=(int)(a); (i)<(int)(b); ++(i))\n#define rFor(i, a, b) for(int (i)=(int)(a)-1; (i)>=(int)(b); --(i))\n#define rep(i, n) For((i), 0, (n))\n#define rrep(i, n) rFor((i), (n), 0)\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long lint;\ntypedef unsigned long long ulint;\ntypedef pair<int, int> pii;\ntemplate<class T> bool chmax(T &a, const T &b){if(a<b){a=b; return true;} return false;}\ntemplate<class T> bool chmin(T &a, const T &b){if(a>b){a=b; return true;} return false;}\ntemplate<class T> T div_floor(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>=0 ? a/b : (a+1)/b-1;\n}\ntemplate<class T> T div_ceil(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>0 ? (a-1)/b+1 : a/b;\n}\n\nconstexpr lint mod = 1e9+7;\nconstexpr lint INF = mod * mod;\nconstexpr int MAX = 200010;\n\nint p, q;\nstring s[15], t[15];\n\nint get_val(vector<tuple<int, int, int>> &v, int R, int C, int S){\n    int ret = -1;\n    for(auto tp: v){\n        int x, y, z;\n        tie(x, y, z) = tp;\n        int tmp = x*R + y*C + z*S;\n        if(ret  < 0) ret = tmp;\n        else if(ret != tmp) return -1;\n    }\n    return ret;\n}\n\nvoid solve(){\n    vector<tuple<int, int, int>> v;\n    vector<int> indent(p, 0);\n    vector<vector<int>> cnt(p, vector<int>(3));\n    int R = 0, C = 0, S = 0;\n    rep(i, p){\n        cnt[i][0] = R; cnt[i][1] = C; cnt[i][2] = S;\n        for(int j=0; j<(int)s[i].size() && s[i][j] == '.'; ++j) ++indent[i];\n        rep(j, s[i].size()){\n            if(s[i][j] == '(') ++R;\n            if(s[i][j] == ')') --R;\n            if(s[i][j] == '{') ++C;\n            if(s[i][j] == '}') --C;\n            if(s[i][j] == '[') ++S;\n            if(s[i][j] == ']') --S;\n        }\n    }\n\n    auto check = [&](int x, int y, int z){\n        rep(i, p)if(x*cnt[i][0] + y*cnt[i][1] + z*cnt[i][2] != indent[i]){\n            return false;\n        }\n        return true;\n    };\n    For(x, 1, 21)For(y, 1, 21)For(z, 1, 21){\n        if(check(x, y, z)) v.push_back(make_tuple(x, y, z));\n    }\n\n    int tR = 0, tC = 0, tS = 0;\n    rep(i, q){\n        printf(\"%d\", get_val(v, tR, tC, tS));\n        printf(\"%c\", i==q-1 ? '\\n' : ' ');\n        rep(j, t[i].size()){\n            if(t[i][j] == '(') ++tR;\n            if(t[i][j] == ')') --tR;\n            if(t[i][j] == '{') ++tC;\n            if(t[i][j] == '}') --tC;\n            if(t[i][j] == '[') ++tS;\n            if(t[i][j] == ']') --tS;\n        }\n    }\n}\n\nint main(){\n    while(scanf(\"%d%d\", &p, &q) && p){\n        rep(i, p) cin >> s[i];\n        rep(i, q) cin >> t[i];\n        solve();\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#include <iomanip>\n#include <cmath>\n#include <cassert>\nusing namespace std;\n\nstring T1[10];\nstring T2[10];\nint p, q;\n\nvoid solve() {\n\tvector<int> ind(p);\n\tfor(int i = 0; i < p; i++) {\n\t\tint cnt = 0;\n\t\twhile(T1[i][cnt] == '.') cnt++;\n\t\tind[i] = cnt;\n\t}\n\n\tvector<int> ans(q, -2);\n\tfor(int R = 1; R <= 20; R++) {\n\t\tfor(int C = 1; C <= 20; C++) {\n\t\t\tfor(int S = 1; S <= 20; S++) {\n\t\t\t\tint r = 0, c = 0, s = 0;\n\t\t\t\tbool flag = true;\n\t\t\t\tfor(int i = 0; i < p; i++) {\n\t\t\t\t\tint sum = R * r + C * c + S * s;\n\t\t\t\t\tif(ind[i] != sum) {\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tfor(char x : T1[i]) {\n\t\t\t\t\t\tif(x == '(') r++;\n\t\t\t\t\t\tif(x == ')') r--;\n\t\t\t\t\t\tif(x == '{') c++;\n\t\t\t\t\t\tif(x == '}') c--;\n\t\t\t\t\t\tif(x == '[') s++;\n\t\t\t\t\t\tif(x == ']') s--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!flag) continue;\n\n\t\t\t\tr = c = s = 0;\n\t\t\t\tfor(int i = 0; i < q; i++) {\n\t\t\t\t\tint sum = R * r + C * c + S * s;\n\t\t\t\t\tif(ans[i] == -2) {\n\t\t\t\t\t\tans[i] = sum;\n\t\t\t\t\t}\n\t\t\t\t\telse if(ans[i] != sum) {\n\t\t\t\t\t\tans[i] = -1;\n\t\t\t\t\t}\n\t\t\t\t\tfor(char x : T2[i]) {\n\t\t\t\t\t\tif(x == '(') r++;\n\t\t\t\t\t\tif(x == ')') r--;\n\t\t\t\t\t\tif(x == '{') c++;\n\t\t\t\t\t\tif(x == '}') c--;\n\t\t\t\t\t\tif(x == '[') s++;\n\t\t\t\t\t\tif(x == ']') s--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int v : ans) {\n\t\tcout << v << \" \";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\n\twhile(cin >> p >> q, p | q) {\n\t\tfor(int i = 0; i < p; i++) {\n\t\t\tcin >> T1[i];\n\t\t}\n\t\tfor(int i = 0; i < q; i++) {\n\t\t\tcin >> T2[i];\n\t\t}\n\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n  int p, q;\n  while(cin >> p >> q, p || q) {\n    string master[11], beginner[11];\n    for(int i = 0; i < p; i++) cin >> master[i];\n    for(int i = 0; i < q; i++) cin >> beginner[i];\n\n    int well[11] = {0};\n    for(int i = 0; i < p; i++) {\n      for(int j = 0; j < master[i].size(); j++) {\n\tif(master[i][j] != '.') break;\n\twell[i]++;\n      }\n    }\n    int ans[11]; fill(ans, ans + 11, -2);\n    for(int R = 1; R <= 20; R++) {\n      for(int C = 1; C <= 20; C++) {\n\tfor(int S = 1; S <= 20; S++) {\n\t  int r = 0, c = 0, s = 0; bool cor = true;\n\t  for(int i = 0; i < p; i++) {\n\t    if(R*r + C*c + S*s != well[i]) { cor = false; break; }\n\t    for(int j = 0; j < master[i].size(); j++) {\n\t      switch(master[i][j]) {\n\t      case '(': r++; break; case ')': r--; break;\n\t      case '{': c++; break; case '}': c--; break;\n\t      case '[': s++; break; case ']': s--; break;\n\t      }\n\t    }\n\t  }\n\t  if(cor == false) continue;\n\t  r = 0, c = 0, s = 0;\n\t  for(int i = 0; i < q; i++) {\n\t    if(ans[i] == -2) ans[i] = R*r + C*c + S*s;\n\t    else if(ans[i] != R*r + C*c + S*s) ans[i] = -1;\n\t    for(int j = 0; j < beginner[i].size(); j++) {\n\t      switch(beginner[i][j]) {\n\t      case '(': r++; break; case ')': r--; break;\n\t      case '{': c++; break; case '}': c--; break;\n\t      case '[': s++; break; case ']': s--; break;\n\t      }\n\t    }\n\t  }\n\t}\n      }\n    }\n    for(int i = 0; i < q; i++) cout << ans[i] << (i==q-1 ? '\\n' : ' ');\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> P;\ntypedef vector<ll> V;\ntypedef complex<double> Point;\n\n#define PI acos(-1.0)\n#define EPS 1e-10\nconst ll INF = 1e16;\nconst ll MOD = 1e9 + 7;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define rep(i,N) for(int i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define EQ(a,b) (abs((a)-(b))<EPS)\n#define EQV(a,b) ( EQ((a).real(), (b).real()) && EQ((a).imag(), (b).imag()) )\n#define fi first\n#define se second\n#define N_SIZE (1LL << 20)\n#define NIL -1\n\nll mod_add(ll a, ll b) { return (a + b) % MOD; }\nll mod_sub(ll a, ll b) { return (a - b + MOD) % MOD; }\nll mod_mul(ll a, ll b) { return a*b % MOD; }\n\nll p,q;\n\nvector<string> PP,Q;\nvector<ll> ans;\n\nchar ot[] = {'(','{','['};\nchar ct[] = {')','}',']'};\n\nbool check(ll r,ll c,ll s){\n    ll cost[] = {r,c,s};\n    ll sum = 0;\n    rep(i,PP.size() - 1){\n        ll cnt = 0;\n        rep(j,PP[i].size()){\n            rep(k,3){\n                if(ot[k] == PP[i][j])sum += cost[k];\n                if(ct[k] == PP[i][j])sum -= cost[k];\n            }\n        }\n\n        rep(j,PP[i+1].size()){\n            if(PP[i+1][j] != '.')break;\n            cnt++;\n        }\n        if(cnt != sum)return false;\n    }\n    return true;\n}\n\nvoid solve(ll r,ll c,ll s){\n    ll cnt[3] = {}; \n    rep(i,Q.size() - 1){\n        rep(j,Q[i].size()){\n            rep(k,3){\n                if(ot[k] == Q[i][j])cnt[k]++;\n                if(ct[k] == Q[i][j])cnt[k]--;\n            }\n        }\n        ll nn = cnt[0]*r + cnt[1]*c + cnt[2]*s;\n        if(ans[i] == 0)ans[i] = nn;\n        else if(ans[i] != nn)ans[i] = -1;\n    }\n}\n\nint main(){\n    while(cin >> p >> q && p){\n        PP.clear();\n        Q.clear();\n        ans.clear();\n        ans.resize(q-1,0);\n        rep(i,p){\n            string s;\n            cin >> s;\n            PP.push_back(s);\n        }\n        rep(i,q){\n            string s;\n            cin >> s;\n            Q.push_back(s);\n        }\n        FOR(r,1,21){\n            FOR(c,1,21){\n                FOR(s,1,21){\n                    if(check(r,c,s)){\n                        // cout << r << \" \" << c << \" \" << s << endl;\n                        solve(r,c,s);\n                    }\n                }\n            }\n        }\n        cout << 0 << \" \";\n        rep(i,ans.size()){\n            if(i != ans.size() - 1)cout << ans[i] << \" \";\n            else cout << ans[i] << endl;\n        }\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int P, Q;\n  int r[20], c[20], s[20], indent[20];\n  int ans[20];\n  \n  while(cin >> P >> Q, P) {\n    for(int i = 0; i < P + Q; i++) {\n      string S;\n      cin >> S;\n      r[i] = count(S.begin(), S.end(), '(') - count(S.begin(), S.end(), ')');\n      c[i] = count(S.begin(), S.end(), '{') - count(S.begin(), S.end(), '}');\n      s[i] = count(S.begin(), S.end(), '[') - count(S.begin(), S.end(), ']');\n      if(i != 0 && i != P) r[i] += r[i - 1], c[i] += c[i - 1], s[i] += s[i - 1];\n      for(indent[i] = 0; S[indent[i]] == '.'; ++indent[i]);\n    }\n    fill_n(ans, Q, -810);\n    for(int i = 1; i <= 20; i++) {\n      for(int j = 1; j <= 20; j++) {\n        for(int k = 1; k <= 20; k++) {\n          bool flag = true;\n          for(int l = 0; l < P; l++) {\n            flag &= i * r[l] + j * c[l] + k * s[l] == indent[l + 1];\n          }\n          if(!flag) continue;\n          for(int l = P; l < P + Q; l++) {\n            if(ans[l - P] == -810) ans[l - P] = i * r[l] + j * c[l] + k * s[l];\n            else if(ans[l - P] != i * r[l] + j * c[l] + l * s[l]) ans[l - P] = -1;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < Q; i++) {\n      cout << ans[(i + Q - 1) % Q] << (i + 1 == Q ? \"\\n\" : \" \");\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int P, Q;\n  int r[20], c[20], s[20], indent[20];\n  int ans[20];\n  \n  while(cin >> P >> Q, P) {\n    for(int i = 0; i < P + Q; i++) {\n      string S;\n      cin >> S;\n      r[i] = count(S.begin(), S.end(), '(') - count(S.begin(), S.end(), ')');\n      c[i] = count(S.begin(), S.end(), '{') - count(S.begin(), S.end(), '}');\n      s[i] = count(S.begin(), S.end(), '[') - count(S.begin(), S.end(), ']');\n      if(i != 0 && i != P) r[i] += r[i - 1], c[i] += c[i - 1], s[i] += s[i - 1];\n      for(indent[i] = 0; S[indent[i]] == '.'; ++indent[i]);\n    }\n    fill_n(ans, Q, -810);\n    for(int i = 1; i <= 20; i++) {\n      for(int j = 1; j <= 20; j++) {\n        for(int k = 1; k <= 20; k++) {\n          bool flag = true;\n          for(int l = 0; l < P - 1; l++) {\n            flag &= i * r[l] + j * c[l] + k * s[l] == indent[l + 1];\n          }\n          if(!flag) continue;\n          for(int l = P; l < P + Q; l++) {\n            if(ans[l - P] == -810) ans[l - P] = i * r[l] + j * c[l] + k * s[l];\n            else if(ans[l - P] != i * r[l] + j * c[l] + l * s[l]) ans[l - P] = -1;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < Q; i++) {\n      cout << ans[(i + Q - 1) % Q] << (i + 1 == Q ? \"\\n\" : \" \");\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define F first\n#define S second\n#define pii pair<int, int>\n#define eb emplace_back\n#define all(v) v.begin(), v.end()\n#define rep(i, n) for (int i = 0; i < (n); ++i)\n#define rep3(i, l, n) for (int i = l; i < (n); ++i)\n#define sz(v) (int)v.size()\n#define inf (int)(1e9+7)\ntemplate<typename T1, typename T2> inline bool chmin(T1 &a, T2 b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<typename T1, typename T2> inline bool chmax(T1 &a, T2 b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<typename T> T gcd(T a, T b) { if (b == 0) return a; return gcd(b, a % b); }\n\n\n\n\n\n\n\nvector<pair<char, int> > runlength(string str) {\n    vector<pair<char, int> > ret;\n    int cnt = 1;\n    int n = sz(str);\n    rep3(i, 1, n) {\n        if (str[i] == str[i - 1]) {\n            cnt++;\n        } else {\n            ret.eb(make_pair(str[i - 1], cnt));\n            cnt = 1;\n        }\n    }\n    ret.eb(make_pair(str[n - 1], cnt));\n    return ret;\n}\n\n\n\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    \n    \n    int m, n;\n    while (cin >> m && m) {\n        cin >> n;\n        string s[m], t[n];\n        rep(i, m) cin >> s[i];\n        rep(i, n) cin >> t[i];\n        \n        vector<vector<int> > par(m + 1, vector<int>(3));\n        char ch[] = {'(', '{', '[', ')', '}', ']'};\n        \n        rep(i, m) {\n            rep(j, sz(s[i])) {\n                rep(k, 6) {\n                    if (s[i][j] == ch[k]) {\n                        k < 3 ? par[i + 1][k % 3]++ : par[i + 1][k % 3]--;\n                        break;\n                    }\n                }\n            }\n        }\n        rep(i, m) rep(j, 3) par[i + 1][j] += par[i][j];\n        // cout << endl; rep(i, m) { rep(j, 3) cout << par[i][j] << \" \"; cout << endl; }\n        \n        vector<int> d(m);\n        rep(i, m) {\n            auto v = runlength(s[i]);\n            if (v[0].F != '.') continue;\n            d[i] = v[0].S;\n        }\n        // cout << endl; rep(i, m) cout << d[i] << \" \"; cout << endl;\n        \n        vector<tuple<int, int, int> > rcs;\n        rep3(R, 1, 21) rep3(C, 1, 21) rep3(S, 1, 21) {\n            int flg = 0;\n            rep(i, m) {\n                \n                if (R * par[i][0] + C * par[i][1] + S * par[i][2] != d[i]) {\n                    flg = 1;\n                    break;\n                }\n            }\n            if (flg == 0) {\n                rcs.eb(tie(R, C, S));\n            }\n        }\n        rep(i, sz(rcs)) {\n            int aa, bb, cc;\n            tie(aa, bb, cc) = rcs[i];\n            // cout << aa << \" \" << bb << \" \" << cc << endl;\n        }\n        \n        \n        par.resize(n + 1, vector<int>(3));\n        rep(i, n + 1) rep(j, 3) par[i][j] = 0;\n        rep(i, n) {\n            rep(j, sz(t[i])) {\n                rep(k, 6) {\n                    if (t[i][j] == ch[k]) {\n                        k < 3 ? par[i + 1][k % 3]++ : par[i + 1][k % 3]--;\n                        break;\n                    }\n                }\n            }\n        }\n        rep(i, n) rep(j, 3) par[i + 1][j] += par[i][j];\n        // rep(i, n) { rep(j, 3) cout << par[i][j] << \" \"; cout << endl; }\n        \n        vector<int> ans;\n        ans.eb(0);\n        rep3(i, 1, n) {\n            vector<int> tmp;\n            rep(j, sz(rcs)) {\n                int aa, bb, cc;\n                tie(aa, bb, cc) = rcs[j];\n                tmp.eb(aa * par[i][0] + bb * par[i][1] + cc * par[i][2]);\n            }\n            sort(all(tmp));\n            tmp.erase(unique(all(tmp)), tmp.end());\n            if (sz(tmp) == 1) ans.eb(tmp[0]);\n            else ans.eb(-1);\n        }\n        \n        rep(i, n) { if (i) cout << \" \"; cout << ans[i]; } cout << endl;\n    }\n}\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, m; string s;\nint main() {\n\twhile (cin >> n >> m, n) {\n\t\tvector<int> a(n + m), b(n + m), c(n + m), d(n + m);\n\t\tint da = 0, db = 0, dc = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> s;\n\t\t\ta[i] = da, b[i] = db, c[i] = dc;\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] != '.') {\n\t\t\t\t\td[i] = j; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t\tvector<int> ra, rb, rc;\n\t\tfor (int i = 0; i <= 80; i++) {\n\t\t\tfor (int j = 0; j <= 80; j++) {\n\t\t\t\tfor (int k = 0; k <= 80; k++) {\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\t\tif (i * a[l] + j * b[l] + k * c[l] != d[l]) {\n\t\t\t\t\t\t\tflag = false; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (flag) {\n\t\t\t\t\t\tra.push_back(i);\n\t\t\t\t\t\trb.push_back(j);\n\t\t\t\t\t\trc.push_back(k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tcin >> s;\n\t\t\tvector<int> x;\n\t\t\tfor (int j = 0; j < ra.size(); j++) x.push_back(da * ra[j] + db * rb[j] + dc * rc[j]);\n\t\t\tsort(x.begin(), x.end());\n\t\t\tx.erase(unique(x.begin(), x.end()), x.end());\n\t\t\tif (x.size() != 1) cout << -1 << endl;\n\t\t\telse cout << x[0] << endl;\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nint gcd(int a,int b){\n  if(b==0) return a;\n  return gcd(b,a%b);\n}\nint lcm(int m,int n){\n  if((0==m)||(0==n)) return 0;\n  return (m/gcd(m,n))*n;\n}\nvoid cal();\nint R(char);\nint cnt[2][N][3],n[2],ans,X,Y,Z,fa,fb,fc;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    X=Y=Z=0;\n    cal();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      ans=-1;\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tint a=(*j).A,b=(*j).B,c=(*j).C;\n\tif(a&&b&&c&&((*j).second==3||(*j).second==60)) X=(*j).second/3,Y=X,Z=X;\n      }\n      if(fa&&fb&&fc&&X&&Y&&Z) ans=X*fa+Y*fb+Z*fc;\n      if(fa&&fb&&!fc){\n\tif(X&&Y) ans=X*fa+Y*fb;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(a&&b){\n\t      int r=gcd(a,b);\n\t      a/=r;\n\t      b/=r;\n\t      r=gcd(fa,fb);\n\t      if(fa/r==a&&fb/r==b) ans=(*j).second*(fa/a);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&fc){\n\tif(X&&Z) ans=X*fa+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(b&&c){\n\t      int r=gcd(b,c);\n\t      b/=r;\n\t      c/=r;\n\t      r=gcd(fb,fc);\n\t      if(fb/r==b&&fc/r==c) ans=(*j).second*(fb/b);\n\t    }\n\t  }\n      }\n      if(!fa&&fb&&fc){\n\tif(Y&&Z) ans=Y*fb+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(c&&a){\n\t      int r=gcd(c,a);\n\t      c/=r;\n\t      a/=r;\n\t      r=gcd(fc,fa);\n\t      if(fc/r==c&&fa/r==a) ans=(*j).second*(fc/c);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&!fc&&X) ans=X*fa;\n      if(!fa&&fb&&!fc&&Y) ans=Y*fb;\n      if(!fa&&!fb&&fc&&Z) ans=Z*fc;\n      \n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}\n\nvoid cal(){\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    for(MAP::iterator j=m.begin();j!=m.end();j++){\n      for(MAP::iterator k=m.begin();k!=m.end();k++){\n\tint r,s,t,u,x=-1,y=-1,z=-1;\n\tint a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n\tint e=(*j).A,f=(*j).B,g=(*j).C,h=(*j).second;\n\tint l=(*k).A,o=(*k).B,p=(*k).C,q=(*k).second;\n\tif(a&&e){\n\t  r=lcm(a,e);\n\t  int x1=r/a,x2=r/e;\n\t  a=a*x1-e*x2; b=b*x1-f*x2; c=c*x1-g*x2; d=d*x1-h*x2;\n\t}\n\tif(e&&l){\n\t  r=lcm(e,l);\n\t  int x1=r/e,x2=r/l;\n\t  e=e*x1-l*x2; f=f*x1-o*x2; g=g*x1-p*x2; h=h*x1-q*x2;\n\t}\n\tif(l&&a){\n\t  r=lcm(l,a);\n\t  int x1=r/l,x2=r/a;\n\t  l=l*x1-a*x2; o=o*x1-b*x2; p=p*x1-c*x2; q=q*x1-d*x2;\n\t}\n\tif(b&&f){\n\t  r=lcm(b,f);\n\t  int x1=r/b,x2=r/f;\n\t  if(a>=e) a=a*x1-e*x2,b=b*x1-f*x2,c=c*x1-g*x2,d=d*x1-h*x2;\n\t  else e=e*x2-a*x1,f=f*x2-b*x1,g=g*x2-c*x1,h=h*x2-d*x1;\n\t}\n\tif(f&&o){\n\t  r=lcm(f,o);\n\t  int x1=r/f,x2=r/o;\n\t  if(e>=l) e=e*x1-l*x2,f=f*x1-o*x2,g=g*x1-p*x2,h=h*x1-q*x2;\n\t  else l=l*x2-e*x1,o=o*x2-f*x1,p=p*x2-g*x1,q=q*x2-h*x1;\n\t}\n\tif(o&&b){\n\t  r=lcm(o,b);\n\t  int x1=r/o,x2=r/b;\n\t  if(l>=a) l=l*x1-a*x2,o=o*x1-b*x2,p=p*x1-c*x2,q=q*x1-d*x2;\n\t  else a=a*x2-l*x1,b=b*x2-o*x1,c=c*x2-p*x1,d=d*x2-q*x1;\n\t}\n\tif(!a&&!b){\n\t  if(g){\n\t    if(c){\n\t      r=lcm(c,g);\n\t      int x1=r/c,x2=r/g;\n\t      g=g*x2-c*x1,h=h*x2-d*x1;\n\t    }\n\t  }\n\t  else if(p){\n\t    if(c){\n\t      r=lcm(c,p);\n\t      int x1=r/c,x2=r/p;\n\t      p=p*x2-c*x1,q=q*x2-d*x1;\n\t    }\n\t  }\n\t}\n\tif(!e&&!f){\n\t  if(p){\n\t    if(g){\n\t      r=lcm(g,p);\n\t      int x1=r/g,x2=r/p;\n\t      p=p*x2-g*x1,q=q*x2-h*x1;\n\t    }\n\t  }\n\t  else if(c){\n\t    if(g){\n\t      r=lcm(g,c);\n\t      int x1=r/g,x2=r/c;\n\t      c=c*x2-g*x1,d=d*x2-h*x1;\n\t    }\n\t  }\n\t}\n\tif(!l&&!o){\n\t  if(c){\n\t    if(p){\n\t      r=lcm(p,c);\n\t      int x1=r/p,x2=r/c;\n\t      c=c*x2-p*x1,d=d*x2-q*x1;\n\t    }\n\t  }\n\t  else if(g){\n\t    if(p){\n\t      r=lcm(p,g);\n\t      int x1=r/p,x2=r/g;\n\t      g=g*x2-p*x1,h=h*x2-q*x1;\n\t    }\n\t  }\n\t}\n\tif(a&&!b&&!c&&!e&&!l) x=d/a;\n\tif(e&&!f&&!g&&!a&&!l) x=h/e;\n\tif(l&&!o&&!p&&!a&&!e) x=q/l;\n\tif(!a&&b&&!c&&!f&&!o) y=d/b;\n\tif(!e&&f&&!g&&!b&&!o) y=h/f;\n\tif(!l&&o&&!p&&!b&&!f) y=q/o;\n\tif(!a&&!b&&c&&!g&&!p) z=d/c;\n\tif(!e&&!f&&g&&!c&&!p) z=h/g;\n\tif(!l&&!o&&p&&!c&&!g) z=q/p;\n\tif(x!=-1) X=x;\n\tif(y!=-1) Y=y;\n\tif(z!=-1) Z=z;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, m; string s;\nint main() {\n\twhile (cin >> n >> m, n) {\n\t\tvector<int> a(n + m), b(n + m), c(n + m), d(n + m);\n\t\tint da = 0, db = 0, dc = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> s;\n\t\t\ta[i] = da, b[i] = db, c[i] = dc;\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] != '.') {\n\t\t\t\t\td[i] = j; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t\tvector<int> ra, rb, rc;\n\t\tfor (int i = 0; i <= 20; i++) {\n\t\t\tfor (int j = 0; j <= 20; j++) {\n\t\t\t\tfor (int k = 0; k <= 20; k++) {\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\t\tif (i * a[l] + j * b[l] + k * c[l] != d[l]) {\n\t\t\t\t\t\t\tflag = false; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (flag) {\n\t\t\t\t\t\tra.push_back(i);\n\t\t\t\t\t\trb.push_back(j);\n\t\t\t\t\t\trc.push_back(k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i) cout << ' ';\n\t\t\tcin >> s;\n\t\t\tvector<int> x;\n\t\t\tfor (int j = 0; j < ra.size(); j++) x.push_back(da * ra[j] + db * rb[j] + dc * rc[j]);\n\t\t\tsort(x.begin(), x.end());\n\t\t\tx.erase(unique(x.begin(), x.end()), x.end());\n\t\t\tif (x.size() != 1) cout << -1;\n\t\t\telse cout << x[0];\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nint gcd(int a,int b){\n  if(b==0) return a;\n  return gcd(b,a%b);\n}\nint lcm(int m,int n){\n  if((0==m)||(0==n)) return 0;\n  return (m/gcd(m,n))*n;\n}\nvoid cal();\nint R(char);\nint cnt[2][N][3],n[2],ans,X,Y,Z,fa,fb,fc;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    X=Y=Z=0;\n    cal();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      ans=-1;\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tint a=(*j).A,b=(*j).B,c=(*j).C;\n\tif(a&&b&&c&&((*j).second==3||(*j).second==60)) X=(*j).second/3,Y=X,Z=X;\n      }\n      if(fa&&fb&&fc&&X&&Y&&Z) ans=X*fa+Y*fb+Z*fc;\n      if(fa&&fb&&!fc){\n\tif(X&&Y) ans=X*fa+Y*fb;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C,d=0;\n\t    if(a&&b){\n\t      d=(*j).second;\n\t      if(c&&Z) d-=c*Z;\n\t      int r=gcd(a,b);\n\t      a/=r;\n\t      b/=r;\t      \n\t      r=gcd(fa,fb);\n\t      if(fa/r==a&&fb/r==b) ans=d*(fa/a);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&fc){\n\tif(X&&Z) ans=X*fa+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C,d=0;\n\t    if(c&&a){\n\t      d=(*j).second;\n\t      if(b&&Y) d-=b*Y;\n\t      int r=gcd(c,a);\n\t      c/=r;\n\t      a/=r;\n\t      r=gcd(fc,fa);\n\t      if(fc/r==c&&fa/r==a) ans=d*(fc/c);\n\t    }\n\t  }\n      }\n      if(!fa&&fb&&fc){\n\tif(Y&&Z) ans=Y*fb+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C,d=0;\n\t    if(b&&c){\n\t      d=(*j).second;\n\t      int r=gcd(b,c);\n\t      if(a&&X) d-=a*X;\n\t      b/=r;\n\t      c/=r;\n\t      r=gcd(fb,fc);\n\t      if(fb/r==b&&fc/r==c) ans=d*(fb/b);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&!fc&&X) ans=X*fa;\n      if(!fa&&fb&&!fc&&Y) ans=Y*fb;\n      if(!fa&&!fb&&fc&&Z) ans=Z*fc;\n      if(!fa&&!fb&&!fc) ans=0;\n      cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}\n\nvoid cal(){\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    for(MAP::iterator j=m.begin();j!=m.end();j++){\n      for(MAP::iterator k=m.begin();k!=m.end();k++){\n\tint r,x=-1,y=-1,z=-1;\n\tint a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n\tint e=(*j).A,f=(*j).B,g=(*j).C,h=(*j).second;\n\tint l=(*k).A,o=(*k).B,p=(*k).C,q=(*k).second;\n\tif(a&&e){\n\t  r=lcm(a,e);\n\t  int x1=r/a,x2=r/e;\n\t  a=a*x1-e*x2; b=b*x1-f*x2; c=c*x1-g*x2; d=d*x1-h*x2;\n\t}\n\tif(e&&l){\n\t  r=lcm(e,l);\n\t  int x1=r/e,x2=r/l;\n\t  e=e*x1-l*x2; f=f*x1-o*x2; g=g*x1-p*x2; h=h*x1-q*x2;\n\t}\n\tif(l&&a){\n\t  r=lcm(l,a);\n\t  int x1=r/l,x2=r/a;\n\t  l=l*x1-a*x2; o=o*x1-b*x2; p=p*x1-c*x2; q=q*x1-d*x2;\n\t}\n\tif(b&&f){\n\t  r=lcm(b,f);\n\t  int x1=r/b,x2=r/f;\n\t  if(a>=e) a=a*x1-e*x2,b=b*x1-f*x2,c=c*x1-g*x2,d=d*x1-h*x2;\n\t  else e=e*x2-a*x1,f=f*x2-b*x1,g=g*x2-c*x1,h=h*x2-d*x1;\n\t}\n\tif(f&&o){\n\t  r=lcm(f,o);\n\t  int x1=r/f,x2=r/o;\n\t  if(e>=l) e=e*x1-l*x2,f=f*x1-o*x2,g=g*x1-p*x2,h=h*x1-q*x2;\n\t  else l=l*x2-e*x1,o=o*x2-f*x1,p=p*x2-g*x1,q=q*x2-h*x1;\n\t}\n\tif(o&&b){\n\t  r=lcm(o,b);\n\t  int x1=r/o,x2=r/b;\n\t  if(l>=a) l=l*x1-a*x2,o=o*x1-b*x2,p=p*x1-c*x2,q=q*x1-d*x2;\n\t  else a=a*x2-l*x1,b=b*x2-o*x1,c=c*x2-p*x1,d=d*x2-q*x1;\n\t}\n\tif(!a&&!b){\n\t  if(g){\n\t    if(c){\n\t      r=lcm(c,g);\n\t      int x1=r/c,x2=r/g;\n\t      g=g*x2-c*x1,h=h*x2-d*x1;\n\t    }\n\t  }\n\t  else if(p){\n\t    if(c){\n\t      r=lcm(c,p);\n\t      int x1=r/c,x2=r/p;\n\t      p=p*x2-c*x1,q=q*x2-d*x1;\n\t    }\n\t  }\n\t}\n\tif(!e&&!f){\n\t  if(p){\n\t    if(g){\n\t      r=lcm(g,p);\n\t      int x1=r/g,x2=r/p;\n\t      p=p*x2-g*x1,q=q*x2-h*x1;\n\t    }\n\t  }\n\t  else if(c){\n\t    if(g){\n\t      r=lcm(g,c);\n\t      int x1=r/g,x2=r/c;\n\t      c=c*x2-g*x1,d=d*x2-h*x1;\n\t    }\n\t  }\n\t}\n\tif(!l&&!o){\n\t  if(c){\n\t    if(p){\n\t      r=lcm(p,c);\n\t      int x1=r/p,x2=r/c;\n\t      c=c*x2-p*x1,d=d*x2-q*x1;\n\t    }\n\t  }\n\t  else if(g){\n\t    if(p){\n\t      r=lcm(p,g);\n\t      int x1=r/p,x2=r/g;\n\t      g=g*x2-p*x1,h=h*x2-q*x1;\n\t    }\n\t  }\n\t}\n\tif(a&&!b&&!c&&!e&&!l) x=d/a;\n\tif(e&&!f&&!g&&!a&&!l) x=h/e;\n\tif(l&&!o&&!p&&!a&&!e) x=q/l;\n\tif(!a&&b&&!c&&!f&&!o) y=d/b;\n\tif(!e&&f&&!g&&!b&&!o) y=h/f;\n\tif(!l&&o&&!p&&!b&&!f) y=q/o;\n\tif(!a&&!b&&c&&!g&&!p) z=d/c;\n\tif(!e&&!f&&g&&!c&&!p) z=h/g;\n\tif(!l&&!o&&p&&!c&&!g) z=q/p;\n\tif(x>=0) X=x;\n\tif(y>=0) Y=y;\n\tif(z>=0) Z=z;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\treg_open = reg_close = cur_open = cur_close = sq_open = sq_close = dot_num = 0;\n\t}\n\tint reg_open,reg_close,cur_open,cur_close,sq_open,sq_close,dot_num;\n};\n\nstruct RCS{\n\tRCS(){\n\t\tR = C = S = -1;\n\t}\n\tint R,C,S;\n};\n\nint sample_line,do_line;\n\nInfo parseLine(char buf[]){\n\tInfo data;\n\n\tfor(int i = 0; buf[i] == '.'; i++)data.dot_num++;\n\n\tfor(int i = 0;buf[i] != '\\0'; i++){\n\t\tswitch(buf[i]){\n\t\tcase '.':\n\t\t\t//Do nothing\n\t\t\tbreak;\n\t\tcase '(':\n\t\t\tdata.reg_open++;\n\t\t\tbreak;\n\t\tcase ')':\n\t\t\tdata.reg_close++;\n\t\t\tbreak;\n\t\tcase '{':\n\t\t\tdata.cur_open++;\n\t\t\tbreak;\n\t\tcase '}':\n\t\t\tdata.cur_close++;\n\t\t\tbreak;\n\t\tcase '[':\n\t\t\tdata.sq_open++;\n\t\t\tbreak;\n\t\tcase ']':\n\t\t\tdata.sq_close++;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn data;\n}\n\nvoid func(){\n\tInfo info[sample_line];\n\tInfo tmp;\n\n\tchar buf[100];\n\n\tscanf(\"%s\",buf);\n\n\ttmp = parseLine(buf);\n\n\tinfo[0].reg_open += tmp.reg_open;\n\tinfo[0].reg_close += tmp.reg_close;\n\tinfo[0].cur_open += tmp.cur_open;\n\tinfo[0].cur_close += tmp.cur_close;\n\tinfo[0].sq_open += tmp.sq_open;\n\tinfo[0].sq_close += tmp.sq_close;\n\n\tfor(int i = 1; i < sample_line;i++){\n\t\tscanf(\"%s\",buf);\n\n\t\ttmp = parseLine(buf);\n\t\tinfo[i].dot_num = tmp.dot_num;\n\n\t\tinfo[i].reg_open = info[i-1].reg_open + tmp.reg_open;\n\t\tinfo[i].reg_close = info[i-1].reg_close + tmp.reg_close;\n\t\tinfo[i].cur_open = info[i-1].cur_open+tmp.cur_open;\n\t\tinfo[i].cur_close = info[i-1].cur_close + tmp.cur_close;\n\t\tinfo[i].sq_open = info[i-1].sq_open + tmp.sq_open;\n\t\tinfo[i].sq_close = info[i-1].sq_close + tmp.sq_close;\n\t}\n\n\tRCS candidate[8001];\n\tint index = 0;\n\tbool FLG;\n\n\tfor(int r = 1; r <= 20; r++){\n\t\tfor(int c = 1; c <= 20; c++){\n\t\t\tfor(int s = 1; s <= 20; s++){\n\t\t\t\tFLG = true;\n\t\t\t\tfor(int line = 1; line <= sample_line-1; line++){\n\t\t\t\t\tif(info[line].dot_num != r*(info[line-1].reg_open-info[line-1].reg_close)+c*(info[line-1].cur_open-info[line-1].cur_close)\n\t\t\t\t\t\t\t+s*(info[line-1].sq_open-info[line-1].sq_close)){\n\t\t\t\t\t\tFLG = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(FLG){\n\t\t\t\t\tcandidate[index].R = r;\n\t\t\t\t\tcandidate[index].C = c;\n\t\t\t\t\tcandidate[index].S = s;\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tint line_ans,tmp_ans;\n\tInfo new_info;\n\n\tscanf(\"%s\",buf);\n\n\tnew_info = parseLine(buf);\n\n\tprintf(\"0\");\n\n\tfor(int i = 1; i < do_line; i++){\n\t\tline_ans = BIG_NUM;\n\t\tfor(int k = 0; k < index; k++){\n\t\t\ttmp_ans = candidate[k].R*(new_info.reg_open-new_info.reg_close) + candidate[k].C*(new_info.cur_open-new_info.cur_close)\n\t\t\t\t\t+candidate[k].S*(new_info.sq_open-new_info.sq_close);\n\t\t\tif(line_ans == BIG_NUM || line_ans == tmp_ans){\n\t\t\t\tline_ans = tmp_ans;\n\t\t\t}else{\n\t\t\t\tline_ans = -1;\n\t\t\t}\n\t\t}\n\t\tif(line_ans == BIG_NUM)line_ans = -1;\n\t\tprintf(\" %d\",line_ans);\n\n\t\tscanf(\"%s\",buf);\n\n\t\ttmp = parseLine(buf);\n\n\t\tnew_info.reg_open += tmp.reg_open;\n\t\tnew_info.reg_close += tmp.reg_close;\n\t\tnew_info.cur_open += tmp.cur_open;\n\t\tnew_info.cur_close += tmp.cur_close;\n\t\tnew_info.sq_open += tmp.sq_open;\n\t\tnew_info.sq_close += tmp.sq_close;\n\t}\n\tprintf(\"\\n\");\n}\n\nint main(){\n\n\twhile(true){\n\t\tscanf(\"%d %d\",&sample_line,&do_line);\n\t\tif(sample_line == 0 && do_line == 0)break;\n\n\t\tfunc();\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <complex>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <iomanip>\n#include <assert.h>\n#include <array>\n#include <cstdio>\n#include <cstring>\n#include <random>\n#include <functional>\n#include <numeric>\n#include <bitset>\n\nusing namespace std;\n\nstruct before_main{before_main(){cin.tie(0); ios::sync_with_stdio(false);}} before_main;\n\n#define REP(i,a,b) for(int i=a;i<(int)b;i++)\n#define rep(i,n) REP(i,0,n)\n#define all(c) (c).begin(), (c).end()\n#define zero(a) memset(a, 0, sizeof a)\n#define minus(a) memset(a, -1, sizeof a)\ntemplate<class T1, class T2> inline bool minimize(T1 &a, T2 b) { return b < a && (a = b, 1); }\ntemplate<class T1, class T2> inline bool maximize(T1 &a, T2 b) { return a < b && (a = b, 1); }\n\ntypedef long long ll;\nint const inf = 1<<29;\n\n\nint p,q;\n \nint main(){\n\n  for(int N, Q;cin>>N>>Q&&(N|Q);) {\n    vector<string> M(N);\n    vector<string> T(Q);\n    vector<int> ans(Q);\n    rep(i, Q) ans[i] = inf;\n    rep(i, N) cin >> M[i];\n    rep(i, Q) cin >> T[i];\n    REP(R, 1, 21) REP(C, 1, 21) REP(S, 1, 21) {\n      bool ok = 1;\n      int r = 0, c = 0, s = 0;\n      rep(i, N) {\n        const int MiLen = M[i].size();\n        int indent = 0;\n        rep(j, MiLen) {\n          if(M[i][j] == '.') {\n            indent ++;\n          }\n          else {\n            if(R * r + C * c + S * s != indent) {\n              ok = 0;\n            }\n            break;\n          }\n        }\n        rep(j, MiLen) {\n          r += (M[i][j] == '(') - (M[i][j] == ')');\n          c += (M[i][j] == '{') - (M[i][j] == '}');\n          s += (M[i][j] == '[') - (M[i][j] == ']');\n        }\n      }\n\n      if(!ok) { continue; }\n\n      r = 0, c = 0, s = 0;\n\n      rep(i, Q) {\n        if(ans[i] == inf) {\n          ans[i] = R * r + C * c + S * s;\n        }\n        else if(ans[i] != R * r + C * c + S * s) {\n          ans[i] = -1;\n        }\n        \n        int n = T[i].size();\n        rep(j, n) {\n          r += (T[i][j] == '(') - (T[i][j] == ')');\n          c += (T[i][j] == '{') - (T[i][j] == '}');\n          s += (T[i][j] == '[') - (T[i][j] == ']');\n        }\n      }\n    }\n\n    rep(i, Q) {\n      if(i) cout << \" \";\n      cout << ans[i];\n    }\n    cout << endl;\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <tuple>\n#include <cmath>\nusing namespace std;\n\ntypedef tuple<int,int,int,int> T;\n\nint cnt(string s){\n    int ret=0;\n    for(auto c:s){\n        if(c=='.') ret++;\n        else break;\n    }\n    return ret;\n}\n\nint main(){\n    int P,Q;\n    while(cin>>P>>Q,P){\n        vector<T> V;\n        for(int i=0,r=0,c=0,s=0;i<P;i++){\n            string str;\n            cin>>str;\n            if(cnt(str))V.emplace_back(cnt(str),r,c,s);\n            // cout<<cnt(str)<<' '<<r<<' '<<c<<' '<<s<<' '<<str<<endl;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        for(auto t:V){\n            int a,b,c,d;\n            tie(a,b,c,d)=t;\n            // cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;\n        }\n        bool bR[21]={},bC[21]={},bS[21]={};\n        // fill(bS,bS+21,false);\n        for(int R=1;R<=20;R++){\n            for(int C=1;C<=20;C++){\n                for(int S=1;S<=20;S++){\n                    bool flag = true;\n                    for(auto t:V){\n                        int cnt,r,c,s;\n                        tie(cnt,r,c,s)=t;\n                        if(R*r+C*c+S*s!=cnt){\n                            flag=false;\n                            break;\n                        }\n                    }\n                    if(flag){\n                        bR[R]=bC[C]=bS[S]=true;\n                        // cout<<\"R: \"<<R<<\" C: \"<<C<<\" S: \"<<S<<endl;\n                    }\n                }\n            }\n        }\n        int R,C,S,cnt;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bR[i]){\n                R=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) R=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bC[i]){\n                C=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) C=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bS[i]){\n                S=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) S=-1;\n        // cout<<\"R: \"<<R<<\" C: \"<<C<<\" S: \"<<S<<endl;\n        for(int i=0,r=0,s=0,c=0;i<Q;i++){\n            // cout<<\"r: \"<<r<<\" s: \"<<s<<\" c: \"<<c<<endl;\n            if(i)cout<<' ';\n            if((R==-1&&r)||(S==-1&&s)||(C==-1&&c)){\n                int d=-1;\n                for(auto t:V){\n                    int dot,rr,ss,cc;\n                    tie(dot,rr,ss,cc)=t;\n                    //???????????????????????????\n                    if((rr*r+ss*s+cc*c)*(rr*r+ss*s+cc*c)==(rr*rr+ss*ss+cc*cc)*(r*r+s*s+c*c)){\n                        if(rr){\n                            d=round(double(r)/rr*dot);\n                        }else if(ss){\n                            d=round(double(s)/ss*dot);\n                        }else if(cc){\n                            d=round(double(c)/cc*dot);\n                        }else{\n                            d=0;\n                        }\n                        break;\n                    }\n                }\n                cout<<d;\n            }else{\n                cout<<R*r+S*s+C*c;\n            }\n            // cout<<endl;\n            string str;\n            cin>>str;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<set>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define MAX 20\nusing namespace std;\nint p,q;\nstring P[MAX],Q[MAX];\nint leading[2][MAX];\n\nbool check(int R,int C,int S)\n{\n  int r,c,s;\n  r = c = s = 0;\n  rep(i,p)\n    {\n      //cout << leading[0][i] << \"  = \" <<R*r + c*C + s*S << endl;\n      if(leading[0][i] != R*r + c*C + s*S)return false;\n\n      rep(j,P[i].size())\n\t{\n\t  if(P[i][j] == '(')r++;\n\t  else if(P[i][j] == '{')c++;\n\t  else if(P[i][j] == '[')s++;\n\t  \n\t  if(P[i][j] == ')')r--;\n\t  else if(P[i][j] == '}')c--;\n\t  else if(P[i][j] == ']')s--;\n\t}\n    }\n  return true;\n}\n\nint main()\n{\n  while(cin >> p >> q,p|q)\n    {\n      vector<int> Rv,Cv,Sv;\n      rep(i,p)\n\t{\n\t  cin >> P[i];\n\t  int cnt = 0;\n\t  rep(j,P[i].size())\n\t    {\n\t      if(P[i][j] == '.')cnt++;\n\t      else              break;\n\t    }\n\n\t  leading[0][i] = cnt;\n\t  //cout << \"leading[\" << i << \"] = \"<< leading[0][i] << endl;\n\t}\n\n      rep(i,q)\n\t{\n\t  cin >> Q[i];\n\t  int cnt = 0;\n\t  rep(j,Q[i].size())\n\t    {\n\t      if(Q[i][j] == '.')cnt++;\n\t      else              break;\n\t    }\n\t  leading[1][i] = cnt;\n\t}\n\n      //check(9,5,2);\n      //return 0;\n      REP(R,1,21)\n\t{\n\t  REP(C,1,21)\n\t    {\n\t      REP(S,1,21)\n\t\t{\n\t\t  if(check(R,C,S))\n\t\t    {\n\t\t      Rv.push_back(R);\n\t\t      Cv.push_back(C);\n\t\t      Sv.push_back(S);\n\t\t    }\n\t\t}\n\t    }\n\t}\n\n\n      // cout << Rv.size() << \" \" << Cv.size() << \" \" << Sv.size() << endl; \n      /*\n      int R,C,S;\n      R = C = S = -1;\n\n      if(!Rv.empty())\n\t{\n\t  R = Rv[0];\n\t  REP(i,1,Rv.size())\n\t    {\n\t      if(Rv[i] != R)\n\t\t{\n\t\t  R = -1;\n\t\t  break;\n\t\t}\n\t    }      \n\t}\n\n      if(!Cv.empty())\n\t{\n\t  C = Cv[0] ;\n\t  REP(i,1,Cv.size())\n\t    {\n\t      if(Cv[i] != C)\n\t\t{\n\t\t  C = -1;\n\t\t  break;\n\t\t}\n\t    }      \n\t}\n      if(!Sv.empty())\n\t{\n\t  S = Sv[0];\n\t  REP(i,1,Sv.size())\n\t    {\n\t      if(Sv[i] != S)\n\t\t{\n\t\t  S = -1;\n\t\t  break;\n\t\t}\n\t    }      \n\t}\n      */\n      //cout << \"RCS = \" << 0  << \",\" << 0<<\",\" << 0<< endl;\n\n      int totalCost = 0;\n      int r,s,c;\n      r = s = c = 0;\n      rep(i,q)\n\t{\n\t  set<int> st;\n\t  rep(j,Rv.size())\n\t    {\n\t      totalCost = r*Rv[j] + c*Cv[j] + s*Sv[j];\n\t      st.insert(totalCost);\n\t    }\n\n\t  if(st.empty() || (int)st.size() >= 2)\n\t    {\n\t      cout << -1;\n\t    }\n\t  else \n\t    {\n\t      set<int>::iterator it = st.begin();\n\t      cout << (*it);\n\t    }\n\t  if(i == q-1)cout << endl;\n\t  else cout << \" \";\n\n\t  rep(j,Q[i].size())\n\t    {\n\t      if(Q[i][j] == '(')r++;\n\t      else if(Q[i][j] == '{')c++;\n\t      else if(Q[i][j] == '[')s++;\n\t      \n\t      if(Q[i][j] == ')')r--;\n\t      else if(Q[i][j] == '}')c--;\n\t      else if(Q[i][j] == ']')s--;\n\t    }\n\t  //cout << r << \" \"<< c <<  \" \" << s << endl;\n\t\n      \n\t}\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// template {{{\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define loop(i, a, b) for (int i = (int)(a); i < (int)(b); i++)\n#define rep(i, n) loop(i, 0, n)\n#define rloop(i, a, b) for (int i = (int)(b) - 1; i >= (int)(a); i--)\n#define rrep(i, n) rloop(i, 0, n)\n#define pb push_back\n#define pf push_front\n#define eb emplace_back\n#define ef emplace_front\n#define mp std::make_pair\n#define mt std::make_tuple\n#define fi first\n#define se second\n\nusing ll = long long;\nusing ull = unsigned long long;\n\ntemplate<typename T, size_t H, size_t W>\nusing matrix = std::array<std::array<T, W>, H>;\n\nconst int MOD = 1e9 + 7;\nconst int INF = 1e9 + 10;\nconst ll LLINF = 1e18 + 10;\n\nconst int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1};\nconst int dy[] = {0, -1, 0, 1, -1, 1, -1, 1};\n\ntemplate<typename T>\ninline T sq(T x){ return x * x; }\n\ntemplate<typename T, typename U>\ninline void chmax(T &x, U y){ x = std::max<T>(x, y); }\n\ntemplate<typename T, typename U>\ninline void chmin(T &x, U y){ x = std::min<T>(x, y); }\n\ntemplate<typename T>\ninline void sort(T &c){ std::sort(std::begin(c), std::end(c)); }\n\ntemplate<typename T>\ninline void reverse(T &c){ std::reverse(std::begin(c), std::end(c)); }\n\ntemplate<typename T>\ninline void unique(T &c){ std::sort(c); c.erase(std::unique(std::begin(c), std::end(c))); }\n\n// }}}\n\nint n, m;\nstring s[10], t[10];\n\nint main()\n{\n\twhile (cin >> n >> m, n){\n\t\trep(i, n) cin >> s[i];\n\t\trep(i, m) cin >> t[i];\n\t\t\n\t\tset<int> r[10];\n\t\tr[0].insert(0);\n\t\tloop(a, 1, 21) loop(b, 1, 21) loop(c, 1, 21){\n\t\t\tbool f = true;\n\t\t\tint x = 0, y = 0, z = 0;\n\t\t\trep(i, n){\n\t\t\t\tint w = s[i].find_first_not_of('.');\n\t\t\t\tif (w != a * x + b * y + c * z) f = false;\n\t\t\t\tx += count(begin(s[i]), end(s[i]), '(');\n\t\t\t\ty += count(begin(s[i]), end(s[i]), '{');\n\t\t\t\tz += count(begin(s[i]), end(s[i]), '[');\n\t\t\t\tx -= count(begin(s[i]), end(s[i]), ')');\n\t\t\t\ty -= count(begin(s[i]), end(s[i]), '}');\n\t\t\t\tz -= count(begin(s[i]), end(s[i]), ']');\n\t\t\t}\n\t\t\tif (!f) continue;\n\t\t\tx = y = z = 0;\n\t\t\trep(i, m){\n\t\t\t\tint w = a * x + b * y + c * z;\n\t\t\t\tif (w >= 0) r[i].insert(w);\n\t\t\t\tx += count(begin(t[i]), end(t[i]), '(');\n\t\t\t\ty += count(begin(t[i]), end(t[i]), '{');\n\t\t\t\tz += count(begin(t[i]), end(t[i]), '[');\n\t\t\t\tx -= count(begin(t[i]), end(t[i]), ')');\n\t\t\t\ty -= count(begin(t[i]), end(t[i]), '}');\n\t\t\t\tz -= count(begin(t[i]), end(t[i]), ']');\n\t\t\t}\n\t\t}\n\n\t\trep(i, m){\n\t\t\tint t = r[i].size() == 1 ? *r[i].begin() : -1;\n\t\t\tcout << t << \"\\n \"[i < m - 1];\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": " \n#include <bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\nusing vi=vector<int>;\nusing vvi=vector<vi>;\nusing vs=vector<string>;\nusing msi=map<string,int>;\nusing mii=map<int,int>;\nusing psi=pair<string,int>;\nusing pii=pair<int,int>;\nusing vlai=valarray<int>;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define range(i,s,n) for(int i=s;i<n;i++)\n#define all(a) a.begin(),a.end()\n#define rall(a) a.rbegin(),a.rend()\n#define fs first\n#define sc second\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define MOD ((ll)1e9+7)\nvoid get(){}template<class H,class...T>void get(H&h,T&...t){cin>>h;get(t...);}\ntemplate<class T>void geti(T&a){for(auto&_:a)cin>>_;}\ntemplate<class T>void getii(T&a){for(auto&_:a)geti(_);}\nvoid put(string d){}template<class H,class...T>void put(string d,H&h,T&...t){cout<<h;if(sizeof...(t))cout<<d;put(d,t...);}\ntemplate<class T>void puti(T&a,string d=\" \"){bool f=1;for(auto&_:a)cout<<(exchange(f,0)?\"\":d)<<_;cout<<endl;}\ntemplate<class T>void putii(T&a,string d=\" \"){for(auto&_:a)puti(_,d);}\n#define dcl(...) ll __VA_ARGS__;get(__VA_ARGS__)\n#define dclt(t,...) t __VA_ARGS__;get(__VA_ARGS__)\ntemplate<class F,class S>void add(map<F,S>&mp,F f,S s){if(mp.find(f)==mp.end())mp[f]=F();mp[f]+=s;}\n\nint main(){\n    while(1){\n        dcl(p,q);\n        if(p==0) break;\n        vector<vector<pii>> edge(p+1);\n        vector<ll> val(p+1,LLONG_MAX);\n        rep(query,q){\n            char d;\n            cin>>d;\n            if(d=='!'){\n                ll a,b,c;\n                cin>>a>>b>>c;\n                edge[a].eb(b,c);\n                edge[b].eb(a,-c);\n            }else{\n                ll a,b;\n                cin>>a>>b;\n                if(val[a]!=LLONG_MAX && val[b]!=LLONG_MAX){\n                    cout<<val[b]-val[a]<<endl;\n                }else{\n                    bool sw=val[b]!=LLONG_MAX;\n                    if(sw){\n                        swap(a,b);\n                    }\n                    bool michi=false;\n                    auto cp=val;\n                    if(val[a]==LLONG_MAX){\n                        michi=true;\n                        val=vector<ll>(p+1,LLONG_MAX);\n                        val[a]=0;\n                    }\n                    queue<int> que;\n                    que.emplace(a);\n                    \n                    vector<bool> search(p+1,false);\n                    while(!que.empty()){\n                        int index=que.front();\n                        que.pop();\n                        for(auto l:edge[index]){\n                            if(search[l.fs]==false){\n                                if(michi && cp[index]!=LLONG_MAX){\n                                    ll diff=cp[index]-val[index];\n                                    for(int i=0;i<=p;i++){\n                                        if(val[i]!=LLONG_MAX){\n                                            cp[i]=val[i]+diff;\n                                        }\n                                    }\n                                    val=cp;\n                                    if(val[b]!=LLONG_MAX){\n                                        goto fin;\n                                    }\n                                    fill(all(search),false);\n                                    queue<int> tmp;\n                                    que=tmp;\n                                    que.push(b);\n                                    val=vector<ll>(p+1,LLONG_MAX);\n                                    val[b]=0;\n                                    break;\n                                }else{\n                                    val[l.fs]=val[index]+l.sc;\n                                    que.emplace(l.fs);\n                                    search[l.fs]=true;\n                                    if(l.fs==b){\n                                        goto fin;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    fin:\n                    if(val[b]==LLONG_MAX){\n                        cout<<\"UNKNOWN\"<<endl;\n                    }else{\n                        if(sw) swap(a,b);\n                        cout<<val[b]-val[a]<<endl;\n                    }\n                }\n            }\n        }\n    }\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <string>\nusing namespace std;\n\nint p,q;\nstring a[11],b[11];\nint cnt[3];\nbool check(int x,int y,int z){\n\tmemset(cnt,0,sizeof(cnt));\n\tfor(int i=0;i<p;i++){\n\t\tbool flag=true;\n\t\tint c=0;\n\t\tfor(int j=0;j<a[i].size();j++){\n\t\t\tif(a[i][j]=='.'){\n\t\t\t\tif(flag)c++;\n\t\t\t}else{\n\t\t\t\tif(flag && c!=cnt[0]*x+cnt[1]*y+cnt[2]*z)return false;\n\t\t\t\tflag=false;\n\t\t\t}\n\t\t\tif(a[i][j]=='{')cnt[0]++;\n\t\t\tif(a[i][j]=='(')cnt[1]++;\n\t\t\tif(a[i][j]=='[')cnt[2]++;\n\t\t\tif(a[i][j]=='}')cnt[0]--;\n\t\t\tif(a[i][j]==')')cnt[1]--;\n\t\t\tif(a[i][j]==']')cnt[2]--;\n\t\t\tif(cnt[0]<0 || cnt[1]<0 || cnt[2]<0)return false;\n\t\t}\n\t}\n\tif(cnt[0]!=0 || cnt[1]!=0 || cnt[2]!=0)return false;\n\treturn true;\n}\n\nbool rcs[21][21][21];\nint data[21];\nbool flag[21];\n\nint main(void){\n\twhile(1){\n\t\tscanf(\"%d %d\",&p,&q);\n\t\tif(p+q==0)break;\n\t\tfor(int i=0;i<p;i++){\n\t\t\tcin >> a[i];\n\t\t}\n\t\tfor(int i=1;i<=20;i++){\n\t\t\tfor(int j=1;j<=20;j++){\n\t\t\t\tfor(int k=1;k<=20;k++){\n\t\t\t\t\trcs[i][j][k]=check(i,j,k);\n\t\t\t\t\t//if(rcs[i][j][k])printf(\"%d %d %d\\n\",i,j,k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(int i=0;i<q;i++){\n\t\t\tcin >> b[i];\n\t\t\tdata[i]=-1;\n\t\t\tflag[i]=false;\n\t\t\tfor(int j=1;j<=20;j++){\n\t\t\t\tfor(int k=1;k<=20;k++){\n\t\t\t\t\tfor(int l=1;l<=20;l++){\n\t\t\t\t\t\tif(rcs[j][k][l]){\n\t\t\t\t\t\t\tint spac=cnt[0]*j+cnt[1]*k+cnt[2]*l;\n\t\t\t\t\t\t\tif(data[i]==-1){\n\t\t\t\t\t\t\t\tdata[i]=spac;\n\t\t\t\t\t\t\t\tflag[i]=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(data[i]!=spac && data[i]!=-1){\n\t\t\t\t\t\t\t\tflag[i]=false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt[0]+cnt[1]+cnt[2]==0){\n\t\t\t\tdata[i]=0;\n\t\t\t\tflag[i]=true;\n\t\t\t}\n\t\t\tfor(int j=0;j<b[i].size();j++){\n\t\t\t\tif(b[i][j]=='{')cnt[0]++;\n\t\t\t\tif(b[i][j]=='(')cnt[1]++;\n\t\t\t\tif(b[i][j]=='[')cnt[2]++;\n\t\t\t\tif(b[i][j]=='}')cnt[0]--;\n\t\t\t\tif(b[i][j]==')')cnt[1]--;\n\t\t\t\tif(b[i][j]==']')cnt[2]--;\n\t\t\t}\n\t\t\tif(flag[i])printf(\"%d\",data[i]);\n\t\t\telse printf(\"-1\");\n\t\t\tprintf(\"%c\",i==q-1?'\\n':' ');\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nint main(){\n  int P, Q;\n  while(cin>>P>>Q && P){\n    vector<string> pcode(P); \n    vector<string> qcode(Q);\n    REP(i, P) cin>>pcode[i];\n    REP(i, Q) cin>>qcode[i];\n    vector<int> indent(P - 1);\n    int rcs[9][3];\n    int rcs2[10][3];\n    {\n      int cnt[3] = {};\n      string add = \"({[\";\n      string sub = \")}]\";\n      REP(i, P){\n        int idt = 0;\n        bool bgn = false;\n        REP(j, pcode[i].size()){\n          if(pcode[i][j] == '.' && !bgn) idt++;\n          else bgn = true;\n          REP(k, 3) {\n            if(pcode[i][j] == add[k]) cnt[k]++;\n            if(pcode[i][j] == sub[k]) cnt[k]--;\n          }\n        }\n        if(i != 0) indent[i - 1] = idt;\n        if(i != P - 1) memcpy(rcs[i], cnt, sizeof(cnt));\n      }\n    }\n    {\n      int cnt[3] = {};\n      string add = \"({[\";\n      string sub = \")}]\";\n      REP(i, Q){\n        REP(j, qcode[i].size()){\n          REP(k, 3) {\n            if(add[k] == qcode[i][j]) cnt[k]++;\n            if(sub[k] == qcode[i][j]) cnt[k]--;\n          }\n        }\n        if(i != Q - 1) memcpy(rcs2[i + 1], cnt, sizeof(cnt));\n      }\n    }\n    set<int> ans[10];\n    for(int R = 1; R <= 20; R++){\n      for(int C = 1; C <= 20; C++){\n        for(int S = 1; S <= 20; S++){\n          bool ok = true;\n          REP(i, P - 1) if(R * rcs[i][0] + C * rcs[i][1] + S * rcs[i][2] != indent[i]) ok = false;\n          if(!ok) continue;\n          REP(i, Q) ans[i].insert(R * rcs2[i][0] + C * rcs2[i][1] + S * rcs2[i][2]);\n        }\n      }\n    }\n    REP(i, Q){\n      if(ans[i].size() == 1) cout<<*ans[i].begin();\n      else cout<<-1;\n      if(i == Q - 1) cout<<endl;\n      else cout<<\" \";\n    }\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\n\nint p, q;\nstring P[10], Q[10];\nint num[10];\nvector<int> v[10];\n\nbool check(int r, int c, int s) {\n  int sr = 0, sc = 0, ss = 0;\n  for (int i = 0; i < p; i++) {\n    if (num[i] != r * sr + c * sc + s * ss) return false;\n    for (int j = 0; j < (int)P[i].size(); j++) {\n      sr += P[i][j] == '(';\n      sr -= P[i][j] == ')';\n      sc += P[i][j] == '{';\n      sc -= P[i][j] == '}';\n      ss += P[i][j] == '[';\n      ss -= P[i][j] == ']';\n    }\n  }\n  return true;\n}\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n  cout << fixed << setprecision(10);\n  \n  while (cin >> p >> q, p) {\n    for (int i = 0; i < 10; i++) {\n      v[i].clear();\n    }\n    for (int i = 0; i < p; i++) {\n      cin >> P[i];\n      for (int j = 0; j < (int)P[i].size(); j++) {\n        if (P[i][j] == '.') continue;\n        num[i] = j;\n        break;\n      }\n    }\n    for (int i = 0; i < q; i++) {\n      cin >> Q[i];\n    }\n\n    for (int r = 1; r <= 20; r++) {\n      for (int c = 1; c <= 20; c++) {\n        for (int s = 1; s <= 20; s++) {\n          if (!check(r, c, s)) continue;\n          int sr = 0, sc = 0, ss = 0;\n          for (int i = 0; i < q; i++) {\n            v[i].emplace_back(r * sr + c * sc + s * ss);\n            for (int j = 0; j < (int)Q[i].size(); j++) {\n              sr += Q[i][j] == '(';\n              sr -= Q[i][j] == ')';\n              sc += Q[i][j] == '{';\n              sc -= Q[i][j] == '}';\n              ss += Q[i][j] == '[';\n              ss -= Q[i][j] == ']';\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < q; i++) {\n      sort(v[i].begin(), v[i].end());\n      v[i].erase(unique(v[i].begin(), v[i].end()), v[i].end());\n      cout << (v[i].size() == 1 ? v[i][0] : -1) << \" \\n\"[i + 1 == q];\n    }\n  }\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <cassert>\n#include <queue>\n#include <set>\n#include <map>\n#include <valarray>\n#include <bitset>\n#include <stack>\n#include <iomanip>\n#include <fstream>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define chmax(a,b) (a<b?(a=b,1):0)\n#define chmin(a,b) (a>b?(a=b,1):0)\n#define valid(y,x,h,w) (0<=y&&y<h&&0<=x&&x<w)\nconst int INF = 1<<29;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n\nstring P[10];\nstring Q[10];\nint p,q;\n\nint pr[11],pc[11],ps[11];\nint indent[11];\nint qr[11],qc[11],qs[11];\n\nbool check(int R, int C, int S) {\n  REP(i,p) {\n    if (indent[i] != R*pr[i] + C*pc[i] + S*ps[i]) return 0;\n  }\n  return 1;\n}\n\nvoid solve() {\n  set<int> st[q];\n  for (int R=1; R<=20; ++R) {\n    for (int C=1; C<=20; ++C) {\n      for (int S=1; S<=20; ++S) {\n        if (check(R,C,S)) {\n          REP(i,q) {\n            st[i].insert(qr[i]*R + qc[i]*C + qs[i]*S);\n          }\n        }\n      }\n    }\n  }\n  REP(i,q) {\n    if (i) cout << \" \";\n    if (st[i].size() == 1) {\n      cout << *st[i].begin();\n    } else {\n      cout << -1;\n    }\n  }\n  cout << endl;\n}\n\nint main() {\n  while(cin>>p>>q,p||q) {\n    REP(i,p) cin >> P[i];\n    REP(i,q) cin >> Q[i];\n\n    {\n      int r=0,c=0,s=0;      \n      REP(i,p) {\n        FOR(it, P[i]) {\n          if (*it=='(') r++;\n          else if (*it==')') r--;\n          else if (*it=='{') c++;\n          else if (*it=='}') c--;\n          else if (*it=='[') s++;\n          else if (*it==']') s--;\n        }\n        int id = 0;\n        while(id<P[i].size() && P[i][id]=='.') id++;\n        indent[i] = id;\n        pr[i+1] = r, pc[i+1] = c, ps[i+1] = s;\n        // cout << r << \" \" << c << \" \" << s << endl;\n      }\n    }\n    {\n      int r=0,c=0,s=0;\n      REP(i,q) {\n        FOR(it, Q[i]) {\n          if (*it=='(') r++;\n          else if (*it==')') r--;\n          else if (*it=='{') c++;\n          else if (*it=='}') c--;\n          else if (*it=='[') s++;\n          else if (*it==']') s--;\n        }\n        qr[i+1] = r;\n        qc[i+1] = c;\n        qs[i+1] = s;\n      }\n    }\n    \n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nconst int INF = 1e9;\nconst ll LINF = 1e18;\n\n\nusing Item = tuple<int,int,int>;\nmap<Item,int> P2N;\nmap<char,int> C2I = {{'(',0},{'[',1},{'{',2},{')',0},{']',1},{'}',2}};\nstring ParF = \"([{\",ParE = \")]}\";\n\nvoid sort_unique(vector<int>& V){\n    if(V.empty()) return;\n    sort(V.begin(),V.end());\n    V.erase(unique(V.begin(),V.end()),V.end());\n}\nint main(void) {\n    cin.tie(0); ios::sync_with_stdio(false);\n    ll p,q;\n    while(cin >> p >> q, p){\n        P2N.clear();\n        vector<string> Qs(q),Ps(p);\n        for(auto& in:Ps) cin >> in;\n        for(auto& in:Qs) cin >> in;\n        \n        int RCS[3] = {0,0,0};\n        for(int i = 0; i < p; i++){\n            int num = 0;\n            while(Ps[i][num] == '.') num++;\n            \n            P2N[Item(RCS[0],RCS[1],RCS[2])] = num;\n            \n            for(int j = num; j < Ps[i].length(); j++){\n                if(ParF.find(Ps[i][j]) != string::npos){\n                    RCS[C2I[Ps[i][j]]]++;\n                    continue;\n                }\n                if(ParE.find(Ps[i][j]) != string::npos){\n                    RCS[C2I[Ps[i][j]]]--;\n                    continue;\n                }\n            }\n        }\n        \n        vector<int> Rcand,Ccand,Scand;\n        for(int R = 1; R <= 20; R++){\n            for(int C = 1; C <= 20; C++){\n                for(int S = 1; S <= 20; S++){\n                    \n                    bool ok = true;\n                    for(auto p:P2N){\n                        int Rn,Cn,Sn,num;\n                        tie(Rn,Cn,Sn) = p.first;\n                        num = p.second;\n                        \n                        if(Rn + Cn + Sn == 0) continue;\n                        if(Rn * R + Cn * C + Sn * S == num) continue;\n                        ok = false;\n                        break;\n                    }\n                    if(!ok) continue;\n                    Rcand.push_back(R);\n                    Ccand.push_back(C);\n                    Scand.push_back(S);\n                }\n            }\n        }\n        \n        sort_unique(Rcand);\n        sort_unique(Ccand);\n        sort_unique(Scand);\n        \n        int DetectedRCS[3] = {-1,-1,-1};\n        if(Rcand.size() == 1) DetectedRCS[0] = Rcand.front();\n        if(Ccand.size() == 1) DetectedRCS[1] = Ccand.front();\n        if(Scand.size() == 1) DetectedRCS[2] = Scand.front();\n        \n        \n        vector<int> ans(q);\n        RCS[0] = RCS[1] = RCS[2] = 0;\n        for(int i = 0; i < q; i++){\n            \n            if(RCS[0] + RCS[1] + RCS[2] == 0){\n                ans[i] = 0;\n            }else{\n                if(P2N.count(Item(RCS[0],RCS[1],RCS[2]))){\n                    ans[i] = P2N[Item(RCS[0],RCS[1],RCS[2])];\n                }else{\n                    bool none = false;\n                    for(int j = 0; j < 3;j++){\n                        if(DetectedRCS[j] * RCS[j] < 0){\n                            ans[i] = -1;\n                            none = true;\n                            break;\n                        }else{\n                            ans[i] += DetectedRCS[j] * RCS[j];\n                        }\n                    }\n                }\n            }\n            for(int j = 0; j < Qs[i].length(); j++){\n                if(ParF.find(Qs[i][j]) != string::npos){\n                    RCS[C2I[Qs[i][j]]]++;\n                    continue;\n                }\n                if(ParE.find(Qs[i][j]) != string::npos){\n                    RCS[C2I[Qs[i][j]]]--;\n                    continue;\n                }\n            }\n        }\n        for(int i = 0; i < q;i++){\n            cout << ans[i];\n            if(i==q-1) cout << endl;\n            else cout << \" \";\n        }\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n\nconst char brackets[] = {'(','{','[',')','}',']'};\n\nint ComputeIndents(int R,int C,int S,int freq[11][256],int i){\n  int white_space\n    = R * (freq[i-1][brackets[0]]-freq[i-1][brackets[3]])\n    + C * (freq[i-1][brackets[1]]-freq[i-1][brackets[4]])\n    + S * (freq[i-1][brackets[2]]-freq[i-1][brackets[5]]);\n\n  return white_space;\n}\n\nclass RCS{\npublic:\n  RCS(int _r,int _c,int _s) : R(_r),C(_c),S(_s){}\n  int R;\n  int C;\n  int S;\n};\n\nint main(){\n  int P,Q;\n  while(~scanf(\"%d %d\",&P,&Q)){\n    if(P == 0 && Q == 0) break;\n\n    vector<RCS> candidates;\n    int indented_freq[11][256];\n    int suspicious_freq[11][256];\n    memset(indented_freq,0,sizeof(indented_freq));\n    memset(suspicious_freq,0,sizeof(suspicious_freq));\n\n    for(int i=1;i<=P;i++){\n      string line;\n      cin >> line;\n      bool found_char = false;\n\n      //add previous freq\n      for(int bracket_idx = 0;bracket_idx<6;bracket_idx++){\n\tindented_freq[i][brackets[bracket_idx]]\n\t  = indented_freq[i-1][brackets[bracket_idx]];\n      }\n\n      for(int pos=0;pos<line.size();pos++){\n\tif(!found_char && line[pos] == '.'){\n\t  indented_freq[i]['.']++;\n\t}\n\telse if(line[pos] != '.'){\n\t  found_char = true;\n\t}\n\n\tfor(int bracket_idx = 0;bracket_idx<6;bracket_idx++){\n\t  if(line[pos] == brackets[bracket_idx]){\n\t    indented_freq[i][brackets[bracket_idx]]++;\n\t    break;\n\t  }\n\t}\n      }\n    }\n\n    for(int i=1;i<=Q;i++){\n      string line;\n      cin >> line;\n\n      //add previous freq\n      for(int bracket_idx = 0;bracket_idx<6;bracket_idx++){\n\tsuspicious_freq[i][brackets[bracket_idx]]\n\t  = suspicious_freq[i-1][brackets[bracket_idx]];\n      }\n\n      for(int pos=0;pos<line.size();pos++){\n\tfor(int bracket_idx = 0;bracket_idx<6;bracket_idx++){\n\t  if(line[pos] == brackets[bracket_idx]){\n\t    suspicious_freq[i][brackets[bracket_idx]]++;\n\t  }\n\t}\n      }\n    }\n\n    \n    for(int R=1;R<=20;R++){\n      for(int C=1;C<=20;C++){\n\tfor(int S=1;S<=20;S++){\n\t  bool isok = true;\n\t  for(int i=1;i<=P;i++){\n\t    int white_space\n\t      = ComputeIndents(R,C,S,indented_freq,i);\n\t    if(white_space != indented_freq[i]['.']){\n\t      isok = false;\n\t      break;\n\t    }\n\t  }\n\n\t  if(isok){\n\t    candidates.push_back(RCS(R,C,S));\n\t  }\n\t}\n      }\n    }\n    \n    for(int i=1;i<=Q;i++){\n      set<int> indents;\n      for(int candidate_idx = 0; candidate_idx < candidates.size(); candidate_idx++){\n\tint R = candidates[candidate_idx].R;\n\tint C = candidates[candidate_idx].C;\n\tint S = candidates[candidate_idx].S;\n\tint white_space = ComputeIndents(R,C,S,suspicious_freq,i);\n\tindents.insert(white_space);\n      }\n      \n      if(indents.size() == 0 || indents.size() > 1){\n\tprintf(\"%s-1\",i==1 ? \"\" : \" \");\n      }\n      else{\n\tprintf(\"%s%d\",i==1 ? \"\" : \" \",*indents.begin());\n      }\n    }\n\n    printf(\"\\n\");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <set>\nusing namespace std;\n\nstruct brac{\n\tint A,B,C;\n\tint dot;\n\tbrac(int A, int B, int C, int dot):A(A),B(B),C(C),dot(dot){}\n\tbrac(){}\n};\n\nint main(){\n\twhile(1){\n\t\tint p,q;\n\t\tcin >> p >> q;\n\t\tif(p==0) break;\n\t\t\n\t\tvector<brac> info(p+q);\n\t\tint a=0, b=0, c=0;\n\t\tfor(int i=0; i<p+q; i++){\n\t\t\tif(i==p) a=b=c=0;\n\t\t\tinfo[i] = brac(a,b,c,0);\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\tbool indent=true;\n\t\t\tint dot=0;\n\t\t\tfor(int j=0; j<(int)str.length(); j++){\n\t\t\t\tif(indent && str[j]=='.') dot++;\n\t\t\t\telse indent=false;\n\t\t\t\tif(str[j]=='(') a++;\n\t\t\t\tif(str[j]==')') a--;\n\t\t\t\tif(str[j]=='{') b++;\n\t\t\t\tif(str[j]=='}') b--;\n\t\t\t\tif(str[j]=='[') c++;\n\t\t\t\tif(str[j]==']') c--;\n\t\t\t}\n\t\t\tinfo[i].dot = dot;\n\t\t}\n\t\t\n\t\tvector<set<int> > ans(q);\n\t\tfor(int i=1; i<=20; i++){\n\t\t\tfor(int j=1; j<=20; j++){\n\t\t\t\tfor(int k=1; k<=20; k++){\n\t\t\t\t\tbool correct=true;\n\t\t\t\t\tfor(int t=0; t<p; t++){\n\t\t\t\t\t\tif(i*info[t].A +j*info[t].B +k*info[t].C != info[t].dot){\n\t\t\t\t\t\t\tcorrect = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!correct) continue;\n\t\t\t\t\tfor(int t=0; t<q; t++){\n\t\t\t\t\t\tans[t].insert( i*info[p+t].A +j*info[p+t].B +k*info[p+t].C );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=0; i<q-1; i++){\n\t\t\tif(ans[i].size()==0){\n\t\t\t\tcerr << \"error\" << endl;\n\t\t\t}\n\t\t\tif(ans[i].size()!=1){\n\t\t\t\tcout << -1 << \" \";\n\t\t\t}else{\n\t\t\t\tcout << *(ans[i].begin()) << \" \";\n\t\t\t}\n\t\t}\n\t\tif(ans[q-1].size()!=1){\n\t\t\tcout << -1 << endl;\n\t\t}else{\n\t\t\tcout << *(ans[q-1].begin()) << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\n//FILE *in = freopen(\"input.txt\", \"r\", stdin);\n//FILE *out = freopen(\"output.txt\", \"w\", stdout);\n\nint n, m;\nchar str1[1000];\n\nint ind[15][3];\nint indent[15];\n\nint rind[15][3];\n\nint res[15];\n\nint R, C, S;\n\nvoid input() {\n\tfor(int i = 0; i < m; i++) {\n\t\tres[i] = -2;\n\t}\n\t\n\tind[0][0] = ind[0][1] = ind[0][2] = 0;\n\tfor(int i = 0; i < n; i++) {\n\t\tgets(str1);\n\t\tint cnt = 0;\n\t\tint j;\n\t\tfor(j = 0; str1[j]; j++) {\n\t\t\tif(str1[j] == '.') {\n\t\t\t\t++cnt;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tindent[i] = cnt;\n\t\tfor(;str1[j];j++) {\n\t\t\tswitch(str1[j]) {\n\t\t\tcase '(':\n\t\t\t\t++ind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\t++ind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\t++ind[i][2];\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\t--ind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\t--ind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase ']' :\n\t\t\t\t--ind[i][2];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tind[i+1][0] = ind[i][0];\n\t\tind[i+1][1] = ind[i][1];\n\t\tind[i+1][2] = ind[i][2];\n\t}\n\n\trind[0][0] = rind[0][1] = rind[0][2] = 0;\n\tfor(int i = 0; i < m; i++) {\n\t\tgets(str1);\n\t\tfor(int j = 0; str1[j]; j++) {\n\t\t\tswitch(str1[j]) {\n\t\t\tcase '(':\n\t\t\t\t++rind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\t++rind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\t++rind[i][2];\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\t--rind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\t--rind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase ']' :\n\t\t\t\t--rind[i][2];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\trind[i+1][0] = rind[i][0];\n\t\trind[i+1][1] = rind[i][1];\n\t\trind[i+1][2] = rind[i][2];\n\t}\n}\n\nvoid process2() {\n\tfor(int i = 0; i < m - 1; i++) {\n\t\tint r = R*rind[i][0];\n\t\tint c = C*rind[i][1];\n\t\tint s = S*rind[i][2];\n\n\t\tif(r < 0 || c < 0 || s < 0) {\n\t\t\tres[i] = -1;\n\t\t}\n\t\telse {\n\t\t\tif(res[i] != -2 && res[i] != r + c + s) {\n\t\t\t\tres[i] = -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres[i] = r + c + s;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid process() {\n\tbool rf = false, cf = false, sf = false;\n\tfor(int i = 0; i < n - 1; i++) {\n\t\tif(ind[i][0])rf = true;\n\t\tif(ind[i][1])cf = true;\n\t\tif(ind[i][2])sf = true;\n\t}\n\tfor(R = rf ? 1 : -1; R <= 20; R++) {\n\t\tif(R == 0) continue;\n\t\tfor(C = cf ? 1 : -1; C <= 20; C++) {\n\t\t\tif(C == 0) continue;\n\t\t\tfor(S = sf ? 1 : -1; S <= 20; S++) {\n\t\t\t\tif(S == 0) continue;\n\t\t\t\tint i;\n\t\t\t\tfor(i = 0 ; i < n - 1; i++) {\n\t\t\t\t\tif(indent[i+1] != R*ind[i][0] + C*ind[i][1] + S*ind[i][2])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == n - 1) {\n\t\t\t\t\tprocess2();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid output() {\n\tprintf(\"0\");\n\tfor(int i = 0; i < m - 1; i++) {\n\t\tprintf(\" %d\", res[i]);\n\t}\n\tprintf(\"\\n\");\n}\n\nint main() {\n\twhile(true){\n\t\tscanf(\"%d%d\\n\", &n, &m);\n\t\tif (n == 0 && m == 0) break;\n\t\tR = -1;\n\t\tC = -1;\n\t\tS = -1;\n\t\tinput();\n\t\tprocess();\n\t\toutput();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint n,m;\nstring ss[10];\nmain()\n{\n\twhile(cin>>n>>m,n)\n\t{\n\t\tfor(int i=0;i<n;i++)cin>>ss[i];\n\t\tvector<int>R,C,S;\n\t\tfor(int r=1;r<21;r++)for(int c=1;c<21;c++)for(int s=1;s<21;s++)\n\t\t{\n\t\t\tbool flag=1;\n\t\t\tint cr=0,cc=0,cs=0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tint cnt=0;\n\t\t\t\tfor(int j=0;j<ss[i].size()&&ss[i][j]=='.';j++)cnt++;\n\t\t\t\tif(cr*r+cc*c+cs*s!=cnt)\n\t\t\t\t{\n\t\t\t\t\tflag=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor(int j=0;j<ss[i].size();j++)\n\t\t\t\t{\n\t\t\t\t\tif(ss[i][j]=='(')cr++;\n\t\t\t\t\telse if(ss[i][j]==')')cr--;\n\t\t\t\t\telse if(ss[i][j]=='{')cc++;\n\t\t\t\t\telse if(ss[i][j]=='}')cc--;\n\t\t\t\t\telse if(ss[i][j]=='[')cs++;\n\t\t\t\t\telse if(ss[i][j]==']')cs--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag)\n\t\t\t{\n\t\t\t\tR.push_back(r);\n\t\t\t\tC.push_back(c);\n\t\t\t\tS.push_back(s);\n\t\t\t}\n\t\t}\n\t\tvector<int>ans;\n\t\tint cr=0,cc=0,cs=0;\n\t\tfor(;m--;)\n\t\t{\n\t\t\tstring t;cin>>t;\n\t\t\tint cnt=-1;\n\t\t\tfor(int j=0;j<R.size();j++)\n\t\t\t{\n\t\t\t\tint now=cr*R[j]+cc*C[j]+cs*S[j];\n\t\t\t\tif(cnt<0)cnt=now;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(cnt!=now)cnt=114514;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt==114514)ans.push_back(-1);\n\t\t\telse ans.push_back(cnt);\n\t\t\tfor(int j=0;j<t.size();j++)\n\t\t\t{\n\t\t\t\tif(t[j]=='(')cr++;\n\t\t\t\telse if(t[j]==')')cr--;\n\t\t\t\telse if(t[j]=='{')cc++;\n\t\t\t\telse if(t[j]=='}')cc--;\n\t\t\t\telse if(t[j]=='[')cs++;\n\t\t\t\telse if(t[j]==']')cs--;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<ans.size();i++)cout<<ans[i]<<(i+1==ans.size()?\"\\n\":\" \");\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <numeric>\n#include <vector>\n#include <cassert>\n#include <string>\n#include <memory.h>\n#include <queue>\n#include <cstdio>\n#include <cstdlib>\n#include <set>\n#include <map>\n#include <cctype>\n#include <iomanip>\n#include <sstream>\n#include <cctype>\n#include <fstream>\n#include <cmath>\nusing namespace std;\n\n#define REP2(i, m, n) for(int i = (int)(m); i < (int)(n); i++)\n#define REP(i, n) REP2(i, 0, n)\n#define ALL(c) (c).begin(), (c).end()\n#define ITER(c) __typeof((c).begin())\n#define PB(e) push_back(e)\n#define FOREACH(i, c) for(ITER(c) i = (c).begin(); i != (c).end(); ++i)\n#define MP(a, b) make_pair(a, b)\n#define PARITY(n) ((n) & 1)\n\nconst double EPS = 1e-10;\n\nint main(){\n  int p, q;\n  while(cin >> p >> q && p + q > 0){\n    string str;\n    vector<int> R(p+1, 0), C(p+1, 0), S(p+1, 0), P(p, 0);;\n    REP(i, p){\n      cin >> str;\n      for(P[i] = 0; P[i] < (int)str.size() && str[P[i]] == '.'; P[i]++); \n      R[i+1] = R[i] + count(ALL(str), '(') - count(ALL(str), ')');\n      C[i+1] = C[i] + count(ALL(str), '{') - count(ALL(str), '}');\n      S[i+1] = S[i] + count(ALL(str), '[') - count(ALL(str), ']');\n    }\n    vector<int> vr, vc, vs;\n    REP2(r, 1, 21)REP2(c, 1, 21)REP2(s, 1, 21){\n      bool valid = true;\n      REP(i, p) if(R[i] * r + C[i] * c + S[i] * s != P[i]) valid = false;\n      if(valid){\n        vr.push_back(r);\n        vc.push_back(c);\n        vs.push_back(s);\n      }\n    }\n\n    int r = 0, c = 0, s = 0;\n    REP(i, q){\n      cin >> str;\n      vector<int> paren;\n      REP(j, vr.size()){\n        paren.PB(r * vr[j] + c * vc[j] + s * vs[j]);\n        \n      }\n      sort(ALL(paren));\n      paren.erase(unique(ALL(paren)), paren.end());\n\n      cout << ((int)paren.size() == 1 ? *paren.begin() : -1) << (i == q-1? '\\n':' ');\n                   \n      r += count(ALL(str), '(') - count(ALL(str), ')');\n      c += count(ALL(str), '{') - count(ALL(str), '}');\n      s += count(ALL(str), '[') - count(ALL(str), ']');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<tuple>\nusing namespace std;\nint x[11][3], y[11][3], b[11];\nint n, m; string S[10], T[10];\nvoid init() {\n\tfor (int i = 0; i < 33; i++) { x[i / 3][i % 3] = 0; y[i / 3][i % 3] = 0; b[i / 3] = 0; }\n\tfor (int i = 0; i < n; i++) {\n\t\tx[i + 1][0] = x[i][0]; x[i + 1][1] = x[i][1]; x[i + 1][2] = x[i][2]; bool Ind = true;\n\t\tfor (int j = 0; j < S[i].size(); j++) {\n\t\t\tif (S[i][j] != '.')Ind = false; if (Ind == true)b[i] = j + 1;\n\t\t\tif (S[i][j] == '(')x[i + 1][0]++; if (S[i][j] == ')')x[i + 1][0]--;\n\t\t\tif (S[i][j] == '{')x[i + 1][1]++; if (S[i][j] == '}')x[i + 1][1]--;\n\t\t\tif (S[i][j] == '[')x[i + 1][2]++; if (S[i][j] == ']')x[i + 1][2]--;\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\ty[i + 1][0] = y[i][0]; y[i + 1][1] = y[i][1]; y[i + 1][2] = y[i][2];\n\t\tfor (int j = 0; j < T[i].size(); j++) {\n\t\t\tif (T[i][j] == '(')y[i + 1][0]++; if (T[i][j] == ')')y[i + 1][0]--;\n\t\t\tif (T[i][j] == '{')y[i + 1][1]++; if (T[i][j] == '}')y[i + 1][1]--;\n\t\t\tif (T[i][j] == '[')y[i + 1][2]++; if (T[i][j] == ']')y[i + 1][2]--;\n\t\t}\n\t}\n}\nvector<tuple<int,int,int>> search() {\n\tvector<tuple<int, int, int>>vec;\n\tfor (int i = 1; i <= 20; i++) {\n\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\tbool OK = true;\n\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\tif ((x[l][0] * i + x[l][1] * j + x[l][2] * k) != b[l])OK = false;\n\t\t\t\t}\n\t\t\t\tif (OK == true)vec.push_back(make_tuple(i, j, k));\n\t\t\t}\n\t\t}\n\t}\n\treturn vec;\n}\nint main() {\n\twhile (true) {\n\t\tcin >> n >> m; if (n == 0 && m == 0)break;\n\t\tfor (int i = 0; i < n; i++)cin >> S[i];\n\t\tfor (int i = 0; i < m; i++)cin >> T[i];\n\t\tvector<int>res[10]; init(); search();\n\t\tvector<tuple<int, int, int>>F = search();\n\t\tfor (int i = 0; i < F.size(); i++) {\n\t\t\tint a1 = get<0>(F[i]), a2 = get<1>(F[i]), a3 = get<2>(F[i]);\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tint TT = y[j][0] * a1 + y[j][1] * a2 + y[j][2] * a3;\n\t\t\t\tfor (int k = 0; k < res[j].size(); k++) {\n\t\t\t\t\tif (res[j][k] == TT)goto E;\n\t\t\t\t}\n\t\t\t\tres[j].push_back(TT); E:;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i)cout << ' ';\n\t\t\tif (res[i].size() >= 2) { cout << \"-1\"; }\n\t\t\telse { cout << res[i][0]; }\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nint gcd(int a,int b){\n  if(b==0) return a;\n  return gcd(b,a%b);\n}\nint lcm(int m,int n){\n  if((0==m)||(0==n)) return 0;\n  return (m/gcd(m,n))*n;\n}\nvoid cal();\nint R(char);\nint cnt[2][N][3],n[2],ans,X,Y,Z,fa,fb,fc;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    X=Y=Z=0;\n    cal();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      ans=-1;\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tint a=(*j).A,b=(*j).B,c=(*j).C;\n\tif(a&&b&&c&&((*j).second==3||(*j).second==60)) X=(*j).second/3,Y=X,Z=X;\n      }\n      if(fa&&fb&&fc&&X&&Y&&Z) ans=X*fa+Y*fb+Z*fc;\n      if(fa&&fb&&!fc){\n\tif(X&&Y) ans=X*fa+Y*fb;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C,d=0;\n\t    if(a&&b){\n\t      d=(*j).second;\n\t      if(c&&Z) d-=c*Z;\n\t      int r=gcd(a,b);\n\t      a/=r;\n\t      b/=r;\t      \n\t      r=gcd(fa,fb);\n\t      if(fa/r==a&&fb/r==b) ans=d*(fa/a);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&fc){\n\tif(X&&Z) ans=X*fa+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C,d=0;\n\t    if(c&&a){\n\t      d=(*j).second;\n\t      if(b&&Y) d-=b*Y;\n\t      int r=gcd(c,a);\n\t      c/=r;\n\t      a/=r;\n\t      r=gcd(fc,fa);\n\t      if(fc/r==c&&fa/r==a) ans=d*(fc/c);\n\t    }\n\t  }\n      }\n      if(!fa&&fb&&fc){\n\tif(Y&&Z) ans=Y*fb+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C,d=0;\n\t    if(b&&c){\n\t      d=(*j).second;\n\t      int r=gcd(b,c);\n\t      if(a&&X) d-=a*X;\n\t      b/=r;\n\t      c/=r;\n\t      r=gcd(fb,fc);\n\t      if(fb/r==b&&fc/r==c) ans=d*(fb/b);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&!fc&&X) ans=X*fa;\n      if(!fa&&fb&&!fc&&Y) ans=Y*fb;\n      if(!fa&&!fb&&fc&&Z) ans=Z*fc;\n      if(!fa&&!fb&&!fc) ans=0;\n      //      cout<<ans;\n    }\n    cout<<X<<' '<<Y<<' '<<Z<<' '<<endl;\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}\n\nvoid cal(){\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    for(MAP::iterator j=m.begin();j!=m.end();j++){\n      for(MAP::iterator k=m.begin();k!=m.end();k++){\n\tint r,s,t,u,x=-1,y=-1,z=-1;\n\tint a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n\tint e=(*j).A,f=(*j).B,g=(*j).C,h=(*j).second;\n\tint l=(*k).A,o=(*k).B,p=(*k).C,q=(*k).second;\n\tif(a&&e){\n\t  r=lcm(a,e);\n\t  int x1=r/a,x2=r/e;\n\t  a=a*x1-e*x2; b=b*x1-f*x2; c=c*x1-g*x2; d=d*x1-h*x2;\n\t}\n\tif(e&&l){\n\t  r=lcm(e,l);\n\t  int x1=r/e,x2=r/l;\n\t  e=e*x1-l*x2; f=f*x1-o*x2; g=g*x1-p*x2; h=h*x1-q*x2;\n\t}\n\tif(l&&a){\n\t  r=lcm(l,a);\n\t  int x1=r/l,x2=r/a;\n\t  l=l*x1-a*x2; o=o*x1-b*x2; p=p*x1-c*x2; q=q*x1-d*x2;\n\t}\n\tif(b&&f){\n\t  r=lcm(b,f);\n\t  int x1=r/b,x2=r/f;\n\t  if(a>=e) a=a*x1-e*x2,b=b*x1-f*x2,c=c*x1-g*x2,d=d*x1-h*x2;\n\t  else e=e*x2-a*x1,f=f*x2-b*x1,g=g*x2-c*x1,h=h*x2-d*x1;\n\t}\n\tif(f&&o){\n\t  r=lcm(f,o);\n\t  int x1=r/f,x2=r/o;\n\t  if(e>=l) e=e*x1-l*x2,f=f*x1-o*x2,g=g*x1-p*x2,h=h*x1-q*x2;\n\t  else l=l*x2-e*x1,o=o*x2-f*x1,p=p*x2-g*x1,q=q*x2-h*x1;\n\t}\n\tif(o&&b){\n\t  r=lcm(o,b);\n\t  int x1=r/o,x2=r/b;\n\t  if(l>=a) l=l*x1-a*x2,o=o*x1-b*x2,p=p*x1-c*x2,q=q*x1-d*x2;\n\t  else a=a*x2-l*x1,b=b*x2-o*x1,c=c*x2-p*x1,d=d*x2-q*x1;\n\t}\n\tif(!a&&!b){\n\t  if(g){\n\t    if(c){\n\t      r=lcm(c,g);\n\t      int x1=r/c,x2=r/g;\n\t      g=g*x2-c*x1,h=h*x2-d*x1;\n\t    }\n\t  }\n\t  else if(p){\n\t    if(c){\n\t      r=lcm(c,p);\n\t      int x1=r/c,x2=r/p;\n\t      p=p*x2-c*x1,q=q*x2-d*x1;\n\t    }\n\t  }\n\t}\n\tif(!e&&!f){\n\t  if(p){\n\t    if(g){\n\t      r=lcm(g,p);\n\t      int x1=r/g,x2=r/p;\n\t      p=p*x2-g*x1,q=q*x2-h*x1;\n\t    }\n\t  }\n\t  else if(c){\n\t    if(g){\n\t      r=lcm(g,c);\n\t      int x1=r/g,x2=r/c;\n\t      c=c*x2-g*x1,d=d*x2-h*x1;\n\t    }\n\t  }\n\t}\n\tif(!l&&!o){\n\t  if(c){\n\t    if(p){\n\t      r=lcm(p,c);\n\t      int x1=r/p,x2=r/c;\n\t      c=c*x2-p*x1,d=d*x2-q*x1;\n\t    }\n\t  }\n\t  else if(g){\n\t    if(p){\n\t      r=lcm(p,g);\n\t      int x1=r/p,x2=r/g;\n\t      g=g*x2-p*x1,h=h*x2-q*x1;\n\t    }\n\t  }\n\t}\n\tif(a&&!b&&!c&&!e&&!l) x=d/a;\n\tif(e&&!f&&!g&&!a&&!l) x=h/e;\n\tif(l&&!o&&!p&&!a&&!e) x=q/l;\n\tif(!a&&b&&!c&&!f&&!o) y=d/b;\n\tif(!e&&f&&!g&&!b&&!o) y=h/f;\n\tif(!l&&o&&!p&&!b&&!f) y=q/o;\n\tif(!a&&!b&&c&&!g&&!p) z=d/c;\n\tif(!e&&!f&&g&&!c&&!p) z=h/g;\n\tif(!l&&!o&&p&&!c&&!g) z=q/p;\n\tif(x!=-1) X=x;\n\tif(y!=-1) Y=y;\n\tif(z!=-1) Z=z;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint N , M;\n\twhile(cin >> N >> M , N || M)\n\t{\n\t\tint a = 0 , b = 0 , c = 0 , d = 0;\n\t\tmap<vector<int> , int>data;\n\t\tfor(size_t i = 0; i < N; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tint memo = 1;\n\t\t\tfor(size_t i = 1; i < 20; i++)\n\t\t\t{\n\t\t\t\tif(a%i == 0 && b%i == 0 && c%i == 0 && now%i == 0)\n\t\t\t\t{\n\t\t\t\t\tmemo = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvector<int>memo2 = { a / memo,b / memo,c / memo };\n\t\t\tdata[memo2] = now / memo;\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tvector<vector<int>>candidate;\n\t\tfor(int i = 1; i <= 20; i++)\n\t\t{\n\t\t\tfor(int j = 1; j <= 20; j++)\n\t\t\t{\n\t\t\t\tfor(int k = 1; k <= 20; k++)\n\t\t\t\t{\n\t\t\t\t\tbool f = 1;\n\t\t\t\t\tfor(auto x : data)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(x.first[0] * i + x.first[1] * j + x.first[2] * k != x.second)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(f)candidate.push_back(vector<int>{i - 1 , j - 1 , k - 1});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<set<int>>ans(M);\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tfor(auto x : candidate)\n\t\t\t{\n\t\t\t\tans[i].insert(( x[0] + 1 )*a + ( x[1] + 1 )*b + ( x[2] + 1 )*c);\n\t\t\t}\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tif(ans[i].size() == 1)\n\t\t\t{\n\t\t\t\tfor(auto x : ans[i])\n\t\t\t\t{\n\t\t\t\t\tcout << x;\n\t\t\t\t}\n\t\t\t} else\n\t\t\t{\n\t\t\t\tcout << -1;\n\t\t\t}\n\t\t\tcout << ( i == M - 1 ? \"\\n\" : \" \" );\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nint gcd(int a,int b){\n  if(b==0) return a;\n  return gcd(b,a%b);\n}\nint lcm(int m,int n){\n  if((0==m)||(0==n)) return 0;\n  return (m/gcd(m,n))*n;\n}\nvoid cal();\nint R(char);\nint cnt[2][N][3],n[2],ans,X,Y,Z,fa,fb,fc;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    X=Y=Z=0;\n    cal();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      ans=-1;\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tint a=(*j).A,b=(*j).B,c=(*j).C;\n\tif(a&&b&&c&&((*j).second==3||(*j).second==60)) X=(*j).second/3,Y=X,Z=X;\n      }\n      if(fa&&fb&&fc&&X&&Y&&Z) ans=X*fa+Y*fb+Z*fc;\n      if(fa&&fb&&!fc){\n\tif(X&&Y) ans=X*fa+Y*fb;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(a&&b){\n\t      int r=gcd(a,b);\n\t      a/=r;\n\t      b/=r;\n\t      r=gcd(fa,fb);\n\t      if(fa/r==a&&fb/r==b) ans=(*j).second*(fa/a);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&fc){\n\tif(X&&Z) ans=X*fa+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(c&&a){\n\t      int r=gcd(c,a);\n\t      c/=r;\n\t      a/=r;\n\t      r=gcd(fc,fa);\n\t      if(fc/r==c&&fa/r==a) ans=(*j).second*(fc/c);\n\t    }\n\t  }\n      }\n      if(!fa&&fb&&fc){\n\tif(Y&&Z) ans=Y*fb+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(b&&c){\n\t      int r=gcd(b,c);\n\t      b/=r;\n\t      c/=r;\n\t      r=gcd(fb,fc);\n\t      if(fb/r==b&&fc/r==c) ans=(*j).second*(fb/b);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&!fc&&X) ans=X*fa;\n      if(!fa&&fb&&!fc&&Y) ans=Y*fb;\n      if(!fa&&!fb&&fc&&Z) ans=Z*fc;\n      if(!fa&&!fb&&!fc) ans=0;\n      cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}\n\nvoid cal(){\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    for(MAP::iterator j=m.begin();j!=m.end();j++){\n      for(MAP::iterator k=m.begin();k!=m.end();k++){\n\tint r,s,t,u,x=-1,y=-1,z=-1;\n\tint a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n\tint e=(*j).A,f=(*j).B,g=(*j).C,h=(*j).second;\n\tint l=(*k).A,o=(*k).B,p=(*k).C,q=(*k).second;\n\tif(a&&e){\n\t  r=lcm(a,e);\n\t  int x1=r/a,x2=r/e;\n\t  a=a*x1-e*x2; b=b*x1-f*x2; c=c*x1-g*x2; d=d*x1-h*x2;\n\t}\n\tif(e&&l){\n\t  r=lcm(e,l);\n\t  int x1=r/e,x2=r/l;\n\t  e=e*x1-l*x2; f=f*x1-o*x2; g=g*x1-p*x2; h=h*x1-q*x2;\n\t}\n\tif(l&&a){\n\t  r=lcm(l,a);\n\t  int x1=r/l,x2=r/a;\n\t  l=l*x1-a*x2; o=o*x1-b*x2; p=p*x1-c*x2; q=q*x1-d*x2;\n\t}\n\tif(b&&f){\n\t  r=lcm(b,f);\n\t  int x1=r/b,x2=r/f;\n\t  if(a>=e) a=a*x1-e*x2,b=b*x1-f*x2,c=c*x1-g*x2,d=d*x1-h*x2;\n\t  else e=e*x2-a*x1,f=f*x2-b*x1,g=g*x2-c*x1,h=h*x2-d*x1;\n\t}\n\tif(f&&o){\n\t  r=lcm(f,o);\n\t  int x1=r/f,x2=r/o;\n\t  if(e>=l) e=e*x1-l*x2,f=f*x1-o*x2,g=g*x1-p*x2,h=h*x1-q*x2;\n\t  else l=l*x2-e*x1,o=o*x2-f*x1,p=p*x2-g*x1,q=q*x2-h*x1;\n\t}\n\tif(o&&b){\n\t  r=lcm(o,b);\n\t  int x1=r/o,x2=r/b;\n\t  if(l>=a) l=l*x1-a*x2,o=o*x1-b*x2,p=p*x1-c*x2,q=q*x1-d*x2;\n\t  else a=a*x2-l*x1,b=b*x2-o*x1,c=c*x2-p*x1,d=d*x2-q*x1;\n\t}\n\tif(!a&&!b){\n\t  if(g){\n\t    if(c){\n\t      r=lcm(c,g);\n\t      int x1=r/c,x2=r/g;\n\t      g=g*x2-c*x1,h=h*x2-d*x1;\n\t    }\n\t  }\n\t  else if(p){\n\t    if(c){\n\t      r=lcm(c,p);\n\t      int x1=r/c,x2=r/p;\n\t      p=p*x2-c*x1,q=q*x2-d*x1;\n\t    }\n\t  }\n\t}\n\tif(!e&&!f){\n\t  if(p){\n\t    if(g){\n\t      r=lcm(g,p);\n\t      int x1=r/g,x2=r/p;\n\t      p=p*x2-g*x1,q=q*x2-h*x1;\n\t    }\n\t  }\n\t  else if(c){\n\t    if(g){\n\t      r=lcm(g,c);\n\t      int x1=r/g,x2=r/c;\n\t      c=c*x2-g*x1,d=d*x2-h*x1;\n\t    }\n\t  }\n\t}\n\tif(!l&&!o){\n\t  if(c){\n\t    if(p){\n\t      r=lcm(p,c);\n\t      int x1=r/p,x2=r/c;\n\t      c=c*x2-p*x1,d=d*x2-q*x1;\n\t    }\n\t  }\n\t  else if(g){\n\t    if(p){\n\t      r=lcm(p,g);\n\t      int x1=r/p,x2=r/g;\n\t      g=g*x2-p*x1,h=h*x2-q*x1;\n\t    }\n\t  }\n\t}\n\tif(a&&!b&&!c&&!e&&!l) x=d/a;\n\tif(e&&!f&&!g&&!a&&!l) x=h/e;\n\tif(l&&!o&&!p&&!a&&!e) x=q/l;\n\tif(!a&&b&&!c&&!f&&!o) y=d/b;\n\tif(!e&&f&&!g&&!b&&!o) y=h/f;\n\tif(!l&&o&&!p&&!b&&!f) y=q/o;\n\tif(!a&&!b&&c&&!g&&!p) z=d/c;\n\tif(!e&&!f&&g&&!c&&!p) z=h/g;\n\tif(!l&&!o&&p&&!c&&!g) z=q/p;\n\tif(x!=-1) X=x;\n\tif(y!=-1) Y=y;\n\tif(z!=-1) Z=z;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void){\n    int p, q;\n    while (cin>>p>>q && p) {\n        vector<vector<int> > c(4, vector<int>(p, 0));\n        for (int i = 0; i < p; i++) {\n            string t;\n            cin >> t;\n            bool f = true;\n            int cnt = 0;\n            for (int j = 0; j < t.size(); j++) {\n                if (f && t[j] == '.') cnt++;\n                else f = false;\n                if (t[j] == '(') c[0][i]++;\n                if (t[j] == ')') c[0][i]--;\n                if (t[j] == '{') c[1][i]++;\n                if (t[j] == '}') c[1][i]--;\n                if (t[j] == '[') c[2][i]++;\n                if (t[j] == ']') c[2][i]--;\n            }\n            if (i) c[3][i-1] = cnt;\n        }\n        \n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p-1; j++) {\n                c[i][j+1] += c[i][j];\n            }\n        }\n        \n        vector<bool> rcs(3, false);\n        int rcs_cnt = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) rcs[i] = true;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) {\n                    rcs_cnt++;\n                    break;\n                }\n            }\n        }\n        \n        vector<int> R,C,S;\n        for (int i = 1; i < 21; i++) {\n            if (rcs[0] == false) continue;\n            for (int j = 1; j < 21; j++) {\n                if (rcs[1] == false) continue;\n                for (int k = 1; k < 21; k++) {\n                    if (rcs[2] == false) continue;\n                    bool f = true;\n                    for (int a = 0; a < c[0].size(); a++) {\n                        if (i*c[0][a] + j*c[1][a] + k*c[2][a] != c[3][a]) {\n                            f = false;\n                            break;\n                        }\n                    }\n                    if (f) R.push_back(i), C.push_back(j), S.push_back(k);\n                }\n            }\n        }\n        R.erase(unique(R.begin(), R.end()), R.end());\n        C.erase(unique(C.begin(), C.end()), C.end());\n        S.erase(unique(S.begin(), S.end()), S.end());\n        \n        vector<vector<int> > a(3, vector<int>(q, 0));\n        for (int i = 0; i < q; i++) {\n            string t;\n            cin >> t;\n            \n            for (int j = 0; j < t.size(); j++) {\n                if (t[j] == '(') a[0][i]++;\n                if (t[j] == ')') a[0][i]--;\n                if (t[j] == '{') a[1][i]++;\n                if (t[j] == '}') a[1][i]--;\n                if (t[j] == '[') a[2][i]++;\n                if (t[j] == ']') a[2][i]--;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < q-1; j++) {\n                a[i][j+1] += a[i][j];\n            }\n        }\n        \n        vector<int> ans;\n        ans.push_back(0);\n        \n        if (rcs_cnt >= 2 && R.size() == 1 && C.size() == 1 && S.size() == 1) {\n            for (int i = 0; i < q-1; i++) ans.push_back(R[0]*a[0][i] + C[0]*a[1][i] + S[0]*a[2][i]);\n        }\n        else {\n            for (int i = 0; i < q-1; i++) {\n                bool f = false;\n                if (!a[0][i] && !a[1][i] && !a[2][i]) {\n                    ans.push_back(0);\n                    continue;\n                }\n                else if (a[0][i] && R.size()==1 && !a[1][i] && !a[2][i]) {\n                    ans.push_back(R[0]*a[0][i]);\n                    continue;\n                }\n                else if (a[1][i] && C.size()==1 && !a[0][i] && !a[2][i]) {\n                    ans.push_back(C[0]*a[1][i]);\n                    continue;\n                }\n                else if (a[2][i] && S.size()==1 && !a[0][i] && !a[1][i]) {\n                    ans.push_back(R[2]*a[2][i]);\n                    continue;\n                }\n                for (int j = 0; j < p-1; j++) {\n                    if (!c[0][j] && !c[1][j] && !c[2][j]) continue;\n                    if ((!a[0][i] && c[0][j]) || (a[0][i] && !c[0][j])) continue;\n                    if ((!a[1][i] && c[1][j]) || (a[1][i] && !c[1][j])) continue;\n                    if ((!a[2][i] && c[2][j]) || (a[2][i] && !c[2][j])) continue;\n                    double u = -1;\n                    if (a[0][i] && c[0][j]) u = a[0][i] / c[0][j];\n                    if (a[1][i] && c[1][j]) {\n                        if (u == -1) u = a[1][i] / c[1][j];\n                        else if (u != a[1][i] / c[1][j]) break;\n                    }\n                    if (a[2][i] && c[2][j]) {\n                        if (u == -1) u = a[2][i] / c[2][j];\n                        else if (u != a[2][i] / c[2][j]) break;\n                    }\n                    f = true;\n                    c[3][1] *= (int)u;\n                    ans.push_back(c[3][j]);\n                    break;\n                }\n                if (!f) ans.push_back(-1);\n            }\n        }\n        for (int i = 0; i < ans.size(); i++) cout << ans[i] << (i==ans.size()-1? \"\\n\" : \" \");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nstring p1[20],p2[20];\nbool used[20];\nint n,m,indent1[20],indent2[20],a1[20][3],a2[20][3];\nint ans[20];\nvoid init_indent(){\n  int r=0,c=0,s=0;\n  r(i,n){\n    int ind=0;\n    r(j,p1[i].size()){\n      if(p1[i][j]=='.')ind++;\n      else break;\n    }\n    r(j,p1[i].size()){\n      if(p1[i][j]=='(')r++;\n      if(p1[i][j]==')')r--;\n      if(p1[i][j]=='{')c++;\n      if(p1[i][j]=='}')c--;\n      if(p1[i][j]=='[')s++;\n      if(p1[i][j]==']')s--;\n    }\n    indent1[i]=ind;\n    a1[i][0]=r;\n    a1[i][1]=c;\n    a1[i][2]=s;\n  }\n  r(i,m){\n    r(j,p2[i].size()){\n      if(p2[i][j]=='(')r++;\n      if(p2[i][j]==')')r--;\n      if(p2[i][j]=='{')c++;\n      if(p2[i][j]=='}')c--;\n      if(p2[i][j]=='[')s++;\n      if(p2[i][j]==']')s--;\n    }\n    a2[i][0]=r;\n    a2[i][1]=c;\n    a2[i][2]=s;\n  }\n}\nint main(){\n  while(cin>>n>>m,n){\n    r(i,n)cin>>p1[i];\n    r(i,m)cin>>p2[i];\n    memset(ans,-1,sizeof(ans));\n    memset(used,0,sizeof(used));\n    init_indent();\n    r(R,21)r(C,21)r(S,21){\n      if(!R||!C||!S)continue;\n      int flag=0;\n      r(i,n-1)if(a1[i][0]*R+a1[i][1]*C+a1[i][2]*S!=indent1[i+1])flag++;\n      if(flag)continue;\n      r(i,m-1){\n        if(!used[i]){\n          used[i]=1;\n          ans[i]=R*a2[i][0]+C*a2[i][1]+S*a2[i][2];\n        }\n        else if(used[i]&&ans[i]!=-1){\n          if(R*a2[i][0]+C*a2[i][1]+S*a2[i][2]!=ans[i]){\n            ans[i]=-1;\n          }\n        }\n      }\n    }\n    cout<<0;\n    r(i,m-1)cout<<' '<<ans[i];\n    cout<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#include <set>\n#include <tuple>\nusing namespace std;\n\nint main() {\n    int p, q;\n    while (cin >> p >> q, p) {\n        vector<vector<int>> a(p, vector<int>(3));\n        vector<int> b(p);\n        {\n            map<char, int> cnt;\n            for (int i = 0; i < p; i++) {\n                a[i][0] = cnt['('] - cnt[')'];\n                a[i][1] = cnt['{'] - cnt['}'];\n                a[i][2] = cnt['['] - cnt[']'];\n                string s; cin >> s;\n                int& ind = b[i];\n                while (ind < s.size() && s[ind] == '.') ind++;\n                for (auto c: s) cnt[c]++;\n            }\n        }\n        set<tuple<int, int, int>> se;\n        for (int r = 1; r <= 20; r++) {\n            for (int c = 1; c <= 20; c++) {\n                for (int s = 1; s <= 20; s++) {\n                    bool ok = true;\n                    for (int i = 0; i < p; i++) {\n                        ok &= a[i][0] * r + a[i][1] * c + a[i][2] * s == b[i];\n                    }\n                    if (ok) se.emplace(r, c, s);\n                }\n            }\n        }\n        vector<int> res(q); {\n            map<char, int> cnt;\n            for (int i = 0; i < q; i++) {\n                set<int> ans;\n                for (auto &t: se) {\n                    int tmp = 0;\n                    tmp += (cnt['('] - cnt[')']) * get<0>(t);\n                    tmp += (cnt['{'] - cnt['}']) * get<1>(t);\n                    tmp += (cnt['['] - cnt[']']) * get<2>(t);\n                    ans.emplace(tmp);\n                }\n                res[i] = ans.size() == 1 ? *ans.begin() : -1;\n                string s; cin >> s;\n                for (auto c: s) cnt[c]++;\n            }\n        }\n        for (int i = 0; i < q; i++) cout << res[i] << \" \\n\"[i == q - 1];\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  int p,q;\n  while(cin>>p>>q,p||q){\n    string b;\n    int i,j,k;\n    int r[20]={},c[20]={},s[20]={},n[20]={};\n    int v[25][25][25]={{{}}};\n    int br=-1,bc=-1,bs=-1;\n    for(i=0;i<p;i++){\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      cin >> b;\n      j=0;\n      while(b[j]=='.') j++;\n      n[i]=j;\n      v[r[i]][c[i]][s[i]]=n[i];\n      if(r[i]+c[i]+s[i]==n[i]){\n\tif(r[i]!=0) br=1;\n\tif(c[i]!=0) bc=1;\n\tif(s[i]!=0) bs=1;\n      }\n      if(r[i]*20+c[i]*20+s[i]*20==n[i]){\n\tif(r[i]!=0) br=20;\n\tif(c[i]!=0) bc=20;\n\tif(s[i]!=0) bs=20;\n      }\n\n      if(r[i]==0&&c[i]==0){\n\tif(s[i]!=0) bs=n[i]/s[i];\n      }\n      if(r[i]==0&&s[i]==0){\n\tif(c[i]!=0) bc=n[i]/c[i];\n      }\n      if(c[i]==0&&s[i]==0){\n\tif(r[i]!=0) br=n[i]/r[i];\n      }\n      \n      if(s[i]==0){\n\tif(br!=-1&&bc==-1&&r[i]!=0&&c[i]!=0){\n\t  bc=(n[i]-r[i]*br)/c[i];\n\t}\n\tif(bc!=-1&&br==-1&&r[i]!=0&&c[i]!=0){\n\t  br=(n[i]-c[i]*bc)/r[i];\n\t}\n      }\n      \n      if(c[i]==0){\n\tif(br!=-1&&bs==-1&&r[i]!=0&&s[i]!=0){\n\t  bs=(n[i]-r[i]*br)/s[i];\n\t}\n\tif(bs!=-1&&br==-1&&r[i]!=0&&s[i]!=0){\n\t  br=(n[i]-s[i]*bs)/r[i];\n\t}\n      }\n      \n      if(r[i]==0){\n\tif(bc!=-1&&bs==-1&&c[i]!=0&&s[i]!=0){\n\t  bs=(n[i]-c[i]*bc)/s[i];\n\t}\n\tif(bs!=-1&&bc==-1&&s[i]!=0&&c[i]!=0){\n\t  bc=(n[i]-s[i]*bs)/c[i];\n\t}\n      }\n      if(r[i]*c[i]*s[i]!=0){\n\tif(br==-1&&bc!=-1&&bs!=-1){\n\t  br=(n[i]-c[i]*bc-s[i]*bs)/r[i];\n\t}\n\tif(br!=-1&&bc==-1&&bs!=-1){\n\t  bc=(n[i]-r[i]*br-s[i]*bs)/c[i];\n\t}\n\tif(br!=-1&&bc!=-1&&bs==-1){\n\t  bs=(n[i]-c[i]*bc-r[i]*br)/s[i];\n\t}\n      }\n     \n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\tif(b[j]=='{') c[i+1]++;\n\tif(b[j]=='}') c[i+1]--;\n\tif(b[j]=='[') s[i+1]++;\n\tif(b[j]==']') s[i+1]--;\n      }\n      \n      //cout << n[i] << \":\" << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      //cout << br << \":\" << bc << \":\" << bs << endl; \n    }\n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    //cout << br << bc << bs << endl;\n    \n    r[0]=0;c[0]=0;s[0]=0;\n    for(i=0;i<q;i++){\n      cin >> b;\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\t  if(b[j]=='{') c[i+1]++;\n\t  if(b[j]=='}') c[i+1]--;\n\t  if(b[j]=='[') s[i+1]++;\n\t  if(b[j]==']') s[i+1]--;\n      }\n      if(i==0) cout << 0;\n      else {\n\tcout << \" \";\n\tif(r[i]==0&&c[i]==0&&s[i]==0) \n\t  cout << 0;\n\telse if(v[r[i]][c[i]][s[i]]!=0) \n\t  cout << v[r[i]][c[i]][s[i]];\n\telse if((r[i]!=0&&br==-1)||(c[i]!=0&&bc==-1)||(s[i]!=0&&bs==-1))\n\t  cout << -1;\n\telse \n\t  cout << r[i]*br+c[i]*bc+s[i]*bs ;\n\t\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, m; string s;\nint main() {\n\twhile (cin >> n >> m, n) {\n\t\tvector<int> a(n + m), b(n + m), c(n + m), d(n + m);\n\t\tint da = 0, db = 0, dc = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> s;\n\t\t\ta[i] = da, b[i] = db, c[i] = dc;\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] != '.') {\n\t\t\t\t\td[i] = j; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t\tvector<int> ra, rb, rc;\n\t\tfor (int i = 1; i <= 20; i++) {\n\t\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\t\tif (i * a[l] + j * b[l] + k * c[l] != d[l]) {\n\t\t\t\t\t\t\tflag = false; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (flag) {\n\t\t\t\t\t\tra.push_back(i);\n\t\t\t\t\t\trb.push_back(j);\n\t\t\t\t\t\trc.push_back(k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i) cout << ' ';\n\t\t\tcin >> s;\n\t\t\tvector<int> x;\n\t\t\tfor (int j = 0; j < ra.size(); j++) x.push_back(da * ra[j] + db * rb[j] + dc * rc[j]);\n\t\t\tsort(x.begin(), x.end());\n\t\t\tx.erase(unique(x.begin(), x.end()), x.end());\n\t\t\tif (x.size() != 1) cout << -1;\n\t\t\telse cout << x[0];\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <algorithm>\n#include <cstdio>\n#include <functional>\n#include <iostream>\n#include <cfloat>\n#include <climits>\n#include <cstring>\n#include <cmath>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <time.h>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\ntypedef pair<ll, int> ll_i;\ntypedef pair<double, int> d_i;\ntypedef pair<ll, ll> ll_ll;\ntypedef pair<double, double> d_d;\nstruct edge { int u, v; double w; };\n\nll MOD = 1000000007;\nll _MOD = 1000000009;\ndouble EPS = 1e-10;\n\nint main() {\n\tfor (;;) {\n\t\tint p, q; cin >> p >> q;\n\t\tif (p == 0 && q == 0) break;\n\t\tvector<int> a(p), r(p + 1), c(p + 1), s(p + 1);\n\t\tfor (int i = 0; i < p; i++) {\n\t\t\tstring S; cin >> S;\n\t\t\tfor (int& j = a[i]; S[j] == '.'; j++);\n\t\t\tr[i + 1] = r[i];\n\t\t\tc[i + 1] = c[i];\n\t\t\ts[i + 1] = s[i];\n\t\t\tfor (int j = 0; j < S.length(); j++)\n\t\t\t\tswitch (S[j]) {\n\t\t\t\tcase '(': r[i + 1]++; break;\n\t\t\t\tcase ')': r[i + 1]--; break;\n\t\t\t\tcase '{': c[i + 1]++; break;\n\t\t\t\tcase '}': c[i + 1]--; break;\n\t\t\t\tcase '[': s[i + 1]++; break;\n\t\t\t\tcase ']': s[i + 1]--; break;\n\t\t\t\t}\n\t\t}\n\t\tint _r = 0, _c = 0, _s = 0;\n\t\twhile (q--) {\n\t\t\tset<int> st;\n\t\t\tfor (int R = 1; R <= 20; R++)\n\t\t\t\tfor (int C = 1; C <= 20; C++)\n\t\t\t\t\tfor (int S = 1; S <= 20; S++) {\n\t\t\t\t\t\tbool flag = true;\n\t\t\t\t\t\tfor (int i = 0; i < p; i++)\n\t\t\t\t\t\t\tif (r[i] * R + c[i] * C + s[i] * S != a[i])\n\t\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tif (flag) st.insert(_r * R + _c * C + _s * S);\n\t\t\t\t\t}\n\t\t\tcout << (st.size() == 1 ? *st.begin() : -1);\n\t\t\tcout << (q ? ' ' : '\\n');\n\t\t\tstring S; cin >> S;\n\t\t\tfor (int j = 0; j < S.length(); j++)\n\t\t\t\tswitch (S[j]) {\n\t\t\t\tcase '(': _r++; break;\n\t\t\t\tcase ')': _r--; break;\n\t\t\t\tcase '{': _c++; break;\n\t\t\t\tcase '}': _c--; break;\n\t\t\t\tcase '[': _s++; break;\n\t\t\t\tcase ']': _s--; break;\n\t\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <tuple>\nusing namespace std;\n\ntypedef tuple<int,int,int,int> T;\n\nint cnt(string s){\n    int ret=0;\n    for(auto c:s){\n        if(c=='.') ret++;\n        else break;\n    }\n    return ret;\n}\n\nint main(){\n    int P,Q;\n    while(cin>>P>>Q,P){\n        vector<T> V;\n        for(int i=0,r=0,c=0,s=0;i<P;i++){\n            string str;\n            cin>>str;\n            if(cnt(str))V.emplace_back(cnt(str),r,c,s);\n            // cout<<cnt(str)<<' '<<r<<' '<<c<<' '<<s<<' '<<str<<endl;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        for(auto t:V){\n            int a,b,c,d;\n            tie(a,b,c,d)=t;\n            // cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;\n        }\n        bool bR[21]={},bC[21]={},bS[21]={};\n        // fill(bS,bS+21,false);\n        for(int R=1;R<=20;R++){\n            for(int C=1;C<=20;C++){\n                for(int S=1;S<=20;S++){\n                    bool flag = true;\n                    for(auto t:V){\n                        int cnt,r,c,s;\n                        tie(cnt,r,c,s)=t;\n                        if(R*r+C*c+S*s!=cnt){\n                            flag=false;\n                            break;\n                        }\n                    }\n                    if(flag){\n                        bR[R]=bC[C]=bS[S]=true;\n                        // cout<<\"R: \"<<R<<\" C: \"<<C<<\" S: \"<<S<<endl;\n                    }\n                }\n            }\n        }\n        int R,C,S,cnt;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bR[i]){\n                R=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) R=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bC[i]){\n                C=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) C=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bS[i]){\n                S=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) S=-1;\n        // cout<<\"R: \"<<R<<\" C: \"<<C<<\" S: \"<<S<<endl;\n        for(int i=0,r=0,s=0,c=0;i<Q;i++){\n            // cout<<\"r: \"<<r<<\" s: \"<<s<<\" c: \"<<c<<endl;\n            if(i)cout<<' ';\n            if((R==-1&&r)||(S==-1&&s)||(C==-1&&c)){\n                int d=-1;\n                for(auto t:V){\n                    int dot,rr,ss,cc;\n                    tie(dot,rr,ss,cc)=t;\n                    if(rr==r&&ss==s&&cc==c){\n                        d=dot;\n                        break;\n                    }\n                }\n                cout<<d;\n            }else{\n                cout<<R*r+S*s+C*c;\n            }\n            // cout<<endl;\n            string str;\n            cin>>str;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define  _CRT_SECURE_NO_WARNINGS\n#pragma comment (linker, \"/STACK:526000000\")\n\n#include \"bits/stdc++.h\"\n\nusing namespace std;\ntypedef string::const_iterator State;\n#define eps 1e-11L\n#define MAX_MOD 1000000007LL\n#define GYAKU 500000004LL\n\n#define MOD 998244353LL\n#define seg_size 262144*2LL\n#define pb push_back\n#define mp make_pair\ntypedef long long ll;\n#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))\n#define ALL(x) (x).begin(),(x).end()\n\nunsigned long xor128() {\n\tstatic unsigned long x = 123456789, y = 362436069, z = 521288629, w = time(NULL);\n\tunsigned long t = (x ^ (x << 11));\n\tx = y; y = z; z = w;\n\treturn (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)));\n}\n\nvoid init() {\n\tiostream::sync_with_stdio(false);\n\tcout << fixed << setprecision(20);\n}\n#define int ll\n\nvoid solve(){\n\twhile (true) {\n\t\tint p, q;\n\t\tcin >> p >> q;\n\t\tif (p == 0) return;\n\t\tvector<string> bases, ans;\n\t\tREP(i, p) {\n\t\t\tstring a;\n\t\t\tcin >> a;\n\t\t\tbases.push_back(a);\n\t\t}\n\t\tREP(i, q) {\n\t\t\tstring a;\n\t\t\tcin >> a;\n\t\t\tans.push_back(a);\n\t\t}\n\t\tvector<tuple<int, int, int, int>> findings;\n\t\tint a = 0, b = 0, c = 0;\n\t\tREP(i, p) {\n\t\t\tint cnt = 0;\n\t\t\tREP(q, bases[i].size()) {\n\t\t\t\tif (bases[i][q] == '.') {\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tfindings.push_back(make_tuple(a, b, c, cnt));\n\t\t\tREP(q, bases[i].size()) {\n\t\t\t\tif (bases[i][q] == '{') {\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t\telse if (bases[i][q] == '}') {\n\t\t\t\t\ta--;\n\t\t\t\t}\n\t\t\t\telse if (bases[i][q] == '(') {\n\t\t\t\t\tb++;\n\t\t\t\t}\n\t\t\t\telse if (bases[i][q] == ')') {\n\t\t\t\t\tb--;\n\t\t\t\t}\n\t\t\t\telse if (bases[i][q] == '[') {\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\telse if (bases[i][q] == ']') {\n\t\t\t\t\tc--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<tuple<int, int, int>> now_itr;\n\t\tfor (int r = 1; r <= 20; ++r) {\n\t\t\tfor (int c = 1; c <= 20; ++c) {\n\t\t\t\tfor (int s = 1; s <= 20; ++s) {\n\t\t\t\t\tint ok = 1;\n\t\t\t\t\tREP(j,findings.size()) {\n\t\t\t\t\t\tif (get<3>(findings[j]) != get<0>(findings[j]) * r + get<1>(findings[j]) * c + get<2>(findings[j]) * s) {\n\t\t\t\t\t\t\tok = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (ok == 1) {\n\t\t\t\t\t\tnow_itr.push_back(make_tuple(r, c, s));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<tuple<int, int, int>> geko;\n\t\tREP(i, q) {\n\t\t\tgeko.push_back(make_tuple(a, b, c));\n\t\t\tREP(q, ans[i].size()) {\n\t\t\t\tif (ans[i][q] == '{') {\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t\telse if (ans[i][q] == '}') {\n\t\t\t\t\ta--;\n\t\t\t\t}\n\t\t\t\telse if (ans[i][q] == '(') {\n\t\t\t\t\tb++;\n\t\t\t\t}\n\t\t\t\telse if (ans[i][q] == ')') {\n\t\t\t\t\tb--;\n\t\t\t\t}\n\t\t\t\telse if (ans[i][q] == '[') {\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\telse if (ans[i][q] == ']') {\n\t\t\t\t\tc--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tset<int> going[100];\n\t\tREP(i, now_itr.size()) {\n\t\t\tREP(q, geko.size()) {\n\t\t\t\tgoing[q].insert(get<0>(now_itr[i]) * get<0>(geko[q]) + get<1>(now_itr[i]) * get<1>(geko[q]) + get<2>(now_itr[i]) * get<2>(geko[q]));\n\t\t\t}\n\t\t}\n\t\tREP(i, q) {\n\t\t\tif (i != 0) cout << \" \";\n\t\t\tif (going[i].size() == 1) {\n\t\t\t\tcout << *(going[i].begin());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcout << -1;\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n}\n\n#undef int\nint main() {\n\tinit();\n\tsolve();\n}\n"
  },
  {
    "language": "C++",
    "code": "#define __USE_MINGW_ANSI_STDIO 0\n#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n#define int ll\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define ALL(x) x.begin(), x.end()\n#define PB push_back\n\nconst ll LLINF = (1LL<<60);\nconst int INF = (1LL<<30);\nconst int MOD = 1000000007;\n\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\ntemplate <typename T> bool IN(T a, T b, T x) { return a<=x&&x<b; }\ntemplate<typename T> T ceil(T a, T b) { return a/b + !!(a%b); }\ntemplate<class S,class T>\nostream &operator <<(ostream& out,const pair<S,T>& a){\n  out<<'('<<a.first<<','<<a.second<<')';\n  return out;\n}\ntemplate<class T>\nostream &operator <<(ostream& out,const vector<T>& a){\n  out<<'[';\n  REP(i, a.size()) {out<<a[i];if(i!=a.size()-1)out<<',';}\n  out<<']';\n  return out;\n}\n\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\n\nbool able[21][21][21];\nsigned main(void)\n{\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int cnt = 0;\n  while(true) {\n    int p, q;\n    cin >> p >> q;\n    if(!p) break;\n    vector<string> s(p), t(q);\n    REP(i, p) cin >> s[i];\n    REP(i, q) cin >> t[i];\n\n    memset(able, true, sizeof(able));\n    map<VI, int> mp;\n    int a=0, b=0, c=0;\n    REP(i, p-1) {\n      // i行目の括弧の数\n      REP(j, s[i].size()) {\n        if(s[i][j]=='(') {\n          a++;\n        } else if(s[i][j]=='{') {\n          b++;\n        } else if(s[i][j]=='[') {\n          c++;\n        } else if(s[i][j]==')') {\n          a--;\n        } else if(s[i][j]=='}') {\n          b--;\n        } else if(s[i][j]==']') {\n          c--;\n        }\n      }\n      // i+1行目で行の先頭の'.'の数\n      int num = 0;\n      REP(j, s[i+1].size()) {\n        if(s[i+1][j] != '.') {\n          num = j;\n          break;\n        }\n      }\n      mp[{a, b, c}] = num;\n      // a*R + b*C + c*S = num になるような (R, C, S)\n      FOR(R, 1, 21) FOR(C, 1, 21) FOR(S, 1, 21) {\n        if(a*R + b*C + c*S != num) {\n          able[R][C][S] = false;\n        }\n      }\n    }\n\n    int R=-1, C=-1, S=-1;\n    FOR(i, 1, 21) FOR(j, 1, 21) FOR(k, 1, 21) {\n      if(able[i][j][k]) {\n        if(R == -1) R = i;\n        else if(R != i) R = -2;\n        if(C == -1) C = j;\n        else if(C != j) C = -2;\n        if(S == -1) S = k;\n        else if(S != k) S = -2;\n      }\n    }\n    // cout << R << \",\" << C << \",\" << S << endl;\n    // for(auto i: mp) cout << i << endl;\n\n    a = b = c = 0;\n    cout << 0;\n    cnt++;\n    REP(i, q-1) {\n      // cout << \"i:\" << i << endl;\n      REP(j, t[i].size()) {\n        if(t[i][j]=='(') {\n          a++;\n        } else if(t[i][j]=='{') {\n          b++;\n        } else if(t[i][j]=='[') {\n          c++;\n        } else if(t[i][j]==')') {\n          a--;\n        } else if(t[i][j]=='}') {\n          b--;\n        } else if(t[i][j]==']') {\n          c--;\n        }\n      }\n      // cout << a << \" \" << b << \" \" << c << endl;\n      bool flag = true;\n      if(a == 0 && b == 0 && c == 0) { cout << \" 0\"; flag = false; }\n      for(auto j: mp) {\n        if(!flag) break;\n        VI v = j.first;\n        if(v[0] > a || v[1] > b || v[2] > c\n          || (!v[0] && a) || (!v[1] && b) || (!v[2] && c)) {\n          continue;\n        }\n        bool cond1 = !a || v[0]%a==0,\n             cond2 = !b || v[1]%b==0,\n             cond3 = !c || v[2]%c==0;\n        if(cond1 && cond2 && cond3 && v[0]*b == v[1]*a && v[1]*c == v[2]*b) {\n          // cout << v << endl;\n          int tmp = -1;\n          if(a != 0) tmp = v[0]/a;\n          else if(b != 0) tmp = v[1]/b;\n          else if(c != 0) tmp = v[2]/c;\n          cout << \" \" << tmp * j.second;\n          flag = false;\n          break;\n        }\n      }\n      if(!flag) continue;\n      if((a && R < 0) || (b && C < 0) || (c && S < 0)) {\n        cout << \" -1\";\n      } else {\n        cout << \" \" << a*R + b*C + c*S;\n      }\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\ntypedef long long ll;\nusing namespace std;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef vector<vector<int> > Matrix;\nint p,q;\nint R,C,S;\nint squnum=0,rounum=0,curnum=0;\nint testrounum=0,testsqunum=0,testcurnum=0;\nint squind=-1,rouind=-1,curind=-1;\nint ansrouind=-1,anssquind=-1,anscurind=-1;\nint main()\n{\n  while(cin >> p >> q && p)\n    {\n      string ex[15];\n      string test[15];\n      vector<int> ans(q,-2);\n      for (int i = 0; i < p; ++i)\n\t{\n\t  cin >> ex[i];\n\t}\n      for (int i = 0; i < q; ++i)\n\t{\n\t  cin >> test[i];\n\t}\n      for (int r = 1; r <= 20; ++r)\n\t{\n\t  for (int c = 1; c <= 20; ++c)\n\t    {\n\t      for (int s = 1; s <= 20; ++s)\n\t\t{\n\t\t  rounum=0,curnum=0,squnum=0;\n\t\t  bool niceindent=true;\n\t\t  for (int i = 0; i < p; ++i)\n\t\t    {\n\t\t      bool notperi=false;\n\t\t      int ind=0;\n\t\t      for(int j=0;j<int(ex[i].size());j++)\n\t\t\t{\n\t\t\t  if(ex[i][j]=='.' && !notperi)\n\t\t\t    {\n\t\t\t      ind++;\n\t\t\t      continue;\n\t\t\t    }\n\t\t\t  else if(ex[i][j]!='.' && !notperi)\n\t\t\t    {\n\t\t\t      notperi=true;\n\t\t\t      int tmp=r*rounum+c*curnum+s*squnum;\n\t\t\t      if(tmp==ind)\n\t\t\t\t{\n\t\t\t\t  rouind=r;\n\t\t\t\t  curind=c;\n\t\t\t\t  squind=s;\n\t\t\t\t}\n\t\t\t      else niceindent=false;\n\t\t\t    }\n\t\t\t  if(ex[i][j]=='(')rounum++;\n\t\t\t  else if(ex[i][j]=='{')curnum++;\n\t\t\t  else if(ex[i][j]=='[')squnum++;\n\t\t\t  else if(ex[i][j]==')')rounum--;\n\t\t\t  else if(ex[i][j]==']')squnum--;\n\t\t\t}\n\t\t    }\n\t\t  if(!niceindent) continue;\n\t\t  if(niceindent)\n\t\t    {\n\t\t      testrounum=0,testsqunum=0,testcurnum=0;\n\t\t      for (int i = 0; i < q; ++i)\n\t\t\t{\n\t\t\t  bool testnotperi=false;\n\t\t\t  int testind=0;\n\t\t\t  int testtmp=0;\n\t\t\t  for(int j=0;j<int(test[i].size());j++)\n\t\t\t    {\n\t\t\t      if(test[i][j]=='.' && !testnotperi)\n\t\t\t\t{\n\t\t\t\t  testind++;\n\t\t\t\t  continue;\n\t\t\t\t}\n\t\t\t      else if(test[i][j]!='.' && !testnotperi)\n\t\t\t\t{\n\t\t\t\t  testnotperi=true;\n\t\t\t\t  testtmp=rouind*testrounum+curind*testcurnum+squind*testsqunum;\n\t\t\t\t  if(ans[i]==-2) ans[i]=testtmp;\n\t\t\t\t  else if(ans[i]!=testtmp) ans[i]=-1;\n\t\t\t\t  //cout << tmp << endl;\n\t\t\t\t}\n\t\t\t      if(test[i][j]=='(')testrounum++;\n\t\t\t      else if(test[i][j]=='{')testcurnum++;\n\t\t\t      else if(test[i][j]=='[')testsqunum++;\n\t\t\t      else if(test[i][j]==')')testrounum--;\n\t\t\t      else if(test[i][j]==']')testsqunum--;\n\t\t\t      else if(test[i][j]=='}')testcurnum--;\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n      for(int i=0;i<q;i++)\n\t{\n\t  cout << ans[i] << (i==q-1 ? '\\n' : ' ');\n\t}\n    }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define dump(a) (cerr << (#a) << \" = \" << (a) << endl)\n\ntemplate<class T> inline void chmax(T& a, const T& b) { if(b > a) a = b; }\ntemplate<class T> inline void chmin(T& a, const T& b) { if(b < a) a = b; }\n\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n\tos << '(' << p.first << \", \" << p.second << ')';\n\treturn os;\n}\n\ntemplate<class Tuple, unsigned Index>\nvoid print_tuple(ostream& os, const Tuple& t) {}\n\ntemplate<class Tuple, unsigned Index, class Type, class... Types>\nvoid print_tuple(ostream& os, const Tuple& t) {\n\tif(Index > 0) os << \", \";\n\tos << get<Index>(t);\n\tprint_tuple<Tuple, Index + 1, Types...>(os, t);\n}\n\ntemplate<class... Types>\nostream& operator<<(ostream& os, const tuple<Types...>& t) {\n\tos << '(';\n\tprint_tuple<tuple<Types...>, 0, Types...>(os, t);\n\treturn os << ')';\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream&, Iterator, const Iterator&);\n\ntemplate<typename T>\nostream& operator<<(ostream& os, vector<T> c) {\n\treturn dump_range(os, c.cbegin(), c.cend());\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream& os, Iterator first, const Iterator& last) {\n\tos << '[';\n\tfor(int i = 0; first != last; ++i, ++first) {\n\t\tif(i) os << \", \";\n\t\tos << *first;\n\t}\n\treturn os << ']';\n}\n\nconst int MAX_RCS = 20;\n\nint calc_indent(const string& s) {\n\tfor(int i = 0; i < static_cast<int>(s.size()); ++i) {\n\t\tif(s[i] != '.') return i;\n\t}\n\n\treturn s.size();\n}\n\nvoid calc_nest(int& nest_r, int& nest_c, int& nest_s, const string& line) {\n\tfor(int i = 0; i < static_cast<int>(line.size()); ++i) {\n\t\tswitch(line[i]) {\n\t\tcase '(': ++nest_r; break;\n\t\tcase ')': --nest_r; break;\n\t\tcase '{': ++nest_c; break;\n\t\tcase '}': --nest_c; break;\n\t\tcase '[': ++nest_s; break;\n\t\tcase ']': --nest_s; break;\n\t\t}\n\t}\n}\n\nbool ok(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tfor(const pair<tuple<int, int, int>, int>&e : conditions) {\n\t\tconst tuple<int, int, int>& nest = e.first;\n\t\tconst int indent = r * get<0>(nest) + c * get<1>(nest) + s * get<2>(nest);\n\t\tif(indent != e.second) return false;\n\t}\n\n\treturn true;\n}\n\ninline int gcd(int a, int b, int c) {\n\treturn __gcd(a, __gcd(b, c));\n}\n\nint get_value(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tconst int g = max(1, gcd(r, c, s));\n\tconst tuple<int, int, int> t(r / g, c / g, s / g);\n\tif(conditions.count(t))\n\t\treturn g * conditions.at(t);\n\treturn -1;\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tfor(int p, q; cin >> p >> q && p;) {\n\t\tmap<tuple<int, int, int>, int> conditions;\n\t\tint nest_r = 0, nest_c = 0, nest_s = 0;\n\t\tfor(int i = 0; i < p; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int g = max(1, gcd(nest_r, nest_c, nest_s));\n\t\t\tconditions[make_tuple(nest_r / g, nest_c / g, nest_s / g)] = calc_indent(line) / g;\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tunordered_set<int> R, C, S;\n\t\tfor(int r = 1; r <= MAX_RCS; ++r) {\n\t\t\tfor(int c = 1; c <= MAX_RCS; ++c) {\n\t\t\t\tfor(int s = 1; s <= MAX_RCS; ++s) {\n\t\t\t\t\tif(ok(r, c, s, conditions)) {\n\t\t\t\t\t\tR.insert(r);\n\t\t\t\t\t\tC.insert(c);\n\t\t\t\t\t\tS.insert(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnest_r = 0, nest_c = 0, nest_s = 0;\n\t\tvector<int> ans(q);\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int indent = calc_indent(line);\n\n\t\t\tif(!((nest_r && R.size() != 1) ||\n\t\t\t\t\t  (nest_c && C.size() != 1) ||\n\t\t\t\t\t  (nest_s && S.size() != 1))) {\n\t\t\t\tans[i] = abs(nest_r * (*R.begin()) + nest_c * (*C.begin()) + nest_s * (*S.begin()) - indent);\n\t\t\t}\n\t\t\telse if(ans[i] = get_value(nest_r, nest_c, nest_s, conditions), ans[i] != -1) {\n\t\t\t\tans[i] = abs(ans[i] - indent);\n\t\t\t}\n\t\t\telse if(S.size() == 1 && (ans[i] = get_value(nest_r, nest_c, 0, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*S.begin()) - indent);\n\t\t\t}\n\t\t\telse if(C.size() == 1 && (ans[i] = get_value(nest_r, 0, nest_s, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*C.begin()) - indent);\n\t\t\t}\n\t\t\telse if(R.size() == 1 && (ans[i] = get_value(0, nest_c, nest_s, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*R.begin()) - indent);\n\t\t\t}\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tcout << ans[i] << (i == q - 1 ? \"\\n\" : \" \");\n\t\t}\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==30) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<set>\n#include<utility>\n#include<valarray>\n#include<string>\n#include<algorithm>\n\nusing namespace std;\n\nvalarray<int> braces(string s){\n  valarray<int> va(3);\n  for(auto e:s){\n    va[0]+=(e=='(')-(e==')');\n    va[1]+=(e=='{')-(e=='}');\n    va[2]+=(e=='[')-(e==']');\n  }\n  return va;\n}\n\nint main(){\n  for(int p,q;cin>>p>>q,p;){\n    vector<pair<valarray<int>,int> > v;\n    valarray<int> va(3);\n    for(int i=0;i<p;i++){\n      string s;\n      cin>>s;\n      v.emplace_back(va,find_if(begin(s),end(s),[](char c){\n\t    return c!='.';\n\t  })-begin(s));\n      va+=braces(s);\n    }\n    vector<vector<int> > fact;\n    for(int i=1;i<=20;i++){\n      for(int j=1;j<=20;j++){\n\tfor(int k=1;k<=20;k++){\n\t  bool f=false;\n\t  for(auto e:v){\n\t    auto cva=e.first;\n\t    f|=cva[0]*i+cva[1]*j+cva[2]*k!=e.second;\n\t  }\n\t  if(!f){\n\t    fact.push_back({i,j,k});\n\t  }\n\t}\n      }\n    }\n    valarray<int> rva(3);\n    while(q--){\n      set<int> cand;\n      for(auto e:fact){\n\tcand.insert(e[0]*rva[0]+e[1]*rva[1]+e[2]*rva[2]);\n      }\n      cout<<((cand.size()==1)?*begin(cand):-1)<<\" \\n\"[q==0];\n      string s;\n      cin>>s;\n      rva+=braces(s);\n    }\n  }\n}\n      \n      \n\t\n    \n    "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\nusing namespace std;\ntypedef pair<int,pair<int,int> > PP;\nint p,q;\nstring P[11],Q[11];\nmap <PP,int> M;\nPP mkPP(int a,int b,int c){return make_pair(a,make_pair(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nint find(int a,int b,int c){\n  int d=gcd(a,b,c,0);\n  if(M.count(mkPP(a/d,b/d,c/d)))return M[mkPP(a/d,b/d,c/d)]*d;\n  if(a+b+c==1)return -1;\n  int res1,res2;\n  d=gcd(b,c,0,0);\n  if(a&&(res1=find(1,0,0))!=-1&&(res2=find(0,b/d,c/d))!=-1) return res1*a+res2*d;\n  d=gcd(a,c,0,0);\n  if(b&&(res1=find(0,1,0))!=-1&&(res2=find(a/d,0,c/d))!=-1) return res1*b+res2*d;\n  d=gcd(a,b,0,0);\n  if(c&&(res1=find(0,0,1))!=-1&&(res2=find(a/d,b/d,0))!=-1) return res1*c+res2*d;\n  return -1;\n}\n\nvoid mk_siki(int x[],int a){\n  int d =gcd(x[0],x[1],x[2],a);\n  a/=d;\n  for(int i=0;i<3;i++)x[i]/=d;\n  if(x[0]&&x[0]==x[1]&&x[1]==x[2]&&a%3==0)M[mkPP(1,0,0)]=M[mkPP(0,1,0)]=M[mkPP(0,0,1)]=a/3;\n  M[mkPP(x[0],x[1],x[2])]=a;\n}\n\nvoid prep(){\n  M.clear();\n  int cnt[3]={};\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<P[i].size();j++){\n      char ch=P[i][j];\n      if(ch=='.')dot++;\n      if(f&&ch!='.')f=0,mk_siki(cnt,dot);\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\nvoid out(){\n  int cnt[3]={};\n  for(int i=0;i<q;i++){\n    cout <<find(cnt[0],cnt[1],cnt[2]);\n      if(i!=q-1)cout <<\" \";\n    for(int j=0;j<Q[i].size();j++){\n      char ch=Q[i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>P[i];\n    for(int i=0;i<q;i++)cin>>Q[i];\n    prep();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <tuple>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main()\n{\n    while (true) {\n        int p, q;\n        cin >> p >> q;\n        if (p == 0 && q == 0) {\n            return 0;\n        }\n\n        vector<string> P;\n        for (int i = 0; i < p; ++i) {\n            string a;\n            cin >> a;\n            P.push_back(a);\n        }\n\n        auto processLine = [](const string& line) {\n            auto aoi = 0;\n            auto groupingNotFound = true;\n            auto cr = make_pair(0, 0);\n            auto cc = make_pair(0, 0);\n            auto cs = make_pair(0, 0);\n            for (char i : line) {\n                if (groupingNotFound && i == '.') {\n                    aoi += 1;\n                }\n                else {\n                    groupingNotFound = false;\n                    if (i == '(')\n                        cr.first += 1;\n                    else if (i == ')') {\n                        cr.second += 1;\n                    }\n                    else if (i == '{') {\n                        cc.first += 1;\n                    }\n                    else if (i == '}') {\n                        cc.second += 1;\n                    }\n                    else if (i == '[') {\n                        cs.first += 1;\n                    }\n                    else if (i == ']') {\n                        cs.second += 1;\n                    }\n                }\n            }\n            return make_tuple(aoi, cr, cc, cs);\n        };\n        auto computeAoi = [](const tuple<int, int, int>& param,\n                             const pair<int, int>& r, const pair<int, int>& c,\n                             const pair<int, int>& s) {\n            int R, C, S;\n            tie(R, C, S) = param;\n            return R * (r.first - r.second) + C * (c.first - c.second) +\n                   S * (s.first - s.second);\n        };\n        auto addPair = [](auto& a, const auto& b) {\n            a.first += b.first;\n            a.second += b.second;\n        };\n\n        auto candidates = [processLine, computeAoi,\n                           addPair](const vector<string>& v) {\n            auto r = make_pair(0, 0);\n            auto c = make_pair(0, 0);\n            auto s = make_pair(0, 0);\n            vector<tuple<int, int, int>> remainCandidates;\n            for (int R = 1; R <= 20; ++R) {\n                for (int C = 1; C <= 20; ++C) {\n                    for (int S = 1; S <= 20; ++S) {\n                        remainCandidates.emplace_back(R, C, S);\n                    }\n                }\n            }\n            for (auto&& line : v) {\n                int aoi;\n                pair<int, int> cr, cc, cs;\n                tie(aoi, cr, cc, cs) = processLine(line);\n\n                vector<tuple<int, int, int>> temp;\n                for (auto&& j : remainCandidates) {\n                    if (computeAoi(j, r, c, s) == aoi) {\n                        temp.push_back(move(j));\n                    }\n                }\n                swap(remainCandidates, temp);\n                addPair(r, cr);\n                addPair(c, cc);\n                addPair(s, cs);\n            }\n            return remainCandidates;\n        };\n        const auto candidates_ = candidates(P);\n        auto normalize = [](const vector<tuple<int, int, int>>& v) {\n            tuple<unordered_set<int>, unordered_set<int>, unordered_set<int>> n;\n            unordered_set<int> r, c, s;\n            tie(r, c, s) = n;\n            for (auto&& i : v) {\n                int rr, cc, ss;\n                tie(rr, cc, ss) = i;\n                r.insert(rr);\n                c.insert(cc);\n                s.insert(ss);\n            }\n            return n;\n        };\n        const auto nn = normalize(candidates_);\n\n        vector<string> Q;\n        for (int i = 0; i < q; ++i) {\n            string a;\n            cin >> a;\n            Q.push_back(a);\n        }\n\n        auto computeAoiByCandidates = [&candidates_,\n                                       computeAoi](const pair<int, int>& r,\n                                                   const pair<int, int>& c,\n                                                   const pair<int, int>& s) {\n            bool first = true;\n            int current = -1;\n            for (auto&& candidate : candidates_) {\n                if (first) {\n                    current = computeAoi(candidate, r, c, s);\n                    first = false;\n                }\n                else {\n                    auto r_ = computeAoi(candidate, r, c, s);\n                    if (r_ != current) {\n                        return -1;\n                    }\n                    else {\n                        current = r_;\n                    }\n                }\n            }\n            return current;\n        };\n\n        auto r = make_pair(0, 0);\n        auto c = make_pair(0, 0);\n        auto s = make_pair(0, 0);\n        vector<int> results;\n        for (auto&& line : Q) {\n            int aoi;\n            pair<int, int> cr, cc, cs;\n            tie(aoi, cr, cc, cs) = processLine(line);\n            results.push_back(computeAoiByCandidates(r, c, s));\n            addPair(r, cr);\n            addPair(c, cc);\n            addPair(s, cs);\n        }\n        for (size_t i = 0; i < results.size(); ++i) {\n            cout << results[i];\n            if (i == results.size() - 1) {\n                cout << endl;\n            }\n            else {\n                cout << \" \";\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#include <iomanip>\n#include <cmath>\n#include <cassert>\nusing namespace std;\n\nstring T1[10];\nstring T2[10];\nint p, q;\n\nvoid solve() {\n\tvector<int> ind(p);\n\tfor(int i = 0; i < p; i++) {\n\t\tint cnt = 0;\n\t\twhile(T1[i][cnt] == '.') cnt++;\n\t\tind[i] = cnt;\n\t}\n\n\tvector<int> ans(q, -2);\n\tfor(int R = 1; R <= 20; R++) {\n\t\tfor(int C = 1; C <= 20; C++) {\n\t\t\tfor(int S = 1; S <= 20; S++) {\n\t\t\t\tint r = 0, c = 0, s = 0;\n\t\t\t\tbool flag = true;\n\t\t\t\tfor(int i = 0; i < p; i++) {\n\t\t\t\t\tint sum = R * r + C * c + S * s;\n\t\t\t\t\tif(ind[i] != sum) {\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tfor(char x : T1[i]) {\n\t\t\t\t\t\tif(x == '(') r++;\n\t\t\t\t\t\tif(x == ')') r--;\n\t\t\t\t\t\tif(x == '{') c++;\n\t\t\t\t\t\tif(x == '}') c--;\n\t\t\t\t\t\tif(x == '[') s++;\n\t\t\t\t\t\tif(x == ']') s--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!flag) continue;\n\n\t\t\t\tr = c = s = 0;\n\t\t\t\tfor(int i = 0; i < q; i++) {\n\t\t\t\t\tint sum = R * r + C * c + S * s;\n\t\t\t\t\tif(ans[i] == -2) {\n\t\t\t\t\t\tans[i] = sum;\n\t\t\t\t\t}\n\t\t\t\t\telse if(ans[i] != sum) {\n\t\t\t\t\t\tans[i] = -1;\n\t\t\t\t\t}\n\t\t\t\t\tfor(char x : T2[i]) {\n\t\t\t\t\t\tif(x == '(') r++;\n\t\t\t\t\t\tif(x == ')') r--;\n\t\t\t\t\t\tif(x == '{') c++;\n\t\t\t\t\t\tif(x == '}') c--;\n\t\t\t\t\t\tif(x == '[') s++;\n\t\t\t\t\t\tif(x == ']') s--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i = 0; i < q; i++) {\n\t\tcout << ans[i];\n\t\tif(i != q - 1) cout << \" \";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\n\twhile(cin >> p >> q, p | q) {\n\t\tfor(int i = 0; i < p; i++) {\n\t\t\tcin >> T1[i];\n\t\t}\n\t\tfor(int i = 0; i < q; i++) {\n\t\t\tcin >> T2[i];\n\t\t}\n\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nint x[11][3], y[11][3], b[11];\nint main() {\n\tint n, m; string S[10], T[10];\n\twhile (true) {\n\t\tcin >> n >> m; if (n == 0 && m == 0)break;\n\t\tfor (int i = 0; i < n; i++)cin >> S[i];\n\t\tfor (int i = 0; i < m; i++)cin >> T[i];\n\t\tfor (int i = 0; i < 33; i++) { x[i / 3][i % 3] = 0; y[i / 3][i % 3] = 0; }\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tx[i + 1][0] = x[i][0]; x[i + 1][1] = x[i][1]; x[i + 1][2] = x[i][2]; bool Ind = true;\n\t\t\tfor (int j = 0; j < S[i].size(); j++) {\n\t\t\t\tif (S[i][j] != '.')Ind = false; if (Ind == true)b[i] = j + 1;\n\t\t\t\tif (S[i][j] == '(')x[i + 1][0]++; if (S[i][j] == ')')x[i + 1][0]--;\n\t\t\t\tif (S[i][j] == '{')x[i + 1][1]++; if (S[i][j] == '}')x[i + 1][1]--;\n\t\t\t\tif (S[i][j] == '[')x[i + 1][2]++; if (S[i][j] == ']')x[i + 1][2]--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\ty[i + 1][0] = y[i][0]; y[i + 1][1] = y[i][1]; y[i + 1][2] = y[i][2];\n\t\t\tfor (int j = 0; j < T[i].size(); j++) {\n\t\t\t\tif (T[i][j] == '(')y[i + 1][0]++; if (T[i][j] == ')')y[i + 1][0]--;\n\t\t\t\tif (T[i][j] == '{')y[i + 1][1]++; if (T[i][j] == '}')y[i + 1][1]--;\n\t\t\t\tif (T[i][j] == '[')y[i + 1][2]++; if (T[i][j] == ']')y[i + 1][2]--;\n\t\t\t}\n\t\t}\n\t\tvector<int>res[10];\n\t\tfor (int i = 1; i <= 20; i++) {\n\t\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\t\tbool OK = true;\n\t\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\t\tif ((x[l][0] * i + x[l][1] * j + x[l][2] * k) != b[l])OK = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (OK == false)continue;\n\t\t\t\t\tfor (int l = 0; l < m; l++) {\n\t\t\t\t\t\tint ret = y[l][0] * i + y[l][1] * j + y[l][2] * k;\n\t\t\t\t\t\tfor (int o = 0; o < res[l].size(); o++) {\n\t\t\t\t\t\t\tif (res[l][o] == ret)goto E;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres[l].push_back(ret); E:;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) { if (x[i][0] + x[i][1] + x[i][2] == 0)res[i].push_back(0); }\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i)cout << ' ';\n\t\t\tif (res[i].size() == 0 || res[i].size() >= 2) { cout << \"-1\"; }\n\t\t\telse { cout << res[i][0]; }\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\n//FILE *in = freopen(\"input.txt\", \"r\", stdin);\n//FILE *out = freopen(\"output.txt\", \"w\", stdout);\n\nint n, m;\nchar str1[1000];\n\nint ind[15][3];\nint indent[15];\n\nint rind[15][3];\n\nint res[15];\n\nint R, C, S;\n\nvoid input() {\n\tfor(int i = 0; i < m; i++) {\n\t\tres[i] = -2;\n\t}\n\t\n\tind[0][0] = ind[0][1] = ind[0][2] = 0;\n\tfor(int i = 0; i < n; i++) {\n\t\tgets(str1);\n\t\tint cnt = 0;\n\t\tint j;\n\t\tfor(j = 0; str1[j]; j++) {\n\t\t\tif(str1[j] == '.') {\n\t\t\t\t++cnt;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tindent[i] = cnt;\n\t\tfor(;str1[j];j++) {\n\t\t\tswitch(str1[j]) {\n\t\t\tcase '(':\n\t\t\t\t++ind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\t++ind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\t++ind[i][2];\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\t--ind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\t--ind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase ']' :\n\t\t\t\t--ind[i][2];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tind[i+1][0] = ind[i][0];\n\t\tind[i+1][1] = ind[i][1];\n\t\tind[i+1][2] = ind[i][2];\n\t}\n\n\trind[0][0] = rind[0][1] = rind[0][2] = 0;\n\tfor(int i = 0; i < m; i++) {\n\t\tgets(str1);\n\t\tfor(int j = 0; str1[j]; j++) {\n\t\t\tswitch(str1[j]) {\n\t\t\tcase '(':\n\t\t\t\t++rind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\t++rind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\t++rind[i][2];\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\t--rind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\t--rind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase ']' :\n\t\t\t\t--rind[i][2];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\trind[i+1][0] = rind[i][0];\n\t\trind[i+1][1] = rind[i][1];\n\t\trind[i+1][2] = rind[i][2];\n\t}\n}\n\nvoid process2() {\n\tfor(int i = 0; i < m - 1; i++) {\n\t\tint r = R*rind[i][0];\n\t\tint c = C*rind[i][1];\n\t\tint s = S*rind[i][2];\n\n\t\tif(r < 0 || c < 0 || s < 0) {\n\t\t\tres[i] = -1;\n\t\t}\n\t\telse {\n\t\t\tif(res[i] != -2 && res[i] != r + c + s) {\n\t\t\t\tres[i] = -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres[i] = r + c + s;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid process() {\n\tbool rf = false, cf = false, sf = false;\n\tfor(int i = 0; i < n - 1; i++) {\n\t\tif(ind[i][0])rf = true;\n\t\tif(ind[i][1])cf = true;\n\t\tif(ind[i][2])sf = true;\n\t}\n\tfor(R = rf ? 1 : -1; R <= 20; R++) {\n\t\tif(R == 0) continue;\n\t\tfor(C = cf ? 1 : -1; C <= 20; C++) {\n\t\t\tif(C == 0) continue;\n\t\t\tfor(S = sf ? 1 : -1; S <= 20; S++) {\n\t\t\t\tif(S == 0) continue;\n\t\t\t\tint i;\n\t\t\t\tfor(i = 0 ; i < n - 1; i++) {\n\t\t\t\t\tif(indent[i+1] != R*ind[i][0] + C*ind[i][1] + S*ind[i][2])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == n - 1) {\n\t\t\t\t\tprocess2();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid output() {\n\tprintf(\"0 \");\n\tfor(int i = 0; i < m - 2; i++) {\n\t\tprintf(\"%d \", res[i]);\n\t}\n\tprintf(\"%d\", res[m-2]);\n\tprintf(\"\\n\");\n}\n\nint main() {\n\twhile(true){\n\t\tscanf(\"%d%d\\n\", &n, &m);\n\t\tif (n == 0 && m == 0) break;\n\t\tR = -1;\n\t\tC = -1;\n\t\tS = -1;\n\t\tinput();\n\t\tprocess();\n\t\toutput();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint N , M;\n\twhile(cin >> N >> M , N || M)\n\t{\n\t\tint a = 0 , b = 0 , c = 0 , d = 0;\n\t\tmap<vector<int> , int>data;\n\t\tfor(size_t i = 0; i < N; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tint memo = 1;\n\t\t\tfor(size_t i = 1; i < 20; i++)\n\t\t\t{\n\t\t\t\tif(a%i == 0 && b%i == 0 && c%i == 0 && now%i == 0)\n\t\t\t\t{\n\t\t\t\t\tmemo = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvector<int>memo2 = { a / memo,b / memo,c / memo };\n\t\t\tdata[memo2] = now / memo;\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tvector<vector<int>>candidate;\n\t\tfor(int i = 1; i <= 20; i++)\n\t\t{\n\t\t\tfor(int j = 1; j <= 20; j++)\n\t\t\t{\n\t\t\t\tfor(int k = 1; k <= 20; k++)\n\t\t\t\t{\n\t\t\t\t\tbool f = 1;\n\t\t\t\t\tfor(auto x : data)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(x.first[0] * i + x.first[1] * j + x.first[2] * k != x.second)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(f)candidate.push_back(vector<int>{i - 1 , j - 1 , k - 1});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<set<int>>ans(M);\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tfor(auto x : candidate)\n\t\t\t{\n\t\t\t\tans[i].insert(( x[0] + 1 )*a + ( x[1] + 1 )*b + ( x[2] + 1 )*c);\n\t\t\t}\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tif(ans[i].size() == 1)\n\t\t\t{\n\t\t\t\tfor(auto x : ans[i])\n\t\t\t\t{\n\t\t\t\t\tcout << x;\n\t\t\t\t}\n\t\t\t} else\n\t\t\t{\n\t\t\t\tcout << -1;\n\t\t\t}\n\t\t\tcout << ( i == M - 1 ? \"\\n\" : \" \" );\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<set>\n#include<utility>\n#include<valarray>\n#include<string>\n#include<algorithm>\n\nusing namespace std;\n\nvalarray<int> braces(string s){\n  valarray<int> va(3);\n  for(auto e:s){\n    va[0]+=(e=='(')-(e==')');\n    va[1]+=(e=='{')-(e=='}');\n    va[2]+=(e=='[')-(e==']');\n  }\n  return va;\n}\n\nint main(){\n  for(int p,q;cin>>p>>q,p;){\n    vector<pair<valarray<int>,int> > v;\n    valarray<int> va(3);\n    for(int i=0;i<p;i++){\n      string s;\n      cin>>s;\n      v.emplace_back(va,find_if(begin(s),end(s),[](char c){\n\t    return c!='.';\n\t  })-begin(s));\n      va+=braces(s);\n    }\n    set<int> r,c,s;\n    for(int i=1;i<=20;i++){\n      for(int j=1;j<=20;j++){\n\tfor(int k=1;k<=20;k++){\n\t  bool f=false;\n\t  for(auto e:v){\n\t    auto cva=e.first;\n\t    f|=cva[0]*i+cva[1]*j+cva[2]*k!=e.second;\n\t  }\n\t  if(!f){\n\t    r.insert(i);\n\t    c.insert(j);\n\t    s.insert(k);\n\t  }\n\t}\n      }\n    }\n    valarray<int> rva(3);\n    while(q--){\n      if(rva[0]&&r.size()!=1||rva[1]&&c.size()!=1||rva[2]&&s.size()!=1){\n\tcout<<-1;\n      }else{\n\tcout<<rva[0]**begin(r)+rva[1]**begin(c)+rva[2]**begin(s);\n      }\n      cout<<\" \\n\"[q==0];\n      string s;\n      cin>>s;\n      rva+=braces(s);\n    }\n  }\n}\n      \n      \n\t\n    \n    "
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint N , M;\n\twhile(cin >> N >> M , N || M)\n\t{\n\t\tint a = 0 , b = 0 , c = 0 , d = 0;\n\t\tmap<vector<int> , int>data;\n\t\tfor(size_t i = 0; i < N; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t\td++;\n\t\t\t}\n\t\t\tint memo = 1;\n\t\t\tfor(size_t i = 1; i < 20; i++)\n\t\t\t{\n\t\t\t\tif(a%i == 0 && b%i == 0 && c%i == 0 && d%i == 0)\n\t\t\t\t{\n\t\t\t\t\tmemo = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvector<int>memo2 = { a / memo,b / memo,c / memo };\n\t\t\tdata[memo2] = d / memo;\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}/*\n\t\tcout << \"!\" << endl;\n\t\tfor(auto x : data)\n\t\t{\n\t\t\tcout << x.first[0] << \" \" << x.first[1] << \" \" << x.first[2] << \" \" << \" \" << x.second << endl;\n\t\t}*/\n\n\n\t\t//vector<vector<vector<bool>>>candidate(20 , vector<vector<bool>>(20 , vector<bool>(20)));\n\t\tvector<vector<int>>xx;\n\t\tfor(int i = 1; i <= 20; i++)\n\t\t{\n\t\t\tfor(int j = 1; j <= 20; j++)\n\t\t\t{\n\t\t\t\tfor(int k = 1; k <= 20; k++)\n\t\t\t\t{\n\t\t\t\t\tbool f = 1;\n\t\t\t\t\tfor(auto x : data)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(x.first[0] * i + x.first[1] * j + x.first[2] * k != x.second)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//candidate[i-1][j-1][k-1]=f;\n\t\t\t\t\tif(f)xx.push_back(vector<int>{i - 1 , j - 1 , k - 1});\n\t\t\t\t\t//if(f)cout << i << \" \" << j << \" \" << k << \"  \" << f << endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/*\n\t\tfor(auto x : xx)\n\t\t{\n\t\t\tfor(auto y : x)\n\t\t\t{\n\t\t\t\tcout << y + 1 << \" \";\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}*/\n\t\tvector<set<int>>ans(M);\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t\td++;\n\t\t\t}\n\t\t\tfor(auto x : xx)\n\t\t\t{\n\t\t\t\tans[i].insert(( x[0] + 1 )*a + ( x[1] + 1 )*b + ( x[2] + 1 )*c);\n\t\t\t}\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tif(ans[i].size() == 1)\n\t\t\t{\n\t\t\t\tfor(auto x : ans[i])\n\t\t\t\t{\n\t\t\t\t\tcout << x;\n\t\t\t\t}\n\t\t\t} else\n\t\t\t{\n\t\t\t\tcout << -1;\n\t\t\t}\n\t\t\tif(i==M-1)\n\t\t\t{\n\t\t\t\tcout<<endl;\n\t\t\t} else\n\t\t\t{\n\t\t\t\tcout<<\" \";\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <cstring>\n#include <string>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n \n#define REP(i,n) for(int i=0; i<n; ++i)\n#define FOR(i,a,b) for(int i=a; i<=b; ++i)\n#define FORR(i,a,b) for (int i=a; i>=b; --i)\n#define pi M_PI\n#define EPS 1e-10\n \ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef vector<ll> VL;\ntypedef vector<VI> VVI;\ntypedef pair<int,int> P;\ntypedef pair<ll,ll> PL;\n\nint main() {\n    int p, q;\n    while (cin >> p >> q && p){\n        vector<string> s(p);\n        REP(i,p) cin >> s[i];\n        VI ro(p), co(p), so(p), indent(p);\n        REP(i,p){\n            while (s[i][indent[i]] == '.') indent[i]++;\n            if (i < p-1){\n                ro[i+1] = ro[i];\n                co[i+1] = co[i];\n                so[i+1] = so[i];\n                REP(j,s[i].length()){\n                    if (s[i][j] == '(') ro[i+1]++;\n                    if (s[i][j] == ')') ro[i+1]--;\n                    if (s[i][j] == '{') co[i+1]++;\n                    if (s[i][j] == '}') co[i+1]--;\n                    if (s[i][j] == '[') so[i+1]++;\n                    if (s[i][j] == ']') so[i+1]--;\n                }\n            }\n        }\n\n        vector<string> t(q);\n        REP(i,q) cin >> t[i];\n        VI rn(q), cn(q), sn(q);\n        REP(i,q){\n            if (i < q-1){\n                rn[i+1] = rn[i];\n                cn[i+1] = cn[i];\n                sn[i+1] = sn[i];\n                REP(j,t[i].length()){\n                    if (t[i][j] == '(') rn[i+1]++;\n                    if (t[i][j] == ')') rn[i+1]--;\n                    if (t[i][j] == '{') cn[i+1]++;\n                    if (t[i][j] == '}') cn[i+1]--;\n                    if (t[i][j] == '[') sn[i+1]++;\n                    if (t[i][j] == ']') sn[i+1]--;\n                }\n            }\n        }\n\n        VI ans(q,-1);\n        FOR(r,1,20) FOR(c,1,20) FOR(s,1,20) {\n            bool f = 1;\n            REP(i,p){\n                if (r*ro[i] + c*co[i] + s*so[i] != indent[i]) f = 0;\n            }\n            if (!f) continue;\n            REP(i,q){\n                int x = r*rn[i] + c*cn[i] + s*sn[i];\n                if (ans[i] == -2) continue;\n                if (ans[i] == -1) ans[i] = x;\n                if (ans[i] >= 0 && ans[i] != x) ans[i] = -2;\n            }\n        }\n        REP(i,q){\n            if (ans[i] < 0) cout << -1;\n            else cout << ans[i];\n            if (i < q-1) cout << \" \";\n        }\n        cout << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    //    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      // Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A,b=(*j).B,c=(*j).C;\n\twhile(a-(*i).A>=0&&b-(*i).B>=0&&c-(*i).C>=0) a-=(*i).A,b-=(*i).B,c-=(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "// tsukasa_diary's programing contest code template\n#include <bits/stdc++.h>\nusing namespace std;\n// define\n#define for_(i,a,b) for(int i=a;i<b;++i)\n#define for_rev(i,a,b) for(int i=a;i>=b;--i)\n#define allof(a) a.begin(),a.end()\n#define minit(a,b) memset(a,b,sizeof(a))\n#define size_of(a) (int)a.size()\n// typedef\ntypedef long long lint;\ntypedef double Double;\ntypedef pair<int, int> pii;\n//\ntypedef vector< int > Array;\ntypedef vector< Array > Matrix;\ntypedef vector< Double > DArray;\ntypedef vector< DArray > DMatrix;\ntypedef vector< string > SArray;\ntypedef vector< pii > PArray;\n// popcount\ninline int POPCNT(int _x) { return __builtin_popcount(_x); }\ninline int POPCNT(lint _x) { return __builtin_popcountll(_x); }\n// inf\nconst int iINF = 1L << 30;\nconst lint lINF = 1LL << 60;\n// eps\nDouble EPS = 1e-9;\n// in range\ninline bool in_range(int _v, int _mx, int _mi) { return _mi <= _v && _v < _mx; }\ninline bool in_range(Double _v, Double _mi, Double _mx) { return -EPS < _v - _mi && _v - _mx < EPS; }\ninline bool in_range(int _x, int _y, int _W, int _H) { return 0 <= _x && _x < _W && 0 <= _y && _y < _H; }\n// neighbor clockwise\nconst int DX[4] = {0,1,0,-1}, DY[4] = {-1,0,1,0};\nconst int DX_[8] = {0,1,1,1,0,-1,-1,-1}, DY_[8] = {-1,-1,0,1,1,1,0,-1};\n\nint p, q;\nstring P[11], Q[11];\n\nint indent[11];\nint ans[11];\n\nvoid solve() {\n\tminit(indent, 0);\n\t\n\tfor_(i,0,p) {\n\t\tint p_size = size_of(P[i]);\n\t\t\n\t\tfor_(j,0,p_size) {\n\t\t\tif (P[i][j] == '.') ++indent[i];\n\t\t\telse break;\n\t\t}\n\t}\n\t\n\tfill(ans, ans + 11, -2);\n\t\n\tfor_(R,1,21) for_(C,1,21) for_(S,1,21) {\n\t\tint r = 0, c = 0, s = 0;\n\t\tbool flag = true;\n\t\t\n\t\tfor_(i,0,p) {\n\t\t\tif (R * r + C * c + S * s != indent[i]) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint p_size = size_of(P[i]);\n\t\t\tfor_(j,0,p_size) {\n\t\t\t\tswitch (P[i][j]) {\n\t\t\t\tcase '(': ++r; break;\n\t\t\t\tcase ')': --r; break;\n\t\t\t\tcase '{': ++c; break;\n\t\t\t\tcase '}': --c; break;\n\t\t\t\tcase '[': ++s; break;\n\t\t\t\tcase ']': --s; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!flag) continue;\n\t\t\n\t\tr = c = s = 0;\n\t\tfor_(i,0,q) {\n\t\t\tint val = R * r + C * c + S * s;\n\t\t\t\n\t\t\tif (ans[i] == -2) ans[i] = val;\n\t\t\telse if (ans[i] != val) ans[i] = -1;\n\t\t\t\n\t\t\tint q_size = size_of(Q[i]);\n\t\t\tfor_(j,0,q_size) {\n\t\t\t\tswitch (Q[i][j]) {\n\t\t\t\tcase '(': ++r; break;\n\t\t\t\tcase ')': --r; break;\n\t\t\t\tcase '{': ++c; break;\n\t\t\t\tcase '}': --c; break;\n\t\t\t\tcase '[': ++s; break;\n\t\t\t\tcase ']': --s; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor_(i,0,q) {\n\t\tif (i < q - 1) cout << ans[i] << \" \";\n\t\telse cout << ans[i] << endl;\n\t}\n}\n\nint main() {\n\twhile (cin >> p >> q, p) {\n\t\tfor_(i,0,p) cin >> P[i];\n\t\tfor_(i,0,q) cin >> Q[i];\n\t\tsolve();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define int long long\nusing namespace std;\ntypedef pair<int, int> P;\nconst int INF = 1e9;\n\nstruct S{\n    int r, c, s, cnt;\n};\n\nsigned main(){\n    while(1){\n        int p, q;\n        cin >> p >> q;\n        if(p + q == 0) break;\n        vector<S> d(p); \n        int r = 0, c = 0, s = 0;\n        rep(i, 0, p){\n            string st;\n            cin >> st;\n            bool f = true;\n            int cnt = 0;\n            rep(j, 0, st.size()){\n                if(f){\n                    if(st[j] == '.') cnt++;\n                    else f = false;\n                }\n                if(st[j] == '(') r++;\n                if(st[j] == ')') r--;\n                if(st[j] == '[') c++;\n                if(st[j] == ']') c--;\n                if(st[j] == '{') s++;\n                if(st[j] == '}') s--;\n            }\n            d[i] = {r, c, s};\n            if(i) d[i - 1].cnt = cnt;\n        }\n        vector<S> cand;\n        rep(i, 1, 21){\n            rep(j, 1, 21){\n                rep(k, 1, 21){\n                    bool f = true;\n                    rep(l, 0, p - 1){\n                        int tmp = i * d[l].r + j * d[l].c + k * d[l].s;\n                        if(tmp != d[l].cnt){\n                            f = false;\n                            break;\n                        }\n                    }\n                    if(f){\n                        cand.push_back({i, j, k});\n                    }\n                }\n            }\n        }\n        vector<int> res(q);\n        vector<S> d2(q); \n        r = 0; c = 0; s = 0;\n        rep(i, 0, q){\n            string st;\n            cin >> st;\n            rep(j, 0, st.size()){\n                if(st[j] == '(') r++;\n                if(st[j] == ')') r--;\n                if(st[j] == '[') c++;\n                if(st[j] == ']') c--;\n                if(st[j] == '{') s++;\n                if(st[j] == '}') s--;\n            }\n            d2[i] = {r, c, s};\n        }\n        res[0] = 0;\n        rep(i, 0, q - 1){\n            set<int> st;\n            rep(j, 0, cand.size()){\n                int tmp = cand[j].r * d2[i].r + cand[j].c * d2[i].c + cand[j].s * d2[i].s;\n                st.insert(tmp);\n            }\n            if(st.size() == 1){\n                res[i + 1] = *st.begin();\n            }else{\n                res[i + 1] = -1;\n            }\n        }\n        for(int ii = 0; ii < res.size(); ii++){\n            if(ii) cout << ' ';\n            cout << res[ii];\n        }\n        cout << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#if __has_include(\"../library/Basic/Debug.hpp\")\n\n#include \"../library/Basic/Debug.hpp\"\n\n#else\n\n/* ----- Header Files ----- */\n// IO\n#include <cstdio>\n#include <iomanip>\n#include <ios>\n#include <iostream>\n\n// algorithm\n#include <algorithm>\n#include <cmath>\n#include <numeric>\n\n// container\n#include <vector>\n#include <string>\n#include <tuple>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <deque>\n\n// others\n#include <random>\n#include <limits>\n#include <functional>\n#include <ctime>\n#include <cassert>\n#include <cstdint>\n\n\n/* ----- Type Alias ----- */\nusing Int = long long int;\nusing Real = long double;\nusing String = std::string;\ntemplate <class... Ts>\nusing Tuple = std::tuple<Ts...>;\n\ntemplate <class T>\nusing Vector = std::vector<T>;\ntemplate <class T>\nusing Queue = std::queue<T>;\ntemplate <class T>\nusing Stack = std::stack<T>;\ntemplate <class T>\nusing Deque = std::deque<T>;\n\ntemplate <class T>\nusing MaxHeap = std::priority_queue<T>;\ntemplate <class T>\nusing MinHeap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <class T>\nusing Set = std::set<T>;\ntemplate <class T, class U>\nusing Map = std::map<T, U>;\n\ntemplate <class T, class... Us>\nusing Func = std::function<T(Us...)>;\n\ntemplate <class T>\nT genv(T v) { return v; }\n\ntemplate <class T, class... Ts>\nauto genv(size_t l, Ts... ts) {\n    return Vector<decltype(genv<T>(ts...))>(l, Vector<T>(ts...));\n}\n\ntemplate <class Cost = Int>\nstruct Edge {\n    Int src, dst;\n    Cost cost;\n    Edge(Int src = -1, Int dst = -1, Cost cost = 1)\n        : src(src), dst(dst), cost(cost){};\n\n    bool operator<(const Edge<Cost>& e) const { return this->cost < e.cost; }\n    bool operator>(const Edge<Cost>& e) const { return this->cost > e.cost; }\n};\n\ntemplate <class Cost = Int>\nusing Edges = Vector<Edge<Cost>>;\ntemplate <class Cost = Int>\nusing Graph = Vector<Vector<Edge<Cost>>>;\n\n#endif\n\n/* ----- Misc ----- */\nvoid fastio() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n}\n\nstruct Fout {\n    Int precision;\n    Fout(Int precision) : precision(precision) {}\n};\nstd::ostream& operator<<(std::ostream& os, const Fout& fio) {\n    os << std::fixed << std::setprecision(fio.precision);\n    return os;\n}\n\n\n/* ----- Constants ----- */\n// constexpr Int INF = std::numeric_limits<Int>::max() / 1000;\n// constexpr Int MOD = 1000000007;\n// constexpr Real PI = acos(-1);\n// constexpr Real EPS = 1e-10;\n// std::mt19937 mt(int(std::time(nullptr)));\n\nInt parse(const String& s, Vector<Int>& cnt) {\n    Int i;\n    for (i = 0; s[i] == '.'; ++i) {}\n\n    for (char c : s) {\n        switch (c) {\n            case '(':\n                ++cnt[0];\n                break;\n            case ')':\n                --cnt[0];\n                break;\n            case '{':\n                ++cnt[1];\n                break;\n            case '}':\n                --cnt[1];\n                break;\n            case '[':\n                ++cnt[2];\n                break;\n            case ']':\n                --cnt[2];\n                break;\n            default:\n                break;\n        }\n    }\n    return i;\n}\n\nbool solve() {\n    Int n, m;\n    std::cin >> n >> m;\n    if (n == 0) return false;\n\n    Vector<Tuple<Vector<Int>, Int>> lines(n);\n    Vector<Int> cnt(3, 0);\n    for (auto& l : lines) {\n        String s;\n        std::cin >> s;\n\n        Vector<Int> prev = cnt;\n        Int dots = parse(s, cnt);\n        l = std::make_tuple(prev, dots);\n    }\n\n    Vector<Vector<Int>> pos;\n    Vector<Int> x(3);\n    for (x[0] = 1; x[0] <= 20; ++x[0]) {\n        for (x[1] = 1; x[1] <= 20; ++x[1]) {\n            for (x[2] = 1; x[2] <= 20; ++x[2]) {\n                bool judge = true;\n\n                for (auto l : lines) {\n                    Vector<Int> v;\n                    Int s;\n                    std::tie(v, s) = l;\n\n                    for (Int i = 0; i < 3; ++i) s -= v[i] * x[i];\n                    if (s != 0) judge = false;\n                }\n\n                if (judge) pos.push_back(x);\n            }\n        }\n    }\n\n    fill(cnt.begin(), cnt.end(), 0);\n    for (Int i = 0; i < m; ++i) {\n        String s;\n        std::cin >> s;\n\n        Vector<Int> prev = cnt;\n        parse(s, cnt);\n\n        Set<Int> ans;\n        for (const auto& x : pos) {\n            Int sum = 0;\n            for (Int i = 0; i < 3; ++i) sum += x[i] * prev[i];\n            ans.insert(sum);\n        }\n\n        std::cout << (ans.size() == 1 ? *ans.begin() : -1) << \" \\n\"[i == m - 1];\n    }\n    return true;\n}\n\nint main() {\n    while (solve()) {}\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> vec;\ntypedef vector<vec> mat;\n\nint main(){\n    int P, Q;\n    while(cin >> P >> Q, P|Q){\n        mat A;\n        \n        string line;\n        int r = 0, c = 0, s = 0;\n        for(int i=0; i<P; i++){\n            cin >> line;\n            for(int i=0; i<line.size(); i++){\n                if(line[i] != '.'){\n                    A.push_back(vec({r, c, s, i}));\n                    break;\n                }\n            }\n            for(auto ch: line){\n                if(ch == '(') r++;\n                if(ch == ')') r--;\n                if(ch == '{') c++;\n                if(ch == '}') c--;\n                if(ch == '[') s++;\n                if(ch == ']') s--;\n            }\n        }\n        \n        r = 0, c = 0, s = 0;\n        for(int i=0; i<Q; i++){\n            cin >> line;\n            \n            int ans = -2;\n            for(int R=1; R<=20; R++){\n                for(int C=1; C<=20; C++){\n                    for(int S=1; S<=20; S++){\n                        bool is_valid = true;\n                        for(auto v: A)\n                            is_valid &= v[0]*R + v[1]*C + v[2]*S == v[3];\n                        \n                        if(is_valid){\n                            if(ans == -2)\n                                ans = r*R + c*C + s*S;\n                            if(ans != r*R + c*C + s*S)\n                                ans = -1;\n                        }\n                    }\n                }\n            }\n            cout << ans << (i==Q-1? \"\\n\": \" \");\n            \n            for(auto ch: line){\n                if(ch == '(') r++;\n                if(ch == ')') r--;\n                if(ch == '{') c++;\n                if(ch == '}') c--;\n                if(ch == '[') s++;\n                if(ch == ']') s--;\n            }\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nint x[11][3], y[11][3], b[11];\nint main() {\n\tint n, m; string S[10], T[10];\n\twhile (true) {\n\t\tcin >> n >> m; if (n == 0 && m == 0)break;\n\t\tfor (int i = 0; i < n; i++)cin >> S[i];\n\t\tfor (int i = 0; i < m; i++)cin >> T[i];\n\t\tfor (int i = 0; i < 33; i++) { x[i / 3][i % 3] = 0; y[i / 3][i % 3] = 0; }\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tx[i + 1][0] = x[i][0]; x[i + 1][1] = x[i][1]; x[i + 1][2] = x[i][2]; bool Ind = true;\n\t\t\tfor (int j = 0; j < S[i].size(); j++) {\n\t\t\t\tif (S[i][j] != '.')Ind = false; if (Ind == true)b[i] = j + 1;\n\t\t\t\tif (S[i][j] == '(')x[i + 1][0]++; if (S[i][j] == ')')x[i + 1][0]--;\n\t\t\t\tif (S[i][j] == '{')x[i + 1][1]++; if (S[i][j] == '}')x[i + 1][1]--;\n\t\t\t\tif (S[i][j] == '[')x[i + 1][2]++; if (S[i][j] == ']')x[i + 1][2]--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\ty[i + 1][0] = y[i][0]; y[i + 1][1] = y[i][1]; y[i + 1][2] = y[i][2];\n\t\t\tfor (int j = 0; j < T[i].size(); j++) {\n\t\t\t\tif (T[i][j] == '(')y[i + 1][0]++; if (T[i][j] == ')')y[i + 1][0]--;\n\t\t\t\tif (T[i][j] == '{')y[i + 1][1]++; if (T[i][j] == '}')y[i + 1][1]--;\n\t\t\t\tif (T[i][j] == '[')y[i + 1][2]++; if (T[i][j] == ']')y[i + 1][2]--;\n\t\t\t}\n\t\t}\n\t\tvector<int>res[10];\n\t\tfor (int i = 1; i <= 20; i++) {\n\t\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\t\tbool OK = true;\n\t\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\t\tif ((x[l][0] * i + x[l][1] * j + x[l][2] * k) != b[l])OK = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (OK == false)continue;\n\t\t\t\t\tfor (int l = 0; l < m; l++) {\n\t\t\t\t\t\tint ret = y[l][0] * i + y[l][1] * j + y[l][2] * k;\n\t\t\t\t\t\tfor (int o = 0; o < res[l].size(); o++) {\n\t\t\t\t\t\t\tif (res[l][o] == ret)goto E;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres[l].push_back(ret); E:;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i)cout << ' ';\n\t\t\tif (res[i].size() == 0 || res[i].size() >= 2) { cout << \"-1\"; }\n\t\t\telse { cout << res[i][0]; }\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int P, Q;\n  int r[23], c[23], s[23], indent[23];\n  int ans[23];\n  \n  while(cin >> P >> Q, P) {\n    for(int i = 0; i < P + Q; i++) {\n      string S;\n      cin >> S;\n      r[i] = count(S.begin(), S.end(), '(') - count(S.begin(), S.end(), ')');\n      c[i] = count(S.begin(), S.end(), '{') - count(S.begin(), S.end(), '}');\n      s[i] = count(S.begin(), S.end(), '[') - count(S.begin(), S.end(), ']');\n      if(i != 0) r[i] += r[i - 1], c[i] += c[i - 1], s[i] += s[i - 1];\n      for(indent[i] = 0; S[indent[i]] == '.'; ++indent[i]);\n    }\n    fill_n(ans, Q, -810);\n    ans[0] = 0;\n    for(int i = 1; i <= 20; i++) {\n      for(int j = 1; j <= 20; j++) {\n        for(int k = 1; k <= 20; k++) {\n          bool flag = true;\n          for(int l = 1; l < P; l++) {\n            flag &= i * r[l - 1] + j * c[l - 1] + k * s[l - 1] == indent[l];\n          }\n          if(!flag) continue;\n          for(int l = P; l < P + Q - 1; l++) {\n            if(ans[l - P + 1] == -810) ans[l - P + 1] = i * r[l] + j * c[l] + k * s[l];\n            else if(ans[l - P + 1] != i * r[l] + j * c[l] + k * s[l]) ans[l - P + 1] = -1;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < Q; i++) {\n      cout << ans[i] << (i + 1 == Q ? \"\\n\" : \" \");\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <string>\n#include <tuple>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nconst int MAX_RCS = 20;\n\nint calc_indent(const string& s) {\n\tfor(int i = 0; i < static_cast<int>(s.size()); ++i) {\n\t\tif(s[i] != '.') return i;\n\t}\n\n\treturn s.size();\n}\n\nvoid calc_nest(int& nest_r, int& nest_c, int& nest_s, const string& line) {\n\tfor(int i = 0; i < static_cast<int>(line.size()); ++i) {\n\t\tswitch(line[i]) {\n\t\tcase '(': ++nest_r; break;\n\t\tcase ')': --nest_r; break;\n\t\tcase '{': ++nest_c; break;\n\t\tcase '}': --nest_c; break;\n\t\tcase '[': ++nest_s; break;\n\t\tcase ']': --nest_s; break;\n\t\t}\n\t}\n}\n\nbool ok(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tfor(const pair<tuple<int, int, int>, int>&e : conditions) {\n\t\tconst tuple<int, int, int>& nest = e.first;\n\t\tconst int indent = r * get<0>(nest) + c * get<1>(nest) + s * get<2>(nest);\n\t\tif(indent != e.second) return false;\n\t}\n\n\treturn true;\n}\n\ninline int gcd(int a, int b, int c) {\n\treturn __gcd(a, __gcd(b, c));\n}\n\nint get_value(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tconst int g = max(1, gcd(r, c, s));\n\tconst tuple<int, int, int> t(r / g, c / g, s / g);\n\tif(conditions.count(t)) return g * conditions.at(t);\n\treturn -1;\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tfor(int p, q; cin >> p >> q && p;) {\n\t\tmap<tuple<int, int, int>, int> conditions;\n\t\tint nest_r = 0, nest_c = 0, nest_s = 0;\n\t\tfor(int i = 0; i < p; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int g = max(1, gcd(nest_r, nest_c, nest_s));\n\t\t\tconditions[make_tuple(nest_r / g, nest_c / g, nest_s / g)] = calc_indent(line) / g;\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tunordered_set<int> R, C, S;\n\t\tfor(int r = 1; r <= MAX_RCS; ++r) {\n\t\t\tfor(int c = 1; c <= MAX_RCS; ++c) {\n\t\t\t\tfor(int s = 1; s <= MAX_RCS; ++s) {\n\t\t\t\t\tif(ok(r, c, s, conditions)) {\n\t\t\t\t\t\tR.insert(r);\n\t\t\t\t\t\tC.insert(c);\n\t\t\t\t\t\tS.insert(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnest_r = 0, nest_c = 0, nest_s = 0;\n\t\tvector<int> ans(q);\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int indent = calc_indent(line);\n\n\t\t\tif((!nest_r || R.size() == 1) && (!nest_c || C.size() == 1) && (!nest_s || S.size() == 1)) {\n\t\t\t\tans[i] = abs(nest_r * (*R.begin()) + nest_c * (*C.begin()) + nest_s * (*S.begin()) - indent);\n\t\t\t}\n\t\t\telse if(ans[i] = get_value(nest_r, nest_c, nest_s, conditions), ans[i] != -1) {\n\t\t\t\tans[i] = abs(ans[i] - indent);\n\t\t\t}\n\t\t\telse if(S.size() == 1 && (ans[i] = get_value(nest_r, nest_c, 0, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*S.begin()) - indent);\n\t\t\t}\n\t\t\telse if(C.size() == 1 && (ans[i] = get_value(nest_r, 0, nest_s, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*C.begin()) - indent);\n\t\t\t}\n\t\t\telse if(R.size() == 1 && (ans[i] = get_value(0, nest_c, nest_s, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*R.begin()) - indent);\n\t\t\t}\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tcout << ans[i] << (i == q - 1 ? \"\\n\" : \" \");\n\t\t}\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==5) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\nusing namespace std;\ntypedef pair<int,pair<int,int> > PP;\nint p,q;\nstring P[11],Q[11];\nmap <PP,int> M;\nPP mkPP(int a,int b,int c){return make_pair(a,make_pair(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nint find(int a,int b,int c){\n  int d=gcd(a,b,c,0);\n  if(M.count(mkPP(a/d,b/d,c/d)))return M[mkPP(a/d,b/d,c/d)]*d;\n  if(a+b+c==1)return -1;\n  int res1,res2;\n  d=gcd(b,c,0,0);\n  if(a&&(res1=find(1,0,0))!=-1&&(res2=find(0,b/d,c/d))!=-1) return res1*a+res2*d;\n  d=gcd(a,c,0,0);\n  if(b&&(res1=find(0,1,0))!=-1&&(res2=find(a/d,0,c/d))!=-1) return res1*b+res2*d;\n  d=gcd(a,b,0,0);\n  if(c&&(res1=find(0,0,1))!=-1&&(res2=find(a/d,b/d,0))!=-1) return res1*c+res2*d;\n  return -1;\n}\n\nvoid mk_siki(int x[],int a){\n  int d =gcd(x[0],x[1],x[2],a);\n  a/=d;\n  for(int i=0;i<3;i++)x[i]/=d;\n  if(x[0]&&x[0]==x[1]&&x[1]==x[2])M[mkPP(1,0,0)]=M[mkPP(0,1,0)]=M[mkPP(0,0,1)]=a/3;\n  M[mkPP(x[0],x[1],x[2])]=a;\n}\n\nvoid prep(){\n  M.clear();\n  int cnt[3]={};\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<P[i].size();j++){\n      char ch=P[i][j];\n      if(ch=='.')dot++;\n      if(f&&ch!='.')f=0,mk_siki(cnt,dot);\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\nvoid out(){\n  int cnt[3]={};\n  for(int i=0;i<q;i++){\n    cout <<find(cnt[0],cnt[1],cnt[2]);\n      if(i!=q-1)cout <<\" \";\n    for(int j=0;j<Q[i].size();j++){\n      char ch=Q[i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>P[i];\n    for(int i=0;i<q;i++)cin>>Q[i];\n    prep();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define __USE_MINGW_ANSI_STDIO 0\n#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n#define int ll\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define ALL(x) x.begin(), x.end()\n#define PB push_back\n\nconst ll LLINF = (1LL<<60);\nconst int INF = (1LL<<30);\nconst int MOD = 1000000007;\n\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\ntemplate <typename T> bool IN(T a, T b, T x) { return a<=x&&x<b; }\ntemplate<typename T> T ceil(T a, T b) { return a/b + !!(a%b); }\ntemplate<class S,class T>\nostream &operator <<(ostream& out,const pair<S,T>& a){\n  out<<'('<<a.first<<','<<a.second<<')';\n  return out;\n}\ntemplate<class T>\nostream &operator <<(ostream& out,const vector<T>& a){\n  out<<'[';\n  REP(i, a.size()) {out<<a[i];if(i!=a.size()-1)out<<',';}\n  out<<']';\n  return out;\n}\n\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\n\nbool able[21][21][21];\nsigned main(void)\n{\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  while(true) {\n    int p, q;\n    cin >> p >> q;\n    if(!p) break;\n    vector<string> s(p), t(q);\n    REP(i, p) cin >> s[i];\n    REP(i, q) cin >> t[i];\n\n    VI ans(q, -2);\n    FOR(R, 1, 21) FOR(C, 1, 21) FOR(S, 1, 21) {\n      int a = 0,  b = 0, c = 0;\n      bool flag = true;\n      REP(i, p) {\n        int tmp = -1;\n        REP(j, s[i].size()) if(s[i][j]!='.') {tmp = j; break;}\n        if(R*a + C*b + S*c != tmp) {\n          flag = false;\n          break;\n        }\n        REP(j, s[i].size()) {\n          if(s[i][j] == '(') a++;\n          else if(s[i][j] == ')') a--;\n          else if(s[i][j] == '{') b++;\n          else if(s[i][j] == '}') b--;\n          else if(s[i][j] == '[') c++;\n          else if(s[i][j] == ']') c--;\n        }\n      }\n      if(!flag) continue;\n      // ここまで来てたら(R,C,S)の組を取ることが可能\n      a = b = c = 0;\n      REP(i, q) {\n        // i行目のインデントで a*R + b*C + c*S となる可能性がある\n        // i行目の答えを設定\n        if(ans[i] == -2) ans[i] = a*R + b*C + c*S;\n        // 2通り以上ある(答えが一意に決まらない)ときは-1\n        else if(ans[i] != a*R + b*C + c*S) ans[i] = -1;\n        REP(j, t[i].size()) {\n          if(t[i][j] == '(') a++;\n          else if(t[i][j] == ')') a--;\n          else if(t[i][j] == '{') b++;\n          else if(t[i][j] == '}') b--;\n          else if(t[i][j] == '[') c++;\n          else if(t[i][j] == ']') c--;\n        }\n      }\n    }\n\n    REP(i, q) cout << ans[i] << (i==q-1?\"\":\" \");\n    cout << endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\n#define all(c) (c).begin(), (c).end()\n#define loop(i,a,b) for(ll i=a; i<ll(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define mt make_tuple\n#define lb lower_bound\n#define ub upper_bound\n#ifdef DEBUG\n#define dump(...) (cerr<<#__VA_ARGS__<<\" = \"<<(DUMP(),__VA_ARGS__).str()<<\" [\"<<__LINE__<<\"]\"<<endl)\nstruct DUMP:ostringstream{template<class T>DUMP &operator,(const T&t){if(this->tellp())*this<<\", \";*this<<t;return *this;}};\n#else\n#define dump(...)\n#endif\ntemplate<class T> ostream& operator<<(ostream& os, vector<T> const& v){\n    rep(i,v.size()) os << v[i] << (i+1==(ll)v.size()?\"\":\" \");\n    return os;\n}\n\ntypedef vector<string> vs;\n\nint main(){\n    int p, q;\n    while(cin >> p >> q && p){\n        vs P(p);\n        vi v(p);\n        cin.ignore();\n        rep(i,p){\n            cin >> P[i];\n            while(v[i] < P[i].size() && P[i][v[i]] == '.') v[i]++;\n        }\n\n        vs Q(q);\n        rep(i,q) cin >> Q[i];\n\n        vi ans(q,-2);\n        loop(R,1,21) loop(C,1,21) loop(S,1,21){\n            int r = 0, c = 0, s = 0;\n            bool ok = true;\n            rep(i,p){\n                if(R*r+C*c+S*s != v[i]){\n                    ok = false;\n                    break;\n                }\n                rep(j,P[i].size()){\n                    switch (P[i][j]){\n                    case '(': r++; break;\n                    case ')': r--; break;\n                    case '{': c++; break;\n                    case '}': c--; break;\n                    case '[': s++; break;\n                    case ']': s--; break;\n                    }\n                }\n            }\n            if(!ok) continue;\n            r = 0; c = 0; s = 0;\n            rep(i,q){\n                int t = R*r+C*c+S*s;\n                if(ans[i] == -2) ans[i] = t;\n                else if(ans[i] != t) ans[i] = -1;\n                rep(j,Q[i].size()){\n                    switch (Q[i][j]){\n                    case '(': r++; break;\n                    case ')': r--; break;\n                    case '{': c++; break;\n                    case '}': c--; break;\n                    case '[': s++; break;\n                    case ']': s--; break;\n                    }\n                }\n            }\n        }\n        cout << ans << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n \nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==30) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n \nvoid UpDate(){\n  /*int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n    }*/\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\n#define f first\n#define s second\n#define R PP(1,0,0)\n#define C PP(0,1,0)\n#define S PP(0,0,1)\nusing namespace std;\ntypedef pair <int,int> P;\ntypedef pair <int,P> iP;\nint p,q;\nstring str[2][11];\nmap<iP,int> M;\niP PP(int a,int b,int c){return iP(a,P(b,c));}\niP E[]={R,C,S};\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nvoid solve(){\n  if(M.size()==2&&M.count(PP(1,1,1))) M[R]=M[C]=M[S]=M[PP(1,1,1)]/3;\n\n  map<iP,int> ::iterator i,j;\n  for(int k=0;k<3;k++){\n    for(i=M.begin();i!=M.end();i++)\n      for(j=M.begin();j!=M.end();j++){\n\tint A[]={i->f.f,i->f.s.f,i->f.s.s,i->s};\n\tint X[]={j->f.f,j->f.s.f,j->f.s.s,j->s};\n\tint D,l=A[k],r=X[k],f=1;\n\tD=gcd(l,r,0,0);\n\tfor(int m=0;m<4;m++) if((A[m]=(A[m]*(r/D)-X[m]*(l/D)))<0)f=0;\n\tD=gcd(A[0],A[1],A[2],A[3]);\n\tfor(int m=0;m<4;m++) A[m]/=D;\n\tif(f&&!M.count(PP(A[0],A[1],A[2])))M[PP(A[0],A[1],A[2])]=A[3];\n      }\n  }\n}\n\n\nint cal(int a,int b,int c){\n  int d=gcd(a,b,c,0);\n  a/=d,b/=d,c/=d;\n  if(M.count(PP(a,b,c))) return M[PP(a,b,c)]*d;\n  int fa=M.count(R),fb=M.count(C),fc=M.count(S),abc=fa+fb+fc;\n  if(abc/3||(abc/2&&!a==!fa&&!b==!fb&&!c==!fc)) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  return -1;\n}\n\nvoid in(){\n  M.clear();\n  int cnt[3]={},d;\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<str[0][i].size();j++){\n      char ch=str[0][i][j];\n      if(ch=='.')dot++;\n      else if(f)f=0,d=gcd(cnt[0],cnt[1],cnt[2],dot),M[PP(cnt[0]/d,cnt[1]/d,cnt[2]/d)]=dot/d;\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\nvoid out(){\n  int cnt[3]={},e[3];\n  for(int i=0;i<3;i++)e[i]= M.count(E[i])? M[E[i]]:-1;\n\n  for(int i=0;i<q;i++){\n    for(int j=0;j<3;j++){\n      M.erase(E[j]);\n      if(e[j]!=-1)M[E[j]]=e[j];\n    }\n    if(i)cout <<\" \";\n    cout <<cal(cnt[0],cnt[1],cnt[2]);\n    for(int j=0;j<str[1][i].size();j++){\n      char ch=str[1][i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>str[0][i];\n    for(int i=0;i<q;i++)cin>>str[1][i];\n    in();\n    solve();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\n#define f first\n#define s second\n#define R PP(1,0,0)\n#define C PP(0,1,0)\n#define S PP(0,0,1)\nusing namespace std;\ntypedef pair <int,int> P;\ntypedef pair <int,P> iP;\nint p,q;\nstring str[2][11];\nmap<iP,int> M;\niP PP(int a,int b,int c){return iP(a,P(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a=abs(a),b=abs(b),c=abs(c),d=abs(d);\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nvoid solve(){\n  if(M.size()==2&&M.count(PP(1,1,1))) M[R]=M[C]=M[S]=M[PP(1,1,1)]/3;\n\n  map<iP,int> ::iterator i,j;\n  for(int k=0;k<3;k++){\n    for(i=M.begin();i!=M.end();i++)\n      for(j=M.begin();j!=M.end();j++){\n\tint a=i->f.f, b=i->f.s.f, c=i->f.s.s,d=i->s;\n\tint x=j->f.f, y=j->f.s.f, z=j->f.s.s,w=j->s;\n\tint T[3][2]={{a,x},{b,y},{c,z}};\n\tint D,ax,by,cz,dw,l=T[k][0],r=T[k][1];\n\tD=gcd(l,r,0,0);\n\tax=(a*(r/D)-x*(l/D));\n\tby=(b*(r/D)-y*(l/D));\n\tcz=(c*(r/D)-z*(l/D));\n\tdw=(d*(r/D)-w*(l/D));\n\tD=gcd(ax,by,cz,dw);\n\tax/=D,by/=D,cz/=D,dw/=D;\n\tif(M.count(PP(ax,by,cz))||ax<0||by<0||cz<0||dw<0) continue;\n\ti=M.begin();\n\tM[PP(ax,by,cz)]=dw;\n      }\n  }\n}\n\nvoid in(){\n  M.clear();\n  int cnt[3]={},d;\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<str[0][i].size();j++){\n      char ch=str[0][i][j];\n      if(ch=='.')dot++;\n      else if(f)f=0,d=gcd(cnt[0],cnt[1],cnt[2],dot),M[PP(cnt[0]/d,cnt[1]/d,cnt[2]/d)]=dot/d;\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\n\nint cal(int a,int b,int c){\n  int d=gcd(a,b,c,0),D;\n  a/=d,b/=d,c/=d;\n  if(M.count(PP(a,b,c))) return M[PP(a,b,c)]*d;\n  int fa=M.count(R),fb=M.count(C),fc=M.count(S);\n  int abc=fa+fb+fc;\n  if(abc/3) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  if(abc/2&&(!a!=!fa||!b!=!fb||!c!=!fc)) return -1;\n  if(abc/2) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  /*\n  D=gcd(b,c,0,0);\n  if(fa&&M.count(PP(0,b/D,c/D)))return (M[R]*a+M[PP(0,b/D,c/D)]*D)*d;\n  D=gcd(a,c,0,0);\n  if(fb&&M.count(PP(a/D,0,c/D)))return (M[C]*b+M[PP(a/D,0,c/D)]*D)*d;\n  D=gcd(a,b,0,0);\n  if(fc&&M.count(PP(a/D,b/D,0)))return (M[S]*c+M[PP(a/D,0,c/D)]*D)*d;\n  */\n  return -1;\n}\n\nvoid out(){\n  int cnt[3]={},e[3]={M.count(R),M.count(C),M.count(S)};\n  e[0]= e[0]? M[R]:-1;\n  e[1]= e[1]? M[C]:-1;\n  e[2]= e[2]? M[S]:-1;\n  \n  for(int i=0;i<q;i++){\n    M.erase(R),M.erase(C),M.erase(S);\n    if(e[0]!=-1)M[R]=e[0];\n    if(e[1]!=-1)M[C]=e[1];\n    if(e[2]!=-1)M[S]=e[2];\n    cout <<cal(cnt[0],cnt[1],cnt[2]);\n    if(i!=q-1)cout <<\" \";\n    for(int j=0;j<str[1][i].size();j++){\n      char ch=str[1][i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>str[0][i];\n    for(int i=0;i<q;i++)cin>>str[1][i];\n    in();\n    solve();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  int p,q;\n  while(cin>>p>>q,p||q){\n    string b;\n    int i,j,k;\n    int r[20]={},c[20]={},s[20]={},n[20]={};\n    int v[100][100][100]={{{}}};\n    int br=-1,bc=-1,bs=-1;\n    for(i=0;i<p;i++){\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      cin >> b;\n      j=0;\n      while(b[j]=='.') j++;\n      n[i]=j;\n      v[r[i]][c[i]][s[i]]=n[i];\n      if(r[i]+c[i]+s[i]==n[i]){\n\tif(r[i]!=0) br=1;\n\tif(c[i]!=0) bc=1;\n\tif(s[i]!=0) bs=1;\n      }\n      if(r[i]*20+c[i]*20+s[i]*20==n[i]){\n\tif(r[i]!=0) br=20;\n\tif(c[i]!=0) bc=20;\n\tif(s[i]!=0) bs=20;\n      }\n\n      if(r[i]==0&&c[i]==0){\n\tif(s[i]!=0) bs=n[i]/s[i];\n      }\n      if(r[i]==0&&s[i]==0){\n\tif(c[i]!=0) bc=n[i]/c[i];\n      }\n      if(c[i]==0&&s[i]==0){\n\tif(r[i]!=0) br=n[i]/r[i];\n      }\n      \n      if(s[i]==0){\n\tif(br!=-1&&bc==-1&&r[i]!=0&&c[i]!=0){\n\t  bc=(n[i]-r[i]*br)/c[i];\n\t}\n\tif(bc!=-1&&br==-1&&r[i]!=0&&c[i]!=0){\n\t  br=(n[i]-c[i]*bc)/r[i];\n\t}\n      }\n      \n      if(c[i]==0){\n\tif(br!=-1&&bs==-1&&r[i]!=0&&s[i]!=0){\n\t  bs=(n[i]-r[i]*br)/s[i];\n\t}\n\tif(bs!=-1&&br==-1&&r[i]!=0&&s[i]!=0){\n\t  br=(n[i]-s[i]*bs)/r[i];\n\t}\n      }\n      \n      if(r[i]==0){\n\tif(bc!=-1&&bs==-1&&c[i]!=0&&s[i]!=0){\n\t  bs=(n[i]-c[i]*bc)/s[i];\n\t}\n\tif(bs!=-1&&bc==-1&&s[i]!=0&&c[i]!=0){\n\t  bc=(n[i]-s[i]*bs)/c[i];\n\t}\n      }\n      if(r[i]*c[i]*s[i]!=0){\n\tif(br==-1&&bc!=-1&&bs!=-1){\n\t  br=(n[i]-c[i]*bc-s[i]*bs)/r[i];\n\t}\n\tif(br!=-1&&bc==-1&&bs!=-1){\n\t  bc=(n[i]-r[i]*br-s[i]*bs)/c[i];\n\t}\n\tif(br!=-1&&bc!=-1&&bs==-1){\n\t  bs=(n[i]-c[i]*bc-r[i]*br)/s[i];\n\t}\n      }\n     \n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\tif(b[j]=='{') c[i+1]++;\n\tif(b[j]=='}') c[i+1]--;\n\tif(b[j]=='[') s[i+1]++;\n\tif(b[j]==']') s[i+1]--;\n      }\n      \n      //cout << n[i] << \":\" << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      //cout << br << \":\" << bc << \":\" << bs << endl; \n    }\n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    //cout << br << bc << bs << endl;\n    \n    r[0]=0;c[0]=0;s[0]=0;\n    for(i=0;i<q;i++){\n      cin >> b;\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\t  if(b[j]=='{') c[i+1]++;\n\t  if(b[j]=='}') c[i+1]--;\n\t  if(b[j]=='[') s[i+1]++;\n\t  if(b[j]==']') s[i+1]--;\n      }\n      if(i==0) cout << 0;\n      else {\n\tcout << \" \";\n\tif(r[i]==0&&c[i]==0&&s[i]==0) \n\t  cout << 0;\n\telse if(r[i]<100&&c[i]<100&&s[i]<100&&v[r[i]][c[i]][s[i]]!=0) \n\t  cout << v[r[i]][c[i]][s[i]];\n\telse if((r[i]!=0&&br==-1)||(c[i]!=0&&bc==-1)||(s[i]!=0&&bs==-1))\n\t  cout << -1;\n\telse \n\t  cout << r[i]*br+c[i]*bc+s[i]*bs ;\n\t\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define GET_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME\n#define pr(...) cerr<< GET_MACRO(__VA_ARGS__,pr8,pr7,pr6,pr5,pr4,pr3,pr2,pr1)(__VA_ARGS__) <<endl\n#define pr1(a) (#a)<<\"=\"<<(a)<<\" \"\n#define pr2(a,b) pr1(a)<<pr1(b)\n#define pr3(a,b,c) pr1(a)<<pr2(b,c)\n#define pr4(a,b,c,d) pr1(a)<<pr3(b,c,d)\n#define pr5(a,b,c,d,e) pr1(a)<<pr4(b,c,d,e)\n#define pr6(a,b,c,d,e,f) pr1(a)<<pr5(b,c,d,e,f)\n#define pr7(a,b,c,d,e,f,g) pr1(a)<<pr6(b,c,d,e,f,g)\n#define pr8(a,b,c,d,e,f,g,h) pr1(a)<<pr7(b,c,d,e,f,g,h)\n#define prArr(a) {cerr<<(#a)<<\"={\";int i=0;for(auto t:(a))cerr<<(i++?\", \":\"\")<<t;cerr<<\"}\"<<endl;}\nusing namespace std;\nusing Int = long long;\nusing _int = int;\nusing ll = long long;\nusing Double = long double;\nconst Int INF = (1LL<<60)+1e9; // ~ 1.15 * 1e18\nconst Int mod = (1e9)+7;\nconst Double EPS = 1e-8;\nconst Double PI = 6.0 * asin((Double)0.5);\nusing P = pair<Int,Int>;\ntemplate<class T> T Max(T &a,T b){return a=max(a,b);}\ntemplate<class T> T Min(T &a,T b){return a=min(a,b);}\ntemplate<class T1, class T2> ostream& operator<<(ostream& o,pair<T1,T2> p){return o<<\"(\"<<p.first<<\",\"<<p.second<<\")\";}\ntemplate<class T1, class T2, class T3> ostream& operator<<(ostream& o,tuple<T1,T2,T3> t){\n  return o<<\"(\"<<get<0>(t)<<\",\"<<get<1>(t)<<\",\"<<get<2>(t)<<\")\";}\ntemplate<class T1, class T2> istream& operator>>(istream& i,pair<T1,T2> &p){return i>>p.first>>p.second;}\ntemplate<class T> ostream& operator<<(ostream& o,vector<T> a){Int i=0;for(T t:a)o<<(i++?\" \":\"\")<<t;return o;}\ntemplate<class T> istream& operator>>(istream& i,vector<T> &a){for(T &t:a)i>>t;return i;}\n//INSERT ABOVE HERE\n\n\n\nvoid count(Int &a, Int &b, Int &c, char ch){\n  if(ch == '(') a++;\n  if(ch == ')') a--;\n  if(ch == '{') b++;\n  if(ch == '}') b--;\n  if(ch == '[') c++;\n  if(ch == ']') c--;\n  assert(a >= 0 && b >= 0 && c >= 0);\n}\n\nInt check(vector<string> &code, Int R, Int C, Int S){\n  Int a = 0, b = 0, c = 0;\n  for(string &s: code){\n    Int idx = 0;\n    Int cnt = 0;\n    while(idx < (Int)s.size() && s[idx] == '.') idx++, cnt++;\n\n    if(R * a + C * b + S * c != cnt) return 0;\n    while(idx < (Int)s.size()) count(a, b, c, s[idx++]);\n  }\n  assert(a == 0 && b == 0 && c == 0);\n  return 1;\n}\n\nusing T = tuple<Int,Int,Int>;\nmap<T, Int> calcMem(vector<string> &code){\n  Int a = 0, b = 0, c = 0;\n  map<T, Int> res;\n  for(string &s: code){\n    Int idx = 0;\n    Int cnt = 0;\n    while(idx < (Int)s.size() && s[idx] == '.') idx++, cnt++;\n    res[T(a, b, c)] = cnt;\n    while(idx < (Int)s.size()) count(a, b, c, s[idx++]);\n  }\n  return res;\n}\n\n\n\n\nsigned main(){\n  srand((unsigned)time(NULL));\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(1){\n    Int n, m;\n    cin>>n>>m;\n    if(n == 0 && m == 0) break;\n    vector<string> code1(n);\n    cin>>code1;\n    vector<string> code2(m);\n    cin>>code2;\n\n    set<Int> R, C, S;\n    for(Int i=1;i<=20;i++)\n      for(Int j=1;j<=20;j++)\n        for(Int k=1;k<=20;k++){\n          if(!check(code1, i, j, k)) continue;\n          R.insert(i);\n          C.insert(j);\n          S.insert(k);\n        }\n\n    {\n      map<T, Int> mem = calcMem(code1);\n      vector<Int> ans;\n      Int a = 0, b = 0, c = 0;\n      for(string s:code2){\n        Int num = 0;\n        Int valid = 1;\n        if(a != 0){\n          valid &= R.size() == 1;\n          if(valid) num += *R.begin() * a;\n        }\n        if(b != 0){\n          valid &= C.size() == 1;\n          if(valid) num += *C.begin() * b;\n        }\n        if(c != 0){\n          valid &= S.size() == 1;\n          if(valid) num += *S.begin() * c;\n        }\n\n        if(mem.count(T(a, b, c))) {valid = 1, num = mem[T(a, b, c)];}\n\n        Int idx = 0;\n        while(idx < (Int)s.size()) count(a, b, c, s[idx++]);\n        if(!valid) ans.push_back(-1);\n        else ans.push_back(num);\n        }\n        cout<<ans<<endl;\n      }\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n  while (1){\n    int p, q;\n    cin >> p >> q;\n    if (p == 0 && q == 0){\n      break;\n    }\n    vector<tuple<int, int, int, int>> pr(p);\n    int a = 0, b = 0, c = 0;\n    for (int i = 0; i < p; i++){\n      string S;\n      cin >> S;\n      int cnt = 0;\n      while (S[cnt] == '.'){\n        cnt++;\n      }\n      pr[i] = make_tuple(a, b, c, cnt);\n      int L = S.size();\n      for (int j = 0; j < L; j++){\n        if (S[j] == '('){\n          a++;\n        }\n        if (S[j] == ')'){\n          a--;\n        }\n        if (S[j] == '{'){\n          b++;\n        }\n        if (S[j] == '}'){\n          b--;\n        }\n        if (S[j] == '['){\n          c++;\n        }\n        if (S[j] == ']'){\n          c--;\n        }\n      }\n    }\n    vector<tuple<int, int, int>> I;\n    for (int i = 1; i <= 20; i++){\n      for (int j = 1; j <= 20; j++){\n        for (int k = 1; k <= 20; k++){\n          bool ok = true;\n          for (int l = 0; l < p; l++){\n            int A = get<0>(pr[l]);\n            int B = get<1>(pr[l]);\n            int C = get<2>(pr[l]);\n            int s = get<3>(pr[l]);\n            if (A * i + B * j + C * k != s){\n              ok = false;\n            }\n          }\n          if (ok){\n            I.push_back(make_tuple(i, j, k));\n          }\n        }\n      }\n    }\n    int cnt = I.size();\n    vector<int> ans(q);\n    int a2 = 0, b2 = 0, c2 = 0;\n    for (int i = 0; i < q; i++){\n      string s;\n      cin >> s;\n      set<int> st;\n      for (int j = 0; j < cnt; j++){\n        int R = get<0>(I[j]);\n        int C = get<1>(I[j]);\n        int S = get<2>(I[j]);\n        st.insert(a2 * R + b2 * C + c2 * S);\n      }\n      if (st.size() == 1){\n        ans[i] = *st.begin();\n      } else {\n        ans[i] = -1;\n      }\n      int L = s.size();\n      for (int j = 0; j < L; j++){\n        if (s[j] == '('){\n          a2++;\n        }\n        if (s[j] == ')'){\n          a2--;\n        }\n        if (s[j] == '{'){\n          b2++;\n        }\n        if (s[j] == '}'){\n          b2--;\n        }\n        if (s[j] == '['){\n          c2++;\n        }\n        if (s[j] == ']'){\n          c2--;\n        }\n      }\n    }\n    for (int i = 0; i < q; i++){\n      cout << ans[i];\n      if (i < q - 1){\n        cout << ' ';\n      }\n    }\n    cout << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    //    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      // Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid UpDate(){\n  \n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    for(MAP::iterator j=m.begin();j!=m.end();j++){\n      if(*i==*j) continue;\n      if((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n      int a=(*j).A,b=(*j).B,c=(*j).C;\n      while(a-(*i).A>=0&&b-(*i).B>=0&&c-(*i).C>=0) a-=(*i).A,b-=(*i).B,c-=(*i).C;\n      if(m.find(M(a,M(b,c)))!=m.end()) continue;\n      m.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nstruct N{\n  int R,C,S;\n};\n\n  N n[80000000];\n\nint main()\n{\n  int p,q;\n  int Ind[20],nr[20],nc[20],ns[20];\n  string s1[20],s2[20],s;\n  while(1){\n    cin>>p>>q;\n    if(p+q==0)break;\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=0;i<p;i++){\n      cin>>s1[i];\n      Ind[i]=0;\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n      bool flag=true;\n      for(int j=0;j<s1[i].length();j++){\n\tif(s1[i][j]!='.')flag=false;\n\tif(s1[i][j]=='.' && flag)Ind[i]++;\n\tif(s1[i][j]=='(')nr[i]++;\n\tif(s1[i][j]==')')nr[i]--;\n\tif(s1[i][j]=='{')nc[i]++;\n\tif(s1[i][j]=='}')nc[i]--;\n\tif(s1[i][j]=='[')ns[i]++;\n\tif(s1[i][j]==']')ns[i]--;\n      }\n    }\n    int a=0;\n    \n    for(int R=1;R<=20;R++){\n      for(int C=1;C<=20;C++){\n\tfor(int S=1;S<=20;S++){\n\t  bool flag=true;\n\t  for(int i=1;i<p;i++){\n\t    if(Ind[i]!=(R*(nr[i-1])+C*(nc[i-1])+S*(ns[i-1])))flag=false;\n\t  }\n\t  if(flag){\n\t    n[a].R=R;\n\t    n[a].C=C;\n\t    n[a].S=S;\n\t    a++;\n\t  }\n\t}\n      }\n    }\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=1;i<q+1;i++){\n      cin>>s2[i];\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n\tfor(int j=0;j<s2[i].length();j++){\n\t  if(s2[i][j]=='(')nr[i]++;\n\t  if(s2[i][j]==')')nr[i]--;\n\t  if(s2[i][j]=='{')nc[i]++;\n\t  if(s2[i][j]=='}')nc[i]--;\n\t  if(s2[i][j]=='[')ns[i]++;\n\t  if(s2[i][j]==']')ns[i]--;\n\t}\n      \n    }\n    for(int i=0;i<q;i++){\n      int b=-1;\n      for(int j=0;j<a;j++){\n\tif(b!=-1 && b!=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i]){\n\t  b=-1;\n\t  break;\n\t}\n\telse b=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i];\n      }\n      cout<<b;\n      if(i!=q-1)cout<<\" \";\n    }\n    cout<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nstruct N{\n  int R,C,S;\n};\n\nint main()\n{\n  int p,q;\n  int Ind[10],nr[10],nc[10],ns[10];\n  string s1[10],s2[10],s;\n  N n[80000];\n  while(1){\n    cin>>p>>q;\n    if(p+q==0)break;\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=0;i<p;i++){\n      cin>>s1[i];\n      Ind[i]=0;\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n      bool flag=true;\n      for(int j=0;j<s1[i].length();j++){\n\tif(s1[i][j]!='.')flag=false;\n\tif(s1[i][j]=='.' && flag)Ind[i]++;\n\tif(s1[i][j]=='(')nr[i]++;\n\tif(s1[i][j]==')')nr[i]--;\n\tif(s1[i][j]=='{')nc[i]++;\n\tif(s1[i][j]=='}')nc[i]--;\n\tif(s1[i][j]=='[')ns[i]++;\n\tif(s1[i][j]==']')ns[i]--;\n      }\n    }\n    int a=0;\n    \n    for(int R=1;R<=20;R++){\n      for(int C=1;C<=20;C++){\n\tfor(int S=1;S<=20;S++){\n\t  bool flag=true;\n\t  for(int i=1;i<p;i++){\n\t    if(Ind[i]!=(R*(nr[i-1])+C*(nc[i-1])+S*(ns[i-1])))flag=false;\n\t  }\n\t  if(flag){\n\t    n[a].R=R;\n\t    n[a].C=C;\n\t    n[a].S=S;\n\t    a++;\n\t  }\n\t}\n      }\n    }\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=1;i<q+1;i++){\n      cin>>s2[i];\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n\tfor(int j=0;j<s2[i].length();j++){\n\t  if(s2[i][j]=='(')nr[i]++;\n\t  if(s2[i][j]==')')nr[i]--;\n\t  if(s2[i][j]=='{')nc[i]++;\n\t  if(s2[i][j]=='}')nc[i]--;\n\t  if(s2[i][j]=='[')ns[i]++;\n\t  if(s2[i][j]==']')ns[i]--;\n\t}\n      \n    }\n    for(int i=0;i<q;i++){\n      int b=-1;\n      for(int j=0;j<a;j++){\n\tif(b!=-1 && b!=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i]){\n\t  b=-1;\n\t  break;\n\t}\n\telse b=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i];\n      }\n      cout<<b;\n      if(i!=q-1)cout<<\" \";\n    }\n    cout<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// ?????¬???????????¬??????\n\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\nusing namespace std;\n\n#define rep(i,a,n) for(int (i)=(a); (i)<(n); (i)++)\n#define repq(i,a,n) for(int (i)=(a); (i)<=(n); (i)++)\n#define repr(i,a,n) for(int (i)=(a); (i)>=(n); (i)--)\n#define int long long int\n\ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconstexpr ll INF = 1001001001001001LL;\nconstexpr ll MOD = 1000000007LL;\n\nstruct Elem {\n    int x, y, z, val;\n};\n\nsigned main() {\n    int P, Q;\n    while(cin >> P >> Q, P) {\n        vector<string> train(P+1), pat(Q+1);\n        rep(i,0,P) cin >> train[i];\n        rep(i,0,Q) cin >> pat[i];\n\n        vector<Elem> info, cand;\n        rep(i,0,P) {\n            int cnt_r = 0, cnt_c = 0, cnt_s = 0;\n            repq(j,0,i) for(auto x : train[j]) {\n                if(x == '(') cnt_r++;\n                if(x == ')') cnt_r--;\n                if(x == '{') cnt_c++;\n                if(x == '}') cnt_c--;\n                if(x == '[') cnt_s++;\n                if(x == ']') cnt_s--;\n            }\n            int val = 0;\n            while(train[i+1][val] == '.') val++;\n            info.push_back(Elem{cnt_r, cnt_c, cnt_s, val});\n        }\n\n        repq(R,1,20) repq(C,1,20) repq(S,1,20) {\n            bool ok = true;\n            for(auto e : info) {\n                int val = R*e.x + C*e.y + S*e.z - e.val;\n                if(val != 0) ok = false;\n            }\n            if(ok) cand.push_back(Elem{R, C, S, 0});\n        }\n\n        vector<int> ans(Q);\n        rep(i,0,Q-1) {\n            int cnt_r = 0, cnt_c = 0, cnt_s = 0;\n            repq(j,0,i) for(auto x : pat[j]) {\n                if(x == '(') cnt_r++;\n                if(x == ')') cnt_r--;\n                if(x == '{') cnt_c++;\n                if(x == '}') cnt_c--;\n                if(x == '[') cnt_s++;\n                if(x == ']') cnt_s--;\n            }\n\n            set<int> S;\n            for(auto e : cand) {\n                int val = cnt_r * e.x + cnt_c * e.y + cnt_s * e.z;\n                S.insert(val);\n            }\n\n            if(S.size() != 1) ans[i+1] = -1;\n            else ans[i+1] = *(S.begin());\n        }\n\n        rep(i,0,Q) {\n            if(i != 0) printf(\" \");\n            printf(\"%lld\", ans[i]);\n        }\n        cout << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <tuple>\nusing namespace std;\n\ntypedef tuple<int,int,int,int> T;\n\nint cnt(string s){\n    int ret=0;\n    for(auto c:s){\n        if(c=='.') ret++;\n        else break;\n    }\n    return ret;\n}\n\nint main(){\n    int P,Q;\n    while(cin>>P>>Q,P){\n        vector<T> V;\n        for(int i=0,r=0,c=0,s=0;i<P;i++){\n            string str;\n            cin>>str;\n            if(cnt(str))V.emplace_back(cnt(str),r,c,s);\n            // cout<<cnt(str)<<' '<<r<<' '<<c<<' '<<s<<' '<<str<<endl;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        for(auto t:V){\n            int a,b,c,d;\n            tie(a,b,c,d)=t;\n            // cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;\n        }\n        bool bR[21],bC[21],bS[21];\n        fill(bR,bR+21,false);\n        fill(bC,bC+21,false);\n        fill(bS,bS+21,false);\n        // fill(bS,bS+21,false);\n        for(int R=1;R<=20;R++){\n            for(int C=1;C<=20;C++){\n                for(int S=1;S<=20;S++){\n                    bool flag = true;\n                    for(auto t:V){\n                        int cnt,r,c,s;\n                        tie(cnt,r,c,s)=t;\n                        if(R*r+C*c+S*s!=cnt){\n                            flag=false;\n                            break;\n                        }\n                    }\n                    if(flag) bR[R]=bC[C]=bS[S]=true;\n                }\n            }\n        }\n        int R,C,S,cnt;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bR[i]){\n                R=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) R=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bC[i]){\n                C=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) C=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bS[i]){\n                S=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) S=-1;\n        // cout<<R<<' '<<C<<' '<<S<<endl;\n        for(int i=0,r=0,s=0,c=0;i<Q;i++){\n            // cout<<\"r: \"<<r<<\" s: \"<<s<<\" c: \"<<c<<endl;\n            if(i)cout<<' ';\n            if((R==-1&&r)||(S==-1&&s)||(C==-1&&c)){\n                cout<<-1;\n            }else{\n                cout<<R*r+S*s+C*c;\n            }\n            // cout<<endl;\n            string str;\n            cin>>str;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\nusing namespace std;\ntypedef pair<int,pair<int,int> > PP;\nint p,q;\nstring P[11],Q[11];\nmap <PP,int> M;\nPP mkPP(int a,int b,int c){return make_pair(a,make_pair(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nint find(int a,int b,int c){\n  int d=gcd(a,b,c,0);\n  if(M.count(mkPP(a/d,b/d,c/d)))return M[mkPP(a/d,b/d,c/d)]*d;\n  if(a+b+c==1)return -1;\n  int res1,res2;\n  d=gcd(b,c,0,0);\n  if(a&&(res1=find(1,0,0))!=-1&&(res2=find(0,b/d,c/d))!=-1) return res1*a+res2*d;\n  d=gcd(a,c,0,0);\n  if(b&&(res1=find(0,1,0))!=-1&&(res2=find(a/d,0,c/d))!=-1) return res1*b+res2*d;\n  d=gcd(a,b,0,0);\n  if(c&&(res1=find(0,0,1))!=-1&&(res2=find(a/d,b/d,0))!=-1) return res1*c+res2*d;\n  return -1;\n}\n\nvoid mk_siki(int x[],int a){\n   int d =gcd(x[0],x[1],x[2],a);\n  a/=d;\n  if(x[0]&&a%3==0&&a/3&&x[0]==x[1]&&x[1]==x[2])M[mkPP(1,0,0)]=M[mkPP(0,1,0)]=M[mkPP(0,0,1)]=a/3;\n  M[mkPP(x[0]/d,x[1]/d,x[2]/d)]=a;\n}\n\nvoid prep(){\n  M.clear();\n  int cnt[3]={};\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<P[i].size();j++){\n      char ch=P[i][j];\n      if(ch=='.')dot++;\n      if(f&&ch!='.')f=0,mk_siki(cnt,dot);\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\nvoid out(){\n  int cnt[3]={};\n  for(int i=0;i<q;i++){\n    cout <<find(cnt[0],cnt[1],cnt[2]);\n      if(i!=q-1)cout <<\" \";\n    for(int j=0;j<Q[i].size();j++){\n      char ch=Q[i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>P[i];\n    for(int i=0;i<q;i++)cin>>Q[i];\n    prep();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  int p,q;\n  while(cin>>p>>q,p||q){\n    string b;\n    int i,j,k;\n    int r[20]={},c[20]={},s[20]={},n[20]={};\n    int v[100][100][100]={{{}}};\n    int br=-1,bc=-1,bs=-1;\n    for(i=0;i<p;i++){\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      cin >> b;\n      j=0;\n      while(b[j]=='.') j++;\n      n[i]=j;\n     \n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\tif(b[j]=='{') c[i+1]++;\n\tif(b[j]=='}') c[i+1]--;\n\tif(b[j]=='[') s[i+1]++;\n\tif(b[j]==']') s[i+1]--;\n      }\n      \n      //cout << n[i] << \":\" << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      //cout << br << \":\" << bc << \":\" << bs << endl; \n    }\n    \n    bool ff=false;\n    for(i=1;i<=p;i++){\n      for(j=i+1;j<=p;j++){\n\tfor(k=j+1;k<=p;k++){\n\t  int d=r[i]*c[j]*s[k]+r[k]*c[i]*s[j]+r[j]*c[k]*s[i]\n\t    -r[k]*c[j]*s[i]-r[j]*c[i]*s[k]-r[i]*c[k]*s[j];\n\t  if(d==0) continue;\n\t  //cout << d  << \"#\";\n\t  br=n[i]*c[j]*s[k]+n[k]*c[i]*s[j]+n[j]*c[k]*s[i]\n\t    -n[k]*c[j]*s[i]-n[j]*c[i]*s[k]-n[i]*c[k]*s[j];\n\t  \n\t  bc=r[i]*n[j]*s[k]+r[k]*n[i]*s[j]+r[j]*n[k]*s[i]\n\t    -r[k]*n[j]*s[i]-r[j]*n[i]*s[k]-r[i]*n[k]*s[j];\n\t  \n\t  bs=r[i]*c[j]*n[k]+r[k]*c[i]*n[j]+r[j]*c[k]*n[i]\n\t    -r[k]*c[j]*n[i]-r[j]*c[i]*n[k]-r[i]*c[k]*n[j];\n\t  \n\t    //cout << br << \":\" << bc << \":\" << bs << endl; \n\t  br/=d;bc/=d;bs/=d;\n\t  //cout << br << \":\" << bc << \":\" << bs << endl; \n\t  \n\t  if(1<=br&&br<=20&&1<=bc&&bc<=20&&1<=bs&&bs<=20\n\t     &&r[i]*br+c[i]*bc+s[i]*bs==n[i]\n\t     &&r[j]*br+c[j]*bc+s[j]*bs==n[j]\n\t       &&r[k]*br+c[k]*bc+s[k]*bs==n[k]){\n\t    ff=true;\n\t    break;\n\t  }else{\n\t    br=-1;bc=-1;bs=-1;\n\t  }\n\t  \n\t}\n\tif(ff) break;\n      }\n      if(ff) break;\n    }\n    \n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    if(br==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  int d=r[i]*c[j]-r[j]*c[i];\n\t  if(s[i]!=0||s[j]!=0||d==0) continue;\n\t  int bbr=(n[i]*c[j]-n[j]*c[i])/d;\n\t  int bbc=(r[i]*n[j]-r[j]*n[i])/d;\n\t  if(1<=bbr&&bbr<=20&&1<=bbc&&bbc<=20){\n\t    br=bbr;\n\t    bc=bbc;\n\t  }\n\t}\n      }\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  int d=s[i]*c[j]-s[j]*c[i];\n\t  if(r[i]!=0||r[j]!=0||d==0) continue;\n\t  int bbs=(n[i]*c[j]-n[j]*c[i])/d;\n\t  int bbc=(s[i]*n[j]-s[j]*n[i])/d;\n\t  if(1<=bbs&&bbs<=20&&1<=bbc&&bbc<=20){\n\t    bs=bbs;\n\t    bc=bbc;\n\t  }\n\t}\n      }\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  int d=r[i]*s[j]-r[j]*s[i];\n\t  if(c[i]!=0||c[j]!=0||d==0) continue;\n\t  int bbr=(n[i]*s[j]-n[j]*s[i])/d;\n\t  int bbs=(r[i]*n[j]-r[j]*n[i])/d;\n\t  if(1<=bbr&&bbr<=20&&1<=bbs&&bbs<=20){\n\t    br=bbr;\n\t    bs=bbs;\n\t  }\n\t}\n      }\n    }\n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    if(br==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(c[i]*s[j]==s[i]*c[j]){\n\t    if(r[i]*c[j]-r[j]*c[i]!=0){\n\t      br=(n[i]*c[j]-n[j]*c[i])/(r[i]*c[j]-r[j]*c[i]);\n\t    }\n\t  }\n\t}\n      }\n    }\n\n    if(bc==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(r[i]*s[j]==s[i]*r[j]){\n\t    if(c[i]*r[j]-c[j]*r[i]!=0){\n\t      bc=(n[i]*r[j]-n[j]*r[i])/(c[i]*r[j]-c[j]*r[i]);\n\t    }\n\t  }\n\t}\n      }\n    }\n \n    if(bs==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(c[i]*r[j]==r[i]*c[j]){\n\t    if(s[i]*c[j]-s[j]*c[i]!=0){\n\t      bs=(n[i]*c[j]-n[j]*c[i])/(s[i]*c[j]-s[j]*c[i]);\n\t    }\n\t  }\n\t}\n      }\n    }\n    \n    \n    if(br==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(r[i]!=r[j]&&c[i]==c[j]&&s[i]==s[j])\n\t    br=(n[i]-n[j])/(r[i]-r[j]);\n\t}\n      }\n    }\n    if(bc==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(c[i]!=c[j]&&r[i]==r[j]&&s[i]==s[j])\n\t    bc=(n[i]-n[j])/(c[i]-c[j]);\n\t}\n      }\n    }\n    if(bs==-1){\n      for(i=0;i<p;i++){\n\tfor(j=i+1;j<p;j++){\n\t  if(s[i]!=s[j]&&r[i]==r[j]&&c[i]==c[j])\n\t    bs=(n[i]-n[j])/(s[i]-s[j]);\n\t}\n      }\n    }\n    \n\n    bool f=true;\n    while(f){\n      f=false;\n      for(i=0;i<p;i++){\n\tif(r[i]<100&&c[i]<100&&s[i]<100)\n\t  v[r[i]][c[i]][s[i]]=n[i];\n\tif(r[i]+c[i]+s[i]==n[i]){\n\t  if(r[i]!=0&&br==-1) {\n\t    br=1;\n\t    f=true;\n\t  }\n\t  if(c[i]!=0&&bc==-1){\n\t    bc=1;\n\t    f=true;\n\t  }\n\t  if(s[i]!=0&&bs==-1){\n\t    bs=1;\n\t      f=true;\n\t  }\n\t}\n\tif(r[i]*20+c[i]*20+s[i]*20==n[i]){\n\t  if(r[i]!=0&&br==-1) {\n\t    br=20;\n\t    f=true;\n\t  }\n\t  if(c[i]!=0&&bc==-1){\n\t    bc=20;\n\t    f=true;\n\t  }\n\t  if(s[i]!=0&&bs==-1){\n\t    bs=20;\n\t    f=true;\n\t  }\n\t}\n\t\n\tif(r[i]==0&&c[i]==0){\n\t  if(s[i]!=0&&bs==-1) {\n\t    bs=n[i]/s[i];\n\t    f=true;\n\t  }\n\t}\n\tif(r[i]==0&&s[i]==0){\n\t  if(c[i]!=0&&bc==-1){ \n\t    bc=n[i]/c[i];\n\t    f=true;\n\t  }\n\t}\n\tif(c[i]==0&&s[i]==0){\n\t  if(r[i]!=0&&br==-1){\n\t    br=n[i]/r[i];\n\t    f=true;\n\t  }\n\t}\n\tif(s[i]==0){\n\t  if(br!=-1&&bc==-1&&r[i]!=0&&c[i]!=0){\n\t    bc=(n[i]-r[i]*br)/c[i];\n\t    f=true;\n\t  }\n\t  if(bc!=-1&&br==-1&&r[i]!=0&&c[i]!=0){\n\t    br=(n[i]-c[i]*bc)/r[i];\n\t    f=true;\n\t  }\n\t}\n\t\n\tif(c[i]==0){\n\t  if(br!=-1&&bs==-1&&r[i]!=0&&s[i]!=0){\n\t    bs=(n[i]-r[i]*br)/s[i];\n\t    f=true;\n\t  }\n\t  if(bs!=-1&&br==-1&&r[i]!=0&&s[i]!=0){\n\t    br=(n[i]-s[i]*bs)/r[i];\n\t    f=true;\n\t  }\n\t}\n\t\n\tif(r[i]==0){\n\t  if(bc!=-1&&bs==-1&&c[i]!=0&&s[i]!=0){\n\t    bs=(n[i]-c[i]*bc)/s[i];\n\t    f=true;\n\t  }\n\t  if(bs!=-1&&bc==-1&&s[i]!=0&&c[i]!=0){\n\t    bc=(n[i]-s[i]*bs)/c[i];\n\t    f=true;\n\t  }\n\t}\n\tif(r[i]*c[i]*s[i]!=0){\n\t  if(br==-1&&bc!=-1&&bs!=-1){\n\t    br=(n[i]-c[i]*bc-s[i]*bs)/r[i];\n\t    f=true;\n\t  }\n\t  if(br!=-1&&bc==-1&&bs!=-1){\n\t    bc=(n[i]-r[i]*br-s[i]*bs)/c[i];\n\t    f=true;\n\t  }\n\t  if(br!=-1&&bc!=-1&&bs==-1){\n\t    bs=(n[i]-c[i]*bc-r[i]*br)/s[i];\n\t    f=true;\n\t  }\n\t}\n      }\n    }\n    \n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    //cout << br << bc << bs << endl;\n    \n    r[0]=0;c[0]=0;s[0]=0;\n    for(i=0;i<q;i++){\n      cin >> b;\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\t  if(b[j]=='{') c[i+1]++;\n\t  if(b[j]=='}') c[i+1]--;\n\t  if(b[j]=='[') s[i+1]++;\n\t  if(b[j]==']') s[i+1]--;\n      }\n      \n      //cout << endl << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      \n      if(i==0) cout << 0;\n      else {\n\tcout << \" \";\n\tif(r[i]==0&&c[i]==0&&s[i]==0) \n\t  cout << 0;\n\telse if(r[i]<100&&c[i]<100&&s[i]<100&&v[r[i]][c[i]][s[i]]!=0) \n\t  cout << v[r[i]][c[i]][s[i]];\n\telse if((r[i]!=0&&br==-1)||(c[i]!=0&&bc==-1)||(s[i]!=0&&bs==-1))\n\t  cout << -1;\n\telse \n\t  cout << r[i]*br+c[i]*bc+s[i]*bs ;\n\t\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\n#define f first\n#define s second\n#define R PP(1,0,0)\n#define C PP(0,1,0)\n#define S PP(0,0,1)\nusing namespace std;\ntypedef pair <int,int> P;\ntypedef pair <int,P> iP;\nint p,q;\nstring str[2][11];\nmap<iP,int> M;\niP PP(int a,int b,int c){return iP(a,P(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\n//???????§£???\nvoid solve(){\n  if(M.size()==2&&M.count(PP(1,1,1))) M[R]=M[C]=M[S]=M[PP(1,1,1)]/3;\n  \n  map<iP,int> ::iterator i,j;\n\n\n  for(i=M.begin();i!=M.end();i++)\n    for(j=M.begin();j!=M.end();j++){\n      int a=i->f.f, b=i->f.s.f, c=i->f.s.s,d=i->s;\n      int x=j->f.f, y=j->f.s.f, z=j->f.s.s,w=j->s;\n      if(!(!a==!x&&!b==!y&&!c==!z))continue;\n      int T[3][2]={{a,x},{b,y},{c,z}};\n      for(int k=0;k<3;k++){\n\tint D,ax,by,cz,dw,l=T[k][0],r=T[k][1];\n\tD=gcd(l,r,0,0);\n\tax=(a*(r/D)-x*(l/D));\n\tby=(b*(r/D)-y*(l/D));\n\tcz=(c*(r/D)-z*(l/D));\n\tdw=(d*(r/D)-w*(l/D));\n\tD=gcd(ax,by,cz,dw);\n\tax/=D,by/=D,cz/=D,dw/=D;\n\tif(ax>10000||by>10000||cz>10000||dw>10000)continue;\n\tif(!r||!l||ax<0||by<0||cz<0||dw<0||M.count(PP(ax,by,cz))) continue;\n\tif(!ax+!by+!cz==2&&dw%(ax+by+cz)!=0)continue;\n\t//cout <<a<<\"+\"<<b<<\"+\"<<c<<\"=\"<<d<<endl;\n\t//cout <<x<<\"+\"<<y<<\"+\"<<z<<\"=\"<<w<<endl;\n      \t//cout <<\"aft\"<<k<<\": \"<<ax<<\"+\"<<by<<\"+\"<<cz<<\"=\"<<dw<<endl;\n\ti=M.begin();\n\tM[PP(ax,by,cz)]=dw;\n      }\n    }\n}\n\nvoid in(){\n  M.clear();\n  int cnt[3]={},d;\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<str[0][i].size();j++){\n      char ch=str[0][i][j];\n      if(ch=='.')dot++;\n      else if(f)f=0,d=gcd(cnt[0],cnt[1],cnt[2],dot),M[PP(cnt[0]/d,cnt[1]/d,cnt[2]/d)]=dot/d;\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\n\n//?¨??????????\nint cal(int a,int b,int c){\n  int d=gcd(a,b,c,0),D;\n  a/=d,b/=d,c/=d;\n  if(M.count(PP(a,b,c))) return M[PP(a,b,c)]*d;\n  int fa=M.count(R),fb=M.count(C),fc=M.count(S);\n  int abc=fa+fb+fc;\n  if(abc/3) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  if(abc/2&&a&&b&&c) return -1;\n  if(abc/2) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  D=gcd(b,c,0,0);\n  if(fa&&M.count(PP(0,b/D,c/D)))return (M[R]*a+M[PP(0,b/D,c/D)]*D)*d;\n  D=gcd(a,c,0,0);\n  if(fb&&M.count(PP(a/D,0,c/D)))return (M[C]*b+M[PP(a/D,0,c/D)]*D)*d;\n  D=gcd(a,b,0,0);\n  if(fc&&M.count(PP(a/D,b/D,0)))return (M[S]*c+M[PP(a/D,0,c/D)]*D)*d;\n  return -1;\n}\n\nvoid out(){\n  int cnt[3]={},e[3]={M.count(R),M.count(C),M.count(S)};\n  e[0]= e[0]? M[R]:-1;\n  e[1]= e[1]? M[C]:-1;\n  e[2]= e[2]? M[S]:-1;\n  \n  for(int i=0;i<q;i++){\n    M.erase(R),M.erase(C),M.erase(S);\n    if(e[0]!=-1)M[R]=e[0];\n    if(e[1]!=-1)M[C]=e[1];\n    if(e[2]!=-1)M[S]=e[2];\n    cout <<cal(cnt[0],cnt[1],cnt[2]);\n    if(i!=q-1)cout <<\" \";\n    for(int j=0;j<str[1][i].size();j++){\n      char ch=str[1][i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>str[0][i];\n    for(int i=0;i<q;i++)cin>>str[1][i];\n    in();\n    solve();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n#define INF 1e9\n\nint main(){\n  int P,Q;\n  while(cin >> P >> Q, (P | Q)){\n    int ind[10];\n    int ro[10],rc[10],co[10],cc[10],so[10],sc[10];\n    int ro2[10],rc2[10],co2[10],cc2[10],so2[10],sc2[10];\n    string s;\n    for(int i = 0 ; i < 10 ; i++){\n      ind[i] = 0;\n      ro[i] = rc[i] = 0;\n      co[i] = cc[i] = 0;\n      so[i] = sc[i] = 0;\n    }\n    for(int i = 0 ; i < P ; i++){\n      cin >> s;\n      bool rd = true;\n      for(int j = 0 ; j < (int)s.size() ; j++){\n        if(s[j] == '('){ ro[i]++; }\n        if(s[j] == ')'){ rc[i]++; }\n        if(s[j] == '{'){ co[i]++; }\n        if(s[j] == '}'){ cc[i]++; }\n        if(s[j] == '['){ so[i]++; }\n        if(s[j] == ']'){ sc[i]++; }\n        if(s[j] != '.'){ rd = false; }\n        if(rd){ ind[i]++; }\n      }\n    }\n    for(int i = 1 ; i < P ; i++){\n      ro[i] += ro[i-1];\n      rc[i] += rc[i-1];\n      co[i] += co[i-1];\n      cc[i] += cc[i-1];\n      so[i] += so[i-1];\n      sc[i] += sc[i-1];\n    }\n    for(int i = 0 ; i < 10 ; i++){\n      ro2[i] = rc2[i] = 0;\n      co2[i] = cc2[i] = 0;\n      so2[i] = sc2[i] = 0;\n    }\n    for(int i = 0 ; i < Q ; i++){\n      cin >> s;\n       for(int j = 0 ; j < (int)s.size() ; j++){\n        if(s[j] == '('){ ro2[i]++; }\n        if(s[j] == ')'){ rc2[i]++; }\n        if(s[j] == '{'){ co2[i]++; }\n        if(s[j] == '}'){ cc2[i]++; }\n        if(s[j] == '['){ so2[i]++; }\n        if(s[j] == ']'){ sc2[i]++; }\n      }\n    }\n    for(int i = 1 ; i < Q ; i++){\n      ro2[i] += ro2[i-1];\n      rc2[i] += rc2[i-1];\n      co2[i] += co2[i-1];\n      cc2[i] += cc2[i-1];\n      so2[i] += so2[i-1];\n      sc2[i] += sc2[i-1];\n    }\n    vector<int> res(10,INF);\n    res[0] = 0;\n    for(int i = 1 ; i < Q ; i++){\n      vector<int> v;\n      for(int R = 1 ; R <= 20 ; R++){\n        for(int C = 1 ; C <= 20 ; C++){\n          for(int S = 1 ; S <= 20 ; S++){\n            bool ok = true;\n            for(int j = 1 ; j < P ; j++){\n              int rd = ro[j-1]-rc[j-1];\n              int cd = co[j-1]-cc[j-1];\n              int sd = so[j-1]-sc[j-1];\n              if(R*rd+C*cd+S*sd != ind[j]){\n                ok = false;\n                break;\n              }\n            }\n            if(ok){\n              int rd = ro2[i-1]-rc2[i-1];\n              int cd = co2[i-1]-cc2[i-1];\n              int sd = so2[i-1]-sc2[i-1];\n              int val = R*rd+C*cd+S*sd;\n              if(res[i] == INF){\n                res[i] = val;\n              }else{\n                if(res[i] != val && res[i] != -1){\n                  res[i] = -1;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for(int i = 0 ; i < Q ; i++){\n      if(i){ cout << \" \"; }\n      cout << res[i];\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nint gcd(int a,int b){\n  if(b==0) return a;\n  return gcd(b,a%b);\n}\nint lcm(int m,int n){\n  if((0==m)||(0==n)) return 0;\n  return (m/gcd(m,n))*n;\n}\nvoid cal();\nint R(char);\nint cnt[2][N][3],n[2],ans,X,Y,Z,fa,fb,fc;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    X=Y=Z=0;\n    cal();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      ans=-1;\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tint a=(*j).A,b=(*j).B,c=(*j).C;\n\tif(a&&b&&c&&((*j).second==3||(*j).second==60)) X=(*j).second/3,Y=X,Z=X;\n      }\n      if(fa&&fb&&fc&&X&&Y&&Z) ans=X*fa+Y*fb+Z*fc;\n      if(fa&&fb&&!fc){\n\tif(X&&Y) ans=X*fa+Y*fb;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(a&&b){\n\t      int r=gcd(a,b);\n\t      a/=r;\n\t      b/=r;\n\t      r=gcd(fa,fb);\n\t      if(fa/r==a&&fb/r==b) ans=(*j).second*(fa/a);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&fc){\n\tif(X&&Z) ans=X*fa+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(b&&c){\n\t      int r=gcd(b,c);\n\t      b/=r;\n\t      c/=r;\n\t      r=gcd(fb,fc);\n\t      if(fb/r==b&&fc/r==c) ans=(*j).second*(fb/b);\n\t    }\n\t  }\n      }\n      if(!fa&&fb&&fc){\n\tif(Y&&Z) ans=Y*fb+Z*fc;\n\telse\n\t  for(MAP::iterator j=m.begin();j!=m.end();j++){\n\t    int a=(*j).A,b=(*j).B,c=(*j).C;\n\t    if(c&&a){\n\t      int r=gcd(c,a);\n\t      c/=r;\n\t      a/=r;\n\t      r=gcd(fc,fa);\n\t      if(fc/r==c&&fa/r==a) ans=(*j).second*(fc/c);\n\t    }\n\t  }\n      }\n      if(fa&&!fb&&!fc&&X) ans=X*fa;\n      if(!fa&&fb&&!fc&&Y) ans=Y*fb;\n      if(!fa&&!fb&&fc&&Z) ans=Z*fc;\n      if(!fa&&!fb&&!fc) ans=0;\n      cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}\n\nvoid cal(){\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    for(MAP::iterator j=m.begin();j!=m.end();j++){\n      for(MAP::iterator k=m.begin();k!=m.end();k++){\n\tint r,s,t,u,x=-1,y=-1,z=-1;\n\tint a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n\tint e=(*j).A,f=(*j).B,g=(*j).C,h=(*j).second;\n\tint l=(*k).A,o=(*k).B,p=(*k).C,q=(*k).second;\n\tif(a&&e){\n\t  r=lcm(a,e);\n\t  int x1=r/a,x2=r/e;\n\t  a=a*x1-e*x2; b=b*x1-f*x2; c=c*x1-g*x2; d=d*x1-h*x2;\n\t}\n\tif(e&&l){\n\t  r=lcm(e,l);\n\t  int x1=r/e,x2=r/l;\n\t  e=e*x1-l*x2; f=f*x1-o*x2; g=g*x1-p*x2; h=h*x1-q*x2;\n\t}\n\tif(l&&a){\n\t  r=lcm(l,a);\n\t  int x1=r/l,x2=r/a;\n\t  l=l*x1-a*x2; o=o*x1-b*x2; p=p*x1-c*x2; q=q*x1-d*x2;\n\t}\n\tif(b&&f){\n\t  r=lcm(b,f);\n\t  int x1=r/b,x2=r/f;\n\t  if(a>=e) a=a*x1-e*x2,b=b*x1-f*x2,c=c*x1-g*x2,d=d*x1-h*x2;\n\t  else e=e*x2-a*x1,f=f*x2-b*x1,g=g*x2-c*x1,h=h*x2-d*x1;\n\t}\n\tif(f&&o){\n\t  r=lcm(f,o);\n\t  int x1=r/f,x2=r/o;\n\t  if(e>=l) e=e*x1-l*x2,f=f*x1-o*x2,g=g*x1-p*x2,h=h*x1-q*x2;\n\t  else l=l*x2-e*x1,o=o*x2-f*x1,p=p*x2-g*x1,q=q*x2-h*x1;\n\t}\n\tif(o&&b){\n\t  r=lcm(o,b);\n\t  int x1=r/o,x2=r/b;\n\t  if(l>=a) l=l*x1-a*x2,o=o*x1-b*x2,p=p*x1-c*x2,q=q*x1-d*x2;\n\t  else a=a*x2-l*x1,b=b*x2-o*x1,c=c*x2-p*x1,d=d*x2-q*x1;\n\t}\n\tif(!a&&!b){\n\t  if(g){\n\t    if(c){\n\t      r=lcm(c,g);\n\t      int x1=r/c,x2=r/g;\n\t      g=g*x2-c*x1,h=h*x2-d*x1;\n\t    }\n\t  }\n\t  else if(p){\n\t    if(c){\n\t      r=lcm(c,p);\n\t      int x1=r/c,x2=r/p;\n\t      p=p*x2-c*x1,q=q*x2-d*x1;\n\t    }\n\t  }\n\t}\n\tif(!e&&!f){\n\t  if(p){\n\t    if(g){\n\t      r=lcm(g,p);\n\t      int x1=r/g,x2=r/p;\n\t      p=p*x2-g*x1,q=q*x2-h*x1;\n\t    }\n\t  }\n\t  else if(c){\n\t    if(g){\n\t      r=lcm(g,c);\n\t      int x1=r/g,x2=r/c;\n\t      c=c*x2-g*x1,d=d*x2-h*x1;\n\t    }\n\t  }\n\t}\n\tif(!l&&!o){\n\t  if(c){\n\t    if(p){\n\t      r=lcm(p,c);\n\t      int x1=r/p,x2=r/c;\n\t      c=c*x2-p*x1,d=d*x2-q*x1;\n\t    }\n\t  }\n\t  else if(g){\n\t    if(p){\n\t      r=lcm(p,g);\n\t      int x1=r/p,x2=r/g;\n\t      g=g*x2-p*x1,h=h*x2-q*x1;\n\t    }\n\t  }\n\t}\n\tif(a&&!b&&!c&&!e&&!l) x=d/a;\n\tif(e&&!f&&!g&&!a&&!l) x=h/e;\n\tif(l&&!o&&!p&&!a&&!e) x=q/l;\n\tif(!a&&b&&!c&&!f&&!o) y=d/b;\n\tif(!e&&f&&!g&&!b&&!o) y=h/f;\n\tif(!l&&o&&!p&&!b&&!f) y=q/o;\n\tif(!a&&!b&&c&&!g&&!p) z=d/c;\n\tif(!e&&!f&&g&&!c&&!p) z=h/g;\n\tif(!l&&!o&&p&&!c&&!g) z=q/p;\n\tif(x!=-1) X=x;\n\tif(y!=-1) Y=y;\n\tif(z!=-1) Z=z;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n\n\nstring make(string s){\n\tint i = 0;\n\tfor(i = 0 ; i < s.size() ; i++)\n\t\tif( s[i] != '.' ) break; \n\tstring w = string(i,'.');\n\tfor( ; i < s.size() ; i++){\n\t\tif( string(\"()[]{}\").find(s[i]) != -1 ) w += s[i];\n\t}\n\treturn w;\n}\n\nint main(){\n\tint P,Q;\n\twhile( cin >> P >> Q && P){\n\t\tvector< array<int,4> > data;\n\t\tint cnt[3] = {};\n\t\tfor(int i = 0 ; i < P ; i++){\n\t\t\tstring t;\n\t\t\tcin >> t;\n\t\t\tt = make(t);\n\t\t\tarray<int,4> info;\n\t\t\tinfo[3] = count(t.begin(),t.end(),'.');\n\t\t\tfor(int j = 0 ; j < 3 ; j++)\n\t\t\t\tinfo[j] = cnt[j];\n\t\t\tdata.push_back(info);\n\t\t\tfor(int j = 0 ; j < t.size() ; j++){\n\t\t\t\tif( t[j] == '(' ) cnt[0]++;\n\t\t\t\tif( t[j] == '{' ) cnt[1]++;\n\t\t\t\tif( t[j] == '[' ) cnt[2]++;\n\t\t\t\tif( t[j] == ')' ) cnt[0]--;\n\t\t\t\tif( t[j] == '}' ) cnt[1]--;\n\t\t\t\tif( t[j] == ']' ) cnt[2]--;\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tvector< array<int,3> > cand;\n\t\tfor(int R = 1 ; R <= 20 ; R++){\n\t\t\tfor(int C = 1 ; C <= 20 ; C++){\n\t\t\t\tfor(int S = 1 ; S <= 20 ; S++){\n\t\t\t\t\tint f = 1;\n\t\t\t\t\tfor(int i = 0 ; i < data.size() ; i++)\n\t\t\t\t\t\tif( data[i][0] * R + data[i][1] * C + data[i][2] * S != data[i][3] ){\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\tif(f){\n\t\t\t\t\t\tcand.push_back(array<int,3>{R,C,S});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcnt[0] = cnt[1] = cnt[2] = 0;\n\t\tfor(int i = 0 ; i < Q ; i++){\n\t\t\tstring t;\n\t\t\tcin >> t;\n\t\t\tt = make(t);\n\t\t\tset<int> ans;\n\t\t\tfor( auto d : cand ){\n\t\t\t\tint w = d[0] * cnt[0] + d[1] * cnt[1] + d[2] * cnt[2];\n\t\t\t\tans.insert(w);\n\t\t\t}\n\t\t\tif( ans.size() != 1 ) cout << -1;\n\t\t\telse cout << *ans.begin();\n\t\t\tif(Q-1==i)cout << endl;\n\t\t\telse cout << \" \";\n\t\t\t\n\t\t\tfor(int j = 0 ; j < t.size() ; j++){\n\t\t\t\tif( t[j] == '(' ) cnt[0]++;\n\t\t\t\tif( t[j] == '{' ) cnt[1]++;\n\t\t\t\tif( t[j] == '[' ) cnt[2]++;\n\t\t\t\tif( t[j] == ')' ) cnt[0]--;\n\t\t\t\tif( t[j] == '}' ) cnt[1]--;\n\t\t\t\tif( t[j] == ']' ) cnt[2]--;\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\ntemplate<class T>\nusing Table = vector<vector<T>>;\nconst ld eps=1e-9;\n\n//// < \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\a.txt\"\n\nmap<char, int>mp;\npair<int, vector<int>>check(const string st) {\n\tint a = 0;\n\tint num = 0;\n\tvector<int>kakkos(3);\n\twhile (st[a] == '.') {\n\t\tnum++;\n\t\ta++;\n\t}\n\twhile (a != st.size()) {\n\t\tif (mp[st[a]] <= 12 && mp[st[a]] >= 10) {\n\t\t\tkakkos[mp[st[a]] - 10]++;\n\t\t}\n\t\telse if (mp[st[a]] <= 22 && mp[st[a]] >= 20) {\n\t\t\tkakkos[mp[st[a]] - 20]--;\n\t\t}\n\t\ta++;\n\t}\n\treturn make_pair(num, kakkos);\n}\n\n/* verified AOJ1327 One-Dimensional Cellular Automaton\n~Matrix~\n??????????°????????¨?????????§??????\nvector iostream cmath cassert ??????\nMatrix a(VV), b(VV);\n?????????:a*b\n????????????:l*a\n???:a+b\n???:a-b\n??¢???:a.transport()\n?????????:a.cofactor()\n?????????:a.det()\na???i???j??????:a.get(i,j)???\na???i??????j?????????k?????£??\\:set(i,j,k)\n????????????a[i][j] (a[i][j]=k)\na???x???:a.pow(x)\nn*n?????¬??????E:Matrix(n)\nm*n 0??????:Matrix(m,n)\nm*n ??¨????´????p?????????:Matrix(m,n,p)\nRow???row??§????????????(m*1??????):Matrix(row)\n**(??´??°??????)**\n????§????:a.triangulate()\n?????????:a.rank()\n?????????:a.inverse()\n//(????????????a.det()?????????a.pre_inverse()??§?±??????? ??´??°???)\n??¬??????????¶???????:a.rowReduction()\n//??£???????¬?????¨????????§£??????\n***\n*/\n\n#include <vector>\n#include <iostream>\n#include <cmath>\n#include <cassert>\nusing namespace std;\n\ntypedef int Elem;\ntypedef vector<Elem> Row;\ntypedef vector<Row> VV;\n\ntypedef long double ld;\nconst ld EPS = 1e-11;\n\nconst bool isZero(const Elem e) {\n\treturn abs(e) < EPS;\n}\n\n\nint main() {\n\tmp['('] = 10;\n\tmp['{'] = 11;\n\tmp['['] = 12;\n\tmp[')'] = 20;\n\tmp['}'] = 21;\n\tmp[']'] = 22;\n\twhile (1) {\n\t\tint P, Q; cin >> P >> Q;\n\t\tif (!P)break;\n\t\tvector<vector<int>>nowkakkos;\n\t\tvector<int>nums;\n\t\tvector<int>kakkos(3);\n\t\tfor (int i = 0; i < P; ++i) {\n\t\t\tnowkakkos.push_back(kakkos);\n\t\t\tstring st; cin >> st;\n\t\t\tauto p(check(st));\n\t\t\tnums.push_back(p.first);\n\t\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\t\tkakkos[j] += p.second[j];\n\t\t\t}\n\t\t}\n\t\t\n\t\tset<vector<int>>sets;\n\t\t{\n\t\t\tvector<int>ams(3);\n\t\t\tfor (ams[0] = 1; ams[0] <= 20; ++ams[0]) {\n\t\t\t\tfor (ams[1] = 1; ams[1] <= 20; ++ams[1]) {\n\t\t\t\t\tfor (ams[2] = 1; ams[2] <= 20; ++ams[2]) {\n\t\t\t\t\t\tbool aok = true;\n\t\t\t\t\t\tfor (int i = 0; i < P; ++i) {\n\t\t\t\t\t\t\tint sum = 0;\n\t\t\t\t\t\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\t\t\t\t\t\tsum += nowkakkos[i][j] * ams[j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (sum != nums[i])aok = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (aok)sets.emplace(ams);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tvector<int>nkakkos(3);\n\t\t\tfor (int i = 0; i < Q; ++i) {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tset<int>anss;\n\t\t\t\tfor (auto s : sets) {\n\t\t\t\t\t\tint sum = 0;\n\t\t\t\t\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\t\t\t\t\tsum += nkakkos[j] * s[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanss.emplace(sum);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (anss.size() != 1) {\n\t\t\t\t\tcout << -1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcout <<* anss.begin();\n\t\t\t\t}\n\t\t\t\tif (i != Q - 1)cout << \" \";\n\t\t\t\telse cout << endl;\n\t\t\t\t{\n\t\t\t\t\tstring st; cin >> st;\n\t\t\t\t\tauto p(check(st));\n\t\t\t\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\t\t\t\tnkakkos[j] += p.second[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<iomanip>\n#include<cmath>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\n#define int long long\n#define endl \"\\n\"\n\nconstexpr long long INF = (long long)1e18;\nconstexpr long long MOD = 1'000'000'007; \n\nstring yn(bool f){return f?\"Yes\":\"No\";}\nstring YN(bool f){return f?\"YES\":\"NO\";}\n\n\n\nsigned main(){\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\tcout<<fixed<<setprecision(10);\n\tconst int MAX = 20;\n\t\n\twhile(true){\n\t\tvector<tuple<int,int,int>> nb1, nb2;\n\t\tvector<tuple<int,int,int>> val;\n\t\tvector<int> np1, np2;\n\t\tint R = -1, C = -1, S = -1;\n\t\tint p, q;\n\t\t\n\t\tcin>>p>>q;\n\t\t\n\t\tif(!p && !q) break;\n\t\t\n\t\tnp1.resize(p+1);\n\t\tnp2.resize(q+1);\n\t\t\n\t\tnb1.resize(p+1);\n\t\tnb2.resize(q+1);\n\t\t\n\t\tfor(int i = 1; i <= p; i++){\n\t\t\tint a = 0, b = 0, c = 0, j = 0;\n\t\t\tstring s;\n\t\t\t\n\t\t\tcin>>s;\n\t\t\t\n\t\t\tfor(; j < s.size() && s[j] == '.'; j++) np1[i-1]++;\n\t\t\tfor(; j < s.size(); j++){\n\t\t\t\tif(s[j] == '(') a++;\n\t\t\t\tif(s[j] == ')') a--;\n\t\t\t\tif(s[j] == '{')\tb++;\n\t\t\t\tif(s[j] == '}') b--;\n\t\t\t\tif(s[j] == '[') c++;\n\t\t\t\tif(s[j] == ']') c--;\n\t\t\t};\n\t\t\t\n\t\t\tnb1[i] = make_tuple(get<0>(nb1[i-1]) + a, get<1>(nb1[i-1]) + b, get<2>(nb1[i-1]) + c);\n\t\t}\n\t\t\n\t\tfor(int i = 1; i <= q; i++){\n\t\t\tint a = 0, b = 0, c = 0, j = 0;\n\t\t\tstring s;\n\t\t\t\n\t\t\tcin>>s;\n\t\t\t\n\t\t\tfor(; j < s.size(); j++){\n\t\t\t\tif(s[j] == '(') a++;\n\t\t\t\tif(s[j] == ')') a--;\n\t\t\t\tif(s[j] == '{')\tb++;\n\t\t\t\tif(s[j] == '}') b--;\n\t\t\t\tif(s[j] == '[') c++;\n\t\t\t\tif(s[j] == ']') c--;\n\t\t\t};\n\t\t\t\n\t\t\tnb2[i] = make_tuple(get<0>(nb2[i-1]) + a, get<1>(nb2[i-1]) + b, get<2>(nb2[i-1]) + c);\n\t\t}\n\t\t\n\t\tfor(int i = 1; i <= MAX; i++){\n\t\t\tfor(int j = 1; j <= MAX; j++){\n\t\t\t\tfor(int k = 1; k <= MAX; k++){\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor(int l = 1; l <= p; l++){\n\t\t\t\t\t\tint np = i * get<0>(nb1[l]) + j * get<1>(nb1[l]) + k * get<2>(nb1[l]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(np1[l] != np){\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(flag) {\n\t\t\t\t\t\tval.push_back(make_tuple(i,j,k));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < q; i++){\n\t\t\tif(i) cout<<\" \";\n\t\t\t\n\t\t\tint num = -1;\n\t\t\t\n\t\t\tfor(int j = 0; j < val.size(); j++){\n\t\t\t\tint temp = \n\t\t\t\tget<0>(val[j]) * get<0>(nb2[i]) +\n\t\t\t\tget<1>(val[j]) * get<1>(nb2[i]) +\n\t\t\t\tget<2>(val[j]) * get<2>(nb2[i]);\n\t\t\t\t\n\t\t\t\tif(num == -1){\n\t\t\t\t\tnum = temp;\n\t\t\t\t} else if(temp != num){\n\t\t\t\t\tnum = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tcout<<num;\n\t\t}\n\t\t\n\t\tcout<<endl;\n\t}\n\t\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <cstring>\n#include <cmath>\n#define INF 1000000\nconst int MOD = 1e9 + 7;\nconst int dx[] = {1, -1, 0, 0};\nconst int dy[] = {0, 0, 1, -1};\nusing namespace std;\ntypedef long long ll;\nint main()\n{\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tint n, m;\n\twhile (cin >> n >> m, n | m)\n\t{\n\t\tstring master[15], str[15];\n\t\tint num[15] = {};\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tcin >> master[i];\n\t\t\tint pos = 0;\n\t\t\twhile (master[i][pos] == '.')\n\t\t\t{\n\t\t\t\tnum[i]++;\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++)\n\t\t\tcin >> str[i];\n\t\tint R1[15] = {}, C1[15] = {}, S1[15] = {};\n\t\tint R2[15] = {}, C2[15] = {}, S2[15] = {};\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tfor (int j = 0; j < master[i].size(); j++)\n\t\t\t{\n\t\t\t\tif (master[i][j] == '(')\n\t\t\t\t\tR1[i]++;\n\t\t\t\tif (master[i][j] == '{')\n\t\t\t\t\tC1[i]++;\n\t\t\t\tif (master[i][j] == '[')\n\t\t\t\t\tS1[i]++;\n\t\t\t\tif (master[i][j] == ')')\n\t\t\t\t\tR1[i]--;\n\t\t\t\tif (master[i][j] == '}')\n\t\t\t\t\tC1[i]--;\n\t\t\t\tif (master[i][j] == ']')\n\t\t\t\t\tS1[i]--;\n\t\t\t}\n\t\t\tR1[i + 1] = R1[i];\n\t\t\tC1[i + 1] = C1[i];\n\t\t\tS1[i + 1] = S1[i];\n\t\t}\n\t\tfor (int i = 0; i < m; i++)\n\t\t{\n\t\t\tfor (int j = 0; j < str[i].size(); j++)\n\t\t\t{\n\t\t\t\tif (str[i][j] == '(')\n\t\t\t\t\tR2[i]++;\n\t\t\t\tif (str[i][j] == '{')\n\t\t\t\t\tC2[i]++;\n\t\t\t\tif (str[i][j] == '[')\n\t\t\t\t\tS2[i]++;\n\t\t\t\tif (str[i][j] == ')')\n\t\t\t\t\tR2[i]--;\n\t\t\t\tif (str[i][j] == '}')\n\t\t\t\t\tC2[i]--;\n\t\t\t\tif (str[i][j] == ']')\n\t\t\t\t\tS2[i]--;\n\t\t\t}\n\t\t\tR2[i + 1] = R2[i];\n\t\t\tC2[i + 1] = C2[i];\n\t\t\tS2[i + 1] = S2[i];\n\t\t}\n\t\tvector<int> vec(15, INF);\n\t\tvec[0] = 0;\n\t\tfor (int r = 1; r <= 20; r++)\n\t\t{\n\t\t\tfor (int c = 1; c <= 20; c++)\n\t\t\t{\n\t\t\t\tfor (int s = 1; s <= 20; s++)\n\t\t\t\t{\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor(int i = 0; i < n - 1; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (R1[i] * r + C1[i] * c + S1[i] * s != num[i + 1])\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(flag)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(int i = 0; i < m - 1; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint tmp = R2[i] * r + C2[i] * c + S2[i] * s ;\n\t\t\t\t\t\t\tif(vec[i + 1] == -1 || vec[i + 1] == tmp)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tif(vec[i + 1] != tmp && vec[i + 1] != INF)\n\t\t\t\t\t\t\t\tvec[i + 1] = -1;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tvec[i + 1] = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < m; i++)\n\t\t{\n\t\t\tif(i == 0)\n\t\t\t\tcout << vec[i];\n\t\t\telse\n\t\t\t\tcout << \" \" << vec[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <tuple>\n#include <cmath>\nusing namespace std;\n\ntypedef tuple<int,int,int,int> T;\n\nint cnt(string s){\n    int ret=0;\n    for(auto c:s){\n        if(c=='.') ret++;\n        else break;\n    }\n    return ret;\n}\n\nint main(){\n    int P,Q;\n    while(cin>>P>>Q,P){\n        vector<T> V;\n        for(int i=0,r=0,c=0,s=0;i<P;i++){\n            string str;\n            cin>>str;\n            if(cnt(str))V.emplace_back(cnt(str),r,c,s);\n            // cout<<cnt(str)<<' '<<r<<' '<<c<<' '<<s<<' '<<str<<endl;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        for(auto t:V){\n            int a,b,c,d;\n            tie(a,b,c,d)=t;\n            // cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;\n        }\n        bool bR[21]={},bC[21]={},bS[21]={};\n        // fill(bS,bS+21,false);\n        for(int R=1;R<=20;R++){\n            for(int C=1;C<=20;C++){\n                for(int S=1;S<=20;S++){\n                    bool flag = true;\n                    for(auto t:V){\n                        int cnt,r,c,s;\n                        tie(cnt,r,c,s)=t;\n                        if(R*r+C*c+S*s!=cnt){\n                            flag=false;\n                            break;\n                        }\n                    }\n                    if(flag){\n                        bR[R]=bC[C]=bS[S]=true;\n                        // cout<<\"R: \"<<R<<\" C: \"<<C<<\" S: \"<<S<<endl;\n                    }\n                }\n            }\n        }\n        int R,C,S,cnt;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bR[i]){\n                R=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) R=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bC[i]){\n                C=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) C=-1;\n        cnt=0;\n        for(int i=1;i<=20;i++){\n            if(bS[i]){\n                S=i;\n                cnt++;\n            }\n        }\n        if(cnt!=1) S=-1;\n        // cout<<\"R: \"<<R<<\" C: \"<<C<<\" S: \"<<S<<endl;\n        for(int i=0,r=0,s=0,c=0;i<Q;i++){\n            // cout<<\"r: \"<<r<<\" s: \"<<s<<\" c: \"<<c<<endl;\n            if(i)cout<<' ';\n            if((R==-1&&r)||(S==-1&&s)||(C==-1&&c)){\n                int d=-1;\n                for(auto t:V){\n                    int dot,rr,cc,ss;\n                    tie(dot,rr,cc,ss)=t;\n                    //???????????????????????????\n                    if((rr*r+ss*s+cc*c)*(rr*r+ss*s+cc*c)==(rr*rr+ss*ss+cc*cc)*(r*r+s*s+c*c)){\n                        if(rr){\n                            d=round(double(r)/rr*dot);\n                        }else if(ss){\n                            d=round(double(s)/ss*dot);\n                        }else if(cc){\n                            d=round(double(c)/cc*dot);\n                        }else{\n                            d=0;\n                        }\n                        break;\n                    }\n                }\n                cout<<d;\n            }else{\n                cout<<R*r+S*s+C*c;\n            }\n            // cout<<endl;\n            string str;\n            cin>>str;\n            for(auto cc:str){\n                switch(cc){\n                    case '(':\n                        r++;\n                        break;\n                    case ')':\n                        r--;\n                        break;\n                    case '{':\n                        c++;\n                        break;\n                    case '}':\n                        c--;\n                        break;\n                    case '[':\n                        s++;\n                        break;\n                    case ']':\n                        s--;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> vec;\ntypedef vector<vec> mat;\n\nint main(){\n    int P, Q;\n    while(cin >> P >> Q, P|Q){\n        mat A;\n        \n        string line;\n        int r = 0, c = 0, s = 0;\n        for(int i=0; i<P; i++){\n            cin >> line;\n            for(int i=0; i<line.size(); i++){\n                if(line[i] != '.'){\n                    A.push_back(vec({r, c, s, i}));\n                    break;\n                }\n            }\n            for(auto ch: line){\n                if(ch == '(') r++;\n                if(ch == ')') r--;\n                if(ch == '{') c++;\n                if(ch == '}') c--;\n                if(ch == '[') s++;\n                if(ch == ']') s--;\n            }\n        }\n        \n        r = 0, c = 0, s = 0;\n        for(int i=0; i<Q; i++){\n            cin >> line;\n            \n            int ans = -2;\n            for(int R=1; R<=20; R++){\n                for(int C=1; C<=20; C++){\n                    for(int S=1; S<=20; S++){\n                        bool is_valid = true;\n                        for(auto v: A)\n                            is_valid &= v[0]*R + v[1]*C + v[2]*S == v[3];\n                        \n                        if(is_valid){\n                            if(ans == -2)\n                                ans = r*R + c*C + s*S;\n                            if(ans != r*R + c*C + s*S)\n                                ans = -1;\n                        }\n                    }\n                }\n            }\n            cout << ans << (i==Q-1? \"\\n\": \" \");\n            \n            for(auto ch: line){\n                if(ch == '(') r++;\n                if(ch == ')') r--;\n                if(ch == '{') c++;\n                if(ch == '}') c--;\n                if(ch == '[') s++;\n                if(ch == ']') s--;\n            }\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": " \n#include <bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\nusing vi=vector<int>;\nusing vvi=vector<vi>;\nusing vs=vector<string>;\nusing msi=map<string,int>;\nusing mii=map<int,int>;\nusing psi=pair<string,int>;\nusing pii=pair<int,int>;\nusing vlai=valarray<int>;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define range(i,s,n) for(int i=s;i<n;i++)\n#define all(a) a.begin(),a.end()\n#define rall(a) a.rbegin(),a.rend()\n#define fs first\n#define sc second\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define MOD ((ll)1e9+7)\nvoid get(){}template<class H,class...T>void get(H&h,T&...t){cin>>h;get(t...);}\ntemplate<class T>void geti(T&a){for(auto&_:a)cin>>_;}\ntemplate<class T>void getii(T&a){for(auto&_:a)geti(_);}\nvoid put(string d){}template<class H,class...T>void put(string d,H&h,T&...t){cout<<h;if(sizeof...(t))cout<<d;put(d,t...);}\ntemplate<class T>void puti(T&a,string d=\" \"){bool f=1;for(auto&_:a)cout<<(exchange(f,0)?\"\":d)<<_;cout<<endl;}\ntemplate<class T>void putii(T&a,string d=\" \"){for(auto&_:a)puti(_,d);}\n#define dcl(...) ll __VA_ARGS__;get(__VA_ARGS__)\n#define dclt(t,...) t __VA_ARGS__;get(__VA_ARGS__)\ntemplate<class F,class S>void add(map<F,S>&mp,F f,S s){if(mp.find(f)==mp.end())mp[f]=F();mp[f]+=s;}\n\nint main(){\n    while(1){\n        dcl(p,q);\n        if(p==0) break;\n        vector<vector<pii>> edge(p+1);\n        vector<ll> val(p+1,LLONG_MAX);\n        rep(query,q){\n            char d;\n            cin>>d;\n            if(d=='!'){\n                ll a,b,c;\n                cin>>a>>b>>c;\n                edge[a].eb(b,c);\n                edge[b].eb(a,-c);\n            }else{\n                ll a,b;\n                cin>>a>>b;\n                if(val[a]!=LLONG_MAX && val[b]!=LLONG_MAX){\n                    cout<<val[b]-val[a]<<endl;\n                }else{\n                    bool sw=val[b]!=LLONG_MAX;\n                    if(sw){\n                        swap(a,b);\n                    }\n                    bool michi=false;\n                    auto cp=val;\n                    if(val[a]==LLONG_MAX){\n                        michi=true;\n                        val=vector<ll>(p+1,LLONG_MAX);\n                        val[a]=0;\n                    }\n                    queue<int> que;\n                    que.emplace(a);\n                    \n                    vector<bool> search(p+1,false);\n                    while(!que.empty()){\n                        int index=que.front();\n                        que.pop();\n                        for(auto l:edge[index]){\n                            if(search[l.fs]==false){\n                                if(michi && cp[index]!=LLONG_MAX){\n                                    ll diff=cp[index]-val[index];\n                                    for(int i=0;i<=p;i++){\n                                        if(val[i]!=LLONG_MAX){\n                                            cp[i]=val[i]+diff;\n                                        }\n                                    }\n                                    val=cp;\n                                    if(val[b]!=LLONG_MAX){\n                                        goto fin;\n                                    }\n                                    fill(all(search),false);\n                                    queue<int> tmp;\n                                    que=tmp;\n                                    que.push(b);\n                                    val=vector<ll>(p+1,LLONG_MAX);\n                                    val[b]=0;\n                                    break;\n                                }else{\n                                    val[l.fs]=val[index]+l.sc;\n                                    que.emplace(l.fs);\n                                    search[l.fs]=true;\n                                    if(l.fs==b){\n                                        goto fin;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    fin:\n                    if(val[b]==LLONG_MAX){\n                        cout<<\"UNKNOWN\"<<endl;\n                    }else{\n                        if(sw) swap(a,b);\n                        cout<<val[b]-val[a]<<endl;\n                    }\n                }\n            }\n        }\n    }\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <stack>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdlib>\n#include <bitset>\n#include <tuple>\n#include <assert.h>\n#include <deque>\n#include <bitset>\n#include <iomanip>\n#include <limits>\n#include <chrono>\n#include <random>\n#include <array>\n#include <unordered_map>\n#include <functional>\n#include <complex>\n#include <numeric>\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n//constexpr long long MAX = 5100000;\nconstexpr long long INF = 1LL << 60;\nconstexpr int inf = 1000000007;\nconstexpr long long mod = 1000000007LL;\n//constexpr long long mod = 998244353LL;\nconst long double PI = acos((long double)(-1));\n\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef long double ld;\n\n\nvector<pair<char, ll>> RLE(string& s) {\n    ll cnt = 0;\n    vector<pair<char, ll>> res;\n    for (ll i = 0; i < s.size(); i++) {\n        cnt++;\n        if (i == (ll)s.size() - 1) {\n            res.push_back(make_pair(s[i], cnt));\n            break;\n        }\n        if (s[i] != s[i + 1]) {\n            res.push_back(make_pair(s[i], cnt));\n            cnt = 0;\n        }\n    }\n    return res;\n}\nvoid solve() {\n    int p, q; cin >> p >> q; if (p == 0 and q == 0) exit(0);\n    int b[3] = {};\n    int r[3] = {-1, -1, -1};\n    char c1[3] = { '(','{','[' };\n    char c2[3] = { ')','}',']' };\n    string s; getline(cin, s);\n    vector<bool> tw(3, false);\n    vector<vector<int>> tvv, vv;\n    for (int kkt = 0; kkt < p; kkt++) {\n        getline(cin, s);\n        auto vp = RLE(s);\n        int cnt = 0; if (vp[0].first == '.') cnt = vp[0].second;\n        tvv.push_back({ b[0], b[1], b[2], cnt });\n        for (int i = 0; i < s.size(); i++) {\n            for (int j = 0; j < 3; j++) if (s[i] == c1[j]) b[j]++;\n            for (int j = 0; j < 3; j++) if (s[i] == c2[j]) b[j]--;\n        }\n\n    }\n    for (int i = 1; i <= 20; i++) for (int j = 1; j <= 20; j++) for (int k = 1; k <= 20; k++) {\n        bool ok = true;\n        for (auto& v : tvv) {\n            if (i * v[0] + j * v[1] + k * v[2] != v[3]) { ok = false; break; }\n        }\n        if (ok) vv.push_back({ i,j,k });\n    }\n    b[0] = b[1] = b[2] = 0;\n    vector<int> res;\n    for (int i = 0; i < q; i++) {\n        getline(cin, s);\n        bool ok = true;\n        int cnt = -1;\n        for (auto& v: vv) {\n            int c = 0; for (int i = 0; i < 3; i++) c += v[i] * b[i];\n            if (cnt == -1) cnt = c;\n            else if (cnt != c) ok = false;\n        }\n        if (ok) res.emplace_back(cnt);\n        else res.emplace_back(-1);\n        for (int i = 0; i < s.size(); i++) {\n            for (int j = 0; j < 3; j++) if (s[i] == c1[j]) b[j]++;\n            for (int j = 0; j < 3; j++) if (s[i] == c2[j]) b[j]--;\n        }\n    }\n    for (int i = 0; i < res.size(); i++) cout << res[i] << \" \\n\"[i + 1 == res.size()];\n}\n\nint main()\n{\n    \n    cin.tie(nullptr);\n    ios::sync_with_stdio(false);\n    \n    int kkt = 89;\n    while (kkt) {\n        solve();\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\nint n,q;\n\nstring a[15];\nstring b[15];\n\nint con[15][4];\n\n\nvoid check(int &r,int &s,int &c){\n\tr=-1,s=-1,c=-1;\n\tfor(int i=1;i<=20;++i){\n\t\tfor(int j=1;j<=20;++j){\n\t\t\tfor(int k=1;k<=20;++k){\n\t\t\t\tbool ok=true;\n\t\t\t\trep(l,n+1) if(con[l][0]*i+con[l][1]*j+con[l][2]*k!=con[l][3]) ok=false;\n\t\t\t\tif(ok){\n\t\t\t\t\tr=(r==-1||r==i)?i:-2;\n\t\t\t\t\ts=(s==-1||s==j)?j:-2;\n\t\t\t\t\tc=(c==-1||c==k)?k:-2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\n\nint main(void){\n\twhile(cin >> n >> q){\n\t\tif(n==0) break;\n\t\trep(i,15)rep(j,4) con[i][j]=0;\n\t\trep(i,n) cin >> a[i];\n\t\trep(i,q) cin >> b[i];\n\n\t\tint r,s,c;\n\t\tint rn=0,cn=0,sn=0,indent=0;\n\t\trep(i,n){\n\t\t\tindent=0;\n\t\t\twhile(indent<a[i].size()&&a[i][indent]=='.') indent++;\n\t\t\tcon[i][3]=indent;\n\t\t\trep(j,a[i].size()){\n\t\t\t\tswitch(a[i][j]){\n\t\t\t\t\tcase '(': rn++;break;\n\t\t\t\t\tcase ')': rn--;break;\n\t\t\t\t\tcase '{': cn++;break;\n\t\t\t\t\tcase '}': cn--;break;\n\t\t\t\t\tcase '[': sn++;break;\n\t\t\t\t\tcase ']': sn--;break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcon[i+1][0]=rn,con[i+1][1]=sn,con[i+1][2]=cn;\n\t\t}\n\t\tcheck(r,s,c);\n\t\trn=0,cn=0,sn=0;\n\t\trep(i,q){\n\t\t\tint res=-1;\n\t\t\trep(j,n+1){\n\t\t\t\tif(con[j][0]==rn&&con[j][1]==sn&&con[j][2]==cn)\n\t\t\t\t\tres=con[j][3];\n\t\t\t}\n\t\t\tif(res>=0)\n\t\t\t\tcout << (i?\" \":\"\") <<  res;\n\t\t\telse if((rn>0&&r<=0)||(cn>0&&c<=0)||(sn>0&&s<=0))\n\t\t\t\tcout << (i?\" \":\"\") <<  -1;\n\t\t\telse\n\t\t\t\tcout << (i?\" \":\"\") << r*rn+s*sn+c*cn;\n\t\t\trep(j,b[i].size()){\n\t\t\t\tswitch(b[i][j]){\n\t\t\t\t\tcase '(': rn++;break;\n\t\t\t\t\tcase ')': rn--;break;\n\t\t\t\t\tcase '{': cn++;break;\n\t\t\t\t\tcase '}': cn--;break;\n\t\t\t\t\tcase '[': sn++;break;\n\t\t\t\t\tcase ']': sn--;break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nbool test(const vector<string> &vs, int r, int c, int s){\n\tint rc = 0, cc = 0, sc = 0;\n\tfor(int i = 0; i < vs.size(); ++i){\n\t\tint depth = 0, j = 0;\n\t\tfor(; j < vs[i].size() && vs[i][j] == '.'; ++j){ ++depth; }\n\t\tif(depth != r * rc + c * cc + s * sc){ return false; }\n\t\tfor(; j < vs[i].size(); ++j){\n\t\t\tswitch(vs[i][j]){\n\t\t\t\tcase '(': ++rc; break;\n\t\t\t\tcase ')': --rc; break;\n\t\t\t\tcase '{': ++cc; break;\n\t\t\t\tcase '}': --cc; break;\n\t\t\t\tcase '[': ++sc; break;\n\t\t\t\tcase ']': --sc; break;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nint main(){\n\tios_base::sync_with_stdio(false);\n\twhile(true){\n\t\tint p, q;\n\t\tcin >> p >> q;\n\t\tif(p == 0 && q == 0){ break; }\n\t\tvector<string> x(p), y(q);\n\t\tfor(int i = 0; i < p; ++i){ cin >> x[i]; }\n\t\tfor(int i = 0; i < q; ++i){ cin >> y[i]; }\n\t\tvector<int> r, c, s;\n\t\tfor(int i = 1; i <= 20; ++i){\n\t\t\tfor(int j = 1; j <= 20; ++j){\n\t\t\t\tfor(int k = 1; k <= 20; ++k){\n\t\t\t\t\tif(test(x, i, j, k)){\n\t\t\t\t\t\tr.push_back(i);\n\t\t\t\t\t\tc.push_back(j);\n\t\t\t\t\t\ts.push_back(k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint rc = 0, cc = 0, sc = 0;\n\t\tfor(int i = 0; i < q; ++i){\n\t\t\tif(i != 0){ cout << \" \"; }\n\t\t\tint depth = -1;\n\t\t\tfor(int j = 0; j < r.size(); ++j){\n\t\t\t\tconst int t = rc * r[j] + cc * c[j] + sc * s[j];\n\t\t\t\tif(j == 0){ depth = t; }\n\t\t\t\tif(depth != t){ depth = -1; }\n\t\t\t}\n\t\t\tcout << depth;\n\t\t\tfor(int j = 0; j < y[i].size(); ++j){\n\t\t\t\tswitch(y[i][j]){\n\t\t\t\t\tcase '(': ++rc; break;\n\t\t\t\t\tcase ')': --rc; break;\n\t\t\t\t\tcase '{': ++cc; break;\n\t\t\t\t\tcase '}': --cc; break;\n\t\t\t\t\tcase '[': ++sc; break;\n\t\t\t\t\tcase ']': --sc; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define lp(i,n) for(int i=0;i<n;i++)\n\n\nsigned main(){\n  while(1){\n    int p,q;\n    cin>>p>>q;\n    if(p==0&&q==0) break;\n    vector<vector<int> > lis;\n    int rc=0,cc=0,sc=0;\n    lp(i,p){\n      string s;\n      cin>>s;\n      int countdot=0;\n      if(i!=0){\n\tlp(i,s.size()){\n\t  if(s[i]=='.') countdot++;\n\t  else break;\n\t}\n\tvector<int> hoge={rc,cc,sc,countdot};\n\tlis.push_back(hoge);\n      }\n      lp(i,s.size()){\n\tif(s[i]=='(') rc++;\n\tif(s[i]==')') rc--;\n\tif(s[i]=='{') cc++;\n\tif(s[i]=='}') cc--;\n\tif(s[i]=='[') sc++;\n\tif(s[i]==']') sc--;\n      }\n    }\n    vector<vector<int> > can;\n    lp(i,21){\n      if(i==0) continue;\n      lp(j,21){\n\tif(j==0) continue;\n\tlp(k,21){\n\t  if(k==0) continue;\n\t  int stat=0;\n\t  lp(l,lis.size()){\n\t    if(i*lis[l][0]+j*lis[l][1]+k*lis[l][2]==lis[l][3]) 1;\n\t    else {\n\t      stat=1;\n\t      break;\n\t    }\n\t  }\n\t  if(stat==0){\n\t    vector<int> hoge={i,j,k};\n\t    can.push_back(hoge);\n\t  }\n\t}\n      }\n    }\n    int r=-1,c=-1,ss=-1;\n    lp(i,can.size()){\n      if(i==0){\n\tr=can[i][0];\n\tc=can[i][1];\n\tss=can[i][2];\n      }\n      else{\n\tif(r!=can[i][0]) r=-1;\n\tif(c!=can[i][1]) c=-1;\n\tif(ss!=can[i][2]) ss=-1;\n      }\n    }\n    rc=0;cc=0;sc=0;\n\n    \n    lp(i,q){\n      string s;\n      cin>>s;\n      int ans=0;\n      if(rc==0&&cc==0&&sc==0) cout<<0;\n      else {\n\tint stat=0;\n\tlp(j,lis.size()){\n\t  if(rc==lis[j][0]&&cc==lis[j][1]&&sc==lis[j][2]){\n\t    cout<<lis[j][3];\n\t    stat=1;\n\t    break;\n\t  }\n\t}\n\tif(stat==0){\n\t  if(rc!=0&&r==-1) ans=-1;\n\t  else if(cc!=0&&c==-1) ans=-1;\n\t  else if(sc!=0&&ss==-1) ans=-1;\n\t  else ans=rc*r+cc*c+sc*ss;\n\t  cout<<ans;\n\t}\n      }\n      if(i!=q-1) cout<<\" \";\n      lp(i,s.size()){\n\tif(s[i]=='(') rc++;\n\tif(s[i]==')') rc--;\n\tif(s[i]=='{') cc++;\n\tif(s[i]=='}') cc--;\n\tif(s[i]=='[') sc++;\n\tif(s[i]==']') sc--;\n      }\n    }\n    cout<<endl;\n  }\n\n  return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\n//FILE *in = freopen(\"input.txt\", \"r\", stdin);\n//FILE *out = freopen(\"output.txt\", \"w\", stdout);\n\nint n, m;\nchar str1[1000];\n\nint ind[15][3];\nint indent[15];\n\nint rind[15][3];\n\nint res[15];\n\nint R, C, S;\n\nvoid input() {\n\tfor(int i = 0; i < m; i++) {\n\t\tres[i] = -2;\n\t}\n\t\n\tind[0][0] = ind[0][1] = ind[0][2] = 0;\n\tfor(int i = 0; i < n; i++) {\n\t\tgets(str1);\n\t\tint cnt = 0;\n\t\tint j;\n\t\tfor(j = 0; str1[j]; j++) {\n\t\t\tif(str1[j] == '.') {\n\t\t\t\t++cnt;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tindent[i] = cnt;\n\t\tfor(;str1[j];j++) {\n\t\t\tswitch(str1[j]) {\n\t\t\tcase '(':\n\t\t\t\t++ind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\t++ind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\t++ind[i][2];\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\t--ind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\t--ind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase ']' :\n\t\t\t\t--ind[i][2];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tind[i+1][0] = ind[i][0];\n\t\tind[i+1][1] = ind[i][1];\n\t\tind[i+1][2] = ind[i][2];\n\t}\n\n\trind[0][0] = rind[0][1] = rind[0][2] = 0;\n\tfor(int i = 0; i < m; i++) {\n\t\tgets(str1);\n\t\tfor(int j = 0; str1[j]; j++) {\n\t\t\tswitch(str1[j]) {\n\t\t\tcase '(':\n\t\t\t\t++rind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\t++rind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\t++rind[i][2];\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\t--rind[i][0];\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\t--rind[i][1];\n\t\t\t\tbreak;\n\t\t\tcase ']' :\n\t\t\t\t--rind[i][2];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\trind[i+1][0] = rind[i][0];\n\t\trind[i+1][1] = rind[i][1];\n\t\trind[i+1][2] = rind[i][2];\n\t}\n}\n\nvoid process2() {\n\tfor(int i = 0; i < m - 1; i++) {\n\t\tint r = R*rind[i][0];\n\t\tint c = C*rind[i][1];\n\t\tint s = S*rind[i][2];\n\n\t\tif(r < 0 || c < 0 || s < 0) {\n\t\t\tres[i] = -1;\n\t\t}\n\t\telse {\n\t\t\tif(res[i] != -2 && res[i] != r + c + s) {\n\t\t\t\tres[i] = -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres[i] = r + c + s;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid process() {\n\tbool rf = false, cf = false, sf = false;\n\tfor(int i = 0; i < n - 1; i++) {\n\t\tif(ind[i][0])rf = true;\n\t\tif(ind[i][1])cf = true;\n\t\tif(ind[i][2])sf = true;\n\t}\n\tfor(R = rf ? 1 : -1; R <= 20; R++) {\n\t\tif(R == 0) continue;\n\t\tfor(C = cf ? 1 : -1; C <= 20; C++) {\n\t\t\tif(C == 0) continue;\n\t\t\tfor(S = sf ? 1 : -1; S <= 20; S++) {\n\t\t\t\tif(S == 0) continue;\n\t\t\t\tint i;\n\t\t\t\tfor(i = 0 ; i < n - 1; i++) {\n\t\t\t\t\tif(indent[i+1] != R*ind[i][0] + C*ind[i][1] + S*ind[i][2])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(i == n - 1) {\n\t\t\t\t\tprocess2();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid output() {\n\tprintf(\"0 \");\n\tfor(int i = 0; i < m - 1; i++) {\n\t\tprintf(\"%d \", res[i]);\n\t}\n\tprintf(\"\\n\");\n}\n\nint main() {\n\twhile(true){\n\t\tscanf(\"%d%d\\n\", &n, &m);\n\t\tif (n == 0 && m == 0) break;\n\t\tR = -1;\n\t\tC = -1;\n\t\tS = -1;\n\t\tinput();\n\t\tprocess();\n\t\toutput();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\n\nint p[2];\nstring s[2][10];\nint ans[10],par[2][11][3],sp[10],pos,tmp;\nbool f;\n\nint main(){\n  while(cin >> p[0] >> p[1], p[0]||p[1]){\n    for(int i=0;i<p[0];i++)cin >> s[0][i];\n    for(int i=0;i<p[1];i++){\n      cin >> s[1][i];\n      ans[i] = -1;\n    }\n\n    for(int i=0;i<2;i++){\n      for(int j=0;j<3;j++)par[i][0][j] = 0;\n      for(int j=0;j<p[i];j++){\n\tpos = 0;\n\tif(!i){\n\t  while(pos<s[i][j].size() && s[i][j][pos] == '.')pos++;\n\t  sp[j] = pos;\n\t}\n\tfor(int k=0;k<3;k++)par[i][j+1][k] = par[i][j][k];\n\twhile(pos<s[i][j].size()){\n\t  if(s[i][j][pos] == '(')par[i][j+1][0]++;\n\t  else if(s[i][j][pos] == '{')par[i][j+1][1]++;\n\t  else if(s[i][j][pos] == '[')par[i][j+1][2]++;\n\t  else if(s[i][j][pos] == ')')par[i][j+1][0]--;\n\t  else if(s[i][j][pos] == '}')par[i][j+1][1]--;\n\t  else if(s[i][j][pos] == ']')par[i][j+1][2]--;\n\t  pos++;\n\t}\n      }\n    }\n    \n    for(int R=1;R<=20;R++){\n      for(int C=1;C<=20;C++){\n\tfor(int S=1;S<=20;S++){\n\t  f = true;\n\t  for(int i=0;i<p[0];i++){\n\t    if(R*par[0][i][0] + C*par[0][i][1] + S*par[0][i][2] != sp[i]){\n\t      f = false; break;\n\t    }\n\t  }\n\t  if(!f)continue;\n\t  \n\t  for(int i=0;i<p[1];i++){\n\t    tmp = R*par[1][i][0] + C*par[1][i][1] + S*par[1][i][2];\n\t    if(ans[i] == -1)ans[i] = tmp;\n\t    else if(ans[i] != tmp)ans[i] = -2;\n\t  }\n\t}\n      }\n    }\n\n    for(int i=0;i<p[1];i++)\n      cout << ((ans[i]<0)?-1:ans[i]) << ((i==p[1]-1)?\"\\n\":\" \");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==10) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <queue>\n#include <cstdio>\n#include <ctime>\n#include <assert.h>\n#include <chrono>\n#include <random>\n#include <numeric>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\nusing namespace std;\ntypedef long long int ll;\ntypedef unsigned long long ull;\n\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n\treturn (ull)rng() % B;\n}\n\nint main(){\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\tint p,q;\n\twhile(cin >> p >> q,p){\n\t\tvector<pair<pair<int,int>,pair<int,int>>> vv(p);\n\t\tint x=0,y=0,z=0;\n\t\tfor(int i=0;i<p;i++){\n\t\t\tstring s; cin >> s;\n\t\t\tint id=0;\n\t\t\twhile(id<s.size()&&s[id]=='.')id++;\n\t\t\tvv[i]=make_pair(make_pair(x,y),make_pair(z,id));\n\t\t\tfor(char c:s){\n\t\t\t\tif(c=='(')x++;\n\t\t\t\tif(c==')')x--;\n\t\t\t\tif(c=='{')y++;\n\t\t\t\tif(c=='}')y--;\n\t\t\t\tif(c=='[')z++;\n\t\t\t\tif(c==']')z--;\n\t\t\t}\n\t\t}\n\t\tvector<pair<int,pair<int,int>>> v;\n\t\tfor(int i=1;i<=20;i++){\n\t\t\tfor(int j=1;j<=20;j++){\n\t\t\t\tfor(int k=1;k<=20;k++){\n\t\t\t\t\tbool ok=1;\n\t\t\t\t\tfor(auto p:vv){\n\t\t\t\t\t\tif(!ok)break;\n\t\t\t\t\t\tif(p.first.first*i+p.first.second*j+p.second.first*k!=p.second.second)ok=0;\n\t\t\t\t\t}\n\t\t\t\t\tif(ok){\n\t\t\t\t\t\tv.push_back(make_pair(i,make_pair(j,k)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx=0,y=0,z=0;\n\t\tfor(int i=0;i<q;i++){\n\t\t\tif(i)printf(\" \");\n\t\t\tstring s; cin >> s;\n\t\t\tset<int> st;\n\t\t\tfor(auto p:v){\n\t\t\t\tst.insert(x*p.first+y*p.second.first+z*p.second.second);\n\t\t\t}\n\t\t\tif(st.size()==1){\n\t\t\t\tprintf(\"%d\",*st.begin());\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"-1\");\n\t\t\t}\n\t\t\tfor(char c:s){\n\t\t\t\tif(c=='(')x++;\n\t\t\t\tif(c==')')x--;\n\t\t\t\tif(c=='{')y++;\n\t\t\t\tif(c=='}')y--;\n\t\t\t\tif(c=='[')z++;\n\t\t\t\tif(c==']')z--;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<cctype>\n#include<math.h>\n#include<string>\n#include<string.h>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<utility>\n#include<set>\n#include<map>\n#include<stdlib.h>\n#include<iomanip>\n\nusing namespace std;\n\n#define ll long long\n#define ld long double\n#define EPS 0.0000000001\n#define INF 1e9\n#define MOD 1000000007\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define loop(i,a,n) for(int i=a;i<(n);i++)\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\n\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nint gcd(int a, int b){\n    if(b==0) return a;\n    return gcd(b,a%b);\n}\nint lcm(int a, int b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(void) {\n    int p,q;\n    string t = \"(){}[]\";\n    while(cin >> p >> q, p){\n        vi v(6,0);\n        vector<vi> x(p,vi(4));\n        rep(i,p){\n            string in;\n            cin >> in;\n            rep(j,3) x[i][j] = v[2*j] - v[2*j+1];\n            int j = 0;\n            while(in[j] == '.')j++;\n            x[i][3] = j;\n            //rep(j,4)cout << \" \" << x[i][j];cout << endl;\n            rep(j,in.size())rep(k,6)if(in[j] == t[k])v[k]++;\n        }\n        vector<vi> par(3);\n        loop(r,1,21)loop(c,1,21)loop(s,1,21){\n            bool b = true;\n            rep(i,p){\n                if(r*x[i][0] + c*x[i][1] + s*x[i][2] != x[i][3]) b = false;\n            }\n            if(b){\n                //cout << r << \" \" << c << \" \" << s << endl;\n                par[0].push_back(r);\n                par[1].push_back(c);\n                par[2].push_back(s);\n            }\n        }\n        rep(i,3){\n            sort(all(par[i]));\n            par[i].erase(unique(all(par[i])),par[i].end());\n            //cout << i << endl;\n            //rep(j,par[i].size())cout << \" \" << par[i][j];cout << endl;\n            if(par[i].size() > 1)par[i][0] = -10000;\n            else if(par[i].size() == 0)par[i].push_back(-10000);\n        }\n        v = vi(6,0);\n        rep(i,q){\n            int ans = 0;\n            rep(j,3)ans += par[j][0]*(v[2*j] - v[2*j+1]);\n            if(ans < 0){\n                bool c = true;\n                rep(j,p){\n                    int cnt = 0;\n                    rep(k,3)if(x[j][k] == v[2*k] - v[2*k+1])cnt++;\n                    if(cnt == 3) ans = x[j][3];\n                }\n                if(ans < 0)ans = -1;\n            }\n            cout << ans;\n            if(i < q-1) cout << \" \";\n            else cout << endl;\n            string in;\n            cin >> in;\n            rep(j,in.size())rep(k,6)if(in[j] == t[k])v[k]++;\n        }\n\n\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\nusing namespace std;\ntypedef pair<int,pair<int,int> > PP;\nint p,q;\nstring P[11],Q[11];\nmap <PP,int> M;\nPP mkPP(int a,int b,int c){return make_pair(a,make_pair(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nint find(int a,int b,int c){\n  int d=gcd(a,b,c,0);\n  if(M.count(mkPP(a/d,b/d,c/d)))return M[mkPP(a/d,b/d,c/d)]*d;\n  if(a+b+c==1)return -1;\n  int res1,res2;\n  d=gcd(b,c,0,0);\n  if(a&&(res1=find(1,0,0))!=-1&&(res2=find(0,b/d,c/d))!=-1) return res1*a+res2*d;\n  d=gcd(a,c,0,0);\n  if(b&&(res1=find(0,1,0))!=-1&&(res2=find(a/d,0,c/d))!=-1) return res1*b+res2*d;\n  d=gcd(a,b,0,0);\n  if(c&&(res1=find(0,0,1))!=-1&&(res2=find(a/d,b/d,0))!=-1) return res1*c+res2*d;\n  return -1;\n}\n\nvoid mk_siki(int x[],int a){\n  cout << x[0]<<\" \"<<x[1]<<\" \"<<x[2]<<\" \"<<a<<endl;\n  int d =gcd(x[0],x[1],x[2],a);\n  a/=d;\n  if(x[0]&&a%3==0&&a/3&&x[0]==x[1]&&x[1]==x[2])M[mkPP(1,0,0)]=M[mkPP(0,1,0)]=M[mkPP(0,0,1)]=a/3;\n  M[mkPP(x[0]/d,x[1]/d,x[2]/d)]=a;\n}\n\nvoid prep(){\n  M.clear();\n  int cnt[3]={};\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<P[i].size();j++){\n      char ch=P[i][j];\n      if(ch=='.')dot++;\n      if(f&&ch!='.')f=0,mk_siki(cnt,dot);\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\nvoid out(){\n  int cnt[3]={};\n  for(int i=0;i<q;i++){\n    cout <<find(cnt[0],cnt[1],cnt[2]);\n      if(i!=q-1)cout <<\" \";\n    for(int j=0;j<Q[i].size();j++){\n      char ch=Q[i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>P[i];\n    for(int i=0;i<q;i++)cin>>Q[i];\n    prep();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\ntypedef pair<int,int>pint;\ntypedef vector<int>vint;\ntypedef vector<pint>vpint;\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(v) (v).begin(),(v).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define reps(i,f,n) for(int i=(f);i<(n);i++)\n#define each(it,v) for(__typeof((v).begin()) it=(v).begin();it!=(v).end();it++)\ntemplate<class T,class U>inline void chmin(T &t,U f){if(t>f)t=f;}\ntemplate<class T,class U>inline void chmax(T &t,U f){if(t<f)t=f;}\n\nsigned main(){\n    int p,q;\n    while(cin>>p>>q,p||q){\n        vector<string>P(p),Q(q);\n        rep(i,p)cin>>P[i];\n        rep(i,q)cin>>Q[i];\n\n        vector<tuple<int,int,int>>vec;\n\n        for(int R=1;R<=20;R++){\n            for(int C=1;C<=20;C++){\n                for(int S=1;S<=20;S++){\n                    int a=0,b=0,c=0;\n                    bool ok=true;\n                    rep(i,p){\n                        int cnt=0;\n                        while(cnt<P[i].size()&&P[i][cnt]=='.')cnt++;\n                        if(cnt!=R*a+C*b+S*c){\n                            ok=false;\n                            break;\n                        }\n\n                        rep(j,P[i].size()){\n                            if(P[i][j]=='(')a++;\n                            if(P[i][j]==')')a--;\n                            if(P[i][j]=='{')b++;\n                            if(P[i][j]=='}')b--;\n                            if(P[i][j]=='[')c++;\n                            if(P[i][j]==']')c--;\n                        }\n                    }\n\n                    if(ok)vec.pb(make_tuple(R,C,S));\n                }\n            }\n        }\n\n      \n\n        int a=0,b=0,c=0;\n        rep(i,q){\n            set<int>s;\n            rep(j,vec.size()){\n                int R,C,S;\n                tie(R,C,S)=vec[j];\n                s.insert(R*a+C*b+S*c);\n            }\n            if(i)cout<<\" \";\n            if(s.size()!=1)cout<<-1;\n            else cout<<*s.begin();\n\n            rep(j,Q[i].size()){\n                if(Q[i][j]=='(')a++;\n                if(Q[i][j]==')')a--;\n                if(Q[i][j]=='{')b++;\n                if(Q[i][j]=='}')b--;\n                if(Q[i][j]=='[')c++;\n                if(Q[i][j]==']')c--;\n            }\n        }\n        cout<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <tuple>\n#include <set>\n#include <map>\nusing namespace std;\n\nstruct data {\n    int r, c, s, i;\n    bool operator<(data const& d) {\n        return r < d.r;\n    }\n};\n\nint main() {\n    int p, q;\n    while(cin >> p >> q, p) {\n        vector<data> v(p);\n        data d = {};\n        map<tuple<int, int, int>, int> res2;\n        for(int i=0; i<p; ++i) {\n            string s;\n            cin >> s;\n            bool is_in = true;\n            for(int j=0; j<s.size(); ++j) {\n                if(s[j] == '.' && is_in) {\n                    d.i++;\n                } else {\n                    if(is_in) {\n                        is_in = false;\n                        v[i] = d;\n                        res2[make_tuple(d.r, d.c, d.s)] = d.i;\n                        d.i = 0;\n                    }\n                    if(s[j] == '(') {\n                        d.r++;\n                    } else if(s[j] == '{') {\n                        d.c++;\n                    } else if(s[j] == '[') {\n                        d.s++;\n                    } else if(s[j] == ')') {\n                        d.r--;\n                    } else if(s[j] == ']') {\n                        d.s--;\n                    } else if(s[j] == '}') {\n                        d.c--;\n                    }\n                }\n            }\n        }\n        vector<tuple<int, int, int>> res;\n        for(int r=1; r<=20; ++r) {\n            for(int c=1; c<=20; ++c) {\n                for(int s=1; s<=20; ++s) {\n                    auto check = [r, c, s](data const& d) -> bool {\n                        return d.r * r + d.c * c + d.s * s == d.i;\n                    };\n                    if(all_of(v.begin(), v.end(), check)) {\n                        res.push_back(make_tuple(r, c, s));\n                    }\n                }\n            }\n        }\n        set<int> sr, sc, ss;\n        for(int i=0; i<res.size(); ++i) {\n            int r, c, s;\n            tie(r, c, s) = res[i];\n            sr.insert(r);\n            sc.insert(c);\n            ss.insert(s);\n        }\n        const int R = (sr.size() == 1 ? *sr.begin() : -1);\n        const int C = (sc.size() == 1 ? *sc.begin() : -1);\n        const int S = (ss.size() == 1 ? *ss.begin() : -1);\n        d.r = d.c = d.s = 0;\n        //cout << R << \" \" << C << \" \" << S << endl;\n        for(int i=0; i<q; ++i) {\n            string s;\n            cin >> s;\n            //cout << \"dr: \" << d.r << \"  dc: \" << d.c << \"   ds: \" << d.s << endl;\n            if(d.r > 0 && R == -1 || d.c > 0 && C == -1 || d.s > 0 && S == -1) {\n                auto t = make_tuple(d.r, d.c, d.s);\n                if(res2.count(t) == 1) {\n                    cout << res2[t];\n                } else {\n                    cout << -1;\n                }\n            } else {\n                int res = 0;\n                if(d.r > 0 && R != -1) {\n                    res += d.r * R;\n                }\n                if(d.c > 0 && C != -1) {\n                    res += d.c * C;\n                }\n                if(d.s > 0 && S != -1) {\n                    res += d.s * S;\n                }\n                cout << res;\n            }\n            if(i != q-1) {\n                cout << \" \";\n            } else {\n                cout << endl;\n            }\n            for(int j=0; j<s.size(); ++j) {\n                if(s[j] == '(') {\n                    d.r++;\n                } else if(s[j] == '{') {\n                    d.c++;\n                } else if(s[j] == '[') {\n                    d.s++;\n                } else if(s[j] == ')') {\n                    d.r--;\n                } else if(s[j] == ']') {\n                    d.s--;\n                } else if(s[j] == '}') {\n                    d.c--;\n                }\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <set>\n\nusing namespace std;\n\nstruct H {\n  int r,c,s,i;\n  H(){}\n  H(int r,int c,int s,int i):r(r),c(c),s(s),i(i){}\n};\n\nvector<H> v;\n\nint main(void)\n{\n  int p,q,R,C,S,d,k;\n  char g[88];\n  for(;;) {\n    v.clear();\n    scanf(\"%d%d\",&p,&q); if(p+q==0)break;\n    R = C = S = 0;\n    for( int i = 0; i < p; i++ ) {\n      scanf(\"%s\",g);\n      k = d = 0;\n      while( g[k] == '.' ) ++k;\n      d = k;\n      v.push_back(H(R,C,S,d));\n      while( g[k] ) {\n        if( g[k] == '(' ) ++R;\n        if( g[k] == ')' ) --R;\n        if( g[k] == '{' ) ++C;\n        if( g[k] == '}' ) --C;\n        if( g[k] == '[' ) ++S;\n        if( g[k] == ']' ) --S;\n        k++;\n      }\n    }\n  \n    R = C = S = 0;\n    for( int i = 0; i < q; i++ ) {\n      scanf(\"%s\",g);\n      k = d = 0;\n      while( g[k] == '.' ) ++k;\n      d = k;\n      int id[444] = {};\n      for( int r = 1; r <= 20; r++ ) {\n        for( int c = 1; c <= 20; c++ ) {\n          for( int s = 1; s <= 20; s++ ) {\n            bool ok = true;\n            for( int j = 0; j < int(v.size()); j++ ) {\n              if( v[j].r*r + v[j].c*c + v[j].s*s == v[j].i ) {\n              \n              } else ok = false;\n            }\n            if( ok ) id[R*r+C*c+S*s]++;\n          }\n        }\n      }\n      int aa = 0,res;\n      for( int j = 0; j < 444; j++ ) {\n        if( id[j] ) ++aa,res=j;\n      }\n      printf(\"%d%c\",aa==1?res:-1,i==q-1?'\\n':' ');\n      while( g[k] ) {\n        if( g[k] == '(' ) ++R;\n        if( g[k] == ')' ) --R;\n        if( g[k] == '{' ) ++C;\n        if( g[k] == '}' ) --C;\n        if( g[k] == '[' ) ++S;\n        if( g[k] == ']' ) --S;\n        k++;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\nusing namespace std;\nint main(){\n  int p, q;\n  while(cin >> p >> q, p){\n    vector<string> P(p), Q(q);\n    for(int i = 0; i < p; ++i) cin >> P[i];\n    for(int i = 0; i < q; ++i) cin >> Q[i];\n    vector<int> I(p,0), r(p+1,0), c(p+1,0), s(p+1,0);\n    for(int i = 0; i < p; ++i){\n      int t = 0;\n      r[i+1] += r[i];\n      c[i+1] += c[i];\n      s[i+1] += s[i];\n      for(int j = 0; j < P[i].size(); ++j){\n        if(P[i][j] == '.') ++t;\n        if(P[i][j] != '.'){\n          I[i] = max(t,I[i]);\n          t = -2000000;\n        }\n        if(P[i][j] == '(') ++r[i+1];\n        if(P[i][j] == ')') --r[i+1];\n        if(P[i][j] == '{') ++c[i+1];\n        if(P[i][j] == '}') --c[i+1];\n        if(P[i][j] == '[') ++s[i+1];\n        if(P[i][j] == ']') --s[i+1];\n      }\n    }\n    \n    vector< vector<int> > rcs;\n    for(int i = 1; i < 21; ++i){\n      for(int j = 1; j < 21; ++j){\n        for(int k = 1; k < 21; ++k){\n          bool f = true;\n          for(int l = 0; l < p; ++l){\n            if(r[l]*i + c[l]*j + s[l]*k != I[l]){\n              f = false;\n              break;\n            }\n          }\n          if(f){\n            rcs.push_back({i,j,k});\n          }\n        }\n      }\n    }\n    \n    vector<int> r_(q+1,0), c_(q+1,0), s_(q+1,0);\n    for(int i = 0; i < q; ++i){\n      r_[i+1] += r_[i];\n      c_[i+1] += c_[i];\n      s_[i+1] += s_[i];\n      for(int j = 0; j < Q[i].size(); ++j){\n        if(Q[i][j] == '(') ++r_[i+1];\n        if(Q[i][j] == ')') --r_[i+1];\n        if(Q[i][j] == '{') ++c_[i+1];\n        if(Q[i][j] == '}') --c_[i+1];\n        if(Q[i][j] == '[') ++s_[i+1];\n        if(Q[i][j] == ']') --s_[i+1];\n      }\n    }\n    vector<int> ans(q);\n    for(int i = 0; i < q; ++i){\n      set<int> t;\n      for(int j = 0; j < rcs.size(); ++j){\n        int x = rcs[j][0], y = rcs[j][1], z = rcs[j][2];\n        t.insert(x*r_[i] + y*c_[i] + z*s_[i]);\n      }\n      if(t.size() == 1) ans[i] = *t.begin();\n      else ans[i] = -1;\n    }\n    for(int i = 0; i < q; ++i){\n      cout << ans[i];\n      if(i < q-1) cout << \" \";\n      else cout << endl;\n    }\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nchar A[10][100];\nchar B[10][100];\nbool ans[10][800001];\nint main(){\n\tint a,b;\n\twhile(scanf(\"%d%d\",&a,&b),a){\n\t\tfor(int i=0;i<a;i++)scanf(\"%s\",A[i]);\n\t\tfor(int i=0;i<b;i++)scanf(\"%s\",B[i]);\n\t\tfor(int i=0;i<b;i++)\n\t\t\tfor(int j=0;j<800001;j++)ans[i][j]=false;\n\t\tfor(int i=1;i<=20;i++){\n\t\t\tfor(int j=1;j<=20;j++){\n\t\t\t\tfor(int k=1;k<=20;k++){\n\t\t\t\t\tbool ok=true;\n\t\t\t\t\tint c=0,d=0,e=0;\n\t\t\t\t\tfor(int l=0;l<a;l++){\n\t\t\t\t\t\tint in=0;\n\t\t\t\t\t\tfor(int m=0;A[l][m];m++){\n\t\t\t\t\t\t\tif(A[l][m]!='.')break;\n\t\t\t\t\t\t\tin++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(c*i+d*j+e*k!=in)ok=false;\n\t\t\t\t\t\tfor(int m=0;A[l][m];m++){\n\t\t\t\t\t\t\tif(A[l][m]=='(')c++;\n\t\t\t\t\t\t\tif(A[l][m]==')')c--;\n\t\t\t\t\t\t\tif(A[l][m]=='{')d++;\n\t\t\t\t\t\t\tif(A[l][m]=='}')d--;\n\t\t\t\t\t\t\tif(A[l][m]=='[')e++;\n\t\t\t\t\t\t\tif(A[l][m]==']')e--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!ok)continue;\n\t\t\t\t\tc=0;\n\t\t\t\t\td=0;\n\t\t\t\t\te=0;\n\t\t\t\t\tfor(int l=0;l<b;l++){\n\t\t\t\t\t\tans[l][c*i+d*j+e*k]=true;\n\t\t\t\t\t\tfor(int m=0;B[l][m];m++){\n\t\t\t\t\t\t\tif(B[l][m]=='(')c++;\n\t\t\t\t\t\t\tif(B[l][m]==')')c--;\n\t\t\t\t\t\t\tif(B[l][m]=='{')d++;\n\t\t\t\t\t\t\tif(B[l][m]=='}')d--;\n\t\t\t\t\t\t\tif(B[l][m]=='[')e++;\n\t\t\t\t\t\t\tif(B[l][m]==']')e--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<b;i++){\n\t\t\tif(i)printf(\" \");\n\t\t\tint at=0;\n\t\t\tint count=0;\n\t\t\tfor(int j=0;j<800001;j++){\n\t\t\t\tif(ans[i][j]){\n\t\t\t\t\tat=j;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count>1)printf(\"-1\");\n\t\t\telse printf(\"%d\",at);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <set>\n#include <algorithm>\nusing namespace std;\n\nint memo[81][81][81];\n\nvoid init(){\n\tfor(int i=0 ; i < 81 ; i++ ){\n\t\tfor(int j=0 ; j < 81 ; j++ ){\n\t\t\tfor(int k=0 ; k < 81 ; k++ ){\n\t\t\t\tmemo[i][j][k] = -1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid f(int &R, int &C, int &S, int space, const vector<char> &st){\n\tint r = count(st.begin(), st.end(), '(');\n\tint c = count(st.begin(), st.end(), '{');\n\tint s = count(st.begin(), st.end(), '[');\n\t\n\tset<int> vr, vc, vs;\n\tfor(int r_ = 1 ; r_ <= 20 ; r_++ ){\n\t\tfor(int c_ = 1; c_ <= 20 ; c_++ ){\n\t\t\tfor(int s_ = 1 ; s_ <= 20 ; s_++ ){\n\t\t\t\tint R_ = R, C_ = C, S_ = S;\n\t\t\t\tif( R == -1 ) R_ = r_;\n\t\t\t\tif( C == -1 ) C_ = c_;\n\t\t\t\tif( S == -1 ) S_ = s_;\n\t\t\t\tint ss = R_ * r + C_ * c + S_ * s;\n\t\t\t\tif( ss == space ){\n\t\t\t\t\tif( r != 0 ) vr.insert(R_);\n\t\t\t\t\tif( c != 0 ) vc.insert(C_);\n\t\t\t\t\tif( s != 0 ) vs.insert(S_);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif( vr.size() == 1 ) R = *vr.begin();\n\tif( vc.size() == 1 ) C = *vc.begin();\n\tif( vs.size() == 1 ) S = *vs.begin();\n\t\n\tmemo[r][c][s] = space;\n\t//cout << \"(R, C, S) = (\" << R << \", \" << C << \", \" << S << \")\" << endl;\n}\n\nint main(){\n\tint P, Q;\n\twhile( cin >> P >> Q , P || Q ){\n\t\tinit();\n\t\tvector<string> p(P), q(Q);\n\t\tfor(int i=0 ; i < P ; i++ ) cin >> p[i];\n\t\tfor(int i=0 ; i < Q ; i++ ) cin >> q[i];\n\t\t\n\t\tint R = -1, C = -1, S = -1;\n\t\tvector<char> st;\n\t\tfor(int i=0 ; i < P ; i++ ){\n\t\t\tbool flag = true;\n\t\t\tint space = 0;\n\t\t\t\n\t\t\tfor(int j=0 ; j < p[i].size() ; j++ ){\n\t\t\t\tif( flag ){\t\n\t\t\t\t\tif( p[i][j] != '.' ){\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tf(R, C, S, space, st);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tspace++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( p[i][j] == '(' || p[i][j] == '{' || p[i][j] == '[' ){\n\t\t\t\t\tst.push_back(p[i][j]);\n\t\t\t\t}else if( p[i][j] == ')' || p[i][j] == '}' || p[i][j] == ']' ){\n\t\t\t\t\tst.pop_back();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tst.clear();\n\t\tvector<int> ans;\n\t\tfor(int i=0 ; i < Q ; i++ ){\n\t\t\tbool flag = true;\n\t\t\tint r = count(st.begin(), st.end(), '(');\n\t\t\tint c = count(st.begin(), st.end(), '{');\n\t\t\tint s = count(st.begin(), st.end(), '[');\n\t\t\tint space = R * r + C * c + S * s;\n\t\t\tif( r != 0 && R == -1 ) flag = false;\n\t\t\tif( c != 0 && C == -1 ) flag = false;\n\t\t\tif( s != 0 && S == -1 ) flag = false;\n\t\t\t\n\t\t\tif( flag ){\n\t\t\t\tans.push_back(space);\n\t\t\t}else{\n\t\t\t\tif( memo[r][c][s] != -1 ){\n\t\t\t\t\tans.push_back(memo[r][c][s]);\n\t\t\t\t}else{\n\t\t\t\t\tans.push_back(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int j=0 ; j < q[i].size() ; j++ ){\n\t\t\t\tif( q[i][j] == '(' || q[i][j] == '{' || q[i][j] == '[' ){\n\t\t\t\t\tst.push_back(q[i][j]);\n\t\t\t\t}else if( q[i][j] == ')' || q[i][j] == '}' || q[i][j] == ']' ){\n\t\t\t\t\tst.pop_back();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0 ; i < ans.size() ; i++ ){\n\t\t\tif( i ) cout << \" \";\n\t\t\tcout << ans[i];\n\t\t}\n\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint N , M;\n\twhile(cin >> N >> M , N || M)\n\t{\n\t\tint a = 0 , b = 0 , c = 0 , d = 0;\n\t\tmap<vector<int> , int>data;\n\t\tfor(size_t i = 0; i < N; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tint memo = 1;\n\t\t\tfor(size_t i = 1; i < 20; i++)\n\t\t\t{\n\t\t\t\tif(a%i == 0 && b%i == 0 && c%i == 0 && now%i == 0)\n\t\t\t\t{\n\t\t\t\t\tmemo = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvector<int>memo2 = { a / memo,b / memo,c / memo };\n\t\t\tdata[memo2] = now / memo;\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tvector<vector<int>>candidate;\n\t\tfor(int i = 1; i <= 20; i++)\n\t\t{\n\t\t\tfor(int j = 1; j <= 20; j++)\n\t\t\t{\n\t\t\t\tfor(int k = 1; k <= 20; k++)\n\t\t\t\t{\n\t\t\t\t\tbool f = 1;\n\t\t\t\t\tfor(auto x : data)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(x.first[0] * i + x.first[1] * j + x.first[2] * k != x.second)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(f)candidate.push_back(vector<int>{i , j , k });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<set<int>>ans(M);\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tfor(auto x : candidate)\n\t\t\t{\n\t\t\t\tans[i].insert(( x[0] )*a + ( x[1] )*b + ( x[2] )*c);\n\t\t\t}\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tif(ans[i].size() == 1)\n\t\t\t{\n\t\t\t\tfor(auto x : ans[i])\n\t\t\t\t{\n\t\t\t\t\tcout << x;\n\t\t\t\t}\n\t\t\t} else\n\t\t\t{\n\t\t\t\tcout << -1;\n\t\t\t}\n\t\t\tcout << ( i == M - 1 ? \"\\n\" : \" \" );\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define dump(a) (cerr << (#a) << \" = \" << (a) << endl)\n\ntemplate<class T> inline void chmax(T& a, const T& b) { if(b > a) a = b; }\ntemplate<class T> inline void chmin(T& a, const T& b) { if(b < a) a = b; }\n\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n\tos << '(' << p.first << \", \" << p.second << ')';\n\treturn os;\n}\n\ntemplate<class Tuple, unsigned Index>\nvoid print_tuple(ostream& os, const Tuple& t) {}\n\ntemplate<class Tuple, unsigned Index, class Type, class... Types>\nvoid print_tuple(ostream& os, const Tuple& t) {\n\tif(Index > 0) os << \", \";\n\tos << get<Index>(t);\n\tprint_tuple<Tuple, Index + 1, Types...>(os, t);\n}\n\ntemplate<class... Types>\nostream& operator<<(ostream& os, const tuple<Types...>& t) {\n\tos << '(';\n\tprint_tuple<tuple<Types...>, 0, Types...>(os, t);\n\treturn os << ')';\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream&, Iterator, const Iterator&);\n\ntemplate<typename T>\nostream& operator<<(ostream& os, vector<T> c) {\n\treturn dump_range(os, c.cbegin(), c.cend());\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream& os, Iterator first, const Iterator& last) {\n\tos << '[';\n\tfor(int i = 0; first != last; ++i, ++first) {\n\t\tif(i) os << \", \";\n\t\tos << *first;\n\t}\n\treturn os << ']';\n}\n\nconst int MAX_RCS = 20;\n\nint calc_indent(const string& s) {\n\tfor(int i = 0; i < static_cast<int>(s.size()); ++i) {\n\t\tif(s[i] != '.') return i;\n\t}\n\n\treturn s.size();\n}\n\nvoid calc_nest(int& nest_r, int& nest_c, int& nest_s, const string& line) {\n\tfor(int i = 0; i < static_cast<int>(line.size()); ++i) {\n\t\tswitch(line[i]) {\n\t\tcase '(': ++nest_r; break;\n\t\tcase ')': --nest_r; break;\n\t\tcase '{': ++nest_c; break;\n\t\tcase '}': --nest_c; break;\n\t\tcase '[': ++nest_s; break;\n\t\tcase ']': --nest_s; break;\n\t\t}\n\t}\n}\n\nbool ok(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tfor(const pair<tuple<int, int, int>, int>&e : conditions) {\n\t\tconst tuple<int, int, int>& nest = e.first;\n\t\tconst int indent = r * get<0>(nest) + c * get<1>(nest) + s * get<2>(nest);\n\t\tif(indent != e.second) return false;\n\t}\n\n\treturn true;\n}\n\ninline int gcd(int a, int b, int c) {\n\treturn __gcd(a, __gcd(b, c));\n}\n\nint get_value(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tconst int g = max(1, gcd(r, c, s));\n\tconst tuple<int, int, int> t(r / g, c / g, s / g);\n\tif(conditions.count(t))\n\t\treturn g * conditions.at(t);\n\treturn -1;\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tfor(int p, q; cin >> p >> q && p;) {\n\t\tmap<tuple<int, int, int>, int> conditions;\n\t\tint nest_r = 0, nest_c = 0, nest_s = 0;\n\t\tfor(int i = 0; i < p; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int g = max(1, gcd(nest_r, nest_c, nest_s));\n\t\t\tconditions[make_tuple(nest_r / g, nest_c / g, nest_s / g)] = calc_indent(line) / g;\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tunordered_set<int> R, C, S;\n\t\tfor(int r = 1; r <= MAX_RCS; ++r) {\n\t\t\tfor(int c = 1; c <= MAX_RCS; ++c) {\n\t\t\t\tfor(int s = 1; s <= MAX_RCS; ++s) {\n\t\t\t\t\tif(ok(r, c, s, conditions)) {\n\t\t\t\t\t\tR.insert(r);\n\t\t\t\t\t\tC.insert(c);\n\t\t\t\t\t\tS.insert(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnest_r = 0, nest_c = 0, nest_s = 0;\n\t\tvector<int> ans(q);\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int indent = calc_indent(line);\n\n\t\t\tif(ans[i] = get_value(nest_r, nest_c, nest_s, conditions), ans[i] != -1) {\n\t\t\t\tans[i] = abs(ans[i] - indent);\n\t\t\t}\n\t\t\telse if(S.size() == 1 && (ans[i] = get_value(nest_r, nest_c, 0, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*S.begin()) - indent);\n\t\t\t}\n\t\t\telse if(C.size() == 1 && (ans[i] = get_value(nest_r, 0, nest_s, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*C.begin()) - indent);\n\t\t\t}\n\t\t\telse if(R.size() == 1 && (ans[i] = get_value(0, nest_c, nest_s, conditions), ans[i] != -1)) {\n\t\t\t\tans[i] = abs(ans[i] + (*R.begin()) - indent);\n\t\t\t}\n\t\t\telse if(!((nest_r && R.size() != 1) ||\n\t\t\t\t\t  (nest_c && C.size() != 1) ||\n\t\t\t\t\t  (nest_s && S.size() != 1))) {\n\t\t\t\tans[i] = abs(nest_r * (*R.begin()) + nest_c * (*C.begin()) + nest_s * (*S.begin()) - indent);\n\t\t\t}\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tcout << ans[i] << (i == q - 1 ? \"\\n\" : \" \");\n\t\t}\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nstruct N{\n  int R,C,S;\n};\n\nint main()\n{\n  int p,q;\n  int Ind[20],nr[20],nc[20],ns[20];\n  string s1[20],s2[20],s;\n  N n[8000000];\n  while(1){\n    cin>>p>>q;\n    if(p+q==0)break;\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=0;i<p;i++){\n      cin>>s1[i];\n      Ind[i]=0;\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n      bool flag=true;\n      for(int j=0;j<s1[i].length();j++){\n\tif(s1[i][j]!='.')flag=false;\n\tif(s1[i][j]=='.' && flag)Ind[i]++;\n\tif(s1[i][j]=='(')nr[i]++;\n\tif(s1[i][j]==')')nr[i]--;\n\tif(s1[i][j]=='{')nc[i]++;\n\tif(s1[i][j]=='}')nc[i]--;\n\tif(s1[i][j]=='[')ns[i]++;\n\tif(s1[i][j]==']')ns[i]--;\n      }\n    }\n    int a=0;\n    \n    for(int R=1;R<=20;R++){\n      for(int C=1;C<=20;C++){\n\tfor(int S=1;S<=20;S++){\n\t  bool flag=true;\n\t  for(int i=1;i<p;i++){\n\t    if(Ind[i]!=(R*(nr[i-1])+C*(nc[i-1])+S*(ns[i-1])))flag=false;\n\t  }\n\t  if(flag){\n\t    n[a].R=R;\n\t    n[a].C=C;\n\t    n[a].S=S;\n\t    a++;\n\t  }\n\t}\n      }\n    }\n    nr[0]=nc[0]=ns[0]=0;\n    for(int i=1;i<q+1;i++){\n      cin>>s2[i];\n      if(i!=0){\n\tnr[i]=nr[i-1];\n\tnc[i]=nc[i-1];\n\tns[i]=ns[i-1];\n      }\n\tfor(int j=0;j<s2[i].length();j++){\n\t  if(s2[i][j]=='(')nr[i]++;\n\t  if(s2[i][j]==')')nr[i]--;\n\t  if(s2[i][j]=='{')nc[i]++;\n\t  if(s2[i][j]=='}')nc[i]--;\n\t  if(s2[i][j]=='[')ns[i]++;\n\t  if(s2[i][j]==']')ns[i]--;\n\t}\n      \n    }\n    for(int i=0;i<q;i++){\n      int b=-1;\n      for(int j=0;j<a;j++){\n\tif(b!=-1 && b!=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i]){\n\t  b=-1;\n\t  break;\n\t}\n\telse b=n[j].R*nr[i]+n[j].C*nc[i]+n[j].S*ns[i];\n      }\n      cout<<b;\n      if(i!=q-1)cout<<\" \";\n    }\n    cout<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define dump(a) (cerr << (#a) << \" = \" << (a) << endl)\n\ntemplate<class T> inline void chmax(T& a, const T& b) { if(b > a) a = b; }\ntemplate<class T> inline void chmin(T& a, const T& b) { if(b < a) a = b; }\n\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n\tos << '(' << p.first << \", \" << p.second << ')';\n\treturn os;\n}\n\ntemplate<class Tuple, unsigned Index>\nvoid print_tuple(ostream& os, const Tuple& t) {}\n\ntemplate<class Tuple, unsigned Index, class Type, class... Types>\nvoid print_tuple(ostream& os, const Tuple& t) {\n\tif(Index > 0) os << \", \";\n\tos << get<Index>(t);\n\tprint_tuple<Tuple, Index + 1, Types...>(os, t);\n}\n\ntemplate<class... Types>\nostream& operator<<(ostream& os, const tuple<Types...>& t) {\n\tos << '(';\n\tprint_tuple<tuple<Types...>, 0, Types...>(os, t);\n\treturn os << ')';\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream&, Iterator, const Iterator&);\n\ntemplate<typename T>\nostream& operator<<(ostream& os, vector<T> c) {\n\treturn dump_range(os, c.cbegin(), c.cend());\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream& os, Iterator first, const Iterator& last) {\n\tos << '[';\n\tfor(int i = 0; first != last; ++i, ++first) {\n\t\tif(i) os << \", \";\n\t\tos << *first;\n\t}\n\treturn os << ']';\n}\n\nconst int MAX_RCS = 20;\n\nint calc_indent(const string& s) {\n\tfor(int i = 0; i < static_cast<int>(s.size()); ++i) {\n\t\tif(s[i] != '.') return i;\n\t}\n\n\treturn s.size();\n}\n\nvoid calc_nest(int& nest_r, int& nest_c, int& nest_s, const string& line) {\n\tfor(int i = 0; i < static_cast<int>(line.size()); ++i) {\n\t\tswitch(line[i]) {\n\t\tcase '(': ++nest_r; break;\n\t\tcase ')': --nest_r; break;\n\t\tcase '{': ++nest_c; break;\n\t\tcase '}': --nest_c; break;\n\t\tcase '[': ++nest_s; break;\n\t\tcase ']': --nest_s; break;\n\t\t}\n\t}\n}\n\nbool ok(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tfor(const pair<tuple<int, int, int>, int>&e : conditions) {\n\t\tconst tuple<int, int, int>& nest = e.first;\n\t\tconst int indent = r * get<0>(nest) + c * get<1>(nest) + s * get<2>(nest);\n\t\tif(indent != e.second) return false;\n\t}\n\n\treturn true;\n}\n\ninline int gcd(int a, int b, int c) {\n\treturn __gcd(a, __gcd(b, c));\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tfor(int p, q; cin >> p >> q && p;) {\n\t\tmap<tuple<int, int, int>, int> conditions;\n\t\tint nest_r = 0, nest_c = 0, nest_s = 0;\n\t\tfor(int i = 0; i < p; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int g = max(1, gcd(nest_r, nest_c, nest_s));\n\t\t\tconditions[make_tuple(nest_r / g, nest_c / g, nest_s / g)] = calc_indent(line) / g;\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tunordered_set<int> R, C, S;\n\t\tfor(int r = 1; r <= MAX_RCS; ++r) {\n\t\t\tfor(int c = 1; c <= MAX_RCS; ++c) {\n\t\t\t\tfor(int s = 1; s <= MAX_RCS; ++s) {\n\t\t\t\t\tif(ok(r, c, s, conditions)) {\n\t\t\t\t\t\tR.insert(r);\n\t\t\t\t\t\tC.insert(c);\n\t\t\t\t\t\tS.insert(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnest_r = 0, nest_c = 0, nest_s = 0;\n\t\tvector<int> ans(q, -1);\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int indent = calc_indent(line);\n\t\t\tconst tuple<int, int, int> t(nest_r, nest_c, nest_s);\n\n\t\t\tif(conditions.count(make_tuple(nest_r, nest_c, nest_s))) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(nest_r, nest_c, nest_s)] - indent);\n\t\t\t}\n\t\t\telse if(conditions.count(make_tuple(nest_r, nest_c, 0)) && S.size() == 1) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(nest_r, nest_c, 0)] + (*S.begin()));\n\t\t\t}\n\t\t\telse if(conditions.count(make_tuple(nest_r, 0, nest_s)) && C.size() == 1) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(nest_r, 0, nest_s)] + (*C.begin()));\n\t\t\t}\n\t\t\telse if(conditions.count(make_tuple(0, nest_c, nest_s)) && R.size() == 1) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(0, nest_c, nest_s)] + (*R.begin()));\n\t\t\t}\n\t\t\telse if((nest_r && R.size() != 1) ||\n\t\t\t   (nest_c && C.size() != 1) ||\n\t\t\t   (nest_s && S.size() != 1)) {\n\t\t\t\tans[i] = -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans[i] = abs(nest_r * (*R.begin()) + nest_c * (*C.begin()) + nest_s * (*S.begin()) - indent);\n\t\t\t}\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tcout << ans[i] << (i == q - 1 ? \"\\n\" : \" \");\n\t\t}\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\n#define f first\n#define s second\n#define R PP(1,0,0)\n#define C PP(0,1,0)\n#define S PP(0,0,1)\nusing namespace std;\ntypedef pair <int,int> P;\ntypedef pair <int,P> iP;\nint p,q;\nstring str[2][11];\nmap<iP,int> M;\niP PP(int a,int b,int c){return iP(a,P(b,c));}\n\nint gcd(int a,int b,int c,int d){\n  a=abs(a),b=abs(b),c=abs(c),d=abs(d);\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nvoid solve(){\n  if(M.size()==2&&M.count(PP(1,1,1))) M[R]=M[C]=M[S]=M[PP(1,1,1)]/3;\n\n  map<iP,int> ::iterator i,j;\n\n  for(int k=0;k<3;k++){\n  for(i=M.begin();i!=M.end();i++)\n    for(j=M.begin();j!=M.end();j++){\n      int a=i->f.f, b=i->f.s.f, c=i->f.s.s,d=i->s;\n      int x=j->f.f, y=j->f.s.f, z=j->f.s.s,w=j->s;\n      \n      int T[3][2]={{a,x},{b,y},{c,z}};\n      int D,ax,by,cz,dw,l=T[k][0],r=T[k][1];\n\tD=gcd(l,r,0,0);\n\tax=(a*(r/D)-x*(l/D));\n\tby=(b*(r/D)-y*(l/D));\n\tcz=(c*(r/D)-z*(l/D));\n\tdw=(d*(r/D)-w*(l/D));\n\tD=gcd(ax,by,cz,dw);\n\tax/=D,by/=D,cz/=D,dw/=D;\n\n\tif(M.count(PP(ax,by,cz))) continue;\n\tif(ax<0||by<0||cz<0||dw<0)continue;\n\n\ti=M.begin();\n\tM[PP(ax,by,cz)]=dw;\n      }\n  }\n}\n\nvoid in(){\n  M.clear();\n  int cnt[3]={},d;\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<str[0][i].size();j++){\n      char ch=str[0][i][j];\n      if(ch=='.')dot++;\n      else if(f)f=0,d=gcd(cnt[0],cnt[1],cnt[2],dot),M[PP(cnt[0]/d,cnt[1]/d,cnt[2]/d)]=dot/d;\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\n\nint cal(int a,int b,int c){\n  int d=gcd(a,b,c,0),D;\n  a/=d,b/=d,c/=d;\n  if(M.count(PP(a,b,c))) return M[PP(a,b,c)]*d;\n  int fa=M.count(R),fb=M.count(C),fc=M.count(S);\n  int abc=fa+fb+fc;\n  if(abc/3) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  if(abc/2&&(!a!=!fa||!b!=!fb||!c!=!fc)) return -1;\n  if(abc/2) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  D=gcd(b,c,0,0);\n  if(fa&&M.count(PP(0,b/D,c/D)))return (M[R]*a+M[PP(0,b/D,c/D)]*D)*d;\n  D=gcd(a,c,0,0);\n  if(fb&&M.count(PP(a/D,0,c/D)))return (M[C]*b+M[PP(a/D,0,c/D)]*D)*d;\n  D=gcd(a,b,0,0);\n  if(fc&&M.count(PP(a/D,b/D,0)))return (M[S]*c+M[PP(a/D,0,c/D)]*D)*d;\n  return -1;\n}\n\nvoid out(){\n  int cnt[3]={},e[3]={M.count(R),M.count(C),M.count(S)};\n  e[0]= e[0]? M[R]:-1;\n  e[1]= e[1]? M[C]:-1;\n  e[2]= e[2]? M[S]:-1;\n  \n  for(int i=0;i<q;i++){\n    M.erase(R),M.erase(C),M.erase(S);\n    if(e[0]!=-1)M[R]=e[0];\n    if(e[1]!=-1)M[C]=e[1];\n    if(e[2]!=-1)M[S]=e[2];\n    cout <<cal(cnt[0],cnt[1],cnt[2]);\n    if(i!=q-1)cout <<\" \";\n    for(int j=0;j<str[1][i].size();j++){\n      char ch=str[1][i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>str[0][i];\n    for(int i=0;i<q;i++)cin>>str[1][i];\n    in();\n    solve();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define Rep(i,n) for(int i=1;i<n;i++)\n#define INF 100000000\n#define SIZE 21\nusing namespace std;\n\nint p,q;\n\nint main(){\n\twhile(cin>>p>>q,p||q){\n\t\tstring P[10],Q[10];\n\t\tint ans[100];\n\t\trep(i,100)ans[i]=INF;\n\t\trep(i,p)cin>>P[i];\n\t\trep(i,q)cin>>Q[i];\n\t\tRep(R,SIZE)Rep(C,SIZE)Rep(S,SIZE){\n\t\t\tbool ok=true;\n\t\t\tint r=0,c=0,s=0;\n\t\t\trep(i,p){\n\t\t\t\tbool check=true;\n\t\t\t\tint cnt=0;\n\t\t\t\trep(j,P[i].size()){\n\t\t\t\t\tif(check&&P[i][j]=='.'){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(P[i][j]!='.'&&check){\n\t\t\t\t\t\tif(r*R+c*C+s*S!=cnt){\n\t\t\t\t\t\t\tok=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheck=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(P[i][j]=='(')r++;\n\t\t\t\t\tif(P[i][j]==')')r--;\n\t\t\t\t\tif(P[i][j]=='[')c++;\n\t\t\t\t\tif(P[i][j]==']')c--;\n\t\t\t\t\tif(P[i][j]=='{')s++;\n\t\t\t\t\tif(P[i][j]=='}')s--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!ok)continue;\n\t\t\tr=0;c=0;s=0;\n\t\t\trep(i,q){\n\t\t\t\tif(ans[i]==INF)ans[i]=r*R+c*C+s*S;\n\t\t\t\telse if(ans[i]!=r*R+c*C+s*S) ans[i]=-1;\n\t\t\t\trep(j,Q[i].size()){\n\t\t\t\t\tif(Q[i][j]=='(')r++;\n\t\t\t\t\tif(Q[i][j]==')')r--;\n\t\t\t\t\tif(Q[i][j]=='[')c++;\n\t\t\t\t\tif(Q[i][j]==']')c--;\n\t\t\t\t\tif(Q[i][j]=='{')s++;\n\t\t\t\t\tif(Q[i][j]=='}')s--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i,q){\n\t\t\tif(i)cout<<\" \";\n\t\t\tcout<<ans[i];\n\t\t}\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n\nint main(void){\n    cout << \"Hello, Wolrd!\" << endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#define __USE_MINGW_ANSI_STDIO 0\n#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n#define int ll\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define ALL(x) x.begin(), x.end()\n#define PB push_back\n\nconst ll LLINF = (1LL<<60);\nconst int INF = (1LL<<30);\nconst int MOD = 1000000007;\n\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\ntemplate <typename T> bool IN(T a, T b, T x) { return a<=x&&x<b; }\ntemplate<typename T> T ceil(T a, T b) { return a/b + !!(a%b); }\ntemplate<class S,class T>\nostream &operator <<(ostream& out,const pair<S,T>& a){\n  out<<'('<<a.first<<','<<a.second<<')';\n  return out;\n}\ntemplate<class T>\nostream &operator <<(ostream& out,const vector<T>& a){\n  out<<'[';\n  REP(i, a.size()) {out<<a[i];if(i!=a.size()-1)out<<',';}\n  out<<']';\n  return out;\n}\n\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\n\nbool able[21][21][21];\nsigned main(void)\n{\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  while(true) {\n    int p, q;\n    cin >> p >> q;\n    if(!p) break;\n    vector<string> s(p), t(q);\n    REP(i, p) cin >> s[i];\n    REP(i, q) cin >> t[i];\n\n    memset(able, true, sizeof(able));\n    map<VI, int> mp;\n    int a=0, b=0, c=0;\n    REP(i, p-1) {\n      // i行目の括弧の数\n      REP(j, s[i].size()) {\n        if(s[i][j]=='(') {\n          a++;\n        } else if(s[i][j]=='{') {\n          b++;\n        } else if(s[i][j]=='[') {\n          c++;\n        } else if(s[i][j]==')') {\n          a--;\n        } else if(s[i][j]=='}') {\n          b--;\n        } else if(s[i][j]==']') {\n          c--;\n        }\n      }\n      // i+1行目で行の先頭の'.'の数\n      int num = 0;\n      REP(j, s[i+1].size()) {\n        if(s[i+1][j] != '.') {\n          num = j;\n          break;\n        }\n      }\n      mp[{a, b, c}] = num;\n      // a*R + b*C + c*S = num になるような (R, C, S)\n      FOR(R, 1, 21) FOR(C, 1, 21) FOR(S, 1, 21) {\n        if(a*R + b*C + c*S != num) {\n          able[R][C][S] = false;\n        }\n      }\n    }\n\n    int R=-1, C=-1, S=-1;\n    FOR(i, 1, 21) FOR(j, 1, 21) FOR(k, 1, 21) {\n      if(able[i][j][k]) {\n        if(R == -1) R = i;\n        else if(R != i) R = -2;\n        if(C == -1) C = j;\n        else if(C != j) C = -2;\n        if(S == -1) S = k;\n        else if(S != k) S = -2;\n      }\n    }\n    // cout << R << \",\" << C << \",\" << S << endl;\n    // for(auto i: mp) cout << i << endl;\n\n    a = b = c = 0;\n    cout << 0;\n    REP(i, q-1) {\n      // cout << \"i:\" << i << endl;\n      REP(j, t[i].size()) {\n        if(t[i][j]=='(') {\n          a++;\n        } else if(t[i][j]=='{') {\n          b++;\n        } else if(t[i][j]=='[') {\n          c++;\n        } else if(t[i][j]==')') {\n          a--;\n        } else if(t[i][j]=='}') {\n          b--;\n        } else if(t[i][j]==']') {\n          c--;\n        }\n      }\n      // cout << a << \" \" << b << \" \" << c << endl;\n      bool flag = true;\n      if(a == 0 && b == 0 && c == 0) { cout << \" 0\"; flag = false; }\n      for(auto j: mp) {\n        if(!flag) break;\n        VI v = j.first;\n        if((!v[0] && a) || (!v[1] && b) || (!v[2] && c)\n          || (v[0] && !a) || (v[1] && !b) || (v[2] && !c)) {\n          continue;\n        }\n        bool cond1 = !a || v[0]%a==0,\n             cond2 = !b || v[1]%b==0,\n             cond3 = !c || v[2]%c==0;\n        if(cond1 && cond2 && cond3 && v[0]*b == v[1]*a && v[1]*c == v[2]*b) {\n          int tmp = -1;\n          if(a != 0) tmp = v[0]/a;\n          else if(b != 0) tmp = v[1]/b;\n          else if(c != 0) tmp = v[2]/c;\n          cout << \" \" << tmp * j.second;\n          flag = false;\n          break;\n        }\n      }\n      if(!flag) continue;\n      if((a && R < 0) || (b && C < 0) || (c && S < 0)) {\n        cout << \" -1\";\n      } else {\n        cout << \" \" << a*R + b*C + c*S;\n      }\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int P, Q;\n  int r[23], c[23], s[23], indent[23];\n  int ans[23];\n  \n  while(cin >> P >> Q, P) {\n    for(int i = 0; i < P + Q; i++) {\n      string S;\n      cin >> S;\n      r[i] = count(S.begin(), S.end(), '(') - count(S.begin(), S.end(), ')');\n      c[i] = count(S.begin(), S.end(), '{') - count(S.begin(), S.end(), '}');\n      s[i] = count(S.begin(), S.end(), '[') - count(S.begin(), S.end(), ']');\n      if(i != 0 && i != P) r[i] += r[i - 1], c[i] += c[i - 1], s[i] += s[i - 1];\n      for(indent[i] = 0; S[indent[i]] == '.'; ++indent[i]);\n    }\n    fill_n(ans, Q, -810);\n    ans[0] = 0;\n    for(int i = 1; i <= 20; i++) {\n      for(int j = 1; j <= 20; j++) {\n        for(int k = 1; k <= 20; k++) {\n          bool flag = true;\n          for(int l = 0; l < P - 1; l++) {\n            flag &= i * r[l] + j * c[l] + k * s[l] == indent[l + 1];\n          }\n          if(!flag) continue;\n          for(int l = P; l < P + Q - 1; l++) {\n            if(ans[l - P + 1] == -810) ans[l - P + 1] = i * r[l] + j * c[l] + k * s[l];\n            else if(ans[l - P + 1] != i * r[l] + j * c[l] + l * s[l]) ans[l - P + 1] = -1;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < Q; i++) {\n      cout << ans[i] << (i + 1 == Q ? \"\\n\" : \" \");\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nvoid solve(int p,int q){\n    cin.ignore();\n    string buf;\n    int ro=0,rc=0,co=0,cc=0,so=0,sc=0;\n    auto incl=[&](string str){\n        ro+=count(str.begin(),str.end(),'(');\n        rc+=count(str.begin(),str.end(),')');\n        co+=count(str.begin(),str.end(),'{');\n        cc+=count(str.begin(),str.end(),'}');\n        so+=count(str.begin(),str.end(),'[');\n        sc+=count(str.begin(),str.end(),']');\n    };\n    auto cntIndent=[](string str){\n        int res=0;\n        for(int i=0;i<str.size();i++){\n            if(str[i]!='.') break;\n            res++;\n        }\n        return res;\n    };\n    vector<tuple<int,int,int>> rcs;\n    for(int i=0;i<20;i++){\n        for(int j=0;j<20;j++){\n            for(int k=0;k<20;k++){\n                rcs.push_back(make_tuple(i+1,j+1,k+1));\n            }\n        }\n    }\n    for(int i=0;i<p;i++){\n        string str;\n        getline(cin,str);\n        vector<tuple<int,int,int>> tmp;\n        int x=cntIndent(str);\n        for(int i=0;i<rcs.size();i++){\n            if(get<0>(rcs[i])*(ro-rc)+get<1>(rcs[i])*(co-cc)+get<2>(rcs[i])*(so-sc)==x){\n                tmp.push_back(rcs[i]);\n            }\n        }\n        rcs=tmp;\n        incl(str);\n    }\n    ro=rc=0,co=cc=0,so=sc=0;\n    vector<int> res;\n    for(int i=0;i<q;i++){\n        string str;\n        getline(cin,str);\n        int y=get<0>(rcs[0])*(ro-rc)+get<1>(rcs[0])*(co-cc)+get<2>(rcs[0])*(so-sc);\n        for(int i=0;i<rcs.size();i++){\n            if(get<0>(rcs[i])*(ro-rc)+get<1>(rcs[i])*(co-cc)+get<2>(rcs[i])*(so-sc)!=y){\n                y=-1;\n            }\n        }\n        res.push_back(y);\n        incl(str);\n    }\n    for(int i=0;i<q;i++){\n        cout<<res[i]<<(i+1==q ? \"\\n\" : \" \");\n    }\n    return;\n}\nint main(){\n    int p,q;\n    while(cin>>p>>q,p){\n        solve(p,q);\n    }\n    return 0;    \n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <set>\nusing namespace std;\n\nint P, Q;\nstring master[10], sample[10];\n\nvoid solve() {\n    set<int> solutions[10];\n\n    for (int r = 1; r <= 20; ++r) {\n        for (int c = 1; c <= 20; ++c) {\n            for (int s = 1; s <= 20; ++s) {\n                // check it is consistenw with master\n                int nr = 0, nc = 0, ns = 0;\n                bool ok = true;\n                for (int j = 0; j < P; ++j) {\n                    int idt = 0;\n                    for (int k = 0; k < (int)(master[j].size()); ++k) {\n                        char ch = master[j][k];\n                        if (ch != '.') {\n                            idt = k; break;\n                        }\n                    }\n                    if (nr * r + nc * c + ns * s != idt) {\n                        ok = false; break;\n                    }\n                    for (char& ch : master[j]) {\n                        if (ch == '(') nr++;\n                        if (ch == ')') nr--;\n                        if (ch == '{') nc++;\n                        if (ch == '}') nc--;\n                        if (ch == '[') ns++; \n                        if (ch == ']') ns--; \n                    }\n                }\n                if (!ok) continue;\n\n                // apply the rule (r, c, s) to the sample\n                int idt = 0;\n                for (int j = 0; j < Q; ++j) {\n                    solutions[j].insert(idt);\n                    for (char& ch : sample[j]) {\n                        if (ch == '(') idt += r;\n                        if (ch == ')') idt -= r;\n                        if (ch == '{') idt += c;\n                        if (ch == '}') idt -= c;\n                        if (ch == '[') idt += s;\n                        if (ch == ']') idt -= s;\n                    }\n                }\n            }\n        }\n    }\n\n    for (int j = 0; j < Q; ++j) {\n        if (j > 0) cout << \" \";\n        cout << (solutions[j].size() == 1 ? *begin(solutions[j]) : -1);\n    }\n    cout << endl;\n}\n\nint main() {\n    while (true) {\n        cin >> P >> Q;\n        if (P == 0 && Q == 0) break;\n        for (int j = 0; j < P; ++j) {\n            cin >> master[j];\n        }\n        for (int j = 0; j < Q; ++j) {\n            cin >> sample[j];\n        }\n        solve();\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#include<assert.h>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef int Def;\ntypedef pair<Def,Def> pii;\ntypedef vector<Def> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<Def,pii> pip;\ntypedef vector<pip>vip;\n//#define mt make_tuple\n//typedef tuple<double,int,double> tp;\n//typedef vector<tp> vt;\ntemplate<typename A,typename B>bool cmin(A &a,const B &b){return a>b?(a=b,true):false;}\ntemplate<typename A,typename B>bool cmax(A &a,const B &b){return a<b?(a=b,true):false;}\nconst double PI=acos(-1);\nconst double EPS=1e-7;\nDef inf=sizeof(Def)==sizeof(long long)?2e18:1e9;\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nint MOD;\nint main(){\n\tint n,m;\n\twhile(cin>>n>>m,n){\n\t\tvvi in;\n\t\tint a=0,b=0,c=0;\n\t\trep(i,n+m){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tint t=0,d=0;\n\t\t\twhile(t<s.size()&&s[t]=='.')t++;\n\t\t\tin.pb(vi{t,a,b,c});\n\t\t\twhile(t<s.size()){\n\t\t\t\tif(s[t]=='(')a++;\n\t\t\t\tif(s[t]==')')a--;\n\t\t\t\tif(s[t]=='{')b++;\n\t\t\t\tif(s[t]=='}')b--;\n\t\t\t\tif(s[t]=='[')c++;\n\t\t\t\tif(s[t]==']')c--;\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n//\t\trep(i,n+m){rep(j,4)cout<<\" \"<<in[i][j];cout<<endl;}\n\t\tvector<set<int> >out(m);\n\t\tloop(i,1,21)loop(j,1,21)loop(k,1,21){\n\t\t\tbool h=true;\n\t\t\trep(x,n)if(i*in[x][1]+j*in[x][2]+k*in[x][3]!=in[x][0])h=false;\n\t\t\tif(h)rep(x,m)out[x].insert(i*in[n+x][1]+j*in[n+x][2]+k*in[n+x][3]);\n\t\t}\n\t\trep(i,m)if(out[i].size()==1)cout<<*(out[i].begin())<<\" \";\n\t\telse cout<<-1<<\" \";\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nint main(){\n  int P, Q;\n  while(cin>>P>>Q && P){\n    vector<string> pcode(P); \n    vector<string> qcode(Q);\n    REP(i, P) cin>>pcode[i];\n    REP(i, Q) cin>>qcode[i];\n    vector<int> indent(P - 1);\n    int rcs[9][3] = {};\n    int rcs2[10][3] = {};\n    {\n      int cnt[3] = {};\n      string add = \"({[\";\n      string sub = \")}]\";\n      REP(i, P){\n        int idt = 0;\n        bool bgn = false;\n        REP(j, pcode[i].size()){\n          if(pcode[i][j] == '.' && !bgn) idt++;\n          else bgn = true;\n          REP(k, 3) {\n            if(pcode[i][j] == add[k]) cnt[k]++;\n            if(pcode[i][j] == sub[k]) cnt[k]--;\n          }\n        }\n        if(i != 0) indent[i - 1] = idt;\n        if(i != P - 1) memcpy(rcs[i], cnt, sizeof(cnt));\n      }\n    }\n    {\n      int cnt[3] = {};\n      string add = \"({[\";\n      string sub = \")}]\";\n      REP(i, Q){\n        REP(j, qcode[i].size()){\n          REP(k, 3) {\n            if(add[k] == qcode[i][j]) cnt[k]++;\n            if(sub[k] == qcode[i][j]) cnt[k]--;\n          }\n        }\n        if(i != Q - 1) memcpy(rcs2[i + 1], cnt, sizeof(cnt));\n      }\n    }\n    set<int> ans[10];\n    for(int R = 1; R <= 20; R++){\n      for(int C = 1; C <= 20; C++){\n        for(int S = 1; S <= 20; S++){\n          bool ok = true;\n          REP(i, P - 1) if(R * rcs[i][0] + C * rcs[i][1] + S * rcs[i][2] != indent[i]) ok = false;\n          if(!ok) continue;\n          REP(i, Q) ans[i].insert(R * rcs2[i][0] + C * rcs2[i][1] + S * rcs2[i][2]);\n        }\n      }\n    }\n    REP(i, Q){\n      if(ans[i].size() == 1) cout<<*ans[i].begin();\n      else cout<<-1;\n      if(i == Q - 1) cout<<endl;\n      else cout<<\" \";\n    }\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <deque>\n#include <queue>\n#include <stack>\n#include <functional>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define ALL(v) (v).begin(), (v).end()\n#define LENGTHOF(x) (sizeof(x) / sizeof(*(x)))\n#define AFILL(a, b) fill((int*)a, (int*)(a + LENGTHOF(a)), b)\n#define SQ(x) ((x)*(x))\n#define Mod(x, mod) (((x)+(mod)%(mod))\n#define MP make_pair\n#define PB push_back\n#define Fi first\n#define Se second\n#define INF (1<<29)\n#define EPS 1e-10\n#define MOD 1000000007\n\ntypedef pair<int, int> pi;\ntypedef pair<int, pi> pii;\ntypedef vector<int> vi;\ntypedef queue<int> qi;\ntypedef long long ll;\n\nvoid bra(char ch, int &r, int &c, int &s)\n{\n  if(ch == '(') r=r+1; if(ch == ')') r=r-1;\n  if(ch == '{') c=c+1; if(ch == '}') c=c-1;\n  if(ch == '[') s=s+1; if(ch == ']') s=s-1;\n}\n\nint check(int r, int c, int s, vector<int> exp[4]){\n  rep(i, exp[0].size()){\n    //    cout << exp[0][i]*r + exp[1][i]*c + exp[2][i]*s << \" \" << exp[3][i] << endl;\n    if(exp[0][i]*r + exp[1][i]*c + exp[2][i]*s != exp[3][i]) return 0;\n  }\n  return 1;\n}\n\nint main()\n{\n  int p, q;\n  while(1){\n    cin >> p >> q;\n    if(!q && !p) return 0;\n    set<int>R, C, S;\n    vector<int> exp[4];\n    map<pii, int>tuple;\n    int r=0, c=0, s=0;    \n    rep(i, p){\n      string P; cin >> P;\n      int peri = 0;\n      rep(j, P.size()){\n\tif(P[j] != '.'){\n\t  exp[0].push_back(r); exp[1].push_back(c); exp[2].push_back(s);\n\t  exp[3].push_back(peri);\n\t  tuple[pii(r,pi(c,s))] = peri;\n\t  //\t  cout << r << \" \" << c << \" \" << s << \" \" << peri << endl;\n\t  for(;j<P.size();j++)\n\t    bra(P[j], r, c, s);\n\t  break;\n\t}\n\tperi++;\n      }\n    }\n\n    rep(r,20) rep(c,20) rep(s,20){\n      if(check(r+1, c+1, s+1, exp)){\n\tR.insert(r+1);\n\tC.insert(c+1);\n\tS.insert(s+1);\n      }\n    }\n\n    //    cout << R.size() << endl;\n    //    for(auto r: R) cout << r << \" \"; cout << endl;\n    //    for(auto r: C) cout << r << \" \";cout << endl;\n    //    for(auto r: S) cout << r << \" \";cout << endl;\n    //    Cout << *R.begin() << \" \" << *C.begin() << \" \" << *S.begin() << endl;\n    r=0, c=0, s=0;\n    rep(i, q){\n      if(i!=0) cout << \" \";\n      string Q; cin >>Q;\n      if(tuple.find(pii(r,pi(c,s))) != tuple.end())\n\tcout << tuple[pii(r,pi(c,s))];\n      else if(R.size() != 1 && r || C.size() != 1 && c || S.size() != 1 && s)\n\tcout << -1;\n      else\n\tcout << (*R.begin())*r + (*C.begin())*c + (*S.begin())*s;\n      for(auto x: Q)\n\tbra(x, r, c, s);\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <algorithm>\n#define f first\n#define s second\n#define R PP(1,0,0)\n#define C PP(0,1,0)\n#define S PP(0,0,1)\nusing namespace std;\ntypedef pair <int,int> P;\ntypedef pair <int,P> iP;\nint p,q;\nstring str[2][11];\nmap<iP,int> M;\niP PP(int a,int b,int c){return iP(a,P(b,c));}\niP E[]={R,C,S};\n\nint gcd(int a,int b,int c,int d){\n  a= a&&b? __gcd(a,b):max(a,b);\n  c= c&&d? __gcd(c,d):max(c,d);\n  a= a&&c? __gcd(a,c):max(a,c);\n  return max(1,a);\n}\n\nvoid solve(){\n  if(M.size()==2&&M.count(PP(1,1,1))) M[R]=M[C]=M[S]=M[PP(1,1,1)]/3;\n\n  map<iP,int> ::iterator i,j;\n  for(int k=0;k<3;k++){\n    for(i=M.begin();i!=M.end();i++)\n      for(j=M.begin();j!=M.end();j++){\n\tint A[]={i->f.f,i->f.s.f,i->f.s.s,i->s};\n\tint X[]={j->f.f,j->f.s.f,j->f.s.s,j->s};\n\tint D,l=A[k],r=X[k],f=1;\n\tD=gcd(l,r,0,0);\n\tfor(int m=0;m<4;m++) if((A[m]=(A[m]*(r/D)-X[m]*(l/D)))<0)f=0;\n\tD=gcd(A[0],A[1],A[2],A[3]);\n\tfor(int m=0;m<4;m++) A[m]/=D;\n\tif(f&&!M.count(PP(A[0],A[1],A[2])))M[PP(A[0],A[1],A[2])]=A[3];\n      }\n  }\n}\n\n\nint cal(int a,int b,int c){\n  int d=gcd(a,b,c,0);\n  a/=d,b/=d,c/=d;\n  if(M.count(PP(a,b,c))) return M[PP(a,b,c)]*d;\n  int fa=M.count(R),fb=M.count(C),fc=M.count(S),abc=fa+fb+fc;\n  if(abc/3) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  if(abc/2&&!a==!fa&&!b==!fb&&!c==!fc) return (M[R]*a+M[C]*b+M[S]*c)*d;\n  return -1;\n}\n\nvoid in(){\n  M.clear();\n  int cnt[3]={},d;\n  for(int i=0;i<p;i++)\n    for(int j=0,f=1,dot=0;j<str[0][i].size();j++){\n      char ch=str[0][i][j];\n      if(ch=='.')dot++;\n      else if(f)f=0,d=gcd(cnt[0],cnt[1],cnt[2],dot),M[PP(cnt[0]/d,cnt[1]/d,cnt[2]/d)]=dot/d;\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n}\n\nvoid out(){\n  int cnt[3]={},e[3];\n  for(int i=0;i<3;i++)e[i]= M.count(E[i])? M[E[i]]:-1;\n\n  for(int i=0;i<q;i++){\n    for(int j=0;j<3;j++){\n      M.erase(E[j]);\n      if(e[j]!=-1)M[E[j]]=e[j];\n    }\n    if(i)cout <<\" \";\n    cout <<cal(cnt[0],cnt[1],cnt[2]);\n    for(int j=0;j<str[1][i].size();j++){\n      char ch=str[1][i][j];\n      if(ch=='('||ch=='['||ch=='{')cnt[ch/50]++;\n      if(ch==')'||ch==']'||ch=='}')cnt[ch/50]--;\n    }\n  }\n  cout <<endl;\n}\n\nint main(){\n  while(1){\n    cin>>p>>q;\n    if(!p&&!q) break;\n    for(int i=0;i<p;i++)cin>>str[0][i];\n    for(int i=0;i<q;i++)cin>>str[1][i];\n    in();\n    solve();\n    out();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<tuple>\nusing namespace std;\nint x[11][3], y[11][3], b[11];\nint n, m; string S[10], T[10];\nvoid init() {\n\tfor (int i = 0; i < 33; i++) { x[i / 3][i % 3] = 0; y[i / 3][i % 3] = 0; }\n\tfor (int i = 0; i < n; i++) {\n\t\tx[i + 1][0] = x[i][0]; x[i + 1][1] = x[i][1]; x[i + 1][2] = x[i][2]; bool Ind = true;\n\t\tfor (int j = 0; j < S[i].size(); j++) {\n\t\t\tif (S[i][j] != '.')Ind = false; if (Ind == true)b[i] = j + 1;\n\t\t\tif (S[i][j] == '(')x[i + 1][0]++; if (S[i][j] == ')')x[i + 1][0]--;\n\t\t\tif (S[i][j] == '{')x[i + 1][1]++; if (S[i][j] == '}')x[i + 1][1]--;\n\t\t\tif (S[i][j] == '[')x[i + 1][2]++; if (S[i][j] == ']')x[i + 1][2]--;\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\ty[i + 1][0] = y[i][0]; y[i + 1][1] = y[i][1]; y[i + 1][2] = y[i][2];\n\t\tfor (int j = 0; j < T[i].size(); j++) {\n\t\t\tif (T[i][j] == '(')y[i + 1][0]++; if (T[i][j] == ')')y[i + 1][0]--;\n\t\t\tif (T[i][j] == '{')y[i + 1][1]++; if (T[i][j] == '}')y[i + 1][1]--;\n\t\t\tif (T[i][j] == '[')y[i + 1][2]++; if (T[i][j] == ']')y[i + 1][2]--;\n\t\t}\n\t}\n}\nvector<tuple<int,int,int>> search() {\n\tvector<tuple<int, int, int>>vec;\n\tfor (int i = 1; i <= 20; i++) {\n\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\tbool OK = true;\n\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\tif ((x[l][0] * i + x[l][1] * j + x[l][2] * k) != b[l])OK = false;\n\t\t\t\t}\n\t\t\t\tif (OK == true)vec.push_back(make_tuple(i, j, k));\n\t\t\t}\n\t\t}\n\t}\n\treturn vec;\n}\nint main() {\n\twhile (true) {\n\t\tcin >> n >> m; if (n == 0 && m == 0)break;\n\t\tfor (int i = 0; i < n; i++)cin >> S[i];\n\t\tfor (int i = 0; i < m; i++)cin >> T[i];\n\t\tvector<int>res[10]; init(); search();\n\t\tvector<tuple<int, int, int>>F = search();\n\t\tfor (int i = 0; i < F.size(); i++) {\n\t\t\tint a1 = get<0>(F[i]), a2 = get<1>(F[i]), a3 = get<2>(F[i]);\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tint TT = y[j][0] * a1 + y[j][1] * a2 + y[j][2] * a3;\n\t\t\t\tfor (int k = 0; k < res[j].size(); k++) {\n\t\t\t\t\tif (res[j][k] == TT)goto E;\n\t\t\t\t}\n\t\t\t\tres[j].push_back(TT); E:;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i)cout << ' ';\n\t\t\tif (res[i].size() >= 2) { cout << \"-1\"; }\n\t\t\telse { cout << res[i][0]; }\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s); sin>>v; return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nbool ok(vs &P,int r,int c,int s){\n\tint oR=0,oc=0,os=0;\n\tREP(lineno,P.size()){\n\t\tstring line=P[lineno];\n\t\tint num_indent=0;\n\t\tREP(chno,line.size()){\n\t\t\tif(line[chno]=='.'){\n\t\t\t\tnum_indent++;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(num_indent!=oR*r+oc*c+os*s){\n\t\t\treturn false;\n\t\t}\n\t\tREP(chno,line.size()){\n\t\t\tchar c=line[chno];\n\t\t\tswitch(c){\n\t\t\tcase '(':\n\t\t\t\toR++;break;\n\t\t\tcase '{':\n\t\t\t\toc++;break;\n\t\t\tcase '[':\n\t\t\t\tos++;break;\n\t\t\tcase ')':\n\t\t\t\toR--;break;\n\t\t\tcase '}':\n\t\t\t\toc--;break;\n\t\t\tcase ']':\n\t\t\t\tos--;break;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nstruct indent{\n\tint r,c,s;\n\tindent(int r,int c,int s):r(r),c(c),s(s){}\n};\n\nint main(){\n\tint p,q;\n\twhile(cin>>p>>q,p|q){\n\t\tvs P(p);\n\t\tREP(i,p){\n\t\t\tcin>>P[i];\n\t\t}\n\t\tvs Q(q);\n\t\tREP(i,q){\n\t\t\tcin>>Q[i];\n\t\t}\n\t\tvector<indent> valid_indents;\n\t\tFOR(r,1,20+1){\n\t\t\tFOR(c,1,20+1){\n\t\t\t\tFOR(s,1,20+1){\n\t\t\t\t\tif(ok(P,r,c,s)){\n\t\t\t\t\t\tvalid_indents.push_back(indent(r,c,s));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint oR=0,oc=0,os=0;\n\t\tREP(i,q){\n\t\t\tstring line=Q[i];\n\t\t\tset<int> valid_total_indents;\n\t\t\tREP(j,valid_indents.size()){\n\t\t\t\tint total_indent=0;\n\t\t\t\ttotal_indent+=oR*valid_indents[j].r;\n\t\t\t\ttotal_indent+=oc*valid_indents[j].c;\n\t\t\t\ttotal_indent+=os*valid_indents[j].s;\n\t\t\t\tvalid_total_indents.insert(total_indent);\n\t\t\t}\n\t\t\tif(valid_total_indents.size()==1){\n\t\t\t\tcout<<(i==0?\"\":\" \")<<*valid_total_indents.begin();\n\t\t\t}else{\n\t\t\t\tcout<<(i==0?\"\":\" \")<<-1;\n\t\t\t}\n\t\t\tREP(k,line.size()){\n\t\t\t\tswitch(line[k]){\n\t\t\t\tcase '(':\n\t\t\t\t\toR++;break;\n\t\t\t\tcase '{':\n\t\t\t\t\toc++;break;\n\t\t\t\tcase '[':\n\t\t\t\t\tos++;break;\n\t\t\t\tcase ')':\n\t\t\t\t\toR--;break;\n\t\t\t\tcase '}':\n\t\t\t\t\toc--;break;\n\t\t\t\tcase ']':\n\t\t\t\t\tos--;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\ntypedef long long ll;\nusing namespace std;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef vector<vector<int> > Matrix;\nint p,q;\nint R,C,S;\nint squnum=0,rounum=0,curnum=0;\nint testrounum=0,testsqunum=0,testcurnum=0;\nint squind=-1,rouind=-1,curind=-1;\nint ansrouind=-1,anssquind=-1,anscurind=-1;\nint main()\n{\n  while(cin >> p >> q && p)\n    {\n      string ex[15];\n      string test[15];\n      vector<int> ans(q,-2);\n      for (int i = 0; i < p; ++i)\n\t{\n\t  cin >> ex[i];\n\t}\n      for (int i = 0; i < q; ++i)\n\t{\n\t  cin >> test[i];\n\t}\n      for (int r = 1; r <= 20; ++r)\n\t{\n\t  for (int c = 1; c <= 20; ++c)\n\t    {\n\t      for (int s = 1; s <= 20; ++s)\n\t\t{\n\t\t  rounum=0,curnum=0,squnum=0;\n\t\t  bool niceindent=true;\n\t\t  for (int i = 0; i < p; ++i)\n\t\t    {\n\t\t      bool notperi=false;\n\t\t      int ind=0;\n\t\t      for(int j=0;j<int(ex[i].size());j++)\n\t\t\t{\n\t\t\t  if(ex[i][j]=='.' && !notperi)\n\t\t\t    {\n\t\t\t      ind++;\n\t\t\t      continue;\n\t\t\t    }\n\t\t\t  else if(ex[i][j]!='.' && !notperi)\n\t\t\t    {\n\t\t\t      notperi=true;\n\t\t\t      int tmp=r*rounum+c*curnum+s*squnum;\n\t\t\t      if(tmp==ind)\n\t\t\t\t{\n\t\t\t\t  rouind=r;\n\t\t\t\t  curind=c;\n\t\t\t\t  squind=s;\n\t\t\t\t}\n\t\t\t      else niceindent=false;\n\t\t\t    }\n\t\t\t  if(ex[i][j]=='(')rounum++;\n\t\t\t  else if(ex[i][j]=='{')curnum++;\n\t\t\t  else if(ex[i][j]=='[')squnum++;\n\t\t\t  else if(ex[i][j]==')')rounum--;\n\t\t\t  else if(ex[i][j]==']')squnum--;\n\t\t\t}\n\t\t    }\n\t\t  if(!niceindent) continue;\n\t\t  if(niceindent)\n\t\t    {\n\t\t      testrounum=0,testsqunum=0,testcurnum=0;\n\t\t      for (int i = 0; i < q; ++i)\n\t\t\t{\n\t\t\t  bool testnotperi=false;\n\t\t\t  int testind=0;\n\t\t\t  int testtmp=0;\n\t\t\t  for(int j=0;j<int(test[i].size());j++)\n\t\t\t    {\n\t\t\t      if(test[i][j]=='.' && !testnotperi)\n\t\t\t\t{\n\t\t\t\t  testind++;\n\t\t\t\t  continue;\n\t\t\t\t}\n\t\t\t      else if(test[i][j]!='.' && !testnotperi)\n\t\t\t\t{\n\t\t\t\t  testnotperi=true;\n\t\t\t\t  testtmp=rouind*testrounum+curind*testcurnum+squind*testsqunum;\n\t\t\t\t  if(ans[i]==-2) ans[i]=testtmp;\n\t\t\t\t  else if(ans[i]!=testtmp) ans[i]=-1;\n\t\t\t\t  //cout << tmp << endl;\n\t\t\t\t}\n\t\t\t      if(test[i][j]=='(')testrounum++;\n\t\t\t      else if(test[i][j]=='{')testcurnum++;\n\t\t\t      else if(test[i][j]=='[')testsqunum++;\n\t\t\t      else if(test[i][j]==')')testrounum--;\n\t\t\t      else if(test[i][j]==']')testsqunum--;\n\t\t\t      else if(test[i][j]=='}')testcurnum--;\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n      for(int i=0;i<q;i++)\n\t{\n\t  cout << ans[i] << (i==q-1 ? '\\n' : ' ');\n\t}\n    }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\n\n#define Maxn 110\nint r,s,c;\nchar sa[Maxn];\nint rr,ss,cc;\nint n,m;\n\nint main()\n{\n    while(~scanf(\"%d%d\",&n,&m))\n    {\n        rr=ss=cc=0;\n        r=s=c=0;\n        getchar();\n        int sumrs=0,sumrc=0,sumsc=0,sum=0;\n\n        for(int i=1;i<=n;i++)\n        {\n            gets(sa);\n            int a=0;\n            while(a<strlen(sa)&&sa[a]=='.')\n               a++;\n            if(rr&&!ss&&!cc)\n                r=a/rr;\n            if(ss&&!rr&&!cc)\n                s=a/ss;\n            if(cc&&!ss&&!rr)\n                c=a/cc;\n\n            if(r&&s)\n            {\n                if(cc)\n                    c=(a-r*rr-s*ss)/cc;\n                sumrs=r+s;\n            }\n            else if(r&&c)\n            {\n                if(ss)\n                    s=(a-r*rr-c*cc)/ss;\n                sumrc=r+c;\n            }\n            else if(s&&c)\n            {\n                if(rr)\n                    r=(a-s*ss-c*cc)/rr;\n                sumsc=s+c;\n            }\n            else if(r)\n                sumsc=a-r*rr;\n            else if(s)\n                sumrc=a-s*ss;\n            else if(c)\n                sumrs=a-c*cc;\n            if(!r&&!s&&!c)\n            {\n                if(rr==ss&&ss==cc&&rr)\n                    sum=a/rr;\n                if(rr)\n                {\n                    if(!ss&&!cc)\n                        r=a/rr;\n                }\n                else if(ss)\n                {\n                    if(!rr&&!cc)\n                        s=a/ss;\n                }\n                else if(cc)\n                {\n                    if(!ss&&!rr)\n                        c=a/cc;\n                }\n            }\n            //printf(\"i:%d r:%d s:%d c:%d rr:%d ss:%d cc:%d\\n\",i,r,s,c,rr,ss,cc);\n\n            while(a<strlen(sa))\n            {\n                if(sa[a]=='(')rr++;\n                if(sa[a]==')')rr--;\n                if(sa[a]=='[')ss++;\n                if(sa[a]==']')ss--;\n                if(sa[a]=='{')cc++;\n                if(sa[a]=='}')cc--;\n                a++;\n            }\n            //printf(\"i:%d r:%d s:%d c:%d rr:%d ss:%d cc:%d\\n\",i,r,s,c,rr,ss,cc);\n\n            //printf(\"::\");\n\n        }\n        rr=ss=cc=0;\n        printf(\"0\");\n        gets(sa);\n        int tt=0;\n        while(tt<strlen(sa))\n        {\n            if(sa[tt]=='(')rr++;\n            if(sa[tt]==')')rr--;\n            if(sa[tt]=='[')ss++;\n            if(sa[tt]==']')ss--;\n            if(sa[tt]=='{')cc++;\n            if(sa[tt]=='}')cc--;\n            tt++;\n        }\n        for(int i=2;i<=m;i++)\n        {\n            gets(sa);\n            int j=0;\n            while(sa[j]=='.')\n                j++;\n            if(rr&&ss&&cc)\n            {\n                if(r&&s&&c)\n                    printf(\" %d\",rr*r+s*ss+c*cc);\n                else if(rr==ss&&ss==cc&&sum)\n                    printf(\" %d\",rr*sum);\n                else\n                    printf(\" -1\");\n            }\n            else if(rr&&ss)\n            {\n                if(r&&s)\n                    printf(\" %d\",r*rr+s*ss);\n                else if(rr==ss&&sumrs)\n                    printf(\" %d\",rr*sumrs);\n                else\n                    printf(\" -1\");\n            }\n            else if(rr&cc)\n            {\n                if(r&&c)\n                    printf(\" %d\",r*rr+c*cc);\n                else if(rr==cc&&sumrc)\n                    printf(\" %d\",rr*sumrc);\n                else\n                    printf(\" -1\");\n            }\n            else if(ss&&cc)\n            {\n                if(s&&c)\n                    printf(\" %d\",s*ss+c*cc);\n                else if(ss==cc&&sumsc)\n                    printf(\" %d\",ss*sumsc);\n                else\n                    printf(\" -1\");\n            }\n            else if(rr)\n            {\n                if(r)\n                    printf(\" %d\",r*rr);\n                else\n                    printf(\" -1\");\n            }\n            else if(ss)\n            {\n                if(s)\n                    printf(\" %d\",s*ss);\n                else\n                    printf(\" -1\");\n            }\n            else if(cc)\n            {\n                if(s)\n                    printf(\" %d\",c*cc);\n                else\n                    printf(\" -1\");\n            }\n            else\n                printf(\" 0\");\n\n           while(j<strlen(sa))\n            {\n                if(sa[j]=='(')rr++;\n                if(sa[j]==')')rr--;\n                if(sa[j]=='[')ss++;\n                if(sa[j]==']')ss--;\n                if(sa[j]=='{')cc++;\n                if(sa[j]=='}')cc--;\n                j++;\n            }\n\n        }\n        putchar('\\n');\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    //    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n \nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==30) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n \nvoid UpDate(){\n  /*int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n    }*/\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n\nint tt[256],rr[256];\nint abs(int x) { if (x < 0)return -x; return x; }\nint main() {\n\ttt['('] = 1; tt[')'] = 1;\n\ttt['{'] = 2; tt['}'] = 2;\n\ttt['['] = 3; tt[']'] = 3;\n\trr['('] = 1; rr[')'] = -1;\n\trr['{'] = 1; rr['}'] = -1;\n\trr['['] = 1; rr[']'] = -1;\n\n\twhile (1) {\n\t\tint n, m;\n\t\tint cnt1[11] = { 0, }, cnt2[11] = { 0, };\n\t\tint CX1[11][4] = { 0, }, CX2[11][4] = { 0, };\n\t\tint ans[11] = { 0, };\n\t\tint cnt[11] = { 0, };\n\t\tint i, j;\n\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tif (n == 0 && m == 0)break;\n\t\tchar x[100];\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%s\", x);\n\t\t\tbool flag = 1;\n\t\t\tfor (j = 0; x[j]; j++) {\n\t\t\t\tif (x[j] != '.')flag = 0;\n\t\t\t\tif (flag&&x[j] == '.')cnt1[i]++;\n\t\t\t\tCX1[i][tt[x[j]]] += rr[x[j]];\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < m; i++) {\n\t\t\tans[i] = -2;\n\t\t\tscanf(\"%s\", x);\n\t\t\tbool flag = 1;\n\t\t\tfor (j = 0; x[j]; j++) {\n\t\t\t\tif (x[j] != '.')flag = 0;\n\t\t\t\tif (flag&&x[j] == '.')cnt2[i]++;\n\t\t\t\tCX2[i][tt[x[j]]] += rr[x[j]];\n\t\t\t}\n\t\t}\n\t\tint r, c, s;\n\t\tfor (r = 1; r <= 20; r++) {\n\t\t\tfor (c = 1; c <= 20; c++) {\n\t\t\t\tfor (s = 1; s <= 20; s++) {\n\t\t\t\t\tint S = 0;\n\t\t\t\t\tbool flag = 1;\n\t\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\t\tif (cnt1[i] != S) {\n\t\t\t\t\t\t\tflag = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tS += CX1[i][1] * r + CX1[i][2] * c + CX1[i][3] * s;\n\t\t\t\t\t}\n\t\t\t\t\tif (!flag)continue;\n\t\t\t\t\tfor (i = 0; i < m; i++) {\n\t\t\t\t\t\tif (ans[i] == -2)ans[i] = S;\n\t\t\t\t\t\tif (ans[i] != S)ans[i] = -1;\n\t\t\t\t\t\tS += CX2[i][1] * r + CX2[i][2] * c + CX2[i][3] * s;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < m; i++) {\n\t\t\tprintf(\"%d \", ans[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <set>\n#include <vector>\n#include <string>\n#include <map>\n#include <algorithm>\n\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n\nusing namespace std;\n\nint main() {\n  while(1){\n    int p,q;\n    cin>>p>>q;\n    if(!p)break;\n    int prob[21][21][21];\n    REP(i,21)REP(j,21)REP(k,21) prob[i][j][k] = 1;\n    int sr = 0, sc = 0, ss = 0;\n    REP(i,p) {\n      string s;\n      cin>>s;\n      int ind = 0;\n      while(s[ind] == '.') ++ind;\n      REP(i,21)REP(j,21)REP(k,21) {\n        int v = i * sr + j * sc + k * ss; \n        if (v != ind) prob[i][j][k] = 0;\n      }\n      REP(j,s.size()) {\n        switch(s[j]) {\n          case '(': ++sr; break;\n          case ')': --sr; break;\n          case '{': ++sc; break;\n          case '}': --sc; break;\n          case '[': ++ss; break;\n          case ']': --ss; break;\n        }\n      }\n    }\n    sr=sc=ss=0;\n    REP(i,q) {\n      if (i) cout << ' ';\n      string s;\n      cin>>s;\n      set<int> p;\n      REP(i,21)REP(j,21)REP(k,21) {\n        if (i&&j&&k&&prob[i][j][k]) {\n          int v = i * sr + j * sc + k * ss; \n          p.insert(v);\n        }\n      }\n      if (p.size() == 1) cout << *begin(p);\n      else cout << -1;\n      REP(j,s.size()) {\n        switch(s[j]) {\n          case '(': ++sr; break;\n          case ')': --sr; break;\n          case '{': ++sc; break;\n          case '}': --sc; break;\n          case '[': ++ss; break;\n          case ']': --ss; break;\n        }\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#include<assert.h>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef int Def;\ntypedef pair<Def,Def> pii;\ntypedef vector<Def> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<Def,pii> pip;\ntypedef vector<pip>vip;\n//#define mt make_tuple\n//typedef tuple<double,int,double> tp;\n//typedef vector<tp> vt;\ntemplate<typename A,typename B>bool cmin(A &a,const B &b){return a>b?(a=b,true):false;}\ntemplate<typename A,typename B>bool cmax(A &a,const B &b){return a<b?(a=b,true):false;}\nconst double PI=acos(-1);\nconst double EPS=1e-7;\nDef inf=sizeof(Def)==sizeof(long long)?2e18:1e9;\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nint MOD;\nint main(){\n\tint n,m;\n\twhile(cin>>n>>m,n){\n\t\tvvi in;\n\t\tint a=0,b=0,c=0;\n\t\trep(i,n+m){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tint t=0,d=0;\n\t\t\twhile(t<s.size()&&s[t]=='.')t++;\n\t\t\tin.pb(vi{t,a,b,c});\n\t\t\twhile(t<s.size()){\n\t\t\t\tif(s[t]=='(')a++;\n\t\t\t\tif(s[t]==')')a--;\n\t\t\t\tif(s[t]=='{')b++;\n\t\t\t\tif(s[t]=='}')b--;\n\t\t\t\tif(s[t]=='[')c++;\n\t\t\t\tif(s[t]==']')c--;\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n//\t\trep(i,n+m){rep(j,4)cout<<\" \"<<in[i][j];cout<<endl;}\n\t\tvector<set<int> >out(m);\n\t\tloop(i,1,21)loop(j,1,21)loop(k,1,21){\n\t\t\tbool h=true;\n\t\t\trep(x,n)if(i*in[x][1]+j*in[x][2]+k*in[x][3]!=in[x][0])h=false;\n\t\t\tif(h)rep(x,m)out[x].insert(i*in[n+x][1]+j*in[n+x][2]+k*in[n+x][3]);\n\t\t}\n\t\trep(i,m){\n\t\t\tif(i)cout<<\" \";\n\t\t\tif(out[i].size()==1)cout<<*(out[i].begin());\n\t\t\telse cout<<-1;\n\t\t}\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define MAX 100\nstruct state{  int r,c,s,sum;};\n\nvector<int> R,C,S;\nint N,M;\nstring t[MAX];\nint u[MAX],rc[MAX],cc[MAX],sc[MAX];\n\nvoid init(){\n  for(int i=0;i<MAX;i++){\n    u[i]=0;\n    rc[i]=0;\n    cc[i]=0;\n    sc[i]=0;\n  }\n}\n\nvector<int> change(vector<int> vec){\n  vector<int> res;\n  sort(vec.begin(),vec.end());\n  for(int i=0;i<(int)vec.size();i++){\n    if(i&&vec[i]==vec[i-1])continue;\n    res.push_back(vec[i]);\n  }\n  return res;\n}\n\nbool check(int x,int y,int z){\n  for(int i=0;i+1<N;i++)\n    if(x*rc[i]+y*cc[i]+z*sc[i]!=(u[i+1]-u[i]))return false;\n  return true;\n}\n\nvoid solve(){\n  R.clear();\n  C.clear();\n  S.clear();\n  for(int i=1;i<=20;i++){\n    for(int j=1;j<=20;j++){\n      for(int k=1;k<=20;k++){\n\tif(check(i,j,k)){\n\t  R.push_back(i);\n\t  C.push_back(j);\n\t  S.push_back(k);\n\t}\n      }\n    }\n  }\n}\n\nint calc(int x,int y,int z){\n  //cout<<endl;\n  set<int> T;\n  int res;\n  for(int i=0;i<(int)R.size();i++){\n    res=R[i]*x+C[i]*y+S[i]*z;\n    //cout<<x<<' '<<y<<' '<<z<<' '<<res<<endl;\n    //cout<<R[i]<<' '<<C[i]<<' '<<S[i]<<' '<<res<<endl;\n    T.insert(R[i]*x+C[i]*y+S[i]*z);\n  }\n  if(T.size()!=1)return -1;\n  return res;  \n}\n\nint main(){\n  while(1){\n    cin>>N>>M;\n    if(N==0&&M==0)break;\n    init();\n    for(int i=0;i<N;i++){      \n      cin>>t[i];\n      bool flg=true;\n      for(int j=0;j<(int)t[i].size();j++){\n\tif(t[i][j]!='.')flg=false;\n\tif(flg)u[i]++;\n\tif(t[i][j]=='(')rc[i]++;\n\tif(t[i][j]==')')rc[i]--;\n\tif(t[i][j]=='[')cc[i]++;\n\tif(t[i][j]==']')cc[i]--;\n\tif(t[i][j]=='{')sc[i]++;\n\tif(t[i][j]=='}')sc[i]--;\n      }\n     \n    }\n\n    solve();\n    \n    string str;\n    int x=0,y=0,z=0;\n    cout<<\"0\";\n    for(int i=0;i+1<M;i++){\n      cin>>str;\n      for(int j=0;j<(int)str.size();j++){\n\tif(str[j]=='(')x++;\n\tif(str[j]==')')x--;\n\tif(str[j]=='[')y++;\n\tif(str[j]==']')y--;\n\tif(str[j]=='{')z++;\n\tif(str[j]=='}')z--;\n      }\n      cout<<\" \"<<calc(x,y,z);\n    }\n    cout<<endl;\n    cin>>str;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#include<CSpreadSheet.h>\n\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<sstream>\n#include<cstdlib>\n#include<string>\n#include<string.h>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<stack>\n#include<list>\n#include<queue>\n#include<ctime>\n#include<bitset>\n#include<cmath>\n#define eps 1e-6\n#define INF 0x3f3f3f3f\n#define PI acos(-1.0)\n#define ll __int64\n#define LL long long\n#define lson l,m,(rt<<1)\n#define rson m+1,r,(rt<<1)|1\n#define M 1000000007\n//#pragma comment(linker, \"/STACK:1024000000,1024000000\")\nusing namespace std;\n\n#define Maxn 110\nint r,s,c;\nint rr,ss,cc;\nchar sa[Maxn];\nint len,n,m,a,p;\n\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n   //freopen(\"out.txt\",\"w\",stdout);\n   while(scanf(\"%d%d\",&n,&m)&&n+m)\n   {\n       //getchar();\n       r=0,s=0,c=0;\n       rr=0,ss=0,cc=0;\n       int sum=0,sumrs=0,sumrc=0,sumsc=0;\n\n       for(int i=1;i<=n;i++)\n       {\n           //gets(sa);\n           scanf(\"%s\",sa);\n           len=strlen(sa);\n           p=0;\n           while(sa[p]=='.'&&p<len)\n                p++;\n           a=p;\n           if(rr&&ss&&cc)\n           {\n               if(!r&&s&&c)\n                   r=(a-s*ss-c*cc)/rr;\n               else if(r&&!s&&c)\n                   s=(a-r*rr-c*cc)/ss;\n               else if(r&&s&&!c)\n                   c=(a-r*rr-s*ss)/cc;\n               else if(!r&&!s&&c)\n               {\n                   if(rr==ss)\n                        sumrs=(a-c*cc)/rr;\n               }\n               else if(!r&&s&&!c)\n               {\n                   if(rr==cc)\n                        sumrc=(a-s*ss)/rr;\n               }\n               else if(r&&!s&&!c)\n               {\n                   if(ss==cc)\n                        sumsc=(a-r*rr)/ss;\n               }\n               else if(!r&&!s&&!c)\n                {\n                    if(ss==rr&&ss==cc)\n                    {\n                        sum=a/ss;\n                        if(a==60*rr)\n                            r=s=c=20;\n                        else if(a==3*rr)\n                            r=s=c=1;\n                    }\n                    if(rr==ss&&sumrs)\n                        c=(a-sumrs*rr)/cc;\n                    if(rr==cc&&sumrc)\n                        s=(a-sumrc*rr)/ss;\n                    if(ss==cc&&sumsc)\n                        r=(a-sumsc*ss)/rr;\n                }\n           }\n           else if(rr&&ss&&!cc)\n           {\n               if(r&&!s)\n                 s=(a-r*rr)/ss;\n               else if(!r&&s)\n                  r=(a-s*ss)/rr;\n               else if(!r&&!s)\n               {\n                   if(rr==ss)\n                   {\n                       sumrs=a/rr;\n                       if(a==40*rr)\n                           r=s=20;\n                       else if(a==2*rr)\n                            r=s=1;\n                   }\n               }\n           }\n           else if(rr&&!ss&&cc)\n           {\n               if(r&&!c)\n                    c=(a-r*rr)/cc;\n               else if(!r&&c)\n                    r=(a-c*cc)/rr;\n               else if(!r&&!c)\n               {\n                   if(rr==cc)\n                   {\n                       sumrc=a/rr;\n                       if(a==40*rr)\n                           r=c=20;\n                       else if(a==2*rr)\n                            r=c=1;\n                   }\n               }\n           }\n           else if(!rr&&ss&&cc)\n           {\n               if(s&&!c)\n                    c=(a-s*ss)/cc;\n               else if(!s&&c)\n                    s=(a-c*cc)/ss;\n               else if(!s&&!c)\n               {\n                   if(ss==cc)\n                   {\n                       sumsc=a/ss;\n                       if(a==40*ss)\n                           s=c=20;\n                       else if(a==2*ss)\n                            s=c=1;\n                   }\n               }\n           }\n           else if(rr&&!ss&&!cc)\n                r=a/rr;\n           else if(!rr&ss&&!cc)\n                s=a/ss;\n           else if(!rr&&!ss&&cc)\n                c=a/cc;\n\n           if(sumrs)\n           {\n               if(r)\n                    s=sumrs-r;\n               else if(s)\n                    r=sumrs-s;\n               if(sum)\n                    c=sum-sumrs;\n           }\n           if(sumrc)\n           {\n               if(r)\n                    c=sumrc-r;\n               else if(c)\n                    r=sumrc-c;\n               if(sum)\n                    s=sum-sumrc;\n           }\n           if(sumsc)\n           {\n               if(s)\n                    c=sumsc-s;\n               else if(c)\n                    s=sumsc-c;\n               if(sum)\n                    r=sum-sumsc;\n           }\n\n           while(p<len)\n           {\n               if(sa[p]=='(')rr++;\n               else if(sa[p]==')')rr--;\n               else if(sa[p]=='[')ss++;\n               else if(sa[p]==']')ss--;\n               else if(sa[p]=='{')cc++;\n               else if(sa[p]=='}')cc--;\n               p++;\n           }\n       }\n       //gets(sa);\n       scanf(\"%s\",sa);\n       len=strlen(sa);\n       rr=ss=cc=0;\n       int p=0;\n       while(p<len)\n       {\n           if(sa[p]=='(')rr++;\n           else if(sa[p]==')')rr--;\n           else if(sa[p]=='[')ss++;\n           else if(sa[p]==']')ss--;\n           else if(sa[p]=='{')cc++;\n           else if(sa[p]=='}')cc--;\n           p++;\n       }\n       printf(\"0\");\n       for(int i=2;i<=m;i++)\n       {\n           if(rr&&ss&&cc)\n           {\n               if(r&&s&&c)\n                    printf(\" %d\",r*rr+s*ss+c*cc);\n               else if(rr==ss&&rr==cc&&sum)\n                    printf(\" %d\",sum*rr);\n               else printf(\" -1\");\n           }\n           else if(rr&&ss)\n           {\n               if(r&&s)\n                    printf(\" %d\",r*rr+s*ss);\n               else if(rr==ss&&sumrs)\n                    printf(\" %d\",rr*sumrs);\n               else printf(\" -1\");\n\n           }\n           else if(rr&&cc)\n           {\n               if(r&&c)\n                    printf(\" %d\",r*rr+c*cc);\n               else if(rr==cc&&sumrc)\n                    printf(\" %d\",rr*sumrc);\n               else printf(\" -1\");\n           }\n           else if(ss&&cc)\n           {\n               if(s&&c)\n                    printf(\" %d\",s*ss+c*cc);\n               else if(ss==cc&&sumsc)\n                    printf(\" %d\",ss*sumsc);\n               else printf(\" -1\");\n           }\n           else if(rr)\n           {\n               if(r)\n                    printf(\" %d\",r*rr);\n               else\n                    printf(\" -1\");\n           }\n           else if(ss)\n           {\n               if(s)\n                    printf(\" %d\",s*ss);\n               else\n                    printf(\" -1\");\n           }\n           else if(cc)\n           {\n               if(c)\n                    printf(\" %d\",c*cc);\n               else\n                    printf(\" -1\");\n           }\n           else\n                printf(\" 0\");\n           //gets(sa);\n           scanf(\"%s\",sa);\n           len=strlen(sa),p=0;\n           while(p<len)\n           {\n               if(sa[p]=='(')rr++;\n               else if(sa[p]==')')rr--;\n               else if(sa[p]=='[')ss++;\n               else if(sa[p]==']')ss--;\n               else if(sa[p]=='{')cc++;\n               else if(sa[p]=='}')cc--;\n               p++;\n           }\n       }\n       putchar('\\n');\n   }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    int P, Q;\n    while(cin >> P >> Q, P || Q) {\n        vector<string> p(P), q(Q);\n        for(auto &i : p) cin >> i;\n        for(auto &i : q) cin >> i;\n\n        int psum = 0;\n        int D[12] = {0}, F[12] = {0};\n        for(int i = 0; i < P; i++) {\n            string str = p[i];\n            int dot = 0;\n            while(str[dot] == '.') dot++;\n            D[i + 1] = dot;\n        }\n        for(int i = 0; i < Q; i++) {\n            string str = q[i];\n            int dot = 0;\n            while(str[dot] == '.') dot++;\n            F[i + 1] = dot;\n        }\n        vector<int> X(P + 1), Y(P + 1), Z(P + 1);\n        for(int i = 0; i < P; i++) {\n            string str = p[i];\n            X[i] = count(str.begin(), str.end(), '(') - count(str.begin(), str.end(), ')') + (i == 0 ? 0 : X[i-1]);\n            Y[i] = count(str.begin(), str.end(), '[') - count(str.begin(), str.end(), ']') + (i == 0 ? 0 : Y[i-1]);\n            Z[i] = count(str.begin(), str.end(), '{') - count(str.begin(), str.end(), '}') + (i == 0 ? 0 : Z[i-1]);\n        }\n        vector<int> R(P + 1), C(P + 1), S(P + 1);\n        for(int i = 0; i < Q; i++) {\n            string str = q[i];\n            R[i] = count(str.begin(), str.end(), '(') - count(str.begin(), str.end(), ')') + (i == 0 ? 0 : R[i-1]);\n            C[i] = count(str.begin(), str.end(), '[') - count(str.begin(), str.end(), ']') + (i == 0 ? 0 : C[i-1]);\n            S[i] = count(str.begin(), str.end(), '{') - count(str.begin(), str.end(), '}') + (i == 0 ? 0 : S[i-1]);\n        }\n\n        set<int> r, c, s;\n        vector<int> ans(Q + 1,-2);\n        ans[0] = 0;\n        for(int i = 1; i <= 20; i++) {\n            for(int j = 1; j <= 20; j++) {\n                for(int k = 1; k <= 20; k++) {\n                    bool flag = true;\n                    for(int l = 0; l < P; l++) {\n                        if(X[l] * i + Y[l] * j + Z[l] * k == D[l + 2]) ;\n                        else {\n                            flag = false;\n                            break;\n                        }\n                    }\n                    if(!flag) continue;\n                    for(int l = 0; l < Q; l++) {\n                        int indention = i * R[l] + j * C[l] + k * S[l];\n                        if(ans[l + 1] == -2) ans[l + 1] = indention;\n                        else if (ans[l + 1] != indention) ans[l + 1] = -1;\n                    }\n                }\n            }\n        }\n        for(int i = 0; i < Q - 1; i++) {\n            cout << ans[i] << \" \";\n        }\n        cout << ans[Q-1] << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <complex>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n#define round first\n#define curly second.first\n#define square second.second\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\nconst int N = 21;\n\nint main(void){\n    for(int p, q; cin >> p >> q, p;){\n        vi indent(p);\n        vs P(p), Q(q);\n\n        rep(i, p){\n            cin >> P[i];\n\n            indent[i] = 0;\n            while(indent[i] < P[i].size() && P[i].at(indent[i]) == '.') indent[i]++;\n        }\n\n        rep(i, q) cin >> Q[i];\n\n        vi ans(q, -2);\n\n        range(R, 1, N){\n            range(C, 1, N){\n                range(S, 1, N){\n                    int r = 0, c = 0, s = 0;\n                    bool ok = true;\n\n                    rep(i, p){\n                        if(R * r + C * c + S * s != indent[i]){\n                            ok = false;\n                        }\n\n                        rep(j, P[i].size()){\n                            switch(P[i].at(j)){\n                                case '(': r++; break;\n                                case '{': c++; break;\n                                case '[': s++; break;\n                                case ')': r--; break;\n                                case '}': c--; break;\n                                case ']': s--; break;\n                            }\n                        }\n                    }\n                    if(!ok) continue;\n\n                    r = c = s = 0;\n                    rep(i, q){\n                        int ind = R * r + C * c + S * s;\n                        if(ans[i] == -2) ans[i] = ind;\n                        else if(ans[i] != ind) ans[i] = -1;\n\n                        rep(j, Q[i].size()){\n                            switch(Q[i].at(j)){\n                                case '(': r++; break;\n                                case '{': c++; break;\n                                case '[': s++; break;\n                                case ')': r--; break;\n                                case '}': c--; break;\n                                case ']': s--; break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        rep(i, q){\n            cout << (i ? \" \":\"\") << ans[i];\n        }\n        cout << endl;\n    }\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint N , M;\n\twhile(cin >> N >> M , N || M)\n\t{\n\t\tint a = 0 , b = 0 , c = 0 , d = 0;\n\t\tmap<vector<int> , int>data;\n\t\tfor(size_t i = 0; i < N; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tint memo = 1;\n\t\t\tfor(size_t i = 1; i < 20; i++)\n\t\t\t{\n\t\t\t\tif(a%i == 0 && b%i == 0 && c%i == 0 && now%i == 0)\n\t\t\t\t{\n\t\t\t\t\tmemo = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvector<int>memo2 = { a / memo,b / memo,c / memo };\n\t\t\tdata[memo2] = now / memo;\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tvector<vector<int>>candidate;\n\t\tfor(int i = 1; i <= 20; i++)\n\t\t{\n\t\t\tfor(int j = 1; j <= 20; j++)\n\t\t\t{\n\t\t\t\tfor(int k = 1; k <= 20; k++)\n\t\t\t\t{\n\t\t\t\t\tbool f = 1;\n\t\t\t\t\tfor(auto x : data)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(x.first[0] * i + x.first[1] * j + x.first[2] * k != x.second)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(f)candidate.push_back(vector<int>{i - 1 , j - 1 , k - 1});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<set<int>>ans(M);\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tstring S;\n\t\t\tcin >> S;\n\t\t\tint now = 0;\n\t\t\twhile(now < S.size() && S[now] == '.')\n\t\t\t{\n\t\t\t\tnow++;\n\t\t\t}\n\t\t\tfor(auto x : candidate)\n\t\t\t{\n\t\t\t\tans[i].insert(( x[0] + 1 )*a + ( x[1] + 1 )*b + ( x[2] + 1 )*c);\n\t\t\t}\n\n\t\t\td = 0;\n\t\t\twhile(now < S.size())\n\t\t\t{\n\t\t\t\tswitch(S[now])\n\t\t\t\t{\n\t\t\t\t\tcase '(':a++; break;\n\t\t\t\t\tcase ')':a--; break;\n\t\t\t\t\tcase '{':b++; break;\n\t\t\t\t\tcase '}':b--; break;\n\t\t\t\t\tcase '[':c++; break;\n\t\t\t\t\tcase ']':c--; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnow++;\n\t\t\t}\n\t\t}\n\t\tfor(size_t i = 0; i < M; i++)\n\t\t{\n\t\t\tif(ans[i].size() == 1)cout << *ans[i].begin() << endl;\n\t\t\telse cout << -1;\n\n\t\t\tcout << ( i == M - 1 ? \"\\n\" : \" \" );\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <climits>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <vector>\n#include <set>\n#include <map>\n#include <iostream>\n#include <deque>\n#include <complex>\n#include <string>\n#include <iomanip>\n#include <sstream>\n#include <bitset>\n#include <valarray>\n#include <iterator>\nusing namespace std;\ntypedef long long int lli;\ntypedef unsigned int uint;\ntypedef unsigned char uchar;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\n#define rep(i,x) for(int i=1;i<=(int)(x);i++)\n#define REP(i,x) for(int i=0;i<(int)(x);i++)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();i++)\n#define RREP(i,x) for(int i=(x);i>=0;i--)\n#define RFOR(i,c) for(__typeof((c).rbegin())i=(c).rbegin();i!=(c).rend();i++)\n#define ALL(container) container.begin(), container.end()\n#define SZ(container) ((int)container.size())\n\ntemplate<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }\ntemplate<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }\n/*\ntemplate<class T> ostream& operator<<(ostream &os, const vector<T> &t) {\nos<<\"[\"; FOR(it,t) {if(it!=t.begin()) os<<\",\"; os<<*it;} os<<\"]\"; return os;\n}\n*/\ntemplate<class T> ostream& operator<<(ostream &os, const set<T> &t) {\nos<<\"{\"; FOR(it,t) {if(it!=t.begin()) os<<\",\"; os<<*it;} os<<\"}\"; return os;\n}\ntemplate<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<\"(\"<<t.first<<\",\"<<t.second<<\")\";}\n\ntypedef vector<double> Array;\ntypedef vector<Array> Matrix;\n\nostream& operator<<(ostream &os, const Array &t) {\nos<<\"[\"; FOR(it,t) {if(it!=t.begin()) os<<\",\"; os<<*it;} os<<\"]\"; return os;\n}\nostream& operator<<(ostream &os, const Matrix &t) {\nFOR(it,t)os<<*it<<endl;return os;\n}\n\n\nconst int INF = 1<<28;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\n\nint p, q;\nchar str[1024];\nmain(){\n\twhile(cin >> p >> q, p){\n\t\tMatrix m, n;\n\t\tint r=0, c=0, s=0;\n\t\tREP(i, p){\n\t\t\tcin >> str;\n\t\t\tchar *pp = str;\n\t\t\tint ind = 0;\n\t\t\tfor(;*pp=='.';pp++)ind++;\n\t\t\tArray a(4);\n\t\t\ta[0] = r;\n\t\t\ta[1] = c;\n\t\t\ta[2] = s;\n\t\t\ta[3] = ind;\n\t\t\tm.push_back(a);\n\t\t\tfor(;*pp;pp++){\n\t\t\t\tif(*pp=='(') r++;\n\t\t\t\tif(*pp==')') r--;\n\t\t\t\tif(*pp=='{') c++;\n\t\t\t\tif(*pp=='}') c--;\n\t\t\t\tif(*pp=='[') s++;\n\t\t\t\tif(*pp==']') s--;\n\t\t\t}\n\t\t}\n\t\tr=0, c=0, s=0;\n\t\tREP(i, q){\n\t\t\tcin >> str;\n\t\t\tchar *pp = str;\n\t\t\tint ind = 0;\n\t\t\tArray a(3);\n\t\t\ta[0] = r;\n\t\t\ta[1] = c;\n\t\t\ta[2] = s;\n\t\t\tn.push_back(a);\n\t\t\tfor(;*pp;pp++){\n\t\t\t\tif(*pp=='(') r++;\n\t\t\t\tif(*pp==')') r--;\n\t\t\t\tif(*pp=='{') c++;\n\t\t\t\tif(*pp=='}') c--;\n\t\t\t\tif(*pp=='[') s++;\n\t\t\t\tif(*pp==']') s--;\n\t\t\t}\n\t\t}\n\t\tvector<int> ans(q, -2);\n\t\trep(rr, 20)rep(cc, 20)rep(ss, 20){\n\t\t\tint f = 1;\n\t\t\tREP(i, p){\n\t\t\t\tif(m[i][0]*rr+m[i][1]*cc+m[i][2]*ss != m[i][3]){\n\t\t\t\t\tf = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!f) continue;\n\t\t\tREP(i, q){\n\t\t\t\tif(ans[i] == -2) ans[i] = n[i][0]*rr+n[i][1]*cc+n[i][2]*ss;\n\t\t\t\telse if(ans[i] != n[i][0]*rr+n[i][1]*cc+n[i][2]*ss) ans[i] = -1;\n\t\t\t}\n\t\t}\n\t\tREP(i, q) printf(\"%d%s\", ans[i], i==q-1?\"\\n\":\" \");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>\n#include <cmath>\n\nstatic const int MOD = 1000000007;\nusing ll = long long;\nusing u32 = uint32_t;\nusing namespace std;\n\ntemplate<class T> constexpr T INF = ::numeric_limits<T>::max()/32*15+208;\nvoid solve(int p, int q){\n    vector<string> v(p), u(q);\n    for (auto &&i : v) cin >> i;\n    for (auto &&i : u) cin >> i;\n    vector<int> ans(q, -2);\n    for (int R = 1; R <= 20; ++R) {\n        for (int C = 1; C <= 20; ++C) {\n            for (int S = 1; S <= 20; ++S) {\n                int cnt1 = 0, cnt2 = 0, cnt3 = 0;\n                int ok = 1;\n                for (int i = 0; i < p; ++i) {\n                    int x = 0;\n                    for (auto &&j : v[i]) {\n                        if(j == '.') x++;\n                        else break;\n                    }\n                    if(x != R*cnt1+C*cnt2+S*cnt3){\n                        ok = 0;\n                        break;\n                    }\n                    for (auto &&j : v[i]) {\n                        if(j == '(') cnt1++;\n                        if(j == ')') cnt1--;\n                        if(j == '{') cnt2++;\n                        if(j == '}') cnt2--;\n                        if(j == '[') cnt3++;\n                        if(j == ']') cnt3--;\n                    }\n                }\n                if(!ok) continue;\n                for (int i = 0; i < q; ++i) {\n                    if(ans[i] == -2){\n                        ans[i] = R*cnt1+C*cnt2+S*cnt3;\n                    } else if(ans[i] != R*cnt1+C*cnt2+S*cnt3){\n                        ans[i] = -1;\n                    }\n                    for (auto &&j : u[i]) {\n                        if(j == '(') cnt1++;\n                        if(j == ')') cnt1--;\n                        if(j == '{') cnt2++;\n                        if(j == '}') cnt2--;\n                        if(j == '[') cnt3++;\n                        if(j == ']') cnt3--;\n                    }\n                }\n            }\n        }\n    }\n    for (int i = 0; i < q; ++i) {\n        if(i) printf(\" \");\n        printf(\"%d\", ans[i]);\n    }\n    puts(\"\");\n}\nint main() {\n    int p, q;\n    while(cin >> p >> q, p){\n        solve(p, q);\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n \nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==30) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n \nvoid UpDate(){\n  /*int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n    }*/\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<tuple>\nusing namespace std;\nint x[11][3], y[11][3], b[11];\nint n, m; string S[10], T[10];\nvoid init() {\n\tfor (int i = 0; i < 33; i++) { x[i / 3][i % 3] = 0; y[i / 3][i % 3] = 0; }\n\tfor (int i = 0; i < n; i++) {\n\t\tx[i + 1][0] = x[i][0]; x[i + 1][1] = x[i][1]; x[i + 1][2] = x[i][2]; bool Ind = true;\n\t\tfor (int j = 0; j < S[i].size(); j++) {\n\t\t\tif (S[i][j] != '.')Ind = false; if (Ind == true)b[i] = j + 1;\n\t\t\tif (S[i][j] == '(')x[i + 1][0]++; if (S[i][j] == ')')x[i + 1][0]--;\n\t\t\tif (S[i][j] == '{')x[i + 1][1]++; if (S[i][j] == '}')x[i + 1][1]--;\n\t\t\tif (S[i][j] == '[')x[i + 1][2]++; if (S[i][j] == ']')x[i + 1][2]--;\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\ty[i + 1][0] = y[i][0]; y[i + 1][1] = y[i][1]; y[i + 1][2] = y[i][2];\n\t\tfor (int j = 0; j < T[i].size(); j++) {\n\t\t\tif (T[i][j] == '(')y[i + 1][0]++; if (T[i][j] == ')')y[i + 1][0]--;\n\t\t\tif (T[i][j] == '{')y[i + 1][1]++; if (T[i][j] == '}')y[i + 1][1]--;\n\t\t\tif (T[i][j] == '[')y[i + 1][2]++; if (T[i][j] == ']')y[i + 1][2]--;\n\t\t}\n\t}\n}\nvector<tuple<int,int,int>> search() {\n\tvector<tuple<int, int, int>>vec;\n\tfor (int i = 1; i <= 20; i++) {\n\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\tbool OK = true;\n\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\tif ((x[l][0] * i + x[l][1] * j + x[l][2] * k) != b[l])OK = false;\n\t\t\t\t}\n\t\t\t\tif (OK == true)vec.push_back(make_tuple(i, j, k));\n\t\t\t}\n\t\t}\n\t}\n\treturn vec;\n}\nint main() {\n\twhile (true) {\n\t\tcin >> n >> m; if (n == 0 && m == 0)break;\n\t\tfor (int i = 0; i < n; i++)cin >> S[i];\n\t\tfor (int i = 0; i < m; i++)cin >> T[i];\n\t\tvector<int>res[10]; init(); search();\n\t\tvector<tuple<int, int, int>>F = search();\n\t\tfor (int i = 0; i < F.size(); i++) {\n\t\t\tint a1 = get<0>(F[i]), a2 = get<1>(F[i]), a3 = get<2>(F[i]);\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tint T = y[j][0] * a1 + y[j][1] * a2 + y[j][2] * a3;\n\t\t\t\tfor (int k = 0; k < res[j].size(); k++) {\n\t\t\t\t\tif (res[j][k] == T)goto E;\n\t\t\t\t}\n\t\t\t\tres[j].push_back(T); E:;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) { if (y[i][0] + y[i][1] + y[i][2] == 0 && res[i].size() == 0)res[i].push_back(0); }\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i)cout << ' ';\n\t\t\tif (res[i].size() == 0 || res[i].size() >= 2) { cout << \"-1\"; }\n\t\t\telse { cout << res[i][0]; }\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <cassert>\n#include <queue>\n#include <set>\n#include <map>\n#include <valarray>\n#include <bitset>\n#include <stack>\n#include <iomanip>\n#include <fstream>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define chmax(a,b) (a<b?(a=b,1):0)\n#define chmin(a,b) (a>b?(a=b,1):0)\n#define valid(y,x,h,w) (0<=y&&y<h&&0<=x&&x<w)\nconst int INF = 1<<29;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n\nstring P[10];\nstring Q[10];\nint p,q;\n\nint pr[10],pc[10],ps[10];\nint indent[10];\nint qr[10],qc[10],qs[10];\n\nbool check(int R, int C, int S) {\n  REP(i,p) {\n    if (indent[i] != R*pr[i] + C*pc[i] + S*ps[i]) return 0;\n  }\n  return 1;\n}\n\nvoid solve() {\n  set<int> st[q];\n  for (int R=1; R<=20; ++R) {\n    for (int C=1; C<=20; ++C) {\n      for (int S=1; S<=20; ++S) {\n        if (check(R,C,S)) {\n          REP(i,q) {\n            st[i].insert(qr[i]*R + qc[i]*C + qs[i]*S);\n          }\n        }\n      }\n    }\n  }\n  REP(i,q) {\n    if (i) cout << \" \";\n    if (st[i].size() == 1) {\n      cout << *st[i].begin();\n    } else {\n      cout << -1;\n    }\n  }\n  cout << endl;\n}\n\nint main() {\n  while(cin>>p>>q,p||q) {\n    REP(i,p) cin >> P[i];\n    REP(i,q) cin >> Q[i];\n\n    {\n      int r=0,c=0,s=0;      \n      REP(i,p) {\n        FOR(it, P[i]) {\n          if (*it=='(') r++;\n          else if (*it==')') r--;\n          else if (*it=='{') c++;\n          else if (*it=='}') c--;\n          else if (*it=='[') s++;\n          else if (*it==']') s--;\n        }\n        int id = 0;\n        while(id<P[i].size() && P[i][id]=='.') id++;\n        indent[i] = id;\n        pr[i+1] = r, pc[i+1] = c, ps[i+1] = s;\n        // cout << r << \" \" << c << \" \" << s << endl;\n      }\n    }\n    {\n      int r=0,c=0,s=0;\n      REP(i,q) {\n        FOR(it, Q[i]) {\n          if (*it=='(') r++;\n          else if (*it==')') r--;\n          else if (*it=='{') c++;\n          else if (*it=='}') c--;\n          else if (*it=='[') s++;\n          else if (*it==']') s--;\n        }\n        qr[i+1] = r;\n        qc[i+1] = c;\n        qs[i+1] = s;\n      }\n    }\n    \n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <set>\nusing namespace std;\nset<int>s[11];\nint n,cnt_r[2],cnt_c[2],cnt_s[2];\nstruct node\n{\n    int r,c,s,w;\n}p[11],q[11];\nint cal(char *s)\n{\n    int cnt=0;\n    for(int i=0;s[i];i++)\n    {\n        if(s[i]!='.') break;\n        cnt++;\n    }\n    return cnt;\n}\nbool check(int R,int C,int S)\n{\n    for(int i=0;i<n;i++)\n    {\n        int v=R*p[i].r+C*p[i].c+S*p[i].s;\n        if(v!=p[i].w) return false;\n    }\n    return true;\n}\nint main()\n{\n    int m;\n    while(scanf(\"%d%d\",&n,&m)==2)\n    {\n        if(n==0&&m==0) break;\n        memset(cnt_r,0,sizeof(cnt_r));\n        memset(cnt_c,0,sizeof(cnt_c));\n        memset(cnt_s,0,sizeof(cnt_s));\n        char a[111];\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%s\",a);\n            if(i==0)\n            {\n                p[i].r=0;\n                p[i].c=0;\n                p[i].s=0;\n                p[i].w=0;\n            }\n            else\n            {\n                p[i].w=cal(a);\n                p[i].r=cnt_r[0]-cnt_r[1];\n                p[i].c=cnt_c[0]-cnt_c[1];\n                p[i].s=cnt_s[0]-cnt_s[1];\n            }\n            for(int j=0;a[j];j++)\n            {\n                if(a[j]=='(') cnt_r[0]++;\n                else if(a[j]==')') cnt_r[1]++;\n                     else if(a[j]=='{') cnt_c[0]++;\n                          else if(a[j]=='}') cnt_c[1]++;\n                               else if(a[j]=='[') cnt_s[0]++;\n                                    else if(a[j]==']') cnt_s[1]++;\n            }\n        }\n        memset(cnt_r,0,sizeof(cnt_r));\n        memset(cnt_c,0,sizeof(cnt_c));\n        memset(cnt_s,0,sizeof(cnt_s));\n        char b[111];\n        for(int i=0;i<m;i++)\n        {\n            scanf(\"%s\",b);\n            if(i==0)\n            {\n                q[i].r=0;\n                q[i].c=0;\n                q[i].s=0;\n            }\n            else\n            {\n                q[i].r=cnt_r[0]-cnt_r[1];\n                q[i].c=cnt_c[0]-cnt_c[1];\n                q[i].s=cnt_s[0]-cnt_s[1];\n            }\n            for(int j=0;b[j];j++)\n            {\n                if(b[j]=='(') cnt_r[0]++;\n                else if(b[j]==')') cnt_r[1]++;\n                     else if(b[j]=='{') cnt_c[0]++;\n                          else if(b[j]=='}') cnt_c[1]++;\n                               else if(b[j]=='[') cnt_s[0]++;\n                                    else if(b[j]==']') cnt_s[1]++;\n            }\n        }\n        for(int i=0;i<=10;i++) s[i].clear();\n        for(int i=1;i<=20;i++)\n            for(int j=1;j<=20;j++)\n                for(int k=1;k<=20;k++)\n                {\n                    if(!check(i,j,k)) continue;\n                    for(int t=0;t<m;t++) s[t].insert(i*q[t].r+j*q[t].c+k*q[t].s);\n                }\n        set<int>::iterator it;\n        if(s[0].size()!=1) printf(\"-1\");\n        else printf(\"%d\",*(s[0].begin()));\n        for(int i=1;i<m;i++)\n        {\n            printf(\" \");\n            if(s[i].size()!=1) printf(\"-1\");\n            else printf(\"%d\",*(s[i].begin()));\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  int n,m;\n  while(cin>>n>>m,n){\n  string s1[11],s2[11];\n  for(int i=0;i<n;i++)cin>>s1[i];\n  for(int i=0;i<m;i++)cin>>s2[i];\n\n  int pi[11];\n  for(int i=0;i<n;i++){\n    int j=0;\n    while(s1[i][j]=='.'){\n      j++;\n    }\n    pi[i]=j;\n  }\n\n  // for(int i=0;i<n;i++)cout<<\"p \"<<pi[i]<<endl;\n  \n  int ans[11];\n  fill_n(ans,11,-2);\n  ans[0]=0;\n  \n  for(int r=1;r<=20;r++){\n    for(int c=1;c<=20;c++){\n      for(int s=1;s<=20;s++){\n\t//cout<<r<<\" \"<<c<<\" \"<<s<<endl;\n\tint f=1;\n\t\n\tint cnt[3]={};\n\tfor(int i=0;i<n;i++){\n\t    \n\t  int t=r*cnt[0]+c*cnt[1]+s*cnt[2];\n\t  //if(r==9&&c==5&&s==2)cout<<pi[i]<<\" \"<<t<<endl;\n\t  if(t!=pi[i])f=0;\n\t    \n\t  for(int j=0;j<s1[i].size();j++){\n\t    if(s1[i][j]=='(')cnt[0]++;\n\t    if(s1[i][j]==')')cnt[0]--;\n\t    if(s1[i][j]=='{')cnt[1]++;\n\t    if(s1[i][j]=='}')cnt[1]--;\n\t    if(s1[i][j]=='[')cnt[2]++;\n\t    if(s1[i][j]==']')cnt[2]--;\n\t  }\n\t}\n\t\n\tif(f==0)continue;\n\t//cout<<r<<\" \"<<c<<\" \"<<s<<endl;\n\t\n\tcnt[0]=cnt[1]=cnt[2]=0;\n\tfor(int i=0;i<m;i++){\n\t    \n\t  int t=r*cnt[0]+c*cnt[1]+s*cnt[2];\n\t    \n\t  if(ans[i]==-2)ans[i]=t;\n\t  else if(ans[i]!=t)ans[i]=-1;\n\t    \n\t  for(int j=0;j<s2[i].size();j++){\n\t    if(s2[i][j]=='(')cnt[0]++;\n\t    if(s2[i][j]==')')cnt[0]--;\n\t    if(s2[i][j]=='{')cnt[1]++;\n\t    if(s2[i][j]=='}')cnt[1]--;\n\t    if(s2[i][j]=='[')cnt[2]++;\n\t    if(s2[i][j]==']')cnt[2]--;\n\t  }\n\t}\n\t\n      }\n    }\n  }\n  for(int i=0;i<m;i++){\n    if(i)cout<<\" \";\n    cout<<ans[i];\n  }\n\n  cout<<endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <cstring>\n#include <cmath>\n#define INF 1000000\nconst int MOD = 1e9 + 7;\nconst int dx[] = {1, -1, 0, 0};\nconst int dy[] = {0, 0, 1, -1};\nusing namespace std;\ntypedef long long ll;\nint main()\n{\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tint n, m;\n\twhile (cin >> n >> m, n | m)\n\t{\n\t\tstring master[15], str[15];\n\t\tint num[15] = {};\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tcin >> master[i];\n\t\t\tint pos = 0;\n\t\t\twhile (master[i][pos] == '.')\n\t\t\t{\n\t\t\t\tnum[i]++;\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++)\n\t\t\tcin >> str[i];\n\t\tint R1[15] = {}, C1[15] = {}, S1[15] = {};\n\t\tint R2[15] = {}, C2[15] = {}, S2[15] = {};\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tfor (int j = 0; j < master[i].size(); j++)\n\t\t\t{\n\t\t\t\tif (master[i][j] == '(')\n\t\t\t\t\tR1[i]++;\n\t\t\t\tif (master[i][j] == '{')\n\t\t\t\t\tC1[i]++;\n\t\t\t\tif (master[i][j] == '[')\n\t\t\t\t\tS1[i]++;\n\t\t\t\tif (master[i][j] == ')')\n\t\t\t\t\tR1[i]--;\n\t\t\t\tif (master[i][j] == '}')\n\t\t\t\t\tC1[i]--;\n\t\t\t\tif (master[i][j] == ']')\n\t\t\t\t\tS1[i]--;\n\t\t\t}\n\t\t\tR1[i + 1] = R1[i];\n\t\t\tC1[i + 1] = C1[i];\n\t\t\tS1[i + 1] = S1[i];\n\t\t}\n\t\tfor (int i = 0; i < m; i++)\n\t\t{\n\t\t\tfor (int j = 0; j < str[i].size(); j++)\n\t\t\t{\n\t\t\t\tif (str[i][j] == '(')\n\t\t\t\t\tR2[i]++;\n\t\t\t\tif (str[i][j] == '{')\n\t\t\t\t\tC2[i]++;\n\t\t\t\tif (str[i][j] == '[')\n\t\t\t\t\tS2[i]++;\n\t\t\t\tif (str[i][j] == ')')\n\t\t\t\t\tR2[i]--;\n\t\t\t\tif (str[i][j] == '}')\n\t\t\t\t\tC2[i]--;\n\t\t\t\tif (str[i][j] == ']')\n\t\t\t\t\tS2[i]--;\n\t\t\t}\n\t\t\tR2[i + 1] = R2[i];\n\t\t\tC2[i + 1] = C2[i];\n\t\t\tS2[i + 1] = S2[i];\n\t\t}\n\t\tvector<int> vec(15, INF);\n\t\tvec[0] = 0;\n\t\tfor (int r = 1; r <= 20; r++)\n\t\t{\n\t\t\tfor (int c = 1; c <= 20; c++)\n\t\t\t{\n\t\t\t\tfor (int s = 1; s <= 20; s++)\n\t\t\t\t{\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor(int i = 0; i < n - 1; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (R1[i] * r + C1[i] * c + S1[i] * s != num[i + 1])\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(flag)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(int i = 0; i < m - 1; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint tmp = R2[i] * r + C2[i] * c + S2[i] * s ;\n\t\t\t\t\t\t\tif(vec[i + 1] == -1 || vec[i + 1] == tmp)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tif(vec[i + 1] != tmp && vec[i + 1] != INF)\n\t\t\t\t\t\t\t\tvec[i + 1] = -1;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tvec[i + 1] = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < m; i++)\n\t\t{\n\t\t\tif(i == 0)\n\t\t\t\tcout << vec[i];\n\t\t\telse\n\t\t\t\tcout << \" \" << vec[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      //      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\n/*void Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<=d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n  }*/\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    //    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n \nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(x==5) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n \nvoid UpDate(){\n  /*int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n    }*/\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n\nusing namespace std;\n\n#define rep(i, n) for (int i = 0; i < int(n); ++i)\n\nint main() {\n  int n, m;\n  while (cin >> n >> m, n) {\n    vector<string> str(n), str2(m);\n    vector<int> r(n), c(n), s(n), d(n), res(m), r2(m), c2(m), s2(m);\n    rep (i, n) cin >> str[i];\n    rep (i, m) cin >> str2[i];\n    r[0] = c[0] = s[0] = 0;\n    rep (i, n - 1) {\n      r[i + 1] = r[i];\n      c[i + 1] = c[i];\n      s[i + 1] = s[i];\n      rep (j, str[i].size()) {\n\tif (str[i][j] == '(') ++r[i + 1];\n\tif (str[i][j] == ')') --r[i + 1];\n\tif (str[i][j] == '{') ++c[i + 1];\n\tif (str[i][j] == '}') --c[i + 1];\n\tif (str[i][j] == '[') ++s[i + 1];\n\tif (str[i][j] == ']') --s[i + 1];\n      }\n    }\n    r2[0] = c2[0] = s2[0] = 0;\n    rep (i, m - 1) {\n      r2[i + 1] = r2[i];\n      c2[i + 1] = c2[i];\n      s2[i + 1] = s2[i];\n      rep (j, str2[i].size()) {\n\tif (str2[i][j] == '(') ++r2[i + 1];\n\tif (str2[i][j] == ')') --r2[i + 1];\n\tif (str2[i][j] == '{') ++c2[i + 1];\n\tif (str2[i][j] == '}') --c2[i + 1];\n\tif (str2[i][j] == '[') ++s2[i + 1];\n\tif (str2[i][j] == ']') --s2[i + 1];\n      }\n    }\n    rep (i, n) {\n      d[i] = str[i].size();\n      rep (j, str[i].size()) if (str[i][j] != '.') {\n\td[i] = j;\n\tbreak;\n      }\n    }\n    bool f = true;\n    rep (i, 21) rep (j, 21) rep (k, 21) if (i && j && k) {\n      bool ok = true;\n      rep (t, n) if (r[t]  * i + c[t] * j + s[t] * k != d[t]) ok = false;\n      if (ok) {\n\tif (f) {\n\t  rep (t, m) res[t] = r2[t] * i + c2[t] * j + s2[t] * k;\n\t  f = false;\n\t} else {\n\t  rep (t, m) {\n\t    int dot = r2[t] * i + c2[t] * j + s2[t] * k;\n\t    if (res[t] != dot) res[t] = -1;\n\t  }\n\t}\n      }\n    }\n    rep (i, m) cout << (i > 0 ? \" \" : \"\") << res[i];\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint p, cr[10], cc[10], cs[10], sp[10];\nvector<int> v;\n\nbool check(int r, int c, int s){\n\tfor(int i = 0; i < p; ++i){\n\t\tif(cr[i] * r + cc[i] * c + cs[i] * s != sp[i])\n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\nvoid count(const string &t, int &r, int &c, int &s){\n\tfor(int i = 0; i < t.size(); ++i){\n\t\tswitch(t[i]){\n\t\tcase '(': ++r; break;\n\t\tcase ')': --r; break;\n\t\tcase '{': ++c; break;\n\t\tcase '}': --c; break;\n\t\tcase '[': ++s; break;\n\t\tcase ']': --s; break;\n\t\tdefault: break;\n\t\t}\n\t}\n}\n\nint ans(int r, int c, int s){\n//cout<<\"r: \"<<r<<\"\\tc: \"<<c<<\"\\ts: \"<<s<<'\\n';\n\tint a = -1;\n\tfor(int i = 0; i < v.size(); ++i){\n\t\tint b = r * (v[i] & 31) + c * (v[i] >> 5 & 31) + s * (v[i] >> 10);\n\t\tif(a == -1) a = b;\n\t\telse if(a != b) return -1;\n\t}\n\treturn a;\n}\n\nint main(){\n\tint q;\n\tstring t;\n\twhile(cin >> p >> q, p){\n\t\tint r = 0, c = 0, s = 0;\n\t\tfor(int i = 0; i < p; ++i){\n\t\t\tcin >> t;\n\t\t\tsp[i] = t.find_first_not_of(\".\");\n\t\t\tcr[i] = r;\n\t\t\tcc[i] = c;\n\t\t\tcs[i] = s;\n\t\t\tcount(t, r, c, s);\n\t\t}\n\t\t\n\t\tv.clear();\n\t\tfor(r = 1; r <= 20; ++r)\n\t\tfor(c = 1; c <= 20; ++c)\n\t\tfor(s = 1; s <= 20; ++s){\n\t\t\tif(check(r, c, s)){\n\t\t\t\tv.push_back(r | c << 5 | s << 10);\n\t\t\t}\n\t\t}\n\t\t\n\t\tr = c = s = 0;\n\t\tfor(int i = 0; i < q; ++i){\n\t\t\tif(i != 0) cout << ' ';\n\t\t\tcout << ans(r, c, s);\n\t\t\tcin >> t;\n\t\t\tcount(t, r, c, s);\n\t\t}\n\t\tcout << '\\n';\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\n\nstruct UnionFind {\n\tvector<int> v;\n\tUnionFind(int n) : v(n) { for (int i = 0; i < n; i++) v[i] = i; }\n\tint  find(int x) { return v[x] == x ? x : v[x] = find(v[x]); }\n\tvoid unite(int x, int y) { v[find(x)] = find(y); }\n};\nstruct bracket {\n\tint r;\n\tint c;\n\tint s;\n\tint cnt;\n};\n\nint main() {\n\tint p, q;\n\twhile (cin >> p >> q, p) {\n\t\tcin.ignore();\n\t\tvector<bracket> brk(p, { 0,0,0,0 });\n\t\tvector<bracket> brk2(q, { 0,0,0,0 });\n\t\tREP(i, p) {\n\t\t\tif (i > 0)\n\t\t\t\tbrk[i] = brk[i - 1];\n\t\t\tstring s;\n\t\t\tgetline(cin, s);\n\t\t\tint cnt = 0;\n\t\t\twhile (cnt < s.length()&&s[cnt] == '.')\n\t\t\t\tcnt++;\n\t\t\tbrk[i].cnt = cnt;\n\t\t\tREP(j, s.length()) {\n\t\t\t\tif (s[j] == '(')\n\t\t\t\t\tbrk[i].r++;\n\t\t\t\tif (s[j] == ')')\n\t\t\t\t\tbrk[i].r--;\n\t\t\t\tif (s[j] == '{')\n\t\t\t\t\tbrk[i].c++;\n\t\t\t\tif (s[j] == '}')\n\t\t\t\t\tbrk[i].c--;\n\t\t\t\tif (s[j] == '[')\n\t\t\t\t\tbrk[i].s++;\n\t\t\t\tif (s[j] == ']')\n\t\t\t\t\tbrk[i].s--;\n\t\t\t}\n\t\t}\n\t\tREP(i, q) {\n\t\t\tif (i > 0)\n\t\t\t\tbrk2[i] = brk2[i - 1];\n\t\t\tstring s;\n\t\t\tgetline(cin, s);\n\t\t\tREP(j, s.length()) {\n\t\t\t\tif (s[j] == '(')\n\t\t\t\t\tbrk2[i].r++;\n\t\t\t\tif (s[j] == ')')\n\t\t\t\t\tbrk2[i].r--;\n\t\t\t\tif (s[j] == '{')\n\t\t\t\t\tbrk2[i].c++;\n\t\t\t\tif (s[j] == '}')\n\t\t\t\t\tbrk2[i].c--;\n\t\t\t\tif (s[j] == '[')\n\t\t\t\t\tbrk2[i].s++;\n\t\t\t\tif (s[j] == ']')\n\t\t\t\t\tbrk2[i].s--;\n\t\t\t}\n\t\t}\n\t\tcout << \"0\";\n\t\tFOR(m,1, q) {\n\t\t\tint ans = -1;\n\t\t\tFOR(i, 1, 21) {\n\t\t\t\tFOR(j, 1, 21) {\n\t\t\t\t\tFOR(k, 1, 21) {\n\t\t\t\t\t\tbool pass = true;\n\t\t\t\t\t\tREP(l, p - 1) {\n\t\t\t\t\t\t\tif (brk[l].r*i + brk[l].c*j + brk[l].s*k != brk[l + 1].cnt) {\n\t\t\t\t\t\t\t\tpass = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!pass)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tint tmp = brk2[m - 1].r*i + brk2[m - 1].c*j + brk2[m - 1].s*k;\n\t\t\t\t\t\tif (ans == -1) {\n\t\t\t\t\t\t\tans = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (ans != tmp) {\n\t\t\t\t\t\t\t\tans = -1;\n\t\t\t\t\t\t\t\ti = j = k = 21;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << \" \" << ans;\n\t\t}\n\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<set>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define MAX 20\nusing namespace std;\nint p,q;\nstring P[MAX],Q[MAX];\nint leading[2][MAX];\n \nbool check(int R,int C,int S)\n{\n  int r,c,s;\n  r = c = s = 0;\n  rep(i,p)\n    {\n      //cout << leading[0][i] << \"  = \" <<R*r + c*C + s*S << endl;\n      if(leading[0][i] != R*r + c*C + s*S)return false;\n \n      rep(j,P[i].size())\n    {\n      if(P[i][j] == '(')r++;\n      else if(P[i][j] == '{')c++;\n      else if(P[i][j] == '[')s++;\n       \n      if(P[i][j] == ')')r--;\n      else if(P[i][j] == '}')c--;\n      else if(P[i][j] == ']')s--;\n    }\n    }\n  return true;\n}\n \nint main()\n{\n  while(cin >> p >> q,p|q)\n    {\n      vector<int> Rv,Cv,Sv;\n      rep(i,p)\n    {\n      cin >> P[i];\n      int cnt = 0;\n      rep(j,P[i].size())\n        {\n          if(P[i][j] == '.')cnt++;\n          else              break;\n        }\n      leading[0][i] = cnt;\n    }\n \n      rep(i,q)\n    {\n      cin >> Q[i];\n      int cnt = 0;\n      rep(j,Q[i].size())\n        {\n          if(Q[i][j] == '.')cnt++;\n          else              break;\n        }\n      leading[1][i] = cnt;\n    }\n \n      //check(9,5,2);\n      //return 0;\n      REP(R,1,21)\n    {\n      REP(C,1,21)\n        {\n          REP(S,1,21)\n        {\n          if(check(R,C,S))\n            {\n              Rv.push_back(R);\n              Cv.push_back(C);\n              Sv.push_back(S);\n            }\n        }\n        }\n    }\n \n      int totalCost = 0;\n      int r,s,c;\n      r = s = c = 0;\n      rep(i,q)\n    {\n      set<int> st;\n      rep(j,Rv.size())\n        {\n          totalCost = r*Rv[j] + c*Cv[j] + s*Sv[j];\n          st.insert(totalCost);\n        }\n \n      if(st.empty() || (int)st.size() >= 2)\n        {\n          cout << -1;\n        }\n      else\n        {\n          set<int>::iterator it = st.begin();\n          cout << (*it);\n        }\n      if(i == q-1)cout << endl;\n      else cout << \" \";\n \n      rep(j,Q[i].size())\n        {\n          if(Q[i][j] == '(')r++;\n          else if(Q[i][j] == '{')c++;\n          else if(Q[i][j] == '[')s++;\n           \n          if(Q[i][j] == ')')r--;\n          else if(Q[i][j] == '}')c--;\n          else if(Q[i][j] == ']')s--;\n        }\n     \n    }\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <string.h>\n#include <algorithm>\n#include <utility>\n#include <set>\n#include <map>\n#include <deque>\n#include <queue>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n#include <stdio.h>\n\nusing namespace std;\n\n#define fo(i,n) for(int i=0; i<(int)n; i++)\n#define rep(it,s) for(__typeof((s).begin()) it=(s).begin();it!=(s).end();it++)\n#define mp(a,b) make_pair(a,b)\n#define pb(x) push_back(x)\n#define pii pair<int,int>\n\nint cnt[11];\nint c1[11][2], c2[11][2], c3[11][2];\nint p,q;\nint ans[11];\n\nint main() {\n\n    //freopen(\"input.txt\",\"r\",stdin);\n    //freopen(\"output.txt\",\"w\",stdout);\n\n    while (cin>>p>>q && p!=0) {\n        vector<string> vs;\n        for (int i=0; i<p; i++) {\n            string s;\n            cin>>s;\n            vs.push_back(s);\n        }\n        for (int i=0; i<p; i++) {\n            int k = 0;\n            cnt[i] = 0;\n            c1[i+1][0] = 0;\n            c2[i+1][0] = 0;\n            c3[i+1][0] = 0;\n            if (i!=0) {\n                c1[i+1][0] = c1[i][0];\n                c2[i+1][0] = c2[i][0];\n                c3[i+1][0] = c3[i][0];\n            }\n            while (k<vs[i].size() && vs[i][k++]=='.') cnt[i]++;\n            for (int k=0; k<vs[i].length(); k++) {\n                if (vs[i][k]=='(') c1[i+1][0]++;\n                if (vs[i][k]==')') c1[i+1][0]--;\n                if (vs[i][k]=='{') c2[i+1][0]++;\n                if (vs[i][k]=='}') c2[i+1][0]--;\n                if (vs[i][k]=='[') c3[i+1][0]++;\n                if (vs[i][k]==']') c3[i+1][0]--;\n            }\n        }\n        vs.clear();\n        for (int i=0; i<q; i++) {\n            string s;\n            cin>>s;\n            vs.push_back(s);\n        }\n        for (int i=0; i<q; i++) {\n            int k = 0;\n            c1[i+1][1] = 0;\n            c2[i+1][1] = 0;\n            c3[i+1][1] = 0;\n            if (i!=0) {\n                c1[i+1][1] = c1[i][1];\n                c2[i+1][1] = c2[i][1];\n                c3[i+1][1] = c3[i][1];\n            }\n            for (int k=0; k<vs[i].length(); k++) {\n                if (vs[i][k]=='(') c1[i+1][1]++;\n                if (vs[i][k]==')') c1[i+1][1]--;\n                if (vs[i][k]=='{') c2[i+1][1]++;\n                if (vs[i][k]=='}') c2[i+1][1]--;\n                if (vs[i][k]=='[') c3[i+1][1]++;\n                if (vs[i][k]==']') c3[i+1][1]--;\n            }\n        }\n        for (int i=0; i<q; i++) ans[i] = -1;\n        int r = 0, s = 0, c = 0;\n        for (int rr=1; rr<=20; rr++) {\n            for (int cc=1; cc<=20; cc++) {\n                for (int ss=1; ss<=20; ss++) {\n                    bool good = 1;\n                    for (int i=0; i<p; i++) {\n                        if (cnt[i]!=rr*c1[i][0]+cc*c2[i][0]+ss*c3[i][0]) {\n                            good = 0;\n                            break;\n                        }\n                    }\n                    if (good) {\n                        for (int i=0; i<q; i++) {\n                            int tmp = rr*c1[i][1]+cc*c2[i][1]+ss*c3[i][1];\n                            if (ans[i]==-1) ans[i] = tmp;\n                            else if (ans[i]!=tmp) ans[i] = -2;\n                        }\n                    }\n                }\n            }\n        }\n        for(int i=0;i<q; i++)\n            cout << ((ans[i]<0)?-1:ans[i]) << ((i==q-1)?\"\\n\":\" \");\n    }\n\n    return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "// Header {{{\n// includes {{{\n#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <sys/time.h>\n#include <unistd.h>\n#include <vector>\n// }}}\nusing namespace std;\n// consts {{{\nstatic const int INF = 1e9;\nstatic const double PI = acos(-1.0);\nstatic const double EPS = 1e-10;\n// }}}\n// typedefs {{{\ntypedef long long int LL;\ntypedef unsigned long long int ULL;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\ntypedef vector<ULL> VULL;\ntypedef vector<VULL> VVULL;\ntypedef vector<double> VD;\ntypedef vector<VD> VVD;\ntypedef vector<bool> VB;\ntypedef vector<VB> VVB;\ntypedef vector<char> VC;\ntypedef vector<VC> VVC;\ntypedef vector<string> VS;\ntypedef vector<VS> VVS;\ntypedef pair<int, int> PII;\ntypedef complex<int> P;\n#define PQ(type) priority_queue<type>\n// priority queue reverse\n#define PQR(type) priority_queue< type, vector<type>, greater<type> >\n// }}}\n// macros & inline functions {{{\n// syntax sugars {{{\n#define FOR(i, b, e) for (typeof(e) i = (b); i < (e); ++i)\n#define FORI(i, b, e) for (typeof(e) i = (b); i <= (e); ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define REPI(i, n) FORI(i, 0, n)\n#define OPOVER(_op, _type) inline bool operator _op (const _type &t) const\n#define ASSIGN_MAX(var, val) ((var) = max((var), (val)))\n#define ASSIGN_MIN(var, val) ((var) = min((var), (val)))\n// }}}\n// conversion {{{\ninline int toInt(string s) { int v; istringstream sin(s); sin>>v; return v; }\ntemplate<class T> inline string toString(T x) { ostringstream sout; sout<<x; return sout.str(); }\n// }}}\n// array and STL {{{\n#define ARRSIZE(a) ( sizeof(a) / sizeof(a[0]) )\n#define ZERO(a, v) ( assert(v == 0 || v == -1), memset(a, v, sizeof(a)) )\n#define F first\n#define S second\n#define MP(a, b) make_pair(a, b)\n#define SIZE(a) ((LL)a.size())\n#define PB(e) push_back(e)\n#define SORT(v) sort((v).begin(), (v).end())\n#define RSORT(v) sort((v).rbegin(), (v).rend())\n#define ALL(a) (a).begin(), (a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define EACH(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)\n#define REACH(c, it) for(typeof((c).rbegin()) it=(c).rbegin(); it!=(c).rend(); ++it)\n#define EXIST(s, e) ((s).find(e) != (s).end())\n// }}}\n// bit manipulation {{{\n// singed integers are not for bitwise operations, specifically arithmetic shifts ('>>', and maybe not good for '<<' too)\n#define IS_UNSIGNED(n) (!numeric_limits<typeof(n)>::is_signed)\n#define BIT(n) (assert(IS_UNSIGNED(n)), assert(n < 64), (1ULL << (n)))\n#define BITOF(n, m) (assert(IS_UNSIGNED(n)), assert(m < 64), ((ULL)(n) >> (m) & 1))\ninline int BITS_COUNT(ULL b) { int c = 0; while(b != 0) { c += (b & 1); b >>= 1; } return c; }\ninline int MSB(ULL b) { int c = 0; while(b != 0) { ++c; b >>= 1; } return c-1; }\ninline int MAKE_MASK(ULL upper, ULL lower) { assert(lower < 64 && upper < 64 && lower <= upper); return (BIT(upper) - 1) ^ (BIT(lower) - 1); }\n// }}}\n// for readable code {{{\n#define EVEN(n) (n % 2 == 0)\n#define ODD(n) (!EVEN(n))\n// }}}\n// debug {{{\n#define arrsz(a) ( sizeof(a) / sizeof(a[0]) )\n#define dprt(fmt, ...) if (opt_debug) { fprintf(stderr, fmt, ##__VA_ARGS__); }\n#define darr(a) if (opt_debug) { copy( (a), (a) + arrsz(a), ostream_iterator<int>(cerr, \" \") ); cerr << endl; }\n#define darr_range(a, f, t) if (opt_debug) { copy( (a) + (f), (a) + (t), ostream_iterator<int>(cerr, \" \") ); cerr << endl; }\n#define dvec(v) if (opt_debug) { copy( ALL(v), ostream_iterator<int>(cerr, \" \") ); cerr << endl; }\n#define darr2(a) if (opt_debug) { FOR(__i, 0, (arrsz(a))){ darr( (a)[__i] ); } }\n#define WAIT() if (opt_debug) { string _wait_; cerr << \"(hit return to continue)\" << endl; getline(cin, _wait_); }\n#define dump(x) if (opt_debug) { cerr << \" [L\" << __LINE__ << \"] \" << #x << \" = \" << (x) << endl; }\n// dump vector elements in [s, e)\n#define dumpv(v, s, e) if (opt_debug) { cerr << \" [L\" << __LINE__ << \"] \" << #v << \" = \"; FOR(__i, s, e) { cerr << v[__i] << \"\\t\"; } cerr << endl; }\n#define dumpl(x) if (opt_debug) { cerr << \" [L\" << __LINE__ << \"] \" << #x << endl << (x) << endl; }\n#define dumpf() if (opt_debug) { cerr << __PRETTY_FUNCTION__ << endl; }\n#define where() if (opt_debug) { cerr << __FILE__ << \": \" << __PRETTY_FUNCTION__ << \" [L: \" << __LINE__ << \"]\" << endl; }\n#define show_bits(b, s) if(opt_debug) { REP(i, s) { cerr << BITOF(b, s-1-i); if(i%4 == 3) cerr << ' '; } cerr << endl; }\n\n// ostreams {{{\n// complex\ntemplate<typename T> ostream& operator<<(ostream& s, const complex<T>& d) {return s << \"(\" << d.real() << \", \" << d.imag() << \")\";}\n\n// pair\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& s, const pair<T1, T2>& d) {return s << \"(\" << d.first << \", \" << d.second << \")\";}\n\n// vector\ntemplate<typename T> ostream& operator<<(ostream& s, const vector<T>& d) {\n\tint len = d.size();\n\tREP (i, len) {\n\t\ts << d[i]; if (i < len - 1) s << \"\\t\";\n\t}\n\treturn s;\n}\n\n// 2 dimentional vector\ntemplate<typename T> ostream& operator<<(ostream& s, const vector< vector<T> >& d) {\n\tint len = d.size();\n\tREP (i, len) {\n\t\ts << d[i] << endl;\n\t}\n\treturn s;\n}\n\n// map\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& s, const map<T1, T2>& m) {\n\ts << \"{\" << endl;\n\tfor (typeof(m.begin()) itr = m.begin(); itr != m.end(); ++itr) {\n\t\ts << \"\\t\" << (*itr).first << \" : \" << (*itr).second << endl;\n\t}\n\ts << \"}\" << endl;\n\treturn s;\n}\n// }}}\n// }}}\n// }}}\n// time {{{\ninline double now(){ struct timeval tv; gettimeofday(&tv, NULL); return (static_cast<double>(tv.tv_sec) + static_cast<double>(tv.tv_usec) * 1e-6); }\n// }}}\n// string manipulation {{{\ninline VS split(string s, char delimiter) { VS v; string t; REP(i, s.length()) { if(s[i] == delimiter) v.PB(t), t = \"\"; else t += s[i]; } v.PB(t); return v; }\ninline string join(VS s, string j) { string t; REP(i, s.size()) { t += s[i] + j; } return t; }\n// }}}\n// geometry {{{\n#define Y real()\n#define X imag()\n// }}}\n// 2 dimentional array {{{\nenum { UP, RIGHT, DOWN, LEFT, UP_RIGHT, DOWN_RIGHT, DOWN_LEFT, UP_LEFT };\nP dydx4[4] = { P(-1, 0), P(0, 1), P(1, 0), P(0, -1) };\nP dydx8[8] = { P(-1, 0), P(0, 1), P(1, 0), P(0, -1), P(-1, 1), P(1, 1), P(1, -1), P(-1, -1) };\nbool in_field(int H, int W, P p) {\n\treturn (0 <= p.Y && p.Y < H) && (0 <= p.X && p.X < W);\n}\n// }}}\n// input and output {{{\ninline void input(string filename) {\n\tfreopen(filename.c_str(), \"r\", stdin);\n}\ninline void output(string filename) {\n\tfreopen(filename.c_str(), \"w\", stdout);\n}\n// }}}\n// }}}\n\n// Header under development {{{\n\nint LCM(int a, int b) {\n\t// FIXME\n\treturn a * b;\n}\n\n// Fraction class {{{\n// ref: http://martin-thoma.com/fractions-in-cpp/\nclass Fraction {\n\tpublic:\n\t\tULL numerator;\n\t\tULL denominator;\n\t\tFraction(ULL _numerator, ULL _denominator) {\n\t\t\tassert(_denominator > 0);\n\t\t\tnumerator = _numerator;\n\t\t\tdenominator = _denominator;\n\t\t};\n\n\t\tFraction operator*(const ULL rhs) {\n\t\t\treturn Fraction(this->numerator * rhs, this->denominator);\n\t\t};\n\n\t\tFraction operator*(const Fraction& rhs) {\n\t\t\treturn Fraction(this->numerator * rhs.numerator, this->denominator * rhs.denominator);\n\t\t}\n\n\t\tFraction operator+(const Fraction& rhs) {\n\t\t\tULL lcm = LCM(this->denominator, rhs.denominator);\n\t\t\tULL numer_lhs = this->numerator * (this->denominator / lcm);\n\t\t\tULL numer_rhs = rhs.numerator * (rhs.numerator / lcm);\n\t\t\treturn Fraction(numer_lhs + numer_rhs, lcm);\n\t\t}\n\n\t\tFraction& operator+=(const Fraction& rhs) {\n\t\t\tFraction result = (*this) + rhs;\n\t\t\tthis->numerator = result.numerator;\n\t\t\tthis->denominator = result.denominator;\n\t\t\treturn *this;\n\t\t}\n};\n\nstd::ostream& operator<<(std::ostream &s, const Fraction &a) {\n\tif (a.denominator == 1) {\n\t\ts << a.numerator;\n\t} else {\n\t\ts << a.numerator << \"/\" << a.denominator;\n\t}\n\treturn s;\n}\n\n// }}}\n\n// }}}\n\nbool opt_debug = false;\n\nvoid parse_brackets(string line, int *ro, int *co, int *so) {\n\tREP (i, line.length()) {\n\t\tswitch (line[i]) {\n\t\t\tcase '(':\n\t\t\t\t(*ro)++;\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\t(*ro)--;\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\t(*co)++;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\t(*co)--;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\t(*so)++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\t(*so)--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nint main(int argc, char** argv) {\n\tstd::ios_base::sync_with_stdio(false);\n\t// set options {{{\n\tint __c;\n\twhile ( (__c = getopt(argc, argv, \"d\")) != -1 ) {\n\t\tswitch (__c) {\n\t\t\tcase 'd':\n\t\t\t\topt_debug = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tabort();\n\t\t}\n\t}\n\t// }}}\n\n\t// opt_debug = true;\n\t// input(\"./inputs/0.txt\");\n\t// output(\"./outputs/0.txt\");\n\n\tint p, q;\n\twhile (cin >> p >> q, p | q) {\n\t\tVS good_lines(p);\n\t\tVS my_lines(q);\n\t\tREP (i, p) {\n\t\t\tcin >> good_lines[i];\n\t\t}\n\t\tREP (i, q) {\n\t\t\tcin >> my_lines[i];\n\t\t}\n\n\t\tvector< pair<int, PII> > combinations;\n\t\tFOR (r, 1, 21) {\n\t\t\tFOR (c, 1, 21) {\n\t\t\t\tFOR (s, 1, 21) {\n\t\t\t\t\tbool ok = true;\n\t\t\t\t\tint ro = 0, co = 0, so = 0;\n\t\t\t\t\tREP (i, p) {\n\t\t\t\t\t\tstring &line = good_lines[i];\n\t\t\t\t\t\tint indentation = 0;\n\t\t\t\t\t\twhile (line[indentation] == '.') {\n\t\t\t\t\t\t\tindentation++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (ro * r + co * c + so * s != indentation) {\n\t\t\t\t\t\t\tok = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparse_brackets(line, &ro, &co, &so);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ok) {\n\t\t\t\t\t\tcombinations.PB(MP(r, MP(c, s)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint ro = 0, co = 0, so = 0;\n\t\tREP (i, q) {\n\t\t\tstring &line = my_lines[i];\n\t\t\tint indent = INF;\n\t\t\tREP (j, combinations.size()) {\n\t\t\t\tpair<int, PII> comb = combinations[j];\n\t\t\t\tint r = comb.F, c = comb.S.F, s = comb.S.S;\n\t\t\t\tint _indent = ro * r + co * c + so * s;\n\t\t\t\tif (indent == INF || indent == _indent) {\n\t\t\t\t\tindent = _indent;\n\t\t\t\t} else {\n\t\t\t\t\tindent = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparse_brackets(line, &ro, &co, &so);\n\t\t\tif (indent == INF) {\n\t\t\t\tindent = -1;\n\t\t\t}\n\t\t\tif (i != 0) {\n\t\t\t\tcout << \" \";\n\t\t\t}\n\t\t\tcout << indent;\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}\n\n// vim: foldmethod=marker"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nchar A[10][100];\nchar B[10][100];\nbool ans[10][81];\nint main(){\n\tint a,b;\n\twhile(scanf(\"%d%d\",&a,&b),a){\n\t\tfor(int i=0;i<a;i++)scanf(\"%s\",A[i]);\n\t\tfor(int i=0;i<b;i++)scanf(\"%s\",B[i]);\n\t\tfor(int i=0;i<b;i++)\n\t\t\tfor(int j=0;j<81;j++)ans[i][j]=false;\n\t\tfor(int i=1;i<=20;i++){\n\t\t\tfor(int j=1;j<=20;j++){\n\t\t\t\tfor(int k=1;k<=20;k++){\n\t\t\t\t\tbool ok=true;\n\t\t\t\t\tint c=0,d=0,e=0;\n\t\t\t\t\tfor(int l=0;l<a;l++){\n\t\t\t\t\t\tint in=0;\n\t\t\t\t\t\tfor(int m=0;A[l][m];m++){\n\t\t\t\t\t\t\tif(A[l][m]!='.')break;\n\t\t\t\t\t\t\tin++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(c*i+d*j+e*k!=in)ok=false;\n\t\t\t\t\t\tfor(int m=0;A[l][m];m++){\n\t\t\t\t\t\t\tif(A[l][m]=='(')c++;\n\t\t\t\t\t\t\tif(A[l][m]==')')c--;\n\t\t\t\t\t\t\tif(A[l][m]=='{')d++;\n\t\t\t\t\t\t\tif(A[l][m]=='}')d--;\n\t\t\t\t\t\t\tif(A[l][m]=='[')e++;\n\t\t\t\t\t\t\tif(A[l][m]==']')e--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!ok)continue;\n\t\t\t\t\tc=0;\n\t\t\t\t\td=0;\n\t\t\t\t\te=0;\n\t\t\t\t\tfor(int l=0;l<b;l++){\n\t\t\t\t\t\tans[l][c*i+d*j+e*k]=true;\n\t\t\t\t\t\tfor(int m=0;B[l][m];m++){\n\t\t\t\t\t\t\tif(B[l][m]=='(')c++;\n\t\t\t\t\t\t\tif(B[l][m]==')')c--;\n\t\t\t\t\t\t\tif(B[l][m]=='{')d++;\n\t\t\t\t\t\t\tif(B[l][m]=='}')d--;\n\t\t\t\t\t\t\tif(B[l][m]=='[')e++;\n\t\t\t\t\t\t\tif(B[l][m]==']')e--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<b;i++){\n\t\t\tif(i)printf(\" \");\n\t\t\tint at=0;\n\t\t\tint count=0;\n\t\t\tfor(int j=0;j<81;j++){\n\t\t\t\tif(ans[i][j]){\n\t\t\t\t\tat=j;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count>1)printf(\"-1\");\n\t\t\telse printf(\"%d\",at);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\nconst int MAX = 81;\nstruct data{int indent,R,C,S;};\nvector<data> P,Q;\n\nvoid input(int num, vector<data>& V){\n  V.clear();\n  data d = (data){0,0,0,0};\n  \n  \n  for(int i = 0; i < num; i++){\n    string s;\n    getline(cin,s);\n    int tmp = 0;\n    for(int j = 0; j < s.length() && s[j] == '.'; j++) tmp++;\n    for(int j = 0; j < s.length(); j++){\n      if(s[j] == '(') d.R++;\n      if(s[j] == ')') d.R--;\n      if(s[j] == '{') d.C++;\n      if(s[j] == '}') d.C--;\n      if(s[j] == '[') d.S++;\n      if(s[j] == ']') d.S--;\n    }\n    \n    d.indent = tmp;\n    V.push_back(d);\n  }\n  \n}\n\nbool isValid(int r, int c, int s){\n  for(int i = 1; i < P.size(); i++)\n    if(P[i].indent != r*P[i-1].R + c*P[i-1].C + s*P[i-1].S) return false;\n  return true;\n}\n\n\nvector<data> getRCS(){\n  vector<data> res;\n  \n  for(int i = 1; i <= 20; i++)\n    for(int j = 1; j <= 20; j++)\n      for(int k = 1; k <= 20; k++)\n        if(isValid(i,j,k)) res.push_back((data){0,i,j,k});\n  return res;\n}\n\nvoid solve(const vector<data>& v){\n  int ans[MAX];\n  fill(ans,ans+MAX,-2);\n  ans[0] = 0;\n  \n  \n  for(int pos = 1; pos < Q.size(); pos++){\n    for(int i = 0; i < v.size(); i++){\n      int cost = v[i].R*Q[pos-1].R+v[i].C*Q[pos-1].C+v[i].S*Q[pos-1].S;\n      if(ans[pos] == -2) ans[pos] = cost;\n      else if(ans[pos] != cost) ans[pos] = -1;\n    }\n  }\n  for(int i = 0; i < Q.size(); i++){\n    if(i) cout << \" \" ;\n    cout << ans[i];\n  }\n  cout << endl;\n}\n\nvoid print(const vector<data>& v){\n  for(int i = 0; i < v.size(); i++)\n    cout << v[i].indent << \" \" << v[i].R << \" \" << v[i].C << \" \" << v[i].S << endl;\n}\n\nint main(){\n  int p,q;\n  while(cin >> p >> q && p+q){\n    cin.ignore();\n    input(p,P);\n    input(q,Q);\n    \n    vector<data> able = getRCS();\n    solve(able);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<cstdlib>\n#include<iostream>\nusing namespace std;\nconst int N = 100;\nint n,m;\nchar s[N];\nint a[10][4];\nint b[3];\nvector<int> an;\nvoid work(char *s,int mark) {\n    int cnt = 0;\n    int fg = 1;\n    for (int i = 0; i < 3; i++) {\n        a[mark][i] = b[i];\n    }\n    for (int i = 0; s[i]; i++) {\n        if (s[i] == '.' && fg) cnt++;\n        if (s[i] != '.') fg = 0;\n        if (s[i] == '(') b[0]++;\n        if (s[i] == ')') b[0]--;\n        if (s[i] == '{') b[1]++;\n        if (s[i] == '}') b[1]--;\n        if (s[i] == '[') b[2]++;\n        if (s[i] == ']') b[2]--;\n    }\n    a[mark][3] = cnt;\n   \n}\nvoid solve(char *s,int mark){\n    if (mark == 0) {\n        an.push_back(0);\n    }else {\n        int fg = 0;\n        int val = 0;\n        for (int i = 1; i <= 20; i++) {\n            for (int j = 1; j <= 20; j++) {\n                for (int k = 1; k <= 20; k++) {\n                    int f = 1;\n                    for (int p = 0; p < n && f; p++) {\n                        int sm = i * a[p][0] + j * a[p][1] + k * a[p][2];\n                        if (sm != a[p][3]) f = 0;\n                    }\n                    if (f) {\n                        int sm = i * b[0] + j * b[1] + k * b[2];\n                        if (fg == 0 || sm != val) {\n                            val = sm;\n                            fg++;\n                        }\n                    }\n                }\n            }\n        }\n        if (fg == 1) an.push_back(val);\n        else an.push_back(-1);\n    }\n    for (int i = 0; s[i]; i++) {\n        if (s[i] == '(') b[0]++;\n        if (s[i] == ')') b[0]--;\n        if (s[i] == '{') b[1]++;\n        if (s[i] == '}') b[1]--;\n        if (s[i] == '[') b[2]++;\n        if (s[i] == ']') b[2]--;\n    }\n}\nint main(){\n    while (~scanf(\"%d%d\",&n,&m),n+m) {\n        getchar();\n        memset(a,0,sizeof(a));\n        memset(b,0,sizeof(b));\n        for (int i = 0; i < n; i++) {\n            gets(s);\n            //cout<<s<<endl;\n            work(s,i);\n        }\n        memset(b,0,sizeof(b));\n        an.clear();\n        for (int i = 0; i < m; i++) {\n            gets(s);\n           // cout<<s<<endl;\n            solve(s,i);\n        }\n        int sz = an.size();\n        for (int i = 0; i < sz; i++) {\n            printf(\"%d%c\",an[i],i == sz - 1 ? '\\n' : ' ');\n        }\n    }\n\n\n    return 0;\n}\n/*\n.\n............................................................\n............................................................\n*/"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <tuple>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main()\n{\n    while (true) {\n        int p, q;\n        cin >> p >> q;\n        if (p == 0 && q == 0) {\n            return 0;\n        }\n\n        vector<string> P;\n        for (int i = 0; i < p; ++i) {\n            string a;\n            cin >> a;\n            P.push_back(a);\n        }\n\n        // note: amount of indentation = \"aoi\"\n        // count aoi and number of brackets\n        auto processLine = [](const string& line) {\n            auto aoi = 0;\n            auto groupingNotFound = true;\n            auto r = make_pair(0, 0); // round brackets\n            auto c = make_pair(0, 0); // curly brackets\n            auto s = make_pair(0, 0); // square brackets\n            for (char i : line) {\n                if (groupingNotFound && i == '.') {\n                    aoi += 1;\n                }\n                else {\n                    groupingNotFound = false;\n                    if (i == '(')\n                        r.first += 1;\n                    else if (i == ')') {\n                        r.second += 1;\n                    }\n                    else if (i == '{') {\n                        c.first += 1;\n                    }\n                    else if (i == '}') {\n                        c.second += 1;\n                    }\n                    else if (i == '[') {\n                        s.first += 1;\n                    }\n                    else if (i == ']') {\n                        s.second += 1;\n                    }\n                }\n            }\n            return make_tuple(aoi, r, c, s);\n        };\n\n        // compute well-indented aoi by triple and current number of brackets\n        auto computeAoi = [](const tuple<int, int, int>& param,\n                             const pair<int, int>& r, const pair<int, int>& c,\n                             const pair<int, int>& s) {\n            int R, C, S;\n            tie(R, C, S) = param;\n            return R * (r.first - r.second) + C * (c.first - c.second) +\n                   S * (s.first - s.second);\n        };\n\n        // helper function to add pair\n        auto addPair = [](auto& a, const auto& b) {\n            a.first += b.first;\n            a.second += b.second;\n        };\n\n        // compute possible triples\n        auto computeParamCandidates = [processLine, computeAoi,\n                                       addPair](const vector<string>& v) {\n            auto r = make_pair(0, 0);\n            auto c = make_pair(0, 0);\n            auto s = make_pair(0, 0);\n            vector<tuple<int, int, int>> candidates;\n            // all combinations\n            for (int R = 1; R <= 20; ++R) {\n                for (int C = 1; C <= 20; ++C) {\n                    for (int S = 1; S <= 20; ++S) {\n                        candidates.emplace_back(R, C, S);\n                    }\n                }\n            }\n            for (auto&& line : v) {\n                int aoi;\n                pair<int, int> cr, cc, cs;\n                tie(aoi, cr, cc, cs) = processLine(line);\n                vector<tuple<int, int, int>> temp;\n                // for all candidates\n                for (auto&& i : candidates) {\n                    // if we can compute proper aoi with candidates i\n                    if (computeAoi(i, r, c, s) == aoi) {\n                        // keep as candidates\n                        temp.push_back(move(i));\n                    }\n                }\n                swap(candidates, temp);\n                // the aoi determined by number of brackets in preceding lines\n                // so we add them in the last of iteration\n                addPair(r, cr);\n                addPair(c, cc);\n                addPair(s, cs);\n            }\n            return candidates;\n        };\n\n        // compute triple candidates by input P\n        const auto candidates_ = computeParamCandidates(P);\n\n        vector<string> Q;\n        for (int i = 0; i < q; ++i) {\n            string a;\n            cin >> a;\n            Q.push_back(a);\n        }\n\n        auto computeAoiByCandidates = [&candidates_,\n                                       computeAoi](const pair<int, int>& r,\n                                                   const pair<int, int>& c,\n                                                   const pair<int, int>& s) {\n            auto aoiCandidate = computeAoi(candidates_[0], r, c, s);\n            for (size_t i = 1; i < candidates_.size(); ++i) {\n                auto temp = computeAoi(candidates_[i], r, c, s);\n                // there are some possibilities of aoi in candidates\n                // so return -1\n                if (temp != aoiCandidate) {\n                    return -1;\n                }\n            }\n            return aoiCandidate;\n        };\n\n        auto r = make_pair(0, 0);\n        auto c = make_pair(0, 0);\n        auto s = make_pair(0, 0);\n        vector<int> results;\n        for (auto&& line : Q) {\n            int aoi;\n            pair<int, int> cr, cc, cs;\n            tie(aoi, cr, cc, cs) = processLine(line);\n            results.push_back(computeAoiByCandidates(r, c, s));\n            addPair(r, cr);\n            addPair(c, cc);\n            addPair(s, cs);\n        }\n        // pretty print\n        for (size_t i = 0; i < results.size(); ++i) {\n            cout << results[i];\n            if (i != results.size() - 1) {\n                cout << ' ';\n            }\n        }\n        cout << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<iomanip>\n#include<math.h>\n#include<complex>\n#include<queue>\n#include<deque>\n#include<stack>\n#include<map>\n#include<set>\n#include<bitset>\n#include<functional>\n#include<assert.h>\n#include<numeric>\nusing namespace std;\n#define REP(i,m,n) for(int i=(int)(m) ; i < (int) (n) ; ++i )\n#define rep(i,n) REP(i,0,n)\nusing ll = long long;\nconst int inf=1e9+7;\nconst ll longinf=1LL<<60 ;\nconst ll mod=1e9+7 ;\n\nint a[100][100][100];\n\nvoid solve(int n,int m){\n    map<int,int> mp;\n    int x=0,y=0,z=0;\n    rep(i,n){\n        string s;cin>>s;\n        int c=0;\n        while(c<s.size()&&s[c]=='.')++c;\n        mp[10000*x+100*y+z]=c;\n        rep(j,s.size()){\n            if(s[j]=='(')++x;\n            if(s[j]==')')--x;\n            if(s[j]=='{')++y;\n            if(s[j]=='}')--y;\n            if(s[j]=='[')++z;\n            if(s[j]==']')--z;\n        }\n    }\n    vector<int> P,Q,R;\n    REP(i,1,21)REP(j,1,21)REP(k,1,21){\n        bool ok=true;\n        for(auto p : mp){\n            if(i*(p.first/10000)+j*(p.first/100%100)+k*(p.first%100)!=p.second)ok=false;\n        }\n        if(ok){\n            P.push_back(i);\n            Q.push_back(j);\n            R.push_back(k);\n        }\n    }\n    x=0,y=0,z=0;\n    rep(i,m){\n        string s;\n        cin>>s;\n        if(mp.count(10000*x+100*y+z))cout<<mp[10000*x+100*y+z];\n        else {\n            set<int> st;\n            rep(j,P.size()){\n                st.insert(x*P[j]+y*Q[j]+z*R[j]);\n            }\n            if(st.size()==1)cout<<*st.begin();\n            else cout<<-1;\n        }\n        rep(j,s.size()){\n            if(s[j]=='(')++x;\n            if(s[j]==')')--x;\n            if(s[j]=='{')++y;\n            if(s[j]=='}')--y;\n            if(s[j]=='[')++z;\n            if(s[j]==']')--z;\n        }\n        if(i!=m-1)cout<<\" \";\n        else cout<<endl;\n    }\n}\nint main(){\n    int n,m;\n    while(cin>>n>>m,n)solve(n,m);\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nint main(int argc, char*argv[])\n{\n  for(;;) {\n    int p, q;\n    cin >> p >> q;\n    if(p == 0 && q == 0) break;\n    auto analyze = [](const string &line) {\n      vector<int> bs = {0,0,0,0};\n      int ind = 0;\n      bool fst = true;\n      for(int j = 0; j < line.length(); j++) {\n        if(fst && line[j] == '.') { ind++; continue; }\n        fst = false;\n        switch(line[j]) {\n        case '(' : { bs[0]++; break; }\n        case ')' : { bs[0]--; break; }\n        case '{' : { bs[1]++; break; }\n        case '}' : { bs[1]--; break; }\n        case '[' : { bs[2]++; break; }\n        case ']' : { bs[2]--; break; }\n        }\n      }\n      bs[3] = ind;\n      return bs;\n    };\n    vector<vector<int>> pbs, qbs;\n    for(int i = 0; i < p; i++) {\n      string line;\n      cin >> line;\n      vector<int> bs = analyze(line);\n      pbs.push_back(bs);\n    }\n    for(int i = 0; i < q; i++) {\n      string line;\n      cin >> line;\n      vector<int> bs = analyze(line);\n      qbs.push_back(bs);\n    }\n    auto indent = [](const vector<vector<int>> &bss, int r, int c, int s) {\n      int rs = 0, cs = 0, ss = 0;\n      vector<int> inds;\n      for(int i = 0; i < bss.size(); i++) {\n        int ind = rs * r + cs * c + ss * s;\n        inds.push_back(ind);\n        rs += bss[i][0];\n        cs += bss[i][1];\n        ss += bss[i][2];\n      }\n      return inds;\n    };\n    auto check = [&pbs,&indent](int r, int c, int s) {\n      vector<int> inds = indent(pbs,r,c,s);\n      for(int i = 0; i < pbs.size(); i++) {\n        if(inds[i] != pbs[i][3]) return false;\n      }\n      return true;\n    };\n    vector<vector<int>> rcss;\n    for(int r = 1; r <= 20; r++) {\n      for(int c = 1; c <= 20; c++) {\n        for(int s = 1; s <= 20; s++) {\n          if(check(r,c,s)) {\n            rcss.push_back({r, c, s});\n          }\n        }\n      }\n    }\n    vector<int> ans;\n    for(auto rcs : rcss) {\n      vector<int> inds = indent(qbs, rcs[0], rcs[1], rcs[2]);\n      if(ans.size() == 0) {\n        ans = inds;\n      } else {\n        for(int i = 0; i < ans.size(); i++) {\n          if(ans[i] != inds[i]) ans[i] = -1;\n        }\n      }\n    }\n    for(int i = 0; i < ans.size(); i++) {\n      if(i > 0) cout << \" \";\n      cout << ans[i];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,n) rep2(i,0,n)\n#define rep2(i,m,n) for(int i=(m);i<(n);i++)\n#define sz(x) ((x).size())\n\nint p,q;\nstring s[11],t[11];\nint P[11],nr[11],nc[11],ns[11];\nint mr[11],mc[11],ms[11];\n\nint main2(){\n\trep(i,p){\n\t\tint cur=0;\n\t\twhile(cur<sz(s[i]) && s[i][cur]=='.') cur++;\n\t\tP[i]=cur;\n\t}\n\tint R=0,C=0,S=0;\n\trep(i,p){\n\t\tnr[i]=R,nc[i]=C,ns[i]=S;\n\t\trep(j,sz(s[i])){\n\t\t\tif(s[i][j]=='(')R++;\n\t\t\tif(s[i][j]==')')R--;\n\t\t\tif(s[i][j]=='{')C++;\n\t\t\tif(s[i][j]=='}')C--;\n\t\t\tif(s[i][j]=='[')S++;\n\t\t\tif(s[i][j]==']')S--;\n\t\t}\n\t}\n\trep(i,q){\n\t\tmr[i]=R,mc[i]=C,ms[i]=S;\n\t\trep(j,sz(t[i])){\n\t\t\tif(t[i][j]=='(')R++;\n\t\t\tif(t[i][j]==')')R--;\n\t\t\tif(t[i][j]=='{')C++;\n\t\t\tif(t[i][j]=='}')C--;\n\t\t\tif(t[i][j]=='[')S++;\n\t\t\tif(t[i][j]==']')S--;\n\t\t}\n\t}\n\tint ans[11];\n\tfill(ans,ans+q,-2);\n\trep2(r,1,21)rep2(c,1,21)rep2(s,1,21){\n\t\tint ok=1;\n\t\trep(i,p){\n\t\t\tint indent = r*nr[i] + c*nc[i] + s*ns[i];\n\t\t\tif(indent != P[i]){\n\t\t\t\tok=0;break;\n\t\t\t}\n\t\t}\n\t\tif(ok==0)continue;\n\t\trep(i,q){\n\t\t\tint indent = r*mr[i] + c*mc[i] + s*ms[i];\n\t\t\tif(ans[i]==-2)ans[i]=indent;\n\t\t\telse if(ans[i]!=indent)ans[i]=-1;\n\t\t}\n\t}\n\trep(i,q)cout<<ans[i]<<(i==q-1?\"\\n\":\" \");\n}\n\nint main(){\n\twhile(cin>>p>>q && p){\n\t\tgetline(cin,s[0]);\n\t\trep(i,p)getline(cin,s[i]);\n\t\trep(i,q)getline(cin,t[i]);\n\t\tmain2();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\n#define REP(i,n) for(ll i=0;i<ll(n);++i)\n#define RREP(i,n) for(ll i=ll(n)-1;i>=0;--i)\n#define FOR(i,m,n) for(ll i=m;i<ll(n);++i)\n#define RFOR(i,m,n) for(ll i=ll(n)-1;i>=ll(m);--i)\n#define ALL(v) (v).begin(),(v).end()\n#define UNIQUE(v) v.erase(unique(ALL(v)),v.end());\n#define DUMP(v) REP(aa, (v).size()) { cout << v[aa]; if (aa != v.size() - 1)cout << \" \"; else cout << endl; }\n#define INF 1000000001ll\n#define MOD 1000000007ll\n#define EPS 1e-9\n\nconst int dx[8] = { 1,1,0,-1,-1,-1,0,1 };\nconst int dy[8] = { 0,1,1,1,0,-1,-1,-1 };\n\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nll max(ll a, int b) { return max(a, ll(b)); }\nll max(int a, ll b) { return max(ll(a), b); }\nll min(ll a, int b) { return min(a, ll(b)); }\nll min(int a, ll b) { return min(ll(a), b); }\n\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tint n, m;\n\twhile (cin >> n >> m, n) {\n\t\tvector<string> p(n), q(m);\n\t\tREP(i, n)cin >> p[i];\n\t\tREP(i, m)cin >> q[i];\n\t\tvi ind(n);\n\t\tREP(i, n) {\n\t\t\tint cnt = 0;\n\t\t\tREP(j, p[i].size()) {\n\t\t\t\tif (p[i][j] != '.')break;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tind[i] = cnt;\n\t\t}\n\t\tvi res(m, -1);\n\t\tREP(i, 20)REP(j, 20)REP(k, 20) {\n\t\t\tint r = 0, c = 0, s = 0;\n\t\t\tbool ok = true;\n\t\t\tREP(a, n) {\n\t\t\t\tif (ind[a] != (i + 1)*r + (j + 1)*c + (k + 1)*s)ok = false;\n\t\t\t\tREP(b, p[a].size()) {\n\t\t\t\t\tif (p[a][b] == '(')r++;\n\t\t\t\t\telse if (p[a][b] == ')')r--;\n\t\t\t\t\telse if (p[a][b] == '{')c++;\n\t\t\t\t\telse if (p[a][b] == '}')c--;\n\t\t\t\t\telse if (p[a][b] == '[')s++;\n\t\t\t\t\telse if (p[a][b] == ']')s--;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif (!ok)continue;\n\t\t\tr = 0, c = 0, s = 0;\n\t\t\n\t\t\tREP(a, m) {\n\t\t\t\tif(res[a]==-1)res[a] = (i + 1)*r + (j + 1)*c + (k + 1)*s;\n\t\t\t\telse if(res[a]!=(i + 1)*r + (j + 1)*c + (k + 1)*s)res[a] = INF;\n\t\t\t\tREP(b, q[a].size()) {\n\t\t\t\t\tif (q[a][b] == '(')r++;\n\t\t\t\t\telse if (q[a][b] == ')')r--;\n\t\t\t\t\telse if (q[a][b] == '{')c++;\n\t\t\t\t\telse if (q[a][b] == '}')c--;\n\t\t\t\t\telse if (q[a][b] == '[')s++;\n\t\t\t\t\telse if (q[a][b] == ']')s--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tREP(i, m) {\n\t\t\tif (i)cout << \" \";\n\t\t\tif (res[i] == INF)cout << -1;\n\t\t\telse cout << res[i];\n\t\t}\n\t\tcout << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n \nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    //    for(int i=0;i<n[0];i++) cout<<cnt[0][i][0]<<' '<<cnt[0][i][1]<<' '<<cnt[1][i][2]<<endl;\n    //    cout<<endl;\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      // Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid UpDate(){\n  /*for(MAP::iterator i=m.begin();i!=m.end();i++){\n    for(MAP::iterator j=m.begin();j!=m.end();j++){\n      if(*i==*j) continue;\n      if((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n      int a=(*j).A,b=(*j).B,c=(*j).C;\n      while(a-(*i).A>=0&&b-(*i).B>=0&&c-(*i).C>=0) a-=(*i).A,b-=(*i).B,c-=(*i).C;\n      if(m.find(M(a,M(b,c)))!=m.end()) continue;\n      m.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n    }\n    }*/\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define dump(a) (cerr << (#a) << \" = \" << (a) << endl)\n\ntemplate<class T> inline void chmax(T& a, const T& b) { if(b > a) a = b; }\ntemplate<class T> inline void chmin(T& a, const T& b) { if(b < a) a = b; }\n\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n\tos << '(' << p.first << \", \" << p.second << ')';\n\treturn os;\n}\n\ntemplate<class Tuple, unsigned Index>\nvoid print_tuple(ostream& os, const Tuple& t) {}\n\ntemplate<class Tuple, unsigned Index, class Type, class... Types>\nvoid print_tuple(ostream& os, const Tuple& t) {\n\tif(Index > 0) os << \", \";\n\tos << get<Index>(t);\n\tprint_tuple<Tuple, Index + 1, Types...>(os, t);\n}\n\ntemplate<class... Types>\nostream& operator<<(ostream& os, const tuple<Types...>& t) {\n\tos << '(';\n\tprint_tuple<tuple<Types...>, 0, Types...>(os, t);\n\treturn os << ')';\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream&, Iterator, const Iterator&);\n\ntemplate<typename T>\nostream& operator<<(ostream& os, vector<T> c) {\n\treturn dump_range(os, c.cbegin(), c.cend());\n}\n\ntemplate<class Iterator>\nostream& dump_range(ostream& os, Iterator first, const Iterator& last) {\n\tos << '[';\n\tfor(int i = 0; first != last; ++i, ++first) {\n\t\tif(i) os << \", \";\n\t\tos << *first;\n\t}\n\treturn os << ']';\n}\n\nconst int MAX_RCS = 20;\n\nint calc_indent(const string& s) {\n\tfor(int i = 0; i < static_cast<int>(s.size()); ++i) {\n\t\tif(s[i] != '.') return i;\n\t}\n\n\treturn s.size();\n}\n\nvoid calc_nest(int& nest_r, int& nest_c, int& nest_s, const string& line) {\n\tfor(int i = 0; i < static_cast<int>(line.size()); ++i) {\n\t\tswitch(line[i]) {\n\t\tcase '(': ++nest_r; break;\n\t\tcase ')': --nest_r; break;\n\t\tcase '{': ++nest_c; break;\n\t\tcase '}': --nest_c; break;\n\t\tcase '[': ++nest_s; break;\n\t\tcase ']': --nest_s; break;\n\t\t}\n\t}\n}\n\nbool ok(int r, int c, int s, const map<tuple<int, int, int>, int>& conditions) {\n\tfor(const pair<tuple<int, int, int>, int>&e : conditions) {\n\t\tconst tuple<int, int, int>& nest = e.first;\n\t\tconst int indent = r * get<0>(nest) + c * get<1>(nest) + s * get<2>(nest);\n\t\tif(indent != e.second) return false;\n\t}\n\n\treturn true;\n}\n\ninline int gcd(int a, int b, int c) {\n\treturn __gcd(a, __gcd(b, c));\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tfor(int p, q; cin >> p >> q && p;) {\n\t\tmap<tuple<int, int, int>, int> conditions;\n\t\tint nest_r = 0, nest_c = 0, nest_s = 0;\n\t\tfor(int i = 0; i < p; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int g = max(1, gcd(nest_r, nest_c, nest_s));\n\t\t\tconditions.emplace(make_tuple(nest_r / g, nest_c / g, nest_s / g), calc_indent(line) / g);\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tunordered_set<int> R, C, S;\n\t\tfor(int r = 1; r <= MAX_RCS; ++r) {\n\t\t\tfor(int c = 1; c <= MAX_RCS; ++c) {\n\t\t\t\tfor(int s = 1; s <= MAX_RCS; ++s) {\n\t\t\t\t\tif(ok(r, c, s, conditions)) {\n\t\t\t\t\t\tR.emplace(r);\n\t\t\t\t\t\tC.emplace(c);\n\t\t\t\t\t\tS.emplace(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnest_r = 0, nest_c = 0, nest_s = 0;\n\t\tvector<int> ans(q, -1);\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tstring line;\n\t\t\tcin >> line;\n\t\t\tconst int indent = calc_indent(line);\n\t\t\tconst tuple<int, int, int> t(nest_r, nest_c, nest_s);\n\n\t\t\tif(conditions.count(make_tuple(nest_r, nest_c, nest_s))) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(nest_r, nest_c, nest_s)] - indent);\n\t\t\t}\n\t\t\telse if(conditions.count(make_tuple(nest_r, nest_c, 0)) && S.size() == 1) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(nest_r, nest_c, 0)] + (*S.begin()));\n\t\t\t}\n\t\t\telse if(conditions.count(make_tuple(nest_r, 0, nest_s)) && C.size() == 1) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(nest_r, 0, nest_s)] + (*C.begin()));\n\t\t\t}\n\t\t\telse if(conditions.count(make_tuple(0, nest_c, nest_s)) && R.size() == 1) {\n\t\t\t\tans[i] = abs(conditions[make_tuple(0, nest_c, nest_s)] + (*R.begin()));\n\t\t\t}\n\t\t\telse if((nest_r && R.size() != 1) ||\n\t\t\t   (nest_c && C.size() != 1) ||\n\t\t\t   (nest_s && S.size() != 1)) {\n\t\t\t\tans[i] = -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans[i] = abs(nest_r * (*R.begin()) + nest_c * (*C.begin()) + nest_s * (*S.begin()) - indent);\n\t\t\t}\n\t\t\tcalc_nest(nest_r, nest_c, nest_s, line);\n\t\t}\n\n\t\tfor(int i = 0; i < q; ++i) {\n\t\t\tcout << ans[i] << (i == q - 1 ? \"\\n\" : \" \");\n\t\t}\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void){\n    int p, q;\n    while (cin>>p>>q && p) {\n        vector<vector<int> > c(4, vector<int>(p, 0));\n        for (int i = 0; i < p; i++) {\n            string t;\n            cin >> t;\n            bool f = true;\n            int cnt = 0;\n            for (int j = 0; j < t.size(); j++) {\n                if (f && t[j] == '.') cnt++;\n                else f = false;\n                if (t[j] == '(') c[0][i]++;\n                if (t[j] == ')') c[0][i]--;\n                if (t[j] == '{') c[1][i]++;\n                if (t[j] == '}') c[1][i]--;\n                if (t[j] == '[') c[2][i]++;\n                if (t[j] == ']') c[2][i]--;\n            }\n            if (i) c[3][i-1] = cnt;\n        }\n        \n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p-1; j++) {\n                c[i][j+1] += c[i][j];\n            }\n        }\n        \n        \n        vector<bool> rcs(3, false);\n        int rcs_cnt = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) rcs[i] = true;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) {\n                    rcs_cnt++;\n                    break;\n                }\n            }\n        }\n        \n        vector<int> R,C,S;\n        for (int i = 1; i < 21; i++) {\n            if (rcs[0] == false) continue;\n            for (int j = 1; j < 21; j++) {\n                if (rcs[1] == false) continue;\n                for (int k = 1; k < 21; k++) {\n                    if (rcs[2] == false) continue;\n                    bool f = true;\n                    for (int a = 0; a < c[0].size(); a++) {\n                        if (i*c[0][a] + j*c[1][a] + k*c[2][a] != c[3][a]) {\n                            f = false;\n                            break;\n                        }\n                    }\n                    if (f) R.push_back(i), C.push_back(j), S.push_back(k);\n                }\n            }\n        }\n        for (int i = 0; i < p-1; i++) {\n            if (c[0][i] && !c[1][i] && !c[2][i]) R.push_back(c[3][i]/c[0][i]);\n            if (!c[0][i] && c[1][i] && !c[2][i]) C.push_back(c[3][i]/c[1][i]);\n            if (!c[0][i] && !c[1][i] && c[2][i]) S.push_back(c[3][i]/c[2][i]);\n        }\n        R.erase(unique(R.begin(), R.end()), R.end());\n        C.erase(unique(C.begin(), C.end()), C.end());\n        S.erase(unique(S.begin(), S.end()), S.end());\n        \n        vector<vector<int> > a(3, vector<int>(q, 0));\n        for (int i = 0; i < q; i++) {\n            string t;\n            cin >> t;\n            \n            for (int j = 0; j < t.size(); j++) {\n                if (t[j] == '(') a[0][i]++;\n                if (t[j] == ')') a[0][i]--;\n                if (t[j] == '{') a[1][i]++;\n                if (t[j] == '}') a[1][i]--;\n                if (t[j] == '[') a[2][i]++;\n                if (t[j] == ']') a[2][i]--;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < q-1; j++) {\n                a[i][j+1] += a[i][j];\n            }\n        }\n        \n        vector<int> ans;\n        ans.push_back(0);\n        \n        if (rcs_cnt >= 2 && R.size() == 1 && C.size() == 1 && S.size() == 1) {\n            for (int i = 0; i < q-1; i++) ans.push_back(R[0]*a[0][i] + C[0]*a[1][i] + S[0]*a[2][i]);\n        }\n        else {\n            for (int i = 0; i < q-1; i++) {\n                bool f = false;\n                if (!a[0][i] && !a[1][i] && !a[2][i]) {\n                    ans.push_back(0);\n                    continue;\n                }\n                else if (a[0][i] && R.size()==1 && !a[1][i] && !a[2][i]) {\n                    ans.push_back(R[0]*a[0][i]);\n                    continue;\n                }\n                else if (a[1][i] && C.size()==1 && !a[0][i] && !a[2][i]) {\n                    ans.push_back(C[0]*a[1][i]);\n                    continue;\n                }\n                else if (a[2][i] && S.size()==1 && !a[0][i] && !a[1][i]) {\n                    ans.push_back(R[2]*a[2][i]);\n                    continue;\n                }\n                for (int j = 0; j < p-1; j++) {\n                    if (!c[0][j] && !c[1][j] && !c[2][j]) continue;\n                    if ((!a[0][i] && c[0][j]) || (a[0][i] && !c[0][j])) continue;\n                    if ((!a[1][i] && c[1][j]) || (a[1][i] && !c[1][j])) continue;\n                    if ((!a[2][i] && c[2][j]) || (a[2][i] && !c[2][j])) continue;\n                    double u = -1;\n                    if (a[0][i] && c[0][j]) u = a[0][i] / c[0][j];\n                    if (a[1][i] && c[1][j]) {\n                        if (u == -1) u = a[1][i] / c[1][j];\n                        else if (u != a[1][i] / c[1][j]) break;\n                    }\n                    if (a[2][i] && c[2][j]) {\n                        if (u == -1) u = a[2][i] / c[2][j];\n                        else if (u != a[2][i] / c[2][j]) break;\n                    }\n                    f = true;\n                    c[3][1] *= (int)u;\n                    ans.push_back(c[3][j]);\n                    break;\n                }\n                if (!f) ans.push_back(-1);\n            }\n        }\n        for (int i = 0; i < ans.size(); i++) cout << ans[i] << (i==ans.size()-1? \"\\n\" : \" \");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  int p,q;\n  while(cin>>p>>q,p||q){\n    string b;\n    int i,j,k;\n    int r[20]={},c[20]={},s[20]={},n[20]={};\n    int v[100][100][100]={{{}}};\n    int br=-1,bc=-1,bs=-1;\n    for(i=0;i<p;i++){\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      cin >> b;\n      j=0;\n      while(b[j]=='.') j++;\n      n[i]=j;\n      v[r[i]][c[i]][s[i]]=n[i];\n      if(r[i]+c[i]+s[i]==n[i]){\n\tif(r[i]!=0) br=1;\n\tif(c[i]!=0) bc=1;\n\tif(s[i]!=0) bs=1;\n      }\n      if(r[i]*20+c[i]*20+s[i]*20==n[i]){\n\tif(r[i]!=0) br=20;\n\tif(c[i]!=0) bc=20;\n\tif(s[i]!=0) bs=20;\n      }\n\n      if(r[i]==0&&c[i]==0){\n\tif(s[i]!=0) bs=n[i]/s[i];\n      }\n      if(r[i]==0&&s[i]==0){\n\tif(c[i]!=0) bc=n[i]/c[i];\n      }\n      if(c[i]==0&&s[i]==0){\n\tif(r[i]!=0) br=n[i]/r[i];\n      }\n      \n      if(s[i]==0){\n\tif(br!=-1&&bc==-1&&r[i]!=0&&c[i]!=0){\n\t  bc=(n[i]-r[i]*br)/c[i];\n\t}\n\tif(bc!=-1&&br==-1&&r[i]!=0&&c[i]!=0){\n\t  br=(n[i]-c[i]*bc)/r[i];\n\t}\n      }\n      \n      if(c[i]==0){\n\tif(br!=-1&&bs==-1&&r[i]!=0&&s[i]!=0){\n\t  bs=(n[i]-r[i]*br)/s[i];\n\t}\n\tif(bs!=-1&&br==-1&&r[i]!=0&&s[i]!=0){\n\t  br=(n[i]-s[i]*bs)/r[i];\n\t}\n      }\n      \n      if(r[i]==0){\n\tif(bc!=-1&&bs==-1&&c[i]!=0&&s[i]!=0){\n\t  bs=(n[i]-c[i]*bc)/s[i];\n\t}\n\tif(bs!=-1&&bc==-1&&s[i]!=0&&c[i]!=0){\n\t  bc=(n[i]-s[i]*bs)/c[i];\n\t}\n      }\n      if(r[i]*c[i]*s[i]!=0){\n\tif(br==-1&&bc!=-1&&bs!=-1){\n\t  br=(n[i]-c[i]*bc-s[i]*bs)/r[i];\n\t}\n\tif(br!=-1&&bc==-1&&bs!=-1){\n\t  bc=(n[i]-r[i]*br-s[i]*bs)/c[i];\n\t}\n\tif(br!=-1&&bc!=-1&&bs==-1){\n\t  bs=(n[i]-c[i]*bc-r[i]*br)/s[i];\n\t}\n      }\n     \n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\tif(b[j]=='{') c[i+1]++;\n\tif(b[j]=='}') c[i+1]--;\n\tif(b[j]=='[') s[i+1]++;\n\tif(b[j]==']') s[i+1]--;\n      }\n      \n      //cout << n[i] << \":\" << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      //cout << br << \":\" << bc << \":\" << bs << endl; \n    }\n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    //cout << br << bc << bs << endl;\n    \n    r[0]=0;c[0]=0;s[0]=0;\n    for(i=0;i<q;i++){\n      cin >> b;\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\t  if(b[j]=='{') c[i+1]++;\n\t  if(b[j]=='}') c[i+1]--;\n\t  if(b[j]=='[') s[i+1]++;\n\t  if(b[j]==']') s[i+1]--;\n      }\n      if(i==0) cout << 0;\n      else {\n\tcout << \" \";\n\tif(r[i]==0&&c[i]==0&&s[i]==0) \n\t  cout << 0;\n\telse if(v[r[i]][c[i]][s[i]]!=0) \n\t  cout << v[r[i]][c[i]][s[i]];\n\telse if((r[i]!=0&&br==-1)||(c[i]!=0&&bc==-1)||(s[i]!=0&&bs==-1))\n\t  cout << -1;\n\telse \n\t  cout << r[i]*br+c[i]*bc+s[i]*bs ;\n\t\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <tuple>\n#include <string>\nusing namespace std;\nint main(void)\n{\n  for(;;){\n    int p,q;\n    cin >> p >> q;\n    if(p == 0 && q == 0){ return 0; }\n    string p1[p];\n    string p2[q];\n    for(int i = 0 ; i < p ; i++){\n      cin >> p1[i];\n    }\n    for(int i = 0 ; i < q ; i++){\n      cin >> p2[i];\n    }\n    tuple<int,int,int,int> a[p];\n    int paren = 0; int brace = 0; int sqbra = 0;\n    for(int i = 0 ; i < p ; i++){\n      int indent = 0;\n      while(p1[i][indent]=='.'){ indent++; }\n      a[i] = make_tuple(paren, brace, sqbra, indent);\n      for(int j = 0 ; j < p1[i].length() ; j++){\n\tswitch (p1[i][j]){\n\tcase '(':\n\t  paren++;\n\t  break;\n\tcase '{':\n\t  brace++;\n\t  break;\n\tcase '[':\n\t  sqbra++;\n\t  break;\n\tcase ')':\n\t  paren--;\n\t  break;\n\tcase '}':\n\t  brace--;\n\t  break;\n\tcase ']':\n\t  sqbra--;\n\t  break;\n\t} \n      }\n    }\n    tuple<int,int,int,int> b[q];\n    for(int i = 0 ; i < q ; i++){\n      int indent = 0;\n      int ptr=0;\n      while(p2[i][ptr]=='.'){ indent++;ptr++; }\n      b[i] = make_tuple(paren, brace, sqbra, indent);\n      for(int j = 0 ; j < p2[i].length() ; j++){\n\tswitch (p2[i][j]){\n\tcase '(':\n\t  paren++;\n\t  break;\n\tcase '{':\n\t  brace++;\n\t  break;\n\tcase '[':\n\t  sqbra++;\n\t  break;\n\tcase ')':\n\t  paren--;\n\t  break;\n\tcase '}':\n\t  brace--;\n\t  break;\n\tcase ']':\n\t  sqbra--;\n\t  break;\n\t} \n      }\n    }\n    bool ok[21][21][21];\n    for(int R = 1 ; R <= 20 ; R++){\n      for(int C = 1 ; C <= 20 ; C++){\n\tfor(int S = 1 ; S <= 20 ; S++){\n\t  ok[R][C][S] = true;\n\t  for(int i = 0 ; i < p ; i++){\n\t    if(R * get<0>(a[i]) + C * get<1>(a[i]) + S * get<2>(a[i]) != get<3>(a[i])){\n\t      ok[R][C][S] = false;\n\t    }\n\t  }\n\t}\n      }\n    }\n    int ans[q];\n    for(int i = 0 ; i < q ; i++){ans[i] = -1;}\n    int ansnum[q];\n    for(int i = 0 ; i < q ; i++){ansnum[i] = 0;}\n    for(int R = 1 ; R <= 20 ; R++){\n      for(int C = 1 ; C <= 20 ; C++){\n\tfor(int S = 1 ; S <= 20 ; S++){\n\t  if(ok[R][C][S] == true){\n\t    for(int i = 0 ; i < q ; i++){\n\t      int temp = ans[i];\n\t      ans[i] = R * get<0>(b[i]) + C * get<1>(b[i]) + S * get<2>(b[i]);\n\t      if(temp != ans[i]){ansnum[i]++;}\n\t    }\n\t  }\n\t}\n      }\n    }\n    for(int i = 0 ; i < q ; i++){\n      cout << ((ansnum[i]==1)?(ans[i]):(-1));\n      if(i != q-1){cout << \" \";}else{cout << endl;};\n    }\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<set>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nint main(){\n\tfor(int m,n;scanf(\"%d%d \",&m,&n),m;){\n\t\tchar s[10][128];\n\t\trep(i,m){\n\t\t\tfgets(s[i],128,stdin);\n\t\t\tint l=strlen(s[i]);\n\t\t\tif(s[i][l-1]=='\\n') s[i][--l]='\\0';\n\t\t}\n\n\t\tint indent[10];\n\t\trep(i,m){\n\t\t\tint j;\n\t\t\tfor(j=0;s[i][j]=='.';j++);\n\t\t\tindent[i]=j;\n\t\t}\n\n\t\tvector<int> c1_ans,c2_ans,c3_ans;\n\t\tfor(int c1=1;c1<=20;c1++) for(int c2=1;c2<=20;c2++) for(int c3=1;c3<=20;c3++) {\n\t\t\tbool ok=true;\n\t\t\tint a1=0,a2=0,a3=0; // (, {, [ の個数\n\t\t\trep(i,m){\n\t\t\t\tif(c1*a1+c2*a2+c3*a3!=indent[i]){ ok=false; break; }\n\t\t\t\tfor(int j=0;s[i][j];j++){\n\t\t\t\t\tif(s[i][j]=='(') a1++;\n\t\t\t\t\tif(s[i][j]=='{') a2++;\n\t\t\t\t\tif(s[i][j]=='[') a3++;\n\t\t\t\t\tif(s[i][j]==')') a1--;\n\t\t\t\t\tif(s[i][j]=='}') a2--;\n\t\t\t\t\tif(s[i][j]==']') a3--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ok){\n\t\t\t\tc1_ans.push_back(c1);\n\t\t\t\tc2_ans.push_back(c2);\n\t\t\t\tc3_ans.push_back(c3);\n\t\t\t}\n\t\t}\n\n\t\tint a1=0,a2=0,a3=0;\n\t\trep(i,n){\n\t\t\tchar t[128];\n\t\t\tfgets(t,128,stdin);\n\t\t\tint l=strlen(t);\n\t\t\tif(t[l-1]=='\\n') t[--l]='\\0';\n\n\t\t\tset<int> S;\n\t\t\trep(j,c1_ans.size()) S.insert(c1_ans[j]*a1+c2_ans[j]*a2+c3_ans[j]*a3);\n\t\t\tprintf(\"%d%c\",S.size()==1?*S.begin():-1,i+1<n?' ':'\\n');\n\n\t\t\tfor(int j=0;t[j];j++){\n\t\t\t\tif(t[j]=='(') a1++;\n\t\t\t\tif(t[j]=='{') a2++;\n\t\t\t\tif(t[j]=='[') a3++;\n\t\t\t\tif(t[j]==')') a1--;\n\t\t\t\tif(t[j]=='}') a2--;\n\t\t\t\tif(t[j]==']') a3--;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int P, Q;\n  int r[23], c[23], s[23], indent[23];\n  int ans[23];\n  \n  while(cin >> P >> Q, P) {\n    for(int i = 0; i < P + Q; i++) {\n      string S;\n      cin >> S;\n      r[i] = count(S.begin(), S.end(), '(') - count(S.begin(), S.end(), ')');\n      c[i] = count(S.begin(), S.end(), '{') - count(S.begin(), S.end(), '}');\n      s[i] = count(S.begin(), S.end(), '[') - count(S.begin(), S.end(), ']');\n      if(i != 0) r[i] += r[i - 1], c[i] += c[i - 1], s[i] += s[i - 1];\n      for(indent[i] = 0; S[indent[i]] == '.'; ++indent[i]);\n    }\n    fill_n(ans, Q, -810);\n    ans[0] = 0;\n    for(int i = 1; i <= 20; i++) {\n      for(int j = 1; j <= 20; j++) {\n        for(int k = 1; k <= 20; k++) {\n          bool flag = true;\n          for(int l = 0; l < P - 1; l++) {\n            flag &= i * r[l] + j * c[l] + k * s[l] == indent[l + 1];\n          }\n          if(!flag) continue;\n          for(int l = P; l < P + Q - 1; l++) {\n            if(ans[l - P + 1] == -810) ans[l - P + 1] = i * r[l] + j * c[l] + k * s[l];\n            else if(ans[l - P + 1] != i * r[l] + j * c[l] + l * s[l]) ans[l - P + 1] = -1;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < Q; i++) {\n      cout << ans[i] << (i + 1 == Q ? \"\\n\" : \" \");\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void){\n    int p, q;\n    while (cin>>p>>q && p) {\n        vector<vector<int> > c(4, vector<int>(p, 0));\n        for (int i = 0; i < p; i++) {\n            string t;\n            cin >> t;\n            bool f = true;\n            int cnt = 0;\n            for (int j = 0; j < t.size(); j++) {\n                if (f && t[j] == '.') cnt++;\n                else f = false;\n                if (t[j] == '(') c[0][i]++;\n                if (t[j] == ')') c[0][i]--;\n                if (t[j] == '{') c[1][i]++;\n                if (t[j] == '}') c[1][i]--;\n                if (t[j] == '[') c[2][i]++;\n                if (t[j] == ']') c[2][i]--;\n            }\n            c[3][i] = cnt;\n        }\n        \n        \n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p-1; j++) {\n                c[i][j+1] += c[i][j];\n            }\n        }\n        \n        vector<bool> rcs(3, false);\n        int rcs_cnt = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) rcs[i] = true;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) {\n                    rcs_cnt++;\n                    break;\n                }\n            }\n        }\n        \n        vector<int> R,C,S;\n        for (int i = 1; i < 21; i++) {\n            if (rcs[0] == false && i > 0) continue;\n            for (int j = 1; j < 21; j++) {\n                if (rcs[1] == false && j > 0) continue;\n                for (int k = 1; k < 21; k++) {\n                    if (rcs[2] == false && k > 0) continue;\n                    bool f = true;\n                    for (int a = 0; a < p-1; a++) {\n                        if (i*c[0][a] + j*c[1][a] + k*c[2][a] != c[3][a+1]) f = false;\n                    }\n                    if (f) R.push_back(i), C.push_back(j), S.push_back(k);\n                }\n            }\n        }\n        vector<vector<int> > a(3, vector<int>(q, 0));\n        for (int i = 0; i < q; i++) {\n            string t;\n            cin >> t;\n            \n            for (int j = 0; j < t.size(); j++) {\n                if (t[j] == '(') a[0][i]++;\n                if (t[j] == ')') a[0][i]--;\n                if (t[j] == '{') a[1][i]++;\n                if (t[j] == '}') a[1][i]--;\n                if (t[j] == '[') a[2][i]++;\n                if (t[j] == ']') a[2][i]--;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < q-1; j++) {\n                a[i][j+1] += a[i][j];\n            }\n        }\n        \n        vector<int> ans;\n        ans.push_back(0);\n        \n        if (rcs_cnt >= 2 && R.size() == 1 && C.size() == 1 && S.size() == 1) {\n            for (int i = 0; i < q-1; i++) ans.push_back(R[0]*a[0][i] + C[0]*a[1][i] + S[0]*a[2][i]);\n        }\n        else {\n            for (int i = 0; i < q-1; i++) {\n                bool f = false;\n                if (!a[0][i] && !a[1][i] && !a[2][i]) {\n                    ans.push_back(0);\n                    continue;\n                }\n                for (int j = 0; j < p-1; j++) {\n                    if (!c[0][j] && !c[1][j] && !c[2][j]) continue;\n                    if ((!a[0][i] && c[0][j]) || (a[0][i] && !c[0][j])) continue;\n                    if ((!a[1][i] && c[1][j]) || (a[1][i] && !c[1][j])) continue;\n                    if ((!a[2][i] && c[2][j]) || (a[2][i] && !c[2][j])) continue;\n                    double u = -1;\n                    if (a[0][i] && c[0][j]) u = a[0][i] / c[0][j];\n                    if (a[1][i] && c[1][j]) {\n                        if (u == -1) u = a[1][i] / c[1][j];\n                        else if (u != a[1][i] / c[1][j]) break;\n                    }\n                    if (a[2][i] && c[2][j]) {\n                        if (u == -1) u = a[2][i] / c[2][j];\n                        else if (u != a[2][i] / c[2][j]) break;\n                    }\n                    f = true;\n                    ans.push_back((int)(c[3][j+1]*u));\n                    break;\n                }\n                if (!f) ans.push_back(-1);\n            }\n        }\n        for (int i = 0; i < ans.size(); i++) cout << ans[i] << (i==ans.size()-1? \"\\n\" : \" \");\n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define SZ(x) (int)(x.size())\n#define REP(i, n) for(int i=0;i<(n);++i)\n#define FOR(i, a, b) for(int i=(a);i<(b);++i)\n#define RREP(i, n) for(int i=(int)(n)-1;i>=0;--i)\n#define RFOR(i, a, b) for(int i=(int)(b)-1;i>=(a);--i)\n#define ALL(a) a.begin(),a.end()\n#define DUMP(x) cerr<<#x<<\" = \"<<(x)<<endl\n#define DEBUG(x) cerr<<#x<<\" = \"<<(x)<<\" (L\"<<__LINE__<<\")\"<< endl;\nusing ll = long long;\nusing vi = vector<int>;\nusing vvi = vector<vi>;\nusing vll = vector<ll>;\nusing vvll = vector<vll>;\nusing P = pair<int, int>;\nconst double eps = 1e-8;\nconst ll MOD = 1000000007;\nconst int INF = INT_MAX / 2;\nconst ll LINF = LLONG_MAX / 2;\ntemplate <typename T1, typename T2>\nbool chmax(T1 &a, const T2 &b) {\n    if (a < b) { a = b; return true; }\n    return false;\n}\ntemplate <typename T1, typename T2>\nbool chmin(T1 &a, const T2 &b) {\n    if (a > b) { a = b; return true; }\n    return false;\n}\ntemplate<typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n    os << p.first << \":\" << p.second;\n    return os;\n}\ntemplate<typename T1, typename T2>\nostream &operator<<(ostream &os, const map<T1, T2> &mp) {\n    os << \"{\";\n    int a = 0;\n    for (auto &tp : mp) {\n        if (a) os << \", \"; a = 1;\n        os << tp;\n    }\n    return os << \"}\";\n}\ntemplate<typename T>\nostream &operator<<(ostream &os, const vector<T> &v) {\n    os << \"[\";\n    REP(i, SZ(v)) {\n        if (i) os << \", \";\n        os << v[i];\n    }\n    return os << \"]\";\n}\n\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    cout << fixed << setprecision(10);\n\n    for (;;) {\n        int p, q; cin >> p >> q;\n        if (p == 0) break;\n        vector<map<char,int>> cnt(p);\n        vector<int> indent(p);\n        map<char,int> count;\n        REP(i, p) {\n            string s; cin >> s;\n            int j = 0;\n            while (j < SZ(s) and s[j] == '.') ++j;\n            indent[i] = j;\n            for (; j < SZ(s); ++j) {\n                if (s[j] == '(') ++count['('];\n                if (s[j] == ')') --count['('];\n                if (s[j] == '{') ++count['{'];\n                if (s[j] == '}') --count['{'];\n                if (s[j] == '[') ++count['['];\n                if (s[j] == ']') --count['['];\n            }\n            cnt[i] = count;\n        }\n\n        vector<tuple<int,int,int>> cands;\n        FOR(r, 1, 21) {\n            FOR(c, 1, 21) {\n                FOR(s, 1, 21) {\n                    int valid = 1;\n                    REP(i, p-1) {\n                        if (r * cnt[i]['('] + c * cnt[i]['{'] + s * cnt[i]['['] != indent[i+1]) valid = 0;\n                    }\n                    if (valid) {\n                        cands.emplace_back(r, c, s);\n                    }\n                }\n            }\n        }\n\n        count.clear();\n        vi ans(q);\n        REP(i, q) {\n            string s; cin >> s;\n            if (i == q-1) continue;\n            for (char c : s) {\n                if (c == '(') ++count['('];\n                if (c == ')') --count['('];\n                if (c == '{') ++count['{'];\n                if (c == '}') --count['{'];\n                if (c == '[') ++count['['];\n                if (c == ']') --count['['];\n            }\n\n            map<int,int> value;\n            for (auto &tp : cands) {\n                int r, c, s; tie(r, c, s) = tp;\n                value[r * count['('] + c * count['{'] + s * count['[']] = 1;\n            }\n            if (value.size() > 1) ans[i+1] = -1;\n            else ans[i+1] = value.begin()->first;\n        }\n\n        REP(i, q) {\n            if (i) cout << \" \";\n            cout << ans[i];\n        }\n        cout << endl;\n\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n  int p,q;\n  while(cin>>p>>q,p||q){\n    string b;\n    int i,j,k;\n    int r[20]={},c[20]={},s[20]={},n[20]={};\n    int v[100][100][100]={{{}}};\n    int br=-1,bc=-1,bs=-1;\n    for(i=0;i<p;i++){\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      cin >> b;\n      j=0;\n      while(b[j]=='.') j++;\n      n[i]=j;\n     \n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\tif(b[j]=='{') c[i+1]++;\n\tif(b[j]=='}') c[i+1]--;\n\tif(b[j]=='[') s[i+1]++;\n\tif(b[j]==']') s[i+1]--;\n      }\n      \n      //cout << n[i] << \":\" << r[i] << \":\" << c[i] << \":\" << s[i] << endl;\n      //cout << br << \":\" << bc << \":\" << bs << endl; \n    }\n    for(i=0;i<p;i++){\n      for(j=i+1;j<p;j++){\n\tfor(k=j+1;k<p;k++){\n\t  if(r[i]*c[j]*s[k]+r[k]*c[i]*s[j]+r[j]*c[k]*s[i]\n\t     -r[k]*c[j]*s[i]-r[j]*c[i]*s[k]-r[i]*c[k]*s[j]==0) continue;\n\t  else{\n\t    int d=r[i]*c[j]*s[k]+r[k]*c[i]*s[j]+r[j]*c[k]*s[i]\n\t      -r[k]*c[j]*s[i]-r[j]*c[i]*s[k]-r[i]*c[k]*s[j];\n\n\t    br=n[i]*c[j]*s[k]+n[k]*c[i]*s[j]+n[j]*c[k]*s[i]\n\t      -n[k]*c[j]*s[i]-n[j]*c[i]*s[k]-n[i]*c[k]*s[j];\n\t    br/=d;\n\t    bc=r[i]*n[j]*s[k]+r[k]*n[i]*s[j]+r[j]*n[k]*s[i]\n\t      -r[k]*n[j]*s[i]-r[j]*n[i]*s[k]-r[i]*n[k]*s[j];\n\t    bc/=d;\n\t    bs=r[i]*c[j]*n[k]+r[k]*c[i]*s[j]+r[j]*c[k]*n[i]\n\t      -r[k]*c[j]*n[i]-r[j]*c[i]*s[k]-r[i]*c[k]*n[j];\n\t    bs/=d;\n\t  }\n\t}\n      }\n    }\n    \n    if(br==-1){\n      bool f=true;\n      while(f){\n\tf=false;\n\tfor(i=0;i<p;i++){\n\t  if(r[i]<100&&c[i]<100&&s[i]<100)\n\t    v[r[i]][c[i]][s[i]]=n[i];\n\t  if(r[i]+c[i]+s[i]==n[i]){\n\t    if(r[i]!=0&&br==-1) {\n\t      br=1;\n\t      f=true;\n\t    }\n\t    if(c[i]!=0&&bc==-1){\n\t      bc=1;\n\t      f=true;\n\t    }\n\t    if(s[i]!=0&&bs==-1){\n\t      bs=1;\n\t      f=true;\n\t    }\n\t  }\n\t  if(r[i]*20+c[i]*20+s[i]*20==n[i]){\n\t    if(r[i]!=0&&br==-1) {\n\t      br=20;\n\t      f=true;\n\t    }\n\t    if(c[i]!=0&&bc==-1){\n\t      bc=20;\n\t      f=true;\n\t    }\n\t    if(s[i]!=0&&bs==-1){\n\t      bs=20;\n\t      f=true;\n\t    }\n\t  }\n\t  \n\t  if(r[i]==0&&c[i]==0){\n\t    if(s[i]!=0&&bs==-1) {\n\t      bs=n[i]/s[i];\n\t      f=true;\n\t    }\n\t  }\n\t  if(r[i]==0&&s[i]==0){\n\t    if(c[i]!=0&&bc==-1){ \n\t      bc=n[i]/c[i];\n\t      f=true;\n\t    }\n\t  }\n\t  if(c[i]==0&&s[i]==0){\n\t    if(r[i]!=0&&br==-1){\n\t      br=n[i]/r[i];\n\t      f=true;\n\t    }\n\t  }\n\t  if(s[i]==0){\n\t    if(br!=-1&&bc==-1&&r[i]!=0&&c[i]!=0){\n\t      bc=(n[i]-r[i]*br)/c[i];\n\t      f=true;\n\t    }\n\t    if(bc!=-1&&br==-1&&r[i]!=0&&c[i]!=0){\n\t      br=(n[i]-c[i]*bc)/r[i];\n\t      f=true;\n\t    }\n\t  }\n      \n\t  if(c[i]==0){\n\t    if(br!=-1&&bs==-1&&r[i]!=0&&s[i]!=0){\n\t      bs=(n[i]-r[i]*br)/s[i];\n\t      f=true;\n\t    }\n\t    if(bs!=-1&&br==-1&&r[i]!=0&&s[i]!=0){\n\t      br=(n[i]-s[i]*bs)/r[i];\n\t      f=true;\n\t    }\n\t  }\n\t  \n\t  if(r[i]==0){\n\t    if(bc!=-1&&bs==-1&&c[i]!=0&&s[i]!=0){\n\t      bs=(n[i]-c[i]*bc)/s[i];\n\t      f=true;\n\t    }\n\t    if(bs!=-1&&bc==-1&&s[i]!=0&&c[i]!=0){\n\t      bc=(n[i]-s[i]*bs)/c[i];\n\t      f=true;\n\t    }\n\t  }\n\t  if(r[i]*c[i]*s[i]!=0){\n\t    if(br==-1&&bc!=-1&&bs!=-1){\n\t      br=(n[i]-c[i]*bc-s[i]*bs)/r[i];\n\t      f=true;\n\t    }\n\t    if(br!=-1&&bc==-1&&bs!=-1){\n\t      bc=(n[i]-r[i]*br-s[i]*bs)/c[i];\n\t      f=true;\n\t    }\n\t    if(br!=-1&&bc!=-1&&bs==-1){\n\t      bs=(n[i]-c[i]*bc-r[i]*br)/s[i];\n\t      f=true;\n\t    }\n\t  }\n\t}\n      }\n    }\n    //cout << br << \":\" << bc << \":\" << bs << endl; \n    //cout << br << bc << bs << endl;\n    \n    r[0]=0;c[0]=0;s[0]=0;\n    for(i=0;i<q;i++){\n      cin >> b;\n      r[i+1]=r[i];\n      c[i+1]=c[i];\n      s[i+1]=s[i];\n      for(j=0;j<b.size();j++){\n\tif(b[j]=='(') r[i+1]++;\n\tif(b[j]==')') r[i+1]--;\n\t  if(b[j]=='{') c[i+1]++;\n\t  if(b[j]=='}') c[i+1]--;\n\t  if(b[j]=='[') s[i+1]++;\n\t  if(b[j]==']') s[i+1]--;\n      }\n      if(i==0) cout << 0;\n      else {\n\tcout << \" \";\n\tif(r[i]==0&&c[i]==0&&s[i]==0) \n\t  cout << 0;\n\telse if(r[i]<100&&c[i]<100&&s[i]<100&&v[r[i]][c[i]][s[i]]!=0) \n\t  cout << v[r[i]][c[i]][s[i]];\n\telse if((r[i]!=0&&br==-1)||(c[i]!=0&&bc==-1)||(s[i]!=0&&bs==-1))\n\t  cout << -1;\n\telse \n\t  cout << r[i]*br+c[i]*bc+s[i]*bs ;\n\t\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <numeric>\n#include <cctype>\n#include <cassert>\n\n// BEGIN CUT HERE\n#ifdef _MSC_VER\n#include <agents.h>\n#endif\n// END CUT HERE \n\n#define FOR(i, a, b) for(int i = (a); i < (int)(b); ++i)\n#define rep(i, n) FOR(i, 0, n)\n#define ALL(v) v.begin(), v.end()\n#define REV(v) v.rbegin(), v.rend()\n#define MEMSET(v, s) memset(v, s, sizeof(v))\n#define MP make_pair\n#define MT make_tuple\n#define X first\n#define Y second\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef pair<int, int> P;\n\nint main(){\n\tios::sync_with_stdio(false);\n\n\tint p, q;\n\twhile (cin >> p >> q, p){\n\t\tmap<vector<int>, int> m;\n\t\tvector<int> cnt(3);\n\t\twhile(p--){\n\t\t\tstring s;\n\t\t\tcin >> s;\n\t\t\tint x = 0;\n\t\t\twhile (s[x] == '.') x++;\n\t\t\tm[cnt] = x;\n\t\t\trep(i, s.size()){\n\t\t\t\trep(j, 3) if (s[i] == \"({[\"[j]) ++cnt[j];\n\t\t\t\trep(j, 3) if (s[i] == \")}]\"[j]) --cnt[j];\n\t\t\t}\n\t\t}\n\n\t\tvector<vector<int>> cand;\n\t\tFOR(R, 1, 21) FOR(C, 1, 21) FOR(S, 1, 21){\n\t\t\tbool ok = true;\n\t\t\tfor (auto &v : m){\n\t\t\t\tint dot = 0;\n\t\t\t\tdot += v.first[0] * R;\n\t\t\t\tdot += v.first[1] * C;\n\t\t\t\tdot += v.first[2] * S;\n\t\t\t\tif (dot != v.second) ok = false;\n\t\t\t}\n\t\t\tif (ok) cand.push_back({ R, C, S });\n\t\t}\n\t\tcnt = vector<int>(3);\n\t\tvector<int> ans;\n\t\twhile(q--){\n\t\t\tstring s;\n\t\t\tcin >> s;\n\n\t\t\tif (m.count(cnt)){\n\t\t\t\tans.push_back(m[cnt]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset<int> icand;\n\t\t\t\tfor (auto &t : cand){\n\t\t\t\t\tint sum = 0;\n\t\t\t\t\trep(i, 3) sum += cnt[i]*t[i];\n\t\t\t\t\ticand.insert(sum);\n\t\t\t\t}\n\t\t\t\tif (icand.size() == 1){\n\t\t\t\t\tans.push_back(*icand.begin());\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans.push_back(-1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trep(i, s.size()){\n\t\t\t\trep(j, 3) if (s[i] == \"({[\"[j]) ++cnt[j];\n\t\t\t\trep(j, 3) if (s[i] == \")}]\"[j]) --cnt[j];\n\t\t\t}\n\t\t}\n\n\t\trep(i, ans.size()){\n\t\t\tcout << (i ? \" \" : \"\") << ans[i];\n\t\t}cout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cstdio>\nusing namespace std;\nint main(){\n\tint p,q;\n\tfor(;cin>>p>>q,p;){\n\t\tvector<string>P(p),Q(q);\n\t\tvector<int>indent(p),a(q,-2);\n\t\tgetline(cin,P[0]);\n\t\tfor(int i=0;i<p;i++){\n\t\t\tgetline(cin,P[i]);\n\t\t\tfor(;P[i][indent[i]]=='.';indent[i]++);\n\t\t}\n\t\tfor(int i=0;i<q;i++){\n\t\t\tgetline(cin,Q[i]);\n\t\t}\n\t\tfor(int R=1;R<21;R++)for(int C=1;C<21;C++)for(int S=1;S<21;S++){\n\t\t\tint k=0;\n\t\t\tauto f=[&](const string &s){\n\t\t\t\tfor(auto &x:s){\n\t\t\t\t\tif(x=='(')k+=R;\n\t\t\t\t\tif(x==')')k-=R;\n\t\t\t\t\tif(x=='{')k+=C;\n\t\t\t\t\tif(x=='}')k-=C;\n\t\t\t\t\tif(x=='[')k+=S;\n\t\t\t\t\tif(x==']')k-=S;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif(![&]{\n\t\t\t\tfor(int i=0;i<p;i++){\n\t\t\t\t\tif(k!=indent[i])return false;\n\t\t\t\t\tf(P[i]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}())continue;\n\t\t\tk=0;\n\t\t\tfor(int i=0;i<q;i++){\n\t\t\t\tif(a[i]==-2)a[i]=k;\n\t\t\t\tif(a[i]!=k)a[i]=-1;\n\t\t\t\tf(Q[i]);\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<a.size();i++)printf(i<a.size()-1?\"%d \":\"%d\\n\",a[i]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <sstream>\n#include <map>\n#include <set>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<30\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\n\nint main() {\n\tint n, m;\n\twhile(cin >> n >> m) {\n\t\tif(n == 0 && m == 0) break;\n\n\t\tvector<string> v(n), v2(m);\n\t\trep(i, n) cin >> v[i];\n\t\trep(i, m) cin >> v2[i];\n\n\t\tint r[105], c[105], s[105];\n\t\tmemset(r, 0, sizeof(r));\n\t\tmemset(c, 0, sizeof(c));\n\t\tmemset(s, 0, sizeof(s));\n\n\t\tREP(i, 1, n) {\n\t\t\tr[i] = r[i-1];\n\t\t\tc[i] = c[i-1];\n\t\t\ts[i] = s[i-1];\n\t\t\trep(j, v[i-1].size()) {\n\t\t\t\tchar ch = v[i-1][j];\n\t\t\t\tif(ch == '(') r[i]++;\n\t\t\t\tif(ch == ')') r[i]--;\n\t\t\t\tif(ch == '{') c[i]++;\n\t\t\t\tif(ch == '}') c[i]--;\n\t\t\t\tif(ch == '[') s[i]++;\n\t\t\t\tif(ch == ']') s[i]--;\n\t\t\t}\n\t\t}\n\n\t\tint r2[105], c2[105], s2[105];\n\t\tmemset(r2, 0, sizeof(r2));\n\t\tmemset(c2, 0, sizeof(c2));\n\t\tmemset(s2, 0, sizeof(s2));\n\n\t\tREP(i, 1, m) {\n\t\t\tr2[i] = r2[i-1];\n\t\t\tc2[i] = c2[i-1];\n\t\t\ts2[i] = s2[i-1];\n\t\t\trep(j, v2[i-1].size()) {\n\t\t\t\tchar ch = v2[i-1][j];\n\t\t\t\tif(ch == '(') r2[i]++;\n\t\t\t\tif(ch == ')') r2[i]--;\n\t\t\t\tif(ch == '{') c2[i]++;\n\t\t\t\tif(ch == '}') c2[i]--;\n\t\t\t\tif(ch == '[') s2[i]++;\n\t\t\t\tif(ch == ']') s2[i]--;\n\t\t\t}\n\t\t}\n\n\t\tint d[105];\n\t\tmemset(d, 0, sizeof(d));\n\n\t\trep(i, n) {\n\t\t\trep(j, v[i].size()) {\n\t\t\t\tif(v[i][j] != '.') {\n\t\t\t\t\td[i] = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvector<int> ans(m);\n\t\trep(i, m) ans[i] = INF;\n\n\t\tREP(i, 1, 21) {\n\t\t\tREP(j, 1, 21) {\n\t\t\t\tREP(k, 1, 21) {\n\t\t\t\t\tbool flag = true;\n\n\t\t\t\t\trep(l, n) {\n\t\t\t\t\t\tif(d[l] == i * r[l] + j * c[l] + k * s[l]) continue;\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(flag) {\n\t\t\t\t\t\trep(l, m) {\n\t\t\t\t\t\t\tint d = i * r2[l] + j * c2[l] + k * s2[l];\n\n\t\t\t\t\t\t\tif(ans[l] == INF) ans[l] = d;\n\t\t\t\t\t\t\telse if(ans[l] != d) ans[l] = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trep(i, m) {\n\t\t\tcout << ans[i];\n\t\t\tif(i == m-1) cout << endl;\n\t\t\telse cout << \" \";\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nclass analysis\n{\n\tpublic:\n\tint curly;\n\tint round;\n\tint square;\n\tint indent;\n\tanalysis()\n\t{\n\t}\n\tanalysis(int c,int r,int s,int i)\n\t{\n\t\tcurly=c;\n\t\tround=r;\n\t\tsquare=s;\n\t\tindent=i;\n\t}\n};\nbool allpattern[21][21][21]; //R,C,Sの順\nstring sample[10];\nanalysis sample_a[10];\nstring target[10];\nanalysis target_a[10];\nvector<int> v;\nint main()\n{\n\tint p,q;\n\twhile(1)\n\t{\n\t\tcin>>p>>q;\n\t\tif(p==0)\n\t\t\tbreak;\n\t\tfor(int i=0;i<p;i++)\n\t\t\tcin>>sample[i];\n\t\tsample_a[0]=analysis(0,0,0,0);\n\t\tint c,r,s,ind;\n\t\tc=0;r=0;s=0;ind=0;\n\t\t//解析する\n\t\tfor(int i=1;i<p;i++)\n\t\t{\n\t\t\tind=0;\n\t\t\twhile(sample[i][ind]=='.')\n\t\t\t\tind++;\n\t\t\tfor(int j=0;j<sample[i-1].size();j++)\n\t\t\t{\n\t\t\t\tswitch(sample[i-1][j])\n\t\t\t\t{\n\t\t\t\t\tcase '(':\n\t\t\t\t\t\tr++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ')':\n\t\t\t\t\t\tr--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tc++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tc--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\ts++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\ts--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsample_a[i]=analysis(c,r,s,ind);\n\t\t}\n\t\t//すべてのパターンについて調べる\n\t\tfill(allpattern[0][0],allpattern[21][0],false);\n\t\tfor(int i=1;i<21;i++)\n\t\t{\n\t\t\tfor(int j=1;j<21;j++)\n\t\t\t{\n\t\t\t\tfor(int k=1;k<21;k++)\n\t\t\t\t{\n\t\t\t\t\tbool f=true;\n\t\t\t\t\tfor(int l=0;l<p;l++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(sample_a[l].round*i+sample_a[l].curly*j+sample_a[l].square*k!=sample_a[l].indent)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf=false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(f)\n\t\t\t\t\t\tallpattern[i][j][k]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//入力パターン\n\t\tfor(int i=0;i<q;i++)\n\t\t\tcin>>target[i];\n\t\ttarget_a[0]=analysis(0,0,0,0);\n\t\tc=0;r=0;s=0;\n\t\tfor(int i=1;i<q;i++)\n\t\t{\n\t\t\tfor(int j=0;j<target[i-1].size();j++)\n\t\t\t{\n\t\t\t\tswitch(target[i-1][j])\n\t\t\t\t{\n\t\t\t\t\tcase '(':\n\t\t\t\t\t\tr++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ')':\n\t\t\t\t\t\tr--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tc++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tc--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\ts++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\ts--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget_a[i]=analysis(c,r,s,-1);\n\t\t}\n\t\t//2行以降すべてのパターンについて調べる、矛盾がなければOK\n\t\tfor(int i=1;i<q;i++)\n\t\t{\n\t\t\tif(target_a[i].curly==0 && target_a[i].square==0 && target_a[i].round==0)\n\t\t\t{\n\t\t\t\ttarget_a[i].indent=0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv.clear();\n\t\t\t//R,C,Sの順\n\t\t\tfor(int x=1;x<21;x++)\n\t\t\t{\n\t\t\t\tfor(int y=1;y<21;y++)\n\t\t\t\t{\n\t\t\t\t\tfor(int z=1;z<21;z++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(allpattern[x][y][z])\n\t\t\t\t\t\t\tv.push_back(x*target_a[i].round+y*target_a[i].curly+z*target_a[i].square);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(v.size()==0)\n\t\t\t{\n\t\t\t\ttarget_a[i].indent=-1;\n\t\t\t}else{\n\t\t\t\tint tmp=v[0];\n\t\t\t\tfor(int i=1;i<v.size();i++)\n\t\t\t\t{\n\t\t\t\t\tif(tmp!=v[i])\n\t\t\t\t\t\ttmp=-1;\t\n\t\t\t\t}\n\t\t\t\ttarget_a[i].indent=tmp;\n\t\t\t}\n\t\t}\n\t\t//output\n\t\tfor(int i=0;i<q;i++)\n\t\t{\n\t\t\tcout<<target_a[i].indent;\n\t\t\tif(i<q-1)\n\t\t\t\tcout<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, m; string s;\nint main() {\n\twhile (cin >> n >> m, n) {\n\t\tvector<int> a(n + m), b(n + m), c(n + m), d(n + m);\n\t\tint da = 0, db = 0, dc = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> s;\n\t\t\ta[i] = da, b[i] = db, c[i] = dc;\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] != '.') {\n\t\t\t\t\td[i] = j; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t\tvector<int> ra, rb, rc;\n\t\tfor (int i = 0; i <= 80; i++) {\n\t\t\tfor (int j = 0; j <= 80; j++) {\n\t\t\t\tfor (int k = 0; k <= 80; k++) {\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\t\tif (i * a[l] + j * b[l] + k * c[l] != d[l]) {\n\t\t\t\t\t\t\tflag = false; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (flag) {\n\t\t\t\t\t\tra.push_back(i);\n\t\t\t\t\t\trb.push_back(j);\n\t\t\t\t\t\trc.push_back(k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i) cout << ' ';\n\t\t\tcin >> s;\n\t\t\tvector<int> x;\n\t\t\tfor (int j = 0; j < ra.size(); j++) x.push_back(da * ra[j] + db * rb[j] + dc * rc[j]);\n\t\t\tsort(x.begin(), x.end());\n\t\t\tx.erase(unique(x.begin(), x.end()), x.end());\n\t\t\tif (x.size() != 1) cout << -1;\n\t\t\telse cout << x[0];\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '(') da++;\n\t\t\t\tif (s[j] == '{') db++;\n\t\t\t\tif (s[j] == '[') dc++;\n\t\t\t\tif (s[j] == ')') da--;\n\t\t\t\tif (s[j] == '}') db--;\n\t\t\t\tif (s[j] == ']') dc--;\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nvoid update(char c, int& x, int& y, int& z){\n  switch(c){\n  case '(':\n    x++;\n    break;\n  case ')':\n    x--;\n    break;\n  case '{':\n    y++;\n    break;\n  case '}':\n    y--;\n    break;\n  case '[':\n    z++;\n    break;\n  case ']':\n    z--;\n  }\n}\n\nbool collect(vector<string>& s, int p, int q, int r){\n  int isp = 0, isq = 0, isr = 0, cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    cnt = 0;\n    bool flag = true;\n    for (int j = 0; j < s[i].length(); j++) {\n      if(s[i][j] == '.' && flag){\n        cnt++;\n        continue;\n      }\n      //std::cout << cnt << std::endl;\n      if(flag && cnt != p*isp + q*isq + r*isr)return false;\n      flag = false;\n      //std::cout << s[i][j];\n      update(s[i][j], isp, isq, isr);\n    }\n    //std::cout << std::endl;\n    //std::cout << \"isp:\" << isp << \" isq:\" << isq << \" isr:\" << isr << std::endl;\n  }\n\n  return true;\n}\n\nint main(int argc, char *argv[]){\n  int n, m;\n  while(cin >> n >> m, n){\n    vector<string> vn(n), vm(m);\n    for (int i = 0; i < n; i++) {\n      cin >> vn[i];\n    }\n    for (int i = 0; i < m; i++) {\n      cin >> vm[i];\n    }\n    set<int> ans[m];\n    for (int p = 1; p < 21; p++) {\n      for (int q = 1; q < 21; q++) {\n        for (int r = 1; r < 21; r++) {\n          if(!collect(vn, p, q, r))continue;\n          int isp = 0, isq = 0, isr = 0;\n          for (int i = 0; i < m; i++) {\n            //std::cout << isp*p + isq*q + isr*r << \" \";\n            ans[i].insert(isp*p + isq*q + isr*r);\n            for (int j = 0; j < vm[i].length(); j++) {\n              update(vm[i][j], isp, isq, isr);\n            }\n          }\n          //std::cout << std::endl;\n        }\n      }\n    }\n    for (int i = 0; i < m; i++) {\n      if(ans[i].size() != 1)std::cout << -1 << \" \";\n      else std::cout << *ans[i].begin() << \" \";\n    }\n    std::cout << std::endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#define A first.first\n#define B first.second.first\n#define C first.second.second\n#define M make_pair\n#define N 10\n#define P push_back\nusing namespace std;\ntypedef pair<int,int> P1;\ntypedef pair<int,P1> P2;\ntypedef map<P2,int> MAP;\nvoid Find(int,int,int,int,int,int);\nvoid UpDate();\nint R(char);\nint cnt[2][N][3],n[2],ans,fa,fb,fc,fd,flag;\nstring st[2][N];\nvector<pair<char,int> > v;\nMAP m;\n\nint main(){\n  while(1){\n    cin>>n[0]>>n[1];\n    if(!n[0]&&!n[1]) break;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<N;j++)\n\tfor(int k=0;k<3;k++) cnt[i][j][k]=0;\n    for(int i=0;i<2;i++)\n      for(int j=0;j<n[i];j++) cin>>st[i][j];\n    for(int x=0;x<2;x++)\n      for(int i=0;i<n[x];i++)\n\tfor(int j=0;j<st[x][i].size();j++){\n\t  char c=st[x][i][j];\n\t  if(c=='('||c=='{'||c=='[') v.P(M(c,i));\n\t  if(c==')'||c=='}'||c==']'){\n\t    int ind=v.size()-1;\n\t    if(v[ind].second!=i)\n\t      for(int k=v[ind].second+1;k<=i;k++) cnt[x][k][R(c)]++;\n\t    v.erase(v.begin()+ind);\n\t  }\n\t}\n    for(int i=1;i<n[0];i++)\n      for(int j=0;j<st[0][i].size();j++)\n\tif(st[0][i][j]!='.'){\n\t  m.insert(M(M(cnt[0][i][0],M(cnt[0][i][1],cnt[0][i][2])),j));\n\t  break;\n\t}\n    UpDate();\n    cout<<0;\n    for(int i=1;i<n[1];i++){\n      fa=cnt[1][i][0],fb=cnt[1][i][1],fc=cnt[1][i][2];\n      if(i) cout<<' ';\n      flag=0;\n      ans=-1;\n      Find(0,0,0,0,-1,0);\n      if(ans<0) cout<<-1;\n      else cout<<ans;\n    }\n    cout<<endl;\n    m.clear();\n  }\n  return 0;\n}\n\nvoid Find(int x,int a,int b,int c,int d,int sum){\n  if(flag||fa+fb+fc<a+b+c) return ;\n  if(fa==a&&fb==b&&fc==c){\n    ans=sum;\n    flag=1;\n    return ;\n  }\n  int z=0;\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    if(z<=d){\n      z++;\n      continue;\n    }\n    int na=a+(*i).A,nb=b+(*i).B,nc=c+(*i).C;\n    Find(x+1,na,nb,nc,z,sum+(*i).second);\n    z++;\n  }\n}\n\nvoid UpDate(){\n  int f=0;\n  while(!f){\n    f=1;\n    for(MAP::iterator i=m.begin();i!=m.end();i++){\n      for(MAP::iterator j=m.begin();j!=m.end();j++){\n\tif(*i==*j) continue;\n\tif((*i).A>(*j).A||(*i).B>(*j).B||(*i).C>(*j).C) continue;\n\tint a=(*j).A-(*i).A,b=(*j).B-(*i).B,c=(*j).C-(*i).C;\n\tif(m.find(M(a,M(b,c)))!=m.end()) continue;\n\tm.insert(M(M(a,M(b,c)),(*j).second-(*i).second));\n\tf=0;\n      }\n    }\n  }\n  for(MAP::iterator i=m.begin();i!=m.end();i++){\n    int a=(*i).A,b=(*i).B,c=(*i).C,d=(*i).second;\n    if(a&&!b&&!c) m.insert(M(M(1,M(0,0)),d/a));\n    if(!a&&b&&!c) m.insert(M(M(0,M(1,0)),d/b));\n    if(!a&&!b&&c) m.insert(M(M(0,M(0,1)),d/c));\n    if(m.size()==1&&a==1&&b==1&&c==1){\n      m.insert(M(M(1,M(0,0)),d/3));\n      m.insert(M(M(0,M(1,0)),d/3));\n      m.insert(M(M(0,M(0,1)),d/3));\n    }\n  }\n}\n\nint R(char c){\n  int r=2;\n  if(c==')') r=0;\n  if(c=='}') r=1;\n  return r;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<map>\n#include<set>\nusing namespace std;\n\nint main(){\n    map<char,int> plus, minus;\n    plus['('] = 0;  minus[')'] = 0;\n    plus['{'] = 1;  minus['}'] = 1;\n    plus['['] = 2;  minus[']'] = 2;\n\n    int p, q;\n    while(cin >> p >> q, p+q){\n        vector<vector<double>> v;\n        v.push_back(vector<double>(4, 0));\n        for(int i = 0; i < p; i++){\n            string s;   cin >> s;\n            s += \"@\";   // sentinel\n            int pos = 0;\n            while(s[pos] == '.')    pos++;\n            v[i][3] = pos;\n            vector<double> now = v.back();\n            while(pos < s.length()){\n                if(plus.count(s[pos]))  now[plus[s[pos]]]++;\n                if(minus.count(s[pos]))  now[minus[s[pos]]]--;\n                pos++;\n            }\n            if(i != p-1)    v.push_back(now);\n        }\n\n        vector<int> x, y, z;\n        for(int i = 1; i <= 20; i++){\n            for(int j = 1; j <= 20; j++){\n                for(int k = 1; k <= 20; k++){\n                    bool valid = true;\n                    for(int l = 0; l < p; l++){\n                        valid &= i*v[l][0]+j*v[l][1]+k*v[l][2]==v[l][3];\n                    }\n                    if(!valid)  continue;\n                    x.push_back(i);\n                    y.push_back(j);\n                    z.push_back(k);\n                }\n            }\n        }\n\n        vector<int> target(3,0);\n        while(q-- > 0){\n            string s;   cin >> s;\n            set<int> num;\n            for(int i = 0; i < x.size(); i++){\n                num.insert(x[i]*target[0]+y[i]*target[1]+z[i]*target[2]);\n            }\n            cout << (num.size()!=1 ? -1 : *(num.begin())) << \" \\n\"[q==0];\n            for(char c : s){\n                if(plus.count(c))  target[plus[c]]++;\n                if(minus.count(c))  target[minus[c]]--;\n            }\n        }\n\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nmain(){\n  int da[2][11][3], n[2], cn[10];\n  while(cin >> n[0] >> n[1] && (n[0]|n[1])){\n    fill(da[0][0], da[2][0], 0);\n    fill(cn, cn+11, 0);\n    for(int k=0;k<2;k++){\n      for(int i=1;i<=n[k];i++){\n        string in;\n        cin >> in;\n        if(!k) for(;in[cn[i-1]]=='.';cn[i-1]++);\n        for(int j=0;j<3;j++) da[k][i][j] = da[k][i-1][j];\n        for(int j=0;j<in.size();j++){\n          if(in[j] == '(') da[k][i][0]++;\n          if(in[j] == '{') da[k][i][1]++;\n          if(in[j] == '[') da[k][i][2]++;\n          if(in[j] == ')') da[k][i][0]--;\n          if(in[j] == '}') da[k][i][1]--;\n          if(in[j] == ']') da[k][i][2]--;\n        }\n      }\n    }\n    int ans[10];\n    fill(ans, ans+10, -2);\n    ans[0] = 0;\n    for(int r=1;r<21;r++){\n      for(int c=1;c<21;c++){\n        for(int s=1;s<21;s++){\n          bool f = true;\n          for(int i=0;i<n[0];i++){\n            if(r*da[0][i][0] + c * da[0][i][1] + s * da[0][i][2] != cn[i]) f = false;\n          }\n          if(!f) continue;\n          for(int i=0;i<n[1];i++){\n            int t = r * da[1][i][0] + c * da[1][i][1] + s * da[1][i][2];\n            if(ans[i] == -2) ans[i] = t;\n            else if(ans[i] != t) ans[i] = -1;\n          }\n        }\n      }\n    }\n    cout << ans[0];\n    for(int i=1;i<n[1];i++) cout << ' ' << ans[i];\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<tuple>\nusing namespace std;\nint x[11][3], y[11][3], b[11];\nint n, m; string S[10], T[10];\nvoid init() {\n\tfor (int i = 0; i < 33; i++) { x[i / 3][i % 3] = 0; y[i / 3][i % 3] = 0; }\n\tfor (int i = 0; i < n; i++) {\n\t\tx[i + 1][0] = x[i][0]; x[i + 1][1] = x[i][1]; x[i + 1][2] = x[i][2]; bool Ind = true;\n\t\tfor (int j = 0; j < S[i].size(); j++) {\n\t\t\tif (S[i][j] != '.')Ind = false; if (Ind == true)b[i] = j + 1;\n\t\t\tif (S[i][j] == '(')x[i + 1][0]++; if (S[i][j] == ')')x[i + 1][0]--;\n\t\t\tif (S[i][j] == '{')x[i + 1][1]++; if (S[i][j] == '}')x[i + 1][1]--;\n\t\t\tif (S[i][j] == '[')x[i + 1][2]++; if (S[i][j] == ']')x[i + 1][2]--;\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\ty[i + 1][0] = y[i][0]; y[i + 1][1] = y[i][1]; y[i + 1][2] = y[i][2];\n\t\tfor (int j = 0; j < T[i].size(); j++) {\n\t\t\tif (T[i][j] == '(')y[i + 1][0]++; if (T[i][j] == ')')y[i + 1][0]--;\n\t\t\tif (T[i][j] == '{')y[i + 1][1]++; if (T[i][j] == '}')y[i + 1][1]--;\n\t\t\tif (T[i][j] == '[')y[i + 1][2]++; if (T[i][j] == ']')y[i + 1][2]--;\n\t\t}\n\t}\n}\nvector<tuple<int,int,int>> search() {\n\tvector<tuple<int, int, int>>vec;\n\tfor (int i = 1; i <= 20; i++) {\n\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\tbool OK = true;\n\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\tif ((x[l][0] * i + x[l][1] * j + x[l][2] * k) != b[l])OK = false;\n\t\t\t\t}\n\t\t\t\tif (OK == true)vec.push_back(make_tuple(i, j, k));\n\t\t\t}\n\t\t}\n\t}\n\treturn vec;\n}\nint main() {\n\twhile (true) {\n\t\tcin >> n >> m; if (n == 0 && m == 0)break;\n\t\tfor (int i = 0; i < n; i++)cin >> S[i];\n\t\tfor (int i = 0; i < m; i++)cin >> T[i];\n\t\tvector<int>res[10]; init(); search();\n\t\tvector<tuple<int, int, int>>F = search();\n\t\tfor (int i = 0; i < F.size(); i++) {\n\t\t\tint a1 = get<0>(F[i]), a2 = get<1>(F[i]), a3 = get<2>(F[i]);\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tint T = y[j][0] * a1 + y[j][1] * a2 + y[j][2] * a3;\n\t\t\t\tfor (int k = 0; k < res[j].size(); k++) {\n\t\t\t\t\tif (res[j][k] == T)goto E;\n\t\t\t\t}\n\t\t\t\tres[j].push_back(T); E:;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i)cout << ' ';\n\t\t\tif (res[i].size() >= 2) { cout << \"-1\"; }\n\t\t\telse { cout << res[i][0]; }\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,x,y) for(int i=(x);i<(y);++i)\n#define debug(x) #x << \"=\" << (x)\n\n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define print(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define print(x)\n#endif\n\nconst int inf=1e9;\nconst int64_t inf64=1e18;\nconst double eps=1e-9;\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n    os << \"[\";\n    for (const auto &v : vec) {\n    \tos << v << \",\";\n    }\n    os << \"]\";\n    return os;\n}\n\nvoid solve(int p,int q){\n    vector<string> a(p),b(q);\n    rep(i,0,p) cin >> a[i];\n    rep(i,0,q) cin >> b[i];\n    vector<vector<int>> correct;\n    rep(r,1,21){\n        rep(c,1,21){\n            rep(s,1,21){\n                vector<int> count={0,0,0};\n                bool ok=true;\n                rep(i,0,p){\n                    rep(j,0,a[i].size()){\n                        if(a[i][j]!='.'){\n                            if(j!=count[0]*r+count[1]*c+count[2]*s) ok=false;\n                            break;                       \n                        }\n                    }\n                    if(!ok) break;\n                    rep(j,0,a[i].size()){\n                        if(a[i][j]=='(') ++count[0];\n                        if(a[i][j]=='{') ++count[1];\n                        if(a[i][j]=='[') ++count[2];\n                        \n                        if(a[i][j]==')') --count[0];\n                        if(a[i][j]=='}') --count[1];\n                        if(a[i][j]==']') --count[2];                                 \n                    }\n                }\n                if(ok) correct.push_back({r,c,s});\n            }\n        }\n    }\n    \n    vector<int> count={0,0,0};\n    rep(i,0,q){\n        int indent;\n        set<int> st;\n        rep(j,0,correct.size()){\n            int tmp=0;\n            rep(k,0,3) tmp+=correct[j][k]*count[k];\n            indent=tmp;\n            st.insert(tmp);\n        }\n        \n        if(st.size()>=2) cout << -1;\n        else cout << indent;\n        \n        if(i!=q-1) cout << \" \";\n        else cout << endl;\n        \n        rep(j,0,b[i].size()){\n            if(b[i][j]=='(') ++count[0];\n            if(b[i][j]=='{') ++count[1];\n            if(b[i][j]=='[') ++count[2];\n            \n            if(b[i][j]==')') --count[0];\n            if(b[i][j]=='}') --count[1];\n            if(b[i][j]==']') --count[2];                                 \n        }\n    }\n}\n\nint main(){\n    std::cin.tie(0);\n    std::ios::sync_with_stdio(false);\n    cout.setf(ios::fixed);\n    cout.precision(10);\n    for(;;){\n        int p,q;\n        cin >> p >> q;\n        if(!p and !q) break;\n        solve(p,q);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint P, Q;\n\nvector<array<int, 4> > parse(int L){\n\tvector<array<int, 4>  > ret;\n\tret.push_back(array<int, 4>{0, 0, 0, 0});\n\tfor(int i = 0; i < L; i++){\n\t\tstring s;\n\t\tcin >> s;\n\t\n\t\tarray<int, 4> add{0,0,0,0};\n\t\tint idx = 0;\n\t\twhile(idx < s.size() && s[idx] == '.'){\n\t\t\tidx++;\n\t\t\tadd[3]++;\n\t\t}\n\t\tfor(; idx < s.size(); idx++){\n\t\t\tswitch(s[idx]){\n\t\t\t\tcase '(': add[0]++; break;\n\t\t\t\tcase ')': add[0]--; break;\n\t\t\t\tcase '{': add[1]++; break;\n\t\t\t\tcase '}': add[1]--; break;\n\t\t\t\tcase '[': add[2]++; break;\n\t\t\t\tcase ']': add[2]--; break;\n\t\t\t}\n\t\t}\n\t\tfor(int j = 0; j < 3; j++) add[j] += ret[i][j];\n\t\tret.push_back(add);\n\t}\n\treturn ret;\n}\n\nint main(){\n\twhile(cin >> P >> Q, P and Q){\n\t\tauto pstr = parse(P);\n\t\tauto qstr = parse(Q);\n\t\tvector<array<int , 3> > param;\n\t\tfor(int r = 1; r <= 20; r++){\n\t\t\tfor(int c = 1; c <= 20; c++){\n\t\t\t\tfor(int s = 1; s <= 20; s++){\n\t\t\t\t\tbool flg = true;\n\t\t\t\t\tfor(int i = 0; i < P; i++){\n\t\t\t\t\t\tif(pstr[i][0] * r + pstr[i][1] * c + pstr[i][2] * s != pstr[i + 1][3]){\n\t\t\t\t\t\t\t//printf(\"(%d %d %d %d(%d %d %d))\", pstr[i][0] ,pstr[i][1], pstr[i][2], pstr[i][3], r, c, s);\n\t\t\t\t\t\t\tflg = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//cout << endl;\n\t\t\t\t\tif(flg){\n\t\t\t\t\t\tparam.push_back({r, c, s});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < Q; i++){\n\t\t\tint indent = 100000;\n\t\t\tfor(auto val : param){\n\t\t\t\tint ii = qstr[i][0] * val[0] + qstr[i][1] * val[1] + qstr[i][2] * val[2];\n\t\t\t\tif(indent == 100000) indent = ii;\n\t\t\t\telse if(indent != ii) indent = -1;\n\t\t\t}\n\t\t\tif(i) cout << \" \";\n\t\t\tcout << indent;\n\t\t}\n\t\tcout << endl;\n\t}\n}\n\t"
  },
  {
    "language": "C++",
    "code": "//include\n//------------------------------------------\n#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <queue>\n\nusing namespace std;\n\n//typedef\n//------------------------------------------\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\n\n//container util\n//------------------------------------------\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define PRINT(c) cout<<(c)<<endl\n\n//repetition\n//------------------------------------------\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\n//constant\n//--------------------------------------------\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\nconst int INF = 1000000;\n\nint main(){\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int p, q;\n  while(cin>>p>>q, p){\n\tVS vs(p), target(q);\n\tREP(i,p) cin >> vs[i];\n\tREP(i,q) cin >> target[i];\n\tint cnt[16][3];\n\tint cnt2[16][3];\n\tVI in(p, 0);\n\tfill((int*)cnt, (int*)cnt+16*3, 0);\n\tfill((int*)cnt2, (int*)cnt2+16*3, 0);\n\tREP(i,p){\n\t  string& line = vs[i];\n\t  if(i > 0)\n\t\tREP(j,3)\n\t\t  cnt[i][j] = cnt[i-1][j];\n\t  int j;\n\t  for(j=0;j<SZ(line);++j)\n\t\tif(line[j] != '.') break;\n\t\telse ++in[i];\n\t  for(;j<SZ(line);++j)\n\t\tswitch(line[j]){\n\t\tcase '(': ++cnt[i][0]; break;\n\t\tcase ')': --cnt[i][0]; break;\n\t\tcase '{': ++cnt[i][1]; break;\n\t\tcase '}': --cnt[i][1]; break;\n\t\tcase '[': ++cnt[i][2]; break;\n\t\tcase ']': --cnt[i][2]; break;\n\t\t}\n\t}\n\tREP(i,q){\n\t  string& line = target[i];\n\t  if(i > 0)\n\t\tREP(j,3)\n\t\t  cnt2[i][j] = cnt2[i-1][j];\n\t  for(int j=0;j<SZ(line);++j)\n\t\tswitch(line[j]){\n\t\tcase '(': ++cnt2[i][0]; break;\n\t\tcase ')': --cnt2[i][0]; break;\n\t\tcase '{': ++cnt2[i][1]; break;\n\t\tcase '}': --cnt2[i][1]; break;\n\t\tcase '[': ++cnt2[i][2]; break;\n\t\tcase ']': --cnt2[i][2]; break;\n\t\t}\n\t}\n\n\tint tmp[3];\n\tVI ans(q, INF);\n\tFOR(r,1,21){\n\t  tmp[0] = r;\n\t  FOR(c,1,21){\n\t\ttmp[1] = c;\n\t\tFOR(s,1,21){\n\t\t  tmp[2] = s;\n\t\t  bool ok = true;\n\t\t  FOR(k,1,p){\n\t\t\tint ind = 0;\n\t\t\tREP(j,3)\n\t\t\t  ind += tmp[j]*cnt[k-1][j];\n\t\t\tif(in[k] != ind){\n\t\t\t  ok = false;\n\t\t\t  break;\n\t\t\t}\n\t\t  }\n\n\t\t  if(ok){\n\t\t\tans[0] = 0;\n\t\t\tFOR(i,1,q){\n\t\t\t  int ind = 0;\n\t\t\t  REP(j,3)\n\t\t\t\tind += tmp[j]*cnt2[i-1][j];\n\t\t\t  if(ans[i] == INF || ans[i] == ind)\n\t\t\t\tans[i] = ind;\n\t\t\t  else\n\t\t\t\tans[i] = -1;\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }\n\t}\n\tREP(i,q) if(ans[i] == INF) ans[i] = -1;\n\tcout << ans[0];\n\tREP(i,q-1) cout << \" \" << ans[i+1];\n\tcout << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define rep1(i,n) for(int i=1;i<=(int)(n);i++)\n#define all(c) c.begin(),c.end()\n#define pb push_back\n#define fs first\n#define sc second\n#define show(x) cout << #x << \" = \" << x << endl\n#define chmin(x,y) x=min(x,y)\n#define chmax(x,y) x=max(x,y)\nusing namespace std;\nstring s[10],t[10];\nint ds[10];\nint as[11],bs[11],cs[11];\t// ([{\nint at[11],bt[11],ct[11];\t// ([{\nint dots(string s){\n\tint N=s.size();\n\tint x=0;\n\trep(i,N){\n\t\tif(s[i]!='.') break;\n\t\tx++;\n\t}\n\treturn x;\n}\nint main(){\n\twhile(true){\n\t\tint M,N;\n\t\tcin>>M>>N;\n\t\tif(M==0) break;\n\t\tcin.ignore();\n\t\trep(i,M) getline(cin,s[i]);\n\t\trep(i,N) getline(cin,t[i]);\n\t\trep(i,M) ds[i]=dots(s[i]);\n\t\trep(i,M){\n\t\t\tas[i+1]=as[i],bs[i+1]=bs[i],cs[i+1]=cs[i];\n\t\t\trep(j,s[i].size()){\n\t\t\t\tif(s[i][j]=='(') as[i+1]++;\n\t\t\t\tif(s[i][j]==')') as[i+1]--;\n\t\t\t\tif(s[i][j]=='[') bs[i+1]++;\n\t\t\t\tif(s[i][j]==']') bs[i+1]--;\n\t\t\t\tif(s[i][j]=='{') cs[i+1]++;\n\t\t\t\tif(s[i][j]=='}') cs[i+1]--;\n\t\t\t}\n\t\t}\n\t\trep(i,N){\n\t\t\tat[i+1]=at[i],bt[i+1]=bt[i],ct[i+1]=ct[i];\n\t\t\trep(j,t[i].size()){\n\t\t\t\tif(t[i][j]=='(') at[i+1]++;\n\t\t\t\tif(t[i][j]==')') at[i+1]--;\n\t\t\t\tif(t[i][j]=='[') bt[i+1]++;\n\t\t\t\tif(t[i][j]==']') bt[i+1]--;\n\t\t\t\tif(t[i][j]=='{') ct[i+1]++;\n\t\t\t\tif(t[i][j]=='}') ct[i+1]--;\n\t\t\t}\n\t\t}\n\t\tset<int> ans[10];\n\t\trep1(A,20) rep1(B,20) rep1(C,20){\n\t\t\tbool ok=1;\n\t\t\trep(i,M){\n\t\t\t\tif(A*as[i]+B*bs[i]+C*cs[i]!=ds[i]){\n\t\t\t\t\tok=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok) rep(i,N) ans[i].insert(A*at[i]+B*bt[i]+C*ct[i]);\n\t\t}\n\t\trep(i,N){\n\t\t\tif(ans[i].size()==1) cout<<*ans[i].begin()<<(i==N-1?\"\\n\":\" \");\n\t\t\telse cout<<-1<<(i==N-1?\"\\n\":\" \");\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nvoid update(char c, int& x, int& y, int& z){\n  switch(c){\n  case '(':\n    x++;\n    break;\n  case ')':\n    x--;\n    break;\n  case '{':\n    y++;\n    break;\n  case '}':\n    y--;\n    break;\n  case '[':\n    z++;\n    break;\n  case ']':\n    z--;\n  }\n}\n\nbool collect(vector<string>& s, int p, int q, int r){\n  int isp = 0, isq = 0, isr = 0, cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    cnt = 0;\n    bool flag = true;\n    for (int j = 0; j < s[i].length(); j++) {\n      if(s[i][j] == '.' && flag){\n        cnt++;\n        continue;\n      }\n      //std::cout << cnt << std::endl;\n      if(flag && cnt != p*isp + q*isq + r*isr)return false;\n      flag = false;\n      //std::cout << s[i][j];\n      update(s[i][j], isp, isq, isr);\n    }\n    //std::cout << std::endl;\n    //std::cout << \"isp:\" << isp << \" isq:\" << isq << \" isr:\" << isr << std::endl;\n  }\n\n  return true;\n}\n\nint main(int argc, char *argv[]){\n  int n, m;\n  while(cin >> n >> m, n){\n    vector<string> vn(n), vm(m);\n    for (int i = 0; i < n; i++) {\n      cin >> vn[i];\n    }\n    for (int i = 0; i < m; i++) {\n      cin >> vm[i];\n    }\n    set<int> ans[m];\n    for (int p = 1; p < 21; p++) {\n      for (int q = 1; q < 21; q++) {\n        for (int r = 1; r < 21; r++) {\n          if(!collect(vn, p, q, r))continue;\n          int isp = 0, isq = 0, isr = 0;\n          for (int i = 0; i < m; i++) {\n            //std::cout << isp*p + isq*q + isr*r << \" \";\n            ans[i].insert(isp*p + isq*q + isr*r);\n            for (int j = 0; j < vm[i].length(); j++) {\n              update(vm[i][j], isp, isq, isr);\n            }\n          }\n          //std::cout << std::endl;\n        }\n      }\n    }\n    for (int i = 0; i < m - 1; i++) {\n      if(ans[i].size() != 1)std::cout << -1 << \" \";\n      else std::cout << *ans[i].begin() << \" \";\n    }\n    if(ans[m - 1].size() != 1)std::cout << -1;\n    else std::cout << *ans[m - 1].begin();\n    std::cout << std::endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"iostream\"\n#include \"climits\"\n#include \"list\"\n#include \"queue\"\n#include \"stack\"\n#include \"set\"\n#include \"functional\"\n#include \"algorithm\"\n#include \"string\"\n#include \"map\"\n#include \"unordered_map\"\n#include \"unordered_set\"\n#include \"iomanip\"\n#include \"cmath\"\n#include \"random\"\n#include \"bitset\"\n#include \"cstdio\"\n#include \"numeric\"\n#include \"cassert\"\n#include \"ctime\"\n\nusing namespace std;\n\nconstexpr long long int MOD = 1000000007;\n//constexpr int MOD = 1000000007;\n//constexpr int MOD = 998244353;\n//constexpr long long int MOD = 998244353;\nconstexpr double EPS = 1e-12;\n\n//int N, M, K, T, H, W, L, R;\nlong long int N, M, K, T, H, W, L, R;\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\twhile (cin >> N >> M, N) {\n\t\tvector<string>s(N);\n\t\tvector<string>t(M);\n\t\tvector<int>num(N);\n\t\tvector<int>anum(N);\n\t\tvector<int>bnum(N);\n\t\tvector<int>cnum(N);\n\t\tfor (auto &i : s)cin >> i;\n\t\tfor (auto &i : t)cin >> i;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (auto j : s[i]) {\n\t\t\t\tif (j == '.')num[i]++;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tfor (auto j : s[i]) {\n\t\t\t\tif (j == '(')anum[i]++;\n\t\t\t\tif (j == ')')anum[i]--;\n\t\t\t\tif (j == '{')bnum[i]++;\n\t\t\t\tif (j == '}')bnum[i]--;\n\t\t\t\tif (j == '[')cnum[i]++;\n\t\t\t\tif (j == ']')cnum[i]--;\n\t\t\t}\n\t\t}\n\t\tset<pair<int, pair<int,int>>>st;\n\t\tvector<int>ans(M,MOD);\n\t\tfor (int i = 1; i <= 20; i++) {\n\t\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\t\tint a, b, c;\n\t\t\t\t\ta = b = c = 0;\n\t\t\t\t\tbool flag = true;\n\t\t\t\t\tfor (int l = 0; l < N; l++) {\n\t\t\t\t\t\tif (a*i + b * j + c * k != num[l])flag = false;\n\t\t\t\t\t\ta += anum[l];\n\t\t\t\t\t\tb += bnum[l];\n\t\t\t\t\t\tc += cnum[l];\n\t\t\t\t\t}\n\t\t\t\t\tif (flag) {\n\t\t\t\t\t\tst.insert({ i,{j,k} });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<int>aanum(M);\n\t\tvector<int>bbnum(M);\n\t\tvector<int>ccnum(M);\n\t\tfor (int i = 0; i < M; i++) {\n\t\t\tfor (auto j : t[i]) {\n\t\t\t\tif (j == '(')aanum[i]++;\n\t\t\t\tif (j == ')')aanum[i]--;\n\t\t\t\tif (j == '{')bbnum[i]++;\n\t\t\t\tif (j == '}')bbnum[i]--;\n\t\t\t\tif (j == '[')ccnum[i]++;\n\t\t\t\tif (j == ']')ccnum[i]--;\n\t\t\t}\n\t\t}\n\t\tfor (auto i : st) {\n\t\t\tint aa = i.first, bb = i.second.first, cc = i.second.second;\n\t\t\tint a, b, c ;\n\t\t\ta = b = c = 0;\n\t\t\tfor (int j = 0; j < M; j++) {\n\t\t\t\tif (ans[j] == MOD) {\n\t\t\t\t\tans[j] = a * aa + b * bb + c * cc;\n\t\t\t\t}\n\t\t\t\telse if (ans[j] != a * aa + b * bb + c * cc) {\n\t\t\t\t\tans[j] = -1;\n\t\t\t\t}\n\t\t\t\ta += aanum[j];\n\t\t\t\tb += bbnum[j];\n\t\t\t\tc += ccnum[j];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < M; i++) {\n\t\t\tif (i)cout << \" \";\n\t\t\tcout << ans[i];\n\t\t}\n\t\tcout << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n  int P, Q;\n  int r[23], c[23], s[23], indent[23];\n  int ans[23];\n  \n  while(cin >> P >> Q, P) {\n    for(int i = 0; i < P + Q; i++) {\n      string S;\n      cin >> S;\n      r[i] = count(S.begin(), S.end(), '(') - count(S.begin(), S.end(), ')');\n      c[i] = count(S.begin(), S.end(), '{') - count(S.begin(), S.end(), '}');\n      s[i] = count(S.begin(), S.end(), '[') - count(S.begin(), S.end(), ']');\n      if(i != 0 && i != P) r[i] += r[i - 1], c[i] += c[i - 1], s[i] += s[i - 1];\n      for(indent[i] = 0; S[indent[i]] == '.'; ++indent[i]);\n    }\n    fill_n(ans, Q, -810);\n    for(int i = 1; i <= 20; i++) {\n      for(int j = 1; j <= 20; j++) {\n        for(int k = 1; k <= 20; k++) {\n          bool flag = true;\n          for(int l = 0; l < P - 1; l++) {\n            flag &= i * r[l] + j * c[l] + k * s[l] == indent[l + 1];\n          }\n          if(!flag) continue;\n          for(int l = P; l < P + Q - 1; l++) {\n            if(ans[l - P] == -810) ans[l - P] = i * r[l] + j * c[l] + k * s[l];\n            else if(ans[l - P] != i * r[l] + j * c[l] + l * s[l]) ans[l - P] = -1;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < Q; i++) {\n      cout << ans[(i + Q - 1) % Q] << (i + 1 == Q ? \"\\n\" : \" \");\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n\n#define frs first\n#define scn second\n#define phb push_back\n#define ppb pop_back\n#define mkp make_pair\n\nusing namespace std;\n\ntypedef pair< int, int > Pr;\ntypedef pair< int, Pr > Trp;\n\nint N, M;\nstring txt[10], ptr[10];\n\nvoid read();\nvoid soups_on();\nvector< int > yee_haw(vector< Trp >, string [], int);\n\nbool not_dot(const char &);\n\nint main() {\n  ios::sync_with_stdio(false);\n  while (cin >> N >> M, N + M)\n    read(), soups_on();\n\n  return 0;\n}\n\nvoid read() {\n  for (int i = 0; i < N; ++i)\n    cin >> txt[i];\n  for (int i = 0; i < M; ++i)\n    cin >> ptr[i];\n}\n\nvoid soups_on() {\n  vector< int > p, q, t;\n  vector< Trp > tmp, res;\n\n  for (int i = 0; i < N; ++i)\n    p.phb(int(find_if(txt[i].begin(), txt[i].end(), not_dot) - txt[i].begin()));\n\n  for (int i = 1; i <= 20; ++i)\n    for (int j = 1; j <= 20; ++j)\n      for (int k = 1; k <= 20; ++k) {\n        tmp.phb(mkp(i, mkp(j, k)));\n        t = yee_haw(tmp, txt, N);\n\n        bool is_valid = true;\n        for (int c = 0; c < N && is_valid; ++c)\n          if (p[c] != t[c])\n            is_valid = false;\n        if (is_valid)\n          res.phb(mkp(i, mkp(j, k)));\n\n        tmp.ppb();\n      }\n\n  q = yee_haw(res, ptr, M);\n  for (int i = 0; i < M; ++i) {\n    if (i > 0) cout << \" \";\n    cout << q[i];\n  }\n  cout << \"\\n\";\n}\n\nvector< int > yee_haw(vector< Trp > t, string p[], int k) {\n  vector< int > ret;\n  int c[3], f;\n\n  fill(&c[0], &c[3], 0);\n  for (int i = 0; i < k; ++i) {\n    vector< int > pv;\n\n    for (int j = 0; j < int(t.size()); ++j) {\n      f = c[0] * t[j].frs + c[1] * t[j].scn.frs + c[2] * t[j].scn.scn;\n      pv.phb(f);\n    }\n\n    stable_sort(pv.begin(), pv.end());\n    pv.erase(unique(pv.begin(), pv.end()), pv.end());\n\n    if (int(pv.size()) > 1)\n      ret.phb(-1);\n    else\n      ret.phb(pv[0]);\n\n    c[0] += count(p[i].begin(), p[i].end(), '(');\n    c[0] -= count(p[i].begin(), p[i].end(), ')');\n    c[1] += count(p[i].begin(), p[i].end(), '[');\n    c[1] -= count(p[i].begin(), p[i].end(), ']');\n    c[2] += count(p[i].begin(), p[i].end(), '{');\n    c[2] -= count(p[i].begin(), p[i].end(), '}');\n  }\n\n  return ret;\n}\n\nbool not_dot(const char &rc) {\n  return rc != '.';\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nint x[11][3], y[11][3], b[11];\nint main() {\n\tint n, m; string S[10], T[10];\n\twhile (true) {\n\t\tcin >> n >> m; if (n == 0 && m == 0)break;\n\t\tfor (int i = 0; i < n; i++)cin >> S[i];\n\t\tfor (int i = 0; i < m; i++)cin >> T[i];\n\t\tfor (int i = 0; i < 33; i++) { x[i / 3][i % 3] = 0; y[i / 3][i % 3] = 0; }\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tx[i + 1][0] = x[i][0]; x[i + 1][1] = x[i][1]; x[i + 1][2] = x[i][2]; bool Ind = true;\n\t\t\tfor (int j = 0; j < S[i].size(); j++) {\n\t\t\t\tif (S[i][j] != '.')Ind = false; if (Ind == true)b[i] = j + 1;\n\t\t\t\tif (S[i][j] == '(')x[i + 1][0]++; if (S[i][j] == ')')x[i + 1][0]--;\n\t\t\t\tif (S[i][j] == '{')x[i + 1][1]++; if (S[i][j] == '}')x[i + 1][1]--;\n\t\t\t\tif (S[i][j] == '[')x[i + 1][2]++; if (S[i][j] == ']')x[i + 1][2]--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\ty[i + 1][0] = y[i][0]; y[i + 1][1] = y[i][1]; y[i + 1][2] = y[i][2];\n\t\t\tfor (int j = 0; j < T[i].size(); j++) {\n\t\t\t\tif (T[i][j] == '(')y[i + 1][0]++; if (T[i][j] == ')')y[i + 1][0]--;\n\t\t\t\tif (T[i][j] == '{')y[i + 1][1]++; if (T[i][j] == '}')y[i + 1][1]--;\n\t\t\t\tif (T[i][j] == '[')y[i + 1][2]++; if (T[i][j] == ']')y[i + 1][2]--;\n\t\t\t}\n\t\t}\n\t\tvector<int>res[10];\n\t\tfor (int i = 1; i <= 20; i++) {\n\t\t\tfor (int j = 1; j <= 20; j++) {\n\t\t\t\tfor (int k = 1; k <= 20; k++) {\n\t\t\t\t\tbool OK = true;\n\t\t\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\t\t\tif ((x[l][0] * i + x[l][1] * j + x[l][2] * k) != b[l])OK = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (OK == false)continue;\n\t\t\t\t\tfor (int l = 0; l < m; l++) {\n\t\t\t\t\t\tint ret = y[l][0] * i + y[l][1] * j + y[l][2] * k;\n\t\t\t\t\t\tfor (int o = 0; o < res[l].size(); o++) {\n\t\t\t\t\t\t\tif (res[l][o] == ret)goto E;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres[l].push_back(ret); E:;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) { if (x[i][0] + x[i][1] + x[i][2] == 0 && res[i].size() == 0)res[i].push_back(0); }\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (i)cout << ' ';\n\t\t\tif (res[i].size() == 0 || res[i].size() >= 2) { cout << \"-1\"; }\n\t\t\telse { cout << res[i][0]; }\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void){\n    int p, q;\n    while (cin>>p>>q && p) {\n        vector<vector<int> > c(4, vector<int>(p, 0));\n        for (int i = 0; i < p; i++) {\n            string t;\n            cin >> t;\n            bool f = true;\n            int cnt = 0;\n            for (int j = 0; j < t.size(); j++) {\n                if (f && t[j] == '.') cnt++;\n                else f = false;\n                if (t[j] == '(') c[0][i]++;\n                if (t[j] == ')') c[0][i]--;\n                if (t[j] == '{') c[1][i]++;\n                if (t[j] == '}') c[1][i]--;\n                if (t[j] == '[') c[2][i]++;\n                if (t[j] == ']') c[2][i]--;\n            }\n            if (i) c[3][i-1] = cnt;\n        }\n        \n        \n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p-1; j++) {\n                c[i][j+1] += c[i][j];\n            }\n        }\n        \n        vector<bool> rcs(3, false);\n        int rcs_cnt = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) rcs[i] = true;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < p; j++) {\n                if (c[i][j]) {\n                    rcs_cnt++;\n                    break;\n                }\n            }\n        }\n        \n        vector<int> R,C,S;\n        for (int i = 1; i < 21; i++) {\n            if (rcs[0] == false) continue;\n            for (int j = 1; j < 21; j++) {\n                if (rcs[1] == false) continue;\n                for (int k = 1; k < 21; k++) {\n                    if (rcs[2] == false) continue;\n                    bool f = true;\n                    for (int a = 0; a < c[0].size(); a++) {\n                        if (i*c[0][a] + j*c[1][a] + k*c[2][a] != c[3][a]) {\n                            f = false;\n                            break;\n                        }\n                    }\n                    if (f) R.push_back(i), C.push_back(j), S.push_back(k);\n                }\n            }\n        }\n        R.erase(unique(R.begin(), R.end()), R.end());\n        C.erase(unique(C.begin(), C.end()), C.end());\n        S.erase(unique(S.begin(), S.end()), S.end());\n        \n        vector<vector<int> > a(3, vector<int>(q, 0));\n        for (int i = 0; i < q; i++) {\n            string t;\n            cin >> t;\n            \n            for (int j = 0; j < t.size(); j++) {\n                if (t[j] == '(') a[0][i]++;\n                if (t[j] == ')') a[0][i]--;\n                if (t[j] == '{') a[1][i]++;\n                if (t[j] == '}') a[1][i]--;\n                if (t[j] == '[') a[2][i]++;\n                if (t[j] == ']') a[2][i]--;\n            }\n        }\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < q-1; j++) {\n                a[i][j+1] += a[i][j];\n            }\n        }\n        \n        vector<int> ans;\n        ans.push_back(0);\n        \n        if (rcs_cnt >= 2 && R.size() == 1 && C.size() == 1 && S.size() == 1) {\n            for (int i = 0; i < q-1; i++) ans.push_back(R[0]*a[0][i] + C[0]*a[1][i] + S[0]*a[2][i]);\n        }\n        else {\n            for (int i = 0; i < q-1; i++) {\n                bool f = false;\n                if (!a[0][i] && !a[1][i] && !a[2][i]) {\n                    ans.push_back(0);\n                    continue;\n                }\n                else if (a[0][i] && R.size()==1 && !a[1][i] && !a[2][i]) {\n                    ans.push_back(R[0]*a[0][i]);\n                    continue;\n                }\n                else if (a[1][i] && C.size()==1 && !a[0][i] && !a[2][i]) {\n                    ans.push_back(C[0]*a[1][i]);\n                    continue;\n                }\n                else if (a[2][i] && S.size()==1 && !a[0][i] && !a[1][i]) {\n                    ans.push_back(R[2]*a[2][i]);\n                    continue;\n                }\n                for (int j = 0; j < p-1; j++) {\n                    if (!c[0][j] && !c[1][j] && !c[2][j]) continue;\n                    if ((!a[0][i] && c[0][j]) || (a[0][i] && !c[0][j])) continue;\n                    if ((!a[1][i] && c[1][j]) || (a[1][i] && !c[1][j])) continue;\n                    if ((!a[2][i] && c[2][j]) || (a[2][i] && !c[2][j])) continue;\n                    double u = -1;\n                    if (a[0][i] && c[0][j]) u = a[0][i] / c[0][j];\n                    if (a[1][i] && c[1][j]) {\n                        if (u == -1) u = a[1][i] / c[1][j];\n                        else if (u != a[1][i] / c[1][j]) break;\n                    }\n                    if (a[2][i] && c[2][j]) {\n                        if (u == -1) u = a[2][i] / c[2][j];\n                        else if (u != a[2][i] / c[2][j]) break;\n                    }\n                    f = true;\n                    c[3][1] *= (int)u;\n                    ans.push_back(c[3][j]);\n                    break;\n                }\n                if (!f) ans.push_back(-1);\n            }\n        }\n        for (int i = 0; i < ans.size(); i++) cout << ans[i] << (i==ans.size()-1? \"\\n\" : \" \");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    int P, Q;\n    while(cin >> P >> Q, P || Q) {\n        vector<string> p(P), q(Q);\n        for(auto &i : p) cin >> i;\n        for(auto &i : q) cin >> i;\n\n        int psum = 0;\n        int D[12] = {0}, F[12] = {0};\n        for(int i = 0; i < P; i++) {\n            string str = p[i];\n            int dot = 0;\n            while(str[dot] == '.') dot++;\n            D[i + 1] = dot;\n        }\n        for(int i = 0; i < Q; i++) {\n            string str = q[i];\n            int dot = 0;\n            while(str[dot] == '.') dot++;\n            F[i + 1] = dot;\n        }\n        int X[P + 1] = {0}, Y[P + 1] = {0}, Z[P + 1] = {0};\n        for(int i = 0; i < P; i++) {\n            string str = p[i];\n            X[i] = count(str.begin(), str.end(), '(') - count(str.begin(), str.end(), ')') + (i == 0 ? 0 : X[i-1]);\n            Y[i] = count(str.begin(), str.end(), '[') - count(str.begin(), str.end(), ']') + (i == 0 ? 0 : Y[i-1]);\n            Z[i] = count(str.begin(), str.end(), '{') - count(str.begin(), str.end(), '}') + (i == 0 ? 0 : Z[i-1]);\n        }\n        int R[P + 1] = {0}, C[P + 1] = {0}, S[P + 1] = {0};\n        for(int i = 0; i < Q; i++) {\n            string str = q[i];\n            R[i] = count(str.begin(), str.end(), '(') - count(str.begin(), str.end(), ')') + (i == 0 ? 0 : R[i-1]);\n            C[i] = count(str.begin(), str.end(), '[') - count(str.begin(), str.end(), ']') + (i == 0 ? 0 : C[i-1]);\n            S[i] = count(str.begin(), str.end(), '{') - count(str.begin(), str.end(), '}') + (i == 0 ? 0 : S[i-1]);\n        }\n\n        set<int> r, c, s;\n        vector<int> ans(Q + 1,-2);\n        ans[0] = 0;\n        for(int i = 1; i <= 20; i++) {\n            for(int j = 1; j <= 20; j++) {\n                for(int k = 1; k <= 20; k++) {\n                    bool flag = true;\n                    for(int l = 0; l < P; l++) {\n                        if(X[l] * i + Y[l] * j + Z[l] * k == D[l + 2]) ;\n                        else {\n                            flag = false;\n                            break;\n                        }\n                    }\n                    if(!flag) continue;\n                    for(int l = 0; l < Q; l++) {\n                        int indention = i * R[l] + j * C[l] + k * S[l];\n                        if(ans[l + 1] == -2) ans[l + 1] = indention;\n                        else if (ans[l + 1] != indention) ans[l + 1] = -1;\n                    }\n                }\n            }\n        }\n        for(int i = 0; i < Q - 1; i++) {\n            cout << ans[i] << \" \";\n        }\n        cout << ans[Q-1] << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <complex>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <queue>\n#include <string>\n#include <cstring>\n#include <stack>\n#include <cmath>\n#include <iomanip>\n#include <sstream>\n#include <cassert>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef ll li;\ntypedef pair<int,int> PI;\n#define EPS (1e-10L)\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\n#define REP(i, n) rep (i, n)\n#define F first\n#define S second\n#define mp(a,b) make_pair(a,b)\n#define pb(a) push_back(a)\n#define SZ(a) (int)((a).size())\n#define ALL(a) a.begin(),a.end()\n#define CLR(a) memset((a),0,sizeof(a))\n#define FOR(it,a) for(__typeof(a.begin())it=a.begin();it!=a.end();++it)\ntemplate<typename T,typename U> ostream& operator<< (ostream& out, const pair<T,U>& val){return out << \"(\" << val.F << \", \" << val.S << \")\";}\ntemplate<class T> ostream& operator<< (ostream& out, const vector<T>& val){out << \"{\";rep(i,SZ(val)) out << (i?\", \":\"\") << val[i];return out << \"}\";}\nvoid pkuassert(bool t){t=1/t;};\nint dx[]={0,1,0,-1,1,1,-1,-1};\nint dy[]={1,0,-1,0,-1,1,1,-1};\n\nint p,q;\nstring P[1000],Q[100];\n\nbool ok(int r,int c,int s){\n  int ro,rc,co,cc,so,sc;\n  ro=rc=co=cc=so=sc=0;\n  rep(i,p){\n    int le=r*(ro-rc)+c*(co-cc)+s*(so-sc);\n    string pe(le,'.');\n    if(P[i].substr(0,SZ(pe))!=pe) return false;\n    if(P[i][le]=='.') return false;\n    ro += count(ALL(P[i]),'(');\n    rc += count(ALL(P[i]),')');\n    co += count(ALL(P[i]),'{');\n    cc += count(ALL(P[i]),'}');\n    so += count(ALL(P[i]),'[');\n    sc += count(ALL(P[i]),']');\n  }\n  return true;\n}\n\nvoid solve(){\n  rep(i, p) cin >> P[i];\n  rep(i, q) cin >> Q[i];\n\n  set<pair<int,PI > > rcs;\n  for(int r=1;r<=20;++r)\n    for(int c=1;c<=20;++c)\n      for(int s=1;s<=20;++s)\n        if(ok(r,c,s)){\n          //cout << r << ' ' << c << ' ' << s << endl;\n          rcs.insert(mp(r,mp(c,s)));\n        }\n  set<int> ans[q];\n  FOR(it,rcs){\n    int r=it->F;\n    int c=it->S.F;\n    int s=it->S.S;\n    int ro,rc,co,cc,so,sc;\n    ro=rc=co=cc=so=sc=0;\n    rep(i,q){\n      ans[i].insert(r*(ro-rc)+c*(co-cc)+s*(so-sc));\n      ro += count(ALL(Q[i]),'(');\n      rc += count(ALL(Q[i]),')');\n      co += count(ALL(Q[i]),'{');\n      cc += count(ALL(Q[i]),'}');\n      so += count(ALL(Q[i]),'[');\n      sc += count(ALL(Q[i]),']');\n    }\n  }\n  \n  rep(i,q){\n    if(i) cout << ' ';\n    if(ans[i].size()==1) cout << *ans[i].begin();\n    else cout << -1;\n  }\n  cout << endl;\n}\n\nint main(int argc, char *argv[])\n{\n  while(cin >> p >> q && p && q) solve();\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nvoid update(char c, int& x, int& y, int& z){\n  switch(c){\n  case '(':\n    x++;\n    break;\n  case ')':\n    x--;\n    break;\n  case '{':\n    y++;\n    break;\n  case '}':\n    y--;\n    break;\n  case '[':\n    z++;\n    break;\n  case ']':\n    z--;\n  }\n}\n\nbool collect(vector<string>& s, int p, int q, int r){\n  int isp = 0, isq = 0, isr = 0, cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    cnt = 0;\n    bool flag = true;\n    for (int j = 0; j < s[i].length(); j++) {\n      if(s[i][j] == '.' && flag){\n        cnt++;\n        continue;\n      }\n      //std::cout << cnt << std::endl;\n      if(flag && cnt != p*isp + q*isq + r*isr)return false;\n      flag = false;\n      //std::cout << s[i][j];\n      update(s[i][j], isp, isq, isr);\n    }\n    //std::cout << std::endl;\n    //std::cout << \"isp:\" << isp << \" isq:\" << isq << \" isr:\" << isr << std::endl;\n  }\n\n  return true;\n}\n\nint main(int argc, char *argv[]){\n  int n, m;\n  while(cin >> n >> m, n){\n    vector<string> vn(n), vm(m);\n    for (int i = 0; i < n; i++) {\n      cin >> vn[i];\n    }\n    for (int i = 0; i < m; i++) {\n      cin >> vm[i];\n    }\n    set<int> ans[m];\n    for (int p = 1; p < 21; p++) {\n      for (int q = 1; q < 21; q++) {\n        for (int r = 1; r < 21; r++) {\n          if(!collect(vn, p, q, r))continue;\n          int isp = 0, isq = 0, isr = 0;\n          for (int i = 0; i < m; i++) {\n            //std::cout << isp*p + isq*q + isr*r << \" \";\n            ans[i].insert(isp*p + isq*q + isr*r);\n            for (int j = 0; j < vm[i].length(); j++) {\n              update(vm[i][j], isp, isq, isr);\n            }\n          }\n          //std::cout << std::endl;\n        }\n      }\n    }\n    for (int i = 0; i < m - 1; i++) {\n      if(ans[i].size() != 1)std::cout << -1 << \" \";\n      else std::cout << *ans[i].begin() << \" \";\n    }\n    if(ans[m - 1].size() != 1)std::cout << -1 << \" \";\n    else std::cout << *ans[m - 1].begin() << \" \";\n    std::cout << std::endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <cstring>\n#include <string>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n \n#define REP(i,n) for(int i=0; i<n; ++i)\n#define FOR(i,a,b) for(int i=a; i<=b; ++i)\n#define FORR(i,a,b) for (int i=a; i>=b; --i)\n#define pi M_PI\n#define EPS 1e-10\n \ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef vector<ll> VL;\ntypedef vector<VI> VVI;\ntypedef pair<int,int> P;\ntypedef pair<ll,ll> PL;\n\nint main() {\n    int p, q;\n    while (cin >> p >> q && p){\n        vector<string> s(p);\n        REP(i,p) cin >> s[i];\n        VI ro(p), co(p), so(p), indent(p);\n        REP(i,p){\n            while (s[i][indent[i]] == '.') indent[i]++;\n            if (i < p-1){\n                ro[i+1] = ro[i];\n                co[i+1] = co[i];\n                so[i+1] = so[i];\n                REP(j,s[i].length()){\n                    if (s[i][j] == '(') ro[i+1]++;\n                    if (s[i][j] == ')') ro[i+1]--;\n                    if (s[i][j] == '{') co[i+1]++;\n                    if (s[i][j] == '}') co[i+1]--;\n                    if (s[i][j] == '[') so[i+1]++;\n                    if (s[i][j] == ']') so[i+1]--;\n                }\n            }\n        }\n\n        vector<string> t(q);\n        REP(i,q) cin >> t[i];\n        VI rn(q), cn(q), sn(q);\n        REP(i,q){\n            if (i < q-1){\n                rn[i+1] = rn[i];\n                cn[i+1] = cn[i];\n                sn[i+1] = sn[i];\n                REP(j,t[i].length()){\n                    if (t[i][j] == '(') rn[i+1]++;\n                    if (t[i][j] == ')') rn[i+1]--;\n                    if (t[i][j] == '{') cn[i+1]++;\n                    if (t[i][j] == '}') cn[i+1]--;\n                    if (t[i][j] == '[') sn[i+1]++;\n                    if (t[i][j] == ']') sn[i+1]--;\n                }\n            }\n        }\n\n        VI ans(q,-1);\n        FOR(r,1,20) FOR(c,1,20) FOR(s,1,20) {\n            bool f = 1;\n            REP(i,p){\n                if (r*ro[i] + c*co[i] + s*so[i] != indent[i]) f = 0;\n            }\n            if (!f) continue;\n            REP(i,q){\n                int x = r*rn[i] + c*cn[i] + s*sn[i];\n                if (ans[i] == -2) continue;\n                if (ans[i] == -1) ans[i] = x;\n                if (ans[i] >= 0 && ans[i] != x) ans[i] = -2;\n            }\n        }\n        REP(i,q){\n            if (ans[i] < 0) cout << -1;\n            else cout << ans[i];\n            cout << \" \";\n        }\n        cout << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#if 1\n#include <iostream>\n#include <fstream>\n#include <string>\n#include <vector>\n#include <map>\n#include <set>\n#include <unordered_map>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <array>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <cstdint>\n#include <functional>\n#include <iomanip>\n#include <numeric>\n#include <assert.h>\n#include <bitset>\n#include <list>\n#include <cmath>\n#include <sstream>\n\nusing namespace std;\n\nint main()\n{\n\twhile (true)\n\t{\n\t\tint A, B;\n\t\tint numP[20][3] = {};\n\t\tint indP[20] = {};\n\t\tint numQ[20][3] = {};\n\t\t{\n\t\t\tstd::string tmp;\n\t\t\tgetline(cin, tmp);\n\t\t\tstringstream(tmp) >> A >> B;\n\t\t}\n\n\t\tif (A==0 && B==0) {\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (int i = 0; i < A; ++i) {\n\t\t\tstring tmp;\n\t\t\tgetline(cin, tmp);\n\n\t\t\tnumP[i + 1][0] = numP[i][0];\n\t\t\tnumP[i + 1][1] = numP[i][1];\n\t\t\tnumP[i + 1][2] = numP[i][2];\n\t\t\tindP[i] = 0;\n\t\t\tint j = 0;\n\t\t\tfor (; j < tmp.size() && tmp[j] == '.'; j++)\n\t\t\t{\n\t\t\t\t++indP[i];\n\t\t\t}\n\t\t\tfor (; j < tmp.size(); j++)\n\t\t\t{\n\t\t\t\tif (tmp[j] == '(') {\n\t\t\t\t\t++numP[i+1][0];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == ')') {\n\t\t\t\t\t--numP[i + 1][0];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == '[') {\n\t\t\t\t\t++numP[i + 1][1];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == ']') {\n\t\t\t\t\t--numP[i + 1][1];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == '{') {\n\t\t\t\t\t++numP[i + 1][2];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == '}') {\n\t\t\t\t\t--numP[i + 1][2];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < B; ++i) {\n\t\t\tstring tmp;\n\t\t\tgetline(cin, tmp);\n\n\t\t\tnumQ[i + 1][0] = numQ[i][0];\n\t\t\tnumQ[i + 1][1] = numQ[i][1];\n\t\t\tnumQ[i + 1][2] = numQ[i][2];\n\t\t\tint j = 0;\n\t\t\tfor (; j < tmp.size(); j++)\n\t\t\t{\n\t\t\t\tif (tmp[j] == '(') {\n\t\t\t\t\t++numQ[i + 1][0];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == ')') {\n\t\t\t\t\t--numQ[i + 1][0];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == '[') {\n\t\t\t\t\t++numQ[i + 1][1];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == ']') {\n\t\t\t\t\t--numQ[i + 1][1];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == '{') {\n\t\t\t\t\t++numQ[i + 1][2];\n\t\t\t\t}\n\t\t\t\telse if (tmp[j] == '}') {\n\t\t\t\t\t--numQ[i + 1][2];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\n\t\tint res[20] = {};\n\t\tfor (int a = 0; a < 20; a++) {\n\t\t\tres[a] = -2;\n\t\t}\n\n\t\tfor (int a = 1; a <= 20; a++)\n\t\t\tfor (int b = 1; b <= 20; b++)\n\t\t\t\tfor (int c = 1; c <= 20; c++)\n\t\t{\n\t\t\tbool bok = true;\n\t\t\tfor (int i = 0; i < A; ++i) {\n\t\t\t\tint indent = numP[i][0] * a + numP[i][1] * b + numP[i][2] * c;\n\t\t\t\tbok &= (indent == indP[i]);\n\t\t\t}\n\n\t\t\tif (!bok) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\n\t\t\tfor (int i = 0; i < B; i++)\n\t\t\t{\n\t\t\t\tint indent = numQ[i][0] * a + numQ[i][1] * b + numQ[i][2] * c;\n\t\t\t\tif (res[i] == -2 || indent == res[i]) {\n\t\t\t\t\tres[i] = indent;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres[i] = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tfor (int i = 0; i < B; i++)\n\t\t{\n\t\t\tif (res[i] == -2) { res[i] = -1; }\n\t\t\tcout << res[i] << (i==B-1?'\\n': ' ');\n\t\t}\n\n\n\twhilecontinue:;\n\t}\n}\n#endif\n\n"
  },
  {
    "language": "C++",
    "code": "//Name: Stylish\n//Level: \n//Category:\n//Note:\n\n/**\n */\n#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nstruct Line {\n    int r, c, s;\n    int indent;\n    Line() : r(0), c(0), s(0), indent(0) {}\n};\n\nvector<Line> read_program(int N) {\n    vector<Line> lines(N);\n    for(int i = 0; i < N; ++i) {\n        string str;\n        getline(cin, str);\n        bool top = true;\n        for(char c : str) {\n            if(top && c == '.') ++lines[i].indent;\n            if(c != '.') top = false;\n            if(c == '(') ++lines[i].r;\n            else if(c == ')') --lines[i].r;\n            else if(c == '{') ++lines[i].c;\n            else if(c == '}') --lines[i].c;\n            else if(c == '[') ++lines[i].s;\n            else if(c == ']') --lines[i].s;\n        }\n    }\n    return lines;\n}\n\nvector<int> do_indent(int r, int c, int s, const vector<Line> &lines) {\n    static vector<int> res;\n    res.clear();\n    Line cur;\n    res.push_back(0);\n    for(const Line &l : lines) {\n        cur.r += l.r;\n        cur.c += l.c;\n        cur.s += l.s;\n        if((cur.r > 0 && r == -1)\n            || (cur.c > 0 && c == -1)\n            || (cur.s > 0 && s == -1))\n        {\n            res.push_back(-1);\n        } else {\n            res.push_back(cur.r*r + cur.c*c + cur.s*s);\n        }\n    }\n    res.pop_back();\n    return res;\n}\n\nbool solve() {\n    int P, Q;\n    cin >> P >> Q;\n    if(!P && !Q) return false;\n    cin.ignore();\n    vector<Line> original = read_program(P);\n    vector<Line> to_indent = read_program(Q);\n    vector<int> ans;\n    for(int r = 1; r <= 20; ++r) {\n        for(int c = 1; c <= 20; ++c) {\n            for(int s = 1; s <= 20; ++s) {\n                vector<int> indents = do_indent(r, c, s, original);\n                bool ok = true;\n                for(int i = 0; i < P; ++i) {\n                    if(original[i].indent != indents[i]) {\n                        ok = false;\n                        break;\n                    }\n                }\n                if(ok) {\n                    vector<int> indents = do_indent(r, c, s, to_indent);\n                    if(ans.size() == 0) {\n                        ans = indents;\n                    } else {\n                        for(int i = 0; i < Q; ++i) {\n                            if(indents[i] != ans[i]) {\n                                ans[i] = -1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    for(int i = 0; i < Q; ++i) {\n        if(i > 0) cout << \" \";\n        cout << ans[i];\n    }\n    cout << endl;\n    return true;\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(0);\n\n    while(solve()) ;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s); sin>>v; return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nbool ok(vs &P,int r,int c,int s){\n\tint or=0,oc=0,os=0;\n\tREP(lineno,P.size()){\n\t\tstring line=P[lineno];\n\t\tint num_indent=0;\n\t\tREP(chno,line.size()){\n\t\t\tif(line[chno]=='.'){\n\t\t\t\tnum_indent++;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(num_indent!=or*r+oc*c+os*s){\n\t\t\treturn false;\n\t\t}\n\t\tREP(chno,line.size()){\n\t\t\tchar c=line[chno];\n\t\t\tswitch(c){\n\t\t\tcase '(':\n\t\t\t\tor++;break;\n\t\t\tcase '{':\n\t\t\t\toc++;break;\n\t\t\tcase '[':\n\t\t\t\tos++;break;\n\t\t\tcase ')':\n\t\t\t\tor--;break;\n\t\t\tcase '}':\n\t\t\t\toc--;break;\n\t\t\tcase ']':\n\t\t\t\tos--;break;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nstruct indent{\n\tint r,c,s;\n\tindent(int r,int c,int s):r(r),c(c),s(s){}\n};\n\nint main(){\n\tint p,q;\n\twhile(cin>>p>>q,p|q){\n\t\tvs P(p);\n\t\tREP(i,p){\n\t\t\tcin>>P[i];\n\t\t}\n\t\tvs Q(q);\n\t\tREP(i,q){\n\t\t\tcin>>Q[i];\n\t\t}\n\t\tvector<indent> valid_indents;\n\t\tFOR(r,1,20+1){\n\t\t\tFOR(c,1,20+1){\n\t\t\t\tFOR(s,1,20+1){\n\t\t\t\t\tif(ok(P,r,c,s)){\n\t\t\t\t\t\tvalid_indents.push_back(indent(r,c,s));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint or=0,oc=0,os=0;\n\t\tREP(i,q){\n\t\t\tstring line=Q[i];\n\t\t\tset<int> valid_total_indents;\n\t\t\tREP(j,valid_indents.size()){\n\t\t\t\tint total_indent=0;\n\t\t\t\ttotal_indent+=or*valid_indents[j].r;\n\t\t\t\ttotal_indent+=oc*valid_indents[j].c;\n\t\t\t\ttotal_indent+=os*valid_indents[j].s;\n\t\t\t\tvalid_total_indents.insert(total_indent);\n\t\t\t}\n\t\t\tif(valid_total_indents.size()==1){\n\t\t\t\tcout<<(i==0?\"\":\" \")<<*valid_total_indents.begin();\n\t\t\t}else{\n\t\t\t\tcout<<(i==0?\"\":\" \")<<-1;\n\t\t\t}\n\t\t\tREP(k,line.size()){\n\t\t\t\tswitch(line[k]){\n\t\t\t\tcase '(':\n\t\t\t\t\tor++;break;\n\t\t\t\tcase '{':\n\t\t\t\t\toc++;break;\n\t\t\t\tcase '[':\n\t\t\t\t\tos++;break;\n\t\t\t\tcase ')':\n\t\t\t\t\tor--;break;\n\t\t\t\tcase '}':\n\t\t\t\t\toc--;break;\n\t\t\t\tcase ']':\n\t\t\t\t\tos--;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#include<assert.h>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef int Def;\ntypedef pair<Def,Def> pii;\ntypedef vector<Def> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<Def,pii> pip;\ntypedef vector<pip>vip;\n//#define mt make_tuple\n//typedef tuple<double,int,double> tp;\n//typedef vector<tp> vt;\ntemplate<typename A,typename B>bool cmin(A &a,const B &b){return a>b?(a=b,true):false;}\ntemplate<typename A,typename B>bool cmax(A &a,const B &b){return a<b?(a=b,true):false;}\nconst double PI=acos(-1);\nconst double EPS=1e-7;\nDef inf=sizeof(Def)==sizeof(long long)?2e18:1e9;\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nint MOD;\nint main(){\n\tint n,m;\n\twhile(cin>>n>>m,n){\n\t\tvvi in;\n\t\tint a=0,b=0,c=0;\n\t\trep(i,n+m){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tint t=0,d=0;\n\t\t\twhile(t<s.size()&&s[t]=='.')t++;\n\t\t\tin.pb(vi{t,a,b,c});\n\t\t\twhile(t<s.size()){\n\t\t\t\tif(s[t]=='(')a++;\n\t\t\t\tif(s[t]==')')a--;\n\t\t\t\tif(s[t]=='{')b++;\n\t\t\t\tif(s[t]=='}')b--;\n\t\t\t\tif(s[t]=='[')c++;\n\t\t\t\tif(s[t]==']')c--;\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n//\t\trep(i,n+m){rep(j,4)cout<<\" \"<<in[i][j];cout<<endl;}\n\t\tvector<set<int> >out(m);\n\t\tloop(i,1,21)loop(j,1,21)loop(k,1,21){\n\t\t\tbool h=true;\n\t\t\trep(x,n)if(i*in[x][1]+j*in[x][2]+k*in[x][3]!=in[x][0])h=false;\n\t\t\tif(h)rep(x,m)out[x].insert(i*in[n+x][1]+j*in[n+x][2]+k*in[n+x][3]);\n\t\t}\n\t\trep(i,m)if(out[i].size()==1)cout<<*(out[i].begin())<<\" \";\n\t\telse cout<<-1<<\" \";\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long   // <-----!!!!!!!!!!!!!!!!!!!\n\n#define rep(i,n) for (int i=0;i<(n);i++)\n#define rep2(i,a,b) for (int i=(a);i<(b);i++)\n#define rrep(i,n) for (int i=(n)-1;i>=0;i--)\n#define rrep2(i,a,b) for (int i=(b)-1;i>=(a);i--)\n#define all(a) (a).begin(),(a).end()\n\ntypedef long long ll;\ntypedef pair<int, int> Pii;\ntypedef tuple<int, int, int> TUPLE;\ntypedef vector<int> V;\ntypedef vector<V> VV;\ntypedef vector<VV> VVV;\ntypedef vector<vector<int>> Graph;\nconst int inf = 1e9;\nconst int mod = 1e9 + 7;\n\nint countIndentLevel(const string& s) {\n    rep(j, s.size()) {\n        if (s[j] != '.') {\n            return j;\n        }\n    }\n}\n\nint updateCnt(V& cnt, const string& s) {\n    for (const auto c : s) {\n        switch(c) {\n            case '(': cnt[0]++; break;\n            case ')': cnt[0]--; break;\n            case '{': cnt[1]++; break;\n            case '}': cnt[1]--; break;\n            case '[': cnt[2]++; break;\n            case ']': cnt[2]--; break;\n        }\n    }\n}\n\nbool checkValid(const map<V, int>& rule, int R, int C, int S) {\n    for (const auto& p : rule) {\n        V cnt;\n        int indent;\n        tie(cnt, indent) = p;\n        if (R * cnt[0] + C * cnt[1] + S * cnt[2] != indent) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvoid updateAns(V& ans, const VV& brackets, int R, int C, int S) {\n    int Q = brackets.size();\n    V temp(Q);\n    rep(i, Q) {\n        temp[i] = R * brackets[i][0] + C * brackets[i][1] + S * brackets[i][2];\n    }\n\n    if (ans.empty()) ans = temp;\n    rep(i, Q) {\n        if (ans[i] != temp[i]) ans[i] = -1;\n    }\n}\n\nvoid solve(const int P, const int Q) {\n    map<V, int> rule;\n    V cnt(3);\n    rep(i, P) {\n        string s;\n        cin >> s;\n        rule[cnt] = countIndentLevel(s);\n        updateCnt(cnt, s);\n    }\n\n    cnt.assign(3, 0);\n    VV brackets(Q, V(3));\n    rep(i, Q) {\n        brackets[i] = cnt;\n        string s;\n        cin >> s;\n        updateCnt(cnt, s);\n    }\n\n    // bool valid[21][21][21];\n    V ans;\n    rep2(R, 1, 21) {\n        rep2(C, 1, 21) {\n            rep2(S, 1, 21) {\n                // valid[R][C][S] = checkValid(rule, R, C, S);\n                if (!checkValid(rule, R, C, S)) continue;\n                updateAns(ans, brackets, R, C, S);\n            }\n        }\n    }\n\n    rep(i, ans.size()) {\n        cout << (i != 0 ? \" \" : \"\") << ans[i];\n    }\n    cout << endl;\n}\n\nsigned main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(0);\n\n    int P, Q;\n    while (cin >> P >> Q, P) {\n        solve(P, Q);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<algorithm>\n#include<set>\n#include<map>\n#include<queue>\n#include<complex>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cassert>\n\n#define rep(i,n) for(int i=0;i<(int)n;i++)\n#define all(c) (c).begin(),(c).end()\n#define mp make_pair\n#define pb push_back\n#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define dbg(x) cerr<<__LINE__<<\": \"<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf = (int)1e9;\nconst double INF = 1e12, EPS = 1e-9;\n\n//R() C{} S[]\nint n, m;\nstring in;\nint r[20], c[20], s[20], dot[20];\nbool rcs[21][21][21];\n\nint main(){\n\twhile(getline(cin, in)){\n\t\tsscanf(in.c_str(), \"%d%d\", &n, &m);\n\t\tif(n == 0) break;\n\t\tmemset(rcs, 0, sizeof(rcs));\n\t\t\n\t\tint tr = 0, tc = 0, ts = 0;\n\t\trep(i, n){\n\t\t\tgetline(cin, in);\n\t\t\tint p = 0;\n\t\t\twhile(p < in.size() && in[p] == '.') p++;\n\t\t\tr[i] = tr;\n\t\t\tc[i] = tc;\n\t\t\ts[i] = ts;\n\t\t\tdot[i] = p;\n\t\t\t\n\t\t\tfor(; p < in.size(); p++){\n\t\t\t\tif(in[p] == '(') tr++;\n\t\t\t\tif(in[p] == ')') tr--;\n\t\t\t\tif(in[p] == '{') tc++;\n\t\t\t\tif(in[p] == '}') tc--;\n\t\t\t\tif(in[p] == '[') ts++;\n\t\t\t\tif(in[p] == ']') ts--;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1; i < 21; i++) for(int j = 1; j < 21; j++) for(int k = 1; k < 21; k++){\n\t\t\tbool ok = 1;\n\t\t\trep(l, n){\n\t\t\t\tif(i * r[l] + j * c[l] + k * s[l] != dot[l]){\n\t\t\t\t\tok = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok) rcs[i][j][k] = 1;\n\t\t}\n\t\ttr = tc = ts = 0;\n\t\trep(it, m){\n\t\t\tvi res;\n\t\t\trep(i, 21) rep(j, 21) rep(k, 21) if(rcs[i][j][k]){\n\t\t\t\tint tmp = tr * i + tc * j + ts * k;\n\t\t\t\tres.pb(tmp);\n\t\t\t}\n\t\t\tsort(all(res)); res.erase(unique(all(res)), res.end());\n\t\t\tcout << (res.size() == 1 ? res[0] : -1) << (it == m - 1 ? \"\\n\" : \" \");\n\t\t\tgetline(cin, in);\n\t\t\trep(p, in.size()){\n\t\t\t\tif(in[p] == '(') tr++;\n\t\t\t\tif(in[p] == ')') tr--;\n\t\t\t\tif(in[p] == '{') tc++;\n\t\t\t\tif(in[p] == '}') tc--;\n\t\t\t\tif(in[p] == '[') ts++;\n\t\t\t\tif(in[p] == ']') ts--;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\ntypedef long long ll;\nusing namespace std;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef vector<vector<int> > Matrix;\nint p,q;\nint R,C,S;\nint squnum=0,rounum=0,curnum=0;\nint testrounum=0,testsqunum=0,testcurnum=0;\nint squind=-1,rouind=-1,curind=-1;\nint ansrouind=-1,anssquind=-1,anscurind=-1;\nint main()\n{\n  while(cin >> p >> q && p)\n    {\n      string ex[15];\n      string test[15];\n      vector<int> ans(q,-2);\n      for (int i = 0; i < p; ++i)\n\t{\n\t  cin >> ex[i];\n\t}\n      for (int i = 0; i < q; ++i)\n\t{\n\t  cin >> test[i];\n\t}\n      for (int r = 1; r <= 20; ++r)\n\t{\n\t  for (int c = 1; c <= 20; ++c)\n\t    {\n\t      for (int s = 1; s <= 20; ++s)\n\t\t{\n\t\t  rouind=-1,curind=-1,squind=-1;\n\t\t  rounum=0,curnum=0,squnum=0;\n\t\t  bool niceindent=true;\n\t\t  for (int i = 0; i < p; ++i)\n\t\t    {\n\t\t      bool notperi=false;\n\t\t      int ind=0;\n\t\t      for(int j=0;j<int(ex[i].size());j++)\n\t\t\t{\n\t\t\t  if(ex[i][j]=='.' && !notperi)\n\t\t\t    {\n\t\t\t      ind++;\n\t\t\t      continue;\n\t\t\t    }\n\t\t\t  else if(ex[i][j]!='.' && !notperi)\n\t\t\t    {\n\t\t\t      notperi=true;\n\t\t\t      int tmp=0;\n\t\t\t      if(rounum) tmp+=r*rounum;\n\t\t\t      if(curnum) tmp+=c*curnum;\n\t\t\t      if(squnum) tmp+=s*squnum;\n\t\t\t      if(tmp==ind)\n\t\t\t\t{\n\t\t\t\t  if(rounum) rouind=r;\n\t\t\t\t  if(curnum) curind=c;\n\t\t\t\t  if(squnum) squind=s;\n\t\t\t\t}\n\t\t\t      else niceindent=false;\n\t\t\t    }\n\t\t\t  if(ex[i][j]=='(')rounum++;\n\t\t\t  else if(ex[i][j]=='{')curnum++;\n\t\t\t  else if(ex[i][j]=='[')squnum++;\n\t\t\t  else if(ex[i][j]==')')rounum--;\n\t\t\t  else if(ex[i][j]==']')squnum--;\n\t\t\t}\n\t\t    }\n\t\t  if(niceindent)\n\t\t    {\n\t\t      for (int i = 0; i < q; ++i)\n\t\t\t{\n\t\t\t  bool testnotperi=false;\n\t\t\t  int testind=0;\n\t\t\t  int testtmp=0;\n\t\t\t  for(int j=0;j<int(test[i].size());j++)\n\t\t\t    {\n\t\t\t      if(test[i][j]=='.' && !testnotperi)\n\t\t\t\t{\n\t\t\t\t  testind++;\n\t\t\t\t  continue;\n\t\t\t\t}\n\t\t\t      else if(test[i][j]!='.' && !testnotperi)\n\t\t\t\t{\n\t\t\t\t  testnotperi=true;\n\t\t\t\t  testtmp=0;\n\t\t\t\t  if(testrounum && rouind!=-1) testtmp+=rouind*testrounum;\n\t\t\t\t  else if(testrounum && rouind==-1) testtmp-=10000;\n\t\t\t\t  if(testcurnum && curind!=-1) testtmp+=curind*testcurnum;\n\t\t\t\t  else if(testcurnum && curind==-1) testtmp-=10000;\n\t\t\t\t  if(testsqunum && squind!=-1) testtmp+=squind*testsqunum;\n\t\t\t\t  else if(testsqunum && squind==-1) testtmp-=10000;\n\t\t\t\t  //cout << i << ' ' << tmp << ' ' << ind <<  endl;\n\t\t\t\t  if(testtmp<0)\n\t\t\t\t    {\n\t\t\t\t      ans[i]=-1;\n\t\t\t\t    }\n\t\t\t\t  else\n\t\t\t\t    {\n\t\t\t\t      if(ans[i]==-2) ans[i]=testtmp;\n\t\t\t\t      else if(ans[i]!=testtmp) ans[i]=-1;\n\t\t\t\t    }\n\t\t\t\t  //cout << tmp << endl;\n\t\t\t\t}\n\t\t\t      if(test[i][j]=='(')testrounum++;\n\t\t\t      else if(test[i][j]=='{')testcurnum++;\n\t\t\t      else if(test[i][j]=='[')testsqunum++;\n\t\t\t      else if(test[i][j]==')')testrounum--;\n\t\t\t      else if(test[i][j]==']')testsqunum--;\n\t\t\t      else if(test[i][j]=='}')testcurnum--;\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n      for(int i=0;i<q;i++)\n\t{\n\t  cout << ans[i] << (i==q-1 ? '\\n' : ' ');\n\t}\n    }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <string>\n#include <set>\n\nbool valid(int R, int C, int S,\n           const std::vector<int>& ind, const std::vector<int>& rou,\n           const std::vector<int>& cur, const std::vector<int>& squ) {\n\n  int r = 0;\n  int c = 0;\n  int s = 0;\n\n  for (size_t i=0; i<ind.size(); ++i) {\n    if (ind[i] != R*r + C*c + S*s) return false;\n    r += rou[i];\n    c += cur[i];\n    s += squ[i];\n  }\n  return true;\n}\n\nint det(int r, int c, int s, const std::set<std::vector<int>>& sol) {\n  int x = -2;\n  for (const auto& v: sol) {\n    int R = v[0];\n    int C = v[1];\n    int S = v[2];\n    int y = R*r + C*c + S*s;\n    if (x < -1) {\n      x = y;\n    } else if (x != y) {\n      return -1;\n    }\n  }\n  return x;\n}\n\nint testcase_ends() {\n  size_t P, Q;\n  scanf(\"%zu %zu\", &P, &Q);\n\n  if (P == 0 && Q == 0) return 1;\n\n  std::vector<std::string> S(P), T(Q);\n  for (size_t i=0; i<P; ++i) {\n    char buf[96];\n    scanf(\"%s\", buf);\n    S[i] = buf;\n  }\n  for (size_t j=0; j<Q; ++j) {\n    char buf[96];\n    scanf(\"%s\", buf);\n    T[j] = buf;\n  }\n\n  std::vector<int> ind(P), rou(P), cur(P), squ(P);\n  for (size_t i=0; i<P; ++i) {\n    size_t j = 0;\n    while (S[i][j] == '.') ++j;\n    ind[i] = j;\n\n    for (; j<S[i].length(); ++j) {\n      if (S[i][j] == '(') ++rou[i];\n      if (S[i][j] == ')') --rou[i];\n      if (S[i][j] == '[') ++cur[i];\n      if (S[i][j] == ']') --cur[i];\n      if (S[i][j] == '{') ++squ[i];\n      if (S[i][j] == '}') --squ[i];\n    }\n  }\n\n  std::set<std::vector<int>> sol;\n  for (int R=1; R<=20; ++R)\n    for (int C=1; C<=20; ++C)\n      for (int S=1; S<=20; ++S)\n        if (valid(R, C, S, ind, rou, cur, squ))\n          sol.insert({R, C, S});\n\n  int r = 0;\n  int c = 0;\n  int s = 0;\n  for (size_t i=0; i<Q; ++i) {\n    printf(\"%d%c\", det(r, c, s, sol), i+1<Q? ' ':'\\n');\n\n    for (size_t j=0; j<T[i].length(); ++j) {\n      if (T[i][j] == '(') ++r;\n      if (T[i][j] == ')') --r;\n      if (T[i][j] == '[') ++c;\n      if (T[i][j] == ']') --c;\n      if (T[i][j] == '{') ++s;\n      if (T[i][j] == '}') --s;\n    }\n  }\n  \n  return 0;\n}\n\nint main() {\n  while (!testcase_ends()) {}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing T = tuple<int, int, int, int>;\n\nint main()\n{\n\tint p, q;\n\tstring s;\n\twhile (cin >> p >> q, p | q) {\n\t\tvector<int> cnt(3);\n\t\tvector<T> base;\n\t\tfor (int i = 0; i < p; i++) {\n\t\t\tcin >> s;\n\t\t\tint ind = 0;\n\t\t\twhile (ind < (int)s.size() && s[ind] == '.') ind++;\n\t\t\tbase.emplace_back(cnt[0], cnt[1], cnt[2], ind);\n\t\t\tfor (auto c : s) {\n\t\t\t\tswitch (c)\n\t\t\t\t{\n\t\t\t\tcase '(': cnt[0]++; break;\n\t\t\t\tcase ')': cnt[0]--; break;\n\t\t\t\tcase '{': cnt[1]++; break;\n\t\t\t\tcase '}': cnt[1]--; break;\n\t\t\t\tcase '[': cnt[2]++; break;\n\t\t\t\tcase ']': cnt[2]--; break;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<vector<int>> kouho;\n\t\tfor (int r = 1; r <= 20; r++) {\n\t\t\tfor (int c = 1; c <= 20; c++) {\n\t\t\t\tfor (int s = 1; s <= 20; s++) {\n\t\t\t\t\tbool ok = true;\n\t\t\t\t\tfor (auto t : base) {\n\t\t\t\t\t\tif (get<0>(t) * r + get<1>(t) * c + get<2>(t) * s != get<3>(t)) {\n\t\t\t\t\t\t\tok = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (ok) {\n\t\t\t\t\t\tkouho.push_back({ r, c, s });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcnt[0] = cnt[1] = cnt[2] = 0;\n\t\tvector<int> res(q);\n\t\tfor (int i = 0; i < q; i++) {\n\t\t\tcin >> s;\n\t\t\tvector<int> tmp;\n\t\t\tfor (auto t : kouho) {\n\t\t\t\tint x = 0;\n\t\t\t\tfor (int j = 0; j < 3; j++) {\n\t\t\t\t\tx += t[j] * cnt[j];\n\t\t\t\t}\n\t\t\t\ttmp.push_back(x);\n\t\t\t}\n\t\t\tsort(tmp.begin(), tmp.end());\n\t\t\ttmp.erase(unique(tmp.begin(), tmp.end()), tmp.end());\n\t\t\tres[i] = tmp.size() == 1 ? tmp[0] : -1;\n\t\t\tfor (auto c : s) {\n\t\t\t\tswitch (c)\n\t\t\t\t{\n\t\t\t\tcase '(': cnt[0]++; break;\n\t\t\t\tcase ')': cnt[0]--; break;\n\t\t\t\tcase '{': cnt[1]++; break;\n\t\t\t\tcase '}': cnt[1]--; break;\n\t\t\t\tcase '[': cnt[2]++; break;\n\t\t\t\tcase ']': cnt[2]--; break;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < q; i++) {\n\t\t\tcout << res[i] << \" \\n\"[i + 1 == q];\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<functional>\n#include<iomanip>\n#include<queue>\n#include<ciso646>\n#include<random>\n#include<map>\n#include<set>\n#include<complex>\nusing namespace std;\ntypedef long long ll;\nconst ll MOD = 1000000007;\nconst ll INF = (ll)1000000007 * 1000000007;\nconst double EPS = 1e-9;\ntypedef pair<int, int> P;\ntypedef unsigned int ui;\n#define stop char nyaa;cin>>nyaa;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define per(i,n) for(int i=n-1;i>=0;i--)\n#define Rep(i,sta,n) for(int i=sta;i<n;i++)\n#define rep1(i,n) for(int i=1;i<=n;i++)\n#define per1(i,n) for(int i=n;i>=1;i--)\n#define Rep1(i,sta,n) for(int i=sta;i<=n;i++)\ntypedef long double ld;\ntypedef complex<ld> Point;\nconst ld eps = 1e-8;\nconst ld pi = acos(-1.0);\nint main() {\n\tint p, q;\n\twhile (cin >> p >> q, p) {\n\t\tint cnt[3] = {};\n\t\tstring s; int a[10], b[10], c[10]; int sum[10];\n\t\trep(i, p) {\n\t\t\tcin >> s;\n\t\t\tint len = s.length();\n\t\t\tint chk = 0; bool f = true;\n\t\t\trep(j, len) {\n\t\t\t\tif (f) {\n\t\t\t\t\tif (s[j] != '.') {\n\t\t\t\t\t\tf = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tchk++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (s[j] == '(') {\n\t\t\t\t\tcnt[0]++;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == '{') {\n\t\t\t\t\tcnt[1]++;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == '[') {\n\t\t\t\t\tcnt[2]++;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == ')') {\n\t\t\t\t\tcnt[0]--;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == '}') {\n\t\t\t\t\tcnt[1]--;\n\t\t\t\t}\n\t\t\t\telse if(s[j] == ']') {\n\t\t\t\t\tcnt[2]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\ta[i] = cnt[0]; b[i] = cnt[1]; c[i] = cnt[2];\n\t\t\tif (i > 0)sum[i - 1] = chk;\n\t\t}\n\t\tvector<vector<int>> v;\n\t\tRep(i, 1, 21) {\n\t\t\tRep(j, 1, 21) {\n\t\t\t\tRep(k, 1, 21) {\n\t\t\t\t\tbool f = true;\n\t\t\t\t\trep(l, p - 1) {\n\t\t\t\t\t\tif (i*a[l] + j * b[l] + k * c[l] != sum[l]) {\n\t\t\t\t\t\t\tf = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (f) {\n\t\t\t\t\t\tv.push_back({ i,j,k });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint le = v.size();\n\t\tcnt[0] = cnt[1] = cnt[2] = 0;\n\t\tvector<int> out; out.push_back(0);\n\t\trep(i, q) {\n\t\t\tcin >> s;\n\t\t\tint len = s.length();\n\t\t\tbool f = true;\n\t\t\trep(j, len) {\n\t\t\t\tif (s[j] == '(') {\n\t\t\t\t\tcnt[0]++;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == '{') {\n\t\t\t\t\tcnt[1]++;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == '[') {\n\t\t\t\t\tcnt[2]++;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == ')') {\n\t\t\t\t\tcnt[0]--;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == '}') {\n\t\t\t\t\tcnt[1]--;\n\t\t\t\t}\n\t\t\t\telse if (s[j] == ']') {\n\t\t\t\t\tcnt[2]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i < q-1) {\n\t\t\t\tset<int> count; int check;\n\t\t\t\trep(k, le) {\n\t\t\t\t\tcount.insert(v[k][0] * cnt[0] + v[k][1] * cnt[1] + v[k][2] * cnt[2]);\n\t\t\t\t\tcheck = v[k][0] * cnt[0] + v[k][1] * cnt[1] + v[k][2] * cnt[2];\n\t\t\t\t}\n\t\t\t\tif (count.size() != 1) {\n\t\t\t\t\tout.push_back(-1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push_back(check);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i, (int)out.size()) {\n\t\t\tcout << out[i];\n\t\t\tif (i < (int)out.size() - 1) {\n\t\t\t\tcout << \" \";\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n\nint tt[256],rr[256];\nint abs(int x) { if (x < 0)return -x; return x; }\nint main() {\n\ttt['('] = 1; tt[')'] = 1;\n\ttt['{'] = 2; tt['}'] = 2;\n\ttt['['] = 3; tt[']'] = 3;\n\trr['('] = 1; rr[')'] = -1;\n\trr['{'] = 1; rr['}'] = -1;\n\trr['['] = 1; rr[']'] = -1;\n\n\twhile (1) {\n\t\tint n, m;\n\t\tint cnt1[11] = { 0, }, cnt2[11] = { 0, };\n\t\tint CX1[11][4] = { 0, }, CX2[11][4] = { 0, };\n\t\tint ans[11] = { 0, };\n\t\tint cnt[11] = { 0, };\n\t\tint i, j;\n\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tif (n == 0 && m == 0)break;\n\t\tchar x[100];\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%s\", x);\n\t\t\tbool flag = 1;\n\t\t\tfor (j = 0; x[j]; j++) {\n\t\t\t\tif (x[j] != '.')flag = 0;\n\t\t\t\tif (flag&&x[j] == '.')cnt1[i]++;\n\t\t\t\tCX1[i][tt[x[j]]] += rr[x[j]];\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < m; i++) {\n\t\t\tans[i] = -2;\n\t\t\tscanf(\"%s\", x);\n\t\t\tbool flag = 1;\n\t\t\tfor (j = 0; x[j]; j++) {\n\t\t\t\tif (x[j] != '.')flag = 0;\n\t\t\t\tif (flag&&x[j] == '.')cnt2[i]++;\n\t\t\t\tCX2[i][tt[x[j]]] += rr[x[j]];\n\t\t\t}\n\t\t}\n\t\tint r, c, s;\n\t\tfor (r = 1; r <= 20; r++) {\n\t\t\tfor (c = 1; c <= 20; c++) {\n\t\t\t\tfor (s = 1; s <= 20; s++) {\n\t\t\t\t\tint S = 0;\n\t\t\t\t\tbool flag = 1;\n\t\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\t\tif (cnt1[i] != S) {\n\t\t\t\t\t\t\tflag = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tS += CX1[i][1] * r + CX1[i][2] * c + CX1[i][3] * s;\n\t\t\t\t\t}\n\t\t\t\t\tif (!flag)continue;\n\t\t\t\t\tfor (i = 0; i < m; i++) {\n\t\t\t\t\t\tif (ans[i] == -2)ans[i] = S;\n\t\t\t\t\t\tif (ans[i] != S)ans[i] = -1;\n\t\t\t\t\t\tS += CX2[i][1] * r + CX2[i][2] * c + CX2[i][3] * s;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < m; i++) {\n\t\t\tprintf(\"%d\", ans[i]);\n\t\t\tif (i != m - 1)printf(\" \");\n\t\t}\n\t\tputs(\"\");\n\t}\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\ntypedef vector<int> V;\n\nclass Constants {\n    public:\n        int r, c, s;\n        Constants(int r=0, int c=0, int s=0) {\n            this->r = r;\n            this->c = c;\n            this->s = s;\n        }\n        Constants operator+(Constants consts) {\n            Constants retval;\n            retval.r = this->r+consts.r;\n            retval.c = this->c+consts.c;\n            retval.s = this->s+consts.s;\n            return retval;\n        }\n};\n\nclass Eq {\n    private:\n        int n;\n        Constants consts[20];\n        int indentations[20];\n    public:\n        Eq() {\n            this->n = 0;\n        }\n        void append(Constants consts, int indentation) {\n            this->consts[n] = consts;\n            this->indentations[n] = indentation;\n            n++;\n        }\n        int compute_indentation(Constants consts) {\n            int prev_indentation = -1;\n            bool has_found = false;\n            for (int r=1; r<=20; r++) {\n                for (int c=1; c<=20; c++) {\n                    for (int s=1; s<=20; s++) {\n                        bool is_valid = true;\n                        for (int i=0; i<this->n; i++) {\n                            int y =  r*this->consts[i].r\n                                    +c*this->consts[i].c\n                                    +s*this->consts[i].s;\n                            if (y != indentations[i]) {\n                                is_valid = false;\n                                break;\n                            }\n                        }\n                        if (is_valid) {\n                            int indentation = r*consts.r+c*consts.c+s*consts.s;\n                            if (has_found) {\n                                if (indentation != prev_indentation) {\n                                    return -1;\n                                }\n                            }\n                            else {\n                                prev_indentation = indentation;\n                                has_found = true;\n                            }\n                        }\n                    }\n                }\n            }\n            return prev_indentation;\n        }\n};\n\nConstants count(string s) {\n    Constants consts;\n    for (int i=0; i<(int)s.length(); i++) {\n        switch(s[i]) {\n            case '(':\n                consts.r++;\n                break;\n            case '{':\n                consts.c++;\n                break;\n            case '[':\n                consts.s++;\n                break;\n            case ')':\n                consts.r--;\n                break;\n            case '}':\n                consts.c--;\n                break;\n            case ']':\n                consts.s--;\n                break;\n        }\n    }\n    return consts;\n}\n\nV solve(int p, int q, string pstr[], string qstr[]) {\n    Constants consts = Constants();\n    Eq e;\n    V indentations;\n    for (int i=0; i<p; i++) {\n        int indentation = 0;\n        for (int j=0; j<(int)pstr[i].length(); j++) {\n            if (pstr[i][j] != '.') {\n                break;\n            }\n            indentation++;\n        }\n        e.append(consts, indentation);\n        consts = consts+count(pstr[i]);\n    }\n    consts = Constants();\n    for (int i=0; i<q; i++) {\n        indentations.push_back(e.compute_indentation(consts));\n        consts = consts+count(qstr[i]);\n    }\n    return indentations;\n}\n\nvoid output(V indentations) {\n    for (int i=0; i<(int)indentations.size(); i++) {\n        cout << indentations[i];\n        if (i < (int)indentations.size()-1) {\n            cout << ' ';\n        }\n        else {\n            cout << endl;\n        }\n    }\n}\n\nint main() {\n    int p, q;\n    string pstr[10], qstr[10];\n    while (true) {\n        cin >> p >> q;\n        if (p == 0) {\n            return 0;\n        }\n        for (int i=0; i<p; i++) {\n            cin >> pstr[i];\n        }\n        for (int i=0; i<q; i++) {\n            cin >> qstr[i];\n        }\n        output(solve(p, q, pstr, qstr));\n    }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAXSIZE 80\n\nint main() {\n  int i, j = 0, p, q, numr = 0, numc = 0, nums = 0, indent_r = -1, indent_c = -1, indent_s = -1, indentline[9], piriod = 0, count = 0,\n      ro = 0, co = 0, so = 0, indent_rc = -1, indent_rs = -1, indent_cs = -1, indent_rcs = -1, rer_rcs = 0, rec_rcs = 0, res_rcs = 0,\n      rer_rc = 0, rer_rs = 0, rec_rc = 0, rec_cs = 0, res_rs = 0, res_cs = 0;\n  char str[MAXSIZE];\n\n  while(1){\n    numr = 0; numc = 0; nums = 0; indent_r = -1; indent_c = -1; indent_s = -1; indentline[9]; piriod = 0; count = 0;\n    ro = 0; co = 0; so = 0; indent_rc = -1; indent_rs = -1; indent_cs = -1; indent_rcs = -1; rer_rcs = 0; rec_rcs = 0; res_rcs = 0;\n    rer_rc = 0; rer_rs = 0; rec_rc = 0; rec_cs = 0; res_rs = 0; res_cs = 0; j = 0;\n    scanf(\"%d %d\", &p, &q);  //p,qの入力\n    if(p == 0 && q == 0)\n      return 0;\n    while(1){\n      if(count == p)\n        break;\n      piriod = 0;\n      scanf(\"%s\", str);  //p行分の入力\n      for(i = 0; str[i] != '\\0'; i++){\n        switch (str[i]) {\n          case '(':\n            //fr = 1;\n            numr++;\n            break;\n          case '{':\n            //fc = 1;\n            numc++;\n            break;\n          case '[':\n            //fs = 1;\n            nums++;\n            break;\n          case ')':\n            numr--;\n            break;\n          case '}':\n            numc--;\n            break;\n          case ']':\n            nums--;\n            break;\n          case '.':\n            if(!i){\n              for(; str[i] == '.'; i++)\n                piriod++;\n              i--;\n              if(numr > 0 && indent_r == -1){\n                if(numc == 0 && nums == 0){\n                  indent_r = piriod / numr;\n                }\n                else if(numc > 0 && nums > 0 && indent_c != -1 && indent_s != -1)\n                  indent_r = (piriod - (indent_c * numc + indent_s * nums)) / numr;\n                else if(numc > 0 && indent_c != -1)\n                  indent_r = (piriod - indent_c * numc) / numr;\n                else if(nums > 0 && indent_s != -1)\n                  indent_r = (piriod - indent_s * nums) / numr;\n                else{}\n              }\n              if(numc > 0 && indent_c == -1){\n                if(numr == 0 && nums == 0){\n                  indent_c = piriod / numc;\n                }\n                else if(numr > 0 && nums > 0 && indent_r != -1 && indent_s != -1)\n                  indent_c = (piriod - (indent_r * numr + indent_s * nums)) / numc;\n                else if(numr > 0 && indent_r != -1)\n                  indent_c = (piriod - indent_r * numr) / numc;\n                else if(nums > 0 && indent_s != -1)\n                  indent_c = (piriod - indent_s * nums) / numc;\n                else{}\n              }\n              if (nums > 0 && indent_s == -1) {\n                if(numr == 0 && numc == 0){\n                  indent_s = piriod / nums;\n                }\n                else if(numr > 0 && numc> 0 && indent_r != -1 && indent_c != -1)\n                  indent_s = (piriod - (indent_r * numr + indent_c * numc)) / nums;\n                else if(numr > 0 && indent_r != -1)\n                  indent_s = (piriod - indent_r * numr) / nums;\n                else if(numc > 0 && indent_c != -1)\n                  indent_s = (piriod - indent_c * numc) / nums;\n                else{}\n              }\n              if(numr > 0 && numc > 0 && nums > 0 && indent_r == -1 && indent_c == -1 && indent_s == -1){\n                if(piriod == numr + numc + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 60 == 0){\n                  indent_r = 20; indent_c = 20; indent_s = 20;\n                }\n                else{\n                  indent_rcs = piriod; rer_rcs = numr; rec_rcs = numc; res_rcs = nums;\n                }\n              }\n              else if(numr > 0 && numc > 0 && indent_r == -1 && indent_c == -1){\n                if(piriod == numr + numc){\n                  indent_r = 1; indent_c = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_c = 20;\n                }\n                else{\n                  indent_rc = piriod; rer_rc = numr; rec_rc = numc;\n                }\n              }\n              else if(numr > 0 && nums > 0 && indent_r == -1 && indent_s == -1){\n                if(piriod == numr + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_s = 20;\n                }\n                else{\n                  indent_rs = piriod; rer_rs = numr; res_rs = nums;\n                }\n              }\n              else if(numc > 0 && nums > 0 && indent_c == -1 && indent_s == -1){\n                if(piriod == numc + nums){\n                  indent_c = 1; indent_s = 1;\n                }\n                if(piriod % 40 == 0){\n                  indent_s = 20; indent_c = 20;\n                }\n                else{\n                  indent_cs = piriod; rec_cs = numc; res_cs = nums;\n                }\n              }\n            }\n            break;\n        }\n      }\n      //printf(\"%d\\n\", piriod);\n      //printf(\"%d %d %d\\n\", numr, numc, nums);\n      //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n      count++;\n    }\n    //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n    count = 0;\n    while(1){\n      if(count == q)\n        break;\n      scanf(\"%s\", str);  //q行分の入力\n      if((indent_r == -1 && ro > 0) || (indent_c == -1 && co > 0) || (indent_s == -1 && so > 0)){\n        if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n           && (rer_rcs % ro == 0 || ro % rer_rcs == 0) && (rec_rcs % co == 0 || co % rec_rcs == 0)\n           && (res_rcs % so == 0 || so % res_rcs == 0)){\n          if(ro > rer_rcs)\n            indentline[j] = indent_rcs * (ro / rer_rcs);\n          else\n            indentline[j] = indent_rcs / (rer_rcs / ro);\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (rer_rc % ro == 0 || ro % rer_rc == 0)\n                && (rec_rc % co == 0 || co % rec_rc == 0)){\n          if(ro > rer_rc)\n            indentline[j] = indent_rc * (ro / rer_rc);\n          else\n            indentline[j] = indent_rc / (rer_rc / ro);\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_s == -1 && so > 0) && (rer_rs % ro == 0 || ro % rer_rs == 0)\n                && (res_rs % so == 0 || so % res_rs == 0)){\n          if(ro > rer_rs)\n            indentline[j] = indent_rs * (ro / rer_rs);\n          else\n            indentline[j] = indent_rs / (rer_rs / ro);\n        }\n        else if((indent_c == -1 && co > 0) && (indent_s == -1 && so > 0) && (rec_cs % co == 0 || co % rec_cs == 0)\n                && (res_cs % so == 0 || so % res_cs == 0)){\n          if(co > rec_cs)\n            indentline[j] = indent_cs * (co / rec_cs);\n          else\n            indentline[j] = indent_cs / (rec_cs / co);\n        }\n        else\n          indentline[j] = -1;\n      }\n      else\n        indentline[j] = indent_r * ro + indent_c * co + indent_s * so;\n      for(i = 0; str[i]; i++){\n        switch (str[i]) {\n          case '(':\n            ro++;\n            break;\n          case '{':\n            co++;\n            break;\n          case '[':\n            so++;\n            break;\n          case ')':\n            ro--;\n            break;\n          case '}':\n            co--;\n            break;\n          case ']':\n            so--;\n            break;\n        }\n      }\n      count++;\n      j++;\n    }\n    for(j = 0; j < q; j++)\n      printf(\"%d \", indentline[j]);\n    printf(\"\\n\");\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "// AOJ 1326: Stylish\n// 2018/1/21\n\n#include <stdio.h>\n#include <string.h>\n\n#define INF 100\n\ntypedef struct { int r, c, s, i; } T;\t// i: indent\nT ptbl[11], *pend;\nT qtbl[11], *qend;\n\nint ind[11];\nchar p[11][85];\nchar q[11][85];\n\nint in()\n{\n\tint n = 0;\n\tint c = getchar();\n\tdo n = (n<<3)+(n<<1) + (c & 0xf), c = getchar();\n\twhile (c >= '0');\n\treturn n;\n}\n\nvoid calc()\n{\n\tint R, C, S, i, k, r, c, s;\n\tchar *pt;\n\tT *t;\n\n\tr = c = s = 0;\n\ti = 0; for (t = ptbl; t < pend; t++) {\n\t\tpt = p[i++], k = 0; while (*pt == '.') pt++, k++;\n\t\tt->r = r, t->c = c, t->s = s, t->i = k;\n\n\t\twhile (*pt > ' ') {\n\t\t\tif      (*pt == '(') r++;\n\t\t\telse if (*pt == ')') r--;\n\t\t\telse if (*pt == '{') c++;\n\t\t\telse if (*pt == '}') c--;\n\t\t\telse if (*pt == '[') s++;\n\t\t\telse if (*pt == ']') s--;\n\t\t\tpt++;\n\t\t}\n\t}\n\n\tr = c = s = 0;\n\ti = 0; for (t = qtbl; t < qend; t++) {\n\t\tt->r = r, t->c = c, t->s = s;\n\t\tpt = q[i++]; while (*pt > ' ') {\n\t\t\tif      (*pt == '(') r++;\n\t\t\telse if (*pt == ')') r--;\n\t\t\telse if (*pt == '{') c++;\n\t\t\telse if (*pt == '}') c--;\n\t\t\telse if (*pt == '[') s++;\n\t\t\telse if (*pt == ']') s--;\n\t\t\tpt++;\n\t\t}\n\t}\n\n\tfor (R = 1; R <= 20; R++) for (C = 1; C <= 20; C++) for (S = 1; S <= 20; S++) {\n\t\tfor (t = ptbl; t < pend; t++) {\n\t\t\tif (R * t->r + C * t->c + S * t->s != t->i) goto next;\n\t\t}\n\n\t\tfor (i = 0, t = qtbl; t < qend; t++, i++) {\n\t\t\tif (ind[i] == -1) continue;\n\t\t\tk = R * t->r + C * t->c + S * t->s;\n\t\t\tif      (ind[i] == INF) ind[i] = k;\n\t\t\telse if (ind[i] != k  ) ind[i] = -1;\n\t\t}\nnext:;\n\t}\n}\n\nint main()\n{\n\tint P, Q, i;\n\n\twhile (P = in()) {\n\t\tQ = in();\n\t\tpend = ptbl+P, qend = qtbl+Q;\n\t\tfor (i = 0; i < P; i++) fgets(p[i], 85, stdin);\n\t\tfor (i = 0; i < Q; i++) fgets(q[i], 85, stdin);\n\n\t\tfor (i = 0; i < Q; i++) ind[i] = INF;\n\t\tcalc();\n\t\tprintf(\"0\"); for (i = 1; i < Q; i++) printf(\" %d\", ind[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;  //括弧のインデントの組の個数\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\n//p: 括弧の配列,インデントの配列の作成  q: 括弧の配列の作成\nvoid  Check_b(char st[10][90], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;  //閉じられていない括弧数を代入する\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){  //インデントがあったら、インデント数を数える\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    indent_p[i] = piriod++;  //p: 各行のインデント数を代入\n  }\n}\n\n//pにおいて、各行に対するインデント数の組を求める\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;  //式を満たすインデントの組\n  int res, f, k = 0;  //計算結果、フラグ、カウンタフラグ\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){  //行ごとに計算\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){  //1行でも一致してなかったらスルー\n        f = 0;\n        break;\n      }\n    }\n    if(f){  //すべて一致したら、そのインデントの組を覚えておく\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  return oks;\n}\n\n//qにおいて、各行に対するインデント数を求める\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)  //インデントの組が１つのとき\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){  //その行に対するインデント数が一意でなければ不定値にする\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)  //その行に対するインデント数が一意に決まるとき\n      indent_q[i] = res;\n  }\n}\n\n//インデントの組をすべて保持する\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\n//メイン関数\nint main (){\n  char p[10][90], q[10][90], st[90];  //入力文字列\n  bst_t all, oks;  //すべてのインデント数の組、式を満たしたインデントの組\n  int ans[10];  //qにおけるそれぞれの行に対するインデント数\n  int i, j;  //カウンタ変数\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d%d\", &pin, &qin);\n    if(pin == 0 && qin == 0)  //0 0でプログラム終了\n      return 0;\n    n = 0;\n    //p行分の入力\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    Check_b(p, pin, p_b);  //pにおける括弧の配列,インデントの配列の作成\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    //q行分の入力\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);  //qにおける括弧の配列の作成\n    Indent(q_b, &oks, qin);  //各行に対するインデント数を求める\n    //qにおける各行に対するインデント数の表示\n    for( i = 0; i < qin - 1; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"%d\\n\", indent_q[i]);\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\nvoid  Check_b(char st[10][90], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    //printf(\"%d %d %d\\n\", numr, numc, nums);\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    //printf(\"%d\\n\", piriod);\n    indent_p[i] = piriod++;\n  }\n}\n\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;\n  int res, f, k = 0;\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){\n        f = 0;\n        break;\n      }\n    }\n    if(f){\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  //for(int i = 0; i < n; i++)\n    //printf(\"%d %d %d\\n\", oks.b[i].r, oks.b[i].c, oks.b[i].s);\n  return oks;\n}\n\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)\n      indent_q[i] = res;\n  }\n}\n\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\nint main (){\n  char p[10][90], q[10][90], st[90];  //入力文字列\n  bst_t all, oks;\n  int ans[10];\n  int i, j;\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d %d\", &pin, &qin);\n    if(pin == 0 && qin == 0)\n      return 0;\n    n = 0;\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    //printf(\"%d %d %d\\n\", all.b[1].r, all.b[1].c, all.b[1].s);\n    Check_b(p, pin, p_b);\n   /*for(int i = 0; i < pin; i++){\n      for(int j = 0; j < 3; j++)\n        printf(\"%d \", p_b[i][j]);\n      printf(\"\\n\");\n    }\n    printf(\"\\n\"); */\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);\n  /* for(int i = 0; i < qin; i++){\n      for(int j = 0; j < 3; j++)\n        printf(\"%d \", q_b[i][j]);\n      printf(\"\\n\");\n    }\n    printf(\"\\n\"); */\n    Indent(q_b, &oks, qin);\n    for( i = 0; i < qin; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"\\n\");\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>  \n#include <string.h>  \n#include <stdlib.h>  \n  \nint isvalid(int r,int c,int s,int data[][3],int indent[],int p);  \nint calc(int count[],int cand[]);  \n  \nint main(void){  \n      \n    int p,q;  \n      \n    //1行に入力する文字列を収納する配列。  \n    char data[81],data2[81];  \n    //各かっこを数える配列、インデントを収納する配列などを用意する。  \n    int datacount[3],datacountrecord[1000][3], datacount2[3],datacountrecord2[1000][3],ans[100][1000],Q[100],*indent,i,j,length,length2,r,c,s,cand[3],cand2[3],value1,value2,Num,first,*isNA;  \n      \n    Num = 0;  \n      \n    //配列ansを初期化しておく。  \n    for(i=0;i<100;i++){  \n        for(j=0;j<1000;j++){  \n            ans[i][j] = 0;  \n        }  \n    }  \n      \n    //00が入力されるまで繰り替えす。  \n    while(1){  \n          \n        //まず、ルールを読み取る範囲とそれを活用する範囲を指定する。  \n        scanf(\"%d%d\",&p,&q);  \n          \n        //Qにqを記録しておく。  \n        Q[Num] = q;  \n          \n        //もし00と入力された場合、breakする。  \n        if(p==0 && q==0){  \n            break;  \n        }  \n          \n        //ここで各配列を初期化しておく。  \n        indent=malloc(p*sizeof(int));  \n        for(i=0;i<p;i++){  \n            indent[i] = 0;  \n        }  \n        for(i=0;i<3;i++){  \n            datacount[i] = 0;  \n        }  \n        for(i=0;i<1000;i++){  \n            for(j=0;j<3;j++){  \n                datacountrecord[i][j] = 0;  \n            }  \n        }  \n          \n          \n        for(i=0;i<p+1;i++){  \n              \n            gets(data);  \n            length = strlen(data);  \n              \n            //もし先頭が.の場合、.の数をindentに代入  \n            for(j=0;j<length;j++){  \n                if(data[j] != '.'){  \n                    break;  \n                }  \n                indent[i-1]++;  \n            }  \n              \n            datacountrecord[i-1][0] = datacount[0];  \n            datacountrecord[i-1][1] = datacount[1];  \n            datacountrecord[i-1][2] = datacount[2];  \n              \n            //括弧始めの場合は加算、括弧終わりの場合は減算する。  \n            for(j=0;j<length;j++){  \n                  \n                if(data[j] == '('){  \n                    datacount[0]++;  \n                }  \n                if(data[j] == ')'){  \n                    datacount[0]--;  \n                }  \n                if(data[j] == '{'){  \n                    datacount[1]++;  \n                }  \n                if(data[j] == '}'){  \n                    datacount[1]--;  \n                }  \n                if(data[j] == '['){  \n                    datacount[2]++;  \n                }  \n                if(data[j] == ']'){  \n                    datacount[2]--;  \n                }  \n                  \n            }  \n              \n        }  \n          \n        //実行部に移るため、ここでまた各配列を初期化しておく。  \n        for(i=0;i<3;i++){  \n            datacount2[i] = 0;  \n        }  \n        for(i=0;i<1000;i++){  \n            for(j=0;j<3;j++){  \n                datacountrecord2[i][j] = 0;  \n            }  \n        }  \n          \n        for(i=0;i<q;i++){  \n              \n            gets(data2);  \n            length2 = strlen(data2);  \n              \n            //実行部における各行の括弧の数を数える。  \n            datacountrecord2[i][0] = datacount2[0];  \n            datacountrecord2[i][1] = datacount2[1];  \n            datacountrecord2[i][2] = datacount2[2];  \n              \n            for(j=0;j<length2;j++){  \n                if(data2[j] == '('){  \n                    datacount2[0]++;  \n                }  \n                if(data2[j] == ')'){  \n                    datacount2[0]--;  \n                }  \n                if(data2[j] == '{'){  \n                    datacount2[1]++;  \n                }  \n                if(data2[j] == '}'){  \n                    datacount2[1]--;  \n                }  \n                if(data2[j] == '['){  \n                    datacount2[2]++;  \n                }  \n                if(data2[j] == ']'){  \n                    datacount2[2]--;  \n                }  \n                  \n            }  \n              \n            for(i=0;i<3;i++){  \n                cand[i] = 0;  \n            }  \n              \n            first = 1;  \n            isNA = malloc(q*sizeof(int));  \n            for(i=0;i<q;i++){  \n                *(isNA+i) = 0;  \n            }  \n              \n            //r,c,sのあらゆる組み合わせを試していく。  \n            for(r=1;r<=20;r++){  \n                for(c=1;c<=20;c++){  \n                    for(s=1;s<=20;s++){  \n                        if(isvalid(r,c,s,datacountrecord,indent,p)==1){  \n                            if(first == 1){  \n                                first = 0;  \n                                cand[0] = r;  \n                                cand[1] = c;  \n                                cand[2] = s;  \n                            }else{  \n                                cand2[0] = r;  \n                                cand2[1] = c;  \n                                cand2[2] = s;  \n                                for(i=0;i<q;i++){  \n                                    if(isNA[i] == 1){  \n                                        continue;  \n                                    }  \n                                    value1 = calc(datacountrecord2[i],cand);  \n                                    value2 = calc(datacountrecord2[i],cand2);  \n                                    if(value1 != value2){  \n                                        isNA[i] = 1;  \n                                    }  \n                                }  \n                            }  \n                        }  \n                    }  \n                }  \n            }  \n              \n            //後に答えとして出力するため、インデントの数をansに収納します。  \n            for(i=0;i<q;i++){  \n                //特定できない場合は時は-1。  \n                if(isNA[i] == 1){  \n                    ans[Num][i] = -1;  \n                }else{  \n                    value1 = calc(datacountrecord2[i],cand);  \n                }  \n                ans[Num][i] = value1;  \n            }  \n        }  \n          \n        //Numをプラスします。  \n        Num++;  \n          \n        //解放するのを忘れずに。  \n        free(indent);  \n        free(isNA);  \n          \n    }  \n      \n    //結果を出力する。  \n    for(i=0;i<Num;i++){  \n        printf(\"0\");  \n        for(j=1;j<Q[i];j++){  \n            printf(\" %d\",ans[i][j]);  \n        }  \n        printf(\"\\n\");  \n    }  \n      \n    return 0;  \n      \n}  \n  \n//インデントを求める関数。  \nint calc(int count[],int cand[]){  \n      \n    int i,sum;  \n      \n    sum = 0;  \n      \n    for(i=0;i<3;i++){  \n        if(count[i]>0 && cand[i]<=0){  \n            return -1;  \n        }  \n        sum = sum + (count[i] * cand[i]);  \n    }  \n      \n    return sum;  \n      \n}  \n  \n//インデントの正否を判定する関数。  \nint isvalid(int r,int c,int s,int data[][3],int indent[],int p){  \n      \n    int i;  \n      \n    for(i=0;i<p;i++){  \n        if(indent[i] == (r*data[i][0]+c*data[i][1]+s*data[i][2])){ }  \n        else{  \n            return 0;  \n        }  \n    }  \n      \n    return 1;  \n      \n}  "
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\nint P,Q,cp[15][9],cq[15][9],T[11][5],i,j,k,f,R,C,S,cR,cC,cS,ch;\nchar t,a[]=\"(){}[]\";\n\nvoid in(int N,int I[15][9])\n{\n\tfor(i=0;i<N;i++)\n\t{\n\t\tfor(f=1;(t=getchar())!=10;)\n\t\t{\n\t\t\tif(t!='.')f=0;\n\t\t\tif(f)I[i][0]++;\n\t\t\tfor(k=0;k<6;k++)\n\t\t\t\tif(t==a[k])\n\t\t\t\t\tI[i][k+1]++;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%d%d\\n\",&P,&Q),P;)\n\t{\n\t\tmemset(T,-1,sizeof(T));\n\t\tmemset(cp,0,sizeof(cp));\n\t\tmemset(cq,0,sizeof(cq));\n\t\tin(P,cp);in(Q,cq);\n\t\tcR=cp[0][1]-cp[0][2];\n\t\tcC=cp[0][3]-cp[0][4];\n\t\tcS=cp[0][5]-cp[0][6];\n\t\tfor(ch=1;ch<P;ch++)\n\t\t{\n\t\t\tT[ch-1][0]=cR;\n\t\t\tT[ch-1][1]=cC;\n\t\t\tT[ch-1][2]=cS;\n\t\t\tT[ch-1][3]=cp[ch][0];\n\t\t\tcR+=cp[ch][1]-cp[ch][2];\n\t\t\tcC+=cp[ch][3]-cp[ch][4];\n\t\t\tcS+=cp[ch][5]-cp[ch][6];\n\t\t}\n\t\tR=C=S=-1;\n\t\tfor(i=1;i<=20;i++)\n\t\t\tfor(j=1;j<=20;j++)\n\t\t\t\tfor(k=1;k<=20;k++)\n\t\t\t\t{\n\t\t\t\t\tcR=cp[0][1]-cp[0][2];\n\t\t\t\t\tcC=cp[0][3]-cp[0][4];\n\t\t\t\t\tcS=cp[0][5]-cp[0][6];\n\t\t\t\t\tfor(ch=1;ch<P;ch++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(i*cR+j*cC+k*cS!=cp[ch][0])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcR+=cp[ch][1]-cp[ch][2];\n\t\t\t\t\t\tcC+=cp[ch][3]-cp[ch][4];\n\t\t\t\t\t\tcS+=cp[ch][5]-cp[ch][6];\n\t\t\t\t\t}\n\t\t\t\t\tif(ch==P)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(R==-1&&C==-1&&S==-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=i;C=j;S=k;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=C=S=-1;\n\t\t\t\t\t\t\tgoto e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\ne:;\n\n\t\tcR=cq[0][1]-cq[0][2];\n\t\tcC=cq[0][3]-cq[0][4];\n\t\tcS=cq[0][5]-cq[0][6];\n\t\tfor(printf(\"0%s\",Q==1?\"\\n\":\" \"),i=1;i<Q;i++)\n\t\t{\n\t\t\tfor(j=0;j<P;j++)\n\t\t\t\tif(cR==T[j][0]&&cC==T[j][1]&&cS==T[j][2])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d%s\",T[j][3],i==Q-1?\"\\n\":\" \");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(j==P)\n\t\t\t{\n\t\t\t\tif((cR&&R==-1)||(cC&&C==-1)||(cS&&S==-1))\n\t\t\t\t\tprintf(\"-1%s\",i==Q-1?\"\\n\":\" \");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%d%s\",cR*R+cC*C+cS*S,i==Q-1?\"\\n\":\" \");\n\t\t\t}\n\t\t\tcR+=cq[i][1]-cq[i][2];\n\t\t\tcC+=cq[i][3]-cq[i][4];\n\t\t\tcS+=cq[i][5]-cq[i][6];\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\nint P,Q,cp[11][8],cq[11][8],i,j,k,f,T[21][21][21],R,C,S;\nchar t,a[]=\"(){}[]\";\n\nvoid in(int N,int I[11][8])\n{\n\tfor(i=0;i<N;i++)\n\t{\n\t\tfor(f=1;(t=getchar())!=10;)\n\t\t{\n\t\t\tif(t!='.')f=0;\n\t\t\tif(f)I[i][0]++;\n\t\t\tfor(k=0;k<6;k++)\n\t\t\t\tif(t==a[k])\n\t\t\t\t\tI[i][k+1]++;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%d%d\\n\",&P,&Q),P;)\n\t{\n\t\tmemset(T,-1,sizeof(T));\n\t\tmemset(cp,0,sizeof(cp));\n\t\tmemset(cq,0,sizeof(cq));\n\t\tin(P,cp);in(Q,cq);\n\t\tR=C=S=-1;\n\t\tfor(i=1;i<=20;i++)\n\t\t\tfor(j=1;j<=20;j++)\n\t\t\t\tfor(k=1;k<=20;k++)\n\t\t\t\t{\n\t\t\t\t\tint cR=cp[0][1]-cp[0][2];\n\t\t\t\t\tint cC=cp[0][3]-cp[0][4];\n\t\t\t\t\tint cS=cp[0][5]-cp[0][6];\n\t\t\t\t\tint ch;\n\t\t\t\t\tfor(ch=1;ch<P;ch++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(i*cR+j*cC+k*cS!=cp[ch][0])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tT[cR][cC][cS]=cp[ch][0];\n\t\t\t\t\t\tcR+=cp[ch][1]-cp[ch][2];\n\t\t\t\t\t\tcC+=cp[ch][3]-cp[ch][4];\n\t\t\t\t\t\tcS+=cp[ch][5]-cp[ch][6];\n\t\t\t\t\t}\n\t\t\t\t\tif(ch==P)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(R==-1&&C==-1&&S==-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=i;C=j;S=k;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=C=S=-1;\n\t\t\t\t\t\t\tgoto e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\ne:;\n\n\t\tint cR=cq[0][1]-cq[0][2];\n\t\tint cC=cq[0][3]-cq[0][4];\n\t\tint cS=cq[0][5]-cq[0][6];\n\t\tfor(printf(\"0%s\",Q==1?\"\\n\":\" \"),i=1;i<Q;i++)\n\t\t{\n\t\t\tif(T[cR][cC][cS]!=-1)\n\t\t\t\tprintf(\"%d%s\",T[cR][cC][cS],i==Q-1?\"\\n\":\" \");\n\t\t\telse if((cR&&R==-1)||(cC&&C==-1)||(cS&&S==-1))\n\t\t\t\tprintf(\"-1%s\",i==Q-1?\"\\n\":\" \");\n\t\t\telse\n\t\t\t\tprintf(\"%d%s\",cR*R+cC*C+cS*S,i==Q-1?\"\\n\":\" \");\n\t\t\tcR+=cq[i][1]-cq[i][2];\n\t\t\tcC+=cq[i][3]-cq[i][4];\n\t\t\tcS+=cq[i][5]-cq[i][6];\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAXSIZE 80\n\nint main() {\n  int i, j = 0, p, q, numr = 0, numc = 0, nums = 0, indent_r = -1, indent_c = -1, indent_s = -1, indentline[10], piriod = 0, count = 0,\n      ro = 0, co = 0, so = 0, indent_rc = -1, indent_rs = -1, indent_cs = -1, indent_rcs = -1, rer_rcs = 0, rec_rcs = 0, res_rcs = 0,\n      rer_rc = 0, rer_rs = 0, rec_rc = 0, rec_cs = 0, res_rs = 0, res_cs = 0;\n  char str[MAXSIZE];\n\n  while(1){\n    numr = 0; numc = 0; nums = 0; indent_r = -1; indent_c = -1; indent_s = -1; indentline[9]; piriod = 0; count = 0;\n    ro = 0; co = 0; so = 0; indent_rc = -1; indent_rs = -1; indent_cs = -1; indent_rcs = -1; rer_rcs = 0; rec_rcs = 0; res_rcs = 0;\n    rer_rc = 0; rer_rs = 0; rec_rc = 0; rec_cs = 0; res_rs = 0; res_cs = 0; j = 0;\n    scanf(\"%d %d\", &p, &q);  //p,qの入力\n    if(p == 0 && q == 0)\n      return 0;\n    while(1){\n      if(count == p)\n        break;\n      piriod = 0;\n      scanf(\"%s\", str);  //p行分の入力\n      for(i = 0; str[i] != '\\0'; i++){\n        switch (str[i]) {\n          case '(':\n            //fr = 1;\n            numr++;\n            break;\n          case '{':\n            //fc = 1;\n            numc++;\n            break;\n          case '[':\n            //fs = 1;\n            nums++;\n            break;\n          case ')':\n            numr--;\n            break;\n          case '}':\n            numc--;\n            break;\n          case ']':\n            nums--;\n            break;\n          case '.':\n            if(!i){\n              for(; str[i] == '.'; i++)\n                piriod++;\n              i--;\n              if(numr > 0 && indent_r == -1){\n                if(numc == 0 && nums == 0){\n                  indent_r = piriod / numr;\n                }\n                else if(numc > 0 && nums > 0 && indent_c != -1 && indent_s != -1)\n                  indent_r = (piriod - (indent_c * numc + indent_s * nums)) / numr;\n                else if(numc > 0 && indent_c != -1)\n                  indent_r = (piriod - indent_c * numc) / numr;\n                else if(nums > 0 && indent_s != -1)\n                  indent_r = (piriod - indent_s * nums) / numr;\n                else{}\n              }\n              if(numc > 0 && indent_c == -1){\n                if(numr == 0 && nums == 0){\n                  indent_c = piriod / numc;\n                }\n                else if(numr > 0 && nums > 0 && indent_r != -1 && indent_s != -1)\n                  indent_c = (piriod - (indent_r * numr + indent_s * nums)) / numc;\n                else if(numr > 0 && indent_r != -1)\n                  indent_c = (piriod - indent_r * numr) / numc;\n                else if(nums > 0 && indent_s != -1)\n                  indent_c = (piriod - indent_s * nums) / numc;\n                else{}\n              }\n              if (nums > 0 && indent_s == -1) {\n                if(numr == 0 && numc == 0){\n                  indent_s = piriod / nums;\n                }\n                else if(numr > 0 && numc> 0 && indent_r != -1 && indent_c != -1)\n                  indent_s = (piriod - (indent_r * numr + indent_c * numc)) / nums;\n                else if(numr > 0 && indent_r != -1)\n                  indent_s = (piriod - indent_r * numr) / nums;\n                else if(numc > 0 && indent_c != -1)\n                  indent_s = (piriod - indent_c * numc) / nums;\n                else{}\n              }\n              if(numr > 0 && numc > 0 && nums > 0 && indent_r == -1 && indent_c == -1 && indent_s == -1){\n                if(piriod == numr + numc + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 60 == 0){\n                  indent_r = 20; indent_c = 20; indent_s = 20;\n                }\n                else{\n                  indent_rcs = piriod; rer_rcs = numr; rec_rcs = numc; res_rcs = nums;\n                }\n              }\n              else if(numr > 0 && numc > 0 && indent_r == -1 && indent_c == -1){\n                if(piriod == numr + numc){\n                  indent_r = 1; indent_c = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_c = 20;\n                }\n                else{\n                  indent_rc = piriod; rer_rc = numr; rec_rc = numc;\n                }\n              }\n              else if(numr > 0 && nums > 0 && indent_r == -1 && indent_s == -1){\n                if(piriod == numr + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_s = 20;\n                }\n                else{\n                  indent_rs = piriod; rer_rs = numr; res_rs = nums;\n                }\n              }\n              else if(numc > 0 && nums > 0 && indent_c == -1 && indent_s == -1){\n                if(piriod == numc + nums){\n                  indent_c = 1; indent_s = 1;\n                }\n                if(piriod % 40 == 0){\n                  indent_s = 20; indent_c = 20;\n                }\n                else{\n                  indent_cs = piriod; rec_cs = numc; res_cs = nums;\n                }\n              }\n            }\n            break;\n        }\n      }\n      //printf(\"%d\\n\", piriod);\n      //printf(\"%d %d %d\\n\", numr, numc, nums);\n      //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n      count++;\n    }\n    //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n    count = 0;\n    while(1){\n      if(count == q)\n        break;\n      //printf(\"%d %d %d\\n\", ro, co, so);\n      scanf(\"%s\", str);  //q行分の入力\n      if((indent_r > 20 && ro > 0) || (indent_c > 20 && co > 0) || (indent_s > 20 && so > 0))\n        indentline[j] = -1;\n      else if((indent_r == -1 && ro > 0) || (indent_c == -1 && co > 0) || (indent_s == -1 && so > 0)){\n        if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n           && rer_rcs && rec_rcs && res_rcs){\n          if((ro >= rer_rcs) && (co >= rec_rcs) && (so >= res_rcs)){\n            if((ro / rer_rcs) == (co / rec_rcs) == (so / res_rcs))\n              indentline[j] = indent_rcs * (ro / rer_rcs);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rcs) && (co < rec_rcs) && (so < res_rcs)){\n            if((rer_rcs / ro) == (rec_rcs / co) == (res_rcs / so))\n              indentline[j] = indent_rcs / (rer_rcs / ro);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && rer_rc && rec_rc){\n          if(ro >= rer_rc && co >= rec_rc){\n            if((ro / rer_rc) == (co / rec_rc))\n              indentline[j] = indent_rc * (ro / rer_rc);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rc) && (co < rec_rc)){\n            if((rer_rc / ro) == (rec_rc / co))\n              indentline[j] = indent_rc / (ro / rer_rc);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_s == -1 && so > 0) && rer_rs && res_rs){\n          if(ro >= rer_rs && so >= res_rs){\n            if((ro / rer_rs) == (so / res_rs))\n              indentline[j] = indent_rs * (ro / rer_rs);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rs) && (so < res_rs)){\n            if((rer_rs / ro) == (res_rs / so))\n              indentline[j] = indent_rs / (ro / rer_rs);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_c == -1 && co > 0) && (indent_s == -1 && so > 0) && rec_cs && res_cs){\n          if(co >= rec_cs && so >= res_cs){\n            if((co / rec_cs) == (so / res_cs))\n              indentline[j] = indent_cs * (co / rec_cs);\n            else\n              indentline[j] = -1;\n          }\n          else if((co < rec_cs) && (so < res_cs)){\n            if((rec_cs / co) == (res_cs / so))\n              indentline[j] = indent_cs / (co / rec_cs);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else\n          indentline[j] = -1;\n      }\n      else\n        indentline[j] = indent_r * ro + indent_c * co + indent_s * so;\n      for(i = 0; str[i]; i++){\n        switch (str[i]) {\n          case '(':\n            ro++;\n            break;\n          case '{':\n            co++;\n            break;\n          case '[':\n            so++;\n            break;\n          case ')':\n            ro--;\n            break;\n          case '}':\n            co--;\n            break;\n          case ']':\n            so--;\n            break;\n        }\n      }\n      count++;\n      j++;\n    }\n    for(j = 0; j < q; j++)\n      printf(\"%d \", indentline[j]);\n    printf(\"\\n\");\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\nvoid  Check_b(char st[10][90], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    indent_p[i] = piriod++;\n  }\n}\n\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;\n  int res, f, k = 0;\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){\n        f = 0;\n        break;\n      }\n    }\n    if(f){\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  return oks;\n}\n\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)\n      indent_q[i] = res;\n  }\n}\n\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\nint main (){\n  char p[10][90], q[10][90], st[90];  //入力文字列\n  bst_t all, oks;\n  int ans[10];\n  int i, j;\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d %d\", &pin, &qin);\n    if(pin == 0 && qin == 0)\n      return 0;\n    n = 0;\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    Check_b(p, pin, p_b);\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);\n    Indent(q_b, &oks, qin);\n    for( i = 0; i < qin; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"\\n\");\n  }\n}\n"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\nint P,Q,cp[11][8],cq[11][8],i,j,k,f,T[21][21][21],R,C,S;\nchar t,a[]=\"(){}[]\";\n\nvoid in(int N,int I[11][8])\n{\n\tfor(i=0;i<N;i++)\n\t{\n\t\tfor(f=1;(t=getchar())!=10;)\n\t\t{\n\t\t\tif(t!='.')f=0;\n\t\t\tif(f)I[i][0]++;\n\t\t\tfor(k=0;k<6;k++)\n\t\t\t\tif(t==a[k])\n\t\t\t\t\tI[i][k+1]++;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%d%d\\n\",&P,&Q),P;)\n\t{\n\t\tmemset(T,-1,sizeof(T));\n\t\tmemset(cp,0,sizeof(cp));\n\t\tmemset(cq,0,sizeof(cq));\n\t\tin(P,cp);in(Q,cq);\n\t\tR=C=S=-1;\n\t\tfor(i=1;i<=20;i++)\n\t\t\tfor(j=1;j<=20;j++)\n\t\t\t\tfor(k=1;k<=20;k++)\n\t\t\t\t{\n\t\t\t\t\tint cR=cp[0][1]-cp[0][2];\n\t\t\t\t\tint cC=cp[0][3]-cp[0][4];\n\t\t\t\t\tint cS=cp[0][5]-cp[0][6];\n\t\t\t\t\tint ch;\n\t\t\t\t\tfor(ch=1;ch<P;ch++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(i*cR+j*cC+k*cS!=cp[ch][0])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tT[cR][cC][cS]=cp[ch][0];\n\t\t\t\t\t\tcR+=cp[ch][1]-cp[ch][2];\n\t\t\t\t\t\tcC+=cp[ch][3]-cp[ch][4];\n\t\t\t\t\t\tcS+=cp[ch][5]-cp[ch][6];\n\t\t\t\t\t}\n\t\t\t\t\tif(ch==P)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(R==-1&&C==-1&&S==-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=i;C=j;S=k;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=C=S=-1;\n\t\t\t\t\t\t\tgoto e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\ne:;\n\n\t\tint cR=cq[0][1]-cq[0][2];\n\t\tint cC=cq[0][3]-cq[0][4];\n\t\tint cS=cq[0][5]-cq[0][6];\n\t\tfor(printf(\"0%s\",Q==1?\"\\n\":\" \"),i=1;i<Q;i++)\n\t\t{\n\t\t\tif(cR<=20&&cC<=20&&cS<=20&&T[cR][cC][cS]!=-1)\n\t\t\t\tprintf(\"%d%s\",T[cR][cC][cS],i==Q-1?\"\\n\":\" \");\n\t\t\telse if((cR&&R==-1)||(cC&&C==-1)||(cS&&S==-1))\n\t\t\t\tprintf(\"-1%s\",i==Q-1?\"\\n\":\" \");\n\t\t\telse\n\t\t\t\tprintf(\"%d%s\",cR*R+cC*C+cS*S,i==Q-1?\"\\n\":\" \");\n\t\t\tcR+=cq[i][1]-cq[i][2];\n\t\t\tcC+=cq[i][3]-cq[i][4];\n\t\t\tcS+=cq[i][5]-cq[i][6];\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\nint P,Q,cp[15][9],cq[15][9],i,j,k,f,T[99][99][99],R,C,S;\nchar t,a[]=\"(){}[]\";\n\nvoid in(int N,int I[15][9])\n{\n\tfor(i=0;i<N;i++)\n\t{\n\t\tfor(f=1;(t=getchar())!=10;)\n\t\t{\n\t\t\tif(t!='.')f=0;\n\t\t\tif(f)I[i][0]++;\n\t\t\tfor(k=0;k<6;k++)\n\t\t\t\tif(t==a[k])\n\t\t\t\t\tI[i][k+1]++;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%d%d\\n\",&P,&Q),P;)\n\t{\n\t\tmemset(T,-1,sizeof(T));\n\t\tmemset(cp,0,sizeof(cp));\n\t\tmemset(cq,0,sizeof(cq));\n\t\tin(P,cp);in(Q,cq);\n\t\tR=C=S=-1;\n\t\tfor(i=1;i<=20;i++)\n\t\t\tfor(j=1;j<=20;j++)\n\t\t\t\tfor(k=1;k<=20;k++)\n\t\t\t\t{\n\t\t\t\t\tint cR=cp[0][1]-cp[0][2];\n\t\t\t\t\tint cC=cp[0][3]-cp[0][4];\n\t\t\t\t\tint cS=cp[0][5]-cp[0][6];\n\t\t\t\t\tint ch;\n\t\t\t\t\tfor(ch=1;ch<P;ch++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(i*cR+j*cC+k*cS!=cp[ch][0])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tT[cR][cC][cS]=cp[ch][0];\n\t\t\t\t\t\tcR+=cp[ch][1]-cp[ch][2];\n\t\t\t\t\t\tcC+=cp[ch][3]-cp[ch][4];\n\t\t\t\t\t\tcS+=cp[ch][5]-cp[ch][6];\n\t\t\t\t\t}\n\t\t\t\t\tif(ch==P)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(R==-1&&C==-1&&S==-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=i;C=j;S=k;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tR=C=S=-1;\n\t\t\t\t\t\t\tgoto e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\ne:;\n\n\t\tint cR=cq[0][1]-cq[0][2];\n\t\tint cC=cq[0][3]-cq[0][4];\n\t\tint cS=cq[0][5]-cq[0][6];\n\t\tfor(printf(\"0%s\",Q==1?\"\\n\":\" \"),i=1;i<Q;i++)\n\t\t{\n\t\t\tif(T[cR][cC][cS]!=-1)\n\t\t\t\tprintf(\"%d%s\",T[cR][cC][cS],i==Q-1?\"\\n\":\" \");\n\t\t\telse if((cR&&R==-1)||(cC&&C==-1)||(cS&&S==-1))\n\t\t\t\tprintf(\"-1%s\",i==Q-1?\"\\n\":\" \");\n\t\t\telse\n\t\t\t\tprintf(\"%d%s\",cR*R+cC*C+cS*S,i==Q-1?\"\\n\":\" \");\n\t\t\tcR+=cq[i][1]-cq[i][2];\n\t\t\tcC+=cq[i][3]-cq[i][4];\n\t\t\tcS+=cq[i][5]-cq[i][6];\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#define LINE_SIZE 80\n#define LINE_NUM 10\n\n/* (r, c, s) の値 */\ntypedef struct rcs{\n\tint r;\n\tint c;\n\tint s;\n} RCS;\n\n/* Stylish 言語のプログラム */\ntypedef struct stylish{\n\tchar program[LINE_NUM][LINE_SIZE+1];\n\tRCS depth[LINE_NUM];  /* ソースコードの各行先頭における深さ */\n\tint indent[LINE_NUM];  /* インデントの文字数 */\n\tint line;  /* 行数 */\n} Stylish;\n\n/* 標準入力からプログラムを読み込む */\nStylish* readStylish(Stylish *st, int line){\n\tint r, c, s, i, j;\n\n\tst->line = line;\n\tr = c = s = 0;\n\tfor (i = 0; i < st->line; i++){\n\t\tfgets(st->program[i], LINE_SIZE, stdin);\n\n\t\t/* インデント */\n\t\tfor (j = 0; st->program[i][j] == '.'; j++);\n\t\tst->indent[i] = j;\n\n\t\t/* 括弧の深さ */\n\t\tst->depth[i].r = r;\n\t\tst->depth[i].c = c;\n\t\tst->depth[i].s = s;\n\t\tfor (; st->program[i][j] != '\\0'; j++){\n\t\t\tswitch (st->program[i][j]){\n\t\t\t\tcase '(': r++; break;\n\t\t\t\tcase ')': r--; break;\n\t\t\t\tcase '{': c++; break;\n\t\t\t\tcase '}': c--; break;\n\t\t\t\tcase '[': s++; break;\n\t\t\t\tcase ']': s--; break;\n\t\t\t}\n\t\t}\n\t}\n\treturn st;\n}\n\nint main(void){\n\tStylish sp, sq;\n\tint p, q;\n\tint r, c, s, i, j;\n\tint flag[LINE_NUM];\n\n\twhile (scanf(\"%d %d\\n\", &p, &q) == 2){\n\t\tif (p < 1 || p > 10 || q < 1 || q > 10){\n\t\t\tbreak;\n\t\t}\n\n\t\t/* プログラムを読み込む */\n\t\treadStylish(&sp, p);  /* Stylish master のプログラム */\n\t\treadStylish(&sq, q);  /* 新しいプログラム */\n\n\t\t/* 総当たりで解答となる組み合わせを探す */\n\t\tfor (i = 0; i < q; i++){\n\t\t\tflag[i] = 0;\n\t\t}\n\t\tfor (r = 1; r <= 20; r++) for (c = 1; c <= 20; c++) for (s = 1; s <= 20; s++){\n\t\t\t/* Stylish master のインデント規則を満たすか調べる */\n\t\t\tfor (i = 0; i < p; i++){\n\t\t\t\tif (r * sp.depth[i].r + c * sp.depth[i].c + s * sp.depth[i].s != sp.indent[i]){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i < p){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/* インデント規則を満たす (r, c, s) について */\n\t\t\t/* 新しいソースコードのインデントを求める */\n\t\t\tfor (i = 0; i < q; i++){\n\t\t\t\t/* インデント */\n\t\t\t\tint indent = r * sq.depth[i].r + c * sq.depth[i].c + s * sq.depth[i].s; \n\t\t\t\tif (!flag[i]){\n\t\t\t\t\tsq.indent[i] = indent;\n\t\t\t\t\tflag[i] = 1;\n\t\t\t\t}else if(indent != sq.indent[i]){\n\t\t\t\t\tsq.indent[i] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* 出力 */\n\t\tfor (i = 0; i < q; i++){\n\t\t\tif (i != 0) printf(\" \");\n\t\t\tprintf(\"%d\", flag[i] ? sq.indent[i] : -1);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;  //括弧のインデントの組の個数\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\n//p: 括弧の配列,インデントの配列の作成  q: 括弧の配列の作成\nvoid  Check_b(char st[10][90], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;  //閉じられていない括弧数を代入する\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){  //インデントがあったら、インデント数を数える\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    indent_p[i] = piriod++;  //p: 各行のインデント数を代入\n  }\n}\n\n//pにおいて、各行に対するインデント数の組を求める\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;  //式を満たすインデントの組\n  int res, f, k = 0;  //計算結果、フラグ、カウンタフラグ\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){  //行ごとに計算\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){  //1行でも一致してなかったらスルー\n        f = 0;\n        break;\n      }\n    }\n    if(f){  //すべて一致したら、そのインデントの組を覚えておく\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  return oks;\n}\n\n//qにおいて、各行に対するインデント数を求める\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)  //インデントの組が１つのとき\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){  //その行に対するインデント数が一意でなければ不定値にする\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)  //その行に対するインデント数が一意に決まるとき\n      indent_q[i] = res;\n  }\n}\n\n//インデントの組をすべて保持する\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\n//メイン関数\nint main (){\n  char p[10][90], q[10][90], st[90];  //入力文字列\n  bst_t all, oks;  //すべてのインデント数の組、式を満たしたインデントの組\n  int ans[10];  //qにおけるそれぞれの行に対するインデント数\n  int i, j;  //カウンタ変数\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d%d\", &pin, &qin);\n    if(pin == 0 && qin == 0)  //0 0でプログラム終了\n      return 0;\n    n = 0;\n    //p行分の入力\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    Check_b(p, pin, p_b);  //pにおける括弧の配列,インデントの配列の作成\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    //q行分の入力\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);  //qにおける括弧の配列の作成\n    Indent(q_b, &oks, qin);  //各行に対するインデント数を求める\n    //qにおける各行に対するインデント数の表示\n    for( i = 0; i < qin - 1; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"%d\\n\", indent_q[i]);\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAXSIZE 80\n\nint main() {\n  int i, j = 0, p, q, numr = 0, numc = 0, nums = 0, indent_r = -1, indent_c = -1, indent_s = -1, indentline[10], piriod = 0, count = 0,\n      ro = 0, co = 0, so = 0, indent_rc = -1, indent_rs = -1, indent_cs = -1, indent_rcs = -1, rer_rcs = 0, rec_rcs = 0, res_rcs = 0,\n      rer_rc = 0, rer_rs = 0, rec_rc = 0, rec_cs = 0, res_rs = 0, res_cs = 0;\n  char str[MAXSIZE];\n\n  while(1){\n    numr = 0; numc = 0; nums = 0; indent_r = -1; indent_c = -1; indent_s = -1; indentline[9]; piriod = 0; count = 0;\n    ro = 0; co = 0; so = 0; indent_rc = -1; indent_rs = -1; indent_cs = -1; indent_rcs = -1; rer_rcs = 0; rec_rcs = 0; res_rcs = 0;\n    rer_rc = 0; rer_rs = 0; rec_rc = 0; rec_cs = 0; res_rs = 0; res_cs = 0; j = 0;\n    scanf(\"%d %d\", &p, &q);  //p,qの入力\n    if(p == 0 && q == 0)\n      return 0;\n    while(1){\n      if(count == p)\n        break;\n      piriod = 0;\n      scanf(\"%s\", str);  //p行分の入力\n      for(i = 0; str[i] != '\\0'; i++){\n        switch (str[i]) {\n          case '(':\n            //fr = 1;\n            numr++;\n            break;\n          case '{':\n            //fc = 1;\n            numc++;\n            break;\n          case '[':\n            //fs = 1;\n            nums++;\n            break;\n          case ')':\n            numr--;\n            break;\n          case '}':\n            numc--;\n            break;\n          case ']':\n            nums--;\n            break;\n          case '.':\n            if(!i){\n              for(; str[i] == '.'; i++)\n                piriod++;\n              i--;\n              if(numr > 0 && indent_r == -1){\n                if(numc == 0 && nums == 0){\n                  indent_r = piriod / numr;\n                }\n                else if(numc > 0 && nums > 0 && indent_c != -1 && indent_s != -1)\n                  indent_r = (piriod - (indent_c * numc + indent_s * nums)) / numr;\n                else if(numc > 0 && indent_c != -1)\n                  indent_r = (piriod - indent_c * numc) / numr;\n                else if(nums > 0 && indent_s != -1)\n                  indent_r = (piriod - indent_s * nums) / numr;\n                else{}\n              }\n              if(numc > 0 && indent_c == -1){\n                if(numr == 0 && nums == 0){\n                  indent_c = piriod / numc;\n                }\n                else if(numr > 0 && nums > 0 && indent_r != -1 && indent_s != -1)\n                  indent_c = (piriod - (indent_r * numr + indent_s * nums)) / numc;\n                else if(numr > 0 && indent_r != -1)\n                  indent_c = (piriod - indent_r * numr) / numc;\n                else if(nums > 0 && indent_s != -1)\n                  indent_c = (piriod - indent_s * nums) / numc;\n                else{}\n              }\n              if (nums > 0 && indent_s == -1) {\n                if(numr == 0 && numc == 0){\n                  indent_s = piriod / nums;\n                }\n                else if(numr > 0 && numc> 0 && indent_r != -1 && indent_c != -1)\n                  indent_s = (piriod - (indent_r * numr + indent_c * numc)) / nums;\n                else if(numr > 0 && indent_r != -1)\n                  indent_s = (piriod - indent_r * numr) / nums;\n                else if(numc > 0 && indent_c != -1)\n                  indent_s = (piriod - indent_c * numc) / nums;\n                else{}\n              }\n              if(numr > 0 && numc > 0 && nums > 0 && indent_r == -1 && indent_c == -1 && indent_s == -1){\n                if(piriod == numr + numc + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 60 == 0){\n                  indent_r = 20; indent_c = 20; indent_s = 20;\n                }\n                else{\n                  indent_rcs = piriod; rer_rcs = numr; rec_rcs = numc; res_rcs = nums;\n                }\n              }\n              else if(numr > 0 && numc > 0 && indent_r == -1 && indent_c == -1){\n                if(piriod == numr + numc){\n                  indent_r = 1; indent_c = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_c = 20;\n                }\n                else{\n                  indent_rc = piriod; rer_rc = numr; rec_rc = numc;\n                }\n              }\n              else if(numr > 0 && nums > 0 && indent_r == -1 && indent_s == -1){\n                if(piriod == numr + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_s = 20;\n                }\n                else{\n                  indent_rs = piriod; rer_rs = numr; res_rs = nums;\n                }\n              }\n              else if(numc > 0 && nums > 0 && indent_c == -1 && indent_s == -1){\n                if(piriod == numc + nums){\n                  indent_c = 1; indent_s = 1;\n                }\n                if(piriod % 40 == 0){\n                  indent_s = 20; indent_c = 20;\n                }\n                else{\n                  indent_cs = piriod; rec_cs = numc; res_cs = nums;\n                }\n              }\n            }\n            break;\n        }\n      }\n      //printf(\"%d\\n\", piriod);\n      //printf(\"%d %d %d\\n\", numr, numc, nums);\n      //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n      count++;\n    }\n    //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n    count = 0;\n    while(1){\n      if(count == q)\n        break;\n      //printf(\"%d %d %d\\n\", ro, co, so);\n      scanf(\"%s\", str);  //q行分の入力\n      if((indent_r == -1 && ro > 0) || (indent_c == -1 && co > 0) || (indent_s == -1 && so > 0)){\n        if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n           && rer_rcs && rec_rcs && res_rcs){\n          if((ro >= rer_rcs) && (co >= rec_rcs) && (so >= res_rcs)){\n            if((ro / rer_rcs) == (co / rec_rcs) == (so / res_rcs))\n              indentline[j] = indent_rcs * (ro / rer_rcs);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rcs) && (co < rec_rcs) && (so < res_rcs)){\n            if((rer_rcs / ro) == (rec_rcs / co) == (res_rcs / so))\n              indentline[j] = indent_rcs / (rer_rcs / ro);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && rer_rc && rec_rc){\n          if(ro >= rer_rc && co >= rec_rc){\n            if((ro / rer_rc) == (co / rec_rc))\n              indentline[j] = indent_rc * (ro / rer_rc);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rc) && (co < rec_rc)){\n            if((rer_rc / ro) == (rec_rc / co))\n              indentline[j] = indent_rc / (ro / rer_rc);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_s == -1 && so > 0) && rer_rs && res_rs){\n          if(ro >= rer_rs && so >= res_rs){\n            if((ro / rer_rs) == (so / res_rs))\n              indentline[j] = indent_rs * (ro / rer_rs);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rs) && (so < res_rs)){\n            if((rer_rs / ro) == (res_rs / so))\n              indentline[j] = indent_rs / (ro / rer_rs);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_c == -1 && co > 0) && (indent_s == -1 && so > 0) && rec_cs && res_cs){\n          if(co >= rec_cs && so >= res_cs){\n            if((co / rec_cs) == (so / res_cs))\n              indentline[j] = indent_cs * (co / rec_cs);\n            else\n              indentline[j] = -1;\n          }\n          else if((co < rec_cs) && (so < res_cs)){\n            if((rec_cs / co) == (res_cs / so))\n              indentline[j] = indent_cs / (co / rec_cs);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else\n          indentline[j] = -1;\n      }\n      else\n        indentline[j] = indent_r * ro + indent_c * co + indent_s * so;\n      for(i = 0; str[i]; i++){\n        switch (str[i]) {\n          case '(':\n            ro++;\n            break;\n          case '{':\n            co++;\n            break;\n          case '[':\n            so++;\n            break;\n          case ')':\n            ro--;\n            break;\n          case '}':\n            co--;\n            break;\n          case ']':\n            so--;\n            break;\n        }\n      }\n      count++;\n      j++;\n    }\n    for(j = 0; j < q; j++)\n      printf(\"%d \", indentline[j]);\n    printf(\"\\n\");\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAXSIZE 80\n\nint main() {\n  int i, j = 0, p, q, numr = 0, numc = 0, nums = 0, indent_r = -1, indent_c = -1, indent_s = -1, indentline[10], piriod = 0, count = 0,\n      ro = 0, co = 0, so = 0, indent_rc = -1, indent_rs = -1, indent_cs = -1, indent_rcs = -1, rer_rcs = 0, rec_rcs = 0, res_rcs = 0,\n      rer_rc = 0, rer_rs = 0, rec_rc = 0, rec_cs = 0, res_rs = 0, res_cs = 0;\n  char str[MAXSIZE];\n\n  while(1){\n    numr = 0; numc = 0; nums = 0; indent_r = -1; indent_c = -1; indent_s = -1; indentline[9]; piriod = 0; count = 0;\n    ro = 0; co = 0; so = 0; indent_rc = -1; indent_rs = -1; indent_cs = -1; indent_rcs = -1; rer_rcs = 0; rec_rcs = 0; res_rcs = 0;\n    rer_rc = 0; rer_rs = 0; rec_rc = 0; rec_cs = 0; res_rs = 0; res_cs = 0; j = 0;\n    scanf(\"%d %d\", &p, &q);  //p,qの入力\n    if(p == 0 && q == 0)\n      return 0;\n    while(1){\n      if(count == p)\n        break;\n      piriod = 0;\n      scanf(\"%s\", str);  //p行分の入力\n      for(i = 0; str[i] != '\\0'; i++){\n        switch (str[i]) {\n          case '(':\n            //fr = 1;\n            numr++;\n            break;\n          case '{':\n            //fc = 1;\n            numc++;\n            break;\n          case '[':\n            //fs = 1;\n            nums++;\n            break;\n          case ')':\n            numr--;\n            break;\n          case '}':\n            numc--;\n            break;\n          case ']':\n            nums--;\n            break;\n          case '.':\n            if(!i){\n              for(; str[i] == '.'; i++)\n                piriod++;\n              i--;\n              if(numr > 0 && indent_r == -1){\n                if(numc == 0 && nums == 0){\n                  indent_r = piriod / numr;\n                }\n                else if(numc > 0 && nums > 0 && indent_c != -1 && indent_s != -1)\n                  indent_r = (piriod - (indent_c * numc + indent_s * nums)) / numr;\n                else if(numc > 0 && indent_c != -1)\n                  indent_r = (piriod - indent_c * numc) / numr;\n                else if(nums > 0 && indent_s != -1)\n                  indent_r = (piriod - indent_s * nums) / numr;\n                else{}\n              }\n              if(numc > 0 && indent_c == -1){\n                if(numr == 0 && nums == 0){\n                  indent_c = piriod / numc;\n                }\n                else if(numr > 0 && nums > 0 && indent_r != -1 && indent_s != -1)\n                  indent_c = (piriod - (indent_r * numr + indent_s * nums)) / numc;\n                else if(numr > 0 && indent_r != -1)\n                  indent_c = (piriod - indent_r * numr) / numc;\n                else if(nums > 0 && indent_s != -1)\n                  indent_c = (piriod - indent_s * nums) / numc;\n                else{}\n              }\n              if (nums > 0 && indent_s == -1) {\n                if(numr == 0 && numc == 0){\n                  indent_s = piriod / nums;\n                }\n                else if(numr > 0 && numc> 0 && indent_r != -1 && indent_c != -1)\n                  indent_s = (piriod - (indent_r * numr + indent_c * numc)) / nums;\n                else if(numr > 0 && indent_r != -1)\n                  indent_s = (piriod - indent_r * numr) / nums;\n                else if(numc > 0 && indent_c != -1)\n                  indent_s = (piriod - indent_c * numc) / nums;\n                else{}\n              }\n              if(numr > 0 && numc > 0 && nums > 0 && indent_r == -1 && indent_c == -1 && indent_s == -1){\n                if(piriod == numr + numc + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 60 == 0){\n                  indent_r = 20; indent_c = 20; indent_s = 20;\n                }\n                else{\n                  indent_rcs = piriod; rer_rcs = numr; rec_rcs = numc; res_rcs = nums;\n                }\n              }\n              else if(numr > 0 && numc > 0 && indent_r == -1 && indent_c == -1){\n                if(piriod == numr + numc){\n                  indent_r = 1; indent_c = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_c = 20;\n                }\n                else{\n                  indent_rc = piriod; rer_rc = numr; rec_rc = numc;\n                }\n              }\n              else if(numr > 0 && nums > 0 && indent_r == -1 && indent_s == -1){\n                if(piriod == numr + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_s = 20;\n                }\n                else{\n                  indent_rs = piriod; rer_rs = numr; res_rs = nums;\n                }\n              }\n              else if(numc > 0 && nums > 0 && indent_c == -1 && indent_s == -1){\n                if(piriod == numc + nums){\n                  indent_c = 1; indent_s = 1;\n                }\n                if(piriod % 40 == 0){\n                  indent_s = 20; indent_c = 20;\n                }\n                else{\n                  indent_cs = piriod; rec_cs = numc; res_cs = nums;\n                }\n              }\n            }\n            break;\n        }\n      }\n      //printf(\"%d\\n\", piriod);\n      //printf(\"%d %d %d\\n\", numr, numc, nums);\n      //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n      count++;\n    }\n    //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n    count = 0;\n    while(1){\n      if(count == q)\n        break;\n      scanf(\"%s\", str);  //q行分の入力\n      if((indent_r == -1 && ro > 0) || (indent_c == -1 && co > 0) || (indent_s == -1 && so > 0)){\n        if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n           && rer_rcs && rec_rcs && res_rcs\n           && (rer_rcs % ro == 0 || ro % rer_rcs == 0) && (rec_rcs % co == 0 || co % rec_rcs == 0)\n           && (res_rcs % so == 0 || so % res_rcs == 0)){\n          if(ro > rer_rcs)\n            indentline[j] = indent_rcs * (ro / rer_rcs);\n          else\n            indentline[j] = indent_rcs / (rer_rcs / ro);\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0)\n                && rer_rc && rec_rc\n                && (rer_rc % ro == 0 || ro % rer_rc == 0) && (rec_rc % co == 0 || co % rec_rc == 0)){\n          if(ro > rer_rc)\n            indentline[j] = indent_rc * (ro / rer_rc);\n          else\n            indentline[j] = indent_rc / (rer_rc / ro);\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_s == -1 && so > 0)\n                && rer_rs && res_rs\n                && (rer_rs % ro == 0 || ro % rer_rs == 0) && (res_rs % so == 0 || so % res_rs == 0)){\n          if(ro > rer_rs)\n            indentline[j] = indent_rs * (ro / rer_rs);\n          else\n            indentline[j] = indent_rs / (rer_rs / ro);\n        }\n        else if((indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n                && rec_cs && res_cs\n                && (rec_cs % co == 0 || co % rec_cs == 0) && (res_cs % so == 0 || so % res_cs == 0)){\n          if(co > rec_cs)\n            indentline[j] = indent_cs * (co / rec_cs);\n          else\n            indentline[j] = indent_cs / (rec_cs / co);\n        }\n        else\n          indentline[j] = -1;\n      }\n      else\n        indentline[j] = indent_r * ro + indent_c * co + indent_s * so;\n      for(i = 0; str[i]; i++){\n        switch (str[i]) {\n          case '(':\n            ro++;\n            break;\n          case '{':\n            co++;\n            break;\n          case '[':\n            so++;\n            break;\n          case ')':\n            ro--;\n            break;\n          case '}':\n            co--;\n            break;\n          case ']':\n            so--;\n            break;\n        }\n      }\n      count++;\n      j++;\n    }\n    for(j = 0; j < q; j++)\n      printf(\"%d \", indentline[j]);\n    printf(\"\\n\");\n  }\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\nvoid  Check_b(char st[10][80], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    //printf(\"%d %d %d\\n\", numr, numc, nums);\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    //printf(\"%d\\n\", piriod);\n    indent_p[i] = piriod++;\n  }\n}\n\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;\n  int res, f, k = 0;\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){\n        f = 0;\n        break;\n      }\n    }\n    if(f){\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  //for(int i = 0; i < n; i++)\n    //printf(\"%d %d %d\\n\", oks.b[i].r, oks.b[i].c, oks.b[i].s);\n  return oks;\n}\n\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)\n      indent_q[i] = res;\n  }\n}\n\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\nint main (){\n  char p[10][80], q[10][80], st[80];  //入力文字列\n  bst_t all, oks;\n  int ans[10];\n  int i, j;\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d %d\", &pin, &qin);\n    if(pin == 0 && qin == 0)\n      return 0;\n    n = 0;\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    //printf(\"%d %d %d\\n\", all.b[1].r, all.b[1].c, all.b[1].s);\n    Check_b(p, pin, p_b);\n  /*  for(int i = 0; i < pin; i++){\n      for(int j = 0; j < 3; j++)\n        printf(\"%d \", p_b[i][j]);\n      printf(\"\\n\");\n    }\n    printf(\"\\n\"); */\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);\n  /*  for(int i = 0; i < qin; i++){\n      for(int j = 0; j < 3; j++)\n        printf(\"%d \", q_b[i][j]);\n      printf(\"\\n\");\n    }\n    printf(\"\\n\");*/\n    Indent(q_b, &oks, qin);\n    for( i = 0; i < qin; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"\\n\");\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\nvoid  Check_b(char st[10][90], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    indent_p[i] = piriod++;\n  }\n}\n\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;\n  int res, f, k = 0;\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){\n        f = 0;\n        break;\n      }\n    }\n    if(f){\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  return oks;\n}\n\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)\n      indent_q[i] = res;\n  }\n}\n\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\nint main (){\n  char p[10][90], q[10][90], st[90];  //入力文字列\n  bst_t all, oks;\n  int ans[10];\n  int i, j;\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d %d\", &pin, &qin);\n    if(pin == 0 && qin == 0)\n      return 0;\n    n = 0;\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    Check_b(p, pin, p_b);\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);\n    Indent(q_b, &oks, qin);\n    for( i = 0; i < qin - 1; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"%d \", indent_q[i]);\n    printf(\"\\n\");\n  }\n}\n"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\nint P,Q,cp[15][9],cq[15][9],T[11][5],i,j,k,f,R,C,S,cR,cC,cS,ch;\nint K[8001][3],pat;\nchar t,a[]=\"(){}[]\";\n\nvoid in(int N,int I[15][9])\n{\n\tfor(i=0;i<N;i++)\n\t{\n\t\tfor(f=1;(t=getchar())!=10;)\n\t\t{\n\t\t\tif(t!='.')f=0;\n\t\t\tif(f)I[i][0]++;\n\t\t\tfor(k=0;k<6;k++)\n\t\t\t\tif(t==a[k])\n\t\t\t\t\tI[i][k+1]++;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%d%d\\n\",&P,&Q),P;)\n\t{\n\t\tmemset(T,-1,sizeof(T));\n\t\tmemset(cp,0,sizeof(cp));\n\t\tmemset(cq,0,sizeof(cq));\n\t\tin(P,cp);in(Q,cq);\n\t\tcR=cp[0][1]-cp[0][2];\n\t\tcC=cp[0][3]-cp[0][4];\n\t\tcS=cp[0][5]-cp[0][6];\n\t\tfor(ch=1;ch<P;ch++)\n\t\t{\n\t\t\tT[ch-1][0]=cR;\n\t\t\tT[ch-1][1]=cC;\n\t\t\tT[ch-1][2]=cS;\n\t\t\tT[ch-1][3]=cp[ch][0];\n\t\t\tcR+=cp[ch][1]-cp[ch][2];\n\t\t\tcC+=cp[ch][3]-cp[ch][4];\n\t\t\tcS+=cp[ch][5]-cp[ch][6];\n\t\t}\n\t\tR=C=S=-1;\n\t\tfor(pat=0,i=1;i<=20;i++)\n\t\t\tfor(j=1;j<=20;j++)\n\t\t\t\tfor(k=1;k<=20;k++)\n\t\t\t\t{\n\t\t\t\t\tcR=cp[0][1]-cp[0][2];\n\t\t\t\t\tcC=cp[0][3]-cp[0][4];\n\t\t\t\t\tcS=cp[0][5]-cp[0][6];\n\t\t\t\t\tfor(ch=1;ch<P;ch++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(i*cR+j*cC+k*cS!=cp[ch][0])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcR+=cp[ch][1]-cp[ch][2];\n\t\t\t\t\t\tcC+=cp[ch][3]-cp[ch][4];\n\t\t\t\t\t\tcS+=cp[ch][5]-cp[ch][6];\n\t\t\t\t\t}\n\t\t\t\t\tif(ch==P)\n\t\t\t\t\t{\n\t\t\t\t\t\tK[pat][0]=i;\n\t\t\t\t\t\tK[pat][1]=j;\n\t\t\t\t\t\tK[pat][2]=k;\n\t\t\t\t\t\tpat++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\tR=K[0][0];C=K[0][1];S=K[0][2];\n\t\tfor(i=1;i<pat;i++)\n\t\t{\n\t\t\tif(R!=K[i][0])R=-1;\n\t\t\tif(C!=K[i][1])C=-1;\n\t\t\tif(S!=K[i][2])S=-1;\n\t\t}\n\t\tcR=cq[0][1]-cq[0][2];\n\t\tcC=cq[0][3]-cq[0][4];\n\t\tcS=cq[0][5]-cq[0][6];\n\t\tfor(printf(\"0%s\",Q==1?\"\\n\":\" \"),i=1;i<Q;i++)\n\t\t{\n\t\t\tfor(j=0;j<P;j++)\n\t\t\t\tif(cR==T[j][0]&&cC==T[j][1]&&cS==T[j][2])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d%s\",T[j][3],i==Q-1?\"\\n\":\" \");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(j==P)\n\t\t\t{\n\t\t\t\tif((cR&&R==-1)||(cC&&C==-1)||(cS&&S==-1))\n\t\t\t\t\tprintf(\"-1%s\",i==Q-1?\"\\n\":\" \");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%d%s\",cR*R+cC*C+cS*S,i==Q-1?\"\\n\":\" \");\n\t\t\t}\n\t\t\tcR+=cq[i][1]-cq[i][2];\n\t\t\tcC+=cq[i][3]-cq[i][4];\n\t\t\tcS+=cq[i][5]-cq[i][6];\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAXSIZE 80\n\nint main() {\n  int i, j = 0, p, q, numr = 0, numc = 0, nums = 0, indent_r = -1, indent_c = -1, indent_s = -1, indentline[9], piriod = 0, count = 0,\n      ro = 0, co = 0, so = 0, indent_rc = -1, indent_rs = -1, indent_cs = -1, indent_rcs = -1, rer_rcs = 0, rec_rcs = 0, res_rcs = 0,\n      rer_rc = 0, rer_rs = 0, rec_rc = 0, rec_cs = 0, res_rs = 0, res_cs = 0;\n  char str[MAXSIZE];\n\n  while(1){\n    numr = 0; numc = 0; nums = 0; indent_r = -1; indent_c = -1; indent_s = -1; indentline[9]; piriod = 0; count = 0;\n    ro = 0; co = 0; so = 0; indent_rc = -1; indent_rs = -1; indent_cs = -1; indent_rcs = -1; rer_rcs = 0; rec_rcs = 0; res_rcs = 0;\n    rer_rc = 0; rer_rs = 0; rec_rc = 0; rec_cs = 0; res_rs = 0; res_cs = 0; j = 0;\n    scanf(\"%d %d\", &p, &q);  //p,qの入力\n    if(p == 0 && q == 0)\n      return 0;\n    while(1){\n      if(count == p)\n        break;\n      piriod = 0;\n      scanf(\"%s\", str);  //p行分の入力\n      for(i = 0; str[i] != '\\0'; i++){\n        switch (str[i]) {\n          case '(':\n            //fr = 1;\n            numr++;\n            break;\n          case '{':\n            //fc = 1;\n            numc++;\n            break;\n          case '[':\n            //fs = 1;\n            nums++;\n            break;\n          case ')':\n            numr--;\n            break;\n          case '}':\n            numc--;\n            break;\n          case ']':\n            nums--;\n            break;\n          case '.':\n            if(!i){\n              for(; str[i] == '.'; i++)\n                piriod++;\n              i--;\n              if(numr > 0 && indent_r == -1){\n                if(numc == 0 && nums == 0){\n                  if(numr == 1)\n                    indent_r = piriod;\n                  else\n                    indent_r = piriod / numr;\n                }\n                else if(numc > 0 && nums > 0 && indent_c != -1 && indent_s != -1)\n                  indent_r = piriod - (indent_c * numc + indent_s * nums);\n                else if(numc > 0 && indent_c != -1)\n                  indent_r = piriod - indent_c * numc;\n                else if(nums > 0 && indent_s != -1)\n                  indent_r = piriod - indent_s * nums;\n                else{}\n              }\n              if(numc > 0 && indent_c == -1){\n                if(numr == 0 && nums == 0){\n                  if(numc == 1)\n                    indent_c = piriod;\n                  else\n                    indent_c = piriod / numc;\n                }\n                else if(numr > 0 && nums > 0 && indent_r != -1 && indent_s != -1)\n                  indent_c = piriod - (indent_r * numr + indent_s * nums);\n                else if(numr > 0 && indent_r != -1)\n                  indent_c = piriod - indent_r * numr;\n                else if(nums > 0 && indent_s != -1)\n                  indent_c = piriod - indent_s * nums;\n                else{}\n              }\n              if (nums > 0 && indent_s == -1) {\n                if(numr == 0 && numc == 0){\n                  if(nums == 1)\n                    indent_s = piriod;\n                  else\n                    indent_s = piriod / nums;\n                }\n                else if(numr > 0 && numc> 0 && indent_r != -1 && indent_c != -1)\n                  indent_s = piriod - (indent_r * numr + indent_c * numc);\n                else if(numr > 0 && indent_r != -1)\n                  indent_s = piriod - indent_r * numr;\n                else if(numc > 0 && indent_c != -1)\n                  indent_s = piriod - indent_c * numc;\n                else{}\n              }\n              if(numr > 0 && numc > 0 && nums > 0 && indent_r == -1 && indent_c == -1 && indent_s == -1){\n                if(piriod == 3){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod == 60){\n                  indent_r = 20; indent_c = 20; indent_s = 20;\n                }\n                else{\n                  indent_rcs = piriod; rer_rcs = numr; rec_rcs = numc; res_rcs = nums;\n                }\n              }\n              else if(numr > 0 && numc > 0 && indent_r == -1 && indent_c == -1){\n                if(piriod == 40){\n                  indent_r = 20; indent_c = 20;\n                }\n                else{\n                  indent_rc = piriod; rer_rc = numr; rec_rc = numc;\n                }\n              }\n              else if(numr > 0 && nums > 0 && indent_r == -1 && indent_s == -1){\n                if(piriod == 40){\n                  indent_r = 20; indent_s = 20;\n                }\n                else{\n                  indent_rs = piriod; rer_rs = numr; res_rs = nums;\n                }\n              }\n              else if(numc > 0 && nums > 0 && indent_c == -1 && indent_s == -1){\n                if(piriod == 40){\n                  indent_s = 20; indent_c = 20;\n                }\n                else{\n                  indent_cs = piriod; rec_cs = numc; res_cs = nums;\n                }\n              }\n            }\n            break;\n        }\n      }\n      //printf(\"%d\\n\", piriod);\n      //printf(\"%d %d %d\\n\", numr, numc, nums);\n      //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n      count++;\n    }\n    //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n    count = 0;\n    while(1){\n      if(count == q)\n        break;\n      scanf(\"%s\", str);  //q行分の入力\n      if((indent_r == -1 && ro > 0) || (indent_c == -1 && co > 0) || (indent_s == -1 && so > 0)){\n        if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n           && rer_rcs == ro && rec_rcs == co && res_rcs == so)\n           indentline[j] = indent_rcs;\n        else if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && rer_rc == ro && rec_rc == co)\n          indentline[j] = indent_rc;\n        else if((indent_r == -1 && ro > 0) && (indent_s == -1 && so > 0) && rer_rs == ro && res_rs == so)\n          indentline[j] = indent_rs;\n        else if((indent_c == -1 && co > 0) && (indent_s == -1 && so > 0) && rec_cs == co && res_cs == so)\n          indentline[j] = indent_cs;\n        else\n          indentline[j] = -1;\n      }\n      else\n        indentline[j] = indent_r * ro + indent_c * co + indent_s * so;\n      for(i = 0; str[i]; i++){\n        switch (str[i]) {\n          case '(':\n            ro++;\n            break;\n          case '{':\n            co++;\n            break;\n          case '[':\n            so++;\n            break;\n          case ')':\n            ro--;\n            break;\n          case '}':\n            co--;\n            break;\n          case ']':\n            so--;\n            break;\n        }\n      }\n      count++;\n      j++;\n    }\n    for(j = 0; j < q; j++)\n      printf(\"%d \", indentline[j]);\n    printf(\"\\n\");\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAXSIZE 80\n\nint main() {\n  int i, j = 0, p, q, numr = 0, numc = 0, nums = 0, indent_r = -1, indent_c = -1, indent_s = -1, indentline[10], piriod = 0, count = 0,\n      ro = 0, co = 0, so = 0, indent_rc = -1, indent_rs = -1, indent_cs = -1, indent_rcs = -1, rer_rcs = 0, rec_rcs = 0, res_rcs = 0,\n      rer_rc = 0, rer_rs = 0, rec_rc = 0, rec_cs = 0, res_rs = 0, res_cs = 0;\n  char str[MAXSIZE];\n\n  while(1){\n    numr = 0; numc = 0; nums = 0; indent_r = -1; indent_c = -1; indent_s = -1; indentline[9]; piriod = 0; count = 0;\n    ro = 0; co = 0; so = 0; indent_rc = -1; indent_rs = -1; indent_cs = -1; indent_rcs = -1; rer_rcs = 0; rec_rcs = 0; res_rcs = 0;\n    rer_rc = 0; rer_rs = 0; rec_rc = 0; rec_cs = 0; res_rs = 0; res_cs = 0; j = 0;\n    scanf(\"%d %d\", &p, &q);  //p,qの入力\n    if(p == 0 && q == 0)\n      return 0;\n    while(1){\n      if(count == p)\n        break;\n      piriod = 0;\n      scanf(\"%s\", str);  //p行分の入力\n      for(i = 0; str[i] != '\\0'; i++){\n        switch (str[i]) {\n          case '(':\n            //fr = 1;\n            numr++;\n            break;\n          case '{':\n            //fc = 1;\n            numc++;\n            break;\n          case '[':\n            //fs = 1;\n            nums++;\n            break;\n          case ')':\n            numr--;\n            break;\n          case '}':\n            numc--;\n            break;\n          case ']':\n            nums--;\n            break;\n          case '.':\n            if(!i){\n              for(; str[i] == '.'; i++)\n                piriod++;\n              i--;\n              if(numr > 0 && indent_r == -1){\n                if(numc == 0 && nums == 0){\n                  indent_r = piriod / numr;\n                }\n                else if(numc > 0 && nums > 0 && indent_c != -1 && indent_s != -1)\n                  indent_r = (piriod - (indent_c * numc + indent_s * nums)) / numr;\n                else if(numc > 0 && indent_c != -1)\n                  indent_r = (piriod - indent_c * numc) / numr;\n                else if(nums > 0 && indent_s != -1)\n                  indent_r = (piriod - indent_s * nums) / numr;\n                else{}\n              }\n              if(numc > 0 && indent_c == -1){\n                if(numr == 0 && nums == 0){\n                  indent_c = piriod / numc;\n                }\n                else if(numr > 0 && nums > 0 && indent_r != -1 && indent_s != -1)\n                  indent_c = (piriod - (indent_r * numr + indent_s * nums)) / numc;\n                else if(numr > 0 && indent_r != -1)\n                  indent_c = (piriod - indent_r * numr) / numc;\n                else if(nums > 0 && indent_s != -1)\n                  indent_c = (piriod - indent_s * nums) / numc;\n                else{}\n              }\n              if (nums > 0 && indent_s == -1) {\n                if(numr == 0 && numc == 0){\n                  indent_s = piriod / nums;\n                }\n                else if(numr > 0 && numc> 0 && indent_r != -1 && indent_c != -1)\n                  indent_s = (piriod - (indent_r * numr + indent_c * numc)) / nums;\n                else if(numr > 0 && indent_r != -1)\n                  indent_s = (piriod - indent_r * numr) / nums;\n                else if(numc > 0 && indent_c != -1)\n                  indent_s = (piriod - indent_c * numc) / nums;\n                else{}\n              }\n              if(numr > 0 && numc > 0 && nums > 0 && indent_r == -1 && indent_c == -1 && indent_s == -1){\n                if(piriod == numr + numc + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 60 == 0){\n                  indent_r = 20; indent_c = 20; indent_s = 20;\n                }\n                else{\n                  indent_rcs = piriod; rer_rcs = numr; rec_rcs = numc; res_rcs = nums;\n                }\n              }\n              else if(numr > 0 && numc > 0 && indent_r == -1 && indent_c == -1){\n                if(piriod == numr + numc){\n                  indent_r = 1; indent_c = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_c = 20;\n                }\n                else{\n                  indent_rc = piriod; rer_rc = numr; rec_rc = numc;\n                }\n              }\n              else if(numr > 0 && nums > 0 && indent_r == -1 && indent_s == -1){\n                if(piriod == numr + nums){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod % 40 == 0){\n                  indent_r = 20; indent_s = 20;\n                }\n                else{\n                  indent_rs = piriod; rer_rs = numr; res_rs = nums;\n                }\n              }\n              else if(numc > 0 && nums > 0 && indent_c == -1 && indent_s == -1){\n                if(piriod == numc + nums){\n                  indent_c = 1; indent_s = 1;\n                }\n                if(piriod % 40 == 0){\n                  indent_s = 20; indent_c = 20;\n                }\n                else{\n                  indent_cs = piriod; rec_cs = numc; res_cs = nums;\n                }\n              }\n            }\n            break;\n        }\n      }\n      //printf(\"%d\\n\", piriod);\n      //printf(\"%d %d %d\\n\", numr, numc, nums);\n      //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n      count++;\n    }\n    //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n    count = 0;\n    while(1){\n      if(count == q)\n        break;\n      //printf(\"%d %d %d\\n\", ro, co, so);\n      scanf(\"%s\", str);  //q行分の入力\n      if((indent_r > 20 && ro > 0) || (indent_c > 20 && co > 0) || (indent_s > 20 && so > 0))\n        indentline[j] = -1;\n      else if((indent_r == -1 && ro > 0) || (indent_c == -1 && co > 0) || (indent_s == -1 && so > 0)){\n        if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n           && rer_rcs && rec_rcs && res_rcs){\n          if((ro >= rer_rcs) && (co >= rec_rcs) && (so >= res_rcs)){\n            if((ro / rer_rcs) == (co / rec_rcs) == (so / res_rcs))\n              indentline[j] = indent_rcs * (ro / rer_rcs);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rcs) && (co < rec_rcs) && (so < res_rcs)){\n            if((rer_rcs / ro) == (rec_rcs / co) == (res_rcs / so))\n              indentline[j] = indent_rcs / (rer_rcs / ro);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && rer_rc && rec_rc){\n          if(ro >= rer_rc && co >= rec_rc){\n            if((ro / rer_rc) == (co / rec_rc))\n              indentline[j] = indent_rc * (ro / rer_rc);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rc) && (co < rec_rc)){\n            if((rer_rc / ro) == (rec_rc / co))\n              indentline[j] = indent_rc / (ro / rer_rc);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_r == -1 && ro > 0) && (indent_s == -1 && so > 0) && rer_rs && res_rs){\n          if(ro >= rer_rs && so >= res_rs){\n            if((ro / rer_rs) == (so / res_rs))\n              indentline[j] = indent_rs * (ro / rer_rs);\n            else\n              indentline[j] = -1;\n          }\n          else if((ro < rer_rs) && (so < res_rs)){\n            if((rer_rs / ro) == (res_rs / so))\n              indentline[j] = indent_rs / (ro / rer_rs);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else if((indent_c == -1 && co > 0) && (indent_s == -1 && so > 0) && rec_cs && res_cs){\n          if(co >= rec_cs && so >= res_cs){\n            if((co / rec_cs) == (so / res_cs))\n              indentline[j] = indent_cs * (co / rec_cs);\n            else\n              indentline[j] = -1;\n          }\n          else if((co < rec_cs) && (so < res_cs)){\n            if((rec_cs / co) == (res_cs / so))\n              indentline[j] = indent_cs / (co / rec_cs);\n            else\n              indentline[j] = -1;\n          }\n        }\n        else\n          indentline[j] = -1;\n      }\n      else\n        indentline[j] = indent_r * ro + indent_c * co + indent_s * so;\n      for(i = 0; str[i]; i++){\n        switch (str[i]) {\n          case '(':\n            ro++;\n            break;\n          case '{':\n            co++;\n            break;\n          case '[':\n            so++;\n            break;\n          case ')':\n            ro--;\n            break;\n          case '}':\n            co--;\n            break;\n          case ']':\n            so--;\n            break;\n        }\n      }\n      count++;\n      j++;\n    }\n    for(j = 0; j < q; j++)\n      printf(\"%d \", indentline[j]);\n    printf(\"\\n\");\n  }\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\nvoid  Check_b(char st[10][90], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    indent_p[i] = piriod++;\n  }\n}\n\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;\n  int res, f, k = 0;\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){\n        f = 0;\n        break;\n      }\n    }\n    if(f){\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  return oks;\n}\n\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)\n      indent_q[i] = res;\n  }\n}\n\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\nint main (){\n  char p[10][90], q[10][90], st[90];  //入力文字列\n  bst_t all, oks;\n  int ans[10];\n  int i, j;\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d %d\", &pin, &qin);\n    if(pin == 0 && qin == 0)\n      return 0;\n    n = 0;\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    Check_b(p, pin, p_b);\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);\n    Indent(q_b, &oks, qin);\n    for( i = 0; i < qin; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"\\n\");\n  }\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint p_b[10][3], q_b[10][3];  //括弧の配列\nint indent_p[10], indent_q[10];\nint n;\n\ntypedef struct bracket{ int r, c, s; }bra_t;\ntypedef struct bracket_st{ bra_t b[8000]; }bst_t;\n\nvoid  Check_b(char st[10][90], int in, int pq[10][3]) {\n  int numr = 0, numc = 0, nums = 0, piriod;\n  int i, j;\n\n  for(i = 0; i < in; ++i){\n    piriod = 0;\n    pq[i][0] = numr; pq[i][1] = numc; pq[i][2] = nums;\n    for(j = 0; st[i][j] != '\\0'; ++j){\n      switch (st[i][j]) {\n        case '(':\n          numr++;\n          break;\n        case '{':\n          numc++;\n          break;\n        case '[':\n          nums++;\n          break;\n        case ')':\n          numr--;\n          break;\n        case '}':\n          numc--;\n          break;\n        case ']':\n          nums--;\n          break;\n        case '.':\n          if(!j){\n            for(; st[i][j] == '.'; ++j)\n              piriod++;\n            --j;\n          }\n          break;\n      }\n    }\n    indent_p[i] = piriod++;\n  }\n}\n\nbst_t Indent_check(int pq[10][3], int indent[10], bst_t *bst, int in){\n  bst_t oks;\n  int res, f, k = 0;\n\n  for(int i = 0; i < 8000; ++i){\n    f = 1;\n    for(int j = 0; j < in; ++j){\n      res = (pq[j][0] * bst->b[i].r) + (pq[j][1] * bst->b[i].c) + (pq[j][2] * bst->b[i].s);\n      if(res != indent[j]){\n        f = 0;\n        break;\n      }\n    }\n    if(f){\n      oks.b[k] = bst->b[i];\n      n++;\n      k++;\n    }\n  }\n  return oks;\n}\n\nvoid Indent(int q[10][3], bst_t *oks, int in){\n  int temp, res, f;\n\n  for(int i = 0; i < in; i++){\n    f = 1;\n    for(int j = 0; j < n; j++){\n      if(j != 0)\n        temp = res;\n      res = q[i][0] * oks->b[j].r + q[i][1] * oks->b[j].c + q[i][2] * oks->b[j].s;\n      if(n == 1)\n        indent_q[i] = res;\n      else if(j != 0 && temp != res){\n        indent_q[i] = -1;\n        f = 0;\n        break;\n      }\n    }\n    if(f)\n      indent_q[i] = res;\n  }\n}\n\nvoid Allset(bst_t *bst){\n  bra_t bra;\n  int l = 0;\n\n  for(int i = 1; i <= 20; ++i){\n    for(int j = 1; j <= 20; ++j){\n      for(int k = 1; k <= 20; ++k){\n        bra.r = i; bra.c = j; bra.s = k;\n        bst->b[l] = bra;\n        l++;\n      }\n    }\n  }\n}\n\nint main (){\n  char p[10][90], q[10][90], st[90];  //入力文字列\n  bst_t all, oks;\n  int ans[10];\n  int i, j;\n  int pin, qin;  //行数\n\n  Allset(&all);\n  while (1) {\n    scanf(\"%d%d\", &pin, &qin);\n    if(pin == 0 && qin == 0)\n      return 0;\n    n = 0;\n    for( i = 0; i < pin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        p[i][j] = st[j];\n      p[i][j] = '\\0';\n    }\n    Check_b(p, pin, p_b);\n    oks = Indent_check(p_b, indent_p, &all, pin);\n    for( i = 0; i < qin; i++){\n      scanf(\"%s\", st);\n      for( j = 0; st[j] != '\\0'; j++)\n        q[i][j] = st[j];\n      q[i][j] = '\\0';\n    }\n    Check_b(q, qin, q_b);\n    Indent(q_b, &oks, qin);\n    for( i = 0; i < qin - 1; i++)\n      printf(\"%d \", indent_q[i]);\n    printf(\"%d\\n\", indent_q[i]);\n  }\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAXSIZE 80\n\nint main() {\n  int i, j = 0, p, q, numr = 0, numc = 0, nums = 0, indent_r = -1, indent_c = -1, indent_s = -1, indentline[9], piriod = 0, count = 0,\n      ro = 0, co = 0, so = 0, indent_rc = -1, indent_rs = -1, indent_cs = -1, indent_rcs = -1, rer_rcs = 0, rec_rcs = 0, res_rcs = 0,\n      rer_rc = 0, rer_rs = 0, rec_rc = 0, rec_cs = 0, res_rs = 0, res_cs = 0;\n  char str[MAXSIZE];\n\n  while(1){\n    numr = 0; numc = 0; nums = 0; indent_r = -1; indent_c = -1; indent_s = -1; indentline[9]; piriod = 0; count = 0;\n    ro = 0; co = 0; so = 0; indent_rc = -1; indent_rs = -1; indent_cs = -1; indent_rcs = -1; rer_rcs = 0; rec_rcs = 0; res_rcs = 0;\n    rer_rc = 0; rer_rs = 0; rec_rc = 0; rec_cs = 0; res_rs = 0; res_cs = 0; j = 0;\n    scanf(\"%d %d\", &p, &q);  //p,qの入力\n    if(p == 0 && q == 0)\n      return 0;\n    while(1){\n      if(count == p)\n        break;\n      piriod = 0;\n      scanf(\"%s\", str);  //p行分の入力\n      for(i = 0; str[i] != '\\0'; i++){\n        switch (str[i]) {\n          case '(':\n            //fr = 1;\n            numr++;\n            break;\n          case '{':\n            //fc = 1;\n            numc++;\n            break;\n          case '[':\n            //fs = 1;\n            nums++;\n            break;\n          case ')':\n            numr--;\n            break;\n          case '}':\n            numc--;\n            break;\n          case ']':\n            nums--;\n            break;\n          case '.':\n            if(!i){\n              for(; str[i] == '.'; i++)\n                piriod++;\n              i--;\n              if(numr > 0 && indent_r == -1){\n                if(numc == 0 && nums == 0){\n                  if(numr == 1)\n                    indent_r = piriod;\n                  else\n                    indent_r = piriod / numr;\n                }\n                else if(numc > 0 && nums > 0 && indent_c != -1 && indent_s != -1)\n                  indent_r = piriod - (indent_c + indent_s);\n                else if(numc > 0 && indent_c != -1)\n                  indent_r = piriod - indent_c;\n                else if(nums > 0 && indent_s != -1)\n                  indent_r = piriod - indent_s;\n                else{}\n              }\n              if(numc > 0 && indent_c == -1){\n                if(numr == 0 && nums == 0){\n                  if(numc == 1)\n                    indent_c = piriod;\n                  else\n                    indent_c = piriod / numc;\n                }\n                else if(numr > 0 && nums > 0 && indent_r != -1 && indent_s != -1)\n                  indent_c = piriod - (indent_r + indent_s);\n                else if(numr > 0 && indent_r != -1)\n                  indent_c = piriod - indent_r;\n                else if(nums > 0 && indent_s != -1)\n                  indent_c = piriod - indent_s;\n                else{}\n              }\n              if (nums > 0 && indent_s == -1) {\n                if(numr == 0 && numc == 0){\n                  if(nums == 1)\n                    indent_s = piriod;\n                  else\n                    indent_s = piriod / nums;\n                }\n                else if(numr > 0 && numc> 0 && indent_r != -1 && indent_c != -1)\n                  indent_s = piriod - (indent_r + indent_c);\n                else if(numr > 0 && indent_r != -1)\n                  indent_s = piriod - indent_r;\n                else if(numc > 0 && indent_c != -1)\n                  indent_s = piriod - indent_c;\n                else{}\n              }\n              if(numr > 0 && numc > 0 && nums > 0 && indent_r == -1 && indent_c == -1 && indent_s == -1){\n                if(piriod == 3){\n                  indent_r = 1; indent_c = 1; indent_s = 1;\n                }\n                else if(piriod == 60){\n                  indent_r = 20; indent_c = 20; indent_s = 20;\n                }\n                else{\n                  indent_rcs = piriod; rer_rcs = numr; rec_rcs = numc; res_rcs = nums;\n                }\n              }\n              else if(numr > 0 && numc > 0 && indent_r == -1 && indent_c == -1){\n                if(piriod == 40){\n                  indent_r = 20; indent_c = 20;\n                }\n                else{\n                  indent_rc = piriod; rer_rc = numr; rec_rc = numc;\n                }\n              }\n              else if(numr > 0 && nums > 0 && indent_r == -1 && indent_s == -1){\n                if(piriod == 40){\n                  indent_r = 20; indent_s = 20;\n                }\n                else{\n                  indent_rs = piriod; rer_rs = numr; res_rs = nums;\n                }\n              }\n              else if(numc > 0 && nums > 0 && indent_c == -1 && indent_s == -1){\n                if(piriod == 40){\n                  indent_s = 20; indent_c = 20;\n                }\n                else{\n                  indent_cs = piriod; rec_cs = numc; res_cs = nums;\n                }\n              }\n            }\n            break;\n        }\n      }\n      //printf(\"%d\\n\", piriod);\n      //printf(\"%d %d %d\\n\", numr, numc, nums);\n      count++;\n    }\n    //printf(\"%d %d %d\\n\", indent_r, indent_c, indent_s);\n    count = 0;\n    while(1){\n      if(count == q)\n        break;\n      scanf(\"%s\", str);  //q行分の入力\n      if((indent_r == -1 && ro > 0) || (indent_c == -1 && co > 0) || (indent_s == -1 && so > 0)){\n        if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && (indent_s == -1 && so > 0)\n           && rer_rcs == ro && rec_rcs == co && res_rcs == so)\n           indentline[j] = indent_rcs;\n        else if((indent_r == -1 && ro > 0) && (indent_c == -1 && co > 0) && rer_rc == ro && rec_rc == co)\n          indentline[j] = indent_rc;\n        else if((indent_r == -1 && ro > 0) && (indent_s == -1 && so > 0) && rer_rs == ro && res_rs == so)\n          indentline[j] = indent_rs;\n        else if((indent_c == -1 && co > 0) && (indent_s == -1 && so > 0) && rec_cs == co && res_cs == so)\n          indentline[j] = indent_cs;\n        else\n          indentline[j] = -1;\n      }\n      else\n        indentline[j] = indent_r * ro + indent_c * co + indent_s * so;\n      for(i = 0; str[i]; i++){\n        switch (str[i]) {\n          case '(':\n            ro++;\n            break;\n          case '{':\n            co++;\n            break;\n          case '[':\n            so++;\n            break;\n          case ')':\n            ro--;\n            break;\n          case '}':\n            co--;\n            break;\n          case ']':\n            so--;\n            break;\n        }\n      }\n      count++;\n      j++;\n    }\n    for(j = 0; j < q; j++)\n      printf(\"%d \", indentline[j]);\n    printf(\"\\n\");\n  }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true) {\n\t\t\tint p = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tif (p + q == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tArrayList<ArrayList<Integer>> equation = new ArrayList<ArrayList<Integer>>();\n\t\t\tArrayList<ArrayList<Integer>> solve = new ArrayList<ArrayList<Integer>>();\n\t\t\tint br = 0;\n\t\t\tint bc = 0;\n\t\t\tint bs = 0;\n\t\t\tfor(int i=0;i<p;i++) {\n\t\t\t\tString s = sc.next();\n\t\t\t\tint j = 0;\n\t\t\t\tint dots = 0;\n\t\t\t\tfor(j=0;j<s.length();j++) {\n\t\t\t\t\tchar c = s.charAt(j);\n\t\t\t\t\tif (c == '.') {\n\t\t\t\t\t\tdots++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (true) {\n\t\t\t\t\tArrayList<Integer> al = new ArrayList<Integer>();\n\t\t\t\t\tal.add(br);\n\t\t\t\t\tal.add(bc);\n\t\t\t\t\tal.add(bs);\n\t\t\t\t\tal.add(dots);\n\t\t\t\t\tequation.add(al);\n\t\t\t\t}\n\t\t\t\tfor(;j<s.length();j++) {\n\t\t\t\t\tchar c = s.charAt(j);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase '(':\n\t\t\t\t\t\tbr++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ')':\n\t\t\t\t\t\tbr--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tbc++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tbc--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tbs++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tbs--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(ArrayList<Integer> al:equation) {\n\t\t\t\t//System.out.println(al);\n\t\t\t}\n\t\t\tfor(br=1;br<=20;br++) {\n\t\t\t\tfor(bc=1;bc<=20;bc++) {\n\t\t\t\t\tfor(bs=1;bs<=20;bs++) {\n\t\t\t\t\t\tboolean flag = true;\n\t\t\t\t\t\tfor(ArrayList<Integer> al:equation) {\n\t\t\t\t\t\t\tif (br * al.get(0) + bc * al.get(1) + bs * al.get(2) != al.get(3)) {\n\t\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (flag) {\n\t\t\t\t\t\t\tArrayList<Integer> al = new ArrayList<Integer>();\n\t\t\t\t\t\t\tal.add(br);\n\t\t\t\t\t\t\tal.add(bc);\n\t\t\t\t\t\t\tal.add(bs);\n\t\t\t\t\t\t\tsolve.add(al);\n\t\t\t\t\t\t\t//System.out.println(br + \",\" + bc + \",\" + bs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbr = 0;\n\t\t\tbc = 0;\n\t\t\tbs = 0;\n\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\tint dots = -1;\n\t\t\t\tfor(ArrayList<Integer> sol:solve) {\n\t\t\t\t\tint d = br * sol.get(0) + bc * sol.get(1) + bs * sol.get(2);\n\t\t\t\t\tif (dots == -1) {\n\t\t\t\t\t\tdots = d;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif (dots != d) {\n\t\t\t\t\t\t\tdots = -2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dots < 0) {\n\t\t\t\t\tdots = -1;\n\t\t\t\t}\n\t\t\t\tif (i != q-1) {\n\t\t\t\t\tSystem.out.print(dots + \" \");\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(dots);\n\t\t\t\t}\n\t\t\t\tString s = sc.next();\n\t\t\t\tfor(int j=0;j<s.length();j++) {\n\t\t\t\t\tchar c = s.charAt(j);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase '(':\n\t\t\t\t\t\tbr++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ')':\n\t\t\t\t\t\tbr--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tbc++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tbc--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tbs++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tbs--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import static java.lang.System.*;\n\nimport java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Random;\nimport java.util.Scanner;\n\nclass Main {\n    public static Scanner sc = new Scanner(in);\n    public static Random rand=new Random();\n\n    class IndD{\n    \tint r,s,c;\n    \tint indent;\n\n    \tpublic IndD(int _r,int _s,int _c,int _indent) {\n    \t\tr=_r;s=_s;c=_c;indent=_indent;\n    \t}\n    }\n\n    class Res{\n    \tint r,s,c;\n\n    \tpublic Res(int _r,int _s,int _c) {\n    \t\tr=_r;s=_s;c=_c;\n    \t}\n    }\n\n    public void run() {\n    \twhile(true){\n    \t\tint p=sc.nextInt(),q=sc.nextInt();\n\t    \tif(p==0 && q==0)return;\n\n\n\t    \tIndD[] ps=new IndD[p];\n    \t\tint r=0,c=0,s=0;\n\t    \tfor(int i=0;i<p;i++){\n\t    \t\tString str=sc.next();\n\n\t    \t\tint indent=0;\n\t    \t\tfor(int j=0;j<str.length();j++){\n\t    \t\t\tif(str.charAt(j)=='.')indent++;\n\t    \t\t\telse break;\n\t    \t\t}\n\n\t    \t\tps[i]=new IndD(r,s,c, indent);\n\n\t    \t\tfor(char ca :str.toCharArray()){\n\t    \t\t\tif(ca=='(')r++;\n\t    \t\t\tif(ca==')')r--;\n\t    \t\t\tif(ca=='[')s++;\n\t    \t\t\tif(ca==']')s--;\n\t    \t\t\tif(ca=='{')c++;\n\t    \t\t\tif(ca=='}')c--;\n\t    \t\t}\n\t    \t}\n\n\t    \tIndD[] qs=new IndD[q];\n    \t\tr=c=s=0;\n\t    \tfor(int i=0;i<q;i++){\n\t    \t\tString str=sc.next();\n\t    \t\tint indent=0;\n\t    \t\tfor(int j=0;j<str.length();j++){\n\t    \t\t\tif(str.charAt(j)=='.')indent++;\n\t    \t\t\telse break;\n\t    \t\t}\n\t    \t\tqs[i]=new IndD(r,s,c, indent);\n\t    \t\tfor(char ca :str.toCharArray()){\n\t    \t\t\tif(ca=='(')r++;\n\t    \t\t\tif(ca==')')r--;\n\t    \t\t\tif(ca=='[')s++;\n\t    \t\t\tif(ca==']')s--;\n\t    \t\t\tif(ca=='{')c++;\n\t    \t\t\tif(ca=='}')c--;\n\t    \t\t}\n\t    \t}\n\n\n\t    \tList<Res> reslist=new ArrayList<Res>();\n\n\t    \tfor(int R=1;R<=20;R++)for(int C=1;C<=20;C++)for(int S=1;S<=20;S++){\n\t    \t\tboolean ok=true;\n\t    \t\tfor(int i=0;i<p;i++){\n\t    \t\t\tif(R*ps[i].r+C*ps[i].c+S*ps[i].s==ps[i].indent){\n\t    \t\t\t}else ok=false;\n\t    \t\t}\n\t    \t\tif(ok)reslist.add(new Res(R,S,C));\n\n\t    \t}\n\n\t    \tboolean isF=true;\n\t    \tfor(IndD qd:qs){\n\t    \t\tint ind=-2;\n\t    \t\tfor(Res res:reslist){\n\t    \t\t\tif(ind==-2)ind=res.c*qd.c+res.s*qd.s+res.r*qd.r;\n\n\t    \t\t\tif(ind!=res.c*qd.c+res.s*qd.s+res.r*qd.r){\n\t    \t\t\t\tind=-1;break;\n\t    \t\t\t}\n\t    \t\t}\n\n\t    \t\tif(ind<0){\n\t    \t\t\tpr((isF?\"\":\" \")+(-1));\n\t    \t\t}else{\n\t    \t\t\tpr((isF?\"\":\" \")+ind);\n\t    \t\t}\n\n\t    \t\tisF=false;\n\t    \t}\n\t    \tln();\n    \t}\n    }\n    public static void main(String[] args) {\n        new Main().run();\n    }\n\n\n\t//output lib\n\tstatic final String br = System.getProperty(\"line.separator\");\n\tstatic final String[] asep = new String[] { \"\", \" \", br, br + br };\n\n\tstatic String str(Boolean o) {\n\t\treturn o ? \"YES\" : \"NO\";\n\t}\n\n\t//\tstatic String str(Double o){\n\t//\t\treturn String.format(\"%.8f\",o);\n\t//\t}\n\tstatic <K, V> String str(Map<K, V> map) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tboolean isFirst = true;\n\t\tfor (Entry<K, V> set : map.entrySet()) {\n\t\t\tif (!isFirst)\n\t\t\t\tsb.append(br);\n\t\t\tsb.append(str(set.getKey())).append(\":\").append(str(set.getValue()));\n\t\t\tisFirst = false;\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tstatic <E> String str(Collection<E> list) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tboolean isFirst = true;\n\t\tfor (E e : list) {\n\t\t\tif (!isFirst)\n\t\t\t\tsb.append(\" \");\n\t\t\tsb.append(str(e));\n\t\t\tisFirst = false;\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tstatic String str(Object o) {\n\t\tint depth = _getArrayDepth(o);\n\t\tif (depth > 0)\n\t\t\treturn _strArray(o, depth);\n\t\tClass<?> c = o.getClass();\n\t\tif (c.equals(Boolean.class))\n\t\t\treturn str((Boolean) o);\n\t\t//if(c.equals(Double.class))return str((Double)o);\n\n\t\treturn o.toString();\n\t}\n\n\tstatic int _getArrayDepth(Object o) {\n\t\tif (!o.getClass().isArray() || Array.getLength(o) == 0)\n\t\t\treturn 0;\n\t\treturn 1 + _getArrayDepth(Array.get(o, 0));\n\t}\n\n\tstatic String _strArray(Object o, int depth) {\n\t\tif (depth == 0)\n\t\t\treturn str(o);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0, len = Array.getLength(o); i < len; i++) {\n\t\t\tif (i != 0)\n\t\t\t\tsb.append(asep[depth]);\n\t\t\tsb.append(_strArray(Array.get(o, i), depth - 1));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tstatic void pr(Object... os) {\n\t\tboolean isFirst = true;\n\t\tfor (Object o : os) {\n\t\t\tif (!isFirst)\n\t\t\t\tout.print(\" \");\n\t\t\tout.print(o);\n\t\t\tisFirst = false;\n\t\t}\n\t}\n\n\tstatic void ln() {\n\t\tout.println();\n\t}\n\n\tstatic void ln(Object... os) {\n\t\tfor (Object o : os) {\n\t\t\tpr(o);\n\t\t\tln();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\n\tprivate void doit(){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint p = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tif((p|q) == 0)break;\n\t\t\tString [] data = new String[p];\n\t\t\tint [] datacount = new int[3];\n\t\t\tint [][] datacountrecord = new int[p][3];\n\t\t\tint [] indent = new int[p];\n\t\t\tfor(int i = 0; i < p; i++){\n\t\t\t\tdata[i] = sc.next();\n\t\t\t\tfor(int j = 0; j < data[i].length(); j++){\n\t\t\t\t\tif(data[i].charAt(j) != '.'){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tindent[i]++;\n\t\t\t\t}\n\t\t\t\tdatacountrecord[i][0] = datacount[0];\n\t\t\t\tdatacountrecord[i][1] = datacount[1];\n\t\t\t\tdatacountrecord[i][2] = datacount[2];\n\t\t\t\tfor(int j = 0; j < data[i].length(); j++){\n\t\t\t\t\tif(data[i].charAt(j) == '('){\n\t\t\t\t\t\tdatacount[0]++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data[i].charAt(j) == '{'){\n\t\t\t\t\t\tdatacount[1]++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data[i].charAt(j) == '['){\n\t\t\t\t\t\tdatacount[2]++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data[i].charAt(j) == ')'){\n\t\t\t\t\t\tdatacount[0]--;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data[i].charAt(j) == '}'){\n\t\t\t\t\t\tdatacount[1]--;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data[i].charAt(j) == ']'){\n\t\t\t\t\t\tdatacount[2]--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tString [] data2 = new String[q];\n\t\t\tint [] data2count = new int[3];\n\t\t\tint [][] data2countrecord = new int[q][3];\n\t\t\tfor(int i = 0; i < q;i++){\n\t\t\t\tdata2[i] = sc.next();\n\t\t\t\tdata2countrecord[i][0] = data2count[0];\n\t\t\t\tdata2countrecord[i][1] = data2count[1];\n\t\t\t\tdata2countrecord[i][2] = data2count[2];\n\t\t\t\tfor(int j = 0; j < data2[i].length(); j++){\n\t\t\t\t\tif(data2[i].charAt(j) == '('){\n\t\t\t\t\t\tdata2count[0]++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data2[i].charAt(j) == '{'){\n\t\t\t\t\t\tdata2count[1]++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data2[i].charAt(j) == '['){\n\t\t\t\t\t\tdata2count[2]++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data2[i].charAt(j) == ')'){\n\t\t\t\t\t\tdata2count[0]--;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data2[i].charAt(j) == '}'){\n\t\t\t\t\t\tdata2count[1]--;\n\t\t\t\t\t}\n\t\t\t\t\telse if(data2[i].charAt(j) == ']'){\n\t\t\t\t\t\tdata2count[2]--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint [] cand = new int[3];\n\t\t\tboolean first = true;\n\t\t\tboolean [] isNA = new boolean[q];\n\t\t\tfor(int r = 1; r <= 20;r++){\n\t\t\t\tfor(int c = 1; c <= 20; c++){\n\t\t\t\t\tfor(int s = 1; s <= 20; s++){\n\t\t\t\t\t\tif(isvalid(r,c,s, datacountrecord, indent)){\n\t\t\t\t\t\t\tif(first){\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t\tcand[0] = r;\n\t\t\t\t\t\t\t\tcand[1] = c;\n\t\t\t\t\t\t\t\tcand[2] = s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tint [] cand2 = {r,c,s};\n\t\t\t\t\t\t\t\tfor(int i = 0; i < q; i++){\n\t\t\t\t\t\t\t\t\tif(isNA[i]) continue;\n\t\t\t\t\t\t\t\t\tint value1 = calc(data2countrecord[i], cand);\n\t\t\t\t\t\t\t\t\tint value2 = calc(data2countrecord[i], cand2);\n\t\t\t\t\t\t\t\t\tif(value1 != value2){\n\t\t\t\t\t\t\t\t\t\tisNA[i] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tfor(int i = 0; i < q; i++){\n\t\t\t\tif(isNA[i]){\n\t\t\t\t\tsb.append(\" \" + -1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint value = calc(data2countrecord[i], cand);\n\t\t\t\t\tsb.append(\" \" + value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb.substring(1));\n\t\t}\n\t}\n\n\tprivate int calc(int[] count, int[] cand) {\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tif(count[i] > 0 && cand[i] <= 0){\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tsum += count[i] * cand[i];\n\t\t}\n\t\treturn sum;\n\t}\n\n\tprivate boolean isvalid(int r, int c, int s, int [][] data, int [] indent) {\n\t\tfor(int i = 0; i < indent.length; i++){\n\t\t\tif(indent[i] == (r * data[i][0] + c * data[i][1] + s * data[i][2])){\n\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate void debug(Object... o) {\n\t\tSystem.out.println(\"debug = \" + Arrays.deepToString(o));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().doit();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int[] P = new int[42];\n\tstatic int[] T = new int[42];\n\n\tpublic static void main(String[] args) {\n\t\twhile (true) {\n\t\t\tint P = sc.nextInt();\n\t\t\tif (P == 0) break;\n\t\t\tint Q = sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\tint[] depth = new int[3];\n\t\t\tint[][] indent = new int[P][4];\n\t\t\tfor (int i = 0; i < P; ++i) {\n\t\t\t\tchar[] line = sc.nextLine().toCharArray();\n\t\t\t\tindent[i][0] = depth[0];\n\t\t\t\tindent[i][1] = depth[1];\n\t\t\t\tindent[i][2] = depth[2];\n\t\t\t\tfor (int j = 0;; ++j) {\n\t\t\t\t\tif (line[j] != '.') {\n\t\t\t\t\t\tindent[i][3] = j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tupdateDepth(line, depth);\n\t\t\t}\n\t\t\tArrayList<Amount> list = new ArrayList<Amount>();\n\t\t\tfor (int R = 1; R <= 20; ++R) {\n\t\t\t\tfor (int C = 1; C <= 20; ++C) {\n\t\t\t\t\tfor (int S = 1; S <= 20; ++S) {\n\t\t\t\t\t\tboolean match = true;\n\t\t\t\t\t\tfor (int i = 0; i < P; ++i) {\n\t\t\t\t\t\t\tif (indent[i][0] * R + indent[i][1] * C + indent[i][2] * S != indent[i][3]) {\n\t\t\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tlist.add(new Amount(R, C, S));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < Q; ++i) {\n\t\t\t\tchar[] line = sc.nextLine().toCharArray();\n\t\t\t\tint ans = -9999;\n\t\t\t\tfor (Amount a : list) {\n\t\t\t\t\tint c = a.a[0] * depth[0] + a.a[1] * depth[1] + a.a[2] * depth[2];\n\t\t\t\t\tif (ans > 0 && ans != c) {\n\t\t\t\t\t\tans = -9999;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tans = c;\n\t\t\t\t}\n\t\t\t\tif (i != 0) System.out.print(\" \");\n\t\t\t\tSystem.out.print(ans < 0 ? -1 : ans);\n\t\t\t\tupdateDepth(line, depth);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n\tstatic void updateDepth(char[] line, int[] depth) {\n\t\tfor (int i = 0; i < line.length; ++i) {\n\t\t\tswitch (line[i]) {\n\t\t\tcase '(':\n\t\t\t\tdepth[0]++;\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tdepth[1]++;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tdepth[2]++;\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\tdepth[0]--;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tdepth[1]--;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tdepth[2]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic class Amount {\n\t\tint[] a = new int[3];\n\n\t\tAmount(int R, int C, int S) {\n\t\t\ta[0] = R;\n\t\t\ta[1] = C;\n\t\t\ta[2] = S;\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.util.*;\n\npublic class Main {\n\tstatic int INF = 2 << 27;\n\tstatic int[] vx = {1,0,-1,0};\n\tstatic int[] vy = {0,1,0,-1};\n\tpublic static void main(String[] args) {\t\n\t\t//FastScanner sc = new FastScanner();\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\twhile(true) {\n\t\t\tint p = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tif(p == 0 && q == 0) break;\n\t\t\tchar[][] inx = new char[p][];\n\t\t\tfor(int i = 0; i < p; i++) {\n\t\t\t\tinx[i] = sc.next().toCharArray();\n\t\t\t}\n\t\t\tArrayList<Integer> rr = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> cc = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> ss = new ArrayList<Integer>();\n\t\t\tfor(int i = 1; i <= 20; i++) {\n\t\t\t\tfor(int j = 1; j <= 20; j++) {\n\t\t\t\t\tIN:for(int k = 1; k <= 20; k++) {\n\t\t\t\t\t\tint rrr = 0;\n\t\t\t\t\t\tint ccc = 0;\n\t\t\t\t\t\tint sss = 0;\n\t\t\t\t\t\tfor(int l = 0; l < p; l++) {\n\t\t\t\t\t\t\tint in = 0;\n\t\t\t\t\t\t\tfor(int m = 0; m < inx[l].length; m++) {\n\t\t\t\t\t\t\t\tif(inx[l][m] != '.') break;\n\t\t\t\t\t\t\t\tin++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(rrr * i + ccc * j + sss * k != in) continue IN;\n\t\t\t\t\t\t\tfor(int m = 0; m < inx[l].length; m++) {\n\t\t\t\t\t\t\t\tif(inx[l][m] == '(') rrr++;\n\t\t\t\t\t\t\t\tif(inx[l][m] == ')') rrr--;\n\t\t\t\t\t\t\t\tif(inx[l][m] == '{') ccc++;\n\t\t\t\t\t\t\t\tif(inx[l][m] == '}') ccc--;\n\t\t\t\t\t\t\t\tif(inx[l][m] == '[') sss++;\n\t\t\t\t\t\t\t\tif(inx[l][m] == ']') sss--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trr.add(i);\n\t\t\t\t\t\tcc.add(j);\n\t\t\t\t\t\tss.add(k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint rrr = 0;\n\t\t\tint ccc = 0;\n\t\t\tint sss = 0;\n\t\t\tfor(int i = 0; i < q; i++) {\n\t\t\t\tint sum = -2;\n\t\t\t\tfor(int j = 0; j < rr.size(); j++) {\n\t\t\t\t\tint ll = rrr * rr.get(j) + ccc * cc.get(j) + sss * ss.get(j);\n\t\t\t\t\tif(sum != -2 && sum != ll) sum = -1;\n\t\t\t\t\telse if(sum == -2) sum = ll;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(sum == -2) sum = -1;\n\t\t\t\tif(i != 0) System.out.print(\" \");\n\t\t\t\tSystem.out.print(sum);\n\t\t\t\tif(i != q) {\n\t\t\t\t\tchar[] in = sc.next().toCharArray();\n\t\t\t\t\tfor(int j = 0; j < in.length; j++) {\n\t\t\t\t\t\tif(in[j] == '(') rrr++;\n\t\t\t\t\t\tif(in[j] == ')') rrr--;\n\t\t\t\t\t\tif(in[j] == '{') ccc++;\n\t\t\t\t\t\tif(in[j] == '}') ccc--;\n\t\t\t\t\t\tif(in[j] == '[') sss++;\n\t\t\t\t\t\tif(in[j] == ']') sss--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile(true){\n\t\t\tString[] in = sc.nextLine().split(\" \");\n\t\t\t\n\t\t\tfinal int p = Integer.parseInt(in[0]);\n\t\t\tfinal int q = Integer.parseInt(in[1]);\n\t\t\t\n\t\t\tif(p == 0 && q == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint[][][] indent = new int[21][21][21];\n\t\t\tfor(int i = 0; i <= 20; i++){\n\t\t\t\tfor(int j = 0; j <= 20; j++){\n\t\t\t\t\tfor(int k = 0; k <= 20; k++){\n\t\t\t\t\t\tindent[i][j][k] = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tindent[0][0][0] = 0;\n\t\t\t\n\t\t\t{\n\t\t\t\tint r = 0, c = 0, s = 0;\n\t\t\t\t\n\t\t\t\tfor(int i = 0; i < p; i++){\n\t\t\t\t\tchar[] input = sc.nextLine().toCharArray();\n\t\t\t\t\t\n\t\t\t\t\t//System.out.println(r + \" \" + c + \" \" + s);\n\t\t\t\t\t\n\t\t\t\t\tint indent_count = 0;\n\t\t\t\t\twhile(input[indent_count] == '.'){\n\t\t\t\t\t\tindent_count++;\n\t\t\t\t\t}\n\t\t\t\t\t//System.out.println(indent_count);\n\t\t\t\t\tindent[r][c][s] = indent_count;\n\t\t\t\t\t\n\t\t\t\t\tfor(int l = indent_count; l < input.length; l++){\n\t\t\t\t\t\tif(input[l] == '('){\n\t\t\t\t\t\t\tr++;\n\t\t\t\t\t\t}else if(input[l] == ')'){\n\t\t\t\t\t\t\tr--;\n\t\t\t\t\t\t}else if(input[l] == '{'){\n\t\t\t\t\t\t\tc++;\n\t\t\t\t\t\t}else if(input[l] == '}'){\n\t\t\t\t\t\t\tc--;\n\t\t\t\t\t\t}else if(input[l] == '['){\n\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t}else if(input[l] == ']'){\n\t\t\t\t\t\t\ts--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//lower\n\t\t\tfor(int r = 0; r <= 20; r++){\n\t\t\t\tfor(int c = 0; c <= 20; c++){\n\t\t\t\t\tfor(int s = 0; s <= 20; s++){\n\t\t\t\t\t\tif(r == 0 && c == 0 && s == 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}else if(indent[r][c][s] < 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int d = 2; d <= 20; d++){\n\t\t\t\t\t\t\tif(r % d == 0 && c % d == 0 && s % d == 0){\n\t\t\t\t\t\t\t\tindent[r / d][c / d][s / d] = indent[r][c][s] / d;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(indent[0][1][1] == 40){\n\t\t\t\tindent[0][0][1] = indent[0][1][0] = 20;\n\t\t\t}\n\t\t\tif(indent[1][0][1] == 40){\n\t\t\t\tindent[1][0][0] = indent[0][0][1] = 20;\n\t\t\t}\n\t\t\tif(indent[1][1][0] == 40){\n\t\t\t\tindent[1][0][0] = indent[0][1][0] = 20;\n\t\t\t}\n\t\t\tif(indent[1][1][1] == 60){\n\t\t\t\tindent[1][0][0] = indent[0][1][0] = indent[0][0][1] = 20;\n\t\t\t}\n\t\t\tif(indent[0][1][1] == 2){\n\t\t\t\tindent[0][0][1] = indent[0][1][0] = 1;\n\t\t\t}\n\t\t\tif(indent[1][0][1] == 2){\n\t\t\t\tindent[1][0][0] = indent[0][0][1] = 1;\n\t\t\t}\n\t\t\tif(indent[1][1][0] == 2){\n\t\t\t\tindent[1][0][0] = indent[0][1][0] = 1;\n\t\t\t}\n\t\t\tif(indent[1][1][1] == 3){\n\t\t\t\tindent[1][0][0] = indent[0][1][0] = indent[0][0][1] = 1;\n\t\t\t}\n\t\t\t\n\t\t\t//diff\n\t\t\tfor(int r = 0; r <= 20; r++){\n\t\t\t\tfor(int c = 0; c <= 20; c++){\n\t\t\t\t\tfor(int s = 0; s <= 20; s++){\n\t\t\t\t\t\tif(r == 0 && c == 0 && s == 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}else if(indent[r][c][s] < 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int r_ = r; r_ >= 0; r_--){\n\t\t\t\t\t\t\tfor(int c_ = c; c_ >= 0; c_--){\n\t\t\t\t\t\t\t\tfor(int s_ = s; s_ >= 0; s_--){\n\t\t\t\t\t\t\t\t\tif(r_ == 0 && c_ == 0 && s_ == 0){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}else if(indent[r_][c_][s_] < 0){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//System.out.println((r - r_) + \" \" + (c - c_) + \" \" + (s - s_));\n\t\t\t\t\t\t\t\t\tindent[r - r_][c - c_][s - s_] = indent[r][c][s] - indent[r_][c_][s_];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//accum\n\t\t\tfor(int r = 0; r <= 20; r++){\n\t\t\t\tfor(int c = 0; c <= 20; c++){\n\t\t\t\t\tfor(int s = 0; s <= 20; s++){\n\t\t\t\t\t\tif(r == 0 && c == 0 && s == 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}else if(indent[r][c][s] < 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int r_ = 0; r_ + r <= 20; r_++){\n\t\t\t\t\t\t\tfor(int c_ = 0; c_ + c <= 20; c_++){\n\t\t\t\t\t\t\t\tfor(int s_ = 0; s_ + s <= 20; s_++){\n\t\t\t\t\t\t\t\t\tif(r_ == 0 && c_ == 0 && s_ == 0){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}else if(indent[r_][c_][s_] < 0){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//System.out.println((r + r_) + \" \" + (c + c_) + \" \" + (s + s_));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tindent[r + r_][c + c_][s + s_] = indent[r][c][s] + indent[r_][c_][s_];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\t//upper\n\t\t\tfor(int r = 0; r <= 20; r++){\n\t\t\t\tfor(int c = 0; c <= 20; c++){\n\t\t\t\t\tfor(int s = 0; s <= 20; s++){\n\t\t\t\t\t\tif(r == 0 && c == 0 && s == 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}else if(indent[r][c][s] < 0){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int d = 2; d <= 20; d++){\n\t\t\t\t\t\t\t//System.out.println(r * d + \" \" + c * d + \" \" + s * d);\n\t\t\t\t\t\t\tif(r * d <= 20 && c * d <= 20 && s * d <= 20){\n\t\t\t\t\t\t\t\tindent[r * d][c * d][s * d] = indent[r][c][s] * d;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\t/*\n\t\t\tfor(int r = 0; r <= 10; r++){\n\t\t\t\tfor(int c = 0; c <= 10; c++){\n\t\t\t\t\tfor(int s = 0; s <= 10; s++){\n\t\t\t\t\t\tSystem.out.println(r + \" \" + c + \" \" + s + \" \" + indent[r][c][s]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\t\n\t\t\t{\n\t\t\t\tint r = 0, c = 0, s = 0;\n\t\t\t\t\n\t\t\t\tfor(int i = 0; i < q; i++){\n\t\t\t\t\tchar[] input = sc.nextLine().toCharArray();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.print((i == 0 ? \"\" : \" \") + indent[r][c][s]);\n\t\t\t\t\t\n\t\t\t\t\tfor(int l = 0; l < input.length; l++){\n\t\t\t\t\t\tif(input[l] == '('){\n\t\t\t\t\t\t\tr++;\n\t\t\t\t\t\t}else if(input[l] == ')'){\n\t\t\t\t\t\t\tr--;\n\t\t\t\t\t\t}else if(input[l] == '{'){\n\t\t\t\t\t\t\tc++;\n\t\t\t\t\t\t}else if(input[l] == '}'){\n\t\t\t\t\t\t\tc--;\n\t\t\t\t\t\t}else if(input[l] == '['){\n\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t}else if(input[l] == ']'){\n\t\t\t\t\t\t\ts--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args) {\n\t\twhile (true) {\n\t\t\tint P = sc.nextInt();\n\t\t\tif (P == 0) break;\n\t\t\tint Q = sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\tint[] depth = new int[3];\n\t\t\tint[][] indent = new int[P][4];\n\t\t\tfor (int i = 0; i < P; ++i) {\n\t\t\t\tchar[] line = sc.nextLine().toCharArray();\n\t\t\t\tindent[i][0] = depth[0];\n\t\t\t\tindent[i][1] = depth[1];\n\t\t\t\tindent[i][2] = depth[2];\n\t\t\t\tfor (int j = 0;; ++j) {\n\t\t\t\t\tif (line[j] != '.') {\n\t\t\t\t\t\tindent[i][3] = j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tupdate(line, depth);\n\t\t\t}\n\t\t\tArrayList<Amount> list = new ArrayList<Amount>();\n\t\t\tfor (int R = 1; R <= 20; ++R) {\n\t\t\t\tfor (int C = 1; C <= 20; ++C) {\n\t\t\t\t\tfor (int S = 1; S <= 20; ++S) {\n\t\t\t\t\t\tboolean match = true;\n\t\t\t\t\t\tfor (int i = 0; i < P; ++i) {\n\t\t\t\t\t\t\tif (indent[i][0] * R + indent[i][1] * C + indent[i][2] * S != indent[i][3]) {\n\t\t\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tlist.add(new Amount(R, C, S));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < Q; ++i) {\n\t\t\t\tchar[] line = sc.nextLine().toCharArray();\n\t\t\t\tint ans = -999;\n\t\t\t\tfor (Amount a : list) {\n\t\t\t\t\tint c = a.a[0] * depth[0] + a.a[1] * depth[1] + a.a[2] * depth[2];\n\t\t\t\t\tif (ans > 0 && ans != c) {\n\t\t\t\t\t\tans = -999;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tans = c;\n\t\t\t\t}\n\t\t\t\tSystem.out.print((i != 0 ? \" \" : \"\") + (ans < 0 ? -1 : ans));\n\t\t\t\tupdate(line, depth);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n\tstatic void update(char[] line, int[] depth) {\n\t\tfor (int i = 0; i < line.length; ++i) {\n\t\t\tswitch (line[i]) {\n\t\t\tcase '(':\n\t\t\t\tdepth[0]++;\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tdepth[1]++;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tdepth[2]++;\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\tdepth[0]--;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tdepth[1]--;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tdepth[2]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic class Amount {\n\t\tint[] a = new int[3];\n\n\t\tAmount(int R, int C, int S) {\n\t\t\ta[0] = R;\n\t\t\ta[1] = C;\n\t\t\ta[2] = S;\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tint p = scanner.nextInt();\n\t\t\tif (p == 0) {\n\t\t\t\tscanner.close();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint q = scanner.nextInt();\n\n\t\t\tint[] pr = new int[p];\n\t\t\tint[] pc = new int[p];\n\t\t\tint[] ps = new int[p];\n\t\t\tint[] indent = new int[p];\n\n\t\t\tString[] pStrings = new String[p];\n\t\t\tfor (int i = 0; i < p; i++) {\n\t\t\t\tpStrings[i] = scanner.next();\n\t\t\t\tif (i != 0) {\n\t\t\t\t\tpr[i] += pr[i - 1];\n\t\t\t\t\tpc[i] += pc[i - 1];\n\t\t\t\t\tps[i] += ps[i - 1];\n\t\t\t\t}\n\t\t\t\tpr[i] += pStrings[i].length() - pStrings[i].replaceAll(\"\\\\(\", \"\").length();\n\t\t\t\tpr[i] -= pStrings[i].length() - pStrings[i].replaceAll(\"\\\\)\", \"\").length();\n\t\t\t\tpc[i] += pStrings[i].length() - pStrings[i].replaceAll(\"\\\\{\", \"\").length();\n\t\t\t\tpc[i] -= pStrings[i].length() - pStrings[i].replaceAll(\"\\\\}\", \"\").length();\n\t\t\t\tps[i] += pStrings[i].length() - pStrings[i].replaceAll(\"\\\\[\", \"\").length();\n\t\t\t\tps[i] -= pStrings[i].length() - pStrings[i].replaceAll(\"\\\\]\", \"\").length();\n\t\t\t\tindent[i] = pStrings[i].length() - pStrings[i].replaceAll(\"^\\\\.*\", \"\").length();\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * indent[i]=R*(ro[i-1]-rc[i-1])+C*()+S*\n\t\t\t */\n\t\t\tArrayList<Integer[]> RCSs = new ArrayList<Integer[]>();\n\t\t\tfor (int R = 1; R <= 20; R++) {\n\t\t\t\tfor (int C = 1; C <= 20; C++) {\n\t\t\t\t\tfor (int S = 1; S <= 20; S++) {\n\t\t\t\t\t\tboolean check = true;\n\t\t\t\t\t\tfor (int i = 1; i < indent.length; i++) {\n\t\t\t\t\t\t\tint tmp = R * (pr[i - 1]) + C * (pc[i - 1]) + S * (ps[i - 1]);\n\t\t\t\t\t\t\tif (tmp != indent[i]) {\n\t\t\t\t\t\t\t\tcheck = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (check) {\n\t\t\t\t\t\t\tInteger[] add = { R, C, S };\n\t\t\t\t\t\t\tRCSs.add(add);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint qr = 0, qs = 0, qc = 0;\n\t\t\tfor (int i = 0; i < q; i++) {\n\t\t\t\tString qStrings = scanner.next();\n\t\t\t\tint ans = -1;\n\t\t\t\tfor (Integer[] RCS : RCSs) {\n\t\t\t\t\tint master = RCS[0] * qr + RCS[1] * qc + RCS[2] * qs;\n\t\t\t\t\tif (ans != -1 && ans != master) {\n\t\t\t\t\t\tans = -1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tans = master;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.print(ans);\n\t\t\t\tif (i < q - 1) {\n\t\t\t\t\tSystem.out.print(\" \");\n\t\t\t\t}\n\t\t\t\tqr += qStrings.length() - qStrings.replaceAll(\"\\\\(\", \"\").length();\n\t\t\t\tqr -= qStrings.length() - qStrings.replaceAll(\"\\\\)\", \"\").length();\n\t\t\t\tqc += qStrings.length() - qStrings.replaceAll(\"\\\\{\", \"\").length();\n\t\t\t\tqc -= qStrings.length() - qStrings.replaceAll(\"\\\\}\", \"\").length();\n\t\t\t\tqs += qStrings.length() - qStrings.replaceAll(\"\\\\[\", \"\").length();\n\t\t\t\tqs -= qStrings.length() - qStrings.replaceAll(\"\\\\]\", \"\").length();\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.util.*;\n\npublic class Main {\n\tstatic int INF = 2 << 27;\n\tstatic int[] vx = {1,0,-1,0};\n\tstatic int[] vy = {0,1,0,-1};\n\tpublic static void main(String[] args) {\t\n\t\t//FastScanner sc = new FastScanner();\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\twhile(true) {\n\t\t\tint p = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tif(p == 0 && q == 0) break;\n\t\t\tint[][] r = new int[p+1][2];\n\t\t\tint[][] c = new int[p+1][2];\n\t\t\tint[][] s = new int[p+1][2];\n\t\t\tint[] n = new int[p+1];\n\t\t\t\n\t\t\tfor(int i = 0; i < p; i++) {\n\t\t\t\tchar[] in = sc.next().toCharArray();\n\t\t\t\tfor(int j = 0; j < 2; j++) {\n\t\t\t\t\tr[i+1][j] = r[i][j];\n\t\t\t\t\tc[i+1][j] = c[i][j];\n\t\t\t\t\ts[i+1][j] = s[i][j];\n\t\t\t\t}\n\t\t\t\tboolean al = true;\n\t\t\t\tfor(int j = 0; j < in.length; j++) {\n\t\t\t\t\tif(al) {\n\t\t\t\t\t\tif(in[j] == '.') {\n\t\t\t\t\t\t\tn[i]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tal = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(in[j] == '(') r[i+1][0]++;\n\t\t\t\t\tif(in[j] == ')') r[i+1][0]--;\n\t\t\t\t\tif(in[j] == '{') c[i+1][0]++;\n\t\t\t\t\tif(in[j] == '}') c[i+1][0]--;\n\t\t\t\t\tif(in[j] == '[') s[i+1][0]++;\n\t\t\t\t\tif(in[j] == ']') s[i+1][0]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrayList<Integer> rr = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> cc = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> ss = new ArrayList<Integer>();\n\t\t\tfor(int i = 1; i <= 20; i++) {\n\t\t\t\tfor(int j = 1; j <= 20; j++) {\n\t\t\t\t\tIN:for(int k = 1; k <= 20; k++) {\n\t\t\t\t\t\tfor(int l = 0; l < p+1; l++) {\n\t\t\t\t\t\t\tint aa = i * r[l][0] + j * c[l][0] + k * s[l][0];\n\t\t\t\t\t\t\tif(aa != n[l]) {\n\t\t\t\t\t\t\t\tcontinue IN;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trr.add(i);\n\t\t\t\t\t\tcc.add(j);\n\t\t\t\t\t\tss.add(k);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint rrr = 0;\n\t\t\tint ccc = 0;\n\t\t\tint sss = 0;\n\t\t\tfor(int i = 0; i < q; i++) {\n\t\t\t\t\n\t\t\t\tint sum = -2;\n\t\t\t\tfor(int j = 0; j < rr.size(); j++) {\n\t\t\t\t\tint ll = rrr * rr.get(j) + ccc * cc.get(j) + sss * cc.get(j);\n\t\t\t\t\tif(sum != -2 && sum != ll) sum = -1;\n\t\t\t\t\telse if(sum == -2) sum = ll;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(sum == -2) sum = -1;\n\t\t\t\tif(i != 0) System.out.print(\" \");\n\t\t\t\tSystem.out.print(sum);\n\t\t\t\tif(i != q) {\n\t\t\t\t\tchar[] in = sc.next().toCharArray();\n\t\t\t\t\tfor(int j = 0; j < in.length; j++) {\n\t\t\t\t\t\tif(in[j] == '(') rrr++;\n\t\t\t\t\t\tif(in[j] == ')') rrr--;\n\t\t\t\t\t\tif(in[j] == '{') ccc++;\n\t\t\t\t\t\tif(in[j] == '}') ccc--;\n\t\t\t\t\t\tif(in[j] == '[') sss++;\n\t\t\t\t\t\tif(in[j] == ']') sss--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}"
  },
  {
    "language": "Ruby",
    "code": "require 'set'\n\n### constant\n\nMAX = 20\n\n### subroutines\n\ndef count_line(line, r, c, s)\n  pos = 0\n  while line[pos] == '.'\n    pos += 1\n  end\n  idt = pos\n  \n  while pos < line.length\n    case line[pos]\n    when '('\n      r += 1\n    when ')'\n      r -= 1\n    when '{'\n      c += 1\n    when '}'\n      c -= 1\n    when '['\n      s += 1\n    when ']'\n      s -= 1\n    end\n\n    pos += 1\n  end\n\n  [idt, r, c, s]\nend\n\n### main\n\nloop do\n  pn, qn = gets.split.map(&:to_i)\n  break if (pn | qn) == 0\n\n  r = c = s = 0\n  mat = []\n  v = []\n  \n  pn.times do\n    line = gets.strip\n\n    mat << [r, c, s]\n    idt, r, c, s = count_line(line, r, c, s)\n    v << idt\n  end\n  mat.shift\n  v.shift\n  pn -= 1\n  #p [mat, v]\n\n  r = c = s = 0\n  mat0 = []\n\n  qn.times do\n    line = gets.strip\n    mat0 << [r, c, s]\n    idt, r, c, s = count_line(line, r, c, s)\n  end\n  #p mat0\n\n  idts = Array.new(qn){Set.new}\n\n  for r in (1..MAX)\n    for c in (1..MAX)\n      for s in (1..MAX)\n        ok = true\n        for i in (0...pn)\n          idt = mat[i][0] * r + mat[i][1] * c + mat[i][2] * s\n          if idt != v[i]\n            ok = false\n            break\n          end\n        end\n\n        if ok\n          for i in (0...qn)\n            idts[i] << mat0[i][0] * r + mat0[i][1] * c + mat0[i][2] * s\n          end\n        end\n      end\n    end\n  end\n  #p idts\n\n  puts idts.map{|is| is.size != 1 ? -1 : is.first}.join(' ')\nend"
  },
  {
    "language": "Ruby",
    "code": "loop do\n\tn, m = gets.split.map(&:to_i)\n\tbreak if n == 0\n\n\tcandidates = (1..20).to_a.repeated_permutation(3).to_a\n\tr = c = s = 0\n\t(1..n).each do\n\t\tline = gets.chomp\n\t\tline =~ /^(\\.*)/\n\t\tindent = $1.size\n\n\t\tcandidates.delete_if do |ir, ic, is|\n\t\t\tir * r + ic * c + is * s != indent\n\t\tend\n\t\t\n\t\tline.scan(/[(){}\\[\\]]/) do |bracket|\n\t\t\tcase bracket\n\t\t\t\twhen ?(; r += 1\n\t\t\t\twhen ?); r -= 1\n\t\t\t\twhen ?{; c += 1\n\t\t\t\twhen ?}; c -= 1\n\t\t\t\twhen ?[; s += 1\n\t\t\t\twhen ?]; s -= 1\n\t\t\tend\n\t\tend\n\tend\n\n\tindents = (1..m).map do\n\t\tline = gets.chomp\n\t\ta = candidates.map {|ir, ic, is| ir * r + ic * c + is * s}.uniq\n\t\tindent = (a.size == 1 ? a[0] : -1)\n\n\t\tline.scan(/[(){}\\[\\]]/) do |bracket|\n\t\t\tcase bracket\n\t\t\t\twhen ?(; r += 1\n\t\t\t\twhen ?); r -= 1\n\t\t\t\twhen ?{; c += 1\n\t\t\t\twhen ?}; c -= 1\n\t\t\t\twhen ?[; s += 1\n\t\t\t\twhen ?]; s -= 1\n\t\t\tend\n\t\tend\n\n\t\tindent\n\tend\n\n\tputs indents * ' '\nend"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.range;\nimport std.array;\nimport std.functional;\nimport std.algorithm;\nimport std.conv;\nimport std.container;\nimport std.math;\nimport std.numeric;\nimport std.string;\n\nvoid solve(Cond[] cs, int[][] qs) {\n    //writeln(\"solve: \", cs, qs);\n    bool match(int x, int y, int z) {\n        foreach (c; cs) {\n            if (c.c[0] * x + c.c[1] * y + c.c[2] * z != c.v) {\n                return false;\n            }\n        }\n        return true;\n    }\n    int[][] cands; // 考えられるR, C, Sの組すべて\n    void prepare() {\n        for (int i = 1; i <= 20; i++) {\n            for (int j = 1; j <= 20; j++) {\n                for (int k = 1; k <= 20; k++) {\n                    if (match(i, j, k)) {\n                        cands ~= [i, j, k];\n                    }\n                }\n            }\n        }\n    }\n    prepare;\n\n    int[] ans;\n    foreach (q; qs) {\n        int[] pos;\n        foreach (cand; cands) {\n            pos ~= cand[0] * q[0] + cand[1] * q[1] + cand[2] * q[2];\n        }\n        if (pos.sort.uniq.array.length == 1) {\n            ans ~= pos[0];\n        } else {\n            ans ~= -1;\n        }\n    }\n    ans.map!(to!string).join(\" \").writeln;\n}\n\nstruct Cond {\n    int[] c;\n    int v;\n}\n\nvoid main() {\n    int p, q;\n    while (readf(\"%d %d\\n\", &p, &q), p || q) {\n        string[] P = new string[p];\n        string[] Q = new string[q];\n        foreach (i; 0 .. p) \n            P[i] = readln.chomp;\n        foreach (i; 0 .. q) \n            Q[i] = readln.chomp;\n\n        int[] c = new int[3];\n        Cond[] conds;\n        foreach (i; 0 .. p) {\n            int dots = cast(int)P[i].countUntil!(a => a != '.');\n            conds ~= Cond(c.dup, dots);\n            foreach (j; 0 .. P[i].length) {\n                switch (P[i][j]) {\n                    case '(': c[0]++; break;\n                    case ')': c[0]--; break;\n                    case '{': c[1]++; break;\n                    case '}': c[1]--; break;\n                    case '[': c[2]++; break;\n                    case ']': c[2]--; break;\n                    default: // DO NOTHING\n                }\n            }\n        }\n\n        c[] = 0;\n        int[][] queries;\n        foreach (i; 0 .. q) {\n            queries ~= c.dup;\n            foreach (j; 0 .. Q[i].length) {\n                switch (Q[i][j]) {\n                    case '(': c[0]++; break;\n                    case ')': c[0]--; break;\n                    case '{': c[1]++; break;\n                    case '}': c[1]--; break;\n                    case '[': c[2]++; break;\n                    case ']': c[2]--; break;\n                    default: // DO NOTHING\n                }\n            }\n        }\n        solve(conds, queries);\n    }\n}"
  },
  {
    "language": "Python",
    "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(0,-1),(1,0),(0,1),(-1,0)]\nddn = [(0,-1),(1,-1),(1,0),(1,1),(0,1),(-1,-1),(-1,0),(-1,1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    rr = []\n\n    while True:\n        p,q = LI()\n        if p == 0:\n            break\n\n        a = [S() for _ in range(p)]\n        b = [S() for _ in range(q)]\n        aa = [[0,0,0,0]]\n        mc = 0\n        for c in a:\n            d = collections.Counter(c)\n            t = aa[-1][:]\n            t[0] += d['(']\n            t[0] -= d[')']\n            t[1] += d['{']\n            t[1] -= d['}']\n            t[2] += d['[']\n            t[2] -= d[']']\n            t[3] = 0\n            for ct in c:\n                if ct != '.':\n                    break\n                t[3] += 1\n                if mc < t[3]:\n                    mc = t[3]\n            aa.append(t)\n        k = []\n        for c1,c2,c3 in itertools.product(range(1,min(mc+1,21)), repeat=3):\n            f = True\n            for ci in range(p):\n                c = aa[ci]\n                if c[0] * c1 + c[1] * c2 + c[2] * c3 != aa[ci+1][3]:\n                    f = False\n                    break\n            if f:\n                k.append((c1,c2,c3))\n        bb = [[0,0,0]]\n        for c in b:\n            d = collections.Counter(c)\n            t = bb[-1][:]\n            t[0] += d['(']\n            t[0] -= d[')']\n            t[1] += d['{']\n            t[1] -= d['}']\n            t[2] += d['[']\n            t[2] -= d[']']\n            bb.append(t)\n\n        r = [0]\n        for c in bb[1:-1]:\n            s = set()\n            for c1,c2,c3 in k:\n                s.add(c[0]*c1+c[1]*c2+c[2]*c3)\n            if len(s) == 1:\n                r.append(list(s)[0])\n            elif sum(c) == 0:\n                r.append(0)\n            else:\n                r.append(-1)\n\n        rr.append(' '.join(map(str,r)))\n\n\n    return '\\n'.join(map(str,rr))\n\n\nprint(main())\n\n\n"
  },
  {
    "language": "Python",
    "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(0,-1),(1,0),(0,1),(-1,0)]\nddn = [(0,-1),(1,-1),(1,0),(1,1),(0,1),(-1,-1),(-1,0),(-1,1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    rr = []\n\n    while True:\n        p,q = LI()\n        if p == 0:\n            break\n\n        a = [S() for _ in range(p)]\n        b = [S() for _ in range(q)]\n        aa = [[0,0,0,0]]\n        mc = 0\n        for c in a:\n            d = collections.Counter(c)\n            t = aa[-1][:]\n            t[0] += d['(']\n            t[0] -= d[')']\n            t[1] += d['{']\n            t[1] -= d['}']\n            t[2] += d['[']\n            t[2] -= d[']']\n            t[3] = 0\n            for ct in c:\n                if ct != '.':\n                    break\n                t[3] += 1\n                if mc < t[3]:\n                    mc = t[3]\n            aa.append(t)\n        k = []\n        for c1,c2,c3 in itertools.product(range(1,min(mc+1,21)), repeat=3):\n            f = True\n            for ci in range(p):\n                c = aa[ci]\n                if c[0] * c1 + c[1] * c2 + c[2] * c3 != aa[ci+1][3]:\n                    f = False\n                    break\n            if f:\n                k.append((c1,c2,c3))\n        bb = [[0,0,0]]\n        for c in b:\n            d = collections.Counter(c)\n            t = bb[-1][:]\n            t[0] += d['(']\n            t[0] -= d[')']\n            t[1] += d['{']\n            t[1] -= d['}']\n            t[2] += d['[']\n            t[2] -= d[']']\n            bb.append(t)\n\n        r = [0]\n        for c in bb[1:-1]:\n            s = set()\n            for c1,c2,c3 in k:\n                s.add(c[0]*c1+c[1]*c2+c[2]*c3)\n            if len(s) == 1:\n                r.append(list(s)[0])\n            else:\n                r.append(-1)\n\n        rr.append(' '.join(map(str,r)))\n\n\n    return '\\n'.join(map(str,rr))\n\n\nprint(main())\n\n\n"
  },
  {
    "language": "Python",
    "code": "import re\nwhile 1:\n    R=[]\n    C=[]\n    S=[]\n    p,q=map(int,input().split())\n    if p==q==0:break\n    #P=[input()for _ in range(p)]\n    G=[]\n    R_c=[0]\n    C_c=[0]\n    S_c=[0]\n    for _ in range(p):\n        s=input()\n        cnt=s.count\n        G.append(re.match('[.]*',s).span()[1])\n        R_c.append(R_c[-1]+cnt('(')-cnt(')'))\n        C_c.append(C_c[-1]+cnt('{')-cnt('}'))\n        S_c.append(S_c[-1]+cnt('[')-cnt(']'))\n    for x in range(1,21):\n        for y in range(1,21):\n            for z in range(1,21):\n                for g,i,j,k, in zip(G,R_c,C_c,S_c):\n                    if i*x+j*y+k*z!=g:\n                        break\n                else:\n                    R.append(x)\n                    C.append(y)\n                    S.append(z)\n    #print(R,C,S)\n    R_c=[0]\n    C_c=[0]\n    S_c=[0]\n    for _ in range(q):\n        s=input()\n        cnt=s.count\n        R_c.append(R_c[-1]+cnt('(')-cnt(')'))\n        C_c.append(C_c[-1]+cnt('{')-cnt('}'))\n        S_c.append(S_c[-1]+cnt('[')-cnt(']'))\n    R_c=R_c[:-1]\n    C_c=C_c[:-1]\n    S_c=S_c[:-1]\n\n    a=[set()for _ in range(q)]\n    for x,y,z in zip(R,C,S):\n        for idx,(i,j,k)in enumerate(zip(R_c,C_c,S_c)):\n            a[idx].add(i*x+j*y+k*z)\n    print(*[list(t)[0]if len(t)==1else-1for t in a])\n"
  },
  {
    "language": "Python",
    "code": "from itertools import product\nci = \"({[\"\nco = \")}]\"\nwhile 1:\n    p, q = map(int, input().split())\n    if p == q == 0:\n        break\n    S = [input() for i in range(p)]\n    T = [input() for i in range(q)]\n    L = [set() for i in range(q)]\n\n    for lens in product(range(1, 21), repeat=3):\n        cnts = [0]*3\n        ok = 1\n        for s in S:\n            idx = 0\n            while s[idx] == '.':\n                idx += 1\n            if sum(c*l for c, l in zip(cnts, lens)) != idx:\n                ok = 0\n                break\n            for c in s:\n                if c in ci:\n                    cnts[ci.index(c)] += 1\n                elif c in co:\n                    cnts[co.index(c)] -= 1\n        if not ok:\n            continue\n        cnts = [0]*3\n        for i, t in enumerate(T):\n            idx = 0\n            while t[idx] == '.':\n                idx += 1\n            L[i].add(sum(c*l for c, l in zip(cnts, lens)))\n            for c in t:\n                if c in ci:\n                    cnts[ci.index(c)] += 1\n                elif c in co:\n                    cnts[co.index(c)] -= 1\n    ans = [0]*q\n    for i in range(q):\n        if 1 < len(L[i]):\n            ans[i] = -1\n        else:\n            v, = L[i]\n            ans[i] = v\n    print(*ans)"
  },
  {
    "language": "Rust",
    "code": "extern crate core;\n\nuse std::fmt;\nuse std::cmp::{Ordering, min, max};\nuse std::fmt::{Display, Error, Formatter};\nuse std::ops::{Index, IndexMut, Add, AddAssign, Sub, SubAssign, Mul, MulAssign};\nuse std::collections::VecDeque;\nuse std::f32::MAX;\n\nfn show<T: Display>(vec: &Vec<T>) {\n    if vec.is_empty() {\n        println!(\"[]\");\n    }else {\n        print!(\"[{}\", vec[0]);\n        for i in 1 .. vec.len() {\n            print!(\", {}\", vec[i]);\n        }\n        println!(\"]\");\n    }\n}\nmacro_rules! read_line{\n    () => {{\n        let mut line = String::new();\n        std::io::stdin().read_line(&mut line).ok();\n        line\n    }};\n    (delimiter: ' ') => {\n        read_line!().split_whitespace().map(|x|x.to_string()).collect::<Vec<_>>()\n    };\n    (delimiter: $p:expr) => {\n        read_line!().split($p).map(|x|x.to_string()).collect::<Vec<_>>()\n    };\n    (' ') => {\n        read_line!(delimiter: ' ')\n    };\n    ($delimiter:expr) => {\n        read_line!(delimiter: $delimiter)\n    };\n    (' '; $ty:ty) => {\n        read_line!().split_whitespace().map(|x|x.parse::<$ty>().ok().unwrap()).collect::<Vec<$ty>>()\n    };\n    ($delimiter:expr; $ty:ty) => {\n        read_line!($delimiter).into_iter().map(|x|x.parse::<$ty>().ok().unwrap()).collect::<Vec<$ty>>()\n    };\n}\nmacro_rules! let_all {\n    ($($n:ident:$t:ty),*) => {\n        let line = read_line!(delimiter: ' ');\n        let mut iter = line.iter();\n        $(let $n:$t = iter.next().unwrap().parse().ok().unwrap();)*\n    };\n}\n#[derive(Copy, Clone)]\nstruct Bracket {\n    round: usize, curly: usize, square: usize\n}\nimpl Bracket {\n    fn new() -> Bracket { Bracket {round: 0, curly: 0, square: 0}}\n}\n#[derive(Copy, Clone)]\nstruct IndentRule {\n    bracket: Bracket, indent: usize\n}\n#[derive(Copy, Clone)]\nstruct Coefficient{\n    r: usize, c: usize, s: usize\n}\nimpl Display for Coefficient {\n    fn fmt(&self, f: &mut Formatter) -> Result<(), Error> {\n        write!(f, \"Co(r {}, c {}, s {})\", self.r, self.c, self.s)\n    }\n}\nimpl Coefficient {\n    fn cal_indent(&self, bracket: &Bracket) -> usize {\n        self.r * bracket.round + self.c * bracket.curly + self.s * bracket.square\n    }\n    fn is_match_indent_rule(&self, rule: &IndentRule) -> bool {\n        self.cal_indent(&rule.bracket) == rule.indent\n    }\n}\nfn count_indent(line: &String) -> usize {\n    let chars = line.chars().collect::<Vec<_>>();\n    for i in 0 .. line.len() {\n        if chars[i] != '.' {\n            return i\n        }\n    }\n    line.len()\n}\nfn renew_count(line: &String, mut bracket: Bracket) -> Bracket {\n    for c in line.chars() {\n        match c {\n            '(' => bracket.round += 1,\n            ')' => bracket.round -= 1,\n            '{' => bracket.curly += 1,\n            '}' => bracket.curly -= 1,\n            '[' => bracket.square += 1,\n            ']' => bracket.square -= 1,\n            _ => {}\n        }\n    }\n    bracket\n}\n\nfn main() {\n    loop {\n        let_all!(p: usize, q: usize);\n        if p == 0 && q == 0 {\n            return\n        }\n        let mut rule = Vec::with_capacity(p);\n        let mut bracket = Bracket::new();\n        for _ in 0 .. p {\n            let line = read_line!();\n            let indent = count_indent(&line);\n            rule.push(IndentRule{bracket: bracket, indent: indent});\n            bracket = renew_count(&line, bracket);\n        }\n        let mut coeffs = Vec::new();\n        for r in 1 .. 21 {\n            for c in 1 .. 21 {\n                for s in 1 .. 21 {\n                    let coeff = Coefficient{r:r,c:c,s:s};\n                    let mut is_match = true;\n                    for rul in &rule {\n                        if !coeff.is_match_indent_rule(rul) {\n                            is_match = false;\n                            break\n                        }\n                    }\n                    if is_match {\n                        coeffs.push(coeff);\n                    }\n                }\n            }\n        }\n        let mut indents = Vec::new();\n        bracket = Bracket::new();\n        for _ in 0 .. q {\n            let line = read_line!();\n            let mut min = std::i32::MAX;\n            let mut max = 0;\n            for co in &coeffs {\n                let indent = co.cal_indent(&bracket) as i32;\n                if min > indent {\n                    min = indent;\n                }\n                if max < indent {\n                    max = indent;\n                }\n            }\n            if min != max {\n                indents.push(-1);\n            }else {\n                indents.push(min);\n            }\n            bracket = renew_count(&line, bracket);\n        }\n        print!(\"{}\", indents[0]);\n        for i in 1 .. indents.len() {\n            print!(\" {}\", indents[i]);\n        }\n        println!();\n    }\n}\n\n"
  }
]