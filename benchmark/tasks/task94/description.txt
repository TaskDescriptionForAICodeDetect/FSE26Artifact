The 11 Puzzle

Taro is very good at the 8 puzzle and often plays it with his friends during breaks. One day, a friend asked him, 'Can you solve a more complex puzzle?' However, Taro has never done any other puzzles. It seems that his friend had created a custom 11 puzzle. This puzzle consists of 11 square cards and a frame shaped like Figure 1. At the start, the 11 cards are placed inside the frame, resulting in 2 empty spaces adjacent to the cards. Moving the cards into these empty spaces is repeated to arrange the cards neatly into the completed shape shown in Figure 2.

Taro decided to take on this puzzle challenge. However, he solved the 11 puzzle quite easily. His friend then said, 'Try to solve it with the least number of moves!' Taro, unsure of the solution, has asked you to create a program that calculates the minimum number of steps to solve the 11 puzzle. Consider moving a single number one space as one step.

Write a program that takes the initial state of the 11 puzzle as input and outputs the minimum number of steps required to solve the puzzle. If the minimum number of steps exceeds 20, output 'NA'. The state of the puzzle is given in sequences, where the number 0 represents an empty space. For example, the input representing the state in Figure 1 is as follows:

6
2 1 3
10 5 7 0 8
9 4 11
0

Input

Multiple data sets are provided as input. The end of the input is indicated by a single line with -1. Each dataset is given in the following format:

p1
p2 p3 p4
p5 p6 p7 p8 p9
p10 p11 p12
p13

The i-th line contains the information pi (0 ≤ pi ≤ 11) of the puzzle on the i-th line, separated by spaces.

The number of datasets will not exceed 100.

Output

For each dataset, output the minimum number of steps or 'NA' on one line.