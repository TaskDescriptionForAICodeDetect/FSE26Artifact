[
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n  int t;\n  int weight[10];\n  int point[4][13];\n  int s[5],n[5];\n  int kind[4][13];\n  string card;\n  bool flag;\n  bool f = false;\n\n  while(cin >> t){\n    if(f)cout << endl;\n    f = true;\n\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++)cin >> point[i][j];\n    }\n    weight[0] = 0;\n    for(int i=1;i<10;i++)cin >> weight[i];\n    \n    while(t--){\n      for(int i=0;i<4;i++){\n\tfor(int j=0;j<13;j++)kind[i][j] = false;\n      }\n      int ans = 0;\n      for(int i=0;i<5;i++){\n\tcin >> card;\n\tif(card[0] == 'A')n[i] = 1;\n\telse if(card[0] == 'T')n[i] = 10;\n\telse if(card[0] == 'J')n[i] = 11;\n\telse if(card[0] == 'Q')n[i] = 12;\n\telse if(card[0] == 'K')n[i] = 13;\n\telse n[i] = card[0] - '0';\n\n\tif(card[1] == 'S')s[i] = 0;\n\telse if(card[1] == 'C')s[i] = 1;\n\telse if(card[1] == 'H')s[i] = 2;\n\telse if(card[1] == 'D')s[i] = 3;\n\n\tkind[s[i]][n[i]-1] = true;\n\tans += point[s[i]][n[i]-1];\n      }\n\n      flag = false;\n      int flash = -1;\n      int c = 9;\n\n      if(s[0] == s[1] && s[1] == s[2] && s[2] == s[3] && s[3] == s[4])flash = s[0];\n\n      //loyal straight flash\n      if(flash>=0){\n\tif(kind[flash][0] && kind[flash][9] && kind[flash][10] && kind[flash][11] && kind[flash][12])flag = true;\n      }\n      if(!flag){\n\tc--;\n\t//straight flash\n\tif(flash>=0){\n\t  for(int j=0;j<9;j++){\n\t    if(kind[flash][j] && kind[flash][j+1] && kind[flash][j+2] && kind[flash][j+3] && kind[flash][j+4])flag = true;\n\t  }\n\t}\n\tif(!flag){\n\t  c--;\n\t  //four card\n\t  sort(n,n+5);\n\t  if(n[0] == n[1] && n[1] == n[2] && n[2] == n[3])flag = true;\n\t  if(n[1] == n[2] && n[2] == n[3] && n[3] == n[4])flag = true;\n\t  if(!flag){\n\t    c--;\n\t    //full house\n\t    if(n[0] == n[1] && n[1] == n[2] && n[3] == n[4])flag = true;\n\t    if(n[0] == n[1] && n[2] == n[3] && n[3] == n[4])flag = true;\n\t    if(!flag){\n\t      c--;\n\t      //flash\n\t      if(flash>=0)flag = true;\n\t      if(!flag){\n\t\tc--;\n\t\t//straight\n\t\tif(n[0] == n[1]-1 && n[1] == n[2]-1 && n[2] == n[3]-1 && n[3] == n[4]-1)flag = true;\n\t\tif(n[0] == 1 && n[1] == 10 && n[2] == 11 && n[3] == 12 && n[4] == 13)flag = true;\n\t\tif(!flag){\n\t\t  c--;\n\t\t  //three card\n\t\t  if(n[0] == n[1] && n[1] == n[2])flag = true;\n\t\t  if(n[1] == n[2] && n[2] == n[3])flag = true;\n\t\t  if(n[2] == n[3] && n[3] == n[4])flag = true;\n\t\t  if(!flag){\n\t\t    c--;\n\t\t    //two pair\n\t\t    if(n[0] == n[1] && n[2] == n[3])flag = true;\n\t\t    if(n[0] == n[1] && n[3] == n[4])flag = true;\n\t\t    if(n[1] == n[2] && n[3] == n[4])flag = true;\n\t\t    if(!flag){\n\t\t      c--;\n\t\t      if(n[0] == n[1])flag = true;\n\t\t      if(n[1] == n[2])flag = true;\n\t\t      if(n[2] == n[3])flag = true;\n\t\t      if(n[3] == n[4])flag = true;\n\t\t      if(!flag)c--;\n\t\t    }\n\t\t  }\n\t\t}\n\t      }\n\t    }\n\t  }\n\t}\n      }\n      cout << ans * weight[c] << endl;\n    }\n\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin >> kihon[i][j];\n      }\n    }\n    \n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n    \n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n\tchar temp;\n\tcin >> temp >> tehudac[i];\n\tif(temp>'1' && temp<='9'){\n\t  tehudan[i]=temp-'0';\n\t}\n\telse if(temp=='T') tehudan[i]=10;\n\telse if(temp=='J') tehudan[i]=11;\n\telse if(temp=='Q') tehudan[i]=12;\n\telse if(temp=='K') tehudan[i]=13;\n\telse if(temp=='A') tehudan[i]=1;\n\tgetchar();\n      }\n      \n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n\tif(tehudac[i]=='S') iro=0;\n\telse if(tehudac[i]=='C') iro=1;\n\telse if(tehudac[i]=='H') iro=2;\n\telse if(tehudac[i]=='D') iro=3;\n\t\n\tsum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n     \n      int yaku;\n      yaku=hantei();\n      \n      int ans;\n      if(yaku==-1){\n\tcout << 0 << endl;\n      }\n      else{\n\tans=bairitu[yaku]*sum;\n\tcout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n  \nint kumi(){\n  int count=0;\n\n  for(int i=0;i<4;i++){\n    int j;\n    if(i==0){\n      if(tehudan[i]==tehudan[i+1] && tehudan[i]!=tehudan[i+2] && tehudan[i]!=tehudan[i+3] && tehudan[i]!=tehudan[i+4]){\n\tcount++;\n\tcontinue;\n      }\n    }\n    if(i==1){\n      if(tehudan[i]==tehudan[i+1] && tehudan[i]!=tehudan[i+2] && tehudan[i]!=tehudan[i+3] && tehudan[i]!=tehudan[i-1]){\n\tcount++;\n\tcontinue;\n      }\n    }\n    if(i==2){\n      if(tehudan[i]==tehudan[i+1] && tehudan[i]!=tehudan[i+2] && tehudan[i]!=tehudan[i-1] && tehudan[i]!=tehudan[i-2]){\n\tcount++;\n\tcontinue;\n      }\n    }\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]!=tehudan[i-1] && tehudan[i]!=tehudan[i-2] && tehudan[i]!=tehudan[i-3]){\n      count++;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1 && b!=1) return 8;\n  else if(b==1 && c==1 && b!=2) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a==1) return 5;\n  else if(c==1 && b==0) return 4;\n  else if(b==1) return 3;\n  else if(b==2) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  int temp=tehudan[0];\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==13) return 2;\n  else if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==temp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n  char mozi;\n  mozi=tehudac[a];\n  tehudac[a]=tehudac[b];\n  tehudac[b]=mozi;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint same(vector<int> &c){\n\tfor(int i = 1 ; i < c.size() ; i++)\n\t\tif(c[i] != c[i-1]) return false;\n\treturn true;\n}\n\nint royal(vector<int> &v,vector<int> &c){\n\treturn same(c) && v[0] == 1 && v[1] == 10 && v[2] == 11 && v[3] == 12 && v[4] == 13;\n}\nint straightflash(vector<int> &v,vector<int> &c){\n\tif(!same(c))return false;\n\tfor(int i = 1; i < v.size() ; i++)\n\t\tif(v[i] != v[i-1]+1) return false;\n\treturn true;\n}\nint straight(vector<int> &v,vector<int> &c){\n\tfor(int i = 1; i < v.size() ; i++)\n\t\tif(v[i] != v[i-1]+1) return false;\n\treturn true;\n}\nint four(vector<int> &v,vector<int> &c){\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 4) return true;\n\t}\n\treturn false;\n}\nint fullhouse(vector<int> &v,vector<int> &c){\n\tbool f1 = 0 , f2 = 0;\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 3) f1 = true;\n\t\tif(count(v.begin(),v.end(),v[i]) == 2) f2 = true;\n\t}\n\treturn f1 & f2;\n}\n\nint three(vector<int> &v,vector<int> &c){\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 3) return true;\n\t}\n\treturn false;\n}\n\nint two(vector<int> &v,vector<int> &c){\n\tint k[10] = {0};\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tk[count(v.begin(),v.end(),v[i])]++;\n\t}\n\treturn k[2] >= 4;\n}\n\nint one(vector<int> &v,vector<int> &c){\n\tint k[10] = {0};\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tk[count(v.begin(),v.end(),v[i])]++;\n\t}\n\treturn k[2] >= 2;\n}\n\nint flash(vector<int> &v,vector<int> &c){\n\treturn same(c);\n}\nint num(char c){\n\tif(c == 'A') return 1;\n\telse if(c == 'T') return 10;\n\telse if(c == 'J') return 11;\n\telse if(c == 'Q') return 12;\n\telse if(c == 'K') return 13;\n\telse return c - '0';\n}\nint suit(char c){\n\tswitch(c){\n\tcase 'S':return 1;\n\tcase 'C':return 2;\n\tcase 'H':return 3;\n\tcase 'D':return 4;\n\t};\n}\nint main(){\n\tint n;\n\tint (*p[9]) (vector<int> &v,vector<int> &c);\n\tp[0] = one;\n\tp[1] = two;\n\tp[2] = three;\n\tp[3] = straight;\n\tp[4] = flash;\n\tp[5] = fullhouse;\n\tp[6] = four;\n\tp[7] = straightflash;\n\tp[8] = royal;\n\tint T = 0;\n\twhile(cin >> n){\n\t\tif(T++)cout << endl;\n\t\tint w[5][14];\n\t\tfor(int y = 1 ; y <= 4 ; y++){\n\t\t\tfor(int i = 1 ; i <= 13 ; i++){\n\t\t\t\tcin >> w[y][i];\n\t\t\t}\t\t\n\t\t}\n\t\t\n\t\tint rate[9];\n\t\tfor(int i = 0 ; i < 9 ; i++){\n\t\t\tcin >> rate[i];\n\t\t}\n\t\tfor(int _ = 0 ; _ < n ; _++){\n\t\t\tint o = 0;\n\t\t\tvector<int> v; vector<int> c;\n\t\t\tfor(int i = 0 ; i < 5 ; i++){\n\t\t\t\tstring s;\n\t\t\t\tcin >> s;\n\t\t\t\tv.push_back(num(s[0]));\n\t\t\t\tc.push_back(suit(s[1]));\n\t\t\t\to += w[suit(s[1])][num(s[0])];\n\t\t\t}\n\t\t\tfor(int __ = 0 ; __ < 5 ; __++){\n\t\t\t\tfor(int i = 0 ; i < 4 ; i++){\n\t\t\t\t\tif(v[i] > v[i+1]){\n\t\t\t\t\t\tswap(v[i],v[i+1]);\n\t\t\t\t\t\tswap(c[i],c[i+1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ans = 0;\n\t\t\tfor(int i = 0 ; i < 9 ; i++){\n\t\t\t\tans = max( p[i](v,c) * o * rate[i] , ans);\n\t\t\t}\n\t\t\tcout << ans << endl;\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <queue>\n\n#define i64 long long\n#define ui64 unsigned long long\nusing namespace std;\n\nint c_points[5][14];\nint h_points[10];\n\nstruct card{\n  int num;\n  int mark;\n  card(char n_,char m_):num(),mark(){\n    switch(m_){\n      case 'S': mark = 0; break;\n      case 'H': mark = 2; break;\n      case 'D': mark = 3; break;\n      case 'C': mark = 1; break;\n    }\n    if(('0'<=n_)&&(n_<='9'))num=n_-'0';\n    else{\n      switch(n_){\n        case 'T': num = 10; break;\n        case 'J': num = 11; break;\n        case 'Q': num = 12; break;\n        case 'K': num = 13; break;\n        case 'A': num = 1; break;\n      }\n    }\n  }\n  bool operator< (const card& a){\n    return num==a.num?mark<a.mark:num<a.num;\n  }\n};\n\nbool straight(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if((hand[i+1].num-hand[i].num==1)||\\\n        ((!i)&&(hand[4].num==13&&hand[i].num==1)));\n    else return false;\n  }\n  return true;\n}\n\nbool flush(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].mark!=hand[i+1].mark)return false;\n  }\n  return true;\n}\n\nbool no_pair(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool one_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=4;i++){\n    if(i==4)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  for(int i=p+1;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool two_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=2;i++){\n    if(i==2)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  if(p==0){\n    return hand[2].num==hand[3].num?hand[3].num!=hand[4].num:hand[3].num==hand[4].num;\n  }\n  if(p==1){\n    return hand[3].num==hand[4].num;\n  }\n}\n\nbool three_card(vector<card>& hand){\n  if(hand[0].num==hand[2].num&&hand[0].num!=hand[3].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num==hand[3].num&&hand[3].num!=hand[4].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num!=hand[2].num&&hand[2].num==hand[4].num)return true;\n  return false;\n}\n\nbool fullhouse(vector<card>& hand){\n  int p;\n  if(hand[1].num!=hand[2].num){\n    if(hand[0].num!=hand[1].num)return false;\n    for(int i=2;i<4;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }else{\n    if(hand[3].num!=hand[4].num)return false;\n    for(int i=0;i<2;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }\n}\n\nbool straight_flush(vector<card>& hand){\n  return straight(hand)&&flush(hand);\n}\n\nbool four_card(vector<card>& hand){\n  return hand[0].num==hand[3].num||hand[1].num==hand[4].num;\n}\n\nbool royal_straight_flush(vector<card>& hand){\n  if(straight_flush(hand)){\n    if(hand[0].num==1&&hand[4].num==13)return true;\n  }\n  return false;\n}\n\n\ni64 solve(vector<card>& hand){\n  sort(hand.begin(),hand.end());\n  i64 res=0LL;\n  \n  for(int i=0;i<5;i++){\n    int m_=hand[i].mark;\n    int n_=hand[i].num;\n    res+=(i64)c_points[m_][n_-1];\n  }\n  if(royal_straight_flush(hand)){\n    res*=(i64)h_points[8];\n    return res;\n  }\n  if(straight_flush(hand)){\n    res*=(i64)h_points[7];\n    return res;\n  }\n  if(four_card(hand)){\n    res*=(i64)h_points[6];\n    return res;\n  }\n  if(straight(hand)){\n    res*=(i64)h_points[3];\n    return res;\n  }\n  if(flush(hand)){\n    res*=(i64)h_points[4];\n    return res;\n  }\n  if(fullhouse(hand)){\n    res*=(i64)h_points[5];\n    return res;\n  }\n  if(one_pair(hand)){\n    res*=(i64)h_points[0];\n    return res;\n  }\n  if(two_pair(hand)){\n    res*=(i64)h_points[1];\n    return res;\n  }\n  if(three_card(hand)){\n    res*=(i64)h_points[2];\n    return res;\n  }\n  if(no_pair(hand)){\n    return (i64)0;\n  }\n  \n  return -1;\n}\n\nint main(){\n  int n;\n  bool flag = false;\n  while(1){\n    if(!flag){\n      cin >> n;\n      if(cin.eof())return 0; \n      flag=true;\n    }\n    fill(&c_points[0][0],&c_points[4][13],0);\n    fill(&h_points[0],&h_points[9],0);\n    for(int i=0;i<4;i++){\n      for(int k=0;k<13;k++){\n        cin >> c_points[i][k];\n      }\n    }\n    for(int i=0;i<9;i++){\n      cin >> h_points[i];\n    }\n    char a[3];\n    vector<card> hands;\n    for(int i=0;i<n;i++){\n      for(int k=0;k<5;k++){\n        cin >> a;\n        hands.push_back(card(a[0],a[1]));\n      }\n      cout << solve(hands) << endl;\n      hands.clear();\n    }\n    if(flag){\n      cin >> n;\n      if(cin.eof())return 0; \n      else cout << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n  int t;\n  int weight[10];\n  int point[4][13];\n  int s[5],n[5];\n  int kind[4][13];\n  string card;\n  bool flag;\n  bool f = false;\n\n  while(cin >> t){\n    if(f)cout << endl;\n    f = true;\n\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++)cin >> point[i][j];\n    }\n    weight[0] = 0;\n    for(int i=1;i<10;i++)cin >> weight[i];\n    \n    while(t--){\n      for(int i=0;i<4;i++){\n\tfor(int j=0;j<13;j++)kind[i][j] = false;\n      }\n\n      for(int i=0;i<5;i++){\n\tcin >> card;\n\tif(card[0] == 'A')n[i] = 1;\n\telse if(card[0] == 'T')n[i] = 10;\n\telse if(card[0] == 'J')n[i] = 11;\n\telse if(card[0] == 'Q')n[i] = 12;\n\telse if(card[0] == 'K')n[i] = 13;\n\telse n[i] = card[0] - '0';\n\n\tif(card[1] == 'S')s[i] = 0;\n\telse if(card[1] == 'C')s[i] = 1;\n\telse if(card[1] == 'H')s[i] = 2;\n\telse if(card[1] == 'D')s[i] = 3;\n\n\tkind[s[i]][n[i]-1] = true;\n      }\n\n      int ans = 0;\n      for(int i=0;i<4;i++){\n\tfor(int j=0;j<13;j++){\n\t  if(kind[i][j])ans += point[i][j];\n\t}\n      }\n\n      flag = false;\n      int c = 9;\n      //loyal straight flash\n      for(int i=0;i<4;i++){\n\tif(kind[i][0] && kind[i][9] && kind[i][10] && kind[i][11] && kind[i][12]){\n\t  flag = true;\n\t}\n      }\n      if(!flag){\n\tc--;\n\t//straight flash\n\tfor(int i=0;i<4;i++){\n\t  for(int j=0;j<9;j++){\n\t    if(kind[i][j] && kind[i][j+1] && kind[i][j+2] && kind[i][j+3] && kind[i][j+4])flag = true;\n\t  }\n\t}\n\tif(!flag){\n\t  c--;\n\t  //four card\n\t  sort(n,n+5);\n\t  if(n[0] == n[1] && n[1] == n[2] && n[2] == n[3])flag = true;\n\t  if(n[1] == n[2] && n[2] == n[3] && n[3] == n[4])flag = true;\n\t  if(!flag){\n\t    c--;\n\t    //full house\n\t    if(n[0] == n[1] && n[1] == n[2] && n[3] == n[4])flag = true;\n\t    if(n[0] == n[1] && n[2] == n[3] && n[3] == n[4])flag = true;\n\t    if(!flag){\n\t      c--;\n\t      //flash\n\t      if(s[0] == s[1] && s[1] == s[2] && s[2] == s[3] && s[3] == s[4])flag = true;\n\t      if(!flag){\n\t\tc--;\n\t\t//straight\n\t\tif(n[0] == n[1]-1 && n[1] == n[2]-1 && n[2] == n[3]-1 && n[3] == n[4]-1)flag = true;\n\t\tif(n[0] == 1 && n[1] == 10 && n[2] == 11 && n[3] == 12 && n[4] == 13)flag = true;\n\t\tif(!flag){\n\t\t  c--;\n\t\t  //three card\n\t\t  if(n[0] == n[1] && n[1] == n[2])flag = true;\n\t\t  if(n[1] == n[2] && n[2] == n[3])flag = true;\n\t\t  if(n[2] == n[3] && n[3] == n[4])flag = true;\n\t\t  if(!flag){\n\t\t    c--;\n\t\t    //two pair\n\t\t    if(n[0] == n[1] && n[2] == n[3])flag = true;\n\t\t    if(n[0] == n[1] && n[3] == n[4])flag = true;\n\t\t    if(n[1] == n[2] && n[3] == n[4])flag = true;\n\t\t    if(!flag){\n\t\t      c--;\n\t\t      if(n[0] == n[1])flag = true;\n\t\t      if(n[1] == n[2])flag = true;\n\t\t      if(n[2] == n[3])flag = true;\n\t\t      if(n[3] == n[4])flag = true;\n\t\t      if(!flag)c--;\n\t\t    }\n\t\t  }\n\t\t}\n\t      }\n\t    }\n\t  }\n\t}\n      }\n      cout << ans * weight[c] << endl;\n    }\n\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n\nusing namespace std;\n\nint N;\nint hand[5][2];\n\nint a[4][13];\nint b[9];\n\nbool input() {\n  int i, j;\n\n  if (scanf(\"%d\", &N) == EOF) return false;\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 13; j++) {\n      scanf(\"%d\", &a[i][j]);\n    }\n  }\n  for (i = 0; i < 9; i++) {\n    scanf(\"%d\", &b[i]);\n  }\n\n  return true;\n}\n\nbool input2() {\n  int i;\n  char s[3];\n\n  if (!N) return false;\n  N--;\n\n  for (i = 0; i < 5; i++) {\n    scanf(\"%s\", s);\n    switch (s[0]) {\n    case 'A':\n      hand[i][0] = 1;\n      break;\n    case 'T':\n      hand[i][0] = 10;\n      break;\n    case 'J':\n      hand[i][0] = 11;\n      break;\n    case 'Q':\n      hand[i][0] = 12;\n      break;\n    case 'K':\n      hand[i][0] = 13;\n      break;\n    default:\n      hand[i][0] = s[0] - '0';\n      break;\n    }\n    switch (s[1]) {\n    case 'S':\n      hand[i][1] = 0;\n      break;\n    case 'C':\n      hand[i][1] = 1;\n      break;\n    case 'H':\n      hand[i][1] = 2;\n      break;\n    case 'D':\n      hand[i][1] = 3;\n      break;\n    default:\n      break;\n    }\n  }\n\n  return true;\n}\n\nint getStraight() {\n  int i, cnt, max;\n  bool f[13];\n\n  fill(f, f + 13, false);\n\n  for (i = 0; i < 5; i++) {\n    f[hand[i][0] - 1] = true;\n  }\n\n  cnt = 0;\n  max = 0;\n  for (i = 0; i < 13; i++) {\n    if(f[i]) cnt++;\n    else {\n      if (cnt > max) max = cnt;\n      cnt = 0;\n    }\n  }\n  if (cnt > max) max = cnt;\n  //printf(\"\\ngetS:%d\\n\", max);\n  if (max < 4) return 0;\n  else if (max == 5) return 1;\n  else if (max == 4 && f[0] && f[9] && f[12]) return 2;\n  else return 0;\n\n}\n\nbool isFlush() {\n  int i, x;\n  x = hand[0][1];\n  for (i = 1; i < 5; i++) {\n    if (hand[i][1] != x) break;\n  }\n\n  return i == 5;\n}\n\nint getPair() {\n  int i, cnt, max, max2;\n  int f[13];\n\n  fill(f, f + 13, 0);\n  for (i = 0; i < 5; i++) {\n    f[hand[i][0] - 1]++;\n  }\n\n  if (f[0] > f[1]) {\n    max  = f[0];\n    max2 = f[1];\n  } else {\n    max  = f[1];\n    max2 = f[0];\n  }\n  for (i = 2; i < 13; i++) {\n    if(max < f[i]) {\n      max2 = max;\n      max  = f[i];\n    } else if (max2 < f[i]) {\n      max2 = f[i];\n    }\n  }\n\n  if (max == 4) return 4;\n  else if (max == 3 && max2 == 2) return 5;\n  else if (max == 3) return 3;\n  else if (max == 2 && max2 == 2) return 2;\n  else if (max == 2) return 1;\n  else return 0;\n}\n\nint main(){\n  int i, sum, out;\n\n  while(input()){\n    while(input2()){\n      sum = 0;\n      out = 0;\n      for (i = 0; i < 5; i++) sum += a[hand[i][1]][hand[i][0] - 1];\n      if (getStraight() == 2 && isFlush())\n         out = sum * b[8];\n      else if (getStraight() == 1 && isFlush())\n         out = sum * b[7];\n      else if (getPair() == 4)\n         out = sum * b[6];\n      else if (getPair() == 5)\n         out = sum * b[5];\n      else if (isFlush())\n         out = sum * b[4];\n      else if (getStraight() == 1)\n         out = sum * b[3];\n      else if (getPair() == 3)\n         out = sum * b[2];\n      else if (getPair() == 2)\n         out = sum * b[1];\n      else if (getPair() == 1)\n         out = sum * b[0];\n      else\n         out = 0;\n    printf(\"%d\\n\", out);\n    }\n    printf(\"\\n\");\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint N, a[4][14], b[9];\nchar T[15] = \"-A23456789TJQK\";\nchar U[5] = \"SCHD\";\nstring S; pair<int, int>d[5];\nint poker() {\n\tint e[14], f[9];\n\tint g[14], h[9];\n\tfor (int i = 0; i < 14; i++) { e[i] = 0; g[i] = 0; }\n\tfor (int i = 0; i < 9; i++) { f[i] = 0; h[i] = 0; }\n\tfor (int i = 0; i < 5; i++) {\n\t\te[d[i].first]++;\n\t\tf[d[i].second]++;\n\t}\n\tfor (int i = 0; i < 14; i++) { g[e[i]]++; }\n\tfor (int i = 0; i < 4; i++) { h[f[i]]++; }\n\tif (h[5] == 1) {\n\t\tif (d[0].first != 1) { goto E; }\n\t\tif (d[1].first != 10) { goto E; }\n\t\tif (d[2].first != 11) { goto E; }\n\t\tif (d[3].first != 12) { goto E; }\n\t\tif (d[4].first != 13) { goto E; }\n\t\treturn 8; E:;\n\t\tfor (int i = 1; i < 5; i++) {\n\t\t\tif (d[i].first != d[i - 1].first + 1) {\n\t\t\t\tgoto F;\n\t\t\t}\n\t\t}\n\t\treturn 7; F:;\n\t\treturn 4;\n\t}\n\tif (g[4] == 1) { return 6; }\n\tif (g[2] == 1 && g[3] == 1) { return 5; }\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (d[i].first != d[i - 1].first + 1) {\n\t\t\tgoto G;\n\t\t}\n\t}\n\treturn 3; G:;\n\tif (g[3] == 1) { return 2; }\n\tif (g[2] == 2) { return 1; }\n\tif (g[2] == 1) { return 0; }\n\treturn 9;\n}\nint main() {\n\tint cnt = 0;\n\twhile (cin >> N) {\n\t\tif (cnt) { cout << endl; }\n\t\tcnt++;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 1; j <= 13; j++) {\n\t\t\t\tcin >> a[i][j];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 9; i++) { cin >> b[i]; }\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> S;\n\t\t\t\tfor (int k = 0; k < 14; k++) {\n\t\t\t\t\tif (T[k] == S[0]) { d[j].first = k; }\n\t\t\t\t}\n\t\t\t\tfor (int k = 0; k < 4; k++) {\n\t\t\t\t\tif (U[k] == S[1]) { d[j].second = k; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(d, d + 5);\n\t\t\tint A = b[poker()];\n\t\t\tint B = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tB += a[d[j].second][d[j].first];\n\t\t\t}\n\t\t\tcout << A*B << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <queue>\n#include <map>\n#include <vector>\nusing namespace std;\n\nbool is1(int card_n[5]) {\n  for(int i = 0; i < 5; i++) {\n    for(int j = 0; j < 5; j++) {\n      if(i == j) continue;\n      if(card_n[i] == card_n[j] ) return true;\n    }\n  }\n  return false;\n}\n\nbool isTow(int card_n[5]) {\n  int temp[5];\n  for(int i = 0; i < 5; i++) {\n    temp[i] = card_n[i];\n  }\n  sort(&temp[0], &temp[5]);\n  if((temp[0] == temp[1] && temp[2] == temp[3]) || \n     (temp[1] == temp[2] && temp[3] == temp[4])) return true;\n  return false;\n}\n\nint is3(int card_n[5]) {\n  int temp[5];\n  for(int i = 0; i < 5; i++) {\n    temp[i] = card_n[i];\n  }\n  sort(&temp[0], &temp[5]);\n  int bfr = temp[0];\n  int cnt = 1;\n  int max = -1;\n  for(int i = 1; i <= 5; i++) {\n    if(i == 5 || temp[i] != bfr) {\n      if(cnt > max) max = cnt;\n      cnt = 0;\n      if(i == 5) break;\n    }\n    bfr = temp[i];\n    cnt++;\n  }\n  return max;\n}\n\nint isHor4(int card_n[5]) {\n  int temp[5];\n  for(int i = 0; i < 5; i++) {\n    temp[i] = card_n[i];\n  }\n  sort(&temp[0], &temp[5]);\n  if((temp[0] == temp[1] && temp[0] == temp[2] && temp[0] == temp[3]) ||\n     (temp[1] == temp[2] && temp[1] == temp[3] && temp[1] == temp[4])) return 2;\n  if((temp[0] == temp[1] && temp[0] == temp[2] && temp[3] == temp[4]) ||\n     (temp[0] == temp[1] && temp[2] == temp[3] && temp[2] == temp[4])) return 1;\n  return 0;\n}\n\nbool isOne(int card_m[5]) {\n  int m =  card_m[0];\n  for(int i = 1; i < 5; i++) {\n    if(card_m[i] != m) return false;\n  }\n  return true;\n}\n\nint isSt(int card_n[5]) {\n  int temp[5];\n  for(int i = 0; i < 5; i++) {\n    temp[i] = card_n[i];\n  }\n  sort(&temp[0], &temp[5]);\n  if(temp[0] == 1 && temp[1] == 10 && temp[2] == 11\n     && temp[3] == 12 && temp[4] == 13) return 2;\n\n  for(int i = 1; i < 5; i++) {\n    if(temp[i] - temp[i-1] != 1) return 0;\n  }\n  return 1;\n}\n\nint main() {\n  int N;\n  bool flag;\n  while(cin >> N) {\n    if(!flag) {\n      flag = true;\n    } else {\n      cout << endl;\n    }\n\n    int cp[4][13];\n    for(int i = 0; i < 4; i++) {\n      for(int j = 0; j < 13; j++) {\n\tcin >> cp[i][j];\n      }\n    }\n    int rate[9];\n    for(int i = 0; i < 9; i++) {\n      cin >> rate[i];\n    }\n\n    int card_n[5];\n    int card_m[5];\n    for(int t = 0; t < N; t++) {\n      for(int i = 0; i < 5; i++) {\n\tstring s;\n\tcin >> s;\n\tif(s[0] >= '2' && s[0] <= '9') card_n[i] = s[0]-'0';\n\telse if(s[0] == 'T') card_n[i] = 10;\n\telse if(s[0] == 'J') card_n[i] = 11;\n\telse if(s[0] == 'Q') card_n[i] = 12;\n\telse if(s[0] == 'K') card_n[i] = 13;\n\telse if(s[0] == 'A') card_n[i] = 1;\n\n\tif(s[1] == 'S') card_m[i] = 0;\n\tif(s[1] == 'C') card_m[i] = 1;\n\tif(s[1] == 'H') card_m[i] = 2;\n\tif(s[1] == 'D') card_m[i] = 3;\n\n      }\n      int yaku = -1;\n\n      int tmp = isHor4(card_n);\n      if(tmp == 2) yaku = 6;\n      else if(tmp == 1) yaku = 5;\n      else if(isOne(card_m)) {\n\ttmp = isSt(card_n);\n\tif(tmp == 2) {\n\t  yaku = 8;\n\t} else if(tmp == 1) {\n\t  yaku = 7;\n\t} else {\n\t  yaku = 4;\n\t}\n      } else if(isSt(card_n)){\n\tyaku = 3;\n\n      } else {\n\tint tmp2 = is3(card_n);\n\tif(tmp2 >= 3) yaku = 2;\n\telse if(isTow(card_n)) {\n\t  yaku = 1;\n\t} else if(is1(card_n)) {\n\t  yaku = 0;\n\t}\n      }\n\n\n      int point = 0;\n      for(int i = 0; i < 5; i++) {\n\tpoint += cp[card_m[i]][card_n[i]-1];\n      }\n      if(yaku == -1) point = 0;\n      else point *= rate[yaku];\n      cout << point << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<utility>\n#include<algorithm>\n#include<cstdlib>\n#define Pair pair<int, int>\n#define num first\n#define type second\n\nusing namespace std;\n\nint point[4][13], power[9];\nPair in[5], st[5], fl[5];\n\nint st_change(const char& c){\n  if(isdigit(c)) return c-'0';\n  if(c == 'T') return 10;\n  if(c == 'J') return 11;\n  if(c == 'Q') return 12;\n  if(c == 'K') return 13;\n  if(c == 'A') return 1;\n  return 0;\n}\n\nint fl_change(const char& c){\n  if(c == 'S') return 1;\n  if(c == 'C') return 2;\n  if(c == 'H') return 3;\n  if(c == 'D') return 4;\n  return 0;\n}\n\nbool st_comp(const Pair& a, const Pair& b){\n  if(a.num != b.num) return a.num < b.num;\n  return a.type < b.type;\n}\n\nbool fl_comp(const Pair& a, const Pair& b){\n  if(a.type != b.type) return a.type < b.type;\n  return a.num < b.num;\n}\n\nint check_st(){\n  if(st[0].num==1 && st[1].num==10 && st[2].num==11 &&\n     st[3].num==12 && st[4].num==13) return 2;\n  for(int i=1; i<5; ++i){\n    if(st[i].num != st[i-1].num+1) return 0;\n  }\n  return 1;\n}\n\nbool check_fl(){\n  return fl[0].type==fl[1].type && fl[1].type==fl[2].type &&\n    fl[2].type==fl[3].type && fl[3].type==fl[4].type;\n}\n\nbool is_four(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num && st[2].num==st[3].num) ||\n    (st[1].num==st[2].num && st[2].num==st[3].num && st[3].num==st[4].num);\n}\n\nbool is_full(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num && st[3].num==st[4].num) ||\n    (st[0].num==st[1].num && st[2].num==st[3].num && st[3].num==st[4].num);\n}\n\nbool is_three(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num) ||\n    (st[1].num==st[2].num && st[2].num==st[3].num) ||\n    (st[2].num==st[3].num && st[3].num==st[4].num);\n}\n\nbool is_two(){\n  return (st[0].num==st[1].num && st[2].num==st[3].num) ||\n    (st[1].num==st[2].num && st[3].num==st[4].num);\n}\n\nbool is_one(){\n  return st[0].num==st[1].num || st[1].num==st[2].num ||\n    st[2].num==st[3].num || st[3].num==st[4].num;\n}\n\nint solve(){\n  int p=0;\n  for(int i=0; i<5; ++i){\n    p += point[in[i].type-1][in[i].num-1];\n    st[i] = in[i]; fl[i] = in[i];\n  }\n  sort(st, st+5, st_comp);\n  sort(fl, fl+5, fl_comp);\n  int is_st = check_st();\n  bool is_fl = check_fl();\n  if(is_st == 2 && is_fl) return p*power[8];\n  if(is_st == 1 && is_fl) return p*power[7];\n  if(is_four()) return p*power[6];\n  if(is_full()) return p*power[5];\n  if(is_fl) return p*power[4];\n  if(is_st) return p*power[3];\n  if(is_three()) return p*power[2];\n  if(is_two()) return p*power[1];\n  if(is_one()) return p*power[0];\n  return 0;\n}\n\nint main(){\n  bool is=false;\n  int n;\n  while(cin >> n){\n    for(int i=0; i<4; ++i){\n      for(int j=0; j<13; ++j) cin >> point[i][j];\n    }\n    for(int i=0; i<9; ++i) cin >> power[i];\n    if(is) cout << endl;\n    string s;\n    for(int i=0; i<n; ++i){\n      for(int j=0; j<5; ++j){\n\tcin >> s;\n\tin[j] = make_pair(st_change(s[0]), fl_change(s[1]));\n      }\n      cout << solve() << endl;\n    }\n    is=true;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <map>\n#include <algorithm>\n#define P pair<long long,char> // 数字・種類\nusing namespace std;\n\nmap<char,int> mp; // 文字 -> 配列のインデックス\nP p[5];\n\nbool checkF(){\n  for( int i=1;i<5;i++ )\n    if( p[i-1].second!=p[i].second )\n      return false;\n  return true;\n}\nbool checkS(){\n  if( p[0].first==1 ){\n    if( p[4].first==13 || p[4].first==5){\n      for( int i=2;i<5;i++ )\n\tif( p[i-1].first+1 != p[i].first ) return false;\n    }else      return false;\n  }else{\n    for( int i=1;i<5;i++ )\n      if( p[i-1].first+1 != p[i].first ) return false;\n  }\n  return true;\n}\n\nint n2,n3;\nvoid countP(){\n  n2=0; n3=0;\n  for( int i=0;i<3;i++ ){\n    if( p[i].first==p[i+1].first &&\n\tp[i].first==p[i+2].first ){\n      n3=1;\n      if( i==0 && p[3].first==p[4].first ) n2=1;\n      if( i==2 && p[0].first==p[1].first ) n2=1;\n      return ;\n    }\n  }\n\n  for( int i=1;i<5;i++ ){\n    if( p[i-1].first==p[i].first ){\n\tn2++; i++;\n    }\n  }\n}\n\nint yaku(){ // ペアがないときは-1\n  sort( p,p+5 );\n\n  /*\n  for( int i=0;i<5;i++ )\n    cout << \" \" << p[i].first << p[i].second;\n  cout << endl;\n  */\n\n  for( int i=0,j;i<2;i++ ){\n    for( j=0;j<4;j++ )\n      if( p[i].first != p[i+j].first ) break;\n    if( j==4 ) return 6; // フォーカード\n  }\n\n  countP();\n  if( n3==1 && n2==1 ) return 5; // フルハウス\n\n  bool isF = checkF();  // フラッシュ\n  bool isS = checkS();  // ストレート\n  if( isF ){\n    if( isS ){\n      if( p[1].first==10 ) return 8; // ロイヤルストレートフラッシュ\n      return 7; // ストレートフラッシュ\n    }\n    return 4; // フラッシュ\n  }\n\n  if( isS )   return 3; // ストレート\n  if( n3==1 ) return 2; // スリーカード  \n  if( n2==2 ) return 1; // ツーペア\n  if( n2==1 ) return 0; // ワンペア\n\n  return -1; // ブタ\n}\n\nint main(){\n  int n;\n  int fc[4][13], yc[9];\n\n\n  for( int i=2;i<=9;i++ )   mp[ '0'+i ] = i;\n  mp[ 'A' ] = 1;  mp[ 'T' ] = 10;\n  mp[ 'J' ] = 11; mp[ 'Q' ] = 12;\n  mp[ 'K' ] = 13;\n  mp[ 'S' ] = 0; mp[ 'C' ] = 1;\n  mp[ 'H' ] = 2; mp[ 'D' ] = 3;\n\n  while( cin>>n ){\n    for( int i=0;i<4;i++ )\n      for( int j=0;j<13;j++ )\n\tcin >> fc[i][j];\n    for( int i=0;i<9;i++ )\n      cin >> yc[i];\n\n    while( n-- ){\n      char num, kind;\n      long long fCost=0;\n      for( int i=0;i<5;i++ ){\n\tcin >> num >> kind;\n\tp[i] = P( mp[num],kind );\n\tfCost += fc[ mp[kind] ][ mp[num]-1 ];\n      }\n      long long yInd = yaku(), yCost=0;\n      if( yInd>=0 ) yCost = yc[yInd];\n      long long ans = fCost * yCost;\n      cout << ans << endl;\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<functional>\nusing namespace std;\n\n//0:Xy[h 1:N[o[ 2:n[g 3:_C\nint point[4][13];\n\n//u^AyAAc[yAAX[J[hAXg[gAtbV\n//tnEXAtH[J[hAXg[gtbVACXg[gtbV\nint mul[10];\n\n//SÌÊAX[c\n//mod100 : \nint strtoint(string s) {\n  int res = 0;\n  if(s.at(0) == 'A') res += 1;\n  if(s.at(0) == 'J') res += 11;\n  if(s.at(0) == 'Q') res += 12;\n  if(s.at(0) == 'K') res += 13;\n  if(s.at(0) == 'T') res += 10;\n  if(s.at(0) >= '2' && s.at(0) <= '9') res += s.at(0) - '0';\n  if(s.at(1) == 'C') res += 100;\n  if(s.at(1) == 'H') res += 200;\n  if(s.at(1) == 'D') res += 300;\n  return res;\n}\n\nint hand(vector<int> h) {\n  bool stp=true,flp=true;\n  vector<int> num;\n  for(int i=0; i<5; ++i) {\n    num.push_back(h[i]%100);\n  }\n  sort(num.begin(), num.end());\n  for(int i=1; i<5; ++i) {\n    if(num[i-1]+1 != num[i]) stp = false;\n    if(h[i]/100 != h[0]/100) flp = false;\n  }\n\n  //CXg[gtbV\n  if(num[0] == 1 && num[1] == 10 && num[2] == 11\n     && num[3] == 12 && num[4] == 13 && flp) return 9;\n\n  //Xg[gtbV\n  if(stp && flp) return 8;\n\n  if(num[0] == 1 && num[1] == 10 && num[2] == 11\n     && num[3] == 12 && num[4] == 13) stp = true;\n\n  //tH[J[h\n  if((num[0] == num[1] && num[1] == num[2] && num[2] == num[3])\n     ||(num[1] == num[2] && num[2] == num[3] && num[3] == num[4])) return 7;\n  //tnEX\n      if((num[0] == num[1] && num[2] == num[3] && num[3] == num[4])\n     || (num[0] == num[1] && num[1] == num[2] && num[3] == num[4])) return 6;\n\n  //tbV\n  if(flp) return 5;\n\n  //Xg[g\n  if(stp) return 4;\n\n  //X[J[h\n  if((num[0] == num[1] && num[1] == num[2])\n     ||(num[1] == num[2] && num[2] == num[3])\n     ||(num[2] == num[3] && num[3] == num[4])) return 3;\n\n  //c[yA\n  if((num[0] == num[1] && num[2] == num[3])\n     ||(num[0] == num[1] && num[3] == num[4])\n     ||(num[1] == num[2] && num[3] == num[4])) return 2;\n\n  //yA\n  if((num[0] == num[1]) || (num[1] == num[2]) || (num[2] == num[3])\n     ||(num[3] == num[4])) return 1;\n\n  return 0;\n}\n\nint main() {\n  int n,k=0;\n  mul[0] = 0;\n  while(cin>>n) {\n    if(k) cout<<endl;\n    for(int i=0; i<4; ++i)\n      for(int j=0; j<13; ++j)\n    cin>>point[i][j];\n\n    for(int i=1; i<10; ++i)\n      cin>>mul[i];\n\n\n    string s;\n    for(int i=0; i<n; ++i) {\n      vector<int> h;\n      int p = 0;\n      for(int j=0; j<5; ++j) {\n    cin>>s;\n    h.push_back(strtoint(s));\n    p += point[h[j]/100][h[j]%100-1];\n      }\n      //cout<<p<<\" * \"<<hand(h)<<\" = \"<<p*mul[hand(h)]<<endl;\n      cout<<p*mul[hand(h)]<<endl;\n    }\n    k++;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<algorithm>\n#include<numeric>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(c) (c).begin(),(c).end()\n#define mp make_pair\n#define pb push_back\n#define rp(i,c) rep(i,(c).size())\n#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf=1<<28;\nconst double INF=1e12,EPS=1e-9;\n\nint n,pt[4][13],mul[10];\nbool hand[4][14];\n\nint ck()\n{\n\tint rank[13]={0};\n\trep(i,4)rep(j,13)if(hand[i][j])rank[j]++;\n\t\n\tbool royal=0,straight=0,flush=0,four=0,three=0; int two=0;\n\trep(i,10)\n\t{\n\t\trep(j,5)if(!rank[(i+j)%13])goto FAIL;\n\t\tif(i==9)royal=1;\n\t\tstraight=1; FAIL:;\n\t}\n\tbool e[4]={0}; int s=0;\n\trep(i,4)rep(j,13)if(hand[i][j])e[i]=1;\n\trep(i,4)s+=e[i];\n\tflush=s==1;\n\t\n\trep(i,13)\n\t{\n\t\tif(rank[i]==4)four=1;\n\t\tif(rank[i]==3)three=1;\n\t\tif(rank[i]==2)two++;\n\t}\n\tif(straight&&flush)return royal?8:7;\n\tif(four)return 6;\n\tif(two&&three)return 5;\n\tif(flush)return 4;\n\tif(straight)return 3;\n\tif(three)return 2;\n\tif(two==2)return 1;\n\tif(two)return 0;\n\treturn 9;\n}\n\nint main()\n{\n\tchar st[256]; st['S']=0; st['C']=1; st['H']=2; st['D']=3;\n\tchar ra[256]; for(int i=2;i<=9;i++)ra['0'+i]=i-1;\n\tra['A']=0; ra['T']=9; ra['J']=10; ra['Q']=11; ra['K']=12;\n\t\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\trep(i,4)rep(j,13)scanf(\"%d\",pt[i]+j);\n\t\trep(i,9)scanf(\"%d\",mul+i);\n\t\t\n\t\trep(i,n)\n\t\t{\n\t\t\trep(j,4)rep(k,13)hand[j][k]=0;\n\t\t\t\n\t\t\tint bs=0;\n\t\t\trep(j,5)\n\t\t\t{\n\t\t\t\tchar h[3]; scanf(\"%s\",h);\n\t\t\t\tint r=ra[h[0]],s=st[h[1]];\n\t\t\t\thand[s][r]=1; bs+=pt[s][r];\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",mul[ck()]*bs);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, base[4][13], rate[10];\nstring mark = \"SCHD\";\n\nint getNumber(char c) {\n\tif (c == 'A') return 0;\n\tif (c == 'T') return 9;\n\tif (c == 'J') return 10;\n\tif (c == 'Q') return 11;\n\tif (c == 'K') return 12;\n\treturn c - '0' - 1;\n}\n\nbool isStraight(string card) {\n\tint tmp[5];\n\tfor (int i=0; i<5; ++i) tmp[i] = getNumber(card[2 * i]);\n\tsort(tmp, tmp + 5);\n\tfor (int i=0; i<4; ++i) if (tmp[i]+1 != tmp[i+1]) return false;\n\treturn true;\n}\n\nbool isFlush(string card) {\n\tchar tmp = card[1];\n\tfor (int i=1;i<5; ++i) if (tmp != card[2*i+1]) return false;\n\treturn true;\n}\n\nbool isRoyal(string card) {\n\tset< char > num_set;\n\tfor (int i=0; i<5; ++i) num_set.insert(card[2*i]);\n\tset< char > yes = {'A','T','J','Q','K'};\n\treturn num_set == yes;\n}\n\nint getID(string card) {\n\tint cnt[13];\n\tmemset(cnt, 0, sizeof(cnt));\n\tfor (int i=0; i<5; ++i) ++cnt[getNumber(card[2 * i])];\n\t\n\tint pair_num = 0, max_card = 0;\n\tfor (int i=0; i<13; ++i) {\n\t\tif (cnt[i] == 2) ++pair_num;\n\t\tmax_card = max(max_card, cnt[i]);\n\t}\n\t\n\tif (max_card == 2 && pair_num == 1) return 0; // one pair\n\tif (max_card == 2 && pair_num == 2) return 1; // two pair\n\t\n\tif (max_card == 3) {\n\t\tif (pair_num == 0) return 2; // three card\n\t\treturn 5; // full house\n\t}\n\t\n\tbool royal = isRoyal(card), straight = isStraight(card), flush = isFlush(card);\n\t\n\tif (royal && flush) return 8;\n\tif (straight && flush) return 7;\t\n\tif (straight) return 3;\n\tif (flush) return 4;\n\t\n\tif (max_card == 4) return 6;\n\t\n\treturn 9;\n}\n\nvoid solve() {\n\tfor (int i=0; i<n; ++i) {\n\t\tstring card;\n\t\tint sum = 0;\n\t\tfor (int j=0; j<5; ++j) {\n\t\t\tstring cj;\n\t\t\tcin >> cj;\n\t\t\tcard += cj;\n\t\t\tsum += base[mark.find(cj[1])][getNumber(cj[0])];\n\t\t}\n\t\tcout << sum * rate[getID(card)] << endl;\n\t}\n}\n\nint main() {\n\trate[9] = 0;\n\twhile (cin >> n) {\n\t\tfor (int i=0; i<4; ++i) for (int j=0; j<13; ++j) cin >> base[i][j];\n\t\tfor (int i=0; i<9; ++i) cin >> rate[i];\n\t\tsolve();\n\t\tcout << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n#include<numeric>\n#include<cassert>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define rep(i,s,n) for(int i=(s); i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n#define IN(x,s,g) ((x) >= (s) && (x) < (g))\n#define ISIN(x,y,w,h) (IN((x),0,(w)) && IN((y),0,(h)))\n#define print(x) printf(\"%d\\n\",x)\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\nconst int _dx[] = {0,1,0,-1};\nconst int _dy[] = {-1,0,1,0};\n\nint getInt(){\n  int ret = 0,c;\n  c = getchar();\n  while(!isdigit(c)) c = getchar();\n  while(isdigit(c)){\n    ret *= 10;\n    ret += c - '0';\n    c = getchar();\n  }\n  return ret;\n}\n\nint x[100][100];\nint y[100][100];\nint loop[100][100];\n\nint check(int yy,int xx, int a){\n  if(loop[yy][xx] == a) return 1;\n  if(loop[yy][xx] == 0){\n    loop[yy][xx] = a;\n    return check(y[yy][xx],x[yy][xx],a);\n  }\n  return 0;\n}\n\n#define SPADE  0\n#define CLOVER 1\n#define HEART  2\n#define DAIA   3\n\n#define ONE_PAIR   1\n#define TWO_PAIR   2\n#define THREE_CARD 3\n#define STRAIGHT   4\n#define FLASH      5\n#define FULL_HOUSE 6\n#define FOUR_CARD  7\n#define ST_FLASH   8\n#define RYAL_ST_FL 9\n\nint point[4][13];\nint ypoint[10];\n\nint main(){\n  int n;\n  int e[128];\n  int m[128];\n\n  REP(i,10) m['0'+i] = i - 1;\n  m['A'] =  0;\n  m['T'] =  9;\n  m['J'] = 10;\n  m['Q'] = 11;\n  m['K'] = 12;\n\n  e['H'] = HEART;\n  e['C'] = CLOVER;\n  e['D'] = DAIA;\n  e['S'] = SPADE;\n\n\n  while(cin>>n){\n    long long ans = 0;\n\n    REP(i,4) REP(j,13) cin>>point[i][j];\n    REP(i,9) cin>>ypoint[i+1];\n\n    while(n --> 0){\n      pair<int,int> card[5];\n      int base = 0;\n      int yaku = 0;\n      REP(i,5){\n        char buff[3];\n        cin>>buff;\n        //printf(\"buff = %s\\n\",buff);\n        card[i].f = m[buff[0]];\n        card[i].s = e[buff[1]];\n\n        base += point[card[i].s][card[i].f];\n\n        if(card[i].f == 0) card[i].f = 13;\n      }\n\n      sort(card, card+5);\n\n      int num[14] = {0};\n      int nume[4] = {0};\n      REP(i,5){\n        num[card[i].f]++;\n        nume[card[i].s]++;\n      }\n\n      int pcnt[6] = {0};\n      REP(i,14) pcnt[num[i]]++;\n\n      if(pcnt[2] == 1) yaku = ONE_PAIR;\n      if(pcnt[2] == 2) yaku = TWO_PAIR;\n      if(pcnt[3] == 1) yaku = THREE_CARD;\n\n      bool straight = true;\n      bool flash = false;\n      REP(i,4) if(card[i].f + 1 != card[i+1].f) straight = false;\n      if(straight) yaku = STRAIGHT;\n\n      REP(i,4) if(nume[i] == 5) flash = true;\n      if(flash) yaku =FLASH;\n\n      if(pcnt[2] == 1 && pcnt[3] == 1)\n        yaku = FULL_HOUSE;\n\n      if(pcnt[4] == 1)\n        yaku = FOUR_CARD;\n\n      if(flash && straight)\n        yaku = ST_FLASH;\n\n      if(flash && straight && card[0].f == 9)\n        yaku = RYAL_ST_FL;\n\n      //printf(\"base = %d, yaku = %d\\n\",base,yaku);\n      ans = (ll)ypoint[yaku] * base;\n      cout << ans << endl;\n    }\n    cout << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define num first\n#define ch  second\n\nenum{S=0,C=1,H=2,D=3};\n\nclass card{\npublic:\n  pair<int,char> d[5];\n\n  bool isflush(){\n    REP(i,1,5)if (d[0].ch != d[i].ch)return false;\n    return true;\n  }\n  \n  bool isspecialst(){\n    if (d[0].num==1 && \n\td[1].num==10&&\n\td[2].num==11&&\n\td[3].num==12&&\n\td[4].num==13)return true;\n    return false;\n  }\n  bool isstraight(){\n    if (d[0].num+1==d[1].num &&\n\td[0].num+2==d[2].num&&\n\td[0].num+3==d[3].num&&\n\td[0].num+4==d[4].num)return true;\n    return isspecialst();\n  }\n  \n  bool islsf(){\n    if (isspecialst()&&isflush())return true;\n    return false;\n  }\n  \n  bool issf(){\n    if (isflush()&&isstraight())return true;\n    return false;\n  }\n  \n  //four,three,two,one\n  bool isnum(int num){\n    rep(i,5){\n      int cnt=0;\n      rep(j,5)if (d[i].num==d[j].num)cnt++;\n      if (cnt == num)return true;\n    }\n    return false;\n  }\n  \n  bool istwo(){\n    if (d[0].num==d[1].num && d[2].num==d[3].num)return true;\n    if (d[0].num==d[1].num && d[3].num==d[4].num)return true;\n    if (d[1].num==d[2].num && d[3].num==d[4].num)return true;\n    return false;\n  }\n  \n\n  bool isfullhouse(){\n    if (d[0].num==d[1].num &&\n\td[2].num==d[3].num &&\n\td[2].num==d[4].num)return true;\n    if (d[0].num==d[1].num &&\n\td[0].num==d[2].num &&\n\td[3].num==d[4].num)return true;\n    return false;\n  }\n  int judge(int *rate){\n    sort(d,d+5);\n    if (islsf()){\n      return rate[9];\n    }\n    if (issf())return rate[8];\n    if (isnum(4))return rate[7];\n    if (isfullhouse())return rate[6];\n    if (isflush())return rate[5];\n    if (isstraight())return rate[4];\n    if (isnum(3))return rate[3];\n    if (istwo())return rate[2];\n    if (isnum(2))return rate[1];\n    return rate[0];\n  }\n\n};\n\n\n\n\nmain(){\n  string tmp=\"A23456789TJQK\";\n  int yaku[255];\n  for(int i=0;i<tmp.size();i++){\n    yaku[tmp[i]]=i+1;\n  }\n  \n  int tc=0;\n  int rate[10];\n  int table[4][14];\n  int n;\n  while(cin>>n){\n    if(tc++)cout << endl;\n\n    rep(i,4){\n      REP(j,1,14)cin>>table[i][j];\n    }\n\n    rate[0]=0;\n    for(int i=1;i<10;i++){\n      cin>>rate[i];\n    }\n\n    card in;\n    rep(i,n){\n      int score=0;\n      rep(j,5){\n\tchar a,b;\n\tcin>>a>>b;\n\tin.d[j].num=yaku[a];\n\tint ac=0;\n\tif (b=='S')ac=S;\n\tif (b=='C')ac=C;\n\tif (b=='H')ac=H;\n\tif (b=='D')ac=D;\n\tin.d[j].ch=b;\n\t//\tcout << ac <<\" \" << yaku[a] << endl;\n\tscore+=table[ac][yaku[a]];\n      }\n      //      cout <<\" score is \" << score << \" \" << in.judge(rate) << endl;\n      cout << score*in.judge(rate)<<endl;\n    }\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <map>\n#include <algorithm>\n#define P pair<long long,char> // 数字・種類\nusing namespace std;\n\nmap<char,int> mp; // 文字 -> 配列のインデックス\nP p[5];\n\nbool checkF(){\n  for( int i=1;i<5;i++ )\n    if( p[i-1].second!=p[i].second )\n      return false;\n  return true;\n}\nbool checkS(){\n  if( p[0].first==1 ){\n    if( p[4].first==13 || p[4].first==5){\n      for( int i=2;i<5;i++ )\n\tif( p[i-1].first+1 != p[i].first ) return false;\n    }else      return false;\n  }else{\n    for( int i=1;i<5;i++ )\n      if( p[i-1].first+1 != p[i].first ) return false;\n  }\n  return true;\n}\n\nint n2,n3;\nvoid countP(){\n  n2=0; n3=0;\n  for( int i=0;i<3;i++ )\n    if( p[i].first==p[i+1].first &&\n\tp[i].first==p[i+2].first ){\n      n3=1;\n      if( i==0 && p[3].first==p[4].first ) n2=1;\n      if( i==2 && p[0].first==p[1].first ) n2=1;\n      return ;\n    }\n  for( int i=1;i<5;i++ )\n    if( p[i-1].first==p[i].first ){\n      n2++; i++;\n    }\n}\n\nint yaku(){ // ペアがないときは-1\n  sort( p,p+5 );\n\n  /*\n  for( int i=0;i<5;i++ )\n    cout << \" \" << p[i].first << p[i].second;\n  cout << endl;\n  */\n\n  for( int i=0,j;i<2;i++ ){\n    for( j=0;j<4;j++ )\n      if( p[i].first != p[i+j].first ) break;\n    if( j==4 ) return 6; // フォーカード\n  }\n\n  countP();\n  if( n3==1 && n2==1 ) return 5; // フルハウス\n\n  bool isF = checkF();  // フラッシュ\n  bool isS = checkS();  // ストレート\n  if( isF ){\n    if( isS ){\n      if( p[0].first==1 && p[1].first==10 )\n\treturn 8; // ロイヤルストレートフラッシュ\n      return 7; // ストレートフラッシュ\n    }\n    return 4; // フラッシュ\n  }\n\n  if( isS )   return 3; // ストレート\n  if( n3==1 ) return 2; // スリーカード  \n  if( n2==2 ) return 1; // ツーペア\n  if( n2==1 ) return 0; // ワンペア\n\n  return -1; // ブタ\n}\n\nint main(){\n  int n;\n  int fc[4][13], yc[9];\n\n\n  for( int i=2;i<=9;i++ )   mp[ '0'+i ] = i;\n  mp[ 'A' ] = 1;  mp[ 'T' ] = 10;\n  mp[ 'J' ] = 11; mp[ 'Q' ] = 12;\n  mp[ 'K' ] = 13;\n  mp[ 'S' ] = 0; mp[ 'C' ] = 1;\n  mp[ 'H' ] = 2; mp[ 'D' ] = 3;\n\n  while( cin>>n ){\n    for( int i=0;i<4;i++ )\n      for( int j=0;j<13;j++ )\n\tcin >> fc[i][j];\n    for( int i=0;i<9;i++ )\n      cin >> yc[i];\n\n    while( n-- ){\n      char num, kind;\n      long long fCost=0;\n      for( int i=0;i<5;i++ ){\n\tcin >> num >> kind;\n\tp[i] = P( mp[num],kind );\n\tfCost += fc[ mp[kind] ][ mp[num]-1 ];\n      }\n      long long yInd = yaku(), yCost=0;\n      if( yInd>=0 ) yCost = yc[yInd];\n      long long ans = fCost * yCost;\n      cout << ans << endl;\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<char,int> m;\n\nbool op(string s[]){\n\trep(i,5)rep(j,5)if(i!=j){\n\t\tif(s[i][0]==s[j][0])return true;\n\t}\n\treturn false;\n}\n\nbool tp(string s[]){\n\trep(i,5)rep(j,5)rep(k,5)rep(l,5){\n\t\tif(i==j)continue;\n\t\tif(i==k)continue;\n\t\tif(i==l)continue;\n\t\tif(j==k)continue;\n\t\tif(j==l)continue;\n\t\tif(k==l)continue;\n\t\tif(s[i][0]==s[j][0]&&s[k][0]==s[l][0])return true;\n\t}\n\treturn false;\n}\n\nbool tc(string s[]){\n\trep(i,5)rep(j,5)rep(k,5){\n\t\tif(i==j)continue;\n\t\tif(i==k)continue;\n\t\tif(j==k)continue;\n\t\tif(s[i][0]!=s[j][0])continue;\n\t\tif(s[i][0]!=s[k][0])continue;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool ts(string s[]){\n\tint i;\n\trep0(i,5)if(s[i][0]=='A')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='K')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='Q')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='J')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='T')break;\n\tif(i==5)return false;\n\treturn true;\n}\n\nbool st(string s[]){\n\tif(ts(s))return true;\n\tint bit=0;\n\trep(i,5)bit|=1<<m[s[i][0]];\n\twhile(bit!=0){\n\t\tif(bit==31)return true;\n\t\tbit/=2;\n\t}\n\treturn false;\n}\n\nbool fl(string s[]){\n\tif(s[0][1]!=s[1][1])return false;\n\tif(s[0][1]!=s[2][1])return false;\n\tif(s[0][1]!=s[3][1])return false;\n\tif(s[0][1]!=s[4][1])return false;\n\treturn true;\n}\n\nbool fh(string s[]){\n\tif(s[0][0]==s[1][0]&&s[2][0]==s[3][0]&&s[2][0]==s[4][0])return true;\n\tif(s[0][0]==s[2][0]&&s[1][0]==s[3][0]&&s[1][0]==s[4][0])return true;\n\tif(s[0][0]==s[3][0]&&s[1][0]==s[2][0]&&s[1][0]==s[4][0])return true;\n\tif(s[0][0]==s[4][0]&&s[1][0]==s[2][0]&&s[1][0]==s[3][0])return true;\n\tif(s[1][0]==s[2][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[3][0]&&s[0][0]==s[2][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[4][0]&&s[0][0]==s[2][0]&&s[0][0]==s[3][0])return true;\n\tif(s[2][0]==s[3][0]&&s[0][0]==s[1][0]&&s[0][0]==s[4][0])return true;\n\tif(s[2][0]==s[4][0]&&s[0][0]==s[1][0]&&s[0][0]==s[3][0])return true;\n\tif(s[3][0]==s[4][0]&&s[0][0]==s[1][0]&&s[0][0]==s[2][0])return true;\n\treturn false;\n}\n\nbool fc(string s[]){\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[2][0]&&s[0][0]==s[3][0])return true;\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[2][0]&&s[0][0]==s[4][0])return true;\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[0][0]==s[2][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[2][0]&&s[1][0]==s[3][0]&&s[1][0]==s[4][0])return true;\n\treturn false;\n}\n\nbool sf(string s[]){\n\tif(!st(s))return false;\n\treturn fl(s);\n}\n\nbool rs(string s[]){\n\tif(!ts(s))return false;\n\treturn fl(s);\n}\n\nint main() {\n\tm['A']=0;\n\tm['2']=1;\n\tm['3']=2;\n\tm['4']=3;\n\tm['5']=4;\n\tm['6']=5;\n\tm['7']=6;\n\tm['8']=7;\n\tm['9']=8;\n\tm['T']=9;\n\tm['J']=10;\n\tm['Q']=11;\n\tm['K']=12;\n\tm['S']=0;\n\tm['C']=1;\n\tm['H']=2;\n\tm['D']=3;\n\tint n;\n\tbool first=true;\n\twhile(cin>>n){\n\t\tif(!first)cout<<endl;\n\t\tfirst=false;\n\t\tint x[4][13];\n\t\trep(i,4)rep(j,13)cin>>x[i][j];\n\t\tint y[9];\n\t\trep(i,9)cin>>y[i];\n\t\tstring cards[5];\n\t\trep(a,n){\n\t\t\trep(i,5)cin>>cards[i];\nrep(i,5)debug<<cards[i]<<endl;\n\t\t\tint ki=0;\n\t\t\trep(i,5)ki+=x[m[cards[i][1]]][m[cards[i][0]]];\ndebug<<\"ki : \"<<ki<<endl;\n\t\t\tif(rs(cards)){\n\t\t\t\tcout<<ki*y[8]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(sf(cards)){\n\t\t\t\tcout<<ki*y[7]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fc(cards)){\n\t\t\t\tcout<<ki*y[6]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fh(cards)){\n\t\t\t\tcout<<ki*y[5]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fl(cards)){\n\t\t\t\tcout<<ki*y[4]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(st(cards)){\n\t\t\t\tcout<<ki*y[3]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tc(cards)){\n\t\t\t\tcout<<ki*y[2]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tp(cards)){\n\t\t\t\tcout<<ki*y[1]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(op(cards)){\n\t\t\t\tcout<<ki*y[0]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcout<<0<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <cctype>\nusing namespace std;\n\nint score[14][4];\nint rate[10];\n\ntypedef pair<int, int> card;\ntypedef vector<card> cards;\n\nint toNum(char a)\n{\n\tif(isdigit(a)) return a-'0';\n\tif(a=='T') return 10;\n\tif(a=='J') return 11;\n\tif(a=='Q') return 12;\n\tif(a=='K') return 13;\n\treturn a-'A'+1;\n}\n\nint toNum2(char a)\n{\n\tif(a=='S') return 0;\n\tif(a=='C') return 1;\n\tif(a=='H') return 2;\n\t\n\treturn 3;\n}\n\ncards input()\n{\n\tcards in;\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tin.push_back(make_pair(toNum(s[0]), toNum2(s[1])));\n\t}\n\t\n\tsort(in.begin(), in.end());\n\t\n\treturn in;\n}\n\nvector<int> calcPair(cards in)\n{\n\tvector<int> ret;\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first]++;\n\t}\n\t\n\tfor(int i=1; i<=13; i++)\n\t{\n\t\tif(num[i]>1) ret.push_back(num[i]);\n\t}\n\t\n\tsort(ret.begin(), ret.end());\n\t\n\treturn ret;\n}\n\nbool isFlash(cards in)\n{\n\tfor(int i=1; i<5; i++)\n\t\tif(in[0].second!=in[i].second) return false;\n\t\t\n\treturn true;\n}\n\nint isStraight(cards in)\n{\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first+(4-i)]++;\n\t}\n\t\n\tif(num[in[4].first]==5) return 1;\n\tif(num[in[4].first]==4&&num[5]) return 2;\n\t\n\treturn 0;\n}\n\nint total(cards in)\n{\n\tint ret=0;\n\tfor(int i=0; i<5; i++)\n\t\tret+=score[in[i].first][in[i].second];\n\t\t\n\treturn ret;\n}\n\n\nint calc(cards in)\n{\n\tvector<int> pr=calcPair(in);\n\tint ret=0,sz=pr.size();\n\t\n\tif(sz!=0&&pr[sz-1]==2) ret=1;\n\tif(sz==2&&pr[0]==pr[1]) ret=2;\n\tif(sz!=0&&pr[sz-1]==3) ret=3;\n\tif(isStraight(in)!=0) ret=4;\n\tif(isFlash(in)) ret=5;\n\tif(sz==2&&pr[0]==2&&pr[1]==3) ret=6;\n\tif(sz!=0&&pr[sz-1]==4) ret=7;\n\tif(isStraight(in)!=0&&isFlash(in)) ret=8;\n\tif(isStraight(in) == 2 && isFlash(in)) ret=9;\n\t\n\treturn total(in)*rate[ret];\n}\n\nint main()\n{\n\tbool flg=true;\n\tint N;\n\twhile(cin >> N)\n\t{\n\t\tif(flg) flg=false;\n\t\telse cout << endl;\n\t\t\n\t\tfor(int i=0; i<4; i++)\n\t\tfor(int j=0; j<13; j++)\n\t\t\tcin >> score[j+1][i];\n\t\t\n\t\trate[0]=0;\n\t\tfor(int i=0; i<9; i++)\n\t\t\tcin >> rate[i+1];\n\t\t\t\n\t\tfor(int i=0; i<N; i++)\n\t\t{\n\t\t\tcards cs=input();\n\t\t\tcout << calc(cs) << endl;\n\t\t}\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[4][13], p[10], z; char c; pair<int, int> s[5]; string s1 = \"A23456789TJQK\", s2 = \"SCHD\";\nint judge() {\n\tvector<int> v; int w = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].first != s[i - 1].first) v.push_back(w), w = 0;\n\t\tw++;\n\t}\n\tv.push_back(w);\n\tsort(v.begin(), v.end());\n\tif (v.back() == 4) return 7;\n\tif (v.back() == 3 && v.size() == 2) return 6;\n\tint f = 1, g = 1, h = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].second != s[i - 1].second) f = 0;\n\t}\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i - 1].first + 1 != s[i].first) g = 0;\n\t}\n\tfor (int i = 0; i < 5; i++) {\n\t\tif (s[i].first != (i ? (i + 9) % 13 : 0)) h = 0;\n\t}\n\tif (f) {\n\t\tif (h) return 9;\n\t\tif (g) return 8;\n\t\treturn 5;\n\t}\n\tif (g | h) return 4;\n\tif (v.back() == 3) return 3;\n\tif (v.back() == 2 && v[v.size() - 2] == 2) return 2;\n\tif (v.back() == 2) return 1;\n\treturn 0;\n}\nint main() {\n\twhile (cin >> n) {\n\t\tif (z++) cout << endl;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) cin >> a[i][j];\n\t\t}\n\t\tfor (int i = 1; i < 10; i++) cin >> p[i];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> c; s[j].first = s1.find(c);\n\t\t\t\tcin >> c; s[j].second = s2.find(c);\n\t\t\t\tcnt += a[s[j].second][s[j].first];\n\t\t\t}\n\t\t\tsort(s, s + 5);\n\t\t\tcout << cnt * p[judge()] << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint same(vector<int> &c){\n\tfor(int i = 1 ; i < c.size() ; i++)\n\t\tif(c[i] != c[i-1]) return false;\n\treturn true;\n}\n\nint royal(vector<int> &v,vector<int> &c){\n\treturn same(c) && v[0] == 1 && v[1] == 10 && v[2] == 11 && v[3] == 12 && v[4] == 13;\n}\nint straightflash(vector<int> &v,vector<int> &c){\n\tif(!same(c))return false;\n\tif(v[0] == 1 && v[1] == 10 && v[2] == 11 && v[3] == 12 && v[4] == 13) return true;\n\tfor(int i = 1; i < v.size() ; i++)\n\t\tif(v[i] != v[i-1]+1) return false;\n\treturn true;\n}\nint straight(vector<int> &v,vector<int> &c){\n\tif(v[0] == 1 && v[1] == 10 && v[2] == 11 && v[3] == 12 && v[4] == 13) return true;\n\tfor(int i = 1; i < v.size() ; i++){\n\t\tif(v[i] != v[i-1]+1) return false;\n\t}\n\treturn true;\n}\nint four(vector<int> &v,vector<int> &c){\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 4) return true;\n\t}\n\treturn false;\n}\nint fullhouse(vector<int> &v,vector<int> &c){\n\tbool f1 = 0 , f2 = 0;\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 3) f1 = true;\n\t\tif(count(v.begin(),v.end(),v[i]) == 2) f2 = true;\n\t}\n\treturn f1 & f2;\n}\n\nint three(vector<int> &v,vector<int> &c){\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 3) return true;\n\t}\n\treturn false;\n}\n\nint two(vector<int> &v,vector<int> &c){\n\tint k[10] = {0};\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tk[count(v.begin(),v.end(),v[i])]++;\n\t}\n\treturn k[2] == 4;\n}\n\nint one(vector<int> &v,vector<int> &c){\n\tint k[10] = {0};\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tk[count(v.begin(),v.end(),v[i])]++;\n\t}\n\treturn k[2] == 2;\n}\n\nint flash(vector<int> &v,vector<int> &c){\n\treturn same(c);\n}\nint num(char c){\n\tif(c == 'A') return 1;\n\telse if(c == 'T') return 10;\n\telse if(c == 'J') return 11;\n\telse if(c == 'Q') return 12;\n\telse if(c == 'K') return 13;\n\telse return c - '0';\n}\nint suit(char c){\n\tswitch(c){\n\tcase 'S':return 1;\n\tcase 'C':return 2;\n\tcase 'H':return 3;\n\tcase 'D':return 4;\n\t};\n}\nint main(){\n\tint n;\n\tint (*p[9]) (vector<int> &v,vector<int> &c);\n\tp[0] = one;\n\tp[1] = two;\n\tp[2] = three;\n\tp[3] = straight;\n\tp[4] = flash;\n\tp[5] = fullhouse;\n\tp[6] = four;\n\tp[7] = straightflash;\n\tp[8] = royal;\n\tint T = 0;\n\twhile(cin >> n){\n\t\tif(T++)cout << endl;\n\t\tint w[5][14];\n\t\tfor(int y = 1 ; y <= 4 ; y++){\n\t\t\tfor(int i = 1 ; i <= 13 ; i++){\n\t\t\t\tcin >> w[y][i];\n\t\t\t}\t\t\n\t\t}\n\t\t\n\t\tint rate[9];\n\t\tfor(int i = 0 ; i < 9 ; i++){\n\t\t\tcin >> rate[i];\n\t\t}\n\t\tfor(int _ = 0 ; _ < n ; _++){\n\t\t\tint o = 0;\n\t\t\tvector<int> v; vector<int> c;\n\t\t\tfor(int i = 0 ; i < 5 ; i++){\n\t\t\t\tstring s;\n\t\t\t\tcin >> s;\n\t\t\t\tv.push_back(num(s[0]));\n\t\t\t\tc.push_back(suit(s[1]));\n\t\t\t\to += w[suit(s[1])][num(s[0])];\n\t\t\t}\n\t\t\tfor(int __ = 0 ; __ < 5 ; __++){\n\t\t\t\tfor(int i = 0 ; i < 4 ; i++){\n\t\t\t\t\tif(v[i] > v[i+1]){\n\t\t\t\t\t\tswap(v[i],v[i+1]);\n\t\t\t\t\t\tswap(c[i],c[i+1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ans = 0;\n\t\t\tfor(int i = 0 ; i < 9 ; i++){\n\t\t\t\tans = max( p[i](v,c) * o * rate[i] , ans);\n\t\t\t}\n\t\t\tcout << ans << endl;\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n\nusing namespace std;\n\nconst int NOPAIR = -1;\nconst int ONEPAIR = 0;\nconst int TWOPAIR = 1;\nconst int THREECARD = 2;\nconst int STRAIGHT = 3;\nconst int FLUSH = 4;\nconst int FULLHOUSE = 5;\nconst int FOURCARD = 6;\nconst int STRAIGHTFLUSH = 7;\nconst int ROYALSTRAIGHTFLUSH = 8;\n\nint N,C[4][13],P[9];\n\nstruct card{\n  int n;\n  char s;\n  bool operator < (const card& c) const {return n < c.n;}\n};\n\n\nvoid input(){\n  for(int i = 0; i < 4; i++)\n    for(int j = 0; j < 13; j++) cin >> C[i][j];\n\n  for(int i = 0; i < 9; i++) cin >> P[i];\n}\n\nint getMaxSameNum(const vector<card>& V){\n  \n  int ret = 0;\n\n  for(int i = 0; i < (int)V.size(); i++){\n    int tmp = 0;\n    for(int j = i; j < (int)V.size(); j++)\n      if(V[i].n == V[j].n) tmp++;\n    ret = max(ret,tmp);\n  }\n  return ret;\n}\n\n\nbool isStraight(const vector<card>& V){\n  for(int i = 0; i < (int)V.size()-1; i++)\n    if(V[i].n+1 != V[i+1].n) return false;\n  return true;\n}\n\nbool isSameSuit(const vector<card>& V){\n  char c = V[0].s;\n  for(int i = 0; i < (int)V.size(); i++)\n    if(c != V[i].s) return false;\n  return true;\n}\n\nvector<int> getPair(const vector<card>& V){\n  int tmp[13] = {0};\n  vector<int> res;\n  for(int i = 0; i < (int)V.size(); i++) tmp[V[i].n-1]++;\n  \n  for(int i = 0; i < 13; i++)\n    if(tmp[i] > 0) res.push_back(tmp[i]);\n  sort(res.begin(),res.end());\n  return res;\n}\n\nint getRank(int knum, bool straight, bool samesuit, vector<int> pnum, int minnum){\n  if(samesuit && straight && minnum == 10) return ROYALSTRAIGHTFLUSH;\n  if(straight && samesuit) return STRAIGHTFLUSH;\n  if(knum == 4) return FOURCARD;\n  if(pnum.size() == 2 && pnum[0] == 2 && pnum[1] == 3) return FULLHOUSE;\n  if(samesuit) return FLUSH;\n  if(straight) return STRAIGHT;\n  if(knum == 3) return THREECARD;\n  if(pnum.size() == 3 && pnum[0] == 1 && pnum[1] == 2 && pnum[2] == 2) return TWOPAIR;\n  if(pnum.size() == 4 && pnum[0] == 1 && pnum[1] == 1 && pnum[2] == 1 && pnum[3] == 2) return ONEPAIR;\n  return NOPAIR;\n}\n\nvoid solve(){\n\n  while(N--){\n    vector<card> V(5);\n    for(int i = 0; i < 5; i++){\n      char num;\n      cin >> num >> V[i].s;\n      if(num == 'T') V[i].n = 10;\n      else if(num == 'J') V[i].n = 11;\n      else if(num == 'Q') V[i].n = 12;\n      else if(num == 'K') V[i].n = 13;\n      else if(num == 'A') V[i].n = 1;\n      else V[i].n = num-'0';\n    }\n    \n    sort(V.begin(),V.end());\n    \n    int rank = getRank(getMaxSameNum(V),isStraight(V),isSameSuit(V),getPair(V),V[0].n);\n\n    if(V[0].n == 1){\n      V[0].n = 14;\n      sort(V.begin(),V.end());\n      rank = max(rank,getRank(getMaxSameNum(V),isStraight(V),isSameSuit(V),getPair(V),V[0].n));\n    }\n\n\n    int res = 0;\n    \n    //  cout << \"knum \" << getMaxSameNum(V) << endl;\n    // cout << \"rank \" << rank << endl;\n\n    if(V[4].n == 14) V[4].n = 1;\n\n    if(rank >= 0){\n      for(int i = 0; i < 5; i++){\n\tint suit;\n\tif(V[i].s == 'S') suit = 0;\n\tif(V[i].s == 'C') suit = 1;\n\tif(V[i].s == 'H') suit = 2;\n\tif(V[i].s == 'D') suit = 3;\n\tres += C[suit][V[i].n-1];\n      }\n      res *= P[rank];\n    }\n    cout << res << endl;\n  }\n}\n\nint main(){\n  bool f = false;\n\n  while(cin >> N){\n    if(f) cout << endl;\n    else f = true;\n    input();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint to_i(char c)\n{\n  switch (c) {\n    case 'A': return 1;\n    case 'T': return 10;\n    case 'J': return 11;\n    case 'Q': return 12;\n    case 'K': return 13;\n    default: return c-'0';\n  }\n}\n\nvoid to_ns(int ns[5], const string hand[5])\n{\n  for (int i = 0; i < 5; i++) {\n    ns[i] = to_i(hand[i][0]);\n  }\n  sort(ns, ns+5);\n}\n\nint kihon(const string hand[5], const int points[4][13])\n{\n  int s = 0;\n  for (int i = 0; i < 5; i++) {\n    const int n = to_i(hand[i][0])-1;\n    int c;\n    switch (hand[i][1]) {\n      case 'S': c = 0; break;\n      case 'C': c = 1; break;\n      case 'H': c = 2; break;\n      case 'D': c = 3; break;\n    }\n    //cout << hand[i] << \" = \" << n << \",\" << c << endl;\n    s += points[c][n];\n  }\n  return s;\n}\n\nbool fullhouse(const string hand[5])\n{\n  int ns[5];\n  to_ns(ns, hand);\n  return\n    (ns[0] == ns[1] && ns[2] == ns[3] && ns[3] == ns[4])\n    || (ns[0] == ns[1] && ns[1] == ns[2] && ns[3] == ns[4]);\n}\n\nbool flash(const string hand[5])\n{\n  const int c = hand[0][1];\n  for (int i = 1; i < 5; i++) {\n    if (hand[i][1] != c) {\n      return false;\n    }\n  }\n  return true;\n}\n\nbool straight(const string hand[5])\n{\n  int ns[5];\n  to_ns(ns, hand);\n  if (ns[0] == 1 && ns[1] == 10 && ns[2] == 11 && ns[3] == 12 && ns[4] == 13) {\n    return true;\n  } else {\n    for (int i = 0; i < 4; i++) {\n      if (ns[i+1]-1 != ns[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nbool royal(const string hand[5])\n{\n  if (!flash(hand)) {\n    return false;\n  } else if (!straight(hand)) {\n    return false;\n  } else {\n    int ns[5];\n    to_ns(ns, hand);\n    return ns[0] == 1 && ns[1] == 10;\n  }\n}\n\nbool cards(const string hand[5], int N)\n{\n  int ns[5];\n  to_ns(ns, hand);\n  for (int i = 0; i <= 5-N; i++) {\n    for (int j = 0; j < N; j++) {\n      if (ns[i] != ns[j+i]) {\n        goto NEXT;\n      }\n    }\n    return true;\nNEXT:\n    ;\n  }\n  return false;\n}\n\nbool twopair(const string hand[5])\n{\n  int ns[5];\n  to_ns(ns, hand);\n  return (ns[0] == ns[1] && (ns[2] == ns[3] || ns[3] == ns[4]))\n    || (ns[1] == ns[2] && ns[3] == ns[4]);\n}\n\nint poker(const string hand[5], const int pats[9])\n{\n  if (royal(hand)) {\n    return pats[8];\n  } else if (straight(hand) && flash(hand)) {\n    return pats[7];\n  } else if (cards(hand, 4)) {\n    return pats[6];\n  } else if (fullhouse(hand)) {\n    return pats[5];\n  } else if (flash(hand)) {\n    return pats[4];\n  } else if (straight(hand)) {\n    return pats[3];\n  } else if (cards(hand, 3)) {\n    return pats[2];\n  } else if (twopair(hand)) {\n    return pats[1];\n  } else if (cards(hand, 2)) {\n    return pats[0];\n  } else {\n    return 0;\n  }\n}\n\nint main()\n{\n  int N;\n  bool first = true;\n  while (cin >> N) {\n    int points[4][13];\n    for (int i = 0; i < 4; i++) {\n      for (int j = 0; j < 13; j++) {\n        cin >> points[i][j];\n      }\n    }\n    int pats[9];\n    for (int i = 0; i < 9; i++) {\n      cin >> pats[i];\n    }\n\n    if (!first) {\n      cout << endl;\n    }\n    first = false;\n\n    for (int i = 0; i < N; i++) {\n      string hand[5];\n      for (int j = 0; j < 5; j++) {\n        cin >> hand[j];\n      }\n\n      const int k = kihon(hand, points);\n      const int p = poker(hand, pats);\n      cout << k*p << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <map>\n#include <algorithm>\n#define P pair<long long,char> // 数字・種類\nusing namespace std;\n\nmap<char,int> mp; // 文字 -> 配列のインデックス\nP p[5];\n\nbool checkF(){\n  for( int i=1;i<5;i++ )\n    if( p[i-1].second!=p[i].second )\n      return false;\n  return true;\n}\nbool checkS(){\n  if( p[0].first==1 ){\n    if( p[4].first==13 || p[4].first==5){\n      for( int i=2;i<5;i++ )\n\tif( p[i-1].first+1 != p[i].first ) return false;\n    }else      return false;\n  }else{\n    for( int i=1;i<5;i++ )\n      if( p[i-1].first+1 != p[i].first ) return false;\n  }\n  return true;\n}\n\nint n2,n3;\nvoid countP(){\n  n2=0; n3=0;\n  for( int i=0;i<3;i++ )\n    if( p[i].first==p[i+1].first &&\n\tp[i].first==p[i+2].first ){\n      n3=1;\n      if( i==0 && p[3].first==p[4].first ) n2=1;\n      if( i==2 && p[0].first==p[1].first ) n2=1;\n      return ;\n    }\n  for( int i=1;i<5;i++ )\n    if( p[i-1].first==p[i].first ){\n      n2++; i++;\n    }\n}\n\nint yaku(){ // ペアがないときは-1\n  sort( p,p+5 );\n\n  /*\n  for( int i=0;i<5;i++ )\n    cout << \" \" << p[i].first << p[i].second;\n  cout << endl;\n  */\n\n  for( int i=0,j;i<2;i++ ){\n    for( j=0;j<4;j++ )\n      if( p[i].first != p[i+j].first ) break;\n    if( j==4 ) return 6; // フォーカード\n  }\n\n  countP();\n  if( n3==1 && n2==1 ) return 5; // フルハウス\n\n  bool isF = checkF();  // フラッシュ\n  bool isS = checkS();  // ストレート\n  if( isF ){\n    if( isS ){\n      if( p[0].first==1 && p[1].first==10 )\n\treturn 8; // ロイヤルストレートフラッシュ\n      return 7; // ストレートフラッシュ\n    }\n    return 4; // フラッシュ\n  }\n\n  if( isS )   return 3; // ストレート\n  if( n3==1 ) return 2; // スリーカード  \n  if( n2==2 ) return 1; // ツーペア\n  if( n2==1 ) return 0; // ワンペア\n\n  return -1; // ブタ\n}\n\nint main(){\n  int n;\n  int fc[4][13], yc[9];\n\n\n  for( int i=2;i<=9;i++ )   mp[ '0'+i ] = i;\n  mp[ 'A' ] = 1;  mp[ 'T' ] = 10;\n  mp[ 'J' ] = 11; mp[ 'Q' ] = 12;\n  mp[ 'K' ] = 13;\n  mp[ 'S' ] = 0; mp[ 'C' ] = 1;\n  mp[ 'H' ] = 2; mp[ 'D' ] = 3;\n\n  bool fff=false;\n  while( cin>>n ){\n    if( fff ) cout << endl;\n    else fff=true;\n\n    for( int i=0;i<4;i++ )\n      for( int j=0;j<13;j++ )\n\tcin >> fc[i][j];\n    for( int i=0;i<9;i++ )\n      cin >> yc[i];\n\n    while( n-- ){\n      char num, kind;\n      long long fCost=0;\n      for( int i=0;i<5;i++ ){\n\tcin >> num >> kind;\n\tp[i] = P( mp[num],kind );\n\tfCost += fc[ mp[kind] ][ mp[num]-1 ];\n      }\n      long long yInd = yaku(), yCost=0;\n      if( yInd>=0 ) yCost = yc[yInd];\n      long long ans = fCost * yCost;\n      cout << ans << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<set>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int g,h,i,j;\n  int a[4][13],b[9],n,f,s,l,m,t;\n  char p[14]={\"A23456789TJQK\"},q[5]={\"SCHD\"};\n  pair<int,int> c[5];\n  g=0;\n  while(cin>>n){\n    if(g)\n      cout<<endl;\n    else\n      g=1;\n    for(i=0;i<4;i++)\n      for(j=0;j<13;j++)\n\tcin>>a[i][j];\n    for(i=0;i<9;i++)\n      cin>>b[i];\n    for(h=0;h<n;h++){\n      for(i=0;i<5;i++){\n\tchar s,t;\n\tcin>>s>>t;\n\tfor(j=0;j<13;j++){\n\t  if(p[j]==s)\n\t    c[i].first=j;\n\t}\n\tfor(j=0;j<4;j++){\n\t  if(q[j]==t)\n\t    c[i].second=j;\n\t}\n      }\n      sort(&c[0],&c[5]);\n      f=s=l=m=1;\n      for(i=1;i<5;i++){\n\tif(c[i-1].second!=c[i].second)\n\t  f=0;\n\tif(c[i-1].first+1!=c[i].first)\n\t  s=0;\n      }\n      if(c[0].first==0&&c[1].first==9&&c[2].first==10&&c[3].first==11&&c[4].first==12)\n\ts=2;\n      for(i=0;i<5;i=j){\n\tfor(j=i;j<5&&c[i].first==c[j].first;j++);\n\tif(m<j-i){\n\t  l=m;\n\t  m=j-i;\n\t}else if(l<j-i){\n\t  l=j-i;\n\t}\n      }\n      t=0;\n      for(i=0;i<5;i++)\n\tt+=a[c[i].second][c[i].first];\n      if(0){\n      }else if(s==2&&f==1){\n\tt*=b[8];\n      }else if(s==1&&f==1){\n\tt*=b[7];\n      }else if(m==4){\n\tt*=b[6];\n      }else if(m==3&&l==2){\n\tt*=b[5];\n      }else if(f==1){\n\tt*=b[4];\n      }else if(s!=0){\n\tt*=b[3];\n      }else if(m==3){\n\tt*=b[2];\n      }else if(m==2&&l==2){\n\tt*=b[1];\n      }else if(m==2){\n\tt*=b[0];\n      }else{\n\tt=0;\n      }\n      cout<<t<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\ntypedef pair<int, int> P;\nint cpair(vector<P>& hand){\n  map<int, int> cnt;\n  REP(i,hand.size()) cnt[hand[i].first]++;\n  int res = 0;\n  FORIT(it, cnt){\n    if(it->second == 2) res++;\n    else if(it->second == 4) res += 2;\n  }\n  return res;\n}\nbool three(vector<P>& hand){\n  map<int, int> cnt;\n  REP(i,hand.size()) cnt[hand[i].first]++;\n  int res = 0;\n  FORIT(it, cnt){\n    if(it->second == 3) res++;\n  }\n  return (bool)res;\n}\nbool four(vector<P>& hand){\n  map<int, int> cnt;\n  REP(i,hand.size()) cnt[hand[i].first]++;\n  int res = 0;\n  FORIT(it, cnt){\n    if(it->second == 4) res++;\n  }\n  return (bool)res;\n}\nbool specialstraight(vector<P>& hand){\n  int specialcase[] = {1,10,11,12,13};\n  REP(i,5)if(hand[i].first != specialcase[i]) return false;\n  return true;\n}\nbool straight(vector<P>& hand){\n  if(specialstraight(hand)) return true;\n  REP(i,4)if(hand[i].first + 1 != hand[i+1].first) return false;\n  return true;\n}\nbool flash(vector<P>& hand){\n  REP(i,4)if(hand[i].second != hand[i+1].second) return false;\n  return true;\n}\nint judge(vector<P>& hand){\n  if(specialstraight(hand) && flash(hand)) return 8;\n  if(straight(hand) && flash(hand)) return 7;\n  if(four(hand)) return 6;\n  if(cpair(hand) && three(hand)) return 5;\n  if(flash(hand)) return 4;\n  if(straight(hand)) return 3;\n  if(three(hand)) return 2;\n  if(cpair(hand) == 2) return 1;\n  if(cpair(hand) == 1) return 0;\n  return -1;\n}\nint main(){\n  int v[4][13];\n  int pt[9];\n  int N;\n  map<char, int> id;\n  id['S'] = id.size() - 1;\n  id['C'] = id.size() - 1;\n  id['H'] = id.size() - 1;\n  id['D'] = id.size() - 1;\n  bool f = false;\n  while(cin>>N){\n    if(f) cout<<endl;\n    else f = true;\n    REP(i,4)REP(j,13)cin>>v[i][j];\n    REP(i,9)cin>>pt[i];\n    while(N--){\n      vector<P> hand;\n      REP(i,5){\n        string s; cin>>s;\n        P p;\n        if(isdigit(s[0])) p.first = s[0] - '0';\n        else if(s[0] == 'A') p.first = 1;\n        else if(s[0] == 'J') p.first = 11;\n        else if(s[0] == 'Q') p.first = 12;\n        else if(s[0] == 'K') p.first = 13;\n        else if(s[0] == 'T') p.first = 10;\n        else assert(false);\n        p.second = id[s[1]];\n        hand.push_back(p);\n      }\n      sort(hand.begin(), hand.end());\n      int point = 0;\n      REP(i, 5) point += v[hand[i].second][hand[i].first-1];\n      int power = judge(hand);\n      //printf(\"%d:\",power);\n      //REP(i, 5) printf(\"%d,%d \", hand[i].first, hand[i].second); cout<<endl;\n      if(power != -1) power = pt[power];\n      else power = 0;\n      cout<<point*power<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n        cin >> kihon[i][j];\n      }\n    }\n\n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n\n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n        char temp;\n        cin >> temp >> tehudac[i];\n        if(temp>'1' && temp<='9'){\n          tehudan[i]=temp-'0';\n        }\n        else if(temp=='T') tehudan[i]=10;\n        else if(temp=='J') tehudan[i]=11;\n        else if(temp=='Q') tehudan[i]=12;\n        else if(temp=='K') tehudan[i]=13;\n        else if(temp=='A') tehudan[i]=1;\n        getchar();\n      }\n\n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n        if(tehudac[i]=='S') iro=0;\n        else if(tehudac[i]=='C') iro=1;\n        else if(tehudac[i]=='H') iro=2;\n        else if(tehudac[i]=='D') iro=3;\n\n        sum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n\n      int yaku;\n      yaku=hantei();\n\n      int ans;\n      if(yaku==-1){\n        cout << 0 << endl;\n      }\n      else{\n        ans=bairitu[yaku]*sum;\n        cout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n\n\nint kumi(){\n  int count=0;\n\n  for(int i=0;i<4;i++){\n    int j;\n    if(tehudan[i]==tehudan[i+1]){\n      for(j=0;j+i<4;j++){\n\tif(tehudan[i+j]!=tehudan[i+j+1]) break;\n      }\n      if(j==1) count++;\n      i=j+i;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1 && b!=1) return 8;\n  else if(b==1 && c==1 && b!=2) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a==1) return 5;\n  else if(c==1 && b==0) return 4;\n  else if(b==1) return 3;\n  else if(b==2) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  int temp=tehudan[0];\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==1\\\n3) return 2;\n  else if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==t\\\nemp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n  char mozi;\n  mozi=tehudac[a];\n  tehudac[a]=tehudac[b];\n  tehudac[b]=mozi;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, base[4][13], rate[10];\nstring mark = \"SCHD\";\n\nint getNumber(char c) {\n\tif (c == 'A') return 0;\n\tif (c == 'T') return 9;\n\tif (c == 'J') return 10;\n\tif (c == 'Q') return 11;\n\tif (c == 'K') return 12;\n\treturn c - '0' - 1;\n}\n\nbool isStraight(string card) {\n\tint tmp[5];\n\tfor (int i=0; i<5; ++i) tmp[i] = getNumber(card[2 * i]);\n\tsort(tmp, tmp + 5);\n\tfor (int i=0; i<4; ++i) if (tmp[i]+1 != tmp[i+1]) return false;\n\treturn true;\n}\n\nbool isFlush(string card) {\n\tchar tmp = card[1];\n\tfor (int i=1;i<5; ++i) if (tmp != card[2*i+1]) return false;\n\treturn true;\n}\n\nbool isRoyal(string card) {\n\tset< char > num_set;\n\tfor (int i=0; i<5; ++i) num_set.insert(card[2*i]);\n\tset< char > yes = {'A','T','J','Q','K'};\n\treturn num_set == yes;\n}\n\nint getID(string card) {\n\tint cnt[13];\n\tmemset(cnt, 0, sizeof(cnt));\n\tfor (int i=0; i<5; ++i) ++cnt[getNumber(card[2 * i])];\n\t\n\tint pair_num = 0, max_card = 0;\n\tfor (int i=0; i<13; ++i) {\n\t\tif (cnt[i] == 2) ++pair_num;\n\t\tmax_card = max(max_card, cnt[i]);\n\t}\n\t\n\tif (max_card == 2 && pair_num == 1) return 0; // one pair\n\tif (max_card == 2 && pair_num == 2) return 1; // two pair\n\t\n\tif (max_card == 3) {\n\t\tif (pair_num == 0) return 2; // three card\n\t\treturn 5; // full house\n\t}\n\t\n\tbool royal = isRoyal(card), straight = isStraight(card), flush = isFlush(card);\n\t\n\tif (royal && flush) return 8;\n\tif (straight && flush) return 7;\t\n\tif (straight) return 3;\n\tif (flush) return 4;\n\t\n\tif (max_card == 4) return 6;\n\t\n\treturn 9;\n}\n\nvoid solve() {\n\tfor (int i=0; i<n; ++i) {\n\t\tstring card;\n\t\tint sum = 0;\n\t\tfor (int j=0; j<5; ++j) {\n\t\t\tstring cj;\n\t\t\tcin >> cj;\n\t\t\tcard += cj;\n\t\t\tsum += base[mark.find(cj[1])][getNumber(cj[0])];\n\t\t}\n\t\tcout << sum * rate[getID(card)] << endl;\n\t}\n}\n\nint main() {\n\trate[9] = 0;\n\tint i = 0;\n\twhile (cin >> n) {\n\t\tif (i > 0) cout << endl;\n\t\tfor (int i=0; i<4; ++i) for (int j=0; j<13; ++j) cin >> base[i][j];\n\t\tfor (int i=0; i<9; ++i) cin >> rate[i];\n\t\tsolve();\n\t\t++i;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n\nusing namespace std;\n\nstruct Pa{\n\tint num;\n\tint mark;\n};\n\nbool comp(const Pa& p1, const Pa& p2)\n{\n\treturn p1.num < p2.num;\n}\n\nint func(char v)\n{\n\tif(v == 'S'){\n\t\treturn 0;\n\t}\n\tif(v == 'C'){\n\t\treturn 1;\n\t}\n\tif(v == 'H'){\n\t\treturn 2;\n\t}\n\t\n\treturn 3;\n}\n\nint func2(char v)\n{\n\tif(v == 'A'){\n\t\treturn 1;\n\t}\n\tif(v == 'K'){\n\t\treturn 13;\n\t}\n\tif(v == 'Q'){\n\t\treturn 12;\n\t}\n\tif(v == 'J'){\n\t\treturn 11;\n\t}\n\tif(v == 'T'){\n\t\treturn 10;\n\t}\n\t\n\tint t;\n\tfor(t = 2; t <= 9; t++){\n\t\tif((char)('0'+t) == v){\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn t;\n}\n\nbool opr(Pa a[5])\n{\n\tbool f = false;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].num == a[i-1].num){\n\t\t\tf = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool tpr(Pa a[5])\n{\n\tif(a[0].num == a[1].num && a[2].num == a[3].num){\n\t\treturn true;\n\t} else if(a[0].num == a[1].num && a[3].num == a[4].num){\n\t\treturn true;\n\t} else if(a[1].num == a[2].num && a[3].num == a[4].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool tcd(Pa a[5])\n{\n\tbool f = false;\n\t\n\tfor(int i = 0; i < 3; i++){\n\t\tif(a[i].num == a[i+1].num && a[i+1].num == a[i+2].num){\n\t\t\tf = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool stt(Pa a[5])\n{\n\tint v = a[0].num;\n\tbool f = true;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].num != (v+i)){\n\t\t\tf = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool flh(Pa a[5])\n{\n\tbool f = true;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].mark != a[i-1].mark){\n\t\t\tf = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool fuh(Pa a[5])\n{\n\tif(a[0].num == a[1].num && (a[1].num == a[2].num || a[2].num == a[3].num) && a[3].num == a[4].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool fcd(Pa a[5])\n{\n\tif((a[0].num == a[1].num || a[3].num == a[4].num) && a[1].num == a[2].num && a[2].num == a[3].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool stf(Pa a[5])\n{\n\tif(stt(a) && flh(a)){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool rsf(Pa a[5])\n{\n\tif(flh(a)){\n\t\tif(a[0].num == 1 && a[1].num == 10 && a[2].num == 11 && a[3].num == 12 && a[4].num == 13){\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\nint main()\n{\n\tint n, a[4][14], hand[10];\n\tPa card[5];\n\tstring str;\n\tbool f = false;\n\t\n\twhile(cin>>n && n){\n\t\tif(f){\n\t\t\tcout << endl;\n\t\t}\n\t\tf = true;\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tfor(int j = 1; j <= 13; j++){\n\t\t\t\tcin >> a[i][j];\n\t\t\t}\n\t\t}\n\t\thand[0] = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tcin >> hand[i];\n\t\t}\n\t\t\n\t\twhile(n--){\n\t\t\tint s = 0, t = 0;\n\t\t\tfor(int i = 0; i < 5; i++){\n\t\t\t\tcin >> str;\n\t\t\t\tcard[i].num = func2(str[0]);\n\t\t\t\tcard[i].mark = func(str[1]);\n\t\t\t\ts += a[card[i].mark][card[i].num];\n\t\t\t}\n\t\t\tsort(card, card+5, comp);\n\t\t\t\n\t\t\tif(rsf(card)){\n\t\t\t\tt = 9;\n\t\t\t} else if(stf(card)){\n\t\t\t\tt = 8;\n\t\t\t} else if(fcd(card)){\n\t\t\t\tt = 7;\n\t\t\t} else if(fuh(card)){\n\t\t\t\tt = 6;\n\t\t\t} else if(flh(card)){\n\t\t\t\tt = 5;\n\t\t\t} else if(stt(card)){\n\t\t\t\tt = 4;\n\t\t\t} else if(tcd(card)){\n\t\t\t\tt = 3;\n\t\t\t} else if(tpr(card)){\n\t\t\t\tt = 2;\n\t\t\t} else if(opr(card)){\n\t\t\t\tt = 1;\n\t\t\t}\n\t\t\t\n\t\t\tcout << (s*t) << endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<set>\n#include<map>\n#include<queue>\n#include<algorithm>\n#include<numeric>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(c) (c).begin(),(c).end()\n#define mp make_pair\n#define pb push_back\n#define rp(i,c) rep(i,(c).size())\n#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf=1<<28;\nconst double INF=1e12,EPS=1e-9;\n\nint n,pt[4][13],mul[10];\nbool hand[4][14];\n\nint ck()\n{\n\tint rank[13]={0};\n\trep(i,4)rep(j,13)if(hand[i][j])rank[j]++;\n\t\n\tbool royal=0,straight=0,flush=0,four=0,three=0; int two=0;\n\trep(i,10)\n\t{\n\t\trep(j,5)if(!rank[(i+j)%13])goto FAIL;\n\t\tif(i==9)royal=1;\n\t\tstraight=1; FAIL:;\n\t}\n\tbool e[4]={0}; int s=0;\n\trep(i,4)rep(j,13)if(hand[i][j])e[i]=1;\n\trep(i,4)s+=e[i];\n\tflush=s==1;\n\t\n\trep(i,13)\n\t{\n\t\tif(rank[i]==4)four=1;\n\t\tif(rank[i]==3)three=1;\n\t\tif(rank[i]==2)two++;\n\t}\n\tif(straight&&flush)return royal?8:7;\n\tif(four)return 6;\n\tif(two&&three)return 5;\n\tif(flush)return 4;\n\tif(straight)return 3;\n\tif(three)return 2;\n\tif(two==2)return 1;\n\tif(two)return 0;\n\treturn 9;\n}\n\nint main()\n{\n\tchar st[256]; st['S']=0; st['C']=1; st['H']=2; st['D']=3;\n\tchar ra[256]; for(int i=2;i<=9;i++)ra['0'+i]=i-1;\n\tra['A']=0; ra['T']=9; ra['J']=10; ra['Q']=11; ra['K']=12;\n\t\n\tbool f=1;\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\tif(!f)puts(\"\"); else f=0;\n\t\trep(i,4)rep(j,13)scanf(\"%d\",pt[i]+j);\n\t\trep(i,9)scanf(\"%d\",mul+i);\n\t\t\n\t\trep(i,n)\n\t\t{\n\t\t\trep(j,4)rep(k,13)hand[j][k]=0;\n\t\t\t\n\t\t\tint bs=0;\n\t\t\trep(j,5)\n\t\t\t{\n\t\t\t\tchar h[3]; scanf(\"%s\",h);\n\t\t\t\tint r=ra[h[0]],s=st[h[1]];\n\t\t\t\thand[s][r]=1; bs+=pt[s][r];\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",mul[ck()]*bs);\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cassert>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\nusing namespace std;\ntypedef pair<int,int> Pox;//テ・ツスツケテ」ツ??・ツセツ療ァツつケ: 0->テ」ツδッテ」ツδウテ」ツδ堙」ツつ「 1->テッツシツ津」ツδ堙」ツつ「 2-> テッツシツ禿」ツつォテ」ツδシテ」ツδ?3->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ?, 4->テ」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 5->テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ, 6-> テ」ツδ陛」ツつゥテ」ツδシテ」ツつォテ」ツδシテ」ツδ? 7->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 8->テ」ツδュテ」ツつ、テ」ツδ、テ」ツδォテ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・\nstruct P\n{\n  int v;\n  char c;\n  P(int v=-1,char c='$'):v(v),c(c){}\n  bool operator < (const P &a)const\n  {\n    if(v != a.v)return v < a.v;\n    return c < a.c;\n  }\n};\nint S[15],C[15],H[15],D[15],ATK[15];\n\n\n\nint main()\n{\n  int n;\n  bool f = true;\n  while(cin >> n)\n    {\n      if(f)f = false;\n      else cout << endl;\n      rep(i,13)cin >> S[i];\n      rep(i,13)cin >> C[i];\n      rep(i,13)cin >> H[i];\n      rep(i,13)cin >> D[i];\n      rep(i,9)cin >> ATK[i];\n      cin.ignore();\n      rep(F,n)\n\t{\n\t  vector<Pox> ans;\n\t  bool suit = true;\n\t  vector<P> vec(5);\n\t  int point = 0;\n\t  int RSF = 0;\n\t  map<int,int> index;\n\n\n\t  rep(i,5)\n\t    {\n\t      char a,b,dummy;\n\t      int A;\n\t      string s;\n\t      //scanf(\"%c%c%c\",&a,&b,&dummy);\n\t      cin >> s;\n\t      a = s[0];\n\t      b = s[1];\n\t      //cout << a << \",\" << b << endl;\n\t      if('2' <= a && a <= '9')A = a-'0';\n\t      else if(a == 'A')A = 1;\n\t      else if(a == 'T')A = 10;\n\t      else if(a == 'J')A = 11;\n\t      else if(a == 'Q')A = 12;\n\t      else if(a == 'K')A = 13;\n\t      else assert(false);\n\t      vec[i].v = A;\n\t      vec[i].c = b;\n\t      if(i && vec[i].c != vec[i-1].c)suit = false;\n\n\t      if(b == 'S')point += S[vec[i].v-1];\n\t      else if(b == 'C')point += C[vec[i].v-1];\n\t      else if(b == 'H')point += H[vec[i].v-1];\n\t      else if(b == 'D')point += D[vec[i].v-1];\n\t      if(vec[i].v == 1 || (10 <= vec[i].v && vec[i].v <= 13))RSF = RSF|(1<<vec[i].v);\n\t      index[vec[i].v]++;\n\t    }\n\n\t  sort(vec.begin(),vec.end());\n\t  bool SF = true;\n\n\t  REP(i,1,vec.size())\n\t    {\n\t      if(vec[i].v != vec[i-1].v+1)\n\t\t{\n\t\t  SF = false;\n\t\t  break;\n\t\t}\n\t    }\n\n\t  //cout << \"point = \" << point << endl;\n      if(__builtin_popcount(RSF) == 5 && suit)//RSF\n\t{\t\n\t  ans.push_back(Pox(ATK[8]*point,8));\n\t  //cout << ATK[8]*point << endl;\n\t  //cout << \"RSF\" << endl;\n\t}\t\n      \n      if(SF && suit)\n\t{\n\t  ans.push_back(Pox(ATK[7]*point,7));\n\t  //cout << ATK[7]*point << endl;\n\t  //cout << \"SF\" << endl;\n\t}\n\n      if(SF && !suit)\n\t{\n\t  ans.push_back(Pox(ATK[3]*point,3));\n\t  //cout << \"S\" << endl;\n\t}\n      \n      if(suit)\n\t{\n\t  ans.push_back(Pox(ATK[4]*point,4));\n\t  //cout << \"F\" << endl;\n\t}\n      \n      bool three = false;\n      int _2cnt = 0;\n  \n      for(map<int,int>::iterator it = index.begin(); it != index.end();it++)\n\t{\n\t  if(it->second == 2)\n\t    {\n\t      ans.push_back(Pox(ATK[0]*point,0));\n\t      //cout << \"テ」ツδッテ」ツδウテ」ツδ堙」ツつ「\" << endl;\n\t      _2cnt++;\n\t    }\n\t  if(it->second == 3)\n\t    {\n\t      three = true;\n\t      ans.push_back(Pox(ATK[2]*point,2));\n\t      //cout << \"テ」ツつケテ」ツδェテ」ツδシテ」ツつォテ」ツδシテ」ツδ? << endl;\n\t    }\n\n\t  if(it->second == 4)\n\t    {\n\t      ans.push_back(Pox(ATK[6]*point,6));\n\t      //cout << \"four cards\" << endl;\n\t    }\n\t}\n\t\n      if(_2cnt == 2)\n\t{\n\t  ans.push_back(Pox(ATK[1]*point,1));\n\t  //cout << \"2テ」ツδ堙」ツつ「\" << endl;\n\t}\n      \n      if(_2cnt == 1 && three)\n\t{\n\t  ans.push_back(Pox(ATK[5]*point,5));\n\t  //cout << \"テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ\" << endl;\n\t}\n\n      if(ans.empty())cout << 0 << endl;\n      else\n\t{\n\t  sort(ans.begin(),ans.end());      \n\n\t  \n\t  cout << ans[ans.size()-1].first << endl;\n\t}\n\t}\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, base[4][13], rate[10];\nstring mark = \"SCHD\";\n\nint getNumber(char c) {\n\tif (c == 'A') return 0;\n\tif (c == 'T') return 9;\n\tif (c == 'J') return 10;\n\tif (c == 'Q') return 11;\n\tif (c == 'K') return 12;\n\treturn c - '0' - 1;\n}\n\nbool isStraight(string card) {\n\tint tmp[5];\n\tfor (int i=0; i<5; ++i) tmp[i] = getNumber(card[2 * i]);\n\tsort(tmp, tmp + 5);\n\tfor (int i=0; i<4; ++i) if (tmp[i]+1 != tmp[i+1]) return false;\n\treturn true;\n}\n\nbool isFlush(string card) {\n\tchar tmp = card[1];\n\tfor (int i=1;i<5; ++i) if (tmp != card[2*i+1]) return false;\n\treturn true;\n}\n\nbool isRoyal(string card) {\n\tset< char > num_set;\n\tfor (int i=0; i<5; ++i) num_set.insert(card[2*i]);\n\tset< char > yes = {'A','T','J','Q','K'};\n\treturn num_set == yes;\n}\n\nint getID(string card) {\n\tint cnt[13];\n\tmemset(cnt, 0, sizeof(cnt));\n\tfor (int i=0; i<5; ++i) ++cnt[getNumber(card[2 * i])];\n\t\n\tint pair_num = 0, max_card = 0;\n\tfor (int i=0; i<13; ++i) {\n\t\tif (cnt[i] == 2) ++pair_num;\n\t\tmax_card = max(max_card, cnt[i]);\n\t}\n\t\n\tif (max_card == 2 && pair_num == 1) return 0; // one pair\n\tif (max_card == 2 && pair_num == 2) return 1; // two pair\n\t\n\tif (max_card == 3) {\n\t\tif (pair_num == 0) return 2; // three card\n\t\treturn 5; // full house\n\t}\n\t\n\tbool royal = isRoyal(card), straight = isStraight(card), flush = isFlush(card);\n\t\n\tif (royal && flush) return 8;\n\tif (straight && flush) return 7;\t\n\tif (straight) return 3;\n\tif (flush) return 4;\n\t\n\tif (max_card == 4) return 6;\n\t\n\treturn 9;\n}\n\nvoid solve() {\n\tfor (int i=0; i<n; ++i) {\n\t\tstring card;\n\t\tint sum = 0;\n\t\tfor (int j=0; j<5; ++j) {\n\t\t\tstring cj;\n\t\t\tcin >> cj;\n\t\t\tcard += cj;\n\t\t\tsum += base[mark.find(cj[1])][getNumber(cj[0])];\n\t\t}\n\t\tcout << sum * rate[getID(card)] << endl;\n\t}\n}\n\nint main() {\n\trate[9] = 0;\n\twhile (cin >> n) {\n\t\tfor (int i=0; i<4; ++i) for (int j=0; j<13; ++j) cin >> base[i][j];\n\t\tfor (int i=0; i<9; ++i) cin >> rate[i];\n\t\tsolve();\n\t\tcout << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint h[5],s[5];\nint v[13][4];\nint m[128];\nint k[10];\nint H()\n{\n\tfor(int i=1;i<5;++i)if(s[i]-s[i-1])return 0;\n\treturn 1;\n}\nint X(){return h[1]+1==h[2]&&h[2]+1==h[3]&&h[3]+1==h[4];}\nint S(){return X()&&h[0]+1==h[1];}\nint R(){return X()&&h[0]==1&&h[4]==13;}\nint F()\n{\n\tif(H())\n\t{\n\t\tif(R())return 9;\n\t\tif(S())return 8;\n\t\treturn 5;\n\t}\n\telse\n\t{\n\t\tif(h[0]==h[3]||h[1]==h[4])return 7;\n\t\tif(h[0]==h[1]&&h[2]==h[4] || h[0]==h[2]&&h[3]==h[4])return 6;\n\t\tif(S()||R())return 4;\n\t\tif(h[0]==h[2]||h[1]==h[3] || h[2]==h[4])return 3;\n\t\tif(h[0]==h[1])\n\t\t\tif(h[2]==h[3]||h[3]==h[4])return 2;\n\t\tif(h[1]==h[2]&&h[3]==h[4])return 2;\n\t\tif(h[0]==h[1]||h[1]==h[2]||h[2]==h[3]||h[3]==h[4])return 1;\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\tint N,i,j,r,x=0;\n\tchar c,d;\n\tm['A']=1;\n\tfor(i=0;i<10;++i)m[i+'0']=i;\n\tfor(i=0;i<4;++i)m[\"TJQK\"[i]]=i+10,m[\"SCHD\"[i]]=i;\n\twhile(scanf(\"%d\",&N)>=0)\n\t{\n\t\tif(x++)puts(\"\");\n\t\tfor(i=0;i<4;++i)for(j=0;j<13;++j)scanf(\"%d\",&v[j][i]);\n\t\tfor(i=1;i<10;++i)scanf(\"%d\",&k[i]);\n\t\twhile(N--)\n\t\t{\n\t\t\tfor(r=i=0;i<5;++i)\n\t\t\t{\n\t\t\t\tscanf(\" %c %c\",&c,&d);\n\t\t\t\th[i]=m[c];\n\t\t\t\ts[i]=m[d];\n\t\t\t\tr+=v[h[i]-1][s[i]];\n\t\t\t}\n\t\t\tsort(h,h+5);\n\t\t\tprintf(\"%d\\n\",r*k[F()]);\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cassert>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\nusing namespace std;\ntypedef pair<int,int> Pox;//テ・ツスツケテ」ツ??・ツセツ療ァツつケ: 0->テ」ツδッテ」ツδウテ」ツδ堙」ツつ「 1->テッツシツ津」ツδ堙」ツつ「 2-> テッツシツ禿」ツつォテ」ツδシテ」ツδ?3->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ?, 4->テ」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 5->テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ, 6-> テ」ツδ陛」ツつゥテ」ツδシテ」ツつォテ」ツδシテ」ツδ? 7->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 8->テ」ツδュテ」ツつ、テ」ツδ、テ」ツδォテ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・\nstruct P\n{\n  int v;\n  char c;\n  P(int v=-1,char c='$'):v(v),c(c){}\n  bool operator < (const P &a)const\n  {\n    if(v != a.v)return v < a.v;\n    return c < a.c;\n  }\n};\nint S[15],C[15],H[15],D[15],ATK[15];\n\n\n\nint main()\n{\n  int n;\n  bool f = true;\n  while(cin >> n)\n    {\n      if(f)f = false;\n      else cout << endl;\n      rep(i,13)cin >> S[i];\n      rep(i,13)cin >> C[i];\n      rep(i,13)cin >> H[i];\n      rep(i,13)cin >> D[i];\n      rep(i,9)cin >> ATK[i];\n      cin.ignore();\n      rep(F,n)\n\t{\n\t  vector<Pox> ans;\n\t  bool suit = true;\n\t  vector<P> vec(5);\n\t  int point = 0;\n\t  int RSF = 0;\n\t  map<int,int> index;\n\n\n\t  rep(i,5)\n\t    {\n\t      char a,b,dummy;\n\t      int A;\n\t      string s;\n\t      //scanf(\"%c%c%c\",&a,&b,&dummy);\n\t      cin >> s;\n\t      a = s[0];\n\t      b = s[1];\n\t      //cout << a << \",\" << b << endl;\n\t      if('2' <= a && a <= '9')A = a-'0';\n\t      else if(a == 'A')A = 1;\n\t      else if(a == 'T')A = 10;\n\t      else if(a == 'J')A = 11;\n\t      else if(a == 'Q')A = 12;\n\t      else if(a == 'K')A = 13;\n\t      else assert(false);\n\t      vec[i].v = A;\n\t      vec[i].c = b;\n\t      if(i && vec[i].c != vec[i-1].c)suit = false;\n\n\t      if(b == 'S')point += S[vec[i].v-1];\n\t      else if(b == 'C')point += C[vec[i].v-1];\n\t      else if(b == 'H')point += H[vec[i].v-1];\n\t      else if(b == 'D')point += D[vec[i].v-1];\n\t      if(vec[i].v == 1 || (10 <= vec[i].v && vec[i].v <= 13))RSF = RSF|(1<<vec[i].v);\n\t      index[vec[i].v]++;\n\t    }\n\n\t  sort(vec.begin(),vec.end());\n\t  bool SF = true;\n\n\t  REP(i,1,vec.size())\n\t    {\n\t      if(vec[i].v != vec[i-1].v+1)\n\t\t{\n\t\t  SF = false;\n\t\t  break;\n\t\t}\n\t    }\n\n\t  //cout << \"point = \" << point << endl;\n      if(__builtin_popcount(RSF) == 5 && suit)//RSF\n\t{\t\n\t  ans.push_back(Pox(8,ATK[8]*point));\n\t  //cout << ATK[8]*point << endl;\n\t  //cout << \"RSF\" << endl;\n\t}\t\n      \n      if(SF && suit)\n\t{\n\t  ans.push_back(Pox(7,ATK[7]*point));\n\t  //cout << ATK[7]*point << endl;\n\t  //cout << \"SF\" << endl;\n\t}\n\n      if(SF && !suit)\n\t{\n\t  ans.push_back(Pox(3,ATK[3]*point));\n\t  //cout << \"S\" << endl;\n\t}\n      \n      if(suit)\n\t{\n\t  ans.push_back(Pox(4,ATK[4]*point));\n\t  //cout << \"F\" << endl;\n\t}\n      \n      bool three = false;\n      int _2cnt = 0;\n  \n      for(map<int,int>::iterator it = index.begin(); it != index.end();it++)\n\t{\n\t  if(it->second == 2)\n\t    {\n\t      ans.push_back(Pox(0,ATK[0]*point));\n\t      //cout << \"テ」ツδッテ」ツδウテ」ツδ堙」ツつ「\" << endl;\n\t      _2cnt++;\n\t    }\n\t  if(it->second == 3)\n\t    {\n\t      three = true;\n\t      ans.push_back(Pox(2,ATK[2]*point));\n\t      //cout << \"テ」ツつケテ」ツδェテ」ツδシテ」ツつォテ」ツδシテ」ツδ? << endl;\n\t    }\n\n\t  if(it->second == 4)\n\t    {\n\t      ans.push_back(Pox(6,ATK[6]*point));\n\t      //cout << \"four cards\" << endl;\n\t    }\n\t}\n\t\n      if(_2cnt == 2)\n\t{\n\t  ans.push_back(Pox(1,ATK[1]*point));\n\t  //cout << \"2テ」ツδ堙」ツつ「\" << endl;\n\t}\n      \n      if(_2cnt == 1 && three)\n\t{\n\t  ans.push_back(Pox(5,ATK[5]*point));\n\t  //cout << \"テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ\" << endl;\n\t}\n\n      if(ans.empty())cout << 0 << endl;\n      else\n\t{\n\t  sort(ans.begin(),ans.end());      \n\t  cout << ans[ans.size()-1].second << endl;\n\t}\n\t}\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, char> Card;\n\nmap<string, int> point;\n\nCard hand[5];\nbool used[5];\n\nvoid output(){ \n  for(int i = 0 ; i < 5 ; i++){\n    cout << hand[i].first << ' ' << hand[i].second << endl;\n  }\n}\n\n\nchar toChar(int n){\n  if(2 <= n && n <= 9) return n+'0';\n  else if(n == 1) return 'A';\n  else if(n == 10) return 'T';\n  else if(n == 11) return 'J';\n  else if(n == 12) return 'Q';\n  else if(n == 13) return 'K';\n}\n\nint toInt(char c){\n  if('2' <= c && c <= '9') return c-'0';\n  else if(c == 'A') return 1;\n  else if(c == 'T') return 10;\n  else if(c == 'J') return 11;\n  else if(c == 'Q') return 12;\n  else if(c == 'K') return 13;\n}\n\nbool isOnePair(){\n  //output();\n  pair<int, int> Max;\n  Max.first = -1;\n  for(int i = 0 ; i < 5 ; i++){\n    if(used[i]) continue;\n    int tmp = 0;\n    for(int j = 0 ; j < 5 ; j++){\n      if(i == j) continue;\n      if(hand[i].first == hand[j].first) tmp++;\n    }\n     \n    if(tmp == 1){\n      Max.first = tmp;\n      Max.second = hand[i].first;\n    }\n  }\n  \n  if(Max.first != 1) return false;\n  \n  for(int i = 0 ; i < 5 ; i++){\n    if(Max.second == hand[i].first){\n      used[i] = true;\n    }\n  }\n  return true;\n}\n\nbool isThreeCard(){\n  pair<int, int> Max;\n  Max.first = -1;\n  for(int i = 0 ; i < 5 ; i++){\n    if(used[i]) continue;\n    int tmp = 0;\n    for(int j = 0 ; j < 5 ; j++){\n      if(i == j) continue;\n      if(hand[i].first == hand[j].first) tmp++;\n    }\n    if(tmp == 2){\n      Max.first = tmp;\n      Max.second = hand[i].first;\n    }\n  }\n  \n  if(Max.first != 2) return false;\n  \n  for(int i = 0 ; i < 5 ; i++){\n    if(Max.second == hand[i].first){\n      used[i] = true;\n    }\n  }\n  return true;\n\n}\n\nbool isFourCard(){\n  pair<int, int> Max;\n  Max.first = -1;\n  for(int i = 0 ; i < 5 ; i++){\n    if(used[i]) continue;\n    int tmp = 0;\n    for(int j = 0 ; j < 5 ; j++){\n      if(i == j) continue;\n      if(hand[i].first == hand[j].first) tmp++;\n    }\n    if(tmp == 3){\n      Max.first = tmp;\n      Max.second = hand[i].first;\n    }\n  }\n  \n  if(Max.first != 3) return false;\n  \n  for(int i = 0 ; i < 5 ; i++){\n    if(Max.second == hand[i].first){\n      used[i] = true;\n    }\n  }\n  return true;\n}\n\nbool isStraight(){\n  if(hand[0].first == 1 && hand[1].first == 10 && hand[2].first == 11 &&\n     hand[3].first == 12 && hand[4].first == 13) return true;\n  \n  for(int i = 0 ; i < 4 ; i++){\n    if(hand[i].first+1 != hand[i+1].first) return false;\n  }\n  \n  \n  \n  return true;\n}\n\nbool isFlash(){\n  char tmp = hand[0].second;\n  for(int i = 0 ; i < 5 ; i++){\n    if(hand[i].second != tmp) return false;\n  }\n  return true;\n}\n\nbool isRoyalStraightFlash(){\n  if(hand[0].first != 1) return false;\n  \n  if(hand[0].first == 1){\n    for(int i = 1 ; i < 5 ; i++){\n      if(hand[i].first != 9+i) return false;\n    }\n  }\n  \n  if(hand[0].second == hand[1].second && hand[1].second == hand[2].second &&\n     hand[2].second == hand[3].second && hand[3].second == hand[4].second)\n    return true;\n  \n  return false;\n}\n  \n\nint judgeCard(){\n  sort(hand, hand+5);\n  memset(used, false, sizeof(used));\n  \n  bool OnePair1, OnePair2, ThreeCard, FourCard, Straight, Flash;\n  OnePair1 = OnePair2 = ThreeCard = FourCard = Straight = Flash = false;\n  \n  OnePair1 = isOnePair();\n  //cout << \"OnePair1 \" << OnePair2 << endl;\n  OnePair2 = isOnePair();\n  ThreeCard = isThreeCard();\n  //cout << \"Three Card \" << ThreeCard << endl;\n  FourCard = isFourCard();\n  Straight = isStraight();\n  Flash = isFlash();\n  \n  if(isRoyalStraightFlash()) return 8;\n  else if(Straight && Flash) return 7;\n  else if(FourCard) return 6;\n  else if(OnePair1 && ThreeCard) return 5;\n  else if(Flash) return 4;\n  else if(Straight) return 3;\n  else if(ThreeCard) return 2;\n  else if(OnePair1 && OnePair2) return 1;\n  else if(OnePair1) return 0;\n  else return 9;\n}\n\nint main(){\n  int tc;\n  bool Flag = false;\n  while(cin >> tc){\n    if(Flag) cout << endl;\n    Flag = true;\n    int p;\n    for(int color = 0 ; color < 4 ; color++){\n      for(int n = 1 ; n <= 13 ; n++){\n\tcin >> p;\n\tstring card = \"\";\n\tcard += toChar(n);\n\tif(color == 0) card += \"S\";\n\telse if(color == 1) card += \"C\";\n\telse if(color == 2) card += \"H\";\n\telse if(color == 3) card += \"D\";\n\tpoint[card] = p;\n      }\n    }\n    \n    int power[9];\n    for(int i = 0 ; i < 9 ; i++) cin >> power[i];\n    \n    string tmp[5];\n    while(tc--){\n      for(int i = 0 ; i < 5 ; i++) cin >> tmp[i];\n      for(int i = 0 ; i < 5 ; i++){\n\thand[i].first = toInt(tmp[i][0]);\n\thand[i].second = tmp[i][1];\n      }\n      \n      int baseSum = 0;\n      for(int i = 0 ; i < 5 ; i++){\n\tbaseSum += point[tmp[i]];\n      }\n      \n      int ans;\n      \n      int what = judgeCard();\n      if(what == 9) ans = 0;\n      else{\n\tans = power[what] * baseSum;\n      }\n      //cout << \"What \" << what << endl;\n      cout << ans << endl;\n      //cout << endl;\n    }\n    //cout << endl << endl << \"#########################\"<< endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <cfloat>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <set>\n#include <map>\n#include <time.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\nint LOC[128];\nint value[4][14],mult[9];\n\nint getNUM(char ch){\n\n\tif(ch >= '2' && ch <= '9')return ch - '0';\n\n\tswitch(ch){\n\tcase 'A':return 1;\n\tcase 'T':return 10;\n\tcase 'J':return 11;\n\tcase 'Q':return 12;\n\tcase 'K':return 13;\n\t}\n\treturn -1; //must not reach here\n}\n\nbool is_straight(int array[5]){\n\n\tif(array[4]-array[0] == 4)return true;\n\n\tif(array[0] == 1 && array[1] == 10)return true;\n\n\treturn false;\n}\n\n\nint main(){\n\n\tLOC['S'] = 0;\n\tLOC['C'] = 1;\n\tLOC['H'] = 2;\n\tLOC['D'] = 3;\n\n\tint N,num_2,num_3,num_4,num_suit,point;\n\tbool isFirst = true;\n\tchar buf[3];\n\tint num_table[14],suit_table[4],tmp_num,tmp_suit,array[5],index;\n\n\twhile(scanf(\"%d\",&N) != EOF){\n\n\t\tif(isFirst){\n\t\t\tisFirst = false;\n\t\t}else{\n\t\t\tprintf(\"\\n\");\n\t\t}\n\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tfor(int k = 1; k <= 13; k++)scanf(\"%d\",&value[i][k]);\n\t\t}\n\n\t\tfor(int i = 0; i < 9; i++)scanf(\"%d\",&mult[i]);\n\n\t\tfor(int loop = 0; loop < N; loop++){\n\t\t\tfor(int i = 1; i <= 13; i++)num_table[i] = 0;\n\t\t\tfor(int i = 0; i < 4; i++)suit_table[i] = 0;\n\n\t\t\tnum_2 = num_3 = num_4 = num_suit = point = 0;\n\n\t\t\tfor(int k = 0; k < 5; k++){\n\t\t\t\tscanf(\"%s\",buf);\n\n\t\t\t\ttmp_suit = LOC[buf[1]];\n\t\t\t\ttmp_num = getNUM(buf[0]);\n\n\t\t\t\tpoint += value[tmp_suit][tmp_num];\n\t\t\t\tnum_table[tmp_num]++;\n\t\t\t\tsuit_table[tmp_suit]++;\n\t\t\t}\n\n\t\t\tfor(int k = 0; k < 4; k++){\n\t\t\t\tif(suit_table[k] > 0)num_suit++;\n\t\t\t}\n\n\t\t\tfor(int k = 1; k <= 13; k++){\n\t\t\t\tif(num_table[k] == 0)continue;\n\n\t\t\t\tswitch(num_table[k]){\n\t\t\t\tcase 2:\n\t\t\t\t\tnum_2++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tnum_3++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tnum_4++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(num_2 == 1){\n\t\t\t\tif(num_3 != 1){\n\t\t\t\t\tprintf(\"%d\\n\",point*mult[0]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"%d\\n\",point*mult[5]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(num_2 == 2){\n\t\t\t\tprintf(\"%d\\n\",point*mult[1]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(num_3 == 1){\n\t\t\t\tprintf(\"%d\\n\",point*mult[2]);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(num_4 == 1){\n\t\t\t\tprintf(\"%d\\n\",point*mult[6]);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindex = 0;\n\t\t\tfor(int k = 1; k <= 13; k++){\n\t\t\t\tif(num_table[k] == 0)continue;\n\t\t\t\tarray[index++] = k;\n\t\t\t}\n\n\t\t\tif(num_suit >= 2){\n\n\t\t\t\tif(is_straight(array)){\n\t\t\t\t\tprintf(\"%d\\n\",point*mult[3]);\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tif(is_straight(array)){\n\t\t\t\t\tif(array[0] == 1 && array[4] == 13){\n\t\t\t\t\t\tprintf(\"%d\\n\",point*mult[8]);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprintf(\"%d\\n\",point*mult[7]);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"%d\\n\",point*mult[4]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ntypedef vector<int> vi;\n\nint main()\n{\n  int buckets[14];\n  int buckets2[5];\n  while(1)\n  {\n    int n;\n    cin >> n;\n    if(!n) break;\n    int cardscore[14][5];\n    int handscore[9];\n      for(int j=1;j<=4;j++)\n      {\n        for(int k=1;k<=13;k++)\n        {\n          cin >> cardscore[k][j];\n        }\n      }\n      for(int j=0;j<9;j++)\n      {\n        cin >> handscore[j];\n      }\n    \n    for(int i=0;i<n;i++)\n    {\n      int times=0;\n      long long score=0;\n      vector<string> card(5);\n      vector<pair<int,int> > tmpc(5);\n      for(int j=0;j<5;j++)\n      {\n        cin >> card[j];\n        if(card[j][0]=='A')\n        {\n          tmpc[j].first=1;\n        }\n        else if(card[j][0]=='T')\n        {\n          tmpc[j].first=10;\n        }\n        else if(card[j][0]=='J')\n        {\n          tmpc[j].first=11;\n        }\n        else if(card[j][0]=='Q')\n        {\n          tmpc[j].first=12;\n        }\n        else if(card[j][0]=='K')\n        {\n          tmpc[j].first=13;\n        }\n        else\n        {\n          tmpc[j].first=(int)(card[j][0]-'0');\n        }\n        if(card[j][1]=='S')\n        {\n          tmpc[j].second=1;\n        }\n        else if(card[j][1]=='C')\n        {\n          tmpc[j].second=2;\n        }\n        else if(card[j][1]=='H')\n        {\n          tmpc[j].second=3;\n        }\n        else if(card[j][1]=='D')\n        {\n          tmpc[j].second=4;\n        }\n        score+=cardscore[tmpc[j].first][tmpc[j].second];\n\n      }\n      int onep=0,threec=0,four=0;\n      bool flash=false;\n      bool straight=true;\n      sort(tmpc.begin(),tmpc.end());\n      memset(buckets,0,sizeof(buckets));\n      memset(buckets2,0,sizeof(buckets2));\n      for(int j=0;j<5;j++)\n      {\n        buckets[tmpc[j].first]++;\n        buckets2[tmpc[j].second]++;\n      }\n      for(int j=1;j<=13;j++)\n      {\n        if(buckets[j]==2)\n        {\n          onep++;\n        }\n        else if(buckets[j]==3)\n        {\n          threec++;\n        }\n        else if(buckets[j]==4)\n        {\n          four++;\n        }\n      }\n      for(int j=1;j<=5;j++)\n      {\n        if(buckets2[j]==5)\n        {\n          flash=true;\n          times=handscore[4];\n        }\n      }\n      if(onep==1 && threec==0)\n      {\n        times=handscore[0];\n      }\n      else if(onep==2)\n      {\n        times=handscore[1];\n      }\n      else if(threec==1 && onep==0)\n      {\n        times=handscore[2];\n      }\n      else if(threec==1 && onep==1)\n      {\n        times=handscore[5];\n      }\n      else if(four==1)\n      {\n        times=handscore[6];\n      }\n      if(tmpc[0].first==1 && tmpc[1].first==10 && tmpc[2].first==11 && tmpc[3].first==12 && tmpc[4].first==13)\n      {\n        if(flash) times=handscore[8];\n        else times=handscore[3];\n      }\n      else\n      {\n        for(int j=0;j<4;j++)\n        {\n          if(tmpc[j+1].first!=(tmpc[j].first+1)) straight=false;\n        }\n        if(straight)\n        {\n          if(flash) times=handscore[7];\n          else times=handscore[3];\n        }\n      }\n      cout << score*times << endl;\n    }\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<char,int> m;\n\nbool op(string s[]){\n\trep(i,5)rep(j,5)if(i!=j){\n\t\tif(s[i][0]==s[j][0])return true;\n\t}\n\treturn false;\n}\n\nbool tp(string s[]){\n\trep(i,5)rep(j,5)rep(k,5)rep(l,5){\n\t\tif(i==j)continue;\n\t\tif(i==k)continue;\n\t\tif(i==l)continue;\n\t\tif(j==k)continue;\n\t\tif(j==l)continue;\n\t\tif(k==l)continue;\n\t\tif(s[i][0]==s[j][0]&&s[k][0]==s[l][0])return true;\n\t}\n\treturn false;\n}\n\nbool tc(string s[]){\n\trep(i,5)rep(j,5)rep(k,5){\n\t\tif(i==j)continue;\n\t\tif(i==k)continue;\n\t\tif(j==k)continue;\n\t\tif(s[i][0]!=s[j][0])continue;\n\t\tif(s[i][0]!=s[k][0])continue;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool ts(string s[]){\n\tint i;\n\trep0(i,5)if(s[i][0]=='A')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='K')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='Q')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='J')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='T')break;\n\tif(i==5)return false;\n\treturn true;\n}\n\nbool st(string s[]){\n\tif(ts(s))return true;\n\tint bit=0;\n\trep(i,5)bit|=1<<m[s[i][0]];\n\twhile(bit!=0){\n\t\tif(bit==31)return true;\n\t\tbit/=2;\n\t}\n\treturn false;\n}\n\nbool fl(string s[]){\n\tif(s[0][1]!=s[1][1])return false;\n\tif(s[0][1]!=s[2][1])return false;\n\tif(s[0][1]!=s[3][1])return false;\n\tif(s[0][1]!=s[4][1])return false;\n\treturn true;\n}\n\nbool fh(string s[]){\n\tif(s[0][0]==s[1][0]&&s[2][0]==s[3][0]&&s[2][0]==s[4][0])return true;\n\tif(s[0][0]==s[2][0]&&s[1][0]==s[3][0]&&s[1][0]==s[4][0])return true;\n\tif(s[0][0]==s[3][0]&&s[1][0]==s[2][0]&&s[1][0]==s[4][0])return true;\n\tif(s[0][0]==s[4][0]&&s[1][0]==s[2][0]&&s[1][0]==s[3][0])return true;\n\tif(s[1][0]==s[2][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[3][0]&&s[0][0]==s[2][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[4][0]&&s[0][0]==s[2][0]&&s[0][0]==s[3][0])return true;\n\tif(s[2][0]==s[3][0]&&s[0][0]==s[1][0]&&s[0][0]==s[4][0])return true;\n\tif(s[2][0]==s[4][0]&&s[0][0]==s[1][0]&&s[0][0]==s[3][0])return true;\n\tif(s[3][0]==s[4][0]&&s[0][0]==s[1][0]&&s[0][0]==s[2][0])return true;\n\treturn false;\n}\n\nbool fc(string s[]){\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[2][0]&&s[0][0]==s[3][0])return true;\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[2][0]&&s[0][0]==s[4][0])return true;\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[0][0]==s[2][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[2][0]&&s[1][0]==s[3][0]&&s[1][0]==s[4][0])return true;\n\treturn false;\n}\n\nbool sf(string s[]){\n\tif(!st(s))return false;\n\treturn fl(s);\n}\n\nbool rs(string s[]){\n\tif(!ts(s))return false;\n\treturn fl(s);\n}\n\nint main() {\n\tm['A']=0;\n\tm['2']=1;\n\tm['3']=2;\n\tm['4']=3;\n\tm['5']=4;\n\tm['6']=5;\n\tm['7']=6;\n\tm['8']=7;\n\tm['9']=8;\n\tm['T']=9;\n\tm['J']=10;\n\tm['Q']=11;\n\tm['K']=12;\n\tm['S']=0;\n\tm['C']=1;\n\tm['H']=2;\n\tm['D']=3;\n\tint n;\n\tbool first=true;\n\twhile(cin>>n){\n\t\tif(!first)cout<<endl;\n\t\tfirst=false;\n\t\tint x[4][13];\n\t\trep(i,4)rep(j,13)cin>>x[i][j];\n\t\tint y[9];\n\t\trep(i,9)cin>>y[i];\n\t\tstring cards[5];\n\t\trep(a,n){\n\t\t\trep(i,5)cin>>cards[i];\nrep(i,5)debug<<cards[i]<<endl;\n\t\t\tint ki=0;\n\t\t\trep(i,5)ki+=x[m[cards[i][1]]][m[cards[i][0]]];\ndebug<<\"ki : \"<<ki<<endl;\n\t\t\tif(rs(cards)){\n\t\t\t\tcout<<ki*y[8]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(sf(cards)){\n\t\t\t\tcout<<ki*y[7]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fc(cards)){\n\t\t\t\tcout<<ki*y[6]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fh(cards)){\n\t\t\t\tcout<<ki*y[5]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fl(cards)){\n\t\t\t\tcout<<ki*y[4]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(st(cards)){\n\t\t\t\tcout<<ki*y[3]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tc(cards)){\n\t\t\t\tcout<<ki*y[2]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tp(cards)){\n\t\t\t\tcout<<ki*y[1]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(op(cards)){\n\t\t\t\tcout<<ki*y[0]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcout<<0<<endll;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ntypedef vector<int> vi;\n\nint main()\n{\n  int buckets[14];\n  int buckets2[5];\n  while(1)\n  {\n    int n;\n    cin >> n;\n    if(!n) break;\n    int cardscore[14][5];\n    int handscore[9];\n      for(int j=1;j<=4;j++)\n      {\n        for(int k=1;k<=13;k++)\n        {\n          cin >> cardscore[k][j];\n        }\n      }\n      for(int j=0;j<9;j++)\n      {\n        cin >> handscore[j];\n      }\n    \n    for(int i=0;i<n;i++)\n    {\n      int times=0;\n      long long score=0;\n      vector<string> card(5);\n      vector<pair<int,int> > tmpc(5);\n      for(int j=0;j<5;j++)\n      {\n        cin >> card[j];\n        if(card[j][0]=='A')\n        {\n          tmpc[j].first=1;\n        }\n        else if(card[j][0]=='T')\n        {\n          tmpc[j].first=10;\n        }\n        else if(card[j][0]=='J')\n        {\n          tmpc[j].first=11;\n        }\n        else if(card[j][0]=='Q')\n        {\n          tmpc[j].first=12;\n        }\n        else if(card[j][0]=='K')\n        {\n          tmpc[j].first=13;\n        }\n        else\n        {\n          tmpc[j].first=(int)(card[j][0]-'0');\n        }\n        if(card[j][1]=='S')\n        {\n          tmpc[j].second=1;\n        }\n        else if(card[j][1]=='C')\n        {\n          tmpc[j].second=2;\n        }\n        else if(card[j][1]=='H')\n        {\n          tmpc[j].second=3;\n        }\n        else if(card[j][1]=='D')\n        {\n          tmpc[j].second=4;\n        }\n        score+=cardscore[tmpc[j].first][tmpc[j].second];\n\n      }\n      int onep=0,threec=0,four=0;\n      bool flash=false;\n      bool straight=true;\n      sort(tmpc.begin(),tmpc.end());\n      memset(buckets,0,sizeof(buckets));\n      memset(buckets2,0,sizeof(buckets2));\n      for(int j=0;j<5;j++)\n      {\n        buckets[tmpc[j].first]++;\n        buckets2[tmpc[j].second]++;\n      }\n      for(int j=1;j<=13;j++)\n      {\n        if(buckets[j]==2)\n        {\n          onep++;\n        }\n        else if(buckets[j]==3)\n        {\n          threec++;\n        }\n        else if(buckets[j]==4)\n        {\n          four++;\n        }\n      }\n      for(int j=1;j<=4;j++)\n      {\n        if(buckets2[j]==5)\n        {\n          flash=true;\n          times=handscore[4];\n        }\n      }\n      if(onep==1 && threec==0)\n      {\n        times=handscore[0];\n      }\n      else if(onep==2)\n      {\n        times=handscore[1];\n      }\n      else if(threec==1 && onep==0)\n      {\n        times=handscore[2];\n      }\n      else if(threec==1 && onep==1)\n      {\n        times=handscore[5];\n      }\n      else if(four==1)\n      {\n        times=handscore[6];\n      }\n      if(tmpc[0].first==1 && tmpc[1].first==10 && tmpc[2].first==11 && tmpc[3].first==12 && tmpc[4].first==13)\n      {\n        if(flash) times=handscore[8];\n        else times=handscore[3];\n      }\n      else\n      {\n        for(int j=0;j<4;j++)\n        {\n          if(tmpc[j+1].first!=(tmpc[j].first+1)) straight=false;\n        }\n        if(straight)\n        {\n          if(flash) times=handscore[7];\n          else times=handscore[3];\n        }\n      }\n      cout << score*times << endl;\n    }\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n\nusing namespace std;\n\nstruct Pa{\n\tint num;\n\tint mark;\n};\n\nbool comp(const Pa& p1, const Pa& p2)\n{\n\treturn p1.num < p2.num;\n}\n\nint func(char v)\n{\n\tif(v == 'S'){\n\t\treturn 0;\n\t}\n\tif(v == 'C'){\n\t\treturn 1;\n\t}\n\tif(v == 'H'){\n\t\treturn 2;\n\t}\n\t\n\treturn 3;\n}\n\nint func2(char v)\n{\n\tif(v == 'A'){\n\t\treturn 1;\n\t}\n\tif(v == 'K'){\n\t\treturn 13;\n\t}\n\tif(v == 'Q'){\n\t\treturn 12;\n\t}\n\tif(v == 'J'){\n\t\treturn 11;\n\t}\n\tif(v == 'T'){\n\t\treturn 10;\n\t}\n\t\n\tint t;\n\tfor(t = 2; t <= 9; t++){\n\t\tif((char)('0'+t) == v){\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn t;\n}\n\nbool opr(Pa a[5])\n{\n\tbool f = false;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].num == a[i-1].num){\n\t\t\tf = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool tpr(Pa a[5])\n{\n\tif(a[0].num == a[1].num && a[2].num == a[3].num){\n\t\treturn true;\n\t} else if(a[0].num == a[1].num && a[3].num == a[4].num){\n\t\treturn true;\n\t} else if(a[1].num == a[2].num && a[3].num == a[4].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool tcd(Pa a[5])\n{\n\tbool f = false;\n\t\n\tfor(int i = 0; i < 3; i++){\n\t\tif(a[i].num == a[i+1].num && a[i+1].num == a[i+2].num){\n\t\t\tf = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool stt(Pa a[5])\n{\n\tint v = a[0].num;\n\tbool f = true;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].num != (v+i)){\n\t\t\tf = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(a[0].num == 1 && a[1].num == 10 && a[2].num == 11 && a[3].num == 12 && a[4].num == 13){\n\t\t\treturn true;\n\t}\n\t\n\treturn f;\n}\n\nbool flh(Pa a[5])\n{\n\tbool f = true;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].mark != a[i-1].mark){\n\t\t\tf = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool fuh(Pa a[5])\n{\n\tif(a[0].num == a[1].num && (a[1].num == a[2].num || a[2].num == a[3].num) && a[3].num == a[4].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool fcd(Pa a[5])\n{\n\tif((a[0].num == a[1].num || a[3].num == a[4].num) && a[1].num == a[2].num && a[2].num == a[3].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool stf(Pa a[5])\n{\n\tif(stt(a) && flh(a)){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool rsf(Pa a[5])\n{\n\tif(flh(a)){\n\t\tif(a[0].num == 1 && a[1].num == 10 && a[2].num == 11 && a[3].num == 12 && a[4].num == 13){\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\nint main()\n{\n\tint n, a[4][14], hand[10];\n\tPa card[5];\n\tstring str;\n\tbool f = false;\n\t\n\twhile(cin>>n && n){\n\t\tif(f){\n\t\t\tcout << endl;\n\t\t}\n\t\tf = true;\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tfor(int j = 1; j <= 13; j++){\n\t\t\t\tcin >> a[i][j];\n\t\t\t}\n\t\t}\n\t\thand[0] = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tcin >> hand[i];\n\t\t}\n\t\t\n\t\twhile(n--){\n\t\t\tint s = 0, t = 0;\n\t\t\tfor(int i = 0; i < 5; i++){\n\t\t\t\tcin >> str;\n\t\t\t\tcard[i].num = func2(str[0]);\n\t\t\t\tcard[i].mark = func(str[1]);\n\t\t\t\ts += a[card[i].mark][card[i].num];\n\t\t\t}\n\t\t\tsort(card, card+5, comp);\n\t\t\t\n\t\t\tif(rsf(card)){\n\t\t\t\tt = 9;\n\t\t\t} else if(stf(card)){\n\t\t\t\tt = 8;\n\t\t\t} else if(fcd(card)){\n\t\t\t\tt = 7;\n\t\t\t} else if(fuh(card)){\n\t\t\t\tt = 6;\n\t\t\t} else if(flh(card)){\n\t\t\t\tt = 5;\n\t\t\t} else if(stt(card)){\n\t\t\t\tt = 4;\n\t\t\t} else if(tcd(card)){\n\t\t\t\tt = 3;\n\t\t\t} else if(tpr(card)){\n\t\t\t\tt = 2;\n\t\t\t} else if(opr(card)){\n\t\t\t\tt = 1;\n\t\t\t}\n\t\t\t\n\t\t\tcout << (s*hand[t]) << endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\nint point[4][13];\nint bai[9];\npair<int, int> hand[5];\nmap<char, int> convNum;\nmap<char, int> convCol;\n\nvoid init(){\n  convNum['A'] = 0;\n  for(int i=2;i<=9;i++){\n    convNum['0'+i] = i-1;\n  }\n  convNum['T'] = 9;\n  convNum['J'] = 10;\n  convNum['Q'] = 11;\n  convNum['K'] = 12;\n  convCol['S'] = 0;\n  convCol['C'] = 1;\n  convCol['H'] = 2;\n  convCol['D'] = 3;\n}\n\nbool roi(){\n  int p = hand[0].second;\n  for(int i=1;i<5;i++){\n    if(p != hand[i].second) return false;\n  }\n  if(hand[0].first == 0 &&\n     hand[1].first == 9 &&\n     hand[2].first == 10 &&\n     hand[3].first == 11 &&\n     hand[4].first == 12\n    ) return true;\n  return false;\n}\n\nbool four(){\n  int tmp = hand[0].first;\n  if(hand[1].first == tmp &&\n     hand[2].first == tmp &&\n     hand[3].first == tmp \n    ) return true;\n  tmp = hand[4].first;\n  if(hand[1].first == tmp &&\n     hand[2].first == tmp &&\n     hand[3].first == tmp \n    ) return true;\n  return false;\n}\n\nbool st(){\n  if(hand[0].first == 0 &&\n     hand[1].first == 9 &&\n     hand[2].first == 10 &&\n     hand[3].first == 11 &&\n     hand[4].first == 12\n    ) return true;\n  for(int i=1;i<5;i++){\n    if(hand[i-1].first+1 != hand[i].first) return false;\n  }\n  return true;\n}\n\nbool fra(){\n  int tmp = hand[0].second;\n  for(int i=1;i<5;i++){\n    if(tmp != hand[i].second) return false;\n  }\n  return true;\n}\n\nbool fru(){\n  if(hand[0].first == hand[1].first &&\n     hand[0].first == hand[2].first &&\n     hand[3].first == hand[4].first\n    ) return true;\n  if(hand[0].first == hand[1].first &&\n     hand[2].first == hand[3].first &&\n     hand[2].first == hand[4].first\n    ) return true;\n  return false;\n}\n\nbool three(){\n  for(int i=2;i<5;i++){\n    if(hand[i].first == hand[i-1].first && hand[i].first == hand[i-2].first) return true;\n  }\n  return false;\n}\n\nbool two(){\n  int i;\n  bool f = false;\n  for(i=1;i<5;i++){\n    if(hand[i].first == hand[i-1].first){\n      i++;\n      f = true;\n      break;\n    }\n  }\n  if(!f) return false;\n  for(;i<5;i++){\n    if(hand[i].first == hand[i-1].first) return true;\n  }\n  return false;\n}\n\nbool one(){\n  for(int i=1;i<5;i++){\n    if(hand[i].first == hand[i-1].first) return true;\n  }\n  return false;\n}\n\nint calc(){\n  sort(hand, hand+5);\n  if(roi()) return bai[8];\n  if(st() && fra()) return bai[7];\n  if(four()) return bai[6];\n  if(fru()) return bai[5];\n  if(fra()) return bai[4];\n  if(st()) return bai[3];\n  if(three()) return bai[2];\n  if(two()) return bai[1];\n  if(one()) return bai[0];\n  return 0;\n}\n\nint solve(){\n  int base = 0;\n  for(int i=0;i<5;i++){\n    base += point[hand[i].second][hand[i].first];\n  }\n  return base * calc();\n}\n\nmain(){\n  init();\n  int n;\n  bool f = true;\n  while(cin >> n){\n    if(!f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n        cin >> point[i][j];\n      }\n    }\n    for(int i=0;i<9;i++){\n      cin >> bai[i];\n    }\n    for(int i=0;i<n;i++){\n      for(int j=0;j<5;j++){\n        char a, b;\n        cin >> a >> b;\n        hand[j].first = convNum[a];\n        hand[j].second = convCol[b];\n      }\n      cout << solve() << endl;\n    }\n    f = false;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <queue>\n#include <vector>\n#include <functional>\n\nusing namespace std;\n\nint main() {\n\tbool hantei = false;\n\tint n;\n\twhile (cin >> n) {\n\t\tif (hantei) {\n\t\t\tcout << endl;\n\t\t}\n\t\thantei = true;\n\t\tint hyou[4][13];\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) {\n\t\t\t\tcin >> hyou[i][j];\n\t\t\t}\n\t\t}\n\t\tint data[9];\n\t\tfor (int i = 0; i < 9; i++) {\n\t\t\tcin >> data[i];\n\t\t}\n\t\tstring a;\n\t\tstring abc = \"SCHD\";\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint counter = 0;\n\t\t\tbool hantei2 = true;\n\t\t\tint p;\n\t\t\tpriority_queue<int, vector<int>, greater<int> > pq;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> a;\n\t\t\t\tint b;\n\t\t\t\tif (a[0] == 'A') {\n\t\t\t\t\tb = 1;\n\t\t\t\t} else if (a[0] == 'T') {\n\t\t\t\t\tb = 10;\n\t\t\t\t} else if (a[0] == 'J') {\n\t\t\t\t\tb = 11;\n\t\t\t\t} else if (a[0] == 'Q') {\n\t\t\t\t\tb = 12;\n\t\t\t\t} else if (a[0] == 'K') {\n\t\t\t\t\tb = 13;\n\t\t\t\t} else {\n\t\t\t\t\tb = a[0]-'0';\n\t\t\t\t}\n\t\t\t\tfor (int k = 0; k < 4; k++) {\n\t\t\t\t\tif (a[1] == abc[k]) {\n\t\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\t\tp = k;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (p != k) {\n\t\t\t\t\t\t\t\thantei2 = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcounter += hyou[k][b-1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpq.push(b);\n\t\t\t}\n\t\t\tint cdata[5];\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcdata[j] = pq.top();\n\t\t\t\tpq.pop();\n\t\t\t}\n\t\t\tif (cdata[0] == 1 && cdata[1] == 10 && cdata[2] == 11 && cdata[3] == 12 && cdata[4] == 13) {\n\t\t\t\tif (hantei2) {\n\t\t\t\t\tcounter *= data[8];\n\t\t\t\t} else {\n\t\t\t\t\tcounter *= data[3];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (cdata[0]+1 == cdata[1] && cdata[1]+1 == cdata[2] && cdata[2]+1 == cdata[3] && cdata[3]+1 == cdata[4]) {\n\t\t\t\t\tif (hantei2) {\n\t\t\t\t\t\tcounter *= data[7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcounter *= data[3];\n\t\t\t\t\t}\n\t\t\t\t} else if ((cdata[0] == cdata[1] && cdata[0] == cdata[2] && cdata[0] == cdata[3]) || (cdata[1] == cdata[2] && cdata[1] == cdata[3] && cdata[1] == cdata[4])) {\n\t\t\t\t\tcounter *= data[6];\n\t\t\t\t} else if ((cdata[0] == cdata[1] && cdata[2] == cdata[3] && cdata[2] == cdata[4]) || (cdata[0] == cdata[1] && cdata[0] == cdata[2] && cdata[3] == cdata[4])) {\n\t\t\t\t\tcounter *= data[5];\n\t\t\t\t} else if (hantei2) {\n\t\t\t\t\tcounter *= data[4];\n\t\t\t\t} else if ((cdata[0] == cdata[1] && cdata[0] == cdata[2]) || (cdata[1] == cdata[2] && cdata[1] == cdata[3]) || (cdata[2] == cdata[3] && cdata[2] == cdata[4])){\n\t\t\t\t\tcounter *= data[2];\n\t\t\t\t} else if ((cdata[0] == cdata[1] && cdata[2] == cdata[3]) || (cdata[0] == cdata[1] && cdata[3] == cdata[4]) || (cdata[1] == cdata[2] && cdata[3] == cdata[4])) {\n\t\t\t\t\tcounter *= data[1];\n\t\t\t\t} else if ((cdata[0] == cdata[1]) || (cdata[1] == cdata[2]) || (cdata[2] == cdata[3]) || (cdata[3] == cdata[4])) {\n\t\t\t\t\tcounter *= data[0];\n\t\t\t\t} else {\n\t\t\t\t\tcounter *= 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << counter << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//32\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n  bool ns=false;\n  for(int n;cin>>n,n;){\n    const char* s=\"SCHD\";\n    int b[128][13];\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin>>b[s[i]][j];\n      }\n    }\n    int m[10]={};\n    for(int i=0;i<9;i++){\n      cin>>m[i+1];\n    }\n    if(ns){\n      cout<<endl;\n    }\n    ns=true;\n    while(n--){\n      const char *r=\"A23456789TJQK\";\n      int apr[13]={},aps[128]={};\n      char rn[5],st[5];\n      int rnd[5];\n      for(int i=0;i<5;i++){\n\tcin>>rn[i]>>st[i];\n\trnd[i]=strchr(r,rn[i])-r;\n\tapr[rnd[i]]++;\n\taps[st[i]]++;\n      }\n      int p;\n      p=count(apr,apr+13,2);\n      int tf=*max_element(apr,apr+13);\n      if(tf==3){\n\tp=3;\n      }\n      bool str=false;\n      int sp;\n      for(int i=0;i<13-3;i++){\n\tint h=true;\n\tfor(int j=0;j<5;j++){\n\t  h&=apr[(i+j)%13];\n\t}\n\tif(h){\n\t  str=true;\n\t  p=4;\n\t  sp=i;\n\t}\n      }\n      bool fl=find(aps,aps+128,5)!=aps+128;\n      if(fl){\n\tp=5;\n      }\n      if(find(apr,apr+13,2)!=apr+13&&find(apr,apr+13,3)!=apr+13){\n\tp=6;\n      }\n      if(tf==4){\n\tp=7;\n      }\n      if(str&&fl){\n\tp=8+(sp==9);\n      }\n      int bp=0;\n      for(int i=0;i<5;i++){\n\tbp+=b[st[i]][rnd[i]];\n      }\n      cout<<bp*p<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint h[5],s[5];\nint v[13][4];\nint m[128];\nint k[10];\nint H()\n{\n\tfor(int i=1;i<5;++i)if(s[i]-s[i-1])return 0;\n\treturn 1;\n}\nint X(){return h[1]+1==h[2]&&h[2]+1==h[3]&&h[3]+1==h[4];}\nint S(){return X()&&h[0]+1==h[1];}\nint R(){return X()&&h[0]==1&&h[4]==13;}\nint F()\n{\n\tif(H())\n\t{\n\t\tif(R())return 9;\n\t\tif(S())return 8;\n\t\treturn 5;\n\t}\n\telse\n\t{\n\t\tif(h[0]==h[3]||h[1]==h[4])return 7;\n\t\tif(h[0]==h[1]&&h[2]==h[4] || h[0]==h[2]&&h[3]==h[4])return 6;\n\t\tif(S()||R())return 4;\n\t\tif(h[0]==h[2]||h[1]==h[3] || h[2]==h[4])return 3;\n\t\tif(h[0]==h[1])\n\t\t\tif(h[2]==h[3]||h[3]==h[4])return 2;\n\t\tif(h[1]==h[2]&&h[3]==h[4])return 2;\n\t\tif(h[0]==h[1]||h[1]==h[2]||h[2]==h[3]||h[3]==h[4])return 1;\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\tint N,i,j,r,x=0;\n\tchar c,d;\n\tm['A']=1;\n\tfor(i=0;i<10;++i)m[i+'0']=i;\n\tfor(i=0;i<4;++i)m[\"TJQK\"[i]]=i+10,m[\"SCHD\"[i]]=i;\n\twhile(scanf(\"%d\",&N),N)\n\t{\n\t\tif(x++)puts(\"\");\n\t\tfor(i=0;i<4;++i)for(j=0;j<13;++j)scanf(\"%d\",&v[j][i]);\n\t\tfor(i=1;i<10;++i)scanf(\"%d\",&k[i]);\n\t\twhile(N--)\n\t\t{\n\t\t\tfor(r=i=0;i<5;++i)\n\t\t\t{\n\t\t\t\tscanf(\" %c %c\",&c,&d);\n\t\t\t\th[i]=m[c];\n\t\t\t\ts[i]=m[d];\n\t\t\t\tr+=v[h[i]-1][s[i]];\n\t\t\t}\n\t\t\tsort(h,h+5);\n\t\t\tprintf(\"%d\\n\",r*k[F()]);\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n\n//#define\tmp\t\tmake_pair\n#define\tnum\t\tfirst\n#define\tsuit\tsecond\n\nusing namespace std;\n\ntypedef\tpair<int,char>\tpic;\n\nint base[4][14],ratio[9];\n\nint isStraight(pic hand[5]){\n\tsort(hand,hand+5);\n\tif(hand[0].num==1 && hand[1].num==10 && hand[2].num==11 && hand[3].num==12 && hand[4].num==13)\n\t\treturn 1;\n\tfor(int i=1;i<5;i++)\tif(hand[0].num+i!=hand[i].num)\treturn -1;\n\treturn hand[4].num;\n}\n\nbool isFlush(const pic hand[5]){\n\tfor(int i=1;i<5;i++)\tif(hand[0].suit!=hand[i].suit)\treturn false;\n\treturn true;\n}\n\nbool isFourCard(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==4)\treturn true;\n\treturn false;\n}\n\nbool isFullHouse(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tbool _2=false,_3=false;\n\tfor(int i=1;i<=13;i++){\n\t\tif(buc[i]==2)\t_2=true;\n\t\tif(buc[i]==3)\t_3=true;\n\t}\n\treturn _2&&_3;\n}\n\nbool isThreeCard(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==3)\treturn true;\n\treturn false;\n}\n\nbool isTwoPair(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tint _2=0;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==2)\t_2++;\n\treturn _2==2;\n}\n\nbool isOnePair(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==2)\treturn true;\n\treturn false;\n}\n\nint calcHand(pic hand[5]){\n\tint st=isStraight(hand);\n\tbool fl=isFlush(hand);\n\tif(st==1 && fl)\t\t\treturn ratio[8];\n\tif(st!=-1 && fl)\t\treturn ratio[7];\n\tif(isFourCard(hand))\treturn ratio[6];\n\tif(isFullHouse(hand))\treturn ratio[5];\n\tif(fl)\t\t\t\t\treturn ratio[4];\n\tif(st!=-1)\t\t\t\treturn ratio[3];\n\tif(isThreeCard(hand))\treturn ratio[2];\n\tif(isTwoPair(hand))\t\treturn ratio[1];\n\tif(isOnePair(hand))\t\treturn ratio[0];\n\treturn 0;\n}\n\nint calcBase(const pic hand[5]){\n\tstatic int suit2id[128];\n\tsuit2id['S']=0;\n\tsuit2id['C']=1;\n\tsuit2id['H']=2;\n\tsuit2id['D']=3;\n\tint point=0;\n\tfor(int i=0;i<5;i++)\tpoint+=base[suit2id[hand[i].suit]][hand[i].num];\n\treturn point;\n}\n\nint main(){\n\tfor(int n;~scanf(\"%d\",&n);){\n\t\tfor(int i=0;i<4;i++)for(int j=1;j<=13;j++)\tscanf(\"%d\",base[i]+j);\n\t\tfor(int i=0;i<9;i++)\tscanf(\"%d \",ratio+i);\n\t\twhile(n--){\n\t\t\tpic hand[5];\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tchar t;\n\t\t\t\tscanf(\"%c%c \",&t,&hand[i].suit);\n\t\t\t\tif     (t=='A')\thand[i].num=1;\n\t\t\t\telse if(t=='T')\thand[i].num=10;\n\t\t\t\telse if(t=='J')\thand[i].num=11;\n\t\t\t\telse if(t=='Q')\thand[i].num=12;\n\t\t\t\telse if(t=='K')\thand[i].num=13;\n\t\t\t\telse\t\t\thand[i].num=t-'0';\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",calcHand(hand)*calcBase(hand));\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <cctype>\nusing namespace std;\n\nint score[14][4];\nint rate[10];\n\ntypedef pair<int, int> card;\ntypedef vector<card> cards;\n\nint toNum(char a)\n{\n\tif(isdigit(a)) return a-'0';\n\tif(a=='T') return 10;\n\tif(a=='J') return 11;\n\tif(a=='Q') return 12;\n\tif(a=='K') return 13;\n\treturn a-'A'+1;\n}\n\nint toNum2(char a)\n{\n\tif(a=='S') return 0;\n\tif(a=='C') return 1;\n\tif(a=='H') return 2;\n\t\n\treturn 3;\n}\n\ncards input()\n{\n\tcards in;\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tin.push_back(make_pair(toNum(s[0]), toNum2(s[1])));\n\t}\n\t\n\tsort(in.begin(), in.end());\n\t\n\treturn in;\n}\n\nvector<int> calcPair(cards in)\n{\n\tvector<int> ret;\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first]++;\n\t}\n\t\n\tfor(int i=1; i<=13; i++)\n\t{\n\t\tif(num[i]!=0) ret.push_back(num[i]);\n\t}\n\t\n\tsort(ret.begin(), ret.end());\n\t\n\treturn ret;\n}\n\nbool isFlash(cards in)\n{\n\tfor(int i=1; i<5; i++)\n\t\tif(in[0].second!=in[i].second) return false;\n\t\t\n\treturn true;\n}\n\nint isStraight(cards in, vector<int> pr)\n{\n\tif(pr.size()!=5) return 0;\n\t\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first+(4-i)]++;\n\t}\n\t\n\tif(num[in[4].first]==5) return 1;\n\tif(num[in[4].first]==4&&num[5]) return 2;\n\t\n\treturn 0;\n}\n\nint total(cards in)\n{\n\tint ret=0;\n\tfor(int i=0; i<5; i++)\n\t\tret+=score[in[i].first][in[i].second];\n\t\t\n\treturn ret;\n}\n\n\nint calc(cards in)\n{\n\tvector<int> pr=calcPair(in);\n\tint ret=0,sz=pr.size();\n\t\n\tif(pr[sz-1]==2) ret=1;\n\tif(pr[sz-1]==pr[sz-2]) ret=2;\n\tif(pr[sz-1]==3) ret=3;\n\tif(isStraight(in,pr)!=0) ret=4;\n\tif(isFlash(in)) ret=5;\n\tif(pr[sz-2]==2&&pr[sz-1]==3) ret=6;\n\tif(pr[sz-1]==4) ret=7;\n\tif(isStraight(in,pr)!=0&&isFlash(in)) ret=8;\n\tif(isStraight(in,pr) == 2 && isFlash(in)) ret=9;\n\t\n\treturn total(in)*rate[ret];\n}\n\nint main()\n{\n\tbool flg=true;\n\tint N;\n\twhile(cin >> N)\n\t{\n\t\tif(flg) flg=false;\n\t\telse cout << endl;\n\t\t\n\t\tfor(int i=0; i<4; i++)\n\t\tfor(int j=0; j<13; j++)\n\t\t\tcin >> score[j+1][i];\n\t\t\n\t\trate[0]=0;\n\t\tfor(int i=0; i<9; i++)\n\t\t\tcin >> rate[i+1];\n\t\t\t\n\t\tfor(int i=0; i<N; i++)\n\t\t{\n\t\t\tcards cs=input();\n\t\t\tcout << calc(cs) << endl;\n\t\t}\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint to_i(char c)\n{\n  switch (c) {\n    case 'A': return 1;\n    case 'T': return 10;\n    case 'J': return 11;\n    case 'Q': return 12;\n    case 'K': return 13;\n    default: return c-'0';\n  }\n}\n\nvoid to_ns(int ns[5], const string hand[5])\n{\n  for (int i = 0; i < 5; i++) {\n    ns[i] = to_i(hand[i][0]);\n  }\n  sort(ns, ns+5);\n}\n\nint kihon(const string hand[5], const int points[4][13])\n{\n  int s = 0;\n  for (int i = 0; i < 5; i++) {\n    const int n = to_i(hand[i][0])-1;\n    int c;\n    switch (hand[i][1]) {\n      case 'S': c = 0; break;\n      case 'C': c = 1; break;\n      case 'H': c = 2; break;\n      case 'D': c = 3; break;\n    }\n    //cout << hand[i] << \" = \" << n << \",\" << c << endl;\n    s += points[c][n];\n  }\n  return s;\n}\n\nbool fullhouse(const string hand[5])\n{\n  int ns[5];\n  to_ns(ns, hand);\n  return\n    (ns[0] == ns[1] && ns[2] == ns[3] && ns[3] == ns[4])\n    || (ns[0] == ns[1] && ns[1] == ns[2] && ns[3] == ns[4]);\n}\n\nbool flash(const string hand[5])\n{\n  const int c = hand[0][1];\n  for (int i = 1; i < 5; i++) {\n    if (hand[i][1] != c) {\n      return false;\n    }\n  }\n  return true;\n}\n\nbool straight(const string hand[5])\n{\n  int ns[5];\n  to_ns(ns, hand);\n  if (ns[0] == 1 && ns[1] == 10 && ns[2] == 11 && ns[3] == 12 && ns[4] == 13) {\n    return true;\n  } else {\n    for (int i = 0; i < 4; i++) {\n      if (ns[i+1]-1 != ns[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nbool royal(const string hand[5])\n{\n  if (!flash(hand)) {\n    return false;\n  } else if (!straight(hand)) {\n    return false;\n  } else {\n    int ns[5];\n    to_ns(ns, hand);\n    return ns[0] == 1 && ns[1] == 10;\n  }\n}\n\nbool cards(const string hand[5], int N)\n{\n  int ns[5];\n  to_ns(ns, hand);\n  for (int i = 0; i <= 5-N; i++) {\n    for (int j = 0; j < N; j++) {\n      if (ns[i] != ns[j+i]) {\n        goto NEXT;\n      }\n    }\n    return true;\nNEXT:\n    ;\n  }\n  return false;\n}\n\nbool twopair(const string hand[5])\n{\n  int ns[5];\n  to_ns(ns, hand);\n  return (ns[0] == ns[1] && (ns[2] == ns[3] || ns[3] == ns[4]))\n    || (ns[1] == ns[2] && ns[3] == ns[4]);\n}\n\nint poker(const string hand[5], const int pats[9])\n{\n  if (royal(hand)) {\n    return pats[8];\n  } else if (straight(hand) && flash(hand)) {\n    return pats[7];\n  } else if (cards(hand, 4)) {\n    return pats[6];\n  } else if (fullhouse(hand)) {\n    return pats[5];\n  } else if (flash(hand)) {\n    return pats[4];\n  } else if (straight(hand)) {\n    return pats[3];\n  } else if (cards(hand, 3)) {\n    return pats[2];\n  } else if (twopair(hand)) {\n    return pats[1];\n  } else if (cards(hand, 2)) {\n    return pats[0];\n  } else {\n    return 0;\n  }\n}\n\nint main()\n{\n  int N;\n  while (cin >> N) {\n    int points[4][13];\n    for (int i = 0; i < 4; i++) {\n      for (int j = 0; j < 13; j++) {\n        cin >> points[i][j];\n      }\n    }\n    int pats[9];\n    for (int i = 0; i < 9; i++) {\n      cin >> pats[i];\n    }\n\n    for (int i = 0; i < N; i++) {\n      string hand[5];\n      for (int j = 0; j < 5; j++) {\n        cin >> hand[j];\n      }\n\n      //for (int j = 0; j < 5; j++) { cout << hand[j] << endl; }\n      //cout << cards(hand, 2) << endl;\n      const int k = kihon(hand, points);\n      const int p = poker(hand, pats);\n      cout << k*p << endl;\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint c[4][15];\nchar st[7]=\"SCHD\";\nchar nm[17]=\".23456789TJQKA\";\nint d[20];\nchar in[4];\npair<int,int>p[10];\nint calc(){\n\tbool flash=true;\n\tfor(int i=0;i<5;i++)for(int j=i+1;j<5;j++)\n\t\tif(p[i].second!=p[j].second)flash=false;\n\tbool st=true;\n\tfor(int i=0;i<4;i++)if(p[i].first+1!=p[i+1].first)st=false;\n\tbool st2=true;\n\tfor(int i=0;i<4;i++)if(p[i].first!=i+1)st2=false;\n\tif(p[4].first!=13)st2=false;\n\tif(st2)st=true;\n\tif(st&&flash&&p[0].first==9)return d[8];\n\tif(st&&flash)return d[7];\n\tif(p[0].first==p[3].first||p[1].first==p[4].first)return d[6];\n\tif((p[0].first==p[1].first&&p[2].first==p[4].first)||(p[0].first==p[2].first&&p[3].first==p[4].first))return d[5];\n\tif(flash)return d[4];\n\tif(st)return d[3];\n\tif(p[0].first==p[2].first||p[1].first==p[3].first||p[2].first==p[4].first)return d[2];\n\tif((p[0].first==p[1].first&&p[2].first==p[3].first)||\n\t(p[0].first==p[1].first&&p[3].first==p[4].first)||\n\t(p[1].first==p[2].first&&p[3].first==p[4].first))return d[1];\n\tfor(int i=0;i<4;i++)if(p[i].first==p[i+1].first)return d[0];\n\treturn 0;\n}\nint main(){\n\tint a;\n\tbool tc=false;\n\twhile(~scanf(\"%d\",&a)){\n\t\t//if(tc)printf(\"\\n\");\n\t\tfor(int i=0;i<4;i++)for(int j=0;j<13;j++)\n\t\t\tscanf(\"%d\",&c[i][j]);\n\t\tfor(int i=0;i<4;i++)c[i][13]=c[i][0];\n\t\tfor(int i=0;i<9;i++)scanf(\"%d\",d+i);\n\t\twhile(a--){\n\t\t\tint ks=0;\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tscanf(\"%s\",in);\n\t\t\t\tfor(int j=1;j<=13;j++){\n\t\t\t\t\tif(in[0]==nm[j])p[i].first=j;\n\t\t\t\t}\n\t\t\t\tfor(int j=0;j<4;j++){\n\t\t\t\t\tif(in[1]==st[j])p[i].second=j;\n\t\t\t\t}\n\t\t\t\tks+=c[p[i].second][p[i].first];\n\t\t\t//\tprintf(\"(%d %d) \",p[i].first,p[i].second);\n\t\t\t}\n\t\t\tstd::sort(p,p+5);\n\t\t\tint sc=calc();\n\t\t\tprintf(\"%d\\n\",ks*sc);\n\t\t}\n\t\ttc=true;\n\t\tprintf(\"\\n\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <functional>\nusing namespace std;\n\nint main()\n{\n  int N;\n  bool first = true;\n  while (cin >> N) {\n    if (!first)\n      cout << endl;\n\n    int point[4][13], rate[10];\n    for (int i = 0; i < 4; ++i) {\n      for (int j = 0; j < 13; ++j)\n\tcin >> point[i][j];\n    }\n    rate[0] = 0;\n    for (int i = 0; i < 9; ++i)\n      cin >> rate[i+1];\n\n    for (int loop = 0; loop < N; ++loop) {\n      set<char> suit;\n      map<int, int> cnt;\n      vector<pair<int, int> > card(5);\n      for (int i = 0; i < 5; ++i) {\n\tstring s;\n\tcin >> s;\n\tif (s[0] == 'A')\n\t  card[i].first = 1;\n\telse if (s[0] == 'T')\n\t  card[i].first = 10;\n\telse if (s[0] == 'J')\n\t  card[i].first = 11;\n\telse if (s[0] == 'Q')\n\t  card[i].first = 12;\n\telse if (s[0] == 'K')\n\t  card[i].first = 13;\n\telse\n\t  card[i].first = s[0] - '0';\n \n\tif (s[1] == 'S')\n\t  card[i].second = 0;\n\telse if (s[1] == 'C')\n\t  card[i].second = 1;\n\telse if (s[1] == 'H')\n\t  card[i].second = 2;\n\telse\n\t  card[i].second = 3;\n\n\tsuit.insert(s[1]);\n\t++cnt[card[i].first];\n      }\n      sort(card.begin(), card.end());\n\n      vector<int> same;\n      for (map<int, int>::iterator it = cnt.begin(); it != cnt.end(); ++it)\n\tsame.push_back(it->second);\n      sort(same.begin(), same.end(), greater<int>());\n\n      bool straight = true;\n      for (int i = 1; i < 5; ++i) {\n\tif (card[i-1].first+1 != card[i].first)\n\t  straight = false;\n      }\n      bool straight_A = false;\n      if (card[0].first == 1 && card[1].first == 10 && card[2].first == 11 && card[3].first == 12 && card[4].first == 13)\n\tstraight_A = true;\n\n      int rank = 0;\n      if (suit.size() == 1 && straight_A)\n\trank = 9;\n      else if (suit.size() == 1 && straight)\n\trank = 8;\n      else if (same[0] == 4)\n\trank = 7;\n      else if (same[0] == 3 && same[1] == 2)\n\trank = 6;\n      else if (suit.size() == 1)\n\trank = 5;\n      else if (straight)\n\trank = 4;\n      else if (same[0] == 3)\n\trank = 3;\n      else if (same[0] == 2 && same[1] == 2)\n\trank = 2;\n      else if (same[0] == 2)\n\trank = 1;\n\n      int ans = 0;\n      for (int i = 0; i < 5; ++i)\n\tans += point[card[i].second][card[i].first-1] * rate[rank];\n      cout << ans << endl;\n    }\n    first = false;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <queue>\n\n#define i64 long long\n#define ui64 unsigned long long\n#define REP(i,n) for(int (i)=0;(i)<(n);i++)\n#define REP2(i,k,n) for(int (i)=(k);(i)<(n);i++)\n#define ATCODER 1000000007\nusing namespace std;\n \n////////////////////////\n\nint c_points[5][14];\nint h_points[10];\n\nstruct card{\n  int num;\n  int mark;\n  card(char n_,char m_):num(),mark(){\n    switch(m_){\n      case 'S': mark = 0; break;\n      case 'H': mark = 2; break;\n      case 'D': mark = 3; break;\n      case 'C': mark = 1; break;\n    }\n    if(('0'<=n_)&&(n_<='9'))num=n_-'0';\n    else{\n      switch(n_){\n        case 'T': num = 10; break;\n        case 'J': num = 11; break;\n        case 'Q': num = 12; break;\n        case 'K': num = 13; break;\n        case 'A': num = 1; break;\n      }\n    }\n  }\n  bool operator< (const card& a){\n    return num==a.num?mark<a.mark:num<a.num;\n  }\n};\n\nbool straight(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if((hand[i+1].num-hand[i].num==1)||\\\n        ((!i)&&(hand[4].num==13&&hand[i].num==1)));\n    else return false;\n  }\n  return true;\n}\n\nbool flush(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].mark!=hand[i+1].mark)return false;\n  }\n  return true;\n}\n\nbool no_pair(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool one_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=4;i++){\n    if(i==4)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  for(int i=p+1;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool two_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=2;i++){\n    if(i==2)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  if(p==0){\n    return hand[2].num==hand[3].num?hand[3].num!=hand[4].num:hand[3].num==hand[4].num;\n  }\n  if(p==1){\n    return hand[3].num==hand[4].num;\n  }\n}\n\nbool three_card(vector<card>& hand){\n  if(hand[0].num==hand[2].num&&hand[0].num!=hand[3].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num==hand[3].num&&hand[3].num!=hand[4].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num!=hand[2].num&&hand[2].num==hand[4].num)return true;\n  return false;\n}\n\nbool fullhouse(vector<card>& hand){\n  int p;\n  if(hand[1].num!=hand[2].num){\n    if(hand[0].num!=hand[1].num)return false;\n    for(int i=2;i<4;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }else{\n    if(hand[3].num!=hand[4].num)return false;\n    for(int i=0;i<2;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }\n}\n\nbool straight_flush(vector<card>& hand){\n  return straight(hand)&&flush(hand);\n}\n\nbool four_card(vector<card>& hand){\n  return hand[0].num==hand[3].num||hand[1].num==hand[4].num;\n}\n\nbool royal_straight_flush(vector<card>& hand){\n  if(straight_flush(hand)){\n    if(hand[0].num==1)return true;\n  }\n  return false;\n}\n\n\nint solve(vector<card>& hand){\n  sort(hand.begin(),hand.end());\n  // for(int i=0;i<5;i++){\n  //   cout << hand[i].num << \" \" << hand[i].mark << endl;\n  // }\n  int res=0;\n  \n  for(int i=0;i<5;i++){\n    int m_=hand[i].mark;\n    int n_=hand[i].num;\n    res+=c_points[m_][n_-1];\n  }\n  // cout << res << endl;\n  if(royal_straight_flush(hand)){\n    res*=h_points[8];\n    // cout << 0 << endl;\n    return res;\n  }\n  if(straight_flush(hand)){\n    res*=h_points[7];\n    // cout << 8 << endl;\n    return res;\n  }\n  if(four_card(hand)){\n    res*=h_points[6];\n    // cout << 7 << endl;\n    return res;\n  }\n  if(straight(hand)){\n    res*=h_points[3];\n    // cout << 4 << endl;\n    return res;\n  }\n  if(flush(hand)){\n    res*=h_points[4];\n    // cout << 5 << endl;\n    return res;\n  }\n  if(fullhouse(hand)){\n    res*=h_points[5];\n    // cout << 6 << endl;\n    return res;\n  }\n  if(one_pair(hand)){\n    res*=h_points[0];\n    // cout << 1 << endl;\n    return res;\n  }\n  if(two_pair(hand)){\n    res*=h_points[1];\n    // cout << 2 << endl;\n    return res;\n  }\n  if(three_card(hand)){\n    res*=h_points[2];\n    // cout << 3 << endl;\n    return res;\n  }\n  if(no_pair(hand)){\n    return 0;\n  }\n  \n  return -1;\n}\n\nint main(){\n  int n;\n  while(true){\n    fill(&c_points[0][0],&c_points[4][13],0);\n    fill(&h_points[0],&h_points[9],0);\n    if(scanf(\"%d\",&n)==EOF)break;\n    for(int i=0;i<4;i++){\n      for(int k=0;k<13;k++){\n        cin >> c_points[i][k];\n      }\n    }\n    for(int i=0;i<9;i++){\n      cin >> h_points[i];\n    }\n    char a[3];\n    vector<card> hands;\n    for(int i=0;i<n;i++){\n      for(int k=0;k<5;k++){\n        cin >> a;\n        hands.push_back(card(a[0],a[1]));\n      }\n      cout << solve(hands) << endl;\n      hands.clear();\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nmap<char,int> m;\n\nbool op(string s[]){\n\trep(i,5)rep(j,5)if(i!=j){\n\t\tif(s[i][0]==s[j][0])return true;\n\t}\n\treturn false;\n}\n\nbool tp(string s[]){\n\trep(i,5)rep(j,5)rep(k,5)rep(l,5){\n\t\tif(i==j)continue;\n\t\tif(i==k)continue;\n\t\tif(i==l)continue;\n\t\tif(j==k)continue;\n\t\tif(j==l)continue;\n\t\tif(k==l)continue;\n\t\tif(s[i][0]==s[j][0]&&s[k][0]==s[l][0])return true;\n\t}\n\treturn false;\n}\n\nbool tc(string s[]){\n\trep(i,5)rep(j,5)rep(k,5){\n\t\tif(i==j)continue;\n\t\tif(i==k)continue;\n\t\tif(j==k)continue;\n\t\tif(s[i][0]!=s[j][0])continue;\n\t\tif(s[i][0]!=s[k][0])continue;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool ts(string s[]){\n\tint i;\n\trep0(i,5)if(s[i][0]=='A')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='K')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='Q')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='J')break;\n\tif(i==5)return false;\n\trep0(i,5)if(s[i][0]=='T')break;\n\tif(i==5)return false;\n\treturn true;\n}\n\nbool st(string s[]){\n\tif(ts(s))return true;\n\tint bit=0;\n\trep(i,5)bit|=1<<m[s[i][0]];\n\twhile(bit!=0){\n\t\tif(bit==31)return true;\n\t\tbit/=2;\n\t}\n\treturn false;\n}\n\nbool fl(string s[]){\n\tif(s[0][1]!=s[1][1])return false;\n\tif(s[0][1]!=s[2][1])return false;\n\tif(s[0][1]!=s[3][1])return false;\n\tif(s[0][1]!=s[4][1])return false;\n\treturn true;\n}\n\nbool fh(string s[]){\n\tif(s[0][0]==s[1][0]&&s[2][0]==s[3][0]&&s[2][0]==s[4][0])return true;\n\tif(s[0][0]==s[2][0]&&s[1][0]==s[3][0]&&s[1][0]==s[4][0])return true;\n\tif(s[0][0]==s[3][0]&&s[1][0]==s[2][0]&&s[1][0]==s[4][0])return true;\n\tif(s[0][0]==s[4][0]&&s[1][0]==s[2][0]&&s[1][0]==s[3][0])return true;\n\tif(s[1][0]==s[2][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[3][0]&&s[0][0]==s[2][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[4][0]&&s[0][0]==s[2][0]&&s[0][0]==s[3][0])return true;\n\tif(s[2][0]==s[3][0]&&s[0][0]==s[1][0]&&s[0][0]==s[4][0])return true;\n\tif(s[2][0]==s[4][0]&&s[0][0]==s[1][0]&&s[0][0]==s[3][0])return true;\n\tif(s[3][0]==s[4][0]&&s[0][0]==s[1][0]&&s[0][0]==s[2][0])return true;\n\treturn false;\n}\n\nbool fc(string s[]){\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[2][0]&&s[0][0]==s[3][0])return true;\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[2][0]&&s[0][0]==s[4][0])return true;\n\tif(s[0][0]==s[1][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[0][0]==s[2][0]&&s[0][0]==s[3][0]&&s[0][0]==s[4][0])return true;\n\tif(s[1][0]==s[2][0]&&s[1][0]==s[3][0]&&s[1][0]==s[4][0])return true;\n\treturn false;\n}\n\nbool sf(string s[]){\n\tif(!st(s))return false;\n\treturn fl(s);\n}\n\nbool rs(string s[]){\n\tif(!ts(s))return false;\n\treturn fl(s);\n}\n\nint main() {\n\tm['A']=0;\n\tm['2']=1;\n\tm['3']=2;\n\tm['4']=3;\n\tm['5']=4;\n\tm['6']=5;\n\tm['7']=6;\n\tm['8']=7;\n\tm['9']=8;\n\tm['T']=9;\n\tm['J']=10;\n\tm['Q']=11;\n\tm['K']=12;\n\tm['S']=0;\n\tm['C']=1;\n\tm['H']=2;\n\tm['D']=3;\n\tint n;\n\tbool first=true;\n\twhile(cin>>n){\n\t\tif(!first)cout<<endl;\n\t\tfirst=false;\n\t\tint x[4][13];\n\t\trep(i,4)rep(j,13)cin>>x[i][j];\n\t\tint y[9];\n\t\trep(i,9)cin>>y[i];\n\t\tstring cards[5];\n\t\trep(a,n){\n\t\t\trep(i,5)cin>>cards[i];\nrep(i,5)debug<<cards[i]<<endl;\n\t\t\tint ki=0;\n\t\t\trep(i,5)ki+=x[m[cards[i][1]]][m[cards[i][0]]];\ndebug<<\"ki : \"<<ki<<endl;\n\t\t\tif(rs(cards)){\n\t\t\t\tcout<<ki*y[8]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(sf(cards)){\n\t\t\t\tcout<<ki*y[7]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fc(cards)){\n\t\t\t\tcout<<ki*y[6]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fh(cards)){\n\t\t\t\tcout<<ki*y[5]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(fl(cards)){\n\t\t\t\tcout<<ki*y[4]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(st(cards)){\n\t\t\t\tcout<<ki*y[3]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tc(cards)){\n\t\t\t\tcout<<ki*y[2]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tp(cards)){\n\t\t\t\tcout<<ki*y[1]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(op(cards)){\n\t\t\t\tcout<<ki*y[0]<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\n#define REP(i,n,m) for(int i=n;i<m;i++)\n#define rep(i,n) REP(i,0,n)\n\nclass P{\npublic:\n\tint x,y;\n\tP(int _x,int _y){\n\t\tx = _x;\n\t\ty = _y;\n\t}\n\n\tbool operator<(const P &p)const{\n\t\treturn x < p.x;\n\t}\n};\n\nbool isFlash(vector<P> v){\n\trep(i,v.size()-1) if(v[i].y != v[i+1].y) return false;\n\treturn true;\n}\n\nbool isSame(vector<P> v,int n,int m){\n\tREP(i,n,m-1) if(v[i].x != v[i+1].x) return false;\n\treturn true;\n}\n\nbool isStraight(vector<P> v){\n\tint n = 0;\n\tint m = v.size();\n\tif(v[0].x==0 && v[1].x==9) n = 1;\n\n\tREP(i,n,m-1) if(v[i].x + 1 != v[i+1].x) return false;\n\treturn true;\n}\n\nint main(void){\n\tint n;\n\tbool firstFlg = true;\n\n\twhile(cin>>n){\n\t\tif(firstFlg) firstFlg = false;\n\t\telse cout<<endl;\n\n\t\tint t[4][13];\n\t\trep(i,4) rep(j,13) cin>>t[i][j];\n\n\t\tint s[9];\n\t\trep(i,9) cin>>s[i];\n\n\t\twhile(n--){\n\t\t\tint score = 0;\n\t\t\tvector<P> v;\n\n\t\t\trep(i,5){\n\t\t\t\tstring s;\n\t\t\t\tcin>>s;\n\n\t\t\t\tint x = ('2'<=s[0] && s[0]<='9' ? s[0]-'1' :\n\t\t\t\t\t\t\t\t s[0]=='A' ? 0 :\n\t\t\t\t\t\t\t\t s[0]=='T' ? 9 :\n\t\t\t\t\t\t\t\t s[0]=='J' ? 10 :\n\t\t\t\t\t\t\t\t s[0] == 'Q' ? 11 : 12);\n\t\t\t\tint y = (s[1]=='S' ? 0 :\n\t\t\t\t\t\t\t\t s[1] == 'C' ? 1 :\n\t\t\t\t\t\t\t\t s[1] == 'H' ? 2 : 3);\n\n\t\t\t\tscore += t[y][x];\n\t\t\t\tv.push_back(P(x,y));\n\t\t\t}\n\n\t\t\tsort(v.begin(),v.end());\n\n\t\t\t//CXg[gtbV\n\t\t\tif(v[0].x==0 && v[1].x==9 && isStraight(v) && isFlash(v))\n\t\t\t\tscore *= s[8];\n\t\t\t//Xg[gtbV\n\t\t\telse if(isStraight(v) && isFlash(v))\n\t\t\t\tscore *= s[7];\n\t\t\t//tH[J[h\n\t\t\telse if(isSame(v,0,4) || isSame(v,1,5))\n\t\t\t\tscore *= s[6];\n\t\t\t//tnEX\n\t\t\telse if( isSame(v,0,2) && isSame(v,2,5) ||\n\t\t\t\t\t\t\t isSame(v,0,3) && isSame(v,3,5) )\n\t\t\t\tscore *= s[5];\n\t\t\t//tbV\n\t\t\telse if(isFlash(v))\n\t\t\t\tscore *= s[4];\n\t\t\t//Xg[g\n\t\t\telse if(isStraight(v))\n\t\t\t\tscore *= s[3];\n\t\t\t//X[J[h\n\t\t\telse if(isSame(v,0,3) || isSame(v,1,4) || isSame(v,2,5))\n\t\t\t\tscore *= s[2];\n\t\t\t//c[yA\n\t\t\telse if( isSame(v,0,2) && (isSame(v,2,4) || isSame(v,3,5)) ||\n\t\t\t\t\t\t\t isSame(v,1,3) && isSame(v,3,5) )\n\t\t\t\tscore *= s[1];\n\t\t\t//yA\n\t\t\telse if( isSame(v,0,2) || isSame(v,1,3) ||\n\t\t\t\t\t\t\t isSame(v,2,4) || isSame(v,3,5) )\n\t\t\t\tscore *= s[0];\n\t\t\t//ðÈµ\n\t\t\telse\n\t\t\t\tscore = 0;\n\n\t\t\tcout<<score<<endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n\n//#define\tmp\t\tmake_pair\n#define\tnum\t\tfirst\n#define\tsuit\tsecond\n\nusing namespace std;\n\ntypedef\tpair<int,char>\tpic;\n\nint base[4][14],ratio[9];\n\nint isStraight(pic hand[5]){\n\tsort(hand,hand+5);\n\tif(hand[0].num==1 && hand[1].num==10 && hand[2].num==11 && hand[3].num==12 && hand[4].num==13)\n\t\treturn 1;\n\tfor(int i=1;i<5;i++)\tif(hand[0].num+i!=hand[i].num)\treturn -1;\n\treturn hand[4].num;\n}\n\nbool isFlush(const pic hand[5]){\n\tfor(int i=1;i<5;i++)\tif(hand[0].suit!=hand[i].suit)\treturn false;\n\treturn true;\n}\n\nbool isFourCard(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==4)\treturn true;\n\treturn false;\n}\n\nbool isFullHouse(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tbool _2=false,_3=false;\n\tfor(int i=1;i<=13;i++){\n\t\tif(buc[i]==2)\t_2=true;\n\t\tif(buc[i]==3)\t_3=true;\n\t}\n\treturn _2&&_3;\n}\n\nbool isThreeCard(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==3)\treturn true;\n\treturn false;\n}\n\nbool isTwoPair(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tint _2=0;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==2)\t_2++;\n\treturn _2==2;\n}\n\nbool isOnePair(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==2)\treturn true;\n\treturn false;\n}\n\nint calcHand(pic hand[5]){\n\tint st=isStraight(hand);\n\tbool fl=isFlush(hand);\n\tif(st==1 && fl)\t\t\treturn ratio[8];\n\tif(st!=-1 && fl)\t\treturn ratio[7];\n\tif(isFourCard(hand))\treturn ratio[6];\n\tif(isFullHouse(hand))\treturn ratio[5];\n\tif(fl)\t\t\t\t\treturn ratio[4];\n\tif(st!=-1)\t\t\t\treturn ratio[3];\n\tif(isThreeCard(hand))\treturn ratio[2];\n\tif(isTwoPair(hand))\t\treturn ratio[1];\n\tif(isOnePair(hand))\t\treturn ratio[0];\n\treturn 0;\n}\n\nint calcBase(const pic hand[5]){\n\tstatic int suit2id[128];\n\tsuit2id['S']=0;\n\tsuit2id['C']=1;\n\tsuit2id['H']=2;\n\tsuit2id['D']=3;\n\tint point=0;\n\tfor(int i=0;i<5;i++)\tpoint+=base[suit2id[hand[i].suit]][hand[i].num];\n\treturn point;\n}\n\nint main(){\n\tfor(int n;~scanf(\"%d\",&n);){\n\t\tfor(int i=0;i<4;i++)for(int j=1;j<=13;j++)\tscanf(\"%d\",base[i]+j);\n\t\tfor(int i=0;i<9;i++)\tscanf(\"%d \",ratio+i);\n\t\twhile(n--){\n\t\t\tpic hand[5];\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tint t;\n\t\t\t\tscanf(\"%c%c \",&t,&hand[i].suit);\n\t\t\t\tif     (t=='A')\thand[i].num=1;\n\t\t\t\telse if(t=='T')\thand[i].num=10;\n\t\t\t\telse if(t=='J')\thand[i].num=11;\n\t\t\t\telse if(t=='Q')\thand[i].num=12;\n\t\t\t\telse if(t=='K')\thand[i].num=13;\n\t\t\t\telse\t\t\thand[i].num=t-'0';\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",calcHand(hand)*calcBase(hand));\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <climits>\n#include <vector>\n#include <map>\n#include <set>\n#include <list>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <iostream>\n#include <string>\n\n#define REP(i,n) for(int i=0;i<n;++i)\n#define REPR(i,n) for(int i=n;i>=0;--i)\n#define REPI(itr,v) for(auto itr=v.begin();itr!=v.end();++itr)\n#define REPIR(itr,v) for(auto itr=v.rbegin();itr!=v.rend();++itr)\n#define FOR(i,a,b) for(int i=a;i<b;++i)\n#define SORT(v,n) sort(v, v+n)\n#define SORTV(v) sort(v.begin(), v.end())\n#define ALL(v) v.begin(),v.end()\n#define llong long long\n#define INF 999999999\n#define SUR 1000000007\n#define pb push_back\n#define pf push_front\n#define MP make_pair\n\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\n\nusing namespace std;\n\n//suit S:0 C:1 H:2\nint conNum(char c){\n  if(c == 'K') return 13;\n  else if(c == 'Q') return 12;\n  else if(c == 'J') return 11;\n  else if(c == 'T') return 10;\n  else if(c == 'A') return 1;\n  else{\n    return c - '0';\n  }\n}\n\nint suitTonum(char c){\n  if(c == 'S') return 0;\n  else if(c == 'C') return 1;\n  else if(c == 'H') return 2;\n  else return 3;\n}\n\nstruct hand{\n  int num[5];\n  int suit[5];\n};\n\nint main(){\n\n  int n;\n  bool hoge = false;\n  while(cin >> n){\n    if(hoge) cout << \"\\n\";\n    hoge = true;\n    llong card[4][13] = {};\n    REP(i,4){\n      REP(j,13){\n        cin >> card[i][j];\n      }\n    }\n    llong role[9];\n    REP(i,9){\n      cin >> role[8 - i];\n    }\n\n    vector<hand> v(n);\n    REP(i,n){\n      REP(j,5){\n        string tmp;\n        cin >> tmp;\n        v[i].num[j] = conNum(tmp[0]) - 1;\n        v[i].suit[j] = suitTonum(tmp[1]);\n\n        //cout << \"#i\" << i << \" \" << v[i].num[i] << \" \" << v[i].suit[i] << \"\\n\";\n      }\n    }\n\n    vector<llong> base(n);\n    REP(i,n){\n      base[i] = 0;\n      REP(j,5){\n        int a = v[i].num[j], b = v[i].suit[j];\n        base[i] += card[b][a];\n      }\n      sort(v[i].num, v[i].num + 5);\n    }\n    REP(i,n){\n\n      //flush\n      bool end = false;\n      bool isFl = true;\n      REP(j,4){\n        if(v[i].suit[j+1] != v[i].suit[0]){\n          isFl = false;\n          break;\n        }\n      }\n      //st\n      bool isSt = true;\n      int last = v[i].num[0];\n      REP(j,4){\n        if(v[i].num[j+1] != last + 1){\n          isSt = false;\n          break;\n        }\n        last = v[i].num[j+1];\n      }\n      \n      bool isRoyal = false;\n      if(v[i].num[0] == 0 && v[i].num[1] == 9 && v[i].num[2] == 10 && v[i].num[3] == 11 && v[i].num[4] == 12){\n        isSt = true;\n        if(isFl){\n          cout << base[i] * role[0] << \"\\n\";\n          isRoyal = true;\n        }\n      }\n      if(isRoyal) continue;\n      if(isFl && isSt){\n        cout << base[i] * role[1] << \"\\n\";\n        continue;\n      }\n\n      map<int, int> mp;\n      REP(j,5){\n        mp[v[i].num[j]]++;\n      }\n      //four\n      REPI(itr,mp){\n        if(itr->second == 4){\n          cout << base[i] * role[2] << \"\\n\";\n          end = true;\n          break;\n        }\n      }\n      if(end) continue;\n      \n      //full\n      int th = 0, tw = 0;\n      REPI(itr,mp){\n        if(itr->second == 3){\n          th++;\n        }else if(itr->second == 2){\n          tw++;\n        }\n      }\n      if(th > 0 && tw){\n        cout << base[i] * role[3] << \"\\n\";\n        continue;\n      }\n\n      if(isFl){\n        cout << base[i] * role[4] << \"\\n\";\n        continue;\n      }\n      if(isSt){\n        cout << base[i] * role[5] << \"\\n\";\n        continue;\n      }\n      if(th > 0){\n        cout << base[i] * role[6] << \"\\n\";\n        continue;\n      }\n      if(tw == 2){\n        cout << base[i] * role[7] << \"\\n\";\n        continue;\n      }\n      if(tw == 1){\n        cout << base[i] * role[8] << \"\\n\";\n        continue;\n      }\n      cout << \"0\\n\";\n    }\n  }\n  return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin >> kihon[i][j];\n      }\n    }\n    \n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n    \n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n\tchar temp;\n\tcin >> temp >> tehudac[i];\n\tif(temp>'1' && temp<='9'){\n\t  tehudan[i]=temp-'0';\n\t}\n\telse if(temp=='T') tehudan[i]=10;\n\telse if(temp=='J') tehudan[i]=11;\n\telse if(temp=='Q') tehudan[i]=12;\n\telse if(temp=='K') tehudan[i]=13;\n\telse if(temp=='A') tehudan[i]=1;\n\tgetchar();\n      }\n      \n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n\tif(tehudac[i]=='S') iro=0;\n\telse if(tehudac[i]=='C') iro=1;\n\telse if(tehudac[i]=='H') iro=2;\n\telse if(tehudac[i]=='D') iro=3;\n\t\n\tsum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n\n      int yaku;\n      yaku=hantei();\n      \n      int ans;\n      if(yaku==-1){\n\tcout << 0 << endl;\n      }\n      else{\n\tans=bairitu[yaku]*sum;\n\tcout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n  \nint kumi(){\n  int count=0;\n  for(int i=0;i<4;i++){\n    if(tehudan[i]==tehudan[i+1]){\n      count++;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1) return 8;\n  else if(b==2 && c==0) return 7;\n  else if(b==1 && c==1) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a==1) return 5;\n  else if(c==1) return 4;\n  else if(b==1) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==13) return 2;\n\n  int temp=tehudan[0];\n  if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==temp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n  char mozi;\n  mozi=tehudac[a];\n  tehudac[a]=tehudac[b];\n  tehudac[b]=mozi;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n        cin >> kihon[i][j];\n      }\n    }\n\n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n\n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n        char temp;\n        cin >> temp >> tehudac[i];\n        if(temp>'1' && temp<='9'){\n          tehudan[i]=temp-'0';\n        }\n        else if(temp=='T') tehudan[i]=10;\n        else if(temp=='J') tehudan[i]=11;\n        else if(temp=='Q') tehudan[i]=12;\n        else if(temp=='K') tehudan[i]=13;\n        else if(temp=='A') tehudan[i]=1;\n        getchar();\n      }\n\n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n        if(tehudac[i]=='S') iro=0;\n        else if(tehudac[i]=='C') iro=1;\n        else if(tehudac[i]=='H') iro=2;\n        else if(tehudac[i]=='D') iro=3;\n\n        sum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n      /*for(int i=0;i<5;i++){\n\tcout << tehudan[i] << ' ';\n      }\n      cout << endl;*/\n      int yaku;\n      yaku=hantei();\n\n      int ans;\n      if(yaku==-1){\n        cout << 0 << endl;\n      }\n      else{\n        ans=bairitu[yaku]*sum;\n        cout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n\n\nint kumi(){\n  int count=0;\n\n  for(int i=0;i<4;i++){\n    int j;\n    if(tehudan[i]==tehudan[i+1]){\n      for(j=0;j+i<4;j++){\n\tif(tehudan[i+j]!=tehudan[i+j+1]) break;\n      }\n      if(j==1) count++;\n      i=j+i;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1) return 8;\n  else if(b==1 && c==1) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a!=0) return 5;\n  else if(c==1) return 4;\n  else if(b==1) return 3;\n  else if(b==2) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  int temp=tehudan[0];\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==1\\\n3) return 2;\n  else if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==t\\\nemp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\n\nint solve(vector<pair<int, int>>cards) {\n\tsort(cards.begin(),cards.end());\n\tbool flush_flag = all_of(cards.begin(), cards.end(), [&](const pair<int, int>&p) {\n\t\treturn p.second==cards[0].second;\n\t});\n\tbool str_flag;\n\t{\n\t\tbool ok=true;\n\t\tfor (int i = 0; i < 4; ++i) {\n\t\t\tif (cards[i].first + 1 != cards[i + 1].first) {\n\t\t\t\tok=false;\n\t\t\t}\n\t\t\tif(cards[0].first==1&&cards[1].first==10&&cards[2].first==11&&cards[3].first==12&&cards[4].first==13)ok=true;\n\t\t}\n\t\tstr_flag=ok;\n\t}\n\tif(str_flag&&flush_flag&&cards[0].first==1&&cards[1].first==10)return 9;\n\tif(str_flag&&flush_flag)return 8;\n\tif(str_flag)return 4;\n\tif(flush_flag)return 5;\n\n\n\tmap<int,int>mp;\n\tfor (int i = 0; i < 5; ++i) {\n\t\tmp[cards[i].first]++;\n\t}\n\tvector<int>v;\n\tfor (auto m : mp) {\n\t\tv.push_back(m.second);\n\t}\n\tsort(v.begin(),v.end(),greater<int>());\n\tif (v == vector<int>{4, 1})return 7;\n\tif (v == vector<int>{3, 2})return 6;\n\tif (v == vector<int>{1, 1, 1, 1, 1})return 0;\n\tif (v == vector<int>{2, 1, 1, 1})return 1;\n\tif (v == vector<int>{2, 2, 1})return 2;\n\tif (v == vector<int>{3, 1, 1})return 3;\n}\n\nint main() {\n\tint N;\n\tbool flag=false;\n\twhile (cin>>N) {\n\t\tif(flag)cout<<endl;\n\t\tflag=true;\n\t\tvector<vector<int>>costs(4,vector<int>(13));\n\t\tfor (int i = 0; i < 4; ++i) {\n\t\t\tfor (int j = 0; j < 13; ++j) {\n\t\t\t\tcin>>costs[i][j];\n\t\t\t}\n\t\t}\n\t\tvector<int>yaku_cost(10);\n\t\tfor (int i = 0; i < 9; ++i) {\n\t\t\tcin>>yaku_cost[i+1];\n\t\t}\n\t\tfor (int q = 0; q < N; ++q) {\n\t\t\tmap<char, int>type_mp{\n\t\t\t\t{'S',0},\n\t\t\t\t{'C',1},\n\t\t\t\t{'H',2},\n\t\t\t\t{'D',3},\n\t\t\t};\n\t\t\tmap<char, int>num_mp{\n\t\t\t\t{'T',10},\n\t\t\t\t{'J',11},\n\t\t\t\t{'Q',12},\n\t\t\t\t{'K',13},\n\t\t\t\t{'A',1}\n\t\t\t};\n\n\t\t\tint sum=0;\n\t\t\tvector<pair<int,int>>cards;\n\t\t\tfor (int i = 0; i < 5; ++i) {\n\t\t\t\tstring st;cin>>st;\n\t\t\t\tint num=isdigit(st[0])?st[0]-'0':num_mp[st[0]];\n\t\t\t\tint type=type_mp[st[1]];\n\t\t\t\tsum+=costs[type][num-1];\n\t\t\t\tcards.emplace_back(num,type);\n\t\t\t}\n\t\t\tint yaku=solve(cards);\n\t\t\tint ans=sum*yaku_cost[yaku];\n\t\t\tcout<<ans<<endl;\n\t\t}\n\n\t}\n\treturn 0;\n} "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\n#include<cmath>\nusing namespace std;\ntypedef vector<int> vi;\n\nint main()\n{\n  int buckets[14];\n  int buckets2[5];\n  while(1)\n  {\n    int n;\n    cin >> n;\n    if(!n) break;\n    int cardscore[14][5];\n    int handscore[9];\n      for(int j=1;j<=4;j++)\n      {\n        for(int k=1;k<=13;k++)\n        {\n          cin >> cardscore[k][j];\n        }\n      }\n      for(int j=0;j<9;j++)\n      {\n        cin >> handscore[j];\n      }\n    \n    for(int i=0;i<n;i++)\n    {\n      int times=0;\n      long long score=0;\n      vector<string> card(5);\n      vector<pair<int,int> > tmpc(5);\n      for(int j=0;j<5;j++)\n      {\n        cin >> card[j];\n        if(card[j][0]=='A')\n        {\n          tmpc[j].first=1;\n        }\n        else if(card[j][0]=='T')\n        {\n          tmpc[j].first=10;\n        }\n        else if(card[j][0]=='J')\n        {\n          tmpc[j].first=11;\n        }\n        else if(card[j][0]=='Q')\n        {\n          tmpc[j].first=12;\n        }\n        else if(card[j][0]=='K')\n        {\n          tmpc[j].first=13;\n        }\n        else\n        {\n          tmpc[j].first=(int)(card[j][0]-'0');\n        }\n        if(card[j][1]=='S')\n        {\n          tmpc[j].second=1;\n        }\n        else if(card[j][1]=='C')\n        {\n          tmpc[j].second=2;\n        }\n        else if(card[j][1]=='H')\n        {\n          tmpc[j].second=3;\n        }\n        else if(card[j][1]=='D')\n        {\n          tmpc[j].second=4;\n        }\n        score+=cardscore[tmpc[j].first][tmpc[j].second];\n\n      }\n      int onep=0,threec=0,four=0;\n      bool flash=false;\n      bool straight=true;\n      sort(tmpc.begin(),tmpc.end());\n      memset(buckets,0,sizeof(buckets));\n      memset(buckets2,0,sizeof(buckets2));\n      for(int j=0;j<5;j++)\n      {\n        buckets[tmpc[j].first]++;\n        buckets2[tmpc[j].second]++;\n      }\n      for(int j=1;j<=13;j++)\n      {\n        if(buckets[j]==2)\n        {\n          onep++;\n        }\n        else if(buckets[j]==3)\n        {\n          threec++;\n        }\n        else if(buckets[j]==4)\n        {\n          four++;\n        }\n      }\n      for(int j=1;j<=5;j++)\n      {\n        if(buckets2[j]==5)\n        {\n          flash=true;\n          times=handscore[4];\n        }\n      }\n      if(onep==1 && threec==0)\n      {\n        times=handscore[0];\n      }\n      else if(onep==2)\n      {\n        times=handscore[1];\n      }\n      else if(threec==1 && onep==0)\n      {\n        times=handscore[2];\n      }\n      else if(threec==1 && onep==1)\n      {\n        times=handscore[5];\n      }\n      else if(four==1)\n      {\n        times=handscore[6];\n      }\n      if(tmpc[0].first==1 && tmpc[1].first==10 && tmpc[2].first==11 && tmpc[3].first==12 && tmpc[4].first==13)\n      {\n        if(flash) times=handscore[8];\n        else times=handscore[3];\n      }\n      else\n      {\n        for(int j=0;j<4;j++)\n        {\n          if(tmpc[j+1].first!=(tmpc[j].first+1)) straight=false;\n        }\n        if(straight)\n        {\n          if(flash) times=handscore[7];\n          else times=handscore[3];\n        }\n      }\n      cout << score*times << endl;\n    }\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[4][13], p[10], z; char c; pair<int, int> s[5]; string s1 = \"A23456789TJQK\", s2 = \"SCHD\";\nint judge() {\n\tvector<int> v; int w = 1, f = 1, g = 1, h = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i - 1].first != s[i].first) v.push_back(w), w = 0;\n\t\tif (s[i - 1].first + 1 != s[i].first) g = 0;\n\t\tif (s[i - 1].second != s[i].second) f = 0;\n\t\tw++;\n\t}\n\tv.push_back(w);\n\tsort(v.begin(), v.end());\n\tif (v.back() == 4) return 7;\n\tif (v.back() == 3 && v.size() == 2) return 6;\n\tfor (int i = 0; i < 5; i++) h &= (s[i].first == (i ? (i + 9) % 13 : 0) ? 1 : 0);\n\tif (f) h ? 9 : g ? 8 : 5;\n\tif (g | h) return 4;\n\tif (v.back() == 3) return 3;\n\tif (v.back() == 2) return 5 - v.size();\n\treturn 0;\n}\nint main() {\n\twhile (cin >> n) {\n\t\tif (z++) cout << endl;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) cin >> a[i][j];\n\t\t}\n\t\tfor (int i = 1; i < 10; i++) cin >> p[i];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> c; s[j].first = s1.find(c);\n\t\t\t\tcin >> c; s[j].second = s2.find(c);\n\t\t\t\tcnt += a[s[j].second][s[j].first];\n\t\t\t}\n\t\t\tsort(s, s + 5);\n\t\t\tcout << cnt * p[judge()] << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cassert>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\nusing namespace std;\ntypedef pair<int,int> Pox;//テ・ツスツケテ」ツ??・ツセツ療ァツつケ: 0->テ」ツδッテ」ツδウテ」ツδ堙」ツつ「 1->テッツシツ津」ツδ堙」ツつ「 2-> テッツシツ禿」ツつォテ」ツδシテ」ツδ?3->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ?, 4->テ」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 5->テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ, 6-> テ」ツδ陛」ツつゥテ」ツδシテ」ツつォテ」ツδシテ」ツδ? 7->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 8->テ」ツδュテ」ツつ、テ」ツδ、テ」ツδォテ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・\nstruct P\n{\n  int v;\n  char c;\n  P(int v=-1,char c='$'):v(v),c(c){}\n  bool operator < (const P &a)const\n  {\n    if(v != a.v)return v < a.v;\n    return c < a.c;\n  }\n};\n\nint S[15],C[15],H[15],D[15],ATK[15];\n\nint main()\n{\n  int n;\n  bool f = true;\n  while(cin >> n)\n    {  \n      if(f)f = false;\n      else cout << endl;\n      rep(i,13)cin >> S[i];\n      rep(i,13)cin >> C[i];\n      rep(i,13)cin >> H[i];\n      rep(i,13)cin >> D[i];\n      rep(i,9)cin >> ATK[i];\n    \n      rep(F,n)\n\t{\n\t  vector<Pox> ans;\n\t  bool suit = true;\n\t  vector<P> vec(5);\n\t  int point = 0;\n\t  int RSF = 0;\n\t  map<int,int> index;\n\n\t  rep(i,5)\n\t    {\n\t      char a,b,dummy;\n\t      int A;\n\t      string s;\n\t      cin >> s;\n\t      a = s[0];\n\t      b = s[1];\n\t      if('2' <= a && a <= '9')A = a-'0';\n\t      else if(a == 'A')A = 1;\n\t      else if(a == 'T')A = 10;\n\t      else if(a == 'J')A = 11;\n\t      else if(a == 'Q')A = 12;\n\t      else if(a == 'K')A = 13;\n\t      else assert(false);\n\t      vec[i].v = A;\n\t      vec[i].c = b;\n\t      if(i && vec[i].c != vec[i-1].c)suit = false;\n\n\t      if(b == 'S')point += S[vec[i].v-1];\n\t      else if(b == 'C')point += C[vec[i].v-1];\n\t      else if(b == 'H')point += H[vec[i].v-1];\n\t      else if(b == 'D')point += D[vec[i].v-1];\n\t      if(vec[i].v == 1 || (10 <= vec[i].v && vec[i].v <= 13))RSF = RSF|(1<<vec[i].v);\n\t      index[vec[i].v]++;\n\t    }\n\n\t  if(__builtin_popcount(RSF) == 5 && suit)\n\t    {\n\t      cout << point*ATK[8] << endl;\n\t      continue;\n\t    }\n\n\t  sort(vec.begin(),vec.end());\n\t  bool RB = true;\n\t  REP(i,1,vec.size())\n\t    if(vec[i].v != vec[i-1].v+1)\n\t      {\n\t\tRB = false;\n\t\tbreak;\n\t      }\n\n\t  if(RB && suit)\n\t    {\n\t      cout << point*ATK[7] << endl;\n\t      continue;\n\t    }\n\n\t  bool four = false;\n\t  for(map<int,int>::iterator it = index.begin();it != index.end();it++)\n\t    if(it->second == 2 || it->second == 3)break;\n\t    else if(it->second == 4)\n\t      {\n\t\tfour = true;\n\t\tbreak;\n\t      }\n\n\t  if(four)\n\t    {\n\t      cout << point*ATK[6] << endl;\n\t      continue;\n\t    }\n\n\t  int one=0,three=0;\n\t  for(map<int,int>::iterator it = index.begin();it != index.end();it++)\n\t    {\n\t      if(it->second == 2)one++;\n\t      else if(it->second == 3)three++;\n\t    }\n\n\t  if(one == 1 && three == 1)\n\t    {\n\t      cout << point*ATK[5] << endl;\n\t      continue;\n\t    }\t \n\n\t  if(suit)\n\t    {\n\t      cout << point*ATK[4] << endl;\n\t      continue;\n\t    }\n\n\t  if(RB)\n\t    {\n\t      cout << point*ATK[3] << endl;\n\t      continue;\n\t    }\n\n\t  if(three == 1)\n\t    {\n\t      cout<< point*ATK[2] << endl;\n\t      continue;\n\t    }\n\n\t  if(one == 2)\n\t    {\n\t      cout << point*ATK[1] << endl;\n\t      continue;\n\t    }\n\n\t  if(one == 1)\n\t    {\n\t      cout << point*ATK[0] << endl;\n\t      continue;\n\t    }\n\t  cout << 0 << endl;\n\t}\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//32\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n  bool ns=false;\n  for(int n;cin>>n;){\n    const char* s=\"SCHD\";\n    int b[128][13];\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin>>b[s[i]][j];\n      }\n    }\n    int m[10]={};\n    for(int i=0;i<9;i++){\n      cin>>m[i+1];\n    }\n    if(ns){\n      cout<<endl;\n    }\n    ns=true;\n    while(n--){\n      const char *r=\"A23456789TJQK\";\n      int apr[13]={},aps[128]={};\n      char rn[5],st[5];\n      int rnd[5];\n      for(int i=0;i<5;i++){\n\tcin>>rn[i]>>st[i];\n\trnd[i]=strchr(r,rn[i])-r;\n\tapr[rnd[i]]++;\n\taps[st[i]]++;\n      }\n      int p;\n      p=count(apr,apr+13,2);\n      int tf=*max_element(apr,apr+13);\n      if(tf==3){\n\tp=3;\n      }\n      bool str=false;\n      int sp;\n      for(int i=0;i<13-3;i++){\n\tint h=true;\n\tfor(int j=0;j<5;j++){\n\t  h&=apr[(i+j)%13];\n\t}\n\tif(h){\n\t  str=true;\n\t  p=4;\n\t  sp=i;\n\t}\n      }\n      bool fl=find(aps,aps+128,5)!=aps+128;\n      if(fl){\n\tp=5;\n      }\n      if(find(apr,apr+13,2)!=apr+13&&find(apr,apr+13,3)!=apr+13){\n\tp=6;\n      }\n      if(tf==4){\n\tp=7;\n      }\n      if(str&&fl){\n\tp=8+(sp==9);\n      }\n      int bp=0;\n      for(int i=0;i<5;i++){\n\tbp+=b[st[i]][rnd[i]];\n      }\n      cout<<bp*p<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[4][13], p[10]; char c; pair<int, int> s[5]; string s1 = \"A23456789TJQK\", s2 = \"SCHD\";\nint judge() {\n\tvector<int> v; int w = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].first != s[i - 1].first) v.push_back(w), w = 0;\n\t\tw++;\n\t}\n\tv.push_back(w);\n\tsort(v.begin(), v.end());\n\tif (v.back() == 4) return 7;\n\tif (v.back() == 3 && v.size() == 2) return 6;\n\tint f = 1, g = 1, h = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].second != s[i - 1].second) f = 0;\n\t}\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i - 1].first + 1 != s[i].first) g = 0;\n\t}\n\tfor (int i = 0; i < 5; i++) {\n\t\tif (s[i].first != (i + 12) % 13) h = 0;\n\t}\n\tif (f) {\n\t\tif (h) return 9;\n\t\tif (g) return 8;\n\t\treturn 5;\n\t}\n\tif (g | h) return 4;\n\tif (v.back() == 3) return 3;\n\tif (v.back() == 2 && v[v.size() - 2] == 2) return 2;\n\tif (v.back() == 2) return 1;\n\treturn 0;\n}\nint main() {\n\twhile (cin >> n) {\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) cin >> a[i][j];\n\t\t}\n\t\tfor (int i = 1; i < 10; i++) cin >> p[i];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> c; s[j].first = s1.find(c);\n\t\t\t\tcin >> c; s[j].second = s2.find(c);\n\t\t\t\tcnt += a[s[j].second][s[j].first];\n\t\t\t}\n\t\t\tsort(s, s + 5);\n\t\t\tcout << cnt * p[judge()] << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\n\nstruct card{\n  int c;\n  int n;\n};\n\nint pokerHand(int rate[], const vector<card> &v){\n  int num[15] = {0,};\n  int s_num[4] = {0,};\n  bool bst = false;\n  bool flash = false;\n  bool four=false;\n  bool three=false;\n  bool fullhouse=false;\n  bool two_pair=false;\n  bool one_pair=false;\n  int st = -1;\n  int pair = 0;\n\n  for(int i = 0; i < v.size(); ++i){\n    s_num[ v[i].c ]++;\n    if( s_num[ v[i].c ] >= 5 ){\n      flash = true;\n    }\n    num[v[i].n]++;\n    if( v[i].n == 1 ) num[14]++;\n    if( num[v[i].n] >= 4 ){\n      four=true;\n      three=false;\n    }\n    if( num[v[i].n] == 3 ){\n      three = true;\n      pair--;\n    }\n    if( num[v[i].n] == 2 ){\n      pair++;\n    }\n  }\n  \n  if( pair >= 1 && three ){\n    fullhouse = true;\n  }else if( pair == 2 ){\n    two_pair =true;\n  }else if(pair == 1 ){\n    one_pair=true;\n  }\n  \n  int cont=0;\n  int start = -1;\n  for(int i = 1; i < 15; ++i){\n    if( num[i] > 0 ){\n      ++cont;\n    }else{\n      cont = 0;\n      start = -1;\n      continue;\n    }\n    if( cont == 1 ){\n      start = i;\n    }\n    if( cont == 5 ){\n      st = start;\n      bst = true;\n    }\n  }\n\n  if( st == 10 && flash && bst ){\n    return rate[8];\n  }else if( flash && bst ){\n    return rate[7];\n  }else if( four ){\n    return rate[6];\n  }else if( fullhouse ){\n    return rate[5];\n  }else if( flash ){\n    return rate[4];\n  }else if( bst ){\n    return rate[3];\n  }else if(three){\n    return rate[2];\n  }else if(two_pair){\n    return rate[1];\n  }else if(one_pair){\n    return rate[0];\n  }else return 0;\n}\n\nint main()\n{\n  for(int tc=1;;++tc){\n\n    int N;\n    cin >> N;\n    if( cin.eof())break;\n    if( tc>1 ) cout<<endl;\n    int point[4][13];\n    int rate[9];\n    for(int i = 0; i < 4; ++i){\n      for(int j = 0; j < 13; ++j){\n\tcin >> point[i][j];\n      }\n    }\n    for(int i = 0; i < 9; ++i){\n      cin >> rate[i];\n    }\n    for(int i = 0; i < N; ++i){\n      vector<card> hand;\n      int sum = 0;\n      for(int j = 0; j < 5; ++j){\n\tstring s;\n\tcard c;\n\tcin >> s;\n\tswitch(s[1]){\n\tcase 'S':c.c=0;break;\n\tcase 'C':c.c=1;break;\n\tcase 'H':c.c=2;break;\n\tcase 'D':c.c=3;break;\n\t}\n\tswitch(s[0]){\n\tcase 'A':c.n = 1;break;\n\tcase 'T':c.n = 10;break;\n\tcase 'J':c.n = 11;break;\n\tcase 'Q':c.n = 12;break;\n\tcase 'K':c.n = 13;break;\n\tdefault:\n\t  c.n=s[0]-'0';\n\t}\n\tsum += point[c.c][c.n-1];\n\thand.push_back(c);\n      }\n      \n      cout << sum * pokerHand( rate, hand ) << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <functional>\nusing namespace std;\n\nint main()\n{\n  int N;\n  bool first = true;\n  while (cin >> N) {\n    if (!first)\n      cout << endl;\n\n    int point[4][13], rate[10];\n    for (int i = 0; i < 4; ++i) {\n      for (int j = 0; j < 13; ++j)\n\tcin >> point[i][j];\n    }\n    rate[0] = 0;\n    for (int i = 0; i < 9; ++i)\n      cin >> rate[i+1];\n\n    vector<pair<int, int> > card(5);\n    for (int loop = 0; loop < N; ++loop) {\n      set<char> suit;\n      map<int, int> cnt;\n\n      for (int i = 0; i < 5; ++i) {\n\tstring s;\n\tcin >> s;\n\tif (s[0] == 'A')\n\t  card[i].first = 1;\n\telse if (s[0] == 'T')\n\t  card[i].first = 10;\n\telse if (s[0] == 'J')\n\t  card[i].first = 11;\n\telse if (s[0] == 'Q')\n\t  card[i].first = 12;\n\telse if (s[0] == 'K')\n\t  card[i].first = 13;\n\telse\n\t  card[i].first = s[0] - '0';\n \n\tif (s[1] == 'S')\n\t  card[i].second = 0;\n\telse if (s[1] == 'C')\n\t  card[i].second = 1;\n\telse if (s[1] == 'H')\n\t  card[i].second = 2;\n\telse\n\t  card[i].second = 3;\n\n\tsuit.insert(s[1]);\n\t++cnt[card[i].first];\n      }\n      sort(card.begin(), card.end());\n\n      vector<int> same;\n      for (map<int, int>::iterator it = cnt.begin(); it != cnt.end(); ++it)\n\tsame.push_back(it->second);\n      sort(same.begin(), same.end(), greater<int>());\n\n      bool straight = true;\n      for (int i = 1; i < 5; ++i) {\n\tif (card[i-1].first+1 != card[i].first)\n\t  straight = false;\n      }\n      bool straight_A = false;\n      if (card[0].first == 1 && card[1].first == 10 && card[2].first == 11 && card[3].first == 12 && card[4].first == 13)\n\tstraight_A = true;\n\n      int rank = 0;\n      if (suit.size() == 1 && straight_A)\n\trank = 9;\n      else if (suit.size() == 1 && straight)\n\trank = 8;\n      else if (same[0] == 4)\n\trank = 7;\n      else if (same[0] == 3 && same[1] == 2)\n\trank = 6;\n      else if (suit.size() == 1)\n\trank = 5;\n      else if (straight || straight_A)\n\trank = 4;\n      else if (same[0] == 3)\n\trank = 3;\n      else if (same[0] == 2 && same[1] == 2)\n\trank = 2;\n      else if (same[0] == 2)\n\trank = 1;\n\n      int ans = 0;\n      for (int i = 0; i < 5; ++i)\n\tans += point[card[i].second][card[i].first-1];\n      ans *= rate[rank];\n      cout << ans << endl;\n    }\n    first = false;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n#include<numeric>\n#include<cassert>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define rep(i,s,n) for(int i=(s); i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n#define IN(x,s,g) ((x) >= (s) && (x) < (g))\n#define ISIN(x,y,w,h) (IN((x),0,(w)) && IN((y),0,(h)))\n#define print(x) printf(\"%d\\n\",x)\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\nconst int _dx[] = {0,1,0,-1};\nconst int _dy[] = {-1,0,1,0};\n\nint getInt(){\n  int ret = 0,c;\n  c = getchar();\n  while(!isdigit(c)) c = getchar();\n  while(isdigit(c)){\n    ret *= 10;\n    ret += c - '0';\n    c = getchar();\n  }\n  return ret;\n}\n\nint x[100][100];\nint y[100][100];\nint loop[100][100];\n\nint check(int yy,int xx, int a){\n  if(loop[yy][xx] == a) return 1;\n  if(loop[yy][xx] == 0){\n    loop[yy][xx] = a;\n    return check(y[yy][xx],x[yy][xx],a);\n  }\n  return 0;\n}\n\n#define SPADE  0\n#define CLOVER 1\n#define HEART  2\n#define DAIA   3\n\n#define ONE_PAIR   1\n#define TWO_PAIR   2\n#define THREE_CARD 3\n#define STRAIGHT   4\n#define FLASH      5\n#define FULL_HOUSE 6\n#define FOUR_CARD  7\n#define ST_FLASH   8\n#define RYAL_ST_FL 9\n\nint point[4][13];\nint ypoint[10];\n\nint main(){\n  int n;\n  int e[128];\n  int m[128];\n  int cc = 0;\n\n  REP(i,10) m['0'+i] = i - 1;\n  m['A'] =  0;\n  m['T'] =  9;\n  m['J'] = 10;\n  m['Q'] = 11;\n  m['K'] = 12;\n\n  e['H'] = HEART;\n  e['C'] = CLOVER;\n  e['D'] = DAIA;\n  e['S'] = SPADE;\n\n\n  while(cin>>n){\n    long long ans = 0;\n\n    if(cc++ != 0) cout<<endl;\n    REP(i,4) REP(j,13) cin>>point[i][j];\n    REP(i,9) cin>>ypoint[i+1];\n\n    while(n --> 0){\n      pair<int,int> card[5];\n      int base = 0;\n      int yaku = 0;\n      REP(i,5){\n        char buff[3];\n        cin>>buff;\n        //printf(\"buff = %s\\n\",buff);\n        card[i].f = m[buff[0]];\n        card[i].s = e[buff[1]];\n\n        base += point[card[i].s][card[i].f];\n\n        if(card[i].f == 0) card[i].f = 13;\n      }\n\n      sort(card, card+5);\n\n      int num[14] = {0};\n      int nume[4] = {0};\n      REP(i,5){\n        num[card[i].f]++;\n        nume[card[i].s]++;\n      }\n\n      int pcnt[6] = {0};\n      REP(i,14) pcnt[num[i]]++;\n\n      if(pcnt[2] == 1) yaku = ONE_PAIR;\n      if(pcnt[2] == 2) yaku = TWO_PAIR;\n      if(pcnt[3] == 1) yaku = THREE_CARD;\n\n      bool straight = true;\n      bool flash = false;\n      int tcnt = 0;\n      REP(i,4) if(card[i].f + 1 != card[i+1].f) straight = false;\n      if(!straight){\n        if(card[4].f == 13){\n          straight = true;\n          card[4].f = 0;\n          sort(card, card+5);\n          REP(i,4) if(card[i].f + 1 != card[i+1].f) straight = false;\n          card[4].f = 13;\n          sort(card, card+5);\n        }\n      }\n      if(straight) yaku = STRAIGHT;\n\n      REP(i,4) if(nume[i] == 5) flash = true;\n      if(flash) yaku =FLASH;\n\n      if(pcnt[2] == 1 && pcnt[3] == 1)\n        yaku = FULL_HOUSE;\n\n      if(pcnt[4] == 1)\n        yaku = FOUR_CARD;\n\n      if(flash && straight)\n        yaku = ST_FLASH;\n\n      if(flash && straight && card[0].f == 9)\n        yaku = RYAL_ST_FL;\n\n      //printf(\"base = %d, yaku = %d\\n\",base,yaku);\n      ans = (ll)ypoint[yaku] * base;\n      cout << ans << endl;\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <queue>\n\n#define i64 long long\n#define ui64 unsigned long long\n#define REP(i,n) for(int (i)=0;(i)<(n);i++)\n#define REP2(i,k,n) for(int (i)=(k);(i)<(n);i++)\n#define ATCODER 1000000007\nusing namespace std;\n \n////////////////////////\n\nint c_points[5][14];\nint h_points[10];\n\nstruct card{\n  int num;\n  int mark;\n  card(char n_,char m_):num(),mark(){\n    switch(m_){\n      case 'S': mark = 0; break;\n      case 'H': mark = 2; break;\n      case 'D': mark = 3; break;\n      case 'C': mark = 1; break;\n    }\n    if(('0'<=n_)&&(n_<='9'))num=n_-'0';\n    else{\n      switch(n_){\n        case 'T': num = 10; break;\n        case 'J': num = 11; break;\n        case 'Q': num = 12; break;\n        case 'K': num = 13; break;\n        case 'A': num = 1; break;\n      }\n    }\n  }\n  bool operator< (const card& a){\n    return num==a.num?mark<a.mark:num<a.num;\n  }\n};\n\nbool straight(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if((hand[i+1].num-hand[i].num==1)||\\\n        ((!i)&&(hand[4].num==13&&hand[i].num==1)));\n    else return false;\n  }\n  return true;\n}\n\nbool flush(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].mark!=hand[i+1].mark)return false;\n  }\n  return true;\n}\n\nbool no_pair(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool one_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=4;i++){\n    if(i==4)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  for(int i=p+1;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool two_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=2;i++){\n    if(i==2)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  if(p==0){\n    return hand[2].num==hand[3].num?hand[3].num!=hand[4].num:hand[3].num==hand[4].num;\n  }\n  if(p==1){\n    return hand[3].num==hand[4].num;\n  }\n}\n\nbool three_card(vector<card>& hand){\n  int p;\n  for(int i=0;i<=3;i++){\n    if(i==3)return false;\n    if(hand[i].num==hand[i+1].num&&hand[i].num==hand[i+2].num){\n      p=i;break;\n    }\n  }\n  return p==2?true:hand[p].num==hand[p+3].num;\n}\n\nbool fullhouse(vector<card>& hand){\n  int p;\n  if(hand[1].num!=hand[2].num){\n    if(hand[0].num!=hand[1].num)return false;\n    for(int i=2;i<4;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }else{\n    if(hand[3].num!=hand[4].num)return false;\n    for(int i=0;i<2;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }\n}\n\nbool straight_flush(vector<card>& hand){\n  return straight(hand)&&flush(hand);\n}\n\nbool four_card(vector<card>& hand){\n  return hand[0].num==hand[3].num||hand[1].num==hand[4].num;\n}\n\nbool royal_straight_flush(vector<card>& hand){\n  if(straight_flush(hand)){\n    if(hand[0].num==1)return true;\n  }\n  return false;\n}\n\n\nint solve(vector<card>& hand){\n  sort(hand.begin(),hand.end());\n  // for(int i=0;i<5;i++){\n  //   cout << hand[i].num << \" \" << hand[i].mark << endl;\n  // }\n  int res=0;\n  \n  for(int i=0;i<5;i++){\n    int m_=hand[i].mark;\n    int n_=hand[i].num;\n    res+=c_points[m_][n_-1];\n  }\n  // cout << res << endl;\n  if(royal_straight_flush(hand)){\n    res*=h_points[8];\n    // cout << 0 << endl;\n    return res;\n  }\n  if(straight_flush(hand)){\n    res*=h_points[7];\n    // cout << 8 << endl;\n    return res;\n  }\n  if(four_card(hand)){\n    res*=h_points[6];\n    // cout << 7 << endl;\n    return res;\n  }\n  if(straight(hand)){\n    res*=h_points[3];\n    // cout << 4 << endl;\n    return res;\n  }\n  if(flush(hand)){\n    res*=h_points[4];\n    // cout << 5 << endl;\n    return res;\n  }\n  if(fullhouse(hand)){\n    res*=h_points[5];\n    // cout << 6 << endl;\n    return res;\n  }\n  if(one_pair(hand)){\n    res*=h_points[0];\n    // cout << 1 << endl;\n    return res;\n  }\n  if(two_pair(hand)){\n    res*=h_points[1];\n    // cout << 2 << endl;\n    return res;\n  }\n  if(three_card(hand)){\n    res*=h_points[2];\n    // cout << 3 << endl;\n    return res;\n  }\n  if(no_pair(hand)){\n    return 0;\n  }\n  \n  return -1;\n}\n\nint main(){\n  int n;\n  while(true){\n    fill(&c_points[0][0],&c_points[4][13],0);\n    fill(&h_points[0],&h_points[9],0);\n    if(scanf(\"%d\",&n)==EOF)break;\n    for(int i=0;i<4;i++){\n      for(int k=0;k<13;k++){\n        cin >> c_points[i][k];\n      }\n    }\n    // for(int i=0;i<4;i++){\n    //   for(int k=0;k<13;k++){\n    //     cout<< c_points[i][k] << \" \";\n    //   }cout << endl;\n    // }\n    for(int i=0;i<9;i++){\n      cin >> h_points[i];\n    }\n    // for(int i=0;i<9;i++){\n    //   cout << h_points[i] << \" \";\n    // }cout << endl;\n    char a[3];\n    vector<card> hands;\n    for(int i=0;i<n;i++){\n      for(int k=0;k<5;k++){\n        cin >> a;\n        hands.push_back(card(a[0],a[1]));\n      }\n      cout << solve(hands) << endl;\n      hands.clear();\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <utility>\n#include <map>\n#include <algorithm>\n#define P pair<int,char> // 数字・種類\nusing namespace std;\n\nmap<char,int> mp; // 文字 -> 配列のインデックス\nP p[5];\n\nbool checkF(){\n  for( int i=1;i<5;i++ )\n    if( p[i-1].second!=p[i].second )\n      return false;\n  return true;\n}\nbool checkS(){\n  if( p[0].first==1 ){\n    if( p[4].first==13 || p[4].first==5){\n      for( int i=2;i<5;i++ )\n\tif( p[i-1].first+1 != p[i].first ) return false;\n    }else      return false;\n  }else{\n    for( int i=1;i<5;i++ )\n      if( p[i-1].first+1 != p[i].first ) return false;\n  }\n  return true;\n}\n\nint n2,n3;\nvoid countP(){\n  n2=0; n3=0;\n  for( int i=0;i<3;i++ ){\n    if( p[i].first==p[i+1].first &&\n\tp[i].first==p[i+2].first ){\n      n3=1;\n      if( i==0 && p[3].first==p[4].first ) n2=1;\n      if( i==2 && p[0].first==p[1].first ) n2=1;\n      return ;\n    }\n  }\n\n  for( int i=1;i<5;i++ ){\n    if( p[i-1].first==p[i].first ){\n\tn2++; i++;\n    }\n  }\n}\n\nint yaku(){ // ペアがないときは-1\n  sort( p,p+5 );\n\n  /*\n  for( int i=0;i<5;i++ )\n    cout << \" \" << p[i].first << p[i].second;\n  cout << endl;\n  */\n  for( int i=0;i<2;i++ ){\n    int j;\n    for( j=1;j<=4;j++ )\n      if( p[i].first != p[i+j].first )break;\n    if( j==4 ) return 6; // フォーカード\n  }\n\n  countP();\n  if( n2==1 && n3==1 ) return 5; //フルハウス\n  if( n3==1 ) return 2; // スリーカード\n  if( n2==2 ) return 1; // ツーペア\n  if( n2==1 ) return 0; // ワンペア\n\n  bool isF = checkF();  // フラッシュ\n  bool isS = checkS();  // ストレート\n  if( isF ){\n    if( isS ){\n      if( p[4].first==13 ) return 8; // ロイヤルストレートフラッシュ\n      return 7; // ストレートフラッシュ\n    }\n    return 4; // フラッシュ\n  }\n  if( isS )    return 3; // ストレート\n\n  return -1; // ブタ\n}\n\nint main(){\n  int n;\n  int fc[4][13], yc[9];\n\n\n  for( int i=2;i<=9;i++ )   mp[ '0'+i ] = i;\n  mp[ 'A' ] = 1;  mp[ 'T' ] = 10;\n  mp[ 'J' ] = 11; mp[ 'Q' ] = 12;\n  mp[ 'K' ] = 13;\n  mp[ 'S' ] = 0; mp[ 'C' ] = 1;\n  mp[ 'H' ] = 2; mp[ 'D' ] = 3;\n\n  while( cin>>n ){\n    for( int i=0;i<4;i++ )\n      for( int j=0;j<13;j++ )\n\tcin >> fc[i][j];\n    for( int i=0;i<9;i++ )\n      cin >> yc[i];\n\n    while( n-- ){\n      char num, kind;\n      int fCost=0;\n      for( int i=0;i<5;i++ ){\n\tcin >> num >> kind;\n\tp[i] = P( mp[num],kind );\n\tfCost += fc[ mp[kind] ][ mp[num]-1 ];\n      }\n      int yInd = yaku(), yCost=0;\n      if( yInd>=0 ) yCost = yc[yInd];\n      int ans = fCost * yCost;\n      cout << ans << endl;\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint N, a[4][14], b[9];\nchar T[15] = \"-A23456789TJQK\";\nchar U[5] = \"SCHD\";\nstring S; pair<int, int>d[5];\nint poker() {\n\tint e[14], f[9];\n\tint g[14], h[9];\n\tfor (int i = 0; i < 14; i++) { e[i] = 0; g[i] = 0; }\n\tfor (int i = 0; i < 9; i++) { f[i] = 0; h[i] = 0; }\n\tfor (int i = 0; i < 5; i++) {\n\t\te[d[i].first]++;\n\t\tf[d[i].second]++;\n\t}\n\tfor (int i = 0; i < 14; i++) { g[e[i]]++; }\n\tfor (int i = 0; i < 4; i++) { h[f[i]]++; }\n\tif (h[5] == 1) {\n\t\tif (d[0].first != 1) { goto E; }\n\t\tif (d[1].first != 10) { goto E; }\n\t\tif (d[2].first != 11) { goto E; }\n\t\tif (d[3].first != 12) { goto E; }\n\t\tif (d[4].first != 13) { goto E; }\n\t\treturn 8; E:;\n\t\tfor (int i = 1; i < 5; i++) {\n\t\t\tif (d[i].first != d[i - 1].first + 1) {\n\t\t\t\tgoto F;\n\t\t\t}\n\t\t}\n\t\treturn 7; F:;\n\t\treturn 4;\n\t}\n\tif (g[4] == 1) { return 6; }\n\tif (g[2] == 1 && g[3] == 1) { return 5; }\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (d[i].first != d[i - 1].first + 1) {\n\t\t\tgoto G;\n\t\t}\n\t}\n\treturn 3; G:;\n\tif (d[0].first != 1) { goto H; }\n\tif (d[1].first != 10) { goto H; }\n\tif (d[2].first != 11) { goto H; }\n\tif (d[3].first != 12) { goto H; }\n\tif (d[4].first != 13) { goto H; }\n\treturn 3; H:;\n\tif (g[3] == 1) { return 2; }\n\tif (g[2] == 2) { return 1; }\n\tif (g[2] == 1) { return 0; }\n\treturn 9;\n}\nint main() {\n\tint cnt = 0;\n\twhile (cin >> N) {\n\t\tif (cnt) { cout << endl; }\n\t\tcnt++;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 1; j <= 13; j++) {\n\t\t\t\tcin >> a[i][j];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 9; i++) { cin >> b[i]; }\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> S;\n\t\t\t\tfor (int k = 0; k < 14; k++) {\n\t\t\t\t\tif (T[k] == S[0]) { d[j].first = k; }\n\t\t\t\t}\n\t\t\t\tfor (int k = 0; k < 4; k++) {\n\t\t\t\t\tif (U[k] == S[1]) { d[j].second = k; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(d, d + 5);\n\t\t\tint A = b[poker()];\n\t\t\tint B = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tB += a[d[j].second][d[j].first];\n\t\t\t}\n\t\t\tcout << A*B << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <functional>\n#include <string>\n#include <map>\nusing namespace std;\n\nclass Card{\npublic:\n  int n;\n  int m;\n  bool operator <(const Card &c) const {\n    if(n != c.n) return n < c.n;\n    if(m != c.m) return m < c.m;\n    return false;\n  }\n};\n\nbool isOneM(Card card[5]) {\n  int m = card[0].m;\n  for(int i = 1; i < 5; i++) {\n    if(card[i].m != m) return false;\n  }\n  return true;\n}\n\nint isSt(Card card[5]) {\n  if(card[0].n == 1 && card[1].n == 10 && card[2].n == 11\n     && card[3].n == 12 && card[4].n == 13) return 2;\n\n  for(int i = 1; i < 5; i++) {\n    if(card[i].n - card[i-1].n != 1) return 0;\n  }\n  return 1;\n}\n\nint main() {\n  static map<char, int> mark;\n  mark['S'] = 0;\n  mark['C'] = 1;\n  mark['H'] = 2;\n  mark['D'] = 3;\n  static map<char, int> number;\n  number['A'] = 1;\n  number['T'] = 10;\n  number['J'] = 11;\n  number['Q'] = 12;\n  number['K'] = 13;\n\n  int N;\n  int cp[4][13];\n  int rate[10];\n  Card card[5];\n  int cnum[5];\n  int numSize;\n\n  bool flag = false;\n\n  while(1) {\n    cin >> N;\n    if(cin.eof()) break;\n    if(!flag) flag = true;\n    else      cout << endl;\n\n    for(int i = 0; i < 4; i++) {\n      for(int j = 0; j < 13; j++) {\n\tcin >> cp[i][j];\n      }\n    }\n    rate[0] = 0;\n    for(int i = 1; i <= 9; i++) {\n      cin >> rate[i];\n    }\n    for(int t = 0; t < N; t++) {\n      for(int i = 0; i < 5; i++) {\n\tstring str;\n\tcin >> str;\n\tif(str[0] >= '0' && str[0] <= '9') card[i].n = str[0] - '0';\n\telse                               card[i].n = number[str[0]];\n\tcard[i].m = mark[str[1]];\n      }\n\n      sort(card, card+5);\n\n      cnum[0] = 1;\n      numSize = 1;\n      int bfr = card[0].n;\n      for(int i = 1; i < 5; i++) {\n\tif(card[i].n != bfr) {\n\t  numSize++;\n\t  cnum[numSize-1] = 0;\n\t}\n\tcnum[numSize-1]++;\n\tbfr = card[i].n;\n      }\n      sort(cnum, cnum+5, greater<int>());\n\n      int yaku;\n      bool flash = isOneM(card);\n      int suto = isSt(card);\n      if(flash && suto == 2) {\n\tyaku = 9;\n      } else if(flash && suto == 1) {\n\tyaku = 8;\n      } else if(cnum[0] == 4) {\n\tyaku = 7;\n      } else if(numSize == 2 && cnum[0] == 3 && cnum[1] == 2) {\n\tyaku = 6;\n      } else if(flash) {\n\tyaku = 5;\n      } else if(suto != 0) {\n\tyaku = 4;\n      } else if(cnum[0] == 3) {\n\tyaku = 3;\n      } else if(cnum[0] == 2 && cnum[1] == 2) {\n\tyaku = 2;\n      } else if(cnum[0] == 2) {\n\tyaku = 1;\n      } else {\n\tyaku = 0;\n      }\n\n      int point = 0;\n      for(int i = 0; i < 5; i++) {\n\tpoint += cp[card[i].m][card[i].n-1];\n      }\n      point *= rate[yaku];\n\n      cout << point << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\n/* typedef */\n\ntypedef pair<int,int> pii;\n\n/* global variables */\n\nint bscs[4][13], mps[9];\nstring crds[5];\npii cs[5];\n\n/* subroutines */\n\npii parse(string crd) {\n  int d, s;\n\n  switch (crd[0]) {\n  case 'A': d = 0; break;\n  case 'T': d = 9; break;\n  case 'J': d = 10; break;\n  case 'Q': d = 11; break;\n  case 'K': d = 12; break;\n  default: d = crd[0] - '1';\n  }\n\n  switch (crd[1]) {\n  case 'S': s = 0; break;\n  case 'C': s = 1; break;\n  case 'H': s = 2; break;\n  case 'D': s = 3; break;\n  }\n\n  return pii(d, s);\n}\n\nbool flush() {\n  int s = cs[0].second;\n  for (int i = 1; i < 5; i++)\n    if (cs[i].second != s) return false;\n  return true;\n}\n\nbool straight() {\n  if (cs[0].first == 0 && cs[1].first == 9) {\n    for (int i = 2; i < 5; i++)\n      if (cs[i].first != 8 + i) return false;\n    return true;\n  }\n\n  int d = cs[0].first;\n  for (int i = 1; i < 5; i++)\n    if (cs[i].first != d + i) return false;\n  return true;\n}\n\nvoid pairs(int *pns) {\n  int cns[13];\n  memset(cns, 0, sizeof(cns));\n  memset(pns, 0, sizeof(int) * 5);\n\n  for (int i = 0; i < 5; i++) cns[cs[i].first]++;\n  for (int i = 0; i < 13; i++) pns[cns[i]]++;\n}\n\nint hand() {\n  bool sf = straight();\n  bool ff = flush();\n\n  if (sf && ff) {\n    // Royal Straight Flush\n    if (cs[0].first == 0 && cs[1].first == 9) return 8;\n    // Straight Flush\n    return 7;\n  }\n\n  int pns[5];\n  pairs(pns);\n\n  // Four Cards\n  if (pns[4] == 1) return 6;\n  // Full House\n  if (pns[3] == 1 && pns[2] == 1) return 5;\n\n  // Flush\n  if (ff) return 4;\n\n  // Straight\n  if (sf) return 3;\n\n  // Three Card\n  if (pns[3] == 1) return 2;\n\n  // Two Pair\n  if (pns[2] == 2) return 1;\n\n  // One Pair\n  if (pns[2] == 1) return 0;\n\n  // Buta\n  return -1;\n}\n\n/* main */\n\nint main() {\n  for (bool first = true;; first = false) {\n    int n;\n    cin >> n;\n    if (cin.eof()) break;\n    \n    for (int i = 0; i < 4; i++)\n      for (int j = 0; j < 13; j++) cin >> bscs[i][j];\n\n    for (int i = 0; i < 9; i++) cin >> mps[i];\n\n    if (! first) cout << endl;\n    \n    while (n--) {\n      for (int i = 0; i < 5; i++) {\n\tcin >> crds[i];\n\tcs[i] = parse(crds[i]);\n      }\n      sort(cs, cs + 5);\n\n      int h = hand();\n      int sc = 0;\n\n      if (h >= 0) {\n\tint sum = 0;\n\tfor (int i = 0; i < 5; i++)\n\t  sum += bscs[cs[i].second][cs[i].first];\n\tsc = sum * mps[h];\n      }\n\n      cout << sc << endl;\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main()\n{\n  int n;\n  bool bf=false;\n  for(;cin>>n;)\n    {\n      if(bf)\n\tcout<<endl;\n      bf=true;\n      int point[4][13];\n      for(int i=0;i<4;i++)\n\tfor(int j=0;j<13;j++)\n\t  cin>>point[i][j];\n      /*\n      for(int i=0;i<4;i++,cout<<endl)\n\tfor(int j=0;j<13;j++)\n\t  cout<<point[i][j];\n      */\n      int power[9];\n      for(int j=0;j<9;j++)\n\tcin>>power[j];      \n      \n      //s=0,c=1,h=2,d=3\n      for(;n--;)\n\t{\n\t  int card[5];\n\t  int ans=0;\n\t  bool mark=true;\n\t  //  cout<<mark<<endl;\n\t  char buf;\n\t  for(int i=0;i<5;i++)\n\t    {\n\t      char a,b;\n\t      int aa,bb;\n\t      cin>>a>>b;\n\n\t      if(i!=0&&buf!=b)\n\t\tmark=false;\n\t      buf=b;\n\n\t      aa=a-'0';\n\t      if(a=='A')\n\t\taa=1;\n\t      if(a=='T')\n\t\taa=10;\n\t      if(a=='J')\n\t\taa=11;\n\t      if(a=='Q')\n\t\taa=12;\n\t      if(a=='K')\n\t\taa=13;\t      \n\t      //s=0,c=1,h=2,d=3\n\t      if(b=='S')\n\t\tbb=0;\n\t      if(b=='C')\n\t\tbb=1;\n\t      if(b=='H')\n\t\tbb=2;\n\t      if(b=='D')\n\t\tbb=3;\t      \n\t      card[i]=aa;\n\t      //   cout<<a<<b<<endl;\n\t      // cout<<bb<<\" \"<<aa<<endl;\n\t      //cout<<point[bb][aa-1]<<endl;;\n\t      ans+=point[bb][aa-1];\n\t      \n\t    }\n\t  sort(card,card+5);\n\t  //  cout<<mark<<endl;\n\t  if(mark&&\n\t     card[0]==1&&card[1]==10&&card[2]==11 &&card[3]==12 &&card[4]==13)\n\t    //royal straight\n\t    ans*=power[8];\n\t  else if(mark &&\n\t\t  card[0]==card[1]-1&&card[1]==card[2]-1&&\n\t\t  card[2]==card[3]-1&&card[3]==card[4]-1)\n\t    ans*=power[7];\n\t  else if((card[0]==card[1]&&card[1]==card[2]&&\n\t\t   card[2]==card[3])\n\t\t  ||(card[1]==card[2]&&card[2]==card[3]&&\n\t\t     card[3]==card[4]))\n\t    ans*=power[6];\n\t  else if((card[0]==card[1]&&card[1]==card[2]&&\n\t\t   card[3]==card[4])\n\t\t  ||(card[0]==card[1]\n\t\t     &&card[2]==card[3]&&card[3]==card[4]))\n\t    ans*=power[5];\n\t  else if(mark)\n\t    ans*=power[4];\n\t  else if((card[0]==1&&card[1]==10&&card[2]==11 &&card[3]==12 &&card[4]==13)||\n\t\t  (card[0]==card[1]-1&&card[1]==card[2]-1&&\n\t\t   card[2]==card[3]-1&&card[3]==card[4]-1))\t    \n\t    //straight\n\t    ans*=power[3];\n\t  else if((card[0]==card[1]&&card[1]==card[2])||\n\t\t  (card[1]==card[2]&&card[2]==card[3])||\n\t\t  (card[2]==card[3]&&card[3]==card[4])\n\t\t  )\n\t    //スリーカード\n\t    ans*=power[2];\n\t  else\n\t    {\n\t      int cnt=0;\n\t      for(int i=0;i<4;i++)\n\t\t{\n\t\t  //\t\t  cout<<card[i]<<\" \"<<card[i+1]<<endl;\n\t\t  if(card[i]==card[i+1])\n\t\t    cnt++;\n\t\t  \n\t\t}\n\t\t  if(cnt>1)\n\t\tans*=power[1];\n\t      else if(cnt>0)\n\t\tans*=power[0];\n\t      else\n\t\tans=0;\n\n\t\t  //  cout<<cnt<<endl;\n\t    }\n\t  \n\t  cout<<ans<<endl;\t  \n\t}\n\n\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n \nusing namespace std;\n \nint arr[4][13], rank[9], card[5], cnt[13];\nstring str[5];\n \nint getMark(char ch){\n    if(ch == 'S'){\n\treturn 0;\n    }else if(ch == 'C'){\n\treturn 1;\n    }else if(ch == 'H'){\n\treturn 2;\n    }\n    return 3;\n}\n \nint getNum(char ch){\n    if('2' <= ch && ch <= '9'){\n\treturn (ch-'0')-1;\n    }else if(ch == 'A'){\n\treturn 0;\n    }else if(ch == 'T'){\n\treturn 9;\n    }else if(ch == 'J'){\n\treturn 10;\n    }else if(ch == 'Q'){\n\treturn 11;\n    }\n    return 12;\n}\n \nint judge(){\n    bool same_mark = true;\n    char ch = str[0][1];\n    for(int i = 1 ; i < 5 ; i++){\n\tif(ch != str[i][1]){\n\t    same_mark = false;\n\t    break;\n\t}\n    }\n \n    if(same_mark){\n\tif(card[0] == 1 && card[1] == 10 && card[2] == 11 &&\n\t   card[3] == 12 && card[4] == 13){\n\t    return rank[8];\n\t}else{\n\t    bool check = true;\n\t    for(int i = 1 ; i < 5 ; i++){\n\t\tif(card[i] - card[i-1] != 1){\n\t\t    check = false;\n\t\t    break;\n\t\t}\n\t    }\n\t    if(check){\n\t\treturn rank[7];\n\t    }else{\n\t\treturn rank[4];\n\t    }\n\t}\n    }\n \n    sort(cnt, cnt+13, greater<int>());\n    if(cnt[0] == 4){\n\treturn rank[6];\n    }else if(cnt[0] == 3){\n\tif(cnt[1] == 2){\n\t    return rank[5];\n\t}else{\n\t    return rank[2];\n\t}\n    }else if(cnt[0] == 2){\n\tif(cnt[1] == 2){\n\t    return rank[1];\n\t}else{\n\t    return rank[0];\n\t} \n    }else{\n\tbool check = true;\n\tfor(int i = 1 ; i < 5 ; i++){\n\t    if(card[i] - card[i-1] != 1){\n\t\tcheck = false;\n\t\tbreak;\n\t    }\n\t}\n\tif(check){\n\t    return rank[3];\n\t}\n\tif(card[0] == 1 && card[1] == 10 && card[2] == 11 &&\n\t   card[3] == 12 && card[4] == 13){\n\t    return rank[3];\n\t}\n    }\n \n    return 0;\n}\n \nint main(){\n    int N;\n    bool space = false;\n \n    while(cin >> N){\n\tif(space){\n\t    cout << endl;\n\t}else{\n\t    space = true;\n\t}\n \n\tfor(int i = 0 ; i < 4 ; i++){\n\t    for(int j = 0 ; j < 13 ; j++){\n\t\tcin >> arr[i][j];\n\t    }\n\t}\n\tfor(int i = 0 ; i < 9 ; i++){\n\t    cin >> rank[i];\n\t}\n \n\twhile(N--){\n\t    int point = 0, m,n;\n\t    memset(cnt, 0, sizeof(cnt));\n\t    for(int i = 0 ; i < 5 ; i++){\n\t\tcin >> str[i];\n\t\tm = getMark(str[i][1]);\n\t\tn = getNum(str[i][0]);\n\t\tpoint += arr[m][n];\n\t\tcard[i] = n+1;\n\t\tcnt[n]++;\n\t    }\n\t    sort(card, card+5);\n\t    cout << point*judge() << endl;\n\t}\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <string>\n\nusing namespace std;\n\nint n;\nint score[200][200];\nint markToNum[200];\nint per[10];\n\n\nbool isOnePair(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]==2)\n            return true;\n    }\n    return false;\n}\nbool isTwoPair(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]>=2)\n            cnt++;\n    }\n    if(cnt>=2)\n        return true;\n    return false;\n}\nbool isThreeCard(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]==3)\n            return true;\n    }\n    return false;\n}\nbool isStraight(vector<string> cards){\n    vector<int> num;\n    for(int i = 0; i < cards.size(); i++)\n        num.push_back(markToNum[cards[i][0]]);\n    sort(num.begin(),num.end());\n    if(num[0]==1){\n        if((num[1]==2&&num[2]==3&&num[3]==4&&num[4]==5)||(num[1]==10&&num[2]==11&&num[3]==12&&num[4]==13))\n            return true;\n        return false;\n    }\n    for(int i = 1; i < cards.size(); i++){\n        if(num[i]!=num[i-1]+1)\n            return false;\n    }\n    return true;\n}\nbool isFlash(vector<string> cards){\n    char suit=cards[0][1];\n    for(int i = 1; i < cards.size(); i++){\n        if(suit!=cards[i][1])\n            return false;\n    }\n    return true;\n}\nbool isFullHouse(vector<string> cards){\n    if(isOnePair(cards)&&isThreeCard(cards))\n        return true;\n    return false;\n}\nbool isFourCard(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]>=4)\n            return true;\n    }\n    return false;\n}\nbool isStraighFlash(vector<string> cards){\n    if(isFlash(cards)&&isStraight(cards))\n        return true;\n    return false;\n}\nbool isRoyalStraightFlash(vector<string> cards){\n    if(isStraighFlash(cards)){\n        bool k=false;\n        bool o=false;\n        for(int i = 0; i < cards.size(); i++){\n            if(cards[i][0]=='K')\n                k=true;\n            else if(cards[i][0]=='A')\n                o=true;\n        }\n        if(k&&o)\n            return true;\n    }\n    return false;\n}\n\n// ツ偲ィツつゥツづァツスツコツアツづーツ計ツ算\nint calcScore(vector<string> cards){\n    int base=0;\n    for(int i = 0; i < cards.size(); i++)\n        base+=score[cards[i][1]][markToNum[cards[i][0]]];\n    int p=0;\n    if(isRoyalStraightFlash(cards))\n        p=per[8];\n    else if(isStraighFlash(cards))\n        p=per[7];\n    else if(isFourCard(cards))\n        p=per[6];\n    else if(isFullHouse(cards))\n        p=per[5];\n    else if(isFlash(cards))\n        p=per[4];\n    else if(isStraight(cards))\n        p=per[3];\n    else if(isThreeCard(cards))\n        p=per[2];\n    else if(isTwoPair(cards))\n        p=per[1];\n    else if(isOnePair(cards))\n        p=per[0];\n    return p*base;\n}\n\nint main(){\n    \n    for(int i = 1; i <= 13; i++){\n        if(i==1)\n            markToNum['A']=1;\n        else if(i<=9)\n            markToNum[i+'0']=i;\n        else if(i==10)\n            markToNum['T']=10;\n        else if(i==11)\n            markToNum['J']=11;\n        else if(i==12)\n            markToNum['Q']=12;\n        else if(i==13)\n            markToNum['K']=13;\n    }\n\n    int n;\n    while(cin>>n){\n        for(int i = 1; i <= 13; i++)cin>>score['S'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['C'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['H'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['D'][i];\n        for(int i = 0; i < 9; i++)cin>>per[i];\n        for(int i = 0; i < n; i++){\n            vector<string> cards;\n            for(int j = 0; j < 5; j++){\n                string s;\n                cin>>s;\n                cards.push_back(s);\n            }\n            cout<<calcScore(cards)<<endl;\n        }\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n\nusing namespace std;\n\nint N;\nint hand[5][2];\n\nint a[4][13];\nint b[9];\n\nbool input() {\n  int i, j;\n\n  if (scanf(\"%d\", &N) == EOF) return false;\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 13; j++) {\n      scanf(\"%d\", &a[i][j]);\n    }\n  }\n  for (i = 0; i < 9; i++) {\n    scanf(\"%d\", &b[i]);\n  }\n\n  return true;\n}\n\nbool input2() {\n  int i;\n  char s[3];\n\n  if (!N) return false;\n  N--;\n\n  for (i = 0; i < 5; i++) {\n    scanf(\"%s\", s);\n    switch (s[0]) {\n    case 'A':\n      hand[i][0] = 1;\n      break;\n    case 'T':\n      hand[i][0] = 10;\n      break;\n    case 'J':\n      hand[i][0] = 11;\n      break;\n    case 'Q':\n      hand[i][0] = 12;\n      break;\n    case 'K':\n      hand[i][0] = 13;\n      break;\n    default:\n      hand[i][0] = s[0] - '0';\n      break;\n    }\n    switch (s[1]) {\n    case 'S':\n      hand[i][1] = 0;\n      break;\n    case 'C':\n      hand[i][1] = 1;\n      break;\n    case 'H':\n      hand[i][1] = 2;\n      break;\n    case 'D':\n      hand[i][1] = 3;\n      break;\n    default:\n      break;\n    }\n  }\n\n  return true;\n}\n\nint getStraight() {\n  int i, cnt, max;\n  bool f[13];\n\n  fill(f, f + 13, false);\n\n  for (i = 0; i < 5; i++) {\n    f[hand[i][0] - 1] = true;\n  }\n\n  cnt = 0;\n  max = 0;\n  for (i = 0; i < 13; i++) {\n    if(f[i]) cnt++;\n    else {\n      if (cnt > max) max = cnt;\n      cnt = 0;\n    }\n  }\n  if (cnt > max) max = cnt;\n  //printf(\"\\ngetS:%d\\n\", max);\n  if (max < 4) return 0;\n  else if (max == 5) return 1;\n  else if (max == 4 && f[0] && f[9] && f[12]) return 2;\n  else return 0;\n\n}\n\nbool isFlush() {\n  int i, x;\n  x = hand[0][1];\n  for (i = 1; i < 5; i++) {\n    if (hand[i][1] != x) break;\n  }\n\n  return i == 5;\n}\n\nint getPair() {\n  int i, cnt, max, max2;\n  int f[13];\n\n  fill(f, f + 13, 0);\n  for (i = 0; i < 5; i++) {\n    f[hand[i][0] - 1]++;\n  }\n\n  if (f[0] > f[1]) {\n    max  = f[0];\n    max2 = f[1];\n  } else {\n    max  = f[1];\n    max2 = f[0];\n  }\n  for (i = 2; i < 13; i++) {\n    if(max < f[i]) {\n      max2 = max;\n      max  = f[i];\n    } else if (max2 < f[i]) {\n      max2 = f[i];\n    }\n  }\n\n  if (max == 4) return 4;\n  else if (max == 3 && max2 == 2) return 5;\n  else if (max == 3) return 3;\n  else if (max == 2 && max2 == 2) return 2;\n  else if (max == 2) return 1;\n  else return 0;\n}\n\nint main(){\n  int i, sum, out;\n  bool f = false;\n\n  while(input()){\n    if (f) printf(\"\\n\");\n    f = true;\n    while(input2()){\n      sum = 0;\n      out = 0;\n      for (i = 0; i < 5; i++) sum += a[hand[i][1]][hand[i][0] - 1];\n      if (getStraight() == 2 && isFlush())\n         out = sum * b[8];\n      else if (getStraight() == 1 && isFlush())\n         out = sum * b[7];\n      else if (getPair() == 4)\n         out = sum * b[6];\n      else if (getPair() == 5)\n         out = sum * b[5];\n      else if (isFlush())\n         out = sum * b[4];\n      else if (getStraight() == 1)\n         out = sum * b[3];\n      else if (getPair() == 3)\n         out = sum * b[2];\n      else if (getPair() == 2)\n         out = sum * b[1];\n      else if (getPair() == 1)\n         out = sum * b[0];\n      else\n         out = 0;\n    printf(\"%d\\n\", out);\n    }\n    \n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nenum Hand {\n  BUTA,\n  ONE_PAIR,\n  TWO_PAIR,\n  THREE_CARD,\n  STRAIGHT,\n  FLUSH,\n  FULL_HOUSE,\n  FOUR_CARD,\n  STRAIGHT_FLUSH,\n  ROYAL_STRAIGHT_FLUSH\n};\n\nint mapto[200];\nint hand[10];\nint point[52];\nint card[5];\nint exist_number[13];\nint exist_suit[4];\n\nHand handCheck() {\n  bool royal = false;\n  bool straight = false;;\n  bool flush = false;\n  bool exist_four = false;\n  bool exist_three = false;\n  int  exist_pair = 0;\n  MEMSET(exist_number, false);\n  MEMSET(exist_suit, false);\n  REP(i, 5) {\n    int number = card[i] % 13;\n    int suit = card[i] / 13;\n    exist_number[number]++;\n    exist_suit[suit]++;\n  }\n  if (exist_number[0] && exist_number[9] && exist_number[10] && exist_number[11] && exist_number[12]) {\n    royal = true;\n    straight = true;\n  }\n  REP(i, 9) {\n    REP(j, 5) {\n      assert(i + j < 13);\n      if (!exist_number[i + j]) { goto next; }\n    }\n    straight = true;\nnext:;\n  }\n  REP(i, 4) {\n    if (exist_suit[i] == 5) { flush = true; }\n  }\n  REP(i, 13) {\n    if (exist_number[i] == 4) { exist_four = true; }\n    else if (exist_number[i] == 3) { exist_three = true; }\n    else if (exist_number[i] == 2) { exist_pair++; }\n  }\n  if (royal && flush) { return ROYAL_STRAIGHT_FLUSH; }\n  if (straight && flush) { return STRAIGHT_FLUSH; }\n  if (exist_four) { return FOUR_CARD; }\n  if (exist_three && exist_pair) { return FULL_HOUSE; }\n  if (flush) { return FLUSH; }\n  if (straight) { return STRAIGHT; }\n  if (exist_three) { return THREE_CARD; }\n  if (exist_pair == 2) { return TWO_PAIR; }\n  if (exist_pair == 1) { return ONE_PAIR; }\n  return BUTA;\n}\n\nint main() {\n  MEMSET(mapto, -1);\n  mapto['A'] = 0;\n  mapto['2'] = 1;\n  mapto['3'] = 2;\n  mapto['4'] = 3;\n  mapto['5'] = 4;\n  mapto['6'] = 5;\n  mapto['7'] = 6;\n  mapto['8'] = 7;\n  mapto['9'] = 8;\n  mapto['T'] = 9;\n  mapto['J'] = 10;\n  mapto['Q'] = 11;\n  mapto['K'] = 12;\n  mapto['S'] = 0;\n  mapto['C'] = 1;\n  mapto['H'] = 2;\n  mapto['D'] = 3;\n  hand[BUTA] = 0;\n  bool first = true;\n  int n;\n  while (scanf(\"%d\", &n) != EOF) {\n    assert(1 <= n && n <= 10000);\n    REP(suit, 4) {\n      REP(i, 13) {\n        scanf(\"%d\", &point[i + suit * 13]);\n        assert(0 <= point[i] && point[i] <= 10000);\n      }\n    }\n    if (!first) { puts(\"\"); }\n    first = false;\n    REP(i, 9) {\n      scanf(\"%d\", &hand[i + 1]);\n      assert(0 <= hand[i + 1] && hand[i + 1] <= 10000);\n      assert(hand[i] <= hand[i + 1]);\n    }\n    REP(iter, n) {\n      int base = 0;\n      REP(i, 5) {\n        char c1, c2;\n        scanf(\" %c %c \", &c1, &c2);\n        int number = mapto[(int)c1];\n        int suit = mapto[(int)c2];\n        assert(0 <= number && number < 13);\n        assert(c1 != 'S' && c1 != 'C' && c1 != 'H' && c1 != 'D');\n        assert(0 <= suit && suit < 4);\n        assert(c2 != 'A' && c2 != '2' && c2 != '3' && c2 != '4');\n        card[i] = number + suit * 13;\n        base += point[card[i]];\n        REP(j, i) {\n          assert(card[i] != card[j]);\n        }\n      }\n      sort(card, card + 5);\n      printf(\"%d\\n\", base * hand[handCheck()]);\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\n\nstruct card{\n  int c;\n  int n;\n};\n\nint pokerHand(int rate[], const vector<card> &v){\n  int num[15] = {0,};\n  int s_num[4] = {0,};\n  bool bst = false;\n  bool flash = false;\n  bool four=false;\n  bool three=false;\n  bool fullhouse=false;\n  bool two_pair=false;\n  bool one_pair=false;\n  int st = -1;\n  int pair = 0;\n\n  for(int i = 0; i < v.size(); ++i){\n    s_num[ v[i].c ]++;\n    if( s_num[ v[i].c ] >= 5 ){\n      flash = true;\n    }\n    num[v[i].n]++;\n    if( v[i].n == 1 ) num[14]++;\n    if( num[v[i].n] >= 4 ){\n      four=true;\n      three=false;\n    }\n    if( num[v[i].n] == 3 ){\n      three = true;\n      pair--;\n    }\n    if( num[v[i].n] == 2 ){\n      pair++;\n    }\n  }\n  \n  if( pair >= 1 && three ){\n    fullhouse = true;\n  }else if( pair == 2 ){\n    two_pair =true;\n  }else if(pair == 1 ){\n    one_pair=true;\n  }\n  \n  int cont=0;\n  int start = -1;\n  for(int i = 1; i < 15; ++i){\n    if( num[i] > 0 ){\n      ++cont;\n    }else{\n      cont = 0;\n      start = -1;\n      continue;\n    }\n    if( cont == 1 ){\n      start = i;\n    }\n    if( cont == 5 ){\n      st = start;\n      bst = true;\n    }\n  }\n\n  if( st == 10 && flash && bst ){\n    return rate[8];\n  }else if( flash && bst ){\n    return rate[7];\n  }else if( four ){\n    return rate[6];\n  }else if( fullhouse ){\n    return rate[5];\n  }else if( flash ){\n    return rate[4];\n  }else if( bst ){\n    return rate[3];\n  }else if(three){\n    return rate[2];\n  }else if(two_pair){\n    return rate[1];\n  }else if(one_pair){\n    return rate[0];\n  }else return 0;\n}\n\nint main()\n{\n  for(int tc=1;;++tc){\n    if( tc>1 ) cout<<endl;\n  int N;\n  cin >> N;\n  if( cin.eof())break;\n  int point[4][13];\n  int rate[9];\n  for(int i = 0; i < 4; ++i){\n    for(int j = 0; j < 13; ++j){\n      cin >> point[i][j];\n    }\n  }\n  for(int i = 0; i < 9; ++i){\n    cin >> rate[i];\n  }\n  for(int i = 0; i < N; ++i){\n    vector<card> hand;\n    int sum = 0;\n    for(int j = 0; j < 5; ++j){\n      string s;\n      card c;\n      cin >> s;\n      switch(s[1]){\n      case 'S':c.c=0;break;\n      case 'C':c.c=1;break;\n      case 'H':c.c=2;break;\n      case 'D':c.c=3;break;\n      }\n      switch(s[0]){\n      case 'A':c.n = 1;break;\n      case 'T':c.n = 10;break;\n      case 'J':c.n = 11;break;\n      case 'Q':c.n = 12;break;\n      case 'K':c.n = 13;break;\n      default:\n\tc.n=s[0]-'0';\n      }\n      sum += point[c.c][c.n-1];\n      hand.push_back(c);\n    }\n    \n    cout << sum * pokerHand( rate, hand ) << endl;\n  }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\n\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\n#define rep(i, n) FOR(i, 0, n)\n#define MP make_pair\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nint base[5][20];\nint rate[10];\n\nint check(int num[5], int suit[5]){\n\tsort(num, num+5);\n\tbool fl = true;\n\trep(i, 4) fl &= suit[i]==suit[4];\n\tbool st = true;\n\trep(i, 4){\n\t\tif(num[i] == 1 && num[i+1] == 10) continue;\n\t\tst &= num[i+1]-num[i]==1;\n\t}\n\n\tint cards[5] = {};\n\tFOR(i, 1, 14){\n\t\tint cnt = 0;\n\t\trep(j, 5) cnt += i==num[j];\n\t\tcards[cnt]++;\n\t}\n\n\tif(fl && st){\n\t\tif(num[0] == 1 && num[4] == 13) return 9;\n\t\treturn 8;\n\t}\n\tif(cards[4]) return 7;\n\tif(cards[3] && cards[2]) return 6;\n\tif(fl) return 5;\n\tif(st) return 4;\n\tif(cards[3]) return 3;\n\tif(cards[2]>1) return 2;\n\tif(cards[2]) return 1;\n\treturn 0;\n}\n\nint main(){\n\tmap<char, int> dec;\n\trep(i, 10){\n\t\tdec['0'+i] = i;\n\t}\n\tdec['T'] = 10;\n\tdec['J'] = 11;\n\tdec['Q'] = 12;\n\tdec['K'] = 13;\n\tdec['A'] = 1;\n\n\tdec['S'] = 0;\n\tdec['C'] = 1;\n\tdec['H'] = 2;\n\tdec['D'] = 3;\n\n\tint casenum = 0;\n\tint T;\n\twhile(cin >> T){\n\t\tif(casenum++) cout << endl;\n\t\trep(i, 4) FOR(j, 1, 14) cin >> base[i][j];\n\t\tFOR(i, 1, 10) cin >> rate[i];\n\t\trep(i, T){\n\t\t\tint num[5], suit[5];\n\t\t\tint basepnt = 0;\n\t\t\trep(j, 5){\n\t\t\t\tchar a, b;\n\t\t\t\tcin >> a >> b;\n\t\t\t\tnum[j] = dec[a];\n\t\t\t\tsuit[j] = dec[b];\n\t\t\t\tbasepnt += base[suit[j]][num[j]];\n\t\t\t}\n\t\t\tcout << basepnt*check(num, suit) << endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin >> kihon[i][j];\n      }\n    }\n    \n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n    \n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n\tchar temp;\n\tcin >> temp >> tehudac[i];\n\tif(temp>'1' && temp<='9'){\n\t  tehudan[i]=temp-'0';\n\t}\n\telse if(temp=='T') tehudan[i]=10;\n\telse if(temp=='J') tehudan[i]=11;\n\telse if(temp=='Q') tehudan[i]=12;\n\telse if(temp=='K') tehudan[i]=13;\n\telse if(temp=='A') tehudan[i]=1;\n\tgetchar();\n      }\n      \n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n\tif(tehudac[i]=='S') iro=0;\n\telse if(tehudac[i]=='C') iro=1;\n\telse if(tehudac[i]=='H') iro=2;\n\telse if(tehudac[i]=='D') iro=3;\n\t\n\tsum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n\n      int yaku;\n      yaku=hantei();\n      \n      int ans;\n      if(yaku==-1){\n\tcout << 0 << endl;\n      }\n      else{\n\tans=bairitu[yaku]*sum;\n\tcout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n  \nint kumi(){\n  int count=0;\n  for(int i=0;i<4;i++){\n    if(tehudan[i]==tehudan[i+1]){\n      count++;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1) return 8;\n  else if(b==1 && c==1) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a==1) return 5;\n  else if(c==1) return 4;\n  else if(b==1 || b==2) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==13) return 2;\n\n  int temp=tehudan[0];\n  if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==temp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n  char mozi;\n  mozi=tehudac[a];\n  tehudac[a]=tehudac[b];\n  tehudac[b]=mozi;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[4][13], p[10], z; char c; pair<int, int> s[5]; string s1 = \"A23456789TJQK\", s2 = \"SCHD\";\nint judge() {\n\tvector<int> v; int w = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].first != s[i - 1].first) v.push_back(w), w = 0;\n\t\tw++;\n\t}\n\tv.push_back(w);\n\tsort(v.begin(), v.end());\n\tif (v.back() == 4) return 7;\n\tif (v.back() == 3 && v.size() == 2) return 6;\n\tint f = 1, g = 1, h = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].second != s[i - 1].second) f = 0;\n\t}\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i - 1].first + 1 != s[i].first) g = 0;\n\t}\n\tfor (int i = 0; i < 5; i++) {\n\t\tif (s[i].first != (i + 12) % 13) h = 0;\n\t}\n\tif (f) {\n\t\tif (h) return 9;\n\t\tif (g) return 8;\n\t\treturn 5;\n\t}\n\tif (g | h) return 4;\n\tif (v.back() == 3) return 3;\n\tif (v.back() == 2 && v[v.size() - 2] == 2) return 2;\n\tif (v.back() == 2) return 1;\n\treturn 0;\n}\nint main() {\n\twhile (cin >> n) {\n\t\tif (z++) cout << endl;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) cin >> a[i][j];\n\t\t}\n\t\tfor (int i = 1; i < 10; i++) cin >> p[i];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> c; s[j].first = s1.find(c);\n\t\t\t\tcin >> c; s[j].second = s2.find(c);\n\t\t\t\tcnt += a[s[j].second][s[j].first];\n\t\t\t}\n\t\t\tsort(s, s + 5);\n\t\t\tcout << cnt * p[judge()] << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <set>\n#include <map>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<29;\n\nenum SUIT { C, D, H, S };\nstruct card {\n  int suit, rank;\n  card(const string& s) {\n    rank = string(\"0A23456789TJQK\").find(s[0]);\n    suit = string(\"SCHD\").find(s[1]);\n  }\n  bool operator<(const card& o) const {\n    return rank != o.rank ? rank < o.rank : suit < o.suit;\n  }\n};\nenum {\n  Highest_Card, One_Pair, Two_Pairs, Three_of_a_Kind,\n  Straight, Flush, Full_House, Four_of_a_Kind, Straight_Flush, Royal_Straight_Flush };\nint poker_hand(const vector<card>& hand) {\n  vector<int> X(27), Y(4);\n  for (int i = 0; i < hand.size(); ++i) {\n    ++X[hand[i].rank]; ++Y[hand[i].suit];\n    ++X[hand[i].rank+13]; // for wrapping\n  }\n  int I = 1, J = 2, K = 0;\n  if (X[I] < X[J]) swap(I, J);\n  for (int i = 3; i < 14; ++i) {\n    if (X[i] >= X[I]) J = I, I = i;\n    else if (X[i] >= X[J]) J = i;\n  }\n  for (int k = 0; k < 4; ++k)\n    if (Y[k] >= Y[K]) K = k;\n  bool straight = false;\n  for (int i = 1; i+4 <= 14; ++i) // wrapping range\n    if (X[i+0] && X[i+1] && X[i+2] && X[i+3] && X[i+4]) straight = true;\n  bool flush = (Y[K] == 5);\n  // REP(i, 13)\n  //   cout << X[i+1] << \" \";\n  // cout << endl;\n  if (straight && flush && X[13] && X[1]) return Royal_Straight_Flush;\n  if (straight && flush) return Straight_Flush;\n  if (X[I] == 4) return Four_of_a_Kind;\n  if (X[I] == 3 && X[J] == 2) return Full_House;\n  if (flush) return Flush;\n  if (straight) return Straight;\n  if (X[I] == 3) return Three_of_a_Kind;\n  if (X[I] == 2 && X[J] == 2) return Two_Pairs;\n  if (X[I] == 2 && X[J] == 1) return One_Pair;\n  return Highest_Card;\n}\n\nint main() {\n  int n;\n  bool f = 0;\n  while(cin>>n) {\n    if (f) cout << endl;\n    f = 1;\n    int ten[4][13];\n    REP(i,4) {\n      REP(j,13)\n        cin >> ten[i][j];\n    }\n    int bai[10];\n    bai[0] = 0;\n    REP(i,9)\n      cin >> bai[i+1];\n    REP(i,n) {\n      vector<card> v;\n      REP(j,5) {\n        string s;\n        cin >> s;\n        v.push_back(card(s));\n      }\n      int score = 0;\n      FOR(it, v) {\n        score += ten[it->suit][it->rank-1];\n        // cout << \"(\"<<it->suit << \" \" << it->rank-1<<\")\";\n        // cout << score << \" \";\n      }\n      //    cout << endl;\n      cout << score * bai[poker_hand(v)] << endl;\n      \n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[4][13], p[10], s[5], t[5], z; char c; string s1 = \"A23456789TJQK\", s2 = \"SCHD\";\nint judge() {\n\tvector<int> v; int w = 1, f = 1, g = 1, h = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i - 1] != s[i]) v.push_back(w), w = 0;\n\t\tif (s[i - 1] + 1 != s[i]) g = 0;\n\t\tif (t[i - 1] != t[i]) f = 0;\n\t\tw++;\n\t}\n\tv.push_back(w);\n\tsort(v.begin(), v.end());\n\tif (v.size() == 2) return v.back() + 3;\n\tfor (int i = 0; i < 5; i++) h &= (s[i] == (i ? (i + 8) % 13 : 0) ? 1 : 0);\n\tif (f) return h ? 9 : g ? 8 : 5;\n\tif (g | h) return 4;\n\tif (v.back() == 3) return 3;\n\tif (v.back() == 2) return 5 - v.size();\n\treturn 0;\n}\nint main() {\n\twhile (cin >> n) {\n\t\tif (z++) cout << endl;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) cin >> a[i][j];\n\t\t}\n\t\tfor (int i = 1; i < 10; i++) cin >> p[i];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> c; s[j] = s1.find(c);\n\t\t\t\tcin >> c; t[j] = s2.find(c);\n\t\t\t\tcnt += a[t[j]][s[j]];\n\t\t\t}\n\t\t\tsort(s, s + 5);\n\t\t\tsort(t, t + 5);\n\t\t\tcout << cnt * p[judge()] << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <cctype>\nusing namespace std;\n\nint score[14][4];\nint rate[10];\n\ntypedef pair<int, int> card;\ntypedef vector<card> cards;\n\nint toNum(char a)\n{\n\tif(isdigit(a)) return a-'0';\n\tif(a=='T') return 10;\n\tif(a=='J') return 11;\n\tif(a=='Q') return 12;\n\tif(a=='K') return 13;\n\treturn a-'A'+1;\n}\n\nint toNum2(char a)\n{\n\tif(a=='S') return 0;\n\tif(a=='C') return 1;\n\tif(a=='H') return 2;\n\t\n\treturn 3;\n}\n\ncards input()\n{\n\tcards in;\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tin.push_back(make_pair(toNum(s[0]), toNum2(s[1])));\n\t}\n\t\n\tsort(in.begin(), in.end());\n\t\n\treturn in;\n}\n\nvector<int> calcPair(cards in)\n{\n\tvector<int> ret;\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first]++;\n\t}\n\t\n\tfor(int i=1; i<=13; i++)\n\t{\n\t\tif(num[i]!=0) ret.push_back(num[i]);\n\t}\n\t\n\tsort(ret.begin(), ret.end());\n\t\n\treturn ret;\n}\n\nbool isFlash(cards in)\n{\n\tfor(int i=1; i<5; i++)\n\t\tif(in[0].second!=in[i].second) return false;\n\t\t\n\treturn true;\n}\n\nint isStraight(cards in, vector<int> pr)\n{\n\tif(pr.size()!=5) return 0;\n\t\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first+(4-i)]++;\n\t}\n\t\n\tif(num[in[4].first]==5) return 1;\n\tif(num[in[4].first]==4&&in[4].first==13&&num[5]) return 2;\n\t\n\treturn 0;\n}\n\nint total(cards in)\n{\n\tint ret=0;\n\tfor(int i=0; i<5; i++)\n\t\tret+=score[in[i].first][in[i].second];\n\t\t\n\treturn ret;\n}\n\n\nint calc(cards in)\n{\n\tvector<int> pr=calcPair(in);\n\tint ret=0,sz=pr.size();\n\t\n\tif(pr[sz-1]==2) ret=1;\n\tif(pr[sz-1]==2&&pr[sz-2]==2) ret=2;\n\tif(pr[sz-1]==3) ret=3;\n\tif(isStraight(in,pr)!=0) ret=4;\n\tif(isFlash(in)) ret=5;\n\tif(pr[sz-2]==2&&pr[sz-1]==3) ret=6;\n\tif(pr[sz-1]==4) ret=7;\n\tif(isStraight(in,pr)!=0&&isFlash(in)) ret=8;\n\tif(isStraight(in,pr)==2&&isFlash(in)) ret=9;\n\t\n\treturn total(in)*rate[ret];\n}\n\nint main()\n{\n\tbool flg=true;\n\tint N;\n\twhile(cin >> N)\n\t{\n\t\tif(flg) flg=false;\n\t\telse cout << endl;\n\t\t\n\t\tfor(int i=0; i<4; i++)\n\t\tfor(int j=0; j<13; j++)\n\t\t\tcin >> score[j+1][i];\n\t\t\n\t\trate[0]=0;\n\t\tfor(int i=0; i<9; i++)\n\t\t\tcin >> rate[i+1];\n\t\t\t\n\t\tfor(int i=0; i<N; i++)\n\t\t{\n\t\t\tcards cs=input();\n\t\t\tcout << calc(cs) << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint same(vector<int> &c){\n\tfor(int i = 1 ; i < c.size() ; i++)\n\t\tif(c[i] != c[i-1]) return false;\n\treturn true;\n}\n\nint royal(vector<int> &v,vector<int> &c){\n\treturn same(c) && v[0] == 1 && v[1] == 10 && v[2] == 11 && v[3] == 12 && v[4] == 13;\n}\nint straightflash(vector<int> &v,vector<int> &c){\n\tif(!same(c))return false;\n\tfor(int i = 1; i < v.size() ; i++)\n\t\tif(v[i] != v[i-1]+1) return false;\n\treturn true;\n}\nint straight(vector<int> &v,vector<int> &c){\n\tif(v[0] == 1 && v[1] == 10 && v[2] == 11 && v[3] == 12 && v[4] == 13) return true;\n\tif(v[0] == 1 && v[1] == 2  && v[2] == 11 && v[3] == 12 && v[4] == 13) return true;\n\tif(v[0] == 1 && v[1] == 2  && v[2] == 3  && v[3] == 12 && v[4] == 13) return true;\n\tif(v[0] == 1 && v[1] == 2  && v[2] == 3  && v[3] == 4  && v[4] == 13) return true;\n\tfor(int i = 1; i < v.size() ; i++){\n\t\tif(v[i] != v[i-1]+1) return false;\n\t}\n\treturn true;\n}\nint four(vector<int> &v,vector<int> &c){\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 4) return true;\n\t}\n\treturn false;\n}\nint fullhouse(vector<int> &v,vector<int> &c){\n\tbool f1 = 0 , f2 = 0;\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 3) f1 = true;\n\t\tif(count(v.begin(),v.end(),v[i]) == 2) f2 = true;\n\t}\n\treturn f1 & f2;\n}\n\nint three(vector<int> &v,vector<int> &c){\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tif(count(v.begin(),v.end(),v[i]) == 3) return true;\n\t}\n\treturn false;\n}\n\nint two(vector<int> &v,vector<int> &c){\n\tint k[10] = {0};\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tk[count(v.begin(),v.end(),v[i])]++;\n\t}\n\treturn k[2] == 4;\n}\n\nint one(vector<int> &v,vector<int> &c){\n\tint k[10] = {0};\n\tfor(int i = 0 ; i < v.size() ; i++){\n\t\tk[count(v.begin(),v.end(),v[i])]++;\n\t}\n\treturn k[2] == 2;\n}\n\nint flash(vector<int> &v,vector<int> &c){\n\treturn same(c);\n}\nint num(char c){\n\tif(c == 'A') return 1;\n\telse if(c == 'T') return 10;\n\telse if(c == 'J') return 11;\n\telse if(c == 'Q') return 12;\n\telse if(c == 'K') return 13;\n\telse return c - '0';\n}\nint suit(char c){\n\tswitch(c){\n\tcase 'S':return 1;\n\tcase 'C':return 2;\n\tcase 'H':return 3;\n\tcase 'D':return 4;\n\t};\n}\nint main(){\n\tint n;\n\tint (*p[9]) (vector<int> &v,vector<int> &c);\n\tp[0] = one;\n\tp[1] = two;\n\tp[2] = three;\n\tp[3] = straight;\n\tp[4] = flash;\n\tp[5] = fullhouse;\n\tp[6] = four;\n\tp[7] = straightflash;\n\tp[8] = royal;\n\tint T = 0;\n\twhile(cin >> n){\n\t\tif(T++)cout << endl;\n\t\tint w[5][14];\n\t\tfor(int y = 1 ; y <= 4 ; y++){\n\t\t\tfor(int i = 1 ; i <= 13 ; i++){\n\t\t\t\tcin >> w[y][i];\n\t\t\t}\t\t\n\t\t}\n\t\t\n\t\tint rate[9];\n\t\tfor(int i = 0 ; i < 9 ; i++){\n\t\t\tcin >> rate[i];\n\t\t}\n\t\tfor(int _ = 0 ; _ < n ; _++){\n\t\t\tint o = 0;\n\t\t\tvector<int> v; vector<int> c;\n\t\t\tfor(int i = 0 ; i < 5 ; i++){\n\t\t\t\tstring s;\n\t\t\t\tcin >> s;\n\t\t\t\tv.push_back(num(s[0]));\n\t\t\t\tc.push_back(suit(s[1]));\n\t\t\t\to += w[suit(s[1])][num(s[0])];\n\t\t\t}\n\t\t\tfor(int __ = 0 ; __ < 5 ; __++){\n\t\t\t\tfor(int i = 0 ; i < 4 ; i++){\n\t\t\t\t\tif(v[i] > v[i+1]){\n\t\t\t\t\t\tswap(v[i],v[i+1]);\n\t\t\t\t\t\tswap(c[i],c[i+1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ans = 0;\n\t\t\tfor(int i = 0 ; i < 9 ; i++){\n\t\t\t\tans = max( p[i](v,c) * o * rate[i] , ans);\n\t\t\t}\n\t\t\tcout << ans << endl;\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    vector<int> change(256);\n    change['A'] = 1;\n    for(int i=2; i<=9; ++i)\n        change['0'+i] = i;\n    change['T'] = 10;\n    change['J'] = 11;\n    change['Q'] = 12;\n    change['K'] = 13;\n    change['S'] = 0;\n    change['C'] = 1;\n    change['H'] = 2;\n    change['D'] = 3;\n\n    bool isFirst = true;\n    for(;;){\n        int n;\n        if(!(cin >> n))\n            return 0;\n\n        if(isFirst)\n            isFirst = false;\n        else\n            cout << endl;\n\n        vector<vector<int> > basic(4, vector<int>(13));\n        for(int i=0; i<4; ++i){\n            for(int j=0; j<13; ++j){\n                cin >> basic[i][j];\n            }\n        }\n\n        vector<int> times(9);\n        for(int i=0; i<9; ++i)\n            cin >> times[i];\n\n        while(--n >= 0){\n            vector<pair<int, int> > cards(5);\n            for(int i=0; i<5; ++i){\n                string s;\n                cin >> s;\n                cards[i].first = change[s[0]];\n                cards[i].second = change[s[1]];\n            }\n            sort(cards.begin(), cards.end());\n\n            bool flash = true;\n            vector<int> same(3, 0);\n            int sameNum = 0;\n            for(int i=0; i<5; ++i){\n                if(i < 4 && cards[i].second != cards[i+1].second)\n                    flash = false;\n                if(i < 4 && cards[i].first == cards[i+1].first)\n                    ++ sameNum;\n                else if(sameNum > 0){\n                    ++ same[sameNum-1];\n                    sameNum = 0;\n                }\n            }\n\n            int yaku = -1;\n            if(same[2] == 1)\n                yaku = 6; // tH[J[h\n            else if(same[1] == 1){\n                if(same[0] == 1)\n                    yaku = 5; // tnEX\n                else\n                    yaku = 2; // X[J[h\n            }else if(same[0] == 2){\n                yaku = 1; // c[yA\n            }else if(same[0] == 1){\n                yaku = 0; // yA\n            }else if(flash){\n                if(cards[0].first == 1 && cards[1].first == 10)\n                    yaku = 8; // CXg[gtbV\n                else if(cards[4].first - cards[0].first == 4)\n                    yaku = 7; // Xg[gtbV\n                else\n                    yaku = 4; // tbV\n            }else{\n                if((cards[0].first == 1 && cards[1].first == 10) || cards[4].first - cards[0].first == 4)\n                    yaku = 3; // Xg[g\n            }\n\n            int ret = 0;\n            if(yaku != -1){\n                for(int i=0; i<5; ++i)\n                    ret += basic[cards[i].second][cards[i].first-1];\n                ret *= times[yaku];\n            }\n            cout << ret << endl;\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint N, a[4][14], b[9];\nchar T[15] = \"-123456789TQJK\";\nchar U[5] = \"SCHD\";\nstring S; pair<int, int>d[5];\nint poker() {\n\tint e[14], f[4];\n\tint g[14], h[4];\n\tfor (int i = 0; i < 14; i++) { e[i] = 0; }\n\tfor (int i = 0; i < 5; i++) {\n\t\te[d[i].first]++;\n\t\tf[d[i].second]++;\n\t}\n\tfor (int i = 0; i < 14; i++) { g[e[i]]++; }\n\tfor (int i = 0; i < 4; i++) { h[f[i]]++; }\n\tif (h[4] == 1) {\n\t\tif (d[0].first != 1) { goto E; }\n\t\tif (d[1].first != 10) { goto E; }\n\t\tif (d[2].first != 11) { goto E; }\n\t\tif (d[3].first != 12) { goto E; }\n\t\tif (d[4].first != 13) { goto E; }\n\t\treturn 8; E:;\n\t\tfor (int i = 1; i < 5; i++) {\n\t\t\tif (d[i].first != d[i - 1].first + 1) {\n\t\t\t\tgoto F;\n\t\t\t}\n\t\t}\n\t\treturn 7; F:;\n\t\treturn 4;\n\t}\n\tif (g[4] == 1) { return 6; }\n\tif (g[2] == 1 && g[3] == 1) { return 5; }\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (d[i].first != d[i - 1].first + 1) {\n\t\t\tgoto G;\n\t\t}\n\t}\n\treturn 3; G:;\n\tif (g[3] == 1) { return 2; }\n\tif (g[2] == 2) { return 1; }\n\tif (g[2] == 1) { return 0; }\n\treturn 9;\n}\nint main() {\n\tint cnt = 0;\n\twhile (cin >> N) {\n\t\tif (cnt) { cout << endl; }\n\t\tcnt++;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 1; j <= 13; j++) {\n\t\t\t\tcin >> a[i][j];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 9; i++) { cin >> b[i]; }\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> S;\n\t\t\t\tfor (int k = 0; k < 14; k++) {\n\t\t\t\t\tif (T[k] == S[0]) { d[j].first = k; }\n\t\t\t\t}\n\t\t\t\tfor (int k = 0; k < 4; k++) {\n\t\t\t\t\tif (U[k] == S[1]) { d[j].second = k; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(d, d + 5);\n\t\t\tint A = b[poker()];\n\t\t\tint B = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tB += a[d[j].second][d[j].first];\n\t\t\t}\n\t\t\tcout << A*B << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "//32\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n  bool ns=false;\n  for(int n;cin>>n;){\n    const char* s=\"SCHD\";\n    int b[128][13];\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin>>b[s[i]][j];\n      }\n    }\n    int m[10]={};\n    for(int i=0;i<9;i++){\n      cin>>m[i+1];\n    }\n    if(ns){\n      cout<<endl;\n    }\n    ns=true;\n    while(n--){\n      const char *r=\"A23456789TJQK\";\n      int apr[13]={},aps[128]={};\n      char rn[5],st[5];\n      int rnd[5];\n      for(int i=0;i<5;i++){\n\tcin>>rn[i]>>st[i];\n\trnd[i]=strchr(r,rn[i])-r;\n\tapr[rnd[i]]++;\n\taps[st[i]]++;\n      }\n      int p;\n      p=count(apr,apr+13,2);\n      int tf=*max_element(apr,apr+13);\n      if(tf==3){\n\tp=3;\n      }\n      bool str=false;\n      int sp;\n      for(int i=0;i<13-3;i++){\n\tint h=true;\n\tfor(int j=0;j<5;j++){\n\t  h&=apr[(i+j)%13];\n\t}\n\tif(h){\n\t  str=true;\n\t  p=4;\n\t  sp=i;\n\t}\n      }\n      bool fl=find(aps,aps+128,5)!=aps+128;\n      if(fl){\n\tp=5;\n      }\n      if(find(apr,apr+13,2)!=apr+13&&find(apr,apr+13,3)!=apr+13){\n\tp=6;\n      }\n      if(tf==4){\n\tp=7;\n      }\n      if(str&&fl){\n\tp=8+(sp==9);\n      }\n      int bp=0;\n      for(int i=0;i<5;i++){\n\tbp+=b[st[i]][rnd[i]];\n      }\n      cout<<bp*m[p]<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n  int t;\n  int weight[10];\n  int point[4][13];\n  int s[5],n[5];\n  int kind[4][13];\n  string card;\n  bool flag;\n  bool f = false;\n\n  while(cin >> t){\n    if(f)cout << endl;\n    f = true;\n\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++)cin >> point[i][j];\n    }\n    weight[0] = 0;\n    for(int i=1;i<10;i++)cin >> weight[i];\n    \n    while(t--){\n      for(int i=0;i<4;i++){\n\tfor(int j=0;j<13;j++)kind[i][j] = false;\n      }\n      int ans = 0;\n      for(int i=0;i<5;i++){\n\tcin >> card;\n\tif(card[0] == 'A')n[i] = 1;\n\telse if(card[0] == 'T')n[i] = 10;\n\telse if(card[0] == 'J')n[i] = 11;\n\telse if(card[0] == 'Q')n[i] = 12;\n\telse if(card[0] == 'K')n[i] = 13;\n\telse n[i] = card[0] - '0';\n\n\tif(card[1] == 'S')s[i] = 0;\n\telse if(card[1] == 'C')s[i] = 1;\n\telse if(card[1] == 'H')s[i] = 2;\n\telse if(card[1] == 'D')s[i] = 3;\n\n\tkind[s[i]][n[i]-1] = true;\n\tans += point[s[i]][n[i]-1];\n      }\n\n      flag = false;\n      int c = 9;\n      //loyal straight flash\n      for(int i=0;i<4;i++){\n\tif(kind[i][0] && kind[i][9] && kind[i][10] && kind[i][11] && kind[i][12]){\n\t  flag = true;\n\t}\n      }\n      if(!flag){\n\tc--;\n\t//straight flash\n\tfor(int i=0;i<4;i++){\n\t  for(int j=0;j<9;j++){\n\t    if(kind[i][j] && kind[i][j+1] && kind[i][j+2] && kind[i][j+3] && kind[i][j+4])flag = true;\n\t  }\n\t}\n\tif(!flag){\n\t  c--;\n\t  //four card\n\t  sort(n,n+5);\n\t  if(n[0] == n[1] && n[1] == n[2] && n[2] == n[3])flag = true;\n\t  if(n[1] == n[2] && n[2] == n[3] && n[3] == n[4])flag = true;\n\t  if(!flag){\n\t    c--;\n\t    //full house\n\t    if(n[0] == n[1] && n[1] == n[2] && n[3] == n[4])flag = true;\n\t    if(n[0] == n[1] && n[2] == n[3] && n[3] == n[4])flag = true;\n\t    if(!flag){\n\t      c--;\n\t      //flash\n\t      if(s[0] == s[1] && s[1] == s[2] && s[2] == s[3] && s[3] == s[4])flag = true;\n\t      if(!flag){\n\t\tc--;\n\t\t//straight\n\t\tif(n[0] == n[1]-1 && n[1] == n[2]-1 && n[2] == n[3]-1 && n[3] == n[4]-1)flag = true;\n\t\tif(n[0] == 1 && n[1] == 10 && n[2] == 11 && n[3] == 12 && n[4] == 13)flag = true;\n\t\tif(!flag){\n\t\t  c--;\n\t\t  //three card\n\t\t  if(n[0] == n[1] && n[1] == n[2])flag = true;\n\t\t  if(n[1] == n[2] && n[2] == n[3])flag = true;\n\t\t  if(n[2] == n[3] && n[3] == n[4])flag = true;\n\t\t  if(!flag){\n\t\t    c--;\n\t\t    //two pair\n\t\t    if(n[0] == n[1] && n[2] == n[3])flag = true;\n\t\t    if(n[0] == n[1] && n[3] == n[4])flag = true;\n\t\t    if(n[1] == n[2] && n[3] == n[4])flag = true;\n\t\t    if(!flag){\n\t\t      c--;\n\t\t      if(n[0] == n[1])flag = true;\n\t\t      if(n[1] == n[2])flag = true;\n\t\t      if(n[2] == n[3])flag = true;\n\t\t      if(n[3] == n[4])flag = true;\n\t\t      if(!flag)c--;\n\t\t    }\n\t\t  }\n\t\t}\n\t      }\n\t    }\n\t  }\n\t}\n      }\n      cout << ans * weight[c] << endl;\n    }\n\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[4][13], p[10], z; char c; pair<int, int> s[5]; string s1 = \"A23456789TJQK\", s2 = \"SCHD\";\nint judge() {\n\tvector<int> v; int w = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].first != s[i - 1].first) v.push_back(w), w = 0;\n\t\tw++;\n\t}\n\tv.push_back(w);\n\tsort(v.begin(), v.end());\n\tif (v.back() == 4) return 7;\n\tif (v.back() == 3 && v.size() == 2) return 6;\n\tint f = 1, g = 1, h = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].second != s[i - 1].second) f = 0;\n\t}\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i - 1].first + 1 != s[i].first) g = 0;\n\t}\n\tfor (int i = 0; i < 5; i++) {\n\t\tif (s[i].first != (i + 9) % 13) h = 0;\n\t}\n\tif (f) {\n\t\tif (h) return 9;\n\t\tif (g) return 8;\n\t\treturn 5;\n\t}\n\tif (g | h) return 4;\n\tif (v.back() == 3) return 3;\n\tif (v.back() == 2 && v[v.size() - 2] == 2) return 2;\n\tif (v.back() == 2) return 1;\n\treturn 0;\n}\nint main() {\n\twhile (cin >> n) {\n\t\tif (z++) cout << endl;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) cin >> a[i][j];\n\t\t}\n\t\tfor (int i = 1; i < 10; i++) cin >> p[i];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> c; s[j].first = s1.find(c);\n\t\t\t\tcin >> c; s[j].second = s2.find(c);\n\t\t\t\tcnt += a[s[j].second][s[j].first];\n\t\t\t}\n\t\t\tsort(s, s + 5);\n\t\t\tcout << cnt * p[judge()] << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nint nton[256];\nint ston[256];\nint point[4][13];\nint rate[9];\n\nint calc(vector<pair<int, int> > &a){\n\tint s[5], n[5];\n\tfor(int i=0; i<5; i++){\n\t\ts[i] = a[i].second;\n\t\tn[i] = a[i].first;\n\t}\n\tbool samesuit = false;\n\tif(s[0]==s[1] && s[0]==s[2] && s[0]==s[3] && s[0]==s[4]){\n\t\tsamesuit = true;\n\t}\n\tbool rstraight = false;\n\tbool straight = false;\n\tif(0 <= n[0] && n[0] <= 8){\n\t\tbool succ = true;\n\t\tfor(int i=0; i<4; i++){\n\t\t\tif((n[i]+1)%13 != n[i+1]%13) succ = false;\n\t\t}\n\t\tif(succ){\n\t\t\tstraight = true;\n\t\t}\n\t}\n\tif(n[0]==0 && n[1]==9 && n[2]==10 && n[3]==11 && n[4]==12) rstraight = true;\n\tif(samesuit && rstraight) return rate[8];\n\tif(samesuit && straight) return rate[7];\n\tif(straight || rstraight) return rate[3];\n\tif(samesuit) return rate[4];\n\t\n\tint pair1=0, pair2=0;\n\tfor(int i=0; i<5; i++){\n\t\tint lim = 1;\n\t\twhile(i+lim<5 && n[i]==n[i+lim]) lim++;\n\t\tif(lim>1){\n\t\t\tif(pair1!=0){\n\t\t\t\tpair2 = lim;\n\t\t\t}else{\n\t\t\t\tpair1 = lim;\n\t\t\t}\n\t\t\ti += lim-1;\n\t\t}\n\t}\n\tif(pair1 == 4) return rate[6];\n\tif(pair1 == 2 && pair2 == 3) return rate[5];\n\tif(pair1 == 3 && pair2 == 2) return rate[5];\n\tif(pair1 == 3) return rate[2];\n\tif(pair2 == 2) return rate[1];\n\tif(pair1 == 2) return rate[0];\n\treturn 0;\n}\n\nint main(){\n\tfor(int i=0; i<256; i++){\n\t\tnton[i] = i-'1';\n\t}\n\tnton['A'] = 0;\n\tnton['T'] = 9;\n\tnton['J'] = 10;\n\tnton['Q'] = 11;\n\tnton['K'] = 12;\n\tston['S'] = 0;\n\tston['C'] = 1;\n\tston['H'] = 2;\n\tston['D'] = 3;\n\t\n\tbool first = true;\n\tint n;\n\twhile(cin >> n){\n\t\tif(!first){\n\t\t\tcout << endl;\n\t\t}else{\n\t\t\tfirst = false;\n\t\t}\n\t\t\n\t\tfor(int i=0; i<4; i++){\n\t\t\tfor(int j=0; j<13; j++){\n\t\t\t\tcin >> point[i][j];\n\t\t\t}\n\t\t}\n\t\tfor(int i=0; i<9; i++){\n\t\t\tcin >> rate[i];\n\t\t}\n\t\t\n\t\tfor(int i=0; i<n; i++){\n\t\t\tvector<pair<int, int> > a(5);\n\t\t\tint psum = 0;\n\t\t\tfor(int j=0; j<5; j++){\n\t\t\t\tstring s;\n\t\t\t\tcin >> s;\n\t\t\t\ta[j].first = nton[(int)s[0]];\n\t\t\t\ta[j].second = ston[(int)s[1]];\n\t\t\t\tpsum += point[a[j].second][a[j].first];\n\t\t\t}\n\t\t\tsort(a.begin(), a.end());\n\t\t\tcout << psum *calc(a) << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<utility>\n#include<algorithm>\n#include<cstdlib>\n#define Pair pair<int, int>\n#define num first\n#define type second\n\nusing namespace std;\n\nint point[4][13], power[9];\nPair in[5], st[5], fl[5];\n\nint st_change(const char& c){\n  if(isdigit(c)) return c-'0';\n  if(c == 'T') return 10;\n  if(c == 'J') return 11;\n  if(c == 'Q') return 12;\n  if(c == 'K') return 13;\n  if(c == 'A') return 1;\n  return 0;\n}\n\nint fl_change(const char& c){\n  if(c == 'S') return 1;\n  if(c == 'C') return 2;\n  if(c == 'H') return 3;\n  if(c == 'D') return 4;\n  return 0;\n}\n\nbool st_comp(const Pair& a, const Pair& b){\n  if(a.num != b.num) return a.num < b.num;\n  return a.type < b.type;\n}\n\nbool fl_comp(const Pair& a, const Pair& b){\n  if(a.type != b.type) return a.type < b.type;\n  return a.num < b.num;\n}\n\nint check_st(){\n  if(st[0].num==1 && st[1].num==10 && st[2].num==11 &&\n     st[3].num==12 && st[4].num==13) return 2;\n  for(int i=1; i<5; ++i){\n    if(st[i].num != st[i-1].num+1) return 0;\n  }\n  return 1;\n}\n\nbool check_fl(){\n  return fl[0].type==fl[1].type && fl[1].type==fl[2].type &&\n    fl[2].type==fl[3].type && fl[3].type==fl[4].type;\n}\n\nbool is_four(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num && st[2].num==st[3].num) ||\n    (st[1].num==st[2].num && st[2].num==st[3].num && st[3].num==st[4].num);\n}\n\nbool is_full(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num && st[3].num==st[4].num) ||\n    (st[0].num==st[1].num && st[2].num==st[3].num && st[3].num==st[4].num);\n}\n\nbool is_three(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num) ||\n    (st[1].num==st[2].num && st[2].num==st[3].num) ||\n    (st[2].num==st[3].num && st[3].num==st[4].num);\n}\n\nbool is_two(){\n  return (st[0].num==st[1].num && st[2].num==st[3].num) ||\n    (st[1].num==st[2].num && st[3].num==st[4].num);\n}\n\nbool is_one(){\n  return st[0].num==st[1].num || st[1].num==st[2].num ||\n    st[2].num==st[3].num || st[3].num==st[4].num;\n}\n\nint solve(){\n  int p=0;\n  for(int i=0; i<5; ++i){\n    p += point[in[i].type-1][in[i].num-1];\n    st[i] = in[i]; fl[i] = in[i];\n  }\n  sort(st, st+5, st_comp);\n  sort(fl, fl+5, fl_comp);\n  int is_st = check_st();\n  bool is_fl = check_fl();\n  if(is_st == 2 && is_fl) return p*power[8];\n  if(is_st == 1 && is_fl) return p*power[7];\n  if(is_four()) return p*power[6];\n  if(is_full()) return p*power[5];\n  if(is_fl) return p*power[4];\n  if(is_st) return p*power[3];\n  if(is_three()) return p*power[2];\n  if(is_two()) return p*power[1];\n  if(is_one()) return p*power[0];\n  return 0;\n}\n\nint main(){\n  bool is=false;\n  int n;\n  while(1){\n    cin >> n;\n    if(!n) break;\n    for(int i=0; i<4; ++i){\n      for(int j=0; j<13; ++j) cin >> point[i][j];\n    }\n    for(int i=0; i<9; ++i) cin >> power[i];\n    if(is) cout << endl;\n    string s;\n    for(int i=0; i<n; ++i){\n      for(int j=0; j<5; ++j){\n\tcin >> s;\n\tin[j] = make_pair(st_change(s[0]), fl_change(s[1]));\n      }\n      cout << solve() << endl;\n    }\n    is=true;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint arr[4][13], rank[9], card[5], cnt[13];\nstring str[5];\n\nint getMark(char ch){\n  if(ch == 'S'){\n    return 0;\n  }else if(ch == 'C'){\n    return 1;\n  }else if(ch == 'H'){\n    return 2;\n  }\n  return 3;\n}\n\nint getNum(char ch){\n  if('2' <= ch && ch <= '9'){\n    return (ch-'0')-1;\n  }else if(ch == 'A'){\n    return 0;\n  }else if(ch == 'T'){\n    return 9;\n  }else if(ch == 'J'){\n    return 10;\n  }else if(ch == 'Q'){\n    return 11;\n  }\n  return 12;\n}\n\nint judge(){\n  bool same_mark = true;\n  char ch = str[0][1];\n  for(int i = 1 ; i < 5 ; i++){\n    if(ch != str[i][1]){\n      same_mark = false;\n      break;\n    }\n  }\n\n  if(same_mark){\n    if(card[0] == 1 && card[1] == 10 && card[2] == 11 &&\n       card[3] == 12 && card[4] == 13){\n      return rank[8];\n    }else{\n      bool check = true;\n      for(int i = 1 ; i < 5 ; i++){\n        if(card[i] - card[i-1] != 1){\n          check = false;\n          break;\n        }\n      }\n      if(check){\n        return rank[7];\n      }else{\n        return rank[4];\n      }\n    }\n  }\n\n  sort(cnt, cnt+13, greater<int>());\n  if(cnt[0] == 4){\n    return rank[6];\n  }else if(cnt[0] == 3){\n    if(cnt[1] == 2){\n      return rank[5];\n    }else{\n      return rank[2];\n    }\n  }else if(cnt[0] == 2){\n    if(cnt[1] == 2){\n      return rank[1];\n    }else{\n      return rank[0];\n    } \n  }else{\n    bool check = true;\n    for(int i = 1 ; i < 5 ; i++){\n      if(card[i] - card[i-1] != 1){\n        check = false;\n        break;\n      }\n    }\n    if(check){\n      return rank[3];\n    }\n  }\n\n  return 0;\n}\n\nint main(){\n  int N;\n  bool space = false;\n\n  while(cin >> N){\n    if(space){\n      cout << endl;\n    }else{\n      space = true;\n    }\n\n    for(int i = 0 ; i < 4 ; i++){\n      for(int j = 0 ; j < 13 ; j++){\n        cin >> arr[i][j];\n      }\n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> rank[i];\n    }\n\n    while(N--){\n      int point = 0, m,n;\n      memset(cnt, 0, sizeof(cnt));\n      for(int i = 0 ; i < 5 ; i++){\n        cin >> str[i];\n        m = getMark(str[i][1]);\n        n = getNum(str[i][0]);\n        point += arr[m][n];\n        card[i] = n+1;\n        cnt[n]++;\n      }\n      sort(card, card+5);\n      cout << point*judge() << endl;\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <queue>\n\n#define i64 long long\n#define ui64 unsigned long long\n#define REP(i,n) for(int (i)=0;(i)<(n);i++)\n#define REP2(i,k,n) for(int (i)=(k);(i)<(n);i++)\n#define ATCODER 1000000007\nusing namespace std;\n \n////////////////////////\n\nint c_points[5][14];\nint h_points[10];\n\nstruct card{\n  int num;\n  int mark;\n  card(char n_,char m_):num(),mark(){\n    switch(m_){\n      case 'S': mark = 0; break;\n      case 'H': mark = 2; break;\n      case 'D': mark = 3; break;\n      case 'C': mark = 1; break;\n    }\n    if(('0'<=n_)&&(n_<='9'))num=n_-'0';\n    else{\n      switch(n_){\n        case 'T': num = 10; break;\n        case 'J': num = 11; break;\n        case 'Q': num = 12; break;\n        case 'K': num = 13; break;\n        case 'A': num = 1; break;\n      }\n    }\n  }\n  bool operator< (const card& a){\n    return num==a.num?mark<a.mark:num<a.num;\n  }\n};\n\nbool straight(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if((hand[i+1].num-hand[i].num==1)||\\\n        ((!i)&&(hand[4].num==13&&hand[i].num==1)));\n    else return false;\n  }\n  return true;\n}\n\nbool flush(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].mark!=hand[i+1].mark)return false;\n  }\n  return true;\n}\n\nbool no_pair(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool one_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=4;i++){\n    if(i==4)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  for(int i=p+1;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool two_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=2;i++){\n    if(i==2)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  if(p==0){\n    return hand[2].num==hand[3].num?hand[3].num!=hand[4].num:hand[3].num==hand[4].num;\n  }\n  if(p==1){\n    return hand[3].num==hand[4].num;\n  }\n}\n\nbool three_card(vector<card>& hand){\n  if(hand[0].num==hand[2].num&&hand[0].num!=hand[3].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num==hand[3].num&&hand[3].num!=hand[4].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num!=hand[2].num&&hand[2].num==hand[4].num)return true;\n  return false;\n}\n\nbool fullhouse(vector<card>& hand){\n  int p;\n  if(hand[1].num!=hand[2].num){\n    if(hand[0].num!=hand[1].num)return false;\n    for(int i=2;i<4;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }else{\n    if(hand[3].num!=hand[4].num)return false;\n    for(int i=0;i<2;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }\n}\n\nbool straight_flush(vector<card>& hand){\n  return straight(hand)&&flush(hand);\n}\n\nbool four_card(vector<card>& hand){\n  return hand[0].num==hand[3].num||hand[1].num==hand[4].num;\n}\n\nbool royal_straight_flush(vector<card>& hand){\n  if(straight_flush(hand)){\n    if(hand[0].num==1&&hand[4].num==13)return true;\n  }\n  return false;\n}\n\n\ni64 solve(vector<card>& hand){\n  sort(hand.begin(),hand.end());\n  // for(int i=0;i<5;i++){\n  //   cout << hand[i].num << \" \" << hand[i].mark << endl;\n  // }\n  i64 res=0LL;\n  \n  for(int i=0;i<5;i++){\n    int m_=hand[i].mark;\n    int n_=hand[i].num;\n    res+=(i64)c_points[m_][n_-1];\n  }\n  // cout << res << endl;\n  if(royal_straight_flush(hand)){\n    res*=(i64)h_points[8];\n    // cout << 0 << endl;\n    return res;\n  }\n  if(straight_flush(hand)){\n    res*=(i64)h_points[7];\n    // cout << 8 << endl;\n    return res;\n  }\n  if(four_card(hand)){\n    res*=(i64)h_points[6];\n    // cout << 7 << endl;\n    return res;\n  }\n  if(straight(hand)){\n    res*=(i64)h_points[3];\n    // cout << 4 << endl;\n    return res;\n  }\n  if(flush(hand)){\n    res*=(i64)h_points[4];\n    // cout << 5 << endl;\n    return res;\n  }\n  if(fullhouse(hand)){\n    res*=(i64)h_points[5];\n    // cout << 6 << endl;\n    return res;\n  }\n  if(one_pair(hand)){\n    res*=(i64)h_points[0];\n    // cout << 1 << endl;\n    return res;\n  }\n  if(two_pair(hand)){\n    res*=(i64)h_points[1];\n    // cout << 2 << endl;\n    return res;\n  }\n  if(three_card(hand)){\n    res*=(i64)h_points[2];\n    // cout << 3 << endl;\n    return res;\n  }\n  if(no_pair(hand)){\n    return (i64)0;\n  }\n  \n  return -1;\n}\n\nint main(){\n  int n;\n  bool flag = false;\n  while(1){\n    if(!flag){\n      cin >> n;\n      if(cin.eof())return 0; \n      flag=true;\n    }\n    fill(&c_points[0][0],&c_points[4][13],0);\n    fill(&h_points[0],&h_points[9],0);\n    for(int i=0;i<4;i++){\n      for(int k=0;k<13;k++){\n        cin >> c_points[i][k];\n      }\n    }\n    for(int i=0;i<9;i++){\n      cin >> h_points[i];\n    }\n    char a[3];\n    vector<card> hands;\n    for(int i=0;i<n;i++){\n      for(int k=0;k<5;k++){\n        cin >> a;\n        hands.push_back(card(a[0],a[1]));\n      }\n      cout << solve(hands) << endl;\n      hands.clear();\n    }\n    if(flag){\n      cin >> n;\n      if(cin.eof())return 0; \n      else cout << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ntypedef vector<int> vi;\n\nint main()\n{\n  int buckets[14];\n  int buckets2[5];\n  bool firsttime=true;\n  int n;\n  while(cin >> n)\n  {\n    if(!n) break;\n    if(!firsttime) cout << endl;\n    if(firsttime) firsttime=false;\n    int cardscore[14][5];\n    int handscore[9];\n      for(int j=1;j<=4;j++)\n      {\n        for(int k=1;k<=13;k++)\n        {\n          cin >> cardscore[k][j];\n        }\n      }\n      for(int j=0;j<9;j++)\n      {\n        cin >> handscore[j];\n      }\n    \n    for(int i=0;i<n;i++)\n    {\n      int times=0;\n      long long score=0;\n      vector<string> card(5);\n      vector<pair<int,int> > tmpc(5);\n      for(int j=0;j<5;j++)\n      {\n        cin >> card[j];\n        if(card[j][0]=='A')\n        {\n          tmpc[j].first=1;\n        }\n        else if(card[j][0]=='T')\n        {\n          tmpc[j].first=10;\n        }\n        else if(card[j][0]=='J')\n        {\n          tmpc[j].first=11;\n        }\n        else if(card[j][0]=='Q')\n        {\n          tmpc[j].first=12;\n        }\n        else if(card[j][0]=='K')\n        {\n          tmpc[j].first=13;\n        }\n        else\n        {\n          tmpc[j].first=(int)(card[j][0]-'0');\n        }\n        if(card[j][1]=='S')\n        {\n          tmpc[j].second=1;\n        }\n        else if(card[j][1]=='C')\n        {\n          tmpc[j].second=2;\n        }\n        else if(card[j][1]=='H')\n        {\n          tmpc[j].second=3;\n        }\n        else if(card[j][1]=='D')\n        {\n          tmpc[j].second=4;\n        }\n        score+=cardscore[tmpc[j].first][tmpc[j].second];\n\n      }\n      int onep=0,threec=0,four=0;\n      bool flash=false;\n      bool straight=true;\n      sort(tmpc.begin(),tmpc.end());\n      memset(buckets,0,sizeof(buckets));\n      memset(buckets2,0,sizeof(buckets2));\n      for(int j=0;j<5;j++)\n      {\n        buckets[tmpc[j].first]++;\n        buckets2[tmpc[j].second]++;\n      }\n      for(int j=1;j<=13;j++)\n      {\n        if(buckets[j]==2)\n        {\n          onep++;\n        }\n        else if(buckets[j]==3)\n        {\n          threec++;\n        }\n        else if(buckets[j]==4)\n        {\n          four++;\n        }\n      }\n      for(int j=1;j<=4;j++)\n      {\n        if(buckets2[j]==5)\n        {\n          flash=true;\n          times=handscore[4];\n        }\n      }\n      if(onep==1 && threec==0)\n      {\n        times=handscore[0];\n      }\n      else if(onep==2)\n      {\n        times=handscore[1];\n      }\n      else if(threec==1 && onep==0)\n      {\n        times=handscore[2];\n      }\n      else if(threec==1 && onep==1)\n      {\n        times=handscore[5];\n      }\n      else if(four==1)\n      {\n        times=handscore[6];\n      }\n      if(tmpc[0].first==1 && tmpc[1].first==10 && tmpc[2].first==11 && tmpc[3].first==12 && tmpc[4].first==13)\n      {\n        if(flash) times=handscore[8];\n        else times=handscore[3];\n      }\n      else\n      {\n        for(int j=0;j<4;j++)\n        {\n          if(tmpc[j+1].first!=(tmpc[j].first+1)) straight=false;\n        }\n        if(straight)\n        {\n          if(flash) times=handscore[7];\n          else times=handscore[3];\n        }\n      }\n      cout << score*times << endl;\n    }\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n        cin >> kihon[i][j];\n      }\n    }\n\n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n\n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n        char temp;\n        cin >> temp >> tehudac[i];\n        if(temp>'1' && temp<='9'){\n          tehudan[i]=temp-'0';\n        }\n        else if(temp=='T') tehudan[i]=10;\n        else if(temp=='J') tehudan[i]=11;\n        else if(temp=='Q') tehudan[i]=12;\n        else if(temp=='K') tehudan[i]=13;\n        else if(temp=='A') tehudan[i]=1;\n        getchar();\n      }\n\n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n        if(tehudac[i]=='S') iro=0;\n        else if(tehudac[i]=='C') iro=1;\n        else if(tehudac[i]=='H') iro=2;\n        else if(tehudac[i]=='D') iro=3;\n\n        sum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n      /*for(int i=0;i<5;i++){\n\tcout << tehudan[i] << ' ';\n      }\n      cout << endl;*/\n      int yaku;\n      yaku=hantei();\n\n      int ans;\n      if(yaku==-1){\n        cout << 0 << endl;\n      }\n      else{\n        ans=bairitu[yaku]*sum;\n        cout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n\n\nint kumi(){\n  int count=0;\n\n  for(int i=0;i<4;i++){\n    int j;\n    if(tehudan[i]==tehudan[i+1]){\n      for(j=0;j+i<4;j++){\n\tif(tehudan[i+j]!=tehudan[i+j+1]) break;\n      }\n      if(j==1) count++;\n      i=j+i;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1) return 8;\n  else if(b==1 && c==1) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a!=0) return 5;\n  else if(c==1) return 4;\n  else if(b==1) return 3;\n  else if(b==2) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  int temp=tehudan[0];\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==1\\\n3) return 2;\n  else if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==t\\\nemp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<utility>\n#include<algorithm>\n#include<cstdlib>\n#define Pair pair<int, int>\n#define num first\n#define type second\n\nusing namespace std;\n\nint point[4][13], power[9];\nPair in[5], st[5], fl[5];\n\nint st_change(const char& c){\n  if(isdigit(c)) return c-'0';\n  if(c == 'T') return 10;\n  if(c == 'J') return 11;\n  if(c == 'Q') return 12;\n  if(c == 'K') return 13;\n  if(c == 'A') return 1;\n  return 0;\n}\nint fl_change(const char& c){\n  if(c == 'S') return 1;\n  if(c == 'C') return 2;\n  if(c == 'H') return 3;\n  if(c == 'D') return 4;\n  return 0;\n}\n\nbool st_comp(const Pair& a, const Pair& b){\n  if(a.num != b.num) return a.num < b.num;\n  return a.type < b.type;\n}\nbool fl_comp(const Pair& a, const Pair& b){\n  if(a.type != b.type) return a.type < b.type;\n  return a.num < b.num;\n}\n\nint check_st(){\n  if(st[0].num==1 && st[1].num==10 && st[2].num==11 &&\n     st[3].num==12 && st[4].num==13) return 2;\n  for(int i=1; i<5; ++i){\n    if(st[i].num != st[i-1].num+1) return 0;\n  }\n  return 1;\n}\nbool check_fl(){\n  return fl[0].type==fl[1].type && fl[1].type==fl[2].type &&\n    fl[2].type==fl[3].type && fl[3].type==fl[4].type;\n}\nbool is_four(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num && st[2].num==st[3].num) ||\n    (st[1].num==st[2].num && st[2].num==st[3].num && st[3].num==st[4].num);\n}\nbool is_full(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num && st[3].num==st[4].num) ||\n    (st[0].num==st[1].num && st[2].num==st[3].num && st[3].num==st[4].num);\n}\nbool is_three(){\n  return (st[0].num==st[1].num && st[1].num==st[2].num) ||\n    (st[1].num==st[2].num && st[2].num==st[3].num) ||\n    (st[2].num==st[3].num && st[3].num==st[4].num);\n}\nbool is_two(){\n  return (st[0].num==st[1].num && st[2].num==st[3].num) ||\n    (st[1].num==st[2].num && st[3].num==st[4].num);\n}\nbool is_one(){\n  return st[0].num==st[1].num || st[1].num==st[2].num ||\n    st[2].num==st[3].num || st[3].num==st[4].num;\n}\n\nint solve(){\n  int p=0;\n  for(int i=0; i<5; ++i){\n    p += point[in[i].type-1][in[i].num-1];\n    st[i] = in[i]; fl[i] = in[i];\n  }\n  if(p == 0) return 0;\n  sort(st, st+5, st_comp);\n  sort(fl, fl+5, fl_comp);\n  int is_st = check_st();\n  bool is_fl = check_fl();\n  if(is_st == 2 && is_fl) return p*power[8];\n  if(is_st == 1 && is_fl) return p*power[7];\n  if(is_four()) return p*power[6];\n  if(is_full()) return p*power[5];\n  if(is_fl) return p*power[4];\n  if(is_st>0) return p*power[3];\n  if(is_three()) return p*power[2];\n  if(is_two()) return p*power[1];\n  if(is_one()) return p*power[0];\n  return 0;\n}\n\nint main(){\n  bool is=false;\n  int n;\n  while(cin >> n){\n    for(int i=0; i<4; ++i){\n      for(int j=0; j<13; ++j) cin >> point[i][j];\n    }\n    for(int i=0; i<9; ++i) cin >> power[i];\n    if(is) cout << endl;\n    string s;\n    for(int i=0; i<n; ++i){\n      for(int j=0; j<5; ++j){\n\tcin >> s;\n\tin[j] = make_pair(st_change(s[0]), fl_change(s[1]));\n      }\n      cout << solve() << endl;\n    }\n    is=true;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cassert>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\nusing namespace std;\ntypedef pair<int,int> Pox;//テ・ツスツケテ」ツ??・ツセツ療ァツつケ: 0->テ」ツδッテ」ツδウテ」ツδ堙」ツつ「 1->テッツシツ津」ツδ堙」ツつ「 2-> テッツシツ禿」ツつォテ」ツδシテ」ツδ?3->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ?, 4->テ」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 5->テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ, 6-> テ」ツδ陛」ツつゥテ」ツδシテ」ツつォテ」ツδシテ」ツδ? 7->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 8->テ」ツδュテ」ツつ、テ」ツδ、テ」ツδォテ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・\nstruct P\n{\n  int v;\n  char c;\n  P(int v=-1,char c='$'):v(v),c(c){}\n  bool operator < (const P &a)const\n  {\n    if(v != a.v)return v < a.v;\n    return c < a.c;\n  }\n};\n\nint S[15],C[15],H[15],D[15],ATK[15];\n\nint main()\n{\n  int n;\n  bool f = true;\n  while(cin >> n)\n    {  \n      if(f)f = false;\n      else cout << endl;\n      rep(i,13)cin >> S[i];\n      rep(i,13)cin >> C[i];\n      rep(i,13)cin >> H[i];\n      rep(i,13)cin >> D[i];\n      rep(i,9)cin >> ATK[i];\n    \n      rep(F,n)\n\t{\n\t  vector<Pox> ans;\n\t  bool suit = true;\n\t  vector<P> vec(5);\n\t  int point = 0;\n\t  int RSF = 0;\n\t  map<int,int> index;\n\t  vector<int> value;\n\n\t  rep(i,5)\n\t    {\n\t      char a,b,dummy;\n\t      int A;\n\t      string s;\n\t      cin >> s;\n\t      a = s[0];\n\t      b = s[1];\n\t      if('2' <= a && a <= '9')A = a-'0';\n\t      else if(a == 'A')A = 1;\n\t      else if(a == 'T')A = 10;\n\t      else if(a == 'J')A = 11;\n\t      else if(a == 'Q')A = 12;\n\t      else if(a == 'K')A = 13;\n\t      else assert(false);\n\t      vec[i].v = A;\n\t      vec[i].c = b;\n\t      value.push_back(A);\n\t      if(i && vec[i].c != vec[i-1].c)suit = false;\n\n\t      if(b == 'S')point += S[vec[i].v-1];\n\t      else if(b == 'C')point += C[vec[i].v-1];\n\t      else if(b == 'H')point += H[vec[i].v-1];\n\t      else if(b == 'D')point += D[vec[i].v-1];\n\t      if(vec[i].v == 1 || (10 <= vec[i].v && vec[i].v <= 13))RSF = RSF|(1<<vec[i].v);\n\t      index[vec[i].v]++;\n\t    }\n\n\n\t  if(__builtin_popcount(RSF) == 5 && suit)\n\t    {\n\t      cout << point*ATK[8] << endl;\n\t      continue;\n\t    }\n\n\t  sort(value.begin(),value.end());\n\t  bool RB = true;\n\t  REP(i,1,value.size())\n\t    if(value[i] != value[i-1]+1)\n\t      {\n\t\tRB = false;\n\t\tbreak;\n\t      }\n\n\t  if(RB && suit)\n\t    {\n\t      cout << point*ATK[7] << endl;\n\t      continue;\n\t    }\n\n\t  bool four = false;\n\t  for(map<int,int>::iterator it = index.begin();it != index.end();it++)\n\t    if(it->second == 2 || it->second == 3)break;\n\t    else if(it->second == 4)\n\t      {\n\t\tfour = true;\n\t\tbreak;\n\t      }\n\n\t  if(four)\n\t    {\n\t      cout << point*ATK[6] << endl;\n\t      continue;\n\t    }\n\n\t  int one=0,three=0;\n\t  for(map<int,int>::iterator it = index.begin();it != index.end();it++)\n\t    {\n\t      if(it->second == 2)one++;\n\t      else if(it->second == 3)three++;\n\t    }\n\n\t  if(one == 1 && three == 1)\n\t    {\n\t      cout << point*ATK[5] << endl;\n\t      continue;\n\t    }\t \n\n\t  if(suit)\n\t    {\n\t      cout << point*ATK[4] << endl;\n\t      continue;\n\t    }\n\n\t  if(RB)\n\t    {\n\t      cout << point*ATK[3] << endl;\n\t      continue;\n\t    }\n\n\t  if(three == 1)\n\t    {\n\t      cout<< point*ATK[2] << endl;\n\t      continue;\n\t    }\n\n\t  if(one == 2)\n\t    {\n\t      cout << point*ATK[1] << endl;\n\t      continue;\n\t    }\n\n\t  if(one == 1)\n\t    {\n\t      cout << point*ATK[0] << endl;\n\t      continue;\n\t    }\n\t  cout << 0 << endl;\n\t}\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdint>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <set>\n#include <map>\n\nbool is_royal(const std::vector<std::pair<int, char>> &cards) {\n  std::set<int> s;\n  for (const auto &p: cards) {\n    s.insert(p.first);\n  }\n  return s.count(10) && s.count(11) && s.count(12) && s.count(13) && s.count(1);\n}\n\nbool is_flush(const std::vector<std::pair<int, char>> &cards) {\n  std::set<char> s;\n  for (const auto &p: cards) {\n    s.insert(p.second);\n  }\n  return (s.size() == 1);\n}\n\nbool is_straight(const std::vector<std::pair<int, char>> &cards) {\n  std::set<int> s;\n  std::vector<int> t;\n  for (const auto &p: cards) {\n    s.insert(p.first);\n    t.push_back(p.first);\n  }\n  if (s.size() != 5) return false;\n  std::sort(t.begin(), t.end());\n  return (t[4]-t[0] == 4);\n}\n\nstd::vector<int> multi(const std::vector<std::pair<int, char>> &cards) {\n  std::map<int, int> s;\n  for (const auto &p: cards) {\n    ++s[p.first];\n  }\n  std::vector<int> res;\n  for (const auto &p: s) {\n    if (p.second >= 2) {\n      res.emplace_back(p.second);\n    }\n  }\n  return res;\n}\n\nint testcase_ends(bool first) {\n  int N;\n  if (scanf(\"%d\", &N) == EOF)\n    return 1;\n\n  if (!first)\n    printf(\"\\n\");\n\n  std::map<char, std::vector<int>> score;\n  for (char ch: {'S', 'C', 'H', 'D'}) {\n    score[ch].emplace_back(0);\n    for (int i=1; i<=13; ++i) {\n      int x;\n      scanf(\"%d\", &x);\n      score[ch].emplace_back(x);\n    }\n  }\n\n  std::vector<int> hands{0};\n  for (int i=0; i<9; ++i) {\n    int x;\n    scanf(\"%d\", &x);\n    hands.emplace_back(x);\n  }\n\n  for (int i=0; i<N; ++i) {\n    std::vector<std::pair<int, char>> cards;\n    int base=0;\n    for (int j=0; j<5; ++j) {\n      char n, s;\n      scanf(\" %c%c\", &n, &s);\n      int num=0;\n      switch (n) {\n      case 'A':\n        num = 1;\n        break;\n      case 'T':\n        num = 10;\n        break;\n      case 'J':\n        num = 11;\n        break;\n      case 'Q':\n        num = 12;\n        break;\n      case 'K':\n        num = 13;\n        break;\n      default:\n        num = n-'0';\n      }\n\n      cards.emplace_back(num, s);\n      base += score[s][num];\n    }\n\n    bool royal=is_royal(cards);\n    bool straight=is_straight(cards);\n    bool flush=is_flush(cards);\n    std::vector<int> mul=multi(cards);\n    std::sort(mul.begin(), mul.end());\n\n    intmax_t res=base;\n    if (royal && flush) {\n      res *= hands[9];\n    } else if (straight && flush) {\n      res *= hands[8];\n    } else if (mul.size() == 1 && mul[0] == 4) {\n      res *= hands[7];\n    } else if (mul.size() == 2 && mul[0] == 2 && mul[1] == 3) {\n      res *= hands[6];\n    } else if (flush) {\n      res *= hands[5];\n    } else if (straight || royal) {\n      res *= hands[4];\n    } else if (mul.size() == 1 && mul[0] == 3) {\n      res *= hands[3];\n    } else if (mul.size() == 2 && mul[0] == 2 && mul[1] == 2) {\n      res *= hands[2];\n    } else if (mul.size() == 1 && mul[0] == 2) {\n      res *= hands[1];\n    } else {\n      res = 0;\n    }\n    printf(\"%jd\\n\", res);\n  }\n  return 0;\n}\n\nint main() {\n  for (int i=0; true; ++i) {\n    if (testcase_ends(i == 0)) return 0;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cassert>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\nusing namespace std;\ntypedef pair<int,int> Pox;//役、得点: 0->ワンペア 1->２ペア 2-> ３カード 3->ストレート , 4->フラッシュ, 5->フルハウス, 6-> フォーカード, 7->ストレートフラッシュ, 8->ロイヤルストレートフラッシュ\nstruct P\n{\n  int v;\n  char c;\n  P(int v=-1,char c='$'):v(v),c(c){}\n  bool operator < (const P &a)const\n  {\n    if(v != a.v)return v < a.v;\n    return c < a.c;\n  }\n};\n\nint S[15],C[15],H[15],D[15],ATK[15];\n\nint main()\n{\n  int n;\n  bool f = true;\n  while(cin >> n)\n    {  \n      if(f)f = false;\n      else cout << endl;\n      rep(i,13)cin >> S[i];\n      rep(i,13)cin >> C[i];\n      rep(i,13)cin >> H[i];\n      rep(i,13)cin >> D[i];\n      rep(i,9)cin >> ATK[i];\n    \n      rep(F,n)\n\t{\n\t  vector<Pox> ans;\n\t  bool suit = true;\n\t  vector<P> vec(5);\n\t  int point = 0;\n\t  int RSF = 0;\n\t  map<int,int> index;\n\t  vector<int> value;\n\n\t  rep(i,5)\n\t    {\n\t      char a,b,dummy;\n\t      int A;\n\t      string s;\n\t      cin >> s;\n\t      a = s[0];\n\t      b = s[1];\n\t      if('2' <= a && a <= '9')A = a-'0';\n\t      else if(a == 'A')A = 1;\n\t      else if(a == 'T')A = 10;\n\t      else if(a == 'J')A = 11;\n\t      else if(a == 'Q')A = 12;\n\t      else if(a == 'K')A = 13;\n\t      else assert(false);\n\t      vec[i].v = A;\n\t      vec[i].c = b;\n\t      value.push_back(A);\n\t      if(i && vec[i].c != vec[i-1].c)suit = false;\n\n\t      if(b == 'S')point += S[vec[i].v-1];\n\t      else if(b == 'C')point += C[vec[i].v-1];\n\t      else if(b == 'H')point += H[vec[i].v-1];\n\t      else if(b == 'D')point += D[vec[i].v-1];\n\t      if(vec[i].v == 1 || (10 <= vec[i].v && vec[i].v <= 13))RSF = RSF|(1<<vec[i].v);\n\t      index[vec[i].v]++;\n\t    }\n\n\n\t  if(__builtin_popcount(RSF) == 5 && suit)\n\t    {\n\t      cout << point*ATK[8] << endl;\n\t      continue;\n\t    }\n\n\t  sort(value.begin(),value.end());\n\t  bool RB = true;\n\t  REP(i,1,value.size())\n\t    if(value[i] != value[i-1]+1)\n\t      {\n\t\tRB = false;\n\t\tbreak;\n\t      }\n\n\t  if(RB && suit)\n\t    {\n\t      cout << point*ATK[7] << endl;\n\t      continue;\n\t    }\n\n\t  bool four = false;\n\t  for(map<int,int>::iterator it = index.begin();it != index.end();it++)\n\t    if(it->second == 2 || it->second == 3)break;\n\t    else if(it->second == 4)\n\t      {\n\t\tfour = true;\n\t\tbreak;\n\t      }\n\n\t  if(four)\n\t    {\n\t      cout << point*ATK[6] << endl;\n\t      continue;\n\t    }\n\n\t  int one=0,three=0;\n\t  for(map<int,int>::iterator it = index.begin();it != index.end();it++)\n\t    {\n\t      if(it->second == 2)one++;\n\t      else if(it->second == 3)three++;\n\t    }\n\n\t  if(one == 1 && three == 1)\n\t    {\n\t      cout << point*ATK[5] << endl;\n\t      continue;\n\t    }\t \n\n\t  if(suit)\n\t    {\n\t      cout << point*ATK[4] << endl;\n\t      continue;\n\t    }\n\n\t  if(RB || __builtin_popcount(RSF) == 5)\n\t    {\n\t      cout << point*ATK[3] << endl;\n\t      continue;\n\t    }\n\n\t  if(three == 1)\n\t    {\n\t      cout<< point*ATK[2] << endl;\n\t      continue;\n\t    }\n\n\t  if(one == 2)\n\t    {\n\t      cout << point*ATK[1] << endl;\n\t      continue;\n\t    }\n\n\t  if(one == 1)\n\t    {\n\t      cout << point*ATK[0] << endl;\n\t      continue;\n\t    }\n\t  cout << 0 << endl;\n\t}\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\n\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\n#define rep(i, n) FOR(i, 0, n)\n#define MP make_pair\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nint base[5][20];\nint rate[10];\n\nint check(int num[5], int suit[5]){\n\tsort(num, num+5);\n\tbool fl = true;\n\trep(i, 4) fl &= suit[i]==suit[4];\n\tbool st = true;\n\trep(i, 4){\n\t\tif(num[i] == 1 && num[i+1] == 10) continue;\n\t\tst &= num[i+1]-num[i]==1;\n\t}\n\n\tint cards[5] = {};\n\tFOR(i, 1, 14){\n\t\tint cnt = 0;\n\t\trep(j, 5) cnt += i==num[j];\n\t\tcards[cnt]++;\n\t}\n\n\tif(fl && st){\n\t\tif(num[0] == 1 && num[4] == 13) return 9;\n\t\treturn 8;\n\t}\n\tif(cards[4]) return 7;\n\tif(cards[3] && cards[2]) return 6;\n\tif(fl) return 5;\n\tif(st) return 4;\n\tif(cards[3]) return 3;\n\tif(cards[2]>1) return 2;\n\tif(cards[2]) return 1;\n\treturn 0;\n}\n\nint main(){\n\tmap<char, int> dec;\n\trep(i, 10){\n\t\tdec['0'+i] = i;\n\t}\n\tdec['T'] = 10;\n\tdec['J'] = 11;\n\tdec['Q'] = 12;\n\tdec['K'] = 13;\n\tdec['A'] = 1;\n\n\tdec['S'] = 0;\n\tdec['C'] = 1;\n\tdec['H'] = 2;\n\tdec['D'] = 3;\n\n\tint casenum = 0;\n\tint T;\n\twhile(cin >> T){\n\t\tif(casenum++) cout << endl;\n\t\trep(i, 4) FOR(j, 1, 14) cin >> base[i][j];\n\t\tFOR(i, 1, 10) cin >> rate[i];\n\t\trep(i, T){\n\t\t\tint num[5], suit[5];\n\t\t\tint basepnt = 0;\n\t\t\trep(j, 5){\n\t\t\t\tchar a, b;\n\t\t\t\tcin >> a >> b;\n\t\t\t\tnum[j] = dec[a];\n\t\t\t\tsuit[j] = dec[b];\n\t\t\t\tbasepnt += base[suit[j]][num[j]];\n\t\t\t}\n\t\t\tcout << basepnt*rate[check(num, suit)] << endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, base[4][13], rate[10];\nstring mark = \"SCHD\";\n\nint getNumber(char c) {\n\tif (c == 'A') return 0;\n\tif (c == 'T') return 9;\n\tif (c == 'J') return 10;\n\tif (c == 'Q') return 11;\n\tif (c == 'K') return 12;\n\treturn c - '0' - 1;\n}\n\nbool isStraight(string card) {\n\tint tmp[5];\n\tfor (int i=0; i<5; ++i) tmp[i] = getNumber(card[2 * i]);\n\tsort(tmp, tmp + 5);\n\tfor (int i=0; i<4; ++i) if (tmp[i]+1 != tmp[i+1]) return false;\n\treturn true;\n}\n\nbool isFlush(string card) {\n\tchar tmp = card[1];\n\tfor (int i=1;i<5; ++i) if (tmp != card[2*i+1]) return false;\n\treturn true;\n}\n\nbool isRoyal(string card) {\n\tset< char > num_set;\n\tfor (int i=0; i<5; ++i) num_set.insert(card[2*i]);\n\tset< char > yes = {'A','T','J','Q','K'};\n\treturn num_set == yes;\n}\n\nint getID(string card) {\n\tint cnt[13];\n\tmemset(cnt, 0, sizeof(cnt));\n\tfor (int i=0; i<5; ++i) ++cnt[getNumber(card[2 * i])];\n\t\n\tint pair_num = 0, max_card = 0;\n\tfor (int i=0; i<13; ++i) {\n\t\tif (cnt[i] == 2) ++pair_num;\n\t\tmax_card = max(max_card, cnt[i]);\n\t}\n\t\n\tif (max_card == 2 && pair_num == 1) return 0; // one pair\n\tif (max_card == 2 && pair_num == 2) return 1; // two pair\n\t\n\tif (max_card == 3) {\n\t\tif (pair_num == 0) return 2; // three card\n\t\treturn 5; // full house\n\t}\n\t\n\tbool royal = isRoyal(card), straight = isStraight(card), flush = isFlush(card);\n\t\n\tif (royal && flush) return 8;\n\tif (straight && flush) return 7;\t\n\tif (straight) return 3;\n\tif (flush) return 4;\n\t\n\tif (max_card == 4) return 6;\n\t\n\treturn 9;\n}\n\nvoid solve() {\n\tfor (int i=0; i<n; ++i) {\n\t\tstring card;\n\t\tint sum = 0;\n\t\tfor (int j=0; j<5; ++j) {\n\t\t\tstring cj;\n\t\t\tcin >> cj;\n\t\t\tcard += cj;\n\t\t\tsum += base[mark.find(cj[1])][getNumber(cj[0])];\n\t\t}\n\t\tcout << sum * rate[getID(card)] << endl;\n\t}\n}\n\nint main() {\n\trate[9] = 0;\n\twhile (cin >> n) {\n\t\tfor (int i=0; i<4; ++i) for (int j=0; j<13; ++j) cin >> base[i][j];\n\t\tfor (int i=0; i<9; ++i) cin >> rate[i];\n\t\tsolve();\n\t\tcout << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint c[4][15];\nchar st[7]=\"SCHD\";\nchar nm[17]=\".23456789TJQKA\";\nint d[20];\nchar in[4];\npair<int,int>p[10];\nint calc(){\n\tbool flash=true;\n\tfor(int i=0;i<5;i++)for(int j=i+1;j<5;j++)\n\t\tif(p[i].second!=p[j].second)flash=false;\n\tbool st=true;\n\tfor(int i=0;i<4;i++)if(p[i].first+1!=p[i+1].first)st=false;\n\tif(st&&flash&&p[0].first==9)return d[8];\n\tif(st&&flash)return d[7];\n\tif(p[0].first==p[3].first||p[1].first==p[4].first)return d[6];\n\tif((p[0].first==p[1].first&&p[2].first==p[4].first)||(p[0].first==p[2].first&&p[3].first==p[4].first))return d[5];\n\tif(flash)return d[4];\n\tif(st)return d[3];\n\tif(p[0].first==p[2].first||p[1].first==p[3].first||p[2].first==p[4].first)return d[2];\n\tif((p[0].first==p[1].first&&p[2].first==p[3].first)||\n\t(p[0].first==p[1].first&&p[3].first==p[4].first)||\n\t(p[1].first==p[2].first&&p[3].first==p[4].first))return d[1];\n\tfor(int i=0;i<4;i++)if(p[i].first==p[i+1].first)return d[0];\n\treturn 0;\n}\nint main(){\n\tint a;\n\tbool tc=false;\n\twhile(~scanf(\"%d\",&a)){\n\t\t//if(tc)printf(\"\\n\");\n\t\tfor(int i=0;i<4;i++)for(int j=0;j<13;j++)\n\t\t\tscanf(\"%d\",&c[i][j]);\n\t\tfor(int i=0;i<4;i++)c[i][13]=c[i][0];\n\t\tfor(int i=0;i<9;i++)scanf(\"%d\",d+i);\n\t\twhile(a--){\n\t\t\tint ks=0;\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tscanf(\"%s\",in);\n\t\t\t\tfor(int j=1;j<=13;j++){\n\t\t\t\t\tif(in[0]==nm[j])p[i].first=j;\n\t\t\t\t}\n\t\t\t\tfor(int j=0;j<4;j++){\n\t\t\t\t\tif(in[1]==st[j])p[i].second=j;\n\t\t\t\t}\n\t\t\t\tks+=c[p[i].second][p[i].first];\n\t\t\t//\tprintf(\"(%d %d) \",p[i].first,p[i].second);\n\t\t\t}\n\t\t\tstd::sort(p,p+5);\n\t\t\tint sc=calc();\n\t\t\tprintf(\"%d\\n\",ks*sc);\n\t\t}\n\t\ttc=true;\n\t\tprintf(\"\\n\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <queue>\n\n#define i64 long long\n#define ui64 unsigned long long\n#define REP(i,n) for(int (i)=0;(i)<(n);i++)\n#define REP2(i,k,n) for(int (i)=(k);(i)<(n);i++)\n#define ATCODER 1000000007\nusing namespace std;\n \n////////////////////////\n\nint c_points[5][14];\nint h_points[10];\n\nstruct card{\n  int num;\n  int mark;\n  card(char n_,char m_):num(),mark(){\n    switch(m_){\n      case 'S': mark = 0; break;\n      case 'H': mark = 2; break;\n      case 'D': mark = 3; break;\n      case 'C': mark = 1; break;\n    }\n    if(('0'<=n_)&&(n_<='9'))num=n_-'0';\n    else{\n      switch(n_){\n        case 'T': num = 10; break;\n        case 'J': num = 11; break;\n        case 'Q': num = 12; break;\n        case 'K': num = 13; break;\n        case 'A': num = 1; break;\n      }\n    }\n  }\n  bool operator< (const card& a){\n    return num==a.num?mark<a.mark:num<a.num;\n  }\n};\n\nbool straight(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if((hand[i+1].num-hand[i].num==1)||\\\n        ((!i)&&(hand[4].num==13&&hand[i].num==1)));\n    else return false;\n  }\n  return true;\n}\n\nbool flush(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].mark!=hand[i+1].mark)return false;\n  }\n  return true;\n}\n\nbool no_pair(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool one_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=4;i++){\n    if(i==4)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  for(int i=p+1;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool two_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=2;i++){\n    if(i==2)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  if(p==0){\n    return hand[2].num==hand[3].num?hand[3].num!=hand[4].num:hand[3].num==hand[4].num;\n  }\n  if(p==1){\n    return hand[3].num==hand[4].num;\n  }\n}\n\nbool three_card(vector<card>& hand){\n  if(hand[0].num==hand[2].num&&hand[0].num!=hand[3].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num==hand[3].num&&hand[3].num!=hand[4].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num!=hand[2].num&&hand[2].num==hand[4].num)return true;\n  return false;\n}\n\nbool fullhouse(vector<card>& hand){\n  int p;\n  if(hand[1].num!=hand[2].num){\n    if(hand[0].num!=hand[1].num)return false;\n    for(int i=2;i<4;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }else{\n    if(hand[3].num!=hand[4].num)return false;\n    for(int i=0;i<2;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }\n}\n\nbool straight_flush(vector<card>& hand){\n  return straight(hand)&&flush(hand);\n}\n\nbool four_card(vector<card>& hand){\n  return hand[0].num==hand[3].num||hand[1].num==hand[4].num;\n}\n\nbool royal_straight_flush(vector<card>& hand){\n  if(straight_flush(hand)){\n    if(hand[0].num==1&&hand[4].num==13)return true;\n  }\n  return false;\n}\n\n\ni64 solve(vector<card>& hand){\n  sort(hand.begin(),hand.end());\n  // for(int i=0;i<5;i++){\n  //   cout << hand[i].num << \" \" << hand[i].mark << endl;\n  // }\n  i64 res=0LL;\n  \n  for(int i=0;i<5;i++){\n    int m_=hand[i].mark;\n    int n_=hand[i].num;\n    res+=(i64)c_points[m_][n_-1];\n  }\n  // cout << res << endl;\n  if(royal_straight_flush(hand)){\n    res*=(i64)h_points[8];\n    // cout << 0 << endl;\n    return res;\n  }\n  if(straight_flush(hand)){\n    res*=(i64)h_points[7];\n    // cout << 8 << endl;\n    return res;\n  }\n  if(four_card(hand)){\n    res*=(i64)h_points[6];\n    // cout << 7 << endl;\n    return res;\n  }\n  if(straight(hand)){\n    res*=(i64)h_points[3];\n    // cout << 4 << endl;\n    return res;\n  }\n  if(flush(hand)){\n    res*=(i64)h_points[4];\n    // cout << 5 << endl;\n    return res;\n  }\n  if(fullhouse(hand)){\n    res*=(i64)h_points[5];\n    // cout << 6 << endl;\n    return res;\n  }\n  if(one_pair(hand)){\n    res*=(i64)h_points[0];\n    // cout << 1 << endl;\n    return res;\n  }\n  if(two_pair(hand)){\n    res*=(i64)h_points[1];\n    // cout << 2 << endl;\n    return res;\n  }\n  if(three_card(hand)){\n    res*=(i64)h_points[2];\n    // cout << 3 << endl;\n    return res;\n  }\n  if(no_pair(hand)){\n    return (i64)0;\n  }\n  \n  return -1;\n}\n\nint main(){\n  int n;\n  while(true){\n    fill(&c_points[0][0],&c_points[4][13],0);\n    fill(&h_points[0],&h_points[9],0);\n    if(scanf(\"%d\",&n)==EOF)break;\n    for(int i=0;i<4;i++){\n      for(int k=0;k<13;k++){\n        cin >> c_points[i][k];\n      }\n    }\n    for(int i=0;i<9;i++){\n      cin >> h_points[i];\n    }\n    char a[3];\n    vector<card> hands;\n    for(int i=0;i<n;i++){\n      for(int k=0;k<5;k++){\n        cin >> a;\n        hands.push_back(card(a[0],a[1]));\n      }\n      cout << solve(hands) << endl;\n      hands.clear();\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <cctype>\nusing namespace std;\n\nint score[14][4];\nint rate[10];\n\ntypedef pair<int, int> card;\ntypedef vector<card> cards;\n\nint toNum(char a)\n{\n\tif(isdigit(a)) return a-'0';\n\tif(a=='T') return 10;\n\tif(a=='J') return 11;\n\tif(a=='Q') return 12;\n\tif(a=='K') return 13;\n\treturn a-'A'+1;\n}\n\nint toNum2(char a)\n{\n\tif(a=='S') return 0;\n\tif(a=='C') return 1;\n\tif(a=='H') return 2;\n\t\n\treturn 3;\n}\n\ncards input()\n{\n\tcards in;\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tin.push_back(make_pair(toNum(s[0]), toNum2(s[1])));\n\t}\n\t\n\tsort(in.begin(), in.end());\n\t\n\treturn in;\n}\n\nvector<int> calcPair(cards in)\n{\n\tvector<int> ret;\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first]++;\n\t}\n\t\n\tfor(int i=1; i<=13; i++)\n\t{\n\t\tif(num[i]!=0) ret.push_back(num[i]);\n\t}\n\t\n\tsort(ret.begin(), ret.end());\n\t\n\treturn ret;\n}\n\nbool isFlash(cards in)\n{\n\tfor(int i=1; i<5; i++)\n\t\tif(in[0].second!=in[i].second) return false;\n\t\t\n\treturn true;\n}\n\nint isStraight(cards in, vector<int> pr)\n{\n\tif(pr.size()!=5) return 0;\n\t\n\tint num[14]={0};\n\tfor(int i=0; i<5; i++)\n\t{\n\t\tnum[in[i].first+(4-i)]++;\n\t}\n\t\n\tif(num[in[4].first]==5) return 1;\n\tif(num[in[4].first]==4&&num[5]) return 2;\n\t\n\treturn 0;\n}\n\nint total(cards in)\n{\n\tint ret=0;\n\tfor(int i=0; i<5; i++)\n\t\tret+=score[in[i].first][in[i].second];\n\t\t\n\treturn ret;\n}\n\n\nint calc(cards in)\n{\n\tvector<int> pr=calcPair(in);\n\tint ret=0,sz=pr.size();\n\t\n\tif(pr[sz-1]==2) ret=1;\n\tif(pr[sz-1]==2&&pr[sz-2]==2) ret=2;\n\tif(pr[sz-1]==3) ret=3;\n\tif(isStraight(in,pr)!=0) ret=4;\n\tif(isFlash(in)) ret=5;\n\tif(pr[sz-2]==2&&pr[sz-1]==3) ret=6;\n\tif(pr[sz-1]==4) ret=7;\n\tif(isStraight(in,pr)!=0&&isFlash(in)) ret=8;\n\tif(isStraight(in,pr)==2&&isFlash(in)) ret=9;\n\t\n\treturn total(in)*rate[ret];\n}\n\nint main()\n{\n\tbool flg=true;\n\tint N;\n\twhile(cin >> N)\n\t{\n\t\tif(flg) flg=false;\n\t\telse cout << endl;\n\t\t\n\t\tfor(int i=0; i<4; i++)\n\t\tfor(int j=0; j<13; j++)\n\t\t\tcin >> score[j+1][i];\n\t\t\n\t\trate[0]=0;\n\t\tfor(int i=0; i<9; i++)\n\t\t\tcin >> rate[i+1];\n\t\t\t\n\t\tfor(int i=0; i<N; i++)\n\t\t{\n\t\t\tcards cs=input();\n\t\t\tcout << calc(cs) << endl;\n\t\t}\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <queue>\n\n#define i64 long long\n#define ui64 unsigned long long\n#define REP(i,n) for(int (i)=0;(i)<(n);i++)\n#define REP2(i,k,n) for(int (i)=(k);(i)<(n);i++)\n#define ATCODER 1000000007\nusing namespace std;\n \n////////////////////////\n\nint c_points[5][14];\nint h_points[10];\n\nstruct card{\n  int num;\n  int mark;\n  card(char n_,char m_):num(),mark(){\n    switch(m_){\n      case 'S': mark = 0; break;\n      case 'H': mark = 2; break;\n      case 'D': mark = 3; break;\n      case 'C': mark = 1; break;\n    }\n    if(('0'<=n_)&&(n_<='9'))num=n_-'0';\n    else{\n      switch(n_){\n        case 'T': num = 10; break;\n        case 'J': num = 11; break;\n        case 'Q': num = 12; break;\n        case 'K': num = 13; break;\n        case 'A': num = 1; break;\n      }\n    }\n  }\n  bool operator< (const card& a){\n    return num==a.num?mark<a.mark:num<a.num;\n  }\n};\n\nbool straight(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if((hand[i+1].num-hand[i].num==1)||\\\n        ((!i)&&(hand[4].num==13&&hand[i].num==1)));\n    else return false;\n  }\n  return true;\n}\n\nbool flush(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].mark!=hand[i+1].mark)return false;\n  }\n  return true;\n}\n\nbool no_pair(vector<card>& hand){\n  for(int i=0;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool one_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=4;i++){\n    if(i==4)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  for(int i=p+1;i<4;i++){\n    if(hand[i].num==hand[i+1].num)return false;\n  }\n  return true;\n}\n\nbool two_pair(vector<card>& hand){\n  int p;\n  for(int i=0;i<=2;i++){\n    if(i==2)return false;\n    if(hand[i].num==hand[i+1].num){\n      p=i;break;\n    }\n  }\n  if(p==0){\n    return hand[2].num==hand[3].num?hand[3].num!=hand[4].num:hand[3].num==hand[4].num;\n  }\n  if(p==1){\n    return hand[3].num==hand[4].num;\n  }\n}\n\nbool three_card(vector<card>& hand){\n  if(hand[0].num==hand[2].num&&hand[0].num!=hand[3].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num==hand[3].num&&hand[3].num!=hand[4].num)return true;\n  if(hand[0].num!=hand[1].num&&hand[1].num!=hand[2].num&&hand[2].num==hand[4].num)return true;\n  return false;\n}\n\nbool fullhouse(vector<card>& hand){\n  int p;\n  if(hand[1].num!=hand[2].num){\n    if(hand[0].num!=hand[1].num)return false;\n    for(int i=2;i<4;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }else{\n    if(hand[3].num!=hand[4].num)return false;\n    for(int i=0;i<2;i++){\n      if(hand[i].num!=hand[i+1].num)return false;\n    }\n    return true;\n  }\n}\n\nbool straight_flush(vector<card>& hand){\n  return straight(hand)&&flush(hand);\n}\n\nbool four_card(vector<card>& hand){\n  return hand[0].num==hand[3].num||hand[1].num==hand[4].num;\n}\n\nbool royal_straight_flush(vector<card>& hand){\n  if(straight_flush(hand)){\n    if(hand[0].num==1)return true;\n  }\n  return false;\n}\n\n\ni64 solve(vector<card>& hand){\n  sort(hand.begin(),hand.end());\n  // for(int i=0;i<5;i++){\n  //   cout << hand[i].num << \" \" << hand[i].mark << endl;\n  // }\n  i64 res=0LL;\n  \n  for(int i=0;i<5;i++){\n    int m_=hand[i].mark;\n    int n_=hand[i].num;\n    res+=(i64)c_points[m_][n_-1];\n  }\n  // cout << res << endl;\n  if(royal_straight_flush(hand)){\n    res*=(i64)h_points[8];\n    // cout << 0 << endl;\n    return res;\n  }\n  if(straight_flush(hand)){\n    res*=(i64)h_points[7];\n    // cout << 8 << endl;\n    return res;\n  }\n  if(four_card(hand)){\n    res*=(i64)h_points[6];\n    // cout << 7 << endl;\n    return res;\n  }\n  if(straight(hand)){\n    res*=(i64)h_points[3];\n    // cout << 4 << endl;\n    return res;\n  }\n  if(flush(hand)){\n    res*=(i64)h_points[4];\n    // cout << 5 << endl;\n    return res;\n  }\n  if(fullhouse(hand)){\n    res*=(i64)h_points[5];\n    // cout << 6 << endl;\n    return res;\n  }\n  if(one_pair(hand)){\n    res*=(i64)h_points[0];\n    // cout << 1 << endl;\n    return res;\n  }\n  if(two_pair(hand)){\n    res*=(i64)h_points[1];\n    // cout << 2 << endl;\n    return res;\n  }\n  if(three_card(hand)){\n    res*=(i64)h_points[2];\n    // cout << 3 << endl;\n    return res;\n  }\n  if(no_pair(hand)){\n    return (i64)0;\n  }\n  \n  return -1;\n}\n\nint main(){\n  int n;\n  while(true){\n    fill(&c_points[0][0],&c_points[4][13],0);\n    fill(&h_points[0],&h_points[9],0);\n    if(scanf(\"%d\",&n)==EOF)break;\n    for(int i=0;i<4;i++){\n      for(int k=0;k<13;k++){\n        cin >> c_points[i][k];\n      }\n    }\n    for(int i=0;i<9;i++){\n      cin >> h_points[i];\n    }\n    char a[3];\n    vector<card> hands;\n    for(int i=0;i<n;i++){\n      for(int k=0;k<5;k++){\n        cin >> a;\n        hands.push_back(card(a[0],a[1]));\n      }\n      cout << solve(hands) << endl;\n      hands.clear();\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin >> kihon[i][j];\n      }\n    }\n    \n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n    \n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n\tchar temp;\n\tcin >> temp >> tehudac[i];\n\tif(temp>'1' && temp<='9'){\n\t  tehudan[i]=temp-'0';\n\t}\n\telse if(temp=='T') tehudan[i]=10;\n\telse if(temp=='J') tehudan[i]=11;\n\telse if(temp=='Q') tehudan[i]=12;\n\telse if(temp=='K') tehudan[i]=13;\n\telse if(temp=='A') tehudan[i]=1;\n\tgetchar();\n      }\n      \n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n\tif(tehudac[i]=='S') iro=0;\n\telse if(tehudac[i]=='C') iro=1;\n\telse if(tehudac[i]=='H') iro=2;\n\telse if(tehudac[i]=='D') iro=3;\n\t\n\tsum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n     \n      int yaku;\n      yaku=hantei();\n      \n      int ans;\n      if(yaku==-1){\n\tcout << 0 << endl;\n      }\n      else{\n\tans=bairitu[yaku]*sum;\n\tcout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n  \nint kumi(){\n  int count=0;\n\n  for(int i=0;i<4;i++){\n    int j;\n    if(i==0){\n      if(tehudan[i]==tehudan[i+1] && tehudan[i]!=tehudan[i+2] && tehudan[i]!=tehudan[i+3] && tehudan[i]!=tehudan[i+4]){\n\tcontinue;\n      }\n    }\n    if(i==1){\n      if(tehudan[i]==tehudan[i+1] && tehudan[i]!=tehudan[i+2] && tehudan[i]!=tehudan[i+3]){\n\tcontinue;\n      }\n    }\n    if(i==2){\n      if(tehudan[i]==tehudan[i+1] && tehudan[i]!=tehudan[i+2]){\n\tcontinue;\n      }\n    }\n    if(tehudan[i]==tehudan[i+1] && i==3){\n      count++;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1 && b!=1) return 8;\n  else if(b==1 && c==1 && b!=2) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a==1) return 5;\n  else if(c==1 && b==0) return 4;\n  else if(b==1) return 3;\n  else if(b==2) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  int temp=tehudan[0];\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==13) return 2;\n  else if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==temp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n  char mozi;\n  mozi=tehudac[a];\n  tehudac[a]=tehudac[b];\n  tehudac[b]=mozi;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\nint point[4][13];\nint bai[9];\npair<int, int> hand[5];\nmap<char, int> convNum;\nmap<char, int> convCol;\n\nvoid init(){\n  convNum['A'] = 0;\n  for(int i=2;i<=9;i++){\n    convNum['0'+i] = i-1;\n  }\n  convNum['T'] = 9;\n  convNum['J'] = 10;\n  convNum['Q'] = 11;\n  convNum['K'] = 12;\n  convCol['S'] = 0;\n  convCol['C'] = 1;\n  convCol['H'] = 2;\n  convCol['D'] = 3;\n}\n\nbool roi(){\n  int p = hand[0].second;\n  for(int i=1;i<5;i++){\n    if(p != hand[i].second) return false;\n  }\n  if(hand[0].first == 0 &&\n     hand[1].first == 9 &&\n     hand[2].first == 10 &&\n     hand[3].first == 11 &&\n     hand[4].first == 12\n    ) return true;\n  return false;\n}\n\nbool four(){\n  int tmp = hand[0].first;\n  if(hand[1].first == tmp &&\n     hand[2].first == tmp &&\n     hand[3].first == tmp \n    ) return true;\n  tmp = hand[4].first;\n  if(hand[1].first == tmp &&\n     hand[2].first == tmp &&\n     hand[3].first == tmp \n    ) return true;\n  return false;\n}\n\nbool st(){\n  if(hand[0].first == 0 &&\n     hand[1].first == 9 &&\n     hand[2].first == 10 &&\n     hand[3].first == 11 &&\n     hand[4].first == 12\n    ) return true;\n  int tmp = hand[0].first;\n  for(int i=1;i<5;i++){\n    if(tmp+1 != hand[i].first) return false;\n    tmp = hand[i].first;\n  }\n  return true;\n}\n\nbool fra(){\n  int tmp = hand[0].second;\n  for(int i=1;i<5;i++){\n    if(tmp != hand[i].second) return false;\n  }\n  return true;\n}\n\nbool fru(){\n  if(hand[0].first == hand[1].first &&\n     hand[0].first == hand[2].first &&\n     hand[3].first == hand[4].first\n    ) return true;\n  if(hand[0].first == hand[1].first &&\n     hand[2].first == hand[3].first &&\n     hand[2].first == hand[4].first\n    ) return true;\n  return false;\n}\n\nbool three(){\n  for(int i=2;i<5;i++){\n    if(hand[i].first == hand[i-1].first && hand[i].first == hand[i-2].first) return true;\n  }\n  return false;\n}\n\nbool two(){\n  int i;\n  bool f = false;\n  for(i=1;i<5;i++){\n    if(hand[i].first == hand[i-1].first){\n      i++;\n      f = true;\n      break;\n    }\n  }\n  if(!f) return false;\n  for(;i<5;i++){\n    if(hand[i].first == hand[i-1].first) return true;\n  }\n  return false;\n}\n\nbool one(){\n  for(int i=1;i<5;i++){\n    if(hand[i].first == hand[i-1].first) return true;\n  }\n}\n\nint calc(){\n  sort(hand, hand+5);\n  if(roi()) return bai[8];\n  if(st() && fra()) return bai[7];\n  if(four()) return bai[6];\n  if(fru()) return bai[5];\n  if(fra()) return bai[4];\n  if(st()) return bai[3];\n  if(three()) return bai[2];\n  if(two()) return bai[1];\n  if(one()) return bai[0];\n  return 0;\n}\n\nint solve(){\n  int base = 0;\n  for(int i=0;i<5;i++){\n    base += point[hand[i].second][hand[i].first];\n  }\n  return base * calc();\n}\n\nmain(){\n  init();\n  int n;\n  bool f = true;\n  while(cin >> n){\n    if(!f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n        cin >> point[i][j];\n      }\n    }\n    for(int i=0;i<9;i++){\n      cin >> bai[i];\n    }\n    for(int i=0;i<n;i++){\n      for(int j=0;j<5;j++){\n        char a, b;\n        cin >> a >> b;\n        hand[j].first = convNum[a];\n        hand[j].second = convCol[b];\n      }\n      cout << solve() << endl;\n    }\n    f = false;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint kihon[4][13];\nint bairitu[9];\nint tehudan[5];\nchar tehudac[5];\nint kumi();\nint st();\nint fl();\nint pair2();\nint hantei();\nvoid sort(int, int);\nvoid change(int,int);\n\nint main(){\n  int f=0;\n  while(1){\n    int n;\n    if(scanf(\"%d\", &n)==EOF) break;\n    if(f) cout << endl;\n    for(int i=0;i<4;i++){\n      for(int j=0;j<13;j++){\n\tcin >> kihon[i][j];\n      }\n    }\n    \n    for(int i=0;i<9;i++){\n      cin >> bairitu[i];\n    }\n    getchar();\n    \n    for(int count=0;count<n;count++){\n      for(int i=0;i<5;i++){\n\tchar temp;\n\tcin >> temp >> tehudac[i];\n\tif(temp>'1' && temp<='9'){\n\t  tehudan[i]=temp-'0';\n\t}\n\telse if(temp=='T') tehudan[i]=10;\n\telse if(temp=='J') tehudan[i]=11;\n\telse if(temp=='Q') tehudan[i]=12;\n\telse if(temp=='K') tehudan[i]=13;\n\telse if(temp=='A') tehudan[i]=1;\n\tgetchar();\n      }\n      \n      int sum=0;\n      int iro;\n      for(int i=0;i<5;i++){\n\tif(tehudac[i]=='S') iro=0;\n\telse if(tehudac[i]=='C') iro=1;\n\telse if(tehudac[i]=='H') iro=2;\n\telse if(tehudac[i]=='D') iro=3;\n\t\n\tsum+=kihon[iro][tehudan[i]-1];\n      }\n      sort(0, 4);\n\n      int yaku;\n      yaku=hantei();\n      \n      int ans;\n      if(yaku==-1){\n\tcout << 0 << endl;\n      }\n      else{\n\tans=bairitu[yaku]*sum;\n\tcout << ans << endl;\n      }\n    }\n    f=1;\n  }\n  return 0;\n}\n\n\n  \nint kumi(){\n  int count=0;\n  for(int i=0;i<4;i++){\n    if(tehudan[i]==tehudan[i+1]){\n      count++;\n    }\n  }\n  return count;\n}\n\nint hantei(){\n  int a, b, c, d;\n  a = kumi();\n  b = st();\n  c = fl();\n  d = pair2();\n  if(b==2 && c==1) return 8;\n  else if(b==1 && c==1) return 7;\n  else if(d==4) return 6;\n  else if(d==3 && a==1) return 5;\n  else if(c==1) return 4;\n  else if(b==1) return 3;\n  else if(d==3) return 2;\n  else if(a==2) return 1;\n  else if(a==1) return 0;\n  else return -1;\n}\n\nint pair2(){\n  for(int i=0;i<2;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2] && tehudan[i]==tehudan[i+3])\n      return 4;\n  }\n  for(int i=0;i<3;i++){\n    if(tehudan[i]==tehudan[i+1] && tehudan[i]==tehudan[i+2]) return 3;\n  }\n}\n\nint st(){\n  if(tehudan[0]==1 && tehudan[1]==10 && tehudan[2]==11 && tehudan[3]==12 && tehudan[4]==13) return 2;\n\n  int temp=tehudan[0];\n  if(tehudan[1]==temp+1 && tehudan[2]==temp+2 && tehudan[3]==temp+3 && tehudan[4]==temp+4) return 1;\n  else return 0;\n}\n\nint fl(){\n  for(int i=1;i<5;i++){\n    if(tehudac[0]!=tehudac[i]){\n      return 0;\n    }\n  }\n  return 1;\n}\n\nvoid sort(int left, int right){\n  int i, j, temp;\n  i=left;\n  j=right;\n  temp=tehudan[(left+right)/2];\n\n  while(1){\n    while(temp>tehudan[i]) i++;\n    while(temp<tehudan[j]) j--;\n\n    if(i>=j) break;\n\n    change(i, j);\n    i++;\n    j--;\n  }\n  if(left<i-1) sort(left, i-1);\n  if(j+1<right) sort(j+1, right);\n}\n\nvoid change(int a, int b){\n  int temp;\n  temp=tehudan[a];\n  tehudan[a]=tehudan[b];\n  tehudan[b]=temp;\n  char mozi;\n  mozi=tehudac[a];\n  tehudac[a]=tehudac[b];\n  tehudac[b]=mozi;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <string>\n\nusing namespace std;\n\nint n;\nint score[200][200];\nint markToNum[200];\nint per[10];\n\n\nbool isOnePair(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]==2)\n            return true;\n    }\n    return false;\n}\nbool isTwoPair(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]>=2)\n            cnt++;\n    }\n    if(cnt>=2)\n        return true;\n    return false;\n}\nbool isThreeCard(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]==3)\n            return true;\n    }\n    return false;\n}\nbool isStraight(vector<string> cards){\n    vector<int> num;\n    for(int i = 0; i < cards.size(); i++)\n        num.push_back(markToNum[cards[i][0]]);\n    sort(num.begin(),num.end());\n    if(num[0]==1){\n        if((num[1]==2&&num[2]==3&&num[3]==4&&num[4]==5)||(num[1]==10&&num[2]==11&&num[3]==12&&num[4]==13))\n            return true;\n        return false;\n    }\n    for(int i = 1; i < cards.size(); i++){\n        if(num[i]!=num[i-1]+1)\n            return false;\n    }\n    return true;\n}\nbool isFlash(vector<string> cards){\n    char suit=cards[0][1];\n    for(int i = 1; i < cards.size(); i++){\n        if(suit!=cards[i][1])\n            return false;\n    }\n    return true;\n}\nbool isFullHouse(vector<string> cards){\n    if(isOnePair(cards)&&isThreeCard(cards))\n        return true;\n    return false;\n}\nbool isFourCard(vector<string> cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]>=4)\n            return true;\n    }\n    return false;\n}\nbool isStraighFlash(vector<string> cards){\n    if(isFlash(cards)&&isStraight(cards))\n        return true;\n    return false;\n}\nbool isRoyalStraightFlash(vector<string> cards){\n    if(isStraighFlash(cards)){\n        bool k=false;\n        bool o=false;\n        for(int i = 0; i < cards.size(); i++){\n            if(cards[i][0]=='K')\n                k=true;\n            else if(cards[i][0]=='A')\n                o=true;\n        }\n        if(k&&o)\n            return true;\n    }\n    return false;\n}\n\n// ツ偲ィツつゥツづァツスツコツアツづーツ計ツ算\nint calcScore(vector<string> cards){\n    int base=0;\n    for(int i = 0; i < cards.size(); i++)\n        base+=score[cards[i][1]][markToNum[cards[i][0]]];\n    int p=0;\n    if(isRoyalStraightFlash(cards))\n        p=per[8];\n    else if(isStraighFlash(cards))\n        p=per[7];\n    else if(isFourCard(cards))\n        p=per[6];\n    else if(isFullHouse(cards))\n        p=per[5];\n    else if(isFlash(cards))\n        p=per[4];\n    else if(isStraight(cards))\n        p=per[3];\n    else if(isThreeCard(cards))\n        p=per[2];\n    else if(isTwoPair(cards))\n        p=per[1];\n    else if(isOnePair(cards))\n        p=per[0];\n    return p*base;\n}\n\nint main(){\n    \n    for(int i = 1; i <= 13; i++){\n        if(i==1)\n            markToNum['A']=1;\n        else if(i<=9)\n            markToNum[i+'0']=i;\n        else if(i==10)\n            markToNum['T']=10;\n        else if(i==11)\n            markToNum['J']=11;\n        else if(i==12)\n            markToNum['Q']=12;\n        else if(i==13)\n            markToNum['K']=13;\n    }\n\n    int n;\n    bool f=false;\n    while(cin>>n){\n        if(f)\n            cout<<endl;\n        f=true;\n        for(int i = 1; i <= 13; i++)cin>>score['S'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['C'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['H'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['D'][i];\n        for(int i = 0; i < 9; i++)cin>>per[i];\n        for(int i = 0; i < n; i++){\n            vector<string> cards;\n            for(int j = 0; j < 5; j++){\n                string s;\n                cin>>s;\n                cards.push_back(s);\n            }\n            cout<<calcScore(cards)<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cassert>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\nusing namespace std;\ntypedef pair<int,int> Pox;//テ・ツスツケテ」ツ??・ツセツ療ァツつケ: 0->テ」ツδッテ」ツδウテ」ツδ堙」ツつ「 1->テッツシツ津」ツδ堙」ツつ「 2-> テッツシツ禿」ツつォテ」ツδシテ」ツδ?3->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ?, 4->テ」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 5->テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ, 6-> テ」ツδ陛」ツつゥテ」ツδシテ」ツつォテ」ツδシテ」ツδ? 7->テ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・, 8->テ」ツδュテ」ツつ、テ」ツδ、テ」ツδォテ」ツつケテ」ツδ暗」ツδャテ」ツδシテ」ツδ暗」ツδ陛」ツδゥテ」ツδε」ツつキテ」ツδ・\nstruct P\n{\n  int v;\n  char c;\n  P(int v=-1,char c='$'):v(v),c(c){}\n  bool operator < (const P &a)const\n  {\n    if(v != a.v)return v < a.v;\n    return c < a.c;\n  }\n};\nint S[15],C[15],H[15],D[15],ATK[15];\n\n\n\nint main()\n{\n  int n;\n  bool f = true;\n  while(cin >> n)\n    {\n      assert(n);\n      if(f)f = false;\n      else cout << endl;\n      rep(i,13)cin >> S[i];\n      rep(i,13)cin >> C[i];\n      rep(i,13)cin >> H[i];\n      rep(i,13)cin >> D[i];\n      rep(i,9)cin >> ATK[i];\n      cin.ignore();\n      rep(F,n)\n\t{\n\t  vector<Pox> ans;\n\t  bool suit = true;\n\t  vector<P> vec(5);\n\t  int point = 0;\n\t  int RSF = 0;\n\t  map<int,int> index;\n\n\n\t  rep(i,5)\n\t    {\n\t      char a,b,dummy;\n\t      int A;\n\t      string s;\n\t      cin >> s;\n\t      a = s[0];\n\t      b = s[1];\n\t      if('2' <= a && a <= '9')A = a-'0';\n\t      else if(a == 'A')A = 1;\n\t      else if(a == 'T')A = 10;\n\t      else if(a == 'J')A = 11;\n\t      else if(a == 'Q')A = 12;\n\t      else if(a == 'K')A = 13;\n\t      else assert(false);\n\t      vec[i].v = A;\n\t      vec[i].c = b;\n\t      if(i && vec[i].c != vec[i-1].c)suit = false;\n\n\t      if(b == 'S')point += S[vec[i].v-1];\n\t      else if(b == 'C')point += C[vec[i].v-1];\n\t      else if(b == 'H')point += H[vec[i].v-1];\n\t      else if(b == 'D')point += D[vec[i].v-1];\n\t      if(vec[i].v == 1 || (10 <= vec[i].v && vec[i].v <= 13))RSF = RSF|(1<<vec[i].v);\n\t      index[vec[i].v]++;\n\t    }\n\n\t  sort(vec.begin(),vec.end());\n\t  bool SF = true;\n\n\t  REP(i,1,vec.size())\n\t    {\n\t      if(vec[i].v != vec[i-1].v+1)\n\t\t{\n\t\t  SF = false;\n\t\t  break;\n\t\t}\n\t    }\n\n\t  //cout << \"point = \" << point << endl;\n      if(__builtin_popcount(RSF) == 5 && suit)//RSF\n\t{\t\n\t  ans.push_back(Pox(8,ATK[8]*point));\n\t  //cout << ATK[8]*point << endl;\n\t  //cout << \"RSF\" << endl;\n\t}\t\n      \n      if(SF && suit)\n\t{\n\t  ans.push_back(Pox(7,ATK[7]*point));\n\t  //cout << ATK[7]*point << endl;\n\t  //cout << \"SF\" << endl;\n\t}\n\n      if(SF && !suit)\n\t{\n\t  ans.push_back(Pox(3,ATK[3]*point));\n\t  //cout << \"S\" << endl;\n\t}\n      \n      if(suit)\n\t{\n\t  ans.push_back(Pox(4,ATK[4]*point));\n\t  //cout << \"F\" << endl;\n\t}\n      \n      bool three = false;\n      int _2cnt = 0;\n  \n      for(map<int,int>::iterator it = index.begin(); it != index.end();it++)\n\t{\n\t  if(it->second == 2)\n\t    {\n\t      ans.push_back(Pox(0,ATK[0]*point));\n\t      //cout << \"テ」ツδッテ」ツδウテ」ツδ堙」ツつ「\" << endl;\n\t      _2cnt++;\n\t    }\n\t  if(it->second == 3)\n\t    {\n\t      three = true;\n\t      ans.push_back(Pox(2,ATK[2]*point));\n\t      //cout << \"テ」ツつケテ」ツδェテ」ツδシテ」ツつォテ」ツδシテ」ツδ? << endl;\n\t    }\n\n\t  if(it->second == 4)\n\t    {\n\t      ans.push_back(Pox(6,ATK[6]*point));\n\t      //cout << \"four cards\" << endl;\n\t    }\n\t}\n\t\n      if(_2cnt == 2)\n\t{\n\t  ans.push_back(Pox(1,ATK[1]*point));\n\t  //cout << \"2テ」ツδ堙」ツつ「\" << endl;\n\t}\n      \n      if(_2cnt == 1 && three)\n\t{\n\t  ans.push_back(Pox(5,ATK[5]*point));\n\t  //cout << \"テ」ツδ陛」ツδォテ」ツδ湘」ツつヲテ」ツつケ\" << endl;\n\t}\n\n      if(ans.empty())cout << 0 << endl;\n      else\n\t{\n\t  sort(ans.begin(),ans.end());      \n\t  cout << ans[ans.size()-1].second << endl;\n\t}\n\t}\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint arr[4][13], rank[9], card[5], cnt[13];\nstring str[5];\n\nint getMark(char ch){\n  if(ch == 'S'){\n    return 0;\n  }else if(ch == 'C'){\n    return 1;\n  }else if(ch == 'H'){\n    return 2;\n  }\n  return 3;\n}\n\nint getNum(char ch){\n  if('2' <= ch && ch <= '9'){\n    return (ch-'0')-1;\n  }else if(ch == 'A'){\n    return 0;\n  }else if(ch == 'T'){\n    return 9;\n  }else if(ch == 'J'){\n    return 10;\n  }else if(ch == 'Q'){\n    return 11;\n  }\n  return 12;\n}\n\nint judge(){\n  bool same_mark = true;\n  char ch = str[0][1];\n  for(int i = 1 ; i < 5 ; i++){\n    if(ch != str[i][1]){\n      same_mark = false;\n      break;\n    }\n  }\n\n  if(same_mark){\n    if(card[0] == 1 && card[1] == 10 && card[2] == 11 &&\n       card[3] == 12 && card[4] == 13){\n      return rank[8];\n    }else{\n      bool check = true;\n      for(int i = 1 ; i < 5 ; i++){\n        if(card[i] - card[i-1] != 1){\n          check = false;\n          break;\n        }\n      }\n      if(check){\n        return rank[7];\n      }else{\n        return rank[4];\n      }\n    }\n  }\n\n  sort(cnt, cnt+13, greater<int>());\n  if(cnt[0] == 4){\n    return rank[6];\n  }else if(cnt[0] == 3){\n    if(cnt[1] == 2){\n      return rank[5];\n    }else{\n      return rank[2];\n    }\n  }else if(cnt[0] == 2){\n    if(cnt[1] == 2){\n      return rank[1];\n    }else{\n      return rank[0];\n    } \n  }else{\n    bool check = true;\n    for(int i = 1 ; i < 5 ; i++){\n      if(card[i] - card[i-1] != 1){\n        check = false;\n        break;\n      }\n    }\n    if(check){\n      return rank[3];\n    }\n    if(card[0] == 1 && card[1] == 10 && card[2] == 11 &&\n       card[3] == 12 && card[4] == 13){\n      return rank[3];\n    }\n  }\n\n  return 0;\n}\n\nint main(){\n  int N;\n  bool space = false;\n\n  while(cin >> N){\n    if(space){\n      cout << endl;\n    }else{\n      space = true;\n    }\n\n    for(int i = 0 ; i < 4 ; i++){\n      for(int j = 0 ; j < 13 ; j++){\n        cin >> arr[i][j];\n      }\n    }\n    for(int i = 0 ; i < 9 ; i++){\n      cin >> rank[i];\n    }\n\n    while(N--){\n      int point = 0, m,n;\n      memset(cnt, 0, sizeof(cnt));\n      for(int i = 0 ; i < 5 ; i++){\n        cin >> str[i];\n        m = getMark(str[i][1]);\n        n = getNum(str[i][0]);\n        point += arr[m][n];\n        card[i] = n+1;\n        cnt[n]++;\n      }\n      sort(card, card+5);\n      cout << point*judge() << endl;\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, base[4][13], rate[10];\nstring mark = \"SCHD\";\n\nint getNumber(char c) {\n\tif (c == 'A') return 0;\n\tif (c == 'T') return 9;\n\tif (c == 'J') return 10;\n\tif (c == 'Q') return 11;\n\tif (c == 'K') return 12;\n\treturn c - '0' - 1;\n}\n\nbool isStraight(string card) {\n\tint tmp[5];\n\tfor (int i=0; i<5; ++i) tmp[i] = getNumber(card[2 * i]);\n\tsort(tmp, tmp + 5);\n\tfor (int i=0; i<4; ++i) if (tmp[i]+1 != tmp[i+1]) return false;\n\treturn true;\n}\n\nbool isFlush(string card) {\n\tchar tmp = card[1];\n\tfor (int i=1;i<5; ++i) if (tmp != card[2*i+1]) return false;\n\treturn true;\n}\n\nbool isRoyal(string card) {\n\tset< char > num_set;\n\tfor (int i=0; i<5; ++i) num_set.insert(card[2*i]);\n\tset< char > yes = {'A','T','J','Q','K'};\n\treturn num_set == yes;\n}\n\nint getID(string card) {\n\tint cnt[13];\n\tmemset(cnt, 0, sizeof(cnt));\n\tfor (int i=0; i<5; ++i) ++cnt[getNumber(card[2 * i])];\n\t\n\tint pair_num = 0, max_card = 0;\n\tfor (int i=0; i<13; ++i) {\n\t\tif (cnt[i] == 2) ++pair_num;\n\t\tmax_card = max(max_card, cnt[i]);\n\t}\n\t\n\tif (max_card == 2 && pair_num == 1) return 0; // one pair\n\tif (max_card == 2 && pair_num == 2) return 1; // two pair\n\t\n\tif (max_card == 3) {\n\t\tif (pair_num == 0) return 2; // three card\n\t\treturn 5; // full house\n\t}\n\t\n\tbool royal = isRoyal(card), straight = isStraight(card), flush = isFlush(card);\n\t\n\tif (royal && flush) return 8;\n\tif (straight && flush) return 7;\t\n\tif (straight || royal) return 3;\n\tif (flush) return 4;\n\t\n\tif (max_card == 4) return 6;\n\t\n\treturn 9;\n}\n\nvoid solve() {\n\tfor (int i=0; i<n; ++i) {\n\t\tstring card;\n\t\tint sum = 0;\n\t\tfor (int j=0; j<5; ++j) {\n\t\t\tstring cj;\n\t\t\tcin >> cj;\n\t\t\tcard += cj;\n\t\t\tsum += base[mark.find(cj[1])][getNumber(cj[0])];\n\t\t}\n\t\tcout << sum * rate[getID(card)] << endl;\n\t}\n}\n\nint main() {\n\trate[9] = 0;\n\tint i = 0;\n\twhile (cin >> n) {\n\t\tif (i > 0) cout << endl;\n\t\tfor (int i=0; i<4; ++i) for (int j=0; j<13; ++j) cin >> base[i][j];\n\t\tfor (int i=0; i<9; ++i) cin >> rate[i];\n\t\tsolve();\n\t\t++i;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n \nusing namespace std;\n \nint arr[4][13], rank[9], card[5], cnt[13];\nstring str[5];\n \nint getMark(char ch){\n    if(ch == 'S'){\n\treturn 0;\n    }else if(ch == 'C'){\n\treturn 1;\n    }else if(ch == 'H'){\n\treturn 2;\n    }\n    return 3;\n}\n \nint getNum(char ch){\n    if('2' <= ch && ch <= '9'){\n\treturn (ch-'0')-1;\n    }else if(ch == 'A'){\n\treturn 0;\n    }else if(ch == 'T'){\n\treturn 9;\n    }else if(ch == 'J'){\n\treturn 10;\n    }else if(ch == 'Q'){\n\treturn 11;\n    }\n    return 12;\n}\n \nint judge(){\n    bool same_mark = true;\n    char ch = str[0][1];\n    for(int i = 1 ; i < 5 ; i++){\n\tif(ch != str[i][1]){\n\t    same_mark = false;\n\t    break;\n\t}\n    }\n \n    if(same_mark){\n\tif(card[0] == 1 && card[1] == 10 && card[2] == 11 &&\n\t   card[3] == 12 && card[4] == 13){\n\t    return rank[8];\n\t}else{\n\t    bool check = true;\n\t    for(int i = 1 ; i < 5 ; i++){\n\t\tif(card[i] - card[i-1] != 1){\n\t\t    check = false;\n\t\t    break;\n\t\t}\n\t    }\n\t    if(check){\n\t\treturn rank[7];\n\t    }else{\n\t\treturn rank[4];\n\t    }\n\t}\n    }\n \n    sort(cnt, cnt+13, greater<int>());\n    if(cnt[0] == 4){\n\treturn rank[6];\n    }else if(cnt[0] == 3){\n\tif(cnt[1] == 2){\n\t    return rank[5];\n\t}else{\n\t    return rank[2];\n\t}\n    }else if(cnt[0] == 2){\n\tif(cnt[1] == 2){\n\t    return rank[1];\n\t}else{\n\t    return rank[0];\n\t} \n    }else{\n\tbool check = true;\n\tfor(int i = 1 ; i < 5 ; i++){\n\t    if(card[i] - card[i-1] != 1){\n\t\tcheck = false;\n\t\tbreak;\n\t    }\n\t}\n\tif(check){\n\t    return rank[3];\n\t}\n\tif(card[0] == 1 && card[1] == 10 && card[2] == 11 &&\n\t   card[3] == 12 && card[4] == 13){\n\t    return rank[3];\n\t}\n    }\n \n    return 0;\n}\n \nint main(){\n    int N;\n    bool space = false;\n \n    while(cin >> N){\n\tif(space){\n\t    cout << endl;\n\t}else{\n\t    space = true;\n\t}\n \n\tfor(int i = 0 ; i < 4 ; i++){\n\t    for(int j = 0 ; j < 13 ; j++){\n\t\tcin >> arr[i][j];\n\t    }\n\t}\n\tfor(int i = 0 ; i < 9 ; i++){\n\t    cin >> rank[i];\n\t}\n \n\twhile(N--){\n\t    int point = 0, m,n;\n\t    memset(cnt, 0, sizeof(cnt));\n\t    for(int i = 0 ; i < 5 ; i++){\n\t\tcin >> str[i];\n\t\tm = getMark(str[i][1]);\n\t\tn = getNum(str[i][0]);\n\t\tpoint += arr[m][n];\n\t\tcard[i] = n+1;\n\t\tcnt[n]++;\n\t    }\n\t    sort(card, card+5);\n\t    cout << point*judge() << endl;\n\t}\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, a[4][13], p[10], z; char c; pair<int, int> s[5]; string s1 = \"A23456789TJQK\", s2 = \"SCHD\";\nint judge() {\n\tvector<int> v; int w = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].first != s[i - 1].first) v.push_back(w), w = 0;\n\t\tw++;\n\t}\n\tv.push_back(w);\n\tsort(v.begin(), v.end());\n\tif (v.back() == 4) return 7;\n\tif (v.back() == 3 && v.size() == 2) return 6;\n\tint f = 1, g = 1, h = 1;\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i].second != s[i - 1].second) f = 0;\n\t}\n\tfor (int i = 1; i < 5; i++) {\n\t\tif (s[i - 1].first + 1 != s[i].first) g = 0;\n\t}\n\tfor (int i = 0; i < 5; i++) {\n\t\tif (s[i].first != (i ? (i + 8) % 13 : 0)) h = 0;\n\t}\n\tif (f) {\n\t\tif (h) return 9;\n\t\tif (g) return 8;\n\t\treturn 5;\n\t}\n\tif (g | h) return 4;\n\tif (v.back() == 3) return 3;\n\tif (v.back() == 2 && v[v.size() - 2] == 2) return 2;\n\tif (v.back() == 2) return 1;\n\treturn 0;\n}\nint main() {\n\twhile (cin >> n) {\n\t\tif (z++) cout << endl;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tfor (int j = 0; j < 13; j++) cin >> a[i][j];\n\t\t}\n\t\tfor (int i = 1; i < 10; i++) cin >> p[i];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tcin >> c; s[j].first = s1.find(c);\n\t\t\t\tcin >> c; s[j].second = s2.find(c);\n\t\t\t\tcnt += a[s[j].second][s[j].first];\n\t\t\t}\n\t\t\tsort(s, s + 5);\n\t\t\tcout << cnt * p[judge()] << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint c[4][15];\nchar st[7]=\"SCHD\";\nchar nm[17]=\".23456789TJQKA\";\nint d[20];\nchar in[4];\npair<int,int>p[10];\nint calc(){\n\tbool flash=true;\n\tfor(int i=0;i<5;i++)for(int j=i+1;j<5;j++)\n\t\tif(p[i].second!=p[j].second)flash=false;\n\tbool st=true;\n\tfor(int i=0;i<4;i++)if(p[i].first+1!=p[i+1].first)st=false;\n\tbool st2=true;\n\tfor(int i=0;i<4;i++)if(p[i].first!=i+1)st2=false;\n\tif(p[4].first!=13)st2=false;\n\tif(st2)st=true;\n\tif(st&&flash&&p[0].first==9)return d[8];\n\tif(st&&flash)return d[7];\n\tif(p[0].first==p[3].first||p[1].first==p[4].first)return d[6];\n\tif((p[0].first==p[1].first&&p[2].first==p[4].first)||(p[0].first==p[2].first&&p[3].first==p[4].first))return d[5];\n\tif(flash)return d[4];\n\tif(st)return d[3];\n\tif(p[0].first==p[2].first||p[1].first==p[3].first||p[2].first==p[4].first)return d[2];\n\tif((p[0].first==p[1].first&&p[2].first==p[3].first)||\n\t(p[0].first==p[1].first&&p[3].first==p[4].first)||\n\t(p[1].first==p[2].first&&p[3].first==p[4].first))return d[1];\n\tfor(int i=0;i<4;i++)if(p[i].first==p[i+1].first)return d[0];\n\treturn 0;\n}\nint main(){\n\tint a;\n\tbool tc=false;\n\twhile(~scanf(\"%d\",&a)){\n\t\tif(tc)printf(\"\\n\");\n\t\tfor(int i=0;i<4;i++)for(int j=0;j<13;j++)\n\t\t\tscanf(\"%d\",&c[i][j]);\n\t\tfor(int i=0;i<4;i++)c[i][13]=c[i][0];\n\t\tfor(int i=0;i<9;i++)scanf(\"%d\",d+i);\n\t\twhile(a--){\n\t\t\tint ks=0;\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tscanf(\"%s\",in);\n\t\t\t\tfor(int j=1;j<=13;j++){\n\t\t\t\t\tif(in[0]==nm[j])p[i].first=j;\n\t\t\t\t}\n\t\t\t\tfor(int j=0;j<4;j++){\n\t\t\t\t\tif(in[1]==st[j])p[i].second=j;\n\t\t\t\t}\n\t\t\t\tks+=c[p[i].second][p[i].first];\n\t\t\t//\tprintf(\"(%d %d) \",p[i].first,p[i].second);\n\t\t\t}\n\t\t\tstd::sort(p,p+5);\n\t\t\tint sc=calc();\n\t\t\tprintf(\"%d\\n\",ks*sc);\n\t\t}\n\t\ttc=true;\n\t//\tprintf(\"\\n\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ntypedef vector<int> vi;\n\nint main()\n{\n  int buckets[14];\n  int buckets2[5];\n  bool firsttime=true;\n  while(1)\n  {\n    int n;\n    cin >> n;\n    if(!n) break;\n    if(!firsttime) cout << endl;\n    if(firsttime) firsttime=false;\n    int cardscore[14][5];\n    int handscore[9];\n      for(int j=1;j<=4;j++)\n      {\n        for(int k=1;k<=13;k++)\n        {\n          cin >> cardscore[k][j];\n        }\n      }\n      for(int j=0;j<9;j++)\n      {\n        cin >> handscore[j];\n      }\n    \n    for(int i=0;i<n;i++)\n    {\n      int times=0;\n      long long score=0;\n      vector<string> card(5);\n      vector<pair<int,int> > tmpc(5);\n      for(int j=0;j<5;j++)\n      {\n        cin >> card[j];\n        if(card[j][0]=='A')\n        {\n          tmpc[j].first=1;\n        }\n        else if(card[j][0]=='T')\n        {\n          tmpc[j].first=10;\n        }\n        else if(card[j][0]=='J')\n        {\n          tmpc[j].first=11;\n        }\n        else if(card[j][0]=='Q')\n        {\n          tmpc[j].first=12;\n        }\n        else if(card[j][0]=='K')\n        {\n          tmpc[j].first=13;\n        }\n        else\n        {\n          tmpc[j].first=(int)(card[j][0]-'0');\n        }\n        if(card[j][1]=='S')\n        {\n          tmpc[j].second=1;\n        }\n        else if(card[j][1]=='C')\n        {\n          tmpc[j].second=2;\n        }\n        else if(card[j][1]=='H')\n        {\n          tmpc[j].second=3;\n        }\n        else if(card[j][1]=='D')\n        {\n          tmpc[j].second=4;\n        }\n        score+=cardscore[tmpc[j].first][tmpc[j].second];\n\n      }\n      int onep=0,threec=0,four=0;\n      bool flash=false;\n      bool straight=true;\n      sort(tmpc.begin(),tmpc.end());\n      memset(buckets,0,sizeof(buckets));\n      memset(buckets2,0,sizeof(buckets2));\n      for(int j=0;j<5;j++)\n      {\n        buckets[tmpc[j].first]++;\n        buckets2[tmpc[j].second]++;\n      }\n      for(int j=1;j<=13;j++)\n      {\n        if(buckets[j]==2)\n        {\n          onep++;\n        }\n        else if(buckets[j]==3)\n        {\n          threec++;\n        }\n        else if(buckets[j]==4)\n        {\n          four++;\n        }\n      }\n      for(int j=1;j<=4;j++)\n      {\n        if(buckets2[j]==5)\n        {\n          flash=true;\n          times=handscore[4];\n        }\n      }\n      if(onep==1 && threec==0)\n      {\n        times=handscore[0];\n      }\n      else if(onep==2)\n      {\n        times=handscore[1];\n      }\n      else if(threec==1 && onep==0)\n      {\n        times=handscore[2];\n      }\n      else if(threec==1 && onep==1)\n      {\n        times=handscore[5];\n      }\n      else if(four==1)\n      {\n        times=handscore[6];\n      }\n      if(tmpc[0].first==1 && tmpc[1].first==10 && tmpc[2].first==11 && tmpc[3].first==12 && tmpc[4].first==13)\n      {\n        if(flash) times=handscore[8];\n        else times=handscore[3];\n      }\n      else\n      {\n        for(int j=0;j<4;j++)\n        {\n          if(tmpc[j+1].first!=(tmpc[j].first+1)) straight=false;\n        }\n        if(straight)\n        {\n          if(flash) times=handscore[7];\n          else times=handscore[3];\n        }\n      }\n      cout << score*times << endl;\n    }\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint c[4][15];\nchar st[7]=\"SCHD\";\nchar nm[17]=\".23456789TJQKA\";\nint d[20];\nchar in[4];\npair<int,int>p[10];\nint calc(){\n\tbool flash=true;\n\tfor(int i=0;i<5;i++)for(int j=i+1;j<5;j++)\n\t\tif(p[i].second!=p[j].second)flash=false;\n\tbool st=true;\n\tfor(int i=0;i<4;i++)if(p[i].first+1!=p[i+1].first)st=false;\n\tif(st&&flash&&p[0].first==9)return d[8];\n\tif(st&&flash)return d[7];\n\tif(p[0].first==p[3].first||p[1].first==p[4].first)return d[6];\n\tif((p[0].first==p[1].first&&p[2].first==p[4].first)||(p[0].first==p[2].first&&p[3].first==p[4].first))return d[5];\n\tif(flash)return d[4];\n\tif(st)return d[3];\n\tif(p[0].first==p[2].first||p[1].first==p[3].first||p[2].first==p[4].first)return d[2];\n\tif((p[0].first==p[1].first&&p[2].first==p[3].first)||\n\t(p[0].first==p[1].first&&p[3].first==p[4].first)||\n\t(p[1].first==p[2].first&&p[3].first==p[4].first))return d[1];\n\tfor(int i=0;i<4;i++)if(p[i].first==p[i+1].first)return d[0];\n\treturn 0;\n}\nint main(){\n\tint a;\n\tbool tc=false;\n\twhile(~scanf(\"%d\",&a)){\n\t\tif(tc)printf(\"\\n\");\n\t\tfor(int i=0;i<4;i++)for(int j=0;j<13;j++)\n\t\t\tscanf(\"%d\",&c[i][j]);\n\t\tfor(int i=0;i<4;i++)c[i][13]=c[i][0];\n\t\tfor(int i=0;i<9;i++)scanf(\"%d\",d+i);\n\t\twhile(a--){\n\t\t\tint ks=0;\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tscanf(\"%s\",in);\n\t\t\t\tfor(int j=1;j<=13;j++){\n\t\t\t\t\tif(in[0]==nm[j])p[i].first=j;\n\t\t\t\t}\n\t\t\t\tfor(int j=0;j<4;j++){\n\t\t\t\t\tif(in[1]==st[j])p[i].second=j;\n\t\t\t\t}\n\t\t\t\tks+=c[p[i].second][p[i].first];\n\t\t\t//\tprintf(\"(%d %d) \",p[i].first,p[i].second);\n\t\t\t}\n\t\t\tstd::sort(p,p+5);\n\t\t\tint sc=calc();\n\t\t\tprintf(\"%d\\n\",ks*sc);\n\t\t}\n\t\ttc=true;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main()\n{\n  int n;\n  bool bf=false;\n  for(;cin>>n;)\n    {\n      if(bf)\n\tcout<<endl;\n      bf=true;\n      int point[4][13];\n      for(int i=0;i<4;i++)\n\tfor(int j=0;j<13;j++)\n\t  cin>>point[i][j];\n      /*\n      for(int i=0;i<4;i++,cout<<endl)\n\tfor(int j=0;j<13;j++)\n\t  cout<<point[i][j];\n      */\n      int power[9];\n      for(int j=0;j<9;j++)\n\tcin>>power[j];      \n      \n      //s=0,c=1,h=2,d=3\n      for(;n--;)\n\t{\n\t  int card[5];\n\t  int ans=0;\n\t  bool mark=true;\n\t  //  cout<<mark<<endl;\n\t  char buf;\n\t  for(int i=0;i<5;i++)\n\t    {\n\t      char a,b;\n\t      int aa,bb;\n\t      cin>>a>>b;\n\n\t      if(i!=0&&buf!=b)\n\t\tmark=false;\n\t      buf=b;\n\n\t      aa=a-'0';\n\t      if(a=='A')\n\t\taa=1;\n\t      if(a=='T')\n\t\taa=10;\n\t      if(a=='J')\n\t\taa=11;\n\t      if(a=='Q')\n\t\taa=12;\n\t      if(a=='K')\n\t\taa=13;\t      \n\t      //s=0,c=1,h=2,d=3\n\t      if(b=='S')\n\t\tbb=0;\n\t      if(b=='C')\n\t\tbb=1;\n\t      if(b=='H')\n\t\tbb=2;\n\t      if(b=='D')\n\t\tbb=3;\t      \n\t      card[i]=aa;\n\t      //   cout<<a<<b<<endl;\n\t      // cout<<bb<<\" \"<<aa<<endl;\n\t      //cout<<point[bb][aa-1]<<endl;;\n\t      ans+=point[bb][aa-1];\n\t      \n\t    }\n\t  sort(card,card+5);\n\t  //  cout<<mark<<endl;\n\t  if(mark&&\n\t     card[0]==1&&card[1]==10&&card[2]==11 &&card[3]==12 &&card[4]==13)\n\t    //royal straight\n\t    ans*=power[8];\n\t  else if(mark &&\n\t\t  card[0]==card[1]-1&&card[1]==card[2]-1&&\n\t\t  card[2]==card[3]-1&&card[3]==card[4]-1)\n\t    ans*=power[7];\n\t  else if((card[0]==card[1]&&card[1]==card[2]&&\n\t\t   card[2]==card[3])\n\t\t  ||(card[1]==card[2]&&card[2]==card[3]&&\n\t\t     card[3]==card[4]))\n\t    ans*=power[6];\n\t  else if((card[0]==card[1]&&card[1]==card[2]&&\n\t\t   card[3]==card[4])\n\t\t  ||(card[0]==card[1]\n\t\t     &&card[2]==card[3]&&card[3]==card[4]))\n\t    ans*=power[5];\n\t  else if(mark)\n\t    ans*=power[4];\n\t  else if((card[0]==1&&card[1]==10&&card[2]==11 &&card[3]==12 &&card[4]==13)||\n\t\t  (card[0]==card[1]-1&&card[1]==card[2]-1&&\n\t\t   card[2]==card[3]-1&&card[3]==card[4]-1))\t    \n\t    //straight\n\t    ans*=power[3];\n\t  else if((card[0]==card[1]&&card[1]==card[2])||\n\t\t  (card[1]==card[2]&&card[2]==card[3])||\n\t\t  (card[2]==card[3]&&card[3]==card[4])\n\t\t  )\n\t    //スリーカード\n\t    ans*=power[2];\n\t  else\n\t    {\n\t      int cnt=0;\n\t      for(int i=0;i<4;i++)\n\t\t{\n\t\t  //\t\t  cout<<card[i]<<\" \"<<card[i+1]<<endl;\n\t\t  if(card[i]==card[i+1])\n\t\t    cnt++;\n\t\t  \n\t\t}\n\t\t  if(cnt>1)\n\t\tans*=power[1];\n\t      else if(cnt>0)\n\t\tans*=power[0];\n\t      else\n\t\tans=0;\n\n\t\t  //  cout<<cnt<<endl;\n\t    }\n\t  \n\t  cout<<ans<<endl;\t  \n\t}\n\n\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nstruct Point{\n  int n,a;\n};\n\nint main(){\n  int i,j,k,n,a[4][14],b[10],ans,max,c;\n  string str;\n  Point p[5];\n  bool aaa = false;\n  while(cin >> n){\n    if(aaa) cout << endl;\n    aaa = true;\n    for(i=0;i<4;i++){\n      for(j=1;j<14;j++) cin >> a[i][j];\n    }\n    b[0] = 0;\n    for(i=1;i<10;i++) cin >> b[i];\n    for(i=0;i<n;i++){\n      ans = 0;\n      max = 0;\n      for(j=0;j<5;j++){\n\tcin >> str;\n\tif(str[0] == 'A') p[j].n = 1;\n\telse if(str[0] == 'T') p[j].n = 10;\n\telse if(str[0] == 'J') p[j].n = 11;\n\telse if(str[0] == 'Q') p[j].n = 12;\n\telse if(str[0] == 'K') p[j].n = 13;\n\telse p[j].n = str[0] - '0';\n\tif(str[1] == 'S') p[j].a = 0;\n\telse if(str[1] == 'C') p[j].a = 1;\n\telse if(str[1] == 'H') p[j].a = 2;\n\telse if(str[1] == 'D') p[j].a = 3;\n\tans += a[p[j].a][p[j].n];\n      }\n\n      c = 1;\n      for(j=1;j<5;j++){\n\tif(p[0].a == p[j].a) c++;\n      }\n      if(c == 5 && max < 5) max = 5;\n\n      for(j=0;j<5;j++){\n\tc = 1;\n\tfor(k=j+1;k<5;k++){\n\t  if(p[j].n == p[k].n){\n\t    c++;\n\t    if(max < 1) max = 1;\n\t    if(max < 3 && c == 3) max = 3;\n\t    if(max < 7 && c == 4) max = 7;\n\n\t    for(int l=0;l<5;l++){\n\t      if(l != j && l != k){\n\t\tint cc = 1;\n\t\tfor(int m=l+1;m<5;m++){\n\t\t  if(m != k && m != j && p[l].n == p[m].n){\n\t\t    cc++;\n\t\t    if(max < 2) max = 2;\n\t\t    if(max < 6 && cc == 3) max = 6;\n\t\t  }\n\t\t}\n\t      }\n\t    }\n\t  }\n\t}\n\n      }\n\n      int st[5];\n      for(j=0;j<5;j++) st[j] = p[j].n;\n      sort(st,st+5);\n      for(j=1;j<10;j++){\n\tif(st[0] == j && st[1] == j+1 && st[2] == j+2 && st[3] == j+3 && st[4] == j+4){\n\t  if(max < 4) max = 4;\n\t  c = 1;\n\t  for(k=1;k<5;k++){\n\t    if(p[0].a == p[k].a) c++;\n\t  }\n\t  if(c == 5 && max < 8) max = 8;\n\t}\n      }\n\n      if(st[0] == 1 && st[1] == 10 && st[2] == 11 && st[3] == 12 && st[4] == 13){\n\tif(max < 4) max = 4;\n\tc = 1;\n\tfor(k=1;k<5;k++){\n\t  if(p[0].a == p[k].a) c++;\n\t}\n\tif(c == 5 && max < 9) max = 9;\n      }\n      cout << ans * b[max] << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <string>\n\nusing namespace std;\n\nint n;\nint score[200][200];\nint markToNum[200];\nint per[10];\n\n\nbool isOnePair(vector<string> &cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]==2)\n            return true;\n    }\n    return false;\n}\nbool isTwoPair(vector<string> &cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]>=2)\n            cnt++;\n    }\n    if(cnt>=2)\n        return true;\n    return false;\n}\nbool isThreeCard(vector<string> &cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]==3)\n            return true;\n    }\n    return false;\n}\nbool isStraight(vector<string> &cards){\n    vector<int> num;\n    for(int i = 0; i < cards.size(); i++)\n        num.push_back(markToNum[cards[i][0]]);\n    sort(num.begin(),num.end());\n    if(num[0]==1){\n        if((num[1]==2&&num[2]==3&&num[3]==4&&num[4]==5)||(num[1]==10&&num[2]==11&&num[3]==12&&num[4]==13))\n            return true;\n        return false;\n    }\n    for(int i = 1; i < cards.size(); i++){\n        if(num[i]!=num[i-1]+1)\n            return false;\n    }\n    return true;\n}\nbool isFlash(vector<string> &cards){\n    char suit=cards[0][1];\n    for(int i = 1; i < cards.size(); i++){\n        if(suit!=cards[i][1])\n            return false;\n    }\n    return true;\n}\nbool isFullHouse(vector<string> &cards){\n    if(isOnePair(cards)&&isThreeCard(cards))\n        return true;\n    return false;\n}\nbool isFourCard(vector<string> &cards){\n    int tmp[100];\n    fill(tmp,tmp+100,0);\n    for(int i = 0; i < cards.size(); i++)\n        tmp[markToNum[cards[i][0]]]++;\n    int cnt=0;\n    for(int i = 1; i <= 13; i++){\n        if(tmp[i]>=4)\n            return true;\n    }\n    return false;\n}\nbool isStraighFlash(vector<string> &cards){\n    if(isFlash(cards)&&isStraight(cards))\n        return true;\n    return false;\n}\nbool isRoyalStraightFlash(vector<string> &cards){\n    if(isStraighFlash(cards)){\n        bool k=false;\n        bool o=false;\n        for(int i = 0; i < cards.size(); i++){\n            if(cards[i][0]=='K')\n                k=true;\n            else if(cards[i][0]=='A')\n                o=true;\n        }\n        if(k&&o)\n            return true;\n    }\n    return false;\n}\n\n// ツ偲ィツつゥツづァツスツコツアツづーツ計ツ算\nint calcScore(vector<string> &cards){\n    int base=0;\n    for(int i = 0; i < cards.size(); i++)\n        base+=score[cards[i][1]][markToNum[cards[i][0]]];\n    int p=0;\n    if(isRoyalStraightFlash(cards))\n        p=per[8];\n    else if(isStraighFlash(cards))\n        p=per[7];\n    else if(isFourCard(cards))\n        p=per[6];\n    else if(isFullHouse(cards))\n        p=per[5];\n    else if(isFlash(cards))\n        p=per[4];\n    else if(isStraight(cards))\n        p=per[3];\n    else if(isThreeCard(cards))\n        p=per[2];\n    else if(isTwoPair(cards))\n        p=per[1];\n    else if(isOnePair(cards))\n        p=per[0];\n    return p*base;\n}\n\nint main(){\n    \n    for(int i = 1; i <= 13; i++){\n        if(i==1)\n            markToNum['A']=1;\n        else if(i<=9)\n            markToNum[i+'0']=i;\n        else if(i==10)\n            markToNum['T']=10;\n        else if(i==11)\n            markToNum['J']=11;\n        else if(i==12)\n            markToNum['Q']=12;\n        else if(i==13)\n            markToNum['K']=13;\n    }\n\n    int n;\n    bool f=false;\n    while(cin>>n){\n        if(f)\n            cout<<endl;\n        f=true;\n        for(int i = 1; i <= 13; i++)cin>>score['S'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['C'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['H'][i];\n        for(int i = 1; i <= 13; i++)cin>>score['D'][i];\n        for(int i = 0; i < 9; i++)cin>>per[i];\n        for(int i = 0; i < n; i++){\n            vector<string> cards;\n            for(int j = 0; j < 5; j++){\n                string s;\n                cin>>s;\n                cards.push_back(s);\n            }\n            cout<<calcScore(cards)<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n\nusing namespace std;\n\nstruct Pa{\n\tint num;\n\tint mark;\n};\n\nbool comp(const Pa& p1, const Pa& p2)\n{\n\treturn p1.num < p2.num;\n}\n\nint func(char v)\n{\n\tif(v == 'S'){\n\t\treturn 0;\n\t}\n\tif(v == 'C'){\n\t\treturn 1;\n\t}\n\tif(v == 'H'){\n\t\treturn 2;\n\t}\n\t\n\treturn 3;\n}\n\nint func2(char v)\n{\n\tif(v == 'A'){\n\t\treturn 1;\n\t}\n\tif(v == 'K'){\n\t\treturn 13;\n\t}\n\tif(v == 'Q'){\n\t\treturn 12;\n\t}\n\tif(v == 'J'){\n\t\treturn 11;\n\t}\n\tif(v == 'T'){\n\t\treturn 10;\n\t}\n\t\n\tint t;\n\tfor(t = 2; t <= 9; t++){\n\t\tif((char)('0'+t) == v){\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn t;\n}\n\nbool opr(Pa a[5])\n{\n\tbool f = false;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].num == a[i-1].num){\n\t\t\tf = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool tpr(Pa a[5])\n{\n\tif(a[0].num == a[1].num && a[2].num == a[3].num){\n\t\treturn true;\n\t} else if(a[0].num == a[1].num && a[3].num == a[4].num){\n\t\treturn true;\n\t} else if(a[1].num == a[2].num && a[3].num == a[4].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool tcd(Pa a[5])\n{\n\tbool f = false;\n\t\n\tfor(int i = 0; i < 3; i++){\n\t\tif(a[i].num == a[i+1].num && a[i+1].num == a[i+2].num){\n\t\t\tf = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool stt(Pa a[5])\n{\n\tint v = a[0].num;\n\tbool f = true;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].num != (v+i)){\n\t\t\tf = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(a[0].num == 1 && a[1].num == 10 && a[2].num == 11 && a[3].num == 12 && a[4].num == 13){\n\t\t\treturn true;\n\t}\n\t\n\treturn f;\n}\n\nbool flh(Pa a[5])\n{\n\tbool f = true;\n\tfor(int i = 1; i < 5; i++){\n\t\tif(a[i].mark != a[i-1].mark){\n\t\t\tf = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn f;\n}\n\nbool fuh(Pa a[5])\n{\n\tif(a[0].num == a[1].num && (a[1].num == a[2].num || a[2].num == a[3].num) && a[3].num == a[4].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool fcd(Pa a[5])\n{\n\tif((a[0].num == a[1].num || a[3].num == a[4].num) && a[1].num == a[2].num && a[2].num == a[3].num){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool stf(Pa a[5])\n{\n\tif(stt(a) && flh(a)){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nbool rsf(Pa a[5])\n{\n\tif(flh(a)){\n\t\tif(a[0].num == 1 && a[1].num == 10 && a[2].num == 11 && a[3].num == 12 && a[4].num == 13){\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\nint main()\n{\n\tint n, a[4][14], hand[10];\n\tPa card[5];\n\tstring str;\n\tbool f = false;\n\t\n\twhile(cin>>n && n){\n\t\tif(f){\n\t\t\tcout << endl;\n\t\t}\n\t\tf = true;\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tfor(int j = 1; j <= 13; j++){\n\t\t\t\tcin >> a[i][j];\n\t\t\t}\n\t\t}\n\t\thand[0] = 0;\n\t\tfor(int i = 1; i <= 9; i++){\n\t\t\tcin >> hand[i];\n\t\t}\n\t\t\n\t\twhile(n--){\n\t\t\tint s = 0, t = 0;\n\t\t\tfor(int i = 0; i < 5; i++){\n\t\t\t\tcin >> str;\n\t\t\t\tcard[i].num = func2(str[0]);\n\t\t\t\tcard[i].mark = func(str[1]);\n\t\t\t\ts += a[card[i].mark][card[i].num];\n\t\t\t}\n\t\t\tsort(card, card+5, comp);\n\t\t\t\n\t\t\tif(rsf(card)){\n\t\t\t\tt = 9;\n\t\t\t} else if(stf(card)){\n\t\t\t\tt = 8;\n\t\t\t} else if(fcd(card)){\n\t\t\t\tt = 7;\n\t\t\t} else if(fuh(card)){\n\t\t\t\tt = 6;\n\t\t\t} else if(flh(card)){\n\t\t\t\tt = 5;\n\t\t\t} else if(stt(card)){\n\t\t\t\tt = 4;\n\t\t\t} else if(tcd(card)){\n\t\t\t\tt = 3;\n\t\t\t} else if(tpr(card)){\n\t\t\t\tt = 2;\n\t\t\t} else if(opr(card)){\n\t\t\t\tt = 1;\n\t\t\t}\n\t\t\t\n\t\t\tcout << (s*t) << endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n\n//#define\tmp\t\tmake_pair\n#define\tnum\t\tfirst\n#define\tsuit\tsecond\n\nusing namespace std;\n\ntypedef\tpair<int,char>\tpic;\n\nint base[4][14],ratio[9];\n\nint isStraight(pic hand[5]){\n\tsort(hand,hand+5);\n\tif(hand[0].num==1 && hand[1].num==10 && hand[2].num==11 && hand[3].num==12 && hand[4].num==13)\n\t\treturn 1;\n\tfor(int i=1;i<5;i++)\tif(hand[0].num+i!=hand[i].num)\treturn -1;\n\treturn hand[4].num;\n}\n\nbool isFlush(const pic hand[5]){\n\tfor(int i=1;i<5;i++)\tif(hand[0].suit!=hand[i].suit)\treturn false;\n\treturn true;\n}\n\nbool isFourCard(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==4)\treturn true;\n\treturn false;\n}\n\nbool isFullHouse(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tbool _2=false,_3=false;\n\tfor(int i=1;i<=13;i++){\n\t\tif(buc[i]==2)\t_2=true;\n\t\tif(buc[i]==3)\t_3=true;\n\t}\n\treturn _2&&_3;\n}\n\nbool isThreeCard(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==3)\treturn true;\n\treturn false;\n}\n\nbool isTwoPair(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tint _2=0;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==2)\t_2++;\n\treturn _2==2;\n}\n\nbool isOnePair(const pic hand[5]){\n\tint buc[14]={};\n\tfor(int i=0;i<5;i++)\tbuc[hand[i].num]++;\n\tfor(int i=1;i<=13;i++)\tif(buc[i]==2)\treturn true;\n\treturn false;\n}\n\nint calcHand(pic hand[5]){\n\tint st=isStraight(hand);\n\tbool fl=isFlush(hand);\n\tif(st==1 && fl)\t\t\treturn ratio[8];\n\tif(st!=-1 && fl)\t\treturn ratio[7];\n\tif(isFourCard(hand))\treturn ratio[6];\n\tif(isFullHouse(hand))\treturn ratio[5];\n\tif(fl)\t\t\t\t\treturn ratio[4];\n\tif(st!=-1)\t\t\t\treturn ratio[3];\n\tif(isThreeCard(hand))\treturn ratio[2];\n\tif(isTwoPair(hand))\t\treturn ratio[1];\n\tif(isOnePair(hand))\t\treturn ratio[0];\n\treturn 0;\n}\n\nint calcBase(const pic hand[5]){\n\tstatic int suit2id[128];\n\tsuit2id['S']=0;\n\tsuit2id['C']=1;\n\tsuit2id['H']=2;\n\tsuit2id['D']=3;\n\tint point=0;\n\tfor(int i=0;i<5;i++)\tpoint+=base[suit2id[hand[i].suit]][hand[i].num];\n\treturn point;\n}\n\nint main(){\n\tfor(int n,t=0;~scanf(\"%d\",&n);t++){\n\t\tif(t>0)\tputs(\"\");\n\t\tfor(int i=0;i<4;i++)for(int j=1;j<=13;j++)\tscanf(\"%d\",base[i]+j);\n\t\tfor(int i=0;i<9;i++)\tscanf(\"%d \",ratio+i);\n\t\twhile(n--){\n\t\t\tpic hand[5];\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tchar t;\n\t\t\t\tscanf(\"%c%c \",&t,&hand[i].suit);\n\t\t\t\tif     (t=='A')\thand[i].num=1;\n\t\t\t\telse if(t=='T')\thand[i].num=10;\n\t\t\t\telse if(t=='J')\thand[i].num=11;\n\t\t\t\telse if(t=='Q')\thand[i].num=12;\n\t\t\t\telse if(t=='K')\thand[i].num=13;\n\t\t\t\telse\t\t\thand[i].num=t-'0';\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",calcHand(hand)*calcBase(hand));\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 2218: K Poker\n// 2017.9.23 bal4u@uu\n// ?????????????????????????????\\????????????????????????????????????????????????\n// 2017.11.22\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct { int d, s; } T;\t// ??????????????± d:?????° s:?????????\nT card[5];\nint base[4][14];\t// ?????¬???????????±\nint rate[9];\t\t// ??????????????±\n\nint dcnt[14];\t\t// ????????°????????????????????????\nint scnt[4];\t\t// ????????????????????????????????????\nint tr['Z'];\t\t// ????????¨\n\nint cmp(T *a, T *b) { return a->d - b->d; }\n\nint calc()\n{\n\tint i, f, ans = 0;\n\n\t// ?????¬???\n\tfor (i = 0; i < 5; i++)\tans += base[card[i].s][card[i].d];\n\n\t// ????????????????????¬????????????????????\\\n\tif (card[0].d == 1) {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[8];\n\t\t\tif (card[i].s != card[0].s || card[i].d != 9+i) break;\n\t\t}\n\t}\n\n\t// ????????¬????????????????????\\\n//\tif (card[0].d != 1) {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[7];\n\t\t\tif (card[i].s != card[0].s || card[i].d != card[0].d+i) break;\n\t\t}\n//\t}\n\n\t// ??????????????????\n\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 4) return ans * rate[6];\n\n\t// ???????????????\n\tf = 0;\n\tfor (i = 1; i <= 13; i++) {\n\t\tif      (dcnt[i] == 3) f |= 1;\n\t\telse if (dcnt[i] == 2) f |= 2;\n\t}\n\tif (f == 3) return ans * rate[5];\n\n\t// ??????????????\\\n\tfor (i = 0; i < 4; i++) if (scnt[i] == 5) return ans * rate[4];\n\n\t// ????????¬??????\n\tif (card[0].d == 1) {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[3];\n\t\t\tif (card[i].d != 9+i) break;\n\t\t}\n\t}\n//\telse {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[3];\n\t\t\tif (card[i].d != card[0].d+i) break;\n\t\t}\n//\t}\n\n\t// ??????????????????\n\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 3) return ans * rate[2];\n\n\t// ???????????¢ or ???????????¢\n\tf = 0;\n\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 2) f++;\n\tif (f == 2) return ans * rate[1];\n\tif (f == 1) return ans * rate[0];\n\n\t// ??????\n\treturn 0;\n}\n\nchar buf[200], *p;\nint getint()\n{\n\tint n = 0;\n\twhile (*p >= '0') n = (n<<3) + (n<<1) + (*p++ & 0xf);\n\treturn n;\n}\n\nint main()\n{\n\tint n, i, j;\n\tint cno = 0;\n\n\ttr['S'] = 0, tr['C'] = 1,  tr['H'] = 2,  tr['D'] = 3;\n\tfor (i = 2; i <= 9; i++) tr[i+'0'] = i;\n\ttr['A'] = 1, tr['T'] = 10, tr['J'] = 11, tr['Q'] = 12, tr['K'] = 13;\n\n\twhile (fgets(p=buf, 10, stdin) != NULL) {\n\t\tn = getint();\n\t\tif (cno++) putchar('\\n');\t\t// ???????????±??????????????????\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\tfgets(p=buf, 200, stdin);\n\t\t\tfor (j = 0; j < 13; j++) base[i][j+1] = getint(), p++;\n\t\t}\n\t\tfgets(p=buf, 200, stdin);\n\t\tfor (i = 0; i < 9; i++) rate[i] = getint(), p++;\n\t\twhile (n-- > 0) {\n\t\t\tfgets(p=buf, 200, stdin);\n\t\t\tfor (i = 0; i < 5; i++) {\t// ??????????????±\n\t\t\t\tcard[i].d = tr[*p++], card[i].s = tr[*p], p += 2;\n\t\t\t}\n\t\t\tfor (i = 0; i < 4; i++) qsort(card, 5, sizeof(T), cmp);  // ?????°??§???????????????\n\t\t\tmemset(dcnt, 0, sizeof(dcnt)), memset(scnt, 0, sizeof(scnt));\n\t\t\tfor (i = 0; i < 5; i++) {\n\t\t\t\tdcnt[card[i].d]++;\t\t// ???????????°????????°???????¨?\n\t\t\t\tscnt[card[i].s]++;\t\t// ???????????????????????°???????¨?\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", calc());\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2218\nTitle K poker\n*/\n#include <stdio.h>\n#include <string.h>\n//Global data section\nint card_point[4][13];\nint yaku_point[10];\nchar hand[20];\nint n;\nchar *nums=\"A23456789TJQK\";\nchar *suits=\"SCHD\";\n//\nvoid print_hand(char *b)\n{\n        printf(\"%s\\n\",b);\n}\nint conv_num(char c)\n{\n        return(strchr(nums,c)-nums+1);\n}\nint conv_suit(char c)\n{\n        return(strchr(suits,c)-suits+1);\n}\n\nint calc_point(char * b)\n{\n        int x,y,i,p;\n        p=0;\n        for(i=0;i<5;i++)\n        {\n                x=conv_num(b[i*3]);\n                y=conv_suit(b[i*3+1]);\n                p += card_point[y-1][x-1];\n        }\n        return(p);\n}\nint calc_pair(char *b)\n{\n        int i,j,p;\n\n        p=0;\n        for(i=0;i<4;i++)\n                for(j=i+1;j<5;j++)\n                        p += ((b[i*3]==b[j*3])?1:0);\n        return(p);\n}\nint is_flash(char *b)\n{\n        int i,j,p;\n\n        p=0;\n        for(i=0;i<4;i++)\n                for(j=i+1;j<5;j++)\n                        p += ((b[i*3+1]==b[j*3+1])?1:0);\n        return(p==10);\n}\ncomp_card(void * c1,void * c2)\n{\n        return(conv_num(((char *)c1)[0])>conv_num(((char *)c2)[0]));\n}\nis_straight(char * b)\n{\n        b[14]=' ';b[15]='\\0';\n        qsort(b,5,3,comp_card);\n\n        //print_hand(b);\n        //printf(\"** %d %d\\n\",conv_num(b[0]),conv_num(b[12]));\n        if(conv_num(b[0])+4==conv_num(b[12]))\n                return(1);\n        \n        if(conv_num(b[0])==1 && conv_num(b[3])==10)\n                return(2);\n\n        return(0);\n}\nint calc_yaku(char * b)\n{\n        int ret,ret1;\n\n        ret=calc_pair(b);\n        if(ret==1)\n                return(yaku_point[0]);\n        if(ret==2)\n                return(yaku_point[1]);\n        if(ret==3)\n                return(yaku_point[2]);\n        if(ret==4)\n                return(yaku_point[5]);\n        if(ret==6)\n                return(yaku_point[6]);\n        ret=is_straight(b);\n        ret1=is_flash(b);\n        if(ret==2 && ret1)\n                return(yaku_point[8]);\n        if(ret==1 && ret1)\n                return(yaku_point[7]);\n        if(ret1)\n                return(yaku_point[4]);\n        if(ret)\n                return(yaku_point[3]);\n        return(0); //no pair\n}\nmain()\n{\n        int i,j,k,ret,flag;\n\n        flag=0;\n\n        while(EOF!=scanf(\"%d\",&n) && n)\n        {\n                if(flag)\n                        printf(\"\\n\");\n                flag=1;\n                for(i=0;i<4;i++)\n                        for(j=0;j<13;j++)\n                                scanf(\"%d\",&card_point[i][j]);\n\n                for(i=0;i<9;i++)\n                        scanf(\"%d \",&yaku_point[i]);\n                \n                for(j=0;j<n;j++)\n                {\n                        fgets(hand,20,stdin);\n\n                        //ret=calc_point(hand);\n                        ret=calc_yaku(hand)*calc_point(hand);\n                        printf(\"%d\\n\",ret);\n                }\n        }\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  int n,m,i=-1,j,mc,max,p[10],y,d[5][20],t;\n  char s[5][20],c[20]={\"A23456789TJQK\"};\n  char w[5]={\"SCHD\"};\n  while(~scanf(\"%d\",&n)){\n    if(i+1)printf(\"\\n\");\n    for(i=p[0]=0;i<4;i++){\n      for(j=0;j<13;j++)scanf(\"%d\",&d[i][j]);\n    }\n    for(i=1;i<10;i++)scanf(\"%d\",&p[i]);\n    while(n--){\n    int b[20]={0};\n      for(i=t=max=mc=0;i<5;i++){\n\tscanf(\"%s\",s[i]);//printf(\"%s\\n\",s[i]);\n\tfor(j=0;s[i][0]-c[j];j++);\n\tfor(m=0;s[i][1]-w[m];m++);\n\tb[j]++;//printf(\"b\\n\");\n\tt+=d[m][j];\n\tif(b[j]==1)mc++;\n\tif(max<b[j])max=b[j];\n      }//printf(\"%d %d\\n\",max,mc);\n      if(max==4)y=7;\n      if(max==3)y=mc-2?3:6;\n      if(max==2)y=mc-3?1:2;\n      if(max==1){\n\tfor(i=0;b[i]==0;i++);\n\tfor(j=0;j<5;j++)mc-=b[i+j];\n\ty=(mc==0||b[0]*b[9]*b[10]*b[11]*b[12])?4:0;\n      //printf(\"%d \",y);\n\tfor(i=0;i<5&&s[4][1]==s[i][1];i++);\n\tif(i==5){\n\t  y+=5;\n\t  if(y==9&&b[0]*b[9]==0)y--;\n\t}\n      }//printf(\"%d:\",y);\n      printf(\"%d\\n\",p[y]*t);\n    }\n  }\n  return 0;\n}\n    "
  },
  {
    "language": "C",
    "code": "D=\"A23456789TJQK\",S=\"SCHD\",b[5][13],F,d,u,s,B,f,i;main(N){for(;~scanf(\"%d\",&N);){for(i=i&&!puts(\"\");i<61;i++)scanf(\"%d\",b[i/13]+i%13);for(;N--;){char*t,c[]=\"00000000000000\",h[5]={f=B=0};for(i=5;i--;i>3?u=s:0,f|=s-u)scanf(\"%as\",&t),c[d=strchr(D,*t)-D]++,B+=b[s=strchr(S,t[1])-S][d];for(c[i=13]=*c;i--;t=strstr(c,\"11111\"))h[c[i]-48]++;printf(\"%d\\n\",b[4][f?t?3:h[4]?6:h[3]?h[2]?5:2:h[2]?h[2]-1:9:t-c-9?t?7:4:8]*B);}}}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint N,T[4][15],Y[15],i,j,t,f=0;\nchar CS[5][2],s[]=\"SCHD\",n[]=\"A23456789TJQKA\";\n\nint ns(char a){int i,c=0;for(i=0;i<5;i++)c+=CS[i][0]==a;return c;}\nint cf(){\n\tint i;for(i=1;i<5&&CS[i][1]==CS[i-1][1];i++);\n\treturn i==5;\n}\nint crs()\n{\n\treturn ns('T')&&ns('J')&&ns('Q')&&ns('K')&&ns('A');}\nint cs()\n{\n\tint i;\n\tfor(i=0;i<10;i++)\n\t{\n\t\tif(ns(n[i])&&ns(n[i+1])&&ns(n[i+2])&&ns(n[i+3])&&ns(n[i+4]))\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\nint cp(int num)\n{\n\tint r=0,i;\n\tfor(i=0;i<13;i++)\n\t{\n\t\tif(ns(n[i])==num)\n\t\t\tr++;\n\t}\n\treturn r;\n}\n\nint role()\n{\n\tif(cf()&&crs())return Y[8];\n\tif(cf()&&cs())return Y[7];\n\tif(cp(4))return Y[6];\n\tif(cp(3)&&cp(2))return Y[5];\n\tif(cf())return Y[4];\n\tif(cs())return Y[3];\n\tif(cp(3))return Y[2];\n\tif(cp(2)==2)return Y[1];\n\tif(cp(2)==1)return Y[0];\n\treturn 0;\n}\n\nint base(char c,char r)\n{\n\tint a,b;\n\tfor(a=0;s[a]!=r;a++);\n\tfor(b=0;n[b]!=c;b++);\n\treturn T[a][b];\n}\n\nint main()\n{\n\tfor(;~scanf(\"%d\",&N);f++)\n\t{\n\t\tif(f)puts(\"\");\n\t\tfor(i=0;i<4;i++)\n\t\t\tfor(j=0;j<13;j++)\n\t\t\t\tscanf(\"%d\",&T[i][j]);\n\t\tfor(i=0;i<9;i++)scanf(\"%d\",&Y[i]);\n\t\tgetchar();\n\t\tfor(i=0;i<N;i++)\n\t\t{\n\t\t\tt=0;\n\t\t\tfor(j=0;j<5;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%c%c%*c\",&CS[j][0],&CS[j][1]);\n\t\t\t\tt+=base(CS[j][0],CS[j][1]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",t*role());\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint N,T[4][15],Y[15],i,j,t,f=0;\nchar CS[5][2],s[]=\"SCHD\",n[]=\"A23456789TJQK\";\n\nint ns(char a){int i,c=0;for(i=0;i<5;i++)c+=CS[i][0]==a;return c;}\nint cf(){int i;for(i=1;i<5&&CS[i][1]==CS[i-1][1];i++);return i==5;}\nint crs(){return ns('T')&&ns('J')&&ns('Q')&&ns('K')&&ns('A');}\nint cs()\n{\n\tint i;\n\tfor(i=0;i<10;i++)\n\t{\n\t\tif(ns(n[i])&&ns(n[i+1])&&ns(n[i+2])&&ns(n[i+3])&&ns(n[i+4]))\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\nint cp(int num)\n{\n\tint r=0,i;\n\tfor(i=0;i<13;i++)\n\t{\n\t\tif(ns(n[i])==num)\n\t\t\tr++;\n\t}\n\treturn r;\n}\n\nint role()\n{\n\tif(cf()&&crs())return Y[8];\n\tif(cf&&cs())return Y[7];\n\tif(cp(4))return Y[6];\n\tif(cp(3)&&cp(2))return Y[5];\n\tif(cf())return Y[4];\n\tif(cs())return Y[3];\n\tif(cp(3))return Y[2];\n\tif(cp(2)==2)return Y[1];\n\tif(cp(2)==1)return Y[0];\n\treturn 0;\n}\n\nint base(char c,char r)\n{\n\tint a,b;\n\tfor(a=0;s[a]!=r;a++);\n\tfor(b=0;n[b]!=c;b++);\n\treturn T[a][b];\n}\n\nint main()\n{\n\tfor(;~scanf(\"%d\",&N);f++)\n\t{\n\t\tif(f)puts(\"\");\n\t\tfor(i=0;i<4;i++)\n\t\t\tfor(j=0;j<13;j++)\n\t\t\t\tscanf(\"%d\",&T[i][j]);\n\t\tfor(i=0;i<9;i++)scanf(\"%d\",&Y[i]);\n\t\tgetchar();\n\t\tfor(i=0;i<N;i++)\n\t\t{\n\t\t\tt=0;\n\t\t\tfor(j=0;j<5;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%c%c%*c\",&CS[j][0],&CS[j][1]);\n\t\t\t\tt+=base(CS[j][0],CS[j][1]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",t*role());\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// Aizu 2218: K Poker\n// 2017.9.23 bal4u@uu\n// ?????????????????????????????\\????????????????????????????????????????????????\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct { int d, s; } T;\t// ??????????????± d:?????° s:?????????\nT card[5];\nint base[4][14];\t// ?????¬???????????±\nint rate[9];\t\t// ??????????????±\n\nint dcnt[14];\t\t// ????????°????????????????????????\nint scnt[4];\t\t// ????????????????????????????????????\nint tr['Z'+1];\t\t// ????????¨\n\nint cmp(T *a, T *b) { return a->d - b->d; }\n\nint main()\n{\n\tint n, i, j, f, ans;\n\tchar s[3];\n\tint cno = 0;\n\n\ttr['S'] = 0, tr['C'] = 1,  tr['H'] = 2,  tr['D'] = 3;\n\tfor (i = 0; i <= 9; i++) tr[i+'0'] = i;\n\ttr['A'] = 1, tr['T'] = 10, tr['J'] = 11, tr['Q'] = 12, tr['K'] = 13;\n\n\twhile (scanf(\"%d\", &n) == 1) {\n\t\tif (cno++) putchar('\\n');\t\t// ???????????±??????????????????\n\n\t\tfor (i = 0; i < 4; i++) for (j = 0; j < 13; j++) scanf(\"%d\", &base[i][j+1]);\n\t\tfor (i = 0; i < 9; i++) scanf(\"%d\", rate+i);\n\t\twhile (n-- > 0) {\n\t\t\tfor (i = 0; i < 5; i++) {\t\t\t// ??????????????±\n\t\t\t\tscanf(\"%s\", s); \n\t\t\t\tcard[i].d = tr[s[0]], card[i].s = tr[s[1]];\n\t\t\t}\n\t\t\tfor (i = 0; i < 4; i++) qsort(card, 5, sizeof(T), cmp);  // ?????°??§???????????????\n\t\t\tmemset(dcnt, 0, sizeof(dcnt));\n\t\t\tfor (i = 0; i < 5; i++) dcnt[card[i].d]++;\t\t// ???????????°????????°???????¨?\n\t\t\tmemset(scnt, 0, sizeof(scnt));\n\t\t\tfor (i = 0; i < 5; i++) scnt[card[i].s]++;\t\t// ???????????????????????°???????¨?\n\n\t\t\tans = 0;\n\t\t\t// ?????¬???\n\t\t\tfor (i = 0; i < 5; i++)\tans += base[card[i].s][card[i].d];\n\n\t\t\t// ????????????????????¬????????????????????\\\n\t\t\tif (card[0].d == 1) {\n\t\t\t\tfor (i = 1; ; i++) {\n\t\t\t\t\tif (i == 5) { ans *= rate[8]; goto Done; }\n\t\t\t\t\tif (card[i].s != card[0].s || card[i].d != 9+i) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ????????¬????????????????????\\\n\t\t\tif (card[0].d != 1) {\n\t\t\t\tfor (i = 1; ; i++) {\n\t\t\t\t\tif (i == 5) { ans *= rate[7]; goto Done; }\n\t\t\t\t\tif (card[i].s != card[0].s || card[i].d != card[0].d+i) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ??????????????????\n\t\t\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 4) { ans *= rate[6]; goto Done; }\n\t\t\t\n\t\t\t// ???????????????\n\t\t\tf = 0;\n\t\t\tfor (i = 1; i <= 13; i++) {\n\t\t\t\tif (dcnt[i] == 3) f |= 1;\n\t\t\t\tif (dcnt[i] == 2) f |= 2;\n\t\t\t}\n\t\t\tif (f == 3) { ans *= rate[5]; goto Done; }\n\n\t\t\t// ??????????????\\\n\t\t\tfor (i = 0; i < 4; i++) if (scnt[i] == 5) { ans *= rate[4]; goto Done; }\n\n\t\t\t// ????????¬??????\n\t\t\tif (card[0].d == 1) {\n\t\t\t\tfor (i = 1; ; i++) {\n\t\t\t\t\tif (i == 5) { ans *= rate[3]; goto Done; }\n\t\t\t\t\tif (card[i].d != 9+i) break;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 1; ; i++) {\n\t\t\t\t\tif (i == 5) { ans *= rate[3]; goto Done; }\n\t\t\t\t\tif (card[i].d != card[0].d+i) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ??????????????????\n\t\t\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 3) { ans *= rate[2]; goto Done; }\n\n\t\t\t// ???????????¢ or ???????????¢\n\t\t\tf = 0;\n\t\t\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 2) f++;\n\t\t\tif      (f == 2) { ans *= rate[1]; goto Done; }\n\t\t\telse if (f == 1) { ans *= rate[0]; goto Done; }\n\n\t\t\t// ??????\n\t\t\tans = 0;\n\nDone:\t\tprintf(\"%d\\n\", ans);\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint N,T[4][15],Y[15],i,j,t,f=0;\nchar CS[5][2],s[]=\"SCHD\",n[]=\"A23456789TJQKA\";\n\nint ns(char a){int i,c=0;for(i=0;i<5;i++)c+=CS[i][0]==a;return c;}\nint cf(){\n\tint i;for(i=1;i<5&&CS[i][1]==CS[i-1][1];i++);\n\treturn i==5;\n}\nint crs()\n{\n\treturn ns('T')&&ns('J')&&ns('Q')&&ns('K')&&ns('A');}\nint cs()\n{\n\tint i;\n\tfor(i=1;i<11;i++)\n\t{\n\t\tif(ns(n[i])&&ns(n[i+1])&&ns(n[i+2])&&ns(n[i+3])&&ns(n[i+4]))\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\nint cp(int num)\n{\n\tint r=0,i;\n\tfor(i=0;i<13;i++)\n\t{\n\t\tif(ns(n[i])==num)\n\t\t\tr++;\n\t}\n\treturn r;\n}\n\nint role()\n{\n\tif(cf()&&crs())return Y[8];\n\tif(cf()&&cs())return Y[7];\n\tif(cp(4))return Y[6];\n\tif(cp(3)&&cp(2))return Y[5];\n\tif(cf())return Y[4];\n\tif(cs())return Y[3];\n\tif(cp(3))return Y[2];\n\tif(cp(2)==2)return Y[1];\n\tif(cp(2)==1)return Y[0];\n\treturn 0;\n}\n\nint base(char c,char r)\n{\n\tint a,b;\n\tfor(a=0;s[a]!=r;a++);\n\tfor(b=0;n[b]!=c;b++);\n\treturn T[a][b];\n}\n\nint main()\n{\n\tfor(;~scanf(\"%d\",&N);f++)\n\t{\n\t\tif(f)puts(\"\");\n\t\tfor(i=0;i<4;i++)\n\t\t\tfor(j=0;j<13;j++)\n\t\t\t\tscanf(\"%d\",&T[i][j]);\n\t\tfor(i=0;i<9;i++)scanf(\"%d\",&Y[i]);\n\t\tgetchar();\n\t\tfor(i=0;i<N;i++)\n\t\t{\n\t\t\tt=0;\n\t\t\tfor(j=0;j<5;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%c%c%*c\",&CS[j][0],&CS[j][1]);\n\t\t\t\tt+=base(CS[j][0],CS[j][1]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",t*role());\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<string.h>\nchar*D=\"A23456789TJQK\",*S=\"SCHD\",c[15];\nb[4][13],g[10],h[5],F;\nmain(N){\n\tint i,j;\n\tfor(;~scanf(\"%d\",&N);){\n\t\tif(F)\n\t\t\tputs(\"\");\n\t\tF=1;\n\t\tfor(i=0;i<4;i++)\n\t\t\tfor(j=0;j<13;j++)\n\t\t\t\tscanf(\"%d\",&b[i][j]);\n\t\tfor(i=1;i<=9;i++)\n\t\t\tscanf(\"%d\",g+i);\n\t\tfor(;N--;){\n\t\t\tchar H[3],*t;\n\t\t\tint d,s0,s,B=0,f=1,r;\n\t\t\tmemset(c,'0',13);\n\t\t\tmemset(h,0,sizeof(h));\n\t\t\tfor(i=0;i<5;i++){\n\t\t\t\tscanf(\"%s\",H);\n\t\t\t\td=strchr(D,H[0])-D;\n\t\t\t\ts=strchr(S,H[1])-S;\n\t\t\t\tB+=b[s][d];\n\t\t\t\tc[d]++;\n\t\t\t\tif(i==0)\n\t\t\t\t\ts0=s;\n\t\t\t\telse if(s!=s0)\n\t\t\t\t\tf=0;\n\t\t\t}\n\t\t\tc[13]=c[0];\n\t\t\tfor(i=0;i<13;i++)\n\t\t\t\th[c[i]-'0']++;\n\t\t\tt=strstr(c,\"11111\");\n\t\t\tif(f&&t==c+9)\n\t\t\t\tr=9;//royal-straight-flush\n\t\t\telse if(f&&t)\n\t\t\t\tr=8;//straight-flush\n\t\t\telse if(h[4])\n\t\t\t\tr=7;//four-card\n\t\t\telse if(h[3]&&h[2])\n\t\t\t\tr=6;//full-house\n\t\t\telse if(f)\n\t\t\t\tr=5;//flush\n\t\t\telse if(t)\n\t\t\t\tr=4;//stright\n\t\t\telse if(h[3])\n\t\t\t\tr=3;//three-card\n\t\t\telse if(h[2]==2)\n\t\t\t\tr=2;//two-pair\n\t\t\telse if(h[2])\n\t\t\t\tr=1;//one-pair\n\t\t\telse\n\t\t\t\tr=0;//no-role\n\t\t\tprintf(\"%d \\n\",g[r]*B);\n\t\t}\n\t}\n}"
  },
  {
    "language": "C",
    "code": "D=\"A23456789TJQK\",S=\"SCHD\";\nb[5][13],g[10],F;\nd,s0,s,B,f,r;\ni,j;\nmain(N){\n\tfor(;~scanf(\"%d\",&N);){\n\t\tif(F)\n\t\t\tputs(\"\");\n\t\tF=1;\n\t\tfor(i=0;i<61;i++)\n\t\t\tscanf(\"%d\",b[i/13]+i%13);\n\t\tfor(;N--;){\n\t\t\tchar*t,H[3],c[]=\"00000000000000\",h[5]={0};\n\t\t\tB=0;\n\t\t\tf=1;\n\t\t\tmemset(c,48,13);\n\t\t\tfor(i=5;i--;i>3?s0=s:s-s0?f=0:0)\n\t\t\t\tscanf(\"%s\",H),c[d=strchr(D,*H)-D]++,B+=b[s=strchr(S,H[1])-S][d];\n\t\t\tfor(c[i=13]=*c;i--;t=strstr(c,\"11111\"))\n\t\t\t\th[c[i]-48]++;\n\t\t\tif(f){\n\t\t\t\tif(t==c+9)\n\t\t\t\t\tr=9;\n\t\t\t\telse if(t)\n\t\t\t\t\tr=8;\n\t\t\t\telse\n\t\t\t\t\tr=5;\n\t\t\t}else if(t)\n\t\t\t\tr=4;\n\t\t\telse if(h[4])\n\t\t\t\tr=7;\n\t\t\telse if(h[3]){\n\t\t\t\tif(h[2])\n\t\t\t\t\tr=6;\n\t\t\t\telse\n\t\t\t\t\tr=3;\n\t\t\t}else if(h[2])\n\t\t\t\tr=h[2];\n\t\t\telse\n\t\t\t\tr=0;\n\t\t\tprintf(\"%d \\n\",b[4][r?r-1:9]*B);\n\t\t}\n\t}\n}"
  },
  {
    "language": "C",
    "code": "// Aizu 2218: K Poker\n// 2017.9.23 bal4u@uu\n// ?????????????????????????????\\????????????????????????????????????????????????\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct { int d, s; } T;\t// ??????????????± d:?????° s:?????????\nT card[5];\nint base[4][14];\t// ?????¬???????????±\nint rate[9];\t\t// ??????????????±\n\nint dcnt[14];\t\t// ????????°????????????????????????\nint scnt[4];\t\t// ????????????????????????????????????\nint tr['Z'];\t\t// ????????¨\n\nint cmp(T *a, T *b) { return a->d - b->d; }\n\nint calc()\n{\n\tint i, f, ans = 0;\n\n\t// ?????¬???\n\tfor (i = 0; i < 5; i++)\tans += base[card[i].s][card[i].d];\n\n\t// ????????????????????¬????????????????????\\\n\tif (card[0].d == 1) {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[8];\n\t\t\tif (card[i].s != card[0].s || card[i].d != 9+i) break;\n\t\t}\n\t}\n\n\t// ????????¬????????????????????\\\n//\tif (card[0].d != 1) {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[7];\n\t\t\tif (card[i].s != card[0].s || card[i].d != card[0].d+i) break;\n\t\t}\n//\t}\n\n\t// ??????????????????\n\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 4) return ans * rate[6];\n\n\t// ???????????????\n\tf = 0;\n\tfor (i = 1; i <= 13; i++) {\n\t\tif      (dcnt[i] == 3) f |= 1;\n\t\telse if (dcnt[i] == 2) f |= 2;\n\t}\n\tif (f == 3) return ans * rate[5];\n\n\t// ??????????????\\\n\tfor (i = 0; i < 4; i++) if (scnt[i] == 5) return ans * rate[4];\n\n\t// ????????¬??????\n\tif (card[0].d == 1) {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[3];\n\t\t\tif (card[i].d != 9+i) break;\n\t\t}\n\t}\n//\telse {\n\t\tfor (i = 1; ; i++) {\n\t\t\tif (i == 5) return ans * rate[3];\n\t\t\tif (card[i].d != card[0].d+i) break;\n\t\t}\n//\t}\n\n\t// ??????????????????\n\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 3) return ans * rate[2];\n\n\t// ???????????¢ or ???????????¢\n\tf = 0;\n\tfor (i = 1; i <= 13; i++) if (dcnt[i] == 2) f++;\n\tif (f == 2) return ans * rate[1];\n\tif (f == 1) return ans * rate[0];\n\n\t// ??????\n\treturn 0;\n}\n\n\nint main()\n{\n\tint n, i, j;\n\tchar s[3];\n\tint cno = 0;\n\n\ttr['S'] = 0, tr['C'] = 1,  tr['H'] = 2,  tr['D'] = 3;\n\tfor (i = 2; i <= 9; i++) tr[i+'0'] = i;\n\ttr['A'] = 1, tr['T'] = 10, tr['J'] = 11, tr['Q'] = 12, tr['K'] = 13;\n\n\twhile (scanf(\"%d\", &n) == 1) {\n\t\tif (cno++) putchar('\\n');\t\t// ???????????±??????????????????\n\n\t\tfor (i = 0; i < 4; i++) for (j = 0; j < 13; j++) scanf(\"%d\", &base[i][j+1]);\n\t\tfor (i = 0; i < 9; i++) scanf(\"%d\", rate+i);\n\t\twhile (n-- > 0) {\n\t\t\tfor (i = 0; i < 5; i++) {\t// ??????????????±\n\t\t\t\tscanf(\"%s\", s); \n\t\t\t\tcard[i].d = tr[s[0]], card[i].s = tr[s[1]];\n\t\t\t}\n\t\t\tfor (i = 0; i < 4; i++) qsort(card, 5, sizeof(T), cmp);  // ?????°??§???????????????\n\t\t\tmemset(dcnt, 0, sizeof(dcnt)), memset(scnt, 0, sizeof(scnt));\n\t\t\tfor (i = 0; i < 5; i++) {\n\t\t\t\tdcnt[card[i].d]++;\t\t// ???????????°????????°???????¨?\n\t\t\t\tscnt[card[i].s]++;\t\t// ???????????????????????°???????¨?\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", calc());\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2218\nTitle K poker\n*/\n#include <stdio.h>\n#include <string.h>\n//Global data section\nint card_point[4][13];\nint yaku_point[10];\nchar hand[20];\nint n;\nchar *nums=\"A23456789TJQK\";\nchar *suits=\"SCHD\";\n//\nvoid print_hand(char *b)\n{\n        printf(\"%s\\n\",b);\n}\nint conv_num(char c)\n{\n        return(strchr(nums,c)-nums+1);\n}\nint conv_suit(char c)\n{\n        return(strchr(suits,c)-suits+1);\n}\n\nint calc_point(char * b)\n{\n        int x,y,i,p;\n        p=0;\n        for(i=0;i<5;i++)\n        {\n                x=conv_num(b[i*3]);\n                y=conv_suit(b[i*3+1]);\n                p += card_point[y-1][x-1];\n        }\n        return(p);\n}\nint calc_pair(char *b)\n{\n        int i,j,p;\n\n        p=0;\n        for(i=0;i<4;i++)\n                for(j=i+1;j<5;j++)\n                        p += ((b[i*3]==b[j*3])?1:0);\n        return(p);\n}\nint is_flash(char *b)\n{\n        int i,j,p;\n\n        p=0;\n        for(i=0;i<4;i++)\n                for(j=i+1;j<5;j++)\n                        p += ((b[i*3+1]==b[j*3+1])?1:0);\n        return(p==10);\n}\ncomp_card(void * c1,void * c2)\n{\n        return(conv_num(((char *)c1)[0])>conv_num(((char *)c2)[0]));\n}\nis_straight(char * b)\n{\n        b[14]=' ';b[15]='\\0';\n        qsort(b,5,3,comp_card);\n\n        //print_hand(b);\n        //printf(\"** %d %d\\n\",conv_num(b[0]),conv_num(b[12]));\n        if(conv_num(b[0])+4==conv_num(b[12]))\n                return(1);\n        \n        if(conv_num(b[0])==1 && conv_num(b[3])==10)\n                return(2);\n\n        return(0);\n}\nint calc_yaku(char * b)\n{\n        int ret,ret1;\n\n        ret=calc_pair(b);\n        if(ret==1)\n                return(yaku_point[0]);\n        if(ret==2)\n                return(yaku_point[1]);\n        if(ret==3)\n                return(yaku_point[2]);\n        if(ret==4)\n                return(yaku_point[5]);\n        if(ret==6)\n                return(yaku_point[6]);\n        ret=is_straight(b);\n        ret1=is_flash(b);\n        if(ret==2 && ret1)\n                return(yaku_point[8]);\n        if(ret==1 && ret1)\n                return(yaku_point[7]);\n        if(ret1)\n                return(yaku_point[4]);\n        if(ret)\n                return(yaku_point[3]);\n        return(0); //no pair\n}\nmain()\n{\n        int i,j,k,ret;\n\n        while(EOF!=scanf(\"%d\",&n) && n)\n        {\n \n                for(i=0;i<4;i++)\n                        for(j=0;j<13;j++)\n                                scanf(\"%d\",&card_point[i][j]);\n\n                for(i=0;i<9;i++)\n                        scanf(\"%d \",&yaku_point[i]);\n                \n                for(j=0;j<n;j++)\n                {\n                        fgets(hand,20,stdin);\n\n                        //ret=calc_point(hand);\n                        ret=calc_yaku(hand)*calc_point(hand);\n                        printf(\"%d\\n\",ret);\n                }\n        }\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint N,T[4][15],Y[15],i,j,t,f=0;\nchar CS[5][2],s[]=\"SCHD\",n[]=\"A23456789TJQK\";\n\nint ns(char a){int i,c=0;for(i=0;i<5;i++)c+=CS[i][0]==a;return c;}\nint cf(){\n\tint i;for(i=1;i<5&&CS[i][1]==CS[i-1][1];i++);\n\treturn i==5;\n}\nint crs(){return ns('T')&&ns('J')&&ns('Q')&&ns('K')&&ns('A');}\nint cs()\n{\n\tint i;\n\tfor(i=0;i<10;i++)\n\t{\n\t\tif(ns(n[i])&&ns(n[i+1])&&ns(n[i+2])&&ns(n[i+3])&&ns(n[i+4]))\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\nint cp(int num)\n{\n\tint r=0,i;\n\tfor(i=0;i<13;i++)\n\t{\n\t\tif(ns(n[i])==num)\n\t\t\tr++;\n\t}\n\treturn r;\n}\n\nint role()\n{\n\tif(cf()&&crs())return Y[8];\n\tif(cf()&&cs())return Y[7];\n\tif(cp(4))return Y[6];\n\tif(cp(3)&&cp(2))return Y[5];\n\tif(cf())return Y[4];\n\tif(cs())return Y[3];\n\tif(cp(3))return Y[2];\n\tif(cp(2)==2)return Y[1];\n\tif(cp(2)==1)return Y[0];\n\treturn 0;\n}\n\nint base(char c,char r)\n{\n\tint a,b;\n\tfor(a=0;s[a]!=r;a++);\n\tfor(b=0;n[b]!=c;b++);\n\treturn T[a][b];\n}\n\nint main()\n{\n\tfor(;~scanf(\"%d\",&N);f++)\n\t{\n\t\tif(f)puts(\"\");\n\t\tfor(i=0;i<4;i++)\n\t\t\tfor(j=0;j<13;j++)\n\t\t\t\tscanf(\"%d\",&T[i][j]);\n\t\tfor(i=0;i<9;i++)scanf(\"%d\",&Y[i]);\n\t\tgetchar();\n\t\tfor(i=0;i<N;i++)\n\t\t{\n\t\t\tt=0;\n\t\t\tfor(j=0;j<5;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%c%c%*c\",&CS[j][0],&CS[j][1]);\n\t\t\t\tt+=base(CS[j][0],CS[j][1]);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",t*role());\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "Kotlin",
    "code": "\nfun main(args:Array<String>):Unit {\n    var isNotFirst = false\n    while(true){\n        if (isNotFirst) print(\"\\n\")\n        isNotFirst = true\n        val n = readLine()?.trim()?.toInt() ?: return\n        val basePoint = Array(4){readLine()!!.trim().split(' ').map(String::toInt).toTypedArray()}\n        val multiple = readLine()!!.trim().split(' ').map(String::toInt).toTypedArray()\n        val score = ScoreBoard(basePoint, multiple)\n        repeat(n){\n            println(score.score(Cards(readLine()!!.trim().split(' ').map{Card(it)})))\n        }\n    }\n}\nclass ScoreBoard(private val mBasePoints:Array<Array<Int>>, private val mMultiple:Array<Int>){\n    private fun baseScore(card:Card):Int {\n        return mBasePoints[when(card.suit){\n            Suit.Spade -> 0\n            Suit.Clover -> 1\n            Suit.Hart -> 2\n            Suit.Dia -> 3\n        }][card.number - 1]\n    }\n    fun score(cards:Cards):Int {\n        return cards.cards.sumBy{baseScore(it)} * when(cards.role()){\n            Role.NoRole -> 0\n            Role.OnePair -> mMultiple[0]\n            Role.TwoPair -> mMultiple[1]\n            Role.ThreeCards -> mMultiple[2]\n            Role.Strait -> mMultiple[3]\n            Role.Flush -> mMultiple[4]\n            Role.FullHouse -> mMultiple[5]\n            Role.FourCards -> mMultiple[6]\n            Role.StraitFlush -> mMultiple[7]\n            Role.RoyalStraitFlush -> mMultiple[8]\n        }\n    }\n}\nenum class Suit{\n    Spade, Clover, Hart, Dia\n}\nclass Card private constructor(val number:Int, val suit: Suit){\n    constructor(str:String):this(when(str[0]){\n        'A' -> 1\n        'T' -> 10\n        'J' -> 11\n        'Q' -> 12\n        'K' -> 13\n        else -> str[0].toString().toInt()\n    }, when(str[1]){\n        'S' -> Suit.Spade\n        'C' -> Suit.Clover\n        'H' -> Suit.Hart\n        else -> Suit.Dia\n    })\n}\nenum class Role{\n    NoRole, OnePair, TwoPair, ThreeCards, Strait, Flush, FullHouse, FourCards, StraitFlush, RoyalStraitFlush\n}\nclass Cards(private val mCards:Iterable<Card>){\n    val cards:Iterable<Card>\n        get() = mCards\n    fun role():Role {\n        return when{\n            isRoyalStraitFlush(mCards) -> Role.RoyalStraitFlush\n            isStraitFlush(mCards) -> Role.StraitFlush\n            isFourCards(mCards) -> Role.FourCards\n            isFullHouse(mCards) -> Role.FullHouse\n            isFlush(mCards) -> Role.Flush\n            isStrait(mCards) -> Role.Strait\n            isThreeCards(mCards) -> Role.ThreeCards\n            isTwoPair(mCards) -> Role.TwoPair\n            isOnePair(mCards) -> Role.OnePair\n            else -> Role.NoRole\n        }\n    }\n    companion object {\n        private fun isRoyalStraitFlush(cards:Iterable<Card>):Boolean {\n            return isFlush(cards) && isTenToAceStrait(cards)\n        }\n        private fun isFlush(cards:Iterable<Card>):Boolean {\n            return Suit.values().any{suit -> cards.all{it.suit == suit}}\n        }\n        private fun isTenToAceStrait(cards:Iterable<Card>):Boolean {\n            return listOf(1, 10, 11, 12, 13).all{num -> cards.any{it.number == num}}\n        }\n        private fun isStrait(cards:Iterable<Card>):Boolean {\n            return (1 until 5).map{cards.minBy(Card::number)!!.number + it}.all{num -> cards.any{it.number == num}} || isTenToAceStrait(cards)\n        }\n        private fun isStraitFlush(cards:Iterable<Card>):Boolean {\n             return isStrait(cards) && isFlush(cards)\n        }\n        private fun isFourCards(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any { it.value.size == 4 }\n        }\n        private fun isTwoPair(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).filter{it.value.size == 2}.count() == 2\n        }\n        private fun isThreeCards(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any{it.value.size == 3}\n        }\n        private fun isOnePair(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any{it.value.size == 2}\n        }\n        private fun isFullHouse(cards:Iterable<Card>):Boolean {\n            return isOnePair(cards) && isThreeCards(cards)\n        }\n    }\n}\n"
  },
  {
    "language": "Kotlin",
    "code": "\nfun main(args:Array<String>):Unit {\n    var isNotFirst = false\n    while(true){\n        val n = readLine()?.trim()?.toInt() ?: return\n        if (isNotFirst) print(\"\\n\")\n        isNotFirst = true\n        val basePoint = Array(4){readLine()!!.trim().split(' ').map(String::toInt).toTypedArray()}\n        val multiple = readLine()!!.trim().split(' ').map(String::toInt).toTypedArray()\n        val score = ScoreBoard(basePoint, multiple)\n        repeat(n){\n            println(score.score(Cards(readLine()!!.trim().split(' ').map{Card(it)})))\n        }\n    }\n}\nclass ScoreBoard(private val mBasePoints:Array<Array<Int>>, private val mMultiple:Array<Int>){\n    private fun baseScore(card:Card):Int {\n        return mBasePoints[when(card.suit){\n            Suit.Spade -> 0\n            Suit.Clover -> 1\n            Suit.Hart -> 2\n            Suit.Dia -> 3\n        }][card.number - 1]\n    }\n    fun score(cards:Cards):Int {\n        return cards.cards.sumBy{baseScore(it)} * when(cards.role()){\n            Role.NoRole -> 0\n            Role.OnePair -> mMultiple[0]\n            Role.TwoPair -> mMultiple[1]\n            Role.ThreeCards -> mMultiple[2]\n            Role.Strait -> mMultiple[3]\n            Role.Flush -> mMultiple[4]\n            Role.FullHouse -> mMultiple[5]\n            Role.FourCards -> mMultiple[6]\n            Role.StraitFlush -> mMultiple[7]\n            Role.RoyalStraitFlush -> mMultiple[8]\n        }\n    }\n}\nenum class Suit{\n    Spade, Clover, Hart, Dia\n}\nclass Card private constructor(val number:Int, val suit: Suit){\n    constructor(str:String):this(when(str[0]){\n        'A' -> 1\n        'T' -> 10\n        'J' -> 11\n        'Q' -> 12\n        'K' -> 13\n        else -> str[0].toString().toInt()\n    }, when(str[1]){\n        'S' -> Suit.Spade\n        'C' -> Suit.Clover\n        'H' -> Suit.Hart\n        else -> Suit.Dia\n    })\n}\nenum class Role{\n    NoRole, OnePair, TwoPair, ThreeCards, Strait, Flush, FullHouse, FourCards, StraitFlush, RoyalStraitFlush\n}\nclass Cards(private val mCards:Iterable<Card>){\n    val cards:Iterable<Card>\n        get() = mCards\n    fun role():Role {\n        return when{\n            isRoyalStraitFlush(mCards) -> Role.RoyalStraitFlush\n            isStraitFlush(mCards) -> Role.StraitFlush\n            isFourCards(mCards) -> Role.FourCards\n            isFullHouse(mCards) -> Role.FullHouse\n            isFlush(mCards) -> Role.Flush\n            isStrait(mCards) -> Role.Strait\n            isThreeCards(mCards) -> Role.ThreeCards\n            isTwoPair(mCards) -> Role.TwoPair\n            isOnePair(mCards) -> Role.OnePair\n            else -> Role.NoRole\n        }\n    }\n    companion object {\n        private fun isRoyalStraitFlush(cards:Iterable<Card>):Boolean {\n            return isFlush(cards) && isTenToAceStrait(cards)\n        }\n        private fun isFlush(cards:Iterable<Card>):Boolean {\n            return Suit.values().any{suit -> cards.all{it.suit == suit}}\n        }\n        private fun isTenToAceStrait(cards:Iterable<Card>):Boolean {\n            return listOf(1, 10, 11, 12, 13).all{num -> cards.any{it.number == num}}\n        }\n        private fun isStrait(cards:Iterable<Card>):Boolean {\n            return (1 until 5).map{cards.minBy(Card::number)!!.number + it}.all{num -> cards.any{it.number == num}} || isTenToAceStrait(cards)\n        }\n        private fun isStraitFlush(cards:Iterable<Card>):Boolean {\n             return isStrait(cards) && isFlush(cards)\n        }\n        private fun isFourCards(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any { it.value.size == 4 }\n        }\n        private fun isTwoPair(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).filter{it.value.size == 2}.count() == 2\n        }\n        private fun isThreeCards(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any{it.value.size == 3}\n        }\n        private fun isOnePair(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any{it.value.size == 2}\n        }\n        private fun isFullHouse(cards:Iterable<Card>):Boolean {\n            return isOnePair(cards) && isThreeCards(cards)\n        }\n    }\n}\n"
  },
  {
    "language": "Kotlin",
    "code": "import java.util.*\n\nfun main(args:Array<String>):Unit {\n    var isNotFirst = false\n    while(true){\n        if (isNotFirst) println()\n        isNotFirst = true\n        val n = readLine()?.trim()?.toInt() ?: return\n        val basePoint = Array(4){readLine()!!.trim().split(' ').map(String::toInt).toTypedArray()}\n        val multiple = readLine()!!.trim().split(' ').map(String::toInt).toTypedArray()\n        val score = ScoreBoard(basePoint, multiple)\n        repeat(n){\n            println(score.score(Cards(readLine()!!.trim().split(' ').map{Card(it)})))\n        }\n    }\n}\nclass ScoreBoard(private val mBasePoints:Array<Array<Int>>, private val mMultiple:Array<Int>){\n    private fun baseScore(card:Card):Int {\n        return mBasePoints[when(card.suit){\n            Suit.Spade -> 0\n            Suit.Clover -> 1\n            Suit.Hart -> 2\n            Suit.Dia -> 3\n        }][card.number - 1]\n    }\n    fun score(cards:Cards):Int {\n        return cards.cards.sumBy{baseScore(it)} * when(cards.role()){\n            Role.NoRole -> 0\n            Role.OnePair -> mMultiple[0]\n            Role.TwoPair -> mMultiple[1]\n            Role.ThreeCards -> mMultiple[2]\n            Role.Strait -> mMultiple[3]\n            Role.Flush -> mMultiple[4]\n            Role.FullHouse -> mMultiple[5]\n            Role.FourCards -> mMultiple[6]\n            Role.StraitFlush -> mMultiple[7]\n            Role.RoyalStraitFlush -> mMultiple[8]\n        }\n    }\n}\nenum class Suit{\n    Spade, Clover, Hart, Dia\n}\nclass Card private constructor(val number:Int, val suit: Suit){\n    constructor(str:String):this(when(str[0]){\n        'A' -> 1\n        'T' -> 10\n        'J' -> 11\n        'Q' -> 12\n        'K' -> 13\n        else -> str[0].toString().toInt()\n    }, when(str[1]){\n        'S' -> Suit.Spade\n        'C' -> Suit.Clover\n        'H' -> Suit.Hart\n        else -> Suit.Dia\n    })\n}\nenum class Role{\n    NoRole, OnePair, TwoPair, ThreeCards, Strait, Flush, FullHouse, FourCards, StraitFlush, RoyalStraitFlush\n}\nclass Cards(private val mCards:Iterable<Card>){\n    val cards:Iterable<Card>\n        get() = mCards\n    fun role():Role {\n        return when{\n            isRoyalStraitFlush(mCards) -> Role.RoyalStraitFlush\n            isStraitFlush(mCards) -> Role.StraitFlush\n            isFourCards(mCards) -> Role.FourCards\n            isFullHouse(mCards) -> Role.FullHouse\n            isFlush(mCards) -> Role.Flush\n            isStrait(mCards) -> Role.Strait\n            isThreeCards(mCards) -> Role.ThreeCards\n            isTwoPair(mCards) -> Role.TwoPair\n            isOnePair(mCards) -> Role.OnePair\n            else -> Role.NoRole\n        }\n    }\n    companion object {\n        private fun isRoyalStraitFlush(cards:Iterable<Card>):Boolean {\n            return isFlush(cards) && isTenToAceStrait(cards)\n        }\n        private fun isFlush(cards:Iterable<Card>):Boolean {\n            return Suit.values().any{suit -> cards.all{it.suit == suit}}\n        }\n        private fun isTenToAceStrait(cards:Iterable<Card>):Boolean {\n            return listOf(1, 10, 11, 12, 13).all{num -> cards.any{it.number == num}}\n        }\n        private fun isStrait(cards:Iterable<Card>):Boolean {\n            return (1 until 5).map{cards.minBy(Card::number)!!.number + it}.all{num -> cards.any{it.number == num}} || isTenToAceStrait(cards)\n        }\n        private fun isStraitFlush(cards:Iterable<Card>):Boolean {\n             return isStrait(cards) && isFlush(cards)\n        }\n        private fun isFourCards(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any { it.value.size == 4 }\n        }\n        private fun isTwoPair(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).filter{it.value.size == 2}.count() == 2\n        }\n        private fun isThreeCards(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any{it.value.size == 3}\n        }\n        private fun isOnePair(cards:Iterable<Card>):Boolean {\n            return cards.groupBy(Card::number).any{it.value.size == 2}\n        }\n        private fun isFullHouse(cards:Iterable<Card>):Boolean {\n            return isOnePair(cards) && isThreeCards(cards)\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//K Poker\npublic class Main{\n\n\tint suit(char c){\n\t\treturn c=='S'?0:c=='C'?1:c=='H'?2:3;\n\t}\n\t\n\tint num(char c){\n\t\treturn c=='K'?13:c=='Q'?12:c=='J'?11:c=='T'?10:c=='A'?1:c-'0';\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tboolean top = true;\n\t\twhile(sc.hasNext()){\n\t\t\tif(!top)System.out.println();\n\t\t\ttop = false;\n\t\t\tint n = sc.nextInt();\n\t\t\tint[][] p = new int[4][14];\n\t\t\tfor(int i=0;i<4;i++)for(int j=1;j<14;j++)p[i][j] = sc.nextInt();\n\t\t\t//0: no 1: one-pair 2:two-pair 3:three-cards 4:straight 5:flash 6:fullhouse 7:fourcard 8:straight-flash 9:royal\n\t\t\tint[] r = new int[10];\n\t\t\tfor(int i=1;i<10;i++)r[i]=sc.nextInt();\n\t\t\twhile(n--!=0){\n\t\t\t\tint b = 0;\n\t\t\t\tint X = 0;\n\t\t\t\tint maxS = 0;\n\t\t\t\tint maxN = 0;\n\t\t\t\tint[] suitNum = new int[4];\n\t\t\t\tint[] numNum = new int[14];\n\t\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\t\tchar[] ch = sc.next().toCharArray();\n\t\t\t\t\tint s = suit(ch[1]);\n\t\t\t\t\tint x = num(ch[0]);\n\t\t\t\t\tb+=p[s][x];\n\t\t\t\t\tsuitNum[s]++;\n\t\t\t\t\tnumNum[x]++;\n\t\t\t\t\tmaxS = Math.max(maxS, suitNum[s]);\n\t\t\t\t\tmaxN = Math.max(maxN, numNum[x]);\n\t\t\t\t}\n\t\t\t\tif(maxN==4){\n\t\t\t\t\tX = 7;\n\t\t\t\t}\n\t\t\t\telse if(maxN==3){\n\t\t\t\t\tboolean f = true;\n\t\t\t\t\tfor(int i=1;i<=13;i++){\n\t\t\t\t\t\tif(numNum[i]==2){\n\t\t\t\t\t\t\tf = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(f)X = 3;\n\t\t\t\t\telse X = 6;\n\t\t\t\t}\n\t\t\t\telse if(maxN==2){\n\t\t\t\t\tint c = 0;\n\t\t\t\t\tfor(int i=1;i<=13;i++)if(numNum[i]==2)c++;\n\t\t\t\t\tif(c==2)X = 2;\n\t\t\t\t\telse X = 1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tboolean flash = maxS==5;\n\t\t\t\t\tboolean straight = false;\n\t\t\t\t\tfor(int i=1;i+4<=13;i++){\n\t\t\t\t\t\tboolean f = true;\n\t\t\t\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\t\t\t\tif(numNum[i+j]==0)f = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(f){\n\t\t\t\t\t\t\tstraight = true;break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tboolean royal = numNum[1]==1&&numNum[10]==1&&numNum[11]==1&&numNum[12]==1&&numNum[13]==1;\n\t\t\t\t\tif(royal&&flash)X = 9;\n\t\t\t\t\telse if(flash&&(royal||straight))X = 8;\n\t\t\t\t\telse if(flash)X = 5;\n\t\t\t\t\telse if(straight||royal)X = 4;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(b*r[X]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    public Main(){\n\tScanner sc = new Scanner(System.in);\n\tint f = 0;\n\n\twhile(sc.hasNext()){\n\t    if(f == 1){\n\t\tSystem.out.println();\n\t    }\n\t    f = 1;\n\t    int n = sc.nextInt();\n\t    int card[][] = new int[4][];\n\t    int hand[] = new int[10];\n\t    for(int i = 0; i < 4; i++){\n\t\tcard[i] = new int[14];\n\t\tfor(int j = 1; j < 14; j++){\n\t\t    card[i][j] = sc.nextInt();\n\t\t}\n\t    }\n\t    hand[0] = 0;\n\t    for(int i = 1; i <= 9; i++){\n\t\thand[i] = sc.nextInt();\n\t    }\n\t    for(int k = 0, s = 0, t = 0; k < n; k++, s = 0, t = 0){\n\t\tPlayer pl[] = new Player[5];\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    String st = sc.next();\n\t\t    pl[i] = new Player(st.substring(0, 1), st.substring(1, 2));\n\t\t}\n\t\tsort(pl);\n\t\tint a = pl[0].n, b = pl[1].n, c = pl[2].n, d = pl[3].n, e = pl[4].n;\n\t\tif(pl[0].m == pl[1].m && pl[0].m == pl[2].m && pl[0].m == pl[3].m && pl[0].m == pl[4].m){\n\t\t    t = 5;\n\t\t}\n\t\tif(a == 1 && b == 10 && c == 11 && d == 12 && e == 13 && t == 5){\n\t\t    t = 9;\n\t\t}\n\t\tif(a+1 == b && a+2 == c && a+3 == d && a+4 == e){\n\t\t    if(t == 5){\n\t\t\tt = 8;\n\t\t    } else {\n\t\t\tt = 4;\n\t\t    }\n\t\t}\n\t\tif(a == b && b == c && c == d){\n\t\t    t = 7;\n\t\t} else if(b == c && c == d && d == e){\n\t\t    t = 7;\n\t\t}\n\t\tif(a == b && b == c){\n\t\t    if(e == d){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t} else if(c == d && d == e){\n\t\t    if(a == b){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t}\n\n\t\tif(t == 0){\n\t\t    if(c == d && b == c){\n\t\t\tt = 3;\n\t\t    } else if(a == b && (c == d) || (d == e)){\n\t\t\tt = 2;\n\t\t    } else if(b == c && d == e){\n\t\t\tt = 2;\n\t\t    } else if(a == b || b == c || c == d || d == e){\n\t\t\tt = 1;\n\t\t    }\n\t\t}\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    s += card[pl[i].m][pl[i].n];\n\t\t}\n\t\ts *= hand[t];\n\t\tSystem.out.println(s);\n\t    }\n\t}\n    }\n\n    public void sort(Player[] pl){\n\tPlayer p;\n\tfor(int i = 4; i >= 0; i--){\n\t    for(int j = 1; j <= i; j++){\n\t\tif(pl[j].n < pl[j-1].n){\n\t\t    p = pl[j];\n\t\t    pl[j] = pl[j-1];\n\t\t    pl[j-1] = p;\n\t\t}\n\t    }\n\t}\n\treturn ;\n    }\n\n    public static void main(String[] args){\n\tnew Main();\n    }\n}\n\nclass Player{\n    public int n;\n    public int m;\n\n    public Player(){\n    }\n\n    public Player(String st, String s){\n\tif(st.equals(\"A\")){\n\t    n = 1;\n\t} else if(st.equals(\"T\")){\n\t    n = 10;\n\t} else if(st.equals(\"J\")){\n\t    n = 11;\n\t} else if(st.equals(\"Q\")){\n\t    n = 12;\n\t} else if(st.equals(\"K\")){\n\t    n = 13;\n\t} else {\n\t    n = Integer.parseInt(st);\n\t}\n\tif(s.equals(\"S\")){\n\t    m = 0;\n\t} else if(s.equals(\"C\")){\n\t    m = 1;\n\t} else if(s.equals(\"H\")){\n\t    m = 2;\n\t} else {\n\t    m = 3;\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    public Main(){\n\tScanner sc = new Scanner(System.in);\n\tint f = 0;\n\n\twhile(sc.hasNext()){\n\t    if(f == 1){\n\t\tSystem.out.println();\n\t    }\n\t    f = 1;\n\t    int n = sc.nextInt();\n\t    int card[][] = new int[4][];\n\t    int hand[] = new int[10];\n\t    for(int i = 0; i < 4; i++){\n\t\tcard[i] = new int[14];\n\t\tfor(int j = 1; j < 14; j++){\n\t\t    card[i][j] = sc.nextInt();\n\t\t}\n\t    }\n\t    hand[0] = 0;\n\t    for(int i = 1; i <= 9; i++){\n\t\thand[i] = sc.nextInt();\n\t    }\n\t    for(int k = 0, s = 0, t = 0; k < n; k++, s = 0, t = 0){\n\t\tPlayer pl[] = new Player[5];\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    String st = sc.next();\n\t\t    pl[i] = new Player(st.substring(0, 1), st.substring(1, 2));\n\t\t}\n\t\tsort(pl);\n\t\tint a = pl[0].n, b = pl[1].n, c = pl[2].n, d = pl[3].n, e = pl[4].n;\n\t\tif(pl[0].m == pl[1].m && pl[0].m == pl[2].m && pl[0].m == pl[3].m && pl[0].m == pl[4].m){\n\t\t    t = 5;\n\t\t}\n\t\tif(a == 1 && b == 10 && c == 11 && d == 12 && e == 13 && t == 5){\n\t\t    t = 9;\n\t\t}\n\t\tif(a+1 == b && a+2 == c && a+3 == d && a+4 == e){\n\t\t    if(t == 5){\n\t\t\tt = 8;\n\t\t    } else {\n\t\t\tt = 4;\n\t\t    }\n\t\t}\n\t\tif(a == b && b == c && c == d){\n\t\t    t = 7;\n\t\t} else if(b == c && c == d && d == e){\n\t\t    t = 7;\n\t\t}\n\t\tif(a == b && b == c){\n\t\t    if(e == d){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t} else if(c == d && d == e){\n\t\t    if(a == b){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t}\n\n\t\tif(t == 0){\n\t\t    if(c == d && b == c){\n\t\t\tt = 3;\n\t\t    } else if(a == b && (c == d) || (d == e)){\n\t\t\tt = 2;\n\t\t    } else if(b == c && d == e){\n\t\t\tt = 2;\n\t\t    } else if(a == b || b == c || c == d || d == e){\n\t\t\tt = 1;\n\t\t    }\n\t\t}\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    s += card[pl[i].m][pl[i].n];\n\t\t}\n\t\ts *= hand[t];\n\t\tSystem.out.println(s);\n\t    }\n\t}\n    }\n\n    public void sort(Player[] pl){\n\tPlayer p;\n\tfor(int i = 4; i >= 0; i--){\n\t    for(int j = 1; j <= i; j++){\n\t\tif(pl[j].n < pl[j-1].n){\n\t\t    p = pl[j];\n\t\t    pl[j] = pl[j-1];\n\t\t    pl[j-1] = p;\n\t\t}\n\t    }\n\t}\n\treturn ;\n    }\n\n    public static void main(String[] args){\n\tnew Main();\n    }\n}\n\nclass Player{\n    public int n;\n    public int m;\n\n    public Player(){\n    }\n\n    public Player(String st, String s){\n\tif(st.equals(\"A\")){\n\t    n = 1;\n\t} else if(st.equals(\"T\")){\n\t    n = 10;\n\t} else if(st.equals(\"J\")){\n\t    n = 11;\n\t} else if(st.equals(\"Q\")){\n\t    n = 12;\n\t} else if(st.equals(\"K\")){\n\t    n = 13;\n\t} else {\n\t    n = Integer.parseInt(st);\n\t}\n\tif(s.equals(\"S\")){\n\t    m = 0;\n\t} else if(s.equals(\"C\")){\n\t    m = 1;\n\t} else if(s.equals(\"H\")){\n\t    m = 2;\n\t} else {\n\t    m = 3;\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint[][] basePoints = new int[4][13];\n\t\tint[] rates = new int[9];\n\n\t\tMap<Character, Integer> cardMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('A', 0);\n\t\t\t\tput('2', 1);\n\t\t\t\tput('3', 2);\n\t\t\t\tput('4', 3);\n\t\t\t\tput('5', 4);\n\t\t\t\tput('6', 5);\n\t\t\t\tput('7', 6);\n\t\t\t\tput('8', 7);\n\t\t\t\tput('9', 8);\n\t\t\t\tput('T', 9);\n\t\t\t\tput('J', 10);\n\t\t\t\tput('Q', 11);\n\t\t\t\tput('K', 12);\n\t\t\t}\n\t\t};\n\t\tMap<Character, Integer> markMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('S', 0);\n\t\t\t\tput('C', 1);\n\t\t\t\tput('H', 2);\n\t\t\t\tput('D', 3);\n\t\t\t}\n\t\t};\n\n\t\twhile (true) {\n\t\t\tint n = 0;\n\t\t\ttry {\n\t\t\t\tn = sc.nextInt();\n\t\t\t\tif (n == 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < 4; i++) {\n\t\t\t\t\tfor (int j = 0; j < 13; j++) {\n\t\t\t\t\t\tbasePoints[i][j] = sc.nextInt();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\t\trates[i] = sc.nextInt();\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tCard[] cards = new Card[5];\n\t\t\t\tint minNumber = 13;\n\t\t\t\tint maxNumber = 0;\n\t\t\t\tint basePoint = 0;\n\t\t\t\tSet<Integer> marks = new HashSet<Integer>();\n\t\t\t\tSet<Integer> numbers = new HashSet<Integer>();\n\t\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\t\tString cardString = sc.next();\n\t\t\t\t\tcards[j] = new Card(cardMap.get(cardString.charAt(0)),\n\t\t\t\t\t\t\tmarkMap.get(cardString.charAt(1)));\n\t\t\t\t\tmarks.add(cards[j].type);\n\t\t\t\t\tnumbers.add(cards[j].number);\n\t\t\t\t\t// if (cards[j].number < minNumber)\n\t\t\t\t\t// minNumber = cards[j].number;\n\t\t\t\t\t// if (maxNumber < cards[j].number)\n\t\t\t\t\t// maxNumber = cards[j].number;\n\t\t\t\t\tbasePoint += basePoints[cards[j].type][cards[j].number];\n\t\t\t\t}\n\n\t\t\t\tYaku yaku = resolveRate(cards, marks, numbers);\n\t\t\t\tint rate = yaku == null ? 0 : rates[yaku.ordinal()];\n\t\t\t\tSystem.out.println(basePoint * rate);\n\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\n\t}\n\n\tstatic Yaku resolveRate(Card[] cards, Set<Integer> marks,\n\t\t\tSet<Integer> numbers) {\n\t\tArrays.sort(cards);\n\n\t\t// tbV\n\t\tboolean isFlash = marks.size() == 1;\n\n\t\t// straight\n\t\tboolean isStraight = true;\n\t\tfor (int i = 1; i < 5; i++) {\n\t\t\tif (cards[i - 1].number + 1 != cards[i].number\n\t\t\t\t\t&& (i != 4 || cards[i].number != 0)) {\n\t\t\t\tisStraight = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isFlash && isStraight) {\n\t\t\tif (cards[4].number == 0) {\n\t\t\t\treturn Yaku.ROYAL;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.STRAIGHT_FLASH;\n\t\t\t}\n\t\t}\n\t\tif (isStraight) {\n\t\t\treturn Yaku.STRAIGHT;\n\t\t}\n\t\tif (isFlash) {\n\t\t\treturn Yaku.FLASH;\n\t\t}\n\t\tif (numbers.size() == 2) {\n\t\t\tint numEqualToFirst = 0;\n\t\t\tfor (int j = 1; j < 5; j++) {\n\t\t\t\tif (cards[0].number == cards[j].number) {\n\t\t\t\t\tnumEqualToFirst++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (numEqualToFirst == 0 || numEqualToFirst == 3) {\n\t\t\t\treturn Yaku.FOUR_PAIR;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.FULLHAUSE;\n\t\t\t}\n\t\t}\n\t\tif (numbers.size() == 3) {\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tint numCount = 0;\n\t\t\t\tfor (int k = 0; k < 5; k++) {\n\t\t\t\t\tif (cards[j].number == cards[k].number)\n\t\t\t\t\t\tnumCount++;\n\n\t\t\t\t}\n\t\t\t\tif (numCount == 3) {\n\t\t\t\t\treturn Yaku.THREE_PAIR;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Yaku.TWO_PAIR;\n\t\t}\n\t\tif (numbers.size() == 4) {\n\t\t\treturn Yaku.ONE_PAIR;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic class Card implements Comparable<Card> {\n\t\tfinal int number;\n\t\tfinal int type;\n\n\t\tpublic Card(int number, int type) {\n\t\t\tsuper();\n\t\t\tthis.number = number;\n\t\t\tthis.type = type;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Card o) {\n\t\t\tif (number != o.number)\n\t\t\t\treturn number - o.number;\n\t\t\treturn type - o.type;\n\t\t}\n\n\t}\n\n}\n\nenum Yaku {\n\tONE_PAIR, TWO_PAIR, THREE_PAIR, STRAIGHT, FLASH, FULLHAUSE, FOUR_PAIR, STRAIGHT_FLASH, ROYAL;\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner in = new Scanner(System.in);\n\t\tRule rule = new Rule();\n\t\tSortedSet<Card> cards = new TreeSet<Card>();\n\t\tboolean hasNextCase = true;\n\t\twhile (hasNextCase) {\n\t\t\tint n = in.nextInt();\n\t\t\trule.setCardPoints(in);\n\t\t\trule.setYaku(in);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tcards.clear();\n\t\t\t\tint cp = 0;\n\t\t\t\tfor (int c = 0; c < 5; c++) {\n\t\t\t\t\tfinal String s = in.next();\n\t\t\t\t\tCard card = Card.of(s);\n\t\t\t\t\tcp += rule.getCardPoint(card);\n\t\t\t\t\tcards.add(card);\n\t\t\t\t}\n\t\t\t\tint dp = 0;\n\t\t\t\tif (cp > 0) {\n\t\t\t\t\tdp = rule.getYakuPoint(cards);\n\t\t\t\t}\n\t\t\t\tSystem.out.println(dp * cp);\n\t\t\t}\n\t\t\thasNextCase = in.hasNext();\n\t\t\tif (hasNextCase) {\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nclass Card implements Comparable<Card> {\n\tfinal int suit;\n\tfinal int num;\n\n\tprivate Card(String str) {\n\t\tfinal char c = str.charAt(1);\n\t\tthis.suit = (c == 'S') ? 0 : (c == 'C') ? 1 : (c == 'H') ? 2\n\t\t\t\t: (c == 'D') ? 3 : -1;\n\t\tfinal char c1 = str.charAt(0);\n\t\tthis.num = ((c1 == 'A') ? 1 : (c1 == 'T') ? 10 : (c1 == 'J') ? 11\n\t\t\t\t: (c1 == 'Q') ? 12 : (c1 == 'K') ? 13 : Character.digit(c1, 10)) - 1;\n\t}\n\n\tstatic HashMap<String, Card> all = new HashMap<String, Card>();\n\n\tpublic static Card of(String str) {\n\t\tif (!all.containsKey(str)) {\n\t\t\tfinal Card newCard = new Card(str);\n\t\t\tall.put(str, newCard);\n\t\t\treturn newCard;\n\t\t}\n\t\treturn all.get(str);\n\n\t}\n\n\t@Override\n\tpublic int compareTo(Card o) {\n\t\tif (this == o) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn (num > o.num) ? 1 : (num == o.num) ? ((suit > o.suit) ? 1\n\t\t\t\t: (suit == o.suit) ? 0 : -1) : -1;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn String.format(\"%2d%2d\", suit, num + 1);\n\t}\n}\n\nclass Rule {\n\n\tfinal int[][] points = new int[4][13];\n\tfinal int[] yakuPoints = new int[9];\n\n\tvoid setCardPoints(Scanner in) {\n\t\tfor (final int[] s : points) {\n\t\t\tfor (int i = 0; i < 13; i++) {\n\t\t\t\ts[i] = in.nextInt();\n\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid setYaku(Scanner in) {\n\t\tfor (int i =0; i < 9; i++) {\n\t\t\tyakuPoints[i] = in.nextInt();\n\t\t}\n\t}\n\n\tint getCardPoint(Card card) {\n\t\treturn points[card.suit][card.num];\n\t}\n\n\tint getYakuPoint(SortedSet<Card> cardset) {\n\t\tboolean flash = true;\n\t\tboolean st = true;\n\t\tboolean r = false;\n\t\tint[] count = new int[13];\n\t\tint num = cardset.first().num;\n\t\tint suit = cardset.first().suit;\n\t\tfor (Card card : cardset) {\n\t\t\tflash = flash && (card.suit == suit);\n\t\t\tif (num == 1 && card.num == 9) {\n\t\t\t\tnum = 9;\n\t\t\t\tr = true;\n\t\t\t}\n\t\t\tst = st && (card.num == (num++));\n\t\t\tr = r && st;\n\t\t\tcount[card.num]++;\n\t\t}\n\t\tif (st) {\n\t\t\tif (flash) {\n\t\t\t\tif (r) {\n\t\t\t\t\treturn yakuPoints[8];\n\t\t\t\t}\n\t\t\t\treturn yakuPoints[7];\n\t\t\t}\n\t\t\treturn yakuPoints[3];\n\t\t}\n\t\tif (flash) {\n\t\t\treturn yakuPoints[4];\n\t\t}\n\t\tint pair = 0;\n\t\tint three = 0;\n\t\tint counter = 0;\n\t\tfor (int n : count) {\n\t\t\tif (n == 2) {\n\t\t\t\tpair++;\n\t\t\t\tif (pair == 2) {\n\t\t\t\t\treturn yakuPoints[1];\n\t\t\t\t}\n\t\t\t} else if (n == 3) {\n\t\t\t\tthree++;\n\t\t\t} else if (n == 4) {\n\t\t\t\treturn yakuPoints[6];\n\t\t\t}\n\t\t\tif ((counter += n) == 5) {\n\t\t\t\tif (three == 1) {\n\t\t\t\t\tif (pair == 1) {\n\t\t\t\t\t\treturn yakuPoints[5];\n\t\t\t\t\t}\n\t\t\t\t\treturn yakuPoints[2];\n\t\t\t\t}\n\t\t\t\tif (pair == 1) {\n\t\t\t\t\treturn yakuPoints[0];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.math.BigDecimal;\n\npublic class Main{\n    public Main(){\n\tScanner sc = new Scanner(System.in);\n\tint f = 0;\n\n\twhile(sc.hasNext()){\n\t    if(f == 1){\n\t\tSystem.out.println();\n\t    }\n\t    f = 1;\n\t    int n = sc.nextInt();\n\t    int card[][] = new int[4][];\n\t    int hand[] = new int[10];\n\t    for(int i = 0; i < 4; i++){\n\t\tcard[i] = new int[14];\n\t\tfor(int j = 1; j < 14; j++){\n\t\t    card[i][j] = sc.nextInt();\n\t\t}\n\t    }\n\t    hand[0] = 0;\n\t    for(int i = 1; i <= 9; i++){\n\t\thand[i] = sc.nextInt();\n\t    }\n\t    for(int k = 0, t = 0; k < n; k++, t = 0){\n\t\tPlayer pl[] = new Player[5];\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    String st = sc.next();\n\t\t    pl[i] = new Player(st.substring(0, 1), st.substring(1, 2));\n\t\t}\n\t\tsort(pl);\n\t\tint a = pl[0].n, b = pl[1].n, c = pl[2].n, d = pl[3].n, e = pl[4].n;\n\t\tif(pl[0].m == pl[1].m && pl[0].m == pl[2].m && pl[0].m == pl[3].m && pl[0].m == pl[4].m){\n\t\t    t = 5;\n\t\t}\n\t\tif(a == 1 && b == 10 && c == 11 && d == 12 && e == 13){\n\t\t    if(t == 5){\n\t\t\tt = 9;\n\t\t    } else {\n\t\t\tt = 4;\n\t\t    }\n\t\t}\n\t\tif(a+1 == b && a+2 == c && a+3 == d && a+4 == e){\n\t\t    if(t == 5){\n\t\t\tt = 8;\n\t\t    } else {\n\t\t\tt = 4;\n\t\t    }\n\t\t}\n\t\tif(a == b && b == c && c == d){\n\t\t    t = 7;\n\t\t} else if(b == c && c == d && d == e){\n\t\t    t = 7;\n\t\t}\n\t\tif(a == b && b == c){\n\t\t    if(e == d){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t} else if(c == d && d == e){\n\t\t    if(a == b){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t}\n\n\t\tif(t == 0){\n\t\t    if(c == d && b == c){\n\t\t\tt = 3;\n\t\t    } else if(a == b && (c == d) || (d == e)){\n\t\t\tt = 2;\n\t\t    } else if(b == c && d == e){\n\t\t\tt = 2;\n\t\t    } else if(a == b || b == c || c == d || d == e){\n\t\t\tt = 1;\n\t\t    }\n\t\t}\n\t\tlong s = 0;\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    s += card[pl[i].m][pl[i].n];\n\t\t}\n\t\ts *= hand[t];\n\t\tSystem.out.println(s);\n\t    }\n\t}\n    }\n\n    public void sort(Player[] pl){\n\tPlayer p;\n\tfor(int i = 4; i >= 0; i--){\n\t    for(int j = 1; j <= i; j++){\n\t\tif(pl[j].n < pl[j-1].n){\n\t\t    p = pl[j];\n\t\t    pl[j] = pl[j-1];\n\t\t    pl[j-1] = p;\n\t\t}\n\t    }\n\t}\n\treturn ;\n    }\n\n    public static void main(String[] args){\n\tnew Main();\n    }\n}\n\nclass Player{\n    public int n;\n    public int m;\n\n    public Player(){\n    }\n\n    public Player(String st, String s){\n\tif(st.equals(\"A\")){\n\t    n = 1;\n\t} else if(st.equals(\"T\")){\n\t    n = 10;\n\t} else if(st.equals(\"J\")){\n\t    n = 11;\n\t} else if(st.equals(\"Q\")){\n\t    n = 12;\n\t} else if(st.equals(\"K\")){\n\t    n = 13;\n\t} else {\n\t    n = Integer.parseInt(st);\n\t}\n\tif(s.equals(\"S\")){\n\t    m = 0;\n\t} else if(s.equals(\"C\")){\n\t    m = 1;\n\t} else if(s.equals(\"H\")){\n\t    m = 2;\n\t} else {\n\t    m = 3;\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//K Poker\npublic class Main{\n\n\tint suit(char c){\n\t\treturn c=='S'?0:c=='C'?1:c=='H'?2:3;\n\t}\n\t\n\tint num(char c){\n\t\treturn c=='K'?13:c=='Q'?12:c=='J'?11:c=='T'?10:c=='A'?1:c-'0';\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tboolean top = true;\n\t\twhile(sc.hasNext()){\n\t\t\tif(!top)System.out.println();\n\t\t\ttop = false;\n\t\t\tint n = sc.nextInt();\n\t\t\tint[][] p = new int[4][14];\n\t\t\tfor(int i=0;i<4;i++)for(int j=1;j<14;j++)p[i][j] = sc.nextInt();\n\t\t\t//0: no 1: one-pair 2:two-pair 3:three-cards 4:straight 5:flash 6:fullhouse 7:fourcard 8:straight-flash 9:royal\n\t\t\tint[] r = new int[10];\n\t\t\tfor(int i=1;i<10;i++)r[i]=sc.nextInt();\n\t\t\twhile(n--!=0){\n\t\t\t\tint b = 0;\n\t\t\t\tint X = 0;\n\t\t\t\tint maxS = 0;\n\t\t\t\tint maxN = 0;\n\t\t\t\tint[] suitNum = new int[4];\n\t\t\t\tint[] numNum = new int[14];\n\t\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\t\tchar[] ch = sc.next().toCharArray();\n\t\t\t\t\tint s = suit(ch[1]);\n\t\t\t\t\tint x = num(ch[0]);\n\t\t\t\t\tb+=p[s][x];\n\t\t\t\t\tsuitNum[s]++;\n\t\t\t\t\tnumNum[x]++;\n\t\t\t\t\tmaxS = Math.max(maxS, suitNum[s]);\n\t\t\t\t\tmaxN = Math.max(maxN, numNum[x]);\n\t\t\t\t}\n\t\t\t\tif(maxN==4){\n\t\t\t\t\tX = 7;\n\t\t\t\t}\n\t\t\t\telse if(maxN==3){\n\t\t\t\t\tboolean f = true;\n\t\t\t\t\tfor(int i=1;i<=13;i++){\n\t\t\t\t\t\tif(numNum[i]==2){\n\t\t\t\t\t\t\tf = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(f)X = 3;\n\t\t\t\t\telse X = 6;\n\t\t\t\t}\n\t\t\t\telse if(maxN==2){\n\t\t\t\t\tint c = 0;\n\t\t\t\t\tfor(int i=1;i<=13;i++)if(numNum[i]==2)c++;\n\t\t\t\t\tif(c==2)X = 2;\n\t\t\t\t\telse X = 1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tboolean flash = false;\n\t\t\t\t\tfor(int i=0;i<4;i++)if(suitNum[i]==5)flash = true;\n\t\t\t\t\tboolean straight = false;\n\t\t\t\t\tfor(int i=1;i+4<=13;i++){\n\t\t\t\t\t\tboolean f = true;\n\t\t\t\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\t\t\t\tif(numNum[i+j]==0)f = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(f){\n\t\t\t\t\t\t\tstraight = true;break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tboolean royal = numNum[1]==1&&numNum[10]==1&&numNum[11]==1&&numNum[12]==1&&numNum[13]==1;\n\t\t\t\t\tif(royal&&flash)X = 9;\n\t\t\t\t\telse if(flash&&(royal||straight))X = 8;\n\t\t\t\t\telse if(flash)X = 5;\n\t\t\t\t\telse if(straight||royal)X = 4;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(b*r[X]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint[][] basePoints = new int[4][13];\n\t\tint[] rates = new int[9];\n\n\t\tMap<Character, Integer> cardMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('A', 0);\n\t\t\t\tput('2', 1);\n\t\t\t\tput('3', 2);\n\t\t\t\tput('4', 3);\n\t\t\t\tput('5', 4);\n\t\t\t\tput('6', 5);\n\t\t\t\tput('7', 6);\n\t\t\t\tput('8', 7);\n\t\t\t\tput('9', 8);\n\t\t\t\tput('T', 9);\n\t\t\t\tput('J', 10);\n\t\t\t\tput('Q', 11);\n\t\t\t\tput('K', 12);\n\t\t\t}\n\t\t};\n\t\tMap<Character, Integer> markMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('S', 0);\n\t\t\t\tput('C', 1);\n\t\t\t\tput('H', 2);\n\t\t\t\tput('D', 3);\n\t\t\t}\n\t\t};\n\n\t\twhile (true) {\n\t\t\tint n = 0;\n\t\t\tif (!sc.hasNext()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < 4; i++) {\n\t\t\t\tfor (int j = 0; j < 13; j++) {\n\t\t\t\t\tbasePoints[i][j] = sc.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\trates[i] = sc.nextInt();\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tCard[] cards = new Card[5];\n\t\t\t\tint basePoint = 0;\n\t\t\t\tSet<Integer> marks = new HashSet<Integer>();\n\t\t\t\tSet<Integer> numbers = new HashSet<Integer>();\n\t\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\t\tString cardString = sc.next();\n\t\t\t\t\tcards[j] = new Card(cardMap.get(cardString.charAt(0)),\n\t\t\t\t\t\t\tmarkMap.get(cardString.charAt(1)));\n\t\t\t\t\tmarks.add(cards[j].type);\n\t\t\t\t\tnumbers.add(cards[j].number);\n\t\t\t\t\tbasePoint += basePoints[cards[j].type][cards[j].number];\n\t\t\t\t}\n\n\t\t\t\tYaku yaku = resolveRate(cards, marks, numbers);\n\t\t\t\tint rate = yaku == null ? 0 : rates[yaku.ordinal()];\n\t\t\t\tSystem.out.println(basePoint * rate);\n\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\n\t}\n\n\tstatic Yaku resolveRate(Card[] cards, Set<Integer> marks,\n\t\t\tSet<Integer> numbers) {\n\t\tArrays.sort(cards);\n\n\t\t// tbV\n\t\tboolean isFlash = marks.size() == 1;\n\n\t\t// straight\n\t\tboolean isStraight = true;\n\t\tfor (int i = 1; i < 5; i++) {\n\t\t\tif (cards[i - 1].number + 1 != cards[i].number\n\t\t\t\t\t&& (i != 4 || cards[i].number != 0)) {\n\t\t\t\tisStraight = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isFlash && isStraight) {\n\t\t\tif (cards[4].number == 0) {\n\t\t\t\treturn Yaku.ROYAL;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.STRAIGHT_FLASH;\n\t\t\t}\n\t\t}\n\t\tif (isStraight) {\n\t\t\treturn Yaku.STRAIGHT;\n\t\t}\n\t\tif (isFlash) {\n\t\t\treturn Yaku.FLASH;\n\t\t}\n\t\tif (numbers.size() == 2) {\n\t\t\tint numEqualToFirst = 0;\n\t\t\tfor (int j = 1; j < 5; j++) {\n\t\t\t\tif (cards[0].number == cards[j].number) {\n\t\t\t\t\tnumEqualToFirst++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (numEqualToFirst == 0 || numEqualToFirst == 3) {\n\t\t\t\treturn Yaku.FOUR_PAIR;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.FULLHAUSE;\n\t\t\t}\n\t\t}\n\t\tif (numbers.size() == 3) {\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tint numCount = 0;\n\t\t\t\tfor (int k = 0; k < 5; k++) {\n\t\t\t\t\tif (cards[j].number == cards[k].number)\n\t\t\t\t\t\tnumCount++;\n\n\t\t\t\t}\n\t\t\t\tif (numCount == 3) {\n\t\t\t\t\treturn Yaku.THREE_PAIR;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Yaku.TWO_PAIR;\n\t\t}\n\t\tif (numbers.size() == 4) {\n\t\t\treturn Yaku.ONE_PAIR;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic class Card implements Comparable<Card> {\n\t\tfinal int number;\n\t\tfinal int type;\n\n\t\tpublic Card(int number, int type) {\n\t\t\tsuper();\n\t\t\tthis.number = number;\n\t\t\tthis.type = type;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Card o) {\n\t\t\tif (number != o.number)\n\t\t\t\treturn number - o.number;\n\t\t\treturn type - o.type;\n\t\t}\n\n\t}\n\n}\n\nenum Yaku {\n\tONE_PAIR, TWO_PAIR, THREE_PAIR, STRAIGHT, FLASH, FULLHAUSE, FOUR_PAIR, STRAIGHT_FLASH, ROYAL;\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint[][] basePoints = new int[4][13];\n\t\tint[] rates = new int[9];\n\n\t\tMap<Character, Integer> cardMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('A', 0);\n\t\t\t\tput('2', 1);\n\t\t\t\tput('3', 2);\n\t\t\t\tput('4', 3);\n\t\t\t\tput('5', 4);\n\t\t\t\tput('6', 5);\n\t\t\t\tput('7', 6);\n\t\t\t\tput('8', 7);\n\t\t\t\tput('9', 8);\n\t\t\t\tput('T', 9);\n\t\t\t\tput('J', 10);\n\t\t\t\tput('Q', 11);\n\t\t\t\tput('K', 12);\n\t\t\t}\n\t\t};\n\t\tMap<Character, Integer> markMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('S', 0);\n\t\t\t\tput('C', 1);\n\t\t\t\tput('H', 2);\n\t\t\t\tput('D', 3);\n\t\t\t}\n\t\t};\n\n\t\twhile (true) {\n\t\t\tint n = sc.nextInt();\n\t\t\tif (n == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < 4; i++) {\n\t\t\t\tfor (int j = 0; j < 13; j++) {\n\t\t\t\t\tbasePoints[i][j] = sc.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\trates[i] = sc.nextInt();\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tCard[] cards = new Card[5];\n\t\t\t\tint basePoint = 0;\n\t\t\t\tSet<Integer> marks = new HashSet<Integer>();\n\t\t\t\tSet<Integer> numbers = new HashSet<Integer>();\n\t\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\t\tString cardString = sc.next();\n\t\t\t\t\tcards[j] = new Card(cardMap.get(cardString.charAt(0)),\n\t\t\t\t\t\t\tmarkMap.get(cardString.charAt(1)));\n\t\t\t\t\tmarks.add(cards[j].type);\n\t\t\t\t\tnumbers.add(cards[j].number);\n\t\t\t\t\tbasePoint += basePoints[cards[j].type][cards[j].number];\n\t\t\t\t}\n\n\t\t\t\tYaku yaku = resolveRate(cards, marks, numbers);\n\t\t\t\tint rate = yaku == null ? 0 : rates[yaku.ordinal()];\n\t\t\t\tSystem.out.println(basePoint * rate);\n\n\t\t\t}\n\n\t\t\tif (!sc.hasNextInt()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tstatic Yaku resolveRate(Card[] cards, Set<Integer> marks,\n\t\t\tSet<Integer> numbers) {\n\t\tArrays.sort(cards);\n\n\t\t// tbV\n\t\tboolean isFlush = marks.size() == 1;\n\n\t\t// straight\n\t\tboolean isStraight = true;\n\t\tfor (int i = 1; i < 5; i++) {\n\t\t\tif (cards[i - 1].number + 1 != cards[i].number\n\t\t\t\t\t&& (i != 1 || cards[0].number != 0 || cards[1].number != 9)) {\n\t\t\t\tisStraight = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isFlush && isStraight) {\n\t\t\tif (cards[0].number == 0 && cards[4].number == 12) {\n\t\t\t\treturn Yaku.ROYAL;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.STRAIGHT_FLUSH;\n\t\t\t}\n\t\t}\n\t\tif (isStraight) {\n\t\t\treturn Yaku.STRAIGHT;\n\t\t}\n\t\tif (isFlush) {\n\t\t\treturn Yaku.FLUSH;\n\t\t}\n\t\tif (numbers.size() == 2) {\n\t\t\tint numEqualToFirst = 0;\n\t\t\tfor (int j = 1; j < 5; j++) {\n\t\t\t\tif (cards[0].number == cards[j].number) {\n\t\t\t\t\tnumEqualToFirst++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (numEqualToFirst == 0 || numEqualToFirst == 3) {\n\t\t\t\treturn Yaku.FOUR_PAIR;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.FULLHAUSE;\n\t\t\t}\n\t\t}\n\t\tif (numbers.size() == 3) {\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tint numCount = 0;\n\t\t\t\tfor (int k = 0; k < 5; k++) {\n\t\t\t\t\tif (cards[j].number == cards[k].number)\n\t\t\t\t\t\tnumCount++;\n\n\t\t\t\t}\n\t\t\t\tif (numCount == 3) {\n\t\t\t\t\treturn Yaku.THREE_PAIR;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Yaku.TWO_PAIR;\n\t\t}\n\t\tif (numbers.size() == 4) {\n\t\t\treturn Yaku.ONE_PAIR;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic class Card implements Comparable<Card> {\n\t\tfinal int number;\n\t\tfinal int type;\n\n\t\tpublic Card(int number, int type) {\n\t\t\tsuper();\n\t\t\tthis.number = number;\n\t\t\tthis.type = type;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Card o) {\n\t\t\tif (number != o.number)\n\t\t\t\treturn number - o.number;\n\t\t\treturn type - o.type;\n\t\t}\n\n\t}\n\n}\n\nenum Yaku {\n\tONE_PAIR, TWO_PAIR, THREE_PAIR, STRAIGHT, FLUSH, FULLHAUSE, FOUR_PAIR, STRAIGHT_FLUSH, ROYAL;\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint[][] basePoints = new int[4][13];\n\t\tint[] rates = new int[9];\n\n\t\tMap<Character, Integer> cardMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('A', 0);\n\t\t\t\tput('2', 1);\n\t\t\t\tput('3', 2);\n\t\t\t\tput('4', 3);\n\t\t\t\tput('5', 4);\n\t\t\t\tput('6', 5);\n\t\t\t\tput('7', 6);\n\t\t\t\tput('8', 7);\n\t\t\t\tput('9', 8);\n\t\t\t\tput('T', 9);\n\t\t\t\tput('J', 10);\n\t\t\t\tput('Q', 11);\n\t\t\t\tput('K', 12);\n\t\t\t}\n\t\t};\n\t\tMap<Character, Integer> markMap = new HashMap<Character, Integer>() {\n\t\t\t{\n\t\t\t\tput('S', 0);\n\t\t\t\tput('C', 1);\n\t\t\t\tput('H', 2);\n\t\t\t\tput('D', 3);\n\t\t\t}\n\t\t};\n\n\t\twhile (true) {\n\t\t\tint n = 0;\n\t\t\tif (!sc.hasNextInt()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < 4; i++) {\n\t\t\t\tfor (int j = 0; j < 13; j++) {\n\t\t\t\t\tbasePoints[i][j] = sc.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < 9; i++) {\n\t\t\t\trates[i] = sc.nextInt();\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tCard[] cards = new Card[5];\n\t\t\t\tint basePoint = 0;\n\t\t\t\tSet<Integer> marks = new HashSet<Integer>();\n\t\t\t\tSet<Integer> numbers = new HashSet<Integer>();\n\t\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\t\tString cardString = sc.next();\n\t\t\t\t\tcards[j] = new Card(cardMap.get(cardString.charAt(0)),\n\t\t\t\t\t\t\tmarkMap.get(cardString.charAt(1)));\n\t\t\t\t\tmarks.add(cards[j].type);\n\t\t\t\t\tnumbers.add(cards[j].number);\n\t\t\t\t\tbasePoint += basePoints[cards[j].type][cards[j].number];\n\t\t\t\t}\n\n\t\t\t\tYaku yaku = resolveRate(cards, marks, numbers);\n\t\t\t\tint rate = yaku == null ? 0 : rates[yaku.ordinal()];\n\t\t\t\tSystem.out.println(basePoint * rate);\n\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\n\t}\n\n\tstatic Yaku resolveRate(Card[] cards, Set<Integer> marks,\n\t\t\tSet<Integer> numbers) {\n\t\tArrays.sort(cards);\n\n\t\t// tbV\n\t\tboolean isFlash = marks.size() == 1;\n\n\t\t// straight\n\t\tboolean isStraight = true;\n\t\tfor (int i = 1; i < 5; i++) {\n\t\t\tif (cards[i - 1].number + 1 != cards[i].number\n\t\t\t\t\t&& (i != 1 || cards[0].number != 0 || cards[1].number != 9)) {\n\t\t\t\tisStraight = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isFlash && isStraight) {\n\t\t\tif (cards[0].number == 0 && cards[4].number == 12) {\n\t\t\t\treturn Yaku.ROYAL;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.STRAIGHT_FLUSH;\n\t\t\t}\n\t\t}\n\t\tif (isStraight) {\n\t\t\treturn Yaku.STRAIGHT;\n\t\t}\n\t\tif (isFlash) {\n\t\t\treturn Yaku.FLUSH;\n\t\t}\n\t\tif (numbers.size() == 2) {\n\t\t\tint numEqualToFirst = 0;\n\t\t\tfor (int j = 1; j < 5; j++) {\n\t\t\t\tif (cards[0].number == cards[j].number) {\n\t\t\t\t\tnumEqualToFirst++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (numEqualToFirst == 0 || numEqualToFirst == 3) {\n\t\t\t\treturn Yaku.FOUR_PAIR;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Yaku.FULLHAUSE;\n\t\t\t}\n\t\t}\n\t\tif (numbers.size() == 3) {\n\t\t\tfor (int j = 0; j < 5; j++) {\n\t\t\t\tint numCount = 0;\n\t\t\t\tfor (int k = 0; k < 5; k++) {\n\t\t\t\t\tif (cards[j].number == cards[k].number)\n\t\t\t\t\t\tnumCount++;\n\n\t\t\t\t}\n\t\t\t\tif (numCount == 3) {\n\t\t\t\t\treturn Yaku.THREE_PAIR;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Yaku.TWO_PAIR;\n\t\t}\n\t\tif (numbers.size() == 4) {\n\t\t\treturn Yaku.ONE_PAIR;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic class Card implements Comparable<Card> {\n\t\tfinal int number;\n\t\tfinal int type;\n\n\t\tpublic Card(int number, int type) {\n\t\t\tsuper();\n\t\t\tthis.number = number;\n\t\t\tthis.type = type;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Card o) {\n\t\t\tif (number != o.number)\n\t\t\t\treturn number - o.number;\n\t\t\treturn type - o.type;\n\t\t}\n\n\t}\n\n}\n\nenum Yaku {\n\tONE_PAIR, TWO_PAIR, THREE_PAIR, STRAIGHT, FLUSH, FULLHAUSE, FOUR_PAIR, STRAIGHT_FLUSH, ROYAL;\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n    public Main(){\n\tScanner sc = new Scanner(System.in);\n\tint f = 0;\n\n\twhile(sc.hasNext()){\n\t    if(f == 1){\n\t\tSystem.out.println();\n\t    }\n\t    f = 1;\n\t    int n = sc.nextInt();\n\t    int card[][] = new int[4][];\n\t    int hand[] = new int[10];\n\t    for(int i = 0; i < 4; i++){\n\t\tcard[i] = new int[14];\n\t\tfor(int j = 1; j < 14; j++){\n\t\t    card[i][j] = sc.nextInt();\n\t\t}\n\t    }\n\t    hand[0] = 0;\n\t    for(int i = 1; i <= 9; i++){\n\t\thand[i] = sc.nextInt();\n\t    }\n\t    for(int k = 0, s = 0, t = 0; k < n; k++, s = 0, t = 0){\n\t\tPlayer pl[] = new Player[5];\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    String st = sc.next();\n\t\t    pl[i] = new Player(st.substring(0, 1), st.substring(1, 2));\n\t\t}\n\t\tsort(pl);\n\t\tint a = pl[0].n, b = pl[1].n, c = pl[2].n, d = pl[3].n, e = pl[4].n;\n\t\tif(pl[0].m == pl[1].m && pl[0].m == pl[2].m && pl[0].m == pl[3].m && pl[0].m == pl[4].m){\n\t\t    t = 5;\n\t\t}\n\t\tif(a == 1 && b == 10 && c == 11 && d == 12 && e == 13){\n\t\t    if(t == 5){\n\t\t\tt = 9;\n\t\t    } else {\n\t\t\tt = 4;\n\t\t    }\n\t\t}\n\t\tif(a+1 == b && a+2 == c && a+3 == d && a+4 == e){\n\t\t    if(t == 5){\n\t\t\tt = 8;\n\t\t    } else {\n\t\t\tt = 4;\n\t\t    }\n\t\t}\n\t\tif(a == b && b == c && c == d){\n\t\t    t = 7;\n\t\t} else if(b == c && c == d && d == e){\n\t\t    t = 7;\n\t\t}\n\t\tif(a == b && b == c){\n\t\t    if(e == d){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t} else if(c == d && d == e){\n\t\t    if(a == b){\n\t\t\tt = 6;\n\t\t    } else if(t == 0){\n\t\t\tt = 3;\n\t\t    }\n\t\t}\n\n\t\tif(t == 0){\n\t\t    if(c == d && b == c){\n\t\t\tt = 3;\n\t\t    } else if(a == b && (c == d) || (d == e)){\n\t\t\tt = 2;\n\t\t    } else if(b == c && d == e){\n\t\t\tt = 2;\n\t\t    } else if(a == b || b == c || c == d || d == e){\n\t\t\tt = 1;\n\t\t    }\n\t\t}\n\t\tfor(int i = 0; i < 5; i++){\n\t\t    s += card[pl[i].m][pl[i].n];\n\t\t}\n\t\ts *= hand[t];\n\t\tSystem.out.println(s);\n\t    }\n\t}\n    }\n\n    public void sort(Player[] pl){\n\tPlayer p;\n\tfor(int i = 4; i >= 0; i--){\n\t    for(int j = 1; j <= i; j++){\n\t\tif(pl[j].n < pl[j-1].n){\n\t\t    p = pl[j];\n\t\t    pl[j] = pl[j-1];\n\t\t    pl[j-1] = p;\n\t\t}\n\t    }\n\t}\n\treturn ;\n    }\n\n    public static void main(String[] args){\n\tnew Main();\n    }\n}\n\nclass Player{\n    public int n;\n    public int m;\n\n    public Player(){\n    }\n\n    public Player(String st, String s){\n\tif(st.equals(\"A\")){\n\t    n = 1;\n\t} else if(st.equals(\"T\")){\n\t    n = 10;\n\t} else if(st.equals(\"J\")){\n\t    n = 11;\n\t} else if(st.equals(\"Q\")){\n\t    n = 12;\n\t} else if(st.equals(\"K\")){\n\t    n = 13;\n\t} else {\n\t    n = Integer.parseInt(st);\n\t}\n\tif(s.equals(\"S\")){\n\t    m = 0;\n\t} else if(s.equals(\"C\")){\n\t    m = 1;\n\t} else if(s.equals(\"H\")){\n\t    m = 2;\n\t} else {\n\t    m = 3;\n\t}\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System.Collections.Generic;\nusing System.Linq;\nusing System;\n\npublic class P\n{\n    public char s { get; set; }\n    public int n { get; set; }\n}\n\npublic class hello\n{\n    public static void Main()\n    {\n        var c = \"0023456789TJQKA\";\n        var d = new Dictionary<char, int>();\n        for (int i = 2; i <= 14; i++) d[c[i]] = i;\n        var d2 = new Dictionary<char, int>() { { 'S', 0 }, { 'C', 1 }, { 'H', 2 }, { 'D', 3 } };\n        var first = true;\n        string s;\n        for (; (s = Console.ReadLine()) != null;)\n        {\n            if (first) { first = false; }\n            else Console.WriteLine();\n            var n = int.Parse(s.Trim());\n            var bp = new int[4, 13];\n            for (int i = 0; i < 4; i++)\n            {\n                string[] line = Console.ReadLine().Trim().Split(' ');\n                for (int j = 0; j < 13; j++)\n                    bp[i, j] = int.Parse(line[j]);\n            }\n            string[] line2 = Console.ReadLine().Trim().Split(' ');\n            var handp = Array.ConvertAll(line2, int.Parse);\n            var p = 0;\n            while (p++ < n)\n            {\n\n                var ps = new P[5];\n                line2 = Console.ReadLine().Trim().Split(' ');\n                var bpsum = 0;\n                for (int i = 0; i < 5; i++)\n                {\n                    var suit = line2[i][1];\n                    var wn = d[line2[i][0]];\n                    ps[i] = new P { s = suit, n = wn };\n                    int wp = wn == 14 ? 0 : wn - 1;\n                    bpsum += bp[d2[suit], wp];\n                }\n                if (bpsum == 0) { Console.WriteLine(0); continue; }\n                var whp = checkHand(ps);\n                Console.WriteLine(whp == 0? 0: bpsum * handp[whp - 1]);\n            }\n        }\n    }\n    static int checkHand(P[] ps)\n    {\n        if (royalstraigthflush(ps)) return 9;\n        if (straight(ps) && flush(ps)) return 8;\n        if (card4(ps)) return 7;\n        if (fullhouse(ps)) return 6;\n        if (flush(ps)) return 5;\n        if (straight(ps)) return 4;\n        if (card3(ps)) return 3;\n        if (pair2(ps)) return 2;\n        if (pair1(ps)) return 1;\n        return 0;\n    }\n    static bool pair1(P[] ps)\n    {\n        var d = new Dictionary<int, int>();\n        foreach (var x in ps)\n        {\n            if (d.ContainsKey(x.n)) d[x.n]++;\n            else d[x.n] = 1;\n        }\n        return d.Count() == 4;\n    }\n    static bool pair2(P[] ps)\n    {\n        var d = new Dictionary<int, int>();\n        foreach (var x in ps)\n        {\n            if (d.ContainsKey(x.n)) d[x.n]++;\n            else d[x.n] = 1;\n        }\n        return d.Count() == 3;\n    }\n    static bool card3(P[] ps)\n    {\n        var d = new Dictionary<int, int>();\n        foreach (var x in ps)\n        {\n            if (d.ContainsKey(x.n)) d[x.n]++;\n            else d[x.n] = 1;\n        }\n        foreach (var x in d)\n        {\n            if (x.Value == 3) return true;\n        }\n        return false;\n    }\n    static bool fullhouse(P[] ps)\n    {\n        var d = new Dictionary<int, int>();\n        foreach (var x in ps)\n        {\n            if (d.ContainsKey(x.n)) d[x.n]++;\n            else d[x.n] = 1;\n        }\n        return d.Count() == 2;\n    }\n    static bool card4(P[] ps)\n    {\n        var d = new Dictionary<int, int>();\n        foreach (var x in ps)\n        {\n            if (d.ContainsKey(x.n)) d[x.n]++;\n            else d[x.n] = 1;\n        }\n        foreach (var x in d)\n        {\n            if (x.Value == 4) return true;\n        }\n        return false;\n    }\n    static bool royalstraigthflush(P[] ps)\n    {\n        var a = ps.OrderBy(x => x.n).ToArray();\n        return (flush(a) && a[0].n == 10 && a[1].n == 11 && a[2].n == 12 && a[3].n == 13 && a[4].n == 14);\n    }\n    static bool straight(P[] ps)\n    {\n        var a = ps.OrderBy(x => x.n).ToArray();\n        if (a[0].n == 2 && a[1].n == 3 && a[2].n == 4 && a[3].n == 5 && a[4].n == 14) return true;\n        var t = a[0].n;\n        for (int i = 1; i <= 4; i++)\n        {\n            if (a[i].n != t + 1) return false;\n            t = a[i].n;\n        }\n        return true;\n    }\n    static bool flush(P[] a) => a[0].s == a[1].s && a[1].s == a[2].s && a[2].s == a[3].s && a[3].s == a[4].s;\n}\n\n"
  },
  {
    "language": "Python",
    "code": "card_table = {'A': 0, '2': 1, '3': 2, '4': 3, '5': 4, '6': 5, '7': 6, '8': 7, '9': 8, 'T': 9, 'J': 10, 'Q': 11, 'K': 12}\nsuit_table = {'S': 0, 'C': 1, 'H': 2, 'D': 3}\n\n\ndef get_numlist(cards):\n    numlist = []\n    for card in cards:\n        numlist.append(card[0])\n    return numlist\n\n\ndef is_royal(cards):\n    numlist = get_numlist(cards)\n    if set(numlist) == set(['T', 'J', 'Q', 'K', 'A']):\n        return True\n    else:\n        return False\n\n\ndef is_fourcard(cards):\n    numlist = get_numlist(cards)\n    if numlist.count(numlist[0]) == 4 or numlist.count(numlist[1]) == 4:\n        return True\n    else:\n        return False\n\n\ndef is_fullhouse(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 2:\n        for num in numlist:\n            if numlist.count(num) == 3:\n                return True\n    return False\n\n\ndef is_flash(cards):\n    suitlist = []\n    for card in cards:\n        suitlist.append(card[1])\n    if len(set(suitlist)) == 1:\n        return True\n    else:\n        return False\n\n\ndef is_straight(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 5:\n        index_list = []\n        for num in numlist:\n            index_list.append(card_table[num])\n        index_list.sort()\n        if index_list == range(index_list[0], index_list[4]+1) or index_list == [0, 9, 10, 11, 12]:\n            return True\n    return False\n\n\ndef is_threecard(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 3:\n            return True\n    return False\n\n\ndef is_twopair(cards):\n    count = 0\n    numlist = get_numlist(cards)\n    for num in set(numlist):\n        if numlist.count(num) == 2:\n            count += 1\n        if count == 2:\n            return True\n    return False\n\n\ndef is_onepair(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 2:\n            return True\n    return False\n\n\ndef get_hand(cards, rate):\n    if is_flash(cards) and is_straight(cards):\n        if is_royal(cards):\n            return rate[8]\n        else:\n            return rate[7]\n    if is_fourcard(cards):\n        return rate[6]\n    if is_fullhouse(cards):\n        return rate[5]\n    if is_flash(cards):\n        return rate[4]\n    if is_straight(cards):\n        return rate[3]\n    if is_threecard(cards):\n        return rate[2]\n    if is_twopair(cards):\n        return rate[1]\n    if is_onepair(cards):\n        return rate[0]\n    return 0\n\n\ndef sum_bps(cards, bps):\n    bp = 0\n    for card in cards:\n        num = card_table[card[0]]\n        suit = suit_table[card[1]]\n        bp += bps[suit][num]\n    return bp\n\nfirst_flag = False\nwhile(1):\n    try:\n        if not first_flag:\n            print\n        input_num = int(raw_input())\n        bps = []\n        for count in range(4):\n            i = raw_input()\n            bps.append(map(int, i.split()))\n        i = raw_input()\n        rate = map(int, i.split())\n        for count in range(input_num):\n            i = raw_input()\n            cards = i.split()\n            hand_rate = get_hand(cards, rate)\n            bp = sum_bps(cards, bps)\n            print hand_rate * bp\n        first_flag = True\n    except:\n        break"
  },
  {
    "language": "Python",
    "code": "from collections import Counter\ndef parse_card(card):\n  suit = card[-1]\n  num = card[:-1]\n  if num == \"A\":num = 1\n  elif num == \"K\":num = 13\n  elif num == \"Q\":num = 12\n  elif num == \"J\":num = 11\n  elif num == \"T\":num = 10\n  else:num = int(num)\n  return (num, suit)\n  \ndef parse_hand(hand):\n  return sorted((map(parse_card, hand)))\n\ndef judge(hand):\n  nums = [num for num, _ in hand]\n  flash_flag = len({suit for _, suit in hand}) == 1\n  head = nums[0]\n  straight_flag = [head, head + 1, head + 2, head + 3, head + 4] == nums or \\\n                  [1, 10, 11, 12, 13] == nums\n  dist = sorted(Counter(nums).values())\n  \n  if nums == [1, 10, 11, 12, 13] and flash_flag:return 9\n  if straight_flag and flash_flag:return 8\n  if dist == [1, 4]:return 7\n  if dist == [2, 3]:return 6\n  if flash_flag:return 5\n  if straight_flag:return 4\n  if dist == [1, 1, 3]:return 3\n  if dist == [1, 2, 2]:return 2\n  if dist == [1, 1, 1, 2]:return 1\n  else:return 0\n\ndef score(hand, dic, point):\n  ret = 0\n  for num, suit in hand:\n    ret += dic[suit][num - 1]\n  ret *= point[judge(hand)]\n  return ret\n\ndef main():\n  first_flag = True\n  while True:\n    try:\n      n = int(input())\n    except EOFError:\n      break\n    \n    if not first_flag:print()\n    else:first_flag = False\n    \n    dic = {}\n    dic[\"S\"] = list(map(int, input().split()))\n    dic[\"C\"] = list(map(int, input().split()))\n    dic[\"H\"] = list(map(int, input().split()))\n    dic[\"D\"] = list(map(int, input().split()))\n    point = [0] + list(map(int, input().split()))\n    for _ in range(n):\n      hand = parse_hand(input().split())\n      print(score(hand, dic, point))\n\nmain()\n"
  },
  {
    "language": "Python",
    "code": "ref = \"SCHD\"\nfirst = 0\nwhile 1:\n\ttry:\n\t\tn = input()\n\t\tif first: print\n\t\tfirst = 1\n\texcept:\n\t\tbreak\n\tP = [map(int,raw_input().split()) for i in range(4)]\n\tH = map(int,raw_input().split())\n\tfor _ in range(n):\n\t\thand = raw_input().replace(\"A\",\"1\").replace(\"T\",\"10\").replace(\"J\",\"11\").replace(\"Q\",\"12\").replace(\"K\",\"13\").split()\n\t\tnum  = [int(i[:-1]) for i in hand]\n\t\tsuit = [ref.index(i[-1]) for i in hand]\n\t\tans  = sum(P[suit[i]][num[i]-1] for i in range(5))\n\t\tif len(set(suit)) == 1:\n\t\t\tif sorted(num) == [1,10,11,12,13]:\n\t\t\t\tans *= H[8]\n\t\t\telif sorted([i - min(num) for i in num]) == [0,1,2,3,4]:\n\t\t\t\tans *= H[7]\n\t\t\telse:\n\t\t\t\tans *= H[4]\n\t\telif sorted([i - min(num) for i in num]) == [0,1,2,3,4]:\n\t\t\tans *= H[3]\n\t\telif max(num.count(i) for i in set(num)) == 4:\n\t\t\tans *= H[6]\n\t\telif max(num.count(i) for i in set(num)) == 3:\n\t\t\tif len(set(num)) == 2:\n\t\t\t\tans *= H[5]\n\t\t\telse:\n\t\t\t\tans *= H[2]\n\t\telif max(num.count(i) for i in set(num)) == 2:\n\t\t\tif len(set(num)) == 3:\n\t\t\t\tans *= H[1]\n\t\t\telse:\n\t\t\t\tans *= H[0]\n\t\telse:\n\t\t\tans = 0\n\t\tprint ans"
  },
  {
    "language": "Python",
    "code": "card_table = {'A': 0, '2': 1, '3': 2, '4': 3, '5': 4, '6': 5, '7': 6, '8': 7, '9': 8, 'T': 9, 'J': 10, 'Q': 11, 'K': 12}\nsuit_table = {'S': 0, 'C': 1, 'H': 2, 'D': 3}\n\n\ndef get_numlist(cards):\n    numlist = []\n    for card in cards:\n        numlist.append(card[0])\n    return numlist\n\n\ndef is_royal(cards):\n    numlist = get_numlist(cards)\n    if set(numlist) == set(['T', 'J', 'Q', 'K', 'A']):\n        return True\n    else:\n        return False\n\n\ndef is_fourcard(cards):\n    numlist = get_numlist(cards)\n    if numlist.count(numlist[0]) == 4 or numlist.count(numlist[1]) == 4:\n        return True\n    else:\n        return False\n\n\ndef is_fullhouse(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 2:\n        for num in numlist:\n            if numlist.count(num) == 3:\n                return True\n    return False\n\n\ndef is_flash(cards):\n    suitlist = []\n    for card in cards:\n        suitlist.append(card[1])\n    if len(set(suitlist)) == 1:\n        return True\n    else:\n        return False\n\n\ndef is_straight(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 5:\n        index_list = []\n        for num in numlist:\n            index_list.append(card_table[num])\n        index_list.sort()\n        if index_list == range(index_list[0], index_list[4]+1) or index_list == [0, 9, 10, 11, 12]:\n            return True\n    return False\n\n\ndef is_threecard(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 3:\n            return True\n    return False\n\n\ndef is_twopair(cards):\n    count = 0\n    numlist = get_numlist(cards)\n    for num in set(numlist):\n        if numlist.count(num) == 2:\n            count += 1\n        if count == 2:\n            return True\n    return False\n\n\ndef is_onepair(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 2:\n            return True\n    return False\n\n\ndef get_hand(cards, rate):\n    if is_flash(cards) and is_straight(cards):\n        if is_royal(cards):\n            return rate[8]\n        else:\n            return rate[7]\n    if is_fourcard(cards):\n        return rate[6]\n    if is_fullhouse(cards):\n        return rate[5]\n    if is_flash(cards):\n        return rate[4]\n    if is_straight(cards):\n        return rate[3]\n    if is_threecard(cards):\n        return rate[2]\n    if is_twopair(cards):\n        return rate[1]\n    if is_onepair(cards):\n        return rate[0]\n    return 0\n\n\ndef sum_bps(cards, bps):\n    bp = 0\n    for card in cards:\n        num = card_table[card[0]]\n        suit = suit_table[card[1]]\n        bp += bps[suit][num]\n    return bp\n\nwhile(1):\n    try:\n        input_num = int(raw_input())\n        bps = []\n        for count in range(4):\n            i = raw_input()\n            bps.append(map(int, i.split()))\n        i = raw_input()\n        rate = map(int, i.split())\n        for count in range(input_num):\n            i = raw_input()\n            cards = i.split()\n            hand_rate = get_hand(cards, rate)\n            bp = sum_bps(cards, bps)\n            print hand_rate * bp\n        print\n    except:\n        break"
  },
  {
    "language": "Python",
    "code": "card_table = {'A': 0, '2': 1, '3': 2, '4': 3, '5': 4, '6': 5, '7': 6, '8': 7, '9': 8, 'T': 9, 'J': 10, 'Q': 11, 'K': 12}\nsuit_table = {'S': 0, 'C': 1, 'H': 2, 'D': 3}\n\n\ndef get_numlist(cards):\n    numlist = []\n    for card in cards:\n        numlist.append(card[0])\n    return numlist\n\n\ndef is_royal(cards):\n    numlist = get_numlist(cards)\n    if set(numlist) == set(['T', 'J', 'Q', 'K', 'A']):\n        return True\n    else:\n        return False\n\n\ndef is_fourcard(cards):\n    numlist = get_numlist(cards)\n    if numlist.count(numlist[0]) == 4 or numlist.count(numlist[1]) == 4:\n        return True\n    else:\n        return False\n\n\ndef is_fullhouse(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 2:\n        for num in numlist:\n            if numlist.count(num) == 3:\n                return True\n    return False\n\n\ndef is_flash(cards):\n    suitlist = []\n    for card in cards:\n        suitlist.append(card[1])\n    if len(set(suitlist)) == 1:\n        return True\n    else:\n        return False\n\n\ndef is_straight(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 5:\n        index_list = []\n        for num in numlist:\n            index_list.append(card_table[num])\n        index_list.sort()\n        if index_list == range(index_list[0], index_list[4]+1) or index_list == [0, 9, 10, 11, 12]:\n            return True\n    return False\n\n\ndef is_threecard(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 3:\n            return True\n    return False\n\n\ndef is_twopair(cards):\n    count = 0\n    numlist = get_numlist(cards)\n    for num in set(numlist):\n        if numlist.count(num) == 2:\n            count += 1\n        if count == 2:\n            return True\n    return False\n\n\ndef is_onepair(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 2:\n            return True\n    return False\n\n\ndef get_hand(cards, rate):\n    if is_flash(cards) and is_straight(cards):\n        if is_royal(cards):\n            return rate[8]\n        else:\n            return rate[7]\n    if is_fourcard(cards):\n        return rate[6]\n    if is_fullhouse(cards):\n        return rate[5]\n    if is_flash(cards):\n        return rate[4]\n    if is_straight(cards):\n        return rate[3]\n    if is_threecard(cards):\n        return rate[2]\n    if is_twopair(cards):\n        return rate[1]\n    if is_onepair(cards):\n        return rate[0]\n    return 0\n\n\ndef sum_bps(cards, bps):\n    bp = 0\n    for card in cards:\n        num = card_table[card[0]]\n        suit = suit_table[card[1]]\n        bp += bps[suit][num]\n    return bp\n\nfirst_flag = False\nwhile(1):\n    try:\n        input_num = int(raw_input())\n        if not first_flag:\n            print\n        bps = []\n        for count in range(4):\n            i = raw_input()\n            bps.append(map(int, i.split()))\n        i = raw_input()\n        rate = map(int, i.split())\n        for count in range(input_num):\n            i = raw_input()\n            cards = i.split()\n            hand_rate = get_hand(cards, rate)\n            bp = sum_bps(cards, bps)\n            print hand_rate * bp\n        first_flag = True\n    except:\n        break"
  },
  {
    "language": "Python",
    "code": "ref = \"SCHD\"\nfirst = 0\nwhile 1:\n\ttry:\n\t\tn = input()\n\t\tif first: print\n\t\tfirst = 1\n\texcept:\n\t\tbreak\n\tP = [map(int,raw_input().split()) for i in range(4)]\n\tH = map(int,raw_input().split())\n\tfor _ in range(n):\n\t\thand = raw_input().replace(\"A\",\"1\").replace(\"T\",\"10\").replace(\"J\",\"11\").replace(\"Q\",\"12\").replace(\"K\",\"13\").split()\n\t\tnum  = [int(i[:-1]) for i in hand]\n\t\tsuit = [ref.index(i[-1]) for i in hand]\n\t\tans  = sum(P[suit[i]][num[i]-1] for i in range(5))\n\t\tif len(set(suit)) == 1:\n\t\t\tif sorted(num) == [1,10,11,12,13]:\n\t\t\t\tans *= H[8]\n\t\t\telif sorted([i - min(num) for i in num]) == [0,1,2,3,4]:\n\t\t\t\tans *= H[7]\n\t\t\telse:\n\t\t\t\tans *= H[4]\n\t\telif sorted([i - min(num) for i in num]) == [0,1,2,3,4] or sorted(num) == [1,10,11,12,13]:\n\t\t\tans *= H[3]\n\t\telif max(num.count(i) for i in set(num)) == 4:\n\t\t\tans *= H[6]\n\t\telif max(num.count(i) for i in set(num)) == 3:\n\t\t\tif len(set(num)) == 2:\n\t\t\t\tans *= H[5]\n\t\t\telse:\n\t\t\t\tans *= H[2]\n\t\telif max(num.count(i) for i in set(num)) == 2:\n\t\t\tif len(set(num)) == 3:\n\t\t\t\tans *= H[1]\n\t\t\telse:\n\t\t\t\tans *= H[0]\n\t\telse:\n\t\t\tans = 0\n\t\tprint ans"
  },
  {
    "language": "Python",
    "code": "ref = \"SCHD\"\nfirst = 0\nwhile 1:\n\ttry:\n\t\tn = input()\n\t\tif first: print\n\t\tfirst = 1\n\texcept:\n\t\tbreak\n\tP = [map(int,raw_input().split()) for i in range(4)]\n\tH = map(int,raw_input().split())\n\tfor _ in range(n):\n\t\thand = raw_input().replace(\"A\",\"1\").replace(\"T\",\"10\").replace(\"J\",\"11\").replace(\"Q\",\"12\").replace(\"K\",\"13\").split()\n\t\tnum  = [int(i[:-1]) for i in hand]\n\t\tsuit = [ref.index(i[-1]) for i in hand]\n\t\tans  = sum(P[suit[i]][num[i]-1] for i in range(5))\n\t\tsnum = sorted([i - min(num) for i in num])\n\t\tsame = max(num.count(i) for i in set(num))\n\t\tif len(set(suit)) == 1:\n\t\t\tif snum == [0,9,10,11,12]:\n\t\t\t\tans *= H[8]\n\t\t\telif snum == [0,1,2,3,4]:\n\t\t\t\tans *= H[7]\n\t\t\telse:\n\t\t\t\tans *= H[4]\n\t\telif snum == [0,1,2,3,4] or snum == [0,9,10,11,12]:\n\t\t\tans *= H[3]\n\t\telif same == 4:\n\t\t\tans *= H[6]\n\t\telif same == 3:\n\t\t\tif len(set(num)) == 2:\n\t\t\t\tans *= H[5]\n\t\t\telse:\n\t\t\t\tans *= H[2]\n\t\telif same == 2:\n\t\t\tif len(set(num)) == 3:\n\t\t\t\tans *= H[1]\n\t\t\telse:\n\t\t\t\tans *= H[0]\n\t\telse:\n\t\t\tans = 0\n\t\tprint ans"
  },
  {
    "language": "Python",
    "code": "card_table = {'A': 0, '2': 1, '3': 2, '4': 3, '5': 4, '6': 5, '7': 6, '8': 7, '9': 8, 'T': 9, 'J': 10, 'Q': 11, 'K': 12}\nsuit_table = {'S': 0, 'C': 1, 'H': 2, 'D': 3}\n\n\ndef get_numlist(cards):\n    numlist = []\n    for card in cards:\n        numlist.append(card[0])\n    return numlist\n\n\ndef is_royal(cards):\n    numlist = get_numlist(cards)\n    if set(numlist) == set(['T', 'J', 'Q', 'K', 'A']):\n        return True\n    else:\n        return False\n\n\ndef is_fourcard(cards):\n    numlist = get_numlist(cards)\n    if numlist.count(numlist[0]) == 4 or numlist.count(numlist[1]) == 4:\n        return True\n    else:\n        return False\n\n\ndef is_fullhouse(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 2:\n        for num in numlist:\n            if numlist.count(num) == 3:\n                return True\n    return False\n\n\ndef is_flash(cards):\n    suitlist = []\n    for card in cards:\n        suitlist.append(card[1])\n    if len(set(suitlist)) == 1:\n        return True\n    else:\n        return False\n\n\ndef is_straight(cards):\n    numlist = get_numlist(cards)\n    if len(set(numlist)) == 5:\n        index_list = []\n        for num in numlist:\n            index_list.append(card_table[num])\n        index_list.sort()\n        if index_list == range(index_list[0], index_list[4]+1) or index_list == [0, 9, 10, 11, 12]:\n            return True\n    return False\n\n\ndef is_threecard(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 3:\n            return True\n    return False\n\n\ndef is_twopair(cards):\n    count = 0\n    numlist = get_numlist(cards)\n    for num in set(numlist):\n        if numlist.count(num) == 2:\n            count += 1\n        if count == 2:\n            return True\n    return False\n\n\ndef is_onepair(cards):\n    numlist = get_numlist(cards)\n    for num in numlist:\n        if numlist.count(num) == 2:\n            return True\n    return False\n\n\ndef get_hand(cards, rate):\n    if is_flash(cards) and is_straight(cards):\n        if is_royal(cards):\n            return rate[8]\n        else:\n            return rate[7]\n    if is_fourcard(cards):\n        return rate[6]\n    if is_fullhouse(cards):\n        return rate[5]\n    if is_flash(cards):\n        return rate[4]\n    if is_straight(cards):\n        return rate[3]\n    if is_threecard(cards):\n        return rate[2]\n    if is_twopair(cards):\n        return rate[1]\n    if is_onepair(cards):\n        return rate[0]\n    return 0\n\n\ndef sum_bps(cards, bps):\n    bp = 0\n    for card in cards:\n        num = card_table[card[0]]\n        suit = suit_table[card[1]]\n        bp += bps[suit][num]\n    return bp\n\nfirst_flag = False\nwhile(1):\n    try:\n        input_num = int(raw_input())\n        if first_flag:\n            print\n        bps = []\n        for count in range(4):\n            i = raw_input()\n            bps.append(map(int, i.split()))\n        i = raw_input()\n        rate = map(int, i.split())\n        for count in range(input_num):\n            i = raw_input()\n            cards = i.split()\n            hand_rate = get_hand(cards, rate)\n            bp = sum_bps(cards, bps)\n            print hand_rate * bp\n        first_flag = True\n    except:\n        break"
  }
]