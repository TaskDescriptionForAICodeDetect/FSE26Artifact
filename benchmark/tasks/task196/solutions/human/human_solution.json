[
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <memory.h>\n#include <queue>\n#include <cstdio>\n#include <cstdlib>\n#include <map>\n#include <cmath>\nusing namespace std;\n\n#define rep(i, n) for(int i = 0; i< n; i++)\n#define rep2(i, m, n) for(int i = m; i < n; i++)\ntypedef long long ll;\ntypedef pair<int, int> P;\nconst int INF = 1 << 29;\nconst double EPS = 1e-10;\n\nconst ll mod = 100000007;\n\nll dp1[100010];\nll dp0[100010];\nll sum0[100010];\nll sum1[100010];\n\nvoid maketable(ll *dp, ll *sum, int w){\n\n  memset(dp, 0, sizeof(dp));\n  memset(sum, 0, sizeof(sum));\n  dp[0] = 1;\n  for(int i = 1; i < 100010; i++){\n    for(int j = 1; j <= w; j++){\n      if(i - j >= 0) dp[i] = (dp[i] + dp[i-j]) % mod;\n    }\n  }\n  rep(i, 100010){\n    sum[i] = dp[i];\n    if(i > w) sum[i] = (sum[i] + sum[i-w]) % mod;\n  }\n}\n\nint main(){\n  string str;\n  maketable(dp0,sum0,3);\n  maketable(dp1,sum1,5);\n  while(cin >> str && str != \"#\"){\n    int pos = 0;\n    ll res = 1;\n    while(pos < (int)str.size()){\n      char ch = str[pos];\n      int len = 0;\n      while(pos < (int)str.size() && str[pos] == ch){\n\tpos++;\n\tlen++;\n      }\n      if(ch == '8' || ch == '0'){\n\tres = (res * sum0[len]) % mod;\n      }else{\n\tres = (res * sum1[len]) % mod;\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nconst int mod = 100000007;\nconst int N = 200000;\n\nll dp[N] = {1, 1}, dp1[N] = {1, 1};\n\nvoid gen()\n{\n    repi(i,2,N) {\n        dp[i] = dp[i - 1] * 2;\n        if (i > 5)\n            dp[i] -= dp[i - 6];\n        dp[i] = (dp[i] % mod + mod) % mod;\n\n        dp1[i] = dp1[i - 1] * 2;\n        if (i > 3)\n            dp1[i] -= dp1[i - 4];\n        dp1[i] = (dp1[i] % mod + mod) % mod;\n    }\n\n    repi(i,6,N)\n        dp[i] = (dp[i] + dp[i - 5]) % mod;\n    repi(i,4,N)\n        dp1[i] = (dp1[i] + dp1[i - 3]) % mod;\n}\n\nchar line[N];\n\n#define dump(x) cerr<<#x<<\" = \"<<(x)<<endl;\n\nint solve()\n{\n    int len = strlen(line);\n    line[--len] = '\\0';\n\n    ll ans = 1;\n    for (int i = 0; i < len; ) {\n        int next_i = i;\n        while (next_i < len && line[next_i] == line[i])\n            ++next_i;\n\n        if (line[i] == '8' || line[i] == '0')\n            ans = ans * dp1[next_i - i] % mod;\n        else\n            ans = ans * dp[next_i - i] % mod;\n        i = next_i;\n    }\n    return (int) ans;\n}\n\nint main()\n{\n    gen();\n\n    while (fgets(line, N, stdin), line[0] != '#')\n        printf(\"%d\\n\", solve());\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> P;\n\n#define fi first\n#define se second\n#define repl(i,a,b) for(ll i=(ll)(a);i<(ll)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define all(x) (x).begin(),(x).end()\n#define dbg(x) cout<<#x\"=\"<<x<<endl\n#define mmax(x,y) (x>y?x:y)\n#define mmin(x,y) (x<y?x:y)\n#define maxch(x,y) x=mmax(x,y)\n#define minch(x,y) x=mmin(x,y)\n#define uni(x) x.erase(unique(all(x)),x.end())\n#define exist(x,y) (find(all(x),y)!=x.end())\n#define bcnt __builtin_popcountll\n\n#define INF 1e16\n#define mod 100000007\n\nconst ll M=100000;\nll dp5[100001],dp3[100001];\n\nll calc(bool is5, ll len){\n  ll res=0;\n  if(is5){\n    repl(l,1,len+1){\n      if((len-l)%5==0){\n        (res+=dp5[l])%=mod;\n      }\n    }\n  }else{\n    repl(l,1,len+1){\n      if((len-l)%3==0){\n        (res+=dp3[l])%=mod;\n      }\n    }\n  }\n  return res;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  dp5[0]=1;\n  repl(i,1,M+1){\n    repl(j,1,5+1){\n      if(i-j>=0)(dp5[i]+=dp5[i-j])%=mod;\n    }\n  }\n  dp3[0]=1;\n  repl(i,1,M+1){\n    repl(j,1,3+1){\n      if(i-j>=0)(dp3[i]+=dp3[i-j])%=mod;\n    }\n  }\n\n  while(1){\n    string S;\n    cin>>S;\n    if(S==\"#\")break;\n    ll N=S.size();\n    ll res=1;\n    ll i=0;\n    while(i<N){\n      ll j=i;\n      while(j<N&&S[i]==S[j]){\n        j++;\n      }\n      if(S[i]=='8'||S[i]=='0') (res*=calc(false,j-i))%=mod;\n      else (res*=calc(true,j-i))%=mod;\n      i=j;\n    }\n    cout<<res<<endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\n#define N 100000\n#define M 100000007\n\nint dp[N+2][2]={0};\n\nvoid init(){\n  int loop[2]={5,3};\n  for(int t=0;t<2;t++){\n    dp[0][t]=1;\n    dp[1][t]=1;\n    for(int i=2;i<=loop[t];i++)dp[i][t]=dp[i-1][t]*2;\n    for(int i=loop[t]+1;i<N+2;i++){\n      dp[i][t]=1;\n      for(int j=1;j<=loop[t];j++){\n\tdp[i][t]+=dp[i-j][t];\n      }\n    }\n  }\n  return;\n}\n\nint main()\n{\n  string s;\n  long long int ans;\n  int i,cnt;\n  init();\n  while(cin>>s,s!=\"#\"){\n    ans=1;\n    cnt=1;\n    for(i=1;i<s.size();i++){\n      if(s[i-1]==s[i]){\n\tcnt++;\n      }else{\n\tint t;\n\tif(s[i-1]=='8'||s[i-1]=='0')t=1;\n\telse t=0;\n\tans*=dp[cnt][t];\n\tcnt=1;\n      }\n    }\n    i=s.size()-1;\n    if(s[i-1]==s[i]){\n      int t;\n      if(s[i-1]=='8'||s[i-1]=='0')t=1;\n      else t=0;\n      ans*=dp[cnt][t];\n    }\n    cout<<ans%M<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nint main(){\n\tconst int MOD = 100000007;\n\tint dpA[100001], dpB[100001];\n\tmemset(dpA, 0, sizeof(dpA));\n\tmemset(dpB, 0, sizeof(dpB));\n\tdpA[0] = 1, dpB[0] = 1;\n\tfor(int i=0;i<=100000;i++){\n\t\tfor(int j=1;j<=5;j++)\n\t\t\tif(i+j<=100000)\n\t\t\t\tdpA[i+j] = (dpA[i+j]+dpA[i])%MOD;\n\t}\n\tfor(int i=0;i<=100000;i++){\n\t\tfor(int j=1;j<=3;j++)\n\t\t\tif(i+j<=100000)\n\t\t\t\tdpB[i+j] = (dpB[i+j]+dpB[i])%MOD;\n\t}\n\tint sumA[100001], sumB[100001];\n\tmemset(sumA, 0, sizeof(sumA));\n\tmemset(sumB, 0, sizeof(sumB));\n\tfor(int i=0;i<=100000;i++){\n\t\tsumA[i] = dpA[i];\n\t\tif(i-5>0) sumA[i] = (sumA[i]+sumA[i-5])%MOD;\n\t}\n\tfor(int i=0;i<=100000;i++){\n\t\tsumB[i] = dpB[i];\n\t\tif(i-3>0) sumB[i] = (sumB[i]+sumB[i-3])%MOD;\n\t}\n\tstring str;\n\twhile(cin >> str){\n\t\tif(str==\"#\") break;\n\t\tint idx = 0;\n\t\tlong long res = 1;\n\t\twhile(idx < str.size()){\n\t\t\tint cur = str[idx]-'0';\n\t\t\tint cnt = 0;\n\t\t\twhile(idx < str.size() && str[idx]-'0' == cur) cnt++, idx++;\n\t\t\tif(cur == 0 || cur == 8)\n\t\t\t\tres = (res*sumB[cnt])%MOD;\n\t\t\telse\n\t\t\t\tres = (res*sumA[cnt])%MOD;\n\t\t}\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n\nconst int mod = 100000007;\nstruct Mod {\npublic:\n\tint num;\n\tMod() : Mod(0) { ; }\n\tMod(long long int n) : num((n % mod + mod) % mod) {\n\t\tstatic_assert(mod<INT_MAX / 2, \"mod is too big, please make num 'long long int' from 'int'\");\n\t}\n\tMod(int n) : Mod(static_cast<long long int>(n)) { ; }\n\toperator int() { return num; }\n};\n\nMod operator+(const Mod a, const Mod b) { return Mod((a.num + b.num) % mod); }\nMod operator+(const long long int a, const Mod b) { return Mod(a) + b; }\nMod operator+(const Mod a, const long long int  b) { return b + a; }\nMod operator++(Mod &a) { return a + Mod(1); }\nMod operator-(const Mod a, const Mod b) { return Mod((mod + a.num - b.num) % mod); }\nMod operator-(const long long int a, const Mod b) { return Mod(a) - b; }\nMod operator--(Mod &a) { return a - Mod(1); }\nMod operator*(const Mod a, const Mod b) { return Mod(((long long)a.num * b.num) % mod); }\nMod operator*(const long long int a, const Mod b) { return Mod(a)*b; }\nMod operator*(const Mod a, const long long int b) { return Mod(b)*a; }\nMod operator*(const Mod a, const int b) { return Mod(b)*a; }\nMod operator+=(Mod &a, const Mod b) { return a = a + b; }\nMod operator+=(long long int &a, const Mod b) { return a = a + b; }\nMod operator-=(Mod &a, const Mod b) { return a = a - b; }\nMod operator-=(long long int &a, const Mod b) { return a = a - b; }\nMod operator*=(Mod &a, const Mod b) { return a = a * b; }\nMod operator*=(long long int &a, const Mod b) { return a = a * b; }\nMod operator*=(Mod& a, const long long int &b) { return a = a * b; }\nMod operator^(const Mod a, const int n) {\n\tif (n == 0) return Mod(1);\n\tMod res = (a * a) ^ (n / 2);\n\tif (n % 2) res = res * a;\n\treturn res;\n}\nMod mod_pow(const Mod a, const long long  int n) {\n\tif (n == 0) return Mod(1);\n\tMod res = mod_pow((a * a), (n / 2));\n\tif (n % 2) res = res * a;\n\treturn res;\n}\nMod inv(const Mod a) { return a ^ (mod - 2); }\nMod operator/(const Mod a, const Mod b) {\n\tassert(b.num != 0);\n\treturn a * inv(b);\n}\nMod operator/(const long long int a, const Mod b) {\n\treturn Mod(a) / b;\n}\nMod operator/=(Mod &a, const Mod b) {\n\treturn a = a / b;\n}\n\n#define MAX_MOD_N 1024000\n\nMod fact[MAX_MOD_N], factinv[MAX_MOD_N];\nvoid init(const int amax = MAX_MOD_N) {\n\tfact[0] = Mod(1); factinv[0] = 1;\n\tfor (int i = 0; i < amax - 1; ++i) {\n\t\tfact[i + 1] = fact[i] * Mod(i + 1);\n\t\tfactinv[i + 1] = factinv[i] / Mod(i + 1);\n\t}\n}\nMod comb(const int a, const int b) {\n\treturn fact[a] * factinv[b] * factinv[a - b];\n}\n\nint main() {\n\tvector<vector<Mod>>dp5(2e5, vector<Mod>(5));\n\tdp5[1][0] = 1;\n\tfor (int i = 1; i < 1e5 + 3; ++i) {\n\t\tfor (int j = 0; j < 5; ++j) {\n\t\t\tdp5[i + 1][0] += dp5[i][j];\n\t\t\tif (j != 4) {\n\t\t\t\tdp5[i + 1][j + 1] += dp5[i][j];\n\t\t\t}\n\t\t}\n\t}\n\tvector<vector<Mod>>dp3(2e5, vector<Mod>(3));\n\tdp3[1][0] = 1;\n\tfor (int i = 1; i < 1e5 + 3; ++i) {\n\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\tdp3[i + 1][0] += dp3[i][j];\n\t\t\tif (j != 2) {\n\t\t\t\tdp3[i + 1][j + 1] += dp3[i][j];\n\t\t\t}\n\t\t}\n\t}\n\tvector<Mod>sums3(2e5), sums5(2e5);\n\tsums3[0] = 0;\n\tsums5[0] = 0;\n\tfor (int i = 0; i < 1e5 + 3; ++i) {\n\t\tfor (int j = 0; j < 3; ++j) {\n\t\t\tsums3[i] += dp3[i][j];\n\t\t}\n\t\tfor (int j = 0; j < 5; ++j) {\n\t\t\tsums5[i] += dp5[i][j];\n\t\t}\n\t\tif (i >= 3)sums3[i + 1] += sums3[i - 2];\n\t\tif (i >= 5)sums5[i + 1] += sums5[i - 4];\n\t}\n\twhile (1) {\n\t\tstring st; cin >> st;\n\t\tif (st == \"#\")break;\n\t\telse {\n\t\t\tvector<pair<int,int>>nums;\n\t\t\tchar pre = ' ';\n\t\t\tint num = 0;\n\t\t\tfor (int i = 0; i < st.size(); ++i) {\n\t\t\t\tchar c(st[i]);\n\t\t\t\tif (!num || (pre == c)) {\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\tnums.emplace_back(pre,num);\n\t\t\t\t\tnum = 1;\n\t\t\t\t}\n\t\t\t\tpre = c;\n\t\t\t}\n\t\t\tnums.emplace_back(pre,num);\n\t\t\tMod ans = 1;\n\t\t\tfor (auto n : nums) {\n\t\t\t\tif (n.first == '0' || n.first == '8') {\n\t\t\t\t\tans *= sums3[n.second];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tans *= sums5[n.second];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << ans << endl;\n\t\t\t\n\t\t}\n\t}\n\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <iterator>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n\nusing namespace std;\n\n#define dump(n) cerr<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();++i)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nconst int MOD=100000007;\n\nint main()\n{\n\tvi dp3(100001),dp5(100001);\n\trepi(i,1,dp3.size()){\n\t\trep(j,3) if(i-1-j>=0) dp3[i]+=dp3[i-1-j];\n\t\trep(j,5) if(i-1-j>=0) dp5[i]+=dp5[i-1-j];\n\t\tdp3[i]=(dp3[i]+1)%MOD;\n\t\tdp5[i]=(dp5[i]+1)%MOD;\n\t}\n\tfor(string s;cin>>s,s!=\"#\";){\n\t\tll res=1;\n\t\tfor(int i=0,j;i<s.size();i=j){\n\t\t\tfor(j=i;j<s.size() && s[j]==s[i];j++)\n\t\t\t\t;\n\t\t\tif(s[i]=='0' || s[i]=='8')\n\t\t\t\tres=(res*dp3[j-i])%MOD;\n\t\t\telse\n\t\t\t\tres=(res*dp5[j-i])%MOD;\n\t\t}\n\t\tcout<<res<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n#define rep(i,b) for(int i=0; i<b; i++)\ntypedef unsigned long long ull;\n\null const mod = 100000007;\null dp[1000000][6] = {};\n\null divn(int n, int div){\n    ull& res = dp[n][div];\n    if (res) return res;\n\n    res = 1;\n    if (n == 1) return res;\n    \n    rep(i, min(div, n - 1)){\n        res = res + divn(n - (i+1), div) % mod;\n    }\n    return res;\n}\n\nint main(){\n    int a[10];\n    rep(i, 10) a[i] = 5;\n    a[8] = a[0] = 3;\n\n    int prod = 1, len = 0;\n    char cur = -1, prev = -1;\n    while (1){\n        prev = cur;\n        cur = getchar();\n        if (cur == '#') break;\n        else if (cur != prev){\n            if (prev != -1) prod = prod*divn(len, a[prev - '0']) % mod;\n            if (cur == '\\n'){\n                len = 0;\n                printf(\"%d\\n\", prod);\n                cur = -1;\n                prod = 1;\n            }\n            else {\n                len = 1;\n            }\n        }\n        else if (prev == -1 || cur == prev){\n            len++;\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <iterator>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n\nusing namespace std;\n\n#define dump(n) cerr<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();++i)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nconst int MOD=100000007;\n\nint main()\n{\n\tvi dp3(100001),dp5(100001);\n\trepi(i,1,dp3.size()){\n\t\tdp3[i]++; dp5[i]++;\n\t\trep(j,3) if(i-1-j>=0) dp3[i]+=dp3[i-1-j];\n\t\trep(j,5) if(i-1-j>=0) dp5[i]+=dp5[i-1-j];\n\t}\n\tfor(string s;cin>>s,s!=\"#\";){\n\t\tll res=1;\n\t\tfor(int i=0,j;i<s.size();i=j){\n\t\t\tfor(j=i;j<s.size() && s[j]==s[i];j++)\n\t\t\t\t;\n\t\t\tif(s[i]=='0' || s[i]=='8')\n\t\t\t\tres=(res*dp3[j-i])%MOD;\n\t\t\telse\n\t\t\t\tres=(res*dp5[j-i])%MOD;\n\t\t}\n\t\tcout<<res<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\nstatic const double EPS = 1e-8;\ntypedef long long ll;\n\n\nconst int MAX = 100000;\nconst int mod = 100000007;\n\nint dp5[MAX + 5], dp3[MAX + 3];\nint dpp5[MAX + 6], dpp3[MAX + 4];\n\nchar buf[MAX + 1];\n\nint main()\n{\n\tdp5[0] = dp3[0] = 1;\n\tfor (int i = 0; i < MAX; ++i)\n\t{\n\t\tfor (int j = 1; j <= 5; ++j)\n\t\t\t(dp5[i + j] += dp5[i]) %= mod;\n\t\tfor (int j = 1; j <= 3; ++j)\n\t\t\t(dp3[i + j] += dp3[i]) %= mod;\n\t}\n\tfor (int i = 1; i <= MAX; ++i)\n\t{\n\t\tdpp5[i + 5] = ((dpp5[i] += dp5[i]) %= mod);\n\t\tdpp3[i + 3] = ((dpp3[i] += dp3[i]) %= mod);\n\t}\n\n\twhile (fgets(buf, sizeof(buf), stdin), *buf != '#')\n\t{\n\t\tchar* p = buf;\n\t\tll res = 1;\n\n\t\tchar c = '@';\n\t\tint count = 1;\n\t\tdo\n\t\t{\n\t\t\tif (*p == c)\n\t\t\t\t++count;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (c != '8' && c != '0')\n\t\t\t\t\tres *= dpp5[count];\n\t\t\t\telse\n\t\t\t\t\tres *= dpp3[count];\n\n\t\t\t\tres %= mod;\n\t\t\t\tc = *p;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t} while (*p++ != '\\0');\n\n\t\tprintf(\"%d\\n\", res);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\nstatic const double EPS = 1e-8;\ntypedef long long ll;\n\n\nconst int MAX = 100000;\nconst int mod = 100000007;\n\nint dp5[MAX + 5], dp3[MAX + 3];\nint dpp5[MAX + 6], dpp3[MAX + 4];\n\nchar buf[MAX + 1];\n\nint main()\n{\n\tdp5[0] = dp3[0] = 1;\n\tfor (int i = 0; i < MAX; ++i)\n\t{\n\t\tfor (int j = 1; j <= 5; ++j)\n\t\t\t(dp5[i + j] += dp5[i]) %= mod;\n\t\tfor (int j = 1; j <= 3; ++j)\n\t\t\t(dp3[i + j] += dp3[i]) %= mod;\n\t}\n\tfor (int i = 1; i <= MAX; ++i)\n\t{\n\t\tdpp5[i + 5] = ((dpp5[i] += dp5[i]) %= mod);\n\t\tdpp3[i + 3] = ((dpp3[i] += dp3[i]) %= mod);\n\t}\n\n\twhile (cin.getline(buf, sizeof(buf)), *buf != '#')\n\t{\n\t\tchar* p = buf;\n\t\tll res = 1;\n\n\t\tchar c = '@';\n\t\tint count = 1;\n\t\tdo\n\t\t{\n\t\t\tif (*p == c)\n\t\t\t\t++count;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (c != '8' && c != '0')\n\t\t\t\t\tres *= dpp5[count];\n\t\t\t\telse\n\t\t\t\t\tres *= dpp3[count];\n\n\t\t\t\tres %= mod;\n\t\t\t\tc = *p;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t} while (*p++ != '\\0');\n\n\t\tprintf(\"%d\\n\", res);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nint memo[2][6][100010][5];\nconst ll MOD = 100000007;\nchar str[100010];\n\nll calc(int ok, int upper, int rest, int cont) {\n  if (memo[ok][upper][rest][cont]) { return memo[ok][upper][rest][cont]; }\n  if (rest == 0) { return 1; }\n  ll ret = 0;\n  if (ok && rest >= upper + 1) {\n    assert(cont == 0);\n    ret = (ret + calc(ok, upper, rest - upper, cont)) % MOD;\n  }\n  ret = (ret + calc(0, upper, rest - 1, 0)) % MOD;\n  if (rest >= 2 && cont <= upper - 2) {\n    ret = (ret + calc(0, upper, rest - 1, cont + 1)) % MOD;\n  }\n  return memo[ok][upper][rest][cont] = ret;\n}\n\nint main() {\n  MEMSET(memo, 0);\n  FOREQ(i, 1, 100000) {\n    calc(1, 5, i, 0);\n    calc(1, 3, i, 0);\n  }\n  memo[1][5][0][0] = 1;\n  memo[1][3][0][0] = 1;\n  while (scanf(\"%s\", str), str[0] != '#') {\n    int len = strlen(str);\n    str[len++] = '$';\n    int cnt = 0;\n    int prev = -1;\n    ll ans = 1;\n    REP(i, len) {\n      if (prev != str[i]) {\n        //cout << cnt << \" \" << memo[1][cnt][0] << endl;\n        int upper = 5;\n        if (prev == '8' || prev == '0') { upper = 3; }\n        ans = (ans * (ll)memo[1][upper][cnt][0]) % MOD;\n        cnt = 0;\n      }\n      prev = str[i];\n      cnt++;\n    }\n    printf(\"%lld\\n\", ans);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cmath>\n#include<map>\n#include<set>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<deque>\nusing namespace std;\n\nint main() {\n\n    long cases_five [100001];\n    cases_five [0] = 1;\n    cases_five [1] = 1;\n    cases_five [2] = 2;\n    cases_five [3] = 4;\n    cases_five [4] = 8;\n    cases_five [5] = 16;\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] = (cases_five[i-5] + cases_five[i-4] + cases_five[i-3] + cases_five[i-2] + cases_five[i-1]) % 100000007;\n    }\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] += cases_five[i-5];\n    }\n\n    long cases_three [100001];\n    cases_three [0] = 1;\n    cases_three [1] = 1;\n    cases_three [2] = 2;\n    cases_three [3] = 4;\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] = (cases_three[i-3] + cases_three[i-2] + cases_three[i-1]) % 100000007;\n    }\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] += cases_three[i-3];\n    }\n\n    string str;\n    while( getline(cin, str)) {\n        if (str == \"#\") break;\n\n        istringstream is(str);\n        int len = 1;\n        long ans = 1;\n        char ch, pch;\n        is >> pch;\n        while(is >> ch) {\n            if (ch == pch) {\n                len += 1;\n            }\n            else {\n                if (pch == '8' || pch == '0') {\n                    ans = (ans * cases_three[len]) % 100000007;\n                } else {\n                    ans = (ans * cases_five[len]) % 100000007;\n                }\n                len = 1;\n                pch = ch;\n            }\n        }\n        if (ch == '8' || ch == '0') {\n            ans = (ans * cases_three[len]) % 100000007;\n        } else {\n            ans = (ans * cases_five[len]) % 100000007;\n        }\n\n        cout << ans << endl;\n        \n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-13;\nconst double PI  = acos(-1.0);\n\nint dp[100010][10][6];\nconst int M=100000007;\n\nint main(){\n\tstring s;\n\twhile(cin>>s,s!=\"#\"){\n\t\tmemset(dp,0,sizeof(dp));\n\t\tREP(i,s.size()){\n\t\t\tint n=s[i]-'0';\n\t\t\tif(i==0){\n\t\t\t\tdp[i+1][n][1]=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tFOR(k,1,6){\n\t\t\t\tdp[i+1][n][k]=dp[i][n][k==1?5:k-1];\n\t\t\t}\n\t\t\tREP(j,10){\n\t\t\t\tFOR(m,1,6){\n\t\t\t\t\tdp[i+1][n][1]+=dp[i][j][m];\n\t\t\t\t\tdp[i+1][n][1]%=M;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tll ans=0;\n\t\tREP(i,10){\n\t\t\tFOR(j,1,6){\n\t\t\t\tans+=dp[s.size()][i][j];\n\t\t\t\tans%=M;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100000,M=100000007};int d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <sstream>\n#include <cassert>\n#include <list>\n#include <ctime>\n#include <numeric>\nusing namespace std;\nstatic const double EPS = 1e-6;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> PI;\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define mp(a,b) make_pair(a,b)\n#define pb(a) push_back(a)\n#define SZ(a) (int(a.size()))\n#define F first\n#define S second\nconst double pi=acos(-1);\nint dx[]={0,1,0,-1,1,1,-1,-1},dy[]={1,0,-1,0,1,-1,1,-1};\n\nll MOD=100000007;\n\nll dp1[100001][5];\nll dps1[100001];\nll dp2[100001][3];\nll dps2[100001];\n\nmain(){\n  string in;\n\n  dp1[1][0]=1;\n  dp2[1][0]=1;\n  for(int i=2;i<=100000;++i){\n    rep(j,5)\n      dp1[i][0]+=dp1[i-1][j];\n\n    rep(j,3)dp2[i][0]+=dp2[i-1][j];\n    \n    for(int j=1;j<5;++j){\n      if(i-j>=0)dp1[i][j]+=dp1[i-j][0];\n    }\n\n    for(int j=1;j<3;++j){\n      if(i-j>=0)dp2[i][j]+=dp2[i-j][0];\n    }\n    rep(j,5)dp1[i][j]%=MOD;\n    rep(j,3)dp2[i][j]%=MOD;\n  }\n\n\n\n  rep(k,100001){\n    int sum=0;    \n    rep(i,5){\n      //cout<<dp1[k][i]<<' ';\n      sum+=dp1[k][i];\n    }\n    if(k>=5)sum+=dps1[k-5];\n    //cout<<sum<<endl;\n    dps1[k]=sum%MOD;\n\n    sum=0;\n    rep(i,3)sum+=dp2[k][i];\n    if(k>=3)sum+=dps2[k-3];\n    dps2[k]=sum%MOD;\n  }\n  \n  while(cin>>in,in!=\"#\"){\n    int idx=0;\n    ll ans=1;\n    while(idx<SZ(in)){\n      int num=0;\n      while(idx+num<SZ(in) && in[idx]==in[idx+num])++num;\n      if(in[idx]!='8' && in[idx]!='0')ans=(ans*dps1[num])%MOD;\n      else ans=(ans*dps2[num])%MOD;\n      idx+=num;\n    }\n    cout<<ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<map>\n#include<queue>\n#include<cassert>\n#include<cmath>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define fr(i,c) for(__typeof (c.begin()) i=c.begin(); i!=c.end(); i++)\n#define all(c) (c).begin(), (c).end()\n#define mp make_pair\n#define pb push_back\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\ntypedef long long ll;\n\nconst int mod=100000007;\nint dp[100001][6],dp2[100001][4];\nint sum[100001],sum2[100001];\nstring in;\n\nint main(){\n  dp[0][0]=dp2[0][0]=1;\n  \n  rep(i,100000)rep(j,6){\n    if(j<5)(dp[i+1][j+1]+=dp[i][j])%=mod;\n    (dp[i+1][1]+=dp[i][j])%=mod;\n  }\n  rep(i,100000)rep(j,4){\n    if(j<3)(dp2[i+1][j+1]+=dp2[i][j])%=mod;\n    (dp2[i+1][1]+=dp2[i][j])%=mod;\n  }\n  rep(i,100001){\n    rep(j,6)(sum[i]+=dp[i][j])%=mod;\n    rep(j,4)(sum2[i]+=dp2[i][j])%=mod;\n  }\n  rep(i,100001){\n    if(i>5)(sum[i]+=sum[i-6])%=mod;\n    if(i>3)(sum2[i]+=sum2[i-4])%=mod;\n  }\n  \n  while(getline(cin,in),in!=\"#\"){\n    int cnt=0;\n    vi v,type;\n    rep(i,in.size()){\n      if(i&&in[i]!=in[i-1]){\n        v.pb(cnt); cnt=1;\n        type.pb(in[i-1]=='0'||in[i-1]=='8');\n      }\n      else cnt++;\n    }\n    type.pb(in[in.size()-1]=='0'||in[in.size()-1]=='8');\n    v.pb(cnt);\n\n    ll ans=1;\n    rep(i,v.size()){\n        if(!type[i])(ans*=sum[v[i]-1])%=mod;\n        else (ans*=sum2[v[i]-1])%=mod;\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cmath>\n#include<map>\n#include<set>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<deque>\nusing namespace std;\n\nint main() {\n\n    long cases_five [100001];\n    cases_five [0] = 1;\n    cases_five [1] = 1;\n    cases_five [2] = 2;\n    cases_five [3] = 4;\n    cases_five [4] = 8;\n    cases_five [5] = 16;\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] = (cases_five[i-5] + cases_five[i-4] + cases_five[i-3] + cases_five[i-2] + cases_five[i-1]) % 100000007;\n    }\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] += cases_five[i-5];\n    }\n\n    long cases_three [100001];\n    cases_three [0] = 1;\n    cases_three [1] = 1;\n    cases_three [2] = 2;\n    cases_three [3] = 4;\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] = (cases_three[i-3] + cases_three[i-2] + cases_three[i-1]) % 100000007;\n    }\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] += cases_three[i-3];\n    }\n\n    string str;\n    while( getline(cin, str) ) {\n\n        if (str == \"#\") break;\n\n        int len = 0;\n        int ch = 'a';\n        long ans = 1;\n        for(int i = 0; i < str.length(); i++) {\n            if (str[i] == ch) {\n                len += 1;\n            }\n            else {\n                if (ch == '8' || ch == '0') {\n                    ans = (ans * cases_three[len]) % 100000007;\n                } else {\n                    ans = (ans * cases_five[len]) % 100000007;\n                }\n                len = 1;\n                ch = str[i];\n            }\n        }\n        if (ch == '8' || ch == '0') {\n            ans = (ans * cases_three[len]) % 100000007;\n        } else {\n            ans = (ans * cases_five[len]) % 100000007;\n        }\n\n        cout << ans << endl;\n        \n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#define M 100000007\nusing namespace std;\n\nint main(){\n  string str;\n  long long int ans;\n  char prv;\n  long long int t1[100001],t2[100001];\n\n  t1[1] = 1;\n  t1[2] = 2;\n  t1[3] = 4;\n  for(int i=4;i<=100000;i++){\n    t1[i] = 1;\n    for(int j=1;j<=3;j++){\n      t1[i] += (t1[i-j])%M;\n    }\n  }\n\n  t2[1] = 1;\n  t2[2] = 2;\n  t2[3] = 4;\n  t2[4] = 8;\n  t2[5] = 16;\n  for(int i=6;i<=100000;i++){\n    t2[i] = 1;\n    for(int j=1;j<=5;j++){\n      t2[i] += (t2[i-j])%M;\n    }\n  }\n\n  //for(int i=1;i<=12;i++)cout <<t2[i] << endl;\n  while(1){\n    cin >> str;\n    if(str == \"#\")break;\n\n    ans = 1;\n    int pos = 1;\n    prv = str[0];\n    int times = 1;\n    while(pos<(int)str.size()){\n      if(str[pos]!=prv){\n\tif(prv == '8' || prv == '0'){\n\t  ans *= t1[times];\n\t}else{\n\t  ans *= t2[times];\n\t}\n\tans = ans % M;\n\tprv = str[pos];\n\ttimes = 1;\n      }else times++;\n      pos++;\n    }\n    if(prv == '8' || prv == '0'){\n      ans *= t1[times];\n    }else{\n      ans *= t2[times];\n    }\n    ans = ans%M;\n    \n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100000,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100000,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<cmath>\n\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define MOD (100000007LL)\n\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef pair<int,int> ii;\n\nstring message;\n\ntypedef long long ll;\n/*\nll my_pow(ll a,ll e)\n{\n  return !e?1:\n    (e%2?(a*my_pow(a,e-1))%MOD:(my_pow(a*a,e/2))%MOD);\n}\n\nvoid calc(ull &v,char c,int pw)\n{\n  if(pw == 0)return;\n  if(c == '8' || c == '0')\n    {\n      if(pw == 3)v = ((v * 2LL)%MOD - 1 ) % MOD;\n      else if(pw > 3)v = ((v * 2LL)%MOD - my_pow(2LL,(pw-4))) % MOD;\n      else      v = (v * 2LL) % MOD;\n    }\n  else\n    {\n      if(pw > 5)v = ((v * 2LL)%MOD - my_pow(2LL,pw-6) ) % MOD;\n      else      v = (v * 2LL) % MOD;\n    }\n}\nvoid compute()\n{\n  ull ans = 1;\n  ull value = 1;\n  char cur = message[0];\n  int seq = -1;\n  rep(i,message.size())\n    {\n      seq++;\n      calc(value,message[i],seq);\n      if((i+1 < message.size() && cur != message[i+1]) || i == message.size()-1)\n\t{\n\t  ans = ( ans * value ) % MOD;\n\t  value = 1;\n\t  seq = -1; \n\t  if(i != message.size()-1)cur = message[i+1];\n\t  continue;\n\t}\n    }\n  cout << ans << endl;\n}\n*/\n\nvoid compute()\n{\n  vector<ii> vec;\n  char cur = message[0];\n  int cnt = 0,max_length = 0;\n  rep(i,message.size())\n    {\n      cnt++;\n      if((i+1<message.size() && cur != message[i+1]) || i == message.size()-1)\n\t{\n\t  vec.push_back(ii(cur-'0',cnt));\n\t  max_length = max(max_length,cnt);\n\t  cnt = 0;\n\t  cur = message[i+1];\n\t}\n    }\n\n  max_length++;\n  ull dp[2][max_length];//dp[0] : 3, dp[1] : 5\n  rep(i,3)dp[0][i] = (ull)pow(2.0,i);\n  rep(i,6)dp[1][i] = (ull)pow(2.0,i);\n\n  REP(i,3,max_length)dp[0][i] = (((dp[0][i-1] + dp[0][i-2]) % MOD + dp[0][i-3]) % MOD + 1ULL) % MOD;\n  REP(i,6,max_length)dp[1][i] = (((((dp[1][i-1] + dp[1][i-2])%MOD + dp[1][i-3])%MOD + dp[1][i-4])%MOD + dp[1][i-5])%MOD + 1ULL) % MOD;\n\n  ull ans = 1;\n  rep(i,vec.size())\n    {\n      int type = ((vec[i].first == 8 || vec[i].first == 0)?0:1);\n      ans = ( ans * dp[type][vec[i].second-1] ) % MOD;\n    }\n\n  cout << ans << endl;\n\n}\n\nint main()\n{\n  while(cin >> message,message != \"#\")\n    {\n      compute();\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nconst int MOD = 100000007;\n\nint main()\n{\n    for(;;){\n        string s;\n        cin >> s;\n        if(s == \"#\")\n            return 0;\n        int n = s.size();\n\n        int i = 0;\n        long long ret = 1;\n        while(i < n){\n            int j = i+1;\n            while(j < n && s[i] == s[j])\n                ++ j;\n\n            int m = 5;\n            if(s[i] == '8' || s[i] == '0')\n                m = 3;\n\n            ++ i;\n            vector<long long> dp(m, 0);\n            dp[0] = 1;\n            int len = 0;\n            int num = 0;\n            while(i < j){\n                if((j - i) % m == 0){\n                    num += accumulate(dp.begin(), dp.end(), 0);\n                    num %= MOD;\n                }\n\n                vector<long long> nextDp(m, 0);\n                for(int k=0; k<m; ++k){\n                    nextDp[0] += dp[k];\n                    nextDp[0] %= MOD;\n                    if(k+1 < m){\n                        nextDp[k+1] += dp[k];\n                        nextDp[k+1] %= MOD;\n                    }\n                }\n                dp.swap(nextDp);\n\n                ++ i;\n            }\n\n            num += accumulate(dp.begin(), dp.end(), 0);\n            num %= MOD;\n            ret *= num;\n            ret %= MOD;\n        }\n\n        cout << ret << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <math.h>\n#include <algorithm>\n#include <cfloat>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <set>\n#include <map>\n#include <time.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\n#define NUM 100000007\n\nll dp_5[100001],dp_3[100001];\nchar buf[100001];\n\n\nvoid func(){\n\n\tll ans = 1;\n\tint left = 0,right;\n\n\twhile(buf[left] != '\\0'){\n\t\tfor(right = left; buf[right] != '\\0' && buf[right] == buf[left]; right++);\n\t\tright--;\n\n\t\tif(buf[left] == '8' || buf[left] == '0'){\n\t\t\tans *= dp_3[right-left+1];\n\t\t\tans %= NUM;\n\t\t}else{\n\t\t\tans *= dp_5[right-left+1];\n\t\t\tans %= NUM;\n\t\t}\n\t\tleft = right+1;\n\t}\n\n\tprintf(\"%lld\\n\",ans%NUM);\n}\n\nint main(){\n\n\tfor(int length = 1; length <= 6; length++){\n\t\tdp_5[length] = pow(2,length-1);\n\t}\n\tfor(int length = 7; length <= 100000; length++){\n\t\tdp_5[length] = (1+dp_5[length-1]+dp_5[length-2]+dp_5[length-3]+dp_5[length-4]+dp_5[length-5])%NUM;\n\t}\n\n\tfor(int length = 1; length <= 4; length++){\n\t\tdp_3[length] = pow(2,length-1);\n\t}\n\tfor(int length = 5; length <= 100000; length++){\n\t\tdp_3[length] = (1+dp_3[length-1]+dp_3[length-2]+dp_3[length-3])%NUM;\n\t}\n\n\twhile(true){\n\t\tscanf(\"%s\",buf);\n\t\tif(buf[0] == '#')break;\n\n\t\tfunc();\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\n#define MOD 100000007\n\nint main(void){\n\tint dp1[100001], dp2[100001];\n\tmemset(dp1,0,sizeof(dp1));\n\tmemset(dp2,0,sizeof(dp2));\n\tdp1[1] = 1; dp1[2] = 2; dp1[3] = 4; dp1[4] = 8; dp1[5] = 16;\n\tdp2[1] = 1; dp2[2] = 2; dp2[3] = 4;\n\t\n\tfor(int i=4;i<100001;i++){\n\t\tif(i >= 6){\n\t\t\tdp1[i] = 1;\n\t\t\tfor(int j=1;j<=5;j++){\n\t\t\t\tdp1[i] += dp1[i-j] % MOD;\n\t\t\t\tdp1[i] %= MOD;\n\t\t\t}\n\t\t}\n\t\tdp2[i] = 1;\n\t\tfor(int j=1;j<=3;j++){\n\t\t\tdp2[i] += dp2[i-j] % MOD;\n\t\t\tdp2[i] %= MOD;\n\t\t}\n\t}\n\t\n\tstring str;\n\twhile(cin >> str){\n\t\tif(str == \"#\") break;\n\t\t\n\t\tchar c;\n\t\tint num;\n\t\tlong long ret=1;\n\t\t\n\t\tc = str[0];\n\t\tnum = 1;\n\t\tif(str.size() == 1){\n\t\t\tcout << 1 << endl;\n\t\t}else{\n\t\t\tfor(int i=1;i<str.size();i++){\n\t\t\t\tif(str[i] == c){\n\t\t\t\t\tnum++;\n\t\t\t\t}else{\n\t\t\t\t\tif(c == '0' || c == '8'){\n\t\t\t\t\t\tret = ((long long)ret * dp2[num]) % MOD;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tret = ((long long)ret * dp1[num]) % MOD;\n\t\t\t\t\t}\n\t\t\t\t\tc = str[i];\n\t\t\t\t\tnum = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c == '0' || c == '8'){\n\t\t\t\tret = ((long long)ret * dp2[num]) % MOD;\n\t\t\t}else{\n\t\t\t\tret = ((long long)ret * dp1[num]) % MOD;\n\t\t\t}\n\t\t\tcout << ret << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100002,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <queue>\n#include <map>\n#include <set>\n#include <math.h>\nusing namespace std;\ntypedef long long int ll;\n\nll mod=1e8+7;\nll dp[100100];\nll dp1[100100];\n\nint main(){\n\tfor(int i=1;i<=6;i++){\n\t\tdp[i]=pow(2,i-1);\n\t}\n\tfor(int i=7;i<=100000;i++){\n\t\t(dp[i]+=dp[i-1]+dp[i-2]+dp[i-3]+dp[i-4]+dp[i-5]+1)%=mod;\n\t}\n\tfor(int i=1;i<=4;i++){\n\t\tdp1[i]=pow(2,i-1);\n\t}\n\tfor(int i=5;i<=100000;i++){\n\t\t(dp1[i]+=dp1[i-1]+dp1[i-2]+dp1[i-3]+1)%=mod;\n\t}\n\twhile(1){\n\t\tstring s; cin >> s;\n\t\tif(s==\"#\")break;\n\t\tint n=s.size();\n\t\tll ans=1;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar c=s[i];\n\t\t\tint cnt=0;\n\t\t\twhile(i<n&&s[i]==c){\n\t\t\t\ti++;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\ti--;\n\t\t\tif(c=='8'||c=='0')(ans*=dp1[cnt])%=mod;\n\t\t\telse (ans*=dp[cnt])%=mod;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string.h>\n#include <string>\n\nusing namespace std;\n\n#define MOD 100000007\n\nvoid solve()\n{\n\tint dp1[100001], dp2[100001];\n\tmemset(dp1,0,sizeof(dp1));\n\tmemset(dp2,0,sizeof(dp2));\n\tdp1[1] = 1; dp1[2] = 2; dp1[3] = 4; dp1[4] = 8; dp1[5] = 16;\n\tdp2[1] = 1; dp2[2] = 2; dp2[3] = 4;\n\t\n\tfor(int i = 6; i < 100001; ++i)\n\t{\n\t\tdp1[i] = (1 + dp1[i - 1] % MOD + dp1[i - 2] % MOD + dp1[i - 3] % MOD + dp1[i - 4] % MOD + dp1[i - 5] % MOD) % MOD;\n\t}\n\tfor(int i = 4; i < 100001; ++i)\n\t{\n\t\tdp2[i] = (1 + dp2[i - 1] % MOD + dp2[i - 2] % MOD + dp2[i - 3] % MOD) % MOD;\n\t}\n\t\n\tstring str;\n\twhile(cin >> str)\n\t{\n\t\tif(str == \"#\")\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tlong long ret = 1;\n\t\tchar c;\n\t\tc = str[0];\n\t\tint num;\n\t\tnum = 1;\n\t\tif(str.size() == 1)\n\t\t{\n\t\t\tcout << 1 << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i = 1; i < str.size(); ++i)\n\t\t\t{\n\t\t\t\tif(str[i] == c)\n\t\t\t\t{\n\t\t\t\t\t++num;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(c == '0' || c == '8')\n\t\t\t\t\t{\n\t\t\t\t\t\tret = ((long long)ret * dp2[num]) % MOD;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tret = ((long long)ret * dp1[num]) % MOD;\n\t\t\t\t\t}\n\t\t\t\t\tc = str[i];\n\t\t\t\t\tnum = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c == '0' || c == '8')\n\t\t\t{\n\t\t\t\tret = ((long long)ret * dp2[num]) % MOD;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tret = ((long long)ret * dp1[num]) % MOD;\n\t\t\t}\n\t\t\tcout << ret << endl;\n\t\t}\n\t}\n}\n\nint main(void)\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define MP make_pair\n#define PB push_back\n#define F first\n#define S second\n#define INF 1 << 30\n#define EPS 1e-10\n#define M 100000007\n#define N 100000\n\ntypedef pair<int, int> pi;\ntypedef pair<int, pi> pii;\ntypedef vector<int> vi;\ntypedef queue<int> qi;\ntypedef long long ll;\n\nchar str[N+1];\nint dp1[N+1], dp2[N+1];\n\nint main(){\n  dp1[1] = 1; dp1[2] = 2; dp1[3] = 4; dp1[4] = 8; dp1[5] = 16;\n  REP(i, 6, N+1){\n    dp1[i] = 1;\n    REP(j, 1, 6) dp1[i] = (dp1[i] + dp1[i-j])%M;\n  }\n\n  dp2[1] = 1; dp2[2] = 2; dp2[3] = 4;\n  REP(i, 4, N+2){\n    dp2[i] = 1;\n   REP(j, 1, 4) dp2[i] = (dp2[i] + dp2[i-j])%M;\n  }\n\n  while(scanf(\"%s\", str) && str[0] != '#'){\n    int c = 0;\n    ll res = 1;\n    char now = str[0];\n    rep(i, strlen(str)){\n      if(str[i] == now) c++;\n      else{\n\t//\tprintf(\"%d\\n\", c);\n\tif(now == '1' || now == '2' || now == '3' || now == '4' || now == '5' || now == '6' || \n\t   now == '7' || now == '9') res = (res * dp1[c])%M;\n\telse res = (res * dp2[c])%M;\n\tc = 1;\n\tnow = str[i];\n      }\n    }\n    //    printf(\"%d\\n\", c);\n    if(now == '8' || now == '0') res = (res * dp2[c])%M;\n    else res = (res * dp1[c])%M;\n\n    printf(\"%lld\\n\", res);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100002,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 100000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\nconst int MAX = 100000;\nvoid fill_dp(int dp[MAX + 1], int len){\n  int dp_[MAX + 1][6] = {};\n  dp_[1][0] = 1;\n  for(int i = 1; i < MAX; i++){\n    for(int j = 0; j < len; j++){\n      dp_[i + 1][0] = (dp_[i + 1][0] + dp_[i][j]) % MOD;\n      dp_[i + 1][j + 1] = (dp_[i + 1][j + 1] + dp_[i][j]) % MOD;\n    }\n  }\n  for(int i = 1; i <= MAX; i++){\n    for(int j = 0; j < len; j++){\n      dp[i] = (dp[i] + dp_[i][j]) % MOD;\n    }\n  }\n  for(int i = len; i <= MAX; i++){\n    dp[i] = (dp[i] + dp[i - len]) % MOD;\n  }\n}\n\nint main(){\n  int dp3[MAX + 1] = {};\n  int dp5[MAX + 1] = {};\n  fill_dp(dp3, 3);\n  fill_dp(dp5, 5);\n  string s;\n  while(cin >> s && s != \"#\"){\n    int N = s.size();\n    s += \"#\";\n    int cur = 1;\n    int ans = 1;\n    REP(i, N){\n      if(s[i] != s[i + 1]){\n        if(s[i] == '8' || s[i] == '0'){\n          ans = ((ll)ans * dp3[cur]) % MOD;\n        }else{\n          ans = ((ll)ans * dp5[cur]) % MOD;\n        }\n        cur = 1;\n      }else{\n        cur ++;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define MOD (long long)(1e8 + 7)\nusing namespace std;\n\nstring s;\n\nlong long solve();\nlong long calc(long long len, long long msize);\n\nint main() {\n  while(1) {\n    cin >> s;\n    if(s == \"#\") break;\n    cout << solve() << endl;\n  }\n  return 0;\n}\n\nlong long solve() {\n  long long ans = 1, ssize = s.size();\n  for(int i = 0; i < ssize; ++i) {\n    char now = s[i];\n    long long cnt = 0, nowsize = 3;\n    if(now != '0' && now != '8') nowsize += 2;\n    while(i < ssize && s[i] == now) ++i, ++cnt;\n    (ans *= calc(cnt, nowsize)) %= MOD;\n    --i;\n  }\n  return ans;\n}\n\nlong long calc(long long len, long long msize) {\n  long long ans = 0;\n  vector<long long> dp;\n  dp.assign(msize, 0);\n  dp[len % msize] = 1;\n  for(int i = 0; i < len; ++i) {\n    long long sum = 0;\n    for(int j = 0; j < msize; ++j) (sum += dp[j]) %= MOD;\n    if((len - 1 - i) % msize == 0) (ans += sum) %= MOD;\n    dp[(len - 1 - i) % msize] = sum;\n  }\n  return ans;\n}\n"
  },
  {
    "language": "C++",
    "code": "\n#include<iostream>\nusing namespace std;\n\n#define N 100000\n#define M 100000007\n\nlong long int dp[N+2][2]={0};\n\nvoid init(){\n  int loop[2]={5,3};\n  for(int t=0;t<2;t++){\n    dp[0][t]=1;\n    dp[1][t]=1;\n    for(int i=2;i<=loop[t];i++)dp[i][t]=dp[i-1][t]*2;\n    for(int i=loop[t]+1;i<N+2;i++){\n      dp[i][t]=1;\n      for(int j=1;j<=loop[t];j++){\n\tdp[i][t]+=dp[i-j][t];\n\tdp[i][t]%=M;\n      }\n    }\n  }\n  return;\n}\n\nint main()\n{\n  string s;\n  long long int ans;\n  int i,cnt;\n  init();\n  while(cin>>s,s!=\"#\"){\n    ans=1;\n    cnt=1;\n    for(i=1;i<s.size();i++){\n      if(s[i-1]==s[i]){\n\tcnt++;\n      }else{\n\tint t;\n\tif(s[i-1]=='8'||s[i-1]=='0')t=1;\n\telse t=0;\n\tans*=dp[cnt][t];\n\tans%=M;\n\tcnt=1;\n      }\n    }\n    i=s.size()-1;\n    if(s[i-1]==s[i]){\n      int t;\n      if(s[i-1]=='8'||s[i-1]=='0')t=1;\n      else t=0;\n      ans*=dp[cnt][t];\n      ans%=M;\n    }\n    cout<<ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\ntypedef long long lli;\nconst int MAX_S = 100001;\nconst int M = 100000007;\n\nint f1[MAX_S];\nint f2[MAX_S];\nint g1[MAX_S];\nint g2[MAX_S];\n\nvoid init() {\n  for(int i=1,p=1; i <= 5; ++i,p*=2) f1[i] = p;\n  for(int i = 6; i < MAX_S; ++i) {\n    f1[i] = (f1[i-1] + f1[i-2] + f1[i-3] + f1[i-4] + f1[i-5]) % M;\n  }\n  for(int i=1,p=1; i <= 3; ++i,p*=2) f2[i] = p;\n  for(int i = 4; i < MAX_S; ++i) {\n    f2[i] = (f2[i-1] + f2[i-2] + f2[i-3]) % M;\n  }\n  for(int i = 1; i < MAX_S; ++i) {\n    g1[i] = f1[i];\n    g2[i] = f2[i];\n    if(i > 3) g2[i] = (g2[i] + g2[i-3]) % M;\n    if(i > 5) g1[i] = (g1[i] + g1[i-5]) % M;\n  }\n}\n\nint main() {\n  init();\n  string line;\n  while(getline(cin, line) && line != \"#\") {\n    int cnt = 1;\n    int ans = 1;\n    for(int i = 0; i < line.size(); ++i) {\n      if(i+1 == line.size() || line[i] != line[i+1]) {\n\tif(line[i] == '8' || line[i] == '0') {\n\t  ans = (lli)ans*g2[cnt]%M;\n\t} else {\n\t  ans = (lli)ans*g1[cnt]%M;\n\t}\n\tcnt = 1;\n      } else {\n\t++cnt;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100001,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<29;\ntypedef long long ll;\nint M = 100000007;\n\nint table[10] = {3,5,5,5,5,5,5,5,3,5};\nint dp[10][100001][6];\n\nll solve(int button, int len) {\n  ll res = 0;\n//  cout << button << \" \" << len << endl;\n  REP(i, table[button]) {\n    res = (res + dp[button][len][i]) % M;\n  }\n  return res;\n}\n\nint main() {\n  memset(dp,0,sizeof(dp));\n  REP(i, 10) {\n    //dp[i][0][0] = 1;\n    for (int j=1; j<100001; ++j) {\n      if (j%table[i]==1) dp[i][j][0] = 1;\n      REP(k, table[i])\n        dp[i][j][0] = (dp[i][j][0] + dp[i][j-1][k]) % M;\n      for (int k=1; k<table[i]; ++k) {\n        dp[i][j][k] = (dp[i][j][k] + dp[i][j-1][k-1]) % M;\n      }\n    }\n  }\n  // REP(i,10) {\n  //   REP(j,5) {\n  //     printf(\"(%d,%d)=%d \", i,j,dp[1][i][j]);\n  //   }\n  //   cout <<endl;\n  // }\n  // cout << endl;\n  \n  string s;\n\n  while(cin >> s, s!=\"#\") {\n    char now = 0;\n    int start = 0;\n    ll res = 1;\n    REP(i, s.size()) {\n      if (s[i] != now) {\n        if (now!=0) {\n          res = (res * solve(now-'0', i-start)) % M;\n        }\n        now = s[i];\n        start = i;\n      }\n    }\n    res = (res * solve(now-'0', s.size()-start)) % M;\n    cout << res << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\nstatic const double EPS = 1e-8;\ntypedef long long ll;\n\n\nconst int MAX = 100000;\nconst int mod = 100000007;\n\nint dp5[MAX + 5], dp3[MAX + 3];\nint dpp5[MAX + 6], dpp3[MAX + 4];\n\nchar buf[MAX + 1];\n\nint main()\n{\n\tdp5[0] = dp3[0] = 1;\n\tfor (int i = 0; i < MAX; ++i)\n\t{\n\t\tfor (int j = 1; j <= 5; ++j)\n\t\t\t(dp5[i + j] += dp5[i]) %= mod;\n\t\tfor (int j = 1; j <= 3; ++j)\n\t\t\t(dp3[i + j] += dp3[i]) %= mod;\n\t}\n\tfor (int i = 1; i <= MAX; ++i)\n\t{\n\t\tdpp5[i + 5] = ((dpp5[i] += dp5[i]) %= mod);\n\t\tdpp3[i + 3] = ((dpp3[i] += dp3[i]) %= mod);\n\t}\n\n\twhile (scanf(\"%s\", buf), *buf != '#')\n\t{\n\t\tchar* p = buf;\n\t\tll res = 1;\n\n\t\tchar c = '@';\n\t\tint count = 1;\n\t\tdo\n\t\t{\n\t\t\tif (*p == c)\n\t\t\t\t++count;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (c != '8' && c != '0')\n\t\t\t\t\tres *= dpp5[count];\n\t\t\t\telse\n\t\t\t\t\tres *= dpp3[count];\n\n\t\t\t\tres %= mod;\n\t\t\t\tc = *p;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t} while (*p++ != '\\0');\n\n\t\tprintf(\"%d\\n\", res);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cmath>\n#include<map>\n#include<set>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<deque>\nusing namespace std;\n\nint main() {\n\n    long Mod = 100000007;\n\n    long cases_five [100001];\n    cases_five [0] = 1;\n    cases_five [1] = 1;\n    cases_five [2] = 2;\n    cases_five [3] = 4;\n    cases_five [4] = 8;\n    cases_five [5] = 16;\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] = (cases_five[i-5] + cases_five[i-4] + cases_five[i-3] + cases_five[i-2] + cases_five[i-1]) % Mod;\n    }\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] += cases_five[i-5];\n        cases_five[i] %= Mod;\n    }\n\n    long cases_three [100001];\n    cases_three [0] = 1;\n    cases_three [1] = 1;\n    cases_three [2] = 2;\n    cases_three [3] = 4;\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] = (cases_three[i-3] + cases_three[i-2] + cases_three[i-1]) % Mod;\n    }\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] += cases_three[i-3];\n        cases_three[i] %= Mod;\n    }\n\n    string str;\n    while( getline(cin, str)) {\n        if (str == \"#\") break;\n\n        istringstream is(str);\n        int len = 1;\n        long ans = 1;\n        char ch, pch;\n        is >> pch;\n        while(is >> ch) {\n            if (ch == pch) {\n                len += 1;\n            }\n            else {\n                if (pch == '8' || pch == '0') {\n                    ans = (ans * cases_three[len]) % Mod;\n                } else {\n                    ans = (ans * cases_five[len]) % Mod;\n                }\n                len = 1;\n                pch = ch;\n            }\n        }\n        if (ch == '8' || ch == '0') {\n            ans = (ans * cases_three[len]) % Mod;\n        } else {\n            ans = (ans * cases_five[len]) % Mod;\n        }\n\n        cout << ans << endl;\n        \n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n \nint tx[] = {0,1,0,-1};\nint ty[] = {-1,0,1,0};\n \nstatic const double EPS = 1e-8;\n\nll dp[6][100001]; //dp[pos][buffered char][hidden or not]\n\nconst static ll MOD = 100000007;\n\nint main(){\n  string text;\n\n  memset(dp,0,sizeof(dp));\n  dp[3][0] = 0;\n  dp[3][1] = 1;\n  dp[3][2] = 2;\n\n  dp[5][0] = 0;\n  dp[5][1] = 1;\n  dp[5][2] = 2;\n  dp[5][3] = 4;\n  dp[5][4] = 8;\n\n  for(int text_i = 0; text_i < 100000; text_i++){\n    dp[3][text_i + 3] += 1;\n    for(int offset = 0; offset <= 2; offset++){\n      dp[3][text_i + 3] += dp[3][text_i + offset];\n      dp[3][text_i + 3] %= MOD;\n    }\n\n    dp[5][text_i + 5] += 1;\n    for(int offset = 0; offset <= 4; offset++){\n      dp[5][text_i + 5] += dp[5][text_i + offset];\n      dp[5][text_i + 5] %= MOD;\n    }\n  }\n\n  while(cin >> text){\n    if(text == \"#\") break;\n\n    ll res = 1;\n    int length = 1;\n    for(int text_i = 0; text_i + 1 < text.size(); text_i++){\n      if(text[text_i] == text[text_i + 1]){\n        length++;\n      }\n      else{\n        if(text[text_i] == '8' || text[text_i] == '0'){\n          res = (res * dp[3][length]) % MOD;\n          res %= MOD;\n        }\n        else{\n          res = (res * dp[5][length]) % MOD;\n          res %= MOD;\n        }\n        length = 1;\n      }\n    }\n\n    if(length > 0){\n      if(text[text.size() - 1] == '8' || text[text.size() - 1] == '0'){\n        res = (res * dp[3][length]) % MOD;\n        res %= MOD;\n      }\n      else{\n        res = (res * dp[5][length]) % MOD;\n        res %= MOD;\n      }\n    }\n    printf(\"%lld\\n\",res % MOD);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\nstatic const double EPS = 1e-8;\ntypedef long long ll;\n\n\nconst int MAX = 100000;\nconst int mod = 100000007;\n\nint dp5[MAX + 5], dp3[MAX + 3];\nint dpp5[MAX + 6], dpp3[MAX + 4];\n\nchar buf[MAX + 1];\n\nint main()\n{\n\tdp5[0] = dp3[0] = 1;\n\tfor (int i = 0; i < MAX; ++i)\n\t{\n\t\tfor (int j = 1; j <= 5; ++j)\n\t\t\t(dp5[i + j] += dp5[i]) %= mod;\n\t\tfor (int j = 1; j <= 3; ++j)\n\t\t\t(dp3[i + j] += dp3[i]) %= mod;\n\t}\n\tfor (int i = 1; i <= MAX; ++i)\n\t{\n\t\tdpp5[i + 5] = ((dpp5[i] += dp5[i]) %= mod);\n\t\tdpp3[i + 3] = ((dpp3[i] += dp3[i]) %= mod);\n\t}\n\n\twhile (fgets(buf, sizeof(buf), stdin), *buf != '#')\n\t{\n\t\tchar* p = buf;\n\t\tll res = 1;\n\n\t\tchar c = '@';\n\t\tint count = 1;\n\t\tdo\n\t\t{\n\t\t\tif (*p == c)\n\t\t\t\t++count;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (c != '8' && c != '0')\n\t\t\t\t\tres *= dpp5[count];\n\t\t\t\telse\n\t\t\t\t\tres *= dpp3[count];\n\n\t\t\t\tres %= mod;\n\t\t\t\tc = *p;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t} while (*p++ != '\\0' && p[-1] != '\\n');\n\n\t\tprintf(\"%d\\n\", res);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100000,M=100000007};long long d[N+1][2];int t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<map>\n#include<queue>\n#include<cassert>\n#include<cmath>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define fr(i,c) for(__typeof (c.begin()) i=c.begin(); i!=c.end(); i++)\n#define all(c) (c).begin(), (c).end()\n#define mp make_pair\n#define pb push_back\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\ntypedef long long ll;\n\nconst int mod=100000007;\nint dp[100001][6],dp2[100001][4];\nint sum[100001],sum2[100001];\nstring in;\n\nint main(){\n  dp[0][0]=dp2[0][0]=1;\n  \n  rep(i,100000)rep(j,6){\n    if(j<5)(dp[i+1][j+1]+=dp[i][j])%=mod;\n    (dp[i+1][1]+=dp[i][j])%=mod;\n  }\n  rep(i,100000)rep(j,4){\n    if(j<3)(dp2[i+1][j+1]+=dp2[i][j])%=mod;\n    (dp2[i+1][1]+=dp2[i][j])%=mod;\n  }\n  rep(i,100001){\n    rep(j,6)(sum[i]+=dp[i][j])%=mod;\n    rep(j,4)(sum2[i]+=dp2[i][j])%=mod;\n  }\n  rep(i,100001){\n    if(i>5)(sum[i]+=sum[i-6])%=mod;\n    if(i>3)(sum2[i]+=sum2[i-4])%=mod;\n  }\n  \n  rep(i,20)cerr<<sum[i]<<\" \"; cerr<<endl;\n  \n  while(getline(cin,in),in!=\"#\"){\n    int cnt=0;\n    vi v,type;\n    rep(i,in.size()){\n      if(i&&in[i]!=in[i-1]){\n        v.pb(cnt); cnt=1;\n        type.pb(in[i-1]=='0'||in[i-1]=='8');\n      }\n      else cnt++;\n    }\n    type.pb(in[in.size()-1]=='0'||in[in.size()-1]=='8');\n    v.pb(cnt);\n\n    ll ans=1;\n    rep(i,v.size()){\n        if(!type[i])(ans*=sum[v[i]-1])%=mod;\n        else (ans*=sum2[v[i]-1])%=mod;\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cmath>\n#include<map>\n#include<set>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<deque>\nusing namespace std;\n\nint main() {\n\n    long cases_five [100001];\n    cases_five [0] = 1;\n    cases_five [1] = 1;\n    cases_five [2] = 2;\n    cases_five [3] = 4;\n    cases_five [4] = 8;\n    cases_five [5] = 16;\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] = (cases_five[i-5] + cases_five[i-4] + cases_five[i-3] + cases_five[i-2] + cases_five[i-1]) % 100000007;\n    }\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] += cases_five[i-5];\n    }\n\n    long cases_three [100001];\n    cases_three [0] = 1;\n    cases_three [1] = 1;\n    cases_three [2] = 2;\n    cases_three [3] = 4;\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] = (cases_three[i-3] + cases_three[i-2] + cases_three[i-1]) % 100000007;\n    }\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] += cases_three[i-3];\n    }\n\n    string str;\n    while( cin >> str && str != \"#\") {\n        int len = 0;\n        int ch = 'a';\n        long ans = 1;\n        for(int i = 0; i < str.length(); i++) {\n            if (str[i] == ch) {\n                len += 1;\n            }\n            else {\n                if (ch == '8' || ch == '0') {\n                    ans = (ans * cases_three[len]) % 100000007;\n                } else {\n                    ans = (ans * cases_five[len]) % 100000007;\n                }\n                len = 1;\n                ch = str[i];\n            }\n        }\n        if (ch == '8' || ch == '0') {\n            ans = (ans * cases_three[len]) % 100000007;\n        } else {\n            ans = (ans * cases_five[len]) % 100000007;\n        }\n\n        cout << ans << endl;\n        \n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <queue>\n#include <map>\n#include <set>\n#include <math.h>\nusing namespace std;\ntypedef long long int ll;\n\nll mod=1e8+7;\nll dp[100100];\nll dp1[100100];\n\nint main(){\n\tfor(int i=1;i<=6;i++){\n\t\tdp[i]=pow(2,i-1);\n\t}\n\tfor(int i=7;i<=100000;i++){\n\t\t(dp[i]+=dp[i-1]+dp[i-2]+dp[i-3]+dp[i-4]+dp[i-5]+1)%=mod;\n\t}\n\tfor(int i=1;i<=4;i++){\n\t\tdp1[i]=pow(2,i-1);\n\t}\n\tfor(int i=5;i<=100000;i++){\n\t\t(dp1[i]+=dp1[i-1]+dp1[i-2]+dp1[i-3]+1)%=mod;\n\t}\n\twhile(1){\n\t\tstring s; cin >> s;\n\t\tif(s==\"#\")break;\n\t\tint n=s.size();\n\t\tll ans=1;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar c=s[i];\n\t\t\tint cnt=0;\n\t\t\twhile(i<n&&s[i]==c){\n\t\t\t\ti++;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\ti--;\n\t\t\tif(c=='8'||c=='0')(ans*=dp1[cnt])%=mod;\n\t\t\telse (ans*=dp[cnt])%=mod;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cmath>\n#include<map>\n#include<set>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<deque>\nusing namespace std;\n\nint main() {\n\n    long Mod = 100000007;\n\n    long cases_five [100001];\n    cases_five [0] = 1;\n    cases_five [1] = 1;\n    cases_five [2] = 2;\n    cases_five [3] = 4;\n    cases_five [4] = 8;\n    cases_five [5] = 16;\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] = (cases_five[i-5] + cases_five[i-4] + cases_five[i-3] + cases_five[i-2] + cases_five[i-1]) % Mod;\n    }\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] += cases_five[i-5];\n        cases_five[i] %= Mod;\n    }\n\n    long cases_three [100001];\n    cases_three [0] = 1;\n    cases_three [1] = 1;\n    cases_three [2] = 2;\n    cases_three [3] = 4;\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] = (cases_three[i-3] + cases_three[i-2] + cases_three[i-1]) % Mod;\n    }\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] += cases_three[i-3];\n        cases_three[i] %= Mod;\n    }\n\n    string str;\n    while( getline(cin, str)) {\n        if (str == \"#\") break;\n\n        istringstream is(str);\n        int len = 1;\n        long ans = 1;\n        char ch, pch;\n        is >> pch;\n        while(is >> ch) {\n            if (ch == pch) {\n                len += 1;\n            }\n            else {\n                if (pch == '8' || pch == '0') {\n                    ans = (ans * cases_three[len]) % Mod;\n                } else {\n                    ans = (ans * cases_five[len]) % Mod;\n                }\n                len = 1;\n                pch = ch;\n            }\n        }\n        if (ch == '8' || ch == '0') {\n            ans = (ans * cases_three[len]) % Mod;\n        } else {\n            ans = (ans * cases_five[len]) % Mod;\n        }\n\n        cout << ans << endl;\n        \n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cmath>\n#include<map>\n#include<set>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<deque>\nusing namespace std;\n\nint main() {\n\n    long cases_five [100001];\n    cases_five [0] = 1;\n    cases_five [1] = 1;\n    cases_five [2] = 2;\n    cases_five [3] = 4;\n    cases_five [4] = 8;\n    cases_five [5] = 16;\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] = (cases_five[i-5] + cases_five[i-4] + cases_five[i-3] + cases_five[i-2] + cases_five[i-1]) % 100000007;\n    }\n    for(int i = 6; i <= 100000; i++) {\n        cases_five[i] += cases_five[i-5];\n    }\n\n    long cases_three [100001];\n    cases_three [0] = 1;\n    cases_three [1] = 1;\n    cases_three [2] = 2;\n    cases_three [3] = 4;\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] = (cases_three[i-3] + cases_three[i-2] + cases_three[i-1]) % 100000007;\n    }\n    for(int i = 4; i <= 100000; i++) {\n        cases_three[i] += cases_three[i-3];\n    }\n\n    string str;\n    while( getline(cin, str) ) {\n\n        if (str == \"#\") break;\n\n        int len = 0;\n        int ch = 'a';\n        long ans = 1;\n        for(int i = 0; i < str.length(); i++) {\n            if (str[i] == ch) {\n                len += 1;\n            }\n            else {\n                if (ch == '8' || ch == '0') {\n                    ans = (ans * cases_three[len]) % 100000007;\n                } else {\n                    ans = (ans * cases_five[len]) % 100000007;\n                }\n                len = 1;\n                ch = str[i];\n            }\n        }\n        if (ch == '8' || ch == '0') {\n            ans = (ans * cases_three[len]) % 100000007;\n        } else {\n            ans = (ans * cases_five[len]) % 100000007;\n        }\n\n        cout << ans << endl;\n        \n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<climits>\n#include<algorithm>\n#include<ctime>\n#include<cstdlib>\n#include<vector>\n#include<cassert>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\ntypedef long long ll;\nconst int N = 100001;\nconst ll mod = 100000007;\nll len5[N];\nll len3[N];\nll dp5[N];\nll dp3[N];\n\nvoid precalc(){\n  len5[0]=1;\n  len3[0]=1;\n  for(int i=1;i<N;i++){\n    len5[i]=0;\n    len3[i]=0;\n    for(int j=1;j<=5;j++){\n      if (i-j < 0)continue;\n      len5[i]+=len5[i-j];\n      len5[i]%=mod;\n    }\n    for(int j=1;j<=3;j++){\n      if (i-j < 0)continue;\n      len3[i]+=len3[i-j];\n      len3[i]%=mod;\n    }\n  }\n\n  //O(n)\n  dp5[0]=0;\n  dp3[0]=0;\n  for(int i=1;i<N;i++){\n    dp5[i]=len5[i];\n    dp3[i]=len3[i];\n    if (i-5 > 0){\n      dp5[i]+=dp5[i-5];\n      dp5[i]%=mod;\n    }\n    if (i-3 > 0){\n      dp3[i]+=dp3[i-3];\n      dp3[i]%=mod;\n    }\n  }\n\n}\n\nmain(){\n  precalc();\n  string in;\n  while(cin>>in){\n    if (in == \"#\")break;\n    in=in+\"*\";//endmark\n    //8,0 or 1,2,3,4,5,6,7,9\n    ll ans=1;\n    char prev='+';\n    int cnt=1;\n    for(int i=0;i<in.size();i++){\n      if (prev != in[i]){\n\tif (prev == '0' || prev == '8')ans=ans*dp3[cnt];\n\telse if (isdigit(prev))ans=ans*dp5[cnt];\n\tans%=mod;\n\tprev=in[i];\n\tcnt=1;\n      }else cnt++;\n    }\n    cout << ans%mod << endl;\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll M=100000007;\n\nint main(){\n\tint T[128]; // period\n\tT['1']=T['2']=T['3']=T['4']=T['5']=T['6']=T['7']=T['9']=5;\n\tT['8']=T['0']=3;\n\n\tstatic ll dp[6][100001];\n\trep(k,2){\n\t\tint T=(k==0?5:3);\n\t\trep(i,T+1) dp[T][i+1]=1<<i;\n\t\tfor(int i=T+1;i<100000;i++) dp[T][i+1]=((2*dp[T][i]-dp[T][i-T])%M+M)%M;\n\t}\n\n\tfor(char s[100001];scanf(\"%s\",s),s[0]!='#';){\n\t\tll ans=1;\n\t\tfor(int i=1,p=0;s[i-1];i++) if(s[i-1]!=s[i]) {\n\t\t\tans=(ans*dp[T[s[i-1]]][i-p])%M;\n\t\t\tp=i;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<cmath>\n\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define MOD (100000007LL)\n\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef pair<int,int> ii;\n\nstring message;\n\ntypedef long long ll;\n/*\nll my_pow(ll a,ll e)\n{\n  return !e?1:\n    (e%2?(a*my_pow(a,e-1))%MOD:(my_pow(a*a,e/2))%MOD);\n}\n\nvoid calc(ull &v,char c,int pw)\n{\n  if(pw == 0)return;\n  if(c == '8' || c == '0')\n    {\n      if(pw == 3)v = ((v * 2LL)%MOD - 1 ) % MOD;\n      else if(pw > 3)v = ((v * 2LL)%MOD - my_pow(2LL,(pw-4))) % MOD;\n      else      v = (v * 2LL) % MOD;\n    }\n  else\n    {\n      if(pw > 5)v = ((v * 2LL)%MOD - my_pow(2LL,pw-6) ) % MOD;\n      else      v = (v * 2LL) % MOD;\n    }\n}\nvoid compute()\n{\n  ull ans = 1;\n  ull value = 1;\n  char cur = message[0];\n  int seq = -1;\n  rep(i,message.size())\n    {\n      seq++;\n      calc(value,message[i],seq);\n      if((i+1 < message.size() && cur != message[i+1]) || i == message.size()-1)\n\t{\n\t  ans = ( ans * value ) % MOD;\n\t  value = 1;\n\t  seq = -1; \n\t  if(i != message.size()-1)cur = message[i+1];\n\t  continue;\n\t}\n    }\n  cout << ans << endl;\n}\n*/\n\nvoid compute()\n{\n  vector<ii> vec;\n  char cur = message[0];\n  int cnt = 0,max_length = 0;\n  rep(i,message.size())\n    {\n      cnt++;\n      if((i+1<message.size() && cur != message[i+1]) || i == message.size()-1)\n\t{\n\t  vec.push_back(ii(cur-'0',cnt));\n\t  max_length = max(max_length,cnt);\n\t  cnt = 0;\n\t  cur = message[i+1];\n\t}\n    }\n\n  max_length++;\n  ull dp[2][max_length];//dp[0] : 3, dp[1] : 5\n  rep(i,3)dp[0][i] = (ull)pow(2.0,i);\n  rep(i,6)dp[1][i] = (ull)pow(2.0,i);\n\n  REP(i,3,max_length)dp[0][i] = dp[0][i-1] + dp[0][i-2] + dp[0][i-3] + 1;\n  REP(i,6,max_length)dp[1][i] = dp[1][i-1] + dp[1][i-2] + dp[1][i-3] + dp[1][i-4] + dp[1][i-5] + 1;\n\n  ull ans = 1;\n  rep(i,vec.size())\n    {\n      int type = ((vec[i].first == 8 || vec[i].first == 0)?0:1);\n      ans = ( ans * dp[type][vec[i].second-1] ) % MOD;\n    }\n\n  cout << ans << endl;\n\n}\n\nint main()\n{\n  while(cin >> message,message != \"#\")\n    {\n      compute();\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100002,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#pragma GCC optimize(\"Ofast\")\n#define _GLIBCXX_DEBUG\n#include<bits/stdc++.h>\nusing namespace::std;\nstruct __INIT{__INIT(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);}} __init;\n// random_device rd;\n// mt19937 mt(rd());\n// #include <boost/numeric/interval.hpp>\n// #include <boost/numeric/interval/io.hpp>\n// #include <boost/intrusive/rbtree.hpp>\n// #include <boost/geometry.hpp>\n// #include <boost/geometry/geometries/linestring.hpp>\n// #include <boost/geometry/geometries/polygon.hpp>\n// #include <boost/geometry/geometries/point_xy.hpp>\n// #include <boost/multiprecision/cpp_dec_float.hpp>\n// #include <boost/multiprecision/cpp_int.hpp>\n// namespace mp = boost::multiprecision;\n// typedef mp::number<mp::cpp_dec_float<0>> cfloat;\n// typedef mp::cpp_int cint;\n\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/priority_queue.hpp>\n#include<ext/pb_ds/tag_and_trait.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T=long long>using pbds=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\ntemplate<typename T=long long>using pqueue =__gnu_pbds::priority_queue<T, less<T>,rc_binomial_heap_tag>;\ntypedef long long lint;\ntypedef long long ll;\ntypedef long double ldouble;\ntypedef vector<lint> vec;\ntypedef vector<vector<lint>> mat;\ntypedef vector<vector<vector<lint>>> mat3;\ntypedef vector<double> dvec;\ntypedef vector<vector<double>> dmat;\ntypedef vector<vector<vector<double>>> dmat3;\ntypedef vector<string> svec;\ntypedef vector<vector<string>> smat;\ntypedef vector<vector<vector<string>>> smat3;\ntypedef vector<pair<lint,lint>> pvec;\ntypedef vector<vector<pair<lint,lint>>> pmat;\ntypedef vector<vector<vector<pair<lint,lint>>>> pmat3;\n#define rep(i, n) for(lint i = 0; i < (lint)(n); i++)\n#define irep(i) for(lint i = 0;; i++)\n#define irep1(i) for(lint i = 1;; i++)\n#define irep2(i) for(lint i = 2;; i++)\n#define rrep(i, n) for(lint i = (lint)(n-1); i >-1; i--)\n#define rrepi(i,a,b) for(lint i = (lint)(b-1); i >a-1; i--)\n#define repi(i,a,b) for(lint i=lint(a);i<lint(b);i++)\n#define rep2(i,a,b,c) for(lint i=lint(a);i>lint(b);i+=c)\n#define all(x) (x).begin(),(x).end()\n//#define PI 3.141592653589793\n#define dist(x1,y1,x2,y2) (pow(pow(x2-x1,2)+pow(y2-y1,2),0.5))\n#define output(v) do{bool f=0;for(auto i:v){cout<<(f?\" \":\"\");if(i>INF/2)cout<<\"INF\";else cout<<i;f=1;}cout<<\"\\n\";}while(0)\n#define output2(v) for(auto j:v)output(j);\n#define _output(v) do{bool f=0;rep(i,v.size()){cout<<(f?\" \":\"\");if(v[i]>INF/2)cout<<\"INF\";else cout<<v[i];f=1;}cout<<\"\\n\";}while(0)\n#define _output2(v) rep(j,v.size()){_output(v[j]);}\n#define input(a,n) lint n;cin>>n;vector<lint>a(n);rep(i,n)cin>>a[i];\n#define SUM(v) accumulate(all(v),0LL)\n#define INF (1LL<<60)\n#define IINF (1<<30)\n#define EPS (1e-10)\n#define LINF 9223372036854775807\n#define MOD 100000007\n#define endl \"\\n\"\ntemplate<typename T=lint>T in(){return *istream_iterator<T>(cin);}\ninline lint gcd(lint a,lint b){return b?gcd(b,a%b):a;}\ntemplate<typename T=lint>inline T lcm(T a,T b){return a/gcd(a,b)*b;}\ntemplate<typename T=lint>inline T add(T a,T b){return a+b;}\ntemplate<typename T=lint>inline T minq(T a,T b){return min(a,b);}\ninline bool chmin(auto& s,const auto& t){bool res=s>t;s=min(s,t);return res;}\ninline bool chmax(auto& s,const auto& t){bool res=s<t;s=max(s,t);return res;}\nvector<lint> dx={-1,1,0,0,1,1,-1,-1};\nvector<lint> dy={0,0,-1,1,1,-1,1,-1};\n\nclass mint {\n  using u64 = std::uint_fast64_t;\n    public:\n    u64 a;\n    constexpr mint(const u64 x = 0) noexcept : a(x % MOD) {}\n    constexpr u64 &value() noexcept { return a; }\n    constexpr const u64 &value() const noexcept { return a; }\n    constexpr mint operator+(const mint rhs) const noexcept {\n        return mint(*this) += rhs;\n    }\n    constexpr mint operator-(const mint rhs) const noexcept {\n        return mint(*this) -= rhs;\n    }\n    constexpr mint operator*(const mint rhs) const noexcept {\n        return mint(*this) *= rhs;\n    }\n    constexpr mint operator/(const mint rhs) const noexcept {\n        return mint(*this) /= rhs;\n    }\n    constexpr mint &operator+=(const mint rhs) noexcept {\n        a += rhs.a;\n        if (a >= MOD) {\n            a -= MOD;\n        }\n        return *this;\n    }\n    constexpr mint &operator-=(const mint rhs) noexcept {\n        if (a < rhs.a) {\n            a += MOD;\n        }\n        a -= rhs.a;\n        return *this;\n    }\n    constexpr mint &operator*=(const mint rhs) noexcept {\n        a = a * rhs.a % MOD;\n        return *this;\n    }\n    constexpr mint operator++(int n) const noexcept {\n        return mint(*this) +=1;\n    }\n    constexpr mint operator--(int n) const noexcept {\n        return mint(*this) -=1;\n    }\n    constexpr mint &operator/=(mint rhs) noexcept {\n        u64 exp = MOD - 2;\n        while (exp) {\n            if (exp % 2) {\n                *this *= rhs;\n            }\n            rhs *= rhs;\n            exp /= 2;\n        }\n        return *this;\n    }\n};\nostream& operator<<(ostream& lhs, const mint& rhs) noexcept {\n    lhs << rhs.a;\n    return lhs;\n}\nistream& operator>>(istream& lhs, const mint& rhs) noexcept {\n    lhs >> rhs.a;\n    return lhs;\n}\ninline mint pow(mint m,lint n){\n    if(n==0)return 1;\n    else if(n%2==0){\n        mint x=pow(m,n/2);\n        return x*x;\n    }else{\n        return m*pow(m,n-1);\n    }\n}\ninline mint fact(lint a){\n    return a?fact(a-1)*a:1;\n}\nclass Comb{\n    public:\n    vector<lint> fac,ifac;\n    Comb(){\n        fac.resize(300001);\n        ifac.resize(300001);\n        fac[0] = 1;\n        ifac[0] = 1;\n        rep(i,300000){\n            fac[i+1] = fac[i]*(i+1) % MOD;\n            ifac[i+1] = ifac[i]*mpow(i+1, MOD-2) % MOD;\n        }\n    }\n    lint mpow(lint x, lint n){\n        lint ans = 1;\n        while(n != 0){\n            if(n&1) ans = ans*x % MOD;\n            x = x*x % MOD;\n            n = n >> 1;\n        }\n        return ans;\n    }\n    lint comb(lint a, lint b){\n        if(a == 0 && b == 0)return 1;\n        if(a < b || a < 0)return 0;\n        lint tmp = ifac[a-b]* ifac[b] % MOD;\n        return tmp * fac[a] % MOD;\n    }\n};\nComb c;\nmint f(lint n,lint m){\n    vector<vector<mint>> dp(n+1,vector<mint>(m,0));\n    dp[0][0]=0;\n    dp[1][0]=1;\n    repi(i,2,n+1)rep(j,m){\n        dp[i][0]+=dp[i-1][j];\n        if(j!=0)dp[i][j]=dp[i-1][j-1];\n    }\n    mint res=0;\n    for(lint i=0;n-i*m>=0;i++)rep(j,m){\n        res+=dp[n-i*m][j];\n    }\n    return res;\n}\nint main(){\n    while(1){\n        string s;\n        cin>>s;\n        if(s==\"#\")break;\n        lint cnt=1;\n        mint ans=1;\n        rep(i,s.size()-1){\n            if(s[i]==s[i+1])cnt++;\n            else {\n                lint m=5;\n                if(s[i]=='8'||s[i]=='0')m=3;\n                ans*=f(cnt,m);\n                cnt=1;\n            }\n        }\n        lint m=5;\n        if(s[s.size()-1]=='8'||s[s.size()-1]=='0')m=3;\n        ans*=f(cnt,m);\n        cout<<ans<<endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\nusing namespace std;\n\n\nvoid rec(int n,string s,int l);\n\nint cnt=0;\nmap<string,bool>m;\nint count(int n,int l)\n{\n  cnt=0;\n  m.clear();\n  rec(n,\"\",l);\n  return cnt;\n}\nvoid rec(int n,string s,int l){\n  if(m.count(s))return;\n  cnt=(cnt+1)%100000007;\n  m[s]=true;\n  for(int i=1;i<n;i++){\n    char c='0'+(i%l);\n    rec(n-i,s+c,l);\n  }\n  return;\n}\n\nint main()\n{\n  long long int ans;\n  int c,l;\n  string s;\n  int i,j;\n  while(cin>>s,s!=\"#\"){\n    ans=1;\n    c=1;\n    for(i=1;i<s.size();i++){\n      if(s[i-1]==s[i]){\n\tc++;\n      }else{\n\tif(s[i-1]=='0'||s[i-1]=='8')l=3;\n\telse l=5;\n\tans*=count(c,l);\n\tc=1;\n      }\n    }\n    if(s[s.size()-1]=='0'||s[s.size()-1]=='8')l=3;\n    else l=5;\n    if(s[s.size()-1]==s[s.size()-2])ans*=count(c,l);\n    cout<<(ans%100000007)<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\nconst ll MOD=100000007;\nconst ll INF=1000000000000LL;\nll dp[10][100001];\n\n// kindªsizeÂ±­ñÌðßÌ\nll dfs(int kind,int size){\n    int limit=5;\n    if(kind==8||kind==0)limit=3;\n    if(size==1)\n        return 1;\n    if(dp[kind][size]!=INF)\n        return dp[kind][size];\n    ll sum=1;\n    for(int i = 1; i <= min(limit,size-1); i++){\n        sum+=(dfs(kind,size-i));\n        sum%=MOD;\n    }\n    return dp[kind][size]=sum;\n}\n\nvoid solve(){\n    string str;\n    for(int i = 0; i < 10; i++)\n        fill(dp[i],dp[i]+100001,INF);\n    while(cin>>str&&str!=\"#\"){\n        char prv=str[0];\n        ll mul=1;\n        int size=0;\n        for(int i = 0; i < str.size(); i++){\n            if(str[i]!=prv){\n                mul*=dfs(prv-'0',size);\n                mul%=MOD;\n                size=1;\n                prv=str[i];\n            }\n            else if(i==str.size()-1){\n                mul*=dfs(prv-'0',size+1);\n                mul%=MOD;\n            }\n            else\n                size++;\n        }\n        cout<<mul%MOD<<endl;\n    }\n}\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <set>\n#include <iostream>\n#include <cstdio>\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n\nusing namespace std;\n\nint cnt[10] = {\n  3, 5, 5, 5, 5, 5, 5, 5, 3, 5\n};\n\nint dp[10][100 * 1000 + 1];\nchar buff[100* 1000 + 10];\nconst int mod = 100000007;\n\nint main(){\n  REP(i,10){\n    dp[i][0] = 1;\n    REP(j,100 * 1000 + 1){\n      dp[i][j+1] = dp[i][j] * 2;\n      if(j + 1 > cnt[i]) dp[i][j+1] += mod - dp[i][j-cnt[i]];\n      dp[i][j+1] %= mod;\n    }\n  }\n\n  while(scanf(\"%s\", buff), buff[0] != '#'){\n    long long ans = 1;\n    int i = 0;\n    while(isdigit(buff[i])){\n      char now = buff[i]; \n      int cc = 0;\n      while(buff[i] == now){ cc++; i++; }\n      // printf(\"cc: %d now: %c\\n\", cc, now);\n      ans = (ans * dp[now - '0'][cc - 1]) % mod;\n    }\n    cout << ans << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll M=100000007;\n\nll dp[2][100001];\n\nll f(char c,int n){ return (c=='0'||c=='8')?dp[0][n]:dp[1][n]; }\n\nint main(){\n\trep(t,2){\n\t\tint T=(t==0?3:5);\n\t\trep(i,T) dp[t][i+1]=1<<i;\n\t\tfor(int i=T;i<100000;i++) rep(j,T) dp[t][i+1]=(dp[t][i+1]+dp[t][i-j])%M;\n\t\tfor(int i=T;i<100000;i++) dp[t][i+1]=(dp[t][i+1]+dp[t][i+1-T])%M;\n\t}\n\n\tfor(char s[100001];scanf(\"%s\",s),s[0]!='#';){\n\t\tll ans=1;\n\t\tfor(int i=1,p=0;s[i-1];i++) if(s[p]!=s[i]) ans=ans*f(s[p],i-p)%M, p=i;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\nusing namespace std;\n\ntypedef vector <string> VS;\n\ntypedef long long ll;\nconst ll mod = 100000007;\nbool visited[100001][10];\nll dp[100001];\n\ntypedef pair <int, int> PII;\nmap <PII, ll> memo;\n\nVS cut( string s ) {\n    VS answer;\n    int L = s.size();\n    string part = \"\";\n    for ( int i = 0; i+1 < L; i++ ) {\n        if ( s[i] != s[i+1] ) {\n            part += s[i];\n            answer.push_back(part);\n            part = \"\";\n        } else {\n            part += s[i];\n        }\n    }\n    part += s[L-1];\n    answer.push_back(part);\n    return answer;\n}\n\nll solve( int s, int d ) {\n    if ( visited[s][d] ) return memo[PII(s,d)];\n\n    ll answer = 1;\n    for ( int i = 0; i < s; i++ ) {\n        dp[i] = 1;\n    }\n    for ( int i = 0; i < s; i++ ) {\n        ll sum = 0;\n        for ( int j = 1; j <= d && i-j >= 0; j++ ) {\n            sum = ( sum + dp[i-j] ) % mod;\n        }\n        if ( sum > 0 ) dp[i] = ( dp[i] + sum ) % mod;\n    }\n    answer = dp[s-1];\n\n    visited[s][d] = true;\n    return memo[PII(s,d)] = answer % mod;\n}\n\nint conv( char c ) {\n    if ( c == '8' || c == '0' ) return 3;\n    return 5;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        if ( input == \"#\" ) break;\n\n        VS parts = cut( input );\n        int L = parts.size();\n        ll answer = 1;\n        for ( int i = 0; i < L; i++ ) {\n            answer = ( answer * solve(parts[i].size(), conv(parts[i][0])) ) % mod;\n        }\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100000,M=100000007};long long d[N+1][2];int t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "//34\n#include<iostream>\n\nusing namespace std;\n\nconst int M=100000007;\n\nint main(){\n  int nnl[2][100001]={{}};\n  int nlp[2][100001]={{}};\n  for(int i=0;i<2;i++){\n    int s=3+i*2;\n    nnl[i][0]=nlp[i][0]=1;\n    for(int j=1;j<=100000;j++){\n      for(int k=1;k<=s;k++){\n\tif(j-k<0)break;\n\tnnl[i][j]=(nnl[i][j]+nnl[i][j-k])%M;\n      }\n      nlp[i][j]=(nnl[i][j]+((j-s<1)?0:nlp[i][j-s]))%M;\n    }\n  }\n  for(char c;cin>>c,c!='#';){\n    char p=0;\n    int cc=0;\n    long long a=1;\n    for(;;cin.get(c)){\n      if(c==p){\n\tcc++;\n      }else{\n\ta=(a*nlp[p!='8'&&p!='0'][cc])%M;\n\tp=c;\n\tcc=1;\n      }\n      if(c=='\\n')break;\n    }\n    cout<<a<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<deque>\n#include<list>\n#include<map>\n#include<queue>\n#include<set>\n#include<stack>\n#include<vector>\n#include<algorithm>\n#include<string>\n#include<sstream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nint main(){\n  int i,j;\n  int a[100004]={0,0,1,1},b[100001]={0,1,2},c[100001]={0,1,2};\n  for(i=4;i<100002;++i){\n    a[i]=(a[i-1]<<1)-a[i-4];\n    if(a[i]<0)\n      a[i]+=100000007;\n    else\n      a[i]%=100000007;\n    b[i-1]=(b[i-2]+a[i])%100000007;\n  }\n  a[2]=a[3]=0;\n  a[4]=a[5]=1;\n  for(i=6;i<100004;++i){\n    a[i]=(a[i-1]<<1)-a[i-6];\n    if(a[i]<0)\n      a[i]+=100000007;\n    else\n      a[i]%=100000007;\n    c[i-3]=(c[i-4]+a[i])%100000007;\n  }\n  char s[100001];\n  while(scanf(\"%s\",s),s[0]!='#'){\n    int ct=1;    \n    for(i=0;s[i]!='\\0';i=j){\n      for(j=i+1;s[i]==s[j];++j);\n      if((s[i]-'0')%8){\n\tct=(long long)ct*c[j-i]%100000007;\n      }else{\n\tct=(long long)ct*b[j-i]%100000007;\n      }\n    }\n    printf(\"%d\\n\",ct);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)\nconst double EPS = 1e-13;\nconst double PI  = acos(-1.0);\n\nll dp[100010][10][6];\nconst ll M=100000007;\n\nint main(){\n\tstring s;\n\twhile(cin>>s,s!=\"#\"){\n\t\tmemset(dp,0,sizeof(dp));\n\t\tREP(i,s.size()){\n\t\t\tint n=s[i]-'0';\n\t\t\tif(i==0){\n\t\t\t\tdp[i+1][n][1]=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tFOR(k,1,6){\n\t\t\t\tdp[i+1][n][k]=dp[i][n][k==1?5:k-1];\n\t\t\t}\n\t\t\tREP(j,10){\n\t\t\t\tFOR(m,1,6){\n\t\t\t\t\tdp[i+1][n][1]+=dp[i][j][m];\n\t\t\t\t\tdp[i+1][n][1]%=M;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tll ans=0;\n\t\tREP(i,10){\n\t\t\tFOR(j,1,6){\n\t\t\t\tans+=dp[s.size()][i][j];\n\t\t\t\tans%=M;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\nusing namespace std;\n\ntypedef long long ll;\n\n#define REP(i,n,m) for(int i=n;i<m;i++)\n#define rep(i,n) REP(i,0,n)\n#define MOD 100000007LL\n\nll f[2][100010];\nint idx[] = {1,0,0,0,0,0,0,0,1,0};\n\nvoid mkF(){\n  memset(f,0,sizeof(f));\n\n  REP(i,1,100001){\n    f[0][i]++;\n    rep(j,5){\n      if(i - j - 1 < 0) continue;\n      f[0][i] += f[0][i - j - 1];\n      f[0][i] %= MOD;\n    }\n\n    f[1][i]++;\n    rep(j,3){\n      if(i - j - 1 < 0) continue;\n      f[1][i] += f[1][i - j - 1];\n      f[1][i] %= MOD;\n    }\n  }\n}\n\nint main(){\n  string s;\n\n  mkF();\n\n  while(cin>>s, s != \"#\"){\n    int i = 0;\n    int n = s.length();\n    ll res = 1;\n\n    while(i < n){\n      int tmp = i;\n      while(i + 1 < n && s[i] == s[i + 1]) i++;\n      res *= f[ idx[s[i] - '0'] ][ i - tmp + 1 ];\n      res %= MOD;\n      i++;\n    }\n\n    cout<<res<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main()\n{\n  static const int N = 100000;\n  static const int M = 100000007;\n  static int dp1[N+1], dp2[N+1];\n  dp1[1] = 1;\n  dp1[2] = 2;\n  dp1[3] = 4;\n  dp1[4] = 8;\n  dp1[5] = 16;\n  for (int i = 6; i <= N; i++) {\n    dp1[i] = 1;\n    for (int j = 1; j <= 5; j++) {\n      dp1[i] = (dp1[i] + dp1[i-j]) % M;\n    }\n  }\n  dp2[1] = 1;\n  dp2[2] = 2;\n  dp2[3] = 4;\n  for (int i = 4; i <= N; i++) {\n    dp2[i] = 1;\n    for (int j = 1; j <= 3; j++) {\n      dp2[i] = (dp2[i] + dp2[i-j]) % M;\n    }\n  }\n  string s;\n  while (cin >> s && s != \"#\") {\n    const int l = s.size();\n    long long ans = 1LL;\n    for (int i = 0; i < l; i++) {\n      int k = i;\n      while (k < l && s[k] == s[i]) {\n        ++k;\n      }\n      if (s[i] == '8' || s[i] == '0') {\n        ans = (ans * dp2[k - i]) % M;\n      } else {\n        ans = (ans * dp1[k - i]) % M;\n      }\n      --k;\n      i = k;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\n#define N 100000\n#define M 100000007\n\nlong long int dp[N+2][2]={0};\n\nvoid init(){\n  int loop[2]={5,3};\n  for(int t=0;t<2;t++){\n    dp[0][t]=1;\n    dp[1][t]=1;\n    for(int i=2;i<=loop[t];i++)dp[i][t]=dp[i-1][t]*2;\n    for(int i=loop[t]+1;i<N+2;i++){\n      dp[i][t]=1;\n      for(int j=1;j<=loop[t];j++){\n\tdp[i][t]+=dp[i-j][t];\n\tdp[i][t]%=M;\n      }\n    }\n  }\n  return;\n}\n\nint main()\n{\n  string s;\n  long long int ans;\n  int i,cnt;\n  init();\n  while(cin>>s,s!=\"#\"){\n    ans=1;\n    cnt=1;\n    for(i=1;i<s.size();i++){\n      if(s[i-1]==s[i]){\n\tcnt++;\n      }else{\n\tint t;\n\tif(s[i-1]=='8'||s[i-1]=='0')t=1;\n\telse t=0;\n\tans*=dp[cnt][t];\n\tcnt=1;\n      }\n    }\n    i=s.size()-1;\n    if(s[i-1]==s[i]){\n      int t;\n      if(s[i-1]=='8'||s[i-1]=='0')t=1;\n      else t=0;\n      ans*=dp[cnt][t];\n    }\n    cout<<ans%M<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nlong long mod=100000007;\nchar str[110000];\nlong long dp1[110000];\nlong long dp2[110000];\nint main(){\n\tdp1[0]=dp2[0]=1;\n\tfor(int i=0;i<101000;i++){\n\t\tfor(int j=1;j<=5;j++)dp1[i+j]=(dp1[i+j]+dp1[i])%mod;\n\t\tfor(int j=1;j<=3;j++)dp2[i+j]=(dp2[i+j]+dp2[i])%mod;\n\t}\n\tfor(int i=4;i<101000;i++){\n\t\tif(i-5>0)dp1[i]=(dp1[i]+dp1[i-5])%mod;\n\t\tdp2[i]=(dp2[i]+dp2[i-3])%mod;\n\t}\n\twhile(1){\n\t\tscanf(\"%s\",str);\n\t\tif(str[0]=='#')return 0;\n\t\tlong long ret=1;\n\t\tint val=0;\n\t\tint now=str[0]-'0';\n\t\tfor(int i=0;str[i];i++){\n\t\t\tif(now!=str[i]-'0'){\n\t\t\t\tif(now==8||now==0)ret=ret*dp2[val]%mod;\n\t\t\t\telse ret=ret*dp1[val]%mod;\n\t\t\t\tnow=str[i]-'0';\n\t\t\t\tval=1;\n\t\t\t}else val++;\n\t\t}\n\t\tif(now==8||now==0)ret=ret*dp2[val]%mod;\n\t\telse ret=ret*dp1[val]%mod;\n\t\tprintf(\"%lld\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <map>\n#include <list>\n\nusing namespace std;\n\ntypedef pair<long long int, long long int> P;\n\nlong long int INF = 1e18;\nlong long int MOD = 1e8 + 7;\n\nint main(){\n\t\n\twhile(true){\n\t\tstring str;\n\t\tcin >> str;\n\t\tchar pre = str[0];\n\t\t\n\t\tif(pre == '#'){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tstr += \" \";\n\t\t\n\t\tint cnt = 0;\n\t\t\n\t\tvector<P> v;\n\t\t\n\t\tfor(int i = 0; i < str.size(); i++){\n\t\t\tif(str[i] == pre){\n\t\t\t\tcnt += 1;\n\t\t\t}else{\n\t\t\t\tif(pre == '8' || pre == '0'){\n\t\t\t\t\tv.push_back(make_pair(cnt, 3));\n\t\t\t\t}else{\n\t\t\t\t\tv.push_back(make_pair(cnt, 5));\n\t\t\t\t}\n\t\t\t\tcnt = 1;\n\t\t\t}\n\t\t\tpre = str[i];\n\t\t}\n\t\t\n\t\tlong long int ans = 1;\n\t\t\n\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\tint num = v[i].first;\n\t\t\tint tp = v[i].second;\n\t\t\tlong long int S = 0;\n\t\t\tlong long int DP[5] = {1};\n\t\t\t\n\t\t\tfor(int j = 1; j <= num + 1; j++){\n\t\t\t\tif((num - j) % tp == 0){\n\t\t\t\t\tfor(int k = 0; k < tp; k++){\n\t\t\t\t\t\tS += DP[k];\n\t\t\t\t\t\tS %= MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlong long int DP2[5] = {};\n\t\t\t\tfor(int k = 0; k < tp; k++){\n\t\t\t\t\tDP2[0] += DP[k];\n\t\t\t\t\tDP2[0] %= MOD;\n\t\t\t\t}\n\t\t\t\tfor(int k = 1; k < tp; k++){\n\t\t\t\t\tDP2[k] = DP[k - 1];\n\t\t\t\t\tDP2[k] %= MOD;\n\t\t\t\t}\n\t\t\t\tswap(DP, DP2);\n\t\t\t}\n\t\t\tans *= S;\n\t\t\tans %= MOD;\n\t\t}\n\t\t\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100000,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\n#define N 100000\n#define M 100000007\n\nlong long int dp[N+2][2]={0};\n\nvoid init(){\n  int loop[2]={5,3};\n  for(int t=0;t<2;t++){\n    dp[0][t]=1;\n    dp[1][t]=1;\n    for(int i=2;i<=loop[t];i++)dp[i][t]=dp[i-1][t]*2;\n    for(int i=loop[t]+1;i<N+2;i++){\n      dp[i][t]=1;\n      for(int j=1;j<=loop[t];j++){\n\tdp[i][t]+=dp[i-j][t];\n      }\n    }\n  }\n  return;\n}\n\nint main()\n{\n  string s;\n  long long int ans;\n  int i,cnt;\n  init();\n  while(cin>>s,s!=\"#\"){\n    ans=1;\n    cnt=1;\n    for(i=1;i<s.size();i++){\n      if(s[i-1]==s[i]){\n\tcnt++;\n      }else{\n\tint t;\n\tif(s[i-1]=='8'||s[i-1]=='0')t=1;\n\telse t=0;\n\tans*=dp[cnt][t];\n\tcnt=1;\n      }\n    }\n    i=s.size()-1;\n    if(s[i-1]==s[i]){\n      int t;\n      if(s[i-1]=='8'||s[i-1]=='0')t=1;\n      else t=0;\n      ans*=dp[cnt][t];\n    }\n    cout<<ans%M<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n\n#define REP(i, a, b) for (int i = int(a); i < int(b); i++)\n#ifdef _DEBUG_\n#define dump(val) cerr << __LINE__ << \":\\t\" << #val << \" = \" << (val) << endl\n#else\n#define dump(val)\n#endif\n\nusing namespace std;\n\ntypedef long long int ll;\n\ntemplate<typename T>\nvector<T> make_v(size_t a, T b) {\n    return vector<T>(a, b);\n}\n\ntemplate<typename... Ts>\nauto make_v(size_t a, Ts... ts) {\n    return vector<decltype(make_v(ts...))>(a, make_v(ts...));\n}\n\ntemplate<ll MOD = 1000000007>\nclass ModInt {\n    ll n;\n    static ModInt pow(ModInt x, ll p) {\n        if (p == 0) {\n            return 1;\n        } else if (p % 2) {\n            return x * pow(x, p - 1);\n        } else {\n            auto t = ModInt::pow(x, p / 2);\n            return t * t;\n        }\n    }\n    ModInt reverse() const {\n        return ModInt::pow(*this, MOD - 2);\n    }\n\npublic:\n    ModInt()\n        : n(0) {}\n    ModInt(ll _n)\n        : n(_n % MOD) {}\n    ModInt operator+=(const ModInt &m) {\n        n += m.n;\n        if (n >= MOD) {\n            n -= MOD;\n        }\n        return *this;\n    }\n    ModInt operator-=(const ModInt &m) {\n        n -= m.n;\n        if (n < 0) {\n            n += MOD;\n        }\n        return *this;\n    }\n    ModInt operator*=(const ModInt &m) {\n        n *= m.n;\n        if (n >= MOD) {\n            n %= MOD;\n        }\n        return *this;\n    }\n    ModInt operator/=(const ModInt &m) {\n        return n = (m.reverse() * n).n;\n    }\n\n    ModInt operator+=(const ll l) {\n        return (*this) += ModInt(l);\n    }\n    ModInt operator-=(const ll l) {\n        return (*this) -= ModInt(l);\n    }\n    ModInt operator*=(const ll l) {\n        return (*this) *= ModInt(l);\n    }\n    ModInt operator/=(const ll l) {\n        return (*this) /= ModInt(l);\n    }\n    ModInt operator+(const ModInt &m) {\n        auto t = *this;\n        return t += m;\n    }\n    ModInt operator-(const ModInt &m) {\n        auto t = *this;\n        return t -= m;\n    }\n    ModInt operator*(const ModInt &m) {\n        auto t = *this;\n        return t *= m;\n    }\n    ModInt operator/(const ModInt &m) {\n        auto t = *this;\n        return t /= m;\n    }\n    ModInt operator+(const ll l) {\n        auto t = *this;\n        return t += l;\n    }\n    ModInt operator-(const ll l) {\n        auto t = *this;\n        return t -= l;\n    }\n    ModInt operator*(const ll l) {\n        auto t = *this;\n        return t *= l;\n    }\n    ModInt operator/(const ll l) {\n        auto t = *this;\n        return t /= l;\n    }\n    ModInt operator=(const ll l) {\n        n = l % MOD;\n        if (n < 0) {\n            n += MOD;\n        }\n        return *this;\n    }\n    friend ostream &operator<<(ostream &out, const ModInt &m) {\n        out << m.n;\n        return out;\n    }\n    friend istream &operator>>(istream &in, ModInt &m) {\n        ll l;\n        in >> l;\n        m = l;\n        return in;\n    }\n};\n\nusing mint = ModInt<100000007>;\n\nint main() {\n    cin.tie(nullptr);\n    ios::sync_with_stdio(false);\n    int size = 100010;\n    vector<mint> dp1(size + 1, 1), dp2(size + 1, 1);\n    REP(i, 1, size + 1) {\n        REP(j, 1, 6) {\n            if (i - j > 0) {\n                dp1[i] += dp1[i - j];\n            }\n        }\n        REP(j, 1, 4) {\n            if (i - j > 0) {\n                dp2[i] += dp2[i - j];\n            }\n        }\n    }\n\n    string s;\n    while (cin >> s, s != \"#\") {\n        mint ans = 1;\n        s += \"#\";\n        int prev = 0;\n        REP(i, 1, s.size()) {\n            if (s[i - 1] != s[i]) {\n                if (s[prev] == '8' || s[prev] == '0') {\n                    ans *= dp2[i - prev];\n                } else {\n                    ans *= dp1[i - prev];\n                }\n                prev = i;\n            }\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define CLEAR(arr, val) memset(arr, val, sizeof(arr))\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double EPS = 1e-8;\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\nbool valid_pos(int x, int y, int w, int h) { return 0 <= x && x < w && 0 <= y && y < h; }\n\n\n\nconst int mod = 100000007;\nconst int MAX = 100000;\nvoid dpru(int* dp, int period)\n{\n\tstatic int aperi_dp[MAX + 10];\n\tfill(aperi_dp, aperi_dp + (MAX + 10), 0);\n\t// aperi_dp[i] = sum[j = i-period .. i-1](aperi_dp[i - j])\n\taperi_dp[0] = 1;\n\tfor (int i = 0; i < MAX; ++i)\n\t\tfor (int j = 1; j <= period; ++j)\n\t\t\t(aperi_dp[i + j] += aperi_dp[i]) %= mod;\n\n\tfill(dp, dp + (MAX + 10), 0);\n\t// dp[i] = aperi_dp[i] + dp[i - period]\n\t// dp[0] = 0\n\tfor (int i = 1; i <= MAX; ++i)\n\t{\n\t\t(dp[i] += aperi_dp[i]) %= mod;\n\t\t(dp[i + period] += dp[i]) %= mod;\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\n\tstatic int dp3[MAX + 100], dp5[MAX + 100];\n\tdpru(dp3, 3);\n\tdpru(dp5, 5);\n\n\tfor (string s; cin >> s, s[0] != '#'; )\n\t{\n\t\ts += '@';\n\t\tll res = 1;\n\t\tfor (int i = 0, c = 0; s[i] != '@'; ++i)\n\t\t{\n\t\t\t++c;\n\t\t\tif (s[i] != s[i + 1])\n\t\t\t{\n\t\t\t\tint* dp;\n\t\t\t\tif (s[i] == '8' || s[i] == '0')\n\t\t\t\t\tdp = dp3;\n\t\t\t\telse\n\t\t\t\t\tdp = dp5;\n\n\t\t\t\t(res *= dp[c]) %= mod;\n\t\t\t\tc = 0;\n\t\t\t}\n\t\t}\n\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nenum{N=100002,M=100000007};long long d[N+1][2],t,i,j,l[2]={3,5};main(){for(;t<2;t++){for(d[1][t]=i=1;i++<l[t];)d[i][t]=d[i-1][t]*2;for(i=l[t];i++<N;)for(d[i][t]=1,j=0;j++<l[t];)d[i][t]=(d[i][t]+d[i-j][t])%M;}for(std::string s;std::cin>>s,s!=\"#\";printf(\"%d\\n\",t))for(s+=(t=j=i=1);i<s.size();i++)s[i-1]-s[i]?(t=t*d[j][s[i-1]-56&&s[i-1]-48]%M),j=1:j++;}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define all(x) (x).begin(),(x).end()\n#define pb push_back\n#define fi first\n#define se second\n#define dbg(x) cout<<#x\" = \"<<((x))<<endl\ntemplate<class T,class U> ostream& operator<<(ostream& o, const pair<T,U> &p){o<<\"(\"<<p.fi<<\",\"<<p.se<<\")\";return o;}\ntemplate<class T> ostream& operator<<(ostream& o, const vector<T> &v){o<<\"[\";for(T t:v){o<<t<<\",\";}o<<\"]\";return o;}\n\nconst ll mod = 100000007;\n\nconst int N = 100010;\nll x[N], y[N];\n\nint main(){\n    x[0] = 1;\n    rep(i,N){\n        for(int j=1; j<=5; ++j)if(i+j<N) (x[i+j] += x[i]) %= mod;\n        if(i-5>0) (x[i] += x[i-5]) %= mod;\n    }\n    y[0] = 1;\n    rep(i,N){\n        for(int j=1; j<=3; ++j)if(i+j<N) (y[i+j] += y[i]) %= mod;\n        if(i-3>0) (y[i] += y[i-3]) %= mod;\n    }\n\n    string s;\n    while(cin >>s,(s!=\"#\")){\n        int n = s.size();\n\n        ll ans = 1;\n        int i = 0;\n        while(i<n){\n            int nx = i;\n            while(nx<n && s[nx]==s[i]) ++nx;\n\n            int w = nx-i;\n            if(s[i]=='8' || s[i]=='0') (ans *= y[w]) %= mod;\n            else (ans *= x[w]) %= mod;\n\n            i = nx;\n        }\n\n        cout << ans << \"\\n\";\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <memory.h>\n#include <queue>\n#include <cstdio>\n#include <cstdlib>\n#include <map>\n#include <cmath>\nusing namespace std;\n\n#define rep(i, n) for(int i = 0; i< n; i++)\n#define rep2(i, m, n) for(int i = m; i < n; i++)\ntypedef long long ll;\ntypedef pair<int, int> P;\nconst int INF = 1 << 29;\nconst double EPS = 1e-10;\n\nconst ll mod = 100000007;\n\nll dp1[100010];\nll dp0[100010];\nll sum0[100010];\nll sum1[100010];\n\nvoid maketable(ll *dp, ll *sum, int w){\n\n  memset(dp, 0, sizeof(dp));\n  memset(sum, 0, sizeof(sum));\n  dp[0] = 1;\n  for(int i = 1; i < 100010; i++){\n    for(int j = 1; j <= w; j++){\n      if(i - j >= 0) dp[i] = (dp[i] + dp[i-j]) % mod;\n    }\n  }\n  rep(i, 100010){\n    sum[i] = dp[i];\n    if(i > w) sum[i] = (sum[i] + sum[i-w]) % mod;\n  }\n}\n\nint main(){\n  string str;\n  maketable(dp0,sum0,3);\n  maketable(dp1,sum1,5);\n  while(cin >> str && str != \"0\"){\n    int pos = 0;\n    ll res = 1;\n    while(pos < (int)str.size()){\n      char ch = str[pos];\n      int len = 0;\n      while(pos < (int)str.size() && str[pos] == ch){\n\tpos++;\n\tlen++;\n      }\n      if(ch == '8' || ch == '0'){\n\tres = (res * sum0[len]) % mod;\n      }else{\n\tres = (res * sum1[len]) % mod;\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <cstring>\n#include <queue>\n#include <sys/time.h>\n#include <cassert>\nusing namespace std;\nstatic const double EPS = 1e-10;\ntypedef long long ll;\n#define rep(i,n) for(int i=0;i<(int)n;i++)\n#define rev(i,n) for(int i=(int)n-1;i>=0;i--)\n#define all(a) a.begin(),a.end()\n#define mp(a,b) make_pair(a,b)\n#define pb(a) push_back(a)\n#define SS stringstream\n#define bitcount(b) __builtin_popcount(b)\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n\n#define delete(a,n) a.erase(remove(all(a),n),a.end())\n#define gcd(a,b) __gcd((a),(b))\n#define lcm(a,b) ( (a)/__gcd((a),(b))*(b) )\n\ntemplate<typename T, typename S> vector<T>& operator<<(vector<T>& a, S b) { a.push_back(b); return a; }\ntemplate<typename T> void operator>>(vector<T>& a, int b) {while(b--)if(!a.empty())a.pop_back();}\nbool isprime(int n){ if(n<2)return false;  for(int i=2;i*i<=n;i++)if(n%i==0)return false;  return true;} \nll b_pow(ll x,ll n){return n ? b_pow(x*x,n/2)*(n%2?x:1) : 1ll;}\nstring itos(int n){stringstream ss;ss << n;return ss.str();}\n\nlong long dp[100030];\nlong long dp2[100030];\n\nint gen5(){\n\tdp[0] = 0;\n\tdp[1] = 1;\n\tdp[2] = 2;\n\tdp[3] = 4;\n\tdp[4] = 8;\n\tdp[5] = 16;\n\tfor(int i = 6 ; i < 100010 ; i++){\n\t\tdp[i] = (2 * dp[i-1] - dp[i-6]+100000007)%100000007;\n\t\tif(dp[i] < 0) cout << dp[i] << endl;\n\t}\n}\nint gen3(){\n\tdp2[0] = 0;\n\tdp2[1] = 1;\n\tdp2[2] = 2;\n\tdp2[3] = 4;\n\tfor(int i = 4 ; i < 100010 ; i++){\n\t\tdp2[i] = (2*dp2[i-1]-dp2[i-4]+100000007)%100000007;\n\t}\n}\nint main(int a,char *b[]){\n\n\tgen5();\n\tgen3();\n\tstring s;\n\twhile(cin >> s && s[0] != '#'){\n\t\ts += \"~\";\n\t\tlong long c = 1;\n\t\tlong long ans = 1;\n\t\tfor(int i = 1 ; i < s.size() ; i++){\n\t\t\tif(s[i] != s[i-1]){\n\t\t\t\tif(s[i-1] != '0' && s[i-1] != '8'){\n\t\t\t\t\tans = ( ans * dp[c] )  % 100000007;\n\t\t\t\t}else{\n\t\t\t\t\tans = ( ans * dp2[c])  % 100000007;\n\t\t\t\t}\n\t\t\t\tc = 1;\n\t\t\t}else{\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t\tcout << ans%100000007 << endl;\n\t}\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1082\n  Title:11224111122411\n  @kankichi573\n  2014/2/18 TLE\n*/\n#include <stdio.h>\n#include <string.h>\n#define min(x,y) (((x)<(y))?(x):(y))\n#define LIMIT 100000\n\nchar input[100001];\nlong long memo[2][LIMIT];\n\n\nint calc_max(int n)\n{\n  if(n==8 || n==0)\n    return(3);\n  else\n    return(5);\n}\nlong long bunkatu(int n,int max_val)\n{\n  long long ret;\n  int i;\n  \n  if(n<LIMIT)\n    if(max_val==5)\n      {\n      if(ret=memo[0][n])\n\treturn(ret);\n      }\n    else\n      {\n        if(ret=memo[1][n])\n\t  return(ret);\n      }\n  \n  if(n==1)\n    ret=1;\n  else if(n==2)\n    ret=2;\n  else\n    {\n      ret=1; //no divide\n      for(i=1;i<=min(max_val,n-1);i++)\n\tret += bunkatu(n-i,max_val);\n    }\n  \n  if(max_val==5)\n    memo[0][n]=ret;\n  else\n    memo[1][n]=ret;\n  \n  return(ret);\n}\nint main()\n{\n  int i;\n  long long res;\n  char prev;\n  int  cnt;\n\n    \n  (void)bunkatu(100000,5);\n  (void)bunkatu(100000,3);\n  \n  \n  \n  while(scanf(\"%s\",input) && input[0]!='#')\n    {\n      res=1;\n      cnt=1;\n      prev='\\0';\n      for(i=0;i<=strlen(input);i++)\n\t{\n\t  if(prev == input[i])\n\t    cnt++;\n\t  else\n\t    {\n\t      res *= bunkatu(cnt,calc_max(input[i-1]-'0'));\n\t      cnt = 1;\n\t    }\n\t  prev=input[i];\n\t  res %= 100000007;\n\t}\n      printf(\"%lld\\n\",res);\n    }\n  \n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\n#define MOD (100000007);\ntypedef long long ll;\n\nll dp[6][100001];\n\nll divide(char prev, int count)\n{\n    int limit;\n    ll ans;\n    \n    limit = 5;\n    \n    if (prev == '0' || prev == '8'){\n        limit = 3;\n    }\n    \n    ans = 0;\n    \n    while (count > 0){\n        ans = (ans + dp[limit][count]) % MOD;\n        count -= limit;\n    }\n    \n    return (ans);\n}\n\nint main()\n{\n\tstatic char str[100001];\n\tint i, j;\n\tint count;\n\tchar prev;\n\tll ans;\n\t\n    dp[3][0] = dp[5][0] = 1;\n    \n    for (i = 1; i <= 100000; i++){\n        for (j = 1; j <= 5; j++){\n            if (i - j >= 0){\n                dp[5][i] = (dp[5][i] + dp[5][i - j]) % MOD;\n            }\n        }\n        for (j = 1; j <= 3; j++){\n            if (i - j >= 0){\n                dp[3][i] = (dp[3][i] + dp[3][i - j]) % MOD;\n            }\n        }\n    }\n    \n\twhile (1){\n\t\tscanf(\"%s\", str);\n\t\tif (str[0] == '#'){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tans = 1;\n\t\tprev = str[0];\n\t\tcount = 1;\n\t\ti = 1;\n\t\t\n\t\twhile (str[i] != '\\0'){\n\t\t\tif (str[i] == prev){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans = (ans * divide(prev, count)) % MOD;\n\t\t\t\tprev = str[i];\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n        \n\t\tans = (ans * divide(prev, count)) % MOD;\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1082\n  Title:11224111122411\n  @kankichi573\n  2014/2/18 TLE\n*/\n#include <stdio.h>\n#include <string.h>\n#define min(x,y) (((x)<(y))?(x):(y))\n#define LIMIT 100000\n\nchar input[100001];\nlong long memo[2][LIMIT];\n\n\nint calc_max(int n)\n{\n  if(n==8 || n==0)\n    return(3);\n  else\n    return(5);\n}\nunsigned long long bunkatu(int n,int max_val)\n{\n  unsigned long long ret;\n  int i;\n  \n  if(n<LIMIT)\n    if(max_val==5)\n      {\n      if(ret=memo[0][n])\n\treturn(ret);\n      }\n    else\n      {\n        if(ret=memo[1][n])\n\t  return(ret);\n      }\n  \n  if(n==1)\n    ret=1;\n  else if(n==2)\n    ret=2;\n  else\n    {\n      ret=1; //no divide\n      for(i=1;i<=min(max_val,n-1);i++)\n\t{\n\t  ret += bunkatu(n-i,max_val);\n\t  ret %= 100000007;\n\t}\n    }\n  \n  if(max_val==5)\n    memo[0][n]=ret;\n  else\n    memo[1][n]=ret;\n  \n  return(ret);\n}\n\nint main()\n{\n  int i;\n  unsigned long long res;\n  char prev;\n  int  cnt;\n  int  len;\n\n    \n  (void)bunkatu(100000,5);\n  (void)bunkatu(100000,3);\n\n  while(scanf(\"%s\",input) && input[0]!='#')\n    {\n      res=1;\n      cnt=1;\n      prev='\\0';\n      len=strlen(input);\n      for(i=0;i<=len;i++)\n\t{\n\t  if(prev == input[i])\n\t    {\n\t      cnt++;\n\t    }\n\t  else\n\t    {\n\t      res *= bunkatu(cnt,calc_max(input[i-1]-'0'));\n\t      res %= 100000007;\n\t      cnt = 1;\n\t    }\n\t  prev=input[i];\n\t}\n      printf(\"%llu\\n\",res);\n    }\n  \n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\nstatic const int MOD = 100000007;\ntypedef __int64 ll;\n\nll dp[6][100001];\n\nll divide(char prev, int count)\n{\n    int limit;\n    ll ans;\n    \n    limit = 5;\n    \n    if (prev == '0' || prev == '8'){\n        limit = 3;\n    }\n    \n    ans = 0;\n    \n    while (count > 0){\n        ans = (ans + dp[limit][count]) % MOD;\n        count -= limit;\n    }\n    \n    return (ans);\n}\n\nint main()\n{\n\tstatic char str[100001];\n\tint i, j;\n\tint count;\n\tchar prev;\n\tll ans;\n\t\n    dp[3][0] = dp[5][0] = 1;\n    \n    for (i = 1; i <= 100000; i++){\n        for (j = 1; j <= 5; j++){\n            if (i - j >= 0){\n                dp[5][i] = (dp[5][i] + dp[5][i - j]) % MOD;\n            }\n        }\n        for (j = 1; j <= 3; j++){\n            if (i - j >= 0){\n                dp[3][i] = (dp[3][i] + dp[3][i - j]) % MOD;\n            }\n        }\n    }\n    \n\twhile (1){\n\t\tscanf(\"%s\", str);\n\t\tif (str[0] == '#'){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tans = 1;\n\t\tprev = str[0];\n\t\tcount = 1;\n\t\ti = 1;\n\t\t\n\t\twhile (str[i] != '\\0'){\n\t\t\tif (str[i] == prev){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans = (ans * divide(prev, count)) % MOD;\n\t\t\t\tprev = str[i];\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n        \n\t\tans = (ans * divide(prev, count)) % MOD;\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\n#define MOD (100000007);\ntypedef long long ll;\n\nll dp[6][100001];\n\nll divide(char prev, int count)\n{\n    int limit;\n    ll ans;\n    \n    limit = 5;\n    \n    if (prev == '0' || prev == '8'){\n        limit = 3;\n    }\n    \n    ans = 0;\n    \n    while (count > 0){\n        ans = (ans + dp[limit][count]) % MOD;\n        count -= limit;\n    }\n    \n    return (ans);\n}\n\nint main()\n{\n\tstatic char str[100001];\n\tint i, j;\n\tint count;\n\tchar prev;\n\tll ans;\n\t\n    dp[3][0] = dp[5][0] = 1;\n    \n    for (i = 1; i <= 100000; i++){\n        for (j = 1; j <= 5; j++){\n            if (i - j >= 0){\n                dp[5][i] = (dp[5][i] + dp[5][i - j]) % MOD;\n            }\n        }\n        for (j = 1; j <= 3; j++){\n            if (i - j >= 0){\n                dp[3][i] = (dp[3][i] + dp[3][i - j]) % MOD;\n            }\n        }\n    }\n    \n\twhile (1){\n\t\tscanf(\"%s\", str);\n\t\tif (str[0] == '#'){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tans = 1;\n\t\tprev = str[0];\n\t\tcount = 1;\n\t\ti = 1;\n\t\t\n\t\twhile (str[i] != '\\0'){\n\t\t\tif (str[i] == prev){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans = (ans * divide(prev, count)) % MOD;\n\t\t\t\tprev = str[i];\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n        \n\t\tans = (ans * divide(prev, count)) % MOD;\n\t\tprintf(\"%I64d\\n\", ans);\n\t}\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1082\n  Title:11224111122411\n  @kankichi573\n*/\n#include <stdio.h>\n#include <string.h>\n#define min(x,y) (((x)<(y))?(x):(y))\n\nchar input[100001];\n\nint calc_max(int n)\n{\n  if(n==8 || n==0)\n    return(3);\n  else\n    return(5);\n}\nlong long bunkatu(int n,int max_val)\n{\n  long long ret;\n  int i;\n\n  if(n==1)\n    return(1);\n  if(n==2)\n    return(2);\n  ret=1; //no divide\n  for(i=1;i<=min(max_val,n-1);i++)\n    ret += bunkatu(n-i,max_val);\n  return(ret);\n}\nint main()\n{\n  int i;\n  long long res;\n  char prev;\n  int  cnt;\n  /*\n  printf(\"%lld\\n\",bunkatu(1,5));\n  printf(\"%lld\\n\",bunkatu(2,5));\n  printf(\"%lld\\n\",bunkatu(3,5));\n  printf(\"%lld\\n\",bunkatu(4,5));\n  printf(\"%lld\\n\",bunkatu(5,5));\n  printf(\"%lld\\n\",bunkatu(6,5));\n  */\n  \n  while(scanf(\"%s\",input) && input[0]!='#')\n    {\n      res=1;\n      cnt=1;\n      prev='\\0';\n      for(i=0;i<=strlen(input);i++)\n\t{\n\t  if(prev == input[i])\n\t    cnt++;\n\t  else\n\t    {\n\t      res *= bunkatu(cnt,calc_max(input[i-1]-'0'));\n\t      cnt = 1;\n\t    }\n\t  prev=input[i];\n\t  res %= 100000007;\n\t}\n      printf(\"%lld\\n\",res);\n    }\n  \n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1082\n  Title:11224111122411\n  @kankichi573\n  2014/2/18 TLE\n*/\n#include <stdio.h>\n#include <string.h>\n#define min(x,y) (((x)<(y))?(x):(y))\n#define LIMIT 100000\n\nchar input[100001];\nlong long memo[2][LIMIT];\n\n\nint calc_max(int n)\n{\n  if(n==8 || n==0)\n    return(3);\n  else\n    return(5);\n}\nlong long bunkatu(int n,int max_val)\n{\n  long long ret;\n  int i;\n  \n  if(n<LIMIT)\n    if(max_val==5)\n      {\n      if(ret=memo[0][n])\n\treturn(ret);\n      }\n    else\n      {\n        if(ret=memo[1][n])\n\t  return(ret);\n      }\n  \n  if(n==1)\n    ret=1;\n  else if(n==2)\n    ret=2;\n  else\n    {\n      ret=1; //no divide\n      for(i=1;i<=min(max_val,n-1);i++)\n\tret += bunkatu(n-i,max_val);\n    }\n  \n  if(max_val==5)\n    memo[0][n]=ret;\n  else\n    memo[1][n]=ret;\n  \n  return(ret);\n}\nint main()\n{\n  int i;\n  long long res;\n  char prev;\n  int  cnt;\n\n  (void)bunkatu(1000,5);\n  (void)bunkatu(1000,3);\n  /*\n  printf(\"%lld\\n\",bunkatu(1,5));\n  printf(\"%lld\\n\",bunkatu(2,5));\n  printf(\"%lld\\n\",bunkatu(3,5));\n  printf(\"%lld\\n\",bunkatu(4,5));\n  printf(\"%lld\\n\",bunkatu(5,5));\n  printf(\"%lld\\n\",bunkatu(6,5));\n  */\n  \n  while(scanf(\"%s\",input) && input[0]!='#')\n    {\n      res=1;\n      cnt=1;\n      prev='\\0';\n      for(i=0;i<=strlen(input);i++)\n\t{\n\t  if(prev == input[i])\n\t    cnt++;\n\t  else\n\t    {\n\t      res *= bunkatu(cnt,calc_max(input[i-1]-'0'));\n\t      cnt = 1;\n\t    }\n\t  prev=input[i];\n\t  res %= 100000007;\n\t}\n      printf(\"%lld\\n\",res);\n    }\n  \n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 1082: 11224111122411\n// 2017.11.1 bal4u@uu\n\n#include <stdio.h>\n\n#define N 100000\n#define M 100000007\n\nint a[N+2] = {0,1,2,4,8,16};\nint b[N+2] = {0,1,2,4};\n\nchar buf[N+2], *p, *q;\n\nint main()\n{\n\tint i, j;\n\tlong long ans;\n\n\tfor (i = 6; i <= N; i++) {\n\t\tfor (a[i] = 1, j = 1; j < 6; j++) a[i] = (a[i] + a[i-j]) % M;\n\t}\n\tfor (i = 4; i <= N; i++) {\n\t\tfor (b[i] = 1, j = 1; j < 4; j++) b[i] = (b[i] + b[i-j]) % M;\n\t}\n\twhile (fgets(buf, sizeof(buf), stdin) && *buf != '#') {\n\t\tans = 1;\n\t\tp = buf; while (*p >= '0') {\n\t\t\tq = p; while (*q >= '0' && *q == *p) q++;\n\t\t\tif (*p == '8' || *p == '0') ans = (ans * b[q-p]) % M;\n\t\t\telse\t\t\t\t\t\tans = (ans * a[q-p]) % M;\n\t\t\tp = q;\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1082\n  Title:11224111122411\n  @kankichi573\n  2014/2/18 TLE\n*/\n#include <stdio.h>\n#include <string.h>\n#define min(x,y) (((x)<(y))?(x):(y))\n#define LIMIT 100000\n\nchar input[100001];\nlong long memo[2][LIMIT];\n\n\nint calc_max(int n)\n{\n  if(n==8 || n==0)\n    return(3);\n  else\n    return(5);\n}\nunsigned long long bunkatu(int n,int max_val)\n{\n  unsigned long long ret;\n  int i;\n  \n  if(n<LIMIT)\n    if(max_val==5)\n      {\n      if(ret=memo[0][n])\n\treturn(ret);\n      }\n    else\n      {\n        if(ret=memo[1][n])\n\t  return(ret);\n      }\n  \n  if(n==1)\n    ret=1;\n  else if(n==2)\n    ret=2;\n  else\n    {\n      ret=1; //no divide\n      for(i=1;i<=min(max_val,n-1);i++)\n\tret += bunkatu(n-i,max_val);\n    }\n  \n  if(max_val==5)\n    memo[0][n]=ret;\n  else\n    memo[1][n]=ret;\n  \n  return(ret);\n}\n\nint main()\n{\n  int i;\n  unsigned long long res;\n  char prev;\n  int  cnt;\n  int  len;\n\n    \n  (void)bunkatu(100000,5);\n  (void)bunkatu(100000,3);\n\n  while(scanf(\"%s\",input) && input[0]!='#')\n    {\n      res=1;\n      cnt=1;\n      prev='\\0';\n      len=strlen(input);\n      for(i=0;i<=len;i++)\n\t{\n\t  if(prev == input[i])\n\t    {\n\t      cnt++;\n\t    }\n\t  else\n\t    {\n\t      res *= bunkatu(cnt,calc_max(input[i-1]-'0'));\n\t      res %= 100000007;\n\t      cnt = 1;\n\t    }\n\t  prev=input[i];\n\t}\n      printf(\"%llu\\n\",res);\n    }\n  \n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1082\n  Title:11224111122411\n  @kankichi573\n  2014/2/18 TLE\n*/\n#include <stdio.h>\n#include <string.h>\n#define min(x,y) (((x)<(y))?(x):(y))\n#define LIMIT 10000\n\nchar input[100001];\nlong long memo[2][LIMIT];\n\n\nint calc_max(int n)\n{\n  if(n==8 || n==0)\n    return(3);\n  else\n    return(5);\n}\nlong long bunkatu(int n,int max_val)\n{\n  long long ret;\n  int i;\n  \n  if(n<LIMIT)\n    if(max_val==5)\n      {\n      if(ret=memo[0][n])\n\treturn(ret);\n      }\n    else\n      {\n        if(ret=memo[1][n])\n\t  return(ret);\n      }\n  \n  if(n==1)\n    ret=1;\n  else if(n==2)\n    ret=2;\n  else\n    {\n      ret=1; //no divide\n      for(i=1;i<=min(max_val,n-1);i++)\n\tret += bunkatu(n-i,max_val);\n    }\n  \n  if(max_val==5)\n    memo[0][n]=ret;\n  else\n    memo[1][n]=ret;\n  \n  return(ret);\n}\nint main()\n{\n  int i;\n  long long res;\n  char prev;\n  int  cnt;\n  /*\n  printf(\"%lld\\n\",bunkatu(1,5));\n  printf(\"%lld\\n\",bunkatu(2,5));\n  printf(\"%lld\\n\",bunkatu(3,5));\n  printf(\"%lld\\n\",bunkatu(4,5));\n  printf(\"%lld\\n\",bunkatu(5,5));\n  printf(\"%lld\\n\",bunkatu(6,5));\n  */\n  \n  while(scanf(\"%s\",input) && input[0]!='#')\n    {\n      res=1;\n      cnt=1;\n      prev='\\0';\n      for(i=0;i<=strlen(input);i++)\n\t{\n\t  if(prev == input[i])\n\t    cnt++;\n\t  else\n\t    {\n\t      res *= bunkatu(cnt,calc_max(input[i-1]-'0'));\n\t      cnt = 1;\n\t    }\n\t  prev=input[i];\n\t  res %= 100000007;\n\t}\n      printf(\"%lld\\n\",res);\n    }\n  \n  return(0);\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\n// 11224111122411\n// 2012/12/04\npublic class Main{\n\tScanner sc=new Scanner(System.in);\n\n\tvoid run(){\n\t\tlong mod=100000007;\n\t\tfor(;;){\n\t\t\tString s=sc.next();\n\t\t\tif(s.equals(\"#\")){\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint pm=-1;\n\t\t\tlong res=1;\n\t\t\tlong[] dp={1}, dp2=null;\n\t\t\tint n=1;\n\t\t\ts+=\"#\";\n\t\t\tint k=0;\n\t\t\tfor(char c : s.toCharArray()){\n\t\t\t\tint m=c-'0';\n\t\t\t\tif(m==pm){\n\t\t\t\t\tk++;\n\t\t\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\t\t\tdp2[i]=dp[i];\n\t\t\t\t\t}\n\t\t\t\t\tfill(dp, 0);\n\t\t\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\t\t\tif(i==n-1){\n\t\t\t\t\t\t\tif(k%n==0)\n\t\t\t\t\t\t\t\tdp[0]+=1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdp[i+1]+=dp2[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdp[0]+=dp2[i];\n\t\t\t\t\t}\n\t\t\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\t\t\tdp[i]%=mod;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tlong mul=0;\n\t\t\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\t\t\tmul+=dp[i];\n\t\t\t\t\t}\n\t\t\t\t\tres=res*mul%mod;\n\t\t\t\t\tif(m==8||m==0){\n\t\t\t\t\t\tn=3;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tn=5;\n\t\t\t\t\t}\n\t\t\t\t\tdp=new long[n];\n\t\t\t\t\tdp2=new long[n];\n\t\t\t\t\tdp[0]=1;\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t\tpm=m;\n\t\t\t\tif(c=='#'){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintln(((int)res)+\"\");\n\t\t}\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic String line;\n\tstatic final int MOD = 100000007;\n\n\tstatic long solve(int len, int loop) {\n\t\tlong ret = 0;\n\t\tlong[] dp = new long[len + 1];\n\t\tdp[0] = 1;\n\t\tfor (int i = 1; i <= len; ++i) {\n\t\t\tfor (int j = 1; j <= Math.min(loop, i); ++j) {\n\t\t\t\tdp[i] += dp[i - j];\n\t\t\t}\n\t\t\tdp[i] %= MOD;\n\t\t\tif ((len - i) % loop == 0) {\n\t\t\t\tret += dp[i];\n\t\t\t\tret %= MOD;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tstatic int solve() {\n\t\tlong ans = 1;\n\t\tint prev = 0;\n\t\tfor (int i = 1; i < line.length(); ++i) {\n\t\t\tif (line.charAt(i) != line.charAt(i - 1)) {\n\t\t\t\tans *= solve(i - prev, loop(line.charAt(prev)));\n\t\t\t\tans %= MOD;\n\t\t\t\tprev = i;\n\t\t\t}\n\t\t}\n\t\tans *= solve(line.length() - prev, loop(line.charAt(prev)));\n\t\tans %= MOD;\n\t\treturn (int) ans;\n\t}\n\n\tstatic int loop(char c) {\n\t\treturn c == '8' || c == '0' ? 3 : 5;\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\twhile (true) {\n\t\t\tline = sc.next();\n\t\t\tif (line.equals(\"#\")) break;\n\t\t\tSystem.out.println(solve());\n\t\t}\n\t}\n}"
  },
  {
    "language": "Ruby",
    "code": "### constant\n\nMAX_N = 100000\nMOD = 100000007\n\nKEYS = [3, 5, 5, 5, 5, 5, 5, 5, 3, 5]\n\n### main\n\ndp5 = [0]\n(1..5).each{|i| dp5[i] = 1 << (i - 1)}\n\nfor i in (6..MAX_N)\n  d5 = 1\n  for j in (1..5)\n    d5 = (d5 + dp5[i - j]) % MOD\n  end\n  dp5[i] = d5\nend\n\ndp3 = [0]\n(1..3).each{|i| dp3[i] = 1 << (i - 1)}\n\nfor i in (4..MAX_N)\n  d3 = 1\n  for j in (1..3)\n    d3 = (d3 + dp3[i - j]) % MOD\n  end\n  dp3[i] = d3\nend\n\nloop do\n  line = gets.strip\n  break if line == '#'\n\n  count = 1\n  i = 0\n\n  while ! line[i].nil?\n    ch = line[i]\n    len = 1\n\n    while ch == line[i + len]\n      len += 1\n    end\n\n    dp = (KEYS[ch.to_i] == 5) ? dp5[len] : dp3[len]\n    count = (count * dp) % MOD\n\n    i += len\n  end\n\n  puts count\nend"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.functional;\nimport std.string;\nimport std.algorithm;\n\nconst C = 100000007;\n\nlong count(string s) {\n    auto r = new long[s.length];\n    r[$ - 1] = 1;\n    for (long i = s.length - 2; i >= 0; i--) {\n        if (s[i] == s[i + 1]) {\n            r[i] = r[i + 1] + 1;\n        } else {\n            r[i] = 1;\n        }\n    }\n    long[][] dp = new long[][](2, s.length + 1);\n    void initDP(int d) {\n        long[] cdp = dp[d == 3];\n        long length = s.length;\n        for (int i = 1; i <= min(d, length); i++) cdp[i] = 1;\n        for (int i = 2; i <= length; i++) {\n            for (int j = 1; j <= d; j++) {\n                if (i - j >= 1) {\n                    cdp[i] += cdp[i - j];\n                }\n            }\n        }\n    }\n    initDP(3);\n    initDP(5);\n    long[] cacheF = new long[s.length];\n    int i = 0;\n    long ans = 1;\n    while (true) {\n        if (i == s.length) break;\n        long c = 0;\n        int d = (s[i] == '0' || s[i] == '8') ? 3 : 5;\n        for (long x = 0; x < r[i]; x += d) {\n            c = (c + dp[d == 3][r[i] - x]) % C;\n        }\n        ans = ans * c % C;\n        i += r[i];\n    }\n    return ans;\n}\n\nvoid main() {\n    string s;\n    while (s = stdin.readln.chomp, s != \"#\") {\n        //writeln(s, \" \", count(s));\n        count(s).writeln;\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.functional;\nimport std.string;\nimport std.algorithm;\n\nconst C = 100000007;\n\nlong count(string s) {\n    auto r = new long[s.length];\n    r[$ - 1] = 1;\n    for (long i = s.length - 2; i >= 0; i--) {\n        if (s[i] == s[i + 1]) {\n            r[i] = r[i + 1] + 1;\n        } else {\n            r[i] = 1;\n        }\n    }\n    long[][] dp = new long[][](2, s.length + 1);\n    void initDP(int d) {\n        long[] cdp = dp[d == 3];\n        long length = s.length;\n        for (int i = 1; i <= min(d, length); i++) cdp[i] = 1;\n        for (int i = 2; i <= length; i++) {\n            for (int j = 1; j <= d; j++) {\n                if (i - j >= 1) {\n                    cdp[i] = (cdp[i] + cdp[i - j]) % C;\n                }\n            }\n        }\n    }\n    initDP(3);\n    initDP(5);\n    int i = 0;\n    long ans = 1;\n    while (true) {\n        if (i == s.length) break;\n        long c = 0;\n        int d = (s[i] == '0' || s[i] == '8') ? 3 : 5;\n        for (long x = 0; x < r[i]; x += d) {\n            c = (c + dp[d == 3][r[i] - x]) % C;\n        }\n        ans = ans * c % C;\n        i += r[i];\n    }\n    return ans;\n}\n\nvoid main() {\n    string s;\n    while (s = stdin.readln.chomp, s != \"#\") {\n        //writeln(s, \" \", count(s));\n        count(s).writeln;\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.string;\nimport std.algorithm;\n\nconst C = 100000007;\n\nlong count(string s) {\n    auto r = new long[s.length];\n    r[$ - 1] = 1;\n    for (long i = s.length - 2; i >= 0; i--) {\n        if (s[i] == s[i + 1]) {\n            r[i] = r[i + 1] + 1;\n        } else {\n            r[i] = 1;\n        }\n    }\n    long g(long i) {\n        if (i == s.length) return 1;\n        long d = (s[i] == '0' || s[i] == '8') ? 3 : 5;\n        long ans = 0;\n        for (long x = 1; x <= min(d, r[i]); x++) {\n            if (x == r[i]) ans = (ans + 1) % C;\n            else           ans = (ans + g(i + x)) % C;\n        }\n        return ans;\n    }\n    long f(long i) {\n        if (i == s.length) return 1;\n        long c = 0;\n        long d = (s[i] == '0' || s[i] == '8') ? 3 : 5;\n        for (long x = 0; x < r[i]; x += d) {\n            //writeln(\"call: \", i, \" \", x);\n            c = (c + g(i + x)) % C;\n        }\n        long ans = c * f(i + r[i]) % C;\n        return ans;\n    }\n    return f(0);\n}\n\nvoid main() {\n    string s;\n    while (s = stdin.readln.chomp, s != \"#\") {\n        //writeln(s, \" \", count(s));\n        count(s).writeln;\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.string;\nimport std.algorithm;\n\nconst C = 100000007;\n\nlong count(string s) {\n    auto r = new long[s.length];\n    r[$ - 1] = 1;\n    for (long i = s.length - 2; i >= 0; i--) {\n        if (s[i] == s[i + 1]) {\n            r[i] = r[i + 1] + 1;\n        } else {\n            r[i] = 1;\n        }\n    }\n    long[] cacheG = new long[s.length];\n    long g(long i) {\n        if (i == s.length) return 1;\n        if (cacheG[i] > 0) return cacheG[i];\n        long d = (s[i] == '0' || s[i] == '8') ? 3 : 5;\n        long ans = 0;\n        for (long x = 1; x <= min(d, r[i]); x++) {\n            if (x == r[i]) ans = (ans + 1) % C;\n            else           ans = (ans + g(i + x)) % C;\n        }\n        return cacheG[i] = ans;\n    }\n    long[] cacheF = new long[s.length];\n    long f(long i) {\n        if (i == s.length) return 1;\n        if (cacheF[i] > 0) return cacheF[i];\n        long c = 0;\n        long d = (s[i] == '0' || s[i] == '8') ? 3 : 5;\n        for (long x = 0; x < r[i]; x += d) {\n            c = (c + g(i + x)) % C;\n        }\n        long ans = c * f(i + r[i]) % C;\n        return cacheF[i] = ans;\n    }\n    return f(0);\n}\n\nvoid main() {\n    string s;\n    while (s = stdin.readln.chomp, s != \"#\") {\n        //writeln(s, \" \", count(s));\n        count(s).writeln;\n    }\n}"
  },
  {
    "language": "Python",
    "code": "def f3(n):\n    a=b=c=0\n    for _ in range(n):\n        a,b,c=a+b+c+1,a,b\n    return a\n    \ndef f5(n):\n    a=b=c=d=e=0\n    for _ in range(n):\n        a,b,c,d,e=a+b+c+d+e+1,a,b,c,d\n    return a\n\nwhile 1:\n    s=input()\n    if s==\"#\":break\n    ans=1\n    num=\"_\"\n    cnt=1\n    for n in s+\"_\":\n        if n==num:\n            cnt+=1\n        else:\n            if num in \"80\":\n                ans*=f3(cnt)\n            else:\n                ans*=f5(cnt)\n            num=n\n            cnt=1\n    print(ans%100000007)\n                \n            \n        \n        \n"
  },
  {
    "language": "Python",
    "code": "def f3(n):\n    a=b=c=0\n    for _ in range(n):\n        a,b,c=(a+b+c+1)%100000007,a,b\n    return a\n    \ndef f5(n):\n    a=b=c=d=e=0\n    for _ in range(n):\n        a,b,c,d,e=(a+b+c+d+e+1)%100000007,a,b,c,d\n    return a\n\nwhile 1:\n    s=input()\n    if s==\"#\":break\n    ans=1\n    num=\"_\"\n    cnt=1\n    for n in s+\"_\":\n        if n==num:\n            cnt+=1\n        else:\n            if num in \"80\":\n                ans=ans*f3(cnt)%100000007\n            else:\n                ans=ans*f5(cnt)%100000007\n            num=n\n            cnt=1\n    print(ans)\n"
  },
  {
    "language": "Python",
    "code": "def f3(n):\n    a=b=c=0\n    for _ in range(n):\n        a,b,c=(a+b+c+1)%100000007,a,b\n    return a\n    \ndef f5(n):\n    a=b=c=d=e=0\n    for _ in range(n):\n        a,b,c,d,e=(a+b+c+d+e+1)%100000007,a,b,c,d\n    return a\n\nwhile 1:\n    s=input()\n    if s==\"#\":break\n    ans=1\n    num=\"_\"\n    cnt=1\n    for n in s+\"_\":\n        if n==num:\n            cnt+=1\n        else:\n            if num in \"80\":\n                ans*=f3(cnt)\n            else:\n                ans*=f5(cnt)\n            num=n\n            cnt=1\n    print(ans)\n"
  }
]