[
  {
    "language": "Scala",
    "code": "import scala.annotation.tailrec\nimport scala.collection.mutable\nobject Main extends App {\n  import scala.io.StdIn._\n  val forward = \"\"\"FORWARD (\\d+)\"\"\".r\n  val backward = \"\"\"BACKWARD (\\d+)\"\"\".r\n  val left = \"\"\"LEFT\"\"\".r\n  val right = \"\"\"RIGHT\"\"\".r\n  val stop = \"\"\"STOP\"\"\".r\n  loop()\n  @tailrec def loop(): Unit = {\n    val Array(w, h) = readLine.trim.split(' ').map(_.toInt)\n    if (w == 0 && h == 0) return\n    val area = Area(w, h)\n    val state = executeCommand(Continue(Robot()), area)\n    println(s\"${state.coordinate.x} ${state.coordinate.y}\")\n    loop()\n  }\n  @tailrec def executeCommand(robot: WithState[Robot], area: Area): Robot = {\n    readLine.trim match {\n      case forward(k) ⇒\n        executeCommand((0 until k.toInt).foldLeft(robot){case (robot, _) ⇒ robot.tryToContinue(_.forward){r ⇒ area.contains(r.coordinate)}}.toContinue, area)\n      case backward(k) ⇒\n        executeCommand((0 until k.toInt).foldLeft(robot){case (robot, _) ⇒ robot.tryToContinue(_.backward){r ⇒ area.contains(r.coordinate)}}.toContinue, area)\n      case right() ⇒\n        executeCommand(robot.map(_.right), area)\n      case left() ⇒\n        executeCommand(robot.map(_.left), area)\n      case stop() ⇒\n        robot.fold(identity, identity)\n    }\n  }\n\n}\nsealed trait WithState[+T] {\n  def alternative[T2 >: T](alt: ⇒ WithState[T2]): WithState[T2]\n  def filterToFail(predicate: T ⇒ Boolean): WithState[T]\n  def fold[R, R1 <: R, R2 <: R](forContinue: T ⇒ R1, forStop: T ⇒ R2): R\n  def map[T2 >: T](transformer: T ⇒ T2): WithState[T2]\n  def tryToContinue[T2 >: T](successor: T ⇒ T2)(predicate: T2 ⇒ Boolean): WithState[T2]\n  def toContinue: WithState[T]\n}\ncase class Continue[+T](state: T) extends WithState[T] {\n  override def alternative[T2 >: T](alt: ⇒ WithState[T2]): WithState[T2] = this\n\n  override def filterToFail(predicate: T ⇒ Boolean): WithState[T] = if (predicate(state)) this else Stop(state)\n\n  override def fold[R, R1 <: R, R2 <: R](forContinue: T ⇒ R1, forStop: T ⇒ R2): R = forContinue(state)\n\n  override def map[T2 >: T](transformer: T ⇒ T2): WithState[T2] = Continue(transformer(state))\n\n  override def tryToContinue[T2 >: T](successor: T ⇒ T2)(predicate: T2 ⇒ Boolean): WithState[T2] = map(successor).filterToFail(predicate).alternative(Stop(state))\n\n  override def toContinue: WithState[T] = this\n}\ncase class Stop[+T](state: T) extends WithState[T] {\n  override def alternative[T2 >: T](alt: ⇒ WithState[T2]): WithState[T2] = alt\n\n  override def filterToFail(predicate: T ⇒ Boolean): WithState[T] = this\n\n  override def fold[R, R1 <: R, R2 <: R](forContinue: T ⇒ R1, forStop: T ⇒ R2): R = forStop(state)\n\n  override def map[T2 >: T](transformer: T ⇒ T2): WithState[T2] = this\n\n  override def tryToContinue[T2 >: T](successor: T ⇒ T2)(predicate: T2 ⇒ Boolean): WithState[T2] = this\n\n  override def toContinue: WithState[T] = Continue(state)\n}\ncase class Robot(coordinate: Coordinate = Coordinate(1, 1), direction: Direction = North) {\n  def forward: Robot = Robot(coordinate.move(direction), direction)\n  def backward: Robot = Robot(coordinate.move(direction.back), direction)\n  def right: Robot = Robot(coordinate, direction.rotateRight)\n  def left: Robot = Robot(coordinate, direction.rotateLeft)\n}\ncase class Area(width: Int, height: Int) {\n  def contains(coordinate: Coordinate): Boolean = (1 to width).contains(coordinate.x) && (1 to height).contains(coordinate.y)\n}\ncase class Coordinate(x: Int, y: Int) {\n  def +(that: Coordinate): Coordinate = Coordinate(x + that.x, y + that.y)\n  def move(direction: Direction): Coordinate = this + direction.toRelationalCoordinate\n}\nsealed trait Direction {\n  def toRelationalCoordinate: Coordinate = {\n    this match {\n      case North ⇒ Coordinate(0, 1)\n      case East ⇒ Coordinate(1, 0)\n      case South ⇒ Coordinate(0, -1)\n      case West ⇒ Coordinate(-1, 0)\n    }\n  }\n  def rotateRight: Direction = {\n    this match {\n      case North ⇒ East\n      case East ⇒ South\n      case South ⇒ West\n      case West ⇒ North\n    }\n  }\n  def rotateLeft: Direction = {\n    this match {\n      case North ⇒ West\n      case East ⇒ North\n      case South ⇒ East\n      case West ⇒ South\n    }\n  }\n  def back: Direction = rotateRight.rotateRight\n}\nobject North extends Direction\nobject East extends Direction\nobject South extends Direction\nobject West extends Direction\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdlib.h>\n\nusing namespace std;\n\nint m,n;\nint direction=0;// 0:north, 1:east, 2:south, 3:west\nint sign[4] = { 1,1,-1,-1 };\n\nint main(){\n  string cmd, arg;\n  int x,y,i;\n\n  while ( 1 ){\n    cin >> m >> n;\n    if( !m&&!n ) break;\n    x=1; y=1;\n    while( 1 ){\n      cin >> cmd;\n      if( cmd==\"FORWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction%2 ==0 ){\n\t  y += sign[direction] * nn;\n\t}else{\n\t  x += sign[direction] * nn;\n\t}\n      }else if( cmd==\"BACKWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction%2 ==0 ){\n\t  y -= sign[direction] * nn;\n\t}else{\n\t  x -= sign[direction] * nn;\n\t}\n      }else if( cmd==\"RIGHT\" ){\n\tdirection = (direction+1) % 4;\n      }else if( cmd==\"LEFT\" ){\n\tdirection = (direction+3) % 4;\n      }else { // stop\n\tbreak;\n      }\n      if( x<1 ) x=1;\n      else if( x>m ) x=m;\n      if( y<1 ) y=1;\n      else if( y>n ) y=n;\n    }\n    cout << x << \" \"<<y<< endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint main(){\n\n\tint w,h;\n\twhile(cin>>w>>h&&!(w==0&&h==0)){\n\t\tvector<string> orders;\n\t\tstring str;\n\t\tgetline(cin,str);\n\t\twhile(1){\n\t\t\tgetline(cin,str);\n\t\t\torders.push_back(str);\n\t\t\tif(str==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint cy=0;\n\t\tint cx=0;\n\t\t// 0:up,1:right,2:down,3:left\n\t\tint angle=0;\n\t\tfor(int i = 0; i < orders.size(); i++){\n\t\t\tif(orders[i].substr(0,7)==\"FORWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==0)\n\t\t\t\t\tcy+=atoi(orders[i].substr(7).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx+=atoi(orders[i].substr(7).c_str());\n\t\t\t\telse if(angle==2)\n\t\t\t\t\tcy-=atoi(orders[i].substr(7).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx-=atoi(orders[i].substr(7).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcx=px;\n\t\t\t\t\tcy=py;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"RIGHT\"){\n\t\t\t\tangle++;\n\t\t\t\tangle%=4;\n\t\t\t}\n\t\t\telse if(orders[i]==\"LEFT\"){\n\t\t\t\tangle--;\n\t\t\t\tangle=(angle+4)%4;\n\t\t\t}\n\t\t\telse if(orders[i].substr(0,8)==\"BACKWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==2)\n\t\t\t\t\tcy+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==0)\n\t\t\t\t\tcy-=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx-=atoi(orders[i].substr(8).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcx=px;\n\t\t\t\t\tcy=py;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout<<cx+1<<\" \"<<cy+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n\nusing namespace std;\n\ntypedef struct{\n  int x;\n  int y;\n}Point;\n\nPoint now;\nint max_x, max_y;\nint dir;\nint mx[4] = {0,1,0,-1};\nint my[4] = {1,0,-1,0};\n\nvoid change(string in){\n  if(in[0] == 'R'){\n    if(dir == 3) dir = 0;\n    else dir++;\n  }else{\n    if(dir == 0) dir = 3;\n    else dir--;\n  }\n}\n\nvoid move(string s,int num){\n  if(s[0] == 'F'){\n    for(int i = 0; i < num; i++){\n      if(now.x+mx[dir] > max_x || now.x+mx[dir] <= 0 ||\n\t now.y+my[dir] > max_y || now.y+my[dir] <= 0) return;\n      now.x += mx[dir];\n      now.y += my[dir];\n    } \n  }else{\n    for(int i = 0; i < num; i++){\n      if(now.x-mx[dir] > max_x || now.x-mx[dir] <= 0 ||\n\t now.y-my[dir] > max_y || now.y-my[dir] <= 0) return;\n      now.x -= mx[dir];\n      now.y -= my[dir];\n    } \n  }\n}\n\nint main(){\n  while(cin >> max_x >> max_y && max_x+ max_y){\n    dir = 0;\n    now.x = now.y = 1;\n    while(1){\n      string s;  int pos;\n      cin >> s;\n      if(s == \"STOP\") break;\n      if(s == \"RIGHT\"|| s == \"LEFT\") change(s);\n      else {\n\tcin >> pos;\n\tmove(s,pos);\n      }\n    }\n    cout << now.x << \" \" << now.y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={0,1,0,-1};\nconst int dy[]={-1,0,1,0};\n//int board[120][120];\nint main(){\n\tint n,m;\n\twhile(cin>>m>>n,n||m){\n\t\tint dir =0;\n\t\tint posx,posy;\n\t\tposx =posy=1;\n\t\t//memset(board, 0, sizeof(board));\n\t\tint nx,ny;\n\t\tnx=ny=1;\n\t\twhile(true){\n\t\t\t//cout <<dir<<\" \"<<posx<<\" \"<<posy<<endl;\n\t\t\tstring str;\n\t\t\tcin>>str;\n\t\t\tif(str==\"FORWARD\"){\n\t\t\t\tint d;\n\t\t\t\tcin>>d;\n\t\t\t\tif(dir==0){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =min(posy+d,n); \n\t\t\t\t}else if(dir==1){\n\t\t\t\t\tnx =min(posx+d,m);\n\t\t\t\t\tny =posy;\n\t\t\t\t}else if(dir==2){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =max(posy-d,1);\n\t\t\t\t}else if(dir==3){\n\t\t\t\t\tnx =max(posx-d,1);\n\t\t\t\t\tny =posy;\n\t\t\t\t}\n\t\t\t}else if(str==\"BACKWARD\"){\n\t\t\t\tint d;\n\t\t\t\tcin>>d;\n\t\t\t\tif(dir==0){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =max(posy-d,1); \n\t\t\t\t}else if(dir==1){\n\t\t\t\t\tnx =max(posx-d,1);\n\t\t\t\t\tny =posy;\n\t\t\t\t}else if(dir==2){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =min(posy+d,n);\n\t\t\t\t}else if(dir==3){\n\t\t\t\t\tnx =min(posx+d,m);\n\t\t\t\t\tny =posy;\n\t\t\t\t}\n\t\t\t}else if(str==\"RIGHT\"){\n\t\t\t\tdir =(dir+1)%4;\n\t\t\t\tnx =posx;\n\t\t\t\tny =posy;\n\t\t\t}else if(str==\"LEFT\"){\n\t\t\t\tdir =(dir-1);\n\t\t\t\tif(dir<0){\n\t\t\t\t\tdir =3;\n\t\t\t\t}\n\t\t\t\tnx =posx;\n\t\t\t\tny =posy;\n\t\t\t}else if(str==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tposx =nx;\n\t\t\tposy =ny;\n\t\t}\n\t\tcout <<posx<<\" \"<<posy<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n  int i,j,n,w,l; \n  char com[10],turn[10];\n\n  /* dire\n    1\n   4 2\n    3\n  */\n\n  while(1){\n    //   cout<<\"aa\"<<endl;;\n    cin>> j>> i;\n    if(i==0&&j==0){\n      break;\n    }else{\n      int f[i+1][j+1];\n    }\n    \n   int dire=1;\n   w=1;\n   l=1;\n   \n   while(1){\n\n     // cout<<w<<\" \"<<l<<\" d:\"<<dire<<endl;//\n\n     cin>> com>> n; \n     //cout<< com<<\"  \"<< n<< endl;\n     if(strcmp(com,\"FORWARD\")==0){\n       if(dire==1){\n\t l+=n;\n\t if(l>i){\n\t   l=i;\n       }\n       }\n       if(dire==2){\n\t w+=n;\n\t if(w>j){\n\t   w=j;\n\t }\n       }\n       if(dire==3){\n\t l-=n;\n\t if(l<1){\n\t   l=1;\n\t }\n       }\n       if(dire==4){\n\t w-=n;\n\t if(w<1){\n\t   w=1;\n\t }\n       }\n     }\n     else if(strcmp(com,\"BACKWARD\")==0){\n       if(dire==3){\n\t l+=n;\n\t if(l>i){\n\t   l=i;\n\t }\n       }\n       if(dire==4){\n\t w+=n;\n\t if(w>j){\n\t   w=j;\n\t }\n       }\n       if(dire==1){\n\t l-=n;\n\t if(l<1){\n\t   l=1;\n\t }\n       }\n       if(dire==2){\n\t w-=n;\n\t if(w<1){\n\t   w=1;\n\t }\n       }\n     }\n\n     cin>>turn;\n     if(strcmp(turn,\"STOP\")==0){\n       break;\n     }\n     //cout<<turn<<endl;\n     if(strcmp(turn,\"RIGHT\")==0){\n       if(dire!=4){\n\t dire++;\n       }else if(dire==4){\n\t dire=1;\n       }else{\n\t cout<<\"???\\n\";\n       }\n     }\n     if(strcmp(turn,\"LEFT\")==0){\n       if(dire!=1){\n\t dire--;\n       }else if(dire==1){\n\t dire=4;\n       }else{\n\t cout<<\"???\\n\";\n       }\n     }\n   }\n   cout<<w<<\" \"<<l<<endl;\n   \n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n  string order;\n  int height,wide,x,y,num;\n  while(1){\n    x = 1; y = 1;\n    cin >> wide >> height;\n    if( wide == 0 && height == 0 ) break;\n    int flag = 0;\n    int angle = 1;\n    while(1){\n\n      cin >> order;\n      if( order == \"STOP\" ) break;\n\n      if( order == \"FORWARD\" ){\n\tcin >> num;\n\tif( angle == 1 ){\n\t  y+=num;\n\t}\n\telse if( angle == 2 ){\n\t  x+=num;\n\t}\n\telse if( angle == 3 ){\n\t  y-=num;\n\t}\n\telse if( angle == 4 ){\n\t  x-=num;\n\t}\n      }\n      \n      if( order == \"BACKWARD\" ){\n\tcin >> num;\n\tif( angle == 1 ){\n\t  y-=num;\n\t\n\t}\n\telse if( angle == 2 ){\n\t  x-=num;\n\t\n\t}\n\telse if( angle == 3 ){\n\t  y+=num;\n\t\n\t}\n\telse if( angle == 4 ){\n\t  x+=num;\n\t\n\t}\n\n      }\n\n      if( x < 1 ){\n\tx = 1;\n\tflag = 1;\n      }else if( x > wide ){\n\tx = wide;\n\tflag = 1;\n      }\n\t\n\n      if( y < 1 ){\n\ty = 1;\n\tflag = 1;\n      }else if( y > height ){\n\ty = height;\n\tflag = 1;\n      }\n\n\n      if( flag == 1 ) break;\n      \n      if( order == \"RIGHT\" ){\n\tangle++;\n\tif( angle == 5 ) angle = 1;\n      }\n\n      if( order == \"LEFT\" ){\n\tangle--;\n\tif( angle == 0 ) angle = 4;\n      }\n      \n    }\n    cout << x << \" \" << y << endl;\n    if ( flag == 1 ) break;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main()\n{\n\tint s, t, u, d, w, h;\n\tstring str;\n\t\n\twhile(1){\n\t\tcin >> w >> h;\n\t\tif(w == 0 && h == 0){\n\t\t\tbreak;\n\t\t}\n\t\ts = t = 1;\n\t\td = 0;\n\t\twhile(1){\n\t\t\tcin >> str;\n\t\t\tif(str == \"STOP\"){\n\t\t\t\tbreak;\n\t\t\t} else if(str == \"FORWARD\"){\n\t\t\t\tcin >> u;\n\t\t\t\tif(d == 0){\n\t\t\t\t\ts+=u;\n\t\t\t\t} else if(d == 1){\n\t\t\t\t\tt+=u;\n\t\t\t\t} else if(d == 2){\n\t\t\t\t\ts-=u;\n\t\t\t\t} else {\n\t\t\t\t\tt-=u;\n\t\t\t\t}\n\t\t\t} else if(str == \"RIGHT\"){\n\t\t\t\td++;\n\t\t\t\tif(d == 4){\n\t\t\t\t\td = 0;\n\t\t\t\t}\n\t\t\t} else if(str == \"LEFT\"){\n\t\t\t\td--;\n\t\t\t\tif(d < 0){\n\t\t\t\t\td = 3;\n\t\t\t\t}\n\t\t\t} else if(str == \"BACKWARD\"){\n\t\t\t\tcin >> u;\n\t\t\t\tif(d == 0){\n\t\t\t\t\ts-=u;\n\t\t\t\t} else if(d == 1){\n\t\t\t\t\tt-=u;\n\t\t\t\t} else if(d == 2){\n\t\t\t\t\ts+=u;\n\t\t\t\t} else {\n\t\t\t\t\tt+=u;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s < 1){\n\t\t\t\ts = 1;\n\t\t\t} else if(s > h){\n\t\t\t\ts = h;\n\t\t\t} else if(t < 1){\n\t\t\t\tt = 1;\n\t\t\t} else if(t > w){\n\t\t\t\tt = w;\n\t\t\t}\n\t\t}\n\t\tcout << t << \" \" << s << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\ntypedef string command;\ntypedef int Direction;\nenum Dir{UP,RIGHT,DOWN,LEFT};\nDirection dx[]={ 0, 1, 0,-1};\nDirection dy[]={ 1, 0,-1, 0};\nstring getDirString(Direction dir){\n\tif(dir==UP)return \"UP\";\n\telse if(dir==RIGHT)return \"RIGHT\";\n\telse if(dir==DOWN)return \"DOWN\";\n\telse if(dir==LEFT)return \"LEFT\";\n}\nclass Point{\npublic:\n\tint x;\n\tint y;\n\tDirection dir;\n\tPoint(int _x,int _y){\n\t\tx=_x;y=_y;\n\t}\n\tvoid print(){\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n};\nPoint Robot=Point(1,1);\nint w,h;\n\nvoid move(int correction){\n\tint num;\n\tcin>>num;\n\tint nextX=Robot.x+dx[Robot.dir]*num*correction;\n\tint nextY=Robot.y+dy[Robot.dir]*num*correction;\n\tif(nextX>0&&nextX<=w)Robot.x=nextX;\n\tif(nextY>0&&nextY<=h)Robot.y=nextY;\n}\nbool isMove(command com){\n\tif(com==\"FORWARD\"){\n\t\tmove(1);\n\t\treturn true;\n\t}\n\telse if(com==\"BACKWARD\"){\n\t\tmove(-1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool isDir(command com){\n\tif(com==\"LEFT\"){\n\t\tRobot.dir=(Robot.dir--+4)%4;\n\t\treturn true;\n\t}\n\telse if(com==\"RIGHT\"){\n\t\tRobot.dir=(++Robot.dir)%4;\n\t\treturn true;\n\t}\n\treturn false;\n}\nbool isStop(command com){\n\tif(com==\"STOP\"){\n\t\treturn true;\n\t}\n\treturn false;\n}\nvoid init(){\n\tRobot.x=1;\n\tRobot.y=1;\n\tRobot.dir=UP;\n}\n\n\nint\nmain(){\n\n\tfor(;cin>>w>>h&&(w||h);){\n\t\tinit();\n\t\tfor(;true;){\n\t\t\tcommand com;\n\t\t\tcin>>com;\n\t\t\tif(isMove(com));\n\t\t\telse if(isDir(com));\n\t\t\telse if(isStop(com)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t}\n\t\t}\n\t\tRobot.print();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define repb(i, a, b) for(int i = a; i >= b; i--)\n#define all(a) a.begin(), a.end()\n#define int long long\nusing namespace std;\n\nint dy[4] = {1, 0, -1, 0};\nint dx[4] = {0, 1, 0, -1};\n\nsigned main(){\n    int m, n;\n    while(1){\n        cin >> m >> n;\n        if(m + n == 0) break;\n        string s;\n        int k, y = 0, x = 0, dir = 0;\n        for(int c = 2;; c++){\n            cin >> s;\n            if(s == \"STOP\") break;\n            if(s == \"RIGHT\") dir = (dir + 1) % 4;\n            else if(s == \"LEFT\") dir = (dir + 3) % 4;\n            else if(s == \"BACKWARD\" || s == \"FORWARD\"){\n                cin >> k;\n                int p = 1;\n                if(s == \"BACKWARD\") p = -1;\n                rep(i, 0 ,k){\n                    int ty = y + p*dy[dir];\n                    int tx = x + p*dx[dir];\n                    if(!(0 <= ty && ty < n && 0 <= tx && tx < m)) break;\n                    y = ty; x = tx;\n                }\n            }\n            //cout << c << ' ' << x << ' ' << y << endl;\n        }\n        cout << x + 1 << ' ' << y + 1 << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nconst int dx[] = {0,1,0,-1};\nconst int dy[] = {1,0,-1,0};\nint W, H;\n\nint main() {\n  while(cin >> W >> H && (W|H)) {\n    string op;\n    int x, y, d;\n    x = y = d = 0;\n    while(cin >> op && op != \"STOP\") {\n      int nd, k;\n      k = 0;\n      if(op == \"FORWARD\") {\n        nd = d;\n        cin >> k;\n      } else if(op == \"BACKWARD\") {\n        nd = (d+2)%4;\n        cin >> k;\n      } else if(op == \"RIGHT\") {\n        d = (d+1)%4;\n      } else if(op == \"LEFT\") {\n        d = (d+3)%4;\n      }\n      while(k--) {\n        int nx = x + dx[nd];\n        int ny = y + dy[nd];\n        if(nx < 0 || nx >= W) break;\n        if(ny < 0 || ny >= H) break;\n        x = nx;\n        y = ny;\n      }\n    }\n    cout << x+1 << \" \" << y+1 << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n\tint w,h;\n\tint dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\n\twhile(true){\n\tcin>>w>>h;\n\tif(w==0&&h==0)break;\n\tstring a;\n\tint s=0;\n\tint x=1,y=1,z;\n\twhile(true){\n\t\tcin>>a;\n\t\tif(a==\"STOP\")break;\n\t\tif(a==\"RIGHT\")s=(s+1)%4;\n\t\tif(a==\"LEFT\")s=(s+3)%4;\n\t\tif(a==\"FORWARD\"){\n\t\t\tcin>>z;\n\t\t\tx+=dx[s]*z,y+=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t\tif(a==\"BACKWARD\"){\n\t\t\tcin>>z;\n\t\t\tx-=dx[s]*z,y-=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t}\n\tcout<<x<<\" \"<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int UP = 0, RIGHT = 1, DOWN = 2, LEFT = 3;\n\nint m, n;\nint i = 1, j = 1;\nint dir = UP;\n\nvoid fwd(int s) {\n    if (dir == UP) i = min(i + s, m);\n    if (dir == DOWN) i = max(i - s, 1);\n    if (dir == RIGHT) j = min(j + s, n);\n    if (dir == LEFT) j = max(j - s, 1);\n}\n\nint main() {\n    while (true) {\n        cin >> m >> n;\n        if (m == 0 && n == 0) break;\n        while (true) {\n            string s; cin >> s;\n            if (s == \"STOP\") break;\n            if (s == \"RIGHT\") dir = (dir + 1) % 4;\n            if (s == \"LEFT\") dir = (dir + 3) % 4;\n            int t; cin >> t;\n            if (s == \"BACK\") {\n                dir = (dir + 2) % 4;\n                fwd(t);\n                dir = (dir + 2) % 4;\n            }\n            if (s == \"FORWWARD\") fwd(t);\n        }\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint dx[4] = {0, 1, 0, -1};\nint dy[4] = {1, 0, -1, 0};\nint main(){\n    int n, m;\n    while(cin >> n >> m, n+m){\n        int mx = 1, my = 1;\n        int direction = 0;\n        while(1){\n            string command;\n            int step;\n            cin >> command >> step;\n            if(command == \"FORWARD\"){\n                if(mx+dx[direction]*step <= n) mx += dx[direction]*step;\n                else mx = n;\n                if(my+dy[direction]*step <= m) my += dy[direction]*step;\n                else my = m;\n            }\n            if(command == \"BACKWARD\"){\n                if(0 <= mx-dx[direction]*step) mx -= dx[direction]*step;\n                else mx = 0;\n                if(0 <= my-dy[direction]*step) my -= dy[direction]*step;\n                else my = 0;\n            }\n            cin >> command;\n            if(command == \"RIGHT\")direction = (direction+1)%4;\n            else if(command == \"LEFT\")direction = (direction-1)%4;\n            else if(command == \"STOP\")break;\n        }\n        cout << mx << \" \" << my << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#define k 0\n#define h 1\n#define m 2\n#define n 3\n#define r 11\n#define l 12\nusing namespace std;\n\nint zx, zy, joutai, xlen, ylen;\n\nvoid kita(int y);\nvoid minami(int y);\nvoid higasi(int y);\nvoid nisi(int y);\n\nvoid turn(int x){\n\tif(x == r){\n\t\tif(joutai >= 3){\n\t\t\tjoutai = 0;\n\t\t} else{\n\t\t\tjoutai++;\n\t\t}\n\t} else if(x == l){\n\t\tif(joutai <= 0){\n\t\t\tjoutai = 3;\n\t\t} else{\n\t\t\tjoutai--;\n\t\t}\n\t}\n}\n\nvoid sousa(int y){\n\tif(joutai == k) kita(y);\n\tif(joutai == h) higasi(y);\n\tif(joutai == m) minami(y);\n\tif(joutai == n) nisi(y);\n}\n\nint main(){\n\tint num;\n\tstring str;\n\twhile(cin >>xlen >>ylen){\n\t\tif(xlen == 0 && ylen == 0) break;\n\t\tzx = 1;\n\t\tzy = 1;\n\t\tjoutai = k;\n\t\twhile(cin >>str){\n\t\t\tif(str == \"STOP\") break;\n\t\t\telse if(str == \"RIGHT\") turn(r);\n\t\t\telse if(str == \"LEFT\") turn(l);\n\t\t\telse{\n\t\t\t\tcin >>num;\n\t\t\t\tif(str == \"FORWARD\") sousa(num);\n\t\t\t\tif(str == \"BACKWARD\") sousa(num * -1);\n\t\t\t}\n\t\t\tcout <<zx <<\" \" <<zy <<endl;\n\t\t}\n\t\tcout <<zx <<\" \" <<zy <<endl;\n\t}\n\treturn 0;\n}\n\nvoid kita(int y){\n\tif(zy + y <= ylen) zy += y;\n\telse zy = ylen;\n}\n\nvoid minami(int y){\n\tif(zy - y >= 1) zy -= y;\n\telse zy = 0;\n}\nvoid higasi(int y){\n\tif(zx + y <= xlen) zx += y;\n\telse zx = xlen;\n}\nvoid nisi(int y){\n\tif(zx - y >= 1) zx -= y;\n\telse zx = 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)   FOR(i,0,n)\n#define pb push_back\n#define mp make_pair\ntypedef long long ll;\ntypedef pair<int,int> pint;\n\nint main(){\n    int m,n;\n    string q;\n    while(cin>>m>>n,m){\n        int x=1,y=1,dir=0,cnt;\n        while(getline(cin,q),q!=\"STOP\"){\n            if(q[0]=='F'){\n                cnt=atoi(q.substr(8).c_str());\n                if(dir%2==0){\n                    cnt=dir==0?cnt:-cnt;\n                    y=min(n,max(1,y+cnt));\n                }\n                else{\n                    cnt=dir==1?cnt:-cnt;\n                    x=min(m,max(1,x+cnt));\n                }\n            }\n            else if(q[0]=='B'){\n                cnt=atoi(q.substr(9).c_str());\n                if(dir%2==0){\n                    cnt=dir==0?-cnt:cnt;\n                    y=min(n,max(1,y+cnt));\n                }\n                else{\n                    cnt=dir==1?-cnt:cnt;\n                    x=min(m,max(1,x+cnt));\n                }\n            }\n            else if(q==\"RIGHT\") dir=(dir+5)%4;\n            else if(q==\"LEFT\") dir=(dir+3)%4;\n        }\n        cout<<x<<' '<<y<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nint H, W;\nint my[] = {1, 0, -1, 0};\nint mx[] = {0, 1, 0, -1};\n\nvoid step(int &y, int &x, int my, int mx){\n  y += my; x += mx;\n  if(y >= H) y = H - 1;\n  if(x >= W) x = W - 1;\n  if(y < 0) y = 0;\n  if(x < 0) x = 0;\n}\n\nint main() {\n  while(cin >>W >>H && H){\n    int y = 0, x = 0, d = 0;\n    string s;\n    while(cin >>s && s != \"STOP\"){\n      if(s == \"FORWARD\"){\n        int n; cin >>n;\n        REP(i, n) step(y, x, my[d], mx[d]);\n      }\n      if(s == \"BACKWARD\"){\n        int n; cin >>n;\n        REP(i, n) step(y, x, -my[d], -mx[d]);\n      }\n      if(s == \"LEFT\") d = (d - 1 + 4) % 4;\n      if(s == \"RIGHT\") d = (d + 1) % 4;\n    }\n    cout <<x + 1 <<\" \" <<y + 1 <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint main(){\n  string order;\n  int height,wide,x,y,num,flag;\n  while(1){\n    flag = 0;\n    x = 1; y = 1;\n    cin >> wide >> height;\n    if( wide == 0 && height == 0 ) break;\n\n    while(1){\n    \n      cin >> order;\n      if( order == \"STOP\" ) break;\n\n      if( order == \"FORWARD\" ){\n\tcin >> num;\n\ty += num;\n\tif( height < y || y < 0 ){\n\t  y -= num;\n\t  break;\n\t}\n      }\n\n      if( order == \"BACKWARD\" ){\n\tcin >> num;\n\ty -= num;\n\tif( height < y || y < 0 ){\n\t  y += num;\n\t  break;\n\t}\n      }\n\n\tif( order == \"RIGHT\" || order == \"LEFT\" ){\n\t  swap(x,y);\n\t  swap(height,wide);\n\t}\n      \n    }\n    cout << x << \" \" << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define all(in) in.begin(),in.end()\n#define pb(in,a) in.push_back(a)\nusing namespace std;\nint a[4]={0,1,0,-1};\nint b[4]={1,0,-1,0};\nint main(){\n  int n,m;\n  while(cin>>n>>m,n||m){\n    int to=0;\n    string s;\n    int x=1,y=1;\n    while(1){\n      cin>>s;\n      if(s==\"FORWARD\"){\n\tint tmp;\n\tcin>>tmp;\n\tx+=tmp*a[to];\n\ty+=tmp*b[to];\n      }else if(s==\"BACKWARD\"){\n\tint tmp;\n\tcin>>tmp;\n\tx-=tmp*a[to];\n\ty-=tmp*b[to];\n      }else if(s==\"STOP\")break;\n      else if(s==\"LEFT\")to--;\n      else to++;\n\n      if(to>3)to=0;\n      else if(to<0)to=3;\n\n      if(x>n)x=n;\n      else if(x<1)x=1;\n      if(y>m)y=m;\n      else if(y<1)y=1;\n      //cout<<x<<\" \"<<y<<endl;\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n#include<string>\n#include<fstream>\nusing namespace std;\n\nint main(){\n  //ifstream in(\"input.txt\");\n  //cin.rdbuf(in.rdbuf());\n  int n,m,x,y,num;\n  int di=0;\n  string order;\n  while(1){\n    cin>>n>>m;\n    x=1;y=1;di=0;\n    if(n==0 && m==0)break;\n    while(1){\n      cin>>order;\n      if(order==\"FORWARD\"){\n\tcin>>num;\n\tif(di==0){\n\t  y=min(y+num,m);\n\t}else if(di==1){\n\t  x=min(x+num,n);\n\t}else if(di==2){\n\t  y=max(y-num,1);\n\t}else if(di==3){\n\t  x=max(x-num,1);\n\t}\n      \n      }else if(order==\"BACKWARD\"){\n\tcin>>num;\n\tif(di==2){\n\t  y=min(y+num,m);\n\t}else if(di==3){\n\t  x=min(x+num,n);\n\t}else if(di==0){\n\t  y=max(y-num,1);\n\t}else if(di==1){\n\t  x=max(x-num,1);\n\t}\n      }else if(order==\"RIGHT\"){\n\tdi=(di+5)%4;\n      }else if(order==\"LEFT\"){\n\tdi=(di+3)%4;\n      }else if(order==\"STOP\"){\n\tcout << x <<\" \"<<y<<endl;\n\tbreak;\n      }else{\n\tcout << \"ERROR \"<<order<<endl;\n\treturn 0;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\ntypedef string command;\ntypedef int Direction;\nenum Dir{UP,RIGHT,DOWN,LEFT};\nDirection dx[]={ 0, 1, 0,-1};\nDirection dy[]={ 1, 0,-1, 0};\nstring getDirString(Direction dir){\n\tif(dir==UP)return \"UP\";\n\telse if(dir==RIGHT)return \"RIGHT\";\n\telse if(dir==DOWN)return \"DOWN\";\n\telse if(dir==LEFT)return \"LEFT\";\n}\nclass Point{\npublic:\n\tint x;\n\tint y;\n\tDirection dir;\n\tPoint(int _x,int _y){\n\t\tx=_x;y=_y;\n\t}\n\tvoid print(){\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n};\nPoint Robot=Point(1,1);\nint w,h;\n\nvoid move(int correction){\n\tint num;\n\tcin>>num;\n\tint nextX=Robot.x+dx[Robot.dir]*num*correction;\n\tint nextY=Robot.y+dy[Robot.dir]*num*correction;\n\tif(nextX<=0)Robot.x=0;\n\telse if(nextX>w)Robot.x=w;\n\telse Robot.x=nextX;\n\n\tif(nextY<=0)Robot.y=0;\n\telse if(nextY>h)Robot.y=h;\n\telse Robot.y=nextY;\n}\nbool isMove(command com){\n\tif(com==\"FORWARD\"){\n\t\tmove(1);\n\t\treturn true;\n\t}\n\telse if(com==\"BACKWARD\"){\n\t\tmove(-1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool isDir(command com){\n\tif(com==\"LEFT\"){\n\t\tRobot.dir=(Robot.dir--+4)%4;\n\t\treturn true;\n\t}\n\telse if(com==\"RIGHT\"){\n\t\tRobot.dir=(++Robot.dir)%4;\n\t\treturn true;\n\t}\n\treturn false;\n}\nbool isStop(command com){\n\tif(com==\"STOP\"){\n\t\treturn true;\n\t}\n\treturn false;\n}\nvoid init(){\n\tRobot.x=1;\n\tRobot.y=1;\n\tRobot.dir=UP;\n}\n\n\nint\nmain(){\n\n\tfor(;cin>>w>>h&&(w||h);){\n\t\tinit();\n\t\tfor(;true;){\n\t\t\tcommand com;\n\t\t\tcin>>com;\n\t\t\tif(isMove(com));\n\t\t\telse if(isDir(com));\n\t\t\telse if(isStop(com)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t}\n\t\t}\n\t\tRobot.print();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\nint main() {int a[4][2]={0,-1,1,0,0,1,-1,0},N,M,i,j,k,w=1;char Tex[9];while (1) {scanf(\"%d %d\",&M,&N);if (!N && !M) return 0;i=1,j=1;while (1) {scanf(\"%s\",&Tex);if (Tex[0]=='F' || Tex[0]=='B') scanf(\"%d\",&k); else k=0;if (Tex[0]=='S') break;i+=k*a[w][0],j+=k*a[w][1];if (Tex[0]=='R') w=(w+1)&3; else if (Tex[0]=='L') w=(w+3)&3;if (i<=0) i=1;if (i>N) i=N;if (j<=0) j=1;if (j>M) j=M;}printf(\"%d %d\\n\",j,i);}}"
  },
  {
    "language": "C++",
    "code": "//Name: Where's Your Robot?\n//Level: 1\n//Category: シミュレーション,練習問題\n//Note:\n\n/**\n * 問題文の通りにシミュレーションする。\n */\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nconst int DR[] = {1, 0, -1, 0};\nconst int DC[] = {0, -1, 0, 1};\n\nbool solve() {\n    int W, H;\n    if(!(cin >> W >> H)) return false;\n    if(!W && !H) return false;\n\n    int r = 1, c = 1, dir = 0;\n    while(true) {\n        string cmd;\n        cin >> cmd;\n        if(cmd == \"FORWARD\") {\n            int d;\n            cin >> d;\n            r = max(1, min(H, r + DR[dir] * d));\n            c = max(1, min(W, c + DC[dir] * d));\n        } else if(cmd == \"BACKWARD\") {\n            int d;\n            cin >> d;\n            r = max(1, min(H, r - DR[dir] * d));\n            c = max(1, min(W, c - DC[dir] * d));\n        } else if(cmd == \"RIGHT\") {\n            dir = (dir + 3) % 4;\n        } else if(cmd == \"LEFT\") {\n            dir = (dir + 1) % 4;\n        } else if(cmd == \"STOP\") {\n            break;\n        }\n    }\n    cout << c << ' ' << r << endl;\n    return true;\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(0);\n\n    while(solve()) ;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint main(){\n  string order;\n  int height,wide,x,y,num;\n  while(1){\n    x = 1; y = 1;\n    cin >> wide >> height;\n    if( wide == 0 && height == 0 ) break;\n    int flag = 0;\n    while(1){\n\n      cin >> order;\n      if( order == \"STOP\" ) break;\n\n      if( order == \"FORWARD\" ){\n\tcin >> num;\n\ty += num;\n\tif( height < y || y < 0 ){\n\t  y -= num;\n\t  flag = 1;\n\t \n\t}\n      }\n      \n      if( flag == 1 ) break;\n      \n      if( order == \"BACKWARD\" ){\n\tcin >> num;\n\ty -= num;\n\tif( height < y || y < 0 ){\n\t  y += num;\n\t  flag = 1;\n\t \n\t}\n      }\n\n      if( flag == 1 ) break;\n      \n\tif( order == \"RIGHT\" || order == \"LEFT\" ){\n\t  swap(x,y);\n\t  swap(height,wide);\n\t}\n      \n    }\n    cout << x << \" \" << y << endl;\n    if ( flag == 1 ) break;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nint H, W;\nint my[] = {1, 0, -1, 0};\nint mx[] = {0, 1, 0, -1};\n\nvoid step(int &y, int &x, int my, int mx){\n  y += my; x += mx;\n  if(y >= H) y = H - 1;\n  if(x >= W) x = W - 1;\n  if(y < 0) y = 0;\n  if(x < 0) x = 0;\n}\n\nint main() {\n  while(cin >>H >>W && H){\n    int y = 0, x = 0, d = 0;\n    string s;\n    while(cin >>s && s != \"STOP\"){\n      if(s == \"FORWARD\"){\n        int n; cin >>n;\n        REP(i, n) step(y, x, my[d], mx[d]);\n      }\n      if(s == \"BACKWARD\"){\n        int n; cin >>n;\n        REP(i, n) step(y, x, -my[d], -mx[d]);\n      }\n      if(s == \"LEFT\") d = (d - 1) % 4;\n      if(s == \"RIGHT\") d = (d + 1) % 4;\n    }\n    cout <<H - y + 1 <<\" \" <<W - x + 1 <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int mv[4][3]=\n    {{0,1,1}, //forward\n     {-1,0,0},//left\n     {0,-1,0},//backward\n     {1,0,0}};//right\n  int n,m,num,x,y;\n  string op;\n\n  while(true){\n    cin >> n >> m;\n    if(n == 0 && m == 0)break;\n    x=1;y=1;\n\n    while(true){\n      cin >> op;\n      if(op == \"STOP\")break;\n      else if(op == \"LEFT\")\n\t{\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i != 3){\n\t\t    mv[i][2]=0;\n\t\t    mv[i+1][2]=1;\n\t\t  }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      mv[0][2]=1;\n\t\t      mv[3][2]=0;\n\t\t    }\n\t\t  else cout << \"********arienai********\" << endl;\n\t\t  break;\n\t\t}\n\t    }\n\t}\n      else if(op == \"RIGHT\")\n\t{//\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      mv[0][2]=0;\n\t\t      mv[3][2]=1;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      mv[i][2]=0;\n\t\t      mv[i-1][2]=1;\n\t\t    }\n\t\t  break;\n\t\t}\n\t    }\n\t}//\n      else if(op == \"FORWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      //cout << \"x = \" << x << \", num = \" << num << endl;\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n else if(op == \"BACKWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n\n      // cout << \"op = \" << op << \",num =  \" << num << \", \"  << x << \" \" << y << endl; \n\n    }\n    cout << x << \" \" << y << endl; \n\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\nusing namespace std;\nint W, H, x, y;\nstring op;\nint dir = 1;\n\nvoid forDir(int len){\n  if(dir == 1) y += len;\n  if(dir == 2) x += len;\n  if(dir == 3) y -= len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nvoid backDir(int len){\n  if(dir == 1) y -= len;\n  if(dir == 2) x -= len;\n  if(dir == 3) y += len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nint main(){\n  while(cin >> W >> H){\n    if(W == 0 && H == 0) break;\n    \n    x = 1, y = 1;\n    dir = 1;\n    \n    while(cin >> op){\n      int move = 0;\n      if(op == \"STOP\") break;\n      \n      else if(op == \"FORWARD\"){\n\tcin >> move;\n\tforDir(move);\n      }\n      \n      else if(op == \"BACKWARD\"){\n\tcin >> move;\n\tbackDir(move);\n      }\n      \n      else if(op == \"RIGHT\"){\n\tdir++;\n\tif(dir == 5) dir = 1;\n      }\n      \n      else if(op == \"LEFT\"){\n\tdir--;\n\tif(dir == 0) dir = 4;\n      }\n      //printf(\"dir = %d, x = %d, y = %d\\n\", dir, x, y);\n    }\n    cout << x << ' ' << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <cctype>\n#include <cmath>\n#include <cassert>\nusing namespace std;\nint dx[4] = {0,1,0,-1};\nint dy[4] = {1,0,-1,0};\n\nint w,h;\n\nvoid to_valid(int &a, int limit) {\n  if(a <= 0) a = 1;\n  if(a > limit) a = limit;\n}\n\nvoid update(int &x, int &y, int vec, int amount) {\n  x += dx[vec] * amount;\n  y += dy[vec] * amount;\n  to_valid(x, w);\n  to_valid(y, h);\n}\n\nint main(){\n  while(cin >> w >> h && !(w == 0 && h == 0)){\n\tstring str;\n\tint cx = 1,cy = 1;\n\tint vec = 0;\n\twhile(cin >> str && str != \"STOP\"){\n\t  if(str == \"FORWARD\"){\n\t\tint k;\n\t\tcin >> k;\n\t\tupdate(cx, cy, vec, k);\n\t  }else if(str == \"RIGHT\"){\n\t\tvec = (vec + 1) % 4;\n\t  }\n\t  else if(str == \"LEFT\"){\n\t\tvec = (vec + 3) % 4;\n\t  }else if(str == \"BACKWARD\"){\n\t\tint k;\n\t\tcin >> k;\n\t\tupdate(cx, cy, vec ^ 2, k);\n\t  }else {\n\t\tassert(false);\n\t  }\n\t}\n\tcout << cx << \" \" << cy << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint main(){\n\tint m[2];\n\tcin >> m[0] >> m[1];\n\twhile(m[0]){\n\t\tchar c[100];\n\t\tint dx[][2] = {{0,1},{1,0},{0,-1},{-1,0}};\n\t\tint x[2] = {1,1};\n\t\tint a;\n\t\tint d = 0;\n\t\tbool f = 1;\n\t\twhile(f){\n\t\t\tcin >> c;\n\t\t\tswitch(c[0]){\n\t\t\t\tcase 'B':\n\t\t\t\tcase 'F':\n\t\t\t\t\tcin >> a;\n\t\t\t\t\tif(c[0] == 'B') a = -a;\n\t\t\t\t\tfor(int i = 0; i < 2; i++){\n\t\t\t\t\t\tx[i] += dx[d][i]*a;\n\t\t\t\t\t\tif(x[i] < 1) x[i] = 1;\n\t\t\t\t\t\tif(m[i] < x[i]) x[i] = m[i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\td = (d+1)%4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\td = (d+3)%4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tf = 0;\n\t\t\t}\n\t\t}\n\t\tcout << x[0] << \" \" << x[1] << endl;\n\t\tcin >> m[0] >> m[1];\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint dx[4] = {0, 1, 0, -1};\nint dy[4] = {1, 0, -1, 0};\nint main(){\n    int n, m;\n    while(cin >> n >> m, n+m){\n        int mx = 1, my = 1;\n        int direction = 0;\n        while(1){\n            string command;\n            int step;\n            cin >> command;\n            if(command == \"FORWARD\"){\n                cin >> step;\n                if(mx+dx[direction]*step <= n) mx += dx[direction]*step;\n                else mx = n;\n                if(my+dy[direction]*step <= m) my += dy[direction]*step;\n                else my = m;\n            }\n            else if(command == \"BACKWARD\"){\n                cin >> step;\n                if(0 <= mx-dx[direction]*step) mx -= dx[direction]*step;\n                else mx = 0;\n                if(0 <= my-dy[direction]*step) my -= dy[direction]*step;\n                else my = 0;\n            }\n            else if(command == \"RIGHT\")direction = (direction+1)%4;\n            else if(command == \"LEFT\"){\n                direction--;\n                if(direction == -1) direction = 3;\n            }\n            else if(command == \"STOP\""
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint X, Y, H, W, N, DIR; string S;\nint dx[4] = { 1,0,-1,0 };\nint dy[4] = { 0,1,0,-1 };\nint main() {\n\twhile (true) {\n\t\tcin >> H >> W;\n\t\tif (H == 0 && W == 0) { break; }\n\t\tX = 1; Y = 1;\n\t\twhile (true) {\n\t\t\tcin >> S;\n\t\t\tif (S == \"STOP\") {\n\t\t\t\tcout << Y << ' ' << X << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (S == \"LEFT\") { DIR = (DIR + 3) % 4; }\n\t\t\tif (S == \"RIGHT\") { DIR = (DIR + 1) % 4; }\n\t\t\tif (S == \"FORWARD\") {\n\t\t\t\tcin >> N; X += dx[DIR] * N; Y += dy[DIR] * N;\n\t\t\t\tif (X > W) { X = W; }\n\t\t\t\tif (Y > H) { Y = H; }\n\t\t\t}\n\t\t\tif (S == \"BACKWARD\") {\n\t\t\t\tcin >> N; X -= dx[DIR] * N; Y -= dy[DIR] * N;\n\t\t\t\tif (X < 1) { X = 1; }\n\t\t\t\tif (Y < 1) { Y = 1; }\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "// 2013 TT 021 Div 2 \n#include <iostream>\n#include <string>\n \nusing namespace std;\n \nint main(void) {\n  int w, h;\n  string prgrm;\n  int num;\n  int px, py;\n  int angle;\n  int dx[4] = {0, 1, 0, -1};\n  int dy[4] = {1, 0, -1, 0};\n   \n \n  for(;;) {\n    cin >> w >> h;\n    if(w == 0 && h == 0) {\n      break;\n    }\n \n    w--; h--;\n    px = 0; py = 0; angle = 0;\n     \n    for(;;) {\n      cin >> prgrm;\n      if(prgrm == \"RIGHT\") {\n    angle++;\n    if(angle == 4) angle = 0;\n    continue;\n     \n      } else if(prgrm == \"LEFT\") {\n    angle--;\n    if(angle == -1) angle = 3;\n    continue;\n \n      } else if(prgrm == \"STOP\") {\n    cout << px+1 << \" \" << py+1 << endl;\n    break;\n      }\n \n      cin >> num;\n       \n      if(prgrm == \"FORWARD\") {\n    px += dx[angle]*num;\n    py += dy[angle]*num;\n    if(px < 0) px = 0;\n    if(py < 0) py = 0;\n    if(px > w) px = w;\n    if(py > h) py = h;\n     \n      } else if(prgrm == \"BACKWARD\") {\n    px -= dx[angle]*num;\n    py -= dy[angle]*num;\n    if(px < 0) px = 0;\n    if(py < 0) py = 0;\n    if(px > w) px = w;\n    if(py > h) py = h;\n      }\n    }\n     \n  }\n \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\ntypedef string command;\ntypedef int Direction;\nenum Dir{UP,RIGHT,DOWN,LEFT};\nDirection dx[]={ 0, 1, 0,-1};\nDirection dy[]={ 1, 0,-1, 0};\nstring getDirString(Direction dir){\n\tif(dir==UP)return \"UP\";\n\telse if(dir==RIGHT)return \"RIGHT\";\n\telse if(dir==DOWN)return \"DOWN\";\n\telse if(dir==LEFT)return \"LEFT\";\n}\nclass Point{\npublic:\n\tint x;\n\tint y;\n\tDirection dir;\n\tPoint(int _x,int _y){\n\t\tx=_x;y=_y;\n\t}\n\tvoid print(){\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n};\nPoint Robot=Point(1,1);\nint w,h;\n\nvoid move(int correction){\n\tint num;\n\tcin>>num;\n\tint nextX=Robot.x+dx[Robot.dir]*num*correction;\n\tint nextY=Robot.y+dy[Robot.dir]*num*correction;\n\tif(nextX<=0)Robot.x=1;\n\telse if(nextX>w)Robot.x=w;\n\telse Robot.x=nextX;\n\n\tif(nextY<=0)Robot.y=1;\n\telse if(nextY>h)Robot.y=h;\n\telse Robot.y=nextY;\n}\nbool isMove(command com){\n\tif(com==\"FORWARD\"){\n\t\tmove(1);\n\t\treturn true;\n\t}\n\telse if(com==\"BACKWARD\"){\n\t\tmove(-1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool isDir(command com){\n\tif(com==\"LEFT\"){\n\t\tRobot.dir=(Robot.dir--+4)%4;\n\t\treturn true;\n\t}\n\telse if(com==\"RIGHT\"){\n\t\tRobot.dir=(++Robot.dir)%4;\n\t\treturn true;\n\t}\n\treturn false;\n}\nbool isStop(command com){\n\tif(com==\"STOP\"){\n\t\treturn true;\n\t}\n\treturn false;\n}\nvoid init(){\n\tRobot.x=1;\n\tRobot.y=1;\n\tRobot.dir=UP;\n}\n\n\nint\nmain(){\n\n\tfor(;cin>>w>>h&&(w||h);){\n\t\tinit();\n\t\tfor(;true;){\n\t\t\tcommand com;\n\t\t\tcin>>com;\n\t\t\tif(isMove(com));\n\t\t\telse if(isDir(com));\n\t\t\telse if(isStop(com)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t}\n\t\t}\n\t\tRobot.print();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint main(void){\n\tint c,r;\n\twhile(cin >> c >> r){\n\t\tif(c==0&&r==0)break;\n\t\tint x=1,y=1,n;\n\t\tint angle=0;\n\t\tconst int POSX[] = {0,1,0,-1};\n\t\tconst int POSY[] = {1,0,-1,0};\n\t\tstring s;\n\t\twhile(cin>>s){\n\t\t\tif(s==\"FORWARD\"){\n\t\t\t\tcin >> n;\n\t\t\t\tint dx = n*POSX[angle];\n\t\t\t\tint dy = n*POSY[angle];\n\t\t\t\t\n\t\t\t\tint nx = dx + x;\n\t\t\t\tif(nx<1)x = 1;\n\t\t\t\telse if(nx>c)x=c;\n\t\t\t\telse x = nx;\n\t\t\t\t\n\t\t\t\tint ny = dy + y;\t\t\t\n\t\t\t\tif(ny<1)y = 1;\n\t\t\t\telse if(ny>r)y=r;\n\t\t\t\telse y = ny;\n\t\t\t\t\n\t\t\t}else if(s==\"BACKWARD\"){\n\t\t\t\tcin >> n;\n\t\t\t\tint dx = n*POSX[angle];\n\t\t\t\tint dy = n*POSY[angle];\n\t\t\t\t\n\t\t\t\tint nx = x - dx;\n\t\t\t\tif(nx<1)x = 1;\n\t\t\t\telse if(nx>c)x=c;\n\t\t\t\telse x = nx;\n\t\t\t\t\n\t\t\t\tint ny = y - dy;\n\t\t\t\tif(ny<1)y = 1;\n\t\t\t\telse if(ny>r)y=r;\n\t\t\t\telse y = ny;\n\t\t\t}else if(s==\"RIGHT\") angle++;\n\t\t\telse if(s==\"LEFT\") angle--;\n\t\t\telse if(s==\"STOP\") break;\n\t\t\t\n\t\t\tangle = (angle + 4) % 4;\n\t\t}\n\t\tcout << x << \" \" << y << \"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(void){\n  int n,m;\n  int dx[4] = { 0 , 1 , 0 , -1 };\n  int dy[4] = { 1 , 0 , -1 , 0 };\n  int angle;\n  string order;\n  int x,y;\n  int Go;\n\n  while(1){\n\n    angle = 0; x = y = 1;\n\n    cin >> n >> m;\n\n    if( n == 0 && m == 0 ) break;\n\n    while(1){\n\n      cin >> order;\n\n      if( order == \"RIGHT\" ){\n\tangle++;\n\tif( angle == 4 ) angle = 0;\n\tcontinue;\n      }\n\n      else if( order == \"LEFT\" ){\n\tangle--;\n\tif( angle == -1 ) angle = 3;\n\tcontinue;\n      }\n\n      else if( order == \"STOP\" ){\n\tcout << x << \" \" << y << endl;\n\tbreak;\n      }\n\n      cin >> Go;\n\n      if( order == \"FORWARD\" ){\n\n\tx += dx[angle]*Go;\n\ty += dy[angle]*Go;\n\n\tif( x < 1 ) x = 1;\n\tif( y < 1 ) y = 1;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n\n      else if( order == \"BACKWARD\" ){\n\n\tx -= dx[angle]*Go;\n\ty -= dy[angle]*Go;\n\n\tif( x < 1 ) x = 1;\n\tif( y < 1 ) y = 1;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n    }\n  }\n\n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n  int i,j,n,w,l; \n  char com[15];\n\n  /* dire\n    1\n   4 2\n    3\n  */\n\n  while(1){\n    //   cout<<\"aa\"<<endl;;\n    cin>> j>> i;\n    if(i==0&&j==0){\n      break;\n    }\n    \n   int dire=1;\n   w=1;\n   l=1;\n   \n   while(1){\n\n     //  cout<<w<<\" \"<<l<<\" d:\"<<dire<<endl;//\n\n     cin>> com;\n     //cout<< com<<\"  \"<< n<< endl;\n     if(strcmp(com,\"FORWARD\")==0){\n       cin>>n;\n       if(dire==1){\n\t l+=n;\n\t if(l>i){\n\t   l=i;\n\t }\n       }\n       if(dire==2){\n\t w+=n;\n\t if(w>j){\n\t   w=j;\n\t }\n       }\n       if(dire==3){\n\t l-=n;\n\t if(l<1){\n\t   l=1;\n\t }\n       }\n       if(dire==4){\n\t w-=n;\n\t if(w<1){\n\t   w=1;\n\t }\n       }\n     } else if(strcmp(com,\"BACKWARD\")==0){\n       cin>>n;\n       if(dire==3){\n\t l+=n;\n\t if(l>i){\n\t   l=i;\n\t }\n       }\n       if(dire==4){\n\t w+=n;\n\t if(w>j){\n\t   w=j;\n\t }\n       }\n       if(dire==1){\n\t l-=n;\n\t if(l<1){\n\t   l=1;\n\t }\n       }\n       if(dire==2){\n\t w-=n;\n\t if(w<1){\n\t   w=1;\n\t }\n       }\n     }else if(strcmp(com,\"STOP\")==0){\n       break;\n     }else if(strcmp(com,\"RIGHT\")==0){\n       if(dire!=4){\n\t dire++;\n       }else if(dire==4){\n\t dire=1;\n       }else{\n\t cout<<\"???\\n\";\n       }\n     }else if(strcmp(com,\"LEFT\")==0){\n       if(dire!=1){\n\t dire--;\n       }else if(dire==1){\n\t dire=4;\n       }else{\n\t cout<<\"???\\n\";\n       }\n     }\n   }\n   cout<<w<<\" \"<<l<<endl;\n   \n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#define k 0\n#define h 1\n#define m 2\n#define n 3\n#define r 11\n#define l 12\nusing namespace std;\n\nint zx, zy, joutai, xlen, ylen;\n\nvoid kita(int y);\nvoid minami(int y);\nvoid higasi(int y);\nvoid nisi(int y);\n\nvoid turn(int x){\n\tif(x == r){\n\t\tif(joutai >= 3){\n\t\t\tjoutai = 0;\n\t\t} else{\n\t\t\tjoutai++;\n\t\t}\n\t} else if(x == l){\n\t\tif(joutai <= 0){\n\t\t\tjoutai = 3;\n\t\t} else{\n\t\t\tjoutai--;\n\t\t}\n\t}\n}\n\nvoid sousa(int y){\n\tif(joutai == k) kita(y);\n\tif(joutai == h) higasi(y);\n\tif(joutai == m) minami(y);\n\tif(joutai == n) nisi(y);\n}\n\nint main(){\n\tint num;\n\tstring str;\n\twhile(cin >>xlen >>ylen){\n\t\tif(xlen == 0 && ylen == 0) break;\n\t\tzx = 1;\n\t\tzy = 1;\n\t\tjoutai = k;\n\t\twhile(cin >>str){\n\t\t\tif(str == \"STOP\") break;\n\t\t\telse if(str == \"RIGHT\") turn(r);\n\t\t\telse if(str == \"LEFT\") turn(l);\n\t\t\telse{\n\t\t\t\tcin >>num;\n\t\t\t\tif(str == \"FORWARD\") sousa(num);\n\t\t\t\tif(str == \"BACKWARD\") sousa(num * -1);\n\t\t\t}\n\t\t}\n\t\tcout <<zx <<\" \" <<zy <<endl;\n\t}\n\treturn 0;\n}\n\nvoid kita(int y){\n\tif(zy + y <= ylen) zy += y;\n\telse zy = ylen;\n}\n\nvoid minami(int y){\n\tif(zy - y >= 1) zy -= y;\n\telse zy = 1;\n}\nvoid higasi(int y){\n\tif(zx + y <= xlen) zx += y;\n\telse zx = xlen;\n}\nvoid nisi(int y){\n\tif(zx - y >= 1) zx -= y;\n\telse zx = 1;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\n// right -> turn 90 deg. right;\n// left  -> turn 90 deg. left;\n\nint map[101][101];\n\n\nint main(){\n    int m, n;\n    while (1){\n\tint x = 1, y = 1, dir = 0;\n\tcin >> m >> n;\n\tif (m == 0 && n == 0) break;\n\tstring command;\n\twhile (1){\n\t    cin >> command;\n\t    if (command == \"STOP\") break;\n\n\t    if (command == \"RIGHT\"){\n\t\tdir++;\n\t\tif (dir == 4) dir = 0;\n\t    }\n\t    else if (command == \"LEFT\"){\n\t\tdir--;\n\t\tif (dir == -1) dir = 3;\n\t    }\n\n\t    else {\n\t\tint w;\n\t\tcin >> w;\n\t\tif (command == \"FORWARD\"){\n\t\t    switch (dir){\n\t\t    case 0: y += w; break;\n\t\t    case 1: x += w; break;\n\t\t    case 2: y -= w; break;\n\t\t    case 3: x -= w; break;\n\t\t    }\n\t\t    if (x > m) x = m;\n\t\t    if (y > n) y = n;\n\t\t    if (x < 1) x = 1;\n\t\t    if (y < 1) y = 1;\n\t\t}\n\t\telse if (command == \"BACKWARD\"){\n\t\t    switch (dir){\n\t\t    case 0: y -= w; break;\n\t\t    case 1: x -= w; break;\n\t\t    case 2: y += w; break;\n\t\t    case 3: x += w; break;\n\t\t    }\n\t\t    if (x > m) x = m;\n\t\t    if (y > n) y = n;\n\t\t    if (x < 1) x = 1;\n\t\t    if (y < 1) y = 1;\n\t\t}\n//\t\tcout << x << \" \" << y << \" \" << dir << \" \" << w << endl;;\n\t    }\n\n\t}\n\t\n\tcout << x << \" \" << y << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint dx[4] = {1,0,-1,0};\nint dy[4] = {0,1,0,-1};\n\nint main(){\n    int w,h;\n    while(cin >> w >> h){\n        if((w|h) == 0) break;\n        string str;\n        int n;\n        int dir = 1;\n        int x = 1;\n        int y = 1;\n        while(cin >> str){\n            if(str == \"STOP\"){\n                break;\n            }else if(str == \"RIGHT\"){\n                dir--;\n                if(dir == -1) dir = 3;\n            }else if(str == \"LEFT\"){\n                dir++;\n                if(dir == 4) dir = 0;\n            }else{\n                if(str == \"FORWARD\"){\n                    cin >> n;\n                }else{\n                    cin >> n;\n                    n *= -1;\n                }\n                x += dx[dir] * n;\n                y += dy[dir] * n;\n                if(x < 1) x = 1;\n                if(x > w) x = w;\n                if(y < 1) y = 1;\n                if(y > h) y = h;\n            }\n        }\n        cout << x << \" \" << y << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n  string order;\n  int height,wide,x,y,num;\n  while(1){\n    x = 1; y = 1;\n    cin >> wide >> height;\n    if( wide == 0 && height == 0 ) break;\n    int flag = 0;\n    int angle = 1;\n    while(1){\n\n      cin >> order;\n      if( order == \"STOP\" ) break;\n\n      if( order == \"FORWARD\" ){\n\tcin >> num;\n\tif( angle == 1 ){\n\t  y+=num;\n\t\n\t}\n\telse if( angle == 2 ){\n\t  x+=num;\n\t\n\t}\n\telse if( angle == 3 ){\n\t  y-=num;\n\t\n\t}\n\telse if( angle == 4 ){\n\t  x-=num;\n\t\n\t}\n      }\n      \n      if( order == \"BACKWARD\" ){\n\tcin >> num;\n\tif( angle == 1 ){\n\t  y-=num;\n\t\n\t}\n\telse if( angle == 2 ){\n\t  x-=num;\n\t\n\t}\n\telse if( angle == 3 ){\n\t  y+=num;\n\t\n\t}\n\telse if( angle == 4 ){\n\t  x+=num;\n\t\n\t}\n\n      }\n\n      if( x < 0 ){\n\tx = 0;\n\tflag = 1;\n      }else if( x > wide ){\n\tx = wide;\n\tflag = 1;\n      }\n\t\n\n      if( y < 0 ){\n\ty = 0;\n\tflag = 1;\n      }else if( y > height ){\n\ty = height;\n\tflag = 1;\n      }\n\n\n      if( flag == 1 ) break;\n      \n      if( order == \"RIGHT\" ){\n\tangle++;\n\tif( angle == 5 ) angle = 1;\n      }\n\n      if( order == \"LEFT\" ){\n\tangle--;\n\tif( angle == 0 ) angle = 4;\n      }\n      \n    }\n    cout << x << \" \" << y << endl;\n    if ( flag == 1 ) break;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\nconst int dy[] = { 1,0,-1,0 }, dx[] = { 0,1,0,-1 };\npair<int, int> p;\n\nint main() {\n\twhile (1) {\n\t\tint col, row, k, dir = 0;\n\t\tstring str;\n\t\tcin >> col >> row;\n\t\tif (col + row == 0)break;\n\t\tp.first = 1; p.second = 1;\n\t\tfor (;;) {\n\t\t\tcin >> str;\n\t\t\tchar c = str[0];\n\t\t\tif (c == 'S')break;\n\t\t\telse if (c == 'F') {\n\t\t\t\tcin >> k;\n\t\t\t\tp.first += k*dx[dir];\n\t\t\t\tp.second += k*dy[dir];\n\t\t\t\tp.first = max(1, p.first);\n\t\t\t\tp.second = max(1, p.second);\n\t\t\t\tp.first = min(col, p.first);\n\t\t\t\tp.second = min(row, p.second);\n\t\t\t}\n\t\t\telse if (c == 'B') {\n\t\t\t\tcin >> k;\n\t\t\t\tp.first -= k*dx[dir];\n\t\t\t\tp.second -= k*dy[dir];\n\t\t\t\tp.first = max(1, p.first);\n\t\t\t\tp.second = max(1, p.second);\n\t\t\t\tp.first = min(col, p.first);\n\t\t\t\tp.second = min(row, p.second);\n\t\t\t}\n\t\t\telse if (c == 'R') {\n\t\t\t\tdir = (dir + 1) % 4;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdir = (dir + 3) % 4;\n\t\t\t}\n\t\t}\n\t\tcout << p.first << \" \" << p.second << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nchar str[20];\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nint main(){\n\tint a,b;\n\twhile(scanf(\"%d%d\",&a,&b),a){\n\t\tint row=0;\n\t\tint col=0;\n\t\tint dir=0;\n\t\twhile(1){\n\t\t\tscanf(\"%s\",str);\n\t\t\tif(str[0]=='S')break;\n\t\t\tif(str[0]=='F'){\n\t\t\t\tint c;scanf(\"%d\",&c);\n\t\t\t\tfor(int i=0;i<c;i++){\n\t\t\t\t\trow+=dx[dir];\n\t\t\t\t\tif(row<0)row=0;\n\t\t\t\t\tif(row>=a)row=a-1;\n\t\t\t\t\tcol+=dy[dir];\n\t\t\t\t\tif(col<0)col=0;\n\t\t\t\t\tif(col>=b)col=b-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(str[0]=='B'){\n\t\t\t\tint c;scanf(\"%d\",&c);\n\t\t\t\tfor(int i=0;i<c;i++){\n\t\t\t\t\trow-=dx[dir];\n\t\t\t\t\tif(row<0)row=0;\n\t\t\t\t\tif(row>=a)row=a-1;\n\t\t\t\t\tcol-=dy[dir];\n\t\t\t\t\tif(col<0)col=0;\n\t\t\t\t\tif(col>=b)col=b-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(str[0]=='L')dir=(dir+3)%4;\n\t\t\tif(str[0]=='R')dir=(dir+1)%4;\n\t\t}\n\t\tprintf(\"%d %d\\n\",row+1,col+1);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n    int n, m;\n    while(cin >> n >> m, n+m){\n        int mx = 1, my = 1;\n        int direction = 1;\n        while(1){\n            string command; int step;\n            cin >> command;\n            if(command == \"FORWARD\"){\n                cin >> step;\n                if(direction == 1) my += step;\n                else if(direction == 2) mx += step;\n                else if(direction == 3) my -= step;\n                else if(direction == 4) mx -= step;\n            }\n            else if(command == \"BACKWARD\"){\n                cin >> step;\n                if(direction == 1) my -= step;\n                else if(direction == 2) mx -= step;\n                else if(direction == 3) my += step;\n                else if(direction == 4) mx += step;\n            }\n            else if(command == \"RIGHT\"){\n                direction++;\n                if(direction == 5) direction = 1;\n            }\n            else if(command == \"LEFT\"){\n                direction--;\n                if(direction == 0) direction = 4;\n            }\n            else if(command == \"STOP\")break;\n\n            if(mx < 1) mx = 1;\n            else if(mx > n) mx = m;\n            if(my < 1) my = 1;\n            else if(my > m) my = m;\n        }\n        cout << mx << \" \" << my << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<iostream>\n\nusing namespace std;\n\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\nint main(){\n\tfor(int n,m;cin>>n>>m,n;){\n\t\tint x=1,y=1,dir=1;\n\t\twhile(1){\n\t\t\tstring s;\tcin>>s;\n\t\t\tif     (s==\"STOP\")\tbreak;\n\t\t\telse if(s==\"FORWARD\"){\n\t\t\t\tint k;\tcin>>k;\n\t\t\t\tx=max(1,min(n,x+k*dx[dir]));\n\t\t\t\ty=max(1,min(m,y+k*dy[dir]));\n\t\t\t}\n\t\t\telse if(s==\"BACKWARD\"){\n\t\t\t\tint k;\tcin>>k;\n\t\t\t\tx=max(1,min(n,x-k*dx[dir]));\n\t\t\t\ty=max(1,min(m,y-k*dy[dir]));\n\t\t\t}\n\t\t\telse if(s==\"RIGHT\")\tdir=(dir+3)%4;\n\t\t\telse if(s==\"LEFT\")\tdir=(dir+1)%4;\n\t\t}\n\t\tcout<<x<<' '<<y<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <map>\n#include <set>\n#include <bitset>\n#include <numeric>\n#include <utility>\n#include <iomanip>\n#include <algorithm>\n#include <functional>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vint;\ntypedef vector<long long> vll;\ntypedef pair<int,int> pint;\ntypedef pair<long long, long long> pll;\n\n#define MP make_pair\n#define PB push_back\n#define ALL(s) (s).begin(),(s).end()\n#define EACH(i, s) for (__typeof__((s).begin()) i = (s).begin(); i != (s).end(); ++i)\n#define COUT(x) cout << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << endl\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, pair<T1,T2> P) \n{ return s << '<' << P.first << \", \" << P.second << '>'; }\ntemplate<class T> ostream& operator << (ostream &s, vector<T> P) \n{ for (int i = 0; i < P.size(); ++i) { if (i > 0) { s << \" \"; } s << P[i]; } return s; }\ntemplate<class T> ostream& operator << (ostream &s, vector<vector<T> > P) \n{ for (int i = 0; i < P.size(); ++i) { s << endl << P[i]; } return s << endl; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, map<T1,T2> P) \n{ EACH(it, P) { s << \"<\" << it->first << \"->\" << it->second << \"> \"; } return s; }\n\n\n\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\n\nint m, n;\nstring str;\n\nint main() {\n    while (cin >> m >> n) {\n        if (m == 0) break;\n        \n        int x = 1, y = 1, dir = 1;\n        while (getline(cin,str)) {\n            if (str == \"STOP\") {\n                cout << x << \" \" << y << endl;\n                break;\n            }\n            else if (str == \"LEFT\") dir = (dir + 1) % 4;\n            else if (str == \"RIGHT\") dir = (dir + 3) % 4;\n            else {\n                string sub; int num;\n                istringstream sin(str);\n                sin >> sub >> num;\n                if (sub == \"FORWARD\") {\n                    for (int i = 0; i < num; ++i) {\n                        int nx = x + dx[dir], ny = y + dy[dir];\n                        if (nx <= 0 || nx > m || ny <= 0 || ny > n) break;\n                        x = nx, y = ny;\n                    }\n                }\n                else {\n                    for (int i = 0; i < num; ++i) {\n                        int nx = x - dx[dir], ny = y - dy[dir];\n                        if (nx <= 0 || nx > m || ny <= 0 || ny > n) break;\n                        x = nx, y = ny;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int UP = 0, RIGHT = 1, DOWN = 2, LEFT = 3;\n\nint m, n;\nint i = 1, j = 1;\nint dir = UP;\n\nvoid fwd(int s) {\n  if (dir == UP)\n    j = min(j + s, n);\n  if (dir == DOWN)\n    j = max(j - s, 1);\n  if (dir == RIGHT)\n    i = min(i + s, m);\n  if (dir == LEFT)\n    i = max(i - s, 1);\n}\n\nint main() {\n  while (true) {\n    cin >> m >> n;\n    i = j = 1;\n    if (m == 0 && n == 0)\n      break;\n    while (true) {\n      string s;\n      int t = 0;\n      cin >> s;\n      if (s == \"BACKWARD\" || s == \"FORWARD\")\n        cin >> t;\n      if (s == \"STOP\")\n        break;\n      if (s == \"RIGHT\")\n        dir = (dir + 1) % 4;\n      if (s == \"LEFT\")\n        dir = (dir + 3) % 4;\n      if (s == \"BACKWARD\") {\n        dir = (dir + 2) % 4;\n        fwd(t);\n        dir = (dir + 2) % 4;\n      }\n      if (s == \"FORWARD\")\n        fwd(t);\n      // printf(\"(%d, %d) | Dir: %d | Command: %s %d\\n\", i, j, dir, s.c_str(),\n      // t);\n    }\n    cout << i << \" \" << j << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n  int i,j,n,w,l; \n  char com[10],turn[10];\n\n  /* dire\n    1\n   4 2\n    3\n  */\n\n  while(1){\n    //   cout<<\"aa\"<<endl;;\n    cin>> j>> i;\n    if(i==0&&j==0){\n      break;\n    }\n    \n   int dire=1;\n   w=1;\n   l=1;\n   \n   while(1){\n\n     //cout<<w<<\" \"<<l<<\" d:\"<<dire<<endl;//\n\n     cin>> com>> n; \n     //cout<< com<<\"  \"<< n<< endl;\n     if(strcmp(com,\"FORWARD\")==0){\n       if(dire==1){\n\t l+=n;\n\t if(l>i){\n\t   l=i;\n\t }\n       }\n       if(dire==2){\n\t w+=n;\n\t if(w>j){\n\t   w=j;\n\t }\n       }\n       if(dire==3){\n\t l-=n;\n\t if(l<1){\n\t   l=1;\n\t }\n       }\n       if(dire==4){\n\t w-=n;\n\t if(w<1){\n\t   w=1;\n\t }\n       }\n     }\n     else if(strcmp(com,\"BACKWARD\")==0){\n       if(dire==3){\n\t l+=n;\n\t if(l>i){\n\t   l=i;\n\t }\n       }\n       if(dire==4){\n\t w+=n;\n\t if(w>j){\n\t   w=j;\n\t }\n       }\n       if(dire==1){\n\t l-=n;\n\t if(l<1){\n\t   l=1;\n\t }\n       }\n       if(dire==2){\n\t w-=n;\n\t if(w<1){\n\t   w=1;\n\t }\n       }\n     }\n\n     cin>>turn;\n     if(strcmp(turn,\"STOP\")==0){\n       break;\n     }\n     //cout<<turn<<endl;\n     if(strcmp(turn,\"RIGHT\")==0){\n       if(dire!=4){\n\t dire++;\n       }else if(dire==4){\n\t dire=1;\n       }else{\n\t cout<<\"???\\n\";\n       }\n     }\n     if(strcmp(turn,\"LEFT\")==0){\n       if(dire!=1){\n\t dire--;\n       }else if(dire==1){\n\t dire=4;\n       }else{\n\t cout<<\"???\\n\";\n       }\n     }\n   }\n   cout<<w<<\" \"<<l<<endl;\n   \n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <string>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nint w,h;\nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\nint main(void){\n\twhile(1){\n\t\tscanf(\"%d %d\",&w,&h);\n\t\tif(w+h==0)break;\n\t\tint x=1,y=1,dir=0;\n\t\twhile(1){\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\tif(str==\"STOP\")break;\n\t\t\tif(str==\"LEFT\"){\n\t\t\t\tdir=(dir+3)%4;\n\t\t\t}\n\t\t\tif(str==\"RIGHT\"){\n\t\t\t\tdir=(dir+1)%4;\t\n\t\t\t}\n\t\t\tif(str==\"FORWARD\"){\n\t\t\t\tint d;\n\t\t\t\tscanf(\"%d\",&d);\n\n\t\t\t\twhile(d>0){\n\t\t\t\t\tint nx=x+dx[dir],ny=y+dy[dir];\n\t\t\t\t\tif(nx>=1 && nx<=w && ny>=1 && ny<=h){\n\t\t\t\t\t\tx=nx;\n\t\t\t\t\t\ty=ny;\n\t\t\t\t\t}\n\t\t\t\t\td--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(str==\"BACKWARD\"){\n\t\t\t\tint d;\n\t\t\t\tscanf(\"%d\",&d);\n\t\t\t\twhile(d>0){\n\t\t\t\t\tint nx=x+dx[(dir+2)%4],ny=y+dy[(dir+2)%4];\n\t\t\t\t\tif(nx>=1 && nx<=w && ny>=1 && ny<=h){\n\t\t\t\t\t\tx=nx;\n\t\t\t\t\t\ty=ny;\n\t\t\t\t\t}\n\t\t\t\t\td--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",x,y);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define all(in) in.begin(),in.end()\n#define pb(in,a) in.push_back(a)\nusing namespace std;\nint a[4]={0,1,0,-1};\nint b[4]={1,0,-1,0};\nint main(){\n  int n,m;\n  while(cin>>n>>m,n||m){\n    int to=0;\n    string s;\n    int x=1,y=1;\n    while(1){\n      cin>>s;\n      if(s==\"FORWARD\"){\n\tint tmp;\n\tcin>>tmp;\n\tx+=tmp*a[to];\n\ty+=tmp*b[to];\n      }else if(s==\"BACKWARD\"){\n\tint tmp;\n\tcin>>tmp;\n\tx-=tmp*a[to];\n\ty-=tmp*b[to];\n      }else if(s==\"STOP\")break;\n      else if(s==\"LEFT\")to--;\n      else to++;\n\n      if(to>3)to=0;\n      else if(to<0)to=3;\n\n      if(x>n)x=n;\n      else if(x<1)x=1;\n      if(y>m)y=m;\n      else if(y<1)y=1;\n      //cout<<x<<\" \"<<y<<endl;\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream> // C++の入出力\n#include <stdio.h> // C の入出力\n#include <algorithm> // sort などのアルゴリズム\n#include <string.h> // C の文字列用\n#include <ctype.h> // C の文字種用\n#include <string> // C++の文字列\nusing namespace std;\nint main(void){\n    while(1){\n        int yoko,tate;\n        cin>>yoko>>tate;\n        if(yoko==0&&tate==0)break;\n        int x=1,y=1,muki=1;//１上、２右、３下、４左\n        while(1){\n            string in;\n            cin>>in;\n            if(in==\"STOP\"){\n                cout<<x<<\" \"<<y<<endl;\n                break;\n            }\n            if(in==\"FORWARD\"){\n                int susumu;\n                cin>>susumu;\n                switch (muki) {\n                    case 1:\n                        y+=susumu;\n                        break;\n                    case 2:\n                        x+=susumu;\n                        break;\n                    case 3:\n                        y-=susumu;\n                        break;\n                    case 4:\n                        x-=susumu;\n                        break;\n                }\n            }\n            if(in==\"BACKWARD\"){\n                int susumu;\n                cin>>susumu;\n                switch (muki) {\n                    case 1:\n                        y-=susumu;\n                        break;\n                    case 2:\n                        x-=susumu;\n                        break;\n                    case 3:\n                        y+=susumu;\n                        break;\n                    case 4:\n                        x+=susumu;\n                        break;\n                }\n            }\n            if(x>yoko){\n                x=yoko;\n            }else if(x<1){\n                x=1;\n            }else if(y>tate){\n                y=tate;\n            }else if(y<1){\n                y=1;\n            }\n            if(in==\"RIGHT\"){\n                switch(muki){\n                    case 1:\n                        muki=2;\n                        break;\n                    case 2:\n                        muki=3;\n                        break;\n                    case 3:\n                        muki=4;\n                        break;\n                    case 4:\n                        muki=1;\n                        break;\n                }\n            }\n            if(in==\"LEFT\"){\n                switch(muki){\n                    case 1:\n                        muki=4;\n                        break;\n                    case 2:\n                        muki=1;\n                        break;\n                    case 3:\n                        muki=2;\n                        break;\n                    case 4:\n                        muki=3;\n                        break;\n                }\n            }\n        } \n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int n,m,num;\n  const int dx[4] = {0,-1,0,1};\n  const int dy[4] = {1,0,-1,0};\n  string op;\n  int mv=0;\n  int x=1,y=1;\n\n  while(true)\n    {\n      cin >> n >> m;\n      if(n == 0 && m == 0)break;\n      mv=0;\n      x=1;\n      y=1;\n\n      while(true)\n\t{\n\t  cin >> op;\n\t  if(op == \"STOP\")\n\t    {\n\t      cout << x << \" \" << y << endl;\n\t      break;\n\t    }\n\t  else if(op == \"LEFT\")\n\t    {\n\t      if(mv == 3)mv=0;\n\t      else mv+=1;\n\t    }\n\t  else if(op == \"RIGHT\")\n\t    {\n\t      if(mv == 0)mv=3;\n\t      else mv-=1;\n\t    }\n\t  else \n\t    {\n\t      cin >> num;\n\t     \n\t      if(op == \"FORWARD\")\n\t\t{\n\t\t  if((x+dx[mv]*num > 0) && (x+dx[mv]*num<=n) && (y+dy[mv]*num > 0) && (y+dy[mv]*num<=m))\n\t\t    {\n\t\t      x+=dx[mv]*num;\n\t\t      y+=dy[mv]*num;\n\t\t    }\n\t\t  else if(x+dx[mv]*num >= n)\n\t\t    {\n\t\t      x=n;\n\t\t    }\n\t\t  else if(y+dy[mv]*num >= m)\n\t\t    {\n\t\t      y=m;\n\t\t    }\n\t\t  else if(x+dx[mv]*num <= 0)\n\t\t    {\n\t\t      x=1;\n\t\t    }\n\t\t  else if(y+dy[mv]*num <= 0)\n\t\t    {\n\t\t      y=1;\n\t\t    }\n\t\t  \n\t\t}\n\t      else \n\t\t{\n\t\t  if((x-dx[mv]*num > 0) && (x-dx[mv]*num<=n) && (y-dy[mv]*num > 0) && (y-dy[mv]*num<=m))\n\t\t    {\n\t\t      x -= dx[mv]*num;\n\t\t      y -= dy[mv]*num;\n\t\t    }\n\t\t  else if(x+dx[mv]*num >= n)\n\t\t    {\n\t\t      x=n;\n\t\t    }\n\t\t  else if(y+dy[mv]*num >= m)\n\t\t    {\n\t\t      y=m;\n\t\t    }\n\t\t  else if(x+dx[mv]*num <= 0)\n\t\t    {\n\t\t      x=1;\n\t\t    }\n\t\t  else if(y+dy[mv]*num <= 0)\n\t\t    {\n\t\t      y=1;\n\t\t    }\n\t\t}\n\t     \n\t    }\n\t  //cout << \"mv = \" << mv << \", \"<< x << \" \" << y << endl;\n\n\t}\n\n\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <set>\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,j) FOR(i,0,j)\n#define mp std::make_pair\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int,int> P;\ntypedef std::pair<int,P> State;\n\nconst int INF = 1001001001;\n\n// (北東南西)\nconst int dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};\n\nint main(){\n    int C, R;\n    while(std::cin >> C >> R, C){\n        int x = 1, y = 1, direction = 0;\n        std::string command;\n        while(std::cin >> command, command != \"STOP\"){\n            if(command == \"FORWARD\"){\n                int k;\n                std::cin >> k;\n\n                x = std::min(std::max(x+k*dx[direction], 1), C);\n                y = std::min(std::max(y+k*dy[direction], 1), R);\n            }else if(command == \"BACKWARD\"){\n                int k;\n                std::cin >> k;\n\n                int counterDirection = (direction + 2) % 4;\n                x = std::min(std::max(x+k*dx[counterDirection], 1), C);\n                y = std::min(std::max(y+k*dy[counterDirection], 1), R);\n            }else if(command == \"LEFT\"){\n                direction = (direction - 1 + 4) % 4;\n            }else if(command == \"RIGHT\"){\n                direction = (direction + 1) % 4;\n            }\n        }\n\n        std::cout << x << \" \" << y << std::endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nint main(){\n\tint x,y,dir;\n\tint w,h;\n\tstring command;\n\twhile(cin>>w>>h,w|h){\n\t\tx=y=1;dir=0;\n\t\twhile(cin>>command,command!=\"STOP\"){\n\t\t\tif(command==\"FORWARD\"){\n\t\t\t\tint s;\n\t\t\t\tcin>>s;\n\t\t\t\tfor(int i=0;i<s;i++){\n\t\t\t\t\tint nx=x+dx[dir],ny=y+dy[dir];\n\t\t\t\t\tif(nx==0||w<nx||ny==0||h<ny)break;\n\t\t\t\t\tx=nx;y=ny;\n\t\t\t\t}\n\t\t\t}else if(command==\"RIGHT\"){\n\t\t\t\tdir = (dir+1)%4;\n\t\t\t}else if(command==\"LEFT\"){\n\t\t\t\tdir = (dir+3)%4;\n\t\t\t}else if(command==\"BACKWARD\"){\n\t\t\t\tint s;\n\t\t\t\tcin>>s;\n\t\t\t\tfor(int i=0;i<s;i++){\n\t\t\t\t\tint nx=x+dx[(dir+2)%4],ny=y+dy[(dir+2)%4];\n\t\t\t\t\tif(nx==0||w<nx||ny==0||h<ny)break;\n\t\t\t\t\tx=nx;y=ny;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<x<<' '<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <numeric>\n#include <map>\n#include <vector>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <cmath>\n#include <cctype>\n#include <queue>\n#include <algorithm>\n#include <memory>\n#include <memory.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\ntypedef pair<P,P> P2;\nconst int INF = 1 << 30;\nconst double EPS = 1E-9;\n\nint dy[] = {\n\t1, 0, -1, 0\n};\n\nint dx[] = {\n\t0, 1, 0, -1\n};\n\nint main(){\n\tint w, h;\n\twhile(cin >> w >> h && (w || h)){\n\t\tstring ord;\n\t\tint y = 1;\n\t\tint x = 1;\n\t\tint d = 0;\n\t\tint m = 0;\n\t\tbool f = false;\n\t\twhile(cin >> ord && ord != \"STOP\"){\n\t\t\tif(f) continue;\n\t\t\tif(ord == \"RIGHT\"){\n\t\t\t\td = (d+1) % 4;\n\t\t\t}else if(ord == \"LEFT\"){\n\t\t\t\td = (d+3)%4;\n\t\t\t}else if(ord == \"BACKWARD\"){\n\t\t\t\tcin >> m;\n\t\t\t\ty -= m * dy[d];\n\t\t\t\tif(y > h){\n\t\t\t\t\tf = true;\n\t\t\t\t\ty = h;\n\t\t\t\t}\n\t\t\t\tif(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t\tf = true;\n\t\t\t\t}\n\t\t\t\tx -= m * dx[d];\n\t\t\t\tif(x > w){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = w;\n\t\t\t\t}\n\t\t\t\tif(x < 1){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tcin >> m;\n\t\t\t\ty += m * dy[d];\n\t\t\t\tif(y > h){\n\t\t\t\t\tf = true;\n\t\t\t\t\ty = h;\n\t\t\t\t}\n\t\t\t\tif(y < 1){\n\t\t\t\t\tf = true;\n\t\t\t\t\ty = 1;\n\t\t\t\t}\n\t\t\t\tx += m * dx[d];\n\t\t\t\tif(x > w){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = w;\n\t\t\t\t}\n\t\t\t\tif(x < 1){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << x << \" \" << y << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main()\n{\n  int dx[4]={0,1,0,-1};\n  int dy[4]={1,0,-1,0};\n  int m,n,x,y,d,k;\n  string s;\n\n  while(cin>>m>>n,m||n){\n    x=y=1;\n    d=0;\n    while(cin>>s,s!=\"STOP\"){\n      if(s==\"LEFT\")d--;\n      if(s==\"RIGHT\")d++;\n      d=d%4;\n      if(s==\"FORWARD\"){cin>>k;x+=k*dx[d];y+=k*dy[d];}\n      if(s==\"BACKWARD\"){cin>>k;x-=k*dx[d];y-=k*dy[d];}\n      if(x<1)x=1;\n      if(m<x)x=m;\n      if(y<1)y=1;\n      if(n<y)y=n;\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main(){\n\t\n\tint x,y,a,maxx,maxy,mode;\n\tstring s;\n\t\n\twhile(1){\n\t\t\n\t\tx=1; y=1; mode=0;\n\t\t\n\t\tcin >> maxx >> maxy;\n\t\t\n\t\tif(maxx==0 && maxy==0)break;\n\t\t\n\t\twhile(1){\n\t\t\t\n//\t\t\tcout << x << \" \" << y << endl;\n\t\t\n\t\t\tcin >> s;\n\t\t\t\n\t\t\t\n\t\t\tif(s == \"FORWARD\"){\n\t\t\t\t\n\t\t\t\tcin >> a;\n\t\t\t\tif(mode==0)y=y+a;\n\t\t\t\telse if(mode==1) x=x+a;\n\t\t\t\telse if (mode==2) y=y-a;\n\t\t\t\telse if(mode==3) x=x-a;\n\t\t\t\t\n\t\t\t}\n\t\t\telse if(s == \"BACKWARD\"){\n\t\t\t\t\n\t\t\t\tcin >> a;\n\t\t\t\tif(mode==0)y=y-a;\n\t\t\t\telse if(mode==1) x=x-a;\n\t\t\t\telse if (mode==2) y=y+a;\n\t\t\t\telse if(mode==3) x=x+a;\t\t\t\t\n\t\t\t\t\n\t\t\t}\t\t\n\t\t\t\n\t\t\telse if(s == \"RIGHT\"){\n\t\t\t\tmode = (mode+1)%4;\n\t\t\t}\n\t\t\t\n\t\t\telse if(s == \"LEFT\"){\n\t\t\t\tmode = (mode+3)%4;\n\t\t\t}\n\t\t\t\n\t\t\telse if(s == \"STOP\") break;\n\t\t\t\n\t\t\tif(1 > x) x=1;\n\t\t\tif(x > maxx) x=maxx;\n\t\t\tif(1 > y) y=1;\n\t\t\tif(y > maxy) y=maxy;\n\t\t}\n\t\t\n\t\tcout << x << \" \" << y << endl;\n\t\t\n\t}\n\t\n\treturn 0;\n\t\t\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\t// require sort next_permutation count __gcd reverse etc.\n#include <cstdlib>\t// require abs exit atof atoi \n#include <cstdio>\t\t// require scanf printf\n#include <functional>\n#include <numeric>\t// require accumulate\n#include <cmath>\t\t// require fabs\n#include <climits>\n#include <limits>\n#include <cfloat>\n#include <iomanip>\t// require setw\n#include <sstream>\t// require stringstream \n#include <cstring>\t// require memset\n#include <cctype>\t\t// require tolower, toupper\n#include <fstream>\t// require freopen\n#include <ctime>\t\t// require srand\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define ALL(A) A.begin(), A.end()\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\n\nconst int dy[] = {  1, 0,-1, 0 };\nconst int dx[] = {  0, 1, 0,-1 };\n\nint main()\n{\n//\tcut here before submit \n//\tfreopen (\"testcase.WYR\", \"r\", stdin );\n\tint m, n;\n\twhile (scanf (\"%d %d\", &m, &n ), m, n ){\n\t\tstring str = \"\";\n\t\tint x = 0, y = 0, dir = 0;\n\t\twhile (getline (cin, str ) ){\n\t\t\tstringstream ss(str );\n\t\t\tstring com = \"\"; int arg = 0;\n\t\t\tss >> com;\n\t\t\tif (com == \"STOP\" ){\n\t\t\t\tprintf (\"%d %d\\n\", x+1, y+1 );\n\t\t\t\tbreak;\n\t\t\t}else\n\t\t\tif (com == \"LEFT\" ){\n\t\t\t\tdir = (dir - 1 + 4 )%4;\n\t\t\t}else\n\t\t\tif (com == \"RIGHT\" ){\n\t\t\t\tdir = (dir + 1 ) % 4;\n\t\t\t}else{\n\t\t\t\tss >> arg;\n\t\t\t\tif (com == \"FORWARD\" ){\n\t\t\t\t\ty = y + arg*dy[dir];\n\t\t\t\t\tx = x + arg*dx[dir];\n\t\t\t\t}else\n\t\t\t\tif (com == \"BACKWARD\" ){\n\t\t\t\t\ty = y + arg*dy[(dir+2) % 4];\n\t\t\t\t\tx = x + arg*dx[(dir+2) % 4];\n\t\t\t\t} // end if\n\t\t\t\tif (x < 0 ) x = 0;\n\t\t\t\tif (x >= m ) x = m - 1;\n\t\t\t\tif (y < 0 ) y = 0;\n\t\t\t\tif (y >= n ) y = n - 1;\n\t\t\t} // end if\n//\t\t\tcout << '(' << x << ',' << y << \") dir: \" << dir << endl;\n\t\t} // end while\n\t} // end while\t\t \n\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nvoid move(int direction, int w, int h, pair<int, int>& coord) {\n    int k;\n    cin >> k;\n    switch (direction) {\n    case 0:\n        coord.second += min(k, h - coord.second);\n        break;\n    case 1:\n        coord.first += min(k, w - coord.first);\n        break;\n    case 2:\n        coord.second -= min(k, coord.second - 1);\n        break;\n    case 3:\n        coord.first -= min(k, coord.first - 1);\n        break;\n    }\n}\n\nint main() {\n    while (true) {\n        int w, h;\n        cin >> w >> h;\n        if ((w | h) == 0) {\n            break;\n        }\n        pair<pair<int, int>, int> robot = make_pair(make_pair(1, 1), 0);\n        string command = \"\";\n        while (command != \"STOP\") {\n            cin >> command;\n            if (command == \"FORWARD\") {\n                move(robot.second, w, h, robot.first);\n            } else if (command == \"BACKWARD\") {\n                move((robot.second + 2) % 4, w, h, robot.first);\n            } else if (command == \"RIGHT\") {\n                robot.second = (robot.second + 1) % 4;\n            } else if (command == \"LEFT\") {\n                robot.second = (robot.second + 3) % 4;\n            }\n        }\n        cout << robot.first.first << \" \" << robot.first.second << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <stack>\n#include <string>\nusing namespace std;\n\nint main(){\n\twhile(1){\n\t\tint a, b;\n\t\tscanf(\" %d %d\", &a, &b);\n\t\tif(a==0) break;\n\t\t\n\t\tstring s;\n\t\tint dx[4]={0,1,0,-1}, dy[4]={1,0,-1,0};\n\t\tint dir=0;\n\t\tint x=1, y=1;\n\t\t\n\t\twhile(getline(cin, s)){\n\t\t\tstack<int> st;\n\t\t\t\n\t\t\tif(s==\"STOP\") break;\n\t\t\telse if(s[0]=='R') dir=(dir+1)%4;\n\t\t\telse if(s[0]=='L') dir=(dir-1+4)%4;\n\t\t\telse if(s[0]=='F'){\n\t\t\t\tst.push(s[8]-'0');\n\t\t\t\tfor(int i=9; i<s.size(); ++i){\n\t\t\t\t\tint v=st.top();\n\t\t\t\t\tst.pop();\n\t\t\t\t\tst.push(10*v+s[i]-'0');\n\t\t\t\t}\n\t\t\t\tint k=st.top();\n\t\t\t\tst.pop();\n\t\t\t\t\n\t\t\t\tx+=k*dx[dir];\n\t\t\t\ty+=k*dy[dir];\n\t\t\t\t\n\t\t\t\tif(x<1) x=1;\n\t\t\t\tif(x>a) x=a;\n\t\t\t\tif(y<1) y=1;\n\t\t\t\tif(y>b) y=b;\n\t\t\t\t\n\t\t\t}\n\t\t\telse if(s[0]=='B'){\n\t\t\t\tst.push(s[9]-'0');\n\t\t\t\tfor(int i=10; i<s.size(); ++i){\n\t\t\t\t\tint v=st.top();\n\t\t\t\t\tst.pop();\n\t\t\t\t\tst.push(10*v+s[i]-'0');\t\t\n\t\t\t\t}\n\t\t\t\tint k=st.top();\n\t\t\t\tst.pop();\n\t\t\t\t\n\t\t\t\tx-=k*dx[dir];\n\t\t\t\ty-=k*dy[dir];\n\n\t\t\t\tif(x<1) x=1;\n\t\t\t\tif(x>a) x=a;\n\t\t\t\tif(y<1) y=1;\n\t\t\t\tif(y>b) y=b;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint w, h, k, dir, y, x;\n\nvoid adjust()\n{\n  if (x < 1) x = 1;\n  else if (x > w) x = w;\n  if (y < 1) y = 1;\n  else if (y > h) y = h;\n}\n\nint main()\n{\n  while (scanf(\"%d%d\\n\", &w, &h), w|h) {\n    static const int dy[] = {1, 0, -1, 0};\n    static const int dx[] = {0, 1, 0, -1};\n    char buffer[256];\n    x = y = 1;\n    dir = 0;\n    for (;;) {\n      fgets(buffer, sizeof(buffer), stdin);\n      switch (buffer[0]) {\n      case 'F':\n        sscanf(buffer, \"FORWARD %d\", &k);\n        y += k * dy[dir];\n        x += k * dx[dir];\n        adjust();\n        break;\n      case 'B':\n        sscanf(buffer, \"BACKWARD %d\", &k);\n        y -= k * dy[dir];\n        x -= k * dx[dir];\n        adjust();\n        break;\n      case 'R':\n        dir = (dir + 1) % 4;\n        break;\n      case 'L':\n        dir = (dir + 3) % 4;\n        break;\n      case 'S':\n        goto stop;\n      }\n    }\nstop:\n    printf(\"%d %d\\n\", x, y);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n  int m,n;\n  int x,y,d;\n  string command;\n  int step;\n\n  while(1){\n    cin >> m >> n;\n    if(!m && !n)break;\n\n    x = 1;\n    y = 1;\n    d = 0;\n\n    while(1){\n      cin >> command;\n      if(command == \"STOP\")break;\n      \n      if(command == \"LEFT\"){\n\td--;\n\tif(d < 0)d += 4;\n      }\n      else if(command == \"RIGHT\"){\n\td++;\n\tif(d > 4)d -= 4;\n      }\n      else{\n\tcin >> step;\n\tif(command == \"BACKWARD\")step *= -1;\n\tif(d == 0)y += step;\n\tif(d == 1)x += step;\n\tif(d == 2)y -= step;\n\tif(d == 3)x -= step;\n\n\tif(y < 1)y = 1;\n\tif(y > n)y = n;\n\tif(x < 1)x = 1;\n\tif(x > m)x = m;\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n\tint w,h;\n\tint dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\n\twhile(true){\n\tcin>>w>>h;\n\tif(w==0&&h==0)break;\n\tstring a;\n\tint s=0;\n\tint x=1,y=1,z;\n\twhile(true){\n\t\tcin>>a;\n\t\tif(a==\"STOP\")break;\n\t\tif(a==\"RIGHT\")s=(s+1)%4;\n\t\tif(a==\"LEFT\")s=(s+3)%4;\n\t\tif(a==\"FORWARD\"){\n\t\t\tcin>>z;\n\t\t\tx+=dx[s]*z,y+=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t\tif(a==\"BACKWARD\"){\n\t\t\tcin>>z;\n\t\t\tx-=dx[s]*z,y-=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t}\n\tcout<<x<<\" \"<<y<<endl;\n\t}\n\twhile(true){\n\tcin>>w;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\n\n//1104\n\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\n\n//d:n-0 e-1 s-2 w-3\n\nint main(){\n\tint w[2], d, p[2];\n\tstring s;\n\tint n;\n\twhile(cin>>w[0]>>w[1]){\n\t\tif(w[0] == 0 && w[1] == 0) break;\n\t\td = 0;\n\t\tp[0] = p[1] = 1;\n\t\twhile(cin>>s && s != \"STOP\"){\n\t\t\t// cout<<d<<endl;\n\t\t\t// cout<<p[0]<<\" \"<<p[1]<<endl;\n\t\t\tif(s == \"FORWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tp[d % 2] = p[d % 2] + (d/2==0?n:-n);\n\t\t\t}\n\t\t\telse if(s == \"RIGHT\") d = (d + 1) % 4;\n\t\t\telse if(s == \"LEFT\") d = (d + 3) % 4;\n\t\t\telse if(s == \"BACKWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tp[d % 2] = p[d % 2] + (d/2==0?-n:n);\n\t\t\t}\n\t\t\tp[d % 2] = min(w[(d + 1) % 2], p[d % 2]);\n\t\t\tp[d % 2] = max(1, p[d % 2]);\n\t\t}\n\t\t//cout<<d<<endl;\n\t\tcout<<p[1]<<\" \"<<p[0]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nint main(){\n    int lx,ly;\n    cin >> lx >> ly;\n    do{\n        int x=1,y=1,n,d=0;\n        char a[7];\n        cin >> a;\n        while(a[0]!='S'){\n            n=0;\n            switch(a[0]){\n                case'F':\n                    cin >> n;\n                    break;\n                case'B':\n                    cin >> n;\n                    n*=-1;\n                    break;\n                case'L':\n                    d-=1;\n                    break;\n                case'R':\n                    d+=1;\n                    break;\n            }\n            if (d==-1)\n                d=3;\n            if (d==4)\n                d=0;\n            if (n!=0)\n                switch(d){\n                    case 0:\n                        y+=n;\n                        break;\n                    case 1:\n                        x+=n;\n                        break;\n                    case 2:\n                        y-=n;\n                        break;\n                    case 3:\n                        x-=n;\n                        break;\n                }\n            if (x>lx)\n                x=lx;\n            if (x<1)\n                x=1;\n            if (y>ly)\n                y=ly;\n            if (y<1)\n                y=1;\n            cin >> a;\n        }\n        cout << x <<' '<< y << endl;\n        cin >> lx >> ly;\n    }while (!(lx==0&&ly==0));\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int mv[4][3]=\n    {{0,1,1}, //forward\n     {-1,0,0},//left\n     {0,-1,0},//backward\n     {1,0,0}};//right\n  int n,m,num,x,y;\n  string op;\n\n  while(true){\n    cin >> n >> m;\n    if(n == 0 && m == 0)break;\n    x=1;y=1;\n\n    while(true){\n      cin >> op;\n      if(op == \"STOP\")break;\n      else if(op == \"LEFT\")\n\t{\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i != 3){\n\t\t    mv[i][2]=0;\n\t\t    mv[i+1][2]=1;\n\t\t  }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      mv[0][2]=1;\n\t\t      mv[3][2]=0;\n\t\t    }\n\t\t  else cout << \"********arienai********\" << endl;\n\t\t  break;\n\t\t}\n\t    }\n\t}\n      else if(op == \"RIGHT\")\n\t{//\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      mv[0][2]=0;\n\t\t      mv[3][2]=1;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      mv[i][2]=0;\n\t\t      mv[i-1][2]=1;\n\t\t    }\n\t\t  break;\n\t\t}\n\t    }\n\t}//\n      else if(op == \"FORWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x-num <= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y-num <= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=n;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n else if(op == \"BACKWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=n;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n\n      //cout << \"op = \" << op << \",num =  \" << num << \", \"  << x << \" \" << y << endl; \n\n    }\n    cout << x << \" \" << y << endl; \n\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#define k 0\n#define h 1\n#define m 2\n#define n 3\n#define r 11\n#define l 12\nusing namespace std;\n\nint zx, zy, joutai, xlen, ylen;\n\nvoid kita(int y);\nvoid minami(int y);\nvoid higasi(int y);\nvoid nisi(int y);\n\nvoid turn(int x){\n\tif(x == r){\n\t\tif(joutai >= 3){\n\t\t\tjoutai = 0;\n\t\t} else{\n\t\t\tjoutai++;\n\t\t}\n\t} else if(x == l){\n\t\tif(joutai <= 0){\n\t\t\tjoutai = 3;\n\t\t} else{\n\t\t\tjoutai--;\n\t\t}\n\t}\n}\n\nvoid sousa(int y){\n\tif(joutai == k) kita(y);\n\tif(joutai == h) higasi(y);\n\tif(joutai == m) minami(y);\n\tif(joutai == n) nisi(y);\n}\n\nint main(){\n\tint num;\n\tstring str;\n\twhile(cin >>xlen >>ylen){\n\t\tif(xlen == 0 && ylen == 0) break;\n\t\tzx = 1;\n\t\tzy = 1;\n\t\tjoutai = k;\n\t\twhile(cin >>str){\n\t\t\tif(str == \"STOP\") break;\n\t\t\telse if(str == \"RIGHT\") turn(r);\n\t\t\telse if(str == \"LEFT\") turn(l);\n\t\t\telse{\n\t\t\t\tcin >>num;\n\t\t\t\tif(str == \"FORWARD\") sousa(num);\n\t\t\t\tif(str == \"BACKWARD\") sousa(num * -1);\n\t\t\t}\n\t\t}\n\t\tcout <<zx <<\" \" <<zy <<endl;\n\t}\n\treturn 0;\n}\n\nvoid kita(int y){\n\tif(zy + y <= ylen && zy + y > 0) zy += y;\n\telse if(zy + y <= 0) zy = 1;\n\telse zy = ylen;\n}\n\nvoid minami(int y){\n\tif(zy - y >= 1 && zy + y > 0) zy -= y;\n\telse if(zy + y <= 0) zy = 1;\n\telse zy = 1;\n}\nvoid higasi(int y){\n\tif(zx + y <= xlen && zx + y > 0) zx += y;\n\telse if(zx + y <= 0) zx = 1;\n\telse zx = xlen;\n}\nvoid nisi(int y){\n\tif(zx - y >= 1 && zx + y > 0) zx -= y;\n\telse if(zx + y <= 0) zx = 1;\n\telse zx = 1;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n  while(1) {\n    int w, h;\n    cin >> w >> h;\n    if(w == 0 && h == 0) break;\n\n    int x = 1;\n    int y = 1;\n    int d[4][2] = {{1,0},{0,1},{-1,0},{0,-1}};\n    int pd = 1;\n    while(1) {\n      string str;\n      cin >> str;\n      if(str == \"FORWARD\" || str == \"BACKWARD\") {\n\tint l;\n\tcin >> l;\n\tif(str == \"BACKWARD\") {\n\t  l *= -1;\n\t}\n\tx += d[pd][0] * l;\n\ty += d[pd][1] * l;\n\tif(x < 1) x = 1;\n\tif(x > w) x = w;\n\tif(y < 1) y = 1;\n\tif(y > h) y = h;\n      }\n\n      if(str == \"RIGHT\") {\n\tpd = (pd+3)%4;\n      }\n      if(str == \"LEFT\") {\n\tpd = (pd+1)%4;\n      }\n      if(str == \"STOP\") {\n\tcout << x << ' ' << y << endl;\n\tbreak;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n\tint w, h, k, x, y, a;\n\tstruct {int x, y;} d[4] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\tstring s;\n\twhile (cin >> w >> h, w && h)\n\t{\n\t\tx = y = 1, a = 0;\n\t\twhile (cin >> s, s != \"STOP\")\n\t\t{\n\t\t\tif (s == \"FORWARD\")\n\t\t\t{\n\t\t\t\tcin >> k;\n\t\t\t\tfor (; k > 0; k--)\n\t\t\t\t\tif (0 < x+d[a].x && x+d[a].x <= w && 0 < y+d[a].y && y+d[a].y <= h)\n\t\t\t\t\t\tx += d[a].x, y += d[a].y;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (s == \"BACKWARD\")\n\t\t\t{\n\t\t\t\tcin >> k;\n\t\t\t\tfor (; k > 0; k--)\n\t\t\t\t\tif (0 < x-d[a].x && x-d[a].x <= w && 0 < y-d[a].y && y-d[a].y <= h)\n\t\t\t\t\t\tx -= d[a].x, y -= d[a].y;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (s == \"RIGHT\")\n\t\t\t\tif (a+1 < 4)\n\t\t\t\t\ta++;\n\t\t\t\telse\n\t\t\t\t\ta = 0;\n\t\t\telse if (s == \"LEFT\")\n\t\t\t\tif (0 <= a-1)\n\t\t\t\t\ta--;\n\t\t\t\telse\n\t\t\t\t\ta = 3;\n\t\t}\n\t\tcout << x << \" \" << y << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nstring cmd;\nint m, n, x, y, dd[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}, d;\n\nint main(){\n    cin >> m >> n;\n    while( m + n > 0 ){\n        d = 0;\n        x = 1, y = 1;\n        while( getline(cin, cmd) ){\n            if( cmd == \"STOP\" ) break;\n            else if( cmd == \"RIGHT\" ) d = (d+1)%4;\n            else if( cmd == \"LEFT\" ) d = (d+3)%4;\n            else if( cmd[0] == 'B' || cmd[0] == 'F' ){\n                int i = 9 - (cmd[0] - 'B')/4, j = 0;\n                while( i < cmd.length() ){\n                    j *= 10;\n                    j += cmd[i] - '0';\n                    i++;\n                }\n                x += dd[d][1] * j * (cmd[0] - 'D') / 2;\n                y += dd[d][0] * j * (cmd[0] - 'D') / 2;\n                if( x < 1 ) x = 1;\n                if( x > m ) x = m;\n                if( y < 1 ) y = 1;\n                if( y > n ) y = n;\n            }\n        }\n        cout << x << ' ' << y << endl;\n        cin >> m >> n;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n\nusing namespace std;\n\ntypedef struct{\n  int x;\n  int y;\n}Point;\n\nPoint now;\nint max_x, max_y;\nint dir;\nint mx[4] = {0,1,0,-1};\nint my[4] = {1,0,-1,0};\n\nvoid change(string in){\n  if(in[0] == 'R'){\n    if(dir == 3) dir = 0;\n    else dir++;\n  }else{\n    if(dir == 0) dir = 3;\n    else dir--;\n  }\n}\n\nvoid move(string s,int num){\n  if(s[0] == 'F'){\n    for(int i = 0; i < num; i++){\n      if(now.x+mx[dir] > max_x || now.x+mx[dir] <= 0 ||\n\t now.y+my[dir] > max_y || now.y+my[dir] <= 0) break;\n      now.x += mx[dir];\n      now.y += my[dir];\n    } \n  }else{\n    for(int i = 0; i < num; i++){\n      if(now.x+mx[dir] > max_x || now.x+mx[dir] <= 0 ||\n\t now.y+my[dir] > max_y || now.y+my[dir] <= 0) break;\n      now.x -= mx[dir];\n      now.y -= my[dir];\n    } \n  }\n}\n\nint main(){\n  while(cin >> max_x >> max_y && max_x+ max_y){\n    dir = 0;\n    now.x = now.y = 1;\n    while(1){\n      string s;  int pos;\n      cin >> s;\n      if(s == \"STOP\") break;\n      if(s == \"RIGHT\"|| s == \"LEFT\") change(s);\n      else {\n\tcin >> pos;\n\tmove(s,pos);\n      }\n    }\n    cout << now.x << \" \" << now.y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <fstream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <assert.h>\n\t\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define ALL(s) (s).begin(),(s).end()\n#define ITE(c) typeof((c).begin())\n\n#define clr(a) memset((a),0,sizeof(a))\n#define nclr(a) memset((a),-1,sizeof(a))\n#define pb push_back\n#define INRANGE(x,s,e) ((s)<=(x) && (x)<(e))\n#define MP(a,b) make_pair((a),(b))\n\nusing namespace std;\n\n#define MAX 1000000\n\nstruct POS{int x,y;} pos;\nint w, h, n;\n\nbool rot(string cmd,char *dir){\n\tif(cmd==\"LEFT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='l';break;\n\t\t\tcase 'l':*dir='d';break;\n\t\t\tcase 'd':*dir='r';break;\n\t\t\tcase 'r':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}else if(cmd==\"RIGHT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='r';break;\n\t\t\tcase 'r':*dir='d';break;\n\t\t\tcase 'd':*dir='l';break;\n\t\t\tcase 'l':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nvoid go(string cmd,char *dir,int n){\n\tif(cmd==\"FORWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':\n\t\t\t\tif(h>=pos.y+n&&pos.y+n>=1){\n\t\t\t\t\tpos.y+=n;\n\t\t\t\t}break;\n\t\t\tcase 'r':\n\t\t\t\tif(w>=pos.x+n&&pos.x+n>=1){\n\t\t\t\t\tpos.x+=n;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tif(h>=pos.y-n&&pos.y-n>=1){\n\t\t\t\t\tpos.y-=n;\n\t\t\t\t}break;\n\t\t\tcase 'l':\n\t\t\t\tif(w>=pos.x-n&&pos.x-n>=1){\n\t\t\t\t\tpos.x-=n;\n\t\t\t\t}break;\n\t\t}\n\t}else if(cmd==\"BACKWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':\n\t\t\t\tif(h>=pos.y-n&&pos.y-n>=1){\n\t\t\t\t\tpos.y-=n;\n\t\t\t\t}break;\n\t\t\tcase 'r':\n\t\t\t\tif(w>=pos.x-n&&pos.x-n>=1){\n\t\t\t\t\tpos.x-=n;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tif(h>=pos.y+n&&pos.y+n>=1){\n\t\t\t\t\tpos.y+=n;\n\t\t\t\t}break;\n\t\t\tcase 'l':\n\t\t\t\tif(w>=pos.x+n&&pos.x+n>=1){\n\t\t\t\t\tpos.x+=n;\n\t\t\t\t}break;\n\t\t}\n\t}\n}\n\nint main(){\n\tstring cmd;\n\tchar dir;\n\twhile(cin>>w>>h){\n\t\tpos.x=1;pos.y=1;\n\t\tdir='u';\n\t\tif(!h&&!w){\n\t\t\tbreak;\n\t\t}\n\t\twhile(1){\n\t\t\tcin>>cmd;\n\t\t\tif(cmd==\"STOP\"){\n\t\t\t\tcout<<pos.x<<\" \"<<pos.y<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(rot(cmd,&dir)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcin>>n;\n\t\t\tgo(cmd,&dir,n);\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\t// require sort next_permutation count __gcd reverse etc.\n#include <cstdlib>\t// require abs exit atof atoi \n#include <cstdio>\t\t// require scanf printf\n#include <functional>\n#include <numeric>\t// require accumulate\n#include <cmath>\t\t// require fabs\n#include <climits>\n#include <limits>\n#include <cfloat>\n#include <iomanip>\t// require setw\n#include <sstream>\t// require stringstream \n#include <cstring>\t// require memset\n#include <cctype>\t\t// require tolower, toupper\n#include <fstream>\t// require freopen\n#include <ctime>\t\t// require srand\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define ALL(A) A.begin(), A.end()\n#define NORTH 0\n#define EAST 1\n#define SOUTH 2\n#define WEST 3\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\n\nconst int dr[] = {  1, 0,-1, 0 };\nconst int dc[] = {  0, 1, 0,-1 };\n\nint main()\n{\n//\tcut here before submit \n//\tfreopen (\"testcase.WYR\", \"r\", stdin );\n\tint m, n;\n\twhile (scanf (\"%d %d\", &m, &n ), m, n ){\n\t\tstring str = \"\";\n\t\tint row = 1, col = 1, dir = NORTH;\n\t\twhile (getline (cin, str ) ){\n\t\t\tstringstream ss(str );\n\t\t\tstring com = \"\"; int arg = 0;\n\t\t\tss >> com;\n\t\t\tif (com == \"STOP\" ){\n\t\t\t\tprintf (\"%d %d\\n\", col, row );\n\t\t\t\tbreak;\n\t\t\t}else\n\t\t\tif (com == \"LEFT\" ){\n\t\t\t\tdir = (dir - 1 + 4 )%4;\n\t\t\t}else\n\t\t\tif (com == \"RIGHT\" ){\n\t\t\t\tdir = (dir + 1 ) % 4;\n\t\t\t}else{\n\t\t\t\tss >> arg;\n\t\t\t\tif (com == \"FORWARD\" ){\n\t\t\t\t\trow = max (min(row + arg*dr[dir], n ), 1 );\n\t\t\t\t\tcol = max (min(col + arg*dc[dir], m ), 1 );\n\t\t\t\t}else\n\t\t\t\tif (com == \"BACKWARD\" ){\n\t\t\t\t\tint nr = row + arg*dr[(dir+2) % 4];\n\t\t\t\t\tint nc = col + arg*dc[(dir+2) % 4];\n\t\t\t\t\tif (nr >= 1 && nr <= n && nc >= 1 && nc <= m ){\n\t\t\t\t\t\trow = nr, col = nc;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif (nr < 1 ){\t// 南の壁にぶつかった\n\t\t\t\t\t\t\tdir = SOUTH, row = 1, col = nc; \n\t\t\t\t\t\t}else\n\t\t\t\t\t\tif (nr > n ){ // 北の壁にぶつかった\n\t\t\t\t\t\t\tdir = NORTH, row = n, col = nc;\n\t\t\t\t\t\t}else\n\t\t\t\t\t\tif (nc < 1 ){ // 西の壁にぶつかった\n\t\t\t\t\t\t\tdir = WEST, row = nr, col = 1;\n\t\t\t\t\t\t}else\n\t\t\t\t\t\tif (nc > m ){ // 東の壁にぶつかった\n\t\t\t\t\t\t\tdir = EAST, row = nr, col = m;\n\t\t\t\t\t\t} // end if\n\t\t\t\t\t} // end if\n\t\t\t\t} // end if\n\t\t\t} // end if\n//\t\t\tcout << \"row: \" << row << \" col: \" << col << \" dir: \" << dir << endl;\n\t\t} // end while\n\t} // end while\t\t \n\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\n#define f first\n#define s second\n\ntypedef pair<int, int> P;\n\n\nbool field[101][101];\nint H, W, k;\nint dir = 1;\nP xy;\n\nvoid init(){\n  xy.first = 1, xy.second = 1;\n  memset(field, 0, sizeof(field));\n}  \n\nvoid forward(){\n  if(dir == 1){\n    xy.s += k;\n    xy.s = min(xy.s, H);\n  }\n  if(dir == 2){\n    xy.f += k;\n    xy.f = min(xy.f, W);\n  }\n  if(dir == 3){\n    xy.s -= k;\n    xy.s = max(xy.s, 1);\n  }\n  if(dir == 4){\n    xy.f -= k;\n    xy.f = max(xy.f, 1);\n  }\n}\n\nvoid backward(){\n  if(dir == 1){\n    xy.s -= k;\n    xy.s = max(xy.s, 1);\n  }\n  if(dir == 2){\n    xy.f -= k;\n    xy.f = max(xy.f, 1);\n  }\n  if(dir == 3){\n    xy.s += k;\n    xy.s = min(xy.s, H);\n  }\n  if(dir == 4){\n    xy.f += k;\n    xy.f = max(xy.f, W);\n  }\n}\n\nint main(){\n  while(cin >> W >> H){\n    if(W == 0 && H == 0) break;\n    field[1][1] = true;\n    string op;\n    init();\n    while(cin >> op){\n      if(op == \"STOP\") break;\n      if(op.substr(0, 7) == \"FORWARD\"){\n\tcin >> k;\n\tforward();\n      }\n      else if(op.substr(0, 8) == \"BACKWARD\"){\n\tcin >> k;\n\tbackward();\n      }\n      else if(op == \"LEFT\"){\n\tif(dir == 1) dir = 4;\n\telse dir--;\n      }\n      else if(op == \"RIGHT\"){\n\tif(dir == 4) dir = 1;\n\telse dir++;\n      }\n    }\n    cout << xy.f << ' ' << xy.s << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <stdlib.h>\n\nusing namespace std;\n\nint m,n;\nint direction=0;\n\nint main(){\n  string cmd, arg;\n  int x,y,i;\n\n  while ( 1 ){\n    cin >> m >> n;\n    if( !m&&!n ) break;\n    x=1; y=1;\n    while( 1 ){\n      cin >> cmd;\n      if( cmd==\"FORWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) for( i=0;i<nn && y<n;i++ )  y++;\n\telse if( direction==2 ) for( i=0;i<nn && y>1;i++ )  y--;\n\telse if( direction==1 ) for( i=0;i<nn && x<m;i++ )  x++;\n\telse if( direction==3 ) for( i=0;i<nn && x>1;i++ )  x--;\n      }else if( cmd==\"BACKWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) for( i=0;i<nn && y>1;i++ )  y--;\n\telse if( direction==2 ) for( i=0;i<nn && y<n;i++) y++;\n\telse if( direction==1 ) for( i=0;i<nn && x>1;i++ )  x--;\n\telse if( direction==3 ) for( i=0;i<nn && x<m;i++ ) x++;\n      }else if( cmd==\"RIGHT\" ){\n\tdirection = ++direction % 4;\n      }else if( cmd==\"LEFT\" ){\n\tdirection = --direction % 4;\n      }else { // stop\n\tbreak;\n      }\n    }\n    cout << x << \" \"<<y<< endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <string>\n#include <complex>\n\nusing namespace std;\n\n#define rep(i,b) for(int i=0; i<b; i++)\n\ntypedef complex<int> P;\n\nint w,h;\n\ninline bool in(P const& p){\n    return 1<=p.real() && p.real() <= w && 1<=p.imag() && p.imag() <= h;\n}\n\nint main(){\n    while(cin>>w>>h, w|h){\n        P cur = P(1,1);\n        P d = P(0,1);\n        while(true){\n            string s; cin>>s;\n            char op = s[0];\n            if(op=='S'){\n                cout << cur.real() << ' ' << cur.imag() << endl;\n                break;\n            } else if(op == 'F' || op == 'B'){\n                P b = op == 'F' ? P(1,0) : P(-1,0);\n                int k; cin>>k;\n                rep(i,k){\n                    P next = cur+d*b;\n                    if(in(next)) cur = next;\n                    else break;\n                }\n            } else if(op == 'R'){\n                d/=P(0,1);\n            } else if(op == 'L'){\n                d*=P(0,1);\n            }\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n    int w, h;\n    while( cin >> w >> h, w&&h ){\n        string in;\n        int dx[4] = {0,1,0,-1}; // up,right,down,left\n        int dy[4] = {1,0,-1,0};\n        int px=1, py=1, dir=0;\n        while( cin >> in, in!=\"STOP\" ){\n            int step;\n            if( in == \"FORWARD\" ){\n                cin >> step;\n                px += dx[dir]*step;\n                py += dy[dir]*step;\n                if( px < 1 )    px = 1;\n                else if( w < px )  px = w;\n                if( py < 1 )    py = 1;\n                else if( h < py )   py = h;\n            }else if( in == \"BACKWARD\" ){\n                cin >> step;\n                px -= dx[dir]*step;\n                py -= dy[dir]*step;\n                if( px < 1 )    px = 1;\n                else if( w < px )  px = w;\n                if( py < 1 )    py = 1;\n                else if( h < py )   py = h;\n            }else if( in == \"LEFT\" ){\n                dir = (dir+3)%4;\n            }else if( in == \"RIGHT\" ){\n                dir = (dir+1)%4;\n            }\n        }\n        cout << px << \" \" << py << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<vector>\n#include<list>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int w,h,d,x,y,vx,vy;\n  string s;\n  while(cin>>w>>h&&w+h){\n    x=y=1;\n    vx=0;\n    vy=1;\n    while(cin>>s&&s!=\"STOP\"){\n      if(0){\n      }else if(s==\"RIGHT\"){\n\tif(vx){\n\t  if(vx==1){\n\t    vx=0;\n\t    vy=1;\n\t  }else{\n\t    vx=0;\n\t    vy=-1;\n\t  }\n\t}else{\n\t  if(vy==1){\n\t    vx=1;\n\t    vy=0;\n\t  }else{\n\t    vx=-1;\n\t    vy=0;\n\t  }\n\t}\n      }else if(s==\"LEFT\"){\n\tif(vx){\n\t  if(vx==1){\n\t    vx=0;\n\t    vy=1;\n\t  }else{\n\t    vx=0;\n\t    vy=-1;\n\t  }\n\t}else{\n\t  if(vy==1){\n\t    vx=1;\n\t    vy=0;\n\t  }else{\n\t    vx=-1;\n\t    vy=0;\n\t  }\n\t}\n      }else if(s==\"FORWARD\"){\n\tcin>>d;\n\tx+=vx*d;\n\ty+=vy*d;\n\tif(x<1)\n\t  x=1;\n\tif(y<1)\n\t  y=1;\n\tif(x>w)\n\t  x=w;\n\tif(y>h)\n\t  y=h;\n      }else if(s==\"BACKWARD\"){\n\tcin>>d;\n\tx-=vx*d;\n\ty-=vy*d;\n\tif(x<1)\n\t  x=1;\n\tif(y<1)\n\t  y=1;\n\tif(x>w)\n\t  x=w;\n\tif(y>h)\n\t  y=h;\n      }\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, -1, 0, 1};\n\nint main()\n{\n  int W, H;\n  while (cin >> W >> H) {\n    if ((W|H) == 0)\n      break;\n\n    int x = 1, y = 1, d = 3;\n    for ( ; ; ) {\n      string cmd;\n      cin >> cmd;\n      if (cmd == \"FORWARD\") {\n\tint k;\n\tcin >> k;\n\twhile (k-- && \n\t       1 <= x + dx[d] && x + dx[d] <= W && \n\t       1 <= y + dy[d] && y + dy[d] <= H) {\n\t  x += dx[d];\n\t  y += dy[d];\n\t}\n      } else if (cmd == \"BACKWARD\") {\n\tint k;\n\tcin >> k;\n\twhile (k-- &&\n\t       1 <= x + dx[(d+4-2)%4] && x + dx[(d+4-2)%4] <= W &&\n\t       1 <= y + dy[(d+4-2)%4] && y + dy[(d+4-2)%4] <= H) {\n\t  x += dx[(d+4-2)%4];\n\t  y += dy[(d+4-2)%4];\n\t}\n      } else if (cmd == \"RIGHT\") {\n\td = (d + 1) % 4;\n      } else if (cmd == \"LEFT\") {\n\td = (d + 4 - 1) % 4;\n      } else {\n\tbreak;\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\n\nint main(){\n\tstring p,s;\n\tint point;\n\tint w,h;\n\twhile(cin >> w >> h && w && h){\n\t\tint dist;\n\t\tint x=1,y=1;\n\t\twhile(getline(cin,p) && p!=\"STOP\"){\n\t\t\tpoint = 0;\n\t\t\tif(~p.find(\" \")){\n\t\t\t\ts = p.substr(p.find(\" \")+1,p.length()-p.find(\" \")-1);\n\t\t\t\tp = p.substr(0,p.find(\" \"));\n\t\t\t\tpoint = atoi(s.c_str());\n\t\t\t}\n\t\t\tif(p==\"BACKWARD\")point*=-1;\n\t\t\tif(p==\"RIGHT\"){\n\t\t\t\tdist=(dist+1)%4;\n\t\t\t\tcontinue;\n\t\t\t}else if(p==\"LEFT\"){\n\t\t\t\tdist=(dist-1)%4;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(dist%2){\n\t\t\t\tx += point;\n\t\t\t\tif(x>w){\n\t\t\t\t\tx=w;\n\t\t\t\t\tdist--;\n\t\t\t\t}else if(x<1){\n\t\t\t\t\tx=1;\n\t\t\t\t\tdist--;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ty +=point;\n\t\t\t\tif(y>h){\n\t\t\t\t\ty=h;\n\t\t\t\t\tdist--;\n\t\t\t\t}else if(y<1){\n\t\t\t\t\ty=1;\n\t\t\t\t\tdist--;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tcout << x << \" \" << y << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\nstruct P\n{\n\tint x, y;\n\tint direction;\t\t//0:North 1:East 2:South 3:West\n};\n\nvoid solve()\n{\n\tint W, H;\n\twhile(cin >> W >> H, W || H)\n\t{\n\t\tP p;\n\t\tp.x = 0;\n\t\tp.y = 0;\n\t\tp.direction = 0;\n\t\tstring str;\n\t\twhile(cin >> str)\n\t\t{\n\t\t\tif(str == \"STOP\")\n\t\t\t{\n\t\t\t\tcout << p.x + 1 << \" \" << p.y + 1 << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(str == \"FORWARD\" || str == \"BACKWARD\")\n\t\t\t{\n\t\t\t\tint move;\n\t\t\t\tcin >> move;\n\t\t\t\tif(str == \"FORWARD\" && p.direction == 0 || str == \"BACKWARD\" && p.direction == 2)\n\t\t\t\t{\n\t\t\t\t\tif(p.y + move < H)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.y += move;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(str == \"FORWARD\" && p.direction == 2 || str == \"BACKWARD\" && p.direction == 0)\n\t\t\t\t{\n\t\t\t\t\tif(p.y - move >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.y -= move;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(str == \"FORWARD\" && p.direction == 1 || str == \"BACKWARD\" && p.direction == 3)\n\t\t\t\t{\n\t\t\t\t\tif(p.x + move < W)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.x += move;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(str == \"FORWARD\" && p.direction == 3 || str == \"BACKWARD\" && p.direction == 1)\n\t\t\t\t{\n\t\t\t\t\tif(p.x - move >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.x -= move;\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(str == \"RIGHT\")\n\t\t\t\t{\n\t\t\t\t\tp.direction = (p.direction + 1) % 4;\t\t//cw\n\t\t\t\t}\n\t\t\t\telse if(str == \"LEFT\")\n\t\t\t\t{\n\t\t\t\t\tp.direction = (p.direction + 3) % 4;\t\t//ccw\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long int ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<pair<int, int> > vii;\n#define rrep(i, m, n) for(int (i)=(m); (i)<(n);  (i)++)\n#define erep(i, m, n) for(int (i)=(m); (i)<=(n); (i)++)\n#define  rep(i, n)    for(int (i)=0; (i)<(n);  (i)++)\n#define rrev(i, m, n) for(int (i)=(n)-1; (i)>=(m); (i)--)\n#define erev(i, m, n) for(int (i)=(n); (i)>=(m); (i)--)\n#define  rev(i, n)    for(int (i)=(n)-1; (i)>=0; (i)--)\n#define vrep(i, c)    for(__typeof((c).begin())i=(c).begin(); i!=(c).end(); i++)\n#define  ALL(v)       (v).begin(), (v).end()\n#define mp            make_pair\n#define pb            push_back\ntemplate<class T, class S> inline bool minup(T& m, S x){ return m>(T)x ? (m=(T)x, true) : false; }\ntemplate<class T, class S> inline bool maxup(T& m, S x){ return m<(T)x ? (m=(T)x, true) : false; }\n\nconst int    INF = 1000000000;\nconst ll     MOD = 1000000007LL;\nconst double EPS = 1E-12;\n\nstruct Point : public complex<double>\n{\npublic:\n  Point() { this->real(0);  this->imag(0); }\n  Point(const double& x, const double& y) { this->real(x);  this->imag(y); }\n  Point(const complex<double> w)  { this->real(w.real());  this->imag(w.imag()); }\n  inline double dot(Point p){ return (conj(*this) * p).real(); }  // ??????\n  inline double det(Point p){ return (conj(*this) * p).imag(); }  // ??????\n};\n\nnamespace std\n{\n  inline bool operator < (const Point& a, const Point& b)\n  {\n    return real(a) != real(b) ? real(a) < real(b) : imag(a) < imag(b);\n  }\n}\ntypedef vector<Point> Polygon;\ninline Point currPoint(vector<Point> P, int i){ return P[i]; }\ninline Point nextPoint(vector<Point> P, int i){ return P[(i+1)%P.size()]; }\ninline Point diffPoint(vector<Point> P, int i){ return nextPoint(P, i) - currPoint(P, i); }\n\ndouble W, H;\ndouble dx;\n\ninline void update(Point& here)\n{\n  minup(here.real(), W);    minup(here.imag(), H);\n  maxup(here.real(), 1.0);  maxup(here.imag(), 1.0);\n}\n\nint main()\n{\n  while((cin >> W >> H) && W){\n    string cmd;\n    Point dz = Point(0.0, 1.0);\n    Point here = Point(1.0, 1.0);\n    while(cin >> cmd){\n      if(cmd == \"STOP\"){\n        cout << here.real() << \" \" << here.imag() << endl;\n        break;\n      }\n      if(cmd == \"RIGHT\"){ dz *= Point(0, -1.0);  continue; }\n      if(cmd == \"LEFT\" ){ dz *= Point(0,  1.0);  continue; }\n      cin >> dx;\n      if(cmd == \"FORWARD\" ) here += dx * dz;\n      if(cmd == \"BACKWARD\") here -= dx * dz;\n      update(here);\n    }\n }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nint main(){\n    int lx,ly;\n    cin >> lx >> ly;\n    do{\n        int x=1,y=1,n,d=0;\n        char a[7];\n        cin >> a;\n        while(a[0]!='S'){\n            n=0;\n            switch(a[0]){\n                case'F':\n                    cin >> n;\n                    break;\n                case'B':\n                    cin >> n;\n                    n*=-1;\n                    break;\n                case'L':\n                    d-=1;\n                    break;\n                case'R':\n                    d+=1;\n                    break;\n            }\n            if (d==-1)\n                d=3;\n            if (d==4)\n                d=0;\n            if (n!=0)\n                switch(d){\n                    case 0:\n                        y+=n;\n                        break;\n                    case 1:\n                        x+=n;\n                        break;\n                    case 2:\n                        y-=n;\n                        break;\n                    case 3:\n                        x-=n;\n                        break;\n                }\n            if (x>lx)\n                x=lx;\n            if (x<1)\n                x=1;\n            if (y>ly)\n                y=ly;\n            if (y<1)\n                y=1;cout <<d<< endl;cout << x <<' '<< y << endl;\n            cin >> a;\n        }\n        cout << x <<' '<< y << endl;\n        cin >> lx >> ly;\n    }while (!(lx==0&&ly==0));\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#define NORTH 10\n#define EAST 11\n#define SOUTH 12\n#define WEST 13\nusing namespace std;\n\n\nint sizex,sizey,arrow;\nint turn();\nint go(int dist,int &x,int &y);\nint main(){\n  int x,y;\n  string mei;\n  int dist;\n while(1){\n    cin >>sizex>>sizey;\n    if(sizex==0&&sizey==0) return 0; \n    arrow=NORTH;\n    x=y=1;\n    while(1){\n      cin >>mei;\n      if(mei==\"STOP\")\n\tbreak;\n      switch(mei[0]){\n      case 'B':\n\tcin>>dist;\n\tdist=-1*dist;\n\tgo(dist,x,y);\n\tbreak;\n      case 'F':\n\tcin>>dist;\n\tgo(dist,x,y);\n\tbreak;\n      case 'R':\n\tarrow++;\n\tif(arrow==WEST+1)\n\t  arrow=NORTH;\n\tbreak;\n      case 'L':\n\tarrow--;\n\tif(arrow==NORTH-1)\n\t  arrow=WEST;\n\tbreak;\n      }\n\n   }\n    cout <<x<<\" \"<<y<<endl;   \n  }\n  return 0;\n}\n\nint go(int dist,int &x,int &y){\n  switch(arrow){\n  case NORTH:\n    y+=dist;\n    break;\n  case SOUTH:\n    y-=dist;\n    break;\n  case EAST:\n    x+=dist;\n    break;\n  case WEST:\n    x-=dist;\n    break;\n  }\n  if(x>sizex)\n    x=sizex;\n  if(y>sizey)\n    y=sizey;\n  if(x<1)\n    x=1;\n  if(y<1)\n    y=1;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tint direct = 0; // ↑0、→1、↓2、←3\n\tint x = 1;\n\tint y = 1;\n\tchar ch[100];\n\tint num;\n\tint map_x,map_y;\n\tscanf(\"%d %d\",&map_x,&map_y); // マップの読み込み\n\twhile(map_x != 0 || map_y != 0){\n\t\tscanf(\"%s\", ch); // 命令の読み込み\n\t\t\n\t\tx = 1;\n\t\ty = 1;\n\t\tdirect = 0;\n\t\tnum = 0;\n\n\t\twhile(strcmp(ch,\"STOP\")){\n\t\n\t\t\t// 各命令に対して\n\t\n\t\t\tif(strcmp(ch,\"FORWARD\") == 0){\n\t\t\t\tscanf(\"%d\", &num);\n\t\t\t\t\n\t\t\t\tif(direct == 0){\n\t\t\t\t\ty += num;\n\t\t\t\t}if(y > map_y){\n\t\t\t\t\ty = map_y;\n\t\t\t\t}\n\t\t\t\tif(direct == 1){\n\t\t\t\t\tx += num;\n\t\t\t\t}if(x > map_x){\n\t\t\t\t\tx = map_x;\n\t\t\t\t}\n\t\t\t\tif(direct == 2){\n\t\t\t\t\ty -= num;\n\t\t\t\t}if(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t}\n\t\t\t\tif(direct == 3){\n\t\t\t\t\tx -= num;\n\t\t\t\t}if(x < 1){\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\n\t\t\t\t//printf(\"(%d,%d) direct %d\\n\",x,y,direct);\n\t\t\t}\n\t\t\tif(strcmp(ch,\"BACKWARD\") == 0){\n\t\t\t\tscanf(\"%d\", &num);\n\n\t\t\t\tif(direct == 2){\n\t\t\t\t\ty += num;\n\t\t\t\t}if(y > map_y){\n\t\t\t\t\ty = map_y;\n\t\t\t\t}\n\t\t\t\tif(direct == 3){\n\t\t\t\t\tx += num;\n\t\t\t\t}if(x > map_x){\n\t\t\t\t\tx = map_x;\n\t\t\t\t}\n\t\t\t\tif(direct == 0){\n\t\t\t\t\ty -= num;\n\t\t\t\t}if(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t}\n\t\t\t\tif(direct == 1){\n\t\t\t\t\tx -= num;\n\t\t\t\t}if(x < 1){\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\n\t\t\t\t//printf(\"(%d,%d) direct %d\\n\",x,y,direct);\n\t\t\t}\n\t\t\tif(strcmp(ch,\"RIGHT\") == 0){\n\t\t\t\tdirect++;\n\t\t\t\tif(direct > 3){\n\t\t\t\t\tdirect = 0;\n\t\t\t\t}\n\t\t\t\t//printf(\"direct %d\\n\",direct);\n\t\t\t}\n\t\t\tif(strcmp(ch,\"LEFT\") == 0){\n\t\t\t\tdirect--;\n\t\t\t\tif(direct < 0){\n\t\t\t\t\tdirect = 3;\n\t\t\t\t}\n\t\t\t\t//printf(\"direct %d\\n\",direct);\n\t\t\t}\n\t\t\tscanf(\"%s\", ch); // 命令の読み込み\n\t\t}\n\t\tprintf(\"%d %d\\n\",x,y);\n\t\tscanf(\"%d %d\",&map_x,&map_y); // マップの読み込み\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <queue>\n\n#pragma warning( disable: 4996 )\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define INF 100000000\n#define EPS 1e-9\n\n#define MAX_R 100\n#define MAX_C 100\n\nint R, C;\nint nx, ny;\n\nint dx[] = { 0, 1, 0, -1 };\nint dy[] = { 1, 0, -1, 0 };\n\nint main(){\n\n\twhile (true){\n\t\n\t\tcin >> R >> C;\n\n\t\tif (R == 0 && C == 0)\n\t\t\tbreak;\n\n\t\tnx = 1;\n\t\tny = 1;\n\n\t\tint dir = 0;\n\n\t\twhile (true){\n\t\t\tstring command;\n\t\t\tint num;\n\n\t\t\tcin >> command;\n\t\t\tif (command == \"STOP\")\n\t\t\t\tbreak;\n\n\t\t\tif (command == \"RIGHT\"){\n\t\t\t\tdir++;\n\t\t\t\tif (dir == 4)\n\t\t\t\t\tdir = 0;\n\t\t\t}\n\t\t\telse if (command == \"LEFT\"){\n\t\t\t\tdir--;\n\t\t\t\tif (dir < 0)\n\t\t\t\t\tdir = 3;\n\t\t\t}\n\n\t\t\telse{\n\t\t\t\tcin >> num;\n\t\t\t\tif (command == \"FORWARD\"){\n\t\t\t\t\tnx += dx[dir] * num;\n\t\t\t\t\tny += dy[dir] * num;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint k = dir - 2;\n\t\t\t\t\tif (k < 0)\n\t\t\t\t\t\tk += 4;\n\t\t\t\t\tnx += dx[k] * num;\n\t\t\t\t\tny += dy[k] * num;\n\t\t\t\t}\n\t\t\t\tif (nx <= 0)\n\t\t\t\t\tnx = 1;\n\t\t\t\tif (nx > R)\n\t\t\t\t\tnx = R;\n\t\t\t\tif (ny <= 0)\n\t\t\t\t\tny = 1;\n\t\t\t\tif (ny > C)\n\t\t\t\t\tny = 1;\n\t\t\t}\n\n\n\t\t}\n\n\t\tcout << nx << \" \" << ny << endl;\n\n\t}\n\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint X, Y, H, W, N, DIR; string S;\nint dx[4] = { 1,0,-1,0 };\nint dy[4] = { 0,1,0,-1 };\nint main() {\n\twhile (true) {\n\t\tcin >> H >> W;\n\t\tif (H == 0 && W == 0) { break; }\n\t\tX = 1; Y = 1;\n\t\twhile (true) {\n\t\t\tcin >> S;\n\t\t\tif (S == \"STOP\") {\n\t\t\t\tcout << Y << ' ' << X << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (S == \"LEFT\") { DIR = (DIR + 3) % 4; }\n\t\t\tif (S == \"RIGHT\") { DIR = (DIR + 1) % 4; }\n\t\t\tif (S == \"FORWARD\") {\n\t\t\t\tcin >> N; X += dx[DIR] * N; Y += dy[DIR] * N;\n\t\t\t\tif (X > W) { X = W; }\n\t\t\t\tif (X < 1) { X = 1; }\n\t\t\t\tif (Y > H) { Y = H; }\n\t\t\t\tif (Y < 1) { Y = 1; }\n\t\t\t}\n\t\t\tif (S == \"BACKWARD\") {\n\t\t\t\tcin >> N; X -= dx[DIR] * N; Y -= dy[DIR] * N;\n\t\t\t\tif (X < 1) { X = 1; }\n\t\t\t\tif (X > W) { X = W; }\n\t\t\t\tif (Y < 1) { Y = 1; }\n\t\t\t\tif (Y > H) { Y = H; }\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  int m,n;\n  int x,y,d;\n  string command;\n  int step;\n\n  while(1){\n    cin >> m >> n;\n    if(!m && !n)break;\n\n    x = 1;\n    y = 1;\n    d = 0;\n\n    while(1){\n      cin >> command;\n      if(command == \"STOP\")break;\n      \n      if(command == \"LEFT\"){\n\td--;\n\tif(d < 0)d += 4;\n      }\n      else if(command == \"RIGHT\"){\n\td++;\n\tif(d >= 4)d -= 4;\n      }\n      else{\n\tcin >> step;\n\tif(command == \"BACKWARD\")step *= -1;\n\tif(d == 0){\n\t  y += step;\n\t  if(y > n)y = n;\n\t  if(y < 1)y = 1;\n\t}\n\telse if(d == 1){\n\t  x += step;\n\t  if(x > m)x = m;\n\t  if(x < 1)x = 1;\n\t}\n\telse if(d == 2){\n\t  y -= step;\n\t  if(y > n)y = n;\n\t  if(y < 1)y = 1;\n\t}\n\telse if(d == 3){\n\t  x -= step;\n\t  if(x > m)x = m;\n\t  if(x < 1)x = 1;\n\t}\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)   FOR(i,0,n)\n#define pb push_back\n#define mp make_pair\ntypedef long long ll;\ntypedef pair<int,int> pint;\n\nint main(){\n    int m,n;\n    string q;\n    while(cin>>m>>n,m){\n        int x=1,y=1,dir=0,cnt;\n        while(getline(cin,q),q!=\"STOP\"){\n            if(q[0]=='F'){\n                cnt=atoi(q.substr(8).c_str());\n                if(dir%2==0){\n                    cnt=dir==0?cnt:-cnt;\n                    y=min(n,max(0,y+cnt));\n                }\n                else{\n                    cnt=dir==1?cnt:-cnt;\n                    x=min(m,max(0,x+cnt));\n                }\n            }\n            else if(q[0]=='B'){\n                cnt=atoi(q.substr(9).c_str());\n                if(dir%2==0){\n                    cnt=dir==0?-cnt:cnt;\n                    y=min(n,max(0,y+cnt));\n                }\n                else{\n                    cnt=dir==1?cnt:cnt;\n                    x=min(m,max(0,x+cnt));\n                }\n            }\n            else if(q==\"RIGHT\") dir=(dir+5)%4;\n            else if(q==\"LEFT\") dir=(dir+3)%4;\n        }\n        cout<<x<<' '<<y<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<set>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,a,n) for(int i = a ; i < n ; i++)\n#define rep(i,n) REP(i,0,n)\n\ntypedef long long ll;\n\nint dx[] = {0,1,0,-1};\nint dy[] = {1,0,-1,0};\n\nint main(){\n  int w,h;\n\n  while(cin>>w>>h,w||h){\n    string s;\n    int d = 0;\n    int x=1,y=1;\n\n    while(cin>>s,s!=\"STOP\"){\n      int nx=x,ny=y;\n\n      if(s[0] == 'F'){\n        int dist;\n        cin>>dist;\n        nx = x + dist * dx[d];\n        ny = y + dist * dy[d];\n      }\n      else if(s[0] == 'B'){\n        int dist;\n        cin>>dist;\n        nx = x + dist * dx[(d+2)%4];\n        ny = y + dist * dy[(d+2)%4];\n      }\n      else if(s[0] == 'R'){\n        d = (d + 1) % 4;\n      }\n      else{\n        d = (d + 3) % 4;\n      }\n\n      if(nx < 1) nx = 1;\n      else if(nx > w) nx = w;\n      if(ny < 1) ny = 1;\n      else if(ny > h) ny = h;\n      x = nx;\n      y = ny;\n    }\n\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\nusing namespace std;\nstatic const double EPS = 1e-5;\ntypedef long long ll;\n\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\n\n\nmain(){\n\tint fx,fy;\n\t\n\twhile(cin>>fx>>fy){\n\t\tif(fx==0 && fy==0)break;\n\t\t\n\t\tint x=1,y=1,dir=0;\n\t\t\n\t\tstring com=\"\";\n\t\twhile(cin>>com){\n\t\t\tif(com==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}else if(com==\"FORWARD\"){\n\t\t\t\tint k;\n\t\t\t\tcin>>k;\n\t\t\t\tx+=k*dx[dir];\n\t\t\t\ty+=k*dy[dir];\n\t\t\t}else if(com==\"BACKWORD\"){\n\t\t\t\tint k;\n\t\t\t\tcin>>k;\n\t\t\t\tx-=k*dx[dir];\n\t\t\t\ty-=k*dy[dir];\n\t\t\t}else if(com==\"RIGHT\"){\n\t\t\t\tdir=(dir+1)%4;\n\t\t\t}else if(com==\"LEFT\"){\n\t\t\t\tdir=(dir+3)%4;\n\t\t\t}\n\t\t\t\n\t\t\tif(x<1)x=1;\n\t\t\tif(y<1)y=1;\n\t\t\tif(x>fx)x=fx;\n\t\t\tif(y>fy)y=fy;\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(void){\n  int n,m;\n  int dx[4] = { 0 , 1 , 0 , -1 };\n  int dy[4] = { 1 , 0 , -1 , 0 };\n  int angle;\n  string order;\n  int x,y;\n  int Go;\n\n  while(1){\n\n    angle = 0; x = y = 1;\n\n    cin >> n >> m;\n\n    if( n == 0 && m == 0 ) break;\n\n    while(1){\n\n      cin >> order;\n\n      if( order == \"RIGHT\" ){\n\tangle++;\n\tif( angle == 4 ) angle = 0;\n\tcontinue;\n      }\n\n      else if( order == \"LEFT\" ){\n\tangle--;\n\tif( angle == -1 ) angle = 3;\n\tcontinue;\n      }\n\n      else if( order == \"STOP\" ){\n\tcout << x << \" \" << y << endl;\n\tbreak;\n      }\n\n      cin >> Go;\n\n      if( order == \"FORWARD\" ){\n\n\tx += dx[angle]*Go;\n\ty += dy[angle]*Go;\n\n\tif( x < 0 ) x = 1;\n\tif( y < 0 ) y = 1;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n\n      else if( order == \"BACKWARD\" ){\n\n\tx -= dx[angle]*Go;\n\ty -= dy[angle]*Go;\n\n\tif( x < 0 ) x = 1;\n\tif( y < 0 ) y = 1;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n    }\n  }\n\n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\n\nint main(){\n    while(1){\n        int w,h;\n        cin >> w >> h;\n        if(w == 0) break;\n\n        int dir = 1;\n        int x = 1;\n        int y = 1;\n        string s;\n        while(cin>>s, s!=\"STOP\"){\n            if(s == \"RIGHT\"){\n                dir = (dir +3) %4;\n            }else if(s == \"LEFT\"){\n                dir = (dir +1) %4;\n            }else if(s == \"FORWARD\"){\n                int step;\n                cin >> step;\n                for(int i=0; i<step; i++){\n                    int nx = x +dx[dir];\n                    int ny = y +dy[dir];\n                    if(nx<1 or w<nx or ny<1 or h<ny) break;\n                    x = nx;\n                    y = ny;\n                }\n            }else{\n                int step;\n                cin >> step;\n                for(int i=0; i<step; i++){\n                    int nx = x -dx[dir];\n                    int ny = y -dy[dir];\n                    if(nx<1 or w<nx or ny<1 or h<ny) break;\n                    x = nx;\n                    y = ny;\n                }\n            }\n        }\n        cout << x << \" \" << y << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(){\n  int x, y, direction, val;\n  string str;\n  int dx[] = {0,1,0,-1}, dy[] = {1,0,-1,0};\n  while(cin >> x >> y && x != 0){\n    cin >> str;\n    int i = 1, j = 1; direction = 0;\n    while(str.compare(\"STOP\") != 0){\n      if(str.compare(\"RIGHT\") == 0)\n\tdirection = (direction+1)%4;\n      else if(str.compare(\"LEFT\") == 0)\n\tdirection = (direction+3)%4;\n      else if(str.compare(\"FORWARD\") == 0 || str.compare(\"BACKWARD\") == 0){\n\tcin >> val;\n\tif(str.compare(\"BACKWARD\") == 0){\n\t  i -= val*dx[direction];\n\t  j -= val*dy[direction];\n\t}\n\telse{\n\t  i += val*dx[direction];\n\t  j += val*dy[direction];\n\t}\n\tif(i<1) i=1;\n\tif(i>x) i=x;\n\tif(j<1) j=1;\n\tif(j>y) j=y;\n      }\n      cin >> str;\n    }\n    cout << i << \" \" << j << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint X, Y, H, W, N, DIR; string S;\nint dx[4] = { 1,0,-1,0 };\nint dy[4] = { 0,1,0,-1 };\nint main() {\n\twhile (true) {\n\t\tcin >> H >> W;\n\t\tif (H == 0 && W == 0) { break; }\n\t\tX = 1; Y = 1; DIR = 0;\n\t\twhile (true) {\n\t\t\tcin >> S;\n\t\t\tif (S == \"STOP\") {\n\t\t\t\tcout << Y << ' ' << X << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (S == \"LEFT\") { DIR = (DIR + 3) % 4; }\n\t\t\tif (S == \"RIGHT\") { DIR = (DIR + 1) % 4; }\n\t\t\tif (S == \"FORWARD\") {\n\t\t\t\tcin >> N; X += dx[DIR] * N; Y += dy[DIR] * N;\n\t\t\t\tif (X > W) { X = W; }\n\t\t\t\tif (X < 1) { X = 1; }\n\t\t\t\tif (Y > H) { Y = H; }\n\t\t\t\tif (Y < 1) { Y = 1; }\n\t\t\t}\n\t\t\tif (S == \"BACKWARD\") {\n\t\t\t\tcin >> N; X -= dx[DIR] * N; Y -= dy[DIR] * N;\n\t\t\t\tif (X < 1) { X = 1; }\n\t\t\t\tif (X > W) { X = W; }\n\t\t\t\tif (Y < 1) { Y = 1; }\n\t\t\t\tif (Y > H) { Y = H; }\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\n\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\n\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nint dx[8] = {-1, 0, 1, 0, -1, -1, 1, 1};\nint dy[8] = {0, -1, 0, 1, -1, 1, -1, 1};\n\n\n\nint main() {\n  int m, n, len;\n  string s;  \n\n  while(cin >> m >> n, m+n) {\n    int angle = 0;\n    PII p(1,1); \n    \n    while(cin >> s) {\n      if(s == \"STOP\") break;  \n      else if(s == \"FORWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second += x;\n\telse if(angle%4 == 1) p.first -= x;\n\telse if(angle%4 == 2) p.second -= x;\n\telse p.first += x;\n      }\n      else if(s == \"BACKWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second -= x;\n\telse if(angle%4 == 1) p.first += x;\n\telse if(angle%4 == 2) p.second += x;\n\telse p.first -= x;\n      }\n      else if(s == \"RIGHT\") angle--;\n      else if(s == \"LEFT\") angle++;\n      if(p.first > m) p.first = m;\n      if(p.second > n) p.second = n;\n    }\n    cout << p.first << ' ' << p.second << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n\tint w,h;\n\tint dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\n\twhile(true){\n\tcin>>w>>h;\nif(w==0&&h==0)break;\n\tstring a;\n\tint s=0;\n\tint x=1,y=1,z;\n\twhile(true){\n\t\tcin>>a;\n\t\tif(a==\"STOP\")break;\n\t\tif(a==\"RIGHT\")s=s+1%4;\n\t\tif(a==\"LEFT\")s=s-1%4;\n\t\tif(a==\"FORWARD\"){\n\t\t\tcin>>z;\n\t\t\tx+=dx[s]*z,y+=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t\tif(a==\"BACKWARD\"){\n\t\t\tcin>>z;\n\t\t\tx-=dx[s]*z,y-=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t}\n\tcout<<x<<\" \"<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  int m,n;\n  int x,y,d;\n  string command;\n  int step;\n\n  while(1){\n    cin >> m >> n;\n    if(!m && !n)break;\n\n    x = 1;\n    y = 1;\n    d = 0;\n\n    while(1){\n      cin >> command;\n      if(command == \"STOP\")break;\n      \n      if(command == \"LEFT\"){\n\td--;\n\tif(d < 0)d += 4;\n      }\n      else if(command == \"RIGHT\"){\n\td++;\n\tif(d >= 4)d -= 4;\n      }\n      else if(command == \"FORWARD\" || command == \"BACKWARD\"){\n\tcin >> step;\n\tif(command == \"BACKWARD\")step *= -1;\n\tif(d == 0){\n\t  y += step;\n\t  if(y > n)y = n;\n\t  if(y < 1)y = 1;\n\t}\n\telse if(d == 1){\n\t  x += step;\n\t  if(x > m)x = m;\n\t  if(x < 1)x = 1;\n\t}\n\telse if(d == 2){\n\t  y -= step;\n\t  if(y > n)y = n;\n\t  if(y < 1)y = 1;\n\t}\n\telse if(d == 3){\n\t  x -= step;\n\t  if(x > m)x = m;\n\t  if(x < 1)x = 1;\n\t}\n      }else cout << \"error\" << endl;\n      cout << x << \" \" << y << \" \" << d << endl;\n    }\n    cout << x << \" \" << y << endl;\n  }\n}\n\t"
  },
  {
    "language": "C++",
    "code": "//41\n#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main(){\n  for(int a,b;cin>>a>>b,a|b;){\n    int y=1,x=1,d=0;\n    for(string s;cin>>s,s!=\"STOP\";){\n      if(s==\"RIGHT\"){\n\td=(d+1)%4;\n      }else if(s==\"LEFT\"){\n\td=(d+3)%4;\n      }else{\n\tint k;\n\tcin>>k;\n\tint dy[]={1,0,-1,0};\n\tint dx[]={0,1,0,-1};\n\tint f[]={1,-1};\n\tx+=dx[d]*f[s!=\"FORWARD\"]*k;\n\ty+=dy[d]*f[s!=\"FORWARD\"]*k;\n\tif(y<1){\n\t  y=1;\n\t}else if(y>b){\n\t  y=b;\n\t}\n\tif(x<1){\n\t  x=1;\n\t}else if(x>a){\n\t  x=a;\n\t}\n      }\n    }\n    cout<<x<<' '<<y<<endl;\n  }\n  return 0;\n}\n\t  "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<string>\nusing namespace std;\ntypedef pair< int , int > Pi;\n#define INF (1 << 25)\n#define fr first\n#define sc second\nint dx[] = {1,0,-1,0} , dy[] = {0,1,0,-1};\nint main(){\n  int n,m,x,y,MUKI;\n  while(cin >> n >> m && n){\n    x = 1 , y = 1 , MUKI = 0;\n    while(true){\n      if( x > m ) x = m;\n      if( x < 1 ) x = 1;\n      if( y > n ) y = n;\n      if( y < 1 ) y = 1;\n      string str;\n      int n;\n      cin >> str;\n      if(str == \"FORWARD\"){\n        cin >> n;\n        x += dx[MUKI] * n , y += dy[MUKI] * n;\n      }else if(str == \"BACKWARD\"){\n        cin >> n;\n        x -= dx[MUKI] * n , y -= dy[MUKI] * n;\n      }else if(str == \"RIGHT\") MUKI = ( MUKI + 1 ) % 4;\n      else if(str == \"LEFT\") MUKI = ( MUKI - 1 + 4 ) % 4;\n      else break;\n      //  cout << y << x;\n    }\n    cout << y << \" \" << x << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n  int w,h;\n\n  while(1) {\n  cin >> w >> h;\n  if(w == 0 && h == 0) break;\n\n  string com;\n\n  int dir = 40000;\n  int x,y;\n  x = y = 1;\n  while(1) {\n    cin >> com;\n    if(com == \"STOP\") break;\n\n    if(com == \"RIGHT\") dir++;\n    if(com == \"LEFT\") dir--;\n    cout << dir%4 << endl;\n    if(com == \"FORWARD\" || com == \"BACKWARD\") {\n      int flg = 1;\n      if(com == \"BACKWARD\") flg = -1;\n      int n;\n      cin >> n;\n      if(dir % 4 == 0)y += flg*n;\n      else if(dir % 4 == 1) x += flg*n;\n      else if(dir % 4 == 3) x -= flg*n;\n      else if(dir % 4 == 2) y -= flg*n;\n      if(x > w) x = w;\n      if(y > h) y = h;\n      if(x < 1) x = 1;\n      if(y < 1) y = 1;\n      cout << x << \" \"<< y << endl;\n    }\n  }\n  cout << x <<\" \"<<y << endl;\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<string>\nusing namespace std;\ntypedef pair< int , int > Pi;\n#define INF (1 << 25)\n#define fr first\n#define sc second\nint dx[] = {1,0,-1,0} , dy[] = {0,1,0,-1};\nint main(){\n  int n,m,x,y,MUKI;\n  while(cin >> n >> m && n){\n    x = 1 , y = 1 , MUKI = 0;\n    while(true){\n      if( x > m ) x = m;\n      if( x < 1 ) x = 1;\n      if( y > n ) y = n;\n      if( y < 1 ) y = 1;\n      string str;\n      int n;\n      cin >> str;\n      if(str == \"FORWARD\"){\n        cin >> n;\n        x += dx[MUKI] * n , y += dy[MUKI] * n;\n      }else if(str == \"BACKWARD\"){\n        cin >> n;\n        x -= dx[MUKI] * n , y -= dy[MUKI] * n;\n      }else if(str == \"RIGHT\") MUKI = ( MUKI + 1 ) % 4;\n      else if(str == \"LEFT\") MUKI = ( MUKI - 1 + 4 ) % 4;\n      else break;\n      //  cout << y << x;\n    }\n    cout << y << \" \" << x << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <fstream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <assert.h>\n\t\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define ALL(s) (s).begin(),(s).end()\n#define ITE(c) typeof((c).begin())\n\n#define clr(a) memset((a),0,sizeof(a))\n#define nclr(a) memset((a),-1,sizeof(a))\n#define pb push_back\n#define INRANGE(x,s,e) ((s)<=(x) && (x)<(e))\n#define MP(a,b) make_pair((a),(b))\n\nusing namespace std;\n\n#define MAX 1000000\n\nstruct POS{int x,y;} pos;\n\nint w, h, n;\n\nbool rot(string cmd,char *dir){\n\tif(cmd==\"LEFT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='l';break;\n\t\t\tcase 'l':*dir='d';break;\n\t\t\tcase 'd':*dir='r';break;\n\t\t\tcase 'r':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}else if(cmd==\"RIGHT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='r';break;\n\t\t\tcase 'r':*dir='d';break;\n\t\t\tcase 'd':*dir='l';break;\n\t\t\tcase 'l':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nvoid go(string cmd,char *dir,int n){\n\tif(cmd==\"FORWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':\n\t\t\t\t\n\t\t\t\tpos.y+=n;break;\n\t\t\tcase 'r':pos.x+=n;break;\n\t\t\tcase 'd':pos.y-=n;break;\n\t\t\tcase 'l':pos.x-=n;break;\n\t\t}\n\t}else if(cmd==\"BACKWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':pos.y-=n;break;\n\t\t\tcase 'r':pos.x-=n;break;\n\t\t\tcase 'd':pos.y+=n;break;\n\t\t\tcase 'l':pos.x+=n;break;\n\t\t}\n\t}\n}\n\nint main(){\n\tstring cmd;\n\tchar dir;\n\t\n\twhile(cin>>w>>h){\n\t\tpos.x=1;pos.y=1;\n\t\tdir='u';\n\t\tif(!h&&!w){\n\t\t\tbreak;\n\t\t}\n\t\twhile(1){\n\t\t\tcin>>cmd;\n\t\t\tif(cmd==\"STOP\"){\n\t\t\t\tcout<<pos.x<<\" \"<<pos.y<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(rot(cmd,&dir)){\n\t\t\t\tcontinue;\n\t\t\t}else{\n\t\t\t\tcin>>n;\n\t\t\t\tgo(cmd,&dir,n);\n\t\t\t}\n\t\t\tif(pos.x<0) pos.x=0;\n\t\t\tif(pos.y<0) pos.y=0;\n\t\t\tif(pos.x>w) pos.x=w;\n\t\t\tif(pos.y>h) pos.y=h;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint W, H, steps, dx, dy, posx, posy;\nstring cmd;\n\nint main()\n{\n\twhile( 1 )\n\t{\n\t\tcin >> W >> H;\n\t\tif(W==0 && H==0)\n\t\t\tbreak;\n\n\t\tdx = 0;\n\t\tdy = 1;\n\t\tposx = 1;\n\t\tposy = 1;\n\t\twhile( 1 )\n\t\t{\n\t\t\tcin >> cmd;\n\t\t\tif(cmd == \"FORWARD\")\n\t\t\t{\n\t\t\t\tcin >> steps;\n\t\t\t\tposx += dx * steps;\n\t\t\t\tposy += dy * steps;\n\t\t\t\tposx = (posx <= 0) ? 1 : posx;\n\t\t\t\tposy = (posy <= 0) ? 1 : posy;\n\t\t\t\tposx = (posx > W) ? W : posx;\n\t\t\t\tposy = (posy > H) ? H : posy;\n\t\t\t}\n\t\t\telse if(cmd == \"BACKWARD\")\n\t\t\t{\n\t\t\t\tcin >> steps;\n\t\t\t\tposx -= dx * steps;\n\t\t\t\tposy -= dy * steps;\n\t\t\t\tposx = (posx <= 0) ? 1 : posx;\n\t\t\t\tposy = (posy <= 0) ? 1 : posy;\n\t\t\t\tposx = (posx > W) ? W : posx;\n\t\t\t\tposy = (posy > H) ? H : posy;\n\n\t\t\t}\n\t\t\telse if(cmd == \"LEFT\")\n\t\t\t{\n\t\t\t\tint newdx = (dx==0) ? -dy : 0;\n\t\t\t\tint newdy = (dy==0) ?  dx : 0;\n\t\t\t\tdx = newdx;\n\t\t\t\tdy = newdy;\n\t\t\t}\n\t\t\telse if(cmd == \"RIGHT\")\n\t\t\t{\n\t\t\t\tint newdx = (dx==0) ?  dy : 0;\n\t\t\t\tint newdy = (dy==0) ? -dx : 0;\n\t\t\t\tdx = newdx;\n\t\t\t\tdy = newdy;\n\t\t\t}\n\t\t\telse if(cmd == \"STOP\")\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\", posx, posy);\n\t}\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <numeric>\n#include <map>\n#include <vector>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <cmath>\n#include <cctype>\n#include <queue>\n#include <algorithm>\n#include <memory>\n#include <memory.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\ntypedef pair<P,P> P2;\nconst int INF = 1 << 30;\nconst double EPS = 1E-9;\n\nint dy[] = {\n\t1, 0, -1, 0\n};\n\nint dx[] = {\n\t0, 1, 0, -1\n};\n\nint main(){\n\tint w, h;\n\twhile(cin >> w >> h && (w || h)){\n\t\tstring ord;\n\t\tint y = 1;\n\t\tint x = 1;\n\t\tint d = 0;\n\t\tint m = 0;\n\t\tbool f = false;\n\t\twhile(cin >> ord && ord != \"STOP\"){\n\t\t\tif(ord == \"RIGHT\"){\n\t\t\t\td = (d+1) % 4;\n\t\t\t}else if(ord == \"LEFT\"){\n\t\t\t\td = (d+3)%4;\n\t\t\t}else if(ord == \"BACKWARD\"){\n\t\t\t\tcin >> m;\n\t\t\t\ty -= m * dy[d];\n\t\t\t\tif(y > h){\n\t\t\t\t\tf = true;\n\t\t\t\t\ty = h;\n\t\t\t\t}\n\t\t\t\tif(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t\tf = true;\n\t\t\t\t}\n\t\t\t\tx -= m * dx[d];\n\t\t\t\tif(x > w){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = w;\n\t\t\t\t}\n\t\t\t\tif(x < 1){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tcin >> m;\n\t\t\t\ty += m * dy[d];\n\t\t\t\tif(y > h){\n\t\t\t\t\tf = true;\n\t\t\t\t\ty = h;\n\t\t\t\t}\n\t\t\t\tif(y < 1){\n\t\t\t\t\tf = true;\n\t\t\t\t\ty = 1;\n\t\t\t\t}\n\t\t\t\tx += m * dx[d];\n\t\t\t\tif(x > w){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = w;\n\t\t\t\t}\n\t\t\t\tif(x < 1){\n\t\t\t\t\tf = true;\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << x << \" \" << y << endl;\n\t}\n\treturn 0;\n}\n\t\t"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int n,m,num;\n  const int dx[4] = {0,-1,0,1};\n  const int dy[4] = {1,0,-1,0};\n  string op;\n  int mv=0;\n  int x=1,y=1;\n\n  while(true)\n    {\n      cin >> n >> m;\n      if(n == 0 && m == 0)break;\n      mv=0;\n      x=1;\n      y=1;\n\n      while(true)\n\t{\n\t  cin >> op;\n\t  if(op == \"STOP\")\n\t    {\n\t      cout << x << \" \" << y << endl;\n\t      break;\n\t    }\n\t  else if(op == \"LEFT\")\n\t    {\n\t      if(mv == 3)mv=0;\n\t      else mv+=1;\n\t    }\n\t  else if(op == \"RIGHT\")\n\t    {\n\t      if(mv == 0)mv=3;\n\t      else mv-=1;\n\t    }\n\t  else \n\t    {\n\t      cin >> num;\n\t     \n\t      if(op == \"FORWARD\")\n\t\t{\n\t\t  if((x+dx[mv]*num > 0) && (x+dx[mv]*num<=n) && (y+dy[mv]*num > 0) && (y+dy[mv]*num<=m))\n\t\t    {\n\t\t      x+=dx[mv]*num;\n\t\t      y+=dy[mv]*num;\n\t\t    }\n\t\t  \n\t\t  \n\t\t}\n\t      else \n\t\t{\n\t\t  if((x-dx[mv]*num > 0) && (x-dx[mv]*num<=n) && (y-dy[mv]*num > 0) && (y-dy[mv]*num<=m))\n\t\t    {\n\t\t      x -= dx[mv]*num;\n\t\t      y -= dy[mv]*num;\n\t\t    }\n\t\t}\n\t      // cout << \"mv = \" << mv << \", \"<< x << \" \" << y << endl;\n\t    }\n\n\n\t}\n\n\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main(void){\n\tint w,h;\n\tint dx[] = {0,1,0,-1};\n\tint dy[] = {1,0,-1,0};\n\n\twhile(cin>>w>>h && (w||h)){\n\t\tint x = 1, y = 1, d = 0;\n\n\t\twhile(1){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tif(s == \"STOP\") break;\n\n\t\t\tif(s == \"FORWARD\"){\n\t\t\t\tint t;\n\t\t\t\tcin>>t;\n\t\t\t\tx = x + t * dx[d];\n\t\t\t\ty = y + t * dy[d];\n\t\t\t\tif(x < 1) x = 1;\n\t\t\t\tif(x > w) x = w;\n\t\t\t\tif(y < 1) y = 1;\n\t\t\t\tif(y > h) y = h;\n\t\t\t}\n\t\t\telse if(s == \"BACKWARD\"){\n\t\t\t\tint t;\n\t\t\t\tcin>>t;\n\t\t\t\tx = x - t * dx[d];\n\t\t\t\ty = y - t * dy[d];\n\t\t\t\tif(x < 1) x = 1;\n\t\t\t\tif(x > w) x = w;\n\t\t\t\tif(y < 1) y = 1;\n\t\t\t\tif(y > h) y = h;\n\t\t\t}\n\t\t\telse if(s == \"RIGHT\"){\n\t\t\t\td = (d+1) % 4;\n\t\t\t}\n\t\t\telse{\n\t\t\t\td = (d+3) % 4;\n\t\t\t}\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\nint dx[] = {0,1,0,-1};\nint dy[] = {1,0,-1,0};\n \nint main(){\n    int W,H;\n    while(cin >> W >> H && W){\n        string cmd;\n        int x=0,y=0,d=0;\n        while(cin >> cmd , cmd != \"STOP\"){\n            if(cmd[0]=='F'){\n                int val; cin >> val;\n                rep(i,val)x += dx[d] , y += dy[d];\n            }else if(cmd[0] == 'B'){\n                int val; cin >> val;\n                rep(i,val)x += dx[(d+2)%4] , y += dy[(d+2)%4];\n            }else if(cmd[0] == 'R'){\n                d = (d+1)%4;\n            }else if(cmd[0] == 'L'){\n                d = (d+3)%4;\n            }\n            if(x<0)x=0;\n            if(x>=W)x = W-1;\n            if(y<0)y=0;\n            if(y>=H)y = H-1;\n        }\n        cout << x+1 << \" \" << y+1 << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <stdlib.h>\n\nusing namespace std;\n\nint m,n;\nint direction=0;// 0:north, 1:east, 2:south, 3:west\n\nint main(){\n  string cmd, arg;\n  int x,y,i;\n\n  while ( 1 ){\n    cin >> m >> n;\n    if( !m&&!n ) break;\n    x=1; y=1;\n    while( 1 ){\n      cin >> cmd;\n      if( cmd==\"FORWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) y+=nn;\n\telse if( direction==2 ) y-=nn;\n\telse if( direction==1 ) x+=nn;\n\telse if( direction==3 ) x-=nn;\n\telse cout << \"unknown_direction\" <<endl;\n      }else if( cmd==\"BACKWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) y-=nn;\n\telse if( direction==2 ) y+=nn;\n\telse if( direction==1 ) x-=nn;\n\telse if( direction==3 ) x+=nn;\n\telse cout << \"unknown_direction\" <<endl;\n      }else if( cmd==\"RIGHT\" ){\n\tdirection = ++direction % 4;\n      }else if( cmd==\"LEFT\" ){\n\tdirection = --direction % 4;\n      }else { // stop\n\tbreak;\n      }\n      if( x<1 ) x=1;\n      else if( x>m ) x=m;\n      if( y<1 ) y=1;\n      else if( y>n ) y=n;\n    }\n    cout << x << \" \"<<y<< endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define all(in) in.begin(),in.end()\n#define pb(in,a) in.push_back(a)\nusing namespace std;\nint a[4]={0,1,0,-1};\nint b[4]={1,0,-1,0};\nint main(){\n  int n,m;\n  while(cin>>n>>m,n||m){\n    int to=0;\n    string s;\n    int x=1,y=1;\n    while(cin>>s){\n      int tmp;\n      cin>>tmp;\n      if(s==\"STOP\")break;\n      if(s==\"FORWARD\"){\n\tx+=tmp*a[to];\n\ty+=tmp*b[to];\n      }else{\n\tx-=tmp*a[to];\n\ty-=tmp*b[to];\n      }\n      if(x>n)x=n;\n      else if(x<1)x=1;\n      if(y>m)y=m;\n      else if(y<1)y=1;\n\n\n      cin>>s;\n      if(s==\"STOP\")break;\n      else if(s==\"LEFT\")to--;\n      else to++;\n      if(to>3)to=0;\n      else if(to<0)to=3;\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n#include<string>\nusing namespace std;\n\nint main(){\n  int n,m,x,y,num;\n  int di=0;\n  string order;\n  while(1){\n    cin>>n>>m;\n    x=1;y=1;\n    if(n==0 && m==0)break;\n    while(1){\n      cin>>order;\n      if(order==\"FORWARD\"){\n\tcin>>num;\n\tif(di==0){\n\t  y=min(y+num,m);\n\t}else if(di==1){\n\t  x=min(x+num,n);\n\t}else if(di==2){\n\t  y=max(y-num,1);\n\t}else if(di==3){\n\t  x=max(x-num,1);\n\t}\n      \n      }else if(order==\"BACKWARD\"){\n\tcin>>num;\n\tif(di==2){\n\t  y=min(y+num,m);\n\t}else if(di==3){\n\t  x=min(x+num,n);\n\t}else if(di==0){\n\t  y=max(y-num,1);\n\t}else if(di==1){\n\t  x=max(x-num,1);\n\t}\n      }else if(order==\"RIGHT\"){\n\tdi=(di+1)%4;\n      }else if(order==\"LEFT\"){\n\tdi=(di-1)%4;\n      }else if(order==\"STOP\"){\n\tcout << x <<\" \"<<y<<endl;\n\tbreak;\n      }else{\n\tcout << \"ERROR \"<<order<<endl;\n\treturn 0;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nint dx[]{ 0,1,0,-1 }, dy[]{ 1,0,-1,0 };\nint main() {\n\tint w, h;\n\twhile (scanf(\"%d%d\", &w, &h), w) {\n\t\tint x = 1, y = 1, idx = 0;\n\t\twhile (1) {\n\t\t\tstring s; cin >> s;\n\t\t\tif (s == \"STOP\")break;\n\t\t\tif (s == \"RIGHT\") {\n\t\t\t\tidx = (idx + 1) % 4; continue;\n\t\t\t}\n\t\t\tif (s == \"LEFT\") {\n\t\t\t\tidx = (idx + 3) % 4; continue;\n\t\t\t}\n\t\t\tint d; scanf(\"%d\", &d);\n\t\t\tif (s == \"FORWARD\") {\n\t\t\t\tint nx = x + dx[idx] * d, ny = y + dy[idx] * d;\n\t\t\t\tif (0 < nx&&nx <= w && 0 < ny&&ny <= h) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\ty = ny;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint nx = x - dx[idx] * d, ny = y - dy[idx] * d;\n\t\t\t\tif (0 < nx&&nx <= w && 0 < ny&&ny <= h) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\ty = ny;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main() {\n\n  int w,h;\n  while(true) {\n    cin>>w>>h;\n    if(!w&&!h) break;\n    string op;\n    int time;\n\n    int nx=1,ny=1,dir=1;\n\n    while(true) {\n      cin>>op;\n      if(op==\"STOP\") break;\n      else if(op==\"RIGHT\") {\n\tdir++;\n\tdir%=4;\n      }else if(op==\"LEFT\") {\n\tdir--;\n\tdir%=4;\n      }else if(op==\"FORWARD\") {\n\tcin>>time;\n\tif(dir==1) {\n\t  ny+=time;\n\t  if(ny>h) ny=h;\n\t}else if(dir==2) {\n\t  nx+=time;\n\t  if(nx>w) nx=w;\n\t}else if(dir==3) {\n\t  ny-=time;\n\t  if(ny<1) ny=1;\n\t}else if(dir==0) {\n\t  nx-=time;\n\t  if(nx<1) nx=1;\n\t}\n      }else if(op==\"BACKWARD\") {\n\tcin>>time;\n\tif(dir==1) {\n\t  ny-=time;\n\t  if(ny>h) ny=h;\n\t}else if(dir==2) {\n\t  nx-=time;\n\t  if(nx>w) nx=w;\n\t}else if(dir==3) {\n\t  ny+=time;\n\t  if(ny<1) ny=1;\n\t}else if(dir==0) {\n\t  nx+=time;\n\t  if(nx<1) nx=1;\n\t}\n      }\n    }\n    cout<<nx<<\" \"<<ny<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint dx[4] = { 0, 1, 0, -1 };\nint dy[4] = { 1, 0, -1, 0 };\n\nint main() {\n  int w,h,v;\n  string s;\n  while(cin>>w>>h, w||h) {\n    int x=1,y=1,dir=0;\n    while(1) {\n      cin>>s;\n\n      if(s == \"STOP\") {\n\tcout<<x<<\" \"<<y<<endl;\n\tbreak;\n      }else if(s == \"FORWARD\") {\n\tcin>>v;\n\tx += v*dx[dir];\n\ty += v*dy[dir];\n      }else if(s == \"BACKWARD\") {\n\tcin>>v;\n\tx += -v*dx[dir];\n\ty += -v*dy[dir];\n      }else if(s == \"RIGHT\") {\n\tdir++;\n      }else if(s == \"LEFT\") {\n\tdir--;\n      }\n      x = min(w,x);\n      x = max(1,x);\n      y = min(h,y);\n      y = max(1,y);\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int mv[4][3]=\n    {{0,1,1}, //forward\n     {-1,0,0},//left\n     {0,-1,0},//backward\n     {1,0,0}};//right\n  int n,m,num,x,y;\n  string op;\n\n  while(true){\n    cin >> n >> m;\n    if(n == 0 && m == 0)break;\n    x=1;y=1;\n\n    while(true){\n      cin >> op;\n      if(op == \"STOP\")break;\n      else if(op == \"LEFT\")\n\t{\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i != 3){\n\t\t    mv[i][2]=0;\n\t\t    mv[i+1][2]=1;\n\t\t  }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      mv[0][2]=1;\n\t\t      mv[3][2]=0;\n\t\t    }\n\t\t  else cout << \"********arienai********\" << endl;\n\t\t  break;\n\t\t}\n\t    }\n\t}\n      else if(op == \"RIGHT\")\n\t{//\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      mv[0][2]=0;\n\t\t      mv[3][2]=1;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      mv[i][2]=0;\n\t\t      mv[i-1][2]=1;\n\t\t    }\n\t\t  break;\n\t\t}\n\t    }\n\t}//\n      else if(op == \"FORWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=n;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n else if(op == \"BACKWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=n;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n\n      //cout << \"op = \" << op << \",num =  \" << num << \", \"  << x << \" \" << y << endl; \n\n    }\n    cout << x << \" \" << y << endl; \n\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint y,x,d,w,h;\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nstring s;\nint main(){\n  while(cin>>w>>h,w){\n    y=x=d=0;\n    while(cin>>s){\n      if(s==\"STOP\"){cout<<x+1<<' '<<y+1<<endl;break;}\n      else if(s==\"RIGHT\")d=(d+1)%4;\n      else if(s==\"LEFT\")d=(d-1+4)%4;\n      else{\n\tint n=d,c;\n\tif(s==\"BACKWARD\")n=(n+2)%4;\n\tcin>>c;\n\twhile(c--){\n\t  int yy=y+dy[n];\n\t  int xx=x+dx[n];\n\t  if(0<=yy&&yy<h)y=yy;\n\t  if(0<=xx&&xx<w)x=xx;\n\t}\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n  int i,j,xmax,ymax,x,y,p,p2,a;\n  string str;\n  while(1){\n    cin >> xmax >> ymax;\n    if(xmax == 0 && ymax == 0) break;\n\n      x = y = 1;\n      p = 0;\n    while(1){\n      cin >> str;\n      if(p > 3) p -= 4;\n      else if(p < 0) p += 4;\n      p2 = p;\n      if(str == \"STOP\") break;\n      else if(str == \"RIGHT\") p++;\n      else if(str == \"LEFT\") p--;\n      else if(str == \"FORWARD\" || str == \"BACKWARD\"){\n\tcin >> a;\n\tif(str == \"BACKWARD\") p2 = (p2+2)%4;\n\tif(p2 == 0){\n\t  if(y+a >= ymax) y = ymax;\n\t  else y += a;\n\t}\n\telse if(p2 == 1){\n\t  if(x+a >= xmax) x = xmax;\n\t  else x += a;\n\t}\n\telse if(p2 == 2){\n\t  if(y-a <= 1) y = 1;\n\t  else y -= a;\n\t}\n\telse if(p2 == 3){\n\t  if(x-a <= 1) x = 1;\n\t  else x -= a;\n\t}\n      }\n    }\n\n    cout << x << \" \" << y << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <utility>\n#include <sstream>\n#include <complex>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(long long i=(a);i<(b);i++)\n#define REP(i,N) for(long long i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define fi first\n#define se second\n\n#define PI acos(-1.0)\n#define INF 1000000007\n#define EPS 1e-10\n#define MAX_M 100100\n\ntypedef long long ll;\ntypedef pair<ll, ll> P;\ntypedef pair<double, double> PD;\ntypedef pair<string, ll> PS;\ntypedef vector<ll> V;\ntypedef pair<P, char> PC;\n\nint x, y;\nstring s;\n\nint dx[] = { 0, 1, 0, -1};\nint dy[] = { 1, 0, 1, 0 };\n\nint main(){\n\twhile (cin >> x >> y&&x + y){\n\t\tint posx = 1, posy = 1, muki = 0;\n\t\twhile (cin >> s){\n\t\t\tint num;\n\t\t\tif (s == \"STOP\")break;\n\t\t\tif (s == \"FORWARD\"){\n\t\t\t\tcin >> num;\n\t\t\t\tREP(i, num){\n\t\t\t\t\tint ny = posy + dy[muki], nx = posx + dx[muki];\n\t\t\t\t\tif (ny >= 1 && ny <= y&&nx >= 1 && nx <= x){\n\t\t\t\t\t\tposy = ny, posx = nx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (s == \"BACKWARD\"){\n\t\t\t\tcin >> num;\n\t\t\t\tREP(i, num){\n\t\t\t\t\tint ny = posy - dy[muki], nx = posx - dx[muki];\n\t\t\t\t\tif (ny >= 1 && ny <= y&&nx >= 1 && nx <= x){\n\t\t\t\t\t\tposy = ny, posx = nx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (s == \"RIGHT\"){\n\t\t\t\tmuki++;\n\t\t\t\tif (muki > 4)muki = 0;\n\t\t\t}\n\t\t\telse if (s == \"LEFT\"){\n\t\t\t\tmuki--;\n\t\t\t\tif (muki < 0)muki = 4;\n\t\t\t}\n\t\t}\n\t\tcout << posx << \" \" << posy << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\twhile (a != 0 || b != 0) {\n\t    int x = 1, y = 1;\n\t    int degree = 0;\n\t    string hi;\n\t    cin >> hi;\n\t    while (hi != \"STOP\") {\n\t        int move = 0;\n\t        if (hi == \"FORWARD\") {\n\t            cin >> move;\n\t        }\n\t        else if (hi == \"BACKWARD\") {\n\t            cin >> move;\n\t            move = -move;\n\t        }\n\t        else if (hi == \"LEFT\") {\n\t            degree = degree - 90;\n\t        }\n\t        else if (hi == \"RIGHT\") {\n\t            degree += 90;\n\t        }\n\t        if (move != 0) {\n\t            int i = x, o = y;\n\t            int dir = degree / 90;\n\t            dir = dir % 4;\n\t            if (dir == 0) x = x + move;\n\t            else if (dir == 1 || dir == -3) y = y + move;\n\t            else if (dir == 2 || dir == -2) x = x - move;\n\t            else if (dir == 3 || dir == -1) y = y - move;\n\t            if (x < 1 || x > b || y < 1 || y > a) {\n\t                x = i; y = o;\n\t            }\n\t        }\n\t        cin >> hi;\n\t    }\n\t    cout << y << \" \" << x << endl;\n\t    cin >> a >> b;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nint dx[]{ 0,1,0,-1 }, dy[]{ 1,0,-1,0 };\nint main() {\n\tint w, h;\n\twhile (scanf(\"%d%d\", &w, &h), w) {\n\t\tint x = 1, y = 1, idx = 0;\n\t\twhile (1) {\n\t\t\tstring s; cin >> s;\n\t\t\tif (s == \"STOP\")break;\n\t\t\tif (s == \"RIGHT\") {\n\t\t\t\tidx = (idx + 1) % 4; continue;\n\t\t\t}\n\t\t\tif (s == \"LEFT\") {\n\t\t\t\tidx = (idx + 3) % 4; continue;\n\t\t\t}\n\t\t\tint d; scanf(\"%d\", &d);\n\t\t\tif (s == \"FORWARD\") {\n\t\t\t\tint nx = x + dx[idx] * d, ny = y + dy[idx] * d;\n\t\t\t\tif (0 < nx&&nx <= w && 0 < ny&&ny <= h) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\ty = ny;\n\t\t\t\t}\n\t\t\t\telse x = 1, y - 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint nx = x - dx[idx] * d, ny = y - dy[idx] * d;\n\t\t\t\tif (0 < nx&&nx <= w && 0 < ny&&ny <= h) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\ty = ny;\n\t\t\t\t}\n\t\t\t\telse x = 1, y = 1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream> \nusing namespace std; \nint n,m,x,y,a,robot,flg; \nstring moji; \nvoid change(){ \n  if(moji==\"LEFT\"){ \n    robot+=3; \n    robot%=4; \n  }else{ \n    robot++; \n    robot%=4; \n  } \n} \nvoid walk(int a,int z){ \n  //  int cy=y,cx=x; \n  if(robot%4==0)y+=a*z; \n  if(robot%4==1)x+=a*z; \n  if(robot%4==2)y-=a*z; \n  if(robot%4==3)x-=a*z; \n  if(y>m)y=m; \n  if(y<1)y=1; \n  if(x>n)x=n; \n  if(x<1)x=1; \n} \nint main(){ \n  while(1){ \n    cin>>n>>m; \n    if(n==0&&m==0)break; \n    x=y=1;robot=0; \n    while(1){ \n      cin>>moji; \n      if(moji==\"FORWARD\"){ \n    cin>>a; \n    walk(a,1); \n      }else if(moji==\"BACKWARD\"){ \n    cin>>a; \n    walk(a,-1); \n      }else if(moji==\"STOP\"){ \n    break; \n      }else{ \n    change(); \n      } \n    } \n    cout<<x<<' '<<y<<endl;  \n  } \n  return 0; \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <stack>\n\nusing namespace std;\n\nint main() {\n\n  int m, n;\n\n  while(cin >> m >> n) {\n\n    if(m == 0 || n == 0) break;\n  \n    int x = 1;\n    int y = 1;\n\n    string command;\n    int offset;\n\n    int direction = 0;\n    \n    while(cin >> command) {\n\n      if(command == \"STOP\") {\n\n\tcout << x << \" \" << y << endl;\n\tbreak;\n\n      }\n\n      if(command == \"LEFT\") {\n\n\tdirection += 1;\n\tdirection %= 4;\n\n      }\n\n      if(command == \"RIGHT\") {\n\n\tdirection -= 1;\n\tif(direction == -1) direction = 3;\n\tdirection %= 4;\n\n      }\n\n      if(command == \"FORWARD\") {\n\n\tcin >> offset;\n\t\n\tswitch(direction) {\n\n\tcase 0:\n\t  if(y + offset > n) y = n;\n\n\t  else y += offset;\n\n\t  break;\n\n\tcase 1:\n\t  if(x - offset < 1) x = 1;\n\n\t  else x -= offset;\n\n\t  break;\n\n\tcase 2:\n\t  if(y - offset < 1) y = 1;\n\n\t  else y -= offset;\n\n\t  break;\n\n\tcase 3:\n\t  if(x + offset > m) x = m;\n\n\t  else x += offset;\n\n\t  break;\n\n\t}\n\n      }\n\n      if(command == \"BACKWARD\") {\n\n\tcin >> offset;\n\t\n\tswitch(direction) {\n\n\tcase 0:\n\t  if(y - offset < 1) y = 1;\n\n\t  else y -= offset;\n\n\t  break;\n\n\tcase 1:\n\t  if(x + offset > m) x = m;\n\n\t  else x += offset;\n\n\t  break;\n\n\tcase 2:\n\t  if(y + offset > n) y = n;\n\n\t  else y += offset;\n\n\t  break;\n\n\tcase 3:\n\t  if(x - offset < 1) x = 1;\n\n\t  else x -= offset;\n\n\t  break;\n\n\t}\n\t\n      }\n\n      cout << x << \" \" << y << \" \" << direction << endl;\n\n    }\n  }\n  \n  \n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint input() {\n\tint r;\n\tscanf(\"%d\", &r);\n\treturn r;\n}\nint main() {\n\tint h, w;\n\twhile (cin >> h >> w, h) {\n\t\tint x = 1, y = 1, d = 1;\n\t\tstring s;\n\t\twhile (cin >> s) {\n\t\t\tif (s[0] == 'S')break;\n\t\t\tif (s[0] == 'L')d++;\n\t\t\tif (s[0] == 'R')d += 3;\n\t\t\td %= 4;\n\t\t\tif ((s[0] == 'F' && d == 1) || (s[0] == 'B' && d == 3)) {\n\t\t\t\ty += input(); y = min(y, w);\n\t\t\t}\n\t\t\tif ((s[0] == 'F' && d == 3) || (s[0] == 'B' && d == 1)) {\n\t\t\t\ty -= input(); y = max(y, 1);\n\t\t\t}\n\t\t\tif ((s[0] == 'F' && d == 0) || (s[0] == 'B' && d == 2)) {\n\t\t\t\tx += input(); x = min(x, h);\n\t\t\t}\n\t\t\tif ((s[0] == 'F' && d == 2) || (s[0] == 'B' && d == 0)) {\n\t\t\t\tx -= input(); x = max(x, 1);\n\t\t\t}\n\t\t}\n\t\tcout << x << ' ' << y << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int uli;\nint main(){\n   int n,m,v;\n   char s[20];\n   while(scanf(\"%d %d\",&m,&n)==2){\n      if(m==0 && n==0)break;\n      int dr=1,dc=0;\n      int r=0,c=0;\n      while(scanf(\"%s\",s)==1){\n         if(s[0]=='S')break;\n         if(s[0]=='F'){\n            scanf(\"%d\",&v);\n            r=min(n-1,r+v*dr);\n            c=min(m-1,c+v*dc);            \n         }\n         else if(s[0]=='B'){\n            scanf(\"%d\",&v);\n            r=max(0,r-v*dr);\n            c=max(0,c-v*dc);            \n         }\n         else if(s[0]=='R'){\n            swap(dr,dc);\n            dr=-dr;\n         }\n         else if(s[0]=='L'){\n            swap(dr,dc);\n            dc=-dc;\n         }\n      }\n      printf(\"%d %d\\n\",c+1,r+1);\n   }\n   return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <utility>\n#include <sstream>\n#include <complex>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(long long i=(a);i<(b);i++)\n#define REP(i,N) for(long long i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define fi first\n#define se second\n\n#define PI acos(-1.0)\n#define INF 1000000007\n#define EPS 1e-10\n#define MAX_M 100100\n\ntypedef long long ll;\ntypedef pair<ll, ll> P;\ntypedef pair<double, double> PD;\ntypedef pair<string, ll> PS;\ntypedef vector<ll> V;\ntypedef pair<P, char> PC;\n\nint x, y;\nstring s;\n\nint dx[] = { 0, 1, 0, -1};\nint dy[] = { 1, 0, -1, 0 };\n\nint main(){\n\twhile (cin >> x >> y&&x + y){\n\t\tint posx = 1, posy = 1, muki = 0;\n\t\twhile (cin >> s){\n\t\t\tint num;\n\t\t\tif (s == \"STOP\")break;\n\t\t\tif (s == \"FORWARD\"){\n\t\t\t\tcin >> num;\n\t\t\t\tREP(i, num){\n\t\t\t\t\tint ny = posy + dy[muki], nx = posx + dx[muki];\n\t\t\t\t\tif (ny >= 1 && ny <= y&&nx >= 1 && nx <= x){\n\t\t\t\t\t\tposy = ny, posx = nx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (s == \"BACKWARD\"){\n\t\t\t\tcin >> num;\n\t\t\t\tREP(i, num){\n\t\t\t\t\tint ny = posy - dy[muki], nx = posx - dx[muki];\n\t\t\t\t\tif (ny >= 1 && ny <= y&&nx >= 1 && nx <= x){\n\t\t\t\t\t\tposy = ny, posx = nx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (s == \"RIGHT\"){\n\t\t\t\tmuki++;\n\t\t\t\tif (muki > 3)muki = 0;\n\t\t\t}\n\t\t\telse if (s == \"LEFT\"){\n\t\t\t\tmuki--;\n\t\t\t\tif (muki < 0)muki = 3;\n\t\t\t}\n\t\t}\n\t\tcout << posx << \" \" << posy << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <fstream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <assert.h>\n\t\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define ALL(s) (s).begin(),(s).end()\n#define ITE(c) typeof((c).begin())\n\n#define clr(a) memset((a),0,sizeof(a))\n#define nclr(a) memset((a),-1,sizeof(a))\n#define pb push_back\n#define INRANGE(x,s,e) ((s)<=(x) && (x)<(e))\n#define MP(a,b) make_pair((a),(b))\n\nusing namespace std;\n\n#define MAX 1000000\n\nstruct POS{int x,y;} pos;\nint w, h, n;\n\nbool rot(string cmd,char *dir){\n\tif(cmd==\"LEFT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='l';break;\n\t\t\tcase 'l':*dir='d';break;\n\t\t\tcase 'd':*dir='r';break;\n\t\t\tcase 'r':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}else if(cmd==\"RIGHT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='r';break;\n\t\t\tcase 'r':*dir='d';break;\n\t\t\tcase 'd':*dir='l';break;\n\t\t\tcase 'l':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nvoid go(string cmd,char *dir,int n){\n\tif(cmd==\"FORWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':\n\t\t\t\tif(h>=pos.y+n&&pos.y+n>=1){\n\t\t\t\t\tpos.y+=n;\n\t\t\t\t}break;\n\t\t\tcase 'r':\n\t\t\t\tif(w>=pos.x+n&&pos.x+n>=1){\n\t\t\t\t\tpos.x+=n;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tif(h>=pos.y-n&&pos.y-n>=1){\n\t\t\t\t\tpos.y-=n;\n\t\t\t\t}break;\n\t\t\tcase 'l':\n\t\t\t\tif(w>=pos.x-n&&pos.x-n>=1){\n\t\t\t\t\tpos.x-=n;\n\t\t\t\t}break;\n\t\t}\n\t}else if(cmd==\"BACKWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':\n\t\t\t\tif(h>=pos.y-n&&pos.y-n>=1){\n\t\t\t\t\tpos.y-=n;\n\t\t\t\t}break;\n\t\t\tcase 'r':\n\t\t\t\tif(w>=pos.x-n&&pos.x-n>=1){\n\t\t\t\t\tpos.x-=n;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tif(h>=pos.y+n&&pos.y+n>=1){\n\t\t\t\t\tpos.y+=n;\n\t\t\t\t}break;\n\t\t\tcase 'l':\n\t\t\t\tif(w>=pos.x+n&&pos.x+n>=1){\n\t\t\t\t\tpos.x+=n;\n\t\t\t\t}break;\n\t\t}\n\t}\n}\n\nint main(){\n\tstring cmd;\n\tchar dir;\n\twhile(cin>>w>>h){\n\t\tpos.x=1;pos.y=1;\n\t\tdir='u';\n\t\tif(!h&&!w){\n\t\t\tbreak;\n\t\t}\n\t\twhile(1){\n\t\t\tcin>>cmd;\n\t\t\tif(cmd==\"STOP\"){\n\t\t\t\tcout<<pos.x<<\" \"<<pos.y<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(rot(cmd,&dir)){\n\t\t\t\tcout<<\"(\"<<pos.x<<\",\"<<pos.y<<\")\"<<dir<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcin>>n;\n\t\t\tgo(cmd,&dir,n);\n\t\t\tcout<<\"(\"<<pos.x<<\",\"<<pos.y<<\")\"<<dir<<endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(void){\n  int n,m;\n  int dx[4] = { 0 , 1 , 0 , -1 };\n  int dy[4] = { 1 , 0 , -1 , 0 };\n  int angle;\n  string order;\n  int x,y;\n  int Go;\n\n  while(1){\n\n    angle = 0; x = y = 1;\n\n    cin >> n >> m;\n\n    if( n == 0 && m == 0 ) break;\n\n    while(1){\n\n      cin >> order;\n\n      if( order == \"RIGHT\" ){\n\tangle++;\n\tif( angle == 4 ) angle = 0;\n\tcontinue;\n      }\n\n      else if( order == \"LEFT\" ){\n\tangle--;\n\tif( angle == -1 ) angle = 3;\n\tcontinue;\n      }\n\n      else if( order == \"STOP\" ){\n\tcout << x << \" \" << y << endl;\n\tbreak;\n      }\n\n      cin >> Go;\n\n      if( order == \"FORWARD\" ){\n\n\tx += dx[angle]*Go;\n\ty += dy[angle]*Go;\n\n\tif( x < 0 ) x = 0;\n\tif( y < 0 ) y = 0;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n\n      else if( order == \"BACKWARD\" ){\n\n\tx -= dx[angle]*Go;\n\ty -= dy[angle]*Go;\n\n\tif( x < 0 ) x = 0;\n\tif( y < 0 ) y = 0;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n    }\n  }\n\n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main(){\n\n\tint h,w;\n\tint x,y;\n\tint k;\n\tint dx,dy;\n\tstring a;\n\n\twhile(1){\n\n\t\tcin>>w>>h;\n\t\tif(h==0&&w==0) break;\n\n\t\tx=1,y=1;\n\t\tdx=0,dy=1;\n\t\twhile(1){\n\t\t\tcin>>a>>k;\n\t\t\tif(a==\"FORWARD\"){\n\t\t\t\ty+=dy*k,x+=dx*k;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ty-=dy*k,x-=dx*k;\n\t\t\t}\n\t\t\tif(y<1) y=1;\n\t\t\tif(y>h) y=h;\n\t\t\tif(x<1) x=1;\n\t\t\tif(x>w) x=w;\n\n\t\t\tcin>>a;\n\t\t\tif(a==\"STOP\") break;\n\t\t\telse if(a==\"RIGHT\"){\n\t\t\t\tif(dy==1&&dx==0) dx=1,dy=0;\n\t\t\t\telse if(dy==0&&dx==1) dx=0,dy=-1;\n\t\t\t\telse if(dy==-1&&dx==0) dx=-1,dy=0;\n\t\t\t\telse dx=0,dy=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(dy==1&&dx==0) dx=-1,dy=0;\n\t\t\t\telse if(dy==0&&dx==-1) dx=0,dy=-1;\n\t\t\t\telse if(dy==-1&&dx==0) dx=1,dy=0;\n\t\t\t\telse dx=0,dy=1;\n\t\t\t}\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <double,double> P;\ntypedef pair <int,P> PP;\n\nstatic const double EPS = 1e-8;\n\nconst int tx[] = {0,1,0,-1};\nconst int ty[] = {1,0,-1,0};\n\n//up\n//right\n//down\n//left\nvoid move(int sx,int sy,int dir,\n\tint* dx,int* dy,int dist,int W,int H,string cmd){\n\t\tif(cmd==\"forw\"){\n\t\t\t*dx = (sx + tx[dir]*dist >= W ? W-1 : (sx + tx[dir]*dist < 0 ? 0 : sx + tx[dir]*dist));\n\t\t\t*dy = (sy + ty[dir]*dist >= H ? H-1 : (sy + ty[dir]*dist < 0 ? 0 : sy + ty[dir]*dist));\n\t\t}\n\t\telse{\n\t\t\t*dx = (sx + tx[(dir+2)%4]*dist >= W ? W-1 : (sx + tx[(dir+2)%4]*dist < 0 ? 0 : sx + tx[(dir+2)%4]*dist));\n\t\t\t*dy = (sy + ty[(dir+2)%4]*dist >= H ? H-1 : (sy + ty[(dir+2)%4]*dist < 0 ? 0 : sy + ty[(dir+2)%4]*dist));\n\t\t}\n}\n\nint main(){\n\tint W,H;\n\twhile(cin >> W >> H){\n\t\tif(W==0 && H==0) break;\n\t\tint posX=0,posY=0;\n\t\tstring cmd;\n\t\tint dir = 0;\n\t\twhile(cin >> cmd){\n\t\t\tif(cmd == \"FORWARD\"){\n\t\t\t\tint dist;\n\t\t\t\tcin >> dist;\n\t\t\t\tmove(posX,posY,dir,&posX,&posY,dist,W,H,\"forw\");\n\t\t\t}\n\t\t\telse if(cmd == \"BACKWARD\"){\n\t\t\t\tint dist;\n\t\t\t\tcin >> dist;\n\t\t\t\tmove(posX,posY,dir,&posX,&posY,dist,W,H,\"back\");\n\t\t\t}\n\t\t\telse if(cmd == \"RIGHT\"){\n\t\t\t\tdir++;\n\t\t\t\tif(dir >= 4) dir = 0;\n\t\t\t}\n\t\t\telse if(cmd == \"LEFT\"){\n\t\t\t\tdir--;\n\t\t\t\tif(dir < 0) dir = 3;\n\t\t\t}\n\t\t\telse if(cmd == \"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",posX+1,posY+1);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint main(void){\n    int c,r;\n    while(cin >> c >> r){\n        if(c==0&&r==0)break;\n        int x=1,y=1,n;\n        int angle=0;\n        const int POSX[] = {0,1,0,-1};\n        const int POSY[] = {1,0,-1,0};\n        string s;\n        while(cin>>s){\n            if(s==\"FORWARD\"){\n                cin >> n;\n                int dx = n*POSX[angle];\n                int dy = n*POSY[angle];\n                if(x+dx<1)x = 1;\n                else if(x+dx>c)x=c;\n                else x += dx;\n                if(y+dy<1)y = 1;\n                else if(y+dy>r)y=r;\n                else y += dy;\n            }else if(s==\"BACKWARD\"){\n                cin >> n;\n                int dx = n*POSX[angle];\n                int dy = n*POSY[angle];\n                if(x-dx<1)x = 1;\n                else if(x-dx>c)x=c;\n                else x -= dx;\n                if(y-dy<1)y = 1;\n                else if(y-dy>r)y=r;\n                else y -= dy;\n            }else if(s==\"RIGHT\") angle++;\n            else if(s==\"LEFT\") angle--;\n            else if(s==\"STOP\") break;\n            angle = (angle + 4) % 4;\n        }\n        cout << x << \" \" << y << \"n\";\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\nint H, W, d; char buf[8];\nint dx[4] = { 0, 1, 0, -1 }, dy[4] = { 1, 0, -1, 0 };\nint main() {\n\twhile (scanf(\"%d%d\", &W, &H), H) {\n\t\tint x = 1, y = 1, d = 0;\n\t\twhile (scanf(\"%s\", buf), buf[0] != 'S') {\n\t\t\tscanf(\"%d\", &d);\n\t\t\tswitch (buf[0]) {\n\t\t\tcase 'F': x += dx[d] * d, y += dy[d] * d; break;\n\t\t\tcase 'B': x -= dx[d] * d, y -= dy[d] * d; break;\n\t\t\tcase 'R': d = (d + 1) % 4; break;\n\t\t\tcase 'L': d = (d + 3) % 4; break;\n\t\t\t}\n\t\t\tif (x < 1) x = 1; if (x > W) x = W;\n\t\t\tif (y < 1) y = 1; if (y > H) y = H;\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n  int m,n;\n  string cmd;\n  int dx[4] = {0,1,0,-1};// north, east, south, west\n  int dy[4] = {1,0,-1,0};\n  int dir;\n  int x,y, k;\n\n  while( cin>>m>>n && (m||n) ){\n    x=1; y=1; dir=0;\n    while( cin>>cmd ){\n      //      cout << \"cmd:\"<<cmd<<\"\\tx=\"<<x<<\" y=\"<<y <<\" dir=\"<<dir<< endl;\n\n      k=0;\n      if( cmd==\"FORWARD\" ){\n\tcin >> k;\n      }else if( cmd==\"BACKWARD\" ){\n\tcin >> k;\n\tk=-k;\n      }else if( cmd==\"RIGHT\" ){\n\tdir = (dir+1)%4;\n      }else if( cmd==\"LEFT\" ){\n\tdir = (dir+4-1)%4;\n      }else {\n\tbreak;\n      }\n\n      x+=(k*dx[dir]); y+=(k*dy[dir]);\n      if( x<1 ) x=1;\n      else if( x>m ) x=m;\n      if( y<1 ) y=1;\n      else if( y>n ) y=n;\n    }\n    cout << x << \" \" << y << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing db = double;\nusing ll = long long;\nusing vi = vector <int>;\n#define op operator\n#define pb push_back\n\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\n\nint main() {\n\tcout << fixed << setprecision(9);\n\tios :: sync_with_stdio(0);\n\n\tfor(int n, m; cin >> n >> m && n && m; ) {\n\t\tint x = 1, y = 1, d = 1;\n\t\tfor(string s; cin >> s && s != \"STOP\"; ) {\n\t\t\tif(s == \"LEFT\") d = (d + 1) % 4;\n\t\t\tif(s == \"RIGHT\") d = (d + 3) % 4;\n\t\t\tif(s == \"FORWARD\" || s == \"BACKWARD\") {\n\t\t\t\tint sgn = (s == \"FORWARD\" ? 1 : -1);\n\t\t\t\tint t; cin >> t;\n\t\t\t\twhile(t --) {\n\t\t\t\t\tint nx = x + dx[d] * sgn;\n\t\t\t\t\tint ny = y + dy[d] * sgn;\n\t\t\t\t\tif(nx >= 1 && nx <= n && ny >= 1 && ny <= m) {\n\t\t\t\t\t\tx = nx; y = ny;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << x << ' ' << y << '\\n';\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\nint main() {int a[4][2]={0,-1,1,0,0,1,-1,0},N,M,i,j,k,w=1;char Tex[9];while (1) {scanf(\"%d %d\",&M,&N);if (!N && !M) return 0;i=1,j=1;while (1) {scanf(\"%s\",&Tex);if (Tex[0]=='F' || Tex[0]=='B') scanf(\"%d\",&k); else k=0;if (Tex[0]=='S') break;if (Tex[0]=='B') k=-k;i+=k*a[w][0],j+=k*a[w][1];if (Tex[0]=='R') w=(w+1)&3; else if (Tex[0]=='L') w=(w+3)&3;if (i<=0) i=1;if (i>N) i=N;if (j<=0) j=1;if (j>M) j=M;}printf(\"%d %d\\n\",j,i);}}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef complex<double> P;\nstatic const double EPS = 1e-8;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\nint dx[4] = {0,1,0,-1};\nint dy[4] = {1,0,-1,0};\nint main(void){\n  int W,H;\n  while(cin>>W>>H){\n    if(!W&&!H) break;\n    int x = 0, y = 0;\n    int r = 0;\n    string command;\n    while(cin>>command){\n      int times = 0;\n      if(command==\"STOP\") break;\n      if(command==\"FORWARD\"){\n        cin>>times;\n        while(times){\n          times--;\n          int nx = x + dx[r];\n          int ny = y + dy[r];\n          if(0<=nx&&nx<W&&0<=ny&&ny<H){\n            x = nx;\n            y = ny;\n          }\n        }\n      }else if(command==\"BACKWARD\"){\n        cin>>times;\n        while(times){\n          times--;\n          int nx = x + dx[(r+2)%4];\n          int ny = y + dy[(r+2)%4];\n          if(0<=nx&&nx<W&&0<=ny&&ny<H){\n            x = nx;\n            y = ny;\n          }\n        }\n      }else if(command==\"RIGHT\"){\n        r = (r+1)%4;\n      }else if(command==\"LEFT\"){\n        r = (r+3)%4;\n      }\n    }\nEND:\n    printf(\"%d %d\\n\",x+1,y+1);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\nint dx[] = {0,1,0,-1};\nint dy[] = {1,0,-1,0};\n\nint main(){\n\tint W,H;\n\twhile(cin >> W >> H && W){\n\t\tstring cmd;\n\t\tint x=0,y=0,d=0;\n\t\twhile(cin >> cmd , cmd != \"STOP\"){\n\t\t\tif(cmd[0]=='F'){\n\t\t\t\tint val; cin >> val;\n\t\t\t\trep(i,val)x += dx[d] , y += dy[d];\n\t\t\t}else if(cmd[0] == 'B'){\n\t\t\t\tint val; cin >> val;\n\t\t\t\trep(i,val)x += dx[(d+2)%4] , y += dy[(d+2)%4];\n\t\t\t}else if(cmd[0] == 'R'){\n\t\t\t\td = (d+1)%4;\n\t\t\t}else if(cmd[0] == 'L'){\n\t\t\t\td = (d+3)%4;\n\t\t\t}\n\t\t\tif(x<0)x=0;\n\t\t\tif(x>=W)x = W-1;\n\t\t\tif(y<0)y=0;\n\t\t\tif(y>=H)y = H-1;\n\t\t}\n\t\tcout << x+1 << \" \" << y+1 << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\nconst ld eps = 1e-9;\n\n\nint main() {\n\twhile (true) {\n\t\tint W,H;cin>>W>>H;\n\t\tif(H==0)break;\n\t\tstring command;\n\t\tint dx[4] = { -1,0,1,0 };\n\t\tint dy[4] = { 0,1,0,-1 };\n\t\tint way=3;\n\t\tint nx(0);\n\t\tint ny(H-1);\n\t\twhile (cin >> command) {\n\t\t\tif (command == \"STOP\") {\n\t\t\t\tcout << nx + 1 <<\" \"<< H - ny << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (command == \"RIGHT\") {\n\t\t\t\tway=(way+3)%4;\n\t\t\t}\n\t\t\telse if (command == \"LEFT\") {\n\t\t\t\tway=(way+1)%4;\n\t\t\t}\n\t\t\telse if (command == \"FORWARD\") {\n\t\t\t\tint k;cin>>k;\n\t\t\t\twhile (k--) {\n\t\t\t\t\tconst int nextx=nx+dx[way];\n\t\t\t\t\tconst int nexty=ny+dy[way];\n\t\t\t\t\tif (nextx >= 0 && nextx < W&&nexty >= 0 && nexty < H) {\n\t\t\t\t\t\tnx=nextx;\n\t\t\t\t\t\tny=nexty;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (command == \"BACKWARD\") {\n\t\t\t\tint k; cin >> k;\n\t\t\t\tway=(way+2)%4;\n\t\t\t\twhile (k--) {\n\t\t\t\t\tconst int nextx = nx + dx[way];\n\t\t\t\t\tconst int nexty = ny + dy[way];\n\t\t\t\t\tif (nextx >= 0 && nextx < W&&nexty >= 0 && nexty < H) {\n\t\t\t\t\t\tnx = nextx;\n\t\t\t\t\t\tny = nexty;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tway = (way + 2) % 4;\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tassert(false);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\nint main(){\n\twhile(true){\n\t\tint w, h;\n\t\tcin >> w >> h;\n\t\tif(w == 0 && h == 0){ break; }\n\t\tint x = 1, y = 1, dir = 0;\n\t\twhile(true){\n\t\t\tstring command;\n\t\t\tcin >> command;\n\t\t\tif(command == \"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}else if(command == \"LEFT\"){\n\t\t\t\tdir = (dir + 3) % 4;\n\t\t\t}else if(command == \"RIGHT\"){\n\t\t\t\tdir = (dir + 1) % 4;\n\t\t\t}else if(command == \"FORWARD\"){\n\t\t\t\tint amount;\n\t\t\t\tcin >> amount;\n\t\t\t\tx += dx[dir] * amount;\n\t\t\t\ty += dy[dir] * amount;\n\t\t\t}else if(command == \"BACKWARD\"){\n\t\t\t\tint amount;\n\t\t\t\tcin >> amount;\n\t\t\t\tx -= dx[dir] * amount;\n\t\t\t\ty -= dy[dir] * amount;\n\t\t\t}\n\t\t\tif(x < 1){ x = 1; }\n\t\t\tif(x > w){ x = w; }\n\t\t\tif(y < 1){ y = 1; }\n\t\t\tif(y > h){ y = h; }\n\t\t}\n\t\tcout << x << \" \" << y << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include<math.h>\n#include <algorithm>\nusing namespace std;\n\nint n,m;\n\nbool rangeCheck(int row,int col){\n\tif(row >= 0 && row <= n-1 && col >= 0 && col <= m-1)return true;\n\telse{\n\t\treturn false;\n\t}\n}\n\nint main(){\n\n\tint div,row,col;\n\tchar order[10],dir;\n\tbool finishFLG;\n\n\twhile(true){\n\t\tscanf(\"%d %d\",&m,&n);\n\t\tif(n == 0 && m == 0)break;\n\n\t\tfinishFLG = false;\n\n\t\trow = n-1,col = 0;\n\t\tdir = 'N';\n\n\t\twhile(!finishFLG){\n\t\t\tscanf(\"%s\",order);\n\t\t\tswitch(order[0]){\n\t\t\tcase 'F':\n\t\t\t\tscanf(\"%d\",&div);\n\n\t\t\t\tswitch(dir){\n\t\t\t\tcase 'N':\n\t\t\t\t\tif(rangeCheck(row-div,col)){\n\t\t\t\t\t\trow = row - div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\trow = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tif(rangeCheck(row,col+div)){\n\t\t\t\t\t\tcol = col + div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcol = m-1;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tif(rangeCheck(row+div,col)){\n\t\t\t\t\t\trow = row + div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\trow = n-1;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'W':\n\t\t\t\t\tif(rangeCheck(row,col-div)){\n\t\t\t\t\t\tcol = col - div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcol = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'B':\n\t\t\t\tscanf(\"%d\",&div);\n\n\t\t\t\tswitch(dir){\n\t\t\t\tcase 'N':\n\t\t\t\t\tif(rangeCheck(row+div,col)){\n\t\t\t\t\t\trow = row + div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\trow = n-1;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tif(rangeCheck(row,col-div)){\n\t\t\t\t\t\tcol = col - div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcol = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tif(rangeCheck(row-div,col)){\n\t\t\t\t\t\trow = row - div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\trow = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'W':\n\t\t\t\t\tif(rangeCheck(row,col+div)){\n\t\t\t\t\t\tcol = col + div;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcol = m-1;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'R':\n\t\t\t\tswitch(dir){\n\t\t\t\tcase 'N':\n\t\t\t\t\tdir = 'E';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tdir = 'S';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tdir = 'W';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'W':\n\t\t\t\t\tdir = 'N';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tswitch(dir){\n\t\t\t\tcase 'N':\n\t\t\t\t\tdir = 'W';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tdir = 'N';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tdir = 'E';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'W':\n\t\t\t\t\tdir = 'S';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'S':\n\t\t\t\tprintf(\"%d %d\\n\",col+1,n-row);\n\t\t\t\tfinishFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int mv[4][3]=\n    {{0,1,1}, //forward\n     {-1,0,0},//left\n     {0,-1,0},//backward\n     {1,0,0}};//right\n  int n,m,num,x,y;\n  string op;\n\n  while(true){\n    cin >> n >> m;\n    if(n == 0 && m == 0)break;\n    x=1;y=1;\n\n    while(true){\n      cin >> op;\n      if(op == \"STOP\")break;\n      else if(op == \"LEFT\")\n\t{\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i != 3){\n\t\t    mv[i][2]=0;\n\t\t    mv[i+1][2]=1;\n\t\t  }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      mv[0][2]=1;\n\t\t      mv[3][2]=0;\n\t\t    }\n\t\t  else cout << \"********arienai********\" << endl;\n\t\t  break;\n\t\t}\n\t    }\n\t}\n      else if(op == \"RIGHT\")\n\t{//\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      mv[0][2]=0;\n\t\t      mv[3][2]=1;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      mv[i][2]=0;\n\t\t      mv[i-1][2]=1;\n\t\t    }\n\t\t  break;\n\t\t}\n\t    }\n\t}//\n      else if(op == \"FORWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      //cout << \"x = \" << x << \", num = \" << num << endl;\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n else if(op == \"BACKWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\n\t\t}\n\n\t    }\n\n\n\t}\n\n      //cout << \"op = \" << op << \",num =  \" << num << \", \"  << x << \" \" << y << endl; \n\n    }\n    cout << x << \" \" << y << endl; \n\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\nusing namespace std;\nint W, H, x, y;\nstring op;\nint dir = 1;\n\nvoid forDir(int len){\n  if(dir == 1) y += len;\n  if(dir == 2) x += len;\n  if(dir == 3) y -= len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n}\n\nvoid backDir(int len){\n  if(dir == 1) y -= len;\n  if(dir == 2) x -= len;\n  if(dir == 3) y += len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n}\n\nint main(){\n  while(cin >> W >> H){\n    if(W == 0 && H == 0) break;\n    \n    x = 1, y = 1;\n    \n    while(cin >> op){\n      int move = 0;\n      if(op == \"STOP\") break;\n      \n      else if(op == \"FORWARD\"){\n\tcin >> move;\n\tforDir(move);\n      }\n      \n      else if(op == \"BACKWARD\"){\n\tcin >> move;\n\tbackDir(move);\n      }\n      \n      else if(op == \"RIGHT\"){\n\tdir++;\n\tif(dir == 5) dir = 1;\n      }\n      \n      else if(op == \"LEFT\"){\n\tdir--;\n\tif(dir == 0) dir = 4;\n      }\n      //printf(\"dir = %d, x = %d, y = %d\\n\", dir, x, y);\n    }\n    cout << x << ' ' << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint main(){\n  string order;\n  int height,wide,x,y,num;\n  while(1){\n    x = 1; y = 1;\n    cin >> wide >> height;\n    if( wide == 0 && height == 0 ) break;\n    int flag = 0;\n    int angle = 1;\n    int flag2 = 0;\n    while(1){\n\n      cin >> order;\n      if( order == \"STOP\" ) break;\n\n      if( order == \"FORWARD\" ){\n\tcin >> num;\n\tif( angle == 1 ){\n\t  y+=num;\n\t  flag2 = 1;\n\t    }\n\telse if( angle == 2 ){\n\t  x+=num;\n\t  flag2 = 2;\n\t}\n\telse if( angle == 3 ){\n\t  y-=num;\n\t  flag2 = 3;\n\t}\n\telse if( angle == 4 ){\n\t  x-=num;\n\t  flag2 = 4;\n\t}\n      }\n      \n\tif( order == \"BACKWARD\" ){\n\t  cin >> num;\n\t  if( angle == 1 ){\n\t    y-=num;\n\t    flag2 = 3;\n\t  }\n\t  else if( angle == 2 ){\n\t    x-=num;\n\t    flag2 = 4;\n\t  }\n\t  else if( angle == 3 ){\n\t    y+=num;\n\t    flag2 = 1;\n\t  }\n\t  else if( angle == 4 ){\n\t    x+=num;\n\t    flag2 = 2;\n\t  }\n\n\t}\n\n\tif( x < 0 || x > wide ){\n\t  flag = 1;\n\t  if( flag2 == 2 ){\n\t    x-=num;\n\t  }else if( flag2 = 4 ){\n\t    x+=num;\n\t  }\n\t}\n\n\tif( y < 0 || y > height ){\n\t  flag = 1;\n\t  if( flag2 == 1 ){\n\t    y-=num;\n\t  }else if( flag2 = 3 ){\n\t    y+=num;\n\t  }\n\t}\n\n      \n\n\tif( flag == 1 ) break;\n      \n\tif( order == \"RIGHT\" ){\n\t  angle++;\n\t  if( angle == 5 ) angle = 1;\n\t}\n\n\tif( order == \"LEFT\" ){\n\t  angle--;\n\t  if( angle == 0 ) angle = 4;\n\t}\n      \n      }\n      cout << x << \" \" << y << endl;\n      if ( flag == 1 ) break;\n    }\n\n    return 0;\n  }"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\nint dx[4] = {0, 1, 0, -1};\nint dy[4] = {1, 0, -1, 0};\n\nclass Point\n{\npublic:\n\tint x, y;\n};\n\nvoid solve()\n{\n\tint n, m;\n\twhile(cin >> n >> m, n || m)\n\t{\n\t\tstring s;\n\t\tPoint current;\n\t\tcurrent.x = 1;\n\t\tcurrent.y = 1;\n\t\tvector< vector<char> > field(m + 1, vector<char>(n + 1));\n\t\tint direction = 0;\n\t\twhile(cin >> s)\n\t\t{\n\t\t\tif(s == \"FORWARD\" || s == \"BACKWARD\")\n\t\t\t{\n\t\t\t\tint size;\n\t\t\t\tcin >> size;\n\t\t\t\tif(s == \"FORWARD\")\n\t\t\t\t{\n\t\t\t\t\tif(current.x + dx[direction] * size <= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.x = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(current.x + dx[direction] * size > n)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.x = n;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.x += dx[direction] * size;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(current.y + dy[direction] * size <= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.y = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(current.y + dy[direction] * size > m)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.y = m;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.y += dy[direction] * size;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(current.x + dx[(direction + 2) % 4] * size <= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.x = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(current.x + dx[(direction + 2) % 4] * size > n)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.x = n;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.x += dx[(direction + 2) % 4] * size;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(current.y + dy[(direction + 2) % 4] * size <= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.y = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(current.y + dy[(direction + 2) % 4] * size > m)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.y = m;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.y += dy[(direction + 2) % 4] * size;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(s == \"RIGHT\")\n\t\t\t{\n\t\t\t\tdirection = (direction + 1) % 4;\n\t\t\t}\n\t\t\telse if(s == \"LEFT\")\n\t\t\t{\n\t\t\t\tif(direction == 0)\n\t\t\t\t{\n\t\t\t\t\tdirection = 3;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t--direction;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout << current.x << \" \" << current.y << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(void){\n  int n,m;\n  int dx[4] = { 0 , 1 , 0 , -1 };\n  int dy[4] = { 1 , 0 , -1 , 0 };\n  int angle;\n  string order;\n  int x,y;\n  int Go;\n\n  while(1){\n\n    angle = 0; x = y = 1;\n\n    cin >> n >> m;\n\n    if( n == 0 && m == 0 ) break;\n\n    while(1){\n\n      cin >> order;\n\n      if( order == \"RIGHT\" ){\n\tangle++;\n\tif( angle == 4 ) angle = 0;\n\tcontinue;\n      }\n\n      else if( order == \"LEFT\" ){\n\tangle--;\n\tif( angle == -1 ) angle = 3;\n\tcontinue;\n      }\n\n      else if( order == \"STOP\" ){\n\tcout << x << \" \" << y << endl;\n\tbreak;\n      }\n\n      cin >> Go;\n\n      if( order == \"FORWARD\" ){\n\n\tx += dx[angle]*Go;\n\ty += dy[angle]*Go;\n\n\tif( x < 1 ) x = 1;\n\tif( y < 1 ) y = 1;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n\n      else if( order == \"BACKWARD\" ){\n\n\tx -= dx[angle]*Go;\n\ty -= dy[angle]*Go;\n\n\tif( x < 1 ) x = 1;\n\tif( y < 1 ) y = 1;\n\tif( x > n ) x = n;\n\tif( y > m ) y = m;\n\n      }\n    }\n  }\n\n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<set>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,a,n) for(int i = a ; i < n ; i++)\n#define rep(i,n) REP(i,0,n)\n\ntypedef long long ll;\n\nint dx[] = {0,1,0,-1};\nint dy[] = {1,0,-1,0};\n\nint main(){\n  int w,h;\n\n  while(cin>>w>>h,w||h){\n    string s;\n    int d = 0;\n    int x=1,y=1;\n\n    while(cin>>s,s!=\"STOP\"){\n      int nx,ny;\n\n      if(s[0] == 'F'){\n        int dist;\n        cin>>dist;\n        nx = x + dist * dx[d];\n        ny = y + dist * dy[d];\n      }\n      else if(s[0] == 'B'){\n        int dist;\n        cin>>dist;\n        nx = x + dist * dx[(d+2)%4];\n        ny = y + dist * dy[(d+2)%4];\n      }\n      else if(s[0] == 'R'){\n        d = (d + 1) % 4;\n      }\n      else{\n        d = (d + 3) % 4;\n      }\n\n      if(nx < 1) nx = 1;\n      else if(nx > w) nx = w;\n      if(ny < 1) ny = 1;\n      else if(ny > h) ny = h;\n      x = nx;\n      y = ny;\n    }\n\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstring>\n#include <map>\n#include <queue>\n#include <stack>\n#include <set>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <climits>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a);i<(int)(n);i++)\n#define rep(i,n) REP(i,0,n)\n#define pb push_back\n#define mp make_pair\n#define all(x) x.begin(),x.end()\n#define EPS 1e-8\n\nint main(){\n\tconst int dx[] = {0,1,0,-1};\n\tconst int dy[] = {1,0,-1,0};\n\tint w,h,d,dir,x,y;\n\tchar commond[16];\n\twhile(scanf(\"%d%d\",&w,&h),w|h){\n\t\tdir = 0;\n\t\tx = y = 1;\n\t\twhile(scanf(\"%s\",commond)){\n\t\t\tif( !strcmp(commond,\"STOP\") )break;\n\t\t\tif( !strcmp(commond,\"RIGHT\") ){\n\t\t\t\tdir = (dir+1)%4;\n\t\t\t}else if( !strcmp(commond,\"LEFT\") ){\n\t\t\t\tdir = (dir+3)%4;\n\t\t\t}else{\n\t\t\t\tscanf(\" %d\",&d);\n\t\t\t\tif( !strcmp(commond,\"FORWARD\") ){\n\t\t\t\t\tx += d*dx[dir];\n\t\t\t\t\ty += d*dy[dir];\n\t\t\t\t}else{\n\t\t\t\t\tx -= d*dx[dir];\n\t\t\t\t\ty -= d*dy[dir];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( x<1 )x=1;\n\t\t\tif( x>w )x=w;\n\t\t\tif( y<1 )y=1;\n\t\t\tif( y>h )y=h;\n\t\t\t//printf(\"%s : dir:%d  , %d,%d\\n\",commond,dir,x,y);\n\t\t}\n\t\tprintf(\"%d %d\\n\",x,y);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define all(in) in.begin(),in.end()\n#define pb(in,a) in.push_back(a)\nusing namespace std;\nint a[4]={0,1,0,-1};\nint b[4]={1,0,-1,0};\nint main(){\n  int n,m;\n  while(cin>>n>>m,n||m){\n    int to=0;\n    string s;\n    int x=1,y=1;\n    while(cin>>s){\n      int tmp;\n      cin>>tmp;\n      if(s==\"FORWARD\"){\n\tx+=tmp*a[to];\n\ty+=tmp*b[to];\n      }else{\n\tx-=tmp*a[to];\n\ty-=tmp*b[to];\n      }\n      if(x>n)x=n;\n      else if(x<1)x=1;\n      if(y>m)y=m;\n      else if(y<1)y=1;\n      string in;\n      cin>>in;\n      if(in==\"STOP\")break;\n      else if(in==\"LEFT\")to--;\n      else to++;\n      if(to>3)to=0;\n      else if(to<0)to=3;\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\n\nint main(){\n\tstring p,s;\n\tint point;\n\tint w,h;\n\twhile(cin >> w >> h && w || h){\n\t\tint dist=0;\n\t\tint x=1,y=1;\n\t\twhile(getline(cin,p) && p!=\"STOP\"){\n\t\t\tpoint = 0;\n\t\t\tif(~p.find(\" \")){\n\t\t\t\ts = p.substr(p.find(\" \")+1,p.length()-p.find(\" \")-1);\n\t\t\t\tp = p.substr(0,p.find(\" \"));\n\t\t\t\tpoint = atoi(s.c_str());\n\t\t\t}\n\t\t\tif(p==\"BACKWARD\")point*=-1;\n\t\t\tif(p==\"RIGHT\"){\n\t\t\t\tdist=(4+dist+1)%4;\n\t\t\t\tcontinue;\n\t\t\t}else if(p==\"LEFT\"){\n\t\t\t\tdist=(4+dist-1)%4;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tswitch(dist){\n\t\t\t\tcase 0:\n\t\t\t\t\ty += point;\n\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tx += point;\n\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ty -= point;\n\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tx -= point;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(x>w)x=w;\n\t\t\tif(x<1)x=1;\n\t\t\tif(y>h)y=h;\n\t\t\tif(y<1)y=1;\n\t\tcout << x << \" \" << y << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nvoid go_plus(int& n, int& a, int& x){ x = (x+a>n ? n : x+a); }\nvoid go_minus(int& a, int& x){ x = (x-a<1 ? 1 : x-a); }\n\nint main(){\n  int n, m, a;\n  string str;\n  while(cin >> n >> m && n && m){\n    int x=1, y=1;\n    char c = 'N';\n    while(1){\n      cin >> str;\n      if(str == \"STOP\") break;\n      if(str == \"FORWARD\"){\n\tcin >> a;\n\tif(c=='N') go_plus(m, a, y);\n\telse if(c=='S') go_minus(a, y);\n\telse if(c=='E') go_plus(n, a, x);\n\telse if(c=='W') go_minus(a, x);\n      }else if(str == \"BACKWARD\"){\n\tcin >> a;\n\tif(c=='N') go_minus(a, y);\n\telse if(c=='S') go_plus(m, a, y);\n\telse if(c=='E') go_minus(a, x);\n\telse if(c=='W') go_plus(n, a, x);\n      }else if(str == \"RIGHT\"){\n\tif(c=='N') c = 'E';\n\telse if(c=='S') c = 'W';\n\telse if(c=='E') c = 'S';\n\telse if(c=='W') c = 'N';\n      }else if(str == \"LEFT\"){\n\tif(c=='N') c = 'W';\n\telse if(c=='S') c = 'E';\n\telse if(c=='E') c = 'N';\n\telse if(c=='W') c = 'S';\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\nusing namespace std;\nstatic const double EPS = 1e-5;\ntypedef long long ll;\n\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\n\n\nmain(){\n\tint fx,fy;\n\t\n\twhile(cin>>fx>>fy){\n\t\tif(fx==0 && fy==0)break;\n\t\t\n\t\tint x=1,y=1,dir=0;\n\t\t\n\t\tstring com=\"\";\n\t\twhile(cin>>com){\n\t\t\tif(com==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}else if(com==\"FORWARD\"){\n\t\t\t\tint k;\n\t\t\t\tcin>>k;\n\t\t\t\tx+=k*dx[dir];\n\t\t\t\ty+=k*dy[dir];\n\t\t\t}else if(com==\"BACKWARD\"){\n\t\t\t\tint k;\n\t\t\t\tcin>>k;\n\t\t\t\tx-=k*dx[dir];\n\t\t\t\ty-=k*dy[dir];\n\t\t\t}else if(com==\"RIGHT\"){\n\t\t\t\tdir=(dir+1)%4;\n\t\t\t}else if(com==\"LEFT\"){\n\t\t\t\tdir=(dir+3)%4;\n\t\t\t}\n\t\t\t\n\t\t\tif(x<1)x=1;\n\t\t\tif(y<1)y=1;\n\t\t\tif(x>fx)x=fx;\n\t\t\tif(y>fy)y=fy;\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main()\n{\n  int m,n;\n  for(;cin>>n>>m,m;)\n    {\n      int x=1,y=1;\n      int dx[]={1,0,-1,0};\n      int dy[]={0,1,0,-1};\n      int lr=0;\n      string move;\n      for(;cin>>move,move!=\"STOP\";)\n\t{\n\t  if(move==\"FORWARD\")\n\t    {\n\t      int tmp;\n\t      cin>>tmp;\n\t      for(;tmp--;)\n\t\t{\n\t\t  if(x+dx[lr]>0 && x+dx[lr]<=m &&\n\t\t     y+dy[lr]>0 && y+dy[lr]<=n )\n\t\t    {\n\t\t      x+=dx[lr];\n\t\t      y+=dy[lr];\n\t\t    }\n\t\t}\n\t    }\n\n\t  if(move==\"BACKWARD\")\n\t    {\n\t      int tmp;\n\t      cin>>tmp;\n\t      for(;tmp--;)\n\t\t{\n\t\t  if(x-dx[lr]>0 && x-dx[lr]<=m &&\n\t\t     y-dy[lr]>0 && y-dy[lr]<=n )\n\t\t    {\n\t\t      x-=dx[lr];\n\t\t      y-=dy[lr];\n\t\t    }\n\t\t}\n\t    }\n\t  if(move==\"RIGHT\")\n\t    {\n\t      lr++;\n\t      if(lr>3)\n\t\tlr=0;\n\t    }\n\t  if(move==\"LEFT\")\n\t    {\n\t      lr--;\n\t      if(lr<0)\n\t\tlr=3;\n\t    } \n\t}\n      cout<<y<<\" \"<<x<<endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef complex<double> P;\nstatic const double EPS = 1e-8;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\nint dx[4] = {0,1,0,-1};\nint dy[4] = {1,0,-1,0};\nint main(void){\n  int W,H;\n  while(cin>>W>>H){\n    if(!W&&!H) break;\n    int x = 0, y = 0;\n    int r = 0;\n    string command;\n    while(cin>>command){\n      int times = 0;\n      if(command==\"STOP\") break;\n      if(command==\"FORWARD\"){\n        cin>>times;\n        while(times){\n          times--;\n          int nx = x + dx[r];\n          int ny = y + dy[r];\n          if(0<=nx&&nx<W&&0<=ny&&ny<H){\n            x = nx;\n            y = ny;\n          }else{\n            goto END;\n          }\n        }\n      }else if(command==\"BACKWARD\"){\n        cin>>times;\n        while(times){\n          times--;\n          int nx = x + dx[(r+2)%4];\n          int ny = y + dy[(r+2)%4];\n          if(0<=nx&&nx<W&&0<=ny&&ny<H){\n            x = nx;\n            y = ny;\n          }else{\n            goto END;\n          }\n        }\n      }else if(command==\"RIGHT\"){\n        r = (r+1)%4;\n      }else if(command==\"LEFT\"){\n        r = (r-1)%4;\n      }\n    }\nEND:\n    printf(\"%d %d\\n\",x+1,y+1);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <fstream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <assert.h>\n\t\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define ALL(s) (s).begin(),(s).end()\n#define ITE(c) typeof((c).begin())\n\n#define clr(a) memset((a),0,sizeof(a))\n#define nclr(a) memset((a),-1,sizeof(a))\n#define pb push_back\n#define INRANGE(x,s,e) ((s)<=(x) && (x)<(e))\n#define MP(a,b) make_pair((a),(b))\n\nusing namespace std;\n\n#define MAX 1000000\n\nstruct POS{int x,y;} pos;\n\nint w, h, n;\n\nbool rot(string cmd,char *dir){\n\tif(cmd==\"LEFT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='l';break;\n\t\t\tcase 'l':*dir='d';break;\n\t\t\tcase 'd':*dir='r';break;\n\t\t\tcase 'r':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}else if(cmd==\"RIGHT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='r';break;\n\t\t\tcase 'r':*dir='d';break;\n\t\t\tcase 'd':*dir='l';break;\n\t\t\tcase 'l':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nvoid go(string cmd,char *dir,int n){\n\tif(cmd==\"FORWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':\n\t\t\t\t\n\t\t\t\tpos.y+=n;break;\n\t\t\tcase 'r':pos.x+=n;break;\n\t\t\tcase 'd':pos.y-=n;break;\n\t\t\tcase 'l':pos.x-=n;break;\n\t\t}\n\t}else if(cmd==\"BACKWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':pos.y-=n;break;\n\t\t\tcase 'r':pos.x-=n;break;\n\t\t\tcase 'd':pos.y+=n;break;\n\t\t\tcase 'l':pos.x+=n;break;\n\t\t}\n\t}\n}\n\nint main(){\n\tstring cmd;\n\tchar dir;\n\t\n\tifstream ifs(\"in.txt\");\n\t\n\twhile(ifs>>w>>h){\n\t\tpos.x=1;pos.y=1;\n\t\tdir='u';\n\t\tif(!h&&!w){\n\t\t\tbreak;\n\t\t}\n\t\twhile(1){\n\t\t\tifs>>cmd;\n\t\t\tif(cmd==\"STOP\"){\n\t\t\t\tcout<<pos.x<<\" \"<<pos.y<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(rot(cmd,&dir)){\n\t\t\t\tcontinue;\n\t\t\t}else{\n\t\t\t\tifs>>n;\n\t\t\t\tgo(cmd,&dir,n);\n\t\t\t}\n\t\t\tif(pos.x<0) pos.x=0;\n\t\t\tif(pos.y<0) pos.y=0;\n\t\t\tif(pos.x>w) pos.x=w;\n\t\t\tif(pos.y>h) pos.y=h;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\n\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\n\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nint dx[8] = {-1, 0, 1, 0, -1, -1, 1, 1};\nint dy[8] = {0, -1, 0, 1, -1, 1, -1, 1};\n\n\n\nint main() {\n  int m, n, len;\n  string s;  \n\n  while(cin >> m >> n, m+n) {\n    int angle = 0;\n    PII p(1,1); \n    \n    while(cin >> s) {\n      if(s == \"STOP\") break;  \n      else if(s == \"FORWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second += x;\n\telse if(angle%4 == 1) p.first -= x;\n\telse if(angle%4 == 2) p.second -= x;\n\telse p.first += x;\n      }\n      else if(s == \"BACKWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second -= x;\n\telse if(angle%4 == 1) p.first += x;\n\telse if(angle%4 == 2) p.second += x;\n\telse p.first -= x;\n      }\n      else if(s == \"RIGHT\") angle--;\n      else if(s == \"LEFT\") angle++;\n      if(p.first < 1) p.first = 1;\n      if(p.first > m) p.first = m;\n      if(p.second < 1) p.second = 1;\n      if(p.second > n) p.second = n;\n    }\n    cout << p.first << ' ' << p.second << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define repb(i, a, b) for(int i = a; i >= b; i--)\n#define all(a) a.begin(), a.end()\n#define int long long\nusing namespace std;\n\nint dy[4] = {1, 0, -2, 0};\nint dx[4] = {0, 1, 0, -1};\n\nsigned main(){\n    int m, n;\n    while(1){\n        cin >> m >> n;\n        if(m + n == 0) break;\n        string s;\n        int k, y = 0, x = 0, dir = 0;\n        while(1){\n            cin >> s;\n            if(s == \"STOP\") break;\n            if(s == \"RIGHT\") dir = (dir + 1) % 4;\n            else if(s == \"LEFT\") dir = (dir + 3) % 4;\n            else{\n                cin >> k;\n                if(s == \"BACKWARD\") dir = (dir + 2) % 4;\n                rep(i, 0 ,k){\n                    int ty = y + dy[dir];\n                    int tx = x + dx[dir];\n                    if(!(0 <= ty && ty <n && 0 <= tx && tx < m)) break;\n                    y = ty; x = tx;\n                }\n            }\n        }\n        cout << x + 1 << ' ' << y + 1 << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "/* ***********************************************\nAuthor        :axp\nCreated Time  :2015/5/15 23:29:01\nFile Name     :1.cpp\n************************************************ */\n\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <set>\n#include <map>\n#include <string>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n\nint n,m;\nint x,y;\nstring s;\nint sta;\nint go[4][2] = {\n\t{0,1},\t\t// UP\n\t{1,0},\t\t// RIGHT\n\t{0,-1},\t\t// DOWN\n\t{-1,0}\t\t// LEFT\n};\nint k;\n\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n    //freopei(\"out.txt\",\"w\",stdout);\n    while(cin>>n>>m && n && m)\n\t{\n\t\tsta=0;\n\t\tx=1;\n\t\ty=1;\n\t\tfor(;;)\n\t\t{\n\t\t\tcin>>s;\n\t\t\tif(s[0]=='S')\n\t\t\t\tbreak;\n\t\t\tif(s[0]=='R')\n\t\t\t\tsta=(sta+1)%4;\n\t\t\telse if(s[0]=='L')\n\t\t\t\tsta=(sta+3)%4;\n\t\t\telse if(s[0]=='F')\n\t\t\t{\n\t\t\t\tcin>>k;\n\t\t\t\tx+=go[sta][0]*k;\n\t\t\t\tx=min(x,n);\n\t\t\t\ty+=go[sta][1]*k;\n\t\t\t\ty=min(y,m);\n\t\t\t\tx=max(1,x);\n\t\t\t\ty=max(1,y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcin>>k;\n\t\t\t\tk=-k;\n\t\t\t\tx+=go[sta][0]*k;\n\t\t\t\tx=min(x,n);\n\t\t\t\ty+=go[sta][1]*k;\n\t\t\t\ty=min(y,m);\n\t\t\t\tx=max(1,x);\n\t\t\t\ty=max(1,y);\n\t\t\t}\n\t\t\t//cout<<x<<' '<<y<<endl;\n\t\t}\n\t\tcout<<x<<' '<<y<<endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int UP = 0, RIGHT = 1, DOWN = 2, LEFT = 3;\n\nint m, n;\nint i = 1, j = 1;\nint dir = UP;\n\nvoid fwd(int s) {\n  if (dir == UP)\n    j = min(j + s, n);\n  if (dir == DOWN)\n    j = max(j - s, 1);\n  if (dir == RIGHT)\n    i = min(i + s, m);\n  if (dir == LEFT)\n    i = max(i - s, 1);\n}\n\nint main() {\n  while (true) {\n    cin >> m >> n;\n    i = j = 1;\n    dir = UP;\n    if (m == 0 && n == 0)\n      break;\n    while (true) {\n      string s;\n      int t = 0;\n      cin >> s;\n      if (s == \"BACKWARD\" || s == \"FORWARD\")\n        cin >> t;\n      if (s == \"STOP\")\n        break;\n      if (s == \"RIGHT\")\n        dir = (dir + 1) % 4;\n      if (s == \"LEFT\")\n        dir = (dir + 3) % 4;\n      if (s == \"BACKWARD\") {\n        dir = (dir + 2) % 4;\n        fwd(t);\n        dir = (dir + 2) % 4;\n      }\n      if (s == \"FORWARD\")\n        fwd(t);\n      // printf(\"(%d, %d) | Dir: %d | Command: %s %d\\n\", i, j, dir, s.c_str(),\n      // t);\n    }\n    cout << i << \" \" << j << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\n#define NIL 20000\n\nenum Directions { North, East, South, West, Direction_Max };\nenum Instructions { FORWARD, BACKWARD, RIGHT, LEFT, Instractions_Max };\nconst char Inst[][16] = {\"FORWARD\",\"BACKWARD\",\"RIGHT\",\"LEFT\"};\nusing namespace std;\n\nint main(){\n\twhile( true ){\n\t\tint direction = North;\n\t\tint max_x = 0;\n\t\tint max_y = 0;\n\t\tint nowpos_x = 1;\n\t\tint nowpos_y = 1;\n\n\t\tcin >> max_x >> max_y;\n\n\t\tif( max_x == 0 && max_y == 0 )\n\t\t\tbreak;\n\n\t\twhile( true ){\n\t\t\tint k = NIL;\n\t\t\tstd::string instruction;\n\n\t\t\tcin >> instruction;\n\t\t\tif( instruction.compare(\"STOP\") == 0 )\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tfor(int ei = FORWARD; ei < Instractions_Max; ++ei ){\n\t\t\t\tif( instruction.compare( Inst[ei] ) == 0 ){\n\t\t\t\t\tswitch( ei ){\n\t\t\t\t\t\tcase FORWARD: cin >> k; break;\n\t\t\t\t\t\tcase BACKWARD: cin >> k; k = -k; break;\n\t\t\t\t\t\tcase RIGHT: direction = ( direction + 1 ) % Direction_Max; break;\n\t\t\t\t\t\tcase LEFT: direction = (direction - 1 + Direction_Max ) % Direction_Max; break;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( k != NIL ){\n\t\t\t\tswitch( direction ){\n\t\t\t\t\tcase North: nowpos_y += k; break;\n\t\t\t\t\tcase East: nowpos_x += k; break;\n\t\t\t\t\tcase West: nowpos_x -= k; break;\n\t\t\t\t\tcase South: nowpos_y -= k; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( nowpos_x < 1 ) nowpos_x = 1;\n\t\t\tif( nowpos_x > max_x ) nowpos_x = max_x;\n\t\t\tif( nowpos_y < 1 ) nowpos_y = 1;\n\t\t\tif( nowpos_y > max_y ) nowpos_y = max_y;\n\t\t\t\n\t\t}\n\t\tcout << nowpos_x << ' ' << nowpos_y << '\\n';\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main() {\n\n  int w,h;\n  while(true) {\n    cin>>w>>h;\n    if(!w&&!h) break;\n    string op;\n    int time;\n\n    int nx=1,ny=1,dir=1;\n\n    while(true) {\n      cin>>op;\n      if(op==\"STOP\") break;\n      else if(op==\"RIGHT\") {\n\tdir++;\n\tdir%=4;\n      }else if(op==\"LEFT\") {\n\tdir--;\n\tdir%=4;\n      }else if(op==\"FORWARD\") {\n\tcin>>time;\n\tif(dir==1) {\n\t  ny+=time;\n\t}else if(dir==2) {\n\t  nx+=time;\n\t}else if(dir==3) {\n\t  ny-=time;\n\t}else if(dir==0) {\n\t  nx-=time;\n\t}\n      }else if(op==\"BACKWARD\") {\n\tcin>>time;\n\tif(dir==1) {\n\t  ny-=time;\n\t}else if(dir==2) {\n\t  nx-=time;\n\t}else if(dir==3) {\n\t  ny+=time;\n\t}else if(dir==0) {\n\t  nx+=time;\n\t}\n      }\n      if(nx<1) nx=1;\n      if(nx>w) nx=w;\n      if(ny<1) ny=1;\n      if(ny>h) ny=h;\n    }\n    cout<<nx<<\" \"<<ny<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nint dx[]{ 0,1,0,-1 }, dy[]{ 1,0,-1,0 };\nint main() {\n\tint w, h;\n\twhile (scanf(\"%d%d\", &w, &h), w) {\n\t\tint x = 1, y = 1, idx = 0;\n\t\twhile (1) {\n\t\t\tstring s; cin >> s;\n\t\t\tif (s == \"STOP\")break;\n\t\t\tif (s == \"RIGHT\") {\n\t\t\t\tidx = (idx + 1) % 4; continue;\n\t\t\t}\n\t\t\tif (s == \"LEFT\") {\n\t\t\t\tidx = (idx + 3) % 4; continue;\n\t\t\t}\n\t\t\tint d; scanf(\"%d\", &d);\n\t\t\tif (s == \"FORWARD\") {\n\t\t\t\tx+= dx[idx] * d, y+= dy[idx] * d;\n\t\t\t\tif (x <= 0)x = 1; if (y <= 0)y = 1;\n\t\t\t\tif (x > w)x = w; if (y > h)y = h;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx -= dx[idx] * d, y -= dy[idx] * d;\n\t\t\t\tif (x <= 0)x = 1; if (y <= 0)y = 1;\n\t\t\t\tif (x > w)x = w; if (y > h)y = h;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\ntypedef string command;\ntypedef int Direction;\nenum Dir{UP,RIGHT,DOWN,LEFT};\nDirection dx[]={ 0, 1, 0,-1};\nDirection dy[]={ 1, 0,-1, 0};\nstring getDirString(Direction dir){\n\tif(dir==UP)return \"UP\";\n\telse if(dir==RIGHT)return \"RIGHT\";\n\telse if(dir==DOWN)return \"DOWN\";\n\telse if(dir==LEFT)return \"LEFT\";\n}\nclass Point{\npublic:\n\tint x;\n\tint y;\n\tDirection dir;\n\tPoint(int _x,int _y){\n\t\tx=_x;y=_y;\n\t}\n\tvoid print2(){\n\t\tcout<<\"(\"<<x<<\",\"<<y<<\")\"<<getDirString(dir)<<endl;\n\t}\n\tvoid print(){\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n};\nPoint Robot=Point(1,1);\nint w,h;\n\nvoid move(int correction){\n\tint num;\n\tcin>>num;\n\tRobot.x=Robot.x+dx[Robot.dir]*num*correction;\n\tRobot.y=Robot.y+dy[Robot.dir]*num*correction;\n\tif(Robot.x<1)Robot.x=1;\n\tif(Robot.x>w)Robot.x=w;\n\n\tif(Robot.y<1)Robot.y=1;\n\tif(Robot.y>h)Robot.y=h;\n}\nbool isMove(command com){\n\tif(com==\"FORWARD\"){\n\t\tmove(1);\n\t\treturn true;\n\t}\n\telse if(com==\"BACKWARD\"){\n\t\tmove(-1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool isDir(command com){\n\tif(com==\"LEFT\"){\n\t\tRobot.dir=(Robot.dir+3)%4;\n\t\treturn true;\n\t}\n\telse if(com==\"RIGHT\"){\n\t\tRobot.dir=(Robot.dir+1)%4;\n\t\treturn true;\n\t}\n\treturn false;\n}\nbool isStop(command com){\n\tif(com==\"STOP\"){\n\t\treturn true;\n\t}\n\treturn false;\n}\nvoid init(){\n\tRobot.x=1;\n\tRobot.y=1;\n\tRobot.dir=UP;\n}\n\n\nint\nmain(){\n\n\tfor(;cin>>w>>h&&(w||h);){\n\t\tinit();\n\t\t//Robot.print2();\n\t\tfor(;true;){\n\t\t\tcommand com;\n\t\t\tcin>>com;\n\t//\t\tcout<<\"command[\"<<com<<\"]\"<<endl;\n\t\t\tif(isStop(com))break;\n\t\t\telse if(isMove(com));\n\t\t\telse if(isDir(com));\n\t\t\telse{}\n\t\t//\tRobot.print2();\n\t\t}\n\t\tRobot.print();\n//\t\tcout<<\"------------\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main(){\n\n\tint h,w;\n\tint x,y;\n\tint k;\n\tint dx,dy;\n\tstring a;\n\n\twhile(1){\n\n\t\tcin>>w>>h;\n\t\tif(h==0&&w==0) break;\n\n\t\tx=1,y=1;\n\t\tdx=0,dy=1;\n\t\twhile(1){\n\t\t\tcin>>a;\n\t\t\tif(a==\"STOP\") break;\n\t\t\tcin>>k;\n\t\t\tif(a==\"FORWARD\"){\n\t\t\t\ty+=dy*k,x+=dx*k;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ty-=dy*k,x-=dx*k;\n\t\t\t}\n\t\t\tif(y<1) y=1;\n\t\t\tif(y>h) y=h;\n\t\t\tif(x<1) x=1;\n\t\t\tif(x>w) x=w;\n\n\t\t\tcin>>a;\n\t\t\tif(a==\"STOP\") break;\n\t\t\telse if(a==\"RIGHT\"){\n\t\t\t\tif(dy==1&&dx==0) dx=1,dy=0;\n\t\t\t\telse if(dy==0&&dx==1) dx=0,dy=-1;\n\t\t\t\telse if(dy==-1&&dx==0) dx=-1,dy=0;\n\t\t\t\telse dx=0,dy=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(dy==1&&dx==0) dx=-1,dy=0;\n\t\t\t\telse if(dy==0&&dx==-1) dx=0,dy=-1;\n\t\t\t\telse if(dy==-1&&dx==0) dx=1,dy=0;\n\t\t\t\telse dx=0,dy=1;\n\t\t\t}\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\tfor(int w,h;cin>>w>>h,w|h;){\n\t\tint ci=0,cj=0;\n\t\tint di[]={0,1,0,-1},dj[]={1,0,-1,0},d=1;\n\t\tfor(;;){\n\t\t\tstring cmd; cin>>cmd;\n\t\t\tif(cmd==\"FORWARD\"){\n\t\t\t\tint n; cin>>n;\n\t\t\t\tci+=di[d]*n; cj+=dj[d]*n;\n\t\t\t\tci=max(ci,0); cj=max(cj,0);\n\t\t\t\tci=min(ci,h-1); cj=min(cj,w-1);\n\t\t\t}\n\t\t\tif(cmd==\"BACKWARD\"){\n\t\t\t\tint n; cin>>n;\n\t\t\t\tci-=di[d]*n; cj-=dj[d]*n;\n\t\t\t\tci=max(ci,0); cj=max(cj,0);\n\t\t\t\tci=min(ci,h-1); cj=min(cj,w-1);\n\t\t\t}\n\t\t\tif(cmd==\"RIGHT\")\n\t\t\t\td=(d+3)%4;\n\t\t\tif(cmd==\"LEFT\")\n\t\t\t\td=(d+1)%4;\n\t\t\tif(cmd==\"STOP\"){\n\t\t\t\tcout<<cj+1<<\" \"<<ci+1<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int uli;\nint main(){\n   int n,m,v;\n   char s[20];\n   while(scanf(\"%d %d\",&m,&n)==2){\n      if(m==0 && n==0)break;\n      int dr=1,dc=0;\n      int r=0,c=0;\n      while(scanf(\"%s\",s)==1){\n         if(s[0]=='S')break;\n         if(s[0]=='F'){\n            scanf(\"%d\",&v);\n            r=max(0,min(n-1,r+v*dr));\n            c=max(0,min(m-1,c+v*dc)); \n         }\n         else if(s[0]=='B'){\n            scanf(\"%d\",&v);\n            r=max(0,min(n-1,r-v*dr));\n            c=max(0,min(m-1,c-v*dc)); \n         }\n         else if(s[0]=='R'){\n            swap(dr,dc);\n            dr=-dr;\n         }\n         else if(s[0]=='L'){\n            swap(dr,dc);\n            dc=-dc;\n         }\n      }\n      printf(\"%d %d\\n\",c+1,r+1);\n   }\n   return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<vector>\n#include<cmath>\n#include<stdlib.h>\n#include<iomanip>\n#include<list>\n#include<deque>\n#include<map>\n#include <stdio.h>\n#include <queue>\n#include <stack>\n#define maxn 10000+5\n#define ull unsigned long long\n#define ll long long\n#define reP(i,n) for(i=1;i<=n;i++)\n#define rep(i,n) for(i=0;i<n;i++)\n#define cle(a) memset(a,0,sizeof(a))\n#define mod 90001\n#define PI 3.141592657\n#define INF 1<<30\nconst ull inf = 1LL << 61;\nconst double eps=1e-5;\n\nusing namespace std;\n\nbool cmp(int a,int b)\n{\n    return a>b;\n}\nint flag;\nint x,y,n,m;\nint getbool(int i){\n\tif(i==1){\n\t\treturn (flag+1)%4;\n\t}\n\telse {\n\t\tflag--;\n\t\tif(flag==-1){\n\t\t\treturn 3;\n\n\t\treturn flag;\n\t}\n}\nvoid getval(int num)\n{\n\tif(flag==0){\n\t\ty+=num;\n\t}\n\tif(flag==1){\n\t\tx+=num;\n\t}\n\tif(flag==2){\n\t\ty-=num;\n\t}\n\tif(flag==3){\n\t\tx-=num;\n\t}\n\tif(y>n)y=n;\n\tif(y<=0)y=1;\n\tif(x<=0)x=1;\n\tif(x>m)x=m;\n}\nint main()\n{\n    #ifndef ONLINE_JUDGE\n       freopen(\"in.txt\",\"r\",stdin);\n    #endif\n    while(cin>>m>>n){\n\t\tif((n+m)==0)break;\n\t\tflag=0;\n\t\tx=y=1;\n\t\tstring s;\n\t\twhile(cin>>s){\n\t\t\tif(s[0]=='S')break;\n\t\t\telse if(s[0]=='R'){\n\t\t\t\tflag=getbool(1);\n\t\t\t}\n\t\t\telse if(s[0]=='L')flag=getbool(2);\n\t\t\telse {\n\t\t\t\tint len;\n\t\t\t    cin>>len;\n\t\t\t    if(s[0]=='F')\n\t\t\t         getval(len);\n\t\t\t\telse getval(-len);\n\t\t\t}\n\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\n\nint main(){\n\tstring p,s;\n\tint point;\n\tint w,h;\n\twhile(cin >> w >> h && w || h){\n\t\tint dist=0;\n\t\tint x=1,y=1;\n\t\twhile(getline(cin,p) && p!=\"STOP\"){\n\t\t\tpoint = 0;\n\t\t\tif(~p.find(\" \")){\n\t\t\t\ts = p.substr(p.find(\" \")+1,p.length()-p.find(\" \")-1);\n\t\t\t\tp = p.substr(0,p.find(\" \"));\n\t\t\t\tpoint = atoi(s.c_str());\n\t\t\t}\n\t\t\tif(p==\"BACKWARD\")point*=-1;\n\t\t\tif(p==\"RIGHT\"){\n\t\t\t\tdist=(dist+1)%4;\n\t\t\t\tcontinue;\n\t\t\t}else if(p==\"LEFT\"){\n\t\t\t\tdist=(dist-1)%4;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tswitch(dist){\n\t\t\t\tcase 0:\n\t\t\t\t\ty += point;\n\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tx += point;\n\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ty -= point;\n\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tx -= point;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(x>w)x=w;\n\t\t\tif(x<1)x=1;\n\t\t\tif(y>h)y=h;\n\t\t\tif(y<1)y=1;\n\t\t}\n\t\tcout << x << \" \" << y << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nenum dir_t {north, east, south, west};\n\nint main() {\n    int w, h;\n    while (cin >> w >> h) {\n        if (w == 0 && h == 0) break;\n        dir_t dir = north;\n        int y = 1, x = 1;\n        string cmd;\n        while (cin >> cmd) {\n            if (cmd == \"STOP\") {\n                cout << x << ' ' << y << endl;\n                break;\n            } else if (cmd == \"FORWARD\") {\n                int k; cin >> k;\n                switch (dir) {\n                    case north:\n                        y += k;\n                        if (h < y) y = h;\n                        break;\n                    case west:\n                        x += k;\n                        if (w < x) x = w;\n                        break;\n                    case south:\n                        y -= k;\n                        if (y < 1) y = 1;\n                        break;\n                    case east:\n                        x -= k;\n                        if (x < 1) x = 1;\n                        break;\n                }\n            } else if (cmd == \"BACKWARD\") {\n                int k; cin >> k;\n                switch (dir) {\n                    case south:\n                        y += k;\n                        if (h < y) y = h;\n                        break;\n                    case east:\n                        x += k;\n                        if (w < x) x = w;\n                        break;\n                    case north:\n                        y -= k;\n                        if (y < 1) y = 1;\n                        break;\n                    case west:\n                        x -= k;\n                        if (x < 1) x = 1;\n                        break;\n                }\n            } else if (cmd == \"RIGHT\") {\n                switch (dir) {\n                    case north: dir = west; break;\n                    case west:  dir = south; break;\n                    case south: dir = east; break;\n                    case east: dir = north; break;\n                }\n            } else if (cmd == \"LEFT\") {\n                switch (dir) {\n                    case north: dir = east; break;\n                    case west:  dir = north; break;\n                    case south: dir = west; break;\n                    case east: dir = south; break;\n                }\n            }\n//            cout << \"DIR: \" << dir << endl;\n//            cout << \"x: \" << x << \" y: \" << y << endl;\n        }\n    }\n    return 0;\n}\n        "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <stack>\n\nusing namespace std;\n\nint main() {\n\n  int m, n;\n\n  while(cin >> m >> n) {\n\n    if(m == 0 || n == 0) break;\n  \n    int x = 1;\n    int y = 1;\n\n    string command;\n    int offset;\n\n    int direction = 0;\n    \n    while(cin >> command) {\n\n      if(command == \"STOP\") {\n\n\tcout << x << \" \" << y << endl;\n\tbreak;\n\n      }\n\n      if(command == \"LEFT\") {\n\n\tdirection += 1;\n\tdirection %= 4;\n\n      }\n\n      if(command == \"RIGHT\") {\n\n\tdirection -= 1;\n\tif(direction == -1) direction = 3;\n\tdirection %= 4;\n\n      }\n\n      if(command == \"FORWARD\") {\n\n\tcin >> offset;\n\t\n\tswitch(direction) {\n\n\tcase 0:\n\t  if(y + offset > n) y = n;\n\n\t  else y += offset;\n\n\t  break;\n\n\tcase 1:\n\t  if(x - offset < 1) x = 1;\n\n\t  else x -= offset;\n\n\t  break;\n\n\tcase 2:\n\t  if(y - offset < 1) y = 1;\n\n\t  else y -= offset;\n\n\t  break;\n\n\tcase 3:\n\t  if(x + offset > m) x = m;\n\n\t  else x += offset;\n\n\t  break;\n\n\t}\n\n      }\n\n      if(command == \"BACKWARD\") {\n\n\tcin >> offset;\n\t\n\tswitch(direction) {\n\n\tcase 0:\n\t  if(y - offset < 1) y = 1;\n\n\t  else y -= offset;\n\n\t  break;\n\n\tcase 1:\n\t  if(x + offset > m) x = m;\n\n\t  else x += offset;\n\n\t  break;\n\n\tcase 2:\n\t  if(y + offset > n) y = n;\n\n\t  else y += offset;\n\n\t  break;\n\n\tcase 3:\n\t  if(x - offset < 1) x = 1;\n\n\t  else x -= offset;\n\n\t  break;\n\n\t}\n\t\n      }\n\n      //cout << x << \" \" << y << \" \" << direction << endl;\n\n    }\n  }\n  \n  \n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nvoid GoPlus(int, int, int&);\nvoid GoMinus(int, int&);\n\nint main(){\n  int n, m, a, x, y;\n  char way;\n  string str;\n\n  while(1){\n    cin >> n >> m;\n    if(n == 0 && m == 0) break;\n\n    x = 1;\n    y = 1;\n    way = 'N';\n    while(1){\n      cin >> str;\n      if(str == \"STOP\") break;\n\n      if(str == \"FORWARD\"){\n\tcin >> a;\n\tif(way == 'N') GoPlus(m, a, y);\n\telse if(way == 'S') GoMinus(a, y);\n\telse if(way == 'E') GoPlus(n, a, x);\n\telse if(way == 'W') GoMinus(a, x);\n      }else if(str == \"BACKWARD\"){\n\tcin >> a;\n\tif(way == 'N') GoMinus(a, y);\n\telse if(way == 'S') GoPlus(m, a, y);\n\telse if(way == 'E') GoMinus(a, x);\n\telse if(way == 'W') GoPlus(n, a, x);\n      }else if(str == \"RIGHT\"){\n\tif(way == 'N') way = 'E';\n\telse if(way == 'S') way = 'W';\n\telse if(way == 'E') way = 'S';\n\telse if(way == 'W') way = 'N';\n      }else if(str == \"LEFT\"){\n\tif(way == 'N') way = 'W';\n\telse if(way == 'S') way = 'E';\n\telse if(way == 'E') way = 'N';\n\telse if(way == 'W') way = 'S';\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n  return 0;\n}\n\nvoid GoPlus(int n, int a, int& x){\n  x += a;\n  if(x > n) x = n;\n}\n\nvoid GoMinus(int a, int& x){\n  x -= a;\n  if(x < 1) x = 1;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  int h, w;\n  while(cin >> w >> h, w || h) {\n    complex<double> pos(1, 1);\n    complex<double> unit(0, 1);\n    string command;\n    while(cin >> command, command != \"STOP\") {\n      if(command == \"FORWARD\") {\n        int len;\n        cin >> len;\n        pos += unit * (double)len;\n      } else if(command == \"BACKWARD\") {\n        int len;\n        cin >> len;\n        pos += unit * (double)-len;\n      } else if(command == \"RIGHT\") {\n        unit *= complex<double>(0, -1);\n      } else if(command == \"LEFT\") {\n        unit *= complex<double>(0, 1);\n      }\n      if(pos.real() < 1) pos.real(1);\n      if(pos.real() > w) pos.real(w);\n      if(pos.imag() < 1) pos.imag(1);\n      if(pos.imag() > h) pos.imag(h);\n    }\n    cout << pos.real() << ' ' << pos.imag() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint main(void){\n\tint c,r;\n\twhile(cin >> c >> r){\n\t\tif(c==0&&r==0)break;\n\t\tint x=1,y=1,n;\n\t\tint angle=0;\n\t\tconst int POSX[] = {0,1,0,-1};\n\t\tconst int POSY[] = {1,0,-1,0};\n\t\tstring s;\n\t\twhile(cin>>s){\n\t\t\tif(s==\"FORWARD\"){\n\t\t\t\tcin >> n;\n\t\t\t\tint dx = n*POSX[angle];\n\t\t\t\tint dy = n*POSY[angle];\n\t\t\t\tif(x+dx<1)x = 1;\n\t\t\t\telse if(x+dx>c)x=c;\n\t\t\t\telse x += dx;\n\t\t\t\tif(y+dy<1)y = 1;\n\t\t\t\telse if(y+dy>r)y=r;\n\t\t\t\telse y += dy;\n\t\t\t}else if(s==\"BACKWARD\"){\n\t\t\t\tcin >> n;\n\t\t\t\tint dx = n*POSX[angle];\n\t\t\t\tint dy = n*POSY[angle];\n\t\t\t\tif(x-dx<1)x = 1;\n\t\t\t\telse if(x-dx>c)x=c;\n\t\t\t\telse x -= dx;\n\t\t\t\tif(y-dy<1)y = 1;\n\t\t\t\telse if(y-dy>r)y=r;\n\t\t\t\telse y -= dy;\n\t\t\t}else if(s==\"RIGHT\") angle++;\n\t\t\telse if(s==\"LEFT\") angle--;\n\t\t\telse if(s==\"STOP\") break;\n\t\t\tangle %= 4;\n\t\t}\n\t\tcout << x << \" \" << y << \"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\nusing namespace std;\nint W, H, x, y;\nstring op;\nint dir = 1;\n\nvoid forDir(int len){\n  if(dir == 1) y += len;\n  if(dir == 2) x += len;\n  if(dir == 3) y -= len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nvoid backDir(int len){\n  if(dir == 1) y -= len;\n  if(dir == 2) x -= len;\n  if(dir == 3) y += len;\n  if(dir == 4) x += len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nint main(){\n  while(cin >> W >> H){\n    if(W == 0 && H == 0) break;\n    \n    x = 1, y = 1;\n    dir = 1;\n    \n    while(cin >> op){\n      int move = 0;\n      if(op == \"STOP\") break;\n      \n      else if(op == \"FORWARD\"){\n\tcin >> move;\n\tforDir(move);\n      }\n      \n      else if(op == \"BACKWARD\"){\n\tcin >> move;\n\tbackDir(move);\n      }\n      \n      else if(op == \"RIGHT\"){\n\tdir++;\n\tif(dir == 5) dir = 1;\n      }\n      \n      else if(op == \"LEFT\"){\n\tdir--;\n\tif(dir == 0) dir = 4;\n      }\n      printf(\"dir = %d, x = %d, y = %d\\n\", dir, x, y);\n    }\n    cout << x << ' ' << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\nusing namespace std;\nint W, H, x, y;\nstring op;\nint dir = 1;\n\nvoid forDir(int len){\n  if(dir == 1) y += len;\n  if(dir == 2) x += len;\n  if(dir == 3) y -= len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nvoid backDir(int len){\n  if(dir == 1) y -= len;\n  if(dir == 2) x -= len;\n  if(dir == 3) y += len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nint main(){\n  while(cin >> W >> H){\n    if(W == 0 && H == 0) break;\n    \n    x = 1, y = 1;\n    \n    while(cin >> op){\n      int move = 0;\n      if(op == \"STOP\") break;\n      \n      else if(op == \"FORWARD\"){\n\tcin >> move;\n\tforDir(move);\n      }\n      \n      else if(op == \"BACKWARD\"){\n\tcin >> move;\n\tbackDir(move);\n      }\n      \n      else if(op == \"RIGHT\"){\n\tdir++;\n\tif(dir == 5) dir = 1;\n      }\n      \n      else if(op == \"LEFT\"){\n\tdir--;\n\tif(dir == 0) dir = 4;\n      }\n      //printf(\"dir = %d, x = %d, y = %d\\n\", dir, x, y);\n    }\n    cout << x << ' ' << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <double,double> P;\ntypedef pair <int,P> PP;\n\nstatic const double EPS = 1e-8;\n\nconst int tx[] = {0,1,0,-1};\nconst int ty[] = {1,0,-1,0};\n\n//up\n//right\n//down\n//left\nvoid move(int sx,int sy,int dir,\n\tint* dx,int* dy,int dist,int W,int H,string cmd){\n\t\tif(cmd==\"forw\"){\n\t\t\t*dx = (sx + tx[dir]*dist >= W ? W-1 : (sx + tx[dir]*dist < 0 ? 0 : sx + tx[dir]*dist));\n\t\t\t*dy = (sy + ty[dir]*dist >= H ? H-1 : (sy + ty[dir]*dist < 0 ? 0 : sy + ty[dir]*dist));\n\t\t}\n\t\telse{\n\t\t\t*dx = (sx + tx[dir+2]*dist >= W ? W-1 : (sx + tx[dir+2]*dist < 0 ? 0 : sx + tx[dir+2]*dist));\n\t\t\t*dy = (sy + ty[dir+2]*dist >= H ? H-1 : (sy + ty[dir+2]*dist < 0 ? 0 : sy + ty[dir+2]*dist));\n\t\t}\n}\n\nint main(){\n\tint W,H;\n\twhile(cin >> W >> H){\n\t\tif(W==0 && H==0) break;\n\t\tint posX=0,posY=0;\n\t\tstring cmd;\n\t\tint dir = 0;\n\t\twhile(cin >> cmd){\n\t\t\tif(cmd == \"FORWARD\"){\n\t\t\t\tint dist;\n\t\t\t\tcin >> dist;\n\t\t\t\tmove(posX,posY,dir,&posX,&posY,dist,W,H,\"forw\");\n\t\t\t}\n\t\t\telse if(cmd == \"BACKWARD\"){\n\t\t\t\tint dist;\n\t\t\t\tcin >> dist;\n\t\t\t\tmove(posX,posY,dir,&posX,&posY,dist,W,H,\"back\");\n\t\t\t}\n\t\t\telse if(cmd == \"RIGHT\"){\n\t\t\t\tdir++;\n\t\t\t\tif(dir >= 4) dir = 0;\n\t\t\t}\n\t\t\telse if(cmd == \"LEFT\"){\n\t\t\t\tdir--;\n\t\t\t\tif(dir < 0) dir = 3;\n\t\t\t}\n\t\t\telse if(cmd == \"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint a = 10;\n\t\t}\n\t\tprintf(\"%d %d\\n\",posX+1,posY+1);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint main(){\n\n\tint w,h;\n\twhile(cin>>w>>h&&!(w==0&&h==0)){\n\t\tvector<string> orders;\n\t\tstring str;\n\t\tgetline(cin,str);\n\t\twhile(1){\n\t\t\tgetline(cin,str);\n\t\t\torders.push_back(str);\n\t\t\tif(str==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint cy=0;\n\t\tint cx=0;\n\t\t// 0:up,1:right,2:down,3:left\n\t\tint angle=0;\n\t\tfor(int i = 0; i < orders.size(); i++){\n\t\t\tif(orders[i].substr(0,7)==\"FORWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==0)\n\t\t\t\t\tcy+=atoi(orders[i].substr(7).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx+=atoi(orders[i].substr(7).c_str());\n\t\t\t\telse if(angle==2)\n\t\t\t\t\tcy-=atoi(orders[i].substr(7).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx-=atoi(orders[i].substr(7).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcx=px;\n\t\t\t\t\tcy=py;\n\t\t\t\t\t//break;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"RIGHT\"){\n\t\t\t\tangle++;\n\t\t\t\tangle%=4;\n\t\t\t}\n\t\t\telse if(orders[i]==\"LEFT\"){\n\t\t\t\tangle--;\n\t\t\t\tangle=(angle+4)%4;\n\t\t\t}\n\t\t\telse if(orders[i].substr(0,8)==\"BACKWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==2)\n\t\t\t\t\tcy+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==0)\n\t\t\t\t\tcy-=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx-=atoi(orders[i].substr(8).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcx=px;\n\t\t\t\t\tcy=py;\n\t\t\t\t\t//break;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout<<cx+1<<\" \"<<cy+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint dx[] = {0,1,0,-1};\nint dy[] = {1,0,-1,0};\n\nint main(){\n\tint w, h, k;\n\tstring s;\n\t\n\twhile( cin >> w >> h , w || h ){\n\t\tint x=0 , y=0, dir=0;\n\t\twhile( cin >> s , s != \"STOP\" ){\n\t\t\tif( s == \"RIGHT\" ){\n\t\t\t\tdir = (dir+1) % 4;\n\t\t\t}else if( s == \"LEFT\" ){\n\t\t\t\tdir = (dir+3) % 4;\n\t\t\t}else if( s == \"FORWARD\" ){\n\t\t\t\tcin >> k;\n\t\t\t\tfor(int i=k ; i > 0 ; i-- ){\n\t\t\t\t\tint mx = x + dx[dir];\n\t\t\t\t\tint my = y + dy[dir];\n\t\t\t\t\tif( mx >= 0 && mx < w && my >= 0 && my < h ){\n\t\t\t\t\t\tx = mx;\n\t\t\t\t\t\ty = my;\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t}else if( s == \"BACKWARD\" ){\n\t\t\t\tcin >> k;\n\t\t\t\tfor(int i=k ; i > 0 ; i-- ){\n\t\t\t\t\tint mx = x - dx[dir];\n\t\t\t\t\tint my = y - dy[dir];\n\t\t\t\t\tif( mx >= 0 && mx < w && my >= 0 && my < h ){\n\t\t\t\t\t\tx = mx;\n\t\t\t\t\t\ty = my;\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << (x+1) << \" \" << (y+1) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<vector>\n#include<list>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int w,h,d,x,y,vx,vy;\n  string s;\n  while(cin>>w>>h&&w+h){\n    x=y=1;\n    vx=0;\n    vy=1;\n    while(cin>>s&&s!=\"STOP\"){\n      if(0){\n      }else if(s==\"RIGHT\"){\n\tif(vx){\n\t  if(vx==1){\n\t    vx=0;\n\t    vy=-1;\n\t  }else{\n\t    vx=0;\n\t    vy=1;\n\t  }\n\t}else{\n\t  if(vy==1){\n\t    vx=1;\n\t    vy=0;\n\t  }else{\n\t    vx=-1;\n\t    vy=0;\n\t  }\n\t}\n      }else if(s==\"LEFT\"){\n\tif(vx){\n\t  if(vx==1){\n\t    vx=0;\n\t    vy=1;\n\t  }else{\n\t    vx=0;\n\t    vy=-1;\n\t  }\n\t}else{\n\t  if(vy==1){\n\t    vx=-1;\n\t    vy=0;\n\t  }else{\n\t    vx=1;\n\t    vy=0;\n\t  }\n\t}\n      }else if(s==\"FORWARD\"){\n\tcin>>d;\n\tx+=vx*d;\n\ty+=vy*d;\n\tif(x<1)\n\t  x=1;\n\tif(y<1)\n\t  y=1;\n\tif(x>w)\n\t  x=w;\n\tif(y>h)\n\t  y=h;\n      }else if(s==\"BACKWARD\"){\n\tcin>>d;\n\tx-=vx*d;\n\ty-=vy*d;\n\tif(x<1)\n\t  x=1;\n\tif(y<1)\n\t  y=1;\n\tif(x>w)\n\t  x=w;\n\tif(y>h)\n\t  y=h;\n      }\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int mv[4][3]=\n    {{0,1,1}, //forward\n     {-1,0,0},//left\n     {0,-1,0},//backward\n     {1,0,0}};//right\n  int n,m,num,x,y;\n  string op;\n\n  while(true){\n    cin >> n >> m;\n    if(n == 0 && m == 0)break;\n    x=1;y=1;\n\n    while(true){\n      cin >> op;\n      \n      if(op == \"STOP\")break;\n      else if(op == \"LEFT\")\n\t{\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i != 3){\n\t\t    mv[i][2]=0;\n\t\t    mv[i+1][2]=1;\n\t\t  }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      mv[0][2]=1;\n\t\t      mv[3][2]=0;\n\t\t    }\n\t\t  else cout << \"********arienai********\" << endl;\n\t\t  break;\n\t\t}\n\t    }\n\t}\n      else if(op == \"RIGHT\")\n\t{//\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      mv[0][2]=0;\n\t\t      mv[3][2]=1;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      mv[i][2]=0;\n\t\t      mv[i-1][2]=1;\n\t\t    }\n\t\t  break;\n\t\t}\n\t    }\n\t}//\n      else if(op == \"FORWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y+num > m)\n\t\t\t{\n\t\t\t  // y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x-num < 0)\n\t\t\t{\n\t\t\t  // x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y-num < 0)\n\t\t\t{\n\t\t\t  //y=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      //cout << \"x = \" << x << \", num = \" << num << endl;\n\t\t      if(x+num > n)\n\t\t\t{\n\t\t\t  //x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\t\t  break;\n\t\t}\n\n\t    }\n\n\n\t}\n else if(op == \"BACKWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y-num < 0)\n\t\t\t{\n\t\t\t  //y=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x+num > n)\n\t\t\t{\n\t\t\t  //x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num > m)\n\t\t\t{\n\t\t\t  //y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x-num < 0)\n\t\t\t{\n\t\t\t  //x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  break;\n\n\t\t}\n\n\t    }\n\n\n\t}\n      //for(int i=0;i<4;i++)if(mv[i][2] == 1)cout << \"i= \" << i << endl;\n// cout << \"op = \" << op << \",num =  \" << num << \", \"  << x << \" \" << y << endl; \n\n    }\n    cout << x << \" \" << y << endl; \n    \n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <math.h>\nusing namespace std;\n\nint main() {\n\t\n\tint w,h,x,y,d,n;\n\tstring c;\n\t\n\twhile(1){\n\t\tcin>>w>>h;\n\t\tif(w==0&&h==0)return 0;\n\t\tx=1;\n\t\ty=1;\n\t\td=0;\n\t\twhile(1){\n\t\t\tcin>>c;\n\t\t\tif(c==\"FORWARD\"||c==\"BACKWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tif(c==\"BACKWARD\")n=n*-1;\n\t\t\t\tif(d==0)y+=n;\n\t\t\t\tif(d==1)x-=n;\n\t\t\t\tif(d==2)y-=n;\n\t\t\t\tif(d==3)x+=n;\n\t\t\t\tif(x<1)x=1;\n\t\t\t\tif(x>w)x=w;\n\t\t\t\tif(y<1)y=1;\n\t\t\t\tif(y>h)y=h;\n\t\t\t}\n\t\t\tif(c==\"RIGHT\"){\n\t\t\t\td--;\n\t\t\t\tif(d==-1)d=3;\n\t\t\t}\n\t\t\tif(c==\"LEFT\"){\n\t\t\t\td++;\n\t\t\t\tif(d==4)d=0;\n\t\t\t}\n\t\t\tif(c==\"STOP\"){\n\t\t\t\tcout<<x<<\" \"<<y<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define popcount __builtin_popcount\n#define CLEAR(arr, val) memset(arr, val, sizeof(arr))\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\n\nint main()\n{\n\tint w, h;\n\twhile (scanf(\"%d%d\", &w, &h), w | h)\n\t{\n\t\tint x, y, dir;\n\t\tx = y = 1;\n\t\tdir = 0;\n\t\twhile (true)\n\t\t{\n\t\t\tchar buf[16];\n\t\t\tscanf(\"%s\", buf);\n\t\t\tchar c = *buf;\n\t\t\tif (c == 'S')\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tif (c == 'F' || c == 'B')\n\t\t\t{\n\t\t\t\tint k;\n\t\t\t\tscanf(\"%d\", &k);\n\t\t\t\tint d = (dir + (c == 'B' ? 2 : 0)) % 4;\n\t\t\t\tx = max(1, min(w, x + k * dx[d]));\n\t\t\t\ty = max(1, min(h, y + k * dy[d]));\n\t\t\t}\n\t\t\telse if (c == 'L')\n\t\t\t\tdir = (dir - 1 + 4) % 4;\n\t\t\telse if (c == 'R')\n\t\t\t\tdir = (dir + 1 + 4) % 4;\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) (r).begin(),(r).end()\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing dict = map<string,int>;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = { 0,1,0,-1,1,-1,1,-1};\nconst int dx[] = { 1,0,-1, 0,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\ntemplate<typename T>\nvoid Unique(vector<T> &v){\n  sort(all(v));\n  v.erase(unique(all(v)),v.end());\n}\ntemplate<typename T>\nll FindErase(vector<T> &v,T tar){\n  ll cnt = 0;\n  for(auto it = v.begin(); it != v.end();){\n    if(*it == tar){\n      it = v.erase(it);\n      ++cnt;\n    }\n    else{\n      ++it;\n    }\n  }\n  return cnt;\n}\n\ntemplate<typename T>\nbool SuffixErase(vector<T> &v,size_t suf){\n  if(suf > v.size()) return false;\n  for(auto it = v.begin(); it != v.end();){\n    if(distance(v.begin(),it) == suf){\n      v.erase(it);\n      return true;\n    }\n    else{\n      ++it;\n    }\n  }\n  return false;\n}\n\ntemplate<typename T>\nT ston(string& str, T n){\n  istringstream sin(str) ;\n  T num ;\n  sin >> num ;\n  return num ;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  ll n,m;\n  while(cin >> n >> m && n && m){\n    string s;\n    ll k,x=1,y=1,dir = 0;\n    while(cin >> s ){\n      if(s == \"STOP\") break;\n      if(s == \"FORWARD\"){\n        cin >> k;\n        x += k * dx[dir];\n        y += k * dy[dir];\n      }\n      else if(s == \"BACKWARD\"){\n        cin >> k;\n        x -= k * dx[dir];\n        y -= k * dy[dir];\n      }\n      else if(s == \"RIGHT\"){\n        ++dir;\n      }\n      else{\n        --dir;\n      }\n      dir +=4;\n      dir %= 4;\n      if(x < 1) x = 1;\n      if(y < 1) y = 1;\n      if(x > m) x = m;\n      if(y > n) y = n;\n    }\n    if(x > m) x = m;\n    if(y > n) y = n;\n    cout << y << ' ' << x << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\n\n//1104\n\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\n\n//d:n-0 e-1 s-2 w-3\n\nint main(){\n\tint w[2], d, p[2];\n\tstring s;\n\tint n;\n\twhile(cin>>w[0]>>w[1]){\n\t\tif(w[0] == 0 && w[1] == 0) break;\n\t\td = 0;\n\t\tp[0] = p[1] = 1;\n\t\twhile(cin>>s && s != \"STOP\"){\n\t\t\t// cout<<d<<endl;\n\t\t\t// cout<<p[0]<<\" \"<<p[1]<<endl;\n\t\t\tif(s == \"FORWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tp[d % 2] = min(p[d % 2] + (d/2==0?n:-n), w[(d + 1) % 2]);\n\t\t\t}\n\t\t\telse if(s == \"RIGHT\") d = (d + 1) % 4;\n\t\t\telse if(s == \"LEFT\") d = (d + 3) % 4;\n\t\t\telse if(s == \"BACKWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tp[d % 2] = max(1, p[d % 2] + (d/2==0?-n:n));\n\t\t\t}\n\t\t}\n\t\t//cout<<d<<endl;\n\t\tcout<<p[1]<<\" \"<<p[0]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint dx[4] = { 0, 1, 0, -1 };\nint dy[4] = { 1, 0, -1, 0 };\n\nint main() {\n  int w,h,v;\n  string s;\n  while(cin>>w>>h, w||h) {\n    int x=1,y=1,dir=0;\n    while(1) {\n      cin>>s;\n\n      if(s == \"STOP\") {\n\tcout<<x<<\" \"<<y<<endl;\n\tbreak;\n      }else if(s == \"FORWARD\") {\n\tcin>>v;\n\tx += v*dx[dir];\n\ty += v*dy[dir];\n      }else if(s == \"BACKWARD\") {\n\tcin>>v;\n\tx += -v*dx[dir];\n\ty += -v*dy[dir];\n      }else if(s == \"RIGHT\") {\n\tdir++;\n      }else if(s == \"LEFT\") {\n\tdir--;\n      }\n      x = min(w,x);\n      x = max(1,x);\n      y = min(h,y);\n      y = max(1,y);\n      dir = (dir+4)%4;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdlib.h>\n\nusing namespace std;\n\nint m,n;\nint direction=0;// 0:north, 1:east, 2:south, 3:west\n\nint main(){\n  string cmd, arg;\n  int x,y,i;\n\n  while ( 1 ){\n    cin >> m >> n;\n    if( !m&&!n ) break;\n    x=1; y=1;\n    while( 1 ){\n      cin >> cmd;\n      if( cmd==\"FORWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) y+=nn;\n\telse if( direction==2 ) y-=nn;\n\telse if( direction==1 ) x+=nn;\n\telse if( direction==3 ) x-=nn;\n\telse cout << \"unknown_direction\" <<endl;\n      }else if( cmd==\"BACKWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) y-=nn;\n\telse if( direction==2 ) y+=nn;\n\telse if( direction==1 ) x-=nn;\n\telse if( direction==3 ) x+=nn;\n\telse cout << \"unknown_direction\" <<endl;\n      }else if( cmd==\"RIGHT\" ){\n\tdirection++;\n\tdirection = direction % 4;\n      }else if( cmd==\"LEFT\" ){\n\tdirection = direction + 3;\n\tdirection = direction % 4;\n      }else { // stop\n\tbreak;\n      }\n      if( x<1 ) x=1;\n      else if( x>m ) x=m;\n      if( y<1 ) y=1;\n      else if( y>n ) y=n;\n    }\n    cout << x << \" \"<<y<< endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cassert>\n#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nconstexpr int dx[] = {0, 1, 0, -1};\nconstexpr int dy[] = {1, 0, -1, 0};\n\nint correct(int pos, int limit) {\n\treturn pos > limit ? limit : pos < 1 ? 1 : pos;\n}\n\nvoid update(int &x, int &y, int dir, int amount, int w, int h) {\n\tx = correct(x + dx[dir] * amount, w);\n\ty = correct(y + dy[dir] * amount, h);\n}\n\nint main() {\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\n\tfor(int w, h; cin >> w >> h && w;) {\n\t\tint x = 1, y = 1;\n\t\tint dir = 0;\n\n\t\twhile(true) {\n\t\t\tstring instruction;\n\t\t\tcin >> instruction;\n\n\t\t\tswitch(instruction[0]) {\n\t\t\tcase 'F': // forward\n\t\t\t{\n\t\t\t\tint k;\n\t\t\t\tcin >> k;\n\t\t\t\tupdate(x, y, dir, k, w, h);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'B': // backward\n\t\t\t{\n\t\t\t\tint k;\n\t\t\t\tcin >> k;\n\t\t\t\tupdate(x, y, dir ^ 2, k, w, h);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'R': // right\n\t\t\t{\n\t\t\t\tdir = (dir + 1) % 4;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'L': // left\n\t\t\t{\n\t\t\t\tdir = (dir + 3) % 4;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'S': // stop\n\t\t\t{\n\t\t\t\tgoto finish;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\tassert(false);\n\t\t\t}\n\t\t\t}\n\t\t}\n\n\tfinish:;\n\t\tcout << x << \" \" << y << endl;\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\n\n//1104\n\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\n\n//d:n-0 e-1 s-2 w-3\n\nint main(){\n\tint w[2], d, p[2];\n\tstring s;\n\tint n;\n\twhile(cin>>w[0]>>w[1]){\n\t\tif(w[0] == 0 && w[1] == 0) break;\n\t\td = 1;\n\t\tp[0] = p[1] = 1;\n\t\twhile(cin>>s && s != \"STOP\"){\n\t\t\tif(s == \"FORWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tp[d % 2] = min(p[d % 2] + n, w[d % 2]);\n\t\t\t}\n\t\t\telse if(s == \"RIGHT\") d = (d + 1) % 4;\n\t\t\telse if(s == \"LEFT\") d = (d + 3) % 4;\n\t\t\telse if(s == \"BACKWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tp[d % 2] = max(1, p[d % 2] - n);\n\t\t\t}\n\t\t}\n\t\tcout<<p[0]<<\" \"<<p[1]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nint xx[]={0,1,0,-1},yy[]={1,0,-1,0};\n\nint main() {\n\tint h,w;\n\tstring com;\n\tint x,y;\n\twhile(w=in(),h=in()){\n\t\tx=y=1;\n\t\tint n;\n\t\tint dir=0;\n\t\twhile(1){\n\t\t\tcin>>com;\n//cout<<\"x \"<<x<<\" y \"<<y<<\" com \"<<com<<endl;\n\t\t\tif(com==\"FORWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tx+=xx[dir]*n;\n\t\t\t\ty+=yy[dir]*n;\n\t\t\t\tif(x<=0)x=1;\n\t\t\t\tif(x>w)x=w;\n\t\t\t\tif(y<=0)y=1;\n\t\t\t\tif(y>h)y=h;\n\t\t\t}else if(com==\"BACKWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tx-=xx[dir]*n;\n\t\t\t\ty-=yy[dir]*n;\n\t\t\t\tif(x<=0)x=1;\n\t\t\t\tif(x>w)x=w;\n\t\t\t\tif(y<=0)y=1;\n\t\t\t\tif(y>h)y=h;\n\t\t\t}else if(com==\"RIGHT\"){\n\t\t\t\tdir=(dir+1)%4;\n\t\t\t}else if(com==\"LEFT\"){\n\t\t\t\tdir=(dir+3)%4;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define F first\n#define S second\n#define INF 1 << 30\n\nint m, n;\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\n\nint main(){\n  while(scanf(\"%d%d\", &m, &n) && m+n){\n      int x = 1, y = 1, d = 40, k;\n      char in[32];\n      while(scanf(\"%s\", in) && in[0] != 'S'){\n\tswitch(in[0]){\n\tcase 'F':\n\t  scanf(\"%d\", &k);\n\t  x += dx[d%4] * k; y += dy[d%4] * k;\n\t  break;\n\tcase 'B':\n\t  scanf(\"%d\", &k);\n\t  x += dx[d%4] * -k; y += dy[d%4] * -k;\n\t  break;\n\tcase 'R':\n\t  d++; \n\t  break;\n\tcase 'L':\n\t  d--;\n\t  break;\n\t}\n\tif(x < 1) x = 1; if(x > m) x = m;\n\tif(y < 1) y = 1; if(y > n) y = n;\n      }\n      printf(\"%d %d\\n\", x, y);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n    int move[][2] = { {0,1},{1,0},{0,-1},{-1,0} };\n    \n    while(true){\n        int sx,sy;\n        int x=1,y=1;\n        int dir = 0;\n        string command;\n        cin >> sx >> sy;\n        if(sx==0&&sy==0)return 0;\n        while(true){\n        cin >> command;\n        if(command==\"RIGHT\"){\n            dir = dir+1 >=4 ? 0:dir+1; \n        }else if(command==\"LEFT\"){\n            dir = dir-1 < 0 ? 3:dir-1;\n        }else if(command==\"FORWARD\"){\n            int k;\n            cin >> k;\n            x+=move[dir][0]*k;\n            y+=move[dir][1]*k;\n            x = max(1,x);\n            x = min(sx,x);\n            y = max(1,y);\n            y = min(sy,y);\n        }else if(command==\"BACKWARD\"){\n            int k;\n            cin >> k;\n            x-=move[dir][0]*k;\n            y-=move[dir][1]*k;\n            x = max(1,x);\n            x = min(sx,x);\n            y = max(1,y);\n            y = min(sy,y);\n        }else if(command==\"STOP\"){\n            cout << x << \" \" << y << endl;\n            break;\n        }else{\n            cout << \"!!!!!!!!!!!!!!!\" << endl;\n            break;\n        }\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <fstream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <assert.h>\n\t\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define ALL(s) (s).begin(),(s).end()\n#define ITE(c) typeof((c).begin())\n\n#define clr(a) memset((a),0,sizeof(a))\n#define nclr(a) memset((a),-1,sizeof(a))\n#define pb push_back\n#define INRANGE(x,s,e) ((s)<=(x) && (x)<(e))\n#define MP(a,b) make_pair((a),(b))\n\nusing namespace std;\n\n#define MAX 1000000\n\nstruct POS{int x,y;} pos;\n\nint w, h, n;\n\nbool rot(string cmd,char *dir){\n\tif(cmd==\"LEFT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='l';break;\n\t\t\tcase 'l':*dir='d';break;\n\t\t\tcase 'd':*dir='r';break;\n\t\t\tcase 'r':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}else if(cmd==\"RIGHT\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':*dir='r';break;\n\t\t\tcase 'r':*dir='d';break;\n\t\t\tcase 'd':*dir='l';break;\n\t\t\tcase 'l':*dir='u';break;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nvoid go(string cmd,char *dir,int n){\n\tif(cmd==\"FORWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':\n\t\t\t\t\n\t\t\t\tpos.y+=n;break;\n\t\t\tcase 'r':pos.x+=n;break;\n\t\t\tcase 'd':pos.y-=n;break;\n\t\t\tcase 'l':pos.x-=n;break;\n\t\t}\n\t}else if(cmd==\"BACKWARD\"){\n\t\tswitch(*dir){\n\t\t\tcase 'u':pos.y-=n;break;\n\t\t\tcase 'r':pos.x-=n;break;\n\t\t\tcase 'd':pos.y+=n;break;\n\t\t\tcase 'l':pos.x+=n;break;\n\t\t}\n\t}\n}\n\nint main(){\n\tstring cmd;\n\tchar dir;\n\t\n\twhile(cin>>w>>h,h||w){\n\t\tpos.x=1;pos.y=1;\n\t\tdir='u';\n\t\twhile(1){\n\t\t\tcin>>cmd;\n\t\t\tif(cmd==\"STOP\"){\n\t\t\t\tcout<<pos.x<<\" \"<<pos.y<<endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(rot(cmd,&dir)){\n\t\t\t\tcontinue;\n\t\t\t}else{\n\t\t\t\tcin>>n;\n\t\t\t\tgo(cmd,&dir,n);\n\t\t\t}\n\t\t\tif(pos.x<1) pos.x=1;\n\t\t\tif(pos.y<1) pos.y=1;\n\t\t\tif(pos.x>w) pos.x=w;\n\t\t\tif(pos.y>h) pos.y=h;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint W, H, steps, dx, dy, posx, posy;\nstring cmd;\n\nint main()\n{\n\twhile( 1 )\n\t{\n\t\tcin >> W >> H;\n\t\tif(W==0 && H==0)\n\t\t\tbreak;\n\n\t\tdx = 0;\n\t\tdy = 1;\n\t\tposx = 1;\n\t\tposy = 1;\n\t\twhile( 1 )\n\t\t{\n\t\t\tcin >> cmd;\n\t\t\tif(cmd == \"FORWARD\")\n\t\t\t{\n\t\t\t\tcin >> steps;\n\t\t\t\tposx += dx * steps;\n\t\t\t\tposy += dy * steps;\n\t\t\t\tposx = (posx > W) ? W : posx;\n\t\t\t\tposy = (posy > H) ? H : posy;\n\t\t\t}\n\t\t\telse if(cmd == \"BACKWARD\")\n\t\t\t{\n\t\t\t\tcin >> steps;\n\t\t\t\tposx -= dx * steps;\n\t\t\t\tposy -= dy * steps;\n\t\t\t\tposx = (posx <= 0) ? 1 : posx;\n\t\t\t\tposy = (posy <= 0) ? 1 : posy;\n\t\t\t}\n\t\t\telse if(cmd == \"LEFT\")\n\t\t\t{\n\t\t\t\tint newdx = (dx==0) ? -dy : 0;\n\t\t\t\tint newdy = (dy==0) ?  dx : 0;\n\t\t\t\tdx = newdx;\n\t\t\t\tdy = newdy;\n\t\t\t}\n\t\t\telse if(cmd == \"RIGHT\")\n\t\t\t{\n\t\t\t\tint newdx = (dx==0) ?  dy : 0;\n\t\t\t\tint newdy = (dy==0) ? -dx : 0;\n\t\t\t\tdx = newdx;\n\t\t\t\tdy = newdy;\n\t\t\t}\n\t\t\telse if(cmd == \"STOP\")\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\", posx, posy);\n\t}\t\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint w,h,dx[]={0,1,0,-1},dy[]={1,0,-1,0};\n\twhile(cin>>w>>h,w||h){\n\t\tstring s;\n\t\tint x=1,y=1,n;\n\t\tint dir=0;\n\t\twhile(cin>>s,s!=\"STOP\"){\n\t\t\tif(s==\"FORWARD\"){\n\t\t\t\tcin>>n;\n\t\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\t\tint nx=dx[dir]+x,ny=dy[dir]+y;\n\t\t\t\t\tif(nx>=1&&nx<=w&&ny>=1&&ny<=h){\n\t\t\t\t\t\tx=nx;y=ny;\n\t\t\t\t\t}else\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}else if(s==\"RIGHT\"){\n\t\t\t\tdir++;\n\t\t\t\tdir%=4;\n\t\t\t}else if(s==\"LEFT\"){\n\t\t\t\tdir+=3;\n\t\t\t\tdir%=4;\n\t\t\t}else{\n\t\t\t\tcin>>n;\n\t\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\t\tint nx=dx[(dir+2)%4]+x,ny=dy[(dir+2)%4]+y;\n\t\t\t\t\tif(nx>=1&&nx<=w&&ny>=1&&ny<=h){\n\t\t\t\t\t\tx=nx;y=ny;\n\t\t\t\t\t}else\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tcout<<x<<' '<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<string>\nusing namespace std;\ntypedef pair< int , int > Pi;\n#define INF (1 << 25)\n#define fr first\n#define sc second\nint dx[] = {1,0,-1,0} , dy[] = {0,1,0,-1};\nint main(){\n  int n,m,x,y,MUKI;\n  while(cin >> n >> m && n){\n    x = 1 , y = 1 , MUKI = 0;\n    while(true){\n      string str;\n      int n;\n      cin >> str;\n      if(str == \"FORWARD\"){\n        cin >> n;\n        x += dx[MUKI] * n , y += dy[MUKI] * n;\n      }else if(str == \"BACKWARD\"){\n        cin >> n;\n        x -= dx[MUKI] * n , y -= dy[MUKI] * n;\n      }else if(str == \"RIGHT\") MUKI = ( MUKI + 1 ) % 4;\n      else if(str == \"LEFT\") MUKI = ( MUKI - 1 + 4 ) % 4;\n      else break;\n      //  cout << y << x;\n    }\n    cout << y << \" \" << x << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint dx[4] = {0, 1, 0, -1};\nint dy[4] = {1, 0, -1, 0};\nint main(){\n    int n, m;\n    while(cin >> n >> m, n+m){\n        int mx = 1, my = 1;\n        int direction = 0;\n        while(1){\n            string command;\n            int step;\n            cin >> command;\n            if(command == \"FORWARD\"){\n                cin >> step;\n                if(mx+dx[direction]*step <= n) mx += dx[direction]*step;\n                else mx = n;\n                if(my+dy[direction]*step <= m) my += dy[direction]*step;\n                else my = m;\n            }\n            else if(command == \"BACKWARD\"){\n                cin >> step;\n                if(0 <= mx-dx[direction]*step) mx -= dx[direction]*step;\n                else mx = 0;\n                if(0 <= my-dy[direction]*step) my -= dy[direction]*step;\n                else my = 0;\n            }\n            else if(command == \"RIGHT\")direction = (direction+1)%4;\n            else if(command == \"LEFT\")direction = (direction-1)%4;\n            else if(command == \"STOP\")break;\n        }\n        cout << mx << \" \" << my << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\nint main(){\n    int n,m,x,y,dir,dx[4]={0,1,0,-1},dy[4]={-1,0,1,0},k;\n    char c[100];\n    while(1){\n        scanf(\"%d%d\",&n,&m);\n        if(n==0&&m==0)return 0;\n        dir=x=y=1;\n        while(1){\n            scanf(\"%s\",c);\n            if(c[0]=='S')break;\n            else if(c[0]=='F'){\n                scanf(\"%d\",&k);\n                if(x+dx[dir]*k>m)x=m;\n                else if(x+dx[dir]*k<1)x=1;\n                else x+=dx[dir]*k;\n                if(y+dy[dir]*k>n)y=n;\n                else if(y+dy[dir]*k<1)y=1;\n                else y+=dy[dir]*k;\n            }\n            else if(c[0]=='B'){\n                scanf(\"%d\",&k);\n                k=-k;\n                if(x+dx[dir]*k>m)x=m;\n                else if(x+dx[dir]*k<1)x=1;\n                else x+=dx[dir]*k;\n                if(y+dy[dir]*k>n)y=n;\n                else if(y+dy[dir]*k<1)y=1;\n                else y+=dy[dir]*k;\n            }\n            else if(c[0]=='R'){\n                dir++;\n                dir%=4;\n            }\n            else if(c[0]=='L'){\n                dir+=3;\n                dir%=4;\n            }\n        }\n        printf(\"%d %d\\n\",y,x);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\nint H, W, e; char buf[8];\nint dx[4] = { 0, 1, 0, -1 }, dy[4] = { 1, 0, -1, 0 };\nint main() {\n\twhile (scanf(\"%d%d\", &W, &H), H) {\n\t\tint x = 1, y = 1, d = 0;\n\t\twhile (scanf(\"%s\", buf), buf[0] != 'S') {\n\t\t\tscanf(\"%d\", &e);\n\t\t\tswitch (buf[0]) {\n\t\t\tcase 'F': x += dx[d] * e, y += dy[d] * e; break;\n\t\t\tcase 'B': x -= dx[d] * e, y -= dy[d] * e; break;\n\t\t\tcase 'R': d = (d + 1) % 4; break;\n\t\t\tcase 'L': d = (d + 3) % 4; break;\n\t\t\t}\n\t\t\tif (x < 1) x = 1; if (x > W) x = W;\n\t\t\tif (y < 1) y = 1; if (y > H) y = H;\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\nstruct P\n{\n\tint x, y;\n\tint direction;\t\t//0:North 1:East 2:South 3:West\n};\n\nvoid solve()\n{\n\tint W, H;\n\twhile(cin >> W >> H, W || H)\n\t{\n\t\tP p;\n\t\tp.x = 0;\n\t\tp.y = 0;\n\t\tp.direction = 0;\n\t\tstring str;\n\t\twhile(cin >> str)\n\t\t{\n\t\t\tif(str == \"STOP\")\n\t\t\t{\n\t\t\t\tcout << p.x + 1 << \" \" << p.y + 1 << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(str == \"FORWARD\" || str == \"BACKWARD\")\n\t\t\t{\n\t\t\t\tint move;\n\t\t\t\tcin >> move;\n\t\t\t\tif(str == \"FORWARD\" && p.direction == 0 || str == \"BACKWARD\" && p.direction == 2)\n\t\t\t\t{\n\t\t\t\t\tp.y += move;\n\t\t\t\t\tif(p.y >= H)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.y = H - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(str == \"FORWARD\" && p.direction == 2 || str == \"BACKWARD\" && p.direction == 0)\n\t\t\t\t{\n\t\t\t\t\tp.y-= move;\n\t\t\t\t\tif(p.y < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.y = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(str == \"FORWARD\" && p.direction == 1 || str == \"BACKWARD\" && p.direction == 3)\n\t\t\t\t{\n\t\t\t\t\tp.x += move;\n\t\t\t\t\tif(p.x >= W)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.x = W - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(str == \"FORWARD\" && p.direction == 3 || str == \"BACKWARD\" && p.direction == 1)\n\t\t\t\t{\n\t\t\t\t\tp.x -= move;\n\t\t\t\t\tif(p.x < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.x = 0;\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(str == \"RIGHT\")\n\t\t\t\t{\n\t\t\t\t\tp.direction = (p.direction + 1) % 4;\t\t//cw\n\t\t\t\t}\n\t\t\t\telse if(str == \"LEFT\")\n\t\t\t\t{\n\t\t\t\t\tp.direction = (p.direction + 3) % 4;\t\t//ccw\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\nusing namespace std;\nenum{BLANK,WALL};\nenum{UP,RIGHT,DOWN,LEFT};\nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\n\nint main()\n{\n  int W,H;\n  int x,y,d;\n  string s;\n  int k;\n  while(cin>>W>>H,W|H){\n    x=y=1;\n    d=UP;\n    while(cin>>s,s!=\"STOP\"){\n      if(s==\"FORWARD\"){\n\tcin>>k;\n\tx+=dx[d]*k;\n\ty+=dy[d]*k;\n      }else if(s==\"BACKWARD\"){\n\tcin>>k;\n\tx-=dx[d]*k;\n\ty-=dy[d]*k;\n      }else if(s==\"RIGHT\"){\n\td++;\n      }else if(s==\"LEFT\"){\n\td--;\n      }\n      d=(d+4)%4;\n      if(x>W)x=W;\n      if(x<1)x=1;\n      if(y>H)y=H;\n      if(y<1)y=1;\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nvoid chaek(int *x,int *y,int w,int h){\n  if(*x > w)*x = w;\n  if(1 > *x)*x = 1;\n  if(*y > h)*y = h;\n  if(1 > *y)*y = 1;\n}\nint main(){\n  int go,back;\n  int w,h;\n  while( cin >> w >> h, w + h ){\n    int dx = 0,dy = 1;\n    int px = 1,py = 1;\n    string odr;\n    for(;;){\n      cin >> odr;\n      if(odr[0] == 'F') {\n\tcin >> go;\n\tpx += go*dx;\n\tpy += go*dy;\n\tchaek(&px,&py,w,h);\n      }else if(odr[0] == 'B') {\n\tcin >> back;\n\tpx -= back*dx;\n\tpy -= back*dy;\n\tchaek(&px,&py,w,h);\n      }else if(odr[0] == 'R') {\n\tswap(dx,dy);\n\t  dy = -dy;\n      }else if(odr[0] == 'L') {\n\tswap(dx,dy);\n\tdx = -dx;\n      }else break;\n    }\n  cout << px << \" \" << py << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define repb(i, a, b) for(int i = a; i >= b; i--)\n#define all(a) a.begin(), a.end()\n#define int long long\nusing namespace std;\n\nint dy[4] = {1, 0, -2, 0};\nint dx[4] = {0, 1, 0, -1};\n\nsigned main(){\n    int m, n;\n    while(1){\n        cin >> m >> n;\n        if(m + n == 0) break;\n        string s;\n        int k, y = 0, x = 0, dir = 0;\n        while(1){\n            cin >> s;\n            if(s == \"STOP\") break;\n            if(s == \"RIGHT\") dir = (dir + 1) % 4;\n            else if(s == \"LEFT\") dir = (dir + 3) % 4;\n            else{\n                cin >> k;\n                if(s == \"BACKWARD\") dir = (dir + 2) % 4;\n                rep(i, 0 ,k){\n                    int ty = y + dy[dir];\n                    int tx = x + dx[dir];\n                    if(!(0 <= ty && ty <n && 0 <= tx && tx < m)) break;\n                    y = ty; x = tx;\n                }\n            }\n        }\n        cout << x + 1 << ' ' << y + 1 << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "\n#include<iostream>\nusing namespace std;\n\nint main()\n{\n  int dx[4]={0,1,0,-1};\n  int dy[4]={1,0,-1,0};\n  int m,n,x,y,d=0,k;\n  string s;\n\n  while(cin>>m>>n,m||n){\n    x=y=1;\n    while(cin>>s,s!=\"STOP\"){\n      if(s==\"LEFT\")d--;\n      if(s==\"RIGHT\")d++;\n      d=d%4;\n      if(s==\"FORWARD\"){cin>>k;x+=k*dx[d];y+=k*dy[d];}\n      if(s==\"BACKWARD\"){cin>>k;x-=k*dx[d];y-=k*dy[d];}\n      if(x<1)x=1;\n      if(m<x)x=m;\n      if(y<1)y=1;\n      if(n<y)y=n;\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef complex<double> P;\nstatic const double EPS = 1e-8;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\nint dx[4] = {0,1,0,-1};\nint dy[4] = {1,0,-1,0};\nint main(void){\n  int W,H;\n  while(cin>>W>>H){\n    if(!W&&!H) break;\n    int x = 0, y = 0;\n    int r = 0;\n    string command;\n    while(cin>>command){\n      int times = 0;\n      if(command==\"STOP\") break;\n      if(command==\"FORWARD\"){\n        cin>>times;\n        while(times){\n          times--;\n          int nx = x + dx[r];\n          int ny = y + dy[r];\n          if(0<=nx&&nx<W&&0<=ny&&ny<H){\n            x = nx;\n            y = ny;\n          }\n        }\n      }else if(command==\"BACKWARD\"){\n        cin>>times;\n        while(times){\n          times--;\n          int nx = x + dx[(r+2)%4];\n          int ny = y + dy[(r+2)%4];\n          if(0<=nx&&nx<W&&0<=ny&&ny<H){\n            x = nx;\n            y = ny;\n          }\n        }\n      }else if(command==\"RIGHT\"){\n        r = (r+1)%4;\n      }else if(command==\"LEFT\"){\n        r = (r-1)%4;\n      }\n    }\n    printf(\"%d %d\\n\",x+1,y+1);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n#define inRange(x,a,b) (a <= x && x < b)\n\nint main(){\n    int w, h;\n    while(cin >> w >> h, w+h){\n       int di = 1, dj = 0; \n       string op;\n       int k, i = 0, j = 0;\n\n       while(cin >> op, op != \"STOP\"){\n           if(op.length() < 6){\n               if(op == \"LEFT\"){\n                   swap(di, dj);\n                   dj = -dj;\n               }else if(op == \"RIGHT\"){\n                   swap(di, dj);\n                   di = -di;\n               }\n           }else{\n               cin >> k;\n               int bias = (op == \"FORWARD\") ? 1 : -1;\n\n               for(int x = 0; x < k; x++){\n                   i += bias*di, j += bias*dj;\n                   if(!inRange(i,0,h) || !inRange(j,0,w))   i -= bias*di, j -= bias*dj;\n               }\n           }\n       }\n\n       cout << j+1 << \" \" << i+1 << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define all(c) (c).begin(),(c).end()\n#define rrep(i,n) for(int i=(int)(n)-1;i>=0;i--)\n#define REP(i,m,n) for(int i=(int)(m);i<(int)(n);i++)\n#define rep(i,n) REP(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)\n#define mem(a) memset(a,0,sizeof(a))\n#define pd(a) printf(\"%.10f\\n\",a)\n#define pb(a) push_back(a)\n#define in(a) insert(a)\n#define pi M_PI\n#define R cin>>\n#define F first\n#define S second\n#define C class\n#define ll long long\n#define ln cout<<'\\n'\n#define _(_1,_2,_3,N,...)N\n#define pr(...) _(__VA_ARGS__,pr3,pr2,pr1)(__VA_ARGS__)\ntemplate<C T>void pr1(T a){cout<<a;ln;}\ntemplate<C T,C T2>void pr2(T a,T2 b){cout<<a<<' '<<b;ln;}\ntemplate<C T,C T2,C T3>void pr3(T a,T2 b,T3 c){cout<<a<<' '<<b<<' '<<c;ln;}\ntemplate<C T>void PR(T a,int n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}\nbool check(int n,int m,int x,int y){return x>=1&&x<=n&&y>=1&&y<=m;}\nconst ll MAX=1000000007,MAXL=1LL<<60,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};\ntypedef pair<int,int> P;\n\nvoid Main() {\n  int n,m;\n  while(cin >> n >> m && m) {\n    int x=1,y=1,k=1;\n    string s;\n    while(R s) {\n      if(s==\"STOP\") break;\n      else if(s==\"RIGHT\") k=(k+1)%4;\n      else if(s==\"LEFT\") k=(k+3)%4;\n      else {\n        int d;\n        R d;\n        rep(i,d) {\n          int xx=x,yy=y;\n          if(s[0]=='F') xx+=dx[k],yy+=dy[k];\n          else xx-=dx[k],yy-=dy[k];\n          if(!check(n,m,xx,yy)) break;\n          x=xx,y=yy;\n        }\n      }\n    }\n    pr(x,y);\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(0);cin.tie(0);\n  Main();return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint dx[]={0,1,0,-1},dy[]={1,0,-1,0};\nint main(){\n\tint m,n,k; char b[9];\n\twhile(cin>>m>>n,m){\n\t\tint x=1,y=1,d=0;\n\t\tfor(;cin>>b,b[0]!='S';){\n\t\t\tk=0;\n\t\t\tif(b[0]=='F'||b[0]=='B')cin>>k;\n\t\t\tif(b[0]=='B')k=-k;\n\t\t\tif(k)x+=k*dx[d],y+=k*dy[d];\n\t\t\telse if(b[0]=='R')d=d+1&3;\n\t\t\telse d=d+3&3;\n\t\t\tx>0?x<=m?0:x=m:x=1;y>0?y<=n?0:y=n:y=1;\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    int dy[] = {1, 0, -1, 0};\n    int dx[] = {0, 1, 0, -1};\n\n    for(;;){\n        int w, h;\n        cin >> w >> h;\n        if(w == 0)\n            return 0;\n\n        int y = 1;\n        int x = 1;\n        int d = 0;\n        for(;;){\n            string s;\n            cin >> s;\n            if(s == \"FORWARD\"){\n                int k;\n                cin >> k;\n                y += dy[d] * k;\n                x += dx[d] * k;\n                y = max(1, min(h, y));\n                x = max(1, min(w, x));\n            }else if(s == \"BACKWARD\"){\n                int k;\n                cin >> k;\n                y -= dy[d] * k;\n                x -= dx[d] * k;\n                y = max(1, min(h, y));\n                x = max(1, min(w, x));\n            }else if(s == \"RIGHT\")\n                d = (d + 1) % 4;\n            else if(s == \"LEFT\")\n                d = (d + 3) % 4;\n            else\n                break;\n        }\n        cout << x << ' ' << y << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint n,m;\nstatic const int dx[4]={0,1,0,-1};\nstatic const int dy[4]={1,0,-1,0};   \n\nstruct Robot{\n  int x,y;\n  int dire;\n  void init(){\n    x=1;\n    y=1;\n    dire=0;\n  };\n  void forward(int num){\n    x+=dx[dire]*num;\n    y+=dy[dire]*num;\n    x=max(1,x); y=max(1,y);\n    x=min(n,x); y=min(m,y);\n  };\n  void backward(int num){\n    x-=dx[dire]*num;\n    y-=dy[dire]*num;\n    x=max(1,x); y=max(1,y);\n    x=min(n,x); y=min(m,y);\n  };\n  void right(){\n    dire++;\n    if(dire==4) dire=0;\n  };\n  void left(){\n    dire--;\n    if(dire==-1) dire=3;\n  };\n};\n\nint main(){\n  string str;\n  int kazu;\n  Robot rb;\n  while(1){\n    cin>>n>>m;\n    rb.init();\n    if(n==0 && m==0) break;\n    while(1){\n      cin>>str;\n      if(str==\"FORWARD\"){\n\tcin>>kazu;\n\trb.forward(kazu);\n      }else if(str==\"BACKWARD\"){\n\tcin>>kazu;\n\trb.backward(kazu);\n      }else if(str==\"RIGHT\"){\n\trb.right();\n      }else if(str==\"LEFT\"){\n\trb.left();\n      }else if(str==\"STOP\"){\n\tcout<<rb.x<<\" \"<<rb.y<<endl;\n\tbreak;\n      }\n    } \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\nint H, W, e; char buf[8];\nint dx[4] = { 0, 1, 0, -1 }, dy[4] = { 1, 0, -1, 0 };\nint main() {\n\twhile (scanf(\"%d%d\", &W, &H), H) {\n\t\tint x = 1, y = 1, d = 0;\n\t\twhile (scanf(\"%s\", buf), buf[0] != 'S') {\n\t\t\tscanf(\"%d\", &e);\n\t\t\tswitch (buf[0]) {\n\t\t\tcase 'F': x += dx[d] * e, y += dy[d] * e; break;\n\t\t\tcase 'B': x -= dx[d] * e, y -= dy[d] * e; break;\n\t\t\tcase 'R': d = (d + 1) % 4; break;\n\t\t\tcase 'L': d = (d + 3) % 4; break;\n\t\t\t}\n\t\t\tif (x < 1) x = 1; if (x > W) x = W;\n\t\t\tif (y < 1) y = 1; if (y > H) y = H;\n\t\t\tprintf(\"%d %d\\n\", x, y);\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nint dx[]{ 0,1,0,-1 }, dy[]{ 1,0,-1,0 };\nint main() {\n\tint w, h;\n\twhile (scanf(\"%d%d\", &w, &h), w) {\n\t\tint x = 1, y = 1, idx = 0;\n\t\twhile (1) {\n\t\t\tstring s; cin >> s;\n\t\t\tif (s == \"STOP\")break;\n\t\t\tif (s == \"RIGHT\") {\n\t\t\t\tidx = (idx + 1) % 4; continue;\n\t\t\t}\n\t\t\tif (s == \"LEFT\") {\n\t\t\t\tidx = (idx + 3) % 4; continue;\n\t\t\t}\n\t\t\tint d; scanf(\"%d\", &d);\n\t\t\tif (s == \"FORWARD\") {\n\t\t\t\tint nx = x + dx[idx] * d, ny = y + dy[idx] * d;\n\t\t\t\tif (0 < nx&&nx <= w && 0 < ny&&ny <= h) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\ty = ny;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint nx = x - dx[idx] * d, ny = y - dy[idx] * d;\n\t\t\t\tif (0 < nx&&nx <= w && 0 < ny&&ny < h) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\ty = ny;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n  string order;\n  int height,wide,x,y,num;\n  while(1){\n    x = 1; y = 1;\n    cin >> wide >> height;\n    if( wide == 0 && height == 0 ) break;\n    int angle = 1;\n    while(1){\n\n      cin >> order;\n      if( order == \"STOP\" ) break;\n\n      if( order == \"FORWARD\" ){\n\tcin >> num;\n\tif( angle == 1 ){\n\t  y+=num;\n\t}\n\telse if( angle == 2 ){\n\t  x+=num;\n\t}\n\telse if( angle == 3 ){\n\t  y-=num;\n\t}\n\telse if( angle == 4 ){\n\t  x-=num;\n\t}\n      }\n      \n      if( order == \"BACKWARD\" ){\n\tcin >> num;\n\tif( angle == 1 ){\n\t  y-=num;\n\t\n\t}\n\telse if( angle == 2 ){\n\t  x-=num;\n\t\n\t}\n\telse if( angle == 3 ){\n\t  y+=num;\n\t\n\t}\n\telse if( angle == 4 ){\n\t  x+=num;\n\t\n\t}\n      }\n\n      if( x < 1 ){\n\tx = 1;\n      }else if( x > wide ){\n\tx = wide;\n      }\n\t\n\n      if( y < 1 ){\n\ty = 1;\n      }else if( y > height ){\n\ty = height;\n      }\n\n      if( order == \"RIGHT\" ){\n\tangle++;\n\tif( angle == 5 ) angle = 1;\n      }\n\n      if( order == \"LEFT\" ){\n\tangle--;\n\tif( angle == 0 ) angle = 4;\n      }\n      \n    }\n    cout << x << \" \" << y << endl;\n   \n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n    int n, m;\n    while(cin >> n >> m, n+m){\n        int mx = 1, my = 1;\n        int direction = 1;\n        while(1){\n            string command; int step;\n            cin >> command;\n            if(command == \"FORWARD\"){\n                cin >> step;\n                if(direction == 1) my += step;\n                else if(direction == 2) mx += step;\n                else if(direction == 3) my -= step;\n                else if(direction == 4) mx -= step;\n            }\n            else if(command == \"BACKWARD\"){\n                cin >> step;\n                if(direction == 1) my -= step;\n                else if(direction == 2) mx -= step;\n                else if(direction == 3) my += step;\n                else if(direction == 4) mx += step;\n            }\n            else if(command == \"RIGHT\"){\n                direction++;\n                if(direction == 5) direction = 1;\n            }\n            else if(command == \"LEFT\"){\n                direction--;\n                if(direction == 0) direction = 4;\n            }\n            else if(command == \"STOP\")break;\n\n            if(mx < 1) mx = 1;\n            else if(mx > n) mx = n;\n            if(my < 1) my = 1;\n            else if(my > m) my = m;\n        }\n        cout << mx << \" \" << my << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\nint main(){\n\t\n\tint W,H;\n\twhile(cin>>W>>H,W){\n\t\tint MP[105][105]={0};\n\t\tint x=1,y=1,d=0;\n\t\tstring s;\n\t\tfor(int i=0;i<105;i++){\n\t\t\tMP[0][i]=1;\n\t\t\tMP[i][0]=1;\n\t\t\tMP[W+1][i]=1;\n\t\t\tMP[i][H+1]=1;\n\t\t}\n\t\twhile(cin>>s){\n\t\t\tint k=0;\n\t\t\tif(s==\"STOP\")break;\n\t\t\tif(s==\"FORWARD\")cin>>k;\n\t\t\tif(s==\"BACKWARD\"){\n\t\t\t\tcin>>k;\n\t\t\t\td=(d+2)%4;\n\t\t\t}\n\t\t\tif(s==\"RIGHT\")d=(d+1)%4;\n\t\t\tif(s==\"LEFT\")d=(d+3)%4;\n\t\t\t\n\t\t\tfor(int i=0;i<k;i++){\n\t\t\t\tif(MP[x+dx[d]][y+dy[d]]==0){\n\t\t\t\t\tx+=dx[d];\n\t\t\t\t\ty+=dy[d];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(s==\"BACKWARD\")d=(d+2)%4;\n\t\t}\n\t\tcout<<x<<\" \"<<y<<endl;\n\t}\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define all(in) in.begin(),in.end()\n#define pb(in,a) in.push_back(a)\nusing namespace std;\nint a[4]={0,1,0,-1};\nint b[4]={1,0,-1,0};\nint main(){\n  int n,m;\n  while(cin>>n>>m,n||m){\n    int to=0;\n    string s;\n    int x=1,y=1;\n    while(1){\n      if(s==\"FORWARD\"){\n\tint tmp;\n\tcin>>tmp;\n\tx+=tmp*a[to];\n\ty+=tmp*b[to];\n      }else{\n\tint tmp;\n\tcin>>tmp;\n\tx-=tmp*a[to];\n\ty-=tmp*b[to];\n      }else if(s==\"STOP\")break;\n      else if(s==\"LEFT\")to--;\n      else to++;\n\n      if(to>3)to=0;\n      else if(to<0)to=3;\n\n      if(x>n)x=n;\n      else if(x<1)x=1;\n      if(y>m)y=m;\n      else if(y<1)y=1;\n\n    }\n    cout<<x<<\" \"<<y<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int UP = 0, RIGHT = 1, DOWN = 2, LEFT = 3;\n\nint m, n;\nint i = 1, j = 1;\nint dir = UP;\n\nvoid fwd(int s) {\n    if (dir == UP) i = min(i + s, m);\n    if (dir == DOWN) i = max(i - s, 1);\n    if (dir == RIGHT) j = min(j + s, n);\n    if (dir == LEFT) j = max(j - s, 1);\n}\n\nint main() {\n    while (true) {\n        cin >> m >> n;\n        if (m == 0 && n == 0) break;\n        while (true) {\n            string s; cin >> s;\n            if (s == \"STOP\") break;\n            if (s == \"RIGHT\") dir = (dir + 1) % 4;\n            if (s == \"LEFT\") dir = (dir + 3) % 4;\n            int t; cin >> t;\n            if (s == \"BACK\") {\n                dir = (dir + 2) % 4;\n                fwd(t);\n                dir = (dir + 2) % 4;\n            }\n            if (s == \"FORWWARD\") fwd(t);\n        }\n        cout << i << \" \" << j << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\n\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\n\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nint dx[8] = {-1, 0, 1, 0, -1, -1, 1, 1};\nint dy[8] = {0, -1, 0, 1, -1, 1, -1, 1};\n\n\n\nint main() {\n  int m, n, len;\n  string s;  \n\n  while(cin >> m >> n, m+n) {\n    int angle = 0;\n    PII p(1,1); \n    \n    while(cin >> s) {\n      if(angle < 0) angle += 4;\n      if(s == \"STOP\") break;  \n      else if(s == \"FORWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second += x;\n\telse if(angle%4 == 1) p.first -= x;\n\telse if(angle%4 == 2) p.second -= x;\n\telse p.first += x;\n      }\n      else if(s == \"BACKWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second -= x;\n\telse if(angle%4 == 1) p.first += x;\n\telse if(angle%4 == 2) p.second += x;\n\telse p.first -= x;\n      }\n      else if(s == \"RIGHT\") angle--;\n      else if(s == \"LEFT\") angle++;\n      if(p.first < 1) p.first = 1;\n      if(p.first > m-1) p.first = m;\n      if(p.second < 1) p.second = 1;\n      if(p.second > n-1) p.second = n;\n    }\n    cout << p.first << ' ' << p.second << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\n\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\n\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nint dx[8] = {-1, 0, 1, 0, -1, -1, 1, 1};\nint dy[8] = {0, -1, 0, 1, -1, 1, -1, 1};\n\n\n\nint main() {\n  int m, n, len;\n  string s;  \n\n  while(cin >> m >> n, m+n) {\n    int angle = 0;\n    PII p(1,1); \n    \n    while(cin >> s) {\n      if(s == \"STOP\") break;  \n      else if(s == \"FORWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second += x;\n\telse if(angle%4 == 1) p.first -= x;\n\telse if(angle%4 == 2) p.second -= x;\n\telse p.first += x;\n      }\n      else if(s == \"BACKWARD\") {\n\tint x;\n\tcin >> x;\n\tif(angle%4 == 0) p.second -= x;\n\telse if(angle%4 == 1) p.first += x;\n\telse if(angle%4 == 2) p.second += x;\n\telse p.first -= x;\n      }\n      else if(s == \"RIGHT\") angle--;\n      else if(s == \"LEFT\") angle++;\n      if(p.first < 1) p.first = 1;\n      if(p.first > m-1) p.first = m;\n      if(p.second < 1) p.second = 1;\n      if(p.second > n-1) p.second = n;\n    }\n    cout << p.first << ' ' << p.second << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<iostream>\n#include<math.h>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<string>\n#include<cmath>\n#include<set>\n#include<stack>\n\nusing namespace std;\n\n\nint main(){\n    int x,y,m,n;\n    while(cin>>m>>n,m){\n        x=0,y=n-1;\n        int dir=1;\n        int dx[4]={1,0,-1,0};\n        int dy[4]={0,-1,0,1};\n        string s;\n        while(cin>>s){\n            if(s==\"STOP\")break;\n            if(s[0]=='R'){\n                dir=(dir+3)%4; continue;\n            } else if(s[0]=='L'){\n                dir=(dir+1)%4; continue;\n            }\n            int st;\n            cin>>st;\n            int td=dir;\n            if(s[0]=='B')td=(td+2)%4;\n            while(x+dx[td]<m&&x+dx[td]>=0&&y+dy[td]>=0&&y+dy[td]<n&&st--){\n                x=x+dx[td];\n                y=y+dy[td];\n            }\n            //cout<<x<<\" \"<<y<<endl;\n        }\n        cout<<x+1<<\" \"<<(n-y)<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\n\nint main(){\n\tstring p,s;\n\tint point;\n\tint w,h;\n\twhile(cin >> w >> h && w && h){\n\t\tint dist;\n\t\tint x=1,y=1;\n\t\twhile(getline(cin,p) && p!=\"STOP\"){\n\t\t\tpoint = 0;\n\t\t\tif(~p.find(\" \")){\n\t\t\t\ts = p.substr(p.find(\" \")+1,p.length()-p.find(\" \")-1);\n\t\t\t\tp = p.substr(0,p.find(\" \"));\n\t\t\t\tpoint = atoi(s.c_str());\n\t\t\t}\n\t\t\tif(p==\"BACKWARD\")point*=-1;\n\t\t\tif(p==\"RIGHT\"){\n\t\t\t\tdist=(dist+1)%4;\n\t\t\t\tcontinue;\n\t\t\t}else if(p==\"LEFT\"){\n\t\t\t\tdist=(dist-1)%4;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(dist%2){\n\t\t\t\tx += point;\n\t\t\t\tif(x>w){\n\t\t\t\t\tx=w;\n\t\t\t\t}else if(x<1){\n\t\t\t\t\tx=1;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ty +=point;\n\t\t\t\tif(y>h){\n\t\t\t\t\ty=h;\n\t\t\t\t}else if(y<1){\n\t\t\t\t\ty=1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tcout << x << \" \" << y << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n#include<String>\nusing namespace std;\n\nint main(){\n  int n,m,x,y,num;\n  int di=0;\n  string order;\n  while(1){\n    cin>>n>>m;\n    x=1;y=1;\n    if(n==0 && m==0)break;\n    while(1){\n      cin>>order;\n      if(order==\"FORWARD\"){\n\tcin>>num;\n\tif(di==0){\n\t  y=min(y+num,m);\n\t}else if(di==1){\n\t  x=min(x+num,n);\n\t}else if(di==2){\n\t  y=max(y-num,1);\n\t}else if(di==3){\n\t  x=max(x-num,1);\n\t}\n      \n      }else if(order==\"BACKWARD\"){\n\tcin>>num;\n\tif(di==2){\n\t  y=min(y+num,m);\n\t}else if(di==3){\n\t  x=min(x+num,n);\n\t}else if(di==0){\n\t  y=max(y-num,1);\n\t}else if(di==1){\n\t  x=max(x-num,1);\n\t}\n      }else if(order==\"RIGHT\"){\n\tdi=(di+1)%4;\n      }else if(order==\"LEFT\"){\n\tdi=(di-1)%4;\n      }else if(order==\"STOP\"){\n\tcout << x <<\" \"<<y<<endl;\n\tbreak;\n      }else{\n\tcout << \"ERROR \"<<order<<endl;\n\treturn 0;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int n,m,num;\n  const int dx[4] = {0,-1,0,1};\n  const int dy[4] = {1,0,-1,0};\n  string op;\n  int mv=0;\n  int x=1,y=1;\n\n  while(true)\n    {\n      cin >> n >> m;\n      if(n == 0 && m == 0)break;\n      mv=0;\n      x=1;\n      y=1;\n\n      while(true)\n\t{\n\t  cin >> op;\n\t  if(op == \"STOP\")\n\t    {\n\t      cout << x << \" \" << y << endl;\n\t      break;\n\t    }\n\t  else if(op == \"LEFT\")\n\t    {\n\t      if(mv == 3)mv=0;\n\t      else mv+=1;\n\t    }\n\t  else if(op == \"RIGHT\")\n\t    {\n\t      if(mv == 0)mv=3;\n\t      else mv-=1;\n\t    }\n\t  else \n\t    {\n\t      cin >> num;\n\t     \n\t      if(op == \"FORWARD\")\n\t\t{\n\t\t  if((x+dx[mv]*num > 0) && (x+dx[mv]*num<=n) && (y+dy[mv]*num > 0) && (y+dy[mv]*num<=m))\n\t\t    {\n\t\t      x+=dx[mv]*num;\n\t\t      y+=dy[mv]*num;\n\t\t    }\n\t\t  else if(x+dx[mv]*num >= n)\n\t\t    {\n\t\t      x=n;\n\t\t    }\n\t\t  else if(y+dy[mv]*num >= m)\n\t\t    {\n\t\t      y=m;\n\t\t    }\n\t\t  else if(x+dx[mv]*num <= 0)\n\t\t    {\n\t\t      x=1;\n\t\t    }\n\t\t  else if(y+dy[mv]*num <= 0)\n\t\t    {\n\t\t      y=1;\n\t\t    }\n\t\t  \n\t\t}\n\t      else \n\t\t{\n\t\t  if((x-dx[mv]*num > 0) && (x-dx[mv]*num<=n) && (y-dy[mv]*num > 0) && (y-dy[mv]*num<=m))\n\t\t    {\n\t\t      x -= dx[mv]*num;\n\t\t      y -= dy[mv]*num;\n\t\t    }\n\t\t  else if(x-dx[mv]*num >= n)\n\t\t    {\n\t\t      x=n;\n\t\t    }\n\t\t  else if(y-dy[mv]*num >= m)\n\t\t    {\n\t\t      y=m;\n\t\t    }\n\t\t  else if(x-dx[mv]*num <= 0)\n\t\t    {\n\t\t      x=1;\n\t\t    }\n\t\t  else if(y-dy[mv]*num <= 0)\n\t\t    {\n\t\t      y=1;\n\t\t    }\n\t\t}\n\t     \n\t    }\n\t  //cout << \"mv = \" << mv << \", \"<< x << \" \" << y << endl;\n\n\t}\n\n\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<iomanip>\n#include<string>\nusing namespace std;\n\nint main(){\n  int n,m,x,y,num;\n  int di=0;\n  string order;\n  while(1){\n    cin>>n>>m;\n    x=1;y=1;di=0;\n    if(n==0 && m==0)break;\n    while(1){\n      cin>>order;\n      if(order==\"FORWARD\"){\n\tcin>>num;\n\tif(di==0){\n\t  y=min(y+num,m);\n\t}else if(di==1){\n\t  x=min(x+num,n);\n\t}else if(di==2){\n\t  y=max(y-num,1);\n\t}else if(di==3){\n\t  x=max(x-num,1);\n\t}\n      \n      }else if(order==\"BACKWARD\"){\n\tcin>>num;\n\tif(di==2){\n\t  y=min(y+num,m);\n\t}else if(di==3){\n\t  x=min(x+num,n);\n\t}else if(di==0){\n\t  y=max(y-num,1);\n\t}else if(di==1){\n\t  x=max(x-num,1);\n\t}\n      }else if(order==\"RIGHT\"){\n\tdi=(di+1)%4;\n      }else if(order==\"LEFT\"){\n\tdi=(di-1)%4;\n      }else if(order==\"STOP\"){\n\tcout << x <<\" \"<<y<<endl;\n\tbreak;\n      }else{\n\tcout << \"ERROR \"<<order<<endl;\n\treturn 0;\n      }\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\t// require sort next_permutation count __gcd reverse etc.\n#include <cstdlib>\t// require abs exit atof atoi \n#include <cstdio>\t\t// require scanf printf\n#include <functional>\n#include <numeric>\t// require accumulate\n#include <cmath>\t\t// require fabs\n#include <climits>\n#include <limits>\n#include <cfloat>\n#include <iomanip>\t// require setw\n#include <sstream>\t// require stringstream \n#include <cstring>\t// require memset\n#include <cctype>\t\t// require tolower, toupper\n#include <fstream>\t// require freopen\n#include <ctime>\t\t// require srand\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define ALL(A) A.begin(), A.end()\n#define NORTH 0\n#define EAST 1\n#define SOUTH 2\n#define WEST 3\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\n\nconst int dr[] = {  1, 0,-1, 0 };\nconst int dc[] = {  0, 1, 0,-1 };\n\nint main()\n{\n//\tcut here before submit \n//\tfreopen (\"testcase.WYR\", \"r\", stdin );\n\tint m, n;\n\twhile (scanf (\"%d %d\", &m, &n ), m, n ){\n\t\tstring str = \"\";\n\t\tint row = 1, col = 1, dir = NORTH;\n\t\twhile (getline (cin, str ) ){\n\t\t\tstringstream ss(str );\n\t\t\tstring com = \"\"; int arg = 0;\n\t\t\tss >> com;\n\t\t\tif (com == \"STOP\" ){\n\t\t\t\tprintf (\"%d %d\\n\", col, row );\n\t\t\t\tbreak;\n\t\t\t}else\n\t\t\tif (com == \"LEFT\" ){\n\t\t\t\tdir = (dir - 1 + 4 )%4;\n\t\t\t}else\n\t\t\tif (com == \"RIGHT\" ){\n\t\t\t\tdir = (dir + 1 ) % 4;\n\t\t\t}else{\n\t\t\t\tss >> arg;\n\t\t\t\tif (com == \"FORWARD\" ){\n\t\t\t\t\trow = max (min(row + arg*dr[dir], n ), 1 );\n\t\t\t\t\tcol = max (min(col + arg*dc[dir], m ), 1 );\n\t\t\t\t}else\n\t\t\t\tif (com == \"BACKWARD\" ){\n\t\t\t\t\tint nr = row + arg*dr[(dir+2) % 4];\n\t\t\t\t\tint nc = col + arg*dc[(dir+2) % 4];\n\t\t\t\t\tif (nr >= 1 && nr <= n && nc >= 1 && nr <= m ){\n\t\t\t\t\t\trow = nr, col = nc;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif (nr < 1 ){\t// 南の壁にぶつかった\n\t\t\t\t\t\t\tdir = SOUTH, row = 1, col = nc; \n\t\t\t\t\t\t}else\n\t\t\t\t\t\tif (nr > n ){ // 北の壁にぶつかった\n\t\t\t\t\t\t\tdir = NORTH, row = n, col = nc;\n\t\t\t\t\t\t}else\n\t\t\t\t\t\tif (nc < 1 ){ // 西の壁にぶつかった\n\t\t\t\t\t\t\tdir = WEST, row = nr, col = 1;\n\t\t\t\t\t\t}else\n\t\t\t\t\t\tif (nc > m ){ // 東の壁にぶつかった\n\t\t\t\t\t\t\tdir = EAST, row = nr, col = m;\n\t\t\t\t\t\t} // end if\n\t\t\t\t\t} // end if\n\t\t\t\t} // end if\n\t\t\t} // end if\n//\t\t\tcout << \"row: \" << row << \" col: \" << col << \" dir: \" << dir << endl;\n\t\t} // end while\n\t} // end while\t\t \n\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint main(){\n\n\tint w,h;\n\twhile(cin>>w>>h&&!(w==0&&h==0)){\n\t\tvector<string> orders;\n\t\tstring str;\n\t\tgetline(cin,str);\n\t\twhile(1){\n\t\t\tgetline(cin,str);\n\t\t\torders.push_back(str);\n\t\t\tif(str==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint cy=0;\n\t\tint cx=0;\n\t\t// 0:up,1:right,2:down,3:left\n\t\tint angle=0;\n\t\tfor(int i = 0; i < orders.size(); i++){\n\t\t\tif(orders[i].substr(0,7)==\"FORWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==0)\n\t\t\t\t\tcy+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==2)\n\t\t\t\t\tcy-=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx-=atoi(orders[i].substr(8).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcy=max(0,cy);\n\t\t\t\t\tcx=max(0,cx);\n\t\t\t\t\tcy=min(h-1,cy);\n\t\t\t\t\tcx=min(w-1,cx);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"RIGHT\"){\n\t\t\t\tangle++;\n\t\t\t\tangle%=4;\n\t\t\t}\n\t\t\telse if(orders[i]==\"LEFT\"){\n\t\t\t\tangle--;\n\t\t\t\tangle=(angle+4)%4;\n\t\t\t}\n\t\t\telse if(orders[i].substr(0,8)==\"BACKWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==2)\n\t\t\t\t\tcy+=atoi(orders[i].substr(9).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx+=atoi(orders[i].substr(9).c_str());\n\t\t\t\telse if(angle==0)\n\t\t\t\t\tcy-=atoi(orders[i].substr(9).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx-=atoi(orders[i].substr(9).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcy=max(0,cy);\n\t\t\t\t\tcx=max(0,cx);\n\t\t\t\t\tcy=min(h-1,cy);\n\t\t\t\t\tcx=min(w-1,cx);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout<<cx+1<<\" \"<<cy+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n  int sx, sy;\n  while(cin >> sx >> sy, sx+sy) {\n    int x = 1, y = 1;\n    int dx = 0, dy = 1;\n    while(1) {\n      string a;\n      cin >> a;\n      int n;\n      if (a == \"FORWARD\") {\n        cin >> n;\n        x += dx * n;\n        y += dy * n;\n        x = min(sx, x);\n        x = max(1, x);\n        y = min(sy, y);\n        y = max(1, y);\n      } else if (a == \"BACKWARD\") {\n        cin >> n;\n        x -= dx * n;\n        y -= dy * n;\n        x = min(sx, x);\n        x = max(1, x);\n        y = min(sy, y);\n        y = max(1, y);\n      } else if (a == \"RIGHT\") {\n        if (dx==1&&dy==0) {\n          dx = 0; dy = -1;\n        } else if (dx==0&&dy==1) {\n          dx = 1; dy = 0;\n        } else if (dx==0&&dy==-1) {\n          dx = -1; dy = 0;\n        } else if (dx==-1&&dy==0) {\n          dx = 0; dy = 1;\n        }\n      } else if (a == \"LEFT\") {\n        if (dx==1&&dy==0) {\n          dx = 0; dy = 1;\n        } else if (dx==0&&dy==1) {\n          dx = -1; dy = 0;\n        } else if (dx==0&&dy==-1) {\n          dx = 1; dy = 0;\n        } else if (dx==-1&&dy==0) {\n          dx = 0; dy = -1;\n        }\n      } else if (a == \"STOP\") {\n        break;\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint main() {\n  while(true) {\n    int W, H; cin >> W >> H;\n    if(W == 0 && H == 0) break;\n    int curX = 1, curY = 1;\n    int dir = 0;\n    while(true) {\n      string comm; cin >> comm;\n      if(comm == \"STOP\") break;\n      static int dx[] = { 0, -1, 0, 1 };\n      static int dy[] = { 1, 0, -1, 0 };\n      if(comm == \"FORWARD\") {\n        int n; cin >> n;\n        for(int i = 0; i < n; ++i) {\n          int nx = curX + dx[dir];\n          int ny = curY + dy[dir];\n          if(1 <= nx && nx <= W && 1 <= ny && ny <= H) {\n            curX = nx;\n            curY = ny;\n          }\n        }\n      }\n      else if(comm == \"BACKWARD\") {\n        int n; cin >> n;\n        for(int i = 0; i < n; ++i) {\n          int nx = curX + dx[(dir + 2) % 4];\n          int ny = curY + dy[(dir + 2) % 4];\n          if(1 <= nx && nx <= W && 1 <= ny && ny <= H) {\n            curX = nx;\n            curY = ny;\n          }\n        }\n      }\n      else if(comm == \"LEFT\") {\n        dir = (dir + 1) % 4;\n      }\n      else if(comm == \"RIGHT\") {\n        dir = (dir + 3) % 4;\n      }\n    }\n    cout << curX << ' ' << curY << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int mv[4][3]=\n    {{0,1,1}, //forward\n     {-1,0,0},//left\n     {0,-1,0},//backward\n     {1,0,0}};//right\n  int n,m,num,x,y;\n  string op;\n\n  while(true){\n    cin >> n >> m;\n    if(n == 0 && m == 0)break;\n    x=1;y=1;\n\n    while(true){\n      cin >> op;\n      if(op == \"STOP\")break;\n      else if(op == \"LEFT\")\n\t{\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i != 3){\n\t\t    mv[i][2]=0;\n\t\t    mv[i+1][2]=1;\n\t\t  }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      mv[0][2]=1;\n\t\t      mv[3][2]=0;\n\t\t    }\n\t\t  else cout << \"********arienai********\" << endl;\n\t\t  break;\n\t\t}\n\t    }\n\t}\n      else if(op == \"RIGHT\")\n\t{//\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      mv[0][2]=0;\n\t\t      mv[3][2]=1;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      mv[i][2]=0;\n\t\t      mv[i-1][2]=1;\n\t\t    }\n\t\t  break;\n\t\t}\n\t    }\n\t}//\n      else if(op == \"FORWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      //cout << \"x = \" << x << \", num = \" << num << endl;\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\t\t  break;\n\t\t}\n\n\t    }\n\n\n\t}\n else if(op == \"BACKWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y-num <= 0)\n\t\t\t{\n\t\t\t  y=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x+num >= n)\n\t\t\t{\n\t\t\t  x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num >= m)\n\t\t\t{\n\t\t\t  y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x-num <= 0)\n\t\t\t{\n\t\t\t  x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  break;\n\n\t\t}\n\n\t    }\n\n\n\t}\n\n      //cout << \"op = \" << op << \",num =  \" << num << \", \"  << x << \" \" << y << endl; \n\n    }\n    cout << x << \" \" << y << endl; \n    \n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n  int m,n;\n  int x,y,d;\n  string command;\n  int step;\n\n  while(1){\n    cin >> m >> n;\n    if(!m && !n)break;\n\n    x = 1;\n    y = 1;\n    d = 0;\n\n    while(1){\n      cin >> command;\n      if(command == \"STOP\")break;\n      \n      if(command == \"LEFT\"){\n\td--;\n\tif(d < 0)d += 4;\n      }\n      else if(command == \"RIGHT\"){\n\td++;\n\tif(d > 4)d -= 4;\n      }\n      else{\n\tcin >> step;\n\tif(command == \"BACKWARD\")step *= -1;\n\tif(d == 0)y += step;\n\telse if(d == 1)x += step;\n\telse if(d == 2)y -= step;\n\telse x -= step;\n\n\tif(y < 0)y = 0;\n\tif(y > n)y = n;\n\tif(x < 0)x = 0;\n\tif(x > m)x = m;\n      }\n\n    }\n    cout << x << \" \" << y << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint main(){\n\n\tint w,h;\n\twhile(cin>>w>>h&&!(w==0&&h==0)){\n\t\tvector<string> orders;\n\t\tstring str;\n\t\tgetline(cin,str);\n\t\twhile(1){\n\t\t\tgetline(cin,str);\n\t\t\torders.push_back(str);\n\t\t\tif(str==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint cy=0;\n\t\tint cx=0;\n\t\t// 0:up,1:right,2:down,3:left\n\t\tint angle=0;\n\t\tfor(int i = 0; i < orders.size(); i++){\n\t\t\tif(orders[i].substr(0,7)==\"FORWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==0)\n\t\t\t\t\tcy+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx+=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==2)\n\t\t\t\t\tcy-=atoi(orders[i].substr(8).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx-=atoi(orders[i].substr(8).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcx=px;\n\t\t\t\t\tcy=py;\n\t\t\t\t\t//break;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"RIGHT\"){\n\t\t\t\tangle++;\n\t\t\t\tangle%=4;\n\t\t\t}\n\t\t\telse if(orders[i]==\"LEFT\"){\n\t\t\t\tangle--;\n\t\t\t\tangle=(angle+4)%4;\n\t\t\t}\n\t\t\telse if(orders[i].substr(0,8)==\"BACKWARD\"){\n\t\t\t\tint px=cx;\n\t\t\t\tint py=cy;\n\t\t\t\tif(angle==2)\n\t\t\t\t\tcy+=atoi(orders[i].substr(9).c_str());\n\t\t\t\telse if(angle==3)\n\t\t\t\t\tcx+=atoi(orders[i].substr(9).c_str());\n\t\t\t\telse if(angle==0)\n\t\t\t\t\tcy-=atoi(orders[i].substr(9).c_str());\n\t\t\t\telse if(angle==1)\n\t\t\t\t\tcx-=atoi(orders[i].substr(9).c_str());\n\t\t\t\tif(!(cy>=0&&cx>=0&&cy<h&&cx<w)){\n\t\t\t\t\tcx=px;\n\t\t\t\t\tcy=py;\n\t\t\t\t\t//break;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(orders[i]==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout<<cx+1<<\" \"<<cy+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tint direct = 0; // ↑0、→1、↓2、←3\n\tint x = 1;\n\tint y = 1;\n\tchar ch[100];\n\tint num;\n\tint map_x,map_y;\n\tscanf(\"%d %d\",&map_x,&map_y); // マップの読み込み\n\twhile(map_x != 0 || map_y != 0){\n\t\tscanf(\"%s\", ch); // 命令の読み込み\n\t\t\n\t\tx = 1;\n\t\ty = 1;\n\n\t\twhile(strcmp(ch,\"STOP\")){\n\t\n\t\t\t// 各命令に対して\n\t\n\t\t\tif(strcmp(ch,\"FORWARD\") == 0){\n\t\t\t\tscanf(\"%d\", &num);\n\t\t\t\t\n\t\t\t\tif(direct == 0){\n\t\t\t\t\ty += num;\n\t\t\t\t}if(y > map_y){\n\t\t\t\t\ty = map_y;\n\t\t\t\t}\n\t\t\t\tif(direct == 1){\n\t\t\t\t\tx += num;\n\t\t\t\t}if(x > map_x){\n\t\t\t\t\tx = map_x;\n\t\t\t\t}\n\t\t\t\tif(direct == 2){\n\t\t\t\t\ty -= num;\n\t\t\t\t}if(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t}\n\t\t\t\tif(direct == 3){\n\t\t\t\t\tx -= num;\n\t\t\t\t}if(x < 1){\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\n\t\t\t\t//printf(\"(%d,%d) direct %d\\n\",x,y,direct);\n\t\t\t}\n\t\t\tif(strcmp(ch,\"BACKWARD\") == 0){\n\t\t\t\tscanf(\"%d\", &num);\n\n\t\t\t\tif(direct == 2){\n\t\t\t\t\ty += num;\n\t\t\t\t}if(y > map_y){\n\t\t\t\t\ty = map_y;\n\t\t\t\t}\n\t\t\t\tif(direct == 3){\n\t\t\t\t\tx += num;\n\t\t\t\t}if(x > map_x){\n\t\t\t\t\tx = map_x;\n\t\t\t\t}\n\t\t\t\tif(direct == 0){\n\t\t\t\t\ty -= num;\n\t\t\t\t}if(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t}\n\t\t\t\tif(direct == 1){\n\t\t\t\t\tx -= num;\n\t\t\t\t}if(x < 1){\n\t\t\t\t\tx = 1;\n\t\t\t\t}\n\n\t\t\t\t//printf(\"(%d,%d) direct %d\\n\",x,y,direct);\n\t\t\t}\n\t\t\tif(strcmp(ch,\"RIGHT\") == 0){\n\t\t\t\tdirect++;\n\t\t\t\tif(direct > 3){\n\t\t\t\t\tdirect = 0;\n\t\t\t\t}\n\t\t\t\t//printf(\"direct %d\\n\",direct);\n\t\t\t}\n\t\t\tif(strcmp(ch,\"LEFT\") == 0){\n\t\t\t\tdirect--;\n\t\t\t\tif(direct < 0){\n\t\t\t\t\tdirect = 3;\n\t\t\t\t}\n\t\t\t\t//printf(\"direct %d\\n\",direct);\n\t\t\t}\n\t\t\tscanf(\"%s\", ch); // 命令の読み込み\n\t\t}\n\t\tprintf(\"%d %d\\n\",x,y);\n\t\tscanf(\"%d %d\",&map_x,&map_y); // マップの読み込み\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nint main(){\n    int lx,ly;\n    cin >> lx >> ly;\n    do{\n        int x=1,y=1,n,d=0;\n        char a[7];\n        cin >> a;\n        while(a[0]!='S'){\n            n=0;\n            switch(a[0]){\n                case'F':\n                    cin >> n;\n                    break;\n                case'B':\n                    cin >> n;\n                    n*=-1;\n                    break;\n                case'L':\n                    d-=1;\n                    break;\n                case'R':\n                    d+=1;\n                    break;\n            }\n            if (d==-1)\n                d=3;\n            if (n!=0)\n                switch(d){\n                    case 0:\n                        y+=n;\n                        break;\n                    case 1:\n                        x+=n;\n                        break;\n                    case 2:\n                        y-=n;\n                        break;\n                    case 3:\n                        x-=n;\n                        break;\n                }\n            if (x>lx)\n                x=lx;\n            if (x<0)\n                x=0;\n            if (y>ly)\n                y=ly;\n            if (y<0)\n                y=0;\n            cin >> a;\n        }\n        cout << x <<' '<< y << endl;\n        cin >> lx >> ly;\n    }while (!(lx==0&&ly==0));\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdlib.h>\n\nusing namespace std;\n\nint m,n;\nint direction=0;// 0:north, 1:east, 2:south, 3:west\n\nint main(){\n  string cmd, arg;\n  int x,y,i;\n\n  while ( 1 ){\n    cin >> m >> n;\n    if( !m&&!n ) break;\n    x=1; y=1;\n    while( 1 ){\n      cin >> cmd;\n      if( cmd==\"FORWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) y+=nn;\n\telse if( direction==2 ) y-=nn;\n\telse if( direction==1 ) x+=nn;\n\telse if( direction==3 ) x-=nn;\n\telse cout << \"unknown_direction\" <<endl;\n      }else if( cmd==\"BACKWARD\" ){\n\tcin >> arg;\n\tint nn=atoi( arg.c_str() );\n\tif( direction==0 ) y-=nn;\n\telse if( direction==2 ) y+=nn;\n\telse if( direction==1 ) x-=nn;\n\telse if( direction==3 ) x+=nn;\n\telse cout << \"unknown_direction\" <<endl;\n      }else if( cmd==\"RIGHT\" ){\n\tdirection = (direction+1) % 4;\n      }else if( cmd==\"LEFT\" ){\n\tdirection = (direction+3) % 4;\n      }else { // stop\n\tbreak;\n      }\n      if( x<1 ) x=1;\n      else if( x>m ) x=m;\n      if( y<1 ) y=1;\n      else if( y>n ) y=n;\n    }\n    cout << x << \" \"<<y<< endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nmain(){for(int W,H,x,y,d,k,a[4]={0,1,0,-1};x=y=d=1,std::cin>>W>>H,W;printf(\"%d %d\\n\",x,y))for(char c[9];std::cin>>c,*c-83;d=(d+(*c==82)-(*c==76)+4)%4,x=x>W?W:x<1?1:x,y=y>H?H:y<1?1:y)if(*c==70|*c==66){std::cin>>k;x+=a[(d+3)%4]*k*(*c-68)/2;y+=a[d]*k*(*c-68)/2;}}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define repb(i, a, b) for(int i = a; i >= b; i--)\n#define all(a) a.begin(), a.end()\n#define int long long\nusing namespace std;\n\nint dy[4] = {1, 0, -1, 0};\nint dx[4] = {0, 1, 0, -1};\n\nsigned main(){\n    int m, n;\n    while(1){\n        cin >> m >> n;\n        if(m + n == 0) break;\n        string s;\n        int k, y = 0, x = 0, dir = 0;\n        while(1){\n            cin >> s;\n            if(s == \"STOP\") break;\n            if(s == \"RIGHT\") dir = (dir + 1) % 4;\n            else if(s == \"LEFT\") dir = (dir + 3) % 4;\n            else{\n                cin >> k;\n                if(s == \"BACKWARD\") dir = (dir + 2) % 4;\n                rep(i, 0 ,k){\n                    int ty = y + dy[dir];\n                    int tx = x + dx[dir];\n                    if(!(0 <= ty && ty <n && 0 <= tx && tx < m)) break;\n                    y = ty; x = tx;\n                }\n            }\n        }\n        cout << x + 1 << ' ' << y + 1 << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\nusing namespace std;\nint W, H, x, y;\nstring op;\nint dir = 1;\n\nvoid forDir(int len){\n  if(dir == 1) y += len;\n  if(dir == 2) x += len;\n  if(dir == 3) y -= len;\n  if(dir == 4) x -= len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nvoid backDir(int len){\n  if(dir == 1) y -= len;\n  if(dir == 2) x -= len;\n  if(dir == 3) y += len;\n  if(dir == 4) x += len;\n\n  if(x >= W) x = W;\n  if(y >= H) y = H;\n  if(x <= 1) x = 1;\n  if(y <= 1) y = 1;\n}\n\nint main(){\n  while(cin >> W >> H){\n    if(W == 0 && H == 0) break;\n    \n    x = 1, y = 1;\n    dir = 1;\n    \n    while(cin >> op){\n      int move = 0;\n      if(op == \"STOP\") break;\n      \n      else if(op == \"FORWARD\"){\n\tcin >> move;\n\tforDir(move);\n      }\n      \n      else if(op == \"BACKWARD\"){\n\tcin >> move;\n\tbackDir(move);\n      }\n      \n      else if(op == \"RIGHT\"){\n\tdir++;\n\tif(dir == 5) dir = 1;\n      }\n      \n      else if(op == \"LEFT\"){\n\tdir--;\n\tif(dir == 0) dir = 4;\n      }\n      //printf(\"dir = %d, x = %d, y = %d\\n\", dir, x, y);\n    }\n    cout << x << ' ' << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n  int w,h;\n\n  while(1) {\n  cin >> w >> h;\n  if(w == 0 && h == 0) break;\n\n  string com;\n\n  int dir = 120;\n  int x,y;\n  x = y = 1;\n  while(1) {\n    cin >> com;\n    if(com == \"STOP\") break;\n\n    if(com == \"RIGHT\") dir++;\n    if(com == \"LEFT\") dir--;\n    if(com == \"FORWARD\" || com == \"BACKWARD\") {\n      int flg = 1;\n      if(com == \"BACKWARD\") flg = -1;\n      int n;\n      cin >> n;\n      if(dir % 4 == 0)y += flg*n;\n      else if(dir % 4 == 1) x += flg*n;\n      else if(dir % 4 == 3) x -= flg*n;\n      else if(dir % 4 == 2) y += flg*n;\n      if(x > w) x = w;\n      if(y > h) y = h;\n      if(x < 1) x = 1;\n      if(y < 1) y = 1;\n    }\n  }\n  cout << x <<\" \"<<y << endl;\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int w,h,dire,i,j,l,x,y;\n  string order;\n  while(1){\n    cin >> w >> h;\n    if(w==0&&h==0) break;\n    x=1;\n    y=1;\n    dire=0;//テ、ツクツ?テ・ツ渉ウ1テ、ツクツ?テ・ツキツヲ3\n    while(1){\n      cin >> order;\n      if(order==\"STOP\") break;\n      else if(order==\"LEFT\"){\n\tdire--;\n\tif(dire==-1) dire=3;\n      }\n      else if(order==\"RIGHT\"){\n\tdire++;\n\tif(dire==4) dire=0;\n      }\n      else if(order==\"FORWARD\"){\n\tcin >> l;\n        if(dire==0){\n\t  if(y+l>h) y=h;\n          else y+=l;\n\t}\n\telse if(dire==1){\n\t  if(x+l>w) x=w;\n\t  else x+=l;\n\t}\n\telse if(dire==2){\n\t  if(y-l<1) y=1;\n\t  else y-=l;\n\t}\n\telse if(dire==3){\n\t  if(x-l<1) x=1;\n\t  else x-=l;\n\t}\n      }\n      else if(order==\"BACKWARD\"){\n\tcin >> l;\n        if(dire==0){\n\t  if(y-l<1) y=1;\n\t  else y-=l;\n\t}\n\telse if(dire==1){\n\t  if(x-l<1) x=1;\n\t  else x-=l;\n\t}\n\telse if(dire==2){\n\t  if(y+l>h) y=h;\n          else y+=l;\n\t}\n\telse if(dire==3){\n\t  if(x+l>w) x=w;\n\t  else x+=l;\n\t}\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={0,1,0,-1};\nconst int dy[]={-1,0,1,0};\nint board[120][120];\nint main(){\n\tint n,m;\n\twhile(cin>>m>>n,n||m){\n\t\tint dir =0;\n\t\tint posx,posy;\n\t\tposx =posy=1;\n\t\tmemset(board, 0, sizeof(board));\n\t\tint nx,ny;\n\t\twhile(true){\n\t\t\t//cout <<dir<<\" \"<<posx<<\" \"<<posy<<endl;\n\t\t\tstring str;\n\t\t\tcin>>str;\n\t\t\tif(str==\"FORWARD\"){\n\t\t\t\tint d;\n\t\t\t\tcin>>d;\n\t\t\t\tif(dir==0){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =min(posy+d,n); \n\t\t\t\t}else if(dir==1){\n\t\t\t\t\tnx =min(posx+d,m);\n\t\t\t\t\tny =posy;\n\t\t\t\t}else if(dir==2){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =max(posy-d,1);\n\t\t\t\t}else if(dir==3){\n\t\t\t\t\tnx =min(posx-d,1);\n\t\t\t\t\tny =posy;\n\t\t\t\t}\n\t\t\t}else if(str==\"BACKWARD\"){\n\t\t\t\tint d;\n\t\t\t\tcin>>d;\n\t\t\t\tif(dir==0){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =max(posy-d,1); \n\t\t\t\t}else if(dir==1){\n\t\t\t\t\tnx =max(posx-d,1);\n\t\t\t\t\tny =posy;\n\t\t\t\t}else if(dir==2){\n\t\t\t\t\tnx =posx;\n\t\t\t\t\tny =min(posy+d,n);\n\t\t\t\t}else if(dir==3){\n\t\t\t\t\tnx =max(posx+d,m);\n\t\t\t\t\tny =posy;\n\t\t\t\t}\n\t\t\t}else if(str==\"RIGHT\"){\n\t\t\t\tdir =(dir+1)%4;\n\t\t\t\tnx =posx;\n\t\t\t\tny =posy;\n\t\t\t}else if(str==\"LEFT\"){\n\t\t\t\tdir =(dir-1);\n\t\t\t\tif(dir<0){\n\t\t\t\t\tdir =3;\n\t\t\t\t}\n\t\t\t\tnx =posx;\n\t\t\t\tny =posy;\n\t\t\t}else if(str==\"STOP\"){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tposx =nx;\n\t\t\tposy =ny;\n\t\t}\n\t\tcout <<posx<<\" \"<<posy<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nint W, H;\n\nvoid setPos(int &x, int &y) {\n    if (x < 1) x = 1;\n    if (x > H) x = H;\n    if (y < 1) y = 1;\n    if (y > W) y = W;\n}\n\nint main()\n{\n    int sx, sy, m, dir;\n    int dx[4] = {1, 0, -1, 0};\n    int dy[4] = {0, 1, 0, -1};\n    char str[8];\n    while (1) {\n        std::scanf(\"%d %d\", &W, &H);\n        if (W == 0 && H == 0) break;\n        dir = 0;\n        sx = 1, sy = 1;\n        while(1) {\n            std::scanf(\"%8s\", &str[0]);\n            if (str[0] == 'F') {\n                std::scanf(\"%d\", &m);\n                sx += m * dx[dir], sy += m * dy[dir];\n                setPos(sx, sy);\n            }\n            else if (str[0] == 'B') {\n                std::scanf(\"%d\", &m);\n                sx += m * dx[(dir+2)%4], sy += m * dy[(dir+2)%4];\n                setPos(sx, sy);\n            }\n            else if (str[0] == 'L') dir = (dir - 1) < 0 ? 3 : dir - 1;\n            else if (str[0] == 'R') dir = (dir + 1) % 4;\n            else if (str[0] == 'S') { break; }\n        }\n        std::printf(\"%d %d\\n\", sy, sx);\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\nint main() {int a[4][2]={0,-1,1,0,0,1,-1,0},N,M,i,j,k,w;char Tex[9];while (1) {scanf(\"%d %d\",&M,&N);if (!N && !M) return 0;w=1,i=1,j=1;while (1) {scanf(\"%s\",&Tex);if (Tex[0]=='F' || Tex[0]=='B') scanf(\"%d\",&k); else k=0;if (Tex[0]=='S') break;if (Tex[0]=='B') k=-k;i+=k*a[w][0],j+=k*a[w][1];if (Tex[0]=='R') w=(w+1)&3; else if (Tex[0]=='L') w=(w+3)&3;if (i<=0) i=1;if (i>N) i=N;if (j<=0) j=1;if (j>M) j=M;}printf(\"%d %d\\n\",j,i);}}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint C,R;\nint dx[]={-1,0,1,0};\nint dy[]={0,1,0,-1};\n\nvoid move(int& x, int& y, int d, int k)\n{\n\tx+=dx[d]*k;\n\ty+=dy[d]*k;\n\t\n\tif(x<=0) x=1;\n\tif(y<=0) y=1;\n\tif(x>C) x=C;\n\tif(y>R) y=R;\n}\n\nint main()\n{\n\twhile(cin >> C >> R, (C||R))\n\t{\n\t\tint x=1,y=1,d=1,k;\n\t\tstring c;\n\t\twhile(1)\n\t\t{\n\t\t\tcin >> c;\n\t\t\tif(c==\"FORWARD\")\n\t\t\t{\n\t\t\t\tcin >> k;\n\t\t\t\tmove(x,y,d,k);\n\t\t\t}\n\t\t\tif(c==\"BACKWARD\")\n\t\t\t{\n\t\t\t\tcin >> k;\n\t\t\t\tmove(x,y,(d+2)%4, k);\n\t\t\t}\n\t\t\tif(c==\"LEFT\")\n\t\t\t{\n\t\t\t\td=(d+3)%4;\n\t\t\t}\n\t\t\tif(c==\"RIGHT\")\n\t\t\t{\n\t\t\t\td=(d+1)%4;\n\t\t\t}\n\t\t\tif(c==\"STOP\") break;\n\t\t}\n\t\t\n\t\tcout << x << \" \" << y << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\nint main(void){\n\tint c,r;\n\twhile(cin >> c >> r){\n\t\tif(c==0&&r==0)break;\n\t\tint x=1,y=1,n;\n\t\tint angle=0;\n\t\tconst int POSX[] = {0,1,0,-1};\n\t\tconst int POSY[] = {1,0,-1,0};\n\t\tstring s;\n\t\twhile(cin>>s){\n\t\t\tif(s==\"FORWARD\"){\n\t\t\t\tcin >> n;\n\t\t\t\tint dx = n*POSX[angle];\n\t\t\t\tint dy = n*POSY[angle];\n\t\t\t\t\n\t\t\t\tint nx = dx + x;\n\t\t\t\tif(nx<1)x = 1;\n\t\t\t\telse if(nx>c)x=c;\n\t\t\t\telse x = nx;\n\t\t\t\t\n\t\t\t\tint ny = dy + y;\t\t\t\n\t\t\t\tif(ny<1)y = 1;\n\t\t\t\telse if(ny>r)y=r;\n\t\t\t\telse y = dy;\n\t\t\t\t\n\t\t\t}else if(s==\"BACKWARD\"){\n\t\t\t\tcin >> n;\n\t\t\t\tint dx = n*POSX[angle];\n\t\t\t\tint dy = n*POSY[angle];\n\t\t\t\t\n\t\t\t\tint nx = x - dx;\n\t\t\t\tif(nx<1)x = 1;\n\t\t\t\telse if(nx>c)x=c;\n\t\t\t\telse x = nx;\n\t\t\t\t\n\t\t\t\tint ny = y - dy;\n\t\t\t\tif(ny<1)y = 1;\n\t\t\t\telse if(ny>r)y=r;\n\t\t\t\telse y = ny;\n\t\t\t}else if(s==\"RIGHT\") angle++;\n\t\t\telse if(s==\"LEFT\") angle--;\n\t\t\telse if(s==\"STOP\") break;\n\t\t\t\n\t\t\tangle = (angle + 4) % 4;\n\t\t}\n\t\tcout << x << \" \" << y << \"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nint H, W;\nint my[] = {1, 0, -1, 0};\nint mx[] = {0, 1, 0, -1};\n\nvoid step(int &y, int &x, int my, int mx){\n  y += my; x += mx;\n  if(y >= H) y = H - 1;\n  if(x >= W) x = W - 1;\n  if(y < 0) y = 0;\n  if(x < 0) x = 0;\n}\n\nvoid disp(int y, int x){\n  for(int i = H - 1; i >= 0; --i){\n    REP(j, W){\n      cout <<(i == y && j == x ? 'x' : '.');\n    }\n    cout <<endl;\n  }\n}\n\nint main() {\n  while(cin >>W >>H && H){\n    int y = 0, x = 0, d = 0;\n    string s;\n    while(cin >>s && s != \"STOP\"){\n      if(s == \"FORWARD\"){\n        int n; cin >>n;\n        REP(i, n) step(y, x, my[d], mx[d]);\n      }\n      if(s == \"BACKWARD\"){\n        int n; cin >>n;\n        REP(i, n) step(y, x, -my[d], -mx[d]);\n      }\n      if(s == \"LEFT\") d = (d - 1) % 4;\n      if(s == \"RIGHT\") d = (d + 1) % 4;\n    }\n    cout <<x + 1 <<\" \" <<y + 1 <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nstring cmd;\nint m, n, x, y, dd[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}, d;\n\nint main(){\n    cin >> m >> n;\n    while( m + n > 0 ){\n        d = 0;\n        x = 1, y = 1;\n        while( getline(cin, cmd) ){\n            if( cmd == \"STOP\" ) break;\n            else if( cmd == \"RIGHT\" ) ++d %= 4;\n            else if( cmd == \"LEFT\" ) --d %= 4;\n            else if( cmd[0] == 'B' || cmd[0] == 'F' ){\n                int i = 9 - (cmd[0] - 'B')/4, j = 0;\n                while( i < cmd.length() ){\n                    j *= 10;\n                    j += cmd[i] - '0';\n                    i++;\n                }\n                x += dd[d][0] * j * (cmd[0] - 'D') / 2;\n                y += dd[d][1] * j * (cmd[0] - 'D') / 2;\n                if( x < 1 ) x = 1;\n                if( x > n ) x = n;\n                if( y < 1 ) y = 1;\n                if( y > n ) y = m;\n            }\n        }\n        cout << y << ' ' << x << endl;\n        cin >> m >> n;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint main() {\n int n, m;\n while (cin >> m >> n&&n != 0) {\n  string a;\n  int b1 = 1, b2 = 1, c1 = 1, c2 = 0;\n  while (cin >> a&&a != \"STOP\") {\n   int b;\n   if (a == \"FORWARD\") {\n    cin >> b;\n    b1 += (c1*b);\n    b2 += (c2*b);\n    b1 = min(max(0,b1), n);\n    b2 = min(max(0,b2), m);\n   }\n   else if (a == \"BACKWARD\") {\n    cin >> b;\n    b1 += (c1*(0 - b));\n    b2 += (c2*(0 - b));\n    b1 = min(max(0, b1), n);\n    b2 = min(max(0, b2), m);\n   }\n   else if (a == \"RIGHT\") {\n    if (c1 == 1) {\n     c1 = 0;\n     c2 = 1;\n    }\n    else if (c2 == 1) {\n     c1 = -1;\n     c2 = 0;\n    }\n    else if (c1 == -1) {\n     c1 = 0;\n     c2 = -1;\n    }\n    else if (c2 == -1) {\n     c1 = 1;\n     c2 = 0;\n    }\n   }\n   else if (a == \"LEFT\") {\n    if (c1 == 1) {\n     c1 = 0;\n     c2 = -1;\n    }\n    else if (c2 == -1) {\n     c1 = -1;\n     c2 = 0;\n    }\n    else if (c1 == -1) {\n     c1 = 0;\n     c2 = 1;\n    }\n    else if (c2 == 1) {\n     c1 = 1;\n     c2 = 0;\n    }\n   }\n  }\n  cout << b2 <<\" \"<< b1 << endl;\n }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint main() {\n\tint n, m;\n\twhile (cin >> m >> n&&n != 0) {\n\t\tstring a;\n\t\tint b1 = 1, b2 = 1, c1 = 1, c2 = 0;\n\t\twhile (cin >> a&&a != \"STOP\") {\n\t\t\tint b;\n\t\t\tif (a == \"FORWARD\") {\n\t\t\t\tcin >> b;\n\t\t\t\tb1 += (c1*b);\n\t\t\t\tb2 += (c2*b);\n\t\t\t\tb1 = min(max(0,b1), n);\n\t\t\t\tb2 = min(max(0,b2), m);\n\t\t\t}\n\t\t\telse if (a == \"BACKWARD\") {\n\t\t\t\tcin >> b;\n\t\t\t\tb1 += (c1*(0 - b));\n\t\t\t\tb2 += (c2*(0 - b));\n\t\t\t\tb1 = min(max(0, b1), n);\n\t\t\t\tb2 = min(max(0, b2), m);\n\t\t\t}\n\t\t\telse if (a == \"RIGHT\") {\n\t\t\t\tif (c1 == 1) {\n\t\t\t\t\tc1 = 0;\n\t\t\t\t\tc2 = 1;\n\t\t\t\t}\n\t\t\t\telse if (c2 == 1) {\n\t\t\t\t\tc1 = -1;\n\t\t\t\t\tc2 = 0;\n\t\t\t\t}\n\t\t\t\telse if (c1 == -1) {\n\t\t\t\t\tc1 = 0;\n\t\t\t\t\tc2 = -1;\n\t\t\t\t}\n\t\t\t\telse if (c2 == -1) {\n\t\t\t\t\tc1 = 1;\n\t\t\t\t\tc2 = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (a == \"LEFT\") {\n\t\t\t\tif (c1 == 1) {\n\t\t\t\t\tc1 = 0;\n\t\t\t\t\tc2 = -1;\n\t\t\t\t}\n\t\t\t\telse if (c2 == -1) {\n\t\t\t\t\tc1 = -1;\n\t\t\t\t\tc2 = 0;\n\t\t\t\t}\n\t\t\t\telse if (c1 == -1) {\n\t\t\t\t\tc1 = 0;\n\t\t\t\t\tc2 = 1;\n\t\t\t\t}\n\t\t\t\telse if (c2 == 1) {\n\t\t\t\t\tc1 = 1;\n\t\t\t\t\tc2 = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << b2 <<\" \"<< b1 << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#include<set>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<29\nusing namespace std;\n\nint main(){\n  int mv[4][3]=\n    {{0,1,1}, //forward\n     {-1,0,0},//left\n     {0,-1,0},//backward\n     {1,0,0}};//right\n  int n,m,num,x,y;\n  string op;\n\n  while(true){\n    cin >> n >> m;\n    if(n == 0 && m == 0)break;\n    x=1;y=1;\n\n    while(true){\n      cin >> op;\n      \n      if(op == \"STOP\")break;\n      else if(op == \"LEFT\")\n\t{\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i != 3){\n\t\t    mv[i][2]=0;\n\t\t    mv[i+1][2]=1;\n\t\t  }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      mv[0][2]=1;\n\t\t      mv[3][2]=0;\n\t\t    }\n\t\t  else cout << \"********arienai********\" << endl;\n\t\t  break;\n\t\t}\n\t    }\n\t}\n      else if(op == \"RIGHT\")\n\t{//\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      mv[0][2]=0;\n\t\t      mv[3][2]=1;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      mv[i][2]=0;\n\t\t      mv[i-1][2]=1;\n\t\t    }\n\t\t  break;\n\t\t}\n\t    }\n\t}//\n      else if(op == \"FORWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y+num > m)\n\t\t\t{\n\t\t\t  // y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x-num < 0)\n\t\t\t{\n\t\t\t  // x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y-num < 0)\n\t\t\t{\n\t\t\t  //y=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      //cout << \"x = \" << x << \", num = \" << num << endl;\n\t\t      if(x+num > n)\n\t\t\t{\n\t\t\t  //x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\n\t\t  break;\n\t\t}\n\n\t    }\n\n\n\t}\n else if(op == \"BACKWARD\")\n\t{\n\t  cin >> num;\n\t  for(int i=0;i<4;i++)\n\t    {\n\t      if(mv[i][2] == 1)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      if(y-num < 0)\n\t\t\t{\n\t\t\t  //y=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 1)\n\t\t    {\n\t\t      if(x+num > n)\n\t\t\t{\n\t\t\t  //x=n;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 2)\n\t\t    {\n\t\t      if(y+num > m)\n\t\t\t{\n\t\t\t  //y=m;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  y+=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  else if(i == 3)\n\t\t    {\n\t\t      if(x-num < 0)\n\t\t\t{\n\t\t\t  //x=1;\n\t\t\t}\n\t\t      else\n\t\t\t{\n\t\t\t  x-=num;\n\t\t\t}\n\t\t      //break;\n\t\t    }\n\t\t  break;\n\n\t\t}\n\n\t    }\n\n\n\t}\n      //for(int i=0;i<4;i++)if(mv[i][2] == 1)cout << \"i= \" << i << endl;\n// cout << \"op = \" << op << \",num =  \" << num << \", \"  << x << \" \" << y << endl; \n\n    }\n    cout << x << \" \" << y << endl; \n    \n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n \nint main(){\n    int n,m;\n    int dx[4] = { 0 , 1 , 0 , -1 };\n    int dy[4] = { 1 , 0 , -1 , 0 };\n    int angle;\n    string order;\n    int x,y;\n    int Go;\n \n    while(1){\n\tangle = 0; x = y = 1;\n\tcin >> n >> m;\n\tif( n == 0 && m == 0 ) break;\n\t\n\twhile(1){\n\t    cin >> order;\n\t    if( order == \"RIGHT\" ){\n\t\tangle++;\n\t\tif( angle == 4 ) angle = 0;\n\t\tcontinue;\n\t    }\n\t    else if( order == \"LEFT\" ){\n\t\tangle--;\n\t\tif( angle == -1 ) angle = 3;\n\t\tcontinue;\n\t    }\n\t    else if( order == \"STOP\" ){\n\t\tcout << x << \" \" << y << endl;\n\t\tbreak;\n\t    }\n\t    cin >> Go;\n\t    if( order == \"FORWARD\" ){\n\t\tx += dx[angle]*Go;\n\t\ty += dy[angle]*Go;\n\t\tif( x < 1 ) x = 1;\n\t\tif( y < 1 ) y = 1;\n\t\tif( x > n ) x = n;\n\t\tif( y > m ) y = m;\n\t    }\n\t    else if( order == \"BACKWARD\" ){\n\t\tx -= dx[angle]*Go;\n\t\ty -= dy[angle]*Go;\n\t\tif( x < 1 ) x = 1;\n\t\tif( y < 1 ) y = 1;\n\t\tif( x > n ) x = n;\n\t\tif( y > m ) y = m;\n \n\t    }\n\t}\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <iomanip>\n\n#define REP(i,n) for(i=0; i < (n); i++)\n#define REPONE(i, n) for(i=1; i <= (n); i++)\n#define LOOP(n) for(int loopCount=1; loopCount <= (n); loopCount++)\n#define ITER(c) __typeof((c).begin())\n#define EACH(c,it) for(ITER(c) it =(c).begin(); it!=(c).end(); it++)\n#define SZ(c) ((int) (c).size())\n#define ALL(c) c.begin(), c.end()\n#define SUM(c) accumulate(ALL(c), 0)\n#define EXIST(c,v) (find(ALL(c), (v)) != (c).end())\n#define PB push_back\n#define MP make_pair\n\nusing namespace std;\nstatic const double EPS = 1e-9;\nstatic const double PI = 3.141592653589793238462643383279;\ntypedef long long ll;\n\nint dx[] = {0,1,0,-1}, dy[] = {1,0,-1,0};\n\nint main(){\n    int n, m, cx, cy, dir, k;\n    char cmd[20];\n\n    while(scanf(\"%d %d\\n\", &n, &m)){\n        if(!(n||m)) break;\n        cx = cy = 1;\n        dir = 0;\n        while(1){\n            scanf(\"%s\",cmd);\n            if(string(cmd) == \"FORWARD\"){\n                scanf(\"%d\",&k);\n                cx += k*dx[dir];\n                cy += k*dy[dir];\n                if(cx < 1) cx = 1;\n                if(cx > n) cx = n;\n                if(cy < 1) cy = 1;\n                if(cy > m) cy = m;\n            }\n            else if(string(cmd) == \"BACKWARD\"){\n                scanf(\"%d\",&k);\n                cx += k*dx[(dir+2)%4];\n                cy += k*dy[(dir+2)%4];\n                if(cx < 1) cx = 1;\n                if(cx > n) cx = n;\n                if(cy < 1) cy = 1;\n                if(cy > m) cy = m;\n            }\n            else if(string(cmd) == \"RIGHT\"){\n                dir = (dir+1)%4;\n            }\n            else if(string(cmd) == \"LEFT\"){\n                dir = (dir+3)%4;\n            }\n            else if(string(cmd) == \"STOP\"){\n                printf(\"%d %d\\n\",cx, cy);\n                break;\n            }\n            scanf(\"\\n\");\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n  int m,n;\n  int x,y,d;\n  string command;\n  int step;\n\n  while(1){\n    cin >> m >> n;\n    if(!m && !n)break;\n\n    x = 1;\n    y = 1;\n    d = 0;\n\n    while(1){\n      cin >> command;\n      if(command == \"STOP\")break;\n      \n      if(command == \"LEFT\"){\n\td--;\n\tif(d < 0)d += 4;\n      }\n      else if(command == \"RIGHT\"){\n\td++;\n\tif(d > 4)d -= 4;\n      }\n      else{\n\tcin >> step;\n\tif(command == \"BACKWARD\")step *= -1;\n\tif(d == 0)y += step;\n\tif(d == 1)x += step;\n\tif(d == 2)y -= step;\n\tif(d == 3)x -= step;\n\n\tif(y < 1)y = 1;\n\tif(y > n)y = n;\n\tif(x < 1)x = 1;\n\tif(x > m)x = m;\n      }\n    }\n    cout << x << \" \" << y << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n  int w,h;\n\n  while(1) {\n  cin >> w >> h;\n  if(w == 0 && h == 0) break;\n\n  string com;\n\n  int dir = 200000;\n  int x,y;\n  x = y = 1;\n  while(1) {\n    cin >> com;\n    if(com == \"STOP\") break;\n\n    if(com == \"RIGHT\") dir++;\n    if(com == \"LEFT\") dir--;\n\n    if(com == \"FORWARD\" || com == \"BACKWARD\") {\n      int flg = 1;\n      if(com == \"BACKWARD\") flg = -1;\n      int n;\n      cin >> n;\n      n*=flg;\n      if(dir % 4 == 0)y += n;\n      else if(dir % 4 == 1) x += n;\n      else if(dir % 4 == 3) x -= n;\n      else if(dir % 4 == 2) y -= n;\n      if(x > w) x = w;\n      if(y > h) y = h;\n      if(x < 1) x = 1;\n      if(y < 1) y = 1;\n    }\n  }\n  cout << x <<\" \"<<y << endl;\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n\tint w,h;\n\tint dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\n\twhile(true){\n\tcin>>w>>h;\n\tstring a;\n\tint s=0;\n\tint x=1,y=1,z;\n\twhile(true){\n\t\tcin>>a;\n\t\tif(a==\"STOP\")break;\n\t\tif(a==\"RIGHT\")s=s+1%4;\n\t\tif(a==\"LEFT\")s=s-1%4;\n\t\tif(a==\"FORWARD\"){\n\t\t\tcin>>z;\n\t\t\tx+=dx[s]*z,y+=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t\tif(a==\"BACKWARD\"){\n\t\t\tcin>>z;\n\t\t\tx-=dx[s]*z,y-=dy[s]*z;\n\t\t\tif(x<1)x=1;if(x>w)x=w;\n\t\t\tif(y<1)y=1;if(y>h)y=h;\n\t\t}\n\t}\n\tcout<<x<<\" \"<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main()\n{\n\tint w,h,x,y,u,v,a,_[]={0,1,0,-1};\n\tstring s;\n\twhile(cin>>w>>h,w)\n\t{\n\t\ta=x=y=1;\n\t\tfor(;;)\n\t\t{\n\t\t\tcin>>s;\n\t\t\tif(s==\"STOP\")break;\n\t\t\telse if(s==\"RIGHT\")a=(a+1)%4;\n\t\t\telse if(s==\"LEFT\")a=(a+3)%4;\n\t\t\telse\n\t\t\t{\n\t\t\t\tcin>>v;\n\t\t\t\tu=(s==\"FORWARD\"?0:2);\n\t\t\t\tx+=v*_[(a+u+3)%4];\n\t\t\t\ty+=v*_[(a+u)%4];\n\t\t\t\tif(x<1)x=1;if(x>w)x=w;if(y<1)y=1;if(y>h)y=h;\n\t\t\t}\n\t\t}\n\t\tcout<<x<<' '<<y<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_DEPRECATE  \n#define _CRT_NONSTDC_NO_DEPRECATE\n\n#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <functional>\n#include <cctype>\n#include <numeric>\n#include <cstring>\n#include <bitset>\n#include <complex>\n#include <complex>\n\nusing namespace std;\n\ntemplate<typename T> ostream& operator<<(ostream& os, const vector<T>& v){\n    //os << \"{ \";\n    for (typename vector<T>::const_iterator it = v.begin(); it != v.end(); ++it)\n        os << \"\" << *it << \"\" << (it + 1 == v.end() ? \"\" : \" \");\n    //os << \" }\";\n    return os;\n}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<string> vs;\ntypedef long long ll;\ntypedef unsigned uint;\ntypedef unsigned long ul;\ntypedef unsigned long long ull;\n\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define loop(i,a,b) for(ull i=(a); i<(ull)(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define iter(i,c) for(auto it=c.begin(); it!=c.end(); ++it)\n#define pb push_back\n#define mp make_pair\nstring const resstr[] = { \"Impossible\", \"Possible\", \"No\", \"Yes\" };\n\ntypedef complex<int> point;\n\ninline bool in(point const& p, int w, int h){\n    return p.real() < w+1 && p.imag() < h+1 && 0 < p.real() && 0 < p.imag();\n}\n\nint main(){\n    int w, h;\n    while (cin >> w >> h && w + h){\n        point p(1, 1);\n        point dir(0, 1);\n        while (1){\n            string s;\n            cin >> s;\n            char c = s[0];\n            if (c == 'F'){\n                int k; cin >> k;\n                rep(i, k){\n                    if (in(p + dir, w, h)) p += dir;\n                }\n            }\n            else if (c == 'B'){\n                int k; cin >> k;\n                rep(i, k){\n                    if (in(p - dir, w, h)) p -= dir;\n                }\n            }\n            else if (c == 'R'){\n                dir /= point(0, 1);\n            }\n            else if (c == 'L'){\n                dir *= point(0, 1);\n            }\n            else{\n                break;\n            }\n            //cout << p.real() << \" \" << p.imag() << endl;\n        }\n        cout << p.real() << \" \" << p.imag() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n  int w,h;\n\n  while(1) {\n  cin >> w >> h;\n  if(w == 0 && h == 0) break;\n\n  string com;\n\n  int dir = 40000;\n  int x,y;\n  x = y = 1;\n  while(1) {\n    cin >> com;\n    if(com == \"STOP\") break;\n\n    if(com == \"RIGHT\") dir++;\n    if(com == \"LEFT\") dir--;\n    if(com == \"FORWARD\" || com == \"BACKWARD\") {\n      int flg = 1;\n      if(com == \"BACKWARD\") flg = -1;\n      int n;\n      cin >> n;\n      if(dir % 4 == 0)y += flg*n;\n      else if(dir % 4 == 1) x += flg*n;\n      else if(dir % 4 == 3) x -= flg*n;\n      else if(dir % 4 == 2) y += flg*n;\n      if(x > w) x = w;\n      if(y > h) y = h;\n      if(x < 1) x = 1;\n      if(y < 1) y = 1;\n    }\n  }\n  cout << x <<\" \"<<y << endl;\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>))\nimport Control.Monad (unless)\nimport Control.Monad.State\n\nmain :: IO ()\nmain = do\n  [w, h] <- map read <$> words <$> getLine\n  unless (w == 0 && h == 0) $ do\n    solve w h >>= printPos\n    main\n\nsolve :: Int -> Int -> IO Status\nsolve w h = evalStateT (walk w h) ((1, 1), N)\n\nwalk :: Int -> Int -> StateT Status IO Status\nwalk w h = do\n  st <- get\n  cs <- lift $ words <$> getLine\n  case cs of\n   [\"FORWARD\", sd] -> do\n     put $ forward w h (read sd) st\n     walk w h\n   [\"BACKWARD\", sd] -> do\n     put $ backward w h (read sd) st\n     walk w h\n   [\"RIGHT\"] -> do\n     put $ right st\n     walk w h\n   [\"LEFT\"] -> do\n     put $ left st\n     walk w h\n   _ -> return st\n   \ntype Status = ((Int,Int), Dir)\n\ndata Dir = N | E | S | W\n\nright :: Status -> Status\nright (p, N) = (p, E)\nright (p, E) = (p, S)\nright (p, S) = (p, W)\nright (p, W) = (p, N)\n\nleft :: Status -> Status\nleft = right . right . right\n\nforward :: Int -> Int -> Int -> Status -> Status\nforward w h d ((i, j), N) = ((i, min (j+d) h), N)\nforward w h d ((i, j), E) = ((min (i+d) w, j), E)\nforward w h d ((i, j), S) = ((i, max (j-d) 1), S)\nforward w h d ((i, j), W) = ((max (i-d) 1, j), W)\n\nbackward :: Int -> Int -> Int -> Status -> Status\nbackward w h d (p, N) = let (p', _) = forward w h d (p, S) in (p', N)\nbackward w h d (p, E) = let (p', _) = forward w h d (p, W) in (p', E)\nbackward w h d (p, S) = let (p', _) = forward w h d (p, N) in (p', S)\nbackward w h d (p, W) = let (p', _) = forward w h d (p, E) in (p', W)\n\nprintPos :: Status -> IO ()\nprintPos ((i,j), _) = putStrLn . unwords . map show $ [i, j]\n\n"
  },
  {
    "language": "Haskell",
    "code": "data Dir = N | E | W | S\n\nmn x y = if x > y then y else x\nmx x y = if x > y then x else y\n\nplay b (d,x,y) [] = (x,y)\nplay b@(xx,yy) (d,x,y) ([\"FORWARD\",k]:ls) =\n  case d of\n    N -> play b (d,x,(mn yy (y+k'))) ls\n    E -> play b (d,(mn xx (x+k')),y) ls\n    W -> play b (d,(mx 1 (x-k')),y) ls\n    S -> play b (d,x,(mx 1 (y-k'))) ls\n  where\n    k' = read k :: Int\n\nplay b@(xx,yy) (d,x,y) ([\"BACKWARD\",k]:ls) =\n  case d of\n    N -> play b (d,x,(mx 1 (y-k'))) ls\n    E -> play b (d,(mx 1 (x-k')),y) ls\n    W -> play b (d,(mn xx (x+k')),y) ls\n    S -> play b (d,x,(mn yy (y+k'))) ls\n  where\n    k' = read k :: Int\n\nplay b (d,x,y) ([\"RIGHT\"]:ls) =\n  case d of\n    N -> play b (E,x,y) ls\n    E -> play b (S,x,y) ls\n    W -> play b (N,x,y) ls\n    S -> play b (W,x,y) ls\nplay b (d,x,y) ([\"LEFT\"]:ls) =\n  case d of\n    N -> play b (W,x,y) ls\n    E -> play b (N,x,y) ls\n    W -> play b (S,x,y) ls\n    S -> play b (E,x,y) ls\n\nans [] = []\nans ([\"0\",\"0\"]:_) = []\nans (l:ls) =\n  let [x,y] = map read l :: [Int]\n      d = takeWhile (\\x -> \"STOP\" /= head x) ls\n      r = drop 1 $ dropWhile (\\x -> \"STOP\" /= head x) ls\n      a = play (x,y) (N,1,1) d\n  in\n    a:(ans r)\n\nmain = do\n  c <- getContents\n  let i = map words $ lines c\n      o = ans i\n  mapM_ putStrLn $ map (\\(x,y) -> unwords $ map show [x,y] ) o\n  \n\n"
  },
  {
    "language": "Haskell",
    "code": "data Dir = N | E | W | S\n\nmn x y = if x > y then y else x\nmx x y = if x > y then x else y\n\nplay b (d,x,y) [] = (x,y)\nplay b@(xx,yy) (d,x,y) ([\"FORWARD\",k]:ls) =\n  case d of\n    N -> play b (d,x,(mn yy (y+k'))) ls\n    E -> play b (d,(mn xx (x+k')),y) ls\n    W -> play b (d,(mx 1 (x-k')),y) ls\n    S -> play b (d,x,(mx 1 (y-k'))) ls\n  where\n    k' = read k :: Int\n\nplay b@(xx,yy) (d,x,y) ([\"BACKWARD\",k]:ls) =\n  case d of\n    N -> play b (d,x,(mx 1 (y-k'))) ls\n    E -> play b (d,(mx 1 (x-k')),y) ls\n    W -> play b (d,(mn xx (x+k')),y) ls\n    S -> play b (d,x,(mn yy (y+k'))) ls\n  where\n    k' = read k :: Int\n\nplay b (d,x,y) ([\"RIGHT\"]:ls) =\n  case d of\n    N -> play b (E,x,y) ls\n    E -> play b (S,x,y) ls\n    W -> play b (N,x,y) ls\n    S -> play b (W,x,y) ls\nplay b (d,x,y) ([\"LEFT\"]:ls) =\n  case d of\n    N -> play b (W,x,y) ls\n    E -> play b (N,x,y) ls\n    W -> play b (S,x,y) ls\n    S -> play b (E,x,y) ls\n\nans [] = []\nans [[\"0\",\"0\"]] = []\nans (l:ls) =\n  let [x,y] = map read l :: [Int]\n      d = takeWhile (\\x -> \"STOP\" /= head x) ls\n      r = drop 1 $ dropWhile (\\x -> \"STOP\" /= head x) ls\n      a = play (x,y) (N,1,1) d\n  in\n    a:(ans r)\n\nmain = do\n  c <- getContents\n  let i = map words $ lines c\n      o = ans i\n  mapM_ putStrLn $ map (\\(x,y) -> unwords $ map show [x,y] ) o\n  \n\n\n"
  },
  {
    "language": "Haskell",
    "code": "import Text.Parsec\nimport Data.List\nimport qualified Data.ByteString as B\nimport Data.ByteString (ByteString)\nimport qualified Data.ByteString.Lazy.Char8 as BLC\n-- learning parsec..\n-- {{{ data\ndata Command = Forward Int\n             | Backward Int\n             | TurnRight\n             | TurnLeft deriving (Show)\n\ntype Loc = (Int, Int)\ntype Vec = (Int, Int)\n\nturnRight :: Vec -> Vec\nturnRight (x,y) = (y,-x)\nturnLeft :: Vec -> Vec\nturnLeft (x,y) = (-y,x)\n\ndata Robot = Robot {\n           _loc :: Loc,\n           _dir :: Vec,\n           _field :: (Int,Int)\n}\ninstance Show Robot where\n    show (Robot (x,y) _ _) = unwords. map show $ [x,y]\ninitRobot :: Int -> Int -> Robot\ninitRobot x y = Robot (1,1) (0,1) (x,y)\n\n(*:) :: Int -> Vec -> Vec\nn *: (x,y) = (n*x, n*y)\n(+:) :: Vec -> Vec -> Vec\n(x,y) +: (z,w) = (x+z,y+w)\nfitIn :: Int -> Int -> Int\nfitIn x w = if x <= 0 then 1 else min x w\nstayInside :: Vec -> Vec -> Vec\nstayInside (x,y) (w,h) = (x `fitIn` w, y `fitIn` h)\n\ndata Input = Input Int Int [Command] deriving (Show)\n-- }}}\n-- {{{ parser\nnum :: Parsec ByteString u Int\nnum = read <$> many1 digit\n\ncommand :: Parsec ByteString u Command\ncommand = Forward <$> (string \"FORWARD\" *> spaces *> num)\n      <|> Backward <$> (string \"BACKWARD\" *> spaces *> num)\n      <|> const TurnRight <$> string \"RIGHT\"\n      <|> const TurnLeft <$> string \"LEFT\"\n\nsingleInput :: Parsec ByteString u Input\nsingleInput = Input <$> (spaces *> num)\n                    <*> (spaces *> num <* spaces)\n                    <*> command `sepEndBy` spaces\n                    <* string \"STOP\"\ninputs :: Parsec ByteString u [Input]\ninputs = (singleInput <* spaces) `manyTill` (char '0' *> spaces *> char '0')\n-- }}}\n-- {{{ solver\napplyCmd :: Robot -> Command -> Robot\napplyCmd r@(Robot l d s) (Forward n) =\n        r {_loc = (l +: (n *: d)) `stayInside` s}\napplyCmd r@(Robot l d s) (Backward n) =\n        r {_loc = (l +: ((-n) *: d)) `stayInside` s}\napplyCmd r@(Robot{_dir=d}) TurnRight = r {_dir = turnRight d}\napplyCmd r@(Robot{_dir=d}) TurnLeft = r {_dir = turnLeft d}\n\nsolve :: Input -> Robot\nsolve (Input x y cmds) = let r = initRobot x y in\n    foldl' applyCmd r cmds\n-- }}}\nmain = B.getContents >>=\n    mapM_ (BLC.putStrLn . BLC.pack . show . solve)\n        . (\\(Right r) -> r) . parse inputs \"\"\n-- vim:fdm=marker"
  },
  {
    "language": "Haskell",
    "code": "import Text.Parsec\nimport Data.List\nimport qualified Data.ByteString as B\nimport Data.ByteString (ByteString)\nimport qualified Data.ByteString.Lazy.Char8 as BLC\nimport Control.Applicative hiding ((<|>))\n-- learning parsec..\n-- {{{ data\ndata Command = Forward Int\n             | Backward Int\n             | TurnRight\n             | TurnLeft deriving (Show)\n\ntype Loc = (Int, Int)\ntype Vec = (Int, Int)\n\nturnRight :: Vec -> Vec\nturnRight (x,y) = (y,-x)\nturnLeft :: Vec -> Vec\nturnLeft (x,y) = (-y,x)\n\ndata Robot = Robot {\n           _loc :: Loc,\n           _dir :: Vec,\n           _field :: (Int,Int)\n}\ninstance Show Robot where\n    show (Robot (x,y) _ _) = unwords. map show $ [x,y]\ninitRobot :: Int -> Int -> Robot\ninitRobot x y = Robot (1,1) (0,1) (x,y)\n\n(*:) :: Int -> Vec -> Vec\nn *: (x,y) = (n*x, n*y)\n(+:) :: Vec -> Vec -> Vec\n(x,y) +: (z,w) = (x+z,y+w)\nfitIn :: Int -> Int -> Int\nfitIn x w = if x <= 0 then 1 else min x w\nstayInside :: Vec -> Vec -> Vec\nstayInside (x,y) (w,h) = (x `fitIn` w, y `fitIn` h)\n\ndata Input = Input Int Int [Command] deriving (Show)\n-- }}}\n-- {{{ parser\nnum :: Parsec ByteString u Int\nnum = read <$> many1 digit\n\ncommand :: Parsec ByteString u Command\ncommand = Forward <$> (string \"FORWARD\" *> spaces *> num)\n      <|> Backward <$> (string \"BACKWARD\" *> spaces *> num)\n      <|> const TurnRight <$> string \"RIGHT\"\n      <|> const TurnLeft <$> string \"LEFT\"\n\nsingleInput :: Parsec ByteString u Input\nsingleInput = Input <$> (spaces *> num)\n                    <*> (spaces *> num <* spaces)\n                    <*> command `sepEndBy` spaces\n                    <* string \"STOP\"\ninputs :: Parsec ByteString u [Input]\ninputs = (singleInput <* spaces) `manyTill` (char '0' *> spaces *> char '0')\n-- }}}\n-- {{{ solver\napplyCmd :: Robot -> Command -> Robot\napplyCmd r@(Robot l d s) (Forward n) =\n        r {_loc = (l +: (n *: d)) `stayInside` s}\napplyCmd r@(Robot l d s) (Backward n) =\n        r {_loc = (l +: ((-n) *: d)) `stayInside` s}\napplyCmd r@(Robot{_dir=d}) TurnRight = r {_dir = turnRight d}\napplyCmd r@(Robot{_dir=d}) TurnLeft = r {_dir = turnLeft d}\n\nsolve :: Input -> Robot\nsolve (Input x y cmds) = let r = initRobot x y in\n    foldl' applyCmd r cmds\n-- }}}\nmain = B.getContents >>=\n    mapM_ (BLC.putStrLn . BLC.pack . show . solve)\n        . (\\(Right r) -> r) . parse inputs \"\"\n-- vim:fdm=marker"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#define N 100\n#define M 100\n#define CMD 51\n\n#define DEBUG 0\n\nint main(void){\n  char cmd[CMD];\n  char buf[20];\n  int n,m;\n  int i,j,k;\n  int flag;\n\n  int x,y,t;\n\n  while( 1 ){\n    fgets(cmd,CMD,stdin);\n    for( i=0; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )      buf[j++]=cmd[i];\n    buf[j]='\\0';\n    sscanf(buf,\"%d \",&m);\n    for( ; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )      buf[j++]=cmd[i];\n    sscanf(buf,\"%d \",&n);\n\n    if( m==0 && n==0 )  break;\n    if( DEBUG==1 )  printf(\"field : %d %d \\n\",m,n);\n\n    x=1;y=1;t=1;\n\n    flag = 1;\n    while( flag>0 ){\n      fgets(cmd,CMD,stdin);\n      if( DEBUG==1 )\n\tprintf(\"%s| %d,%d t=%d\\n\",cmd,x,y,t);\n\n      if( flag==2 ){\n\tif( cmd[0]=='S' )\n\t  flag=0;\n      }else{\n\tswitch( cmd[0] ){\n\tcase 'F':\n\t  for( i=7,j=0;cmd[i]!='\\n';i++)\n\t    buf[j++]=cmd[i];\n\t  buf[j]='\\0';\n\t  sscanf(buf,\"%d \",&k);\n\t  switch(t){\n\t  case 1:   y+=k;   if( y>n ){  y=n;flag=2;  }\t    break;\n\t  case 2:   x+=k;   if( x>m ){  x=m;flag=2;  }\t    break;\n\t  case 3:   y-=k;   if( y<1 ){  y=1;flag=2;  }\t    break;\n\t  case 4:   x-=k;   if( x<1 ){  x=1;flag=2;  }      break;\n\t  }\n\t  break;\n\tcase 'B':\n\t  for( i=8,j=0;cmd[i]!='\\n';i++)    buf[j++]=cmd[i];\n\t  buf[j]='\\0';\n\t  sscanf(buf,\"%d \",&k);\n\t  switch(t){\n\t  case 1:   y-=k;   if( y<1 ){  y=1;flag=2;   }\t    break;\n\t  case 2:   x-=k;   if( x<1 ){  x=1;flag=2;   }\t    break;\n\t  case 3:   y+=k;   if( y>n ){  y=n;flag=2;   }\t    break;\n\t  case 4:   x+=k;   if( x>m ){  x=m;flag=2;   }\t    break;\n\t  }\n\t  break;\n\tcase 'R':\n\t  t++;\t  if( t==5 )t=0;\n\t  break;\n\tcase 'L':\n\t  t--;\t  if( t==0 )t=4;\n\t  break;\n\tcase 'S':\n\t  flag=0;\n\t  break;\n\t}\n      }\n    }\n    printf(\"%d %d\\n\",x,y);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void)\n{\n    int x,y;\n\n    while(1)\n    {\n        scanf(\"%d %d\",&x,&y);\n        //printf(\"x=%d,y=%d\\n\",x,y);\n\n        if(x==0 && y==0)\n        {\n            break;\n        }\n\n        int field[102][102]={};\n        int robot[2][2]={};     //robot[0][0]=x;robot[0][1]=y;robot[1][0]=??????\n\n        int k,j;\n\n        for(k=0;k<x+2;k++)\n        {\n            for(j=0;j<y+2;j++)\n            {\n                field[k][j]=0;\n            }\n        }\n\n        for(k=1;k<=x;k++)\n        {\n            for(j=1;j<=y;j++)\n            {\n                field[k][j]=1;\n            }\n        }\n\n        /*for(k=y+1;k>=0;k--)\n        {\n            for(j=x+1;j>=0;j--)\n            {\n                printf(\"%d \",field[j][k]);\n            }\n            printf(\"\\n\");\n        }*/\n\n        robot[0][0]=1;\n        robot[0][1]=1;\n        robot[1][0]=3;\n\n        while(1)\n        {\n            char command[20]={};\n            int distance,escape=0;\n\n            scanf(\"%s*c\",command);\n            //printf(\"command=%s,distance=%d\\n\",command,distance);\n\n            switch(command[0])\n            {\n                int i,check=0;\n                case 'F':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 0:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 2:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'B':\n                    scanf(\"%d%*c\",&distance);\n                    check=0;\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 2:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 0:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'R':\n                    scanf(\"%d%*c\",&distance);\n                    robot[1][0]=(robot[1][0]+1)%4;\n                    break;\n                case 'L':\n                    scanf(\"%d%*c\",&distance);\n                    robot[1][0]=(robot[1][0]+3)%4;\n                    break;\n                case 'S':\n                    escape=1;\n                    break;\n                default:\n                    break;\n            }\n\n            if(escape==1)\n            {\n                break;\n            }\n        }\n        printf(\"%d %d\\n\",robot[0][0],robot[0][1]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void)\n{\n    int x,y;\n\n    while(1)\n    {\n        scanf(\"%d %d\",&x,&y);\n        //printf(\"x=%d,y=%d\\n\",x,y);\n\n        if(x==0 && y==0)\n        {\n            break;\n        }\n\n        int field[102][102]={};\n        int robot[2][2]={};     //robot[0][0]=x;robot[0][1]=y;robot[1][0]=??????\n\n        int k,j;\n\n        for(k=0;k<x+2;k++)\n        {\n            for(j=0;j<y+2;j++)\n            {\n                field[k][j]=0;\n            }\n        }\n\n        for(k=1;k<=x;k++)\n        {\n            for(j=1;j<=y;j++)\n            {\n                field[k][j]=1;\n            }\n        }\n\n        /*for(k=y+1;k>=0;k--)\n        {\n            for(j=x+1;j>=0;j--)\n            {\n                printf(\"%d \",field[j][k]);\n            }\n            printf(\"\\n\");\n        }*/\n\n        robot[0][0]=1;\n        robot[0][1]=1;\n        robot[1][0]=3;\n\n        while(1)\n        {\n            char command[20]={};\n            int escape=0;\n\n            scanf(\"%s*c\",command);\n            //printf(\"command=%s,distance=%d\\n\",command,distance);\n            int i,check=0,distance;\n            switch(command[0])\n            {\n                case 'F':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 0:\n                                if(field[robot[0][0]+1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]-1]==1)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 2:\n                                if(field[robot[0][0]-1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]+1]==1)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'B':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 2:\n                                if(field[robot[0][0]+1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]-1]==1)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 0:\n                                if(field[robot[0][0]-1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]+1]==1)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'R':\n                    robot[1][0]=(robot[1][0]+1)%4;\n                    break;\n                case 'L':\n                    robot[1][0]=(robot[1][0]+3)%4;\n                    break;\n                case 'S':\n                    escape=1;\n                    break;\n                default:\n                    break;\n            }\n\n            if(escape==1)\n            {\n                break;\n            }\n        }\n        printf(\"%d %d\\n\",robot[0][0],robot[0][1]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(void) {\n\tint width,height;\n\tint x,y;\n\tint direction_x,direction_y;\n\tint dist;\n\tchar command[100];\n\tchar* token;\n\twhile(1) {\n\t\tscanf(\"%d%d\",&width,&height);\n\t\tif(width==0 && height==0)break;\n\t\tx=y=1;\n\t\tdirection_x=0;direction_y=1;\n\t\twhile(1) {\n\t\t\tfgets(command,sizeof(command),stdin);\n\t\t\ttoken=strchr(command,'\\n');\n\t\t\tif(token)*token=0;\n\t\t\ttoken=strtok(command,\" \");\n\t\t\tif(token==NULL)token=command;\n\t\t\tif(strcmp(token,\"FORWARD\")==0) {\n\t\t\t\ttoken=strtok(NULL,\" \");\n\t\t\t\tif(token)dist=atoi(token); else dist=0;\n\t\t\t\tx+=direction_x*dist;\n\t\t\t\ty+=direction_y*dist;\n\t\t\t\tif(x<1)x=1;\n\t\t\t\tif(x>width)x=width;\n\t\t\t\tif(y<1)y=1;\n\t\t\t\tif(y>height)y=height;\n\t\t\t} else if(strcmp(token,\"BACKWARD\")==0) {\n\t\t\t\ttoken=strtok(NULL,\" \");\n\t\t\t\tif(token)dist=atoi(token); else dist=0;\n\t\t\t\tx-=direction_x*dist;\n\t\t\t\ty-=direction_y*dist;\n\t\t\t\tif(x<1)x=1;\n\t\t\t\tif(x>width)x=width;\n\t\t\t\tif(y<1)y=1;\n\t\t\t\tif(y>height)y=height;\n\t\t\t} else if(strcmp(token,\"LEFT\")==0) {\n\t\t\t\tif(direction_x!=0) {\n\t\t\t\t\tdirection_y=direction_x;\n\t\t\t\t\tdirection_x=0;\n\t\t\t\t} else if(direction_y!=0) {\n\t\t\t\t\tdirection_x=-direction_y;\n\t\t\t\t\tdirection_y=0;\n\t\t\t\t}\n\t\t\t} else if(strcmp(token,\"RIGHT\")==0) {\n\t\t\t\tif(direction_x!=0) {\n\t\t\t\t\tdirection_y=-direction_x;\n\t\t\t\t\tdirection_x=0;\n\t\t\t\t} else if(direction_y!=0) {\n\t\t\t\t\tdirection_x=direction_y;\n\t\t\t\t\tdirection_y=0;\n\t\t\t\t}\n\t\t\t} else if(strcmp(token,\"STOP\")==0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",x,y);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n\nint main(void){\n  unsigned int n,m,x,y;\n  char Order[16];\n  int ret,Dir=0;//ROBO's DIRECTION\n  \n  while(1){\n    Dir=0;//heading to North\n    Order[0]='0';\n    x=1;\n    y=1;\n\n    //printf(\"Please type Field Size; x(to East),y(to North) in order\\n\");\n    scanf(\"%u %u%*c\",&m,&n);\n    if(m==0&&n==0) return 0;\n\n    for(;(strcmp(Order,\"STOP\"));){\n      scanf(\"%15s%*c\",Order);\n      if(!strcmp(Order,\"LEFT\")){\n\tDir++;\n\tDir %= 4;\n      }else if(!strcmp(Order,\"RIGHT\")){\n\tDir += 3;\n\tDir %= 4;\n      }else if(!strcmp(Order,\"FORWARD\")){\n\tif(Dir==0) if( y<n ) y++;\n\tif(Dir==1) if( x>1 ) x--;\n\tif(Dir==2) if( y>1 ) y--;\n\tif(Dir==3) if( x<m ) x++;\n      }else if(!strcmp(Order,\"BACKWARD\")){\n\tif(Dir==2) if( y<n ) y++;\n\tif(Dir==3) if( x>1 ) x--;\n\tif(Dir==0) if( y>1 ) y--;\n\tif(Dir==1) if( x<m ) x++;\n      }else if(!strcmp(Order,\"STOP\")){\n\t  printf(\"%u %u\\n\",x,y);\n      }\n    }\n    // printf(\"Type 'Ctr + d' if you want exil; or else type any other key...\\n\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void)\n{\n    int x,y;\n\n    while(1)\n    {\n        scanf(\"%d %d\",&x,&y);\n        //printf(\"x=%d,y=%d\\n\",x,y);\n\n        if(x==0 && y==0)\n        {\n            break;\n        }\n\n        int field[102][102]={};\n        int robot[2][2]={};     //robot[0][0]=x;robot[0][1]=y;robot[1][0]=??????\n\n        int k,j;\n\n        for(k=0;k<x+2;k++)\n        {\n            for(j=0;j<y+2;j++)\n            {\n                field[k][j]=0;\n            }\n        }\n\n        for(k=1;k<=x;k++)\n        {\n            for(j=1;j<=y;j++)\n            {\n                field[k][j]=1;\n            }\n        }\n\n        /*for(k=y+1;k>=0;k--)\n        {\n            for(j=x+1;j>=0;j--)\n            {\n                printf(\"%d \",field[j][k]);\n            }\n            printf(\"\\n\");\n        }*/\n\n        robot[0][0]=1;\n        robot[0][1]=1;\n        robot[1][0]=3;\n\n        while(1)\n        {\n            char command[20]={};\n            int distance,check=0;\n\n            scanf(\"%s*c\",command);\n            //printf(\"command=%s,distance=%d\\n\",command,distance);\n\n            switch(command[0])\n            {\n                int i;\n                case 'F':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 0:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 2:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'B':\n                    scanf(\"%d%*c\",&distance);\n                    check=0;\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 2:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 0:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'R':\n                    scanf(\"%d%*c\",&distance);\n                    robot[1][0]=(robot[1][0]+1)%4;\n                    break;\n                case 'L':\n                    scanf(\"%d%*c\",&distance);\n                    robot[1][0]=(robot[1][0]+3)%4;\n                    break;\n                case 'S':\n                    check=1;\n                    break;\n                default:\n                    break;\n            }\n\n            if(check==1)\n            {\n                break;\n            }\n        }\n        printf(\"%d %d\\n\",robot[0][0],robot[0][1]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A1104\nTitle\n*/\n#include <stdio.h>\n#include <string.h>\n#define min(x,y) (((x)<(y))?(x):(y))\n#define max(x,y) (((x)>(y))?(x):(y))\n\n//Global data section\nint x,y;\nint w,h;\nchar dir;\nchar *dd=\"NESW\";\nchar directive[10];\nint operand;\n//\nmain()\n{\n        while(EOF!=scanf(\"%d %d\",&w,&h) && (w||h))\n        {\n#ifdef DEBUG\n                printf(\"%d %d\\n\",w,h);\n#endif\n                x=1;y=1;dir=0;\n\n                while(1)\n                {\n                        scanf(\"%s \",directive);\n                        if(0==strcmp(\"STOP\",directive))         \n                                break;\n                        if(0==strcmp(\"LEFT\",directive))\n                                dir=(dir+3)%4;\n                        if(0==strcmp(\"RIGHT\",directive))\n                                dir=(dir+1)%4;\n                        if(0==strcmp(\"FORWARD\",directive))\n                        {\n                                scanf(\"%d\",&operand);\n#ifdef DEBUG\n                        printf(\"%s %d\\n\",directive,operand);\n#endif\n                                switch( dir)\n                                {\n                                case 0:\n                                        y=min(y+operand,h);\n                                        break;\n                                case 1:\n                                        x=min(x+operand,w);\n                                        break;\n                                case 2:\n                                        y=max(y-operand,1);\n                                        break;\n                                case 3:\n                                        x=max(x-operand,1);\n                                        break;\n                                }\n#ifdef DEBUG\n                                printf(\"%d %d %d\\n\",dir,x,y);\n#endif\n\n                        }\n                        if(0==strcmp(\"BACKWARD\",directive))\n                        {\n                                scanf(\"%d\",&operand);\n#ifdef DEBUG\n                        printf(\"%s %d\\n\",directive,operand);\n#endif\n                                switch( dir)\n                                {\n                                case 2:\n                                        y=min(y+operand,h);\n                                        break;\n                                case 3:\n                                        x=min(x+operand,w);\n                                        break;\n                                case 0:\n                                        y=max(y-operand,1);\n                                        break;\n                                case 1:\n                                        x=max(x-operand,1);\n                                        break;\n                                }\n#ifdef DEBUG\n                                printf(\"%d %d %d\\n\",dir,x,y);\n#endif\n                        }\n                }\n                printf(\"%d %d\\n\",x,y);\n        }\n\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n\nint main(void){\n  struct place{\n    char x,y,dir;\n  } now;\n  unsigned int m,n;\n  int k;\n  char input[32],command[16];\n\n  while(scanf(\"%u%u%*c\",&m,&n) && m && n){\n    now=(struct place){1,1,0};\n    \n    while(scanf(\"%31[^\\n]%*c\",input) && strcmp(input,\"STOP\")){\n      if(!strcmp(input,\"RIGHT\")){\n\tnow.dir+=1;\n\tnow.dir%=4;\n\tcontinue;\n      }else if(!strcmp(input,\"LEFT\")){\n\tnow.dir+=3;\n\tnow.dir%=4;\n\tcontinue;\n      }\n      sscanf(input,\"%15s%d\",command,&k);\n      if(!strcmp(command,\"BACKWARD\")) k*=-1;\n      if(now.dir%2){\n\tk*=(now.dir==3)?-1:1;\n\tnow.x+=k;\n\tif(now.x<1) now.x=1;\n\telse if(now.x>m) now.x=m;\n      }else{\n\tk*=(now.dir==2)?-1:1;\n\tnow.y+=k;\n\tif(now.y<1) now.y=1;\n\telse if(now.y>n) now.y=n;\n      }\n    }\n    printf(\"%d %d\\n\",now.x,now.y);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n\nint main(void){\n  struct place{\n    int x;\n    int y;\n    char dir;\n  } now;\n  unsigned int m,n;\n  int k;\n  char input[32],command[16];\n\n  while(scanf(\"%u%u%*c\",&m,&n) && m && n){\n    now=(struct place){1,1,0};\n    \n    while(scanf(\"%31[^\\n]%*c\",input) && strcmp(input,\"STOP\")){\n      if(!strcmp(input,\"RIGHT\")){\n\tnow.dir+=1;\n\tnow.dir%=4;\n\tcontinue;\n      }else if(!strcmp(input,\"LEFT\")){\n\tnow.dir+=3;\n\tnow.dir%=4;\n\tcontinue;\n      }\n      sscanf(input,\"%15s%d\",command,&k);\n      if(!strcmp(command,\"BACKWARD\")) k*=-1;\n      if(now.dir%2){\n\tk*=(now.dir==3)?-1:1;\n\tnow.x+=k;\n\tif(now.x<1) now.x=1;\n\telse if(now.x>m) now.x=m;\n      }else{\n\tk*=(now.dir==2)?-1:1;\n\tnow.y+=k;\n\tif(now.y<1) now.y=1;\n\telse if(now.y>n) now.y=n;\n      }\n    }\n    printf(\"%d %d\\n\",now.x,now.y);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint J(int, int, int, int, int);\n\nint main(void)\n{\n\tint x, y, px, py, n, h;\n\tchar I[9];\n\t\n\twhile(scanf(\"%d %d\",&x, &y) && x > 0)\n\t{\n\t\tpx = 1; py = 1;\n\t\th = 1;\n\t\twhile(scanf(\"%s\",&I) && strcmp(I,\"STOP\") != 0)\n\t\t{\n\t\t\tif(strcmp(I,\"FORWARD\") == 0 || strcmp(I,\"BACKWARD\") == 0)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&n);\n\t\t\t\tif(strcmp(I,\"FORWARD\") == 0)\n\t\t\t\t{\n\t\t\t\t\t//北\n\t\t\t\t\tif(h == 1)\n\t\t\t\t\t\tpy = J(py, n, y, y, py+n);\n\t\t\t\t\t//東\n\t\t\t\t\telse if(h == 2)\n\t\t\t\t\t\tpx = J(px, n, x, x, px+n);\n\t\t\t\t\t//南\n\t\t\t\t\telse if(h == 3)\n\t\t\t\t\t\tpy = J(py, -n, 1, py-n, 1);\n\t\t\t\t\t//西\n\t\t\t\t\telse\n\t\t\t\t\t\tpx = J(px, -n, 1, px-n, 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//北\n\t\t\t\t\tif(h == 1)\n\t\t\t\t\t\tpy = J(py, -n, 1, py-n, 1);\n\t\t\t\t\t//東\n\t\t\t\t\telse if(h == 2)\n\t\t\t\t\t\tpx = J(px, -n, 1, px-n, 1);\n\t\t\t\t\t//南\n\t\t\t\t\telse if(h == 3)\n\t\t\t\t\t\tpy = J(py, n, y, y, py+n);\n\t\t\t\t\t//西\n\t\t\t\t\telse\n\t\t\t\t\t\tpx = J(px, n, x, x, px+n);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(strcmp(I,\"LEFT\") == 0)\n\t\t\t{\n\t\t\t\tif(h == 1)\n\t\t\t\t\th = 4;\n\t\t\t\telse if(h == 2)\n\t\t\t\t\th = 1;\n\t\t\t\telse if(h == 3)\n\t\t\t\t\th = 2;\n\t\t\t\telse\n\t\t\t\t\th = 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(h == 1)\n\t\t\t\t\th = 2;\n\t\t\t\telse if(h == 2)\n\t\t\t\t\th = 3;\n\t\t\t\telse if(h == 3)\n\t\t\t\t\th = 4;\n\t\t\t\telse\n\t\t\t\t\th = 1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",px,py);\n\t}\n\treturn 0;\n}\n\nint J(int a, int b, int k, int l, int l2)\n{\n\tif(a + b >= k)\n\t\treturn l;\n\telse\n\t\treturn l2;\n}"
  },
  {
    "language": "C",
    "code": "char op[9];w,h,x,y,d;move(r){x+=d-1?d-3?0:-r:r;y+=d?d-2?0:-r:r;x=x<1?1:x>w?w:x;y=y<1?1:y>h?h:y;}main(r){for(;scanf(\"%d%d\",&w,&h)*w;printf(\"%d %d\\n\",x,y))for(x=y=1,d=0;scanf(\"%s\",op),*op!='S';){if(*op=='F'||*op=='B')scanf(\"%d\",&r),move(*op=='F'?r:-r);if(*op=='R')d=(d+1)%4;if(*op=='L')d=(d+3)%4;}}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void){\n\tint m,n;\n\t//int table[100][100];\n\tint x,y,turn;\n\tchar cmd[8];\n\tint step;\n\t\n\twhile(1){\n\t\tscanf(\"%d %d\",&m,&n);\n\t\tif(m==0 && n==0)break;\n\t\t\n\t\tx=1;\n\t\ty=1;\n\t\tturn = 1;\n\t\t\n\t\twhile(1){\n\t\t\t\n\t\t\tscanf(\"%s\", cmd);\n\t\t\tif ( strcmp(cmd , \"FORWARD\") == 0 || (strcmp(cmd, \"BACKWARD\") ==0)) scanf(\"%d\", &step);\n\t\t\t\n\t\t\t//printf(\"aaa\\n\");\n\t\t\t\n\t\t\t//printf(\"%s : %d\", cmd, step);\n\t\t\t\n\t\t\tif(strcmp(cmd, \"STOP\") == 0) break;\n\t\t\tif(strcmp(cmd, \"FORWARD\") == 0){      //**********************************\n\t\t\t\tif(turn == 1) {\n\t\t\t\t\tif(y+step >= n){\n\t\t\t\t\t\ty = n;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty+=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 2) {\n\t\t\t\t\tif(x+step >= m){\n\t\t\t\t\t\tx = m;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx+=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 3){\n\t\t\t\t\tif(y-step <= 1){\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty -= step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 4) {\n\t\t\t\t\tif(x-step <= 1){\n\t\t\t\t\t\tx = 1;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx -= step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (strcmp(cmd, \"BACKWARD\")==0){//******************************\n\t\t\t\tif(turn == 1) {\n\t\t\t\t\tif(y-step <= 1){\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty-=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 2) {\n\t\t\t\t\tif(x-step <= 1){\n\t\t\t\t\t\tx = m;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx-=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 3){\n\t\t\t\t\tif(y+step >= n){\n\t\t\t\t\t\ty = n;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 4) {\n\t\t\t\t\tif(x+step >= m){\n\t\t\t\t\t\tx = m;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (strcmp(cmd, \"RIGHT\") == 0){//******************************\n\t\t\t\tturn++;\n\t\t\t} else if (strcmp(cmd, \"LEFT\") == 0){\n\t\t\t\tturn--;\n\t\t\t}\n\t\t\t//printf(\"%d %d\\n\", x, y);\n\t\t}\n\t\t\n\t\t\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "dx[]={0,1,0,-1},dy[]={1,0,-1,0};\nw,h,x,y,d;\nmove(r){\n\tx+=dx[d]*r,y+=dy[d]*r;\n\tif(x<1)x=1;\n\tif(x>w)x=w;\n\tif(y<1)y=1;\n\tif(y>h)y=h;\n}\nmain(){\n\tfor(;scanf(\"%d%d\",&w,&h)*w;){\n\t\tchar op[9];\n\t\tint r;\n\t\tx=y=1,d=0;\n\t\tfor(;scanf(\"%s\",op),strcmp(op,\"STOP\");){\n\t\t\tif(strcmp(op,\"FORWARD\")==0){\n\t\t\t\tscanf(\"%d\",&r);\n\t\t\t\tmove(r);\n\t\t\t}\n\t\t\tif(strcmp(op,\"BACKWARD\")==0){\n\t\t\t\tscanf(\"%d\",&r);\n\t\t\t\tmove(-r);\n\t\t\t}\n\t\t\tif(strcmp(op,\"RIGHT\")==0){\n\t\t\t\td=(d+1)%4;\n\t\t\t}\n\t\t\tif(strcmp(op,\"LEFT\")==0){\n\t\t\t\td=(d+3)%4;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",x,y);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#define N 100\n#define M 100\n#define CMD 51\n\n#define DEBUG 0\n\nint main(void){\n  char cmd[CMD];\n  char buf[20];\n  int n,m;\n  int i,j,k;\n  int flag;\n\n  int x,y,t;\n\n  while( 1 ){\n    fgets(cmd,CMD,stdin);\n    for( i=0; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )\n      buf[j++]=cmd[i];\n    buf[j]='\\0';\n    sscanf(buf,\"%d \",&m);\n    for( ; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )\n      buf[j++]=cmd[i];\n    sscanf(buf,\"%d \",&n);\n\n    if( m==0 && n==0 )\n      break;\n    if( DEBUG==1 )\n      printf(\"field : %d %d \\n\",m,n);\n\n    x=1;y=1;t=1;\n\n    flag = 1;\n    while( flag>0 ){\n      fgets(cmd,CMD,stdin);\n      if( DEBUG==1 )\n\tprintf(\"%s| %d,%d t=%d\\n\",cmd,x,y,t);\n\n      if( flag==2 ){\n\tif( cmd[0]=='S' )\n\t  flag=0;\n      }else{\n\tswitch( cmd[0] ){\n\tcase 'F':\n\t  for( i=7,j=0;cmd[i]!='\\n';i++)\n\t    buf[j++]=cmd[i];\n\t  buf[j]='\\0';\n\t  sscanf(buf,\"%d \",&k);\n\t  switch(t){\n\t  case 1:\n\t    y+=k;\n\t    if( y>n ){\n\t      y=n;\n\t      flag=2;\n\t    }\n\t    break;\n\t  case 2:\n\t    x+=k;\n\t    if( x>m){\n\t      x=m;\n\t      flag=2;\n\t    }\n\t    break;\n\t  case 3:\n\t    y-=k;\n\t    if( y<1 ){\n\t      y=1;\n\t      flag=2;\n\t    }\n\t    break;\n\t  case 4:\n\t    x-=k;\n\t    if( x<1 ){\n\t      x=1;\n\t      flag=2;\n\t      break;\n\t    }\n\t  }\n\t  break;\n\tcase 'B':\n\t  for( i=8,j=0;cmd[i]!='\\n';i++)\n\t    buf[j++]=cmd[i];\n\t  buf[j]='\\0';\n\t  sscanf(buf,\"%d \",&k);\n\t  switch(t){\n\t  case 1:\n\t    y-=k;\n\t    if( y<1 ){\n\t      y=1;\n\t      flag=2;\n\t    }\n\t    break;\n\t  case 2:\n\t    x-=k;\n\t    if( x<1 ){\n\t      x=1;\n\t      flag=2;\n\t    }\n\t    break;\n\t  case 3:\n\t    y+=k;\n\t    if( y>n ){\n\t      y=n;\n\t      flag=2;\n\t    }\n\t    break;\n\t  case 4:\n\t    x+=k;\n\t    if( x>m ){\n\t      x=m;\n\t      flag=2;\n\t    }\n\t    break;\n\t  }\n\t  break;\n\tcase 'R':\n\t  t++;\n\t  if( t==5 )t=0;\n\t  break;\n\tcase 'L':\n\t  t--;\n\t  if( t==0 )t=4;\n\t  break;\n\tcase 'S':\n\t  flag=0;\n\n\t  break;\n\t}\n      }\n    }\n    printf(\"%d %d\\n\",x,y);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "import java.util.*;class Main{public static void main(String[]z){Scanner s=new Scanner(System.in);int[][]ds={{0,1},{1,0},{0,-1},{-1,0}};for(int[]n={0,0};(n[0]=s.nextInt())>0;){n[1]=s.nextInt();int[]p={1,1};int d=0,i,x;for(String y;!(y=s.next()).equals(\"STOP\");System.out.println(p[0]+\" \"+p[1])){if(y.endsWith(\"D\"))for(i=2,x=s.nextInt();i-->0;)p[i]=Math.min(n[i],Math.max(1,p[i]+ds[d][i]*x*(y.charAt(0)==70?1:-1)));if(y.charAt(0)==76)d=(d+3)%4;if(y.charAt(0)==82)d=(d+1)%4;}}}}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n\n\n\n\nint main(void){\n&#160; struct place{\n&#160; &#160; char x,y,dir;\n&#160; } now;\n&#160; unsigned int m,n;\n&#160; int k;\n&#160; char input[32],command[16];\n\n\n\n\n&#160; while(scanf(\"%u%u%*c\",&m,&n) && m && n){\n&#160; &#160; now=(struct place){1,1,0};\n&#160; &#160;&#160;\n&#160; &#160; while(scanf(\"%31[^\\n]%*c\",input) && strcmp(input,\"STOP\")){\n&#160; &#160; &#160; if(!strcmp(input,\"RIGHT\")){\n\tnow.dir+=1;\n\tnow.dir%=4;\n\tcontinue;\n&#160; &#160; &#160; }else if(!strcmp(input,\"LEFT\")){\n\tnow.dir+=3;\n\tnow.dir%=4;\n\tcontinue;\n&#160; &#160; &#160; }\n&#160; &#160; &#160; sscanf(input,\"%15s%d\",command,&k);\n&#160; &#160; &#160; if(!strcmp(command,\"BACKWARD\")) k*=-1;\n&#160; &#160; &#160; if(now.dir%2){\n\tk*=(now.dir==3)?-1:1;\n\tnow.x+=k;\n\tif(now.x<1) now.x=1;\n\telse if(now.x>m) now.x=m;\n&#160; &#160; &#160; }else{\n\tk*=(now.dir==2)?-1:1;\n\tnow.y+=k;\n\tif(now.y<1) now.y=1;\n\telse if(now.y>n) now.y=n;\n&#160; &#160; &#160; }\n&#160; &#160; }\n&#160; &#160; printf(\"%d %d\\n\",now.x,now.y);\n&#160; }\n&#160; return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\nint main(void)\n{\n\tint degy[4]={1,0,-1,0},degx[4]={0,1,0,-1};\n\tint i,j,m,n,x,y,deg;\n\tchar s[5][9]={\"FORWARD\",\"BACKWARD\",\"RIGHT\",\"LEFT\",\"STOP\"};\n\tint suu;\n\tchar buf[20];\n\t\n\twhile(1)\t{\n\t\tscanf(\"%d %d\",&m,&n);\n\t\tif(m==0 && n==0)\tbreak;\n\t\tx=1;\ty=1;\tdeg=0;\n\t\twhile(1)\t{\n\t\t\tscanf(\"%s\",buf);\n\t\t\tif(strcmp(buf,s[0])==0)\t{\n\t\t\t\tscanf(\"%d\",&suu);\n\t\t\t\tx=x+degx[deg]*suu;\n\t\t\t\tif(x>m)\tx=m;\n\t\t\t\tif(x<1)\tx=1;\n\t\t\t\ty=y+degy[deg]*suu;\n\t\t\t\tif(y>n)\ty=n;\n\t\t\t\tif(y<1)\ty=1;\n\t\t\t}\n\t\t\telse if(strcmp(buf,s[1])==0)\t{\n\t\t\t\tscanf(\"%d\",&suu);\n\t\t\t\tx=x-degx[deg]*suu;\n\t\t\t\tif(x>m)\tx=m;\n\t\t\t\tif(x<1)\tx=1;\n\t\t\t\ty=y-degy[deg]*suu;\n\t\t\t\tif(y>n)\ty=n;\n\t\t\t\tif(y<1)\ty=1;\n\t\t\t}\n\t\t\telse if(strcmp(buf,s[2])==0)\t{\n\t\t\t\tdeg=(deg+1)%4;\n\t\t\t}\n\t\t\telse if(strcmp(buf,s[3])==0)\t{\n\t\t\t\tdeg=(deg+3)%4;\n\t\t\t}\t\t\t\n\t\t\telse if(strcmp(buf,s[4])==0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",x,y);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "// Aizu 1104: Where's Your Robot?\n// 2017.9.12 bal4u@uu\n\n#include <stdio.h>\n\n#define N 0\n#define E 1\n#define S 2\n#define W 3\nint r90[4] = { E, S, W, N };\nint l90[4] = { W, N, E, S };\nint f[4][2] = { {0,1},{1,0},{0,-1},{-1,0} };\nint b[4][2] = { {0,-1},{-1,0},{0,1},{1,0} };\n\nint main()\n{\n\tint w, h, r, c, d, r2, c2, k;\n\tchar buf[20], cmd;\n\n\twhile (scanf(\"%d%d\", &w, &h) && w) {\n\t\tr = 1, c = 1, d = N;\n\t\twhile (1) {\n\t\t\tscanf(\"%s\", buf), cmd = *buf; \n\t\t\tif      (cmd == 'S') break;\n\t\t\telse if (cmd == 'R') d = r90[d];\n\t\t\telse if (cmd == 'L') d = l90[d];\n\t\t\telse { scanf(\"%d\", &k);\n\t\t\t\tif (cmd == 'F') r2 = r + k*f[d][1], c2 = c + k*f[d][0];\n\t\t\t\telse\t\t\tr2 = r + k*b[d][1], c2 = c + k*b[d][0];\n\t\t\t\tif (r2 < 1) r2 = 1; if (r2 > h) r2 = h;\n\t\t\t\tif (c2 < 1) c2 = 1; if (c2 > w) c2 = w;\n\t\t\t\tr = r2, c = c2;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\", c, r);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void)\n{\n    int x,y;\n\n    while(1)\n    {\n        scanf(\"%d %d\",&x,&y);\n        //printf(\"x=%d,y=%d\\n\",x,y);\n\n        if(x==0 && y==0)\n        {\n            break;\n        }\n\n        int field[102][102]={};\n        int robot[2][2]={};     //robot[0][0]=x;robot[0][1]=y;robot[1][0]=??????\n\n        int k,j;\n\n        for(k=0;k<x+2;k++)\n        {\n            for(j=0;j<y+2;j++)\n            {\n                field[k][j]=0;\n            }\n        }\n\n        for(k=1;k<=x;k++)\n        {\n            for(j=1;j<=y;j++)\n            {\n                field[k][j]=1;\n            }\n        }\n\n        /*for(k=y+1;k>=0;k--)\n        {\n            for(j=x+1;j>=0;j--)\n            {\n                printf(\"%d \",field[j][k]);\n            }\n            printf(\"\\n\");\n        }*/\n\n        robot[0][0]=1;\n        robot[0][1]=1;\n        robot[1][0]=3;\n\n        while(1)\n        {\n            char command[20]={};\n            int distance,check=0;\n\n            scanf(\"%s*c\",command);\n            //printf(\"command=%s,distance=%d\\n\",command,distance);\n\n            switch(command[0])\n            {\n                int i;\n                case 'F':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 0:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 2:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    break;\n                case 'B':\n                    scanf(\"%d%*c\",&distance);\n                    check=0;\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 2:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 0:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    break;\n                case 'R':\n                    scanf(\"%d%*c\",&distance);\n                    robot[1][0]=(robot[1][0]+1)%4;\n                    break;\n                case 'L':\n                    scanf(\"%d%*c\",&distance);\n                    robot[1][0]=(robot[1][0]+3)%4;\n                    break;\n                case 'S':\n                    check=1;\n                    break;\n                default:\n                    break;\n            }\n\n            if(check==1)\n            {\n                break;\n            }\n        }\n        printf(\"%d %d\\n\",robot[0][0],robot[0][1]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define max(a,b) ( ((a)>(b)) ? (a) : (b) )\n#define min(a,b) ( ((a)<(b)) ? (a) : (b) )\n\nint right[4] = {1,2,3,0};\nint left[4]  = {3,0,1,2};\n\nint main(){\n\tint x, y, a, b, d, l, sign;\n\tchar s[50];\n\n\tloop:\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(!x&&!y)goto end;\n\t\ta=b=1;d=0;\n\t\twhile(1){\n\t\t\tscanf(\"%s\",s);\n\t\t\tif(!strcmp(s,\"STOP\")){\n\t\t\t\tprintf(\"%d %d\\n\",a,b);\n\t\t\t\tgoto loop;\n\t\t\t}\n\t\t\tif(!strcmp(s,\"RIGHT\")){d=right[d];continue;}\n\t\t\tif(!strcmp(s,\"LEFT\")) {d=left[d]; continue;}\n\n\t\t\tscanf(\"%d\",&l);\n\t\t\tif(!strcmp(s,\"FORWARD\")) sign=1;\n\t\t\tif(!strcmp(s,\"BACKWARD\"))sign=-1;\n\t\t\tswitch(d){\n\t\t\t\tcase 0: b+=sign*l;break;\n\t\t\t\tcase 1: a+=sign*l;break;\n\t\t\t\tcase 2: b-=sign*l;break;\n\t\t\t\tcase 3: a-=sign*l;break;\n\t\t\t}\n\t\t\ta=max(a,1);a=min(a,x);\n\t\t\tb=max(b,1);b=min(b,y);\n\t\t}\n\tgoto loop;\n\n\tend:\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n  int rx,ry,dir,inc,dx,dy;\n  int w,h;\n  int dic[4][2]={{1,0},{0,1},{-1,0},{0,-1}};\n  char str[128];\n  do{\n    fgets(str,128,stdin);\n    sscanf(str,\"%d %d\",&w,&h);\n    if(w==0&&h==0) break;\n    rx=ry=dir=0;\n    do{\n      fgets(str,128,stdin);\n      if(str[0]=='S') break;\n      if(str[0]=='F'||str[0]=='B'){\n\tinc=atoi(strchr(str,' ')+1);\n\tdx=dic[str[0]=='F'?dir:(dir+2)%4][0]*inc;\n\tdy=dic[str[0]=='F'?dir:(dir+2)%4][1]*inc;\n\tif(dx+rx<h&&dx+rx>-1){\n\t  rx+=dx;\n\t}else{\n\t  if(dx+rx>=h) rx=h-1;\n\t  else rx=0;\n\t}\n\tif(dy+ry<w&&dy+ry>-1){\n\t  ry+=dy;\n\t}else{\n\t  if(dy+ry>=w) ry=w-1;\n\t  else ry=0;\n\t}\n      }else if(str[0]=='R'){\n\tdir=(dir+1)%4;\n      }else if(str[0]=='L'){\n\tdir=dir-1>-1?dir-1:3;\n      }\n    }while(1);\n    printf(\"%d %d\\n\",ry+1,rx+1);\n  }while(1);\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint x, y;\nint m, n;\nint dirx, diry;\n\nvoid process_command(char *buf);\nvoid forward(int k);\nvoid backward(int k);\nvoid right(void);\nvoid left(void);\n\nint main()\n{\n    char buf[64];\n    while(1){\n        fgets(buf, sizeof(buf), stdin);\n        sscanf(buf, \"%d %d\", &m, &n);\n        if(m == 0) break;\n        x = 1; y = 1;\n        dirx = 0; diry = 1;\n        while(strstr(fgets(buf, sizeof(buf), stdin), \"STOP\") == NULL){\n            process_command(buf);\n        }\n        printf(\"%d %d\\n\", x, y);\n    }\n    return 0;\n}\n\nvoid process_command(char *buf)\n{\n    char *p;\n\n    if((p = strstr(buf, \"FORWARD\")) != NULL)\n        forward(atoi(p+strlen(\"FORWARD\")));\n    else if((p = strstr(buf, \"BACKWARD\")) != NULL)\n        backward(atoi(p+strlen(\"BACKWARD\")));\n    else if(strstr(buf, \"RIGHT\") != NULL)\n        right();\n    else if(strstr(buf, \"LEFT\") != NULL)\n        left();\n}\n\nvoid forward(int k)\n{\n    x += dirx * k;\n    y += diry * k;\n    if(x < 1) x = 1;\n    else if(x > m) x = m;\n    else if(y < 1) y = 1;\n    else if(y > n) y = n;\n}\n\nvoid backward(int k)\n{\n    x -= dirx * k;\n    y -= diry * k;\n    if(x < 1) x = 1;\n    else if(x > m) x = m;\n    else if(y < 1) y = 1;\n    else if(y > n) y = n;\n}\n\nvoid left()\n{\n    int tmp = diry;\n    diry = dirx;\n    dirx = -tmp;\n}\n\nvoid right()\n{\n    int tmp = dirx;\n    dirx = diry;\n    diry = -tmp;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint m, n, d;\nint x, y;\n\nvoid idou(int);\n\nmain(){\n  int k, p;\n  char a;\n\n  while(1){\n    scanf(\"%d %d\", &m, &n);\n    if(m==0 && n==0) break;\n    getchar();\n    \n    x=y=d=0;\n\n    while(1){\n      scanf(\"%c\", &a);\n      if(a=='F') p=1;\n      else if(a=='B') p=2;\n      else if(a=='R') p=3;\n      else if(a=='L') p=4;\n      else if(a=='S') p=5;\n\n      while(1){\n\tscanf(\"%c\", &a);\n\tif(a==' ' || a=='\\n') break;\n      }\n      \n      if(p==1 || p==2){\n\tscanf(\"%d\", &k);\n\tgetchar();\n      }\n      \n      if(p==1) idou(k);\n      else if(p==2) idou(-k);\n      else if(p==3){\n\td++;\n\tif(d==4) d=0;\n      }\n      else if(p==4){\n\td--;\n\tif(d==-1) d=3;\n      }\n      else if(p==5){\n\tprintf(\"%d %d\\n\", x+1, y+1);\n\tbreak;\n      }\n    }\n  }\n  return 0;\n}\n\n\nvoid idou(int k){\n\n\n  if(d==0){\n    y=y+k;\n    if(y>=n) y=n-1;\n    if(y<0) y=0;\n  }\n  else if(d==1){\n    x=x+k;\n    if(x>=m) x=m-1;\n    if(x<0) x=0;\n  }\n  else if(d==2){\n    y=y-k;\n    if(y>=n) y=n-1;\n    if(y<0) y=0;\n  }\n  else if(d==3){\n    x=x-k;\n    if(x>=m) x=m-1;\n    if(x<0) x=0;\n  }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#define N 100\n#define M 100\n#define CMD 51\n\n#define DEBUG 0\n\nint main(void){\n  char cmd[CMD];\n  char buf[20];\n  int n,m;\n  int i,j,k;\n  int flag;\n\n  int x,y,t;\n\n  while( 1 ){\n    fgets(cmd,CMD,stdin);\n    for( i=0; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )      buf[j++]=cmd[i];\n    buf[j]='\\0';\n    sscanf(buf,\"%d \",&m);\n    for( ; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )      buf[j++]=cmd[i];\n    sscanf(buf,\"%d \",&n);\n\n    if( m==0 && n==0 )  break;\n    if( DEBUG==1 )  printf(\"field : %d %d \\n\",m,n);\n\n    x=1;y=1;t=1;\n\n    flag = 1;\n    while( flag>0 ){\n      fgets(cmd,CMD,stdin);\n      if( DEBUG==1 )\n\tprintf(\"%s| %d,%d t=%d\\n\",cmd,x,y,t);\n\n\tswitch( cmd[0] ){\n\tcase 'F':\n\t  for( i=7,j=0;cmd[i]!='\\n';i++)\n\t    buf[j++]=cmd[i];\n\t  buf[j]='\\0';\n\t  sscanf(buf,\"%d \",&k);\n\t  switch(t){\n\t  case 1:   y+=k;   if( y>n ){  y=n;flag=2;  }\t    break;\n\t  case 2:   x+=k;   if( x>m ){  x=m;flag=2;  }\t    break;\n\t  case 3:   y-=k;   if( y<1 ){  y=1;flag=2;  }\t    break;\n\t  case 4:   x-=k;   if( x<1 ){  x=1;flag=2;  }      break;\n\t  }\n\t  break;\n\tcase 'B':\n\t  for( i=8,j=0;cmd[i]!='\\n';i++)    buf[j++]=cmd[i];\n\t  buf[j]='\\0';\n\t  sscanf(buf,\"%d \",&k);\n\t  switch(t){\n\t  case 1:   y-=k;   if( y<1 ){  y=1;flag=2;   }\t    break;\n\t  case 2:   x-=k;   if( x<1 ){  x=1;flag=2;   }\t    break;\n\t  case 3:   y+=k;   if( y>n ){  y=n;flag=2;   }\t    break;\n\t  case 4:   x+=k;   if( x>m ){  x=m;flag=2;   }\t    break;\n\t  }\n\t  break;\n\tcase 'R':\n\t  t++;\t  if( t==5 )t=0;\n\t  break;\n\tcase 'L':\n\t  t--;\t  if( t==0 )t=4;\n\t  break;\n\tcase 'S':\n\t  flag=0;\n\t  break;\n\t}\n    }\n    printf(\"%d %d\\n\",x,y);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n  int rx,ry,dir,inc,dx,dy;\n  int w,h;\n  int dic[4][2]={{1,0},{0,1},{-1,0},{0,-1}};\n  char str[128];\n  do{\n    fgets(str,128,stdin);\n    sscanf(str,\"%d %d\",&w,&h);\n    if(w==0&&h==0) break;\n    rx=ry=dir=0;\n    do{\n      fgets(str,128,stdin);\n      if(str[0]=='S') break;\n      if(str[0]=='F'){\n\tinc=atoi(strchr(str,' ')+1);\n\tdx=dic[dir][0]*inc;\n\tdy=dic[dir][1]*inc;\n\tif(dx+rx<h&&dx+rx>-1){\n\t  rx+=dx;\n\t}else{\n\t  if(dx+rx>=h) rx=h-1;\n\t  else rx=0;\n\t}\n\tif(dy+ry<w&&dy+ry>-1){\n\t  ry+=dy;\n\t}else{\n\t  if(dy+ry>=w) ry=w-1;\n\t  else ry=0;\n\t}\n      }else if(str[0]=='B'){\n\tinc=atoi(strchr(str,' ')+1);\n\tdx=dic[(dir+2)%4][0]*inc;\n\tdy=dic[(dir+2)%4][1]*inc;\n\tif(dx+rx<h&&dx+rx>-1){\n\t  rx+=dx;\n\t}else{\n\t  if(dx+rx>=h) rx=h-1;\n\t  else rx=0;\n\t}\n\tif(dy+ry<w&&dy+ry>-1){\n\t  ry+=dy;\n\t}else{\n\t  if(dx+rx>=h) rx=h-1;\n\t  else rx=0;\n\t}\n      }else if(str[0]=='R'){\n\tdir=(dir+1)%4;\n      }else if(str[0]=='L'){\n\tdir=dir-1>-1?dir-1:3;\n      }\n    }while(1);\n    printf(\"%d %d\\n\",ry+1,rx+1);\n  }while(1);\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n  int x,y,d,dx,dy,mx,my;\n  char str[16];\n\n  while(1){\n    scanf(\"%d %d\",&mx,&my);\n    if(mx == 0 && my == 0){\n      break;\n    }\n\n    x = 1;\n    y = 1;\n    dx = 0;\n    dy = 1;\n    while(1){\n      scanf(\"%s\",str);\n      if(!strcmp(str,\"FORWARD\")){\n\tscanf(\"%d\",&d);\n\tx += d*dx;\n\ty += d*dy;\n\tif(x > mx){\n\t  x = mx;\n\t}\n\tif(y > my){\n\t  y = my;\n\t}\n      }else if(!strcmp(str,\"BACKWARD\")){\n\tscanf(\"%d\",&d);\n\tx -= d*dx;\n\ty -= d*dy;\n\tif(x < 1){\n\t  x = 1;\n\t}\n\tif(y < 1){\n\t  y = 1;\n\t}\n      }else if(!strcmp(str,\"RIGHT\")){\n\tdx = dy;\n\tdy -= 1;\n\tif(dy == -2){\n\t  dy = 0;\n\t}\n      }else if(!strcmp(str,\"LEFT\")){\n\tdy = dx;\n\tdx -= 1;\n\tif(dx == -2){\n\t  dx = 0;\n\t}\n      }else if(!strcmp(str,\"STOP\")){\n\tbreak;\n      }\n    }\n\n    printf(\"%d %d\\n\",x,y);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "\n#include<stdio.h>\n\nint main(void){\n  unsigned int n,m,x,y;\n  char Order[16];\n  int ret,Dir=0;//ROBO's DIRECTION\n  \n  while(1){\n    Dir=0;//heading to North\n    Order[0]='0';\n    x=1;\n    y=1;\n\n    //printf(\"Please type Field Size; x(to East),y(to North) in order\\n\");\n    scanf(\"%u %u%*c\",&m,&n);\n    ret=feof(stdin);\n    if(ret) return 0;\n\n    for(;(strcmp(Order,\"STOP\"));){\n      scanf(\"%15s%*c\",Order);\n      if(!strcmp(Order,\"LEFT\")){\n\tDir++;\n\tDir %= 4;\n      }else if(!strcmp(Order,\"RIGHT\")){\n\tDir += 3;\n\tDir %= 4;\n      }else if(!strcmp(Order,\"FORWARD\")){\n\tif(Dir==0) if( y<n ) y++;\n\tif(Dir==1) if( x>1 ) x--;\n\tif(Dir==2) if( y>1 ) y--;\n\tif(Dir==3) if( x<m ) x++;\n      }else if(!strcmp(Order,\"BACKWARD\")){\n\tif(Dir==2) if( y<n ) y++;\n\tif(Dir==3) if( x>1 ) x--;\n\tif(Dir==0) if( y>1 ) y--;\n\tif(Dir==1) if( x<m ) x++;\n      }else if(!strcmp(Order,\"STOP\")){\n\t  printf(\"%u %u\\n\",x,y);\n      }\n    }\n    // printf(\"Type 'Ctr + d' if you want exil; or else type any other key...\\n\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\n/* 各方向を向いているときの移動ベクトル (北, 西, 南, 東) */\nint VECTOR[4][2] = { {0, 1}, {-1, 0}, {0, -1}, {1, 0} };\n\nint w, h; /* 盤面の大きさ */\nint x, y, a; /* ロボットの座標と向き */\n\n/* 指定した移動量だけロボットを進める */\nvoid move(int v) {\n\tx += VECTOR[a][0] * v;\n\ty += VECTOR[a][1] * v;\n\t/* 壁との衝突判定 */\n\tif (x < 1) x = 1; else if (x > w) x = w;\n\tif (y < 1) y = 1; else if (y > h) y = h;\n}\n\n/* 指定した角度だけロボットを回転させる ただし角度は90度を1とし左回りを正とする */\nvoid rotate(int v) {\n\ta += v;\n\twhile (a < 0) a += 4;\n\twhile (a > 3) a -= 4;\n}\n\nint main(void) {\n\tchar s[10];\n\tint k;\n\n\t/* データセット毎の処理 */\n\twhile (scanf(\"%d%d\", &w, &h) == 2 && w > 0 && h > 0) {\n\t\t/* ロボットの状態を初期化する */\n\t\tx = 1;\n\t\ty = 1;\n\t\ta = 0;\n\t\t/* 命令を入力する */\n\t\twhile (scanf(\"%s\", s) == 1) {\n\t\t\t/* 命令にそった処理 */\n\t\t\tif (strcmp(s, \"FORWARD\") == 0) {\n\t\t\t\tscanf(\"%d\", &k);\n\t\t\t\tmove(k);\n\t\t\t} else if (strcmp(s, \"BACKWARD\") == 0) {\n\t\t\t\tscanf(\"%d\", &k);\n\t\t\t\tmove(-k);\n\t\t\t} else if (strcmp(s, \"RIGHT\") == 0) {\n\t\t\t\trotate(-1);\n\t\t\t} else if (strcmp(s, \"LEFT\") == 0) {\n\t\t\t\trotate(1);\n\t\t\t} else if (strcmp(s, \"STOP\") == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%d %d\\n\", x, y); /* ロボットの座標を出力する */\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main(void){\n\tint m,n;\n\t//int table[100][100];\n\tint x,y,turn;\n\tchar cmd[8];\n\tint step;\n\t\n\twhile(1){\n\t\tscanf(\"%d %d\",&m,&n);\n\t\tif(m==0 && n==0)break;\n\t\t\n\t\tx=1;\n\t\ty=1;\n\t\tturn = 1;\n\t\t\n\t\twhile(1){\n\t\t\t\n\t\t\tscanf(\"%s\", cmd);\n\t\t\tif ( strcmp(cmd , \"FORWARD\") == 0 || (strcmp(cmd, \"BACKWARD\") ==0)) scanf(\"%d\", &step);\n\t\t\t\n\t\t\t//printf(\"aaa\\n\");\n\t\t\t\n\t\t\t//printf(\"%s : %d\", cmd, step);\n\t\t\t\n\t\t\tif(strcmp(cmd, \"STOP\") == 0) break;\n\t\t\tif(strcmp(cmd, \"FORWARD\") == 0){      //**********************************\n\t\t\t\tif(turn == 1) {\n\t\t\t\t\tif(y+step > n){\n\t\t\t\t\t\ty = n;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty+=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 2) {\n\t\t\t\t\tif(x+step > m){\n\t\t\t\t\t\tx = m;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx+=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 3){\n\t\t\t\t\tif(y-step < 1){\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty -= step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 4) {\n\t\t\t\t\tif(x-step < 1){\n\t\t\t\t\t\tx = 1;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx -= step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (strcmp(cmd, \"BACKWARD\")==0){//******************************\n\t\t\t\tif(turn == 1) {\n\t\t\t\t\tif(y-step < 1){\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty-=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 2) {\n\t\t\t\t\tif(x-step < 1){\n\t\t\t\t\t\tx = m;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx-=step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 3){\n\t\t\t\t\tif(y+step > n){\n\t\t\t\t\t\ty = n;\n\t\t\t\t\t}else {\n\t\t\t\t\t\ty += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(turn == 4) {\n\t\t\t\t\tif(x+step > m){\n\t\t\t\t\t\tx = m;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tx += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (strcmp(cmd, \"RIGHT\") == 0){//******************************\n\t\t\t\tturn++;\n\t\t\t} else if (strcmp(cmd, \"LEFT\") == 0){\n\t\t\t\tturn--;\n\t\t\t}\n\t\t\t//printf(\"%d %d\\n\", x, y);\n\t\t}\n\t\t\n\t\t\n\t\tprintf(\"%d %d\\n\", x, y);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nstruct coordinate{\n  int x;\n  int y;\n};\n\nint n,m,dir;\nstruct coordinate walk(int d,int num,int n,int m,struct coordinate p);\n\nint main(void){\n  int i,j,go;\n  char order[16];\n  struct coordinate point;\n  while(scanf(\"%d %d\",&m,&n)&&(n!=0||m!=0)){\n    point.x=point.y=1;\n    dir=0;\n    while(scanf(\"%s\",order)&&order[0]!='S'){\n      scanf(\"%d\",&go);\n      if(order[0]=='B'){\n\tdir=(dir+2)%4;\n\tpoint=walk(dir,go,n,m,point);\n\tdir=(dir+2)%4;\n      }else if(order[0]=='F') point=walk(dir,go,n,m,point);\n      else if(order[0]=='R') dir=(dir+1)%4;\n      else if(order[0]=='L') dir=(dir+3)%4;\n    }\n    printf(\"%d %d\\n\",point.x,point.y);\n  }\n  return 0;\n}\n\nstruct coordinate walk(int d,int num,int n,int m,struct coordinate p){\n  switch(d){\n  case 0:\n    p.y+=num;\n    break;\n  case 1:\n    p.x+=num;\n    break;\n  case 2:\n    p.y-=num;\n    break;\n  case 3:\n    p.x-=num;\n    break;\n  }\n  if(p.x>m) p.x=m;\n  else if(p.x<1) p.x=1;\n  if(p.y>n) p.y=n;\n  else if(p.y<1) p.y=1;\n  return p;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nvoid move(int dir, int* i, int* j, int k);\nvoid forward(int dir, int* i, int* j, int k);\nvoid backward(int dir, int* i, int* j, int k);\n\nvoid turn(int turn, int* currentDir);\nvoid right(int* currentDir);\nvoid left(int* currentDir);\n\t\nint main(void){\n\t\n\tint m, n,\n\t\ti, j, dir,\n\t\tk;\n\tchar com[9];\n\t\n\t// BEGIN OF BOARD\n\twhile(1){\n\t\t\n\t\t/*\n\t\t*\tdir\n\t\t*\t0:north, 1:east, 2:south, 3:west\n\t\t*\n\t\t*/\n\t\ti = 0; j = 0; dir = 0;\n\t\tscanf(\"%d\", &m);\n\t\tscanf(\"%d\", &n);\n\t\tif(m==0 && n==0) break;\n\t\t\n\t\t// BEGIN OF COMMAND\n\t\twhile(1){\n\t\t\t\n\t\t\tscanf(\"%s\", com);\n\t\t\t\n\t\t\tif(com[0] == 'S') break;\n\t\t\tif(com[0] == 'F'){\n\t\t\t\tscanf(\"%d\", &k);\n\t\t\t\tforward(dir, &i, &j, k);\n\t\t\t}\n\t\t\tif(com[0] == 'B'){\n\t\t\t\tscanf(\"%d\", &k);\n\t\t\t\tbackward(dir, &i, &j, k);\n\t\t\t}\n\t\t\tif(com[0] == 'R'){\n\t\t\t\tright(&dir);\n\t\t\t}\n\t\t\tif(com[0] == 'L'){\n\t\t\t\tleft(&dir);\n\t\t\t}\n\t\t\t\n\t\t\tif(i >= m) i = m-1;\n\t\t\tif(j >= n) j = n-1;\n\t\t\tif(i < 0) i = 0;\n\t\t\tif(j < 0) j = 0;\n\t\t\t\n\t\t}\n\t\t// END OF COMMAND\n\t\t\n\t\tprintf(\"%d %d\\n\", i+1, j+1);\n\t\t\n\t}\n\t// END OF BOARD\n\t\n\treturn 0;\n}\n\nvoid forward(int dir, int* i, int* j, int k){\n\tmove(dir, i, j, k);\n}\n\nvoid backward(int dir, int* i, int* j, int k){\n\tmove(dir, i, j, -k);\n}\n\nvoid move(int dir, int* i, int* j, int k){\n\tswitch(dir){\n\tcase 0:\n\t\t*j += k;\n\t\tbreak;\n\tcase 1:\n\t\t*i += k;\n\t\tbreak;\n\tcase 2:\n\t\t*j -= k;\n\t\tbreak;\n\tcase 3:\n\t\t*i -= k;\n\t\tbreak;\n\t}\n}\n\nvoid turn(int turn, int* currentDir){\n\t*currentDir = (*currentDir + turn) % 4;\n\tif(*currentDir < 0) * currentDir += 4;\n}\n\nvoid right(int* currentDir){\n\tturn(1, currentDir);\n}\n\nvoid left(int* currentDir){\n\tturn(-1, currentDir);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#define M 1000000\nint main(){\n  int X[]={0,1,0,-1};\n  int Y[]={1,0,-1,0};\n  int w,h,d,a,x,y;\n  char s;\n  while(scanf(\"%d %d\",&w,&h),w||h){\n    d=0;\n    x=y=1;\n    while(scanf(\" %c%*s\",&s)){\n      if(s=='F'){\n\tscanf(\"%d\",&a);\n\tx+=X[d]*a;\n\ty+=Y[d]*a;\n      }\n      if(s=='B'){\n\tscanf(\"%d\",&a);\n\tx-=X[d]*a;\n\ty-=Y[d]*a;\n      }\n      if(s=='L')d--;\n      if(s=='R')d++;\n      if(s=='S'){\n\tprintf(\"%d %d\\n\",x,y);\n\tbreak;\n      }\n      d+=4;\n      d%=4;\n      if(x<1)x=1;\n      if(w<x)x=w;\n      if(y<1)y=1;\n      if(h<y)y=h;\n    }\n  }\n  return 0;\n}\n\n      "
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n\nint main(){\n\tint x,y;\n\tint ansx,ansy,ansv;\n\tchar str[20];\n\tint vector[4][2]={{0,1},{1,0},{0,-1},{-1,0}};\n\twhile(1){\n\t\tansx=0,ansy=0,ansv=0;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(x==0&&y==0){\n\t\t\tbreak;\n\t\t}\n\t\twhile(1){\n\t\t\tchar cmd[20];\n\t\t\tint b,c=0;\n\t\t\tint value=0;\n\t\t\t\n\t\t\twhile(b=getchar()){\n\t\t\t\tif(b=='\\n'){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr[c]=(char)b;\n\t\t\t\tc++;\n\t\t\t}\n\t\t\tstr[c]='\\0';\n\t\t\t\n\t\t\tif(strcmp(\"STOP\",str)==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(strcmp(\"RIGHT\",str)==0){\n\t\t\t\tansv=(ansv+1)%4;\n\t\t\t}\n\t\t\telse if(strcmp(\"LEFT\",str)==0){\n\t\t\t\tansv=(ansv+3)%4;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsscanf(str,\"%s %d\",cmd,&value);\n\t\t\t\tif(strcmp(\"FORWARD\",cmd)==0){\n\t\t\t\t\tprintf(\"F v=%d\\n\",value);\n\t\t\t\t\tansx+=vector[ansv][0]*value;\n\t\t\t\t\tansy+=vector[ansv][1]*value;\n\t\t\t\t}\n\t\t\t\telse if(strcmp(\"BACKWARD\",cmd)==0){\n\t\t\t\t\tprintf(\"B v=%d\\n\",value);\n\t\t\t\t\tansx-=vector[ansv][0]*value;\n\t\t\t\t\tansy-=vector[ansv][1]*value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\",ansx,ansy);\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void)\n{\n    int x,y;\n\n    while(1)\n    {\n        scanf(\"%d %d\",&x,&y);\n        //printf(\"x=%d,y=%d\\n\",x,y);\n\n        if(x==0 && y==0)\n        {\n            break;\n        }\n\n        int field[102][102]={};\n        int robot[2][2]={};     //robot[0][0]=x;robot[0][1]=y;robot[1][0]=??????\n\n        int k,j;\n\n        for(k=0;k<x+2;k++)\n        {\n            for(j=0;j<y+2;j++)\n            {\n                field[k][j]=0;\n            }\n        }\n\n        for(k=1;k<=x;k++)\n        {\n            for(j=1;j<=y;j++)\n            {\n                field[k][j]=1;\n            }\n        }\n\n        /*for(k=y+1;k>=0;k--)\n        {\n            for(j=x+1;j>=0;j--)\n            {\n                printf(\"%d \",field[j][k]);\n            }\n            printf(\"\\n\");\n        }*/\n\n        robot[0][0]=1;\n        robot[0][1]=1;\n        robot[1][0]=3;\n\n        while(1)\n        {\n            char command[20]={};\n            int escape=0;\n\n            scanf(\"%s*c\",command);\n            //printf(\"command=%s,distance=%d\\n\",command,distance);\n            int i,check=0,distance;\n            switch(command[0])\n            {\n                case 'F':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        printf(\"check=%d,\",check);\n                        switch(robot[1][0])\n                        {\n                            case 0:\n                                if(field[robot[0][0]+1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]-1]==1)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 2:\n                                if(field[robot[0][0]-1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]+1]==1)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'B':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 2:\n                                if(field[robot[0][0]+1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]-1]==1)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 0:\n                                if(field[robot[0][0]-1][robot[0][1]]==1)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]+1]==1)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'R':\n                    robot[1][0]=(robot[1][0]+1)%4;\n                    break;\n                case 'L':\n                    robot[1][0]=(robot[1][0]+3)%4;\n                    break;\n                case 'S':\n                    escape=1;\n                    break;\n                default:\n                    break;\n            }\n\n            if(escape==1)\n            {\n                break;\n            }\n        }\n        printf(\"%d %d\\n\",robot[0][0],robot[0][1]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint dir[4][2]={{-1,0},{0,1},{1,0},{0,-1}};\nint w,h;\n\nvoid goStraight(int *x,int *y,int d,int dist){\n  *x += dir[d][1]*dist;\n  *y += dir[d][0]*dist;\n\n  if(*x<0) *x=0;\n  if(*x>=w) *x=w-1;\n  if(*y<0) *y=0;\n  if(*y>=h) *y=h-1;\n}\n\nint changeDir(int d,int LR){\n  if(LR==0){\n    d--;\n    if(d<0) d=3;\n  }\n  else{\n    d++;\n    if(d>3) d=0;\n  }\n  return d;\n}\n\nint main(void){\n  int x,y,d,dist;\n  char op[9];\n\n  while(1){\n    scanf(\"%d%d\",&w,&h);\n    if(!w && !h) break;\n\n    x = y = 0;\n    d = 2;\n    while(1){\n      scanf(\"%s\",op);\n      if(!strcmp(op,\"STOP\")) break;\n\n      if(!strcmp(op,\"FORWARD\")){\n\tscanf(\"%d\",&dist);\n\tgoStraight(&x,&y,d,dist);\n      }\n      else if(!strcmp(op,\"BACKWARD\")){\n\tscanf(\"%d\",&dist);\n\tgoStraight(&x,&y,d,-dist);\n      }\n      else if(!strcmp(op,\"RIGHT\")){\n\td = changeDir(d,0);\n      }\n      else{\n\td = changeDir(d,1);\n      }\n    }\n    printf(\"%d %d\\n\",x+1,y+1);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n/** Application main entry point. */\nint main (\n  int     argc,\n  char  * argv[ ]\n  )\n{\n  for ( ; ; )\n  {\n    int x = 1, y = 1;\n    int vx = 0, vy = 1;\n    int m, n;\n\n    scanf ( \" %d %d\", &m, &n );\n    if ( !( m | n ) ) break ;\n\n    for ( ; ; )\n    {\n      char cmd[ 16 ];\n      int d;\n\n      scanf ( \" %s\", cmd );\n      if ( *cmd == 'S' )  break ;\n\n      switch ( *cmd )\n      {\n        case 'F':\n        case 'B':\n          scanf ( \"%d\", &d );\n          x += ( *cmd == 'F' ? 1 : -1 ) * vx * d;\n          if ( x < 1 ) x = 1; else if ( x > m ) x = m;\n          y += ( *cmd == 'F' ? 1 : -1 ) * vy * d;\n          if ( y < 1 ) y = 1; else if ( y > n ) y = n;\n          break ;\n        case 'L':\n          d  = vx;\n          vx = -vy;\n          vy = d;\n          break ;\n        case 'R':\n          d  = vx;\n          vx = vy;\n          vy = -d;\n          break ;\n      }\n    }\n\n    printf ( \"%d %d\\n\", x, y );\n  }\n\n  return ( 0 );\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void)\n{\n    int x,y;\n\n    while(1)\n    {\n        scanf(\"%d %d\",&x,&y);\n        //printf(\"x=%d,y=%d\\n\",x,y);\n\n        if(x==0 && y==0)\n        {\n            break;\n        }\n\n        int field[102][102]={};\n        int robot[2][2]={};     //robot[0][0]=x;robot[0][1]=y;robot[1][0]=??????\n\n        int k,j;\n\n        for(k=0;k<x+2;k++)\n        {\n            for(j=0;j<y+2;j++)\n            {\n                field[k][j]=0;\n            }\n        }\n\n        for(k=1;k<=x;k++)\n        {\n            for(j=1;j<=y;j++)\n            {\n                field[k][j]=1;\n            }\n        }\n\n        /*for(k=y+1;k>=0;k--)\n        {\n            for(j=x+1;j>=0;j--)\n            {\n                printf(\"%d \",field[j][k]);\n            }\n            printf(\"\\n\");\n        }*/\n\n        robot[0][0]=1;\n        robot[0][1]=1;\n        robot[1][0]=3;\n\n        while(1)\n        {\n            char command[20]={};\n            int distance,escape=0;\n\n            scanf(\"%s*c\",command);\n            //printf(\"command=%s,distance=%d\\n\",command,distance);\n\n            switch(command[0])\n            {\n                int i,check=0;\n                case 'F':\n                    scanf(\"%d%*c\",&distance);\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 0:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 2:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'B':\n                    scanf(\"%d%*c\",&distance);\n                    check=0;\n                    for(i=0;i<distance;i++)\n                    {\n                        switch(robot[1][0])\n                        {\n                            case 2:\n                                if(field[robot[0][0]+1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 3:\n                                if(field[robot[0][0]][robot[0][1]-1]!=0)\n                                {\n                                    robot[0][1]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 0:\n                                if(field[robot[0][0]-1][robot[0][1]]!=0)\n                                {\n                                    robot[0][0]--;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            case 1:\n                                if(field[robot[0][0]][robot[0][1]+1]!=0)\n                                {\n                                    robot[0][1]++;\n                                }\n                                else\n                                {\n                                    check=1;\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                        if(check==1)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                case 'R':\n                    robot[1][0]=(robot[1][0]+1)%4;\n                    break;\n                case 'L':\n                    robot[1][0]=(robot[1][0]+3)%4;\n                    break;\n                case 'S':\n                    escape=1;\n                    break;\n                default:\n                    break;\n            }\n\n            if(escape==1)\n            {\n                break;\n            }\n        }\n        printf(\"%d %d\\n\",robot[0][0],robot[0][1]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#define N 100\n#define M 100\n#define CMD 51\n\n#define DEBUG 0\n\nint main(void){\n  char cmd[CMD];\n  char buf[20];\n  int n,m;\n  int i,j,k;\n  int flag;\n\n  int x,y,t;\n\n  while( 1 ){\n    fgets(cmd,CMD,stdin);\n    for( i=0; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )      buf[j++]=cmd[i];\n    buf[j]='\\0';\n    sscanf(buf,\"%d \",&m);\n    for( ; cmd[i]==' '||cmd[i]=='\\t';i++ );\n    for( j=0; '0'<=cmd[i]&&cmd[i]<='9' ; i++ )      buf[j++]=cmd[i];\n    sscanf(buf,\"%d \",&n);\n\n    if( m==0 && n==0 )  break;\n    if( DEBUG==1 )  printf(\"field : %d %d \\n\",m,n);\n\n    x=1;y=1;t=1;\n\n    flag = 1;\n    while( flag>0 ){\n      fgets(cmd,CMD,stdin);\n      if( DEBUG==1 )\n\tprintf(\"%s| %d,%d t=%d\\n\",cmd,x,y,t);\n\n      switch( cmd[0] ){\n      case 'F':\n\tfor( i=7; cmd[i]==' '||cmd[i]=='\\t'; i++ ) ;\n\tfor( j=0;cmd[i]!='\\n';i++)\n\t  buf[j++]=cmd[i];\n\tbuf[j]='\\0';\n\tsscanf(buf,\"%d \",&k);\n\tswitch(t){\n\tcase 1:   y+=k;   if( y>n ){  y=n;flag=2;  }\t    break;\n\tcase 2:   x+=k;   if( x>m ){  x=m;flag=2;  }\t    break;\n\tcase 3:   y-=k;   if( y<1 ){  y=1;flag=2;  }\t    break;\n\tcase 4:   x-=k;   if( x<1 ){  x=1;flag=2;  }      break;\n\t}\n\tbreak;\n      case 'B':\n\tfor( i=8,j=0;cmd[i]!='\\n';i++)    buf[j++]=cmd[i];\n\tbuf[j]='\\0';\n\tsscanf(buf,\"%d \",&k);\n\tswitch(t){\n\tcase 1:   y-=k;   if( y<1 ){  y=1;flag=2;   }\t    break;\n\tcase 2:   x-=k;   if( x<1 ){  x=1;flag=2;   }\t    break;\n\tcase 3:   y+=k;   if( y>n ){  y=n;flag=2;   }\t    break;\n\tcase 4:   x+=k;   if( x>m ){  x=m;flag=2;   }\t    break;\n\t}\n\tbreak;\n      case 'R':\n\tt++;\t  if( t==5 )t=0;\n\tbreak;\n      case 'L':\n\tt--;\t  if( t==0 )t=4;\n\tbreak;\n      case 'S':\n\tflag=0;\n\tbreak;\n      }\n    }\n    printf(\"%d %d\\n\",x,y);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n\nint main(){\n\tint x,y;\n\tint ansx,ansy,ansv;\n\tchar str[20];\n\tint vector[4][2]={{0,1},{1,0},{0,-1},{-1,0}};\n\twhile(1){\n\t\tansx=0,ansy=0,ansv=0;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(x==0&&y==0){\n\t\t\tbreak;\n\t\t}\n\t\twhile(1){\n\t\t\tchar cmd[20];\n\t\t\tint b,c=0;\n\t\t\tint value=0;\n\t\t\t\n\t\t\twhile(b=getchar()){\n\t\t\t\tif(b=='\\n'){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr[c]=(char)b;\n\t\t\t\tc++;\n\t\t\t}\n\t\t\tstr[c]='\\0';\n\t\t\t\n\t\t\tif(strcmp(\"STOP\",str)==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(strcmp(\"RIGHT\",str)==0){\n\t\t\t\tansv=(ansv+1)%4;\n\t\t\t}\n\t\t\telse if(strcmp(\"LEFT\",str)==0){\n\t\t\t\tansv=(ansv+3)%4;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsscanf(str,\"%s %d\",cmd,&value);\n\t\t\t\tif(strcmp(\"FORWARD\",cmd)==0){\n\t\t\t\t\t//printf(\"F v=%d\\n\",value);\n\t\t\t\t\tansx+=vector[ansv][0]*value;\n\t\t\t\t\tansy+=vector[ansv][1]*value;\n\t\t\t\t\tif(ansx<0)ansx=0;\n\t\t\t\t\tif(ansx>x-1)ansx=x-1;\n\t\t\t\t\tif(ansy<0)ansy=0;\n\t\t\t\t\tif(ansy>y-1)ansy=y-1;\n\t\t\t\t}\n\t\t\t\telse if(strcmp(\"BACKWARD\",cmd)==0){\n\t\t\t\t\t//printf(\"B v=%d\\n\",value);\n\t\t\t\t\tansx-=vector[ansv][0]*value;\n\t\t\t\t\tansy-=vector[ansv][1]*value;\n\t\t\t\t\t\n\t\t\t\t\tif(ansx<0)ansx=0;\n\t\t\t\t\tif(ansx>x-1)ansx=x-1;\n\t\t\t\t\tif(ansy<0)ansy=0;\n\t\t\t\t\tif(ansy>y-1)ansy=y-1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d %d\\n\",ansx+1,ansy+1);\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic Main(){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tint m = sc.nextInt();\n\t\t\tint ns = 1;\n\t\t\tint ew = 0;\n\t\t\tint x = 1;\n\t\t\tint y = 1;\n\t\t\tif(n == 0 && m == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\tif(str.equals(\"STOP\")){\n\t\t\t\t\tSystem.out.println(x+\" \"+y);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(str.equals(\"RIGHT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"LEFT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = 1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"FORWARD\")){\n\t\t\t\t\tint d = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx += ew*d;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty += ns*d;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tint di = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx -= ew*di;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty -= ns*di;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(x < 1 || x > n || y < 1 || y > m){\n\t\t\t\t\tx = 1;\n\t\t\t\t\ty = 1;\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;class Main{public static void main(String[]z){Scanner s=new Scanner(System.in);int[][]ds={{0,1},{1,0},{0,-1},{-1,0}};for(int[]n={0,0};(n[0]=s.nextInt())>0;){n[1]=s.nextInt();int[]p={1,1};int d=0,i,x;for(String y;!(y=s.next()).equals(\"STOP\");System.out.println(p[0]+\" \"+p[1])){if(y.endsWith(\"D\"))for(i=2,x=s.nextInt();i-->0;)p[i]=Math.min(n[i],Math.max(1,p[i]+ds[d][i]*x*(y.charAt(0)==70?1:-1)));if(y.charAt(0)==76)d=(d+3)%4;if(y.charAt(0)==82)d=(d+1)%4;}}}}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nclass Main{\n\tstatic int vectors[][] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\twhile(true){\n\t\t\t\t//String str = br.readLine();\n\t\t\t\tString strs[] = br.readLine().split(\"[ \\t]\");\n\t\t\t\tint max_x = Integer.parseInt(strs[0]);\n\t\t\t\tint max_y = Integer.parseInt(strs[1]);\n\n\t\t\t\tif(max_x == 0) return;\n\t\t\t\tint direction = 0;\n\t\t\t\tint x = 0;\n\t\t\t\tint y = 0;\n\n\t\t\t\twhile(true){\n\t\t\t\t\t//System.out.println(direction + \" \" + x + \" \" + y);\n\t\t\t\t\tstrs = br.readLine().split(\"[ \\t]\");\n\t\t\t\t\tif(strs[0].equals(\"FORWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = vectors[direction];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 0) x = 0;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 0) y = 0;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"BACKWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = new int[2];\n\t\t\t\t\t\tvector[0] = 0 - vectors[direction][0];\n\t\t\t\t\t\tvector[1] = 0 - vectors[direction][1];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 0) x = 0;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 0) y = 0;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"RIGHT\")){\n\t\t\t\t\t\tdirection++;\n\t\t\t\t\t\tdirection = direction % 4;\n\n\t\t\t\t\t}else if(strs[0].equals(\"LEFT\")){\n\t\t\t\t\t\tdirection--;\n\t\t\t\t\t\tif(direction < 0) direction += 4;;\n\n\t\t\t\t\t}else if(strs[0].equals(\"STOP\")){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t//System.out.println(x + \" \" + y);\n\t\t\t\t}\n\t\t\t\tSystem.out.println(x + \" \" + y);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tSystem.err.print(e);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    Robot r;\n    public int w, h, t;\n    String com;\n\n    void run(){\n\twhile(sc.hasNext()){\n\t    w = sc.nextInt();\n\t    h = sc.nextInt();\n\t    if(w==0 && h==0) break;\n\n\t    r = new Robot();\n\t    com = sc.next();\n\t    while(!com.equals(\"STOP\")){\n\n\t\tif(com.equals(\"FORWARD\"))\n\t\t    r.forward(sc.nextInt());\n      \n\t\telse if(com.equals(\"BACKWARD\"))\n\t\t    r.forward((sc.nextInt())*(-1));\n\n\t\telse if(com.equals(\"RIGHT\"))\n\t\t    r.turnR();\n\n\t\telse if(com.equals(\"LEFT\"))\n\t\t    r.turnL();\n\n\t\tcom = sc.next();\n\t    }\n\t    System.out.println(r.getX()+\" \"+r.getY());\n\t}\n    }\n\n    class Robot{\n\tint x, y;\n\tint d; // 0=f=(y+), 1=r=(x+), 2=b=(y-), 3=l=(x-)\n\tRobot(){\n\t    x = 1;\n\t    y = 1;\n\t    d = 0;\n\t}\n\n\tvoid forward(int g){\n\t    if(d==0) y = y+g>h ? h : y+g<1 ? 1 : y+g;  \n\t    if(d==1) x = x+g>w ? w : x+g<1 ? 1 : x+g;  \n\t    if(d==2) y = y-g>h ? h : y-g<1 ? 1 : y-g;\t  \n\t    if(d==3) x = x-g>w ? w : x-g<1 ? 1 : x-g;  \n\t}\n\n\tint getX(){ return x; }\n\tint getY(){ return y; }\n\t\n\tvoid turnR(){ d = (d+1)%4; }\n\tvoid turnL(){ d = (d+4-1)%4; }\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\n    public static void main(String[] args){\n\tint Walk,x,y,w,h;\n\tScanner in = new Scanner(System.in);\n\tfinal int[] dx = {0,1,0,-1}; \n\tfinal int[] dy = {1,0,-1,0};\n\tint dir;\n       \n\twhile(true){\n\t    w = in.nextInt();\n\t    h = in.nextInt();\t       \n\n\t    if(w+h == 0)break;\n\t    dir = 0;\n\t    x=y=1;\n\t    while(true){\n\t\tString op = in.next();\n\t\tif(op.equals(\"STOP\"))break;\n\n\t\tif(op.equals(\"RIGHT\")){\n\t\t    ++dir;\n\t\t    if(dir == 4)dir = 0;\n\t\t}\n\t\telse if(op.equals(\"LEFT\")){\n\t\t    --dir;\n\t\t    if(dir == -1)dir = 3;\n\t\t}\n\t\telse if(op.equals(\"FORWARD\")){\n\t\t    Walk = in.nextInt();\n\t\t    x = x + Walk*dx[dir];\n\t\t    if(x > w)x = w;\n\t\t    if(x <= 0)x=1;\n\t\t    y = y + Walk*dy[dir];\n\t\t    if(y > h)y = h;\n\t\t    if(y <= 0)y=1;\n\t\t}\n\t\telse if(op.equals(\"BACKWARD\")){\n\t\t    Walk = in.nextInt();\n\t\t    x = x - Walk*dx[dir];\n\t\t    if(x > w)x = w;\n\t\t    else if(x < 0)x = 1;\n\t\t    y = y - Walk*dy[dir];\n\t\t    if(y > h)y = h;\n\t\t    else if(y <= 0)y = 1;\n\t\t}\n\t    }\n\t    System.out.println(x + \" \" + y);\n\t}\n\n    }\n\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    Robot r;\n    public int w, h, t;\n    String com;\n\n    void run(){\n\twhile(sc.hasNext()){\n\t    w = sc.nextInt();\n\t    h = sc.nextInt();\n\t    if(w==0 && h==0) break;\n\n\t    r = new Robot();\n\t    com = sc.next();\n\t    while(!com.equals(\"STOP\")){\n\n\t\tif(com.equals(\"FORWARD\"))\n\t\t    r.forward(sc.nextInt());\n      \n\t\telse if(com.equals(\"BACKWARD\"))\n\t\t    r.forward((sc.nextInt())*(-1));\n\n\t\telse if(com.equals(\"RIGHT\"))\n\t\t    r.turnR();\n\n\t\telse if(com.equals(\"LEFT\"))\n\t\t    r.turnL();\n\n\t\tcom = sc.next();\n\t    }\n\t    System.out.println(r.getX()+\" \"+r.getY());\n\t}\n    }\n\n    class Robot{\n\tint x, y;\n\tint d; // 0=f=(y+), 1=r=(x+), 2=b=(y-), 3=l=(x-)\n\tRobot(){\n\t    x = 1;\n\t    y = 1;\n\t    d = 0;\n\t}\n\n\tvoid forward(int g){\n\t    if(d==0) y = y+g<=h ? y+g : h;  \n\t    if(d==1) x = x+g<=w ? x+g : w;  \n\t    if(d==2) y = y-g>=1 ? y-g : 1;\t  \n\t    if(d==3) x = x-g>=1 ? x-g : 1;\n\t}\n\n\tint getX(){ return x; }\n\tint getY(){ return y; }\n\t\n\tvoid turnR(){ d = (d+1)%4; }\n\tvoid turnL(){ d = (d+4-1)%4; }\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));       \n\t\ttry {\n\t\t\tString line;\n\t\t\twhile(true){\n\t\t\t\t/* input */\n\t\t\t\tline = br.readLine();\n\t\t\t\tint c = Integer.parseInt(line.split(\"[ \\t]\")[0]), r = Integer.parseInt(line.split(\"[ \\t]\")[1]);\n\t\t\t\tif(c==0&&r==0){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tint[] robot = new int[3];\n\t\t\t\t\n\t\t\t\t//first and second index indicates the current position\n\t\t\t\trobot[0] = 1;\n\t\t\t\trobot[1] = 1;\n\t\t\t\t//third index shows direction: 0:north, 1:east, 2:south, 3:west\n\t\t\t\trobot[2] = 0;\n\t\t\t\t/* commands */\n\t\t\t\twhile(true){\n\t\t\t\t\tline = br.readLine();\n\t\t\t\t\tif(line.indexOf(\"STOP\") > -1){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if(line.indexOf(\"RIGHT\") > -1){\n\t\t\t\t\t\trobot[2] = (robot[2] + 1) % 4; \n\t\t\t\t\t} else if(line.indexOf(\"LEFT\") > -1){\n\t\t\t\t\t\trobot[2] = (robot[2] + 3) % 4; \n\t\t\t\t\t} else {\n\t\t\t\t\t\tString com = line.split(\" \")[0];\n\t\t\t\t\t\tint n = Integer.parseInt(line.split(\"[ \\t]\")[1]);\n\t\t\t\t\t\tif(com.indexOf(\"FORWARD\") > -1){\n\t\t\t\t\t\t\tswitch(robot[2]){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\trobot[1] += n;\n\t\t\t\t\t\t\t\tif(robot[1] > r) robot[1] = r;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\trobot[0] += n;\n\t\t\t\t\t\t\t\tif(robot[0] > c) robot[0] = c;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\trobot[1] -= n;\n\t\t\t\t\t\t\t\tif(robot[1] < 0) robot[1] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\trobot[0] -= n;\n\t\t\t\t\t\t\t\tif(robot[0] < 0) robot[0] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(com.indexOf(\"BACKWARD\") > -1){\n\t\t\t\t\t\t\tswitch(robot[2]){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\trobot[1] -= n;\n\t\t\t\t\t\t\t\tif(robot[1] < r) robot[1] = r;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\trobot[0] -= n;\n\t\t\t\t\t\t\t\tif(robot[0] < c) robot[0] = c;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\trobot[1] += n;\n\t\t\t\t\t\t\t\tif(robot[1] > 0) robot[1] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\trobot[0] += n;\n\t\t\t\t\t\t\t\tif(robot[0] > 0) robot[0] = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t/* output */\n\t\t\t\tSystem.out.println(robot[0] + \" \" + robot[1]);\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nclass Main{\n\tstatic int vectors[][] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\twhile(true){\n\t\t\t\t//String str = br.readLine();\n\t\t\t\tString strs[] = br.readLine().split(\"[ \\t]\");\n\t\t\t\tint max_x = Integer.parseInt(strs[0]);\n\t\t\t\tint max_y = Integer.parseInt(strs[1]);\n\n\t\t\t\tif(max_x == 0) return;\n\t\t\t\tint direction = 0;\n\t\t\t\tint x = 1;\n\t\t\t\tint y = 1;\n\n\t\t\t\twhile(true){\n\t\t\t\t\t//System.out.println(direction + \" \" + x + \" \" + y);\n\t\t\t\t\tstrs = br.readLine().split(\"[ \\t]\");\n\t\t\t\t\tif(strs[0].equals(\"FORWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = vectors[direction];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 0) x = 0;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 0) y = 0;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"BACKWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = new int[2];\n\t\t\t\t\t\tvector[0] = 0 - vectors[direction][0];\n\t\t\t\t\t\tvector[1] = 0 - vectors[direction][1];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 1) x = 1;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 1) y = 1;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"RIGHT\")){\n\t\t\t\t\t\tdirection++;\n\t\t\t\t\t\tdirection = direction % 4;\n\n\t\t\t\t\t}else if(strs[0].equals(\"LEFT\")){\n\t\t\t\t\t\tdirection--;\n\t\t\t\t\t\tif(direction < 0) direction += 4;;\n\n\t\t\t\t\t}else if(strs[0].equals(\"STOP\")){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t//System.out.println(x + \" \" + y);\n\t\t\t\t}\n\t\t\t\tSystem.out.println(x + \" \" + y);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tSystem.err.print(e);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.util.regex.*;\nimport static java.lang.Math.*;\nimport static java.lang.System.out;\n\n// AOJ\npublic class Main {\n\tfinal Scanner sc=new Scanner(System.in);\n\tfinal int[] vx={0,1,0,-1}, vy={-1,0,1,0};\n\tstatic class Point{\n\t\tint x, y;\n\t\tPoint(int x, int y){\tthis.x=x;\tthis.y=y;}\n\t\tPoint(){\tthis.x=0; this.y=0;}\n\t\t@Override public String toString(){\treturn \"(\"+this.x+\",\"+this.y+\")\";}\n\t\tstatic boolean ok(int x,int y,int X,int Y,int min){\n\t\t\treturn (min<=x&&x<X && min<=y&&y<Y)?true:false;\n\t\t}\n\t\tstatic boolean ok(int x,int y,int X,int Y){\treturn ok(x,y,X,Y,0);}\n\t\tstatic void DE(char[][] c,int sx,int sy,int ex,int ey){\n\t\t\tout.println(\"--------------------\");\n\t\t\tfor(int y=sy; y<ey; y++){\n\t\t\t\tfor(int x=sx; x<ex; x++)out.print(c[x][y]);\n\t\t\t\tout.println();\n\t\t\t}\n\t\t\tout.println(\"--------------------\");\n\t\t}\n\t\tstatic void DE(int[][] c,int sx,int sy,int ex,int ey){\n\t\t\tout.println(\"--------------------\");\n\t\t\tfor(int y=sy; y<ey; y++){\n\t\t\t\tfor(int x=sx; x<ex; x++)out.print(c[x][y]+\" \");\n\t\t\t\tout.println();\n\t\t\t}\n\t\t\tout.println(\"--------------------\");\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tnew Main().AOJ1104();\n\t}\n\t\n\tvoid AOJ1104(){\n\t\twhile(sc.hasNext()){\n\t\t\tint W=sc.nextInt(),H=sc.nextInt();\n\t\t\tif((W|H)==0)\tbreak;\n\t\t\tint x=1,y=1,d=2;\n\t\t\t// 右-1 左+1\n\t\t\twhile(true){\n\t\t\t\tString s=sc.next();\n\t\t\t\tif(s.equals(\"STOP\"))\tbreak;\n\t\t\t\telse if(s.equals(\"FORWARD\")){\n\t\t\t\t\tint n=sc.nextInt();\n\t\t\t\t\tx=max(1,min(W,x+n*vx[d]));\n\t\t\t\t\ty=max(1,min(H,y+n*vy[d]));\n\t\t\t\t}else if(s.equals(\"BACKWARD\")){\n\t\t\t\t\tint n=sc.nextInt();\n\t\t\t\t\tx=max(1,min(W,x+n*-1*vx[d]));\n\t\t\t\t\ty=max(1,min(H,y+n*-1*vy[d]));\n\t\t\t\t}else if(s.equals(\"RIGHT\"))\td=(d==0?3:d-1);\n\t\t\t\telse if(s.equals(\"LEFT\"))\td=(d==3?0:d+1);\n\t\t\t\t//out.println(\"D\"+x+\" \"+y+\" \"+d);\n\t\t\t}\n\t\t\tout.println(x+\" \"+y);\n\t\t}\n\t}\n\t\n\tvoid AOJ1114(){\n\t\tint N=sc.nextInt();\n\t\tfor(int I=1; I<=N; I++){\n\t\t\tint[][] b=new int[5][5];\n\t\t\tfor(int y=0; y<5; y++){\n\t\t\t\tfor(int x=0; x<5; x++)\tb[x][y]=sc.nextInt();\n\t\t\t}\n\t\t\tint ans=0;\n\t\t\tfor(int i=0; i<5; i++){\n\t\t\t\tfor(int j=0; j<5; j++){\n\t\t\t\t\tif(b[i][j]==1)\tans=max(ans,solve1114(i,j,b));\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\tint solve1114(int x,int y,int[][] b){\n\t\tint ans=0;\n\t\tfor(int i=0; i+x<5; i++){\n\t\t\tif(b[i+x][y]==0)\tbreak;\n\t\t\tboolean flag=true;\n\t\t\tfor(int j=0; j+y<5; j++){\n\t\t\t\tfor(int k=0; k<=i; k++){\n\t\t\t\t\tfor(int l=0; l<=j; l++){\n\t\t\t\t\t\tif(b[k+x][l+y]==0){\n\t\t\t\t\t\t\tflag=false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!flag)\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!flag)\tbreak;\n\t\t\t\tans=max(ans,(i+1)*(j+1));\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tint step=0;\n\t// バックトラック（TLE）\n\tvoid AOJ1126(){\n\t\twhile(sc.hasNext()){\n\t\t\tint W=sc.nextInt(), H=sc.nextInt();\n\t\t\tif((W|H)==0)\tbreak;\n\t\t\tchar[][] c=new char[W][H];\n\t\t\tfor(int y=0; y<H; y++){\n\t\t\t\tString line=sc.next();\n\t\t\t\tfor(int x=0; x<W; x++)\tc[x][y]=line.charAt(x);\n\t\t\t}\n\t\t\tString ans=\"\";\n\t\t\tfor(int x=0; x<W; x++){\n\t\t\t\tfor(int y=0; y<H; y++){\n\t\t\t\t\tif(Character.isDigit(c[x][y])){\n\t\t\t\t\t\tif(x>0)\tif(Character.isDigit(c[x-1][y]) && c[x-1][y]!='0')\tcontinue;\n\t\t\t\t\t\tif(y>0)\tif(Character.isDigit(c[x][y-1]) && c[x][y-1]!='0')\tcontinue;\n\t\t\t\t\t\tif(c[x][y]=='0')\tcontinue;\n\t\t\t\t\t\tString temp=solve1126(x,y,\"\"+c[x][y],c,W,H);\n\t\t\t\t\t\tans=compara1126(temp,ans)?temp:ans;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t\t// TODO debug\n\t\tout.println(step+\"steps\");\n\t}\n\tString solve1126(int x,int y,String ans,char[][] c,int W,int H){\n\t\tString r=ans;\n\t\t//TODO debug\n\t\tstep++;\n\t\t//out.println(ans);\n\t\tfor(int i=1; i<3; i++){\n\t\t\tint xx=x+vx[i], yy=y+vy[i];\n\t\t\tif(!Point.ok(xx,yy,W,H))\tcontinue;\n\t\t\tif(Character.isDigit(c[xx][yy])){\n\t\t\t\tString temp=solve1126(xx,yy,ans+c[xx][yy],c,W,H);\n\t\t\t\tr=compara1126(r,temp)?r:temp;\n\t\t\t\tout.println(temp);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\t// 第一引数aの方が大きい時のみtrue\n\tboolean compara1126(String a,String b){\n\t\tif(a.length()>b.length())\treturn true;\n\t\tif(a.length()==b.length()){\n\t\t\tfor(int i=0; i<a.length(); i++){\n\t\t\t\tif(a.charAt(i)>b.charAt(i))\treturn true;\n\t\t\t\tif(a.charAt(i)<b.charAt(i))\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t// 横型探索（MLE）\n\tvoid OldAOJ1126(){\n\t\tint step=0;\n\t\twhile(sc.hasNext()){\n\t\t\tint W=sc.nextInt(), H=sc.nextInt();\n\t\t\tString ans=\"\";\n\t\t\tif((W|H)==0)\tbreak;\n\t\t\tchar[][] c=new char[W][H];\n\t\t\tString[][] close=new String[W][H];\n\t\t\tLinkedList<C1126> open=new LinkedList<C1126>();\n\t\t\tfor(int y=0; y<H; y++){\n\t\t\t\tString line=sc.next();\n\t\t\t\tfor(int x=0; x<W; x++){\n\t\t\t\t\tc[x][y]=line.charAt(x);\n\t\t\t\t\tif(Character.isDigit(line.charAt(x))){\n\t\t\t\t\t\tif(x>0)\tif(Character.isDigit(c[x-1][y]))\tcontinue;\n\t\t\t\t\t\tif(y>0)\tif(Character.isDigit(c[x][y-1]))\tcontinue;\n\t\t\t\t\t\topen.add(new C1126(x,y,\"\"+c[x][y]));\n\t\t\t\t\t\tclose[x][y]=\"\"+c[x][y];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile(!open.isEmpty()){\n\t\t\t\tC1126 now=open.poll();\n\t\t\t\t// TODO debug\n\t\t\t\tout.println(\"ANS\"+ans+\" NOW\"+now.ans);\n\t\t\t\tans=now.compara(ans)?new String(now.ans):ans;\n\t\t\t\tfor(int i=1; i<3; i++){\n\t\t\t\t\tint xx=now.x+vx[i], yy=now.y+vy[i];\n\t\t\t\t\tif(!Point.ok(xx,yy,W,H))\tcontinue;\n\t\t\t\t\tif(Character.isDigit(c[xx][yy])){\n\t\t\t\t\t\tC1126 temp=new C1126(xx,yy,now.ans+c[xx][yy]);\n\t\t\t\t\t\tif(close[xx][yy]==null){\n\t\t\t\t\t\t\topen.add(temp);\n\t\t\t\t\t\t\tclose[xx][yy]=temp.ans;\n\t\t\t\t\t\t\tstep++;\n\t\t\t\t\t\t}else if(temp.compara(close[xx][yy])){\n\t\t\t\t\t\t\topen.add(temp);\n\t\t\t\t\t\t\tclose[xx][yy]=temp.ans;\n\t\t\t\t\t\t\tstep++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t\tout.println(step+\"step\");\n\t}\n\tclass C1126{\n\t\tint x,y;\tString ans;\n\t\tC1126(int x,int y,String ans){\n\t\t\tthis.x=x;\tthis.y=y;\n\t\t\tif(ans.length()>0){\n\t\t\t\tint i=0;\n\t\t\t\twhile(ans.charAt(i)=='0'){\n\t\t\t\t\tif(++i>=ans.length()-1)\tbreak;\n\t\t\t\t\tans=ans.substring(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.ans=ans;\n\t\t}\n\t\tboolean compara(String ans){\n\t\t\tif(this.ans.length()>ans.length())\treturn true;\n\t\t\tif(this.ans.length()==ans.length()){\n\t\t\t\tfor(int i=0; i<ans.length(); i++){\n\t\t\t\t\tif(ans.charAt(i)<this.ans.charAt(i))\treturn true;\n\t\t\t\t\tif(ans.charAt(i)>this.ans.charAt(i))\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tvoid AOJ0165(){\n\t\tfinal int MAX=1000000;\n\t\tboolean[] prime=Sieve(MAX);\n\t\tint[] prime2=new int[MAX+1];\n\t\tfor(int i=2; i<=MAX; i++)\tprime2[i]=(prime[i]?prime2[i-1]+1:prime2[i-1]);\n\t\twhile(sc.hasNext()){\n\t\t\tint N=sc.nextInt();\n\t\t\tif(N==0)\tbreak;\n\t\t\tint ans=0;\n\t\t\tfor(int i=1; i<=N; i++){\n\t\t\t\tint p=sc.nextInt(), m=sc.nextInt();\n\t\t\t\tint min=max(1,p-m), max=min(MAX, p+m);\n\t\t\t\tans+=prime2[max]-prime2[min-1]-1;\n\t\t\t}\n\t\t\tout.println(max(0,ans));\n\t\t}\n\t}\n\t\n\tvoid AOJ1144(){\n\t\twhile(sc.hasNext()){\n\t\t\tint X=sc.nextInt(), Y=sc.nextInt();\n\t\t\tif((X|Y)==0)\tbreak;\n\t\t\tchar[][] c=new char[X][Y];\n\t\t\tfor(int y=0; y<Y; y++){\n\t\t\t\tString line=sc.next();\n\t\t\t\tfor(int x=0; x<X; x++){\n\t\t\t\t\tc[x][y]=line.charAt(x);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t// TODO 果樹園　RE　横型\n\tvoid AOJ0118(){\n\t\twhile(sc.hasNext()){\n\t\t\tint X=sc.nextInt(), Y=sc.nextInt(), ans=0;\n\t\t\tif((X|Y)==0)\tbreak;\n\t\t\tchar[][] c=new char[X+2][Y+2];\n\t\t\tfor(int y=0; y<Y; y++){\n\t\t\t\tString line=sc.next();\n\t\t\t\tfor(int x=0; x<X; x++){\n\t\t\t\t\tc[x][y]=line.charAt(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO debug\n\t\t\t//Point.DE(c, 0, 0, X, Y);\n\t\t\tfor(int x=0; x<X; x++){\n\t\t\t\tfor(int y=0; y<Y; y++){\n\t\t\t\t\tif(c[x][y]=='&')\tcontinue;\n\t\t\t\t\tans++;\n\t\t\t\t\tLinkedList<Point> open=new LinkedList<Point>();\n\t\t\t\t\topen.add(new Point(x,y));\n\t\t\t\t\tc[x][y]='&';\n\t\t\t\t\tchar mark=c[x][y];\n\t\t\t\t\twhile(!open.isEmpty()){\n\t\t\t\t\t\tPoint now=open.poll();\n\t\t\t\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\t\t\t\tint xx=now.x+vx[i], yy=now.y+vy[i];\n\t\t\t\t\t\t\tif(!Point.ok(xx,yy,X,Y))\tcontinue;\n\t\t\t\t\t\t\tif(c[xx][yy]==mark){\n\t\t\t\t\t\t\t\topen.add(new Point(xx,yy));\n\t\t\t\t\t\t\t\tc[xx][yy]='&';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//Point.DE(c, 0, 0, X, Y);\n\t\t\t\t\t//out.println(\"ANS\"+ans);\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\t\n\t// Red and Black 横型探索\n\tvoid AOJ1130(){\n\t\twhile(sc.hasNext()){\n\t\t\tint X=sc.nextInt(), Y=sc.nextInt(),sx=0,sy=0,ans=0;\n\t\t\tif(X==0)\tbreak;\n\t\t\tchar[][] c=new char[X][Y];\n\t\t\tfor(int y=0; y<Y; y++){\n\t\t\t\tchar[] line=sc.next().toCharArray();\n\t\t\t\tfor(int x=0; x<X; x++){\n\t\t\t\t\tc[x][y]=line[x];\n\t\t\t\t\tif(line[x]=='@'){\n\t\t\t\t\t\tsx=x;\tsy=y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tLinkedList<Point> open=new LinkedList<Point>();\n\t\t\topen.add(new Point(sx,sy));\n\t\t\tboolean[][] close=new boolean[X][Y];\n\t\t\twhile(!open.isEmpty()){\n\t\t\t\tans++;\n\t\t\t\tPoint now=open.poll();\n\t\t\t\tclose[now.x][now.y]=true;\n\t\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\t\tif(now.x+vx[i]<0 || now.x+vx[i]>=X || now.y+vy[i]<0 || now.y+vy[i]>=Y)\tcontinue;\n\t\t\t\t\tif(c[now.x+vx[i]][now.y+vy[i]]=='.' && !close[now.x+vx[i]][now.y+vy[i]]){\n\t\t\t\t\t\topen.add(new Point(now.x+vx[i], now.y+vy[i]));\n\t\t\t\t\t\tclose[now.x+vx[i]][now.y+vy[i]]=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\t\n\t// TODO デパート　TLE MLE WA\n\tvoid AOJ0223(){\n\t\twhile(sc.hasNext()){\n\t\t\tint X=sc.nextInt(),\tY=sc.nextInt();\n\t\t\tif(X==0)\tbreak;\n\t\t\tint tx=sc.nextInt(), ty=sc.nextInt(), kx=sc.nextInt(), ky=sc.nextInt();\n\t\t\tint[][] b=new int[X+1][Y+1];\n\t\t\tfor(int y=1; y<=Y; y++){\n\t\t\t\tfor(int x=1; x<=X; x++)\tb[x][y]=sc.nextInt();\n\t\t\t}\n\t\t\tLinkedList<C0223> open=new LinkedList<C0223>();\n\t\t\topen.add(new C0223(tx,ty,kx,ky,0));\n\t\t\tint[][][][] close2=new int[X+1][Y+1][X+1][Y+1];\n\t\t\tclose2[tx][ty][kx][ky]=-1;\n\t\t\tint ans=-1;\n\t\t\twhile(!open.isEmpty()){\n\t\t\t\tC0223 now=open.poll();\n\t\t\t\tif(now.ans()){\n\t\t\t\t\tans=now.sec;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(now.sec>=99)\tbreak;\n\t\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\t\tif(0<now.tx+vx[i]&&now.tx+vx[i]<=X && 0<now.ty+vy[i]&&now.ty+vy[i]<=Y && 0<now.kx-vx[i]&&now.kx-vx[i]<=X && 0<now.ky-vy[i]&&now.ky-vy[i]<=Y){\n\t\t\t\t\t\ttx=now.tx;\tty=now.ty;\tkx=now.kx;\tky=now.ky;\n\t\t\t\t\t\tif(b[tx+vx[i]][ty+vy[i]]==0){\n\t\t\t\t\t\t\ttx+=vx[i];\tty+=vy[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(b[kx-vx[i]][ky-vy[i]]==0){\n\t\t\t\t\t\t\tkx-=vx[i];\tky-=vy[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//out.println(\"TEMP:\"+tx+\" \"+ty+\" \"+kx+\" \"+ky);\n\t\t\t\t\t\t//if(tx==kx && ty==ky)\tans=ans<0?now.sec+1:min(ans,now.sec+1);\n\t\t\t\t\t\tif(close2[tx][ty][kx][ky]==0 || close2[tx][ty][kx][ky]>now.sec+1){\n\t\t\t\t\t\t\t//out.println(\"ADD:\"+tx+\" \"+ty+\" \"+kx+\" \"+ky);\n\t\t\t\t\t\t\topen.add(new C0223(tx,ty,kx,ky,now.sec+1));\n\t\t\t\t\t\t\tclose2[tx][ty][kx][ky]=now.sec+1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans<0? \"NA\": ans);\n\t\t}\n\t}\n\tclass C0223{\n\t\tint tx,ty,kx,ky,sec;\n\t\tC0223(int tx, int ty, int kx, int ky, int sec){\n\t\t\tthis.tx=tx;\tthis.ty=ty;\tthis.kx=kx;\tthis.ky=ky;\tthis.sec=sec;\n\t\t}\n\t\tboolean ans(){\n\t\t\tif(this.tx==this.kx && this.ty==this.ky)\treturn true;\n\t\t\telse\treturn false;\n\t\t}\n\t}\n\t\n\t\n\t// TODO WA\n\tvoid AOJ0142(){\n\t\twhile(sc.hasNext()){\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\tbreak;\n\t\t\tint nn=(n-1)/2;\n\t\t\tboolean[] b=new boolean[n];\n\t\t\tfor(int i=1; i<n; i++)\tb[(i*i)%n]=true;\n\t\t\tArrayList<Integer> ar=new ArrayList<Integer>();\n\t\t\tfor(int i=1; i<n; i++){\n\t\t\t\tif(b[i])\tar.add(i);\n\t\t\t}\n\t\t\tint[] ans=new int[nn+1];\n\t\t\tfor(int i=0; i<ar.size(); i++){\n\t\t\t\tfor(int j=0; j<ar.size(); j++){\n\t\t\t\t\tif(i==j)\tcontinue;\n\t\t\t\t\tint temp=ar.get(i)-ar.get(j);\n\t\t\t\t\ttemp+= temp<0? n:0;\n\t\t\t\t\ttemp= temp>nn? n-temp: temp;\n\t\t\t\t\tans[temp]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1; i<=nn; i++)\tout.println(ans[i]);\n\t\t}\n\t}\n\t\n\t\n\t// レゴ　横型探索\n\tvoid AOJ0207(){\n\t\twhile(sc.hasNext()){\n\t\t\tint W=sc.nextInt(), H=sc.nextInt();\n\t\t\tif((W|H)==0)\tbreak;\n\t\t\tint sx=sc.nextInt(), sy=sc.nextInt(), gx=sc.nextInt(), gy=sc.nextInt(), n=sc.nextInt();\n\t\t\tint[][] b=new int[W+1][H+1];\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tint color=sc.nextInt(), d=sc.nextInt(), x=sc.nextInt(), y=sc.nextInt();\n\t\t\t\tif(d==0){\t// 横 4x2\n\t\t\t\t\tfor(int j=y; j<y+2; j++){\n\t\t\t\t\t\tfor(int k=x; k<x+4; k++)\tb[k][j]=color;\n\t\t\t\t\t}\n\t\t\t\t}else{\t// 縦 2x4\n\t\t\t\t\tfor(int j=y; j<y+4; j++){\n\t\t\t\t\t\tfor(int k=x; k<x+2; k++)\tb[k][j]=color;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO debug\n\t\t\t//de0207(b,W,H);\n\t\t\tint c=b[sx][sy];\n\t\t\tif(c==0){\n\t\t\t\tout.println(\"NG\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tLinkedList<Point> open=new LinkedList<Point>();\n\t\t\tboolean[][] close=new boolean[W+1][H+1];\n\t\t\topen.add(new Point(sx,sy));\n\t\t\tclose[sx][sy]=true;\n\t\t\tString ans=\"NG\";\n\t\t\twhile(!open.isEmpty()){\n\t\t\t\tPoint now=open.poll();\n\t\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\t\tint xx=now.x+vx[i], yy=now.y+vy[i];\n\t\t\t\t\tif(!Point.ok(xx, yy, W+1, H+1, 1))\tcontinue;\n\t\t\t\t\tif(b[xx][yy]!=c)\tcontinue;\n\t\t\t\t\tif(close[xx][yy])\tcontinue;\n\t\t\t\t\topen.add(new Point(xx,yy));\n\t\t\t\t\tclose[xx][yy]=true;\n\t\t\t\t\tif(xx==gx && yy==gy){\n\t\t\t\t\t\tans=\"OK\";\n\t\t\t\t\t\topen.clear();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\tvoid de0207(int[][] b, int w, int h){\n\t\tfor(int j=0; j<=h; j++){\n\t\t\tfor(int i=0; i<=w; i++)\tout.print(b[i][j]+\" \");\n\t\t\tout.println();\n\t\t}\n\t\tfor(int i=0; i<=w; i++)\tout.print(\"-\");\n\t\tout.println();\n\t}\n\t\n\tvoid AOJ0139(){\n\t\tint N=sc.nextInt();\n\t\tfinal Pattern ap=Pattern.compile(\"^>'(=+)#(=+)~$\");\n\t\tfor(int i=1; i<=N; i++){\n\t\t\tString s=sc.next();\n\t\t\tMatcher m=ap.matcher(s);\n\t\t\tif(m.matches()){\n\t\t\t\tif(m.group(1).length()==m.group(2).length()){\n\t\t\t\t\tout.println(\"A\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}else if(Pattern.compile(\"^>\\\\^(Q=)+~~$\").matcher(s).matches()){\n\t\t\t\tout.println(\"B\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tout.println(\"NA\");\n\t\t}\n\t}\n\t\n\tArrayList<Integer> Sieve2(int N){\n\t\tArrayList<Integer> prime = new ArrayList<Integer>();\n\t\tboolean[] list = new boolean[N+1];\n\t\tArrays.fill(list, true);\n\t\tlist[1]=false;\n\t\tfor (int i=2; i<=N; i++) {\n\t\t\tif(list[i]) {\n\t\t\t\tprime.add(i);\n\t\t\t\tfor (int j=i+i; j<=N; j+=i)\tlist[j] = false;\n\t\t\t}\n\t\t}\n\t\treturn prime;\n\t}\n\n\tboolean[] Sieve(int N){\n\t\tboolean[] list = new boolean[N+1];\n\t\tArrays.fill(list, true);\n\t\tlist[0]=false;\tlist[1]=false;\n\t\tfor(int j=4; j<=N; j+=2)\tlist[j]=false;\n\t\tfor(int i=3; i*i<=N; i+=2)\tif(list[i])\tfor (int j=i+i; j<=N; j+=i)\tlist[j]=false;\n\t\treturn list;\n\t}\n\t\n\tboolean isPrime(int n){\n\t\tfor(int i=2; i*i<=n; i++){\n\t\t\tif(n%i==0)     return false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tint gcd(int x, int y){\n\t\tif(y==0)\treturn x;\n\t\telse\treturn gcd(y, x%y);\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint w = sc.nextInt();\n\t\t\tint h = sc.nextInt();\n\t\t\tif(w==0 && h==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tint t;\n\t\t\tint d = 0;\n\t\t\tint x = 0;\n\t\t\tint y = 0;\n\t\t\tchar c;\n\t\t\twhile(true){\n\t\t\t\ts = sc.next();\n\t\t\t\tc = s.charAt(0);\n\t\t\t\tif(c=='S'){\n\t\t\t\t\tSystem.out.println((x+1) + \" \" + (y+1));\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(c=='R'){\n\t\t\t\t\td++;\n\t\t\t\t\tif(d==4) d=0;\n\t\t\t\t}else if(c=='L'){\n\t\t\t\t\td--;\n\t\t\t\t\tif(d==-1) d=3;\n\t\t\t\t}else if((c=='F' && d==0) || (c=='B' && d==2)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\ty += t;\n\t\t\t\t\tif(y>h-1) y=h-1;\n\t\t\t\t}else if((c=='F' && d==1) || (c=='B' && d==3)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tx += t;\n\t\t\t\t\tif(x>w-1) x=w-1;\n\t\t\t\t}else if((c=='F' && d==2) || (c=='B' && d==0)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\ty -= t;\n\t\t\t\t\tif(y<0) y=0;\n\t\t\t\t}else if((c=='F' && d==3) || (c=='B' && d==1)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tx -= t;\n\t\t\t\t\tif(x<0) x=0;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tint xpos;\n\tint ypos;\n\tint w;\n\tint h;\n\n\tprivate boolean checkUpper(int pos, String state){\n\t\tif(state.equals(\"y\")){\n\t\t\tif(pos > h){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(pos > w){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate boolean checkLower(int pos, String state){\n\t\tif(state.equals(\"y\")){\n\t\t\tif(pos <= 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(pos <= 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void operate(int dis, int dir){\n\t\tswitch(dir){\n\t\tcase 0:\n\t\t\tif(! checkUpper(ypos+dis, \"y\")){\n\t\t\t\typos = h;\n\t\t\t}\n\t\t\telse{\n\t\t\t\typos += dis;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 1:\n\t\t\tif(! checkUpper(xpos+dis, \"x\")){\n\t\t\t\txpos = w;\n\t\t\t}\n\t\t\telse{\n\t\t\t\txpos += dis;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 2:\n\t\t\tif(! checkLower(ypos-dis, \"y\")){\n\t\t\t\typos = h;\n\t\t\t}\n\t\t\telse{\n\t\t\t\typos -= dis;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 3:\n\t\t\tif(! checkLower(xpos-dis, \"x\")){\n\t\t\t\txpos = w;\n\t\t\t}\n\t\t\telse{\n\t\t\t\txpos -= dis;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tw = sc.nextInt();\n\t\t\th = sc.nextInt();\n\t\t\tif(w == 0 && h == 0)\n\t\t\t\tbreak;\n\t\t\tint dir = 0;\n\t\t\txpos = 1;\n\t\t\typos = 1;\n\t\t\tint [][] map = new int[w+1][h+1];\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\tif(str.equals(\"STOP\")){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"RIGHT\")){\n\t\t\t\t\tdir = (dir + 1) % 4;\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"LEFT\")){\n\t\t\t\t\tdir = (dir + 3) %4;\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"FORWARD\")){\n\t\t\t\t\tint dis = sc.nextInt();\n\t\t\t\t\toperate(dis, dir);\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"BACKWARD\")){\n\t\t\t\t\tint dis = sc.nextInt();\n\t\t\t\t\toperate(dis, (dir + 2) % 4);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(xpos + \" \" + ypos);\n\t\t}\n\n\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    Robot r;\n    public int w, h, t;\n    String com;\n\n    void run(){\n\twhile(sc.hasNext()){\n\t    w = sc.nextInt();\n\t    h = sc.nextInt();\n\t    if(w==0 && h==0) break;\n\n\t    r = new Robot();\n\t    com = sc.next();\n\t    while(!com.equals(\"STOP\")){\n\n\t\tif(com.equals(\"FORWARD\"))\n\t\t    r.forward(sc.nextInt());\n      \n\t\telse if(com.equals(\"BACKWARD\"))\n\t\t    r.forward((sc.nextInt())*(-1));\n\n\t\telse if(com.equals(\"RIGHT\"))\n\t\t    r.turnR();\n\n\t\telse if(com.equals(\"LEFT\"))\n\t\t    r.turnL();\n\n\t\tcom = sc.next();\n\t    }\n\t    System.out.println(r.getX()+\" \"+r.getY());\n\t}\n    }\n\n    class Robot{\n\tint x, y;\n\tint d; // 0=f=(y+), 1=r=(x+), 2=b=(y-), 3=l=(x-)\n\tRobot(){\n\t    x = 1;\n\t    y = 1;\n\t    d = 0;\n\t}\n\n\tvoid forward(int g){\n\t    if(d==0) y = y+g<=h ? y+g : h;  \n\t    if(d==1) x = x+g<=w ? x+g : w;  \n\t    if(d==2) y = y-g>=1 ? y-g : 1;\t  \n\t    if(d==3) x = x-g>=1 ? x-g : 1;\n\t}\n\n\tint getX(){ return x; }\n\tint getY(){ return y; }\n\t\n\tvoid turnR(){ d = (d+1)%4; }\n\tvoid turnL(){ d--; if(d==-1) d=3;  }\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;class Main{public static void main(String[]z){Scanner s=new Scanner(System.in);int[][]ds={{0,1},{1,0},{0,-1},{-1,0}};for(int[]n={0,0};(n[0]=s.nextInt())>0;){n[1]=s.nextInt();int[]p={1,1};int d=0,i,x;for(String y;!(y=s.next()).equals(\"STOP\");){if(y.endsWith(\"D\"))for(i=2,x=s.nextInt();i-->0;)p[i]=Math.min(n[i],Math.max(1,p[i]+ds[d][i]*x*(y.charAt(0)==70?1:-1)));if(y.charAt(0)==76)d=(d+3)%4;if(y.charAt(0)==82)d=(d+1)%4;}System.out.println(p[0]+\" \"+p[1]);}}}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int w = sc.nextInt();\n\t\t\tfinal int h = sc.nextInt();\n\t\t\t\n\t\t\tif(h == 0 && w == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint cur_x = 1;\n\t\t\tint cur_y = 1;\n\t\t\tint move = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\t\n\t\t\t\tif(\"STOP\".equals(str)){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(\"FORWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? cur_y : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x - m < 0 ? cur_x : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"BACKWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? cur_y : cur_y - m; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x - m < 0 ? cur_x : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"RIGHT\".equals(str)){\n\t\t\t\t\tmove = move >= 4 ? 0 : move + 1;\n\t\t\t\t}else if(\"LEFT\".equals(str)){\n\t\t\t\t\tmove = move <= 0 ? 3 : move - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(cur_x + \" \" + cur_y);\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.awt.Point;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) throws java.io.IOException {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tint m = sc.nextInt();\n\t\t\tint n = sc.nextInt();\n\t\t\tif ((n | m) == 0)\n\t\t\t\tbreak;\n\t\t\tPoint pos = new Point(1, 1);\n\t\t\t\n\t\t//\tSystem.out.println(tmp);\n\t\t\tint d = 0;\n\t\t\tboolean flag = true;\n\t\t\twhile (flag) {\n\t\t\t\tString tmp = sc.next();\n\t\t\t\tchar c = tmp.toCharArray()[0];\n\t\t\t\tswitch (c) {\n\t\t\t\tcase 'F':\n\t\t\t\t\tint f = sc.nextInt();\n\t\t\t\t\tswitch (d) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint ny = pos.y + 1;\n\t\t\t\t\t\t\tif (ny <= n)\n\t\t\t\t\t\t\t\tpos.y++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint nx = pos.x + 1;\n\t\t\t\t\t\t\tif (nx <= m)\n\t\t\t\t\t\t\t\tpos.x++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint ny = pos.y - 1;\n\t\t\t\t\t\t\tif (ny > 0)\n\t\t\t\t\t\t\t\tpos.y--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint nx = pos.x - 1;\n\t\t\t\t\t\t\tif (nx > 0)\n\t\t\t\t\t\t\t\tpos.x--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'B':\n\t\t\t\t\tint b = sc.nextInt();\n\t\t\t\t\tswitch (d) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint ny = pos.y - 1;\n\t\t\t\t\t\t\tif (ny > 0)\n\t\t\t\t\t\t\t\tpos.y--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint nx = pos.x - 1;\n\t\t\t\t\t\t\tif (nx > 0)\n\t\t\t\t\t\t\t\tpos.x--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint ny = pos.y + 1;\n\t\t\t\t\t\t\tif (ny <= n)\n\t\t\t\t\t\t\t\tpos.y++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint nx = pos.x + 1;\n\t\t\t\t\t\t\tif (nx <= m)\n\t\t\t\t\t\t\t\tpos.x++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\td = (d + 1) % 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\td = (d - 1) % 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(pos.x + \" \" + pos.y);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n \nclass Bot{\n    int x = 1, y = 1 , dir = 0;\n    private int width, height;\n     \n    private int[][] xy = {\n            {0,1},{1,0},{0,-1},{-1,0}\n    };\n     \n    public Bot(int w, int h) {\n        width = w;\n        height = h;\n    }\n     \n     \n    public void  forward(int step){\n        x += xy[dir][0]*step;\n        y += xy[dir][1]*step;\n        beProperly();\n    }\n     \n    public void backward(int step){\n        x -= xy[dir][0]*step;\n        y -= xy[dir][1]*step;\n        beProperly();\n    }\n     \n    public void right(){\n        dir = (dir+1)%4;\n    }\n     \n    public void left(){\n        if(--dir == -1) dir = 3;\n    }\n     \n    private void beProperly(){\n        if(x > width) x = width;\n        if(y > height) y = height;\n        if(x < 1) x = 1;\n        if(y < 1) y = 1;\n    }\n}\n \n \npublic class Main {\n    public static void main(String[] args){\n        Scanner sn = new Scanner(System.in);\n \n        while(true){\n            int w = sn.nextInt(), h = sn.nextInt();\n            if(w == 0 && h == 0) break;\n            Bot bot = new Bot(w, h);\n            while(true){\n \n                String cmd = sn.nextLine();\n                String[] go = cmd.split(\" \");\n                String dir;\n                 \n                if(go.length == 2){\n                    int step = new Integer(go[1]);\n                    if(go[0].equals(\"FORWARD\")) bot.forward(step);\n                    else if(go[0].equals(\"BACKWARD\")) bot.backward(step);\n                } else{\n                     \n                    if(go[0].equals(\"RIGHT\")) bot.right();\n                    else if(go[0].equals(\"LEFT\")) bot.left();\n                    else if(go[0].equals(\"STOP\")) break;\n                }\n            }\n            System.out.println(bot.x+\" \"+bot.y);\n        }      \n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.awt.geom.Point2D;\nimport java.lang.reflect.Array;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\t\n\tScanner in = new Scanner(System.in);\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n\tpublic Main(){\t\t\n\t\tnew AOJ1104();\n\t}\n\t\n\tclass AOJ1104{\n\t\tint x,y,mx,my,muki=3;\n\t\tpublic AOJ1104() {\n\t\t\twhile(true){\n\t\t\t\tx = 1;y = 1;muki=3;\n\t\t\t\tmx = in.nextInt();\n\t\t\t\tmy = in.nextInt();\n\t\t\t\tif(mx+my==0)break;\n\t\t\t\twhile(true){\n//\t\t\t\t\tSystem.out.println(x+\" \"+y);\n\t\t\t\t\tif(doit(in.next()))break;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(x+\" \"+y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tboolean doit(String meirei){\n\t\t\tint num=0;\n\t\t\tif(meirei.equals(\"FORWARD\")||meirei.equals(\"BACKWARD\")){\n\t\t\t\tnum=in.nextInt();\n\t\t\t\tif(meirei.equals(\"FORWARD\")){\n\t\t\t\t\tint nx[] = {1,0,-1,0};\n\t\t\t\t\tint ny[] = {0,-1,0,1};\n\t\t\t\t\tfor(int i=0;i<num;i++){\n\t\t\t\t\t\tif(x+nx[muki]<=0||x+nx[muki]>mx||y+ny[muki]<=0||y+ny[muki]>my)break;\n\t\t\t\t\t\tx+=nx[muki];\n\t\t\t\t\t\ty+=ny[muki];\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tint nx[] = {-1,0,1,0};\n\t\t\t\t\tint ny[] = {0,1,0,-1};\n\t\t\t\t\tfor(int i=0;i<num;i++){\n\t\t\t\t\t\tif(x+nx[muki]<=0||x+nx[muki]>mx||y+ny[muki]<=0||y+ny[muki]>my)break;\n\t\t\t\t\t\tx+=nx[muki];\n\t\t\t\t\t\ty+=ny[muki];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(meirei.equals(\"STOP\")){\n\t\t\t\treturn true;\n\t\t\t}else if(meirei.equals(\"RIGHT\")){\n\t\t\t\t//右=0,下=1,左=2,上=3(向き)\n\t\t\t\tmuki = (muki+1)%4;\n\t\t\t}else if(meirei.equals(\"LEFT\")){\n\t\t\t\tmuki = (muki+3)%4;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t\t\t\n\t\t\t\n\tclass AOJ2503{\n\t\tint MAX = 0;\n\t\tpublic AOJ2503() {\n\t\t\tScanner in = new Scanner(System.in);\n\t\t\tint n = in.nextInt();\n\t\t\tint m = in.nextInt();\n\n\t\t\tint[][] cost = new int[n][n];\n\n\t\t\tint[] dp = new int[n];\n\t\t\tfor(int i=0;i<n*n;i++){\n\t\t\t\tcost[i/n][i%n]=MAX;\n\t\t\t}\n\t\t\tfor(int i=0;i<m;i++){\n\t\t\t\tint a = in.nextInt();\n\t\t\t\tint b = in.nextInt();\n\t\t\t\tcost[a][b]=in.nextInt();\n\t\t\t}\t\n\t\t\t//\t\t\tTODO 一番大きいパスを0のポイントからn-1のポイントまでの\n\n\t\t\tfor(int s=1;s<n;s++){\n\t\t\t\tfor(int i=0;i<=s;i++){\n\t\t\t\t\tif(cost[i][s]==MAX)continue;\n\t\t\t\t\tdp[s]=Math.max(dp[s],dp[i]+cost[i][s]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int s=0;s<n;s++)for(int i=0;i<n;i++){\n\t\t\t\tif(cost[s][i]==MAX)continue;\n\t\t\t\tdp[i]=Math.max(dp[s]+cost[s][i],dp[i]);\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++)System.out.print(dp[i]+\" \");\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(dp[n-1]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int w = sc.nextInt();\n\t\t\tfinal int h = sc.nextInt();\n\t\t\t\n\t\t\tif(h == 0 && w == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint cur_x = 1;\n\t\t\tint cur_y = 1;\n\t\t\tint move = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\t\n\t\t\t\tif(\"STOP\".equals(str)){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(\"FORWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? h : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? w : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? 0 : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x - m < 0 ? 0 : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"BACKWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? 0 : cur_y - m; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x - m < 0 ? 0 : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? h : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? w : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"RIGHT\".equals(str)){\n\t\t\t\t\tmove = move >= 4 ? 0 : move + 1;\n\t\t\t\t}else if(\"LEFT\".equals(str)){\n\t\t\t\t\tmove = move <= 0 ? 3 : move - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(cur_x + \" \" + cur_y);\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.util.*;\n\n\npublic class Main {\n\tstatic int[] vy = {1,0,-1,0};\n\tstatic int[] vx = {0,1,0,-1};\n\tpublic static void main(String[] args) {\t\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\twhile(true) {\n\t\t\tint W = sc.nextInt();\n\t\t\tint H = sc.nextInt();\n\t\t\tint D = 0;\n\t\t\tif(W == 0 && H == 0) break;\n\t\t\tint w = 1;\n\t\t\tint h = 1;\n\t\t\twhile(true) {\n\t\t\t\tString in = sc.next();\n\t\t\t\tif(in.equals(\"FORWARD\")) {\n\t\t\t\t\tint idx = sc.nextInt();\n\t\t\t\t\tw = Math.max(Math.min((w + vx[D]*idx),W),1);\n\t\t\t\t\th = Math.max(Math.min((h + vy[D]*idx),H),1);\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"BACKWARD\")) {\n\t\t\t\t\tint idx = sc.nextInt();\n\t\t\t\t\tw = Math.max(Math.min((w - vx[D]*idx),W),1);\n\t\t\t\t\th = Math.max(Math.min((h - vy[D]*idx),H),1);\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"RIGHT\")) {\n\t\t\t\t\tD = (D+1) % 4;\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"LEFT\")) {\n\t\t\t\t\tD = (D+3) % 4;\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"STOP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(w + \" \" + h);\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Bot{\n\tint x = 1, y = 1 , dir = 0;\n\tprivate int width, height;\n\t\n\tprivate int[][] xy = {\n\t\t\t{0,1},{1,0},{0,-1},{-1,0}\n\t};\n\t\n\tpublic Bot(int w, int h) {\n\t\twidth = w;\n\t\theight = h;\n\t}\n\t\n\t\n\tpublic void  forward(int step){\n\t\tx += xy[dir][0]*step;\n\t\ty += xy[dir][1]*step;\n\t\tbeProperly();\n\t}\n\t\n\tpublic void backward(int step){\n\t\tx -= xy[dir][0]*step;\n\t\ty -= xy[dir][1]*step;\n\t}\n\t\n\tpublic void right(){\n\t\tdir = (dir+1)%4;\n\t}\n\t\n\tpublic void left(){\n\t\tif(--dir == -1) dir = 3;\n\t}\n\t\n\tprivate void beProperly(){\n\t\tif(x > width) x = width;\n\t\tif(y > height) y = height;\n\t\tif(x < 1) x = 1;\n\t\tif(y < 1) y = 1;\n\t}\n}\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sn = new Scanner(System.in);\n\n\t\twhile(true){\n\t\t\tint w = sn.nextInt(), h = sn.nextInt();\n\t\t\tif(w == 0 && h == 0) break;\n\t\t\tBot bot = new Bot(w, h);\n\t\t\twhile(true){\n\n\t\t\t\tString cmd = sn.nextLine();\n\t\t\t\tString[] go = cmd.split(\" \");\n\t\t\t\tString dir;\n\t\t\t\t\n\t\t\t\tif(go.length == 2){\n\t\t\t\t\tint step = new Integer(go[1]);\n\t\t\t\t\tif(go[0].equals(\"FORWARD\")) bot.forward(step);\n\t\t\t\t\telse if(go[0].equals(\"BACKWARD\")) bot.backward(step);\n\t\t\t\t} else{\n\t\t\t\t\t\n\t\t\t\t\tif(go[0].equals(\"RIGHT\")) bot.right();\n\t\t\t\t\telse if(go[0].equals(\"LEFT\")) bot.left();\n\t\t\t\t\telse if(go[0].equals(\"STOP\")) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(bot.x+\" \"+bot.y);\n\t\t}\t\t\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Where's Your Robot?\npublic class Main{\n\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[][] move = {{1,0},{0,1},{-1,0},{0,-1}};\n\t\twhile(true){\n\t\t\tint c = sc.nextInt();\n\t\t\tint r = sc.nextInt();\n\t\t\tif((r|c)==0)break;\n\t\t\tint ri = 1;\n\t\t\tint rj = 1;\n\t\t\tint dir = 0;\n\t\t\twhile(true){\n\t\t\t\tString cmd = sc.next();\n\t\t\t\tif(\"STOP\".equals(cmd)){\n\t\t\t\t\tSystem.out.println(rj+\" \"+ri);break;\n\t\t\t\t}\n\t\t\t\tif(\"RIGHT\".equals(cmd))dir=(dir+1)%4;\n\t\t\t\telse if(\"LEFT\".equals(cmd))dir=(dir+3)%4;\n\t\t\t\telse if(\"FORWARD\".equals(cmd)){\n\t\t\t\t\tint k = sc.nextInt();\n\t\t\t\t\twhile(k--!=0){\n\t\t\t\t\t\tint ni = ri+move[dir][0];\n\t\t\t\t\t\tint nj = rj+move[dir][1];\n\t\t\t\t\t\tif(1<=ni&&ni<=r&&1<=nj&&nj<=c){\n\t\t\t\t\t\t\tri = ni;\n\t\t\t\t\t\t\trj = nj;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint k = sc.nextInt();\n\t\t\t\t\twhile(k--!=0){\n\t\t\t\t\t\tint ni = ri+move[(dir+2)%4][0];\n\t\t\t\t\t\tint nj = rj+move[(dir+2)%4][1];\n\t\t\t\t\t\tif(1<=ni&&ni<=r&&1<=nj&&nj<=c){\n\t\t\t\t\t\t\tri = ni;\n\t\t\t\t\t\t\trj = nj;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic Main(){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tint m = sc.nextInt();\n\t\t\tint ns = 1;\n\t\t\tint ew = 0;\n\t\t\tint x = 1;\n\t\t\tint y = 1;\n\t\t\tif(n == 0 && m == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\tif(str.equals(\"STOP\")){\n\t\t\t\t\tSystem.out.println(x+\" \"+y);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(str.equals(\"RIGHT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"LEFT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = 1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"FORWARD\")){\n\t\t\t\t\tint d = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx += ew*d;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty += ns*d;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tint di = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx -= ew*di;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty -= ns*di;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(x < 1){\n\t\t\t\t\tx = 1;\n\t\t\t\t} else if(x > n){\n\t\t\t\t\tx = n;\n\t\t\t\t} else if(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t} else if(y > m){\n\t\t\t\t\ty = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.awt.Point;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) throws java.io.IOException {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tint m = sc.nextInt();\n\t\t\tint n = sc.nextInt();\n\t\t\tif ((n | m) == 0)\n\t\t\t\tbreak;\n\t\t\tPoint pos = new Point(1, 1);\n\t\t\tint d = 0;\n\t\t\tboolean flag = true;\n\t\t\twhile (flag) {\n\t\t\t\tString tmp = sc.next();\n\t\t\t\tchar c = tmp.toCharArray()[0];\n\t\t\t\tswitch (c) {\n\t\t\t\tcase 'F':\n\t\t\t\t\tint f = sc.nextInt();\n\t\t\t\t\tswitch (d) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint ny = pos.y + 1;\n\t\t\t\t\t\t\tif (ny <= n)\n\t\t\t\t\t\t\t\tpos.y++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint nx = pos.x + 1;\n\t\t\t\t\t\t\tif (nx <= m)\n\t\t\t\t\t\t\t\tpos.x++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint ny = pos.y - 1;\n\t\t\t\t\t\t\tif (ny > 0)\n\t\t\t\t\t\t\t\tpos.y--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tfor (int i = 0; i < f; i++) {\n\t\t\t\t\t\t\tint nx = pos.x - 1;\n\t\t\t\t\t\t\tif (nx > 0)\n\t\t\t\t\t\t\t\tpos.x--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'B':\n\t\t\t\t\tint b = sc.nextInt();\n\t\t\t\t\tswitch (d) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint ny = pos.y - 1;\n\t\t\t\t\t\t\tif (ny > 0)\n\t\t\t\t\t\t\t\tpos.y--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint nx = pos.x - 1;\n\t\t\t\t\t\t\tif (nx > 0)\n\t\t\t\t\t\t\t\tpos.x--;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint ny = pos.y + 1;\n\t\t\t\t\t\t\tif (ny <= n)\n\t\t\t\t\t\t\t\tpos.y++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tfor (int i = 0; i < b; i++) {\n\t\t\t\t\t\t\tint nx = pos.x + 1;\n\t\t\t\t\t\t\tif (nx <= m)\n\t\t\t\t\t\t\t\tpos.x++;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\td = (d + 1) % 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\td = (d + 3) % 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(pos.x + \" \" + pos.y);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tint INF = 1 << 28;\n\tdouble EPS = 1e-9;\n\n\tint m,n;\n\tint[] dx={0,1,0,-1};\n\tint[] dy={1,0,-1,0};\n\t\n\tvoid run() {\n\t\tfor(;;){\n\t\t\tm=sc.nextInt();\n\t\t\tn=sc.nextInt();\n\t\t\tif((m|n)==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint x=1,y=1;\n\t\t\tboolean collision=false;\n\t\t\tint k=0;\n\t\t\tfor(;;){\n\t\t\t\tString s=sc.next();\n\t\t\t\tif(s.equals(\"STOP\")){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(collision){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(s.equals(\"FORWARD\")){\n\t\t\t\t\tint d=sc.nextInt();\n\t\t\t\t\tx+=dx[k]*d;\n\t\t\t\t\ty+=dy[k]*d;\n\t\t\t\t}else if(s.equals(\"BACKWARD\")){\n\t\t\t\t\tint d=sc.nextInt();\n\t\t\t\t\tx-=dx[k]*d;\n\t\t\t\t\ty-=dy[k]*d;\n\t\t\t\t}else if(s.equals(\"RIGHT\")){\n\t\t\t\t\tk=(k+1)%4;\n\t\t\t\t}else if(s.equals(\"LEFT\")){\n\t\t\t\t\tk=(k+3)%4;\n\t\t\t\t} \n\t\t\t\tif(x<1){\n\t\t\t\t\tx=1;\n\t\t\t\t\tcollision=true;\n\t\t\t\t}else if(x>m){\n\t\t\t\t\tx=m;\n\t\t\t\t\tcollision=true;\n\t\t\t\t}\n\t\t\t\tif(y<1){\n\t\t\t\t\ty=1;\n\t\t\t\t\tcollision=true;\n\t\t\t\t}else if(y>n){\n\t\t\t\t\ty=n;\n\t\t\t\t\tcollision=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintln(x+\" \"+y);\n\t\t}\n\t}\n\n\tvoid solve() {\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s) {\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s) {\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int w = sc.nextInt();\n\t\t\tfinal int h = sc.nextInt();\n\t\t\t\n\t\t\tif(h == 0 && w == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint cur_x = 1;\n\t\t\tint cur_y = 1;\n\t\t\tint move = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\t\n\t\t\t\tif(\"STOP\".equals(str)){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(\"FORWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? h : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? w : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? 0 : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x - m < 0 ? 0 : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"BACKWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? 0 : cur_y - m; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x - m < 0 ? 0 : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? h : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? w : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"RIGHT\".equals(str)){\n\t\t\t\t\tmove = move >= 4 ? 0 : move + 1;\n\t\t\t\t}else if(\"LEFT\".equals(str)){\n\t\t\t\t\tmove = move <= 0 ? 3 : move - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(cur_x + \" \" + cur_y);\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "//Aizu Online Judge Volume11-1104\nimport java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\t\n\t\tint xMax = scanner.nextInt();\n\t\tint yMax = scanner.nextInt();\n\t\t\n\t\tif (xMax == 0 && yMax == 0) {return;}\n\t\t\n\t\tRobotInstance rob = new RobotInstance(xMax, yMax);\n\t\t\n\t\twhile(true) {\n\t\t\tString s = scanner.next();\n\t\t\tif (s.equals(\"STOP\")) break;\n\t\t\tif (s.equals(\"RIGHT\")) {\n\t\t\t\trob.changeDirection(true);\n\t\t\t}\n\t\t\tif (s.equals(\"LEFT\")) {\n\t\t\t\trob.changeDirection(false);\n\t\t\t}\n\t\t\tif (s.equals(\"FORWARD\")) {\n\t\t\t\tint n = scanner.nextInt();\n\t\t\t\trob.forward(n);\n\t\t\t}\n\t\t\tif (s.equals(\"BACKWARD\")) {\n\t\t\t\tint n = scanner.nextInt();\n\t\t\t\trob.backward(n);\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(String.format(\"%1$d %2$d\", rob.getX(), rob.getY()));\n\t}\n\n\tprivate static class RobotInstance {\n\t\tint xMax, yMax;\n\t\tint x, y;\n\t\tint vx, vy;\n\t\tint direction;\n\t\t\n\t\tpublic RobotInstance(int xMax, int yMax) {\n\t\t\tthis.xMax = xMax;\n\t\t\tthis.yMax = yMax;\n\t\t\tdirection = 1;\n\t\t\tsetVxVy();\n\t\t\tx = 1;\n\t\t\ty = 1;\n\t\t}\n\t\t\n\t\tpublic void forward(int n) {\n\t\t\tx = x + n * vx;\n\t\t\ty = y + n * vy;\n\t\t\t\n\t\t\tcheckBorder();\n\t\t}\n\n\t\tpublic void backward(int n) {\n\t\t\tx = x - n * vx;\n\t\t\ty = y - n * vy;\n\t\t\t\n\t\t\tcheckBorder();\n\t\t}\n\t\t\n\t\tpublic void changeDirection(boolean isRight) {\n\t\t\tif (isRight) {\n\t\t\t\tdirection += 1;\n\t\t\t} else {\n\t\t\t\tdirection -= 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (direction == 0) {direction = 4;}\n\t\t\tif (direction == 5) {direction = 1;}\n\t\t\t\n\t\t\tsetVxVy();\n\t\t}\n\t\t\n\t\tprivate void checkBorder() {\n\t\t\tif (x < 1) {x = 1;}\n\t\t\tif (x > xMax) {x = xMax;}\n\t\t\tif (y < 1) {y = 1;}\n\t\t\tif (y > yMax) {y = yMax;}\n\t\t}\n\t\t\n\t\tprivate void setVxVy() {\n\t\t\tif (direction == 1) {\n\t\t\t\tvx = 0; vy = 1;\n\t\t\t}\n\t\t\tif (direction == 2) {\n\t\t\t\tvx = 1; vy = 0;\n\t\t\t}\n\t\t\tif (direction == 3) {\n\t\t\t\tvx = 0; vy = -1;\n\t\t\t}\n\t\t\tif (direction == 4) {\n\t\t\t\tvx = -1; vy = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic int getX() {\n\t\t\treturn x;\n\t\t}\n\t\tpublic int getY() {\n\t\t\treturn y;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int w = sc.nextInt();\n\t\t\tfinal int h = sc.nextInt();\n\t\t\t\n\t\t\tif(h == 0 && w == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint cur_x = 1;\n\t\t\tint cur_y = 1;\n\t\t\tint move = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\t\n\t\t\t\tif(\"STOP\".equals(str)){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(\"FORWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? cur_y : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x -= cur_x - m < 0 ? cur_x : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"BACKWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y - m < 0 ? cur_y : cur_y - m; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x - m < 0 ? cur_x : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"RIGHT\".equals(str)){\n\t\t\t\t\tmove = move >= 4 ? 0 : move + 1;\n\t\t\t\t}else if(\"LEFT\".equals(str)){\n\t\t\t\t\tmove = move <= 0 ? 3 : move - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(cur_x + \" \" + cur_y);\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int w = sc.nextInt();\n\t\t\tfinal int h = sc.nextInt();\n\t\t\t\n\t\t\tif(h == 0 && w == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint cur_x = 1;\n\t\t\tint cur_y = 1;\n\t\t\tint move = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\t\n\t\t\t\tif(\"STOP\".equals(str)){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(\"FORWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y - m < 1 ? cur_y : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x - m < 1 ? cur_x : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"BACKWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y - m < 1 ? cur_y : cur_y - m; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x - m < 1 ? cur_x : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"RIGHT\".equals(str)){\n\t\t\t\t\tmove = move >= 3 ? 0 : move + 1;\n\t\t\t\t}else if(\"LEFT\".equals(str)){\n\t\t\t\t\tmove = move <= 0 ? 3 : move - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(cur_x + \" \" + cur_y);\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\n    public static void main(String[] args){\n\tint Walk,x,y,w,h;\n\tScanner in = new Scanner(System.in);\n\tfinal int[] dx = {0,1,0,-1}; \n\tfinal int[] dy = {1,0,-1,0};\n\tint dir;\n       \n\twhile(true){\n\t    w = in.nextInt();\n\t    h = in.nextInt();\t       \n\n\t    if(w+h == 0)break;\n\t    dir = 0;\n\t    x=1;\n\t    y=1;\n\t    while(true){\n\t\t//String[] op = in.next().split(\" \");\n\t\tString op = in.next();\n\t\t//if(op[0].equals(\"STOP\"))break;\n\t\tif(op.equals(\"STOP\"))break;\n\n\t\t//if(op[0].equals(\"RIGHT\")){\n\t\tif(op.equals(\"RIGHT\")){\n\t\t    dir++;\n\t\t    if(dir == 4)dir = 0;\n\t\t}\n\t\telse if(op.equals(\"LEFT\")){\n\t\t//else if(op[0].equals(\"LEFT\")){\n\t\t    dir--;\n\t\t    if(dir == -1)dir = 3;\n\t\t}\n\t\telse if(op.equals(\"FORWARD\")){\n\t\t//else if(op[0].equals(\"FORWARD\")){\n\t\t    // Walk = Integer.parseInt(op[1]); \n\t\t    Walk = in.nextInt();\n\t\t    x = x + Walk*dx[dir];\n\t\t    if(x > w)x = w;\n\t\t    y = y + Walk*dy[dir];\n\t\t    if(y > h)y = h;\n\t\t}\n\t\telse if(op.equals(\"BACKWARD\")){\n\t\t//else if(op[0].equals(\"BACKWARD\")){\n\t\t    // Walk = Integer.parseInt(op[1]);\n\t\t    Walk = in.nextInt();\n\t\t    x = x - Walk*dx[dir];\n\t\t    if(x > w)x = w;\n\t\t    y = y - Walk*dy[dir];\n\t\t    if(y > y)y = h;\n\t\t}\n\t    }\n\t    System.out.println(x + \" \" + y);\n\t}\n\n    }\n\n\n\n\n\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nclass Main{\n\tstatic int vectors[][] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\twhile(true){\n\t\t\t\t//String str = br.readLine();\n\t\t\t\tString strs[] = br.readLine().split(\"[ \\t]\");\n\t\t\t\tint max_x = Integer.parseInt(strs[0]);\n\t\t\t\tint max_y = Integer.parseInt(strs[1]);\n\n\t\t\t\tif(max_x == 0) return;\n\t\t\t\tint direction = 0;\n\t\t\t\tint x = 0;\n\t\t\t\tint y = 0;\n\n\t\t\t\twhile(true){\n\t\t\t\t\t//System.out.println(direction + \" \" + x + \" \" + y);\n\t\t\t\t\tstrs = br.readLine().split(\"[ \\t]\");\n\t\t\t\t\tif(strs[0].equals(\"FORWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = vectors[direction];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 0) x = 0;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 0) y = 0;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"BACKWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = new int[2];\n\t\t\t\t\t\tvector[0] = 0 - vectors[direction][0];\n\t\t\t\t\t\tvector[1] = 0 - vectors[direction][1];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 0) x = 0;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 0) y = 0;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"RIGHT\")){\n\t\t\t\t\t\tdirection++;\n\t\t\t\t\t\tdirection = direction % 4;\n\n\t\t\t\t\t}else if(strs[0].equals(\"LEFT\")){\n\t\t\t\t\t\tdirection--;\n\t\t\t\t\t\tif(direction < 0) direction += 4;;\n\n\t\t\t\t\t}else if(strs[0].equals(\"STOP\")){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t//System.out.println(x + \" \" + y);\n\t\t\t\t}\n\t\t\t\tSystem.out.println((x+1) + \" \" + (y+1));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tSystem.err.print(e);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main\n{\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tfor(;;)\n\t\t{\n\t\t\tint w=in.nextInt();\n\t\t\tint h=in.nextInt();\n\t\t\tif((w|h)==0)\n\t\t\t\treturn;\n\t\t\tString state=\"U\";\n\t\t\tint nh=1,nw=1;\n\t\t\tfor(;;)\n\t\t\t{\n\t\t\t\tString s=in.next();\n\t\t\t\tif(s.equals(\"STOP\"))\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tif(s.equals(\"RIGHT\"))\n\t\t\t\t{\n\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\tstate=\"R\";\n\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\tstate=\"D\";\n\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\tstate=\"L\";\n\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\tstate=\"U\";\n\t\t\t\t}\n\t\t\t\telse if(s.equals(\"LEFT\"))\n\t\t\t\t{\n\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\tstate=\"L\";\n\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\tstate=\"D\";\n\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\tstate=\"R\";\n\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\tstate=\"U\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint go=in.nextInt();\n\t\t\t\t\tif(s.equals(\"FORWARD\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\t\twhile(nh<h&&go-->0)\n\t\t\t\t\t\t\t\tnh++;\n\t\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\t\twhile(nw>1&&go-->0)\n\t\t\t\t\t\t\t\tnw--;\n\t\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\t\twhile(nh>1&&go-->0)\n\t\t\t\t\t\t\t\tnh--;\n\t\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\t\twhile(nw<w&&go-->0)\n\t\t\t\t\t\t\t\tnw++;\t\n\t\t\t\t\t}\n\t\t\t\t\telse if(s.equals(\"BACKWARD\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\t\twhile(nh>1&&go-->0)\n\t\t\t\t\t\t\t\tnh--;\n\t\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\t\twhile(nw<w&&go-->0)\n\t\t\t\t\t\t\t\tnw++;\n\t\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\t\twhile(nh<h&&go-->0)\n\t\t\t\t\t\t\t\tnh++;\n\t\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\t\twhile(nw>1&&go-->0)\n\t\t\t\t\t\t\t\tnw--;\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(nw+\" \"+nh);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.util.*;\n\n\npublic class Main {\n\tstatic int[] vy = {1,0,-1,0};\n\tstatic int[] vx = {0,1,0,-1};\n\tpublic static void main(String[] args) {\t\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\twhile(true) {\n\t\t\tint W = sc.nextInt();\n\t\t\tint H = sc.nextInt();\n\t\t\tint D = 0;\n\t\t\tif(W == 0 && H == 0) break;\n\t\t\tint w = 1;\n\t\t\tint h = 1;\n\t\t\twhile(true) {\n\t\t\t\tString in = sc.next();\n\t\t\t\tif(in.equals(\"FORWARD\")) {\n\t\t\t\t\tint idx = sc.nextInt();\n\t\t\t\t\tw = Math.min((w + vx[D]*idx),W);\n\t\t\t\t\th = Math.min((h + vy[D]*idx),H);\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"BACKWARD\")) {\n\t\t\t\t\tint idx = sc.nextInt();\n\t\t\t\t\tw = Math.max((w - vx[D]*idx),1);\n\t\t\t\t\th = Math.max((h - vy[D]*idx),1);\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"RIGHT\")) {\n\t\t\t\t\tD = (D+1) % 4;\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"LEFT\")) {\n\t\t\t\t\tD = (D+3) % 4;\n\t\t\t\t}\n\t\t\t\tif(in.equals(\"STOP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(w + \" \" + h);\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n \npublic class Main{\n \n    public static void main(String[] args){\n    int Walk,x,y,w,h;\n    Scanner in = new Scanner(System.in);\n    final int[] dx = {0,1,0,-1}; \n    final int[] dy = {1,0,-1,0};\n    int dir;\n        \n    while(true){\n        w = in.nextInt();\n        h = in.nextInt();          \n \n        if(w+h == 0)break;\n        dir = 0;\n        x=y=1;\n        while(true){\n        String op = in.next();\n        if(op.equals(\"STOP\"))break;\n \n        if(op.equals(\"RIGHT\")){\n            ++dir;\n            if(dir == 4)dir = 0;\n        }\n        else if(op.equals(\"LEFT\")){\n            --dir;\n            if(dir == -1)dir = 3;\n        }\n        else if(op.equals(\"FORWARD\")){\n            Walk = in.nextInt();\n            x = x + Walk*dx[dir];\n            if(x > w)x = w;\n            if(x <= 0)x=1;\n            y = y + Walk*dy[dir];\n            if(y > h)y = h;\n            if(y <= 0)y=1;\n        }\n        else if(op.equals(\"BACKWARD\")){\n            Walk = in.nextInt();\n            x = x - Walk*dx[dir];\n            if(x > w)x = w;\n            else if(x < 0)x = 1;\n            y = y - Walk*dy[dir];\n            if(y > h)y = h;\n            else if(y <= 0)y = 1;\n        }\n        }\n        System.out.println(x + \" \" + y);\n    }\n \n    }\n \n \n \n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nclass Main{\n\tstatic int vectors[][] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\twhile(true){\n\t\t\t\t//String str = br.readLine();\n\t\t\t\tString strs[] = br.readLine().split(\"[ \\t]\");\n\t\t\t\tint max_x = Integer.parseInt(strs[0]);\n\t\t\t\tint max_y = Integer.parseInt(strs[1]);\n\n\t\t\t\tif(max_x == 0) return;\n\t\t\t\tint direction = 0;\n\t\t\t\tint x = 0;\n\t\t\t\tint y = 0;\n\n\t\t\t\twhile(true){\n\t\t\t\t\t//System.out.println(direction + \" \" + x + \" \" + y);\n\t\t\t\t\tstrs = br.readLine().split(\"[ \\t]\");\n\t\t\t\t\tif(strs[0].equals(\"FORWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = vectors[direction];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 0) x = 0;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 0) y = 0;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"BACKWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = new int[2];\n\t\t\t\t\t\tvector[0] = 0 - vectors[direction][0];\n\t\t\t\t\t\tvector[1] = 0 - vectors[direction][1];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 0) x = 0;\n\t\t\t\t\t\tif(x >= max_x) x = max_x-1;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 0) y = 0;\n\t\t\t\t\t\tif(y >= max_y) y = max_y-1;\n\n\t\t\t\t\t}else if(strs[0].equals(\"RIGHT\")){\n\t\t\t\t\t\tdirection++;\n\t\t\t\t\t\tdirection = direction % 4;\n\n\t\t\t\t\t}else if(strs[0].equals(\"LEFT\")){\n\t\t\t\t\t\tdirection--;\n\t\t\t\t\t\tif(direction < 0) direction += 4;;\n\n\t\t\t\t\t}else if(strs[0].equals(\"STOP\")){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t//System.out.println(x + \" \" + y);\n\t\t\t\t}\n\t\t\t\tSystem.out.println((x+1) + \" \" + (y+1));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tSystem.err.print(e);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "//Aizu Online Judge Volume11-1104\nimport java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\t\n\t\twhile(true) {\n\t\t\tint xMax = scanner.nextInt();\n\t\t\tint yMax = scanner.nextInt();\n\t\t\t\n\t\t\tif (xMax == 0 && yMax == 0) {return;}\n\t\t\t\n\t\t\tRobotInstance rob = new RobotInstance(xMax, yMax);\n\t\t\t\n\t\t\twhile(true) {\n\t\t\t\tString s = scanner.next();\n\t\t\t\tif (s.equals(\"STOP\")) break;\n\t\t\t\tif (s.equals(\"RIGHT\")) {\n\t\t\t\t\trob.changeDirection(true);\n\t\t\t\t}\n\t\t\t\tif (s.equals(\"LEFT\")) {\n\t\t\t\t\trob.changeDirection(false);\n\t\t\t\t}\n\t\t\t\tif (s.equals(\"FORWARD\")) {\n\t\t\t\t\tint n = scanner.nextInt();\n\t\t\t\t\trob.forward(n);\n\t\t\t\t}\n\t\t\t\tif (s.equals(\"BACKWARD\")) {\n\t\t\t\t\tint n = scanner.nextInt();\n\t\t\t\t\trob.backward(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(String.format(\"%1$d %2$d\", rob.getX(), rob.getY()));\n\t\t}\n\t}\n\n\tprivate static class RobotInstance {\n\t\tint xMax, yMax;\n\t\tint x, y;\n\t\tint vx, vy;\n\t\tint direction;\n\t\t\n\t\tpublic RobotInstance(int xMax, int yMax) {\n\t\t\tthis.xMax = xMax;\n\t\t\tthis.yMax = yMax;\n\t\t\tdirection = 1;\n\t\t\tsetVxVy();\n\t\t\tx = 1;\n\t\t\ty = 1;\n\t\t}\n\t\t\n\t\tpublic void forward(int n) {\n\t\t\tx = x + n * vx;\n\t\t\ty = y + n * vy;\n\t\t\t\n\t\t\tcheckBorder();\n\t\t}\n\n\t\tpublic void backward(int n) {\n\t\t\tx = x - n * vx;\n\t\t\ty = y - n * vy;\n\t\t\t\n\t\t\tcheckBorder();\n\t\t}\n\t\t\n\t\tpublic void changeDirection(boolean isRight) {\n\t\t\tif (isRight) {\n\t\t\t\tdirection += 1;\n\t\t\t} else {\n\t\t\t\tdirection -= 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (direction == 0) {direction = 4;}\n\t\t\tif (direction == 5) {direction = 1;}\n\t\t\t\n\t\t\tsetVxVy();\n\t\t}\n\t\t\n\t\tprivate void checkBorder() {\n\t\t\tif (x < 1) {x = 1;}\n\t\t\tif (x > xMax) {x = xMax;}\n\t\t\tif (y < 1) {y = 1;}\n\t\t\tif (y > yMax) {y = yMax;}\n\t\t}\n\t\t\n\t\tprivate void setVxVy() {\n\t\t\tif (direction == 1) {\n\t\t\t\tvx = 0; vy = 1;\n\t\t\t}\n\t\t\tif (direction == 2) {\n\t\t\t\tvx = 1; vy = 0;\n\t\t\t}\n\t\t\tif (direction == 3) {\n\t\t\t\tvx = 0; vy = -1;\n\t\t\t}\n\t\t\tif (direction == 4) {\n\t\t\t\tvx = -1; vy = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic int getX() {\n\t\t\treturn x;\n\t\t}\n\t\tpublic int getY() {\n\t\t\treturn y;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main{\n    int NORTH = 0;\n    int EAST = 1;\n    int SOUTH = 2;\n    int WEST = 3;\n    int[] dx = { 0, 1, 0, -1};\n    int[] dy = { 1, 0, -1, 0};\n\n    void run(){\n        Scanner sc = new Scanner(System.in);\n        while(true){\n            int w = sc.nextInt();\n            int h = sc.nextInt();\n            if(w == 0 && h == 0){\n                break;\n            }\n            int[][] field = new int[h][w];\n            int direction = NORTH;\n            int x = 0;\n            int y = 0;\n            while(true){\n                String command = sc.next();\n                if(command.equals(\"STOP\")){\n                        break;\n                    }\n                if(command.equals(\"FORWARD\")){\n                    int n = sc.nextInt();\n                    for(int i = 0;i < n;i++){\n                        int nx = x + dx[direction];\n                        int ny = y + dy[direction];\n                        if(nx < 0 || nx >= w || ny < 0 || ny >= h){\n                            break;\n                        }\n                        x = nx;\n                        y = ny;\n                    }\n                }\n                if(command.equals(\"BACKWARD\")){\n                    int n = sc.nextInt();\n                    for(int i = 0;i < n;i++){\n                        int nx = x - dx[direction];\n                        int ny = y - dy[direction];\n                        if(nx < 0 || nx >= w || ny < 0 || ny >= h){\n                            break;\n                        }\n                        x = nx;\n                        y = ny;\n                    }\n                }\n                if(command.equals(\"RIGHT\")){\n                    direction = (direction + 1) % 4;\n                    }\n                if(command.equals(\"LEFT\")){\n                    direction = (direction + 3) % 4;\n                }\n\n            }\n            x += 1;\n            y += 1;\n            System.out.println(x + \" \" + y);\n        }\n    }\n    public static void main(String[] args){\n        new Main().run();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\twhile(scan.hasNext()){\n\t\t\tint x = scan.nextInt();\n\t\t\tint y = scan.nextInt();\n\t\t\tif(x == 0 && y == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint i = 1;\n\t\t\tint j = 1;\n\t\t\tint theta = 90;\n\t\t\twhile(true){\n\t\t\t\tString str = scan.next();\n\t\t\t\tif(str.equals(\"STOP\")){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(str.equals(\"LEFT\")){\n\t\t\t\t\ttheta += 90;\n\t\t\t\t\tcontinue;\n\t\t\t\t}else if(str.equals(\"RIGHT\")){\n\t\t\t\t\ttheta -= 90;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tint step = scan.nextInt();\n\t\t\t\tif(str.equals(\"FORWARD\")){\n\t\t\t\t\ti += step*Math.cos(theta*Math.PI/180);\n\t\t\t\t\tj += step*Math.sin(theta*Math.PI/180);\n\t\t\t\t}else{\n\t\t\t\t\ti -= step*Math.cos(theta*Math.PI/180);\n\t\t\t\t\tj -= step*Math.sin(theta*Math.PI/180);\n\t\t\t\t}\n\t\t\t\ti = (i < 1)?1:(i > x)?x:i;\n\t\t\t\tj = (j < 1)?1:(j > y)?y:j;\n\t\t\t}\n\t\t\tSystem.out.println(i + \" \" + j);\n        }\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));       \n\t\ttry {\n\t\t\tString line;\n\t\t\twhile(true){\n\t\t\t\t/* input */\n\t\t\t\tline = br.readLine();\n\t\t\t\tint c = Integer.parseInt(line.split(\"[ \\t]\")[0]), r = Integer.parseInt(line.split(\"[ \\t]\")[1]);\n\t\t\t\tif(c==0&&r==0){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tint[] robot = new int[3];\n\t\t\t\t\n\t\t\t\t//first and second index indicates the current position\n\t\t\t\trobot[0] = 1;\n\t\t\t\trobot[1] = 1;\n\t\t\t\t//third index shows direction: 0:north, 1:east, 2:south, 3:west\n\t\t\t\trobot[2] = 0;\n\t\t\t\t/* commands */\n\t\t\t\twhile(true){\n\t\t\t\t\tline = br.readLine();\n\t\t\t\t\tif(line.indexOf(\"STOP\") > -1){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if(line.indexOf(\"RIGHT\") > -1){\n\t\t\t\t\t\trobot[2] = (robot[2] + 1) % 4; \n\t\t\t\t\t} else if(line.indexOf(\"LEFT\") > -1){\n\t\t\t\t\t\trobot[2] = (robot[2] + 3) % 4; \n\t\t\t\t\t} else {\n\t\t\t\t\t\tString com = line.split(\" \")[0];\n\t\t\t\t\t\tint n = Integer.parseInt(line.split(\"[ \\t]\")[1]);\n\t\t\t\t\t\tif(com.indexOf(\"FORWARD\") > -1){\n\t\t\t\t\t\t\tswitch(robot[2]){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\trobot[1] += n;\n\t\t\t\t\t\t\t\tif(robot[1] > r) robot[1] = r;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\trobot[0] += n;\n\t\t\t\t\t\t\t\tif(robot[0] > c) robot[0] = c;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\trobot[1] -= n;\n\t\t\t\t\t\t\t\tif(robot[1] < 1) robot[1] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\trobot[0] -= n;\n\t\t\t\t\t\t\t\tif(robot[0] < 1) robot[0] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(com.indexOf(\"BACKWARD\") > -1){\n\t\t\t\t\t\t\tswitch(robot[2]){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\trobot[1] -= n;\n\t\t\t\t\t\t\t\tif(robot[1] < 1) robot[1] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\trobot[0] -= n;\n\t\t\t\t\t\t\t\tif(robot[0] < 1) robot[0] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\trobot[1] += n;\n\t\t\t\t\t\t\t\tif(robot[1] > r) robot[1] = r;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\trobot[0] += n;\n\t\t\t\t\t\t\t\tif(robot[0] > c) robot[0] = c;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t/* output */\n\t\t\t\tSystem.out.println(robot[0] + \" \" + robot[1]);\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class AOJ1104{\n\n    public static void main(String[] args){\n\tint Walk,x,y,w,h;\n\tScanner in = new Scanner(System.in);\n\tfinal int[] dx = {0,1,0,-1}; \n\tfinal int[] dy = {1,0,-1,0};\n\tint dir;\n       \n\twhile(true){\n\t    w = in.nextInt();\n\t    h = in.nextInt();\t       \n\n\t    if(w+h == 0)break;\n\t    dir = 0;\n\t    x=y=1;\n\t    while(true){\n\t\tString op = in.next();\n\t\tif(op.equals(\"STOP\"))break;\n\n\t\tif(op.equals(\"RIGHT\")){\n\t\t    ++dir;\n\t\t    if(dir == 4)dir = 0;\n\t\t}\n\t\telse if(op.equals(\"LEFT\")){\n\t\t    --dir;\n\t\t    if(dir == -1)dir = 3;\n\t\t}\n\t\telse if(op.equals(\"FORWARD\")){\n\t\t    Walk = in.nextInt();\n\t\t    x = x + Walk*dx[dir];\n\t\t    if(x > w)x = w;\n\t\t    if(x <= 0)x=1;\n\t\t    y = y + Walk*dy[dir];\n\t\t    if(y > h)y = h;\n\t\t    if(y <= 0)y=1;\n\t\t}\n\t\telse if(op.equals(\"BACKWARD\")){\n\t\t    Walk = in.nextInt();\n\t\t    x = x - Walk*dx[dir];\n\t\t    if(x > w)x = w;\n\t\t    else if(x < 0)x = 1;\n\t\t    y = y - Walk*dy[dir];\n\t\t    if(y > h)y = h;\n\t\t    else if(y <= 0)y = 1;\n\t\t}\n\t    }\n\t    System.out.println(x + \" \" + y);\n\t}\n\n    }\n\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tint w = sc.nextInt();\n\t\t\tif(w == 0)break;\n\t\t\tint h = sc.nextInt();\n\t\t\tint x = 1;\n\t\t\tint y = 1;\n\t\t\tint facing = 0; //UP RIGHT DOWN LEFT!\n\t\t\t\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tString com = sc.next();\n\t\t\t\tfacing = facing%4;\n\t\t\t\tif(facing < 0)facing += 4;\n\t\t\t\n\t\t\t\tif(com.equals(\"STOP\"))\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(x + \" \" + y);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(com.equals(\"RIGHT\"))\n\t\t\t\t{\n\t\t\t\t\tfacing += 1;\n\t\t\t\t}\n\t\t\t\telse if(com.equals(\"LEFT\"))\n\t\t\t\t{\n\t\t\t\t\tfacing -= 1;\n\t\t\t\t}\n\t\t\t\tif(com.equals(\"FORWARD\"))\n\t\t\t\t{\n\t\t\t\t\tint arg = sc.nextInt();\n\t\t\t\t\tif(facing == 0)y+=arg;\n\t\t\t\t\tif(facing == 1)x+=arg;\n\t\t\t\t\tif(facing == 2)y-=arg;\n\t\t\t\t\tif(facing == 3)x-=arg;\n\t\t\t\t}\n\t\t\t\telse if(com.equals(\"BACKWARD\"))\n\t\t\t\t{\n\t\t\t\t\tint arg = sc.nextInt();\n\t\t\t\t\tif(facing == 0)y-=arg;\n\t\t\t\t\tif(facing == 1)x-=arg;\n\t\t\t\t\tif(facing == 2)y+=arg;\n\t\t\t\t\tif(facing == 3)x+=arg;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(x > w) x = w;\n\t\t\t\tif(y > h) y = h;\n\t\t\t\tif(x < 1) x = 1;\n\t\t\t\tif(y < 1) y = 1;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\n\t}\n\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic Main(){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tint m = sc.nextInt();\n\t\t\tint ns = 1;\n\t\t\tint ew = 0;\n\t\t\tint x = 1;\n\t\t\tint y = 1;\n\t\t\tif(n == 0 && m == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\tif(str.equals(\"STOP\")){\n\t\t\t\t\tSystem.out.println(x+\" \"+y);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(str.equals(\"RIGHT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"LEFT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = 1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"FORWARD\")){\n\t\t\t\t\tint d = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx += ew*d;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty += ns*d;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tint di = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx -= ew*di;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty -= ns*di;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(x < 1 || x > n || y < 1 || y > m){\n\t\t\t\t\tx = n/2;\n\t\t\t\t\tif(x == 0) x = 1;\n\t\t\t\t\ty = m/2;\n\t\t\t\t\tif(y == 0) y = 1;\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int w = sc.nextInt();\n\t\t\tfinal int h = sc.nextInt();\n\t\t\t\n\t\t\tif(h == 0 && w == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint cur_x = 1;\n\t\t\tint cur_y = 1;\n\t\t\tint move = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\t\n\t\t\t\tif(\"STOP\".equals(str)){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(\"FORWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? h : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? w : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y - m < 1 ? 1 : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x - m < 1 ? 1 : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"BACKWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y - m < 1 ? 1 : cur_y - m; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x - m < 1 ? 1 : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? h : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? w : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"RIGHT\".equals(str)){\n\t\t\t\t\tmove = move >= 3 ? 0 : move + 1;\n\t\t\t\t}else if(\"LEFT\".equals(str)){\n\t\t\t\t\tmove = move <= 0 ? 3 : move - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(cur_x + \" \" + cur_y);\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nclass Main{\n\tstatic int vectors[][] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\twhile(true){\n\t\t\t\t//String str = br.readLine();\n\t\t\t\tString strs[] = br.readLine().split(\"[ \\t]\");\n\t\t\t\tint max_x = Integer.parseInt(strs[0]);\n\t\t\t\tint max_y = Integer.parseInt(strs[1]);\n\n\t\t\t\tif(max_x == 0) return;\n\t\t\t\tint direction = 0;\n\t\t\t\tint x = 1;\n\t\t\t\tint y = 1;\n\n\t\t\t\twhile(true){\n\t\t\t\t\t//System.out.println(direction + \" \" + x + \" \" + y);\n\t\t\t\t\tstrs = br.readLine().split(\"[ \\t]\");\n\t\t\t\t\tif(strs[0].equals(\"FORWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = vectors[direction];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 1) x = 1;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 1) y = 1;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"BACKWARD\")){\n\t\t\t\t\t\tint n = Integer.parseInt(strs[1]);\n\t\t\t\t\t\tint vector[] = new int[2];\n\t\t\t\t\t\tvector[0] = 0 - vectors[direction][0];\n\t\t\t\t\t\tvector[1] = 0 - vectors[direction][1];\n\t\t\t\t\t\tx += vector[0] * n;\n\t\t\t\t\t\tif(x < 1) x = 1;\n\t\t\t\t\t\tif(x > max_x) x = max_x;\n\t\t\t\t\t\ty += vector[1] * n;\n\t\t\t\t\t\tif(y < 1) y = 1;\n\t\t\t\t\t\tif(y > max_y) y = max_y;\n\n\t\t\t\t\t}else if(strs[0].equals(\"RIGHT\")){\n\t\t\t\t\t\tdirection++;\n\t\t\t\t\t\tdirection = direction % 4;\n\n\t\t\t\t\t}else if(strs[0].equals(\"LEFT\")){\n\t\t\t\t\t\tdirection--;\n\t\t\t\t\t\tif(direction < 0) direction += 4;;\n\n\t\t\t\t\t}else if(strs[0].equals(\"STOP\")){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t//System.out.println(x + \" \" + y);\n\t\t\t\t}\n\t\t\t\tSystem.out.println(x + \" \" + y);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tSystem.err.print(e);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.awt.geom.Point2D;\nimport java.lang.reflect.Array;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\t\n\tScanner in = new Scanner(System.in);\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n\tpublic Main(){\t\t\n\t\tnew AOJ1104();\n\t}\n\t\n\tclass AOJ1104{\n\t\tint x,y,mx,my,muki=3;\n\t\tpublic AOJ1104() {\n\t\t\twhile(true){\n\t\t\t\tx = 1;y = 1;\n\t\t\t\tmx = in.nextInt();\n\t\t\t\tmy = in.nextInt();\n\t\t\t\tif(mx+my==0)break;\n\t\t\t\twhile(true){\n\t\t\t\t\tif(doit(in.next()))break;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(x+\" \"+y);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tboolean doit(String meirei){\n\t\t\tint num=0;\n\t\t\tif(meirei.equals(\"FORWARD\")||meirei.equals(\"BACKWARD\")){\n\t\t\t\tnum=in.nextInt();\n\t\t\t\tif(meirei.equals(\"FORWARD\")){\n\t\t\t\t\tint nx[] = {1,0,-1,0};\n\t\t\t\t\tint ny[] = {0,-1,0,1};\n\t\t\t\t\tfor(int i=0;i<num;i++){\n\t\t\t\t\t\tif(x+nx[muki]<=0||x+nx[muki]>mx||y+ny[muki]<=0||y+ny[muki]>my)break;\n\t\t\t\t\t\tx+=nx[muki];\n\t\t\t\t\t\ty+=ny[muki];\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tint nx[] = {-1,0,1,0};\n\t\t\t\t\tint ny[] = {0,1,0,-1};\n\t\t\t\t\tfor(int i=0;i<num;i++){\n\t\t\t\t\t\tif(x+nx[muki]<=0||x+nx[muki]>mx||y+ny[muki]<=0||y+ny[muki]>my)break;\n\t\t\t\t\t\tx+=nx[muki];\n\t\t\t\t\t\ty+=ny[muki];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(meirei.equals(\"STOP\")){\n\t\t\t\treturn true;\n\t\t\t}else if(meirei.equals(\"RIGHT\")){\n\t\t\t\t//右=0,下=1,左=2,上=3(向き)\n\t\t\t\tmuki = (muki+1)%4;\n\t\t\t}else if(meirei.equals(\"LEFT\")){\n\t\t\t\tmuki = (muki+3)%4;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t\t\t\n\t\t\t\n\tclass AOJ2503{\n\t\tint MAX = 0;\n\t\tpublic AOJ2503() {\n\t\t\tScanner in = new Scanner(System.in);\n\t\t\tint n = in.nextInt();\n\t\t\tint m = in.nextInt();\n\n\t\t\tint[][] cost = new int[n][n];\n\n\t\t\tint[] dp = new int[n];\n\t\t\tfor(int i=0;i<n*n;i++){\n\t\t\t\tcost[i/n][i%n]=MAX;\n\t\t\t}\n\t\t\tfor(int i=0;i<m;i++){\n\t\t\t\tint a = in.nextInt();\n\t\t\t\tint b = in.nextInt();\n\t\t\t\tcost[a][b]=in.nextInt();\n\t\t\t}\t\n\t\t\t//\t\t\tTODO 一番大きいパスを0のポイントからn-1のポイントまでの\n\n\t\t\tfor(int s=1;s<n;s++){\n\t\t\t\tfor(int i=0;i<=s;i++){\n\t\t\t\t\tif(cost[i][s]==MAX)continue;\n\t\t\t\t\tdp[s]=Math.max(dp[s],dp[i]+cost[i][s]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int s=0;s<n;s++)for(int i=0;i<n;i++){\n\t\t\t\tif(cost[s][i]==MAX)continue;\n\t\t\t\tdp[i]=Math.max(dp[s]+cost[s][i],dp[i]);\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++)System.out.print(dp[i]+\" \");\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(dp[n-1]);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint w = sc.nextInt();\n\t\t\tint h = sc.nextInt();\n\t\t\tif(w==0 && h==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tint t;\n\t\t\tint d = 0;\n\t\t\tint x = 0;\n\t\t\tint y = 0;\n\t\t\tchar c;\n\t\t\twhile(true){\n\t\t\t\ts = sc.next();\n\t\t\t\tc = s.charAt(0);\n\t\t\t\tif(c=='S'){\n\t\t\t\t\tSystem.out.println((x+1) + \" \" + (y+1));\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(c=='R'){\n\t\t\t\t\td++;\n\t\t\t\t\tif(d==4) d=0;\n\t\t\t\t}else if(c=='L'){\n\t\t\t\t\td--;\n\t\t\t\t\tif(d==-1) d=3;\n\t\t\t\t}else if((c=='F' && d==0) || (c=='B' && d==2)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tif(y+t<h) y+=t;\n\t\t\t\t}else if((c=='F' && d==1) || (c=='B' && d==3)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tif(x+t<w) x+=t;\n\t\t\t\t}else if((c=='F' && d==2) || (c=='B' && d==0)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tif(y-t>=0) y-=t;\n\t\t\t\t}else if((c=='F' && d==3) || (c=='B' && d==1)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tif(x-t>=0) x-=t;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n\n    Robot r;\n    public int w, h, t;\n    String com;\n\n    void run(){\n\twhile(sc.hasNext()){\n\t    w = sc.nextInt();\n\t    h = sc.nextInt();\n\t    if(w==0) break;\n\n\t    r = new Robot();\n\t    com = sc.next();\n\t    while(!com.equals(\"STOP\")){\n\n\t\tif(com.equals(\"FORWARD\"))\n\t\t    r.forward(sc.nextInt());\n      \n\t\telse if(com.equals(\"BACKWARD\"))\n\t\t    r.forward((sc.nextInt())*(-1));\n\n\t\telse if(com.equals(\"RIGHT\"))\n\t\t    r.turnR();\n\n\t\telse if(com.equals(\"LEFT\"))\n\t\t    r.turnL();\n\n\t\tcom = sc.next();\n\t    }\n\t    System.out.println(r.getX()+\" \"+r.getY());\n\t}\n    }\n\n    class Robot{\n\tint x, y;\n\tint d; // 0(y+), 1(x+), 2(y-), 3(x-)\n\tRobot(){\n\t    x = 1;\n\t    y = 1;\n\t    d = 0;\n\t}\n\n\tvoid forward(int g){\n\t    if(d==0) y = y+g<h ? y+g : h;  \n\t    if(d==1) x = x+g<w ? x+g : w;  \n\t    if(d==2) y = y-g>1 ? y-g : 1;\t  \n\t    if(d==3) x = x-g>1 ? x-g : 1;\n\t}\n\n\tint getX(){ return x; }\n\tint getY(){ return y; }\n\t\n\tvoid turnR(){ d = (d+1)%4; }\n\tvoid turnL(){ d = (d+4-1)%4; }\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile (true)\n\t\t{\n\t\t\tint m = sc.nextInt();\n\t\t\tint n = sc.nextInt();\n\t\t\tif (n == 0 && m == 0)\n\t\t\t\tbreak;\n\t\t\tint x = 1;\n\t\t\tint y = 1;\n\t\t\tint dx[] = { 0, 1, 0,-1};\n\t\t\tint dy[] = { 1, 0,-1, 0};\n\t\t\tint d = 0;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tString str = sc.next();\n\t\t\t\tif (str.equals(\"STOP\"))\n\t\t\t\t{\n\t\t\t\t\tSystem.out.printf(\"%d %d\\n\", x, y);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (str.equals(\"FORWARD\"))\n\t\t\t\t{\n\t\t\t\t\tint k = sc.nextInt();\n\t\t\t\t\tfor (int i = 0; i < k; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (x + dx[d] < 1 || m < x + dx[d])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tx += dx[d];\n\t\t\t\t\t}\n\t\t\t\t\tfor (int i = 0; i < k; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (y + dy[d] < 1 || n < y + dy[d])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\ty += dy[d];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (str.equals(\"BACKWARD\"))\n\t\t\t\t{\n\t\t\t\t\tint k = sc.nextInt();\n\t\t\t\t\tfor (int i = 0; i < k; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (x - dx[d] < 1 || m < x - dx[d])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tx -= dx[d];\n\t\t\t\t\t}\n\t\t\t\t\tfor (int i = 0; i < k; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (y - dy[d] < 1 || n < y - dy[d])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\ty -= dy[d];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (str.equals(\"RIGHT\"))\n\t\t\t\t{\n\t\t\t\t\td++;\n\t\t\t\t\tif (d == 4) d = 0;\n\t\t\t\t}\n\t\t\t\telse if (str.equals(\"LEFT\"))\n\t\t\t\t{\n\t\t\t\t\td--;\n\t\t\t\t\tif (d == -1) d = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint w = sc.nextInt();\n\t\t\tint h = sc.nextInt();\n\t\t\tif(w==0 && h==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tint t;\n\t\t\tint d = 0;\n\t\t\tint x = 0;\n\t\t\tint y = 0;\n\t\t\tchar c;\n\t\t\twhile(true){\n\t\t\t\ts = sc.next();\n\t\t\t\tc = s.charAt(0);\n\t\t\t\tif(c=='S'){\n\t\t\t\t\tSystem.out.println((x+1) + \" \" + (y+1));\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(c=='R'){\n\t\t\t\t\td++;\n\t\t\t\t\tif(d==4) d=0;\n\t\t\t\t}else if(c=='L'){\n\t\t\t\t\td--;\n\t\t\t\t\tif(d==-1) d=3;\n\t\t\t\t}else if((c=='F' && d==0) || (c=='B' && d==2)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\ty += t;\n\t\t\t\t\tif(y>h-1) y=h-1;\n\t\t\t\t}else if((c=='F' && d==1) || (c=='B' && d==3)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tx += t;\n\t\t\t\t\tif(x>w-1) y=w-1;\n\t\t\t\t}else if((c=='F' && d==2) || (c=='B' && d==0)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\ty -= t;\n\t\t\t\t\tif(y<0) y=0;\n\t\t\t\t}else if((c=='F' && d==3) || (c=='B' && d==1)){\n\t\t\t\t\tt = sc.nextInt();\n\t\t\t\t\tx -= t;\n\t\t\t\t\tif(x<0) x=0;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));       \n\t\ttry {\n\t\t\tString line;\n\t\t\twhile(true){\n\t\t\t\t/* input */\n\t\t\t\tline = br.readLine();\n\t\t\t\tint c = Integer.parseInt(line.split(\"[ \\t]\")[0]), r = Integer.parseInt(line.split(\"[ \\t]\")[1]);\n\t\t\t\tif(c==0&&r==0){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tint[] robot = new int[3];\n\t\t\t\t\n\t\t\t\t//first and second index indicates the current position\n\t\t\t\trobot[0] = 1;\n\t\t\t\trobot[1] = 1;\n\t\t\t\t//third index shows direction: 0:north, 1:east, 2:south, 3:west\n\t\t\t\trobot[2] = 0;\n\t\t\t\t/* commands */\n\t\t\t\twhile(true){\n\t\t\t\t\tline = br.readLine();\n\t\t\t\t\tif(line.indexOf(\"STOP\") > -1){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if(line.indexOf(\"RIGHT\") > -1){\n\t\t\t\t\t\trobot[2] = (robot[2] + 1) % 4; \n\t\t\t\t\t} else if(line.indexOf(\"LEFT\") > -1){\n\t\t\t\t\t\trobot[2] = (robot[2] + 3) % 4; \n\t\t\t\t\t} else {\n\t\t\t\t\t\tString com = line.split(\" \")[0];\n\t\t\t\t\t\tint n = Integer.parseInt(line.split(\"[ \\t]\")[1]);\n\t\t\t\t\t\tif(com.indexOf(\"FORWARD\") > -1){\n\t\t\t\t\t\t\tswitch(robot[2]){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\trobot[1] += n;\n\t\t\t\t\t\t\t\tif(robot[1] > r) robot[1] = r;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\trobot[0] += n;\n\t\t\t\t\t\t\t\tif(robot[0] > c) robot[0] = c;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\trobot[1] -= n;\n\t\t\t\t\t\t\t\tif(robot[1] < 1) robot[1] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\trobot[0] -= n;\n\t\t\t\t\t\t\t\tif(robot[0] < 1) robot[0] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(com.indexOf(\"BACKWARD\") > -1){\n\t\t\t\t\t\t\tswitch(robot[2]){\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\trobot[1] -= n;\n\t\t\t\t\t\t\t\tif(robot[1] < r) robot[1] = r;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\trobot[0] -= n;\n\t\t\t\t\t\t\t\tif(robot[0] < c) robot[0] = c;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\trobot[1] += n;\n\t\t\t\t\t\t\t\tif(robot[1] > 1) robot[1] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\trobot[0] += n;\n\t\t\t\t\t\t\t\tif(robot[0] > 1) robot[0] = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t/* output */\n\t\t\t\tSystem.out.println(robot[0] + \" \" + robot[1]);\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Bot{\n\tint x = 1, y = 1 , dir = 0;\n\tprivate int width, height;\n\t\n\tprivate int[][] xy = {\n\t\t\t{0,1},{1,0},{0,-1},{-1,0}\n\t};\n\t\n\tpublic Bot(int w, int h) {\n\t\twidth = w;\n\t\theight = h;\n\t}\n\t\n\t\n\tpublic void  forward(int step){\n\t\tx += xy[dir][0]*step;\n\t\ty += xy[dir][1]*step;\n\t\tbeProperly();\n\t}\n\t\n\tpublic void backward(int step){\n\t\tx -= xy[dir][0]*step;\n\t\ty -= xy[dir][1]*step;\n\t\tbeProperly();\n\t}\n\t\n\tpublic void right(){\n\t\tdir = (dir+1)%4;\n\t}\n\t\n\tpublic void left(){\n\t\tif(--dir == -1) dir = 3;\n\t}\n\t\n\tprivate void beProperly(){\n\t\tif(x > width) x = width;\n\t\tif(y > height) y = height;\n\t\tif(x < 1) x = 1;\n\t\tif(y < 1) y = 1;\n\t}\n}\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sn = new Scanner(System.in);\n\t\t\n\t\t\n\t\twhile(true){\n\t\t\tint w = sn.nextInt(), h = sn.nextInt();\n\t\t\tif(w == 0 && h == 0) break;\n\t\t\tBot bot = new Bot(w, h);\n\t\t\twhile(true){\n\n\t\t\t\tString go = sn.next();\n\t\t\t\tint step = sn.nextInt();\n\t\t\t\tString dir = sn.next();\n\t\t\t\t\n\t\t\t\tif(go.equals(\"FORWARD\")) bot.forward(step);\n\t\t\t\telse if(go.equals(\"BACKWARD\")) bot.backward(step);\n\t\t\t\t\n\t\t\t\tif(dir.equals(\"RIGHT\")) bot.right();\n\t\t\t\telse if(dir.equals(\"LEFT\")) bot.left();\n\t\t\t\telse if(dir.equals(\"STOP\")) break;\n\t\t\t}\n\t\t\tSystem.out.println(bot.x+\" \"+bot.y);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Bot{\n\tint x = 1, y = 1 , dir = 0;\n\tprivate int width, height;\n\t\n\tprivate int[][] xy = {\n\t\t\t{0,1},{1,0},{0,-1},{-1,0}\n\t};\n\t\n\tpublic Bot(int w, int h) {\n\t\twidth = w;\n\t\theight = h;\n\t}\n\t\n\t\n\tpublic void  forward(int step){\n\t\tx += xy[dir][0]*step;\n\t\ty += xy[dir][1]*step;\n\t\tbeProperly();\n\t}\n\t\n\tpublic void backward(int step){\n\t\tx -= xy[dir][0]*step;\n\t\ty -= xy[dir][1]*step;\n\t\tbeProperly();\n\t}\n\t\n\tpublic void right(){\n\t\tdir = (dir+1)%4;\n\t}\n\t\n\tpublic void left(){\n\t\tif(--dir == -1) dir = 3;\n\t}\n\t\n\tprivate void beProperly(){\n\t\tif(x > width) x = width;\n\t\tif(y > height) y = height;\n\t\tif(x < 1) x = 1;\n\t\tif(y < 1) y = 1;\n\t}\n}\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sn = new Scanner(System.in);\n\n\t\twhile(true){\n\t\t\tint w = sn.nextInt(), h = sn.nextInt();\n\t\t\tif(w == 0 && h == 0) break;\n\t\t\tBot bot = new Bot(w, h);\n\t\t\twhile(true){\n\n\t\t\t\tString cmd = sn.nextLine();\n\t\t\t\tString[] go = cmd.split(\" \");\n\t\t\t\tString dir;\n\t\t\t\t\n\t\t\t\tif(go.length == 2){\n\t\t\t\t\tint step = new Integer(go[1]);\n\t\t\t\t\tif(go[0].equals(\"FORWARD\")) bot.forward(step);\n\t\t\t\t\telse if(go[0].equals(\"BACKWARD\")) bot.backward(step);\n\t\t\t\t} else{\n\t\t\t\t\t\n\t\t\t\t\tif(go[0].equals(\"RIGHT\")) bot.right();\n\t\t\t\t\telse if(go[0].equals(\"LEFT\")) bot.left();\n\t\t\t\t\telse if(go[0].equals(\"STOP\")) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(bot.x+\" \"+bot.y);\n\t\t}\t\t\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tint INF = 1 << 28;\n\tdouble EPS = 1e-9;\n\n\tint m, n;\n\tint[] dx = { 0, 1, 0, -1 };\n\tint[] dy = { 1, 0, -1, 0 };\n\n\tvoid run() {\n\t\tfor (;;) {\n\t\t\tm = sc.nextInt();\n\t\t\tn = sc.nextInt();\n\t\t\tif ((m | n) == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint x = 1, y = 1;\n\t\t\tint k = 0;\n\t\t\tfor (;;) {\n\t\t\t\tString s = sc.next();\n\t\t\t\tif (s.equals(\"STOP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (s.equals(\"FORWARD\")) {\n\t\t\t\t\tint d = sc.nextInt();\n\t\t\t\t\tx += dx[k] * d;\n\t\t\t\t\ty += dy[k] * d;\n\t\t\t\t} else if (s.equals(\"BACKWARD\")) {\n\t\t\t\t\tint d = sc.nextInt();\n\t\t\t\t\tx -= dx[k] * d;\n\t\t\t\t\ty -= dy[k] * d;\n\t\t\t\t} else if (s.equals(\"RIGHT\")) {\n\t\t\t\t\tk = (k + 1) % 4;\n\t\t\t\t} else if (s.equals(\"LEFT\")) {\n\t\t\t\t\tk = (k + 3) % 4;\n\t\t\t\t}\n\t\t\t\tx = max(1, min(m, x));\n\t\t\t\ty = max(1, min(n, y));\n\t\t\t}\n\t\t\tprintln(x + \" \" + y);\n\t\t}\n\t}\n\n\tvoid solve() {\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s) {\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s) {\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n\tpublic static void main(String[] args){\n        Scanner sc=new Scanner(System.in);\n        int mX,mY;\n        int ang=0;\n        String[] puts=new String[50];\n        \n        do{\n\t\t\tint x=sc.nextInt();\n\t        int y=sc.nextInt();\n\t\t\tString s=sc.next();\n\t\t\twhile(!(s.equals(\"STOP\"))){\n\t            if(s.equals(\"FORWARD\"){\n\t\t\t\t\tint f=sc.nextInt();\n\t\t\t\t\tswitch(ang){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tfor(int i=0;i<f;i++){\n\t\t\t\t\t\t\t\tif(x!=100){\n\t\t\t\t\t\t\t\t\tx++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tfor(int i=0;i<f;i++){\n\t\t\t\t\t\t\t\tif(y!=100){\n\t\t\t\t\t\t\t\t\ty++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tfor(int i=0;i<f;i++){\n\t\t\t\t\t\t\t\tif(x!=0){\n\t\t\t\t\t\t\t\t\tx--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tfor(int i=0;i<f;i++){\n\t\t\t\t\t\t\t\tif(y!=0){\n\t\t\t\t\t\t\t\t\ty--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(s.equals(\"RIGHT\"){\n\t\t\t\t\tif(ang!=3){\n\t\t\t\t\t\tang++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tang=0;\n\t\t\t\t\t}\n\t\t\t\t}else if(s.equals(\"LEFT\"){\n\t\t\t\t\tif(ang!=0){\n\t\t\t\t\t\tang--;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tang=3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(mX+\" \"+mY);\n\t\t}while((x!=0)&&(y!=0));\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int w = sc.nextInt();\n\t\t\tfinal int h = sc.nextInt();\n\t\t\t\n\t\t\tif(h == 0 && w == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint cur_x = 1;\n\t\t\tint cur_y = 1;\n\t\t\tint move = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\t\n\t\t\t\tif(\"STOP\".equals(str)){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(\"FORWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y - m < 1 ? cur_y : cur_y - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x - m < 1 ? cur_x : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"BACKWARD\".equals(str)){\n\t\t\t\t\tint m = sc.nextInt();\n\t\t\t\t\t\n\t\t\t\t\tswitch(move){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcur_y = cur_y - m < 1 ? cur_y : cur_y - m; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcur_x = cur_x - m < 1 ? cur_x : cur_x - m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcur_y = cur_y + m > h ? cur_y : cur_y + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcur_x = cur_x + m > w ? cur_x : cur_x + m;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else if(\"RIGHT\".equals(str)){\n\t\t\t\t\tmove = move >= 4 ? 0 : move + 1;\n\t\t\t\t}else if(\"LEFT\".equals(str)){\n\t\t\t\t\tmove = move <= 0 ? 3 : move - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(cur_x + \" \" + cur_y);\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args){\n\tScanner sc = new Scanner(System.in);\n\tList<String> direc = new ArrayList<String>();\n\tdirec.add(\"RIGHT\");\n\tdirec.add(\"LEFT\");\n\n\tint n,m;\n\tn = sc.nextInt();\n\twhile(n!=0){\n\t    int posX = 1;\n\t    int posY = 1;\n\t    int nowDirec = 0;\n\n\t    m = sc.nextInt();\n\n\t    while(true){\n\t\tString instruct = sc.next();\n\t\tif(instruct.equals(\"STOP\")){break;}\n\t\tif(direc.contains(instruct)){\n\t\t    if(instruct.equals(direc.get(0))){nowDirec++; nowDirec%=4;}\n\t\t    else {\n\t\t\tnowDirec--; \n\t\t\tif(nowDirec==-1){nowDirec = 3;}\n\t\t    }\n\t\t}\n\t\telse{\n\t\t    int step = sc.nextInt();\n\t\t    if(instruct.equals(\"BACKWARD\")){step = -step;}\n\t\t    if(nowDirec==0){\n\t\t\tposY+=step;\n\t\t\tif(posY>m){posY=m;}\n\t\t\tif(posY<1){posY=1;}\n\t\t    }\n\t\t    else if(nowDirec==1){\n\t\t\tposX+=step;\n\t\t\tif(posX>n){posY=n;}\n\t\t\tif(posX<1){posY=1;}\n\t\t    }\n\t\t    else if(nowDirec==2){\n\t\t\tposX-=step;\n\t\t\tif(posY>m){posY=m;}\n\t\t\tif(posY<1){posY=1;}\n\t\t    }\n\t\t    else if(nowDirec==3){\n\t\t\tposY-=step;\n\t\t\tif(posX>n){posY=n;}\n\t\t\tif(posX<1){posY=1;}\n\t\t    }\n\t\t}\n\t    }\n\n\t    System.out.println(posX+\" \"+posY);\n\n\t    n = sc.nextInt();\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main\n{\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tfor(;;)\n\t\t{\n\t\t\tint w=in.nextInt();\n\t\t\tint h=in.nextInt();\n\t\t\tif((w|h)==0)\n\t\t\t\treturn;\n\t\t\tString state=\"U\";\n\t\t\tint nh=1,nw=1;\n\t\t\tfor(;;)\n\t\t\t{\n\t\t\t\tString s=in.next();\n\t\t\t\tif(s.equals(\"STOP\"))\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tif(s.equals(\"RIGHT\"))\n\t\t\t\t{\n\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\tstate=\"R\";\n\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\tstate=\"D\";\n\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\tstate=\"L\";\n\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\tstate=\"U\";\n\t\t\t\t}\n\t\t\t\telse if(s.equals(\"LEFT\"))\n\t\t\t\t{\n\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\tstate=\"L\";\n\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\tstate=\"D\";\n\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\tstate=\"R\";\n\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\tstate=\"U\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint go=in.nextInt();\n\t\t\t\t\tif(s.equals(\"FORWARD\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\t\twhile(nh<=h&&go-->0)\n\t\t\t\t\t\t\t\tnh++;\n\t\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\t\twhile(nw>1&&go-->0)\n\t\t\t\t\t\t\t\tnw--;\n\t\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\t\twhile(nh>1&&go-->0)\n\t\t\t\t\t\t\t\tnh--;\n\t\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\t\twhile(nw<=w&&go-->0)\n\t\t\t\t\t\t\t\tnw++;\t\n\t\t\t\t\t}\n\t\t\t\t\telse if(s.equals(\"BACKWARD\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(state.equals(\"U\"))\n\t\t\t\t\t\t\twhile(nh>1&&go-->0)\n\t\t\t\t\t\t\t\tnh--;\n\t\t\t\t\t\telse if(state.equals(\"L\"))\n\t\t\t\t\t\t\twhile(nw<=w&&go-->0)\n\t\t\t\t\t\t\t\tnw++;\n\t\t\t\t\t\telse if(state.equals(\"D\"))\n\t\t\t\t\t\t\twhile(nh<=h&&go-->0)\n\t\t\t\t\t\t\t\tnh++;\n\t\t\t\t\t\telse if(state.equals(\"R\"))\n\t\t\t\t\t\t\twhile(nw>1&&go-->0)\n\t\t\t\t\t\t\t\tnw--;\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(nw+\" \"+nh);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tint xpos;\n\tint ypos;\n\tint w;\n\tint h;\n\n\tprivate boolean checkUpper(int pos, String state){\n\t\tif(state.equals(\"y\")){\n\t\t\tif(pos > h){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(pos > w){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate boolean checkLower(int pos, String state){\n\t\tif(state.equals(\"y\")){\n\t\t\tif(pos <= 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(pos <= 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void operate(int dis, int dir){\n\t\tswitch(dir){\n\t\tcase 0:\n\t\t\tif(! checkUpper(ypos+dis, \"y\")){\n\t\t\t\typos = h;\n\t\t\t}\n\t\t\telse{\n\t\t\t\typos += dis;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 1:\n\t\t\tif(! checkUpper(xpos+dis, \"x\")){\n\t\t\t\txpos = w;\n\t\t\t}\n\t\t\telse{\n\t\t\t\txpos += dis;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 2:\n\t\t\tif(! checkLower(ypos-dis, \"y\")){\n\t\t\t\typos = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\typos -= dis;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 3:\n\t\t\tif(! checkLower(xpos-dis, \"x\")){\n\t\t\t\txpos = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\txpos -= dis;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tw = sc.nextInt();\n\t\t\th = sc.nextInt();\n\t\t\tif(w == 0 && h == 0)\n\t\t\t\tbreak;\n\t\t\tint dir = 0;\n\t\t\txpos = 1;\n\t\t\typos = 1;\n\t\t\tint [][] map = new int[w+1][h+1];\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\tif(str.equals(\"STOP\")){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"RIGHT\")){\n\t\t\t\t\tdir = (dir + 1) % 4;\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"LEFT\")){\n\t\t\t\t\tdir = (dir + 3) %4;\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"FORWARD\")){\n\t\t\t\t\tint dis = sc.nextInt();\n\t\t\t\t\toperate(dis, dir);\n\t\t\t\t}\n\t\t\t\telse if(str.equals(\"BACKWARD\")){\n\t\t\t\t\tint dis = sc.nextInt();\n\t\t\t\t\toperate(dis, (dir + 2) % 4);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(xpos + \" \" + ypos);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args){\n\tScanner sc = new Scanner(System.in);\n\tList<String> direc = new ArrayList<String>();\n\tdirec.add(\"RIGHT\");\n\tdirec.add(\"LEFT\");\n\n\tint n,m;\n\tn = sc.nextInt();\n\twhile(n!=0){\n\t    int posX = 1;\n\t    int posY = 1;\n\t    int nowDirec = 0;\n\n\t    m = sc.nextInt();\n\n\t    while(true){\n\t\tString instruct = sc.next();\n\t\tif(instruct.equals(\"STOP\")){break;}\n\t\tif(direc.contains(instruct)){\n\t\t    if(instruct.equals(direc.get(0))){nowDirec++; nowDirec%=4;}\n\t\t    else {\n\t\t\tnowDirec--; \n\t\t\tif(nowDirec==-1){nowDirec = 3;}\n\t\t    }\n\t\t}\n\t\telse{\n\t\t    int step = sc.nextInt();\n\t\t    if(instruct.equals(\"BACKWARD\")){step = -step;}\n\t\t    if(nowDirec==0){\n\t\t\tposY+=step;\n\t\t\tif(posY>m){posY=m;}\n\t\t\tif(posY<1){posY=1;}\n\t\t    }\n\t\t    else if(nowDirec==1){\n\t\t\tposX+=step;\n\t\t\tif(posX>n){posX=n;}\n\t\t\tif(posX<1){posX=1;}\n\t\t    }\n\t\t    else if(nowDirec==2){\n\t\t\tposY-=step;\n\t\t\tif(posY>m){posY=m;}\n\t\t\tif(posY<1){posY=1;}\n\t\t    }\n\t\t    else if(nowDirec==3){\n\t\t\tposX-=step;\n\t\t\tif(posX>n){posX=n;}\n\t\t\tif(posX<1){posX=1;}\n\t\t    }\n\t\t}\n\t    }\n\n\t    System.out.println(posX+\" \"+posY);\n\n\t    n = sc.nextInt();\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\tpublic Main(){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tint m = sc.nextInt();\n\t\t\tint ns = 1;\n\t\t\tint ew = 0;\n\t\t\tint x = 1;\n\t\t\tint y = 1;\n\t\t\tif(n == 0 && m == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(true){\n\t\t\t\tString str = sc.next();\n\t\t\t\tif(str.equals(\"STOP\")){\n\t\t\t\t\tSystem.out.println(x+\" \"+y);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(str.equals(\"RIGHT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"LEFT\")){\n\t\t\t\t\tif(ns == 1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = -1;\n\t\t\t\t\t} else if(ns == -1){\n\t\t\t\t\t\tns = 0;\n\t\t\t\t\t\tew = 1;\n\t\t\t\t\t} else if(ew == 1){\n\t\t\t\t\t\tns = 1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tns = -1;\n\t\t\t\t\t\tew = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if(str.equals(\"FORWARD\")){\n\t\t\t\t\tint d = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx += ew*d;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty += ns*d;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tint di = sc.nextInt();\n\t\t\t\t\tif(ns == 0){\n\t\t\t\t\t\tx -= ew*di;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty -= ns*di;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(x < 1){\n\t\t\t\t\tx = 1;\n\t\t\t\t\tew = -ew;\n\t\t\t\t} else if(x > n){\n\t\t\t\t\tx = n;\n\t\t\t\t\tew = -ew;\n\t\t\t\t} else if(y < 1){\n\t\t\t\t\ty = 1;\n\t\t\t\t\tns = -ns;\n\t\t\t\t} else if(y > m){\n\t\t\t\t\ty = m;\n\t\t\t\t\tns = -ns;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\n\npublic class hello\n{\n    public static void Main()\n    {\n        var dx = new int[] { 0, -1, 0, 1 };\n        var dy = new int[] { 1, 0, -1, 0 };\n        while (true)\n        {\n            string[] line = Console.ReadLine().Trim().Split(' ');\n            var w = int.Parse(line[0]);\n            var h = int.Parse(line[1]);\n            if (w == 0 && h == 0) break;\n            var x = 0; var y = 0; var d = 3;\n            while (true)\n            {\n                line = Console.ReadLine().Trim().Split(' ');\n                var c = line[0];\n                if (c == \"STOP\") { Console.WriteLine(\"{0} {1}\", y + 1, x + 1); break; }\n                else if (c == \"LEFT\")\n                {\n                    d--;\n                    if (d == -1) d = 3;\n                }\n                else if (c == \"RIGHT\")\n                {\n                    d++;\n                    if (d == 4) d = 0;\n                }\n                else if (c == \"FORWARD\")\n                {\n                    var c2 = int.Parse(line[1]);\n                    var nx = x + c2 * dx[d];\n                    var ny = y + c2 * dy[d];\n                    if (nx < 0) nx = 0;\n                    if (nx >= h) nx = h - 1;\n                    if (ny < 0) ny = 0;\n                    if (ny >= w) ny = w;\n                    x = nx;\n                    y = ny;\n                }\n                else if (c == \"BACKWARD\")\n                {\n                    var nd = d + 2;\n                    if (nd > 3) nd -= 4;\n                    var c2 = int.Parse(line[1]);\n                    var nx = x + c2 * dx[nd];\n                    var ny = y + c2 * dy[nd];\n                    if (nx < 0) nx = 0;\n                    if (nx >= h) nx = h - 1;\n                    if (ny < 0) ny = 0;\n                    if (ny >= w) ny = w;\n                    x = nx;\n                    y = ny;\n                }\n            }\n        }\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\n\npublic class hello\n{\n    public static void Main()\n    {\n        var dx = new int[] { 0, -1, 0, 1 };\n        var dy = new int[] { 1, 0, -1, 0 };\n        while (true)\n        {\n            string[] line = Console.ReadLine().Trim().Split(' ');\n            var w = int.Parse(line[0]);\n            var h = int.Parse(line[1]);\n            if (w == 0 && h == 0) break;\n            var x = 0; var y = 0; var d = 3;\n            while (true)\n            {\n                line = Console.ReadLine().Trim().Split(' ');\n                var c = line[0];\n                if (c == \"STOP\") { Console.WriteLine(\"{0} {1}\", y + 1, x + 1); break; }\n                else if (c == \"LEFT\")\n                {\n                    d--;\n                    if (d == -1) d = 3;\n                }\n                else if (c == \"RIGHT\")\n                {\n                    d++;\n                    if (d == 4) d = 0;\n                }\n                else if (c == \"FORWARD\")\n                {\n                    var c2 = int.Parse(line[1]);\n                    var nx = x + c2 * dx[d];\n                    var ny = y + c2 * dy[d];\n                    if (nx < 0) nx = 0;\n                    if (nx >= h) nx = h - 1;\n                    if (ny < 0) ny = 0;\n                    if (ny >= w) ny = w - 1;\n                    x = nx;\n                    y = ny;\n                }\n                else if (c == \"BACKWARD\")\n                {\n                    var nd = d + 2;\n                    if (nd > 3) nd -= 4;\n                    var c2 = int.Parse(line[1]);\n                    var nx = x + c2 * dx[nd];\n                    var ny = y + c2 * dy[nd];\n                    if (nx < 0) nx = 0;\n                    if (nx >= h) nx = h - 1;\n                    if (ny < 0) ny = 0;\n                    if (ny >= w) ny = w - 1;\n                    x = nx;\n                    y = ny;\n                }\n            }\n        }\n    }\n}\n\n"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift();\n   if(wh==\"0 0\")break;\n   wh=wh.split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var xy=[0,1,1];\n   while(true){\n      var ary=arr.shift().split(\" \");\n      if(ary[0]==\"STOP\")break;\n      else if(ary[0]==\"RIGHT\"){xy[0]++;if(xy[0]==4)xy[0]=0;}\n      else if(ary[0]==\"LEFT\"){xy[0]--;if(xy[0]==-1)xy[0]=3;}\n      else if(ary[0]==\"FORWARD\"){\n         ary[1]=ary[1]-0;\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]++;\n            else if(xy[0]==1)xy[1]++;\n            else if(xy[0]==2)xy[2]--;\n            else if(xy[0]==3)xy[1]--;\n         }\n         if(xy[1]<1)xy[1]=1;\n         if(xy[2]<1)xy[2]=1;\n         if(xy[1]>w)xy[1]=w;\n         if(xy[2]>h)xy[2]=h;\n      }\n      else if(ary[0]==\"BACKWARD\"){\n         ary[1]=ary[1]-0;\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]--;\n            else if(xy[0]==1)xy[1]--;\n            else if(xy[0]==2)xy[2]++;\n            else if(xy[0]==3)xy[1]++;\n         }\n         if(xy[1]<1)xy[1]=1;\n         if(xy[2]<1)xy[2]=1;\n         if(xy[1]>w)xy[1]=w;\n         if(xy[2]>h)xy[2]=h;\n      }\n   }\n   xy.shift();\n   console.log(xy.join(\" \"));\n}"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift();\n   if(wh==\"0 0\")break;\n   wh=wh.split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var xy=[0,1,1];\n   while(true){\n      var ary=arr.shift().split(\" \");\n      if(ary.length==2)ary[1]=ary[1]-0;\n      if(ary[0]==\"STOP\")break;\n      if(ary[0]==\"RIGHT\"){xy[0]++;if(xy[0]==4)x[0]=0;}\n      if(ary[0]==\"LEFT\"){xy[0]--;if(xy[0]==-1)x[0]=3;}\n      if(ary[0]==\"FORWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]++;\n            if(xy[0]==1)xy[1]++;\n            if(xy[0]==2)xy[2]--;\n            if(xy[0]==3)xy[2]--;\n         }\n      }\n      if(ary[0]==\"BACKWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]--;\n            if(xy[0]==1)xy[1]--;\n            if(xy[0]==2)xy[2]++;\n            if(xy[0]==3)xy[1]++;\n         }\n      }\n      if(xy[1]<1)xy[1]=1;\n      if(xy[2]<1)xy[2]=1;\n      if(xy[1]>w)xy[1]=w;\n      if(xy[2]>h)xy[2]=h;\n   }\n   xy.shift();\n   console.log(xy.join(\" \"));\n}"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift();\n   if(wh==\"0 0\")break;\n   wh=wh.split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var xy=[0,1,1];\n   while(true){\n      var ary=arr.shift().split(\" \");\n      if(ary.length==2)ary[1]=ary[1]-0;\n      if(ary[0]==\"STOP\")break;\n      if(ary[0]==\"RIGHT\"){xy[0]++;if(xy[0]==4)xy[0]=0;}\n      if(ary[0]==\"LEFT\"){xy[0]--;if(xy[0]==-1)xy[0]=3;}\n      if(ary[0]==\"FORWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]++;\n            if(xy[0]==1)xy[1]++;\n            if(xy[0]==2)xy[2]--;\n            if(xy[0]==3)xy[2]--;\n         }\n      }\n      if(ary[0]==\"BACKWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]--;\n            if(xy[0]==1)xy[1]--;\n            if(xy[0]==2)xy[2]++;\n            if(xy[0]==3)xy[1]++;\n         }\n      }\n      if(xy[1]<1)xy[1]=1;\n      if(xy[2]<1)xy[2]=1;\n      if(xy[1]>w)xy[1]=w;\n      if(xy[2]>h)xy[2]=h;\n   }\n   xy.shift();\n   console.log(xy.join(\" \"));\n}"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift();\n   if(wh==\"0 0\")break;\n   wh=wh.split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var xy=[0,1,1];\n   while(true){\n      var ary=arr.shift().split(\" \");\n      if(ary.length==2)ary[1]=ary[1]-0;\n      if(ary[0]==\"STOP\")break;\n      if(ary[0]==\"RIGHT\"){xy[0]++;if(xy[0]==4)x[0]=0;}\n      if(ary[0]==\"LEFT\"){xy[0]--;if(xy[0]==-1)x[0]=3;}\n      if(ary[0]==\"FORWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]++;\n            if(xy[0]==1)xy[1]++;\n            if(xy[0]==2)xy[2]--;\n            if(xy[0]==3)xy[2]--;\n         }\n      }\n      if(ary[0]==\"BACKWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]--;\n            if(xy[0]==1)xy[1]--;\n            if(xy[0]==2)xy[2]++;\n            if(xy[0]==3)xy[1]++;\n         }\n      }\n      if(xy[1]<1)xy[1]=1;\n      if(xy[2]<1)xy[2]=1;\n      if(xy[1]>w)xy[1]=w;\n      if(xy[2]>h)xy[2]=h;\n   }\n   xy.shift();\n   console.log(xy.join(\" \"));\n}"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift();\n   if(wh==\"0 0\")break;\n   wh=wh.split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var xy=[0,1,1];\n   while(true){\n      var ary=arr.shift().split(\" \");\n      if(ary.length==2)ary[1]=ary[1]-0;\n      if(ary[0]==\"STOP\")break;\n      if(ary[0]==\"RIGHT\"){xy[0]++;if(xy[0]==4)xy[0]=0;}\n      if(ary[0]==\"LEFT\"){xy[0]--;if(xy[0]==-1)xy[0]=3;}\n      if(ary[0]==\"FORWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]++;\n            if(xy[0]==1)xy[1]++;\n            if(xy[0]==2)xy[2]--;\n            if(xy[0]==3)xy[1]--;\n         }\n      }\n      if(ary[0]==\"BACKWARD\"){\n         while(ary[1]--){\n            if(xy[0]==0)xy[2]--;\n            if(xy[0]==1)xy[1]--;\n            if(xy[0]==2)xy[2]++;\n            if(xy[0]==3)xy[1]++;\n         }\n      }\n      if(xy[1]<1)xy[1]=1;\n      if(xy[2]<1)xy[2]=1;\n      if(xy[1]>w)xy[1]=w;\n      if(xy[2]>h)xy[2]=h;\n   }\n   xy.shift();\n   console.log(xy.join(\" \"));\n}"
  },
  {
    "language": "Ruby",
    "code": "loop {\n    w, h = gets.split.map(&:to_i)\n    break if w == 0\n    x = y = 1\n    dx, dy = 0, 1\n    loop {\n        command, k = gets.split\n        k = k.to_i if k \n        case command[0]\n        when 'S'\n            break\n        when 'F'\n            x += k * dx\n            x = 1 if x < 1\n            x = w if x > w\n            y += k * dy\n            y = 1 if y < 1\n            y = h if y > h\n        when 'B'\n            x -= k * dx\n            x = 1 if x < 1\n            x = w if x > w\n            y -= k * dy\n            y = 1 if y < 1\n            y = h if y > h\n        when 'R'\n            dx, dy = dy, -dx\n        when 'L'\n            dx, dy = -dy, dx\n        end\n    }\n    puts \"#{x} #{y}\" \n}"
  },
  {
    "language": "Ruby",
    "code": "while true\n    w, h = gets.chomp.split.map(&:to_i)\n    break if [w, h] == [0, 0]\n    x, y, d = 1, 1, 0\n    while true\n        command, l = gets.chomp.split\n        adds = [[0, 1], [1, 0], [0, -1], [-1, 0]]\n        case command\n        when \"FORWARD\"\n            x, y = x + adds[d][0] * l.to_i, y + adds[d][1] * l.to_i\n        when \"BACKWARD\"\n            x, y = x - adds[d][0] * l.to_i, y - adds[d][1] * l.to_i\n        when \"RIGHT\"\n            d = (d + 1) % 4\n        when \"LEFT\"\n            d = (d - 1) % 4\n        when \"STOP\"\n            break\n        end\n        x = 1 if x < 1\n        x = w if x > w\n        y = 1 if y < 1\n        y = h if y > h\n    end\n    puts \"#{x} #{y}\"\nend\n"
  },
  {
    "language": "Ruby",
    "code": "while gets\n  n, m = $_.split.map(&:to_i)\n  break if n == 0 && m == 0\n  x = y = 1\n  rotate = [0,1]\n  loop do\n    str = gets.split\n    case str[0]\n    when \"FORWARD\"\n      d = str[1].to_i\n      x += rotate[0]*d\n      y += rotate[1]*d\n      x = n if x > n; x = 1 if x < 1\n      y = m if y > m; y = 1 if y < 1\n    when \"BACKWARD\"\n      d = str[1].to_i\n      x -= rotate[0]*d\n      y -= rotate[1]*d\n      x = n if x > n; x = 1 if x < 1\n      y = m if y > m; y = 1 if y < 1\n    when \"RIGHT\"\n      rotate = [rotate[1], -rotate[0]]\n    when \"LEFT\"\n      rotate = [-rotate[1], rotate[0]]\n    when \"STOP\"\n      puts \"#{x} #{y}\"\n      break\n    end\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "### constant\n\nDXYS = [[0, 1], [1, 0], [0, -1], [-1, 0]]\n\n### main\n\nloop do\n  m, n = gets.split.map(&:to_i)\n  break if (m | n) == 0\n\n  x = y = 1\n  d = 0\n  #p [x, y, d]\n\n  loop do\n    cmds = gets.strip.split\n    #p cmds\n\n    case cmds[0]\n    when 'FORWARD'\n      k = cmds[1].to_i\n      dx, dy = DXYS[d]\n      k.times do\n        x0 = x + dx\n        y0 = y + dy\n        break if x0 < 1 || x0 > m || y0 < 1 || y0 > n\n        x = x0\n        y = y0\n      end\n    when 'BACKWARD'\n      k = cmds[1].to_i\n      dx, dy = DXYS[d]\n      k.times do\n        x0 = x - dx\n        y0 = y - dy\n        break if x0 < 1 || x0 > m || y0 < 1 || y0 > n\n        x = x0\n        y = y0\n      end\n    when 'LEFT'\n      d = (d + 3) % 4\n    when 'RIGHT'\n      d = (d + 1) % 4\n    when 'STOP'\n      break\n    end\n    #p [x, y, d]\n  end\n\n  puts [x, y].join(' ')\nend"
  },
  {
    "language": "Ruby",
    "code": "while gets\n  n, m = $_.split.map(&:to_i)\n  break if n == 0 && m == 0\n  x = y = 1\n  rotate = [0,1]\n  loop do\n    str = gets.split\n    case str[0]\n    when \"FORWARD\"\n      x += rotate[0]*str[1].to_i\n      y += rotate[1]*str[1].to_i\n      x = n if x > n; x = 1 if x < 1\n      y = m if y > m; y = 1 if y < 1\n    when \"BACKWARD\"\n      x -= rotate[0]*str[1].to_i\n      y -= rotate[1]*str[1].to_i\n      x = n if x > n; x = 1 if x < 1\n      y = m if y > m; y = 1 if y < 1\n    when \"RIGHT\"\n      rotate = [rotate[1], -rotate[0]]\n    when \"LEFT\"\n      rotate = [-rotate[1], rotate[0]]\n    when \"STOP\"\n      puts \"#{x} #{y}\"\n      break\n    end\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "while gets\n  n, m = $_.split.map(&:to_i)\n  break if n == 0 && m == 0\n  x = y = 1\n  rotate = [0,1]\n  loop do\n    str = gets.split\n    case str[0]\n    when \"FORWARD\"\n      x += rotate[0]*str[1].to_i\n      y += rotate[1]*str[1].to_i\n      x = n if x > n; x = 1 if x < 1\n      y = n if y > n; y = 1 if y < 1\n    when \"BACKWARD\"\n      x -= rotate[0]*str[1].to_i\n      y -= rotate[1]*str[1].to_i\n      x = n if x > n; x = 1 if x < 1\n      y = n if y > n; y = 1 if y < 1\n    when \"RIGHT\"\n      rotate = [rotate[1], -rotate[0]]\n    when \"LEFT\"\n      rotate = [-rotate[1], rotate[0]]\n    when \"STOP\"\n      puts \"#{x} #{y}\"\n      break\n    end\n  end\nend"
  },
  {
    "language": "Python",
    "code": "# AOJ 1104: Where's Your Robot?\n# Python3 2018.7.14 bal4u\n\n# N,E,S,W -> 0,1,2,3\nf = [[0,1],[1,0],[0,-1],[-1,0]]\nb = [[0,-1],[-1,0],[0,1],[1,0]]\n\nwhile True:\n\tw, h = map(int, input().split())\n\tif w == 0: break\n\tr, c, d = 1, 1, 0\n\twhile True:\n\t\tbuf = input().split()\n\t\tif   buf[0] == \"STOP\": break\n\t\telif buf[0] == \"RIGHT\": d = (d+1)%4\n\t\telif buf[0] == \"LEFT\": d = (d+3)%4\n\t\telse:\n\t\t\tif buf[0] == \"FORWARD\":\n\t\t\t\tr2 = r + int(buf[1])*f[d][1]\n\t\t\t\tc2 = c + int(buf[1])*f[d][0]\n\t\t\telse:   # BACKWARD k\n\t\t\t\tr2 = r + int(buf[1])*b[d][1]\n\t\t\t\tc2 = c + int(buf[1])*b[d][0]\n\t\t\tif r2 < 1: r2 = 1\n\t\t\tif r2 > h: r2 = h\n\t\t\tif c2 < 1: c2 = 1\n\t\t\tif c2 > w: c2 = w\n\t\t\tr, c = r2, c2\n\tprint(c, r)\n\n"
  },
  {
    "language": "Python",
    "code": "def go(n,x,dx,l):\n\treturn min(n,max(0,x+l*dx))\n\nwhile 1:\n\tm,n = map(int,raw_input().split())\n\tif m == 0: break\n\tx = y = 1\n\tdx,dy = 0,1\n\twhile 1:\n\t\tcom = raw_input().split()\n\t\ts = com[0][0]\n\t\tif   s == \"S\": break\n\t\telif s == \"F\":\n\t\t\tl = int(com[1])\n\t\t\tx,y = go(m,x,dx,l), go(n,y,dy,l)\n\t\telif s == \"B\":\n\t\t\tl = int(com[1])\n\t\t\tx,y = go(m,x,-dx,l),go(n,y,-dy,l)\n\t\telif s == \"R\":\n\t\t\tdx,dy = dy,-dx\n\t\telif s == \"L\":\n\t\t\tdx,dy = -dy,dx\n\tprint x,y"
  },
  {
    "language": "Python",
    "code": "import sys\n\nchecksize=0\nplace=[]\nface=0 #N=0 E=1 S=2 W=3\nX=0\nY=0\nfor l in sys.stdin:\n    line=l.split()\n    if checksize==0:\n        checksize=1\n        A=map(int,line)\n        X=A[0]\n        Y=A[1]\n        place=[1,1]\n    elif line[0]==\"STOP\":\n        checksize=0\n    elif line[0]==\"LEFT\":\n        face=(face-1)%4\n\n    elif line[0]==\"RIGHT\":\n        face=(face+1)%4\n\n    elif line[0]==\"FORWARD\":\n        susumu=int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n\n    elif line[0]==\"BACKWARD\":\n        susumu=-int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n\n    if place[0]<0:\n        place[0]=0\n    if place[0]>X:\n        place[0]=X\n    if place[1]<0:\n        place[1]=0\n    if place[1]>Y:\n        place[1]=Y"
  },
  {
    "language": "Python",
    "code": "while 1:\n\tm,n = map(int,raw_input().split())\n\tif m == 0: break\n\tx = y = 1\n\tdx,dy = 0,1\n\twhile 1:\n\t\tcom = raw_input().split()\n\t\ts = com[0][0]\n\t\tif   s == \"S\": break\n\t\telif s == \"R\":\n\t\t\tdx,dy = dy,-dx\n\t\telif s == \"L\":\n\t\t\tdx,dy = -dy,dx\n\t\telse:\n\t\t\td = 1 if s == \"F\" else -1\n\t\t\tl = d*int(com[1])\n\t\t\tx,y = min(m,max(1,x+l*dx)),min(n,max(1,y+l*dy))\n\tprint x,y"
  },
  {
    "language": "Python",
    "code": "while True:\n    col, row = map(int, input().split())\n    if col == 0:\n        break\n    else:\n        robot = [1, 1]\n        direction = \"up\"\n        while True:\n            str = input()\n            if str == \"STOP\":\n                print(robot[0], robot[1])\n                break\n            elif str == \"LEFT\":\n                if direction == \"up\":\n                    direction = \"left\"\n                elif direction == \"left\":\n                    direction = \"down\"\n                elif direction == \"down\":\n                    direction = \"right\"\n                else:           # right\n                    direction = \"up\"\n            elif str == \"RIGHT\":\n                if direction == \"up\":\n                    direction = \"right\"\n                elif direction == \"left\":\n                    direction = \"up\"\n                elif direction == \"down\":\n                    direction = \"left\"\n                else:           # right\n                    direction = \"down\"\n            else:\n                di, step = str.split()\n                step = int(step)\n                if direction == \"up\":\n                    if di == \"FORWARD\":\n                        robot[1] = min(robot[1] + step, row)\n                    else:\n                        robot[1] = max(robot[1] - step, 1)\n                elif direction == \"left\":\n                    if di == \"FORWARD\":\n                        robot[0] = max(robot[0] - step, 1)\n                    else:\n                        robot[0] = min(robot[0] + step, col)\n                elif direction == \"down\":\n                    if di == \"FORWARD\":\n                        robot[1] = max(robot[1] - step, 1)\n                    else:\n                        robot[1] = min(robot[1] + step, row)\n                else:           # right\n                    if di == \"FORWARD\":\n                        robot[0] = min(robot[0] + step, col)\n                    else:\n                        robot[0] = max(robot[0] - step, 1)\n"
  },
  {
    "language": "Python",
    "code": "import sys\n\nchecksize=0\nplace=[]\nface=0 #N=0 E=1 S=2 W=3\nX=0\nY=0\nfor l in sys.stdin:\n    line=l.split()\n    if line[0]==\"0\":\n        break\n    elif checksize==0:\n        checksize=1\n        A=map(int,line)\n        X=A[0]\n        Y=A[1]\n        place=[1,1]\n    elif line[0]==\"STOP\":\n        checksize=0\n        print str(place[0])+\" \"+str(place[1])\n    elif line[0]==\"LEFT\":\n        face=(face-1)%4\n    elif line[0]==\"RIGHT\":\n        face=(face+1)%4\n    elif line[0]==\"FORWARD\":\n        susumu=int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    elif line[0]==\"BACKWARD\":\n        susumu=-int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    if place[0]<1:\n        place[0]=1\n    if place[0]>X:\n        place[0]=X\n    if place[1]<1:\n        place[1]=1\n    if place[1]>Y:\n        place[1]=Y"
  },
  {
    "language": "Python",
    "code": "def go(n,x,dx,l):\n\treturn min(n,max(1,x+l*dx))\n\nwhile 1:\n\tm,n = map(int,raw_input().split())\n\tif m == 0: break\n\tx = y = 1\n\tdx,dy = 0,1\n\twhile 1:\n\t\tcom = raw_input().split()\n\t\ts = com[0][0]\n\t\tif   s == \"S\": break\n\t\telif s == \"F\":\n\t\t\tl = int(com[1])\n\t\t\tx,y = go(m,x,dx,l), go(n,y,dy,l)\n\t\telif s == \"B\":\n\t\t\tl = int(com[1])\n\t\t\tx,y = go(m,x,-dx,l),go(n,y,-dy,l)\n\t\telif s == \"R\":\n\t\t\tdx,dy = dy,-dx\n\t\telif s == \"L\":\n\t\t\tdx,dy = -dy,dx\n\tprint x,y"
  },
  {
    "language": "Python",
    "code": "while True:\n    w,h=map(int,raw_input().split())\n    if w==h==0:break\n    mv=((0,1),(1,0),(0,-1),(-1,0))\n    pos=0\n    nx=ny=1\n    while True:\n        command=raw_input()\n        if command==\"STOP\":\n            break\n        if command[-1].isdigit():\n            d,l=command.split()\n            if d==\"FORWARD\":\n                nx+=mv[pos][0]*int(l)\n                ny+=mv[pos][1]*int(l)\n            elif d==\"BACKWARD\":\n                nx-=mv[pos][0]*int(l)\n                ny-=mv[pos][1]*int(l)\n            nx=min(nx,w)\n            nx=max(nx,1)\n            ny=min(ny,h)\n            ny=max(ny,1)\n        else:\n            if command==\"LEFT\":\n                pos=pos-1 if pos!=0 else 3\n            elif command==\"RIGHT\":\n                pos=(pos+1)%4\n    print nx,ny"
  },
  {
    "language": "Python",
    "code": "def numchange(boo):\n    if boo:return 1\n    else: return -1\n\nwhile True:\n    m,n = map(int,input().split())\n    if m==0: break\n\n    yaxis = 1\n    xaxis = 1\n    rotation = 0\n    while True:\n        lnr = input()\n        if lnr == \"STOP\": break\n        elif lnr == \"RIGHT\": rotation = (rotation+1)%4\n        elif lnr == \"LEFT\": rotation = (rotation+3)%4\n        else:\n            movequeue = lnr.split()\n            moveamount = int(movequeue[1]) * numchange((rotation//2)==0) * numchange(movequeue[0]==\"FORWARD\")\n            if rotation%2==0:\n                yaxis += moveamount\n                if yaxis <= 0:\n                    yaxis = 1\n                elif yaxis > n:\n                    yaxis = n\n            else:\n                xaxis += moveamount\n                if xaxis <= 0:\n                    xaxis = 1\n                elif xaxis > m:\n                    xaxis = m\n    print(xaxis,yaxis)"
  },
  {
    "language": "Python",
    "code": "import sys\n\nchecksize=0\nplace=[]\nface=0 #N=0 E=1 S=2 W=3\nX=0\nY=0\nfor l in sys.stdin:\n    line=l.split()\n    if line[0]==0:\n        break\n    elif checksize==0:\n        checksize=1\n        A=map(int,line)\n        X=A[0]\n        Y=A[1]\n        place=[1,1]\n    elif line[0]==\"STOP\":\n        checksize=0\n        print str(place[0])+\" \"+str(place[1])\n    elif line[0]==\"LEFT\":\n        face=(face-1)%4\n    elif line[0]==\"RIGHT\":\n        face=(face+1)%4\n    elif line[0]==\"FORWARD\":\n        susumu=int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    elif line[0]==\"BACKWARD\":\n        susumu=-int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    if place[0]<1:\n        place[0]=1\n    if place[0]>X:\n        place[0]=X\n    if place[1]<1:\n        place[1]=1\n    if place[1]>Y:\n        place[1]=Y"
  },
  {
    "language": "Python",
    "code": "while True:\n    w,h=map(int,raw_input().split())\n    if w==h==0:break\n    mv=((0,1),(1,0),(0,-1),(-1,0))\n    pos=0\n    nx=ny=1\n    while True:\n        command=raw_input()\n        if command==\"STOP\":\n            break\n        if command[-1].isdigit():\n            d,l=command.split()\n            if d==\"FORWARD\":\n                nx+=mv[pos][0]*int(l)\n                ny+=mv[pos][1]*int(l)\n            elif d==\"BACKWARD\":\n                nx-=mv[pos][0]*int(l)\n                ny-=mv[pos][1]*int(l)\n            nx=min(nx,w)\n            nx=max(nx,0)\n            ny=min(ny,h)\n            ny=max(ny,0)\n        else:\n            if command==\"LEFT\":\n                pos=pos-1 if pos!=0 else 3\n            elif command==\"RIGHT\":\n                pos=(pos+1)%4\n    print nx,ny"
  },
  {
    "language": "Python",
    "code": "while True:\n    w,h=map(int,raw_input().split())\n    if w==h==0:break\n    Board=[[0]*w for i in range(h)]\n    mv=((0,1),(1,0),(0,-1),(-1,0))\n    pos=0\n    nx=ny=1\n    while True:\n        command=raw_input()\n        if command==\"STOP\":\n            break\n        if command[-1].isdigit():\n            d,l=command.split()\n            if d==\"FORWARD\":\n                for i in range(int(l)):\n                    nx=nx+mv[pos][0] if 1<=nx+mv[pos][0]<=w else nx\n                    ny=ny+mv[pos][1] if 1<=ny+mv[pos][1]<=h else ny\n            elif d==\"BACKWARD\":\n                for i in range(int(l)):\n                    nx=nx-mv[pos][0] if 1<=nx+mv[pos][0]<=w else nx\n                    ny=ny-mv[pos][1] if 1<=ny+mv[pos][1]<=h else ny\n        else:\n            if command==\"LEFT\":\n                pos=pos-1 if pos!=0 else 3\n            elif command==\"RIGHT\":\n                pos=(pos+1)%4\n    print nx,ny"
  },
  {
    "language": "Python",
    "code": "import sys\n\nchecksize=0\nplace=[]\nface=0 #N=0 E=1 S=2 W=3\nX=0\nY=0\nfor l in sys.stdin:\n    line=l.split()\n    if checksize==0:\n        checksize=1\n        A=map(int,line)\n        X=A[0]\n        Y=A[1]\n        place=[1,1]\n    elif line[0]==\"STOP\":\n        checksize=0\n        print str(place[0])+\" \"+str(place[1])\n    elif line[0]==\"LEFT\":\n        face=(face-1)%4\n    elif line[0]==\"RIGHT\":\n        face=(face+1)%4\n    elif line[0]==\"FORWARD\":\n        susumu=int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    elif line[0]==\"BACKWARD\":\n        susumu=-int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    if place[0]<1:\n        place[0]=1\n    if place[0]>X:\n        place[0]=X\n    if place[1]<1:\n        place[1]=1\n    if place[1]>Y:\n        place[1]=Y"
  },
  {
    "language": "Python",
    "code": "moves = [\n    {'F': lambda i, j, x: (i, min(n, j + x)), 'B': lambda i, j, x: (i, max(1, j - x))},\n    {'F': lambda i, j, x: (min(m, i + x), j), 'B': lambda i, j, x: (max(1, i - x), j)},\n    {'F': lambda i, j, x: (i, max(1, j - x)), 'B': lambda i, j, x: (i, min(n, j + x))},\n    {'F': lambda i, j, x: (max(1, i - x), j), 'B': lambda i, j, x: (min(m, i + x), j)}]\nturns = {'R': lambda i: (i + 1) % 4, 'L': lambda i: (i - 1) % 4}\n\nwhile True:\n    m, n = map(int, input().split())\n    if not m:\n        break\n    i, j = 1, 1\n    cci = 0\n    while True:\n        cmd = input()\n        ch = cmd[0]\n        if ch in 'FB':\n            i, j = moves[cci][ch](i, j, int(cmd.split()[1]))\n        elif ch in 'RL':\n            cci = turns[ch](cci)\n        else:\n            print(i, j)\n            break"
  },
  {
    "language": "Python",
    "code": "import sys\n\nchecksize=0\nplace=[]\nface=0 #N=0 E=1 S=2 W=3\nX=0\nY=0\nfor l in sys.stdin:\n    line=l.split()\n    if checksize==0:\n        checksize=1\n        A=map(int,line)\n        X=A[0]\n        Y=A[1]\n        place=[1,1]\n    elif line[0]==\"STOP\":\n        checksize=0\n        print str(place[0])+\" \"+str(place[1])\n    elif line[0]==\"LEFT\":\n        face=(face-1)%4\n    elif line[0]==\"RIGHT\":\n        face=(face+1)%4\n    elif line[0]==\"FORWARD\":\n        susumu=int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    elif line[0]==\"BACKWARD\":\n        susumu=-int(line[1])\n        place[(face+1)%2]=place[(face+1)%2]+susumu*(1-(face/2)*2)\n    if place[0]<0:\n        place[0]=0\n    if place[0]>X:\n        place[0]=X\n    if place[1]<0:\n        place[1]=0\n    if place[1]>Y:\n        place[1]=Y"
  },
  {
    "language": "Python",
    "code": "moves = [\n    {'F': lambda i, j, x: (i, min(n, j + x)), 'B': lambda i, j, x: (i, max(1, j - x))},\n    {'F': lambda i, j, x: (min(m, i + x), j), 'B': lambda i, j, x: (max(1, i - x), j)},\n    {'F': lambda i, j, x: (i, max(1, j - x)), 'B': lambda i, j, x: (i, min(n, j + x))},\n    {'F': lambda i, j, x: (max(m, i - x), j), 'B': lambda i, j, x: (min(1, i + x), j)}]\nturns = {'R': lambda i: (i + 1) % 4, 'L': lambda i: (i - 1) % 4}\n\nwhile True:\n    m, n = map(int, input().split())\n    if not m:\n        break\n    i, j = 1, 1\n    cci = 0\n    while True:\n        cmd = input()\n        ch = cmd[0]\n        if ch in 'FB':\n            i, j = moves[cci][ch](i, j, int(cmd.split()[1]))\n        elif ch in 'RL':\n            cci = turns[ch](cci)\n        else:\n            print(i, j)\n            break"
  }
]