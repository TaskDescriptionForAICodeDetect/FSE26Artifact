A ninja is planning to sneak from outside a castle to the main tower (donjon). The ninja has no trouble running on the ground or swimming in the moat, but struggles to climb out of the moat. Therefore, the ninja wants to minimize the number of times they have to enter the moat. You need to write a program that, given a two-dimensional grid representing the castle's layout, outputs the minimum number of times the ninja must climb out of the moat to reach the main tower. The layout includes the position of the main tower indicated by '&', the moat represented by '#', and other areas marked by '.'. The ninja can move one step at a time in the east, west, north, or south direction, and cannot move diagonally. Each dataset describes a castle layout, and the input terminates with two lines of zeros.