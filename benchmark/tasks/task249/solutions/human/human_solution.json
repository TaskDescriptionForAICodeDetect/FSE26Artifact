[
  {
    "language": "Scala",
    "code": "import java.util.Scanner\nimport scala.collection.Searching._\n\nimport scala.annotation.tailrec\n\nclass IUnionFind(val size: Int) {\n\n  private case class Node(var parent: Option[Int], var treeSize: Int)\n\n  private val nodes = Array.fill[Node](size)(new Node(None, 1))\n\n  def union(t1: Int, t2: Int): IUnionFind = {\n    if (t1 == t2) return this\n\n    val root1 = root(t1)\n    val root2 = root(t2)\n    if (root1 == root2) return this\n\n    val node1 = nodes(root1)\n    val node2 = nodes(root2)\n\n    if (node1.treeSize < node2.treeSize) {\n      node1.parent = Some(t2)\n      node2.treeSize += node1.treeSize\n    } else {\n      node2.parent = Some(t1)\n      node1.treeSize += node2.treeSize\n    }\n    this\n  }\n\n  def connected(t1: Int, t2: Int): Boolean = t1 == t2 || root(t1) == root(t2)\n\n  @tailrec\n  private def root(t: Int): Int = nodes(t).parent match {\n    case None => t\n    case Some(p) => root(p)\n  }\n}\n\n\nobject Main {\n  def solve(sc: => Scanner, M: Array[Int]): Unit = {\n    val N = sc.nextInt\n    if (N != 0) {\n      var i = 0\n      var j = 0\n      var count = 0\n      while (i < M.size && j < M.size) {\n        if (M(j) - M(i) == N) {\n          count += 1\n          i += 1\n          j += 1\n        } else if (M(j) - M(i) < N) {\n          j += 1\n        } else {\n          i += 1\n        }\n      }\n      println(count)\n      solve(sc, M)\n    }\n  }\n\n  def main(args: Array[String]): Unit = {\n    val sc: Scanner = new Scanner(System.in)\n\n    solve(sc, initialize())\n  }\n\n  def initialize(): Array[Int] = {\n    val p = primes()\n    for (i <- 1 until p.length - 1) {\n      p(i) += p(i - 1)\n    }\n    p\n  }\n\n  def primes(): Array[Int] = {\n    val ret = Array.fill(10001)(true)\n    ret(1) = false\n    for (i <- 2 until 10001) {\n      if (ret(i)) {\n        for (j <- 2 to 10001 / i) {\n          if (i * j < 10001) {\n            ret(i * j) = false\n          }\n        }\n      }\n    }\n    ret.zipWithIndex.filter(A => A._1).map(A => A._2)\n  }\n}"
  },
  {
    "language": "C++",
    "code": "// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1257\n// ?´???°????????????????????????????????¨????????§\n#include <bits/stdc++.h>\nusing namespace std;\nvector<int> prime;\nint n, res;\nint main() {\n    int isPrime[10001];\n    fill(isPrime, isPrime+10001, 1);\n    isPrime[0] = isPrime[1] = 0;\n    for (int i=2; i<=10000; i++) {\n        if (isPrime[i]) {\n            prime.push_back(i);\n            for (int j=i*2; j<=10000; j+=i) isPrime[j] = 0;\n        }\n    }\n    while(scanf(\"%d\",&n)) {\n        if (n == 0) break;\n        res = 0;\n        int lb = 0, rb = 0, sum = 0;\n        while (lb < prime.size()) {\n            while (sum<n && rb<prime.size()) sum += prime[rb++];\n            if (sum == n) res++;\n            sum -= prime[lb++];\n        }\n        printf(\"%d\\n\",res);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(){\n    bool nonprime[10001] = {};\n    nonprime[0] = nonprime[1] = true;\n    int sum[10001] = {}, pos = 0;\n    for(int i = 2; i < 10001; i++){\n        if(nonprime[i]) continue;\n        sum[pos+1] = sum[pos] + i;\n        pos++;\n        for(int j = i+i; j < 10001; j+=i)   nonprime[j] = true;\n    }\n\n    int ans[10001] = {};\n    for(int i = 0; i < pos; i++){\n        for(int j = i; j < pos; j++){\n            if(sum[j]-sum[i] > 10000)   break;\n            ans[sum[j]-sum[i]]++;\n        }\n    }\n\n    int n;\n    while(cin >> n, n)  cout << ans[n] << endl;\n    \n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\n#define N 10010\nvector<int> Prime_Num;\nbool prime[N]={true};\n\nint makePrimeQ(){\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nconst int MAX = 10000;\n\nint main()\n{\n    vector<bool> check(MAX+1, true);\n    for(int i = 2; i * i <= MAX; i++){\n        if(check[i]){\n            for(int j = 2; i * j <= MAX; j++){\n                check[i*j] = false;\n            }\n        }\n    }\n\n    vector<int> prime;\n    for(int i = 2; i <= MAX; i++){\n        if(check[i]) prime.push_back(i);\n    }\n\n    \n    int n;\n    while(1){\n        cin >> n;\n        if(n == 0) break;\n\n        queue<int> Q;\n        int rest = n;\n        int count = 0;\n\n        for(int i = 0; i < prime.size() && n >= prime[i]; i++){\n            rest -= prime[i];\n            Q.push(prime[i]);\n\n            while(rest <= 0){\n                if(rest == 0) count++;\n                rest += Q.front();\n                Q.pop();\n            }\n        }\n        cout << count << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<bitset>\n#include<vector>\nconst int N = 10001;\nint main()\n{\n\tstd::vector<int>v;\n\tstd::bitset<N>p;\n\tint i,j,n,a[N]={0};\n\tp.set();\n\tfor(i=2;i<N/2;++i)if(p[i])for(j=i*2;j<N;j+=i)p[j]=0;\n\tfor(i=2;i<N;++i)if(p[i])v.push_back(i);\n\tfor(i=0;i<v.size();++i)\n\t{\n\t\tn=v[i];\n\t\t++a[n];\n\t\tfor(j=i+1;j<v.size() && (n+=v[j], n<N);++j)++a[n];\n\t}\n\twhile(scanf(\"%d\",&n),n)printf(\"%d\\n\",a[n]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 10001;\n\nint prime[N];\nbool is_prime[N+1];\n\nint sieve(){\n  int p =0;\n  for(int i=0;i<=N;i++) is_prime[i] = true;\n  is_prime[0] = is_prime[1] = false;\n  for(int i=2;i<=N;i++){\n    if(is_prime[i]){\n      prime[p++] = i;\n      for(int j=2*i;j<=N;j+=i) is_prime[j] = false;\n    }\n  }\n  return p;\n}\n\nint main(){\n  int n,p = sieve();\n  while(cin >> n && n){\n    int a[N], head = 0, tail = 0, ans = 0;\n\n    for(int i=0;i<p;i++){\n      if(prime[i] > n) break;\n      a[tail++] = 0;\n      for(int j=head; j<tail; j++){\n\ta[j] += prime[i];\n\tif(a[j] >= n){\n\t  if(a[j] == n) ans++;\n\t  head++;\n\t}\n      }\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n\nusing namespace std;\n\nint main() {\n  vector<bool> isp(10001, true);\n  for(int i=2;i*i<=10000;++i)\n    if(isp[i])\n      for(int j=i*i;j<=10000;j+=i)\n        isp[j]=false;\n  vector<int> pl;\n  for(int i=2;i<=10000;++i)\n    if(isp[i])\n      pl.push_back(i);\n  vector<int> ps(pl.size()+1);\n  partial_sum(begin(pl),end(pl),begin(ps)+1);\n  vector<int> cnt(10001);\n  REP(i,ps.size())REP(j,i) {\n    int sum = ps[i] - ps[j];\n    if (sum <= 10000)\n      ++cnt[sum];\n  }\n  while(1){\n    int n;\n    cin>>n;\n    if(!n)break;\n    cout << cnt[n] << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define F first\n#define S second\n#define INF 1 << 30\n\nint main(){\n  int p[1000] = {};\n  p[0] = p[1] = 1;\n  for(int i = 2; i <= 1000 / 2; i++)\n    if(!p[i])\n      for(int j = i+i; j <= 1000; j+=i) p[j] = 1;\n\n  vector<int>sp;\n  rep(i, 1000) if(!p[i]) sp.push_back(i);\n  //  rep(i, sp.size()) printf(\"%d \", sp[i]); puts(\"\");\n  int n;\n  while(scanf(\"%d\", &n) && n){\n    int res = 0;\n\n    rep(i, sp.size()){\n      int s = 0;\n      for(int j = i; j < sp.size(); j++){\n\ts += sp[j];\n\tif(s == n){ res++; break;}\n      }\n    }\n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n\nstatic const int maxn = 10001;\n\nint isp[maxn];\nvector<int> p;\n\nvoid eratosthenes() {\n\t//init\n\tfill(isp, isp + maxn, 1);\n\n\n\tint i, j;\n\tint maxi = sqrt(maxn);\n\tfor (i = 2; i <= maxi; i++) {\n\t\tj = i + i;\n\t\twhile (j < maxn) {\n\t\t\tisp[j] = 0;\n\t\t\tj += i;\n\t\t}\n\t}\n\n\tfor (i = 2; i < maxn; i++) {\n\t\tif (isp[i])p.push_back(i);\n\t}\n\n}\n\nint main() {\n\tint i, j, k;\n\n\teratosthenes();\n\t/*\n\tfor (i = p.size() - 1; i >= 0; i--) {\n\t\tcout << p[i] << endl;\n\t}\n\t*/\n\n\twhile (1) {\n\t\tint n;\n\n\t\tcin >> n;\n\t\tif (n == 0)break;\n\n\t\tint a = 0, b = 0; // [a, b]\n\t\tint sum = 2;\n\t\tint ans = 0;\n\t\twhile (b <= n) {\n\t\t\tif (sum == n) {\n\t\t\t\tans++;\n\t\t\t\tb++;\n\t\t\t\tsum += p[b];\n\t\t\t} else if (sum < n) {\n\t\t\t\tb++;\n\t\t\t\tsum += p[b];\n\t\t\t} else if (sum > n) {\n\t\t\t\tsum -= p[a];\n\t\t\t\ta++;\n\t\t\t}\n\t\t}\n\n\t\tcout << ans << endl;\n\t\t\n\t}\n\n\t\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint cc[10010] = {};\nint isprime[10010];\n\nint main() {\n    isprime[0] = isprime[1] = 1;\n    for(int i = 4; i<=10000; i+=2) isprime[i] = 1;\n    for(int i=3; i*i<=10000; i+=2)\n        if(isprime[i] == 0)\n            for(int j=2; i*j<=10000; ++j)\n                isprime[i*j] = 1;\n\n    for(int i=2; i<=10000; i++) {\n        if(isprime[i]) continue;\n        int x = i;\n        cc[x]++;\n        for(int j=i+1; x <= 10000; ++j) {\n            if(isprime[j] == 0) {\n                x += j;\n                cc[x]++;\n            }\n        }\n    }\n    int n;\n    while(cin>>n, n) {\n        cout<<cc[n]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nbool s[10000000];\nint main(){\n  s[0]=s[1]=1;\n  for(int i=2;i<10000000;i++)if(!s[i])\n    for(int j=i+i;j<10000000;j+=i)s[j]=1;\n  int n;\n  while(cin>>n,n){\n    int sum=0,c=0;\n    for(int i=0;i<=n;i++){\n      sum=0;\n      if(!s[i])for(int j=i;j<n*10;j++){\n        if(!s[j])sum+=j;\n        if(sum==n)c++;\n        if(sum>=n)break;\n      }\n    }\n    cout<<c<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "/*\n  file : /1257.comp.cpp\n  date : 2015-10-19\n  summary :\n  {\n  2<=n<=10^4 ??????n?????£?¶????????´???°????????§??¨?????????????????¨???????????????????????????\n  }\n  status :\n  {\n  \n  }\n  memo :\n  {\n  \n  }\n */\n\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string>\n#include<cmath>\n#include<cassert>\nusing namespace std;\n\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n\n#define N_MAX 10000\nvector<int> sum_prime;\n\nvoid init(){\n    vector<bool> is_prime(N_MAX+1,true);\n    is_prime[0]=is_prime[1]=false;\n    repeat(i, 2, is_prime.size()){\n        if(is_prime[i]){\n            for(int j=i*2;j<(int)is_prime.size();j+=i)is_prime[j]=false;\n        }\n    }\n    int prime_num=0;\n    int sum =0;\n    sum_prime.reserve(N_MAX);\n    sum_prime.push_back(0);\n    rep(i,is_prime.size()){\n        if(is_prime[i]){\n            prime_num++;\n            sum += i;\n            sum_prime.push_back(sum);\n        }\n    }\n}\n\nbool solve(){\n    int n;cin>>n;\n    if(n==0)return false;\n    int ans =0;\n    for(int sum : sum_prime){\n        int need = sum + n;\n        auto itr =lower_bound(all(sum_prime),need);\n        if(itr != sum_prime.end() && *itr == need) ans++;\n    }\n    cout <<ans <<endl;\n    \n    return true;\n}\n\nint main()\n{\n    init();\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include<math.h>\nusing namespace std;\nlong int isPrime(int n){\n    long int i;\n\n    if (n==2)\n        return 1;\n    if(n==1)\n      return 0;\n\n    if (n%2==0)\n        return 0;\n\n    for (i=3;i<=sqrt(n);i+=2)\n        if (n%i==0)\n            return 0;\n\n    return 1;\n}\nint main() {\n\t\n\tlong int n; int j;long int x; long int c=0;\n\tcin>>n;\n\tcin>>x;\n\tlong int a[n],i;\n\tfor(i=0;i<x;i++)\n\t  cin>>a[i];\n\t  \tfor(i=2;i<=n;i+2)\n\t  \t  if(isPrime(i)==0)\n\t  \t    c++;\n\tfor(i=0;i<x;i++)\n\t   if(a[i]>=1&&a[i]<=n)\n\t   cout<<isPrime(a[i])<<'\\n';\n\t    \n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n\nint tx[] = {0,1,0,-1};\nint ty[] = {-1,0,1,0};\n\nstatic const double EPS = 1e-8;\n\nint dp[10001];\nbool isPrime[10001];\n\nint main(){\n\tmemset(isPrime,-1,sizeof(isPrime));\n\tisPrime[0] = false;\n\tisPrime[1] = false;\n\tfor(int i=2;i*i<=10000;i++){\n\t\tif(isPrime[i]){\n\t\t\tfor(int j=i+i;j<=10000;j+=i){\n\t\t\t\tisPrime[j]=false;\n\t\t\t}\n\t\t}\n\t}\n\n\tvector<int> prime;\n\tfor(int i=2;i<=10000;i++){\n\t\tif(isPrime[i]){\n\t\t\tprime.push_back(i);\n\t\t}\n\t}\n\n\tint n;\n\n\twhile(~scanf(\"%d\",&n)){\n\t\tif(n==0) break;\n\n\t\tmemset(dp,0,sizeof(dp));\n\n\t\tfor(int i=0;i<prime.size();i++){\n\t\t\tif(prime[i] > n) break;\n\t\t\tfor(int j=i;j<prime.size();j++){\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int k=i;k<j;k++){\n\t\t\t\t\tsum += prime[k];\n\t\t\t\t}\n\t\t\t\tif(sum > n) break;\n\t\t\t\tdp[sum]++;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%d\\n\",dp[n]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <stack>\n#include <algorithm>\n#include <math.h>\n#include <queue>\nusing namespace std;\ntypedef long long ll;\n\nint main(void){\n    vector<int> prime;\n    vector<bool> p(10010, true);\n    for (int i = 2; i <= 10000; i++) {\n        if (p[i]) {\n            for (int j = 2 * i; j <= 10000; j += i) p[j] = false;\n        }\n    }\n    for (int i = 2; i <= 10000; i++) {\n        if (p[i]) prime.push_back(i);\n    }\n    \n    while (1) {\n        int n, ans = 0;\n        cin >> n;\n        if (n == 0) return 0;\n        \n        int insum = 0, idx = 0;\n        queue<int> que;\n        while (idx < prime.size()){\n            if (insum < n) {\n                que.push(prime[idx]);\n                insum += prime[idx];\n                idx++;\n            }\n            else {\n                if (insum == n) ans++;\n                insum -= que.front();\n                que.pop();\n            }\n            //cout << idx << \" \" << insum << endl;\n        }\n        cout << ans << endl;\n    }\n    \n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define MAX 10000\n\nbool isprime[MAX + 1];\nvector< int > prime;\n\nint setprime(){\n  for(int i = 2; i < MAX + 1; i++){\n    if(!isprime[i]){\n      for(int j = 2; i * j < MAX + 1; j++){\n        isprime[i * j] = true;\n      }\n      prime.push_back(i);\n    }\n  }\n}\n\nint solve(int odd){ //累積和でやった方がいい気がするけどやらない\n  int ret = 0;\n  for(int i = 0; i < prime.size() ; i++){\n    if(odd < prime[i]) break;\n    int sum = 0;\n    for(int j = i ; j <= prime.size() ; j++){\n      sum += prime[j];\n      if(sum >= odd){\n        if(sum == odd) ret++;\n        break;\n      }\n    }\n  }\n  return ret;\n}\n\nint main(){\n  setprime();\n  int n;\n  while(cin >> n, n){\n    cout << solve( n) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n#define mx 1000000\ntypedef long long LL;\nint pri[mx],f[mx];//f[i]荳コi逧?怙蟆冗エ?屏蟄?int num[mx];\nbool ispri[mx];\nint p = 0;\nvoid Prime()\n{\n    memset(ispri,true,sizeof(ispri));\n    for(int i = 2;i < mx;i++)\n    {\n        if(ispri[i])pri[p++] = i;\n        for(int j = 0;j < p && i*pri[j] < mx;j++)\n        {\n            int k = pri[j]*i;\n            ispri[k] = false;\n            //f[k] = pri[j];\n            if(i%pri[j] == 0)break;\n        }\n    }\n\n}\nint n;\nint ans[mx],tmp;\nvoid pre()\n{\n    memset(ans,0,sizeof(ans));\n    for(int i = 0;i < 1299;i++)\n    {\n        tmp = pri[i];\n        for(int j = i + 1;j < 1299;j++)\n        {\n            if(tmp > 10000)break;\n            ans[tmp]++;\n            tmp += pri[j];\n        }\n    }\n}\nint main()\n{\n    Prime();\n    pre();\n    //for(int i = 0;i <=20;i++)printf(\"%d\\n\",pri[i]);\n    while(scanf(\"%d\",&n)&&n)\n    {\n        printf(\"%d\\n\",ans[n]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\t#include<iostream>\nusing namespace std;\nint a[10000]={0};\t\nint main(){\n\ta[0]=a[1]=1;\n\tfor(int i=2;i<10000;i++){\n\t\tif(a[i]==0){\n\t\tfor(int j=i*2;j<10000;j+=i)\n\t\t\t\ta[j]=1;\n\t\t}\n\t}\n\tint n=1,c=0;\n\twhile(n!=0){\n\t\tc=0;\n\tcin>>n;\n\tif(a[n]==0)\n\tc++;\n\tfor(int i=n-1;i>0;i--){\n\t\tint s=0;\n\t\tint j=i;\n\t\tif(a[j]==0){\n\t\t\twhile(j>=0 && s<=n){\n\t\t\t\tif(a[j]==0)\n\t\t\t\t\ts+=j;\n\t\t\t\tj--;\n\t\t\t\tif(s==n){\n\t\t\t\t\tc++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<c<<endl;\n}\n}\n\t"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nbool is_prime[10001];\nint prime[10001];\nint main() {\n\tmemset(is_prime, 1, sizeof(is_prime));\n\tis_prime[0] = is_prime[1] = false;\n\tint p = 1;\n\tfor (int i = 2; i <= 10000; i++) {\n\t\tif (is_prime[i]) {\n\t\t\tprime[p++] = prime[p - 1] + i;\n\t\t\tfor (int j = i * 2; j <= 10000; j += i)is_prime[j] = false;\n\t\t}\n\t}\n\tmap<int, int>mp;\n\tfor (int i = 0; i < p; i++) {\n\t\tfor (int j = i + 1; j < p&&prime[j] - prime[i] <= 10000; j++) {\n\t\t\tmp[prime[j] - prime[i]]++;\n\t\t}\n\t}\n\tint n;\n\twhile (scanf(\"%d\", &n), n)printf(\"%d\\n\", mp[n]);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nbool p[10500];\nint sum[1500];\nvector <int> prime;\n\nvoid init(void)\n{\n\tfill(p, p + 10500, true);\n\tp[0] = p[1] = false;\n\tfor (int i = 2; i < 10500; i++){\n\t\tif (!p[i]) continue;\n\t\tprime.push_back(i);\n\t\tfor (int j = i * 2; j < 10500; j += i){\n\t\t\tp[j] = false;\n\t\t}\n\t}\n\t\n\tfor (int i = 1; i < prime.size(); i++){\n\t\tsum[i] = sum[i - 1] + prime[i - 1];\n\t}\n}\n\nint main(void)\n{\n\tinit();\n\t\n\tint n;\n\twhile (cin >> n, n){\n\t\tint ret = 0;\n\t\tfor (int i = 0; prime[i] <= n; i++){\n\t\t\tfor (int j = i + 1; j <= prime.size(); j++){\n\t\t\t\tint a = sum[j] - sum[i];\n\t\t\t\t// cout << \"* : \" << a << endl;\n\t\t\t\tif (a == n) ret++;\n\t\t\t\tif (a >= n) {\n\t\t\t\t\t// cout << a << \" >= \" << n << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ret << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\nusing namespace std;\n\nbool isnp[10001];\nint ans[10001];\n\nint main(){\n\tfor(int i = 2; i * i <= 10000; ++i){\n\t\tif( !isnp[i] ){\n\t\t\tfor(int j = i * i; j <= 10000; j += i){\n\t\t\t\tisnp[j] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tvector<int> pr;\n\tfor(int i = 2; i < 9999; ++i){\n\t\tif( !isnp[i] ) pr.push_back(i);\n\t}\n\n\tfor(int i = 0; i < pr.size(); ++i){\n\t\tint sum = 0;\n\t\tfor(int j = i; j < pr.size(); ++j){\n\t\t\tsum += pr[j];\n\t\t\tif( sum > 10000 ) break;\n\t\t\t++ans[sum];\n\t\t}\n\t}\n\t\n\tint n;\n\twhile( scanf(\"%d\", &n), n != 0 ){\n\t\tprintf(\"%d\\n\", ans[n]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\nusing namespace std;\n\nbool isnp[10001];\nint ans[10001];\n\nint main(){\n\tfor(int i = 2; i < 98; ++i){\n\t\tif( !isnp[i] ){\n\t\t\tfor(int j = i * i; j <= 10000; j += i){\n\t\t\t\tisnp[j] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tvector<int> primes;\n\tfor(int i = 2; i < 9999; ++i){\n\t\tif( !isnp[i] ) primes.push_back(i);\n\t}\n\n\tvector<int> sum(primes.size() + 1);\n\tfor(int i = 0; i < primes.size(); ++i){\n\t\tsum[i+1] = sum[i] + primes[i];\n\t}\n\n\tfor(int i = 1; i < sum.size(); ++i){\n\t\tfor(int j = 0; j < i; ++j){\n\t\t\tif(sum[i] - sum[j] <= 10000){\n\t\t\t\t++ans[sum[i] - sum[j]];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint n;\n\twhile(scanf(\"%d\", &n), n != 0){\n\t\tprintf(\"%d\\n\", ans[n]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n\nint main(void){\n\tbool isPrime[10010];\n\tstd::vector<int> prime,input;\n\tint i,j,k,ans;\n\n\tfor(bool b : isPrime) b=true;\n\tfor(i=2;i<10010;++i){\n\t\tfor(j=i*2;j<10010;j+=i) isPrime[j]=false;\n\t}\n\tfor(i=2;i<10010;++i){\n\t\tif(isPrime[i]) prime.push_back(i);\n\t}\n\n\twhile(true){\n\t\tstd::cin >> i;\n\t\tif(i==0) break;\n\t\tinput.push_back(i);\n\t}\n\n\tfor(auto in : input){\n\t\tans=0;\n\t\tfor(i=0;true;++i){\n\t\t\tif(prime[i]>in) break;\n\t\t\tk=in;\n\t\t\tfor(j=i;true;++j){\n\t\t\t\tk-=prime[j];\n\t\t\t\tif(k<0) break;\n\t\t\t\tif(k==0) ++ans;\n\t\t\t}\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\n#define MAX_N 7000000\nint x[MAX_N], sum[MAX_N + 1];\nvector<int>prime;\nint n;\n\nvoid PrimeCheckerDiv2(int c) {\n\tfor (int i = 2; i < c; i++) {\n\t\tfor (int j = 2; j <= sqrt(i); j++) {\n\t\t\tif (i%j == 0) { goto E; }\n\t\t}\n\t\tprime.push_back(i);\n\tE:;\n\t}\n}\n\nvoid TheSumPrimesDiv2(int d) {\n\tsum[0] = 0;\n\tfor (int i = 1; i <= d; i++) {\n\t\tsum[i] = prime[i - 1] + sum[i - 1];\n\t}\n}\n\nvoid ThePrimesConsecutiveDiv2(int e) {\n\tfor (int i = 1; i <= e; i++) {\n\t\tfor (int j = i; j < e; j++) {\n\t\t\tif (sum[j] - sum[i - 1] >= MAX_N) { break; }\n\t\t\tx[sum[j] - sum[i - 1]]++;\n\t\t}\n\t}\n}\n\nint main() {\n\tPrimeCheckerDiv2(MAX_N);\n\tTheSumPrimesDiv2(prime.size());\n\tThePrimesConsecutiveDiv2(prime.size());\n\twhile (true) {\n\t\tcin >> n;\n\t\tif (n == 0) { break; }\n\t\tcout << x[n] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define F first\n#define S second\n#define INF 1 << 30\n#define MAX_N 10000\n\nint main(){\n  int p[MAX_N] = {};\n  p[0] = p[1] = 1;\n  for(int i = 2; i <= MAX_N / 2; i++)\n    if(!p[i])\n      for(int j = i+i; j <= MAX_N; j+=i) p[j] = 1;\n\n  vector<int>sp;\n  rep(i, MAX_N) if(!p[i]) sp.push_back(i);\n  //  rep(i, sp.size()) printf(\"%d \", sp[i]); puts(\"\");\n  int n;\n  while(scanf(\"%d\", &n) && n){\n    int res = 0;\n\n    rep(i, sp.size()){\n      int s = 0;\n      for(int j = i; j < sp.size(); j++){\n\ts += sp[j];\n\tif(s == n){ res++; break;}\n      }\n    }\n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint main(){\n\tvector<int>vec;\n\tfor(int i=2;i<=10000;i++){\n\t\tbool v=false;\n\t\tfor(int j=2;j*j<=i;j++){\n\t\t\tif(i%j==0){\n\t\t\t\tv=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!v){\n\t\t\tvec.push_back(i);\n\t\t}\n\t}\n\tint l;\n\twhile(scanf(\"%d\",&l) && l){\n\t\tint ans=0;\n\t\tfor(int i=0;i<vec.size();i++){\n\t\t\tint sum=0;\n\t\t\tfor(int j=i;j<vec.size();j++){\n\t\t\t\tsum+=vec[j];\n\t\t\t\tif(sum==l){\n\t\t\t\t\tans++;\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(sum>l){\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(j==vec.size()-1){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nconst int M = 10000;\n\nint main() {\n  vector<int> primes;\n\n  for(int i = 2; i < M; i++) {\n    bool flag = true;\n\n    for(int j = 2; j * j <= i; j++) {\n      if(i % j == 0) {\n        flag = false;\n        break;\n      }\n    }\n\n    if(flag) {\n      primes.push_back(i);\n    }\n  }\n\n  for(int n; cin >> n && n; ) {\n    int sum = 0, front = 0, back = 0, count = 0;\n\n    while(true) {\n      while(sum < n && front < primes.size()) {\n        sum += primes[front++];\n      }\n\n      while(sum > n && back <= front) {\n        sum -= primes[back++];\n      }\n\n      if(sum == n) {\n        count++;\n        sum -= primes[back++];\n      }\n\n      if(front == back) {\n        break;\n      }\n    }\n\n    cout << count << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <vector>\n#include <cfloat>\n#include <string>\n#include <cmath>\n#include <set>\n#include <cstdlib>\n#include <map>\n#include <ctime>\n#include <iomanip>\n#include <functional>\n#include <deque>\n#include <iostream>\n#include <cstring>\n#include <queue>\n#include <cstdio>\n#include <stack>\n#include <climits>\n#include <sys/time.h>\n#include <cctype>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint main() {\n  bool notPrime[100001];\n  memset(notPrime, false, sizeof(notPrime));\n  for (int i = 2; i*i <= 100000; i++) {\n    for (int j = i+i; j <= 100000; j+=i) {\n      notPrime[j] = true;\n    }\n  }\n  vector <int> prime;\n  for (int i = 2; i <= 100000; i++) {\n    if (!notPrime[i]) {\n      prime.push_back(i);\n    }\n  }\n  while (true) {\n    int x;\n    cin >> x;\n    if (x == 0) break;\n    int sum = 0, ans = 0;\n    int l, r;\n    l = r = 0;\n    while (r < prime.size() && prime[r] <= x) {\n      sum += prime[r];\n      while (sum > x && l < r) {\n        sum -= prime[l];\n        l++;\n      }\n      if (sum == x) ans++;\n      r++;\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#define rep(i, n) for(int i = 0; i < n; i++)\nusing namespace std;\n\nint main(){\n\tbool p[10001] = {0};\n\trep(i, 10001)if(i>1&&!p[i])for(int j = i+i; j < 10001; j+=i)p[j]=1;\n\tint n, c, s;\n\twhile(cin>>n, n){\n\t\tc = 0;\n\t\trep(i, 9999){\n\t\t\ts = 0;\n\t\t\tif(p[i+2])continue;\n\t\t\tfor(int l=i+2; l<=n && s<n; l++){\n\t\t\t\t\n\t\t\t\tif(!p[l])s+=l;\n\t\t\t}\n\t\t\tif(s==n)c++;\n\t\t}\n\t\tcout<<c<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int p[10001],M=10001,i,j,c;vector<int>s(1,0);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){for(c=0,vector<int>::iterator t=s.begin();;t!=s.end();t++)c+=count(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<set>\n#include<list>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<complex>\n#include<cstdlib>\n#include<cstring>\n#include<numeric>\n#include<sstream>\n#include<iostream>\n#include<algorithm>\n#include<functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\n\nconst int MAX_N =10010;\nint prime[MAX_N];//i番目の素数\nbool is_prime[MAX_N+1];//is_prime[i]がtrueならiは素数\n\n//n以下の素数の数を返す\nint sieve(int n){\n\tint p = 0;\n\tfor(int i = 0;i <=n;i++){\n\t\tis_prime[i] =true;\n\t}\n\tis_prime[0] = false;\n\tis_prime[1] = false;\n\tfor(int i = 2;i <=n;i++){\n\t\tif(is_prime[i]){\n\t\t\tprime[p++] = i;\n\t\t\tfor(int j = 2*i;j <=n;j +=i){\n\t\t\t\tis_prime[j] =false;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\nint n;\nint main(){\n\tint kkkk = sieve(10000);\n\twhile(cin>>n){\n\t\tif(n==0){\n\t\t\tbreak;\n\t\t}\n\t\tint s = 0;\n\t\tint t = 0;\n\t\tint sum = 2;\n\t\tint ans = 0;\n\t\tdo{\n\t\t\tif(sum > n){\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t\tif(sum <n){\n\t\t\t\tsum +=prime[++t];\n\t\t\t}\n\t\t\tif(sum ==n){\n\t\t\t\tans++;\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t}while(prime[t]<=n&&s !=t);\n\t\tcout <<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define range(i,a,b) for(int i = (a); i < (b); i++)\n#define rep(i,b) range(i,0,b)\n#define all(a) (a).begin(), (a).end()\n#define debug(x) cout << \"debug \" << x << endl;\n#define INF (1 << 30)\nusing namespace std;\n\nconst int kN = 11000;\n\nvoid primeNumber(bool prime[kN], vector<int> &p){\n    rep(i,kN) prime[i] = 1;\n    prime[0] = prime[1] = 0;\n    rep(i,kN){\n        if(prime[i]){\n            p.push_back(i);\n            for(int j = i + i; j < kN; j+=i){\n                prime[j] = 0;\n            }\n        }\n    }\n}\n\nint main(){\n    bool prime[kN];\n    vector<int> p;\n    primeNumber(prime, p);\n\n    int n;\n    while(cin >> n, n){\n        int ans = 0;\n        for(int i = 0; p[i] <= n; i++){\n            int sum = 0;\n            for(int j = i; p[j] <= n; j++){\n                sum+=p[j];\n                if(sum == n){\n                    ans++;\n                    break;\n                }\n            }\n        }\n        cout << ans << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, s, n) for(int i = s; i < (int)n; ++i)\n#define per(i, n) for(int i = n; i >= 0; i--)\n#define ROF(i, s, n) for(int i = s; i >= (int)n; i--)\n#define FORIT(i, A) for (auto i : A)\n#define PRINT(x) cout << (x) << \"\\n\"\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define MP make_pair\n#define PB push_back\n#define EACH(i, n) for (__typeof((n).begin()) i = (n).begin(); i != (n).end(); ++i)\n#define SZ(a) int((a).size())\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n#define NCLR(a) memset((a), -1 ,sizeof(a))\n#define sq(n) (n) * (n)\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef priority_queue<int> maxpq;\ntypedef priority_queue< int, vector<int>, greater<int> > minpq;\ntypedef complex<double> Point;\nstatic const double EPS = 1e-10;\nstatic const double PI = acos( -1.0 );\nstatic const int mod = 1000000007;\nstatic const int INF = 1 << 29;\nstatic const LL LL_INF = 1ll << 60;\nstatic const int dx[] = { -1, 0, 1, 0, 1, -1, 1, -1 };\nstatic const int dy[] = { 0, -1, 0, 1, 1, 1, -1, -1 };\n\n#ifdef WIN32\n#include \"gtest/gtest.h\"\n#pragma comment (lib, \"gtest.lib\")\n#define dump(x) cerr << #x << \" = \" << (x) << \"\\n\"\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << \"\\n\"\n#else\n#define dump(x)\n#define debug(x)\n#endif\n\nint n;\n#define severalTestCases\nstatic VI primes( 1, 2 );\nstatic vector<bool> is_prime( 10001, true );\n\nbool input() {\n  cin >> n;\n  return n;\n}\n\nint dp[ 2000 ][ 10001 ][ 2 ];\n\nint dfs( int now, int sum, bool check ) {\n  if ( !sum ) {\n    return 1;\n  }\n  if ( now == primes.size() || sum < primes[ now ] ) {\n    return 0;\n  }\n  if ( !dp[ now ][ sum ][ check ] ) {\n    return dp[ now ][ sum ][ check ];\n  }\n  int res = 0;\n  if ( !check ) {\n    res += dfs( now + 1, sum, false );\n  }\n  res += dfs( now + 1, sum - primes[ now ], true );\n  return dp[ now ][ sum ][ check ] = res;\n}\n\nint solve(int _n) {\n  static bool check = true;\n  if ( check ) {\n    for ( int i = 3; i * i <= 10000; i += 2 ) {\n      if ( is_prime[ i ] ) {\n        for ( int j = i * i; j <= 10000; j += i * 2 ) {\n          is_prime[ j ] = false;\n        }\n      }\n    }\n    for ( int i = 3; i <= 10000; i += 2 ) {\n      if ( is_prime[ i ] ) {\n        primes.push_back( i );\n      }\n    }\n    NCLR( dp );\n    check = false;\n  }\n  return dfs( 0, n, false );\n}\n\nvoid putsanswer() {\n  cout << solve( n ) << \"\\n\";\n}\n\nint main( int argc, char **argv ) {\n//#ifndef WIN32\n#ifdef severalTestCases\n  while ( input() ) {\n#else\n  input();\n  putsanswer();\n#endif\n  /*#else\n  ::testing::InitGoogleTest( &argc, argv );\n  return RUN_ALL_TESTS();    // gtest \n  #endif*/\n#ifdef severalTestCases\n  putsanswer();\n  }\n#endif\n  return 0;\n}\n\n/*#ifdef WIN32\nTEST( testcase, solve ) {\n}\n#endif*/"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\n#define MAX_N 7000000\nint x[MAX_N], sum[MAX_N + 1];\nvector<int>prime;\nint n;\n\nvoid PrimeCheckerDiv2(int c) {\n\tfor (int i = 2; i < c; i++) {\n\t\tfor (int j = 2; j <= sqrt(i); j++) {\n\t\t\tif (i%j == 0) { goto E; }\n\t\t}\n\t\tprime.push_back(i);\n\tE:;\n\t}\n}\n\nvoid TheSumPrimesDiv2(int d) {\n\tsum[0] = 0;\n\tfor (int i = 1; i <= d; i++) {\n\t\tsum[i] = prime[i - 1] + sum[i - 1];\n\t}\n}\n\nvoid ThePrimesConsecutiveDiv2(int e) {\n\tfor (int i = 1; i <= e; i++) {\n\t\tfor (int j = i; j < e; j++) {\n\t\t\tif (sum[j] - sum[i - 1] >= MAX_N) { break; }\n\t\t\tx[sum[j] - sum[i - 1]]++;\n\t\t}\n\t}\n}\n\nint main() {\n\tPrimeCheckerDiv2(MAX_N);\n\tTheSumPrimesDiv2(prime.size());\n\tThePrimesConsecutiveDiv2(prime.size());\n\twhile (true) {\n\t\tcin >> n;\n\t\tif (n == 0) { break; }\n\t\tcout << x[n] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 10000;\n\nvector<int> prime;\nbool is_prime[N+1];\nint data[1230];\n\nvoid sieve(){\n  fill(is_prime, is_prime+N+1, true);\n  is_prime[0] = is_prime[1] = false;\n  for(int i=2;i<=N;i++){\n    if(is_prime[i]){\n      prime.push_back(i);\n      for(int j=2*i;j<=N;j+=i) is_prime[j] = false;\n    }\n  }\n}\n\nvoid init(){\n  fill(data, data+1230, 0);\n  for(int i=0;i<prime.size();i++){\n    data[i+1] = data[i] + prime[i];\n  }\n}\n\nmain(){\n  sieve();\n  init();\n  int n;\n  while(cin >> n && n){\n    int l = 0, r = 1;\n    int ans = 0;\n    while(l < prime.size() && r <= prime.size()){\n      int tmp = data[r] - data[l];\n      if(tmp == n){\n        ans++;\n        l++;\n      }else if(tmp < n){\n        r++;\n      }else if(tmp > n){\n        l++;\n      }\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nconst int MAX_N = 10000;\nbool is_p[MAX_N+1] = {false,false};\nint ans[MAX_N+1] = {0};\n\nvoid sieve(){\n\tfor(int i = 2 ; i <= MAX_N ; i++ )\n\t\tis_p[i] = true;\n\tfor(int i = 2 ; i*i <= MAX_N ; i++ ){\n\t\tif( is_p[i] ){\n\t\t\tfor(int j = i+i ; j <= MAX_N ; j += i ){\n\t\t\t\tis_p[j] = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid f(){\n\tint p[1229], size = 0;\n\tfor(int i = 2 ; i <= MAX_N ; i++ ){\n\t\tif( is_p[i] ) p[size++] = i;\n\t}\n\t\n\tfor(int i = 0 ; i < size ; i++ ){\n\t\tint sum = 0;\n\t\tfor(int j = i ; j < size ; j++ ){\n\t\t\tsum += p[j];\n\t\t\tif( sum >= MAX_N ) continue;\n\t\t\tans[sum]++;\n\t\t}\n\t}\n}\n\nint main(){\n\tsieve();\n\tf();\n\t\n\tint n;\n\twhile( cin >> n , n ){\n\t\tcout << ans[n] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n\nusing namespace std;\n\nconst int MAX = 10001;\nbool prime[MAX];\nvector<int> V;\nint ans[MAX];\n\nvoid make(){\n\n  fill(prime,prime+MAX,true);\n  prime[0] = prime[1] = false;\n\n  for(int i = 2; i < MAX; i++)\n    if(prime[i])\n      for(int j = 2; i*j < MAX; j++)\n\tprime[i*j] = false;\n\n  for(int i = 0; i < MAX; i++)\n    if(prime[i]) V.push_back(i);\n\n  \n  for(int i = 0; i < V.size(); i++)\n    for(int j = 1; j < V.size()-i; j++){\n      int now = 0;\n      for(int k = i; k < i+j; k++)\n\tnow += V[k];\n      if(now < MAX) ans[now]++;\n      else break;\n    }\n}\n\nint main(){\n  make();\n  int in;\n  while(cin >> in && in) cout << ans[in] << endl;\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\n#define N 10010\nvector<int> Prime_Num;\nbool prime[N]={true};\n\nint makePrimeQ(){\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <queue>\nusing namespace std;\n\nint main(){\n  // ?´???°????±???????\n  vector<bool> furui(10001, true);\n  vector<int> prime;\n  for(int i = 2; i <= 10000; i++){\n    if(furui[i]){\n      prime.push_back(i);\n      for(int j = i + i; j <= 10000; j += i){\n        furui[j] = false;\n      }\n    }\n  }\n\n  queue<int> seq;\n  int n;\n\n  while(cin >> n && n > 0){\n    int sum = 0;\n    int ans = 0;\n    queue<int>().swap(seq);\n\n    for(int i = 0; i < prime.size(); i++){\n      seq.push(prime[i]);\n      sum += prime[i];\n\n      while(sum >= n){\n        if(sum == n)\n          ans++;\n        sum -= seq.front();\n        seq.pop();\n      }\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nvector<int> v;\n\nbool isPrime(int n) {\n    for (int i = 0; i < v.size() && v[i] * v[i] <= n; i++) {\n        if (n % v[i] == 0) return false;\n    }\n    return true;\n}\n\nint main() {\n    v.push_back(2);\n    v.push_back(3);\n    for (int i = 5; i * i <= 10000; i += 2) {\n        if (isPrime(i)) {\n            v.push_back(i);\n        }\n    }\n    \n    int sum[v.size() + 1];\n    fill(sum, sum + v.size() + 1, 0);\n    for (int i = 1; i < v.size() + 1; i++) {\n        sum[i] = sum[i - 1] + v[i - 1];\n    }\n    \n    while (true) {\n        int n;\n        cin >> n;\n        if (n == 0) return 0;\n        int count = 0;\n        for (int i = 1; i < v.size() + 1; i++) {\n            if (v[i - 1] > n) break;\n            for (int j = 0; j <= i; j++) {\n                if (sum[i] - sum[j] == n) {\n                    count++;\n                }\n            }\n        }\n        cout << count << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, s, n) for(int i = s; i < (int)n; ++i)\n#define per(i, n) for(int i = n; i >= 0; i--)\n#define ROF(i, s, n) for(int i = s; i >= (int)n; i--)\n#define FORIT(i, A) for (auto i : A)\n#define PRINT(x) cout << (x) << \"\\n\"\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define MP make_pair\n#define PB push_back\n#define EACH(i, n) for (__typeof((n).begin()) i = (n).begin(); i != (n).end(); ++i)\n#define SZ(a) int((a).size())\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n#define NCLR(a) memset((a), -1 ,sizeof(a))\n#define sq(n) (n) * (n)\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef priority_queue<int> maxpq;\ntypedef priority_queue< int, vector<int>, greater<int> > minpq;\ntypedef complex<double> Point;\nstatic const double EPS = 1e-10;\nstatic const double PI = acos( -1.0 );\nstatic const int mod = 1000000007;\nstatic const int INF = 1 << 29;\nstatic const LL LL_INF = 1ll << 60;\nstatic const int dx[] = { -1, 0, 1, 0, 1, -1, 1, -1 };\nstatic const int dy[] = { 0, -1, 0, 1, 1, 1, -1, -1 };\n\n#ifdef WIN32\n#include \"gtest/gtest.h\"\n#pragma comment (lib, \"gtest.lib\")\n#define dump(x) cerr << #x << \" = \" << (x) << \"\\n\"\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << \"\\n\"\n#else\n#define dump(x)\n#define debug(x)\n#endif\n\nint n;\n#define severalTestCases\nstatic VI primes( 1, 2 );\nstatic bool is_prime[10001];\n\nbool input() {\n  cin >> n;\n  return n;\n}\n\nstatic short dp[ 1229 ][ 10001 ][ 2 ];\n\nint dfs( int now, int sum, bool check ) {\n  if ( !sum ) {\n    return 1;\n  }\n  if ( now == primes.size() || sum < primes[ now ] ) {\n    return 0;\n  }\n  if ( !dp[ now ][ sum ][ check ] ) {\n    return dp[ now ][ sum ][ check ];\n  }\n  int res = 0;\n  if ( !check ) {\n    res += dfs( now + 1, sum, false );\n  }\n  res += dfs( now + 1, sum - primes[ now ], true );\n  return dp[ now ][ sum ][ check ] = res;\n}\n\nint solve(int _n) {\n  static bool check = true;\n  if ( check ) {\n    NCLR( is_prime );\n    for ( int i = 3; i * i <= 10000; i += 2 ) {\n      if ( is_prime[ i ] ) {\n        for ( int j = i * i; j <= 10000; j += i * 2 ) {\n          is_prime[ j ] = false;\n        }\n      }\n    }\n    for ( int i = 3; i <= 10000; i += 2 ) {\n      if ( is_prime[ i ] ) {\n        primes.push_back( i );\n      }\n    }\n    NCLR( dp );\n    check = false;\n  }\n  return dfs( 0, n, false );\n}\n\nvoid putsanswer() {\n  cout << solve( n ) << \"\\n\";\n}\n\nint main( int argc, char **argv ) {\n//#ifndef WIN32\n#ifdef severalTestCases\n  while ( input() ) {\n#else\n  input();\n  putsanswer();\n#endif\n  /*#else\n  ::testing::InitGoogleTest( &argc, argv );\n  return RUN_ALL_TESTS();    // gtest \n  #endif*/\n#ifdef severalTestCases\n  putsanswer();\n  }\n#endif\n  return 0;\n}\n\n/*#ifdef WIN32\nTEST( testcase, solve ) {\n}\n#endif*/"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int p[10001],M=10001,i,j,c;vector<int>s(1,0);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){vector<int>::iterator t=s.begin();for(c=0;t!=s.end();t++)c+=binary_search(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int M=10001,i,j,c;vector<int>s(1,0),p(M);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){vector<int>::iterator t=s.begin();for(c=0;t!=s.end();t++)c+=binary_search(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <stdio.h>\n#include <unordered_set>\n\nusing namespace std;\n\n#define ll long long\n\nll p[10001];\nvector<ll> prime;\n\nint main(){\n  for(ll i = 0; i < 10001; i++){\n    p[i] = 0;\n  }\n  p[0] = p[1] = 1;\n  \n  ll id = 2;\n  while(1){\n    while(id <= 10000 &&  p[id] == 1){\n      id++;\n    }\n    if(id >= 10000){\n      break;\n    }\n    ll temp = 2 * id;\n    while(temp <= 10000){\n      p[temp] = 1;\n      temp += id;\n    }\n    id++;\n  }\n\n  for(ll i = 0; i <= 100; i++){\n     cout << i << ' ' << p[i] << endl;\n  }\n\n  for(ll i = 2; i <= 10000; i++){\n    if(p[i] == 0){\n      prime.push_back(i);\n    }\n  }\n\n  for(vector<ll>::iterator it = prime.begin(); it != prime.end(); it++){\n    cerr << *it << ' ';\n  }\n  cerr << '\\n';\n  \n  ll n = prime.size();\n  vector<ll> sum(n);\n  sum[0] = prime[0];\n  unordered_set<ll> us;\n  us.insert(sum[0]);\n  for(ll i = 1; i < n; i++){\n    sum[i] = sum[i-1] + prime[i];\n    us.insert(sum[i]);\n  }\n  us.insert(0);\n\n  ll k;\n  while(cin >> k && k){\n    ll cnt = 0;\n    for(ll i = 0; i < n; i++){\n      if(us.find(k+sum[i]) != us.end() || k == sum[i]){\n\n\tcnt ++;\n      }\n    }\n    cout << cnt << endl;\n  }\n}\n  "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string.h>\n\nusing namespace std;\nvector<int> Prime;\nbool isPrime[10100];\n\nvoid PrimeCalc()\n{\n\tmemset(isPrime, 1, sizeof(isPrime));\n\tisPrime[0] = isPrime[1] = false;\n\tfor(int i = 2; i < 10100; ++i)\n\t{\n\t\tif(isPrime[i])\n\t\t{\n\t\t\tPrime.push_back(i);\n\t\t\tfor(int j = 2 * i; j < 10100; j += i)\n\t\t\t{\n\t\t\t\tisPrime[j] = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid solve()\n{\n\tPrimeCalc();\n\tint n;\n\twhile(cin >> n, n)\n\t{\n\t\tint count = 0;\n\t\tfor(int i = 0; i < Prime.size(); ++i)\n\t\t{\n\t\t\tint pos = i + 1;\n\t\t\tint sum = Prime[i];\n\t\t\twhile(sum < n)\n\t\t\t{\n\t\t\t\tsum += Prime[pos];\n\t\t\t\t++pos;\n\t\t\t}\n\t\t\tif(sum == n)\n\t\t\t{\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\t\tcout << count << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nvector<int> prime;\n\nvoid make(){\n  bool p[10010];\n  fill(p, p+10010, true);\n  p[0] = p[1] = false;\n  for(int i = 0 ; i*i < 10010 ; i++){\n    if(p[i]){\n      for(int j = 2*i ; j < 10010 ; j += i){\n\tp[j] = false;\n      }\n    }\n  }  \n  for(int i = 0 ; i < 10010 ; i++){\n    if(p[i]) prime.push_back(i);\n  }  \n}\n\nint solve(vector<int> prime, int S){\n  int ans = 0;\n  int s = 0, t = 0, sum = 0;\n  for(; ;){\n    while(t < prime.size() && sum < S){\n      sum += prime[t++];\n    }\n    if(prime[s] > S) break;\n    if(sum == S) ans++;\n    sum -= prime[s++];\n  }\n  return ans;\n}\n\nint main(){\n  make();\n  int n;\n  while(cin >> n, n){\n    cout << solve(prime, n) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <stdio.h>\n#include <unordered_set>\n\nusing namespace std;\n\n#define ll long long\n\nll p[10001];\nvector<ll> prime;\n\nint main(){\n  for(ll i = 0; i < 10001; i++){\n    p[i] = 0;\n  }\n  p[0] = p[1] = 1;\n  \n  ll id = 2;\n  while(1){\n    while(id <= 10000 &&  p[id] == 1){\n      id++;\n    }\n    if(id >= 10000){\n      break;\n    }\n    ll temp = 2 * id;\n    while(temp <= 10000){\n      p[temp] = 1;\n      temp += id;\n    }\n    id++;\n  }\n\n  for(ll i = 0; i <= 100; i++){\n    //    cout << i << ' ' << p[i] << endl;\n  }\n\n  for(ll i = 2; i <= 10000; i++){\n    if(p[i] == 0){\n      prime.push_back(i);\n    }\n  }\n\n  for(vector<ll>::iterator it = prime.begin(); it != prime.end(); it++){\n    //   cerr << *it << ' ';\n  }\n  //  cerr << '\\n';\n  \n  ll n = prime.size();\n  vector<ll> sum(n);\n  sum[0] = prime[0];\n  unordered_set<ll> us;\n  us.insert(sum[0]);\n  for(ll i = 1; i < n; i++){\n    sum[i] = sum[i-1] + prime[i];\n    us.insert(sum[i]);\n  }\n  us.insert(0);\n\n  ll k;\n  while(cin >> k && k){\n    ll cnt = 0;\n    for(ll i = 0; i < n; i++){\n      if(us.find(k+sum[i]) != us.end() || k == sum[i]){\n\n\tcnt ++;\n      }\n    }\n    cout << cnt << endl;\n  }\n}\n  "
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <deque>\n#include <iomanip>\n#include <limits>\n#include <map>\n#include <queue>\n#include <stack>\n#include <vector>\n\n#define FOR(i,k,n) for(int (i) = (k); (i) < (n); ++(i))\n#define rep(i,n) FOR(i,0,n)\n#define pb push_back\n#define all(v) begin(v), end(v)\n#define debug(x) cerr << #x << \": \" << x << endl\n#define debug2(x,y) cerr << #x << \": \" << x << \", \" << #y << \": \" << y << endl\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\ntypedef pair<i_i, int> p_i;\ntypedef vector<int> vi;\ntypedef vector< vector<int> > vvi;\ntemplate<class T> using vv=vector< vector<T> >;\ntypedef deque<int> di;\ntypedef deque< deque<int> > ddi;\n\n\nint main() {\n    vi V;\n    FOR(i,2,10001) {\n        V.pb(i);\n    }\n    rep(i,V.size()) {\n        int v = V.at(i);\n        for(int j = V.size() -1;j > i; j--) {\n            if(V.at(j) % v == 0) V.erase(V.begin()+j);\n        }\n    }\n    while(1) {\n        int count = 0;\n        int i=0;\n        queue<int> Q; \n        int sum = 0;\n        int A;\n        cin >> A;\n        if(A == 0) {\n            break;\n        }\n        while(1) {\n            if(sum == A) {\n                count += 1;\n                sum += V[i];\n                Q.push(V[i++]);\n            } else if(sum > A) {\n                if(Q.size() == 1){\n                    break;\n                } else {\n                    sum -= Q.front();\n                    Q.pop();\n                }\n            } else {\n                sum += V[i];\n                Q.push(V[i++]);\n            }\n        }\n        cout << count << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define F first\n#define S second\n#define INF 1 << 30\n\nint main(){\n  int p[1000] = {};\n  p[0] = p[1] = 1;\n  for(int i = 2; i <= 1000 / 2; i++)\n    if(!p[i])\n      for(int j = i+i; j <= 1000; j+=i) p[j] = 1;\n\n  vector<int>sp;\n  rep(i, 1000) if(!p[i]) sp.push_back(i);\n\n  int n;\n  while(scanf(\"%d\", &n) && n){\n    int res = 0;\n\n    rep(i, sp.size()){\n      int s = 0;\n      for(int j = i; j < sp.size() || s <= n; j++){\n\ts += sp[j];\n\tif(s == n) res++;\n\tif(s >= n) break;\n      }\n    }\n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nbool isprimeDiv2(int n, int k = 2)\n{\n\tif (n == 1) { return false; }\n\n\tif (n < k * k) { return true; }\n\n\tif (n % k == 0) { return false; }\n\n\treturn isprimeDiv2(n, k + 1);\n}\n\nint main()\n{\n\tvector<int> primes;\n\n\tfor (int i = 1; i <= 10000000; i++)\n\t{\n\t\tif (isprimeDiv2(i))\n\t\t{\n\t\t\tprimes.push_back(i);\n\t\t}\n\t}\n\n\tvector<int> consecutive(10000001,  0);\n\n\tfor (int i = 0; i < primes.size(); i++)\n\t{\n\t\tfor (int j = i; j < primes.size(); j++)\n\t\t{\n\t\t\tint sum = 0;\n\n\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t{\n\t\t\t\tsum += primes[k];\n\n\t\t\t\tif (sum > 1000000)\n\t\t\t\t{\n\t\t\t\t\tgoto Exit;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsecutive[sum]++;\n\t\t}\n\n\tExit:;\n\t}\n\n\tint n;\n\n\twhile (true)\n\t{\n\t\tcin >> n;\n\n\t\tif (n == 0) { break; }\n\n\t\tcout << consecutive[n] << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<vector>\nusing namespace std;\n#define rep(i, j) for(int i = 0; i < j; i++)\nconst int MAX_N = 10010;\n\nvector<int> prime;\nbool flg[MAX_N];\n\nvoid make_prime(){\n    flg[0] = true; flg[1] = true;\n    rep(i, MAX_N){\n        if(flg[i]) continue;\n        prime.push_back(i);\n        for(int j = i; j < MAX_N; j += i) flg[j] = true;\n    }\n}\n\nint cnt_prime(int n){\n    int ret = 0;\n    rep(i, prime.size()){\n        int sum = 0;\n        for(int j = i; j < prime.size(); j++){\n            sum += prime[j];\n            if(sum == n) ret++;\n        }\n    }\n    return ret;\n}\n\nint main(){\n    make_prime();\n    int n;\n    while(cin >>n && n) cout <<cnt_prime(n) <<endl;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\n#define long long long\nusing namespace std;\n\nbool is_prime[10001];\nint prime[10001];\nint main() {\n\tmemset(is_prime, 1, sizeof(is_prime));\n\tis_prime[0] = is_prime[1] = false;\n\tint p = 1;\n\tfor (int i = 2; i <= 10000; i++) {\n\t\tif (is_prime[i]) {\n\t\t\tprime[p++] = prime[p - 1] + i;\n\t\t\tfor (int j = i * 2; j <= 10000; j += i)is_prime[j] = false;\n\t\t}\n\t}\n\tmap<int, int>mp;\n\tfor (int i = 0; i < p; i++) {\n\t\tfor (int j = i + 1; j < p&&prime[j] - prime[i] <= 10000; j++) {\n\t\t\tmp[prime[j] - prime[i]]++;\n\t\t}\n\t}\n\tint n;\n\twhile (scanf(\"%d\", &n), n)printf(\"%d\\n\", mp[n]);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint a[10009];\nvector<int> p;\nmap<int,int> m;\n\nvoid sieve()\n{\n    int i,j,t1,t2;\n    for(i=0;i<10003;i++)\n        a[i]=1;\n    a[0]=a[1]=0;\n    for(i=2;i<=10000;i++)\n    {\n        if(a[i]==1)\n        {\n            p.push_back(i);\n            for(j=2*i;j<=10000;j+=i)\n            {\n                a[j]=0;\n            }\n        }\n    }\n    for(i=0;i<p.size();i++)\n    {\n        t1=0;\n        for(j=i;j<p.size();j++)\n        {\n            t1+=p[j];\n            m[t1]++;\n        }\n    }\n    return;\n}\n\n\nint main()\n{\n    int i,j,t1,t2,n,ans;\n    sieve();\n    while(1)\n    {\n        scanf(\"%d\",&n);\n        if(n==0)\n            break;\n        ans=m[n];\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n\n#define\tpb\t\t\tpush_back\n#define\trep(i,n)\tfor(int i=0;i<n;i++)\n\nusing namespace std;\n\ntypedef\tvector<int>\tvi;\n\nint main(){\n\tconst int Ne=10010;\n\tstatic bool er[Ne]; er[0]=er[1]=true;\n\tfor(int i=2;i*i<Ne;i++) if(!er[i]) for(int j=i*i;j<Ne;j+=i) er[j]=true;\n\tvi p; rep(i,Ne) if(!er[i]) p.pb(i);\n\n\tfor(int n;scanf(\"%d\",&n),n;){\n\t\tint cnt=0;\n\t\trep(i,p.size()){\n\t\t\tif(p[i]>n)\tbreak;\n\t\t\tint sum=0;\n\t\t\tfor(int j=i;;j++){\n\t\t\t\tsum+=p[j];\n\t\t\t\tif(sum>=n)\tbreak;\n\t\t\t}\n\t\t\tif(sum==n)\tcnt++;\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int M=10001,i,j,c;vector<int>s(M,0),p(M);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){vector<int>::iterator t=s.begin();for(c=0;t!=s.end();t++)c+=count(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\n#define N 100100000\nvector<int> Prime_Num;\nbool prime[N]={true};\n\nint makePrimeQ(){\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <iomanip>\n\n#define REP(i,n) for(i=0; i < (n); i++)\n#define REPONE(i, n) for(i=1; i <= (n); i++)\n#define LOOP(n) for(int loopCount=1; loopCount <= (n); loopCount++)\n#define ITER(c) __typeof((c).begin())\n#define EACH(c,it) for(ITER(c) it =(c).begin(); it!=(c).end(); it++)\n#define SZ(c) ((int) (c).size())\n#define ALL(c) c.begin(), c.end()\n#define SUM(c) accumulate(ALL(c), 0)\n#define EXIST(c,v) (find(ALL(c), (v)) != (c).end())\n#define PB push_back\n#define MP make_pair\n\nusing namespace std;\nstatic const double EPS = 1e-9;\nstatic const double PI = 3.141592653589793238462643383279;\ntypedef long long ll;\n\nvector<int> ps;\n\nvoid primeTable(int n){\n    vector<int> table(n+1, 0);\n    for(int i=2; i<=n; i++){\n        if(!table[i]){\n            ps.push_back(i);\n        if(i <= sqrt(n)) table[i*i] = i;\n        }\n        else{\n        int j = i, step = table[i];\n            while(j+step<=n){\n                if(!table[j+step]) {\n                    table[j+step] = step;\n                    break;\n                }\n                else {\n                    int tmp = step;\n                    step = table[j+step];\n                    table[j+tmp] = tmp;\n                    j += tmp;\n                }\n            }\n        }\n    }\n}\n\nint main(){\n    primeTable(10001);\n    int cnt, n, i, s = SZ(ps);\n    vector<int> sums(s+1);\n    sums[0] = 0;\n    REP(i,s) sums[i+1] = sums[i] + ps[i];\n    while(scanf(\"%d\",&n)){\n        if(!n) break;\n        cnt = 0;\n        REPONE(i,s)if(binary_search(ALL(sums),sums[i]-n))cnt++;\n        printf(\"%d\\n\", cnt);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint h[10001], p[10001];\nvector<int>prime;\n\nint main(){\n\n    for(int i=2; i<=10000; i++){\n        int s = sqrt(i), flag=0;\n        for(int j=2; j*j<=i; j++){\n            if(i%j==0){\n                flag=1;\n                break;\n            }\n        }\n        if(!flag){\n            prime.push_back(i);\n        }\n    }\n\n    for(int i=0; i<prime.size(); i++){\n        int sum=0;\n        for(int j=i; j<prime.size(); j++){\n            sum+=prime[j];\n            if(sum>10000){\n                break;\n            }\n            h[sum]++;\n        }\n    }\n\n    int q;\n    //scanf(\"%d\", &q);\n    while(1){\n        int n;\n        cin>>n;\n        if(!n) return 0;\n        cout<<h[n]<<\"\\n\";\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\n#define N 50000000\nvector<int> Prime_Num;\nbool prime[N]={true};\n\nint makePrimeQ(){\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nconst int MAX_SIZE = 10000;\nconst int MAX_PRIME = 10000;\n\n\nint prime[MAX_PRIME+1];\nbool isPrime[MAX_PRIME+1];\nint p;\n\nvoid erats(){\n\t// primeツδ環スツトツづーツ渉可甘コツ可サ\n\tfill(isPrime,isPrime+MAX_PRIME,true);\n\tp = 0;\n\tisPrime[0] = isPrime[1] = false;\n\n\tfor(int i = 2; i <= MAX_PRIME; i++){\n\t\tif(isPrime[i]){\n\t\t\tprime[p++] = i;\n\t\t}\n\t\telse\n\t\t\tcontinue;\n\n\t\t// ツづ督づゥツつ「ツづ可つゥツつッツづゥ\n\t\tfor(int j = 2*i; j <= MAX_PRIME; j+=i){\n\t\t\tisPrime[j] = false;\n\t\t}\n\t}\n}\n\nint main(){\n\n    int n;\n    erats();\n    while(cin>>n&&n!=0){\n        int head=0;\n        int tail=0;\n        int sum=prime[head];\n        int cnt=0;\n        while(tail<n&&head<=tail){\n            if(sum==n)\n                cnt++;\n            if(sum>=n){\n                sum-=prime[head];\n                head++;\n            }\n            else if(sum<n){\n                tail++;\n                sum+=prime[tail];\n            }\n        }\n        cout<<cnt<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main(){\n    bool is_prime[1000000];\n\n    is_prime[0]=is_prime[1]=false;\n    for(int i=2;i<1000000;i++){\n        is_prime[i]=true;\n    }\n\n    for(int i=2;i*i<1000000;i++){\n        if(is_prime[i]){\n            for(int j=i*i;j<1000000;j+=i){\n                is_prime[j]=false;\n            }\n        }\n    }\n\n    \n    while(true){\n        int n;\n        cin>>n;\n\n        if(n==0) break;\n        \n        int cnt=0;\n        for(int i=2;i<=n;i++){\n            if(is_prime[i]==false) continue;\n            int ans=0;\n            for(int j=i;j<=n;j++){\n                if(is_prime[j]) ans+=j;\n                if(ans>=n) break;\n            }\n            if(n==ans) cnt++;\n        }\n        cout<<cnt<<endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <ctime>\n\nusing namespace std;\n\n#define dump(n) cout<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define debug(n) cout<<__FILE__<<\",\"<<__LINE__<<\": #\"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();i++)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nint main()\n{\n\tvi is_prime(10000,1);\n\tis_prime[0]=is_prime[1]=0;\n\trep(i,is_prime.size()){\n\t\tif(is_prime[i])\n\t\t\tfor(int j=i+i;j<is_prime.size();j+=i)\n\t\t\t\tis_prime[j]=0;\n\t}\n\tvi primes;\n\trep(i,is_prime.size())\n\t\tif(is_prime[i])\n\t\t\tprimes.push_back(i);\n\t\n\tvi psum(primes.size()+1);\n\tpartial_sum(allof(primes),psum.begin()+1);\n\t\t\t\n\tfor(int n;cin>>n,n;){\n\t\tint res=0;\n\t\trep(i,psum.size())\n\t\t\trepi(j,i+1,psum.size())\n\t\t\t\tif(psum[j]-psum[i]==n)\n\t\t\t\t\tres++;\n\t\tcout<<res<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nset<int>primes;\nint main(){\n    int n;\n    while(true){\n        cin>>n;\n        primes.clear();\n        if(n==0)\n            break;\n        for(int i=2;i<=n;++i)\n            primes.insert(i);\n        for(auto i=primes.begin();i!=primes.end();++i){\n            for(long j=(*i)*2;j<=n;j+=*i){\n                if(primes.find(j)!=primes.end()){\n                    primes.erase(j);\n                }\n            }\n        }\n        int c=0;\n        for(auto it=primes.begin();it!=primes.end();++it){\n                int sum=0;\n                for(auto j=it;j!=primes.end();++j){\n                    sum+=*j;\n                    if(sum==n){\n                        ++c;\n                        break;\n                    }\n                    if(sum>n)\n                        break;\n                }\n        }\n        cout<<c<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<unordered_map>\n#include<queue>\nusing namespace std;\n\nint ruisekiwa[10000];\nint S[10001];\nsigned main() {\n\tint sum = 2;\n\truisekiwa[1] = 2;\n\tfor (int i = 3; i < 10000; i++) {\n\t\tbool a = true;\n\t\tfor (int j = 2; j*j <= i; j++) {\n\t\t\tif (i%j == 0)a = false;\n\t\t}\n\t\tif (a) {\n\t\t\truisekiwa[sum] = ruisekiwa[sum - 1] + i;\n\t\t\tsum++;\n\t\t}\n\t}\n\tfor (int i = 0; i < sum; i++) {\n\t\tfor (int j = i + 1; j < sum; j++) {\n\t\t\tint x = ruisekiwa[j] - ruisekiwa[i];\n\t\t\tif (x <= 10000)S[x]++;\n\t\t}\n\t}\n\tint a;\n\twhile (cin >> a, a) {\n\t\tcout << S[a] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n\n\nint main() {\n    int N;\n\n    bool isPrime[10001];\n    for (int i = 0; i < 10001; i++) isPrime[i] = 1;\n    isPrime[0] = isPrime[1] = 0;\n    for (int i = 0; i < 10001; i++) {\n        if (!isPrime[i]) continue;\n        for (int j = 2; j * i < 10001; j++) {\n            isPrime[i*j] = 0;\n        }\n    }\n\n    vector<int> prime;\n    prime.push_back(0);\n    for (int i = 0; i < 10001; i++) if (isPrime[i]) prime.push_back(i);\n    for (int i = 1; i < prime.size(); i++) prime[i] += prime[i-1];\n    \n    while (cin >> N, N) {\n        int ans = 0;\n        int i = 0, j = 0;\n        while (i < prime.size() || j < prime.size()) {\n            int sub = prime[j] - prime[i];\n            if (sub < N) j++;\n            else if (sub >= N) {\n                i++;\n                if (sub == N) ans++;\n            }\n        }\n        cout << ans << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nvector<int> prime(1001,1);\nvector<long long int> sum(1002, 0);\n\nint main(void){\n\n    int i,j;\n    for(i=2; i<=1000; ++i){\n        if(prime[i] == 0) continue;\n        for(j=2; i*j <= 1000; ++j){\n            prime[i*j] = 0;\n        }\n    }\n\n    j = 1;\n    for(i=2; i<=1000; ++i){\n        if(prime[i] == 1){\n            sum[j] = sum[j-1] + i;\n            j++;\n        }\n    }\n\n    int n = 0;\n    int cnt;\n    while(cin >> n, n != 0){\n        i = 1;\n        cnt = 0;\n        while(i <= 1000){\n            if(sum[i] < n){\n            }else if(sum[i] == n){\n                cnt++;\n            }else{\n                if(find(sum.begin(), sum.end(), sum[i]-n) != sum.end()){\n                    cnt++;\n                }\n            }\n            i++;\n        }\n        cout << cnt << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef tuple<int, int> duo;\n\n#define TT template<typename T>\n#define TTF template<typename T, typename F>\n#define ET(T) typename T::value_type\nTT inline T sq(T x){return x*x;}\nTT inline T In(){T x;cin>>x;return x;}\nTT inline void Out(T&x){cout<<x;}\nTT inline void sort(T&v){sort(begin(v),end(v));}\nTT inline void revs(T&v){reverse(begin(v),end(v));}\nTT inline void uniq(T&v){sort(v);v.erase(unique(begin(v),end(v)),end(v));}\nTT inline int ubnd(T&v,ET(T)&x){return upper_bound(begin(v),end(v),x)-begin(v);}\nTT inline int lbnd(T&v,ET(T)&x){return lower_bound(begin(v),end(v),x)-begin(v);}\nTTF inline void inpt(T&v,int n,F f){for(v.reserve(n);n--;v.emplace_back(f()));}\nTTF inline void show(T&v,F f,string d=\" \",string e=\"\\n\"){int i=0;for(auto&x:v)i++&&(cout<<d),f(x);cout<<e;}\n#undef TT\n#undef TTF\n#undef ET\n\ninline void fast_io(){ios::sync_with_stdio(0);cin.tie(0);}\ninline int in(){int x;scanf(\"%d\",&x);return x;}\ninline ll pow_mod(ll a,ll k,ll m){ll r=1;for(;k>0;a=a*a%m,k>>=1)if(k&1)r=r*a%m;return r;}\ninline ll mod_inv(ll a,ll p){return pow_mod(a,p-2,p);}\n\nconst int dx[] = {0, 0, 1, -1, 1, 1, -1, -1};\nconst int dy[] = {1, -1, 0, 0, 1, -1, 1, -1};\nconst int Mod = 1000000000;\nconst int N = 10001;\n\nbool sieve[N] = {true, true};\nint main()\n{\n  for (int i = 2; i * i < N; i++){\n    if (sieve[i]) continue;\n    for (int j = i * i; j < N; j += i) sieve[j] = true;\n  }\n  vector<int> primes;\n  for (int i = 0; i < N; i++){\n    if (!sieve[i]) primes.push_back(i);\n  }\n  int pat[N] = {};\n  for (int i = 0; i < primes.size(); i++){\n    int sum = 0;\n    for (int j = 0; j + i < primes.size(); j++){\n      sum += primes[i + j];\n      if (sum < N) pat[sum]++;\n    }\n  }\n  int n;\n  while (n = in()){\n    printf(\"%d\\n\", pat[n]);\n  }\n\n  return (0);\n}\n\n// priority_queue queue deque front stringstream max_element min_element insert count make_tuple"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\nvector<int> primeList;\n\nvoid setPrimeList()\n{\n\tprimeList.push_back(2);\n\tfor(int c = 3; c < 10000; c++) {\n\t\tbool flag = true;\n\t\tfor(int j = 2; j * j <= c; j++) { // ??????????????§???????????°?????????<=???=???????????¨??????9??§??°???\n\t\t\tif(!(c % j)) flag = false;\n\t\t}\n\t\tif(flag){\n\t\t\tprimeList.push_back(c);\n\t\t}\n\t}\n}\n\n\nint main()\n{\n\tsetPrimeList();\n\tint n;\n\twhile(true) {\n\t\tcin >> n;\n\t\tif(n == 0) break;\n\n\t\tint count = 0;\n\t\tint sum = 0; // ?????????????¨????????????¨??????????????£?????????????????§???????????????\n\t\t// ????????£????????¨???deque?????????????????????????????§???????????????\n\t\tint init_index = 0;\n\t\tint end_index = -1; //?????????????????????????????????0??\\???-1??\\??????\n\n\t\twhile(true) { // ?°??????????????????????\n\t\t\tif(sum < n) {\n\t\t\t\tend_index++;\n\t\t\t\tif(end_index >= primeList.size()) { //?¶????????????????????????????????°?????¶?????????????????????????\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tsum += primeList[end_index]; //?°??????????????????????\n\t\t\t\t}\n\t\t\t} else if(sum == n){\n\t\t\t\tcount++; //???????????£???????????£??????\n\t\t\t\tsum -= primeList[init_index]; //?????????\n\t\t\t\tinit_index++; //?????????\n\t\t\t} else {\n\t\t\t\tsum -= primeList[init_index];\n\t\t\t\tinit_index++;\n\t\t\t}\n\t\t}\n\n\t\tcout << count << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\nconst int MAX_PRIME = 10001;\n\nvector<int> is_prime(MAX_PRIME,1);\n\nvoid calcPrime(){\n\tis_prime[0]=is_prime[1]=0;\n\tfor(int i=2; i<MAX_PRIME; i++){\n\t\tif(is_prime[i]==1){\n\t\t\tfor(int j=i*2; j<MAX_PRIME; j+=i){\n\t\t\t\tis_prime[j]=0;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\nint main(){\n\tvi v;\n\tcalcPrime();\n\tfor(int i = 2; i < MAX_PRIME; i++){\n\t\tif(is_prime[i]) v.pb(i);\n\t}\n\n\tint n, ans;\n\twhile(cin>>n && n > 0){\n\t\tans = 0;\n\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\tint sum = 0;\n\t\t\tfor(int j = i; j < v.size(); j++){\n\t\t\t\tsum+=v[j];\n\t\t\t\tif(sum >= n) break;\n\t\t\t}\n\t\t\tif(sum == n) ans++;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(){\n  int n;\n  int p[10100];\n  vector<int> primes;\n  \n  for(int i=0;i<=10000;i++)p[i] = 0;\n  for(int i=2;i<=10000;i++){\n    bool f = true;\n    for(int j=2;j*j<=i;j++){\n      if(i%j==0){\n\tf = false;\n\tbreak;\n      }\n    }\n    if(f)primes.push_back(i);\n  }\n\n  for(int i=0;i<primes.size();i++){\n    int sum = 0;\n    for(int j=i;j<primes.size();j++){\n      sum += primes[j];\n      if(sum>10000)break;\n      p[sum]++;\n    }\n  }\n\n  while(cin >> n,n)cout << p[n] << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string.h>\n\nusing namespace std;\nbool IsPrime[15000];\nvector<int> Prime;\n\nvoid calc()\n{\n\tmemset(IsPrime, 1, 15000);\n\tfor(int i = 2; i < 15000; ++i)\n\t{\n\t\tif(IsPrime[i])\n\t\t{\n\t\t\tPrime.push_back(i);\n\t\t\tfor(int j = 2 * i; j < 15000; j += i)\n\t\t\t{\n\t\t\t\tIsPrime[j] = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid solve()\n{\n\tcalc();\n\tint n;\n\twhile(cin >> n, n)\n\t{\n\t\tint count = 0;\n\t\tfor(int i = 0; Prime[i] <= n; ++i)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tint pos = i;\n\t\t\twhile(sum < n)\n\t\t\t{\n\t\t\t\tsum += Prime[pos];\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif(sum == n)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcout << count << endl;\n\t}\n\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\n#include <cstdlib>\n#include <vector>\n\nusing namespace std;\n\n\nint main() {\n  // create a vector to store inputs\n  vector<int> inputs;\n  int n_inputs = 0;\n  int max_prime = 0;\n  int input;\n  while (cin >> input) {\n    if (input == 0) break;\n    if (input > max_prime) max_prime = input;\n    ++n_inputs;\n    inputs.push_back(input);\n  }\n\n  cout << \"max prime is \" << max_prime << endl;\n  vector<bool> primes_bool(max_prime + 1, true);\n\n  int cur_prime = 2;\n  while (cur_prime <= max_prime) {\n    if (primes_bool[cur_prime] == true) {\n      for (int l = cur_prime * 2; l <= max_prime; l += cur_prime) {\n\tprimes_bool[l] = false;\n      }\n    }\n    ++cur_prime;\n  }\n\n\n\n  //solve for each inputs\n  for (int i = 0; i < n_inputs; ++i) {\n    queue<int> primes_Q;\n    int cur_input = inputs[i];\n    for (int j = 2; j <= cur_input; ++j) {\n      if (primes_bool[j] == true) { //if prime\n\tprimes_Q.push(j);\n      }\n    }\n    queue<int> sum_Q;\n\n    int count = 0; //count of sums\n    int cur_sum = 0; //dynamic sum\n\n    while (true) {\n      if (cur_sum == cur_input) {\n\t++count;\n\tcur_sum -= sum_Q.front();\n\tsum_Q.pop();\n      } else if (cur_sum < cur_input) {\n\tif (primes_Q.empty()) break;\n\tcur_sum += primes_Q.front();\n\tsum_Q.push(primes_Q.front());\n\tprimes_Q.pop();\n      } else if (cur_sum > cur_input) {\n\tcur_sum -= sum_Q.front();\n\tsum_Q.pop();\n      }\n    }\n\n    cout << count << endl;\n  }\n}\n    \n      \n      \n\n  \n  \n\n  \n  \n  \n    "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint main(){\n    bool f[10000];fill_n(f,10000,true);\n    f[0]=f[1]=false;\n    vector<int>P;\n    for(int i=2;i<10000;i++){\n        if(!f[i])continue;\n        for(int j=i+i;j<10000;j+=i)f[j]=false;\n        P.push_back(i);\n    }\n\n    int n;\n    while(cin>>n,n){\n        int cnt=0;\n        for(int i=0;i<P.size();i++){\n            int sum=0;\n            int idx=i;\n            while(idx<P.size()&&sum<n)sum+=P[idx++];\n            if(n==sum)cnt++;\n        }\n        cout<<cnt<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nvoid primeNumber(int N, vector<bool>& prime)\n{\n    prime.assign(N+1, true);\n    prime [0] = prime[1] = false;\n    for(int i=2; i*i<=N; i++){\n        if(prime[i]){\n            for(int j=i; i*j<=N; j++){\n                prime[i*j] = false;\n            }\n        }\n    }\n}\n\nint main()\n{\n    vector<bool> isPrime;\n    primeNumber(10000, isPrime);\n\n    vector<int> prime;\n    for(int i=1; i<=10000; ++i){\n        if(isPrime[i])\n            prime.push_back(i);\n    }\n\n    int n = prime.size();\n    vector<int> ret(10001, 0);\n    for(int i=0; i<n; ++i){\n        int x = 0;\n        for(int j=i; j<n; ++j){\n            x += prime[j];\n            if(x <= 10000)\n                ++ ret[x];\n        }\n    }\n\n\n    for(;;){\n        int a;\n        cin >> a;\n        if(a == 0)\n            return 0;\n        cout << ret[a] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <deque>\n#include <iomanip>\n#include <limits>\n#include <map>\n#include <queue>\n#include <stack>\n#include <vector>\n\n#define FOR(i,k,n) for(int (i) = (k); (i) < (n); ++(i))\n#define rep(i,n) FOR(i,0,n)\n#define pb push_back\n#define all(v) begin(v), end(v)\n#define debug(x) cerr << #x << \": \" << x << endl\n#define debug2(x,y) cerr << #x << \": \" << x << \", \" << #y << \": \" << y << endl\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\ntypedef pair<i_i, int> p_i;\ntypedef vector<int> vi;\ntypedef vector< vector<int> > vvi;\ntemplate<class T> using vv=vector< vector<T> >;\ntypedef deque<int> di;\ntypedef deque< deque<int> > ddi;\n\n\nint main() {\n    vi V;\n    FOR(i,2,10008) {\n        V.pb(i);\n    }\n    rep(i,V.size()) {\n        int v = V.at(i);\n        for(int j = V.size() -1;j > i; j--) {\n            if(V.at(j) % v == 0) V.erase(V.begin()+j);\n        }\n    }\n    while(1) {\n        int count = 0;\n        int i=0;\n        queue<int> Q; \n        int sum = 0;\n        int A;\n        cin >> A;\n        if(A == 0) {\n            break;\n        }\n        while(1) {\n            if(sum == A) {\n                count += 1;\n                sum += V[i];\n                Q.push(V[i++]);\n            } else if(sum > A) {\n                if(Q.size() == 1){\n                    break;\n                } else {\n                    sum -= Q.front();\n                    Q.pop();\n                }\n            } else {\n                sum += V[i];\n                Q.push(V[i++]);\n            }\n        }\n        cout << count << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n\n\nint main() {\n    int N;\n\n    bool isPrime[10001];\n    for (int i = 0; i < 10001; i++) isPrime[i] = 1;\n    isPrime[0] = isPrime[1] = 0;\n    for (int i = 0; i < 10001; i++) {\n        if (!isPrime[i]) continue;\n        for (int j = 2; j * i < 10001; j++) {\n            isPrime[i*j] = 0;\n        }\n    }\n\n    vector<int> prime;\n    prime.push_back(0);\n    for (int i = 0; i < 10001; i++) if (isPrime[i]) prime.push_back(i);\n    for (int i = 1; i < prime.size(); i++) prime[i] += prime[i-1];\n    \n    while (cin >> N, N) {\n        int ans = 0;\n        int i = 0, j = 0;\n        while (i < prime.size() && j < prime.size()) {\n            int sub = prime[j] - prime[i];\n            if (sub < N) j++;\n            else if (sub >= N) {\n                i++;\n                if (sub == N) ans++;\n            }\n        }\n        cout << ans << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  vector<bool> prime(10100, true);\n  prime[0] = prime[1] = false;\n  for(int i = 2; i * i < 10100; ++i) {\n    if(prime[i]) {\n      for(int j = i * i; j < 10100; j += i) {\n        prime[j] = false;\n      }\n    }\n  }\n\n  vector<int> vec;\n  for(int i = 2; i <= 10000; ++i) {\n    if(prime[i]) vec.push_back(i);\n  }\n\n  int n;\n  while(cin >> n, n != 0) {\n    int ans = 0;\n    for(int i = 0; i < vec.size(); ++i) {\n      int sum = 0;\n      for(int j = i; j < vec.size() && sum < n; ++j) sum += vec[j];\n      if(sum == n) ans++;\n    }\n    cout << ans << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\nusing namespace std;\n#define REP(i,n) for(int i = 0; i < (int)n; i++)\n#define FOR(i,a,b) for(int i = a; i < (int)b; i++)\n#define pb push_back\n#define mp make_pair\ntypedef vector<int> vi;\ntypedef pair<int, int> pi;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int IINF = 1<<28;\nconst ll MOD = 1000000007;\nconst int dx[] = {1, 0, -1, 0}, dy[] = {0, 1, 0, -1};\n\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\n\tbool b[20000];\n\tfill(b, b+20000, true);\n\tb[0] = b[1] = false;\n\tREP(i, 20000) {\n\t\tif(b[i]) {\n\t\t\tfor(int j=i*2; j<20000; j += i)\n\t\t\t\tb[j] = false;\n\t\t}\n\t}\n\tvi prime;\n\tREP(i, 20000)\n\t\tif(b[i]) prime.pb(i);\n\n\tint n;\n\twhile(cin >> n, n) {\n\t\tint f = 0, l = 0, sum = 0, cnt = 0;;\n\t\twhile(true) {\n\t\t\tif(f == prime.size() || l == prime.size())\n\t\t\t\tbreak;\n\t\t\tif(sum == n)\n\t\t\t\tcnt++;\n\t\t\tif(sum <= n) {\n\t\t\t\tsum += prime[f];\n\t\t\t\tf++;\n\t\t\t}\n\t\t\telse if(sum > n) {\n\t\t\t\tsum -= prime[l];\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nint main(){\n  int num;\n\n  while(cin>>num,num){\n    if(num<2){\n      cout << 0 << endl;\n      continue;\n    }\n    if(num==2||num==3){\n      cout << 1 << endl;\n      continue;\n    }\n    vector<int> prime;\n    prime.push_back(2);\n    prime.push_back(3);\n    if(num>=4){\n      for(int i=5;i<=num;i++){\n        for(int j=2;j<=(int)sqrt(i);j++){\n          if(i%j==0) break;\n          if(j==(int)sqrt(i)) prime.push_back(i);\n        }\n      }\n    }\n\n    int sum=0,count=0;\n    for(int i=0;i<prime.size();i++){\n      sum+=prime[i];\n      if(sum>num){\n        prime.erase(prime.begin());\n        sum=0;\n        i=0;\n      }else if(sum==num){\n        prime.erase(prime.begin());\n        count++;\n        sum=0;\n        i=0;\n      }\n    }\n\n    cout << count << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#if 0\n10000までの素数の配列のうち、指定の値までを尺取り法でみていき、\n可能な表現の数を出力する。ヒントがわかりやすかった。\n#endif\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <assert.h>\n#include <complex>\n#define REP(i,n) for(int i=0;i<n;i++)\nusing namespace std;\ntypedef long long ll;\nbool not_prime[10001];\nvector<int> prime;\nint sum;\nvoid write_pattern_num() {\n    int start_i = 0;\n    int end_i = 0;\n    int pattern_num = 0; \n    int tmp_sum = 2;\n\n    while (end_i < prime.size() && prime[end_i] <= sum) {\n        if (tmp_sum == sum) {\n            ++pattern_num;\n            ++end_i;\n            tmp_sum += prime[end_i];\n        } else if (tmp_sum < sum) {\n            ++end_i;\n            tmp_sum += prime[end_i];\n        } else {\n            tmp_sum -= prime[start_i];\n            ++start_i;\n        }\n    }\n\n    cout << pattern_num << endl;\n}\nint main(void){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    #define ll int\n\n    for (int i = 2; i < 100; ++i) {\n        if (not_prime[i] == false) {\n            prime.push_back(i);\n            for (int j = 2 * i; j <= 10000; j += i) {\n                not_prime[j] = true;\n            }\n        }\n    }\n    for (int i = 100; i < 10000; ++i) {\n        if (not_prime[i] == false) {\n            prime.push_back(i);\n        }\n    }\n\n    while (cin >> sum) {\n        if (sum == 0) return 0;\n        write_pattern_num();\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <iterator>\n\nint main(void){\n\tbool isPrime[10010];\n\tstd::vector<int> prime,input;\n\tint i,j,k,ans;\n\n\tfor(bool b : isPrime) b=true;\n\tfor(i=2;i<10010;++i){\n\t\tfor(j=i*2;j<10010;j+=i) isPrime[j]=false;\n\t}\n\tfor(i=2;i<10010;++i){\n\t\tif(isPrime[i]) prime.push_back(i);\n\t}\n\n\twhile(true){\n\t\tstd::cin >> i;\n\t\tif(i==0) break;\n\t\tinput.push_back(i);\n\t}\n\n\tfor(auto in : input){\n\t\tans=0;\n\t\tfor(i=0;true;++i){\n\t\t\tif(prime[i]>in) break;\n\t\t\tk=in;\n\t\t\tfor(j=i;true;++j){\n\t\t\t\tk-=prime[j];\n\t\t\t\tif(k<0) break;\n\t\t\t\tif(k==0) ++ans;\n\t\t\t}\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t}\n\tsystem(\"PAUSE\");\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define M_PI       3.14159265358979323846\n\nusing namespace std;\n\n//conversion\n//------------------------------------------\ninline int toInt(string s) { int v; istringstream sin(s); sin >> v; return v; }\ntemplate<class T> inline string toString(T x) { ostringstream sout; sout << x; return sout.str(); }\ninline int readInt() { int x; scanf(\"%d\", &x); return x; }\n\n//typedef\n//------------------------------------------\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef pair<int, PII> TIII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\n\n\n//container util\n\n//------------------------------------------\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define SQ(a) ((a)*(a))\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n//repetition\n//------------------------------------------\n#define FOR(i,s,n) for(int i=s;i<(int)n;++i)\n#define REP(i,n) FOR(i,0,n)\n#define MOD 1000000007\n\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define trav(a, x) for(auto& a : x)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n\n\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\nconst double EPS = 1E-8;\n\n#define chmin(x,y) x=min(x,y)\n#define chmax(x,y) x=max(x,y)\nconst int INF = 100000000;\n\nstruct Edge {\n    int to, from;\n    ll cost;\n    Edge(int from, int to, ll cost): from(from), to(to), cost(cost) {}\n};\n\nclass UnionFind {\npublic:\n    vector <ll> par; \n    vector <ll> siz; \n\n    UnionFind(ll sz_): par(sz_), siz(sz_, 1LL) {\n        for (ll i = 0; i < sz_; ++i) par[i] = i;\n    }\n    void init(ll sz_) {\n        par.resize(sz_);\n        siz.assign(sz_, 1LL);\n        for (ll i = 0; i < sz_; ++i) par[i] = i;\n    }\n\n    ll root(ll x) { \n        while (par[x] != x) {\n            x = par[x] = par[par[x]];\n        }\n        return x;\n    }\n\n    bool merge(ll x, ll y) {\n        x = root(x);\n        y = root(y);\n        if (x == y) return false;\n        if (siz[x] < siz[y]) swap(x, y);\n        siz[x] += siz[y];\n        par[y] = x;\n        return true;\n    }\n\n    bool issame(ll x, ll y) { \n        return root(x) == root(y);\n    }\n\n    ll size(ll x) { \n        return siz[root(x)];\n    }\n};\n\ntypedef vector<vector<Edge>> AdjList;\nAdjList graph;\n\nll mod_pow(ll x, ll n, ll mod){\n    ll res = 1;\n    bool c = false;\n    while(n){\n        if(n&1) res = res * x;\n\n        if(res > mod){\n            c = true;\n            res %= mod;\n        }\n        x = x * x %mod;\n        n >>= 1;\n    }\n    if(c) return mod;\n    return res;\n}\n\n#define SIEVE_SIZE 5000000+10\nbool sieve[SIEVE_SIZE];\nvoid make_sieve(){\n    for(int i=0; i<SIEVE_SIZE; ++i) sieve[i] = true;\n    sieve[0] = sieve[1] = false;\n    for(int i=2; i*i<SIEVE_SIZE; ++i) if(sieve[i]) for(int j=2; i*j<SIEVE_SIZE; ++j) sieve[i*j] = false;\n}\n\nbool isprime(ll n){\n    if(n == 0 || n == 1) return false;\n    for(ll i=2; i*i<=n; ++i) if(n%i==0) return false;\n    return true;\n}\n\ntemplate<typename T>\nvector<T> gauss_jordan(const vector<vector<T>>& A, const vector<T>& b){\n    int n = A.size();\n    vector<vector<T>> B(n, vector<T>(n+1));\n\n    for(int i=0; i<n; ++i){\n        for(int j=0; j<n; ++j){\n            B[i][j] = A[i][j];\n        }\n    }\n\n    for(int i=0; i<n; ++i) B[i][n] = b[i];\n\n    for(int i=0; i<n; ++i){\n        int pivot = i;\n        for(int j=i; j<n; ++j){\n            if(abs(B[j][i]) > abs(B[pivot][i])) pivot = j;\n        }\n        swap(B[i], B[pivot]);\n\n        if(abs(B[i][i]) < EPS) return vector<T>(); //解なし\n\n        for(int j=i+1; j<=n; ++j) B[i][j] /= B[i][i];\n        for(int j=0; j<n; ++j){\n            if(i != j){\n                for(int k=i+1; k<=n; ++k) B[j][k] -= B[i][j] * B[i][k];\n            }\n        }\n    }\n\n    vector<T> x(n);\n\n    for(int i=0; i<n; ++i) x[i] = B[i][n];\n    return x;\n    \n}\n\nll GCD(ll a, ll b){\n    if(a<b) swap(a,b);\n    if(b == 0) return a;\n    return GCD(b, a%b);\n}\n\n\ntypedef vector<ll> vec;\ntypedef vector<vec> mat;\n\nmat mul(mat &A, mat &B) {\n    mat C(A.size(), vec((int)B[0].size()));\n    for(int i=0; i<A.size(); ++i){\n        for(int k=0; k<B.size(); ++k){\n            for(int j=0; j<B[0].size(); ++j){\n                C[i][j] = (C[i][j] + A[i][k] * B[k][j] %MOD) % MOD;\n            }\n        }\n    }\n    return C;\n}\nmat mat_pow(mat A, ll n) {\n    mat B(A.size(), vec((int)A.size()));\n\n    for(int i=0; i<A.size(); ++i){\n        B[i][i] = 1;\n    }\n\n    while(n > 0) {\n        if(n & 1) B = mul(B, A);\n        A = mul(A, A);\n        n >>= 1;\n    }\n    return B;\n}\n\nbool operator<(const pii& a, const pii& b){\n    if(a.first == b.first) return a.second < b.second;\n    return a.first < b.first;\n}\n\nconst int MAX = 510000;\nlong long fac[MAX], finv[MAX], inv[MAX];\n\n// テーブルを作る前処理\nvoid COMinit() {\n    fac[0] = fac[1] = 1;\n    finv[0] = finv[1] = 1;\n    inv[1] = 1;\n    for (int i = 2; i < MAX; i++){\n        fac[i] = fac[i - 1] * i % MOD;\n        inv[i] = MOD - inv[MOD%i] * (MOD / i) % MOD;\n        finv[i] = finv[i - 1] * inv[i] % MOD;\n    }\n}\n\n// 二項係数計算\nlong long COM(int n, int k){\n    if (n < k) return 0;\n    if (n < 0 || k < 0) return 0;\n    return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n}\n\nint bit[1000010];\nint sum(int i){\n    int s = 0;\n    while(i > 0){\n        s += bit[i];\n        i -= i & -i;\n    }\n    return s;\n}\nvoid add(int i, int x){\n    while(i <= 1000010){\n        bit[i] += x;\n        i += i & -i;\n    }\n}\nlong long extGCD(long long a, long long b, long long &x, long long &y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    long long d = extGCD(b, a%b, y, x);\n    y -= a/b * x;\n    return d;\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    cout << fixed << setprecision(12);\n\n    make_sieve();\n    vector<int> primes;\n    for(int i=0; i<=10000; i++) if(sieve[i]) primes.PB(i);\n\n    int len = primes.size();\n\n    int n;\n    while(cin >> n, n){\n        int left = 0, right = 0;\n        int sum = 0;\n\n        int ans = 0;\n        for(; left <len; left++){\n            while(right < len && sum < n){\n                sum += primes[right];\n                right++;\n            }\n\n            if(sum == n) ans++;\n\n            if(right == left) right++;\n            else{\n                sum -= primes[left];\n            }\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<set>\n#include<list>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<complex>\n#include<cstdlib>\n#include<cstring>\n#include<numeric>\n#include<sstream>\n#include<iostream>\n#include<algorithm>\n#include<functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\n\nconst int MAX_N =10010;\nint prime[MAX_N];//i番目の素数\nbool is_prime[MAX_N+1];//is_prime[i]がtrueならiは素数\n\n//n以下の素数の数を返す\nint sieve(int n){\n\tint p = 0;\n\tfor(int i = 0;i <=n;i++){\n\t\tis_prime[i] =true;\n\t}\n\tis_prime[0] = false;\n\tis_prime[1] = false;\n\tfor(int i = 2;i <=n;i++){\n\t\tif(is_prime[i]){\n\t\t\tprime[p++] = i;\n\t\t\tfor(int j = 2*i;j <=n;j +=i){\n\t\t\t\tis_prime[j] =false;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\nint n;\nint main(){\n\tsieve(10000);\n\twhile(cin>>n,n){\n\t\tint s = 0;\n\t\tint t = 0;\n\t\tint sum = 2;\n\t\tint ans = 0;\n\t\twhile(prime[t]<=n){\n\t\t\tif(sum > n){\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t\tif(sum <n){\n\t\t\t\tsum +=prime[++t];\n\t\t\t}\n\t\t\tif(sum ==n){\n\t\t\t\tans++;\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t}\n\t\tcout <<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int a[10001];\n    a[0] = 0;\n    a[1] = 0;\n    for(int i = 2; i < 10001; i++)\n    {\n        a[i] = 1;\n    }\n    for(int i = 2; i < 101; i++)\n    {\n        for(int j = 2; i * j < 10001; j++)\n        {\n            a[i * j] = 0;\n        }\n    }\n    int c[10000];\n    int t = 0;\n    for(int i = 0; i < 10001; i++)\n    {\n        if(a[i] == 1)\n        {\n            c[t] = i;\n            t = t + 1;\n        }\n    }\n    \n    int n ;\n    \n    while(cin >> n, n)\n    {\n        int k = 0;\n        int ans = 0;\n        int p = 1;\n        queue<int> q;\n        q.push(c[0]);\n        k = c[0];\n        while(p < 10000)\n        {\n            if(k < n)\n            {\n                if(c[p] > 0)\n                {\n                    k = k + c[p];\n                    q.push(c[p]);\n                    p = p + 1;\n                }\n                else\n                {\n                    cout << ans << endl;\n                    break;\n                }\n            }\n            else if(k == n)\n            {\n                ans = ans + 1;\n                k = k + c[p];\n                q.push(c[p]);\n                p = p + 1;\n            }\n            else\n            {\n                k = k - q.front();\n                q.pop();\n            }\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#define _GLIBCXX_DEBUG\n#include <bits/stdc++.h>\nusing namespace std;\n\nbool isPrime(int n){\n    for(int i=2; i<n; i++){\n        if((n%i)==0) return false;\n    }\n    return true;\n}\n\nint main() {\n    int n; cin>>n;\n    while(n != 0){\n        //素数列挙\n        vector<int> prime;\n        for(int i=2; i<=n; i++){\n            if(isPrime(i)) prime.push_back(i);\n        }\n\n        //累積和\n        vector<int> c(prime.size()+1);\n        for(int i=1; i<c.size(); i++){\n            c[i] = c[i-1] + prime[i-1];\n        }\n\n        int count = 0;\n\n        //二分探索\n        for(int i=0; i<c.size(); i++){\n            int left = i, right = c.size();\n            while(left < right){\n                int mid = (left+right)/2;\n                int sum = c[mid]-c[i];\n                if(sum > n) right = mid;\n                else left = mid+1;\n                if(sum == n){\n                    count++;\n                }\n            }\n        }\n        cout << count << endl;\n        cin>>n;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\n#include <vector>\nusing namespace std;\n\n#define MAXNUM 12005\nbool prime[MAXNUM];\n\nvoid eratosthenes()\n{\n\tprime[0]=prime[1]=false;\n\n\tfor(int i=2; i<MAXNUM; i++)\n\t{\n\t\tprime[i]=true;\n\t}\n\t\n\tfor(int i=2; i*i<MAXNUM; i++)\n\t{\n\t\tif(prime[i])\n\t\t{\n\t\t\tfor(int j=i*i; j<MAXNUM; j+=i)\n\t\t\t{\n\t\t\t\tprime[j]=false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint solve(int N, vector<int>& primes)\n{\n\tint res = 0, sum = 0;\n\tqueue<int> q;\n\tfor(int i=0; i<primes.size(); i++) {\n\t\tsum += primes[i];\n\t\tq.push(primes[i]);\n\n\t\twhile(sum > N) {\n\t\t\tif(q.empty()) break;\n\t\t\tsum -= q.front(); q.pop();\n\t\t}\n\n\t\tif(sum == N) res++;\n\t}\n\n\treturn res;\n}\n\nint main()\n{\n\teratosthenes();\n\tvector<int> primes;\n\tfor(int i=2; i<MAXNUM; i++)\n\t\tif(prime[i]) primes.push_back(i);\n\n\tint N;\n\twhile(cin >> N, N) {\n\t\tcout << solve(N, primes) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "//====================================================================\n//Name       :\n//Author     :hxf\n//copyright  :http://www.cnblogs.com/Free-rein/\n//Description:\n//Data       :2012.8.11\n//========================================================================\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<vector>\n#include<stack>\n#include<queue>\n#define MAX 101000\n#define inf 10100\nusing namespace std;\nint prime[MAX];//雍ィ謨ー逧?焚扈?シ御サ?~MAX\nbool visit[inf];//蛻、譁ュ隨ャi荳ェ謨ー譏ッ蜷ヲ荳コ雍ィ謨ー\nint ans[MAX];\nvoid get_prime()\n{\n    int temp=1;//莉」陦ィprime逧?ク区??悟?temp-1荳ェ謨ー\n    for(int i=2;i<=inf;i++)\n        visit[i]=true;\n    for(int i=2;i*i<=inf;i++)\n    {\n        if(visit[i]==1)\n        {\n            for(int j=i;i*j<=inf;j++)\n                visit[i*j]=false;\n        }\n    }\n    for(int i=2;i<=inf;i++)\n        if(visit[i]==true)\n        {\n            prime[temp++]=i;\n        }\n}\n////////////////////////////////////////\nvoid get_ans()\n{\n    for(int i=1;prime[i]<=10050;i++)\n    {\n        int kkk=0;\n        for(int j=i;kkk<=10050;j++)\n        {\n            kkk=kkk+prime[j];\n            ans[kkk]++;\n        }\n    }\n}\nint main()\n{\n    get_prime();\n   // for(int i=0;i<50;i++)\n      //  printf(\"%d\\n\",prime[i]);\n    memset(ans,0,sizeof(ans));\n    get_ans();\n    while(1)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        if(n==0)\n            break;\n        printf(\"%d\\n\",ans[n]);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\nint val[10000];\nbool isPrime(int a){\n\tfor(int i=2;i*i<=a;i++){\n\t\tif(a%i==0)return false;\n\t}\n\treturn true;\n}\nint main(){\n\tint now=1;\n\tint sum=0;\n\tfor(int i=2;i<=20000;i++){\n\t\tif(isPrime(i)){\n\t\t\tsum+=i;\n\t\t\tval[now++]=sum;\n\t\t\t//printf(\"%d \",i);\n\t\t}\n\t}\n\twhile(1){\n\t\tint t;\n\t\tscanf(\"%d\",&t);\n\t\tif(t==0)return 0;\n\t\tint ret=0;\n\t\tfor(int i=0;i<now;i++){\n\t\t\tfor(int j=i+1;j<now;j++){\n\t\t\t\tif(val[j]-val[i]==t)ret++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\nvector<int> Prime_Num;\n\nint makePrimeQ(){\n  int N = 10000;\n  bool prime[N]={true};\n  \n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int MAX = 11000;\nbool isPrime[MAX];\n\nvoid next(int& k) {\n    do {\n        k++;\n    } while (isPrime[k] == false);\n}\n\nint main() {\n    fill_n(isPrime, MAX, true);\n    for (int i = 4; i < MAX; i += 2) {\n        isPrime[i] = false;\n    }\n    for (int i = 3; i * i <= MAX; i += 2) {\n        if (isPrime[i]) {\n            for (int j = i * 2; j < MAX; j += i) {\n                isPrime[j] = false;\n            }\n        }\n    }\n    while (true) {\n        int n;\n        cin >> n;\n        if (n == 0) {\n            break;\n        }\n        int min = 2, max = 2, res = 0, sum = 2;\n        while (min <= n) {\n            if (sum < n) {\n                next(max);\n                sum += max;\n            } else {\n                if (sum == n) {\n                    res++;\n                }\n                sum -= min;\n                next(min);\n            }\n        }\n        cout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvector<int> sieve(int n) {\n\tvector<int> res{2};\n\tvector<bool> is_prime(n, true);\n\n\tfor(int i = 3; i < n; i += 2) {\n\t\tif(is_prime[i]) {\n\t\t\tres.emplace_back(i);\n\n\t\t\tfor(int j = i + i; j < n; j += i) {\n\t\t\t\tis_prime[j] = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn res;\n}\n\nint main() {\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\n\tconstexpr int MAX = 10000;\n\tconst auto primes = sieve(MAX);\n\n\tfor(int x; cin >> x && x;) {\n\t\tint ans = 0;\n\n\t\tfor(unsigned i = 0; i < primes.size(); ++i) {\n\t\t\tif(primes[i] > x) break;\n\n\t\t\tint sum = 0;\n\t\t\tfor(unsigned j = i; j < primes.size(); ++j) {\n\t\t\t\tsum += primes[j];\n\t\t\t\tif(sum >= x) break;\n\t\t\t}\n\n\t\t\tif(sum == x) ++ans;\n\t\t}\n\n\t\tcout << ans << endl;\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\nint main(void){\n\n  bool prim[10001];\n  fill(prim,prim+10001,true);\n\n  for(int i=2;i*i<10001;i++){\n    if(prim[i]){\n      for(int j=i*2;j<10001;j+=i){\n        prim[j]=false;\n      }\n    }\n  }\n\n  vector<int>p;\n  for(int i=2;i<10001;i++)\n    if(prim[i])p.push_back(i);\n\n  int n;\n  while(cin >> n,n){\n    int ans=0,sum=0;\n\n    for(int i=0,j=0;j<p.size();){\n      while(sum>n)sum-=p[i++];\n      while(sum<n)sum+=p[j++];\n      if(sum==n)ans++,sum+=p[j++];\n    }\n    cout << ans << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\nbool judgePrimeNumber( int a )\n{\n    for( int i = 2; i <= sqrt(a); i++ )\n        if( a % i == 0 )\n            return false;\n    return true;\n}\n\nint main()\n{\n    int n, a[10001];\n    vector<int> p;\n\n    for( int i = 2; i < 10000; i++ )\n        if( judgePrimeNumber(i) )\n            p.push_back(i);\n\n    for( int i = 0; i < 10001; i++ )\n        a[i] = 0;\n\n    int pluscnt = 1;\n    while( pluscnt <= p.size() )\n    {\n        for( int i = 0; i < p.size(); i++ )\n        {\n            int sum = 0;\n            for( int j = i; j < p.size() && j < pluscnt + i; j++ )\n                sum += p[j];\n            if( sum <= 10000 )\n                a[sum]++;\n        }\n        pluscnt++;\n    }\n\n    while( cin >> n )\n    {\n        if( n == 0 )\n            break;\n        cout << a[n] << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <cstdio>\nusing namespace std;\nint isPrime[1000001];\nint main()\n{\n  map<int,int>prime;\n  fill(isPrime,isPrime + 1000001,1);\n  isPrime[0] = isPrime[1] = 0;\n  for(int i = 2 ; i*i < 1000001 ; i++ )\n    {\n      if(isPrime[i]){\n\tfor(int j = i*2 ; j < 1000001 ; j+=i )isPrime[j] = 0;\n      }\n    }\n  int p = 0;\n  for(int i = 0 ; i < 1000001 ; i++ )if(isPrime[i])prime[p++] = i;\n  int n;\n  while(cin >> n,n)\n    {\n      int sum = 0,res = 0;\n      int back = 0,front = 0;\n      while(sum >= 0 && front < p){\n\tif(sum + prime[front] <= n) {\n\t  sum += prime[front];\n\t  front++;\n\t} else if(sum + prime[front] > n) {\n\t  sum -= prime[back];\n\t  back++;\n\t}\n\tif(sum == n)res++; \n      }\n      cout << res << endl;\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n\nint main(){\n  int i,j,n,pn=0,p[10000],sum[10000],ans[10001];\n  \n  for(i=2;i<=10000;i++){\n    for(j=2;j*j<=i;j++){\n      if(!(i%j))break;\n    }\n    if(i<j*j)p[pn++] = i;\n  }\n  \n  sum[0] = 0;\n  for(i=0;i<pn;i++)sum[i+1] = sum[i] + p[i];\n  \n  for(i=0;i<=10000;i++)ans[i] = 0;\n  \n  for(i=0;i<=pn;i++)\n    for(j=i+1;j<=pn;j++)\n      if(sum[j]-sum[i]<=10000)ans[sum[j]-sum[i]]++;\n\n  while(scanf(\"%d\",&n),n)printf(\"%d\\n\",ans[n]);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\nbool prime[10001];\nint main() {\n  memset(prime, -1, sizeof(prime));\n  prime[0] = prime[1] = false;\n  for(int i = 2; i * i <= 10000; ++i) {\n    if(prime[i]) {\n      for(int j = i * i; j <= 10000; j += i) prime[j] = false;\n    }\n  }\n  vector<int> psum;\n  psum.push_back(0);\n  for(int i = 2; i <= 10000; ++i) {\n    if(prime[i]) psum.push_back(i + psum.back());\n  }\n  while(true) {\n    int N; cin >> N;\n    if(N == 0) break;\n    set<int> s;\n    s.insert(0);\n    int ans = 0;\n    for(int i = 1; i < (int)psum.size(); ++i) {\n      if(s.count(psum[i] - N)) ans++;\n      s.insert(psum[i]);\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "/*\n  file : /1257.comp.cpp\n  date : 2015-10-19\n  summary :\n  {\n  2<=n<=10^4 ??????n?????£?¶????????´???°????????§??¨?????????????????¨???????????????????????????\n  }\n  status :\n  {\n  \n  }\n  memo :\n  {\n  \n  }\n */\n\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string>\n#include<cmath>\n#include<cassert>\nusing namespace std;\n\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef ll int__;\n#define rep(i,j) for(int__ i=0;i<(int__)(j);i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(int__)(k);i++)\n#define all(v) v.begin(),v.end()\n\n#define N_MAX 10000\nvector<int> sum_prime;\n\nvoid init(){\n    vector<bool> is_prime(N_MAX+1,true);\n    is_prime[0]=is_prime[1]=false;\n    repeat(i, 2, is_prime.size()){\n        if(is_prime[i]){\n            for(int j=i*2;j<(int)is_prime.size();j+=i)is_prime[j]=false;\n        }\n    }\n    int prime_num=0;\n    int sum =0;\n    sum_prime.reserve(N_MAX);\n    sum_prime.push_back(0);\n    rep(i,is_prime.size()){\n        if(is_prime[i]){\n            prime_num++;\n            sum += i;\n            sum_prime.push_back(sum);\n        }\n    }\n}\n\nbool solve(){\n    int n;cin>>n;\n    if(n==0)return false;\n    int ans =0;\n    for(int sum : sum_prime){\n        int need = sum + n;\n        auto itr =lower_bound(all(sum_prime),need);\n        if(itr != sum_prime.end() && *itr == need) ans++;\n    }\n    cout <<ans <<endl;\n    \n    return true;\n}\n\nint main()\n{\n    init();\n    while(solve());\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\nvector<int> Prime_Num;\n\nint makePrimeQ(){\n  int N = 4000000;\n  bool prime[N];\n\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nbool pr[10001];\nint a[1300], p=0;\n\nint func(int n, int v)\n{\n\tif(n == 0){\n\t\treturn 1;\n\t}\n\tif(n < 0){\n\t\treturn 0;\n\t}\n\t\n\treturn func(n-a[v-1], v-1);\n}\n\nint main()\n{\n\tint n, s, t;\n\tfill(pr, pr+10001, true);\n\t\n\tpr[0] = pr[1] = false;\n\tfor(int i = 2; i <= 10000; i++){\n\t\tif(pr[i]){\n\t\t\ta[p++] = i;\n\t\t\tfor(int j = 2*i; j <= 10000; j+=i){\n\t\t\t\tpr[j] = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(1){\n\t\tcin >> n;\n\t\tif(n == 0){\n\t\t\tbreak;\n\t\t}\n\t\ts = t = 0;\n\t\tfor(int i = 0; i < p && a[i] <= n; i++){\n\t\t\tt = i;\n\t\t}\n\t\t\n\t\tfor(int i = t; i >= 0; i--){\n\t\t\ts += func(n-a[i], i);\n\t\t}\n\t\tcout << s << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n#define pb push_back\nvector<int> primes;\nbool prime[10010];\nvoid eratos()\n{\n\tmemset(prime,true,sizeof(prime));\n\tprime[0]=false;\n\tprime[1]=false;\n\tfor(int i=2;i<=100;i++)\n\t{\n\t\tif(prime[i])\n\t\t{\n\t\t\tfor(int j=i*2;j<=10000;j+=i)\n\t\t\t{\n\t\t\t\tprime[j]=false;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=2;i<=10000;i++)if(prime[i])primes.pb(i);\n\treturn;\n}\nint cnt(int x)\n{\n\tint s=0,t=0,sum=0;\n\tint ret=0;\n\twhile(s<primes.size())\n\t{\n\t\twhile(sum<x&&t<primes.size())\n\t\t{\n\t\t\tsum+=primes[t];\n\t\t\tt++;\n\t\t}\n\t\tif(sum==x)ret++;\n\t\tsum-=primes[s];\n\t\ts++;\n\t}\n\treturn ret;\n}\nint main()\n{\n\teratos();\n\twhile(1)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tif(n==0)break;\n\t\tprintf(\"%d\\n\",cnt(n));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nconst int MAX_N = 10002;\nconst int NUM_P = 1300;\n\nbool isP[MAX_N];\nvector<int> P; // size:1299;\n\nvoid make() {\n  P.clear();\n  fill(isP, isP+MAX_N, true);\n  isP[0] = isP[1] = false;\n  for(int i = 2; i < MAX_N; ++i) {\n    if(isP[i]) {\n      P.push_back(i);\n      for(int j = i*2; j < MAX_N; j += i) isP[j] = false;\n    }\n  }\n}\n\nint T[NUM_P][MAX_N];\n\nint rec(int p, int n) {\n  int &res = T[p][n];\n  if(res == -1) {\n    res = 0;\n    //if(n-P[p] >= 0) res += rec(p, n-P[p]);\n    if(p < P.size() && n-P[p] >= 0) res += rec(p+1, n-P[p]);\n  }\n  return res;\n}\n\nint main() {\n  make();\n  fill(T[0], T[NUM_P], -1);\n  for(int i = 0; i < NUM_P; ++i) T[i][0] = 1;\n\n  int n;\n  while((cin >> n) && n) {\n    int ans = 0;\n    for(int i = 0; i < P.size() && P[i] <= n; ++i) {\n      ans += rec(i, n);\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <queue>\n#include <vector>\nbool is_prime(int num);\n\nusing namespace std;\n\nint main(){\n  int i;\n  vector<int> primes;\n  for (i = 1; i <= 10000; ++i){\n    if(is_prime(i)){primes.push_back(i);}\n  }\n  int input;\n  int sum;\n  int count;\n  int vector_index = 0;\n  while(cin>>input){\n    if(input==0){break;}\n\n    // initialization\n    vector_index = 0;\n    queue<int> sum_components;\n    sum_components.push(primes.at(vector_index));\n    sum = primes.at(vector_index);\n    vector_index++;\n    count = 0;\n\n    //???????????¨???\n    while(sum_components.back() <= input){\n      if(sum < input){\n        sum_components.push(primes.at(vector_index));\n        sum += primes.at(vector_index);\n        vector_index++;\n      }else if(sum == input){\n        count++;\n        sum_components.push(primes.at(vector_index));\n        sum += primes.at(vector_index);\n        vector_index++;\n      }else{\n        sum -= sum_components.front();\n        sum_components.pop();\n      }\n    }\n    cout << count << endl;\n  }\n\n}\n\nbool is_prime(int num){\n  if(num<2){return false;}\n  if(num==2){return true;}\n  for (int i = 2; i < num; ++i){\n    if(num%i == 0){return false;}\n  }\n  return true;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i = 0; i < n; i++)\nconst int    INF = 100000000;\nconst double EPS = 1e-10;\nconst int    MOD = 1000000007;\nusing namespace std;\n\nbool prime[10001];\nvector<int> pr;\nint sum[10001];\n\nvoid P(){\n\tsum[0] = 1;\n\tfor(int i = 2; i < 10001; i++) prime[i] = true;\n\tfor(int i = 2; i < 10001; i++){\n\t\tif(!prime[i]) continue;\n\t\tpr.push_back(i);\n\t\tfor(int j = i*2; j < 10001; j += i) prime[j] = false;\n\t}\n\trep(i,pr.size()){\n\t\tint x = 0;\n\t\tfor(int j = i; j < pr.size(); j++){\n\t\t\tx += pr[j];\n\t\t\tif(x > 10000) break;\n\t\t\tsum[x]++;\n\t\t}\n\t}\n}\n\nint main(){\n\tP();\n\tint n;\n\twhile(cin >> n){\n\t\tif(n == 0) break;\n\t\tcout << sum[n] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define vi vector<int>\n#define pb push_back\n#define INF 999999999\n//#define INF (1LL<<59)\n\nbool era[100001]={false};\n\nvoid makeERA(){\n\tfor(int i=2;i<100001;i++){\n\t\tif(era[i]==true){\n\t\t\tint x=100000/i;\n\t\t\tfor(int j=2;j<=x;j++){\n\t\t\t\tera[i*j]=false;\n\t\t\t}\n\t\t}\n\t}\n\tera[2]=true;\n}\n\n\nint main(){\n\tfor(int i=0;i<100001;i++)era[i]=true;\n\tera[0]=false;era[1]=false;\n\tmakeERA();\n\t\n\tvector<int> pr;\n\tpr.pb(0);\n\trep(i,10001)if(era[i])pr.pb(i);\n\n\tfor(int i=1;i<pr.size();i++){\n\t\tpr[i] +=pr[i-1];\n\t}\n\n\tint n;\n\twhile(cin>>n&&n){\n\t\tint ans=0;\n\t\trep(i,pr.size()){\n\t\t\tfor(int j=i+1;j<pr.size();j++){\n\t\t\t\tif( pr[j]-pr[i]==n )ans++;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nint main(){\n  int num;\n\n  while(cin>>num&&num){\n    if(num==1){\n      cout << 0 << endl;\n      continue;\n    }\n    if(num==2||num==3){\n      cout << 1 << endl;\n      continue;\n    }\n    vector<int> prime;\n    prime.push_back(2);\n    prime.push_back(3);\n    for(int i=5;i<=num;i++){\n      for(int j=2;j<=(int)sqrt(i);j++){\n        if(i%j==0) break;\n        if(j==(int)sqrt(i)) prime.push_back(i);\n      }\n    }\n\n  /*  for(int i=0;i<prime.size();i++){\n      cout << prime[i] << endl;\n    }\n    cout << \"way\" << endl;\n*/\n    int sum=0,count=0;\n    for(int i=0;i<prime.size();i++){\n      sum+=prime[i];\n      if(sum>num){\n        prime.erase(prime.begin());\n   //     cout << \"prime \" << prime[0] << endl;\n        sum=0;\n        i=0;\n      }else if(sum==num){\n        prime.erase(prime.begin());\n //       cout << \"prime \" << prime[0] << endl;\n        count++;\n        sum=0;\n        i=0;\n      }\n    }\n\n    cout << count << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <math.h>\nusing namespace std;\n\nvector<int> Prime_Num;\n\nint makePrimeQ(){\n  int N = 10010;\n  bool prime[N];\n\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i<=sqrt(N);i++){\n    if(prime[i]){\n      for(int j=2;i*j<N;j++) \n        prime[i*j]=false;\n    }\n  }\n  for (int i=0; i<N; i++) {\n    if (prime[i])\n      Prime_Num.push_back(i);\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    // cout << Prime_Num[num] << endl;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvector<int> sieve(int n) {\n\tvector<int> res{2};\n\tvector<bool> is_prime(n, true);\n\n\tfor(int i = 3; i < n; i += 2) {\n\t\tif(is_prime[i]) {\n\t\t\tres.emplace_back(i);\n\n\t\t\tfor(int j = i * i; j < n; j += i) {\n\t\t\t\tis_prime[j] = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn res;\n}\n\nint main() {\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\n\tconstexpr int MAX = 10000;\n\tconst auto primes = sieve(MAX);\n\n\tfor(int x; cin >> x && x;) {\n\t\tint ans = 0;\n\n\t\tfor(unsigned i = 0; i < primes.size(); ++i) {\n\t\t\tif(primes[i] > x) break;\n\n\t\t\tint sum = 0;\n\t\t\tfor(unsigned j = i; j < primes.size(); ++j) {\n\t\t\t\tsum += primes[j];\n\t\t\t\tif(sum >= x) break;\n\t\t\t}\n\n\t\t\tif(sum == x) ++ans;\n\t\t}\n\n\t\tcout << ans << endl;\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<set>\n#include<list>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<complex>\n#include<cstdlib>\n#include<cstring>\n#include<numeric>\n#include<sstream>\n#include<iostream>\n#include<algorithm>\n#include<functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\n\nconst int MAX_N =10010;\nint prime[MAX_N];//i番目の素数\nbool is_prime[MAX_N+1];//is_prime[i]がtrueならiは素数\n\n//n以下の素数の数を返す\nint sieve(int n){\n\tint p = 0;\n\tfor(int i = 0;i <=n;i++){\n\t\tis_prime[i] =true;\n\t}\n\tis_prime[0] = false;\n\tis_prime[1] = false;\n\tfor(int i = 2;i <=n;i++){\n\t\tif(is_prime[i]){\n\t\t\tprime[p++] = i;\n\t\t\tfor(int j = 2*i;j <=n;j +=i){\n\t\t\t\tis_prime[j] =false;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\nint n;\nint main(){\n\tint kkkk = sieve(10000);\n\twhile(cin>>n){\n\t\tif(n==0){\n\t\t\tbreak;\n\t\t}\n\t\tint s = 0;\n\t\tint t = 0;\n\t\tint sum = 2;\n\t\tint ans = 0;\n\t\twhile(prime[t]<=n){\n\t\t\tif(sum > n){\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t\tif(sum <n){\n\t\t\t\tsum +=prime[++t];\n\t\t\t}\n\t\t\tif(sum ==n){\n\t\t\t\tans++;\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t}\n\t\tcout <<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int p[10001],M=10001,i,j,c;vector<int>s(1,0);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){for(c=0,vector<int>::iterator t=s.begin();t!=s.end();t++)c+=count(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <stdio.h>\n#include <unordered_set>\n\nusing namespace std;\n\n#define ll long long\n\nll p[10001];\nvector<ll> prime;\n\nint main(){\n  for(ll i = 0; i < 10001; i++){\n    p[i] = 0;\n  }\n  p[0] = p[1] = 1;\n  \n  ll id = 2;\n  while(1){\n    while(id <= 10000 &&  p[id] == 1){\n      id++;\n    }\n    if(id >= 10000){\n      break;\n    }\n    ll temp = 2 * id;\n    while(temp <= 10000){\n      p[temp] = 1;\n      temp += id;\n    }\n    id++;\n  }\n\n  for(ll i = 0; i <= 100; i++){\n     cout << i << ' ' << p[i] << endl;\n  }\n\n  for(ll i = 2; i <= 10000; i++){\n    if(p[i] == 0){\n      prime.push_back(i);\n    }\n  }\n\n  for(vector<ll>::iterator it = prime.begin(); it != prime.end(); it++){\n    cerr << *it << ' ';\n  }\n  cerr << '\\n';\n  \n  ll n = prime.size();\n  vector<ll> sum(n);\n  sum[0] = prime[0];\n  unordered_set<ll> us;\n  us.insert(sum[0]);\n  for(ll i = 1; i < n; i++){\n    sum[i] = sum[i-1] + prime[i];\n    us.insert(sum[i]);\n  }\n  us.insert(0);\n\n  ll k;\n  while(cin >> k && k){\n    ll cnt = 0;\n    for(ll i = 0; i < n; i++){\n      if(us.find(k+sum[i]) != us.end() || k == sum[i]){\n\n\tcnt ++;\n      }\n    }\n    cout << cnt << endl;\n  }\n}\n  "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\n#define loop(i,a,b) for(int i=(a);i<int(b);i++)\n#define rep(i,b) loop(i,0,b)\n\nint main(){\n    int N=11111;\n    vector<int> ps(N);\n    rep(i,N)ps[i]=i;\n    ps[0]=ps[1]=0;\n    for(int i=2;i<N;i++){\n        if(!ps[i])continue;\n        for(int j=i+i;j<N;j+=i){\n            ps[j]=0;\n        }\n    }\n    ps.erase(remove(ps.begin(),ps.end(),0),ps.end());\n    int sum[11111]={};\n    rep(i,ps.size()){\n        sum[i+1]=sum[i]+ps[i];\n    }\n\n    int cnt[11111]={};\n    rep(i,ps.size())rep(j,i){\n        if(sum[i]-sum[j]>11111)continue;\n        cnt[sum[i]-sum[j]]++;\n    }\n    int n;\n    while(cin>>n && n) cout << cnt[n] << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<climits>\n#include<ctime>\n#include<cstring>\n#include<stack>\n#include<queue>\n#include<sstream>\n#include<string>\n#include<set>\n#include<array>\n\n#define ALL(v) (v).begin(),(v).end()\n#define REP(i,p,n) for(int i=p;i<(int)(n);++i)\n#define rep(i,n) REP(i,0,n)\n#define DUMP(list) cout << \"{ \"; for(auto nth : list){ cout << nth << \" \"; } cout << \"}\" << endl\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i);\n#define UNIQUE(a) a.erase(unique(ALL(a)), a.end())\n\nusing namespace std;\n\nconst int MAX_SOSU=(2<<15)+1;\n\nbool sosu[MAX_SOSU];//true?´???°???false\nvector<int> sosu2;\n\nint main(){\n\n  sosu[0]=true;\n  sosu[1]=true;\n  for(int i=2;i<MAX_SOSU;i++){\n    if(sosu[i]) continue; \n    sosu[i]=false;\n    sosu2.push_back(i);\n    for(int j=2;j*i<MAX_SOSU;j++){\n      sosu[j*i]=true;   \n    }\n  }\n\n  while(1){\n    int n,cnt=0;\n    cin >> n; \n    if(n==0) break;\n    \n    rep(i,sosu2.size()){\n      int sum=0;\n      for(int j=i;j<sosu2.size();j++){\n        sum+=sosu2[j];\n        if(sum>n) break;\n        else if(sum==n) cnt++;\n      }\n    }\n\n    cout << cnt << endl;\n  }\n\n }"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nvector<int> v;\n\nbool isPrime(int n) {\n    for (int i = 0; i < v.size() && v[i] * v[i] <= n; i++) {\n        if (n % v[i] == 0) return false;\n    }\n    return true;\n}\n\nint main() {\n    v.push_back(2);\n    v.push_back(3);\n    for (int i = 5; i <= 10000; i += 2) {\n        if (isPrime(i)) {\n            v.push_back(i);\n        }\n    }\n    \n    int sum[v.size() + 1];\n    fill(sum, sum + v.size() + 1, 0);\n    for (int i = 1; i < v.size() + 1; i++) {\n        sum[i] = sum[i - 1] + v[i - 1];\n    }\n    \n    while (true) {\n        int n;\n        cin >> n;\n        if (n == 0) return 0;\n        int count = 0;\n        for (int i = 1; i < v.size() + 1; i++) {\n            if (v[i - 1] > n) break;\n            for (int j = 0; j <= i; j++) {\n                if (sum[i] - sum[j] == n) {\n                    count++;\n                }\n            }\n        }\n        cout << count << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<algorithm>\n#include<bitset>\n#include<cctype>\n#include<cmath>\n#include<complex>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<map>\n#include<numeric>\n#include<queue>\n#include<set>\n#include<sstream>\n#include<stack>\n#include<string>\n#include<vector>\n\n#define repi(i,a,b) for(int i = int(a); i < int(b); i++)\n#define rep(i,a) repi(i,0,a)\n#define repd(i,a,b) for(int i = int(a); i >= int(b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\nconst double pi = acos(-1.0);\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 10010;\n\nint flg[N] = {1, 1}, ans[N] = {};\n\nint cur[N], next[N];\n\nint gen()\n{\n    memset(cur, 0, sizeof(cur));\n    repi(i, 2, N) if (!flg[i]) {\n        cur[0] = 1;\n        memset(next, 0, sizeof(next));\n        for (int j = i * i; j < N; j += i)\n            flg[j] = 1;\n        repi(j, i, N) {\n            ans[j] += cur[j - i];\n            next[j] += cur[j - i];\n        }\n        memcpy(cur, next, sizeof(cur));\n    }\n}\n\nsigned main()\n{\n    gen();\n\n    for (int n; cin >> n && n; )\n        cout << ans[n] << endl;\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nbool p[10500];\nint sum[1500];\nvector <int> prime;\n\nvoid init(void)\n{\n\tfill(p, p + 10500, true);\n\tp[0] = p[1] = false;\n\tfor (int i = 2; i * i < 10500; i++){\n\t\tif (!p[i]) continue;\n\t\tprime.push_back(i);\n\t\tfor (int j = i * 2; j < 10500; j += i){\n\t\t\tp[j] = false;\n\t\t}\n\t}\n\t\n\tfor (int i = 1; i < prime.size(); i++){\n\t\tsum[i] = sum[i - 1] + prime[i - 1];\n\t}\n}\n\nint main(void)\n{\n\tinit();\n\t\n\tint n;\n\twhile (cin >> n, n){\n\t\tint ret = 0;\n\t\tfor (int i = 0; prime[i] <= n; i++){\n\t\t\tfor (int j = i + 1; j < prime.size(); j++){\n\t\t\t\tint a = sum[j] - sum[i];\n\t\t\t\t// cout << \"* : \" << a << endl;\n\t\t\t\tif (a == n) ret++;\n\t\t\t\tif (a >= n) break;\n\t\t\t}\n\t\t}\n\t\tcout << ret << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint p[1300],size;\n\nbool isPrime(int x){\n\tfor(int i=0;i<size && p[i]<=sqrt(x);i++)if(x%p[i]==0)return false;\n\treturn true;\n}\n\nint main(void){\n\tint n;\n\n\tp[0] = 2;\n\tsize = 1;\n\tfor(int i=3;i<10010;i+=2)if(isPrime(i))p[size++]=i;\n\n\twhile(cin>>n && n){\n\t\tint ans = 0;\n\t\tfor(int i=0;p[i]<=n;i++){\n\t\t\tint sum = 0;\n\t\t\tfor(int j=i;sum<n;j++) sum += p[j];\n\t\t\tif(sum == n) ans++;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n\n\nint main() {\n    int N;\n\n    bool isPrime[10001];\n    for (int i = 0; i < 10001; i++) isPrime[i] = 1;\n    isPrime[0] = isPrime[1] = 0;\n    for (int i = 0; i < 10001; i++) {\n        if (!isPrime[i]) continue;\n        for (int j = 2; j * i < 10001; j++) {\n            isPrime[i*j] = 0;\n        }\n    }\n\n    vector<int> prime;\n    prime.push_back(0);\n    for (int i = 0; i < 10001; i++) if (isPrime[i]) prime.push_back(i);\n    for (int i = 1; i < prime.size(); i++) prime[i] += prime[i-1];\n    \n    while (cin >> N, N) {\n        int ans = 0;\n        int i = 0, j = 0;\n        while (i < N || j < N) {\n            int sub = prime[j] - prime[i];\n            if (sub < N) j++;\n            else if (sub >= N) {\n                i++;\n                if (sub == N) ans++;\n            }\n        }\n        cout << ans << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nconst int M = 20000;\n\nint main() {\n  vector<int> primes;\n\n  for(int i = 2; i < M; i++) {\n    bool flag = true;\n\n    for(int j = 2; j * j <= i; j++) {\n      if(i % j == 0) {\n        flag = false;\n        break;\n      }\n    }\n\n    if(flag) {\n      primes.push_back(i);\n    }\n  }\n  \n  for(int n; cin >> n && n; ) {\n    int sum = 0, front = 0, back = 0, count = 0;\n\n    while(true) {\n      while(sum < n && front < primes.size()) {\n        sum += primes[front++];\n      }\n\n      while(sum > n && back <= front) {\n        sum -= primes[back++];\n      }\n\n      if(sum == n) {\n        count++;\n        sum -= primes[back++];\n      }\n\n      if(front == back) {\n        break;\n      }\n    }\n\n    cout << count << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\nusing namespace std;\n\nbool isnp[10001];\nint ans[10001];\n\nint main(){\n\tfor(int i = 2; i < 98; ++i){\n\t\tif( !isnp[i] ){\n\t\t\tfor(int j = i * i; j <= 10000; j += i){\n\t\t\t\tisnp[j] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tvector<int> primes;\n\tfor(int i = 2; i < 9999; ++i){\n\t\tif( !isnp[i] ) primes.push_back(i);\n\t}\n\n\tvector<int> sum(primes.size() + 1);\n\tfor(int i = 0; i < primes.size(); ++i){\n\t\tsum[i+1] = sum[i] + primes[i];\n\t}\n\n\tfor(int i = 1; i < sum.size(); ++i){\n\t\tfor(int j = 0; j < i; ++j){\n\t\t\tif(sum[i] - sum[j] <= 10000){\n\t\t\t\t++ans[sum[i] - sum[j]];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint n;\n\twhile(scanf(\"%d\", &n), n != 0){\n\t\tprintf(\"%d\\n\", ans[n]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n    int num[10000];\n    for(int i=0; i<10000; ++i) num[i] = -1;\n    for(int i=2; i<10000; ++i){\n        if(num[i]==0) continue;\n        num[i] = 1;\n        for(int j=i*2; j<10000; j+=i){\n            num[j] = 0;\n        }\n    }\n    int prime[10000];\n    int index = 0;\n    for(int i=2; i<10000; ++i){\n        if(num[i]==1){\n            prime[index] = i;\n            index++;\n        }\n    }\n    \n    int N;\n    while(cin >> N, N){\n        int ans = 0;\n        for(int len=1; len<1000; ++len){\n            int sum = 0;\n            for(int j=0; j<len; ++j){\n                sum += prime[j];\n            }\n            //cout << \"len \" << len << \" sum \" << sum << endl;\n            if(sum==N){\n                ans++;\n                continue;\n            }\n            else if(sum>N){\n                break;\n            }\n            for(int i=0; i+len<10000; ++i){\n                sum -= prime[i];\n                sum += prime[i+len];\n                //cout << \"len \" << len << \" sum \" << sum << endl;\n                if(sum==N){\n                    ans++;\n                    continue;\n                }\n                else if(sum>N){\n                    break;\n                }\n\n            }\n        }\n        cout << ans << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint cc[10010] = {};\nint isprime[10010];\n\nint main() {\n    isprime[0] = isprime[1] = 1;\n    for(int i = 4; i<=10000; i+=2) isprime[i] = 1;\n    for(int i=3; i*i<=10000; i+=2)\n        if(isprime[i] == 0)\n            for(int j=2; i*j<=10000; ++j)\n                isprime[i*j] = 1;\n\n    int x = 2;\n    cc[2] = 1;\n    for(int j=3; x <= 10000; j+=2) {\n        if(isprime[j]) continue;\n        x += j;\n        cc[x]++;\n    }\n\n    for(int i=3; i<=10000; i+=2) {\n        if(isprime[i]) continue;\n        int x = i;\n        cc[i]++;\n        for(int j=i+1; j <= 10000 && x <= 10000; ++j) {\n            if(isprime[j]) continue;\n            x += j;\n            if(x >= 10000) break;\n            cc[x]++;\n        }\n    }\n    int n;\n    while(cin>>n, n) {\n        cout<<cc[n]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nbool isprimeDiv2(int n, int k = 2)\n{\n\tif (n == 1) { return false; }\n\n\tif (n < k * k) { return true; }\n\n\tif (n % k == 0) { return false; }\n\n\treturn isprimeDiv2(n, k + 1);\n}\n\nint main()\n{\n\tvector<int> primes;\n\n\tfor (int i = 1; i <= 1000000; i++)\n\t{\n\t\tif (isprimeDiv2(i))\n\t\t{\n\t\t\tprimes.push_back(i);\n\t\t}\n\t}\n\n\tvector<int> consecutive(1000001,  0);\n\n\tfor (int i = 0; i < primes.size(); i++)\n\t{\n\t\tfor (int j = i; j < primes.size(); j++)\n\t\t{\n\t\t\tint sum = 0;\n\n\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t{\n\t\t\t\tsum += primes[k];\n\n\t\t\t\tif (sum > 1000000)\n\t\t\t\t{\n\t\t\t\t\tgoto Exit;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsecutive[sum]++;\n\t\t}\n\n\tExit:;\n\t}\n\n\tint n;\n\n\twhile (true)\n\t{\n\t\tcin >> n;\n\n\t\tif (n == 0) { break; }\n\n\t\tcout << consecutive[n] << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nconst int MAX = 10000 + 1;\nbool IsPrime[MAX];\nvector<int> Eratosthenes(int n = MAX) {\n    vector<int> res;    // prime numbers\n    IsPrime[0] = false; IsPrime[1] = false;\n    for (int i = 2; i < n; ++i) IsPrime[i] = true;\n    for (int i = 2; i < n; ++i) if (IsPrime[i]) {\n        res.push_back(i);\n        for (int j = i * 2; j < n; j += i) IsPrime[j] = false;\n    }\n    return res;\n}\n\nint main() {\n    vector<int> prime = Eratosthenes();\n    int n;\n    while (cin >> n, n) {\n        int cnt = 0;\n        int right = 0, sum = 0;\n        for (int left = 0; left < prime.size(); left++) {\n            while (right < prime.size() && sum < n) {\n                sum += prime[right++];\n            }\n            if (sum == n) cnt++;\n            sum -= prime[left];\n        }\n        cout << cnt << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nconst int MAX = 1e4;\n\nbool p[MAX];\nvector<int> prime;\nint n,sum[MAX+1];\n\nvoid is_prime(){\n  fill(p,p+MAX,true);\n  p[0] = p[1] = false;\n\n  for(int i = 2 ; i*i <= MAX ; i++){\n    if(p[i]){\n      for(int j = i*i ; j <= MAX ; j += i){\n\tp[j] = false;\n      }\n    }\n  }\n}\n\nvoid init(){\n  is_prime();\n  for(int i = 0 ; i < MAX ; i++){\n    if(p[i]) prime.push_back(i);\n  }\n}\n\nvoid solve(){\n  int sum = 0 ,cnt = 0 ,t = 0;\n  for(int i = 0 ; i < prime.size() ; i++){\n    sum += prime[i];\n    if(sum == n) cnt++;   \n    while(sum >= n){\n      sum -= prime[t++];\n      if(sum == n) cnt++;   \n    }\n  }\n  cout << cnt << endl;\n}\n\nint main(){\n  init();\n\n  while(cin >> n ,n){\n    solve();\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\nbool is_prime(int num);\n\nusing namespace std;\n\nint main(){\n  int i;\n  int j = 0;\n  int primes[10000];\n  for (i = 1; i <= 10000; ++i){\n    if(is_prime(i)){primes[j] = i;j++;}\n  }\n  int input;\n  int sum;\n  int count;\n  int vector_index = 0;\n  while(cin>>input){\n    if(input==0){break;}\n\n    // initialization\n    vector_index = 0;\n    queue<int> sum_components;\n    sum_components.push(primes[vector_index]);\n    sum = primes[vector_index];\n    vector_index++;\n    count = 0;\n\n    //???????????¨???\n    while(sum_components.back() <= input){\n      if(sum < input){\n        sum_components.push(primes[vector_index]);\n        sum += primes[vector_index];\n        vector_index++;\n      }else if(sum == input){\n        count++;\n        sum_components.push(primes[vector_index]);\n        sum += primes[vector_index];\n        vector_index++;\n      }else{\n        sum -= sum_components.front();\n        sum_components.pop();\n      }\n    }\n    cout << count << endl;\n  }\n\n}\n\nbool is_prime(int num){\n  if(num<2){return false;}\n  if(num==2){return true;}\n  for (int i = 2; i < num; ++i){\n    if(num%i == 0){return false;}\n  }\n  return true;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n\tvector<int> furui(10001, 0);\n\tfurui[0] = furui[1] = 1;\n\tfor (int i = 2; i*i < 10001; i++) {\n\t\tif (furui[i] == 0) {\n\t\t\tfor (int j = 2; j <= 10000/i; j++) {\n\t\t\t\tfurui[i*j] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tint n;\n\twhile (cin >> n) {\n\t\tif (n == 0) {\n\t\t\tbreak;\n\t\t}\n\t\tint counter = 0;\n\t\tint i;\n\t\tint sum = 0;\n\t\tfor (i = 2; i <= n; i++) {\n\t\t\tif (sum >= n) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tif (furui[i] == 0) {\n\t\t\t\t\tsum += i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti++;\n\t\tint k = 2;\n\t\twhile (k <= n) {\n\t\t\tif (sum == n) {\n\t\t\t\tcounter++;\n\t\t\t\twhile (sum == n) {\n\t\t\t\t\tif (furui[i] == 0) {\n\t\t\t\t\t\tsum += i;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 10000) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i > 10000) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (sum > n) {\n\t\t\t\twhile (sum > n) {\n\t\t\t\t\tif (furui[k] == 0) {\n\t\t\t\t\t\tsum -= k;\n\t\t\t\t\t\tk++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (sum < n) {\n\t\t\t\t\tif (furui[i] == 0) {\n\t\t\t\t\t\tsum += i;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 10000) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i > 10000) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << counter << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint sieve[10005];\n\nint ans[10005];\n\nvoid precal()\n{\n\tint i,j;\n\t\n\tsieve[1]=1;\n\t\n\tfor(i=2;i*i<=10000;i++)\n\t{\n\t\tif(sieve[i])\n\t\tcontinue;\n\t\t\n\t\tfor (j=2*i;j<=10000;j+=i)\n\t\t{\n\t\t\tsieve[j]=1;\n\t\t}\n\t}\n\t\n\tvector<int>prime;\n\t\n\t\n\tfor (i=1;i<=10000;i++)\n\t{\n\t\tif(!sieve[i])\n\t\tprime.push_back(i);\n\t}\n\t//cout<<prime.size()<<endl;\n\t\n\tfor (i=0;i<prime.size();i++)\n\t{\n\t\tint sum=0;\n\t\tfor (j=i;j<prime.size();j++)\n\t\t{\n\t\t\tsum+=prime[j];\n\t\t\tif(sum<=10000)\n\t\t\tans[sum]++;\n\t\t}\n\t}\n\t\n}\n\nint main()\n{\n\tprecal();\n\t\n\tint N;\n\t\n\tcin>>N;\n\t\n\twhile(N!=0)\n\t{\n\t\tprintf(\"%d\\n\",ans[N]);\n\t\tcin>>N;\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define CLEAR(arr, val) memset(arr, val, sizeof(arr))\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\n\nconst int MAX_PRIME = 10000;\nbool is_prime[MAX_PRIME + 1];\nvoid sieve(int n = MAX_PRIME)\n{\n\tfill_n(is_prime, n + 1, true);\n\tis_prime[0] = is_prime[1] = false;\n\tfor (int i = 2; i * i <= n; ++i)\n\t{\n\t\tif (is_prime[i])\n\t\t{\n\t\t\tfor (int j = 2 * i; j <= n; j += i)\n\t\t\t\tis_prime[j] = false;\n\t\t}\n\t}\n}\nvector<int> make_primes(int n = MAX_PRIME)\n{\n\tvector<int> res;\n\tfor (int i = 2; i <= n; ++i)\n\t\tif (is_prime[i])\n\t\t\tres.push_back(i);\n\treturn res;\n}\nint main()\n{\n\tsieve();\n\tvector<int> p = make_primes();\n\n\tstatic int res[10000 + 1];\n\tfor (int i = 0; i < p.size(); ++i)\n\t{\n\t\tint s = p[i];\n\t\t++res[s];\n\t\tfor (int j = i + 1; j < p.size() && s + p[j] <= 10000; ++j)\n\t\t{\n\t\t\ts += p[j];\n\t\t\t++res[s];\n\t\t}\n\t}\n\tint n;\n\twhile (scanf(\"%d\", &n), n)\n\t\tprintf(\"%d\\n\", res[n]);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\nconst int INF = 1000000000;\n#define REP(i,s,n) for(int i=(int)(s);i<(int)(n);i++)\n#define rep(i,n) REP(i, 0, n)\nconst int MAX_N = 100000;\nint prime[MAX_N];\nbool is_prime[MAX_N + 1];\nvoid pre(){\n    int n = MAX_N;\n    memset(prime, 0, sizeof(prime));\n    rep(i, n + 1) is_prime[i] = true;\n    is_prime[0] = is_prime[1] = false;\n    int p = 0;\n    REP(i, 2, n + 1)\n      if(is_prime[i]){\n          prime[p++] = i;\n          for(int j = 2 * i; j <= n; j += i)\n            is_prime[j] = false;\n      }\n}\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    pre();\n    int N;\n    while(cin >> N && N){\n        int sum = 0, it = 0, ans = 0;\n        queue<int> que;\n        for(; sum < N && it < MAX_N; it++){\n            sum += prime[it];\n            que.push(prime[it]);\n        }\n        for(; it < MAX_N && prime[it - 1] <= N; it++){\n            while(sum > N){\n                sum -= que.front();\n                que.pop();\n            }\n            if(sum == N) ans++;\n            sum += prime[it];\n            que.push(prime[it]);\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n#include<queue>\n#include<vector>\n#include<functional>\n#include<algorithm>\nusing namespace std;\nbool d[10001];\nint a[10000];\nint main() {\n\tfill(d,d+10001,true);\n\td[0]=false;d[1]=false;\n\tint sum=0;\n\tfor(int i=0;i<=10000;i++){\n\t\tif(d[i]){\n\t\t\ta[sum]=i;\n\t\t\tsum++;\n\t\t\tint j=2;\n\t\t\twhile(i*j<=10000){\n\t\t\t\td[i*j]=false;\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\tint n;\n\twhile(cin>>n&&n!=0){\n\t\tint i=0;\n\t\tint sum2=0;\n\t\twhile(a[i]<=n&&i<sum){\n\t\t\tint k=a[i];\n\t\t\tint j=i+1;\n\t\t\twhile(k<n){\n\t\t\t\tk+=a[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(k==n) sum2++;\n\t\t\ti++;\n\t\t}\n\t\tcout<<sum2<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint q,l;\nvoid prime(int x)\n{\n    long long int i,j,count=0;\n    long long int visited[x+1];\n    visited[1]=1;\n    fill(visited,visited+x+1,0);\n    for(i=2;i<=sqrt(x);i++)\n    {\n        if(!visited[i])\n        {\n            for(j=2*i;j<=x;j+=i)\n            {\n                if(!visited[j])\n                    visited[j]=1;\n            }\n        }\n    }\n    long long int sum=0;\n    vector<int>v;\n    v.erase(v.begin(),v.end());\n    for(i=2;i<=x;i++)\n    {\n        if(!visited[i])\n            v.push_back(i);\n    }\n    for(i=0;i<v.size();i++)\n    {\n        sum=0;\n        for(j=i;j<v.size();j++)\n        {\n            sum+=v[j];\n            if(sum==x)\n                {\n                    count++;\n                    break;\n                }\n            else if(sum>x)\n                break;\n        }\n    }\n    cout<<count<<endl;\n}\nint main()\n{\n    int n;\n    cin>>n;\n    while(n!=0)\n    {\n        prime(n);\n        cin>>n;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n\nint main(void){\n\tbool isPrime[10010];\n\tstd::vector<int> prime,input;\n\tint i,j,k,ans;\n\n\tfor(i=0;i<10010;++i) isPrime[i]=true;\n\tfor(i=2;i<10010;++i){\n\t\tfor(j=i*2;j<10010;j+=i) isPrime[j]=false;\n\t}\n\tfor(i=2;i<10010;++i){\n\t\tif(isPrime[i]) prime.push_back(i);\n\t}\n\n\twhile(true){\n\t\tstd::cin >> i;\n\t\tif(i==0) break;\n\t\tinput.push_back(i);\n\t}\n\n\tfor(int in=0;in<input.size();++in){\n\t\tans=0;\n\t\tfor(i=0;true;++i){\n\t\t\tif(prime[i]>input[in]) break;\n\t\t\tk=input[in];\n\t\t\tfor(j=i;true;++j){\n\t\t\t\tk-=prime[j];\n\t\t\t\tif(k<0) break;\n\t\t\t\tif(k==0) ++ans;\n\t\t\t}\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <array>\n#include <vector>\n\nusing namespace std;\n\nvoid makePrimes( int limit, vector<int> & primes ) {\n\n  vector<bool> isPrime( limit + 1 );\n  fill( isPrime.begin(), isPrime.end(), true );\n  isPrime[ 0 ] = isPrime[ 1 ] = false;\n  const int loopMax = (int)sqrt( limit );\n  for ( int i = 2; i <= loopMax; i++ ) {\n\tif ( isPrime[ i ] ) {\n\t  for ( int j = i * i; j <= limit; j += i ) {\n\t\tisPrime[ j ] = false;\n\t  }\n\t}\n  }\n  for ( int i = 2; i <= limit; i++ ) {\n\tif ( isPrime[ i ] ) {\n\t  primes.push_back( i );\n\t}\n  }\n}\n\nint main() {\n  vector<int> primes;\n  makePrimes( 10000, primes );\n  const int size = primes.size();\n  \n  vector<int> cum( size );\n  vector<int> count( 10001 );\n\n  int sum = 0;\n  for ( int i = 0; i <= size; i++ ) {\n\tcum[ i ] = sum;\n\tsum += primes[ i ];\n  }\n  \n  fill( count.begin(), count.end(), 0 );\n  for ( int i = 0; i <= size; i++ ) {\n\tfor ( int j = i + 1; j <= size; j++ ) {\n\t  const int n = cum[ j ] - cum[ i ];\n\t  if ( n <= 10000 ) {\n\t\tcount[ n ]++;\n\t  }\n\t}\n  }\n  \n  while ( true ) {\n\tint n;\n\tcin >> n;\n\tif ( n == 0 ) break;\n\tcout << count[ n ] << endl;\n  }  \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <list>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <limits>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <complex>\n\nusing namespace std;\n\n//define\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n\n#define INF (INT_MAX/3)\n#define PI (2*acos(0.0))\n#define EPS (1e-8)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nbool isprime[10001];\nvector<int> primelist;\n\nvoid seive(){\n  for(int i = 0; i <= 10000; i++) isprime[i] = true;\n  isprime[0] = isprime[1] = false;\n  for(int i = 2; i * i <= 10000; i++){\n    if(!isprime[i]) continue;\n    for(int j = i * i; j <= 10000; j += i){\n      isprime[j] = false;\n    }\n  }\n  for(int i = 2; i <= 10000; i++){\n    if(isprime[i]) primelist.push_back(i);\n  }\n}\n\nint main(){\n  ios_base::sync_with_stdio(0);\n  seive();\n  int n;\n  while(cin >> n, n != 0){\n    int ans = 0;\n    for(size_t i = 0; i < primelist.size(); i++){\n      if(primelist[i] > n) break;\n      int sum = 0;\n      for(size_t j = i; j < primelist.size(); j++){\n        sum += primelist[j];\n        if(sum == n) ans++;\n        if(sum > n) break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string>\n#include<queue>\n#include<stack>\n#define int long long\nusing namespace std;\nvector<int>p, ps;\nbool b[5736397];\nvoid f(int k) {\n\tp.push_back(k);\n\tps.push_back(ps.back() + k);\n\tb[ps.back()] = 1;\n\treturn;\n}\nsigned main() {\n\tps.push_back(0); b[0] = 1;\n\tf(2);\n\tfor (int i = 3; i <= 10000; i += 2) {\n\t\tbool b00l = 1;\n\t\tfor (int j = 0; j < p.size(); j++) \n\t\t\tif (i%p[j] == 0)b00l = 0;\n\t\tif (b00l)f(i);\n\t}\n\tint n;\n\twhile (cin >> n, n) {\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < ps.size(); i++) {\n\t\t\tif (ps[i] - n < 0)continue;\n\t\t\tif (b[ps[i] - n])ans++;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <list>\n#include <set>\n#include <map>\n\nusing namespace std;\n//#define DEBUG(x) cout<<#x<<\": \"<<x<<endl\n#define DEBUG(x) \n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define INT(a) int((a)+1e-9)\nint DX[4]={1,0,-1,0};\nint DY[4]={0,1,0,-1};\n\nint ps[5000];\nint sps[5000];\nint pl;\n\nvoid init(){\n\tint pi=0;\n\tFOR(p,2,10001){\n\t\tbool isPrime=true;\n\t\tFOR(qi,0,pi){\n\t\t\tif(p%ps[qi]==0){\n\t\t\t\tisPrime=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(isPrime) ps[pi++]=p;\n\t}\n\tpl=pi;\n\n\tsps[0]=0;\n\tFOR(pi,0,pl){\n\t\tsps[pi+1]=sps[pi]+ps[pi];\n\t}\n}\n\nint solve(int n){\n\tint re=0;\n\tint i=0,j=0;\n\twhile(ps[i]<=n&&j<=pl){\n\t\tDEBUG(i);DEBUG(j);DEBUG(sps[j]-sps[i]);\n\t\tif(sps[j]-sps[i]==n){re++; j++;}\n\t\telse if(sps[j]-sps[i]>n){i++;}\n\t\telse if(sps[j]-sps[i]<n){j++;}\n\t}\n\treturn re;\n}\n\n\n\nint main(){\n\tinit();\n\t\n\tint n;\n\twhile(true){\n\t\tcin >> n;\t\t\tif(!n) return 0;\n\t\tDEBUG(n);\n\t\tcout<<solve(n)<<endl;\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstring>\nusing namespace std;\n\n#define MAX_N 10001\n\nbool is_prime[MAX_N];\nvector<int> prime;\nvoid init() {\n    memset(is_prime, 1, sizeof(is_prime));\n    is_prime[0] = is_prime[1] = false;\n    for (int i = 2; i < MAX_N; i++) \n        if (is_prime[i]) {\n            prime.push_back(i);\n            for (int j = i+i; j < MAX_N; j+=i) \n                is_prime[j] = false;\n        }\n}\n\nint main() {\n    init();\n    int n;\n    while (cin >> n, n != 0) {\n        int pat = 0;\n        for (int i = 0; i < prime.size(); i++) {\n            int m = 0;\n            for (int j = i; j < prime.size(); j++) {\n                m += prime[j];\n                if (m == n) pat++;\n            }\n        }\n\n        cout << pat << endl;\n    }\n    return 0;\n}\n "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<map>\n#include<stack>\n#include<cmath>\n#include<iomanip>\n#include<set>\n#include<numeric>\n#include<random>\nusing namespace std;\ntypedef long long ll;\n#define rep(i, n) for (int i = 0; i < n; ++i)\n#define rrep(i, st, n) for (int i = st; i < n; ++i)\nusing pii = pair<int, int>;\n//const int inf = 1e9 + 7;\n//int dy[] = {0, 0, -1, 1};\n//int dx[] = {1, -1, 0, 0};\n\nint main() {\n    int table[10001] = {0}; rrep(i, 2, 10001) table[i] = 1;\n    rrep(i, 2, 101) {\n        rrep(j, i + 1, 10001) {\n            if (table[j] == 0) continue;\n            if (j % i == 0) {\n                table[j] = 0;\n            }\n        }\n    }\n    vector<int> prime;\n    rep(i, 10001) {\n        if (table[i] == 1) {\n            prime.push_back(i);\n            //cout << i << endl;\n        }\n    }\n    int n;\n    while (cin >> n && n) {\n        int c = 0;\n        rep(i, prime.size()) {\n            int sum = 0;\n            rrep(j, i, prime.size()) {\n                sum += prime[j];\n                if (sum > n) {\n                    break;\n                }\n                if (sum == n) {\n                    c++;\n                    break;\n                }\n            }\n        }\n        cout << c << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int p[10001],M=10001,i,j,c;vector<int>s(1,0);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){vector<int>::iterator t=s.begin();for(c=0;t!=s.end();t++)c+=count(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\nusing ll = long long ;\nusing P = pair<int,int> ;\nusing pll = pair<long long,long long>;\nconstexpr int INF = 1e9;\nconstexpr long long LINF = 1e17;\nconstexpr int MOD = 1000000007;\nconstexpr double PI = 3.14159265358979323846;\nconst int MX = 100005;\n\n\n\nstruct Sieve {\n        int n;\n        vector<int> f,primes;\n        \n        Sieve(int n=1):n(n),f(n+1){\n                f[0] = f[1] = -1;\n                for(long long i=2;i<=n;++i){\n                        if(f[i]) continue;\n                        primes.push_back(i);\n                        f[i] = i;\n                        for(long long j = i*i;j <= n;j += i) {\n                                if(!f[j]) f[j] = i;\n                        }\n                }\n        }\n        \n        bool isPrime(int x){return f[x] == x;}\n        \n        vector<int> factorList(int x){\n                vector<int> res;\n                while(x != 1){\n                        res.push_back(f[x]);\n                        x /= f[x];\n                }\n                return res;\n        }\n        \n        vector<pair<int,int>> factor(int x){\n                vector<int> fl = factorList(x);\n                if(fl.size() == 0) return {};\n                vector<pair<int,int>> res(1,pair<int,int>(fl[0],0));\n                for(int p:fl){\n                        if(res.back().first == p){\n                                res.back().second ++;\n                        }else{\n                                res.emplace_back(p,1);\n                        }\n                }\n                return res;\n        }\n        \n};\n\n\nint main(){\n    Sieve sieve(MX);\n    while(1){\n        int n;\n        cin >> n;\n        if(n==0) break;\n        int res = 0;\n        int right = 0;\n        int now = 0;\n        for(int left=0;left<sieve.primes.size();left++){\n            while(now + sieve.primes[right] <= n && right < sieve.primes.size()){\n                now += sieve.primes[right];\n                ++ right;\n            }\n\n            if(now==n){\n                res ++;\n            }\n\n            if(left == right) right ++;\n            else now -= sieve.primes[left];\n\n        }\n        cout << res << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\nint isPrime[10001],t[10001],ts;\nint n,sum,cnt,a,b;\nvoid prime(){\n  for(int i=0;i<10001;i++)isPrime[i]=1;\n  isPrime[0]=isPrime[1]=0;\n  for(int i=4;i<10001;i+=2)isPrime[i]=0;\n  for(int i=3;i*i<=10001;i++){\n    if(isPrime[i]){\n      for(int j=i+i;j<10001;j+=i)isPrime[j]=0;\n    }\n  }\n  t[0]=2;\n  ts=1;\n  for(int i=3;i<10001;i+=2)if(isPrime[i])t[ts++]=i;\n}\nint main(){\n  prime();\n  while(cin>>n&&n){\n    sum=0;a=0;cnt=0;\n    for(int i=0;i<ts;i++){\n     \n      sum+=t[i];\n      // cout<<t[i]<<' '<<sum<<endl;\n      while(sum>=n){\n\tif(sum==n)cnt++;\n\tsum-=t[a];\n\t//\tcout<<t[a]<<' '<<sum<<endl;\n\ta++;\n      }\n    }//for i\n    cout<<cnt<<endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nbool is_prime[10001];\nint prime[10001];\nint main() {\n\tmemset(is_prime, 1, sizeof(is_prime));\n\tis_prime[0] = is_prime[1] = false;\n\tint p = 0;\n\tfor (int i = 2; i <= 10000; i++) {\n\t\tif (is_prime[i]) {\n\t\t\tprime[++p] = prime[p - 1] + i;\n\t\t\tfor (int j = i * 2; j <= 10000; j += i)is_prime[j] = false;\n\t\t}\n\t}\n\tmap<int, int>mp;\n\tfor (int i = 0; i < p; i++) {\n\t\tfor (int j = i + 1; j < p&&prime[j] - prime[i] <= 10000; j++) {\n\t\t\tmp[prime[j] - prime[i]]++;\n\t\t}\n\t}\n\tint n;\n\twhile (scanf(\"%d\", &n), n)printf(\"%d\\n\", mp[n]);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define PRIME_MAX 10000\nvector<bool> prime(PRIME_MAX+1,true);\n \nvoid init_prime(){\n\tprime[0] = prime[1] = false;\n\tfor(int i=2;i*i<=PRIME_MAX;i++)\n\t\tif(prime[i]) for(int j=i*i;j<=PRIME_MAX;j+=i)prime[j] = false;\n}\n\nint main(){\n\tinit_prime();\n\tvector<int> data;\n\trep(i,PRIME_MAX+1)\n\t\tif(prime[i])data.push_back(i);\n\t\n\tint n;\n\twhile(cin >> n , n){\n\t\tint ret = 0;\n\t\trep(i,data.size()){\n\t\t\tint sum = 0;\n\t\t\tfor(int j = i ; j < data.size() ; j++){\n\t\t\t\tsum += data[j];\n\t\t\t\tif(sum > n)break;\n\t\t\t\tif(sum == n)ret++;\n\t\t\t}\n\t\t}\n\t\tcout << ret << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#define MAX (1000000)\nusing namespace std;\n\nbool prime[MAX + 1];\n\nint main()\n{\n\tprime[0] = prime[1] = false;\n\tfor (int i = 2; i <= MAX; i++){\n\t\tprime[i] = true;\n\t}\n\tfor (int i = 2; i * i <= MAX; i++){\n\t\tfor (int j = i * i; j <= MAX; j += i){\n\t\t\tprime[j] = false;\n\t\t}\n\t}\n\t\n\tint n;\n\twhile (scanf(\"%d\", &n), n){\n\t\tint num = 0;\n\t\tfor (int i = 2; i <= n; i++){\n\t\t\tif (prime[i]){\n\t\t\t\tint sum = 0;\n\t\t\t\tint j = i;\n\t\t\t\twhile (1){\n\t\t\t\t\tif (prime[j]){\n\t\t\t\t\t\tsum += j;\n\t\t\t\t\t\tif (sum == n){\n\t\t\t\t\t\t\tnum++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sum > n){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\", num);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<cstring>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define REP(n) rep(i,n)\n#define all(n) n.begin(),n.end()\n\nconst int MAXN = 10010, MAXP = 1231;\nbool p[MAXN] = {1, 1};\nint num[MAXP + 10];\nint sum[MAXP + 10];\n\nint main()\n{\n    REP(MAXN)if(!p[i])for(int j = i*2;j<MAXN;j+=i)p[j] = 1;\n   \n    int cnt = 0;\n    REP(MAXN)if(!p[i]){num[cnt] = i; cnt++; }\n\n    REP(cnt)sum[i+1] = sum[i] + num[i];\n\n    int n;\n    while(cin >> n && n)\n    {\n        int ans = 0;\n\n        REP(cnt)for(int j = i + 1;j < cnt+1;j++)if(sum[j] - sum[i] == n) ans++;\n\n        cout << ans << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nvoid Make_Prime_Number(int * );\n\n\nint main(void){\n\n        int prime[10000] = {0};\n        int k = 0;\n        int count = 0;\n\n        for(int i=2; i<=10000; i++){\n\n                for(int j=2; j<i; j++){\n                        \n                        if(i%j == 0){\n                                count = 1;\n                                break;\n                        }\n\n                }\n\n                if(count == 0){\n                        prime[k] = i;\n                        k++;\n                }\n                \n              \n                count = 0;\n\n        }\n\n        /*for(int i=0; i<10000; i++){\n                if(prime[i] != 0){\n                        cout << i << \":\" << prime[i] << endl;\n                }\n                }*/\n\n        while(1){\n                \n                int num = 0;\n                int answer = 0;\n                cin >> num;\n\n                if(num == 0)break;\n\n                for(int j=0; j<10000; j++){\n                        \n                        int sum = 0;  \n                        for(int i=j; i<10000; i++){\n                                \n                                sum = sum + prime[i];\n                                if(sum > num)break;\n                                if(sum == num){\n                                        answer++;\n                                        break;\n                                }\n                                \n                        }\n                        \n                                \n                                }\n                cout << answer << endl;\n                \n        }\n\n        return 0;\n                \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n\nusing namespace std;\n\nvector<int> primes;\nbool isprime[10001];\nint cnt[10001];\n\nint main(){\n    int n;\n\n    memset(isprime,true,sizeof(isprime));\n\n    for(int i=2;i<=10000;i++){\n        if(isprime[i]){\n            primes.push_back(i);\n            for(int j=2;i*j<=10000;++j){\n                isprime[i*j] = false;\n            }\n        }\n    }\n\n    int sz = primes.size();\n    \n    for(int i=0;i<sz;i++){\n        int tmp=0;\n        for(int j=i;j<sz;j++){\n            tmp += primes[j];\n            if(tmp > 10000) break;\n            cnt[tmp]++;\n        }\n    }\n\n    while(cin >> n && n){\n        cout << cnt[n] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\nint prime[200];\nint main(){\n\tint top=0;\n\tfor(int i=2;i<1000;i++){\n\t\tbool ok=true;\n\t\tfor(int j=0;j<top;j++)if(i%prime[j]==0)ok=false;\n\t\tif(ok){\n\t\t\tprime[top]=i;\n\t\t\ttop++;\n\t\t}\n\t}\n\tint n;\n\twhile(true){\n\t\tcin>>n;\n\t\tif(n==0)break;\n\t\tint ans=0;\n\t\tfor(int i=0;i<top;i++){\n\t\t\tint cnt=prime[i];\n\t\t\tint k=i+1;\n\t\t\twhile(true){\n\t\t\t\tif(cnt==n)ans++;\n\t\t\t\tif(cnt>=n)break;\n\t\t\t\tif(k==top)break;\n\t\t\t\tcnt+=prime[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint PN[1000000];\nbool isPrime[1300000];\nint Index=0;\nvoid Init(){\n  for(int i=0;i<1300000;i++){\n    isPrime[i] = false;\n  }\n  for(int i=3;i<1300000;i+=2)isPrime[i] = true;\n  isPrime[2] = true;\n\n  int lim = sqrt(1300000.0)+1;\n  for(int i=3;i<=lim;i+=2){\n    if(!isPrime[i])continue;\n    for(int j=i+i;j<=1300000;j+=i){\n      isPrime[j] = false;\n    }\n  }\n\n  for(int i=2;i<1300000;i++){\n    if(isPrime[i])PN[Index++] = i;\n  }\n}\n\n\nint main(){\n  int n,ans,sum;\n  Init();\n  while(cin >> n && n){\n    ans = 0;\n    for(int i=0;i<=n;i++){\n      if(PN[i] > n)break;\n      sum = 0;\n      \n      for(int j=i;j<=n;j++){\n\tsum += PN[j];\n\tif(sum == n){\n\t  ans++; break;\n\t}\n\telse if(sum > n)break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main(){\n  int n;\n  int pr[10000] = {1,1}, ans[10000];\n  vector<int> prime;\n\n  for(int i=2; i<10000; i++){\n    if(pr[i] == 0)\n      prime.push_back(i);\n    for(int j=i*i; j<10000; j+=i)\n      pr[j] = 1;\n  }\n  \n  for(int i=0; i<prime.size(); i++){\n    int xx = 0;\n    for(int j=i; j>=0; j--){\n      xx += prime[j];\n      if(xx > 10000)\n\tbreak;\n      ans[xx]++;\n    }\n  }\n  \n  while(cin >> n && n)\n    cout << ans[n] << endl;\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <queue>\nusing namespace std;\n\nint main(){\n  // ?´???°????±???????\n  vector<bool> furui(10001, true);\n  vector<int> prime;\n  for(int i = 2; i <= 10000; i++){\n    if(furui[i]){\n      prime.push_back(i);\n      for(int j = i + i; j <= 10000; j += i){\n        furui[j] = false;\n      }\n    }\n  }\n  queue<int> seq;\n  int n;\n\n  while(cin >> n && n > 0){\n    int sum = 0;\n    int ans = 0;\n\n    for(int i = 0; i < prime.size(); i++){\n      seq.push(prime[i]);\n      sum += prime[i];\n\n      while(sum >= n){\n        if(sum == n)\n          ans++;\n        sum -= seq.front();\n        seq.pop();\n      }\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int M=10001,i,j,c;vector<int>s(1,0),p(M);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){vector<int>::iterator t=s.begin();for(c=0;t!=s.end();t++)c+=count(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    bool p[10001] = {0};\n    \n    for (int i = 4; i <= 10000; i += 2) p[i] = 1;\n    p[0] = p[1] = 1;\n    \n    for (int i = 3; i * i <= 10000; i += 2){\n        if (!p[i]){\n            for (int j = i * i; j <= 10000; j += 2 * i) p[j] = 1;\n        }\n    }\n    \n    vector<int> v;\n    for (int i = 2; i <= 10000; i++) if (!p[i]) v.push_back(i);\n    \n    while (scanf(\"%d\", &n) && n){\n        int num = 0;\n        int s = 0;\n        for (int head = 0, tail = 0; tail <= head; tail++){\n            while (head < v.size() && s + v[head] <= n){\n                s += v[head++];\n            }\n            if (s == n){\n                num++;\n            }\n            s -= v[tail];\n        }\n        printf(\"%d\\n\", num);\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint book[10001];\nvector<int> num;\n\nint main()\n{\n\tfor (int i = 2; i <= 10000; ++i){\n\t\tif (!book[i]){\n\t \t\tnum.push_back(i);\n\t \t\tfor (int j = i; j <= 10000; j += i){\n\t\t\t\tbook[j] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfill(book, book + 10001, 0);\n\tfor (int i = 0; i < num.size(); ++i)\n\t{\n\t\tint sum = 0;\n\t\tfor (int j = i; j < num.size(); ++j){\n\t\t\tif (sum + num[j] > 10000)break;\n\t\t\telse ++book[sum += num[j]];\n\t\t}\n\t}\n\tint n;\n\twhile (cin >> n && n){\n\t\tcout << book[n] << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nconst int MAX_N = 10001;\nvector<int> p;\nbool is_p[MAX_N+1] = {false,false};\nint ans[MAX_N] = {0};\n\nvoid sieve(){\n\tfor(int i = 2 ; i <= MAX_N ; i++ )\n\t\tis_p[i] = true;\n\tfor(int i = 2 ; i*i <= MAX_N ; i++ ){\n\t\tif( is_p[i] ){\n\t\t\tp.push_back( i );\n\t\t\tfor(int j = i+i ; j <= MAX_N ; j += i ){\n\t\t\t\tis_p[j] = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tsieve();\n\tfor(int i=0 ; i < p.size() ; i++ ){\n\t\tint sum = 0;\n\t\tfor(int j = i ; j < p.size() ; j++ ){\n\t\t\tsum += p[j];\n\t\t\tif( MAX_N <= sum ) continue;\n\t\t\tans[sum]++;\n\t\t}\n\t}\n\t\n\tint n;\n\twhile( cin >> n , n ){\n\t\tcout << ans[n] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<bitset>\n#include<vector>\nconst int N = 10000;\nint main()\n{\n\tstd::vector<int>v;\n\tstd::bitset<N>p;\n\tint i,j,n,a[N]={0};\n\tp.set();\n\tfor(i=2;i<N/2;++i)if(p[i])for(v.push_back(i),j=i*2;j<N;j+=i)p[j]=0;\n\tfor(i=0;i<v.size();++i)\n\t{\n\t\tn=v[i];\n\t\t++a[n];\n\t\tfor(j=i+1;j<v.size() && (n+=v[j], n<N);++j)++a[n];\n\t}\n\twhile(scanf(\"%d\",&n),n)printf(\"%d\\n\",a[n]);\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<list>\n#include<algorithm>\nusing namespace std;\n\nlist<long> L;\n\nbool isprime(long n){\n    if (n == 2) return true;\n    if (n == 1 || n % 2 == 0) return false;\n    long k = 3;\n    while( k * k <= n ){\n        if (n % k == 0) return false;\n        k = k + 2;\n    }\n    return true;\n}\n\nvoid setprime(){\n    L.push_back(2);\n    long n = 3;\n    while (n < 10010){\n        if (isprime(n)) L.push_back(n);\n        n += 2;\n    }\n    return;\n}\n\nint main(){\n    setprime();\n    long D[L.size() + 2];\n    D[0] = 0;\n    int i = 1;\n    while (!(L.empty())) {\n        D[i] = D[i - 1] + *(L.begin());\n        L.pop_front(); i++;\n    }\n    long k;\n    while(cin >> k) {\n        if (k == 0) return 0;\n        int i = 1, x = 0;\n        while( D[i] - D[i - 1] <= k ) {\n            int j = 0;\n            while(j < i){\n                if (D[i] - D[j] == k) x++;\n                j++;\n            }\n            i++;\n        }\n        cout << x << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\n#include <cstdlib>\n#include <vector>\n\nusing namespace std;\n\n\nint main() {\n  // create a vector to store inputs\n  vector<int> inputs;\n  int n_inputs = 0;\n  int max_prime = 0;\n  int input;\n  while (cin >> input) {\n    if (input == 0) break;\n    if (input > max_prime) max_prime = input;\n    ++n_inputs;\n    inputs.push_back(input);\n  }\n\n  vector<bool> primes_bool(max_prime + 1, true);\n\n  int cur_prime = 2;\n  while (cur_prime <= max_prime) {\n    if (primes_bool[cur_prime] == true) {\n      for (int l = cur_prime * 2; l <= max_prime; l += cur_prime) {\n\tprimes_bool[l] = false;\n      }\n    }\n    ++cur_prime;\n  }\n\n\n\n  //solve for each inputs\n  for (int i = 0; i < n_inputs; ++i) {\n    queue<int> primes_Q;\n    int cur_input = inputs[i];\n    for (int j = 2; j <= cur_input; ++j) {\n      if (primes_bool[j] == true) { //if prime\n\tprimes_Q.push(j);\n      }\n    }\n    queue<int> sum_Q;\n\n    int count = 0; //count of sums\n    int cur_sum = 0; //dynamic sum\n\n    while (true) {\n      if (cur_sum == cur_input) {\n\t++count;\n\tcur_sum -= sum_Q.front();\n\tsum_Q.pop();\n      } else if (cur_sum < cur_input) {\n\tif (primes_Q.empty()) break;\n\tcur_sum += primes_Q.front();\n\tsum_Q.push(primes_Q.front());\n\tprimes_Q.pop();\n      } else if (cur_sum > cur_input) {\n\tcur_sum -= sum_Q.front();\n\tsum_Q.pop();\n      }\n    }\n\n    cout << count << endl;\n  }\n}\n    \n      \n      \n\n  \n  \n\n  \n  \n  \n    "
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n  \n#define REP(i,s,n) for(int i=s;i<n;++i)\n#define rep(i,n) REP(i,0,n)\n#define SORT(c) sort((c).begin(),(c).end())\n#define IINF INT_MAX\n#define LLINF LLONG_MAX\n#define DEBUG false\n  \ntypedef long long ll;\ntypedef pair<int, int> ii;\n \nint main(){\n     \n    vector<int> prime;\n    vector<bool> check(10002);\n     \n    REP(i, 2, 10001){\n        if(!check[i]) prime.push_back(i);\n        for(int j  = 2; i * j < 10001; j++){\n            check[i * j] = true;\n        }\n    }\n \n    vector<ll> ans(10002, 0);\n    ans[0] = 1;\n \n    rep(i, prime.size()){\n        int tmp = 0;\n        for(int j = 0; i + j < prime.size(); j++){\n            tmp += prime[i + j];\n            if(tmp > 10001) break;\n            ans[tmp]++;\n        }\n    }\n     \n \n    ll num;\n    while(cin >> num, num){\n        cout << ans[num] << endl;\n    }\n     \n  \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n// Sum of Consecutive Prime Numbers\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1257 \n\n#include<iostream>\n#include<map>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<climits>\n#include<ctime>\n#include<cstring>\n#include<numeric>\n\n#define ALL(v) (v).begin(),(v).end()\n#define REP(i,p,n) for(int i=p;i<(int)(n);++i)\n#define rep(i,n) REP(i,0,n)\n#define dump(a) (cerr << #a << \"=\" << (a) << endl)\n#define DUMP(list) cout << \"{ \"; for(auto nth : list){ cout << nth << \" \"; } cout << \"}\" << endl;\n\nusing namespace std;\n\nconst int PRIME_MAX = 10010;\n\nbool is_prime[PRIME_MAX];\nvector<int> prime_list;\n\nint main() {\n\n    is_prime[0] = false;\n    is_prime[1] = false;\n    for (int i = 2; i < PRIME_MAX; ++i) is_prime[i] = true;\n    for (int i = 2; i < PRIME_MAX; ++i) {\n        if (is_prime[i]) {\n            for (int j = i+i; j < PRIME_MAX; j += i) {\n                is_prime[j] = false;\n            }\n        }\n    }\n    \n    for (int i = 2; i < PRIME_MAX; ++i) {\n        if (is_prime[i]) prime_list.push_back(i);\n    }\n\n    int N;\n    while (cin >> N) {\n        if (N == 0) break;\n        int ans = 0, head = 0;\n        while (true) {\n            int total = 0;\n            for (int i = head; total <= N; ++i) {\n                total += prime_list[i];\n                if (total == N) ans++;\n            }\n            if (prime_list[head] > N) break;\n            head++;\n        }\n        cout << ans << endl;\n    }\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n\nbool prime[10001];\nvector<int> vec;\nint dp[10001];\n\nint main(void){\n\tmemset(prime,true,sizeof(prime));\n\tprime[0]=prime[1]=false;\n\tfor(int i=2;i<=10000;i++){\n\t\tif(prime[i]){\n\t\t\tvec.push_back(i);\n\t\t\tfor(int j=i*2;j<=10000;j+=i){\n\t\t\t\tprime[j]=false;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<vec.size();i++){\n\t\tint sum=0;\n\t\tfor(int j=i;j<vec.size();j++){\n\t\t\tsum+=vec[j];\n\t\t\tif(sum>=10001)break;\n\t\t\tdp[sum]++;\n\t\t}\n\t}\n\twhile(1){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tif(n==0)break;\n\t\tprintf(\"%d\\n\",dp[n]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <numeric>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <climits>\n\n#include <cstdio>\n\nusing namespace std;\n\n#define FOR(var, start, count) for(int var=start; var<count; var++)\n#define REP(var, count) FOR(var,0,count)\n\nint val[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973};\n\nint main(void) {\n\twhile(true) {\n\t\tint S;\n\t\tcin >> S;\n\t\t\n\t\tif ( S == 0 ) { break; }\n\t\t\n\t\tint N = sizeof(val)/sizeof(int);\n\t\t\n\t\tint cnt = 0;\n\t\tint sum = 0;\n\t\t\n\t\tint front = 0;\n\t\tint end = 0;\n\t\t\n\t\twhile ( true ) {\n\t\t\tif ( sum < S ) {\n\t\t\t\tif ( end >= N ) { break; }\n\t\t\t\tsum += val[end];\n\t\t\t\tend++;\n\t\t\t} else {\n\t\t\t\tsum -= val[front];\n\t\t\t\tfront++;\n\t\t\t}\n\t\t\t\n\t\t\tif ( sum == S ) {\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tcout << cnt << endl;\n\t\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <iomanip>\n#include <limits>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <regex>\n#include <vector>\n\n#define fix(n)          cout<<fixed<<setprecision(n)\n#define rep(i,n)        for (int i = 0; i < (n); ++i)\n#define all(a)          (a).begin(), (a).end()\n#define sort(a)         sort(all(a))\n#define uniq(a)         sort(a);(a).erase(unique(all(a)), (a).end())\n#define reverse(a)      reverse(all(a))\n#define ctos(c)         string(1, (c))\n#define out(d)          cout << (d)\n#define outl(d)         std::cout<<(d)<<\"\\n\"\n#define YES()           cout << \"YES\" << endl\n#define NO()            cout << \"NO\" << endl\n#define Yes()           cout << \"Yes\" << endl\n#define No()            cout << \"No\" << endl\n#define ceil(x, y)      ((x + y - 1) / (y))\n#define debug(x)        cerr << #x << \": \" << (x) << '\\n'\n#define debug2(x, y)    cerr << #x << \": \" << (x) << \", \" << #y << \": \" << (y) << '\\n'\n#define debug3(x, y, z) cerr << #x << \": \" << (x) << \", \" << #y << \": \" << (y) << \", \" << #z << \": \" << (z) << '\\n'\n#define dbg(v)          for (size_t _ = 0; _ < v.size(); ++_){ cerr << #v << \"[\" << _ << \"] : \" << v[_] << '\\n'; }\n#define pb              push_back\n#define fst             first\n#define int             long long\n#define INF             __LONG_LONG_MAX__\n\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing P = pair<ll,ll>;\n\nconst ll MOD = 1000000007; // 10^9 + 7\nconst int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nconst int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nvector<ll> primes;\n\n// 正の整数n未満の素数を全て求める\nvector<ll> sieve(ll n) {\n  vector<bool> is_prime(n);\n  rep(i, n) is_prime[i] = true;\n\n  is_prime[1] = false;\n  for (ll i = 4; i < n; i += 2) is_prime[i] = false;\n  ll lim = ll(sqrt(n));\n  for (ll i = 3; i <= lim; i += 2) {\n    for (ll j = 3; i * j < n; j += 2) {\n      is_prime[i * j] = false;\n    }\n  }\n\n  vector<ll> ret;\n  for (ll i = 1; i < n; i++) {\n    if (is_prime[i]) ret.push_back(i);\n  }\n  return ret;\n}\n\nll solve2(ll n) {\n  ll ret = 0;\n\n  ll len = primes.size();\n  for (int i = 0; i < len; i++) {\n    ll sum = primes[i];\n    for (int j = i + 1; j < len; j++) {\n      if (sum == n) ret++;\n      if (sum >= n) break;\n      sum += primes[j];\n    }\n  }\n\n  return ret;\n}\n\nvoid solve() {\n  primes = sieve(10000);\n\n  while (true) {\n    ll n; cin >> n;\n    if (n == 0) break;\n    outl(solve2(n));\n  }\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  srand((unsigned)time(NULL));\n  fix(12);\n\n  solve();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#define MAX 10100\nusing namespace std;\n\nint prime[MAX];\nbool p[MAX];\n\nvoid func(){\n  p[0] = true;\n  p[1] = true;\n  \n\n  int cnt = 0;\n  for(int i = 2 ; i < MAX ; i++){\n    if(p[i])continue;\n    prime[cnt++] = i;\n    //cout << i << endl; //\n    for(int j = i*2 ; j < MAX ; j += i){\n      p[j] = true;\n    }\n  }\n  //cout <<\"cnt = \" << cnt << endl;//\n}\n\nint main(){\n  func();\n  int n;\n  while(1){\n    cin >> n;\n    if(n == 0)break;\n    int cnt = 0,s = 0,t = 0;\n    int sum = 0;\n    while(1){\n\n      if(prime[s] > n)break;\n\n      if(sum == n){\n\tcnt++;\n      \tsum -= prime[s];\n\ts++;\n      }\n      else if(sum < n)sum += prime[t++];\n      else if(sum > n){\n\tsum -= prime[s];\n\ts++;\n      }\n      //  cout << \"s = \" << s << \" t = \" << t <<\" prime[s] = \"<< prime[s]<< \" sum = \" << sum << endl;     \n    }\n\n    cout << cnt << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<set>\n#include<list>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<complex>\n#include<cstdlib>\n#include<cstring>\n#include<numeric>\n#include<sstream>\n#include<iostream>\n#include<algorithm>\n#include<functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\n\nconst int MAX_N =10010;\nint prime[MAX_N+500];//i番目の素数\nbool is_prime[MAX_N+100];//is_prime[i]がtrueならiは素数\n\n//n以下の素数の数を返す\nint sieve(int n){\n\tint p = 0;\n\tfor(int i = 0;i <=n;i++){\n\t\tis_prime[i] =true;\n\t}\n\tis_prime[0] = false;\n\tis_prime[1] = false;\n\tfor(int i = 2;i <=n;i++){\n\t\tif(is_prime[i]){\n\t\t\tprime[p++] = i;\n\t\t\tfor(int j = 2*i;j <=n;j +=i){\n\t\t\t\tis_prime[j] =false;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\nint n;\nint main(){\n\tint kkkk = sieve(10010);\n\twhile(cin>>n){\n\t\tif(n==0){\n\t\t\tbreak;\n\t\t}\n\t\tint s = 0;\n\t\tint t = 0;\n\t\tint sum = 2;\n\t\tint ans = 0;\n\t\tdo{\n\t\t\tif(sum > n){\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t\tif(sum <n){\n\t\t\t\tsum +=prime[++t];\n\t\t\t}\n\t\t\tif(sum ==n){\n\t\t\t\tans++;\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t}while(prime[t]<=n&&s !=t);\n\t\tcout <<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define repp(i, n) rep(i, 0, n)\n#define repb(i, a, b) for(int i = a; i >= b; i--)\n#define all(a) a.begin(), a.end()\n#define int long long\nusing namespace std;\n\nvector<int> prime;\nbool is_prime[10001];\n\nvoid sieve(int n){\n    rep(i, 0, n) is_prime[i] = true;\n    is_prime[0] = is_prime[1] = false;\n    rep(i, 2, n){\n        if(is_prime[i]) prime. push_back(i);\n        for(int j = 2 * i; j < n; j += i) is_prime[j] = false;\n    } \n    return;\n}\n\nint d[10001];\n\nsigned main(){\n    prime. push_back(0);\n    sieve(10001);\n    rep(i, 1, prime.size()){\n        prime[i] += prime[i - 1];\n    }\n    rep(i, 0 ,prime.size()){\n        rep(j, i + 1, prime.size()){\n            int tmp = prime[j] - prime[i];\n            if(tmp <= 10000) d[tmp]++;\n        }\n    }\n    int n;\n    while(cin >> n, n){\n        cout << d[n] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\nusing namespace std;\n\nbool isPrime(int a){\n  for(int i=2;i*i<=a;i++){\n    if(a%i==0)return false;\n  }\n  return true;\n}\n\nint main(){\n  int n;\n  vector<int> v;\n  for(int i=2;i<=10000;i++){\n    if(isPrime(i))v.push_back(i);\n  }\n\n  while(cin >> n,n){\n    int sum = 0, prv = 0, ans = 0;\n    for(int i=0;i<v.size();i++){\n      sum += v[i];\n      while(sum > n){\n\tsum -= v[prv++];\n      }\n      if(sum==n){\n\tans++;\n      }\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define For(i, a, b) for(int (i)=(a); (i)<(b); ++(i))\n#define rFor(i, a, b) for(int (i)=(a)-1; (i)>=(b); --(i))\n#define rep(i, n) For((i), 0, (n))\n#define rrep(i, n) rFor((i), (n), 0)\nusing namespace std;\ntypedef long long lint;\n\nint main(){\n    bool flag[10010];\n    vector<int> p;\n    rep(i, 10010) flag[i] = true;\n    flag[0] = flag[1] = false;\n    rep(i, 10010)if(flag[i]){\n        p.push_back(i);\n        for(int j=i*2; j<10010; j+=i) flag[j] = false;\n    }\n    int n;\n    while(scanf(\"%d\", &n) && n){\n        int cnt = 0;\n        int l = 0;\n        int r = 0;\n        int psum = 0;\n        while(l < p.size()){\n            while(r < p.size() && psum < n){\n                psum += p[r];\n                ++r;\n            }\n            if(psum == n) ++cnt;\n            psum -= p[l];\n            ++l;\n        }\n        printf(\"%d\\n\", cnt);\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n\nstatic int so[10001],hyo[1300];\n\nint main(){\n\tint i,j,k,n,m;\n\t\n\tso[1]=1;\n\tfor(i=2;i*i<=10000;i++){\n\t\tfor(j=2*i;j<=10000;j+=i){\n\t\t\tso[j]=1;\n\t\t}\n\t}\n\thyo[0]=0;\n\tj=0;\n\tfor(i=1;i<=10000;i++){\n\t\tif(!so[i]){\n\t\t\t++j;\n\t\t\thyo[j]=hyo[j-1]+i;\n\t\t}\n\t}\n\tk=j;\n\t//printf(\"%d\\n\",k);\n\twhile(0<=scanf(\"%d\",&n)){\n\t\tif(n==0)break;\n\t\t\n\t\tm=0;\n\t\t\n\t\tfor(i=0;i<k;++i){\n\t\t\tfor(j=i+1;j<=k;++j){\n\t\t\t\tif(hyo[j]-hyo[i]==n)++m;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",m);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nint main(){\n  int num;\n\n  while(cin>>num&&num){\n    if(num==2||num==3){\n      cout << 1 << endl;\n      continue;\n    }\n    vector<int> prime;\n    prime.push_back(2);\n    prime.push_back(3);\n    for(int i=5;i<=num;i++){\n      for(int j=2;j<=(int)sqrt(i);j++){\n        if(i%j==0) break;\n        if(j==(int)sqrt(i)) prime.push_back(i);\n      }\n    }\n\n    int sum=0,count=0;\n    for(int i=0;i<prime.size();i++){\n      sum+=prime[i];\n      if(sum>num){\n        prime.erase(prime.begin());\n        sum=0;\n        i=0;\n      }else if(sum==num){\n        prime.erase(prime.begin());\n        count++;\n        sum=0;\n        i=0;\n      }\n    }\n\n    cout << count << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n\nstatic const int maxn = 10001;\n\nint isp[maxn];\nvector<int> p;\n\nvoid eratosthenes() {\n\t//init\n\tfill(isp, isp + maxn, 1);\n\n\n\tint i, j;\n\tint maxi = sqrt(maxn);\n\tfor (i = 2; i <= maxi; i++) {\n\t\tj = i + i;\n\t\twhile (j < maxn) {\n\t\t\tisp[j] = 0;\n\t\t\tj += i;\n\t\t}\n\t}\n\n\tfor (i = 2; i < maxn; i++) {\n\t\tif (isp[i])p.push_back(i);\n\t}\n\n}\n\nint main() {\n\tint i, j, k;\n\n\teratosthenes();\n\t/*\n\tfor (i = p.size() - 1; i >= 0; i--) {\n\t\tcout << p[i] << endl;\n\t}\n\t*/\n\n\twhile (1) {\n\t\tint n;\n\n\t\tcin >> n;\n\t\tif (n == 0)break;\n\n\t\tint a = 0, b = 0; // [a, b]\n\t\tint sum = 2;\n\t\tint ans = 0;\n\t\twhile (b <= n) {\n\t\t\tif (sum == n) {\n\t\t\t\tans++;\n\t\t\t\tb++;\n\t\t\t\tsum += p[b];\n\t\t\t} else if (sum < n) {\n\t\t\t\tb++;\n\t\t\t\tsum += p[b];\n\t\t\t} else if (sum > n) {\n\t\t\t\tsum -= p[a];\n\t\t\t\ta++;\n\t\t\t}\n\t\t}\n\n\t\tcout << ans << endl;\n\t\t\n\t}\n\n\t\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<queue>\n\n//別にqueue使わずに実装余裕じゃん\n//いや無理だわ\n//セグフォのデバッグができるようになりたい\n\nusing namespace std;\n\n\nint main(){\n  //エラトステネスの篩を実装する\n  int np;\n  int n[9999]={0};//i番目が整数i+2に対応(2~10000)\n  vector<int> pr;\n  for(int i=2;i<=100;i++){\n    if(n[i-2]==0){\n      for(int j=1;j<=floor(10000/i);j++){\n        if(j==1){\n          n[j*i-2]=0;\n        }else{\n          n[j*i-2]=1;\n        }\n      }\n    }\n  }\n  //prのなかに素数が入っている\n  for(int i=0;i<9999;i++){\n    if(n[i]==0){\n      pr.push_back(i+2);\n    }\n  }\n  int prs=pr.size();\n\n  /*\n  for(int i=0;i<prs;i++){\n    cout << pr[i] << endl;\n  }\n  */\n\n  while(cin>>np && np!=0){\n    int c=0;//いくつあるかを記録する\n    int s=0;//その時点での和\n    queue<int> q;\n    int j;\n    for(j=0;j<prs;j++){\n      s+=pr[j];\n      if(s>=np){\n        s-=pr[j];\n        break;\n      }\n      q.push(pr[j]);\n    }\n    for(;j<prs;j++){\n      s+=pr[j];\n      q.push(pr[j]);\n      while(s>np){\n        s-=q.front();\n        q.pop();\n      }\n      if(s==0) break;\n      if(s==np) c+=1;\n    }\n    cout << c << endl;\n  }\n\n\n}\n\n"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <math.h>\nusing namespace std;\n\nvector<int> Prime_Num;\n\nint makePrimeQ(){\n  int N = 10010;\n  bool prime[N];\n\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i<=sqrt(N);i++){\n    if(prime[i]){\n      for(int j=2;i*j<N;j++) \n        prime[i*j]=false;\n    }\n  }\n  for (int i=2; i<N; i++) {\n    if (prime[i])\n      Prime_Num.push_back(i);\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    // cout << Prime_Num[num] << endl;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nconst int MAX = 1e4;\n \nbool p[MAX];\nvector<int> prime;\nint n,sum[MAX+1];\n \nvoid is_prime(){\n    fill(p,p+MAX,true);\n    p[0] = p[1] = false;\n \n    for(int i = 2 ; i*i <= MAX ; i++){\n\tif(p[i]){\n\t    for(int j = i*i ; j <= MAX ; j += i){\n\t\tp[j] = false;\n\t    }\n\t}\n    }\n}\n \nvoid init(){\n    is_prime();\n    for(int i = 0 ; i < MAX ; i++){\n\tif(p[i]) prime.push_back(i);\n    }\n}\n \nvoid solve(){\n    int sum = 0 ,cnt = 0 ,t = 0;\n    for(int i = 0 ; i < prime.size() ; i++){\n\tsum += prime[i];\n\tif(sum == n) cnt++;   \n\twhile(sum >= n){\n\t    sum -= prime[t++];\n\t    if(sum == n) cnt++;   \n\t}\n    }\n    cout << cnt << endl;\n}\n \nint main(){\n    init();\n    while(cin >> n ,n){\n\tsolve();\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n\nstatic int so[10001],hyo[1300];\n\nint main(){\n\tint i,j,k,n,m;\n\t\n\tso[1]=1;\n\tfor(i=2;i*i<=10000;i++){\n\t\tfor(j=2*i;j<=10000;j+=i){\n\t\t\tso[j]=1;\n\t\t}\n\t}\n\thyo[0]=0;\n\tj=0;\n\tfor(i=1;i<=10000;i++){\n\t\tif(!so[i]){\n\t\t\t++j;\n\t\t\thyo[j]=hyo[j-1]+i;\n\t\t}\n\t}\n\tk=j;\n\tprintf(\"%d\\n\",k);\n\twhile(0<=scanf(\"%d\",&n)){\n\t\tif(n==0)break;\n\t\t\n\t\tm=0;\n\t\t\n\t\tfor(i=0;i<k;++i){\n\t\t\tfor(j=i+1;j<=k;++j){\n\t\t\t\tif(hyo[j]-hyo[i]==n)++m;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",m);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-8;\nconst int inf=1e8;\nint main(){\n\tint sosu[10010]={1,1,0};\n\tfor(int i=2;i<10010;i++)if(sosu[i]==0)\n\tfor(int j=i*2;j<10010;j+=i)sosu[j]=true;\n\t\n\tvi dp(1);\n\trep(i,10010)if(sosu[i]==0)dp.pb(i);\n\trep(i,dp.size())dp[i+1]+=dp[i];\n\tmap<int,int>m;\n\trep(i,dp.size())loop(j,i+1,dp.size())m[dp[j]-dp[i]]++;\n\tint n;\n\twhile(cin>>n,n){\n\t\tcout<<m[n]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint primes[1230] = { 2, 3 };\n\nint count = 0;\n\nvoid gen_primes(void)\n{\n\n\tint prime_count = 2;\n\tint i, j, flag;\n\tfor (i = 5; i < 10000; i += 2) {\n\t\tfor (j = 0, flag = 1; primes[j] * primes[j] <= i; j++)\n\t\t\tif (i % primes[j] == 0)\n\t\t\t\tflag = 0;\n\t\tif (flag) {\n\t\t\tprimes[prime_count] = i;\n\t\t\tprime_count++;\n\t\t}\n\t}\n\treturn;\n}\n\nvoid calc(int N, int i)\n{\n\tif (i < 0)\n\t\treturn;\n\tif (N - primes[i] == 0)\n\t\tcount++;\n\telse if (N - primes[i] > 0)\n\t\tcalc(N - primes[i], i - 1);\n\telse\n\t\treturn;\n\treturn;\n}\n\nint main(void)\n{\n\tgen_primes();\n\tint N, i, k;\n\tfor (;;) {\n\t\tcin >> N;\n\t\tif (N == 0)\n\t\t\treturn 0;\n\t\tfor (i = 0; i < 1230; i++)\n\t\t\tif (N == primes[i]) {\n\t\t\t\tcount++;\n\t\t\t\tk = i - 1;\n\t\t\t\tbreak;\n\t\t\t} else if (N < primes[i]) {\n\t\t\t\tk = i - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tfor (i = k; i >= 0; i--)\n\t\t\tcalc(N, i);\n\t\tcout << count << endl;\n\t\tcount = 0;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <algorithm>\n#include <iostream>\n#include <stack>\n#include <vector>\n#include <math.h>\n#include <queue>\n\nusing namespace std;\n\n#define NUM 11000\n\nint main(){\n\tint table[NUM],limit,numTable[10001] = {0};\n\n\tfor(int i=0; i < NUM;i++)table[i] = 1;\n\ttable[0] = 0;\n\ttable[1] = 0;\n\n\tlimit = sqrt(NUM);\n\n\tfor(int i=2;i<=limit;i++){\n\t\tif(table[i] == 1){\n\t\t\tfor(int k=2*i;k < NUM; k += i){\n\t\t\t\ttable[k] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint index = 0,primeTable[1230];\n\n\tfor(int i = 2; i <= 9997; i++){\n\t\tif(table[i] == 1)primeTable[index++] = i;\t//?´???°????¨????\n\t}\n\n\tint sum;\n\tfor(int left = 0; left <= index-1; left++){ //??????????????????\n\t\tfor(int div = 0; left + div <= index-1; div++){ //?????????????¶?????´???°????????°????????????\n\t\t\tsum = 0;\n\t\t\tfor(int p = 0; p <= div; p++){\n\t\t\t\tsum += primeTable[left+p];\n\t\t\t}\n\t\t\tif(sum <= 10000)numTable[sum]++;\n\t\t}\n\t}\n\n\tint n;\n\n\twhile(true){\n\t\tscanf(\"%d\",&n);\n\t\tif(n == 0)break;\n\n\t\tprintf(\"%d\\n\",numTable[n]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <cassert>\n#include <queue>\n#include <set>\n#include <map>\n#include <valarray>\n#include <bitset>\n#include <stack>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<29;\n\nint table[10001];\nint main() {\n  vector<int> prime(10000);\n  for (int i=2; i<10000; ++i) prime[i] = i;\n  for (int i=2; i*i<10000; ++i)\n    if (prime[i])\n      for (int j=i*i; j<10000; j+=i)\n        prime[j] = 0;\n  prime.erase(remove(ALL(prime),0), prime.end());\n  REP(i, prime.size()) {\n    int sum = 0;\n    for (int j=i; j<prime.size(); ++j) {\n      sum += prime[j];\n      //cout << j << \" \" << sum << endl;\n      if (sum>10000) break;\n      table[sum]++;\n    }\n  }\n  int n;\n  while(cin >> n,n)\n    cout << table[n] << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<math.h>\n#include<queue>\nusing namespace std;\nint p[1229];\nvoid init(){\n    int c=0;\n    for(int i=2;i<=10000;i++){\n        bool flag=true;\n        for(int j=2;j<=sqrt(i);j++){\n            if(i%j==0){\n                flag=false;\n                break;\n            }\n        }\n        if(flag){\n            p[c]=i;\n            c++;\n        }\n    }\n}\nint main(){\n    init();\n    while(true){\n        int n,ans=0;\n        scanf(\"%d\",&n);\n        if(n==0) return 0;\n        queue<int> q;\n        int c=0;\n        for(int i=0;i<1229;i++){\n            q.push(p[i]);\n            c+=p[i];\n            while(c>n&&!q.empty()){\n                c-=q.front();\n                q.pop();\n            }\n            if(c==n) ans++;\n        }\n        printf(\"%d\\n\",ans);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;int p[10001],M=10001,i,j,c;vector<int>s(1,0);main(){for(i=1;++i<M;)for(j=i+i;j<M;j+=i)p[j]=1;for(i=1;++i<M;)if(!p[i])s.push_back(i+s.back());for(;cin>>j,j;cout<<c<<endl){vector<int>::iterator t=s.begin();for(c=0;t!=s.end();t++)c+=count(t,s.end(),*t+j);}}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nbool is_prime[10001];\nint prime[10001];\nint main() {\n\tmemset(is_prime, 1, sizeof(is_prime));\n\tis_prime[0] = is_prime[1] = false;\n\tint p = 1;\n\tfor (int i = 2; i <= 10000; i++) {\n\t\tif (is_prime[i]) {\n\t\t\tprime[p++] = prime[p - 1] + i;\n\t\t\tfor (int j = i * 2; j <= 10000; j += i)is_prime[j] = false;\n\t\t}\n\t}\n\tmap<int, int>mp;\n\tfor (int i = 0; i < p; i++) {\n\t\tfor (int j = i + 1; j < p&&prime[j] - prime[i] <= 10000; j++) {\n\t\t\tmp[prime[j] - prime[i]]++;\n\t\t}\n\t}\n\tint n;\n\twhile (scanf(\"%d\", &n), n)printf(\"%d\\n\", mp[n]);\n}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<set>\n#include<list>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<complex>\n#include<cstdlib>\n#include<cstring>\n#include<numeric>\n#include<sstream>\n#include<iostream>\n#include<algorithm>\n#include<functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\n\nconst int MAX_N =10010;\nint prime[MAX_N];//i番目の素数\nbool is_prime[MAX_N+1];//is_prime[i]がtrueならiは素数\n\n//n以下の素数の数を返す\nint sieve(int n){\n\tint p = 0;\n\tfor(int i = 0;i <=n;i++){\n\t\tis_prime[i] =true;\n\t}\n\tis_prime[0] = false;\n\tis_prime[1] = false;\n\tfor(int i = 2;i <=n;i++){\n\t\tif(is_prime[i]){\n\t\t\tprime[p++] = i;\n\t\t\tfor(int j = 2*i;j <=n;j +=i){\n\t\t\t\tis_prime[j] =false;\n\t\t\t}\n\t\t}\n\t}\n\treturn p;\n}\nint n;\nint main(){\n\tint kkkk = sieve(10000);\n\twhile(cin>>n){\n\t\tif(n==0){\n\t\t\tbreak;\n\t\t}\n\t\tint s = 0;\n\t\tint t = 0;\n\t\tint sum = 2;\n\t\tint ans = 0;\n\t\twhile(prime[t]<=n&&s<=t){\n\t\t\tif(sum > n){\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t\tif(sum <n){\n\t\t\t\tsum +=prime[++t];\n\t\t\t}\n\t\t\tif(sum ==n){\n\t\t\t\tans++;\n\t\t\t\tsum -=prime[s++];\n\t\t\t}\n\t\t}\n\t\tcout <<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n#include<stack>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\ntypedef vector<string> vstring;\ntypedef vector<pint> vpint;\n\nstruct Edge{int to,from,cost;};\n\n#ifdef DEBUG\n#define debug cout\n#else\nstringstream __ss__;\n#define debug __ss__\n#endif\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) debug << *i << \" \"; debug << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repd(i,n) for(int i=(n)-1;i>=0;i--)\n#define repn(i,m,n) for(int i=(m);i<=(n);++i)\n#define repnd(i,m,n) for(int i=(n)-1;i>=(m);i--)\n#define rep0(i,n) for(i=0;i<(n);++i)\n#define all(n) n.begin(),n.end()\n#define sz(n) ((int)(n).size())\n#define IL for(;;)\n#define MP make_pair\n#define PB push_back\n#define SS stringstream\n#define X second\n#define Y first\n#define PUTLINE debug<<\"LINE:\"<<__LINE__<<endl;\n\nconst int INF = 2147483647/3;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\n\nconst int dx[]={1,-1,0,0,1,-1,1,-1,0};\nconst int dy[]={0,0,1,-1,1,-1,-1,1,0};\n\nvint prime;\n\nint main() {\n\tfor(int i=2;i<11111;++i){\n\t\tint j;\n\t\tfor(j=2;j*j<=i;++j)if(i%j==0)break;\n\t\tif(j*j<=i)continue;\n\t\tprime.PB(i);\n\t}\n\tIL{\n\t\tint n=in();\n\t\tif(n==0)break;\n\t\tint a=0,b=0,sum=0,res=0;\n\t\tfor(;prime[b]<=n;++b){\n\t\t\tsum+=prime[b];\n\t\t\twhile(sum>n){\n\t\t\t\tsum-=prime[a++];\n\t\t\t}\n\t\t\tif(sum==n){\n\t\t\t\t++res;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tcout<<res<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n\nint main(void){\n\tbool isPrime[10010];\n\tstd::vector<int> prime,input;\n\tint i,j,k,ans;\n\n\tfor(bool b : isPrime) b=true;\n\tfor(i=2;i<10010;++i){\n\t\tfor(j=i*2;j<10010;j+=i) isPrime[j]=false;\n\t}\n\tfor(i=2;i<10010;++i){\n\t\tif(isPrime[i]) prime.push_back(i);\n\t}\n\n\twhile(true){\n\t\tstd::cin >> i;\n\t\tif(i==0) break;\n\t\tinput.push_back(i);\n\t}\n\n\tfor(int in : input){\n\t\tans=0;\n\t\tfor(i=0;true;++i){\n\t\t\tif(prime[i]>in) break;\n\t\t\tk=in;\n\t\t\tfor(j=i;true;++j){\n\t\t\t\tk-=prime[j];\n\t\t\t\tif(k<0) break;\n\t\t\t\tif(k==0) ++ans;\n\t\t\t}\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nint main(){\n  int num;\n\n  while(cin>>num,num){\n    if(num<2){\n      cout << 0 << endl;\n      continue;\n    }\n    if(num==2||num==3){\n      cout << 1 << endl;\n      continue;\n    }\n    vector<int> prime;\n    prime.push_back(2);\n    prime.push_back(3);\n    for(int i=4;i<=num;i++){\n      for(int j=2;j<=(int)sqrt(i);j++){\n        if(i%j==0) break;\n        if(j==(int)sqrt(i)) prime.push_back(i);\n      }\n    }\n\n    int sum=0,count=0;\n    for(int i=0;i<prime.size();i++){\n      sum+=prime[i];\n      if(sum>num){\n        prime.erase(prime.begin());\n        sum=0;\n        i=0;\n      }else if(sum==num){\n        prime.erase(prime.begin());\n        count++;\n        sum=0;\n        i=0;\n      }\n    }\n\n    cout << count << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\nint prime[2000];\nint main(){\n\tint top=0;\n\tfor(int i=2;i<10000;i++){\n\t\tbool ok=true;\n\t\tfor(int j=0;j<top;j++)if(i%prime[j]==0)ok=false;\n\t\tif(ok){\n\t\t\tprime[top]=i;\n\t\t\ttop++;\n\t\t}\n\t}\n\tint n;\n\twhile(true){\n\t\tcin>>n;\n\t\tif(n==0)break;\n\t\tint ans=0;\n\t\tfor(int i=0;i<top;i++){\n\t\t\tint cnt=prime[i];\n\t\t\tint k=i+1;\n\t\t\twhile(true){\n\t\t\t\tif(cnt==n)ans++;\n\t\t\t\tif(cnt>=n)break;\n\t\t\t\tif(k==top)break;\n\t\t\t\tcnt+=prime[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nusing namespace std;\n\nbool p[100010];\n\nvoid prime(){\n    fill(p, p+100010, true);\n    p[0] = p[1] = false;\n    for(int i=0; i < 100010; i++){\n        if(!p[i]) continue;\n        for(int j=i+i; j <= 100010; j += i) p[j] = false;\n    }\n}\n\nint main(){\n    prime();\n    int n;\n    while(cin >> n, n){\n        int ans = 0;\n        for(int i=0; i <= n; i++){\n            if(p[i]){\n                int sum = 0;\n                for(int j=i; ; j++){\n                    if(p[j]){\n                        sum += j;\n                        if(sum == n){ans++; break;}\n                        else if(n < sum) break;\n                    }\n                }\n            }\n        }\n        cout << (ans==100000?0:ans) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\nbool is_prime(int n){\n\tif(n <= 1) return false;\n\tif(n == 2) return true;\n\tif(n % 2 == 0) return false;\n\tfor(int i = 3; i * i <= n; i++){\n\t\tif(n % i == 0) return false;\n\t}\n\treturn true;\n}\nint main(){\n\tint n;\n\tvector<int> prime_numbers;\n\tfor(int i = 1; i < 10000; i++){\n\t\tif(is_prime(i)) prime_numbers.push_back(i);\n\t}\n\tvector<ll> cumulative_sum;\n\tll sum = 0;\n\tfor(int i = 0; i < prime_numbers.size(); i++){\n\t\tcumulative_sum.push_back(sum);\n\t\tsum += prime_numbers[i];\n\t}\n\tcumulative_sum.push_back(sum);\n\tfor(;;){\n\t\tcin >> n;\n\t\tif(n == 0) break;\n\t\tint ans = 0;\n\t\tfor(int i = 0; i < cumulative_sum.size(); i++){\n\t\t\tfor(int j = 0; j <= i; j++){\n\t\t\t\tif(cumulative_sum[i] - cumulative_sum[j] == n) ans++;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\n\nint main(){\n  int n;\n  bool bprime[10001];\n  fill(bprime, bprime + 10001, true);\n  vector<int> prime;\n  FOR(i,2,10001){\n    if(bprime[i]){\n      for(int j = i * i; j < 10001; j+=i) bprime[j] = false;\n      prime.push_back(i);\n    }\n  }\n  int count[10001] = {};\n  FORIT(it, prime){\n    int t = 0;\n    for(vector<int>::iterator it2 = it; it2 != prime.end(); it2++){\n      t += *it2;\n      if(t > 10000) break;\n      count[t]++;\n    }\n  }\n  while(cin>>n,n){\n    cout<<count[n]<<endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nint main(){\n  int num;\n\n  while(cin>>num,num){\n    if(num<2){\n      cout << 0 << endl;\n      continue;\n    }\n    if(num==2||num==3){\n      cout << 1 << endl;\n      continue;\n    }\n    vector<int> prime;\n    prime.push_back(2);\n    prime.push_back(3);\n    for(int i=4;i<=num;i++){\n      for(int j=2;j<=(int)sqrt(i);j++){\n        if(i%j==0) break;\n        if(j==(int)sqrt(i)) prime.push_back(i);\n      }\n    }\n\n    int sum=0,count=0;\n    for(int i=0;i<prime.size();i++){\n      sum+=prime[i];\n      if(sum>num){\n        prime.erase(prime.begin());\n        sum=0;\n        i=0;\n      }else if(sum==num){\n        prime.erase(prime.begin());\n        count++;\n        sum=0;\n        i=0;\n      }\n    }\n\n    cout << count << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<vector>\n#include<queue>\n#include<iostream>\n\nusing namespace std;\n\nint main() {\n  int numbers[10010];\n  vector<int> prime_number;\n  int num, sum = 0;\n  for(int i = 2; i <= 10000; i++) numbers[i-2] = i;\n  for(int i = 2; i <= 10000; i++) {\n    int p = numbers[i-2];\n    if(p != 0) {\n      for(int j = i+1; j <= 10000; j++) if(numbers[j-2]%p == 0) numbers[j-2] = 0;\n    }\n  }\n  for(int i = 2; i <= 10000; i++) {\n    if(numbers[i-2] != 0) prime_number.push_back(numbers[i-2]);\n  }\n  while(true) {\n    int ans = 0;\n    sum = 0;\n    scanf(\"%d\", &num);\n    if(num == 0) break;\n    queue<int> q;\n    int i = 0;\n    do {\n      if(sum < num) {\n\tq.push(prime_number[i]);\n\tsum += prime_number[i];\n\ti++;\n      }\n      else if(sum > num) {\n\tsum -= q.front();\n\tq.pop();\n      }\n      else {\n\tans++;\n\tsum -= q.front();\n\tq.pop();\n\tq.push(prime_number[i]);\n\tsum += prime_number[i];\n\ti++;\n      }\n    }while(prime_number[i-1] <= num || i <= prime_number.size()-1);\n    printf(\"%d\\n\", ans);\n  }\n\n  return 0;\n}\n    \n\t"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\nvector<int> Prime_Num;\n\nint makePrimeQ(){\n  int N = 10000;\n  bool prime[N];\n\n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define DEB 0\n#define all(x) x.begin(), x.end()\n\nint dp[10001],sz;\nint primes[10001];\nbool check[10001];\n\nvoid make_prime(){\n  check[0]=check[1]=true;\n  for(int i=2; i*i<=10000; i++){\n    if( !check[i] ){\n      for(int j=i*2; j<=10000; j+=i){\n\tcheck[j] = true;\n      }\n    }\n  }\n  primes[sz++] = 2;\n  for(int i=3; i<=10000; i+=2){\n    if( !check[i] ){\n      primes[sz++] = i;\n    }\n  }\n}\n\nint main(){\n  int n;\n  make_prime();\n  \n  rep(i,sz){\n    int sum = primes[i];\n    dp[sum]++;\n    for(int j=i+1; j<sz && sum+primes[j]<=10000; j++){\n      sum += primes[j];\n      dp[sum]++;\n    }\n  }\n\n  while(scanf(\"%d\",&n),n){\n    printf(\"%d\\n\",dp[n]);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint q,l;\nvoid prime(int x)\n{\n    long long int i,j,count=0;\n    bool visited[x];\n    fill(visited,visited+x,false);\n    for(i=2;i<=sqrt(x);i++)\n    {\n        if(!visited[i])\n        {\n            for(j=2*i;j<=x;j+=i)\n            {\n                if(!visited[j])\n                    visited[j]=true;\n            }\n        }\n    }\n    long long int sum=0;\n    vector<int>v;\n    v.erase(v.begin(),v.end());\n    for(i=2;i<=x;i++)\n    {\n        if(!visited[i])\n            v.push_back(i);\n    }\n    for(i=0;i<v.size();i++)\n    {\n        sum=v[i];\n        for(j=i+1;j<v.size();j++)\n        {\n            sum+=v[j];\n            if(sum==x)\n                {\n                    count++;\n                    break;\n                }\n            else if(sum>x)\n                break;\n        }\n    }\n    if(!visited[x])\n        count+=1;\n    cout<<count;\n}\nint main()\n{\n    int n;\n    cin>>n;\n    while(n!=0)\n    {\n        prime(n);\n        l++;\n        cin>>n;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdlib>\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<set>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int MAXN = (int) 1e5 + 10;\nconst int INF = (int) 0x3f3f3f3f;\ntypedef long long LL;\n\nint N;\nint prime[MAXN],pcnt;\nint Min_Factor[MAXN];\n\nvoid Init(){\n    for(int i=2;i<=10000;i++){\n        if(!Min_Factor[i]){\n            prime[++pcnt]=i;\n            Min_Factor[i]=i;\n        }\n        for(int k=1;k<=pcnt&&prime[k]*i<=10000;k++){\n            int x=prime[k]*i;\n            Min_Factor[x]=prime[k];\n        }\n    }\n}\n\nvoid work(){\n    Init();\n    while(~scanf(\"%d\",&N)&&N){\n        int l=1,r=1;\n        int s=0,ans=0;\n        while(l<=pcnt||r<=pcnt){\n            while(r<=pcnt&&s<N) s+=prime[r++];\n            if(s<N) break;\n            if(s==N) ans++;\n            s-=prime[l++];\n        }\n        printf(\"%d\\n\",ans);\n    }\n}\n\nint main(){\n#ifdef NNever\n//    freopen(\"data.in\",\"r\",stdin);\n//    freopen(\"out.txt\",\"w\",stdout);\n#endif // NNever\n    work();\n    return 0;\n}\n\n\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <algorithm>\n#include <iostream>\n#include <stack>\n#include <vector>\n#include <math.h>\n#include <queue>\n\nusing namespace std;\n\n#define NUM 11000\n\nint main(){\n\tint table[NUM],limit,numTable[10001] = {0};\n\n\tfor(int i=0; i < NUM;i++)table[i] = 1;\n\ttable[0] = 0;\n\ttable[1] = 0;\n\n\tlimit = sqrt(NUM);\n\n\tfor(int i=2;i<=limit;i++){\n\t\tif(table[i] == 1){\n\t\t\tfor(int k=2*i;k < NUM; k += i){\n\t\t\t\ttable[k] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint index = 0,primeTable[1230];\n\n\tfor(int i = 2; i <= 9997; i++){\n\t\tif(table[i] == 1)primeTable[index++] = i;\t//?´???°????¨????\n\t}\n\n\tint sum;\n\tfor(int left = 0; left <= index-1; left++){ //??????????????????\n\t\tfor(int div = 0; left + div <= index-1; div++){ //?????????????¶?????´???°????????°????????????\n\t\t\tsum = 0;\n\t\t\tfor(int p = 0; p <= div; p++){\n\t\t\t\tsum += primeTable[left+p];\n\t\t\t}\n\t\t\tif(sum <= 10000)numTable[sum]++;\n\t\t\telse{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tint n;\n\n\twhile(true){\n\t\tscanf(\"%d\",&n);\n\t\tif(n == 0)break;\n\n\t\tprintf(\"%d\\n\",numTable[n]);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint q;\nvoid prime(int x)\n{\n    long long int i,j,count=0;\n    bool visited[x];\n    fill(visited,visited+x,false);\n    for(i=2;i<=sqrt(x);i++)\n    {\n        if(!visited[i])\n        {\n            for(j=2*i;j<=x;j+=i)\n            {\n                if(!visited[j])\n                    visited[j]=true;\n            }\n        }\n    }\n    long long int sum=0;\n    vector<int>v;\n    v.erase(v.begin(),v.end());\n    for(i=2;i<=x;i++)\n    {\n        if(!visited[i])\n            v.push_back(i);\n    }\n    for(i=0;i<v.size();i++)\n    {\n        for(j=i;j<v.size();j++)\n        {\n            sum+=v[j];\n            if(sum==x)\n                {\n                    count++;\n                    break;\n                }\n            else if(sum>x)\n                break;\n        }\n        sum=0;\n    }\n    cout<<count<<endl;\n}\nint main()\n{\n    int n;\n    cin>>n;\n    while(n!=0)\n    {\n        prime(n);\n        cin>>n;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<vector>\nusing namespace std;\n#define rep(i, j) for(int i = 0; i < j; i++)\nconst int MAX_N = 10010;\n\nmap<int, int> m;\nint dx[MAX_N][MAX_N];\nbool flg[MAX_N];\nvector<int> prime;\n\nvoid make_prime(){\n    flg[0] = true; flg[1] = true;\n    rep(i, MAX_N){\n        if(flg[i]) continue;\n        prime.push_back(i);\n        for(int j = i; j < MAX_N; j += i) flg[j] = true;\n    }\n}\n\nvoid cnt_prime(){\n    rep(i, prime.size()){\n        int sum = 0;\n        for(int j = i; j < prime.size(); j++){\n            sum += prime[j];\n            m[sum]++;\n        }\n    }\n}\n\nint main(){\n    make_prime(); cnt_prime();\n    int n;\n    while(cin >>n && n) cout <<m[n] <<endl;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//Shunji Lin 08-144505\n\n#include <iostream>\n#include <queue>\n#include <cstdlib>\n#include <vector>\n\nusing namespace std;\n\n\nint main() {\n  // create a vector to store inputs\n  vector<int> inputs;\n  int n_inputs = 0; // number of inputs\n  int max_prime = 0; // max prime (to generate vector of prime numbers)\n  int input;\n  while (cin >> input) { // read input\n    if (input == 0) break;\n    if (input > max_prime) max_prime = input;\n    ++n_inputs;\n    inputs.push_back(input);\n  }\n\n  //create bool of prime numbers (index)\n  vector<bool> primes_bool(max_prime + 1, true); \n\n\n  //Sieve of Eratosthenes (algorithm for generating prime numbers)\n  //https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n  \n  int cur_prime = 2; // first prime\n  \n  while (cur_prime <= max_prime) {\n    if (primes_bool[cur_prime] == true) { // if prime\n      for (int l = cur_prime * 2; l <= max_prime; l += cur_prime) { \n\tprimes_bool[l] = false; // set all greater multiples to false (not prime)\n      }\n    }\n    ++cur_prime;\n  }\n\n  //solve for each inputs\n  for (int i = 0; i < n_inputs; ++i) {\n    queue<int> primes_Q; // queue of primes up to value of input\n    int cur_input = inputs[i];\n    for (int j = 2; j <= cur_input; ++j) {\n      if (primes_bool[j] == true) { //if prime\n\tprimes_Q.push(j);\n      }\n    }\n    \n    queue<int> sum_Q; //queue to track sum of consequetive primes\n\n    int count = 0; //count of sums\n    int cur_sum = 0; //dynamic sum\n\n    while (true) {\n      if (cur_sum == cur_input) {\n\t++count;\n\tcur_sum -= sum_Q.front();\n\tsum_Q.pop();\n      } else if (cur_sum < cur_input) {\n\tif (primes_Q.empty()) break; // terminate\n\tcur_sum += primes_Q.front();\n\tsum_Q.push(primes_Q.front());\n\tprimes_Q.pop();\n      } else if (cur_sum > cur_input) {\n\tcur_sum -= sum_Q.front();\n\tsum_Q.pop();\n      }\n    }\n    cout << count << endl;\n  }\n}\n    "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main(){\n  int n;\n  int pr[10000] = {1,1}, ans[10001] = {0};\n  vector<int> prime;\n\n  for(int i=2; i<10000; i++){\n    if(pr[i] == 0)\n      prime.push_back(i);\n    for(int j=i*i; j<10000; j+=i)\n      pr[j] = 1;\n  }\n  \n  for(int i=0; i<prime.size(); i++){\n    int xx = 0;\n    for(int j=i; j>=0; j--){\n      xx += prime[j];\n      if(xx > 10000)\n\tbreak;\n      ans[xx]++;\n    }\n  }\n\n  while(cin >> n && n)\n    cout << ans[n] << endl;\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<vector>\n#define N 10000\n\nusing namespace std;\n\nvector<int> MakePrimeNumber(void);\n\nint main(){\n  int i, j, n, count, sum;\n  vector<int> data;\n\n  data = MakePrimeNumber();\n\n  while(1){\n    cin >> n;\n    if(n == 0) break;\n\n    for(i=0, count=0; data[i]<=n && i<data.size(); ++i){\n      for(j=i, sum=0; j<data.size(); ++j){\n\tsum += data[j];\n\tif(sum == n){\n\t  ++count;\n\t  break;\n\t}else if(sum > n){\n\t  break;\n\t}\n      }\n    }\n\n    cout << count << endl;\n  }\n  return 0;\n}\n\nvector<int> MakePrimeNumber(void){\n  int i, j, k;\n  vector<int> data;\n\n  data.push_back(2);\n  data.push_back(3);\n  for(i=5; i<=N; i+=2){\n    for(j=1, k=0; data[j]<=sqrt(i); ++j){\n      if(i%data[j] == 0){\n        k = 1;\n        break;\n      }\n    }\n    if(k == 0) data.push_back(i);\n  }\n  return data;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\n#define N 10000\n\nusing namespace std;\n\nint main(){\n\n  int n;\n  int sum=0;\n  int count=0;\n  int prime[N];\n\n  for(int i = 0;i < N; i++){\n    prime[i] = 1;\n  }\n  prime[0]=0;\n\n  for(int i = 1;i < 100; i++){\n    if(prime[i] == 1){\n      for(int j = (i+1); (i+1)*j <= N; j++){\n\tprime[(i+1)*j - 1] = 0;\n      }\n    }\n  }\n\n  /*\n  for(int i = 0;i < 60; i++){\n   // cout << i << \":\";\n    if(prime[i] == 1){\n      cout << i+1 << \"  \";\n    }\n  }\n  cout << endl;\n  */\n\n  while(cin >> n){\n    if(n == 0)break;\n    sum = 0;    \n\n    for(int i = n-1; i >= 0; i--){\n      sum = 0;\n      for(int j = i; j >= 0; j--){\n\tif(prime[i] == 0){break;}\n\tif(prime[j] == 1){\n\t  sum += j+1;\n\t  //cout << \"prime: \"<< j+1 << \" \";\n\t  if(sum == n){\n\t    //cout << \"hit!!\" << sum << endl;\n\t    sum = 0;\n\t    count++;\n\t    break;\n\t  }\n\t  if(sum >= n){\n\t    //cout << endl;\n\t    sum = 0;\n\t    break;\n\t  }\n\t}\n      }\n    }\n\n\n    cout << count << endl;\n    count = 0;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, s, n) for(int i = s; i < (int)n; ++i)\n#define per(i, n) for(int i = n; i >= 0; i--)\n#define ROF(i, s, n) for(int i = s; i >= (int)n; i--)\n#define FORIT(i, A) for (auto i : A)\n#define PRINT(x) cout << (x) << \"\\n\"\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define MP make_pair\n#define PB push_back\n#define EACH(i, n) for (__typeof((n).begin()) i = (n).begin(); i != (n).end(); ++i)\n#define SZ(a) int((a).size())\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n#define NCLR(a) memset((a), -1 ,sizeof(a))\n#define sq(n) (n) * (n)\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef priority_queue<int> maxpq;\ntypedef priority_queue< int, vector<int>, greater<int> > minpq;\ntypedef complex<double> Point;\nstatic const double EPS = 1e-10;\nstatic const double PI = acos( -1.0 );\nstatic const int mod = 1000000007;\nstatic const int INF = 1 << 29;\nstatic const LL LL_INF = 1ll << 60;\nstatic const int dx[] = { -1, 0, 1, 0, 1, -1, 1, -1 };\nstatic const int dy[] = { 0, -1, 0, 1, 1, 1, -1, -1 };\n\n#ifdef WIN32\n#include \"gtest/gtest.h\"\n#pragma comment (lib, \"gtest.lib\")\n#define dump(x) cerr << #x << \" = \" << (x) << \"\\n\"\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << \"\\n\"\n#else\n#define dump(x)\n#define debug(x)\n#endif\n\nint n;\n#define severalTestCases\nstatic VI primes( 1, 2 );\nstatic bool is_prime[10001];\n\nbool input() {\n  cin >> n;\n  return n;\n}\n\nstatic int dp[ 1229 ][ 10001 ][ 2 ];\n\nint dfs( int now, int sum, bool check ) {\n  if ( !sum ) {\n    return 1;\n  }\n  if ( now == primes.size() || sum < primes[ now ] ) {\n    return 0;\n  }\n  if ( !dp[ now ][ sum ][ check ] ) {\n    return dp[ now ][ sum ][ check ];\n  }\n  int res = 0;\n  if ( !check ) {\n    res += dfs( now + 1, sum, false );\n  }\n  res += dfs( now + 1, sum - primes[ now ], true );\n  return dp[ now ][ sum ][ check ] = res;\n}\n\nint solve(int _n) {\n  static bool check = true;\n  if ( check ) {\n    NCLR( is_prime );\n    for ( int i = 3; i * i <= 10000; i += 2 ) {\n      if ( is_prime[ i ] ) {\n        for ( int j = i * i; j <= 10000; j += i * 2 ) {\n          is_prime[ j ] = false;\n        }\n      }\n    }\n    for ( int i = 3; i <= 10000; i += 2 ) {\n      if ( is_prime[ i ] ) {\n        primes.push_back( i );\n      }\n    }\n    NCLR( dp );\n    check = false;\n  }\n  return dfs( 0, n, false );\n}\n\nvoid putsanswer() {\n  cout << solve( n ) << \"\\n\";\n}\n\nint main( int argc, char **argv ) {\n//#ifndef WIN32\n#ifdef severalTestCases\n  while ( input() ) {\n#else\n  input();\n  putsanswer();\n#endif\n  /*#else\n  ::testing::InitGoogleTest( &argc, argv );\n  return RUN_ALL_TESTS();    // gtest \n  #endif*/\n#ifdef severalTestCases\n  putsanswer();\n  }\n#endif\n  return 0;\n}\n\n/*#ifdef WIN32\nTEST( testcase, solve ) {\n}\n#endif*/"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n\nstatic int so[10001],hyo[1000];\n\nint main(){\n\tint i,j,k,n,m;\n\t\n\tso[1]=1;\n\tfor(i=2;i*i<=10000;i++){\n\t\tfor(j=2*i;j<=10000;j+=i){\n\t\t\tso[j]=1;\n\t\t}\n\t}\n\thyo[0]=0;\n\tj=0;\n\tfor(i=1;i<=10000;i++){\n\t\tif(!so[i]){\n\t\t\t++j;\n\t\t\thyo[j]=hyo[j-1]+i;\n\t\t}\n\t}\n\tk=j;\n\t\n\twhile(0<=scanf(\"%d\",&n)){\n\t\tif(n==0)break;\n\t\t\n\t\tm=0;\n\t\t\n\t\tfor(i=0;i<k;++i){\n\t\t\tfor(j=i+1;j<=k;++j){\n\t\t\t\tif(hyo[j]-hyo[i]==n)++m;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",m);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//33\n#include<iostream>\n#include<vector>\n\nusing namespace std;\n\nint main(){\n  bool cmp[100000]={true,true};\n  vector<int> prm;\n  for(int i=2;i<100000;i++){\n    if(!cmp[i]){\n      prm.push_back(i);\n      for(int j=2;j*i<100000;j++){\n\tcmp[i*j]=true;\n      }\n    }\n  }\n  for(int n;cin>>n,n;){\n    int ans=0;\n    for(int i=0;prm[i]<=n;i++){\n      int s=prm[i];\n      for(int j=1;s<n;j++){\n\ts+=prm[i+j];\n      }\n      ans+=s==n;\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nint main(){\n  int num;\n\n  while(cin>>num,num){\n    if(num<2){\n      cout << 0 << endl;\n      continue;\n    }\n    if(num==2||num==3){\n      cout << 1 << endl;\n      continue;\n    }\n    vector<int> prime;\n    prime.push_back(2);\n    prime.push_back(3);\n    if(num>4){\n      for(int i=5;i<=num;i++){\n        for(int j=2;j<=(int)sqrt(i);j++){\n          if(i%j==0) break;\n          if(j==(int)sqrt(i)) prime.push_back(i);\n        }\n      }\n    }\n\n    int sum=0,count=0;\n    for(int i=0;i<prime.size();i++){\n      sum+=prime[i];\n      if(sum>num){\n        prime.erase(prime.begin());\n        sum=0;\n        i=0;\n      }else if(sum==num){\n        prime.erase(prime.begin());\n        count++;\n        sum=0;\n        i=0;\n      }\n    }\n\n    cout << count << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// Sum of Consecutive Prime Numbers\n// ??¨????????????????????????????????????????????§?????????\n\n#include <iostream>\n#include <utility>\n#include <string>\n#include <algorithm>\n#include <string>\n#include <queue>\nusing namespace std;\n\nvector<int> Prime_Num;\n\nint makePrimeQ(){\n  int N = 10000;\n  bool prime[N]={true};\n  \n  for(int i=0;i<N;i++) \n    prime[i]=true;\n  for(int i=2;i*i<=N;i++){\n    if(prime[i]){\n      Prime_Num.push_back(i);\n      for(int j=i*i;j<=N;j=j+i) \n        prime[j]=false;\n    }\n  }\n}\nint solve(int num) {\n  int count=0,sum=0,temp=0,i=0;\n  queue<int> Q;\n  bool flag = true;\n  while (Prime_Num[i] <= num){\n    if (flag) {\n      temp = Prime_Num[i];\n      Q.push(temp);\n      sum += temp;\n    }\n    if (sum == num) {\n      count++;\n      sum -= Q.front();\n      Q.pop();\n      flag = true;\n      i++;\n    } else if (sum < num) {\n      flag = true;\n      i++;\n    } else { // sum > num\n      sum -= Q.front();\n      Q.pop();\n      flag = false;\n    }\n  }\n  return count;\n}\n\nint main(){\n  int num;\n  makePrimeQ();\n  while (cin >> num) {\n    if (num == 0)\n      break;\n    cout << solve(num) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int i,j,k;\n  int a[1240];\n  a[0]=0;\n  a[1]=2;\n  k=2;\n  for(i=3;i<10000;i+=2){\n    for(j=3;j<(int)sqrt(i)+1;j+=2){\n      if(i%j==0)\n\tbreak;\n    }\n    if(j>=(int)sqrt(i)+1){\n      a[k]=a[k-1]+i;\n      k++;\n    }\n  }\n  int n;\n  while(cin>>n&&n){\n    int ct=0;\n    j=1229;\n    for(i=1;j-i>-1;i++){\n      for(;j-i>-1&&a[j]-a[j-i]>n;j--);\n      if(j-i>-1&&a[j]-a[j-i]==n)\n\tct++;\n    }\n    cout<<ct<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#define M 10001\nint main()\n{\n  bool isPrime[M]={false,false};\n  for(int i=2;i<M;i++)isPrime[i]=true;\n  for(int i=2;i<M;i++)for(int j=i+i;j<M;j+=i)isPrime[j]=false;\n\n  vector<int>sum;\n  sum.push_back(0);\n  for(int i=2;i<M;i++)if(isPrime[i])sum.push_back( i+sum.back() );\n\n  int n;\n  while(cin>>n,n){\n    int count=0;\n    for(vector<int>::iterator it=sum.begin();it!=sum.end();it++){\n      if( binary_search(it, sum.end(), *it + n) ) count++;\n    }\n    cout<<count<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define dump(a) (cerr << #a << \" = \" << (a) << endl)\n\n#define REP(i,a,b) for(int i=(a);i < (int)(b); i++)\n#define rep(i,n) REP(i,0,n)\n#define ALL(v) begin(v), end(v)\nconst int MAX = 10010;\nint prime[MAX];\nint main(){\n  int n;\n  for(int i = 0;i < MAX;i++){\n    prime[i] = 1;\n  }\n  prime[0] = 0;\n  prime[1] = 0;\n\n  for(int i = 2;i < MAX;i++){\n    if(prime[i] == 0)continue;\n    for(int j = i*2;j < MAX;j+=i){\n      prime[j] = 0;\n    }\n  }\n\n  while(cin >> n && n){\n    int ans = 0;\n    for(int i = 1;i <= n;i++){\n      int sum = 0;\n      if(!prime[i])continue;\n      for(int j = i;j <= n;j++){\n\tif(prime[j])sum+=j;\n\tif(sum == n){\n\t  ans++;\n\t  break;\n\t}\n\tif(sum > n)break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<cassert>\n#include<sstream>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\ntemplate<int m>\nclass Prime{\n  std::vector<bool> p;\n  std::vector<int> ps;\npublic:\n  Prime(){\n    p = std::vector<bool>(m,true);\n    assert(m>1);\n    p[0]=p[1]=false;\n    for(int i=4;i<m;i+=2)\n      p[i]=false;\n    ps.push_back(2);\n    for(int i=3;i<m;i+=2){\n      if(p[i]){\n        ps.push_back(i);\n        for(int j=i+i;j<m;j+=i)\n          p[j]=false;\n      }\n    }\n  }\n\n  bool isPrime(int n){\n    assert(m>n);\n    return p[n];\n  }\n\n  int operator [] (int n){\n    if(n<ps.size()) return ps[n];\n    else return 0;\n  }\n\n  int size(){\n    return ps.size();\n  }\n};\n\nint main(){\n  int n;\n  Prime<10100> p;\n  while(scanf(\"%d\",&n), n){\n    int sum  = 0;\n    int low  = 0;\n    int high = 0;\n    int ans  = 0;\n    while(p[low] <= n){\n      //printf(\"[%d,%d]: %d (n=%d)\\n\",low,high,sum,n);\n      if(sum == n) ans++;\n      if(sum > n){\n\tsum -= p[low++];\n      }else{\n\tsum += p[high++];\n      }\n    }\n    printf(\"%d\\n\",ans);\n  }\n  return 0;\n}"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>))\nimport Control.Monad (unless)\nimport Data.List (unfoldr)\n\nmain :: IO ()\nmain = do\n  n <- readLn\n  unless (n == 0) $ do\n    print $ solve n\n    main\n\nsolve :: Int -> Int\nsolve n = f 0 0 ls ls\n  where ls = takeWhile (<= n) ps\n        f ct sm [] [] = ct\n        f ct sm (x:xs) [] | sm < n = ct\n                          | sm == n = f (ct+1) (sm-x) xs []\n                          | otherwise = f ct  (sm-x) xs []\n        f ct sm (x:xs) (y:ys) | sm < n = f ct (sm+y) (x:xs) ys\n                              | sm == n = f (ct+1) (sm-x) xs (y:ys)\n                              | otherwise = f ct (sm-x) xs (y:ys)\n\nps :: [Int]\nps = 2 : unfoldr f 3\n  where f x | x == 0 = Nothing\n            | isP x = Just (x, x+2)\n            | otherwise = f (x+2)\n\nisP :: Int -> Bool\nisP x = all ((/=0).(mod x)) . takeWhile ((<= x).(^2)) $ ps\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint sosuu_num;\nint sosuu_sum[10000];\n\nvoid make_sosuu_list(void) {\n\tchar is_sosuu[10001];\n\tint i,j;\n\tfor(i=0;i<=10000;i++)is_sosuu[i]=1;\n\tis_sosuu[0]=is_sosuu[1]=0;\n\tfor(i=2;i<=10000;i++) {\n\t\tif(is_sosuu[i]) {\n\t\t\tfor(j=i+i;j<=10000;j+=i)is_sosuu[j]=0;\n\t\t}\n\t}\n\tsosuu_num=1;\n\tsosuu_sum[0]=0;\n\tfor(i=0;i<=10000;i++) {\n\t\tif(is_sosuu[i]) {\n\t\t\tsosuu_sum[sosuu_num]=sosuu_sum[sosuu_num-1]+i;\n\t\t\tsosuu_num++;\n\t\t}\n\t}\n}\n\nint nibun_tansaku(int start,int end,int searchfor) {\n\tint left,right,mid;\n\tleft=start;right=end-1;\n\twhile(left<=right) {\n\t\tmid=(left+right)/2;\n\t\tif(sosuu_sum[mid]==searchfor)return mid;\n\t\telse if(sosuu_sum[mid]<searchfor)left=mid+1;\n\t\telse right=mid-1;\n\t}\n\treturn -1;\n}\n\nint main(void) {\n\tint query;\n\tint i,result;\n\tmake_sosuu_list();\n\twhile(1) {\n\t\tscanf(\"%d\",&query);\n\t\tif(query==0)break;\n\t\tresult=0;\n\t\tfor(i=0;i<sosuu_num;i++) {\n\t\t\tif(nibun_tansaku(i+1,sosuu_num,query+sosuu_sum[i])>=0) {\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",result);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAX 1001\n\nint flag[MAX];\nint n[10001];\nint p[MAX];\nint pn=0;\nint sum[MAX];\n\nint main()\n{\n    int i,j;\n\n    for(i=2;i<MAX;++i)\n    {\n        for(j=i*2;j<MAX;j+=i)\n        {\n            if(flag[j]==0)\n            flag[j]=1;\n        }\n    }\n\n    for(i=2;i<MAX;++i)\n    if(flag[i]==0)\n    p[pn++]=i;\n\n    sum[0]=p[0];\n    for(i=1;i<MAX;++i)\n    sum[i]=sum[i-1]+p[i];\n\n\n    memset(n,0,sizeof(n));\n    for(i=0;i<MAX;++i)\n    {\n        for(j=i+1;j<MAX;++j)\n        if(sum[j]-sum[i]<10001)\n        n[sum[j]-sum[i]]++;\n    }\n    for(i=0;i<MAX;++i)\n    if(sum[i]-0<10001)\n    n[sum[i]]++;\n\n\n\n    while(scanf(\"%d\",&i))\n    {\n        if(i==0)\n        break;\n\n        printf(\"%d\\n\",n[i]);\n    }\n\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAX_PRIME\t(10000)\n\n\nint prime[MAX_PRIME + 1];\n\nvoid make_prime(void)\n{\n    int i;\n    int j;\n    int n;\n    int c;\n    \n    for (i = 2; i * i <= MAX_PRIME; i++){\n        if (prime[i] == 0){\n            for (j = i * 2; j <= MAX_PRIME; j += i){\n\t\t\t\tprime[j] = 1;\n            }\n        }\n    }\n}\n\t\n\nint main(void)\n{\n\tint n;\n\tint count;\n\tint s;\n\tint i, j;\n\n\tmake_prime();\n\t\n\twhile (1){\n\t\tscanf(\"%d\", &n);\n\t\tif (n == 0){\n\t\t\tbreak;\n\t\t}\n\n\t\tcount = 0;\n\t\tfor (i = 2; i <= n; i++){\n\t\t\tif (prime[i] == 0){\n\t\t\t\ts = 0;\n\t\t\t\tfor (j = i; j<= n; j++){\n\t\t\t\t\tif (prime[j] == 0){\n\t\t\t\t\t\ts += j;\n//printf(\"[%d %d]\", j, s);\n\t\t\t\t\t\tif (s == n){\n\t\t\t\t\t\t\tcount++;\n//printf(\"<-OK \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (s > n){\n//printf(\"<-NG \");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\", count);\n\t}\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "\t#include<iostream>\nusing namespace std;\nint a[10000]={0};\t\nint main(){\n\ta[0]=a[1]=1;\n\tfor(int i=2;i<10000;i++){\n\t\tif(a[i]==0){\n\t\tfor(int j=i*2;j<10000;j+=i)\n\t\t\t\ta[j]=1;\n\t\t}\n\t}\n\tint n=1,c=0;\n\twhile(n!=0){\n\t\tc=0;\n\tcin>>n;\n\tif(a[n]==0)\n\tc++;\n\tfor(int i=n-1;i>0;i--){\n\t\tint s=0;\n\t\tint j=i;\n\t\tif(a[j]==0){\n\t\t\twhile(j>=0 && s<=n){\n\t\t\t\tif(a[j]==0)\n\t\t\t\t\ts+=j;\n\t\t\t\tj--;\n\t\t\t\tif(s==n){\n\t\t\t\t\tc++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<c<<endl;\n}\n}\n\t"
  },
  {
    "language": "C",
    "code": "/*****\nICPC??´???\n1998??´ ??¢?????¢??§??? A??????\n*****/\n#include<stdlib.h>\n#include<stdio.h>\n#include<math.h>\n#define TRUE 0\n#define FALSE 1\n\nint main(void) {\n\tint i;\n\tint j;\n\tint max=(int)pow(2.0,15.0);\n\tint hurui[max];\n\t\n\t/////?´???°?±???????/////\n\tfor(i=0;i<max;i++) {\n\t\thurui[i] = TRUE;\n\t}\n\thurui[0] = FALSE;\n\thurui[1] = FALSE;\n\t\n\tfor(i=2;i<max;i++) {\n\t\tfor(j=2;j<max;j++) {\n\t\t\tif(i*j<max) {\n\t\t\t\thurui[i*j] = FALSE;\n\t\t\t}\n\t\t}\n\t}\n\t/*for(i=0;i<100;i++) {\n\t\tif(hurui[i]==TRUE) printf(\"%d = ?´???°\\n\",i);\n    }*/\n\t/////////////////////\n\t\n\tint input;\n\tint count;\n\tint sum;\n\t\n\twhile(1) {\n\t\tscanf(\"%d\",&input);\n\t\t//printf(\"-%d\\n\", input);\n\t\tif(input==0) break;\n\t\t\n\t\tcount = 0;\n\t\tsum = 0;\n\t\t\n\t\tif(hurui[input] == TRUE) {\n\t\t\tcount++;\n\t\t}\n\t\tfor(i=input-1; i>=2; i--) {\n\t\t\tif(hurui[i] == FALSE) continue;\n\t\t\tsum=i;\n\t\t\tfor(j=i-1; j>=2; j--) {\n\t\t\t\tif(hurui[j] == FALSE) continue;\n\t\t\t\tsum+=j;\n\t\t\t\tif(sum==input) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(sum>input) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\t\n\texit(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <iostream>\n#include <string.h>\nusing namespace std;\n\nint n;\nint count;\nint number[10000];\nint isprime(int a)\n{\n    for(int i=2;i*i<=a;i++)\n    {\n        if(a%i==0)return 0;\n    }\n    return 1;\n}\nvoid prime(int k)\n{\n    int j=0;\n    for(int i=2;i<=k;i++)\n    {\n        if(isprime(i))\n        number[j++]=i;\n\n    }\n    count=j;\n}\nint main()\n{\n    while(cin>>n&&n)\n    {\n\n            int sum;\n            int num=0;\n        memset(number,0,sizeof(number));\n        prime(n);\n        for(int i=0;i<count;i++)\n        {\n             sum=0;\n\n            for(int j=i;j<count;j++)\n            {\n                sum+=number[j];\n                if(sum==n)\n                num++;\n                else\n                if(sum>n)break;\n            }\n        }\n        cout<<num<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#define M 10000\nint main(){\n  int n,i,j,t,r=0,P[M],s,c;\n  char p[M*2]={1,1};\n  for(i=2;i<M;i++){\n    if(p[i])continue;\n    P[r++]=i;\n    for(j=i*i;j<M;j+=i)p[j]=1;\n  }\n  P[r]=M;\n  while(scanf(\"%d\",&n),n){\n    for(t=r=c=s=0;P[t]<M;t++){\n      while(s<n)s+=P[r++];\n      if(s==n)c++;\n      s-=P[t];\n    }\n    printf(\"%d\\n\",c);\n  }\n  return 0;\n}\n  "
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint prime[2000];\nint c;\nint count;\nint isPrime(int n){\n\tint i;\n\tif(n==2)return 1;\n\tif(n==1)return 0;\n\tif(!(n%2))return 0;\n\tfor(i=1;i<c;i++){\n\t\tif(n==prime[i])return 1;\n\t\tif(!(n%prime[i]))return 0;\n\t}\n\tfor(i=prime[c-1];i<n/2;i+=2){\n\t\tif(!(n%i))return 0;\n\t}\n\treturn 1;\n}\nvoid search(int n,int i,int sum){\n\tint j;\n\tif(sum+prime[i]==n){\n\t\tcount++;\n\t\treturn;\n\t}\n\tif(sum+prime[i]>n)return;\n\tsum+=prime[i];\n\tsearch(n,i+1,sum);\n}\nint main(){\n\tint i,n;\n\tprime[0]=2;\n\tprime[1]=3;\n\tprime[2]=5;\n\tprime[3]=7;\n\tprime[4]=11;\n\tc=5;\n\tfor(i=13;i<10000;i+=2){\n\t\tif(isPrime(i)){\n\t\t\tprime[c]=i;\n\t\t\tc++;\n\t\t}\n\t}\n\tfor(;scanf(\"%d\",&n)&&n;){\n\t\tcount=0;\n\t\tfor(i=0;i<c&&prime[i]<=n;i++)search(n,i,0);\n\t\tprintf(\"%dz\\n\",count);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "\n#include<stdio.h>\n\n\nint main() {\n    long int n,q,j,i,k,c;\n\n   \n      long int a[1000000]={0},b[1000000];\n    for(i=2;i<1000000;i++)\n    {\n    if(a[i]!=1)\n    {b[c]=i;\n        c++;\n    \n    for(j=2*i;j<1000000;j=j+i)\n    a[j]=1;\n    }\n    }\n    \n    do\n    {\n        scanf(\"%ld\",&k);\n        q=0;\n        j=0;\n        if(a[k]==0)\n        q=1;\n        \n        n=b[j];\n        while(b[j]<k&&k!=0)\n      { for(i=j+1;i<c&&b[i]<k;i++)\n       {n+=b[i];\n       if(n==k)\n       {q++;\n       break;\n       }\n       }\n       n=b[++j];\n      }\n      if(k!=0)\n     printf(\"%ld\\n\",q);\n    }while(k!=0);\n\t// your code goes here\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#define MAX 10000\nint n;\nint primes[MAX];\nint isPrime(int m){\n\tint i;\n\tif(m<=1 || m!=2&&m%2==0)return 0;\n\tfor(i=3;i*i<=m;i+=2){\n\t\tif(m%i==0)return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint i,j;\n\tint num, sum,ans;\n\tint head,tail;\n\tn=0;\n\tfor(i=2;i<=MAX;i++){\n\t\tif(isPrime(i))primes[n++]=i;\n\t}\n\twhile(scanf(\"%d\",&num)==1&&num){\n\t\tans=0;\n\t\thead=0;\n\t\ttail=0;\n\t\tsum=0;\n\t\twhile(tail<n){\n\t\t\twhile(sum < num && tail<n)sum += primes[tail++];\n\t\t\twhile(num < sum && head<tail)sum -= primes[head++];\n\t\t\tif(num < sum)break;\n\t\t\tif(sum==num){\n\t\t\t\tans++;\n\t\t\t\tsum -= primes[head++];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n\nint main(){\n  int num[1000],i=0,j,k,ans=0,culc;\n  int a[1000];\n  for(i=0;i<1000;i++){\n    a[i]=1;\n  }\n  for(i=2;i<1000;i++){//?´???°?????????????????????0?????\\??????                             \n    for(j=2;(i*j)<1000;j++){//?????°???0?????\\??????                                   \n      a[i*j]=0;\n    }\n  }\n  a[0]=0;\n  a[1]=0;\n  i=0;\n  while(1){\n    scanf(\"%d\",&num[i]);\n    //printf(\"%d?????????%d\",i,num[i]);                                            \n    if(num[i]==0)break;\n    i++;\n    }\n  for(k=0;num[k]!=0;k++){\n    //printf(\"%d?????????%d\\n\",k,num[k]);                                          \n    for(i=1;i<=num[k];i++){//?¶?????????????????????????                                 \n      if(a[i]==1){\n        culc=0;\n        for(j=0;culc<num[k];j++){//?´???°???1??????????¶????                            \n          //printf(\"????¨?%d,??????????????°%d\\n\",culc,num[k]);                        \n          if(culc>num[k])break;\n          if(a[i+j]==1){\n            culc+=i+j;\n            //printf(\"%d?????????%d????????£???\\n\",i+j,culc);                          \n          }\n          }\n          if(culc==num[k]){\n            ans+=1;\n            break;\n          }\n        }\n      }\n    }\n    printf(\"%d\\n\",ans);\n    ans=0;\n  }\n}\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n\nint main(){\n  int num[1000],i=0,j,k,ans=0,culc;\n  int a[1000];\n  for(i=0;i<1000;i++){\n    a[i]=1;\n  }\n  for(i=2;i<1000;i++){//?´???°?????????????????????0?????\\??????                             \n    for(j=2;(i*j)<1000;j++){//?????°???0?????\\??????                                   \n      a[i*j]=0;\n    }\n  }\n  a[0]=0;\n  a[1]=0;\n  i=0;\n  while(1){\n    scanf(\"%d\",&num[i]);\n    //printf(\"%d?????????%d\",i,num[i]);                                            \n    if(num[i]==0)break;\n    i++;\n    }\n  for(k=0;num[k]!=0;k++){\n    //printf(\"%d?????????%d\\n\",k,num[k]);                                          \n    for(i=1;i<=num[k];i++){//?¶?????????????????????????                                 \n      if(a[i]==1){\n        culc=0;\n        for(j=0;culc<num[k];j++){//?´???°???1??????????¶????                            \n          //printf(\"????¨?%d,??????????????°%d\\n\",culc,num[k]);                        \n          if(culc>num[k])break;\n          if(a[i+j]==1){\n            culc+=i+j; \n         if(culc==num[k]){\n            ans+=1;\n            break;\n          }\n        }\n      }\n    }\n    printf(\"%d\\n\",ans);\n    ans=0;\n  }\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 0590\n// @kankichi573\n#include <stdio.h>\n#include <string.h>\n\nchar prime_flag[65536];\n\nint cnt_conj_prime[10000];\n\nint prime256[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,\n67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,\n157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,\n241,251};\n\nmake_furui()\n{\n        int i,j,num;\n        memset(prime_flag,-1,65536);\n        \n        prime_flag[0]=prime_flag[1]=0;\n\n        for(i=0;prime256[i];i++)\n                for(j=2;(num=prime256[i]*j)<65536;j++)\n                {\n                        //printf(\"%d\\n\",num);\n                        prime_flag[num]=0;\n                }\n}\nint next_prime(int n)\n{\n        int i;\n\n        for(i=n+1;i<=11000;i++)\n                if(prime_flag[i])\n                        return(i);\n}\nvoid make_table()\n{\n        int pr,pr2,sum;\n\n        pr=2;\n        while(pr < 10000)\n        {\n                sum = pr2 = pr;\n                printf(\"%d\\n\",sum);\n                while(sum < 10000)\n                {\n                        cnt_conj_prime[sum]++;\n                        pr2 = next_prime(pr2);\n                        sum += pr2;\n                }\n                pr=next_prime(pr);\n        }\n}\nmain()\n{\n        int N,ret;\n        unsigned int num;\n\n        make_furui();\n        make_table();\n        //printf(\">\\n\");\n        while(EOF!=scanf(\"%d\",&N) && N)\n        {\n                ret=cnt_conj_prime[N];\n                printf(\"%d\\n\",ret);\n        }\n        return(0);\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 1257\n// @kankichi573\n#include <stdio.h>\n#include <string.h>\n\nchar prime_flag[65536];\n\nint cnt_conj_prime[10000];\n\nint prime256[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,\n67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,\n157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,\n241,251};\n\nmake_furui()\n{\n        int i,j,num;\n        memset(prime_flag,-1,65536);\n        \n        prime_flag[0]=prime_flag[1]=0;\n\n        for(i=0;prime256[i];i++)\n                for(j=2;(num=prime256[i]*j)<65536;j++)\n                {\n                        //printf(\"%d\\n\",num);\n                        prime_flag[num]=0;\n                }\n}\nint next_prime(int n)\n{\n        int i;\n\n        for(i=n+1;i<=11000;i++)\n                if(prime_flag[i])\n                        return(i);\n}\nvoid make_table()\n{\n        int pr,pr2,sum;\n\n        pr=2;\n        while(pr < 10000)\n        {\n                sum = pr2 = pr;\n                //printf(\"%d\\n\",sum);\n                while(sum < 10000)\n                {\n                        cnt_conj_prime[sum]++;\n                        pr2 = next_prime(pr2);\n                        sum += pr2;\n                }\n                pr=next_prime(pr);\n        }\n}\nmain()\n{\n        int N,ret;\n        unsigned int num;\n\n        make_furui();\n        make_table();\n        //printf(\">\\n\");\n        while(EOF!=scanf(\"%d\",&N) && N)\n        {\n                ret=cnt_conj_prime[N];\n                printf(\"%d\\n\",ret);\n        }\n        return(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint a[10009];\nvector<int> p;\nmap<int,int> m;\n\nvoid sieve()\n{\n    int i,j,t1,t2;\n    for(i=0;i<10003;i++)\n        a[i]=1;\n    a[0]=a[1]=0;\n    for(i=2;i<=10000;i++)\n    {\n        if(a[i]==1)\n        {\n            p.push_back(i);\n            for(j=2*i;j<=10000;j+=i)\n            {\n                a[j]=0;\n            }\n        }\n    }\n    for(i=0;i<p.size();i++)\n    {\n        t1=0;\n        for(j=i;j<p.size();j++)\n        {\n            t1+=p[j];\n            m[t1]++;\n        }\n    }\n    return;\n}\n\n\nint main()\n{\n    int i,j,t1,t2,n,ans;\n    sieve();\n    while(1)\n    {\n        scanf(\"%d\",&n);\n        if(n==0)\n            break;\n        ans=m[n];\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#define MAX 10000\nint n;\nint primes[MAX];\nint isPrime(int m){\n\tint i;\n\tif(m<=1 || m!=2&&m%2==0)return 0;\n\tfor(i=3;i*i<=m;i+=2){\n\t\tif(m%i==0)return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint i,j;\n\tint num, sum,ans;\n\tint head,tail;\n\tn=0;\n\tfor(i=2;i<=MAX;i++){\n\t\tif(isPrime(i))primes[n++]=i;\n\t}\n\twhile(scanf(\"%d\",&num)==1&&num){\n\t\tans=0;\n\t\thead=0;\n\t\ttail=0;\n\t\tsum=0;\n\t\twhile(tail<n){\n\t\t\twhile(sum < num && tail<n)sum += primes[tail++];\n\t\t\twhile(num < sum && head<tail)sum -= primes[head++];\n\t\t\tif(num < sum)break;\n\t\t\tif(sum==num){\n\t\t\t\tans++;\n\t\t\t\tsum -= primes[head++];\n\t\t\t}\n\t\t}\n\t\tprintf(\" %d\\n\",ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint prime[10004];\nint A[10004], X[10004];\n\nint main() {\n    \n    int N;\n    \n    for(int i=2; i<=10000; i++)\n        for(int j=i*i; j<=10000; j+= i)\n            prime[j] = 1;\n    \n    int k = 0;\n    \n    for(int i=2; i<=10000; i++)\n        if(!prime[i])\n            A[++k] = i;\n    \n    for(int i=1; i<=k; i++)\n    {\n        int sum = 0;\n        \n        for(int j=i; j<=k && sum+A[j]<=10000; j++)\n        {\n            sum += A[j];\n            X[sum]++;\n        }\n    }\n    \n    while(1)\n    {\n        scanf(\"%d\", &N);\n        \n        if(!N)\n            break;\n        \n        printf(\"%d\\n\", X[N]);\n    }\n    \n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// Aizu 1257: Sum of Consecutive prime Numbers\n// 2017.9.22 bal4u@uu\n\n#include <stdio.h>\n#include <string.h>\n\n#define MAX  10000\n#define SQRT 100     // sqrt(MAX)\nchar np[MAX+3], *pmax = np + MAX;    // prime = !np\n\n#define N 1229\nint prime[N+10];\n\nint dp[2][MAX+3], ans[MAX+3];\n\nvoid nptbl()\n{\n\tint k;\n\tregister char *p, *q;\n\tnp[1] = 1, np[2] = 0;\n\tfor (p = np + 4; p <= pmax; p += 2) *p = 1;\n\tfor (k = 3, p = np + 3; k <= SQRT; k += 2, p += 2)\n\t\tif (!*p) for (q = p + k; q <= pmax; q += k) *q = 1;\n}\n\nint main()\n{\n\tint n, i, k1, k2;\n\n\tnptbl(); for (n = 1, i = 1; i <= MAX; i++) if (!np[i]) prime[n++] = i;\n\tfor (k1 = 0, k2 = 1, i = 1; i <= N; i++, k1 = k2, k2 = !k1) {\n\t\tint a = prime[i];\n\t\tmemset(dp[k2], 0, sizeof(dp[k2]));\n\t\tans[a]++, dp[k2][a]++;\n\t\tfor (n = 1; n + a <= 10000; n++) if (dp[k1][n])\n\t\t\tdp[k2][n+a] += dp[k1][n], ans[n+a]++;\n\t}\n\n\twhile (scanf(\"%d\", &n) && n) printf(\"%d\\n\", ans[n]);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#define MAX 10000\nint n;\nint primes[MAX];\nint isPrime(int m){\n\tint i;\n\tif(m<=1 || m!=2&&m%2==0)return 0;\n\tfor(i=3;i*i<=m;i+=2){\n\t\tif(m%i==0)return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint i,j;\n\tint num, sum,ans;\n\tint head,tail;\n\tn=0;\n\tfor(i=2;i<=MAX;i++){\n\t\tif(isPrime(i))primes[n++]=i;\n\t}\n\twhile(scanf(\"%d\",&num)==1&&num){\n\t\tans=0;\n\t\thead=0;\n\t\ttail=0;\n\t\tsum=0;\n\t\twhile(tail<n){\n\t\t\twhile(sum < num && tail<n)sum += primes[tail++];\n\t\t\twhile(num < sum && head<tail)sum -= primes[head++];\n\t\t\tif(num < sum)break;\n\t\t\tif(sum==num){\n\t\t\t\tans++;\n\t\t\t\tsum -= primes[head++];\n\t\t\t}\n\t\t}\n\t\tprintf(\" %d\\n\",ans);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  int num[1000],i=0,j,k,ans=0,culc;\n  int a[1000];\n  for(i=0;i<1000;i++){\n    a[i]=1;\n  }\n  for(i=2;i<1000;i++){\n    for(j=2;(i*j)<1000;j++){\n      a[i*j]=0;\n    }\n  }\n  a[0]=0;\n  a[1]=0;\n  i=0;\n  while(1){\n    scanf(\"%d\",&num[i]);\n    if(num[i]==0)break;\n    i++;\n    }\n  for(k=0;num[k]!=0;k++){\n    for(i=1;i<=num[k];i++){\n      if(a[i]==1){\n        culc=0;\n        for(j=0;culc<num[k];j++){\n          if(culc>num[k])break;\n          if(a[i+j]==1){\n            culc+=i+j;\n          }\n          if(culc==num[k]){\n            ans+=1;\n            break;\n          }\n        }\n      }\n    }\n    printf(\"%d\\n\",ans);\n    ans=0;\n  }\n}\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint prime[2000];\nint c,count;\nint isPrime(int n){\n\tint i;\n\tif(n==2)return 1;\n\tif(n==1)return 0;\n\tif(!(n%2))return 0;\n\tfor(i=1;i<c;i++){\n\t\tif(n==prime[i])return 1;\n\t\tif(!(n%prime[i]))return 0;\n\t}\n\tfor(i=prime[c-1];i<n/2;i+=2)if(!(n%i))return 0;\n\treturn 1;\n}\nvoid search(int n,int i,int sum){\n\tint j;\n\tif(sum+prime[i]==n){count++;return;}\n\tif(sum+prime[i]>n)return;\n\tsum+=prime[i];\n\tsearch(n,i+1,sum);\n}\nint main(){\n\tint i,n;\n\tprime[0]=2;prime[1]=3;prime[2]=5;prime[3]=7;prime[4]=11;\n\tc=5;\n\tfor(i=13;i<10000;i+=2){\n\t\tif(isPrime(i)){\n\t\t\tprime[c]=i;\n\t\t\tc++;\n\t\t}\n\t}\n\tfor(;scanf(\"%d\",&n)&&n;){\n\t\tcount=0;\n\t\tfor(i=0;i<c&&prime[i]<=n;i++)search(n,i,0);\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "//アジア地区予選2005東京大会 A Sum of Consecutive prime Numbers\n#include<stdio.h>\n#define MAX 10000\nint n;\nint primes[MAX];\nint isPrime(int m){\n\tint i;\n\tif(m<=1 || m!=2&&m%2==0)return 0;\n\tfor(i=3;i*i<=m;i+=2){\n\t\tif(m%i==0)return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint i,j;\n\tint num, sum,ans;\n\tint head,tail;\n\tn=0;\n\tfor(i=2;i<=MAX;i++){\n\t\tif(isPrime(i))primes[n++]=i;\n\t}\n\twhile(scanf(\"%d\",&num)==1&&num){\n\t\tans=0;\n\t\thead=0;\n\t\ttail=0;\n\t\tsum=0;\n\t\twhile(tail<n){\n\t\t\twhile(sum < num && tail<n)sum += primes[tail++];\n\t\t\twhile(num < sum && head<tail)sum -= primes[head++];\n\t\t\tif(num < sum)break;\n\t\t\tif(sum==num){\n\t\t\t\tans++;\n\t\t\t\tsum -= primes[head++];\n\t\t\t}\n\t\t}\n\t\tprintf(\" %d\\n\",ans);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  int i,j,c,s,n,d[10010],M=100010;\n  char p[100010]={1,1};\n  for(i=2;i*i<M;i++){\n    if(p[i])continue;\n    for(j=i*i;j<M;j+=i)p[j]=1;\n  }\n  for(i=c=0;i<M;i++){\n    if(p[i]==0)d[c++]=i;\n  }\n  while(scanf(\"%d\",&n),n){\n    for(i=c=0;d[i]<=n;i++){\n      for(j=s=0;s<n;j++)s+=d[i+j];\n      if(s==n)c++;\n    }\n    printf(\"%d\\n\",c);\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#define IN_MAX 10000\nchar primes[IN_MAX+1];\nint prime[300];\nint table[IN_MAX+1];\n\nvoid createtable(){\n  int i=2,j,n=0;\n  primes[1]=1;\n  for(;i<=IN_MAX;i++)\n    if(!primes[i])\n      for(j=i*2;j<=IN_MAX;j+=i)\n        primes[j]=1;\n\n  for(i=2;i<=IN_MAX;i++)\n    if(!primes[i])prime[n++]=i;\n    \n  for(i=0;i<n;i++){\n    int x=prime[i];\n    table[x]++;\n    for(j=i+1;;j++){\n      x+=prime[j];\n      if(x>IN_MAX)break;\n      table[x]++;\n    }\n  }\n}\n\nint main(){\n  int n;\n  createtable();\n  while(1){\n    scanf(\"%d\",&n);\n    if(!n)return 0;\n    printf(\"%d\\n\",table[n]);\n  }\n}"
  },
  {
    "language": "C",
    "code": "#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <vector>\n#include <math.h>\n#include <cmath>\n#include <string>\n#include <string.h>\n#include <map>\n#include <set>\n#include <stdio.h>\n#include <queue>\n//#include \"windows.h\"\n\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define nd second\n#define st first\n#define ll long long\n#define pii pair <int, int>\n#define tri pair <pii, int>\n#define irt pair <int, pii>\n#define pq priority_queue\n#define all(v) (v).begin(), (v).end()\n#define REP(i, n) for (int (i) = 0; (i) < (int)(n); i++)\n#define FOR(i, a, n) for (int (i) = (a); (i) < (int)(n); i++)\n#define FORN(i, a, n) for (int (i) = (a); (i) > (int)(n); i--)\n#define pi 3.1415926535897932384626433832795028841971\n//#define LOCAL\n\nusing namespace std; \n\nint n; \nint ans; \nint a[10005]; \n\nvector <int> v; \n\nvoid cp()\n{\n\tv.pb(0); \n\tFOR(i, 2, 10000)\n\t\tif (!a[i])\n\t\t{\n\t\t\tFOR(j, 2, 10000 / i + 1)\n\t\t\t\ta[i * j] = true; \n\t\t\tv.pb(i); \n\t\t}\n\t\n\tint lst = 0; \n\tFOR(i, 1, v.size())\n\t{\n\t\tv[i] += lst; \n\t\tlst = v[i]; \n\t}\n}\n\nint main()\n{\n\t#ifdef LOCAL\n\t\tfreopen(\"input.txt\", \"r\", stdin);\n\t\tfreopen(\"output.txt\", \"w\", stdout);\n\t#endif\n\t\n\tcp(); \n\t\n\twhile (cin >> n && n)\n\t{\n\t\tREP(i, v.size())\n\t\t\tFOR(j, i + 1, v.size())\n\t\t\t\tif (v[j] - v[i] == n) ans++; \n\t\tcout << ans << endl; \n\t\t\n\t\tans = 0; \n\t}\n\t\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main( void ) {\n\n\tint prime[10000], i, j, n, sum, count;\n\n\tfor ( i = 0; i < 10000; i++ ) { prime[i] = 1; }\n\tprime[0] = 0;\n\t\n\tfor ( i = 0; i < 10000; i++ ) {\n\t\t\n\t\tif ( prime[i] == 1 ) {\n\n\t\t\tfor ( j = i + 1; j < 10000; j++ ) {\n\t\t\t\n\t\t\t\tif ( ( j + 1 ) % ( i + 1 ) == 0 ) { prime[j] = 0; }\n\t\t\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\twhile ( scanf( \"%d\", &n ) && n > 0 ) {\n\n\t\tcount = 0;\n\n\t\tfor ( i = 0; i < n; i++ ) {\n\n\t\t\tsum = 0;\n\n\t\t\tif ( prime[i] == 1 ) {\n\t\t\t\t\n\t\t\t\tfor ( j = i; j < n; j++ ) {\n\n\t\t\t\t\tif ( prime[j] == 1 ) {\n\n\t\t\t\t\t\tsum += j + 1;\n\n\t\t\t\t\t\tif ( sum == n ) { count++; }\n\t\t\t\t\t\telse if ( sum > n) { break; }\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tprintf( \"%d\\n\", count );\n\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void)\n{\n\tchar so[10001];\n\tint i,j,flg,n;\n\tint sum,cnt;\n\t\n\tfor(i=2;i<=10000;i++)\t{\n\t\tso[i]=1;\n\t}\n\tfor(i=2;i<=100;i++)\t{\n\t\tfor(j=i*2;j<=10000;j=j+i)\t{\n\t\t\tso[j]=0;\n\t\t}\n\t}\n\twhile(1)\t{\n\t\tscanf(\"%d\",&n);\n\t\tif(n==0)\tbreak;\n\t\tcnt=0;\n\t\tfor(i=2;i<=n;i++)\t{\n\t\t\tif(so[i]==1)\t{\n\t\t\t\tsum=0;\n\t\t\t\tfor(j=i;j<=n;j++)\t{\n\t\t\t\t\tif(so[j]==1)\t{\n\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\tif(sum==n)\t{\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(sum>n)\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "//アジア地区予選2005東京大会 A Sum of Consecutive prime Numbers\n#include<stdio.h>\n#define MAX 10000\nint n;\nint primes[MAX];\nint isPrime(int m){\n\tint i;\n\tif(m<=1 || m!=2&&m%2==0)return 0;\n\tfor(i=3;i*i<=m;i+=2){\n\t\tif(m%i==0)return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint i,j;\n\tint num, sum,ans;\n\tint head,tail;\n\tn=0;\n\tfor(i=2;i<=MAX;i++){\n\t\tif(isPrime(i))primes[n++]=i;\n\t}\n\twhile(scanf(\"%d\",&num)==1&&num){\n\t\tans=0;\n\t\thead=0;\n\t\ttail=1;\n\t\tsum=2;\n\t\twhile(tail<n){\n\t\t\twhile(sum < num && tail<n-1)sum += primes[tail++];\n\t\t\twhile(num < sum && head<tail)sum -= primes[head++];\n\t\t\tif(sum==num)ans++;\n\t\t\tif(head==tail)break;\n\t\t\tsum -= primes[head++];\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nvoid main()\n{\n\tint i,n,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint k,h=1,sum=0,num,count;\n\t\tscanf(\"%d\",&k);\n\t\twhile(h<=9999)\n\t\t{\n\t\t\tcount=0;\n\t\t\tnum=0;\n\t\t\tfor(j=1;j<=i;j++)\n\t\t\t{\n\t\t\tif(h%j==0) \n\t\t\tcount++;\n\t\t\t}\n\t\t\tif(count==2)  \n\t\t\t{\n\t\t\t\tsum=sum+h;\n\t\t\t\tnum++;\n\t\t\t\tif(sum==k)\n\t\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",num);\n\t\t\t\tbreak;\n\t\t\t    }\n\t\t\t\telse\n\t\t\t\tif(sum>k)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"0\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\th++;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C",
    "code": "//アジア地区予選2005東京大会 A Sum of Consecutive prime Numbers\n#include<stdio.h>\n#define MAX 10000\nint n;\nint primes[MAX];\nint isPrime(int m){\n\tint i;\n\tif(m<=1 || m!=2&&m%2==0)return 0;\n\tfor(i=3;i*i<=m;i+=2){\n\t\tif(m%i==0)return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint i,j;\n\tint num, sum,ans;\n\tint head,tail;\n\tn=0;\n\tfor(i=2;i<=MAX;i++){\n\t\tif(isPrime(i))primes[n++]=i;\n\t}\n\twhile(scanf(\"%d\",&num)==1&&num){\n\t\tans=0;\n\t\thead=0;\n\t\ttail=1;\n\t\tsum=2;\n\t\twhile(1){\n\t\t\twhile(sum < num && tail<n-1)sum += primes[tail++];\n\t\t\twhile(num < sum && head<tail)sum -= primes[head++];\n\t\t\tif(sum==num)ans++;\n\t\t\tif(head==tail)break;\n\t\t\tsum -= primes[head++];\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define N 10000\n\nstatic int k_operafan[ N + 1 ];\nstatic int p[ N + 1 ] = { 1, 1, 0 };\nstatic int pn;\n\n/** Application main entry point. */\nint\nmain (\n  int     argc,\n  char  * argv[ ]\n  )\n{\n  int i, j;\n\n  for ( i = 2; i * i <= N; ++i )\n  {\n    if ( p[ i ] ) continue ;\n\n    for ( j = i * i; j <= N; j += i )\n    {\n      p[ j ] = 1;\n    }\n  }\n  for ( i = 2; i <= N; ++i )\n  {\n    if ( p[ i ] ) continue ;\n\n    p[ pn++ ] = i;\n  }\n  for ( i = 0; i < pn; ++i )\n  {\n    int s = 0;\n\n    for ( j = i; j < pn; ++j )\n    {\n      s += p[ j ];\n      if ( s > N ) break ;\n\n      ++k_operafan[ s ];\n    }\n  }\n\n  for ( ; ; )\n  {\n    int n;\n\n    scanf ( \"%d\", &n );\n    if ( !( n ) ) break ;\n\n    printf ( \"%d\\n\", k_operafan[ n ] );\n  }\n\n  return ( 0 );\n}"
  },
  {
    "language": "C",
    "code": "/*****\nICPC??´???\n1998??´ ??¢?????¢??§??? A??????\n*****/\n#include<stdlib.h>\n#include<stdio.h>\n#include<math.h>\n#define TRUE 0\n#define FALSE 1\n\nint main(void) {\n\tint i;\n\tint j;\n\tint max=(int)pow(2.0,15.0);\n\tint hurui[max];\n\t\n\t/////?´???°?±???????/////\n\tfor(i=0;i<max;i++) {\n\t\thurui[i] = TRUE;\n\t}\n\thurui[0] = FALSE;\n\thurui[1] = FALSE;\n\t\n\tfor(i=2;i<max;i++) {\n\t\tfor(j=2;j<max;j++) {\n\t\t\tif(i*j<max) {\n\t\t\t\thurui[i*j] = FALSE;\n\t\t\t}\n\t\t}\n\t}\n\t/*for(i=0;i<100;i++) {\n\t\tif(hurui[i]==TRUE) printf(\"%d = ?´???°\\n\",i);\n    }*/\n\t/////////////////////\n\t\n\tint input;\n\tint count;\n\tint sum;\n\t\n\twhile(1) {\n\t\tscanf(\"%d\",&input);\n\t\tprintf(\"-%d\\n\", input);\n\t\tif(input==0) break;\n\t\t\n\t\tcount = 0;\n\t\tsum = 0;\n\t\t\n\t\tif(hurui[input] == TRUE) {\n\t\t\tcount++;\n\t\t}\n\t\tfor(i=input-1; i>=2; i--) {\n\t\t\tif(hurui[i] == FALSE) continue;\n\t\t\tsum=i;\n\t\t\tfor(j=i-1; j>=2; j--) {\n\t\t\t\tif(hurui[j] == FALSE) continue;\n\t\t\t\tsum+=j;\n\t\t\t\tif(sum==input) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(sum>input) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\t\n\texit(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main()\n{\n\tint primeTable[1300];\n\tint index = 0;\n\tfor (int i = 2; i < 10000; i++)\n\t{\n\t\tfor (int j = 0; j < index; j++)\n\t\t{\n\t\t\tif (i % primeTable[j] == 0)\n\t\t\t\tgoto BREAK_1;\n\t\t}\n\t\tprimeTable[index] = i;\n\t\tindex++;\n\tBREAK_1:;\n\t}\n\tint start, end, pointer, tempSum, input, output;\n\tfor (; (scanf(\"%d\", &input)) && input != 0; printf(\"%d\\n\", output))\n\t{\n\t\tstart = output = tempSum = end = 0;\n\t\tdo\n\t\t{\n\t\t\tif (tempSum + primeTable[end] <= input)\n\t\t\t{\n\t\t\t\ttempSum += primeTable[end];\n\t\t\t\tif (tempSum == input)\n\t\t\t\t\toutput++;\n\t\t\t\tend++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttempSum -= primeTable[start];\n\t\t\t\tstart++;\n\t\t\t}\n\t\t} while (start <= end);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#define M 10100\n\nint n;\nint prime[M];\nint prime2[M] = {};\nlong long rui[M] = {};\nint tmp = 0;\n\nvoid c()\n{\n    for (int i = 0; i < 10000; i++)\n    {\n        prime[i] = 1;\n    }\n    prime[0] = prime[1] = 0;\n\n    for (int i = 2; i < 317; i++)\n    {\n        if (prime[i])\n        {\n            for (int j = i * 2; j < M; j += i)\n            {\n                prime[j] = 0;\n            }\n        }\n    }\n    for (int i = 2; i < M; i++)\n    {\n        if (prime[i])\n        {\n            prime2[tmp] = i;\n            tmp++;\n        }\n    }\n}\n\nvoid a()\n{\n    for (int i = 0; i < tmp; i++)\n    {\n        rui[i + 1] = rui[i] + prime2[i];\n    }\n}\n\nint main()\n{\n    c();\n    a();\n    while (1)\n    {\n        scanf(\"%d\", &n);\n        if (n == 0)\n            return 0;\n\n        int right = 1;\n        int left = 0;\n        int count = 0;\n\n        while (right != left)\n        {\n            if (rui[right] - rui[left] == n)\n            {\n                right++;\n                count++;\n            }\n            else if (rui[right] - rui[left] < n)\n            {\n                right++;\n            }\n            else\n            {\n                left++;\n            }\n        }\n        printf(\"%d\\n\", count);\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\n    int n;\n    int[] p;\n    int MAX = 2001;\n\n    void solve(){\n        Scanner sc = new Scanner(System.in);\n\n        p = new int[MAX];\n        for(int i=2; i<p.length; i++) p[i] = 1;\n        for(int i=2; i<Math.sqrt(MAX)+1; i++){\n            for(int j=i*2; j<MAX; j+=i){\n                p[j] = 0;\n            }\n        }\n\n        while(true){\n            n = sc.nextInt();\n            if(n==0) break;\n\n            int cnt = 0;\n            for(int i=0; i<=n; i++){\n                if(p[i]==0) continue;\n                int sum = 0;\n                for(int j=i; j<=n; j++){\n                    if(p[j]==0) continue;\n                    sum += j;\n                    if(sum==n){\n                        cnt++;\n                        break;\n                    }\n                    if(sum>n) break;\n                }\n            }\n\n            System.out.println(cnt);\n        }\n    }\n\n    public static void main(String[] args){\n        new Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class Main\n{\n    public static void main(String arg[])\n    {\n        Scanner sc=new Scanner(System.in);\n        boolean a[] =new boolean[10001];\n        Arrays.fill(a, true);\n        for(int i=2; i*i<=10000; i++)\n        {\n            if(!a[i])\n                continue;\n            for(int j=i*2; j<=10000; j+=i)\n                a[j]=false;\n        }\n        while(sc.hasNext())\n        {\n            int n=sc.nextInt();\n            if(n==0)\n                return;\n            int sum=0;\n            int ans=0;\n            for(int i=2; i<=n; i++)\n            {\n                sum =0;\n                if(a[i])\n                    for(int j=i; j<=n; j++)\n                    {\n                        if(a[j])\n                        {\n                            sum+=j;\n                            if(n==sum)\n                                ans++;\n                        }\n                        if(sum>=n)\n                            break;\n                    }\n            }\n            System.out.println(ans);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic boolean[] primes;\n\n\tstatic void primeSet(final int MAX){\n\t\tprimes = new boolean[MAX+1];\n\n\t\tprimes[2] = true;\n\t\tfor(int i=3;i<=MAX;i+=2){\n\t\t\tprimes[i] = true;\n\t\t}\n\t\tint rt = (int) Math.sqrt(MAX);\n\t\tfor(int i=3;i<=rt;i+=2){\n\t\t\tif(primes[i]){\n\t\t\t\tfor(int j=i*i;j<=MAX;j+=i){\n\t\t\t\t\tprimes[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\tint p = 0;\n\t\t\n\t\twhile(true){\n\t\t\tint n = stdIn.nextInt();\n\t\t\tif(p<n){\n\t\t\t\tprimeSet(n);\n\t\t\t}\n\t\t\tif(n==0){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tint before = 0;\n\t\t\tint cnt = 0;\n\t\t\tfor(int i=2;i<=n;i++){\n\t\t\t\tint sum=0;\n\t\t\t\tint start = 0;\n//\t\t\t\tSystem.out.print(i+\":\");\n\t\t\t\tfor(int j=i;j<=n;j++){\n\t\t\t\t\tif(primes[j]){\n//\t\t\t\t\t\tSystem.out.print(j+\",\");\n\t\t\t\t\t\tif(start==0){\n\t\t\t\t\t\t\tstart=j;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\tif(sum==n){\n\t\t\t\t\t\t\tif(start==before){\n\t\t\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\t\t\tstart=0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n//\t\t\t\t\t\t\tSystem.out.print(\"*****\");\n\t\t\t\t\t\t\tbefore=start;\n\t\t\t\t\t\t\tstart=0;\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(sum>n){\n\t\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n//\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nclass Eratos{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int ans = 0;\n        int initialize = 0;\n        int count = 0;\n        int x = 0;\n        ArrayList<Integer> prime_list = new ArrayList<Integer>();\n        for(int j = 2;j <= 10000; j++){\n            for(int n = 2; n <= j;n++){\n                if(j == n){\n                    prime_list.add(j);\n                }\n                else if(j % n == 0){\n                    break;\n                }\n            }\n        }\n        x = 0;\n        while(true){\n            String buf = br.readLine();\n            x = Integer.parseInt(buf);\n            if(x == 0){\n                break;\n            }\n            ans = 0;\n            initialize = 0;\n            count = 0;\n            for(int j = 0;j <= 10000;j++){\n                ans += prime_list.get(j);\n                if(x < prime_list.get(j)){\n                    System.out.println(count);\n                    break;\n                }\n                else if(x == ans){\n                    count++;\n                }\n                else if(x <= ans){\n                    j = initialize;\n                    initialize++;\n                    ans = 0;\n                }\n            }\n        }\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nclass Eratos{\n    public static int main(String[] args) throws IOException{\n        ArrayList<Integer> prime_list = new ArrayList<Integer>();\n        for(int j = 2;j <= 10000; j++){\n            for(int n = 2; n <= j;n++){\n                if(j == n){\n                    prime_list.add(j);\n                }\n                else if(j % n == 0){\n                    break;\n                }\n            }\n        }\n        int x = 0;\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        for(int i = 0;;i++){\n            //Scanner cin;\n            //cin = new Scanner(System.in);\n            //System.out.println(cin.next());\n            String buf = br.readLine();\n            x = Integer.parseInt(buf);\n            if(x == 0){\n                break;\n            }\n            int ans = 0;\n            int initialize = 0;\n            int count = 0;\n            for(int j = 0;j <= 10000;j++){\n                ans += prime_list.get(j);\n                if(x < prime_list.get(j)){\n                    System.out.println(count);\n                    break;\n                }\n                else if(x == ans){\n                    count++;\n                }\n                else if(x <= ans){\n                    j = initialize;\n                    initialize++;\n                    ans = 0;\n                }\n            }\n        }\n        return 0;\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tnew Main().solve();\n\t}\n\n\tvoid solve(){\n\n\t\tScanner cin = new Scanner(System.in);\n\t\tint[] num = new int[10001];\n\t\tLinkedList<Integer> l = new LinkedList<Integer>();\n\t\tfor(int i=2;i<=10000;i++){\n\t\t\tif(isPrime(i)){\n\t\t\t\tLinkedList<Integer> nl = new LinkedList<Integer>();\n\t\t\t\tnl.add(i);\n\t\t\t\tfor(int a : l) if(a+i<=10000){\n\t\t\t\t\tnl.add(a + i);\n\t\t\t\t}\n\t\t\t\tl = nl;\n\t\t\t\tfor(int a : l) num[a]++;\n\t\t\t}\n\t\t}\n\n\t\twhile(true)\n\t\t{\n\t\t\tint n = cin.nextInt();\n\t\t\tif(n==0) return;\n\t\t\tSystem.out.println(num[n]);\n\t\t}\n\t}\n\n\tboolean isPrime(int a){\n\t\tif(a<2) return false;\n\t\tfor(int i=2;i*i<=a;i++){\n\t\t\tif(a%i==0) return false;\n\t\t}\n\t\treturn true;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nclass Eratos{\n    public static void main(String[] args) throws IOException{\n        ArrayList<Integer> prime_list = new ArrayList<Integer>();\n        for(int j = 2;j <= 10000; j++){\n            for(int n = 2; n <= j;n++){\n                if(j == n){\n                    prime_list.add(j);\n                }\n                else if(j % n == 0){\n                    break;\n                }\n            }\n        }\n        int x = 0;\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        for(int i = 0;;i++){\n            //Scanner cin;\n            //cin = new Scanner(System.in);\n            //System.out.println(cin.next());\n            String buf = br.readLine();\n            x = Integer.parseInt(buf);\n            if(x == 0){\n                break;\n            }\n            int ans = 0;\n            int initialize = 0;\n            int count = 0;\n            for(int j = 0;j <= 10000;j++){\n                ans += prime_list.get(j);\n                if(x < prime_list.get(j)){\n                    System.out.println(count);\n                    break;\n                }\n                else if(x == ans){\n                    count++;\n                }\n                else if(x <= ans){\n                    j = initialize;\n                    initialize++;\n                    ans = 0;\n                }\n            }\n        }\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.awt.geom.*;\npublic class Main {\n\t//0945 start\n\tArrayList<Integer> list;\n\tint MAX = 10000;\n\n\tprivate void doit(){\n\t\tScanner sc = new Scanner(System.in);\n\t\teratos();\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tint count = 0;\n\t\t\tint len = list.size();\n\t\t\tfor(int i = 0; i < len; i++){\n\t\t\t\tint sum = list.get(i);\n\t\t\t\tif(sum == n){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\tfor(int j = i + 1; j < len; j++){\n\t\t\t\t\tsum += list.get(j);\n\t\t\t\t\tif(sum == n){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(sum > n ){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\n\tprivate void eratos() {\n\t\tboolean [] isprime = new boolean[MAX + 1];\n\t\tArrays.fill(isprime, true);\n\t\tisprime[0] = false;\n\t\tisprime[1] = false;\n\t\tlist = new ArrayList<Integer>();\n\t\tfor(int i = 2;i * i <= MAX; i++){\n\t\t\tif(isprime[i]){\n\t\t\t\tlist.add(i);\n\t\t\t\tfor(int j = i + i; j <= MAX; j+= i){\n\t\t\t\t\tisprime[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String [] args){\n\t\tnew Main().doit();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "package Vol012;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class AOJ12_57 \n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tboolean a[] =new boolean[10001];\n\t\tArrays.fill(a, true);\n\t\ta[0]=a[1]=false;\n\t\tfor(int i=2; i*i<=10000; i++)\n\t\t{\n\t\t\tif(!a[i])\n\t\t\t\tcontinue;\n\t\t\tfor(int j=i*2; j<=10000; j+=i)\n\t\t\t\ta[j]=false;\n\t\t}\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\n\t\t\t\treturn;\n\t\t\tint sum=0;\n\t\t\tint ans=0;\n\t\t\tfor(int i=2; i<=n; i++)\n\t\t\t{\n\t\t\t\tsum =0;\n\t\t\t\tif(a[i])\n\t\t\t\t\tfor(int j=i; j<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\t\tif(n==sum)\n\t\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(sum>=n)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic boolean[] isPrime;\n\tstatic int[] prime,sum;\n\tstatic{\n\t\tisPrime=new boolean[10001];\n\t\tArrays.fill(isPrime,true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i=2;i*i<=isPrime.length;i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tfor(int j=i+i;j<isPrime.length;j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}int cnt=0;\n\t\tfor(int i=0;i<100;i++){\n//\t\t\tSystem.out.println(i+\" \"+isPrime[i]);\n\t\t}\n\t\tfor(int i=0;i<isPrime.length;i++){\n\t\t\tif(isPrime[i])\n\t\t\t\tcnt++;\n\t\t}\n\t\tprime=new int[cnt];\n\t\tsum=new int[cnt+1];\n\t\tcnt=0;\n\t\tfor(int i=0;i<isPrime.length;i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprime[cnt++]=i;\n\t\t\t\tsum[cnt]=sum[cnt-1]+i;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<sum.length;i++){\n//\t\t\tSystem.out.println(sum[i]);\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint n=cin.nextInt();\n\t\t\tif(n==0)break;\n\t\t\tint ans=0;\n\t\t\tfor(int i=0;i<sum.length;i++){\n\t\t\t\tfor(int j=i+1;j<sum.length;j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n)\n\t\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(ans);\n\t\t\t\n\t\t\t\n\t\t}\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.awt.geom.*;\npublic class Main {\n\t//0945 start\n\t//0952 WA\n\tArrayList<Integer> list;\n\tint MAX = 10000;\n\n\tprivate void doit(){\n\t\tScanner sc = new Scanner(System.in);\n\t\teratos();\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tint count = 0;\n\t\t\tint len = list.size();\n\t\t\tfor(int i = 0; i < len; i++){\n\t\t\t\tint sum = list.get(i);\n\t\t\t\tif(sum == n){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\tfor(int j = i + 1; j < len; j++){\n\t\t\t\t\tsum += list.get(j);\n\t\t\t\t\tif(sum == n){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(sum > n ){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\n\tprivate void eratos() {\n\t\tboolean [] isprime = new boolean[MAX + 1];\n\t\tArrays.fill(isprime, true);\n\t\tisprime[0] = false;\n\t\tisprime[1] = false;\n\t\tlist = new ArrayList<Integer>();\n\t\tfor(int i = 2;i<= MAX; i++){\n\t\t\tif(isprime[i]){\n\t\t\t\tlist.add(i);\n\t\t\t\tfor(int j = i + i; j <= MAX; j+= i){\n\t\t\t\t\tisprime[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String [] args){\n\t\tnew Main().doit();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tfinal Scanner sc = new Scanner(System.in);\n\n\t\tboolean[] is_prime = new boolean[10001];\n\t\t\n\t\tfor(int i = 2; i <= 10000; i++){\n\t\t\tis_prime[i] = true;\n\t\t}\n\t\t\n\t\tfor(int i = 2; i <= 100; i++){\n\t\t\tif(is_prime[i]){\n\t\t\t\tfor(int j = i * 2; j <= 10000; j += i){\n\t\t\t\t\tis_prime[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tArrayList<Integer> p_list = new ArrayList<Integer>(); \n\t\tfor(int i = 2; i <= 10000; i++){\n\t\t\tif(is_prime[i]){\n\t\t\t\tp_list.add(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] count = new int[10001];\n\t\tfinal int size = p_list.size();\n\t\t\n\t\tfor(int len = 1; len <= size; len++){\n\t\t\tint sum = 0;\n\t\t\tfor(int i = 0; i < len; i++){\n\t\t\t\tsum += p_list.get(i);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum > 10000){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount[sum]++;\n\t\t\t\n\t\t\tfor(int i = len; i < size; i++){\n\t\t\t\tsum += p_list.get(i);\n\t\t\t\tsum -= p_list.get(i - len);\n\t\t\t\tif(sum > 10000){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcount[sum]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/*\n\t\tfor(int i = 0; i < 21; i++){\n\t\t\tSystem.out.println(i + \" : \" + dp[i] + \" , \");\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\twhile(true){\n\t\t\tfinal int n = sc.nextInt();\n\t\t\t\n\t\t\tif(n == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(count[n]);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main \n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tboolean a[] =new boolean[10001];\n\t\tArrays.fill(a, true);\n\t\ta[0]=a[1]=false;\n\t\tfor(int i=2; i*i<=10000; i++)\n\t\t{\n\t\t\tif(!a[i])\n\t\t\t\tcontinue;\n\t\t\tfor(int j=i*2; j<=10000; j+=i)\n\t\t\t\ta[j]=false;\n\t\t}\n\n\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\n\t\t\t\treturn;\n\t\t\tint sum=0;\n\t\t\tint ans=0;\n\n\t\t\tfor(int i=2; i<=n; i++)\n\t\t\t{\n\t\t\t\tsum =0;\n\t\t\t\tif(a[i])\n\t\t\t\t\tfor(int j=i; j<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\t\tif(n==sum)\n\t\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(sum>=n)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    static Scanner kbd = new Scanner(System.in);\n    public static void main(String[] args){\n\tint[] p = new int[10000];\n\tputN(p);\n\twhile(kbd.hasNext()){\n\t    int n = kbd.nextInt();\n\t    if(n!=0){\n\t\tint i=0;\n\t\tint s=0;  //テゥツ?」テァツカツ堙」ツ?療」ツ?淌ァツエツ?ヲツ閉ーテ」ツ?ョテ・ツ陳?\n\t\tint l=0;  //テゥツ?」テァツカツ堙ァツエツ?ヲツ閉ーテ」ツ?ョテ」ツ??」ツ?。テヲツ慊?・ツーツ?\n\t\tint c = 0;  //ティツ。ツィテァツ渉セテ」ツ?ァテ」ツ?催」ツ?淌」ツδ妥」ツつソテ」ツδシテ」ツδウテヲツ閉ー\n\t\twhile(p[i]!=0){\n\t\t    if(s < n) {\n\t\t\ts += p[i];\n\t\t\ti++;\n\t\t    }\n\t\t    else if(s>n){\n\t\t\ts -= p[l];\n\t\t\tl++;\n\t\t    }\n\t\t    else;\n\n\t\t    if(s==n) {\n\t\t\tc++;\n\t\t\ts += p[i];\n\t\t\ti++;\n\t\t    }\n\t\t}\t \n\t\tSystem.out.println(c);\n\t    }\n\t}\n    }\n\n    \n    \n    \n    static void putN(int[] p){\n\tint i=0, k;\n\tfor(k=2; k<10000; k++){\n\t    if(check(k)) {\n\t\tp[i] = k;\n\t\t//System.out.print(p[i]+\" \");\n\t\ti++;\n\t    }\n\t}\n\n    }\n    static boolean check(int n){\n\tint a, c=0;\n\tfor(a=1; a<=n; a++){\n\t    if(n%a==0) c++;\n\t}\n\tif(c>2) return false;\n\treturn true;\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic ArrayList<Integer> list=new ArrayList<>();\n\tstatic void eratos() {\n\t\tboolean[] prime=new boolean[10010];\n\t\tArrays.fill(prime, true);\n\t\tfor(int i=2; i<=10000; i++) {\n\t\t\tif(prime[i]) {\n\t\t\t\tlist.add(i);\n\t\t\t\tfor(int j=2; i*j<=10000; j++) {\n\t\t\t\t\tprime[i*j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\ttry(Scanner sc = new Scanner(System.in)) {\n\t\t\teratos();\n\t\t\twhile(sc.hasNext()) {\n\t\t\t\tint n=sc.nextInt();\n\t\t\t\tif(n==0) break;\n\t\t\t\tint s=0, t=0, sum=0;\n\t\t\t\tint count=0;\n\t\t\t\tfor(;;) {\n\t\t\t\t\twhile(t<=n && sum<n) {\n\t\t\t\t\t\tsum+=list.get(t);\n\t\t\t\t\t\tt++;\n\t\t\t\t\t}\n\t\t\t\t\tif(sum<n) break;\n\t\t\t\t\tif(sum==n) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\tsum-=list.get(s);\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(count);\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class Main\n{\n    public static void main(String arg[])\n    {\n        Scanner sc=new Scanner(System.in);\n        boolean a[] =new boolean[10001];\n        Arrays.fill(a, true);\n        for(int i=2; i*i<=10000; i++)\n        {\n            if(!a[i])\n                continue;\n            for(int j=i*2; j<=10000; j+=i)\n                a[j]=false;\n        }\n        while(sc.hasNext())\n        {\n            int n=sc.nextInt();\n            if(n==0)\n                return;\n            int sum=0;\n            int ans=0;\n            for(int i=2; i<=n; i++)\n            {\n                sum =0;\n                if(a[i])\n                    for(int j=i; j<=n; j++)\n                    {\n                        if(a[j])\n                        {\n                            sum+=j;\n                            if(n==sum)\n                                ans++;\n                        }\n                        if(sum>=n)\n                            break;\n                    }\n            }\n            System.out.println(ans);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nclass Eratos{\n    public static void main(String[] args) throws IOException{\n        ArrayList<Integer> prime_list = new ArrayList<Integer>();\n        for(int j = 2;j <= 10000; j++){\n            for(int n = 2; n <= j;n++){\n                if(j == n){\n                    prime_list.add(j);\n                }\n                else if(j % n == 0){\n                    break;\n                }\n            }\n        }\n        int x = 0;\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        for(int i = 0;;i++){\n            //Scanner cin;\n            //cin = new Scanner(System.in);\n            //System.out.println(cin.next());\n            String buf = br.readLine();\n            x = Integer.parseInt(buf);\n            if(x == 0){\n                break;\n            }\n            int ans = 0;\n            int initialize = 0;\n            int count = 0;\n            for(int j = 0;j <= 10000;j++){\n                ans += prime_list.get(j);\n                if(x < prime_list.get(j)){\n                    System.out.println(count);\n                    break;\n                }\n                else if(x == ans){\n                    count++;\n                }\n                else if(x <= ans){\n                    j = initialize;\n                    initialize++;\n                    ans = 0;\n                }\n            }\n        }\n        return 0;\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[100000000];\n\tstatic int[] primes = new int[100000];\n\tstatic int[] sum = new int[100000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\tboolean[] is=new boolean[10001];\n\t\tArrays.fill(is,true);\n\t\tis[0]=is[1]=false;\n\t\tfor(int i=2;i*i<=is.length;i++){\n\t\t\tif(is[i]){\n\t\t\t\tfor(int j=i+i;j<is.length;j+=i){\n\t\t\t\t\tis[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint[] primes=new int[5000];\n\t\tint cnt=0;\n\t\tfor(int i=0;i<is.length;i++){\n\t\t\tif(is[i]){\n\t\t\t\tprimes[cnt++]=i;\n\t\t\t}\n\t\t}\n\t\twhile(true){\n\t\t\tint n=cin.nextInt();\n\t\t\tif(n==0)break;\n\t\t\tint ans=0;\n\t\t\tfor(int i=0;i<cnt;i++){\n\t\t\t\tint sum=0;\n\t\t\t\tfor(int j=i;j<cnt;j++){\n\t\t\t\t\tsum+=primes[j];\n\t\t\t\t\tif(sum>n){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(sum==n){\n\t\t\t\t\t\tans++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    static Scanner kbd = new Scanner(System.in);\n    public static void main(String[] args){\n\tint[] p = new int[10000];\n\tputN(p);\n\twhile(kbd.hasNext()){\n\t    int n = kbd.nextInt();\n\t    if(n!=0){\n\t\tint i=0;\n\t\tint s=0;  //連続した素数の和\n\t\tint l=0;  //連続素数のうち最小\n\t\tint c = 0;  //表現できたパターン数\n\t\twhile(p[i]!=0){\n\t\t    if(s < n) {\n\t\t\ts += p[i];\n\t\t\ti++;\n\t\t    }\n\t\t    else if(s>n){\n\t\t\ts -= p[l];\n\t\t\tl++;\n\t\t    }\n\t\t    else;\n\n\t\t    if(s==n) {\n\t\t\tc++;\n\t\t\ts += p[i];\n\t\t\ti++;\n\t\t    }\n\t\t}\t \n\t\tSystem.out.println(c);\n\t    }\n\t}\n    }\n\n    \n    \n    \n    static void putN(int[] p){\n\tint i=0, k;\n\tfor(k=2; k<10000; k++){\n\t    if(check(k)) {\n\t\tp[i] = k;\n\t\t//System.out.print(p[i]+\" \");\n\t\ti++;\n\t    }\n\t}\n\n    }\n    static boolean check(int n){\n\tint a, c=0;\n\tfor(a=1; a<=n; a++){\n\t    if(n%a==0) c++;\n\t}\n\tif(c>2) return false;\n\treturn true;\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\n    int n;\n    int[] p;\n    int MAX = 10001;\n\n    void solve(){\n        Scanner sc = new Scanner(System.in);\n\n        p = new int[MAX];\n        for(int i=2; i<p.length; i++) p[i] = 1;\n        for(int i=2; i<Math.sqrt(MAX)+1; i++){\n            for(int j=i*2; j<MAX; j+=i){\n                p[j] = 0;\n            }\n        }\n\n        while(true){\n            n = sc.nextInt();\n            if(n==0) break;\n\n            int cnt = 0;\n            for(int i=0; i<=n; i++){\n                if(p[i]==0) continue;\n                int sum = 0;\n                for(int j=i; j<=n; j++){\n                    if(p[j]==0) continue;\n                    sum += j;\n                    if(sum==n){\n                        cnt++;\n                        break;\n                    }\n                    if(sum>n) break;\n                }\n            }\n\n            System.out.println(cnt);\n        }\n    }\n\n    public static void main(String[] args){\n        new Main().solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nclass Eratos{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int ans = 0;\n        int initialize = 0;\n        int count = 0;\n        int x = 0;\n        ArrayList<Integer> prime_list = new ArrayList<Integer>();\n        for(int j = 2;j <= 10000; j++){\n            for(int n = 2; n <= j;n++){\n                if(j == n){\n                    prime_list.add(j);\n                }\n                else if(j % n == 0){\n                    break;\n                }\n            }\n        }\n        x = 0;\n        for(int i = 0;;i++){\n            String buf = br.readLine();\n            x = Integer.parseInt(buf);\n            if(x == 0){\n                break;\n            }\n            ans = 0;\n            initialize = 0;\n            count = 0;\n            for(int j = 0;j <= 10000;j++){\n                ans += prime_list.get(j);\n                if(x < prime_list.get(j)){\n                    System.out.println(count);\n                    break;\n                }\n                else if(x == ans){\n                    count++;\n                }\n                else if(x <= ans){\n                    j = initialize;\n                    initialize++;\n                    ans = 0;\n                }\n            }\n        }\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[10001];\n\tstatic int[] primes = new int[10000];\n\tstatic int[] sum = new int[10000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tboolean[] pri = new boolean[10001];\n\t\tfor(int i=2;i<10001;i++) pri[i] = true;\n\t\tfor(int i=2;i<10001;i++){\n\t\t\tfor(int j=i+i;j<10001;j+=i){\n\t\t\t\t\tpri[j]=false;\n\t\t\t}\n\t\t}\n\n\t\tint[] m = new int[1229];\n\t\tint sum = 0;\n\t\tfor(int i=2;i<10001;i++){\n\t\t\tif(pri[i]==true){\n\t\t\t\tm[sum] = i;\n\t\t\t\tsum++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] ans = new int[10001];\n\t\tfor(int i=0;i<1229;i++){\n\t\t\tsum = 0;\n\t\t\tfor(int j=i;j>=0;j--){\n\t\t\t\tsum += m[j];\n\t\t\t\tif(sum>10000) break;\n\t\t\t\tans[sum]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0)break;\n\t\t\tSystem.out.println(ans[n]);\n\t\t}\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tboolean a[] =new boolean[10001];\n\t\tArrays.fill(a, true);\n\t\ta[0]=a[1]=false;\n\t\tfor(int i=2; i*i<=10000; i++)\n\t\t{\n\t\t\tif(!a[i])\n\t\t\t\tcontinue;\n\t\t\tfor(int j=i*2; j<=10000; j+=i)\n\t\t\t\ta[j]=false;\n\t\t}\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0) return;\n\t\t\tint sum=0;\n\t\t\tint ans=0;\n\t\t\tfor(int i=2; i<=n; i++)\n\t\t\t{\n\t\t\t\tsum =0;\n\t\t\t\tif(a[i])\n\t\t\t\t\tfor(int j=i; j<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\t\tif(n==sum)\n\t\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(sum>=n)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tboolean a[] =new boolean[10001];\n\t\tArrays.fill(a, true);\n\t\ta[0]=a[1]=false;\n\t\tfor(int i=2; i*i<=10000; i++)\n\t\t{\n\t\t\tfor(int j=i*2; j<=10000; j+=i)\n\t\t\t\ta[j]=false;\n\t\t}\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\n\t\t\t\treturn;\n\t\t\tint sum=0;\n\t\t\tint ans=0;\n\t\t\tfor(int i=2; i<=n; i++)\n\t\t\t{\n\t\t\t\tsum =0;\n\t\t\t\tif(a[i])\n\t\t\t\t\tfor(int j=i; j<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\t\tif(n==sum)\n\t\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(sum>=n)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tboolean a[] =new boolean[10001];\n\t\tArrays.fill(a, true);\n\t\ta[0]=a[1]=false;\n\t\tfor(int i=2; i*i<=10000; i++)\n\t\t{\n\t\t\tif(!a[i])\n\t\t\t\tcontinue;\n\t\t\tfor(int j=i*2; j<=10000; j+=i)\n\t\t\t\ta[j]=false;\n\t\t}\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\n\t\t\t\treturn;\n\t\t\tint sum=0;\n\t\t\tint ans=0;\n\t\t\tfor(int i=2; i<=n; i++)\n\t\t\t{\n\t\t\t\tsum =0;\n\t\t\t\tif(a[i])\n\t\t\t\t\tfor(int j=i; j<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\t\tif(n==sum)\n\t\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(sum>=n)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nclass Eratos{\n    public static void main(String[] args) throws IOException{\n        ArrayList<Integer> prime_list = new ArrayList<Integer>();\n        for(int j = 2;j <= 10000; j++){\n            for(int n = 2; n <= j;n++){\n                if(j == n){\n                    prime_list.add(j);\n                }\n                else if(j % n == 0){\n                    break;\n                }\n            }\n        }\n        int x = 0;\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        for(int i = 0;;i++){\n\n            String buf = br.readLine();\n            x = Integer.parseInt(buf);\n            if(x == 0){\n                break;\n            }\n            int ans = 0;\n            int initialize = 0;\n            int count = 0;\n            for(int j = 0;j <= 10000;j++){\n                ans += prime_list.get(j);\n                if(x < prime_list.get(j)){\n                    System.out.println(count);\n                    break;\n                }\n                else if(x == ans){\n                    count++;\n                }\n                else if(x <= ans){\n                    j = initialize;\n                    initialize++;\n                    ans = 0;\n                }\n            }\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[1000000];\n\tstatic int[] primes = new int[100000];\n\tstatic int[] sum = new int[100000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tif(primes[i]>n){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\nclass Main {\n    private static int[] calcPrimes(int n) {\n        boolean[] table = new boolean[n + 1];\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (!table[i]) {\n                for (int j = i + i; j <= n; j += i) {\n                    table[j] = true;\n                }\n            }\n        }\n        int counter = 0;\n        for (int i = 2; i <= n; i++) {\n            if (!table[i]) {\n                counter++;\n            }\n        }\n        int[] result = new int[counter];\n        int index = 0;\n        for (int i = 2; i <= n; i++) {\n            if (!table[i]) {\n                result[index++] = i;\n            }\n        }\n        return result;\n    }\n\n    private static void solve() {\n        Scanner scanner = new Scanner(System.in);\n        int[] primes = calcPrimes(10000 + 100);\n\n        while (true) {\n            int n = scanner.nextInt();\n            if (n == 0) {\n                break;\n            }\n            int counter = 0;\n            for (int i = 0; i < primes.length && primes[i] <= n; i++) {\n                int x = n;\n                for (int j = 0; x > 0; j++) {\n                    x -= primes[i + j];\n                }\n                if (x == 0) {\n                    counter++;\n                }\n            }\n            System.out.println(counter);\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[10000000];\n\tstatic int[] primes = new int[100000];\n\tstatic int[] sum = new int[100000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tboolean a[] =new boolean[10001];\n\t\tArrays.fill(a, true);\n\t\tfor(int i=2; i*i<=10000; i++)\n\t\t{\n\t\t\tif(!a[i])\n\t\t\t\tcontinue;\n\t\t\tfor(int j=i*2; j<=10000; j+=i)\n\t\t\t\ta[j]=false;\n\t\t}\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\n\t\t\t\treturn;\n\t\t\tint sum=0;\n\t\t\tint ans=0;\n\t\t\tfor(int i=2; i<=n; i++)\n\t\t\t{\n\t\t\t\tsum =0;\n\t\t\t\tif(a[i])\n\t\t\t\t\tfor(int j=i; j<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\t\tif(n==sum)\n\t\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(sum>=n)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[10000000];\n\tstatic int[] primes = new int[100000];\n\tstatic int[] sum = new int[100000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tif(primes[count]>n){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[50000000];\n\tstatic int[] primes = new int[100000];\n\tstatic int[] sum = new int[100000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tboolean p[] = new boolean[12345];\n\t\tArrays.fill(p, true);\n\t\tp[0] = false;\n\t\tp[1] = false;\n\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < 123; i++) {\n\t\t\tif (p[i]) {\n\t\t\t\tfor (int j = i + i; j < 12345; j += i){\n\t\t\t\t\tp[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < 10001; i++) {\n\t\t\tif (p[i]) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tint pt[] = new int[count + 1];\n\n\t\tint cnt = 1;\n\t\tpt[0] = 0;\n\t\tfor (int i = 0; i < 10001; i++) {\n\t\t\tif (p[i]) {\n\t\t\t\tpt[cnt] = i + pt[cnt - 1];\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n//\t\tSystem.out.println(Arrays.toString(pt));\n\t\tint dp[] = new int[12345];\n\t\tfor (int s = 0; s < count+1; s++) {\n\t\t\tfor (int e = s + 1; e < count+1; e++) {\n\t\t\t\tif(pt[e]-pt[s] > 10000){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdp[pt[e] - pt[s]]++;\n\t\t\t}\n\t\t}\n\n\t\tfor (;;) {\n\t\t\tint n = sc.nextInt();\n\t\t\tif (n == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tSystem.out.println(dp[n]);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tboolean a[] =new boolean[10001];\n\t\tArrays.fill(a, true);\n\t\ta[0]=a[1]=false;\n\t\tfor(int i=2; i*i<=10000; i++)\n\t\t{\n\t\t\tif(!a[i])\n\t\t\t\tcontinue;\n\t\t\tfor(int j=i*2; j<=10000; j+=i)\n\t\t\t\ta[j]=false;\n\t\t}\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tif(n==0)\n\t\t\t\treturn;\n\t\t\tint sum=0;\n\t\t\tint ans=0;\n\t\t\tfor(int i=2; i<=n; i++)\n\t\t\t{\n\t\t\t\tsum =0;\n\t\t\t\tif(a[i])\n\t\t\t\t\tfor(int j=i; j<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum+=j;\n\t\t\t\t\t\t\tif(n==sum)\n\t\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(sum>=n)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nclass Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int ans = 0;\n        int initialize = 0;\n        int count = 0;\n        int x = 0;\n        ArrayList<Integer> prime_list = new ArrayList<Integer>();\n        for(int j = 2;j <= 10000; j++){\n            for(int n = 2; n <= j;n++){\n                if(j == n){\n                    prime_list.add(j);\n                }\n                else if(j % n == 0){\n                    break;\n                }\n            }\n        }\n        x = 0;\n        while(true){\n            String buf = br.readLine();\n            x = Integer.parseInt(buf);\n            if(x == 0){\n                break;\n            }\n            ans = 0;\n            initialize = 0;\n            count = 0;\n            for(int j = 0;j <= 10000;j++){\n                ans += prime_list.get(j);\n                if(x < prime_list.get(j)){\n                    System.out.println(count);\n                    break;\n                }\n                else if(x == ans){\n                    count++;\n                }\n                else if(x <= ans){\n                    j = initialize;\n                    initialize++;\n                    ans = 0;\n                }\n            }\n        }\n    }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[1000000];\n\tstatic int[] primes = new int[100000];\n\tstatic int[] sum = new int[100000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tif(primes[i]>n){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(primes[j]>n){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\tint MAX = 10000;\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] cnt = new int[MAX+1];\n\t\tboolean[] isp = new boolean[MAX+1];\n\t\tisp[0] = isp[1] = true;\n\t\tArrayList<Integer> ps = new ArrayList<Integer>();\n\t\tfor(int i=2;i<=MAX;i++) if(!isp[i]) {\n\t\t\tfor(int j=i*2;j<=MAX;j+=i) isp[j] = true;\n\t\t\tps.add(i);\n\t\t}\n\t\t\n\t\tint[] sum = new int[ps.size()+1];\n\t\tfor(int i=1;i<=ps.size();i++) sum[i] = sum[i-1] + ps.get(i-1);\n\t\tfor(int i=0;i<=ps.size()-1;i++) for(int j=i+1;j<=ps.size();j++) {\n\t\t\tif(sum[j]-sum[i] <= MAX) cnt[sum[j]-sum[i]]++;\n\t\t}\n\t\t\n\t\tfor(;;) {\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tSystem.out.println(cnt[n]);\n\t\t}\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\n//Sum of Consecutive prime Numbers\npublic class Main{\n\n\tvoid run(){\n\t\tint N = 10000;\n\t\tboolean[] p = new boolean[N+1];\n\t\tArrays.fill(p, true);\n\t\tp[0]=p[1]=false;\n\t\tint[] s = new int[1229];\n\t\tint x = 0;\n\t\tfor(int i=2;i<=N;i++)if(p[i]){\n\t\t\ts[x++] = i;\n\t\t\tfor(int j=i+i;j<=N;j+=i)p[j]=false;\n\t\t}\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0)break;\n\t\t\tint res = 0;\n\t\t\tfor(int i=0;i<1229;i++){\n\t\t\t\tint sum = s[i];\n\t\t\t\tint j = i+1;\n\t\t\t\twhile(sum<n&&j<1229){\n\t\t\t\t\tsum+=s[j++];\n\t\t\t\t}\n\t\t\t\tif(sum==n)res++;\n\t\t\t}\n\t\t\tSystem.out.println(res);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tstatic int count=1;\n\tstatic boolean[] isPrime = new boolean[10001];\n\tstatic int[] primes = new int[100000];\n\tstatic int[] sum = new int[100000];\n\tstatic{\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i = 0; i*i<=isPrime.length; i++){\n\t\t\tif(isPrime[i]){\n\n\t\t\t\tfor(int j = i+i; j < isPrime.length; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < isPrime.length;i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprimes[count]=i;\n\t\t\t\tsum[count]=sum[count-1]+primes[count];\n\t\t\t\tcount++;\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = cin.nextInt();\n\t\t\tint cnt=0;\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i = 0; i < count; i++){\n\t\t\t\tfor(int j = i+1;j < count; j++){\n\t\t\t\t\tif(sum[j]-sum[i]==n){\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(cnt);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.awt.geom.*;\nimport java.io.*;\n    \n    \npublic class Main {\n\tstatic ArrayList<Integer> list = new ArrayList<Integer>();\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tmakePrimeList();\n\t\tint[] l = new int[list.size()+1];\n\t\tfor(int i = 0; i < list.size(); i++) {\n\t\t\tl[i+1] = l[i] + list.get(i);\n\t\t}\n\t\twhile(true) {\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tint count = 0;\n\t\t\tfor(int i = 0; i < l.length; i++) {\n\t\t\t\tfor(int j = 0; j < i; j++) {\n\t\t\t\t\tif(l[i] - l[j] == n) count++;\n\t\t\t\t\tif(l[i] - l[j] <= n) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\tstatic void makePrimeList() {\n\t\tboolean[] isntPrime = new boolean[10001];\n\t\tlist.add(2);\n\t\tfor(int i = 3; i < isntPrime.length; i += 2) {\n\t\t\tif(!isntPrime[i]) {\n\t\t\t\tlist.add(i);\n\t\t\t\tfor(int j = i + i; j < isntPrime.length; j += i) {\n\t\t\t\t\tisntPrime[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic ArrayList<Integer> list=new ArrayList<>();\n\tstatic void eratos() {\n\t\tboolean[] prime=new boolean[10010];\n\t\tArrays.fill(prime, true);\n\t\tfor(int i=2; i<=10000; i++) {\n\t\t\tif(prime[i]) {\n\t\t\t\tlist.add(i);\n\t\t\t\tfor(int j=2; i*j<=10000; j++) {\n\t\t\t\t\tprime[i*j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\ttry(Scanner sc = new Scanner(System.in)) {\n\t\t\teratos();\n\t\t\twhile(sc.hasNext()) {\n\t\t\t\tint n=sc.nextInt();\n\t\t\t\tif(n==0) break;\n\t\t\t\tint s=0, t=0, sum=0;\n\t\t\t\tint count=0;\n\t\t\t\tfor(;;) {\n\t\t\t\t\twhile(t<list.size() && sum<n) {\n\t\t\t\t\t\tsum+=list.get(t);\n\t\t\t\t\t\tt++;\n\t\t\t\t\t}\n\t\t\t\t\tif(sum<n) break;\n\t\t\t\t\tif(sum==n) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\tsum-=list.get(s);\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(count);\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "/*\nString[]の初期化、整数の型がlongになっているか\n関数（splitとかcontainsとか）内では\"+\"とかは正規表現となされるので\"\\\\+\"とする\n配列のコピーはarr1=arr.clone()\nHashSet<>[]はおのおの初期化した？？？？？\n負の数の割り算は絶対値が小さいほうに切り捨てられるex.-1/2=0ので、ある値>kみたいな式だとバグらせやすいので注意\nある値>=kとして、切り上げた値をとるべき\ntoLowerCase()はアルファベット以外に対して行ってもエラーにはならない\nArrayDequeではpopとpushはStackと同じ操作になる\n */\n//入力終了→Ctrl+D\n//https://onlinejudge.u-aizu.ac.jp/#/problems/1257\nimport java.util.*;\nimport java.awt.*;\nimport java.awt.geom.Point2D;\nimport static java.lang.System.*;\nimport static java.lang.Math.*;\npublic class Main {\n    public static void main(String[] $) {\n        Scanner sc = new Scanner(in);\n        int[] prime=Generate_prime(1000000);\n        int m=prime.length;\n        while (sc.hasNext()) {\n            int n = sc.nextInt();\n            if(n==0)exit(0);\n            int ans = 0, sum = 0, right = 0;\n            for (int left = 1; left < m + 1; left++) {\n                while (right<m&&sum+prime[right]<n){\n                    sum+=prime[right];\n                    right++;\n                }\n                if(right<m&&sum+prime[right]==n){\n                    ans++;\n                }\n                if(right==left)right++;\n                else sum-=prime[left];\n            }\n            out.println(ans);\n        }\n    }\n    static int[] Generate_prime(int n) {\n        ArrayList<Integer> prime = new ArrayList<>();\n        prime.add(2);\n        prime.add(3);\n        for (int i = 6; i <= n; i += 6) {\n            int p1 = i - 1, p2 = i + 1;\n            if (isPrime(p1)) prime.add(p1);\n            if (isPrime(p2)) prime.add(p2);\n        }\n        int t=prime.size();\n        int[] Generated_prime=new int[t+1];\n        //Iteratorでもよい\n        for (int i=1;i<=t;i++){\n            Generated_prime[i]=prime.get(i-1);\n        }\n        return Generated_prime;\n    }\n    static boolean isPrime(int p){\n        if(p==1)return false;\n        int t= (int) (sqrt(p)+1);\n        boolean f=true;\n        for (int i = 5; i <= t && f; i++) if(p%i==0) f=false;\n        return f;\n    }\n}\n"
  },
  {
    "language": "JavaScript",
    "code": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(10000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nvar cnt=[];\nfor(var i=0;i<=10000;i++)cnt[i]=0;\np.forEach(function(v,index){\n   cnt[v]++;\n   for(var i=index+1;i<p.length;i++){\n      v+=p[i];\n      if(v>10000)break;\n      cnt[v]++;\n   }\n});\narr.some(function(v){\n   if(v==0)return true;\n   console.log(cnt[v]);\n});"
  },
  {
    "language": "JavaScript",
    "code": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(10000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nvar cnt=[];\nfor(var i=0;i<=10000;i++)cnt[i]=0;\np.forEach(function(v,index){\n   cnt[v]++;\n   for(var i=index+1;i<p.length;i++){\n      v+=p[i];\n      if(v>10000)break;\n      cnt[v]++;\n   }\n});\narr.some(function(v){\n   if(v==0)return true;\n   console.log(sum[v]);\n});"
  },
  {
    "language": "Ruby",
    "code": "MAX =10000\nisPrime = Array.new(MAX+1,true)\nisPrime[0,2]=false,false\n(2..100).each{|i|\n  if isPrime[i]\n    (i*2).step(MAX,i){|j|\n      isPrime[j]=false\n    }\n  end\n}\nprime=[]\nisPrime.each_index{|x|\n  prime << x if isPrime[x]\n}\n\nloop do\n  n = gets.to_i\n  break if n==0\n  c=0\n  (0...prime.size).each{|i|\n    break if prime[i] > n\n    sum =0\n    (i...prime.size).each{|j|\n      break if sum>n\n      sum+=prime[j]\n      if sum==n\n        c+=1\n        break\n      end\n    }\n  }\n  puts c\nend"
  },
  {
    "language": "Ruby",
    "code": "primes = (2..10000).to_a\nprimes.each do |prime|\n\tprimes.reject!{|num| num != prime and num % prime == 0}\nend\n\nwhile (number = gets.chomp.to_i) > 0\n\tcandidates = primes.select{|prime| prime <= number}\n\tb, e = 0, 0\n\tanswer = 0\n\twhile true\n\t\tsum = candidates[b..e].inject(:+)\n\t\tif sum < number\n\t\t\tif e == candidates.size - 1\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\te += 1\n\t\t\tend\n\t\telsif sum > number\n\t\t\tb += 1\n\t\telse\n\t\t\tanswer += 1\n\t\t\tif e == candidates.size - 1\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\te += 1\n\t\t\tend\n\t\tend\n\tend\n\tputs answer\nend"
  },
  {
    "language": "Ruby",
    "code": "# ?????????http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1257\n# ?????????????????§??????\n# ???????????¨?????????????????????????????????????????§???10 000 ?????§????´???°????±????????????????\n# ????????°???????????§??£?¶?????????°????????§??¨???????????????subsequence.rb??¨??????????????§??¢??????\narray = []\nwhile array[array.length-1]!=0\n\tarray << gets.chomp.to_i\nend\narray.pop\n\ndef prime_sifting(num)\n  range = (2..num).to_a\n  prime = 2\n  i=2\n  non_prime_arr = []\n\n  while prime <= Math.sqrt(num)\n    for i in 2..num \n      if prime * i <= num\n        non_prime_arr << prime * i\n      else\n        break\n      end\n    end \n    prime +=1\n  end\n\n  return range - non_prime_arr\nend\n\nsosu = prime_sifting(10000)\n\narray.each do |a|\n\tn,j,k = 0,0,1\n  sum = sosu[0]\n  add_next = true\n\twhile k < sosu.length && sosu[j]<=a\n    sum = add_next ? sum + sosu[k] : sum - sosu[j-1]\n\t\tif sosu[j..k].inject(:+) == a\n\t\t\tn = n+1\n      j = j+1\n      add_next = false\n\t\telsif sosu[j..k].inject(:+) > a\n\t\t\tj = j+1\n      add_next = false\n\t\telse\n\t\t\tk = k+1\n      add_next = true\n\t\tend\n\tend\n\tp n\nend"
  },
  {
    "language": "Ruby",
    "code": "primes = (2..10000).to_a\nprimes.each do |prime|\n\tprimes.reject!{|num| num != prime and num % prime == 0}\nend\n\nwhile (number = gets.chomp.to_i) > 0\n\tcandidates = primes.select{|prime| prime <= number}\n\tb, e = 0, 0\n\tanswer = 0\n\tfor b in 0..candidates.size - 1\n\t\tfor e in b..candidates.size - 1\n\t\t\tanswer += 1 if candidates[b..e].inject(:+) == number\n\t\tend\n\tend\n\tputs answer\nend"
  },
  {
    "language": "Ruby",
    "code": "array = []\nwhile array[array.length-1]!=0\n\tarray << gets.chomp.to_i\nend\narray.pop\n\ndef prime_sifting(num)\n  range = (2..num).to_a\n  prime = 2\n  i=2\n  non_prime_arr = []\n\n  while prime <= Math.sqrt(num)\n    for i in 2..num \n      if prime * i <= num\n        non_prime_arr << prime * i\n      else\n        break\n      end\n    end \n    prime +=1\n  end\n\n  return range - non_prime_arr\nend\n\nsosu = prime_sifting(100000)\n\narray.each do |a|\n\tn,j,k = 0,0,1\n  sum = sosu[0]\n\twhile k < sosu.length && sosu[j]<=a\n    add_next = true\n    sum = add_next ? sum + sosu[k] : sum - sosu[j-1]\n\t\tif sosu[j..k].inject(:+) == a\n\t\t\tn = n+1\n      j = j+1\n      add_next = false\n\t\telsif sosu[j..k].inject(:+) > a\n\t\t\tj = j+1\n      add_next = false\n\t\telse\n\t\t\tk = k+1\n      add_next = true\n\t\tend\n\tend\n\tp n\nend"
  },
  {
    "language": "Ruby",
    "code": "def era()\n  a=Array.new(10001,false)\n  ans=[]\n  for i in 2..10000\n    if !a[i]\n      ans.push(i)\n      j=i\n      while j<=10000\n        a[j]=true\n        j+=i\n      end\n    end\n  end\n  return ans\nend\n\ndef bin_search(a,n)\n  l=0\n  r=a.length\n  while r-l>0\n    t=(r+l)/2\n    if a[t]==n\n      return true\n    elsif a[t]<n\n      l=t+1\n    else\n      r=t\n    end\n  end\n  return false\nend\n\ndef prime(a,t)\n  sum=Array.new(a.length+1,0)\n  for i in 0..a.length-1\n    sum[i+1]=sum[i]+a[i]\n  end\n  count=0\n  for s in 0..a.length\n    b=sum[s..-1]\n    if(bin_search(b,t+sum[s]))\n      count+=1\n    end\n  end\n  return count\nend\n\na=era()\nwhile true\n  t=gets.to_i\n  if t==0\n    break\n  end\n  puts prime(a,t)\nend\n    "
  },
  {
    "language": "Ruby",
    "code": "def era()\n  a=Array.new(10001,false)\n  ans=[]\n  for i in 2..10000\n    if !a[i]\n      ans.push(i)\n      j=i\n      while j<=10000\n        a[j]=true\n        j+=i\n      end\n    end\n  end\n  return ans\nend\n\ndef bin_search(a,k,n)\n  l=k\n  r=a.length\n  while r-l>0\n    t=(r+l)/2\n    if a[t]==n\n      return true\n    elsif a[t]<n\n      l=t+1\n    else\n      r=t\n    end\n  end\n  return false\nend\n\ndef sum(a)\n  s=Array.new(a.length+1,0)\n  for i in 0..a.length-1\n    s[i+1]=s[i]+a[i]\n  end\n  return s\nend\n\ndef prime(a,t,su)\n  count=0\n  for s in 0..a.length\n    if(bin_search(su,s,t+su[s]))\n      count+=1\n    end\n  end\n  return count\nend\n\na=era()\nsu=sum(a)\nwhile true\n  t=gets.to_i\n  if t==0\n    break\n  end\n  puts prime(a,t,su)\nend\n    "
  },
  {
    "language": "Ruby",
    "code": "MAX = 10000\nprimes=[]\nisPrime = Array.new(MAX+1,true)\nisPrime[0,2]=false,false\n(2..MAX).each do |i|\n  if isPrime[i]\n    primes << i \n    (i*2).step(MAX,i) do |j|\n      isPrime[j]=false\n    end\n  end\nend\nloop do\n  n = gets.to_i\n  break if n==0\n  c=0\n  (0...primes.size).each do |i|\n    break if primes[i] > n\n    sum =0\n    (i...primes.size).each do |j|\n      sum+=primes[j]\n      if sum==n\n        c+=1\n        break\n      end\n    end\n  end\n  puts c\nend"
  },
  {
    "language": "Ruby",
    "code": "MAX =10000\nisPrime = Array.new(MAX+1,true)\nisPrime[0,2]=false,false\n(2..100).each{|i|\n  if isPrime[i]\n    (i*2).step(MAX,i){|j|\n      isPrime[j]=false\n    }\n  end\n}\nprime=[]\nisPrime.each_index{|x|\n  prime << x if isPrime[x]\n}\n\nloop do\n  n = gets.to_i\n  break if n==0\n  c=0\n  (0..MAX).each{|i|\n    break if prime[i] > n\n    sum =0\n    (i..MAX).each{|j|\n      break if sum>n\n      sum+=prime[j]\n      if sum==n\n        c+=1\n        break\n      end\n    }\n  }\n  p c\nend"
  },
  {
    "language": "Ruby",
    "code": "prime_array = Array.new(10001){true}\nprime_array[0] = false\nprime_array[1] = false\n10001.times do |i|\n  next unless prime_array[i]\n  for j in 2..(10000 / i) do \n    prime_array[i * j] = false\n  end\nend\nnon_pure_primes = prime_array.map.with_index do |tf, i|\n  i if tf\nend\npure_primes = non_pure_primes.find_all{|prime| !prime.nil?}\nwhile true\n  counter = 0\n  head_index = 0\n  queue = [pure_primes[0]]\n  given_number = gets.to_i\n  break if given_number == 0\n  while true\n    queue_sum = queue.inject(0){|sum, number| sum + number}\n    counter += 1 if queue_sum == given_number\n    if queue_sum < given_number\n      head_index += 1\n      break if head_index == pure_primes.length\n      break if pure_primes[head_index] > given_number\n      queue.push(pure_primes[head_index])\n    else\n      queue.shift\n    end\n  end\n  puts counter\nend"
  },
  {
    "language": "Ruby",
    "code": "array = []\nwhile array[array.length-1]!=0\n\tarray << gets.chomp.to_i\nend\narray.pop\n\ndef prime_sifting(num)\n  range = (2..num).to_a\n  prime = 2\n  i=2\n  non_prime_arr = []\n\n  while prime <= Math.sqrt(num)\n    for i in 2..num \n      if prime * i <= num\n        non_prime_arr << prime * i\n      else\n        break\n      end\n    end \n    prime +=1\n  end\n\n  return range - non_prime_arr\nend\n\nsosu = prime_sifting(10000)\n\narray.each do |a|\n\tn,j,k = 0,0,1\n  sum = sosu[0]\n\twhile k < sosu.length && sosu[j]<=a\n    add_next = true\n    sum = add_next ? sum + sosu[k] : sum - sosu[j-1]\n\t\tif sosu[j..k].inject(:+) == a\n\t\t\tn = n+1\n      j = j+1\n      add_next = false\n\t\telsif sosu[j..k].inject(:+) > a\n\t\t\tj = j+1\n      add_next = false\n\t\telse\n\t\t\tk = k+1\n      add_next = true\n\t\tend\n\tend\n\tp n\nend"
  },
  {
    "language": "Ruby",
    "code": "# ?????????http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1257\n# ?????????????????§??????\n# ???????????¨?????????????????????????????????????????§???10 000 ?????§????´???°????±????????????????\n# ????????°???????????§??£?¶?????????°????????§??¨???????????????subsequence.rb??¨??????????????§??¢??????\narray = []\nwhile array[array.length-1]!=0\n\tarray << gets.chomp.to_i\nend\narray.pop\n\ndef prime_sifting(num)\n  range = (2..num).to_a\n  prime = 2\n  i=2\n  non_prime_arr = []\n\n  while prime <= Math.sqrt(num)\n    for i in 2..num \n      if prime * i <= num\n        non_prime_arr << prime * i\n      else\n        break\n      end\n    end \n    prime +=1\n  end\n\n  return range - non_prime_arr\nend\n\nsosu = prime_sifting(10000)\n\narray.each do |a|\n\tn,j,k = 0,0,1\n  sum = sosu[0]\n  add_next = true\n\twhile k < sosu.length && sosu[j]<=a\n    sum = add_next ? sum + sosu[k] : sum - sosu[j-1]\n\t\tif sosu[j..k].inject(:+) == a\n\t\t\tn = n+1\n      j = j+1\n      add_next = false\n\t\telsif sosu[j..k].inject(:+) > a\n\t\t\tj = j+1\n      add_next = false\n\t\telse\n\t\t\tk = k+1\n      add_next = true\n\t\tend\n\tend\n\tp n\nend"
  },
  {
    "language": "Ruby",
    "code": "require 'prime'\nMAX = 10000\ndp = [0] * 10001\nprimes = Prime.each.take_while{ |p| p < MAX }\n(1..1/0.0).each do |i|\n  break if primes[0,i].reduce(:+) > MAX\n  primes.each_cons(i) do |ps|\n    break if (sum = ps.reduce(:+)) > MAX\n    dp[sum] += 1\n  end\nend\n\nwhile n = gets.to_i\n  break if n == 0\n  puts dp[n]\nend"
  },
  {
    "language": "Ruby",
    "code": "require 'prime'\nMAX = 10000\nc = [0] * 10001\nprimes = Prime.each.take_while{ |p| p < MAX }\n(1..1/0.0).each do |i|\n  break if primes[0,i].reduce(:+) > MAX\n  primes.each_cons(i) do |ps|\n    break if (sum = ps.reduce(:+)) > MAX\n    c[sum] += 1\n  end\nend\n\nwhile n = gets.to_i\n  break if n == 0\n  puts c[n]\nend"
  },
  {
    "language": "Ruby",
    "code": "MAX =10000\nprimes=[]\nisPrime = Array.new(MAX+1,true)\nisPrime[0,2]=false,false\n(2..MAX).each do |i|\n  if isPrime[i]\n    primes << i \n    (i*2).step(MAX,i) do |j|\n      isPrime[j]=false\n    end\n  end\nend\n\nloop do\n  n = gets.to_i\n  break if n==0\n  c=0\n  (0...primes.size).each do |i|\n    break if primes[i] > n\n    sum =0\n    (i...primes.size).each do |j|\n      sum+=primes[j]\n      if sum==n\n        c+=1\n        break\n      end\n    end\n  end\n  puts c\nend"
  },
  {
    "language": "Ruby",
    "code": "require 'prime'\nprimes = Prime.each(10000).to_a\n\nwhile true\n  n = gets.to_i\n  break if n.zero?\n  res = 0\n  for i in (0...primes.size) do\n    sum = 0\n    for j in (i...primes.size) do\n      sum += primes[j]\n      if(sum == n)\n        res += 1\n        break\n      end \n      break if(sum > n)\n    end\n  end\n  puts res\nend"
  },
  {
    "language": "Ruby",
    "code": "MAX = 10000\nprimes=[]\nisPrime = Array.new(MAX+1,true)\nisPrime[0,2]=false,false\n(2..MAX).each do |i|\n  if isPrime[i]\n    primes << i \n    (i*2).step(MAX,i) do |j|\n      isPrime[j]=false\n    end\n  end\nend\nloop do\n  n = gets.to_i\n  break if n==0\n  c=0\n  (0...primes.size).each do |i|\n    break if primes[i] > n\n    sum=0\n    (i...primes.size).each do |j|\n      break if sum > n\n      sum+=primes[j]\n      if sum==n\n        c+=1\n        break\n      end\n    end\n  end\n  puts c\nend"
  },
  {
    "language": "Ruby",
    "code": "require \"prime\"\nprimes = Prime.each(10000).to_a\narr = Hash.new(0)\n0.upto(primes.length - 1){|i|\n    sum = 0\n    i.upto(primes.length - 1){|j|\n        sum += primes[j]\n        arr[sum] += 1\n    }\n}\nwhile true\n    x = gets.to_i\n    break if x == 0\n    puts arr[x]\nend\n"
  },
  {
    "language": "Ruby",
    "code": "prime_array = Array.new(10001){true}\nprime_array[0] = false\nprime_array[1] = false\n10001.times do |i|\n  next unless prime_array[i]\n  for j in 2..(10000 / i) do \n    prime_array[i * j] = false\n  end\nend\nnon_pure_primes = prime_array.map.with_index do |tf, i|\n  i if tf\nend\npure_primes = non_pure_primes.find_all{|prime| !prime.nil?}\nwhile true\n  counter = 0\n  head_index = 0\n  queue = [pure_primes[0]]\n  given_number = gets.to_i\n  break if given_number == 0\n  while true\n    queue_sum = queue.inject(0){|sum, number| sum + number}\n    counter += 1 if queue_sum == given_number\n    if queue_sum < given_number\n      head_index += 1\n      break if pure_primes[head_index] > given_number\n      queue.push(pure_primes[head_index])\n    else\n      queue.shift\n    end\n  end\n  puts counter\nend"
  },
  {
    "language": "Ruby",
    "code": "require 'prime'\n\n### constant\n\nMAX_P = 10000\n\n### main\n\npnums = Prime.each(MAX_P).to_a\n\nloop do\n  n = gets.to_i\n  break if n == 0\n  #p [\"n\", n]\n  \n  count = 0\n  i0 = i1 = 0\n  sum = 0\n\n  loop do\n    if sum < n\n      break if pnums[i1].nil? || pnums[i1] > n\n      sum += pnums[i1]\n      i1 += 1\n    elsif sum > n\n      sum -= pnums[i0]\n      i0 += 1\n    else\n      count += 1\n      sum -= pnums[i0]\n      i0 += 1\n    end\n  end    \n  p count\nend"
  },
  {
    "language": "Ruby",
    "code": "# ?????????http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1257\n# ?????????????????§??????\n# ???????????¨?????????????????????????????????????????§???10 000 ?????§????´???°????±????????????????\n# ????????°???????????§??£?¶?????????°????????§??¨???????????????subsequence.rb??¨??????????????§??¢??????\narray = []\nwhile array[array.length-1]!=0\n\tarray << gets.chomp.to_i\nend\narray.pop\n\ndef prime_sifting(num)\n  range = (2..num).to_a\n  prime = 2\n  i=2\n  non_prime_arr = []\n\n  while prime <= Math.sqrt(num)\n    for i in 2..num \n      if prime * i <= num\n        non_prime_arr << prime * i\n      else\n        break\n      end\n    end \n    prime +=1\n  end\n\n  return range - non_prime_arr\nend\n\nsosu = prime_sifting(10000)\n\narray.each do |a|\n\tn,j,k = 0,0,0\n  sum = 0\n  add_next = true\n\twhile k < sosu.length && sosu[j]<=a\n    sum = add_next ? sum + sosu[k] : sum - sosu[j-1]\n\t\tif sum == a\n\t\t\tn = n+1\n      j = j+1\n      add_next = false\n\t\telsif sosu[j..k].inject(:+) > a\n\t\t\tj = j+1\n      add_next = false\n\t\telse\n\t\t\tk = k+1\n      add_next = true\n\t\tend\n\tend\n\tp n\nend"
  },
  {
    "language": "Ruby",
    "code": "MAX =10000\nisPrime = Array.new(MAX+1,true)\nisPrime[0,2]=false,false\n(2..100).each{|i|\n  if isPrime[i]\n    (i*2).step(MAX,i){|j|\n      isPrime[j]=false\n    }\n  end\n}\nprime=[]\nisPrime.each_index{|x|\n  prime << x if isPrime[x]\n}\n \nloop do\n  n = gets.to_i\n  break if n==0\n  c=0\n  (0...prime.size).each{|i|\n    break if prime[i] > n\n    sum =0\n    (i...prime.size).each{|j|\n      break if sum>n\n      sum+=prime[j]\n      if sum==n\n        c+=1\n        break\n      end\n    }\n  }\n  puts c\nend"
  },
  {
    "language": "PHP",
    "code": "<?php\n  $isPrime = array_fill(0, 10001, true);\n  $isPrime[0] = $isPrime[1] = false;\n  for($i = 2 ; $i <=5000 ; $i++) {\n    for($j = 2 ; $i*$j <= 10000 ; $j++) {\n      $isPrime[$i*$j] = false;\n    }\n  }\n\n  $primeNumber = array();\n  foreach ($isPrime as $key => $value) {\n    if($value) {\n      $primeNumber[] = $key;\n    }\n  }\n  //$input = [2, 3, 17, 41, 20, 666, 12, 53, 0];\n  while(true) {\n    fscanf(STDIN, \"%d\", $input);\n      if($input == 0)\n        break;\n        $result = 0;\n        for($l = 0 ; $l < count($primeNumber) ; $l++) {\n          $sum = 0;\n          for($m = $l ; $m < count($primeNumber) ; $m++) {\n            $sum += $primeNumber[$m];\n            if($sum == $input) {\n              $result++;\n            }\n          }\n          unset($sum);\n        }\n        echo $result . \"\\n\";\n        unset($result);\n}"
  },
  {
    "language": "Python",
    "code": "import math\nisPrime = [1 for _ in range (10002)]\nisPrime[:2] = [0, 0]\nfor i in range(2, 101):\n    for j in range(i*i, 10001, i):\n        isPrime[j] = 0\nprime = []\nfor i in range(10001):\n    if isPrime[i] == 1:\n        prime.append(i)\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    cnt = 0\n    for i in range(len(prime) + 1):\n        sum = 0\n        for j in range(i,len(prime)):\n            sum += prime[j]\n            if sum == n:\n                cnt += 1\n                break\n            if sum > n:\n                break\n    print(cnt)\n\n        "
  },
  {
    "language": "Python",
    "code": "import math\nprimes = []\nfor p in range(2,10001):\n    for m in range(2,math.floor(math.sqrt(p)) + 1):\n        if p % m == 0:\n            break\n    else:\n        primes.append(p)\ntarg = int(input())\nwhile targ != 0:\n    ans = 0\n    for p in range(len(primes)):\n        if primes[p] > targ:\n            break\n        tempsum = 0\n        for l in range(p,len(primes)):\n            tempsum += primes[l]\n            if tempsum > targ:\n                break\n            elif tempsum == targ:\n                ans += 1\n                break\n    print(ans)\n    targ = int(input())"
  },
  {
    "language": "Python",
    "code": "ps = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999, 3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061, 3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181, 3187, 3191, 3203, 3209, 3217, 3221, 3229, 3251, 3253, 3257, 3259, 3271, 3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331, 3343, 3347, 3359, 3361, 3371, 3373, 3389, 3391, 3407, 3413, 3433, 3449, 3457, 3461, 3463, 3467, 3469, 3491, 3499, 3511, 3517, 3527, 3529, 3533, 3539, 3541, 3547, 3557, 3559, 3571, 3581, 3583, 3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643, 3659, 3671, 3673, 3677, 3691, 3697, 3701, 3709, 3719, 3727, 3733, 3739, 3761, 3767, 3769, 3779, 3793, 3797, 3803, 3821, 3823, 3833, 3847, 3851, 3853, 3863, 3877, 3881, 3889, 3907, 3911, 3917, 3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989, 4001, 4003, 4007, 4013, 4019, 4021, 4027, 4049, 4051, 4057, 4073, 4079, 4091, 4093, 4099, 4111, 4127, 4129, 4133, 4139, 4153, 4157, 4159, 4177, 4201, 4211, 4217, 4219, 4229, 4231, 4241, 4243, 4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297, 4327, 4337, 4339, 4349, 4357, 4363, 4373, 4391, 4397, 4409, 4421, 4423, 4441, 4447, 4451, 4457, 4463, 4481, 4483, 4493, 4507, 4513, 4517, 4519, 4523, 4547, 4549, 4561, 4567, 4583, 4591, 4597, 4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657, 4663, 4673, 4679, 4691, 4703, 4721, 4723, 4729, 4733, 4751, 4759, 4783, 4787, 4789, 4793, 4799, 4801, 4813, 4817, 4831, 4861, 4871, 4877, 4889, 4903, 4909, 4919, 4931, 4933, 4937, 4943, 4951, 4957, 4967, 4969, 4973, 4987, 4993, 4999, 5003, 5009, 5011, 5021, 5023, 5039, 5051, 5059, 5077, 5081, 5087, 5099, 5101, 5107, 5113, 5119, 5147, 5153, 5167, 5171, 5179, 5189, 5197, 5209, 5227, 5231, 5233, 5237, 5261, 5273, 5279, 5281, 5297, 5303, 5309, 5323, 5333, 5347, 5351, 5381, 5387, 5393, 5399, 5407, 5413, 5417, 5419, 5431, 5437, 5441, 5443, 5449, 5471, 5477, 5479, 5483, 5501, 5503, 5507, 5519, 5521, 5527, 5531, 5557, 5563, 5569, 5573, 5581, 5591, 5623, 5639, 5641, 5647, 5651, 5653, 5657, 5659, 5669, 5683, 5689, 5693, 5701, 5711, 5717, 5737, 5741, 5743, 5749, 5779, 5783, 5791, 5801, 5807, 5813, 5821, 5827, 5839, 5843, 5849, 5851, 5857, 5861, 5867, 5869, 5879, 5881, 5897, 5903, 5923, 5927, 5939, 5953, 5981, 5987, 6007, 6011, 6029, 6037, 6043, 6047, 6053, 6067, 6073, 6079, 6089, 6091, 6101, 6113, 6121, 6131, 6133, 6143, 6151, 6163, 6173, 6197, 6199, 6203, 6211, 6217, 6221, 6229, 6247, 6257, 6263, 6269, 6271, 6277, 6287, 6299, 6301, 6311, 6317, 6323, 6329, 6337, 6343, 6353, 6359, 6361, 6367, 6373, 6379, 6389, 6397, 6421, 6427, 6449, 6451, 6469, 6473, 6481, 6491, 6521, 6529, 6547, 6551, 6553, 6563, 6569, 6571, 6577, 6581, 6599, 6607, 6619, 6637, 6653, 6659, 6661, 6673, 6679, 6689, 6691, 6701, 6703, 6709, 6719, 6733, 6737, 6761, 6763, 6779, 6781, 6791, 6793, 6803, 6823, 6827, 6829, 6833, 6841, 6857, 6863, 6869, 6871, 6883, 6899, 6907, 6911, 6917, 6947, 6949, 6959, 6961, 6967, 6971, 6977, 6983, 6991, 6997, 7001, 7013, 7019, 7027, 7039, 7043, 7057, 7069, 7079, 7103, 7109, 7121, 7127, 7129, 7151, 7159, 7177, 7187, 7193, 7207, 7211, 7213, 7219, 7229, 7237, 7243, 7247, 7253, 7283, 7297, 7307, 7309, 7321, 7331, 7333, 7349, 7351, 7369, 7393, 7411, 7417, 7433, 7451, 7457, 7459, 7477, 7481, 7487, 7489, 7499, 7507, 7517, 7523, 7529, 7537, 7541, 7547, 7549, 7559, 7561, 7573, 7577, 7583, 7589, 7591, 7603, 7607, 7621, 7639, 7643, 7649, 7669, 7673, 7681, 7687, 7691, 7699, 7703, 7717, 7723, 7727, 7741, 7753, 7757, 7759, 7789, 7793, 7817, 7823, 7829, 7841, 7853, 7867, 7873, 7877, 7879, 7883, 7901, 7907, 7919, 7927, 7933, 7937, 7949, 7951, 7963, 7993, 8009, 8011, 8017, 8039, 8053, 8059, 8069, 8081, 8087, 8089, 8093, 8101, 8111, 8117, 8123, 8147, 8161, 8167, 8171, 8179, 8191, 8209, 8219, 8221, 8231, 8233, 8237, 8243, 8263, 8269, 8273, 8287, 8291, 8293, 8297, 8311, 8317, 8329, 8353, 8363, 8369, 8377, 8387, 8389, 8419, 8423, 8429, 8431, 8443, 8447, 8461, 8467, 8501, 8513, 8521, 8527, 8537, 8539, 8543, 8563, 8573, 8581, 8597, 8599, 8609, 8623, 8627, 8629, 8641, 8647, 8663, 8669, 8677, 8681, 8689, 8693, 8699, 8707, 8713, 8719, 8731, 8737, 8741, 8747, 8753, 8761, 8779, 8783, 8803, 8807, 8819, 8821, 8831, 8837, 8839, 8849, 8861, 8863, 8867, 8887, 8893, 8923, 8929, 8933, 8941, 8951, 8963, 8969, 8971, 8999, 9001, 9007, 9011, 9013, 9029, 9041, 9043, 9049, 9059, 9067, 9091, 9103, 9109, 9127, 9133, 9137, 9151, 9157, 9161, 9173, 9181, 9187, 9199, 9203, 9209, 9221, 9227, 9239, 9241, 9257, 9277, 9281, 9283, 9293, 9311, 9319, 9323, 9337, 9341, 9343, 9349, 9371, 9377, 9391, 9397, 9403, 9413, 9419, 9421, 9431, 9433, 9437, 9439, 9461, 9463, 9467, 9473, 9479, 9491, 9497, 9511, 9521, 9533, 9539, 9547, 9551, 9587, 9601, 9613, 9619, 9623, 9629, 9631, 9643, 9649, 9661, 9677, 9679, 9689, 9697, 9719, 9721, 9733, 9739, 9743, 9749, 9767, 9769, 9781, 9787, 9791, 9803, 9811, 9817, 9829, 9833, 9839, 9851, 9857, 9859, 9871, 9883, 9887, 9901, 9907, 9923, 9929, 9931, 9941, 9949, 9967, 9973,1000000]\n\n\n\n\nfrom queue import Queue\n\nwhile(True):\n    n = int(input())\n    ans = 0\n    if n == 0:\n        quit()\n    lis = Queue()\n    nowsum = 0\n    for i in ps:\n        while(nowsum > n):\n            x = lis.get()\n            nowsum -= x\n        if nowsum == n:\n            ans += 1\n        lis.put(i)\n        nowsum += i\n    print(ans)\n\n"
  },
  {
    "language": "Python",
    "code": "r = 100001\np = [1]*r\np[0] = p[1] = 0\nfor i in range(int(r**0.5)):\n\tif p[i]:\n\t\tp[2*i::i] = [0 for x in range(2*i,r,i)]\nprime = []\nfor i in range(r):\n\tif p[i]: prime.append(i)\n\t\nwhile 1:\n\tn = int(raw_input())\n\tif n == 0: break\n\tans = 0\n\ti = 0\n\twhile 1:\n\t\ts = 0\n\t\tj = i\n\t\twhile 1:\n\t\t\ts += prime[j]\n\t\t\tif s >= n:\n\t\t\t\tif s == n:\n\t\t\t\t\tans += 1\n\t\t\t\tbreak\n\t\t\tj += 1\n\t\ti += 1\n\t\tif prime[i] > n: break\n\tprint ans"
  },
  {
    "language": "Python",
    "code": "primes = [0, 0] + [1]*9999\nfor i in range(2, 101):\n    if primes[i]:\n        for j in range(i*i, 10001, i):\n            primes[j] = 0\npnums = [i for i in range(10001) if primes[i]]\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    m = n\n    while not primes[m]:\n        m -= 1\n    ans = 0\n    end = pnums.index(m)+1\n    for i in range(end):\n        tmp = 0\n        for j in range(i, end):\n            tmp += pnums[j]\n            if tmp == n:\n                ans += 1\n                break\n            if tmp > n:\n                break\n    print(ans)"
  },
  {
    "language": "Python",
    "code": "r = 100001\np = [1]*r\np[0] = p[1] = 0\nfor i in range(int(r**0.5)):\n\tif p[i]:\n\t\tp[2*i::i] = [0 for x in range(2*i,r,i)]\nprime = []\nfor i in range(r):\n\tif p[i]: prime.append(i)\n\t\nwhile 1:\n\tn = int(raw_input())\n\tif n == 0: break\n\tans = 0\n\ti = 0\n\twhile 1:\n\t\ts = 0\n\t\tj = i\n\t\twhile 1:\n\t\t\ts += prime[j]\n\t\t\tif s >= n:\n\t\t\t\tif s == n:\n\t\t\t\t\tans += 1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\tj += 1\n\t\ti += 1\n\t\tif i > n: break\n\tprint ans"
  },
  {
    "language": "Python",
    "code": "import math\nisPrime = [1 for _ in range (10002)]\nisPrime[:2] = [0, 0]\nfor i in range(2, 101):\n    for j in range(i*i, 10001, i):\n        isPrime[j] = 0\nprime = []\nfor i in range(10001):\n    if isPrime[i] == 1:\n        prime.append(i)\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    cnt = 0\n    for i in range(n):\n        sum = 0\n        for j in range(i,n):\n            sum += prime[j]\n            if sum == n:\n                cnt += 1\n                break\n            if sum > n:\n                break\n    print(cnt)\n\n        "
  },
  {
    "language": "Python",
    "code": "primes = [0, 0] + [1]*9999\nfor i in range(2, 101):\n    if primes[i]:\n        for j in range(i*i, 10001, i):\n            primes[j] = 0\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    m = n\n    while not primes[m]:\n        m -= 1\n    pnum = [i for i in range(m+1) if primes[i]]\n    ans = 0\n    for i in range(len(pnum)):\n        tmp = 0\n        for j in range(i, len(pnum)):\n            tmp += pnum[j]\n            if tmp == n:\n                ans += 1\n                break\n            if tmp > n:\n                break\n    print(ans)"
  },
  {
    "language": "Python",
    "code": "# エラトステネスの篩\ndef Eratosthenes(N):\n    ans = [True for i in range(N + 1)]\n    ans[0], ans[1] = False, False\n    \n    for i in range(int(N ** (1 / 2)) + 1):\n        if ans[i]:\n            for j in range(2 * i, N, i):\n                ans[j] = False\n    \n    return [i for i in range(N + 1) if ans[i]]\n\n# 累積和の前準備\ndef Cumulative_sum(lists):\n    ans = [0]\n    for i in lists:\n        ans.append(ans[-1] + i)\n    return ans\n\nans = []\nwhile True:\n    N = int(input())\n    if not N:\n        break\n    \n    prime_sum = Cumulative_sum(Eratosthenes(N + 10))\n    left, right = 0, 1\n    tmp_ans = 0\n        \n    while left != right:\n        # 一致していた場合\n        if prime_sum[right] - prime_sum[left] == N:\n            tmp_ans += 1\n            right += 1\n        # 入力より大きい場合\n        elif prime_sum[right] - prime_sum[left] > N:\n            left += 1\n        # 入力より小さい場合\n        else:\n            right += 1\n    \n    ans.append(tmp_ans)    \n\n# 出力\n[print(i) for i in ans]\n    \n"
  },
  {
    "language": "Python",
    "code": "def prime(n):\n    prime_flag = [0 for i in range(n + 1)]\n    prime_list = []\n    for i in range(2, n + 1):\n        if prime_flag[i] == 0:\n            prime_list.append(i)\n\n            temp = 1\n            while temp * i <= n:\n                prime_flag[temp * i] = 1\n                temp += 1\n    return prime_list\n\n\nprime_list = prime(10000)\n\nanswer = []\n\nwhile True:\n    n = int(input())\n    if not n:\n        break\n    left = 0\n    right = 0\n    count = 2\n    ans = 0\n    while True:\n        if n == count:\n            ans += 1\n\n        if left == right == len(prime_list) - 1:\n            break\n        elif count + prime_list[right + 1] <= n and right != len(prime_list) - 1:\n            right += 1\n            count += prime_list[right]\n        else:\n            if left == right:\n                left += 1\n                right += 1\n                count = prime_list[left]\n            else:\n                count -= prime_list[left]\n                left += 1\n\n    answer.append(ans)\n\nfor i in answer:\n    print(i)\n"
  },
  {
    "language": "Python",
    "code": "import sys\n\nprime_table=[i for i in range(10010)]\nprime_table[1]=0\n\nfor i in range(2,101):\n    if prime_table[i]==i:\n        k=2\n        while k*i<10010:\n            prime_table[k*i]=0\n            k+=1\n\nsum_list=[0]\nk=0\nfor i in prime_table:\n    if i!=0:\n        k+=i\n        sum_list.append(k)\n\n\nwhile True:\n    n=int(input())\n    if n==0:\n        sys.exit()\n    count=0\n    for i in sum_list:\n        if i-n in sum_list:\n            count+=1\n    print(count)"
  },
  {
    "language": "Python",
    "code": "primes = [0, 0] + [1]*996\nfor i in range(2, 32):\n    if primes[i]:\n        for j in range(i*i, 998, i):\n            primes[j] = 0\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    m = n\n    while not primes[m]:\n        m -= 1\n    pnum = [i for i in range(m+1) if primes[i]]\n    ans = 0\n    for i in range(len(pnum)):\n        tmp = 0\n        for j in range(i, len(pnum)):\n            tmp += pnum[j]\n            if tmp == n:\n                ans += 1\n                break\n            if tmp > n:\n                break\n    print(ans)"
  },
  {
    "language": "Python",
    "code": "\"\"\"\nProblem A: Sum of Consecutive Prime Numbers\nhttps://onlinejudge.u-aizu.ac.jp/problems/1257\ninput : 2 < n < 10000\n\n\"\"\"\ndef prime_list(n):\n    is_prime = [True]*(n+1)\n    is_prime[0] = False\n    is_prime[1] = False\n    for i in range(2, int(n**0.5)+1 ):\n        if not is_prime[i]:\n            continue\n        for j in range(i*2, n+1, i):\n            is_prime[j] = False\n    return [i for i in range(n+1) if is_prime[i]]\n\ndef subset_sum_problem(prime_list, length):\n\n    subset_dict = {}\n    for i in range(length):\n        now = 0\n        for j in range(i, length):\n            now += prime_list[j]\n            if not now in subset_dict:\n                subset_dict[now] = 1\n            else:\n                subset_dict[now] = subset_dict[now] + 1\n\n    return subset_dict\n\nif __name__ == '__main__':\n    prime_list = prime_list(10000)\n    length = len(prime_list)\n    subset_dict = subset_sum_problem(prime_list, length)\n    ans = []\n    while(True):\n        n = int(input())\n        if n == 0:\n            break\n        if not n in subset_dict:\n            ans.append(0)\n        else:\n            ans.append(subset_dict[n])\n\n    print(*ans, sep='\\n')\n\n"
  },
  {
    "language": "Python",
    "code": "import math\nisPrime = [1 for _ in range (10002)]\nisPrime[:2] = [0, 0]\nfor i in range(2, 101):\n    for j in range(i*i, 10001, i):\n        isPrime[j] = 0\nprime = []\nfor i in range(10001):\n    if isPrime[i] == 1:\n        prime.append(i)\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    cnt = 0\n    for i in range(n + 1):\n        sum = 0\n        for j in range(i,n + 1):\n            sum += prime[j]\n            if sum == n:\n                cnt += 1\n                break\n            if sum > n:\n                break\n    print(cnt)\n\n        "
  },
  {
    "language": "Python",
    "code": "from collections import defaultdict\n\n\nclass Primes():\n    def __init__(self, N):\n        self.N = N\n        self.prime = {i for i in range(2, self.N+1)}\n        for i in range(2, self.N+1):\n            if i in self.prime:\n                for j in range(i*2, self.N+1, i):\n                    if j in self.prime:\n                        self.prime.remove(j)\n\n    def show_primes(self):\n        return sorted(list(self.prime))\n\n\ndef main():\n    D = defaultdict(int)\n    P = Primes(10000)\n    prime = P.show_primes()\n    prime.insert(0, 0)\n    L = len(prime)\n    for i in range(1, L):\n        prime[i] += prime[i-1]\n    # prime[i]:=Primeの0番目からi番目までの素数の累積合計(i==0の時は0)\n    for i in range(L):\n        for j in range(i+1, L):\n            D[prime[j]-prime[i]] += 1\n            # 全ての10000以下の素数からなす素数列の部分列の総和を求めている\n    # L=10**3より全体計算量はL**2=10**6で十分早い\n    V = 1\n    while V != 0:\n        V = int(input())\n        if V==0:\n            continue\n        print(D[V])\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n"
  },
  {
    "language": "Python",
    "code": "p=[]\na=[0]*2+[1]*10001\nfor i in range(2,int(10000**0.5)+1):\n    if a[i]:\n        for j in range(i*i,10001,i):\n            a[j]=0\nfor i in range(2,10001):\n    if a[i]:p+=[i]\nb=[0]*5736397\nfor i in range(len(p)):\n    c=0\n    for j in range(i,len(p)):\n        c+=p[j]\n        b[c]+=1\nwhile 1:\n    n=int(input())\n    if n==0:break\n    print(b[n])"
  },
  {
    "language": "Python",
    "code": "import sys\nsys.setrecursionlimit(10000000)\nMOD = 10 ** 9 + 7\nINF = 10 ** 15\n\ndef sieve(n):\n    if n == 1:return []\n    primes = [1 if i%2 == 1 else 0 for i in range(n + 1)]\n    primes[1] = 0\n    primes[2] = 1\n    for i in range(3,n + 1,2):\n        if i * i > n:\n            break\n        if primes[i]:\n            for j in range(i * i,n + 1,i):\n                primes[j] = 0\n    return [p for p in range(2,n + 1) if primes[p] == 1]\n\nprimes = sieve(10005)\nP = len(primes)\n\ndef solve(N):\n    ans = 0\n    r = 0\n    tot = 0\n    for l in range(P):\n        if primes[l] > N:\n            break\n        while r < P and tot + primes[r] <= N:\n            tot += primes[r]\n            r += 1\n        if tot == N:\n            ans += 1\n        tot -= primes[l]\n    print(ans)\n\nwhile True:\n    N = int(input())\n    if N == 0:\n        exit()\n    solve(N)\n\n"
  },
  {
    "language": "Python",
    "code": "def solve():\n    # making a list of prime numbers\n    primes = [2, 3]\n    for n in range(5, 10000, 2):\n        l = n ** 0.5\n        for p in primes:\n            if n % p == 0:\n                break\n            if l < p:\n                primes.append(n)\n                break\n    \n    primes = [0] + primes\n    \n    from itertools import accumulate\n    ac_primes = list(accumulate(primes))\n    \n    from bisect import bisect_left, bisect_right\n    from sys import stdin\n    file_input = stdin\n    for line in file_input:\n        n = int(line)\n        if n == 0:\n            break\n        \n        low = bisect_left(ac_primes, n)\n        high = bisect_right(primes, n)\n        \n        ans = 0\n        \n        for x in ac_primes[low:high]:\n            t = x - n\n            if t == ac_primes[bisect_left(ac_primes, t)]:\n                ans += 1\n        \n        print(ans)\n\nsolve()\n"
  },
  {
    "language": "Python",
    "code": "def sieve(MAX):\n    list=[True]*(MAX+1)\n    prime=[]\n    for i in range(2,MAX+1):\n        if list[i]:\n            prime.append(i)\n            for j in range(i,MAX+1,i):  list[j]=False\n    return prime\n\ndef main():\n    prime=sieve(10000)\n    while True:\n        N=int(raw_input())\n        if(N==0):   break\n        ans=0\n        for i in range(len(prime)):\n            if prime[i]>=N:\n                if prime[i]==N: ans+=1\n                break\n            tmp=prime[i]\n            for j in range(i+1,len(prime)):\n                tmp+=prime[j]\n                if tmp>=N:\n                    if tmp==N:  ans+=1\n                    break\n        print ans\n\nif __name__=='__main__':    main();"
  },
  {
    "language": "Python",
    "code": "primes = [0, 0] + [1]*999\nfor i in range(2, 32):\n    if primes[i]:\n        for j in range(i*i, 1001, i):\n            primes[j] = 0\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    m = n\n    while not primes[m]:\n        m -= 1\n    pnum = [i for i in range(m+1) if primes[i]]\n    ans = 0\n    for i in range(len(pnum)):\n        tmp = 0\n        for j in range(i, len(pnum)):\n            tmp += pnum[j]\n            if tmp == n:\n                ans += 1\n                break\n            if tmp > n:\n                break\n    print(ans)"
  },
  {
    "language": "Python",
    "code": "p=[]\nfor i in range(2,10001):\n        for j in range(2,int(i**0.5)+1):\n            if not i%j:break\n        else:p+=[i]\nb=[0]*5736397\nfor i in range(len(p)):\n    c=0\n    for j in range(i,len(p)):\n        c+=p[j]\n        b[c]+=1\nwhile 1:\n    n=int(input())\n    if n==0:break\n    print(b[n])"
  },
  {
    "language": "Python",
    "code": "def sieve():\n    L = 50000\n    primes = []\n    isPrime = [ True for _ in range(L) ]\n    for i in range(2, L):\n        if isPrime[i]:\n            primes.append(i)\n            for j in range(i*i, L, i):\n                isPrime[j] = False\n    return primes\n\ndef isConsecutivePrime(num, idx, primes):\n    p = 0\n    while True:\n        p += primes[idx]\n        if p == num:\n            return True\n        if p > num:\n            return False\n        idx += 1\n\ndef countConsecutivePrimes(num, primes):\n    count = 0\n    for i in range(len(primes)):\n        if isConsecutivePrime(num, i, primes):\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    primes = sieve()\n    while True:\n        num = int(input())\n        if num == 0:\n            break\n        print(countConsecutivePrimes(num, primes))\n"
  },
  {
    "language": "Python",
    "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\nProblems 1257\nProblem A: Sum of Consecutive Prime Numbers\n\"\"\"\nimport math\ndef eratosthenes(n):\n    \"\"\"\n    エラトステネスのふるい\n    \"\"\"\n    primes = [i for i in range(n)]\n    primes[1] = 0 # 1は素数ではない\n    for prime in primes:\n        if prime > math.sqrt(n):\n            break\n        if prime == 0:\n            continue\n        for non_prime in range(2 * prime, n, prime): # primeの分、合成数をふるいかけていく\n            primes[non_prime] = 0 # 素数でない要素は0にする\n    prime_list = []\n    for prime in primes:\n        if prime != 0:\n            prime_list.append(prime)\n    return prime_list\n\n# 素数を生成\nprimes = eratosthenes(11000)\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    r = 1\n    ans = 0\n    for i in range(len(primes)): # 生成した素数リストから使用する範囲を決定する\n        if n <= primes[i]: # 与えられた正の整数がi番目の素数以上ならそのiを使用する範囲にする\n            r = i + 1\n            break\n    for i in range(r):\n        sum = 0\n        for j in range(i, r):\n            sum += primes[j]\n            if n == sum:\n                ans += 1\n                break\n            if sum > n:\n                break\n    print(ans)\n\n"
  },
  {
    "language": "Rust",
    "code": "extern crate core;\n\nuse std::fmt;\nuse std::cmp::{Ordering, min, max};\nuse std::fmt::{Display, Error, Formatter, Binary};\nuse std::f32::MAX;\nuse std::ops::{Add, Sub, Mul, Div, Neg, Index, IndexMut};\nuse std::collections::{BTreeMap, VecDeque, BinaryHeap, BTreeSet};\n\nfn show<T: Display>(vec: &Vec<T>) {\n    if vec.is_empty() {\n        println!(\"[]\");\n    }else {\n        print!(\"[{}\", vec[0]);\n        for i in 1 .. vec.len() {\n            print!(\", {}\", vec[i]);\n        }\n        println!(\"]\");\n    }\n}\nfn show2<T: Display>(vec: &Vec<Vec<T>>) {\n    if vec.is_empty() {\n        println!(\"[]\");\n    }else {\n        for l in vec {\n            show(l);\n        }\n    }\n}\nmacro_rules! read_line{\n    () => {{\n        let mut line = String::new();\n        std::io::stdin().read_line(&mut line).ok();\n        line\n    }};\n    (delimiter: ' ') => {\n        read_line!().split_whitespace().map(|x|x.to_string()).collect::<Vec<_>>()\n    };\n    (delimiter: $p:expr) => {\n        read_line!().split($p).map(|x|x.to_string()).collect::<Vec<_>>()\n    };\n    (' ') => {\n        read_line!(delimiter: ' ')\n    };\n    ($delimiter:expr) => {\n        read_line!(delimiter: $delimiter)\n    };\n    (' '; $ty:ty) => {\n        read_line!().split_whitespace().map(|x|x.parse::<$ty>().ok().unwrap()).collect::<Vec<$ty>>()\n    };\n    ($delimiter:expr; $ty:ty) => {\n        read_line!($delimiter).into_iter().map(|x|x.parse::<$ty>().ok().unwrap()).collect::<Vec<$ty>>()\n    };\n}\nmacro_rules! read_value{\n    () => {\n        read_line!().trim().parse().ok().unwrap()\n    }\n}\nmacro_rules! let_all {\n    ($($n:ident:$t:ty),*) => {\n        let line = read_line!(delimiter: ' ');\n        let mut iter = line.iter();\n        $(let $n:$t = iter.next().unwrap().parse().ok().unwrap();)*\n    };\n}\nmacro_rules! let_mut_all {\n    ($($n:ident:$t:ty),*) => {\n        let line = read_line!(delimiter: ' ');\n        let mut iter = line.iter();\n        $(let mut $n:$t = iter.next().unwrap().parse().ok().unwrap();)*\n    };\n}\nfn primes(upper_limit: usize) -> Vec<i32> {\n    let mut is_prime = vec![true; upper_limit + 1];\n    let mut i = 4;\n    while i <= upper_limit {\n        is_prime[i] = false;\n        i += 2;\n    }\n    i = 3;\n    while i <= upper_limit {\n        if is_prime[i] {\n            let mut j = i * i;\n            while j <= upper_limit {\n                is_prime[j] = false;\n                j += i;\n            }\n        }\n        i += 2;\n    }\n    let mut result = Vec::new();\n    for i in 2 .. is_prime.len() {\n        if is_prime[i] {\n            result.push(i as i32);\n        }\n    }\n    result\n}\nfn main() {\n    let mut prime = primes(10000);\n    for i in 1 .. prime.len() {\n        prime[i] += prime[i - 1];\n    }\n    loop {\n        let_all!(n: i32);\n        if n == 0 {\n            return\n        }\n        let mut count = 0;\n        for &to in &prime {\n            if (to > n && prime.binary_search(&(to - n)).is_ok()) || (n == to) {\n                count += 1\n            }\n        }\n        println!(\"{}\", count);\n    }\n}\n"
  }
]