[
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,b) for(int i=a;i<b;i++)\n\ntypedef vector<int> vi;\n\nint parse(string x, int &i)\n{\n\ti++;\n\tif (x[i] != '[')\n\t{\n\t\tint v = 0;\n\t\twhile (x[i] != ']')\n\t\t{\n\t\t\tv = v * 10 + x[i] - '0';\n\t\t\ti++;\n\t\t}\n\t\ti++;\n\n\t\treturn v / 2 + 1;\n\t}\n\n\tvi vec;\n\twhile (x[i] != ']')\n\t{\n\t\tvec.push_back(parse(x, i));\n\t}\n\ti++;\n\n\tsort(vec.begin(), vec.end());\n\tint ret = 0;\n\trep(i, 0, vec.size() / 2 + 1) ret += vec[i];\n\treturn ret;\n}\n\nint main()\n{\n\tint n; cin >> n;\n\trep(_n, 0, n)\n\t{\n\t\tstring s; cin >> s;\n\n\t\tint i = 0;\n\t\tcout << parse(s, i) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint election(string str){\n  if(str[1]>='0' && str[1]<='9'){\n    return stoi(str.substr(1,str.size()-2))/2+1;\n  }\n  vector<int> vec;\n  int s=1,e;\n  while(str[s]!=']'){\n    int depth=1;\n    for(e=s+1; depth>0; e++){\n      if(str[e]=='[') depth++;\n      if(str[e]==']') depth--;\n    }\n    vec.push_back( election(str.substr(s,e-s)) );\n    s=e;\n  }\n  sort(vec.begin(), vec.end());\n  int ret=0;\n  for(int i=0; i<(int)vec.size()/2+1; i++){\n    ret += vec[i];\n  }\n  return ret;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  string str;\n  for(int i=0; i<n; i++){\n    cin >> str;\n    cout << election(str) << endl;\n  }   \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstring s;\nint p;\n\nint parse() {\n  int m = 0;\n  if (p < s.size()) {\n    if (s[p] == '[') {\n      vector<int> v;\n      while (s[p] == '[') {\n        p++;\n        v.push_back(parse());\n        p++;\n      }\n      sort(begin(v), end(v));\n      for (int i = 0; i < v.size() / 2 + 1; i++) {\n        m += v[i];\n      }\n    } else {\n      while ('0' <= s[p] && s[p] <= '9') {\n        m = 10 * m + int(s[p] - '0');\n        p++;\n      }\n      m = m / 2 + 1;\n    }\n  }\n  return m;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    p = 0;\n    cout << parse() << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i,n,N) for(int i=n;i<N;i++)\n#define p(S) cout<<S<<endl\nusing namespace std;\nstring hds;\nint hdi;\nint hdfs(){\n\tvector<int> vt;\n\t//\tcout<<i<<\" : \"<<hdi<<endl;\n\tint ret=0;\n\tif(isdigit(hds[hdi])){\n\t\tint a=0;\n\t\twhile(isdigit(hds[hdi]))\ta=10*a+(hds[hdi++]-'0');\n\t\tvt.push_back(a/2+1);\n\t}\n\telse\t{\n\t\twhile(hds[hdi++]=='[')\t{\n\t\t\tvt.push_back(hdfs());\n\t\t\tif(hds[hdi]==']')hdi++;\n\t\t}\n\t}\n\tsort(vt.begin(),vt.end());\n\treturn ret=accumulate(vt.begin(),vt.begin()+vt.size()/2+1,0);\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tREP(i,0,n)\t{\n\t\thdi=0;\n\t\tcin>>hds;\n\t\tp(hdfs());\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define LOG(...) fprintf(stderr, __VA_ARGS__)\n//#define LOG(...)\n#define FOR(i, a, b) for (int i = (int)(a); i < (int)(b); ++i)\n#define RFOR(i, a, b) for (int i = (int)(b - 1); i >= (int)(a); --i)\n#define REP(i, n) for (int i = 0; i < (int)(n); ++i)\n#define RREP(i, n) for (int i = (int)(n - 1); i >= 0; --i)\n#define ALL(a) (a).begin(), (a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define EXIST(s, e) ((s).find(e) != (s).end())\n#define SORT(c) sort(ALL(c))\n#define RSORT(c) sort(RALL(c))\n#define SZ(a) ((int)(a).size())\n#define BIT(x, i) (((x) >> (i)) & 1)\n#define SQ(x) ((x) * (x))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nint dfs(string& s, int& idx) {\n    vi N;\n//    LOG(\"%s (%d)\\n  ->\", s.c_str()+idx, idx);\n    for (; idx < s.length();) {\n        if (s[idx] == '[') {\n            idx++;\n            N.push_back(dfs(s, idx));\n        } else if (s[idx] == ']') {\n            idx++;\n            SORT(N);\n            return accumulate(N.begin(), N.begin()+SZ(N)/2+1, 0);\n        } else {\n            int n = 0;\n            while (isdigit(s[idx])) {\n                n *= 10;\n                n += s[idx] - '0';\n                idx++;\n            }\n            idx++;\n            return n/2+1;\n        }\n    }\n    return N[0];\n}\n\nint main() {\n    int n;\n    cin >> n;\n    REP(_i, n) {\n        string s;\n        cin >> s;\n        int idx = 0;\n        cout << dfs(s, idx) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "//#include \"pch.h\"\n#include <iostream>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <limits.h>\n#include <string>\n#include <stack>\n#include <deque>\n#include <cmath>\n#include <bitset>\n#include <complex>\n#include <functional>\n#include <time.h>\n#include <cassert>\n#include <fstream>\n#include <stdio.h>\n#include<unordered_map>\n\ntypedef long long ll;\ntypedef std::pair<int, int> Pii;\ntypedef std::pair<long long, long long> Pll;\ntypedef std::pair<double, double> Pdd;\n\n#define rip(i, n, s) for (int i = (s);i < (int)( n ); i++)\n#define mapa make_pair\n#define all(a) a.begin(), a.end()\n#define MM << \" \" <<\n\ntemplate<typename T>\nusing MaxHeap = std::priority_queue<T>;\ntemplate<typename T>\nusing MinHeap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\n\ntemplate<typename T>\ninline bool chmax(T &a, T b) {\n\tif (a < b) {\n\t\ta = b;\n\t\treturn true;\n\t}\n\treturn false;\n}\ntemplate<typename T>\ninline bool chmin(T &a, T b) {\n\tif (a > b) {\n\t\ta = b;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\ntemplate<typename T>\nstd::vector<T> vec(int len, T elem) { return std::vector<T>(len, elem); }\ntemplate<typename T>\nvoid vdeb(std::vector<T> &da) {\n\tfor (int i = 0;i < da.size();i++) {\n\t\tif (i == da.size() - 1) std::cout << da[i];\n\t\telse std::cout << da[i] << ' ';\n\t}\n\tstd::cout << std::endl;\n}\ntemplate<typename T>\nvoid vdeb(std::vector<std::vector<T>> &da) {\n\tfor (int i = 0;i < da.size();i++) vdeb(da[i]);\n\tstd::cout << std::endl;\n}\n\nusing namespace std;\n\nstring s;\n\nll dfs(int &now){\n    if(s[now] == '['){\n        vector<int> da(0);\n        now++;\n        while(s[now] != ']'){\n            da.push_back(dfs(now));\n            // vdeb(da);\n            // cout << s[now] << endl;\n        }\n        now++;\n        sort(all(da));\n        int n = da.size();\n        ll ret = 0;\n        rip(i,n/2+1,0) ret += da[i];\n        return ret;\n    }\n    ll ret = 0;\n    while(s[now] != ']') ret = ret*10+(s[now++]-'0');\n    // now++;\n    // cout << ret << endl;\n    return ret/2+1;\n}\n\nint solve(){\n    cin >> s;\n    int now = 0;\n    return dfs(now);\n}\n\nint main(){\n    int t; cin >> t;\n    rip(i,t,0) cout << solve() << '\\n';\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <fstream>\nusing namespace std;\ninline int toInt(string s) { int v; istringstream sin(s); sin >> v; return v; }\ntemplate<class T> inline string toStr(T x) { ostringstream sout; sout << x; return sout.str(); }\ntypedef vector<int> vi;\ntypedef vector<vi>  vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define FOR(i,a,b) for(int i=(a);i<=(b);++i)\n#define REP(i,n) FOR(i,0,(n)-1)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst int INF = INT_MAX / 10;\n\nstring s;\nint p;\n\nint dfs() {\n\tvi votes;\n\twhile (p < s.size()) {\n\t\tif (s[p] == '[') {\n\t\t\tp++;\n\t\t\tvotes.push_back(dfs());\n\t\t}\n\t\telse if (isdigit(s[p])) {\n\t\t\tint num = 0;\n\t\t\twhile (s[p] != ']') {\n\t\t\t\tnum = 10 * num + (s[p] - '0');\n\t\t\t\tp++;\n\t\t\t}\n\t\t\tvotes.push_back((num+1)/2);\n\t\t}\n\t\telse if (s[p] == ']') {\n\t\t\tp++;\n\t\t\tvi v = votes;\n\t\t\tsort(ALL(v));\n\t\t\tint res = 0;\n\t\t\tFOR(i, 0, v.size() / 2) {\n\t\t\t\tres += v[i];\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tREP(i, N) {\n\t\tcin >> s;\n\t\tp = 1;\n\t\tcout << dfs() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nstring str;\nint p;\n\nint Num();\nvector<int> SS();\nint S();\n\nint Num() {\n//  cout << \"NUM:\" << str.substr(p) << endl;\n  int ans = 0;\n  while (isdigit(str[p])) {\n    int c = str[p] - '0';\n    ans = ans * 10 + c;\n    p++;\n  }\n  return ans;\n}\n\nvector<int> SS() {\n//  cout << \"SS:\" << str.substr(p) << endl;\n  vector<int> ans;\n  while (str[p] == '[') {\n    int s = S();\n    ans.push_back(s);\n  }\n  return ans;\n}\n\nint S() {\n // cout << \"S:\" << str.substr(p) << endl;\n  p++; // read [\n  if (isdigit(str[p])) {\n    int s = Num();\n    p++; // read ]\n    return s / 2 + 1;\n  } else {\n    vector<int> ss = SS();\n    sort(ss.begin(), ss.end());\n    int ans = 0;\n    for (int i = 0, len = ss.size(); i < len / 2 + 1; i++) {\n      ans += ss[i];\n    }\n    p++; //read ]\n/*    cout << ans << \"=[\";\n    for (int s : ss) {\n      cout << s << \",\";\n    }\n    cout << \"]\"<< endl;*/\n    return ans;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> str;\n    p = 0;\n    cout << S() << endl;\n  }\n  return 0;\n  \n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <ctype.h>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint l;\nchar s[10001];\n\nint dfs(void){\n\tint i, ret = 0;\n\tvector<int> v;\n\tif(isdigit(s[l + 1])){\n\t\tl++;\n\t\twhile(isdigit(s[l])){\n\t\t\tret = 0;\n\t\t\tfor(i = l;isdigit(s[i]);i++)\n\t\t\t\tret = (ret * 10) + s[i] - '0';\n\t\t\tv.push_back(ret);\n\t\t\tl = i + 1; // i番目は']'\n\t\t\tif(isdigit(s[l + 1]))\n\t\t\t\tl++;\n\t\t}\n\t\tsort(v.begin(),v.end());\n\t\tret = 0;\n\t\tfor(i = 0;i < (v.size() + 1) / 2;i++){\n\t\t\tret += (v[i] + 1) / 2;\n\t\t}\n\t\tl++;\n\t\treturn ret;\n\t}\n\telse{\n\t\twhile(s[l] == '['){\n\t\t\tl++;\n\t\t\tv.push_back(dfs());\n\t\t}\n\t\tsort(v.begin(),v.end());\n\t\tfor(i = 0;i < (v.size() + 1) / 2;i++){\n\t\t\tret += v[i];\n\t\t}\n\t\tl++;\n\t\treturn ret;\n\t}\n}\n\nint main(void){\n\tint n, i;\n\tscanf(\"%d%*c\",&n);\n\tfor(i = 0;i < n;i++){\n\t\tscanf(\"%s\",s);\n\t\tl = 0;\n\t\tprintf(\"%d\\n\",dfs());\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint pos;\nstring str;\n\nint number() {\n\n  // sentou digit\n  int ret = 0;\n  \n  while(isdigit(str[pos])) {\n    ret *= 10;\n    ret += str[pos]-'0';\n    pos ++;\n  }\n  // saigo not digit\n  return ret;\n}\n\nvector<int> rec() {\n  \n  pos ++;\n  \n  if(isdigit(str[pos])) {\n    return vector<int>(1, number()/2+1);\n  }\n  \n  if(str[pos] == '[') {\n    vector<int> ret;\n    while(str[pos] == '[') {\n      vector<int> r = rec();\n      pos ++;\n      ret.push_back(r[0]);\n    }\n    \n    sort(ret.begin(), ret.end());\n    \n    int sum = 0;\n    for(int i=0; i<(int)ret.size()/2 + 1; i++) {\n      sum += ret[i];\n    }\n    \n    return vector<int>(1, sum);\n  }\n  pos ++;\n  assert(false);\n}\n\nint main() {\n  \n  int Tc; cin >> Tc;\n  \n  for(int Tcnt=1; Tcnt<=Tc; Tcnt++) {\n    cin >> str;\n    pos = -1;\n    vector<int> ret = rec();\n    assert(ret.size() == 1);\n    cout << ret[0] << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cassert>\n\nusing namespace std;\nstring s;\nint pos;\n\nint calc(vector<int> &v){\n  sort(v.begin(),v.end());\n  int res=0,len=v.size();\n  for(int i=0;i<(len-len/2);i++){\n    res+=v[i];\n  }\n  return res;\n}\n\nint solve();\nint getNum();\n\nint getNum(){\n  int res=0;\n  while(1){\n    if('0'<=s[pos]&&s[pos]<='9'){\n      res*=10;\n      res+=(s[pos]-'0');\n      pos++;\n    }else break;\n  }\n  return res-res/2;\n}\n\nint solve(){\n  vector<int> v;\n\n  pos++;\n  if(s[pos]!='['){\n    int res=getNum();\n    pos++;\n    return res;\n  }\n\n  while(1){\n    v.push_back(solve());\n    if(s[pos]==']')break;\n  }\n\n  if(s[pos]==']')pos++;\n  else assert(0);\n\n  if(v.size()==1)return v[0];\n  else return calc(v);\n}\n\nint main(){\n  int Tc;\n  cin>>Tc;\n  while(Tc--){\n    cin>>s;\n    pos=0;\n    cout<<solve()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <functional>\n#include <vector>\n#include <utility>\n#include <cstring>\n#include <iomanip>\n#include <numeric>\n#include <cmath>\n#include <cassert>\nusing namespace std;\nusing ll = long long;\nconst int INF = 1<<30;\nconst int MOD = 1e9 + 7;\nstring s;\nint number(int &pos)\n{\n    int res = 0;\n    while(isdigit(s[pos]))\n    {\n        res *= 10;\n        res += (s[pos] - '0');\n        pos++;\n    }\n    pos++;\n    return res / 2 + 1;\n}\nint dfs(int &pos)\n{\n    vector<int> res;\n    while(s[pos] == '[')\n    {\n        pos++;\n        if(isdigit(s[pos])) res.push_back(number(pos));\n        else res.push_back(dfs(pos));\n    }\n    pos++;\n    sort(res.begin(), res.end());\n    int sum = 0;\n    for(int i = 0; i < res.size() / 2 + 1; i++) sum += res[i];\n    return sum;\n}\nsigned main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int n; cin >> n;\n    while(n--)\n    {\n        cin >> s;\n        int pos = 0;\n        cout << dfs(pos) << endl;\n    }\n    return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "                                        #include <bits/stdc++.h>\n                                        #include<iostream>\n                                        #include<cstdio>\n                                        #include<vector>\n                                        #include<queue>\n                                        #include<map>\n                                        #include<cstring>\n                                        #include<string>\n                                        #include <math.h>\n                                        #include<algorithm>\n                                    //    #include <boost/multiprecision/cpp_int.hpp>\n                                        #include<functional>\n                                #define int long long\n                                        #define inf  1000000007\n                                        #define pa pair<int,int>\n                                        #define ll long long\n                                        #define pal pair<double,pa>\n                                        #define ppa pair<int,int>\n                                        #define ppap pair<int,pa>\n                                        #define ssa pair<string,int>\n                                        #define  mp make_pair\n                                        #define  pb push_back\n                                        #define EPS (1e-12)\n                                        #define equals(a,b) (fabs((a)-(b))<EPS)\n                                  #define VI vector<int>\n                                        using namespace std;\n                                        \n                                  class pas{\n                                    \tpublic:\n                                    \tint x,y;\n                                    \tpas(int x=0,int y=0):x(x),y(y) {}\n                                    \tpas operator + (pas p) {return pas(x+p.x,y+p.y);}\n                                    \tpas operator - (pas p) {return pas(x-p.x,y-p.y);}\n                                    \tpas operator * (int a) {return pas(x*a,y*a);}\n                                    \tpas operator / (int a) {return pas(x/a,y/a);}\n                                    //\tdouble absv() {return sqrt(norm());}\n                                    \tint norm() {return x*x+y*y;}\n                                    \tbool operator < (const pas &p) const{\n                                   \t\treturn x != p.x ? x<p.x: y<p.y;\n                                   \t}\n                                  //\t\tbool operator < (const pas &p) const{\n                                    //\t\treturn y != p.y ? y<p.y: x<p.x;\n                                    //\t}\n                                    \tbool operator == (const pas &p) const{\n                                    \t\treturn x==p.x && y==p.y;\n                                    \t}\n                                    };\n\n                                        class Point{\n                                        \tpublic:\n                                        \tdouble x,y;\n                                        \tPoint(double x=0,double y=0):x(x),y(y) {}\n                                        \tPoint operator + (Point p) {return Point(x+p.x,y+p.y);}\n                                        \tPoint operator - (Point p) {return Point(x-p.x,y-p.y);}\n                                        \tPoint operator * (double a) {return Point(x*a,y*a);}\n                                        \tPoint operator / (double a) {return Point(x/a,y/a);}\n                                        \tdouble absv() {return sqrt(norm());}\n                                        \tdouble norm() {return x*x+y*y;}\n                                        \tbool operator < (const Point &p) const{\n                                        \t\treturn x != p.x ? x<p.x: y<p.y;\n                                        \t}\n                                        \tbool operator == (const Point &p) const{\n                                        \t\treturn fabs(x-p.x)<EPS && fabs(y-p.y)<EPS;\n                                        \t}\n                                        };\n                                        typedef Point Vector;\n                                 #define pl pair<int,pas>\n                                        struct Segment{\n                                        Point p1,p2;\n                                        };\n                                        \nstruct star{\nSegment se[5];\n};\n                                         double dot(Vector a,Vector b){\n                                        \treturn a.x*b.x+a.y*b.y;\n                                        }\n                                        double cross(Vector a,Vector b){\n                                        \treturn a.x*b.y-a.y*b.x;\n                                        }\n                                    \n            bool parareru(Point a,Point b,Point c,Point d){\n            //\tif(abs(cross(a-b,d-c))<EPS)cout<<\"dd \"<<cross(a-b,d-c)<<endl;\n            \treturn abs(cross(a-b,d-c))<EPS;\n            }\n            double distance_ls_p(Point a, Point b, Point c) {\n              if ( dot(b-a, c-a) < EPS ) return (c-a).absv();\n              if ( dot(a-b, c-b) < EPS ) return (c-b).absv();\n              return abs(cross(b-a, c-a)) / (b-a).absv();\n            }\n            bool is_intersected_ls(Segment a,Segment b) {\n            \tif(a.p1==b.p1||a.p2==b.p1||a.p1==b.p2||a.p2==b.p2) return false;\n            \tif(parareru((a.p2),(a.p1),(b.p1),(b.p2))&&parareru((a.p2),(a.p1),(b.p1),(b.p1))){\n            //\t\tcout<<\"sss\"<<endl;\n            \t\tif(dot(a.p1-b.p1,a.p1-b.p2)<EPS) return true;\n            \t\tif(dot(a.p2-b.p1,a.p2-b.p2)<EPS) return true;\n            \t\tif(dot(a.p1-b.p1,a.p2-b.p1)<EPS) return true;\n            \t\tif(dot(a.p1-b.p2,a.p2-b.p2)<EPS) return true;\n            \t\treturn false;\n            \t}\n              else return ( cross(a.p2-a.p1, b.p1-a.p1) * cross(a.p2-a.p1, b.p2-a.p1) < EPS ) && ( cross(b.p2-b.p1, a.p1-b.p1) * cross(b.p2-b.p1, a.p2-b.p1) < EPS );\n            }\n            double segment_len(Segment a){\n            \t\n            \treturn (a.p1-a.p2).absv();\n            }\n            double segment_dis(Segment a,Segment b){\n            \tif(is_intersected_ls(a,b))return 0;\n            \tdouble r=distance_ls_p(a.p1, a.p2, b.p1);\n            \tr=min(r,distance_ls_p(a.p1, a.p2, b.p2));\n            \tr=min(r,distance_ls_p(b.p1, b.p2, a.p2));\n            \tr=min(r,distance_ls_p(b.p1, b.p2, a.p1));\n            \treturn r;\n            }\n            Point intersection_ls(Segment a, Segment b) {\n              Point ba = b.p2-b.p1;\n              double d1 = abs(cross(ba, a.p1-b.p1));\n              double d2 = abs(cross(ba, a.p2-b.p1));\n              double t = d1 / (d1 + d2);\n             \n              return a.p1 + (a.p2-a.p1) * t;\n            }\n\t\t\tpair<Point,Point> circle_intersection(Point c1,double r1,Point c2,double r2){\n\t\t\t\tdouble d=(c1-c2).absv();\n\t\t\t\tdouble h=(r1*r1-r2*r2+d*d)/2.0/d;\n\t\t\t\tdouble l=sqrt(r1*r1-h*h);\n\t\t\t//\tcout<<d<<\" \"<<h<<\" \"<<l<<endl;\n\t\t\t\tPoint asi=c1+(c2-c1)*h/((c2-c1).absv());\n\t\t\t\tVector r1r2=(c2-c1)/((c2-c1).absv());\n\t\t\t\tVector sui={r1r2.y,-r1r2.x};\n\t\t\t//\tcout<<sui.x<<\" \"<<sui.y<<endl;\n\t\t\t\tpair<Point,Point> z=mp(asi+sui*l,asi-sui*l);\n\t\t\t\tif(z.first.x>z.second.x) swap(z.first,z.second);\n\t\t\t\treturn z;\n\t\t\t}\ndouble dist(star s1,star s2){\n\tdouble ans=10000000000.0;\n\t\n\tfor(int i=0;i<5;i++)for(int j=0;j<5;j++){\n\t\tif( is_intersected_ls(s1.se[i],s2.se[j])) {\n\t\t\t\n//\t\t\tcout<<s1.se[i].p1.x<<\" \"<<s1.se[i].p1.y<<endl;\n//\t\t\tcout<<s1.se[i].p2.x<<\" \"<<s1.se[i].p2.y<<endl;\n//\t\t\tcout<<s2.se[j].p1.x<<\" \"<<s2.se[j].p1.y<<endl;\n//\t\t\tcout<<s2.se[j].p2.x<<\" \"<<s2.se[j].p2.y<<endl;\n\t\treturn 0.0;\n\t\t}\n\t\tans=min(ans,segment_dis(s1.se[i],s2.se[j]));\n//\t\tcout<<\"   \"<<i<<\" \"<<j<<\" \"<<segment_dis(s1.se[i],s2.se[j])<<endl;\n\t}\n\treturn ans;\n}\nint gcd(int x,int y){\n\tif(x<y) return gcd(y,x);\n\tif(x==y) return x;\n\tif(x%y==0) return y;\n\treturn gcd(y,x%y);\n}\nvector<int> G[100000];\nint kazu[100000];\nstring s;\nint it;\nint cn;\nint ch(){\n\tint num=cn;\n\tcn++;\n//\tcout<<it<<\"    \"<<num<<endl;\n\tif(s[it]>='0' && s[it]<='9'){\n\tint r=0;\n\t\twhile(s[it]>='0' && s[it]<='9'){\n\t\t\tr*=10;\n\t\t\tr+= s[it]-'0';\n\t\t\tit++;\n\t\t}\n\t\t//cout<<r<<endl;\n\t\tkazu[num]=(r+1)/2;\n\t\t\n\t\treturn num;\n\t\t\n\t}\n\telse{\n\t\tit++;\n\t\t\n\t\twhile(s[it]!=']'){\n\t\tint r=\tch();\n\t\t\tG[num].pb(r);\n\t\t//\tcout<<num<<\" \"<<r<<endl;\n\t\t}\n\t\t\n\t\t\n\t\tit++;\n\t\treturn num;\n\t}\n\t\n}\n\nint saiki(int r){\n\tif(kazu[r]>=0) return kazu[r];\n\tvector<int> ve;\n\tfor(auto v:G[r]){\n\t\tve.pb(saiki(v));\n\t\t\n\t}\n\tsort(ve.begin(),ve.end());\n\tint l=ve.size();\n\tint an=0;\n\tfor(int i=0;i<(l+1)/2;i++)an+=ve[i];\n\tkazu[r]=an;\n\treturn an;\n\t\n}\n\n\n     signed main(){\nint nt;\n     cin>>nt;\n     \tfor(int qw=0;qw<nt;qw++){\n     \t\tcin>>s;\n     \t\t\n     \t\tfor(int i=0;i<100000;i++)G[i].clear(),kazu[i]=-1;\n     \t\t\n     \t\tit=0,cn=1;\n     \t\tch();\n     \t\tcout<<saiki(1)<<endl;\n     \t\t\n     \t\t\n     \t}\n \n   \n           \treturn 0;\n           }\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#define S str[ima]\nusing namespace std;\nint ima;\nstring str;\n\nint suji(){\n  int n = 0;\n  while('0'<=S && S <= '9'){\n    n*=10;\n    n+=S-'0';\n    ima++;\n  }\n\n  return n;\n}\n    \nint siki(){\n  vector <int> num;\n  int n=0;\n  while(S=='['||('0'<=S && S<='9')){\n    if(ima == str.size()) break;\n    //   cout << ima << endl;\n    if(S == '['){  \n    ima++;\n    num.push_back(siki());\n    ima++;\n    }\n    else if('0'<=S && S<='9'){\n      n = suji();\n      //cout << n <<\" \"<<S<<endl;\n      return n; \n    }\n  }\n  \n  int ans = 0;\n  sort(num.begin(),num.end());\n  for(int j=0;j<num.size()/2+1;j++){\n    if(num.size() == 0) break;\n    ans += num[j]/2+1;\n  }\n  // cout << ans << endl;\n  return ans*2-1;\n}  \n\t\n\n\n    \nint main() {\n  int n;\n  cin >> n;\n  for(int i=0;i<n;i++){\n    cin >> str;\n    ima = 0;\n    int ans = siki();\n    cout << ans/2+1 <<endl;\n    \n  }\n\n  return 0;\n}\n    \n    \n    "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <cstdlib>\n#include <cstdio>\n#include <set>\n#include <map>\nusing namespace std;\ntypedef string::const_iterator State;\n\nstring s;\nint dfs(State &begin){\n\tint i,j;\n\tvector<int> list;\n\tbegin ++;\n\tif(isdigit(*begin)){\n\t\tint x = 0;\n\t\tfor(;isdigit(*begin);++begin) x = x*10 + *begin-'0';\n\t\tbegin ++;\n\t\treturn x/2+1;\n\t}\n\twhile(*begin == '[') list.push_back(dfs(begin));\n\tbegin ++;\n\tsort(list.begin(), list.end());\n\tint ret = 0;\n\tfor(int i=0;i<list.size()/2+1;i++) ret += list[i];\n\treturn ret; \n}\n\nint n;\nmain(){\n\tint h,w,i,j;\n\tcin >> n;\n\twhile(n--){\n\t\tcin >> s;\n\t\tState begin = s.begin();\n\t\tcout << dfs(begin) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nint main(){\n    int n;\n    string str;\n    cin>>n;\n    while(n--){\n        cin>>str;\n        int lev=0,level=0,i,last=0;\n        string num;\n        for(i=0;i<str.length();i++)\n            if(str[i]!='[')\n                break;\n        level=i;\n        vector<vector<int> >vec;\n        vector<int>v,las,peo;\n        vec.resize(level,v);\n        las.resize(level,0);\n        peo.resize(level,0);\n        for(int i=0;i<str.length();i++){\n            if(str[i]=='['){\n                lev++;\n            }\n            else if(str[i]==']'){\n                if(lev==level){\n                    last = stoi (num);\n                    vec[lev-1].push_back(last);\n                }\n                else{\n                    int tem=0;\n                    vector<int>te;\n                    int temp=0;\n                    for(;las[lev-1]<vec[lev].size();las[lev-1]++){\n                        te.push_back(vec[lev][las[lev-1]]);\n                        temp++;\n                    }\n                    sort(te.begin(),te.end());\n                    for(int ii=0;ii<(temp+1)/2;ii++)\n                    {\n                        if(lev==level-1)tem+=(te[ii]+1)/2;\n                        else tem+=te[ii];\n                    }\n                    vec[lev-1].push_back(tem);\n                }\n                num=\"\";\n                lev--;\n            }\n            else\n                num+=str[i];\n        }\n        cout<<vec[0][0]<<endl;\n    }\n    \n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<string>\n#include<iostream>\nusing namespace std;\nint rec(string s){\n  priority_queue<int,vector<int>,greater<int> > que;\n  bool flg=true;\n  stack<int> sta;\n  for(int i=0;i<s.size();i++){\n    if(s[i]=='['){ sta.push(i); flg=false;}\n    if(s[i]==']'){ int tmp=sta.top(); sta.pop();\n      if(sta.empty()){ que.push(rec(s.substr(tmp+1,i-tmp-1))); \n        //        cout << \"s.substr : \" << s.substr(tmp+1,i-tmp-1) << endl;\n        //        cout << \"kakko : \" << rec(s.substr(tmp+1,i-tmp-1)) << endl;}\n    }\n  }\n}\nif(flg){ return ((atoi(s.c_str())+1)/2);} // cout << \"atoi : \" << (atoi(s.c_str())+1)/2 << endl;}\nint gott = que.size();\nint res=0;\nfor(int i=0;i<((gott+1)/2);i++){\n  //cout << \"que.pop \" << i << \" : \" << que.top() << endl;\n  res+=que.top(); que.pop();\n}\nreturn res;\n\n\n}\n\n\nint main(){\n  string s;\n  int N;\n  scanf(\"%d\",&N);\n  for(int i=0;i<N;i++){\n    cin >> s;\n    printf(\"%d\\n\",rec(s));\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for (int i = a; i < (b); ++i)\n#define trav(a, x) for (auto& a : x)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nstring s;\nint dfs(int &pos, bool &is_leaf) {\n\tvector<int> tok;\n\tbool loc_is_leaf = false;\n\n\t// consume [\n\tpos++;\n\t//cerr << \"Consume expect [: \" << s[pos - 1] << \", next: \" << s[pos] << endl;\n\n\twhile (s[pos] != ']') {\n\t\tif (isdigit(s[pos])) {\n\t\t\t//cerr << \"Branch 1 \" << pos << endl;\n\t\t\tstring x;\n\t\t\twhile (isdigit(s[pos])) x += s[pos++];\n\t\t\tpos++;\n\t\t\t//cerr << \"Returns: \" << stoi(x) << endl;\n\t\t\tis_leaf = true;\n\t\t\treturn stoi(x);\n\t\t} else if (s[pos] == '[') {\n\t\t\t//cerr << \"Branch 2 \" << pos << endl;\n\t\t\tint v;\n\t\t\ttok.push_back(v = dfs(pos, loc_is_leaf));\n\t\t\t//cout << v << endl;\n\t\t}\n\t}\n\n\t// consume ]\n\tpos++;\n\n\tsort(all(tok));\n\tint x = 0;\n\n\t//cout << \"Tokens: \";\n\t//for (int h : tok) cout << h << \" \";\n\t//cout << endl;\n\n\tfor (int i = 0; i <= tok.size() / 2; i++) {\n\t\tif (loc_is_leaf) x += (tok[i] + 1) / 2;\n\t\telse x += tok[i];\n\t}\n\treturn x;\n}\n\nint main() {\n\tint n; cin >> n;\n\trep(i, 0, n) {\n\t\tcin >> s;\n\t\tint p = 0; bool dummy = false;\n\t\tcout << dfs(p, dummy) << endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <iostream>\n#include <map>\n#include <set>\n#include <list>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <queue>\n#include <iomanip>\n\n#define SIZE 101\n#define INF 100000000\n\nusing namespace std;\n\n\ntypedef pair<int, int> Pa;\n\nstring s;\nchar c[100];\nint inde = 0;\n\nint func(){\n\tvector<int> v;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (isdigit(s[inde])) {\n\t\t\tint k = 0;\n\t\t\twhile (isdigit(s[inde])) {\n\t\t\t\tc[k] = s[inde];\n\t\t\t\tk++;\n\t\t\t\tinde++;\n\t\t\t}\n\t\t\t/*for (int j = 0; j < 100; j++) {\n\t\t\t\tcerr << c[k];\n\t\t\t}*/\n\n\t\t\tc[k] = '\\0';\n\n\t\t\tv.push_back((atoi(c) + 1) / 2);\n\n\t\t} else if (s[inde] == '[') {\n\t\t\tinde++;\n\t\t\tv.push_back(func());\n\n\t\t} else if (s[inde] == ']') {\n\t\t\tvector<int> v2 = v;\n\t\t\tsort(v2.begin(), v2.end());\n\n\t\t\tint res = 0;\n\t\t\tfor (int i = 0; i <= v.size() / 2; i++) {\n\t\t\t\tres += v2[i];\n\t\t\t}\n\t\t\tinde++;\n\t\t\treturn (res);\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tinde = 1;\n\t\tint res = func();\n\t\tcout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef string::const_iterator itr;\n\n//<num>\n//終了後イテレータは数字の次をさしていることに注意\nint num(itr &begin){\n\tint res = 0;\n\n\twhile(isdigit(*begin)){\n\t\tres *= 10;\n\t\tres += *begin - '0';\n\t\tbegin++;\n\t}\n\n\treturn res;\n}\n\n//再帰を書くということはグラフを表現することと同義\n\n//BNFで記述すると再帰になるので再帰で実装する\n//<expr> ::= [<left> <expr> <right>]*\nint expr(itr &begin){\n\tbegin++; //skip \"[\"\n\tint ans;\n\tif(isdigit(*begin)){ //<expr> == <expr> つまり <expr> := <num>\n\t\tint res = num(begin);\n\t\tans = res / 2 + 1;\n\t}\n\telse{ //otherwise\n\t\tvector<int> v; //階層ごとにベクターを生成\n\t\twhile(*begin == '[') v.push_back(expr(begin)); //<right>は下の階層へ潜る演算子, <left>は上の階層に浮上する演算子、潜ったタイミングで要素を追加、浮上したタイミングで計算\n\t\tsort(v.begin(), v.end());\n\t\tint res = 0;\n\t\tfor(int i = 0; i < (int)v.size() / 2 + 1; i++) res += v[i];\n\t\tans = res;\n\t}\n\n\n\tbegin++; //skip \"]\"\n\treturn ans;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tstring s;\n\t\tcin >> s;\n\t\titr begin = s.begin();\n\t\tcout << expr(begin) << endl;\n\t}\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <cmath>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <deque>\n#include <algorithm>\n\nusing namespace std;\ntypedef long long int ll;\ntypedef pair<int, int> P;\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor(int l=0; l<n; l++){\n\t\tstring s;\n\t\tcin>>s;\n\t\tint m=s.length();\n\t\tint d=0;\n\t\twhile(s[d]=='['){\n\t\t\td++;\n\t\t}\n\t\tP used[10000];\n\t\tfill(used, used+10000, P(0, 0));\n\t\tvector<int> G[10000];\n\t\tint t=1, p1;\n      bool e=0;\n\t\tfor(int k=d-1; k>=0; k--){\n\t\t\tvector<int> v;\n\t\t\tfor(int i=0; i<m; i++){\n\t\t\t\tif(s[i]=='[' && used[i]==P(0, 0)){\n\t\t\t\t\tp1=i, e=1;\n\t\t\t\t}else if(s[i]==']' && used[i]!=P(0, 0)){\n\t\t\t\t\tif(used[i].second==k+1){\n                      v.push_back(used[i].first);\n                    }\n\t\t\t\t}else if(s[i]==']' && used[i]==P(0, 0) && e==1){\n                  e=0;\n\t\t\t\t\tused[i]=P(t, k);\n\t\t\t\t\tused[p1]=P(t, k);\n\t\t\t\t\tfor(int j=0; j<v.size(); j++){\n\t\t\t\t\t\tG[t].push_back(v[j]);\n\t\t\t\t\t}\n\t\t\t\t\tv.clear();\n\t\t\t\t\tt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<int> num;\n\t\tnum.push_back(0);\n\t\tstring ns;\n\t\tfor(int i=0; i<m; i++){\n\t\t\tif(s[i]!='[' && s[i]!=']'){\n\t\t\t\tns+=s[i];\n\t\t\t}else{\n\t\t\t\tif(!ns.empty()){\n\t\t\t\t\tint x=stoi(ns);\n\t\t\t\t\tnum.push_back(x);\n\t\t\t\t\tns.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans[10000]={};\n\t\tfor(int i=1; i<t; i++){\n\t\t\tif(G[i].empty()){\n\t\t\t\tans[i]=(num[i]+1)/2;\n\t\t\t}else{\n\t\t\t\tvector<int> v;\n\t\t\t\tfor(int j=0; j<G[i].size(); j++){\n\t\t\t\t\tv.push_back(ans[G[i][j]]);\n\t\t\t\t}\n\t\t\t\tsort(v.begin(), v.end());\n\t\t\t\tfor(int j=0; j<=(v.size()/2); j++){\n\t\t\t\t\tans[i]+=v[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ans[t-1]);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<string>\nusing namespace std;\nstring str;\nint pos;\n\nint accum(int depth){\n  depth++;\n  int ret = 0;\n  vector<int> vec;\n  if(isdigit(str[pos])){\n    //cout<<\"LKJLKJLKJ\"<<endl;\n    while(isdigit(str[pos]) == true){\n      //cout<<\"str[pos] : \"<<str[pos]-'0'<<endl;\n      ret=(ret*10)+str[pos++]-'0';\n    }\n    \n    return (ret/2)+1;\n  }else{\n    while(str[pos] == '['){\n      pos++;\n      //cout<<\"pos \"<<pos<<endl;\n      //cout<<\"depth \"<<depth<<endl;\n      vec.push_back(accum(depth));\n      pos++;\n    }\n    \n    ///while(str[pos++] == ']');\n    sort(vec.begin(),vec.end());\n    for(int i=0;i<(vec.size()/2)+1;i++){\n      //cout<<\"vec \"<<i<<\" \"<<vec[i]<<endl;\n      ret+=vec[i];\n    }\n    return ret;\n  }\n}\n\nint main(){\n  int n,ans;\n  cin>>n;\n  for(int i=0;i<n;i++){\n    pos=0;\n    cin>>str;\n    ans = accum(-1);\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iomanip>\n#include <utility>\n#include <cstdlib>\n#include <sstream>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <ctime>\n#include <queue>\n#include <deque>\n#include <cmath>\n#include <stack>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define REP(i,m,n) for(int i=(m);i<(n);i++)\n#define ALL(a)  (a).begin(),(a).end()\n#define pb push_back\n#define sz size()\n\n\n\nstring pre(string s){   // \"][\" を空白に置き換え\n    string b=\"\";\n    rep(i,s.sz-1){\n        if(s[i]==']' && s[i+1]=='['){\n            b+=' ';\n            i++;\n        }\n        else{\n            b+=s[i];\n        }\n    }\n    b+=s[s.sz-1];\n    return b;\n}\n\n\nstring solve(int n,bool check,string s){\n    n++;\n    string tmp[100]={};\n\n    int count=0;\n    REP(j,n,s.sz){\n        if(s[j]!=']'){\n            if(s[j]!=' '){\n                tmp[count]+=s[j];\n            }\n            else{\n                count++;\n            }\n        }\n        else break;\n    }\n    vi a;\n    rep(i,count+1){\n        a.pb(stoi(tmp[i]));\n    }\n    sort(ALL(a));\n    \n    int sum=0;\n    rep(i,count/2+1){\n        if(check==false)\n            sum+=a[i]/2+1;\n        else\n            sum+=a[i];\n    }\n    return to_string((sum));\n}\n\n\nstring delSpace(string s){  // \"] [\" を \"][\" に置き換え\n    string ret=\"\";\n    rep(i,s.sz-2){\n        if(s[i]==']' && s[i+1]==' ' && s[i+2]=='['){\n            ret+=\"][\";\n            i+=2;\n        }\n        else{\n            ret+=s[i];\n        }\n    }\n    ret+=s[s.sz-2];\n    ret+=s[s.sz-1];\n    return ret;\n}\n\n\nint main(){\n    int t;\n    cin>>t;\n    \n    rep(times,t){\n        string s;\n        cin>>s;\n        int check=false;\n        s=pre(s);\n        while(1){\n            if(s.find(\"[\",0)==-1)break;\n\n            string n=\"\";\n    \n            rep(i,s.sz){\n                if(s[i+1]>='0' && s[i+1]<='9'){\n                    n+=solve(i,check,s);\n                    while(s[i]!=']')i++;\n                }\n                else{\n                    n+=s[i];\n                }\n            }\n            s=n;\n            check=true;\n        }\n        cout<<s<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\nclass D {\npublic:\n\tint sets;\n\tint n;\n\tlist<D*> child;\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n\t~D() {\n\t}\n};\n\nchar c[10002];\n\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') {\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; //'['\n\t\t\tsum += get(dd, l);\n\t\t\td->child.push_back(dd);\n\t\t\td->sets++;\n\t\t\tl++; //']'\n\t\t}\n\t\td->n = sum;\n\t} else {\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num;\n\t\treturn num;\n\t}\n\treturn sum;\n}\n\nint ans(D *d) {\n\t//cout << \"in\" << endl;\n\tif (d->sets == 0) {\n\t\t//cout << \"okk\" << endl;\n\t\treturn d->n / 2 + 1;\n\t}\n\t//else\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\td->child.sort(func);\n\t//cout << \"sets::\" << d->sets << endl;\n\tlist <int> ilist;\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets; i++) {\n\t\tD *cur = *it;\n\t\t//cout << i << \":::\" << cur->n << endl;\n\t\tilist.push_back(ans(cur));\n\t\tit++;\n\t}\n\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\tint sum = 0;\n\tauto iit = ilist.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tsum += *iit;\n\t\tiit++;\n\t}\n\treturn sum;\n}\n\n\t\nvoid solve() {\n\tint n;\n\tint l;\n\tcin >> n;\n\t//cout << n << endl;\n\tcin >> c;\n\t//cout << c << endl;\n\tD *dx = new D();\n\tl = 1;\n\tget(dx, l);\n\tcout << ans(dx);\n\t//cout << \"hoge\" << endl;\n\tdelete dx;\n\tfor (int i = 1; i < n; i++) {\n\t\tcout << endl;\n\t\tcin >> c;\n\t\t//cout << c << endl;\n\t\tD *d = new D();\n\t\tl = 1;\n\t\tget(d, l);\n\t\tcout << ans(d);\n\t\t//cout << \"hoge\" << endl;\n\t\tdelete d;\n\t}\n}\n\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include<vector>\n#include<algorithm>\n#include<iostream>\n#include<string>\nusing namespace std;\n\nint solve(string s){\n  if(s[1]!='['){\n    string tmp = s.substr(1,s.size()-2);\n    int res = atoi(tmp.c_str()) ;\n    return res/2 + res%2;\n  }\n  int c=0;\n  int pre = 1;\n  vector<int> list;\n  for(int i=1;i<s.size()-1;i++){\n    if(s[i]=='['){\n      c++;\n    }else if(s[i]==']'){\n      c--;\n    }\n    if(c==0&&s[i]==']'){\n      list.push_back(solve(s.substr(pre,(i-pre+1))));\n      pre=i+1;\n    }\n  }\n  sort(list.begin(),list.end());\n  int ans = 0;\n  for(int i=0;i<list.size()/2;i++){\n    ans += list[i];\n  }\n  if(list.size()%2==1){\n    ans+=list[list.size()/2];\n  }\n  return ans;\n}\n\n\nint main(){\n  int n;\n  cin>>n;\n  for(int i=0;i<n;i++){\n    string s;\n    cin>>s;\n    cout<<solve(s)<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <cstdlib>\n\nusing namespace std;\n\n#define DEBUG 0\n\nint parseInt2(int *now,string data){\n\tint nextPosition = data.find(\"]\",*now);\n\n\tint returnNum = atoi(data.substr(*now,nextPosition-*now).c_str());\n\tif(DEBUG)cout<<\"parseInt\"<< atoi(data.substr(*now,nextPosition-*now).c_str())<<endl;\n\tif(DEBUG)cout<<\"now=\"<<*now<<endl;\n\tif(DEBUG)cout<<\"nextPosition=\"<<nextPosition<<endl;\n\t*now = nextPosition+1;\n\treturn returnNum;\n}\n\n\nint main(){\n\n\tint n;\n\tcin>>n;\n\tint ans=0;\n\n\tfor(int i=0;i<n;i++){\n\n\t\tstring data;\n\n\t\tcin>>data;\n\n\t\tstring nextData;\n\t\tnextData=\"\";\n\t\tans=0;\n\t\tint first=0;\n\n\t\twhile(1){\n\t\t\tif(data.find_last_of(\"[\")==0 && data.find_first_of(\"]\")==data.size()-1){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j=0;j<data.size();j++){\n\t\t\t\tif(data.at(j)==']'){\n\t\t\t\t\tnextData+=\"]\";\n\t\t\t\t}else if(data.at(j)=='['&& data.at(j+1)=='['){\n\t\t\t\t\tnextData+=\"[\";\n\t\t\t\t}else{\n\t\t\t\t\tj++;\n\t\t\t\t\tpriority_queue<int, vector<int> , greater<int> > q;\n\t\t\t\t\twhile(1){\n\t\t\t\t\t\tq.push(parseInt2(&j,data));\n\t\t\t\t\t\tif(data.at(j)==']'){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tint pushNum=0;\n\t\t\t\t\tint nowSize = q.size();\n\t\t\t\t\tfor(int k=0;k<nowSize/2+1;k++){\n\t\t\t\t\t\tif(first==0){\n\t\t\t\t\t\t\tif(DEBUG)cout<<\"q.top()/2+1=\"<<q.top()/2+1<<endl;\n\t\t\t\t\t\t\tpushNum += q.top()/2+1;\n\t\t\t\t\t\t\tans += q.top()/2+1;\n\t\t\t\t\t\t\tq.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(DEBUG)cout<<\"q.top()=\"<<q.top()<<endl;\n\t\t\t\t\t\t\tpushNum += q.top();\n\t\t\t\t\t\t\tans += q.top();\n\t\t\t\t\t\t\tq.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(DEBUG)cout<<\"pushNum=\"<<pushNum<<endl;\n\t\t\t\t\tnextData+=to_string(pushNum);\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(DEBUG)\tcout<<\"nextData =\" <<nextData<<endl;\n\t\t\tdata = nextData;\n\t\t\tnextData=\"\";\n\t\t\tfirst++;\n\t\t}\n\t\tif(DEBUG)cout<<\"ans0=\"<<data.substr(1,data.size()-2)<<endl;\n\t\tcout<<data.substr(1,data.size()-2)<<endl;\n\t\tif(DEBUG)cout<<endl;\n\t}\n\n\n\treturn 0;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdlib.h>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <ctype.h>\n#include <math.h>\n\nusing namespace std;\n\nchar c[10001];\nint p;\n\nint solve(){\n\n\t++p;\n\tvector<int> v;\n\tif (isdigit(c[p])){\n\t\tint n = atoi(&c[p]);\n\t\tp += (int)log10((double)n) + 2;\n\t\treturn n / 2 + 1;\n\t}\n\twhile (c[p] == '['){\n\t\tint n = solve();\n\t\tcout << n << endl;\n\t\tv.push_back(n);\n\t}\n\t++p;\n\tsort(v.begin(), v.end());\n\tint res = 0;\n\tfor (int i = 0; i < (v.size() + 1) / 2; i++){\n\t\tres += v[i];\n\t}\n\t\n\treturn res;\n}\n\n\nint main(void){\n\n\tint n;\n\tcin >> n; \n\twhile (n--){\n\t\tscanf(\"%s\", &c);\n\t\tp = 0;\n\t\tcout << solve() << endl;\n\t}\n\n\tsystem(\"pause\");\n\treturn  0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\nusing ll = long long;\nusing vi = vector<int>;\nusing vii = vector<vector<int>>;\nusing vl = vector<ll>;\nusing vll = vector<vector<ll>>;\nusing pii = pair<int,int>;\n#define FOR(i,a,b) for(ll i = (a); i < (b); i++)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(obj) (obj).begin(), (obj).end()\n#define pb push_back\n#define fst first\n\nstring s;\nint id;\nvoid eat(char c){\n  assert(s[id] == c);\n  id++;\n}\nchar peek(){\n  return s[id];\n}\nchar pop(){\n  return s[id++];\n}\nbool left(){\n  return id < (int)s.size();\n}\nint number(){\n  int res = 0;\n  while (isdigit(peek())) {\n    res = res * 10 + pop() - '0';\n  }\n  return res;\n}\nint solve(){\n  eat('[');\n  int res = 0;\n  vi vec;\n  if (isdigit(peek())) {\n    res = number() / 2 + 1;\n    eat(']');\n  } else {\n    while (peek() != ']') {\n      vec.pb(solve());\n    }\n    sort(ALL(vec));\n    eat(']');\n    REP(i,(int)vec.size() / 2 + 1){\n      res += vec[i];\n    }\n  }\n  return res;\n}\n\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  REP(i,n){\n    id = 0;\n    cin >> s;\n    cout << solve() << endl;\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define range(i,a,b) for(int i = (a); i < (b); i++)\n#define rep(i,b) for(int i = 0; i < (b); i++)\n#define all(a) (a).begin(), (a).end()\n#define debug(x) cout << \"debug \" << x << endl;\nconst int INF = 100000000;\nusing namespace std;\n\n\ntypedef string::const_iterator State;\nint number(State&);\n\n// ??°??????????????????????????????????????°????????????\nint number(State &begin) {\n    int ret = 0;\n\n    while (isdigit(*begin)) {\n        ret *= 10;\n        ret += *begin - '0';\n        begin++;\n    }\n\n    //debug(ret)\n    return ret / 2 + ret % 2;\n}\n\nint solve(State &begin, State end){\n    vector<int> v;\n    int ret = 0;\n    while(begin != end){\n        if(*begin == '['){\n            //cout << \"[ \" << endl;\n            begin++;\n            v.emplace_back(solve(begin, end));\n        }else if(*begin == ']'){\n            begin++;\n            sort(all(v));\n            rep(i,INF){\n                if(2 * i > v.size()) break;\n                ret += v[i];\n            }\n            //cout << \"] \" << ret << endl;\n            return ret;\n        }else{\n            v.emplace_back(number(begin));\n        }\n    }\n    //cout << \"return size() \" << v.size()<< endl;\n    return v[0];\n}\n\nint main(){\n    int n;\n    cin >> n;\n    rep(i,n){\n        string s;\n        cin >> s;\n\n        State begin = s.begin();\n        State end = s.end();\n\n        cout << solve(begin, end) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <math.h>\n#include <algorithm>\nusing namespace std;\n#define INF 0x7FFFFFFF\n#define ll long long\n\nll get_num();\n\nstring s;\nvector<ll> a;\nint t;\n\n//[   -2\n//]   -1\n\nint main(){\n  int n;\n  cin >> n;\n  while(n){\n    n--;\n    t=0;\n    a.assign(0,0);\n    cin >> s;\n    int j=0;\n    for(int i=0;i<(int)s.size();i++){\n      if(s[i]== '['){\n        a.push_back(-2);\n        j=0;\n      }\n      else if(s[i]== ']'){\n        a.push_back(-1);\n        j=0;\n      }\n      else if('0'<=s[i]&&s[i]<='9'){\n        if(j==0){\n          a.push_back(s[i]-'0');\n          j++;\n        }\n        else{\n          a[a.size()-1]*=10;\n          a[a.size()-1]+=(s[i]-'0');\n          j++;\n        }\n      }\n    }\n    for(int i=0;i<(int)a.size();i++){\n      if(a[i]>0){\n        a[i]=(a[i]+1)/2;\n      }\n    }\n    ll ans=get_num();\n    cout << ans << endl;\n  }\n}\n\nll get_num(){\n  vector<ll> b;\n  ll re=0;\n  t++;\n  while(a[t]!=-1){\n    if(a[t]>0){\n      b.push_back(a[t]);\n    }\n    else if(a[t]==-2){\n      b.push_back(get_num());\n    }\n    t++;\n  }\n  sort(b.begin(),b.end());\n  for(int i=0;i<((int)b.size()+1)/2;i++){\n    re+=b[i];\n  }\n  return re;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nstring input;\n\nlong long int kansu( long long int x ) {\n  vector< long long int > list;\n  long long int k = 0;\n  while( true ) {\n    if ( input[x] == '[' ) {\n      list.push_back( kansu(x+1) );\n      long long int f = 0;\n      while( true ) {\n\tif ( input[x] == '[' ) f++;\n\tif ( input[x] == ']' ) {\n\t  f--;\n\t  if ( f == 0 ) break;\n\t}\n\tx++;\n      }\n      x++;\n      if ( x == input.size() ) break;\n    }else if ( input[x] == ']' ) {\n      if ( k > 0 ) list.push_back( k / 2 + 1 );\n      break;\n    }else {\n      k = k * 10 + input[x] - '0';\n      x++;\n    }\n  }\n  sort( list.begin(), list.end() );\n  long long int ans = 0;\n  for ( long long int i = 0; i < list.size() / 2 + 1; i++ ) {\n    ans += list[i];\n  }\n  return ans;\n}\n\nint main () {\n\n  long long int n;\n\n  cin >> n;\n\n  for ( long long int i = 0; i < n; i++ ) {\n    cin >> input;\n    cout << kansu( 0 ) << endl;\n  }\n\n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconstexpr int INF = (1<<30)-1;\n\nstring S;\nint dfs(int left, int right) {\n    if (isdigit(S[left + 1])) return ((stoi(S.substr(left + 1, right - left - 2)) + 1) / 2);\n    vector<int> vec;\n    int cnt = 0, l, sum = 0;\n    for (int i = left + 1; i < right - 1; i++) {\n        if (S[i] == '[') {\n            if (cnt == 0) l = i;\n            cnt++;\n        } else if (S[i] == ']') {\n            if (cnt == 1) vec.push_back(dfs(l, i + 1));\n            cnt--;\n        }\n    }\n    sort(begin(vec), end(vec));\n    for (int i = 0; i < (vec.size() + 1) / 2; i++) sum += vec[i];\n    return (sum);\n}\n\nvoid solve() {\n    cin >> S;\n    cout << dfs(0, S.size()) << endl;\n    return;\n}\n\nint main() {\n    int N;\n    cin >> N;\n    while (N--) solve();\n    return (0);\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cctype>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint num(char *buf, int &i)\n{\n    int n = buf[i++] - '0';\n    while(isdigit(buf[i])) n = n*10 + buf[i++] - '0';\n    return n;\n}\n\nint solve(char *buf, int &i)\n{\n    int ans = 0;\n    ++i;    // skip '['\n\n    if (isdigit(buf[i])) {\n        ans = num(buf, i) / 2 + 1;\n    } else {\n        vector<int> v;\n        while (buf[i] == '[') {\n            v.push_back(solve(buf, i));\n        }\n        sort(v.begin(), v.end());\n\n        for (int i = 0; i < v.size() / 2 + 1; ++i) {\n            ans += v[i];\n        }\n    }\n\n    ++i;    // skip ']'\n    return ans;\n}\n\nint main()\n{\n    int n;\n    char buf[10001];\n\n    scanf(\"%d \", &n);\n    for (int i = 0; i < n; ++i) {\n        int j = 0;\n        gets(buf);\n        printf(\"%d\\n\", solve(buf, j));\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint func( std::string str, int &i )\n{\n\tstd::vector<int> data;\n\ti++;\n\tif ( str[i] == '[' ) {\n\t\tdo { \n\t\t\tdata.push_back(func(str, i));\n\t\t} while(str[i] != ']');\n\t\t++i;\n\t} else {\n\t\tint j = i;\n\t\tfor (; str[j] != ']'; j++);\n\t\tj--;\n\t\tstd::string num = str.substr(i, j - i + 1);\n\t\t//std::cout << num << std::endl;\n\t\ti = j + 2;\n\t\treturn std::stoi(num)/2 + 1;\n\t}\n\n\tstd::vector<int> perm(data.size(), 0);\n\tfor ( int i = 0; i < data.size() / 2 + 1; ++i ) {\n\t\tperm[i] = 1;\n\t}\n\n\tint min = 0xfffffff;;\n\tdo{\n\t\tint a = 0;\n\t\tfor ( int i = 0; i < data.size(); ++i ) {\n\t\t\tif ( perm[i] == 1 ) {\n\t\t\t\ta += data[i];\n\t\t\t\t//std::cout << data[i] << \" \";\n\t\t\t}\n\t\t}\n\t\t//std::cout << std::endl;\n\t\tif ( min > a )  min = a;\n\t} while(std::prev_permutation(perm.begin(), perm.end()));\n\n\treturn min;\n\n}\n\nint main()\n{\n\tint N;\n\n\tstd::cin >> N;\n\n\tfor ( int i = 0; i < N; ++i ) {\n\t\tstd::string str;\n\t\t//std::getline(std::cin, str);\n\t\tstd::cin >> str;\n\n\t\tint j = 0;\n\t\tstd::cout << func(str, j) << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\nclass D {\npublic:\n\tint sets;\n\tint n;\n\tlist<D*> child;\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n\t~D() {\n\t}\n};\n\nchar c[10002];\n\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') {\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; //'['\n\t\t\tsum += get(dd, l);\n\t\t\td->child.push_back(dd);\n\t\t\td->sets++;\n\t\t\tl++; //']'\n\t\t}\n\t\td->n = sum;\n\t} else {\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num;\n\t\treturn num;\n\t}\n\treturn sum;\n}\n\nint ans(D *d) {\n\t//cout << \"in\" << endl;\n\tif (d->sets == 0) {\n\t\t//cout << \"okk\" << endl;\n\t\treturn d->n / 2 + 1;\n\t}\n\t//else\n\tint sum = 0;\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\td->child.sort(func);\n\t//cout << \"sets::\" << d->sets << endl;\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tD *cur = *it;\n\t\t//cout << i << \":::\" << cur->n << endl;\n\t\tsum += ans(cur);\n\t\tit++;\n\t}\n\treturn sum;\n}\n\n\t\nvoid solve() {\n\tint n;\n\tint l;\n\tcin >> n;\n\tcout << n << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> c;\n\t\t//cout << c << endl;\n\t\tD *d = new D();\n\t\tl = 1;\n\t\tget(d, l);\n\t\tcout << ans(d) << endl;\n\t\t//cout << \"hoge\" << endl;\n\t\tdelete d;\n\t}\n}\n\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <cmath>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <sstream>\n\nusing namespace std;\ntypedef long long int ll;\ntypedef pair<int, int> P;\n\nint stoi(string str){\nint ret;\nstringstream ss;\nss << str;\nss >> ret;\nreturn ret;\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor(int l=0; l<n; l++){\n\t\tstring s;\n\t\tcin>>s;\n\t\tint m=s.length();\n\t\tint d=0;\n\t\twhile(s[d]=='['){\n\t\t\td++;\n\t\t}\n\t\tP used[10000];\n\t\tfill(used, used+10000, P(0, 0));\n\t\tvector<int> G[10000];\n\t\tint t=1, p1;\n      bool e=0;\n\t\tfor(int k=d-1; k>=0; k--){\n\t\t\tvector<int> v;\n\t\t\tfor(int i=0; i<m; i++){\n\t\t\t\tif(s[i]=='[' && used[i]==P(0, 0)){\n\t\t\t\t\tp1=i, e=1;\n\t\t\t\t}else if(s[i]==']' && used[i]!=P(0, 0)){\n\t\t\t\t\tif(used[i].second==k+1){\n                      v.push_back(used[i].first);\n                    }\n\t\t\t\t}else if(s[i]==']' && used[i]==P(0, 0) && e==1){\n                  e=0;\n\t\t\t\t\tused[i]=P(t, k);\n\t\t\t\t\tused[p1]=P(t, k);\n\t\t\t\t\tfor(int j=0; j<v.size(); j++){\n\t\t\t\t\t\tG[t].push_back(v[j]);\n\t\t\t\t\t}\n\t\t\t\t\tv.clear();\n\t\t\t\t\tt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvector<int> num;\n\t\tnum.push_back(0);\n\t\tstring ns;\n\t\tfor(int i=0; i<m; i++){\n\t\t\tif(s[i]!='[' && s[i]!=']'){\n\t\t\t\tns+=s[i];\n\t\t\t}else{\n\t\t\t\tif(!ns.empty()){\n\t\t\t\t\tint x=stoi(ns);\n\t\t\t\t\tnum.push_back(x);\n\t\t\t\t\tns.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans[10000]={};\n\t\tfor(int i=1; i<t; i++){\n\t\t\tif(G[i].empty()){\n\t\t\t\tans[i]=(num[i]+1)/2;\n\t\t\t}else{\n\t\t\t\tvector<int> v;\n\t\t\t\tfor(int j=0; j<G[i].size(); j++){\n\t\t\t\t\tv.push_back(ans[G[i][j]]);\n\t\t\t\t}\n\t\t\t\tsort(v.begin(), v.end());\n\t\t\t\tfor(int j=0; j<=(v.size()/2); j++){\n\t\t\t\t\tans[i]+=v[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ans[t-1]);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "//********rev 2;\n#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\n// data class\nclass D {\npublic:\n\tint n;\n\tint sets;\n\n\tlist<D*> child;\n\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n};\n\n// global var for input\nchar c[10002];\n\n// get inputs\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') { // if has datasets\n\t\t// loop for all sets\n\t\tlist<int> ilist;\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; // INFO: skip '['\n\t\t\t// INFO: rec.\n\t\t\tilist.push_back(get(dd, l));\n\t\t\t// add to childlen\n\t\t\td->child.push_back(dd);\n\t\t\t// inc. sets\n\t\t\td->sets++;\n\t\t\tl++; // INFO: skip ']'\n\t\t}\n\t\t// create sum of win half groups\n\t\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\t\tauto iter = ilist.begin();\n\t\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\t\tsum += *iter;\n\t\t\titer++;\n\t\t}\n\t\td->n = sum;\n\t\treturn sum;\n\t} else { // if has NO datasets (== only num)\n\t\t// char[] to num\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\t// return: HALF OF num for win\n\t\td->n = num / 2 + 1;\n\t\treturn d->n;\n\t}\n}\n\n// solve\nvoid solve() {\n\tint n;\n\t// input dataset length\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\t// input dataset\n\t\tcin >> c;\n\t\tD *d = new D();\n\t\t// INFO: 1: skip first '['\n\t\tint l = 1;\n\t\t// string to dataobj;\n\t\tget(d, l);\n\t\t// get answer\n\t\t//cout << ans(d) << endl;\n\t\tcout << d->n << endl;\n\t\tdelete d;\n\t}\n}\n\n\n\n//----main----\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define For(i, a, b) for(int (i)=(int)(a); (i)<(int)(b); ++(i))\n#define rFor(i, a, b) for(int (i)=(int)(a)-1; (i)>=(int)(b); --(i))\n#define rep(i, n) For((i), 0, (n))\n#define rrep(i, n) rFor((i), (n), 0)\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long lint;\ntypedef unsigned long long ulint;\ntypedef pair<int, int> pii;\ntemplate<class T> bool chmax(T &a, const T &b){if(a<b){a=b; return true;} return false;}\ntemplate<class T> bool chmin(T &a, const T &b){if(a>b){a=b; return true;} return false;}\ntemplate<class T> T div_floor(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>=0 ? a/b : (a+1)/b-1;\n}\ntemplate<class T> T div_ceil(T a, T b){\n    if(b < 0) a *= -1, b *= -1;\n    return a>0 ? (a-1)/b+1 : a/b;\n}\n\nconstexpr lint mod = 1e9+7;\nconstexpr lint INF = mod * mod;\nconstexpr int MAX = 200010;\n\nint expr(string &s, int &i);\nint number(string &s, int &i);\n\nint expr(string &s, int &i){\n    ++i;\n    if(isdigit(s[i])){\n        int ret = number(s, i);\n        ++i;\n        return ret/2 + 1;\n    }\n    vector<int> v;\n    while(s[i] == '['){\n        v.push_back(expr(s, i));\n    }\n    sort(v.begin(), v.end());\n    int ret = accumulate(v.begin(), v.begin()+v.size()/2+1, 0);\n    ++i;\n    return ret;\n}\n\nint number(string &s, int &i){\n    int ret = 0;\n    while(isdigit(s[i])){\n        ret = ret * 10 + (s[i]-'0');\n        ++i;\n    }\n    return ret;\n}\n\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    rep(_, n){\n        string s;\n        cin >> s;\n        int idx = 0;\n        printf(\"%d\\n\", expr(s, idx));\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n// repetition\n#define FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define rep(i, n) for (int i = 0; i < (int)(n); i++)\n\n// container util\n#define all(x) (x).begin(), (x).end()\n\n// debug\n#define dump(x) cerr << #x << \" = \" << (x) << endl;\n#define debug(x)                                         \\\n  cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" \\\n       << \" \" << __FILE__ << endl;\n\n// typedef\ntypedef long long lint;\ntypedef unsigned long long ull;\ntypedef complex<long double> Complex;\ntypedef pair<int, int> P;\ntypedef tuple<int, int, int> TP;\ntypedef vector<int> vec;\ntypedef vector<vec> mat;\n\n// constant\nconst int MOD = (int)1e9 + 7;\nconst int INF = (int)1e18;\nconst int dx[] = {0, 1, 0, -1};\nconst int dy[] = {1, 0, -1, 0};\nconst int ddx[] = {0, 1, 1, 1, 0, -1, -1, -1};\nconst int ddy[] = {1, 1, 0, -1, -1, -1, 0, 1};\n\n// conversion\ninline int toInt(string s) {\n  int v;\n  istringstream sin(s);\n  sin >> v;\n  return v;\n}\ntemplate <class T>\ninline string toString(T x) {\n  ostringstream sout;\n  sout << x;\n  return sout.str();\n}\n\n//\ntemplate <class T>\ninline bool chmax(T& a, T b) {\n  if (a < b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\ntemplate <class T>\ninline bool chmin(T& a, T b) {\n  if (a > b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\n//\n\nint dfs(string s) {\n  vector<int> arr;\n  int lv = 0, index = 0;\n  rep(i, s.size()) {\n    if (s[i] == '[') {\n      if (lv == 0) index = i;\n      lv++;\n    } else if (s[i] == ']') {\n      lv--;\n      if (lv == 0) arr.push_back(dfs(s.substr(index + 1, i - index - 1)));\n    }\n  }\n  if (arr.size() == 0) return toInt(s) / 2 + 1;\n  sort(all(arr));\n  int res = 0;\n  rep(i, arr.size() / 2 + 1) { res += arr[i]; }\n  return res;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n\n  int n;\n  cin >> n;\n  rep(_, n) {\n    string s;\n    cin >> s;\n\n    cout << dfs(s.substr(1, s.size() - 2)) << \"\\n\";\n  }\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <cstring>\n#include <string>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n \n#define REP(i,n) for(int i=0; i<n; ++i)\n#define FOR(i,a,b) for(int i=a; i<=b; ++i)\n#define FORR(i,a,b) for (int i=a; i>=b; --i)\n#define pi acos(-1.0)\n \ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef vector<ll> VL;\ntypedef vector<VI> VVI;\ntypedef pair<int,int> P;\ntypedef pair<ll,ll> PL;\n\nstring s;\nint i;\n\nbool isnum(char c){\n\treturn c >= '0' && c <= '9';\n}\n\nint num(){\n\tint x = 0;\n\twhile (isnum(s[i])){\n\t\tx = 10 * x + s[i] - '0';\n\t\ti++;\n\t}\n\treturn x;\n}\n\nint dfs(){\n\tif (isnum(s[i])){\n\t\treturn num();\n\t}\n\tVI c;\n\ti++;\n\twhile (1){\n\t\tc.push_back(dfs());\n\t\tif (s[i] == ']'){\n\t\t\tbreak;\n\t\t}\n\t}\n\ti++;\n\tif (c.size() == 1) return (c[0]+1)/2;\n\tsort(c.begin(),c.end());\n\tint res = 0;\n\tREP(i,(c.size()+1)/2){\n\t\tres += c[i];\n\t}\n\treturn res;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\twhile (n--){\n\t\tcin >> s;\n\t\ti = 0;\n\t\tcout << dfs() << endl;\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <vector>\n#include <algorithm>\n#include <numeric>\nusing namespace std;\n\nint block(string &s, int &i);\nint number(string &s, int &i);\n\nint block(string &s, int &i)\n{\n  i++;\n  if(s[i] == '['){\n    vector<int> v;\n    while(s[i] == '['){\n      v.push_back(block(s, i));\n      i++;\n    }\n    sort(v.begin(), v.end());\n    return accumulate(v.begin(), v.begin() + v.size()/2+1, 0);\n  }else{\n    return number(s, i);\n  }\n}\n\nint number(string &s, int &i)\n{\n  int n = s[i] - '0';\n  i++;\n  while(isdigit(s[i])){\n    n *= 10;\n    n += s[i] - '0';\n    i++;\n  }\n  return n / 2 + 1;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  for(int j = 0; j < n; j++){\n    string s;\n    cin >> s;\n    int i = 0;\n    cout << block(s, i) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define mod 1000000007\n#define all(c) begin(c),end(c)\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\nusing ll = long long;\nusing vi = vector<int>; using vs = vector<string>;\nint dd[] = { 0, 1, 0, -1, 0 }; //→↓←↑\n\nvoid solve()\n{\n\tint N;\n\tcin >> N; string S;\n\n\n\tfor (int i = 0; i < N; i++)\n\t{\n\t\tcin >> S;\n\t\tvector<int> A[10001];\n\t\tint p = -1;\n\t\tstring num = \"\";\n\t\tint stage = -1;\n\t\tint M = -1;\n\t\tfor (int j = 0; j < S.size(); j++)\n\t\t{\n\t\t\tif (S[j] == '[')\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tstage++;\n\t\t\t}\n\t\t\telse if (S[j] == ']')\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif (S[j - 1] == ']')\n\t\t\t\t{\n\t\t\t\t\tint sum = 0;\n\t\t\t\t\tsort(A[p + 1].begin(), A[p + 1].end());\n\t\t\t\t\tfor (int k = 0; k < A[p + 1].size() / 2 + 1; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(p + 1 == M)sum += A[p + 1][k] / 2 + 1;\n\t\t\t\t\t\telse sum += A[p + 1][k];\n\t\t\t\t\t}\n\t\t\t\t\tA[p + 1].clear();\n\t\t\t\t\tA[p].emplace_back(sum);\n\t\t\t\t\tp--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tA[p].emplace_back(stoi(num));\n\t\t\t\t\tp--;\n\t\t\t\t\tnum = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (M == -1)M = stage;\n\t\t\t\tnum += S[j];\n\t\t\t}\n\t\t}\n\t\tif (M == 0)\n\t\t{\n\t\t\tcout << A[0][0] / 2 + 1 << endl;\n\t\t}\n\t\telse cout << A[0][0] << endl;\n\t}\n}\n\nint main()\n{\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tsolve();\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint stoi(string s){\n\tint tmp=0;\n\tfor(int i=0;i<s.size();i++){\n\t\ttmp=tmp*10+(s[i]-'0');\n\t}\n\treturn tmp;\n\treturn (tmp+1)/2;\n}\n\nint cnt;\nvector<int>KO[5000];\nvector<int>SO[5000];\nint OYA[5000];\nint SCO[5000];\n\nvoid view(){\n\tfor(int i=0;i<=cnt;i++){\n\t\tcout<<i<<\"\\t\"<<OYA[i]<<\"\\t\"<<SCO[i];\n\t\tfor(int j=0;j<KO[i].size();j++)cout<<\"\\t\"<<KO[i][j];\n\t\tcout<<endl;\n\t}\n}\n\nvoid reset(){\n\tfor(int i=0;i<5000;i++){\n\t\tKO[i].clear();\n\t\tSO[i].clear();\n\t\tOYA[i]=-1;\n\t\tSCO[i]=-1;\n\t}\n}\n\nvoid cal(string s){\n\tint pos=-1;\n\tcnt=-1;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='['){\n\t\t\tcnt++;\n\t\t\tOYA[cnt]=pos;\n\t\t\tKO[pos].push_back(cnt);\n\t\t\tpos=cnt;\n\t\t}\n\t\telse if(s[i]==']'){\n\t\t\tif(SCO[pos]<0){\n\t\t\t\tSCO[pos]=0;\n\t\t\t\tsort(SO[pos].begin(),SO[pos].end());\n\t\t\t\tfor(int j=0;j<(SO[pos].size()+1)/2;j++)SCO[pos]+=SO[pos][j];\n\t\t\t}\n\t\t\tif(pos!=0){\n\t\t\t\tSO[OYA[pos]].push_back(SCO[pos]);\n\t\t\t}\n\t\t\tpos=OYA[pos];\n\t\t}\n\t\telse{\n\t\t\tstring tmp=\"\";\n\t\t\twhile(true){\n\t\t\t\ttmp+=s[i];\n\t\t\t\tif(s[i+1]==']')break;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tSCO[pos]=(stoi(tmp)+1)/2;\n\t\t}\n\t}\n}\n\nint dfs(int pos){\n\tif(SCO[pos]>0)return SCO[pos];\n\tvector<int>V;\n\tfor(int i=0;i<KO[pos].size();i++){\n\t\tV.push_back(dfs(KO[pos][i]));\n\t}\n\tsort(V.begin(),V.end());\n\tint tmp=0;\n\tfor(int i=0;i<(V.size()+1)/2;i++){\n\t\ttmp+=V[i];\n\t}\n\treturn tmp;\n}\n\nint main(){\n\tint n;\n\tfor(cin>>n;n--;){\n\t\treset();\n\t\tstring s;cin>>s;\n\t\tcal(s);\n\t\tcout<<SCO[0]<<endl;\n\t\t//view();\n\t\t//cout<<dfs(0)<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < n; ++i)\n\nclass Node{\npublic:\n    int sum;\n    vector<Node> ch;\n\n    void calc(){\n        if(ch[0].sum==0){\n            rep(i,ch.size()){\n                ch[i].calc();\n            }\n        }\n        sort(ch.begin(),ch.end());\n        rep(i,(ch.size()+1)/2){\n            sum+=ch[i].sum;\n        }\n    }\n    Node(){sum=0;ch=vector<Node>();}\n};\n\nvoid paser2(Node &n);\nNode paser(){\n    Node n;\n    getchar();\n    char c=getchar();\n\n    if(c=='['){\n        cin.putback(c);\n        paser2(n);\n    }\n    else if(c>='0'&&c<='9')\n    {\n        int d;\n        cin.putback(c);\n        cin>>d;\n        n.sum=(d+1)/2;\n        //cout<<\"input\"<<n.sum<<endl;\n    }\n    getchar();\n\n    return n;\n}\nvoid paser2(Node &n){\n    while(1){\n        char c=getchar();\n        if(c!='['){cin.putback(c);break;}\n        cin.putback(c);\n        n.ch.push_back(paser());\n    }\n}\nbool operator<(Node &a,Node &b){\n    return a.sum<b.sum;\n}\nint main(){\n    int N;cin>>N;\n    rep(i,N){\n        char c=getchar();\n        Node n=paser();\n        n.calc();\n        cout<<n.sum<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "//tempaa\n//#pragma GCC optimize (\"-O3\")\n#ifdef _DEBUG\n#include<cassert>\n#include \"bits_stdc++.h\"\n#else\n#include <bits/stdc++.h>\n#endif\n\n#define r_ return\n#define v_ vector\n#define t_T template<class T>\n\nusing namespace std;\n//@起動時\nstruct initon {\n    initon() {\n        cin.tie(0);\n        ios::sync_with_stdio(false);\n        cout.setf(ios::fixed);\n        cout.precision(16);\n        srand((unsigned) clock() + (unsigned) time(NULL));\n    };\n} __initon;\n//衝突対策\n#define ws ___ws\n#define over4(o1, o2, o3, o4, name, ...) name\n\n#define int long long\n#define ll long long\n#define double long double\n#define ull unsigned long long\nusing dou = double;\nusing itn = int;\nusing str = string;\nusing bo= bool;\n#define au auto\nusing P = pair<ll, ll>;\n\n#define fi first\n#define se second\n#define vec v_\n#define beg begin\n#define rbeg rbegin\n#define con continue\n#define bre break\n#define brk break\n#define is ==\nusing vi = v_<ll>;\nusing vb = v_<bool>;\nusing vs = v_<string>;\nusing vd = v_<double>;\nusing vc = v_<char>;\nusing vp = v_<P>;\n\n//#define V v_\n#define vvt0(t) v_<v_<t>>\n#define vvt1(t, a) v_<v_<t>>a\n#define vvt2(t, a, b) v_<v_<t>>a(b)\n#define vvt3(t, a, b, c) v_<v_<t>> a(b,v_<t>(c))\n#define vvt4(t, a, b, c, d) v_<v_<t>> a(b,v_<t>(c,d))\n\n#define vvi(...) over4(__VA_ARGS__,vvt4,vvt3,vvt2 ,vvt1,vvt0)(ll,__VA_ARGS__)\n#define vvb(...) over4(__VA_ARGS__,vvt4,vvt3,vvt2 ,vvt1,vvt0)(bool,__VA_ARGS__)\n#define vvs(...) over4(__VA_ARGS__,vvt4,vvt3,vvt2 ,vvt1,vvt0)(string,__VA_ARGS__)\n#define vvd(...) over4(__VA_ARGS__,vvt4,vvt3,vvt2 ,vvt1,vvt0)(double,__VA_ARGS__)\n#define vvc(...) over4(__VA_ARGS__,vvt4,vvt3,vvt2 ,vvt1,vvt0)(char,__VA_ARGS__)\n#define vvp(...) over4(__VA_ARGS__,vvt4,vvt3,vvt2 ,vvt1,vvt0)(P,__VA_ARGS__)\n\n\n#define v3i(a, b, c, d) v_<v_<vi>> a(b, v_<vi>(c, vi(d)))\n#define v3d(a, b, c, d) v_<v_<vd>> a(b, v_<vd>(c, vd(d)))\n#define v3m(a, b, c, d) v_<v_<vm>> a(b, v_<vm>(c, vm(d)))\n\n\n#define PQ priority_queue<ll, v_<ll>, greater<ll> >\n#define tos to_string\nusing mapi = map<int, int>;\nusing mapd = map<dou, int>;\nusing mapc = map<char, int>;\nusing maps = map<str, int>;\nusing seti = set<int>;\nusing setd = set<dou>;\nusing setc = set<char>;\nusing sets = set<str>;\nusing qui = queue<int>;\n#define bset bitset\n#define uset unordered_set\n#define mset multiset\n#define umap unordered_map\n#define umapi unordered_map<int,int>\n#define umapp unordered_map<P,int>\n#define mmap multimap\n\n//マクロ 繰り返し\n#define _overloadrep(_1, _2, _3, _4, name, ...) name\n# define _rep(i, n) for(int i = 0,_lim=n; i < _lim ; i++)\n#define repi(i, m, n) for(int i = m,_lim=n; i < _lim ; i++)\n#define repadd(i, m, n, ad) for(int i = m,_lim=n; i < _lim ; i+= ad)\n#define rep(...) _overloadrep(__VA_ARGS__,repadd,repi,_rep,)(__VA_ARGS__)\n#define _rer(i, n) for(int i = n; i >= 0 ; i--)\n#define reri(i, m, n) for(int i = m,_lim=n; i >= _lim ; i--)\n#define rerdec(i, m, n, dec) for(int i = m,_lim=n; i >= _lim ; i-=dec)\n#define rer(...) _overloadrep(__VA_ARGS__,rerdec,reri,_rer,)(__VA_ARGS__)\n#define fora(a, b) for(auto&& a : b)\n\n//マクロ 定数\n#define k3 1010\n#define k4 10101\n#define k5 101010\n#define k6 1010101\n#define k7 10101010\n\nt_T T MAX() { r_ numeric_limits<T>::max(); }\nt_T T MIN() { r_ numeric_limits<T>::min(); }\nconst int inf = (int) 1e9 + 100;\nconst ll linf = (ll) 1e18 + 100;\nt_T T INF() { r_ MAX<T>() / 2; }\ntemplate<> signed INF() { r_ inf; }\ntemplate<> ll INF() { r_ linf; }\ntemplate<> double INF() { r_ (double) linf * linf; }\n\nconst double eps = 1e-9;\nconst double PI = 3.1415926535897932384626433832795029L;\nll ma = numeric_limits<ll>::min();\nll mi = numeric_limits<ll>::max();\nconst int y4[] = {-1, 1, 0, 0};\nconst int x4[] = {0, 0, -1, 1};\nconst int y8[] = {0, 1, 0, -1, -1, 1, 1, -1};\nconst int x8[] = {1, 0, -1, 0, 1, -1, 1, -1};\n\n//マクロ省略形 関数等\n#define sz(a) ((int)(a).size())\n#define rs resize\n#define mp make_pair\n#define pb push_back\n#define pf push_front\n#define eb emplace_back\n#define all(a) (a).begin(),(a).end()\n#define rall(a) (a).rbegin(),(a).rend()\n\n/*@formatter:off*/\ninline void sort(string &a) { sort(all(a)); }\nt_T inline void sort(v_<T> &a) { sort(all(a)); };\nt_T inline void rsort(v_<T> &a) { sort(all(a), greater<T>()); };\ntemplate<class U> inline void sortp(v_<U> &a, v_<U> &b) {    vp c;    int n = sz(a);    assert(n == sz(b));    rep(i, n)c.eb(a[i], b[i]);    sort(c);    rep(i, n) {        a[i] = c[i].first;        b[i] = c[i].second;;    }};//F = T<T>\n//例えばr_ p.fi + p.se;\ntemplate<class U> inline void rsortp(v_<U> &a, v_<U> &b) {    vp c;    int n = sz(a);    assert(n == sz(b));    rep(i, n)c.eb(a[i], b[i]);    rsort(c);    rep(i, n) {        a[i] = c[i].first;        b[i] = c[i].second;    }};\ntemplate<typename V, typename T>\nvoid fill(V &xx, const T vall) {xx = vall;}\ntemplate<typename V, typename T>\nvoid fill(v_<V> &vecc, const T vall) {for (auto &&vx: vecc) fill(vx, vall);}\n\n//@汎用便利関数 入力\ntemplate<typename T = int> T _in() {T x;cin >> x;r_ (x);}\n#define _overloadin(_1, _2, _3, _4, name, ...) name\n#define in0() _in()\n#define in1(a) cin>>a\n#define in2(a, b) cin>>a>>b\n#define in3(a, b, c) cin>>a>>b>>c\n#define in4(a, b, c, d) cin>>a>>b>>c>>d\n#define in(...) _overloadin(__VA_ARGS__,in4,in3,in2 ,in1,in0)(__VA_ARGS__)\n\n#define _overloaddin(_1, _2, _3, _4, name, ...) name\n#define din1(a) int a;cin>>a\n#define din2(a, b) int a,b;cin>>a>>b\n#define din3(a, b, c) int a,b,c;cin>>a>>b>>c\n#define din4(a, b, c, d) int a,b,c,d;cin>>a>>b>>c>>d\n#define din(...) _overloadin(__VA_ARGS__,din4,din3,din2 ,din1)(__VA_ARGS__)\n\n#define _overloaddind(_1, _2, _3, _4, name, ...) name\n#define din1d(a) int a;cin>>a;a--\n#define din2d(a, b) int a,b;cin>>a>>b;a--,b--\n#define din3d(a, b, c) int a,b,c;cin>>a>>b>>c;a--,b--,c--\n#define din4d(a, b, c, d) int a,b,c,d;cin>>a>>b>>c>>d;;a--,b--,c--,d--\n#define dind(...) _overloaddind(__VA_ARGS__,din4d,din3d,din2d ,din1d)(__VA_ARGS__)\n\n\nstring sin() { r_ _in<string>(); }\nll lin() { r_ _in<ll>(); }\nt_T void na(v_<T> &a, ll n) {a.resize(n);rep(i, n)cin >> a[i];}\n#define dna(a, n) vi a; na(a, n);/*nを複数使うと n==in()の時バグる事に注意*/\n#define dnad(a, n) vi a; nad(a, n);\nt_T void nad(v_<T> &a, ll n) {a.resize(n);rep(i, n)cin >> a[i], a[i]--;}\ntemplate<class T, class U> void na2(v_<T> &a, v_<U> &b, ll n) {a.resize(n);b.resize(n);rep(i, n)cin >> a[i] >> b[i];}\n#define dna2(a, b, n) vi a,b; na2(a,b,n);\ntemplate<class T, class U, class W> void na3(v_<T> &a, v_<U> &b, v_<W> &c, ll n) {a.resize(n);b.resize(n);c.resize(n);rep(i, n)cin >> a[i] >> b[i] >> c[i];}\n#define nt(a, h, w) resize(a,h,w);rep(nthi,h)rep(ntwi,w) cin >> a[nthi][ntwi];\n#define ntd(a, h, w) resize(a,h,w);rep(ntdhi,h)rep(ntdwi,w) cin >> a[ntdhi][ntdwi], a[ntdhi][ntdwi]--;\n#define ntp(a, h, w) resize(a,h+2,w+2);fill(a,'#');rep(ntphi,1,h+1)rep(ntpwi,1,w+1) cin >> a[ntphi][ntpwi];\n#define dnt(S, h, w) vvi(S,h,w);nt(S,h,w);\n#define dntc(S, h, w) vvc(S,h,w);nt(S,h,w);\n#define dnts(S, h, w) vvs(S,h,w);nt(S,h,w);\n\n//デバッグ\n#define sp << \" \" <<\nt_T string out_m2(v_<T> &a, ll W = inf) {    stringstream ss;    if (W == inf)W = min(sz(a), 20ll);    if (sz(a) == 0)r_ ss.str();    rep(i, W) {        ss << a[i];        if (typeid(a[i]) == typeid(P)) { ss << endl; } else { ss << \" \"; }    }    r_ ss.str();}\nt_T string out_m2(v_<v_<T> > &a, vi H, vi W, int key = -1) {    stringstream ss;    ss << endl;    vi lens(sz(W));    fora(h, H) {        rep(wi, sz(W)) {            int v = a[h][W[wi]];            str s = tos(v);            if (abs(v) == inf || abs(v) == INF<T>())s = \"e\";            lens[wi] = max(lens[wi], sz(s) + 1);            lens[wi] = max(lens[wi], sz(tos(W[wi])) + 1);        }    }    if (key == -1)ss << \" *|\"; else ss << \" \" << key << \"|\";    int wi = 0;    fora(w, W) {        ss << std::right << std::setw(lens[wi]) << w;        wi++;    }    ss << \"\" << endl;    rep(i, sz(W))rep(_, lens[i]) ss << \"_\";    rep(i, 3)ss << \"_\";    ss << \"\" << endl;    fora(h, H) {        ss << std::right << std::setw(2) << h << \"|\";        int wi = 0;        fora(w, W) {            str s = tos(a[h][w]);            if (abs(a[h][w]) == inf || abs(a[h][w]) == INF<T>())s = \"e\";            ss << std::right << std::setw(lens[wi]) << s;            wi++;        }        ss << \"\" << endl;    }    r_ ss.str();}\nt_T string out_m2(v_<v_<T> > &a, ll H = inf, ll W = inf, int key = -1) {    H = (H != inf) ? H : min({H, sz(a), 12ll});    W = min({W, sz(a[0]), 12ll});    vi hs, ws;    rep(h, H) { hs.push_back(h); }    rep(w, W) { ws.push_back(w); }    r_ out_m2(a, hs, ws, key);}\nt_T string out_m2(v_<v_<v_<T> > > &a, ll H = inf, ll W = inf, ll U = inf) {    stringstream ss;    if (H == inf)H = 12;    H = min(H, sz(a));    rep(i, H) {        ss << endl;        ss << out_m2(a[i], W, U, i);    }    r_ ss.str();}\nstring out_m2(int a) {    stringstream ss;    ss << a;    r_ ss.str();}\nt_T string out_m2(T &a) {    stringstream ss;    ss << a;    r_ ss.str();}\n\n#define debugName(VariableName) # VariableName\n\n#define _deb1(x) cerr <<  debugName(x)<<\" = \"<<out_m2(x) << endl\n#define _deb2(x, y) cerr <<  debugName(x)<<\" = \"<<out_m2(x)<<\", \"<< debugName(y)<<\" = \"<<out_m2(y)<< endl\n#define _deb3(x, y, z) cerr <<  debugName(x)<<\" = \"<<out_m2(x)  << \", \" <<  debugName(y)<<\" = \"<<out_m2(y) <<\", \" debugName(z)<<\" = \"<<out_m2(z) <<endl\n#define _deb4(x, y, z, a) cerr <<  debugName(x)<<\" = \"<<out_m2(x) <<\", \" <<   debugName(y)<<\" = \"<<out_m2(y) <<\", \" <<  debugName(z)<<\" = \"<<out_m2(z) <<\", \" <<  debugName(a)<<\" = \"<<out_m2(a)<<endl\n#define _deb5(x, y, z, a, b) cerr <<  debugName(x)<<\" = \"<<out_m2(x) <<\", \" <<   debugName(y)<<\" = \"<<out_m2(y) <<\", \" <<  debugName(z)<<\" = \"<<out_m2(z) <<\", \" <<  debugName(a)<<\" = \"<<out_m2(a)<<\", \" <<  debugName(b)<<\" = \"<<out_m2(b)<<endl\n\n\n#define _overloadebug(_1, _2, _3, _4, _5, name, ...) name\n#define debug(...) _overloadebug(__VA_ARGS__,_deb5,_deb4,_deb3,_deb2,_deb1)(__VA_ARGS__)\n#ifdef _DEBUG\n#define deb(...) _overloadebug(__VA_ARGS__,_deb5,_deb4,_deb3,_deb2,_deb1)(__VA_ARGS__)\n#else\n#define deb(...) ;\n#endif\n\n\n#define debugline(x) cerr << x << \" \" << \"(L:\" << __LINE__ << \")\" << '\\n'\n\n\nll gcd(ll a, ll b) { r_ b ? gcd(b, a % b) : a; }\nll gcd(vi b) {ll res = b[0];for (auto &&v :b)res = gcd(v, res);r_ res;}\nll lcm(ll a, ll b) { r_ a / gcd(a, b) * b; }\nll rev(ll a) {    ll res = 0;    while (a) {        res *= 10;        res += a % 10;        a /= 10;    }    r_ res;}\nt_T v_<T> rev(v_<T> &a) {    auto b = a;    reverse(all(b));    r_ b;}\nstr rev(str &a) {str s = a;reverse(all(s));r_ s;}\nll ceil(ll a, ll b) {if (b == 0) {cerr<<\"ceil\"<<endl;exit(1);r_ -1;} else r_ (a + b - 1) / b;}\nll sqrt(ll a) {    if (a < 0) {        cerr<<\"sqrt\"<<endl;        exit(1);    }    ll res = (ll) std::sqrt(a);    while (res * res < a)res++;    r_ res;}\ndouble log(double e, double x) { r_ log(x) / log(e); }\nll sig(ll t) { r_ (1 + t) * t / 2; }\nll sig(ll s, ll t) { r_ (s + t) * (t - s + 1) / 2; }\n\nvi divisors(int v) {    vi res;    double lim = std::sqrt(v);    rep(i, 1, lim+1){        if (v % i == 0) {            res.pb(i);            if (i != v / i)res.pb(v / i);        }    }    r_ res;}\nvb isPrime;\nvi primes;\n\nvoid setPrime() {    int len = 4010101;    isPrime.resize(4010101);    fill(isPrime, true);    isPrime[0] = isPrime[1] = false;    for (int i = 2; i <= sqrt(len) + 5; ++i) {        if (!isPrime[i])continue;        for (int j = 2; i * j < len; ++j) {            isPrime[i * j] = false;        }    }    rep(i, len)if (isPrime[i])primes.pb(i);}\n\nvi factorization(int v) {    int tv = v;    vi res;    if (isPrime.size() == 0)setPrime();    for (auto &&p :primes) {        if (v % p == 0)res.push_back(p);        while (v % p == 0) {            v /= p;        }        if (v == 1 || p * p > tv)break;    }    if (v > 1)res.pb(v);    r_ res;}\ninline bool inside(int h, int w, int H, int W) { r_ h >= 0 && w >= 0 && h < H && w < W; }\ninline bool inside(int v, int l, int r) { r_ l <= v && v < r; }\n\n\nt_T v_<T> ruiv(v_<T> &a) {    v_<T> ret(a.size() + 1);    rep(i, a.size())ret[i + 1] = ret[i] + a[i];    r_ ret;}\n//imoは0-indexed\n//ruiは1-indexed\nt_T v_<T> imo(v_<T> &v) {    v_<T> ret = v;    rep(i, sz(ret) - 1)ret[i + 1] += ret[i];    r_ ret;}\n\n#define ins inside\nll u0(ll a) { r_ a < 0 ? 0 : a; }\nt_T v_<T> u(const v_<T> &a) {\n    v_<T> ret = a;fora(v, ret)v = u0(v);r_ ret;}\n#define MIN(a) numeric_limits<a>::min()\n#define MAX(a) numeric_limits<a>::max()\n\nvoid yn(bool a) {\n    if (a)cout << \"yes\" << endl;\n    else cout << \"no\" << endl;\n}\nvoid Yn(bool a) {\n    if (a)cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n}\nvoid YN(bool a) {\n    if (a)cout << \"YES\" << endl;\n    else cout << \"NO\" << endl;\n}\nvoid fyn(bool a) {\n    if (a)cout << \"yes\" << endl;\n    else cout << \"no\" << endl;\n    exit(0);\n}\nvoid fYn(bool a) {\n    if (a)cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n    exit(0);\n}\nvoid fYN(bool a) {\n    if (a)cout << \"YES\" << endl;\n    else cout << \"NO\" << endl;\n    exit(0);\n}\nvoid Possible(bool a) {\n    if (a)cout << \"Possible\" << endl;\n    else cout << \"Impossible\" << endl;\n    exit(0);\n}\nvoid POSSIBLE(bool a) {\n    if (a)cout << \"POSSIBLE\" << endl;\n    else cout << \"IMPOSSIBLE\" << endl;\n    exit(0);\n}\ntemplate<class T, class U> set<T> &operator+=(set<T> &a, U v) {\n    a.insert(v);\n    r_ a;\n}\ntemplate<class T, class U> v_<T> &operator+=(v_<T> &a, U v) {\n    a.pb(v);\n    r_ a;\n}\nt_T T sum(v_<T> &v, int s = 0, int t = inf) {    T ret = 0;    rep(i, s, min(sz(v), t))ret += v[i];    r_ ret;}\nvoid mod(int &a, int m) { a = (a % m + m) % m; }\ntemplate<class F> inline int mgr(int ok, int ng, F f) {\n#define _mgrbody int mid = (ok + ng) / 2; if (f(mid))ok = mid; else ng = mid;\n    if (ok < ng)while (ng - ok > 1) { _mgrbody } else while (ok - ng > 1) { _mgrbody }\n    r_ ok;\n}\n\ntemplate<class F> inline int mgr(int ok, int ng, int second, F f) {\n#define _mgrbody2 int mid = (ok + ng) / 2; if (f(mid, second))ok = mid; else ng = mid;\n    if (ok < ng) while (ng - ok > 1) { _mgrbody2 } else while (ok - ng > 1) { _mgrbody2 }\n    r_ ok;\n}\ntemplate<typename T> ostream &operator<<(ostream &os, v_<T> &m) {    for (auto &&v:m) os << v << \" \";    r_ os;}\nconstexpr bool bget(ll m, int keta) { r_ (m >> keta) & 1; }\nint bget(ll m, int keta, int sinsuu) {m /= (ll) pow(sinsuu, keta);r_ m % sinsuu;}\nll bit(int n) { r_ (1LL << (n)); }\nll bit(int n, int sinsuu) { r_ (ll) pow(sinsuu, n); }\nint mask(int n) { r_ (1ll << n) - 1; }\n#define bcou __builtin_popcountll\ntemplate<class T, class U> inline bool chma(T &a, const U &b) {if (a < b) {a = b;r_ true;}r_ false;}\ntemplate<class U> inline bool chma(const U &b) { r_ chma(ma, b); }\ntemplate<class T, class U> inline bool chmi(T &a, const U &b) {    if (b < a) {        a = b;        r_ true;    }    r_ false;}\ntemplate<class U> inline bool chmi(const U &b) { r_ chmi(mi, b); }\n#define unique(v) v.erase( unique(v.begin(), v.end()), v.end() );\nint max(vi &a) {    int res = a[0];    fora(v, a) {        res = max(res, v);    }    r_ res;}\nint min(vi &a) {    int res = a[0];    fora(v, a) {        res = min(res, v);    }    r_ res;}\ntemplate<typename T> class fixed_point        : T {public:    explicit constexpr fixed_point(T &&t) noexcept: T(std::forward<T>(t)) {}    template<typename... Args> constexpr decltype(auto) operator()(Args &&... args) const { r_ T::operator()(*this, std::forward<Args>(args)...); }};template<typename T> static inline constexpr decltype(auto) fix(T &&t) noexcept { r_ fixed_point<T>{std::forward<T>(t)}; }\nconstexpr ll h4[] = {1, -1, 0, 0};\nconstexpr ll w4[] = {0, 0, -1, 1};\nconstexpr ll h8[] = {0, 1, 0, -1, -1, 1, 1, -1};\nconstexpr ll w8[] = {1, 0, -1, 0, 1, -1, 1, -1};\nint mei_inc(int h, int w, int H, int W, int i) {while (++i < 4) { if (inside(h + h4[i], w + w4[i], H, W))r_ i; }r_ i;}\n#define mei(nh, nw, h, w) for (int i = mei_inc(h, w, H, W, -1), nh = i<4? h + h4[i] : 0, nw = i<4? w + w4[i] : 0; i < 4; i=mei_inc(h,w,H,W,i), nh = h+h4[i], nw = w+w4[i])\nint mei_inc8(int h, int w, int H, int W, int i) {    while (++i < 8) {        if (inside(h + h8[i], w + w8[i], H, W))r_ i;    }    r_ i;}\n#define mei8(nh, nw, h, w) for (int i = mei_inc8(h, w, H, W, -1), nh = i<8? h + h8[i] : 0, nw = i<8? w + w8[i] : 0; i < 8; i=mei_inc8(h,w,H,W,i), nh = h+h8[i], nw = w+w8[i])\nint mei_incv(int h, int w, int H, int W, int i, vp &p) {    while (++i < sz(p)) { if (inside(h + p[i].fi, w + p[i].se, H, W))r_ i; }    r_ i;}\n#define meiv(nh, nw, h, w, p) for (int i = mei_incv(h, w, H, W, -1, p), nh = i<sz(p)? h + p[i].fi : 0, nw = i<sz(p)? w + p[i].se : 0; i < sz(p); i=mei_incv(h,w,H,W,i,p), nh = h+p[i].fi, nw = w+p[i].se)\n\nt_T void out2(T head) {    cout << head;}\ntemplate<class T, class... U> void out2(T head, U ... tail) {    cout << head << \" \";      out2(tail...);}\ntemplate<class T, class... U> void out(T head, U ... tail) {    cout << head << \" \";        out2(tail...);    cout << \"\" << endl;}\nt_T void out(T head) {    cout << head << endl; }\nvoid out() { cout << \"\" << endl; }\n\n\n/*@formatter:on*/\nint N, M, H, W;\nvi A, B, C;\n\n//14:53\nvoid solve() {\n    din(Q);\n    while (Q--) {\n        str S;\n        in(S);\n        N = sz(S);\n        vi rp(N);\n        vi last;\n        rer(i, N - 1) {\n            if (S[i] == ']')last += i + 1;\n            else if (S[i] == '[') {\n                rp[i] = last.back();\n                last.pop_back();\n            }\n        }\n        deb(rp);\n        auto ds=fix([&](auto get_win , int l, int r ) -> int  {\n            l++;\n            //数字\n            if(S[l]!='[') {\n                auto s = S.substr(l, r - l);\n                return ceil(stoi(s), 2);\n            }else{\n                vi V;\n                r = rp[l];\n                while(S[l] == '['){\n                    V += get_win(l, r);\n                    l = r;\n                    r = rp[l];\n                }\n                sort(V);\n                int su=0;\n                rep(i, ceil(sz(V), 2)){\n                    su += V[i];\n                }\n                return su;\n            }\n        });\n        out(ds(0, N));\n    }\n\n}\n\n\nsigned main() {\n    solve();\n    r_ 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#define D(x) cout << #x \" = \" << x << endl\n#define DD(x, y) cout << \"(\" #x \", \" #y \") = (\" << x << \", \" << y << \")\" << endl\n#define DDD(x, y, z) cout << \"(\" #x \", \" #y \", \" #z \") = (\" << x << \", \" << y << \", \" << z << \")\" << endl\n#define DV(v) for (auto __macro_vi : v){ cout << __macro_vi << \" \";} cout << endl;\n#define DA(a, n) for (int __macro_i = 0; __macro_i < n; ++__macro_i) { cout << a[__macro_i] << \" \"; } cout << endl;\n#define REP(i, n) for (int i = 0; i < n; ++i)\n#define ALL(v) (v).begin(), (v).end()\n#include<iostream>\n#include<vector>\n#include<cassert>\n#include<cmath>\n#include<string>\n#include<algorithm>\n\n\nusing namespace std;\n\n\nint n;\nstring s;\nint solve(string::iterator& begin) {\n    int ans = 0;\n    if (*begin == '[') {\n        begin++;\n        vector<int> v;\n        while(*begin != ']') {\n            v.push_back(solve(begin));\n        }\n        begin++;\n        sort(v.begin(), v.end());\n        REP(i, (v.size() + 1) / 2) ans += v[i];\n    } else {\n        while(*begin != ']') {\n            ans *= 10;\n            ans += *begin - '0';\n            begin++;\n        }\n        ans = (ans + 1) / 2;\n    }\n    // DD(distance(s.begin(), begin), ans);\n    return ans;\n}\n\nint main()\n{\n    cin >> n;\n    REP(i, n) {\n        cin >> s;\n        auto begin = s.begin();\n        cout << solve(begin) << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cstdlib>\n\nusing namespace std;\n\nint solve(string s){\n  int sum=0;\n  if(isdigit(s[0])){\n    istringstream iss(s);\n    iss >> sum;\n    return sum/2+1;\n  }\n  vector<int> data;\n  for(int i=0, j=0, k=0; i<s.size(); ++i){\n    if(isdigit(s[i])) continue;\n    if(s[i]=='[') ++k;\n    if(s[i]==']') --k;\n    if(!k){\n      data.push_back(solve(s.substr(j+1,i-j-1)));\n      j=i+1;\n    }\n  }\n  sort(data.begin(), data.end());\n  for(int i=0; i<=data.size()/2; ++i) sum+=data[i];\n  return sum;\n}\n\nint main(){\n  int n;\n  string s;\n  cin >> n;\n  for(int i=0; i<n; ++i){\n    cin >> s;\n    cout << solve(s.substr(1, s.size()-2)) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <string>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nint rec(string s, int l, int r) {\n    if (s[l+1] != '[') {\n        int x = stoi(s.substr(l+1,l-r-2));\n        x = ceil(x/2.0);\n        return x;\n    }\n    \n    vector<int> t;\n    int c = 0, tl, tr;\n    for (int i = l; i < r; i++) {\n        if (s[i] == '[') {\n            c++;\n            if (c == 2) tl = i;\n        }\n        else if (s[i] == ']') {\n            c--;\n            if (c == 1) {\n                tr = i;\n                t.push_back(rec(s,tl,tr+1));\n            }\n        }\n    }\n    int k = ceil(t.size()/2.0);\n    sort(t.begin(), t.end());\n    int sum = 0;\n    for (int i = 0; i < k; i++) sum += t[i];\n    \n    return sum;\n}\n\nint main(void){\n    int n;\n    cin >> n;\n    while (n--) {\n        string s;\n        cin >> s;\n        cout << rec(s,0,s.size()) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\ntypedef long long ll;\nusing namespace std;\n\nstring str;\nint idx;\n\nint getn() {\n    int res = 0;\n    while (true) {\n        char c = str[idx];\n        if (isdigit(c)) {\n            idx++;\n            res *= 10;\n            res += c-'0';\n        } else {\n            break;\n        }\n    }\n    return res;\n}\n\nll calc() {\n    idx++;\n    vector<ll> v;\n    while (true) {\n        char c = str[idx];\n        if (c == ']') {\n            idx++;\n            break;\n        }\n        if (isdigit(c)) {\n            int u = getn();\n            v.push_back(u/2+1);\n        } else {\n            v.push_back(calc());\n        }\n    }\n    sort(v.begin(), v.end());\n    ll res = 0;\n    //cout << v.size() << endl;\n    for (int i = 0; i < v.size()/2+1; i++) {\n        res += v[i];\n    }\n    return res;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n        cin >> str;\n        idx = 0;\n        cout << calc() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <iomanip>\n#include <cmath>\n\n#define MAX_N 100\n\nusing namespace std;\n\nint N;\nchar str[10000];\n\nint get_num(int l){\n\tint res = 0;\n\tfor (int i = l; str[i] != ']'; i++)\n\t{\n\t\tres += (str[i]-'0');\n\t\tres *= 10;\n\t}\n\tres /= 10;\n\treturn res;\n}\n\nint dfs(int l, int r){// \"[....]\"??¨?????£???????????????(...???)????????°?????????\n\tif(str[l+1] >= '0' && str[l+1] <= '9') return get_num(l+1)/2+1;\n\tint a[10000];\n\tint count = 0;// ??????????????°\n\tint k = 0, nl = l+1;\n\tfor (int i = l+1; i < r; i++)\n\t{\n\t\tif(str[i] == '['){\n\t\t\tk++;\n\t\t}else if(str[i] == ']'){\n\t\t\tk--;\n\t\t}\n\t\tif(k == 0){\n\t\t\ta[count] = dfs(nl, i);\n\t\t\tnl = i+1;\n\t\t\tcount++;\n\t\t}\n\t}\n\tsort(a, a+count);\n\tint sum = 0;\n\tfor (int i = 0; i < count/2+1; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\treturn sum;\n}\n\nvoid solve() {\n\tstring s = str;\n\tint res = dfs(0, s.length()-1);\n\tcout << res << endl;\n\treturn;\n}\n\nint main(){\n\tcin >> N;\n\tfor (int i = 0; i < N; i++)\n\t{\n\t\tcin >> str;\n\t\tsolve();\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\n#define INF (1<<30)\n#define INFLL (1ll<<60)\ntypedef pair<int, int> P;\ntypedef pair<int, P> E;\n#define MOD (1000000007ll)\n#define l_ength size\n\nvoid mul_mod(ll& a, ll b){\n\ta *= b;\n\ta %= MOD;\n}\n\nvoid add_mod(ll& a, ll b){\n\tb += MOD;\n\ta += b;\n\ta %= MOD;\n}\n\nint p[11111],v[11111][3333];\nstring s;\nstack<int> st;\n\nint solve(int i){\n\tint j,n=0,ret=0;\n\tfor(j=i+1; j<p[i]; ++j){\n\t\tif(s[j]=='['){\n\t\t\tv[i][n] = solve(j);\n\t\t\t++n;\n\t\t\tj = p[j];\n\t\t}else{\n\t\t\twhile(j<p[i]){\n\t\t\t\tret *= 10;\n\t\t\t\tret += (s[j]-'0');\n\t\t\t\t++j;\n\t\t\t}\n\t\t\treturn (ret+1)/2;\n\t\t}\n\t}\n\tsort(v[i],v[i]+n);\n\tfor(j=0; j<(n+1)/2; ++j){\n\t\tret += v[i][j];\n\t}\n\treturn ret;\n}\n\nint main(void){\n\tint k,n,i,j;\n\tcin >> k;\n\twhile(k--){\n\t\tcin >> s;\n\t\tn = s.l_ength();\n\t\tfor(i=0; i<n; ++i){\n\t\t\tif(s[i] == '['){\n\t\t\t\tst.push(i);\n\t\t\t}else if(s[i] == ']'){\n\t\t\t\tj = st.top();\n\t\t\t\tst.pop();\n\t\t\t\tp[j] = i;\n\t\t\t}\n\t\t}\n\t\tcout << solve(0) << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <bitset>\n#include <map>\n#include <tuple>\n#include <unordered_map>\n#include <list>\n#include <numeric>\n#include <utility>\n#include <iterator>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <ctime>\n#include <cassert>\n\n#define INF 1000000000\n#define LINF 9000000000000000000\n#define mod 1000000007\n\n#define rep(i,n) for(int i=0;i<int(n);i++)\n#define rrep(i,n) for(int i=n-1;i>=0;i--)\n#define REP(i,a,b) for(int i=(a);i<int(b);i++)\n#define all(x) (x).begin(),x.end()\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<long long>vll;\ntypedef pair<int,int> pi;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nint ddx[8]={-1,-1,0,1,1,1,0,-1};\nint ddy[8]={0,1,1,1,0,-1,-1,-1};\nbool debug=false;\n\n/*---------------------------------------------------*/\n\ntypedef string::const_iterator State;\n\nint number(State &begin){\n  int ret=0;\n  while(isdigit(*begin)){\n    ret*=10;\n    ret+=(*begin-'0');\n    begin++;\n  }\n  //cout<<\"ret: \"<<ret<<endl;\n  return ret;\n}\n\nint solve(State &begin){\n  //cout<<*begin<<endl;\n  if(*(++begin)!='[')return number(begin)/2+1;\n  vector<int> data;\n  while(*begin=='['){\n    data.push_back(solve(begin));\n    begin++;\n  }\n  sort(all(data));\n  int ret=0;\n  for(int i=0;i<data.size()/2+1;i++)ret+=data[i];\n  return ret;\n}\n\nint main(){\n  int n;\n  string s;\n  cin>>n;\n  for(int i=0;i<n;i++){\n    cin>>s;\n    State begin=s.begin();\n    cout<<solve(begin)<<endl;;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct Lex {\n  Lex(){}\n  void load(string s){ S = s; }\n  int solve(){\n    char *p = (char*)S.c_str();\n    return eval(&p);\n  };\n  int eval(char** p){\n    if (isdigit(**p)){\n      int r = 0;\n      while (isdigit(**p)){\n        r = r * 10 + **p - '0';\n        (*p)++;\n      }\n      return (r + 1) / 2;\n    }\n    vector<int> costs;\n    while (**p == '['){\n      consume(p, '[');\n      costs.push_back(eval(p));\n      consume(p, ']');\n    }\n    sort(costs.begin(), costs.end());\n    int n = (costs.size() + 1) / 2;\n    int r = 0;\n    for (int i = 0; i < n; i++) r += costs[i];\n    return r;\n  }\n  void consume(char** p, char expected){\n    assert(**p == expected);\n    (*p)++;\n  }\n  string S;\n};\n\nint main()\n{\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++){\n    string s;\n    cin >> s;\n    Lex lex;\n    lex.load(s);\n    cout << lex.solve() << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\nclass D {\npublic:\n\tint sets;\n\tint n;\n\tlist<D*> child;\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n\t~D() {\n\t}\n};\n\nchar c[BUFSIZ];\n\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') {\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; //'['\n\t\t\tsum += get(dd, l);\n\t\t\td->child.push_back(dd);\n\t\t\td->sets++;\n\t\t\tl++; //']'\n\t\t}\n\t\td->n = sum;\n\t} else {\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num;\n\t\treturn num;\n\t}\n\treturn sum;\n}\n\nint ans(D *d) {\n\t//cout << \"in\" << endl;\n\tif (d->sets == 0) {\n\t\t//cout << \"okk\" << endl;\n\t\treturn d->n / 2 + 1;\n\t}\n\t//else\n\tint sum = 0;\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\td->child.sort(func);\n\t//cout << \"sets::\" << d->sets << endl;\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tD *cur = *it;\n\t\t//cout << i << \":::\" << cur->n << endl;\n\t\tsum += ans(cur);\n\t\tit++;\n\t}\n\treturn sum;\n}\n\n\t\nvoid solve() {\n\tint n;\n\tint l;\n\tcin >> n;\n\tcout << n << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> c;\n\t\t//cout << c << endl;\n\t\tD *d = new D();\n\t\tl = 1;\n\t\tget(d, l);\n\t\tcout << ans(d) << endl;\n\t\t//cout << \"hoge\" << endl;\n\t\tdelete d;\n\t}\n}\n\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nint n, m;\nchar a[10005];\nvector<int> v[10005];\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%s\",a);\n\t\tint i, j, k;\n\t\tint level=0;\n\t\tfor(i=0;i<10000;i++)\n\t\t\tv[i].clear();\n\n\t\tfor(i=0;a[i];i++)\n\t\t{\n\t\t\tif(a[i] == '[')\n\t\t\t{\n\t\t\t\tlevel++;\n\t\t\t\tk=0;\n\t\t\t}\n\t\t\telse if(a[i] == ']')\n\t\t\t{\n\t\t\t\tif(a[i-1] >= '0' && a[i-1] <= '9')\n\t\t\t\t{\n\t\t\t\t\tk = (k+1)/2;\n\t\t\t\t\tv[level-1].push_back(k);\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tk=0;\n\t\t\t\t\tsort(v[level].begin(), v[level].end());\n\t\t\t\t\tfor(j=0;j<(v[level].size()+1)/2;j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tk+=v[level][j];\n\t\t\t\t\t}\n\t\t\t\t\tv[level-1].push_back(k);\n\t\t\t\t\tv[level].clear();\n\t\t\t\t}\n\t\t\t\tlevel--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tk*=10;\n\t\t\t\tk+=(a[i]-'0');\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",v[0][0]);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing VI = vector<ll>;\nusing VV = vector<VI>;\nusing VS = vector<string>;\nusing PII = pair<ll, ll>;\n\n// tourist set\ntemplate <typename A, typename B>\nstring to_string(pair<A, B> p);\n\ntemplate <typename A, typename B, typename C>\nstring to_string(tuple<A, B, C> p);\n\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p);\n\nstring to_string(const string& s) {\n  return '\"' + s + '\"';\n}\n\nstring to_string(const char* s) {\n  return to_string((string) s);\n}\n\nstring to_string(bool b) {\n  return (b ? \"true\" : \"false\");\n}\n\nstring to_string(vector<bool> v) {\n  bool first = true;\n  string res = \"{\";\n  for (int i = 0; i < static_cast<int>(v.size()); i++) {\n    if (!first) {\n      res += \", \";\n    }\n    first = false;\n    res += to_string(v[i]);\n  }\n  res += \"}\";\n  return res;\n}\n\ntemplate <size_t N>\nstring to_string(bitset<N> v) {\n  string res = \"\";\n  for (size_t i = 0; i < N; i++) {\n    res += static_cast<char>('0' + v[i]);\n  }\n  return res;\n}\n\ntemplate <typename A>\nstring to_string(A v) {\n  bool first = true;\n  string res = \"{\";\n  for (const auto &x : v) {\n    if (!first) {\n      res += \", \";\n    }\n    first = false;\n    res += to_string(x);\n  }\n  res += \"}\";\n  return res;\n}\n\ntemplate <typename A, typename B>\nstring to_string(pair<A, B> p) {\n  return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\";\n}\n\ntemplate <typename A, typename B, typename C>\nstring to_string(tuple<A, B, C> p) {\n  return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \")\";\n}\n\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p) {\n  return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \", \" + to_string(get<3>(p)) + \")\";\n}\n\nvoid debug_out() { cerr << '\\n'; }\n\ntemplate <typename Head, typename... Tail>\nvoid debug_out(Head H, Tail... T) {\n  cerr << \" \" << to_string(H);\n  debug_out(T...);\n}\n\n#ifdef LOCAL\n#define debug(...) cerr << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n#else\n#define debug(...) 42\n#endif\n// tourist set end\n\ntemplate<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }\ntemplate<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }\n\n#define FOR(i,a,b) for(ll i=(a);i<(b);++i)\n#define rep(i,b) FOR(i, 0, b)\n#define ALL(v) (v).begin(), (v).end()\n#define p(s) cout<<(s)<<'\\n'\n#define p2(s, t) cout << (s) << \" \" << (t) << '\\n'\n#define br() p(\"\")\n#define pn(s) cout << (#s) << \" \" << (s) << '\\n'\n#define p_yes() p(\"YES\")\n#define p_no() p(\"NO\")\n#define SZ(x) ((int)(x).size())\n#define SORT(A) sort(ALL(A))\n#define RSORT(A) sort(ALL(A), greater<ll>())\n#define MP make_pair\n\nvoid no(){p_no(); exit(0);}\nvoid yes(){p_yes(); exit(0);}\n\nconst ll mod = 1e9 + 7;\nconst ll inf = 1e18;\nconst double PI = acos(-1);\n\nbool is_num(char c){\n  ll v = c-'0';\n  if(0<=v && v<10){\n    return true;\n  }else{\n    return false;\n  }\n}\n\nbool is_num(string s){\n  for(char c : s){\n    if(!is_num(c)) return false;\n  }\n  return true;\n}\n\nll rec(string s){\n  string sub = s.substr(1, s.size()-2);\n  if(is_num(sub)){\n    ll n = stoll(sub);\n    return (n+1)/2;\n  }else{\n    VI V;\n    ll start = 0;\n    ll L = sub.size();\n    ll depth = 0;\n    rep(i, L){\n      char c = sub[i];\n      if(c=='['){\n        depth++;\n      }else if(c==']'){\n        depth--;\n        if(depth==0){\n          ll num = rec(sub.substr(start, i-start+1));\n          V.push_back(num);\n          start = i+1;\n        }\n      }\n    }\n    SORT(V);\n    // 先頭過半数をとる\n    ll H = (V.size()+1)/2;\n    ll sum = 0;\n    rep(i, H){\n      sum += V[i];\n    }\n    return sum;\n  }\n  debug(\"error\");\n  return -1;\n}\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n\n    // input\n    ll N; \n    cin >> N;\n\n    while(N--){\n      string s; cin >> s;\n      ll ans = rec(s);\n      p(ans);\n    }\n    \n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iomanip>\n#include <utility>\n#include <cstdlib>\n#include <sstream>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <ctime>\n#include <queue>\n#include <deque>\n#include <cmath>\n#include <stack>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define REP(i,m,n) for(int i=(m);i<(n);i++)\n#define ALL(a)  (a).begin(),(a).end()\n#define pb push_back\n#define sz size()\n\n\n\nstring pre(string s){   // \"][\" を空白に置き換え\n    string b=\"\";\n    rep(i,s.sz-1){\n        if(s[i]==']' && s[i+1]=='['){\n            b+=' ';\n            i++;\n        }\n        else{\n            b+=s[i];\n        }\n    }\n    b+=s[s.sz-1];\n    return b;\n}\n\n\nstring solve(int n,bool check,string s){\n    n++;\n    string tmp[100]={};\n\n    int count=0;\n    REP(j,n,s.sz){\n        if(s[j]!=']'){\n            if(s[j]!=' '){\n                tmp[count]+=s[j];\n            }\n            else{\n                count++;\n            }\n        }\n        else break;\n    }\n    vi a;\n    rep(i,count+1){\n        a.pb(stoi(tmp[i]));\n    }\n    sort(ALL(a));\n    \n    int sum=0;\n    rep(i,count/2+1){\n        if(check==false)\n            sum+=a[i]/2+1;\n        else\n            sum+=a[i];\n    }\n    return to_string((sum));\n}\n\n\nstring delSpace(string s){  // \"] [\" を \"][\" に置き換え\n    string ret=\"\";\n    rep(i,s.sz-2){\n        if(s[i]==']' && s[i+1]==' ' && s[i+2]=='['){\n            ret+=\"][\";\n            i+=2;\n        }\n        else{\n            ret+=s[i];\n        }\n    }\n    ret+=s[s.sz-2];\n    ret+=s[s.sz-1];\n    return ret;\n}\n\n\nint main(){\n    int t;\n    cin>>t;\n    \n    rep(times,t){\n        string s;\n        cin>>s;\n        int check=false;\n        s=pre(s);\n        while(1){\n            if(s.find(\"[\",0)==-1)break;\n\n            string n=\"\";\n    \n            rep(i,s.sz){\n                if(s[i+1]>='0' && s[i+1]<='9'){\n                    n+=solve(i,check,s);\n                    while(s[i]!=']')i++;\n                }\n                else{\n                    n+=s[i];\n                }\n            }\n            s=n;\n            check=true;\n        }\n        cout<<s<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nint main () {\n\n  std::vector<int> v[16384];\n  int num;\n  int depth;\n  int N;\n  std::string str;\n\n  std::cin >> N;\n  for(int i = 0; i < N; ++i) {\n\n    for(int j = 0; j < 16384; ++j) {\n      v[j].clear();\n    }\n    \n    std::cin >> str;\n    depth = 0;\n    for(int j = 0; j < str.size(); ++j) {\n      if( str[j] == '[' ) {\n        depth += 1;\n        num = 0;\n      }\n      else if( '0' <= str[j] and str[j] <= '9' ) {\n        num *= 10;\n        num += str[j] - '0';\n      }\n      else {\n        depth -= 1;\n        if( num != -1 ) {\n          v[depth].push_back((num+1)/2);\n        }\n        else {\n          std::sort(v[depth+1].begin(), v[depth+1].end());\n          int sum = 0;\n          for(int k = 0; k < (v[depth+1].size()+1)/2; ++k) {\n            sum += v[depth+1][k];\n          }\n          v[depth].push_back(sum);\n          v[depth+1].clear();\n        }\n        num = -1;\n      }\n    }\n    std::cout << v[0][0] << std::endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i,n,N) for(int i=n;i<(int)N;i++)\n#define ck(n,a,b) ((a)<=(n)&&(n)<(b))\n#define p(s) cout<<(s)<<endl\n#define F first\n#define S second\ntypedef long long ll;\nusing namespace std;\n\nint ind, N;\nstring S;\n\nll dfs(){\n\tif(S[ind] == '['){\n\t\tvector<ll> v;\n\t\tind++;\n\t\twhile(1){\n\t\t\tif(S[ind] == ']') break;\n\t\t\tv.push_back(dfs());\n\t\t}\n\t\tind++;\n\t\tsort(v.begin(), v.end());\n\t\tll ret = 0;\n\t\tREP(i,0,v.size()/2 + 1) ret += v[i];\n\t\treturn ret;\n\t}else if(isdigit(S[ind])){\n\t\tll ret = 0;\n\t\twhile(isdigit(S[ind])){\n\t\t\t//cout<<\"---\"<<S[ind]<<endl;\n\t\t\tret = ret*10LL + (ll)(S[ind] - '0');\n\t\t\t//cout<<\"> \"<<ret<<endl;\n\t\t\tind++;\n\t\t}\n\t\t//cout<<\"prev_ret: \"<<ret<<endl;\n\t\tret = ret/2+1;\n\t\t//cout<<\"ret: \"<<ret<<endl;\n\t\treturn ret;\n\t}\n\treturn 999999999;\n}\n\nint main() {\n\tcin>>N;\n\tREP(i,0,N){\n\t\tcin>>S;\n\t\tind = 0;\n\t\tcout<<dfs()<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <vector>\n#include <algorithm>\n#include<string>\n\n#define all(c) (c).begin(),(c).end()\n\nusing namespace std;\n\nint now;\nstring s;\n\nint number(){\n  int res=0;\n  while('0'<=s[now] && s[now]<='9'){\n    res*=10;\n    res+=s[now]-'0';\n    now++;\n  }\n  return res;\n}\n\nint factor(){\n\n  if(s[now]=='['){\n    vector<int>v;\n    while(s[now]=='['){\n      now++;\n      v.push_back(factor());\n      now++;\n    }\n    sort(all(v));\n    if(v.size()<2)return v[0];\n    int sum=0;\n    for(int i=0;i<v.size()/2+1;i++){\n      sum+=v[i];\n    }\n    return sum;\n  }\n  else if('0'<=s[now] && s[now]<='9'){\n    int res=number()/2+1;\n    \n    return res;\n  }\n}\n\nint main(void){\n\n  int tc;\n  cin >> tc;\n\n  cin.ignore();\n\n  while(tc--){\n    now=0;\n    getline(cin,s);\n    cout << factor() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\n// macro\n#define rep(i,n) for(i=0;i<n;i++)\n#define ll long long\n#define all(v) v.begin(), v.end()\n\n// code starts\nint main()\n{\n  int n;cin>>n;\n  int i,j;\n  rep(i,n)\n  {\n    string s;cin>>s;\n    vector<int> nums(0);\n    int now=0;\n    int knum=0;\n    while(now<s.size())\n    {\n      if(s[now]=='[')nums.emplace_back(-1);\n      else if(s[now]==']')\n      {\n        if(knum!=0)nums.emplace_back(knum/2+1);\n        knum=0;\n        nums.emplace_back(-2);\n      }\n      else\n      {\n        knum*=10;\n        knum+=(s[now]-'0');\n      }\n      now++;\n    }\n    int maxd=0;\n    int nowd=0;\n    rep(j,nums.size())\n    {\n      if(nums[j]==-1)\n      {\n        nowd++;\n        maxd=max(maxd,nowd);\n      }\n      else if(nums[j]==-2)nowd--;\n    }\n    while(maxd>1)\n    {\n      now=0;\n      while(now<nums.size())\n      {\n        if(nums[now]>0)\n        {\n          nums.erase(nums.begin()+now+1);\n          nums.erase(nums.begin()+now-1);\n        }\n        now++;\n      }\n      now=0;\n      nowd=0;\n      while(now<nums.size())\n      {\n        if(nums[now]==-1)nowd++;\n        if(nums[now]==-2)nowd--;\n        if(nowd==maxd-1)\n        {\n          vector<ll> ps(0);\n          now++;\n          int nowb=now;\n          while(nums[now]>0)\n          {\n            ps.emplace_back(nums[now]);\n            nums.erase(nums.begin()+now);\n          }\n          sort(all(ps));\n          ll mans=0;\n          rep(j,ps.size()/2+1)\n          {\n            mans+=ps[j];\n          }\n          nums.insert(nums.begin()+nowb,mans);\n        }\n        now++;\n      }\n      maxd--;\n    }\n    cout<<nums[1]<<endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <stdio.h>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <cmath>\n#include <complex>\n#include <map>\n#include <climits>\nusing namespace std;\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define EPS 1e-8\n#define F first\n#define S second\n#define mkp make_pair\n\nstatic const double PI=6*asin(0.5);\ntypedef long long ll;\ntypedef complex<double> CP;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef vector<int> vint;\nstatic const int INF=1<<24;\n\n\nint n;\nstring s;\nstring foo(string st){\n\t//cout<<st<<endl;\n\tif(st[1]>='0'&&st[1]<='9'){\n\t\tint j=0;\n\t\tvint v;\n\t\twhile(st[j]=='['){\n\t\t\tj++;\n\t\t\t//cout<<\"s[j]\"<<\" \"<<s[j]<<endl;\n\t\t\tstring ts=st.substr(j);\n\t\t\t//cout<<\"ts \"<<ts<<endl;\n\t\t\tstringstream tss;\n\t\t\ttss<<ts;\n\t\t\tint a;\n\t\t\ttss>>a;\n\t\t\t//cout<<\" a \"<<a<<endl;\n\t\t\tv.PB(a);\n\t\t\t//cout<<\"push \"<<a/2+1<<\" \"<<a<<endl;\n\t\t\twhile(st[j]>='0'&&st[j]<='9') j++;\n\t\t\tj++;\n\t\t\t//cout<<\"st[j] \"<<st[j]<<endl;\n\t\t}\n\t\tint a=0;\n\t\tsort(ALL(v));\n\t\t/*\n\t\tcout<<\"vv\\n\";\n\t\trep(i,v.size()){\n\t\t\tcout<<v[i]<<endl;\n\t\t}\n\t\tcout<<\"end vv\\n\";\n\t\t\n\t\t*/\n\t\trep(i,v.size()/2+1){\n\t\t\ta+=v[i];\n\t\t}\n\t\tstringstream ss1;\n\t\t//ss1<<\"[\";\n\t\tss1<<a;\n\t\t//ss1<<\"]\";\n\t\tstring res;\n\t\tss1>>res;\n\t\treturn res;\n\t}\n\telse{\n\t\tstringstream ss1;\n\t\tfor(int i=0;i<st.size();i++){\n\t\t\tint c=0,c2=0;\n\t\t\tstring ttt;\n\t\t\tfor(int j=i;j<st.size();j++){\n\t\t\t\tc2++;\n\t\t\t\tif(st[j]=='[') c++;\n\t\t\t\telse if(st[j]==']') c--;\n\t\t\t\tif(c==0){\n\t\t\t\t\t//cout<<st.substr(j)<<endl;\n\t\t\t\t\tttt=st.substr(i+1,c2-2);\n\t\t\t\t\ti=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//cout<<\"foo\\n\";\n\t\t\tss1<<\"[\";\n\t\t\tss1<<foo(ttt);\n\t\t\tss1<<\"]\";\n\t\t\t//cout<<\"foo end\\n\";\n\t\t}\n\t\tstring res;\n\t\tss1>>res;\n\t\t//if(res[0]=='[') res=foo(res);\n\t\treturn res;\n\t}\n\treturn \"\";\n}\nint main(){\n    cin>>n;\n    rep(i,n){\n        cin>>s;\n    \tstringstream ss3;\n    \trep(j,s.size()){\n    \t\tint c=0;\n    \t\tif(!(s[j+c]>='0'&&s[j+c]<='9')){\n    \t\t\twhile(!(s[j+c]>='0'&&s[j+c]<='9')){\n    \t\t\t\t//cout<<c<<endl;\n    \t\t\t\tc++;\n    \t\t\t}\n    \t\t\tss3<<s.substr(j,c);\n    \t\t\tj+=c-1;\n    \t\t}\n    \t\telse{\n    \t\t\tstring tt=s.substr(j);\n    \t\t\t//cout<<tt<<endl;\n    \t\t\tstringstream ss4;\n    \t\t\tss4<<tt;\n    \t\t\tint a;\n    \t\t\tss4>>a;\n    \t\t\t//cout<<\"a \"<<a<<endl;\n    \t\t\ta=a/2+1;\n    \t\t\tss3<<a;\n    \t\t\twhile(s[j]!=']') j++;\n    \t\t\tj--;\n    \t\t}\n    \t}\n    \tss3>>s;\n    \t//cout<<s<<endl;\n    \tstring ans=foo(s.substr(1,s.size()-2));\n    \tint a;\n    \twhile(ans[0]=='['){\n    \t\tans=foo(ans);\n    \t\t//cin>>a;\n    \t}\n    \tcout<<ans<<endl;\n    \t\n    }\n\t\n    return 0;\n}\n\n\n/*\n[[[99][59][63][85][51]][[1539][7995][467]][[51][57][79][99][3][91][59]]]\n[[99 59 63 85 51][1539 7995 467][51 57 79 99 3 91 59]]\n26+30+32  + 1004  + 87\n88 1004 87\n\n[[[[9][7][3]][[3][5][7]][[7][9][5]]][[[9][9][3]][[5][9][9]][[7][7][3]]][[[5][9][7]][[3][9][3]][[9][5][5]]]]\n6+5+7 7+8+6 7+4+6\n19 21 17\n11 13 10\n22\n36\n\n\n\n\n\n*/"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < n; ++i)\n\nclass Node{\npublic:\n    int sum;\n    vector<Node> ch;\n\n    void calc(){\n        if(ch[0].sum==0){\n            rep(i,ch.size()){\n                ch[i].calc();\n            }\n        }\n        sort(ch.begin(),ch.end());\n        rep(i,(ch.size()+1)/2){\n            sum+=ch[i].sum;\n        }\n    }\n    Node(){sum=0;ch=vector<Node>();}\n};\n\nvoid paser2(Node &n);\nNode paser(){\n    Node n;\n    getchar();\n    char c=getchar();\n\n    if(c=='['){\n        cin.putback(c);\n        paser2(n);\n    }\n    else if(c>='0'&&c<='9')\n    {\n        int d;\n        cin.putback(c);\n        cin>>d;\n        n.sum=(d+1)/2;\n        //cout<<\"input\"<<n.sum<<endl;\n    }\n    getchar();\n\n    return n;\n}\nvoid paser2(Node &n){\n    while(1){\n        char c=getchar();\n        if(c!='['){cin.putback(c);break;}\n        cin.putback(c);\n        n.ch.push_back(paser());\n    }\n}\nbool operator<(const Node &a,const Node &b){\n    return a.sum<b.sum;\n}\nint main(){\n    int N;cin>>N;\n    rep(i,N){\n        char c=getchar();\n        Node n=paser();\n        n.calc();\n        cout<<n.sum<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "// clang-format off\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define main signed main()\n#define loop(i, a, n) for (int i = (a); i < (n); i++)\n#define rep(i, n) loop(i, 0, n)\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define prec(n) fixed << setprecision(n)\nconstexpr int INF = sizeof(int) == sizeof(long long) ? 1000000000000000000LL : 1000000000;\nconstexpr int MOD = 1000000007;\nconstexpr double PI = 3.14159265358979;\ntemplate<typename A, typename B> bool cmin(A &a, const B &b) { return a > b ? (a = b, true) : false; }\ntemplate<typename A, typename B> bool cmax(A &a, const B &b) { return a < b ? (a = b, true) : false; }\nbool odd(const int &n) { return n & 1; }\nbool even(const int &n) { return ~n & 1; }\ntemplate<typename T = int> T in() { T x; cin >> x; return x; }\ntemplate<typename T = int> T in(T &&x) { T z(forward<T>(x)); cin >> z; return z; }\ntemplate<typename T> istream &operator>>(istream &is, vector<T> &v) { for (T &x : v) is >> x; return is; }\ntemplate<typename A, typename B> istream &operator>>(istream &is, pair<A, B> &p) { return is >> p.first >> p.second; }\ntemplate<typename T> ostream &operator<<(ostream &os, const vector<vector<T>> &v) { int n = v.size(); rep(i, n) os << v[i] << (i == n - 1 ? \"\" : \"\\n\"); return os; }\ntemplate<typename T> ostream &operator<<(ostream &os, const vector<T> &v) { int n = v.size(); rep(i, n) os << v[i] << (i == n - 1 ? \"\" : \" \"); return os; }\ntemplate<typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << p.first << ' ' << p.second; }\ntemplate<typename Head, typename Value> auto vectors(const Head &head, const Value &v) { return vector<Value>(head, v); }\ntemplate<typename Head, typename... Tail> auto vectors(Head x, Tail... tail) { auto inner = vectors(tail...); return vector<decltype(inner)>(x, inner); }\n// clang-format on\n\nmain {\n  int n;\n  cin >> n;\n  while (n--) {\n    string s;\n    cin >> s;\n    function<int(int)> dfs = [&](int i) -> int {\n      if (isdigit(s[i])) return stoll(s.substr(i)) / 2 + 1;\n      vector<int> v;\n      for (int j = i, c = 0;; j++) {\n        if (s[j] == '[') {\n          if (c == 0) v.emplace_back(dfs(j + 1));\n          c++;\n        }\n        if (s[j] == ']') {\n          if (c == 0) break;\n          c--;\n        }\n      }\n      int s = 0;\n      sort(all(v));\n      rep(j, v.size() / 2 + 1) s += v[j];\n      return s;\n    };\n    cout << dfs(1) << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF (1e9+1)\n\ntypedef string::const_iterator State;\n\n\nint number(State &begin){\n\tint ret = 0;\n\twhile(isdigit(*begin)){\n\t\tret*=10;\n\t\tret+=*begin-'0';\n\t\tbegin++;\n\t}\n\treturn (ret+1)/2;\n}\n\n\nint exp(State &begin){\n\tbegin++;\n\tif(isdigit(*begin)){\n\t\tint ret = number(begin);\n\t\tbegin++;\n\t\treturn ret;\n\t}\n\telse{\n\t\tvector<int> res;\n\t\twhile(*begin=='['){\n\t\t\tint t = exp(begin);\n\t\t\tres.pb(t);\n\t\t}\n\t\tbegin++;\n\t\t\n\t\tint ret=0;\n\t\tsort(all(res));\n\t\trep(i,(res.size()+1)/2)ret+=res[i];\n\t\treturn ret;\n\t}\n}\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tstring s;\n\t\tcin>>s;\n\t\tState begin = s.begin();\n\t\tcout<<exp(begin)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#include<ctype.h>\n#define INF 2000000000\n#define int long long int\n#define MOD 1000000007\n#define pb push_back\n#define cin1(n) (cin >> n)\n#define cin2(a,b) (cin >> a >> b)\n#define cin3(a,b,c) (cin >> a >> b >> c)\n#define cout(n) (cout << n << endl)\n#define rep(i,a,b) for(int i=(a);i<(b);++i)\n#define fr first \n#define sc second \n#define EPS (1e-10)\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector< vector<int> > vvi;\ntypedef vector<pair<int,int>> vpii;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vss;\ntypedef pair<int,int> pii;\n\nint dx[] = {1,-1,0,0};\nint dy[] = {0,0,1,-1};\nint n,m;\nint a,b;\nint p,q;\n\nvoid election(stack<string> &st) {\n\tbool flag = true;\n\tvi vote;\n\tst.pop();\n\twhile(flag) {\n\t\tst.pop();\n\t\t//cout(st.top());\n\t\tvote.pb(stoi(st.top()));\n\t\tst.pop();\n\t\tst.pop();\n\t\t//cout(st.top());\n\t\tif (st.top() == \"]\") {\n\t\t\t//cout(\"true\");\n\t\t\tflag = true;\n\t\t}else {\n\t\t\tflag = false;\n\t\t}\n\t}\n\n\tsort(vote.begin(),vote.end());\n\tint sum = 0;\n\trep(i,0,vote.size()/2 + 1) {\n\t\tsum += vote[i];\n\t}\n\tst.push(to_string(sum));\n\tst.push(\"]\");\n\treturn ;\n}\n\nsigned main() {\n\n\tstack<string> st;\n\n\tcin1(n);\n\n\n\trep(i,0,n) {\n\t\tstring str; cin1(str);\n\t\t//cout(str);\n\t\trep(j,0,str.size() ) {\n\t\t\tif (str[j] == '[') {\n\t\t\t\t//cout(j);\n\t\t\t\tst.push(\"[\");\n\t\t\t}else if(isdigit(str[j])) {\n\t\t\t\t//cout(\"in digit\");\n\t\t\t\tstring num = to_string(str[j] -'0');\n\t\t\t\t//cout << \"num is \" << num << endl;\n\t\t\t\tint idx = j+1;\n\t\t\t\t//cout(str[j]);\n\t\t\t\twhile(isdigit(str[idx])) {\n\t\t\t\t\tnum += to_string(str[idx] - '0');\t\n\t\t\t\t\tidx++;\n\t\t\t\t}\n\t\t\t\tj = idx - 1;\n\t\t\t\tint tmp = stoi(num);\n\t\t\t\ttmp = tmp/2 + 1;\n\t\t\t\tnum = to_string(tmp);\n\t\t\t\t//cout(num);\n\t\t\t\tst.push(num);\n\t\t\t}else if(str[j] == ']') {\n\t\t\t\tstring top = st.top();\n\t\t\t\tst.push(\"]\");\n\t\t\t\tif (top == \"]\") { \n\t\t\t\t\telection(st);\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tst.pop();\n\t\tcout(st.top());\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define pb push_back\n#define all(x) x.begin(),x.end()\n#define dbg(x) cout<<#x<<\":\"<<x<<endl\n#define int long long\n#define MOD 1e9+7\ntypedef pair<int,int> P;\ntypedef pair<int,P> PP;\n\nint d[111111];\nstring s;\n\nint dfs(int l,int r){\n  int res=0;\n  if(s[l+1]=='['){\n    vector<int> v;\n    l++;\n    while(1){\n\t v.pb(dfs(l,d[l]));\n\t l=d[l]+1;\n\t if(l==r)break;\n    }\n    sort(all(v));\n    for(int i=0;i<v.size()/2+1;i++){\n\t res+=v[i];\n    }\n    return res;\n  }\n  int t=1;\n  for(int i=r-1;i>l;i--){\n    res+=t*(int)(s[i]-'0');\n    t*=10;\n  }  \n  return (res+1)/2;\n}\n\nsigned main(){\n  int q;\n  cin>>q;\n  while(q--){\n    fill_n(d,111111,-1);\n    cin>>s;\n    int n=s.size();\n    stack<int> st;\n    for(int i=0;i<n;i++){\n\t if(s[i]=='[')st.push(i);\n\t if(s[i]==']'){\n\t   d[st.top()]=i;\n\t   st.pop();\n\t }\n    }\n    cout<<dfs(0,n-1)<<endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,x,y) for(int i=(x);i<(y);++i)\n#define debug(x) #x << \"=\" << (x)\n\n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define show(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define show(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\ntemplate<typename T> using vec=std::vector<T>;\n\nconst int inf=1<<30;\nconst long long int infll=1LL<<62;\nconst double eps=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n    os << \"[\";\n    for (const auto &v : vec) {\n    \tos << v << \",\";\n    }\n    os << \"]\";\n    return os;\n}\n\nint rec(string s){\n    if([&](){\n        rep(i,1,s.size()-1) if(!isdigit(s[i])) return false;\n        return true;\n    }()) return (stoi(s.substr(1,s.size()-2))+1)/2;\n\n    vector<int> val;\n    int d=0,l;\n    rep(i,1,s.size()-1){\n        if(s[i]=='['){\n            if(!d) l=i;\n            ++d;\n        }\n        if(s[i]==']'){\n            if(d==1) val.push_back(rec(s.substr(l,i-l+1)));\n            --d;\n        }\n    }\n\n    sort(val.begin(),val.end());\n    int res=0;\n    rep(i,0,(val.size()+1)/2) res+=val[i];\n    return res;\n};\nvoid solve(){\n    string s;\n    cin >> s;\n    cout << rec(s) << endl;\n}\n\nint main(){\n    std::cin.tie(0);\n    std::ios::sync_with_stdio(false);\n    cout.setf(ios::fixed);\n    cout.precision(10);\n    int n;\n    cin >> n;\n    rep(i,0,n) solve();\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n//00:15\n\nstring s;\nint p;\n\nint num(){\n\tint x = 0;\n\twhile( '0' <= s[p] && s[p] <= '9' ){\n\t\tx = x * 10 + s[p++] - '0';\n\t}\n\treturn x;\n}\nint dfs(){\n\tif( s[p] == '[' && s[p+1] != '[' ){\n\t\tp++;\n\t\tint ret = (num()+1)/2;\n\t\tp++;\n\t\treturn ret;\n\t}else{\n\t\tp++;\n\t\tvector<int> v;\n\t\twhile( s[p] != ']' ){\n\t\t\tv.push_back(dfs());\n\t\t}\n\t\tp++;\n\t\tsort(v.begin(),v.end());\n\t\tint ans = 0;\n\t\tfor(int i = 0 ; i < (v.size()+1)/2 ; i++)\n\t\t\tans += v[i];\n\t\treturn ans;\n\t}\n}\nint main(){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tcin >> s;\n\t\ts += \"~~\";\n\t\tp = 0;\n\t\tcout << dfs() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\n#define pb(a) push_back(a)\n#define mp(a,b) make_pair(a,b)\n#define ALL(a) (a).begin(),(a).end()\n#define SZ(a) ((int)(a).size())\n#define F first\n#define S second\ntypedef pair<int,int> PI;\n\nstring in;\nint p;\ntypedef long long ll;\n\nll rec(){\n  if(in[p]!='['){\n    int ret = 0;\n    while(isdigit(in[p])){\n      ret=(in[p]-'0')+ret*10;\n      ++p;\n    }\n    //cout << ret << endl;\n    return (ret+1)/2;\n  }\n\n  vector<ll> ve;\n  \n  ++p;\n  while(in[p]!=']'){\n    ve.pb(rec());\n    //++p;\n  }\n  ++p;\n  \n  sort(ALL(ve));\n  ll sum = 0;\n  rep(i,SZ(ve)/2+1) sum += ve[i];\n  return sum;\n}\n\nvoid solve(){\n  cin >> in;\n  p=0;\n  cout << rec() <<endl;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  rep(i,n) solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define mt make_tuple\n#define fi first\n#define se second\n#define all(a) (a).begin(), (a).end()\n#define endl \"\\n\"\n#define rep(i, a, b) for (auto i = (a); i < (b); ++i)\n#define rrep(i, a, b) for (auto i = (a); i > (b); --i)\n#define UNIQUE(v) (v).erase(unique((v).begin(), (v).end()), (v).end())\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#ifdef LOCAL_DEFINE\nstruct InitInput\n{\n  InitInput()\n  {\n    FILE *stream1;\n    stream1 = freopen(\"in.txt\", \"r\", stdin);\n    assert(stream1 != nullptr);\n    cerr << \"This problem is not interactive\" << endl;\n  }\n} LOCAL_INPUT;\nstruct LOCAL_OUTPUT\n{\n  LOCAL_OUTPUT()\n  {\n    FILE *stream2;\n    const char *outputfile = \"out.txt\";\n    stream2 = freopen(outputfile, \"w\", stdout);\n    assert(stream2 != nullptr);\n    cerr << \"output [ \" << outputfile << \" ]\" << endl;\n  }\n} /*LOCAL_OUTPUT*/;\n#define show(x) cerr << #x << \" = \" << (x) << \" (line \" << __LINE__ << \")\" << endl\n#define showA(a, n) \\\n  do{for(int i=0;i<(n);i++)cerr<<\"(\"<<i<<\" = \"<<(a)[i]<<\") \";cerr<<endl;}while(0)\n#define showA2(a, n, m) \\\n  do {for(int i=0;i<(n);i++){for(int j=0;j<(m);j++){cerr<<\"(\"<<i<<\", \"<<j<<\" = \"<<(a)[i][j]<<\") \";}cerr<<endl;}cerr<<endl;}while(0)\n#else\n#define show(x)\n#define showA(a, n)\n#define showA2(a, n, m)\n#endif\n\nstruct InitAim\n{\n  InitAim()\n  {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.precision(12);\n    cout << fixed;\n#ifdef LOCAL_DEFINE\n    cerr << \"This problem is not interactive\" << endl;\n#endif\n  }\n} aim_cpo;\n\n///////////////////////////////////////////////////////////////////////////////////\n// TEMPLATE(data structure)\n///////////////////////////////////////////////////////////////////////////////////\n\ntemplate <typename T>\nbool chmin(T &a, T b) { return a > b ? (a = b, true) : false; }\ntemplate <typename T>\nbool chmax(T &a, T b) { return a < b ? (a = b, true) : false; }\ntemplate <typename T>\nvoid ln(T i, T n) { cout << (i == n - 1 ? \"\\n\" : \" \"); }\ntemplate <typename T, typename S>\nostream &operator<<(ostream &out, const pair<T, S> &pair1)\n{\n  out << '(' << pair1.fi << \", \" << pair1.se << ')';\n  return out;\n}\ntemplate <typename T>\nostream &operator<<(ostream &out, const vector<T> &vector1)\n{\n  out << '[';\n  for (unsigned int i = 0; i < vector1.size(); i++)\n  {\n    out << vector1[i];\n    if (i == vector1.size() - 1)\n      out << \"]\";\n    else\n      out << \", \";\n  }\n  return out;\n}\n\n#define GCD(a, b) __gcd(a, b)\ntemplate <typename T>\nT LCM(T a, T b)\n{\n  return a / GCD(a, b) * b;\n}\ntemplate <typename T>\nT EXTGCD(T a, T b, T &x, T &y)\n{\n  T d = a;\n  if (b != 0)\n  {\n    d = EXTGCD(b, a % b, y, x);\n    y -= (a / b) * x;\n  }\n  else\n    x = 1, y = 0;\n  return d;\n}\ntemplate <typename T>\nbool is_prime(T a)\n{\n  for (int i = 2; i * i <= a; i++)\n    if (a % i == 0)\n      return true;\n  return false;\n}\ntemplate <typename T, typename S>\nT Pow(T a, S b)\n{\n  T res = 1, now = a;\n  while (b)\n  {\n    if (b & 1)\n      res *= now;\n    b >>= 1;\n    now *= now;\n  }\n  return res;\n}\n\n/* MOD */\nll MOD = 1000000000L + 7L;\n#define Madd(a, b) (((a) % MOD) + ((b) % MOD)) % MOD\n#define Mmul(a, b) (((a) % MOD) * ((b) % MOD)) % MOD\n#define Msub(a, b) (((a) % MOD) + MOD - ((b) % MOD)) % MOD\ntemplate <typename T, typename S>\nT ModPow(T a, S b)\n{\n  assert(b >= 0);\n  T res = 1, now = Msub(a, 0);\n  while (b)\n  {\n    if (b & 1)\n      res = Mmul(res, now);\n    b >>= 1;\n    now = Mmul(now, now);\n  }\n  return res;\n}\ntemplate <typename T>\nT ModInverse(T a, T mod, bool prime)\n{ // if mod is prime, \"prime\" is true.\n  if (prime)\n    return ModPow(a, mod - 2);\n  else\n  {\n    T x, y;\n    EXTGCD(a, mod, x, y);\n    return (mod + x % mod) % mod;\n  }\n}\ntemplate <typename T>\nT EulerTotient(T a)\n{\n  vector<pair<int, int>> v;\n  for (T i = 2; i * i <= a; i++)\n  {\n    int cnt = 0;\n    while (a % i == 0)\n    {\n      cnt++;\n      a /= i;\n    }\n    if (cnt != 0)\n      v.emplace_back(i, cnt);\n  }\n  if (a != 1)\n    v.emplace_back(a, 1);\n  //showV(v, (int) v.size());\n  T res = 1;\n  for (int i = 0; i < (int)v.size(); i++)\n  {\n    if (v[i].se == 1)\n    {\n      //res *= v[i].fi - 1;\n      res = Mmul(res, v[i].fi - 1);\n    }\n    else\n    {\n      //res *= Pow(v[i].fi, v[i].se) - Pow(v[i].fi, v[i].se - 1);\n      res = Mmul(res, Msub(ModPow(v[i].fi, v[i].se), ModPow(v[i].fi, v[i].se - 1)));\n    }\n  }\n  return res;\n}\n#define Mdivide(a, b) Mmul(((a) % MOD), (ModInverse((b), MOD, true))) % MOD\nll comb(ll a, ll b)\n{\n  chmin(b, a - b);\n  ll res = 1LL, now = a;\n  for (ll i = 1; i <= b; i++)\n  {\n    res = Mmul(res, now);  //res *= now;\n    res = Mdivide(res, i); // res /= i;\n    now--;\n  }\n  return res;\n}\n\ntemplate <typename T>\nclass BIT\n{\npublic:\n  BIT(int size)\n  {\n    BITTable.assign(++size, 0);\n  }\n  T sum(int k)\n  {\n    T res = 0;\n    for (++k; k > 0; k -= k & -k)\n    {\n      res += BITTable[k];\n    }\n    return res;\n  }\n  T sum(int l, int r)\n  {\n    if (l == 0)\n      return sum(r);\n    return sum(r) - sum(l - 1);\n  }\n  void update(int k, T x)\n  { // b[k] += x;\n    for (++k; k < (int)BITTable.size(); k += k & -k)\n      BITTable[k] += x;\n  }\n\nprivate:\n  vector<T> BITTable;\n};\n\ntemplate <typename T>\nclass IntervalTree\n{\n  using F = function<T(T, T)>;\n\npublic:\n  IntervalTree(int n, const F func, const T init) : func(func), init(init)\n  {\n    size = 1;\n    while ((int)size < n)\n      size <<= 1;\n    table.assign(2 * size, init);\n  }\n  void set(int k, T &x)\n  {\n    table[size + k] = x;\n  }\n  void build()\n  {\n    for (int i = size - 1; i >= 0; --i)\n    {\n      table[i] = func(table[i * 2], table[i * 2 + 1]);\n    }\n  }\n  void update(int k, const T &x)\n  {\n    k += size;\n    table[k] = x;\n    while (k >>= 1)\n    {\n      table[k] = func(table[k * 2], table[k * 2 + 1]);\n    }\n  }\n  T query(int a, int b)\n  {\n    T L = init, R = init;\n    for (a += size, b += size; a < b; a >>= 1, b >>= 1)\n    {\n      if (a & 1)\n        L = func(L, table[a++]);\n      if (b & 1)\n        R = func(table[--b], R);\n    }\n    return func(L, R);\n  }\n  T operator[](const int k) const\n  {\n    return table[k + size];\n  }\n\nprivate:\n  unsigned int size;\n  vector<T> table;\n  const F func;\n  const T init;\n};\n\nclass UnionFind\n{\npublic:\n  explicit UnionFind(int _n) : n(_n)\n  {\n    par.resize(static_cast<unsigned long>(_n));\n    rank.resize(static_cast<unsigned long>(_n));\n    sizes.resize(static_cast<unsigned long>(_n));\n    for (int i = 0; i < _n; i++)\n    {\n      par[i] = i;\n      rank[i] = 0;\n      sizes[i] = 1;\n    }\n  }\n  int find(int a)\n  {\n    if (par[a] == a)\n      return a;\n    return par[a] = find(par[a]);\n  }\n  bool same(int a, int b)\n  {\n    return find(a) == find(b);\n  }\n  void unite(int a, int b)\n  {\n    link(find(a), find(b));\n  }\n  int size(int a)\n  {\n    return sizes[find(a)];\n  }\n  void view()\n  {\n    for (int i = 0; i < n; i++)\n    {\n      cout << \" par\"\n           << \"[\" << i << \"]=\" << par[i] << ((i == n - 1) ? \"\\n\" : \",\");\n    }\n    for (int i = 0; i < n; i++)\n    {\n      cout << \"size\"\n           << \"[\" << i << \"]=\" << sizes[i] << ((i == n - 1) ? \"\\n\" : \",\");\n    }\n    cout << endl;\n  }\n\nprivate:\n  void link(int a, int b)\n  {\n    if (same(a, b))\n      return;\n    if (rank[a] > rank[b])\n    {\n      par[b] = a;\n      sizes[a] += sizes[b];\n      sizes[b] = 0;\n    }\n    else\n    {\n      par[a] = b;\n      if (rank[a] == rank[b])\n        rank[b]++;\n      sizes[b] += sizes[a];\n      sizes[a] = 0;\n    }\n  }\n  int n;\n  vector<int> par;\n  vector<int> rank;\n  vector<int> sizes;\n};\n\ntemplate<typename T>\nclass Dinic{\npublic:\n  Dinic(int SIZE) :SIZE(SIZE) {\n    v = vector<vector<tuple<int, T, int>>>(SIZE + 10);\n  }\n\n  void AddEdge(int from, int to, T cap) {\n    v[from].push_back(make_tuple(to, cap, v[to].size()));\n    v[to].push_back(make_tuple(from, 0, v[from].size() - 1));\n  }\n\n  void bfs(int s) {\n    level = vector<int>(SIZE + 10, -1);\n    queue<int> q;\n    level[s] = 0;\n    q.push(s);\n    while (!q.empty()) {\n      int now = q.front(); q.pop();\n      for (int i = 0; i < (int)v[now].size(); i++) {\n        int next, nextrv; T nextc; tie(next, nextc, nextrv) = v[now][i];\n        if (nextc > 0 && level[next] < 0) {\n          level[next] = level[now] + 1;\n          q.push(next);\n        }\n      }\n    }\n  }\n\n  T dfs(int now, int t, T f) {\n    if (now == t) return f;\n    for (int &i = iter[now]; i < (int)v[now].size(); i++) {\n      int next, nextrv; T nextc; tie(next, nextc, nextrv) = v[now][i];\n      if (nextc > 0 && level[now] < level[next]) {\n        T d = dfs(next, t, min(f, nextc));\n        if (d > 0) {\n          get<1>(v[now][i]) -= d;\n          get<1>(v[next][nextrv]) += d;\n          return d;\n        }\n      }\n    }\n    return 0;\n  }\n\n  T max_flow(int s, int t) {\n    T flow = 0;\n    for (;;) {\n      bfs(s);\n      if (level[t] < 0) return flow;\n      iter = vector<int>(SIZE + 10, 0);\n      int f;\n      while ((f = dfs(s, t, INT_MAX)) > 0) {\n        flow += f;\n      }\n    }\n  }\nprivate:\n  int SIZE;\n  vector<vector<tuple<int, T, int>>> v;\n  vector<int> level, iter;\n};\n\ntemplate< typename flow_t, typename cost_t >\nstruct PrimalDual {\n  const cost_t INF;\n\n  struct edge {\n    int to;\n    flow_t cap;\n    cost_t cost;\n    int rev;\n    bool isrev;\n  };\n  vector< vector< edge > > graph;\n  vector< cost_t > potential, min_cost;\n  vector< int > prevv, preve;\n\n  PrimalDual(int V) : graph(V), INF(numeric_limits< cost_t >::max()) {}\n\n  void add_edge(int from, int to, flow_t cap, cost_t cost) {\n    graph[from].emplace_back((edge) {to, cap, cost, (int) graph[to].size(), false});\n    graph[to].emplace_back((edge) {from, 0, -cost, (int) graph[from].size() - 1, true});\n  }\n\n  cost_t min_cost_flow(int s, int t, flow_t f) {\n    int V = (int) graph.size();\n    cost_t ret = 0;\n    using Pi = pair< cost_t, int >;\n    priority_queue< Pi, vector< Pi >, greater< Pi > > que;\n    potential.assign(V, 0);\n    preve.assign(V, -1);\n    prevv.assign(V, -1);\n\n    while(f > 0) {\n      min_cost.assign(V, INF);\n      que.emplace(0, s);\n      min_cost[s] = 0;\n      while(!que.empty()) {\n        Pi p = que.top();\n        que.pop();\n        if(min_cost[p.second] < p.first) continue;\n        for(int i = 0; i < graph[p.second].size(); i++) {\n          edge &e = graph[p.second][i];\n          cost_t nextCost = min_cost[p.second] + e.cost + potential[p.second] - potential[e.to];\n          if(e.cap > 0 && min_cost[e.to] > nextCost) {\n            min_cost[e.to] = nextCost;\n            prevv[e.to] = p.second, preve[e.to] = i;\n            que.emplace(min_cost[e.to], e.to);\n          }\n        }\n      }\n      if(min_cost[t] == INF) return -1;\n      for(int v = 0; v < V; v++) potential[v] += min_cost[v];\n      flow_t addflow = f;\n      for(int v = t; v != s; v = prevv[v]) {\n        addflow = min(addflow, graph[prevv[v]][preve[v]].cap);\n      }\n      f -= addflow;\n      ret += addflow * potential[t];\n      for(int v = t; v != s; v = prevv[v]) {\n        edge &e = graph[prevv[v]][preve[v]];\n        e.cap -= addflow;\n        graph[v][e.rev].cap += addflow;\n      }\n    }\n    return ret;\n  }\n\n  void output() {\n    for(int i = 0; i < graph.size(); i++) {\n      for(auto &e : graph[i]) {\n        if(e.isrev) continue;\n        auto &rev_e = graph[e.to][e.rev];\n        cout << i << \"->\" << e.to << \" (flow: \" << rev_e.cap << \"/\" << rev_e.cap + e.cap << \")\" << endl;\n      }\n    }\n  }\n};\n\n\n///////////////////////////////////////////////////////////////////////////////////\n// MAIN\n///////////////////////////////////////////////////////////////////////////////////\n// 735134400 約数が1344個ある高度合成数(<= 1e9)\n// 897612484786617600 約数が103680個ある高度合成数(<= 1e18)\n// 苦手分野 重複順列\n// LLの数値をつかう時は最後にLLをつける癖をつけよう\n\nstring s;\n\nint dfs(int begin, int end) {\n  stack<int> st;\n  bool flag = false;\n  vector<int> v;\n  rep(i, begin + 1, end) {\n    if (s[i] == '[') {\n      st.push(i);\n      flag = true;\n    } else if (s[i] == ']') {\n      if (st.size() == 1) v.pb(dfs(st.top(), i));\n      st.pop();\n    }\n  }\n  if (flag) {\n    sort(all(v));\n    int t = ((int)v.size() + 1) / 2;\n    int res = 0;\n    rep(i, 0, t) res += v[i];\n    return res;\n  } else {\n    int res = 0;\n    rep(i, begin + 1, end) {\n      res *= 10;\n      res += s[i] - '0';\n    }\n    return (res + 1) / 2;\n  }\n}\n\nvoid solve(int &n) {\n  rep(t, 0, n) {\n    cin >> s;\n    cout << dfs(0, (int)s.size() - 1) << endl;\n  }\n}\n\nint main()\n{\n  int n; cin >> n;\n  solve(n);\n#ifdef LOCAL_DEFINE\n  cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \"s.\" << endl;\n  show(MOD);\n#endif\n  return 0;\n}\n\n///////////////////////////////////////////////////////////////////////////////////\n// NOTE\n///////////////////////////////////////////////////////////////////////////////////\n/*\n*/\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint toint(string &str, int &i){\n\tint j = 0;\n\twhile('0' <= str[i+j] && str[i+j] <= '9'){\n\t\tj++;\n\t}\n\tint ret = stoi(str.substr(i,j));\n\tret = (ret+1)/2;\n\ti+=j;\n\treturn ret;\n}\n\nint calc(string &str, int &i, int end){\n\tvector<int> v;\n\tint ret = 0;\n\tfor(;i < end;i++){\n\t\tif(str[i] == '['){\n\t\t\tint idx = i+1;\n\t\t\ti++;\n\t\t\tint d = 1;\n\t\t\twhile(1){\n\t\t\t\tif(str[idx] == ']') d--;\n\t\t\t\telse if(str[idx] == '[')d++;\n\n\t\t\t\tif(d == 0) break;\n\t\t\t\tidx++;\n\t\t\t}\n\t\t\tv.push_back(calc(str, i, idx));\n\t\t\ti = idx;\n\t\t}\n\t\telse if(str[i] == ']'){\n\t\t\tcontinue;\n\t\t}\n\t\telse{\n\t\t\t//cout << str[i] << endl;\n\t\t\tv.push_back(toint(str,i));\n\t\t}\n\t}\n\tsort(v.begin(), v.end());\n\tfor(int j = 0; j < (v.size()+1)/2; j++){\n\t\tret += v[j];\n\t}\n\t//for(int j = 0; j < v.size(); j++){\n\treturn ret;\n}\n\n\nint main(){\n\tint nn; cin >> nn;\n\tfor(int z = 0; z < nn; z++){\n\t\tstring str;cin >> str;\n\t\tint i = 1;\n\t\tcout << calc(str, i, str.size()) << endl;\n\t}\n\n\treturn 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\nclass D {\npublic:\n\tint sets;\n\tint n;\n\tlist<D*> child;\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n\t~D() {\n\t}\n};\n\nchar c[10002];\n\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') {\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; //'['\n\t\t\tsum += get(dd, l);\n\t\t\td->child.push_back(dd);\n\t\t\td->sets++;\n\t\t\tl++; //']'\n\t\t}\n\t\td->n = sum;\n\t} else {\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num;\n\t\treturn num;\n\t}\n\treturn sum;\n}\n\nint ans(D *d) {\n\t//cout << \"in\" << endl;\n\tif (d->sets == 0) {\n\t\t//cout << \"okk\" << endl;\n\t\treturn d->n / 2 + 1;\n\t}\n\t//else\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\td->child.sort(func);\n\t//cout << \"sets::\" << d->sets << endl;\n\tlist <int> ilist;\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets; i++) {\n\t\tD *cur = *it;\n\t\t//cout << i << \":::\" << cur->n << endl;\n\t\tilist.push_back(ans(cur));\n\t\tit++;\n\t}\n\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\tint sum = 0;\n\tauto iit = ilist.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tsum += *iit;\n\t\tiit++;\n\t}\n\treturn sum;\n}\n\n\t\nvoid solve() {\n\tint n;\n\tint l;\n\tcin >> n;\n\tcout << n << endl;\n\tcin >> c;\n\t//cout << c << endl;\n\tD *dx = new D();\n\tl = 1;\n\tget(dx, l);\n\tcout << ans(dx);\n\t//cout << \"hoge\" << endl;\n\tdelete dx;\n\tfor (int i = 1; i < n; i++) {\n\t\tcout << endl;\n\t\tcin >> c;\n\t\t//cout << c << endl;\n\t\tD *d = new D();\n\t\tl = 1;\n\t\tget(d, l);\n\t\tcout << ans(d);\n\t\t//cout << \"hoge\" << endl;\n\t\tdelete d;\n\t}\n}\n\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#include<cmath>\n#include<climits>\n#include<string>\n#include<set>\n#include<map>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<((int)(n));i++)\n#define reg(i,a,b) for(int i=((int)(a));i<=((int)(b));i++)\n#define irep(i,n) for(int i=((int)(n))-1;i>=0;i--)\n#define ireg(i,a,b) for(int i=((int)(b));i>=((int)(a));i--)\ntypedef long long int lli;\ntypedef pair<int,int> mp;\n#define fir first\n#define sec second\n#define IINF INT_MAX\n#define LINF LLONG_MAX\n\nint n;\nchar is[10005];\nint ls;\n\nint dfs(int& no,int d){\n\t//printf(\"dfsin .. %d %c\\n\",no,is[no]);\n\tif(is[no]!='['){\n\t\t//??°?????¨?????????????????????\n\t\tstring ns=\"\";\n\t\twhile(is[no]!=']'){\n\t\t\tns+=is[no];\n\t\t\tno++;\n\t\t}\n\t\tint np = atoi(ns.c_str());\n\t\t//printf(\"   %d %c\\n\",np,is[no]);\n\t\treturn np/2+1;\n\t}\n\tvector<int> cs;\n\t//??¨???????????????\n\tno++;\n\twhile(is[no]!=']'){\n\t\tint to = dfs(no,d+1);\n\t\tcs.push_back(to);\n\t}\n\tno++;\n\tint res=0;\n\tsort(cs.begin(),cs.end());\n\trep(i,(cs.size()/2)+1){\n\t\tres+=cs[i];\n\t}\n\t//printf(\"%d\\n\",res);\n\treturn res;\n}\n\n\nint main(void){\n\tscanf(\"%d\",&n);\n\trep(i,n){\n\t\tscanf(\"%s\",is);\n\t\tls = strlen(is);\n\t\tint po=0;\n\t\tint ans = dfs(po,0);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <ctype.h>\n#include <string> \n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <cstdlib>\n#include <map>\n#include <queue>\n#include <utility>\n#include <vector>\n#include <set>\n#include <list>\n  \nusing namespace std;\n\nint StoI(string s)\n{\n    int ans = 0;\n    for(int i = 0; i < s.length(); i++){\n        ans += (s[i] - '0') * (int)pow(10, s.length() - 1 - i);\n    }\n    return ans;\n}\n\nlong long int solve(string s)\n{\n    // cout << s << endl;\n    bool flag = false;\n    string a = \"\";\n    int leftnum = 0;\n    vector<int> result;\n    for(int i = 1; i < s.length() - 1; i++){\n        a += s[i];\n        if(s[i] == '[') leftnum++;\n        else if(s[i] == ']') leftnum--;\n        if(leftnum > 1) flag = true;\n        if(leftnum == 0){\n            if(flag){\n                result.push_back(solve(a));\n            } else {\n                a = a.substr(1, a.length() - 2);\n                // cout << a << endl;\n                result.push_back(StoI(a) / 2 + 1);\n            }\n            a = \"\";\n            flag = false;\n        }\n    }\n    sort(result.begin(), result.end());\n    long long int ans = 0;\n    for(int i = 0; i < result.size() / 2 + 1; i++){\n        // cout << result[i] << endl;\n        ans += result[i];\n    }\n    return ans;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    string s;\n    for(int i = 0; i < n; i++){\n        cin >> s;\n        cout << solve(s) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> P;\nconst ll MOD = 1000000007;\nconst int IINF = INT_MAX;\nconst ll LLINF = LLONG_MAX;\nconst int MAX_N = int(5e5 + 5);\nconst double EPS = 1e-10;\nconst int di[] = {0, 1, 0, -1}, dj[] = {1, 0, -1, 0};\n#define REP(i, n) for (int i = 0; i < n; i++)\n#define REPR(i, n) for (int i = n; i >= 0; i--)\n#define SORT(v) sort((v).begin(), (v).end())\n#define ALL(v) (v).begin(), (v).end()\n\nstring s;\nint k=0;\n\nint rec(){\n    vector<int> ls;\n    while(k<s.size()){\n        if(s[k]=='['){\n            k++;\n            ls.push_back(rec());\n        }\n        else{\n            int tmp=0;\n            while(s[k]>='0' && s[k]<='9'){\n                tmp *= 10;\n                tmp += s[k]-'0';\n                k++;\n            }\n            k++;\n            if(tmp>0)return tmp/2+1;\n            break;\n        }\n    }\n    int res=0;\n    SORT(ls);\n    REP(i,int(ls.size())/2+1){\n        res += ls[i];\n    }\n    return res;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    REP(i,n){\n        cin >> s;\n        k=0;\n        cout << rec() << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\n#define REP(i,n) for(ll i=0;i<n;++i)\n#define RREP(i,n) for(ll i=n-1;i>=0;--i)\n#define FOR(i,m,n) for(ll i=m;i<n;++i)\n#define RFOR(i,m,n) for(ll i=n-1;i>=m;--i)\n#define ALL(v) (v).begin(),(v).end()\n#define PB(a) push_back(a)\n#define UNIQUE(v) v.erase(unique(ALL(v)),v.end());\n#define DUMP(v) REP(aa, (v).size()) { cout << v[a]; if (a != v.size() - 1)cout << \" \"; else cout << endl; }\n#define INF 1000000001ll\n#define MOD 1000000007ll\n#define EPS 1e-9\n\nconst int dx[8] = { 1,1,0,-1,-1,-1,0,1 };\nconst int dy[8] = { 0,1,1,1,0,-1,-1,-1 };\n\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nll max(ll a, int b) { return max(a, ll(b)); }\nll max(int a, ll b) { return max(ll(a), b); }\nll min(ll a, int b) { return min(a, ll(b)); }\nll min(int a, ll b) { return min(ll(a), b); }\n///(?´????????`)(?´????????`)(?´????????`)(?´????????`)(?´????????`)(?´????????`)///\nint i;\nstring s;\nint num() {\n\tint ret = 0;\n\twhile (isdigit(s[i])) {\n\t\tret *= 10;\n\t\tret += s[i] - '0';\n\t\t++i;\n\t}\n\treturn (ret + 1) / 2;\n}\nint f() {\n\t\n\tif (isdigit(s[i])) {\n\t\tint a = num();\n\t\t++i;\n\t\treturn a;\n\n\t}\n\tvi v;\n\n\twhile (i<s.size()&&s[i] != ']') {\n\t\t++i;\n\t\tv.push_back(f());\n\t}\n\tint ret = 0;\n\tsort(ALL(v));\n\tcout << \"i: \"<<i << endl;\n\tREP(j, (v.size() + 1) / 2) {\n\t\tret += v[j];\n\t}\n\t++i;\n\treturn ret;\n}\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tint n;\n\tcin >> n;\n\tREP(a, n) {\n\t\tcin >> s;\n\t\ti = 0;\n\t\tcout << f() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nvector<int> v;\nint DFS(int x){\n\tvector<int> lis;\n\tint pnt=x,cnt=0;\n\twhile(1){pnt++;\n\t\tif(v[pnt]==-2)break;\n\t\tif(v[pnt]==-1)lis.push_back(DFS(pnt));\n\t\tif(v[pnt]>0)cnt++;\n\t}v[x]=0,v[pnt]=0;\n\tif(cnt==1)return v[pnt-1]/2+1;cnt=0;\n\tsort(lis.begin(),lis.end());\n\tfor(int i=0;i<=lis.size()/2;i++)cnt+=lis[i];\n\treturn cnt;\n}\nint main(){\n\tint n;cin>>n;string s;\n\twhile(n--){cin>>s;v.clear();int cnt=0;\n\t\tfor(int i=0;i<s.size();i++){\n\t\t\tif(s[i]=='[')v.push_back(-1);\n\t\t\tif(s[i]==']'){\n\t\t\t\tif(cnt>0)v.push_back(cnt);\n\t\t\t\tv.push_back(-2);cnt=0;\n\t\t\t}if(s[i]>='0'&&s[i]<='9')cnt*=10,cnt+=s[i]-'0';\n\t\t}cout<<DFS(0)<<endl;\n\t}return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<string>\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\n\ntypedef int number;\n\nint c;\nstring str;\n\nvoid debug(string str) {\n//  cout << str << endl;\n}\n\nint minimum(vector<number> v, int n) {\n  sort(v.begin(), v.end());\n\n  int sum = 0;\n  REP(i, n) {\n    sum += v[i];\n  }\n  return sum;\n}\n\n/*\n * A -> \"[\" A* \"]\" | Num\n * Num -> Digit*\n */\n\nnumber A();\nnumber Num();\n\nnumber A() {\n  debug(\"A:\" + str.substr(c));\n  if (str[c] == '[') {\n    c++; // read [\n    int p;\n    vector<number> children;\n    while (p = c, (str[p] == '[' || isdigit(str[p]))) {\n      number a = A();\n      children.push_back(a);\n    }\n    c++; // read ]\n    int len = children.size();\n    return minimum(children, (1 + len) / 2);\n  } else {\n    number num = Num();\n    return num;\n  }\n}\n\nnumber Num() {\n  debug(\"Num:\" + str.substr(c));\n  int val = 0;\n  while (isdigit(str[c])) {\n    val = val * 10 + (str[c] - '0');\n    c++;\n  }\n  return (1 + val) / 2;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  REP(i, n) {\n    cin >> str;\n    c = 0;\n\n    cout << A() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <vector>\n#include <cfloat>\n#include <string>\n#include <cmath>\n#include <set>\n#include <cstdlib>\n#include <map>\n#include <ctime>\n#include <iomanip>\n#include <functional>\n#include <deque>\n#include <iostream>\n#include <cstring>\n#include <queue>\n#include <cstdio>\n#include <stack>\n#include <climits>\n#include <sys/time.h>\n#include <cctype>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint val[3000];\nvector <int> tree[3000];\n\nint rec(int p, int hei) {\n  if (val[p] != -1) return val[p];\n\n  int ret = 0;\n  vector <int> list;\n  for (int i = 0; i < tree[p].size(); i++) {\n    list.push_back(rec(tree[p][i], hei+1));\n  }\n\n  sort(list.begin(), list.end());\n  for (int i = 0; i < list.size()/2+1; i++) {\n    ret += list[i];\n  }\n  \n  return val[p] = ret;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    string str;\n    cin >> str;\n\n    vector <int> temp;\n    for (int j = 0; j < 3000; j++) {\n      tree[j] = temp;\n    }\n\n    memset(val, -1, sizeof(val)); // 入ってないところは-1\n    stack <int> st;\n    int cnt = 0;\n    int p = 0;\n    st.push(cnt);\n    while(!st.empty()) {\n      p++;\n      if (str[p] == '[') {\n\tcnt++;\n\tst.push(cnt);\n      }else if (str[p] == ']') {\n\tint topv = st.top(); st.pop();\n\tif (!st.empty()) {\n\t  tree[st.top()].push_back(topv);\n\t  // tree[topv].push_back(st.top());\n\t}\n      }else {\n\tint v = 0;\n\tfor (; p < str.size(); p++) {\n\t  if (str[p] == ']') {\n\t    p--;\n\t    break;\n\t  }\n\t  v = v*10+str[p]-'0';\n\t}\n\tval[cnt] = v/2+1;\n      }\n    }\n\n    cout << rec(0, 0) << endl;\n\n    // for (int i = 0; i <= cnt; i++) {\n    //   std::cout << i << \":\";\n    //   for (int j = 0; j < tree[i].size(); j++) {\n    // \tstd::cout << tree[i][j] << \" \";\n    //   }\n    //   std::cout << \" = \" << val[i] << std::endl;\n    // }\n    \n    \n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    /*[[A][B][C]] -> A/2 + B/2\n      [ [ [ [ A ] [ B ] ] [ [ C ] ] ] [ [ [ D ] ] ]  -> \n      1 2 3 4 n 3 4 n 3 2 3 4 n 3 2 1 2 3 4 n 3 2 1\n    \nnum: A B C D \n2: 2 1 1\n1: 2 1\n0: 2\n*/\n    int pn;cin >> pn;\n    for (int pi=0;pi<pn;pi++){\n        string ps;\n        cin >> ps;\n\n        vector< vector<int> > people(100, vector<int>());\n        int nest;\n        int num=0;\n\n        for (int i=0;i<ps.length();i++){\n            switch(ps[i]){\n\n                case '[':\n                    nest++;\n                    break;\n                case ']':\n                    nest--;\n                    //cout << \"!\" << nest << \",\" << num << \"!\" ;\n                    if(num!=0){\n                        people[nest].push_back(num/2+1);\n                        num=0;\n                    }else{\n                        sort(people[nest+1].begin(),people[nest+1].end());\n                        int sum=0;\n                       // cout << \"^\" << people[nest+1].size();\n                       // for(int i=0;i<people[nest+1].size();i++){\n                       //     cout << \"|\" << people[nest+1][i] << \"|\";\n                       // }\n                        for(int i=0;i<people[nest+1].size()/2+1;i++){\n                            sum+=people[nest+1][i];\n                        }\n                       // cout <<\"<\"<< sum << \",\" << nest << \">\";\n                        people[nest].push_back(sum);\n                        people[nest+1].clear();\n                    }\n                    break;\n                default:\n                    num*=10;\n                    num+=ps[i]-'0';\n                    break;\n            }\n        }\n\n        cout << people[0][0] << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <stack>\n#include <cmath>\n\nusing namespace std;\n\nint main() {\n\tint n; cin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstack<int> mini,ran;\n\t\tstring tmp;\n\t\tcin >> tmp;\n\t\tint elcnt = 0, intflag = 0, cnt = 0;\n\t\tfor (int j = 0; j < tmp.length(); ++j) {\n\t\t\tif ('0' <= tmp[j] && tmp[j] <= '9') {\n\t\t\t\tif (!intflag) mini.push(tmp[j] - '0');\n\t\t\t\telse mini.top() = mini.top() * 10 + tmp[j] - '0';\n\t\t\t\tintflag++;\n\t\t\t} else if (intflag) {\n\t\t\t\tmini.top() = (mini.top() + 1) / 2;\n\t\t\t\tintflag = 0;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tif (tmp[j] == '[') {\n\t\t\t\tran.push(cnt);\n\t\t\t} else if (tmp[j] == ']') {\n\t\t\t\tint num = cnt - ran.top();\n\t\t\t\tran.pop();\n\t\t\t\tif (num != 1) {\n\t\t\t\t\tvector<int> tm(num);\n\t\t\t\t\tfor (int k = 0; k < num; ++k) {\n\t\t\t\t\t\ttm[k] = mini.top();\n\t\t\t\t\t\tmini.pop();\n\t\t\t\t\t}\n\t\t\t\t\tsort(tm.begin(), tm.end());\n\t\t\t\t\tmini.push(tm[0]);\n\t\t\t\t\tfor (int k = 1; k < (num + 1) / 2; ++k) mini.top() += tm[k];\n\t\t\t\t}\n\t\t\t\tcnt = cnt - num + 1;\n\t\t\t}\n\t\t}\n\t\tcout << mini.top() << endl;\n\t}\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define ll long long\n#define rep(i,n) for(int i=0;i<n;++i)\nusing namespace std;\ntypedef pair<ll,ll> P;\n\nstruct Num_parse {\n    ll num, ind;\n    Num_parse(){}\n    Num_parse(ll num, ll ind):num(num),ind(ind){}\n};\n\nNum_parse number_parse(const string &s, int ind) {\n    string num;\n    ll ret_ind;\n    for (int i = ind; i >= 0; --i) {\n        if ('0' <= s[i] && s[i] <= '9') {\n            num.push_back(s[i]);\n            ret_ind = i;\n        }\n        else break;\n    }\n    reverse(num.begin(), num.end());\n    ll ret_num = stol(num);\n    return (Num_parse(ret_num, ret_ind));\n}\n\nvoid parse(const string &s, vector<vector<int>> &g, vector<ll> &node) {\n    int n = s.length();\n    stack<int> st;\n    int node_num = 0;\n    \n    st.push(node_num);\n\n    for (int i = n-2; i >= 0; --i) {\n        if (s[i] == ']') {\n            node_num++;\n            int v = st.top();\n            g[v].push_back(node_num);\n            st.push(node_num);\n        }\n        else if (s[i] == '[') {\n            st.pop();\n        }\n        else {\n            Num_parse info = number_parse(s,i);\n            i = info.ind;\n            node[node_num] = (info.num+1)/2;\n        }\n    }\n    return;\n}\n\nll dfs(int x, vector<vector<int>> &g, vector<ll> &node) {\n    priority_queue<ll, vector<ll>, greater<ll>> pq;\n    \n    if (node[x] != -1) return node[x];\n\n    for (auto &&e: g[x]) pq.push(dfs(e,g,node));\n\n    int over_half_children = (pq.size()+1)/2;\n    ll ret = 0;\n    rep(i,over_half_children) {\n        ret += pq.top();\n        pq.pop();\n    }\n\n    return ret;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    rep(i,n) {\n        string s;\n        cin >> s;\n        vector<vector<int>> g(114514);\n        vector<ll> node(114514, -1ll);\n        parse(s,g,node);\n        cout << dfs(0, g, node) << endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<utility>\n#include<string>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<climits>\n#include<set>\n\n#define REP(i, n) for(int i = 0;i < n;i++)\n#define REPR(i, n) for(int i = n;i >= 0;i--)\n#define FOR(i, m, n) for(int i = m;i < n;i++)\n#define FORR(i, m, n) for(int i = m;i >= n;i--)\n#define SORT(v, n) sort(v, v+n);\n#define VSORT(v) sort(v.begin(), v.end());\n#define llong long long\n#define pb(a) push_back(a)\nusing namespace std;\ntypedef pair<int, int> pii;\ntypedef long long int ll;\ntypedef pair<ll,ll> pll;\nint dx[4] = {1,0,0,-1};\nint dy[4] = {0,1,-1,0};\n#define MOD 1000000007\n#define ARRAY_MAX 10005\n\nconst int INF = 1e9+7;\n\nstring s;\nint now = 0;\n\nint solve(){\n\n    if(isdigit(s[now])){\n        int num = 0;\n        while(now < s.size() && isdigit(s[now])){\n            num = num * 10 + s[now] - '0';\n            now++;\n        }\n        return (num + 1)/2;\n    }else{\n\n        vector<int> vec;\n        int cnt = 0;\n        while(s[now] == '['){\n            now++;\n            vec.push_back(solve());\n            now++;\n        }\n        sort(vec.begin(),vec.end());\n        for(int i = 0;i < (vec.size() + 1)/2;i++){\n            cnt += vec[i];\n        }\n        return cnt;\n    }\n}\n\n\nint main(){\n\n    int q;\n    cin >> q;\n    for(int i = 0;i < q;i++){\n        now = 0;\n        cin >> s;\n        cout << solve() << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<set>\n#include<string>\nusing namespace std;\n\nint subr(string input){\n\tmultiset<int> num;\n\tint count=0;\n\tstring::iterator ita=input.begin();\n\t++ita;\n\twhile(true){\n\t\tif(*ita==']'){\n\t\t\t//最終脱出\n\t\t\tint ret=0;\n\t\t\tmultiset<int>::iterator itb=num.begin();\n\t\t\tfor(int i=0;i<(count-1)/2+1;++i){\n\t\t\t\tret+=*itb;\n\t\t\t\t++itb;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t\tif(*ita=='['){\n\t\t\t++ita;\n\t\t\tif(*ita=='['){\n\t\t\t\t//再帰呼\n\t\t\t\tstring::iterator subbeg=ita;\n\t\t\t\tint leng=0,depth=1;\n\t\t\t\tstring sub=\"[\";\n\t\t\t\tdo{\n\t\t\t\t\tsub.push_back(*ita);\n\t\t\t\t\tif(*ita=='[')++depth;\n\t\t\t\t\tif(*ita==']')--depth;\n\t\t\t\t\t++ita;\n\t\t\t\t}while(depth);\n\t\t\t\tnum.insert(subr(sub));\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint tmp=0;\n\t\t\t\tdo{\n\t\t\t\t\ttmp=tmp*10;\n\t\t\t\t\ttmp+=*ita-'0';\n\t\t\t\t\t++ita;\n\t\t\t\t}while(*ita!=']');\n\t\t\t\tnum.insert((tmp-1)/2+1);\n\t\t\t\t++count;\n\t\t\t\t++ita;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tstring in;\n\tcin>>n;\n\tfor(int i=0;i<n;++i){\n\t\tcin>>in;\n\t\tcout<<subr(in)<<endl;\n\t}\n\treturn 0;\n}\n\n\t\t\t"
  },
  {
    "language": "C++",
    "code": "#include <cstdint>\n#include <cstdio>\n#include <cassert>\n#include <cctype>\n#include <algorithm>\n#include <string>\n#include <vector>\n\nint parse_int(typename std::string::iterator& it) {\n  int res = *it-'0';\n  while (isdigit(*++it))\n    res = res*10 + *it-'0';\n  return res;\n}\n\nint parse(typename std::string::iterator& it) {\n  assert(*it == '[');\n  ++it;\n\n  int res;\n  if (isdigit(*it)) {\n    res = parse_int(it) / 2 + 1;\n  } else {\n    std::vector<int> c;\n    while (*it == '[') {\n      c.push_back(parse(it));\n    }\n    std::sort(c.begin(), c.end());\n    res = 0;\n    for (size_t i = 0; i <= c.size()/2; ++i) res += c[i];\n  }\n\n  assert(*it == ']');\n  ++it;\n  return res;\n}\n\nvoid solve_testcase() {\n  char buf[16384];\n  scanf(\"%s\", buf);\n  std::string s = buf;\n  auto it = s.begin();\n  printf(\"%d\\n\", parse(it));\n}\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n\n  while (t--) solve_testcase();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst char *p;\n\nint solve() {\n  int ret = 0;\n  \n  ++p;\n  if(*p == '[') {\n    vector<int> v;\n    while(*p == '[') {\n      v.push_back(solve());\n    }\n    sort(v.begin(), v.end());\n    for(int i = v.size()/2; i>=0; i--) {\n      ret += v[i];\n    }\n  } else {\n    char *e;\n    ret = strtol(p, &e, 10)/2 + 1;\n    p = e;\n  }\n  return ret;\n}\n\nint main() {\n  int n;\n  string str;\n  cin>>n;\n  for(int i = 0; i < n; i++) {\n    cin>>str;\n    p = str.c_str();\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define int long long\n#define endl '\\n'\n#define FOR(i, a, n) for (int i = (a); i < (n); ++i)\n#define REP(i, n) FOR(i, 0, n)\nusing namespace std;\n\nint f(string s, int &i) {\n    ++i;\n    if (isdigit(s[i])) {\n        int res = 0;\n        while (s[i] != ']') {\n            res = 10 * res + (s[i++] - '0');\n        }\n        ++i;\n        res = (res + 1) / 2;\n        return res;\n    }\n    vector<int> v;\n    while (s[i] == '[') {\n        v.push_back(f(s, i));\n    }\n    sort(v.begin(), v.end());\n    int res = 0;\n    REP (j, (v.size() + 1) / 2) res += v[j];\n    ++i;\n    return res;\n}\n\nvoid _main() {\n    int n;\n    cin >> n;\n    REP (i, n) {\n        string s;\n        cin >> s;\n        int j = 0;\n        cout << f(s, j) << endl;\n    }\n}\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout << fixed << setprecision(10);\n    _main();\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)\n#define ALL(x) (x).begin(),(x).end()\n\nusing namespace std;\n\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\n\nusing ll = long long;\nusing ld = long double;\n\nconst int INF = 1e9;\nconst ld eps = 1e-9, pi = acos(-1.0);\n\nstring s;\nint p;\n\nint number() {\n  int res = 0;\n  while (p < (int)s.size() && isdigit(s[p])) {\n    res = res * 10 + (int)(s[p] - '0');\n    ++p;\n  }\n  return (res + 1) / 2;\n}\n\nint expr() {\n  ++p;\n  int res = 0;\n  if (isdigit(s[p])) res = number();\n  else {\n    vector<int> v;\n    while (s[p] != ']') {\n      v.push_back(expr());\n    }\n    sort(ALL(v));\n    res = accumulate(begin(v), begin(v) + ((int)v.size() + 1) / 2, 0);\n  }\n  ++p;\n  return res;\n}\n\nint main() {\n  int Q;\n  cin >> Q;\n  while (Q--) {\n    cin >> s;\n    p = 0;\n    cout << expr() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdlib.h>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <ctype.h>\n#include <math.h>\n#include <stdio.h>\n\nusing namespace std;\n\nchar c[10001];\nint p;\n\nint solve(){\n\n\t++p;\n\tvector<int> v;\n\tif (isdigit(c[p])){\n\t\tint n = atoi(&c[p]);\n\t\tp += (int)log10((double)n) + 2;\n\t\treturn n / 2 + 1;\n\t}\n\twhile (c[p] == '['){\n\t\tint n = solve();\n\t\t//cout << n << endl;\n\t\tv.push_back(n);\n\t}\n\t++p;\n\tsort(v.begin(), v.end());\n\tint res = 0;\n\tfor (int i = 0; i < (v.size() + 1) / 2; i++){\n\t\tres += v[i];\n\t}\n\t\n\treturn res;\n}\n\n\nint main(void){\n\n\tint n;\n\tcin >> n; \n\twhile (n--){\n\t\tscanf(\"%s\", &c);\n\t\tp = 0;\n\t\tcout << solve() << endl;\n\t}\n\t//system(\"pause\");\n\treturn  0;\n}#include <iostream>\n#include <stdlib.h>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <ctype.h>\n#include <math.h>\n#include <stdio.h>\n\nusing namespace std;\n\nchar c[10001];\nint p;\n\nint solve(){\n\n\t++p;\n\tvector<int> v;\n\tif (isdigit(c[p])){\n\t\tint n = atoi(&c[p]);\n\t\tp += (int)log10((double)n) + 2;\n\t\treturn n / 2 + 1;\n\t}\n\twhile (c[p] == '['){\n\t\tint n = solve();\n\t\t//cout << n << endl;\n\t\tv.push_back(n);\n\t}\n\t++p;\n\tsort(v.begin(), v.end());\n\tint res = 0;\n\tfor (int i = 0; i < (v.size() + 1) / 2; i++){\n\t\tres += v[i];\n\t}\n\t\n\treturn res;\n}\n\n\nint main(void){\n\n\tint n;\n\tcin >> n; \n\twhile (n--){\n\t\tscanf(\"%s\", &c);\n\t\tp = 0;\n\t\tcout << solve() << endl;\n\t}\n\t//system(\"pause\");\n\treturn  0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include<algorithm>\n#include <map>\n#include <vector>\n#include <string>\n#include <tuple>\n#include <set>\n\nusing namespace std;\n\nclass Solver {\n};\n\nint dfs(string s) {\n\tstring ss = s.substr(1, s.size() - 2);\n\tif (ss[0] != '[')return stoi(ss) / 2 + 1;\n\n\tint nest = 0;\n\tstring s_tmp = \"\";\n\tvector<int> vals;\n\tfor (int i = 0; i < ss.size(); i++) {\n\t\ts_tmp += ss[i];\n\t\tif (ss[i] == '[')nest++;\n\t\tif (ss[i] == ']')nest--;\n\t\tif (nest == 0) {\n\t\t\tvals.emplace_back(dfs(s_tmp));\n\t\t\ts_tmp = \"\";\n\t\t}\n\t}\n\n\tsort(vals.begin(), vals.end());\n\tint val = 0;\n\tfor (int i = 0; i < vals.size() / 2 + 1; i++) {\n\t\tval += vals[i];\n\t}\n\treturn val;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tcout << dfs(s) << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "//#define MYDEBUG\n#include <bits/stdc++.h>\n#ifdef MYDEBUG\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define ifcin(x) std::ifstream cin(x)\n#else\n#define debug(x)\n#define ifcin(x)\n#endif\n#define ll long long\n#define ull unsigned long long\n#define eps 1e-14\n#define all(x) x.begin(), x.end()\n#define rep(i,from,to) for(int i=from; i<to; ++i)\n#define REP(i,from,to) for(int i=from; i<=to; ++i)\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::vector;\nusing std::ostream;\nusing std::swap;\nusing std::max;\nusing std::min;\nusing std::queue;\nusing std::string;\ntypedef struct edge edge;\ntypedef struct unionfind unionfind;\ntypedef struct Graph Graph;\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<T>& v) {\n  out << \"[\";\n  size_t last = v.size() - 1;\n  for (size_t i = 0; i < v.size(); ++i) {\n    out << v[i];\n    if (i != last)\n      out << \",\";\n  }\n  out << \"]\";\n  return out;\n}\n\nstruct unionfind{\n\tvector<int> par;\n\tvector<int> rank;\n\tunionfind(int n) {\n\t\tpar = vector<int>(n);\n\t\trank = vector<int>(n);\n\t\trep(i,0,n){//0????????????\n\t\t\tpar[i] = i;\n\t\t\trank[i] = 1;\n\t\t}\n\t}\n\t\n\tint find(int x){\n\t\tif(par[x] == x){\n\t\t\treturn x;\n\t\t}\n\t\treturn par[x] = find(par[x]);\n\t}\n\t\n\tbool same(int x, int y){\n\t\treturn find(x) == find(y);\n\t}\n\t\n\tvoid unite(int x, int y){//rank[x] > rank[y]?????????\n\t\tx = find(x);\n\t\ty = find(y);\n\t\tif(x == y){\n\t\t\treturn;\n\t\t}\n\t\tif(rank[x] < rank[y]){\n\t\t\tswap(x,y);\n\t\t}\n\t\tpar[y] = x;\n\t\trank[x] += rank[y];\n\t\trank[y] = 0;\n\t}\n\t\n\tint size(int x){\n\t\treturn rank[x];\n\t}\n};\n\nstruct edge{\n\tint from, to;\n\tdouble cost;\n\tedge(int from, int to, double cost){\n\t\tthis->from = from;\n\t\tthis->to = to;\n\t\tthis->cost = cost;\n\t}\n\t\n\tedge(){\n\t\t*this = edge(-1,-1,-1);\n\t}\n\t\n\tbool operator<(const edge& e) const{\n\t\treturn cost < e.cost;\n\t}\n};\n\nclass Graph{\n\tpublic:\n\tstatic double kruskal(vector<edge>& es, int n){\n\t\tsort(all(es));\n\t\tdouble min_cost = 0;\n\t\tunionfind uf(n);\n\t\trep(i,0,es.size()){\n\t\t\tedge &e = es[i];\n\t\t\tif(!uf.same(e.from, e.to)){\n\t\t\t\tmin_cost += e.cost;\n\t\t\t\tuf.unite(e.from, e.to);\n\t\t\t}\n\t\t}\n\t\treturn min_cost;\n\t}\n};\n\nint id_global;\nconst int maxa = 32768;\nint dp[maxa];\nstruct area{\n\tstring str;\n\tvector<area> child;\n\tint depth, popu, id, half;\n\tarea(string str){\n\t\tthis->str = str;\n\t\tthis->id = id_global;\n\t\tid_global++;\n\t\tchild = vector<area>();\n\t\tdivide(str);\n\t\tpopu = 0;\n\t\thalf = 0;\n\t}\n\tint getPopulation(){\n\t\tif(child.size()==0){\n\t\t\tstring s = str;\n\t\t\ts = s.erase(0,1);\n\t\t\ts = s.erase(s.size()-1,1);\n\t\t\treturn popu = std::atoi(s.c_str());\n\t\t}else{\n\t\t\tint ret = 0;\n\t\t\trep(i,0,child.size()){\n\t\t\t\tret += child[i].getPopulation();\n\t\t\t}\n\t\t\treturn popu = ret;\n\t\t}\n\t}\n\tarea(){\n\t\t*this = area(\"\");\n\t}\n\tbool operator<(const area& a) const{\n\t\treturn half < a.half;\n\t}\n\t\n\tvoid overHalf(area& a){\n\t\tif(a.child.size()!=0){\n\t\t\tfor(size_t i = 0; i < a.child.size(); ++i){\n\t\t\t\toverHalf(a.child[i]);\n\t\t\t}\n\t\t\tsort(all(a.child));\n\t\t\ta.half = 0;\n\t\t\trep(i,0,(a.child.size() + 1) / 2){\n\t\t\t\ta.half += a.child[i].half;\n\t\t\t\t//cout << a.half << \"+=\" << a.child[i].str << endl;\n\t\t\t}\n\t\t\t//cout << a.str << \": \" << a.half << endl;\n\t\t}else{\n\t\t\ta.half = (a.popu + 1) / 2;\n\t\t}\n\t}\n\tvoid divide(string s){\n\t\tif(s[0]=='['&&s[1]!='['){\n\t\t\treturn;\n\t\t}\n\t\tstring str = \"\";\n\t\tint depth = 0;\n\t\tfor(size_t i = 1; i + 1 < s.size(); ++i){\n\t\t\tstr+=s[i];\n\t\t\tif(s[i]=='['){\n\t\t\t\tdepth++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t\tif(depth==0&&str!=\"\"){\n\t\t\t\tchild.push_back(area(str));\n\t\t\t\tstr = \"\";\n\t\t\t}else if(depth<0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\ntypedef struct area area;\narea root;\nstring s;\nint n;\nvoid solve(){\n\tifcin(\"/storage/emulated/0/AppProjects/AtCoder/jni/in.txt\");\n\tcin>>n;\n\trep(test_case,0,n){\n\t\tcin >> s;\n\t\tid_global = 0;\n\t\tmemset(dp, 0, sizeof(dp));\n\t\troot = area(s);\n\t\troot.getPopulation();\n\t\troot.overHalf(root);\n\t\tcout << root.half << endl;\n\t}\n}\n\nint main() {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\nstring s;\nint pos;\n\nbool isDigit(char c)\n{\n\treturn('0' <= c && c <= '9');\n}\n\nint dfs()\n{\n\tvector<int> v;\n\twhile (pos < s.size())\n\t{\n\t\tif (isDigit(s[pos]))\n\t\t{\n\t\t\tint res = 0;\n\t\t\twhile (isDigit(s[pos]))\n\t\t\t{\n\t\t\t\tres *= 10;\n\t\t\t\tres += s[pos] - '0';\n\t\t\t\t++pos;\n\t\t\t}\n\t\t\tv.push_back((res + 1) / 2);\n\t\t}\n\t\telse if (s[pos] == '[')\n\t\t{\n\t\t\t++pos;\n\t\t\tv.push_back(dfs());\n\t\t}\n\t\telse if (s[pos] == ']')\n\t\t{\n\t\t\t++pos;\n\t\t\tvector<int> a = v;\n\t\t\tsort(a.begin(), a.end());\n\t\t\tint size = a.size() / 2;\n\t\t\tint res = 0;\n\t\t\tfor (int i = 0; i <= size; ++i)\n\t\t\t{\n\t\t\t\tres += a[i];\n\t\t\t}\n\t\t\treturn(res);\n\t\t}\n\t}\n}\n\nvoid solve()\n{\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tcin >> s;\n\t\tpos = 1;\n\t\tcout << dfs() << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<int(n);++i)\n#define all(a) a.begin(),a.end()\n\nint solve(string &s, int &i){\n    vector<int> v;\n    if(isdigit(s[i])){\n        int num = 0;\n        while(isdigit(s[i])){\n            num = num*10 + s[i]-'0';\n            i++;\n        }\n        return num+1;\n    }\n    while(s[i] == '['){\n        i++;\n        v.push_back(solve(s,i));\n        assert(s[i] == ']');\n        i++;\n    }\n\n    sort(all(v));\n    int n = v.size(), sum = 0;\n    rep(k,(n+1)/2){\n        sum += v[k];\n    }\n    return sum;\n}\n\nint main(void){\n    int T;\n    cin>>T;\n    rep(_,T){\n        string s;\n        cin>>s;\n        int index = 0;\n        cout<<(solve(s,index)+1)/2<<endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <list>\n\nusing namespace std;\n\n\n\nint min(char* s) {\n\tint n = 0;\n\tint sum = 0, tmpI = 0;\n\tbool flag = true;\n\tlist<int> intlist;\n\n\tfor(int i = 0; s[i] != '\\0'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tint count = 1, j;\n\t\t\tfor(j = 1; count != 0; j++) {\n\t\t\t\tif(s[j + i] == '[') {\n\t\t\t\t\tcount += 1;\n\t\t\t\t} else if(s[j + i] == ']') {\n\t\t\t\t\tcount -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t//cout << \"Weeeei\" << endl;\n\t\t\tchar* tmpS = new char[10000];\n\t\t\tstrncpy(tmpS, s+i+1, j-2);\n\t\t\ttmpS[j-2] = '\\0';\n\t\t\t//cout << tmpS << endl;\n\t\t\tint x = min(tmpS);\n\t\t\tintlist.push_back( x );\n\t\t\tn++;\n\t\t\tflag = false;\n\t\t\ti = i + j-1;\n\t\t\tdelete[] tmpS;\n\t\t}\n\t}\n\tif(flag) {\n\t\ttmpI = atoi(s);\n\t\t//cout << tmpI << endl;\n\t\treturn tmpI / 2 + 1;\n\t}\n\n\tintlist.sort();\n\n\tlist<int>::iterator itr = intlist.begin();\n\tfor(int i = 0; i < n/2 + 1; itr++, i++) {\n\t\tsum += *itr;\n\t}\n\n\t/*\n\tbool flag = true;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tif(!flag) {\n\t\t\t\tstring s2;\n\t\t\t\tfor(int j = 0; s[j] != ']' && s[j + 1] != ']'; j++) {\n\t\t\t\t\tstrncpy(s2, s+i, j-i+1);\n\t\t\t\t}\n\t\t\t\tmin(s2);\n\t\t\t} else {\n\t\t\t\tn++:\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tint[] input = new input[n];\n\tint j = 0;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\t;\n\t\t} else if(s[i] == ']') {\n\t\t\tinput[j] = tmpI;\n\t\t\ttmpI = 0;\n\t\t} else {\n\t\t\ttmpI = tmpI * 10 + atoi(c);\n\t\t}\n\t}\n\tsort(input);\n\tfor(int i = 0; i < n/2 + 1; i++) {\n\t\tsum = input[i] / 2 + 1;\n\t}\n\t*/\n\n\treturn sum;\n}\n\n\nint main (void) {\n\tint n;\n\tcin >> n;\n\t\n\t//cout << \"ok\" << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar* s = new char[10002];\n\t\t//char c;\n\t\t//int j = 0;\n\t\t/*for( ; cin >> c && (c != '\\n' && c != '\\0'); j++) {\n\t\t\ts[j] = c;\n\t\t}\n\t\ts[j] = '\\0';\n\t\t*/\n\t\tcin >> s;\n\t\t//cout << s;\n\t\t//cout << \"abon\" << endl;\n\n\t\tcout << min(s) << endl;\n\t\tdelete[] s;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Node{\n    int value;\n    list<Node*> next;\n    Node* prev;\n\npublic:\n    Node();\n    Node(Node* p);\n    ~Node();\n    void set_v(int v);\n    void add_next(int v);\n    void del_next();\n    void set_prev(Node* p);\n    Node* next_ret(int index);\n    Node* prev_ret();\n    int value_ret();\n    int next_size_ret();\n};\n\nclass Tree{\n    Node root;\n    Node* pos;\n\npublic:\n    Tree();\n    ~Tree();\n    void add(int v);\n    void move_next(int index);\n    void move_back();\n    void set_root();\n    int pos_size_ret();\n    int pos_value_ret();\n    Node* pos_ret();\n    void DLELTE_DFS(Node* node);\n\n    int solve();\n    int DFS(Node* node);\n};\n\nNode::Node() {\n    this->prev = this;\n    value = -1;\n}\n\nNode::Node(Node* p) {\n    this->prev = p;\n    value = -1;\n}\n\nNode::~Node() {\n    this->del_next();\n}\n\nvoid Node::set_v(int v) {\n    this->value = v;\n}\n\nvoid Node::add_next(int v) {\n    Node* n= new Node(this);\n    n-> value = v;\n    next.push_back(n);\n}\n\nvoid Node::del_next() {\n    list<Node*>::iterator pre_itr = this->next.begin();\n    list<Node*>::iterator itr = pre_itr;\n    itr++;\n    for(; itr != this->next.end(); itr++){\n        delete *pre_itr;\n        pre_itr = itr;\n    }\n    delete *pre_itr;\n}\n\nvoid Node::set_prev(Node* p) {\n    this->prev = p;\n}\n\nNode* Node::next_ret(int index) {\n    list<Node*>::iterator itr = this->next.begin();\n    for(int i=0; i<index; i++){\n        itr++;\n    }\n    return *itr;\n}\n\nNode* Node::prev_ret() {\n    return this->prev;\n}\n\nint Node::value_ret() {\n    return this->value;\n}\n\nint Node::next_size_ret() {\n    return this->next.size();\n}\n\n\n\nTree::Tree() {\n    this->pos = &(this->root);\n}\n\nTree::~Tree(){\n\n    DLELTE_DFS(&(this->root));\n\n}\n\nvoid Tree::add(int v) {\n    pos->add_next(v);\n}\n\nvoid Tree::move_next(int index) {\n    this->pos = this->pos->next_ret(index);\n}\n\nvoid Tree::move_back() {\n    this->pos = this->pos->prev_ret();\n}\n\nvoid Tree::set_root() {\n    this->pos = &(this->root);\n}\n\nint Tree::pos_size_ret() {\n    return this->pos->next_size_ret();\n}\n\nint Tree::pos_value_ret() {\n    return this->pos->value_ret();\n}\n\nNode* Tree::pos_ret() {\n    return this->pos;\n}\n\nint Tree::solve() {\n    return this->pos->value_ret();\n}\n\nint Tree::DFS(Node* node) {\n\n    if(node->next_size_ret() == 0){\n        return (node->value_ret()/2 + 1);\n    }\n\n    int add = 0;\n\n    priority_queue<int> q;\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        q.push(-DFS(node->next_ret(i)));\n    }\n\n    int count = q.size();\n\n    for(int loop = 0; loop < count/2 + 1; loop++){\n        add += -q.top();\n        q.pop();\n    }\n\n    return add;\n\n}\n\nvoid Tree::DLELTE_DFS(Node* node) {\n\n    /*\n    if(node->next_size_ret() == 0){\n        return;\n    }\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        DLELTE_DFS(node);\n    }\n\n    node->del_next();\n*/\n}\n\nint main() {\n\n    int n;\n\n    cin >> n;\n\n    while(n--){\n\n        string input;\n\n        cin >> input;\n\n        Tree t;\n\n        for(int i=1; i<input.size(); i++){\n\n            if(input[i] == '['){\n                t.add(0);\n                t.move_next(t.pos_size_ret() - 1);\n            }\n            else if(input[i] == ']'){\n                t.move_back();\n            }\n            else{\n                string snum = \"\";\n                while(input[i] != ']'){\n                    snum += input[i];\n                    i++;\n                }\n                i--;\n                stringstream ss;\n                ss << snum;\n                int num;\n                ss >> num;\n                t.add(num);\n            }\n\n        }\n\n        t.set_root();\n        cout << t.DFS(t.pos_ret()) << endl;\n        \n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint toInt(const string &s){\n  stringstream ss;\n  ss<<s;\n  int a;\n  ss>>a;\n  return a;\n}\n\nint c(const string& s){\n  vector<int> a;\n  //cerr<<s<<endl;\n  if(s[0]!='[')return toInt(s)/2+1;\n  for(int i=0,b=0,begin=0;i<s.size();++i){\n    if(s[i]=='['){\n      if(b==0) begin=i;\n      ++b;\n    }else if(s[i]==']'){\n      --b;\n      if(b==0){\n          int t=c(s.substr(begin+1, i-begin-1));\n          a.push_back(t);\n      }\n    }\n  }\n  sort(a.begin(),a.end());\n  int t=0;\n  for(int i=0;i<a.size()/2+1;++i){\n    t+=a[i];\n  }\n  return t;\n}\n\nint main(void){\n  int n;cin>>n;\n  while(n--){\n    string s;cin>>s;\n    cout<<c(s)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n#define _for(i,j,N) for(int i = (j);i < (N);i++)\n#define _rep(i,j,N) for(int i = (j);i <= (N);i++)\n#define _dec(i,N,j) for(int i = (N-1);i >= (j);i--)\n#define _rec(i,N,j) for(int i = (N);i >=(j);i--)\n#define ALL(x) x.begin(),x.end()\n#define MEM(a,n) memset(a,n,sizeof(a))\n#define fst first\n#define scd second\n#define PB push_back\n#define MP make_pair\n\ntypedef long long LL;\ntypedef pair<int,int> pii;\ntypedef pair<LL,LL> pll;\n\nint get_int(){int x;scanf(\"%d\",&x);return x;}\nLL get_ll(){LL x;scanf(\"%lld\",&x);return x;}\ndouble get_db(){double x;scanf(\"%lf\",&x);return x;}\n\ntemplate<typename T> int chmin(T &a,T &b){if(a > b){a = b;return 1;}else return 0;}\ntemplate<typename T> int chmax(T &a,T &b){if(a < b){a = b;return 1;}else return 0;}\ntemplate<typename T>\nostream& operator<<(ostream& os,const vector<T>& v) {_for(i,0,v.size()) os << v[i] << \" \";return os;}\ntemplate<typename T>\nostream& operator<<(ostream& os,const set<T>& v){for(auto a:v) os << a <<\" \";return os;}\ntemplate<typename T1,typename T2>\nostream& operator<<(ostream& os,const pair<T1,T2>& v){os << v.fst <<\" \"<<v.scd << \" \";return os;}\ntemplate<typename T1,typename T2>\nostream& operator<<(ostream& os,const map<T1,T2>& v){for(auto a:v) cout << a << endl;return os;}\n\nstatic const int dx[8] = { 1,  0, -1,  0,  1, -1,  1, -1};\nstatic const int dy[8] = { 0,  1,  0, -1,  1, -1, -1,  1};\nconst double pi  = acos(-1.0);\nconst double eps = 1e-8;\nconst LL  INF  = 0x3f3f3f3f3f3f3f3f;\nconst int inf  = 0x3f3f3f3f;\n\n\nint get_input(){\n    return 1;\n}\nvoid output(){;}\n\nstring s;\n\nstruct P{\n    int num,ischar;\n    P(int num,int ischar):num(num),ischar(ischar){;}\n};\n\nint deal(vector<int> &vi){\n    int sz = vi.size();\n    if(sz == 1){\n        return (vi[0]+1)/2;\n    }\n    else{\n        int ret = 0;\n        sort(ALL(vi));\n        _for(i,0,(sz+1)/2){\n            ret += vi[i];\n        }\n        return ret;\n    }\n\n}\n\nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while(T--){\n        cin >> s;\n        stack<P> st;\n        int sz = s.size();\n        _for(i,0,sz){\n            if(s[i] == '['){\n                st.push(P(-1,1));\n            }\n            else if(isdigit(s[i])){\n                int l = i;\n                while(isdigit(s[i+1]))i++;\n                string num = s.substr(l,i-l+1);\n                stringstream ss(num);\n                int nn; ss >> nn;\n\n                st.push(P(nn,0));\n            }\n            else if(s[i] == ']'){\n                vector<int> vi;\n                while(!(st.top().ischar)){\n                    vi.PB(st.top().num);\n                    st.pop();\n                }\n                int ret = deal(vi);\n                st.pop();\n                st.push(P(ret,0));\n            }\n        }\n        cout << st.top().num << endl;\n\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#pragma GCC optimize(\"Ofast\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define EPS (1e-7)\n#define INF (1e9)\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define all(x) (x).begin(),(x).end()\nconst double PI = acos(-1);\nconst ll MOD = 1000000007;\ntemplate<class T>\ninline bool chmax(T &a, T b) {\n    if(a < b) {\n        a = b;\n        return true;\n    }\n    return false;\n}\n \ntemplate<class T>\ninline bool chmin(T &a, T b) {\n    if(a > b) {\n        a = b;\n        return true;\n    }\n    return false;\n}\n///////////////////////////////////////////////////////////////\n\nll dfs(string S) {\n  int N = S.size();\n  if (S[1] != '[') {\n    ll k = stoll(S.substr(1,N-2));\n    return k / 2 + 1;\n  }\n  int count = 0;\n  vector<ll> A;\n  string t = \"\";\n  for (int i = 1; i < N-1; i++) {\n    if (S[i] == '[') count++;\n    if (S[i] == ']') count--;\n    t.push_back(S[i]);\n    if (count == 0) {\n      A.emplace_back(dfs(t));\n      t = \"\";\n    }\n  }\n  sort(all(A));\n  ll y = 0;\n  rep(i,A.size() / 2 + 1) y += A[i];\n  return y;\n}\n\nint main() {\n  ios::sync_with_stdio(false); cin.tie(nullptr); //入出力高速化\n  int Q; cin >> Q;\n  rep(q,Q) {\n    string S; cin >> S;\n    cout << dfs(S) << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define enld '\\n'\n#define rep(i,n) for(int i=0; i<(n); i++)\nusing namespace std;\nusing ll = long long;\nusing P = pair<int,int>;\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#pragma GCC optimize(\"Ofast\")\nconstexpr ll INF = 1e18;\nconstexpr int inf = 1e9;\nconstexpr ll mod = 1000000007;\nconstexpr ll mod2 = 998244353;\nconst double PI = 3.1415926535897932384626433832795028841971;\nconst int dx[4] = {1, 0, -1, 0};\nconst int dy[4] = {0, 1, 0, -1};\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n// ios::sync_with_stdio(false);\n// cin.tie(nullptr);\n// ---------------------------------------------------------------------------\n\ntypedef string::const_iterator State;\n\nint factor(State &begin);\nint number(State &begin);\n\nint factor(State &begin){\n    if(isdigit(*begin)) return number(begin);\n    vector<int> vec;\n    while(1){\n        if(*begin == '['){\n            begin++;\n            vec.push_back(factor(begin));\n            begin++;\n        }else{\n            break;\n        }\n    }\n    int sum = 0;\n    // for(int i=0; i<vec.size(); i++){\n    //     cout << vec[i] << \" \";\n    // }\n    // cout << enld;\n    sort(vec.begin(),vec.end());\n    for(int i=0; i<(vec.size()+1)/2; i++){\n        sum += vec[i];\n    }\n    return sum;\n}\n\nint number(State &begin){\n    int ret = 0;\n    while(isdigit(*begin)){\n        ret *= 10;\n        ret += *begin - '0';\n        begin++;\n    }\n    return (ret+1)/2;\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int N;\n    cin >> N;\n    cin.ignore();\n    while(N--){\n        string S;\n        getline(cin,S);\n        State begin = S.begin();\n        begin++;\n        cout << factor(begin) << enld;\n        begin++;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nint num(string& s, int& p) {\n\tint res = 0;\n\twhile (isdigit(s[p])) {\n\t\tres *= 10;\n\t\tres += s[p] - '0';\n\t\tp++;\n\t}\n\treturn res;\n}\n\nint solve(string& s, int& p) {\n\tvector<int> v;\n\twhile (p < s.size()) {\n\t\tif (s[p] == '[') {\n\t\t\tp++;\n\t\t\tv.push_back(solve(s, p));\n\t\t}\n\t\telse {\n\t\t\treturn (num(s, p) + 1) / 2;\n\t\t}\n\t\tp++;\n\t\tif (s[p] == ']') break;\n\t}\n\tsort(v.begin(), v.end());\n\tint res = 0;\n\tfor (int i = 0; i < (int)(v.size() + 1) / 2; i++) {\n\t\tres += v[i];\n\t}\n\treturn res;\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tint n; cin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s; cin >> s;\n\t\tint p = 0;\n\t\tint res = solve(s, p);\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <iostream>\n#include <map>\n#include <set>\n#include <list>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <queue>\n#include <iomanip>\n\n#define SIZE 101\n#define INF 100000000\n\nusing namespace std;\n\n\ntypedef pair<int, int> Pa;\n\nstring s;\nchar c[100];\nint inde = 0;\n\nint func(){\n\tvector<int> v;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (isdigit(s[inde])) {\n\t\t\tint k = 0;\n\t\t\twhile (isdigit(s[inde])) {\n\t\t\t\tc[k] = s[inde];\n\t\t\t\tk++;\n\t\t\t\tinde++;\n\t\t\t}\n\t\t\t/*for (int j = 0; j < 100; j++) {\n\t\t\t\tcerr << c[k];\n\t\t\t}*/\n\n\t\t\tc[k] = '\\0';\n\n\t\t\tv.push_back((atoi(c) + 1) / 2);\n\n\t\t} else if (s[inde] == '[') {\n\t\t\tinde++;\n\t\t\tv.push_back(func());\n\n\t\t} else if (s[inde] == ']') {\n\t\t\tvector<int> v2 = v;\n\t\t\tsort(v2.begin(), v2.end());\n\n\t\t\tint res = 0;\n\t\t\tfor (int i = 0; i <= v.size() / 2; i++) {\n\t\t\t\tres += v2[i];\n\t\t\t}\n\t\t\tinde++;\n\t\t\treturn (res);\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tinde = 1;\n\t\tint res = func();\n\t\tcout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n\nint n;\nstring s;\nint layer;\n\nint rec(string S, int depth){\n\tS = S.substr(1, S.length() - 2);\n\tif(S[0] != '['){\n\t\tint ret = 0;\n\t\tfor(int i = 0; i < S.length(); i++){\n\t\t\tret *= 10;\n\t\t\tret += S[i] - '0';\n\t\t}\n\t\treturn ret;\n\t}\n\tvector<int> va;\n\tint cnt = 0;\n\tint j = 0;\n\tfor(int i = 0; i < S.length(); i++){\n\t\tif(cnt == 0) j = i;\n\t\tif(S[i] == '[') cnt++;\n\t\tif(S[i] == ']') cnt--;\n\t\tif(cnt == 0) va.push_back(rec(S.substr(j, i - j + 1), depth + 1));\n\t}\n\tsort(va.begin(), va.end());\n\tint ret = 0;\n\tfor(int i = 0; i < va.size() / 2 + 1; i++){\n\t\tif(depth == layer - 2) ret += va[i] / 2 + 1;\n\t\telse ret += va[i];\n\t}\n\treturn ret;\n}\n\nint main(){\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tcin >> s;\n\t\tlayer = 0;\n\t\tint cnt = 0;\n\t\tfor(int j = 0; j < s.length(); j++){\n\t\t\tif(s[j] == '[') cnt++;\n\t\t\tif(s[j] == ']') cnt--;\n\t\t\tlayer = max(layer, cnt);\n\t\t}\n\t\tcout << rec(s, 0) << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst char *p;\n\nint rec() {\n  int res = 0;\n  vector<int> v;\n\n  ++p;\n  if(*p == '[') {\n    while(*p == '[') v.push_back(rec());\n    sort(v.begin(), v.end());\n    for(int i = 0; i < v.size()/2+1; i++) res += v[i];\n  } else {\n    char *e;\n    res = strtol(p, &e, 10) / 2 + 1;\n    p = e;\n  }\n\n  ++p;\n  return res;\n}\n\nint main() {\n  int n;\n  string str;\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = str.c_str();\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// >>> TEMPLATES\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing i32 = int32_t;\nusing i64 = int64_t;\nusing u32 = uint32_t;\nusing u64 = uint64_t;\n#define int ll\n#define double ld\n#define rep(i,n) for (int i = 0; i < (int)(n); i++)\n#define rep1(i,n) for (int i = 1; i <= (int)(n); i++)\n#define repR(i,n) for (int i = (int)(n)-1; i >= 0; i--)\n#define rep1R(i,n) for (int i = (int)(n); i >= 1; i--)\n#define loop(i,a,B) for (int i = a; i B; i++)\n#define loopR(i,a,B) for (int i = a; i B; i--)\n#define all(x) (x).begin(), (x).end()\n#define allR(x) (x).rbegin(), (x).rend()\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define fst first\n#define snd second\ntemplate <class Int> auto constexpr inf = numeric_limits<Int>::max()/2-1;\nauto constexpr INF32 = inf<int32_t>;\nauto constexpr INF64 = inf<int64_t>;\nauto constexpr INF   = inf<int>;\n#ifdef LOCAL\n#include \"debug.hpp\"\n#else\n#define dump(...) (void)(0)\n#define say(x) (void)(0)\n#define debug if (0)\n#endif\ntemplate <class T> using pque_max = priority_queue<T>;\ntemplate <class T> using pque_min = priority_queue<T, vector<T>, greater<T> >;\ntemplate <class T, class = typename T::iterator, class = typename enable_if<!is_same<T, string>::value>::type>\nostream& operator<<(ostream& os, T const& v) { bool f = true; for (auto const& x : v) os << (f ? \"\" : \" \") << x, f = false; return os; }\ntemplate <class T, class = typename T::iterator, class = typename enable_if<!is_same<T, string>::value>::type>\nistream& operator>>(istream& is, T &v) { for (auto& x : v) is >> x; return is; }\ntemplate <class T, class S> ostream& operator<<(ostream& os, pair<T,S> const& p) { return os << \"(\" << p.first << \", \" << p.second << \")\"; }\ntemplate <class T, class S> istream& operator>>(istream& is, pair<T,S>& p) { return is >> p.first >> p.second; }\nstruct IOSetup { IOSetup() { cin.tie(nullptr); ios::sync_with_stdio(false); cout << fixed << setprecision(15); } } iosetup;\ntemplate <class F> struct FixPoint : private F {\n    constexpr FixPoint(F&& f) : F(forward<F>(f)) {}\n    template <class... T> constexpr auto operator()(T&&... x) const { return F::operator()(*this, forward<T>(x)...); }\n};\nstruct MakeFixPoint {\n    template <class F> constexpr auto operator|(F&& f) const { return FixPoint<F>(forward<F>(f)); }\n};\n#define MFP MakeFixPoint()|\n#define def(name, ...) auto name = MFP [&](auto &&name, __VA_ARGS__)\ntemplate <class T, size_t d> struct vec_impl {\n    using type = vector<typename vec_impl<T,d-1>::type>;\n    template <class... U> static type make_v(size_t n, U&&... x) { return type(n, vec_impl<T,d-1>::make_v(forward<U>(x)...)); }\n};\ntemplate <class T> struct vec_impl<T,0> { using type = T; static type make_v(T const& x = {}) { return x; } };\ntemplate <class T, size_t d = 1> using vec = typename vec_impl<T,d>::type;\ntemplate <class T, size_t d = 1, class... Args> auto make_v(Args&&... args) { return vec_impl<T,d>::make_v(forward<Args>(args)...); }\ntemplate <class T> void quit(T const& x) { cout << x << endl; exit(0); }\ntemplate <class T, class U> constexpr bool chmin(T& x, U const& y) { if (x > y) { x = y; return true; } return false; }\ntemplate <class T, class U> constexpr bool chmax(T& x, U const& y) { if (x < y) { x = y; return true; } return false; }\ntemplate <class It> constexpr auto sumof(It b, It e) { return accumulate(b,e,typename iterator_traits<It>::value_type{}); }\ntemplate <class T> int sz(T const& x) { return x.size(); }\ntemplate <class C, class T> int lbd(C const& v, T const& x) {\n    return lower_bound(v.begin(), v.end(), x)-v.begin();\n}\ntemplate <class C, class T> int ubd(C const& v, T const& x) {\n    return upper_bound(v.begin(), v.end(), x)-v.begin();\n}\ntemplate <class C, class F> int ppt(C const& v, F f) {\n    return partition_point(v.begin(), v.end(), f)-v.begin();\n}\n// <<<\n\nint solve() {\n    if (isdigit(cin.peek())) {\n        int n; cin >> n;\n        return (n+1)/2;\n    }\n    char c; cin >> c;\n    assert(c == '[');\n    vector<int> v;\n    while (cin.peek() != ']') v.eb(solve());\n    cin >> c;\n    assert(c == ']');\n\n    assert(v.size()%2 == 1);\n    sort(all(v));\n    v.resize((v.size()+1)/2);\n    return sumof(all(v));\n}\n\nint32_t main() {\n    int n; cin >> n;\n    while (n--) cout << solve() << \"\\n\";\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <utility>\n#include <cstdlib>\nusing namespace std;\n\ntypedef pair<int,int> pii;\n\n\nconst char *p;\n\nint solve(){\n\tint ret = 0;\n\t++p;\n\tif(*p == '['){\n\t\tvector<int> v;\n\t\twhile(*p == '['){\n\t\t\tv.push_back(solve());\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tret = 0;\n\t\tfor(int i = v.size() / 2; i >= 0; --i){\n\t\t\tret += v[i];\n\t\t}\n\t}\n\telse{\n\t\tchar *e;\n\t\tret = strtol(p, &e, 10) / 2 + 1;\n\t\tp = e;\n\t}\n\t++p;\n\treturn ret;\n}\n\n\nint main(){\n\tint n;\n\tstring s;\n\tcin >> n;\n\tfor(int i = 0; i < n; ++i){\n\t\tcin >> s;\n\t\tp = s.c_str();\n\t\tcout << solve() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstddef>\n#include <iostream>\n#include <iomanip>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <array>\n#include <unordered_map>\n#include <algorithm>\n#include <numeric>\n#include <set>\n#include <map>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <valarray>\n#include <utility>\n#include <tuple>\n#include <cmath>\n#include <memory>\n#include <random>\n#include <fstream>\n#include <locale>\n\n#if (__cplusplus >= 201703L)\n#include <filesystem>\nnamespace fs = std::filesystem;\n#endif\n\n// boost\n//#define USE_BOOST_IN_CODE\n#ifdef USE_BOOST_IN_CODE\n#include <boost/range.hpp>\n#include <boost/range/algorithm.hpp>\n#include <boost/range/numeric.hpp>\n#include <boost/range/irange.hpp>\n#include <boost/range/adaptor/strided.hpp>\n#include <boost/range/adaptor/transformed.hpp>\n#include <boost/format.hpp>\n#endif\n\nnamespace {\n\n    using ll = long long;\n    using ull = unsigned long long;\n\n    //vector\n    template <class T>\n    using vec = std::vector<T>;\n\n    template <class T>\n    using vv = vec<vec<T>>;\n\n    constexpr std::size_t operator\"\"_sz(ull n) { return std::size_t (n); }\n        \n    template <class T, class BinaryOperation>\n    constexpr T fold(std::initializer_list<T> args, T init, BinaryOperation op)\n    {\n        return std::accumulate(args.begin(), args.end(), init, op);\n    }\n\n    // numeric_low\n    namespace numeric\n    {\n        template<typename T>\n        constexpr bool isOdd(T x)\n        {\n            return x % 2 != 0;\n        }\n\n        template<typename T>\n        constexpr bool isEven(T x)\n        {\n            return x % 2 == 0;\n        }\n\n        // 最大公約数\n        template<class T>\n        constexpr T gcd(const T x, const T y)\n        {\n            if (x < 0)return gcd(-x, y);\n            if (y < 0)return gcd(x, -y);\n            return (!y) ? x : gcd(y, x % y);\n        }\n\n        // 最小公倍数\n        template<class T>\n        constexpr T lcm(const T x, const T y)\n        {\n            if (x < 0)return lcm(-x, y);\n            if (y < 0)return lcm(x, -y);\n            return x * (y / gcd(x, y));\n        }\n\n        // 素数判定\n        template<class T>\n        constexpr bool isPrime(const T x)\n        {\n            if (x <= 1)return false;\n            for (T i = 2; i * i <= x; ++i)\n                if (x % i == 0)\n                    return false;\n            return true;\n        }\n    }\n\n    // ビット演算\n    namespace bitOp\n    {\n\n        template <int N>\n        constexpr std::size_t distanceBetween(const std::bitset<N> bit, std::size_t current, bool isNext = true)\n        {\n            if (current > N || current < 0) \n                return -1;\n            const int dir = isNext ? 1 : -1;\n            for (auto i = current + dir; i >= 0 && i < N; i += dir)\n                if (bit[i]) \n                    return (i - current) * dir;\n            return -1;\n        }\n\n        // 次の立っているビットまでの距離\n        template <int N>\n        constexpr std::size_t distanceBetweenNext(const std::bitset<N> bit, std::size_t current)\n        {\n            return distanceBetween(bit, current, true);\n        }\n\n        // 前の立っているビットまでの距離\n        template <int N>\n        constexpr std::size_t distanceBetweenPrev(const std::bitset<N> bit, std::size_t current)\n        {\n            return distanceBetween(bit, current, false);\n        }\n    }\n\n\n#ifdef _MSVC_LANG\n#pragma region Vector\n#endif\n    ///////////////////////////////////////////////////////////\n    // Vector\n\n    template <class T>\n    struct Vec3D\n    {\n        T x, y, z;\n\n        Vec3D() = default;\n\n        constexpr Vec3D(T x, T y, T z)\n            : x {x}, y {y}, z {z}\n        {}\n\n        constexpr Vec3D(T x, T y)\n            : Vec3D(x, y, 0)\n        {}\n\n        static constexpr T Dot(const Vec3D& lhs, const Vec3D& rhs)\n        {\n            return lhs.x * rhs.x + lhs.y * rhs.y + lhs.z * rhs.z;\n        }\n\n        static constexpr Vec3D Cross(const Vec3D& lhs, const Vec3D& rhs)\n        {\n            return {\n                lhs.y*rhs.z - lhs.z*rhs.y,\n                lhs.z*rhs.x - lhs.x*rhs.z,\n                lhs.x*rhs.y - lhs.y*rhs.x\n            };\n        }\n\n        constexpr T dot(const Vec3D& rhs) const\n        {\n            Dot(*this, rhs);\n        }\n\n        constexpr Vec3D cross(const Vec3D& rhs) const\n        {\n            Dot(*this, rhs);\n        }\n\n        T magnitude() const\n        {\n            return std::sqrt(sqrMagnitude());\n        }\n\n        constexpr T sqrMagnitude() const\n        {\n            return x * x + y * y + z * z;\n        }\n\n        Vec3D normalized() const\n        {\n            return *this / magnitude();\n        }\n\n        Vec3D normalize()\n        {\n            *this = normalized();\n            return *this;\n        }\n\n        constexpr bool isZero() const\n        {\n            return x == 0 && y == 0 && z == 0;\n        }\n\n        constexpr Vec3D operator+() const\n        {\n            return *this;\n        }\n\n        constexpr Vec3D operator-() const\n        {\n            return {-x, -y, -z};\n        }\n\n\n        constexpr Vec3D operator+(Vec3D rhs) const\n        {\n            return {x + rhs.x, y + rhs.y, z + rhs.z};\n        }\n\n        constexpr Vec3D operator-(Vec3D rhs) const\n        {\n            return {x - rhs.x, y - rhs.y, z - rhs.z};\n        }\n\n        template <class U>\n        constexpr Vec3D operator*(U rhs) const\n        {\n            return {x * rhs, y * rhs, z * rhs};\n        }\n\n        template <class U>\n        constexpr Vec3D operator/(U rhs) const\n        {\n            return {x / rhs, y / rhs, z / rhs};\n        }\n\n        constexpr Vec3D& operator+=(const Vec3D& other)\n        {\n            x += other.x;\n            y += other.y;\n            z += other.z;\n            return *this;\n        }\n\n        constexpr Vec3D& operator-=(const Vec3D& other)\n        {\n            x -= other.x;\n            y -= other.y;\n            z -= other.z;\n            return *this;\n        }\n\n        template <class U>\n        constexpr Vec3D& operator*=(U s)\n        {\n            x *= s;\n            y *= s;\n            z *= s;\n            return *this;\n        }\n\n        template <class U>\n        constexpr Vec3D& operator/=(U s)\n        {\n            x /= s;\n            y /= s;\n            z /= s;\n            return *this;\n        }\n\n    };\n\n    template<class T, class U>\n    inline constexpr Vec3D<T> operator*(U s, Vec3D<T> v)\n    {\n        return {s * v.x, s * v.y, s * v.z};\n    }\n\n    // Vector\n    ///////////////////////////////////////////////////////////\n#ifdef _MSVC_LANG\n#pragma endregion Vector\n#endif\n\n    // argsからハッシュ値を作成\n    template <class... Args>\n    std::size_t hash(Args... args)\n    {\n        return fold({static_cast<std::size_t>(args)...}, 0_sz,\n            [](std::size_t seed, std::size_t x)\n            {\n                // uses magic number from boost\n                return seed ^= x + 0x9e3779b9 + (seed << 6) + (seed >> 2);\n            });\n    }\n\n    template <class Begin, class End>\n    void printAll(Begin beginIter, End endIter, std::string delimiter)\n    {\n        for (auto iter {beginIter}; iter != endIter; ++iter)\n        {\n            std::cout << *iter;\n            if (std::distance(iter, endIter) != 1)\n                std::cout << delimiter;\n        }\n    }\n\n    template <class Container>\n    void printAll(const Container& c, std::string delimiter)\n    {\n        printAll(std::cbegin(c), std::cend(c), delimiter);\n    }\n\n    template<class T>\n    void printAll(const std::initializer_list<T>& ini, std::string delimiter)\n    {\n        printAll(ini.begin(), ini.end(), delimiter);\n    }\n\n    //template <class Container>\n    //std::istream& operator>>(std::istream& is, Container& c)\n    //{\n    //    const auto end = std::end(c);\n    //    for (auto iter = std::begin(c); iter != end; ++iter)\n    //        is >> *iter;\n    //    return is;\n    //}\n    \n    using State = std::string::const_iterator;\n    \n    int number(State& state)\n    {\n        int ret {};\n        while (isdigit(*state))\n        {\n            ret *= 10;\n            ret += *state - '0';\n            ++state;\n        }\n\n        return (ret + 1) / 2;\n    }\n\n    int expression(State& state)\n    {\n        using namespace std;\n        vec<int> v;\n\n        ++state;\n\n        if (isdigit(*state))\n            v.push_back(number(state));\n\n        while (*state == '[')\n        {\n            //++state;\n                \n            int ret = expression(state);\n            v.push_back(ret);\n\n            //++state;\n        }\n\n        ++state;\n\n        sort(v.begin(), v.end());\n        int ret {};\n\n        for (int i = 0; i < (v.size() + 1) / 2; ++i)\n            ret += v[i];\n\n        return ret;\n    }\n\n\n\n    void solve()\n    {\n        using namespace std;\n\n        \n        int n;\n        cin >> n;\n        cin.ignore();\n        \n        for (int i = 0; i < n; ++i)\n        {\n            string s;\n            getline(cin, s);\n            auto state = s.cbegin();\n\n            cout << expression(state) << endl;\n        }\n\n        \n\n    }\n}\n\nint main()\n{\n    solve();\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <iostream>\n#include <string>\n#include <tuple>\nusing namespace std;\n\ntuple<const char*, int> calc(const char* p)\n{\n    if (*p == '[') {\n        vector<int> costs;\n        const char* q = p + 1;\n        while (*q != ']') {\n            int c;\n            tie(q, c) = calc(q);\n            costs.push_back(c);\n        }\n        sort(begin(costs), end(costs));\n        return make_tuple(q + 1, accumulate(begin(costs), begin(costs) + (costs.size() + 1) / 2, 0));\n    } else {\n        assert(isdigit(*p));\n        int r = 0;\n        for (; isdigit(*p); ++p) {\n            r = r * 10 + *p - '0';\n        }\n        assert(*p == ']');\n        return make_tuple(p, (r + 1) / 2);\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n\n    int T; cin >> T;\n    while (T--) {\n        string line; cin >> line;\n        const char* p;\n        int r;\n        tie(p, r) = calc(line.data());\n        assert(p == line.data() + line.size());\n        cout << r << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nstring s;\nint n,i;\nint f()\n{\n\ti++;\n\tvector<int>a;\n\twhile(s[i]=='[')a.push_back(f()),i++;\n\tif(s[i]>='0'&&s[i]<='9')\n\t{\n\t\tint now=0;\n\t\twhile(s[i]>='0'&&s[i]<='9')now=now*10+s[i]-'0',i++;\n\t\tnow=now/2+1;\n\t\ta.push_back(now);\n\t}\n\tint ans=0;\n\tsort(a.begin(),a.end());\n\tfor(int j=0;j<=(a.size()-1)/2;j++)ans+=a[j];\n\treturn ans;\n}\nmain()\n{\n\tcin>>n;\n\twhile(n--)\n\t{\n\t\tcin>>s;\n\t\ti=0;\n\t\tcout<<f()<<endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <string>\n#include <math.h>\n\n#define REP(i,n)for (int i=0;i<(n);i++)\n#define PB push_back\n#define MP make_pair\n#define ALL(a) (a).begin(),(a).end()\n#define ll long long\nusing namespace std;\ntypedef pair<int,int> P;\n\nint cur;\nstring s;\n\nint to_i(string t){\n\tint res=0;\n\tREP(i,t.size()){\n\t\tres*=10;\n\t\tres+=(t[i]-'0');\n\t}\n\treturn res;\n}\n\nint rec(){\n\tcur++;\n\tif(s[cur]!='['&&s[cur]!=']'){\n\t\tstring t=\"\";\n\t\twhile(s[cur]!=']'){\n\t\t\tt+=s[cur];\n\t\t\tcur++;\n\t\t}\n\t\tcur++;\n\t\treturn to_i(t)/2+1;\n\t}\n\tvector<int>vote;\n\twhile(s[cur]!=']'){\n\t\tvote.PB(rec());\n\t}\n\tsort(ALL(vote));\n\tint sum=0;\n\tREP(i,vote.size()/2+1)sum+=vote[i];\n\tcur++;\n\treturn sum;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>s;\n\t\tcur=0;\n\t\tcout<<rec()<<endl;\n\t}\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<climits>\n#include<ctime>\n#include<cstring>\n#include<stack>\n#include<queue>\n#include<sstream>\n#include<string>\n\n#define ALL(v) (v).begin(),(v).end()\n#define REP(i,p,n) for(int i=p;i<(int)(n);++i)\n#define rep(i,n) REP(i,0,n)\n#define DUMP(list) cout << \"{ \"; for(auto nth : list){ cout << nth << \" \"; } cout << \"}\" << endl\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i);\n\nusing namespace std;\n\nint major(vector<int> tmp){\n\tsort(ALL(tmp));\n\tint size = tmp.size()/2+1,ans=0;\n\trep(i,size){\n\t\tans+=tmp[i];\n\t}\n\treturn ans;\n}\n\nint convert(int l,int r,string str){\n\treturn stoi(str.substr(l,r-1));\n}\n\n//?????????????????????\nint parse(int l,int r,string str){\n\tif(isdigit(str[l])) return convert(l,r,str)/2+1;\n\tstack<int> num_s;\n\tvector<int> tmp;\n\tfor(int i=l;i<r;i++){\n\t\tif(str[i]=='['){ \n\t\t\tnum_s.push(i);\t\n\t\t}else if(str[i]==']'){\n\t\t\tif(num_s.size()>1){\n\t\t\t\tnum_s.pop();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint next_l = num_s.top()+1;\n\t\t\tnum_s.pop();\n\t\t\ttmp.push_back(parse(next_l,i,str));\n\t\t}\n\t}\n\n\treturn major(tmp);\n}\n\nint main(){\n\tint n;\n\tstring str;\n\tcin >> n;\n\trep(i,n){\n\t\tcin >> str;\n\t\tcout << parse(1,str.size()-1,str) << endl;\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<functional>\n#include<iomanip>\n#include<queue>\n#include<ciso646>\n#include<random>\n#include<map>\n#include<set>\n#include<complex>\nusing namespace std;\ntypedef long long ll;\nconst ll MOD = 1000000007;\nconst ll INF = (ll)1000000007 * 1000000007;\nconst double EPS = 1e-9;\ntypedef pair<int, int> P;\ntypedef unsigned int ui;\n#define stop char nyaa;cin>>nyaa;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define per(i,n) for(int i=n-1;i>=0;i--)\n#define Rep(i,sta,n) for(int i=sta;i<n;i++)\n#define rep1(i,n) for(int i=1;i<=n;i++)\n#define per1(i,n) for(int i=n;i>=1;i--)\n#define Rep1(i,sta,n) for(int i=sta;i<=n;i++)\ntypedef long double ld;\nconst ld eps=1e-8;\nint main() {\n\tint n; cin >> n;\n\trep(whi, n) {\n\t\tstring s; cin >> s;\n\t\tint len = s.length();\n\t\tvector<int> v[10000];\n\t\tint cnt = 0;\n\t\trep(i, len) {\n\t\t\tif (s[i] == '[')cnt++;\n\t\t\telse if (s[i] == ']') {\n\t\t\t\tsort(v[cnt].begin(), v[cnt].end());\n\t\t\t\tint l = v[cnt].size();\n\t\t\t\tint sum = 0;\n\t\t\t\tif (l == 1) {\n\t\t\t\t\tsum += v[cnt][0]/2+1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trep(j, l / 2+1) {\n\t\t\t\t\t\tsum += v[cnt][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tv[cnt].clear();\n\t\t\t\tcnt--; v[cnt].push_back(sum);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstring t; t = s[i];\n\t\t\t\twhile ('0' <= s[i + 1] && s[i + 1] <= '9') {\n\t\t\t\t\ti++; t += s[i];\n\t\t\t\t}\n\t\t\t\tv[cnt].push_back(stoi(t));\n\t\t\t}\n\t\t}\n\t\tcout << v[0][0] << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<cctype>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\ntypedef vector<int> vi;\nint n;\nstring s;\n\nint stoi(string x){\n  stringstream ss(x);\n  int res;\n  ss >> res;\n  return res;\n}\n\nint parse(int l,int r){\n  bool f = true;\n  for(int i=l;i<r;i++){\n    if(!isdigit(s[i])){\n      f = false;\n      break;\n    }\n  }\n  if(f)return stoi(s.substr(l,r-l))/2+1;\n\n  int pos = l+1,k=1;\n  vi v;\n\n  for(int i=l+1;i<r;i++){\n    if(s[i]=='[')k++;\n    else if(s[i]==']')k--;\n    if(!k){\n      v.push_back(parse(pos,i));\n      pos = i+2;\n    }\n  }\n\n  sort(v.begin(),v.end());\n  int res = 0;\n  for(int i=0;i<v.size()/2+1;i++)res += v[i];\n  return res;\n}\n\nint main(){\n  cin >> n;\n  for(int i=0;i<n;i++){\n    cin >> s;\n    cout << parse(1,s.size()-1) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <functional>\n#include <vector>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\ntypedef istringstream ISS;\ntypedef ostringstream OSS;\n\nint ToInteger ( string s )\n{\n\tISS iss; iss.str(s);\n\tint x;\n\tiss >> x;\n\treturn x;\n}\n\nint dfs ( string s, int &idx )\n{\n\tvector<int> vn;\n\twhile (idx < s.size()) {\n\t\tchar c = s[idx];\n\t\tif (c == '[') {\n\t\t\tchar nx = s[idx+1];\n\t\t\tif (nx == '[') {\n\t\t\t\t++idx;\n\t\t\t\tvn.push_back(dfs(s, idx));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstring num;\n\t\t\t\t++idx;\n\t\t\t\twhile (idx < s.size()) {\n\t\t\t\t\tif (s[idx] == ']') { break; }\n\t\t\t\t\tnum += s[idx];\n\t\t\t\t\t++idx;\n\t\t\t\t}\n\t\t\t\tvn.push_back(ToInteger(num));\n\t\t\t}\n\t\t}\n\t\tif (c == ']') {\n\t\t\tchar pr = s[idx-1];\n\t\t\tif (pr == ']') {\n\t\t\t\t++idx;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse { ++idx; }\n\t\t}\n\t}\n\tint res = 0;\n\tsort(vn.begin(), vn.end());\n\tfor (int i = 0, I = vn.size()/2+1; i < I; ++i) {\n\t\tres += (vn[i] / 2 + 1);\n\t}\n\treturn (res-1)*2;\n}\n\nint main ( void )\n{\n\tint n;\n\tstring s;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> s;\n\t\tint idx = 0;\n\t\tcout << dfs(s, idx) / 2 + 1 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <cctype>\n\nusing namespace std;\ntypedef string::const_iterator State;\n\nclass Zone\n{\npublic:\n    int value;\n    vector<Zone> zones;\n\n    Zone() :value(-1) {}\n    Zone(int v) :value(v) {}\n\n    int best()\n    {\n        if(value != -1) return value / 2 + 1;\n\n        vector<int> needs;\n\n        for(auto zone : zones) {\n            needs.push_back(zone.best());\n        }\n\n        sort(needs.begin(), needs.end());\n\n        return accumulate(needs.begin(), needs.begin() + needs.size() / 2 + 1, 0);\n    }\n};\n\nZone read(State& it)\n{\n    if(isdigit(*it)) {\n        int n = 0;\n\n        for(; isdigit(*it); it++) {\n            n *= 10;\n            n += *it - '0';\n        }\n\n        return n;\n    } else {\n        Zone zone;\n\n        while(*it == '[') {\n            it++;\n            zone.zones.push_back(read(it));\n            it++;\n        }\n\n        return zone;\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    for(int i = 0; i < n; i++) {\n        string line;\n        cin >> line;\n        State it = line.begin();\n        cout << read(it).best() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#define MYDEBUG\n#include <bits/stdc++.h>\n#ifdef MYDEBUG\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define ifcin(x) std::ifstream cin(x)\n#else\n#define debug(x)\n#define ifcin(x)\n#endif\n#define ll long long\n#define ull unsigned long long\n#define eps 1e-14\n#define all(x) x.begin(), x.end()\n#define rep(i,from,to) for(int i=from; i<to; ++i)\n#define REP(i,from,to) for(int i=from; i<=to; ++i)\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::vector;\nusing std::ostream;\nusing std::swap;\nusing std::max;\nusing std::min;\nusing std::queue;\nusing std::string;\ntypedef struct edge edge;\ntypedef struct unionfind unionfind;\ntypedef struct Graph Graph;\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<T>& v) {\n  out << \"[\";\n  size_t last = v.size() - 1;\n  for (size_t i = 0; i < v.size(); ++i) {\n    out << v[i];\n    if (i != last)\n      out << \",\";\n  }\n  out << \"]\";\n  return out;\n}\n\nstruct unionfind{\n\tvector<int> par;\n\tvector<int> rank;\n\tunionfind(int n) {\n\t\tpar = vector<int>(n);\n\t\trank = vector<int>(n);\n\t\trep(i,0,n){//0????????????\n\t\t\tpar[i] = i;\n\t\t\trank[i] = 1;\n\t\t}\n\t}\n\t\n\tint find(int x){\n\t\tif(par[x] == x){\n\t\t\treturn x;\n\t\t}\n\t\treturn par[x] = find(par[x]);\n\t}\n\t\n\tbool same(int x, int y){\n\t\treturn find(x) == find(y);\n\t}\n\t\n\tvoid unite(int x, int y){//rank[x] > rank[y]?????????\n\t\tx = find(x);\n\t\ty = find(y);\n\t\tif(x == y){\n\t\t\treturn;\n\t\t}\n\t\tif(rank[x] < rank[y]){\n\t\t\tswap(x,y);\n\t\t}\n\t\tpar[y] = x;\n\t\trank[x] += rank[y];\n\t\trank[y] = 0;\n\t}\n\t\n\tint size(int x){\n\t\treturn rank[x];\n\t}\n};\n\nstruct edge{\n\tint from, to;\n\tdouble cost;\n\tedge(int from, int to, double cost){\n\t\tthis->from = from;\n\t\tthis->to = to;\n\t\tthis->cost = cost;\n\t}\n\t\n\tedge(){\n\t\t*this = edge(-1,-1,-1);\n\t}\n\t\n\tbool operator<(const edge& e) const{\n\t\treturn cost < e.cost;\n\t}\n};\n\nclass Graph{\n\tpublic:\n\tstatic double kruskal(vector<edge>& es, int n){\n\t\tsort(all(es));\n\t\tdouble min_cost = 0;\n\t\tunionfind uf(n);\n\t\trep(i,0,es.size()){\n\t\t\tedge &e = es[i];\n\t\t\tif(!uf.same(e.from, e.to)){\n\t\t\t\tmin_cost += e.cost;\n\t\t\t\tuf.unite(e.from, e.to);\n\t\t\t}\n\t\t}\n\t\treturn min_cost;\n\t}\n};\n\nint id_global;\nconst int maxa = 32768;\nint dp[maxa];\nstruct area{\n\tstring str;\n\tvector<area> child;\n\tint depth, popu, id;\n\tarea(string str){\n\t\tthis->str = str;\n\t\tthis->id = id_global;\n\t\tid_global++;\n\t\tchild = vector<area>();\n\t\tdivide(str);\n\t\tpopu = 0;\n\t}\n\tint getPopulation(){\n\t\tif(child.size()==0){\n\t\t\tstring s = str;\n\t\t\ts = s.erase(0,1);\n\t\t\ts = s.erase(s.size()-1,1);\n\t\t\treturn popu = std::atoi(s.c_str());\n\t\t}else{\n\t\t\tint ret = 0;\n\t\t\trep(i,0,child.size()){\n\t\t\t\tret += child[i].getPopulation();\n\t\t\t}\n\t\t\treturn popu = ret;\n\t\t}\n\t}\n\tarea(){\n\t\t*this = area(\"\");\n\t}\n\tbool operator<(const area& a) const{\n\t\treturn popu < a.popu;\n\t}\n\tvoid sortChild(area& a){\n\t\tif(a.child.size() != 0){\n\t\t\tsort(all(a.child));\n\t\t\trep(i, 0, a.child.size()){\n\t\t\t\tsortChild(a.child[i]);\n\t\t\t}\n\t\t}\n\t}\n\tint overHalf(area& a){\n\t\tif(dp[a.id]!=0){\n\t\t\treturn dp[a.id];\n\t\t}\n\t\tint ret = 0;\n\t\tint half = (a.child.size() + 1) / 2;\n\t\tif(half==0){\n\t\t\tret = (a.popu + 1) / 2;\n\t\t}else{\n\t\t\trep(i,0,half){\n\t\t\t\tret += overHalf(a.child[i]);\n\t\t\t}\n\t\t}\n\t\treturn dp[a.id] = ret;\n\t}\n\tvoid divide(string s){\n\t\tif(s[0]=='['&&s[1]!='['){\n\t\t\treturn;\n\t\t}\n\t\tstring str = \"\";\n\t\tint depth = 0;\n\t\tfor(size_t i = 1; i + 1 < s.size(); ++i){\n\t\t\tstr+=s[i];\n\t\t\tif(s[i]=='['){\n\t\t\t\tdepth++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t\tif(depth==0&&str!=\"\"){\n\t\t\t\tchild.push_back(area(str));\n\t\t\t\tstr = \"\";\n\t\t\t}else if(depth<0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\ntypedef struct area area;\narea root;\nstring s;\nint n;\nvoid solve(){\n\t//ifcin(\"/storage/emulated/0/AppProjects/AtCoder/jni/in.txt\");\n\tcin>>n;\n\trep(test_case,0,n){\n\t\tcin >> s;\n\t\tid_global = 0;\n\t\tmemset(dp, 0, sizeof(dp));\n\t\troot = area(s);\n\t\troot.getPopulation();\n\t\troot.sortChild(root);\n\t\tcout << root.overHalf(root) << endl;\n\t}\n}\n\nint main() {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nconst char *p;\n\nint rec() {\n  int res = 0;\n  vector<int> v;\n\n  ++p;\n  if(*p == '[') {\n    while(*p == '[') v.push_back(rec());\n    sort(v.begin(), v.end());\n    for(int i = 0; i < v.size()/2+1; i++) res += v[i];\n  } else {\n    char *e;\n    res = strtol(p, &e, 10) / 2 + 1;\n    p = e;\n  }\n\n  ++p;\n  return res;\n}\n\nint main() {\n  int n;\n  char str[1000];\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = &str;\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nvector<string> split(string str, string pat) {\n    int pos;\n    vector<string> ret;\n    while ((pos = str.find(pat)) != string::npos) {\n        ret.push_back(str.substr(0, pos));\n        str = str.substr(pos + pat.size());\n    }\n    ret.push_back(str);\n    return ret;\n}\n\nstring strip(string str) {\n    return str.substr(1, str.size() - 2);\n}\n\nint parse(string str) {\n    int ans = 0;\n    for (int i = 0; i < str.size(); i++) {\n        ans = ans * 10 + (str[i] - '0');\n    }\n    return ans;\n}\n\nint solve(string str) {\n    if ('0' <= str[0] && str[0] <= '9') {\n        return (parse(str) + 1) / 2;\n    } else {\n        vector<string> ss;\n        while (!str.empty()) {\n            int acc = 0;\n            for (int i = 0; i < str.size(); i++) {\n                if (str[i] == '[') {\n                    acc += 1;\n                } else if (str[i] == ']') {\n                    acc -= 1;\n                }\n\n                if (acc == 0) {\n                    ss.push_back(str.substr(0, i + 1));\n                    str = str.substr(i + 1);\n                    break;\n                }\n            }\n        }\n\n        vector<int> ns;\n        for (int i = 0; i < ss.size(); i++) {\n            ns.push_back(solve(strip(ss[i])));\n        }\n\n        sort(ns.begin(), ns.end());\n        int ans = 0;\n        int m = (ns.size() + 1) / 2;\n        for (int i = 0; i < m; i++) {\n            ans += ns[i];\n        }\n        return ans;\n    }\n}\n\nint main(int argc, char** argv) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n        string str;\n        cin >> str;\n        printf(\"%d\\n\", solve(strip(str)));\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cassert>\nusing namespace std;\nchar str[99999];\nint parse(int i){\n\tif('0'<=str[i]&&str[i]<='9')return strtol(str+i,NULL,10)/2+1;\n\tassert(str[i]=='[');\n\tvector<int>v;\n\tint j=i,c=0;\n\tfor(;;j++){\n\t\tif(str[j]=='[')if(++c==1)v.push_back(parse(j+1));\n\t\tif(str[j]==']')if(--c==-1)break;\n\t}\n\tsort(v.begin(),v.end());\n\tfor(c=j=0;j<=v.size()/2;j++)c+=v[j];\n\treturn c;\n}\nmain(){\n\tint T;\n\tfor(scanf(\"%d\",&T);T--;printf(\"%d\\n\",parse(1)))scanf(\"%s\",str);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(v) (v).begin(),(v).end()\n#define len(v) (int)(v).size()\n#define pb push_back\n\nusing namespace std;\n\nconst int MAX_N = 100000;\n\nvector<int> G[MAX_N];\nint val[MAX_N];\n\nstring s;\nint num,id;\n\nvoid dfs(int p)\n{\n    int nw = id++;\n    int st = 0;\n    G[p].pb(nw);\n    while(num < len(s)){\n        if(s[num] == '['){\n            st++;\n            num++;\n            dfs(nw);\n        }else if(s[num] == ']'){\n            st--;\n            if(st < 0){\n                break;\n            }\n            num++;\n        }else{\n            string kazu;\n            while(isdigit(s[num])){\n                kazu.pb(s[num++]);\n            }\n            val[nw] = stoi(kazu);\n            break;\n        }\n    }\n}\n\nint dfs2(int u)\n{\n    if(len(G[u]) == 0){\n        return val[u]/2+1;\n    }\n    vector<int> cnt;\n    for(auto& v : G[u]){\n        cnt.pb(dfs2(v));\n    }\n    // rep(i,len(cnt)){\n    //     cout << cnt[i] << \" \";\n    // }\n    // cout << \"\\n\";\n    sort(all(cnt));\n    return accumulate(cnt.begin(),cnt.begin()+len(cnt)/2+1,0);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    rep(i,n){\n        cin >> s;\n        num = id = 0;\n        dfs(0);\n        cout << dfs2(1) << \"\\n\";\n        rep(i,id){\n            G[i].clear();\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n\nusing namespace std;\n\n#define all(c) (c).begin(), (c).end()\n\nint solve(string s){\n    vector<vector<int> > d(3333);\n    int k = 0, num = 0;\n    for(auto c: s){\n        if(c == '[')k++;\n        else if(c == ']'){\n            if(num){\n                d[k].push_back(num/2 + 1);\n                num = 0;\n            }\n            sort(all(d[k]));\n            int sum = accumulate(d[k].begin(), d[k].begin() + d[k].size()/2 + 1, 0);\n            d[k].clear();\n            d[--k].push_back(sum);\n        }\n        else (num *= 10) += c - '0';\n    }\n    return d[0][0];\n}\n\nint main(){\n    int n;\n    cin >> n;\n    while(n--){\n        string s;\n        cin >> s;\n        cout << solve(s) << '\\n';\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct Node\n{\n    using Ptr = shared_ptr<Node>;\n    int value = 0;\n    vector<Ptr> c;\n};\nusing Ptr = Node::Ptr;\n\nstring S;\nint pos;\nint number()\n{\n    int ans = 0;\n    for (; pos < S.size() and isdigit(S[pos]); pos++) { ans = ans * 10 + S[pos] - '0'; }\n    return ans;\n}\nPtr parse()\n{\n    Ptr p = make_shared<Node>();\n    if (isdigit(S[pos])) {\n        return p->value = number(), p;\n    } else {\n        pos++;\n        while (S[pos] != ']') { p->c.push_back(parse()); }\n        return pos++, p;\n    }\n}\nint accum(const Ptr& p)\n{\n    if (p->c.empty()) {\n        return (p->value + 1) / 2;\n    }\n    vector<int> sub;\n    for (const auto c : p->c) { sub.push_back(accum(c)); }\n    sort(sub.begin(), sub.end());\n    const int n = (p->c.size() + 1) / 2;\n    return p->value = accumulate(sub.begin(), sub.begin() + n, 0);\n}\nint main()\n{\n    int N;\n    cin >> N;\n    for (int i = 0; i < N; i++) {\n        cin >> S, pos = 0;\n        const auto t = parse();\n        cout << accum(t) << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <vector>\n#include <cassert>\nusing namespace std;\n\nconst char *p;\n\nint rec() {\n  int res = 0;\n  vector<int> v;\n\n  ++p;\n  if(*p == '[') {\n    while(*p == '[') v.push_back(rec());\n    sort(v.begin(), v.end());\n    for(int i = 0; i < v.size()/2+1; i++) res += v[i];\n  } else {\n    char *e;\n    res = strtol(p, &e, 10) / 2 + 1;\n    p = e;\n  }\n  assert(*p == ']');\n  ++p;\n  return res;\n}\n\nint main() {\n  int n;\n  string str;\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = &str[0];\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n//#define _GLIBCXX_DEBUG\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\n#define all(c) (c).begin(), (c).end()\n#define loop(i,a,b) for(ll i=a; i<ll(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define mt make_tuple\ntemplate<class T> ostream & operator<<(ostream & os, vector<T> const &);\ntemplate<int n, class...T> typename enable_if<(n>=sizeof...(T))>::type _ot(ostream &, tuple<T...> const &){}\ntemplate<int n, class...T> typename enable_if<(n< sizeof...(T))>::type _ot(ostream & os, tuple<T...> const & t){ os << (n==0?\"\":\" \") << get<n>(t); _ot<n+1>(os, t); }\ntemplate<class...T> ostream & operator<<(ostream & os, tuple<T...> const & t){ _ot<0>(os, t); return os; }\ntemplate<class T, class U> ostream & operator<<(ostream & os, pair<T,U> const & p){ return os << \"(\" << p.first << \", \" << p.second << \") \"; }\ntemplate<class T> ostream & operator<<(ostream & os, vector<T> const & v){ rep(i,v.size()) os << v[i] << (i+1==(int)v.size()?\"\":\" \"); return os; }\n#ifdef DEBUG\n#define dump(...) (cerr<<#__VA_ARGS__<<\" = \"<<mt(__VA_ARGS__)<<\" [\"<<__LINE__<<\"]\"<<endl)\n#else\n#define dump(...)\n#endif\n\nstring str;\nint p;\nint getdig(){\n    return str[p++] - '0';\n}\nint num(){\n    int n = 0;\n    while(isdigit(str[p])){\n        n*=10;\n        n+=getdig();\n    }\n    return n;\n}\n\nint g(){\n    vector<int> down;\n    p++;\n    while(str[p] == '['){\n        p++;\n        down.push_back(num());\n        p++;\n    }\n    p++;\n    int ans = 0;\n    sort(all(down));\n    rep(i,down.size()/2+1) ans += down[i]/2+1;\n    return ans;\n}\n \nint f(){\n    if(str[p]=='[' && str[p+1]=='[' && str[p+2]=='['){\n        p++;\n        // p+=2;\n        vector<int> up;\n        while(str[p]=='['){\n            up.push_back(f());\n        }\n        p++;\n        // p+=2;\n        int n = 0;\n        sort(all(up));\n        rep(i,up.size()/2+1) n+=up[i];\n        return n;\n    } else return g();\n}\nint main(){\n    int n;\n    cin >> n;\n    while(n--){\n        p = 0;\n        cin >> str;\n        cout << f() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <stack>\n#include <algorithm>\n#define REP(i, a, n) for(int i = (a); i < (n); i++)\nusing namespace std;\n\nint main(void) {\n  int N; cin >> N;\n  REP(i, 0, N) {\n    string s; cin >> s;\n    stack<int> stk;\n\n    REP(i, 0, s.length()) {\n\n      if(s[i] == '[') {\n        stk.push(-1);\n      } else if(s[i] == ']') {\n        vector<int> v;\n        while(1) {\n          int d = stk.top();\n          stk.pop();\n          if(d == -1) break;\n          v.push_back(d);\n        }\n        sort(v.begin(), v.end());\n        int d = 0;\n        REP(i, 0, (v.size() + 1) / 2) d += v[i];\n        stk.push(d);\n      } else {\n        int d = 0;\n        for(; '0' <= s[i] && s[i] <= '9'; i++) d = d * 10 + (s[i] - '0');\n        i--;\n        stk.push((d + 1) / 2);\n      }\n    }\n\n    cout << stk.top() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef ostringstream OSS;\ntypedef istringstream ISS;\n\ntypedef long long LL;\ntypedef pair<int, int> PII;\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\ntypedef vector<string> VS;\ntypedef vector<VS> VVS;\ntypedef vector<bool> VB;\ntypedef vector<VB> VVB;\ntypedef vector<PII> VPII;\n\n#define POS first\n#define VAL second\n#define MP make_pair\n#define PB push_back\n#define EB emplace_back \n#define ALL(x) (x).begin(),(x).end()\n#define RANGE(x,y,maxX,maxY) (0 <= (x) && 0 <= (y) && (x) < (maxX) && (y) < (maxY))\n#define DUMP( x ) cerr << #x << \" = \" << ( x ) << endl\n\ntemplate < typename T > inline T fromString(const string &s) { T res; ISS iss(s); iss >> res; return res; };\ntemplate < typename T > inline string toString(const T &a) { OSS oss; oss << a; return oss.str(); };\n\nconst int INF = 0x3f3f3f3f;\nconst LL INFL = 0x3f3f3f3f3f3f3f3fLL;\nconst int DX[]={1,0,-1,0},DY[]={0,-1,0,1};\n\n\nPII dfs(string &s, int pos0) {\n    char c = s[pos0 + 1];\n    \n    if (c == '[') {\n        VI nums;\n        int pos = pos0 + 1;\n        while (s[pos] != ']') {\n            PII ans_one = dfs(s, pos);\n            pos = ans_one.POS;\n            nums.PB(ans_one.VAL);\n        }\n\n        sort(ALL(nums));\n\n        int ans_val = 0;\n        for (int i = 0; i < (int)(nums.size() / 2 + 1); i++) {\n            ans_val += nums[i];\n        }\n\n        return MP(pos + 1, ans_val);\n\n    } else { // numeric\n        auto pos = s.find(']', pos0);\n        string int_s = s.substr(pos0 + 1, pos - pos0 - 1);\n        int num = fromString<int>(int_s);\n\n        return MP(pos + 1, num / 2 + 1);\n    }\n}\n\nint solve(string &s) {\n    PII ans = dfs(s, 0);\n    return ans.VAL;\n}\n\nint main(void) {\n    int T;\n    cin >> T;\n\n    string s;\n    while (T--) {\n        cin >> s;\n        cout << solve(s) << endl;\n    }\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring s;\nint N;\n\nint main() {\n  cin >> N;\n  while ( N-- ) {\n    cin >> s;\n    vector<int> data[10000];\n    int now = 0;\n    for ( int i = 0; i < s.size(); i++ ) {\n      if ( s[i] == '[' ) now++;\n      else if ( s[i] == ']' ) {\n\tif ( data[now].size() ) {\n\t  sort(data[now].begin(), data[now].end());\n\t  int tmp = 0;\n\t  for ( int j = 0; j < (data[now].size() + 1) / 2; j++ ) {\n\t    tmp += data[now][j];\n\t  }\n\t  data[now].clear();\n\t  data[now - 1].push_back(tmp);\n\t}\n\tnow--;\n      }\n      else {\n\tint tmp = 0;\n\tfor(; s[i] != ']'; i++) {\n\t  tmp *= 10;\n\t  tmp += s[i] - '0';\n\t}\n\ti--;\n\tdata[now].push_back((tmp + 1) / 2);\n      }\n    }\n\n    cout << data[0][0] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<set>\n#include<map>\n#include<math.h>\n#include <string>\n#define cinf(n,x) for(int i=0;i<(n);i++) cin >> x[i];\ntypedef long long int ll;\nusing namespace std;\nvector<ll> v[100];\nstring s;\nlong long solve(){\n\tfor(int i=0;i<100;i++){\n\t\tv[i].clear();\n\t}\n\tint depth=0;\n\tint val=0;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='[')depth++;\n\t\telse if(s[i]==']'){\n\t\t\tif(val){\n\t\t\t\tv[depth].push_back((val+1)/2);\n\t\t\t}\n\t\t\tval=0;\n\t\t\tsort(v[depth].begin(),v[depth].end());\n\t\t\tll sum=0;\n\t\t\tfor(int j=0;j*2<v[depth].size();j++){\n\t\t\t\tsum+=v[depth][j];\n\t\t\t}\n\t\t\tv[depth-1].push_back(sum);\n\t\t\tv[depth].clear();\n\t\t\t--depth;\n\t\t}\n\t\telse{\n\t\t\tval*=10;\n\t\t\tint c=(int)(s[i]-'0');\n\t\t\tval+=c;\n\t\t}\n\t}\n\treturn v[0][0];\n}\n\nint main(){\n\tint n; cin >>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin >>s;\n\t\tcout << solve() << endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define LL long long\n#define REP(i,n) for(int i=0;i<(n);++i)\n#define REPA(i,n) for(int i=1;i<(n);++i)\n#define foreach(i, n) for(auto &i:(n))\n#define PII pair<int,int>\n#define PLI pair<long long, int>\n#define PLL pair<long long, long long>\n#define PDD pair<double, double>\n#define MOD ((int)1e9 + 7)\n#define INF ((int)1e9)\n#define INFLL ((LL)1e18)\n#define ALL(x) (x).begin(),(x).end()\n#define ctoi(x) (x - 'a') \n#define CTOI(x) (x - 'A')\n#define BIT(x) (1 << (x))\nusing namespace std;\n\nLL modinv(LL a){\n    LL b = MOD, u = 1, v = 0;\n    while(b){\n        LL t = a / b;\n        a -= t * b;swap(a, b);\n        u -= t * v;swap(u, v);\n    }\n    u%=MOD;\n    if(u < 0) u += MOD;\n    return u;\n\n}\n\nLL exp(LL a, LL b){\n    LL sum = a;\n    LL res = 1;\n    while(b){\n        if(b&1){\n            res = (res * sum)%MOD;\n        }\n        sum = (sum * sum) % MOD;\n        b>>=1;\n    }\n    return res;\n}\n\nint func(){\n    stack<vector<int>> st;\n    st.push(vector<int>(1, 0));\n    string str;\n    cin>>str;\n    int num = -1;\n    foreach(i, str){\n        if(i=='['){\n            st.push(vector<int>());\n        }else if(i==']'){\n            if(num>=0){\n                st.pop();\n                st.top().push_back((num+1)/2);\n                num=-1;\n                continue;\n            }\n            vector<int> line = st.top();\n            st.pop();\n            sort(ALL(line));\n            int num = 0;\n            REP(j, (line.size()+1)/2){\n                num+=line[j];\n            }\n            st.top().push_back(num);\n            num=-1;\n        }else{\n            if(num<0)num=0;\n            num=num*10+i-'0';\n        }\n    }\n    return st.top().back();\n}\n\nint main(){\n    int n;\n    cin >> n;\n    REP(i, n){\n        cout << func() << endl;\n    }\n    return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <sstream>\n#include <map>\n#include <set>\n#include <queue>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<30\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\n\npriority_queue<ll, vector<ll>, greater<ll> > que[100005];\n\nint main() {\n\tint n;\n\tcin >> n;\n\n\trep(q, n) {\n\t\trep(i, 100005) {\n\t\t\twhile(que[i].size()) que[i].pop();\n\t\t}\n\n\t\tstring s;\n\t\tcin >> s;\n\n\t\tint dep = 0;\n\t\trep(i, s.size()) {\n\n\t\t\tif(s[i] == '[') {\n\t\t\t\tif(s[i+1] == '[') {\n\t\t\t\t\tdep++;\n\t\t\t\t} else {\n\t\t\t\t\tstringstream ss;\n\t\t\t\t\tREP(j, i+1, s.size()) {\n\t\t\t\t\t\tif('0' <= s[j] && s[j] <= '9') {\n\t\t\t\t\t\t\tss << s[j];\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tll x;\n\t\t\t\t\tss >> x;\n\n\t\t\t\t\tx = x / 2 + 1;\n\t\t\t\t\tque[dep].push(x);\n\t\t\t\t}\n\t\t\t} else if(s[i] == ']') {\n\t\t\t\tint m = que[dep].size();\n\t\t\t\tll sum = 0;\n\n\t\t\t\trep(j, m/2 + 1) {\n\t\t\t\t\tsum += que[dep].top();\n\t\t\t\t\tque[dep].pop();\n\t\t\t\t}\n\n\t\t\t\tque[dep-1].push(sum);\n\n\t\t\t\twhile(que[dep].size()) {\n\t\t\t\t\tque[dep].pop();\n\t\t\t\t}\n\n\t\t\t\tdep--;\n\t\t\t}\n\n\t\t}\n\n\t\tcout << que[0].top() << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define rep(i, n) for (int i = 0; i < int(n); ++i)\n\nlong long solve(string str) {\n  int s = 0, c = 0;\n  vector<long long> v;\n  rep (i, str.size()) {\n    if (str[i] == '[') {\n      if (c == 1) s = i;\n      ++c;\n    } else if (str[i] == ']') {\n      --c;\n      if (c == 1) v.push_back(solve(str.substr(s, i - s + 1)));\n    }\n  }\n  if (v.empty()) {\n    long long res = 0;\n    for (int i = 1; i < (int)str.size() - 1; ++i) res = res * 10 + str[i] - '0';\n    return res / 2 + 1;\n  }\n  sort(v.begin(), v.end());\n  long long ans = 0;\n  rep (i, v.size() / 2 + 1) ans += v[i];\n  return ans;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  rep (_, t) {\n    string s;\n    cin >> s;\n    cout << solve(s) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<(n);i++)\nusing namespace std;\n\nint num(string&s, int&i) {\n\tint n = 0;\n\twhile (isdigit(s[i]))n = n * 10 + s[i++] - '0';\n\treturn n;\n}\nint a = 0;\nint dfs(string&s, int&i) {\n\tint b = a++;\n\tvector<int>v;\n\twhile (s[i] == '[') {\n\t\ti++;\n\t\tif (isdigit(s[i])) {\n\t\t\tint n = num(s, i); i++;\n\t\t\tv.push_back(n / 2 + 1);\n\t\t}\n\t\telse v.push_back(dfs(s, i));\n\t}\n\ti++;\n\tsort(v.begin(), v.end());\n\tint sum = 0;\n\trep(j, v.size() / 2 + 1)sum += v[j];\n\treturn sum;\n}\nint main() {\n\tint n; scanf(\"%d\", &n);\n\trep(i, n) {\n\t\tstring s; cin >> s;\n\t\tint j = 0;\n\t\tprintf(\"%d\\n\", dfs(s, j));\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\ntypedef pair<int,int> P;\ntypedef pair<P,int> PP;\nint n;\nstring str;\nint dp[15][10001];\n//stage/division\nint fie[15][10001];\nint p_divs[15][10001];\nint p_divl[15][10001];\nint p_div[15][10001];\nint stdiv[15];\nvector<int> vec[15][10001];\nint memo(int st,int div){\n\tif(dp[st][div]!=-1)return dp[st][div];\n\tint siz=0;\n\tif(fie[st][div]==0){\n\t\tfor(int i=p_divs[st][div];i<=p_divl[st][div];i++){\n\t\t\tvec[st][div].push_back(memo(st+1,i));\n\t\t\tsiz++;\n\t\t}\n\t}else return dp[st][div]=(fie[st][div]+1)/2;\n\tsort(vec[st][div].begin(),vec[st][div].end());\n\tint res=0;\n\tfor(int i=0;i<(siz+1)/2;i++)res+=vec[st][div][i];\n\tvec[st][div].clear();\n\treturn dp[st][div]=res;\n}\n\nint main(void){\n\tscanf(\"%d\",&n);\n\tfor(int kkkk=0;kkkk<n;kkkk++){\n\t\tcin >> str;\n\t\tmemset(dp,-1,sizeof(dp));\n\t\tmemset(fie,-1,sizeof(fie));\n\t\tmemset(p_div,-1,sizeof(p_div));\n\t\tmemset(p_divs,-1,sizeof(p_divs));\n\t\tmemset(p_divl,-1,sizeof(p_divl));\n\t\tmemset(stdiv,0,sizeof(stdiv));\n\t\tint stage=0,num=0,maxst=0;\n\t\tfor(int i=0;i<str.size();i++){\n\t\t\tif(str[i]=='['){\n\t\t\t\tstage++;\n\t\t\t\tmaxst=max(maxst,stage);\n\t\t\t}else if(str[i]==']'){\n\t\t\t\tfie[stage][stdiv[stage]]=num;\n\t\t\t\tp_div[stage][stdiv[stage]]=stdiv[stage-1];\n\t\t\t\tif(p_divs[stage-1][stdiv[stage-1]]==-1)p_divs[stage-1][stdiv[stage-1]]=stdiv[stage];\n\t\t\t\tp_divl[stage-1][stdiv[stage-1]]=stdiv[stage];\n\t\t\t\tstdiv[stage]++;\n\t\t\t\tstage--;\n\t\t\t\tnum=0;\n\t\t\t}else{\n\t\t\t\tnum*=10;\n\t\t\t\tnum+=str[i]-'0';\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",memo(1,0));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cstdlib>\n#include <cassert>\nusing namespace std;\nstring data;\nconst char *str;\nint parse(int i){\n\tif('0'<=data[i]&&data[i]<='9')return strtol(str+i,NULL,10)/2+1;\n\tassert(data[i]=='[');\n\tvector<int>v;\n\tint j=i,c=0;\n\tfor(;;j++){\n\t\tif(data[j]=='[')if(++c==1)v.push_back(parse(j+1));\n\t\tif(data[j]==']')if(--c==-1)break;\n\t}\n\tsort(v.begin(),v.end());\n\tfor(c=j=0;j<=v.size()/2;j++)c+=v[j];\n\treturn c;\n}\nmain(){\n\tint T;\n\tfor(cin>>T,getline(cin,data);T--;cout<<parse(1)<<endl)getline(cin,data),str=data.c_str();\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing std::cerr;\nusing std::cin;\nusing std::cout;\nusing std::endl;\n\nstruct State{\n  int score;\n  int backpos;\n  State(int sc,int bp){\n    score=sc;\n    backpos=bp;\n  }\n};\n\nbool isnum(char c){\n  return '0'<=c&&c<='9';\n}\n\nint strtoi(std::string s){\n  int result=0;\n  for(int i=0;i<s.size();i++){\n    result+=(s[i]-'0')*std::pow(10,s.size()-i-1);\n  }\n  return result;\n}\n\nState Base(std::string s,int frontpos){\n  int persepoint=frontpos+1;\n  std::string numstr;\n  while(isnum(s[persepoint])){\n    numstr+=s[persepoint];\n    persepoint++;\n  }\n\n  int result=strtoi(numstr);\n\n\n  return State(result,persepoint);\n}\n\nState Formula(std::string s, int frontpos){\n  State result(0,0);\n  if(isnum(s[frontpos+2])){\n    //baseが続く\n    std::vector<int> vote;\n    int persepoint=frontpos+1;\n    while(1){\n      State state=Base(s,persepoint);\n      vote.push_back(state.score/2+1);\n      persepoint=state.backpos+1;\n      if(s[persepoint]!='[') break;\n\n    }\n    std::sort(vote.begin(), vote.end());\n    for(int i=0;i<vote.size()/2+1;i++){\n      result.score+=vote[i];\n    }\n    result.backpos=persepoint;\n    return result;\n\n  }else{\n    std::vector<int> vote;\n    int persepoint=frontpos+1;\n    while(1){\n      State state=Formula(s,persepoint);\n      vote.push_back(state.score);\n      persepoint=state.backpos+1;\n      if(s[persepoint]!='[') break;\n    }\n    std::sort(vote.begin(), vote.end());\n    for(int i=0;i<vote.size()/2+1;i++){\n      result.score+=vote[i];\n    }\n    result.backpos=persepoint;\n    return result;\n  }\n}\n\nint main(void) {\n  cout << std::fixed << std::setprecision(10);\n  cin.tie(0);\n  std::ios::sync_with_stdio(false);\n\n  int n;\n  cin>>n;\n  for(int i=0;i<n;i++){\n    std::string s;\n    cin>>s;\n    cout<<Formula(s,0).score<<endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cctype>\n#include <sstream>\n\nusing namespace std;\n\n#define ALL(c) c.begin() , (c).end()\n\nstring to_s(const int & n){\n    stringstream ss;\n    ss << n; return ss.str();\n}\n\nbool replace(string& str, const string& from, const string& to) {\n    size_t start_pos = str.find(from);\n    if(start_pos == std::string::npos)\n        return false;\n    str.replace(start_pos, from.length(), to);\n    return true;\n}\n\nint min_vote(vector<int> & a, bool half){\n    sort(ALL(a));\n    int rtn = 0;\n    for(int i=0; i<a.size()/2+1; i++){\n        rtn += half ? a[i]/2+1 : a[i];\n    }\n    return rtn;\n}\n\nstring resize_tree(const string & in, bool half){\n    string rtn = in;\n    int prev = 0;\n    for(int i=0; i<in.size()-2; i++){\n        if(in[i] == '[' && in[i+1] == '[' && isdigit(in[i+2])) prev = i+1;\n        else if(isdigit(in[i]) && in[i+1] == ']' && in[i+2] == ']'){\n            string region(in.begin()+prev , in.begin()+i+2);\n            vector<int> reg;\n            int a = 0;\n            for(int j=0; j<region.size(); j++){\n                if(isdigit(region[j])){\n                    a*=10;\n                    a+=region[j]-'0';\n                } else if(region[j] == ']'){\n                    reg.push_back(a);\n                    a=0;\n                }\n            }\n            string range = to_s(min_vote(reg,half));\n            // cout << range << \" \";\n            replace(rtn, region, range);\n        }\n    }\n    return rtn;\n}\n\nvoid solve(string in){\n    int d = 0;\n    while(in[d] == '[') d++;\n    for(int i=0; i<d-1; i++){\n        // cout << in << endl;\n        in = resize_tree(in, i==0);\n    }\n    cout << in.substr(1, in.size()-2) << endl;\n}\n\nint main(){\n    int n; cin >> n;\n    while(n--){\n        string in; cin >> in;\n        solve(in);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cctype>\n#include <vector>\n#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\ntypedef string::const_iterator State;\nint num(State &be){\n//\tcout << \"num \" << *be << endl;\n\tint ret=0;\n\twhile(isdigit(*be)){\n\t\tret*=10;\n\t\tret+=(*be-'0');\n\t\tbe++;\n\t}\n//\tcout << \"numret \" << ret << endl;\n\treturn ret;\n}\nint ex(State& be){\n//\tcout << \"ex \" << *be << endl;\n\tbe++;\n\tvector<int> vc;\n\tif(isdigit(*be)){\n\t\tint ret=num(be);\n\t\tbe++;\n\t\treturn ret/2+1;\n\t}\n\tvc.push_back(ex(be));\n\twhile(*be=='['){\n\t\tvc.push_back(ex(be));\n\t}\n\tbe++;\n\tint ans=0;\n\tsort(vc.begin(),vc.end());\n\trep(i,vc.size()/2+1) ans+=vc[i];\n//\tcout << \"exret \" << ans << endl;\n\treturn ans;\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\trep(i,n){\n\t\tstring s;\n\t\tcin >> s;\n\t\tState be=s.begin();\n\t\tprintf(\"%d\\n\",ex(be));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nstring s;\nint now;\nint rec(int now){\n  if(isdigit(s[now])){\n    int res = 0;\n    while(now < s.size() && isdigit(s[now])) res = res * 10 + s[now++] - '0';\n    return ++res / 2;\n  }else{\n    vector<int> dat; int res = 0;\n    while(s[now] == '[') now++ , dat.push_back(rec()) , now++;\n    sort(dat.begin(),dat.end());\n    for(int i = 0 ; i < ( dat.size() + 1 ) / 2 ; i++ ) res += dat[i];\n    return res;\n  }\n}\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    now = 0;\n    cin >> s;\n    cout << rec() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<iomanip>\n#include<math.h>\n#include<complex>\n#include<queue>\n#include<deque>\n#include<map>\n#include<set>\n#include<bitset>\nusing namespace std;\n#define REP(i,m,n) for(int i=(int)m ; i < (int) n ; i++ )\n#define rep(i,n) REP(i,0,n)\ntypedef long long ll;\ntypedef pair<int,int> pint;\nconst int inf=1e9+7;\nconst ll longinf=1LL<<60 ;\nconst ll mod=1e9+7 ;\nint dx[4]={1,0,-1,0} , dy[4]={0,1,0,-1} ;\nint sum(string s,int& i);\nint mul(string s,int& i);\nll bracket(string s,int& i);\nll num(string s,int& i);\n\nbool isdigit(char c){\n    int x=c-'0';\n    return 0<=x&&x<=9;\n}\n\n\n\nll bracket(string s,int& i){\n    if(isdigit(s[i]))return num(s,i);\n    i++;\n    vector<ll> v;\n    while(s[i]!=']'){\n        v.push_back(bracket(s,i));\n    }\n    i++;\n    sort(v.begin(),v.end());\n    int m=v.size();\n    ll ret=0;\n    rep(i,(m+1)/2)ret+=v[i];\n    return ret;\n}\n\nll num(string s,int& i){\n    int ret=s[i]-'0';\n    i++;\n    while(isdigit(s[i])){\n        ret=10*ret+(int)(s[i]-'0');\n        i++;\n    }\n    return (ret+1)/2;\n}\nint main(){\n    int n;\n    cin>>n;\n    rep(i,n){\n        string s;\n        cin>>s;\n        int j=0;\n        cout<<bracket(s,j)<<endl;\n    }\n   return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <stdlib.h>\n\nusing namespace std;\n\nstruct node{\n  int val;\n  vector<int> next;\n  node(){\n    val = -1;\n  }\n  node(int a){\n    val = a;\n  }\n};\n\nint n;\nstring s;\nvector<node> tree;\n\nint make(int p, int v)\n{\n  string tmp;\n  for(int i = p; i < s.size(); i++){\n    if(s[i] == '['){\n      tree.push_back(node());\n      tree[v].next.push_back(tree.size()-1);\n      i = make(i+1, tree.size()-1);\n    }\n    else if(s[i] == ']'){\n      if(tmp != \"\"){\n        tree[v].val = atoi(tmp.c_str());\n      }\n      return i;\n    }\n    else{\n      tmp += s[i];\n    }\n  }\n}\n\nint calc(int v)\n{\n  if(tree[v].val != -1){\n    return (tree[v].val + 1) / 2;\n  }\n  vector<int> vec;\n  for(int i = 0; i < tree[v].next.size(); i++){\n    vec.push_back(calc(tree[v].next[i]));\n  }\n  sort(vec.begin(), vec.end());\n  int ret = 0;\n  for(int i = 0; i < ((int)vec.size()+1)/2; i++) ret += vec[i];\n  return ret;\n}\n\nint main(void)\n{\n  cin >> n;\n  for(int t = 0; t < n; t++){\n    cin >> s;\n\n    tree.clear();\n    tree.push_back(node());\n\n    make(0, 0);\n    cout << calc(0) << endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <iostream>\n#include <sstream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint parseint(string s){\n  stringstream ss(s);\n  int r;\n  ss >> r;\n  return r;\n}\n\nint sumdiv2(vector<int> &a){\n  int r=0;\n  sort(a.begin(),a.end());\n  for(int i=0;i<a.size()/2+1;i++){\n    r+=a[i]/2+1;\n  }\n  return r;\n}\n\nint sum2(vector<int> &a){\n  int r=0;\n  sort(a.begin(),a.end());\n  for(int i=0;i<a.size()/2+1;i++){\n    r+=a[i];\n  }\n  return r;\n}\n\nint main(){\n  int n;\n  int stack;\n  cin >> n;\n  string s;\n\n  vector<vector<int> > votes;\n  while(n--){\n    votes.clear();\n    stack = 0;\n    int max = 0;\n    cin >> s;\n    while(s[max]=='[')max++;\n    votes.resize(max+3);\n    for(int i=0;i<s.size();i++){\n      if(s[i]=='[')stack++;\n      else if(s[i]==']'){\n        stack--;\n        if(!votes[stack+2].empty()){\n          if(stack+2==max){\n            //cout << stack+2 << \" \" << sumdiv2(votes[stack+2]) << endl;\n            votes[stack+1].push_back(sumdiv2(votes[stack+2]));\n          }else{\n            //cout << stack+2 << \" \" << sum2(votes[stack+2]) << endl;\n            votes[stack+1].push_back(sum2(votes[stack+2]));\n          }\n          votes[stack+2].clear();\n        }\n      }else{\n        //cout << stack << endl;\n        int r = parseint(s.substr(i));\n        //cout << r << endl;\n        votes[stack].push_back(r);\n        while(r/10){r/=10;i++;}\n      }\n    }\n    cout << votes[1][0] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<sstream>\n\nusing namespace std;\n\n\n#define reps(i,f,n) for(int i=f;i<int(n);i++)\n#define rep(i,n) reps(i,0,n)\n\n\nint solve(string s){\n\t\n\t//cout<<s<<endl;\n\t\n\ts.erase(s.begin());\n\ts.erase(s.begin()+s.size()-1);\n\t\n\tint cnt = 0;\n\trep(i,s.size()){\n\t\tif(s[i]=='[' || s[i]==']')cnt++;\n\t}\n\t\n\tif(cnt==0){\n\t\t\n\t\tstringstream sst;\n\t\tsst<<s;\n\t\tint ret;\n\t\tsst>>ret;\n\t\treturn ret/2+1;\n\t}\n\t\n\tvector<int> cand;\n\t\n\tint st = 0;\n\tint ct = 0;\n\trep(i,s.size()){\n\t\tif(s[i]=='[')ct++;\n\t\tif(s[i]==']')ct--;\n\t\tif(ct==0){\n\t\t\tcand.push_back(solve(s.substr(st, i-st+1)));\n\t\t\tst=i+1;\n\t\t}\n\t}\n\t\n\t\n\tsort(cand.begin(),cand.end());\n\t\n\tint ans = 0;\n\trep(i,cand.size()/2+1){\n\t\tans += cand[i];\n\t}\n\t\n\treturn ans;\n}\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\t\n\trep(i,n){\n\t\tstring s;\n\t\tcin>>s;\n\t\t\n\t\tcout<<solve(s)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint parse(){\n\tvector<int> nums;\n\tint val=0;\n\n\tchar c = getchar(); //read '['\n\tif(c!='['){\n\t\tcout<<\"error: \"<<c<<endl;\n\t}\n\n\tc = getchar();\n\tungetc(c, stdin);\n\tif(c != '['){\n\t\tscanf(\"%d\",&val);\n\t\tgetchar(); //read ']'\n\t\treturn val/2+1;\n\t}else{\n\t\twhile(true){\n\t\t\tnums.push_back(parse());\n\t\t\tc = getchar();\n\t\t\tif(c==']'){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tungetc(c, stdin);\n\t\t}\n\t}\n\n\tsort(nums.begin(),nums.end());\n\tfor(int i=0;i<nums.size()/2+1;i++){\n\t\tval+=nums[i];\n\t}\n\treturn val;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int I=0;I<n;I++){\n\t\tgetchar();\n\t\tint ans= parse();\n\t\tcout<<ans<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "// Problem C\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\n\nstruct Node{\n\tbool leaf;\n\tvector<Node*> ch;\n\tint data;\n\tNode* par;\n\tNode(){\n\t\tdata = 0;\n\t\tleaf = false;\n\t\tpar = NULL;\n\t}\n};\n\nint dfs(Node* node){\n\tif(node->leaf)return node->data / 2 + 1;\n\tvector<int> vec;\n\tfor(int i=0;i<node->ch.size();i++){\n\t\tvec.push_back(dfs(node->ch[i]));\n\t}\n\tsort(vec.begin(),vec.end());\n\treturn accumulate(vec.begin(),vec.begin()+(vec.size()/2+1),0);\n}\n\nvoid debug(Node* node,int d){\n\tcout << d << \" \";\n\tif(node->leaf){\n\t\tcout << node->data << endl;\n\t}\n\tfor(int i=0;i<node->ch.size();i++){\n\t\tdebug(node->ch[i],d+1);\n\t}\n\treturn;\n}\n\nint main(void){\n\tint T;cin >> T;\n\tfor(int i=0;i<T;i++){\n\t\tstring s;\n\t\tcin >> s;\n\t\tNode* root = new Node();\n\t\tNode* now = root;\n\n\t\tfor(int i=0;i<s.size();i++){\n\t\t\tif(s[i] == '['){\n\t\t\t\tNode* node = new Node();\n\t\t\t\tnow->ch.push_back(node);\n\t\t\t\tnode->leaf = false;\n\t\t\t\tnode->par = now;\n\t\t\t\tnow = node;\n\t\t\t}else if(isdigit(s[i])){\n\t\t\t\tstring t;t += s[i];\n\t\t\t\tnow->leaf = true;\n\t\t\t\twhile(isdigit(s[i+1])){\n\t\t\t\t\ti++;\n\t\t\t\t\tt += s[i];\n\t\t\t\t}\n\t\t\t\tnow->data = stoi(t);\n\t\t\t}else{\n\t\t\t\tnow = now->par;\n\t\t\t}\n\t\t}\n\t\tcout << dfs(root) << endl;\n\t// debug(root,0);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\nusing ll = long long;\nusing vi = vector<int>;\nusing vii = vector<vector<int>>;\nusing vl = vector<ll>;\nusing vll = vector<vector<ll>>;\nusing pii = pair<int,int>;\n#define FOR(i,a,b) for(ll i = (a); i < (b); i++)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(obj) (obj).begin(), (obj).end()\n#define pb push_back\n#define fst first\n\nstring s;\nint id;\nvoid eat(char c){\n  assert(s[id] == c);\n  id++;\n}\nchar peek(){\n  return s[id];\n}\nchar pop(){\n  return s[id++];\n}\nbool left(){\n  return id < s.size();\n}\nint number(){\n  int res = 0;\n  while (isdigit(peek())) {\n    res = res * 10 + pop() - '0';\n  }\n  return res;\n}\nint solve(){\n  eat('[');\n  int res = 0;\n  vi vec;\n  if (isdigit(peek())) {\n    res = number() / 2 + 1;\n    eat(']');\n  } else {\n    while (peek() != ']') {\n      vec.pb(solve());\n    }\n    sort(ALL(vec));\n    eat(']');\n    REP(i,vec.size() / 2){\n      res += vec[i];\n    }\n  }\n  return res;\n}\n\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  REP(i,n){\n    id = 0;\n    cin >> s;\n    cout << solve() << endl;\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cstdlib>\n#include <iostream>\n#include <numeric>\n#include <stack>\n#include <vector>\nusing namespace std;\n\nint majority(int x) {\n\treturn x / 2 + 1;\n}\n\nint majority(vector<int> vec) {\n\tsort(begin(vec), end(vec));\n\treturn accumulate(begin(vec), begin(vec) + majority(vec.size()), 0);\n}\n\nint number(int l, int r, const string &str) {\n\treturn stoi(str.substr(l, r - l));\n}\n\nint parse(int l, int r, const string &str) {\n\tif(isdigit(str[l])) return majority(number(l, r, str));\n\n\tvector<int> vec;\n\tstack<int> sta;\n\tfor(int i = l; i < r; ++i) {\n\t\tif(str[i] == '[') {\n\t\t\tsta.push(i);\n\t\t}\n\t\telse if(str[i] == ']') {\n\t\t\tassert(!sta.empty());\n\t\t\tif(sta.size() > 1) {\n\t\t\t\tsta.pop();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tconst int child_l = sta.top() + 1;\n\t\t\tsta.pop();\n\t\t\tvec.emplace_back(parse(child_l, i, str));\n\t\t}\n\t}\n\tassert(!vec.empty());\n\treturn majority(vec);\n}\n\nvoid solve() {\n\tstring str;\n\tcin >> str;\n\tcout << parse(1, str.size() - 1, str) << endl;\n}\n\nint main() {\n\tint T;\n\tcin >> T;\n\twhile(T--) solve();\n\t\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cctype>\n#include <algorithm>\nusing namespace std;\n\nconst char *p;\nstring str;\n\nint parse() {\n  int num;\n  char *e;\n  p++;\n  \n  if(*p=='[') {\n    vector<int> v;\n    for(;;) { \n      if(*p == '[') {\n\tnum = parse();\n\tv.push_back(num);\n\tp++;\n      } else break;\n    }\n    p++;\n    sort(v.begin(), v.end());\n    \n    int sum = 0;\n    for(int i=0; i<v.size()/2+1; i++) sum+=v[i];\n    return sum;\n  }\n  \n  if(isdigit(*p)) {\n    num = strtol(p, &e, 10);\n    p = e;\n    return num/2+1;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cin.ignore();\n  \n  for(int i=0; i<n; i++) {\n    getline(cin, str);\n    p = str.c_str();\n    cout << parse() << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <array>\n#include <vector>\n#include <math.h>\n#include <algorithm>\n#include <set>\n#include <deque>\n#include <utility>\n#include <queue>\n\n#define MAX 21\n#define ll long long int\nusing namespace std;\n\nstring s; //??\\?????¨\n\nint ctoi(char c) {\n\tswitch (c) {\n\tcase '0': return 0;\n\tcase '1': return 1;\n\tcase '2': return 2;\n\tcase '3': return 3;\n\tcase '4': return 4;\n\tcase '5': return 5;\n\tcase '6': return 6;\n\tcase '7': return 7;\n\tcase '8': return 8;\n\tcase '9': return 9;\n\tdefault: return -1;\n\t}\n}\n\nint ele_dis(int st, int en) //start ?????? end ?????§???????\\¨??°\n{\n\tint i, j = 0;\n\tvector <int> hyou;\n\tint temp = 0;\n\tint k = 1;\n\tint n;\n\tint res = 0;\n\n\tint l, r; //left, right\n\n\n\t //?????????????????????????????????????¢??????????\n\tif (s[st + 1] == '[') {\n\t\tint count = 0;\n\t\tl = st + 1;\n\n\t\tfor (i = st + 1; i < en; i++) {\n\t\t\tif (s[i] == '[') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse if (s[i] == ']') {\n\t\t\t\tcount--;\n\t\t\t}\n\n\t\t\tif (count == 0) {\n\t\t\t\tr = i;\n\t\t\t\thyou.push_back(ele_dis(l, r));\n\t\t\t\tl = i + 1; //?¬?????????????\n\t\t\t}\n\n\t\t}\n\n\t\tsort(hyou.begin(), hyou.end());\n\n\t\tn = (hyou.size() + 1) / 2;\n\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tres = res + hyou[i];\n\t\t}\n\n\t\treturn (res);\n\n\t}\n\telse {\n\t\t// ??????????????????????????´???\n\n\t\tfor (i = en - 1; i > st; i--) {\n\n\n\t\t\ttemp = temp + k * ctoi(s[i]);\n\t\t\tk = k * 10;\n\t\t}\n\n\n\t\treturn (temp / 2 + 1);\n\n\t}\n\n\n\n}\n\n\nint solve(void)\n{\n\tint ans;\n\n\tans = ele_dis(0, s.length() - 1); //????????????????????????\n\n\treturn (ans);\n\n}\n\n\n\n\nint main(void)\n{\n\tint n;\n\tint i;\n\tint ans;\n\n\n\tcin >> n;\n\n\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> s;\n\n\t\tans = solve();\n\n\n\t\tcout << ans << endl;\n\t\ts.clear();\n\t}\n\n\n\n\treturn (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<cstdlib>\n#define f first\n#define s second\nusing namespace std;\n\nvector<pair<int,int> > V;\n\nvoid dfs(string s,int d)\n{\n  if(s.length()==0)return;\n  if(s[0]=='['){\n    dfs(s.substr(1),d+1);\n  }\n  else if(s[0]==']'){\n    int a=V.back().s;\n    vector<int> v;\n    while(1){\n      if(V.back().s!=a)break;\n      v.push_back(V.back().f);\n      V.pop_back();\n    }\n    sort(v.begin(),v.end());\n    int ans=0;\n    for(int i=0;i<v.size()/2+1;i++)ans+=v[i];   \n    V.push_back(make_pair(ans,d-1));\n    dfs(s.substr(1),d-1);\n  }\n  else {\n    string S=\"\";\n    S+=s[0];\n    for(int i=1;;i++){\n      if(s[i]==']'){\n\tV.push_back(make_pair(atoi(S.c_str())/2+1,d));\n\tdfs(s.substr(i+1),d-1);\n\tbreak;\n      }\n      S+=s[i];\n    }\n  }\n}\n\nint main()\n{\n  int n;\n  string s;\n  cin>>n;\n  for(int i=0;i<n;i++){\n    cin>>s;\n    V.clear();\n    dfs(s,0);\n    cout<<V[0].f<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstring cal_p(string str) {\n\tvector<int> ns;\n\tfor (int i = 0; i < str.length(); ++i) {\n\t\tif (str[i] != ' ') {\n\t\t\tint len = 0;\n\t\t\twhile (str[i+len] != ' ') {\n\t\t\t\t++len;\n\t\t\t}\n\t\t\tns.push_back(stoi(str.substr(i,len)));\n\t\t\ti += len;\n\t\t}\n\t}\n\tsort(ns.begin(),ns.end());\n\tint sum = 0;\n\tfor (int i = 0; i < (ns.size()+1)/2; ++i) {\n\t\tsum += ns[i];\n\t}\n\treturn to_string(sum);\n}\n\nint main(void) {\n\tint n;\n\tcin >> n;\n\tfor (int q = 0; q < n; ++q) {\n\t\tstring str;\n\t\tcin >> str;\n\t\tstring norm = \"\";\n\t\tint deep = 0;\n\t\tint mp = 0;\n\t\tfor (int i = 0; i < str.length(); ++i) {\n\t\t\tif (str[i] == '[') {\n\t\t\t\tdeep = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if (str[i] == ']') {\n\t\t\t\tnorm += \" \";\n\t\t\t\t++deep;\n\t\t\t\tmp = max(mp,deep);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeep = 0;\n\t\t\t\tint len = 0;\n\t\t\t\twhile (str[i+len] != ']') {\n\t\t\t\t\t++len;\n\t\t\t\t}\n\t\t\t\tnorm += to_string((stoi(str.substr(i,len))/2)+1);\n\t\t\t\ti += len-1;\n\t\t\t}\n\t\t}\n\n\t\tfor (int time = 0; time < deep-1; ++time) {\n\t\t\tint ind = 0;\n\t\t\tint st = 0;\n\t\t\tint len = 0;\n\t\t\tbool sp = false;\n\t\t\tstring next = \"\";\n\t\t\tstring temp = \"\";\n\t\t\twhile (ind < norm.length()) {\n\t\t\t\tif (norm[ind] == ' ') {\n\t\t\t\t\tif (sp) {\n\t\t\t\t\t\tlen = 0;\n\t\t\t\t\t\tst = ind;\n\t\t\t\t\t\tnext += cal_p(temp);\n\t\t\t\t\t\tnext += \" \";\n\t\t\t\t\t\ttemp = \"\";\n\t\t\t\t\t\tsp = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttemp += norm[ind];\n\t\t\t\t\t\t++len;\n\t\t\t\t\t\tsp = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsp = false;\n\t\t\t\t\ttemp += norm[ind];\n\t\t\t\t\t++len;\n\t\t\t\t}\n\t\t\t\t++ind;\n\t\t\t}\n\t\t\tnorm = next + \" \";\n\t\t}\n\t\tfor (int i = 0; norm[i] != ' '; ++i) {\n\t\t\tcout << norm[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <string>\n#include <utility>\n#include <stdio.h>\n#include <stdlib.h>\n\nint depth;\nstd::string data;\nstd::vector< std::vector< int > > vv;\n\nint max( int p, int q ) {\n\tif( p > q ) return p;\n\treturn q;\n}\n\n/*\n\t探索\n\t引数は　現在の階層の深さ、各選挙区における最小得票数のvector\n*/\nvoid search( int dep ) {\n\n\tif( dep >= depth ) return;\n\tusing namespace std;\n\n\t/*\n\t\tk段階の最小得票数を求める\n\t\tk段階の選挙区はいくつ存在し、\n\t\tk-1段階の選挙区をいくつずつ含むか？\n\t*/\n\n\tint currentDepth = depth;\n\tint blockNum = 0;\n\n\tvector< int > vec;\n\n\tfor( int i = 0; i < data.length(); i++ ) {\n\t\tif( data[i] == '[' ) {\n\t\t\tcurrentDepth --;\n\t\t\tif( currentDepth == dep - 1 ) {\n\t\t\t\tblockNum ++;\n\t\t\t}\n\t\t} else if( data[i] == ']' ) {\n\t\t\tcurrentDepth ++;\n\t\t\tif( currentDepth == dep + 1 ) {\n\t\t\t\tvec.push_back( blockNum );\n\t\t\t\tblockNum = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint k = 0;\n\tfor( int i = 0; i < vec.size(); i++ ) {\n\t\tvector< int > tv;\n\t\tint sum = 0;\n\t\tfor( int j = 0; j < vec[i]; j++ ) {\n\t\t\ttv.push_back( vv[ dep - 1 ][ k ] );\n\t\t\tk ++;\n\t\t}\n\t\tsort( tv.begin(), tv.end() );\n\t\tfor( int j = 0; j < vec[i] / 2 + 1; j++ ) {\n\t\t\tsum += tv[ j ];\n\t\t}\n\t\tvv[ dep ].push_back( sum );\n\t}\n\n\tsearch( dep + 1 );\n\n}\n\nint main( void ) {\n\n\tusing namespace std;\n\n\tint n;\n\tcin >> n;\n\n\tfor( int i = 0; i < n; i++ ) {\n\n\t\tint currentDepth = 0;\t\t\t//階層の深さ\n\t\tdepth = 0;\n\t\tvv.clear();\n\t\tcin >> data;\t//データ取得\n\n\t\t//階層の深さを調べる\n\t\tfor( int j = 0; j < data.length(); j++ ) {\n\t\t\tif( data[j] == '[' ) {\n\t\t\t\tcurrentDepth ++;\n\t\t\t} else if( data[j] == ']' ) {\n\t\t\t\tcurrentDepth --;\n\t\t\t}\n\t\t\tdepth = max( depth, currentDepth );\n\t\t}\n\t\t\n\t\tvv = vector< vector< int > >( depth, vector< int >() );\n\n\t\t//第0段階の最小得票数をpush_backする\n\t\tcurrentDepth = 0;\n\t\tint back;\n\t\tfor( int j = 0; j < data.length(); j++ ) {\n\t\t\tif( data[j] == '[' ) {\n\t\t\t\tcurrentDepth ++;\n\t\t\t\tif( currentDepth == depth ) {\n\t\t\t\t\tback = j;\n\t\t\t\t}\n\t\t\t} else if( data[j] == ']' ) {\n\t\t\t\tif( currentDepth == depth ) {\n\t\t\t\t\tvv[0].push_back( atoi( data.substr( back + 1, j - back - 1 ).c_str() ) / 2 + 1 );\n\t\t\t\t}\n\t\t\t\tcurrentDepth --;\n\t\t\t}\n\t\t}\n\n\t\tsearch( 1 );\n\t\tcout << vv[ depth - 1 ][ 0 ] << endl;\n\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <tuple>\n#include <queue>\n#include <set>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <array>\n#include <functional>\n#include <list>\n#include <iomanip>\n#include <set>\nconst int MOD=1000000007;\nconst int INF=1000000000;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\nconst double eps=1e-9;\nconst int inf=1e9;\ntypedef pair<int,int> P;\nstruct Point\n{\n  double x,y,z;\n};\nPoint operator-(const Point& a,const Point& b)\n{\n  Point ret={a.x-b.x,a.y-b.y,a.z-b.z};\n  return ret;\n}\ndouble dot(Point a,Point b)\n{\n  return a.x*b.x+a.y*b.y+a.z*b.z;\n}\nPoint cross(Point a,Point b)\n{\n  Point ret={a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x};\n  return ret;\n}\ndouble norm(Point a)\n{\n  return a.x*a.x+a.y*a.y+a.z*a.z;\n}\n\nint Stoi(string num)\n{\n  int ret;\n  stringstream s;\n  s << num;\n  s >> ret;\n  return ret;\n}\n\nint getNum(string &s,int *i)\n{\n  int n=0;\n  while(s[(*i)]!= ']')\n    {\n      n*=10;\n      n+=s[*i]-'0';\n      (*i)++;\n    }\n  return n;\n}\n\nint analyze(string &s, int *i)\n{\n  if(s[(*i)] !='[')\n    {\n      cerr << \"error!\" << endl;\n      return -1;\n    }\n  if(s[++(*i)] != '[')\n    {\n      return getNum(s,i)/2 +1 ;\n    }\n  vector<int> a;\n  while(s[(*i)]=='[')\n    {\n      a.push_back(analyze(s,i));\n      (*i)++;\n    }\n  sort(a.begin(),a.end());\n  int ans=0;\n  for(int k=0;k<a.size()/2 +1;k++) ans+=a[k];\n  return ans;\n}\nint main(int argc,char const* argv[])\n{\n  int n;\n  string s;\n  getline(cin,s);\n  sscanf(s.c_str(),\"%d\",&n);\n  for(int data=0;data<n;data++)\n    {\n      getline(cin,s);\n      int i=0;\n      cout << analyze(s,&i) << endl;\n    }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\n\n#define fs first\n#define sc second\n\ntemplate<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }\ntemplate<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }\n\n\n// std::vector Declaration\ntemplate<typename T>\nvector<T> make_v(size_t a) { return vector<T>(a); }\ntemplate<typename T,typename... Ts>\nauto make_v(size_t a,Ts... ts) {\n    return vector<decltype(make_v<T>(ts...))>(a,make_v<T>(ts...));\n}\n\n// std::vector Initialization\ntemplate<typename T>\nvoid fill_all(T& arr, const T& v) { arr = v; }\ntemplate<typename T, typename U>\nvoid fill_all(T& arr, const U& v) { for (auto& i : arr) fill_all(i, v); }\n\n// std::vector Debug\ntemplate<typename T>\nostream& operator<<(ostream& os, const vector<T>& v) {\n    os << \"[\";\n    bool a = 1;\n    for (auto e : v ) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"]\";\n    return os;\n}\n\n// std::pair Debug\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n    os << \"(\" << p.first << \" \" << p.second << \")\";\n    return os;\n}\n\n// std::set Debug\ntemplate<typename T>\nostream& operator<<(ostream& os, const set<T>& st) {\n    os << \"{\";\n    bool a = 1;\n    for (auto e : st) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"}\";\n    return os;\n}\n\n// std::multiset Debug\ntemplate<typename T>\nostream& operator<<(ostream& os, const multiset<T>& st) {\n    os << \"{\";\n    bool a = 1;\n    for (auto e : st) {\n        os << (a ? \"\" : \" \");\n        os << e;\n        a = 0;\n    }\n    os << \"}\";\n    return os;\n}\n\n// std::map Debug\ntemplate<typename T, typename U>\nostream& operator<<(ostream& os, const map<T, U>& mp) {\n    os << \"{\";\n    bool a = 1;\n    for (auto e : mp) {\n        os << (a ? \"\" : \" \");\n        os << e.first << \":\" << e.second;\n        a = 0;\n    }\n    os << \"}\";\n    return os;\n}\n\n// std::tuple Debug\ntemplate<int N, class Tuple>\nvoid out(ostream& os, const Tuple& t){}\ntemplate<int N, class Tuple, class H, class ...Ts>\nvoid out(ostream& os, const Tuple& t) {\n    if (N) os << \" \";\n    os << get<N>(t);\n    out<N+1,Tuple,Ts...>(os, t);\n}\ntemplate<class ...Ts>\nostream& operator<<(ostream& os, const tuple<Ts...>& t) {\n    os << \"(\";\n    out<0,tuple<Ts...>,Ts...>(os, t);\n    os << \")\";\n    return os;\n}\n\n// Debug\n#define DUMP(x) cerr<<#x<<\" = \"<<(x)<<endl\n\n\nstruct edge { int to, cost; };\nostream& operator<<(ostream& os, const edge& e) {\n    os << \"(\" << e.to << \", \" << e.cost << \")\";\n    return os;\n}\n\nconst LL LINF = 1LL<<60;\nconst int IINF = 1<<30;\nconst LL MOD = 1e9+7;\n\n\nusing State = string::const_iterator;\n\nint number(State &begin) {\n    // 数\n    int ret = 0;\n    while (isdigit(*begin)) {\n        ret *= 10;\n        ret += *begin - '0';\n        begin++;\n    }\n    return ret/2+1;\n}\n\nint factor(State &begin) {\n    // 数 or [...]\n    if (*begin == '[')\n    {\n        begin++;\n        vector<int> ret;\n        while (*begin != ']') {\n            ret.push_back(factor(begin));\n        }\n        begin++;\n\n        sort(ret.begin(), ret.end());\n        int sum = 0;\n        for (int i = 0; i <= ret.size()/2; ++i) {\n            sum += ret[i];\n        }\n        return sum;\n    }\n    else\n    {\n        return number(begin);\n    }\n}\n\nint main()\n{\n\n    vector<int> ans;\n\n    int n; cin >> n;\n    for (int i = 0; i < n; ++i) {\n        string s; cin >> s;\n        State begin = s.begin();\n        ans.push_back(factor(begin));\n    }\n\n    for (auto a : ans) {\n        cout << a << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <stack>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define pb push_back\ntypedef pair<int,int> P;\ntypedef pair<P,int> Q;\n#define fi first\n#define sc second\n\nstring str;\nint n,nn;\npair<int,int>rec(int L,int R){\n\t//cout << L << \"  \"<< R << endl;\n\tif(str[L+1]!='['){\n\t\tint ret = 0;\n\t\tfor(int x=L+1;x<R;x++) ret = ret*10+(str[x]-'0');\n\t\treturn make_pair((ret+1)/2,0);\n\t}\n\telse{\n\t\tvector<P>need;\n\t\tstack<int>que;\n\t\tfor(int i=L+1;i<R;i++){\n\t\t\tif(str[i] == '[') que.push(i);\n\t\t\telse if(str[i] == ']'){\n\t\t\t\tint q = que.top(); que.pop();\n\t\t\t\tif(que.size() == 0) need.push_back(rec(q,i));\n\t\t\t}\n\t\t}\n\t\t//cout << str << \" \" << need.size() << endl;\n\t\t//cout << need[0].fi << \" \" <<  need[0].sc << endl;\n\t\tsort(need.begin(),need.end());\n\t\tint ans = 0;\n\t\tfor(int i=0;i<(need.size()+1)/2;i++) ans+=need[i].fi;\n\t\treturn P(ans,0);\n\t}\n}\nint main(){\n\tcin>>nn;\n\twhile(nn--){\n\t\tcin>>str;\n\t\tn = str.size();\n\t\tcout << rec(0,n-1).first << endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define dump(x) cout << (x) << '\\n'\n#define Int int64_t\n#define fi first\n#define se second\n#define all(x) (x).begin(), (x).end()\n\nInt INF = 1e18;\nint inf = 1e9;\nInt mod = 1e9+7;\n\nint f(string s) {\n    if (isdigit(s[0])) {\n        return stoi(s) / 2 + 1;\n    }\n    vector<int> a;\n    stack<char> st;\n    int start = 0;\n    for (int i = 0; i < (int)s.size(); i++) {\n        if (s[i] == '[') {\n            st.push('[');\n        }\n        else if (s[i] == ']') {\n            st.pop();\n        }\n        if (st.empty()) {\n            a.push_back(f(s.substr(start + 1, i - (start + 1))));\n            start = i + 1;\n        }\n    }\n    sort(all(a));\n    int ret = 0;\n    for (int i = 0; i < (int)a.size() / 2 + 1; i++) {\n        ret += a[i];\n    }\n    return ret;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    vector<string> s(n);\n    for (int i = 0; i < n; i++) {\n        cin >> s[i];\n    }\n    for (int i = 0; i < n; i++) {\n        dump(f(s[i].substr(1, (int)s[i].size() - 2)));\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define abs(a) max((a),-(a))\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define repe(i,n) rep(i,(n)+1)\n#define per(i,n) for(int i=(int)(n)-1;i>=0;i--)\n#define pere(i,n) rep(i,(n)+1)\n#define all(x) (x).begin(),(x).end()\n#define SP <<\" \"<<\n#define RET return 0\n#define MOD 1000000007\n#define INF 1000000000000000000\n\ntypedef long long LL;\ntypedef long double LD;\n\nLL solve(string s){\n  if(s[1]=='['){\n    int count=0;\n    int pre=1;\n    list<LL> ans;\n    for(int i=1;i<s.length()-1;i++){\n      if(s[i]=='[') count++;\n      else if(s[i]==']') count--;\n      if(count==0){\n        ans.push_back(solve(s.substr(pre,i-pre+1)));\n        pre=i+1;\n      }\n    }\n    vector<LL> an(ans.size());\n    auto itr=ans.begin();\n    for(int i=0;i<ans.size();i++,itr++){\n      an[i]=(*itr);\n    }\n    sort(an.begin(),an.end());\n    LL re=0;\n    for(int i=0;i<(ans.size()+1)/2;i++){\n      re+=an[i];\n    }\n    return re;\n  }else{\n    return (stoi(s.substr(1,s.length()-2))+1)/2;\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  string s;\n  for(int i=0;i<n;i++){\n    cin >> s;\n    cout << solve(s) << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll stoll(string s) {\n\tstringstream ss(s);\n\tint ret; ss >> ret;\n\treturn ret;\n}\n\nstring s;\nll parse(int l, int r) {\n\tif (s[l] != '[') return stoll(s.substr(l, r-l))/2 + 1;\n\t\n\tpriority_queue< ll, vector<ll>, greater<ll> > vote;\n\tint stack = 0, prev = l;\n\tfor (int i=l; i<r; i++) {\n\t\tif (s[i]=='[') stack++;\n\t\tif (s[i]==']') stack--;\n\t\tif (stack==0) {\n\t\t\tvote.push(parse(prev+1, i));\n\t\t\tprev = i+1;\n\t\t}\n\t}\n\t\n\tint res = 0;\n\tint len = (int)vote.size();\n\tfor (int i=0; i<=len/2; i++) { res += vote.top(); vote.pop(); }\n\treturn res;\n}\n\nint main() {\n\tint n; cin >> n;\n\tfor (int i=0; i<n; i++) {\n\t\tcin >> s;\n\t\tcout << parse(0, s.size()) << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint n;\nstring s;\n\nint p;\nint calc()\n{\n  //cout << p << endl;\n  vector<int> vec;\n  while(1){\n    if(s[p] == '['){\n      p++;\n      vec.push_back(calc());\n      //p++;\n    }\n    else if(s[p] == ']'){\n      sort(vec.begin(), vec.end());\n      int ret = 0;\n      //for(int i = 0; i < vec.size(); i++) cout << vec[i] << \" \"; cout << endl;\n      for(int i = 0; i <= vec.size()/2; i++) ret += vec[i];\n      p++;\n      //cout << \"*\" << ret << endl;\n      return ret;\n    }\n    else{\n        int ret = 0;\n        while(s[p] != ']'){\n          ret *= 10;\n          ret += s[p] - '0';\n          p++;\n        }\n        p++;\n        //cout << \"@\" << ret/2+1 << endl;\n        return ret/2+1;\n    }\n  }\n}\n\nint main(void)\n{\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    cin >> s;\n    s += \"]\";\n    p = 0;\n    cout << calc() << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint p;\nstring s;\n\nbool is_digit(char ch){\n    if ('0' <= ch && ch <= '9') {\n        return true;\n    }\n    return false;\n}\n\nint dfs(){\n    vector<int> v;\n    while (p < s.size()) {\n        if (is_digit(s[p])) {\n            int res = 0;\n            while (is_digit(s[p])) {\n                res *= 10;\n                res += s[p] - '0';\n                p++;\n            }\n            v.push_back((res + 1) / 2);\n        }else if (s[p] == '['){\n            p++;\n            v.push_back(dfs());\n        }else if (s[p] == ']'){\n            p++;\n            int res = 0;\n            int n = v.size();\n            vector<int> a = v;\n            sort(a.begin(), a.end());\n            for (int i = 0; i <= n / 2; i++) {\n                res += a[i];\n            }\n            return res;\n        }\n    }\n    return 0;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n        cin >> s;\n        p = 1;\n        cout << dfs() << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<int(n);++i)\n#define all(a) a.begin(),a.end()\n \n// T := [T][T]... | num \n \nint solve(string s, int &i){\n    vector<int> v;\n    if(isdigit(s[i])){\n        int num = 0;\n        while(isdigit(s[i])){\n            num = num*10 + s[i]-'0';\n            i++;\n        }\n        return num+1;\n    }\n    while(s[i] == '['){\n        i++; // [\n        v.push_back(solve(s,i));\n        i++; // ]\n    }\n \n    sort(all(v));\n    int n = v.size(), sum = 0;\n    rep(k,(n+1)/2){\n        sum += v[k];\n    }\n    return sum;\n}\n \nint main(void){\n    int T;\n    cin>>T;\n    rep(_,T){\n        string s;\n        cin>>s;\n        int index = 0;\n        cout<<(solve(s,index)+1)/2<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <bitset>\n#include <deque>\n#include <fstream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\n#define rep(i, n) for(ll i = 0; i < n; i++)\n#define revrep(i, n) for(ll i = n-1; i >= 0; i--)\n#define pb push_back\n#define f first\n#define s second\nll INFL = 1LL << 60;//10^18 = 2^60\nint INF = 1 << 30;//10^9\nll MOD = 1e9 + 7;\n//ll MOD  = 998244353;\n//vector<ll> dy = {0, 0, 1, -1, 1, 1, -1, -1, 0};\n//vector<ll> dx = {1, -1, 0, 0, 1, -1, 1, -1, 0};\n\nll max(ll a, ll b){return (a > b) ? a : b;}\nll min(ll a, ll b){return (a < b) ? a : b;}\nll pow_long(ll x, ll k){\n  ll res = 1;\n  while(k > 0){\n    if(k % 2) res *= x;\n    x *= x;\n    k /= 2;\n  }\n  return res;\n}\n\nll pow_mod(ll x, ll k){\n  x %= MOD; x += MOD; x %= MOD;\n  ll res = 1;\n  while(k > 0){\n    if(k % 2){\n      res *= x; res %= MOD;\n    }\n    x *= x; x %= MOD;\n    k /= 2;\n  }\n  return res;\n}\nll inverse(ll x){return pow_mod(x, MOD - 2);};\n\nll gcd(ll a, ll b){\n    if(b == 0) return a;\n    return gcd(b, a % b);\n}\nll lcm(ll x, ll y){return x / gcd(x, y) * y % MOD;};\n\nvector<ll> change(string S){\n  vector<ll> res;\n  for(int i = 0; i < S.size(); i++){\n    if(S[i] == '['){\n      res.pb(-1);\n      continue;\n    }\n    if(S[i] == ']'){\n      res.pb(-2);\n      continue;\n    }\n    int j = i;\n    while(S[j+1] != '[' && S[j+1] != ']'){\n      j++;\n    }\n    ll x = 0;\n    for(int k = i; k <= j; k++){\n      x = x * 10 + S[k] - '0';\n    }\n    res.pb(x);\n    i = j;\n  }\n  return res;\n}\n\n\nll solve(vector<ll> T, int first, int end){//[first, end)\n  if(end - first == 3){\n    return T[first + 1] / 2 + 1;\n  }\n  vector<ll> xs;\n  int s = first + 1;\n  int cnt1 = 0, cnt2 = 0;\n  for(int i = first+1; i < end-1; i++){\n    if(T[i] != -1 && T[i] != -2) continue;\n    if(T[i] == -1) cnt1 ++;\n    if(T[i] == -2) cnt2 ++;\n    if(cnt1 == cnt2){\n      xs.pb(solve(T, s, i+1));\n      s = i + 1;\n    }\n  }\n  sort(xs.begin(), xs.end());\n  ll res = 0;\n  rep(i, xs.size() / 2 + 1){\n    res += xs[i];\n  }\n  return res;\n\n\n\n\n\n\n\n}\n\nint main(){\n  int N; cin >> N;\n  rep(i, N){\n    string S; cin >> S;\n    vector<ll> T = change(S);\n    cout << solve(T, 0, T.size()) << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1188&lang=jp\nusing namespace std;\nint dfs(int &k, const string str);\nint dfs2(int &k, const string str);\nint get_int(int &k, const string str);\n\n// stage k > 1\nint dfs(int&k, const string str) {\n\tvector<int> val;\n\tint ans = 0;\n\twhile (k < str.length()) {\n\t\tif (str[k] == '[') {\n\t\t\tif (str[k + 1] >= '0' && str[k + 1] <= '9') {\n\t\t\t\tint x = dfs2(k, str);\n\t\t\t\tval.push_back(x);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tk++;\n\t\t\t\tint x = dfs(k, str);\n\t\t\t\tval.push_back(x);\n\t\t\t\tk++;\n\t\t\t\tif (k == str.length()) {\n\t\t\t\t\tsort(val.begin(), val.end());\n\t\t\t\t\tfor (int i = 0; i <= val.size() / 2;i++) {\n\t\t\t\t\t\tans += val[i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (str[k] == ']') {\n\t\t\tsort(val.begin(), val.end());\n\t\t\tfor (int i = 0; i <= val.size() / 2;i++) {\n\t\t\t\tans += val[i];\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ans;\n}\n// stage 1\nint dfs2(int&k, const string str) {\n\tvector<int> val;\n\tint ret = 0;\n\twhile (k < str.length()) {\n\t\tif (str[k] == '[') {\n\t\t\tk++;\n\t\t\tval.push_back(get_int(k, str));\n\t\t}\n\t\telse if (str[k] == ']'){\n\t\t\tsort(val.begin(), val.end());\n\t\t\tfor (int i = 0; i <= val.size() / 2;i++) {\n\t\t\t\tret += (val[i] + 1) / 2;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ret;\n}\n\nint get_int(int &k, const string str) {\n\tint ret = 0;\n\twhile (k < str.length()) {\n\t\tif (str[k] >= '0' && str[k] <= '9') {\n\t\t\tret = ret * 10 + (str[k] - '0');\n\t\t\tk++;\n\t\t}\n\t\telse if (str[k] == ']') {\n\t\t\tk++;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main() {\n\tcin.tie(0); ios::sync_with_stdio(false);\n\tint n; cin >> n;\n\tfor (int i = 0; i < n;i++) {\n\t\tstring str; cin >> str;\n\t\tint k= 0;\n\t\tcout << dfs(k, str) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n; string s;\nint calc(int l, int r) {\n\tint d = 0, c = 0, w = l;\n\tfor (int i = l; i < r; i++) c += (s[i] == '[' || s[i] == ']' ? 1 : 0);\n\tif (c == 0) return stoi(s.substr(l, r)) / 2 + 1;\n\tvector<int> v;\n\tfor (int i = l; i < r; i++) {\n\t\tif (s[i] == '[') d++;\n\t\tif (s[i] == ']') d--;\n\t\tif (d == 0) v.push_back(calc(w + 1, i)), w = i + 1;\n\t}\n\tsort(v.begin(), v.end());\n\tint ret = 0;\n\tfor (int i = 0; i <= v.size() / 2; i++) ret += v[i];\n\treturn ret;\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tcout << calc(0, s.size()) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "import std.string;\nimport std.algorithm;\nimport std.math;\nimport std.array;\nimport std.format;\nimport std.range;\nimport std.stdio;\nimport std.conv;\n\nstruct Node\n{\n    size_t value;\n    Node*[] childs;\n\n    static\n    Node* parse(string str)\n    {\n        Node* dst = new Node;\n        size_t cnt;\n        foreach(e; str) if(e == '[') ++cnt; else break;\n        if(cnt == 1){\n            dst.value = str[1 .. $-1].to!uint;\n            return dst;\n        }else{\n            size_t s, c;\n            foreach(i, e; str){\n                if(c == 1) s = i;\n                if(e == '[') {++c; if(c == 1) s = i;};\n                if(e == ']') {--c; if(c == 1) dst.childs ~= parse(str[s .. i+1]); };\n            }\n        }\n\n        return dst;\n    }\n\n    string toString()\n    {\n        if(childs.length == 0) return '[' ~ value.to!string ~ ']';\n        else{\n            auto app = appender!string();\n            app.put('[');\n            foreach(e; childs)\n                app.put(e.toString());\n            app.put(']');\n            return app.data;\n        }\n    }\n\n    size_t query()\n    {\n        if(childs.length == 0) return (value + 1)/2;\n        else{\n            int[] vs;\n            foreach(e; childs) vs ~= e.query;\n            vs.sort();\n            vs = vs[0 .. ($+1)/2];\n            return vs.sum;\n        }\n    }\n}\n\n\nvoid main()\n{\n    foreach(i; 0 .. readln().chomp().to!size_t){\n        writeln(Node.parse(readln().chomp()).query);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <deque>\n#include <stack>\n\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    char c;\n    stack<char> st;\n    for(int i = 0; i < n; i++){\n        cin >> c;\n        st.push(c);\n        vector<int> v, vote;\n        while(!st.empty()){\n            cin >> c;\n            if(c != ']') st.push(c);\n            else {\n                int keta = 1;\n                int num = 0;\n                while(st.top() != '['){\n                    num += keta * ((0 - '0') + st.top());\n                    keta = keta * 10;\n                    st.pop();\n                }\n                if(num != 0) {\n                    v.push_back(num);\n                    vote.push_back(num/2 + 1);\n                }\n                else {\n                    v.push_back(num);\n                    vote.push_back(num);\n                }\n                st.pop();\n            }\n        }\n        vector<int> v_sort;\n        vector<int> v_num;\n        deque<int> q_num;\n        for(int j = 0; j < v.size(); j++){\n            if(vote[j] != 0){\n                v_sort.push_back(vote[j]);\n            }\n            else {\n                sort(v_sort.begin(), v_sort.end());\n                int x = 0;\n                for(int k = 0; k < v_sort.size() / 2 + v_sort.size()%2; k++){\n                    x += v_sort[k];\n                }\n                v_num.push_back(x);\n                sort(v_num.begin(), v_num.end());\n                for(int l = 0; l < v_num.size(); l++){\n                        q_num.push_back(v_num[l]);\n                }\n\n                v_sort.clear();\n                v_num.clear();\n            }\n        }\n        vector<int> vec;\n        deque<int> q2;\n        int b = -1;\n        while(q_num.size() != 1 && q_num.front() != 0){\n            while(!q_num.empty()){\n                int n = q_num.front();\n                q_num.pop_front();\n                if(n != 0) vec.push_back(n);\n                if(b != 0 && n == 0){\n                    sort(vec.begin(), vec.end());\n                    int m = 0;\n                    for(int l = 0; l < vec.size() / 2 + 1; l++){\n                        m += vec[l];\n                    }\n                    vec.clear();\n                    q2.push_back(m);\n                }\n                if(b == 0 && n == 0) q2.push_back(0);\n                b = n;\n            }\n            q_num = q2;\n            q2.clear();\n        }\n        cout << q_num.front();\n        cout << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\nusing namespace std;\n\nstring s;\nvector<int> G[100010];\nint d[100010];\nint ver = 0;\nint idx = 0;\n\nvoid add(int now, int par){\n    int num = 0;\n    if(par != -1) G[par].push_back(now);\n    while(1){\n        if(s[idx] == '['){\n            ver++;\n            idx++;\n            add(ver, now);\n        }else if(isdigit(s[idx])){\n            num = num * 10 + s[idx] - '0';\n            idx++;\n        }else if(s[idx] == ']'){\n            if(num != 0){\n                d[now] = (num + 1) / 2;\n            }\n            idx++;\n            break;\n        }\n    }\n}\n\nint dfs(int now, int pre){\n    if(d[now] != 0) return d[now];\n    int res = 0;\n    vector<int> cd;\n    rep(i, 0, G[now].size()){\n        int nxt = G[now][i];\n        int tmp = dfs(nxt, now);\n        cd.push_back(tmp);\n    }\n    sort(cd.begin(), cd.end());\n    rep(i, 0, (cd.size() + 1) / 2){\n        res += cd[i];\n    }\n    return d[now] = res;\n}\n\nint main() {\n    int tc;\n    cin >> tc;\n    rep(ij, 0, tc){\n        cin >> s;\n        rep(i, 0, 100010) G[i].clear();\n        memset(d, 0, sizeof(d));\n        ver = 0; idx = 1;\n        add(0, -1);\n        int ans = dfs(0, -1);\n        cout << ans << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "// written by @kakira9618\n// problem: \n\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\n#define mp       make_pair\n#define all(x)   (x).begin(),(x).end()\nusing namespace std;\n  \ntypedef    pair<int, int>      pii;\n\npii dfs(string &s, int now) {\n    if (s[now] == '[') {\n        vector<int> chiku;\n        while(s[now] == '[') {\n            pii ret = dfs(s, now + 1);\n            now = ret.first;\n            chiku.push_back(ret.second);\n        }\n        sort(all(chiku));\n        int sum = 0;\n        for(unsigned i = 0; i < chiku.size() / 2 + 1; i++) {\n            sum += chiku[i];\n        }\n        return mp(now + 1, sum);\n    } else if (s[now] != ']') {\n        int num = 0;\n        while(isdigit(s[now])) {\n            num *= 10;\n            num += s[now] - '0';\n            now++;\n        }\n        return mp(now + 1, num / 2 + 1);\n    }\n    return mp(s.size(), -1);\n}\n\nvoid solve(string &s) {\n    pii ret = dfs(s, 0);\n    cout << ret.second << endl;\n}\n\nint main() {\n    int T;\n    cin >> T;\n    for(int t = 0; t < T; t++) {\n        string s;\n        cin >> s;\n        solve(s);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <set>\n#include <queue>\n#include <vector>\n#include <stdlib.h>\n#include <algorithm>\n\n#define rep(i,s,t) for(int i=s;i<t;i++)\n#define mp(a,b) make_pair(a,b)\n#define mii map<int,int>\n\nusing namespace std;\n\n// 木構造で各選挙区の親子関係を保持する\nclass tree{\n\tpublic:\n\t\t//その選挙区で必要となる過半数の票数\n\t\tint value;\n\t\t//その選挙区がどの階層なのか\n\t\tint lv;\n\t\t//その選挙区よりひとつうえの選挙区\n\t\ttree* parent;\n\t\t//その選曲よりひとつしたの選挙区\n\t\tvector<tree*> child;\n\t\ttree(){value=0;lv=0;}\n};\n\nint main(void){\n\n\t//入力 n\n\tint n;\n\t//データセットは1行で取得\n\tstring str;\n\tcin >> n;\n\t//n回のデータセットに対して\n\trep(rnd,0,n){\n\t\t//各lv(第lv段目の選挙区)ごとの\n\t\t//選挙区の木のノードのポインタを保持するmap\n\t\tmap<int,vector<tree*> > lvs;\n\t\t//注目点pをNULLで初期化\n\t\ttree *p=NULL;\n\t\t//入力を1行で読み込む\n\t\tcin >> str;\n\n\t\t//一行で読み込んだ区割り表を1文字ずつ走査するため，\n\t\t//選挙区の有権者数も当然1桁ずつしか読み込めない，\n\t\t//そこで第1段階の選挙区の有権者数を保持するための\n\t\t//文字列を用意\n\t\tstring numstr;\n\t\t//木構造の高さを保持する変数\n\t\tint lv=0;\n\t\t//木の最大の高さを保持する変数\n\t\tint maxlv=0;\n\t\t//1行の文字列に対して1文字ずつ\n\t\trep(i,0,str.length()){\n\t\t\t//文字を取得し,文字が'['か']'か数字を調べる\n\t\t\tchar c=str.at(i);\n\t\t\tswitch(c){\n\t\t\t\tcase '[':{//'['の場合\n\t\t\t\t\t//木の高さを一つ上げ，最大の木の高さを更新する\n\t\t\t\t\tlv++;\n\t\t\t\t\tif(maxlv<lv) maxlv=lv;\n\t\t\t\t\t//木の高さが上がったため，新しい高さのノードを生成\n\t\t\t\t\ttree *newnode = new tree();\n\t\t\t\t\t//その点の親とレベルを与える．\n\t\t\t\t\t(*newnode).parent=p;\n\t\t\t\t\t(*newnode).lv=lv;\n\n\t\t\t\t\t//lv番目の木の高さのノードを覚えておくための\n\t\t\t\t\t//mapにポインタを追加\n\t\t\t\t\tlvs[lv].push_back(newnode);\n\t\t\t\t\t\n\t\t\t\t\t//そのノードの親に自らを子として追加\n\t\t\t\t\tif(p!=NULL)\n\t\t\t\t\t\t(*p).child.push_back(newnode);\n\t\t\t\t\t//注目点を新しいレベルのノードに変更する\n\t\t\t\t\tp=newnode;\n\t\t\t\t\t//数値を保持する文字列を空白で初期化する\n\t\t\t\t\tnumstr=\"\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase ']':{//']'の場合 木の階層がひとつ下る\n\t\t\t\t\t//数値保持の文字列が空でない場合\n\t\t\t\t\tif(numstr.compare(\"\")!=0){\n\t\t\t\t\t\t//文字列をint型に変換し，\n\t\t\t\t\t\tint val = atoi(numstr.c_str());\n\t\t\t\t\t\t//その値の過半数を注目点pの値に代入する\n\t\t\t\t\t\t(*p).value=(val+1)/2;\n\t\t\t\t\t}\n\t\t\t\t\t//木の階層がひとつ下るため，\n\t\t\t\t\t//注目点pをpの親のポインタに更新\n\t\t\t\t\tp=(*p).parent;\n\t\t\t\t\t//階層をひとつ下げ\n\t\t\t\t\tlv--;\n\t\t\t\t\t//数値保持の変数を空白で初期化する\n\t\t\t\t\tnumstr=\"\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:{//数字が入力された場合\n\t\t\t\t\t//数値保持の変数の末尾に新しい数字を足す\n\t\t\t\t\tnumstr+=c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//木の生成が完了し，葉のノードにのみ\n\t\t//値が代入された状態となっているため，各節点の値を更新する\n\t\t//各節点にはその選挙区で必要となる過半数の値が代入される\n\t\t//葉のノードは見る必要がないので葉の一つ前の選挙区について\n\t\trep(i,0,maxlv-1){\n\t\t\t//iを逆転させて葉に近い方からレベルを下げて見ていく\n\t\t\tint j=maxlv-1-i;\n\t\t\t//そのレベルの選挙区の集合を取得する\n\t\t\tvector<tree*> ll=lvs[j];\n\n\t\t\t//選挙区すべてについて\n\t\t\trep(k,0,ll.size()){\n\t\t\t\t//その選挙区が必要とする過半数の票数を保持する変数\n\t\t\t\tint valval=0;\n\t\t\t\t//その選挙区のポインタを取得\n\t\t\t\ttree *q=ll[k];\n\n\t\t\t\t//その下の選挙区の票数を保持するvector\n\t\t\t\tvector<int> values;\n\t\t\t\t//その選挙区の下の選挙区のリストを取得\n\t\t\t\tvector<tree*> ch=(*q).child;\n\t\t\t\t//その選挙区の下の選挙区の過半数票数をリストに追加する\n\t\t\t\trep(l,0,ch.size())\n\t\t\t\t\tvalues.push_back((*ch[l]).value);\n\t\t\t\t//票数をソートし\n\t\t\t\tsort(values.begin(),values.end());\n\t\t\t\t//少ない票数から順に過半数分だけ数え上げ，足していく\n\t\t\t\trep(l,0,(values.size()+1)/2)\n\t\t\t\t\tvalval+=values[l];\n\t\t\t\t//足された票数がその選曲で必要となる過半数票数になる\n\t\t\t\t(*q).value=valval;\n\t\t\t}\n\t\t}\n\t\t//葉から順位上がっていき得られた最終的に必要なlv=1(最終選挙区)\n\t\t//での票数を出力\n\t\tcout << (*(*(lvs[1].begin()))).value << endl;\n\n\t\t//動的確保したノードを削除していく\n\t\trep(i,1,maxlv+1){\n\t\t\tvector<tree*> ll=lvs[i];\n\t\t\trep(k,0,ll.size()){\n\t\t\t\ttree *q=ll[k];\n\t\t\t\tdelete q;\n\t\t\t}\n\t\t}\n\t}\n\t\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include <list>\n#include<stack>\n#include<queue>\n#include <vector>\n#include <set>\n#include<algorithm>\n#include<math.h>\n#include<stdlib.h>\n#include<string>\n#include <functional>\n#include<fstream>\n#include<numeric>\n\n#define FOR(k,m,n) for(int (k)=(m);(k)<(n);(k)++)\n#define REP(i,n) FOR((i),0,(n))\n#define LL long long\n#define CLR(a) memset((a),0,sizeof(a))\n#define SZ(x) (int((x).size()))\n#define WAITING(str) int str;std::cin>>str;\n#define DEBUGING(str) cout<<str<<endl\nusing namespace std;\n\nconst LL MOD = 1000000007;// 10^9+7\nconst int INF = (1 << 30);\n\n\n\n//計算\nLL calc(const string& s)\n{\n\tstack<vector<LL>> cand;\n\tvector<LL> now;\n\n\tstring num;\n\tfor (char c : s) {\n\t\tswitch (c) {\n\t\tcase '[':\n\t\t\tcand.push(vector<LL>());\n\t\t\tbreak;\n\t\tcase ']':\n\t\t\tnow = cand.top(); cand.pop();\n\t\t\tif (now.empty()) {\n\t\t\t\tcand.top().push_back((stoi(num) + 1) / 2);\n\t\t\t\tnum = \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLL res = 0;\n\t\t\t\tsort(now.begin(), now.end());\n\t\t\t\tREP(i, (now.size() + 1) / 2) {\n\t\t\t\t\tres += now[i];\n\t\t\t\t}\n\t\t\t\tif (cand.empty())return res;\n\t\t\t\telse {\n\t\t\t\t\tcand.top().push_back(res);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tnum += c;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n//デバッグ\nvoid debug()\n{\n\tint N;\n\tcin>>N;\n}\n\n\n//メイン関数\nint main()\n{\n\tint n;\n\tcin >> n;\n\tREP(i, n) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tcout << calc(s) << endl;\n\t}\n\t//debug();\n\t\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <stdlib.h>\n#include <stdio.h>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <limits>\n#include <fstream>\nusing namespace std;\n#define FOR(I,A,B) for(int I = (A); I < (B); ++I)\n#define CLR(mat) memset(mat, 0, sizeof(mat))\ntypedef long long ll;\nint idx;\nstring s;\nint rec(){\n  idx++;\n  bool isNumber = false;\n  if(s[idx]!='[' && s[idx]!=']'){\n    string t = \"\";\n    while(s[idx]!='[' && s[idx]!=']'){\n      t += s[idx++];\n    }\n    idx++;\n    return stoi(t) / 2 + 1;\n  }\n  vector<int> v;\n  while(s[idx]!=']'){\n    v.push_back(rec());\n  }\n  sort(v.begin(), v.end());\n  int ret = 0;\n  FOR(i, 0, v.size() / 2 + 1){\n    ret += v[i];\n  }\n  idx++;\n  return ret;\n}\nint main()\n{\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  FOR(i,0,n){\n    cin >> s;\n    idx = 0;\n    cout << rec() << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cassert>\n#include <cctype>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nenum { Leaf, Node };\n\nstruct Stage {\n    int type;\n    int required_vote;\n\n    union {\n        int n;\n        vector<Stage*>* childs;\n    } u;\n};\n\nbool comp(const Stage* l, const Stage* r) {\n    return l->required_vote < r->required_vote;\n}\n\nchar S[10002];\n\nStage* parse(char* s, char** next) {\n    assert(s[0] == '[');\n    if (isdigit(s[1])) {\n        int n = 0;\n\n        int i = 1;\n        for (; isdigit(s[i]); i++) {\n            n *= 10;\n            n += (int)(s[i] - '0');\n        }\n        assert(s[i] == ']');\n\n        *next = &s[i + 1];\n\n        Stage* r = new Stage;\n        r->type = Leaf;\n        r->u.n = n;\n\n        return r;\n    } else if (s[1] == '[') {\n        ++s;\n\n        Stage* r = new Stage;\n        r->type = Node;\n        r->u.childs = new vector<Stage*>;\n\n        vector<Stage*> &childs = *(r->u.childs);\n\n        for (; *s != ']'; ) {\n            assert(*s == '[');\n\n            char *n;\n            Stage* c = parse(s, &n);\n            childs.push_back(c);\n\n            s = n;\n        }\n\n        *next = s + 1;\n\n        return r;\n    }\n\n    assert(false);\n    return 0;\n}\n\nint more_than_half(int i) {\n    return i / 2 + 1;\n}\n\nvoid calc(Stage* s) {\n    if (s->type == Leaf) {\n        s->required_vote = more_than_half(s->u.n);\n    } else if (s->type == Node) {\n        vector<Stage*>& v = *(s->u.childs);\n\n        for (int i = 0; i < (int)v.size(); i++) {\n            calc(v[i]);\n        }\n\n        sort(v.begin(), v.end(), comp);\n\n        int r = 0;\n        for (int i = 0; i < more_than_half(v.size()); i++) {\n            r += v[i]->required_vote;\n        }\n\n        s->required_vote = r;\n    }\n}\n\nvoid cleanup(Stage* s) {\n    if (s->type == Leaf) {\n        delete s;\n    } else if (s->type == Node) {\n        vector<Stage*>& v = *(s->u.childs);\n\n        for (int i = 0; i < (int)v.size(); i++) {\n            cleanup(v[i]);\n        }\n\n        delete s->u.childs;\n        delete s;\n    }\n}\n\nint main() {\n    int n;\n    char ns[100];\n    fgets(ns, 99, stdin);\n    n = atoi(ns);\n\n    for (int zz = 0; zz < n; zz++) {\n        fgets(S, 10001, stdin);\n        char* dummy;\n        Stage* node = parse(S, &dummy);\n\n        calc(node);\n\n        printf(\"%d\\n\", node->required_vote);\n\n        cleanup(node);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n//#include <boost/multiprecision/cpp_int.hpp>\n//typedef boost::multiprecision::cpp_int ll;\ntypedef long double dd;\n#define i_7 (ll)(1E9+7)\n//#define i_7 998244353\n#define i_5 i_7-2\nll mod(ll a){\n    ll c=a%i_7;\n    if(c>=0)return c;\n    return c+i_7;\n}\ntypedef pair<ll,ll> l_l;\nll inf=(ll)1E17;\n\n#define rep(i,l,r) for(ll i=l;i<=r;i++)\n#define pb push_back\nll max(ll a,ll b){if(a<b)return b;else return a;}\nll min(ll a,ll b){if(a>b)return b;else return a;}\nvoid Max(ll &pos,ll val){pos=max(pos,val);}//Max(dp[n],dp[n-1]);\nvoid Min(ll &pos,ll val){pos=min(pos,val);}\nvoid Add(ll &pos,ll val){pos=mod(pos+val);}\ndd EPS=1E-9;\n#define fastio ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n///////////////////////////////////////\n\ntypedef string::const_iterator State;\n\nll num(State &begin){\n    ll res=0;\n    while(isdigit(*begin)){\n        res*=10;\n        res+=*begin-'0';\n        begin++;\n    }\n    return res/2+1;\n}\nll expr(State &begin){\n    if(*begin=='['){\n        vector<ll>v;\n        begin++;\n        while(*begin!=']'){\n            ll c=expr(begin);\n            v.pb(c);\n        }\n        begin++;\n        sort(v.begin(),v.end());\n        ll ns=v.size();\n        ll res=0;\n        rep(i,0,ns/2){\n            res+=v[i];\n        }\n        return res;\n    }else{\n        return num(begin);\n    }\n}\n\nbool anspro(){\n    string s;cin>>s;\n    State b=s.begin();\n    cout<<expr(b)<<endl;\n    \n    return 0;\n}\n\nint main(){fastio\n    ll q;cin>>q;\n    while(q--){\n        anspro();\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <iostream>\n#include <map>\n#include <set>\n#include <list>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <queue>\n#include <iomanip>\n\n#define SIZE 101\n#define INF 100000000\n\nusing namespace std;\n\n\ntypedef pair<int, int> Pa;\n\nstring s;\nchar c[100];\nint index = 0;\n\nint func(){\n\tvector<int> v;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (isdigit(s[index])) {\n\t\t\tint k = 0;\n\t\t\twhile (isdigit(s[index])) {\n\t\t\t\tc[k] = s[index];\n\t\t\t\tk++;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\t/*for (int j = 0; j < 100; j++) {\n\t\t\t\tcerr << c[k];\n\t\t\t}*/\n\n\t\t\tc[k] = '\\0';\n\n\t\t\tv.push_back((atoi(c) + 1) / 2);\n\n\t\t} else if (s[index] == '[') {\n\t\t\tindex++;\n\t\t\tv.push_back(func());\n\n\t\t} else if (s[index] == ']') {\n\t\t\tvector<int> v2 = v;\n\t\t\tsort(v2.begin(), v2.end());\n\n\t\t\tint res = 0;\n\t\t\tfor (int i = 0; i <= v.size() / 2; i++) {\n\t\t\t\tres += v2[i];\n\t\t\t}\n\t\t\tindex++;\n\t\t\treturn (res);\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tindex = 1;\n\t\tint res = func();\n\t\tcout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nint election(string str){\n  if(str[1]>='0' && str[1]<='9'){\n    return stoi(str.substr(1,str.size()-2))/2+1;\n  }\n  vector<int> vec;\n  int s=1,e;\n  while(str[s]!=']'){\n    int depth=1;\n    for(e=s+1; depth>0; e++){\n      if(str[e]=='[') depth++;\n      if(str[e]==']') depth--;\n    }\n    vec.push_back( election(str.substr(s,e-s)) );\n    s=e;\n  }\n  sort(vec.begin(), vec.end());\n  int ret=0;\n  for(int i=0; i<(int)vec.size()/2+1; i++){\n    ret += vec[i];\n  }\n  return ret;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  string str;\n  for(int i=0; i<n; i++){\n    cin >> str;\n    cout << election(str) << endl;\n  }   \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<int(n);++i)\n#define all(a) a.begin(),a.end()\n\n// T := [T][T]... | num \n\nint solve(string &s, int &i){\n    vector<int> v;\n    if(isdigit(s[i])){\n        int num = 0;\n        while(isdigit(s[i])){\n            num = num*10 + s[i]-'0';\n            i++;\n        }\n        return num+1;\n    }\n    while(s[i] == '['){\n        i++; // [\n        v.push_back(solve(s,i));\n        i++; // ]\n    }\n\n    sort(all(v));\n    int n = v.size(), sum = 0;\n    rep(k,(n+1)/2){\n        sum += v[k];\n    }\n    return sum;\n}\n\nint main(void){\n    int T;\n    cin>>T;\n    rep(_,T){\n        string s;\n        cin>>s;\n        int index = 0;\n        cout<<(solve(s,index)+1)/2<<endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <functional>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n \nusing namespace std;\n \n#define REP(i,s,e) for(int i=(s); i<(int)(e); i++)\n#define rep(i,n) REP(i, 0, n)\n#define pb push_back\n#define mp make_pair\n#define all(r) (r).begin(),(r).end()\n#define rall(r) (r).rbegin(),(r).rend()\n#define fi first\n#define se second\n#define DBG(X) cout<<\" \"<<#X<<\" : \"<<X<<endl\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef pair<int, int> pii;\n\nconst int INF = 1e9;\nconst double EPS = 1e-8;\nconst int mod = 1e9 + 7;\nconst ll LINF = 1e18;\n\nstruct Input\n{\n\tint n;char c;char str[1024];string s;ll l;double d;\n\tint nextInt(){scanf(\"%d\", &n);return n;}\n\tll nextLong(){scanf(\"%lld\", &l);return l;}\n\tdouble nextDouble(){scanf(\"%lf\", &d);return d;}\n\tchar nextChar(){scanf(\"%c\", &c);return c;}\n\tstring next(){scanf(\"%s\", str);return string(str);}\n\tstring nextLine(){getline(cin, s);return s;}\n};\nInput in;\n\nstring s;\n\nbool isNum(char c){\n\treturn c >= '0' && c<='9';\n}\n\nint calc(int l){\n\t//cout<<\" \"<<l<<endl;\n\tif(isNum(s[l])){\n\t\tint ret = 0;\n\t\twhile(isNum(s[l])){\n\t\t\tret *= 10;\n\t\t\tret += s[l]-'0';\n\t\t\tl++;\n\t\t}\n\t\treturn ret /2 + 1;\n\t}\n\tvector<int> v;\n\tint lv = 0;\n\tfor(int i = l; i < s.size(); i++){\n\t\tif(s[i]=='[') {\n\t\t\tif(lv == 0) v.pb(calc(i + 1));\n\t\t\tlv++;\n\t\t}\n\t\telse if(s[i]==']') lv--;\n\t\tif(lv < 0) break;\n\t}\n\tsort(all(v));\n\tint ret = 0;\n\tassert(v.size()>0);\n\tfor(int i = 0; i < v.size()/2 + 1; i++) ret += v[i];\n\treturn ret;\n}\n\nint main(){\n\tint n = in.nextInt();\n\trep(i, n){\n\t\ts = in.next();\n\t\tcout<<calc(1)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<cstdlib>\n#include<cmath>\n#include<vector>\n#include<list>\n#include<cstdint>\n#include<bits/stdc++.h>\n#include<queue>\n#include<set>\n\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define rep_r(i, n) for(int i = n-1; i >= 0; i--)\n#define rep1(i, n) for(int i = 1; i <= (int)(n); i++)\n#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)\n#define all(x) (x).begin(),(x).end()\n#define SZ(x) ((ll)(x).size())\n#define bit(n) (1LL<<(n))\n#define UNIQUE(v) v.erase( unique(v.begin(), v.end()), v.end() );\n\n#define INF bit(60)\n#define pb push_back\n#define mod 1000000007\n\ntemplate<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }\ntemplate<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }\n\nusing namespace std;\nusing uif=uint_fast64_t;\nusing ll=long long int;\n\nint qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mod;a=1ll*a*a%mod;}while(b>>=1);return ans;}\nint qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}\n\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\n\n\n#define FACSIZE 2002\n\nll invfac[FACSIZE];\nll fac[FACSIZE];\n\nll mod_pow(ll ,ll );\nll mod_add(ll ,ll );\nll mod_mul(ll ,ll );\nll mod_div(ll ,ll );\nvoid make_fact(ll );\nvoid make_invfact(ll );\n\n\n\nint main(void){\n\n  ll n;\n  cin>>n;\n\n  rep(i,n){\n    string s;\n    cin>>s;\n    //stack< > sta;\n    unordered_map<ll,priority_queue< ll,vector<ll>,greater<ll> > > um;\n    um.clear();\n    ll num=0;\n    ll depth=0;\n    for(auto c:s){\n      //cout << c << endl;\n      if(c=='['){\n        depth++;\n      }\n      else if( c>='0' && c<='9' ){\n        num*=10;\n        num+=(ll)( c - '0' );\n      }\n      else if(c==']'){\n        depth--;\n        if(num>0){\n          um[depth].push(num/2+1);\n          num=0;\n        }\n        else{\n          //for(auto q:um[depth+1]) cerr << q << \" \";\n          //cerr << endl;\n          ll half=um[depth+1].size()/2+1;\n          ll vote=0;\n          rep(j,half){\n            auto q=um[depth+1].top();\n            //cerr << q << \" \";\n            um[depth+1].pop();\n            vote+=q;\n          }\n          //cerr << endl;\n          //cerr << \"vote:\"<< vote << endl;\n          um.erase(depth+1);\n          um[depth].push(vote);\n        }\n      }\n    }\n\n    cout << um[0].top() << endl;\n    um.clear();\n    \n  }\n\n  return 0;\n\n}\n\nll mod_pow(ll x,ll r){\n  if(r==0) return 1;\n  else if(r==1) return x%mod;\n  else if(r%2==0){\n    ll t=mod_pow(x,r/2)%mod;\n    return t*t %mod;\n  } \n  else{\n    ll t=mod_pow(x,r/2)%mod;\n    ll k= t*t %mod;\n    return k*x%mod;\n  } \n}\nll mod_add(ll a,ll b){\n  return (a+b)%mod;\n}\n\nll mod_mul(ll a,ll b){\n  return (a*b)%mod;\n}\n\nll mod_div(ll a,ll b){\n  return mod_mul(a,mod_pow(b,mod-2));\n}\n\nvoid make_fact(ll n){\n  fac[0]=1;\n  rep(i,n){\n    fac[i+1]=mod_mul(fac[i],i+1);\n  }  \n}\n\nvoid make_invfact(ll n){\n  invfac[n]= mod_pow( fac[n] ,mod-2);\n  for(int i=n-1;i>=0;i--){\n    invfac[i]=mod_mul(invfac[i+1],i+1);\n  }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define _ ios_base::sync_with_stdio(0);cin.tie(0);\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n\nusing namespace std;\n\nstruct node{\n  node():parent(NULL),minimum(0){}\n  node(node* p):parent(p),minimum(0){}\n  vector<node*> children;\n  node* parent;\n  int minimum;\n};\nvector<node> nodes;\n\nint dfs(node* p){\n  if(p->children.size()==0){\n    //    cout<<p->minimum<<endl;\n    return p->minimum/2+1;\n  }\n  vector<int> mins;\n  for(node* q:p->children)\n    mins.push_back(dfs(q));\n  sort(mins.begin(),mins.end());\n  return accumulate(mins.begin(),next(mins.begin(),mins.size()/2+1),0);\n}\n\nvoid solve(){\n  string s; cin>>s;\n  nodes.clear();\n  nodes.reserve(5000);\n  node* p=NULL;\n  int num=0;\n  for(char c:s){\n    if(c=='['){\n      nodes.push_back(node(p));\n      node* child = &(*nodes.rbegin());\n      if(p!=NULL)\n\tp->children.push_back(child);\n      p=child;\n    }else if(c==']'){\n      p->minimum=num;\n      p=p->parent;\n      num=0;\n    }else{\n      num=num*10+(c-'0');\n    }\n  }\n  cout<<dfs(&nodes[0])<<endl;\n}\n\nint main(){ _;\n  int n;cin>>n;\n  REP(i,n) solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring s;\nstring::iterator it;\n\nint solve(){\n  int res = 0;\n  ++it;\n  if(*it == '['){\n    vector<int> v;\n    while(*it == '['){\n      v.push_back(solve());\n      ++it;\n    }\n    sort(v.begin(),v.end());\n    for(int i = 0 ; i <= (int)v.size()/2 ; i++){\n      res += v[i];\n    }\n  }else{\n    while(isdigit(*it)){\n      res *= 10;\n      res += (*it - '0');\n      ++it;\n    }\n    (res /= 2)++;\n  }\n  return res;\n}\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    cin >> s;\n    it = s.begin();\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,k,n) for(int i = (k); i < (n); i++)\n#define REP(i,n) FOR(i,0,n)\n#define INF 114514810\n#define MOD 1000000007\n#define ALL(a) (a).begin(),(a).end()\n#define ms(m,v) memset(m,v,sizeof(m))\n#define D10  fixed<<setprecision(10) \ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int, int> P;\ntypedef long long ll;\nstruct edge{ int from, to, cost; };\n\nint n;\nstring s;\nint main()\n{\n\tcin >> n;\n\tREP(t, n)\n\t{\n\t\tcin >> s;\n\t\tvi v;\n\t\tREP(i, s.size())\n\t\t{\n\t\t\tif (s[i] == '[') v.push_back(-1);\n\t\t\telse if (s[i] == ']') v.push_back(-2);\n\t\t\telse\n\t\t\t{\n\t\t\t\tint k = i;\n\t\t\t\twhile (s[k+1] != ']') k++;\n\t\t\t\tstring tmp(s, i, k - i + 1);\n\t\t\t\tv.push_back(stoi(tmp));\n\t\t\t\ti += k-i;\n\t\t\t}\n\t\t}\n\t\tREP(i, v.size())\n\t\t{\n\t\t\tif (v[i] > 0) v[i] = v[i] / 2 + 1;\n\t\t}\n\t\tvi buf;\n\t\twhile (1)\n\t\t{\n\t\t\tREP(i, v.size())//使う数のかっこを外す\n\t\t\t{\n\t\t\t\tif (v[i] == -1 && v[i + 1] == -1) buf.push_back(-1);\n\t\t\t\telse if (v[i] == -1) continue;\n\t\t\t\telse if (v[i] == -2) buf.push_back(-2);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbuf.push_back(v[i]);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (buf[0] != -1) break;\n\t\t\tv.clear();\n\t\t\tREP(i, buf.size())\n\t\t\t{\n\t\t\t\tif (buf[i] == -1||buf[i]==-2) v.push_back(buf[i]);\n\t\t\t\tvi tmp;\n\t\t\t\tif (buf[i] != -1 && buf[i] != -2)\n\t\t\t\t{\n\t\t\t\t\twhile (buf[i] != -2)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp.push_back(buf[i]);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tsort(ALL(tmp));\n\t\t\t\t\tint sum = 0;\n\t\t\t\t\tREP(j, tmp.size()/2 + 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tsum += tmp[j];\n\t\t\t\t\t}\n\t\t\t\t\tv.push_back(sum);\n\t\t\t\t\tv.push_back(-2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.clear();\n\t\t}\n\t\tsort(ALL(buf));\n\t\tint ans = 0;\n\t\tREP(i, buf.size() / 2 + 1) ans += buf[i];\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nint num(string &s, int &p)\n{\n\tint res = 0;\n\twhile (isdigit(s[p]))\n\t{\n\t\tres *= 10;\n\t\tres += s[p] - '0';\n\t\tp++;\n\t}\n\treturn res;\n}\n\nint solve(string &s, int &p)\n{\n\tvector<int> v;\n\twhile (p < s.size())\n\t{\n\t\tif (s[p] == '[')\n\t\t{\n\t\t\tp++;\n\t\t\tv.push_back(solve(s, p));\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (num(s, p) + 1) / 2;\n\t\t}\n\t\tp++;\n\t\tif (s[p] == ']')\n\t\t\tbreak;\n\t}\n\tsort(v.begin(), v.end());\n\tint res = 0;\n\tfor (int i = 0; i < (int)(v.size() + 1) / 2; i++)\n\t{\n\t\tres += v[i];\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tint p = 0;\n\t\tint res = solve(s, p);\n\t\tcout << res << endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<vector>\nusing namespace std;\nvector<int> v;\nvoid putv(){\n\tfor(int i=0;i<v.size();i++){\n\t\tif(v[i]==-1)cout<<\"[\";\n\t\tif(v[i]==-2)cout<<\"]\";\n\t\tif(v[i]==0)cout<<\" \";\n\t\tif(v[i]>0)cout<<v[i];\n\t}\n\tcout<<endl;\n}\nint DFS(int x){\n\tvector<int> lis;\n\tint pnt=x,cnt=0;\n\twhile(true){\n\t\tpnt++;\n\t\tif(v[pnt]==-2)break;\n\t\tif(v[pnt]==-1)lis.push_back(DFS(pnt));\n\t\tif(v[pnt]>0)cnt++;\n\t}\n\tv[x]=0,v[pnt]=0;\n\tif(cnt==1){\n\t\t//cout<<\"%\";\n\t\treturn v[pnt-1]/2+1;\n\t}cnt=0;\n\t\n\t//cout<<\"#\"<<x<<\" \";\n\t//for(int i=0;i<lis.size();i++)cout<<lis[i]<<\" \";cout<<endl;\n\t//putv();\n\t\n\tsort(lis.begin(),lis.end());\n\tfor(int i=0;i<=lis.size()/2;i++)cnt+=lis[i];\n\t//cout<<\"&\"<<cnt<<endl;\n\treturn cnt;\n}\nint main(){\n\tint n;cin>>n;string s;\n\t\n\twhile(n--){\n\t\tcin>>s;v.clear();\n\t\tint cnt=0;\n\t\tfor(int i=0;i<s.size();i++){\n\t\t\tif(s[i]=='[')v.push_back(-1);\n\t\t\tif(s[i]==']'){\n\t\t\t\tif(cnt>0)v.push_back(cnt);\n\t\t\t\tv.push_back(-2);cnt=0;\n\t\t\t}\n\t\t\tif(s[i]>='0'&&s[i]<='9'){\n\t\t\t\tcnt*=10;cnt+=s[i]-'0';\n\t\t\t}\n\t\t}\n\t\t//putv();\n\t\tcout<<DFS(0)<<endl;\n\t\t//putv();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include \"bits/stdc++.h\"\nusing namespace std;\n\nstring st;\nint a;\nint getnum() {\n\tint num = 0;\n\twhile (1) {\n\t\tif (st[a] == ']') {\n\t\t\treturn num/2+1;\n\t\t}\n\t\telse {\n\t\t\tnum *= 10;\n\t\t\tnum += st[a] - '0';\n\t\t\ta++;\n\t\t}\n\t}\n\n}\n\nint getans() {\n\tvector<int>nums;\n\twhile (1) {\n\n\t\tif (st[a] == '[') {\n\t\t\ta++;\n\t\t\tnums.push_back(getans());\n\t\t}\n\t\telse if (st[a] == ']') {\n\t\t\tsort(nums.begin(), nums.end());\n\t\t\tint ans = 0;\n\t\t\tfor (int i = 0; i < nums.size() / 2 + 1; ++i) {\n\t\t\t\tans += nums[i];\n\t\t\t}\n\t\t\ta++;\n\t\t\treturn ans;\n\t\t}\n\t\telse {\n\t\t\tnums.push_back(getnum());\n\t\t}\n\t}\n}\n\nint main() {\n\tint n; cin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> st;\n\t\ta = 1;\n\t\tconst int ans(getans());\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstring s;\nint idx;\n\nint number() {\n\tint res = 0;\n\twhile(idx < (int)s.size() && isdigit(s[idx])) {\n\t\tres *= 10;\n\t\tres += s[idx] - '0';\n\t\t++idx;\n\t}\n\n\treturn res;\n}\n\nint rec() {\n\tif(s[idx] == '[') {\n\t\tvector<int> lis;\n\t\twhile(s[idx] == '[') {\n\t\t\t++idx;\n\t\t\tlis.push_back(rec());\n \t\t\t++idx;\n\t\t}\n\n\t\tint res = 0;\n\t\tsort(lis.begin(), lis.end());\n\t\tconst int m = (lis.size() + 1) / 2;\n\t\tfor(int i = 0; i < m; ++i) {\n\t\t\tres += lis[i];\n\t\t}\n\n\t\treturn res;\n\t}\n\telse {\n\t\treturn (number() + 1) / 2;\n\t}\n}\n\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tint n;\n\tcin >> n;\n\n\twhile(n--) {\n\t\tcin >> s;\n\t\tidx = 0;\n\t\tcout << rec() << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n; string s;\nint calc(int l, int r) {\n\tint d = 0, c = 0, w = l;\n\tfor (int i = l; i < r; i++) c += (s[i] == '[' || s[i] == ']' ? 1 : 0);\n\tif (c == 0) return stoi(s.substr(l + 1, r - l - 2));\n\tvector<int> v;\n\tfor (int i = l; i < r; i++) {\n\t\tif (s[i] == '[') d++;\n\t\tif (s[i] == ']') d--;\n\t\tif (d == 0) v.push_back(calc(w + 1, i)), w = i + 1;\n\t}\n\tsort(v.begin(), v.end());\n\tint ret = 0;\n\tfor (int i = 0; i <= v.size() / 2; i++) ret += v[i];\n\treturn ret;\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tcout << calc(0, s.size()) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define rep(n) for(int i=0;i<n;i++)\n#define repp(j, n) for(int j=0;j<n;j++)\n#define reppp(i, m, n) for(int i=m;i<n;i++)\n#define all(c) c.begin(), c.end()\n#define rall(c) c.rbegin(), c.rend()\n#define MOD 1000000007\n#define EPS 1e-9\n \nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll, ll> Pll;\ntypedef pair<int, int> Pii;\nstruct edge{int from, to; ll cost;};\n\nstring s;\nint l;\n\nll solve(){\n    vector<ll> v[5000];\n    int d = 0, i = 0;\n    while(i < l){\n        if(s[i] == '['){\n            d++;\n            v[d].clear();\n            i++;\n        }else if(s[i] == ']'){\n            int m = ((int)v[d].size() + 1) >> 1;\n            ll total = 0;\n            sort(all(v[d]));\n            repp(j, m){\n                total += v[d][j];\n            }\n            d--;\n            v[d].push_back(total);\n            i++;\n        }else{\n            int nl = 1;\n            while(s[i+nl] != '[' && s[i+nl] != ']') nl++;\n            v[d].emplace_back( (stoi(s.substr(i, nl)) + 1) >> 1 );\n            i += nl;\n        }\n    }\n    // rep(3){\n    //     for(ll x: v[i]) cout << x << \" \";\n    //     cout << endl;\n    // }\n    // assert((int)v[0].size() == 1);\n    return v[0][0];\n}\n\nint main(){\n    int n;\n    cin >> n;\n    rep(n){\n        cin >> s;\n        l = (int)s.length();\n        cout << solve() << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Node {\n\tvector<Node> children; // いくつあるかわからない子ノード\n\tint minvote; // この選挙区で勝つために必要な最小限の得票数\n\t\n\tNode() {\n\t\tminvote = 0;\n\t}\n};\n\nint vote(Node node) {\n\tif (node.children.empty()) {\n\t\treturn node.minvote;\n\t}\n\tvector<int> nums;\n\tfor (int i = 0; i < (int)node.children.size(); i++) {\n\t\tif (node.children[i].minvote == 0) {\n\t\t\tnums.push_back(vote(node.children[i]));\n\t\t} else {\n\t\t\tnums.push_back(node.children[i].minvote);\n\t\t}\n\t}\n\tsort(nums.begin(), nums.end());\n\tint minvote = 0;\n\tfor (int i = 0; i < ((int)nums.size() + 1) / 2; i++) {\n\t\tminvote += nums[i];\n\t}\n\tnode.minvote = minvote;\n\t\n\treturn node.minvote;\n}\n\nNode parse(string s) {\n\t/*\n\t木を作って再帰\n\tプロジェクトでやった、XMLパーサと似ているかもしれない\n\t*/\n\tNode root;\n\t//root.parent = NULL;\n\t//root.minvote = 0;\n\tstack<Node> tmp;\n\t//Node currentnode = root;\n\tint num = 0;\n\tfor (int i = 0; i < (int)s.length(); i++) {\n\t\tif (s.at(i) == '[') {\n\t\t\t// startElement\n\t\t\tNode node;\n\t\t\ttmp.push(node);\n\t\t} else if (s.at(i) == ']') {\n\t\t\t// endElement\n\t\t\t// 得票数を計算した後、numを0にリセット\n\t\t\tnum = (num + 1) / 2;\n\t\t\tNode child;\n\t\t\tchild = tmp.top();\n\t\t\ttmp.pop();\n\t\t\tchild.minvote = num;\n\t\t\t//cout << child.minvote << endl;\n\t\t\tif (!tmp.empty()) {\n\t\t\t\tNode parent;\n\t\t\t\tparent = tmp.top();\n\t\t\t\ttmp.pop();\n\t\t\t\tparent.children.push_back(child);\n\t\t\t\ttmp.push(parent);\n\t\t\t} else {\n\t\t\t\troot = child;\n\t\t\t}\n\t\t\t\n\t\t\tnum = 0;\n\t\t} else {\n\t\t\t// characters\n\t\t\t// ここは数字を読んだ時にしか呼び出されないはず\n\t\t\tif (!('0' <= s.at(i) && s.at(i) <= '9')) {\n\t\t\t\tcout << \"入力がおかしいようです。\" << endl;\n\t\t\t}\n\t\t\tnum *= 10;\n\t\t\tnum += s.at(i) - '0';\n\t\t}\n\t}\n\t\n\treturn root;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tNode node = parse(s);\n\t\tcout << vote(node) << endl;\n\t\t//cout << node.children.size() << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define rep(i, n) REP(i, 0, (n))\n#define REP(i, a, n) for(int i=(a); i<(n); i++)\n#define MAJ(x) (((x)+1)/2)\n\nint main() {\n\tint n; cin >> n;\n\trep(i, n) {\n\t    string s; cin >> s;\n\t    vector<int> v, w;\n\t    string buf;\n\t    for(char c: s) {\n\t        if(c == '[') {\n\t            w.push_back(v.size());\n\t        } else if(c == ']') {\n\t            if(!buf.empty()) {\n\t                v.push_back(MAJ(atoi(buf.c_str())));\n\t                buf.clear();\n\t            }\n                int a = w.back(); \n                w.pop_back();\n\t            sort(v.begin()+a, v.end());\n\t            int tmp = accumulate(v.begin()+a, v.begin()+a+MAJ(v.size()-a), 0);\n\t            v.resize(a);\n\t            v.push_back(tmp);\n\t        } else {\n\t            buf.push_back(c);\n\t        }\n\t    }\n\t    cout << v.back() << endl;\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "//#include <bits/stdc++.h>\n#include<iostream>\n#include<stdio.h>\n#include<bitset>\n#include<algorithm>\n#include<vector>\n#include<list>\n#include<queue>\n#include<stack>\n#include<string>\n#include<string.h>\n#include<cmath>\n#include<utility>\n#include<functional>\n#include<map>\n#include<set>\n\n\n#define FOR(i, a, b) for( int i=(a);i<=(b);i++)\n#define RFOR(i, a, b) for( int i=(a);i>=(b);i--)\n#define LFOR(i, a, b) for( long long int i=(a);i<=(b);i++)\n#define LRFOR(i, a, b) for(long long int i=(a);i>=(b);i--)\n#define MOD 1000000007\n#define INF 1000000000 //2000000000\n#define LLINF 1000000000000000000 //9000000000000000000\n#define PI 3.14159265358979\n#define MAXI 7500000\n\nusing namespace std;\ntypedef long long int ll;\ntypedef pair< long long int, long long  int> P;\n\n\nint main(void) {\n\n\tint n;\n\n\tcin >> n;\n\tvector<string> s(n + 1);\n\n\tFOR(i, 1, n) {\n\t\tcin >> s[i];\n\t}\n\n\tFOR(i, 1, n) {\n\t\t\n\t\tint a = 0;\n\t\tint deep = 0;\n\t\tint nowdeep = 0;\n\n\t\tFOR(j, 0, s[i].size() - 1) {\n\t\t\tif (s[i][j] == '[') {\n\t\t\t\tdeep++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvector< priority_queue<int, vector<int>, greater<int> > > que(deep+1);\n\n\t\tbool flag = false;\n\n\t\tFOR(j, 0, s[i].size() - 1) {\n\t\t\tif (s[i][j] == '[') {\n\t\t\t\tnowdeep++;\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\telse if (s[i][j] >= '0'&&s[i][j] <= '9') {\n\t\t\t\ta *= 10;\n\t\t\t\ta += s[i][j] - '0';\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\telse if (s[i][j] == ']') {\n\t\t\t\tif (nowdeep == deep && flag == false) {\n\t\t\t\t\tque[nowdeep].push((a/2)+1);\n\t\t\t\t\ta = 0;\n\t\t\t\t}\n\t\t\t\tif (flag == true) {\n\t\t\t\t\tint size;\n\t\t\t\t\tint z = 0;\n\t\t\t\t\tsize = que[nowdeep + 1].size();\n\t\t\t\t\tFOR(k, 1, (size) / 2 + 1) {\n\t\t\t\t\t\tz += que[nowdeep + 1].top();\n\t\t\t\t\t\tque[nowdeep + 1].pop();\n\t\t\t\t\t\t//cout << z << endl;\n\t\t\t\t\t}\n\t\t\t\t\tque[nowdeep].push(z);\n\t\t\t\t\twhile (!que[nowdeep + 1].empty()) {\n\t\t\t\t\t\tque[nowdeep + 1].pop();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnowdeep--;\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\n\t\tcout << que[1].top() << endl;\n\n\t}\n\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <iostream>\n#include <map>\n#include <set>\n#include <list>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <queue>\n#include <iomanip>\n\n#define SIZE 101\n#define INF 100000000\n\nusing namespace std;\n\n\ntypedef pair<int, int> Pa;\n\nstring s;\nchar c[100];\nint index = 0;\n\nint func(){\n\tvector<int> v;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (isdigit(s[index])) {\n\t\t\tint k = 0;\n\t\t\twhile (isdigit(s[index])) {\n\t\t\t\tc[k] = s[index];\n\t\t\t\tk++;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\t/*for (int j = 0; j < 100; j++) {\n\t\t\t\tcerr << c[k];\n\t\t\t}*/\n\n\t\t\tc[k] = '\\0';\n\n\t\t\tv.push_back((atoi(c) + 1) / 2);\n\n\t\t} else if (s[index] == '[') {\n\t\t\tindex++;\n\t\t\tv.push_back(func());\n\n\t\t} else if (s[index] == ']') {\n\t\t\tvector<int> v2 = v;\n\t\t\tsort(v2.begin(), v2.end());\n\n\t\t\tint res = 0;\n\t\t\tfor (int i = 0; i <= v.size() / 2; i++) {\n\t\t\t\tres += v2[i];\n\t\t\t}\n\t\t\tindex++;\n\t\t\treturn (res);\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tindex = 1;\n\t\tint res = func();\n\t\tcout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stack>\n#include<map>\n#include<string>\n#include<iostream>\n#include<set>\n#include<cmath>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<functional>\n//#define scanf scanf_s\n#define fir first\n#define sec second\n#define mp make_pair\n#define mt make_tuple\n#define pub push_back\nusing namespace std;\ntypedef long long int llint;\nconst llint one = 1;\nconst llint big = (one<<61);\nconst int mod=1000000007;\ninline int gcd(int a,int b) { return b ? gcd(b, a % b) : a; }\nstring mon;\nint it;\nint toku(void){\n\tvector<int> kai;\n\tint ans=0,su=0;\n\twhile(-1){\n\t\tif(mon[it]=='['){ it++;kai.pub(toku()); } else if(mon[it]==']'){\n\t\t\tit++;\n\t\t\tsort(kai.begin(),kai.end());\n\t\t\tfor(su=0;su<(kai.size()+1)/2;su++){\n\t\t\t\tans+=kai[su];\n\t\t\t}\n\t\t\treturn ans;\n\t\t} else {\n\t\t\tsu=0;\n\t\t\twhile(mon[it]!='['&&mon[it]!=']'){ su*=10;su+=mon[it]-'0';it++; }\n\t\t\tkai.pub((su+1)/2);\n\t\t}\n\t}\n\treturn 0;\n}\nvoid solve(void){\n\tmon.clear();\n\tit=0;\n\tcin>>mon;\n\tmon+=\"]\";\n\tprintf(\"%d\\n\",toku());\n}\n\nint main(void){\n\tint Q;\n\tscanf(\"%d\",&Q);\n\tfor(;Q>0;Q--){solve();}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nclass tree {\npublic:\n\tint t_d;\n\tvector<tree> t_child;\n\ttree* t_par;\n\ttree(int d, tree* par);\n\tint solve();\n};\n\ntree::tree(int d, tree* par) {\n\tt_d = d;\n\tt_par = par;\n}\n\nint tree::solve() {\n\tint sz = t_child.size();\n\tif (sz == 0) {\n\t\treturn t_d;\n\t} else {\n\t\tvector<int> v;\n\t\tfor (int i = 0; i < sz; i++) {\n\t\t\tv.push_back((t_child[i]).solve());\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tint c = 0;\n\t\tfor (int i = 0; i < (sz+1)/2; i++) {\n\t\t\tc += v[i];\n\t\t}\n\t\treturn c;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tstring a;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\ttree z(0, NULL);\n\t\ttree* pz = &z;\n\t\tint counter = 0;\n\t\tint sz = a.size();\n\t\tfor (int j = 1; j < sz-1; j++) {\n\t\t\tif (a[j] == '[') {\n\t\t\t\t((*pz).t_child).push_back(tree(0, pz));\n\t\t\t\tint psz = ((*pz).t_child).size();\n\t\t\t\tpz = &((*pz).t_child)[psz-1];\n\t\t\t} else if (a[j] == ']'){\n\t\t\t\tcounter /= 2;\n\t\t\t\tcounter++;\n\t\t\t\tif (((*pz).t_child).size() == 0) {\n\t\t\t\t\t(*pz).t_d = counter;\n\t\t\t\t} \n\t\t\t\tcounter = 0;\n\t\t\t\tpz = (*pz).t_par;\n\t\t\t} else {\n\t\t\t\tcounter *= 10;\n\t\t\t\tcounter += a[j]-'0'; \n\t\t\t}\n\t\t}\n\t\tcout << z.solve() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define INF_LL (int64)1e18\n#define INF (int32)1e9\n#define REP(i, n) for(int64 i = 0;i < (n);i++)\n#define FOR(i, a, b) for(int64 i = (a);i < (b);i++)\n#define all(x) x.begin(),x.end()\n#define fs first\n#define sc second\n\nusing int32 = int_fast32_t;\nusing uint32 = uint_fast32_t;\nusing int64 = int_fast64_t;\nusing uint64 = uint_fast64_t;\nusing PII = pair<int32, int32>;\nusing PLL = pair<int64, int64>;\n\nconst double eps = 1e-10;\n\ntemplate<typename A, typename B>inline void chmin(A &a, B b){if(a > b) a = b;}\ntemplate<typename A, typename B>inline void chmax(A &a, B b){if(a < b) a = b;}\n\ntemplate<typename T>\nvector<T> make_v(size_t a){return vector<T>(a);}\n\ntemplate<typename T,typename... Ts>\nauto make_v(size_t a,Ts... ts){\n  return vector<decltype(make_v<T>(ts...))>(a,make_v<T>(ts...));\n}\n\ntemplate<typename T,typename U,typename... V>\ntypename enable_if<is_same<T, U>::value!=0>::type\nfill_v(U &u,const V... v){u=U(v...);}\n\ntemplate<typename T,typename U,typename... V>\ntypename enable_if<is_same<T, U>::value==0>::type\nfill_v(U &u,const V... v){\n  for(auto &e:u) fill_v<T>(e,v...);\n}\n\nint64 solve(const string& s, int64& p) {\n  p++;\n  if (isdigit(s[p])) {\n    int64 res = 0;\n    while (isdigit(s[p])) {\n      res = (res * 10) + (s[p++] - '0');\n    }\n    p++;\n    return (res+1)/2;\n  }\n  vector<int64> v;\n  while (s[p] != ']') {\n    v.push_back(solve(s, p));\n  }\n  sort(all(v));\n  int64 res = 0;\n  REP(i, v.size()/2+1) res += v[i];\n  p++;\n  return res;\n}\n\nint main(void) {\n  int64 T;\n  cin >> T;\n  REP(_, T) {\n    string s;\n    cin >> s;\n    int64 p = 0;\n    cout << solve(s, p) << endl;\n  }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n#include <fstream>\n#include <cassert>\nusing namespace std;\n\n//common\ntypedef long long i64,ll;\n\n#define BR \"\\n\"\n#define ALL(c) (c).begin(),(c).end()\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define FOR(i,l,r) for(int i=(l);i<(int)(r);++i)\n#define EACH(it,o) for(auto it = (o).begin(); it != (o).end(); ++it)\n#define IN(l,v,r) ((l)<=(v) && (v)<(r))\n\n//debug\n#ifdef NDEBUG\n#define DUMP(x)\n#define DUMPLN(x)\n#define DEBUG(x)\n#define DEBUGLN(x)\n#define LINE()\n#define LINELN()\n#define CHECK(exp,act)\n#define STOP(e)\n#else\n#define DUMP(x)  cerr << #x << \" = \" << (x)\n#define DUMPLN(x)  DUMP(x) <<endl\n#define DEBUG(x) DUMP(x) << LINE() << \" \" << __FILE__\n#define DEBUGLN(x) DEBUG(x)<<endl\n#define LINE()    cerr<< \" (L\" << __LINE__ << \")\"\n#define LINELN()    LINE()<<endl\n#define CHECK(exp,act)  if(exp!=act){DUMPLN(exp);DEBUGLN(act);}\n#define STOP(e)  CHECK(e,true);if(!(e)) exit(1);\n#endif\n\ntemplate<class T> inline string toString(const vector<T>& x) {\n\tstringstream ss;\n\tREP(i,x.size()){\n\t\tif(i!=0)ss<<\" \";\n\t\tss<< x[i];\n\t}\n\treturn ss.str();\n}\n\ntemplate<class T> inline string toString(const vector<vector<T> >& map) {\n\tstringstream ss;\n\tREP(i,map.size()){\n\t\tif(i!=0)ss<<BR;\n\t\tss<< toString(map[i]);\n\t}\n\treturn ss.str();\n}\ntemplate<class K,class V>  string toString(map<K,V>& x) {\n\tstring res;stringstream ss;\n\tfor(auto& p:x)ss<< p.first<<\":\" << p.second<<\" \";\n\treturn ss.str();\n}\n\nstring BITtoString(int bit){\n    stringstream ss;\n    while(bit!=0){ss<<(bit%2);bit/=2;}\n    string res=ss.str();reverse(ALL(res));\n    return res;\n}\n\ntemplate<typename T,typename V> inline T pmod(T v,V MOD){\n\treturn (v%MOD+MOD)%MOD;\n}\n\n\nint M,T,P,R;\nclass Team{\npublic:\n\tint id;int sc;\n\tvector<int> wts;\n\tint time;\n\tTeam(int id,int sc,int time):id(id),sc(sc),time(time){\n\t\twts=vector<int>(P);\n\t}\n\n\tbool operator < (const Team& r) const{\n\t\tif(sc!=r.sc)return sc<r.sc;\n\t\telse if(time!=r.time)return time>r.time;\n\t\treturn id<r.id;\n\t}\n\n\tbool operator > (const Team& r) const{\n\t\tif(sc!=r.sc)return sc>r.sc;\n\t\telse if(time!=r.time)return time<r.time;\n\t\treturn id>r.id;\n\t}\n};\n\nclass Main{\npublic:\n\t\n\ttypedef string::const_iterator Cursor;\n\n\tll parse(Cursor &c){\n\t\tif(*c=='['){\n\t\t\tc++;// [\n\t\t\tvector<ll> vs;\n\t\t\twhile(*c!=']'){\n\t\t\t\tvs.push_back(parse(c));\n\t\t\t}\n\t\t\tc++; // ]\n\t\t\tsort(ALL(vs));\n\t\t\tint N=(1+vs.size())/2;\n\t\t\tll res=0;REP(i,N)res+=vs[i];\n\t\t\treturn res;\n\t\t}else{\n\t\t\tint v=number(c);\n\t\t\treturn (1+v)/2;\t\t\t\n\t\t}\n\t}\n\n\tint number(Cursor &c){\n\t\tstringstream ss;\n\t\twhile(isdigit(*c)){\n\t\t\tss << *c;\n\t\t\tc++;\n\t\t}\n\t\tint ret;\n\t\tss >> ret;\n\t\treturn ret;\n\t}\n\n\n\tvoid run(){\n\t\tint Q;cin >> Q;\n\t\tREP(q,Q){\n\t\t\tstring str;cin >> str;\n\t\t\tCursor c=str.begin();\n\t\t\tcout << parse(c)<<endl;\n\t\t}\n\t}\n};\n\n int main(){\n\t//ios::sync_with_stdio(false);\n \tMain().run();\n \treturn 0;\n }"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nvoid down_kaisou(int max_kaisou, queue<pair<int, char> > &que) {\n    queue<pair<int, char> > temp;\n    bool down;\n    while (!que.empty()) {\n        pair<int, char> inque = que.front();\n        //cout << \"HERE : \" <<  inque.first << \" \" << inque.second << endl;\n        if (inque.first != -max_kaisou) {\n            //cout << \"HERE3 : \" <<  inque.first << \" \" << inque.second << endl;\n            temp.push(inque);\n            que.pop();\n        } else {\n            vector<int> v;\n            int num = 0;\n            down = false;\n            while (!down) {\n                pair<int, char> inque2 = que.front();\n                if (inque2.first == -max_kaisou + 1) {\n                    int p_que = 0;\n                    sort(v.begin(), v.end());\n                    for (int k = 0; k < num / 2 + 1; k++) {\n                        p_que += v[k]; \n                    }\n                    // pushテ」ツ?療」ツ?淌」ツ??\n                    temp.push(make_pair(p_que, '0'));\n                    temp.push(make_pair(-max_kaisou, ']'));\n                    down = true;\n                    //cout << \"PQ = \" << p_que << endl;\n                    break;\n                }\n                if (inque2.second == '0') {\n                    v.push_back(inque2.first);\n                    num++;\n                }\n                //cout << \"HERE2 : \" <<  inque2.first << \" \" << inque2.second << endl;\n                que.pop();\n            }\n        }\n    }\n    while (!que.empty()) {\n        pair<int, char> inque2 = que.front();\n        //cout << \"HERE2 : \" <<  inque2.first << \" \" << inque2.second << endl;\n        que.pop(); \n    }\n    que = temp;\n    return;\n}\n\nint main(void) {\n    int n;\n    int max_kaisou;\n    cin >> n;\n    for (int loop = 0; loop < n; loop++) {\n        string s;\n        cin >> s;\n        max_kaisou = 0;\n        queue<pair<int, char> > que;\n        int kaisou = 0;\n        int num = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s[i] == '[') {\n                kaisou++;\n                if (max_kaisou < kaisou) {\n                    max_kaisou = kaisou; \n                }\n                que.push(make_pair(-kaisou, '[')); \n            } else if (s[i] == ']') {\n                num /= 10;\n                if (num != 0) {\n                    num = num / 2 + 1;\n                    que.push(make_pair(num, '0'));\n                    //cout << \"NUM = \" << num << endl;\n                }\n                num = 0;\n                que.push(make_pair(-kaisou, ']')); \n                kaisou--;\n            } else {\n                num += s[i] - '0';    \n                num *= 10;\n            }\n        }\n        while (max_kaisou > 1) {\n            //cout << \"KAISOU = \" << max_kaisou << endl;\n            down_kaisou(max_kaisou, que);\n            max_kaisou--;\n        }\n        while (1) {\n            pair<int, char> inque = que.front();\n            //cout << \"OUT : \" <<  inque.first << \" \" << inque.second << endl;\n            if (inque.second == '0') {\n                cout << que.front().first << endl;\n                break;\n            }\n            que.pop();\n        }\n        /*\n           while (!que.empty()) {\n           cout << que.front().first << \" \" << que.front().second << endl; \n           que.pop();\n           }\n           cout << endl;\n         */\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long int ll;\ntypedef pair<int,int> P;\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define repi(i,a,b) for(int i=int(a);i<(b);i++)\n#define all(x) x.begin(),x.end()\n\nconst ll mod = 1e9+7;\nconst ll INF = 1e9;\n\nll gcd(ll a,ll b){return b?gcd(b,a%b):a;}\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\trep(i,n){\n\t\tstring s;\n\t\tcin>>s;\n\t\tvector<int> a;\n\t\tstring num;\n\t\tfor(auto x:s){\n\t\t\tif(x=='['){\n\t\t\t\ta.push_back(1);\n\t\t\t}else if(x==']'){\n\t\t\t\tif(num!=\"\")\ta.push_back(stoi(num));\n\t\t\t\tnum=\"\";\n\t\t\t\ta.push_back(-1);\n\t\t\t}else{\n\t\t\t\tnum+=x;\n\t\t\t}\n\t\t}\n\t\t// cout<<endl;\n\t\t// rep(i,a.size())cout<<a[i]<<\" \";\n\t\t// cout<<endl;\n\n\t\tstack<int> ss;\n\t\tfor(auto x:a){\n\t\t\tif(x!=-1)ss.push(x);\n\t\t\tif(x==-1){\n\t\t\t\tvector<int> vote;\n\t\t\t\twhile(!ss.empty()){\n\t\t\t\t\tint p = ss.top();ss.pop();\n\t\t\t\t\tif(p==1)break;\n\t\t\t\t\tvote.push_back(p);\n\t\t\t\t}\n\t\t\t\tsort(all(vote));\n\n\t\t\t\t// cout<<endl;\n\t\t\t\t// rep(i,vote.size())cout<<vote[i]<<\" \";\n\t\t\t\t// cout<<endl;\n\n\t\t\t\tif(vote.size()==1) ss.push(vote[0]/2+1);\n\t\t\t\telse{\n\t\t\t\t\tint res=0;\n\t\t\t\t\trep(j,vote.size()/2+1)res+=vote[j];\n\t\t\t\t\tss.push(res);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\twhile(!ss.empty()){\n\t\t\t// cout<<ss.top()<<\" \";\n\t\t\tans+=ss.top(),ss.pop();\n\t\t}\n\t\t// cout<<endl;\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cassert>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint l, c;\nstring s;\n\nint f(){\n    assert(s[c] == '[');\n    c++;\n    if(isdigit(s[c])){\n        int ret = 0;\n        while(isdigit(s[c])){\n            ret = ret * 10 + s[c] - '0';\n            c++;\n        }\n        //cerr << ret << endl;\n        return (ret + 1) / 2;\n    }\n    vector<int> v;\n    while(c < s.size() && s[c] == '['){\n        v.push_back(f());\n        assert(s[c] == ']');\n        c++;\n    }\n    sort(v.begin(), v.end());\n    int sum = 0;\n    for(int i = 0; i < (v.size() + 1) / 2; i++){\n        sum += v[i];\n    }\n    return sum;\n}\n\nint main(){\n    int T;\n    cin >> T;\n    while(T--){\n        cin >> s;\n        l = s.size();\n        c = 0;\n        cout << f() << endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cctype>\n\nusing namespace std;\n\nstring str;\nint p;\n\nbool isopen(int p){\n    return str[p] == '[';\n}\n\nbool isclose(int p){\n    return str[p] == ']';\n}\n\nint getdig(){\n    return str[p++] - '0';\n}\n\nint getnum(){\n    //cout << \"num\" << endl;\n    int n = 0; \n    while(isdigit(str[p])){\n        n*=10;\n        n+=getdig();\n    }\n    return n;\n}\n\nint getfirst(){\n    //cout << \"fir\" << endl;\n    vector<int> fir;\n    p++; // jump [\n    while(isopen(p)){\n        p++; // jump [\n        fir.push_back(getnum());\n        p++; // jump ]\n    }\n    p++; // jump ]\n    int ans = 0;\n    sort(fir.begin() , fir.end());\n    for(int i=0; i<fir.size()/2+1; i++){\n        ans += fir[i]/2+1;\n    }\n    return ans;\n}\n\nint getsecond(){\n    //cout << \"sec\" << endl;\n    if(p+2 < str.size() && isopen(p) && isopen(p+1) && isopen(p+2)){\n        // some firsts\n        p++; // jump [\n        vector<int> sec;\n        while(isopen(p)){\n            sec.push_back(getfirst());\n        }\n        p++; // jump ]\n        int n = 0;\n        sort(sec.begin() , sec.end());\n        for(int i=0; i<sec.size()/2+1; i++){\n            n+=sec[i];\n        }\n        return n;\n    } else {\n        return getfirst();\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    while(n--){\n        p = 0;\n        cin >> str;\n        //cout << str << endl;\n        cout << getsecond() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nint f(const string &s, int i){\n  if(s[i-1]!=']'){\n    int o=1, ret=0;\n    for(int j=i-1; j>=0; j--){\n      if(s[j]=='[') break;\n      else ret+=(s[j]-'0')*o, o*=10;\n    }\n    return (ret-1)/2+1;\n  }\n  int c=0;\n  vector<int> idx;\n  for(int j=i-1; j>=0; j--){\n    if(c<0) break;\n    if(s[j]==']'){\n      if(c==0) idx.push_back(j);\n      c++;\n    }else if(s[j]=='['){\n      c--;\n    }\n  }\n  vector<int> a;\n  for(int j: idx) a.push_back(f(s, j));\n  sort(a.begin(), a.end());\n  int k=((int)a.size()-1)/2+1;\n  int ret=0;\n  rep(j, k) ret+=a[j];\n  return ret;\n}\n\nint main(){\n\n  int n; cin>> n;\n  while(n--){\n    string s; cin>> s;\n    cout<< f(s, (int)(s.size())-1)<< endl;\n  }\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint elect(string div, int idx)\n{\n  if('0' <= div[idx+1] && div[idx+1] <= '9'){\n    int v = 0;\n    for(int i = idx+1; i < div.size(); i++){\n      if('0' <= div[i] && div[i] <= '9') v = v*10 + (div[i] - '0');\n      else break;\n    }\n    return v/2+1;\n  } else {\n    int stage = 0;\n    vector<int> vote;\n    for(int i = idx+1; i < div.size(); i++){\n      if(div[i] == '['){\n\tstage++;\n\tif(stage == 1) vote.push_back(elect(div, i));\n      } else if(div[i] == ']'){\n\tstage--;\n\tif(stage == -1) break;\n      }\n    }\n    sort(vote.begin(), vote.end());\n    int v = 0;\n    for(int i = 0; i <= vote.size()/2; i++) v += vote[i];\n    return v;\n  }\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  while(n--){\n    string div;\n    cin >> div;\n    cout << elect(div, 0) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <map>\n#include <cmath>\n#include <string>\n#include <sstream>\n#include <iomanip>\n#include <complex>\nusing namespace std;\n\n#define ll long long\n#define vvi vector< vector<int> >\n#define vi vector<int>\n#define All(X) X.begin(),X.end()\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n#define pb push_back\n#define pii pair<int,int>\n#define mp make_pair\n#define pi 3.14159265359\n#define shosu(X) fixed << setprecision(X)\nll gcd(ll a,ll b){return b?gcd(b,a%b):a;}\nll lcm(ll a,ll b){return a/gcd(a,b)*b;}\n\nint cur;\nint solve(string str){\n\tcur++;\n    if(str[cur] != '[' && str[cur] != ']'){\n        string t;\n        while(str[cur] != '[' && str[cur] != ']')\n            t += str[cur++];\n        cur++;\n        return stoi(t)/2+1;\n    }\n    vi vote;\n    while(str[cur] != ']'){\n        vote.pb(solve(str));\n    }\n    sort(All(vote));\n    int ret = 0;\n    REP(i,vote.size()/2+1) ret += vote[i];\n    cur++;\n    return ret;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tREP(i,n){\n\t\tstring str;\n\t\tcin >> str;\n\t\tcur = 0;\n\t\tcout << solve(str) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)   FOR(i,0,n)\n#define pb emplace_back\ntypedef long long ll;\ntypedef pair<int,int> pint;\n\nstring s;\nint cur;\nint dfs(int k){\n    int ret=0;\n    if(isdigit(s[cur])){\n        while(isdigit(s[cur])){\n            ret*=10;\n            ret+=s[cur]-'0';\n            ++cur;\n        }\n        return (ret+1)/2;\n    }\n    vector<int> v;\n    while(s[cur]=='['){\n        ++cur;\n        v.pb(dfs(k+1));\n        ++cur;\n    }\n    sort(v.begin(),v.end());\n    int n=(1+v.size())/2;\n    rep(i,n) ret+=v[i];\n    return ret;\n}\nint main(){\n    int n;\n    cin>>n;\n    while(n--){\n        cin>>s;\n        cur=0;\n        cout<<dfs(0)<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define rep(n) for(int i=0;i<n;i++)\n#define repp(j, n) for(int j=0;j<n;j++)\n#define reppp(i, m, n) for(int i=m;i<n;i++)\n#define all(c) c.begin(), c.end()\n#define rall(c) c.rbegin(), c.rend()\n#define MOD 1000000007\n#define EPS 1e-9\n \nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll, ll> Pll;\ntypedef pair<int, int> Pii;\nstruct edge{int from, to; ll cost;};\n\nstring s;\nint l;\n\nll solve(){\n    vector<ll> v[5000];\n    int d = 0, i = 0;\n    while(i < l){\n        if(s[i] == '['){\n            d++;\n            v[d].clear();\n            i++;\n        }else if(s[i] == ']'){\n            int m = ((int)v[d].size() + 1) >> 1;\n            ll total = 0;\n            sort(all(v[d]));\n            repp(j, m){\n                total += v[d][j];\n            }\n            d--;\n            v[d].push_back(total);\n            i++;\n        }else{\n            int nl = 1;\n            while(s[i+nl] != '[' && s[i+nl] != ']') nl++;\n            v[d].emplace_back( (stoi(s.substr(i, nl)) + 1) >> 1 );\n            i += nl;\n        }\n    }\n    // rep(3){\n    //     for(ll x: v[i]) cout << x << \" \";\n    //     cout << endl;\n    // }\n    // assert((int)v[0].size() == 1);\n    return v[0][0];\n}\n\nint main(){\n    int n;\n    cin >> n;\n    rep(n){\n        cin >> s;\n        l = (int)s.length();\n        cout << solve() << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <list>\n\nusing namespace std;\n\n\n\nint min(char* s) {\n\tint n = 0;\n\tint sum = 0, tmpI = 0;\n\tbool flag = true;\n\tlist<int> intlist;\n\n\tfor(int i = 0; s[i] != '\\0'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tint count = 1, j;\n\t\t\tfor(j = 1; count != 0; j++) {\n\t\t\t\tif(s[j + i] == '[') {\n\t\t\t\t\tcount += 1;\n\t\t\t\t} else if(s[j + i] == ']') {\n\t\t\t\t\tcount -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t//cout << \"Weeeei\" << endl;\n\t\t\tchar* tmpS = new char[200];\n\t\t\tstrncpy(tmpS, s+i+1, j-2);\n\t\t\tint x = min(tmpS);\n\t\t\tintlist.push_back( x );\n\t\t\tn++;\n\t\t\tflag = false;\n\t\t\ti = i + j-1;\n\t\t}\n\t}\n\tif(flag) {\n\t\ttmpI = atoi(s);\n\t\t//cout << tmpI << endl;\n\t\treturn tmpI / 2 + 1;\n\t}\n\n\tintlist.sort();\n\n\tlist<int>::iterator itr = intlist.begin();\n\tfor(int i = 0; i < n/2 + 1; itr++, i++) {\n\t\tsum += *itr;\n\t}\n\n\t/*\n\tbool flag = true;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tif(!flag) {\n\t\t\t\tstring s2;\n\t\t\t\tfor(int j = 0; s[j] != ']' && s[j + 1] != ']'; j++) {\n\t\t\t\t\tstrncpy(s2, s+i, j-i+1);\n\t\t\t\t}\n\t\t\t\tmin(s2);\n\t\t\t} else {\n\t\t\t\tn++:\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tint[] input = new input[n];\n\tint j = 0;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\t;\n\t\t} else if(s[i] == ']') {\n\t\t\tinput[j] = tmpI;\n\t\t\ttmpI = 0;\n\t\t} else {\n\t\t\ttmpI = tmpI * 10 + atoi(c);\n\t\t}\n\t}\n\tsort(input);\n\tfor(int i = 0; i < n/2 + 1; i++) {\n\t\tsum = input[i] / 2 + 1;\n\t}\n\t*/\n\n\treturn sum;\n}\n\n\nint main (void) {\n\tint n;\n\tcin >> n;\n\t\n\tcout << \"ok\" << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar* s = new char[200];\n\t\tchar c;\n\t\tint j = 0;\n\t\t/*for( ; cin >> c && (c != '\\n' && c != '\\0'); j++) {\n\t\t\ts[j] = c;\n\t\t}\n\t\ts[j] = '\\0';\n\t\t*/\n\t\tcin >> s;\n\t\t//cout << s;\n\t\t//cout << \"abon\" << endl;\n\n\t\tcout << min(s) << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n\nusing namespace std;\n\nint solve(string s){\n\tvector<int> list;\n\tint dg;\n\tint flag=1;\n\tint ind;\n\tint r_cnt=0;\n\twhile(flag){\n\t\tflag=1;\n\t\tfor(int i=0;i<s.size();i++){\n\t\t\t//cout<<\"in roooop: \"<<r_cnt<<endl;\n\t\t\tif(i==0){\n\t\t\t\tr_cnt++;\n\t\t\t}\n\t\t\tif(s[i-1]=='['&& s[i]!='[' && s[i]!=']'){\n\t\t\t\t\t//cout<<\"push vector\"<<endl;\n\t\t\t\t\tif(list.size()==0){\n\t\t\t\t\t\tind=i-1;\n\t\t\t\t\t}\n\t\t\t\t\tint cmp=0;\n\t\t\t\t\twhile(s[i]!=']'){\n\t\t\t\t\t\tcmp*=10;\n\t\t\t\t\t\tcmp+=s[i]-'0';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\t//cout<<\"cmp: \"<<cmp<<endl;\n\t\t\t\t\tlist.push_back(cmp);\n\t\t\t\t\tif((s[i]==']' && s[i+1]==']') || i==s.size()-1){\n\t\t\t\t\t\tif(i==s.size()-1 && list.size()==1){\n\t\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsort(list.begin(),list.end());\n\t\t\t\t\t\t//cout<<\"list elements\"<<endl;\n\t\t\t\t\t\t/*for(int j=0;j<list.size();j++){\n\t\t\t\t\t\t\tcout<<list[j]<<endl;\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tdg=0;\n\t\t\t\t\t\tif(r_cnt==1){\n\t\t\t\t\t\t\tfor(int j=0;j<list.size()/2+1;j++){\n\t\t\t\t\t\t\t\tdg+=list[j]/2+1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfor(int j=0;j<list.size()/2+1;j++){\n\t\t\t\t\t\t\t\tdg+=list[j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlist.clear();\n\t\t\t\t\t\t//cout<<\"Let's vote!\"<<\" We need: \"<<dg<<endl;\n\t\t\t\t\t\tint cp_dg=dg;\n\t\t\t\t\t\tstring rpl;\n\t\t\t\t\t\tint div=10;\n\t\t\t\t\t\twhile(cp_dg){\n\t\t\t\t\t\t\tchar c=((cp_dg%div)/(div/10))+'0';\n\t\t\t\t\t\t\trpl.push_back(c);\n\t\t\t\t\t\t\tcp_dg-=cp_dg%div;\n\t\t\t\t\t\t\tdiv*=10;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treverse(rpl.begin(),rpl.end());\n\t\t\t\t\t\ts.replace(ind,(i-ind)+1,rpl);\n\t\t\t\t\t\ti=ind+rpl.size();\n\t\t\t\t\t\t//cout<<\"new string is: \"<<s<<endl;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dg;\n}\n\nint main(){\n\tstring S;\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>S;\n\t\t//cout<<\"input: \"<<S<<endl;\n\t\tint ans=solve(S);\n\t\t//cout<<\"func solve\"<<endl;\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <string>\n#include <list>\n\nusing namespace std;\n\n\n\nint min(char* s) {\n\tint n = 0;\n\tint sum = 0, tmpI = 0;\n\tbool flag = true;\n\tlist<int> intlist;\n\n\tfor(int i = 0; s[i] != '\\0'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tint count = 1, j;\n\t\t\tfor(j = 1; count != 0; j++) {\n\t\t\t\tif(s[j + i] == '[') {\n\t\t\t\t\tcount += 1;\n\t\t\t\t} else if(s[j + i] == ']') {\n\t\t\t\t\tcount -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t//cout << \"Weeeei\" << endl;\n\t\t\tchar* tmpS = new char[200];\n\t\t\tstrncpy(tmpS, s+i+1, j-2);\n\t\t\tint x = min(tmpS);\n\t\t\tintlist.push_back( x );\n\t\t\tn++;\n\t\t\tflag = false;\n\t\t\ti = i + j-1;\n\t\t}\n\t}\n\tif(flag) {\n\t\ttmpI = atoi(s);\n\t\t//cout << tmpI << endl;\n\t\treturn tmpI / 2 + 1;\n\t}\n\n\tintlist.sort();\n\n\tlist<int>::iterator itr = intlist.begin();\n\tfor(int i = 0; i < n/2 + 1; itr++, i++) {\n\t\tsum += *itr;\n\t}\n\n\t/*\n\tbool flag = true;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tif(!flag) {\n\t\t\t\tstring s2;\n\t\t\t\tfor(int j = 0; s[j] != ']' && s[j + 1] != ']'; j++) {\n\t\t\t\t\tstrncpy(s2, s+i, j-i+1);\n\t\t\t\t}\n\t\t\t\tmin(s2);\n\t\t\t} else {\n\t\t\t\tn++:\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tint[] input = new input[n];\n\tint j = 0;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\t;\n\t\t} else if(s[i] == ']') {\n\t\t\tinput[j] = tmpI;\n\t\t\ttmpI = 0;\n\t\t} else {\n\t\t\ttmpI = tmpI * 10 + atoi(c);\n\t\t}\n\t}\n\tsort(input);\n\tfor(int i = 0; i < n/2 + 1; i++) {\n\t\tsum = input[i] / 2 + 1;\n\t}\n\t*/\n\n\treturn sum;\n}\n\n\nint main (void) {\n\tint n;\n\tcin >> n;\n\t\n\tcout << \"ok\" << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar* s = new char[200];\n\t\tchar c;\n\t\tint j = 0;\n\t\t/*for( ; cin >> c && (c != '\\n' && c != '\\0'); j++) {\n\t\t\ts[j] = c;\n\t\t}\n\t\ts[j] = '\\0';\n\t\t*/\n\t\tcin >> s;\n\t\t//cout << s;\n\t\t//cout << \"abon\" << endl;\n\n\t\tcout << min(s) << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nstring s;\nint cur = 0;\n\nint dfs() {\n    if (isdigit(s[cur])) {\n        int res = 0;\n        while (isdigit(s[cur])) res = res * 10 + s[cur++] - '0';\n        return (res + 1) / 2;\n    } else {\n        vector<int> res;\n        int ans = 0;\n        while (s[cur] == '[') {\n            cur++;\n            res.push_back(dfs());\n            cur++;\n        }\n        sort(res.begin(), res.end());\n        for (int i = 0; i < (res.size() + 1) / 2; i++) ans += res[i];\n        return ans;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    while (n--) {\n        cin >> s;\n        cur = 0;\n        cout << dfs() << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\n\nstruct UnionFind {\n\tvector<int> v;\n\tUnionFind(int n) : v(n)  { for (int i = 0; i < n; i++) v[i] = i; }\n\tint  find(int x)         { return v[x] == x ? x : v[x] = find(v[x]); }\n\tvoid unite(int x, int y) { v[find(x)] = find(y); }\n};\n\nstruct node {\n\tint sum=0;\n\tint win=0;\n\tvector<node> chi;\n\tbool operator<(const node &right) {\n\t\treturn win < right.win;\n\t}\n};\n\n\nint idx;\nstring s;\nvoid dfs(node *no) {\n\twhile (1) {\n\t\tif (s[idx] == '[') {\n\t\t\tno->chi.resize(no->chi.size() + 1);\n\t\t\tidx++;\n\t\t\tdfs(&no->chi[no->chi.size() - 1]);\n\t\t}\n\t\tif (s[idx] == ']') {\n\t\t\tif (no->chi.empty()) {\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSORT(no->chi);\n\t\t\t\tREP(j, no->chi.size() / 2 + 1) {\n\t\t\t\t\tno->win += no->chi[j].win;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidx++;\n\t\t\treturn;\n\t\t}\n\t\twhile (isdigit(s[idx])) {\n\t\t\tno->sum *= 10;\n\t\t\tno->sum += s[idx] - '0';\n\t\t\tno->win = no->sum / 2 + 1;\n\t\t\tidx++;\n\t\t}\n\t}\n} \nint main() {\n\tint kurikaesu;\n\tcin >> kurikaesu;\n\twhile (kurikaesu--) {\n\t\tcin >> s;\t\n\t\tidx = 1;\n\t\tnode root;\n\t\tdfs(&root);\n\t\tcout << root.win << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "//#define MYDEBUG\n#include <bits/stdc++.h>\n#ifdef MYDEBUG\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define ifcin(x) std::ifstream cin(x)\n#else\n#define debug(x)\n#define ifcin(x)\n#endif\n#define ll long long\n#define ull unsigned long long\n#define eps 1e-14\n#define all(x) x.begin(), x.end()\n#define rep(i,from,to) for(int i=from; i<to; ++i)\n#define REP(i,from,to) for(int i=from; i<=to; ++i)\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::vector;\nusing std::ostream;\nusing std::swap;\nusing std::max;\nusing std::min;\nusing std::queue;\nusing std::string;\ntypedef struct edge edge;\ntypedef struct unionfind unionfind;\ntypedef struct Graph Graph;\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<T>& v) {\n  out << \"[\";\n  size_t last = v.size() - 1;\n  for (size_t i = 0; i < v.size(); ++i) {\n    out << v[i];\n    if (i != last)\n      out << \",\";\n  }\n  out << \"]\";\n  return out;\n}\n\nstruct unionfind{\n\tvector<int> par;\n\tvector<int> rank;\n\tunionfind(int n) {\n\t\tpar = vector<int>(n);\n\t\trank = vector<int>(n);\n\t\trep(i,0,n){//0????????????\n\t\t\tpar[i] = i;\n\t\t\trank[i] = 1;\n\t\t}\n\t}\n\t\n\tint find(int x){\n\t\tif(par[x] == x){\n\t\t\treturn x;\n\t\t}\n\t\treturn par[x] = find(par[x]);\n\t}\n\t\n\tbool same(int x, int y){\n\t\treturn find(x) == find(y);\n\t}\n\t\n\tvoid unite(int x, int y){//rank[x] > rank[y]?????????\n\t\tx = find(x);\n\t\ty = find(y);\n\t\tif(x == y){\n\t\t\treturn;\n\t\t}\n\t\tif(rank[x] < rank[y]){\n\t\t\tswap(x,y);\n\t\t}\n\t\tpar[y] = x;\n\t\trank[x] += rank[y];\n\t\trank[y] = 0;\n\t}\n\t\n\tint size(int x){\n\t\treturn rank[x];\n\t}\n};\n\nstruct edge{\n\tint from, to;\n\tdouble cost;\n\tedge(int from, int to, double cost){\n\t\tthis->from = from;\n\t\tthis->to = to;\n\t\tthis->cost = cost;\n\t}\n\t\n\tedge(){\n\t\t*this = edge(-1,-1,-1);\n\t}\n\t\n\tbool operator<(const edge& e) const{\n\t\treturn cost < e.cost;\n\t}\n};\n\nclass Graph{\n\tpublic:\n\tstatic double kruskal(vector<edge>& es, int n){\n\t\tsort(all(es));\n\t\tdouble min_cost = 0;\n\t\tunionfind uf(n);\n\t\trep(i,0,es.size()){\n\t\t\tedge &e = es[i];\n\t\t\tif(!uf.same(e.from, e.to)){\n\t\t\t\tmin_cost += e.cost;\n\t\t\t\tuf.unite(e.from, e.to);\n\t\t\t}\n\t\t}\n\t\treturn min_cost;\n\t}\n};\n\nstruct area{\n\tstring str;\n\tvector<area> child;\n\tint depth, popu;\n\tarea(string str){\n\t\tthis->str = str;\n\t\tchild = vector<area>();\n\t\tdivide(str);\n\t}\n\tint getPopulation(){\n\t\tif(child.size()==0){\n\t\t\tstring s = str;\n\t\t\ts = s.erase(0,1);\n\t\t\ts = s.erase(s.size()-1,1);\n\t\t\treturn popu = std::atoi(s.c_str());\n\t\t}else{\n\t\t\tint ret = 0;\n\t\t\trep(i,0,child.size()){\n\t\t\t\tret += child[i].getPopulation();\n\t\t\t}\n\t\t\treturn popu = ret;\n\t\t}\n\t}\n\tarea(){\n\t\t*this = area(\"\");\n\t}\n\tbool operator<(const area& a) const{\n\t\treturn popu < a.popu;\n\t}\n\tvoid sortChild(area& a){\n\t\tif(a.child.size() != 0){\n\t\t\tsort(all(a.child));\n\t\t\trep(i, 0, child.size()){\n\t\t\t\tsortChild(a.child[i]);\n\t\t\t}\n\t\t}\n\t}\n\tint overHalf(area a){\n\t\tint half = a.child.size() / 2 + 1;\n\t\tif(half==1){\n\t\t\treturn (a.popu + 1) / 2;\n\t\t}\n\t\tint ret = 0;\n\t\trep(i,0,half){\n\t\t\tret += overHalf(a.child[i]);\n\t\t}\n\t\treturn ret;\n\t}\n\tvoid divide(string s){\n\t\tif(s[0]=='['&&s[1]!='['){\n\t\t\treturn;\n\t\t}\n\t\tstring str = \"\";\n\t\tint depth = 0;\n\t\tfor(size_t i = 1; i + 1 < s.size(); ++i){\n\t\t\tstr+=s[i];\n\t\t\tif(s[i]=='['){\n\t\t\t\tdepth++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t\tif(depth==0&&str!=\"\"){\n\t\t\t\tchild.push_back(area(str));\n\t\t\t\tstr = \"\";\n\t\t\t}else if(depth<0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\ntypedef struct area area;\narea root;\nstring s;\nint n;\nvoid solve(){\n\tifcin(\"/storage/emulated/0/AppProjects/AtCoder/jni/in.txt\");\n\tcin>>n;\n\trep(test_case,0,n){\n\t\tcin >> s;\n\t\troot = area(s);\n\t\troot.getPopulation();\n\t\troot.sortChild(root);\n\t\tcout << root.overHalf(root) << endl;\n\t}\n}\n\nint main() {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nstring s;\nint now;\nint rec(){\n  if(isdigit(s[now])){\n    int res = 0;\n    while(now < s.size() && isdigit(s[now])) res = res * 10 + s[now++] - '0';\n    return (res + 1) / 2;\n  }else{\n    vector<int> dat; int res = 0;\n    while(s[now] == '[') now++ , dat.push_back(rec()) , now++;\n    sort(dat.begin(),dat.end());\n    for(int i = 0 ; i < ( dat.size() + 1 ) / 2 ; i++ ) res += dat[i];\n    return res;\n  }\n}\nint main(){\n  int q;\n  cin >> q;\n  while(q--){\n    now = 0;\n    cin >> s;\n    cout << rec() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int INF = 1<<28;\nint p;\nstring s;\n\nint rec() {\n  int res = INF;\n  ++p;\n  if(isdigit(s[p])) {\n    string t;\n    while(isdigit(s[p])) {\n      t += s[p++];\n    }\n    res = atoi(t.c_str()) / 2 + 1;\n  } else {\n    vector<int> v;\n    while(s[p] == '[') {\n      v.push_back(rec());\n    }\n    sort(v.begin(), v.end());\n    res = accumulate(v.begin(), v.begin() + v.size() / 2 + 1, 0);\n  }\n  ++p;\n  return res;\n}\n\nint main() {\n  int T; cin >> T;\n  while(T--) {\n    cin >> s;\n    s += \"$\";\n    p = 0;\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\nclass D {\npublic:\n\tint sets;\n\tint n;\n\tlist<D*> child;\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n\t~D() {\n\t}\n};\n\nchar c[10002];\n\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') {\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; //'['\n\t\t\tsum += get(dd, l);\n\t\t\td->child.push_back(dd);\n\t\t\td->sets++;\n\t\t\tl++; //']'\n\t\t}\n\t\td->n = sum;\n\t} else {\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num;\n\t\treturn num;\n\t}\n\treturn sum;\n}\n\nint ans(D *d) {\n\t//cout << \"in\" << endl;\n\tif (d->sets == 0) {\n\t\t//cout << \"okk\" << endl;\n\t\treturn d->n / 2 + 1;\n\t}\n\t//else\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\td->child.sort(func);\n\t//cout << \"sets::\" << d->sets << endl;\n\tlist <int> ilist;\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets; i++) {\n\t\tD *cur = *it;\n\t\t//cout << i << \":::\" << cur->n << endl;\n\t\tilist.push_back(ans(cur));\n\t\tit++;\n\t}\n\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\tint sum = 0;\n\tauto iit = ilist.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tsum += *iit;\n\t\tiit++;\n\t}\n\treturn sum;\n}\n\n\t\nvoid solve() {\n\tint n;\n\tint l;\n\tcin >> n;\n\t//cout << n << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> c;\n\t\t//cout << c << endl;\n\t\tD *d = new D();\n\t\tl = 1;\n\t\tget(d, l);\n\t\tcout << ans(d) << endl;\n\t\t//cout << \"hoge\" << endl;\n\t\tdelete d;\n\t}\n}\n\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(v) (v).begin(),(v).end()\n#define len(v) (int)(v).size()\n#define pb push_back\n\nusing namespace std;\n\nconst int MAX_N = 100000;\n\nvector<int> G[MAX_N];\nint val[MAX_N];\n\nstring s;\nint num,id;\n\nvoid dfs(int p)\n{\n    int nw = id++;\n    int st = 0;\n    G[p].pb(nw);\n    while(num < len(s)){\n        if(s[num] == '['){\n            st++;\n            num++;\n            dfs(nw);\n        }else if(s[num] == ']'){\n            st--;\n            if(st < 0){\n                break;\n            }\n            num++;\n        }else{\n            string kazu;\n            while(isdigit(s[num])){\n                kazu.pb(s[num++]);\n            }\n            val[nw] = stoi(kazu);\n            break;\n        }\n    }\n}\n\nint dfs2(int u)\n{\n    if(len(G[u]) == 0){\n        return val[u]/2+1;\n    }\n    vector<int> cnt;\n    for(auto& v : G[u]){\n        cnt.pb(dfs2(v));\n    }\n    // rep(i,len(cnt)){\n    //     cout << cnt[i] << \" \";\n    // }\n    // cout << \"\\n\";\n    sort(all(cnt));\n    return accumulate(cnt.begin(),cnt.begin()+len(cnt)/2+1,0);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    rep(i,n){\n        cin >> s;\n        num = id = 0;\n        dfs(0);\n        cout << dfs2(1) << \"\\n\";\n        rep(i,id){\n            G[i].clear();\n        }\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include<cstdlib>\n#include<queue>\n#include<set>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<sstream>\n#include<stack>\n#include<map>\n#include<cstdio>\nusing namespace std;\n#define rep(i,a) for(int i=0;i<a;i++)\n#define mp make_pair\n#define pb push_back\n#define P pair<int,int>\n#define ll __int64\nconst int L=-100000;\nconst int R=-999999;\nint stoi(string x){\n\tstringstream ss;\n\tss<<x;\n\tint now;\n\tss>>now;\n\treturn now;\n}\nvector<int>G[10000];\nint n,h;\nstring s;\nint main(){\ncin>>n;\nrep(iii,n){\ncin>>s;\nstack<int>sta;\nstring now=\"\";\nfor(int i=0;i<s.size();i++){\n\n\tif(s[i]=='['){\n\t\tsta.push(L);\n\t}\n\n\telse if(s[i]==']'){\n\t\tvector<int>a(0);\n\t\tint length=0,sum=0,nnow;\n\t\tnnow=stoi(now);\n\t\tif(!now.empty()){\n\t\t\tsta.push(nnow/2+1);\n\t\t\tnow=\"\";\n\t\t}\n\t\t//cout<<sta.top()<<endl;\n\t\twhile(sta.top()!=L){\n\n\t\t\ta.push_back(sta.top());\n\t\t\tsta.pop();\n\t\t}\n\t\tsta.pop();//[を抜く\n\t\tlength=a.size();\n\t\tsort(a.begin(),a.end());\n\t\tfor(int j=0;j<length/2+1;j++)sum+=a[j];\n\t\tsta.push(sum);\n\t\t//cout<<sum<<\" \"<<length<<endl;\n\t}\n\telse{\n\t\tnow.push_back(s[i]);\n\t}\n}\nint ans=sta.top();\nsta.pop();\ncout<<ans<<endl;\n}\n\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <functional>\nusing namespace std;\n\n#define rep(i,a,n) for(int (i)=(a); (i)<(n); (i)++)\n#define repq(i,a,n) for(int (i)=(a); (i)<=(n); (i)++)\n#define repr(i,a,n) for(int (i)=(a); (i)>=(n); (i)--)\n#define int long long int\n\ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconstexpr ll INF = 1001001001001001LL;\nconstexpr ll MOD = 1000000007LL;\n\nint N, len;\nstring s;\n\nint solve(int l, int r) {\n    l++;\n    // printf(\"l = %lld, r = %lld, \", l, r);\n    // cout << s.substr(l, r-l) << endl;\n    int cnt = 0;\n    if(s[l] == '[') {\n        vector<int> ns;\n        int nl = -1, nr = -1;\n        rep(i,l,r) {\n            if(s[i] == '[') {\n                cnt++;\n                if(cnt == 1) nl = i;\n            }\n            else if(s[i] == ']') {\n                cnt--;\n                if(cnt == 0) {\n                    nr = i;\n                    int val = solve(nl, nr);\n                    ns.push_back(val);\n                }\n            }\n        }\n        sort(ns.begin(), ns.end());\n        int ret = 0, sz = ((int)ns.size() - 1) / 2 + 1;\n        rep(i,0,sz) ret += ns[i];\n        return ret;\n    }\n    else {\n        int ret = 0;\n        rep(i,l,r) ret = ret * 10 + (s[i] - '0');\n        return (ret - 1) / 2 + 1;\n    }\n}\n\nsigned main() {\n    cin >> N;\n    while(N--) {\n        cin >> s;\n        len = s.length();\n        cout << solve(0, len-1) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i,n,N) for(int i=n;i<N;i++)\n#define p(S) cout<<S<<endl\nusing namespace std;\nstring hds;\nint hdi;\nint hdfs(){\n\tvector<int> vt;\n\tint ret=0;\n\tif(isdigit(hds[hdi])){\n\t\tint a=0;\n\t\twhile(isdigit(hds[hdi]))\ta=10*a+(hds[hdi++]-'0');\n\t\tvt.push_back(a/2+1);\n\t}else\twhile(hds[hdi++]=='[')\t{\n\t\tvt.push_back(hdfs());\n\t\thdi++;\n\t}\n\n\tsort(vt.begin(),vt.end());\n\tREP(j,0,(int)vt.size()/2+1)\tret+=vt[j];\n\treturn ret;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tREP(i,0,n)\t{\n\t\thdi=0;\n\t\tcin>>hds;\n\t\tp(hdfs());\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nstring s;\nint p;\n\nint dfs(){\n  vector<int> v;\n  while(s[p]=='[')p++,v.push_back(dfs());\n  if(isdigit(s[p])){\n    int c=0;\n    while(isdigit(s[p])){\n      c=c*10+s[p]-'0';\n      p++;\n    }\n    p++;\n    return (c+1)/2;\n  }\n  p++;\n  sort(v.begin(),v.end());\n  int res=0;\n  for(int i=0;i<(v.size()+1)/2;i++)res+=v[i];\n  return res;\n}\n\nint main(){\n  int T;\n  cin>>T;\n  while(T--){\n      cin>>s;\n      p=0;\n      cout<<dfs()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define fi first\n#define se second\n#define repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define each(itr,v) for(auto itr:v)\n#define pb(s) push_back(s)\n#define mp(a,b) make_pair(a,b)\n#define all(x) (x).begin(),(x).end()\n#define dbg(x) cout<<#x\"=\"<<x<<endl\n#define maxch(x,y) x=max(x,y)\n#define minch(x,y) x=min(x,y)\n#define uni(x) x.erase(unique(all(x)),x.end())\n#define exist(x,y) (find(all(x),y)!=x.end())\n#define bcnt(x) bitset<32>(x).count()\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> P;\ntypedef pair<P, int> PPI;\ntypedef pair<ll, ll> PL;\ntypedef pair<P, ll> PPL;\n\n#define INF INT_MAX/3\n\n#define MAX_N 1000\n\nint cases;\nstring s;\n\nint dfs(int l,int r){\n\tbool num=true;\n\trepl(i,l+1,r-1){\n\t\tif(!isdigit(s[i])){\n\t\t\tnum=false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(num){\n\t\treturn stoi(s.substr(l+1,r-l-2))/2+1;\n\t}else{\n\t\tint level=-1;\n\t\tint ll;\n\t\tvector<int> ns;\n\t\trepl(i,l,r){\n\t\t\tif(s[i]=='['){\n\t\t\t\tif(level==0){\n\t\t\t\t\tll=i;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tlevel--;\n\t\t\t\tif(level==0){\n\t\t\t\t\tns.pb(dfs(ll,i+1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsort(all(ns));\n\t\tint res=0;\n\t\trep(i,ns.size()/2+1){\n\t\t\tres+=ns[i];\n\t\t}\n\t\treturn res;\n\t}\n}\n\nint main(){\n\tcin.sync_with_stdio(false);\n\tcin>>cases;\n\twhile(cases--){\n\t\tcin>>s;\n\t\tcout<<dfs(0,s.length())<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cassert>\n#include <cctype>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nenum { Leaf, Node };\n\nstruct Stage {\n    int type;\n    int required_vote;\n\n    union {\n        int n;\n        vector<Stage*>* childs;\n    } u;\n};\n\nbool comp(const Stage* l, const Stage* r) {\n    return l->required_vote < r->required_vote;\n}\n\nchar S[10001];\n\nStage* parse(char* s, char** next) {\n    assert(s[0] == '[');\n    if (isdigit(s[1])) {\n        int n = 0;\n\n        int i = 1;\n        for (; isdigit(s[i]); i++) {\n            n *= 10;\n            n += (int)(s[i] - '0');\n        }\n        assert(s[i] == ']');\n\n        *next = &s[i + 1];\n\n        Stage* r = new Stage;\n        r->type = Leaf;\n        r->u.n = n;\n\n        return r;\n    } else if (s[1] == '[') {\n        ++s;\n\n        Stage* r = new Stage;\n        r->type = Node;\n        r->u.childs = new vector<Stage*>;\n\n        vector<Stage*> &childs = *(r->u.childs);\n\n        for (; *s != ']'; ) {\n            assert(*s == '[');\n\n            char *n;\n            Stage* c = parse(s, &n);\n            childs.push_back(c);\n\n            s = n;\n        }\n\n        *next = s + 1;\n\n        return r;\n    }\n\n    assert(false);\n    return 0;\n}\n\nint more_than_half(int i) {\n    return i / 2 + 1;\n}\n\nvoid calc(Stage* s) {\n    if (s->type == Leaf) {\n        s->required_vote = more_than_half(s->u.n);\n    } else if (s->type == Node) {\n        vector<Stage*>& v = *(s->u.childs);\n\n        for (int i = 0; i < (int)v.size(); i++) {\n            calc(v[i]);\n        }\n\n        sort(v.begin(), v.end(), comp);\n\n        int r = 0;\n        for (int i = 0; i < more_than_half(v.size()); i++) {\n            r += v[i]->required_vote;\n        }\n\n        s->required_vote = r;\n    }\n}\n\nvoid cleanup(Stage* s) {\n    if (s->type == Leaf) {\n        delete s;\n    } else if (s->type == Node) {\n        vector<Stage*>& v = *(s->u.childs);\n\n        for (int i = 0; i < (int)v.size(); i++) {\n            cleanup(v[i]);\n        }\n\n        delete s->u.childs;\n        delete s;\n    }\n}\n\nint main() {\n    int n;\n    char ns[100];\n    fgets(ns, 99, stdin);\n    n = atoi(ns);\n\n    for (int zz = 0; zz < n; zz++) {\n        fgets(S, 10001, stdin);\n        char* dummy;\n        Stage* node = parse(S, &dummy);\n\n        calc(node);\n\n        printf(\"%d\\n\", node->required_vote);\n\n        cleanup(node);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//============================================================================\n// Name        : aoj1188.cpp\n// Author      : afterCmidday\n// Version     :\n// Copyright   : Your copyright notice\n// Description : Hello World in C++, Ansi-style\n//============================================================================\n\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include <cctype>\n#include <vector>\n#include <algorithm>\n#include <functional>\n\nusing namespace std;\n\n\nstring s;\n\nint solve(int l,int r){\n\tif(s[l] == '['){\n\t\tint i, cnt = 0; // 次に要素番号 l の後ろに'['があった場合 +1,']'があった場合 -1 とするcntである\n\t\tvector<int> each;\n\t\twhile(l < r){\n\t\t\tfor(i = l + 1;i < r && !(s[i] == ']' && cnt == 0);i++){ // そのcntが0でかつs[l]が']'(この選挙区の終端)であるときに終了\n\t\t\t\tif(s[i] == '['){\n\t\t\t\t\tcnt++;\n\t\t\t\t}else if(s[i] == ']'){\n\t\t\t\t\tcnt--;\n\t\t\t\t}\n\t\t\t}\n\t\t\teach.push_back(solve(l + 1,i));\n\t\t\tl = i + 1;\n\t\t}\n\t\tsort(each.begin(),each.end());\n\t\tint sum = 0;\n\t\tfor(int i = 0;i < (each.size() + 1) / 2;i++){\n\t\t\t//cout << each[i] << \" \";\n\t\t\tsum += each[i];\n\t\t}\n\t\t//cout << endl;\n\t\t//cout << sum << endl;\n\t\treturn sum;\n\t}\n\tif(isdigit(s[l])){\n\t\tint d = 0;\n\t\tfor(int i = l;i < r && isdigit(s[i]);i++){\n\t\t\td = d * 10 + (s[i] -'0');\n\t\t}\n\t\treturn (d + 1) / 2; // 過半数\n\t}\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\tcin.get();\n\tfor(int i = 0;i < n;i++){\n\t\tgetline(cin,s);\n\t\tcout << solve(1,s.size() - 2) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0; i<(n); i++)\n#define X first\n#define Y second\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n\n\nchar *p;\nstring s;\n\n\n\nint calc(){\n\tif('0' <= p[0] && p[0] <= '9'){\n\t\tint v=0;\n\t\tfor(; p[0] != ']'; ++p){\n\t\t\tv = v*10 + p[0] - '0';\n\t\t}\n\t\treturn v/2+1;\n\t}\n\tvector<int> c;\n\tp++;\n\tfor(;;){\n\t\tint v = calc();\n\t\tc.push_back(v);\n\t\tif(p[0] == ']') break;\n\t}\n\tp++;\n\tsort(c.begin(), c.end());\n\n\tint ret = 0;\n\trep(i, (c.size()+1)/2 ){\n\t\tret += c[i];\n\t}\n\treturn ret;\n}\n\n\n\nint main(){\n\tint TT;\n\tcin >> TT;\n\trep(T,TT){\n\t\tcin >> s;\n\t\tp = &(s[0]);\n\t\tcout << calc() << endl;\n\n\n\n\t}\n\n\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cctype>\n#include <cassert>\nusing namespace std;\n\nstring s;\nint cur = 0;\n\nint digit() {\n  assert(isdigit(s[cur]));\n  return s[cur++] - '0';\n}\n\nint number() {\n  int ans = 0;\n  while (cur < s.length() && isdigit(s[cur])) {\n    int temp = digit();\n    ans = ans*10 + temp;\n  }\n  return ans;\n}\n\nint senkyoku() {\n  int ans = number();\n  return ans/2+1;\n}\n\nint min() {\n  assert(s[cur] == '[');\n  cur++;\n  int vot[4000];\n  int len = 0;\n  while(s[cur] != ']') {\n    if (isdigit(s[cur])) {\n      vot[len] = senkyoku();\n    } else {\n      vot[len] = min();\n    }\n    len++;\n  }\n  cur++;\n  sort(vot, vot+len);\n  int sum = 0;\n  for (int i=0; i<len/2 + 1; i++) {\n    sum += vot[i];\n  }\n  return sum;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  for (int i=0; i<n; i++) {\n    cur = 0;\n    cin >> s;\n    cout << min() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Node{\n    int value;\n    list<Node*> next;\n    Node* prev;\n\npublic:\n    Node();\n    Node(Node* p);\n    ~Node();\n    void set_v(int v);\n    void add_next(int v);\n    void del_next();\n    void set_prev(Node* p);\n    Node* next_ret(int index);\n    Node* prev_ret();\n    int value_ret();\n    int next_size_ret();\n};\n\nclass Tree{\n    Node root;\n    Node* pos;\n\npublic:\n    Tree();\n    ~Tree();\n    void add(int v);\n    void move_next(int index);\n    void move_back();\n    void set_root();\n    int pos_size_ret();\n    int pos_value_ret();\n    Node* pos_ret();\n    void DLELTE_DFS(Node* node);\n\n    int solve();\n    int DFS(Node* node);\n};\n\nNode::Node() {\n    this->prev = this;\n    value = -1;\n}\n\nNode::Node(Node* p) {\n    this->prev = p;\n    value = -1;\n}\n\nNode::~Node() {\n    this->del_next();\n}\n\nvoid Node::set_v(int v) {\n    this->value = v;\n}\n\nvoid Node::add_next(int v) {\n    Node* n= new Node(this);\n    n-> value = v;\n    next.push_back(n);\n}\n\nvoid Node::del_next() {\n    list<Node*>::iterator pre_itr = this->next.begin();\n    list<Node*>::iterator itr = pre_itr;\n    itr++;\n    for(; itr != this->next.end(); itr++){\n        delete *pre_itr;\n        pre_itr = itr;\n    }\n    delete *pre_itr;\n}\n\nvoid Node::set_prev(Node* p) {\n    this->prev = p;\n}\n\nNode* Node::next_ret(int index) {\n    list<Node*>::iterator itr = this->next.begin();\n    for(int i=0; i<index; i++){\n        itr++;\n    }\n    return *itr;\n}\n\nNode* Node::prev_ret() {\n    return this->prev;\n}\n\nint Node::value_ret() {\n    return this->value;\n}\n\nint Node::next_size_ret() {\n    return this->next.size();\n}\n\n\n\nTree::Tree() {\n    this->pos = &(this->root);\n}\n\nTree::~Tree(){\n\n    //DLELTE_DFS(&(this->root));\n\n}\n\nvoid Tree::add(int v) {\n    pos->add_next(v);\n}\n\nvoid Tree::move_next(int index) {\n    this->pos = this->pos->next_ret(index);\n}\n\nvoid Tree::move_back() {\n    this->pos = this->pos->prev_ret();\n}\n\nvoid Tree::set_root() {\n    this->pos = &(this->root);\n}\n\nint Tree::pos_size_ret() {\n    return this->pos->next_size_ret();\n}\n\nint Tree::pos_value_ret() {\n    return this->pos->value_ret();\n}\n\nNode* Tree::pos_ret() {\n    return this->pos;\n}\n\nint Tree::solve() {\n    return this->pos->value_ret();\n}\n\nint Tree::DFS(Node* node) {\n\n    if(node->next_size_ret() == 0){\n        return (node->value_ret()/2 + 1);\n    }\n\n    int add = 0;\n\n    priority_queue<int> q;\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        q.push(-DFS(node->next_ret(i)));\n    }\n\n    int count = q.size();\n\n    for(int loop = 0; loop < count/2 + 1; loop++){\n        add += -q.top();\n        q.pop();\n    }\n\n    return add;\n\n}\n\nvoid Tree::DLELTE_DFS(Node* node) {\n\n    /*\n    if(node->next_size_ret() == 0){\n        return;\n    }\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        DLELTE_DFS(node);\n    }\n\n    node->del_next();\n*/\n}\n\nint main() {\n\n    int n;\n\n    cin >> n;\n\n    while(n--){\n\n        string input;\n\n        cin >> input;\n\n        Tree t;\n\n        for(int i=1; i<input.size(); i++){\n\n            if(input[i] == '['){\n                t.add(0);\n                t.move_next(t.pos_size_ret() - 1);\n            }\n            else if(input[i] == ']'){\n                t.move_back();\n            }\n            else{\n                string snum = \"\";\n                while(input[i] != ']'){\n                    snum += input[i];\n                    i++;\n                }\n                i--;\n                stringstream ss;\n                ss << snum;\n                int num;\n                ss >> num;\n                t.add(num);\n            }\n\n        }\n\n        t.set_root();\n        cout << t.DFS(t.pos_ret()) << endl;\n\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define rp(a) while(a--)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double EPS=1e-10;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\nstring s;\nint i;\nint func(int a){\n\tvector<int>in;\n\tfor(i=a;i<1e10;i++){\n\t\tif(s[i]==']')break;\n\t\tif(s[i]=='['){\n\t\t\tint q=i+1;\n\t\t\tin.pb(func(q));\n\t\t}\n\t\tif(isdigit(s[i])){\n\t\t\tint out=0;//s[i]-'0';\n\t\t\twhile(isdigit(s[i])){\n\t\t\t\tout*=10;\n\t\t\t\tout+=s[i]-'0';\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn out/2+1;\n\t\t}\n\t}\n\t//rep(j,in.size())cout<<\" \"<<in[j];\n\t//cout<<endl;\n\n\tsort(all(in));\n\tint sum=0;\n\trep(j,in.size()/2+1)sum+=in[j];\n\treturn sum;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\ti=0;\n\t\tcin>>s;\n\t\tint q=1;\n\t\tcout<<func(q)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n\nusing namespace std;\n\nint now;\nstring s;\n\nint number(){\n  int res=0;\n  while('0'<=s[now] && s[now]<='9')\n    res*=10,res+=s[now++]-'0';\n  return res/2+1;\n}\n\nint factor(){\n  \n  if(s[now]=='['){\n    vector<int>v;\n    while(s[now]=='['){\n      now++;\n      v.push_back(factor());\n      now++;\n    }\n    sort(v.begin(),v.end());\n    int res=0;\n    for(int i=0;i<v.size()/2+1;i++)res+=v[i];\n    return res;\n  }\n  return number();\n}\n\nint main(void){\n  \n  int n;\n  cin >> n;\n\n  while(n--){\n    now=0;\n    cin >> s;\n    cout << factor() << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <vector>\n#include <string>\n#include <cassert>\nusing namespace std;\n\nconst char *p;\n\nint rec() {\n  int res = 0;\n  vector<int> v;\n\n  ++p;\n  if(*p == '[') {\n    while(*p == '[') v.push_back(rec());\n    sort(v.begin(), v.end());\n    for(int i = 0; i < v.size()/2+1; i++) res += v[i];\n  } else {\n    char *e;\n    res = strtol(p, &e, 10) / 2 + 1;\n    p = e;\n  }\n  assert(*p == ']');\n  ++p;\n  return res;\n}\n\nint main() {\n  int n;\n  string str;\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = &str[0];\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n\n// 選挙区ごとに勝つために必要な最小数をもとめてく\n// s[l..r-1] ; [l, r)\nlong long solve(const std::string& s, int l, int r){\n//    cerr << s.substr(l, r-l) << '\\n';\n    if(s[l] != '['){\n        int c = stoi(s.substr(l, r - l));\n        return (c + 1) / 2;\n    }\n    vector<long long> needs;\n    int i = l;\n    i++;\n    r--;\n    while(i < r){\n        // s[i] == '['\n        int right = i;\n        int d = 1;\n        while(d > 0){\n            if(s[right] == '['){\n                d++;\n            }\n            else if(s[right] == ']'){\n                d--;\n            }\n            right++;\n        }\n        needs.push_back(solve(s, i, right-1));\n        i = right + 1;\n    }\n    sort(needs.begin(), needs.end() );\n    int size = needs.size();\n    int kahan = (size + 1) / 2;\n    int ans = 0;\n    for (int i = 0; i < kahan; ++i) {\n        ans += needs[i];\n    }\n    return ans;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        string inar;\n        cin >> inar;\n        cout << solve(inar, 1, inar.size()-1) << endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <set>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <functional>\n#include <bitset>\n#include <assert.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef vector<char> vc;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<double> vd;\ntypedef pair<ll,ll> P;\ntypedef vector<P> vpl;\ntypedef tuple<ll,ll,ll> tapu;\n#define rep(i,n) for(ll i=0; i<(n); i++)\n#define REP(i,a,b) for(int i=(a); i<(b); i++)\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\nconst int inf = 1<<30;\nconst ll linf = 1LL<<62;\nconst int MAX = 510000;\nll dy[8] = {0,1,0,-1,1,-1,1,-1};\nll dx[8] = {1,0,-1,0,1,-1,-1,1};\nconst double pi = acos(-1);\nconst double eps = 1e-7;\ntemplate<typename T1,typename T2> inline bool chmin(T1 &a,T2 b){\n\tif(a>b){\n\t\ta = b; return true;\n\t}\n\telse return false;\n}\ntemplate<typename T1,typename T2> inline bool chmax(T1 &a,T2 b){\n\tif(a<b){\n\t\ta = b; return true;\n\t}\n\telse return false;\n}\ntemplate<typename T1,typename T2> inline void print2(T1 a, T2 b){cout << a << \" \" << b << endl;}\ntemplate<typename T1,typename T2,typename T3> inline void print3(T1 a, T2 b, T3 c){\n\tcout << a << \" \" << b << \" \" << c << endl;\n}\nconst int mod = 1e9 + 7;\n//const int mod = 998244353;\n\nP dfs(string s, ll idx){\n\tvl res;\n\tll ret = 0;\n\tll num = 0;\n\twhile(idx < s.size()){\n\t\tif(s[idx] == '['){\n\t\t\tnum = 0;\n\t\t\tP p = dfs(s,idx+1);\n\t\t\tres.push_back(p.first);\n\t\t\tidx = p.second + 1;\n\t\t}else if(s[idx] == ']'){\n\t\t\tif(res.empty()) res.push_back(num);\n\t\t\tnum = 0;\n\t\t\tsort(all(res));\n\t\t\tll siz = res.size();\n\t\t\tif(siz==1) return P(res[0]/2+1,idx);\n\t\t\trep(i,(siz+1)/2){\n\t\t\t\tret += res[i];\n\t\t\t}\n\t\t\treturn P(ret,idx);\n\t\t\tidx++;\n\t\t}else{\n\t\t\tnum = num * 10 + s[idx] - '0';\n\t\t\tidx++;\n\t\t}\n\t}\n\treturn P(res[0],idx);\n}\n\nint main(){\n\tll n; cin >> n;\n\twhile(n--){\n\t\tstring s; cin >> s;\n\t\tcout << dfs(s,0).first << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<set>\n\nusing namespace std;\n\n#define reps(i,f,n) for(int i=f;i<int(n);i++)\n#define rep(i,n) reps(i,0,n)\n\nint parse(string str){\n\tint ret = 0;\n\trep(i,str.size()){\n\t\tret *= 10;\n\t\tret += str[i]-'0';\n\t}\n\treturn ret;\n}\n\nint getval(string str){\n\t\n\t\n\tint rcont=0;\n\trep(i,str.size())if(str[i]=='[')rcont++;\n\t\n\tif(rcont==0)return (parse(str)+1)/2;\n\t\n\t\n\tint st=0;\n\tint now=0;\n\tvector<int> cand;\n\treps(i,0,str.size()){\n\t\tif(str[i]=='[')now++;\n\t\tif(str[i]==']')now--;\n\t\t\n\t\tif(now==0){\n\t\t\tstring next = str.substr(st+1, (i-st-1));\n\t\t\tcand.push_back(getval(next));\n\t\t\tst = i+1;\n\t\t}\n\t}\n\t\n\tsort(cand.begin(),cand.end());\n\tint ret = 0;\n\trep(i,(cand.size()+1)/2){\n\t\tret += cand[i];\n\t}\n\t\n\t//cout<<\"str=\"<<str<<\" \"<<ret<<endl;\n\treturn ret;\n}\n\n\nint main(){\n\t\n\tint n;\n\tcin>>n;\n\t\n\trep(p,n){\n\t\tstring str;\n\t\tcin>>str;\n\t\t\n\t\tprintf(\"%d\\n\",getval(str));\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<vb> vbb;\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst double inf = (int)1e8;\n\nstring IntToString(int number) {\n    stringstream ss;\n    ss << number;\n    return ss.str();\n}\n\nint main(){\n    int n;\n    cin >> n;\n    for(int p=0; p < n; p++){\n        string s;\n        cin >> s;\n        string t;\n        vector<int> v;\n        for(int i=0; i< s.size(); i++){\n            if(s[i] == '[' && s[i+1] == '[') t += \"[\";\n            if('0' <= s[i] && s[i] <= '9'){\n                if('0' <= s[i] && s[i] <= '9'){\n                    string num;\n                    while('0' <= s[i] && s[i] <= '9'){num.push_back(s[i]); i++;}\n                    v.push_back(stoi(num));\n                }\n            }\n            if(s[i] == ']' && s[i+1] == ']'){\n                sort(v.begin(), v.end());\n                int sum = 0;\n                for(int j=0; j< v.size()/2+1; j++) sum += v[j]/2+1;\n                if(v.size() != 0) t += IntToString(sum);\n                t += + \"]\";\n                v.clear();\n            }\n        }\n        v.clear();\n        while(true){\n            string q;\n            for(int i=0; i< t.size(); i++){\n                if(t[i] == '[' && t[i+1] == '[') q += \"[\";\n                if('0' <= t[i] && t[i] <= '9'){\n                    string num;\n                    while('0' <= t[i] && t[i] <= '9'){num.push_back(t[i]); i++;}\n                    v.push_back(stoi(num));\n                }\n                if(t[i] == ']' && t[i+1] == ']'){\n                    sort(v.begin(), v.end());\n                    int sum = 0;\n                    for(int j=0; j< v.size()/2+1; j++) sum += v[j];\n                    if(v.size() != 0) q += IntToString(sum);\n                    q += + \"]\";\n                    v.clear();\n                }\n            }\n            if(q.size() == 0){cout << t.substr(1, t.size()-2) << endl; break;}\n            t = q;\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cctype>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring S;\nsize_t cur=0;\nint digit(){\n\tint n=S[cur++]-'0';\n\treturn n;\n}\n\nint number(){\n\tint n=digit();\n\twhile(isdigit(S[cur])){\n\t\tn=n*10+digit();\n\t}\n\treturn n;\n}\n\nint term(){\n\tvector<int> list;\n\tint ans=0;\n\twhile(S[cur]!=']'){\n\t\tif(S[cur]=='[')\n\t\t\tcur++,list.push_back(term());\n\t\telse if(isdigit(S[cur]))\n\t\t\tlist.push_back(number());\n\t\telse if(cur==S.size())\n\t\t\treturn list[0];\n\t}\n\tif(S[cur]==']'){\n\t\tcur++;\n\t\tsort(list.begin(),list.end());\n\t\tif(list.size()==1){\n\t\t\tans+=(list[0]/2+1);\n\t\t}else{\n\t\t\tint n=(list.size()/2+1);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tans+=list[i];\n\t\t}\n\t}\n//\tcout << ans << endl;\n\treturn ans;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\tfor(int i=0;i<n;i++){\n\t\tcin >> S;\n\t\tcur=0;\n\t\tint ans=term();\n\t\tcout << ans << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing pii = pair<int, int>;\n\nstring S;\n\nint cnt = 0;\n\nint rec(int l, int r)\n{\n    vector<pii> v;\n    int len = 0;\n    bool bracket = false;\n    int num = 0;\n    for (int i = l + 1; i < r; i++)\n    {\n        len++;\n        if (S[i] == '[')\n        {\n            bracket = true;\n            num++;\n        }\n        else if (S[i] == ']')\n        {\n            num--;\n        }\n        if (num == 0)\n        {\n            v.push_back(make_pair(i - len + 1, i));\n            len = 0;\n        }\n    }\n    if (!bracket)\n    {\n        int n = stoi(S.substr(l + 1, r - l - 1));\n        return n / 2 + 1;\n    }\n    vector<int> nums;\n    for (int i = 0; i < v.size(); i++)\n    {\n        nums.push_back(rec(v[i].first, v[i].second));\n    }\n\n    int res = 0;\n\n    sort(nums.begin(), nums.end());\n    for (int i = 0; i < (nums.size() + 1) / 2; i++)\n    {\n        res += nums[i];\n    }\n    return res;\n}\n\nint main()\n{\n    int T;\n    cin >> T;\n    while (T--)\n    {\n        cin >> S;\n        cout << rec(0, S.size() - 1) << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#define REP(i, n ,N) for(ll i = (n); i < (N); i++)\n#define p(s) cout<<(s)<< endl\n#define p2(a, b) cout<<(a) << \" \" << (b) << endl\nusing namespace std;\ntypedef long long ll;\n\nstring s;\nll idx;\nll dfs(){\n\tvector<ll> vt;\n\twhile(s[idx] != ']' && idx < s.size()){\n\t\tif(isdigit(s[idx])){\n\t\t\tll num = 0;\n\t\t\twhile(isdigit(s[idx])){\n\t\t\t\tnum = 10*num + (s[idx++] - '0');\n\t\t\t}\n\t\t\tvt.push_back(num / 2 + 1);\n\t\t}else{\n\t\t\tidx++;\n\t\t\tll tmp = dfs();\n\t\t\tvt.push_back(tmp);\n\t\t}\n\t}\n\tsort(vt.begin(), vt.end());\n\tll ret = 0;\n\tREP(i,0,vt.size()/2+1){\n\t\tret += vt[i];\n\t}\n\tidx++;\n\treturn ret;\n}\n\nint main() {\n\tll n;\n\tcin >> n;\n\tREP(i,0,n){\n\t\tcin >> s;\n\t\tidx = 0;\n\t\tp(dfs());\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <memory>\n#include <algorithm>\n\nusing namespace std;\n\ntemplate<typename T>\nusing sp = shared_ptr<T>;\n\n\nstruct Node{\n    int self;\n    vector<sp<Node>> children;\n    Node() : self(0) {}\n};\n\nint solve(sp<Node> n){\n    if(n->children.size() == 0){\n        return n->self / 2 + 1;\n    }else{\n        vector<int> chi;\n        for(auto c : n->children){\n            chi.push_back(solve(c));\n        }\n        int ret = 0;\n        sort(chi.begin(),chi.end());\n        for(int i=0;i<chi.size()/2+1;i++){\n            ret += chi[i];\n        }\n        return ret;\n    }\n}\n\ntypedef string::const_iterator Cursor;\n\nsp<Node> number(Cursor&);\nsp<Node> parse(Cursor& c){\n    if(*c == '['){\n        vector<sp<Node>> children;\n        c++;\n        while(true){\n            children.push_back(parse(c));\n            if(*c == ']'){\n                c++;\n                sp<Node> n = make_shared<Node>();\n                n->children = children;\n                return n;\n            }\n        }\n    }else{\n        return number(c);\n    }\n}\n\nsp<Node> number(Cursor& c){\n    stringstream ss;\n    while(isdigit(*c)){\n        ss << *c;\n        c++;\n    }\n    int ret;ss >> ret;\n    sp<Node> n = make_shared<Node>();\n    n->self = ret;\n    return n;\n}\n\nint main(){\n    int n;cin >> n;\n    cin.ignore();\n    for(int i=0;i<n;i++){\n        string s;\n        getline(cin,s);\n        Cursor c = s.begin();\n        sp<Node> n = parse(c);\n        cout << solve(n) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#define MYDEBUG\n#include <bits/stdc++.h>\n#ifdef MYDEBUG\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define ifcin(x) std::ifstream cin(x)\n#else\n#define debug(x)\n#define ifcin(x)\n#endif\n#define ll long long\n#define ull unsigned long long\n#define eps 1e-14\n#define all(x) x.begin(), x.end()\n#define rep(i,from,to) for(int i=from; i<to; ++i)\n#define REP(i,from,to) for(int i=from; i<=to; ++i)\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::vector;\nusing std::ostream;\nusing std::swap;\nusing std::max;\nusing std::min;\nusing std::queue;\nusing std::string;\ntypedef struct edge edge;\ntypedef struct unionfind unionfind;\ntypedef struct Graph Graph;\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<T>& v) {\n  out << \"[\";\n  size_t last = v.size() - 1;\n  for (size_t i = 0; i < v.size(); ++i) {\n    out << v[i];\n    if (i != last)\n      out << \",\";\n  }\n  out << \"]\";\n  return out;\n}\n\nstruct unionfind{\n\tvector<int> par;\n\tvector<int> rank;\n\tunionfind(int n) {\n\t\tpar = vector<int>(n);\n\t\trank = vector<int>(n);\n\t\trep(i,0,n){//0????????????\n\t\t\tpar[i] = i;\n\t\t\trank[i] = 1;\n\t\t}\n\t}\n\t\n\tint find(int x){\n\t\tif(par[x] == x){\n\t\t\treturn x;\n\t\t}\n\t\treturn par[x] = find(par[x]);\n\t}\n\t\n\tbool same(int x, int y){\n\t\treturn find(x) == find(y);\n\t}\n\t\n\tvoid unite(int x, int y){//rank[x] > rank[y]?????????\n\t\tx = find(x);\n\t\ty = find(y);\n\t\tif(x == y){\n\t\t\treturn;\n\t\t}\n\t\tif(rank[x] < rank[y]){\n\t\t\tswap(x,y);\n\t\t}\n\t\tpar[y] = x;\n\t\trank[x] += rank[y];\n\t\trank[y] = 0;\n\t}\n\t\n\tint size(int x){\n\t\treturn rank[x];\n\t}\n};\n\nstruct edge{\n\tint from, to;\n\tdouble cost;\n\tedge(int from, int to, double cost){\n\t\tthis->from = from;\n\t\tthis->to = to;\n\t\tthis->cost = cost;\n\t}\n\t\n\tedge(){\n\t\t*this = edge(-1,-1,-1);\n\t}\n\t\n\tbool operator<(const edge& e) const{\n\t\treturn cost < e.cost;\n\t}\n};\n\nclass Graph{\n\tpublic:\n\tstatic double kruskal(vector<edge>& es, int n){\n\t\tsort(all(es));\n\t\tdouble min_cost = 0;\n\t\tunionfind uf(n);\n\t\trep(i,0,es.size()){\n\t\t\tedge &e = es[i];\n\t\t\tif(!uf.same(e.from, e.to)){\n\t\t\t\tmin_cost += e.cost;\n\t\t\t\tuf.unite(e.from, e.to);\n\t\t\t}\n\t\t}\n\t\treturn min_cost;\n\t}\n};\n\nint id_global;\nconst int maxa = 32768;\nint dp[maxa];\nstruct area{\n\tstring str;\n\tvector<area> child;\n\tint depth, popu, id;\n\tarea(string str){\n\t\tthis->str = str;\n\t\tthis->id = id_global;\n\t\tid_global++;\n\t\tchild = vector<area>();\n\t\tdivide(str);\n\t\tpopu = 0;\n\t}\n\tint getPopulation(){\n\t\tif(child.size()==0){\n\t\t\tstring s = str;\n\t\t\ts = s.erase(0,1);\n\t\t\ts = s.erase(s.size()-1,1);\n\t\t\treturn popu = std::atoi(s.c_str());\n\t\t}else{\n\t\t\tint ret = 0;\n\t\t\trep(i,0,child.size()){\n\t\t\t\tret += child[i].getPopulation();\n\t\t\t}\n\t\t\treturn popu = ret;\n\t\t}\n\t}\n\tarea(){\n\t\t*this = area(\"\");\n\t}\n\tbool operator<(const area& a) const{\n\t\treturn popu < a.popu;\n\t}\n\tvoid sortChild(area a){\n\t\tif(a.child.size() != 0){\n\t\t\tsort(all(a.child));\n\t\t\trep(i, 0, a.child.size()){\n\t\t\t\tsortChild(a.child[i]);\n\t\t\t}\n\t\t}\n\t}\n\tint overHalf(area& a){\n\t\tif(dp[a.id]!=0){\n\t\t\treturn dp[a.id];\n\t\t}\n\t\tint ret = 0;\n\t\tint half = (a.child.size() + 1) / 2;\n\t\tif(half==0){\n\t\t\tret = (a.popu + 1) / 2;\n\t\t}else{\n\t\t\trep(i,0,half){\n\t\t\t\tret += overHalf(a.child[i]);\n\t\t\t}\n\t\t}\n\t\treturn dp[a.id] = ret;\n\t}\n\tvoid divide(string s){\n\t\tif(s[0]=='['&&s[1]!='['){\n\t\t\treturn;\n\t\t}\n\t\tstring str = \"\";\n\t\tint depth = 0;\n\t\tfor(size_t i = 1; i + 1 < s.size(); ++i){\n\t\t\tstr+=s[i];\n\t\t\tif(s[i]=='['){\n\t\t\t\tdepth++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t\tif(depth==0&&str!=\"\"){\n\t\t\t\tchild.push_back(area(str));\n\t\t\t\tstr = \"\";\n\t\t\t}else if(depth<0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\ntypedef struct area area;\narea root;\nstring s;\nint n;\nvoid solve(){\n\tifcin(\"/storage/emulated/0/AppProjects/AtCoder/jni/in.txt\");\n\tcin>>n;\n\trep(test_case,0,n){\n\t\tcin >> s;\n\t\tid_global = 0;\n\t\tmemset(dp, 0, sizeof(dp));\n\t\troot = area(s);\n\t\troot.getPopulation();\n\t\troot.sortChild(root);\n\t\tcout << root.overHalf(root) << endl;\n\t}\n}\n\nint main() {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n/*{{{*/  //template\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nconstexpr int INF = numeric_limits<int>::max()/2;\nconstexpr long long LINF = numeric_limits<long long>::max()/3;\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define fi first\n#define se second\n#define all(v) (v).begin(),(v).end()\n#define sz(x) (int)(x).size()\n#define debug(x) cerr<<#x<<\":\"<<x<<endl\n#define debug2(x,y) cerr<<#x<<\",\"<<#y\":\"<<x<<\",\"<<y<<endl\n//struct fin{ fin(){ cin.tie(0); ios::sync_with_stdio(false); } } fin_;\nstruct Double{ double d; explicit Double(double x) : d(x){} };\nostream& operator<<(ostream& os,const Double x){ os << fixed << setprecision(20) << x.d; return os; }\ntemplate<typename T> ostream& operator<<(ostream& os,const vector<T>& vec){ os << \"[\"; for(const auto& v : vec){ os << v << \",\"; } os << \"]\"; return os; }\ntemplate<typename T,typename U> ostream& operator<<(ostream& os,const pair<T,U>& p){ os << \"(\" << p.first << \",\"<< p.second <<\")\"; return os; }\ntemplate<typename T> ostream& operator<<(ostream& os,const set<T>& st){ os<<\"{\"; for(T v:st) os<<v<<\",\"; os <<\"}\"; return os; }\ntemplate<typename T,typename U> inline void chmax(T &x,U y){ if(y>x) x = y; }\ntemplate<typename T,typename U> inline void chmin(T &x,U y){ if(y<x) x = y; }\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\nll gcd(ll a,ll b){ if(b==0) return a; else return gcd(b,a%b); }\n//constexpr double eps = 1e-14; \nconstexpr double eps = 1e-10; \nconstexpr ll mod = 1e9+7;\nconst int dx[]={1,0,-1,0} ,dy[] = {0,1,0,-1};\n/*}}}*/\n\nstruct Node{\n    public:\n        int num;\n        vector<Node> nodes;\n        int need()const{\n            if(nodes.size()==0) return num/2+1;\n            else{\n                vector<int> v;\n                for(auto& node : nodes){\n                    v.emplace_back(node.need());\n                }\n                sort(all(v));\n                int ret = 0;\n                for(int i=0;i<(v.size()+1)/2;i++){\n                    ret += v[i];\n                }\n                return ret;\n            }\n        }\n};\n\nNode parse(const string& s,int& cur){\n    assert(s[cur]=='[');\n    if(s[cur+1]=='['){\n        cur++;\n        Node ret;\n        while(cur < s.size() and s[cur]=='['){\n            ret.nodes.emplace_back(parse(s,cur));\n        }\n        assert(s[cur]==']');\n        cur++;\n        return ret;\n    }else{\n        cur++;\n        int num = 0;\n        while(s[cur]!=']'){\n            num = num * 10 + s[cur]-'0';\n            cur++;\n        }\n        assert(s[cur]==']');\n        cur++;\n        Node ret;\n        ret.num = num;\n        return ret;\n    }\n}\n\nvoid solve(){\n    string s; cin >> s;\n    int n = s.size();\n    int cur=0;\n    Node root = parse(s,cur);\n    cout << root.need() << endl;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    rep(i,n) solve();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECURE_NO_WARNINGS 1\n# define _USE_MATH_DEFINES\n# include <iostream>\n# include <numeric>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <complex>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <forward_list>\n# include <map>\n# include <stack>\nusing namespace std;\n# define INF ((int)(1<<25))\n# define REP(i,n) for(int i=0;i<(int)n;i++)\n# define FOR(i,n) REP(i,n)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define TORAD 2.0*M_PI/360.0\n# define INT(x) int x;cin>>x;\n# define STR(x) string x;cin>>x;\n# define ALL(x) begin(x),end(x)\n# define RALL(x) (x).rbegin(),(x).rend()\n# define DEBUG(x) cout<<#x<<\":\"<<x<<endl;\n# define EPS 1e-12\n#ifdef _MSC_VER\n#include <intrin.h>\n#define __builtin_popcount __popcnt\n#endif\ntypedef long long lint;\ntypedef vector<bool> vb;\ntypedef vector<char> vc;\ntypedef vector<int> vi;\ntypedef vector<lint> vl;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<int, pii> piii;\nconst int dx[4] = { 0,1,0,-1 }, dy[4] = { -1,0,1,0 };\ntemplate<class T> void debug(T a) { for (auto i : a)cout << i << endl; }\n\nlint calc(string &a)\n{\n\tif ('1' <= a.front() && a.front() <= '9')\n\t{\n\t\tstringstream ss;\n\t\twhile ('0' <= a.front() && a.front() <= '9')\n\t\t{\n\t\t\tss << a.front();\n\t\t\ta.erase(a.begin());\n\t\t}\n\t\tlint ans; ss >> ans;\n\t\treturn ans/2+1;\n\t}\n\telse if(a.front()=='[')\n\t{\n\t\tvl v;\n\t\ta.erase(a.begin());\n\t\twhile (a.front() != ']')\n\t\t{\n\t\t\tv.push_back(calc(a));\n\t\t}\n\t\ta.erase(a.begin());\n\t\tsort(ALL(v));\n\t\tlint ans = 0;\n\t\tFOR(i, v.size() / 2 + 1)\n\t\t{\n\t\t\tans += v[i];\n\t\t}\n\t\treturn ans;\n\t}\n}\n\nint main()\n{\n\tINT(n);\n\tFOR(data, n)\n\t{\n\t\tSTR(x);\n\t\tlint ans = calc(x);\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<iostream>\n#include<vector>\n#include<typeinfo>\n#include<algorithm>\n#define MAX_LEN 10000\n#define MAX_NC 3333\nusing namespace std;\n\nstring s;\n\nint find(int l){\n  int cnt=1;\n  int r=l;\n  char temp;\n  while(cnt){\n    temp=s[++r];\n    if(temp=='[')cnt++;\n    else if(temp==']')cnt--;\n  }\n  return r;\n}\n\n\nint f(int from,int to){\n  vector<int> nv;\n  string temp1;\n  int nd;\n  int v=0;\n  int l,r;\n\n  if(s[from+1]=='['){\n    nd=0;\n    l=from+1;\n    while(l<to){\n      r=find(l);\n      nv.push_back(f(l,r));\n      nd++;\n      l=r+1;\n    }\n    sort(nv.begin(),nv.end());\n    for(int i=0;i<(nd+1)/2;++i){\n      v+=nv[i];\n    }\n      return v;\n  }else{\n    while(s[from+1]!=']'){\n      temp1+=s[from+1];\n      from=from+1;\n    }\n    int a=stoi(temp1);\n    temp1.clear();\n    return (a+1)/2;\n  }\n\n}\n\nint main(){\n  int n;\n  cin>>n;\n  while(n--){\n    int cnt=0;\n    cin>>s;\n    int ans=f(0,s.size()-1);\n    cout<<ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <string>\n#include <set>\n\nusing namespace std; \n\nstring solve(string s, bool flag){\n\tint l, p, c, d;\n\tstring b, z, t;\n\tbool e1, e2, e3;\n\tmultiset<int> r;\n\n\tt=s;\n\tz=\"\";\n\te1=false; e2=false; e3=false;\n\tl = s.length();\n\td=0;\n\tfor(int j=0; j<l; j++,d++){\n\t\tb = s.substr(j,1);\n\t\tif((b==\"[\")||(j==l-1)){\n\t\t\tif((e2)||(j==l-1)){\n\t\t\t\tmultiset<int>::iterator it = r.begin();\n\t\t\t\tint sum=0;\n\t\t\t\tfor(int k=0; k <= r.size()/2; it++,k++){\n\t\t\t\t\tif(flag){sum = sum + ((*it)/2)+1;}\n\t\t\t\t\telse{sum = sum+(*it);}\n\t\t\t\t}\n\t\t\t\tr.clear();\n\t\t\t\tostringstream os;\n\t\t\t\tos << sum;\n\t\t\t\tt.insert(c-1, os.str());\n\t\t\t\td = d + (os.str()).length();\n\t\t\t}\n\t\t\te1=false;e2=false;\n\t\t}\n\t\telse if(b==\"]\"){\n\t\t\tif(z!=\"\"){\n\t\t\t\tp = atoi(z.c_str());\n\t\t\t\tr.insert(p);\n\t\t\t\tz=\"\";\n\t\t\t\tt.erase(c-1,d-c+2); e3=false;\n\t\t\t\td=c-2;\n\t\t\t}\n\t\t\tif(e1){e2=true;}\n\t\t\te1=true;\n\t\t}\n\t\telse{z=z+b; if(!e3){c=d; e3=true;}}\n\t}\n\n\tif(t.substr(1,1)==\"[\"){ return solve(t,false);}\n\telse {return t.substr(1,t.length()-2);}\n}\n\nint main()\n{\n\tint n;\n\tstring s;\n\n\tcin >> n;\n\tfor(int i=0; i<n; i++){\n\t\tcin >> s;\n\t\tcout << solve(s,true) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"iostream\"\n#include \"climits\"\n#include \"list\"\n#include \"queue\"\n#include \"stack\"\n#include \"set\"\n#include \"functional\"\n#include \"algorithm\"\n#include \"string\"\n#include \"map\"\n#include \"unordered_map\"\n#include \"unordered_set\"\n#include \"iomanip\"\n#include \"cmath\"\n#include \"random\"\n#include \"bitset\"\n#include \"cstdio\"\n\nusing namespace std;\n\nconst long long int MOD = 1000000007;\nconst long double EPS = 1e-8;\n\nlong long int N, M, K, H, W, L, R;\n\npair<int,int> Search(string &s, int depth, int num) {\n\tvector<int>v;\n\tstring t;\n\tfor (int i = num; i < s.size(); i++) {\n\t\tif (s[i] == '[') {\n\t\t\tauto box = Search(s, depth + 1, i + 1);\n\t\t\tv.push_back(box.first);\n\t\t\ti = box.second;\n\t\t}\n\t\telse if (s[i] == ']') {\n\t\t\tif (!t.empty()) {\n\t\t\t\tv.push_back(stoi(t) / 2 + 1);\n\t\t\t\tt.clear();\n\t\t\t}\n\t\t\tsort(v.begin(), v.end());\n\t\t\tint n = v.size();\n\t\t\tint ret = 0;\n\t\t\tfor (int j = 0; j <= n / 2; j++) {\n\t\t\t\tret += v[j];\n\t\t\t}\n\t\t\treturn { ret,i };\n\t\t}\n\t\telse {\n\t\t\tt.push_back(s[i]);\n\t\t}\n\t}\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tcout << Search(s, 1, 1).first << endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <cstring>\n#include <cmath>\nusing namespace std;\n\n#define rep(i,n) for(int i=0; i<n; i++)\n#define reps(i,s,n) for(int i=s; i<n; i++)\n#define all(x) x.begin(), x.end()\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n\nint main() {\n    int n;\n    cin >> n;\n    rep(t, n) {\n        string in, num=\"\";\n        vector< vector<int> > g(5000);\n        int cur = 0;\n        cin >> in;\n        rep(i, in.length()) {\n            if( in[i] == '[' ) {\n                num = \"\";\n                cur++;\n            } else if( in[i] == ']' ) {\n                int sum = 0;\n                if( in[i-1] == ']' ) {\n                    sort( g[cur].begin(), g[cur].end() );\n                    rep(j, (g[cur].size()+1)/2) {\n                        sum += g[cur][j];\n                    }\n                } else {\n                    sum = (atoi( num.c_str() )+1)/2;\n                }\n                cur--;\n                g[cur].push_back(sum);\n                g[cur+1].clear();\n            } else {\n                num += in[i];\n            }\n        }\n        cout << g[0][0] << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <cstdio>\n#include <vector>\n#include <numeric>\n#include <algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nint idx;\nchar s[10001];\n\nint dfs(){\n\tvector<int> a;\n\tif(isdigit(s[idx])){\n\t\tint b=0;\n\t\twhile(isdigit(s[idx])) b=10*b+(s[idx++]-'0');\n\t\ta.push_back(b/2+1);\n\t}\n\telse{\n\t\twhile(s[idx]=='['){\n\t\t\tidx++;\n\t\t\ta.push_back(dfs());\n\t\t\tidx++;\n\t\t}\n\t}\n\tsort(a.begin(),a.end());\n\treturn accumulate(a.begin(),a.begin()+a.size()/2+1,0);\n}\n\nint solve(){\n\tscanf(\"%s\",s);\n\tidx=0;\n\treturn dfs();\n}\n\nint main(){\n\tint T; scanf(\"%d\",&T);\n\twhile(T--) printf(\"%d\\n\",solve());\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\n\nconst char *p;\n\nint solve() {\n  int ret = 0;\n  \n  ++p;\n  if(*p == '[') {\n    vector<int> v;\n    while(*p == '[') v.push_back(solve());\n    sort(v.begin(), v.end());\n    for(int i = v.size()/2; i>=0; i--) ret += v[i];\n  } else {\n    char *e;\n    ret = strtol(p, &e, 10)/2 + 1;\n    p = e;\n  }\n  ++p;\n  return ret;\n}\n\nint main() {\n  int n;\n  string s;\n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin>>s;\n    p = s.c_str();\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <set>\n#include <map>\n#include <queue>\n#include <stack>\n#include <string>\n#include <fstream>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<pii,int> ppi;\n\nll analize(string s){\n  bool isOk=true;\n  for(int i=1;i<(int)s.size()-1;i++){\n    if(!(s[i]>='0'&&s[i]<='9')){\n      isOk=false;\n    }\n  }\n  if(isOk){\n    return atoi(s.substr(1,(int)s.size()-2).c_str())/2+1;\n  }\n  int cnt=0;\n  vector<ll> v;\n  int a,b;\n  stack<int> stk;\n  for(int i=1;i<(int)s.size()-1;i++){\n    if(s[i]=='['){\n      stk.push(i);\n      cnt++;\n      //a=i;\n    }\n    else if(s[i]==']'){\n      a=stk.top();\n      stk.pop();\n      cnt--;\n      b=i;\n    }\n    if(cnt==0){\n      v.push_back(analize(s.substr(a,b-a+1)));\n    }\n  }\n  sort(v.begin(),v.end());\n  ll sum=0;\n  for(int i=0;i<=(int)v.size()/2;i++){\n    sum+=v[i];\n  }\n  return sum;\n}\n\nint main(){\n\n  int N;\n  cin>>N;\n  for(int i=0;i<N;i++){\n    string s;\n    cin>>s;\n    cout<<analize(s)<<endl;\n  }\n  \n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++){\n    string S;\n    cin >> S;\n    int N = S.size();\n    stack<vector<int>> st;\n    st.push(vector<int>(0));\n    for (int j = 0; j < N; j++){\n      if (S[j] == '['){\n        st.push(vector<int>(0));\n      } else if (S[j] == ']'){\n        if (S[j - 1] != ']'){\n          st.top()[0] = (st.top()[0] + 1) / 2;\n        }\n        sort(st.top().begin(), st.top().end());\n        int cnt = st.top().size();\n        int sum = 0;\n        for (int k = 0; k < (cnt + 1) / 2; k++){\n          sum += st.top()[k];\n        }\n        st.pop();\n        st.top().push_back(sum);\n      } else {\n        if (st.top().empty()){\n          st.top().push_back(0);\n        }\n        st.top().back() *= 10;\n        st.top().back() += S[j] - '0';\n      }\n    }\n    cout << st.top()[0] << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "// #define _GLIBCXX_DEBUG // for STL debug (optional)\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\n#include <bitset>\nusing namespace std;\nusing ll = long long int;\nusing int64 = long long int;\n \ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n \nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconst int INF = 1LL << 29;\nconst ll LONGINF = 1LL << 60;\nconst ll MOD = 1000000007LL;\n\nvoid solve() {\n    string s; cin >> s;\n\n    int ptr = 0;\n    auto parse = [&](auto &&self) -> int {\n        int depth = 0;\n        if(s[ptr] == '[') {\n            assert(s[ptr++] == '[');\n            vector<int> nums;\n            while(s[ptr] != ']') {\n                nums.emplace_back(self(self));\n            }\n            assert(s[ptr++] == ']');\n            sort(nums.begin(), nums.end());\n            return accumulate(nums.begin(), nums.begin() + (nums.size()+1)/2, 0);\n        }\n        else {\n            int res = 0;\n            while(ptr < s.size() and isdigit(s[ptr])) res = res*10 + (s[ptr++]-'0');\n            return (res + 1) / 2;\n        }\n    };\n    int ans = parse(parse);\n    printf(\"%d\\n\", ans);\n}\n\nint main() {\n    int N; scanf(\"%d\", &N);\n    while(N--) solve();\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define REP(i,n) for(int i=0;i<n;i++)\n#define FOR(i,n1,n2) for(int i=n1;i<n2;i++)\n#define bFOR(i,n1,n2) for(int i=n1;i>=n2;i--)\n#define speed_up    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n\ntypedef long long int ll;\ntypedef pair<int,int> Pi;\nconst int INF=(ll)(1LL<<31)-1;\nconst ll INFl=(ll)9223372036854775807;\nconst int MAX=10000;\nconst ll MOD=(ll)1e9+7;\nll gcd(ll a,ll b){return b?gcd(b,a%b):a;}\nll lcm(ll a,ll b){return a/gcd(a, b)*b;}\n//int dx[4]={1,0,-1,0},dy[4]={0,1,0,-1};\n\ntemplate<typename A, size_t N, typename T>\nvoid Fill(A (&array)[N], const T &val){\n    std::fill( (T*)array, (T*)(array+N), val );\n}\n\nint n;\n\nint calc(string t){\n\tt=t.substr(1,t.size()-1);\n\tif(t[0]!='['){\n\t\treturn atoi(t.c_str())/2+1;\n\t}\n\tint st=0;\n\tint co=0;\n\tvector<int> yy;\n\tfor(int i=0;i<t.size();i++){\n\t\tif(t[i]=='[')co++;\n\t\tif(t[i]==']')co--;\n\t\tif(co==0){\n\t\t\tyy.push_back(calc(t.substr(st,i-st+1)));\n\t\t\tst=i+1;\n\t\t}\n\t}\n\tsort(yy.begin(),yy.end());\n\tint ans=0;\n\tfor(int i=0;i<yy.size()/2+1;i++){\n\t\tans+=yy[i];\n\t}\n\treturn ans;\n}\nint main(){\n\tcin>>n;\n\tREP(i,n){\n\t\tstring t;\n\t\tcin>>t;\n\t\tcout<<calc(t)<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nint n;\nchar c[10010];\nint nextNum;\n\nint check(int f) {\n  if (c[f + 1] >= '0' && c[f + 1] <= '9') {\n    int i = f + 1, counter = 0;\n    while (c[i] != ']') counter *= 10, counter += (int)c[i++] - '0';\n    nextNum = i + 1;\n    return counter;\n  }\n  vector<int> vec;\n  int i = f + 1;\n  bool flag = c[f + 2] >= '0' && c[f + 2] <= '9';\n  while (1) {\n    if (c[i] == '[') {\n      vec.push_back(check(i));\n      if (c[i + 1] >= '0' && c[i + 1] <= '9') flag = true;\n      i = nextNum;\n      if(c[i] == ']') {\n        break;\n      }\n    }\n  }\n  sort(vec.begin(), vec.end());\n  int sum = 0, size = (vec.size() + 1) / 2;\n  for (int i = 0; i < size; i++) {\n    if (flag) sum += (vec[i] + 1) / 2;\n    else sum += vec[i];\n  }\n  nextNum = i + 1;\n  return sum;\n}\n\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", c);\n    printf(\"%d\\n\", check(0));\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\n#define REP(i, n) for ( int i = 0; i < n; i++ )\n\nusing namespace std;\n\nstring line;\nint p, MAX_DEPTH;\n\n// 0~9のcharならtrue\nbool isNum(char c) {\n    int n = c - '0';\n    return 0 <= n && n <= 9;\n}\n\n// 数字のみをパース\nint number() {\n    int n = 0;\n    while(isNum(line[p])) n = n * 10 + line[p++] - '0';\n    return n;\n}\n\n// []をパース、数字はパースしない\nint dfs(int depth) {\n    int bkt = 0, sum = 0;\n    vector<int> ret;\n\n    while(1) {\n        if ( line[p] == '[' ) {\n            p++;\n            bkt++;\n            ret.push_back( dfs(depth+1) );\n        } else if ( line[p] == ']' ) {\n            bkt--;\n            if ( bkt == -1 || depth == 0 ) {\n                break;\n            } else {\n                p++;\n            }\n        } else {\n            return number();\n        }\n    }\n\n    // ソートして過半数を取り出し、過半数を計算して合計値を返す\n    sort(ret.begin(), ret.end());\n\n    // 最初の選挙区だけ得票数が過半数になる\n    REP(i, ret.size()/2+1) {\n        if ( depth == MAX_DEPTH ) sum += ret[i] / 2 + 1;\n        else sum += ret[i];\n    }\n    return sum;\n}\n\nint main() {\n    int n;\n \n    cin >> n;\n\n    while(n--) {\n        MAX_DEPTH = 0;\n        p = 0;\n        cin >> line;\n\n        // 最初の括弧の連続から最大の深さを計る（深さは一様）\n        // 最初（最深）の計算のみ住民の投票なので過半数にする\n        int i = 0;\n        while(line[++i] == '[') ++MAX_DEPTH;\n\n        cout << dfs(0) << endl;\n    }  \n   \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\n\n//?????????????????????????????????????????????????????????????\\¨??°\nint calc(string _input)\n{\n //   cout << _input << endl;\n\n\n    if(_input[0] != '[')\n    {\n      //  cout << stoi(_input) / 2 + 1 << endl;\n        return stoi(_input) / 2 + 1;\n    }\n\n    auto in_size = _input.size();\n    vector< int > vote_num(0);\n\n    auto count = 0;\n    auto start_index = 0;\n\n    for(int i = 0; i < in_size; i++)\n    {\n        if(_input[i] == '[')\n        {\n            count++;\n        }\n        if(_input[i] == ']')\n        {\n            count--;\n        }\n\n        if(count == 0)\n        {\n            vote_num.push_back( calc(_input.substr(start_index + 1, i - start_index - 1) ) );\n            start_index = i + 1;\n        }\n    }\n\n    sort(vote_num.begin(), vote_num.end());\n\n    int ans = 0;\n    for(int i = 0; i < vote_num.size() / 2 + 1; i++)\n        ans += vote_num[i];\n\n    return ans;\n}\n\nint main()\n{\n    auto n = 0;\n    cin >> n;\n\n    string input;\n\n    for(int i = 0; i < n; i++)\n    {\n        cin >> input;\n        cout << calc(input) << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<math.h>\n#include<string>\n#include<algorithm>\n#include<functional>\n#include<vector>\n#include<set>\n#include<map>\n#define INF 999999\n#define EPS 1.0e-6\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\n\nint n;\n\nint kaiseki(string s,int y) {\n\tint i = 0;\n\tstring ns = \"\";\n\n\tint d = 0;\n\tif (s[0] == '['&&s[1] != '[') {\n\t\t\n\t\ti = 1;\n\t\twhile (s[i] != ']') {\n\t\t\td = d * 10 + (int)(s[i] - '0');\n\n\t\t\ti++;\n\t\t}\n\n\t\treturn d;\n\t}\n\twhile (i < s.length()) {\n\t\tif (s[i] == '['||s[i]==']') {\n\t\t\tns += s[i];\n\t\t\t//cout << \"a\" << endl;\n\t\t\ti++;\n\t\t}\n\t\telse {\n\t\t\tns.pop_back();\n\t\t\tint j = i;\n\t\t\tvector<int>m;\n\t\t\t//cout << \"c\" << endl;\n\t\t\twhile (1) {\n\t\t\t\t//cout << \"b\" << endl;\n\t\t\t\tint d = 0;\n\t\t\t\twhile (s[j] != ']') {\n\t\t\t\t\td = d * 10 + (int)(s[j] - '0');\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif(y==0)m.push_back(d / 2 + 1);\n\t\t\t\telse m.push_back(d);\n\t\t\t\tif (s[j + 1] == ']') {\n\t\t\t\t\tsort(m.begin(), m.end());\n\n\t\t\t\t\tint x=0;\n\t\t\t\t\t/*\n\t\t\t\t\tfor (int k = 0; k < (int)m.size(); k++) {\n\t\t\t\t\t\tcout << m[k] << endl;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tfor (int k = 0; k <=(int) m.size() / 2; k++) {\n\t\t\t\t\t\tx += m[k];\n\n\t\t\t\t\t}\n\t\t\t\t\tns += to_string(x);\n\t\t\t\t\tns += ']';\n\t\t\t\t\ti = j + 2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tj += 2;\n\t\t\t}\n\n\t\t}\n\t}\n\t//cout << ns << endl;\n\treturn kaiseki(ns,1);\n}\n\nint main()\n{\n\tcin >> n;\n\tstring s;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\n\t\tint ans=0;\n\t\tans = kaiseki(s,0);\n\t\tcout << kaiseki(s,0)<< endl;\n\n\n\n\t}\n\n\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <memory>\n#include <cstring>\n#include <cassert>\n#include <numeric>\n#include <sstream>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <cctype>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\n#define REP2(i, m, n) for (int i = (int)(m); i < (int)(n); i++)\n#define REP(i, n) REP2(i, 0, n)\n#define ALL(S) (S).begin(), (S).end()\ntypedef long long ll;\n\nint rec(const string &str, size_t &cur){\n  cur++;\n  if (isdigit(str[cur])){\n    int number = 0;\n    while (isdigit(str[cur])){\n      number = number * 10 + str[cur++] - '0';\n    }\n    cur++;\n    return (number + 1) / 2;\n    \n  } else {\n    vector<int> nums;\n    while (str[cur] == '['){\n      nums.push_back(rec(str, cur));\n    }\n    cur++;\n\n    int res = 0;\n    sort(ALL(nums));\n    REP(i, nums.size() / 2 + 1){\n      res += nums[i];\n    }\n    return res;\n  }\n}\n\nint main(){\n  ios::sync_with_stdio(false);\n  int T;\n  cin >> T;\n  \n  while (T--){\n    string str;\n    cin >> str;\n\n    size_t cur = 0;\n    cout << rec(str, cur) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <fstream>\n#include <stack>\n#include <string>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint N;\nconst int MAX = 10001;\nll dp[MAX];\nint max_dep = 0;\n\nll solve(string n_str, int dep){\n    max_dep = max(dep, max_dep);\n    vector<string> strs;\n    string str = \"\";\n    stack<char> st;\n    for(int i=0; i<n_str.size(); i++){\n        if(st.size() >= 1){\n            str = str + n_str[i];\n        }\n        if(n_str[i] == '['){\n            st.push(n_str[i]);\n        }\n        else if(n_str[i] == ']'){\n            st.pop();\n        }\n        if(st.size() == 0){\n            if(!str.empty())\n                strs.push_back(str.substr(0, str.size()-1));\n            str = \"\";\n        }\n    }\n\n\n    // for(string u : strs){\n    //     cout << u << endl;\n    // }\n\n    vector<int> vec;\n    for(int i=0; i<strs.size(); i++){\n        if(isdigit(strs[i][0])){\n            vec.push_back(stoi(strs[i]));\n        }\n        else{\n            ll tmp = solve(strs[i], dep+1);\n            vec.push_back(tmp);\n        }\n    }\n    sort(vec.begin(), vec.end());\n    ll res = 0;\n    for(int i=0; i<vec.size()/2 + 1; i++){\n        if(dep == max_dep)\n            res += vec[i]/2+1;\n        else{\n            res += vec[i];\n        }\n    }\n    // cout << dep << \":\" << res<< endl;\n    return res;\n}\nint main(){\n    cin >> N;\n    for(int i=0; i<N; i++){\n        string str;\n        cin >> str;\n        // cout << str << endl;\n        max_dep = 0;\n        // for(int k=0; k<str.size(); k++){\n        //     if(k) cout << \" \";\n        //     cout << dp[k];\n        // }\n        // cout << endl;\n        cout << solve(str.substr(1, str.size()-2), 0) << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n#define SIZE 5000\n\nint Change(int n, int i) {\n\treturn n * 10 + i;\n}\n\nint main() {\n\tstring str;\n\tbool num;\n\tint count, n;\n\tint N[SIZE];\n\tvector<int> P;\n\tint s;\n\tint res;\n\n\tcin >> s;\n\tfor (int i = 0;i < s;i++) {\n\t\tcin >> str;\n\t\tcount = 0;\n\t\tn = 0;\n\t\tnum = false;\n\t\tfor (int j = 0;j < str.size();j++) {\n\t\t\tif (str[j] == '[') {\n\t\t\t\tP.push_back(count);\n\t\t\t}\n\t\t\telse if (str[j] == ']') {\n\t\t\t\tif (num) {\n\t\t\t\t\tN[count] = (n + 1) / 2;\n\t\t\t\t\tcount++;\n\t\t\t\t\tnum = false;\n\t\t\t\t\tn = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsort(N + P.back(), N + count);\n\t\t\t\t\tres = 0;\n\t\t\t\t\tfor (int k = 0;k < (count - P.back() + 1) / 2;k++) {\n\t\t\t\t\t\tres += N[k + P.back()];\n\t\t\t\t\t}\n\t\t\t\t\tcount = P.back();\n\t\t\t\t\tN[count] = res;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\tP.pop_back();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnum = true;\n\t\t\t\tn = Change(n, str[j] - 48);\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tcout << N[0] << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#pragma GCC optimize (\"O3\",\"unroll-loops\")\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<cstdlib>\n#include<cassert>\n\n#include<cmath>\n#include<functional>\n#include<algorithm>\n#include<numeric>\n\n#include<vector>\n#include<string>\n#include<queue>\n#include<stack>\n#include<deque>\n#include<set>\n#include<map>\n#include<bitset>\n#include<tuple>\n\n#define TEST {IS_TEST=true;}\n#define fi first\n#define se second\n#define pb(x) emplace_back(x)\n#define pf(x) emplace_front(x)\n#define emp(x) emplace(x)\n#define mp(x,y) make_pair(x,y)\n\nusing namespace std;\nusing ll = int_fast64_t;\nusing v_b = vector <bool>; using v_ll = vector <ll>; using str = string; using v_str = vector <string>; using p_ll = pair < ll,ll >;\nusing vv_b = vector < v_b >; using vv_ll = vector < v_ll >; using vp_ll = vector < p_ll >;\nusing vvv_ll = vector < vv_ll >; using vvp_ll = vector < vp_ll >;\nusing ld = long double; using v_ld = vector <ld>; using vv_ld = vector<v_ld>;\n\nbool IS_TEST=false;\nll ll_min64=1LL<<63;\nll ll_max64=~ll_min64;\nll ll_min32=1LL<<31;\nll ll_max32=~ll_min32;\n\nll MOD = 1000000007;\n\n/*displaying functions for debug*/\ntemplate<class T> void show2(const T &x){cerr << x;}\ntemplate<class T1,class T2> void show2(const pair<T1,T2> &x){\n  cerr << \"{\" << show2(x.first) << \",\" << show2(x.second) << \"}\";\n}\ntemplate<class T> void show(const T &x){\n  if (!IS_TEST) return; show2(x); cerr << \"\\n\";\n}\ntemplate<class T> void v_show(const T &v, ll n=-1){\n  if (!IS_TEST) return; auto itr=v.begin(); ll m=n;\n  while(itr!=v.end() && m!=0 ){ show2(*itr); cerr << \" \"; itr++; m--;}\n  cerr << \"\\n\";\n}\ntemplate<class T> void vv_show(const T &v, ll n=-1){\n  if (!IS_TEST) return;\n  cerr << \"--------------------------------\\n\";\n  auto itr=v.begin(); ll m=n;\n  while(itr!=v.end() && m!=0 ){ v_show(*itr,n); itr++; m--;}\n  cerr << \"--------------------------------\\n\";\n}\n/*--------------------------------*/\n\n/*loading integers*/\nvoid load(ll& x1){ cin >> x1; }\nvoid load(ll& x1,ll& x2){ cin >> x1 >> x2; }\nvoid load(ll& x1,ll& x2,ll& x3){ cin >> x1 >> x2 >> x3; }\nvoid load(ll& x1,ll& x2,ll& x3,ll& x4){ cin >> x1 >> x2 >> x3 >> x4; }\nvoid v_load(ll n, v_ll& v1, ll head=0, ll tail=0, ll init=0){\n    ll m=n+head+tail; v1.assign(m,init);\n    for (ll i=0;i<n;i++){ scanf(\"%lld\",&v1[i+head]); }\n}\nvoid v_load(ll n, v_ll& v1 ,v_ll& v2, ll head=0, ll tail=0, ll init=0){\n    ll m=n+head+tail; v1.assign(m,init); v2.assign(m,init);\n    for (ll i=0;i<n;i++){ scanf(\"%lld%lld\",&v1[i+head],&v2[i+head]); }\n}\nvoid v_load(ll n, v_ll& v1 ,v_ll& v2, v_ll& v3, ll head=0, ll tail=0, ll init=0){\n    ll m=n+head+tail; v1.assign(m,init); v2.assign(m,init); v3.assign(m,init);\n    for (ll i=0;i<n;i++){ scanf(\"%lld%lld%lld\",&v1[i+head],&v2[i+head],&v3[i+head]); }\n}\nvoid v_load(ll n, v_ll& v1 ,v_ll& v2, v_ll& v3, v_ll& v4, ll head=0, ll tail=0, ll init=0){\n    ll m=n+head+tail; v1.assign(m,init); v2.assign(m,init); v3.assign(m,init); v4.assign(m,init);\n    for (ll i=0;i<n;i++){ scanf(\"%lld%lld%lld%lld\",&v1[i+head],&v2[i+head],&v3[i+head],&v4[i+head]); }\n}\n/*--------------------------------*/\n\nv_ll local_sort(ll x1=ll_max64, ll x2=ll_max64, ll x3=ll_max64, ll x4=ll_max64){\n    v_ll x{x1,x2,x3,x4};\n    sort(x.begin(),x.end());\n    return x;\n}\n\nll max(ll x,ll y){return x>y?x:y;}\nll min(ll x,ll y){return x<y?x:y;}\n\nll max(v_ll::iterator b,v_ll::iterator e){\n    ll ans=*b;\n    while (b<e) {ans=max(ans,*b);b++;}\n    return ans;\n}\nll argmax(v_ll::iterator b,v_ll::iterator e){\n    ll ans=0, cnt=0, val=*b;\n    while (b<e) { if (val<*b) {ans=cnt; val=*b;} cnt++; b++;}\n    return ans;\n}\nll min(v_ll::iterator b,v_ll::iterator e){\n    ll ans=*b;\n    while (b<e) {ans=min(ans,*b);b++;}\n    return ans;\n}\nll argmin(v_ll::iterator b,v_ll::iterator e){\n    ll ans=0, cnt=0, val=*b;\n    while (b<e) { if (val>*b) {ans=cnt; val=*b;} cnt++; b++;}\n    return ans;\n}\nll sum(v_ll::iterator b,v_ll::iterator e){\n    ll ans=0;\n    while (b<e) {ans+=*b;b++;}\n    return ans;\n}\n\ntemplate<class T> bool chmax(T& x,const T& y){ if (x>=y) return false; x=y; return true;}\ntemplate<class T> bool chmin(T& x,const T& y){ if (x<=y) return false; x=y; return true;}\n\ntemplate<class T> void quit(T x){cout << x << endl; exit(0);}\nvoid yesno(bool x){cout << (x?\"Yes\":\"No\") <<endl;}\n\nll rup(ll x,ll y){return (x-1)/y+1;}\nll rem(ll x,ll y){ ll z=x%y; return z>=0?z:z+y; }\n\ntemplate<typename T>\nv_ll index_sort(const vector<T>& ref){\n    v_ll idx(ref.size());\n    iota(idx.begin(),idx.end(),0);\n    sort(idx.begin(),idx.end(),[&](auto &x, auto &y){if (ref[x]<ref[y]) return true;});\n}\n\n//setprecision(digit)\n//sort(##.begin(),##.end(),[&](auto &x, auto &y){if (x<y) return true;});\n//ll ok=0,ng=0; while(abs(ok-ng)>1){ll mid=(ok+ng)/2; (true?ok:ng)=mid;}\n\nstruct dat{\n    dat(){}\n    bool operator < (const dat& rhs)const {return false; }\n};\n\nint main(){\n    ll T;\n    cin >> T;\n    for(ll i=0;i<T;i++){\n        string S;\n        cin >> S;\n        vv_ll val(200);\n        ll level=0;\n        ll idx=0;\n        while(idx<S.size()){\n            if (S[idx]=='['){\n                level++;\n                idx++;\n            }else if (S[idx]>='0'&&S[idx]<='9'){\n                ll a=S[idx]-'0';\n                idx++;\n                while(S[idx]>='0'&&S[idx]<='9'){\n                    a*=10;\n                    a+=S[idx]-'0';\n                    idx++;\n                }\n                val[level].pb(a/2+1);\n            }else{\n                ll a=0;\n                sort(val[level].begin(),val[level].end());\n                for(ll i=0;i<val[level].size()/2+1;i++){\n                    a+=val[level][i];\n                }\n                val[level-1].pb(a);\n                val[level].clear();\n                level--;\n                idx++;\n            }\n        }\n        cout << val[0][0] << \"\\n\";\n    }\n}\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<int(n);++i)\n#define all(a) a.begin(),a.end()\n  \n// T := [T][T]... | num \n  \nint solve(string const &s, int &i){\n    vector<int> v;\n    if(isdigit(s[i])){\n        int num = 0;\n        while(isdigit(s[i])){\n            num = num*10 + s[i]-'0';\n            i++;\n        }\n        return num+1;\n    }\n    while(s[i] == '['){\n        i++; // [\n        v.push_back(solve(s,i));\n        i++; // ]\n    }\n  \n    sort(all(v));\n    int n = v.size(), sum = 0;\n    rep(k,(n+1)/2){\n        sum += v[k];\n    }\n    return sum;\n}\n  \nint main(void){\n    int T;\n    cin>>T;\n    rep(_,T){\n        string s;\n        cin>>s;\n        int index = 0;\n        cout<<(solve(s,index)+1)/2<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<queue>\n\nusing namespace std;\n\nstring line;\n\ntypedef struct{\n  int ans;\n  int s;\n}orig;\n\n\n/*一つの選挙の最小人数を求める\n来るデータ~~~~~~]~~~~]~~~]\n頭の[は取ってある\n関数内で]を取ってかえす\n*/\norig rec(int s){\n  priority_queue<int,vector<int>,greater<int> > box;\n  int ans=0,i=0;\n  orig val;\n  while(s<line.size() && line.at(s)=='['){\n    s++;\n    val=rec(s);\n    box.push(val.ans);\n    s=val.s;\n  }\n\n  if(s<line.size() && line.at(s)==']'){\n    /*第一弾以外のとき*/\n    //cout<< box.size()<<\"size \";\n    for(i=0;i<=box.size()/2+1;i++){\n      ans+=box.top();\n      //      cout << box.top()<<\"top \";\n      box.pop();\n    }\n    s++;     \n  }\n  else {\n    /*[でも]でもない　つまり数字　つまり第一段 line = 122121][~~~ で来る\n     条件よりboxは今empty*/\n    int i=0;\n    while(line.at(s+i)!=']')i++;\n    ans=stoi(line.substr(s,i))/2+1;//iはat(i)で]の位置、at(i)はsubstrでi+1番目\n    //        cout<<ans<<\"&  \";\n    s+=i+1;\n  }\n  orig a;\n  a.ans=ans;a.s=s;\n  return a;\n  \n}\n\nint main(){\n  int n,i;\n  orig ans;\n  cin >>n;\n  for(i=0;i<n;i++){\n    //string line;\n    line=\"\";\n    cin >> line;//getline(cin,line);\n    ans=rec(1);\n    cout <<ans.ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for (int (i)=(0);(i)<(int)(n);++(i))\nusing ll = long long;\nusing P = pair<ll, ll>;\nusing namespace std;\n\ntemplate<class t> void vin(vector<t>& v, int n) {\n    v.resize(n);\n    for (int i = 0; i < n; ++i) {\n        cin >> v[i];\n    }\n}\n\nint number(string& s, int& i) {\n    int n = 0;\n    while (s[i] != ']') {\n        n *= 10;\n        n += s[i] - '0';\n        i++;\n    }\n    return n;\n}\n\nint solve(string& s, int& i) {\n    if (s[i] != '[') return -1;\n    if (s[++i] != '[') return number(s, i)/2 + 1;\n    vector<int> a;\n    while (s[i] == '[') {\n        a.push_back(solve(s, i));\n        i++;\n    }\n    sort(a.begin(), a.end());\n    int ans = 0;\n    rep(j, a.size()/2+1) ans += a[j];\n    return ans;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    rep(i, n) {\n        string s;\n        cin >> s;\n        int idx=0;\n        cout << solve(s, idx) << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring s;\nint N;\n\nint main() {\n  cin >> N;\n  while ( N-- ) {\n    cin >> s;\n    vector<int> data[10000];\n    int now = 0;\n    for ( int i = 0; i < s.size(); i++ ) {\n      if ( s[i] == '[' ) now++;\n      else if ( s[i] == ']' ) {\n\tif ( data[now].size() ) {\n\t  sort(data[now].begin(), data[now].end());\n\t  int tmp = 0;\n\t  for ( int j = 0; j < (data[now].size() + 1) / 2; j++ ) {\n\t    tmp += data[now][j];\n\t  }\n\t  data[now].clear();\n\t  data[now - 1].push_back(tmp);\n\t}\n\tnow--;\n      }\n      else {\n\tint tmp = 0;\n\tfor(; s[i] != ']'; i++) {\n\t  tmp *= 10;\n\t  tmp += s[i] - '0';\n\t}\n\ti--;\n\tdata[now].push_back((tmp + 1) / 2);\n      }\n    }\n\n    cout << data[0][0] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <vector>\nusing namespace std;\n\nstring str;\nconst char *p;\n\nint parse() {\n\n  p ++;\n  \n  switch(*p) {\n  case '[':\n    {\n      vector<int> v;\n      while(*p == '[') {\n\tv.push_back( parse() );\n\tp ++;\n      }\n      \n      sort(v.begin(), v.end());\n\n      int sum = 0;\n      for(int i=0; i<v.size()/2+1; i++) {\n\tsum += v[i];\n      }\n\n      return sum;\n    }\n\n  default:\n    if(isdigit(*p)) {\n      char *e;\n      int num = strtol(p, &e, 10);\n      p = e;\n      return num/2+1;\n    }\n  }\n}\n\nint main() {\n  int n;\n  \n  cin >> n; cin.ignore();\n  for(int i=0; i<n; i++) {\n    getline(cin, str);\n    p = &str[0];\n\n    cout << parse() << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <valarray>\n#include <vector>\n\n#define EPS 1e-9\n#define INF 1070000000LL\n#define MOD 1000000007LL\n#define fir first\n#define foreach(it,X) for(auto it=(X).begin();it!=(X).end();it++)\n#define ite iterator\n#define mp make_pair\n#define mt make_tuple\n#define rep(i,n) rep2(i,0,n)\n#define rep2(i,m,n) for(int i=m;i<(n);i++)\n#define pb push_back\n#define sec second\n#define sz(x) ((int)(x).size())\n\nusing namespace std;\n\nstruct timer{\n\ttime_t start;\n\ttimer(){start=clock();}\n\t~timer(){cerr<<1.*(clock()-start)/CLOCKS_PER_SEC<<\" secs\"<<endl;}\n};\n\ntypedef istringstream iss;\ntypedef long long ll;\ntypedef pair<ll,ll> pi;\ntypedef stringstream sst;\ntypedef vector<ll> vi;\n\nint n;\nstring s;\nint cur;\n\nint num(){\n\tint res=0;\n\twhile(isdigit(s[cur])){\n\t\tres=res*10+s[cur]-'0';\n\t\tcur++;\n\t}\n\treturn res;\n}\n\nint f(){\n\tassert(s[cur]=='[');\n\tcur++;\n\tif(isdigit(s[cur])){\n\t\tint res=num();\n\t\tcur++;\n\t\treturn (res+1)/2;\n\t}else{\n\t\tvi v;\n\t\twhile(s[cur]=='['){\n\t\t\tv.pb(f());\n\t\t}\n\t\tcur++;\n\t\tint res=0;\n\t\tsort(v.begin(),v.end());\n\t\trep(i,(sz(v)+1)/2)res+=v[i];\n\t\treturn res;\n\t}\n}\n\nvoid main2(){\n\tcur=0;\n\tcout<<f()<<endl;\n}\n\nint main(){\n\tcin.tie(0);\n\tios_base::sync_with_stdio(0);\n\t\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>s;\n\t\ts+=\"#\";\n\t\tmain2();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#define loop(i,a,b) for(int i=a;i<b;i++)\n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define all(in) in.begin(),in.end()\nusing namespace std;\ntypedef long long ll;\ntypedef int Def;\ntypedef pair<Def,Def> pii;\ntypedef vector<Def> vi;\ntypedef vector<vi> vvi;\nDef inf = sizeof(Def) == sizeof(long long) ?  2e18:1e9+10;\nstring s;\nint t;\nint f(){\n\tif(isdigit(s[t])){\n\t\tint a=0;\n\t\twhile(isdigit(s[t]))a*=10,a+=s[t++]-'0';\n\t\tt++;\n\t\treturn a/2+1;\n\t}\n\tvi in;\n\twhile(s[t]=='['){\n\t\tt++;\n\t\tin.pb(f());\n\t\t\n\t}\n\tint sum=0;\n\tsort(all(in));\n\trep(i,in.size()/2+1)sum+=in[i];\n\tt++;\n\treturn sum;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>s;\n\t\tt=1;\n\t\tcout<<f()<<endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint pos;\nstring str;\n\nint number() {\n\n  // sentou digit\n  int ret = 0;\n  \n  while(isdigit(str[pos])) {\n    ret *= 10;\n    ret += str[pos]-'0';\n    pos ++;\n  }\n  // saigo not digit\n  return ret;\n}\n\nvector<int> rec() {\n  \n  vector<int> ret;\n  pos ++;\n  \n  if(isdigit(str[pos])) {\n    ret.push_back(number()/2+1);\n    return ret;\n  }\n  \n  if(str[pos] == '[') {\n    while(str[pos] == '[') {\n      vector<int> r = rec();\n      assert(str[pos] == ']');\n      pos ++;\n      assert(r.size() == 1);\n      ret.push_back(r[0]);\n    }\n    \n    sort(ret.begin(), ret.end());\n    \n    int sum = 0;\n    for(int i=0; i<(int)ret.size()/2 + 1; i++) {\n      sum += ret[i];\n    }\n    \n    return vector<int>(1, sum);\n  }\n  pos ++;\n  return ret;\n}\n\nint main() {\n  \n  int Tc; cin >> Tc;\n  \n  for(int Tcnt=1; Tcnt<=Tc; Tcnt++) {\n    cin >> str;\n    pos = -1;\n    vector<int> ret = rec();\n    assert(ret.size() == 1);\n    cout << ret[0] << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#ifndef _WIN32\n#include<iostream>\n#endif\n#include<cmath>\n#include<iomanip>\n#include<algorithm>\n#include<functional>\n#include<vector>\n#include<queue>\n#include<string>\n#include<stdlib.h>\n\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<n;i++)\n\nstring s;\nint id;\n\nint mincost(){\n\tid ++;\n\tif (s[id] != '['){\n\t\tint num = 0;\n\t\twhile (isdigit(s[id])){\n\t\t\tnum *= 10;\n\t\t\tnum += s[id] - '0';\n\t\t\tid++;\n\t\t}\n\t\tid++;\n\t\treturn (num + 1) / 2;\n\n\t}\n\telse{\n\t\tvector<int> c;\n\t\twhile (s[id] != ']'){\n\t\t\tc.push_back(mincost());\n\t\t}\n\t\tsort(c.begin(), c.end());\n\t\tint num = c.size() + 1;\n\t\tnum /= 2;\n\t\tint res = 0;\n\t\tREP(i, num){\n\t\t\tres += c[i];\n\t\t\t//cout << c[i] << endl;\n\t\t}\n\t\tid++;\n\t\treturn res;\n\n\t}\n\n\n\n}\n\nint main() {\n\tcin.tie(0);\n\tios_base::sync_with_stdio(false);\n\n\tcout << fixed << setprecision(30);\n\tint n;\n\tcin >> n;\n\tREP(qqqq, n){\n\t\tcin >> s;\n\t\tid = 0;\n\t\tcout << mincost() << endl;\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <complex>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\nint ind;\nstring str;\n\nint operate(void);\n\nint main(void){\n    int n; cin >> n;\n    while(n--){\n        cin >> str;\n        ind = 0;\n\n        cout << operate() << endl;\n    }\n\n\treturn 0;\n}\n\nint operate(void){\n    int ret = 0;\n\n    if(str.at(++ind) == '['){\n        vi nums;\n        while(str.at(ind) == '['){\n            nums.pb(operate());\n        }\n\n        sort(all(nums));\n\n        rep(i, nums.size() / 2 + 1){\n            ret += nums[i];\n        }\n    }\n    else{\n        int pos = str.find(']', ind);\n        ret = toInt(str.substr(ind, pos - ind)) / 2 + 1;\n        ind = pos;\n    }\n\n    ++ind;\n    return ret;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define reps(i,f,n) for(int i=f;i<int(n);i++)\n#define rep(i,n) reps(i,0,n)\n\nint toint(string s){\n  stringstream sst;\n  sst<<s;\n  int a;\n  sst>>a;\n  return a;\n}\n\nint rec(string s){\n\n  int kk = 0;\n  rep(i,s.size()){\n    if(s[i]=='[' || s[i]==']')kk++;\n  }\n  if(kk==2){\n    return (toint(s.substr(1,s.size()-2))+1)/2;\n  }\n  //cout<<s<<endl;\n  int cnt = 0;\n  int st = 0;\n  vector<int> cand;\n  rep(i,s.size()){\n    if(s[i]=='['){\n      if(cnt==1)st = i;\n      cnt++;\n    }\n    if(s[i]==']'){\n      cnt--;\n      if(cnt==1)cand.push_back(rec(s.substr(st,i-st+1)));\n    }\n  }\n  sort(cand.begin(),cand.end());\n\n  int sum = 0;\n  rep(i,(cand.size()+1)/2){\n    sum += cand[i];\n  }\n  return sum;\n}\nint solve(string s){\n  return rec(s);\n}\n\nint main(){\n  int n;\n  cin>>n;\n  rep(i,n){\n    string s;\n    cin>>s;\n    printf(\"%d\\n\",solve(s));\n  }\n}"
  },
  {
    "language": "C++",
    "code": "/*\n *\n *\n */\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define LOG(...) fprintf(stderr, __VA_ARGS__)\n//#define LOG(...)\n#define FOR(i, a, b) for(int i = (int)(a); i < (int)(b); ++i)\n#define REP(i, n) for(int i = 0; i < (int)(n); ++i)\n#define RREP(i, n) for(int i = (int)(n - 1); i >= 0; --i)\n#define ALL(a) (a).begin(), (a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define EXIST(s, e) ((s).find(e) != (s).end())\n#define SORT(c) sort(ALL(c))\n#define RSORT(c) sort(RALL(c))\n#define SQ(n) (n) * (n)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<char> vc;\ntypedef vector<pii> vpi;\ntypedef vector<pll> vpl;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vc> vvc;\ntypedef vector<vll> vvll;\n\nint number(string s, int &i){\n  int n = 0;\n  for (; isdigit(s[i]); i++) {\n    n = n * 10 + s[i] - '0';\n  }\n  // LOG(\"-> %d\\n\", n);\n  return n / 2 + 1;\n}\n\nint dfs(string s, int &i){\n  vi vote;\n  for(; i < s.length(); i++) {\n    if (s[i] == '[') {\n      i++;\n      if (isdigit(s[i])) {\n        int n = number(s, i);\n        vote.push_back(n);\n      }else if (s[i] == '[') {\n        vote.push_back(dfs(s, i));\n      }\n    }else if(s[i] == ']') break;\n  }\n  SORT(vote);\n  int res = 0;\n  REP(i, vote.size() / 2 + 1){\n    res += vote[i];\n    // LOG(\"====== %d\\n\", vote[i]);\n  }\n  return res;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  REP(i, n){\n    string s;\n    cin >> s;\n    int idx = 1;\n    cout << dfs(s, idx) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\n\nint dfs(string s){\n    //cerr<<s<<endl;\n    vector<int> ret;\n    int n=s.size();\n    if(s[0]!='['){\n        int k=0;\n        for(int i=0;i<n;i++){\n            k*=10;\n            k+=(int)s[i]-'0';\n        }\n        //cerr<<k<<endl;\n        ret.push_back(k/2+1);\n    }\n    else {\n        int cnt=0;\n        int l=0;\n        for(int i=0;i<n;i++){\n            if(s[i]=='['){\n                if(cnt==0) l=i+1;\n                cnt++;\n            }\n            else if(s[i]==']'){\n                cnt--;\n                if(cnt==0){\n                    int get=dfs(s.substr(l,i-l));\n                    ret.push_back(get);\n                    //cerr<<get<<endl;\n                }\n            }\n        }\n    }\n    sort(ret.begin(),ret.end());\n    int sum=0;\n    for(int i=0;i<(ret.size()+1)/2;i++){\n        sum+=ret[i];\n        //cerr<<ret[i]<<endl;\n    }\n    return sum;\n\n}\n\n\nint main(){\n    ios::sync_with_stdio(false);\n\tcin.tie(0);\n\n    int n;\n    cin>>n;\n    string s;\n    for(int qu=0;qu<n;qu++){\n        cin>>s;\n        int ans=dfs(s);\n        \n        cout<<ans<<endl;\n\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "/**\n *    author:  otera    \n**/\n#include<iostream>\n#include<string> \n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<cmath>\n#include<algorithm> \n#include<functional>\n#include<iomanip>\n#include<queue>\n#include<deque>\n#include<ciso646>\n#include<random>\n#include<map>\n#include<set>\n#include<complex>\n#include<bitset>\n#include<stack>\n#include<unordered_map>\n#include<utility>\n#include<cassert>\nusing namespace std;\n\n//#define int long long\ntypedef long long ll;\ntypedef unsigned long long ul;\ntypedef unsigned int ui;\ntypedef long double ld;\nconst int inf=1e9+7;\nconst ll INF=1LL<<60 ;\nconst ll mod=1e9+7 ;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define per(i,n) for(int i=n-1;i>=0;i--)\n#define Rep(i,sta,n) for(int i=sta;i<n;i++)\n#define rep1(i,n) for(int i=1;i<=n;i++)\n#define per1(i,n) for(int i=n;i>=1;i--)\n#define Rep1(i,sta,n) for(int i=sta;i<=n;i++)\ntypedef complex<ld> Point;\nconst ld eps = 1e-8;\nconst ld pi = acos(-1.0);\ntypedef pair<int, int> P;\ntypedef pair<ld, ld> LDP;\ntypedef pair<ll, ll> LP;\n#define fr first\n#define sc second\n#define all(c) c.begin(),c.end()\n#define pb push_back\n#define debug(x)  cerr << #x << \" = \" << (x) << endl;\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n\nint parent[20000];\nint num[20000];\n\nint toint(string u) {\n    int ret = 0;\n    reverse(all(u));\n    int pw = 1;\n    rep(i, u.size()) {\n        ret += (u[i] - '0') * pw;\n        pw *= 10;\n    }\n    return ret;\n}\n\nvector<vector<int>> g;\n\nvoid dfs(int v, int p) {\n    if(g[v].size() == 1 and g[v][0] == p) return;\n    vector<int> res;\n    for(int nv: g[v]) {\n        if(nv == p) continue;\n        dfs(nv, v);\n        res.pb(num[nv]);\n    }\n    sort(all(res));\n    int ret = 0;\n    rep(i, ((int)res.size() + 1) / 2) ret += res[i];\n    // cerr << ret << endl;\n    num[v] = ret;\n}\n\nvoid solve() {\n    rep(i, 20000) {\n        parent[i] = num[i] = inf;\n    }\n\tstring s; cin >> s;\n    int n = (int)s.size();\n    int d = 0, cur = 0;\n    int nxt = 1;\n    int i = 0;\n    parent[0] = -1;\n    string t = \"\";\n    for(; i < n; ++ i) {\n        if(s[i] == '[') {\n            ++ d;\n            parent[nxt] = cur;\n            cur = nxt;\n            ++ nxt;\n        } else if(s[i] == ']') {\n            -- d;\n            cur = parent[cur];\n        } else {\n            t += s[i];\n            while(i + 1 < n and (s[i + 1] != '[' and s[i + 1] != ']')) {\n                ++ i;\n                t += s[i];\n            }\n            // cerr << toint(t) << endl;\n            num[cur] = (toint(t) + 1) / 2;\n            t = \"\";\n        }\n    }\n    g.assign(nxt, vector<int>());\n    rep(i, nxt) {\n        if(parent[i] != -1) {\n            g[i].pb(parent[i]);\n            g[parent[i]].pb(i);\n            // cerr << num[i] << \" \";\n        }\n    }\n    // cerr << endl;\n    dfs(0, -1);\n    cout << num[0] << endl;\n}\n\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\t//cout << fixed << setprecision(10);\n\tint t; cin >> t; rep(i, t)solve();\n\t//solve();\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nlong long int read_num(int& i,string& s){\n  int prei=i;\n  for(;s[i]!=']';i++){\n    assert(isdigit(s[i]));\n  }\n  return stoi(s.substr(prei,i-prei));\n}\n\nlong long int solve(int &i,string &s){\n  assert(s[i]!=']');\n  i++;\n  if(isdigit(s[i])){\n    long long int val=read_num(i,s);\n    return val/2+1;\n  }\n  priority_queue<long long int,vector<long long int>,greater<long long int>> que;\n  while(i<s.size() && s[i]!=']'){\n    long long int val=solve(i,s);\n    que.push(val);\n    i++;\n  }\n  int place=que.size();\n  long long int val=0;\n  for(int j=0;j<place/2+1;j++){\n    long long int vote=que.top();\n\n    val+=vote;\n    que.pop();\n  }\n\n  return val;\n}\n\nint main(){\n  int n;\n  cin>>n;\n  for(int loop=0;loop<n;loop++){\n    string s; cin>>s;\n    int i=0;\n    cout<<solve(i,s)<<endl;\n  }\n  return 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \nusing namespace std;\n \nint toint(string &str, int &i){\n    int j = 0;\n    while('0' <= str[i+j] && str[i+j] <= '9'){\n        j++;\n    }\n    int ret = stoi(str.substr(i,j));\n    ret = (ret+1)/2;\n    i+=j;\n    return ret;\n}\n \nint calc(string &str, int &i, int end){\n    vector<int> v;\n    int ret = 0;\n    for(;i < end;i++){\n        if(str[i] == '['){\n            int idx = i+1;\n            i++;\n            int d = 1;\n            while(1){\n                if(str[idx] == ']') d--;\n                else if(str[idx] == '[')d++;\n \n                if(d == 0) break;\n                idx++;\n            }\n            v.push_back(calc(str, i, idx));\n            i = idx;\n        }\n        else if(str[i] == ']'){\n            continue;\n        }\n        else{\n            //cout << str[i] << endl;\n            v.push_back(toint(str,i));\n        }\n    }\n    sort(v.begin(), v.end());\n    for(int j = 0; j < (v.size()+1)/2; j++){\n        ret += v[j];\n    }\n    //for(int j = 0; j < v.size(); j++){\n    return ret;\n}\n \n \nint main(){\n    int nn; cin >> nn;\n    for(int z = 0; z < nn; z++){\n        string str;cin >> str;\n        int i = 1;\n        cout << calc(str, i, str.size()) << endl;\n    }\n \n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <cctype>\nusing namespace std;\n\ntypedef string::const_iterator iter;\nint number(iter &it);\n\nint expr(iter &it) {\n  ++it; // skip [\n  int res;\n  if(isdigit(*it)) {\n    res = number(it) / 2 + 1;\n  }\n  else {\n    vector<int> vec;\n    while(*it == '[') {\n      vec.push_back(expr(it));\n    }\n    sort(vec.begin(), vec.end());\n    res = 0;\n    for(int i = 0; i < (int)vec.size() / 2 + 1; ++i) {\n      res += vec[i];\n    }\n  }\n  ++it; // skip ]\n  return res;\n}\n\nint number(iter &it) {\n  int res = 0;\n  while(isdigit(*it)) {\n    res *= 10;\n    res += *it - '0';\n    ++it;\n  }\n  return res;\n}\n\nint main() {\n  int N; cin >> N;\n  while(N--) {\n    string s; cin >> s;\n    iter it = s.begin();\n    cout << expr(it) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<stack>\n#include<cstdlib>\nusing namespace std;\n\nint main(){\n\tint n;\n\tstring set;\n\tstack<int> st[2000];\n\t\n\tcin >> n;\n\twhile(n > 0){\n\t\tint count = 0;\n\t\tstring val;\n\t\tcin >> set;\n\t\tfor(int i=0; i<set.length(); i++){\n\t\t\tif(set[i] == '['){\n\t\t\t\tcount++;\n\t\t\t}else if(set[i-1] == ']' && set[i] == ']'){\n\t\t\t\tint tmp[5000],sum=0,stsize,p=0;;\n\t\t\t\tstsize = st[count+1].size();\n\t\t\t\twhile(!st[count+1].empty() ){\n\t\t\t\t\ttmp[p++] = st[count+1].top();\n\t\t\t\t\tst[count+1].pop();\n\t\t\t\t}\n\t\t\t\tsort(tmp, tmp+stsize);\n\t\t\t\tfor(int j=0; j<(stsize+1)/2; j++){\n\t\t\t\t\tsum += tmp[j];\n\t\t\t\t}\n\t\t\t\tst[count].push(sum);\n\t\t\t\tcount--;\n\t\t\t}else if(set[i] == ']'){\n\t\t\t\tst[count].push( (atoi(val.c_str())+1)/2 );\n\t\t\t\tcount--;\n\t\t\t}else{\n\t\t\t\tint beg=i;\n\t\t\t\twhile(set[i+1] != ']'){\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tval = set.substr(beg, i-beg+1);\n\t\t\t}\n\t\t}\n\t\tcout << st[1].top() << endl;\n\t\tn--;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint exp(int &pos, string &str){\n  int res = 0;\n  pos++;\n\n  if(str[pos] >= '0' && str[pos] <= '9'){\n    while(str[pos] >= '0' && str[pos] <= '9'){\n      res *= 10;\n      res += str[pos] - '0';\n      pos++;\n    }\n    res = (res + 1) / 2;\n  } else {\n    vector<int> v;\n    while(str[pos] == '['){\n      v.push_back(exp(pos, str));\n      pos++;\n    }\n    sort(v.begin(), v.end());\n    for(int i=0;i<(v.size()+1)/2;i++){\n      res += v[i];\n    }\n  }\n\n  return res;\n}\n\nint solve(string str){\n  int pos = 0;\n  return exp(pos, str);\n}\n\nint main(){\n  int t;\n  cin >> t;\n  while(t--){\n    string str;\n    cin >> str;\n    cout << solve(str) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<bitset>\n#include<cctype>\n#include<climits>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<deque>\n#include<list>\n#include<map>\n#include<set>\n#include<stack>\n#include<string>\n#include<sstream>\n#include<queue>\n#include<vector>\nusing namespace std;\n\ntypedef string::const_iterator state;\nclass parse_error {};\n\nvoid cmpinc(state &it, char expected) {\n\tif (*it == expected) {\n\t\tit++;\n\t}\n\telse {\n\t\tcerr << \"Expected '\" << expected << \"',\";\n\t\tcerr << \"got '\" << *it << \"'\";\n\n\t\tcout << endl;\n\t\tthrow parse_error();\n\t}\n}\n\n/*\n\nEBNF\n\nk = '[' k ']' { '[' k '][' k ']' }|\n\t'[' i ']' { '[' i '][' i ']' }\n\n\n*/\n\nint k(state &it);\nint i(state &it);\n\nint k(state &it) {\n\t//cout << \"k \" << *it << endl;\n\tint ret = 0;\n\tif (*it >= '0'&&*it <= '9') {\n\t\tret = i(it) / 2 + 1;\n\t}\n\telse {\n\t\tvector<int> a;\n\t\twhile (true) {\n\t\t\tif (*it == '[') {\n\t\t\t\tit++; //[\n\t\t\t\ta.push_back(ret = k(it));\n\t\t\t\t//cout << a[a.size() - 1] << endl;\n\t\t\t\tit++; //]\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsort(a.begin(), a.end());\n\t\t\t\tret = 0;\n\t\t\t\tfor (int i = 0; i < a.size() / 2 + 1; i++) {\n\t\t\t\t\tret += a[i];\n\t\t\t\t\t//cout << \"ret \" << ret << endl;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//for (int i = 0; i < a.size(); i++) {\n\t\t//\tcout << \"a \" << a[i] << endl;\n\t\t//}\n\t}\n\treturn ret;\n}\n\nint i(state &it) {\n\tint ret = 0;\n\twhile (isdigit(*it)) {\n\t\tret *= 10;\n\t\tret += *it - '0';\n\t\tit++;\n\t}\n\treturn ret;\n}\n\nint main() {\n\tint n; cin >> n; cin.ignore();\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s; getline(cin, s);\n\t\ts += \"$\";\n\t\tstate it = s.begin();\n\n\t\tcout << k(it) << endl;\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define out(S) cout<<(S)<<endl;\n#define ShowAll(collection) for(auto i:collection){out(i);}\n#define beginend(v) v.begin(),v.end()\n\nusing pii=pair<int,int>;\nusing ll=long long;\ntemplate<typename T> void removeAt(vector<T>& v, int index) { v.erase(v.begin() + index); }\n\nstruct node {\n    vector<node*> next;\n    ll cost;\n    node* before;\n    node(ll c) : cost(c){};\n    node():cost(0){};\n};\n\nnode* make(string s){\n    node* root = new node();\n    auto pos=root;\n    int c=0,n=s.size();\n    while (1){\n        if(c>=n) break;\n        if(s[c]=='['){\n            node* tmp=new node();\n            tmp->before=pos;\n            pos->next.push_back(tmp);\n            pos=tmp;\n            c++;\n        }else if(s[c]==']'){\n            pos=pos->before;\n            c++;\n        }else{\n            int i=c;\n            int num=0;\n            while(1) {\n                if(!isdigit(s[i])) break; else num=num*10+(s[i]-'0');\n                i++;\n            }\n            c=i;\n            pos->cost=(num+1)/2;\n        }\n    }\n    return root;\n}\n\nll dfs(node* now){\n    if(now->cost!=0) return now->cost;\n    int n=(now->next).size();\n    vector<ll> sum;\n    rep(i,n){\n        sum.push_back(dfs(now->next[i]));\n    }\n    sort(beginend(sum));\n    ll rt=0;\n    for (int j = 0; j < (n + 1) / 2; ++j) {\n        rt+=sum[j];\n    }\n    return rt;\n}\n\nint solve(){\n  string s;\n  cin >> s;\n  auto root=make(s);\n  cout<<dfs(root)<<endl;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    rep(i,n) solve();\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nchar str[1000000];\nint calc(int &pos) {\n  assert(str[pos] == '[');\n  pos++;\n  int ret = 0;\n  if (isdigit(str[pos])) {\n    ret = atoi(str + pos) / 2 + 1;\n    while (isdigit(str[pos])) { pos++; }\n    assert(str[pos] == ']');\n    pos++;\n  } else {\n    vector<int> vs;\n    while (str[pos] == '[') { vs.push_back(calc(pos)); }\n    assert(str[pos] == ']');\n    pos++;\n    sort(vs.begin(), vs.end());\n    REP(i, vs.size() / 2 + 1) { ret += vs[i]; }\n  }\n  return ret;\n}\n\nint main() {\n  int test_case;\n  cin >> test_case;\n  while (test_case--) {\n    scanf(\"%s\", str);\n    int pos = 0;\n    printf(\"%d\\n\", calc(pos));\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"iostream\"\n#include \"algorithm\"\n#include \"string\"\n#include \"vector\"\nusing namespace std;\nint parse(string in,int l,int r)\n{\n\tif(in[l]!='[')\n\t{\n\t\tint res=0;\n\t\tfor (int i = l; i < r+1; i++) {\n\t\t\tres*=10;\n\t\t\tres+=in[i]-'0';\n\t\t}\n\t\treturn res/2+1;\n\t}\n\n\tvector<int> res;\n\tint num=0;\n\tint nl,nr;\n\tfor (int i = l; i < r+1; i++) {\n\t\tif(in[i]=='[')\n\t\t{\n\t\t\tif(!num) nl=i;\n\t\t\tnum++;\n\t\t}\n\t\tif(in[i]==']')\n\t\t{\n\t\t\tnum--;\n\t\t\tif(!num) nr=i;\n\t\t}\n\t\tif(num==0&&in[i]==']')\n\t\t{\n\t\t\tint rec=parse(in,nl+1,nr-1);\n\t\t\tres.push_back(rec);\n\t\t}\n\t}\n\tint ans=0;\n\tsort(res.begin(),res.end());\n\tfor (int i = 0; i <= res.size()/2; i++) {\n\t\tans+=res[i];\n\t}\n\treturn ans;\n}\nint main(void)\n{\n\tint n; cin>>n;\n\twhile (n--) {\n\t\tstring in; cin>>in;\n\t\tint res=parse(in,0,in.size()-1);\n\t\tcout<<res<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <map>\n#include <cmath>\n#include <string>\n#include <sstream>\n#include <iomanip>\n#include <complex>\nusing namespace std;\n\n#define ll long long\n#define vvi vector< vector<int> >\n#define vi vector<int>\n#define All(X) X.begin(),X.end()\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n#define pb push_back\n#define pii pair<int,int>\n#define mp make_pair\n#define pi 3.14159265359\n#define shosu(X) fixed << setprecision(X)\nll gcd(ll a,ll b){return b?gcd(b,a%b):a;}\nll lcm(ll a,ll b){return a/gcd(a,b)*b;}\n\nint cur;\nint solve(string str){\n\tcur++;\n    if(str[cur] != '[' && str[cur] != ']'){\n        string t;\n        while(str[cur] != '[' && str[cur] != ']')\n            t += str[cur++];\n        cur++;\n        return stoi(t)/2+1;\n    }\n    vi vote;\n    while(str[cur] != ']'){\n        vote.pb(solve(str));\n    }\n    sort(All(vote));\n    int ret = 0;\n    REP(i,vote.size()/2+1) ret += vote[i];\n    cur++;\n    return ret;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tREP(i,n){\n\t\tstring str;\n\t\tcin >> str;\n\t\tcur = 0;\n\t\tcout << solve(str) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i, a, n) for(ll i = ((ll) a); i < ((ll) n); i++)\nusing namespace std;\ntypedef long long ll;\n\nstring S;\nint i;\n\nll dfs() {\n  ll ret = 0;\n  i++;\n\n  if('0' <= S[i] && S[i] <= '9') {\n    while('0' <= S[i] && S[i] <= '9') {\n      ret = ret * 10 + (S[i] - '0');\n      i++;\n    }\n    ret = (ret + 1) / 2;\n  } else {\n    vector<ll> x;\n    while(S[i] == '[') x.push_back(dfs());\n    sort(x.begin(), x.end());\n    REP(j, 0, (x.size() + 1) / 2) ret += x[j];\n  }\n\n  i++;\n  return ret;\n}\n\nint main(void) {\n  ll N;\n  cin >> N;\n  REP(j, 0, N) {\n    cin >> S;\n    i = 0;\n    cout << dfs() << endl;\n  }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cctype>\n#include <string>\n#include <cassert>\n#include <algorithm>\nusing namespace std;\nstring S;\nint cur = 0;\nint number();\nint parse();\nint sen();\nint main(){\n  int n;cin >> n;\n  for(int i = 0;i < n;i++){\n    cur = 0;\n    cin >> S;\n    cout << parse() << endl;\n  }\n  return 0;\n}\nint parse(){\n  assert(S[cur] == '[');\n  cur++;\n  int tmp =  sen();\n  cur++;\n  return tmp;\n}\n\nint sen(){\n  int num;\n  if(S[cur] >= '0' && S[cur] <= '9'){\n    num = number();\n    //cur++;\n    return num/2+1;\n  }\n  assert(S[cur] == '[');\n  vector<int> tmp;\n  while(S[cur] == '['){\n    tmp.push_back(parse());\n  }\n  sort(tmp.begin(),tmp.end());\n  int s = tmp.size();\n  int ans = 0;\n  for(int i =0 ;i <= s/2;i++){\n    ans += tmp[i];\n  }\n  return ans;\n}\nint number(){\n  assert(isdigit(S[cur]));\n  int num = 0;\n  while(isdigit(S[cur])){\n    num = num*10 + (S[cur]-'0');\n    cur++;\n  }\n  return num;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define GET_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME\n#define pr(...) cerr<< GET_MACRO(__VA_ARGS__,pr8,pr7,pr6,pr5,pr4,pr3,pr2,pr1)(__VA_ARGS__) <<endl\n#define pr1(a) (#a)<<\"=\"<<(a)<<\" \"\n#define pr2(a,b) pr1(a)<<pr1(b)\n#define pr3(a,b,c) pr1(a)<<pr2(b,c)\n#define pr4(a,b,c,d) pr1(a)<<pr3(b,c,d)\n#define pr5(a,b,c,d,e) pr1(a)<<pr4(b,c,d,e)\n#define pr6(a,b,c,d,e,f) pr1(a)<<pr5(b,c,d,e,f)\n#define pr7(a,b,c,d,e,f,g) pr1(a)<<pr6(b,c,d,e,f,g)\n#define pr8(a,b,c,d,e,f,g,h) pr1(a)<<pr7(b,c,d,e,f,g,h)\n#define prArr(a) {cerr<<(#a)<<\"={\";int i=0;for(auto t:(a))cerr<<(i++?\", \":\"\")<<t;cerr<<\"}\"<<endl;}\nusing namespace std;\nusing Int = long long;\nusing _int = int;\nusing ll = long long;\nusing Double = long double;\nconst Int INF = (1LL<<60)+1e9; // ~ 1.15 * 1e18\nconst Int mod = (1e9)+7;\nconst Double EPS = 1e-8;\nconst Double PI = 6.0 * asin((Double)0.5);\nusing P = pair<Int,Int>;\ntemplate<class T> T Max(T &a,T b){return a=max(a,b);}\ntemplate<class T> T Min(T &a,T b){return a=min(a,b);}\ntemplate<class T1, class T2> ostream& operator<<(ostream& o,pair<T1,T2> p){return o<<\"(\"<<p.first<<\",\"<<p.second<<\")\";}\ntemplate<class T1, class T2, class T3> ostream& operator<<(ostream& o,tuple<T1,T2,T3> t){\n  return o<<\"(\"<<get<0>(t)<<\",\"<<get<1>(t)<<\",\"<<get<2>(t)<<\")\";}\ntemplate<class T1, class T2> istream& operator>>(istream& i,pair<T1,T2> &p){return i>>p.first>>p.second;}\ntemplate<class T> ostream& operator<<(ostream& o,vector<T> a){Int i=0;for(T t:a)o<<(i++?\" \":\"\")<<t;return o;}\ntemplate<class T> istream& operator>>(istream& i,vector<T> &a){for(T &t:a)i>>t;return i;}\n//INSERT ABOVE HERE\n\nInt idx;\nstring s;\n\nInt getNum(){\n  Int res = 0;\n  while(isdigit(s[idx])) res = res * 10 + (s[idx++] - '0');\n  return res;\n}\n\nInt calc(){\n  assert(s[idx++] == '[');\n\n  vector<Int> num;\n  while(1){\n    if(isdigit(s[idx])) num.push_back(getNum()/2+1);\n    else if(s[idx] == '['){\n      num.push_back(calc());\n      assert(s[idx++] == ']');\n      continue;\n    }\n    else if(s[idx] == ']') break;\n    else assert(!\"undefined\");\n  }\n\n  sort(num.begin(), num.end());\n  Int res = 0;\n  for(Int i=0;i<=(Int)num.size()/2;i++) res += num[i];\n  return res;\n}\n\nsigned main(){\n  srand((unsigned)time(NULL));\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  Int num_test;\n  cin>>num_test;\n  while(num_test--){\n    cin>>s;\n    idx = 0;\n\n    Int ans = calc();\n    cout<<ans<<endl;\n\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Node {\n\tvector<Node> ch;\n\tint v;\n\n\tNode() { v = -1; }\n};\n\nNode MakeTree(string& s, int& pos) {\n\tNode ret;\n\tif (s[pos] == '[') {\n\t\twhile (s[pos] == '[') {\n\t\t\t++pos;\n\t\t\tret.ch.push_back( MakeTree(s, pos) );\n\t\t}\n\t\t++pos;\n\t}\n\telse {\n\t\tint v = 0;\n\t\twhile ('0' <= s[pos] && s[pos] <= '9') {\n\t\t\tv *= 10;\n\t\t\tv += s[pos] - '0';\n\t\t\t++pos;\n\t\t}\n\t\t++pos;\n\t\tret.v = v/2+1;\n\t}\n\treturn ret;\n}\n\nint cal(Node& node) {\n\tif (node.v > -1) return node.v;\n\n\tvector<int> v;\n\tfor (int i = 0; i < node.ch.size(); ++i) {\n\t\tv.push_back( cal(node.ch[i]) );\n\t}\n\tsort( v.begin(), v.end() );\n\n\tint ret = 0;\n\tfor (int i = 0; i < node.ch.size()/2+1; ++i) {\n\t\tret += v[i];\n\t}\n\treturn ret;\n}\n\nint main() {\n\tint n; cin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring s; cin >> s;\n\t\tNode root;\n\t\t{\n\t\t\tint pos = 0;\n\t\t\troot = MakeTree(s, pos);\n\t\t\tcout << cal(root) << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<ctime>\n\nusing namespace std;\nusing ll = long long;\n\nint dfs(string s){\n  string t = s.substr(1, s.length()-2);\n  if(t[0] != '['){\n    int tmp = stoi(t);\n    return tmp/2+1;\n  }\n  int layer = 0;\n  int st = 0;\n  int ret = 0;\n  vector<int> cands;\n  for(int i = 0; i < t.length(); i++){\n    if(t[i] == '['){\n      if(layer == 0){\n        st = i;\n      }\n      layer++;\n    }\n    if(t[i] == ']'){\n      layer--;\n      if(layer == 0){\n        string sub = t.substr(st, i - st + 1);\n        cands.push_back(dfs(sub));\n      }\n    }\n  }\n  sort(cands.begin(), cands.end());\n  for(int i = 0; i < cands.size()/2 + 1; i++){\n    ret += cands[i];\n  }\n  return ret;\n}\n\nvoid solve(){\n  string s;\n  cin >> s;\n  cout << dfs(s) << endl;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  int ti = clock();\n  // start-----------------------------------------------\n  int n; cin >> n;\n  for(int i = 0; i < n; i++){\n    solve();\n  }\n  // end-----------------------------------------------\n  // cerr << 1.0 * (clock() - ti) / CLOCKS_PER_SEC << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n//#define int long long\n\nusing namespace std;\nusing LL = long long;\nusing P = pair<int, int>;\n\n#define FOR(i, a, n) for(int i = (int)(a); i < (int)(n); ++i)\n#define REP(i, n) FOR(i, 0, n)\n\n#define pb(a) push_back(a)\n#define all(x) (x).begin(),(x).end()\n\nconst int INF = (int)1e9;\nconst LL INFL = (LL)1e15;\nconst int MOD = 1e9 + 7;\n\nint dy[]={0, 0, 1, -1, 0};\nint dx[]={1, -1, 0, 0, 0};\n\ntypedef string::const_iterator State;\nclass ParseError {\n    public:\n        static void inputError(void){\n            cerr << \"error!\" << endl;\n            exit(1);\n        }\n};\n\nint number(State &begin){\n    int ret = 0;\n    while(isdigit(*begin)){\n        ret *= 10;\n        ret += *begin - '0';\n        begin++;\n    }\n    return ret;\n}\n\nint calc(State &begin){\n    if(*begin != '['){\n        ParseError::inputError();\n    }\n    if(*(++begin) != '[') return (number(begin)/2 + 1);\n    vector<int> a;\n    while(*begin == '['){\n        a.pb(calc(begin));\n        begin++;\n    }\n    sort(all(a));\n    int ans = 0;\n    REP(i, a.size()/2+1) ans += a[i];\n    return ans;\n}\n\nsigned main(){\n    int n;\n    cin >> n;\n    REP(i, n){\n        string s;\n        cin >> s;\n\n        State begin = s.begin();\n        int ans = calc(begin);\n        cout << ans << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <algorithm>\n \nusing namespace std;\n \nchar st[10001];\nint pos;\nint mDepth;\n \nint getMini(int depth)\n{\n    if (depth > mDepth) mDepth = depth;\n        vector<int> A;\n        while (st[pos] == '['){\n                pos++;\n                A.push_back(getMini(depth + 1));\n                pos++;\n        }\n        if (st[pos] != 0 && st[pos] != ']'){\n                int x;\n                sscanf(&st[pos], \"%d\", &x);\n                while ('0' <= st[pos] && st[pos] <= '9') pos++;\n                return ((x + 1) / 2);\n        }\n        else {\n                int S = 0;\n                sort(A.begin(), A.end());\n                for (int i = 0; i < (A.size() + 1) / 2; i++)\n                        S += A[i];\n                return (S);\n        }\n}\n \nint main()\n{\n        int T;\n        \n        scanf(\"%d\", &T);\n        \n        for (int i = 0; i < T; i++){\n                scanf(\"%s\", st);\n                pos = 0; mDepth = 0;\n                printf(\"%d\\n\", getMini(0));\n        }\n        return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nstringstream sss;\nvoid dfs(string str,int max);\nint main(){\n  int n,max,no,cnt,j;\n  string str,ss;\n  cin >> n;\n  while(n--){\n    sss.str(\"\");\n    max = cnt = 0;\n    cin >> str;\n    for(int i=0;i < str.size();i++){\n      if(str[i]=='['){\n\tcnt++;\n\tif(max<cnt)max=cnt;\n      } else if(str[i]==']') cnt--;\n      else {\n\tfor(j=i;str[j]!=']';j++);\n\tss = str.substr(i,j-i);\n\tno = atoi(ss.c_str());\n\tsss << (no/2+1);\n\tss = sss.str();\n\tstr.erase(i,j-i);\n\tstr.insert(i,ss);\n\ti= i+ss.size()-1;\n\tsss.str(\"\");\n      }\n    }\n    dfs(str,max);\n  }\n}\nvoid dfs(string str,int max){  //文字列,段階\n  int list[10000],len = 0,cnt,x,l = str.size(),j,sum = 0;\n  string ss;\n  for(x=cnt=0;cnt != max && x < l;x++){\n    if(str[x]=='[') cnt++;\n    else if(str[x]==']') cnt--;\n  }\n  if(x == l){\n    dfs(str,max-1);\n    return;\n  }\n  x--;\n  for(int i=x,flg=0;i < l;i++){\n    if(str[i]>='0' && str[i] <= '9'){\n      for(j=i;str[j]!=']';j++);\n      ss = str.substr(i,j-i);\n      list[len] = atoi(ss.c_str());\n      i = j,len++;\n    } else if(str[i]==']') flg--;\n    if(flg==-1){\n      str.erase(x,i-x);\n      break;\n    }\n  }\n  sort(list,list + len);\n  for(int i=0;i<len/2+1;i++) sum += list[i];\n  sss << sum; ss = sss.str();\n  str.insert(x,ss);\n  sss.str(\"\");\n  if(max==2){\n    l=str.size();\n    for(int i=1;i<l-1;i++) cout << str[i];\n    cout << endl;\n    return;\n  }\n  dfs(str,max);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <list>\n\nusing namespace std;\n\n\n\nint min(char* s) {\n\tint n = 0;\n\tint sum = 0, tmpI = 0;\n\tbool flag = true;\n\tlist<int> intlist;\n\n\tfor(int i = 0; s[i] != '\\0'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tint count = 1, j;\n\t\t\tfor(j = 1; count != 0; j++) {\n\t\t\t\tif(s[j + i] == '[') {\n\t\t\t\t\tcount += 1;\n\t\t\t\t} else if(s[j + i] == ']') {\n\t\t\t\t\tcount -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t//cout << \"Weeeei\" << endl;\n\t\t\tchar* tmpS = new char[200];\n\t\t\tstrncpy(tmpS, s+i+1, j-2);\n\t\t\tint x = min(tmpS);\n\t\t\tintlist.push_back( x );\n\t\t\tn++;\n\t\t\tflag = false;\n\t\t\ti = i + j-1;\n\t\t}\n\t}\n\tif(flag) {\n\t\ttmpI = atoi(s);\n\t\t//cout << tmpI << endl;\n\t\treturn tmpI / 2 + 1;\n\t}\n\n\tintlist.sort();\n\n\tlist<int>::iterator itr = intlist.begin();\n\tfor(int i = 0; i < n/2 + 1; itr++, i++) {\n\t\tsum += *itr;\n\t}\n\n\t/*\n\tbool flag = true;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tif(!flag) {\n\t\t\t\tstring s2;\n\t\t\t\tfor(int j = 0; s[j] != ']' && s[j + 1] != ']'; j++) {\n\t\t\t\t\tstrncpy(s2, s+i, j-i+1);\n\t\t\t\t}\n\t\t\t\tmin(s2);\n\t\t\t} else {\n\t\t\t\tn++:\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tint[] input = new input[n];\n\tint j = 0;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\t;\n\t\t} else if(s[i] == ']') {\n\t\t\tinput[j] = tmpI;\n\t\t\ttmpI = 0;\n\t\t} else {\n\t\t\ttmpI = tmpI * 10 + atoi(c);\n\t\t}\n\t}\n\tsort(input);\n\tfor(int i = 0; i < n/2 + 1; i++) {\n\t\tsum = input[i] / 2 + 1;\n\t}\n\t*/\n\n\treturn sum;\n}\n\n\nint main (void) {\n\tint n;\n\tcin >> n;\n\t\n\tcout << \"ok\" << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar* s = new char[10002];\n\t\tchar c;\n\t\tint j = 0;\n\t\t/*for( ; cin >> c && (c != '\\n' && c != '\\0'); j++) {\n\t\t\ts[j] = c;\n\t\t}\n\t\ts[j] = '\\0';\n\t\t*/\n\t\tcin >> s;\n\t\t//cout << s;\n\t\t//cout << \"abon\" << endl;\n\n\t\tcout << min(s) << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n#include <algorithm>\n#include <utility>\n#include <iomanip>\n\n#define int long long int\n#define rep(i, n) for(int i = 0; i < (n); ++i)\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nconst int INF = 1e15;\nconst int MOD = 1e9+7;\n\nint solve(){\n    char c;\n    cin >> c;\n\n    if(c != '['){\n        int x = 0;\n        while(c != ']'){\n            x *= 10;\n            x += c - '0';\n            cin >> c;\n        }\n        return (x / 2) + 1;\n    }\n\n    vector<int> a;\n    while(c != ']'){\n        a.push_back(solve());\n        cin >> c;\n    }\n    sort(a.begin(), a.end());\n    int n = ((int)a.size()) / 2 + 1;\n\n    int x = 0;\n    rep(i, n){\n        x += a[i];\n    }\n    return x;\n}\n\nsigned main(){\n    int n;\n    cin >> n;\n\n    rep(i, n){\n        char c;\n        cin >> c;\n\n        int ans = solve();\n        cout << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,1,0,-1,1,-1,-1,1};\nconst int dy[]={-1,0,1,0,1,1,-1,-1};\nconst int INF = 1<<30;\nconst double EPS = 1e-8;\n#define PB push_back\n#define mk make_pair\n#define fi first\n#define se second\n#define ll long long\n#define reps(i,j,k) for(int i = (j); i < (k); i++)\n#define rep(i,j) reps(i,0,j)\n#define MOD 1000000007\ntypedef pair<int,int> Pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\nstring s;\nint INDEX;\nint expr(){\n    INDEX++;\n    if(isdigit(s[INDEX])){\n        int num = s[INDEX] - '0';\n        INDEX++;\n        while(isdigit(s[INDEX])){\n            num = num * 10 + s[INDEX] - '0';\n            INDEX++;\n        }\n        INDEX++;\n        return num/2+1;\n    }\n    vi p;\n    while(s[INDEX] != ']'){\n        p.PB(expr());\n    }\n    INDEX++;\n    sort(p.begin(),p.end());\n    int tmp = 0;\n    rep(i,p.size()/2+1){\n        tmp += p[i];\n    }\n    return tmp;\n}\nint main(){\n    int N;\n    cin >> N;\n    while(N--){\n        INDEX = 0;\n        cin >> s;\n        cout << expr() << \"\\n\";\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <algorithm>\n#include <cstdio>\n#include <functional>\n#include <iostream>\n#include <cfloat>\n#include <climits>\n#include <cstring>\n#include <cmath>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <time.h>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\ntypedef pair<ll, int> ll_i;\ntypedef pair<double, int> d_i;\ntypedef pair<ll, ll> ll_ll;\ntypedef pair<double, double> d_d;\nstruct edge { int u, v; ll w; };\n\nll MOD = 1000000007;\nll _MOD = 1000000009;\ndouble EPS = 1e-10;\n\nint foo(string s) {\n\ts = s.substr(1, s.length() - 2);\n\tif (s[0] != '[') {\n\t\tstringstream ss(s);\n\t\tint x; ss >> x;\n\t\treturn x / 2 + 1;\n\t}\n\tint y = 0, _i = 0;\n\tvector<int> v;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '[') y++;\n\t\telse if (s[i] == ']') y--;\n\t\tif (y == 0) {\n\t\t\tstring sub = s.substr(_i, i - _i + 1);\n\t\t\tv.push_back(foo(sub));\n\t\t\t_i = i + 1;\n\t\t}\n\t}\n\tsort(v.begin(), v.end());\n\tint sum = 0;\n\tfor (int i = 0; i < v.size() / 2 + 1; i++)\n\t\tsum += v[i];\n\treturn sum;\n}\n\nint main() {\n\tint T; cin >> T;\n\twhile (T--) {\n\t\tstring s; cin >> s;\n\t\tcout << foo(s) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <string>\n#include <algorithm>\n\n#define rep(i, n) for(int i = 0; i < (n); ++i)\n\nusing namespace std;\n\nint n;\nchar s[10001];\n\nint dfs(int p, int q){\n\t// printf(\"%s\\n\", string(s + p, s + q).c_str());\n\n\tif(s[p] != '['){\n\t\treturn (atoi(string(s + p, s + q).c_str()) + 1) / 2;\n\t}\n\n\tvector<int> v;\n\tint c = 0;\n\tint a = p + 1, b = p + 1;\n\twhile(a < q){\n\t\twhile(s[b] != ']' || c > 0){\n\t\t\tif(s[b] == '['){\n\t\t\t\t++c;\n\t\t\t}\n\t\t\telse if(s[b] == ']'){\n\t\t\t\t--c;\n\t\t\t}\n\t\t\t++b;\n\t\t}\n\t\tv.push_back(dfs(a, b));\n\t\tb += 2;\n\t\ta = b;\n\t}\n\tsort(v.begin(), v.end());\n\tint k = 0;\n\trep(i, (v.size() + 1) / 2){\n\t\tk += v[i];\n\t}\n\treturn k;\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\trep(i, n){\n\t\tscanf(\"%s\", s);\n\t\tprintf(\"%d\\n\", dfs(1, strlen(s) - 1));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n\ntypedef std::string::const_iterator State;\n\nstd::string S;\n\n// paren: [paren*] [number]\n// number: [0-9]+\n\n// int level = 0;\n\nint solve(State& s){\n    s++;\n    if(std::isdigit(*s)){\n        int n = 0;\n        for(;std::isdigit(*s);s++){\n            n = 10 * n + (*s - '0');\n        }\n        s++;\n        // printf(\"%d: %d\\n\", level, n);\n        return (n+1) / 2;\n    }\n\n    // level++;\n    std::vector<int> v;\n    for(;;){\n        if(*s == '['){\n            v.push_back(solve(s));\n        }else{\n            break;\n        }\n    }\n    s++;\n\n    std::sort(v.begin(), v.end());\n    int res = 0;\n    for(int i=0;i<(v.size()+1)/2;i++){\n        res += v[i];\n    }\n\n    // printf(\"%d: %d\\n\", --level, res);\n    return res;\n}\n\nint main(){\n    int N;\n    std::cin >> N;\n\n    while(N--){\n        std::cin >> S;\n\n        State s = S.begin();\n        std::cout << solve(s) << std::endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nstring s;\nint j;\nint dfs(){\n  vector<int>a;\n  int b=0,sum=0;\n  if(isdigit(s[j])){\n    while(isdigit(s[j]))b*=10,b+=s[j++]-'0';\n    a.push_back(b/2+1);\n  }\n  else while(s[j]=='[')j++,a.push_back(dfs()),j++;\n  sort(a.begin(),a.end());\n  for(int i=0;i<=a.size()/2;i++)sum+=a[i];\n  return sum;\n}\nint main(){\n  int n;\n  cin>>n;\n  while(n--){\n    cin>>s;j=0;\n    cout<<dfs()<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <numeric>\n#include <vector>\n\nusing namespace std;\n\nint calc(string::iterator &itr) {\n\tif(*itr != '[') {\n\t\tint num = 0;\n\t\twhile(*itr!=']') {\n\t\t\tnum = num *  10 + (*itr++ - '0');\n\t\t}\n\t\treturn (num + 1) / 2;\n\t}\n\titr++;\n\tvector<int> nums;\n\twhile(*itr != ']') {\n\t\tnums.push_back(calc(itr) );\n\t}\n\titr++;\n\tsort(nums.begin(), nums.end());\n\treturn accumulate(nums.begin(), nums.begin() + (nums.size() + 1) / 2, 0);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\twhile(n--) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tstring::iterator itr = s.begin();\n\t\tcout << calc(itr) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdint>\n#include <cassert>\n#include <cctype>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nint parse(const std::string &s, size_t &i) {\n  assert(s[i] == '[');\n  ++i;\n  if (isdigit(s[i])) {\n    int res=s[i]-'0';\n    while (++i < s.length() && isdigit(s[i])) {\n      res = res*10 + s[i]-'0';\n    }\n    assert(s[i] == ']');\n    ++i;\n    return (res+1)/2;\n  }\n\n  std::vector<int> vec;\n  while (s[i] == '[') {\n    vec.emplace_back(parse(s, i));\n  }\n  std::sort(vec.begin(), vec.end());\n  int res=0;\n  for (size_t j=0; j<(vec.size()+1)/2; ++j)\n    res += vec[j];\n\n  assert(s[i] == ']');\n  ++i;\n  return res;\n}\n\nvoid solve_testcase() {\n  char buf[16384];\n  scanf(\"%s\", buf);\n  std::string s=buf;\n  size_t i=0;\n  printf(\"%d\\n\", parse(s, i));\n}\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i=0; i<n; ++i)\n    solve_testcase();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<vector>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define rp(a) while(a--)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double EPS=1e-10;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\nstring s;\nint i;\nint func(int a){\n    vector<int>in;\n    for(i=a;i<1e10;i++){\n        if(s[i]==']')break;\n        if(s[i]=='['){\n            int q=i+1;\n            in.pb(func(q));\n        }\n        if(isdigit(s[i])){\n            int out=0;//s[i]-'0';\n            while(isdigit(s[i])){\n                out*=10;\n                out+=s[i]-'0';\n                i++;\n            }\n            return out/2+1;\n        }\n    }\n    //rep(j,in.size())cout<<\" \"<<in[j];\n    //cout<<endl;\n \n    sort(all(in));\n    int sum=0;\n    rep(j,in.size()/2+1)sum+=in[j];\n    return sum;\n}\nint main(){\n    int n;\n    cin>>n;\n    while(n--){\n        i=0;\n        cin>>s;\n        int q=1;\n        cout<<func(q)<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<math.h>\n#include<string>\n#include<algorithm>\n#include<functional>\n#include<vector>\n#include<set>\n#include<map>\n#define INF 999999\n#define EPS 1.0e-6\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\n\nint n;\n\nint kaiseki(string s,int y) {\n\tint i = 0;\n\tstring ns = \"\";\n\n\tint d = 0;\n\tif (s[0] == '['&&s[1] != '[') {\n\t\t\n\t\ti = 1;\n\t\twhile (s[i] != ']') {\n\t\t\td = d * 10 + (int)(s[i] - '0');\n\n\t\t\ti++;\n\t\t}\n\n\t\treturn d;\n\t}\n\twhile (i < s.length()) {\n\t\tif (s[i] == '['||s[i]==']') {\n\t\t\tns += s[i];\n\t\t\t//cout << \"a\" << endl;\n\t\t\ti++;\n\t\t}\n\t\telse {\n\t\t\tns.pop_back();\n\t\t\tint j = i;\n\t\t\tvector<int>m;\n\t\t\t//cout << \"c\" << endl;\n\t\t\twhile (1) {\n\t\t\t\t//cout << \"b\" << endl;\n\t\t\t\tint d = 0;\n\t\t\t\twhile (s[j] != ']') {\n\t\t\t\t\td = d * 10 + (int)(s[j] - '0');\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif(y==0)m.push_back(d / 2 + 1);\n\t\t\t\telse m.push_back(d);\n\t\t\t\tif (s[j + 1] == ']') {\n\t\t\t\t\tsort(m.begin(), m.end());\n\n\t\t\t\t\tint x=0;\n\t\t\t\t\t/*\n\t\t\t\t\tfor (int k = 0; k < (int)m.size(); k++) {\n\t\t\t\t\t\tcout << m[k] << endl;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tfor (int k = 0; k <=(int) m.size() / 2; k++) {\n\t\t\t\t\t\tx += m[k];\n\n\t\t\t\t\t}\n\t\t\t\t\tns += to_string(x);\n\t\t\t\t\tns += ']';\n\t\t\t\t\ti = j + 2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tj += 2;\n\t\t\t}\n\n\t\t}\n\t}\n\t//cout << ns << endl;\n\treturn kaiseki(ns,1);\n}\n\nint main()\n{\n\tcin >> n;\n\tstring s;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\n\t\tint ans=0;\n\t\tans = kaiseki(s,0);\n\t\tcout << kaiseki(s,0)<< endl;\n\n\n\n\t}\n\n\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "// warm heart, wagging tail,and a smile just for you!\n//                                                                     ███████████\n//                                                                   ███╬╬╬╬╬╬╬╬╬╬███\n//                                                                ███╬╬╬╬╬████╬╬╬╬╬╬███\n//                                            ███████████       ██╬╬╬╬╬████╬╬████╬╬╬╬╬██\n//                                      █████████╬╬╬╬╬████████████╬╬╬╬╬██╬╬╬╬╬╬███╬╬╬╬╬██\n//                               ████████╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬█████████╬╬╬╬╬╬██╬╬╬╬╬╬╬██\n//                             ████╬██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬█████████╬╬╬╬╬╬╬╬╬╬╬██\n//                           ███╬╬╬█╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬███╬╬╬╬╬╬╬█████\n//                         ███╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬╬████████╬╬╬╬╬██\n//                       ███╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬███╬╬╬╬╬╬╬╬╬███\n//                     ███╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬█████╬╬╬╬╬╬╬██\n//                 ████╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬████╬╬╬╬╬████\n//     █████████████╬╬╬╬╬╬╬╬██╬╬╬╬╬████╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬█████╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬███╬╬╬╬██████\n//   ████╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬██████╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██████╬╬╬╬╬╬╬███████████╬╬╬╬╬╬╬╬██╬╬╬██╬╬╬██\n// ███╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬████╬╬╬╬╬╬╬╬╬╬╬█╬╬╬╬╬╬╬██╬╬╬╬╬╬╬╬██\n// ██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬╬╬▓▓▓▓▓▓╬╬╬████╬╬████╬╬╬╬╬╬╬▓▓▓▓▓▓▓▓██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬╬╬╬╬╬███\n// ██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██████▓▓▓▓▓▓▓╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬▓▓▓▓▓▓▓██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██╬╬╬╬█████\n// ███╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬███╬╬╬╬╬██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬█████╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬████████\n//   ███╬╬╬╬╬╬╬╬╬╬╬╬╬█████╬╬╬╬╬╬╬╬██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬███╬╬██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬██\n//       ██████████████  ████╬╬╬╬╬╬███████████████████████████╬╬╬╬╬██╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬╬████\n//                         ███████                           █████  ███████████████████\n#include \"bits/stdc++.h\"\nusing namespace std;\n#define MOD 1000000007\n//#define MOD 998244353\nconst double EPS = 1e-9;\n#define INF (1LL<<60)\n#define D double\n#define fs first\n#define sc second\n#define int long long\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define RFOR(i,a,b) for(int i = (b-1);i>=(a);i--)\n#define REP(i,n)  FOR(i,0,(n))\n#define RREP(i,n) RFOR(i,0,(n))\n#define ITR(itr,mp) for(auto itr = (mp).begin(); itr != (mp).end(); ++itr)\n#define RITR(itr,mp) for(auto itr = (mp).rbegin(); itr != (mp).rend(); ++itr)\n#define range(i,a,b) ((a)<=(i) && (i)<(b))\n#define debug(x)  cout << #x << \" = \" << (x) << endl;\n#define SP << \" \" << \ntypedef pair<int,int> P;\ntypedef vector<vector<P> > Graph;\ntypedef vector<int> vec;\ntypedef vector<vector<int>> mat;\n\nstring s;\nint id;\n\nint calc(){\n  int cnt = 0;\n  while(s[id] != ']'){\n    cnt *= 10;\n    cnt += s[id] - '0';\n    id++;\n  }\n  return cnt;\n}\n\nint dfs(){\n  priority_queue<int,vec,greater<int>> que;\n  while(id < s.size()){\n    if(s[id] == '[') id++, que.push(dfs());\n    else if(s[id] == ']'){\n      int tmp = 0, sz = que.size()/2+1;\n      REP(_,sz) tmp += que.top(), que.pop();\n      id++;\n      //debug(tmp);\n      return tmp;\n    }\n    else que.push(calc()/2+1);\n  }\n}\n\nvoid solve(){\n  cin >> s;\n  id = 1;\n  cout << dfs() << endl;\n}\n\nsigned main(){\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n\n  int n;\n  cin >> n;\n\n  REP(_,n) solve();\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#define  _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <cstring>\n#include <queue>\n#include <stack>\n#include <math.h>\n#include <iterator>\n#include <vector>\n#include <string>\n#include <set>\n#include <math.h>\n#include <iostream>\n#include <random>\n#include<map>\n#include <iomanip>\n#include <time.h>\n#include <stdlib.h>\n#include <list>\n#include <typeinfo>\n#include <list>\n#include <set>\n#include <cassert>\n#include<fstream>\n#include <unordered_map>\n#include <cstdlib>\n#include <complex>\n#include <cctype>\nusing namespace std;\ntypedef string::const_iterator State;\n#define Ma_PI 3.141592653589793\n#define eps 0.00000001\n#define LONG_INF 1e18\n#define GOLD 1.61803398874989484820458\n#define MAX_MOD 1000000007\n#define MOD 998244353\n#define REP(i,n) for(long long i = 0;i < n;++i)    \n#define seg_size 524288\nint num(State& begin);\nint expression(State& begin) {\n\tvector<int> geko;\n\twhile (*begin != ']') {\n\t\tif (*begin == '[') {\n\t\t\tbegin++;\n\t\t\tgeko.push_back(expression(begin));\n\t\t}\n\t\telse {\n\t\t\tgeko.push_back(num(begin));\n\t\t}\n\t}\n\tbegin++;\n\tsort(geko.begin(), geko.end());\n\tint bobo = 0;\n\tREP(i, (geko.size() + 1) / 2) {\n\t\tbobo += geko[i];\n\t}\n\treturn bobo;\n}\nint num(State& begin) {\n\tint ans = 0;\n\twhile (*begin >= '0' && *begin <= '9') {\n\t\tans *= 10;\n\t\tans += *begin - '0';\n\t\tbegin++;\n\t}\n\treturn ans/2+1;\n}\nint main(){\n\tint query;\n\tcin >> query;\n\tREP(i, query) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tState hoge = s.begin()+1;\n\t\tcout << expression(hoge) << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<int(n);++i)\n#define all(a) a.begin(),a.end()\n \n// T := [T][T]... | num \n \nint solve(string s, int &i){\n    vector<int> v;\n    if(isdigit(s[i])){\n        int num = 0;\n        while(isdigit(s[i])){\n            num = num*10 + s[i]-'0';\n            i++;\n        }\n        return num+1;\n    }\n    while(s[i] == '['){\n        i++; // [\n        v.push_back(solve(s,i));\n        i++; // ]\n    }\n \n    sort(all(v));\n    int n = v.size(), sum = 0;\n    rep(k,(n+1)/2){\n        sum += v[k];\n    }\n    return sum;\n}\n \nint main(void){\n    int T;\n    cin>>T;\n    rep(_,T){\n        string s;\n        cin>>s;\n        int index = 0;\n        cout<<(solve(s,index)+1)/2<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <utility>\n#include <functional>\n#include <algorithm>\n#include <string>\n#include <cassert>\n\nusing namespace std;\n\nint parse_impl(string::const_iterator &begin, string::const_iterator end) {\n\tassert(*begin == '[');\n\tbegin++;\n\tif (*begin == '[') {\n\t\tvector<int> nodes;\n\t\tdo {\n\t\t\tnodes.push_back(parse_impl(begin, end));\n\t\t} while (*begin != ']');\n\t\tbegin++;\n\t\tstd::sort(nodes.begin(), nodes.end());\n\t\tint min_win = 0;\n\t\tfor (int i = 0; i < nodes.size() / 2 + 1; i++) {\n\t\t\tmin_win += nodes[i];\n\t\t}\n\t\treturn { min_win };\n\t}\n\telse {\n\t\tint value = 0;\n\t\tdo {\n\t\t\tvalue *= 10;\n\t\t\tvalue += *begin - '0';\n\t\t\tbegin++;\n\t\t} while (*begin != ']');\n\t\tbegin++;\n\t\treturn { value / 2 + 1 };\n\t}\n}\n\nint parse(string line) {\n\tauto it = line.begin();\n\treturn parse_impl(it, line.end());\n}\n\nvoid solve() {\n\tstring line;\n\tcin >> line;\n\tcout << parse(line) << endl;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint N, p;\nstring s;\nint f() {\n\tif (s[p]=='[') {\n\t\tp++;\n\t\tvector<int> t;\n\t\twhile (s[p]!=']') t.push_back(f());\n\t\tp++;\n\t\tsort(t.rbegin(), t.rend());\n\t\treturn accumulate(t.begin()+t.size()/2, t.end(), 0);\n\t}\n\tint t = 0;\n\twhile (isdigit(s[p])) {\n\t\tt = t*10+(s[p++]-'0');\n\t}\n\treturn (t+1)/2;\n}\nint main() {\n\tcin >> N;\n\twhile (N--) {\n\t\tcin >> s;\n\t\tp = 0;\n\t\tcout << f() << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i,s,e) for(int i=(s); i<(e);i++)\n#define rep(i,n) REP(i,0,n)\n#define rep1(i,n) REP(i,1,n)\n#define repe(i,n) for(auto &&i:n)\n#define all(v) (v).begin(),(v).end()\n#define decimal fixed<<setprecision(20)\n#define fastcin() cin.tie(0);ios::sync_with_stdio(false)\nusing namespace std;\nusing LL = long long;\nusing Graph = vector<vector<int>>;\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\nconst int INF = 1e9;\nconst LL LLINF = 1e16;\n\nstring s;\n\nLL rec(int& idx){\n    idx++;\n    if(s[idx] != '['){\n        // 数値\n        LL now = 0;\n        while(s[idx] != ']'){\n            now *= 10;\n            now += s[idx] - '0';\n            idx++;\n        }\n        idx++;\n        // cout << (now+1)/2 << \" \" << idx << endl;\n        return (now+1)/2;\n    }\n    vector<LL> ward;\n    while(s[idx] != ']') ward.push_back(rec(idx));\n    sort(all(ward));\n    LL ret = 0;\n    rep(i, (ward.size()+1)/2){\n        ret += ward[i];\n    }\n    idx++;\n    // cout << ret << \" \" << idx << endl;\n    return ret;\n}\n\nint main(){\n    fastcin();\n\n    int n;\n    cin >> n;\n    rep(t, n){\n        cin >> s;\n        int idx = 0;\n        cout << rec(idx) << endl;\n    }\n\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define _ ios_base::sync_with_stdio(0);cin.tie(0);\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n\nusing namespace std;\n\nstruct node{\n  node():parent(NULL),minimum(0){}\n  node(node* p):parent(p),minimum(0){}\n  vector<node*> children;\n  node* parent;\n  int minimum;\n};\nvector<node> nodes;\n\nint dfs(node* p){\n  if(p->children.size()==0){\n    //    cout<<p->minimum<<endl;\n    return p->minimum/2+1;\n  }\n  vector<int> mins;\n  for(node* q:p->children)\n    mins.push_back(dfs(q));\n  sort(mins.begin(),mins.end());\n  return accumulate(mins.begin(),next(mins.begin(),mins.size()/2+1),0);\n}\n\nvoid solve(){\n  string s; cin>>s;\n  nodes.clear();\n  nodes.reserve(3000);\n  node* p=NULL;\n  int num=0;\n  for(char c:s){\n    if(c=='['){\n      nodes.push_back(node(p));\n      node* child = &(*nodes.rbegin());\n      if(p!=NULL)\n\tp->children.push_back(child);\n      p=child;\n    }else if(c==']'){\n      p->minimum=num;\n      p=p->parent;\n      num=0;\n    }else{\n      num=num*10+(c-'0');\n    }\n  }\n  cout<<dfs(&nodes[0])<<endl;\n}\n\nint main(){ _;\n  int n;cin>>n;\n  REP(i,n) solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nvoid down_kaisou(int max_kaisou, queue<pair<int, char> > &que) {\n    queue<pair<int, char> > temp;\n    bool down;\n    while (!que.empty()) {\n        pair<int, char> inque = que.front();\n        if (inque.first != -max_kaisou) {\n            temp.push(inque);\n            que.pop();\n        } else {\n            vector<int> v;\n            int num = 0;\n            down = false;\n            while (!down) {\n                pair<int, char> inque2 = que.front();\n                if (inque2.first == -max_kaisou + 1) {\n                    int p_que = 0;\n                    sort(v.begin(), v.end());\n                    for (int k = 0; k < num / 2 + 1; k++) {\n                        p_que += v[k]; \n                    }\n                    temp.push(make_pair(p_que, '0'));\n                    temp.push(make_pair(-max_kaisou, ']'));\n                    down = true;\n                    break;\n                }\n                if (inque2.second == '0') {\n                    v.push_back(inque2.first);\n                    num++;\n                }\n                que.pop();\n            }\n        }\n    }\n    que = temp;\n    return;\n}\n\nint main(void) {\n    int n;\n    int max_kaisou;\n    cin >> n;\n    for (int loop = 0; loop < n; loop++) {\n        string s;\n        cin >> s;\n        max_kaisou = 0;\n        queue<pair<int, char> > que;\n        int kaisou = 0;\n        int num = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s[i] == '[') {\n                kaisou++;\n                if (max_kaisou < kaisou) {\n                    max_kaisou = kaisou; \n                }\n                que.push(make_pair(-kaisou, '[')); \n            } else if (s[i] == ']') {\n                num /= 10;\n                if (num != 0) {\n                    num = num / 2 + 1;\n                    que.push(make_pair(num, '0'));\n                }\n                num = 0;\n                que.push(make_pair(-kaisou, ']')); \n                kaisou--;\n            } else {\n                num += s[i] - '0';    \n                num *= 10;\n            }\n        }\n        while (max_kaisou > 1) {\n            down_kaisou(max_kaisou, que);\n            max_kaisou--;\n        }\n        while (1) {\n            pair<int, char> inque = que.front();\n            if (inque.second == '0') {\n                cout << que.front().first << endl;\n                break;\n            }\n            que.pop();\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cctype>\nusing namespace std;\n\nint idx;\nstring s;\n\nint solve(){\n  if(isdigit(s[idx])){\n    string tmp = \"\";\n    while(isdigit(s[idx])){\n      tmp += s[idx];\n      idx++;\n    }\n    return atoi(tmp.c_str()) / 2 + 1;\n  }\n\n  vector<int> v;\n\n  while(s[idx] == '['){\n    idx++;\n    v.push_back(solve());\n    idx++;\n  }\n\n  sort(v.begin(), v.end());\n  int sum = 0;\n  for(int i = 0; i < v.size() / 2 + 1; i++){\n    sum += v[i];\n  }\n  return sum;\n}\n\nint main(){\n  int T;\n  cin >> T;\n\n  while(T--){\n    cin >> s;\n    idx = 1;\n    cout << solve() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <list>\n\nusing namespace std;\n\n\n\nint min(char* s) {\n\tint n = 0;\n\tint sum = 0, tmpI = 0;\n\tbool flag = true;\n\tlist<int> intlist;\n\n\tfor(int i = 0; s[i] != '\\0'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tint count = 1, j;\n\t\t\tfor(j = 1; count != 0; j++) {\n\t\t\t\tif(s[j + i] == '[') {\n\t\t\t\t\tcount += 1;\n\t\t\t\t} else if(s[j + i] == ']') {\n\t\t\t\t\tcount -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t//cout << \"Weeeei\" << endl;\n\t\t\tchar* tmpS = new char[1000];\n\t\t\tstrncpy(tmpS, s+i+1, j-2);\n\t\t\tint x = min(tmpS);\n\t\t\tintlist.push_back( x );\n\t\t\tn++;\n\t\t\tflag = false;\n\t\t\ti = i + j-1;\n\t\t}\n\t}\n\tif(flag) {\n\t\ttmpI = atoi(s);\n\t\t//cout << tmpI << endl;\n\t\treturn tmpI / 2 + 1;\n\t}\n\n\tintlist.sort();\n\n\tlist<int>::iterator itr = intlist.begin();\n\tfor(int i = 0; i < n/2 + 1; itr++, i++) {\n\t\tsum += *itr;\n\t}\n\n\t/*\n\tbool flag = true;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tif(!flag) {\n\t\t\t\tstring s2;\n\t\t\t\tfor(int j = 0; s[j] != ']' && s[j + 1] != ']'; j++) {\n\t\t\t\t\tstrncpy(s2, s+i, j-i+1);\n\t\t\t\t}\n\t\t\t\tmin(s2);\n\t\t\t} else {\n\t\t\t\tn++:\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tint[] input = new input[n];\n\tint j = 0;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\t;\n\t\t} else if(s[i] == ']') {\n\t\t\tinput[j] = tmpI;\n\t\t\ttmpI = 0;\n\t\t} else {\n\t\t\ttmpI = tmpI * 10 + atoi(c);\n\t\t}\n\t}\n\tsort(input);\n\tfor(int i = 0; i < n/2 + 1; i++) {\n\t\tsum = input[i] / 2 + 1;\n\t}\n\t*/\n\n\treturn sum;\n}\n\n\nint main (void) {\n\tint n;\n\tcin >> n;\n\t\n\tcout << \"ok\" << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar* s = new char[10002];\n\t\tchar c;\n\t\tint j = 0;\n\t\t/*for( ; cin >> c && (c != '\\n' && c != '\\0'); j++) {\n\t\t\ts[j] = c;\n\t\t}\n\t\ts[j] = '\\0';\n\t\t*/\n\t\tcin >> s;\n\t\t//cout << s;\n\t\t//cout << \"abon\" << endl;\n\n\t\tcout << min(s) << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint expr(string s,int& i);\nint number(string& s,int& i);\n\nint main(void)\n{\n  int n;\n  cin >> n;\n  \n  for(int i=0;i<n;i++){\n    string str;\n    cin >> str;\n    int j=0;\n    cout << expr(str,j) << endl;\n\n  }\n}\n\nint expr(string s,int& i)\n{\n  i++;\n  vector<int> v;\n  if(isdigit(s[i])){\n    int k=number(s,i);\n    i++;\n    return k/2+1;\n  }\n  else{\n    while(s[i]=='['){\n      v.push_back(expr(s,i));\n    }\n\n    i++;\n  \n  \n    sort(v.begin(),v.end());\n    int suuji=0;\n    for(int i=0;i<=(v.size()/2);i++){\n      suuji += v[i];\n    }\n  \n    return suuji;\n  }\n\n}\n\nint number(string& s,int& i){\n  int n = s[i++] - '0';\n  while(isdigit(s[i]))n=n*10+s[i++]-'0';\n  return n;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<cctype>\n#include<math.h>\n#include<string>\n#include<string.h>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<utility>\n#include<set>\n#include<map>\n#include<stdlib.h>\n#include<iomanip>\n\nusing namespace std;\n\n#define ll long long\n#define ld long double\n#define EPS 0.0000000001\n#define INF 1e9\n#define MOD 1000000007\n#define rep(i,n) for(i=0;i<(n);i++)\n#define loop(i,a,n) for(i=a;i<(n);i++)\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\n\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\n#define max_n 10000\n\nint main(void) {\n    int i,j;\n    int n;\n    cin >> n;\n    while(n--){\n        string s;\n        cin >> s;\n        i = 0;\n        vector<vi> v(max_n);\n        vector<vi> a(max_n);\n\n        queue<int> q;\n\n        rep(i,s.size()){\n            if(s[i] == '['){\n                //cout << i << \" \" << \"A\" << \" \" << q.size() << endl;\n                v[q.size()].push_back(i);\n                q.push(i);\n            }else if(s[i] == ']'){\n                //cout << i << \" \" << \"B\" << \" \" << q.size() << endl;\n                q.pop();\n                v[q.size()].push_back(i);\n            }else{\n                int t = s[i] - '0';\n                while(isdigit(s[i+1])){\n                    t *= 10;\n                    t += s[i+1] - '0';\n                    i++;\n                }\n                a[q.size()-1].push_back((t+1)/2);\n            }\n\n        }\n\n\n        rep(i,max_n)if(a[i+1].size())break;\n\n        for(; i >= 0; i--)rep(j,v[i].size()){\n            int s = v[i][j];\n            int g = v[i][j+1]; j++;\n            int si = lower_bound(all(v[i+1]), s) - v[i+1].begin();\n            int gi = lower_bound(all(v[i+1]), g) - v[i+1].begin();\n            gi--;\n            si /= 2;\n            gi /= 2;\n            vi p;\n            for(int k = si; k <= gi; k++) p.push_back(a[i+1][k]);\n            sort(all(p));\n            int sum = 0;\n            for(int k = 0; k < p.size()/2 + 1; k++ ) sum += p[k];\n\n            a[i].push_back(sum);\n\n        }\n\n        cout << a[0][0] << endl;\n\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\nusing namespace std ;\n\nstring S ;\n\nint Calc( int k ){\n\tint j , p=1 , num=0 ;\n\tfor( j=k  ; '0' <= S[j] && S[j] <= '9' ; j++ ){}\n\tfor( j-=1 ; '0' <= S[j] && S[j] <= '9' ; j-- ){\n\t\tnum += (S[j]-'0')*p ;\n\t\tp *= 10 ;\n\t\tS[j] = '*' ;\n\t}\n\treturn (num+1) ;\n}\n\nint Func( int k ){\n\tint ans = 0 ;\n\tvector<int> V ;\n\tfor( int i=k ; i<S.size() ; i++ ){\n\t\tif( S[i] == ']' ){\n\t\t\tS[i] = '|' ;\n\t\t\tbreak ;\n\t\t}\n\t\telse if( S[i] == '[' ){\n\t\t\tS[i] = '/' ;\n\t\t\tV.push_back( Func(i+1) ) ;\n\t\t}\n\t\telse if( '1' <= S[i] && S[i] <= '9' ){\n\t\t\tV.push_back( Calc(i) ) ;\n\t\t}\n\t}\n\tsort( V.begin() , V.end() ) ;\n\tfor( int i=0 ; i<(V.size()+1)/2 ; i++ ) ans += V[i] ;\n\treturn ans ;\n}\n\nmain(){\n\tint n,Ans ;\n\tcin >> n ;\n\twhile(n--){\n\t\tcin >> S ;\n\t\tAns = Func(0)/2 ;\n\t\tcout << Ans << endl ;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(a) (a).begin(),(a).end()\n#define SET(a,c) memset(a,c,sizeof(a))\n#define PB push_back\n#define MP make_pair\nusing namespace std;\n\nconst int MAX_N = 100;\nint pos;\nstring s;\n\nint dfs()\n{\n    vector<int> v;\n\n    while (pos < s.size()) {\n        int res = 0;\n        if (s[pos] == '[') {\n            pos++;\n            v.PB(dfs());\n        } else if (s[pos] == ']') {\n            pos++;\n            sort(ALL(v));\n            REP(i, (v.size() + 1) / 2) res += v[i];\n            return res;\n        } else {\n            while (isdigit(s[pos])) {\n                res = res * 10 + (s[pos] - '0');\n                pos++;\n            }\n            v.PB((res + 1) / 2);\n        }\n    }\n}\n\nint main()\n{\n    int n, ans[MAX_N] = {0};\n\n    scanf(\"%d\", &n);\n    REP(i, n) {\n        cin >> s;\n        pos = 1;\n        ans[i] = dfs();\n    }\n\n    REP(i, n) printf(\"%d\\n\", ans[i]);\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <vector>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n\n\n#define all(v) v.begin(),v.end()\n#define INF 1<<30\n#define mp make_pair\n#define pb push_back\n\n#define fi first\n#define se second\n\n#define each(it,c) for(auto it=(c).begin();it!=(c).end();it++)\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef pair<int,int> pii;\n\ntypedef long long ll;\nstruct node{\n\tint x;\n\tvi vch;\n\tstring st;\n};\n\nint f(string tst){\n\t//cout << \"tst : \" << tst << endl;\n\tstring jst;\n\tvi vn;\n\tint ans = 0;\n\tif(tst[1] != '['){\n\t\tint tmp=0;\n\t\trep(j,tst.size()-2){\n\t\t\ttmp *= 10;\n\t\t\ttmp += char(tst[j+1])-'0';\n\t\t}\n\t\treturn tmp/2+1;\n\t}\n\tjst = tst.substr(1,tst.size()-2);\n\t// jst = tst;\n\tint kc = 0;\n\tint sp = 0;\n\trep(i,jst.size()){\n\t\tif(jst[i]=='['){\n\t\t\tif(kc==0){\n\t\t\t\tsp = i;\n\t\t\t}\n\t\t\tkc++;\n\t\t}\n\t\tif(jst[i]==']'){\n\t\t\tkc--;\n\t\t\tif(kc==0){\n\t\t\t\tint x;\n\t\t\t\tstring buf = jst.substr(sp,i-sp+1); \n\t\t\t\t//cout <<\"buf : \"<< buf << endl;\n\t\t\t\tx = f(buf);\n\t\t\t\tvn.pb(x);\n\t\t\t}\n\t\t}\n\t}\n\tsort(all(vn));\n\tvi vk;\n\trep(i,vn.size()/2+1){\n\t\t//vk.pb(vn[i]/2+1);\n\t\tvk.pb(vn[i]);\n\t}\n\tint su = 0;\n\t//cout << \"v : \";\n\trep(i,vk.size()) su += vk[i];\n\t// rep(i,vk.size()){\n\t// \tcout << vk[i] << \",\";\n\t// }\n\t// cout << endl;\n\n\treturn su;\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\trep(i,n){\n\t\tstring str;\n\t\tcin >> str;\n\t\tint ans = f(str);\n\t\t// rep(j,str.size()){\n\t\t// \tswitch(str[j]){\n\t\t// \t\tcase '[':\n\t\t// \t\tbreak;\n\t\t// \t\tcase ']':\n\t\t// \t\tbreak;\n\t\t// \t\tdefault:\n\t\t// \t\t\tint tmp=0;\n\t\t// \t\t\twhile(str[j]!=']'){\n\t\t// \t\t\t\ttmp *= 10;\n\t\t// \t\t\t\ttmp += char(str[j])-'0';\n\t\t// \t\t\t\tj++;\n\t\t// \t\t\t}\n\t\t// \t\t\tcout << tmp << endl;\n\t\t// \t\tbreak;\n\t\t// \t}\n\t\t// }\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <vector>\n\nusing namespace std;\n\nconst char *p;\n\nint rec() {\n  int res = 0;\n  vector<int> v;\n\n  ++p;\n  if(*p == '[') {\n    while(*p == '[') v.push_back(rec());\n    sort(v.begin(), v.end());\n    for(int i = 0; i < v.size()/2+1; i++) res += v[i];\n  } else {\n    char *e;\n    res = strtol(p, &e, 10) / 2 + 1;\n    p = e;\n  }\n\n  ++p;\n  return res;\n}\n\nint main() {\n  int n;\n  string str;\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = &str[0];\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <utility>\n#include <functional>\n#include <algorithm>\n#include <string>\n#include <cassert>\n\nusing namespace std;\n\nint parse_impl(string::const_iterator &begin, string::const_iterator end) {\n\tassert(*begin == '[');\n\tbegin++;\n\tif (*begin == '[') {\n\t\tvector<int> nodes;\n\t\tdo {\n\t\t\tnodes.push_back(parse_impl(begin, end));\n\t\t} while (*begin != ']');\n\t\tbegin++;\n\t\tstd::sort(nodes.begin(), nodes.end());\n\t\tint min_win = 0;\n\t\tfor (int i = 0; i < nodes.size() / 2 + 1; i++) {\n\t\t\tmin_win += nodes[i];\n\t\t}\n\t\treturn { min_win };\n\t}\n\telse {\n\t\tint value = 0;\n\t\tdo {\n\t\t\tvalue *= 10;\n\t\t\tvalue += *begin - '0';\n\t\t\tbegin++;\n\t\t} while (*begin != ']');\n\t\tbegin++;\n\t\treturn { value / 2 + 1 };\n\t}\n}\n\nint parse(string line) {\n\tauto it = line.cbegin();\n\treturn parse_impl(it, line.end());\n}\n\nvoid solve() {\n\tstring line;\n\tcin >> line;\n\tcout << parse(line) << endl;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <unordered_map>\n#include <unordered_set>\n\n#include <complex>\n\n#include <functional>\n#include <cassert>\n\ntypedef long long ll;\nusing namespace std;\n\n#define debug(x) cerr << #x << \" = \" << (x) << endl;\n\n\n#define mod 1000000007 //1e9+7(prime number)\n#define INF 1000000000 //1e9\n#define LLINF 2000000000000000000LL //2e18\n#define SIZE 100010\n\n\nint dfs(string s){\n  \n  bool flag = true;\n  for(int i=1;i+1<s.size();i++){\n    flag &= '0' <= s[i] && s[i] <= '9';\n  }\n\n  if(flag){\n    return stoi(s.substr(1, s.size()-2))/2 + 1;\n  }\n\n  vector<int> vec;\n  \n  for(int i=1;i+1<s.size();){\n\n    int l = i, r = 0;\n    int c = 0;\n    \n    for(int j=i;;j++){\n      if(s[j] == '[') c++;\n      if(s[j] == ']'){\n        c--;\n        if(c == 0){\n          r = j+1;\n          break;\n        }\n      }\n    }\n\n    vec.push_back(dfs(s.substr(l,r-l)));\n\n    if(s[r] == ']') break;\n    \n    i = r;\n  }\n\n  sort(vec.begin(),vec.end());\n\n  int res = 0;\n\n  for(int i=0;i<vec.size()/2 + 1 ;i++){\n    res += vec[i];\n  }\n\n  return res;\n}\n\nvoid solve(){\n  string s;\n\n  cin >> s;\n\n  \n  cout << dfs(s) << endl;\n}\n\nint main(){\n  int t;\n\n  scanf(\"%d\",&t);\n\n  while(t--){\n    solve();\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cctype>\n#include<climits>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n//#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n//#include<numeric>\n#include<utility>\n#include<complex>\n//#include<memory>\n#include<functional>\n#include<cassert>\n\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef pair<int, int> pii;\ntypedef complex<double> C;\n\nstruct node {\n    ll cost;\n    vector<node*> next;\n    node* before;\n    node(ll c) : cost(c) {}\n    node() : cost(0) {}\n};\n\nll dfs(node* now) {\n    if (now->cost != 0) return now->cost;\n    int n = (now->next).size();\n    vector<ll> score;\n    for (int i = 0; i < n; i++) {\n        score.push_back(dfs(now->next[i]));\n    }\n    sort(score.begin(), score.end());\n    ll ret = 0;\n    for (int i = 0; i < (n+1)/2; i++) {\n        ret += score[i];\n    }\n    return ret;\n}\n\nvoid solve(const string& s) {\n    // ??¨?????????\n    node* root = new node();\n    node* now = root;\n    int cur = 0;\n    int n = s.size();\n    while (1) {\n        if (cur >= n) break;\n        if (s[cur] == '[') {\n            node* tmp = new node();\n            tmp->before = now;\n            now->next.push_back(tmp);\n            now = tmp;\n            cur++;\n        } else if (s[cur] == ']') {\n            now = now->before;\n            cur++;\n        } else {\n            int i = cur;\n            int tmp = 0;\n            while (1) {\n                if (!isdigit(s[i])) break;\n                else tmp = tmp*10 + (s[i]-'0');\n                i++;\n            }\n            cur = i;\n            now->cost = (tmp+1) / 2;\n        }\n    }\n    // ?§£???\n    cout << dfs(root) << endl;\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int T;\n    cin >> T;\n    while (T--) {\n        string s;\n        cin >> s;\n        solve(s);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <memory>\n#include <algorithm>\n\nusing namespace std;\n\n\nstruct Node{\n    int self;\n    vector<shared_ptr<Node>> children;\n    Node() : self(0) {}\n};\n\nint solve(shared_ptr<Node> n){\n    if(n->children.size() == 0){\n        return n->self / 2 + 1;\n    }else{\n        vector<int> chi;\n        for(auto c : n->children){\n            chi.push_back(solve(c));\n        }\n        int ret = 0;\n        sort(chi.begin(),chi.end());\n        for(int i=0;i<chi.size()/2+1;i++){\n            ret += chi[i];\n        }\n        return ret;\n    }\n}\n\ntypedef string::const_iterator Cursor;\n\nshared_ptr<Node> number(Cursor&);\nshared_ptr<Node> parse(Cursor& c){\n    if(*c == '['){\n        vector<shared_ptr<Node>> children;\n        c++;\n        while(true){\n            children.push_back(parse(c));\n            if(*c == ']'){\n                c++;\n                shared_ptr<Node> n = make_shared<Node>();\n                n->children = children;\n                return n;\n            }\n        }\n    }else{\n        return number(c);\n    }\n}\n\nshared_ptr<Node> number(Cursor& c){\n    stringstream ss;\n    while(isdigit(*c)){\n        ss << *c;\n        c++;\n    }\n    int ret;ss >> ret;\n    shared_ptr<Node> n = make_shared<Node>();\n    n->self = ret;\n    return n;\n}\n\nint main(){\n    int n;cin >> n;\n    cin.ignore();\n    for(int i=0;i<n;i++){\n        string s;\n        getline(cin,s);\n        Cursor c = s.begin();\n        shared_ptr<Node> n = parse(c);\n        cout << solve(n) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//********rev 2;\n#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\n// data class\nclass D {\npublic:\n\tint n;\n\tint sets;\n\n\tlist<D*> child;\n\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n};\n\n// global var for input\nchar c[10002];\n\n// get inputs\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') { // if has datasets\n\t\t// loop for all sets\n\t\tlist<int> ilist;\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; // INFO: skip '['\n\t\t\t// INFO: rec.\n\t\t\tilist.push_back(get(dd, l));\n\t\t\t// add to childlen\n\t\t\td->child.push_back(dd);\n\t\t\t// inc. sets\n\t\t\td->sets++;\n\t\t\tl++; // INFO: skip ']'\n\t\t}\n\t\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\t\tauto iter = ilist.begin();\n\t\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\t\tsum += *iter;\n\t\t\titer++;\n\t\t}\n\t\td->n = sum;\n\t\treturn sum;\n\t} else { // if has NO datasets (== only num)\n\t\t// char[] to num\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num / 2 + 1;\n\t\treturn d->n;\n\t}\n}\n\n// solve from data\nint ans(D *d) {\n\tif (d->sets == 0) { //if has NO datasets\n\t\treturn d->n / 2 + 1; // min points for win\n\t}\n\t// else\n\t\n\t// function: conversion d with n\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\t// sort\n\td->child.sort(func);\n\t// get lowlevel answer list\n\t// lowlevel ans list\n\tlist <int> ilist;\n\t// iterator\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets; i++) {\n\t\tD *cur = *it;\n\t\tilist.push_back(ans(cur));\n\t\tit++;\n\t}\n\t// sort for min\n\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\n\t//get sum (== minpoints for win in thislevel)\n\tint sum = 0;\n\tauto iit = ilist.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tsum += *iit;\n\t\tiit++;\n\t}\n\treturn sum;\n}\n\n// solve\nvoid solve() {\n\tint n;\n\t// input dataset length\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\t// input dataset\n\t\tcin >> c;\n\t\tD *d = new D();\n\t\t// INFO: 1: skip first '['\n\t\tint l = 1;\n\t\t// string to dataobj;\n\t\tget(d, l);\n\t\t// get answer\n\t\t//cout << ans(d) << endl;\n\t\tcout << d->n << endl;\n\t\tdelete d;\n\t}\n}\n\n\n\n//----main----\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n\nusing namespace std;\n\nint expr(string &str, int &itr);\nint number(string &str, int &itr);\n\nint main() {\n    int N;\n    int start;\n    string str;\n    cin >> N;\n\n    for(int i=0; i< N; i++){\n        cin >> str;\n        start=0;\n        cout << expr(str, start) << endl;\n    }\n    return 0;\n}\n\nint expr(string &str, int &itr){\n    int ans=0;\n    vector<int> vect(0);\n    for(;str[itr]=='[';){\n        itr++;\n        if(isdigit(str[itr])){\n            vect.push_back((int)ceil(number(str,itr)/2.0));\n        }else{\n            vect.push_back(expr(str, itr));\n        }\n        if(str[itr]==']') itr++;\n    }\n    sort(vect.begin(), vect.end());\n    for(int i=0 ; i< vect.size()/2 + 1; i++){\n        ans+=vect[i];\n    }\n    return ans;\n}\n\nint number(string &str, int &itr){\n    int num = 0;\n    for(;isdigit(str[itr]);itr++) {\n        num = num*10 + ( str[itr] -'0' );\n    }\n    return num;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define CK(N, A, B) (A <= N && N < B)\n#define REP(i, a, b) for (int i = a; i < b; i++)\n#define RREP(i, a, b) for (int i = (b - 1); a <= i; i--)\n#define F first\n#define S second\ntypedef long long ll;\n\nconst int INF = 1e9 + 7;\nconst long long LLINF = 1e18;\n\nll N;\nint main() {\n    cin>>N;\n    REP(i, 0, N){\n        string str;\n        cin>>str;\n\n        ll cnt=1;\n        ll idx=1;\n        vector<ll> v[5001];\n        while(cnt>0){\n            if(str[idx]=='['){\n                cnt++;\n                idx++;\n            }\n            else if(str[idx]==']'){\n                ll num=0;\n                sort(v[cnt].begin(), v[cnt].end());\n                REP(i, 0, v[cnt].size()/2+1){\n                    num+=(v[cnt][i]);\n                }\n\n                v[cnt].clear();\n                cnt--;\n                idx++;\n                v[cnt].push_back(num);\n            }\n            else{\n                ll num=0;\n                while(isdigit(str[idx])){\n                    num=num*10 + (str[idx]-'0');\n                    idx++;\n                }\n                v[cnt-1].push_back(num/2+1);\n                idx++;\n                cnt--;\n            }\n        }\n\n        cout<<v[0][0]<<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint number(string const& s, int& p) {\n    int res = 0;\n    while(isdigit(s[p])) {\n        res *= 10;\n        res += s[p++] - '0';\n    }\n    return res;\n}\n\nint solve(string const& s, int& p) {\n    vector<int> v;\n    while(p < s.size()) {\n        if(s[p] == '[') {\n            v.push_back(solve(s, ++p));\n        } else {\n            return number(s, p) / 2 + 1;\n        }\n        p++;\n        if(p >= s.size() || s[p] == ']') {\n            break;\n        }\n    }\n    sort(v.begin(), v.end());\n    int res = 0;\n    for(int i=0; i<v.size()/2+1; ++i) {\n        res += v[i];\n    }\n    return res;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    while(n--) {\n        string s;\n        cin >> s;\n        int p = 0;\n        cout << solve(s, p) << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint compute(string s) {\n    int n = 0;\n    int nest = 0;\n    vector<int> vote[1000];\n    for (int i=0; i<(int)s.length(); i++) {\n        if (s[i] == '[') {\n            nest++;\n        }\n        else if (s[i] == ']') {\n            if (vote[nest].size() == 0) {\n                n = n/2+1;\n            }\n            else {\n                sort(vote[nest].begin(), vote[nest].end());\n                n = 0;\n                for (int i=0; i<=(int)vote[nest].size()/2; i++) {\n                    n += vote[nest][i];\n                }\n            }\n            vote[nest].clear();\n            nest--;\n            vote[nest].push_back(n);\n            n = 0;\n        }\n        else {\n            n *= 10;\n            n += s[i]-'0';\n        }\n    }\n    return vote[0][0];\n}\n\nint main() {\n    int n;\n    string s;\n    cin >> n;\n    for (int i=0; i<n; i++) {\n        cin >> s;\n        cout << compute(s) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<stdio.h>\n#include<vector>\n#include<algorithm>\n#include<string>\n\nusing namespace std;\n\nclass Graph{\n\nprivate:\n\n\n  vector<Graph*> tree;\n  int value;\n\npublic:\n  Graph *master;  \n  Graph(int _value);\n  void append(Graph *obj);\n  void set_master(Graph *_master);\n  void set_value(int _value);\n  int show_value();\n  int show_slave_value_all();\n  int show_slave_value_index(int i);  \n  int show_slave_num();  \n  void show_graph();\n  void sort_graph();\n  void graph_sum_least();  \n  \n};\n\nbool graph_slave_compare(Graph* a,Graph* b){\n\n  return a->show_value() < b->show_value();\n  \n}\n\nint main(void){\n\n  int n;\n  string line;\n\n  cin >> n;\n  //cout << n << endl;\n\n  //while(c != '\\n'){c=getchar();}\n  \n  //for(cin>>n;n!=0;cin>>n){\n  for(int i=0;i<n;i++){\n\n\n    int votes=0;\n\n    Graph g(0);\n\n    Graph *focus;\n    Graph *tmp;    \n\n    focus=&g;\n\n    //cout << \"debug\" << endl;\n\n    cin >> line;\n    //cout << line << endl;\n\n    //for(c=getchar();c != '\\n';c=getchar()){\n    //while(0){\n    for(char c:line){\n      //cout << \"debug\" << endl;    \n      //cin>>c;\n\n      if(c=='['){\n\ttmp = new Graph(0);\n\tfocus->append(tmp);\n\tfocus=tmp;\n\n      }\n      else if(c==']'){\n\t//votes=votes/2+1;\n\t//focus->set_value(focus->show_value()/2+1);\n\tif(votes != 0){\n\t  votes=votes/2+1;\n\t  focus->set_value(votes);  \n\t}\n\tfocus=focus->master;\n\tfocus->sort_graph();\n\n\tint tmp_v=0;\n\t\n\tfor(int j=0;j<focus->show_slave_num()/2+1;j++){\n\t  tmp_v += focus->show_slave_value_index(j);\n\t}\n\tfocus->set_value(tmp_v);\n\tvotes=0;\n      }\n      else if(c>='0' && c<='9'){\n\tvotes=10*votes+(c-'0');\n\t\n      }\n      else{\n\t\n      }\n      \n    }\n\n    //g.show_graph();\n    cout << g.show_value() << endl;\n    //cout << \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\" << endl;\n  }\n  \n}\n\nGraph::Graph(int _value){\n\n  value=_value;\n  \n}\n\nvoid Graph::append(Graph *obj){\n  obj->set_master(this);\n  tree.push_back(obj);\n  \n}\n\nvoid Graph::set_master(Graph *_master){\n  master=_master;\n}\n\nvoid Graph::set_value(int _value){\n  value=_value;\n}\n\nvoid Graph::show_graph(){\n\n  cout << \"value:\" << value << endl;\n\n  if(tree.size() > 0){\n  \n    cout << \"show slave\" << endl;\n\n    cout << \"==================\" << endl;\n  \n    for(Graph *x:tree){\n      x->show_graph();\n    }\n\n    cout << \"slave end\" << endl;\n\n    cout << \"+++++++++++++++++++++++++\" << endl;\n  }\n  \n}\n\nint Graph::show_value(){\n  return value;\n}\n\nint Graph::show_slave_value_all(){\n  int tmp=0;\n  for(Graph *x:tree){\n    tmp += x->show_value();\n  }\n  return tmp;\n}\n\nvoid Graph::sort_graph(){\n\n  //std::sort(tree.begin(),tree.end(),graph_slave_compare);\n  std::sort(tree.begin(),tree.end(),\n\t    [](auto x,auto y){ return x->show_value() < y->show_value();});\n  //[](Graph* x,Graph* y){ return x->show_value() < y->show_value();});  \n  \n}\n\nint Graph::show_slave_num(){\n  return tree.size();\n}\n\nint Graph::show_slave_value_index(int i){\n  return this->tree[i]->show_value();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "// Header {{{\n// includes {{{\n#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <sys/time.h>\n#include <unistd.h>\n#include <vector>\n// }}}\nusing namespace std;\n// consts {{{\nstatic const int INF = 1e9;\nstatic const double PI = acos(-1.0);\nstatic const double EPS = 1e-10;\n// }}}\n// typedefs {{{\ntypedef long long int LL;\ntypedef unsigned long long int ULL;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\ntypedef vector<ULL> VULL;\ntypedef vector<VULL> VVULL;\ntypedef vector<double> VD;\ntypedef vector<VD> VVD;\ntypedef vector<bool> VB;\ntypedef vector<VB> VVB;\ntypedef vector<char> VC;\ntypedef vector<VC> VVC;\ntypedef vector<string> VS;\ntypedef vector<VS> VVS;\ntypedef pair<int, int> PII;\ntypedef complex<int> P;\n#define PQ(type) priority_queue<type>\n// priority queue reverse\n#define PQR(type) priority_queue< type, vector<type>, greater<type> >\n// }}}\n// macros & inline functions {{{\n// syntax sugars {{{\n#define FOR(i, b, e) for (typeof(e) i = (b); i < (e); ++i)\n#define FORI(i, b, e) for (typeof(e) i = (b); i <= (e); ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define REPI(i, n) FORI(i, 0, n)\n#define OPOVER(_op, _type) inline bool operator _op (const _type &t) const\n#define ASSIGN_MAX(var, val) ((var) = max((var), (val)))\n#define ASSIGN_MIN(var, val) ((var) = min((var), (val)))\n// }}}\n// conversion {{{\ninline int toInt(string s) { int v; istringstream sin(s); sin>>v; return v; }\ntemplate<class T> inline string toString(T x) { ostringstream sout; sout<<x; return sout.str(); }\n// }}}\n// array and STL {{{\n#define ARRSIZE(a) ( sizeof(a) / sizeof(a[0]) )\n#define ZERO(a, v) ( assert(v == 0 || v == -1), memset(a, v, sizeof(a)) )\n#define F first\n#define S second\n#define MP(a, b) make_pair(a, b)\n#define SIZE(a) ((LL)a.size())\n#define PB(e) push_back(e)\n#define SORT(v) sort((v).begin(), (v).end())\n#define RSORT(v) sort((v).rbegin(), (v).rend())\n#define ALL(a) (a).begin(), (a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define EACH(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)\n#define REACH(c, it) for(typeof((c).rbegin()) it=(c).rbegin(); it!=(c).rend(); ++it)\n#define EXIST(s, e) ((s).find(e) != (s).end())\n// }}}\n// bit manipulation {{{\n// singed integers are not for bitwise operations, specifically arithmetic shifts ('>>', and maybe not good for '<<' too)\n#define IS_UNSIGNED(n) (!numeric_limits<typeof(n)>::is_signed)\n#define BIT(n) (assert(IS_UNSIGNED(n)), assert(n < 64), (1ULL << (n)))\n#define BITOF(n, m) (assert(IS_UNSIGNED(n)), assert(m < 64), ((ULL)(n) >> (m) & 1))\ninline int BITS_COUNT(ULL b) { int c = 0; while(b != 0) { c += (b & 1); b >>= 1; } return c; }\ninline int MSB(ULL b) { int c = 0; while(b != 0) { ++c; b >>= 1; } return c-1; }\ninline int MAKE_MASK(ULL upper, ULL lower) { assert(lower < 64 && upper < 64 && lower <= upper); return (BIT(upper) - 1) ^ (BIT(lower) - 1); }\n// }}}\n// for readable code {{{\n#define EVEN(n) (n % 2 == 0)\n#define ODD(n) (!EVEN(n))\n// }}}\n// debug {{{\n#define arrsz(a) ( sizeof(a) / sizeof(a[0]) )\n#define dprt(fmt, ...) if (opt_debug) { fprintf(stderr, fmt, ##__VA_ARGS__); }\n#define darr(a) if (opt_debug) { copy( (a), (a) + arrsz(a), ostream_iterator<int>(cerr, \" \") ); cerr << endl; }\n#define darr_range(a, f, t) if (opt_debug) { copy( (a) + (f), (a) + (t), ostream_iterator<int>(cerr, \" \") ); cerr << endl; }\n#define dvec(v) if (opt_debug) { copy( ALL(v), ostream_iterator<int>(cerr, \" \") ); cerr << endl; }\n#define darr2(a) if (opt_debug) { FOR(__i, 0, (arrsz(a))){ darr( (a)[__i] ); } }\n#define WAIT() if (opt_debug) { string _wait_; cerr << \"(hit return to continue)\" << endl; getline(cin, _wait_); }\n#define dump(x) if (opt_debug) { cerr << \" [L\" << __LINE__ << \"] \" << #x << \" = \" << (x) << endl; }\n// dump vector elements in [s, e)\n#define dumpv(v, s, e) if (opt_debug) { cerr << \" [L\" << __LINE__ << \"] \" << #v << \" = \"; FOR(__i, s, e) { cerr << v[__i] << \"\\t\"; } cerr << endl; }\n#define dumpl(x) if (opt_debug) { cerr << \" [L\" << __LINE__ << \"] \" << #x << endl << (x) << endl; }\n#define dumpf() if (opt_debug) { cerr << __PRETTY_FUNCTION__ << endl; }\n#define where() if (opt_debug) { cerr << __FILE__ << \": \" << __PRETTY_FUNCTION__ << \" [L: \" << __LINE__ << \"]\" << endl; }\n#define show_bits(b, s) if(opt_debug) { REP(i, s) { cerr << BITOF(b, s-1-i); if(i%4 == 3) cerr << ' '; } cerr << endl; }\n\n// ostreams {{{\n// complex\ntemplate<typename T> ostream& operator<<(ostream& s, const complex<T>& d) {return s << \"(\" << d.real() << \", \" << d.imag() << \")\";}\n\n// pair\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& s, const pair<T1, T2>& d) {return s << \"(\" << d.first << \", \" << d.second << \")\";}\n\n// vector\ntemplate<typename T> ostream& operator<<(ostream& s, const vector<T>& d) {\n\tint len = d.size();\n\tREP (i, len) {\n\t\ts << d[i]; if (i < len - 1) s << \"\\t\";\n\t}\n\treturn s;\n}\n\n// 2 dimentional vector\ntemplate<typename T> ostream& operator<<(ostream& s, const vector< vector<T> >& d) {\n\tint len = d.size();\n\tREP (i, len) {\n\t\ts << d[i] << endl;\n\t}\n\treturn s;\n}\n\n// map\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& s, const map<T1, T2>& m) {\n\ts << \"{\" << endl;\n\tfor (typeof(m.begin()) itr = m.begin(); itr != m.end(); ++itr) {\n\t\ts << \"\\t\" << (*itr).first << \" : \" << (*itr).second << endl;\n\t}\n\ts << \"}\" << endl;\n\treturn s;\n}\n// }}}\n// }}}\n// }}}\n// time {{{\ninline double now(){ struct timeval tv; gettimeofday(&tv, NULL); return (static_cast<double>(tv.tv_sec) + static_cast<double>(tv.tv_usec) * 1e-6); }\n// }}}\n// string manipulation {{{\ninline VS split(string s, char delimiter) { VS v; string t; REP(i, s.length()) { if(s[i] == delimiter) v.PB(t), t = \"\"; else t += s[i]; } v.PB(t); return v; }\ninline string join(VS s, string j) { string t; REP(i, s.size()) { t += s[i] + j; } return t; }\n// }}}\n// geometry {{{\n#define Y real()\n#define X imag()\n// }}}\n// 2 dimentional array {{{\nenum { UP, RIGHT, DOWN, LEFT, UP_RIGHT, DOWN_RIGHT, DOWN_LEFT, UP_LEFT };\nP dydx4[4] = { P(-1, 0), P(0, 1), P(1, 0), P(0, -1) };\nP dydx8[8] = { P(-1, 0), P(0, 1), P(1, 0), P(0, -1), P(-1, 1), P(1, 1), P(1, -1), P(-1, -1) };\nbool in_field(int H, int W, P p) {\n\treturn (0 <= p.Y && p.Y < H) && (0 <= p.X && p.X < W);\n}\n// }}}\n// input and output {{{\ninline void input(string filename) {\n\tfreopen(filename.c_str(), \"r\", stdin);\n}\ninline void output(string filename) {\n\tfreopen(filename.c_str(), \"w\", stdout);\n}\n// }}}\n// }}}\n\n// Header under development {{{\n\nint LCM(int a, int b) {\n\t// FIXME\n\treturn a * b;\n}\n\n// Fraction class {{{\n// ref: http://martin-thoma.com/fractions-in-cpp/\nclass Fraction {\n\tpublic:\n\t\tULL numerator;\n\t\tULL denominator;\n\t\tFraction(ULL _numerator, ULL _denominator) {\n\t\t\tassert(_denominator > 0);\n\t\t\tnumerator = _numerator;\n\t\t\tdenominator = _denominator;\n\t\t};\n\n\t\tFraction operator*(const ULL rhs) {\n\t\t\treturn Fraction(this->numerator * rhs, this->denominator);\n\t\t};\n\n\t\tFraction operator*(const Fraction& rhs) {\n\t\t\treturn Fraction(this->numerator * rhs.numerator, this->denominator * rhs.denominator);\n\t\t}\n\n\t\tFraction operator+(const Fraction& rhs) {\n\t\t\tULL lcm = LCM(this->denominator, rhs.denominator);\n\t\t\tULL numer_lhs = this->numerator * (this->denominator / lcm);\n\t\t\tULL numer_rhs = rhs.numerator * (rhs.numerator / lcm);\n\t\t\treturn Fraction(numer_lhs + numer_rhs, lcm);\n\t\t}\n\n\t\tFraction& operator+=(const Fraction& rhs) {\n\t\t\tFraction result = (*this) + rhs;\n\t\t\tthis->numerator = result.numerator;\n\t\t\tthis->denominator = result.denominator;\n\t\t\treturn *this;\n\t\t}\n};\n\nstd::ostream& operator<<(std::ostream &s, const Fraction &a) {\n\tif (a.denominator == 1) {\n\t\ts << a.numerator;\n\t} else {\n\t\ts << a.numerator << \"/\" << a.denominator;\n\t}\n\treturn s;\n}\n\n// }}}\n\n// }}}\n\nbool opt_debug = false;\n\nclass Node {\n\tpublic:\n\t\tNode* parent;\n\t\tvector<Node*> children;\n\t\tint cost;\n\t\tNode() {\n\t\t\tcost = 0;\n\t\t\tparent = NULL;\n\t\t};\n};\n\nint dfs(Node* current) {\n\tif (current->cost > 0) {\n\t\treturn current->cost;\n\t}\n\n\tvector<Node*>& children = current->children;\n\tVI costs;\n\tREP (i, children.size()) {\n\t\tcosts.PB(dfs(children[i]));\n\t}\n\tdump(costs);\n\tSORT(costs);\n\tint ret = 0;\n\tREP (i, children.size() / 2 + 1) {\n\t\tdump(costs[i]);\n\t\tret += costs[i];\n\t}\n\treturn ret;\n}\n\nint main(int argc, char** argv) {\n\tstd::ios_base::sync_with_stdio(false);\n\t// set options {{{\n\tint __c;\n\twhile ( (__c = getopt(argc, argv, \"d\")) != -1 ) {\n\t\tswitch (__c) {\n\t\t\tcase 'd':\n\t\t\t\topt_debug = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tabort();\n\t\t}\n\t}\n\t// }}}\n\n\t// opt_debug = true;\n\t// input(\"./inputs/1.txt\");\n\t// output(\"./outputs/0.txt\");\n\n\tint n; cin >> n;\n\tREP (t, n) {\n\t\tstring s; cin >> s;\n\t\tNode* root = new Node();\n\t\tNode* current = root;\n\t\tint val = 0;\n\t\tREP (i, s.length()) {\n\t\t\tif (s[i] == '[') {\n\t\t\t\tNode* child = new Node();\n\t\t\t\tchild->parent = current;\n\t\t\t\tcurrent->children.PB(child);\n\t\t\t\tcurrent = child;\n\t\t\t} else if (s[i] == ']') {\n\t\t\t\tcurrent->cost = (val == 0) ? 0 : (val / 2) + 1;\n\t\t\t\tdump(current->cost);\n\t\t\t\tval = 0;\n\t\t\t\tcurrent = current->parent;\n\t\t\t} else {\n\t\t\t\tassert('0' <= s[i] && s[i] <= '9');\n\t\t\t\tval *= 10;\n\t\t\t\tval += s[i] - '0';\n\t\t\t}\n\t\t}\n\n\t\tcout << dfs(root) << endl;\n\t}\n\n\treturn 0;\n}\n\n// vim: foldmethod=marker"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, n) for(int i=0; i<(n); ++i)\n\nint getNumber(string& s, int* i) {\n    int n = 0;\n    while(s[(*i)] != ']') {\n        n *= 10;\n        n += s[*i]-'0';\n        (*i)++;\n    }\n    return n;\n}\n\nint analyze(string& s, int* i) {\n    if(s[(*i)] != '[') {\n        cerr << \"error!\" << endl;\n        return -1;\n    }\n    if(s[++(*i)] != '[') {\n        return getNumber(s, i)/2 + 1;\n    }\n    vector<int> a;\n    while(s[(*i)] == '[') {\n        a.push_back(analyze(s, i));\n        (*i)++;\n    }\n    sort(a.begin(), a.end());\n    int ans = 0;\n    rep(k, a.size()/2+1) ans += a[k];\n    return ans;\n}\n\nint main(void){\n    int n;\n    string s;\n    getline(cin, s);\n    sscanf(s.c_str(), \"%d\", &n);\n    rep(data, n) {\n        getline(cin, s);\n        int i = 0;\n        cout << analyze(s, &i) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define rep(i,a,b) for (ll i = (a); i < (b); i++)\n#define REP(i,n) rep(i,0,n)\nstring s;\nint idx=0;\nint f(){\n    if(s[idx]>='0'&&s[idx]<='9'){\n        int num=0;\n        while(s[idx]>='0'&&s[idx]<='9')num*=10,num+=s[idx++]-'0';\n        return num/2+1;\n    }\n\n    vector<int>v;\n    while(s[idx]=='['){\n        idx++;\n        v.push_back(f());\n        idx++;\n    }\n    sort(v.begin(),v.end());\n    int res=0;\n    REP(i,v.size()/2+1)res+=v[i];\n    return res;\n}\n\nvoid solve()\n{\n    int n;cin>>n;\n    while(n--){\n        idx=0;\n        cin>>s;\n        cout<<f()<<endl;\n    }\n}\n\nint main()\n{\n    cin.tie(0);\n\tios::sync_with_stdio(false);\n    solve();\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define syosu(x) fixed<<setprecision(x)\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef pair<int,int> P;\ntypedef pair<double,double> pdd;\ntypedef pair<ll,ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef vector<string> vs;\ntypedef vector<P> vp;\ntypedef vector<vp> vvp;\ntypedef vector<pll> vpll;\ntypedef pair<int,P> pip;\ntypedef vector<pip> vip;\nconst int inf=1<<29;\nconst ll INF=1ll<<60;\nconst double pi=acos(-1);\nconst double eps=1e-9;\nconst ll mod=1e9+7;\nconst int dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\n\nint dfs(int &I,string &s){\n\tI++;\n\tif(isdigit(s[I])){\n\t\tint x=0;\n\t\twhile(isdigit(s[I])){\n\t\t\tx=10*x+(s[I]-'0');\n\t\t\tI++;\n\t\t}\n\t\tI++;\n\t\treturn x/2+1;\n\t}\n\telse{\n\t\tvi a;\n\t\twhile(s[I]!=']'){\n\t\t\ta.push_back(dfs(I,s));\n\t\t}\n\t\tsort(a.begin(),a.end());\n\t\tint n=a.size(),res=0;\n\t\tfor(int i=0;i<=n/2;i++) res+=a[i];\n\t\tI++;\n\t\treturn res;\n\t}\n}\n\nint solve(string s){\n\tint I=0;\n\treturn dfs(I,s);\n}\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tstring s;\n\t\tcin>>s;\n\t\tcout<<solve(s)<<endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#include <map>\n#define chmin(a, b) ((a)=min((a), (b)))\n#define chmax(a, b) ((a)=max((a), (b)))\n#define fs first\n#define sc second\n#define eb emplace_back\nusing namespace std;\n \ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef tuple<int, int, int> T;\n \nconst ll MOD=1e9+7;\nconst ll INF=1e18;\n \nint dx[]={1, -1, 0, 0};\nint dy[]={0, 0, 1, -1};\n\n\nchar data[10010];\nint poll[10010];\nint sum[10010];\n\nint main(){\n    int z;\n    cin >> z;\n    for(int zz = 0;zz < z;zz++){\n        cin >> data;\n        int count = 0,k = 0;\n        for(int i = 0;i < strlen(data);i++){\n            if(data[i] == '['){\n                k++;\n                sum[count] = k;\n                poll[count] = -1;\n                count++;\n            }else if(data[i] == ']'){\n                k--;\n            }else{ //数字の時\n                int num = data[i] - '0';\n                for(int j = i+1;j < strlen(data);j++){\n                    if(data[j] != '[' && data[j] != ']'){\n                        num = num * 10 + (int)(data[j] - '0');\n                        i++;\n                    }else{\n                        break;\n                    }\n                }\n                count--;\n                poll[count] = num;\n                count++;\n            }\n        }\n        for(int i = 0;i < count;i++){\n//            cout << sum[i] << \" \" << poll[i] << endl;\n        }\n        while(count > 1){\n            int kmax = 0,o = 0;\n            for(int i = 0;i < count;i++){\n                if(sum[i] > kmax){\n                    kmax = sum[i];\n                    o = i;\n                }\n            }\n            priority_queue<int, vector<int> , greater<int> >que;\n            int len = 0;\n            for(int i = o;i < count;i++){\n                if(sum[i] == kmax && poll[i] != -1){\n                    len++;\n                    que.push(poll[i]);\n                }else{\n                    break;\n                }\n            }\n            int ne = 0; // next\n            for(int i = 0;i < (len+1)/2;i++){\n                int q = que.top(); que.pop();\n                ne += (q+1)/2;\n            }\n            poll[o-1] = ne*2 -1;\n            for(int i = o+len;i < count;i++){\n                poll[i-len] = poll[i];\n                sum[i-len] = sum[i];\n            }\n            count -= len;\n        }\n        cout << (poll[0]+1)/2 << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<vb> vbb;\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst double inf = (int)1e8;\n\nint main(){\n    int n;\n    cin >> n;\n    while(n--){\n        string s;\n        cin >> s;\n        vector<int> v;\n        string t;\n        for(int i=0; i< s.size(); i++){\n            if(s[i] == '[' && s[i+1] == '[') t+=\"[\";\n            if('0' <= s[i] && s[i] <= '9'){\n                int m = 0;\n                while('0' <= s[i] && s[i] <= '9'){\n                    m = m*10 + stoi(s.substr(i, 1));\n                    i++;\n                }\n                v.push_back(m);\n            }\n            if(s[i] == ']' && s[i+1] == ']'){\n                if(v.size() != 0){\n                    sort(v.begin(), v.end());\n                    int sum = 0;\n                    for(int i=0; i< v.size()/2+1; i++) sum += v[i]/2+1;\n                    t += to_string(sum);\n                    v.clear();\n                }\n                t += \"]\";\n            }\n        }\n        s = t;\n        while(s.substr(0, 2) == \"[[\"){\n            string t;\n            for(int i=0; i < s.size(); i++){\n                if(s[i] == '[' && s[i+1] == '[') t+=\"[\";\n                if('0' <= s[i] && s[i] <= '9'){\n                    int m = 0;\n                    while('0' <= s[i] && s[i] <= '9'){\n                        m = m*10 + stoi(s.substr(i, 1));\n                        i++;\n                    }\n                    v.push_back(m);\n                }\n                if(s[i] == ']' && s[i+1] == ']'){\n                    if(v.size() != 0){\n                        sort(v.begin(), v.end());\n                        int sum = 0;\n                        for(int i=0; i< v.size()/2+1; i++) sum += v[i];\n                        t += to_string(sum);\n                        v.clear();\n                    }\n                    t += \"]\";\n                }\n            }\n            s = t;\n        }\n        cout << s.substr(1, s.size()-2) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long func(string s){\n    \n    if(s[0] != '['){\n        return stoi(s) / 2 + 1;\n    }\n\n    int depth = 0;\n    int begin = 0;\n    vector<long long> cnt;\n    for(int i = 0; i < (int)s.size(); i++){\n        char c = s[i];\n        if(c == '['){\n            if(depth == 0){\n                begin = i;\n            }\n            depth++;\n        }\n        else if(c == ']'){\n            depth--;\n            if(depth == 0){\n                long long temp = func(s.substr(begin + 1, i - begin - 1));\n                cnt.push_back(temp);\n            }\n        }\n    }\n\n    int win = (int)cnt.size() / 2 + 1;\n    sort(cnt.begin(), cnt.end());\n    \n    long long ret = 0;\n    for(int i = 0; i < win; i++){\n        ret += cnt[i];\n    }\n\n    return ret;\n}\n\nvoid solve(){\n    string s;\n    cin >> s;\n\n    long long ans = func(s);\n    cout << ans << endl;\n}\n\nint main(){\n\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        solve();\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,1,0,-1,1,-1,-1,1};\nconst int dy[]={-1,0,1,0,1,1,-1,-1};\nconst int INF = 1<<30;\nconst double EPS = 1e-15;\n#define PB push_back\n#define mk make_pair\n#define fi first\n#define se second\n#define ll long long\n#define reps(i,j,k) for(int i = (j); i < (k); i++)\n#define rep(i,j) reps(i,0,j)\n#define MOD 1000000007\ntypedef pair<int,int> Pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\nint depth;\nint calc(vi a,int b){\n    int tmp = 0;\n    sort(a.begin(),a.end());\n    rep(i,a.size()/2+1){\n        tmp += a[i]/b+1;\n    }\n    return tmp;\n}\nint dfs(string str){\n    vi num;\n    //printf(\"**%d**\\n\",depth);\n    label:;\n    if(depth == str.size()){\n       /* printf(\"$\");\n        rep(i,num.size()){\n            printf(\"%d \",num[i]);\n        }\n        puts(\"$\");*/\n        sort(num.begin(),num.end());\n        int ret = 0;\n        rep(i,num.size()/2+1){\n            ret += num[i];\n        }\n        return ret;\n    }\n    if(str[depth] == '[' && str[depth+1] == '['){\n        depth++;\n        int a = dfs(str);\n        depth++;\n        //printf(\"%d#%d#\\n\",depth,a);\n        num.PB(a);\n        goto label;\n    }\n    else if(str[depth] == ']'){\n        depth++;\n        //return calc(num,1);\n        goto label;\n    }\n    else if(str[depth] == '['){\n        int index = depth;\n        while(str[index] == '['){\n            int ret = 0;\n            string s = \"\";\n            index++;\n            if(isdigit(str[index])){\n                while(str[index] != ']'){\n                    s += str[index];\n                    index++;\n                }\n                index++;\n                ret = atoi(s.c_str());\n            }\n            depth = index;\n            num.PB(ret);\n        }\n        if(num.size() == 1)return num[0];\n        return calc(num,2);\n    }\n    else return calc(num,1);\n}\nint main(){\n    int N;\n    scanf(\"%d\",&N);\n    while(N--){\n        string str;\n        cin >> str;\n        depth = 0;\n        int ans = dfs(str);\n        int cnt = 0;\n        rep(i,str.size()){\n            if(str[i] != '[')break;\n            cnt++;\n        }\n        cnt-=2;\n        printf(\"%d\\n\",ans-cnt); \n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n\n    for(int i = 0; i < n; i++) {\n        string data;\n        cin >> data;\n        int val = 0;\n        int count = 0;\n        vector<vector<int>> vals(1000);\n\n        for(int j = 0; j < data.size(); j++) {\n            if(data[j] == '[') {\n                count++;\n            }\n            else if(data[j] == ']') {\n                if(val != 0) {\n                    vals[count].push_back((int)(val / 2) + 1);\n                    val = 0;\n                }\n                sort(vals[count].begin(), vals[count].end());\n                int sum = 0;\n                for(int k = 0; k < (int)(vals[count].size() / 2) + 1; k++) {\n                    sum += vals[count][k];\n                }\n                vals[count-1].push_back(sum);\n                vals[count].clear();\n                count--;\n            }\n            else {\n                val *= 10;\n                val += (int)(data[j] - '0');\n            }\n        }\n\n        cout << vals[0][0] << endl;;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nstringstream sss;\nvoid dfs(string str,int max);\nint main(){\n  int n,max,no,cnt,j;\n  string str,ss;\n  cin >> n;\n  while(n--){\n    sss.str(\"\");\n    max = cnt = 0;\n    cin >> str;\n    for(int i=0;i < str.size();i++){\n      if(str[i]=='['){\n\tcnt++;\n\tif(max<cnt)max=cnt;\n      } else if(str[i]==']') cnt--;\n      else {\n\tfor(j=i;str[j]!=']';j++);\n\tss = str.substr(i,j-i);\n\tno = atoi(ss.c_str());\n\tsss << (no/2+1);\n\tss = sss.str();\n\tstr.erase(i,j-i);\n\tstr.insert(i,ss);\n\ti= i+ss.size()-1;\n\tsss.str(\"\");\n      }\n    }\n    dfs(str,max);\n  }\n}\nvoid dfs(string str,int max){  //文字列,段階\n  int list[1000000],len = 0,cnt,x,l = str.size(),j,sum = 0;\n  string ss;\n  for(x=cnt=0;cnt != max && x < l;x++){\n    if(str[x]=='[') cnt++;\n    else if(str[x]==']') cnt--;\n  }\n  if(x == l){\n    dfs(str,max-1);\n    return;\n  }\n  x--;\n  for(int i=x,flg=0;i < l;i++){\n    if(str[i]>='0' && str[i] <= '9'){\n      for(j=i;str[j]!=']';j++);\n      ss = str.substr(i,j-i);\n      list[len] = atoi(ss.c_str());\n      i = j,len++;\n    } else if(str[i]==']') flg--;\n    if(flg==-1){\n      str.erase(x,i-x);\n      break;\n    }\n  }\n  sort(list,list + len);\n  for(int i=0;i<len/2+1;i++) sum += list[i];\n  sss << sum; ss = sss.str();\n  str.insert(x,ss);\n  sss.str(\"\");\n  if(max==2){\n    l=str.size();\n    for(int i=1;i<l-1;i++) cout << str[i];\n    cout << endl;\n    return;\n  }\n  dfs(str,max);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <stdlib.h>\n#include <algorithm>\n\nusing namespace std;\n\nstruct node{\n  int val;\n  vector<int> next;\n  node(){\n    val = -1;\n  }\n  node(int a){\n    val = a;\n  }\n};\n\nint n;\nstring s;\nvector<node> tree;\n\nint make(int p, int v)\n{\n  string tmp;\n  for(int i = p; i < s.size(); i++){\n    if(s[i] == '['){\n      tree.push_back(node());\n      tree[v].next.push_back(tree.size()-1);\n      i = make(i+1, tree.size()-1);\n    }\n    else if(s[i] == ']'){\n      if(tmp != \"\"){\n        tree[v].val = atoi(tmp.c_str());\n      }\n      return i;\n    }\n    else{\n      tmp += s[i];\n    }\n  }\n}\n\nint calc(int v)\n{\n  if(tree[v].val != -1){\n    return (tree[v].val + 1) / 2;\n  }\n  vector<int> vec;\n  for(int i = 0; i < tree[v].next.size(); i++){\n    vec.push_back(calc(tree[v].next[i]));\n  }\n  sort(vec.begin(), vec.end());\n  int ret = 0;\n  for(int i = 0; i < ((int)vec.size()+1)/2; i++) ret += vec[i];\n  return ret;\n}\n\nint main(void)\n{\n  cin >> n;\n  for(int t = 0; t < n; t++){\n    cin >> s;\n\n    tree.clear();\n    tree.push_back(node());\n\n    make(0, 0);\n    cout << calc(0) << endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <functional>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n \nusing namespace std;\n \n#define REP(i,s,e) for(int i=(s); i<(int)(e); i++)\n#define rep(i,n) REP(i, 0, n)\n#define pb push_back\n#define mp make_pair\n#define all(r) (r).begin(),(r).end()\n#define rall(r) (r).rbegin(),(r).rend()\n#define fi first\n#define se second\n#define DBG(X) cout<<\" \"<<#X<<\" : \"<<X<<endl\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef pair<int, int> pii;\n\nconst int INF = 1e9;\nconst double EPS = 1e-8;\nconst int mod = 1e9 + 7;\nconst ll LINF = 1e18;\n\nstruct Input\n{\n\tint n;char c;char str[10024];string s;ll l;double d;\n\tint nextInt(){scanf(\"%d\", &n);return n;}\n\tll nextLong(){scanf(\"%lld\", &l);return l;}\n\tdouble nextDouble(){scanf(\"%lf\", &d);return d;}\n\tchar nextChar(){scanf(\"%c\", &c);return c;}\n\tstring next(){scanf(\"%s\", str);return string(str);}\n\tstring nextLine(){getline(cin, s);return s;}\n};\nInput in;\n\nstring s;\n\nbool isNum(char c){\n\treturn c >= '0' && c<='9';\n}\n\nint calc(int l){\n\t//cout<<\" \"<<l<<\" \"<<s[l]<<endl;\n\tif(isNum(s[l])){\n\t\tint ret = 0;\n\t\twhile(l < s.size() &&isNum(s[l])){\n\t\t\tret *= 10;\n\t\t\tret += s[l]-'0';\n\t\t\tl++;\n\t\t}\n\t\treturn ret /2 + 1;\n\t}\n\tvector<int> v;\n\tint lv = 0;\n\tfor(int i = l; i < s.size(); i++){\n\t\tif(s[i]=='[') {\n\t\t\tif(lv == 0) v.pb(calc(i + 1));\n\t\t\tlv++;\n\t\t}\n\t\telse if(s[i]==']') lv--;\n\t\tif(lv < 0) break;\n\t}\n\tsort(all(v));\n\tint ret = 0;\n\tassert(v.size()>0);\n\tfor(int i = 0; i < v.size()/2 + 1; i++) ret += v[i];\n\treturn ret;\n}\n\nint main(){\n\tint n = in.nextInt();\n\trep(i, n){\n\t\ts = in.next();\n\t\t//cout<<s<<endl;\n\t\tcout<<calc(1)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++){\n        string s;\n        cin >> s;\n        vector<vector<int>> node(20);\n        int k = (int)s.size();\n        int left = 0;\n        bool flag = false;\n        for (int j = 0; j < k; j++){\n            if (s[j] == '[') {\n                left++;\n                flag = false;\n            }\n            if (s[j] == ']'){\n                if (flag){\n                    int w = (int)node[left].size();\n                    vector<int> tmp;\n                    for (int z = 0; z < w; z++){\n                        tmp.push_back(node[left][z]);\n                    }\n                    sort(tmp.begin(), tmp.end());\n                    int ans = 0;\n                    for (int z = 0; z <= w/2; z++) ans += tmp[z];\n                    node[left-1].push_back(ans);\n                    node[left].clear();\n                    left--;\n                }\n                else{\n                    left--;\n                    flag = true;\n                    int x = 0;\n                    for (int z = 1; z <= 4; z++){\n                        if (j - z < 0) break;\n                        if (0 <= s[j-z] - '0' && s[j-z] - '0' <= 9) x += (s[j-z] - '0') * pow(10, z-1);\n                        else break;\n                    }\n                    node[left].push_back(x/2 + 1);\n                }\n            }\n        }\n        cout << node[0][0] << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<queue>\n#include<cstdlib>\n\nusing namespace std;\n\nchar s[10010];\nconst char *p;\n\nint rec() {\n    priority_queue<int, vector<int>, greater<int> > pq;\n\n    bool flag = true;\n\n    while(*(++p) != ']') {\n        if(*p == '[') pq.push(rec());\n        else if(flag) {\n            pq.push(atoi(p)/2+1);\n            flag = false;\n        }\n    }\n    \n    int t = pq.size()/2+1, res=0;\n    for(int i=0; i<t; i++) {\n        res += pq.top();\n        pq.pop();\n    }\n    return res;\n}\n\nint main(void) {\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0; i<n; i++) {\n        scanf(\"%s\",s);\n        p = s;\n        printf(\"%d\\n\", rec());\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n\nusing namespace std;\n\n#define MAX 10000\n\nint main(){\n\t\n\tint n;\n\tstring s;\n\tstring stm;\n\tvector<int> num[MAX];\n\tcin>>n;\n\tint lay;\n\tint sum;\n\tbool f;\n\n\tfor(int i=0;i<n;i++){\n\t\tcin>>s;\n\t\tlay=0;\n\t\tfor(int j=0;j<s.size();j++){\n\t\t\tif(s[j]=='[') lay++;\n\t\t\telse if(s[j]==']'){\n\t\t\t\tif(stm==\"\"){\n\t\t\t\t\tsort(num[lay+1].begin(),num[lay+1].end());\n\t\t\t\t\tsum=0;\n\t\t\t\t\tfor(int i=0;i<num[lay+1].size()/2+1;i++){\n\t\t\t\t\t\tif(f) sum+=num[lay+1][i]/2+1;\n\t\t\t\t\t\telse sum+=num[lay+1][i];\n\t\t\t\t\t}\n\t\t\t\t\tf=false;\n\t\t\t\t\tnum[lay+1].clear();\n\t\t\t\t\tnum[lay].push_back(sum);\n\t\t\t\t\tlay--;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnum[lay].push_back(atoi(stm.c_str()));\n\t\t\t\t\tlay--;\n\t\t\t\t\tstm=(\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tstm+=s[j],f=true;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tsort(num[lay+1].begin(),num[lay+1].end());\n\t\tsum=0;\n\t\tfor(int i=0;i<num[lay+1].size()/2+1;i++){\n\t\t\tsum+=num[lay+1][i];\n\t\t}\n\t\tcout<<sum<<endl;\n\t\tfor(int i=0;i<MAX;i++){\n\t\t\tif(!num[i].empty()) num[i].clear();\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <vector>\n#include <set>\n#include <iomanip>\n#include <stack>\n#include <fstream>\n#include <cstdint>\n#include <cmath>\n#include <algorithm>\n#include <utility>\n#include <numeric>\n#include <functional>\n\nusing namespace std;\n\n\ntypedef int64_t ll;\n\n\nclass rect{\n    static const int inf = 100000;\npublic:\n    int sx, sy; // 始点 左上\n    int ex, ey; // 終点 右下\n    rect() :sx(inf), sy(inf), ex(), ey() {}\n    \n    void modify(const int& i, const int& j){\n        sx = min(i, sx);\n        sy = min(j, sy);\n        \n        ex = max(i, ex);\n        ey = max(j, ey);\n    }\n};\n\nbool is_real_over(char T, map<char, set<char>>& overs, set<char> pre){\n    for (auto && top : overs[T]) {\n        if(pre.count(top) > 0) {\n//            cerr << \"CROSS ERROrR\\n\";\n            return false;\n        }\n        pre.insert(top);\n        if(!is_real_over(top, overs, pre))  return false;\n    }\n    return true;\n\n}\n\n\nbool solve(){\n    int h, w;\n    cin >> h >> w;\n    vector<vector<char>> v;\n    map<char, rect> shapes;\n    for (int i = 0; i < h; ++i) {\n        v.push_back({});\n        for (int j = 0; j < w; ++j) {\n            char tmp;\n            cin >> tmp;\n            v[i].push_back(tmp);\n\n            if(tmp != '.')\n                shapes[tmp].modify(i, j);\n        }\n    }\n\n\n    // 矩形調査 yz\n    map<char, set<char>> overs;\n    for(auto && rec_pair: shapes){\n        auto && rec = rec_pair.second;\n        auto && rec_name = rec_pair.first;\n//        cerr << \"NAME:\" << rec_name << '\\n';\n        for (int i = rec.sx; i <= rec.ex; ++i) {\n            for (int j = rec.sy; j <= rec.ey; ++j) {\n                auto&& this_char = v[i][j];\n                if(this_char != rec_name){\n                    if(this_char == '.'){\n//                        cerr << \"SHAPE MISS\\n\";\n                        return false;\n                    }\n                    overs[rec_name].insert(this_char);\n                }\n            }\n        }\n    }\n//    cerr << \"OVERS::\\n\";\n//    for(auto && m : overs){\n//        cerr << m.first << ':';\n//        for(auto && t : m.second){\n//            cerr << ' ' << t;\n//        }\n//        cerr << '\\n';\n//    }\n\n    // 重なり調査\n    for(auto&& op: overs){\n        if(!is_real_over(op.first, overs, {op.first}))\n            return false;\n    }\n\n\n    return true;\n    \n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        cout << (!solve() ? \"SUSPICIOUS\" : \"SAFE\") << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nstring str;\nint ind;\nint dig(int lead){\n\tif(str[ind]<'0'||'9'<str[ind]) return lead;\n\tint tmp=str[ind]-'0';\n\t++ind;\n\treturn dig(lead*10+tmp);\n}\nint solve(){\n\tvector<int> step;\n\tfor(;;){\n\t\tif(ind>=str.size()){\n\t\t\tsort(step.begin(),step.end());\n\t\t\tint tmpans=0;\t\n\t\t\tfor(int i=0;i<step.size()/2+1;++i)\n\t\t\t\ttmpans+=step[i];\n\t\t\treturn tmpans;\n\t\t}else if(str[ind]=='['){\n\t\t\t++ind;\n\t\t\tstep.push_back(solve());\n\t\t}else if(str[ind]==']'){\n\t\t\t++ind;\n\t\t\tsort(step.begin(),step.end());\n\t\t\tint tmpans=0;\t\n\t\t\tfor(int i=0;i<step.size()/2+1;++i)\n\t\t\t\ttmpans+=step[i];\n\t\t\treturn tmpans;\n\t\t}else{\n\t\t\tstep.push_back(dig(0)/2+1);\n\t\t}\n\t}\n}\nint main(){\n    cin >> n;\n    for(int i=0;i<n;++i){\n    \tcin >> str;\n    \tind=0;\n    \tcout << solve() << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<string>\nusing namespace std;\nusing ll = long long;\nstring str;\n\nint solve(){\n    bool flag = 1;\n    while(1){\n        int cnt=0,num=0;\n        string str2;\n        vector<int> vc;\n        for(int i=0;i<=str.size();i++){\n            if('0'<=str[i]&&str[i]<='9'){\n                if(num==0)  num = (str[i]-'0');\n                else  num = 10*num + (str[i]-'0');\n            }\n            else if(str[i]==']'){\n                if(num==0){\n                    if(vc.size()==0)    str2 = str2 + \"]\";\n                    else{\n                        int temp=0;\n                        sort(vc.begin(),vc.end());\n                        if(flag==1){\n                            for(int j=0;j<((vc.size()+1)/2);j++)   temp+=((vc[j]+1)/2);\n                        }\n                        else{\n                            for(int j=0;j<((vc.size()+1)/2);j++)   temp+=(vc[j]);\n                        }\n                        str2 = str2 + to_string(temp)+\"]\";\n                        vc.clear();\n                    }\n                }\n                else{\n                    vc.push_back(num);\n                    num = 0;\n                }\n            }\n            else if(str[i]=='\\0'){\n                if(vc.size()>=1) return vc[0];\n            }\n            else    str2 = str2 + \"[\";\n        }\n        str = str2;\n        flag = 0;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    while(n--){\n        cin >> str;\n        cout << solve() << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nint main () {\n\n  std::vector<int> v[16384];\n  int num;\n  int depth;\n  int N;\n  std::string str;\n\n  std::cin >> N;\n  for(int i = 0; i < N; ++i) {\n\n    for(int j = 0; j < 16384; ++j) {\n      v[j].clear();\n    }\n    \n    std::cin >> str;\n    depth = 0;\n    for(int j = 0; j < str.size(); ++j) {\n      if( str[j] == '[' ) {\n\tdepth += 1;\n\tnum = 0;\n      }\n      else if( '0' <= str[j] and str[j] <= '9' ) {\n\tnum *= 10;\n\tnum += str[j] - '0';\n      }\n      else {\n\tdepth -= 1;\n\tif( num != -1 ) {\n\t  v[depth].push_back((num+1)/2);\n\t}\n\telse {\n\t  std::sort(v[depth+1].begin(), v[depth+1].end());\n\t  int sum = 0;\n\t  for(int k = 0; k < (v[depth+1].size()+1)/2; ++k) {\n\t    sum += v[depth+1][k];\n\t  }\n\t  v[depth].push_back(sum);\n\t  v[depth+1].clear();\n\t}\n\tnum = -1;\n      }\n    }\n    std::cout << v[0][0] << std::endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<queue>\n\nusing namespace std;\n\nstring line;\n\ntypedef struct{\n  int ans;\n  int s;\n}orig;\n\n\n/*一つの選挙の最小人数を求める\n来るデータ~~~~~~]~~~~]~~~]\n頭の[は取ってある\n関数内で]を取ってかえす\n*/\norig rec(int s){\n  priority_queue<int,vector<int>,greater<int> > box;\n  int ans=0,i=0;\n  orig val;\n  while(s<line.size() && line.at(s)=='['){\n    s++;\n    val=rec(s);\n    box.push(val.ans);\n    s=val.s;\n  }\n\n  if(s<line.size() && line.at(s)==']'){\n    /*第一弾以外のとき*/\n    //cout<< box.size()<<\"size \";\n    for(i=0;i<=box.size()/2+1;i++){\n      ans+=box.top();\n      //      cout << box.top()<<\"top \";\n      box.pop();\n    }\n    s++;     \n  }\n  else {\n    /*[でも]でもない　つまり数字　つまり第一段 line = 122121][~~~ で来る\n     条件よりboxは今empty*/\n    int i=0;\n    while(line.at(s+i)!=']')i++;\n    ans=stoi(line.substr(s,i))/2+1;//iはat(i)で]の位置、at(i)はsubstrでi+1番目\n    //        cout<<ans<<\"&  \";\n    s+=i+1;\n  }\n  orig a;\n  a.ans=ans;a.s=s;\n  return a;\n  \n}\n\nint main(){\n  int n,i;\n  orig ans;\n  cin >>n;\n  for(i=0;i<n;i++){\n    //string line;\n    line=\"\";\n    cin >> line;//getline(cin,line);\n    ans=rec(1);\n    cout <<ans.ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <iomanip>\n#include <cmath>\n#include <string.h>\n\n#define MAX_N 100\n\nusing namespace std;\n\nint N;\nchar str[10000];\n\nint get_num(int l){\n\tint res = 0;\n\tfor (int i = l; str[i] != ']'; i++)\n\t{\n\t\tres += (str[i]-'0');\n\t\tres *= 10;\n\t}\n\tres /= 10;\n\treturn res;\n}\n\nint dfs(int l, int r){// \"[....]\"??¨?????£???????????????(...???)????????°?????????\n\tif(str[l+1] >= '0' && str[l+1] <= '9') return get_num(l+1)/2+1;\n\tint a[1000];\n\tint count = 0;// ??????????????°\n\tint k = 0, nl = l+1;\n\tfor (int i = l+1; i < r; i++)\n\t{\n\t\tif(str[i] == '['){\n\t\t\tk++;\n\t\t}else if(str[i] == ']'){\n\t\t\tk--;\n\t\t}\n\t\tif(k == 0){\n\t\t\ta[count] = dfs(nl, i);\n\t\t\tnl = i+1;\n\t\t\tcount++;\n\t\t}\n\t}\n\tsort(a, a+count);\n\tint sum = 0;\n\tfor (int i = 0; i < count/2+1; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\treturn sum;\n}\n\nvoid solve() {\n\tint res = dfs(0, strlen(str)-1);\n\tcout << res << endl;\n\treturn;\n}\n\nint main(){\n\tcin >> N;\n\tfor (int i = 0; i < N; i++)\n\t{\n\t\tcin >> str;\n\t\tsolve();\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i,k,n) for(int i = (k); i < (n); i++)\n#define REP(i,n) FOR(i,0,n)\n#define ALL(a) begin(a),end(a)\n#define MS(m,v) memset(m,v,sizeof(m))\n#define D10  fixed<<setprecision(5)\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef pair<short, short> P;\ntypedef complex<double> Point;\ntypedef long long ll;\nconst int INF = 114514810;\nconst int MOD = 100000007;\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nstruct edge\n{\n\tint from, to, cost;\n\tbool operator < (const edge& e) const { return cost < e.cost; }\n\tbool operator > (const edge& e) const { return cost > e.cost; }\n};\n\nint n;\nstring s;\nint main()\n{\n\tcin >> n;\n\twhile (n--)\n\t{\n\t\tcin >> s;\n\t\tvi v;\n\t\tREP(i, s.size())\n\t\t{\n\t\t\tif (s[i] == '[') v.push_back(-1);\n\t\t\telse if (s[i] == ']') v.push_back(-2);\n\t\t\telse\n\t\t\t{\n\t\t\t\tint tmp = 0;\n\t\t\t\twhile (isdigit(s[i]))\n\t\t\t\t{\n\t\t\t\t\ttmp *= 10;\n\t\t\t\t\ttmp += s[i] - '0';\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tv.push_back(tmp / 2 + 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\twhile (1)\n\t\t{\n\t\t\tvi tmp;\n\t\t\tREP(i, v.size())\n\t\t\t{\n\t\t\t\tif (v[i] == -1 && v[i + 1] < 0) tmp.push_back(-1);\n\t\t\t\telse if (v[i] == -2 && v[i - 1] < 0) tmp.push_back(-2);\n\t\t\t\telse if (v[i]>0) tmp.push_back(v[i]);\n\t\t\t}\n\t\t\tif (tmp.size() == 1)\n\t\t\t{\n\t\t\t\tcout << tmp[0] << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvi tmp2;\n\t\t\tREP(i, tmp.size())\n\t\t\t{\n\t\t\t\tif (tmp[i]>0)\n\t\t\t\t{\n\t\t\t\t\tvi buf;\n\t\t\t\t\twhile (tmp[i] > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbuf.push_back(tmp[i]);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\ti--;\n\t\t\t\t\tsort(ALL(buf));\n\t\t\t\t\tint sum = 0;\n\t\t\t\t\tREP(i, buf.size() / 2 + 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tsum += buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ttmp2.push_back(sum);\n\t\t\t\t}\n\t\t\t\telse tmp2.push_back(tmp[i]);\n\t\t\t}\n\t\t\tv = tmp2;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i = 0; i < n; ++i)\nusing namespace std;\n\nstring S;\nsize_t cur = 0;\n\nint number(){\n\tint num = 0;\n\twhile(isdigit(S[cur])){\n\t\tnum = 10 * num + (S[cur++] - '0');\n\t}\n\treturn num;\n}\n\nint parser(){\n\tvector<int> res;\n\tif(S[cur]=='[') cur++;\n\n\tif(isdigit(S[cur])){\n\t\tconst int num = number();\n\t\tres.push_back((num+1)/2);\n\t}else{\n\t\twhile(S[cur]=='['){\n\t\t\tres.push_back(parser());\n\t\t}\n\t}\n\n\tassert(S[cur]==']');\n\tcur++;\n\n\tsort(begin(res),end(res));\n\tconst int n = res.size();\n\tint ret = 0;\n\trep(i,n/2+1) ret += res[i];\n\treturn ret;\n\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\trep(i,n){\n\t\tcin >> S;\n\t\tcur = 0;\n\t\tcout << parser() << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> P;\ntypedef pair<P,int> T;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\n#define pb push_back\n#define mp make_pair\n#define eps 1e-9\n#define INF 2000000000\n#define sz(x) ((int)(x).size())\n#define fi first\n#define sec second\n#define all(x) (x).begin(),(x).end()\n#define sq(x) ((x)*(x))\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\n#define repn(i,a,n) for(int (i)=(a);(i)<(int)(n);(i)++)\n#define EQ(a,b) (abs((a)-(b))<eps)\ntemplate<class T> void chmin(T& a,const T& b){if(a>b)a=b;}\ntemplate<class T> void chmax(T& a,const T& b){if(a<b)a=b;}\nstring s;\nint k=1;\nint par[100100];\nint val[100100];\nvector<int> child[100100];\nint rec(int v){\n\tif(val[v]!=0){\n\t\treturn (val[v]+1)/2;\n\t}\n\tvector<int> vec;\n\tfor(int i=0;i<child[v].size();i++){\n\t\tvec.pb(rec(child[v][i]));\n\t}\n\tsort(all(vec));\n\tint res = 0;\n\tfor(int i=0;i<((int)vec.size()+1)/2;i++){\n\t\tres += vec[i];\n\t}\n\treturn res;\n}\nvoid init(){\n\tk=1;\n\tmemset(par,-1,sizeof(par));\n\tmemset(val,0,sizeof(val));\n\tfor(int i=0;i<100100;i++)child[i].clear();\n}\nvoid solve(){\n\tstring s;\n\tcin >> s;\n\tinit();\n\tint cur = 0;\n\tpar[0]=-1;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='['){\n\t\t\tpar[k]=cur;\n\t\t\tchild[cur].pb(k);\n\t\t\tcur = k;\n\t\t\tk++;\n\t\t}else if(s[i]==']'){\n\t\t\tcur = par[cur];\n\t\t}else{\n\t\t\tval[cur]=(val[cur]*10+(s[i]-'0'));\n\t\t}\n\t}\n\tassert(cur==0);\n\tcout << rec(0) << endl;\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tfor(int i=0;i<n;i++)solve();\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "//============================================================================\n// Name        : aoj1188.cpp\n// Author      : afterCmidday\n// Version     :\n// Copyright   : Your copyright notice\n// Description : Hello World in C++, Ansi-style\n//============================================================================\n\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include <cctype>\n#include <vector>\n#include <algorithm>\n#include <functional>\n\nusing namespace std;\n\n\nstring s;\n\nint solve(int l,int r){\n\tif(s[l] == '['){\n\t\tint i, cnt = 0; // 次に要素番号 l の後ろに'['があった場合 +1,']'があった場合 -1 とするcntである\n\t\tvector<int> each;\n\t\twhile(l < r){\n\t\t\tfor(i = l + 1;i < r && !(s[i] == ']' && cnt == 0);i++){ // そのcntが0でかつs[l]が']'(この選挙区の終端)であるときに終了\n\t\t\t\tif(s[i] == '['){\n\t\t\t\t\tcnt++;\n\t\t\t\t}else if(s[i] == ']'){\n\t\t\t\t\tcnt--;\n\t\t\t\t}\n\t\t\t}\n\t\t\teach.push_back(solve(l + 1,i));\n\t\t\tl = i + 1;\n\t\t}\n\t\tsort(each.begin(),each.end());\n\t\tint sum = 0;\n\t\tfor(int i = 0;i < (each.size() + 1) / 2;i++){\n\t\t\t//cout << each[i] << \" \";\n\t\t\tsum += each[i];\n\t\t}\n\t\t//cout << endl;\n\t\t//cout << sum << endl;\n\t\treturn sum;\n\t}\n\tif(isdigit(s[l])){\n\t\tint d = 0;\n\t\tfor(int i = l;i < r && isdigit(s[i]);i++){\n\t\t\td = d * 10 + (s[i] -'0');\n\t\t}\n\t\treturn (d + 1) / 2;\n\t}\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\tcin.get();\n\tcin.get();\n\tfor(int i = 0;i < n;i++){\n\t\tgetline(cin,s);\n\t\tcout << solve(1,s.size() - 2) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <set>\n#include <queue>\n#include <map>\n#include <climits>\n#include <cfloat>\n \nusing namespace std;\n \n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define RREP(i,n) for(int i=(int)n-1; i>=0; i--)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define RFOR(i,c) for(__typeof((c).rbegin())i=(c).rbegin();i!=(c).rend();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define eps 10e-5\n#define INF 1e8\n \ntypedef long long int ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, pair<int, int> > pipii;\ntypedef vector<int> vi;\n \n \n#define M INT_MAX\nstring s;\nint id;\nint dfs(){\n\tvector<int> p;\n\tint num = 0;\n\twhile(1){\n//cout << s[id] << endl;\n\t\tif(s[id] == ']'){ id++; break;}\n\t\telse if(s[id] == '[') id++, p.push_back(dfs());\n\t\telse {\n\t\t\twhile(s[id] != ']') num = num*10 + (int)(s[id++]-'0');\n\t\t\tid++;\n\t\t\treturn num;\n\t\t}\n\t}\n\tint ret = 0;\n\tsort(ALL(p));\n\tREP(i,p.size()/2 + 1) ret += p[i]/2 + 1;\n\t//cout << id << \":\" << ret << endl;\n\treturn ret;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tcin >> s;\n\t\tid = 1;\n\t\tcout << dfs() << endl;\n\t}\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <map>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <stack>\n#include <queue>\nusing namespace std;\n\ntypedef list<int> L;\ntypedef pair <int,int> P;\ntypedef vector<int> V;\ntypedef queue<int> Q;\ntypedef stack<int> S;\ntypedef map<string,int> M;\n\nint change (string s) {\n    int ten = 1;\n    int res = atoi(&s[0]);\n    res = (res / 2) + 1;\n\n    return res;\n}\n\nint dfs (string str) {\n    int corsor = 1;\n    int i = 0;\n    V v;\n    while (i < str.size()) {\n        corsor = 1;\n        i++;\n        string tmp;\n        while (corsor) {\n            if (str[i] == '[') corsor++;\n            else if (str[i] == ']') corsor--;\n            if (corsor)\n                tmp += str[i];\n            i++;\n        }\n        if (tmp[0] != '[') {\n            v.push_back(change(tmp));\n        }\n        else\n            v.push_back(dfs(tmp));\n    }\n    int res = 0;\n    sort(v.begin(), v.end());\n    for (int i = 0; i < v.size() / 2 + 1; i++) {\n        res += v[i];\n    }\n\n    return res;\n}\n\nint main()\n{\n    int M;\n    cin >> M;\n\n    for (int i = 0; i < M; i++) {\n        string str;\n        cin >> str;\n        cout << dfs(str) << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#define __USE_MINGW_ANSI_STDIO 0\n#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<ll> VL;\ntypedef vector<VL> VVL;\ntypedef pair<int, int> PII;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define ALL(x) x.begin(), x.end()\n#define IN(a, b, x) (a<=x&&x<b)\n#define MP make_pair\n#define PB push_back\n#define MOD 1000000007\n#define INF (1LL<<30)\n#define LLINF (1LL<<60)\n#define PI 3.14159265359\n#define EPS 1e-12\n//#define int ll\n\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\n\nint dfs(string s) {\n  //cout << s << endl;\n  if(s[0] == '[') s = s.substr(1, s.size()-2);\n  if(isdigit(s[0])) {\n    int ret = 0;\n    REP(i, s.size()) {\n      ret *= 10;\n      ret += s[i] -'0';\n    }\n    return ret/2+1;\n  }\n\n  VI v;\n  int idx = 0, a = 0;\n  REP(i, s.size()) {\n    if(s[i] == '[') a++;\n    else if(s[i] == ']') a--;\n    if(a == 0) {\n      //cout << s.substr(idx, i-idx+1) << endl;\n      v.PB(dfs(s.substr(idx, i-idx+1))), idx = i+1;\n    }\n  }\n  sort(ALL(v));\n  int ret = 0;\n  REP(i, v.size()/2+1) ret += v[i];\n  return ret;\n}\n\nsigned main(void)\n{\n  int n;\n  cin >> n;\n  REP(i, n) {\n    string s;\n    cin >> s;\n    cout << dfs(s) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <ctype.h>\n#include <string> \n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <cstdlib>\n#include <map>\n#include <queue>\n#include <utility>\n#include <vector>\n#include <set>\n#include <list>\n#include <cstring>\n#include <stack>\n   \nusing namespace std;\n\nint winnum(string s)\n{\n    int ans = 0;\n    s = s.substr(1, s.length() - 2);\n    for(int i = 0; i < s.length(); i++){\n        ans += (s[i] - '0') * (int)pow(10, s.length() - 1 - i);\n    }\n    // cout << ans << endl;\n    return ans / 2 + 1;\n}\n\nint solve(string s)\n{\n    if(find(s.begin() + 1, s.end() - 1, '[') == s.end() - 1) return winnum(s);\n    // cout << s << endl;\n    vector<int> num;\n    int kakkonum = 0;\n    int start;\n    for(int i = 1; i < s.length() - 1; i++){\n        if(s[i] == '['){\n            if(kakkonum == 0) start = i;\n            kakkonum++;\n        }\n        if(s[i] == ']'){\n            kakkonum--;\n        }\n        if(kakkonum == 0){\n            num.push_back(solve(s.substr(start, i - start + 1)));\n        }\n    }\n    sort(num.begin(), num.end());\n    int ans = 0;\n    for(int i = 0; i < num.size() / 2 + 1; i++){\n        ans += num[i];\n    }\n    return ans;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        string s;\n        cin >> s;\n        cout << solve(s) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Tree\n{\n\tvector <int> child;\n\tint toWin;\n} tree[10000];\n\nint treeN;\nvector <vector <int> > dp[10000];\n\npair<int, int> parse(char str[], int ind)\n{\n\tint ret = treeN++;\n\ttree[ret].child.clear();\n\n\tind++;\n\n\tif(str[ind] != '[')\n\t{\n\t\ttree[ret].toWin = 0;\n\t\twhile(str[ind] >= '0' && str[ind] <= '9') tree[ret].toWin = tree[ret].toWin * 10 + (str[ind++] - '0');\n\t\ttree[ret].toWin = (tree[ret].toWin + 1) / 2;\n\t}\n\telse\n\t{\n\t\tdo\n\t\t{\n\t\t\tpair<int, int> res = parse(str, ind);\n\t\t\ttree[ret].child.push_back(res.first);\n\t\t\tind = res.second;\n\t\t} while(str[ind] == '[');\n\t}\n\n\treturn make_pair(ret, ind + 1);\n}\n\nint getAns(int ind, int cind, int reqWin)\n{\n\tif(tree[ind].child.size() == 0) return tree[ind].toWin;\n\n\tif(cind >= tree[ind].child.size())\n\t{\n\t\tif(reqWin == 0) return 0;\n\t\treturn 99999999;\n\t}\n\n\tint &ret = dp[ind][cind][reqWin];\n\tif(ret != -1) return ret;\n\n\tret = getAns(ind, cind + 1, reqWin);\n\tif(reqWin > 0)\n\t{\n\t\tint tarInd = tree[ind].child[cind];\n\t\tint nReqWin = (tree[tarInd].child.size() + 1) / 2;\n\t\tret = min(ret, getAns(ind, cind + 1, reqWin - 1) + getAns(tarInd, 0, nReqWin));\n\t}\n\n\treturn ret;\n}\n\nvoid printinfo(int ind)\n{\n\tif(tree[ind].child.size() == 0) printf(\"leafnode %d with people %d\\n\", ind, tree[ind].toWin);\n\telse\n\t{\n\t\tprintf(\"node %d with child:\", ind);\n\t\tfor(int i=0;i<tree[ind].child.size();i++) printf(\" %d\", tree[ind].child[i]);\n\t\tprintf(\"\\n\");\n\t\tfor(int i=0;i<tree[ind].child.size();i++) printinfo(tree[ind].child[i]);\n\t}\n}\n\nint main(void)\n{\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile(T--)\n\t{\n\t\tchar inp[100001];\n\t\tscanf(\"%s\", inp);\n\n\t\ttreeN = 0;\n\t\tint root = parse(inp, 0).first;\n\n//\t\tprintinfo(root);\n\n\t\tfor(int i=0;i<treeN;i++)\n\t\t{\n\t\t\tdp[i].resize(tree[i].child.size());\n\t\t\tfor(int j=0;j<dp[i].size();j++) dp[i][j] = vector<int>((dp[i].size() + 1) / 2 + 1, -1);\n\t\t}\n\n\t\tprintf(\"%d\\n\", getAns(root, 0, (tree[root].child.size() + 1) / 2));\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define fi first\n#define se second\n#define repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define each(itr,v) for(auto itr:v)\n#define pb(s) push_back(s)\n#define mp(a,b) make_pair(a,b)\n#define all(x) (x).begin(),(x).end()\n#define dbg(x) cout<<#x\"=\"<<x<<endl\n#define maxch(x,y) x=max(x,y)\n#define minch(x,y) x=min(x,y)\n#define uni(x) x.erase(unique(all(x)),x.end())\n#define exist(x,y) (find(all(x),y)!=x.end())\n#define bcnt(x) bitset<32>(x).count()\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> P;\ntypedef pair<P, int> PPI;\ntypedef pair<ll, ll> PL;\ntypedef pair<P, ll> PPL;\n\n#define INF INT_MAX/3\n\n#define MAX_N 1000\n\nint cases;\nstring s;\n\nint dfs(int l,int r){\n\tbool num=true;\n\trepl(i,l+1,r-1){\n\t\tif(!isdigit(s[i])){\n\t\t\tnum=false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(num){\n\t\treturn stoi(s.substr(l+1,r-l-2))/2+1;\n\t}else{\n\t\tint level=-1;\n\t\tint ll;\n\t\tvector<int> ns;\n\t\trepl(i,l,r){\n\t\t\tif(s[i]=='['){\n\t\t\t\tif(level==0){\n\t\t\t\t\tll=i;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tlevel--;\n\t\t\t\tif(level==0){\n\t\t\t\t\tns.pb(dfs(ll,i+1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsort(all(ns));\n\t\tint res=0;\n\t\trep(i,ns.size()/2+1){\n\t\t\tres+=ns[i];\n\t\t}\n\t\treturn res;\n\t}\n}\n\nint main(){\n\tcin.sync_with_stdio(false);\n\tcin>>cases;\n\twhile(cases--){\n\t\tcin>>s;\n\t\tcout<<dfs(0,s.length())<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define State string::const_iterator\nclass ParseError {};\n\nint number(State &begin);\nint factor(State &begin);\nvoid consume(State &begin, char expected);\n\n// 数字の列をパースして、その数を返す。\nint number(State &begin) {\n    int ret = 0;\n\n    while(isdigit(*begin)){\n        ret *= 10;\n        ret += *begin - '0';\n        begin++;\n    }\n\n    return ret;\n}\n\n// 括弧か数をパースして、その評価結果を返す。\nint factor(State &begin) {\n\n    consume(begin, '['); // '('を飛ばす。\n\n    if(*begin != '['){\n        return number(begin) / 2 + 1; //[23]のような形\n    }\n\n    //[[23][31][52]]のような形より[]が多い時に通る。\n    priority_queue<int> q;\n    while(*begin == '['){\n        q.push(-factor(begin)); //[[23][31][52]]のような形になるまで再帰\n        consume(begin, ']');\n    }\n    int ans = 0;\n    int siz = q.size();\n    for(int i=0; i<siz/2 + 1; i++){\n        ans += -q.top();\n        q.pop();\n    }\n    return ans;\n\n}\n\n// beginがexpectedを指していたらbeginを一つ進める。\nvoid consume(State &begin, char expected) {\n    if (*begin == expected) {\n        begin++;\n    } else {\n        cerr << \"Expected '\" << expected << \"' but got '\" << *begin << \"'\"\n             << endl;\n        cerr << \"Rest string is '\";\n        while (*begin) {\n            cerr << *begin++;\n        }\n        cerr << \"'\" << endl;\n        throw ParseError();\n    }\n}\n\nint main() {\n\n    int n;\n\n    cin >> n;\n\n    while(n--){\n\n        string input;\n\n        cin >> input;\n\n        State s = input.begin();\n\n        cout << factor(s) << endl;\n\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include<algorithm>\n#include <numeric>\n\nusing namespace std;\n\n\nint minimum_votes(const string& input, int& index) {\n    if(input[index+1] != '[') {\n        int num = 0;\n        index++;\n        while(input[index] != ']') {\n            num = 10*num + input[index] - '0';\n            index++;\n        }\n        return num / 2 + 1;\n    }\n    vector<int> nums;\n    while(true) {\n        index++;\n        nums.push_back(minimum_votes(input, index));\n        if(input[index+1] == ']') {\n            index++;\n            break;\n        }\n    }\n    sort(nums.begin(), nums.end());\n    return accumulate(nums.begin(), nums.begin() + nums.size() / 2 + 1, 0);\n}\n\nint main() {\n    int T; cin >> T;\n    for(int t = 0; t < T; t++) {\n        string input; cin >> input;\n        int index = 0;\n        cout << minimum_votes(input, index) << endl;\n    }\n}\n// \n// [Probrem] Hierarchical Democracy\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1188&lang=jp\n// \n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\nint formula();\nint p;\nstring s;\n\nint main(){\n  int n;  \n  cin>>n;\n  while(n--){\n    cin>>s;\n    p=0;\n    cout<<formula()<<endl;\n  }\n  return 0;\n}\n\nint formula(){\n  int res=0,f=0;\n  vector<int> v;\n  while('0'<=s[p]&&s[p]<='9') res=res*10+s[p]-'0',p++,f=1;\n  if(f){\n    res=res/2+1;\n    return res;\n  }\n  while(s[p]=='[') p++,v.push_back(formula()),p++;\n  if(!f){\n    sort(v.begin(),v.end());\n    for(int i=0;i<v.size()/2+1;i++) res+=v[i];\n  }\n  return res;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\nint T;\nstring S;\nint dp[1010] = {};\nint main(){\n    cin >> T;\n    for(int t=0;t<T;t++){\n        cin >> S;\n        int now = 0,depth = 0;\n        int N = S.size();\n        for(int i=0;i<N;i++){\n            if(S[i]=='[') now++;\n            else if(S[i]==']') now--;\n            depth = max(now,depth);\n        }\n        priority_queue<int,vector<int>,greater<int>> Q[depth];\n        stack<int> st;\n        for(int i=0;i<N;i++){\n            if(S[i]=='[') now++;\n            else if(S[i]==']'){\n                now--;\n                if(!st.empty()){\n                    int p = 1,value = 0;\n                    while(!st.empty()){\n                        int a = st.top(); st.pop();\n                        value += p*a;\n                        p *= 10;\n                    }\n                    Q[now].push((value+1)/2);\n                }else{\n                    int value = 0;\n                    int n = Q[now+1].size();\n                    while(!Q[now+1].empty()){\n                        if(Q[now+1].size()>n/2) value += Q[now+1].top();\n                        Q[now+1].pop();\n                    }\n                    Q[now].push(value);\n                }\n            }\n            else st.push(S[i]-'0');\n        }\n        cout << Q[0].top() << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\n\nconst char *p;\n\nint solve() {\n  int ret = 0;\n  \n  ++p;\n  if(*p == '[') {\n    vector<int> v;\n    while(*p=='[') v.push_back(solve());\n    sort(v.begin(), v.end());\n    for(int i = v.size()/2; i>=0; i--) ret+=v[i];\n  } else {\n    char *e;\n    ret = strtol(p, &e, 10)/2 + 1;\n    p = e;\n  }\n  ++p;\n  return ret;\n}\n\nint main() {\n  int n;\n  string str;\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = str.c_str();\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#define __USE_MINGW_ANSI_STDIO 0\n#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<ll> VL;\ntypedef vector<VL> VVL;\ntypedef pair<int, int> PII;\n\n#define FOR(i, a, n) for (ll i = (ll)a; i < (ll)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define ALL(x) x.begin(), x.end()\n#define MP make_pair\n#define PB push_back\n#define MOD 1000000007\n#define INF (1LL<<30)\n#define LLINF (1LL<<60)\n#define PI 3.14159265359\n#define EPS 1e-12\n//#define int ll\n\nint dfs(string s) {\n\t//cout << s << endl;\n\ts.erase(0, 1);\n\ts.erase(s.size()-1, 1);\n\t//cout << s << endl;\n\tif(s[0] != '[') return stoi(s)/2+1;\n\n\tVI a;\n\tint tmp = 0;\n\tstring t = \"\";\n\tREP(i, s.size()) {\n\t\tif(s[i] == '[') tmp++;\n\t\telse if(s[i] == ']') tmp--;\n\t\tt += s[i];\n\t\tif(tmp == 0) {\n\t\t\ta.PB(dfs(t));\n\t\t\tt = \"\";\n\t\t}\n\t}\n\n\tsort(ALL(a));\n\tint ret = 0;\n\tREP(i, a.size()/2+1) ret += a[i];\n\treturn ret;\n}\n\nsigned main(void)\n{\n\tint n;\n\tcin >> n;\n\tREP(i, n) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tcout << dfs(s) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <stdio.h>\n#include <stdlib.h>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <queue>\n#include <algorithm>\n#include <math.h>\n#include <utility>\n#include <set>\n#include <map>\n#define INF 100000\nusing namespace std;\n\n\nint power(int n){\n    if(n==0) return 1;\n    return 10 * power(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    for (int p=0; p<n; p++) {\n        string S;\n        cin >> S;\n        vector<int> data;\n        for (int i=0; i<S.length(); i++) {\n            if (S[i]=='[') {\n                data.push_back(-1);\n                continue;\n            }\n            if (S[i]==']') {\n                data.push_back(-2);\n                continue;\n            }\n            int n=0;\n            vector<int> nn;\n            while(1){\n                if(S[i]=='[' || S[i]==']') break;\n                int pp = (int)S[i] -(int)'0';\n                nn.push_back(pp);\n                n++;\n                i++;\n            }\n            n--;\n            i--;\n            int num=0;\n            int temp = n;\n            for (int j=0; j<=temp; j++) {\n                num += nn[j] * power(n);\n                n--;\n            }\n            data.push_back(num);\n        }\n        int depth=0;\n        while(data[depth]==-1){\n            depth++;\n        }\n        /*for (int i=0; i<data.size(); i++) {\n            cout << data[i] << \" \";\n        }\n        cout << endl;*/\n        vector<int> res;\n        for (int i=0; i<data.size(); i++) {\n            if (data[i+1]!=-1 and data[i+1]!=-2 and data[i+1]!=-3) {\n                data[i+1] = (data[i+1]+1)/2;\n                res.push_back(data[i+1]);\n                data[i]= -3;\n                data[i+2]= -3;\n                i+=2;\n            }\n        }\n        data[data.size()-1]=-2;\n        /*for (int i=0; i<data.size(); i++) {\n            cout << data[i] << \" \";\n        }\n        cout << endl;*/\n        depth--;\n        //cout << depth<<endl;\n        while (depth >= 1) {\n            int dep=0;\n            for (int i=0; i<data.size(); i++) {\n                if (data[i]==-1) {\n                    dep++;\n                    continue;\n                }\n                if (data[i]==-2) {\n                    dep--;\n                    continue;\n                }\n                if (dep==depth) {\n                    int c=i;\n                    vector<int> foo;\n                    while (data[c]!=-2 and c < data.size()) {\n                        if (data[c]!=-3 and data[c]!=-1) {\n                            foo.push_back(data[c]);\n                        }\n                        //cout <<'C' <<c<<endl;\n                        c++;\n                    }\n                    sort(foo.begin(),foo.end());\n                    /*for (int k=0;k<foo.size() ; k++) {\n                        cout << foo[k]<<\" \";\n                    }*/\n                    int fuga=0;\n                    for (int k=0; k<foo.size()/2 +1; k++) {\n                        if(foo.size()!=0) fuga += foo[k];\n                    }\n                    //data[c]=-3;\n                    for (int j=i-1; j <= c; j++) {\n                        data[j]=-3;\n                    }\n                    if(fuga!=0) data[(i+c)/2]=fuga;\n                    i=c;\n                    dep--;\n                }\n                /*cout <<\"--\"<<i<<\"--\"<<endl;\n                for (int i=0; i<data.size(); i++) {\n                    cout << data[i] << \" \";\n                }\n                cout << endl;*/\n            }\n            //cout << depth <<endl;\n            /*for (int i=0; i<data.size(); i++) {\n                if(data[i]==-1) cout << '['<<\" \";\n                if (data[i]==-2) {\n                    cout << ']'<<\" \";\n                }\n                if (data[i]>=0) {\n                    cout << data[i]<<\" \";\n                }\n            }\n            cout << endl;*/\n            depth--;\n        }\n        vector<int> Ans;\n        for (int i=0; i<data.size(); i++) {\n            if(data[i]>=0) Ans.push_back(data[i]);\n        }\n        sort(Ans.begin(), Ans.end());\n        int ans=0;\n        for (int i = 0; i<Ans.size()/2 + 1; i++) {\n            ans += Ans[i];\n        }\n        cout << ans << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\n#define REP(i,n) for(ll i=0;i<n;++i)\n#define RREP(i,n) for(ll i=n-1;i>=0;--i)\n#define FOR(i,m,n) for(ll i=m;i<n;++i)\n#define RFOR(i,m,n) for(ll i=n-1;i>=m;--i)\n#define ALL(v) (v).begin(),(v).end()\n#define PB(a) push_back(a)\n#define UNIQUE(v) v.erase(unique(ALL(v)),v.end());\n#define DUMP(v) REP(aa, (v).size()) { cout << v[a]; if (a != v.size() - 1)cout << \" \"; else cout << endl; }\n#define INF 1000000001ll\n#define MOD 1000000007ll\n#define EPS 1e-9\n\nconst int dx[8] = { 1,1,0,-1,-1,-1,0,1 };\nconst int dy[8] = { 0,1,1,1,0,-1,-1,-1 };\n\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nll max(ll a, int b) { return max(a, ll(b)); }\nll max(int a, ll b) { return max(ll(a), b); }\nll min(ll a, int b) { return min(a, ll(b)); }\nll min(int a, ll b) { return min(ll(a), b); }\n///(?´????????`)(?´????????`)(?´????????`)(?´????????`)(?´????????`)(?´????????`)///\nint i;\nstring s;\nint num() {\n\tint ret = 0;\n\twhile (isdigit(s[i])) {\n\t\tret *= 10;\n\t\tret += s[i] - '0';\n\t\t++i;\n\t}\n\treturn (ret + 1) / 2;\n}\nint f() {\n\t\n\tif (isdigit(s[i])) {\n\t\tint a = num();\n\t\t++i;\n\t\treturn a;\n\n\t}\n\tvi v;\n\n\twhile (i<s.size()&&s[i] != ']') {\n\t\t++i;\n\t\tv.push_back(f());\n\t}\n\tint ret = 0;\n\tsort(ALL(v));\n\tREP(j, (v.size() + 1) / 2) {\n\t\tret += v[j];\n\t}\n\t++i;\n\treturn ret;\n}\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tint n;\n\tcin >> n;\n\tREP(a, n) {\n\t\tcin >> s;\n\t\ti = 0;\n\t\tcout << f() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nstring s;\nint p = 0;\n\nbool is_digit(char c){\n    return '0' <= c && c <= '9';\n}\n\nint dfs(){\n    vector<int> v;\n    while( p < s.size() ){\n        if( is_digit(s[p]) ){\n            int res = 0;\n            while( is_digit(s[p]) ){\n                res *= 10;\n                res += s[p] - '0';\n                p++;\n            }\n            p++;\n            return (res+1)/2;\n        }else if( s[p] == '[' ){\n            p++;\n            v.push_back( dfs() );\n        }else if( s[p] == ']' ){\n            p++;\n            int n = v.size();\n            vector<int> a = v;\n            sort(a.begin(), a.end());\n            int res = 0;\n            for(int i = 0; i <= n/2; i++){\n                res += a[i];\n            }\n            return res;\n        }\n    }\n    return 0;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        cin >> s;\n        p = 1;\n        cout << dfs() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nint main(){\n    int n;\n    string str;\n    cin>>n;\n    while(n--){\n        cin>>str;\n        int lev=0,level=0,i,last=0;\n        string num;\n        for(i=0;i<str.length();i++)\n            if(str[i]!='[')\n                break;\n        level=i;\n        vector<vector<int> >vec;\n        vector<int>v,las;\n        vec.resize(level,v);\n        las.resize(level,0);\n        for(int i=0;i<str.length();i++){\n            if(str[i]=='[')\n                lev++;\n            else if(str[i]==']'){\n                if(lev==level){\n                    last = stoi (num);\n                    vec[lev-1].push_back(last);\n                }\n                else{\n                    int tem=0;\n                    vector<int>te;\n                    int temp=0;\n                    for(;las[lev-1]<vec[lev].size();las[lev-1]++){\n                        te.push_back(vec[lev][las[lev-1]]);\n                        temp++;\n                    }\n                    sort(te.begin(),te.end());\n                    for(int ii=0;ii<(temp+1)/2;ii++)\n                    {\n                        if(lev==level-1)tem+=(te[ii]+1)/2;\n                        else tem+=te[ii];\n                    }\n                    vec[lev-1].push_back(tem);\n                }\n                num=\"\";\n                lev--;\n            }\n            else\n                num+=str[i];\n        }\n        cout<<vec[0][0]<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring s;\nint c;\n\nint getInt() {\n\tint n = 0;\n\twhile(s[c] != ']') {\n\t\tn = 10 * n + (s[c] - '0');\n\t\tc++;\n\t}\n\tc++;\n\treturn n / 2 + 1;\n}\n\nint calc() {\n\tc++;\n\tif('0' <= s[c] && s[c] <= '9') {\n\t\treturn getInt();\n\t}\n\n\tvector<int> v;\n\twhile(s[c] != ']') {\n\t\tif(s[c] == '[') {\n\t\t\tv.push_back(calc());\n\t\t}\n\t}\n\tc++;\n\tsort(v.begin(), v.begin() + v.size());\n\tint sum = 0;\n\tfor (int i = 0; i < v.size() / 2 + 1; i++) {\n\t\tsum += v[i];\n\t}\n\treturn sum;\n}\n\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tc = 0;\n\t\tcin >> s;\n\t\tcout << calc() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<set>\n#include<list>\n#include<queue>\n#include<cmath>\n#include<functional>\n#include<algorithm>\n#include<cctype>\nusing namespace std;\n\n\nchar str[10002];\nint p;\n\nint solve(){\n\tchar c=str[p];\n\tif(isdigit(c)){\n\t\tint res=0;\n\t\tdo{\n\t\t\tres=res*10+str[p]-'0';\n\t\t}while(str[++p]!=']');\n\t\treturn res/2+1;\n\t}else if(c=='['){\n\t\tp++;\n\t\tvector<int> v;\n\t\twhile(str[p]!=']'){\n\t\t\tv.push_back(solve());\n\t\t}\n\t\tp++;\n\t\tint res=0;\n\t\tsort(v.begin(),v.end());\n\t\tfor(int i=0;i<v.size()/2+1;i++)res+=v[i];\n\t\treturn res;\n\t}\n\treturn -1;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>str;\n\t\tp=0;\n\t\tcout<<solve()<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#define MYDEBUG\n#include <bits/stdc++.h>\n#ifdef MYDEBUG\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define ifcin(x) std::ifstream cin(x)\n#else\n#define debug(x)\n#define ifcin(x)\n#endif\n#define ll long long\n#define ull unsigned long long\n#define eps 1e-14\n#define all(x) x.begin(), x.end()\n#define rep(i,from,to) for(int i=from; i<to; ++i)\n#define REP(i,from,to) for(int i=from; i<=to; ++i)\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::vector;\nusing std::ostream;\nusing std::swap;\nusing std::max;\nusing std::min;\nusing std::queue;\nusing std::string;\ntypedef struct edge edge;\ntypedef struct unionfind unionfind;\ntypedef struct Graph Graph;\n\ntemplate<typename T>\nostream& operator<<(ostream& out, const vector<T>& v) {\n  out << \"[\";\n  size_t last = v.size() - 1;\n  for (size_t i = 0; i < v.size(); ++i) {\n    out << v[i];\n    if (i != last)\n      out << \",\";\n  }\n  out << \"]\";\n  return out;\n}\n\nstruct unionfind{\n\tvector<int> par;\n\tvector<int> rank;\n\tunionfind(int n) {\n\t\tpar = vector<int>(n);\n\t\trank = vector<int>(n);\n\t\trep(i,0,n){//0????????????\n\t\t\tpar[i] = i;\n\t\t\trank[i] = 1;\n\t\t}\n\t}\n\t\n\tint find(int x){\n\t\tif(par[x] == x){\n\t\t\treturn x;\n\t\t}\n\t\treturn par[x] = find(par[x]);\n\t}\n\t\n\tbool same(int x, int y){\n\t\treturn find(x) == find(y);\n\t}\n\t\n\tvoid unite(int x, int y){//rank[x] > rank[y]?????????\n\t\tx = find(x);\n\t\ty = find(y);\n\t\tif(x == y){\n\t\t\treturn;\n\t\t}\n\t\tif(rank[x] < rank[y]){\n\t\t\tswap(x,y);\n\t\t}\n\t\tpar[y] = x;\n\t\trank[x] += rank[y];\n\t\trank[y] = 0;\n\t}\n\t\n\tint size(int x){\n\t\treturn rank[x];\n\t}\n};\n\nstruct edge{\n\tint from, to;\n\tdouble cost;\n\tedge(int from, int to, double cost){\n\t\tthis->from = from;\n\t\tthis->to = to;\n\t\tthis->cost = cost;\n\t}\n\t\n\tedge(){\n\t\t*this = edge(-1,-1,-1);\n\t}\n\t\n\tbool operator<(const edge& e) const{\n\t\treturn cost < e.cost;\n\t}\n};\n\nclass Graph{\n\tpublic:\n\tstatic double kruskal(vector<edge>& es, int n){\n\t\tsort(all(es));\n\t\tdouble min_cost = 0;\n\t\tunionfind uf(n);\n\t\trep(i,0,es.size()){\n\t\t\tedge &e = es[i];\n\t\t\tif(!uf.same(e.from, e.to)){\n\t\t\t\tmin_cost += e.cost;\n\t\t\t\tuf.unite(e.from, e.to);\n\t\t\t}\n\t\t}\n\t\treturn min_cost;\n\t}\n};\n\nint id_global;\nconst int maxa = 32768;\nint dp[maxa];\nstruct area{\n\tstring str;\n\tvector<area> child;\n\tint depth, popu, id;\n\tarea(string str){\n\t\tthis->str = str;\n\t\tthis->id = id_global;\n\t\tid_global++;\n\t\tchild = vector<area>();\n\t\tdivide(str);\n\t}\n\tint getPopulation(){\n\t\tif(child.size()==0){\n\t\t\tstring s = str;\n\t\t\ts = s.erase(0,1);\n\t\t\ts = s.erase(s.size()-1,1);\n\t\t\treturn popu = std::atoi(s.c_str());\n\t\t}else{\n\t\t\tint ret = 0;\n\t\t\trep(i,0,child.size()){\n\t\t\t\tret += child[i].getPopulation();\n\t\t\t}\n\t\t\treturn popu = ret;\n\t\t}\n\t}\n\tarea(){\n\t\t*this = area(\"\");\n\t}\n\tbool operator<(const area& a) const{\n\t\treturn popu < a.popu;\n\t}\n\tvoid sortChild(area& a){\n\t\tif(a.child.size() != 0){\n\t\t\tsort(all(a.child));\n\t\t\trep(i, 0, child.size()){\n\t\t\t\tsortChild(a.child[i]);\n\t\t\t}\n\t\t}\n\t}\n\tint overHalf(area a){\n\t\tif(dp[a.id]!=0){\n\t\t\treturn dp[a.id];\n\t\t}\n\t\tint ret = 0;\n\t\tint half = (a.child.size() + 1) / 2;\n\t\tif(half==0){\n\t\t\tret = (a.popu + 1) / 2;\n\t\t}else{\n\t\t\trep(i,0,half){\n\t\t\t\tret += overHalf(a.child[i]);\n\t\t\t}\n\t\t}\n\t\treturn dp[a.id] = ret;\n\t}\n\tvoid divide(string s){\n\t\tif(s[0]=='['&&s[1]!='['){\n\t\t\treturn;\n\t\t}\n\t\tstring str = \"\";\n\t\tint depth = 0;\n\t\tfor(size_t i = 1; i + 1 < s.size(); ++i){\n\t\t\tstr+=s[i];\n\t\t\tif(s[i]=='['){\n\t\t\t\tdepth++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t\tif(depth==0&&str!=\"\"){\n\t\t\t\tchild.push_back(area(str));\n\t\t\t\tstr = \"\";\n\t\t\t}else if(depth<0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\ntypedef struct area area;\narea root;\nstring s;\nint n;\nvoid solve(){\n\tifcin(\"/storage/emulated/0/AppProjects/AtCoder/jni/in.txt\");\n\tcin>>n;\n\trep(test_case,0,n){\n\t\tcin >> s;\n\t\tid_global = 0;\n\t\tmemset(dp, 0, sizeof(dp));\n\t\troot = area(s);\n\t\troot.getPopulation();\n\t\troot.sortChild(root);\n\t\tcout << root.overHalf(root) << endl;\n\t\tdebug(id_global);\n\t}\n}\n\nint main() {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\n\nint n,r,x,par[10000],l,v[10000];\nvector<int> e[10000];\nstring s;\n\nint B(int z){\n\tif(v[z]!=0)return v[z]/2+1;\n\tint ret = 0;\n\tvector<int> tmp;\n\trep(i,e[z].size()) tmp.push_back(B(e[z][i]));\n\tsort(tmp.begin(),tmp.end());\n\trep(i,tmp.size()/2+1) ret+=tmp[i];\n\treturn ret;\n}\n\nint A(){\n\tr=0;x=0;l=0;\n\trep(i,10000)e[i].clear();\n\tmemset(par,0,sizeof(par));\n\tmemset(v,0,sizeof(v));\n\tcin>>s;\n\trep(i,s.size()){\n\t\tif(s[i]=='['){\n\t\t\tif(i)l++;\n\t\t\tif(r!=l){\n\t\t\t\tpar[l]=r;\n\t\t\t\te[r].push_back(l);\n\t\t\t}\n\t\t\tr = l;\n\t\t}\n\t\telse if(s[i]==']'){\n\t\t\tr = par[r];\n\t\t\tif(s[i-1]!=']'){\n\t\t\t\tv[l]=x;x=0;\n\t\t\t}\n\t\t} else{\n\t\t\tx*=10;x+=s[i]-'0';\n\t\t}\n\t}\n\treturn B(0);\n}\n\nmain(){\n\tcin>>n;\n\trep(i,n)cout<<A()<<endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <vector>\n#include <algorithm>\nusing namespace std;int f,j;char s[1<<20];int dfs() {\nvector<int>nxt;int i=0,k=0;char T;while (f<=j) {\nT=s[f];if (T>='0' && T<='9') k=k*10+T-48,f++;else if (T=='[') f++,i++,nxt.push_back(dfs());\nelse if (T==']') {f++;if (nxt.empty()) return (k+1)>>1;for (k=0,sort(nxt.begin(),nxt.end()),i=(i-1)>>1;i>=0;k+=nxt[i--]);return k;}}}\nint main() {int q;scanf(\"%d\",&q);while (q--) {scanf(\"%s\",&s),j=strlen(s),s[j]=']',f=0,printf(\"%d\\n\",dfs());}return 0;}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstdio>\n#include <utility>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\n\ntypedef pair<int, int> pii;\n\nconst char *p;\n\nint solve() {\n  int ret = 0;\n  ++p;\n  if(*p=='['){\n    vector<int> v;\n    while(*p == '['){\n      v.push_back(solve());\n    }\n    sort(v.begin(), v.end());\n    ret = 0;\n    for(int i=v.size()/2; i>=0; i--) {\n      ret += v[i];\n    }\n  }\n  else {\n    char *e;\n    ret = strtol(p, &e, 10)/2 + 1;\n    p = e;\n  }\n  ++p;\n  return ret;\n}\n\nint main() {\n  int n;\n  string s;\n  cin>>n;\n  for(int i=0; i<n; i++) {\n    cin>>s;\n    p = s.c_str();\n    cout<<solve()<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nstring s;\nint p = 0;\n\nbool is_digit(char c){\n    return '0' <= c && c <= '9';\n}\n\nint dfs(){\n    vector<int> v;\n    while( p < s.size() ){\n        if( is_digit(s[p]) ){\n            int res = 0;\n            while( is_digit(s[p]) ){\n                res *= 10;\n                res += s[p] - '0';\n                p++;\n            }\n            p++;\n            return (res+1)/2;\n        }else if( s[p] == '[' ){\n            p++;\n            v.push_back( dfs() );\n        }else if( s[p] == ']' ){\n            p++;\n            int n = v.size();\n            vector<int> a = v;\n            sort(v.begin(), v.end());\n            int res = 0;\n            for(int i = 0; i <= n/2; i++){\n                res += v[i];\n            }\n            return res;\n        }\n    }\n    return 0;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        cin >> s;\n        p = 1;\n        cout << dfs() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n\n#define REP(a,b,c) for(int a=b; a<(int)c; a++)\n#define REPE(a,b,c) for(int a=b; a<=(int)c; a++)\n#define REPD(a,b,c) for(int a=b; a>=(int)c; a--)\n#define rep(a,b) REP(a,0,b)\n#define repd(a,b) REPD(a,b,0)\ntypedef long long int ll;\nusing namespace std;\nstring str;\nint idx;\n\nint DFS(int n){\n\tint rtn = 0;\n\tvector<int> data;\n\t//cout << \"n:\" << n << \" idx:\" << idx << endl;\n\twhile (true){\n\t\tif (str.at(idx) == '['){\n\t\t\t//cout << \"[\" << idx << \" \" << n << endl;\n\t\t\tidx++;\n\t\t\tint num = DFS(n + 1);\n\t\t\tif (n == 0)return num;\n\t\t\tdata.push_back(num);\n\t\t}\n\t\telse if (str.at(idx) == ']'){\n\t\t\t//cout << \"]\" << idx << \" \" << n << endl;\n\t\t\tidx++;\n\t\t\tsort(data.begin(), data.end());\n\t\t\trep(i, (data.size() + 1) / 2){\n\t\t\t\trtn += data[i];\n\t\t\t}\n\t\t\treturn rtn;\n\t\t}\n\t\telse{\n\t\t\tint num = 0;\n\t\t\twhile (true){\n\t\t\t\t//cout << num << \" \" << \"idx:\" << idx << endl;\n\t\t\t\tif (str.at(idx) == ']'){\n\t\t\t\t\t//cout << idx << \":\" << num << endl;\n\t\t\t\t\tdata.push_back((num+1)/2);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnum *= 10;\n\t\t\t\tnum += str.at(idx) - '0';\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t}\n\t//cout << \"ERROR\" << endl;\n\treturn -1;\n}\n\n\nint main(){\n\tint N;\n\tcin >> N;\n\t//cout << N << endl;\n\trep(i, N){\n\t\tstd::cin >> str;\n\t\t//std::cout << str << endl;\n\t\t//std::cout << \"i:\" << i << endl;\n\t\tidx = 0;\n\t\tcout << DFS(0) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdlib.h>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <ctype.h>\n#include <math.h>\n#include <stdio.h>\n\nusing namespace std;\n\nchar c[10001];\nint p;\n\nint solve(){\n\n\t++p;\n\tvector<int> v;\n\tif (isdigit(c[p])){\n\t\tint n = atoi(&c[p]);\n\t\tp += (int)log10((double)n) + 2;\n\t\treturn n / 2 + 1;\n\t}\n\twhile (c[p] == '['){\n\t\tint n = solve();\n\t\tcout << n << endl;\n\t\tv.push_back(n);\n\t}\n\t++p;\n\tsort(v.begin(), v.end());\n\tint res = 0;\n\tfor (int i = 0; i < (v.size() + 1) / 2; i++){\n\t\tres += v[i];\n\t}\n\t\n\treturn res;\n}\n\n\nint main(void){\n\n\tint n;\n\tcin >> n; \n\twhile (n--){\n\t\tscanf(\"%s\", &c);\n\t\tp = 0;\n\t\tcout << solve() << endl;\n\t}\n\t\treturn  0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <vector>\n#include <string>\n#include <queue>\n#include <deque>\n#include <list>\n#include <stack>\n#include <set>\n#include <map>\n#include <algorithm>\n\n#define int long long\n#define MOD7 1000000007\n#define MOD9 1000000009\n\n#define rep(i, n) for (int i = 0; i < (n); i++)\n#define REP(i, a, n) for (int i = (a); i <= (n); i++)\n#define all(a) (a).begin(), (a).end()\n\nusing namespace std;\n\nint dx[4] = { 1, 0, -1, 0 };\nint dy[4] = { 0, -1, 0, 1 };\n\nint nextInt() {int a; cin >> a; return a;}\nchar nextChar() {char a; cin >> a; return a;}\ndouble nextDouble() {double a; cin >> a; return a;}\nstring nextString() {string a; cin >> a; return a;}\n\nvoid inputVector(vector<int> &v, int &n) {rep(i,n){v.push_back(nextInt());}}\nvoid inputVector(vector<double> &v, int &n) {rep(i,n){v.push_back(nextDouble());}}\nvoid inputVector(vector<string> &v, int &n) {rep(i,n){v.push_back(nextString());}}\n\nint strToInt(string str) {\n    int size = str.size();\n    int ret = 0;\n    for (int i = 0; i < size; i++) {\n\tint tmp = str[size - i - 1] - '0';\n\tfor (int j = 0; j < i; j++) {\n\t    tmp *= 10;\n\t}\n\tret += tmp;\n    }\n    return ret;\n}\n\nint solve(string s) {\n    s = s.substr(1, s.size() - 2);\n\n    if (s.find('[') == string::npos) {\n\treturn strToInt(s);\n    }\n\n    vector<string> child;\n\n    int cnt = 0;\n    int pt = 0;\n    rep(i, s.size()) {\n\tif (s[i] == '[') {\n\t    cnt++;\n\t    if (cnt == 1) pt = i;\n\t} else if (s[i] == ']') {\n\t    cnt--;\n\t    if (cnt == 0) {\n\t\tchild.push_back(s.substr(pt, i - pt + 1));\n\t    }\n\t}\n    }\n\n    vector<int> nums;\n    rep(i, child.size()) {\n\tnums.push_back(solve(child[i]));\n    }\n\n    sort(all(nums));\n\n    int ret = 0;\n    rep(i, (nums.size() + 1) / 2) {\n\tret += nums[i];\n    }\n    ret += nums.size() / 2;\n    return ret;\n}\n\nsigned main() {\n    int n;\n    cin >> n;\n\n    rep(i, n) {\n\tcout << (solve(nextString()) + 1) / 2 << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Node{\n  int num;\n  int dep;\n  Node *parent;\n  vector<Node*> children;\n\n  Node(int num_, int dep_, Node *parent_){\n    num = num_;\n    dep = dep_;\n    parent = parent_;\n  }\n\n};\n\nint main() {\n  int n;\n  cin>>n;\n\n  for(int i=0; i<n; i++){\n    string s;\n    cin>>s;\n\n    //test\n    int nodeno = 0;\n\n    int deph = 0;\n    Node *root = new Node(-1, 0, NULL);\n\n    Node *currentNode = root;\n\n    for(int j=1; j<s.size(); j++){\n      if(isdigit(s[j])){\n        int num = 0;\n        while(1){\n          num = (10 * num) + (s[j] - '0');\n          if(s[j+1] == ']') break;\n          j++;\n        }\n        currentNode->num = (num/2)+1;\n      }else{\n        if(s[j] == '['){\n          deph++;\n          Node *nd = new Node(-1, deph, currentNode);\n          currentNode->children.push_back(nd);\n          currentNode = nd;\n        }else{\n          deph--;\n          int sum = 0;\n          if(currentNode->children.size() > 0){\n            //copy\n            vector<int> v;\n            for(int k=0; k<currentNode->children.size(); k++){\n              v.push_back(currentNode->children[k]->num);\n            }\n            sort(v.begin(), v.end());\n            for(int k=0; k<(v.size())/2 + 1; k++){\n              sum += v[k];\n            }\n          }else{\n            sum = currentNode->num;\n          }\n          currentNode->num = sum;\n          currentNode = currentNode->parent;\n        }\n      }\n    }\n    cout<<root->num<<endl;\n    //????????§??¨????????????delete?????????\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "/*** ????±??°?????????? ***/\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define REP(i, n) for(int i=0; i<n; ++i)\nint co;\n\nint func(string s){\n\tvector<int> vv;\n\t\n\tif(s[co]!='[' && s[co]!=']'){\n\t\tint val=s[co++]-'0';\n\t\t\n\t\twhile(s[co]!=']') val=10*val+(s[co++]-'0');\n\t\tvv.push_back(val/2+1);\n\t}\n\t\n\telse{\n\t\twhile(s[co++]=='['){\n\t\t\tvv.push_back(func(s));\n\t\t\t\n\t\t\tif(s[co+1]!=']') ++co;\n\t\t}\n\t}\n\tsort(vv.begin(), vv.end());\n\t\n\tint sum=0;\n\tREP(i, vv.size()/2+1){\n\t\tsum+=vv[i];\n\t}\n\t\n\treturn sum;\n}\n\nint main(){\n\tint n;\n\tvector<int> v;\n\tcin>>n;\n\t\n\tREP(i, n){\n\t\tstring s;\n\t\tcin >> s;\n\t\tco=0;\n\t\tv.push_back(func(s));\n\t}\n\t\n\tREP(i, n) cout << v[i] << endl;\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n \nint tx[] = {0,1,0,-1};\nint ty[] = {-1,0,1,0};\n \nstatic const double EPS = 1e-8;\n\nint pos;\n\nint digits(const string& str){\n  int scalar = 1;\n  string num_str=\"\";\n  while(isdigit(str[pos])){\n    num_str += str[pos];\n    pos++;\n  }\n\n  return atoi(num_str.c_str());\n}\n\nint equation(const string& str){\n  int res = 0;\n  vector<int> nums;\n  if(pos < str.size() && str[pos] == '['){\n    pos++;\n\n    while(str[pos] != ']'){\n      int num = equation(str);\n      nums.push_back(num);\n    }\n\n    pos++;\n    sort(nums.begin(),nums.end());\n    for(int i=0;i<(nums.size()+1)/2;i++){\n      res += nums[i];\n    }\n    return res;\n  }\n  else if(pos < str.size() && isdigit(str[pos])){\n    int num = digits(str);\n    return num / 2 + 1;\n  }\n  else{\n    return res;\n  }\n}\n\n\n\nint main(){\n  int N;\n  \n  scanf(\"%d\",&N);\n  for(int i=0;i<N;i++){\n    string str;\n    cin >> str;\n    pos=0;\n    printf(\"%d\\n\",equation(str));\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(a);i<=(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nint dfs() {\n    vi s;\n    char c;\n    while (cin >> c) {\n        switch (c) {\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n        {\n            string num;\n            num += c;\n            while (cin >> c, c != ']') {\n                num += c;\n            }\n            return atoi(num.c_str()) / 2 + 1;\n        }\n        case '[':\n            s.push_back(dfs());\n            break;\n        case ']':\n            if (!s.empty()) {\n                int count = 0;\n                sort(ALL(s));\n                REP(i, s.size() / 2 + 1) {\n                    count += s[i];\n                }\n                return count;\n            } else {\n                return 0;\n            }\n        }\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    REP(i, n) {\n        char c;\n        cin >> c; // ignore '['\n        cout << dfs() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <algorithm>\n#include <cassert>\nusing namespace std;\n\n\nint solve(string s) {\n    if (s[1] != '[') {\n        int ret;\n        stringstream ss;\n        ss << s.substr(1);\n        ss >> ret;\n        return ret / 2 + 1;\n    }\n\n    vector<int> thr(0);\n\n    int left = 1, brac = 0;\n    for (int j = 1; j < s.size(); ++j) {\n        if (s[j] == '[') {\n            ++brac;\n        } else if (s[j] == ']') {\n            --brac;\n        }\n        if (brac == 0) {\n            int v = solve(s.substr(left, j - left + 1));\n            thr.push_back(v);\n            left = j + 1;\n        }\n    }\n\n    sort(begin(thr), end(thr));\n\n    int ret = 0;\n    for (int j = 0; j < thr.size() / 2 + 1; ++j) {\n        ret += thr[j];\n    }\n    \n    return ret;\n}\n\nint main () {\n    int N;\n    string S;\n    cin >> N;\n    for (int j = 0; j < N; ++j) {\n        cin >> S;\n        cout << solve(S) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n#include<ext/pb_ds/tag_and_trait.hpp>\nusing namespace __gnu_pbds;\n\nusing namespace std;\nusing ll = long long;\n\nint dfs(int i, vector<vector<int>>& childs){\n    //cout<<i<<endl;\n    if(childs[i].size() == 1){\n        return childs[i].front() / 2 + 1;\n    }else{\n        vector<int> v;\n        for(auto a : childs[i]){\n            v.push_back(dfs(a, childs));\n        }\n        sort(v.begin(), v.end());\n        ll ans = accumulate(v.begin(), v.begin() + v.size() / 2 + 1, 0LL);\n        return ans;\n    }\n}\n\nint main(){\n    \n    int n;cin >> n;\n    while(n--){\n        string s;cin >> s;\n        vector<vector<int>> childs;\n        stack<int> sta;\n        int idx = 0;\n\n        for(int i = 0;i < s.size();i++){\n            //return 0;\n            if(s[i] == '['){\n                childs.push_back(vector<int>());\n                sta.push(idx);\n                idx++;\n            }else if(s[i] == ']'){\n                int now = sta.top();\n                sta.pop();\n                if(now != 0)childs.at(sta.top()).push_back(now);\n            }else{\n                int num = s[i] - '0';\n                if(childs.at(sta.top()).empty())childs.at(sta.top()).push_back(num);\n                else childs.at(sta.top()).back() = childs.at(sta.top()).back() * 10 + num;\n            }\n        }\n        /*\n        for(int i = 0;i < childs.size();i++){\n            for(auto a : childs[i])cout<<a<<\" \";\n            cout<<endl;\n        }\n        */\n        //return 0;\n        //cout<<\"AAA\"<<endl;\n        cout<<dfs(0, childs)<<endl;\n    }\n    \n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, bool> P;\n\nint main(){\n    int n; cin>>n;\n    for(int i=0; i<n; i++){\n        string s; cin>>s;\n        int m = s.size();\n\n        int depth = 0;\n        vector<vector<P>> v(10010);\n        for(int j=0; j<m; j++){\n            if(s[j] == '[') depth++;\n            else if(s[j] == ']'){\n                depth--;\n                if(j + 1 < m && s[j+1] == ']'){\n                    sort(v[depth].begin(), v[depth].end());\n                    int sum = 0;\n                    if(v[depth][0].second){\n                        for(int k=0; k<v[depth].size()/2+1; k++){\n                            sum += (v[depth][k].first + 1) / 2;\n                        }\n                    }\n                    else{\n                        for(int k=0; k<v[depth].size()/2+1; k++){\n                            sum += v[depth][k].first;\n                        }\n                    }\n\n                    v[depth].clear();\n                    v[depth-1].emplace_back(sum, false);\n                }\n            }\n            else{\n                string t;\n                t += s[j];\n                while(j + 1 < m && '0' <= s[j+1] && s[j+1] <= '9'){\n                    j++;\n                    t += s[j];\n                }\n\n                int num = stoi(t);\n                v[depth-1].emplace_back(num, true);\n            }\n        }\n\n        cout << v[0][0].first << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<int(n);++i)\n#define all(a) a.begin(),a.end()\n\nint solve(string &s, int &i){\n    vector<int> v;\n    if(isdigit(s[i])){\n        int num = 0;\n        while(isdigit(s[i])){\n            num = num*10 + s[i]-'0';\n            i++;\n        }\n        return num;\n    }\n    while(s[i] == '['){\n        i++;\n        v.push_back(solve(s,i));\n        assert(s[i] == ']');\n        i++; // ]\n    }\n\n    int n = v.size();\n    sort(all(v));\n    int num = 0;\n    rep(k,(n+1)/2){\n        num += (v[k]+1)/2;\n    }\n    return num*2-1;\n}\n\nint main(void){\n    int T;\n    cin>>T;\n    rep(_,T){\n        string s;\n        cin>>s;\n        int index = 0;\n        cout<<(solve(s,index)+1)/2<<endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cctype>\n#include <map>\nusing namespace std;\n \nmap<char, char> sym;\n \nvoid init() {\n  sym['i'] = 'i';\n  sym['w'] = 'w';\n  sym['('] = ')';\n  sym[')'] = '(';\n}\n \nint main() {\n  init();\n   \n  string str;\n  getline(cin, str);\n   \n  int n = str.size();\n  int cnt = 0;\n  if(str == \"\") goto fin;\n  for(int i=0; i<n/2+1; i++) {\n    if(sym[str[i]] != str[n-i-1]) cnt ++;\n    str[n-i-1] = sym[str[i]];\n  }\n fin:\n  cout << cnt << endl;\n   \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define ALL(v) (v).begin(), (v).end()\n#define LENGTHOF(x) (sizeof(x) / sizeof(*(x)))\n#define AFILL(a, b) fill((int*)a, (int*)(a + LENGTHOF(a)), b)\n#define SQ(x) ((x)*(x))\n#define Mod(x, mod) (((x)+(mod)%(mod))\n#define MP make_pair\n#define PB push_back\n#define Fi first\n#define Se second\n#define INF (1<<29)\n#define EPS 1e-10\n#define MOD 1000000007\n\ntypedef pair<int, int> pi;\ntypedef pair<int, pi> pii;\ntypedef vector<int> vi;\ntypedef queue<int> qi;\ntypedef long long ll;\n\nint toInt(string s){\n  stringstream buf(s);\n  int ret;\n  buf >> ret;\n  return ret;\n}\n\nint dfs(string s){\n  //  cout << s << endl;\n  if(s[0]!='[') return (toInt(s)+1)/2;\n\n  vector<int>v;\n  int f = 1;\n  int pr=0;\n  rep(i,s.size()){\n    if(s[i]=='[') pr++;\n    else if(s[i]==']') pr--;\n    if(!pr){\n      v.push_back(dfs(s.substr(f, i-f)));\n      f = i+2;\n    }\n  }\n  sort(v.begin(), v.end());\n  int res = 0;\n  rep(i,(v.size()+1)/2){\n    res += v[i];\n  }\n  return res;\n}\n\nint main(){\n  int N;\n  cin >> N;\n  while(N--){\n    string s;\n    cin >> s;\n    cout << dfs(s) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <stack>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdlib>\n#include <bitset>\n#include <tuple>\n#include <assert.h>\n#include <deque>\n#include <bitset>\n#include <iomanip>\n#include <limits>\n#include <chrono>\n#include <random>\n#include <array>\n#include <unordered_map>\n#include <functional>\n#include <complex>\n#include <numeric>\n#include <cctype>\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n\nconst long long MAX = 5100000;\nconst long long INF = 1LL << 60;\nconst long long mod = 1000000007LL;\n//const long long mod = 998244353LL;\n\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\n\ntypedef string::const_iterator State;\nstring s;\n\nint factor(State&);\nint number(State& begin) {\n    int ret = 0;\n\n    while (isdigit(*begin)) {\n        ret *= 10;\n        ret += *begin - '0';\n        begin++;\n    }\n    //cout << *begin << endl;\n    //cout << ret << endl;\n    return ret;\n}\nint expression(State& begin) {\n    //cout << *begin << endl;\n    vector<int> v;\n    if(*begin != ']') v.push_back(factor(begin));\n\n    for (;begin != s.end();) {\n        if (*begin != ']') v.push_back(factor(begin));\n        else break;\n    }\n    sort(v.begin(), v.end());\n    int ret = 0;\n    for (ll i = 0; i < (v.size() + 1) / 2; i++) {\n        //cout << v[i] << endl;\n        ret += v[i];\n    }\n    return ret;\n}\n\nint factor(State& begin) {\n    //cout << *begin << endl;\n    if (*begin == '[') {\n        begin++; // '('を飛ばす。\n        int ret = expression(begin);\n        begin++; // ')'を飛ばす。\n        return ret;\n    }\n    else {\n        return (number(begin) + 1) / 2;\n    }\n}\nint main()\n{\n\t/*\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\t*/\n    int N; scanf(\"%d\", &N);\n    while (N--) {\n        cin >> s;\n        State begin = s.begin();\n        cout << expression(begin) << \"\\n\";\n    }\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nchar peek(){\n    char c=getchar();\n    ungetc(c,stdin);\n    return c;\n}\n\nstruct Tree_t{\n    int voters;\n    vector<Tree_t> children;\n};\n\nTree_t parse(){\n    getchar();\n    int a=0;\n    Tree_t ret;\n    while (isalnum(peek())){\n        a=a*10+(getchar()-'0');\n    }\n\n    if (a) {\n        ret.voters=a;\n        goto end;\n    }\n\n    \n    while(peek()!=']'){\n        ret.children.push_back(parse());\n    }\n\nend:\n    getchar();\n    return ret;\n}\n\nint solve(const Tree_t& a){\n    if (a.children.empty()) return (a.voters+1)/2;\n\n    vector<int> candi;\n    for(const auto &i:a.children ) candi.push_back(solve(i));\n    sort(candi.begin(),candi.end());\n\n    auto ans=0;\n    for(int i=0;i<(candi.size()+1)/2;i++) ans+=candi[i];\n    return ans;\n}\n\nint main(){\n\n    int n;\n    scanf(\"%d\\n\",&n);\n    for(int i=0;i<n;i++){\n        \n        \n        printf(\"%d\\n\",solve(parse()));\n        getchar();\n        // puts(\"hello\");\n    }\n\n    \n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint parse(string &S, int l, int r){\n  int ret = 0;\n  if(S[l] != '['){\n    for(int i = l; i < r; ++i){\n      ret *= 10;\n      ret += S[i] - '0';\n    }\n    return (ret+1)/2;\n  }\n  vector<int> V;\n  int t = 0;\n  for(int i = l; i < r; ++i){\n    if(S[i] == '[') ++t;\n    else if(S[i] == ']') --t;\n    if(!t){\n      V.push_back(parse(S,l+1,i));\n      l = i+1;\n    }\n  }\n  sort(V.begin(),V.end());\n  for(int i = 0; i < ((int)V.size()+1)/2; ++i)\n    ret += V[i];\n  return ret;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  for(int i = 0; i < n; ++i){\n    string S;\n    cin >> S;\n    cout << parse(S,0,(int)S.size()) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\n#include <memory>\n#include <time.h>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\nconst double EPS = 1e-9;\nconst double PI  = acos(-1.0);\n\nstruct node{\n\tint num;\n\tvector<node> children;\n\tint minimum(){\n\t\tif(children.size()==0){\n\t\t\treturn (num+1)/2;\n\t\t}else{\n\t\t\tvi nums;\n\t\t\tREP(i,children.size()){\n\t\t\t\tnums.push_back(children[i].minimum());\n\t\t\t}\n\t\t\tsort(ALL(nums));\n\t\t\tint ret=0;\n\t\t\tREP(i,(nums.size()+1)/2){\n\t\t\t\tret+=nums[i];\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n};\n\nint num(string &s,int &p){\n\tint ret=0;\n\twhile(isdigit(s[p])){\n\t\tret*=10;\n\t\tret+=s[p]-'0';\n\t\tp++;\n\t}\n\treturn ret;\n}\n\nnode senkyoku(string &s,int &p){\n\tif(s[p]=='['){\n\t\tnode ret;\n\t\twhile(s[p]=='['){\n\t\t\tp++;\n\t\t\tnode child=senkyoku(s,p);\n\t\t\tret.children.push_back(child);\n\t\t\tassert(s[p]==']');\n\t\t\tp++;\n\t\t}\n\t\treturn ret;\n\t}else{\n\t\tint nu=num(s,p);\n\t\tnode n;\n\t\tn.num=nu;\n\t\treturn n;\n\t}\n\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tREP(i,n){\n\t\tstring s;\n\t\tcin>>s;\n\t\tint p=0;\n\t\tnode root=senkyoku(s,p);\n\t\tcout<<root.minimum()<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <cctype>\n#include <vector>\n#include <algorithm>\n#include <numeric>\nusing namespace std;\n\nint block(string &s, int &i);\nint number(string &s, int &i);\n\nint block(string &s, int &i)\n{\n  i++;\n  if(s[i] == '['){\n    vector<int> v;\n    while(s[i] == '['){\n      v.push_back(block(s, i));\n      i++;\n    }\n    sort(v.begin(), v.end());\n    return accumulate(v.begin(), v.begin() + v.size()/2, 0);\n  }else{\n    return number(s, i);\n  }\n}\n\nint number(string &s, int &i)\n{\n  string n = \"\";\n  n += s[i];\n  i++;\n  while(isdigit(s[i]))\n    n += s[i];\n  return atoi(s.c_str()) / 2 + 1;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  for(int j = 0; j < n; j++){\n    string s;\n    cin >> s;\n    int i = 0;\n    cout << block(s, i) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "// #define DEBUGGING\n#include <bits/stdc++.h>\n#define endl '\\n'\n#define ALL(V) (V).begin(), (V).end()\n#define ALLR(V) (V).rbegin(), (V).rend()\nusing ll = std::int64_t;\nusing ull = std::uint64_t;\nusing PLL = std::pair<ll, ll>;\nusing TLL = std::tuple<ll, ll, ll>;\ntemplate <typename T> using V = std::vector<T>;\ntemplate <typename T> using VV = V<V<T>>;\ntemplate <typename T> const T& var_min(const T &t) { return t; }\ntemplate <typename T> const T& var_max(const T &t) { return t; }\ntemplate <typename T, typename... Tail> const T& var_min(const T &t, const Tail&... tail) { return std::min(t, var_min(tail...)); }\ntemplate <typename T, typename... Tail> const T& var_max(const T &t, const Tail&... tail) { return std::max(t, var_max(tail...)); }\ntemplate <typename T, typename... Tail> void chmin(T &t, const Tail&... tail) { t = var_min(t, tail...); }\ntemplate <typename T, typename... Tail> void chmax(T &t, const Tail&... tail) { t = var_max(t, tail...); }\ntemplate <typename T> const T& clamp(const T &t, const T &low, const T &high) { return std::max(low, std::min(high, t)); }\ntemplate <typename T> void chclamp(T &t, const T &low, const T &high) { return t = clamp(t, low, high); }\nnamespace init__ { struct InitIO { InitIO() { std::cin.tie(nullptr); std::ios_base::sync_with_stdio(false); std::cout << std::fixed << std::setprecision(30); } } init_io; }\n#define mv_rec make_v(init, tail...)\ntemplate <typename T> T make_v(T init) { return init; }\ntemplate <typename T, typename... Tail> auto make_v(T init, size_t s, Tail... tail) { return V<decltype(mv_rec)>(s, mv_rec); }\n#undef mv_rec\nusing namespace std;\n\n#ifdef DEBUGGING\n#include \"../../debug/debug.cpp\"\n#else\n#define DEBUG(...) 0\n#define DEBUG_SEPARATOR_LINE 0\n#endif\n\nll calc(const string &S, ll &idx) {\n    if (S[idx] == '[') {\n        V<ll> recs;\n        idx++;\n        while (true) {\n            recs.push_back(calc(S, idx));\n            if (S[idx] == ']') break;\n        }\n        idx++;\n        sort(ALL(recs));\n        ll ret = 0;\n        for (ll i = 0; i < (recs.size() + 1) / 2; i++) ret += recs[i];\n        return ret;\n    } else {\n        ll ret = 0;\n        while (true) {\n            char c = S[idx];\n            if (!('0' <= c && c <= '9')) break;\n            ret = ret * 10 + (c - '0');\n            idx++;\n        }\n        return (ret + 1) / 2;\n    }\n}\n\nvoid solve() {\n    string S;\n    cin >> S;\n    ll idx = 0;\n    cout << calc(S, idx) << endl;\n}\n\nint main() {\n    ll N;\n    cin >> N;\n    while (N--) solve();\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<string>\n#include<algorithm>\n\n#define all(u) (u).begin(),(u).end()\n#define PB push_back\n#define REP(i,n) for(int i = 0;i < (n);i++)\n\t\nusing namespace std;\n\ntypedef vector<int> VI;\n\nint stoi(string num)\n{\n\tint ret;\n\tstringstream s;\n\ts << num;\n\ts >> ret;\n\treturn ret;\n}\n\nstring str;\nint cur;\n\nint rec()\n{\n\tcur++;\n\tif(str[cur] != '[' && str[cur] != ']')\n\t{\n\t\tstring t;\n\t\twhile (str[cur] != '[' && str[cur] != ']')\n\t\t{\n\t\t\tt += str[cur];\n\t\t\tcur++;\n\t\t}\n\t\tcur++;\n\t\t//cout << t << endl;\n\t\treturn  stoi(t) / 2 + 1;\n\t}\n\tVI vote;\n\twhile(str[cur] != ']')\n\t{\n\t\tvote.PB(rec());\n\t}\n\tsort(all(vote));\n\tint ret = 0;\n\tREP(i,vote.size()/2+1)\n\t{\n\t//\tcout << vote[i] << endl;\n\t\tret += vote[i];\n\t}\n\tcur++;\n\treturn ret;\n\t\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\t\n\twhile(n--)\n\t{\n\t\tcin >> str;\n\t\tcur = 0;\n\t\tcout << rec() << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<string>\nusing namespace std;\n\nint main(){\n    int n;\n    string str;\n    cin>>n;\n    while(n--){\n        cin>>str;\n        int lev=0,level=0,i,last=0;\n        string num;\n        for(i=0;i<str.length();i++)\n            if(str[i]!='[')\n                break;\n        level=i;\n        vector<vector<int> >vec;\n        vector<int>v,las,peo;\n        vec.resize(level,v);\n        las.resize(level,0);\n        peo.resize(level,0);\n        for(int i=0;i<str.length();i++){\n            if(str[i]=='['){\n                lev++;\n            }\n            else if(str[i]==']'){\n                if(lev==level){\n                    last = stoi (num);\n                    vec[lev-1].push_back(last);\n                }\n                else{\n                    int tem=0;\n                    vector<int>te;\n                    int temp=0;\n                    for(;las[lev-1]<vec[lev].size();las[lev-1]++){\n                        te.push_back(vec[lev][las[lev-1]]);\n                        temp++;\n                    }\n                    sort(te.begin(),te.end());\n                    for(int ii=0;ii<(temp+1)/2;ii++)\n                    {\n                        if(lev==level-1)tem+=(te[ii]+1)/2;\n                        else tem+=te[ii];\n                    }\n                    vec[lev-1].push_back(tem);\n                }\n                num=\"\";\n                lev--;\n            }\n            else\n                num+=str[i];\n        }\n        cout<<vec[0][0]<<endl;\n    }\n    \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\nusing namespace std;\n\nint main() {\n    int ans[100], n, i;\n    string str;\n    \n    cin >> n;\n    getline(cin, str);\n    for (i = 0; i < n; i++) {\n        getline(cin, str);\n        int j = 0, k = 1, l = 1, array[100][100] = {{0}, {0}};\n        while (str[j] != '\\0') {\n            if (str[j] != '[' && str[j] != ']')\n                array[k][l] = array[k][l] * 10 + atoi(str.substr(j, 1).c_str());\n            if (str[j] == ']') {\n                cout << array[k][l] << ' ';\n                l++;\n                if (str[j+1] == ']') {\n                    cout << endl;\n                    j++;\n                    k++;\n                }\n            }\n            j++;\n        }\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//AOJ 1188 Hierarchical Democracy\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef string::const_iterator State;\n\nint numeral(State &s){\n\tint n = 0;\n\twhile(isdigit(*s)){\n\t\tn *= 10;\n\t\tn += *s - '0';\n\t\t++s;\n\t}\n\t\n\treturn n;\n}\n\nint parse(State &s){\n\tvector<int> res;\n\tfor(;;){\n\t\tif(*s == '['){\n\t\t\t++s;\n\t\t\tres.emplace_back(parse(s));\n\t\t\t++s;\n\t\t}\n\t\telse if(*s == ']'){\n\t\t\tint n = res.size() / 2;\n\t\t\tsort(res.begin(), res.end());\n\t\t\treturn accumulate(res.begin(), res.begin() + n + 1, 0);\n\t\t}\n\t\telse {\n\t\t\tif(isdigit(*s)) {\n\t\t\t\tint n = numeral(s);\n\t\t\t\tres.emplace_back(n / 2 + 1);\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t}\n\n\tsort(res.begin(), res.end());\n\treturn *res.begin();\n}\n\nint main(){\n\tint n;\n\tstring s;\n\t\n\tcin >> n;\n\tfor(int i = 0;i < n;++i){\n\t\tcin >> s;\n\t\tState begin = s.begin();\n\t\tcout << parse(begin) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<utility>\n#include<string>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<climits>\n#include<set>\n\n#define REP(i, n) for(int i = 0;i < n;i++)\n#define REPR(i, n) for(int i = n;i >= 0;i--)\n#define FOR(i, m, n) for(int i = m;i < n;i++)\n#define FORR(i, m, n) for(int i = m;i >= n;i--)\n#define SORT(v, n) sort(v, v+n);\n#define VSORT(v) sort(v.begin(), v.end());\n#define llong long long\n#define pb(a) push_back(a)\nusing namespace std;\ntypedef pair<int, int> pii;\ntypedef long long int ll;\ntypedef pair<ll,ll> pll;\nint dx[4] = {1,0,0,-1};\nint dy[4] = {0,1,-1,0};\n#define MOD 1000000007\n#define ARRAY_MAX 10005\n\nconst int INF = 1e9+7;\n\nvector<vector<int> > G(ARRAY_MAX);\nint maxi = 0;\n\nvoid dfs(int& now,int dpt,string& s){\n\n    int cc = 0;\n    while(now < s.length() && s[now] != ']'){\n        if(s[now] == '['){\n            now++;\n            dfs(now,dpt+1,s);\n        }else{\n            cc = cc*10 + s[now]-'0';\n            now++;\n        }\n    }\n    //cout << cc << \" \" << dpt << endl;\n    //ここの時点で']'が来ている\n    if(cc != 0){\n        G[dpt].push_back(cc);\n        maxi = max(maxi,dpt);\n    }\n    if(now+1 <= s.length()-1){\n        if(s[now] == ']' && s[now+1] == ']'){\n            sort(G[dpt].begin(),G[dpt].end());\n            int cnt = 0;\n            if(dpt == maxi){\n                /*for(int i = 0;i < (G[dpt].size()+1)/2;i++){\n                    cout << G[dpt][i] << \" \";\n                }\n                cout << endl;*/\n                for(int i = 0;i < (G[dpt].size()+1)/2;i++){\n                    cnt += (G[dpt][i]+1)/2;\n                }\n            }else{\n                for(int i = 0;i < (G[dpt].size()+1)/2;i++){\n                    cnt += G[dpt][i];\n                }\n            }\n            //cout << \"cnt = \" << cnt << \" dpt = \" << dpt << endl;\n            G[dpt-1].push_back(cnt);\n            G[dpt].clear();\n        }\n    }\n    now++;\n}\n\n\nint main(){\n\n    int n;\n    cin >> n;\n    int st = 0;\n    for(int rep = 0;rep < n;rep++){\n\n        string s;\n        cin >> s;\n        for(int i = 0;i < s.length();i++){\n            if(s[i] == '['){\n                maxi++;\n            }else{\n                break;\n            }\n        }\n        dfs(st,0,s);\n        cout << G[1][0] << endl;\n\n        for(int i = 0;i < G[i].size();i++){\n            G[i].clear();\n        }\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "\n#include \"stdafx.h\"\n#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<sstream>\nusing namespace std;\nstring str;\n\nint rewrite(int from, string s){\n\n\t//end位置を取得\n\tint end = -1;\n\tfor (int i = from; i < (signed)s.size(); i++){\n\t\tif (i >= 1 && s[i - 1] == ']' &&s[i] == ']'){\n\t\t\tend = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t//右端まで来たときの処理\n\tif (end == -1){\n\t\tif (from == 0)\n\t\t\treturn -1;\n\t\telse\n\t\t\treturn rewrite(0, s);\n\t}\n\n\t//start位置を取得\n\tint start = -1;\n\tfor (int i = end;; i--){\n\t\tif (s[i] == '[' &&s[i - 1] == '['){\n\t\t\tstart = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t//vectorに入れる\n\tvector<int> v;\n\tint startnum = -1;\n\tfor (int i = start; i < end; i++){\n\t\tif (s[i] == '[')\n\t\t\tstartnum = i + 1;\n\t\tif (s[i] == ']'){\n\t\t\tstring snum;\n\t\t\tfor (int j = startnum; j < i; j++){\n\t\t\t\tsnum = snum + s[j];\n\t\t\t}\n\t\t\tint num = atoi(snum.c_str());\n\t\t\tv.push_back((num + 1) / 2);\n\t\t\tstartnum = -1;\n\t\t}\n\t}\n\n\t//ソート\n\tsort(v.begin(), v.end());\n\n\t//半分を取り出し，和を計算\n\tint sum = 0;\n\tfor (int i = 0; i < ((signed)v.size() + 1) / 2; i++)\n\t\tsum += v[i];\n\tsum = sum * 2 - 1;\n\tstring news = string(s.begin(), s.begin() + start);\n\tstringstream ss;\n\tss << sum;\n\tnews += ss.str();\n\tnews += string(s.begin() + end, s.end());\n\tstr = news;\n\treturn news.size() - (s.size() - end);\n\n}\n\nint main()\n{\n\tint n;\n\tchar before = '0';\n\tcin >> n;\n\tfor (int i = 0; i < n; i++){\n\t\tcin >> str;\n\t\tint from = 0;\n\t\twhile (1){\n\t\t\tfrom = rewrite(from, str);\n\t\t\tif (from == -1)\n\t\t\t\tbreak;\n\t\t}\n\t\tstring ans = \"\";\n\t\tfor (int i = 1; i < (signed)str.size() - 1; i++)\n\t\t\tans += str[i];\n\t\tint ansnum = atoi(ans.c_str());\n\t\tcout << (ansnum + 1) / 2 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> l_l;\ntypedef pair<int, int> i_i;\ntypedef string::const_iterator State;\n\n#define EPS (1e-7)\n#define INF (1e9)\n#define PI (acos(-1))\n//const ll mod = 1000000007;\nint timer = 0;\n\nint f(State &itr) {\n    timer += 1;\n    //if(timer >= 10) return -1;\n    //cerr << \"----\" << timer << \"----\" << endl;\n    //cerr << *itr << endl;\n    if(*itr <= '9' && *itr >= '0') {\n        //cerr << \"hoge \" << *itr << endl;\n        int num = 0;\n        while(*itr <= '9' && *itr >= '0') {\n            num *= 10;\n            num += (int)(*itr - '0');\n            itr++;\n        }\n        //cerr << *itr << \" \" << num << endl;\n        return (num + 1) / 2;\n    }\n    vector<int> now;\n    itr++;\n    while((*itr) != ']') {\n        int num = f(itr);\n        //cerr << num << endl;\n        now.push_back(num);\n        //cerr << now.size() << endl;\n    }\n    itr++;\n    sort(now.begin(), now.end());\n    int sum = 0;\n    //cerr << \"SIZE: \" << now.size() << endl;\n    for(int i = 0; i * 2 < now.size(); i++) sum += now[i];\n    return sum;\n}\n\nint main() {\n    //cout.precision(10);\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int n;\n    cin >> n;\n    cin.ignore();\n    while(n--) {\n        string S;\n        getline(cin, S);\n        State itr = S.begin();\n        cout << f(itr) << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n\nusing namespace std;\n\nconst int IINF = INT_MAX;\n\nstring s;\nint len;\n\n\nint dfs(int &cur){\n\n  assert( s[cur] == '[' );\n  int ret = 0;\n  if( s[cur+1] == '[' ) {\n    deque<int> deq;\n    int depth = 0;\n    ++cur;\n    while( s[cur] != ']' ) deq.push_back(dfs(cur));\n    ++cur;\n    sort(deq.begin(),deq.end());\n    rep(i,(int)ceil((double)deq.size()/2.0)) ret += deq[i];\n    return ret;\n  } else {\n    ++cur;\n    while( '0' <= s[cur] && s[cur] <= '9' ) {\n      ret *= 10;\n      ret += s[cur++] - '0';\n    }\n    ++cur;\n  }\n  return (int)ceil((double)ret/2.0);\n\n}\n\nint main(){\n  int T;\n  cin >> T;\n  cin.ignore();\n  while( T-- ){\n    getline(cin,s);\n    len = s.size();\n    int cur = 0;\n    cout << dfs(cur) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#include <unistd.h>\n\nusing namespace std;\n\n#define DEBUG(x) cerr<<#x<<\": \"<<x<<endl;\n#define DEBUG_VEC(v) cerr<<#v<<\":\";for(int i=0;i<v.size();i++) cerr<<\" \"<<v[i]; cerr<<endl\n#define DEBUG_MAT(v) cerr<<#v<<endl;for(int i=0;i<v.size();i++){for(int j=0;j<v[i].size();j++) {cerr<<v[i][j]<<\" \";}cerr<<endl;}\n\n\ntypedef long long ll;\n#define vi vector<int>\n#define vl vector<ll>\n#define vii vector< vector<int> >\n#define vll vector< vector<ll> >\n#define vs vector<string>\n#define pii pair<int,int>\n#define pis pair<int,string>\n#define psi pair<string,int>\n#define pll pair<ll,ll>\ntemplate<class S, class T> pair<S, T> operator+(const pair<S, T> &s, const pair<S, T> &t) { return pair<S, T>(s.first + t.first, s.second + t.second); }\ntemplate<class S, class T> pair<S, T> operator-(const pair<S, T> &s, const pair<S, T> &t) { return pair<S, T>(s.first - t.first, s.second - t.second); }\ntemplate<class S, class T> ostream& operator<<(ostream& os, pair<S, T> p) { os << \"(\" << p.first << \", \" << p.second << \")\"; return os; }\n#define X first\n#define Y second\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define rep1(i,n) for(int i=1;i<=(n);i++)\n#define rrep(i,n) for(int i=(n)-1;i>=0;i--)\n#define rrep1(i,n) for(int i=(n);i>0;i--)\n#define REP(i,a,b) for(int i=a;i<b;i++)\n#define in(x, a, b) (a <= x && x < b)\n#define all(c) c.begin(),c.end()\ntemplate<class T> bool chmax(T &a, const T &b) { if (a<b) { a = b; return 1; } return 0; }\ntemplate<class T> bool chmin(T &a, const T &b) { if (a>b) { a = b; return 1; } return 0; }\n#define UNIQUE(v) v.erase(std::unique(v.begin(), v.end()), v.end());\nconst ll inf = 1000000001;\nconst ll INF = (ll)1e18 + 1;\nconst ll MOD = 1000000007;\n//const ll MOD = 998244353;\nconst double pi = 3.14159265358979323846;\n#define Sp(p) cout<<setprecision(15)<< fixed<<p<<endl;\nint dx[4] = { 1,0, -1,0 }, dy[4] = { 0,1,0,-1 };\nint dx2[8] = { 1,1,0,-1,-1,-1,0,1 }, dy2[8] = { 0,1,1,1,0,-1,-1,-1 };\n#define fio() cin.tie(0); ios::sync_with_stdio(false);\n//#define mp make_pair\n\nint dfs(int now, vii &G, vi &par, vi &num) {\n  if (G[now].size() == 0) {\n    return num[now] / 2 + 1;\n  }\n  vi temp;\n  rep (i, G[now].size()) {\n    temp.push_back(dfs(G[now][i], G, par, num));\n  }\n  sort(all(temp));\n  int res = 0;\n  rep (i, temp.size() / 2 + 1) {\n    res += temp[i];\n  }\n  return res;\n}\n\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    string s;\n    cin >> s;\n    vii G(10010);\n    vi par(10010, -1);\n    vi num(10010);\n    int now = 0, n = 1;\n    string temp;\n    rep (i, s.size()) {\n      if (s[i] == '[') {\n        par[n] = now;\n        G[now].push_back(n);\n        now = n;\n        n++;\n      }\n      else if (s[i] >= '0' && s[i] <= '9') {\n        temp += s[i];\n      }\n      else {\n        if (temp.size() > 0) {\n          num[now] = stoi(temp);\n          temp.clear();\n        }\n        now = par[now];\n      }\n    }\n    cout << dfs(0, G, par, num) << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint toint(string &str, int &i){\n\tint j = 0;\n\twhile('0' <= str[i+j] && str[i+j] <= '9'){\n\t\tj++;\n\t}\n\tint ret = stoi(str.substr(i,j));\n\tret = (ret+1)/2;\n\ti+=j;\n\treturn ret;\n}\n\nint calc(string &str, int &i, int end){\n\tvector<int> v;\n\tint ret = 0;\n\tfor(;i < end;i++){\n\t\tif(str[i] == '['){\n\t\t\tint idx = i+1;\n\t\t\ti++;\n\t\t\tint d = 1;\n\t\t\twhile(1){\n\t\t\t\tif(str[idx] == ']') d--;\n\t\t\t\telse if(str[idx] == '[')d++;\n\n\t\t\t\tif(d == 0) break;\n\t\t\t\tidx++;\n\t\t\t}\n\t\t\tv.push_back(calc(str, i, idx));\n\t\t\ti = idx;\n\t\t}\n\t\telse if(str[i] == ']'){\n\t\t\tcontinue;\n\t\t}\n\t\telse{\n\t\t\t//cout << str[i] << endl;\n\t\t\tv.push_back(toint(str,i));\n\t\t}\n\t}\n\tsort(v.begin(), v.end());\n\tfor(int j = 0; j < (v.size()+1)/2; j++){\n\t\tret += v[j];\n\t}\n\t//for(int j = 0; j < v.size(); j++){\n\treturn ret;\n}\n\n\nint main(){\n\tint nn; cin >> nn;\n\tfor(int z = 0; z < nn; z++){\n\t\tstring str;cin >> str;\n\t\tint i = 1;\n\t\tcout << calc(str, i, str.size()) << endl;\n\t}\n\n\treturn 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing i64 = long long int;\nusing ui64 = unsigned long long int;\n\n////////////////////////////////\n\nint main()\n{\n    int T;\n    cin >> T;\n    while(T--){\n        string s;\n        cin >> s;\n        vector< deque<int> > d(10000);\n        int lv = 0, maxlv = 0, curs = 0, num = 0;\n        for(int i=0;i<s.length();i++){\n            if(s[i] == '['){\n                lv ++;\n                maxlv = max(maxlv,lv);\n            }\n            else if(isdigit(s[i])){\n                num *= 10;\n                num += s[i] - '0';\n            }else{\n                curs = maxlv;\n                if(num){\n                    d[lv].push_back(num);\n                    lv--;\n                    num = 0;\n                }else{\n                    lv--;\n                    while(curs > lv){\n                        // cerr << curs << \" \" << lv << endl;\n                        if(d[curs].size() == 0){\n                            --curs;continue;\n                        }\n                        sort(d[curs].begin(),d[curs].end());\n                        int l = 0;\n                        if(curs == maxlv){\n                            for(auto&& x:d[curs]){\n                                d[maxlv-1].push_back(x/2+1);\n                            }\n                            d[maxlv].clear();\n                            --curs;\n                        }else{\n                            // cerr << d[curs].size() << \" \" << d[curs].size()/2 + 1 << endl;\n                            for(int i=0;i<d[curs].size()/2+1;i++){\n                                l += d[curs][i];\n                            }\n                            d[curs].clear();\n                            d[--curs].push_back(l);\n                        }\n                        // for(int i=0;i<=maxlv;i++){\n                        //     cerr << i << \" : \";\n                        //     for(auto&& x:d[i])cerr << x << \" \";\n                        //     cerr << endl;\n                        // }\n                    }\n                }\n            }\n        }\n        cout << d[0][0] << endl;\n    }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<cmath>\n\n\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n\ntypedef pair<int,int> pii;\n\n\n\n\npii parseAndCalc(string& st,int n){\n    if(st[n]!='[') cerr << \"???\";\n    n++;\n    vector<int> v;\n    pii r;\n\n    for(;;){\n\n        // cerr << \"next: \" << st[n] <<endl;\n\n        if(st[n]=='['){\n            r=parseAndCalc(st,n);\n            v.push_back(r.first);\n            n=r.second;\n        }else if(st[n]==']'){\n            // cout <<\"!!!!!!!!!!!\"<<endl;\n            sort(v.begin(),v.end());\n            int N=0;\n            rep(i,v.size()/2+1){\n                // cerr << \"v[\"<<i<<\"] = \"<< v[i] <<endl;\n                N+=v[i];\n            }\n            // cerr << \"N : \"<< N << endl;\n            return pii(N,n+1);\n        }else{\n            int N=0;\n            for(;st[n]!=']';n++) N=N*10+st[n]-'0';\n            return pii(N/2+1,n+1);\n        }\n    }\n\n}\n\n\nint main(void){\n    int numOdData;\n\n    cin >> numOdData;\n\n    while(numOdData--){\n        string st;\n\n        cin >> st;\n        pii r = parseAndCalc(st,0);\n\n        cout << r.first << endl;\n\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring str;\nconst char *p;\n\nint parse() {\n\n  p ++;\n  \n  switch(*p) {\n  case '[':\n    {\n      vector<int> v;\n      while(*p == '[') {\n\tv.push_back( parse() );\n\tp ++;\n      }\n      \n      sort(v.begin(), v.end());\n\n      int sum = 0;\n      for(int i=0; i<v.size()/2+1; i++) {\n\tsum += v[i];\n      }\n\n      return sum;\n    }\n\n  default:\n    if(isdigit(*p)) {\n      char *e;\n      int num = strtol(p, &e, 10);\n      p = e;\n      return num/2+1;\n    }\n  }\n}\n\nint main() {\n  int n;\n  \n  cin >> n; cin.ignore();\n  for(int i=0; i<n; i++) {\n    getline(cin, str);\n    p = &str[0];\n\n    cout << parse() << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint hierarchy(string str) {\n\tint count = 0;\n\twhile (str[count] == '[')count++;\n\tstr = str.substr(1, str.length() - 2);//??????????????????????????????\n\tif (count == 1) {\n\t\tint res = stoi(str);\n\t\t//cout << res << endl;\n\t\treturn res/2+1;\n\t}\n\telse {\n\t\tcount--;\n\t\tvector<int>v;\n\t\tint s = 0, ms = count, cou = 0;\n\t\twhile (str.length() > ms) {\n\t\t\tif (str[ms] == ']')cou++;\n\t\t\telse cou = 0;\n\n\t\t\tif (count == cou) {\n\t\t\t\tstring b = str.substr(s, ms + 1 - s);\n\t\t\t\tv.push_back(hierarchy(b));\n\t\t\t\ts = ms + 1;\n\t\t\t\tcou = 0;\n\t\t\t}\n\t\t\tms++;\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < v.size()/2+1; i++) {\n\t\t\tsum += v.at(i);\n\t\t}\n\t\treturn sum;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int>v;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tv.push_back(hierarchy(s));\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tcout << v[i] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstring cal_p(string str) {\n\tvector<int> ns;\n\tfor (int i = 0; i < str.length(); ++i) {\n\t\tif (str[i] != ' ') {\n\t\t\tint len = 0;\n\t\t\twhile (str[i+len] != ' ') {\n\t\t\t\t++len;\n\t\t\t}\n\t\t\tns.push_back(stoi(str.substr(i,len)));\n\t\t\ti += len;\n\t\t}\n\t}\n\tsort(ns.begin(),ns.end());\n\tint sum = 0;\n\tfor (int i = 0; i < (ns.size()+1)/2; ++i) {\n\t\tsum += ns[i];\n\t}\n\treturn to_string(sum);\n}\n\nint main(void) {\n\tint n;\n\tcin >> n;\n\tfor (int q = 0; q < n; ++q) {\n\t\tstring str;\n\t\tcin >> str;\n\t\tstring norm = \"\";\n\t\tint deep = 0;\n\t\tfor (int i = 0; i < str.length(); ++i) {\n\t\t\tif (str[i] == '[') {\n\t\t\t\tdeep = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if (str[i] == ']') {\n\t\t\t\tnorm += \" \";\n\t\t\t\t++deep;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeep = 0;\n\t\t\t\tint len = 0;\n\t\t\t\twhile (str[i+len] != ']') {\n\t\t\t\t\t++len;\n\t\t\t\t}\n\t\t\t\tnorm += to_string((stoi(str.substr(i,len))/2)+1);\n\t\t\t\ti += len-1;\n\t\t\t}\n\t\t}\n\n\t\tfor (int time = 0; time < deep-1; ++time) {\n\t\t\tint ind = 0;\n\t\t\tint len = 0;\n\t\t\tbool sp = false;\n\t\t\tstring next = \"\";\n\t\t\tstring temp = \"\";\n\t\t\twhile (ind < norm.length()) {\n\t\t\t\tif (norm[ind] == ' ') {\n\t\t\t\t\tif (sp) {\n\t\t\t\t\t\tlen = 0;\n\t\t\t\t\t\tnext += cal_p(temp);\n\t\t\t\t\t\twhile (ind < norm.length() && norm[ind] == ' ') {\n\t\t\t\t\t\t\tnext += norm[ind];\n\t\t\t\t\t\t\t++ind;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t--ind;\n\t\t\t\t\t\ttemp = \"\";\n\t\t\t\t\t\tsp = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttemp += norm[ind];\n\t\t\t\t\t\t++len;\n\t\t\t\t\t\tsp = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsp = false;\n\t\t\t\t\ttemp += norm[ind];\n\t\t\t\t\t++len;\n\t\t\t\t}\n\t\t\t\t++ind;\n\t\t\t}\n\t\t\tnorm = next + \" \";\n\t\t}\n\t\tstring res = \"\";\n\t\tfor (int i = 0; norm[i] != ' '; ++i) {\n\t\t\tres += norm[i];\n\t\t}\n\t\tcout << res << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cctype>\n\nusing namespace std;\n\nclass Zone\n{\npublic:\n\tint value;\n\tvector<Zone> zones;\n\t\n\tZone() :value(-1) {}\n\tZone(int v) :value(v) {}\n\t\n\tint best()\n\t{\n\t\tif(value != -1) return value / 2 + 1;\n\t\t\n\t\tvector<int> needs;\n\t\t\n\t\tfor(auto zone : zones) {\n\t\t\tneeds.push_back(zone.best());\n\t\t}\n\t\t\n\t\tsort(needs.begin(), needs.end());\n\t\t\n\t\treturn std::accumulate(needs.begin(), needs.begin() + needs.size() / 2 + 1, 0);\n\t}\n};\n\nint number(string::const_iterator it);\n\nZone read(string::const_iterator it)\n{\n\tif(isdigit(*it)) {\n\t\tint n = number(it);\n\t\tit++;\n\t\treturn Zone(n);\n\t}\n\t\n\tZone zone;\n\twhile(*it == '[') {\n\t\tzone.zones.push_back(read(it));\n\t\t*it++;\n\t}\n\t\n\treturn zone;\n}\n\nint number(string::const_iterator it)\n{\n\tint n = 0;\n\twhile(isdigit(*it)) {\n\t\tn *= 10;\n\t\tn += (*it) - '0';\n\t}\n\t\n\treturn n;\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\t\n\tfor(int i = 0; i < n; i++) {\n\t\tstring line;\n\t\tcin >> line;\n\t\tcout << read(line.begin()).best() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<queue>\n\nusing namespace std;\n\nstring line;\n\ntypedef struct{\n  int ans;\n  int s;\n}orig;\n\n\n/*一つの選挙の最小人数を求める\n来るデータ~~~~~~]~~~~]~~~]\n頭の[は取ってある\n関数内で]を取ってかえす\n*/\norig rec(int s){\n  priority_queue<int,vector<int>,greater<int> > box;\n  int ans=0,i=0;\n  orig val;\n  while(s<line.size() && line.at(s)=='['){\n    s++;\n    val=rec(s);\n    box.push(val.ans);\n    s=val.s;\n  }\n\n  if(s<line.size() && line.at(s)==']'){\n    /*第一弾以外のとき*/\n    //cout<< box.size()<<\"size \";\n    for(i=0;i<=box.size()/2+1;i++){\n      ans+=box.top();\n      //      cout << box.top()<<\"top \";\n      box.pop();\n    }\n    s++;     \n  }\n  else {\n    /*[でも]でもない　つまり数字　つまり第一段 line = 122121][~~~ で来る\n     条件よりboxは今empty*/\n    int i=0;\n    while(line.at(s+i)!=']')i++;\n    ans=stoi(line.substr(s,i))/2+1;//iはat(i)で]の位置、at(i)はsubstrでi+1番目\n    //        cout<<ans<<\"&  \";\n    s+=i+1;\n  }\n  orig a;\n  a.ans=ans;a.s=s;\n  return a;\n  \n}\n\nint main(){\n  int n,i;\n  orig ans;\n  cin >>n;\n  for(i=0;i<n;i++){\n    //string line;\n    line=\"\";\n    cin >> line;//getline(cin,line);\n    ans=rec(1);\n    cout <<ans.ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint n;\nstring s;\n\nint p;\nint calc()\n{\n  //cout << p << endl;\n  vector<int> vec;\n  while(1){\n    if(s[p] == '['){\n      p++;\n      vec.push_back(calc());\n      //p++;\n    }\n    else if(s[p] == ']'){\n      sort(vec.begin(), vec.end());\n      int ret = 0;\n      //for(int i = 0; i < vec.size(); i++) cout << vec[i] << \" \"; cout << endl;\n      for(int i = 0; i <= vec.size()/2; i++) ret += vec[i];\n      p++;\n      //cout << \"*\" << ret << endl;\n      return ret;\n    }\n    else{\n        int ret = 0;\n        while(s[p] != ']'){\n          ret *= 10;\n          ret += s[p] - '0';\n          p++;\n        }\n        p++;\n        //cout << \"@\" << ret/2+1 << endl;\n        return ret/2+1;\n    }\n  }\n}\n\nint main(void)\n{\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    cin >> s;\n    s += \"]\";\n    p = 0;\n    cout << calc() << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iomanip>\n#include <utility>\n#include <cstdlib>\n#include <sstream>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <ctime>\n#include <queue>\n#include <deque>\n#include <cmath>\n#include <stack>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define REP(i,m,n) for(int i=(m);i<(n);i++)\n#define ALL(a)  (a).begin(),(a).end()\n#define pb push_back\n#define sz size()\n\n\n\nstring pre(string s){   // \"][\" を空白に置き換え\n    string b=\"\";\n    rep(i,s.sz-1){\n        if(s[i]==']' && s[i+1]=='['){\n            b+=' ';\n            i++;\n        }\n        else{\n            b+=s[i];\n        }\n    }\n    b+=s[s.sz-1];\n    return b;\n}\n\n\nstring solve(int n,bool check,string s){\n    n++;\n    string tmp[10000]={};\n\n    int count=0;\n    REP(j,n,s.sz){\n        if(s[j]!=']'){\n            if(s[j]!=' '){\n                tmp[count]+=s[j];\n            }\n            else{\n                count++;\n            }\n        }\n        else break;\n    }\n    vi a;\n    rep(i,count+1){\n        a.pb(stoi(tmp[i]));\n    }\n    sort(ALL(a));\n    \n    int sum=0;\n    rep(i,count/2+1){\n        if(check==false)\n            sum+=a[i]/2+1;\n        else\n            sum+=a[i];\n    }\n    return to_string((sum));\n}\n\n\nstring delSpace(string s){  // \"] [\" を \"][\" に置き換え\n    string ret=\"\";\n    rep(i,s.sz-2){\n        if(s[i]==']' && s[i+1]==' ' && s[i+2]=='['){\n            ret+=\"][\";\n            i+=2;\n        }\n        else{\n            ret+=s[i];\n        }\n    }\n    ret+=s[s.sz-2];\n    ret+=s[s.sz-1];\n    return ret;\n}\n\n\nint main(){\n    int t;\n    cin>>t;\n    \n    rep(times,t){\n        string s;\n        cin>>s;\n        int check=false;\n        s=pre(s);\n        while(1){\n            if(s.find(\"[\",0)==-1)break;\n\n            string n=\"\";\n    \n            rep(i,s.sz){\n                if(s[i+1]>='0' && s[i+1]<='9'){\n                    n+=solve(i,check,s);\n                    while(s[i]!=']')i++;\n                }\n                else{\n                    n+=s[i];\n                }\n            }\n            s=n;\n            check=true;\n        }\n        cout<<s<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cctype>\n#include <utility>\n#include <stack>\n#include <vector>\n#include <algorithm>\n#include <numeric>\nusing namespace std;\n\nconst auto gcu = getchar_unlocked;\nconst auto pcu = putchar_unlocked;\n#define _T template <typename T>\n#define _HT template <typename H, typename... T>\n#define _il inline\n#define _sc _il bool scan\n_T T in(int c){T n=0;int m=1;while(isspace(c)){c=gcu();}if(c=='-')m=-1,c=gcu();\n\tdo{n=10*n+(c-'0'),c=gcu();}while(c>='0'&&c<='9');return m*n;}\n_il int in() {return in<int>(gcu());}\n_T T scan(T &n){int c=gcu();return c==EOF?false:(n=in<T>(c),true);}\n_sc(char &c){c=gcu();gcu();return c!=EOF;}\n#ifdef _GLIBCXX_STRING\n_sc(string &s){int c;s=\"\";\n\tfor(;;){c=gcu();if(c=='\\n'||c==' ')return true;else if(c==EOF)return false;s+=c;}}\n#endif\n_HT _sc(H &h, T&&... t){return scan(h)&&scan(t...);}\n#define _ot _il void out\n#define _ol _il void outl\n_ot(bool b) {pcu('0'+b);}\n_ot(const char *s){while(*s)pcu(*s++);}\n_ot(char c){pcu(c);}\n#ifdef _GLIBCXX_STRING\n_ot(string s){for(char c:s)pcu(c);}\n#endif\n_T _ot(T n){static char b[20];char *p=b,m=n<0?pcu('-'),-1:1;\n\tif(!n)*p++='0';else while(n)*p++=n%10*m+'0',n/=10;while(p!=b)pcu(*--p);}\n_ol(){out('\\n');}\n#ifdef _GLIBCXX_VECTOR\n_T _ot(vector<T> &v){for(T &x:v)out(&x == &v[0]?\"\":\" \"),out(x);outl();}\n#endif\n_HT _ot(H&& h, T&&... t){out(h);out(move(t)...);}\ntemplate <typename... T> _ol(T&&... t){out(move(t)...);outl();}\n\nint elect() {\n\tint c = gcu();\n\tswitch(c) {\n\tcase '[':\n\t\t{\n\t\tvector<int> v;\n\t\tfor (int r; (r = elect());)\n\t\t\tv.push_back(r);\n\t\tauto b = v.begin(), m = b + v.size() / 2 + 1;\n\t\tnth_element(b, m, v.end());\n\t\treturn accumulate(b, m, 0);\n\t\t}\n\tcase ']':\n\t\treturn 0;\n\tdefault:\n\t\tungetc(c, stdin);\n\t\tscanf(\"%d\", &c);\n\t\treturn c / 2 + 1;\n\t}\n}\n\nint main() {\n\tfor (int n = in(); n--; gcu())\n\t\toutl(elect());\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <functional>\n\n#define REP(i, a, b) for (int i = int(a); i < int(b); i++)\n#define dump(val) cerr << __LINE__ << \":\\t\" << #val << \" = \" << (val) << endl\n\nusing namespace std;\n\ntypedef long long int lli;\n\nint main() {\n    int _;\n    cin >> _;\n    while (_--) {\n        string s;\n        cin >> s;\n        vector<int> par, ans;\n        vector<vector<int>> nlist;\n        int ind = 0;\n        function<void(int)> decode = [&](int p) {\n            while (ind < s.size()) {\n                char c = s[ind];\n                if (c == '[') {\n                    par.push_back(p);\n                    ans.push_back(0);\n                    if (p != -1) nlist[p].push_back(par.size() - 1);\n                    nlist.push_back(vector<int>());\n                    ind++;\n                    decode(par.size() - 1);\n                    ind++;\n                } else if(c == ']') {\n                    return;\n                } else {\n                    int num = 0;\n                    while ('0' <= s[ind] && s[ind] <= '9') {\n                        num = num * 10 + s[ind] - '0';\n                        ind++;\n                    }\n                    ans[p] = (num + 1) / 2;\n                    return;\n                }\n            }\n        };\n        decode(-1);\n        function<void(int)> calc = [&](int nd) {\n            if (nlist[nd].size() == 0) {\n                return;\n            }\n            vector<int> v;\n            REP (i, 0, nlist[nd].size()) {\n                calc(nlist[nd][i]);\n                v.push_back(ans[nlist[nd][i]]);\n            }\n            sort(begin(v), end(v));\n            REP (i, 0, v.size() / 2 + 1) {\n                ans[nd] += v[i];\n            }\n        };\n        calc(0);\n        cout << ans[0] << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <vector>\n#include <cfloat>\n#include <string>\n#include <cmath>\n#include <set>\n#include <cstdlib>\n#include <map>\n#include <ctime>\n#include <iomanip>\n#include <functional>\n#include <deque>\n#include <iostream>\n#include <cstring>\n#include <queue>\n#include <cstdio>\n#include <stack>\n#include <climits>\n#include <sys/time.h>\n#include <cctype>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint val[4000];\nvector <int> tree[4000];\n\nint rec(int p, int hei) {\n  if (val[p] != -1) return val[p];\n\n  int ret = 0;\n  vector <int> list;\n  for (int i = 0; i < tree[p].size(); i++) {\n    list.push_back(rec(tree[p][i], hei+1));\n  }\n\n  sort(list.begin(), list.end());\n  for (int i = 0; i < list.size()/2+1; i++) {\n    ret += list[i];\n  }\n  \n  return val[p] = ret;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    string str;\n    cin >> str;\n\n    vector <int> temp;\n    for (int j = 0; j < 4000; j++) {\n      tree[j] = temp;\n    }\n\n    memset(val, -1, sizeof(val)); // 入ってないところは-1\n    stack <int> st;\n    int cnt = 0;\n    int p = 0;\n    st.push(cnt);\n    while(!st.empty()) {\n      p++;\n      if (str[p] == '[') {\n\tcnt++;\n\tst.push(cnt);\n      }else if (str[p] == ']') {\n\tint topv = st.top(); st.pop();\n\tif (!st.empty()) {\n\t  tree[st.top()].push_back(topv);\n\t}\n      }else {\n\tint v = 0;\n\tfor (; p < str.size(); p++) {\n\t  if (str[p] == ']') {\n\t    p--;\n\t    break;\n\t  }\n\t  v = v*10+str[p]-'0';\n\t}\n\tval[cnt] = v/2+1;\n      }\n    }\n\n    cout << rec(0, 0) << endl;    \n    \n  }\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <iostream>\n#include <map>\n#include <set>\n#include <list>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <queue>\n#include <iomanip>\n\n#define SIZE 101\n#define INF 100000000\n\nusing namespace std;\n\n\ntypedef pair<int, int> Pa;\n\nstring s;\nchar c[100];\nint index = 0;\n\nint func(){\n\tvector<int> v;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (isdigit(s[index])) {\n\t\t\tint k = 0;\n\t\t\twhile (isdigit(s[index])) {\n\t\t\t\tc[k] = s[index];\n\t\t\t\tk++;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\t/*for (int j = 0; j < 100; j++) {\n\t\t\t\tcerr << c[k];\n\t\t\t}*/\n\n\t\t\tc[k] = '\\0';\n\n\t\t\tv.push_back((atoi(c) + 1) / 2);\n\n\t\t} else if (s[index] == '[') {\n\t\t\tindex++;\n\t\t\tv.push_back(func());\n\n\t\t} else if (s[index] == ']') {\n\t\t\tvector<int> v2 = v;\n\t\t\tsort(v2.begin(), v2.end());\n\n\t\t\tint res = 0;\n\t\t\tfor (int i = 0; i <= v.size() / 2; i++) {\n\t\t\t\tres += v2[i];\n\t\t\t}\n\t\t\tindex++;\n\t\t\treturn (res);\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tindex = 1;\n\t\tint res = func();\n\t\tcout << res << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nvector<string> split(string s){\n    vector<string> v;\n    auto itrst=s.begin();\n    itrst++;\n    int count=1;\n    int target=1;\n    for(int i=2;i<s.size();i++){\n        if(s[i]=='[')count++;\n        else if(s[i]==']')count--;\n        \n        if(!count){\n            v.push_back(s.substr(target,i-target+1));\n            target=i+1;\n        }\n    }\n    return v;\n}\n\nint minimal(string s){\n    if(*s.begin()!='['){\n        return (stoi(s)+1)/2;\n    }\n    int val=0;\n    vector<string> v;\n    vector<int> value;\n    v=split(s);\n    \n    for(string x:v){\n        value.push_back(minimal(x));\n    }\n\n    sort(value.begin(),value.end());\n    for(int i=0;i<(value.size()+1)/2;i++){\n        val+=value[i];\n    }\n    return val;\n}\n\nvoid solve(string s){\n    cout << minimal(s) << endl;\n}\n\nint main(void){\n    int n;\n    string str;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin >> str;\n        solve(str);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <stack>\n#include <algorithm>\n\n#define For(i,a,n) for(int i = a;i < (n);i++)\n#define rep(i,n)   For(i,0,n)\n\nusing namespace std;\n\nint n;\nstring s;\nint c;\n\nvoid cheak2(vector<int> &v){\n\tstring t;\n\tfor (;; c++){\n\t\tif (s[c] == ']'){\n\t\t\tc++; break;\n\t\t}\n\t\tt += s[c];\n\t}\n\tv.push_back(atoi(t.c_str()));\n\tif (s[c] == ']'){ c++; return; }\n\telse\n\tif(s[c] == '['){\n\t\tc++; cheak2(v);\n\t}\n}\n\nvoid cheak(vector<int> &v){\n\n\tvector<int> t;\n\t\n\tif (s[c] == '[' && s[c+1] >= '0' && s[c+1] <= '9'){\n\t\tc++; cheak2(t);\n\t\tsort(t.begin(), t.end());\n\t\tint sum = 0;\n\t\trep(i, (t.size() + 1) / 2){\n\t\t\tsum += (t[i] + 1) / 2;\n\t\t}\n\t\tv.push_back(sum);\n\t}else\n\tif (s[c] == '['){\n\t\twhile (s[c] == '['){\n\t\t\tc++; cheak(t);\n\t\t}\n\t\tc++;\n\t\tsort(t.begin(), t.end());\n\t\tint sum = 0;\n\t\trep(i, (t.size() + 1) / 2){\n\t\t\tsum += (t[i]);\n\t\t}\n\t\tv.push_back(sum);\n\t}\n}\n\nint main()\n{\n\tcin >> n;\n\t\n\trep(_, n){\n\t\tc = 0;\n\t\tcin >> s;\n\t\ts += \" \";\n\t\tvector<int> ans;\n\t\tcheak(ans);\n\t\tcout << ans[0] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nstring s;\nint pos;\n\nint calc(){\n  if('0' <= s[pos] && s[pos] <= '9'){\n    string tmp;\n    for(;'0'<=s[pos]&&s[pos]<='9';pos++) tmp.push_back(s[pos]);\n    return (atoi(tmp.c_str()) + 1) / 2;\n  }\n  vector<int> vec;\n  while(pos < s.size() && s[pos] == '['){\n    pos++;\n    vec.push_back(calc());\n    pos++;\n  }\n  sort(vec.begin(), vec.end());\n  int res = 0;\n  for(int i=0;i<=(int)vec.size()/2;i++) res += vec[i];\n  return res;\n}\n\nmain(){\n  int T;\n  cin >> T;\n  while(T--){\n    cin >> s;\n    pos = 0;\n    cout << calc() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <numeric>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nusing lint = long long;\nusing ldouble = long double;\n\nint solve(const string& s, int& i) {\n    if (s[i] == '[') {\n        vector<int> ch;\n        ++i;\n        while (s[i] != ']') {\n            ch.push_back(solve(s, i));\n        }\n        ++i;\n\n        sort(ch.begin(), ch.end());\n        return accumulate(ch.begin(), ch.begin() + ch.size() / 2 + 1, 0);\n    } else {\n        int ret = 0;\n        while (s[i] != ']') {\n            ret = ret * 10 + (s[i] - '0');\n            ++i;\n        }\n        return (ret + 1) / 2;\n    }\n}\n\nint main() {\n    int Q;\n    cin >> Q;\n    for (int q = 0; q < Q; ++q) {\n        string s;\n        cin >> s;\n\n        int i = 0;\n        cout << solve(s, i) << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint idx;\nstring str;\n\nint solve(){\n  int res = 0;\n  idx++;\n  if(str[idx] == '['){\n    vector<int> v;\n    while(str[idx] == '['){\n      v.push_back(solve());\n    }\n    idx++;\n    sort(v.begin(),v.end());\n    for(int i = 0 ; i < (int)v.size()/2+1 ; i++){\n      res += v[i];\n    }\n  }else{\n    while(isdigit(str[idx])){\n      res *= 10;\n      res += str[idx]-'0';\n      idx++;\n    }\n    idx++;\n    res = res/2 + 1;\n  }\n  return res;\n}\n\nint main(){\n  int Tc;\n  cin >> Tc;\n  while(Tc--){\n    cin >> str;\n    idx = 0;\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\n#include <functional>\nusing namespace std;\n\nint solve(const string& s, int& k)\n{\n    ++ k;\n    if(s[k] != '['){\n        int ret = 0;\n        while(s[k] != ']'){\n            ret *= 10;\n            ret += s[k] - '0';\n            ++ k;\n        }\n        ++ k;\n        return (ret + 1) / 2;\n    }\n\n    vector<int> a;\n\n    for(;;){\n        if(s[k] == ']')\n            break;\n        a.push_back(solve(s, k));\n    }\n    ++ k;\n\n    sort(a.begin(), a.end());\n    int ret = accumulate(a.begin(), a.begin()+a.size()/2+1, 0);\n    return ret;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    while(--n >= 0){\n        string s;\n        cin >> s;\n        int k = 0;\n        cout << solve(s, k) << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <vector>\n#include <algorithm>\n#include <utility>\n\nusing namespace std;\n\nconst char *p;\n\nint rec() {\n  int res = 0;\n  vector<int> v;\n\n  ++p;\n  if(*p == '[') {\n    while(*p == '[') v.push_back(rec());\n    sort(v.begin(), v.end());\n    for(int i = 0; i < v.size()/2+1; i++) res += v[i];\n  } else {\n    char *e;\n    res = strtol(p, &e, 10) / 2 + 1;\n    p = e;\n  }\n\n  ++p;\n  return res;\n}\n\nint main() {\n  int n;\n  char str[1000];\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = &str;\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cassert>\n#include <cctype>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nenum { Leaf, Node };\n\nstruct Stage {\n    int type;\n    int required_vote;\n\n    union {\n        int n;\n        vector<Stage*>* childs;\n    } u;\n};\n\nbool comp(const Stage* l, const Stage* r) {\n    return l->required_vote < r->required_vote;\n}\n\nchar S[20000];\n\nStage* parse(char* s, char** next) {\n    assert(s[0] == '[');\n    if (isdigit(s[1])) {\n        int n = 0;\n\n        int i = 1;\n        for (; isdigit(s[i]); i++) {\n            n *= 10;\n            n += (int)(s[i] - '0');\n        }\n        assert(s[i] == ']');\n\n        *next = &s[i + 1];\n\n        Stage* r = new Stage;\n        r->type = Leaf;\n        r->u.n = n;\n\n        return r;\n    } else if (s[1] == '[') {\n        ++s;\n\n        Stage* r = new Stage;\n        r->type = Node;\n        r->u.childs = new vector<Stage*>;\n\n        vector<Stage*> &childs = *(r->u.childs);\n\n        for (; *s != ']'; ) {\n            assert(*s == '[');\n\n            char *n;\n            Stage* c = parse(s, &n);\n            childs.push_back(c);\n\n            s = n;\n        }\n\n        *next = s + 1;\n\n        return r;\n    }\n\n    assert(false);\n    return 0;\n}\n\nint more_than_half(int i) {\n    return i / 2 + 1;\n}\n\nvoid calc(Stage* s) {\n    if (s->type == Leaf) {\n        s->required_vote = more_than_half(s->u.n);\n    } else if (s->type == Node) {\n        vector<Stage*>& v = *(s->u.childs);\n\n        for (int i = 0; i < (int)v.size(); i++) {\n            calc(v[i]);\n        }\n\n        sort(v.begin(), v.end(), comp);\n\n        int r = 0;\n        for (int i = 0; i < more_than_half(v.size()); i++) {\n            r += v[i]->required_vote;\n        }\n\n        s->required_vote = r;\n    }\n}\n\nvoid cleanup(Stage* s) {\n    if (s->type == Leaf) {\n        delete s;\n    } else if (s->type == Node) {\n        vector<Stage*>& v = *(s->u.childs);\n\n        for (int i = 0; i < (int)v.size(); i++) {\n            cleanup(v[i]);\n        }\n\n        delete s->u.childs;\n        delete s;\n    }\n}\n\nint main() {\n    int n;\n    char ns[100];\n    fgets(ns, 99, stdin);\n    n = atoi(ns);\n\n    for (int zz = 0; zz < n; zz++) {\n        for (int i = 0; i < 10002; i++) { S[i] = 0; }\n        fgets(S, 20000, stdin);\n        char* dummy;\n        Stage* node = parse(S, &dummy);\n\n        calc(node);\n\n        printf(\"%d\\n\", node->required_vote);\n\n        cleanup(node);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cctype>\n#include <cassert>\nusing namespace std;\n\nstring input;\nint idx;\n\nint minimum_votes();\nint parse_int();\n\nint main()\n{\n    int N;\n    cin >> N;\n    while (N--) {\n        cin >> input;\n        idx = 0;\n        cout << minimum_votes() << endl;\n    }\n}\n\nbool open_bracket()\n{\n    return input[idx] == '[';\n}\n\nbool close_bracket()\n{\n    return input[idx] == ']';\n}\n\nint minimum_votes()\n{\n    assert(open_bracket());\n    idx++;\n\n    {\n        int voters = parse_int();\n        if (voters >= 0) {\n            assert(close_bracket());\n            idx++;\n\n            return (voters + 1) / 2;\n        }\n    }\n\n    vector<int> voters;\n\n    while (open_bracket()) {\n        voters.push_back(minimum_votes());\n    }\n\n    assert(close_bracket());\n    idx++;\n\n    sort(voters.begin(), voters.end());\n\n    int sum = 0;\n    for (int i = 0; i < (voters.size() + 1) / 2; i++) {\n        sum += voters[i];\n    }\n\n    return sum;\n}\n\nint parse_int()\n{\n    if (isdigit(input[idx])) {\n        int result = 0;\n        while (isdigit(input[idx])) {\n            result *= 10;\n            result += input[idx] - '0';\n            idx++;\n        }\n        return result;\n    } else {\n        return -1;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <deque>\n#include <tuple>\n#include <queue>\n#include <functional>\n#include <cmath>\n#include <iomanip>\n#include <map>\n//cin.sync_with_stdio(false);\n//streambuf\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\nint mincost[5001];\nvector<pii> tx(5001);\nvector<vector<int>> way(5001);\nint main() {\n\tint h, w;\n\twhile (cin >> h >> w,h) {\n\t\tint m = h*h+w*w;\n\t\tint m1, h1;\n\t\tfor (m1 = m;; m1++) {\n\t\t\tfor (h1 = (m1 == m ? h + 1 : 1); h1 < 100&&h1*h1*2<m1; h1++) {\n\t\t\t\tif ((int)sqrt(m1 - h1*h1)*(int)sqrt(m1 - h1*h1)==m1-h1*h1)goto a;\n\t\t\t}\n\t\t}\n\ta:\n\t\tcout << h1 <<\" \"<< (int)sqrt(m1 - h1*h1) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n\nusing namespace std;\n\nint expr(string &str, int &itr);\nint number(string &str, int &itr);\n\nint main() {\n    int N;\n    int start;\n    string str;\n    cin >> N;\n\n    for(int i=0; i< N; i++){\n        cin >> str;\n        start=0;\n        cout << expr(str, start) << endl;\n    }\n    return 0;\n}\n\nint expr(string &str, int &itr){\n    int ans=0;\n    vector<int> vect(0);\n    for(;str[itr]=='[';){\n        itr++;\n        if(isdigit(str[itr])){\n            vect.push_back((int)ceil(number(str,itr)/2.0));\n        }else{\n            vect.push_back(expr(str, itr));\n        }\n        for(;str[itr]==']';) itr++;\n    }\n    sort(vect.begin(), vect.end());\n    for(int i=0 ; i< vect.size()/2 + 1; i++){\n        ans+=vect[i];\n    }\n    return ans;\n}\n\nint number(string &str, int &itr){\n    int num = 0;\n    for(;isdigit(str[itr]);itr++) {\n        num = num*10 + ( str[itr] -'0' );\n    }\n    return num;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) repi(i,0,n)\n#define repi(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define pb push_back\n\nint rec(string s){\n  //cout << \"s==\" << s << endl;\n  if(s[0]!='[') return atoi(s.c_str())/2+(atoi(s.c_str())%2==0 ? 0:1); \n  vector<int> b;\n  int a=0;\n  string str;\n  repi(i,1,s.size()-1){\n    if(i==1 && s[i]!='['){\n      b.pb(rec(s.substr(1,s.size()-2)));\n      break;\n    }\n    if(s[i]=='[') a++;\n    else if(s[i]==']') a--;\n    \n    str+=s[i];\n\n    if(a==0) {\n      b.pb(rec(str));\n      str=\"\";\n    }\n  }\n  sort(b.begin(),b.end());\n  int ans=0;\n  rep(i,b.size()/2+(b.size()%2==0 ? 0:1)){\n    ans+=b[i];\n  }\n  return ans;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  rep(i,n){\n    string s;\n    cin >> s;\n    cout << rec(s) << endl;;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstdio>\n#include <utility>\n#include <cstdlib>\nusing namespace std;\n\ntypedef pair<int, int> pii;\n\nconst char *p;\n\nint solve() {\n  int ret = 0;\n  ++p;\n  if(*p=='['){\n    vector<int> v;\n    while(*p == '['){\n      v.push_back(solve());\n    }\n    sort(v.begin(), v.end());\n    ret = 0;\n    for(int i=v.size()/2; i>=0; i--) {\n      ret += v[i];\n    }\n  }\n  else {\n    char *e;\n    ret = strtol(p, &e, 10)/2 + 1;\n    p = e;\n  }\n  ++p;\n  return ret;\n}\n\nint main() {\n  int n;\n  string s;\n  cin>>n;\n  for(int i=0; i<n; i++) {\n    cin>>s;\n    p = s.c_str();\n    cout<<solve()<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nstring str;\nunsigned int cur;\n\nbool is_digit(char c)\n{\n\treturn c >= '0'&&c <= '9';\n}\n\nint solve()\n{\n\tvector<int> vec;\n\tunsigned int str_size = str.size();\n\n\twhile (cur < str_size) {\n\t\tif (is_digit(str[cur]) == true) {\n\t\t\tint num = 0;\n\t\t\twhile (is_digit(str[cur]) == true) {\n\t\t\t\tnum *= 10;\n\t\t\t\tnum += str[cur] - '0';\n\t\t\t\tcur++;\n\t\t\t}\n\t\t\tvec.push_back((num + 1) / 2);\n\t\t}\n\t\telse if (str[cur] == '[') {\n\t\t\tcur++;\n\n\t\t\tvec.push_back(solve());\n\t\t}\n\t\telse if (str[cur] == ']') {\n\t\t\tcur++;\n\n\t\t\tint ans = 0;\n\t\t\tunsigned int size = vec.size();\n\n\t\t\tsort(vec.begin(), vec.end());\n\n\t\t\tfor (unsigned int i = 0; i <= size / 2; i++) {\n\t\t\t\tans += vec[i];\n\t\t\t}\n\n\t\t\treturn ans;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> str;\n\n\t\tcur = 1;\n\n\t\tcout << solve() << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nstruct Result{\n  int p, value;\n  Result(int p, int v) : p(p), value(v) {}\n};\n\nstring s;\nResult dfs(int k){\n  if(s[k] == '['){\n    k++;\n    vector<int> v;\n    while(s[k] != ']'){\n      Result r = dfs(k);\n      v.push_back(r.value);\n      k = r.p;\n    }\n    sort(v.begin(), v.end());\n    int sum = 0;\n    REP(i, v.size() / 2 + 1){\n      sum += v[i];\n    }\n    k++;\n    return Result(k, sum);\n  }else{\n    int res = 0;\n    while(isdigit(s[k])){\n      res = res * 10 + s[k++] - '0';\n    }\n    return Result(k, res / 2 + 1);\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  while(cin >> s){\n    Result r = dfs(0);\n    cout << r.value << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int datacount;\n    cin >> datacount;\n    for (; datacount > 0; datacount--) {\n        string s;\n        cin >> s;\n        vector<vector<int>> v;\n        int index = -1;\n        long long nownum = 0;\n        for (int i = 0; i < s.size(); i++) {\n            if (s[i] == '[') {\n                v.push_back(vector<int>());\n                index++;\n            } else if (s[i] == ']') {\n                sort(v[index].begin(), v[index].end());\n                int count = 0;\n                for (int i = 0; i <= v[index].size() / 2; i++)count += v[index][i];\n\n                index--;\n                if (index < 0) {\n                    cout << count << endl;\n                } else {\n                    v.pop_back();\n                    v[index].push_back(count);\n                }\n            } else {\n                nownum = nownum * 10 + (s[i] - '0');\n                if (s[i + 1] == ']') {\n                    v[index].push_back(nownum / 2 + 1);\n                    nownum = 0;\n                }\n            }\n        }\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <utility>\n#include <sstream>\n#include <complex>\n#include <fstream>\n#include <bitset>\n#include <time.h>\n#include <tuple>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll, ll> P;\ntypedef vector<ll> V;\ntypedef complex<double> Point;\n\n#define PI acos(-1.0)\n#define EPS 1e-10\nconst ll INF = 1e12;\nconst ll MOD = 1e9 + 7;\n\n#define FOR(i,a,b) for(ll i=(a);i<(b);i++)\n#define rep(i,N) for(ll i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define EQ(a,b) (abs((a)-(b))<EPS)\n#define EQV(a,b) ( EQ((a).real(), (b).real()) && EQ((a).imag(), (b).imag()) )\n#define fi first\n#define se second\n#define N_SIZE (1LL << 20)\n#define NIL -1\n#define MAX_N 100100\n\nll sq(ll num) { return num*num; }\nll mod_pow(ll x, ll n) {\n\tif (n == 0)return 1;\n\tif (n == 1)return x%MOD;\n\tll res = sq(mod_pow(x, n / 2));\n\tres %= MOD;\n\tif (n % 2 == 1) {\n\t\tres *= x;\n\t\tres %= MOD;\n\t}\n\treturn res;\n}\nll mod_add(ll a, ll b) { return (a + b) % MOD; }\nll mod_sub(ll a, ll b) { return (a - b + MOD) % MOD; }\nll mod_mul(ll a, ll b) { return a*b % MOD; }\n\nstring s;\nint n;\n\nint number(int &pos) {\n\tint res = 0;\n\twhile (s[pos] != ']') {\n\t\tres *= 10;\n\t\tres += (s[pos] - '0');\n\t\tpos++;\n\t}\n\tpos++;\n\treturn res / 2 + 1;\n}\n\nint solve(int &pos) {\n\t//cout << \"!\" << pos << endl;\n\tif (s[pos] == '[') {\n\t\tvector<int> vi;\n\t\twhile (s[pos] == '[') {\n\t\t\tpos++;\n\t\t\tvi.push_back(solve(pos));\n\t\t}\n\t\tsort(ALL(vi));\n\t\t//rep(i, vi.size())cout << \"!\" << vi[i];\n\t\t//cout << endl;\n\t\tint res = 0;\n\t\trep(i, vi.size() / 2 + 1)res += vi[i];\n\t\tpos++;\n\t\treturn res;\n\t}\n\treturn number(pos);\n}\n\nint main() {\n\tcin >> n;\n\trep(i, n) {\n\t\tcin >> s;\n\t\tint pos = 0;\n\t\tcout << solve(pos) << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <iomanip>\n#include <cmath>\n\n#define MAX_N 100\n\nusing namespace std;\n\nint N;\nchar str[10000];\n\nint get_num(int l){\n\tint res = 0;\n\tfor (int i = l; str[i] != ']'; i++)\n\t{\n\t\tres += (str[i]-'0');\n\t\tres *= 10;\n\t}\n\tres /= 10;\n\treturn res;\n}\n\nint dfs(int l, int r){// \"[....]\"??¨?????£???????????????(...???)????????°?????????\n\tif(str[l+1] >= '0' && str[l+1] <= '9') return get_num(l+1)/2+1;\n\tint a[1000];\n\tint count = 0;// ??????????????°\n\tint k = 0, nl = l+1;\n\tfor (int i = l+1; i < r; i++)\n\t{\n\t\tif(str[i] == '['){\n\t\t\tk++;\n\t\t}else if(str[i] == ']'){\n\t\t\tk--;\n\t\t}\n\t\tif(k == 0){\n\t\t\ta[count] = dfs(nl, i);\n\t\t\tnl = i+1;\n\t\t\tcount++;\n\t\t}\n\t}\n\tsort(a, a+count);\n\tint sum = 0;\n\tfor (int i = 0; i < count/2+1; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\treturn sum;\n}\n\nvoid solve() {\n\tint res = dfs(0, strlen(str)-1);\n\tcout << res << endl;\n\treturn;\n}\n\nint main(){\n\tcin >> N;\n\tfor (int i = 0; i < N; i++)\n\t{\n\t\tcin >> str;\n\t\tsolve();\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <list>\n\nusing namespace std;\n\n\n\nint min(char* s) {\n\tint n = 0;\n\tint sum = 0, tmpI = 0;\n\tbool flag = true;\n\tlist<int> intlist;\n\n\tfor(int i = 0; s[i] != '\\0'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tint count = 1, j;\n\t\t\tfor(j = 1; count != 0; j++) {\n\t\t\t\tif(s[j + i] == '[') {\n\t\t\t\t\tcount += 1;\n\t\t\t\t} else if(s[j + i] == ']') {\n\t\t\t\t\tcount -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t//cout << \"Weeeei\" << endl;\n\t\t\tchar* tmpS = new char[10000];\n\t\t\tstrncpy(tmpS, s+i+1, j-2);\n\t\t\ttmpS[j-2] = '\\0';\n\t\t\t//cout << tmpS << endl;\n\t\t\tint x = min(tmpS);\n\t\t\tintlist.push_back( x );\n\t\t\tn++;\n\t\t\tflag = false;\n\t\t\ti = i + j-1;\n\t\t\tdelete[] tmpS;\n\t\t}\n\t}\n\tif(flag) {\n\t\ttmpI = atoi(s);\n\t\t//cout << tmpI << endl;\n\t\treturn tmpI / 2 + 1;\n\t}\n\n\tintlist.sort();\n\n\tlist<int>::iterator itr = intlist.begin();\n\tfor(int i = 0; i < n/2 + 1; itr++, i++) {\n\t\tsum += *itr;\n\t}\n\n\t/*\n\tbool flag = true;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tif(!flag) {\n\t\t\t\tstring s2;\n\t\t\t\tfor(int j = 0; s[j] != ']' && s[j + 1] != ']'; j++) {\n\t\t\t\t\tstrncpy(s2, s+i, j-i+1);\n\t\t\t\t}\n\t\t\t\tmin(s2);\n\t\t\t} else {\n\t\t\t\tn++:\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tint[] input = new input[n];\n\tint j = 0;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\t;\n\t\t} else if(s[i] == ']') {\n\t\t\tinput[j] = tmpI;\n\t\t\ttmpI = 0;\n\t\t} else {\n\t\t\ttmpI = tmpI * 10 + atoi(c);\n\t\t}\n\t}\n\tsort(input);\n\tfor(int i = 0; i < n/2 + 1; i++) {\n\t\tsum = input[i] / 2 + 1;\n\t}\n\t*/\n\n\treturn sum;\n}\n\n\nint main (void) {\n\tint n;\n\tcin >> n;\n\t\n\tcout << \"ok\" << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar* s = new char[10002];\n\t\t//char c;\n\t\t//int j = 0;\n\t\t/*for( ; cin >> c && (c != '\\n' && c != '\\0'); j++) {\n\t\t\ts[j] = c;\n\t\t}\n\t\ts[j] = '\\0';\n\t\t*/\n\t\tcin >> s;\n\t\t//cout << s;\n\t\t//cout << \"abon\" << endl;\n\n\t\tcout << min(s) << endl;\n\t\tdelete[] s;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n// http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1188&lang=jp\nusing namespace std;\nint dfs(int &k, const string str);\nint dfs2(int &k, const string str);\nint get_int(int &k, const string str);\n\n// stage k > 1\nint dfs(int&k, const string str) {\n\tvector<int> val;\n\tint ans = 0;\n\twhile (k < str.length()) {\n\t\tif (str[k] == '[') {\n\t\t\tif (str[k + 1] >= '0' && str[k + 1] <= '9') {\n\t\t\t\tint x = dfs2(k, str);\n\t\t\t\tval.push_back(x);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tk++;\n\t\t\t\tint x = dfs(k, str);\n\t\t\t\tval.push_back(x);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tif (str[k] == ']') {\n\t\t\tbreak;\n\t\t}\n\t}\n\tsort(val.begin(), val.end());\n\tfor (int i = 0; i <= val.size() / 2;i++) {\n\t\tans += val[i];\n\t}\n\treturn ans;\n}\n// stage 1\nint dfs2(int&k, const string str) {\n\tvector<int> val;\n\tint ret = 0;\n\twhile (k < str.length()) {\n\t\tif (str[k] == '[') {\n\t\t\tk++;\n\t\t\tval.push_back(get_int(k, str));\n\t\t}\n\t\telse if (str[k] == ']'){\n\t\t\tsort(val.begin(), val.end());\n\t\t\tfor (int i = 0; i <= val.size() / 2;i++) {\n\t\t\t\tret += (val[i] + 1) / 2;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ret;\n}\n\nint get_int(int &k, const string str) {\n\tint ret = 0;\n\twhile (k < str.length()) {\n\t\tif (str[k] >= '0' && str[k] <= '9') {\n\t\t\tret = ret * 10 + (str[k] - '0');\n\t\t\tk++;\n\t\t}\n\t\telse if (str[k] == ']') {\n\t\t\tk++;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main() {\n\tcin.tie(0); ios::sync_with_stdio(false);\n\tint n; cin >> n;\n\tfor (int i = 0; i < n;i++) {\n\t\tstring str; cin >> str;\n\t\tint k= 0;\n\t\tcout << dfs(k, str) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\nconst double eps = 1e-10;\nconst int MOD = 1000000007;\nconst int INF = 1000000000;\nconst ll LINF = 1ll<<50;\n\ntemplate<typename T>\nvoid printv(const vector<T>& s) {\n  for(int i=0;i<(int)(s.size());++i) {\n    cout << s[i];\n    if(i == (int)(s.size())-1) cout << endl;\n    else cout << \" \";\n  }\n}\n\nvector<string> parse(string s) {\n  // cout << s << endl;\n  vector<string> res;\n  int sz = s.size();\n  if('0' <= s[1] && s[1] <= '9') {\n    res.push_back(s.substr(1, sz - 2));\n  } else {\n    int prev = 1;\n    int depth = 0;\n    for(int i=1;i<sz-1;++i) {\n      // cout << i << endl;\n      if(s[i] == '[') depth++;\n      else if(depth == 1 && s[i] == ']') {\n        res.push_back(s.substr(prev, i - prev + 1));\n        prev = i+1;\n        depth = 0;\n      } else if(s[i] == ']') {\n        depth--;\n      }\n    }\n  }\n  // printv(res);\n  return res;\n}\n\nint solve(string s) {\n  vector<string> v = parse(s);\n  if('0' <= v[0][0] && v[0][0] <= '9') {\n    return atoi(v[0].c_str())/2+1;\n  } else {\n    int sz = v.size();\n    vector<int> need(sz);\n    for(int i=0;i<sz;++i) {\n      need[i] = solve(v[i]);\n    }\n    sort(need.begin(), need.end());\n    int res = 0;\n    for(int i=0;i<sz/2+1;++i) {\n      res += need[i];\n    }\n    return res;\n  }\n}\n\nint main() {\n    cin.tie(0);\n    cout << fixed << setprecision(10);\n\n    int n; cin >> n;\n    for(int i=0;i<n;++i) {\n      string s; cin >> s;\n      cout << solve(s) << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cassert>\nusing namespace std;\nchar str[99999];\nint parse(int i){\n\tif('0'<=str[i]&&str[i]<='9')return strtol(str+i,NULL,10)/2+1;\n\tassert(str[i]=='[');\n\tvector<int>v;\n\tint j=i,c=0;\n\tfor(;;j++){\n\t\tif(str[j]=='[')if(++c==1)v.push_back(parse(j+1));\n\t\tif(str[j]==']')if(--c==-1)break;\n\t}\n\tsort(v.begin(),v.end());\n\tfor(c=j=0;j<=v.size()/2;j++)c+=v[j];\n\treturn c;\n}\nmain(){\n\tint T;\n\tfor(scanf(\"%d\",&T);T--;printf(\"%d\\n\",parse(1)))scanf(\"%s\",str);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <vector>\n\nusing namespace std;\n\nconst char *p;\n\nint rec() {\n  int res = 0;\n  vector<int> v;\n\n  ++p;\n  if(*p == '[') {\n    while(*p == '[') v.push_back(rec());\n    sort(v.begin(), v.end());\n    for(int i = 0; i < v.size()/2+1; i++) res += v[i];\n  } else {\n    char *e;\n    res = strtol(p, &e, 10) / 2 + 1;\n    p = e;\n  }\n\n  ++p;\n  return res;\n}\n\nint main() {\n  int n;\n  char str[1000];\n  \n  cin >> n;\n  for(int i = 0; i < n; i++) {\n    cin >> str;\n    p = &str;\n    cout << rec() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <string>\n#include <vector>\n#define pb push_back\n\nusing namespace std;\n\nstring s;\nint ima;\n\nint sol(){\n  ima++;\n  if(s[ima]!='['&&s[ima]!=']'){\n    int tmp;\n    tmp=s[ima]-'0';ima++;\n    while(s[ima]!='['&&s[ima]!=']'){\n      tmp=tmp*10+s[ima++]-'0';\n    }\n    ima++;\n    return tmp/2+1;\n  }\n\n  vector<int> a;\n  while(s[ima]!=']'){\n    a.pb(sol());\n  }\n  sort(a.begin(),a.end());\n  int res=0;\n  for(int i=0;i<a.size()/2+1;i++) res+=a[i];\n  ima++;\n  return res;\n}\n\nint main(){\n  int n;\n  int i,j,k;\n  int tmp;\n\n  cin>>n;\n  while(n--){\n    cin>>s;\n    ima=0;\n    cout<<sol()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define int long long\n#define range(i,x,y) i=(x);i<(y);i++\n#define all(x) begin(x),end(x)\n#define lim(x,r,l) (r<=x&&x<l)\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\n\nsigned main(){\n  int n; cin >> n;\n  for(int range(i,0,n)){\n    string l; cin >> l;\n    deque<vector<int>> s;\n    s.push_back(vector<int>());\n    for(int range(k,0,l.size())){\n      int res = 0;\n      vector<int> ls;\n        //cout << \"@\" << l[k] << endl;\n        //cout << \"l\"  << s.size() << endl;\n      switch(l[k]){\n        case '[':\n          s.push_back(vector<int>());\n          break;\n        case ']':\n          res = 0;\n          ls = s.back();\n          s.pop_back();\n          sort(all(ls));\n          for(int range(u,0,(ls.size()+1)/2)){\n            res += ls[u];\n          }\n          s.back().push_back(res);\n          //cout << \"<- \" << res << endl;\n          break;\n        default:\n          res = l[k] - '0';\n          k++;\n          while(k < l.size() && isdigit(l[k])){\n            res = res * 10 + (l[k] - '0');\n            k++;\n          }\n          res = (res + 1) / 2;\n          k--;\n          //cout << \"d \" << res << endl;\n          s.back().push_back(res);\n      }\n    }\n    cout << s[0][0] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nテ「ツ??\n#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)\n#define ALL(x) (x).begin(),(x).end()\nテ「ツ??\nusing namespace std;\nテ「ツ??\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\nテ「ツ??\nusing ll = long long;\nusing ld = long double;\nテ「ツ??\nconst int INF = 1e9;\nconst ld eps = 1e-9, pi = acos(-1.0);\nテ「ツ??\nstring s;\nint p;\nテ「ツ??\nint number() {\n  int res = 0;\n  while (p < (int)s.size() && isdigit(s[p])) {\n    res = res * 10 + (int)(s[p] - '0');\n    ++p;\n  }\n  return (res + 1) / 2;\n}\nテ「ツ??\nint expr() {\n  ++p;\n  int res = 0;\n  if (isdigit(s[p])) res = number();\n  else {\n    vector<int> v;\n    while (s[p] != ']') {\n      v.push_back(expr());\n    }\n    sort(ALL(v));\n    res = accumulate(begin(v), begin(v) + ((int)v.size() + 1) / 2, 0);\n  }\n  ++p;\n  return res;\n}\nテ「ツ??\nint main() {\n  int Q;\n  cin >> Q;\n  while (Q--) {\n    cin >> s;\n    p = 0;\n    cout << expr() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n//#define int long long\n\nusing namespace std;\nusing LL = long long;\nusing P = pair<int, int>;\n\n#define FOR(i, a, n) for(int i = (int)(a); i < (int)(n); ++i)\n#define REP(i, n) FOR(i, 0, n)\n\n#define pb(a) push_back(a)\n#define all(x) (x).begin(),(x).end()\n\nconst int INF = (int)1e9;\nconst LL INFL = (LL)1e15;\nconst int MOD = 1e9 + 7;\n\nint dy[]={0, 0, 1, -1, 0};\nint dx[]={1, -1, 0, 0, 0};\n\ntypedef string::const_iterator State;\nclass ParseError {};\n\nint number(State &begin){\n    int ret = 0;\n    while(isdigit(*begin)){\n        ret *= 10;\n        ret += *begin - '0';\n        begin++;\n    }\n    return ret;\n}\n\nint calc(State &begin){\n    if(*begin != '['){\n        cerr << \"error!\" << endl;\n        return -1;\n    }\n    if(*(++begin) != '[') return (number(begin)/2 + 1);\n    vector<int> a;\n    while(*begin == '['){\n        a.pb(calc(begin));\n        begin++;\n    }\n    sort(all(a));\n    int ans = 0;\n    REP(i, a.size()/2+1) ans += a[i];\n    return ans;\n}\n\nsigned main(){\n    int n;\n    cin >> n;\n    REP(i, n){\n        string s;\n        cin >> s;\n\n        State begin = s.begin();\n        int ans = calc(begin);\n        cout << ans << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <cstdlib>\n\nusing namespace std;\n\n#define DEBUG 0\n\nint parseInt2(int *now,string data){\n\tint nextPosition = data.find(\"]\",*now);\n\n\tint returnNum = atoi(data.substr(*now,nextPosition-*now).c_str());\n\tif(DEBUG)cout<<\"parseInt\"<< atoi(data.substr(*now,nextPosition-*now).c_str())<<endl;\n\tif(DEBUG)cout<<\"now=\"<<*now<<endl;\n\tif(DEBUG)cout<<\"nextPosition=\"<<nextPosition<<endl;\n\t*now = nextPosition+1;\n\treturn returnNum;\n}\n\n\nint main(){\n\n\tint n;\n\tcin>>n;\n\tint ans=0;\n\n\tfor(int i=0;i<n;i++){\n\n\t\tstring data;\n\n\t\tcin>>data;\n\n\t\tstring nextData;\n\t\tnextData=\"\";\n\t\tans=0;\n\t\tint first=0;\n\n\t\twhile(1){\n\t\t\tif(data.find_last_of(\"[\")==0 && data.find_first_of(\"]\")==data.size()-1){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j=0;j<data.size();j++){\n\t\t\t\tif(data.at(j)==']'){\n\t\t\t\t\tnextData+=\"]\";\n\t\t\t\t}else if(data.at(j)=='['&& data.at(j+1)=='['){\n\t\t\t\t\tnextData+=\"[\";\n\t\t\t\t}else{\n\t\t\t\t\tj++;\n\t\t\t\t\tpriority_queue<int, vector<int> , greater<int> > q;\n\t\t\t\t\twhile(1){\n\t\t\t\t\t\tq.push(parseInt2(&j,data));\n\t\t\t\t\t\tif(data.at(j)==']'){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tint pushNum=0;\n\t\t\t\t\tint nowSize = q.size();\n\t\t\t\t\tfor(int k=0;k<nowSize/2+1;k++){\n\t\t\t\t\t\tif(first==0){\n\t\t\t\t\t\t\tif(DEBUG)cout<<\"q.top()/2+1=\"<<q.top()/2+1<<endl;\n\t\t\t\t\t\t\tpushNum += q.top()/2+1;\n\t\t\t\t\t\t\tans += q.top()/2+1;\n\t\t\t\t\t\t\tq.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(DEBUG)cout<<\"q.top()=\"<<q.top()<<endl;\n\t\t\t\t\t\t\tpushNum += q.top();\n\t\t\t\t\t\t\tans += q.top();\n\t\t\t\t\t\t\tq.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(DEBUG)cout<<\"pushNum=\"<<pushNum<<endl;\n\t\t\t\t\tnextData+=to_string(pushNum);\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(DEBUG)\tcout<<\"nextData =\" <<nextData<<endl;\n\t\t\tdata = nextData;\n\t\t\tnextData=\"\";\n\t\t\tfirst++;\n\t\t}\n\t\tif(DEBUG)cout<<\"ans0=\"<<data.substr(1,data.size()-2)<<endl;\n\t\tcout<<data.substr(1,data.size()-2)<<endl;\n\t\tif(DEBUG)cout<<endl;\n\t}\n\n\n\treturn 0;\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint N, p;\nstring s;\nint f() {\n\tif (s[p]=='[') {\n\t\tp++;\n\t\tvector<int> t;\n\t\twhile (s[p]!=']') t.push_back(f());\n\t\tp++;\n\t\tsort(t.rbegin(), t.rend());\n\t\treturn accumulate(t.begin()+t.size()/2, t.end(), 0);\n\t}\n\tint t = 0;\n\twhile (isdigit(s[p])) {\n\t\tt = t*10+(s[p++]-'0');\n\t}\n\treturn (t+1)/2;\n}\nint main() {\n\tcin >> N;\n\twhile (N--) {\n\t\tcin >> s;\n\t\tp = 0;\n\t\tcout << f() << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define all(x) (x).begin(),(x).end()\nconst int mod=1000000007,MAX=200003,INF=1<<30;\n\nint expr(string& s,int& i);\nint number(string& s,int& i);\n\nint expr(string& s,int& i){\n    vector<int> T;\n    \n    for(;;){\n        if(s[i]=='['){\n            i++;\n            T.push_back(expr(s,i));\n        }else if(s[i]==']'){\n            i++;\n            break;\n        }else if(i>=s.size()){\n            break;\n        }else{\n            T.push_back(number(s,i));\n        }\n    }\n    \n    sort(all(T));\n    \n    int ret=0;\n    \n    for(int j=0;j<(T.size()+1)/2;j++) ret+=T[j];\n    \n    return ret;\n}\n\nint number(string& s,int& i){\n    int ret=0;\n    \n    while(isdigit(s[i])){\n        ret*=10;\n        ret+=int(s[i]-'0');\n        i++;\n    }\n    \n    return (ret+1)/2;\n}\n\nint main(){\n    \n    std::ifstream in(\"text.txt\");\n    std::cin.rdbuf(in.rdbuf());\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    int Q;cin>>Q;\n    while(Q--){\n        string S;cin>>S;\n        int i=0;\n        \n        cout<<expr(S,i)<<endl;\n    }\n}\n\n\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef string::const_iterator state;\n\nstring s;\n\nint number(state &b){\n    int ret=0;\n    while(isdigit(*b)){\n        ret=ret*10+*b-'0';\n        b++;\n    }\n    return ret;\n}\n\nint dfs(state &b){\n    vector<int>v;\n    b++;\n    if(*b=='['){\n        while(*b=='['){\n            v.push_back(dfs(b));\n            b++;\n        }\n    }\n    else v.push_back((number(b)+1)/2);\n    sort(v.begin(),v.end());\n    int ret=0;\n    for(int i=0;i<(v.size()+1)/2;i++)ret+=v[i];\n    return ret;\n}\n\nvoid solve(){\n    cin>>s;\n    state b=s.begin();\n    cout<<dfs(b)<<endl;\n}\n\nint main(){\n\n\n    int n;\n    cin>>n;\n    while(n--)solve();\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define all(c) (c).begin(),(c).end()\n#define rrep(i,n) for(int i=(int)(n)-1;i>=0;i--)\n#define REP(i,m,n) for(int i=(int)(m);i<(int)(n);i++)\n#define rep(i,n) REP(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)\n#define pb(a) push_back(a)\n#define pr(a) cout<<(a)<<endl\n#define PR(a,b) cout<<(a)<<\" \"<<(b)<<endl\n#define R cin>>\n#define F first\n#define S second\n#define ll long long\nbool check(int n,int m,int x,int y){return x>=0&&x<n&&y>=0&&y<m;}\nconst ll MAX=1000000007,MAXL=1LL<<60,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};\ntypedef pair<int,int> P;\n\nstring s;\nint p;\n\nint dfs() {\n  int ans=0;\n  vector<int> v;\n  while(s[p]=='[') {\n    p++;\n    int x=dfs();\n    v.pb(x);\n  }\n  if(s[p]==']') p++;\n  if(v.size()) {\n    sort(all(v));\n    int ans=0;\n    rep(i,v.size()/2+1) ans+=v[i];\n    return ans;\n  }\n  while(isdigit(s[p])) {\n    ans*=10;\n    ans+=s[p++]-'0';\n  }\n  p++;\n  return ans/2+1;\n}\n\nint main() {\n  int T;\n  R T;\n  while(T--) {\n    R s;\n    p=0;\n    pr(dfs());\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string>\n#include<set>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<functional>\n#include<map>\n#include<unordered_set>\nusing namespace std;\n/*int p = 998244353;*/\nint p = 1000000007;\n#define int long long\n#define vel vector<long long>\n#define vvel vector<vel>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define sor(v) sort(v.begin(),v.end())\n#define mmax(a,b) a=max(a,b)\n#define mmin(a,b) a=min(a,b)\n#define mkp make_pair\n#define pin pair<int,int>\n#define qin pair<pin,int>\n#define V vector\n#define Endl endl\n#define veb vector<bool>\n#define sq(a) (a)*(a)\n#define rev(s) reverse(s.begin(),s.end())\n#define end_pr(s) cout << s <<endl;return 0\n#define itn int\nint RE() {\n\tvel v(3, 2);\n\treturn v.at(4);\n}\nint ru(int a, int r) {\n\tif (r == 0) { return 1; }\n\tint ans = ru(a, r / 2);\n\tans *= ans; ans %= p;\n\tif (r % 2 == 1) { ans *= a; }\n\treturn ans % p;\n}\nint inv(int a) {\n\treturn ru(a,p - 2);\n}\nvel dis(int mid1, vvel &way) {\n\tint n = way.size();\n\tvel dist(n, -1); dist[mid1] = 0;\n\tqueue<int> q;\n\tq.push(mid1);\n\twhile (!q.empty()) {\n\t\tint st = q.front(); q.pop();\n\t\trep(i, way[st].size()) {\n\t\t\tint to = way[st][i];\n\t\t\tif (dist[to] == -1) {\n\t\t\t\tdist[to] = dist[st] + 1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn dist;\n}\npin most_far(int now, int n, vvel &way) {\n\tvel dist1 = dis(now, way);\n\tpin ans = mkp(-1, 0);\n\trep(i, n) {\n\t\tif (dist1[i] > ans.first) { ans = mkp(dist1[i], i); }\n\t}\n\treturn ans;\n}\n\ntemplate<typename T>\nV<T> uni(V<T> &v) {\n\tif (v.size() == 0) { return v; }\n\tsor(v);\n\tV<T> ans(1, v[0]);\n\tfor (int i = 1; i < v.size(); i++) {\n\t\tif (v[i] != v[i - 1]) { ans.push_back(v[i]); }\n\t}\n\tv = ans;\n\treturn v;\n}\nint s_gcd(int a, int b) {\n\tif (b == 0) { return a; }\n\treturn s_gcd(b, a%b);\n}\nint gcd(int a, int b) {\n\ta = abs(a);\n\tb = abs(b);\n\tif (a < b) { swap(a, b); }\n\treturn s_gcd(a, b);\n}\nvel dx{ 1,1,0,0,-1,-1 };\nvel dy{ 0,1,1,-1,-1,0 };\nint solve(int i, vvel &chi, vel &p) {\n\tif (chi[i].size() == 0) {\n\t\treturn (p[i]/2)+1;\n\t}\n\tvel list;\n\tfor (auto x : chi[i]) { list.push_back(solve(x,chi,p)); }\n\tsor(list);\n\tint n = list.size(); n = (n + 1) / 2;\n\tint ans = 0;\n\trep(i, n) { ans += list[i]; }\n\treturn ans;\n}\nsigned main() {\n\tint xx; cin >> xx;\n\trep(index, xx) {\n\t\tstring s; cin >> s;\n\t\tint n = s.size();\n\t\tvel par(10000, -1);\n\t\tvel p(10000,0);\n\t\tint now_pot = 0;\n\t\tint new_leaf = 1;\n\t\tint now_num = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tchar c = s[i];\n\t\t\tif (c == ']') {\n\t\t\t\tp[now_pot] = now_num; now_num = 0;\n\t\t\t\tnow_pot = par[now_pot];\n\t\t\t}\n\t\t\telse if (c == '[') {\n\t\t\t\tpar[new_leaf] = now_pot;\n\t\t\t\tnow_pot = new_leaf;\n\t\t\t\tnew_leaf++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint num = c - '0';\n\t\t\t\tnow_num *= 10; now_num += num;\n\t\t\t}\n\t\t}\n\t\tvvel chi(10000);\n\t\trep(i, 10000) {\n\t\t\tif (par[i] != -1) {\n\t\t\t\tchi[par[i]].push_back(i);\n\t\t\t}\n\t\t}\n\t\tcout << solve(0, chi, p) << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <functional>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <vector>\n#include <list>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <bitset>\n#include <climits>\n\n#define all(c) (c).begin(), (c).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define pb(e) push_back(e)\n#define mp(a, b) make_pair(a, b)\n#define fr first\n#define sc second\n\nconst int INF=100000000;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nusing namespace std;\ntypedef pair<int ,int > P;\ntypedef long long ll;\n\nstring str;\n\nint calc(vector<int> vec) {\n    // cout<<\"size = \"<<vec.size()<<endl;\n    // rep(i,vec.size()) cout<<vec[i]<<\" \";\n    // cout<<endl;\n    int res=0;\n    sort(all(vec));\n    rep(i,(vec.size()+1)/2) res+=(vec[i]);\n    return res;\n}\n\nint pos;\nint dfs() {\n    // cout<<\"pos = \"<<pos<<endl;\n    pos++;\n    vector<int> vec;\n    if(str[pos]!='[' && str[pos]!=']') {\n        string t;\n        while(str[pos]!=']') t+=str[pos++];\n        pos++;\n        return atoi(t.c_str())/2+1;\n    }\n    while(str[pos]!=']') vec.pb(dfs());\n\n    pos++;\n    return calc(vec);\n}\n\nvoid solve() {\n    pos=0;\n    cout<<dfs()<<endl;\n}\n\nint main() {\n    int n;\n    cin>>n;\n    while(n-->0) {\n        cin>>str;\n        solve();\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cctype>\n\nusing namespace std;\n\nstring str;\nint p;\n\nbool isopen(int p){\n    return str[p] == '[';\n}\n\nbool isclose(int p){\n    return str[p] == ']';\n}\n\nint getdig(){\n    return str[p++] - '0';\n}\n\nint getnum(){\n    //cout << \"num\" << endl;\n    int n = 0; \n    while(isdigit(str[p])){\n        n*=10;\n        n+=getdig();\n    }\n    return n;\n}\n\nint getfirst(){\n    //cout << \"fir\" << endl;\n    vector<int> fir;\n    p++; // jump [\n    while(isopen(p)){\n        p++; // jump [\n        fir.push_back(getnum());\n        p++; // jump ]\n    }\n    p++; // jump ]\n    int ans = 0;\n    sort(fir.begin() , fir.end());\n    for(int i=0; i<fir.size()/2+1; i++){\n        ans += fir[i]/2+1;\n    }\n    return ans;\n}\n\nint getsecond(){\n    //cout << \"sec\" << endl;\n    if(isopen(p) && isopen(p+1) && isopen(p+2)){\n        // some firsts\n        p++; // jump [\n        vector<int> sec;\n        while(isopen(p)){\n            sec.push_back(getsecond());\n        }\n        p++; // jump ]\n        int n = 0;\n        sort(sec.begin() , sec.end());\n        for(int i=0; i<sec.size()/2+1; i++){\n            n+=sec[i];\n        }\n        return n;\n    } else {\n        return getfirst();\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    while(n--){\n        p = 0;\n        cin >> str;\n        //cout << str << endl;\n        cout << getsecond() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double pi  = 2 * acos(0.0);\nconst double eps = 1e-8;\n\n#define REP(i,a,b) for(int i=(a); i<(b);++i)\n#define rep(i,n) REP(i,0,n)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\ntypedef int Cost;\nstruct Edge {\n  int src, dst; Cost cost;\n  Edge(int s, int d, Cost c) : src(s), dst(d), cost(c) {}\n};\ntypedef vector<Edge>  Edges;\ntypedef vector<Edges> Graph;\ntypedef vector<Cost>  Array;\ntypedef vector<Array> Matrix;\n\nint dx[8] = {0, 1, 0, -1, 1, -1, 1, -1};\nint dy[8] = {1, 0, -1, 0, 1, -1, -1, 1};\n\nint integer(const string &e, int &pos);\n\nint expr(const string &e, int &pos) {\n  if (isdigit(e[pos])) return integer(e, pos);\n\n  vector<int> votes;\n  while (e[pos] == '[') {\n    int v = expr(e, ++pos);\n    votes.push_back(v);\n    assert(e[pos] == ']');\n    pos++;\n  }\n\n  int ret = 0;\n  sort(votes.begin(), votes.end());\n  int ub = ceil(votes.size()/2.0);\n  for (int i = 0; i < ub; i++) {\n    ret += votes[i];\n  }\n\n  return ret;\n}\n\nint integer(const string &e, int &pos) {\n  int ret = 0;\n  while (e[pos] != ']') {\n    ret *= 10;\n    ret += (e[pos] - '0');\n    pos++;\n  }\n  return (int)ceil(ret/2.0);\n}\n\nint main(void) {\n  ios_base::sync_with_stdio(false); cin.tie(0);\n  int n;\n  cin >> n;\n  while (n--) {\n    string e; cin >> e;\n    int pos = 0;\n    cout << expr(e, pos) << endl;\n  }\n  return 0; \n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<vb> vbb;\ntypedef pair<int, int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n\n#define loop(i,a,b) for(int i=(a);i<ull(b);++i)\n#define rep(i,n) loop(i,0,n)\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst double inf = (int)1e8;\n\nstring IntToString(int number) {\n    stringstream ss;\n    ss << number;\n    return ss.str();\n}\n\nint main(){\n    int n;\n    cin >> n;\n    for(int p=0; p < n; p++){\n        string s;\n        cin >> s;\n        string t;\n        vector<int> v;\n        for(int i=0; i< s.size(); i++){\n            if(s[i] == '[' && s[i+1] == '[') t += \"[\";\n            if('0' <= s[i] && s[i] <= '9'){\n                if('0' <= s[i] && s[i] <= '9'){\n                    string num;\n                    while('0' <= s[i] && s[i] <= '9'){num.push_back(s[i]); i++;}\n                    v.push_back(stoi(num));\n                }\n            }\n            if(s[i] == ']' && s[i+1] == ']'){\n                sort(v.begin(), v.end());\n                int sum = 0;\n                for(int j=0; j< v.size()/2+1; j++) sum += v[j]/2+1;\n                if(v.size() != 0) t += IntToString(sum);\n                t += + \"]\";\n                v.clear();\n            }\n        }\n        v.clear();\n        while(true){\n            string q;\n            for(int i=0; i< t.size(); i++){\n                if(t[i] == '[' && t[i+1] == '[') q += \"[\";\n                if('0' <= t[i] && t[i] <= '9'){\n                    string num;\n                    while('0' <= t[i] && t[i] <= '9'){num.push_back(t[i]); i++;}\n                    v.push_back(stoi(num));\n                }\n                if(t[i] == ']' && t[i+1] == ']'){\n                    sort(v.begin(), v.end());\n                    int sum = 0;\n                    for(int j=0; j< v.size()/2+1; j++) sum += v[j];\n                    if(v.size() != 0) q += IntToString(sum);\n                    q += + \"]\";\n                    v.clear();\n                }\n            }\n            if(q.size() == 0){cout << t.substr(1, t.size()-2) << endl; break;}\n            t = q;\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <queue>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <vector>\n#include <complex>\n#include <utility>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <bitset>\n#include <ctime>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <cassert>\n#include <cstddef>\n#include <iomanip>\n#include <numeric>\n#include <tuple>\n#include <sstream>\n#include <fstream>\n#include <functional>\n#include <chrono>\n\nusing namespace std;\n#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++)\n#define FOR(i, a, b) for (int (i) = (a); (i) < (b); (i)++)\n#define RREP(i, a) for(int (i) = (a) - 1; (i) >= 0; (i)--)\n#define FORR(i, a, b) for(int (i) = (a) - 1; (i) >= (b); (i)--)\n#define DEBUG(C) cerr << #C << \" = \" << C << endl;\nusing LL = long long;\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing VD = vector<double>;\nusing VVD = vector<VD>;\nusing PII = pair<int, int>;\nusing PDD = pair<double, double>;\nusing PLL = pair<LL, LL>;\nusing VPII = vector<PII>;\ntemplate<typename T> using VT = vector<T>;\n#define ALL(a) begin((a)), end((a))\n#define RALL(a) rbegin((a)), rend((a))\n#define SORT(a) sort(ALL((a)))\n#define RSORT(a) sort(RALL((a)))\n#define REVERSE(a) reverse(ALL((a)))\n#define MP make_pair\n#define FORE(a, b) for (auto &&a : (b))\n#define FIND(s, e) ((s).find(e) != (s).end())\n#define EB emplace_back\ntemplate<typename T> inline bool chmax(T &a, T b){if (a < b){a = b;return true;}return false;}\ntemplate<typename T> inline bool chmin(T &a, T b){if (a > b){a = b;return true;}return false;}\n\nconst int INF = 1e9;\nconst int MOD = INF + 7;\nconst LL LLINF = 1e18;\nconst long double EPS = 1e-9;\n\ninline int my_stoi(const string &S) {\n    int res = 0;\n    for (auto it = S.begin(); it != S.end() && isdigit(*it); ++it) {\n        res = res * 10 + (*it) - '0';\n    }\n    return res;\n}\n\nint dfs(string S) {\n    vector<int> vec;\n    S = S.substr(1, S.length() - 2);\n    if (isdigit(S[0])) {\n        return my_stoi(S) / 2 + 1;\n    }\n    const int L = S.length();\n    int rank = 0;\n    int left = 0;\n    for (int i = 0; i < L; ++i) {\n        if (S[i] == '[') ++rank;\n        if (S[i] == ']') --rank;\n        if (rank == 0) {\n            vec.emplace_back(dfs(S.substr(left, i - left + 1)));\n            left = i + 1;\n        }\n    }\n    sort(begin(vec), end(vec));\n    // for (int i = 0; i < vec.size(); ++i) {\n    //     cerr << vec[i] << \" \";\n    // }cerr << endl;\n    return accumulate(vec.begin(), vec.begin() + vec.size() / 2 + 1, 0);\n}\n\nvoid solve() {\n    string S;\n    cin >> S;\n    cout << dfs(S) << endl;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    while (n--) {\n        solve();\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstring S;\nint v[100000];\nlong long vote[100000];\nvector<vector<int>> G;\nint nodeCnt;\nint idx;\nint makeTree(int crt) {\n    int num = 0;\n    while (idx < S.length() - 1) {\n        if (S[idx] != '[' && S[idx] != ']') {\n            num *= 10;\n            num += S[idx] - '0';\n            vote[crt] = num;\n            idx++;\n        } else if (S[idx] == '[') {\n            nodeCnt++;\n            G[crt].push_back(nodeCnt);\n            idx++;\n            makeTree(nodeCnt);            \n        } else {\n            idx++;\n            return 0;\n        }\n    }\n    return 0;\n}\n\nlong long calc(int crt) {\n    if (vote[crt] > 0) return vote[crt] = vote[crt]/2+1;\n    \n    long long ret = 0;\n    vector<long long> childs;\n    for (int i = 0; i < G[crt].size(); i++) {\n        childs.push_back(calc(G[crt][i]));\n    }\n    sort(childs.begin(), childs.end());\n    for (int i = 0; i <= childs.size()/2; i++) {\n        ret += childs[i];\n    }\n    return vote[crt] = ret;\n}\n\nint solve(void) {\n    cin >> S;\n    G = vector<vector<int>> (100000);\n    nodeCnt = 0;\n    idx = 1;\n    memset(vote, 0, sizeof(vote));\n    \n    makeTree(0);\n    /*for (int i = 0; i <= nodeCnt; i++) {\n        for (int j = 0; j < G[i].size(); j++) {\n            cout << G[i][j] << \", \";\n        }\n        cout << endl;\n    }*/\n    \n    long long ret = calc(0);\n    return ret;\n}\n\nint main(void){\n    int N; cin >> N;\n    vector<int> ans;\n    for (int i = 0; i < N; i++) {\n        ans.push_back(solve());\n    }\n    for (int i = 0; i < ans.size(); i++) {\n        cout << ans[i] << endl;\n    }\n    \n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define USE_CPP11\n// #define USE_PRINTF\n\n#include <iostream>\n#include <iomanip>\n#include <map>\n#include <set>\n#include <utility>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <list>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <numeric>\n#include <complex>\n#include <memory>\n#include <sstream>\n\n#ifdef USE_CPP11\n#include <unordered_map>\n#include <unordered_set>\n#include <functional>\n#endif\n\n#define PRINT(obj) cout << obj << endl\n#define REP(i, n) for(int (i) = 0; (i) < (n); i++)\n#define SPACE \" \"\n\ntypedef long long ll;\n\nconst int INF = 1e9 + 10;\n\nusing namespace std;\n\nnamespace Scanner {\n#ifdef USE_PRINTF\n  int    nextInt()    { int    d; scanf(\"%d\" , &d); return d; }\n  float  nextFloat()  { float  f; scanf(\"%f\" , &f); return f; }\n  double nextDouble() { double f; scanf(\"%lf\", &f); return f; }  \n  string nextString() { string s; scanf(\"%s\" , &s); return s; }\n  ll     nextll()     { ll     l; scanf(\"%ll\", &l); return l; }\n#else\n  int    nextInt()    { int    d; cin >> d; return d; }\n  float  nextFloat()  { float  f; cin >> f; return f; }\n  double nextDouble() { double f; cin >> f; return f; }  \n  string nextString() { string s; cin >> s; return s; }\n  ll     nextll()     { ll     l; cin >> l; return l; }\n#endif\n\n  string getLine() { \n    string input;\n    getline(cin, input);\n    return input;\n  }\n};\n\nnamespace myLibrary {\n  vector<string> split(const string& str, char delim) {\n    vector<string> ret;\n    size_t current = 0, found;\n    while ((found = str.find_first_of(delim, current)) != string::npos) {\n      ret.push_back(string(str, current, found - current));\n      current = found + 1;\n    }\n    ret.push_back(string(str, current, str.size() - current));\n    return ret;\n  }\n  \n#ifdef USE_CPP11\n  ///\n  /// higher-order functional\n  /// This is something like map in haskell, python, etc.\n  /// Sample usage:\n  ///   vector<int> a = {1, 2, 3, 4, 5};\n  ///   vector<int> b = myLibrary::_Map<int, int>(a, [](int n){\n  ///     return n * n;\n  ///   });\n  /// Result:\n  ///   b = 1, 4, 9, 16, 25\n  ///\n  template<typename T_IN, typename T_OUT, class Functor>\n  vector<T_OUT> _Map(vector<T_IN> src, Functor func) {\n    vector<T_OUT> ret;\n    for (int i = 0; i < src.size(); i++) {\n      ret.push_back(func(src[i]));\n    }\n    return ret;\n  }\n#endif\n\n};\n\n/// BEGIN //////////////////////////////////////////////////////////\n\nstruct Tree {\npublic:\n  int value;\n  Tree* parent;\n  vector<Tree*> child;\n  Tree(): parent(nullptr), value(-INF) { }\n};\n\nvoid maketree(Tree* tree, int index, const string str) {\n  if (index >= str.size()) {\n    return;\n  }\n  if (str[index] == '[') {\n    Tree* newNode = new Tree();\n    newNode->parent = tree;\n    tree->child.push_back(newNode);\n    maketree(newNode, index + 1, str);\n  } else if (str[index] >= '0' && str[index] <= '9') {\n    if (tree->value == -INF) {\n      tree->value = 0;\n    }\n    tree->value = tree->value * 10 + (str[index] - '0');\n    maketree(tree, index + 1, str);\n  } else if (str[index] == ']') {\n    maketree(tree->parent, index + 1, str);\n  }\n}\n\nvoid getValue(Tree* tree) {\n  if (tree->value > -INF) {\n    return;\n  }\n  int size = tree->child.size();\n  vector<int> vals(size);\n  REP(i, size) {\n    getValue(tree->child[i]);\n    vals[i] = tree->child[i]->value;\n  }\n  sort(vals.begin(), vals.end());\n  int val = 0;\n  REP(i, (size / 2) + 1) {\n    if (tree->child[i]->child.size() == 0) {\n      vals[i] = (vals[i] / 2) + 1;  \n    }\n    val += vals[i];\n  }\n  tree->value = val;\n}\n\nint main() {\n  int n = Scanner::nextInt();\n   \n  REP(i, n) {\n    Tree tree;   \n    string input = Scanner::nextString();\n    maketree(&tree, 0, input);\n    getValue(&tree);\n    PRINT(tree.value);  \n  }\n  return 0;\n}\n\n/// END   //////////////////////////////////////////////////////////"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<queue>\n\nusing namespace std;\n\nstring line;\n\ntypedef struct{\n  int ans;\n  int s;\n}orig;\n\n\n/*一つの選挙の最小人数を求める\n来るデータ~~~~~~]~~~~]~~~]\n頭の[は取ってある\n関数内で]を取ってかえす\n*/\norig rec(int s){\n  priority_queue<int,vector<int>,greater<int> > box;\n  int ans=0,i=0;\n  orig val;\n  while(s<line.size() && line.at(s)=='['){\n    s++;\n    val=rec(s);\n    box.push(val.ans);\n    s=val.s;\n  }\n\n  if(s<line.size() && line.at(s)==']'){\n    /*第一弾以外のとき*/\n    //cout<< box.size()<<\"size \";\n    for(i=0;i<=box.size()/2+1;i++){\n      ans+=box.top();\n      //      cout << box.top()<<\"top \";\n      box.pop();\n    }\n    s++;     \n  }\n  else {\n    /*[でも]でもない　つまり数字　つまり第一段 line = 122121][~~~ で来る\n     条件よりboxは今empty*/\n    int i=0;\n    while(line.at(s+i)!=']')i++;\n    ans=stoi(line.substr(s,i))/2+1;//iはat(i)で]の位置、at(i)はsubstrでi+1番目\n    //        cout<<ans<<\"&  \";\n    s+=i+1;\n  }\n  orig a;\n  a.ans=ans;a.s=s;\n  return a;\n  \n}\n\nint main(){\n  int n,i;\n  orig ans;\n  cin >>n;\n  for(i=0;i<n;i++){\n    //string line;\n    line=\"\";\n    cin >> line;//getline(cin,line);\n    ans=rec(1);\n    cout <<ans.ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-9;\nconst int inf=1e8;\nstring s;\nint a;\nbool h=false;\nint f(){\n\tvi in;\n\twhile(s[a]!=']'){\n\t\tif(s[a]=='['){\n\t\t\ta++;\n\t\t\tin.pb(f());\n\t\t\ta++;\n\t\t}else{\n\t\t\tint num=0;\n\t\t\twhile(s[a]!=']'){\n\t\t\t\tnum*=10;\n\t\t\t\tnum+=s[a]-'0';\n\t\t\t\ta++;\n\t\t\t}\n\t\t\th=true;\n\t\t\treturn num;\n\t\t}\n\t}\n\tsort(all(in));\n\tint sum=0;\n\trep(i,in.size()/2+1)sum+=(h?in[i]/2+1:in[i]);\n//\trep(i,in.size())cout<<\" \"<<in[i];cout<<endl;\n\th=false;\n\treturn sum;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>s;\n\t\ta=1;\n\t\tcout<<f()<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long int lint;\ntypedef unsigned long long int ulint;\n\n//#define DEBUG\n\n#ifdef DEBUG\n#\tdefine dump(i) cout << \"[*] \" #i \" : \" << i << endl;\n#\tdefine debug(i) i\n#else\n#\tdefine dump(i)\n#\tdefine debug(i)\n#endif\n#define rep(i, MAX) for (int i = 0; i < (MAX); ++i)\n\nint ss(const vector<int>& v) {\n\tdebug(for (int i : v) cout << i << \" \");\n\tdebug(cout << endl;);\n\tif (v[0] < 0) {\n\t\tbool open = true;\n\t\tvector<int> l;\n\t\tauto b = v.begin()+1;\n\t\tfor (auto i = v.begin() + 1; i != v.end(); ++i) {\n\t\t\tif (*i == v[0]) {\n\t\t\t\tif (open) {\n\t\t\t\t\tvector<int> vv(b, i);\n\t\t\t\t\tl.push_back(ss(vv));\n\t\t\t\t\topen = false;\n\t\t\t\t} else {\n\t\t\t\t\tb = i+1;\n\t\t\t\t\topen = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint kazu = (l.size()+1) / 2;\n\t\tsort(l.begin(), l.end());\n\t\treturn accumulate(l.begin(), l.begin() + kazu, 0);\n\t} else {\n\t\treturn (v[0] + 1) / 2;\n\t}\n}\n\ninline void slv() {\n\tstring s;\n\tcin >> s;\n\tvector<int> v;\n\tint n = 0;\n\tstring number = \"\";\n\tfor (char c : s) {\n\t\tif (c == '[') {\n\t\t\t--n;\n\t\t\tv.push_back(n);\n\t\t} else if (c == ']') {\n\t\t\tif (!number.empty()) v.push_back(std::stoi(number));\n\t\t\tv.push_back(n);\n\t\t\t++n;\n\t\t\tnumber = \"\";\n\t\t} else {\n\t\t\tnumber += c;\n\t\t}\n\t}\n\n\tcout << ss(v) << endl;\n}\n\ninline void solve() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tslv();\n\t}\n}\n\nint main() {\n\t//*\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tcout.tie(nullptr);\n\t// */\n#ifdef DEBUG\n\tconst auto start = chrono::high_resolution_clock::now();\n#endif\n\tsolve();\n#ifdef DEBUG\n\tconst auto stop = chrono::high_resolution_clock::now();\n\tcerr << \"[*] time: \" << chrono::duration_cast<chrono::milliseconds>(stop-start).count()\n\t\t<< \" [ms]\" << endl;\n#endif\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define DUMP(x) cerr << #x << \"=\" << x << endl\n#define DUMP2(x, y) cerr<<\"(\"<<#x<<\", \"<<#y<<\") = (\"<<x<<\", \"<<y<<\")\"<< endl\n#define BINARY(x) static_cast<bitset<16> >(x)\n\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n\n#define in_range(x, y, w, h) (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n#define ALL(a) (a).begin(),(a).end()\n\ntypedef long long ll;\nconst int INF   = 1e9;\nconst ll  INFLL = 1e18;\ntypedef pair<int, int> PII;\ntypedef vector<vector<int>> Graph;\nint dx[4]={0, -1, 1, 0}, dy[4]={-1, 0, 0, 1};\n\nstring S;\nint p;\n\nint dfs();\nint number();\n\nvoid print_pos()\n{\n    cerr << S << endl;\n    for (int i=0; i<=p-1; i++) cerr << \" \";\n    cerr << \"^\" << endl;\n}\n\nint ans = 0;\nint dfs(int level)\n{\n    vector<int> nums;\n    while (p < S.size()) {\n#ifdef DEBUG\n        DUMP2(p, level);\n        print_pos();\n#endif\n        if (S[p] == '[') {\n            p++; // skip '['\n            nums.push_back(dfs(level+1));\n        } else if (S[p] == ']') {\n#ifdef DEBUG\n            rep(i, nums.size()) {\n                cerr << '[' << nums[i] << ']';\n            }\n            cerr << endl;\n#endif\n            p++; // skip ']'\n            sort(nums.begin(), nums.end());\n            int res = 0;\n            for (int i=0; i<((int)nums.size()+1)/2; i++) res += nums[i];\n            if (level == 1) ans = res;\n#ifdef DEBUG\n            DUMP(res);\n#endif\n            return res;\n        } else if (isdigit(S[p])) {\n            int res = number();\n            p++;\n            return res;\n        }\n    }\n    return -1;\n}\n\nint number()\n{\n    int num = 0;\n    while (isdigit(S[p])) {\n        num *= 10;\n        num += (S[p] - '0');\n        p++;\n    }\n    return (num+1)/2;\n}\n\nint solve(string A)\n{\n    S = A;\n    p = 0;\n    ans = 0;\n#ifdef DEBUG\n    cerr << S << endl;\n#endif\n    dfs(0);\n    return ans;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n\n    int D; cin >> D;\n    rep(_, D) {\n        string A;\n        cin >> A;\n        cout << solve(A) << endl;\n    }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i,n) for(int i=0; i<(int)(n); ++i)\n\nusing namespace std;\n\nstring s;\ntypedef pair<int, int> Result;\nResult parse(int k) {\n    if(isdigit(s[k + 1])) {\n        k++;\n        int res = 0;\n        while(isdigit(s[k])) {\n            res = res * 10 + s[k++] - '0';\n        }\n        assert(s[k++] == ']');\n        return make_pair(k, res / 2 + 1);\n    }\n    vector<int> v;\n    k++;\n    while(true) {\n        if(s[k] == ']') break;\n        Result r = parse(k);\n        k = r.first;\n        v.push_back(r.second);\n    }\n    assert(s[k++] == ']');\n    sort(v.begin(), v.end());\n    int res = 0;\n    REP(i, v.size() / 2 + 1) {\n        res += v[i];\n    }\n    return make_pair(k, res);\n}\n\nint main(){\n    int T;\n    cin >> T;\n    while(T--) {\n        cin >> s;\n        Result r = parse(0);\n        //cout << r.first << endl;\n        assert(r.first == s.size());\n        cout << r.second << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cctype>\n\nusing namespace std;\n\nconst char *p;\nstring str;\n\nint parse() {\n  int num;\n  char *e;\n  p++;\n  \n  if(*p=='[') {\n    vector<int> v;\n    for(;;) { \n      if(*p == '[') {\n\tnum = parse();\n\tv.push_back(num);\n\tp++;\n      } else break;\n    }\n    p++;\n    sort(v.begin(), v.end());\n    \n    int sum = 0;\n    for(int i=0; i<v.size()/2+1; i++) sum+=v[i];\n    return sum;\n  }\n  \n  if(isdigit(*p)) {\n    num = strtol(p, &e, 10);\n    p = e;\n    return num/2+1;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cin.ignore();\n  \n  for(int i=0; i<n; i++) {\n    getline(cin, str);\n    p = str.c_str();\n    cout << parse() << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <list>\n\nusing namespace std;\n\n\n\nint min(char* s) {\n\tint n = 0;\n\tint sum = 0, tmpI = 0;\n\tbool flag = true;\n\tlist<int> intlist;\n\n\tfor(int i = 0; s[i] != '\\0'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tint count = 1, j;\n\t\t\tfor(j = 1; count != 0; j++) {\n\t\t\t\tif(s[j + i] == '[') {\n\t\t\t\t\tcount += 1;\n\t\t\t\t} else if(s[j + i] == ']') {\n\t\t\t\t\tcount -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t//cout << \"Weeeei\" << endl;\n\t\t\tchar* tmpS = new char[10000];\n\t\t\tstrncpy(tmpS, s+i+1, j-2);\n\t\t\ttmpS[j-2] = '\\0';\n\t\t\t//cout << tmpS << endl;\n\t\t\tint x = min(tmpS);\n\t\t\tintlist.push_back( x );\n\t\t\tn++;\n\t\t\tflag = false;\n\t\t\ti = i + j-1;\n\t\t\tdelete[] tmpS;\n\t\t}\n\t}\n\tif(flag) {\n\t\ttmpI = atoi(s);\n\t\t//cout << tmpI << endl;\n\t\treturn tmpI / 2 + 1;\n\t}\n\n\tintlist.sort();\n\n\tlist<int>::iterator itr = intlist.begin();\n\tfor(int i = 0; i < n/2 + 1; itr++, i++) {\n\t\tsum += *itr;\n\t}\n\n\t/*\n\tbool flag = true;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\tif(!flag) {\n\t\t\t\tstring s2;\n\t\t\t\tfor(int j = 0; s[j] != ']' && s[j + 1] != ']'; j++) {\n\t\t\t\t\tstrncpy(s2, s+i, j-i+1);\n\t\t\t\t}\n\t\t\t\tmin(s2);\n\t\t\t} else {\n\t\t\t\tn++:\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tint[] input = new input[n];\n\tint j = 0;\n\tfor(int i = 0; s[i] != '\\n'; i++) {\n\t\tif(s[i] == '[') {\n\t\t\t;\n\t\t} else if(s[i] == ']') {\n\t\t\tinput[j] = tmpI;\n\t\t\ttmpI = 0;\n\t\t} else {\n\t\t\ttmpI = tmpI * 10 + atoi(c);\n\t\t}\n\t}\n\tsort(input);\n\tfor(int i = 0; i < n/2 + 1; i++) {\n\t\tsum = input[i] / 2 + 1;\n\t}\n\t*/\n\n\treturn sum;\n}\n\n\nint main (void) {\n\tint n;\n\tcin >> n;\n\t\n\t//cout << \"ok\" << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar* s = new char[10002];\n\t\t//char c;\n\t\t//int j = 0;\n\t\t/*for( ; cin >> c && (c != '\\n' && c != '\\0'); j++) {\n\t\t\ts[j] = c;\n\t\t}\n\t\ts[j] = '\\0';\n\t\t*/\n\t\tcin >> s;\n\t\t//cout << s;\n\t\t//cout << \"abon\" << endl;\n\n\t\tcout << min(s) << endl;\n\t\tdelete[] s;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cctype>\n#include <stack>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    int n;\n    cin >> n;\n    while(n--) {\n        string s; cin >> s;\n\n        stack < string > st;\n        for(int i = 0; i < s.size(); i++) {\n            if(s[i] == '[' && isdigit(s[i + 1])) {\n                string v = \"\";\n                i++;\n                for(; s[i] != ']'; i++)\n                    v += s[i];\n                st.push(v);\n            }\n            else if(s[i] == '[') st.push(\"[\");\n            else if(s[i] == ']') {\n                vector< int > v;\n                while(true) {\n                    string c = st.top(); st.pop();\n                    if(c == \"[\") break;\n                    v.push_back(atoi(c.c_str()));\n                }\n                if(s[i - 2] == ']') {\n                    int sum = 0;\n                    sort(v.begin(), v.end());\n                    for(int j = 0; j < v.size() / 2 + 1; j++) {\n                        //cout << v[j] << endl;\n                        sum += v[j];\n                    }\n                    st.push(to_string(sum));\n                } else {\n                    int sum = 0;\n                    sort(v.begin(), v.end());\n                    for(int j = 0; j < v.size() / 2 + 1; j++) {\n                        //cout << v[j] / 2  + 1 << endl;\n                        sum += v[j] / 2 + 1;\n                    }\n                    st.push(to_string(sum));\n                }\n            }\n        }\n        cout << st.top() << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \n#define loop(n, i) for(int i=0;i<n;i++)\n#define all(v) v.begin(),v.end()\n#define HERE cout << \"HERE: \" << __LINE__ << endl;\n#define INSP(v) cout << v << \" at \" << __LINE__ << endl;\n\nusing namespace std;\ntypedef long long ll;\n\nint eval(string d)\n{\n    d = d.substr(1, d.length()-2);\n    if (d[0] >= '0' && d[0] <= '9') {\n        return stoi(d) / 2 + 1;\n    }\n    vector<int> vs;\n    int i = 0;\n    while (i < d.length()) {\n        int j = i, cnt = 1;\n        while (cnt) {\n            j++;\n            if (d[j] == '[') cnt++;\n            if (d[j] == ']') cnt--;\n        }\n        vs.push_back(eval(d.substr(i, j-i+1)));\n        i = j + 1;\n    }\n    sort(all(vs));\n    int ans = 0;\n    loop (vs.size()/2+1, i) ans += vs[i];\n    return ans;\n}\n\nint main()\n{\n    int n; cin >> n;\n    while (n--) {\n        string d; cin >> d;\n        cout << eval(d) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\nconst int MOD = 1e9 + 7;\nconst int iINF = 1000000000;\nconst long long int llINF = 1000000000000000000;\n\nusing namespace std;\nusing ll = long long int;\nusing vl = vector<ll>;\nusing vvl = vector<vector<ll>>;\nusing vvvl = vector<vector<vector<ll>>>;\n\ntypedef pair<ll, ll> pll;\nbool paircomp(const pll &a, const pll &b) {\n  if (a.first == b.first)\n    return a.second < b.second;\n  return a.first < b.first;\n}\nstruct multi {\n  ll first;\n  ll second;\n  ll third;\n};\nbool multicomp(const multi &a, const multi &b) {\n  if (a.first == b.first)\n    return a.second < b.second;\n  return a.first < b.first;\n}\n#define REP(i, n) for (ll i = 0; i < (n); i++)\n#define RREP(i, n) for (ll i = (n)-1; i >= 0; i--)\n#define FOR(i, a, b) for (ll i = (a); i < (b); i++)\n#define AUTO(i, m) for (auto &i : m)\n#define ALL(a) (a).begin(), (a).end()\n#define MAX(vec) *std::max_element(vec.begin(), vec.end())\n#define MIN(vec) *std::min_element(vec.begin(), vec.end())\n#define ARGMAX(vec)                                                            \\\n  std::distance(vec.begin(), std::max_element(vec.begin(), vec.end()))\n#define ARGMIN(vec)                                                            \\\n  std::distance(vec.begin(), std::min_element(vec.begin(), vec.end()))\n#define REV(T) greater<T>()\n#define PQ(T) priority_queue<T, vector<T>, greater<T>>\n#define VVL(a, b, c) vector<vector<ll>>(a, vector<ll>(b, c))\n#define VVVL(a, b, c, d)                                                       \\\n  vector<vector<vector<ll>>>(a, vector<vector<ll>>(b, vector<ll>(c, d)))\n#define SP(a) setprecision(a)\n#define SQRT(a) sqrt((long double)(a))\n#define DPOW(a, b) pow((long double)(a), (long double)(b))\n#define UNIQUE(vec)                                                            \\\n  do {                                                                         \\\n    sort(ALL((vec)));                                                          \\\n    (vec).erase(std::unique(ALL((vec))), (vec).end());                         \\\n  } while (0)\n\nll POW(ll n, ll m) {\n  if (m == 0) {\n    return 1;\n  } else if (m % 2 == 0) {\n    ll tmp = POW(n, m / 2);\n    return (tmp * tmp);\n  } else {\n    return (n * POW(n, m - 1));\n  }\n}\n\nvector<string> split(const string &s, char delim) {\n  vector<string> elems;\n  string item;\n  for (char ch : s) {\n    if (ch == delim) {\n      if (!item.empty())\n        elems.push_back(item);\n      item.clear();\n    } else {\n      item += ch;\n    }\n  }\n  if (!item.empty())\n    elems.push_back(item);\n  return elems;\n}\n\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ll N;\n  cin >> N;\n  auto re = regex(\"\\\\[[0-9|,]*\\\\]\");\n  smatch match;\n  vector<string> ans;\n\n  REP(i, N) {\n    string s;\n    cin >> s;\n    while (true) {\n      if (regex_search(s, match, re)) {\n        string m_str = match[0];\n        m_str = m_str.substr(1, match.length(0) - 2);\n        auto ms = split(m_str, ',');\n        if (ms.size() == 1) {\n          m_str = to_string((stoi(m_str) + 1) / 2);\n          m_str.push_back(',');\n          s.replace(match.position(0), match.length(0), m_str);\n        } else {\n          vector<int> po;\n          int need = 0;\n          AUTO(m, ms) po.push_back(stoi(m));\n          sort(ALL(po));\n          REP(j, (po.size() + 1) / 2) { need += po[j]; }\n          m_str = to_string(need);\n          m_str.push_back(',');\n          s.replace(match.position(0), match.length(0), m_str);\n        }\n      } else {\n        break;\n      }\n    }\n    ans.push_back(s.substr(0, s.size() - 1));\n  }\n  AUTO(a, ans) cout << a << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n\n#include<fstream>\n#include<iostream>\n#include <stdio.h>\n#include <functional>\n#include<string>\n#include<iomanip>\n#include<list>\n#include<math.h>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<algorithm>\n#include<utility>\n\nusing namespace std;\n\nstring x(string s, const string cs, const string se) {\n\tint pos = 0;\n\twhile ((pos = s.find_first_of(se)) != string::npos) {\n\t\ts.replace(pos, 1, cs);\n\t}\n\treturn s;\n}\n\nstring y(string a) {\n\tint pos4 = 0, pos9 = 0;\n\ta = x(a, \"3\", \"5\");\n\ta = x(a, \"5\", \"6\");\n\ta = x(a, \"6\", \"7\");\n\ta = x(a, \"7\", \"8\");\n\tint pos = a.length();\n\tif ((pos4 = a.find_first_of(\"4\")) != string::npos && (pos9 = a.find_first_of(\"9\")) != string::npos)\n\t{\n\t\tif (pos4 > pos9) {//4>9\n\t\t\ta = a.replace(pos9, 1, \"7\");\n\t\t\tpos = pos9 + 1;\n\t\t}\n\t\telse {\n\t\t\ta = a.replace(pos4, 1, \"3\");\n\t\t\tpos = pos4 + 1;\n\t\t}\n\t}\n\telse if ((pos4 = a.find_first_of(\"4\")) != string::npos) {\n\t\ta = a.replace(pos4, 1, \"3\");\n\t\tpos = pos4 + 1;\n\t}\n\telse if ((pos9 = a.find_first_of(\"9\")) != string::npos) {\n\t\ta = a.replace(pos9, 1, \"7\");\n\t\tpos = pos9 + 1;\n\t}\n\twhile (pos != a.length()) {\n\t\ta = a.replace(pos, 1, \"7\");\n\t\tpos++;\n\t}\n\treturn a;\n}\n\nint n;\nint m;\nint aji[100000];\n\nint saiki(int cnt){\n\tint num = 0;\n\tvector<int> v;\n\tchar c;\n\tbool flag = false;\n\twhile (true) {\n\t\tcin >> c;\n\t\tif (c == '[') {\n\t\t\tnum = saiki(cnt + 1);\n\t\t\tif (cnt == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tv.push_back(num);\n\t\t\tnum = 0;\n\t\t}\n\t\telse if (c == ']') {\n\t\t\tif (num != 0) {\n\t\t\t\tv.push_back(num + 1);\n\t\t\t}\n\t\t\tif (v.size() > 0) {\n\t\t\t\tsort(v.begin(), v.end());\n\t\t\t\tnum = 0;\n\t\t\t\tfor (int i = 0; i < v.size() / 2 + 1; i++) {\n\t\t\t\t\tnum += v[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//cnt--;\n\t\t\t\n\t\t\treturn num;\n\t\t}\n\t\telse{\n\t\t\tnum = num * 10 + (c - '0');\n\t\t}\n\t}\n\treturn num;\n}\n\nint main(){\n\tint n;\n\tint cnt = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcout << saiki(0) / 2 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cmath>\n#include <climits>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <cassert>\n#include <functional>\n\nusing namespace std;\n\n#define LOG(...) printf(__VA_ARGS__)\n//#define LOG(...)\n#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);++i)\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<bool> vb;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vb> vvb;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int dx[] = { -1, 0, 1, 0 }; const int dy[] = { 0, 1, 0, -1 };\n\nstruct UnionFind {\n\tvector<int> v;\n\tUnionFind(int n) : v(n) { for (int i = 0; i < n; i++) v[i] = i; }\n\tint  find(int x) { return v[x] == x ? x : v[x] = find(v[x]); }\n\tvoid unite(int x, int y) { v[find(x)] = find(y); }\n};\n\nint main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tvvi win(10000);\n\t\tstring s;\n\t\tcin >> s;\n\t\tint cnt = 0;\n\t\tREP(i, s.length()) {\n\t\t\tif (s[i] == '[') {\n\t\t\t\tcnt++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (s[i] == ']') {\n\t\t\t\tint res=0;\n\t\t\t\tSORT(win[cnt]);\n\t\t\t\tif (win[cnt].size() > 1) {\n\t\t\t\t\tREP(i, win[cnt].size() / 2 + 1)\n\t\t\t\t\t\tres += win[cnt][i];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tres = win[cnt][0];\n\t\t\t\twin[cnt - 1].push_back(res);\n\t\t\t\twin[cnt].clear();\n\t\t\t\tcnt--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\twhile (isdigit(s[i])) {\n\t\t\t\tres *= 10;\n\t\t\t\tres += s[i]-'0';\n\t\t\t\ti++;\n\t\t\t}\n\t\t\twin[cnt].push_back(res/2+1);\n\t\t\ti--;\n\t\t}\n\t\tcout << win[0][0] << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<climits>\n#include<iostream>\n#include<algorithm>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<list>\n#include<map>\n#include<set>\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\n#define pb push_back\nint dy[]={0, 0, 1, -1, 0};\nint dx[]={1, -1, 0, 0, 0};\n \n#define FOR(i,a,b) for (int i=(a);i<(b);i++)\n#define RFOR(i,a,b) for (int i=(b)-1;i>=(a);i--)\n#define REP(i,n) for (int i=0;i<(n);i++)\n#define RREP(i,n) for (int i=(n)-1;i>=0;i--)\n\nchar s[20000];\nint n;\n\nint solve(int i){\n    if(s[i + 1] >= '0' && s[i + 1] <= '9'){\n        return atoi(&s[i + 1]) / 2 + 1;\n    }\n\n    int m[10000];\n    i++;int j = 0;\n    while(s[i] == '['){\n        m[j++] = solve(i);\n        i++;\n        int q = 1;\n        while(q > 0 /*&& (s[i] >= '0' && s[i] <= '9') || s[i] == '[' || s[i] == ']'*/){\n            if(s[i] == '[')\n                q++;\n            if(s[i] == ']')\n                q--;\n            i++;\n        }\n    }\n    sort(m,m+j);\n    int sum = 0;\n    for(int k = 0;k < j / 2 + 1;k++)\n        sum += m[k];\n    return sum;\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i = 0;i < n;i++){\n        scanf(\"%s\",s);\n        printf(\"%d\\n\",solve(0));\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <algorithm>\n#include <cstdio>\n#include <functional>\n#include <iostream>\n#include <cfloat>\n#include <climits>\n#include <cstring>\n#include <cmath>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <time.h>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\ntypedef pair<ll, int> ll_i;\ntypedef pair<double, int> d_i;\ntypedef pair<ll, ll> ll_ll;\ntypedef pair<double, double> d_d;\nstruct edge { int u, v; ll w; };\n\nll MOD = 1000000007;\nll _MOD = 1000000009;\ndouble EPS = 1e-10;\n\nint foo(string& s, int& i) {\n\tif (s[i] != '[') {\n\t\tint x = 0;\n\t\tfor (; s[i] != ']'; i++)\n\t\t\tx = x * 10 + (s[i] - '0');\n\t\treturn x / 2 + 1;\n\t}\n\ti++;\n\tvector<int> v;\n\twhile (s[i] != ']')\n\t\tv.push_back(foo(s, i));\n\ti++;\n\tsort(v.begin(), v.end());\n\tint sum = 0;\n\tfor (int j = 0; j < v.size() / 2 + 1; j++)\n\t\tsum += v[j];\n\treturn sum;\n}\n\nint main() {\n\tint T; cin >> T;\n\twhile (T--) {\n\t\tstring s; cin >> s;\n\t\tint i = 0;\n\t\tcout << foo(s, i) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Node{\n    int value;\n    list<Node*> next;\n    Node* prev;\n\npublic:\n    Node();\n    Node(Node* p);\n    ~Node();\n    void set_v(int v);\n    void add_next(int v);\n    void del_next();\n    void set_prev(Node* p);\n    Node* next_ret(int index);\n    Node* prev_ret();\n    int value_ret();\n    int next_size_ret();\n};\n\nclass Tree{\n    Node root;\n    Node* pos;\n\npublic:\n    Tree();\n    ~Tree();\n    void add(int v);\n    void move_next(int index);\n    void move_back();\n    void set_root();\n    int pos_size_ret();\n    int pos_value_ret();\n    Node* pos_ret();\n    void DLELTE_DFS(Node* node);\n\n    int solve();\n    int DFS(Node* node);\n};\n\nNode::Node() {\n    this->prev = this;\n    value = -1;\n}\n\nNode::Node(Node* p) {\n    this->prev = p;\n    value = -1;\n}\n\nNode::~Node() {\n    this->del_next();\n}\n\nvoid Node::set_v(int v) {\n    this->value = v;\n}\n\nvoid Node::add_next(int v) {\n    Node* n= new Node(this);\n    n-> value = v;\n    next.push_back(n);\n}\n\nvoid Node::del_next() {\n\n    list<Node*>::iterator pre_itr = this->next.begin();\n    list<Node*>::iterator itr = pre_itr;\n    for (itr++; itr != this->next.end(); itr++) {\n        delete *pre_itr;\n        pre_itr = itr;\n    }\n\n    delete *pre_itr;\n\n    this->next.resize(0);\n\n}\n\nvoid Node::set_prev(Node* p) {\n    this->prev = p;\n}\n\nNode* Node::next_ret(int index) {\n    list<Node*>::iterator itr = this->next.begin();\n    for(int i=0; i<index; i++){\n        itr++;\n    }\n    return *itr;\n}\n\nNode* Node::prev_ret() {\n    return this->prev;\n}\n\nint Node::value_ret() {\n    return this->value;\n}\n\nint Node::next_size_ret() {\n    return this->next.size();\n}\n\n\n\nTree::Tree() {\n    this->pos = &(this->root);\n}\n\nTree::~Tree(){\n\n    DLELTE_DFS(&(this->root));\n\n}\n\nvoid Tree::add(int v) {\n    pos->add_next(v);\n}\n\nvoid Tree::move_next(int index) {\n    this->pos = this->pos->next_ret(index);\n}\n\nvoid Tree::move_back() {\n    this->pos = this->pos->prev_ret();\n}\n\nvoid Tree::set_root() {\n    this->pos = &(this->root);\n}\n\nint Tree::pos_size_ret() {\n    return this->pos->next_size_ret();\n}\n\nint Tree::pos_value_ret() {\n    return this->pos->value_ret();\n}\n\nNode* Tree::pos_ret() {\n    return this->pos;\n}\n\nint Tree::solve() {\n    return this->pos->value_ret();\n}\n\nint Tree::DFS(Node* node) {\n\n    if(node->next_size_ret() == 0){\n        return (node->value_ret()/2 + 1);\n    }\n\n    int add = 0;\n\n    priority_queue<int> q;\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        q.push(-DFS(node->next_ret(i)));\n    }\n\n    int count = q.size();\n\n    for(int loop = 0; loop < count/2 + 1; loop++){\n        add += -q.top();\n        q.pop();\n    }\n\n    return add;\n\n}\n\nvoid Tree::DLELTE_DFS(Node* node) {\n\n    if(node->next_size_ret() == 0){\n        return;\n    }\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        DLELTE_DFS(node->next_ret(i));\n    }\n\n    node->del_next();\n\n}\n\nstring input;\nint n;\n\nint main() {\n\n    cin >> n;\n    cin.ignore();\n\n    while(n--){\n\n        getline(cin, input);\n\n        Tree t;\n\n        for(int i=1; i<input.size(); i++){\n\n            if(input[i] == '['){\n                t.add(0);\n                t.move_next(t.pos_size_ret() - 1);\n            }\n            else if(input[i] == ']'){\n                t.move_back();\n            }\n            else{\n                string snum = \"\";\n                while(input[i] != ']'){\n                    snum += input[i];\n                    i++;\n                }\n                i--;\n                stringstream ss;\n                ss << snum;\n                int num;\n                ss >> num;\n                t.add(num);\n            }\n\n        }\n\n        t.set_root();\n        cout << t.DFS(t.pos_ret()) << endl;\n\n    }\n    \n    cin >> n;\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,x,y) for(int i=(x);i<(y);++i)\n#define debug(x) #x << \"=\" << (x)\n\n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define show(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define show(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\ntemplate<typename T> using vec=std::vector<T>;\n\nconst int inf=1<<30;\nconst long long int infll=1LL<<62;\nconst double eps=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n    os << \"[\";\n    for (const auto &v : vec) {\n    \tos << v << \",\";\n    }\n    os << \"]\";\n    return os;\n}\n\nstruct node{\n    vector<node*> cld;\n    int mini;\n    node():mini(inf){}\n};\n\nnode* parse(string s){\n    node *v=new node;\n    {\n        bool f=true;\n        rep(i,1,s.size()-1) if(!isdigit(s[i])){\n            f=false;\n            break;\n        }\n        if(f){\n            v->mini=stoi(s.substr(1,s.size()-2));\n            return v;\n        }\n    }\n    int d=0,l;\n    rep(i,1,s.size()-1){\n        if(s[i]=='['){\n            if(!d) l=i;\n            ++d;\n        }\n        if(s[i]==']'){\n            if(d==1) v->cld.push_back(parse(s.substr(l,i-l+1)));\n            --d;\n        }\n    }\n    return v;\n};\n\nint dfs(node *v){\n    if(!v->cld.size()) return (v->mini+1)/2;\n    vector<int> val;\n    for(auto c:v->cld) val.push_back(dfs(c));\n    sort(val.begin(),val.end());\n    int res=0;\n    rep(i,0,(val.size()+1)/2) res+=val[i];\n    return res;\n}\n\nvoid solve(){\n    string s;\n    cin >> s;\n    cout << dfs(parse(s)) << endl;\n}\n\nint main(){\n    std::cin.tie(0);\n    std::ios::sync_with_stdio(false);\n    cout.setf(ios::fixed);\n    cout.precision(10);\n    int n;\n    cin >> n;\n    rep(i,0,n) solve();\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nvector<string> subs(string s) {\n  int parcnt = 0;\n  for (auto c: s) {\n    if (c == '[') parcnt++;\n  }\n  if (parcnt == 1) {\n    vector<string> ss;\n    ss.push_back(s.substr(1, s.size() - 2));\n    return ss;\n  }\n  parcnt = 2;\n  vector<string> ss;\n  string cur = \"[\";\n  for (int i = 2; i < s.size() - 1; i++) {\n    char c = s[i];\n    if (c == '[') {\n      parcnt++;\n      cur += c;\n    } else if (c == ']') {\n      parcnt--;\n      if (parcnt == 1) {\n        cur += ']';\n        ss.push_back(cur);\n        cur = \"\";\n      } else {\n        cur += c;\n      }\n    } else {\n      cur += c;\n    }\n  }\n  return ss;\n}\n\nlong findmin(string s) {\n  if (s[0] != '[') {\n    return stoi(s) / 2 + 1;\n  }\n  vector<long> vs;\n  for (auto a: subs(s)) {\n    vs.push_back(findmin(a));\n  }\n  long ret = 0;\n  sort(vs.begin(), vs.end());\n  for (int i = 0; i < vs.size() / 2 + 1; i++) {\n    ret += vs[i];\n  }\n  return ret;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    cout << findmin(s) << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<stack>\n#include<algorithm>\n\nusing namespace std;\n\nstruct Node {\n\tint value;\n\tvector<int> son;\n};\n\nint N;\nstring S;\nNode ar[10000];\n\nint getnumber(int start, int end) {\n\tint ans = 0;\n\tfor (int i = start + 1; i <= end - 1; i++) {\n\t\tif (S[i] == '[' || S[i] == ']')return -1;\n\t}\n\tans = S[start + 1] - '0';\n\tfor (int i = start + 2; i <= end - 1; i++) {\n\t\tans *= 10;\n\t\tans += (S[i] - '0');\n\t}\n\treturn ans;\n}\n\nint calc(int start) {\n\tif (ar[start].son.size() == 0) {\n\t\t//最下層のノード\n\t\treturn (ar[start].value + 1) / 2;\n\t}\n\telse {\n\t\tvector<int> A;\n\t\tfor (int i = 0; i < ar[start].son.size(); i++) {\n\t\t\tA.push_back(calc(ar[start].son[i]));\n\t\t}\n\t\tsort(A.begin(), A.end());\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < (A.size() + 1) / 2; i++) {\n\t\t\tans += A[i];\n\t\t}\n\t\treturn ans;\n\t}\n}\n\nint main() {\n\tcin >> N;\n\tfor (int cnt = 0; cnt < N; cnt++) {\n\t\tcin >> S;\n\t\tstack<int> Before;\n\t\t\n\t\tfor (int j = 0; j < S.size(); j++) {\n\t\t\tif (S[j] == '[') {\n\t\t\t\tBefore.push(j);\n\t\t\t\t\n\t\t\t}\n\t\t\telse if(S[j] == ']'){\n\t\t\t\tint startpos = Before.top(); Before.pop();\n\t\t\t\tint tmp = getnumber(startpos, j);\n\t\t\t\tif (tmp == -1) {\n\t\t\t\t\t//最下層ではない\n\t\t\t\t\tif (Before.size() != 0) {\n\t\t\t\t\t\tar[Before.top()].son.push_back(startpos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//最下層である。\n\t\t\t\t\tar[Before.top()].son.push_back(startpos);\n\t\t\t\t\tar[startpos].value = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << calc(0) << endl;\n\t\tfor (int i = 0; i < 10000; i++) {\n\t\t\tar[i].son.clear(), ar[i].value = 0;\n\t\t}\n\t}\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring s;\nstringstream ss;\nint check;\nint snum;\n\nint judge(){\n\tint num;\n\tint tmp;\n\tint ans = 0;\n\tvector<int> vec;\n\twhile(snum < s.size()){\n\t\tss.clear(stringstream::goodbit);\n\t\tif(s[snum] == '[' && s[snum + 1] == '['){\n\t\t\tsnum++;\n\t\t\tvec.push_back(judge());\n\t\t\t//cout << vec[vec.size()-1] << endl;\n\t\t}\n\t\telse if(s[snum] == '['){\n\t\t\tnum = 0;\n\t\t\tsnum++;\n\t\t}\n\t\telse if(s[snum] == ']' && s[snum + 1] == '['){\n\t\t\tsnum++;\n\t\t}\n\t\telse if(s[snum] == ']' && s[snum + 1] == ']'){\n\t\t\tsort(vec.begin(),vec.end());\n\t\t\tfor(int i = 0;i <= vec.size()/2;i++){\n\t\t\t\tans += vec[i];\n\t\t\t}\n\t\t\tsnum++;\n\t\t\treturn ans;\n\t\t}\n\t\telse{\n\t\t\tnum *= 10;\n\t\t\tss << s[snum];\n\t\t\tss >> tmp;\n\t\t\tnum += tmp;\n\t\t\tif(s[snum + 1] == ']'){\n\t\t\t\tvec.push_back(num);\n\t\t\t\tif(s[snum + 2] == ']'){\n\t\t\t\t\tsort(vec.begin(),vec.end());\n\t\t\t\t\tfor(int i = 0;i <= vec.size()/2;i++){\n\t\t\t\t\t\tans += (vec[i]/2) + 1;\n\t\t\t\t\t}\n\t\t\t\tsnum+=2;\n\t\t\t\treturn ans;\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tsnum++;\n\t\t}\n\t}\n}\n\nint main(){\n\n\tint n,ans;\n\tcin >> n;\n\tfor(int i = 0;i < n;i++){\n\t\tcheck = 1;\n\t\tsnum = 1;\n\t\tcin >> s;\n\t\tans = judge();\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cctype>\n#include <algorithm>\nusing namespace std;\n\nconst char *p;\nstring str;\n\nint parse() {\n  int num;\n  char *e;\n  p++;\n  \n  if(*p=='[') {\n    vector<int> v;\n    for(;;) { \n      if(*p == '[') {\n\tnum = parse();\n\tv.push_back(num);\n\tp++;\n      } else break;\n    }\n    sort(v.begin(), v.end());\n    \n    int sum = 0;\n    for(int i=0; i<v.size()/2+1; i++) sum+=v[i];\n    return sum;\n  }\n  \n  if(isdigit(*p)) {\n    num = strtol(p, &e, 10);\n    p = e;\n    return num/2+1;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cin.ignore();\n  \n  for(int i=0; i<n; i++) {\n    getline(cin, str);\n    p = str.c_str();\n    cout << parse() << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint main(){\n  int n;\n  cin >> n;\n  for(int times=0; times<n; ++times){\n    string s;\n    cin >> s;\n\n    int L=0, R=0;\n    int k=0;\n    //??????????????°???????????????\n    for(int i=0; i<s.size(); ++i){\n      if(s[i]=='[') L++;\n      else if(s[i]==']') R++;\n      k=max(k,(L-R));\n    }\n\n    vector< vector<int> > q(5000);\n\n    L=0, R=0;\n    //??????????????°???????????????\n    for(int i=0; i<s.size(); ++i){\n      if(s[i]=='[') L++;\n      else if(s[i]==']'){\n        R++;\n        if(q[L-R+2].size()!=0){\n          sort(q[L-R+2].begin(), q[L-R+2].end());\n\n          int ins=0;\n          for(int i=0; i<=q[L-R+2].size()/2; ++i){\n            if(L-R+2==k) ins+=q[L-R+2][i]/2+1;\n            else ins+=q[L-R+2][i];\n          }\n          //printf(\"dep = %d,ins = %d\\n\", L-R+1, ins);\n          q[L-R+2].resize(0);\n          q[L-R+1].push_back(ins);\n        }\n      }\n      else{ //??°???\n        int st=i;\n        while(s[i+1]!=']') i++;\n        //string tmp = s.substr(st,i-st+1);\n        q[L-R].push_back(atoi(s.substr(st,i-st+1).c_str()));\n\n      }\n    }\n\n    cout << q[1].front() <<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  \n  int n;\n  cin >> n;\n  \n  while (n--) {\n    string s;\n    cin >> s;\n    \n    vector<vector<ll>> x(5005);\n    int it = 0;\n    ll keep = 0;\n    for (int i = 0; i < s.size(); i++) {\n      if (s.at(i) == '[') it++;\n      else if (s.at(i) == ']') {\n        if (keep > 0) {\n          x[it].emplace_back(keep / 2 + 1);\n          keep = 0;\n        }\n        else {\n          sort(x[it + 1].begin(), x[it + 1].end());\n          ll keep2 = 0;\n          for (int j = 0; j < x[it + 1].size() / 2 + 1; j++) {\n            keep2 += x[it + 1].at(j);\n          }\n          x[it].emplace_back(keep2);\n          x[it + 1].clear();\n        }\n        it--;\n      }\n      else {\n        keep *= 10;\n        keep += (ll) s.at(i) - '0';\n      }\n    }\n    \n    cout << x[1].at(0) << '\\n';\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nstruct node{\n  int val;\n  vector<int> next;\n  node(){\n    val = -1;\n  }\n  node(int a){\n    val = a;\n  }\n};\n\nint n;\nstring s;\nvector<node> tree;\n\nint make(int p, int v)\n{\n  string tmp;\n  for(int i = p; i < s.size(); i++){\n    if(s[i] == '['){\n      tree.push_back(node());\n      tree[v].next.push_back(tree.size()-1);\n      i = make(i+1, tree.size()-1);\n    }\n    else if(s[i] == ']'){\n      if(tmp != \"\"){\n        tree[v].val = atoi(tmp.c_str());\n      }\n      return i;\n    }\n    else{\n      tmp += s[i];\n    }\n  }\n}\n\nint calc(int v)\n{\n  if(tree[v].val != -1){\n    return (tree[v].val + 1) / 2;\n  }\n  vector<int> vec;\n  for(int i = 0; i < tree[v].next.size(); i++){\n    vec.push_back(calc(tree[v].next[i]));\n  }\n  sort(vec.begin(), vec.end());\n  int ret = 0;\n  for(int i = 0; i < ((int)vec.size()+1)/2; i++) ret += vec[i];\n  return ret;\n}\n\nint main(void)\n{\n  cin >> n;\n  for(int t = 0; t < n; t++){\n    cin >> s;\n\n    tree.clear();\n    tree.push_back(node());\n\n    make(0, 0);\n    cout << calc(0) << endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define for_(i,a,b) for(int i=(a);i<(b);++i)\n\nstring str;\n\nint parse(int lft, int rgt) {\n\tint k = 0, nxl = -1, num = 0;\n\tpriority_queue< int, vector< int >, greater< int > > que;\n\t\n\tfor_(i,lft,rgt) {\n\t\tif (str[i] == '[') {\n\t\t\tif (k == 0) nxl = i+1;\n\t\t\t++k;\n\t\t}\n\t\t\n\t\tif (k > 0 && str[i] == ']') {\n\t\t\t--k;\n\t\t\tif (k == 0) que.push(parse(nxl, i));\n\t\t}\n\t\t\n\t\tif (k == 0 && isdigit(str[i])) {\n\t\t\tnum = 10 * num + (str[i] - '0');\n\t\t}\n\t}\n\t\n\tif (num != 0) return num / 2 + 1;\n\t\n\tint qsize = (int)que.size();\t\n\tint res = 0;\n\t\n\tfor_(i,0,qsize/2 + 1) {\n\t\tres += que.top();\n\t\tque.pop();\n\t}\n\t\n\treturn res;\n}\n\nint main() {\n\tint T;\n\tcin >> T;\n\t\n\tfor_(i,0,T) {\n\t\tcin >> str;\n\t\tcout << parse(0, (int)str.size()) << endl;\t\t\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\n\nint func(char s[10000]){\n  int num[4000],ans=0,n,cnt=0,lp[4000],rp[4000],l,r;\n  char ss[10000];\n  l=r=0;\n  n=strlen(s);\n  for(int i=1;i<n-1;i++){\n    if(s[i]=='['){\n      l++;\n      if(l-r==1)\n        lp[cnt]=i;\n    }\n    else if(s[i]==']'){\n      r++;\n      if(l-r==0){\n        rp[cnt]=i;\n        for(int j=lp[cnt];j<=rp[cnt];j++)\n          ss[j-lp[cnt]]=s[j];\n        ss[rp[cnt]-lp[cnt]+1]='\\0';\n        num[cnt]=func(ss);\n        cnt++;\n      }\n    }\n  }\n  if(cnt>0){\n    sort(num,num+cnt);\n    for(int i=0;i<=cnt/2;i++)\n      ans+=num[i];\n  }\n  else{\n    for(int i=1;i<n-1;i++){\n      ans*=10;\n      ans+=s[i]-'0';\n    }\n    ans/=2;\n    ans++;\n  }\n  return ans;\n}\n\nint main(){\n  int n;\n  char s[10010];\n  scanf(\"%d\",&n);\n  for(int i=0;i<n;i++){\n    scanf(\"%s\",s);\n    printf(\"%d\\n\",func(s));\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include\"bits/stdc++.h\"\nusing namespace std;\n#define FOR(i, a, b) for (int i = a; i < b; i++)\n#define REP(i, n) FOR(i, 0, n)\n#define RFOR(i, a, b) for (int i = (b - 1); i >= a; i--)\n#define RREP(i, n) RFOR(i, 0, n)\n#define rep(i, a, b) for (auto i = a; i < b; i++)\n#define rrep(i, a, b) for (auto i = a; i > b; i--)\n#define fs first\n#define sc second\n#define ll long long\nstring s;\n\nll dfs(int start, int end) {\n\tstack<int> st;\n\tpriority_queue<ll> q;\n\tbool flag = true;\n\trep(i, start + 1, end) {\n\t\tif (s[i] == '[') {\n\t\t\tflag = false;\n\t\t\tst.push(i);\n\t\t} else if (s[i] == ']') {\n\t\t\tif (st.size() == 1) {\n\t\t\t\tq.push(-dfs(st.top(), i));\n\t\t\t\tst.pop();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tst.pop();\n\t\t\t}\n\t\t}\n\t}\n\tif (flag) {\n\t\tint tmp = 0;\n\t\trep(i, start + 1, end) {\n\t\t\ttmp *= 10;\n\t\t\ttmp += (int)(s[i] - '0');\n\t\t}\n\t\t//cout << tmp << endl;\n\t\treturn (tmp + 1) / 2;\n\t}\n\telse {\n\t\tll tmp = 0;\n\t\tint k = (q.size() + 1) / 2;\n\t\trep(i, 0, k) {\n\t\t\ttmp += -q.top();\n\t\t\tq.pop();\n\t\t}\n\t\t//cout << tmp << endl;\n\t\treturn tmp;\n\t}\n}\n\n\nint main() {\n\tint n; cin >> n;\n\trep(i, 0, n) {\n\t\tcin >> s;\n\t\t//dfs(0, s.size() - 1);\n\t\tcout << dfs(0, s.size() - 1) << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cctype>\n#include <limits.h>\n#include <math.h>\n#include <complex>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n\n#define VARIABLE(x) cerr << #x << \"=\" << x << endl\n#define BINARY(x) static_cast<bitset<16> >(x);\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n\nconst int INF = 1000000000;\ntypedef double D;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={-1, 0, 1, 0}, dy[4]={0, -1, 0, 1};\nusing namespace std;\n//typedef pair<int, int> P;\n\n/** Problem1188 : Hierarchical Democracy **/\nstring s; int pos;\n\nint factor()\n{\n\tif (isdigit(s[pos])) {\n\t\tint res=0;\n\t\twhile (isdigit(s[pos])) {\n\t\t\tres*=10;\n\t\t\tres+=s[pos]-'0';\n\t\t\tpos++;\n\t\t}\n\t\treturn (res+1)/2;\n\t} else if (s[pos] == '[') {\n\t\tpos++;\n\t\tint res=0;\n\t\t\n\t\tpriority_queue<int, vector<int>, greater<int> > Q;\n\t\twhile (s[pos]!=']') {\n\t\t\tQ.push(factor());\n\t\t}\n\t\tpos++;\n\t\t\n\t\tint n = (int)Q.size();\n\t\trep(i, (n+1)/2) {\n\t\t\tres += Q.top();\n\t\t\tQ.pop();\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n}\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\trep(i, n) {\n\t\tpos = 0;\n\t\tcin>>s;\n\t\tcout << factor() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nテ「ツ??\n#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)\n#define ALL(x) (x).begin(),(x).end()\nテ「ツ??\nusing namespace std;\nテ「ツ??\ntemplate <typename T> T &chmin(T &a, const T &b) { return a = min(a, b); }\ntemplate <typename T> T &chmax(T &a, const T &b) { return a = max(a, b); }\nテ「ツ??\nusing ll = long long;\nusing ld = long double;\nテ「ツ??\nconst int INF = 1e9;\nconst ld eps = 1e-9, pi = acos(-1.0);\nテ「ツ??\nstring s;\nint p;\nテ「ツ??\nint number() {\n  int res = 0;\n  while (p < (int)s.size() && isdigit(s[p])) {\n    res = res * 10 + (int)(s[p] - '0');\n    ++p;\n  }\n  return (res + 1) / 2;\n}\nテ「ツ??\nint expr() {\n  ++p;\n  int res = 0;\n  if (isdigit(s[p])) res = number();\n  else {\n    vector<int> v;\n    while (s[p] != ']') {\n      v.push_back(expr());\n    }\n    sort(ALL(v));\n    res = accumulate(begin(v), begin(v) + ((int)v.size() + 1) / 2, 0);\n  }\n  ++p;\n  return res;\n}\nテ「ツ??\nint main() {\n  int Q;\n  cin >> Q;\n  while (Q--) {\n    cin >> s;\n    p = 0;\n    cout << expr() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//********rev 2;\n#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\n// data class\nclass D {\npublic:\n\tint n;\n\tint sets;\n\n\tlist<D*> child;\n\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n};\n\n// global var for input\nchar c[10002];\n\n// get inputs\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') { // if has datasets\n\t\t// loop for all sets\n\t\tlist<int> ilist;\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; // INFO: skip '['\n\t\t\t// INFO: rec.\n\t\t\tilist.push_back(get(dd, l));\n\t\t\t// add to childlen\n\t\t\td->child.push_back(dd);\n\t\t\t// inc. sets\n\t\t\td->sets++;\n\t\t\tl++; // INFO: skip ']'\n\t\t}\n\t\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\t\tauto iter = ilist.begin();\n\t\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\t\tsum += *iter;\n\t\t\titer++;\n\t\t}\n\t\td->n = sum;\n\t\treturn sum;\n\t} else { // if has NO datasets (== only num)\n\t\t// char[] to num\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num / 2 + 1;\n\t\treturn d->n;\n\t}\n}\n\n// solve from data\nint ans(D *d) {\n\tif (d->sets == 0) { //if has NO datasets\n\t\treturn d->n / 2 + 1; // min points for win\n\t}\n\t// else\n\t\n\t// function: conversion d with n\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\t// sort\n\td->child.sort(func);\n\t// get lowlevel answer list\n\t// lowlevel ans list\n\tlist <int> ilist;\n\t// iterator\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets; i++) {\n\t\tD *cur = *it;\n\t\tilist.push_back(ans(cur));\n\t\tit++;\n\t}\n\t// sort for min\n\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\n\t//get sum (== minpoints for win in thislevel)\n\tint sum = 0;\n\tauto iit = ilist.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tsum += *iit;\n\t\tiit++;\n\t}\n\treturn sum;\n}\n\n// solve\nvoid solve() {\n\tint n;\n\t// input dataset length\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\t// input dataset\n\t\tcin >> c;\n\t\tD *d = new D();\n\t\t// INFO: 1: skip first '['\n\t\tint l = 1;\n\t\t// string to dataobj;\n\t\tget(d, l);\n\t\t// get answer\n\t\t//cout << ans(d) << endl;\n\t\tcout << d->n << endl;\n\t\tdelete d;\n\t}\n}\n\n\n\n//----main----\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n\n#include \"bits/stdc++.h\"\n#define REP(i,a,b) for(i=a;i<b;++i)\n#define rep(i,n) REP(i,0,n)\n#define ll long long\n#define ull unsigned ll\ntypedef long double ld;\n#define ALL(a) (a).begin(),(a).end()\n#define ifnot(a) if(not a)\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\nusing namespace std;\n\nvoid reader(int &a) { scanf(\"%d\", &a); }\nvoid reader(double &a) { scanf(\"%lf\", &a); }\nvoid reader(char a[]) { scanf(\"%s\", a); }\nvoid reader(char &a) { scanf(\" %c\", &a); }\nvoid reader(ll &a) { scanf(\"%lld\", &a); }\nvoid reader(ull &a) { scanf(\"%llu\", &a); }\n// void reader(string& a){cin >> a;};\ntemplate<class T, class U> void reader(T& t, U& u) { reader(t); reader(u); }\ntemplate<class T, class U, class V> void reader(T& t, U& u, V& v) { reader(t); reader(u); reader(v); }\n\nvoid writer(const int a, char c) { printf(\"%d\", a); putchar(c); }\nvoid writer(const ll a, char c) { printf(\"%lld\", a); putchar(c); }\nvoid writer(const ull a, char c) { printf(\"%llu\", a); putchar(c); }\nvoid writer(const double a, char c) { printf(\"%.20lf\", a); putchar(c); }\nvoid writer(const char a[]) { printf(\"%s\", a); };\nvoid writer(const char a[], char c) { printf(\"%s\", a); putchar(c); };\nvoid writer(const char a, char c) { putchar(a); putchar(c); };\ntemplate<class T> void writerLn(T t) { writer(t, '\\n'); }\ntemplate<class T, class U> void writerLn(T t, U u) { writer(t, ' '); writer(u, '\\n'); }\ntemplate<class T, class U, class V> void writerLn(T t, U u, V v) { writer(t, ' '); writer(u, ' '); writer(v, '\\n'); }\ntemplate<class T> void writerArr(T x[], int n) { int i; if (!n) { putchar('\\n'); return; }rep(i, n - 1) writer(x[i], ' '); writer(x[n - 1], '\\n'); }\ntemplate<class T> void writerVec(vector<T> x) { int n = x.size(); int i; if (!n) { putchar('\\n'); return; }rep(i, n - 1) writer(x[i], ' '); writer(x[n - 1], '\\n'); }\n\nvector<string> split(const string &str, char sep) { vector<string> v; stringstream ss(str); string buffer; while (getline(ss, buffer, sep)) { v.push_back(buffer); }return v; }\n// #define int ll\nbool test = 1;\nint dx[] = { 0,1,0,-1 };\nint dy[] = { 1,0,-1,0 };\n#define MAX MAX000\n#define INF (1 << 28)\null mod = (int)1e9 + 7;\n//.....................\n\null dfs(string& s, int& i) {\n\tint j;\n\tvector<int> v;\n\tif (s[i] != '[') {\n\t\tint v = stoi(&s[0] + i);\n\t\t//dump(i);\n\t\t//dump(v);\n\t\twhile (s[i] != ']') i++;\n\t\treturn v / 2 + v % 2;\n\t}\n\twhile(s[i] == '[') {\n\t\t//dump(s.substr(i));\n\t\ti += 1;\n\t\tv.push_back(dfs(s, i));\n\t\ti += 1;\n\t}\n\t//cout << stoi(&s[0] + i) << endl;\n\tsort(ALL(v));\n\tint cnt = 0;\n\trep(j, v.size() / 2 + 1) {\n\t\tcnt += v[j];\n\t}\n\treturn cnt;\n}\nsigned main(void)\n{\n\tint i, j, k;\n\tint t;\n\tint loop;\n\tcin >> t;\n\trep(loop, t) {\n\t\tstring s;\n\t\ti = 0;\n\t\tcin >> s;\n\t\tcout << dfs(s, i) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \n#define loop(n, i) for(int i=0;i<n;i++)\n#define all(v) v.begin(),v.end()\n#define HERE cout << \"HERE: \" << __LINE__ << endl;\n#define INSP(v) cout << v << \" at \" << __LINE__ << endl;\n\nusing namespace std;\ntypedef long long ll;\n\nint solve(string line, int s, int t) {\n    if (line[s] != '[') {\n        return stoi(line.substr(s, t - s)) / 2 + 1;\n    }\n    vector<int> CS;\n    while (s < t) {\n        int ns = s + 1;\n        int bs = 1;\n        while (bs) {\n            s++;\n            if (line[s] == '[') bs++;\n            if (line[s] == ']') bs--;\n        }\n        CS.push_back(solve(line, ns, s));\n        s++;\n    }\n    sort(all(CS));\n    int ans = 0;\n    loop (CS.size() / 2 + 1, i) ans += CS[i];\n    return ans;\n}\n\nint main()\n{\n    int n; cin >> n;\n    while (n--) {\n        string line; cin >> line;\n        cout << solve(line, 1, line.size() - 1) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\nusing P   = pair<ll, ll>;\nusing mat = vector<vector<ll>>;\n\nvoid IOS() { ios::sync_with_stdio(false), cin.tie(0); }\n\nconst ll INF = 1e16;\nconst ll MOD = 1e9 + 7;\nconst ld EPS = 1e-12;\n\ntemplate <typename T>\nvoid dump(T x) { cout << x << endl; }\nvoid dumpf(ld x, int t) { cout << setprecision(t) << fixed << x << endl; }\ntemplate <typename A, size_t N, typename T>\nvoid Fill(A (&array)[N], const T &val) {\n\tfill((T *)array, (T *)(array + N), val);\n}\ninline ll mod(ll a, ll b) {\n\tif (a > 0) return a % b;\n\tif (a % b == 0) return 0;\n\tll x = -a / b + 1;\n\ta += x * b;\n\treturn a % b;\n}\nll powm(ll a, ll b, ll c) {\n\tif (b == 0)\n\t\treturn 1;\n\telse if (b % 2 == 0) {\n\t\tll d = powm(a, b / 2, c);\n\t\treturn (d * d) % c;\n\t} else\n\t\treturn (a * powm(a, b - 1, c)) % c;\n}\nll gcd(ll a, ll b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\n\n//ll dx[4] = {1, 0, -1, 0};\n//ll dy[4] = {0, 1, 0, -1};\n\nll rec(string s) {\n\tll n = s.size();\n\tif (s[1] != '[') {\n\t\tstring t = s.substr(1, n - 2);\n\t\treturn (stol(t) / 2 + 1);\n\t}\n\tll ans = 0, cnt = 0; // 和\n\tvector<ll> a;\n\tstring tmp = \"\";\n\tint state  = 0;\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tif (s[i] == '[' && state == 0) {\n\t\t\ttmp = \"[\";\n\t\t\tcnt++;\n\t\t\tstate++;\n\t\t} else if (s[i] == ']' && state == 1) {\n\t\t\ttmp = tmp + s[i];\n\t\t\ta.push_back(rec(tmp));\n\t\t\tstate--;\n\t\t} else {\n\t\t\ttmp = tmp + s[i];\n\t\t\tif (s[i] == '[') state++;\n\t\t\tif (s[i] == ']') state--;\n\t\t}\n\t}\n\tsort(a.begin(), a.end());\n\tfor (int i = 0; i < cnt / 2 + 1; i++) {\n\t\tans += a[i];\n\t\t//dump(a[i]);\n\t}\n\n\treturn ans;\n}\n\nint main() {\n\tIOS;\n\tll n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tdump(rec(s));\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring S;\nvector<long long> vals[100]; // 深さ d のところに一時格納する値たち\n\nlong long solve() {\n  for (int i = 0; i < 100; ++i) vals[i].clear();\n  int depth = 0;\n  int val = 0;\n  for (int i = 0; i < S.size(); ++i) {\n\tif (S[i] == '[') ++depth;\n\telse if (S[i] == ']') {\n\t  if (val) vals[depth].push_back((val+1)/2);\n\t  val = 0;\n\t  sort(vals[depth].begin(), vals[depth].end());\n\t  long long sum = 0;\n\t  for (int j = 0; j*2 < vals[depth].size(); ++j) sum += vals[depth][j];\n\t  vals[depth-1].push_back(sum);\n\t  vals[depth].clear();\n\t  --depth;\n\t}\n\telse {\n\t  val *= 10;\n\t  int c = (int)(S[i] - '0');\n\t  val += c;\n\t}\n  }\n  return vals[0][0];\n}\n\nint main() {\n  int N; cin >> N;\n  for (int i = 0; i < N; ++i) {\n\tcin >> S;\n\tcout << solve() << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <map>\n#include <vector>\n#include <set>\n#include <iomanip>\n#include <stack>\n#include <fstream>\n#include <cstdint>\n#include <cmath>\n#include <algorithm>\n#include <utility>\n#include <numeric>\n#include <functional>\n\nusing namespace std;\n\n\ntypedef int64_t ll;\n\n\nclass rect{\n    static const int inf = 100000;\npublic:\n    int sx, sy; // 始点 左上\n    int ex, ey; // 終点 右下\n    rect() :sx(inf), sy(inf), ex(), ey() {}\n    \n    void modify(const int& i, const int& j){\n        sx = min(i, sx);\n        sy = min(j, sy);\n        \n        ex = max(i, ex);\n        ey = max(j, ey);\n    }\n};\n\nbool is_real_over(char T, map<char, set<char>>& overs, set<char> pre){\n    for (auto && top : overs[T]) {\n        if(pre.count(top) > 0) {\n//            cerr << \"CROSS ERROrR\\n\";\n            return false;\n        }\n        pre.insert(top);\n        if(!is_real_over(top, overs, pre))  return false;\n    }\n    return true;\n\n}\n\n\nbool solve(){\n    int h, w;\n    cin >> h >> w;\n    vector<vector<char>> v;\n    map<char, rect> shapes;\n    for (int i = 0; i < h; ++i) {\n        v.push_back({});\n        for (int j = 0; j < w; ++j) {\n            char tmp;\n            cin >> tmp;\n            v[i].push_back(tmp);\n\n            if(tmp != '.')\n                shapes[tmp].modify(i, j);\n        }\n    }\n\n\n    // 矩形調査 yz\n    map<char, set<char>> overs;\n    for(auto && rec_pair: shapes){\n        auto && rec = rec_pair.second;\n        auto && rec_name = rec_pair.first;\n//        cerr << \"NAME:\" << rec_name << '\\n';\n        for (int i = rec.sx; i <= rec.ex; ++i) {\n            for (int j = rec.sy; j <= rec.ey; ++j) {\n                auto&& this_char = v[i][j];\n                if(this_char != rec_name){\n                    if(this_char == '.'){\n//                        cerr << \"SHAPE MISS\\n\";\n                        return false;\n                    }\n                    overs[rec_name].insert(this_char);\n                }\n            }\n        }\n    }\n    cerr << \"OVERS::\\n\";\n    for(auto && m : overs){\n        cerr << m.first << ':';\n        for(auto && t : m.second){\n            cerr << ' ' << t;\n        }\n        cerr << '\\n';\n    }\n\n    // 重なり調査\n    for(auto&& op: overs){\n        if(!is_real_over(op.first, overs, {op.first}))\n            return false;\n    }\n\n\n    return true;\n    \n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        cout << (!solve() ? \"SUSPICIOUS\" : \"SAFE\") << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <sstream>\nusing namespace std;\n\nstring str;\nstring::iterator it;\n\nint s2i(string s){\n  stringstream ss(s);\n  int x;\n  ss >> x;\n  return x/2 + 1;\n}\n\nint calc(){\n  int ans = 0;\n  ++it;\n  if(*it == '['){\n    vector<int> v;\n    while(*it == '['){\n      v.push_back(calc());\n    }\n    sort(v.begin(),v.end());\n    for(int i = 0 ; i < v.size()/2+1 ; i++){\n      ans += v[i];\n    }\n  }\n  else if(*it != ']'){\n    string ss = \"\";\n    while('0' <= *it && *it <= '9'){\n      ss += *it;\n      ++it;\n    }\n    ans = s2i(ss);\n  }\n  ++it;\n  \n  return ans;\n}\n\nint main(){\n  int n;\n\n  cin >> n;\n  while(n--){\n    cin >> str;\n    it = str.begin();\n    cout << calc() << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint n;\nstring s;\n\nint p;\nint calc()\n{\n  //cout << p << endl;\n  vector<int> vec;\n  while(1){\n    if(s[p] == '['){\n      p++;\n      vec.push_back(calc());\n      //p++;\n    }\n    else if(s[p] == ']'){\n      sort(vec.begin(), vec.end());\n      int ret = 0;\n      //for(int i = 0; i < vec.size(); i++) cout << vec[i] << \" \"; cout << endl;\n      for(int i = 0; i <= vec.size()/2; i++) ret += vec[i];\n      p++;\n      //cout << \"*\" << ret << endl;\n      return ret;\n    }\n    else{\n        int ret = 0;\n        while(s[p] != ']'){\n          ret *= 10;\n          ret += s[p] - '0';\n          p++;\n        }\n        p++;\n        //cout << \"@\" << ret/2+1 << endl;\n        return ret/2+1;\n    }\n  }\n}\n\nint main(void)\n{\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    cin >> s;\n    s += \"]\";\n    p = 0;\n    cout << calc() << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int ans[100], n, i;\n    string str;\n    \n    cin >> n;\n    getline(cin, str);\n    for (i = 0; i < n; i++) {\n        getline(cin, str);\n        int j = 0, k = 1, l = 1, array[100][100] = {{0}, {0}};\n        while (str[j] != '\\0') {\n            if (str[j] != '[' && str[j] != ']')\n                array[k][l] = array[k][l] * 10 + stoi(str.substr(j, 1));\n            if (str[j] == ']') {\n                cout << array[k][l] << ' ';\n                l++;\n                if (str[j+1] == ']') {\n                    cout << endl;\n                    j++;\n                    k++;\n                }\n            }\n            j++;\n        }\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n\n#define CK(N,A,B) (A<=N&&N<B)\n#define REP(i,a,b) for(int i=a;i<b;i++)\n#define RREP(i,a,b) for(int i=(b-1);a<=i;i--)\n#define F first\n#define S second\n#define ll long long\n\nconst int INF = 1e9;\nconst long long  LLINF = 1e15;\n\nusing namespace std;\n\nint N;\nstring S;\n\nint ind;\nint parse(){\n  int ret = 0;\n  if(S[ind] == '['){\n    vector<int> v;\n    ind++;\n    while(S[ind]!=']') v.push_back(parse());\n    ind++;\n    sort(v.begin(),v.end());\n    REP(i,0,v.size()/2+1) ret += v[i];\n  }else if(isdigit(S[ind])){\n    while(isdigit(S[ind])){\n      ret = 10*ret + (int)(S[ind] - '0');\n      ind++;\n    }\n    ret = ret/2 + 1;\n  }\n  return ret;\n}\n\nint main(){\n  cin>>N;\n  REP(i,0,N){\n    cin>>S;\n    ind=0;\n    cout<<parse()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i, a, n) for(ll i = ((ll) a); i < ((ll) n); i++)\nusing namespace std;\ntypedef long long ll;\n\nstring S;\nint i;\n\nll dfs() {\n  ll ret = 0;\n  i++;\n\n  if('0' <= S[i] && S[i] <= '9') {\n    while('0' <= S[i] && S[i] <= '9') {\n      ret = ret * 10 + (S[i] - '0');\n      i++;\n    }\n    ret = (ret + 1) / 2;\n  } else {\n    vector<ll> x;\n    while(S[i] == '[') x.push_back(dfs());\n    sort(x.begin(), x.end());\n    REP(j, 0, (x.size() + 1) / 2) ret += x[j];\n  }\n\n  i++;\n  return ret;\n}\n\nint main(void) {\n  ll N;\n  cin >> N;\n  REP(j, 0, N) {\n    cin >> S;\n    i = 0;\n    cout << dfs() << endl;\n  }\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\nusing namespace std;\n\nstring s;\nvector<int > consti;\nvector<int> ans_consti;\nint depth;\nint n;\nvoid depth_count(){\n\tint i = 0;\n\tdepth = -1;\n\twhile(s[i] == '['){\n\t\tdepth++;i++;\n\t}\n}\nvoid solve(int index,int now_depth){\n\twhile(index < s.size()){\n\t\tif(s[index] == '[' || s[index] == ']'){\n\t\t\tindex++;\n\t\t\tcontinue;\n\t\t}else{\n\t\t\tint first_index = index;\n\t\t\twhile(s[index] != ']'&&index < s.size()){\n\t\t\t\tif(s[index] == '['){index++;continue;}\n\t\t\t\tstring tmp_s;\n\t\t\t\tfor(int i=0;s[index+i] != ']';i++)tmp_s = tmp_s + s[index+i];\n\t\t\t\tindex += tmp_s.size() + 1;//]\n\t\t\t\tstringstream ss;\n\t\t\t\tss << tmp_s;\n\t\t\t\tint a;\n\t\t\t\tss >> a;\n\t\t\t\tconsti.push_back(a);\n\t\t\t}\n\t\t\tsort(consti.begin(),consti.end());\n\t\t\tint min_consti = 0;\n\t\t\tif(now_depth == 0)for(int i=0;i<consti.size()/2+1;i++)min_consti += consti[i]/2 + 1;\n\t\t\telse for(int i=0;i<consti.size()/2+1;i++)min_consti += consti[i];\n\t\t\tstringstream ss2;\n\t\t\tss2 << min_consti;\n\t\t\tstring min_s = ss2.str();\n\t\t\ts.erase(s.begin() + first_index-1,s.begin() + index);\n\t\t\tfor(int i=0;i<min_s.size();i++)\n\t\t\t\ts.insert(s.begin() + first_index - 1 + i,min_s[i]);\n\t\t\tindex = first_index + min_s.size();\n\t\t\tif(now_depth == depth-1)ans_consti = consti;\n\t\t\tconsti.clear();\n\t\t}\n\t}\n}\n\t\t\nint main(){\n\tcin >> n;\n\twhile(n--){\n\t\tcin >> s;\n\t\tdepth_count();\n\t\tfor(int i=0;i<depth;i++)solve(0,i);\n\t\tif(depth == 1){\n\t\ts.erase(remove(s.begin(),s.end(),'['),s.end());\n\t\ts.erase(remove(s.begin(),s.end(),']'),s.end());\n\t\tcout << s << endl;\n\t\t}else{\n\t\tint ans = 0;\n\t\tfor(int i = 0;i<ans_consti.size()/2 + 1;i++)\n\t\t\tans += ans_consti[i];\n\t\tcout << ans << endl;\n\t\t}\n\t\tconsti.clear();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<cstdlib>\n#include<stdio.h>\n#include<time.h>\n#include<math.h>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<list>\n#include<queue>\n#include<stack>\n#include<deque>\n#include<set>\n#include<map>\n#define REP(i, N) for(ll i = 0; i < N; ++i)\n#define FOR(i, a, b) for(ll i = a; i < b; ++i)\n#define ALL(a) (a).begin(),(a).end()\n#define pb push_back\n#define INF 1000000000\n#define MOD 1000000007\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> P;\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\nint qx[8] = {1, 1, 0, -1, -1, -1, 0, 1};\nint qy[8] = {0, 1, 1, 1, 0, -1, -1, -1};\n\nstring s;\n\nint stoit(const std::string& str, std::size_t* idx = nullptr, int base = 10) {\n\tconst char* p = str.c_str();\n\tchar* end;\n\terrno = 0;\n\tlong x = std::strtol(p, &end, base);\n\tif (p == end) {\n\t\tthrow std::invalid_argument(\"stoi\");\n\t}\n\tif (errno == ERANGE || x < INT_MIN || x > INT_MAX) {\n\t\tthrow std::out_of_range(\"stoi\");\n\t}\n\tif (idx != nullptr) {\n\t\t*idx = static_cast<std::size_t>(end - p);\n\t}\n\treturn static_cast<int>(x);\n}\n\nll cal(ll l, ll r) {\n\tvector<ll> h;\n\tll foo = 0;\n\tll bar = 0;\n\tFOR(i, l, r) {\n\t\tif(s[i] == '[') {\n\t\t\tfoo = 0;\n\t\t\tbar = 0;\n\t\t\tll hoge = i + 1;\n\t\t\tFOR(j, i + 1, r) {\n\t\t\t\ti = j;\n\t\t\t\tif(s[j] == '[') {\n\t\t\t\t\t++foo;\n\t\t\t\t\t++bar;\n\t\t\t\t}\n\t\t\t\tif(s[j] == ']') {\n\t\t\t\t\tif(foo > 0) --foo;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(bar == 0) {\n\t\t\t\t\t\t\th.pb(stoit(s.substr(hoge, j - hoge)) / 2 + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\th.pb(cal(hoge, j));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tsort(ALL(h));\n\tll ans = 0;\n\tREP(i, min(h.size(), h.size() / 2 + 1)) {\n\t\tans += h[i];\n\t}\n\treturn ans;\n}\n\nint main(void) {\n\tll n;\n\tcin>>n;\n\tREP(i, n) {\n\t\tcin>>s;\n\t\tcout<<cal(1, s.size() - 1)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define INF 1e18\n#define int long long\n#define Rep(i, a, n) for (int i = (a); i < (n); i++)\n#define rep(i, n) Rep(i, 0, n)\n#define all(a) (a).begin(), (a).end()\nusing namespace std;\ntypedef pair<int, int> P;\ntypedef pair<int, P> PP;\nconst int mod = 1000000007;\n//const int mod = 998244353;\n\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n\n    int q;\n    cin >> q;\n    while (q--)\n    {\n        string s;\n        cin >> s;\n        queue<int> que[100];\n        int pos = 0, depth = 0;\n        for (int i = 0; i < s.size(); i++)\n        {\n            if (s[i] == '[')\n                depth++;\n            else if (s[i] == ']')\n            {\n                vector<int> v;\n                while (!que[depth].empty())\n                {\n                    int n = que[depth].front();\n                    que[depth].pop();\n                    v.push_back(n);\n                }\n                sort(all(v));\n                int sum = 0;\n                rep(i, (v.size() + 1) / 2) sum += v[i];\n                que[depth - 1].push(sum);\n                depth--;\n                //cout << sum << endl;\n            }\n            else\n            {\n                int num = 0;\n                while ('0' <= s[i] && s[i] <= '9')\n                {\n                    int n = s[i] - '0';\n                    num = 10 * num + n;\n                    i++;\n                }\n                i--;\n                //cout << num << \" \" << depth << endl;\n                que[depth].push((num + 1) / 2);\n            }\n        }\n        cout << que[0].front() << endl;\n        //return 0;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<math.h>\n#include<algorithm>\n#include<utility>\n#include<queue>\n#include<string.h>\n#include<string>\n#include<set>\n#include<map>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> P;\nint n;\nstring s;\nint p=0;\nint Solve(){\n    vector<int> v;\n    if(s[p]=='['){//最初が[だった場合\n        while(s[p]=='['){\n            p++;\n            v.push_back(Solve());\n            p++;\n        }\n        sort(v.begin(),v.end());\n        int ans=0;\n        for(int i=0;i<(v.size()+1)/2;i++){\n            ans+=v[i];\n        }\n        return ans;\n    }else{//最初が数字だった場合\n        int l=p;\n        for(;s[p]!=']';p++);\n        return (stoi(s.substr(l,p-l))+1)/2;\n    }\n}\n\nint main(){\n    cin>>n;\n    while(n>0){\n        cin>>s;\n        p=0;\n        cout<<Solve()<<endl;\n        n--;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nstring s;\n\nll to_ll(string str){\n  stringstream ss;\n  ll res;\n  ss << str;\n  ss >> res;\n  return res;\n}\n\nll solve(int n){\n  if(s[n+1] != '['){\n    int end = n;\n    while(s[end] != ']')++end;\n    return (to_ll(s.substr(n+1,end-n-1)))/2 + 1;\n  }else{\n    int b = 0,p = n+1;\n    vector< ll > v;\n    while(b >= 0){\n      if(b == 0 && s[p] == '['){\n\tll tmp = solve(p);\n\tv.push_back(tmp);\n      }\n      if(s[p] == '[')++b;\n      else if(s[p] == ']')--b;\n      ++p;\n    }\n    int size = (int)v.size();\n    sort(v.begin(),v.end());\n    ll res = 0;\n    for(int i = 0;i < (size+1)/2;++i){\n      res += v[i];\n    }\n    return res;\n  }\n}\n\nint main(void){\n  int n;\n  cin >> n;\n  for(int i = 0;i < n;++i){\n    cin >> s;\n    cout << solve(0) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\nint parser()\n{\n\tint temp, res;\n\tchar ch = getchar();\n\tvector<int> v;\n\tif (ch == '[') {\n\t\twhile ((ch = getchar()) != ']') {\n\t\t\tungetc(ch,stdin);\n\t\t\tv.push_back(parser());\n\t\t}\n\t\tsort(v.begin(),v.end());\n\t\tres = 0;\n\t\tfor (int i = 0; i < (v.size() + 1) / 2; i++)\n\t\t\tres += v[i];\n\t\treturn res;\n\t}\n\telse if (isdigit(ch)) {\n\t\tungetc(ch, stdin);\n\t\tcin >> temp;\n\t\treturn (temp + 1) / 2;\n\t}\n\telse\n\t\treturn -1;\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tgetchar();\n\tfor (int i = 0; i < n; i++) {\n\t\tcout << parser() << endl;\n\t\tif(i < n - 1)\n\t\t\tgetchar();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nint list[1000000];\nstringstream sss;\nvoid dfs(string str,int max);\nint main(){\n  int n,max,no,cnt,j;\n  string str,ss;\n  cin >> n;\n  while(n--){\n    sss.str(\"\");\n    max = cnt = 0;\n    cin >> str;\n    for(int i=0;i < str.size();i++){\n      if(str[i]=='['){\n\tcnt++;\n\tif(max<cnt)max=cnt;\n      } else if(str[i]==']') cnt--;\n      else {\n\tfor(j=i;str[j]!=']';j++);\n\tss = str.substr(i,j-i);\n\tno = atoi(ss.c_str());\n\tsss << (no/2+1);\n\tss = sss.str();\n\tstr.erase(i,j-i);\n\tstr.insert(i,ss);\n\ti= i+ss.size()-1;\n\tsss.str(\"\");\n      }\n    }\n    dfs(str,max);\n  }\n}\nvoid dfs(string str,int max){  //文字列,段階\n  int len = 0,cnt,x,l = str.size(),j,sum = 0;\n  string ss;\n  for(x=cnt=0;cnt != max && x < l;x++){\n    if(str[x]=='[') cnt++;\n    else if(str[x]==']') cnt--;\n  }\n  if(x == l){\n    dfs(str,max-1);\n    return;\n  }\n  x--;\n  for(int i=x,flg=0;i < l;i++){\n    if(str[i]>='0' && str[i] <= '9'){\n      for(j=i;str[j]!=']';j++);\n      ss = str.substr(i,j-i);\n      list[len] = atoi(ss.c_str());\n      i = j,len++;\n    } else if(str[i]==']') flg--;\n    if(flg==-1){\n      str.erase(x,i-x);\n      break;\n    }\n  }\n  sort(list,list + len);\n  for(int i=0;i<len/2+1;i++) sum += list[i];\n  sss << sum; ss = sss.str();\n  str.insert(x,ss);\n  sss.str(\"\");\n  if(max==2){\n    l=str.size();\n    for(int i=1;i<l-1;i++) cout << str[i];\n    cout << endl;\n    return;\n  }\n  dfs(str,max);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <string>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nint rec(string s, int l, int r) {\n    if (s[l+1] != '[') {\n        int x = stoi(s.substr(l+1,l-r-2));\n        x = ceil(x/2.0);\n        return x;\n    }\n    \n    vector<int> t;\n    int c = 0, tl, tr;\n    for (int i = l; i < r; i++) {\n        if (s[i] == '[') {\n            c++;\n            if (c == 2) tl = i;\n        }\n        else if (s[i] == ']') {\n            c--;\n            if (c == 1) {\n                tr = i;\n                t.push_back(rec(s,tl,tr+1));\n            }\n        }\n    }\n    int k = ceil(t.size()/2.0);\n    sort(t.begin(), t.end());\n    int sum = 0;\n    for (int i = 0; i < k; i++) sum += t[i];\n    \n    return sum;\n}\n\nint main(void){\n    int n;\n    cin >> n;\n    while (n--) {\n        string s;\n        cin >> s;\n        cout << rec(s,0,s.size()) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<cstdlib>\n#include<stdio.h>\n#include<time.h>\n#include<math.h>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<list>\n#include<queue>\n#include<stack>\n#include<deque>\n#include<set>\n#include<map>\n#define REP(i, N) for(ll i = 0; i < N; ++i)\n#define FOR(i, a, b) for(ll i = a; i < b; ++i)\n#define ALL(a) (a).begin(),(a).end()\n#define pb push_back\n#define INF 1000000000\n#define MOD 1000000007\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> P;\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\nint qx[8] = {1, 1, 0, -1, -1, -1, 0, 1};\nint qy[8] = {0, 1, 1, 1, 0, -1, -1, -1};\n\nstring s;\n\nll cal(ll l, ll r) {\n\tvector<ll> h;\n\tll foo = 0;\n\tll bar = 0;\n\tFOR(i, l, r) {\n\t\tif(s[i] == '[') {\n\t\t\tfoo = 0;\n\t\t\tbar = 0;\n\t\t\tll hoge = i + 1;\n\t\t\tFOR(j, i + 1, r) {\n\t\t\t\ti = j;\n\t\t\t\tif(s[j] == '[') {\n\t\t\t\t\t++foo;\n\t\t\t\t\t++bar;\n\t\t\t\t}\n\t\t\t\tif(s[j] == ']') {\n\t\t\t\t\tif(foo > 0) --foo;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(bar == 0) {\n\t\t\t\t\t\t\th.pb(stoi(s.substr(hoge, j - hoge)) / 2 + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\th.pb(cal(hoge, j));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tsort(ALL(h));\n\tll ans = 0;\n\tREP(i, min(h.size(), h.size() / 2 + 1)) {\n\t\tans += h[i];\n\t}\n\treturn ans;\n}\n\nint main(void) {\n\tll n;\n\tcin>>n;\n\tREP(i, n) {\n\t\tcin>>s;\n\t\tcout<<cal(1, s.size() - 1)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <numeric>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int,int> PII;\ntypedef vector<PII> VPII;\n\n#define REP( i, m, n ) for( int i = (int)( m ); i < (int)( n ); ++i )\n#define FOR( v, c ) for( auto &v : c )\n#define ALL( c ) (c).begin(), (c).end()\n\n#define PB( n ) push_back( n )\n#define MP( a, b ) make_pair( a, b )\n#define EXIST( c, e ) ( (c).find( e ) != (c).end() )\n\n#define fst first\n#define snd second\n\nPII expression( const string &, int );\nPII numbers( const string &, int );\n\nPII expression( const string &s, int p = 0 )\n{\n\tif ( s[p] == '[' )\n\t{\n\t\tVI res;\n\t\tPII r = expression( s, p + 1 );\n\t\tres.PB( r.fst );\n\t\tr.snd ++; // skip ']'\n\t\twhile ( s[ r.snd ] == '[' )\n\t\t{\n\t\t\tPII r_ = expression( s, r.snd + 1 );\n\t\t\tres.PB( r_.fst );\n\t\t\tr.snd = r_.snd + 1;\n\t\t}\n\n\t\tsort( ALL( res ) );\n\t\tint resvalue = accumulate( res.begin(), res.begin() + res.size() / 2 + 1, 0 );\n\t\treturn MP( resvalue, r.snd );\n\t}\n\telse\n\t{\n\t\treturn numbers( s, p );\n\t}\t\t\n}\n\n\nPII numbers( const string &s, int p = 0 )\n{\n\tint res = 0;\n\twhile ( '0' <= s[p] && s[p] <= '9' )\n\t{\n\t\tres *= 10;\n\t\tres += s[ p++ ] - '0';\n\t}\n\n\treturn MP( res / 2 + 1, p );\n}\n\n\n\t\nint main()\n{\n\tint n;\n\tcin >> n;\n\n\tREP( i, 0, n )\n\t{\n\t\tstring line;\n\t\tcin >> line;\n\n\t\tcout << expression( line ).fst << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint func( std::string str, int &i )\n{\n\tstd::vector<int> data;\n\ti++;\n\tif ( str[i] == '[' ) {\n\t\tdo { \n\t\t\tdata.push_back(func(str, i));\n\t\t} while(str[i] != ']');\n\t\t++i;\n\t} else {\n\t\tint j = i;\n\t\tfor (; str[j] != ']'; j++);\n\t\tj--;\n\t\tstd::string num = str.substr(i, j - i + 1);\n\t\t//std::cout << num << std::endl;\n\t\ti = j + 2;\n\t\treturn std::stoi(num)/2 + 1;\n\t}\n\n//\tstd::vector<int> perm(data.size(), 0);\n//\tfor ( int i = 0; i < data.size() / 2 + 1; ++i ) {\n//\t\tperm[i] = 1;\n//\t}\n//\n//\tint min = 0xfffffff;;\n//\tdo{\n//\t\tint a = 0;\n//\t\tfor ( int i = 0; i < data.size(); ++i ) {\n//\t\t\tif ( perm[i] == 1 ) {\n//\t\t\t\ta += data[i];\n//\t\t\t}\n//\t\t}\n//\t\tif ( min > a )  min = a;\n//\t} while(std::prev_permutation(perm.begin(), perm.end()));\n\tint min = 0;\n\tstd::sort(data.begin(), data.end());\n\tfor ( int i = 0;i < data.size() / 2 + 1; ++i ) {\n\t\tmin += data[i];\n\t}\n\n\treturn min;\n\n}\n\nint main()\n{\n\tint N;\n\n\tstd::cin >> N;\n\n\tfor ( int i = 0; i < N; ++i ) {\n\t\tstd::string str;\n\t\t//std::getline(std::cin, str);\n\t\tstd::cin >> str;\n\n\t\tint j = 0;\n\t\tstd::cout << func(str, j) << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <bitset>\n#include <map>\n#include <tuple>\n#include <unordered_set>\n#include <unordered_map>\n#include <list>\n#include <numeric>\n#include <utility>\n#include <iterator>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <random>\n#include <cstring>\n\n#define rep(i,n) for(int i=0;i<int(n);i++)\n#define all(x) (x).begin(),x.end()\n#define pb push_back\n\nusing namespace std;\nusing ll = long long;\n\n\nconst ll mod = 1000000007;\n\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nint ddx[8]={-1,-1,0,1,1,1,0,-1};\nint ddy[8]={0,1,1,1,0,-1,-1,-1};\n// bool debug=false;\n\n/*---------------------------------------------------*/\n\nint to_number(int& i, string& s) {\n  int number = 0;\n  while(isdigit(s[i])) {\n    number = number * 10 + (s[i] - '0');\n    i++;\n  }\n  return number;\n}\n\nstring init(string s) {\n  string ret = \"\";\n  for(int i = 0; i < s.size(); i++) {\n    if(isdigit(s[i])) {\n      ret += to_string((to_number(i, s) + 1) / 2);\n      i--;\n    } else {\n      ret += s[i];\n    }\n  }\n  return ret;\n}\n\nint simulate(int& i, string& s) {\n  vector<int> vec;\n  for(; i < s.size(); i++) {\n    if(isdigit(s[i])) {\n      int ret = 0;\n      while(isdigit(s[i])) {\n\tret = ret * 10 + (s[i] - '0');\n\ti++;\n      }\n      vec.push_back(ret);\n      i--;\n    }else if(s[i] == ']' && s[i + 1] == ']') break;\n  }\n  sort(all(vec));\n  int sum = 0;\n  for(int j = 0; j < (vec.size() + 1) / 2; j++) {\n    sum += vec[j];\n  }\n  return sum;\n}\n\nvoid solve(string s) {\n  s = init(s);\n  while(1) {\n    // cout << s << endl;\n    if(s[2] != '[') break;\n    string ss = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      if(isdigit(s[i])){\n        ss += \"[\";\n\tss += to_string(simulate(i, s));\n\t// cout << \"i: \" << ss << endl;\n\t ss += \"]\";\n\ti++;\n      } else if(i + 1 < s.size() && isdigit(s[i + 1])) {\n\tss.pop_back();\n\tcontinue;\n      } else {\n\tss += s[i];\n      }\n    }\n    s = ss;\n  }\n\n  int i = 0;\n  for(; ; i++) if(isdigit(s[i])) break;\n  cout << simulate(i, s) << endl;;\n}\n\nint main() {\n  int N;\n  cin >> N;\n  \n  for(int i = 0; i < N; i++) {\n    string s;\n    cin >> s;\n    solve(s);\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "//階層型→木→フラクタル→再帰\n//深さを管理しつつのfor文とかやると死にそう.投票数[深さ][地区の番号]とかね。\n//括弧の整合性は見なくてよさそう\n\n//なぜかバグっている\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<string.h>\n#include<stdio.h>\nusing namespace std;\ntypedef pair<int,int> PI;//投票数,カーソル末尾\nchar s[10010];\n\nclass Solver{\npublic:\n\t\n\tPI solve( int st, int ed, int dep=0 ){\n\t\tint i;\n\t\tint num=0;\n\t\tvector<int> tohyo;\n\t\tPI ret = PI(0,0);\n\t\tint cnt = 0;\n\t\t\n\t\tfor( i = st; i < ed; i++ ){\n\t\t\tif( '0' <= s[i] && s[i] <= '9' ){\n\t\t\t\tnum *= 10;\n\t\t\t\tnum += s[i]-'0';\n\t\t\t}\n\t\t\tif( s[i] == '[' ){\n\t\t\t\tcnt++;\n\t\t\t\tPI res =  solve( i+1, ed, dep+1 );\n\t\t\t\ttohyo.push_back( res.first );\n\t\t\t\ti = res.second;\n\t\t\t}\n\t\t\tif( s[i] == ']' ){\n\t\t\t\tcnt--;\n\t\t\t\tif( cnt < 0 ){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif( tohyo.size() == 0 ){\n\t\t\t//printf(\"st=%d   ed=%d   ret=%d\\n\",st,ed,num/2+1);\n\t\t\treturn PI( num/2+1, i );\n\t\t}\n\t\tsort( tohyo.begin(), tohyo.end() );\n\t\tret.second = i;\n\t\t\n\t\t//printf(\"st=%d ed=%d dep=%d size=%d\\n\",st,ed,dep,tohyo.size());\n\t\tfor( i = 0; i < tohyo.size()/2 + 1; i++ ){\n\t\t\tret.first += tohyo[i];\n\t\t}\n\t\t//printf(\"st=%d   ed=%d   ret=%d\\n\",st,ed,ret.first);\n\t\treturn ret;\n\t}\n};\n\nSolver test[101];\nint main(){\n\tint i;\n\tint n;\n\n\tcin >> n;\n\tfor( i = 0; i < n; i++ ){\n\t\tcin >> s;\n\t\tPI res = test[i].solve(0,strlen(s) );\n\t\tcout << res.first << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nstring str;\nint pos=0;\n\nint read_num(){\n//\tcout<<\"num \"<<pos<<endl;\n\tint res=0;\n\twhile(isdigit(str[pos])){\n\t\tres*=10;\n\t\tres+=str[pos]-'0';\n\t\tpos++;\n\t}\n//\tcout<<\"return :\"<<res<<endl;\n\treturn res;\n}\n\nint read_block(){\n//\tcout<<pos<<endl;\n\tvector<int> work;\n\tif(isdigit(str[pos])){\n\t\tint res=read_num()/2+1;\n\t\tpos++;\n\t\treturn res;\n\t}\n\twhile(pos<str.length() && str[pos]!=']'){\n//\t\tcout<<pos<<endl;\n\t\tif(str[pos]=='['){\n\t\t\tpos++;\n\t\t\tint got = read_block();\n\t\t\twork.push_back(got);\n//\t\t\tcout<<\"push \"<<got<<endl;\n\t\t}\n\t\telse{\n\t\t\tcout<<pos<<\": error?\"<<endl;\n\t\t}\n\t}\n\tsort(work.begin(),work.end());\n\tint res=0;\n\tfor(int i=0;i<work.size()/2+1;i++){\n\t\tres+=work[i];\n\t}\n//\tcout<<pos<<\": \"<<res<<endl;\n\tpos++;\n\treturn res;\n}\n\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>str;\n\t\tpos=0;\n\t\tpos++;\n\t\tcout<<read_block()<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <cctype>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n#define loop(i,a,b) for(int i=(a); i<int(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define all(c) (c).begin(), (c).end()\n\nchar const op='[';\nchar const cl=']';\ntypedef vector<int> vi;\n#define isd isdigit\n\nnamespace std {\n  ostream& operator<<(ostream& os, const vi& v){\n    rep(i,v.size()){\n      os << v[i] << \" \";\n    }\n    return os;\n  }\n}\n\n\nint get(int & i, string s){\n  int res = 0;\n  while(isd(s[i])){\n    res*=10;\n    res+=s[i]-'0';\n    i++;\n  }\n  return res;\n}\n\nstring tos(int i){\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nvi parse(string s){\n  vi res;\n  int n = s.size();\n  for(int i=0; i<s.size();i++){\n    if(isdigit(s[i])){\n      int t=get(i,s);\n      res.push_back(t);\n    }\t\n  }\n  // rep(i,res.size()){\n  //   cout << res[i] << \" \";\n  // }  cout << endl;\n  return res;\n}\n\nint solve(string s){\n  int n =s.size();\n    bool begin = true;\n  while(1){\n    for(int i=0; i+2<s.size(); i++){\n      string sss = \"[\";\n      if(s[i]==op && s[i+1]==op && isdigit(s[i+2])){\n\tint j=0;\n\twhile(!(isd(s[i+2+j]) && s[i+2+j+1]==cl && s[i+2+j+2]==cl)){\n\t  j++;\n\t}\n\n\tvi c = parse(s.substr(i+1,j+3));\n\tsort(all(c));\n\tint k=0;\n\tif(begin){\n\t  rep(x,(c.size()+1)/2){\n\t    if(c[x]%2 == 0) k+=c[x]/2+1;\n\t    else k+=(c[x]+1)/2;\n\t  }\n\t} else {\n\t  rep(x,(c.size()+1)/2){\n\t    k+=c[x];\n\t  }\n\t}\n\tsss+= tos(k);\n\ts.replace(i, j+4, sss);\n      }\n    }\n    begin = false;\n    // cout << s << endl;\n    if(s[2]!=op){\n      int ans = 0;\n      vi v = parse(s);\n      sort(all(v));\n      rep(i,v.size()/2+1){\n\tans += v[i];\n      }\n      return ans;\n    }\n  }\n  int i=1;\n  return get(i,s);\n\n}\n\nint main(){\n  int n;\n  cin>>n;\n  rep(i,n){\n    string s; cin>>s;\n    cout << solve(s) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nchar str[1 << 16];\n\ninline int maj(int a)\n{\n\treturn a / 2 + 1;\n}\n\nint calc(char *s, char *e)\n{\n\t/*\n\tfor (char *p = s; p != e; p++){\n\t\tprintf(\"%c\", *p);\n\t}\n\tputs(\"\");\n\t*/\n\t\n\tif (*s != '['){\n\t\treturn maj(atoi(s));\n\t}\n\t\n\tvector<int> v;\n\t\n\tchar *p = s;\n\twhile (p != e){\n\t\tchar *a = p;\n\t\tchar *b = p;\n\t\tint cnt = 0;\n\t\twhile (true){\n\t\t\tif (*b == '[') cnt++;\n\t\t\tif (*b == ']') cnt--;\n\t\t\tif (cnt == 0) break;\n\t\t\tb++;\n\t\t}\n\t\tv.push_back(calc(a + 1, b));\n\t\tp = b + 1;\n\t}\n\t\n\tint res = 0;\n\tsort(v.begin(), v.end());\n\tfor (int i = 0; i < maj(v.size()); i++){\n\t\tres += v[i];\n\t}\n\t\n\treturn res;\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++){\n\t\tscanf(\"%s\", str);\n\t\tchar *e = str + strlen(str);\n\t\tprintf(\"%d\\n\", calc(str, e));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\nusing namespace std;\n#define int long long\n\nstring s;\nint p;\nbool is_first;\n\nint dfs() {\n  vector<int> v;\n  while (p < s.size()) {\n    if (s[p] == '[') {\n      is_first = true;\n      p++;\n      int tmp = dfs();\n      v.push_back(tmp);\n    } else if (s[p] == ']') {\n      p++;\n      sort(v.begin(), v.end());\n      int res = 0;\n      if (is_first) {\n        for (int i = 0; i < v.size() / 2 + 1; i++) {\n          res += v[i] / 2 + 1;\n        }\n      } else {\n        for (int i = 0; i < v.size() / 2 + 1; i++) {\n          res += v[i];\n        }\n      }\n      is_first = false;\n      return res;\n    } else {\n      int figure = 0;\n      while (s[p] != ']') {\n        figure *= 10;\n        figure += s[p] - '0';\n        p++;\n      }\n      p++;\n      return figure;\n    }\n  }\n  return v[0];\n}\n\nsigned main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    p = 0;\n    cout << dfs() << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\nclass D {\npublic:\n\tint sets;\n\tint n;\n\tlist<D*> child;\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n\t~D() {\n\t}\n};\n\nchar c[BUFSIZ];\n\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') {\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; //'['\n\t\t\tsum += get(dd, l);\n\t\t\td->child.push_back(dd);\n\t\t\td->sets++;\n\t\t\tl++; //']'\n\t\t}\n\t\td->n = sum;\n\t} else {\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num;\n\t\treturn num;\n\t}\n\treturn sum;\n}\n\nint ans(D *d) {\n\t//cout << \"in\" << endl;\n\tif (d->sets == 0) {\n\t\t//cout << \"okk\" << endl;\n\t\treturn d->n / 2 + 1;\n\t}\n\t//else\n\tint sum = 0;\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\td->child.sort(func);\n\t//cout << \"sets::\" << d->sets << endl;\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tD *cur = *it;\n\t\t//cout << i << \":::\" << cur->n << endl;\n\t\tsum += ans(cur);\n\t\tit++;\n\t}\n\treturn sum;\n}\n\n\t\nvoid solve() {\n\tint n;\n\tint l;\n\tcin >> n;\n\tcout << n << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> c;\n\t\t//cout << c << endl;\n\t\tD *d = new D();\n\t\tl = 1;\n\t\tget(d, l);\n\t\tcout << ans(d) << endl;\n\t\t//cout << \"hoge\" << endl;\n\t\tdelete d;\n\t}\n}\n\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cassert>\n#define repeat_from(i,m,n) for (int i = (m); (i) < (n); ++(i))\n#define repeat(i,n) repeat_from(i,0,n)\nusing namespace std;\nint solve(int & i, string const & s) {\n    if (s[i] == '[') {\n        vector<int> ns;\n        i += 1;\n        while (s[i] != ']') {\n            ns.push_back(solve(i,s));\n        }\n        i += 1;\n        int n = 0;\n        sort(ns.begin(), ns.end());\n        repeat (j,(ns.size()+1)/2) {\n            n += ns[j];\n        }\n        return n;\n    } else {\n        assert ('0' <= s[i] and s[i] <= '9');\n        int n = 0;\n        while (s[i] != ']') {\n            n *= 10;\n            n += s[i] - '0';\n            i += 1;\n        }\n        return (n+1) / 2;\n    }\n}\nint main() {\n    int testcase_num; cin >> testcase_num;\n    repeat (testcase,testcase_num) {\n        string s; cin >> s;\n        int i = 0;\n        cout << solve(i,s) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nchar str[11000];\nvector<int>li[10000];\nint cur;\nint calc(int a){\n\t//printf(\"%d %d\\n\",a,cur);fflush(stdout);\n\tint ret=0;\n\tif(str[cur]>='0'&&str[cur]<='9'){\n\t\twhile(str[cur]>='0'&&str[cur]<='9'){\n\t\t\tret*=10;\n\t\t\tret+=str[cur]-'0';\n\t\t\tcur++;\n\t\t}\n\t\treturn (ret+1)/2;\n\t}\n\tli[a].clear();\n\twhile(str[cur]=='['){\n\t\tcur++;\n\t\tli[a].push_back(calc(a+1));\n\t\tcur++;\n\t}\n\tstd::sort(li[a].begin(),li[a].end());\n\tfor(int i=0;i<(li[a].size()+1)/2;i++)ret+=li[a][i];\n\treturn ret;\n}\nint main(){\n\tint a;\n\tscanf(\"%d\",&a);\n\twhile(a--){\n\t\tscanf(\"%s\",str);\n\t\tcur=0;\n\t\tprintf(\"%d\\n\",calc(0));\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nclass Solve {\nprivate:\n\tstd::string str;\n\tint str_i{};\n\tlong long rc()\n\t{\n\t\tstr_i++;\n\t\tif ('0' <= str[str_i] && str[str_i] <= '9')\n\t\t{\n\t\t\tlong long ret{};\n\t\t\twhile (str[str_i] != ']')\n\t\t\t{\n\t\t\t\tret = 10 * ret + str[str_i] - '0';\n\t\t\t\tstr_i++;\n\t\t\t}\n\t\t\tstr_i++;\n\t\t\treturn (ret + 1) / 2;\n\t\t}\n\t\tstd::priority_queue<long long, std::vector<long long>, std::greater<long long>> pq;\n\t\twhile (str[str_i] != ']')\n\t\t\tpq.push(rc());\n\t\tstr_i++;\n\t\tint num{((int)pq.size() + 1) / 2};\n\t\tlong long sum{};\n\t\tfor (int i{}; i < num; i++)\n\t\t{\n\t\t\tsum += pq.top();\n\t\t\tpq.pop();\n\t\t}\n\t\treturn sum;\n\t}\npublic:\n\tSolve()\n\t{\n\t\tstd::cin >> str;\n\t\tprintf(\"%lld\\n\", rc());\n\t}\n};\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i{}; i < n; i++)\n\t\tSolve();\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iomanip>\n#include <utility>\n#include <cstdlib>\n#include <sstream>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <ctime>\n#include <queue>\n#include <deque>\n#include <cmath>\n#include <stack>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define REP(i,m,n) for(int i=(m);i<(n);i++)\n#define ALL(a)  (a).begin(),(a).end()\n#define pb push_back\n#define sz size()\n\n\n\nstring pre(string s){   // \"][\" を空白に置き換え\n    string b=\"\";\n    rep(i,s.sz-1){\n        if(s[i]==']' && s[i+1]=='['){\n            b+=' ';\n            i++;\n        }\n        else{\n            b+=s[i];\n        }\n    }\n    b+=s[s.sz-1];\n    return b;\n}\n\n\nstring solve(int n,bool check,string s){\n    n++;\n    string tmp[10000]={};\n\n    int count=0;\n    REP(j,n,s.sz){\n        if(s[j]!=']'){\n            if(s[j]!=' '){\n                tmp[count]+=s[j];\n            }\n            else{\n                count++;\n            }\n        }\n        else break;\n    }\n    vi a;\n    rep(i,count+1){\n        a.pb(stoi(tmp[i]));\n    }\n    sort(ALL(a));\n    \n    int sum=0;\n    rep(i,count/2+1){\n        if(check==false)\n            sum+=a[i]/2+1;\n        else\n            sum+=a[i];\n    }\n    return to_string((sum));\n}\n\n\nstring delSpace(string s){  // \"] [\" を \"][\" に置き換え\n    string ret=\"\";\n    rep(i,s.sz-2){\n        if(s[i]==']' && s[i+1]==' ' && s[i+2]=='['){\n            ret+=\"][\";\n            i+=2;\n        }\n        else{\n            ret+=s[i];\n        }\n    }\n    ret+=s[s.sz-2];\n    ret+=s[s.sz-1];\n    return ret;\n}\n\n\nint main(){\n    int t;\n    cin>>t;\n    \n    rep(times,t){\n        string s;\n        cin>>s;\n        int check=false;\n        s=pre(s);\n        while(1){\n            if(s.find(\"[\",0)==-1)break;\n\n            string n=\"\";\n    \n            rep(i,s.sz){\n                if(s[i+1]>='0' && s[i+1]<='9'){\n                    n+=solve(i,check,s);\n                    while(s[i]!=']')i++;\n                }\n                else{\n                    n+=s[i];\n                }\n            }\n            s=n;\n            check=true;\n        }\n        cout<<s<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nll StoLL(string s){\n  stringstream ss(s);\n  ll res;\n  ss >> res;\n  return res;\n}\n\nstring s;\nll parse(int l, int r){\n  if(s[l]!='['){\n    return StoLL(s.substr(l,r-l))/2 + 1;\n  }\n\n  vector<ll> ans;\n  int k = 0, prv = l;\n  for(int i=l;i<r;i++){\n    if(s[i] == '[')k++;\n    if(s[i] == ']')k--;\n    if(k==0){\n      ans.push_back(parse(prv+1,i));\n      prv = i+1;\n    }\n  }\n\n  sort(ans.begin(),ans.end());\n  ll res = 0;\n  for(int i=0;i<=(int)ans.size()/2;i++)res += ans[i];\n  return res;\n}\n      \nint main(){\n  int n;\n  cin >> n;\n  while(n--){\n    cin >> s;\n    cout << parse(1,s.size()-1) << endl;\n  }\n}\n\t "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\nclass D {\npublic:\n\tint sets;\n\tint n;\n\tlist<D*> child;\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n\t~D() {\n\t}\n};\n\nchar c[10002];\n\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') {\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; //'['\n\t\t\tsum += get(dd, l);\n\t\t\td->child.push_back(dd);\n\t\t\td->sets++;\n\t\t\tl++; //']'\n\t\t}\n\t\td->n = sum;\n\t} else {\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\td->n = num;\n\t\treturn num;\n\t}\n\treturn sum;\n}\n\nint ans(D *d) {\n\t//cout << \"in\" << endl;\n\tif (d->sets == 0) {\n\t\t//cout << \"okk\" << endl;\n\t\treturn d->n / 2 + 1;\n\t}\n\t//else\n\tauto func = [](D *d1, D *d2){return d1->n < d2->n;};\n\td->child.sort(func);\n\t//cout << \"sets::\" << d->sets << endl;\n\tlist <int> ilist;\n\tauto it = d->child.begin();\n\tfor (int i = 0; i < d->sets; i++) {\n\t\tD *cur = *it;\n\t\t//cout << i << \":::\" << cur->n << endl;\n\t\tilist.push_back(ans(cur));\n\t\tit++;\n\t}\n\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\tint sum = 0;\n\tauto iit = ilist.begin();\n\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\tsum += *iit;\n\t\tiit++;\n\t}\n\treturn sum;\n}\n\n\t\nvoid solve() {\n\tint n;\n\tint l;\n\tcin >> n;\n\tcout << n << endl;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> c;\n\t\t//cout << c << endl;\n\t\tD *d = new D();\n\t\tl = 1;\n\t\tget(d, l);\n\t\tcout << ans(d) << endl;\n\t\t//cout << \"hoge\" << endl;\n\t\tdelete d;\n\t}\n}\n\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cstdlib>\n#include <cassert>\nusing namespace std;\nconst char *str;\nint parse(int i){\n\tif('0'<=str[i]&&str[i]<='9')return strtol(str+i,NULL,10)/2+1;\n\tassert(str[i]=='[');\n\tvector<int>v;\n\tint j=i,c=0;\n\tfor(;;j++){\n\t\tif(str[j]=='[')if(++c==1)v.push_back(parse(j+1));\n\t\tif(str[j]==']')if(--c==-1)break;\n\t}\n\tsort(v.begin(),v.end());\n\tfor(c=j=0;j<=v.size()/2;j++)c+=v[j];\n\treturn c;\n}\nmain(){\n\tint T;\n\tstring data;\n\tfor(cin>>T,getline(cin,data);T--;cout<<parse(1)<<endl)getline(cin,data),str=data.c_str();\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cctype>\n#include <limits.h>\n#include <math.h>\n#include <complex>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n\n#define VARIABLE(x) cerr << #x << \"=\" << x << endl\n#define BINARY(x) static_cast<bitset<16> >(x);\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n\nconst int INF = 1000000000;\ntypedef double D;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={-1, 0, 1, 0}, dy[4]={0, -1, 0, 1};\nusing namespace std;\n//typedef pair<int, int> P;\n\n/** Problem1188 : Hierarchical Democracy **/\nstring s; int pos;\n\nint factor()\n{\n\tvector<int> t;\n\t\n\twhile (pos<s.size()) {\n\t\tif (isdigit(s[pos])) {\n\t\t\tint res=0;\n\t\t\twhile (isdigit(s[pos])) {\n\t\t\t\tres*=10;\n\t\t\t\tres+=s[pos]-'0';\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tt.push_back((res+1)/2);\n\t\t} else if (s[pos] == '[') {\n\t\t\tpos++;\n\t\t\tt.push_back(factor());\n\t\t} else if (s[pos] == ']') {\n\t\t\tpos++;\n\t\t\tint res=0;\n\t\t\tsort(t.begin(), t.end());\n\t\t\trep(i, (t.size()+1)/2) {\n\t\t\t\tres += t[i];\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n\treturn -1;\n}\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\trep(i, n) {\n\t\tpos = 1;\n\t\tcin>>s;\n\t\tcout << factor() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "//include\n//------------------------------------------\n#include <vector>\n#include <list>\n#include <map>\n#include <climits>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <queue>\n#include <random>\n#include <cctype>\n#include <complex>\n#include <regex>\n\nusing namespace std;\n\ntypedef string::const_iterator ParseState;\n\nclass ParseError {\n\n};\n\n\nint expression(ParseState &begin);\n\nint num(ParseState &begin);\n\nint expression(ParseState &begin) {\n    int ret = 0;\n    if (isdigit(*begin)) {\n        ret = num(begin) / 2 + 1;\n        return ret;\n    } else {\n        vector<int> array;\n        while (true) {\n            if (*begin != '[') break;\n            begin++;\n            int d = expression(begin);\n            begin++;\n            array.push_back(d);\n        }\n        sort(array.begin(), array.end());\n        for (int i = 0; i < (array.size() + 1) / 2; i++) ret += array[i];\n    }\n    return ret;\n}\n\nint num(ParseState &begin) {\n    int ret = 0;\n    while (isdigit(*begin)) {\n        ret *= 10;\n        ret += (*begin - '0');\n        begin++;\n    }\n    return ret;\n}\n\nint main() {\n\n    int N;\n    cin >> N;\n\n    for (int i = 0; i < N; i++) {\n        string s;\n        cin >> s;\n\n        auto iter = s.cbegin();\n        cout << expression(iter) << endl;\n\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\tint n; cin >> n;\n\twhile(n--){\n\t\tstring str1; cin >> str1;\n\t\tint ans;\n\t\tbool isfirst = true;\n\t\twhile(1){\n\t\t\tif(str1[1] !='[') break;\n\n\t\t\tstring str2;\n\t\t\tint j=0, num[10000]={0};\n\t\t\tfor(int i=0; str1[i] != '\\0'; i++){\n\t\t\t\tif(str1[i] == ']') str2 += ']';\n\t\t\t\telse if(str1[i]=='[' && str1[i+1] =='[') str2 += '[';\n\t\t\t\telse if(isdigit(str1[i])){\n\t\t\t\t\twhile(isdigit(str1[i])){\n\t\t\t\t\t\tnum[j]*=10;\n\t\t\t\t\t\tnum[j]+=str1[i]-'0';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tif(isfirst) num[j] = num[j]/2+1;\n\t\t\t\t\tj++;\n\t\t\t\t\ti++;\n\t\t\t\t\tif(str1[i] ==']'){\n\t\t\t\t\t\tsort(num, num+j);\n\t\t\t\t\t\tint tmp=0;\n\t\t\t\t\t\tfor(int k=0; k<j/2+1; k++) tmp += num[k];\n\t\t\t\t\t\tfor(int k=0; k<j; k++) num[k] = 0;\n\t\t\t\t\t\tfor(int k=1000000; k>0; k/=10){\n\t\t\t\t\t\t\tif(tmp/k) str2 += (tmp/k % 10) +'0';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr2 += ']';\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tans = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr1 = str2;\n\t\t\tisfirst = false;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cctype>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring S;\nsize_t cur;\n\nint digit(){\n\tint n=S[cur++]-'0';\n\treturn n;\n}\n\nint number(){\n\tint n=digit();\n\twhile(isdigit(S[cur]))\n\t\tn=n*10+digit();\n\treturn n;\n}\n\n\nint expression(){\n\tvector<int> list;\n\tint ans=0;\n\twhile(S[cur]!=']'){\n\t\tif(S[cur]=='[')\n\t\t\tcur++,list.push_back(expression());\n\t\telse if(isdigit(S[cur]))\n\t\t\tlist.push_back(number());\n\t\telse if(cur==S.size())\n\t\t\treturn list[0];\n\t}\n\tif(S[cur]==']'){\n\t\tcur++;\n\t\tsort(list.begin(),list.end());\n\t\tif(list.size()==1){\n\t\t\tans+=(list[0]/2+1);\n\t\t}else{\n\t\t\tint n=(list.size()/2+1);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tans+=list[i];\n\t\t}\n\t}\n\treturn ans;\n}\nint main(void){\n\tint n;\n\tcin >> n;\n\tfor(int i=0;i<n;i++){\n\t\tcin >> S;\n\t\tcur=0;\n\t\tint ans=expression();\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<queue>\n\nusing namespace std;\n\nstring line;\n\ntypedef struct{\n  int ans;\n  int s;\n}orig;\n\n\n/*一つの選挙の最小人数を求める\n来るデータ~~~~~~]~~~~]~~~]\n頭の[は取ってある\n関数内で]を取ってかえす\n*/\norig rec(int s){\n  priority_queue<int,vector<int>,greater<int> > box;\n  int ans=0,i=0;\n  orig val;\n  while(s<line.size() && line.at(s)=='['){\n    s++;\n    val=rec(s);\n    box.push(val.ans);\n    s=val.s;\n  }\n\n  if(s<line.size() && line.at(s)==']'){\n    /*第一弾以外のとき*/\n    //cout<< box.size()<<\"size \";\n    for(i=0;(i<=(box.size())/2+1);i++){\n      ans+=box.top();\n      //            cout << box.top()<<\"top \";\n      box.pop();\n    }\n    s++;     \n  }\n  else {\n    /*[でも]でもない　つまり数字　つまり第一段 line = 122121][~~~ で来る\n     条件よりboxは今empty*/\n    int i=0;\n    while(line.at(s+i)!=']')i++;\n    ans=(stoi(line.substr(s,i))+1)/2;//iはat(i)で]の位置、at(i)はsubstrでi+1番目\n    //        cout<<ans<<\"&  \";\n    s+=i+1;\n  }\n  orig a;\n  a.ans=ans;a.s=s;\n  return a;\n  \n}\n\nint main(){\n  int n,i;\n  orig ans;\n  cin >>n;\n  for(i=0;i<n;i++){\n    //string line;\n    line=\"\";\n    cin >> line;\n    //getline(cin,line);\n    ans=rec(1);\n    cout <<ans.ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nchar str[10001];\nint len;\n\nstruct Node\n{\n\tint value;\n\tvector <Node> child;\n\tbool operator < (const Node &a) const\n\t{\n\t\treturn value < a.value;\n\t}\n};\n\nint travel(Node &cur, int ind)\n{\n\tint v = 0;\n\twhile(1)\n\t{\n\t\tif(str[ind] == '[')\n\t\t{\n\t\t\tcur.child.push_back(Node());\n\t\t\tNode &child = cur.child[cur.child.size() - 1];\n\t\t\tind = travel(child, ind + 1) + 1;\n\t\t}\n\t\telse if (str[ind] == ']') break;\n\t\telse\n\t\t{\n\t\t\tfor(;str[ind] != ']';ind++) v = v * 10 + str[ind] - '0';\n\t\t\tcur.value = v / 2 + 1;\n\t\t\treturn ind;\n\t\t}\n\t}\n\n\tsort(cur.child.begin(), cur.child.end());\n\tint cN = cur.child.size();\n\tcur.value = 0;\n\tfor(int i=0;i<=cN / 2;i++) cur.value += cur.child[i].value;\n\n\treturn ind;\n}\n\nint main(void)\n{\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%s\", str);\n\t\tNode root;\n\t\ttravel(root, 1);\n\n\t\tprintf(\"%d\\n\", root.value);\n\t}\t\t\t\t\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define M_PI 3.14159265358979323846\n\nusing namespace std;\n\n//typedef\n//-------------------------#include <bits/stdc++.h>\n\n#define M_PI 3.14159265358979323846\n\nusing namespace std;\n\n//conversion\n//------------------------------------------\ninline int toInt(string s)\n{\n    int v;\n    istringstream sin(s);\n    sin >> v;\n    return v;\n}\ntemplate <class T>\ninline string toString(T x)\n{\n    ostringstream sout;\n    sout << x;\n    return sout.str();\n}\ninline int readInt()\n{\n    int x;\n    scanf(\"%d\", &x);\n    return x;\n}\n\n//typedef\n//------------------------------------------\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef pair<int, PII> TIII;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<LL> VLL;\ntypedef vector<VLL> VVLL;\n\n//container util\n\n//------------------------------------------\n#define ALL(a) (a).begin(), (a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define SQ(a) ((a) * (a))\n#define EACH(i, c) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)\n#define EXIST(s, e) ((s).find(e) != (s).end())\n#define SORT(c) sort((c).begin(), (c).end())\n\n//repetition\n//------------------------------------------\n#define FOR(i, s, n) for (int i = s; i < (int)n; ++i)\n#define REP(i, n) FOR(i, 0, n)\n//#define MOD 1000000007\n\n#define rep(i, a, b) for (int i = a; i < (b); ++i)\n#define trav(a, x) for (auto &a : x)\n#define all(x) x.begin(), x.end()\n#define sz(x) (int)(x).size()\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\nconst double EPS = 1E-8;\n\n#define chmin(x, y) x = min(x, y)\n#define chmax(x, y) x = max(x, y)\nconst int INF = 2147483647;\nclass UnionFind\n{\npublic:\n    vector<int> par;\n    vector<int> siz;\n\n    UnionFind(int sz_) : par(sz_), siz(sz_, 1)\n    {\n        for (ll i = 0; i < sz_; ++i)\n            par[i] = i;\n    }\n    void init(int sz_)\n    {\n        par.resize(sz_);\n        siz.assign(sz_, 1LL);\n        for (ll i = 0; i < sz_; ++i)\n            par[i] = i;\n    }\n\n    int root(int x)\n    {\n        while (par[x] != x)\n        {\n            x = par[x] = par[par[x]];\n        }\n        return x;\n    }\n\n    bool merge(int x, int y)\n    {\n        x = root(x);\n        y = root(y);\n        if (x == y)\n            return false;\n        if (siz[x] < siz[y])\n            swap(x, y);\n        siz[x] += siz[y];\n        par[y] = x;\n        return true;\n    }\n\n    bool issame(int x, int y)\n    {\n        return root(x) == root(y);\n    }\n\n    int size(int x)\n    {\n        return siz[root(x)];\n    }\n};\n\nint N;\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    cout << fixed << setprecision(20);\n\n    int t;\n    cin >> t;\n\n    while (t--)\n    {\n        string s;\n        cin >> s;\n        map<int, vector<int>> mp;\n        vector<pair<int, int>> vp;\n        int depth = 0;\n        int num = 0;\n        for (int i = 0; i < s.size(); i++)\n        {\n            if (s[i] == '[')\n            {\n\n                depth++;\n                vp.push_back(make_pair(0, depth));\n            }\n            else if (s[i] == ']')\n            {\n                vp.push_back(make_pair(num, depth));\n                num = 0;\n\n                depth--;\n                vp.push_back(make_pair(0, depth + 1));\n            }\n            else\n\n            {\n                num = num * 10 + s[i] - '0';\n            }\n        }\n\n        int turn = 0;\n        while (1)\n        {\n            if (vp.size() <= 2)\n                break;\n            vector<pair<int, int>> tmp;\n            for (int i = 0; i < vp.size(); i++)\n            {\n                int l = i, r = i;\n                vector<int> v;\n                while (r < vp.size() && vp[i].second == vp[r].second)\n                {\n                    if (vp[r].first != 0)\n                        v.push_back(vp[r].first);\n                    r++;\n                }\n\n                sort(all(v));\n\n                int t = 0;\n                for (int j = 0; j < (v.size() + 1) / 2; j++)\n                {\n                    if (turn == 0)\n                    {\n                        t += (v[j] + 1) / 2;\n                    }\n                    else\n                    {\n                        t += v[j];\n                    }\n                }\n                if (t == 0)\n                {\n                    if (vp[i].second - 1 >= 0)\n                    {\n                        tmp.push_back(make_pair(t, vp[i].second));\n                    }\n                }\n                else\n                    tmp.push_back(make_pair(t, vp[i].second - 1));\n\n                i = r - 1;\n            }\n\n            vp = tmp;\n            turn++;\n        }\n        for (int i = 0; i < vp.size(); i++)\n        {\n            cout << vp[i].first << endl;\n        }\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <algorithm>\n#include <utility>\n\nusing namespace std;\n\n//#define debug\nint c;\n\nint main(){\n  int n;\n  string a;\n  cin >> n;\n  while(n--){\n    int lv=0;\n    cin >> a;\n    for(c=0;;c++){\n      if(a[c]!='[')break;\n    }\n\n#ifdef debug\n    cout << c << endl;\n#endif\n\n    vector< vector<int> > d(c+2);\n\n    int yy=0;\n    for(int i=0,lv=0;i<a.length();i++){\n      if(a[i]=='['){\n\tlv++;\n      }\t\n      else if(a[i]==']'){\n\tif(yy){\n\t  d[lv--].push_back(yy);\n\t  yy=0;\n\t}else{\n\t  lv++;\n\t  sort(d[lv].begin(),d[lv].end());\n\t  if(c==lv){\n\t    for(int i=0;i<d[lv].size()/2;i++){\n\t      yy+=d[lv][i]/2+1;\n\t    }\n\t    d[--lv].push_back(yy);\n\t    yy=0;\n\t  }else{\n\t    // cout << d[lv].size() << endl;\n\t    for(int i=0;i<d[lv].size()/2+1;i++){\n\t      yy+=d[lv][i];\n\t    }\n\t    d[--lv].push_back(yy);\n\t    yy=0;\n\t  }\n\t}\n      }\n      else{\n\tyy=yy*10+(a[i]-'0');\n      }\n    }\n\n    cout << d[1][0] << endl;\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nstring s;\nint ind=0;\nint saiki()\n{\n\tint ret=0;\n\tvector<int> kati;\n\tind++;\n\twhile(1)\n\t{\n\t\t//cerr<<ind<<endl;\n\t\tif(s[ind]=='[')\n\t\t{\n\t\t\tind++;\n\t\t\tif(s[ind]=='[')\n\t\t\t{\n\t\t\t\tind--;\n\t\t\t\tint num=saiki();\n\t\t\t\tkati.push_back(num);\n\t\t\t}else{\n\t\t\t\tint num=0;\n\t\t\t\twhile(s[ind]!=']')\n\t\t\t\t{\n\t\t\t\t\tnum*=10;\n\t\t\t\t\tnum+=s[ind]-'0';\n\t\t\t\t\tind++;\n\t\t\t\t}\n\t\t\t\tkati.push_back(num/2+1);\n\t\t\t\tind++;\n\t\t\t}\n\t\t}else if(s[ind]==']')\n\t\t\tbreak;\n\t}\n\tind++;\n\tsort(kati.begin(),kati.end());\n\tfor(int i=0;i<kati.size()/2+1;i++)\n\t\tret+=kati[i];\n\treturn ret;\n}\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tcin>>s;\n\t\tind=0;\n\t\tcout<<saiki()<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <set>\n#include <queue>\n#include <map>\n#include <climits>\n#include <cfloat>\n \nusing namespace std;\n \n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define RREP(i,n) for(int i=(int)n-1; i>=0; i--)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define RFOR(i,c) for(__typeof((c).rbegin())i=(c).rbegin();i!=(c).rend();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define eps 10e-5\n#define INF 1e8\n \ntypedef long long int ll;\ntypedef pair<int, int> pii;\ntypedef pair<int, pair<int, int> > pipii;\ntypedef vector<int> vi;\n \n \n#define M INT_MAX\nstring s;\nint id;\nint dfs(){\n\tvector<int> p;\n\tint num = 0;\n\twhile(1){\n//cout << s[id] << endl;\n\t\tif(s[id] == ']'){ id++; break;}\n\t\telse if(s[id] == '[') id++, p.push_back(dfs());\n\t\telse {\n\t\t\twhile(s[id] != ']') num = num*10 + (int)(s[id++]-'0');\n\t\t\tid++;\n\t\t\treturn num / 2 + 1;\n\t\t}\n\t}\n\tint ret = 0;\n\tsort(ALL(p));\n//\tREP(i,p.size()) cout << p[i] << \":\";\n\tREP(i,p.size()/2 + 1) ret += p[i];\n//\tcout << \"      :        \" << id << \":\" << ret << endl;\n\treturn ret;\n}\n\nint main(void){\n\tint n;\n\tcin >> n;\n\twhile(n--){\n\t\tcin >> s;\n\t\tid = 1;\n\t\tcout << dfs() << endl;\n\t}\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint a[10][100],n,cnt[10],u,sum,chain;string S,T;\nint main(){\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>S;u=0;sum=0;\n\t\tfor(int i=0;i<10;i++){cnt[i]=0;}\n\t\tfor(int i=0;i<S.size();i++){\n\t\t\tif(S[i]=='['){\n\t\t\t\tu++;T=\"\";chain=0;\n\t\t\t}\n\t\t\telse if(S[i]==']'){\n\t\t\t\tif(T!=\"\"){\n\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\tu--;\n\t\t\t\t\ta[u][cnt[u]]=stoi(T);\n\t\t\t\t\tcnt[u]++;\n\t\t\t\t\tT=\"\";\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tchain++;\n\t\t\t\t\tsum=0;\n\t\t\t\t\tsort(a[u],a[u]+cnt[u]);\n\t\t\t\t\tif(chain==1){\n\t\t\t\t\t\tfor(int i=0;i<cnt[u]/2+1;i++){\n\t\t\t\t\t\t\tsum+=a[u][i]/2+1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\t\tu--;\n\t\t\t\t\t\ta[u][cnt[u]]=sum;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\tfor(int i=0;i<cnt[u]/2+1;i++){\n\t\t\t\t\t\t\tsum+=a[u][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\t\tu--;\n\t\t\t\t\t\ta[u][cnt[u]]=sum;\n\t\t\t\t\t}\n\t\t\t\t\tcnt[u]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tT+=S[i];chain=0;\n\t\t\t}\n\t\t}\n\t\tu=0;\n\t\tcout<<sum<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint o=0;\nstring i2s(int k){\n  stringstream ss;\n  ss << k;\n  return ss.str();\n}\nint s2i(string s){\n  istringstream iss(s);\n  int x;\n  iss >> x;\n  return x;\n}\nvoid rec(string str){\n  //cout << str << endl;\n  int i=0,op=0,f=0;\n  string buf,next,num;\n  vector <int> v;\n  while(i<str.size()){\n    if(str[i]=='['){\n      op++;\n      if(str[i+1]=='[') next+=\"[\";\n    }else if(str[i]==']'){\n      if(f==1){\n\t//cout << (s2i(num)+1)/2 <<endl;\n\tv.push_back((s2i(num)+1)/2);\n\t//cout << v.size() << endl;\n\tnum=\"\";\n\tf=0;\n      }else{\n\tint k=0;\n\tsort(v.begin(),v.end());\n\t//cout << v.size() << endl;\n\tfor(int i=0;i<(v.size()+1)/2;i++){\n\t  k+=v[i];\n\t  //cout << k << \":\";\n\t}\n\tk*=2;\n\t//cout << i2s(k) << endl;\n\tif(k!=0)\n\t  next+=i2s(k);\n\tnext+=\"]\";\n\tv.clear();\n      }\n    }else{\n      num+=str[i];\n      f=1;\n    }\n    i++;\n  }\n  //cout << next << endl;\n  if(op==1) o=s2i(str.substr(1,str.size()-2))/2;\n  else rec(next);\n}\n\nint main(){\n  int n,i;\n  cin >> n;\n  for(i=0;i<n;i++){\n    string str;\n    cin >> str;\n    rec(str);\n    cout << o << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i, a, n) for(ll i = ((ll) a); i < ((ll) n); i++)\nusing namespace std;\ntypedef long long ll;\n\nstring S;\nint i;\n\nll dfs() {\n  ll ret = 0;\n  i++;\n\n  if('0' <= S[i] && S[i] <= '9') {\n    while('0' <= S[i] && S[i] <= '9') {\n      ret = ret * 10 + (S[i] - '0');\n      i++;\n    }\n    ret = (ret + 1) / 2;\n  } else {\n    vector<ll> x;\n    while(S[i] == '[') x.push_back(dfs());\n    sort(x.begin(), x.end());\n    REP(j, 0, (x.size() + 1) / 2) ret += x[j];\n  }\n\n  i++;\n  return ret;\n}\n\nint main(void) {\n  ll N;\n  cin >> N;\n  REP(j, 0, N) {\n    cin >> S;\n    i = 0;\n    cout << dfs() << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nint n;\n\nint solve(string s){\n  int cur=1;\n  if(isdigit(s[cur])){\n    int ret=s[cur]-'0';\n    cur++;\n    while(isdigit(s[cur])){\n      ret=ret*10+(s[cur]-'0');\n      cur++;\n    }\n    return ret/2+1;\n  }\n  else{\n    vector<int> v;\n    stack<int> st;\n    for(int i=1; i<s.length(); i++){\n      if(s[i]=='['){\n\tst.push('[');\n      }\n      if(s[i]==']'){\n\tst.pop();\n\tif(st.empty()){\n\t  v.push_back(solve(s.substr(cur, i-cur)));\n\t  cur=i+1;\n\t}\n      }\n    }\n    sort(v.begin(), v.end());\n    int ret=0;\n    for(int i=0; i<v.size()/2+1; i++)\n      ret+=v[i];\n    return ret;\n  }\n}\n\nint main(){\n  cin>>n;\n  for(int i=0; i<n; i++){\n    string s;\n    cin>>s;\n    cout<<solve(s)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint a[100][1000],n,cnt[100],u,sum,chain;string S,T;\nint main(){\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>S;u=0;sum=0;\n\t\tfor(int i=0;i<10;i++){cnt[i]=0;}\n\t\tfor(int i=0;i<S.size();i++){\n\t\t\tif(S[i]=='['){\n\t\t\t\tu++;T=\"\";chain=0;\n\t\t\t}\n\t\t\telse if(S[i]==']'){\n\t\t\t\tif(T!=\"\"){\n\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\tu--;\n\t\t\t\t\ta[u][cnt[u]]=stoi(T);\n\t\t\t\t\tcnt[u]++;\n\t\t\t\t\tT=\"\";\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tchain++;\n\t\t\t\t\tsum=0;\n\t\t\t\t\tsort(a[u],a[u]+cnt[u]);\n\t\t\t\t\tif(chain==1){\n\t\t\t\t\t\tfor(int i=0;i<cnt[u]/2+1;i++){\n\t\t\t\t\t\t\tsum+=a[u][i]/2+1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\t\tu--;\n\t\t\t\t\t\ta[u][cnt[u]]=sum;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\tfor(int i=0;i<cnt[u]/2+1;i++){\n\t\t\t\t\t\t\tsum+=a[u][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\t\tu--;\n\t\t\t\t\t\ta[u][cnt[u]]=sum;\n\t\t\t\t\t}\n\t\t\t\t\tcnt[u]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tT+=S[i];chain=0;\n\t\t\t}\n\t\t}\n\t\tu=0;\n\t\tcout<<sum<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<string>\n#include<algorithm>\n#include<vector>\n\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tint d;\n\tint md;\n\tint inum;\n\tint sum;\n\tint cha;\n\tstring s;\n\tstring snum;\n\tvector<int> hyo[1000];\n\n\tcin>>n;\n\n\tfor(int i=0;i<n;i++){\n\t\tcin>>s;\n\t\td=0;\n\t\tmd=0;\n\t\tfor(int i=0;i<s.size();i++){\n\t\t\tif(s[i]=='[') d++,md=d;\n\t\t\telse if(s[i]==']') d--;\n\t\t\telse{\n\t\t\t\tsnum=(\"\");\n\t\t\t\twhile(1){\n\t\t\t\t\tif(s[i]=='['||s[i]==']') break;\n\t\t\t\t\tsnum+=s[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\ti--;\n\t\t\t\tinum=0;\n\t\t\t\tfor(int j=0;j<snum.size();j++) inum+=(snum[j]-'0')*pow(10.0,(double)snum.size()-1-j);\n\t\t\t\thyo[d].push_back(inum);\n\t\t\t}\n\t\t\tif(d<=md-2){\n\t\t\t\tif(d==md-2) cha=2;\n\t\t\t\telse cha=1;\n\t\t\t\tsort(hyo[d+2].begin(),hyo[d+2].end());\n\t\t\t\tsum=0;\n\t\t\t\tfor(int j=0;j<hyo[d+2].size()/2+1;j++){\n\t\t\t\t\tsum+=hyo[d+2][j]/cha;\n\t\t\t\t\tif(cha==2) sum++;\n\t\t\t\t}\n\t\t\t\thyo[d+2].clear();\n\t\t\t\thyo[d+1].push_back(sum);\n\t\t\t}\n\t\t}\n\t\tsum=0;\n\t\tfor(int j=0;j<hyo[1].size()/2+1;j++){\n\t\t\tsum+=hyo[1][j];\n\t\t}\n\t\tcout<<sum<<endl;\n\t\tfor(int j=0;j<1000;j++){\n\t\t\tif(!hyo[j].empty()) hyo[j].clear();\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<(int)n;++i)\n\nint n;\nint len, la[10010], to[10010];\nstring s;\n\nint calc(int l, int r)\n{\n    ++l;\n    if (s[l] >= '0' && s[l] <= '9') {\n\tint x = 0;\n\tfor (int i = l; i < r; ++i) {\n\t    x = x * 10 + s[i] - '0';\n\t}\n\treturn x / 2 + 1;   \n    }\n\n    vector<int> res;\n    for (int i = l; i < r; ++i) {\n\tint nr = to[i];\n\tres.push_back(calc(i, nr));\n\ti = to[i];\n    }\n\n    sort(res.begin(), res.end());\n    int sz = res.size() / 2 + 1;\n\n    int t = 0;\n    rep(i, sz) t += res[i];\n    return t; \n}\n\nint main() {\n    cin >> n;\n    rep(i, n) {\n\tcin >> s;\n\tlen = s.size();\n\t\n\tint dep = 0;\n\trep(j, len) {\n\t    if (s[j] == '[') la[dep++] = j;\n\t    else if (s[j] == ']') to[la[--dep]] = j;\n\t}\n\tcout << calc(0, len-1) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//include\n//------------------------------------------\n#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <queue>\n\nusing namespace std;\n\n//typedef\n//------------------------------------------\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef long long LL;\n\n//container util\n//------------------------------------------\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define PB push_back\n#define MP make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n\n//repetition\n//------------------------------------------\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n\n//constant\n//--------------------------------------------\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\nstruct Tree{\n  int num;\n  vector<Tree> chd;\n  Tree():num(0){\n  }\n\n  bool operator<(const Tree& rhs)const{\n\treturn num < rhs.num;\n  }\n};\n\nvoid solve(Tree& t){\n  if(SZ(t.chd) == 0){\n\tt.num = (t.num+1) / 2;\n\treturn;\n  }\n  for(auto& chd: t.chd)\n\tsolve(chd);\n  \n  SORT(t.chd);\n  for(int i=0;i<=SZ(t.chd)/2;++i)\n\tt.num += t.chd[i].num;\n}\n\nstring str;\nTree parse(int a, int b){\n  Tree ret;\n  if(isdigit(str[a])){\n\tret.num = atoi(str.substr(a, b-a).c_str());\n\treturn ret;\n  }\n  \n  int cnt = 0, st;\n  for(int i=a;i<b;++i){\n\tif(str[i] == '['){\n\t  if(cnt++ == 0) st = i;\n\t}\t\n\telse if(str[i] == ']')\n\t  if(--cnt == 0){\n\t\tret.chd.PB(parse(st+1, i));\n\t  }\t\n  }\n  return ret;\n}\n\nint main(){\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int N; cin>>N;\n  while(N--){\n\tcin >> str;\n\tTree t = parse(0,SZ(str));\n\tsolve(t);\n\tcout << t.num << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <iostream>\n#include <utility>\n#include <algorithm>\n#include <string>\n#include <deque>\n#include <tuple>\n#include <queue>\n#include <functional>\n#include <cmath>\n#include <iomanip>\n#include <map>\n#include <numeric>\n//cin.sync_with_stdio(false);\n//streambuf\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\nint mincost[5001];\nvector<pii> tx(5001);\nvector<vector<int>> way(5001);\nint main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tstring buf;\n\t\tcin >> buf;\n\t\tvector<pair<int, vector<int>>> g;\n\t\tint s = 0,n=1;\n\t\tbool f = 0;\n\t\tvector<int> stack;\n\t\tg.push_back(make_pair(-1, vector<int>()));\n\t\tstack.push_back(0);\n\t\tfor (int i = 1; i < buf.size(); i++) {\n\t\t\tswitch (buf[i]) {\n\t\t\tcase '[':\n\t\t\t\tf = 0;\n\t\t\t\tg.push_back(make_pair(-1, vector<int>()));\n\t\t\t\tg[stack.back()].second.push_back(n);\n\t\t\t\tstack.push_back(n++);\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tstack.pop_back();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (f)break;\n\t\t\t\tg.back()=make_pair(stoi(string(buf.c_str() + i))/2+1, vector<int>());\n\t\t\t\tg[stack.back()].second.push_back(n);\n\t\t\t\tf = 1;\n\t\t\t}\n\t\t}\n\t\twhile (g[0].first == -1) {\n\t\t\tfor (int i = 0; i < g.size(); i++) {\n\t\t\t\tif (g[i].first != -1 || g[g[i].second[0]].first == -1)continue;\n\t\t\t\tvector<int> buf;\n\t\t\t\tfor (int j = 0; j < g[i].second.size(); j++) {\n\t\t\t\t\tbuf.push_back(g[g[i].second[j]].first);\n\t\t\t\t}\n\t\t\t\tsort(buf.begin(), buf.end());\n\t\t\t\tg[i].first = accumulate(buf.begin(), buf.begin() + (buf.size() + 2) / 2, 0);\n\t\t\t}\n\t\t}\n\t\tcout << g[0].first<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <cctype>\nusing namespace std;\n \ntypedef string::const_iterator iter;\n \nint number(iter& p);\n \nint expr(iter& p) {\n    p++; // skip [\n    int ans;\n    if(isdigit(*p)) {\n        int res = number(p);\n        ans = res / 2 + 1;\n    }\n    else {\n        vector<int> vec;\n        while(*p == '[') {\n            vec.push_back(expr(p));\n        }\n        sort(vec.begin(), vec.end());\n        int res = 0;\n        for(int i = 0; i < (int)vec.size() / 2 + 1; i++) {\n            res += vec[i];\n        }\n        ans = res;\n    }\n    p++; // skip ]\n    return ans;\n}\n \nint number(iter& p) {\n    int res = 0;\n    while(isdigit(*p)) {\n        res *= 10;\n        res += *p - '0';\n        p++;\n    }\n    return res;\n}\n \nint main() {\n    int n; cin >> n;\n    while(n-- ){\n        string s; cin >> s;\n        iter it = s.begin();\n        int res = expr(it);\n        cout << res << endl;\n    }\n}\n "
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define inf 1e9\n#define ll long long\n#define ull unsigned long long\n#define M 1000000007\n#define P pair<int,int>\n#define PLL pair<ll,ll>\n#define FOR(i,m,n) for(int i=(int)m;i<(int)n;i++)\n#define RFOR(i,m,n) for(int i=(int)m;i>=(int)n;i--)\n#define rep(i,n) FOR(i,0,n)\n#define rrep(i,n) RFOR(i,n,0)\n#define all(a) a.begin(),a.end()\nconst int vx[4] = {0,1,0,-1};\nconst int vy[4] = {1,0,-1,0};\n#define PI 3.14159265\n\n\nint g(string s,int k,int n){\n  int b[10000];\n  int m=0,l=0;\n  int a = k;\n  string t;\n  int mmax=0;\n\n  if('0'<=s[k]&&s[k]<='9'){\n    int ans=0;\n    while('0'<=s[k]&&s[k]<='9'){\n      ans*=10;\n      ans+=s[k]-'0';\n      k++;\n    }\n    return ans;\n  }\n\n  FOR(i,k,n){\n    if(s[i]=='['){\n      m++;\n      mmax=max(mmax,m);\n    }\n    if(s[i]==']') m--;\n    if(m==0){\n      b[l]=g(s,a+1,i);\n      l++;\n      a = i+1;\n    }\n  }\n\n\n  if(l==1) return b[0];\n\n  sort(b,b+l);\n  int res=0;\n\n  if(mmax!=1){\n    \n    rep(i,l%2+l/2){\n      res+=b[i];\n    }\n    return res;\n  }\n  res=0;\n\n  rep(i,l%2+l/2){\n    res+= b[i]%2+b[i]/2;\n  }\n  return res;\n}\n\n\nvoid f(){\n  string s;\n  cin>>s;\n\n  cout<<g(s,0,(int)s.length())<<endl;\n}\n\n\nint main(){\n  int n;\n  cin>>n;\n  while(n--){\n    f();\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\n#define mod 1777777777\nusing namespace std;\ntypedef long long ll;\ntypedef string::iterator itr;\nll conbi(ll, ll);\nll gcd(ll, ll);\nll kkrn(ll);\nint solve(itr,itr);\n\nstring s;\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n;i++) {\n\t\tcin >> s;\n\n\t\tint ans = solve(s.begin(),s.end());\n\t\tcout << ans << endl;\n\t}\t\n\treturn 0;\t\n}\nint solve(itr head, itr tail) {\n\tvector<int> cost;\n\tint n = 0;\n\titr a, b;\n\tint k = 0;\n\tfor (itr i = head+1; i != tail-1; i++) {\n\t\tif (*i=='[') {\n\t\t\tif (n == 0) {\n\t\t\t\ta = i;\n\t\t\t}\n\t\t\tn++;\n\t\t}\n\t\telse if (*i == ']') {\n\t\t\tn--;\n\t\t\tif (n == 0) {\n\t\t\t\tint x = solve(a, i+1);\n\t\t\t\tcost.push_back(x);\n\t\t\t}\n\t\t}\n\t\telse if(n==0){\n\t\t\t\n\t\t\tk = k * 10 + (int)(*i - '0');\n\n\t\t}\n\t}\n\tif (k != 0)return 1+k/2;\n\tsort(cost.begin(), cost.end());\n\tint ans = 0;\n\tfor (int i = 0; i <= (cost.size() / 2); i++)ans += cost[i];\n\treturn ans;\n}\n/*\n\n\n\n\nll conbi(ll a, ll b) {\n\tif (b % 2 == 0) {\n\n\t}\n}\nll gcd(ll a, ll b) {\n\twhile (true) {\n\t\tif (a == b) return a;\n\t\tll c;\n\t\tif (a > b) {\n\t\t\tc = a;\n\t\t\ta = b;\n\t\t\tb = c;\n\t\t}\n\t\tb = b % a;\n\t\tif (b == 0)return a;\n\t}\n}\n\nvector<ll> dp(1000000,-1);\n\nll kkrn(ll x) {\n\tif (dp[x] != -1)return dp[x];\n\tif (x < 2)return 0;\n\tif (x == 2)return 1;\n\tll ans = ((x - 1)*kkrn(x - 1)) % mod + ((x - 1)*kkrn(x - 2)) % mod;\n\tdp[x] = ans;\n\treturn ans;\n}*/"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<cctype>\n#include<queue>\n#include<deque>\n#include<regex>\n#include<stack>\n#include<stdio.h>\n#include<vector>\n#include<set>\n#include<map>\n#include<iomanip>\n\n#define rep(i, n) for(int i=0;i<n;i++)\n\ntypedef int long long ll;\nusing namespace std;\ntypedef pair<int, int> P;\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\nconst ll MOD = 1e9 + 7;\nstatic const int MAX = 100;\nstatic const int INF = (1 << 23);\nint change(string s){\n    int k=0;int ki=1;\n    reverse(s.begin(),s.end());\n    rep(i,s.size()){\n        k+=(int(s[i]-'0'))*ki;\n        ki*=10;\n    }\n    return k;\n}\nint main() {\n    int n;\n    cin>>n;\n    rep(nn,n){\n        string s;\n        cin>>s;\n        vector<int> v;\n        int si=0;\n        while(si<s.size()){\n            if(s[si]=='['){v.push_back(-1);si++;}\n            else if(s[si]==']'){v.push_back(-2);si++;}\n            else{\n                string num;\n                while(s[si]!=']'&&s[si]!='[') {\n                    num+=s[si];\n                    si++;\n                }\n                v.push_back(change(num));\n\n                }\n        }\n\n\n        stack<int> st;\n        st.push(v[0]);\n        for(int i=1;i<v.size();i++){\n           if(v[i]!=-2){\n               st.push(v[i]);\n           }else{\n               vector<int> sen;\n               while(true){\n                   int k=st.top();st.pop();\n                   if(k!=-1)sen.push_back(k);\n                   else break;\n               }\n               sort(sen.begin(),sen.end());\n               int k1=0;\n               for(int j=0;j<(sen.size()+1)/2;j++){\n                   if(sen.size()==1){k1+=(sen[j]+1)/2;}\n                   else{k1+=sen[j];}\n               }\n               st.push(k1);\n               //cout<<k1<<endl;\n           }\n        }\n\n        cout<<st.top()<<endl;\n\n\n\n\n     \n    }\n\n\n\n    return 0;\n}\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nstring s;\n\nint dfs(int l, int r){\n  if(s[l] != '[') return atoi(s.substr(l, r - l).c_str()) / 2 + 1;\n  int cnt = 0, nl = l + 1;\n  vector<int> v;\n  FOR(i, l, r){\n    if(s[i] == '[') ++cnt;\n    else if(s[i] == ']'){\n      --cnt;\n      if(cnt == 0){\n        int tmp = dfs(nl, i);\n        nl = i + 2;\n        v.push_back(tmp);\n      }\n    }\n  }\n  int ans = 0;\n  SORT(v);\n  REP(i, (int)(v.size()) / 2 + 1) ans += v[i];\n  return ans;\n}\n\nint main() {\n  int T; cin >>T;\n  REP(t, T){\n    cin >>s;\n    cout <<dfs(1, (int)s.length() - 1) <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct Parser {\n    using itr = string::const_iterator;\n    itr now;\n    int ans;\n    const struct ex {\n        vector<char> _012;\n        ex() {\n            _012.resize(10);\n            for(int i = 0; i < 10; ++i) {\n                _012[i] = char('0' + i);\n            }\n        }\n    } ex;\n    // <expr> ::= [<numb>] | [<expr>+]\n    // <numb> ::= [1-9] [0-9]*\n    Parser(const string &s) {\n        now = s.begin();\n        ans = expr(now);\n    }\n    // <expr> ::= [<numb>] | [<expr>+]\n    int expr(itr &now) {\n        next(now, '[');\n        vector<int> num;\n        // <expr> ::= [<expr>+]\n        if(*now == '[') {\n            while(*now != ']') {\n                num.push_back(expr(now));\n            }\n        // <expr> ::= [<numb>]\n        } else {\n            num.push_back(numb(now));\n            // next(now, ']');\n        }\n        next(now, ']');\n        sort(num.begin(), num.end());\n        int sz = num.size();\n        int sum = 0;\n        for(int i = 0; i < (sz + 1) / 2; ++i) {\n            sum += num[i];\n        }\n        return sum;\n    }\n    // <numb> ::= [1-9] [0-9]*\n    int numb(itr &now) {\n        int ret = 0;\n        while(1) {\n            if('0' <= *now and *now <= '9') {\n                ret *= 10;\n                ret += (*now) - '0';\n                next(now, ex._012);\n            } else {\n                ret = (ret + 1) / 2;\n                return ret;\n            }\n        }\n    }\n    void next(itr &now, const char expected) {\n        vector<char> req = {expected};\n        next(now, req);\n    }\n    void next(itr &now, const vector<char> &expected) {\n        for(char c: expected){\n            if(*now == c){\n                now++;\n                return;\n            }\n        }\n        // デバッグ用\n        fprintf(stderr, \"Expected: \");\n        for(char c: expected) fprintf(stderr, \"%c\", c);\n        fprintf(stderr, \"\\nGot: %c\\n\", *now);\n        fprintf(stderr, \"Rest: \");\n        while(*now) fprintf(stderr, \"%c\", *now++);\n    }\n};\n\nint main() {\n    int n; cin >> n;\n    while(n--) {\n        string s; cin >> s;\n        Parser parse(s);\n        cout << parse.ans << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define rep(i, n) for (int i = 0; i < (int) (n); i++)\n#define reps(i, n, m) for (int i = (int) (n); i < (int) (m); i++)\n\nbool init() {\n}\n\nstring s;\n\n#define INF 1000000000\n\npair<int, bool> dfs(int& pos) {\n\tif (pos == (int) s.length()) return make_pair(INF, false);\n\tif (s[pos] == '[') {\n\t\tvector<pair<int, bool>> t;\n\t\twhile (pos < (int) s.length()) {\n\t\t\tif (s[pos] == ']') break;\n\t\t\tassert(s[pos] == '[');\n\t\t\tpos++;\n\t\t\tt.push_back(dfs(pos));\n\t\t\tassert(s[pos] == ']');\n\t\t\tpos++;\n\t\t}\n\t\tsort(t.begin(), t.end());\n\t\tint res = 0;\n\t\trep(i, t.size() / 2 + 1) {\n//\t\t\tcout << \"A \" << t[i] << endl;\n\t\t\tif (t[i].second) res += t[i].first / 2 + 1;\n\t\t\telse res += t[i].first;\n\t\t}\n\t\treturn make_pair(res, false);\n\t}\n\tint res = 0;\n\tassert('0' <= s[pos] && s[pos] <= '9');\n\twhile ('0' <= s[pos] && s[pos] <= '9') {\n\t\tres = res * 10 + s[pos] - '0';\n\t\tpos++;\n\t}\n\treturn make_pair(res, true);\n}\n\nvoid solve() {\n\tcin >> s;\n\tint p = 0;\n\tcout << dfs(p).first << endl;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\trep(i, n) {\n\t\tsolve();\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <bitset>\n#include <map>\n#include <unordered_map>\n#include <list>\n#include <numeric>\n#include <utility>\n#include <iterator>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <ctime>\n#include <cassert>\n\n#define INF 1000000000\n#define LINF 9000000000000000000\n#define mod 1000000007\n\n#define rep(i,n) for(int i=0;i<int(n);i++)\n#define rrep(i,n) for(int i=n-1;i>=0;i--)\n#define REP(i,a,b) for(int i=(a);i<int(b);i++)\n#define all(x) (x).begin(),x.end()\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\n/*\n   cin.tie(0);\n   ios::sync_with_stdio(false);\n*/\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<long long>vll;\ntypedef pair<int,int> pi;\nint dx[4]={1,0,-1,0};\nint dy[4]={0,1,0,-1};\nint ddx[8]={-1,-1,0,1,1,1,0,-1};\nint ddy[8]={0,1,1,1,0,-1,-1,-1};\nbool debug=false;\n\n/*---------------------------------------------------*/\n\nvector<int> lists[100];\n\nvoid Debug(){\n  for(int i=0;i<10;i++){\n    cout<<i<<\": \";\n    for(auto x : lists[i])cout<<x<<\" \";\n    cout<<endl;\n  }\n}\n\nint make_list(string s){\n  int max_depth=0,depth=0,num=0;\n  for(int i=0;i<100;i++)lists[i].clear();\n  vector<int> calc;\n  for(int i=0;i<s.size()-1;i++){\n    if(s[i]=='['){\n      depth++;\n      max_depth=max(max_depth,depth);\n    }else if(s[i]==']'){\n      if(num!=0)calc.push_back(num);\n      if(s[i+1]==']'&&calc.size()!=0){\n\ti++;\n\tsort(all(calc));\n\tint sum=0;\n\tfor(int j=0;j<calc.size()/2+1;j++){\n\t  sum+=calc[j]/2+1;\n\t}\n\t// cout<<\"add \"<<depth<<\" : \"<<sum<<endl;\n\tlists[depth].push_back(sum);\n\tdepth--;\n\tcalc.clear();\n      }\n      depth--;\n      num=0;\n    }else{\n      num*=10;\n      num+=s[i]-'0';\n    } \n  }\n  return max_depth;\n}\n\nvoid solve(){\n  string s;\n  cin>>s;\n  int depth=make_list(s);\n  // cout<<\"depth: \"<<depth<<endl;\n  //Debug();\n  int p=0;\n  for(int i=0;i<depth;i++)if(lists[i].size()==0)p++;\n  //cout<<\"p: \"<<p<<endl;\n  for(int i=depth;i>=2;i--){\n    int human=0;\n    sort(all(lists[i]));\n    for(int j=0;j<lists[i].size()/2+((lists[i].size()%2==1&&i!=p)?1:0);j++){\n      //cout<<\"depth \"<<i<<\": \"<<lists[i][j]<<\" \";\n      human+=lists[i][j];\n    }\n    //cout<<endl;\n    lists[i-1].pb(human);\n  }\n  //Debug();\n  cout<<lists[2][lists[1].size()-1]<<endl;\n}\n\nint main(){\n  int n;\n  cin>>n;\n  rep(i,n){\n    solve();\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <iostream>\n#include <sstream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint parseint(string s){\n  stringstream ss(s);\n  int r;\n  ss >> r;\n  return r;\n}\n\nint sumdiv2(vector<int> &a){\n  int r=0;\n  sort(a.begin(),a.end());\n  for(int i=0;i<a.size()/2+1;i++){\n    r+=a[i]/2+1;\n  }\n  return r;\n}\n\nint sum2(vector<int> &a){\n  int r=0;\n  sort(a.begin(),a.end());\n  for(int i=0;i<a.size()/2+1;i++){\n    r+=a[i];\n  }\n  return r;\n}\n\nint main(){\n  int n;\n  int stack;\n  cin >> n;\n  string s;\n\n  vector<vector<int>> votes;\n  while(n--){\n    votes.clear();\n    stack = 0;\n    int max = 0;\n    cin >> s;\n    while(s[max]=='[')max++;\n    votes.resize(max+3);\n    for(int i=0;i<s.size();i++){\n      if(s[i]=='[')stack++;\n      else if(s[i]==']'){\n        stack--;\n        if(!votes[stack+2].empty()){\n          if(stack+2==max){\n            //cout << stack+2 << \" \" << sumdiv2(votes[stack+2]) << endl;\n            votes[stack+1].push_back(sumdiv2(votes[stack+2]));\n          }else{\n            //cout << stack+2 << \" \" << sum2(votes[stack+2]) << endl;\n            votes[stack+1].push_back(sum2(votes[stack+2]));\n          }\n          votes[stack+2].clear();\n        }\n      }else{\n        //cout << stack << endl;\n        int r = parseint(s.substr(i));\n        //cout << r << endl;\n        votes[stack].push_back(r);\n        while(r/10){r/=10;i++;}\n      }\n    }\n    cout << votes[1][0] << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cctype>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring S;\nsize_t cur;\n\nint digit(){\n\tint n=S[cur++]-'0';\n\treturn n;\n}\n\nint number(){\n\tint n=digit();\n\twhile(isdigit(S[cur]))\n\t\tn=n*10+digit();\n\treturn n;\n}\n\n\nint expression(){\n\tvector<int> list;\n\tint ans=0;\n\twhile(S[cur]!=']'){\n\t\tif(S[cur]=='[')\n\t\t\tcur++,list.push_back(expression());\n\t\telse if(isdigit(S[cur]))\n\t\t\tlist.push_back(number());\n\t\telse if(cur==S.size())\n\t\t\treturn list[0];\n\t}\n\tif(S[cur]==']'){\n\t\tcur++;\n\t\tsort(list.begin(),list.end());\n\t\tif(list.size()==1){\n\t\t\tans+=(list[0]/2+1);\n\t\t}else{\n\t\t\tint n=(list.size()/2+1);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tans+=list[i];\n\t\t}\n\t}\n\treturn ans;\n}\nint main(void){\n\tint n;\n\tfor(int i=0;i<n;i++){\n\t\tcin >> S;\n\t\tcur=0;\n\t\tint ans=expression();\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cctype>\nusing namespace std;\n\nstring s;\n\nint f(int &pos){\n    if(s[pos] == '['){\n        vector<int> child;\n        pos++;\n        while(true){\n            child.push_back(f(pos));\n            if(s[pos] == ']'){\n                pos++;\n                break;\n            }\n        }\n        sort(child.begin(), child.end());\n        int ret = 0;\n        for(int i = 0; i <= child.size()/2; i++)    ret += child[i];\n        return ret;\n    }else{\n        int ret = 0;\n        while(isdigit(s[pos]))  ret = ret*10 + (s[pos++]-'0');\n        return ret/2+1;\n    }\n}\n\nint main(){\n    int n, pos;\n    cin >> n;\n    while(n-- > 0){\n        cin >> s;\n        pos = 0;\n        cout << f(pos) << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <set>\n#include <string>\n#include <cctype>\n\nusing namespace std;\n\ntypedef string::const_iterator state;\n\nint expression(state &begin);\nint number(state &begin);\n\nint number(state &begin){\n\tint ans=0;\n\twhile(1){\n\t\tif(isdigit(*begin)){\n\t\t\tans *=10;\n\t\t\tans += *begin -'0';\n\t\t\tbegin++;\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint expression(state &begin){\n\tbegin++;\n\tint ans = 0;\n\tif(isdigit(*begin)){\n\t\tans = (number(begin)+1)/2;\n\t}else{\n\t\tvector<int> v;\n\t\twhile(1){\n\t\t\tif(*begin==']')break;\n\t\t\tv.push_back(expression(begin));\n\t\t}\n\t\tsort(v.begin(),v.end());\n\t\tfor(int i=0;i<=v.size()/2;i++){\n\t\t\tans += v[i];\n\t\t}\n\t}\n\tbegin++;\n\treturn ans;\n}\n\nint main(){\n\tint n;\n\tstring s;\n\tcin >> n;\n\tfor(int i=0;i<n;i++){\n\t\tcin >> s;\n\t\tstate k = s.begin();\n\t\tcout << expression(k) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//#include <bits/stdc++.h>\n \n#include <iostream>\n#include <algorithm>\n \n#include <bitset>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <cstring>\n#include <string>\n#include <utility>\n#include <array>\n#include <complex>\n#include <valarray>\n \n#include <cassert>\n#include <cmath>\n#include <functional>\n#include <iomanip>\n#include <chrono>\n#include <random>\n#include <numeric>\n \n \nusing namespace std;\n#define int long long\n \ntypedef long long ll;\ntypedef unsigned long long ull;\n//typedef unsigned __int128 HASH;\ntypedef pair<int,int> pii;\ntypedef pair<ll, ll> pll;\ntypedef pair<ull, ull> pullull;\ntypedef pair<ll,int> plli;\ntypedef pair<double, int> pdbi;\ntypedef pair<int,pii> pipii;\ntypedef pair<ll,pll> plpll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<pii> vpii;\ntypedef vector<vector<int>> mat;\n \n#define rep(i,n) for (int i=0;i<(n);i++)\n#define rep2(i,a,b) for (int i=(a);i<(b);i++)\n#define rrep(i,n) for (int i=(n);i>0;i--)\n#define rrep2(i,a,b) for (int i=(a);i>b;i--)\n#define pb push_back\n#define fi first\n#define se second\n#define all(a) (a).begin(),(a).end()\n#define rall(a) (a).rbegin(),(a).rend()\n \nconst ll hmod1 = 999999937;\nconst ll hmod2 = 1000000000 + 9;\nconst int INF = 1<<30;\nconst ll INFLL = 1LL<<62;\nconst double EPS = 1e-12;\nconst ll mod = 1000000000 + 7;\nconst int dx4[4] = {1, 0, -1, 0};\nconst int dy4[4] = {0, 1, 0, -1};\nconst int dx8[8] = {1, 1, 1, 0, 0, -1, -1, -1};\nconst int dy8[8] = {0, 1, -1, 1, -1, 0, 1, -1};\nconst double pi = 3.141592653589793;\n \n#define addm(X, Y) (X) = ((X) + ((Y) % mod) + mod) % mod\n#define inside(y, x, h, w) (0 <= (y) && (y) < (h) && 0 <= (x) && (x) < (w)) ? true : false\n\n//debug\n#define DEBUG \n \n#define DUMPOUT cout\n \n#ifdef DEBUG\n#define dump(...) DUMPOUT<<#__VA_ARGS__<<\" :[\"<<__FUNCTION__<<\":\"<<__LINE__<<\"]\"<<endl; DUMPOUT<<\"    \"; dump_func(__VA_ARGS__)\n#else\n#define dump(...) \n#endif\n\nvoid dump_func() {DUMPOUT << endl;};\n\ntemplate <class Head, class... Tail> void dump_func(Head&& head, Tail&&... tail) {\n    DUMPOUT << head;\n    if (sizeof...(Tail) == 0) DUMPOUT << \" \";\n    else DUMPOUT << \", \";\n    dump_func(std::move(tail)...);\n}\n\n//ostream \ntemplate<typename T> ostream& operator << (ostream& os, vector<T>& vec) {\n    os << \"[\"; for (int i = 0; i<vec.size(); i++) os << vec[i] << (i + 1 == vec.size() ? \"\" : \", \"); os << \"]\";\n    return os;\n}\n\ntemplate<typename T, typename U> ostream& operator << (ostream& os, pair<T, U>& pair_var) {\n    os << \"(\" << pair_var.first << \", \" << pair_var.second << \")\";\n    return os;\n}\n\ntemplate<typename T, typename U> ostream& operator << (ostream& os, map<T, U>& map_var) {\n    os << \"[\";\n    for (auto itr = map_var.begin(); itr != map_var.end(); itr++) {\n        os << \"(\" << itr->first << \", \" << itr->second << \")\"; itr++;  if(itr != map_var.end()) os << \", \"; itr--;\n    }\n    os << \"]\";\n    return os;\n}\n\ntemplate<typename T> ostream& operator << (ostream& os, set<T>& set_var) {\n    os << \"[\";\n    for (auto itr = set_var.begin(); itr != set_var.end(); itr++) {\n        os << *itr; ++itr; if(itr != set_var.end()) os << \", \"; itr--;\n    }\n    os << \"]\";\n    return os;\n}\n\n\nsigned main() {\t\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n\tint n;\n\tcin >> n;\n\trep(_, n) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tvector<vector<int>> l(10000), r(10000);\n\t\tint m = s.size();\n\t\tint cnt = 0;\n\t\tint mxcnt = 0;\n\t\trep(i, m) {\n\t\t\tif (s[i] == '[') {\n\t\t\t\tmxcnt = max(mxcnt, cnt);\n\t\t\t\tl[cnt].push_back(i);\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\telse if (s[i] == ']') {\n\t\t\t\tcnt--;\n\t\t\t\tr[cnt].push_back(i);\n\t\t\t}\n\t\t}\n\t\tvector<pair<int, pair<int, int>>> v;\n\t\trrep2(i, mxcnt, -1) {\n\t\t\tvector<pair<int, pair<int, int>>> nxv;\n\t\t\tint now = 0;\n\t\t\trep(j, l[i].size()) {\n\t\t\t\tvector<pair<int, pair<int, int>>> tmpv;\n\t\t\t\tif (i == mxcnt) {\n\t\t\t\t\tint num = stoi(s.substr(l[i][j] + 1, r[i][j] - l[i][j] - 1));\n\t\t\t\t\tnxv.push_back({num / 2 + 1, {l[mxcnt][j], r[mxcnt][j]}});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t//dump(v);\n\t\t\t\tint lt = l[i][j], rt = r[i][j];\n\t\t\t\twhile (now < r[i + 1].size() && r[i + 1][now] < rt) {\n\t\t\t\t\ttmpv.push_back({v[now].fi, {v[now].se.fi, v[now].se.se}});\n\t\t\t\t\tnow++;\n\t\t\t\t}\n\t\t\t\tsort(all(tmpv));\n\t\t\t\tint tmp = 0;\n\t\t\t\trep(k, tmpv.size() / 2 + 1) {\n\t\t\t\t\ttmp += tmpv[k].fi;\n\t\t\t\t}\n\t\t\t\tnxv.push_back({tmp, {lt, rt}});\n\t\t\t}\n\t\t\tv = nxv;\n\t\t}\n\t\t//dump(v);\n\t\tcout << v[0].fi << endl;\n\t}\n\n}\t"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long   // <-----!!!!!!!!!!!!!!!!!!!\n\n#define rep(i,n) for (int i=0;i<(n);i++)\n#define rep2(i,a,b) for (int i=(a);i<(b);i++)\n#define rrep(i,n) for (int i=(n)-1;i>=0;i--)\n#define rrep2(i,a,b) for (int i=(b)-1;i>=(a);i--)\n#define all(a) (a).begin(),(a).end()\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef tuple<int, int, int> TUPLE;\ntypedef vector<int> V;\ntypedef vector<V> VV;\ntypedef vector<VV> VVV;\n\nint dfs(string s) {\n    s = s.substr(1, s.size() - 2);\n    if (isdigit(s[0])) return (stoi(s) + 1) / 2;\n\n    V v;\n    int depth = 0;\n    int l = 0;\n    rep(i, s.size()) {\n        if (s[i] == '[') depth++;\n        if (s[i] == ']') depth--;\n\n        if (depth == 0) {\n            v.emplace_back(dfs(s.substr(l, i - l + 1)));\n            l = i + 1;\n        }\n    }\n\n    sort(all(v));\n    int ret = 0;\n    rep(i, (v.size() + 1) / 2) ret += v[i];\n    return ret;\n}\n\nsigned main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(0);\n\n    int T;\n    cin >> T;\n    rep(t, T) {\n        string s;\n        cin >> s;\n        cout << dfs(s) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define MOD 1000000007\ntypedef long long ll;\nusing namespace std;\n\nvoid solve(){\n  string s;\n  cin>>s;\n  int n=s.size();\n  vector<int> v[10010];\n  \n  int level=0;\n  int num=0;\n  for(int i=0;i<n;i++){\n    if(s[i]=='[') level++;\n    else if(s[i]>='0'&&s[i]<='9'){\n      num=num*10+(s[i]-'0');\n    }else{\n      if(num>0){\n        level--;\n        v[level].push_back((num+1)/2);\n        num=0;\n      }else{\n        sort(v[level].begin(),v[level].end());\n        int m=v[level].size();\n        int res=0;\n        for(int j=0;j<=m/2;j++){\n          res+=v[level][j];\n        }\n        \n        v[level].clear();\n        level--;\n        v[level].push_back(res);\n      }\n    }\n  }\n  \n  cout<<v[0].front()<<endl;\n}\n\nint main(){\n  int T;\n  cin>>T;\n  for(int i=0;i<T;i++) solve();\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cassert>\n\n#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <ccomplex>\n#include <cfenv>\n#include <cinttypes>\n#include <cstdbool>\n#include <cstdint>\n#include <ctgmath>\n#include <cwchar>\n#include <cwctype>\n\n// C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n#include <array>\n#include <atomic>\n#include <chrono>\n#include <condition_variable>\n#include <forward_list>\n#include <future>\n#include <initializer_list>\n#include <mutex>\n#include <random>\n#include <ratio>\n#include <regex>\n#include <scoped_allocator>\n#include <system_error>\n#include <thread>\n#include <tuple>\n#include <typeindex>\n#include <type_traits>\n#include <unordered_map>\n#include <unordered_set>\n// #include <boost/foreach.hpp>\n// #include <boost/range/algorithm.hpp>\n#define rep(i,j,k) for(int i=(int)j;i<(int)k;i++)\n#define ll long long\n#define Sort(v) sort(all(v))\n#define INF 1e9\n#define LINF 1e18\n#define END return 0\n#define pb push_back\n#define se second\n#define fi first\n#define pb push_back\n#define all(v) (v).begin() , (v).end()\n#define MP make_pair\n#define int long long\nusing namespace std;\nint day[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n// int dx[]={0,1,0,-1};\n// int dy[]={1,0,-1,0};\nstruct edge{int to,cost;};\n//typedef pair<int,int> P;\n\nconst long long MOD=1000000007LL;\nbool isupper(char c){if('A'<=c&&c<='Z')return 1;return 0;}\nbool islower(char c){if('a'<=c&&c<='z')return 1;return 0;}\nbool isPrime(int x){if(x==1)return 0;if(x==2)return 1;if(x%2==0)return 0;for(int i=3;i*i<=x;i++)if(x%i==0)return 0;return 1;}\nbool iskaibun(string s){for(int i=0;i<s.size()/2;i++)if(s[i]!=s[s.size()-i-1])return 0;return 1;}\nbool isnumber(char c){return ('0'<=c&&c<='9');}\nbool isalpha(char c){return (isupper(c)||islower(c));}\ntemplate<typename T> \nvoid print(vector<T> v){\n    for(int i=0;i<v.size();i++){\n        if(i)cout<<\" \";\n        cout<<v[i];\n    }\n    cout<<endl;\n}\n\ntemplate<typename T>\nvoid printendl(vector<T> v){\n    for(auto date:v)cout<<date<<endl;\n}\n\ntemplate<typename T>\nvoid printvv(vector<vector<T>> v){\n    for(int i=0;i<v.size();i++){\n        for(int j=0;j<v[i].size();j++){\n            if(j)cout<<\" \";\n            cout<<v[i][j];\n        }\n        cout<<endl;\n    }\n}\nint gcd(int a,int b){\n    if(a<b)swap(a,b);\n    if(b==0)return a;\n    else return gcd(b,a%b);\n}\n\nstruct S{\n    int y,x;\n    char c;\n};\n\nint idx=0;\nstring s;\nvector<int> v[5010];\nint rec(int i){\n    int ret=0;\n    if(isnumber(s[idx])){\n        while(isnumber(s[idx])){\n            ret=ret*10+s[idx]-'0';\n            idx++;\n        }\n        return (ret+1)/2;\n    }\n    v[i].clear();\n    while(s[idx]=='['){\n        idx++;\n        v[i].push_back(rec(i+1));\n        idx++;\n    }\n    sort(all(v[i]));\n    rep(j,0,(v[i].size()+1)/2){\n        ret+=v[i][j];\n    }\n    return ret;\n}\n\nsigned main (){\n    int n;\n    cin>>n;\n    rep(p,0,n){\n        cin>>s;\n        idx=0;\n        cout<<rec(0)<<endl;\n\n    }\n\n}\n/*\n\n*/\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <cassert>\n#include <cctype>\n#include <numeric>\n\nint parseint(const std::string &s, size_t &pos) {\n    int res=0;\n    while (s[pos] <= '9')\n        res = res*10 + s[pos++]-'0';\n\n    return res;\n}\n\nint req(const std::string &s, size_t &pos) {\n    assert(s[pos] == '[');\n\n    if (isdigit(s[++pos]))\n        return parseint(s, pos)/2+1;\n\n    std::vector<int> reqs;\n    while (s[pos] == '[') {\n        reqs.emplace_back(req(s, pos));\n        assert(s[pos] == ']');\n        ++pos;\n    }\n\n    std::sort(reqs.begin(), reqs.end());\n    return std::accumulate(reqs.begin(), reqs.begin()+reqs.size()/2+1, 0);\n}\n\nint solve_testcase() {\n    char buf[16384];\n    scanf(\"%s\", buf);\n    std::string s=buf;\n\n    size_t i=0;\n    printf(\"%d\\n\", req(s, i));\n    return 0;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    for (int i=0; i<n; ++i)\n        solve_testcase();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <iomanip>\n#include <cmath>\n#include <string.h>\n\n#define MAX_N 100\n\nusing namespace std;\n\nint N;\nchar str[10000];\n\nint get_num(int l){\n\tint res = 0;\n\tfor (int i = l; str[i] != ']'; i++)\n\t{\n\t\tres += (str[i]-'0');\n\t\tres *= 10;\n\t}\n\tres /= 10;\n\treturn res;\n}\n\nint dfs(int l, int r){// \"[....]\"??¨?????£???????????????(...???)????????°?????????\n\tif(str[l+1] >= '0' && str[l+1] <= '9') return get_num(l+1)/2+1;\n\tint a[10000];\n\tint count = 0;// ??????????????°\n\tint k = 0, nl = l+1;\n\tfor (int i = l+1; i < r; i++)\n\t{\n\t\tif(str[i] == '['){\n\t\t\tk++;\n\t\t}else if(str[i] == ']'){\n\t\t\tk--;\n\t\t}\n\t\tif(k == 0){\n\t\t\ta[count] = dfs(nl, i);\n\t\t\tnl = i+1;\n\t\t\tcount++;\n\t\t}\n\t}\n\tsort(a, a+count);\n\tint sum = 0;\n\tfor (int i = 0; i < count/2+1; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\treturn sum;\n}\n\nvoid solve() {\n\tint res = dfs(0, strlen(str)-1);\n\tcout << res << endl;\n\treturn;\n}\n\nint main(){\n\tcin >> N;\n\tfor (int i = 0; i < N; i++)\n\t{\n\t\tcin >> str;\n\t\tsolve();\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n\ntypedef pair<int, int> result;\n\nresult Areas(const string &s, int p = 0);\nresult OneArea(const string &s, int p = 0);\n\nint majority(int n) {\n  return n / 2 + 1;\n}\n\nint majority(vector<int> v) {\n/*  cout << \"majority called: \";\n  REP(i, v.size()) {\n    cout << v[i] << \" \";\n  }\n  cout << endl;*/\n\n  int sum = 0, least = majority(v.size());\n  sort(v.begin(), v.end());\n  for (int i = 0; i < least; i++) { sum += v[i]; }\n\n  return sum;\n}\n\nresult OneArea(const string &s, int p) {\n/*  cout << \"OneArea called: '\" << s.substr(p) << \"'\" << endl;*/\n  p++;\n  if (isdigit(s[p])) {\n    int people = 0;\n    while (isdigit(s[p])){ people = people * 10 + (s[p++] - '0'); }\n    p++;\n/*    printf(\"OneArea returns: (%d, %s)\\n\", \n        majority(people), s.substr(p).c_str());*/\n    return result(majority(people), p);\n  } else {\n    result r = Areas(s, p);\n    r.second ++;\n/*    printf(\"OneArea returns: (%d, %s)\\n\", \n        r.first, s.substr(r.second).c_str()); */\n    return r;\n  }\n}\n\nresult Areas(const string &s, int p) {\n/*  cout << \"Areas called: '\" << s.substr(p) << \"'\" << endl; */\n\n  vector<int> areas;\n  while(s[p] == '[') {\n    result r = OneArea(s, p);\n    areas.push_back(r.first);\n    p = r.second;\n  }\n/*  printf(\"Areas returns: (%d, %s)\\n\",\n      majority(areas), s.substr(p).c_str()); */\n  return result(majority(areas), p);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  REP(i, n) {\n    string s;\n    cin >> s;\n    result r = OneArea(s);\n    cout << r.first << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\n#define REP(i,n) for(ll i=0;i<n;++i)\n#define RREP(i,n) for(ll i=n-1;i>=0;--i)\n#define FOR(i,m,n) for(ll i=m;i<n;++i)\n#define RFOR(i,m,n) for(ll i=n-1;i>=m;--i)\n#define ALL(v) (v).begin(),(v).end()\n#define PB(a) push_back(a)\n#define UNIQUE(v) v.erase(unique(ALL(v)),v.end());\n#define DUMP(v) REP(aa, (v).size()) { cout << v[a]; if (a != v.size() - 1)cout << \" \"; else cout << endl; }\n#define INF 1000000001ll\n#define MOD 1000000007ll\n#define EPS 1e-9\n\nconst int dx[8] = { 1,1,0,-1,-1,-1,0,1 };\nconst int dy[8] = { 0,1,1,1,0,-1,-1,-1 };\n\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nll max(ll a, int b) { return max(a, ll(b)); }\nll max(int a, ll b) { return max(ll(a), b); }\nll min(ll a, int b) { return min(a, ll(b)); }\nll min(int a, ll b) { return min(ll(a), b); }\n///(´・ω・`)(´・ω・`)(´・ω・`)(´・ω・`)(´・ω・`)(´・ω・`)///\nint i;\nstring s;\nll num();\nll ll1() {\n\t//cout << \"si\" << endl;\n\n\tvi v;\n\tif (isdigit(s[i])) {\n\t\tint numm = num();\n\t\tassert(s[i] == ']');\n\t\ti++;\n\t\treturn numm;\n\t}\n\n\twhile (i<s.size()&&s[i] != ']') {\n\t\t//cout << i << endl;\n\t\tassert(s[i] == '[');\n\t\n\t\n\t\ti++;\n\t\tv.push_back(ll1());\n\t}\n\tsort(ALL(v));\n\tint res=accumulate(v.begin(), v.begin() + (v.size() + 1) / 2, 0LL);\n\t++i;\n\treturn res;\n}\nll num() {\n\tll ret = 0;\n\t//cout << \"num\" << endl;\n\twhile (isdigit(s[i])) {\n\t\tret *= 10;\n\t\tret += s[i] - '0';\n\t\t++i;\n\t}\n\treturn (ret+1)/2;\n}\nint main() {\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tint n;\n\tcin >> n;\n\tREP(fdasfd, n) {\n\t\tcin >> s;\n\t\ti = 0;\n\t\tcout << ll1() << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//********rev 2;\n#include <iostream>\n#include <list>\n#include <cctype>\n\nusing namespace std;\n\n// data class\nclass D {\npublic:\n\tint n;\n\tint sets;\n\n\tlist<D*> child;\n\n\tD() :child() {\n\t\tn = 0;\n\t\tsets = 0;\n\t};\n};\n\n// global var for input\nchar c[10002];\n\n// get inputs\nint get(D *d, int &l) {\n\tint sum = 0;\n\tif (c[l] == '[') { // if has datasets\n\t\t// loop for all sets\n\t\tlist<int> ilist;\n\t\twhile (c[l] == '[') {\n\t\t\tD *dd = new D();\n\t\t\t++l; // INFO: skip '['\n\t\t\t// INFO: rec.\n\t\t\tilist.push_back(get(dd, l));\n\t\t\t// add to childlen\n\t\t\td->child.push_back(dd);\n\t\t\t// inc. sets\n\t\t\td->sets++;\n\t\t\tl++; // INFO: skip ']'\n\t\t}\n\t\t// create sum of win half groups\n\t\tilist.sort([](int &i1, int &i2){return i1 < i2;});\n\t\tauto iter = ilist.begin();\n\t\tfor (int i = 0; i < d->sets / 2 + 1; i++) {\n\t\t\tsum += *iter;\n\t\t\titer++;\n\t\t}\n\t\td->n = sum;\n\t\treturn sum;\n\t} else { // if has NO datasets (== only num)\n\t\t// char[] to num\n\t\tint num = c[l] - '0';\n\t\tfor (l++; isdigit(c[l]); l++) {\n\t\t\tnum = num * 10 + (c[l] - '0');\n\t\t}\n\t\t// return: HALF OF num for win\n\t\td->n = num / 2 + 1;\n\t\treturn d->n;\n\t}\n}\n\n// solve\nvoid solve() {\n\tint n;\n\t// input dataset length\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\t// input dataset\n\t\tcin >> c;\n\t\tD *d = new D();\n\t\t// INFO: 1: skip first '['\n\t\tint l = 1;\n\t\t// string to dataobj;\n\t\tget(d, l);\n\t\t// get answer\n\t\t//cout << ans(d) << endl;\n\t\tcout << d->n << endl;\n\t\tdelete d;\n\t}\n}\n\n\n\n//----main----\nint main(void) {\n\tsolve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n\n#include <cmath>\n#include <iomanip>\n#include <vector>\n#include <string>\n\nusing namespace std;\n#define int ll\n#define ll long long\n\n#define ALL(a) (a).begin(), (a).end()\n#define FOR(i, a, b) for (int i = (int)a; i < (int)b; ++i)\n#define REP(i, n) for (int i = 0; i < (int)n; ++i)\n\nstring s;\nint now=0;\n\nint solve(){\n  now++;\n  if(isdigit(s[now])){\n    int t=0;\n    while(isdigit(s[now])){\n      t = t*10+(s[now]-'0');\n      now++;\n    }\n    return (t+1)/2;\n  }\n  vector<int>tmp;\n  while(now<s.size()&&s[now]!=']'){\n    if(s[now]=='[')tmp.push_back(solve());\n    now++;\n  }\n  //now++;\n  sort(ALL(tmp));\n  //cout<<\"//\"<<endl;\n  //REP(i,tmp.size())cout<<tmp[i]<<endl;\n  //cout<<\"end\"<<endl;\n  int ret = 0;\n  REP(i,(tmp.size()+1)/2)ret += tmp[i];\n  return ret;\n}\n\nsigned main() {\n  int N;\n  cin>>N;\n  vector<int> ans;\n  REP(i,N){\n    cin>>s;\n    now = 0;\n    ans.push_back(solve());\n  }\n  for(auto e:ans)cout<<e<<endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\nusing namespace std;\n\nint Solve(string s)\n{\n    if (s[0] == '[' && s.size() > 2 && isdigit(s[1]))\n        return (stoi(s.substr(1, s.size() - 2)) + 2) / 2;\n\n    vector<int> res;\n    int N = s.size();\n    int idx = 1;\n\n\n    while (idx < N) {\n        if (s[idx] == '[') {\n            int end = idx + 1, cnt = 1;\n            while (cnt != 0) {\n                if (s[end] == '[')\n                    ++cnt;\n                else if (s[end] == ']')\n                    --cnt;\n                ++end;\n            }\n            res.push_back(Solve(s.substr(idx, end - idx)));\n            idx = end;\n        }\n        else\n            ++idx;\n    }\n\n    sort(res.begin(), res.end());\n    int res_num = 0;\n    N = (res.size() + 2) / 2;\n    for (int i = 0; i < N; ++i)\n        res_num += res[i];\n\n    return res_num;\n}\n\nint main()\n{\n    int n;\n\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        string s;\n\n        cin >> s;\n        cout << Solve(s) << '\\n';\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cctype>\n#include <sstream>\n\nusing namespace std;\n\n#define ALL(c) c.begin() , (c).end()\n\nstring to_s(const int & n){\n    stringstream ss;\n    ss << n; return ss.str();\n}\n\nbool replace(string& str, const string& from, const string& to) {\n    size_t start_pos = str.find(from);\n    if(start_pos == std::string::npos)\n        return false;\n    str.replace(start_pos, from.length(), to);\n    return true;\n}\n\nint min_vote(vector<int> & a, bool half){\n    sort(ALL(a));\n    int rtn = 0;\n    for(int i=0; i<a.size()/2+1; i++){\n        rtn += half ? a[i]/2+1 : a[i];\n    }\n    return rtn;\n}\n\nstring resize_tree(string in, bool half){\n    for(int i=0; i<in.size()-2; i++){\n        if(in[i] == '[' && in[i+1] == '[' && isdigit(in[i+2])){\n            int j=i;\n            while(!(isdigit(in[j]) && in[j+1] == ']' && in[j+2] == ']')) j++;\n            string leafs(in.begin()+i+1 , in.begin()+j+2);\n            //cout << \"leafs\" << leafs << endl;\n            vector<int> reg;\n            int a = 0;\n            for(int p=0; p<leafs.size(); p++){\n                if(isdigit(leafs[p])){\n                    a*=10;\n                    a+=leafs[p]-'0';\n                } else if(leafs[p] == ']'){\n                    reg.push_back(a);\n                    a=0;\n                }\n            }\n            string resized = to_s(min_vote(reg,half));\n            in.replace(i+1, leafs.size(), resized);\n        }\n    }\n    return in;\n}\n\nvoid solve(string in){\n    int d = 0;\n    while(in[d] == '[') d++;\n    for(int i=0; i<d-1; i++){\n        in = resize_tree(in, i==0);\n    }\n    cout << in.substr(1, in.size()-2) << endl;\n}\n\nint main(){\n    int n; cin >> n;\n    while(n--){\n        string in; cin >> in;\n        solve(in);\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n//repetition\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n\n//container util\n#define all(x) (x).begin(),(x).end()\n\n//typedef\ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<ll> VLL;\ntypedef vector<VLL> VVLL;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\n\n\n//conversion\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\n\nll rec(string s){\n\n  int idx = -1;\n  VLL arr;\n  int lv = 0;\n  rep(i,s.size()){\n\n    if(s[i] == '['){\n      if(lv == 0) idx = i;\n      lv--;\n    }\n    if(s[i] == ']'){\n      lv++;\n      if(lv == 0){\n        arr.push_back(rec(s.substr(idx+1,i - (idx+1) )));\n      }\n    }\n  }\n  //cout << \"rec\" << s << ' ';\n  if(arr.size() == 0){\n    ll res = toInt(s);\n    res = (res / 2) + 1;\n    //cout << \"return \" << res << endl;\n    return res;\n  }else{\n    ll res = 0;\n    sort(all(arr));\n    rep(i,(arr.size()/2) + 1){\n      res += arr[i];\n    }\n    //cout << \"return \" << res << endl;\n\n    return res;\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  string s;\n  rep(i,n){\n    cin >> s;\n    cout << rec(s.substr(1,s.size()-2)) << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<sstream>\nusing namespace std;\nstring str;\n\nint rewrite(int from, string s){\n\n\t//end位置を取得\n\tint end = -1;\n\tfor (int i = from; i < (signed)s.size(); i++){\n\t\tif (i >= 1 && s[i - 1] == ']' &&s[i] == ']'){\n\t\t\tend = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t//右端まで来たときの処理\n\tif (end == -1){\n\t\tif (from == 0)\n\t\t\treturn -1;\n\t\telse\n\t\t\treturn rewrite(0, s);\n\t}\n\n\t//start位置を取得\n\tint start = -1;\n\tfor (int i = end;; i--){\n\t\tif (s[i] == '[' &&s[i - 1] == '['){\n\t\t\tstart = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t//vectorに入れる\n\tvector<int> v;\n\tint startnum = -1;\n\tfor (int i = start; i < end; i++){\n\t\tif (s[i] == '[')\n\t\t\tstartnum = i + 1;\n\t\tif (s[i] == ']'){\n\t\t\tstring snum;\n\t\t\tfor (int j = startnum; j < i; j++){\n\t\t\t\tsnum = snum + s[j];\n\t\t\t}\n\t\t\tint num = atoi(snum.c_str());\n\t\t\tv.push_back((num + 1) / 2);\n\t\t\tstartnum = -1;\n\t\t}\n\t}\n\n\t//ソート\n\tsort(v.begin(), v.end());\n\n\t//半分を取り出し，和を計算\n\tint sum = 0;\n\tfor (int i = 0; i < ((signed)v.size() + 1) / 2; i++)\n\t\tsum += v[i];\n\tsum = sum * 2 - 1;\n\tstring news = string(s.begin(), s.begin() + start);\n\tstringstream ss;\n\tss << sum;\n\tnews += ss.str();\n\tnews += string(s.begin() + end, s.end());\n\tstr = news;\n\treturn news.size() - (s.size() - end);\n\n}\n\nint main()\n{\n\tint n;\n\tchar before = '0';\n\tcin >> n;\n\tfor (int i = 0; i < n; i++){\n\t\tcin >> str;\n\t\tint from = 0;\n\t\twhile (1){\n\t\t\tfrom = rewrite(from, str);\n\t\t\tif (from == -1)\n\t\t\t\tbreak;\n\t\t}\n\t\tstring ans = \"\";\n\t\tfor (int i = 1; i < (signed)str.size() - 1; i++)\n\t\t\tans += str[i];\n\t\tint ansnum = atoi(ans.c_str());\n\t\tcout << (ansnum + 1) / 2 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cctype>\n#include <utility>\n#include <stack>\n#include <vector>\n#include <algorithm>\n#include <numeric>\nusing namespace std;\n\nconst auto gcu = getchar_unlocked;\nconst auto pcu = putchar_unlocked;\n#define _T template <typename T>\n#define _HT template <typename H, typename... T>\n#define _il inline\n#define _sc _il bool scan\n_T T in(int c){T n=0;int m=1;while(isspace(c)){c=gcu();}if(c=='-')m=-1,c=gcu();\n\tdo{n=10*n+(c-'0'),c=gcu();}while(c>='0'&&c<='9');return m*n;}\n_il int in() {return in<int>(gcu());}\n_T T scan(T &n){int c=gcu();return c==EOF?false:(n=in<T>(c),true);}\n_sc(char &c){c=gcu();gcu();return c!=EOF;}\n#ifdef _GLIBCXX_STRING\n_sc(string &s){int c;s=\"\";\n\tfor(;;){c=gcu();if(c=='\\n'||c==' ')return true;else if(c==EOF)return false;s+=c;}}\n#endif\n_HT _sc(H &h, T&&... t){return scan(h)&&scan(t...);}\n#define _ot _il void out\n#define _ol _il void outl\n_ot(bool b) {pcu('0'+b);}\n_ot(const char *s){while(*s)pcu(*s++);}\n_ot(char c){pcu(c);}\n#ifdef _GLIBCXX_STRING\n_ot(string s){for(char c:s)pcu(c);}\n#endif\n_T _ot(T n){static char b[20];char *p=b,m=n<0?pcu('-'),-1:1;\n\tif(!n)*p++='0';else while(n)*p++=n%10*m+'0',n/=10;while(p!=b)pcu(*--p);}\n_ol(){out('\\n');}\n#ifdef _GLIBCXX_VECTOR\n_T _ot(vector<T> &v){for(T &x:v)out(&x == &v[0]?\"\":\" \"),out(x);outl();}\n#endif\n_HT _ot(H&& h, T&&... t){out(h);out(move(t)...);}\ntemplate <typename... T> _ol(T&&... t){out(move(t)...);outl();}\n\nint elect() {\n\tint c = gcu();\n\tswitch(c) {\n\tcase '[':\n\t\t{\n\t\tvector<int> v;\n\t\tfor (int r; (r = elect());)\n\t\t\tv.push_back(r);\n\t\tauto m = v.begin() + v.size() / 2 + 1;\n\t\tnth_element(v.begin(), m, v.end());\n\t\treturn accumulate(v.begin(), m, 0);\n\t\t}\n\tcase ']':\n\t\treturn 0;\n\tdefault:\n\t\tungetc(c, stdin);\n\t\tscanf(\"%d\", &c);\n\t\treturn c / 2 + 1;\n\t}\n}\n\nint main() {\n\tfor (int n = in(); n--; gcu())\n\t\toutl(elect());\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<vector>\n#include<algorithm>\n#include<iostream>\n\nusing namespace std;\nstring str;\nint place;\n\nint dfs(){\n  place++;\n  // cout << str[place];\n  vector<int> v;\n  while(str[place] == '['){\n    //cout << str[place];\n    place++;\n    //再帰をもっているなら\n    if(str[place] == '['){\n      // cout << \"!\";\n      place--;\n      v.push_back(dfs());\n    }\n    else{\n      int tmp = 0;\n      while(isdigit(str[place])){\n\ttmp *= 10;\n\ttmp += str[place] - '0';\n\tplace++;\n      }\n      // cout << str[place];\n      v.push_back(tmp / 2 + 1);\n      place++;\n    }\n  }\n\n  sort(v.begin(),v.end());\n  int ret = 0;\n  for(int i = 0;i < v.size()/2+1;i++){\n    ret += v[i];\n  }\n  // cout << str[place];\n  place++;\n  return ret;\n}\n\n\n\nint main(){\n  int kaisuu;\n  cin >> kaisuu;\n\n  for(int i = 0;i < kaisuu;i++){\n    cin >> str;\n    place = 0;\n    cout << dfs() << endl;\n    //cout << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <numeric>\n#include <algorithm>\n#include <queue>\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n\n#include <iostream>\n#include <set>\n#include <cstdio>\n#include <sstream>\ninline int getInt(){ int s; scanf(\"%d\", &s); return s; }\n\nusing namespace std;\n\nint main(){\n  int n = getInt();\n  while(n --> 0){\n    string s; cin >> s;\n\n    bool fst = true;\n    while(true){\n      if(s.find(\"][\") == string::npos) break;\n      while(s.find(\"][\") != string::npos)\n        s.replace(s.find(\"][\"), 2, \",\");\n      while(s.find(\"],[\") != string::npos)\n        s.replace(s.find(\"],[\"), 3, \"][\");\n      // cout << s << endl;\n\n      stringstream ss;\n\n      vector<int> v;\n      int tmp = 0;\n      REP(i,s.size()){\n        if(isdigit(s[i])){\n          tmp = (tmp * 10) + s[i] - '0';\n        }else if(s[i] == ','){\n          if(fst) v.push_back(tmp / 2 + 1);\n          else v.push_back(tmp);\n          tmp = 0;\n        }else{\n          if(tmp){\n            if(fst) v.push_back(tmp / 2 + 1);\n            else v.push_back(tmp);\n            tmp = 0;\n          }\n\n          if(v.size()){\n            const int cnt = v.size();\n            sort(v.begin(), v.end());\n            // REP(i,v.size()) printf(\"%d \", v[i]); puts(\"\");\n            ss << accumulate(v.begin(), v.begin() + cnt / 2 + 1, 0);\n            v.clear();\n            tmp = 0;\n          }\n          ss << s[i];\n        }\n      }\n\n      s = ss.str();\n      // cout << s << endl;\n      fst = false;\n    }\n\n    while(s.find(\"]\") != string::npos)\n      s.replace(s.find(\"]\"), 1, \"\");\n    while(s.find(\"[\") != string::npos)\n      s.replace(s.find(\"[\"), 1, \"\");\n    cout << s << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cmath>\n#include <cstdlib>\n#include <iostream>\n#include <bitset>\n#include <deque>\n#include <list>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <algorithm>\n#include <iterator>\n#include <string>\n#include <chrono>\n#include <random>\n#include <tuple>\n#include <utility>\n#include <fstream>\n\nconst long INF = (1l << 30);\nconst long LINF = (1l << 60);\n\nstd::string s;\n\nlong divCeil(long num1, long num2){\n\treturn (num1+num2-1)/num2;\n}\n\nlong intconvert(long& a){//a will be the letter next to ']'\n\tlong res = s[a] - '0';\n\ta++;\n\twhile(s[a] != ']'){\n\t\tres *= 10;\n\t\tres += s[a] - '0';\n\t\ta++;\n\t}\n\ta++;\n\treturn res;\n}\n\nlong dfs(long& vis){\n\t//printf(\"  %ld\\n\", vis);\n\tlong ret = 0;\n\tstd::vector<long> minvotes;\n\tif(vis < s.length() - 1 && '0' <= s[vis+1] && s[vis+1] <= '9'){\n\t\tvis++;\n\t\treturn divCeil(intconvert(vis), 2);\n\t}\n\tvis++;\n\twhile(s[vis] != ']'){\n\t\tminvotes.push_back(dfs(vis));\n\t}\n\tstd::sort(minvotes.begin(), minvotes.end());\n\tfor(int i = 0; i <= minvotes.size() / 2; i++){\n\t\tret += minvotes[i];\n\t}\n\tif(vis < s.length() - 1){\n\t\tvis++;\n\t}\n\t//printf(\"    %ld\\n\", ret);\n\treturn ret;\n}\n\t\n\nvoid solve(){\n\tstd::cin >> s;\n\tlong val = 0;\n\tprintf(\"%ld\\n\", dfs(val));\n\treturn;\n}\n\nint main(){\n\tlong n;\n\tscanf(\"%ld\", &n);\n\tfor(int i = 0; i < n; i++){\n\t\tsolve();\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint now;\nstring s;\n\nint calc(){\n    vector<int> v;\n    int ret = 0;\n    while(s[now]!=']'){\n        if(s[now]=='['){\n            now++;\n            v.push_back(calc());\n        }\n        else{\n            int x=0;\n            while(s[now]>='0' && s[now]<='9'){\n                x=x*10+s[now]-'0';\n                now++;\n            }\n            ret = x/2 + x%2;\n        }\n    }\n    now++;\n    if(ret==0){\n        sort(v.begin(),v.end());\n        int vs=v.size();\n        for(int i=0;i<(vs/2 + vs%2);i++){\n            ret+=v[i];\n        }\n    }\n    //cout << ret << endl;\n    return ret;\n}\n\nint main(void){\n    int n,ret;\n    cin >> n;\n    while(n--){\n        cin >> s;\n        now=1;\n        ret=calc();\n        cout << ret << endl;\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": " \n#include <bits/stdc++.h>\nusing namespace std;\nusing vi=vector<int>;\nusing vvi=vector<vi>;\nusing vs=vector<string>;\nusing msi=map<string,int>;\nusing mii=map<int,int>;\nusing pii=pair<int,int>;\nusing vlai=valarray<int>;\nusing ll=long long;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define range(i,s,n) for(int i=s;i<n;i++)\n#define all(a) a.begin(),a.end()\n#define rall(a) a.rbegin(),a.rend()\n#define fs first\n#define sc second\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\nint solve(string s){\n    static int depth=0;\n    //cout<<depth<<\" in :  \"<<s<<endl;\n    vs a;\n    int d=0,st=1;\n    if(isdigit(s[0])){return (int)ceil(stoi(s)/2.0);}\n    vi v;\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='[')d++;\n        else if(s[i]==']'){\n            d--;\n            if(d==0){\n                auto sep=s.substr(st,i-st);\n                depth++;\n                v.pb(solve(sep));\n                depth--;\n                st=i+2;\n            }\n        }\n    }\n    sort(all(v));\n    int ans=0;\n    //for(auto i:v)cout<<i<<\",\";cout<<endl;\n    rep(i,(v.size()+1)/2)ans+=v[i];\n    //cout<<depth<<\":\"<<ans<<endl;\n    return ans;\n}\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\trep(lp,n){\n\t    string s; cin>>s;\n\t    cout<<solve(s)<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "/*\n????????????????????????????????¨??¢?´¢??????????????§?????????\n?????¢?´¢????????¶???????????????????£???????????????????????????????????????????????????????\n*/\n\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <algorithm>\n\n#define REP(i,n,N) for(int i=n;i<N;i++)\n#define p(S) cout<<S<<endl\nusing namespace std;\n\nint num = 0;\n\n\nstring hds;\nint hdi;\nint hdfs(){\n\tvector<int> vt;\n  //cout<<\"v\"<<num<<endl;\n\tint ret=0;\n\tif(isdigit(hds[hdi])){\n\t\tint a=0;\n\t\twhile(isdigit(hds[hdi]))\ta=10*a+(hds[hdi++]-'0');\n\t\tvt.push_back(a/2+1);\n\t}else\t{\n\t\twhile(hds[hdi++]=='[')\t{\n      num++;\n\t\tvt.push_back(hdfs());\n\t\tif(hds[hdi + 1]!=']') hdi++;\n\t\t}\n\t}\n\n\tsort(vt.begin(),vt.end());\n\tREP(j,0,(int)vt.size()/2+1)\tret+=vt[j];\n\t//p(ret);\n  num--;\n\treturn ret;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tREP(i,0,n)\t{\n\t\thdi=0;\n\t\tcin>>hds;\n\t\tp(hdfs());\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>  \n#include <iostream>  \n#include <algorithm>  \n#include <string>  \n#include <vector>  \nusing namespace std;  \nint n;  \n  \nint solve(string s){  \n  if('0' <= s[0] && s[0] <= '9'){  \n    int ret = 0;  \n    for(int i = 0; i < (int)s.size(); i++){  \n      ret *= 10;  \n      ret += s[i] - '0';   \n    }  \n    return ret/2 +1;  \n  }  \n  \n  vector<int> v;  \n  for(int i = 0; i < (int)s.size(); i++){  \n    if(s[i] == '['){  \n      int c = 1;  \n      int j;  \n      for(j = i+1; c; j++){  \n    if(s[j] == '[') c++;  \n    if(s[j] == ']') c--;  \n      }  \n      v.push_back( solve(s.substr(i+1,j-i-2) ) );  \n      i = j-1;  \n    }  \n  }  \n  sort(v.begin(),v.end());  \n  int ret = 0;  \n  for(int i = 0; i < (int)(v.size())/2 + 1; i++){  \n    ret += v[i];  \n  }  \n  return ret;  \n}  \n  \nint main(void){  \n  cin >> n;  \n  for(int t = 0; t < n; t++){  \n    string str;  \n    cin >> str;  \n    cout << solve(str.substr(1,(int)str.size()-2)) << endl;  \n  }  \n}  "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<vector>\n\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tint d;\n\tint md;\n\tint inum;\n\tint sum;\n\tint cha;\n\tstring s;\n\tstring snum;\n\tvector<int> hyo[1000];\n\n\tcin>>n;\n\n\tfor(int i=0;i<n;i++){\n\t\tcin>>s;\n\t\td=0;\n\t\tmd=0;\n\t\tfor(int i=0;i<s.size();i++){\n\t\t\tif(s[i]=='[') d++,md=d;\n\t\t\telse if(s[i]==']') d--;\n\t\t\telse{\n\t\t\t\tsnum=(\"\");\n\t\t\t\twhile(1){\n\t\t\t\t\tif(s[i]=='['||s[i]==']') break;\n\t\t\t\t\tsnum+=s[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\ti--;\n\t\t\t\tinum=0;\n\t\t\t\tfor(int j=0;j<snum.size();j++) inum+=(snum[j]-'0')*pow(10.0,(double)snum.size()-1-j);\n\t\t\t\thyo[d].push_back(inum);\n\t\t\t}\n\t\t\tif(d<=md-2){\n\t\t\t\tif(d==md-2) cha=2;\n\t\t\t\telse cha=1;\n\t\t\t\tsort(hyo[d+2].begin(),hyo[d+2].end());\n\t\t\t\tsum=0;\n\t\t\t\tfor(int j=0;j<hyo[d+2].size()/2+1;j++){\n\t\t\t\t\tsum+=hyo[d+2][j]/cha;\n\t\t\t\t\tif(cha==2) sum++;\n\t\t\t\t}\n\t\t\t\thyo[d+2].clear();\n\t\t\t\thyo[d+1].push_back(sum);\n\t\t\t}\n\t\t}\n\t\tsum=0;\n\t\tfor(int j=0;j<hyo[1].size()/2+1;j++){\n\t\t\tsum+=hyo[1][j];\n\t\t}\n\t\tcout<<sum<<endl;\n\t\tfor(int j=0;j<1000;j++){\n\t\t\tif(!hyo[j].empty()) hyo[j].clear();\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nclass Record {\n    public:\n        int t, n, m, s;\n};\n\nint compute_time(int s, int e, vector<Record> records) {\n    int count = 0;\n    int time = 0;\n    int table[1261];\n    for (int i=0; i<=1260; i++) {\n        table[i] = 0;\n    }\n    for (int i=0; i<(int)records.size(); i++) {\n        table[records[i].t] += 2*records[i].s-1;\n    }\n    for (int i=0; i<=1260; i++) {\n        count += table[i];\n        if (count > 0 && s <= i && i < e) {\n            time++;\n        }\n    }\n    return time;\n}\n\nint main() {\n    int n, m, r, q;\n    while (true) {\n        vector<Record> records[10001];\n        cin >> n >> m;\n        if (n == 0) {\n            return 0;\n        }\n        for (int i=0; i<=10000; i++) {\n            records[i].clear();\n        }\n        cin >> r;\n        for (int i=0; i<r; i++) {\n            Record rec;\n            cin >> rec.t >> rec.n >> rec.m >> rec.s;\n            records[rec.m].push_back(rec);\n        }\n        cin >> q;\n        for (int i=0; i<q; i++) {\n            int s, e, m;\n            cin >> s >> e >> m;\n            cout << compute_time(s, e, records[m]) << endl;\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>\n#include <cmath>\n\nstatic const int MOD = 1000000007;\nusing ll = long long;\nusing u32 = uint32_t;\nusing namespace std;\n\ntemplate<class T> constexpr T INF = ::numeric_limits<T>::max() / 32 * 15 + 208;\n\nint main() {\n    int q;\n    cin >> q;\n    while(q--){\n        string s;\n        cin >> s;\n        stack<pair<int, int>> S;\n        int x = 0, cur = 0;\n        for (auto &&i : s) {\n            if(i == '['){\n                cur++;\n            }else if(i == ']'){\n                if(x != 0){\n                    S.emplace(cur-1, (x+1)/2);\n                    x = 0;\n                    cur--;\n                }else {\n                    vector<int> v;\n                    while(!S.empty() && S.top().first == cur){\n                        v.emplace_back(S.top().second); S.pop();\n                    }\n                    sort(v.begin(),v.end());\n                    int y = 0;\n                    for (int j = 0; j < v.size()/2+1; ++j) {\n                        y += v[j];\n                    }\n                    cur--;\n                    S.emplace(cur, y);\n                }\n            }else {\n                x = x*10+(i-'0');\n            }\n        }\n        cout << S.top().second << \"\\n\";\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint ans = 0;\nint N;\nstring S;\n\n\nint solve(string s){\n\tif (s[0] != '[') {\n\t\treturn (stoi(s) + 1) / 2;\n\t}\n\tint cntL = 0;\n\tint R = 0;\n\tint MAXcntL = 0;\n\tint pL;\n\tvector<int> A = {};\n\tfor (int i = 0; i < s.size(); i++){\n\t\tif (s[i] == '[') {\n\t\t\tcntL ++;\n\t\t\tif (cntL == 1) pL = i;\n\t\t} else if (s[i] == ']') {\n\t\t\tcntL --;\n\t\t\tif (cntL == 0) {\n\t\t\t\tA.push_back(solve(s.substr(pL + 1, i - pL - 1)));\n\t\t\t}\n\t\t\n\t\t}\n\t}\n\tsort(A.begin(), A.end());\n\tfor (int i = 0; i < (A.size() + 1) / 2; i++) {\n\t\tR += A[i];\n\t}\n\treturn R;\n}\n\n\n\nint main () {\n\tcin >> N;\n\t\n\tfor (int n = 0; n < N; n ++) {\n\t\tcin >> S;\n\t\tans = solve(S);\n\t\tcout << ans << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint a[10][100],n,cnt[10],u,sum;string S,T;\nint main(){\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>S;u=0;\n\t\tfor(int i=0;i<S.size();i++){\n\t\t\tif(S[i]=='['){\n\t\t\t\tu++;T=\"\";\n\t\t\t}\n\t\t\telse if(S[i]==']'){\n\t\t\t\tif(T!=\"\"){\n\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\tu--;\n\t\t\t\t\ta[u][cnt[u]]=stoi(T);\n\t\t\t\t\tcnt[u]++;\n\t\t\t\t\tT=\"\";\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsort(a[u],a[u]+cnt[u]);\n\t\t\t\t\tsum=0;\n\t\t\t\t\tfor(int i=0;i<cnt[u]/2+1;i++){\n\t\t\t\t\t\tsum+=a[u][i]/2+1;\n\t\t\t\t\t}\n\t\t\t\t\tcnt[u]=0;\n\t\t\t\t\tu--;\n\t\t\t\t\ta[u][cnt[u]]=sum;\n\t\t\t\t\tcnt[u]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tT+=S[i];\n\t\t\t}\n\t\t}\n\t\tu=0;\n\t\tcout<<a[0][0]<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n#include <stdlib.h>\n#include <stdio.h>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <limits>\n#include <fstream>\nusing namespace std;\n#define FOR(I,A,B) for(int I = (A); I < (B); ++I)\n#define CLR(mat) memset(mat, 0, sizeof(mat))\ntypedef long long ll;\nint idx;\nstring s;\nint rec(){\n  idx++;\n  bool isNumber = false;\n  if(s[idx]!='[' && s[idx]!=']'){\n    string t = \"\";\n    while(s[idx]!='[' && s[idx]!=']'){\n      t += s[idx++];\n    }\n    idx++;\n    return stoi(t) / 2 + 1;\n  }\n  vector<int> v;\n  while(s[idx]!=']'){\n    v.push_back(rec());\n  }\n  sort(v.begin(), v.end());\n  int ret = 0;\n  FOR(i, 0, v.size() / 2 + 1){\n    ret += v[i];\n  }\n  idx++;\n  return ret;\n}\nint main()\n{\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  FOR(i,0,n){\n    cin >> s;\n    idx = 0;\n    cout << rec() << endl;\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<climits>\n#include<ctime>\n#include<cstring>\n#include<stack>\n#include<queue>\n#include<sstream>\n#include<string>\n\n#define ALL(v) (v).begin(),(v).end()\n#define REP(i,p,n) for(int i=p;i<(int)(n);++i)\n#define rep(i,n) REP(i,0,n)\n#define DUMP(list) cout << \"{ \"; for(auto nth : list){ cout << nth << \" \"; } cout << \"}\" << endl\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i);\n\nusing namespace std;\n\nint major(vector<int> tmp){\n\tsort(ALL(tmp));\n\tint size = tmp.size()/2+1,ans=0;\n\trep(i,size){\n\t\tans+=tmp[i];\n\t}\n\treturn ans;\n}\n\nint convert(int l,int r,string str){\n\treturn stoi(str.substr(l,r-1));\n}\n\n//?????????????????????\nint parse(int l,int r,string str){\n\tif(isdigit(str[l])) return convert(l,r,str)/2+1;\n\tstack<int> num_s;\n\tvector<int> tmp;\n\tfor(int i=l;i<r;i++){\n\t\tif(str[i]=='['){ \n\t\t\tnum_s.push(i);\t\n\t\t}else if(str[i]==']'){\n\t\t\tint next_l = num_s.top()+1;\n\t\t\tnum_s.pop();\n\t\t\ttmp.push_back(parse(next_l,i,str));\n\t\t}\n\t}\n\n\treturn major(tmp);\n}\n\nint main(){\n\tint n;\n\tstring str;\n\tcin >> n;\n\trep(i,n){\n\t\tcin >> str;\n\t\tcout << parse(1,str.size()-1,str) << endl;\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<string>\n#include<map>\n#include<cmath>\n#include<queue>\t\n#include<functional>\n\nusing namespace std;\n\nnamespace MyLib {\n#define ALL(a) a.begin(),a.end()\n#define REP(i,n) for(int i=0;i<n;i++)\n#define RREP(i,n) for(int i=n-1;i>=0;i--)\n#define debug(x) if(1)cout<<#x<<\":\"<<x<<endl;\n#define DEBUG(x) if(1)cout<<#x<<\":\"<<x<<endl;\n#define ll long long\n}\n\nusing namespace MyLib;\nint dps(string r);\n\nint main() {\n\tstring s;\n\tint n;\n\tcin >> n;\n\tREP(i, n) {\n\t\tcin >> s;\n\t\tcout << dps(s) << endl;\n\n\n\t}\n\treturn 0;\n\n\n}\n\nint dps(string r) {\n\tif ( r[1] != '['){\n\t\treturn (atoi((r.substr(1,r.size()-1)).c_str())+1)/2;\n\n\t}\n\telse {\n\t\tpriority_queue<int, vector<int>, greater<int> > q;\n\t\tint e=0;\n\t\tint count=0;\n\t\tint f = 1;\n\t\tfor (int i = 1; i < r.size() - 1; i++) {\n\t\t\tif (r[i] == '[')\n\t\t\t\tcount++;\n\t\t\telse if (r[i] == ']')\n\t\t\t\tcount--;\n\t\t\tif (count == 0) {\n\t\t\t\tq.push(dps(r.substr(f, i - f + 1)));\n\t\t\t\tf = i + 1;\n\t\t\t\te++;\n\t\t\t}\n\t\t}\n\t\tint sum = 0;\n\t\tREP(i, (e + 1) / 2) {\n\t\t\tsum +=q.top();\n\t\t\tq.pop();\n\t\t}\n\n\n\n\t\treturn sum;\n\t}\n\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<ll> vl;\nll h,w;\n\nint main(int argc, char const *argv[]) {\n  int T;\n  scanf(\"%d\", &T);\n  for(int unko=0;unko<T;unko++){\n    string s;\n    cin >> s;\n    stack<int> po;\n    int num = 0;\n    for(int i=0;i<s.size();i++){\n      if(s[i] == '['){\n        po.push(-1);\n      }\n      else if(s[i] == ']'){\n        if(num != 0){\n          po.pop();\n          po.push((num + 1)/2);\n          num = 0;\n        }\n        else{\n          vector<int> v;\n          while(po.top() != -1){\n            v.push_back(po.top());\n            po.pop();\n          }\n          po.pop();\n          sort(v.begin(), v.end());\n          int n = 0;\n          for(int j=0;j<(v.size() + 1)/2; j++)n += v[j];\n          po.push(n);\n        }\n      }\n      else{\n        num *= 10;\n        num += s[i] - '0';\n      }\n    }\n    printf(\"%d\\n\", po.top());\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "/*\n候補者は2人\n\n第1段階 有権者の過半数の票を得た候補者がその選挙区の勝者\n第k段階の選挙区の勝者は，この選挙区に含まれる第k − 1段階の選挙区のうち過半数で勝った候補者\n最終段階 選挙区は一つ\n*/\n\n// [l, r]\n// 一番下の選挙区の場合 → その選挙区の人数の過半数\n// 中間の選挙区の場合 → 下の選挙区で\n// [[....][...][...],...,[....]]\n// ↑                           ↑\n// l                           r\n// [ ← -1, ] ← +1 として、levelっている変数に加算\n// vector<int> Nums;    ← 子の選挙区で勝ち取るのに必要な最小得票数\n// int left = l+1, int right = l + 1\n// while(right++ <= r) \n//      if(input[right] == ']') \n//          Nums.push_back(rec(left, right))\n//          left = right+1\n// \n\n#include<bits/stdc++.h>\nusing namespace std;\n\nstring input;\n\nint rec(int l, int r){\n \n\n    if(input[l+1] == '['){ //中間の選挙区\n        vector<int> Nums;\n        int Left = l+1;\n        int level = 0;\n        for(int i = Left; i < r; ++i) {\n            if(input[i] == '[') --level;\n            else if(input[i] == ']') ++level;\n            if(level == 0) {\n                // [Left, i]\n                Nums.push_back(rec(Left, i));\n                // Leftを更新\n                Left = i+1;\n            }\n        }\n        sort(Nums.begin(), Nums.end());\n        // 小さい得票で勝ち取れる選挙区から過半数ぶんだけ取る。\n        int min_vote = 0;\n        for(int i = 0; i < Nums.size()/2 + 1; ++i) {\n            min_vote += Nums[i];\n        }\n        return min_vote;\n    }else{ //一番下の選挙区\n        //[l+1, r-1]の数字/2+1\n        string Num = input.substr(l+1, r-1 - (l+1) + 1);\n        return stoi(Num)/2 + 1;\n    }\n\n}\n\n\nint main(){\n    int n; cin >> n;\n    for(int i = 0; i < n; i++){\n        cin >> input;\n        cout << rec(0, input.size() - 1) << \"\\n\";\n    }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n; string s;\nint calc(int l, int r) {\n\tint d = 0, c = 0, w = l;\n\tfor (int i = l; i < r; i++) c += (s[i] == '[' || s[i] == ']' ? 1 : 0);\n\tif (c == 2) return stoi(s.substr(l + 1, r - l - 2));\n\tvector<int> v;\n\tfor (int i = l; i < r; i++) {\n\t\tif (s[i] == '[') d++;\n\t\tif (s[i] == ']') d--;\n\t\tif (d == 0) v.push_back(calc(w, i + 1)), w = i + 1;\n\t}\n\tsort(v.begin(), v.end());\n\tint ret = 0;\n\tfor (int i = 0; i <= v.size() / 2; i++) ret += v[i];\n\treturn ret;\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tcout << calc(0, s.size()) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include <sys/timeb.h>\n#include <fstream>\n\nusing namespace std;\n\n#define repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define replrev(i,a,b) for(int i=(int)(b)-1;i>=(int)(a);i--)\n#define reprev(i,n) replrev(i,0,n)\n#define repi(itr,ds) for(auto itr=ds.begin();itr!=ds.end();itr++)\n#define all(a) a.begin(),a.end()\n#define mp make_pair\n#define mt make_tuple\n#define INF 2000000000\n#define INFL 1000000000000000000LL\n#define EPS 1e-9\n#define MOD 1000000007\n#define PI 3.1415926536\n#define RMAX 4294967295\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<bool> vb;\ntypedef vector<char> vc;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<P> vP;\ntypedef vector<vector<int> > vvi;\ntypedef vector<vector<bool> > vvb;\ntypedef vector<vector<ll> > vvll;\ntypedef vector<vector<char> > vvc;\ntypedef vector<vector<string> > vvs;\ntypedef vector<vector<double> > vvd;\ntypedef vector<vector<P> > vvP;\ntypedef priority_queue<int, vector<int>, greater<int> > pqli;\ntypedef priority_queue<ll, vector<ll>, greater<ll> > pqlll;\ntypedef priority_queue<P, vector<P>, greater<P> > pqlP;\ntypedef pair<int, pair<int, int> > Edge;\ntypedef vector<Edge> vE;\ntypedef priority_queue<Edge, vector<Edge>, greater<Edge> > pqlE;\n\nint minimum(string str) {\n\t//cout << str << endl;\n\tvi nums;\n\tif (str[1] == '[') {\n\t\tint l = 1, r = 2;\n\t\twhile (true) {\n\t\t\tint cnt = 1;\n\t\t\twhile (cnt != 0) {\n\t\t\t\tif (str[r] == '[')cnt++;\n\t\t\t\telse if (str[r] == ']')cnt--;\n\t\t\t\tr++;\n\t\t\t}\n\t\t\tnums.push_back(minimum(string(str.begin() + l, str.begin() + r)));\n\t\t\tl = r;\n\t\t\tr = l + 1;\n\t\t\tif (str[l] == ']')break;\n\t\t}\n\t\tsort(all(nums));\n\t\tint ans = 0;\n\t\trep(i, nums.size() / 2 + 1){\n\t\t\tans += nums[i];\n\t\t}\n\t\t//cout << ans << endl;\n\t\treturn ans;\n\t}\n\telse {\n\t\tint ans = 0;\n\t\trepl(i, 1, str.length() - 1) {\n\t\t\tans = ans * 10 + (str[i] - '0');\n\t\t}\n\t\tans = (ans + 1) / 2;\n\t\t//cout << ans << endl;\n\t\treturn ans;\n\t}\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\trep(i, N) {\n\t\tstring str;\n\t\tcin >> str;\n\t\tcout << minimum(str) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\nint formula();\nint p;\nstring s;\n\nint main(){\n  int n;  \n  cin>>n;\n  while(n--){\n    cin>>s;\n    p=0;\n    cout<<formula()<<endl;\n  }\n  return 0;\n}\n\nint formula(){\n  int res=0,f=0;\n  vector<int> v;\n  while('0'<=s[p]&&s[p]<='9') res=res*10+s[p]-'0',p++,f=1;\n  if(f){\n    p++;\n    res=res/2+1;\n    return res;\n  }\n  while(s[p]=='[') p++,v.push_back(formula());\n  if(!f){\n    sort(v.begin(),v.end());\n    for(int i=0;i<v.size()/2+1;i++) res+=v[i];\n  }\n  return res;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nstring s;\nint p = 0;\n\nbool is_digit(char c){\n    return '0' <= c && c <= '9';\n}\n\nint dfs(){\n    vector<int> v;\n    while( p < s.size() ){\n        if( is_digit(s[p]) ){\n            int res = 0;\n            while( is_digit(s[p]) ){\n                res *= 10;\n                res += s[p] - '0';\n                p++;\n            }\n            p++;\n            return (res+1)/2;\n        }else if( s[p] == '[' ){\n            p++;\n            v.push_back( dfs() );\n        }else if( s[p] == ']' ){\n            p++;\n            sort(v.begin(), v.end());\n            int res = 0;\n            for(int i = 0; i <= v.size()/2; i++){\n                res += v[i];\n            }\n            return res;\n        }\n    }\n    return 0;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        cin >> s;\n        p = 1;\n        cout << dfs() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline bool chmax(T &a, T b)\n{\n    if (a < b)\n    {\n        a = b;\n        return 1;\n    }\n    return 0;\n}\ntemplate <class T>\ninline bool chmin(T &a, T b)\n{\n    if (a > b)\n    {\n        a = b;\n        return 1;\n    }\n    return 0;\n}\ntypedef long long int ll;\n\n#define EPS (1e-7)\n#define INF (1e9)\n#define LLINF (1e18)\n#define PI (acos(-1))\n#define MOD (1000000007)\n#define ALL(v) (v).begin(), (v).end()\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\n\n//-------------------------------------\n\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    int n;\n    cin >> n;\n    vector<ll> v[100];\n    for (int query = 0; query < n; query++)\n    {\n        for (int i = 0; i < 100; i++)\n        {\n            v[i].clear();\n        }\n        string s;\n        cin >> s;\n        int depth = 0;\n        ll num = 0;\n        for (int i = 0; i < (int)s.size(); i++)\n        {\n            if (s[i] == '[')\n            {\n                depth++;\n            }\n            else if (s[i] == ']')\n            {\n                if (num)\n                {\n                    v[depth].push_back((num + 1) / 2);\n                }\n                num = 0;\n                sort(ALL(v[depth]));\n                ll total = 0;\n                int m = ((int)v[depth].size() + 1) / 2;\n                for (int j = 0; j < m; j++)\n                {\n                    total += v[depth][j];\n                }\n                v[depth - 1].push_back(total);\n                v[depth].clear();\n                depth--;\n            }\n            else\n            {\n                num *= 10;\n                ll tmp = s[i] - '0';\n                num += tmp;\n            }\n        }\n        cout << v[0][0] << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cassert>\nusing namespace std;\nint pos;\nstring exp;\n\nint solve(){\n  vector<int> v;\n  string num = \"\";\n  if ( isdigit(exp[pos]) ){\n    while( isdigit(exp[pos]) ){\n      num += exp[pos];\n      pos++;\n    }\n    pos++;\n    int a = 0;\n    for ( int i = num.size()-1, p=1; i >= 0; i--, p*=10 ){\n      a += p*(num[i]-'0');\n    }\n    return (a+1)/2;\n  }\n\n  while(1){\n    if ( exp[pos] == '[' ){\n      pos++;\n      v.push_back(solve());\n    } else if ( exp[pos] == ']' ) break;\n  }\n  pos++;\n  sort(v.begin(), v.end());\n  int sum = 0;\n  for ( int i = 0; i < v.size()/2+1; i++ ) sum += v[i];\n  return sum;\n}\n\nmain(){\n  int t; cin >> t;\n  for ( int i = 0; i < t; i++ ){\n    cin >> exp;\n    pos = 0;\n    assert( exp[pos] == '[' ); pos++;\n    cout <<  solve() << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<string>\n#include<cmath>\n#include<cstdint>\n#include<cassert>\nusing namespace std;\n\ntypedef int64_t i64;typedef int32_t i32;\ntypedef int16_t i16;typedef int8_t i8;\ntypedef uint64_t ui64;typedef uint32_t ui32;\ntypedef uint16_t ui16;typedef uint8_t ui8;\n\ntypedef i32 int__;\n#define rep(i,j) for(int__ i=0;i<j;i++)\n#define repeat(i,j,k) for(int__ i=(j);i<(k);i++)\n#define repeat_eq(i,j,k) for(int__ i=(j);i<=(k);i++)\n#define all(v) begin(v),end(v)\n\nconst i32 INF=1<<30;//=10E10\n\nstring str;\nint pos;\n\nint rec(){\n  vector<int> vote;\n\n  if(str[pos]=='['){\n    pos++;\n    while(str[pos]!=']'){\n      vote.push_back(rec());\n    };\n  }\n  else if(isdigit(str[pos])==true){\n    int pos_p=pos;\n    while(isdigit(str[pos]))++pos;// ']'まで進める\n    int vote_1=atoi(str.substr(pos_p,pos-pos_p).c_str());\n    return vote_1/2+1;\n  }\n\n  int ans=0;\n  sort(all(vote));\n\n  rep(i, (int)vote.size()/2 + 1 ){\n    ans+=vote[i];\n  }\n  pos++;\n  return ans;\n}\n\nint main()\n{\n  int n;cin>>n;\n  rep(i,n){\n    cin>>str;\n    pos=0;\n    cout<<rec()<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint n;\nstring s;\n\nint p;\nint calc()\n{\n  //cout << p << endl;\n  vector<int> vec;\n  while(1){\n    if(s[p] == '['){\n      p++;\n      vec.push_back(calc());\n      //p++;\n    }\n    else if(s[p] == ']'){\n      sort(vec.begin(), vec.end());\n      int ret = 0;\n      //for(int i = 0; i < vec.size(); i++) cout << vec[i] << \" \"; cout << endl;\n      for(int i = 0; i <= vec.size()/2; i++) ret += vec[i];\n      p++;\n      //cout << \"*\" << ret << endl;\n      return ret;\n    }\n    else{\n        int ret = 0;\n        while(s[p] != ']'){\n          ret *= 10;\n          ret += s[p] - '0';\n          p++;\n        }\n        p++;\n        //cout << \"@\" << ret/2+1 << endl;\n        return ret/2+1;\n    }\n  }\n}\n\nint main(void)\n{\n  cin >> n;\n  for(int i = 0; i < n; i++){\n    cin >> s;\n    s += \"]\";\n    p = 0;\n    cout << calc() << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <cctype>\n\nusing namespace std;\ntypedef string::const_iterator State;\n\nclass Zone\n{\npublic:\n    int value;\n    vector<Zone> zones;\n\n    Zone() :value(-1) {}\n    Zone(int v) :value(v) {}\n\n    int best()\n    {\n        if(value != -1) return value / 2 + 1;\n\n        vector<int> needs;\n\n        for(auto zone : zones) {\n            needs.push_back(zone.best());\n        }\n\n        sort(needs.begin(), needs.end());\n\n        return accumulate(needs.begin(), needs.begin() + needs.size() / 2 + 1, 0);\n    }\n};\n\nZone read(State& it)\n{\n    if(isdigit(*it)) {\n        int n = 0;\n\n        for(; isdigit(*it); it++) {\n            n *= 10;\n            n += *it - '0';\n        }\n\n        return n;\n    } else {\n        Zone zone;\n\n        while(*it == '[') {\n            it++;\n            zone.zones.push_back(read(it));\n            it++;\n        }\n\n        return zone;\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    for(int i = 0; i < n; i++) {\n        string line;\n        cin >> line;\n        State it = line.begin();\n        cout << read(it).best() << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "//include\n//------------------------------------------\n#include <vector>\n#include <list>\n#include <map>\n#include <climits>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <queue>\n#include <random>\n#include <fstream>\n\nusing namespace std;\n\n//typedef\n//------------------------------------------\ntypedef long long LL;\ntypedef vector<int> VI;\ntypedef vector<bool> VB;\ntypedef vector<char> VC;\ntypedef vector<double> VD;\ntypedef vector<string> VS;\ntypedef vector<LL> VLL;\ntypedef vector<VI> VVI;\ntypedef vector<VB> VVB;\ntypedef vector<VS> VVS;\ntypedef vector<VLL> VVLL;\ntypedef vector<VVI> VVVI;\ntypedef vector<VVLL> VVVLL;\ntypedef pair<int, int> PII;\ntypedef pair<LL, LL> PLL;\ntypedef pair<int, string> PIS;\ntypedef pair<string, int> PSI;\ntypedef pair<string, string> PSS;\n\n\n//数値・文字列\n//------------------------------------------\ninline int toInt(string s) {\n    int v;\n    istringstream sin(s);\n    sin >> v;\n    return v;\n}\n\ninline LL toLongLong(string s) {\n    LL v;\n    istringstream sin(s);\n    sin >> v;\n    return v;\n}\n\ntemplate<class T>\ninline string toString(T x) {\n    ostringstream sout;\n    sout << x;\n    return sout.str();\n}\n\ninline VC toVC(string s) {\n    VC data(s.begin(), s.end());\n    return data;\n}\n\ntemplate<typename List>\nvoid SPRIT(const std::string &s, const std::string &delim, List &result) {\n    result.clear();\n    string::size_type pos = 0;\n    while (pos != string::npos) {\n\tstring::size_type p = s.find(delim, pos);\n\tif (p == string::npos) {\n\t    result.push_back(s.substr(pos));\n\t    break;\n\t}\n\telse {\n\t    result.push_back(s.substr(pos, p - pos));\n\t}\n\tpos = p + delim.size();\n    }\n}\n\nstring TRIM(const string &str, const char *trimCharacterList = \" \\t\\v\\r\\n\") {\n    string result;\n    string::size_type left = str.find_first_not_of(trimCharacterList);\n    if (left != string::npos) {\n\tstring::size_type right = str.find_last_not_of(trimCharacterList);\n\tresult = str.substr(left, right - left + 1);\n    }\n    return result;\n}\n\ntemplate<typename T>\nbool VECTOR_EXISTS(vector<T> vec, T data) {\n    auto itr = std::find(vec.begin(), vec.end(), data);\n    size_t index = distance(vec.begin(), itr);\n    if (index != vec.size()) {\n\treturn true;\n    }\n    else {\n\treturn 0;\n    }\n}\n\n#define UPPER(s) transform((s).begin(), (s).end(), (s).begin(), ::toupper)\n#define LOWER(s) transform((s).begin(), (s).end(), (s).begin(), ::tolower)\n\n\n\n//四捨五入 nLen=小数点第N位にする\n//------------------------------------------\n\n//切り上げ\ndouble ceil_n(double dIn, int nLen) {\n    double dOut;\n    dOut = dIn * pow(10.0, nLen);\n    dOut = (double)(int)(dOut + 0.9);\n    return dOut * pow(10.0, -nLen);\n}\n\n//切り捨て\ndouble floor_n(double dIn, int nLen) {\n    double dOut;\n    dOut = dIn * pow(10.0, nLen);\n    dOut = (double)(int)(dOut);\n    return dOut * pow(10.0, -nLen);\n}\n\n//四捨五入\ndouble round_n(double dIn, int nLen) {\n    double dOut;\n    dOut = dIn * pow(10.0, nLen);\n    dOut = (double)(int)(dOut + 0.5);\n    return dOut * pow(10.0, -nLen);\n}\n\n//n桁目の数の取得\nint take_a_n(int num, int n) {\n    string str = toString(num);\n    return str[str.length() - n] - '0';\n}\n\n\n//進数\n//------------------------------------------\n\n//\"1111011\" → 123\nint strbase_2to10(const std::string &s) {\n    int out = 0;\n    for (int i = 0, size = s.size(); i < size; ++i) {\n\tout *= 2;\n\tout += ((int)s[i] == 49) ? 1 : 0;\n    }\n    return out;\n}\n\n//\"123\" → 1111011\nint strbase_10to2(const std::string &s) {\n    int binary = toInt(s);\n    int out = 0;\n    for (int i = 0; binary > 0; i++) {\n\tout = out + (binary % 2) * pow(static_cast<int>(10), i);\n\tbinary = binary / 2;\n    }\n    return out;\n}\n\n//\"ABC\" 2748\nint strbase_16to10(const std::string &s) {\n    int out = stoi(s, 0, 16);\n    return out;\n}\n\n//1111011 → 123\nint intbase_2to10(int in) {\n    string str = toString(in);\n    return strbase_2to10(str);\n}\n\n//123 → 1111011\nint intbase_10to2(int in) {\n    string str = toString(in);\n    return strbase_10to2(str);\n}\n\nint intbase_16to10(int in) {\n    string str = toString(in);\n    return strbase_16to10(str);\n}\n\n//123→ \"7B\"\nstring intbase_10to16(unsigned int val, bool lower = true) {\n    if (!val)\n\treturn std::string(\"0\");\n    std::string str;\n    const char hc = lower ? 'a' : 'A';     // 小文字 or 大文字表記\n    while (val != 0) {\n\tint d = val & 15;     // 16進数一桁を取得\n\tif (d < 10)\n\t    str.insert(str.begin(), d + '0');  //  10未満の場合\n\telse //  10以上の場合\n\t    str.insert(str.begin(), d - 10 + hc);\n\tval >>= 4;\n    }\n    return str;\n}\n\n//整数を2進数表記したときの1の個数を返す\nLL bitcount64(LL bits) {\n    bits = (bits & 0x5555555555555555) + (bits >> 1 & 0x5555555555555555);\n    bits = (bits & 0x3333333333333333) + (bits >> 2 & 0x3333333333333333);\n    bits = (bits & 0x0f0f0f0f0f0f0f0f) + (bits >> 4 & 0x0f0f0f0f0f0f0f0f);\n    bits = (bits & 0x00ff00ff00ff00ff) + (bits >> 8 & 0x00ff00ff00ff00ff);\n    bits = (bits & 0x0000ffff0000ffff) + (bits >> 16 & 0x0000ffff0000ffff);\n    return (bits & 0x00000000ffffffff) + (bits >> 32 & 0x00000000ffffffff);\n}\n\n\n\n//comparison\n//------------------------------------------\n#define C_MAX(a, b) ((a)>(b)?(a):(b))\n#define C_MIN(a, b) ((a)<(b)?(a):(b))\n#define C_ABS(a, b) ((a)<(b)?(b)-(a):(a)-(b))\n\n\n\n//container util\n//------------------------------------------\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define SZ(a) int((a).size())\n#define EACH(i, c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s, e) ((s).find(e)!=(s).end())\n#define COUNT(obj, v) count((obj).begin(), (obj).end(), v)\n#define SEARCH(v, w) search((v).begin(), (v).end(), (w).begin(), (w).end())\n#define B_SEARCH(obj, v) binary_search((obj).begin(), (obj).end(), v)\n#define SORT(c) sort((c).begin(),(c).end())\n#define RSORT(c) sort((c).rbegin(),(c).rend())\n#define REVERSE(c) reverse((c).begin(), (c).end())\n#define SUMI(obj) accumulate((obj).begin(), (obj).end(), 0)\n#define SUMD(obj) accumulate((obj).begin(), (obj).end(), 0.)\n#define SUMLL(obj) accumulate((obj).begin(), (obj).end(), 0LL)\n#define SUMS(obj) accumulate((obj).begin(), (obj).end(), string())\n#define UB(obj, n) upper_bound((obj).begin(), (obj).end(), n)\n#define LB(obj, n) lower_bound((obj).begin(), (obj).end(), n)\n#define PB push_back\n#define MP make_pair\n\n\n\n\n//input output\n//------------------------------------------\n#define GL(s) getline(cin, (s))\n#define INIT std::ios::sync_with_stdio(false);std::cin.tie(0);\n#define OUT(d) std::cout<<(d);\n#define OUT_L(d) std::cout<<(d)<<endl;\n#define FOUT(n, data) std::cout<<std::fixed<<std::setprecision(n)<<(data);\n#define FOUT_L(n, data) std::cout<<std::fixed<<std::setprecision(n)<<(data)<<\"\\n\";\n#define EL() std::cout << \"\\n\";\n#define SHOW_VECTOR(v) {std::cerr << #v << \"\\t:\";for(const auto& xxx : v){std::cerr << xxx << \" \";}std::cerr << \"\\n\";}\n#define SHOW_MAP(v) {std::cerr << #v << endl; for(const auto& xxx: v){std::cerr << xxx.first << \" \" << xxx.second << \"\\n\";}}\n\ntemplate<typename T>\nstd::istream &operator >> (std::istream &is, std::vector<T> &vec) {\n    for (T &x : vec) is >> x;\n    return is;\n}\n\ntemplate<typename T>\nstd::ostream &operator<<(std::ostream &os, const std::vector<T> &vec) {\n    for (const T &x : vec) os << x << \" \";\n    return os;\n}\n\n\n//repetition\n//------------------------------------------\n#define FOR(i, a, b) for(int i=(a);i<(b);++i)\n#define RFOR(i, a, b) for(int i=(b)-1;i>=(a);--i)\n#define REP(i, n)  FOR(i,0,n)\n#define RREP(i, n) for(int i = n-1;i >= 0;i--)\n#define FORLL(i, a, b) for(LL i=LL(a);i<LL(b);++i)\n#define RFORLL(i, a, b) for(LL i=LL(b)-1;i>=LL(a);--i)\n#define REPLL(i, n) for(LL i=0;i<LL(n);++i)\n#define RREPLL(i, n) for(LL i=LL(n)-1;i>=0;--i)\n#define FOREACH(x, v) for(auto &(x) : (v))\n#define FORITER(x, v) for(auto (x) = (v).begin(); (x) != (v).end(); ++(x))\n\n\n//constant\n//--------------------------------------------\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst int MOD = 1000000007;\nconst int dx[] = { -1, 0, 1, 0 };\nconst int dy[] = { 0, 1, 0, -1 };\n\n\n//math\n//--------------------------------------------\n\n//min <= aim <= max\ntemplate<typename T>\ninline bool BETWEEN(const T aim, const T min, const T max) {\n    if (min <= aim && aim <= max) {\n\treturn true;\n    }\n    else {\n\treturn false;\n    }\n}\n\n\ntemplate<class T>\ninline T SQR(const T x) { return x * x; }\n\ntemplate<class T1, class T2>\ninline T1 POW(const T1 x, const T2 y) {\n    if (!y)return 1;\n    else if ((y & 1) == 0) {\n\treturn SQR(POW(x, y >> 1));\n    }\n    else return POW(x, y ^ 1) * x;\n}\n\n\ntemplate<typename T>\nconstexpr T ABS(T x) {\n    return x < 0 ? -x : x;\n}\n\n//partial_permutation nPr 順列\n//first・・最初の数\n//middle・・r(取り出す数)\n//last・・n(全体数)\ntemplate<class BidirectionalIterator>\nbool next_partial_permutation(BidirectionalIterator first, BidirectionalIterator middle, BidirectionalIterator last) {\n    reverse(middle, last);\n    return next_permutation(first, last);\n}\n\n//combination nCr 組み合わせ\n//first1・・最初の数\n//last1==first2・・r(取り出す数)\n//last2・・n(全体数)\ntemplate<class BidirectionalIterator>\nbool next_combination(BidirectionalIterator first1, BidirectionalIterator last1, BidirectionalIterator first2,\n    BidirectionalIterator last2) {\n    if ((first1 == last1) || (first2 == last2)) {\n\treturn false;\n    }\n    BidirectionalIterator m1 = last1;\n    BidirectionalIterator m2 = last2;\n    --m2;\n    while (--m1 != first1 && !(*m1 < *m2)) {\n    }\n    bool result = (m1 == first1) && !(*first1 < *m2);\n    if (!result) {\n\twhile (first2 != m2 && !(*m1 < *first2)) {\n\t    ++first2;\n\t}\n\tfirst1 = m1;\n\tstd::iter_swap(first1, first2);\n\t++first1;\n\t++first2;\n    }\n    if ((first1 != last1) && (first2 != last2)) {\n\tm1 = last1;\n\tm2 = first2;\n\twhile ((m1 != first1) && (m2 != last2)) {\n\t    std::iter_swap(--m1, m2);\n\t    ++m2;\n\t}\n\tstd::reverse(first1, m1);\n\tstd::reverse(first1, last1);\n\tstd::reverse(m2, last2);\n\tstd::reverse(first2, last2);\n    }\n    return !result;\n}\n\n\n\n\n//numeric_law\n//--------------------------------------------\n\ntemplate<typename T>\nconstexpr bool ODD(T x) {\n    return x % 2 != 0;\n}\n\ntemplate<typename T>\nconstexpr bool EVEN(T x) {\n    return x % 2 == 0;\n}\n\n//最大公約数\ntemplate<class T>\ninline T GCD(const T x, const T y) {\n    if (x < 0)return GCD(-x, y);\n    if (y < 0)return GCD(x, -y);\n    return (!y) ? x : GCD(y, x % y);\n}\n\n//最小公倍数\ntemplate<class T>\ninline T LCM(const T x, const T y) {\n    if (x < 0)return LCM(-x, y);\n    if (y < 0)return LCM(x, -y);\n    return x * (y / GCD(x, y));\n}\n\n//ax + by = 1\n//x,yが変数に格納される\ntemplate<class T>\ninline T EXTGCD(const T a, const T b, T &x, T &y) {\n    if (a < 0) {\n\tT d = EXTGCD(-a, b, x, y);\n\tx = -x;\n\treturn d;\n    }\n    if (b < 0) {\n\tT d = EXTGCD(a, -b, x, y);\n\ty = -y;\n\treturn d;\n    }\n    if (!b) {\n\tx = 1;\n\ty = 0;\n\treturn a;\n    }\n    else {\n\tT d = EXTGCD(b, a % b, x, y);\n\tT t = x;\n\tx = y;\n\ty = t - (a / b) * y;\n\treturn d;\n    }\n}\n\n//素数\ntemplate<class T>\ninline bool ISPRIME(const T x) {\n    if (x <= 1)return false;\n    for (T i = 2; SQR(i) <= x; i++)if (x % i == 0)return false;\n    return true;\n}\n\n//素数をtrueとして返す\ntemplate<class T>\nVB ERATOSTHENES(const T n) {\n    VB arr(n, true);\n    for (int i = 2; SQR(i) < n; i++) {\n\tif (arr[i]) {\n\t    for (int j = 0; i * (j + 2) < n; j++) {\n\t\tarr[i * (j + 2)] = false;\n\t    }\n\t}\n    }\n    return arr;\n}\n\n// a <= x < b の素数を返す\ntemplate<typename T>\nVB ERATOSTHENES(const T a, const T b) {\n    VB small = ERATOSTHENES(b);\n    VB prime(b - a, true);\n\n    for (int i = 2; (T)(SQR(i)) < b; i++) {\n\tif (small[i]) {\n\t    for (T j = max(2, (a + i - 1) / i) * i; j < b; j += i) {\n\t\tprime[j - a] = false;\n\t    }\n\t}\n    }\n\n    return prime;\n}\n\n//約数\ntemplate<class T>\nvector<T> DIVISOR(T n) {\n    vector<T> v;\n    for (int i = 1; i * i <= n; ++i) {\n\tif (n % i == 0) {\n\t    v.push_back(i);\n\t    if (i != n / i) {\n\t\tv.push_back(n / i);\n\t    }\n\t}\n    }\n    sort(v.begin(), v.end());\n    return v;\n}\n\n//組み合わせ個数\ntemplate<typename T>\nT NCR(T n, T r) {\n    T ans = 1;\n    REPLL(i, r) {\n\tans = ans * (n - i) / (i + 1);\n    }\n    return ans;\n}\n\n//行列\nint MATRIZ_CHAIN(VI &p, VVI &s) {\n    const static int INF = 1 << 20;\n    const int n = p.size() - 1;\n    VVI X(n, VI(n, INF));\n    s.resize(n, VI(n));\n    for (int i = 0; i < n; ++i) X[i][i] = 0;\n    for (int w = 1; w < n; ++w)\n\tfor (int i = 0, j; j = i + w, j < n; ++i)\n\t    for (int k = i; k < j; ++k) {\n\t\tint f = p[i] * p[k + 1] * p[j + 1];\n\t\tif (X[i][k] + X[k + 1][j] + f < X[i][j]) {\n\t\t    X[i][j] = X[i][k] + X[k + 1][j] + f;\n\t\t    s[i][j] = k;\n\t\t}\n\t    }\n    return X[0][n - 1];\n}\n\n//最長増加部分列\nVI LIS(const VI &a) {\n    const static int INF = 99999999;\n    const int n = a.size();\n    VI A(n, INF);\n    VI id(n);\n    for (int i = 0; i < n; ++i) {\n\tid[i] = distance(A.begin(), lower_bound(A.begin(), A.end(), a[i]));\n\tA[id[i]] = a[i];\n    }\n    int m = *max_element(id.begin(), id.end());\n    VI b(m + 1);\n    for (int i = n - 1; i >= 0; --i)\n\tif (id[i] == m) b[m--] = a[i];\n    return b;\n}\n\n//最長共通部分列 string->toVC\ntemplate<typename T>\nvector<T> LCS(const vector<T> &a, const vector<T> &b) {\n    const int n = a.size(), m = b.size();\n    vector<VI> X(n + 1, VI(m + 1));\n    vector<VI> Y(n + 1, VI(m + 1));\n    REP(i, n) {\n\tREP(j, m) {\n\t    if (a[i] == b[j]) {\n\t\tX[i + 1][j + 1] = X[i][j] + 1;\n\t\tY[i + 1][j + 1] = 0;\n\t    }\n\t    else if (X[i + 1][j] < X[i][j + 1]) {\n\t\tX[i + 1][j + 1] = X[i][j + 1];\n\t\tY[i + 1][j + 1] = +1;\n\t    }\n\t    else {\n\t\tX[i + 1][j + 1] = X[i + 1][j];\n\t\tY[i + 1][j + 1] = -1;\n\t    }\n\t}\n    }\n    vector<T> c;\n    for (int i = n, j = m; i > 0 && j > 0;) {\n\tif (Y[i][j] > 0) --i;\n\telse if (Y[i][j] < 0) --j;\n\telse {\n\t    c.PB(a[i - 1]);\n\t    --i;\n\t    --j;\n\t}\n    }\n    REVERSE(c);\n    return c;\n}\n\n//コイン C総額 cs使用できるコインの種類\nVI money_change(int C, VI &cs) {\n    const int INF = 99999999;\n    int n = cs.size();\n    VI xs(C + 1, INF);\n    VI ys(C + 1);\n    xs[0] = 0;\n    for (int i = 0; i < n; ++i) {\n\tfor (int c = 0; c + cs[i] <= C; ++c) {\n\t    if (xs[c + cs[i]] > xs[c] + 1) {\n\t\txs[c + cs[i]] = xs[c] + 1;\n\t\tys[c + cs[i]] = c;\n\t    }\n\t}\n    }\n    VI zs;\n    for (int c = C; c > 0; c = ys[c]) {\n\tzs.push_back(c - ys[c]);\n    }\n    return zs;\n}\n\n\n//Vector2D\n//--------------------------------------------\ntemplate<class T>\nstruct Vec2D {\n    T x, y;\n\n    Vec2D() = default;\n\n    constexpr Vec2D(T x, T y)\n\t: x{ x }, y{ y } {}\n\n    static constexpr T Dot(const Vec2D &lhs, const Vec2D &rhs) {\n\treturn lhs.x * rhs.x + lhs.y * rhs.y;\n    }\n\n    static constexpr T Cross(const Vec2D &lhs, const Vec2D &rhs) {\n\treturn{ lhs.x * rhs.y - lhs.y * rhs.x };\n    }\n\n    constexpr T dot(const Vec2D &rhs) const {\n\tDot(*this, rhs);\n    }\n\n    constexpr Vec2D cross(const Vec2D &rhs) const {\n\tDot(*this, rhs);\n    }\n\n    T magnitude() const {\n\treturn std::sqrt(sqrMagnitude());\n    }\n\n    constexpr T sqrMagnitude() const {\n\treturn x * x + y * y;\n    }\n\n    Vec2D normalized() const {\n\treturn *this / magnitude();\n    }\n\n    Vec2D normalize() {\n\t*this = normalized();\n\treturn *this;\n    }\n\n    constexpr bool isZero() const {\n\treturn x == 0 && y == 0;\n    }\n\n    constexpr Vec2D operator+() const {\n\treturn *this;\n    }\n\n    constexpr Vec2D operator-() const {\n\treturn{ -x, -y };\n    }\n\n\n    constexpr Vec2D operator+(Vec2D rhs) const {\n\treturn{ x + rhs.x, y + rhs.y };\n    }\n\n    constexpr Vec2D operator-(Vec2D rhs) const {\n\treturn{ x - rhs.x, y - rhs.y };\n    }\n\n    template<class U>\n    constexpr Vec2D operator*(U rhs) const {\n\treturn{ x * rhs, y * rhs };\n    }\n\n    template<class U>\n    constexpr Vec2D operator/(U rhs) const {\n\treturn{ x / rhs, y / rhs };\n    }\n\n    constexpr Vec2D &operator+=(const Vec2D &other) {\n\tx += other.x;\n\ty += other.y;\n\treturn *this;\n    }\n\n    constexpr Vec2D &operator-=(const Vec2D &other) {\n\tx -= other.x;\n\ty -= other.y;\n\treturn *this;\n    }\n\n    template<class U>\n    constexpr Vec2D &operator*=(U s) {\n\tx *= s;\n\ty *= s;\n\treturn *this;\n    }\n\n    template<class U>\n    constexpr Vec2D &operator/=(U s) {\n\tx /= s;\n\ty /= s;\n\treturn *this;\n    }\n\n};\n\ntemplate<class T, class U>\ninline constexpr Vec2D<T> operator*(U s, Vec2D<T> v) {\n    return{ s * v.x, s * v.y };\n}\n\n//Vector3D\n//--------------------------------------------\ntemplate<class T>\nstruct Vec3D {\n    T x, y, z;\n\n    Vec3D() = default;\n\n    constexpr Vec3D(T x, T y, T z)\n\t: x{ x }, y{ y }, z{ z } {}\n\n    constexpr Vec3D(T x, T y)\n\t: Vec3D(x, y, 0) {}\n\n    static constexpr T Dot(const Vec3D &lhs, const Vec3D &rhs) {\n\treturn lhs.x * rhs.x + lhs.y * rhs.y + lhs.z * rhs.z;\n    }\n\n    static constexpr Vec3D Cross(const Vec3D &lhs, const Vec3D &rhs) {\n\treturn{\n\t    lhs.y * rhs.z - lhs.z * rhs.y,\n\t    lhs.z * rhs.x - lhs.x * rhs.z,\n\t    lhs.x * rhs.y - lhs.y * rhs.x\n\t};\n    }\n\n    constexpr T dot(const Vec3D &rhs) const {\n\tDot(*this, rhs);\n    }\n\n    constexpr Vec3D cross(const Vec3D &rhs) const {\n\tDot(*this, rhs);\n    }\n\n    T magnitude() const {\n\treturn std::sqrt(sqrMagnitude());\n    }\n\n    constexpr T sqrMagnitude() const {\n\treturn x * x + y * y + z * z;\n    }\n\n    Vec3D normalized() const {\n\treturn *this / magnitude();\n    }\n\n    Vec3D normalize() {\n\t*this = normalized();\n\treturn *this;\n    }\n\n    constexpr bool isZero() const {\n\treturn x == 0 && y == 0 && z == 0;\n    }\n\n    constexpr Vec3D operator+() const {\n\treturn *this;\n    }\n\n    constexpr Vec3D operator-() const {\n\treturn{ -x, -y, -z };\n    }\n\n\n    constexpr Vec3D operator+(Vec3D rhs) const {\n\treturn{ x + rhs.x, y + rhs.y, z + rhs.z };\n    }\n\n    constexpr Vec3D operator-(Vec3D rhs) const {\n\treturn{ x - rhs.x, y - rhs.y, z - rhs.z };\n    }\n\n    template<class U>\n    constexpr Vec3D operator*(U rhs) const {\n\treturn{ x * rhs, y * rhs, z * rhs };\n    }\n\n    template<class U>\n    constexpr Vec3D operator/(U rhs) const {\n\treturn{ x / rhs, y / rhs, z / rhs };\n    }\n\n    constexpr Vec3D &operator+=(const Vec3D &other) {\n\tx += other.x;\n\ty += other.y;\n\tz += other.z;\n\treturn *this;\n    }\n\n    constexpr Vec3D &operator-=(const Vec3D &other) {\n\tx -= other.x;\n\ty -= other.y;\n\tz -= other.z;\n\treturn *this;\n    }\n\n    template<class U>\n    constexpr Vec3D &operator*=(U s) {\n\tx *= s;\n\ty *= s;\n\tz *= s;\n\treturn *this;\n    }\n\n    template<class U>\n    constexpr Vec3D &operator/=(U s) {\n\tx /= s;\n\ty /= s;\n\tz /= s;\n\treturn *this;\n    }\n\n};\n\ntemplate<class T, class U>\ninline constexpr Vec3D<T> operator*(U s, Vec3D<T> v) {\n    return{ s * v.x, s * v.y, s * v.z };\n}\n\n\n//confirmation\n//--------------------------------------------\n\n//clear memory\n#define CLR(arr, d) memset((arr), (d),sizeof(arr))\n\n//debug\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\n\n/*\n*\n*\n*   ~~~~Below My Answer~~~~\n*\n*\n**/\n\n\nint func(string S, int stages) {\n    int ans = 0;\n\n    string _S = S.substr(1, SZ(S) - 2);\n    if (stages == 1) {\n\tint data = toInt(_S);\n\treturn data;\n    }\n\n    string brackets = \"\";\n    REP(i, stages-1) {\n\tbrackets += ']';\n    }\n\n    VS strs;\n    for (int i = 0; i < SZ(_S);) {\n\tauto it = _S.find(brackets, i);\n\tstrs.push_back(_S.substr(i, (it-i)+SZ(brackets)));\n\ti += (it-i)+SZ(brackets);\n    }\n\n  //  FOREACH(x, strs) {\n\t//OUT_L(x);\n    //}\n\n    VI datas(SZ(strs));\n    REP(i, SZ(datas)) {\n\tdatas[i] = func(strs[i], stages - 1);\n    }\n    SORT(datas);\n\n    //SHOW_VECTOR(datas);\n\n    REP(i, SZ(datas) / 2 + 1) {\n\tif (stages == 2) {\n\t    ans += datas[i] / 2 + 1;\n\t}\n\telse {\n\t    ans += datas[i];\n\t}\n    }\n\n  //  OUT_L(ans);\n\n    \n    return ans;\n}\n\nint main() {\n\n    int N;\n    cin >> N;\n\n    REP(_, N) {\n\tstring S; \n\tcin >> S;\n\n\tint stages = 0;\n\twhile (S[stages] == '[') stages++;\n\n\t\n\tint ans = func(S, stages);\n\n\tOUT_L(ans);\n\n    }\n\n    return 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nstring s;\nint p = 0;\n\nbool is_digit(char c){\n\treturn '0' <= c && c <= '9';\n}\n\nint dfs(){\n\tvector<int> v;\n\twhile( p < s.size() ){\n\t\tif( is_digit(s[p]) ){\n\t\t\tint res = 0;\n\t\t\twhile( is_digit(s[p]) ){\n\t\t\t\tres *= 10;\n\t\t\t\tres += s[p] - '0';\n\t\t\t\tp++;\n\t\t\t}\n\t\t\tv.push_back((res + 1) / 2);\n\t\t}else if( s[p] == '[' ){\n\t\t\tp++;\n\t\t\tv.push_back( dfs() );\n\t\t}else if( s[p] == ']' ){\n\t\t\tp++;\n\t\t\tint n = v.size();\n\t\t\tvector<int> a = v;\n\t\t\tsort(a.begin(), a.end());\n\t\t\tint res = 0;\n\t\t\tfor(int i = 0; i <= n/2; i++){\n\t\t\t\tres += a[i];\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tcin >> s;\n\t\tp = 1;\n\t\tcout << dfs() << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstring cal_p(string str) {\n\tvector<int> ns;\n\tfor (int i = 0; i < str.length(); ++i) {\n\t\tif (str[i] != ' ') {\n\t\t\tint len = 0;\n\t\t\twhile (str[i+len] != ' ') {\n\t\t\t\t++len;\n\t\t\t}\n\t\t\tns.push_back(stoi(str.substr(i,len)));\n\t\t\ti += len;\n\t\t}\n\t}\n\tsort(ns.begin(),ns.end());\n\tint sum = 0;\n\tfor (int i = 0; i < (ns.size()+1)/2; ++i) {\n\t\tsum += ns[i];\n\t}\n\treturn to_string(sum);\n}\n\nint main(void) {\n\tint n;\n\tcin >> n;\n\tfor (int q = 0; q < n; ++q) {\n\t\tstring str;\n\t\tcin >> str;\n\t\tstring norm = \"\";\n\t\tint deep = 0;\n\t\tint mp = 0;\n\t\tfor (int i = 0; i < str.length(); ++i) {\n\t\t\tif (str[i] == '[') {\n\t\t\t\tdeep = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if (str[i] == ']') {\n\t\t\t\tnorm += \" \";\n\t\t\t\t++deep;\n\t\t\t\tmp = max(mp,deep);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeep = 0;\n\t\t\t\tint len = 0;\n\t\t\t\twhile (str[i+len] != ']') {\n\t\t\t\t\t++len;\n\t\t\t\t}\n\t\t\t\tnorm += to_string((stoi(str.substr(i,len))/2)+1);\n\t\t\t\ti += len-1;\n\t\t\t}\n\t\t}\n\n\t\tfor (int time = 0; time < deep-1; ++time) {\n\t\t\tint ind = 0;\n\t\t\tint st = 0;\n\t\t\tint len = 0;\n\t\t\tbool sp = false;\n\t\t\tstring next = \"\";\n\t\t\tstring temp = \"\";\n\t\t\twhile (ind < norm.length()) {\n\t\t\t\tif (norm[ind] == ' ') {\n\t\t\t\t\tif (sp) {\n\t\t\t\t\t\tlen = 0;\n\t\t\t\t\t\tst = ind;\n\t\t\t\t\t\tnext += cal_p(temp);\n\t\t\t\t\t\tnext += \" \";\n\t\t\t\t\t\ttemp = \"\";\n\t\t\t\t\t\tsp = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttemp += norm[ind];\n\t\t\t\t\t\t++len;\n\t\t\t\t\t\tsp = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsp = false;\n\t\t\t\t\ttemp += norm[ind];\n\t\t\t\t\t++len;\n\t\t\t\t}\n\t\t\t\t++ind;\n\t\t\t}\n\t\t\tnorm = next + \" \";\n\t\t}\n\t\tfor (int i = 0; norm[i] != ' '; ++i) {\n\t\t\tcout << norm[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nstring str;\n\nint dfs()\n{\n  stack<priority_queue<int, vector<int>, greater<int> > > pqs;\n  int num = 0;\n  int x;\n  for(int i = 0; i < str.size(); i++) {\n    if(str[i] == '[') {\n      pqs.push(priority_queue<int, vector<int>, greater<int> >());\n      num = 0;\n      x = max<int>(x, pqs.size());\n    }\n    else if (str[i] == ']') {\n      if (num) {\n        pqs.top().push(num);\n        num = 0;\n      }\n      int r = 0, size = pqs.top().size();\n      for (int j = 0; j * 2 < size; j++) {\n        r += pqs.top().top();\n        if (x == pqs.size()) r -= pqs.top().top() / 2;\n        pqs.top().pop();\n      }\n      pqs.pop();\n      if (pqs.empty()) return r;\n      pqs.top().push(r);\n    }\n    else {\n      num *= 10;\n      num += str[i] - '0';\n    }\n  }\n}\n\nstatic void solve()\n{\n  int n;\n  cin >> n;\n  while(n--) {\n    cin >> str;\n    cout << dfs() << \"\\n\";\n  }\n}\n\nint main()\n{\n  ios::sync_with_stdio(false);\n  cin.tie();\n  solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tnumber = 0;\n\t\topen = close = false;\n\t}\n\tInfo(bool isOpen,bool isClose,int arg_number){\n\t\topen = isOpen;\n\t\tclose = isClose;\n\t\tnumber = arg_number;\n\t}\n\tint number;\n\tbool open,close;\n};\n\nint main(){\n\n\tint N,table[10000],index,tmp,loop,calc,ans;\n\tchar buf[10001];\n\n\tscanf(\"%d\",&N);\n\n\tqueue<Info> Q,P;\n\tInfo pre_info,tmp_info;\n\n\tfor(int outer = 0; outer < N; outer++){\n\n\t\tscanf(\"%s\",buf);\n\n\t\ttmp = 0;\n\t\tfor(int i = 0; buf[i] != '\\0'; i++){\n\t\t\tif(buf[i] == '['){\n\t\t\t\tif(buf[i+1] >= '0' && buf[i+1] <= '9'){\n\t\t\t\t\t//Do nothing\n\t\t\t\t}else{\n\t\t\t\t\tQ.push(Info(true,false,0));\n\t\t\t\t}\n\t\t\t}else if(buf[i] == ']'){\n\t\t\t\tif(buf[i-1] >= '0' && buf[i-1] <='9'){\n\t\t\t\t\tQ.push(Info(false,false,(tmp/2)+1));\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}else{\n\t\t\t\t\tQ.push(Info(false,true,0));\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ttmp = 10*tmp + (buf[i] - '0');\n\t\t\t}\n\t\t}\n\n\t\tloop = 0;\n\t\twhile(true){\n\n\t\t\tif(loop%2 == 0){\n\t\t\t\tif(Q.front().open == false){\n\t\t\t\t\tans = Q.front().number;\n\t\t\t\t\tQ.pop();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\twhile(!Q.empty()){\n\n\t\t\t\t\ttmp_info = Q.front();\n\t\t\t\t\tQ.pop();\n\n\t\t\t\t\tif(tmp_info.open == true){\n\t\t\t\t\t\tif(Q.front().close == false && Q.front().open == false){\n\t\t\t\t\t\t\t//Do nothing\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tP.push(tmp_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpre_info = tmp_info;\n\t\t\t\t\t}else if(tmp_info.close == true){\n\t\t\t\t\t\tif(pre_info.close == false && pre_info.open == false){\n\t\t\t\t\t\t\t//Do nothing\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tP.push(tmp_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpre_info = tmp_info;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tpre_info = tmp_info;\n\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\ttable[index++] = tmp_info.number;\n\n\t\t\t\t\t\twhile(Q.empty() == false && Q.front().open == false && Q.front().close == false){\n\t\t\t\t\t\t\ttable[index++] = Q.front().number;\n\t\t\t\t\t\t\tQ.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(int i = 1; i <= index-1; i++){\n\t\t\t\t\t\t\tfor(int k = index-1; k >= i; k--){\n\t\t\t\t\t\t\t\tif(table[k] < table[k-1])swap(table[k],table[k-1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcalc = 0;\n\n\t\t\t\t\t\tfor(int i = 0; i <= index/2; i++){\n\t\t\t\t\t\t\tcalc += table[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tP.push(Info(false,false,calc));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tif(P.front().open == false){\n\t\t\t\t\tans = P.front().number;\n\t\t\t\t\tP.pop();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\twhile(!P.empty()){\n\n\t\t\t\t\ttmp_info = P.front();\n\t\t\t\t\tP.pop();\n\n\t\t\t\t\tif(tmp_info.open == true){\n\t\t\t\t\t\tif(P.front().close == false && P.front().open == false){\n\t\t\t\t\t\t\t//Do nothing\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tQ.push(tmp_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpre_info = tmp_info;\n\t\t\t\t\t}else if(tmp_info.close == true){\n\t\t\t\t\t\tif(pre_info.close == false && pre_info.open == false){\n\t\t\t\t\t\t\t//Do nothing\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tQ.push(tmp_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpre_info = tmp_info;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tpre_info = tmp_info;\n\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\ttable[index++] = tmp_info.number;\n\n\t\t\t\t\t\twhile(P.empty() == false && P.front().open == false && P.front().close == false){\n\t\t\t\t\t\t\ttable[index++] = P.front().number;\n\t\t\t\t\t\t\tP.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(int i = 1; i <= index-1; i++){\n\t\t\t\t\t\t\tfor(int k = index-1; k >= i; k--){\n\t\t\t\t\t\t\t\tif(table[k] < table[k-1])swap(table[k],table[k-1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcalc = 0;\n\n\t\t\t\t\t\tfor(int i = 0; i <= index/2; i++){\n\t\t\t\t\t\t\tcalc += table[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tQ.push(Info(false,false,calc));\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tloop++;\n\t\t}\n\n\t\tprintf(\"%d\\n\",ans);\n\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <functional>\nusing namespace std;\n\n#define rep(i,a,n) for(int (i)=(a); (i)<(n); (i)++)\n#define repq(i,a,n) for(int (i)=(a); (i)<=(n); (i)++)\n#define repr(i,a,n) for(int (i)=(a); (i)>=(n); (i)--)\n#define int long long int\n\ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconstexpr ll INF = 1001001001001001LL;\nconstexpr ll MOD = 1000000007LL;\n\nint N, len;\nstring s;\n\nint solve(int l, int r) {\n    l++;\n    // printf(\"l = %lld, r = %lld, \", l, r);\n    // cout << s.substr(l, r-l) << endl;\n    int cnt = 0;\n    if(s[l] == '[') {\n        vector<int> ns;\n        int nl = -1, nr = -1;\n        rep(i,l,r) {\n            if(s[i] == '[') {\n                cnt++;\n                if(cnt == 1) nl = i;\n            }\n            else if(s[i] == ']') {\n                cnt--;\n                if(cnt == 0) {\n                    nr = i;\n                    int val = solve(nl, nr);\n                    ns.push_back(val);\n                }\n            }\n        }\n        sort(ns.begin(), ns.end());\n        int ret = 0, sz = ((int)ns.size() - 1) / 2 + 1;\n        rep(i,0,sz) ret += ns[i];\n        return ret;\n    }\n    else {\n        int ret = 0;\n        rep(i,l,r) ret = ret * 10 + (s[i] - '0');\n        return (ret - 1) / 2 + 1;\n    }\n}\n\nsigned main() {\n    cin >> N;\n    while(N--) {\n        cin >> s;\n        len = s.length();\n        cout << solve(0, len-1) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define ALL(a) (a).begin(), (a).end()\n\ntypedef long long ll;\n\nusing namespace std;\n\nstring str;\n\nint getend(int idx){\n\tint depth = 1;idx++;\n\twhile(depth > 0 && idx < str.size()){\n\t\tswitch(str[idx]){\n\t\t\tcase '[':\n\t\t\t\tdepth++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tdepth--;\n\t\t\t\tbreak;\n\t\t}\n\t\tidx++;\n\t}\n\treturn idx;\n}\n\nint toint(int idx){\n\tint size = 0;\n\tfor(int i = idx;str[i] >= '0' && str[i] <= '9'; i++)size++;\n\treturn (stoi(str.substr(idx, size))+1)/2;\n}\n\nint calc(int idx){\n\tint end = getend(idx);\n\t//cerr << str.substr(idx, end - idx) << endl;\n\tvector<int> arr;\n\tidx++;\n\twhile(idx < end-1){\n\t\t//cerr << str[idx];\n\t\tswitch(str[idx]){\n\t\t\tcase '[':\n\t\t\t\tarr.push_back(calc(idx));\n\t\t\t\tidx = getend(idx);\n\t\t\t\t//cerr << \"for:\" << idx << \" \";\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tassert(false);\n\t\t\tdefault:\n\t\t\t\treturn toint(idx);\n\t\t}\n\t\t//cerr << \"e\";\n\t}\n\tsort(ALL(arr));\n\tint ret = 0;\n\tfor(int i = 0; i < (arr.size()+1)/2;i++){\n\t\tret += arr[i];\n\t}\n\treturn ret;\n}\n\nint main(){\n\tint nn; cin >> nn;\n\tfor(int z = 0; z < nn; z++){\n\t\tcin >> str;\n\t\tcout << calc(0) << endl;\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <cassert>\n#include <iostream>\n#include <iomanip>\n#include <sstream>\n#include <algorithm>\n#include <numeric>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <list>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <bitset>\n#include <functional>\n#include <iterator>\n\nusing namespace std;\n\n#define dump(n) cout<<\"# \"<<#n<<'='<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define peri(i,a,b) for(int i=int(b);i-->int(a);)\n#define rep(i,n) repi(i,0,n)\n#define per(i,n) peri(i,0,n)\n#define foreach(i,c) for(auto i=(c).begin();i!=(c).end();++i)\n#define all(c) begin(c),end(c)\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nconst int INFTY=1<<29;\nconst double EPS=1e-9;\n\ntemplate<typename T1,typename T2>\nostream& operator<<(ostream& os,const pair<T1,T2>& p){\n\treturn os<<'('<<p.first<<','<<p.second<<')';\n}\ntemplate<typename T>\nostream& operator<<(ostream& os,const vector<T>& a){\n\tos<<'[';\n\trep(i,a.size()) os<<(i?\" \":\"\")<<a[i];\n\treturn os<<']';\n}\n\nstring tostr(int x)\n{\n\tostringstream oss; oss<<x;\n\treturn oss.str();\n}\n\nbool isbrace(char c)\n{\n\treturn c=='[' || c==']';\n}\n\nvoid solve()\n{\n\tstring s; cin>>s;\n\tfor(int j=s.find(\"]]\");j!=-1;j=s.find(\"]]\",j+1)){\n\t\tint i=s.rfind(\"[[\",j)+1;\n\t\treplace_if(begin(s)+i,begin(s)+j+1,isbrace,' ');\n\t\t\n\t\tvi a;\n\t\tistringstream iss(s.substr(i,j+1-i));\n\t\tfor(int k;iss>>k;) a.push_back(k);\n\t\tsort(all(a));\n\t\t\n\t\tfill(begin(s)+i,begin(s)+j+1,' ');\n\t\t\n\t\tint x=0;\n\t\trep(k,(a.size()+1)/2) x+=(a[k]+1)/2;\n\t\tstring t=tostr(x*2-1);\n\t\tcopy(all(t),begin(s)+i);\n\t}\n\t\n\treplace_if(all(s),isbrace,' ');\n\tint res=(atoi(s.c_str())+1)/2;\n\tcout<<res<<endl;\n}\n\nint main()\n{\n\tint tc; cin>>tc;\n\trep(_,tc) solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing lint = long long;\ntemplate<class T = int> using V = vector<T>;\ntemplate<class T = int> using VV = V< V<T> >;\n\nint main() {\n  cin.tie(nullptr); ios::sync_with_stdio(false);\n  auto fn = [&](const auto& fn, const string& s) -> int {\n    if (s[1] != '[') {\n      return stoi(s.substr(1, (int)s.size() - 2)) + 1 >> 1;\n    }\n    V<> v;\n    for (int l = 1; l < (int)s.size() - 1; ) if (s[l] == '[') {\n      int r = -1, t = 0;\n      for (int i = l; ; ++i) {\n        if (s[i] == '[') ++t;\n        else if (s[i] == ']') --t;\n        if (!t) {\n          r = i;\n          break;\n        }\n      }\n      v.push_back(fn(fn, s.substr(l, r - l + 1)));\n      l = r + 1;\n    }\n    sort(begin(v), end(v));\n    int res = 0;\n    for (int i = 0; i < (int)v.size() + 1 >> 1; ++i) res += v[i];\n    return res;\n  };\n  int n; cin >> n;\n  while (n--) {\n    string s; cin >> s;\n    cout << fn(fn, s) << '\\n';\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define REP(i,n,N) for(int i=n;i<N;i++)\n#define p(S) cout<<S<<endl\nusing namespace std;\nstring hds;\nint hdi;\nint hdfs(){\n\tvector<int> vt;\n\t//\tcout<<i<<\" : \"<<hdi<<endl;\n\tint ret=0;\n\tif(isdigit(hds[hdi])){\n\t\tint a=0;\n\t\twhile(isdigit(hds[hdi]))\ta=10*a+(hds[hdi++]-'0');\n\t\tvt.push_back(a/2+1);\n\t}\n\telse\t{\n\t\twhile(hds[hdi]=='['){\n\t\t\thdi++;\n\t\t\tvt.push_back(hdfs());\n\t\t\thdi++;\n\t\t}\n\t}\n\tsort(vt.begin(),vt.end());\n\treturn ret=accumulate(vt.begin(),vt.begin()+vt.size()/2+1,0);\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tREP(i,0,n)\t{\n\t\thdi=0;\n\t\tcin>>hds;\n\t\tp(hdfs());\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cctype>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef string::const_iterator State;\n\nbool isnum(char c){\n  return '0'<=c && c<='9';\n}\n\nint num(State& begin){\n  int ret = 0;\n  while(isdigit(*begin)){\n    ret*=10;\n    ret+=*begin-'0';\n    ++begin;\n  }\n  ++begin; //skip ']'\n  return ret;\n}\n\nint solve(State& begin){\n  ++begin; //skip '['\n  if(isdigit(*begin)) return (num(begin)+1)/2;\n  vector<int> vote;\n  while(*begin=='[')\n    vote.push_back(solve(begin));\n  ++begin; //skip']'\n  sort(vote.begin(),vote.end());\n  int ret = 0;\n  for(int i=0;i<(vote.size()+1)/2;++i) ret+=vote[i];\n  return ret;\n}\nint main(){\n  int T;cin>>T;\n  while(T--){\n    string s;\n    cin >> s;\n    State b = s.begin();\n    cout << solve(b) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nclass Node{\n    int value;\n    list<Node*> next;\n    Node* prev;\n\npublic:\n    Node();\n    Node(Node* p);\n    ~Node();\n    void set_v(int v);\n    void add_next(int v);\n    void del_next();\n    void set_prev(Node* p);\n    Node* next_ret(int index);\n    Node* prev_ret();\n    int value_ret();\n    int next_size_ret();\n};\n\nclass Tree{\n    Node root;\n    Node* pos;\n\npublic:\n    Tree();\n    ~Tree();\n    void add(int v);\n    void move_next(int index);\n    void move_back();\n    void set_root();\n    int pos_size_ret();\n    int pos_value_ret();\n    Node* pos_ret();\n    void DLELTE_DFS(Node* node);\n\n    int solve();\n    int DFS(Node* node);\n};\n\nNode::Node() {\n    this->prev = this;\n    value = -1;\n}\n\nNode::Node(Node* p) {\n    this->prev = p;\n    value = -1;\n}\n\nNode::~Node() {\n    this->del_next();\n}\n\nvoid Node::set_v(int v) {\n    this->value = v;\n}\n\nvoid Node::add_next(int v) {\n    Node* n= new Node(this);\n    n-> value = v;\n    next.push_back(n);\n}\n\nvoid Node::del_next() {\n\n    list<Node*>::iterator pre_itr = this->next.begin();\n    list<Node*>::iterator itr = pre_itr;\n    for (itr++; itr != this->next.end(); itr++) {\n        delete *pre_itr;\n        pre_itr = itr;\n    }\n\n    delete *pre_itr;\n\n    this->next.resize(0);\n\n}\n\nvoid Node::set_prev(Node* p) {\n    this->prev = p;\n}\n\nNode* Node::next_ret(int index) {\n    list<Node*>::iterator itr = this->next.begin();\n    for(int i=0; i<index; i++){\n        itr++;\n    }\n    return *itr;\n}\n\nNode* Node::prev_ret() {\n    return this->prev;\n}\n\nint Node::value_ret() {\n    return this->value;\n}\n\nint Node::next_size_ret() {\n    return this->next.size();\n}\n\n\n\nTree::Tree() {\n    this->pos = &(this->root);\n}\n\nTree::~Tree(){\n\n    DLELTE_DFS(&(this->root));\n\n}\n\nvoid Tree::add(int v) {\n    pos->add_next(v);\n}\n\nvoid Tree::move_next(int index) {\n    this->pos = this->pos->next_ret(index);\n}\n\nvoid Tree::move_back() {\n    this->pos = this->pos->prev_ret();\n}\n\nvoid Tree::set_root() {\n    this->pos = &(this->root);\n}\n\nint Tree::pos_size_ret() {\n    return this->pos->next_size_ret();\n}\n\nint Tree::pos_value_ret() {\n    return this->pos->value_ret();\n}\n\nNode* Tree::pos_ret() {\n    return this->pos;\n}\n\nint Tree::solve() {\n    return this->pos->value_ret();\n}\n\nint Tree::DFS(Node* node) {\n\n    if(node->next_size_ret() == 0){\n        return (node->value_ret()/2 + 1);\n    }\n\n    int add = 0;\n\n    priority_queue<int> q;\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        q.push(-DFS(node->next_ret(i)));\n    }\n\n    int count = q.size();\n\n    for(int loop = 0; loop < count/2 + 1; loop++){\n        add += -q.top();\n        q.pop();\n    }\n\n    return add;\n\n}\n\nvoid Tree::DLELTE_DFS(Node* node) {\n\n    if(node->next_size_ret() == 0){\n        return;\n    }\n\n    for(int i=0; i<node->next_size_ret(); i++){\n        DLELTE_DFS(node->next_ret(i));\n    }\n\n    node->del_next();\n\n}\n\nint main() {\n\n    int n;\n\n    cin >> n;\n\n    while(n--){\n\n        string input;\n\n        cin >> input;\n\n        Tree t;\n\n        for(int i=1; i<input.size(); i++){\n\n            if(input[i] == '['){\n                t.add(0);\n                t.move_next(t.pos_size_ret() - 1);\n            }\n            else if(input[i] == ']'){\n                t.move_back();\n            }\n            else{\n                string snum = \"\";\n                while(input[i] != ']'){\n                    snum += input[i];\n                    i++;\n                }\n                i--;\n                stringstream ss;\n                ss << snum;\n                int num;\n                ss >> num;\n                t.add(num);\n            }\n\n        }\n\n        t.set_root();\n        cout << t.DFS(t.pos_ret()) << endl;\n\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <stdio.h>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <map>\n#include <queue>\n#include <algorithm>\n#include <set>\n#include <math.h>\n#include <utility>\n#include <stack>\nusing namespace std;\ntypedef pair<int,int> P;\nconst int INF = (int)((unsigned int)-1>>1);\n\n\nint n;\nstring str;\n\nint toint(string s){\n    int n = 0;\n    int p = 1;\n    for(int i=s.size()-1;i>=0;i--){\n        n += p*(s[i]-'0');\n        p *= 10;\n    }\n    return n;\n}\n\nint dfs(int pos){\n    //printf(\"in : %d\\n\",pos);\n    vector<int> points;\n    int kakko_n = 1;\n    for(int i=pos+1;i<str.size();i++){\n        if (kakko_n == 1){\n            if(str[i]=='['){\n                points.push_back(dfs(i));\n                kakko_n += 1;\n            }else if(str[i]==']'){\n                break;\n            }else{\n                string num = \"\";\n                while(str[i]!=']'){\n                    num.push_back(str[i]);\n                    i+=1;\n                }\n                points.push_back((toint(num)+1)/2);\n                break;\n            }\n        }else{\n            if(str[i]=='['){\n                kakko_n += 1;\n            }else if(str[i]==']'){\n                kakko_n -= 1;\n            }\n        }\n    }\n    sort(points.begin(), points.end());\n    int p = 0;\n    for(int i=0;i<(points.size()+1)/2;i++){\n        p += points[i];\n    }\n    /*\n    printf(\"out : %d\\n\",pos);\n    for(int i=0;i<points.size();i++){\n        printf(\"%d \",points[i]);\n    }\n    cout << endl;\n    */\n    return p;\n}\n\nint main(){\n    cin >> n;\n    for(int i=0;i<n;i++){\n        cin >> str;\n        cout << dfs(0) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <map>\n#include <algorithm>\n\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n\nusing namespace std;\n\nint main() {\n  int n;\n  cin>>n;\n  REP(i,n){\n    vector<int> v;\n    string str;\n    cin>>str;\n    for(char c:str){\n      if(c=='['){\n        v.push_back(-1);\n      }else if(c>='0'&&c<='9'){\n        if(v.back()!=-1){\n          v.back()*=10;\n          v.back()+=c-'0';\n        }else{\n          v.push_back(c-'0');\n        }\n      }else{\n        for(int j=v.size()-1;j>=0;--j){\n          if(v[j]==-1){\n            ++j;\n            sort(begin(v)+j,end(v));\n            int w=v.size()-j;\n            int sum=0;\n            REP(k,w/2+1){\n              sum+=v[k+j]/2+1;\n            }\n            sum*=2;--sum;\n            v.erase(begin(v)+j-1,end(v));\n            v.push_back(sum);\n            break;\n          }\n        }\n      }\n    }\n    cout<<(v.front()/2+1)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<cstdlib>\n#include<stdio.h>\n#include<time.h>\n#include<math.h>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<list>\n#include<queue>\n#include<stack>\n#include<deque>\n#include<set>\n#include<map>\n#define REP(i, N) for(ll i = 0; i < N; ++i)\n#define FOR(i, a, b) for(ll i = a; i < b; ++i)\n#define ALL(a) (a).begin(),(a).end()\n#define pb push_back\n#define INF 1000000000\n#define MOD 1000000007\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> P;\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\nint qx[8] = {1, 1, 0, -1, -1, -1, 0, 1};\nint qy[8] = {0, 1, 1, 1, 0, -1, -1, -1};\n\nstring s;\n\nll cal(ll l, ll r) {\n\tvector<ll> h;\n\tll foo = 0;\n\tll bar = 0;\n\tFOR(i, l, r) {\n\t\tif(s[i] == '[') {\n\t\t\tfoo = 0;\n\t\t\tbar = 0;\n\t\t\tll hoge = i + 1;\n\t\t\tFOR(j, i + 1, r) {\n\t\t\t\ti = j;\n\t\t\t\tif(s[j] == '[') {\n\t\t\t\t\t++foo;\n\t\t\t\t\t++bar;\n\t\t\t\t}\n\t\t\t\tif(s[j] == ']') {\n\t\t\t\t\tif(foo > 0) --foo;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(bar == 0) {\n\t\t\t\t\t\t\th.pb(stoi(s.substr(hoge, j - hoge)) / 2 + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\th.pb(cal(hoge, j));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tsort(ALL(h));\n\tll ans = 0;\n\tREP(i, min(h.size(), h.size() / 2 + 1)) {\n\t\tans += h[i];\n\t}\n\treturn ans;\n}\n\nint main(void) {\n\tll n;\n\tcin>>n;\n\tREP(i, n) {\n\t\tcin>>s;\n\t\tcout<<cal(1, s.size() - 1)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <algorithm>\n\nusing namespace std;\n\nint dfs(string s);\n\ninline int toInt(std::string s) {int v; std::istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline std::string toString(T x) {std::ostringstream sout;sout<<x;return sout.str();}\n\n\nint main(int argc, char const *argv[])\n{\n\tstring s;\n\tint n;\n\n\tcin>>n;\n\tfor(int i1=0;i1<n;i1++){\n\t\tcin>>s;\n\t\tcout<<dfs(s)<<endl;\n\t}\n\n\treturn 0;\n}\n\nint dfs(string s)\n{\n\tif(s[0]!='['){\n\t\treturn toInt(s)/2+1;\n\t}\n\telse{\n\t\tint i1=0;\n\t\tint stc=0;\n\t\tvector<int> v;\n\t\tstring tmp=\"\";\n\n\t\twhile(i1<s.size()){\n\n\t\t\tif(s[i1]==']') stc--;\n\t\t\telse if(s[i1]=='[') stc++;\n\t\t\t\n\t\t\ttmp+=s[i1];\n\t\t\t\n\t\t\tif(stc==0){\n\t\t\t\tv.push_back(dfs(tmp.substr(1,tmp.size()-2)));\n\t\t\t\ttmp=\"\";\n\t\t\t}\n\n\t\t\ti1++;\n\t\t}\n\n\t\tsort(v.begin(),v.end());\n\t\tint sum=0;\n\t\tfor(i1=0;i1<v.size()/2+1;i1++){\n\t\t\tsum+=v[i1];\n\t\t}\n\n\t\treturn sum;\n\t}\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for (int i=0;i<n;i++)\n#define ll long long\n\n#define ALL(x) x.begin(),x.end()\n\nusing namespace std;\n\ntypedef string::const_iterator State;\n\n\n\nint num(State &begin){\n    int ret=0;\n    while (isdigit(*begin)){\n        ret=ret*10+(*begin-'0');\n        begin++;\n    }\n    return ret/2+1;\n}\n\nint lv=0;\nint votemin(State &begin){\n/* \nBNF:votemin=[num]|[{votemin}+]\n*/\n    \n    lv++;\n    begin++;\n    if (isdigit(*begin)){ \n        lv--;\n        return num(begin);\n    }\n    \n    vector<int>v;\n    while(*begin!=']' && *begin){\n        int t=votemin(begin);\n        begin++;\n        v.push_back(t);\n        if (!*begin){\n            break;\n        }\n\n    }\n    sort(ALL(v));\n    int ret=0;\n   \n    rep(i,v.size()/2+1){\n//        cerr<<lv<<\":\"<<v[i]<<endl;\n        ret+=v[i];\n    }\n    lv--;\n    return ret;\n}\n\n\nint main(){\n\n    int n;\n    cin>>n;\n    rep(i,n){\n        string s;\n        cin>>s;\n        State begin=s.begin();\n     //   cerr<<s<<endl;\n        cout<<votemin(begin)<<endl;\n    }\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<iomanip>\n#include<cmath>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\n#define int long long\n#define rep(i,n) for(int i = 0; i < (n); i++)\n#define INF ((long long)1e18)\n#define MOD ((int)1e9+7)\n#define endl \"\\n\"\n\n#define yn(f) ((f)?\"Yes\":\"No\")\n#define YN(f) ((f)?\"YES\":\"NO\")\n\n#define MAX\n\nstring str;\n\nint solve(int left, int right){\n\t// cout<<left<<\" \"<<right<<endl;\n\t// for(int i = left; i < right; i++){\n\t\t// cout<<str[i];\n\t// }cout<<endl;\n\tif(str[left] != '[') return (stoi(str.substr(left,right-left))+1)/2;\n\t\n\tint ans = 0;\n\tvector<int> temp;\n\t\n\tfor(int i = left, j = left+1, con = 0; i < right; i++){\n\t\tif(str[i] == ']')con--;\n\t\tif(str[i] == '[')con++;\n\t\t\n\t\tif(con == 0){\n\t\t\ttemp.push_back(solve(j,i));\n\t\t\tj = i+2;\n\t\t}\n\t}\n\tsort(temp.begin(),temp.end());\n\t\n\tfor(int i = 0; i < (temp.size()+1)/2; i++){\n\t\tans += temp[i];\n\t}\n\t// cout<<ans<<endl;\n\treturn ans;\n}\n\nsigned main(){\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tcout<<fixed<<setprecision(10);\n\t\n\tint n;\n\t\n\tcin>>n;\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tcin>>str;\n\t\t\n\t\tcout<<solve(1,str.size()-1)<<endl;\n\t}\n\t\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "Haskell",
    "code": "import Data.Char\nimport Data.List\n\nmain = interact $ unlines . map (show . hierarchical_democracy) . tail . lines\n\nhierarchical_democracy = head . extract . until decisive minimal . majority\n where decisive (_:x:_) = isDigit x\n\nextract = map read . words . map (\\x -> if isDigit x then x else ' ')\n\nminimal xxs@(b:x1:x2:xs)\n | isDigit x1 = xxs\n | isDigit x2 = let (d,xs') = takeDistrict [] xxs in vote (extract d) ++ minimal xs' \n | otherwise = b : minimal (tail xxs)\n where\n  vote xs = \"[\" ++ show (sum (take (div (length xs + 1) 2) (sort xs))) ++ \"]\"\n  takeDistrict acc (']':']':xs) = (reverse (']':']':acc), xs)\n  takeDistrict acc (x:xs) = takeDistrict (x:acc) xs\nminimal xs = xs\n\nmajority = concat . map half . groupBy digits\n where\n  digits c1 c2 = isDigit c1 && isDigit c2\n  half xs = if isDigit (head xs) then show (div (read xs + 1) 2) else xs"
  },
  {
    "language": "Haskell",
    "code": "import Control.Monad\nimport Control.Applicative\nimport Data.List\nimport Debug.Trace\n\nparse :: String -> (Int, String)\nparse xs =\n    let (prev,t:rst) = break (== ']') xs\n        x = read prev\n    in ((x + 1) `div` 2, rst)\n\ncalc :: [Int] -> Int\ncalc xs =\n    let m = ((length xs) + 1) `div` 2\n    in sum $ take m $ sort xs\n\nsolve :: [Int] -> String -> (Int, String)\nsolve stk \"\" = (calc stk, \"\")\nsolve stk (c:cs)\n    | c == '['  =\n        let (x, rst) = solve [] cs\n        in solve (x:stk) rst\n    | c == ']'  =\n        let x = calc stk\n        in (x, cs)\n    | otherwise = parse (c:cs)\n\nmain :: IO ()\nmain = do\n    n <- readLn\n    ls <- replicateM n getLine :: IO [String]\n    mapM_ print $ map (fst . solve []) ls"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define MAX_LEN 10000\n#define MAX_NC 3333\nchar buff[MAX_LEN+1];\nint comp(const void *a, const void *b){\n    int c = *(int *)a;\n    int d = *(int *)b;\n    if(c<d) return -1;\n    else  return 1;\n}\nint find_rp(int lp){\n    int count=1;\n    int rp=lp;\n    char c;\n    while(count){\n        c=buff[++rp];\n        if(c=='[') count++;\n        else if(c==']') count--;\n    }\n    return rp;\n}\nint mc(int from, int to){\n    int nv[MAX_NC];\n    int nd;\n    int v;\n    int lp, rp;\n    int i;\n    if(buff[from+1]=='['){\n        nd=0;\n        lp=from+1;\n        while(lp<to){\n            rp=find_rp(lp);\n            nv[nd++]=mc(lp,rp);\n            lp=rp+1;\n        }\n        qsort(nv,nd,sizeof(int),comp);\n        v=0;\n        for(i=0; i<(nd+1)/2; i++) v+=nv[i];\n        return v;\n    }\n    else{\n        sscanf(&buff[from+1],\"%d\",&v);\n        return (v+1)/2;\n    }\n}\nint main(void){\n    int n,i,ans;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++){\n        scanf(\"%s\",buff);\n        ans=mc(0,strlen(buff)-1);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//????????¢??°(???????????¨)\nint comp(const void *a, const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n\n//??????????????¢??°\nint check(char c) {\n\n\t if(c=='[')\n\t\t return 0;\n\n\t else\n\t\t return 1;\n}\n\n //???????????????????????????????????¢??°\nvoid reverse(char *Q, int N) {\n\n\tint i;\n\tchar temp;\n\n    if(N%2==1) { //??°???????????°????\\???°??????\n\tfor(i=0;i<(N-1)/2;i++) {\n\t\ttemp=Q[N-1-i];\n\t\tQ[N-1-i]=Q[i];\n\t\tQ[i]=temp;\n\t}\n    }\n\n    else if(N%2==0) { //?????°?????¶??°??????\n    \tfor(i=0;i<N/2;i++) {\n    \t\ttemp=Q[N-1-i];\n    \t\tQ[N-1-i]=Q[i];\n    \t\tQ[i]=temp;\n    \t}\n    }\n}\n\n //????°???????????\\¨??°????±?????????¢??°\nint winner(char *c) {\n\n\tint W=0; //??¨??????????°???????????\\¨??°???????????????\n\tint T[10000];//??¨???????????¨??????????????????????????????????°???????????\\¨??°\n\tchar A[10000];//???????????????????°???????????\\¨??°????±??????????????????????????????°??¨???\n\tint A_size = 0;//A???????´???°\n\tint T_size = 0;//T???????´???°\n\tint k;//???????????¨?????°\n\tint a=0;//A???????´????????´?????????????????????°\n\tint t=0;//T???????´????????´?????????????????????°\n\tint  n;//?????°??????????????????????????°\n\tint count_P=0;//??¬??§??????????????????????????°\n\tint flag=0;//?????°???????????????????????°\n\n\t  for(k=strlen(c)-2;k>0;k--) { //?????????(k=strlen(c)-1)????????????']'??????????????§????????´???(k=strlen(c)-2)??????????????????\n\n\t\t\t  if(c[k]==']') { //']'?????£?????´??????????????????????´?????????°??????????????§flag????????????\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P++;\n\t\t\t\t  flag=1;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(c[k]=='[') { //'['???????§????????´?\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P--;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(count_P==0&&flag==0){ //??°????????£?????´?????????????????°????¨????????????????????´???¨??????????????\\??????\n\t\t\t\t  n=1;\n\t\t\t\t  T[t]=0;\n\t\t\t\t while(check(c[k])==1)  {//'['??????????????§??°???????¶?????????§????????????????????£???int???????????????????????°????????????T?????\\??????\n\t\t\t\t\t T[t]+=n * (c[k] - '0');\n\t\t\t\t\t n=10*n;\n\t\t\t\t\t k--;\n\t\t\t\t }\n\t\t\t\t T[t]=(T[t]+1)/2; //????´?????????°??????????????°????±???????\n\t\t\t\t t++;\n\t\t\t  }\n\n\t\t\t  else {\n\t\t\t\t  A[a]=c[k]; //??°?????????flag????????£???????????´??????????????????????´?????????°??????????????§???\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  if(count_P==0&&flag) { //?????°?????????\n\t\t\t\t  A_size=a;\n\t\t\t\t  reverse(A,A_size);//A??????????´?????????????????´?????????????????????§????????????\n\t\t\t\t T[t]=winner(A); //?????¨??????????????????????????????????°?????????°????±???????\n\t\t\t\t memset(A,'\\0',10000);//A????????????\n\t\t\t\t a=0;\n\t\t\t\t t++;\n\t\t\t\t flag=0;\n\t\t\t  }\n     }\n\n\t  //T?????????????????????????????°???????´???????????????§???????????????????°??????????????????????????????°??????????????????\n\n\t T_size=t;\n\t qsort(T,T_size,sizeof(int), comp); //??????????????????\n\n\t  for(k=0;k<(T_size+1)/2;k++) {\n\t\t  W+=T[k]; //???????±???????\n\t  }\n\n\treturn W; //??????\n}\n\n//???????????¢??°\nint main(void) {\n\n\tint *Answer; //??????????´???¨??????\n\tint L; //??\\????????°\n\tchar c[10000]; //??\\????????????\n    int i; //???????????¨?????°\n\n\tscanf(\"%d\", &L); //??\\????????°??????\n\n\tAnswer = (int *)malloc(L * sizeof(int)); //??????????´???¨??????????????¢????¢????\n\n\tfor(i=0;i<L;i++) {\n\t\t  scanf(\"%10000s\",c); //??????????????\\???\n\t\t  Answer[i] = winner(c); //?????????????´?\n\t}\n\n\tfor(i=0;i<L;i++)\n\t\t printf(\"%d\\n\",Answer[i]); //???????????????\n\n\tfree(Answer); //?????¢????§£???\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint COMPARE(const void *a, const void *b){ return *(int*)a - *(int*)b; }  /* 昇順 */\n\n/* データ d を読み込みながら、 h から始まる選挙区で勝つために必要な最少の得票数を返す */\nint search(char *d, int *h){\n\tint v[100];\n\tint n = 0;\n\tint i, m;\n\n\tif (d[*h] == '['){\n\t\t/* 選挙区を読み込む */\n\t\twhile (d[*h] == '['){\n\t\t\t(*h)++;  /* '[' */\n\t\t\tv[n] = search(d, h);\n\t\t\tn++;\n\t\t\t(*h)++;  /* ']' */\n\t\t}\n\n\t\t/* この層にある選挙区の過半数 (n / 2 + 1 個) で勝つための、必要な最少の得票数を計算する */\n\t\tqsort(v, n, sizeof(int), COMPARE);  /* 昇順にソートする */\n\t\tm = 0;\n\t\tfor (i = 0; i < n / 2 + 1; i++){\n\t\t\tm += v[i];  /* 一つの選挙区で勝つための得票数 */\n\t\t}\n\t\treturn m;\n\t}else{\n\t\t/* 有権者数を読み込む */\n\t\tv[0] = 0;\n\t\tn = 1;\n\t\t/* 一桁ずつ読み込む */\n\t\tfor (; d[*h] >= '0' && d[*h] <= '9'; (*h)++){\n\t\t\tv[0] *= 10;\n\t\t\tv[0] += d[*h] - '0';\n\t\t}\n\n\t\treturn v[0] / 2 + 1;  /* 過半数となる票数を返す */\n\t}\n}\n\nint main(void){\n\tint n;\n\tchar d[10000];\n\tint i, h;\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++){\n\t\tscanf(\"%s\", d);\n\n\t\th = 0;\n\t\tprintf(\"%d\\n\", search(d, &h));\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "// ACM ICPC2013 Domestic Problem C\n// http://sparth.u-aizu.ac.jp/icpc2013/d_problems.php?lang=jp#section_C\n// Filename: pc.c\n// Compile: cc pc.c\n// Execution: ./a.out < C0 > C0.result\n// Check: diff C0.result C0.ans\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define MAX_LEN 10000 // ??????????????????????????§???\n#define MAX_NC 3333 // ?????????????????°????????§???\nchar buff[MAX_LEN+1]; // ??????????????????????????????\n// ??´??°????????? qsort ????????????????????¢??°\nint compar(const void *p1, const void *p2)\n{\n int *ip1 = (int *)p1;\n int *ip2 = (int *)p2;\n if(*ip1 < *ip2) return -1;\n else if(*ip1 == *ip2) return 0;\n else return 1;\n}\n// lp ?????????????????¬??§???????????????????????¬??§?????????????±???????\nint find_rp(int lp)\n{\n int count = 1; // ????????????????????¬??§??????????????£????????????????????¬??§????????°\n int rp = lp;\n char c;\n while(count){\n c = buff[++rp];\n if(c == '[') count++;\n else if(c == ']') count--;\n }\n return rp;\n}\n// (from,to)??§?????????????????????????????¶???????????????????????????????\\¨??°????±???????\nint mc(int from, int to)\n{\n int nv[MAX_NC]; // ??????????????????????????????????\\¨??°\n int nd; // ????????????????????°\n int v;\n int lp,rp; // ?????????????????????????????¬??§?????????\n int i;\n if(buff[from+1] == '['){ // ???????????????????????¨\n nd = 0;\n lp = from+1; // ???????????????????????????????????¬??§?????????\n while(lp < to){ // lp ????????????????????????????????????????????°?????????\n rp = find_rp(lp); // lp ???????????????????????¬??§?????????????±???????\n nv[nd++] = mc(lp,rp); // ???????????????(lp,rp)???????????????????\\¨??°????±???????\n lp = rp+1; // ?¬??????????????????????\n }\n // ??????????????§???nd ??????????????????????????°???\n // nv[i]?????????????????????????????¶????????????????????????????\\¨??°\n qsort(nv, nd, sizeof(int), compar); // nv ????????????\n // ????????°???????????????????????¶????????????????????????????\\¨??°????±???????\n v = 0;\n for(i=0; i<(nd+1)/2; i++)\n v += nv[i];\n return v; // v ????±??????????\n }\n else { // ??????????????????????????????\n sscanf(&buff[from+1], \"%d\", &v); // v = ????¨??????°\n return (v+1)/2; // ??????????????????????????°????\\¨??°?????????\n }\n}\nint main()\n{\n int n,i,ans;\n scanf(\"%d?\\n\", &n); // n ???????????????????????°\n for(i=0; i<n; i++){\n scanf(\"%s?\\n\", buff); // ?????????????????????????????????\n ans = mc(0, strlen(buff)-1);// ?§£????±???????\n printf(\"%d?\\n\", ans);\n }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[10001];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[1000];\n\t//int b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tfgets(c,10000,stdin);\n\t\tc[10000]=0;\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\t/*for(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}*/\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare_int(const void *a, const void *b){\n    return *(int*)a - *(int*)b;\n}\nint minimum_vote(){\n    int vote[10000];\n    int index = 0;\n    int sum = 0;\n    char c = getchar();\n    while(1){\n        if(c == '['){\n            vote[index++] = minimum_vote();\n            c = getchar();\n        }\n        else if(c == ']'){\n            qsort(vote, index, sizeof(int), compare_int);\n            int i;\n            for(i = 0; i < (index + 1) / 2; i++){\n                sum += vote[i];\n            }\n            return sum;\n        }\n        else{\n            int t = c - '0';\n            c = getchar();\n            while(c >= '0' && c <= '9'){\n                t = t * 10 + (c - '0');\n                c = getchar();\n            }\n            vote[index++] = (t + 1) / 2;\n        }\n    }\n}\nint main(void){\n    int n, i;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++){\n        while(getchar() != '[');\n        printf(\"%d\\n\", minimum_vote());\n    }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//using namespace std;\n\n#define repl(i,a,b) for(i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint int_sort( const void * a , const void * b ) {\n  if( *( int * )a < *( int * )b ) {\n    return -1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return 1;\n}\n\nint stoi(char *s,int len){\n\tint res=0;\n\tint i;\n\trep(i,len){\n\t\tres*=10;\n\t\tres+=s[i]-'0';\n\t}\n\treturn res;\n}\n\nint cases;\nchar s[11111];\n\nint dfs(int l,int r){\n\tint num=1;\n\tint i;\n\trepl(i,l+1,r-1){\n\t\tif(s[i]<'0'||s[i]>'9'){\n\t\t\tnum=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(num){\n\t\treturn stoi(s+l+1,r-l-2)/2+1;\n\t}else{\n\t\tint level=-1;\n\t\tint ll;\n\t\tint ns[1111];\n\t\tint idx=0;\n\t\trepl(i,l,r){\n\t\t\tif(s[i]=='['){\n\t\t\t\tif(level==0){\n\t\t\t\t\tll=i;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tlevel--;\n\t\t\t\tif(level==0){\n\t\t\t\t\t//ns.pb(dfs(ll,i+1));\n\t\t\t\t\tns[idx++]=dfs(ll,i+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//sort(all(ns));\n\t\tqsort((void *)ns,idx,sizeof(int),int_sort);\n\t\tint res=0;\n\t\trep(i,idx/2+1){\n\t\t\tres+=ns[i];\n\t\t}\n\t\treturn res;\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&cases);\n\twhile(cases--){\n\t\tscanf(\"%s\",s);\n\t\tprintf(\"%d\\n\",dfs(0,strlen(s)));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n#define MAX_NUM_CHILDREN 5000\n\nint comp_ints(const void* a, const void* b) { return *(int*)a - *(int*)b; }\n\nint solve()\n{\n    char ch;\n\n    if((ch = getchar()) == '[')\n    {\n        int res;\n\n        if(isdigit((int)(ch = getchar())))\n        {\n            int t;\n            ungetc(ch, stdin);\n            scanf(\"%d\", &t);\n            res = (t + 1) / 2;\n        }\n        else\n        {\n            int cost[MAX_NUM_CHILDREN], count = 0, t;\n            ungetc(ch, stdin);\n            while((t = solve()) != -1)\n                cost[count++] = t;\n            qsort(cost, count, sizeof(int), comp_ints);\n            for(res = t = 0, count = (1 + count) / 2; t < count; t++)\n                res += cost[t];\n        }\n\n        getchar();              /* pop ']' */\n        return res;\n    }\n\n    ungetc(ch, stdin);\n    return -1;\n}\n\nint main(void)\n{\n    int t;\n\n    scanf(\"%*d%*c\");\n\n    while((t = solve()) != -1)\n        printf(\"%d\\n\", t), getchar();\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[10001];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[1000];\n\t//int b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tfgets(c,10000,stdin);\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\t/*for(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}*/\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n\nint qsort_comp(const void* x,const void* y) {\n\tint a=*((const int*)x);\n\tint b=*((const int*)y);\n\tif(a>b)return 1;\n\tif(a<b)return -1;\n\treturn 0;\n}\n\nint getkahan(const char* str,int length) {\n\tif(isdigit(*str))return (atoi(str)+1)/2;\n\tint* hlist=malloc(sizeof(int)*3400);\n\tint hlist_num=0;\n\tfor(int i=0;i<length;) {\n\t\tint next,level=1;\n\t\tfor(next=i+1;level>0;next++) {\n\t\t\tif(str[next]=='[')level++;\n\t\t\telse if(str[next]==']')level--;\n\t\t}\n\t\thlist[hlist_num++]=getkahan(&str[i+1],next-i-2);\n\t\ti=next;\n\t}\n\tqsort(hlist,hlist_num,sizeof(int),qsort_comp);\n\tint sum=0;\n\tfor(int i=0;i<(hlist_num+1)/2;i++)sum+=hlist[i];\n\tfree(hlist);\n\treturn sum;\n}\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++) {\n\t\tchar input[20000];\n\t\tscanf(\"%s\",input);\n\t\tprintf(\"%d\\n\",getkahan(&input[1],(int)strlen(input)-2));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\n\nint suuji[1000];\nstatic total=0;\n\nint fancA(char *c){\n    int i,j=0,s,t=0,u=0,r=0;\n    int K=0;\n    int k[10000];\n    int sumk=0;\n    \n    int temp,tempr;\n    int min=10000;\n    \n    for(i=0;i<10000;i++){\n        k[i]=0;\n    }\n    i=0;\n    \n    while(1){\n        if(c[i] == '['){\n             ++i;\n            k[t] = fancA(&c[i]);\n        }else if(c[i] == ']'){\n             if(c[i-1]>=0x30 && c[i-1]<=0x39){\n             //１段階\n                for(s=j-1;s>=0;s--){\n                    K += k[j-1-s]*pow(10,s);\n                }//a\n                return K/2;\n            }//a\n            else{            \n                if(c[i-1] == ']'){\n                    for(u=0;u<t/2+1;u++){\n                        for(r=u;r<t;r++){\n                            if(k[r]<min){\n                                tempr=r;\n                                min=k[r];\n                            }//a\n                        }//a\n                        temp=k[u];\n                        k[u]=k[tempr];\n                        k[tempr]=temp;\n                    }//a\n                    for(u=0;u<t/2+1;u++){\n                        sumk+=k[u];\n                    }//a\n                    return sumk;\n                }//a\n                t++;\n            }//a\n        }else{\n            k[j]=c[i]-0x30;\n            j++;\n        }//a\n            \n        i++;\n    }//a\n}\n\nint main(){\n    int n;\n    int i,j;\n    char c[10000];\n    \n    for(i=0;i<10000;i++){\n        c[i]=0;\n    }\n    \n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++){\n        scanf(\"%s\",c);\n        printf(\"%d\\n\",fancA(c));        \n         \n    }\n    \n    \n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n \nchar s[10001];\nint n,count=0,i;\n \nint dfs();\nint cmp(const void *p1,const void *p2){\n  return *(int*)p1-*(int*)p2;\n}\n \nint main(void){\n  int a,ans=0;\n  scanf(\"%d\",&n);\n  scanf(\"%c\",&s[0]);\n  for(a=0;a<n;a++){\n    i=0;\n    count=0;\n    while(1){\n      scanf(\"%c\",&s[count]);\n      if(s[count]=='\\n')break;\n      count++;\n    }\n    i=0;\n    ans = dfs();\n    printf(\"%d\\n\",ans);\n  }\n  return 0;\n}\n \nint dfs(){\n  int ca=0,j,ans=0;\n  int ab[4000];\n  i++;\n  if(s[i]>='0'&&s[i]<='9'){\n    int x=0;\n    while(s[i]>='0'&&s[i]<='9'){\n      x = x*10+s[i]-'0';\n      i++;\n    }\n    i++;\n    return (x/2)+1;\n  }\n \n  else  while(s[i]=='['){\n      ab[ca]=dfs();\n      ca++;\n    }\n  qsort(ab,ca,sizeof(int),cmp);\n  for(j=0;j<(ca/2)+1;j++)ans+=ab[j];\n  i++;\n  return ans;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint calc(int number_of_district, char *index);\nint count_district(char *str, char **next);\nint comp(const void *a, const void *b);\nchar line[10001];\n\nint main(void){\n\tint n;\n\tint number_of_children;\n\tchar *end;\n\tscanf(\"%d%*c\",&n);\n\tfor(;n>0;n--){\n\t\tfgets(line, 10001, stdin);\n\t\tnumber_of_children=count_district(line, &end);\n\t\tprintf(\"%d\\n\",calc(number_of_children,line));\n\t}\n\treturn 0;\n}\n\nint comp(const void *a, const void *b){\n\treturn *(int *)a-*(int *)b;\n}\n\nint calc(int number_of_district, char *index){\n\tint minimum[number_of_district];\n\tint i,number_of_children;\n\tint sum=0;\n\tchar *end;\n\n\tfor(i=0;i<number_of_district;i++){\n\t\tnumber_of_children=count_district(index+1, &end);\n\t\tif(number_of_children==0){\n\t\t\tsscanf(index+2,\"%d\",&minimum[i]);\n\t\t\tminimum[i]=minimum[i]/2+1;\n\t\t\tindex=end;\n\t\t}else{\n\t\t\tminimum[i]=calc(number_of_children,index+1);\n\t\t\tindex=end;\n\t\t}\n\t}\n\tqsort(minimum, number_of_district, sizeof(int), comp);\n\tfor(i=0;i<number_of_district/2+1;i++){\n\t\tsum+=minimum[i];\n\t}\n\treturn sum;\n}\n\nint count_district(char *str, char **end){\n\tint count=0;\n\tint level=0;\n\twhile(1){\n\t\tif(*str=='['){\n\t\t\tif(level==1) count++;\n\t\t\tlevel++;\n\t\t}\n\t\tif(*str==']'){\n\t\t\tlevel--;\n\t\t\tif(level==0){\n\t\t\t\t*end=str;\n\t\t\t\treturn count;\n\t\t\t}\n\t\t}\n\t\tstr++;\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nchar input[10001];\nint pos, n, length, vote[3335], vp;\n\nint solve(void);\nint cmp(const void *a, const void *b);\n\nint main(void)\n{\n    int i, j;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) {\n        scanf(\"%s\", input);\n        length = strlen(input);\n        pos = 1;\n        vp = 0;\n        printf(\"%d\\n\", solve());\n    }\n    return 0;\n}\n\nint solve(void)\n{\n    int i = vp, num = 0, tmp, j, k;\n\n    while (1) {\n        if (input[pos] == '[') {\n            pos++;\n            vote[vp] = solve();\n            vp++;\n        } else if (input[pos] == ']') {\n            pos++;\n            if (num) {\n                return num / 2 + 1;\n            } else {\n                qsort(vote+i, vp-i, sizeof(int), cmp);\n                if ((vp-i+1)&1) {\n                    for(j = i; j < (vp-i+1)/2 + i; j++) {\n                        num += vote[j];\n                    }\n                } else {\n                    for(j = i; j < (vp-i)/2+1 + i; j++) {\n                        num += vote[j];\n                    }\n                }\n                vp = i;\n                return num;\n            }\n        } else {\n            num *= 10;\n            num += (input[pos] - '0');\n            pos++;\n        }\n    }\n}\n\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//????????¢??°(???????????¨)\nint comp(const void *a, const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n\n//??????????????¢??°\nint check(char c) {\n\n\t if(c=='[')\n\t\t return 0;\n\n\t else\n\t\t return 1;\n}\n\n //???????????????????????????????????¢??°\nvoid reverse(char *Q, int N) {\n\n\tint i;\n\tchar temp;\n\n    if(N%2==1) { //??°???????????°????\\???°??????\n\tfor(i=0;i<(N-1)/2;i++) {\n\t\ttemp=Q[N-1-i];\n\t\tQ[N-1-i]=Q[i];\n\t\tQ[i]=temp;\n\t}\n    }\n\n    else if(N%2==0) { //?????°?????¶??°??????\n    \tfor(i=0;i<N/2;i++) {\n    \t\ttemp=Q[N-1-i];\n    \t\tQ[N-1-i]=Q[i];\n    \t\tQ[i]=temp;\n    \t}\n    }\n}\n\n //????°???????????\\¨??°????±?????????¢??°\nint winner(char *c) {\n\n\tint W=0; //??¨??????????°???????????\\¨??°???????????????\n\tint T[10000];//??¨???????????¨??????????????????????????????????°???????????\\¨??°\n\tchar A[10000];//???????????????????°???????????\\¨??°????±??????????????????????????????°??¨???\n\tint A_size = 0;//A???????´???°\n\tint T_size = 0;//T???????´???°\n\tint k;//???????????¨?????°\n\tint a=0;//A???????´????????´?????????????????????°\n\tint t=0;//T???????´????????´?????????????????????°\n\tint  n;//?????°??????????????????????????°\n\tint count_P=0;//??¬??§??????????????????????????°\n\tint flag=0;//?????°???????????????????????°\n\n\t  for(k=strlen(c)-2;k>0;k--) { //?????????(k=strlen(c)-1)????????????']'??????????????§????????´???(k=strlen(c)-2)??????????????????\n\n\t\t\t  if(c[k]==']') { //']'?????£?????´??????????????????????´?????????°??????????????§flag????????????\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P++;\n\t\t\t\t  flag=1;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(c[k]=='[') { //'['???????§????????´?\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P--;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(count_P==0&&flag==0){ //??°????????£?????´?????????????????°????¨????????????????????´???¨??????????????\\??????\n\t\t\t\t  n=1;\n\t\t\t\t  T[t]=0;\n\t\t\t\t while(check(c[k])==1)  {//'['??????????????§??°???????¶?????????§????????????????????£???int???????????????????????°????????????T?????\\??????\n\t\t\t\t\t T[t]+=n * (c[k] - '0');\n\t\t\t\t\t n=10*n;\n\t\t\t\t\t k--;\n\t\t\t\t }\n\t\t\t\t T[t]=(T[t]+1)/2; //????´?????????°??????????????°????±???????\n\t\t\t\t t++;\n\t\t\t  }\n\n\t\t\t  else {\n\t\t\t\t  A[a]=c[k]; //??°?????????flag????????£???????????´??????????????????????´?????????°??????????????§???\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  if(count_P==0&&flag) { //?????°?????????\n\t\t\t\t  A_size=a;\n\t\t\t\t  reverse(A,A_size);//A??????????´?????????????????´?????????????????????§????????????\n\t\t\t\t T[t]=winner(A); //?????¨??????????????????????????????????°?????????°????±???????\n\t\t\t\t memset(A,'\\0',10000);//A????????????\n\t\t\t\t a=0;\n\t\t\t\t t++;\n\t\t\t\t flag=0;\n\t\t\t  }\n     }\n\n\t  //T?????????????????????????????°???????´???????????????§???????????????????°??????????????????????????????°??????????????????\n\n\t T_size=t;\n\t qsort(T,T_size,sizeof(int), comp); //??????????????????\n\n\t  for(k=0;k<(T_size+1)/2;k++) {\n\t\t  W+=T[k]; //???????±???????\n\t  }\n\n\treturn W; //??????\n}\n\n//???????????¢??°\nint main(void) {\n\n\tint *Answer; //??????????´???¨??????\n\tint L; //??\\????????°\n\tchar c[10000]; //??\\????????????\n    int i; //???????????¨?????°\n\n\tscanf(\"%d\", &L); //??\\????????°??????\n\n\tAnswer = (int *)malloc(L * sizeof(int)); //??????????´???¨??????????????¢????¢????\n\n\tfor(i=0;i<L;i++) {\n\t\t  scanf(\"%10000s\",c); //??????????????\\???\n\t\t  Answer[i] = winner(c); //?????????????´?\n\t}\n\n\tfor(i=0;i<L;i++)\n\t\t printf(\"%d\\n\",Answer[i]); //???????????????\n\n\tfree(Answer); //?????¢????§£???\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint COMPARE(const void *a, const void *b){ return *(int*)a - *(int*)b; }  /* 昇順 */\n\n/* データ d を読み込みながら、 h から始まる選挙区で勝つために必要な最少の得票数を返す */\nint search(char *d, int *h){\n\tint v[100];\n\tint n = 0;\n\tint i, m;\n\n\tif (d[*h] == '['){\n\t\t/* 選挙区を読み込む */\n\t\twhile (d[*h] == '['){\n\t\t\t(*h)++;  /* '[' */\n\t\t\tv[n] = search(d, h);\n\t\t\tn++;\n\t\t\t(*h)++;  /* ']' */\n\t\t}\n\n\t\t/* この層にある選挙区の過半数 (n / 2 + 1 個) で勝つための、必要な最少の得票数を計算する */\n\t\tqsort(v, n, sizeof(int), COMPARE);  /* 昇順にソートする */\n\t\tm = 0;\n\t\tfor (i = 0; i < n / 2 + 1; i++){\n\t\t\tm += v[i];  /* 一つの選挙区で勝つための得票数 */\n\t\t}\n\t\treturn m;\n\t}else{\n\t\t/* 有権者数を読み込む */\n\t\tv[0] = 0;\n\t\tn = 1;\n\t\t/* 一桁ずつ読み込む */\n\t\tfor (; d[*h] >= '0' && d[*h] <= '9'; (*h)++){\n\t\t\tv[0] *= 10;\n\t\t\tv[0] += d[*h] - '0';\n\t\t}\n\n\t\treturn v[0] / 2 + 1;  /* 過半数となる票数を返す */\n\t}\n}\n\nint main(void){\n\tint n;\n\tchar d[10000];\n\tint i, h;\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++){\n\t\tscanf(\"%s\", d);\n\n\t\th = 0;\n\t\tprintf(\"%d\\n\", search(d, &h));\n\t}\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nchar s[10001];\nint n,count=0,i;\n\nint dfs();\nint cmp(const void *p1,const void *p2){\n  return *(int*)p1-*(int*)p2;\n}\n\nint main(void){\n  int a,ans=0;\n  scanf(\"%d\",&n);\n  scanf(\"%c\",&s[0]);\n  for(a=0;a<n;a++){\n    i=0;\n    count=0;\n    while(1){\n      scanf(\"%c\",&s[count]);\n      if(s[count]=='\\n')break;\n      count++;\n    }\n    i=0;\n    ans = dfs();\n    printf(\"ans=%d\\n\",ans);\n  }\n  return 0;\n}\n\nint dfs(){\n  int ca=0,j,ans=0;\n  int ab[4000];\n  i++;\n  if(s[i]>='0'&&s[i]<='9'){\n    int x=0;\n    while(s[i]>='0'&&s[i]<='9'){\n      x = x*10+s[i]-'0';\n      i++;\n    }\n    printf(\"%d \",x);\n    i++;\n    return (x/2)+1;\n  }\n\n  else  while(s[i]=='['){\n      ab[ca]=dfs();\n      ca++;\n    }\n  qsort(ab,ca,sizeof(int),cmp);\n  for(j=0;j<(ca/2)+1;j++)ans+=ab[j];\n  i++;\n  return ans;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define MAX_LEN 10000 // ??????????????????????????§???\n#define MAX_NC 3333 // ?????????????????°????????§???\nchar buff[MAX_LEN+1]; // ??????????????????????????????\n// ??´??°????????? qsort ????????????????????¢??°\nint compar(const void *p1, const void *p2)\n{\n int *ip1 = (int *)p1;\n int *ip2 = (int *)p2;\n if(*ip1 < *ip2) return -1;\n else if(*ip1 == *ip2) return 0;\n else return 1;\n}\n// lp ?????????????????¬??§???????????????????????¬??§?????????????±???????\nint find_rp(int lp)\n{\n int count = 1; // ????????????????????¬??§??????????????£????????????????????¬??§????????°\n int rp = lp;\n char c;\n while(count){\n c = buff[++rp];\n if(c == '[') count++;\n else if(c == ']') count--;\n }\n return rp;\n}\n// (from,to)??§?????????????????????????????¶???????????????????????????????\\¨??°????±???????\nint mc(int from, int to)\n{\n int nv[MAX_NC]; // ??????????????????????????????????\\¨??°\n int nd; // ????????????????????°\n int v;\n int lp,rp; // ?????????????????????????????¬??§?????????\n int i;\n if(buff[from+1] == '['){ // ???????????????????????¨\n nd = 0;\n lp = from+1; // ???????????????????????????????????¬??§?????????\n while(lp < to){ // lp ????????????????????????????????????????????°?????????\n rp = find_rp(lp); // lp ???????????????????????¬??§?????????????±???????\n nv[nd++] = mc(lp,rp); // ???????????????(lp,rp)???????????????????\\¨??°????±???????\n lp = rp+1; // ?¬??????????????????????\n }\n // ??????????????§???nd ??????????????????????????°???\n // nv[i]?????????????????????????????¶????????????????????????????\\¨??°\n qsort(nv, nd, sizeof(int), compar); // nv ????????????\n // ????????°???????????????????????¶????????????????????????????\\¨??°????±???????\n v = 0;\n for(i=0; i<(nd+1)/2; i++)\n v += nv[i];\n return v; \n }\n else { \n sscanf(&buff[from+1], \"%d\", &v); \n return (v+1)/2; \n }\n}\nint main()\n{\n int n,i,ans;\n scanf(\"%d?\\n\", &n); \n for(i=0; i<n; i++){\n scanf(\"%s?\\n\", buff); \n ans = mc(0, strlen(buff)-1);\n printf(\"%d\\n\", ans);\n }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//using namespace std;\n\n#define repl(i,a,b) for(i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint int_sort( const void * a , const void * b ) {\n  if( *( int * )a < *( int * )b ) {\n    return -1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return 1;\n}\n\nint stoi(char *s,int len){\n\tint res=0;\n\tint i;\n\trep(i,len){\n\t\tres*=10;\n\t\tres+=s[i]-'0';\n\t}\n\treturn res;\n}\n\nint cases;\nchar s[11111];\n\nint dfs(int l,int r){\n\tint num=1;\n\tint i;\n\trepl(i,l+1,r-1){\n\t\tif(s[i]<'0'||s[i]>'9'){\n\t\t\tnum=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(num){\n\t\treturn stoi(s+l+1,r-l-2)/2+1;\n\t}else{\n\t\tint level=-1;\n\t\tint ll;\n\t\tint ns[11111];\n\t\tint idx=0;\n\t\trepl(i,l,r){\n\t\t\tif(s[i]=='['){\n\t\t\t\tif(level==0){\n\t\t\t\t\tll=i;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tlevel--;\n\t\t\t\tif(level==0){\n\t\t\t\t\t//ns.pb(dfs(ll,i+1));\n\t\t\t\t\tns[idx++]=dfs(ll,i+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//sort(all(ns));\n\t\tqsort((void *)ns,idx,sizeof(int),int_sort);\n\t\tint res=0;\n\t\trep(i,idx/2+1){\n\t\t\tres+=ns[i];\n\t\t}\n\t\treturn res;\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&cases);\n\twhile(cases--){\n\t\tscanf(\"%s\",s);\n\t\tprintf(\"%d\\n\",dfs(0,strlen(s)));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "\n#include<stdio.h>\n#include<ctype.h>\n\nvoid sort(int *array, int size);\nint parse();\nint term();\nint number();\n\nchar expression[10000+1];\nint index;\n\nvoid sort(int *array, int size) {\n    int i, j;\n    for(i = 0; i < size; i++) {\n        for(j = 0; j < size - i - 1; j++) {\n            if(array[j] < array[j + 1]) continue;\n            array[j] ^= array[j + 1];\n            array[j + 1] ^= array[j];\n            array[j] ^= array[j + 1];\n        }\n    }\n    return;\n}\n\nint parse() {\n    int res = 0;\n    int number[10000];\n    int size = 0;\n    int i;\n    while(expression[index] == '[') {\n        index++;\n        number[size++] = term();\n        index++;\n    }\n    sort(number, size);\n    for(i = 0; i <= size / 2; i++) {\n        res += number[i];\n    }\n    return res;\n}\n\nint term() {\n    int res = 0;\n    if(isdigit(expression[index])) {\n        res = number();\n    } else {\n        res = parse();\n    }\n    return res;\n}\n\nint number() {\n    int res = 0;\n    while(isdigit(expression[index])) {\n        res *= 10;\n        res += expression[index] - '0';\n        index++;\n    }\n    return (res + 1) / 2;\n}\n\nint main(void) {\n    int n;\n    scanf(\"%d\\n\", &n);\n    while(n-- > 0) {\n        gets(expression);\n        index = 0;\n        printf(\"%d\\n\", parse());\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1188\n  Title:Hierarchical Democracy\n  @kankichi573\n*/\n#include <stdio.h>\n#include <string.h>\n\n#define max(x,y) (((x)>(y))?(x):(y))\n#define min(x,y) (((x)<(y))?(x):(y))\n\nint compare(const void *a, const void *b)\n{\n  return *(int *)a - *(int *)b;\n}\n\n\nint solve(char s[],int len)\n{\n  int i,cnt,lv,ret,st;\n  int kahan[3333];\n  /*\n  for(i=0;i<len;i++)\n    printf(\"%c\",s[i]);\n  printf(\"\\n\");\n  */\n  if(isdigit(s[1]))\n    return(atoi(&s[1])/2+1);\n  lv=cnt=0;\n  st=1;\n  for(i=1;i<len-1;i++)\n    {\n      if(s[i]=='[')\n\tlv++;\n      if(s[i]==']')\n\tlv--;\n      if(lv==0)\n\t{\n\t  kahan[cnt]=solve(s+st,i-st+1);\n\t  cnt++;\n\t  st=i+1;\n\t}\n    }\n  qsort(kahan,cnt,sizeof(int),compare);\n  for(i=ret=0;i<cnt/2+1;i++)\n    ret+=kahan[i];\n  return(ret);\n}\n\n\nmain()\n{\n  int n,i,ret;\n  char senkyoku[10001];\n\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++)\n    {\n      scanf(\"%s\",senkyoku);\n      ret=solve(senkyoku,strlen(senkyoku));\n      printf(\"%d\\n\",ret);\n    }\n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1188\n  Title:Hierarchical Democracy\n  @kankichi573\n*/\n#include <stdio.h>\n#include <string.h>\n\n#define max(x,y) (((x)>(y))?(x):(y))\n#define min(x,y) (((x)<(y))?(x):(y))\n\nint compare(const void *a, const void *b)\n{\n  return *(int *)a - *(int *)b;\n}\n\n\nint solve(char s[],int len)\n{\n  int i,cnt,lv,ret,st;\n  int kahan[100];\n  /*\n  for(i=0;i<len;i++)\n    printf(\"%c\",s[i]);\n  printf(\"\\n\");\n  */\n  if(isdigit(s[1]))\n    return(atoi(&s[1])/2+1);\n  lv=cnt=0;\n  st=1;\n  for(i=1;i<len-1;i++)\n    {\n      if(s[i]=='[')\n\tlv++;\n      if(s[i]==']')\n\tlv--;\n      if(lv==0)\n\t{\n\t  kahan[cnt]=solve(s+st,i-st+1);\n\t  cnt++;\n\t  st=i+1;\n\t}\n    }\n  qsort(kahan,cnt,sizeof(int),compare);\n  for(i=ret=0;i<cnt/2+1;i++)\n    ret+=kahan[i];\n  return(ret);\n}\n\n\nmain()\n{\n  int n,i,ret;\n  char senkyoku[10001];\n\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++)\n    {\n      scanf(\"%s\",senkyoku);\n      ret=solve(senkyoku,strlen(senkyoku));\n      printf(\"%d\\n\",ret);\n    }\n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  /* 引数はvoid*型と規定されているのでint型にcastする */\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[10000];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[1000];\n\tint b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\t\n\t\n\t\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tfgets(c,10000,stdin);\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\tfor(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// Aizu 1188: Hierarchical Democracy\n// 2017.9.18 bal4u@uu\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n\nchar buf[10003];\n\nint cmp(int *a, int *b) { return *a - *b; }\n\nchar *pair(char *p)\n{\n\tint n = 0;\n\twhile (1) {\n\t\tif (*p == '[') n++;\n\t\telse if (*p == ']') { n--; if (n < 0) break; }\n\t\tp++;\n\t}\n\treturn p;\n}\n\nchar *calc(char *p, int *v, int *half)\n{\n\tint n, i, s, h;\n\tchar *pp;\n\tint *t;\n\n\tpp = p, n = 0; while (*p == '[') p++, p = pair(p), p++, n++;\n\tif (n == 0) {\n\t\ts = 0; while (isdigit(*p)) s = s * 10 + *p++ - '0';\n\t\t*v = s, *half = 1; return p;\n\t}\n\tt = calloc(n, sizeof(int));\n\tp = pp; for (i = 0; i < n; i++) p++, p = calc(p, &s, &h), p++, t[i] = s;\n\tqsort(t, n, sizeof(int), cmp);\n\tfor (s = 0, n >>= 1, i = 0; i <= n; i++) if (h) s += 1 + (t[i] >> 1); else s += t[i];\n\tfree(t);\n\t*v = s, *half = 0;\n\treturn p;\n}\n\nint main()\n{\n\tint n, ans, t;\n\tchar *p;\n\n\tscanf(\"%d\", &n);\n\twhile (n-- > 0) {\n\t\tscanf(\"%s\", p = buf); p++;\n\t\tcalc(p, &ans, &t);\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/* \n   AOJ 1188\n   Hierarchical Democaracy\n*/\n\n\n#include<stdio.h>\n#include<stdlib.h>\n\n#define MAX_STR 10001\n\ntypedef struct block\n{\n  int majority, child_num;\n  struct block *children[MAX_STR];\n}block;\n\n\nchar str[MAX_STR];\nint p;\n\n\n\nblock* new(void)\n{\n  block* ret = malloc(sizeof(block));\n  ret->majority = 0;\n  ret->child_num = 0;\n  return ret;\n}\n\nint parse_num(void)\n{\n  int ret = 0, n;\n  while('0' <= str[p] && str[p] <= '9')\n    {\n      n = str[p] - '0';\n      ret = ret * 10 + n;\n      p++;\n    }\n  return ret;\n}\n\nblock* parse_block(void)\n{\n  block* ret = new();\n  p++;\n  if(str[p] == '[')\n    {\n      while(str[p] == '[')\n\t{\n\t  ret->children[ret->child_num] = parse_block();\n\t  ret->child_num++;\n\t  p++;\n\t}\n    }\n  else if('0' <= str[p] && str[p] <= '9')\n    {\n      ret->majority = (parse_num() / 2) + 1;\n    }\n  return ret;\n}\n\nint comp(const void *a, const void *b)\n{\n  int x = *(int *)a;\n  int y = *(int *)b;\n\n  if(x < y)\n    return -1;\n  else\n    return 1;\n}\n\nint solve(block* b)\n{\n  int i;\n  int majority_arr[MAX_STR];\n\n  if(b->majority == 0)\n    {\n      for(i = 0; i < b->child_num; i++)\n\tmajority_arr[i] = solve(b->children[i]);\n      qsort(majority_arr, b->child_num, sizeof(int), comp);\n      for(i = 0; i < (b->child_num / 2) + 1; i++)\n\tb->majority += majority_arr[i];\n    }\n\n  return b->majority;\n}\n\n/* \n----- test case -----\n<-input\n6\n[[123][4567][89]]\n[[5][3][7][3][9]]\n[[[99][59][63][85][51]][[1539][7995][467]][[51][57][79][99][3][91][59]]]\n[[[37][95][31][77][15]][[43][5][5][5][85]][[71][3][51][89][29]][[57][95][5][69][31]][[99][59][65][73][31]]]\n[[[[9][7][3]][[3][5][7]][[7][9][5]]][[[9][9][3]][[5][9][9]][[7][7][3]]][[[5][9][7]][[3][9][3]][[9][5][5]]]]\n[[8231][3721][203][3271][8843]]\n\n->output\n107\n7\n175\n95\n21\n3599\n---------------------\n*/\n\nvoid print_blocks(block* b)\n{\n  int i;\n  printf(\"-------block------\\n\");\n  printf(\"majority = %d, child_num = %d\\n\", b->majority, b->child_num);\n  printf(\"  ------children------\\n\");\n  for(i = 0; i < b->child_num; i++)\n    {\n      print_blocks(b->children[i]);\n    }\n  printf(\"-------end block----------\\n\");\n}\n\nvoid free_blocks(block* b)\n{\n  int i;\n  if(b->child_num != 0)\n      for(i = 0; i < b->child_num; i++)\n\tfree_blocks(b->children[i]);\n  free(b);\n  return ;\n}\n\nvoid init(block* head)\n{\n  free_blocks(head);\n  p = 0;\n}\n\nint main(void)\n{\n  int n, i;\n  block *head;\n\n  scanf(\"%d\", &n);\n  for(i = 0; i < n; i++)\n    {\n      scanf(\"%s\", str);\n      head = parse_block();\n      //      print_blocks(head);\n      printf(\"%d\\n\", solve(head));\n      init(head);\n    }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//????????¢??°(???????????¨)\nint comp(const void *a, const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n\n//??????????????¢??°\nint check(char c) {\n\n\t if(c=='[')\n\t\t return 0;\n\n\t else\n\t\t return 1;\n}\n\n //???????????????????????????????????¢??°\nvoid reverse(char *Q, int N) {\n\n\tint i;\n\tchar temp;\n\n    if(N%2==1) { //??°???????????°????\\???°??????\n\tfor(i=0;i<(N-1)/2;i++) {\n\t\ttemp=Q[N-1-i];\n\t\tQ[N-1-i]=Q[i];\n\t\tQ[i]=temp;\n\t}\n    }\n\n    else if(N%2==0) { //?????°?????¶??°??????\n    \tfor(i=0;i<N/2;i++) {\n    \t\ttemp=Q[N-1-i];\n    \t\tQ[N-1-i]=Q[i];\n    \t\tQ[i]=temp;\n    \t}\n    }\n}\n\n //????°???????????\\¨??°????±?????????¢??°\nint winner(char *c) {\n\n\tint W=0; //??¨??????????°???????????\\¨??°???????????????\n\tint T[10001];//??¨???????????¨??????????????????????????????????°???????????\\¨??°\n\tchar A[10001];//???????????????????°???????????\\¨??°????±??????????????????????????????°??¨???\n\tint A_size = 0;//A???????´???°\n\tint T_size = 0;//T???????´???°\n\tint k;//???????????¨?????°\n\tint a=0;//A???????´????????´?????????????????????°\n\tint t=0;//T???????´????????´?????????????????????°\n\tint  n;//?????°??????????????????????????°\n\tint count_P=0;//??¬??§??????????????????????????°\n\tint flag=0;//?????°???????????????????????°\n\n\t  for(k=strlen(c)-2;k>0;k--) { //?????????(k=strlen(c)-1)????????????']'??????????????§????????´???(k=strlen(c)-2)??????????????????\n\n\t\t\t  if(c[k]==']') { //']'?????£?????´??????????????????????´?????????°??????????????§flag????????????\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P++;\n\t\t\t\t  flag=1;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(c[k]=='[') { //'['???????§????????´?\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P--;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(count_P==0&&flag==0){ //??°????????£?????´?????????????????°????¨????????????????????´???¨??????????????\\??????\n\t\t\t\t  n=1;\n\t\t\t\t  T[t]=0;\n\t\t\t\t while(check(c[k])==1)  {//'['??????????????§??°???????¶?????????§????????????????????£???int???????????????????????°????????????T?????\\??????\n\t\t\t\t\t T[t]+=n * (c[k] - '0');\n\t\t\t\t\t n=10*n;\n\t\t\t\t\t k--;\n\t\t\t\t }\n\t\t\t\t T[t]=(T[t]+1)/2; //????´?????????°??????????????°????±???????\n\t\t\t\t t++;\n\t\t\t  }\n\n\t\t\t  else {\n\t\t\t\t  A[a]=c[k]; //??°?????????flag????????£???????????´??????????????????????´?????????°??????????????§???\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  if(count_P==0&&flag) { //?????°?????????\n\t\t\t\t  A_size=a;\n\t\t\t\t  reverse(A,A_size);//A??????????´?????????????????´?????????????????????§????????????\n\t\t\t\t T[t]=winner(A); //?????¨??????????????????????????????????°?????????°????±???????\n\t\t\t\t memset(A,'\\0',10001);//A????????????\n\t\t\t\t a=0;\n\t\t\t\t t++;\n\t\t\t\t flag=0;\n\t\t\t  }\n     }\n\n\t  //T?????????????????????????????°???????´???????????????§???????????????????°??????????????????????????????°??????????????????\n\n\t T_size=t;\n\t qsort(T,T_size,sizeof(int), comp); //??????????????????\n\n\t  for(k=0;k<(T_size+1)/2;k++) {\n\t\t  W+=T[k]; //???????±???????\n\t  }\n\n\treturn W; //??????\n}\n\n//???????????¢??°\nint main(void) {\n\n\tint *Answer; //??????????´???¨??????\n\tint L; //??\\????????°\n\tchar c[10001]; //??\\????????????\n    int i; //???????????¨?????°\n\n\tscanf(\"%d\", &L); //??\\????????°??????\n\n\tAnswer = (int *)malloc(L * sizeof(int)); //??????????´???¨??????????????¢????¢????\n\n\tfor(i=0;i<L;i++) {\n\t\t  scanf(\"%10001s\",c); //??????????????\\???\n\t\t  Answer[i] = winner(c); //?????????????´?\n\t}\n\n\tfor(i=0;i<L;i++)\n\t\t printf(\"%d\\n\",Answer[i]); //???????????????\n\n\tfree(Answer); //?????¢????§£???\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  /* 引数はvoid*型と規定されているのでint型にcastする */\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[10000];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[10001];\n\t//int b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\t\n\t\n\t\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tfgets(c,10000,stdin);\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\t/*for(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}*/\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  /* 引数はvoid*型と規定されているのでint型にcastする */\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[100001];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[1000];\n\t//int b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\t\n\t\n\t\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tfgets(c,10000,stdin);\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\t/*for(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}*/\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define MAX_LEN 10000 // ??????????????????????????§???\n#define MAX_NC 3333 // ?????????????????°????????§???\nchar buff[MAX_LEN+1]; // ??????????????????????????????\n// ??´??°????????? qsort ????????????????????¢??°\nint compar(const void *p1, const void *p2)\n{\n int *ip1 = (int *)p1;\n int *ip2 = (int *)p2;\n if(*ip1 < *ip2) return -1;\n else if(*ip1 == *ip2) return 0;\n else return 1;\n}\n// lp ?????????????????¬??§???????????????????????¬??§?????????????±???????\nint find_rp(int lp)\n{\n int count = 1; // ????????????????????¬??§??????????????£????????????????????¬??§????????°\n int rp = lp;\n char c;\n while(count){\n c = buff[++rp];\n if(c == '[') count++;\n else if(c == ']') count--;\n }\n return rp;\n}\n// (from,to)??§?????????????????????????????¶???????????????????????????????\\¨??°????±???????\nint mc(int from, int to)\n{\n int nv[MAX_NC]; // ??????????????????????????????????\\¨??°\n int nd; // ????????????????????°\n int v;\n int lp,rp; // ?????????????????????????????¬??§?????????\n int i;\n if(buff[from+1] == '['){ // ???????????????????????¨\n nd = 0;\n lp = from+1; // ???????????????????????????????????¬??§?????????\n while(lp < to){ // lp ????????????????????????????????????????????°?????????\n rp = find_rp(lp); // lp ???????????????????????¬??§?????????????±???????\n nv[nd++] = mc(lp,rp); // ???????????????(lp,rp)???????????????????\\¨??°????±???????\n lp = rp+1; // ?¬??????????????????????\n }\n // ??????????????§???nd ??????????????????????????°???\n // nv[i]?????????????????????????????¶????????????????????????????\\¨??°\n qsort(nv, nd, sizeof(int), compar); // nv ????????????\n // ????????°???????????????????????¶????????????????????????????\\¨??°????±???????\n v = 0;\n for(i=0; i<(nd+1)/2; i++)\n v += nv[i];\n return v; // v ????±??????????\n }\n else { // ??????????????????????????????\n sscanf(&buff[from+1], \"%d\", &v); // v = ????¨??????°\n return (v+1)/2; // ??????????????????????????°????\\¨??°?????????\n }\n}\nint main()\n{\n int n,i,ans;\n scanf(\"%d?\\n\", &n); // n ???????????????????????°\n for(i=0; i<n; i++){\n scanf(\"%s?\\n\", buff); // ?????????????????????????????????\n ans = mc(0, strlen(buff)-1);// ?§£????±???????\n printf(\"%d\\n\", ans);\n }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  /* 引数はvoid*型と規定されているのでint型にcastする */\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[10000];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[1000];\n\tint b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\t\n\t\n\t\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tgets(c);\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\tfor(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//????????¢??°(???????????¨)\nint comp(const void *a, const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n\n//??????????????¢??°\nint check(char c) {\n\n\t if(c=='[')\n\t\t return 0;\n\n\t else\n\t\t return 1;\n}\n\n //???????????????????????????????????¢??°\nvoid reverse(char *Q, int N) {\n\n\tint i;\n\tchar temp;\n\n    if(N%2==1) { //??°???????????°????\\???°??????\n\tfor(i=0;i<(N-1)/2;i++) {\n\t\ttemp=Q[N-1-i];\n\t\tQ[N-1-i]=Q[i];\n\t\tQ[i]=temp;\n\t}\n    }\n\n    else if(N%2==0) { //?????°?????¶??°??????\n    \tfor(i=0;i<N/2;i++) {\n    \t\ttemp=Q[N-1-i];\n    \t\tQ[N-1-i]=Q[i];\n    \t\tQ[i]=temp;\n    \t}\n    }\n}\n\n //????°???????????\\¨??°????±?????????¢??°\nint winner(char *c) {\n\n\tint W=0; //??¨??????????°???????????\\¨??°???????????????\n\tint T[10000];//??¨???????????¨??????????????????????????????????°???????????\\¨??°\n\tchar A[10000];//???????????????????°???????????\\¨??°????±??????????????????????????????°??¨???\n\tint A_size = 0;//A???????´???°\n\tint T_size = 0;//T???????´???°\n\tint k;//???????????¨?????°\n\tint a=0;//A???????´????????´?????????????????????°\n\tint t=0;//T???????´????????´?????????????????????°\n\tint  n;//?????°??????????????????????????°\n\tint count_P=0;//??¬??§??????????????????????????°\n\tint flag=0;//?????°???????????????????????°\n\n\t  for(k=strlen(c)-2;k>0;k--) { //?????????(k=strlen(c)-1)????????????']'??????????????§????????´???(k=strlen(c)-2)??????????????????\n\n\t\t\t  if(c[k]==']') { //']'?????£?????´??????????????????????´?????????°??????????????§flag????????????\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P++;\n\t\t\t\t  flag=1;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(c[k]=='[') { //'['???????§????????´?\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P--;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(count_P==0&&flag==0){ //??°????????£?????´?????????????????°????¨????????????????????´???¨??????????????\\??????\n\t\t\t\t  n=1;\n\t\t\t\t  T[t]=0;\n\t\t\t\t while(check(c[k])==1)  {//'['??????????????§??°???????¶?????????§????????????????????£???int???????????????????????°????????????T?????\\??????\n\t\t\t\t\t T[t]+=n * (c[k] - '0');\n\t\t\t\t\t n=10*n;\n\t\t\t\t\t k--;\n\t\t\t\t }\n\t\t\t\t T[t]=(T[t]+1)/2; //????´?????????°??????????????°????±???????\n\t\t\t\t t++;\n\t\t\t  }\n\n\t\t\t  else {\n\t\t\t\t  A[a]=c[k]; //??°?????????flag????????£???????????´??????????????????????´?????????°??????????????§???\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  if(count_P==0&&flag) { //?????°?????????\n\t\t\t\t  A_size=a;\n\t\t\t\t  reverse(A,A_size);//A??????????´?????????????????´?????????????????????§????????????\n\t\t\t\t T[t]=winner(A); //?????¨??????????????????????????????????°?????????°????±???????\n\t\t\t\t memset(A,'\\0',10000);//A????????????\n\t\t\t\t a=0;\n\t\t\t\t t++;\n\t\t\t\t flag=0;\n\t\t\t  }\n     }\n\n\t  //T?????????????????????????????°???????´???????????????§???????????????????°??????????????????????????????°??????????????????\n\n\t T_size=t;\n\t qsort(T,T_size,sizeof(int), comp); //??????????????????\n\n\t  for(k=0;k<(T_size+1)/2;k++) {\n\t\t  W+=T[k]; //???????±???????\n\t  }\n\n\treturn W; //??????\n}\n\n//???????????¢??°\nint main(void) {\n\n\tint *Answer; //??????????´???¨??????\n\tint L; //??\\????????°\n\tchar c[10000]; //??\\????????????\n    int i; //???????????¨?????°\n\n\tscanf(\"%d\", &L); //??\\????????°??????\n\n\tAnswer = (int *)malloc(L * sizeof(int)); //??????????´???¨??????????????¢????¢????\n\n\tfor(i=0;i<L;i++) {\n\t\t  scanf(\"%10000s\",c); //??????????????\\???\n\t\t  Answer[i] = winner(c); //?????????????´?\n\t}\n\n\tfor(i=0;i<L;i++)\n\t\t printf(\"%d\\n\",Answer[i]); //???????????????\n\n\tfree(Answer); //?????¢????§£???\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint compare(const void *a, const void *b) {\n\treturn *(int *)a - *(int *)b;\n}\n\nint next(void) {\n\tint i;\n\tchar ch;\n\tint ret;\n\n\tch = getchar();\n\tungetc(ch, stdin);\n\n\tif (ch == '[') {\n\t\tint ary[10000], cnt;\n\n\t\tcnt = 0;\n\t\twhile(getchar() == '[')\n\t\t\tary[cnt++] = next();\n\n\t\tqsort(ary, cnt, sizeof(int), &compare);\n\n\t\tret = 0;\n\t\tfor (i = 0; i < cnt + 1 >> 1; i++)\n\t\t\tret += ary[i];\n\t} else {\n\t\tscanf(\"%d]\", &ret);\n\t\tret = ret + 1 >> 1;\n\t}\n\n\treturn ret;\n}\n\nint main(void) {\n\tint n;\n\n\tscanf(\"%d \", &n);\n\n\twhile (n--) {\n\t\tgetchar();\n\t\tprintf(\"%d\\n\", next());\n\t\tgetchar();\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint compare(const void *a, const void *b){\n\treturn *(int*)a - *(int*)b;\n}\nint getk(int* list,int count){//????????°???????¨??\\¨?¨????????????¢??°\n\tint ans =0;\n\tint i=0;\n\tqsort(list,count,sizeof(int),compare);//?°?????????????????????????????°????????????????????????°?????????????????°??¨???ans?????????????????????\n\tfor(i=0;i<(count+1)/2;i++){\n\t\tans += (list[i]+1)/2;\n\t}\n\treturn ans;//ans?????????\n}\nint geta(int* list,int count){//??°??????????¨??\\¨????¨????????????¢??°\n\tint ans =0;\n\tint i=0;\n\tqsort(list,count,sizeof(int),compare);\n\tfor(i=0;i<(count+1)/2;i++){//gtta??????????????????????????????????????°?????????????????????????????????\n\t\tans += list[i];\n\t}\n\treturn ans;\n}\n\n\nint func(char* str,int st,int end,int sw){//??????????¨????????????¢??° str:????????? st:??????????????°??? end:????????°??? geta??¨getk????????????????????????????????°\n\tint i=st;\n\tint j;\n\tint count=0;\n\tchar num[5000];\n\tint number=0;\n\tint list[1000];\n\tchar data[5];\n\tint lnumber=0;\n\twhile(1){\n\t\tif (str[i]=='['){//[?????°?????°??????????????????\n\t\t\tif(count==0)\n\t\t\t\tst=i+1;//count?????????????????°st???????????°???????¬??????????\n\t\t\tcount++;\n\t\t}\n\t\telse if(str[i]==']'){\n\t\t\tcount--;//]??????????????????count?????????????????????????????????\n\t\t\tif(count==0){//count=0,??????????????¨??????]??????????????????\n\t\t\t\tif(str[i-1]!=']'){//?????¨???????????????????????????????????£??????\n\t\t\t\t\tfor(j=0;j<4;j++)\n\t\t\t\t\t\tdata[j]=num[j];\n\t\t\t\t\tdata[4]='\\0';\n\t\t\t\t\tlist[lnumber]= atoi(data);//?????????????¨????\n\t\t\t\t\tlnumber++;\n\t\t\t\t\tmemset(num,'\\0',number);//num??????????????????\n\t\t\t\t\tmemset(data,'\\0',5);\n\t\t\t\t\tnumber=0;\n\t\t\t\t\tsw=-1;//sw???getk???????????????\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlist[lnumber]=func(str,st,i-1,1);//?????¨????????????????±?????????£????????????sw???geta??????????????°?????????\n\t\t\t\t\tlnumber++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tnum[number] = str[i];\n\t\t\tnumber++;\n\t\t}\n\t\ti++;\n\t\tif(i > end)\n\t\t\tbreak;\n\t}\n\tif(sw==1)//sw????????£?????????????¨????????¨????????????????\n\t\treturn geta(list,lnumber);\n\telse\n\t\treturn getk(list,lnumber);\n\n}\n\n\n\nint main(void){//????????????????????°?????¢??°?????????????????????????¨?????????????????????????????????????\n\tint ans[100];\n\tchar str[10000];\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%s\",str);\n\t\tans[i]=func(str,0,(int)strlen(str),1);\n\t\tmemset(str,'\\0',(int)strlen(str));\n\t}\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/* \n   AOJ 1188\n   Hierarchical Democaracy\n*/\n\n\n#include<stdio.h>\n#include<stdlib.h>\n\n#define MAX_STR 10001\n\ntypedef struct block\n{\n  int majority, child_num;\n  struct block *children[MAX_STR];\n}block;\n\n\nchar str[MAX_STR];\nint p;\n\n\n\nblock* new(void)\n{\n  block* ret = malloc(sizeof(block));\n  ret->majority = 0;\n  ret->child_num = 0;\n  return ret;\n}\n\nint parse_num(void)\n{\n  int ret = 0, n;\n  while('0' <= str[p] && str[p] <= '9')\n    {\n      n = str[p] - '0';\n      ret = ret * 10 + n;\n      p++;\n    }\n  return ret;\n}\n\nblock* parse_block(void)\n{\n  block* ret = new();\n  p++;\n  if(str[p] == '[')\n    {\n      while(str[p] == '[')\n\t{\n\t  ret->children[ret->child_num] = parse_block();\n\t  ret->child_num++;\n\t  p++;\n\t}\n    }\n  else if('0' <= str[p] && str[p] <= '9')\n    {\n      ret->majority = (parse_num() / 2) + 1;\n    }\n  return ret;\n}\n\nint comp(const void *a, const void *b)\n{\n  int x = *(int *)a;\n  int y = *(int *)b;\n\n  if(x < y)\n    return -1;\n  else\n    return 1;\n}\n\nint solve(block* b)\n{\n  int i;\n  int majority_arr[MAX_STR];\n\n  if(b->majority == 0)\n    {\n      for(i = 0; i < b->child_num; i++)\n\tmajority_arr[i] = solve(b->children[i]);\n      qsort(majority_arr, b->child_num, sizeof(int), comp);\n      for(i = 0; i < (b->child_num / 2) + 1; i++)\n\tb->majority += majority_arr[i];\n    }\n\n  return b->majority;\n}\n\n\nvoid free_blocks(block* b)\n{\n  int i;\n  if(b->child_num != 0)\n      for(i = 0; i < b->child_num; i++)\n\tfree_blocks(b->children[i]);\n  free(b);\n  return ;\n}\n\nvoid init(block* head)\n{\n  free_blocks(head);\n  p = 0;\n}\n\nint main(void)\n{\n  int n, i;\n  block *head;\n\n  scanf(\"%d\", &n);\n  for(i = 0; i < n; i++)\n    {\n      scanf(\"%s\", str);\n      head = parse_block();\n      printf(\"%d\\n\", solve(head));\n      init(head);\n    }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nchar s[10001];\nint n,count=0,i;\n\nint dfs();\nint cmp(const void *p1,const void *p2){\n  return *(int*)p1-*(int*)p2;\n}\n\nint main(void){\n  int a,ans=0;\n  scanf(\"%d\",&n);\n  scanf(\"%c\",&s[0]);\n  for(a=0;a<n;a++){\n    i=0;\n    count=0;\n    while(1){\n      scanf(\"%c\",&s[count]);\n      if(s[count]=='\\n')break;\n      count++;\n    }\n    i=0;\n    ans = dfs();\n    printf(\"ans=%d\\n\",ans);\n  }\n  return 0;\n}\n\nint dfs(){\n  int ca=0,j,ans=0;\n  int ab[4000];\n  i++;\n  if(s[i]>='0'&&s[i]<='9'){\n    int x=0;\n    while(s[i]>='0'&&s[i]<='9'){\n      x = x*10+s[i]-'0';\n      i++;\n    }\n    printf(\"%d \",x);\n    i++;\n    return (x/2)+1;\n  }\n\n  else  while(s[i]=='['){\n      ab[ca]=dfs();\n      ca++;\n    }\n  qsort(ab,ca,sizeof(int),cmp);\n  for(j=0;j<(ca/2)+1;j++)ans+=ab[j];\n  i++;\n  return ans;\n}\n\n"
  },
  {
    "language": "C",
    "code": "/* \n   AOJ 1188\n   Hierarchical Democaracy\n*/\n\n\n#include<stdio.h>\n#include<stdlib.h>\n\n#define MAX_STR 10001\n\ntypedef struct block\n{\n  int majority, child_num;\n  struct block *children[MAX_STR];\n}block;\n\n\nchar str[MAX_STR];\nint p;\n\n\n\nblock* new(void)\n{\n  block* ret = malloc(sizeof(block));\n  ret->majority = 0;\n  ret->child_num = 0;\n  return ret;\n}\n\nint parse_num(void)\n{\n  int ret = 0, n;\n  while('0' <= str[p] && str[p] <= '9')\n    {\n      n = str[p] - '0';\n      ret = ret * 10 + n;\n      p++;\n    }\n  return ret;\n}\n\nblock* parse_block(void)\n{\n  block* ret = new();\n  p++;\n  if(str[p] == '[')\n    {\n      while(str[p] == '[')\n\t{\n\t  ret->children[ret->child_num] = parse_block();\n\t  ret->child_num++;\n\t  p++;\n\t}\n    }\n  else if('0' <= str[p] && str[p] <= '9')\n    {\n      ret->majority = (parse_num() / 2) + 1;\n    }\n  return ret;\n}\n\nint comp(const void *a, const void *b)\n{\n  int x = *(int *)a;\n  int y = *(int *)b;\n\n  if(x < y)\n    return -1;\n  else\n    return 1;\n}\n\nint solve(block* b)\n{\n  int i;\n  int majority_arr[MAX_STR];\n\n  if(b->majority == 0)\n    {\n      for(i = 0; i < b->child_num; i++)\n\tmajority_arr[i] = solve(b->children[i]);\n      qsort(majority_arr, b->child_num, sizeof(int), comp);\n      for(i = 0; i < (b->child_num / 2) + 1; i++)\n\tb->majority += majority_arr[i];\n    }\n\n  return b->majority;\n}\n\n/* \n----- test case -----\n<-input\n6\n[[123][4567][89]]\n[[5][3][7][3][9]]\n[[[99][59][63][85][51]][[1539][7995][467]][[51][57][79][99][3][91][59]]]\n[[[37][95][31][77][15]][[43][5][5][5][85]][[71][3][51][89][29]][[57][95][5][69][31]][[99][59][65][73][31]]]\n[[[[9][7][3]][[3][5][7]][[7][9][5]]][[[9][9][3]][[5][9][9]][[7][7][3]]][[[5][9][7]][[3][9][3]][[9][5][5]]]]\n[[8231][3721][203][3271][8843]]\n\n->output\n107\n7\n175\n95\n21\n3599\n---------------------\n*/\n\nvoid print_blocks(block* b)\n{\n  int i;\n  printf(\"-------block------\\n\");\n  printf(\"majority = %d, child_num = %d\\n\", b->majority, b->child_num);\n  printf(\"  ------children------\\n\");\n  for(i = 0; i < b->child_num; i++)\n    {\n      print_blocks(b->children[i]);\n    }\n  printf(\"-------end block----------\\n\");\n}\n\nvoid free_blocks(block* b)\n{\n  int i;\n  if(!b->child_num)\n      for(i = 0; i < b->child_num; i++)\n\tfree_blocks(b->children[i]);\n  free(b);\n  return ;\n}\n\nvoid init(block* head)\n{\n  free_blocks(head);\n  p = 0;\n}\n\nint main(void)\n{\n  int n, i;\n  block *head = NULL;  \n\n  scanf(\"%d\", &n);\n  for(i = 0; i < n; i++)\n    {\n      scanf(\"%s\", str);\n      head = parse_block();\n      //      print_blocks(head);\n      printf(\"%d\\n\", solve(head));\n      init(head);\n    }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#define _USE_MATH_DEFINES\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <ctype.h>\n#include <limits.h>\n#define EPS 1e-10\n#define sq(n) ((n)*(n))\n#define rep(i,n) for(i=0;i<n;i++)\n#define rev(i,n) for(i=n-1;i>=0;i--)\n#define sort(a,n) qsort(a,n,sizeof(TYPE),cmp)\n#define sort_r(a,n) qsort(a,n,sizeof(TYPE),cmp_r);\n#define chsort(s,n) qsort(s,n,sizeof(char),cmp)\n#define chsort_r(s,n) qsort(s,n,sizeof(char),char_cmp_r);\n#define TYPE int\n#define MEMSET(a) memset(a,0,sizeof(a))\nlong long mod=(long long)1e09+7;\nint inf=1<<29;\nlong long llinf=1ll<<60;\n\nint in(void){\n    int i;scanf(\"%d\",&i);\n    return i;\n}\nlong long llin(void){\n    long long i;scanf(\"%lld\",&i);\n    return i;\n}\ndouble din(void){\n    double i;scanf(\"%lf\",&i);\n    return i;\n}\nvoid chin(char s[]){\n    scanf(\"%s\",s);\n}\nvoid print(int a){\n    printf(\"%d\\n\",a);\n}\nvoid llprint(long long a){\n    printf(\"%lld\\n\",a);\n}\nvoid dprint(double a){\n    printf(\"%.10f\\n\",a);\n}\nvoid print2(int a,int b){\n    printf(\"%d %d\\n\",a,b);\n}\nlong long max(long long a,long long b){\n    return a>b?a:b;\n}\nlong long min(long long a,long long b){\n    return a<b?a:b;\n}\nint cmp(const void *a,const void *b){\n    return *(TYPE *)a-*(TYPE *)b;\n}\nint cmp_r(const void *a,const void *b){\n    return *(TYPE *)b-*(TYPE *)a;\n}\nint char_cmp(const void *a,const void *b){\n    return strcmp((char *)a,(char *)b);\n}\nint char_cmp_r(const void *a,const void *b){\n    return strcmp((char *)b,(char *)a);\n}\nvoid swap(int *a,int *b){\n    int t=*a;\n    *a=*b;\n    *b=t;\n}\nlong long gcd(long long x,long long y){\n    return x%y?gcd(y,x%y):y;\n}\nlong long lcm(long long x,long long y){\n    return x/gcd(x,y)*y;\n}\n\n// write codes below this\n// when you use 'sort',\n// make sure TYPE macro is correct\nint i;\nchar s[10001];\nint solve(void){\n    int j,k=0,tmp[10000],ret=0;\n    if(s[i+1]!='['){\n        while(s[++i]!=']')\n            ret=ret*10+s[i]-'0';\n        return (ret+1)/2;\n    }\n    while(s[++i]!=']')\n        tmp[k++]=solve();\n    sort(tmp,k);\n    rep(j,(k+1)/2)ret+=tmp[j];\n    return ret;\n}\n\nint main(void){\n    int n=in(),j;\n    while(n--){\n        chin(s);\n        i=0;\n        print(solve());\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint calc(int number_of_district, char *index);\nint count_district(char *str, char **next);\nint comp(const void *a, const void *b);\nchar line[10010];\n\nint main(void){\n\tint n,i;\n\tint number_of_children;\n\tchar *end;\n\tscanf(\"%d%*c\",&n);\n\tfor(;n>0;n--){\n\t\tfgets(line, 10010, stdin);\n\t\tnumber_of_children=count_district(line, &end);\n\t\t//printf(\"number_of_children:%d\\n\",number_of_children);\n\t\tprintf(\"%d\\n\",calc(number_of_children,line));\n\t}\n\treturn 0;\n}\n\nint comp(const void *a, const void *b){\n\treturn *(int *)a-*(int *)b;\n}\n\nint calc(int number_of_district, char *index){\n\tint minimum[number_of_district];\n\tint i,number_of_children;\n\tint sum=0;\n\tchar *end;\n\n\tfor(i=0;i<number_of_district;i++){\n\t\tnumber_of_children=count_district(index+1, &end);\n\t\tif(number_of_children==0){\n\t\t\tsscanf(index+2,\"%d\",&minimum[i]);\n\t\t\tminimum[i]=minimum[i]/2+1;\n\t\t\tindex=end;\n\t\t}else{\n\t\t\tminimum[i]=calc(number_of_children,index+1);\n\t\t\tindex=end;\n\t\t}\n\t}\n\tqsort(minimum, number_of_district, sizeof(int), comp);\n\tfor(i=0;i<number_of_district/2+1;i++){\n\t\tsum+=minimum[i];\n\t}\n\treturn sum;\n}\n\nint count_district(char *str, char **end){\n\tint count=0;\n\tint level=0;\n\twhile(1){\n\t\tif(*str=='['){\n\t\t\tif(level==1) count++;\n\t\t\tlevel++;\n\t\t}\n\t\tif(*str==']'){\n\t\t\tlevel--;\n\t\t\tif(level==0){\n\t\t\t\t*end=str;\n\t\t\t\treturn count;\n\t\t\t}\n\t\t}\n\t\tstr++;\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nchar s[10001];\nint n,count=0,i;\n\nint dfs();\nint cmp(const void *p1,const void *p2){\n  return *(int*)p1-*(int*)p2;\n}\n\nint main(void){\n  int a,ans=0;\n  scanf(\"%d\",&n);\n  scanf(\"%c\",&s[0]);\n  for(a=0;a<n;a++){\n    i=0;\n    count=0;\n    while(1){\n      scanf(\"%c\",&s[count]);\n      if(s[count]=='\\n')break;\n      count++;\n    }\n    i=0;\n    ans = dfs();\n    printf(\"%d\\n\",ans);\n  }\n  return 0;\n}\n\nint dfs(){\n  int ca=0,j,ans=0;\n  int ab[4000];\n  i++;\n  if(s[i]>='0'&&s[i]<='9'){\n    int x=0;\n    while(s[i]>='0'&&s[i]<='9'){\n      x = x*10+s[i]-'0';\n      i++;\n    }\n    i++;\n    return (x/2)+1;\n  }\n\n  else  while(s[i]=='['){\n      ab[ca]=dfs();\n      ca++;\n    }\n  qsort(ab,ca,sizeof(int),cmp);\n  for(j=0;j<(ca/2)+1;j++)ans+=ab[j];\n  i++;\n  return ans;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//using namespace std;\n\n#define repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint int_sort( const void * a , const void * b ) {\n  if( *( int * )a < *( int * )b ) {\n    return -1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return 1;\n}\n\nint stoi(char *s,int len){\n\tint res=0;\n\trep(i,len){\n\t\tres*=10;\n\t\tres+=s[i]-'0';\n\t}\n\treturn res;\n}\n\nint cases;\nchar s[11111];\n\nint dfs(int l,int r){\n\tint num=1;\n\trepl(i,l+1,r-1){\n\t\tif(s[i]<'0'||s[i]>'9'){\n\t\t\tnum=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(num){\n\t\treturn stoi(s+l+1,r-l-2)/2+1;\n\t}else{\n\t\tint level=-1;\n\t\tint ll;\n\t\tint ns[1111];\n\t\tint idx=0;\n\t\trepl(i,l,r){\n\t\t\tif(s[i]=='['){\n\t\t\t\tif(level==0){\n\t\t\t\t\tll=i;\n\t\t\t\t}\n\t\t\t\tlevel++;\n\t\t\t}else if(s[i]==']'){\n\t\t\t\tlevel--;\n\t\t\t\tif(level==0){\n\t\t\t\t\t//ns.pb(dfs(ll,i+1));\n\t\t\t\t\tns[idx++]=dfs(ll,i+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//sort(all(ns));\n\t\tqsort((void *)ns,idx,sizeof(int),int_sort);\n\t\tint res=0;\n\t\trep(i,idx/2+1){\n\t\t\tres+=ns[i];\n\t\t}\n\t\treturn res;\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&cases);\n\twhile(cases--){\n\t\tscanf(\"%s\",s);\n\t\tprintf(\"%d\\n\",dfs(0,strlen(s)));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nchar s[10001];\nint n,count=0,i;\n\nint dfs();\nint cmp(const void *p1,const void *p2){\n  return *(int*)p1-*(int*)p2;\n}\n\nint main(void){\n  int a,ans=0;\n  scanf(\"%d\",&n);\n  scanf(\"%c\",&s[0]);\n  for(a=0;a<n;a++){\n    i=0;\n    count=0;\n    while(1){\n      scanf(\"%c\",&s[count]);\n      if(s[count]=='\\n')break;\n      count++;\n    }\n    i=0;\n    ans = dfs();\n    printf(\"%d\\n\",ans);\n  }\n  return 0;\n}\n\nint dfs(){\n  int ca=0,j,ans=0;\n  int ab[4000];\n  i++;\n  if(s[i]>='0'&&s[i]<='9'){\n    int x=0;\n    while(s[i]>='0'&&s[i]<='9'){\n      x = x*10+s[i]-'0';\n      i++;\n    }\n    i++;\n    return (x/2)+1;\n  }\n\n  else  while(s[i]=='['){\n      ab[ca]=dfs();\n      ca++;\n    }\n  qsort(ab,ca,sizeof(int),cmp);\n  for(j=0;j<(ca/2)+1;j++)ans+=ab[j];\n  i++;\n  return ans;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[10001];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[1000];\n\t//int b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tfgets(c,10000,stdin);\n\t\tc[10000]=0;\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\t/*for(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}*/\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n#define MAX_NUM_CHILDREN 5000\n\nint comp_shorts(const void* a, const void* b) { return *(short*)a - *(short*)b; }\n\nshort solve()\n{\n    char ch;\n\n    if((ch = getchar()) == '[')\n    {\n        short res;\n\n        if(isdigit((int)(ch = getchar())))\n        {\n            int t;\n            ungetc(ch, stdin);\n            scanf(\"%d\", &t);\n            res = (t + 1) / 2;\n        }\n        else\n        {\n            short cost[MAX_NUM_CHILDREN], count = 0, t;\n            ungetc(ch, stdin);\n            while((t = solve()) != -1)\n                cost[count++] = t;\n            qsort(cost, count, sizeof(short), comp_shorts);\n            for(res = t = 0, count = (1 + count) / 2; t < count; t++)\n                res += cost[t];\n        }\n\n        if(getchar() != ']') exit(-1); /* pop ']' */\n        return res;\n    }\n\n    ungetc(ch, stdin);\n    return -1;\n}\n\nint main(void)\n{\n    short t;\n\n    scanf(\"%*d%*c\");\n\n    while((t = solve()) != -1)\n        printf(\"%d\\n\", t), getchar();\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nchar S[10005],dam[9];\nint N,i,l,t;\n \nint cmp(const void *a,const void *b){return *(int*)a-*(int*)b;}\n \nint dfs(int s,int e)\n{\n\tint i,j,c,p=0,t;\n\tint a[4000];\n\tfor(j=s+1;j+1<e;)\n\t{\n\t\tif(S[j]=='[')//not leaf\n\t\t{\n\t\t\tfor(i=j+1,c=1;i<=e&&c!=0;i++)\n\t\t\t{\n\t\t\t\tif(S[i]=='[')c++;\n\t\t\t\telse if(S[i]==']')c--;\n\t\t\t}\n\t\t\ta[p++]=dfs(j,i-1);\n\t\t\tj=i;\n\t\t}\n\t\telse//leaf\n\t\t{\n\t\t\tfor(i=j;(c=sscanf(S+i,\"%d\",&t));i+=(sprintf(dam,\"%d\",t)+2))\n\t\t\t\ta[p++]=t;\n\t\t\tqsort(a,p,sizeof(int),cmp);\n\t\t\tfor(i=t=0;i<p/2+1;i++)\n\t\t\t\tt+=a[i]/2+1;\n\t\t\t\t\treturn t;\n\t\t}\n\t}\n\tqsort(a,p,sizeof(int),cmp);\n\tfor(i=t=0;i<p/2+1;i++)\n\t\tt+=a[i];\n\treturn t;\n}\n \nint main()\n{\n\tfor(scanf(\"%d\\n\",&N);N--;)\n\t{\n\t\tgets(S);\n\t\tfor(i=0,l=strlen(S);i<l;i++)\n\t\t{\n\t\t\tif((S[i]=='['&&'0'<=S[i+1]&&S[i+1]<='9')||(S[i]==']'&&'0'<=S[i-1]&&S[i-1]<='9'))\n\t\t\t\tS[i]=' ';\n\t\t}\n\t\t//puts(S);\n\t\tprintf(\"%d\\n\",dfs(0,l));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define ll long long\n#define rep(i,l,r)for(ll i=l;i<r;i++)\n\nint upll(const void*a, const void*b){return*(ll*)a<*(ll*)b?-1:*(ll*)a>*(ll*)b?1:0;}\nvoid sortup(ll*a,int n){qsort(a,n,sizeof(ll),upll);}\n\nll pos,len;\nchar s[10010];\n\nll f(){\n\tif(s[pos]!='['){\n\t\tll temp=atoi(s+pos);\n\t\tpos=strchr(s+pos,']')-s+1;\n\t\treturn temp/2+1;\n\t}\n\tll a[4000]={},acnt=0;\n\twhile(pos<len&&s[pos]!=']'){\n\t\tpos++;\n\t\ta[acnt++]=f();\n\t}\n\tpos++;\n\tsortup(a,acnt);\n\tll ans=0;\n\trep(i,0,acnt/2+1)ans+=a[i];\n\treturn ans;\n}\n\nint main(){\n\tll n;\n\tscanf(\"%lld\",&n);\n\twhile(n--){\n\t\tscanf(\" %s\",s);\n\t\tlen=strlen(s);\n\t\tpos=0;\n\t\tprintf(\"%lld\\n\",f());\n\t}\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n\nint qsort_comp(const void* x,const void* y) {\n\tint a=*((const int*)x);\n\tint b=*((const int*)y);\n\tif(a>b)return 1;\n\tif(a<b)return -1;\n\treturn 0;\n}\n\nint getkahan(const char* str,int length) {\n\tif(isdigit(*str))return (atoi(str)+1)/2;\n\tint* hlist=malloc(sizeof(int)*3400);\n\tint hlist_num=0;\n\tint i;\n\tfor(i=0;i<length;) {\n\t\tint next,level=1;\n\t\tfor(next=i+1;level>0;next++) {\n\t\t\tif(str[next]=='[')level++;\n\t\t\telse if(str[next]==']')level--;\n\t\t}\n\t\thlist[hlist_num++]=getkahan(&str[i+1],next-i-2);\n\t\ti=next;\n\t}\n\tqsort(hlist,hlist_num,sizeof(int),qsort_comp);\n\tint sum=0;\n\tfor(i=0;i<(hlist_num+1)/2;i++)sum+=hlist[i];\n\tfree(hlist);\n\treturn sum;\n}\n\nint main(void) {\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) {\n\t\tchar input[20000];\n\t\tscanf(\"%s\",input);\n\t\tprintf(\"%d\\n\",getkahan(&input[1],(int)strlen(input)-2));\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct Node {\n  struct Node* children[4000];\n  int size;\n  int citizen;\n} Node;\n\nchar str[20000];\nchar* ptr;\n\nNode* create() {\n  Node* node = calloc(1, sizeof(Node));\n  while (++ptr, *ptr != '\\0') {\n    if (*ptr == '[') {\n      node->children[node->size++] = create();\n    } else if (*ptr == ']') {\n      return node;\n    } else if (*ptr >= '0' && *ptr <= '9') {\n      node->citizen = node->citizen * 10 + (*ptr - '0');\n    }\n  }\n\n  return node;\n}\n\nint asc(const void* a, const void* b) { return *(int*)a - *(int*)b; }\n\nint dfs(Node* n) {\n  if (n->citizen != 0) {\n    return n->citizen / 2 + 1;\n  }\n\n  int* arr = malloc(sizeof(int) * n->size);\n\n  int i;\n  for (i = 0; i < n->size; ++i) {\n    arr[i] = dfs(n->children[i]);\n  }\n\n  qsort(arr, n->size, sizeof(int), asc);\n\n  int sum = 0;\n  for (i = 0; i < n->size / 2 + 1; ++i) {\n    sum += arr[i];\n  }\n\n  return sum;\n}\n\nvoid deallocate(Node* n) {\n  int i;\n  for (i = 0; i < n->size; ++i) {\n    deallocate(n->children[i]);\n  }\n\n  free(n);\n}\n\nvoid print_space(int space) {\n  while (space--) {\n    printf(\" \");\n  }\n}\n\nvoid print(int tabstop, int depth, Node* node) {\n  if (node->citizen != 0) {\n    print_space(depth);\n    printf(\"%d,\\n\", node->citizen);\n    return;\n  }\n  print_space(depth);\n  puts(\"{\");\n  int i;\n  for (i = 0; i < node->size; ++i) {\n    print(tabstop, depth + tabstop, node->children[i]);\n  }\n  print_space(depth);\n  puts(\"},\");\n}\n\nint main(void) {\n  int n;\n  scanf(\"%d\", &n);\n  while (n--) {\n    scanf(\"%s\", str);\n\n    ptr = str;\n\n    Node* root = create();\n    printf(\"%d\\n\", dfs(root));\n    // print(2, 0, root);\n    deallocate(root);\n  }\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n#define MAX_NUM_CHILDREN 3000\n\nint comp_shorts(const void* a, const void* b) { return *(short*)a - *(short*)b; }\n\nshort solve()\n{\n    char ch;\n    \n    if((ch = getchar()) == '[')\n    {\n        short res;\n        \n        if(isdigit((int)(ch = getchar())))\n        {\n            int t;\n            ungetc(ch, stdin);\n            scanf(\"%d\", &t);\n            res = (t + 1) / 2;\n        }\n        else\n        {\n            short cost[MAX_NUM_CHILDREN], count = 0, t;\n            ungetc(ch, stdin);\n            while((t = solve()) != -1)\n                cost[count++] = t;\n            qsort(cost, count, sizeof(short), comp_shorts);\n            for(res = t = 0, count = (1 + count) / 2; t < count; t++)\n                res += cost[t];\n        }\n        \n        getchar();          /* pop ']' */\n        return res;\n    }\n    \n    ungetc(ch, stdin);\n    return -1;\n}\n\nint main(void)\n{\n    short t;\n    \n    scanf(\"%*d%*c\");\n    \n    while((t = solve()) != -1)\n        printf(\"%d\\n\", t), getchar();\n    \n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nchar s[100010];\nint r;\nint f(){\n  int c=0,d[100010],n=0,i,j;\n  while(s[r]-']'){//printf(\"%c\",s[r]);\n    if(s[r]==0)return 0;\n    if(s[r]=='['){\n      r++;\n      d[c++]=f();\n    }\n    else n=n*10+s[r++]-'0';\n  }//printf(\"%c\",s[r]);\n  r++;//printf(\"%d\\n\",c);\n  if(c==0)return n/2+1;\n  for(i=0;i<c;i++){\n    n=d[i];\n    for(j=i;j&&d[j-1]>n;j--)d[j]=d[j-1];\n    d[j]=n;\n  }//printf(\"\\n\");\n  for(i=n=0;i<c/2+1;i++)n+=d[i];//printf(\"%d\\n\",n);\n  return n;\n}\nint main(){\n  int n;\n  scanf(\"%d\",&n);\n  while(n--){\n    scanf(\"%s\",s);\n    r=1;\n    printf(\"%d\\n\",f());\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare_int(const void *a, const void *b){\n    return *(int*)a - *(int*)b;\n}\nint minimum_vote(){\n    int vote[10000];\n    int index = 0;\n    int sum = 0;\n    char c = getchar();\n    while(1){\n        if(c == '['){\n            vote[index++] = minimum_vote();\n            c = getchar();\n        }\n        else if(c == ']'){\n            qsort(vote, index, sizeof(int), compare_int);\n            int i;\n            for(i = 0; i < (index + 1) / 2; i++){\n                sum += vote[i];\n            }\n            return sum;\n        }\n        else{\n            int t = c - '0';\n            c = getchar();\n            while(c >= '0' && c <= '9'){\n                t = t * 10 + (c - '0');\n                c = getchar();\n            }\n            vote[index++] = (t + 1) / 2;\n        }\n    }\n}\nint main(void){\n    int n, i;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++){\n        while(getchar() != '[');\n        printf(\"%d\\n\", minimum_vote());\n    }\n}"
  },
  {
    "language": "C",
    "code": "/* \n   AOJ 1188\n   Hierarchical Democaracy\n*/\n\n\n#include<stdio.h>\n#include<stdlib.h>\n\n#define MAX_STR 10001\n\ntypedef struct block\n{\n  int majority, child_num;\n  struct block *children[MAX_STR];\n}block;\n\n\nchar str[MAX_STR];\nint p;\n\n\n\nblock* new(void)\n{\n  block* ret = malloc(sizeof(block));\n  ret->majority = 0;\n  ret->child_num = 0;\n  return ret;\n}\n\nint parse_num(void)\n{\n  int ret = 0, n;\n  while('0' <= str[p] && str[p] <= '9')\n    {\n      n = str[p] - '0';\n      ret = ret * 10 + n;\n      p++;\n    }\n  return ret;\n}\n\nblock* parse_block(void)\n{\n  block* ret = new();\n  p++;\n  if(str[p] == '[')\n    {\n      while(str[p] == '[')\n\t{\n\t  ret->children[ret->child_num] = parse_block();\n\t  ret->child_num++;\n\t  p++;\n\t}\n    }\n  else if('0' <= str[p] && str[p] <= '9')\n    {\n      ret->majority = (parse_num() / 2) + 1;\n    }\n  return ret;\n}\n\nint comp(const void *a, const void *b)\n{\n  int x = *(int *)a;\n  int y = *(int *)b;\n\n  if(x < y)\n    return -1;\n  else\n    return 1;\n}\n\nint solve(block* b)\n{\n  int i;\n  int majority_arr[MAX_STR];\n\n  if(b->majority == 0)\n    {\n      for(i = 0; i < b->child_num; i++)\n\tmajority_arr[i] = solve(b->children[i]);\n      qsort(majority_arr, b->child_num, sizeof(int), comp);\n      for(i = 0; i < (b->child_num / 2) + 1; i++)\n\tb->majority += majority_arr[i];\n    }\n\n  return b->majority;\n}\n\n/* \n----- test case -----\n<-input\n6\n[[123][4567][89]]\n[[5][3][7][3][9]]\n[[[99][59][63][85][51]][[1539][7995][467]][[51][57][79][99][3][91][59]]]\n[[[37][95][31][77][15]][[43][5][5][5][85]][[71][3][51][89][29]][[57][95][5][69][31]][[99][59][65][73][31]]]\n[[[[9][7][3]][[3][5][7]][[7][9][5]]][[[9][9][3]][[5][9][9]][[7][7][3]]][[[5][9][7]][[3][9][3]][[9][5][5]]]]\n[[8231][3721][203][3271][8843]]\n\n->output\n107\n7\n175\n95\n21\n3599\n---------------------\n*/\n\nvoid print_blocks(block* b)\n{\n  int i;\n  printf(\"-------block------\\n\");\n  printf(\"majority = %d, child_num = %d\\n\", b->majority, b->child_num);\n  printf(\"  ------children------\\n\");\n  for(i = 0; i < b->child_num; i++)\n    {\n      print_blocks(b->children[i]);\n    }\n  printf(\"-------end block----------\\n\");\n}\n\nvoid free_blocks(block* b)\n{\n  int i;\n  if(!b->child_num)\n      for(i = 0; i < b->child_num; i++)\n\tfree_blocks(b->children[i]);\n  free(b);\n  return ;\n}\n\nvoid init(block* head)\n{\n  free_blocks(head);\n  p = 0;\n}\n\nint main(void)\n{\n  int n, i;\n  block *head;\n\n  scanf(\"%d\", &n);\n  for(i = 0; i < n; i++)\n    {\n      scanf(\"%s\", str);\n      head = parse_block();\n      //      print_blocks(head);\n      printf(\"%d\\n\", solve(head));\n      //      init(head);\n      p = 0;\n    }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define MAX_LEN 10000 // ??????????????????????????§???\n#define MAX_NC 3333 // ?????????????????°????????§???\nchar buff[MAX_LEN+1]; // ??????????????????????????????\n// ??´??°????????? qsort ????????????????????¢??°\nint compar(const void *p1, const void *p2)\n{\n int *ip1 = (int *)p1;\n int *ip2 = (int *)p2;\n if(*ip1 < *ip2) return -1;\n else if(*ip1 == *ip2) return 0;\n else return 1;\n}\n// lp ?????????????????¬??§???????????????????????¬??§?????????????±???????\nint find_rp(int lp)\n{\n int count = 1; // ????????????????????¬??§??????????????£????????????????????¬??§????????°\n int rp = lp;\n char c;\n while(count){\n c = buff[++rp];\n if(c == '[') count++;\n else if(c == ']') count--;\n }\n return rp;\n}\n// (from,to)??§?????????????????????????????¶???????????????????????????????\\¨??°????±???????\nint mc(int from, int to)\n{\n int nv[MAX_NC]; // ??????????????????????????????????\\¨??°\n int nd; // ????????????????????°\n int v;\n int lp,rp; // ?????????????????????????????¬??§?????????\n int i;\n if(buff[from+1] == '['){ // ???????????????????????¨\n nd = 0;\n lp = from+1; // ???????????????????????????????????¬??§?????????\n while(lp < to){ // lp ????????????????????????????????????????????°?????????\n rp = find_rp(lp); // lp ???????????????????????¬??§?????????????±???????\n nv[nd++] = mc(lp,rp); // ???????????????(lp,rp)???????????????????\\¨??°????±???????\n lp = rp+1; // ?¬??????????????????????\n }\n // ??????????????§???nd ??????????????????????????°???\n // nv[i]?????????????????????????????¶????????????????????????????\\¨??°\n qsort(nv, nd, sizeof(int), compar); // nv ????????????\n // ????????°???????????????????????¶????????????????????????????\\¨??°????±???????\n v = 0;\n for(i=0; i<(nd+1)/2; i++)\n v += nv[i];\n return v; // v ????±??????????\n }\n else { // ??????????????????????????????\n sscanf(&buff[from+1], \"%d\", &v); // v = ????¨??????°\n return (v+1)/2; // ??????????????????????????°????\\¨??°?????????\n }\n}\nint main()\n{\n int n,i,ans;\n scanf(\"%d?\\n\", &n); // n ???????????????????????°\n for(i=0; i<n; i++){\n scanf(\"%s?\\n\", buff); // ?????????????????????????????????\n ans = mc(0, strlen(buff)-1);// ?§£????±???????\n printf(\"%d\\n\", ans);\n }\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n#define MAX_NUM_CHILDREN 5000\n\nint comp_shorts(const void* a, const void* b) { return *(short*)a - *(short*)b; }\n\nshort solve()\n{\n    char ch;\n\n    if((ch = getchar()) == '[')\n    {\n        short res;\n\n        if(isdigit((int)(ch = getchar())))\n        {\n            int t;\n            ungetc(ch, stdin);\n            scanf(\"%d\", &t);\n            res = (t + 1) / 2;\n        }\n        else\n        {\n            short cost[MAX_NUM_CHILDREN], count = 0, t;\n            ungetc(ch, stdin);\n            while((t = solve()) != -1)\n                cost[count++] = t;\n            qsort(cost, count, sizeof(short), comp_shorts);\n            for(res = t = 0, count = (1 + count) / 2; t < count; t++)\n                res += cost[t];\n        }\n\n        getchar();          /* pop ']' */\n        return res;\n    }\n\n    ungetc(ch, stdin);\n    return -1;\n}\n\nint main(void)\n{\n    short t;\n\n    scanf(\"%*d%*c\");\n\n    while((t = solve()) != -1)\n        printf(\"%d\\n\", t), getchar();\n\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#define _USE_MATH_DEFINES\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <ctype.h>\n#include <limits.h>\n#define EPS 1e-10\n#define sq(n) ((n)*(n))\n#define rep(i,n) for(i=0;i<n;i++)\n#define rev(i,n) for(i=n-1;i>=0;i--)\n#define sort(a,n) qsort(a,n,sizeof(TYPE),cmp)\n#define sort_r(a,n) qsort(a,n,sizeof(TYPE),cmp_r);\n#define chsort(s,n) qsort(s,n,sizeof(char),cmp)\n#define chsort_r(s,n) qsort(s,n,sizeof(char),char_cmp_r);\n#define TYPE int\n#define MEMSET(a) memset(a,0,sizeof(a))\nlong long mod=(long long)1e09+7;\nint inf=1<<29;\nlong long llinf=1ll<<60;\n\nint in(void){\n    int i;scanf(\"%d\",&i);\n    return i;\n}\nlong long llin(void){\n    long long i;scanf(\"%lld\",&i);\n    return i;\n}\ndouble din(void){\n    double i;scanf(\"%lf\",&i);\n    return i;\n}\nvoid chin(char s[]){\n    scanf(\"%s\",s);\n}\nvoid print(int a){\n    printf(\"%d\\n\",a);\n}\nvoid llprint(long long a){\n    printf(\"%lld\\n\",a);\n}\nvoid dprint(double a){\n    printf(\"%.10f\\n\",a);\n}\nvoid print2(int a,int b){\n    printf(\"%d %d\\n\",a,b);\n}\nlong long max(long long a,long long b){\n    return a>b?a:b;\n}\nlong long min(long long a,long long b){\n    return a<b?a:b;\n}\nint cmp(const void *a,const void *b){\n    return *(TYPE *)a-*(TYPE *)b;\n}\nint cmp_r(const void *a,const void *b){\n    return *(TYPE *)b-*(TYPE *)a;\n}\nint char_cmp(const void *a,const void *b){\n    return strcmp((char *)a,(char *)b);\n}\nint char_cmp_r(const void *a,const void *b){\n    return strcmp((char *)b,(char *)a);\n}\nvoid swap(int *a,int *b){\n    int t=*a;\n    *a=*b;\n    *b=t;\n}\nlong long gcd(long long x,long long y){\n    return x%y?gcd(y,x%y):y;\n}\nlong long lcm(long long x,long long y){\n    return x/gcd(x,y)*y;\n}\n\n// write codes below this\n// when you use 'sort',\n// make sure TYPE macro is correct\nchar s[10001];\nint i;\nint solve(void){\n    int ret;\n    int j;\n    int k=0;\n    int tmp[10000];\n    if(s[i+1]!='['){\n        ret=0;\n        while(s[++i]!=']')\n            ret=ret*10+s[i]-'0';\n        return (ret+1)/2;\n    }\n    i++;\n    while(s[i]!=']'){\n        tmp[k++]=solve();\n        i++;\n    }\n    sort(tmp,k);\n    ret=0;\n    rep(j,(k+1)/2)ret+=tmp[j];\n    return ret;\n}\n\nint main(void){\n    int n=in(),j;\n    rep(j,n){\n        MEMSET(s);\n        chin(s);\n        i=0;\n        print(solve());\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint int_sort( const void * a , const void * b ) {\n  if( *( int * )a < *( int * )b ) {\n    return 1;\n  }\n  else\n  if( *( int * )a == *( int * )b ) {\n    return 0;\n  }\n  return -1;\n}\nint main(){\n\tchar c[10001];\n\tint i,j,k,l;\n\tint count,counter;\n\tint a[1000];\n\t//int b[1000];\n\tint max,min;\n\t\n\tint x,y;\n\t\n\tscanf(\"%d\\n\",&count);\n\tfor(counter=0;counter<count;counter++){\n\t\tfgets(c,10000,stdin);\n\t\tc[10000]=0;\n\t\t//printf(\"%d\\n%s\\n\",count,c);\n\t\tfor(y=0;y<1000;y++){\n\t\t\ta[y]=0;\n\t\t}\n\t\ti=0;\n\t\tj=0;\n\t\twhile(c[i]){\n\t\t\tswitch(c[i]){\n\t\t\t\tcase ']':j++;\n\t\t\t\tcase '[':break;\n\t\t\t\tdefault:a[j]*=10;a[j]+=c[i]-'0';break;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\tmax=j;\n\t\t\n\t\tk=0;\n\t\ti=0;\n\t\twhile(a[k]!=-1){\n\t\t\t/*for(l=0;l<1000;l++){\n\t\t\t\tb[l]=0;\n\t\t\t}*/\n\t\t\twhile(a[i])i++;\n\t\t\tj=(i+1)/2;\n\t\t\t\n\t\t\tk++;\n\t\t}\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\t*/\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[i]!=-1){\n\t\t\tmin=i;\n\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\tmax=i;\n\t\t\t//printf(\"%d\",max-min);\n\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\ta[j]=0;\n\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\ta[j]+=(a[k]+1)/2;\n\t\t\t}\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t\ta[j]=-1;\n\t\ti=0;\n\t\tj=0;\n\t\tk=0;\n\t\tl=0;\n\t\twhile(a[1]!=-1){\n\t\t\twhile(a[i]!=-1){\n\t\t\t\tmin=i;\n\t\t\t\twhile(a[i]!=0&&a[i]!=-1)i++;\n\t\t\t\tmax=i;\n\t\t\t\t//printf(\"%d\",max-min);\n\t\t\t\tqsort((void *)(a+min),max-min,sizeof(int),int_sort);\n\t\t\t\ta[j]=0;\n\t\t\t\tfor(k=max;k>=(max+min)/2;k--){\n\t\t\t\t\ta[j]+=a[k];\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ta[j]=-1;\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",a[0]);\n\t\t/*\n\t\tfor(i=0;i<100;i++){\n\t\t\tprintf(\"a[%d]=%d\\n\",i,a[i]);\n\t\t}*/\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//????????¢??°(???????????¨)\nint comp(const void *a, const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n\n//??????????????¢??°\nint check(char c) {\n\n\t if(c=='[')\n\t\t return 0;\n\n\t else\n\t\t return 1;\n}\n\n //???????????????????????????????????¢??°\nvoid reverse(char *Q, int N) {\n\n\tint i;\n\tchar temp;\n\n    if(N%2==1) { //??°???????????°????\\???°??????\n\tfor(i=0;i<(N-1)/2;i++) {\n\t\ttemp=Q[N-1-i];\n\t\tQ[N-1-i]=Q[i];\n\t\tQ[i]=temp;\n\t}\n    }\n\n    else if(N%2==0) { //?????°?????¶??°??????\n    \tfor(i=0;i<N/2;i++) {\n    \t\ttemp=Q[N-1-i];\n    \t\tQ[N-1-i]=Q[i];\n    \t\tQ[i]=temp;\n    \t}\n    }\n}\n\n //????°???????????\\¨??°????±?????????¢??°\nint winner(char *c) {\n\n\tint W=0; //??¨??????????°???????????\\¨??°???????????????\n\tint T[10000];//??¨???????????¨??????????????????????????????????°???????????\\¨??°\n\tchar A[10000];//???????????????????°???????????\\¨??°????±??????????????????????????????°??¨???\n\tint A_size = 0;//A???????´???°\n\tint T_size = 0;//T???????´???°\n\tint k;//???????????¨?????°\n\tint a=0;//A???????´????????´?????????????????????°\n\tint t=0;//T???????´????????´?????????????????????°\n\tint  n;//?????°??????????????????????????°\n\tint count_P=0;//??¬??§??????????????????????????°\n\tint flag=0;//?????°???????????????????????°\n\n\t  for(k=strlen(c)-2;k>0;k--) { //?????????(k=strlen(c)-1)????????????']'??????????????§????????´???(k=strlen(c)-2)??????????????????\n\n\t\t\t  if(c[k]==']') { //']'?????£?????´??????????????????????´?????????°??????????????§flag????????????\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P++;\n\t\t\t\t  flag=1;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(c[k]=='[') { //'['???????§????????´?\n\t\t\t\t  A[a]=c[k];\n\t\t\t\t  count_P--;\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  else if(count_P==0&&flag==0){ //??°????????£?????´?????????????????°????¨????????????????????´???¨??????????????\\??????\n\t\t\t\t  n=1;\n\t\t\t\t  T[t]=0;\n\t\t\t\t while(check(c[k])==1)  {//'['??????????????§??°???????¶?????????§????????????????????£???int???????????????????????°????????????T?????\\??????\n\t\t\t\t\t T[t]+=n * (c[k] - '0');\n\t\t\t\t\t n=10*n;\n\t\t\t\t\t k--;\n\t\t\t\t }\n\t\t\t\t T[t]=(T[t]+1)/2; //????´?????????°??????????????°????±???????\n\t\t\t\t t++;\n\t\t\t  }\n\n\t\t\t  else {\n\t\t\t\t  A[a]=c[k]; //??°?????????flag????????£???????????´??????????????????????´?????????°??????????????§???\n\t\t\t\t  a++;\n\t\t\t  }\n\n\t\t\t  if(count_P==0&&flag) { //?????°?????????\n\t\t\t\t  A_size=a;\n\t\t\t\t  reverse(A,A_size);//A??????????´?????????????????´?????????????????????§????????????\n\t\t\t\t T[t]=winner(A); //?????¨??????????????????????????????????°?????????°????±???????\n\t\t\t\t memset(A,'\\0',10000);//A????????????\n\t\t\t\t a=0;\n\t\t\t\t t++;\n\t\t\t\t flag=0;\n\t\t\t  }\n     }\n\n\t  //T?????????????????????????????°???????´???????????????§???????????????????°??????????????????????????????°??????????????????\n\n\t T_size=t;\n\t qsort(T,T_size,sizeof(int), comp); //??????????????????\n\n\t  for(k=0;k<(T_size+1)/2;k++) {\n\t\t  W+=T[k]; //???????±???????\n\t  }\n\n\treturn W; //??????\n}\n\n//???????????¢??°\nint main(void) {\n\n\tint *Answer; //??????????´???¨??????\n\tint L; //??\\????????°\n\tchar c[10000]; //??\\????????????\n    int i; //???????????¨?????°\n\n\tscanf(\"%d\", &L); //??\\????????°??????\n\n\tAnswer = (int *)malloc(L * sizeof(int)); //??????????´???¨??????????????¢????¢????\n\n\tfor(i=0;i<L;i++) {\n\t\t  scanf(\"%10000s\",c); //??????????????\\???\n\t\t  Answer[i] = winner(c); //?????????????´?\n\t}\n\n\tfor(i=0;i<L;i++)\n\t\t printf(\"%d\\n\",Answer[i]); //???????????????\n\n\tfree(Answer); //?????¢????§£???\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare_int(const void *a, const void *b){\n    return *(int*)a - *(int*)b;\n}\nint minimum_vote(){\n    int vote[10000];\n    int index = 0;\n    int sum = 0;\n    char c = getchar();\n    while(1){\n        if(c == '['){\n            vote[index++] = minimum_vote();\n            c = getchar();\n        }\n        else if(c == ']'){\n            qsort(vote, index, sizeof(int), compare_int);\n            int i;\n            for(i = 0; i < (index + 1) / 2; i++){\n                sum += vote[i];\n            }\n            return sum;\n        }\n        else{\n            int t = c - '0';\n            c = getchar();\n            while(c >= '0' && c <= '9'){\n                t = t * 10 + (c - '0');\n                c = getchar();\n            }\n            vote[index++] = (t + 1) / 2;\n        }\n    }\n}\nint main(void){\n    int n, i;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++){\n        while(getchar() != '[');\n        printf(\"%d\\n\", minimum_vote());\n    }\n    return 0;\n\n}"
  },
  {
    "language": "Kotlin",
    "code": "import java.util.*\n\nfun main(args:Array<String>?): Unit {\n    repeat(readLine()!!.trim().toInt()){\n        println(Section.parse(readLine()!!.trim()).needToWin)\n    }\n}\n\nsealed class Section {\n    abstract val needToWin: Int\n    class LowestSection(population: Int): Section(){\n        override val needToWin: Int = population / 2 + 1\n    }\n    class HigherSection(lower: Collection<Section>): Section() {\n        override val needToWin: Int by lazy{lower.map(Section::needToWin).sorted().take(lower.size / 2 + 1).sum()}\n    }\n    companion object {\n        fun parse(expression: String): Section {\n            tailrec fun sub(position: Int, stack: Stack<Stack<Section>>): Section {\n                return if (position < expression.length) {\n                    when(expression[position]) {\n                        '[' -> {\n                            stack.push(Stack())\n                            sub(position + 1, stack)\n                        }\n                        ']' -> {\n                            val top = stack.pop()\n                            stack.peek().push(HigherSection(top))\n                            sub(position + 1, stack)\n                        }\n                        else -> {\n                            val end = (position until expression.length).find { expression[it] == ']' }!!\n                            stack.peek().push(LowestSection((position until end).map { expression[it] - '0' }.reduce { acc, i -> acc * 10 + i }))\n                            sub(end, stack)\n                        }\n                    }\n                }else stack.peek().peek()\n            }\n            val stack = Stack<Stack<Section>>()\n            stack.add(Stack())\n            return sub(0, stack)\n        }\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tData now = new Data();\n\t\t\tString in = sc.next();\n\t\t\tfor(int j = 0; j < in.length(); j++) {\n\t\t\t\tif(in.charAt(j) == '[') {\n\t\t\t\t\tData tmp = new Data();\n\t\t\t\t\ttmp.p = now;\n\t\t\t\t\tnow.list.add(tmp);\n\t\t\t\t\tnow = tmp;\n\t\t\t\t}\n\t\t\t\telse if(in.charAt(j) == ']') {\n\t\t\t\t\tnow = now.p;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tint k = j;\n\t\t\t\t\tfor(; k < in.length(); k++) {\n\t\t\t\t\t\tif(in.charAt(k) == ']') {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tint s = Integer.parseInt(in.substring(j,k));\n\t\t\t\t\t\n\t\t\t\t\tnow.sum = s;\n\t\t\t\t\tj = k-1;\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ans = solv(now);\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\tstatic class Data {\n\t\tData p;\n\t\tArrayList<Data> list = new ArrayList<Data>();\n\t\tint sum = 0;\n\t}\n\t\n\tstatic int solv(Data a) {\n\t\tif(a.list.isEmpty()) {\n\t\t\treturn a.sum/2+1;\n\t\t}\n\t\t\n\t\tint ret = 0;\n\t\t\n\t\tint[] list = new int[a.list.size()];\n\t\t\n\t\t\n\t\tfor(int i = 0; i < a.list.size(); i++) {\n\t\t\tlist[i] = solv(a.list.get(i));\n\t\t}\n\t\t\n\t\tArrays.sort(list);\n\t\n\t\tfor(int i = 0; i < list.length / 2 + 1; i++) {\n\t\t\tret += list[i];\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n\t\n}\n\t\t\t"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tFastScanner in = new FastScanner(System.in);\n\tPrintWriter out = new PrintWriter(System.out);\n\t\n\tint parseNumber(String s, int index) {\n\t\tint res = 0;\n\t\twhile (s.charAt(index) != ']') {\n\t\t\tres = res * 10 + s.charAt(index++) - '0';\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\t\n\tint culculate(ArrayList<Integer> stage) {\n\t\tint res = 0;\n\t\tInteger[] array = stage.toArray(new Integer[0]);\n\t\t\n\t\tArrays.sort(array);\n\t\t\n\t\t/*\n\t\tSystem.out.println(\"array info\");\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\tfor (int i = 0; i < array.length / 2 + 1; i++) {\n\t\t\tres += array[i] / 2 + 1;\n\t\t}\n\t\t\n\t\tstage.clear();\n\t\treturn res;\n\t}\n\t\n\tint culculate2(ArrayList<Integer> stage) {\n\t\tint res = 0;\n\t\tInteger[] array = stage.toArray(new Integer[0]);\n\t\t\n\t\tArrays.sort(array);\n\t\t\n\t\t/*\n\t\tSystem.out.println(\"array info_ cul2\");\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\t\n\t\tfor (int i = 0; i < array.length / 2 + 1; i++) {\n\t\t\tres += array[i];\n\t\t}\n\t\t\n\t\tstage.clear();\n\t\treturn res;\n\t}\n\t\n\tpublic void run() {\n\t\tint n = in.nextInt();\n\t\tfor (int caseN = 0; caseN < n; caseN++) {\n\t\t\tString s = in.next();\n\t\t\tint stageNum = 0;\n\t\t\t\n\t\t\tfor (stageNum = 0; ; stageNum++) {\n\t\t\t\tif (s.charAt(stageNum) != '[') break;\n\t\t\t}\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tArrayList<Integer>[] stages = new ArrayList[stageNum+1];\n\t\t\tfor (int i = 0; i <= stageNum; i++)\n\t\t\t\tstages[i] = new ArrayList<Integer>();\n\t\t\t\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\t\t//System.out.println(\"cursor : \" + cur);\n\t\t\t\tif (s.charAt(i) == '[') cur++;\n\t\t\t\telse if (s.charAt(i) == ']') {\n\t\t\t\t\tif (cur+1 == stageNum)\n\t\t\t\t\t\tstages[cur].add(culculate(stages[cur+1]));\n\t\t\t\t\telse\n\t\t\t\t\t\tstages[cur].add(culculate2(stages[cur+1]));\n\t\t\t\t\tcur--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstages[cur].add(parseNumber(s, i));\n\t\t\t\t\twhile (s.charAt(i) != ']') i++;\n\t\t\t\t\tcur--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(stages[1].get(0));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void debug(Object... obj) {\n\t\tSystem.out.println(Arrays.deepToString(obj));\n\t}\n\n\tclass FastScanner {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t\t//stream = new FileInputStream(new File(\"dec.in\"));\n\n\t\t}\n\n\t\tint read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Collections;\nimport java.util.Scanner;\nimport java.util.Vector;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO 自動生成されたメソッド・スタブ\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint n = sc.nextInt();\n\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tSystem.out.println(solve(sc.next()));\n\t\t}\n\t}\n\n\tstatic int solve(String str){\n\t\tSection root = new Section(null);\n\t\tSection current = root;\n\n\t\tint tmpNum = 0;\n\t\tfor(int i = 1; i < str.length() - 1; i++){\n\t\t\tchar c = str.charAt(i);\n//\t\t\tSystem.out.println(c);\n\n\t\t\tif(c == '['){\n\t\t\t\tcurrent = current.add(new Section(current));\n\t\t\t}\n\t\t\telse if(c == ']'){\n\t\t\t\tif(tmpNum != 0){\n\t\t\t\t\tcurrent.add(new Section(current, tmpNum));\n//\t\t\t\t\tSystem.out.println(\"add \"+tmpNum);\n\t\t\t\t\ttmpNum = 0;\n\t\t\t\t}\n\n\t\t\t\tcurrent = current.parent;\n\t\t\t}\n\t\t\t//数字\n\t\t\telse {\n\t\t\t\ttmpNum *= 10;\n\t\t\t\ttmpNum += c - '0';\n\t\t\t}\n\t\t}\n\n\t\treturn root.calcSum();\n\t}\n\n}\n\nclass Section implements Comparable<Section>{\n\tint id;\n\tstatic int idseed = 0;\n\tint sum = 0;\n\tVector<Section> sections = new Vector<Section>();\n\tSection parent;\n\tint members = 0;\n\n\tSection(Section parent){\n\t\tthis(parent, 0);\n\t}\n\n\tSection(Section parent, int members){\n\t\tid = idseed++;\n\t\tthis.parent = parent;\n\t\tthis.members = members;\n\n//\t\tSystem.out.println(\"id : \"+id);\n\t\tif(parent != null){\n//\t\t\tSystem.out.println(\"my parent is :\"+parent.id);\n\t\t}\n\t}\n\n\tSection add(Section sec){\n\t\tsections.add(sec);\n\n\t\treturn sec;\n\t}\n\n\tint calcSum(){\n\t\tif(members != 0){\n\t\t\tsum = (members + 1)/2;\n//\t\t\tSystem.out.println(\"this is leaf. sum = \"+sum);\n\t\t\treturn sum;\n\t\t}\n\n//\t\tSystem.out.println(\"I have \"+ sections.size() +\" leaves\");\n\n\t\tfor(int i = 0; i < sections.size(); i++){\n\t\t\tsections.get(i).calcSum();\n\t\t}\n\n\t\tCollections.sort(sections);\n\n\t\tfor(int i = 0; i < (sections.size() + 1)/2 ; i++){\n\t\t\tthis.sum += sections.get(i).sum;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t@Override\n\tpublic int compareTo(Section s) {\n\t\treturn this.sum - s.sum;\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.LinkedList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint n = sc.nextInt();\n\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString str = sc.next();\n\t\t\tSystem.out.println(solve(str));\n\t\t}\n\t}\n\n\tstatic long solve(String str) {\n\t\tstr = str.substring(1, str.length()-1);\n\t\tif(str.charAt(0)=='[') {\n\t\t\tList<Long> childList = new LinkedList<>();\n\t\t\tlong ans =0;\n\t\t\twhile(str.length() != 0) {\n\t\t\t\tint bracketIdx = 1;\n\t\t\t\tint charIdx =1;\n\t\t\t\twhile(bracketIdx != 0) {\n\t\t\t\t\tchar i = str.charAt(charIdx);\n\t\t\t\t\tif(i == ']') {\n\t\t\t\t\t\tbracketIdx--;\n\t\t\t\t\t}else  if (i=='['){\n\t\t\t\t\t\tbracketIdx++;\n\t\t\t\t\t}\n\t\t\t\t\tcharIdx++;\n\t\t\t\t}\n\t\t\t\tchildList.add(solve(str.substring(0, charIdx)));\n\n\t\t\t\tstr = str.substring(charIdx);\n\t\t\t}\n\t\t\tchildList.sort(null);\n\t\t\tfor(int i = 0; i < childList.size()/2+1; i++) {\n\t\t\t\tans+= childList.get(i);\n\t\t\t}\n\t\t\treturn ans;\n\t\t}else {\n\t\t\treturn Long.valueOf(str)/2L+1;\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tvoid run() throws Exception {\n\t\tint n = sc.nextInt();\n\t\tfor (int t = 0; t < n; t++) {\n\t\t\tchar[] str = sc.next().toCharArray();\n\t\t\tParser p = new Parser(str);\n\t\t\tSystem.out.println(p.parse().min());\n\t\t}\n\t}\n}\n\nclass Node {\n\tList<Node> ns;\n\n\tNode() {\n\t\tns = new ArrayList<Node>();\n\t}\n\n\tpublic void add(Node n) {\n\t\tns.add(n);\n\t}\n\n\tpublic int min() {\n\t\tint[] is = new int[ns.size()];\n\t\tfor (int i = 0; i < ns.size(); i++) {\n\t\t\tis[i] = ns.get(i).min();\n\t\t}\n\t\tArrays.sort(is);\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < Math.ceil((1.0 * ns.size()) / 2); i++) {\n\t\t\tsum += is[i];\n\t\t}\n\t\treturn sum;\n\t}\n\n\tpublic String toString() {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tsb.append(\"[\");\n\t\tfor (Node n : ns) {\n\t\t\tif (n instanceof Leaf) {\n\t\t\t\tn = (Leaf) n;\n\t\t\t}\n\t\t\tsb.append(n.toString());\n\t\t}\n\t\tsb.append(\"]\");\n\t\treturn sb.toString();\n\t}\n}\n\nclass Leaf extends Node {\n\tint i;\n\n\tLeaf(int i) {\n\t\tthis.i = i;\n\t}\n\n\tpublic int min() {\n\t\treturn (i + 1) / 2;\n\t}\n\n\tpublic String toString() {\n\t\treturn \"Leaf(\" + i + \")\";\n\t}\n}\n\nclass Parser {\n\tint pos;\n\tchar str[];\n\n\tParser(char[] str) {\n\t\tthis.str = str;\n\t\tpos = 0;\n\t}\n\n\tpublic Node parse() throws Exception {\n\t\tif (str[pos] == '[') {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tthrow new Exception();\n\t\t}\n\t\tif (str[pos] == '[') {\n\t\t\tNode n = new Node();\n\t\t\twhile (str[pos] != ']') {\n\t\t\t\tn.add(parse());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn n;\n\t\t} else {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (str[pos] != ']') {\n\t\t\t\tsb.append(str[pos]);\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tint i = Integer.parseInt(sb.toString());\n\t\t\treturn new Leaf(i);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tprivate static int pos;\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint n = Integer.parseInt(sc.nextLine());\n\t\tfor(int i = 0; i < n ; i++){\n\t\t\tString input = sc.nextLine();\n\t\t\t\n\t\t\tpos = 0;\n\t\t\tSystem.out.println(recursive(input));\n\t\t}\n\t}\n\t\n\tpublic static int recursive(String input){\n\t\tif( (input.charAt(pos) + \"\").matches(\"[0-9]+\") ){/* ??°????????? */\n\t\t\tint sum = 0;\n\t\t\twhile(input.charAt(pos) != ']'){\n\t\t\t\tsum = sum * 10 + Integer.parseInt(input.charAt(pos++) + \"\");\n\t\t\t}\n\t\t\treturn (sum / 2 + 1);/* ??????????????§???????????????????°??????° */\n\t\t}\n\t\t\n\t\tArrayList<Integer> array = new ArrayList<Integer>();\n\t\twhile(input.charAt(pos) == '['){\n\t\t\tpos++;/* nextChar <- '[' */\n\t\t\tarray.add(recursive(input));/* get Number */\n\t\t\tpos++;/* nextChar  <-  ']' */\n\t\t\tif(pos >= input.length()) break;\n\t\t}\n\t\t\n\t\tCollections.sort(array);/* ????°??????°?????????????????????????????????????????????????????°?????? */\n\t\tint sum = 0;\n\t\tint majority = array.size() / 2 + 1;/* ????????°????????§????????°?????? */\n\t\tfor(int i = 0; i < majority; i++){\n\t\t\tsum += array.get(i);\n\t\t}\n\t\t\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\n\npublic class Main {\n\t\n\tpublic static int solve(char[] str, int start, int end){\n\t\tfinal boolean is_number = !(str[start + 1] == '[' || str[start + 1] == ']');\n\t\t/*\n\t\tfor(int pos = start; pos < end; pos++){\n\t\t\tSystem.out.print(str[pos]);\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\tif(is_number){\n\t\t\tint num = 0;\n\t\t\tfor(int pos = start + 1; pos < end - 1; pos++){\n\t\t\t\tnum *= 10;\n\t\t\t\tnum += str[pos] - '0';\n\t\t\t}\n\t\t\t\n\t\t\treturn num / 2 + 1;\n\t\t}else{\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\t\n\t\t\t\n\t\t\tint depth = 0;\n\t\t\tint d_start = -1;\n\t\t\t\n\t\t\tfor(int pos = start; pos < end; pos++){\n\t\t\t\tif(str[pos] == '['){\n\t\t\t\t\tif(depth == 1){\n\t\t\t\t\t\td_start = pos;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdepth++;\n\t\t\t\t}else if(str[pos] == ']'){\t\t\t\t\n\t\t\t\t\tdepth--;\n\t\t\t\t\t\n\t\t\t\t\tif(depth == 1){\n\t\t\t\t\t\tfinal int ret = solve(str, d_start, pos + 1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tlist.add(ret);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tCollections.sort(list);\n\t\t\t//System.out.println(list);\n\t\t\t\n\t\t\tint size = list.size() / 2 + 1;\n\t\t\tint ret = 0;\n\t\t\tfor(int i = 0; i < size; i++){\n\t\t\t\tret += list.get(i);\n\t\t\t}\n\t\t\t\n\t\t\treturn ret;\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tfinal int n = sc.nextInt();\n\t\t\n\t\t\n\t\tfor(int tt = 0; tt < n; tt++){\n\t\t\tfinal char[] input = sc.next().toCharArray();\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tSystem.out.println(solve(input, 0, input.length));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tString input = sc.next();\n\t\t\t\n\t\t\tSystem.out.println(solve(input));\n\t\t}\n\t\t\n\t}\n\t\n\tint solve(String input){\n\t\tif(!input.startsWith(\"[\")){\n\t\t\treturn (Integer.valueOf(input)+1)/2 ;\n\t\t}\n\t\t\n\t\tint depth = 0;\n\t\tStringBuilder buf = new StringBuilder();\n\t\tLinkedList<Integer> mins = new LinkedList<Integer>(); \n\t\tfor(char ch:input.toCharArray()){\n\t\t\tif(ch == '['){\n\t\t\t\tif(depth == 0){\n\t\t\t\t\tbuf = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tbuf.append(ch);\n\t\t\t\t}\n\t\t\t\tdepth++;\n\t\t\t}else if(ch == ']'){\n\t\t\t\tdepth--;\n\t\t\t\tif(depth == 0){\n\t\t\t\t\tmins.add(solve(buf.toString()));\n\t\t\t\t}else{\n\t\t\t\t\tbuf.append(ch);\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tbuf.append(ch);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(mins);\n\t\tint ans = 0;\n\t\t\n\t\tfor(int i = 0 ; i < (mins.size()+1)/2;i++){\n\t\t\tans += mins.get(i);\n\t\t}\n\t\treturn ans;\n\t\t\n\t}\n\t\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\tint N;\n\tchar[] ch;\n\tboolean[] used;\n\n\tpublic int dfs(int n,int d){\n\t\t//System.out.println(n + \" \" + d);\n\t\tint depth = d + 1;\n\t\tint add = 1;\n\t\tPriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n\t\twhile(depth > d){\n\t\t\tif(ch[n + add] == '['){\n\t\t\t\tused[n + add] = true;\n\t\t\t\tpq.add(dfs(n + add,depth));\n\t\t\t\twhile(used[n + add]){\n\t\t\t\t\tadd++;\n\t\t\t\t}\n\t\t\t}else if(ch[n + add] == ']'){\n\t\t\t\t//System.out.println((n + add) + \" \" + d);\n\t\t\t\tused[n + add] = true;\n\t\t\t\tdepth--;\n\t\t\t}else{\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\twhile(ch[n + add] != ']'){\n\t\t\t\t\tused[n + add] = true;\n\t\t\t\t\tsb.append(ch[n + add]);\n\t\t\t\t\tadd++;\n\t\t\t\t}\n\t\t\t\tused[n + add] = true;\n\t\t\t\tdepth--;\n\t\t\t\tadd++;\n\t\t\t\tpq.add(Integer.parseInt(sb.toString()) / 2 + 1);\n\t\t\t}\n\t\t}\n\t\tint size = pq.size() / 2 + 1;\n\t\tint sum = 0;\n\t\tfor(int j = 0;j < size;j++){\n\t\t\tsum += pq.poll();\n\t\t}\n\t\treturn sum;\n\t}\n\n\tpublic void solve() {\n\t\tN = nextInt();\n\t\twhile(N-- > 0){\n\t\t\tch = next().toCharArray();\n\t\t\tused = new boolean[ch.length];\n\t\t\tused[0] = true;\n\t\t\tout.println(dfs(0,0));\n\t\t}\n\t}\n\n    public static void main(String[] args) {\n        out.flush();\n        new Main().solve();\n        out.close();\n    }\n\n    /* Input */\n    private static final InputStream in = System.in;\n    private static final PrintWriter out = new PrintWriter(System.out);\n    private final byte[] buffer = new byte[2048];\n    private int p = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n        if (p < buflen)\n            return true;\n        p = 0;\n        try {\n            buflen = in.read(buffer);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        if (buflen <= 0)\n            return false;\n        return true;\n    }\n\n    public boolean hasNext() {\n        while (hasNextByte() && !isPrint(buffer[p])) {\n            p++;\n        }\n        return hasNextByte();\n    }\n\n    private boolean isPrint(int ch) {\n        if (ch >= '!' && ch <= '~')\n            return true;\n        return false;\n    }\n\n    private int nextByte() {\n        if (!hasNextByte())\n            return -1;\n        return buffer[p++];\n    }\n\n    public String next() {\n        if (!hasNext())\n            throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = -1;\n        while (isPrint((b = nextByte()))) {\n            sb.appendCodePoint(b);\n        }\n        return sb.toString();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    public double nextDouble() {\n        return Double.parseDouble(next());\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.ListIterator;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static int minium_win(char input[], int start, int end){\n\t\tif(input[start] != '[' || input[end] != ']'){\n\t\t\treturn Integer.MIN_VALUE;\n\t\t}\n\t\t\n\t\tint c_lv = 0;\n\t\tint c_start = -1;\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tfor(int pos = start + 1; pos < end; pos++){\n\t\t\tif(input[pos] == '['){\n\t\t\t\tif(c_lv == 0){\n\t\t\t\t\tc_start = pos;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tc_lv++;\n\t\t\t}else if(input[pos] == ']'){\n\t\t\t\tc_lv--;\n\t\t\t\t\n\t\t\t\tif(c_lv == 0){\n\t\t\t\t\tif(input[c_start + 1] == '[' && input[pos - 1] == ']'){\n\t\t\t\t\t\tlist.add(minium_win(input, c_start, pos));\n\t\t\t\t\t}else{\n\t\t\t\t\t\tint num = 0;\n\t\t\t\t\t\tfor(int keta = c_start + 1; keta < pos; keta++){\n\t\t\t\t\t\t\tnum *= 10;\n\t\t\t\t\t\t\tnum += input[keta] - '0';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tlist.add(num / 2 + 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tCollections.sort(list);\n\t\t//System.out.println(list);\n\t\t\n\t\tint ret = 0;\n\t\tfor(int i = 0; i < list.size() / 2 + 1; i++){\n\t\t\tret += list.get(i);\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tfinal int N = sc.nextInt();\n\t\t\n\t\tfor(int tt = 0; tt < N; tt++){\n\t\t\tchar[] input = sc.next().toCharArray();\n\t\t\t\n\t\t\t//System.out.println(Arrays.toString(input));\n\t\t\t\n\t\t\tSystem.out.println(minium_win(input, 0, input.length - 1));\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\n\n// Integral Rectangles\n// 2013/08/13\npublic class Main{\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-12;\n\n\tString line;\n\n\tvoid run(){\n\t\tfor(int T=sc.nextInt(); T>0; T--){\n\t\t\tline=sc.next();\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve(){\n\t\tprintln(dfs(0, line.length())+\"\");\n\t}\n\n\tint dfs(int s, int t){\n\t\t// debug(\"s\", s, \"t\", t);\n\t\tif(line.charAt(s+1)!='['){\n\t\t\t// debug(line.substring(s+1, t));\n\t\t\treturn Integer.parseInt(line.substring(s+1, t))/2+1;\n\t\t}\n\t\tint stack=0;\n\t\tint left=0;\n\t\tArrayList<Integer> list=new ArrayList<Integer>();\n\t\tfor(int i=s+1; i<=t-1; i++){\n\t\t\t// debug(i);\n\t\t\tif(line.charAt(i)=='['){\n\t\t\t\tif(stack++==0){\n\t\t\t\t\tleft=i;\n\t\t\t\t}\n\t\t\t\t// stack++;\n\t\t\t}else if(line.charAt(i)==']'){\n\t\t\t\tstack--;\n\t\t\t}\n\t\t\tif(stack==0){\n\t\t\t\tint right=i;\n\t\t\t\t// left,right [, ]\n\t\t\t\tlist.add(dfs(left, right));\n\t\t\t}\n\t\t}\n\t\t// debug(list);\n\t\tsort(list);\n\t\tint res=0;\n\t\tfor(int i=0; i<list.size()/2+1; i++){\n\t\t\tres+=list.get(i);\n\t\t}\n\t\t// debug(\"s\", s, \"t\", t,res);\n\t\treturn res;\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\n\tstatic Scanner s=new Scanner(System.in);\n\tpublic static void main(String[] $){\n\t\tfor(int i=s.nextInt();i>0;--i)\n\t\t\tsolve();\n\t}\n\tstatic ArrayDeque<ArrayList<Integer>>stack=new ArrayDeque<>();\n\tstatic void solve(){\n\t\tScanner sc=new Scanner(s.next().replaceAll(\"([^\\\\d])\",\" $1 \"));\n\t\tstack.add(new ArrayList<>());\n\t\tdo {\n\t\t\tString n=sc.next();\n\t\t\tif(n.equals(\"[\")) {\n\t\t\t\tstack.push(new ArrayList<>());\n\t\t\t}else if(n.equals(\"]\")) {\n\t\t\t\tArrayList<Integer>l=stack.pop();\n\t\t\t\tint v=l.stream().sorted().mapToInt(o->o).sorted().limit(l.size()/2+1).sum();\n\t\t\t\tstack.peek().add(v);\n\t\t\t}else {\n\t\t\t\tstack.peek().add(Integer.parseInt(n)/2+1);\n\t\t\t}\n\t\t}while(stack.size()>1);\n\t\tSystem.out.println(stack.pop().get(0));\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString str = sc.next();\n\t\t\tSystem.out.println(parse(str));\n\t\t}\n\t}\n\n\tprivate static int parse(String s) {\n//System.err.println(s);\n\t\tif (s.matches(\"^\\\\[\\\\d*\\\\]$\")) {\n\t\t\tint x = Integer.parseInt(s.substring(1, s.length() - 1));\n//System.out.println(x);\n\t\t\treturn x / 2 + 1;\n\t\t} else {\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tint count = 0;\n\t\t\tint start = 1;\n\t\t\tfor (int i = 1; i < s.length(); i++) {\n\t\t\t\tif (s.charAt(i) == '[') {\n\t\t\t\t\tcount++;\n\t\t\t\t} else if (s.charAt(i) == ']') {\n\t\t\t\t\tcount--;\n\t\t\t\t\tif (count == 0) {\n\t\t\t\t\t\tint x = parse(s.substring(start, i + 1));\n\t\t\t\t\t\tlist.add(x);\n\t\t\t\t\t\tstart = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tint sum = 0;\n\t\t\tfor (int i = 0; i < list.size() / 2 + 1; i++) {\n\t\t\t\tsum += list.get(i);\n\t\t\t}\n\t\t\treturn sum;\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n\npublic class Main {\n\tstatic String str;\n\t\n\tpublic static void f(){\n\t\tif(str.charAt(1) != '[')\n\t\t\treturn;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tint k,s = 0;\n\t\tint d = 0;\n\t\tPattern p = Pattern.compile(\"\\\\[(\\\\[\\\\d*\\\\])+\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tif(++d > 5)\n\t\t\t\tbreak;\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\tms = m.group();\n\t\t\tString[] si = ms.substring(2,ms.length()-2).split(\"\\\\]\\\\[\");\n\t\t\tfor(int i = 0;i < si.length;i++){\n\t\t\t\tlist.add(Integer.valueOf(si[i]));\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + k + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;\n\t\tf();\n\t}\n\t\n\tpublic static void fs(){\n\t\tint s = 0;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tPattern p = Pattern.compile(\"\\\\[\\\\d*\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tms = m.group();\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + (Integer.valueOf(ms.substring(1,ms.length()-1))/2+1) + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tScanner in = new Scanner(System.in);\n\t\tfor(n = Integer.valueOf(in.nextLine());n > 0;n--){\n\t\t\tstr = in.nextLine();\n\t\t\tfs();\n\t\t\tf();\n\t\t\tSystem.out.println(str.substring(1,str.length()-1));\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry(Scanner sc = new Scanner(System.in)){\n\t\t\tint n=sc.nextInt();\n\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\tArrayList<Integer> list=new ArrayList<>();\n\t\t\t\tStack<String> stack=new Stack<String>();\n\t\t\t\tString str=sc.next();\n\t\t\t\tint len=str.length();\n\t\t\t\tint num=0;\n\t\t\t\tfor(int j=0; j<len; j++) {\n\t\t\t\t\tif(str.charAt(j)=='[') {\n\t\t\t\t\t\tstack.push(\"]\");\n\t\t\t\t\t}\n\t\t\t\t\telse if(str.charAt(j)==']') {\n\t\t\t\t\t\tif(num>0) {\n\t\t\t\t\t\t\tnum/=10;\n\t\t\t\t\t\t\tnum=num/2+1;\n\t\t\t\t\t\t\tstack.add(String.valueOf(num));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tString k=\"\";\n\t\t\t\t\t\twhile((k=stack.pop())!=\"]\") {\n\t\t\t\t\t\t\tint p=Integer.parseInt(k);\n\t\t\t\t\t\t\tlist.add(p);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\t\tint sum=0;\n\t\t\t\t\t\tfor(int point=0; point<list.size()/2+1; point++) {\n\t\t\t\t\t\t\tsum+=list.get(point);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlist.clear();\n\t\t\t\t\t\tstack.add(String.valueOf(sum));\n\t\t\t\t\t\tnum=0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnum+=str.charAt(j)-'0';\n\t\t\t\t\t\tnum*=10;\n\t\t\t\t\t}\n\t\t\t\t\tif(j==len-1) {\n\t\t\t\t\t\tSystem.out.println(stack.pop());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\nimport java.util.Stack;\n\n\npublic class Main {\n\tString str;\n\tint s,e;\n\tString sc;\n\tString ms;\n\tint num;\n\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\n\tpublic boolean db(int g){\n\t\tint m = 0;\n\t\tint f = 0;\n\t\tfor(int i = g;i < str.length();i++){\n\t\t\tswitch(str.charAt(i)){\n\t\t\tcase '[':\n\t\t\t\tif(m > 0){\n\t\t\t\t\ts = i-1;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tm++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif(m < 0){\n\t\t\t\t\te = i+1;\n\t\t\t\t\tif(f > 0)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tm--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tm = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic void f(){\n\t\tsc = \"\";\n\t\tint k,b = 0;\n\t\te = 0;\n\t\tnum = 0;\n\t\tchar c;\n\t\twhile(db(e)){\n\t\t\tlist.clear();\n\t\t\tms = str.substring(s,e);\n/*\t\t\tString[] si = ms.substring(2,ms.length()-2).split(\"\\\\]\\\\[\");\n\t\t\tfor(int i = 0;i < si.length;i++){\n\t\t\t\tlist.add(Integer.valueOf(si[i]));\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + k + \"]\";\n\t\t\ts = m.end();*/\n\t\t\tfor(int i = 0;i < ms.length();i++){\n\t\t\t\tc = ms.charAt(i);\n\t\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\t\tnum = 10*num + (c-'0');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(num > 0){\n\t\t\t\t\t\tlist.add(num);\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(b,s) + \"[\" + k + \"]\";\n\t\t\tb = e;\n\t\t}\n\t\tsc = sc + str.substring(b,str.length());\n\t\tstr = sc;\n\t}\n\t\n\tpublic void fs(){\n\t/*\tint s = 0;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tPattern p = Pattern.compile(\"\\\\[\\\\d*\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tms = m.group();\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + (Integer.valueOf(ms.substring(1,ms.length()-1))/2+1) + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;*/\n\t\tsc = \"\";\n\t\tchar c;\n\t\tnum = 0;\n\t\tfor(int i = 0;i < str.length();i++){\n\t\t\tc = str.charAt(i);\n\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\tnum = 10*num + (c-'0');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(num > 0){\n\t\t\t\t\tsc = sc + (num/2+1);\n\t\t\t\t\tnum = 0;\n\t\t\t\t}\n\t\t\t\tsc = sc + c;\n\t\t\t}\n\t\t}\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tString str;\n\t\tStack<Integer> s = new Stack<Integer>();\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tint num = 0;\n\t\tScanner in = new Scanner(System.in);\n\t\tfor(n = Integer.valueOf(in.nextLine());n > 0;n--){\n\t\t\tstr = in.nextLine();\n\t\t\tfor(int i = 0;i < str.length();i++){\n\t\t\t\tswitch(str.charAt(i)){\n\t\t\t\tcase '[':\n\t\t\t\t\ts.push(-1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ']':\n\t\t\t\t\tif(num == 0){\n\t\t\t\t\t\tlist.clear();\n\t\t\t\t\t\twhile(s.peek() > 0){\n\t\t\t\t\t\t\tlist.add(s.pop());\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts.pop();\n\t\t\t\t\t\tCollections.sort(list);\n\t\t\t\t\t\tfor(int k = 0;k < list.size()/2+1;k++)\n\t\t\t\t\t\t\tnum += list.get(k);\n\t\t\t\t\t\ts.push(num);\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\ts.pop();\n\t\t\t\t\t\ts.push(num/2+1);\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tnum = 10*num + (str.charAt(i)-'0');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(s.pop());\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main \n{\n\tstatic Scanner scan = new Scanner(System.in);\n\n\tpublic static void main(String[] args) \n\t{\n\t\tSystem.err.println(\"Hey\");\n\t\tint n = scan.nextInt();\n\t\t\n\t\tfor(int i = 0; i < n; i++)\n\t\t{\n\t\t\tnew DataSet();\n\t\t}\n\t}\n\t\n\t\n\tstatic class DataSet\n\t{\n\t\tString content;\n\t\tDistrict country = new District();\n\t\t\n\t\tpublic DataSet()\n\t\t{\n\t\t\tcontent = scan.next();\n\t\t\t\n\t\t\tbuildData();\n\t\t}\n\t\t\n\t\tvoid buildData()\n\t\t{\n\t\t\tDistrict[] lastDistrictOfDepth = new District[100];\n\t\t\tint startOfDistrict = 0;\n\t\t\tint endOfDistrict;\n\t\t\tint depth = -1;\n\t\t\t\n\t\t\tlastDistrictOfDepth[0] = country;\n\t\t\t\n//\t\t\tSystem.out.println(\"START\");\n\t\t\t\n\t\t\tfor(int i = 0; i < content.length(); i++)\n\t\t\t{\n\t\t\t\tString curChar = content.substring(i, i+1);\n\t\t\t\tDistrict districtToLoad;\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"[\"))\n\t\t\t\t{\n\t\t\t\t\tdepth += 1;\n\t\t\t\t\tstartOfDistrict = i+1;\n\t\t\t\t\t\n\t\t\t\t\tlastDistrictOfDepth[depth] = new District();\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"NEW DISTRICT OF DEPTH \" + depth);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"]\"))\n\t\t\t\t{\n//\t\t\t\t\tdistrictToLoad\n\t\t\t\t\tendOfDistrict = i-1;\n\t\t\t\t\t\n\t\t\t\t\tDistrict leDis = lastDistrictOfDepth[depth];\n\t\t\t\t\t\n\t\t\t\t\t//set pop\n\t\t\t\t\tif(leDis.children.size() == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tString districtPopS = content.substring(startOfDistrict, endOfDistrict+1);\n//\t\t\t\t\t\tSystem.out.println(districtPopS);\n\t\t\t\t\t\tint pop = Integer.parseInt(districtPopS);\n\t\t\t\t\t\tleDis.pop = pop;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n//\t\t\t\t\t\tSystem.out.println(\"C \" + leDis.children);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//add this district as a child to its parents\n\t\t\t\t\tif(depth > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tDistrict parent = lastDistrictOfDepth[depth-1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.children.add(leDis);\n\t\t\t\t\t\tleDis.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"\" + lastDistrictOfDepth[0].getMinVotes());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdepth -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tstatic class District\n\t{\n\t\tint pop;\n\t\tList<District> children = new ArrayList<District>();\n\t\tDistrict parent;\n\t\t\n\t\tpublic District()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic District(int pop)\n\t\t{\n\t\t\tthis.pop = pop;\n\t\t}\n\t\t\n\t\tboolean isLowest()\n\t\t{\n//\t\t\tSystem.out.println(\"Lowest? Children \" + children.size());\n\t\t\tif(children.size() == 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint getMinVotes()\n\t\t{\n//\t\t\treturn (int)(Math.floor(getPopulation()/2)) + 1;\n\t\t\tif(isLowest())\n\t\t\t{\n\t\t\t\treturn (pop/2)+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tList<District> tempChildren = new ArrayList<District>();\n\t\t\t\ttempChildren.addAll(children);\n\t\t\t\t\n\t\t\t\tint districtsNeeded = (children.size() / 2) + 1;\n\t\t\t\tint minVotes = 0;\n\t\t\t\tfor(int i = 0; i < districtsNeeded; i++)\n\t\t\t\t{\n\t\t\t\t\tint minPop = -1;\n\t\t\t\t\tDistrict smolDistrict = null;\n\t\t\t\t\t\n\t\t\t\t\t//pick out child with least pop\n\t\t\t\t\tfor(District child : tempChildren)\n\t\t\t\t\t{\n\t\t\t\t\t\tint lePop = child.getMinVotes();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(lePop < minPop || minPop == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminPop = lePop;\n\t\t\t\t\t\t\tsmolDistrict = child;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tminVotes += minPop;\n\t\t\t\t\ttempChildren.remove(smolDistrict);\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"Counting... [\" + i + \"] \" + minPop);\n//\t\t\t\t\tSystem.out.println(\"Size \" + tempChildren.size());\n\t\t\t\t}\n\t\t\t\t\n//\t\t\t\tSystem.out.println(\"MV \" + minVotes);\n\t\t\t\treturn minVotes;\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n \npublic class Main{\n\tclass Node{\n\t\tArrayList<Node> child;\n\t\tint c;\n\t\tpublic Node(){\n\t\t\tchild = new ArrayList<>();\n\t\t}\n\t}\n\tNode current;\n\tString line;\n\tint idx;\n\tpublic void solve(){\n\t\tint N = nextInt();\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tNode root = new Node();\n\t\t\tline = next();\n\t\t\tidx = 1;\n\t\t\tout.println(recur());\n\t\t}\n\t}\n\t\n\tpublic int recur(){\n\t\tchar c = line.charAt(idx++);\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tint num = 0;\n\t\twhile(c != ']'){\n\t\t\tif(c == '['){\n\t\t\t\tlist.add(recur());\n\t\t\t}else{\n\t\t\t\tnum = num * 10 + (c - '0');\n\t\t\t}\n\t\t\tc = line.charAt(idx++);\n\t\t}\n\t\tif(list.size() > 1){\n\t\t\tCollections.sort(list);\n\t\t\tint l = list.size() / 2 + 1;\n\t\t\tfor(int i = 0; i < l; i++){\n\t\t\t\tnum += list.get(i);\n\t\t\t}\n\t\t\treturn num;\n\t\t}else{\n\t\t\treturn num / 2 + 1;\n\t\t}\n\t}\n\t\n\tprivate static PrintWriter out;\n\tpublic static void main(String[] args){\n\t\tout = new PrintWriter(System.out);\n\t\tnew Main().solve();\n\t\tout.flush();\n\t}\n\t\n\t\n\t\n\tpublic static int nextInt(){\n\t\tint num = 0;\n\t\tString str = next();\n\t\tboolean minus = false;\n\t\tint i = 0;\n\t\tif(str.charAt(0) == '-'){\n\t\t\tminus = true;\n\t\t\ti++;\n\t\t}\n\t\tint len = str.length();\n\t\tfor(;i < len; i++){\n\t\t\tchar c = str.charAt(i);\n\t\t\tif(!('0' <= c && c <= '9')) throw new RuntimeException();\n\t\t\tnum = num * 10 + (c - '0');\n\t\t}\n\t\treturn minus ? -num : num;\n\t}\n\t\n\tpublic static long nextLong(){\n\t\tlong num = 0;\n\t\tString str = next();\n\t\tboolean minus = false;\n\t\tint i = 0;\n\t\tif(str.charAt(0) == '-'){\n\t\t\tminus = true;\n\t\t\ti++;\n\t\t}\n\t\tint len = str.length();\n\t\tfor(;i < len; i++){\n\t\t\tchar c = str.charAt(i);\n\t\t\tif(!('0' <= c && c <= '9')) throw new RuntimeException();\n\t\t\tnum = num * 10l + (c - '0');\n\t\t}\n\t\treturn minus ? -num : num;\n\t}\n\tpublic static String next(){\n\t\tint c;\n\t\twhile(!isAlNum(c = read())){}\n\t\tStringBuilder build = new StringBuilder();\n\t\tbuild.append((char)c);\n\t\twhile(isAlNum(c = read())){\n\t\t\tbuild.append((char)c);\n\t\t}\n\t\treturn build.toString();\n\t}\n\t\n\t\n\tprivate static byte[] inputBuffer = new byte[1024];\n\tprivate static int bufferLength = 0;\n\tprivate static int bufferIndex = 0;\n\tprivate static int read(){\n\t\tif(bufferLength < 0) throw new RuntimeException();\n\t\tif(bufferIndex >= bufferLength){\n\t\t\ttry{\n\t\t\t\tbufferLength = System.in.read(inputBuffer);\n\t\t\t\tbufferIndex = 0;\n\t\t\t}catch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t\tif(bufferLength <= 0) return (bufferLength = -1);\n\t\t}\n\t\treturn inputBuffer[bufferIndex++];\n\t}\n\t\n\tprivate static boolean isAlNum(int c){\n\t\treturn '!' <= c && c <= '~';\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tstatic String str;\n\tstatic int s,e;\n\t\n\tpublic static boolean db(int g){\n\t\tint m = 0;\n\t\tint f = 0;\n\t\tfor(int i = g;i < str.length();i++){\n\t\t\tswitch(str.charAt(i)){\n\t\t\tcase '[':\n\t\t\t\tif(m > 0){\n\t\t\t\t\ts = i-1;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tm++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif(m < 0){\n\t\t\t\t\te = i+1;\n\t\t\t\t\tif(f > 0)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tm--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tm = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic static void f(){\n\t\tif(str.charAt(1) != '[')\n\t\t\treturn;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tint k,b = 0;\n\t\te = 0;\n\t\tString num = \"\";\n\t\tchar c;\n\t\twhile(db(e)){\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\tms = str.substring(s,e);\n/*\t\t\tString[] si = ms.substring(2,ms.length()-2).split(\"\\\\]\\\\[\");\n\t\t\tfor(int i = 0;i < si.length;i++){\n\t\t\t\tlist.add(Integer.valueOf(si[i]));\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + k + \"]\";\n\t\t\ts = m.end();*/\n\t\t\tfor(int i = 0;i < ms.length();i++){\n\t\t\t\tc = ms.charAt(i);\n\t\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\t\tnum = num + c;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\t\tlist.add(Integer.valueOf(num));\n\t\t\t\t\t\tnum = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(b,s) + \"[\" + k + \"]\";\n\t\t\tb = e;\n\t\t}\n\t\tsc = sc + str.substring(b,str.length());\n\t\tstr = sc;\n\t\tf();\n\t}\n\t\n\tpublic static void fs(){\n\t/*\tint s = 0;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tPattern p = Pattern.compile(\"\\\\[\\\\d*\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tms = m.group();\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + (Integer.valueOf(ms.substring(1,ms.length()-1))/2+1) + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;*/\n\t\tString sc = \"\";\n\t\tchar c;\n\t\tString num = \"\";\n\t\tfor(int i = 0;i < str.length();i++){\n\t\t\tc = str.charAt(i);\n\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\tnum = num + c;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\tsc = sc + (Integer.valueOf(num)/2+1);\n\t\t\t\t\tnum = \"\";\n\t\t\t\t}\n\t\t\t\tsc = sc + c;\n\t\t\t}\n\t\t}\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tScanner in = new Scanner(System.in);\n\t\tfor(n = Integer.valueOf(in.nextLine());n > 0;n--){\n\t\t\tstr = in.nextLine();\n\t\t\tfs();\n\t\t\tf();\n\t\t\tSystem.out.println(str.substring(1,str.length()-1));\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.NoSuchElementException;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\n\tstatic PrintWriter out;\n\tstatic InputReader ir;\n\tstatic boolean debug = false;\n\n\tstatic void solve() {\n\t\tint n = ir.nextInt();\n\t\twhile (n-- > 0) {\n\t\t\tchar[] s = ir.next().toCharArray();\n\t\t\tout.println(dfs(1, s.length - 1, s));\n\t\t}\n\t}\n\n\tstatic int dfs(int l, int r, char[] s) {\n\t\tint pre = l, d = 0, ct = 0;\n\t\tPriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n\t\tfor (int i = l; i < r; i++) {\n\t\t\tif (s[i] == '[' || s[i] == ']') {\n\t\t\t\tif (s[i] == '[')\n\t\t\t\t\td++;\n\t\t\t\telse\n\t\t\t\t\td--;\n\t\t\t\tif (d == 0) {\n\t\t\t\t\tct++;\n\t\t\t\t\tpq.add(dfs(pre + 1, i, s));\n\t\t\t\t\tpre = i + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ct == 0)\n\t\t\treturn (Integer.parseInt(String.valueOf(s).substring(l, r)) + 1) >>> 1;\n\t\tint ret = 0;\n\t\tfor (int i = 0; i < (ct + 1) >>> 1; i++)\n\t\t\tret += pq.poll();\n\t\treturn ret;\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tir = new InputReader(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.flush();\n\t}\n\n\tstatic class InputReader {\n\n\t\tprivate InputStream in;\n\t\tprivate byte[] buffer = new byte[1024];\n\t\tprivate int curbuf;\n\t\tprivate int lenbuf;\n\n\t\tpublic InputReader(InputStream in) {\n\t\t\tthis.in = in;\n\t\t\tthis.curbuf = this.lenbuf = 0;\n\t\t}\n\n\t\tpublic boolean hasNextByte() {\n\t\t\tif (curbuf >= lenbuf) {\n\t\t\t\tcurbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate int readByte() {\n\t\t\tif (hasNextByte())\n\t\t\t\treturn buffer[curbuf++];\n\t\t\telse\n\t\t\t\treturn -1;\n\t\t}\n\n\t\tprivate boolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tprivate void skip() {\n\t\t\twhile (hasNextByte() && isSpaceChar(buffer[curbuf]))\n\t\t\t\tcurbuf++;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tskip();\n\t\t\treturn hasNextByte();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile (!isSpaceChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tint c = readByte();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = readByte();\n\t\t\tboolean minus = false;\n\t\t\tif (c == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tc = readByte();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres = res * 10 + c - '0';\n\t\t\t\tc = readByte();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn (minus) ? -res : res;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tint c = readByte();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = readByte();\n\t\t\tboolean minus = false;\n\t\t\tif (c == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tc = readByte();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres = res * 10 + c - '0';\n\t\t\t\tc = readByte();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn (minus) ? -res : res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic char[][] nextCharMap(int n, int m) {\n\t\t\tchar[][] map = new char[n][m];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next().toCharArray();\n\t\t\treturn map;\n\t\t}\n\t}\n\n\tstatic void tr(Object... o) {\n\t\tif (debug)\n\t\t\tout.println(Arrays.deepToString(o));\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tstatic String str;\n\tstatic int s,e;\n\t\n\tpublic static boolean db(int g){\n\t\tint m = 0;\n\t\tint f = 0;\n\t\tfor(int i = g;i < str.length();i++){\n\t\t\tswitch(str.charAt(i)){\n\t\t\tcase '[':\n\t\t\t\tif(m > 0){\n\t\t\t\t\ts = i-1;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tm++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif(m < 0){\n\t\t\t\t\te = i+1;\n\t\t\t\t\tif(f > 0)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tm--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tm = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic static void f(){\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tint k,b = 0;\n\t\te = 0;\n\t\tString num = \"\";\n\t\tchar c;\n\t\twhile(db(e)){\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\tms = str.substring(s,e);\n/*\t\t\tString[] si = ms.substring(2,ms.length()-2).split(\"\\\\]\\\\[\");\n\t\t\tfor(int i = 0;i < si.length;i++){\n\t\t\t\tlist.add(Integer.valueOf(si[i]));\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + k + \"]\";\n\t\t\ts = m.end();*/\n\t\t\tfor(int i = 0;i < ms.length();i++){\n\t\t\t\tc = ms.charAt(i);\n\t\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\t\tnum = num + c;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\t\tlist.add(Integer.valueOf(num));\n\t\t\t\t\t\tnum = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(b,s) + \"[\" + k + \"]\";\n\t\t\tb = e;\n\t\t}\n\t\tsc = sc + str.substring(b,str.length());\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void fs(){\n\t/*\tint s = 0;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tPattern p = Pattern.compile(\"\\\\[\\\\d*\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tms = m.group();\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + (Integer.valueOf(ms.substring(1,ms.length()-1))/2+1) + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;*/\n\t\tString sc = \"\";\n\t\tchar c;\n\t\tString num = \"\";\n\t\tfor(int i = 0;i < str.length();i++){\n\t\t\tc = str.charAt(i);\n\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\tnum = num + c;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\tsc = sc + (Integer.valueOf(num)/2+1);\n\t\t\t\t\tnum = \"\";\n\t\t\t\t}\n\t\t\t\tsc = sc + c;\n\t\t\t}\n\t\t}\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tScanner in = new Scanner(System.in);\n\t\tfor(n = Integer.valueOf(in.nextLine());n > 0;n--){\n\t\t\tstr = in.nextLine();\n\t\t\tfs();\n\t\t\twhile(str.charAt(1) == '[')\n\t\t\t\tf();\n\t\t\tSystem.out.println(str.substring(1,str.length()-1));\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\n\npublic class Main {\n\t\n\tclass Tree {\n\t\tString s;\n\t\t\n\t\tpublic Tree(String s) {\n\t\t\tthis.s = s;\n\t\t}\n\t\t\n\t\tint parse() {return parse(s);}\n\t\t\n\t\tint parse(String str) {\n\t\t\tLinkedList<Integer> list = new LinkedList<Integer>();\n\t\t\tboolean flag = false;\n\t\t\tfor(int i=1; i<str.length(); i++) {\n\t\t\t\tint j=i+1;\n\t\t\t\tif(j >= str.length()) break;\n\t\t\t\tint cnt = 1;\n\t\t\t\tfor(; j<str.length(); j++) {\n\t\t\t\t\tif(str.charAt(j) == '[') cnt++;\n\t\t\t\t\tif(str.charAt(j) == ']') cnt--;\n\t\t\t\t\tif(cnt == 0) break;\n\t\t\t\t}\n\t\t\t\tif(str.charAt(i) == '[') {\n\t\t\t\t\t\n\t\t\t\t\tString sub = str.substring(i,j+1);\n\t\t\t\t\tif(sub.charAt(1) != '[') flag = true;\n\t\t\t\t\tlist.add(parse(sub));\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tString sub = str.substring(i,j);\n\t\t\t\t\tlist.add(Integer.parseInt(sub));\n\t\t\t\t}\n\t\t\t\ti=j;\n\t\t\t}\n\t\t\tif(list.size() == 1) return list.get(0);\n\t\t\tCollections.sort(list);\n\t\t\tint n = list.size()/2 + 1;\n\t\t\tint sum = 0;\n\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\tint e = list.pollFirst();\n\t\t\t\tif(flag) {\n\t\t\t\t\tsum += e/2 + 1;\n\t\t\t\t} else {\n\t\t\t\t\tsum += e;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\treturn sum;\n\t\t}\n\t}\n\t\n\tpublic Main() {\n\t\tScanner scanner = new Scanner(System.in);\n\t\twhile(scanner.hasNext()) {\n\t\t\tint n = scanner.nextInt();\n\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\tString s = scanner.next();\n\t\t\t\tint result = new Tree(s).parse();\n\t\t\t\tSystem.out.println(result);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tscanner.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main();\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport static java.lang.Math.*;\npublic class Main {\n\tfinal Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tnew Main().init();\n\t}\n\tchar[] c;\n\tint p=0;\n\tvoid init(){\n\t\tint N=sc.nextInt();\n\t\twhile(--N>=0){\n\t\t\tc=(sc.next()+\"#\").toCharArray();\n\t\t\tp=0;\n\t\t\tint ans=dfs();\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n\t\n\tint dfs(){\n//\t\tSystem.out.println(p+\" \"+c[p]);\n\t\tif(c[p]=='['){\n\t\t\tint ret=0;\n\t\t\t++p;\n\t\t\tif(c[p]=='['){\n\t\t\t\tArrayList<Integer> tmp=new ArrayList<Integer>();\n\t\t\t\twhile(c[p]=='['){\n\t\t\t\t\ttmp.add(dfs());\n//\t\t\t\t\t++p;\n//\t\t\t\t\tSystem.out.println(tmp+\" \"+p+\" \"+c[p]);\n\t\t\t\t}\n\t\t\t\tCollections.sort(tmp);\n\t\t\t\tfor(int i=0; i<(tmp.size()/2)+1; ++i)\tret+=tmp.get(i);\n\t\t\t\t++p;\n\t\t\t\treturn ret;\n\t\t\t}else if(Character.isDigit(c[p])){\n\t\t\t\tArrayList<Integer> tmp = new ArrayList<Integer>();\n\t\t\t\twhile(Character.isDigit(c[p])){\n\t\t\t\t\tint n=c[p]-'0';\n\t\t\t\t\t++p;\n\t\t\t\t\twhile(Character.isDigit(c[p])){\n\t\t\t\t\t\tn=n*10+(c[p]-'0');\n\t\t\t\t\t\t++p;\n\t\t\t\t\t}\n\t\t\t\t\ttmp.add(n);\n//\t\t\t\t\tSystem.out.println(\"NUMBER \"+n);\n\t\t\t\t\t++p;\n\t\t\t\t\tif(c[p]=='[')\t++p;\n\t\t\t\t}\n\t\t\t\tCollections.sort(tmp);\n//\t\t\t\tSystem.out.println(tmp);\n\t\t\t\tfor(int i=0; i<(tmp.size()/2)+1; ++i)\tret+=tmp.get(i)/2+1;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main {\n  Scanner sc;\n\n  void run() {\n    int n = ni();\n    for ( int i = 0; i < n; ++i ) {\n      L = 0;\n\n      String str = sc.next();\n      Pair<Node, Integer> p = make( str.toCharArray(), 0, 0 );\n      cal( p.f, 0 );\n\n      System.out.println( p.f.v );\n    }\n  }\n\n  class Pair<T, U> {\n    T f;\n    U s;\n\n    Pair(T t, U u) {\n      f = t;\n      s = u;\n    }\n  }\n\n  class Node {\n    int v;\n    LinkedList<Node> children;\n\n    Node() {\n      children = new LinkedList<Node>();\n    }\n\n    void add(Node node) {\n      children.add( node );\n    }\n  }\n\n  void cal(Node node, int depth) {\n//    debug(depth, L);\n    if ( depth == L - 2 ) {\n//      debug(\"\\tb:\", node.v);\n      node.v = node.children.getFirst().v;\n//      debug(\"\\tb:\", node.v);\n    } else if ( depth == L - 3 ) {\n      ArrayList<Integer> list = new ArrayList<Integer>();\n      for ( Node ch : node.children ) {\n        cal(ch, depth + 1);\n        list.add( ( ch.v + 1 ) / 2 );\n      }\n      Collections.sort( list );\n      int sum = 0;\n      for ( int i = 0; i < ( list.size() + 1 ) / 2; ++i ) {\n        sum += list.get( i );\n      }\n      node.v = sum;\n    } else {\n      ArrayList<Integer> list = new ArrayList<Integer>();\n      for ( Node ch : node.children ) {\n        cal(ch, depth + 1);\n        list.add( ch.v );\n      }\n      Collections.sort( list );\n      int sum = 0;\n      for ( int i = 0; i < ( list.size() + 1 ) / 2; ++i ) {\n        sum += list.get( i );\n      }\n      node.v = sum;\n    }\n  }\n\n  int L;\n\n  Pair<Node, Integer> make(char[] str, int idx, int depth) {\n    L = Math.max( L, depth + 1 );\n\n    Node node = new Node();\n\n    if ( str[ idx ] == '[' ) {\n      while (str[ ++idx ] != ']') {\n        Pair<Node, Integer> p = make( str, idx, depth + 1 );\n        node.add( p.f );\n        idx = p.s;\n      }\n    } else {\n      // numecal\n      ArrayList<Character> list = new ArrayList<Character>();\n      while (str[ idx ] != ']') {\n        list.add( str[ idx++ ] );\n      }\n      --idx;\n      int len = list.size();\n      char[] nums = new char[len];\n      for ( int i = 0; i < len; ++i ) {\n        nums[ i ] = list.get( i );\n      }\n      node.v = Integer.parseInt( new String( nums ) );\n    }\n\n    return new Pair<Node, Integer>( node, idx );\n  }\n\n  Main() {\n    sc = new Scanner( System.in );\n  }\n\n  int ni() {\n    return sc.nextInt();\n  }\n\n  public static void main(String[] args) {\n    new Main().run();\n  }\n\n  void debug(Object... os) {\n    System.err.println( Arrays.deepToString( os ) );\n  }\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n  \npublic class Main {\n    Scanner sc = new Scanner(System.in);\n  \n    public static void main(String[] args) {\n        new Main(); \n    }\n  \n    public Main() {\n        new aoj1149().doIt();\n    }\n    class aoj1149{\n    \tint dfs(int deep,String str){\n    \t\tint result = 0;\n    \t\tif (Character.isDigit(str.charAt(0))) {\n                return Integer.valueOf(str)/2 + 1;\n            }\n    \t\tArrayList<Integer> array = new ArrayList<Integer>();\n    \t\tint poss = 0;\n    \t\tint num = 0;\n    \t\tfor(int i = 0;i < str.length();i++){\n    \t\t\tif(str.charAt(i)== '['){\n    \t\t\t\tposs++;\n    \t\t\t}\n    \t\t\telse if(str.charAt(i) == ']'){\n    \t\t\t\tposs--;\n    \t\t\t}\n    \t\t\tif(poss == 0){\n    \t\t\t\tarray.add(dfs(deep+1,str.substring(num + 1, i)));\n    \t\t\t\tnum = i + 1;\n    \t\t\t}\n    \t\t}\n    \t\tCollections.sort(array);\n//    \t\tSystem.out.println(array.toString()+\" \"+deep);\n    \t\tfor(int i = 0;i < array.size()/2 + 1;i++){\n    \t\t\tresult = result + array.get(i);\n    \t\t}\n    \t\treturn result;\n    \t}\n        void doIt(){\n        \tint n = sc.nextInt();\n        \tfor(int i = 0;i < n;i++){\n        \t\tString str = sc.next();\n        \t\tSystem.out.println(dfs(0,str));\n        \t}\n        }\n     }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.BitSet;\nimport java.util.Collections;\nimport java.util.Comparator;\n\npublic class Main {\n\tpublic static void main(String[] args) throws NumberFormatException,\n\tIOException {\n\t\tContestScanner in = new ContestScanner();\n\t\tint n = in.nextInt();\n\t\tfor(int test=0; test<n; test++){\n\t\t\tchar[] line = in.nextToken().toCharArray();\n\t\t\tState.init();\n\t\t\tState state = new State(line);\n//\t\t\tSystem.out.println(state);\n\t\t\tstate.culc();\n\t\t\tSystem.out.println(state.need);\n\t\t}\n\t}\n\t\n}\n\nclass State implements Comparable<State>{\n\t// 選挙区情報\n\tArrayList<State> state = new ArrayList<State>();\n\tint num;\n\tint need; // この選挙区で勝つために必要な票数の最小値\n\tstatic int idx = 0;\n\tpublic State(char[] line){\n\t\tparser(line);\n\t}\n\t\n\tpublic State(int num){\n\t\tthis.num = num;\n\t}\n\t\n\tpublic static void init(){\n\t\tidx = 0;\n\t}\n\t\n\tpublic void parser(char[] line){\n\t\tif(idx == line.length) return;\n\t\tidx++;// [を飛ばす\n\t\tif(line[idx] == '['){\n\t\t\twhile(line[idx] == '['){\n\t\t\t\tstate.add(new State(line));\n\t\t\t}\n\t\t}else{\n\t\t\tint val = 0;\n\t\t\twhile('0' <= line[idx] && line[idx] <= '9'){\n\t\t\t\tval *= 10;\n\t\t\t\tval += line[idx]-'0';\n\t\t\t\tidx++;\n\t\t\t}\n\t\t\tnum = val;\n\t\t}\n\t\tidx++; // ]を飛ばす\n\t}\n\t\n\tpublic void culc(){\n\t\tif(num != 0){\n\t\t\tneed = (num+1)/2;\n\t\t\treturn;\n\t\t}\n\t\tfor(State st: state) st.culc();\n\t\tCollections.sort(state);\n\t\tfor(int i=0; i<=state.size()/2; i++){\n\t\t\tneed += state.get(i).need;\n\t\t}\n\t}\n\t\n\tpublic String toString(){\n\t\tStringBuilder sb = new StringBuilder();\n\t\tsb.append(\"[\");\n\t\tif(num == 0){\n\t\t\tfor(State st: state){\n\t\t\t\tsb.append(st.toString());\n\t\t\t}\n\t\t}else sb.append(num);\n\t\tsb.append(\"]\");\n\t\treturn sb.toString();\n\t}\n\t\n\t@Override\n\tpublic int compareTo(State o) {\n\t\treturn need - o.need;\n\t}\n}\n\nclass Node{\n\tint id;\n\tArrayList<Node> edge = new ArrayList<Node>();\n\tpublic Node(int id) {\n\t\tthis.id = id;\n\t}\n\tpublic void createEdge(Node node) {\n\t\tedge.add(node);\n\t}\n}\n\nclass MyComp implements Comparator<int[]> {\n\tfinal int idx;\n\tpublic MyComp(int idx){\n\t\tthis.idx = idx;\n\t}\n\tpublic int compare(int[] a, int[] b) {\n\t\treturn a[idx] - b[idx];\n\t}\n}\n\nclass Reverse implements Comparator<Integer> {\n\tpublic int compare(Integer arg0, Integer arg1) {\n\t\treturn arg1 - arg0;\n\t}\n}\n\n\nclass ContestWriter {\n\tprivate PrintWriter out;\n\n\tpublic ContestWriter(String filename) throws IOException {\n\t\tout = new PrintWriter(new BufferedWriter(new FileWriter(filename)));\n\t}\n\n\tpublic ContestWriter() throws IOException {\n\t\tout = new PrintWriter(System.out);\n\t}\n\n\tpublic void println(String str) {\n\t\tout.println(str);\n\t}\n\t\n\tpublic void println(Object obj) {\n\t\tout.println(obj);\n\t}\n\n\tpublic void print(String str) {\n\t\tout.print(str);\n\t}\n\t\n\tpublic void print(Object obj) {\n\t\tout.print(obj);\n\t}\n\n\tpublic void close() {\n\t\tout.close();\n\t}\n}\n\nclass ContestScanner {\n\tprivate BufferedReader reader;\n\tprivate String[] line;\n\tprivate int idx;\n\n\tpublic ContestScanner() throws FileNotFoundException {\n\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\tpublic ContestScanner(String filename) throws FileNotFoundException {\n\t\treader = new BufferedReader(new InputStreamReader(new FileInputStream(\n\t\t\t\tfilename)));\n\t}\n\n\tpublic String nextToken() throws IOException {\n\t\tif (line == null || line.length <= idx) {\n\t\t\tline = reader.readLine().trim().split(\" \");\n\t\t\tidx = 0;\n\t\t}\n\t\treturn line[idx++];\n\t}\n\t\n\tpublic String readLine() throws IOException{\n\t\treturn reader.readLine();\n\t}\n\n\tpublic long nextLong() throws IOException, NumberFormatException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic int nextInt() throws NumberFormatException, IOException {\n\t\treturn (int) nextLong();\n\t}\n\n\tpublic double nextDouble() throws NumberFormatException, IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int numCases = sc.nextInt();\n        for (int i = 0; i < numCases; i++) {\n            String input = sc.next();\n            new Main(input).solve();\n        }\n        sc.close();\n    }\n\n    String input;\n\n    char[] cs;\n    int ind;\n\n    public Main(String input) {\n        this.input = input;\n    }\n\n    void solve() {\n        cs = (input + \"$\").toCharArray();\n        int ans = readNode();\n        System.out.println(ans);\n    }\n\n    int readNode() {\n        if (cs[ind] == '[') {\n            ind++;\n            if (cs[ind] == '[') {\n                List<Integer> values = new ArrayList<Integer>();\n                while (cs[ind] == '[') {\n                    values.add(readNode());\n                }\n\n                Collections.sort(values);\n\n                int ret = 0;\n                for (int i = 0; i < values.size() / 2 + 1; ++i) {\n                    ret += values.get(i);\n                }\n\n                assert cs[ind] == ']';\n                ind++;\n                return ret;\n            } else if (isNum(cs[ind])) {\n                int ret = readNum() / 2 + 1;\n\n                assert cs[ind] == ']';\n                ind++;\n                return ret;\n            } else throw new IllegalStateException();\n        }\n        throw new IllegalStateException();\n    }\n\n    int readNum() {\n        int acc = 0;\n        while (isNum(cs[ind])) {\n            acc *= 10;\n            acc += cs[ind] - '0';\n            ind++;\n        }\n        return acc;\n    }\n\n    private static boolean isNum(char c) {\n        return '0' <= c && c <= '9';\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tint N = sc.nextInt();\n\t\twhile (N-- > 0) {\n\t\t\tString input = sc.next();\n\t\t\tSystem.out.println(dfs(input));\n\t\t}\n\t}\n\n\tint dfs(String seg) {\n\t\tif (Character.isDigit(seg.charAt(0))) {\n\t\t\treturn Integer.valueOf(seg) / 2 + 1;\n\t\t}\n\t\tint left = 0;\n\t\tint start = 0;\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < seg.length(); i++) {\n\t\t\tif (seg.charAt(i) == '[') {\n\t\t\t\tleft++;\n\t\t\t}\n\t\t\tif (seg.charAt(i) == ']') {\n\t\t\t\tleft--;\n\t\t\t}\n\t\t\tif (left == 0) {\n\t\t\t\tlist.add(dfs(seg.substring(start + 1, i)));\n\t\t\t\tstart = i + 1;\n\t\t\t}\n\t\t}\n\t\tint sum = 0;\n\t\tCollections.sort(list);\n\t\tfor (int i = 0; i < list.size() / 2 + 1; i++) {\n\t\t\tsum += list.get(i);\n\t\t}\n\t\treturn sum;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main \n{\n\tstatic Scanner scan = new Scanner(System.in);\n\n\tpublic static void main(String[] args) \n\t{\n\t\tint n = scan.nextInt();\n\t\t\n\t\tfor(int i = 0; i < n; i++)\n\t\t{\n\t\t\tnew DataSet();\n\t\t}\n\t}\n\t\n\t\n\tstatic class DataSet\n\t{\n\t\tString content;\n\t\tDistrict country = new District();\n\t\t\n\t\tpublic DataSet()\n\t\t{\n\t\t\tcontent = scan.next();\n\t\t\t\n\t\t\tbuildData();\n\t\t}\n\t\t\n\t\tvoid buildData()\n\t\t{\n\t\t\tDistrict[] lastDistrictOfDepth = new District[100];\n\t\t\tint startOfDistrict = 0;\n\t\t\tint endOfDistrict;\n\t\t\tint depth = -1;\n\t\t\t\n\t\t\tlastDistrictOfDepth[0] = country;\n\t\t\t\n//\t\t\tSystem.out.println(\"START\");\n\t\t\t\n\t\t\tfor(int i = 0; i < content.length(); i++)\n\t\t\t{\n\t\t\t\tString curChar = content.substring(i, i+1);\n\t\t\t\tDistrict districtToLoad;\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"[\"))\n\t\t\t\t{\n\t\t\t\t\tdepth += 1;\n\t\t\t\t\tstartOfDistrict = i+1;\n\t\t\t\t\t\n\t\t\t\t\tlastDistrictOfDepth[depth] = new District();\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"NEW DISTRICT OF DEPTH \" + depth);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"]\"))\n\t\t\t\t{\n//\t\t\t\t\tdistrictToLoad\n\t\t\t\t\tendOfDistrict = i-1;\n\t\t\t\t\t\n\t\t\t\t\tDistrict leDis = lastDistrictOfDepth[depth];\n\t\t\t\t\t\n\t\t\t\t\t//set pop\n\t\t\t\t\tif(leDis.children.size() == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tString districtPopS = content.substring(startOfDistrict, endOfDistrict+1);\n//\t\t\t\t\t\tSystem.out.println(districtPopS);\n\t\t\t\t\t\tint pop = Integer.parseInt(districtPopS);\n\t\t\t\t\t\tleDis.pop = pop;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n//\t\t\t\t\t\tSystem.out.println(\"C \" + leDis.children);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//add this district as a child to its parents\n\t\t\t\t\tif(depth > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tDistrict parent = lastDistrictOfDepth[depth-1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.children.add(leDis);\n\t\t\t\t\t\tleDis.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"\" + lastDistrictOfDepth[0].getMinVotes());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdepth -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tstatic class District\n\t{\n\t\tint pop;\n\t\tList<District> children = new ArrayList<District>();\n\t\tDistrict parent;\n\t\t\n\t\tpublic District()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic District(int pop)\n\t\t{\n\t\t\tthis.pop = pop;\n\t\t}\n\t\t\n\t\tboolean isLowest()\n\t\t{\n//\t\t\tSystem.out.println(\"Lowest? Children \" + children.size());\n\t\t\tif(children.size() == 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint getPopulation()\n\t\t{\n\t\t\tif(isLowest())\n\t\t\t{\n\t\t\t\treturn pop;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint getMinVotes()\n\t\t{\n//\t\t\treturn (int)(Math.floor(getPopulation()/2)) + 1;\n\t\t\tif(isLowest())\n\t\t\t{\n\t\t\t\treturn (getPopulation()/2)+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tList<District> tempChildren = new ArrayList<District>();\n\t\t\t\ttempChildren.addAll(children);\n\t\t\t\t\n\t\t\t\tint districtsNeeded = (children.size() / 2) + 1;\n\t\t\t\tint minVotes = 0;\n\t\t\t\tfor(int i = 0; i < districtsNeeded; i++)\n\t\t\t\t{\n\t\t\t\t\tint minPop = -1;\n\t\t\t\t\tDistrict smolDistrict = null;\n\t\t\t\t\t\n\t\t\t\t\t//pick out child with least pop\n\t\t\t\t\tfor(District child : tempChildren)\n\t\t\t\t\t{\n\t\t\t\t\t\tint lePop = child.getMinVotes();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(lePop < minPop || minPop == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminPop = lePop;\n\t\t\t\t\t\t\tsmolDistrict = child;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tminVotes += minPop;\n\t\t\t\t\ttempChildren.remove(smolDistrict);\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"Counting... [\" + i + \"] \" + minPop);\n//\t\t\t\t\tSystem.out.println(\"Size \" + tempChildren.size());\n\t\t\t\t}\n\t\t\t\t\n//\t\t\t\tSystem.out.println(\"MV \" + minVotes);\n\t\t\t\treturn minVotes;\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tstatic String str;\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint data = sc.nextInt();\n\t\t\n\t\tfor(int i=0; i<data; i++){\n\t\t\tstr = sc.next();\n\t\t\tSystem.out.println(DFS(0, str.length()-1));\n\t\t}\n\t}\n\n\tstatic int DFS(int left, int right){\n\t\tleft++;\n\t\tif(str.charAt(left)>='0'&&str.charAt(left)<='9'){\n\t\t\treturn Get_num(left);\n\t\t}\n\n\t\tint[] phase = new int[3333];\n\t\tint count = 0;\n\t\tint balance = 0;\n\n\t\tfor(int i=left; i<right; i++){\n\t\t\tif(str.charAt(i)=='['){\n\t\t\t\tbalance++;\n\t\t\t}else if(str.charAt(i)==']'){\n\t\t\t\tbalance--;\n\t\t\t\tif(balance==0){\n\t\t\t\t\tphase[count++] = DFS(left, i);\n\t\t\t\t\tleft = i + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tArrays.sort(phase, 0, count);\n\t\tint sum = 0;\n\n\t\tfor(int i=0; i<count/2+1; i++){\n\t\t\tsum += phase[i];\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tstatic int Get_num(int n){\n\t\tint temp = str.charAt(n) - '0';\n\t\twhile(str.charAt(n+1)>='0'&&str.charAt(n+1)<='9'){\n\t\t\ttemp = 10*temp + (str.charAt(++n) - '0');\n\t\t}\n\t\treturn temp/2+1;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(reader.readLine());\n\n        for(int j=0; j<n; j++){\n            String input = reader.readLine();\n            int i=0;\n            while(input.charAt(i) == '[') i++;\n\n            System.out.println(getMinCount(input.substring(i, input.length()-i), i));\n        }\n    }\n\n    public static int getMinCount(String input, int hierarchy){\n        if(hierarchy == 0){\n            return (Integer.parseInt(input)+2)/2;\n        }\n        String divider = \"\";\n        for(int i=0; i<hierarchy; i++){\n            divider = \"\\\\]\" + divider + \"\\\\[\";\n        }\n        String[] inputs = input.split(divider);\n        int[] mins = new int[inputs.length];\n        for(int i=0; i<inputs.length; i++){\n            mins[i] = getMinCount(inputs[i], hierarchy-1);\n        }\n        Arrays.sort(mins);\n        int sum = 0;\n        for(int i=0; i<(inputs.length+1)/2; i++){\n            sum += mins[i];\n        }\n        return sum;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nimport java.lang.ArrayIndexOutOfBoundsException;\nimport java.math.BigInteger;\n\n/**\n * @author yoshikyoto\n */\nclass Main {\n\tpublic static void main(String[] args) throws Exception{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tZone zone = new Zone(br.readLine());\n\t\t\tSystem.out.println(zone.solve());\n\t\t}\n\t}\n}\n\nclass Zone{\n\tArrayList<Zone> children;\n\tint value = 0;\n\t\n\tZone(String str){\n\t\tstr = str.substring(1, str.length() - 1);\n\t\t// System.out.println(str);\n\t\t\n\t\ttry{\n\t\t\t// 値だったらparseInt\n\t\t\tvalue = Integer.parseInt(str);\n\t\t\t// System.out.println(value);\n\t\t}catch(NumberFormatException e){\n\t\t\t// 値じゃなかったら木構造的にparse\n\t\t\tchildren = new ArrayList<Zone>();\n\t\t\tint depth = 0;\n\t\t\tint start = 0;\n\t\t\tfor (int i = 0; i < str.length(); i++) {\n\t\t\t\tswitch(str.charAt(i)){\n\t\t\t\tcase '[':\n\t\t\t\t\tif(depth == 0) start = i;\n\t\t\t\t\tdepth++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase ']':\n\t\t\t\t\tdepth--;\n\t\t\t\t\tif(depth == 0){\n\t\t\t\t\t\tchildren.add(new Zone(str.substring(start, i+1)));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint solve(){\n\t\t// valueは必ず奇数なのでこれでいい\n\t\tif(value != 0) return (value + 1) / 2;\n\t\t\n\t\tArrayList<Integer> arr = new ArrayList<Integer>();\n\t\tfor(Zone child : children){\n\t\t\tarr.add(child.solve());\n\t\t}\n\t\t\n\t\t// 過半数を返す\n\t\tCollections.sort(arr);\n\t\tint sum = 0;\n\t\tint maj = (arr.size() + 1) / 2; // arrのsizeはかならず奇数なので\n\t\tfor (int i = 0; i < maj; i++) {\n\t\t\tsum += arr.get(i);\n\t\t}\n\t\treturn sum;\n\t}\n}\n\n\n\nclass BinaryIndexedTree{\n    int n;\n    int[] bit;\n    BinaryIndexedTree(int n){\n        this.n = n;\n        bit = new int[n+1];\n    }\n    int sum(int i){\n        int sum = 0;\n        while(i > 0){\n            sum += bit[i];\n            i -= i & -i;\n        }\n        return sum;\n    }\n    void add(int i, int v){\n        while(i <= n){\n            bit[i] += v;\n            i += i & -i;\n        }\n    }\n}\n\n\n// --- ここから下はライブラリ ----------\n/**\n * MyUtil\n * @author yoshikyoto\n */\nclass MyUtil {\n\tpublic static int toInt(boolean[] a){\n\t\tint pow = 1, ret = 0, l = a.length;\n\t\tfor(int i = 0; i < l; i++){\n\t\t\tif(a[i]) ret += pow;\n\t\t\tpow *= 2;\n\t\t}\n\t\treturn ret;\n\t}\n\tstatic BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tpublic static int ins[];\n\tpublic static int[] readIntMap() throws IOException{return parseInt(readLine().split(\" \"));}\n\tpublic static int readIntMap(int i) throws Exception{\n\t\tif(i == 0) ins = readIntMap();\n\t\treturn ins[i];\n\t}\n\tpublic static int[][] readIntMap(int n, int m) throws IOException{\n\t\tint[][] ret = new int[n][];\n\t\tfor(int i = 0; i < n; i++) ret[i] = readIntMap();\n\t\treturn ret;\n\t}\n\tpublic static int[] readIntToMap(int n) throws IOException{\n\t\tint[] ret = new int[n];\n\t\tfor(int i = 0; i < n; i++) ret[i] = readInt();\n\t\treturn ret;\n\t}\n\tpublic static int[] readNoDistIntMap() throws IOException{\n\t\tString[] strs = readLine().split(\"\");\n\t\tint l = strs.length;\n\t\tint[] ret = new int[l-1];\n\t\tfor(int i = 1; i < l; i++)\n\t\t\tret[i-1] = parseInt(strs[i]);\n\t\treturn ret;\n\t}\n\tpublic static String readLine() throws IOException{return br.readLine();}\n\tpublic static int readInt() throws IOException{return Integer.parseInt(br.readLine());}\n\tpublic static int[] parseInt(String[] arr){\n\t\tint[] res = new int[arr.length];\n\t\tfor(int i = 0; i < arr.length; i++)res[i] = Integer.parseInt(arr[i]);\n\t\treturn res;\n\t}\n\tpublic static double[] parseDouble(String[] arr){\n\t\tdouble[] res = new double[arr.length];\n\t\tfor(int i = 0; i < arr.length; i++)res[i] = Double.parseDouble(arr[i]);\n\t\treturn res;\n\t}\n\tpublic static boolean[] parseBool(String[] arr){\n\t\tint[] t = parseInt(arr);\n\t\tboolean[] res = new boolean[t.length];\n\t\tfor(int i = 0; i < t.length; i++){\n\t\t\tif(t[i] == 1){res[i] = true;\n\t\t\t}else{res[i] = false;}\n\t\t}\n\t\treturn res;\n\t}\n\tpublic static int parseInt(Object o){\n\t\treturn Integer.parseInt(o.toString());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "// Hierarchical Democracy\nimport java.util.*;\n\npublic class Main {\n\tstatic int pos;\n\tstatic String str;\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint n = scanner.nextInt();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tpos = 0;\n\t\t\tstr = scanner.next();\n\t\t\tint result = formura();\n\t\t\tSystem.out.println(result);\n\t\t}\n\t\tscanner.close();\n\t}\n\n\tstatic int formura() {\n\t\tpos++;\n\t\tchar c = str.charAt(pos);\n\t\tint result = 0;\n\t\tif (c == '[') {\n\t\t\tList<Integer> numList = new ArrayList<Integer>();\n\t\t\twhile (str.charAt(pos) == '[') {\n\t\t\t\tnumList.add(formura());\n\t\t\t}\n\t\t\tCollections.sort(numList);\n\t\t\tfor (int i = 0; i < numList.size() / 2 + 1; i++) {\n\t\t\t\tresult += numList.get(i);\n\t\t\t}\n\t\t} else {\n\t\t\twhile (Character.isDigit(str.charAt(pos))) {\n\t\t\t\tresult *= 10;\n\t\t\t\tresult += Character.getNumericValue(str.charAt(pos));\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tresult = result / 2 + 1;\n\t\t}\n\t\tpos++;\n\t\treturn result;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main {\n  Scanner sc;\n\n  class Dance {\n    boolean u;\n    boolean r;\n    boolean d;\n    boolean l;\n\n    Dance() {\n      u = r = d = l = true;\n    }\n\n    void wall() {\n      u = r = d = l = false;\n    }\n\n    boolean adj(int n) {\n      switch ( n ) {\n      case 0:\n        return u;\n      case 1:\n        return r;\n      case 2:\n        return d;\n      case 3:\n        return l;\n      }\n      return false;\n    }\n\n    int[][] ofs = new int[][] { { 0, -1 }, { 1, 0 }, { 0, 1 }, { -1, 0 } };\n\n    int[] trans(int n) {\n      return ofs[ n ];\n    }\n  }\n\n  class Node {\n    int num;\n    ArrayList<Node> children;\n\n    Node() {\n      num = 0;\n      children = new ArrayList<Node>();\n    }\n\n    int get(int depth) {\n      if ( children.size() == 1 ) {\n        return children.get( 0 ).num;\n      }\n      // debug( \"get\", num, children.size() );\n      ArrayList<Integer> list = new ArrayList<Integer>();\n      for ( Node c : children ) {\n        list.add( c.get( depth - 1 ) );\n      }\n      Collections.sort( list );\n      for ( int i = 0; i < ( list.size() + 1 ) / 2; ++i ) {\n        if ( depth == 2 ) {\n          num += ( list.get( i ) + 1 ) / 2;\n        } else {\n          num += list.get( i );\n        }\n\n        // debug( \"+\", ( list.get( i ) + 1 ) / 2 );\n      }\n      // debug( num );\n      return num;\n    }\n\n    int length(int depth) {\n      if ( children.size() == 0 ) {\n        return depth;\n      } else {\n        return children.get( 0 ).length( depth + 1 );\n      }\n    }\n  }\n\n  boolean isNum(char c) {\n    return '0' <= c && c <= '9';\n  }\n\n  class Pair<T, U> {\n    T f;\n    U s;\n\n    Pair(T a, U b) {\n      f = a;\n      s = b;\n    }\n  }\n\n  Pair<Node, Integer> make(char[] str, int idx, int n, int depth) {\n    Node node = new Node();\n\n    char c = str[ idx ];\n    // debug( depth, \"::\", idx, \"/\", n, \":\", c );\n    if ( isNum( c ) ) {\n      ArrayList<Character> list = new ArrayList<Character>();\n      while (isNum( str[ idx ] )) {\n        list.add( str[ idx ] );\n        ++idx;\n      }\n      char[] dl = new char[list.size()];\n      for ( int i = 0; i < list.size(); ++i ) {\n        dl[ i ] = list.get( i );\n      }\n      node.num = Integer.parseInt( new String( dl ) );\n    } else {\n      // [\n      ++idx;\n      LinkedList<Node> list = new LinkedList<Node>();\n      // ]?????§??????\n      while (str[ idx ] != ']') {\n        Pair<Node, Integer> pair = make( str, idx, n, depth + 1 );\n        list.add( pair.f );\n        idx = pair.s;\n        // debug( \"res\", idx, str[ idx ], str[ idx ] != ']' );\n      }\n      node.children.addAll( list );\n\n      ++idx;\n    }\n\n    return new Pair<Node, Integer>( node, idx );\n  }\n\n  void run() {\n    int n = ni();\n    for ( int i = 0; i < n; ++i ) {\n      String str = sc.next();\n      Pair<Node, Integer> root = make( str.toCharArray(), 0, str.length(), 0 );\n      int depth = root.f.length( 0 );\n//      debug( depth );\n\n      System.out.println( root.f.get( depth ) );\n    }\n  }\n\n  Main() {\n    sc = new Scanner( System.in );\n  }\n\n  int ni() {\n    return sc.nextInt();\n  }\n\n  public static void main(String[] args) {\n    new Main().run();\n  }\n\n  void debug(Object... os) {\n    System.err.println( Arrays.deepToString( os ) );\n  }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tstatic String str;\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint data = sc.nextInt();\n\t\t\n\t\tfor(int i=0; i<data; i++){\n\t\t\tstr = sc.next();\n\t\t\tSystem.out.println(DFS(0, str.length()-1));\n\t\t}\n\t}\n\n\tstatic int DFS(int left, int right){\n\t\tleft++;\n\t\tif(str.charAt(left)>='0'&&str.charAt(left)<='9'){\n\t\t\treturn Get_num(left);\n\t\t}\n\n\t\tint[] phase = new int[3333];\n\t\tint count = 0;\n\t\tint balance = 0;\n\n\t\tfor(int i=left; i<right; i++){\n\t\t\tif(str.charAt(i)=='['){\n\t\t\t\tbalance++;\n\t\t\t}else if(str.charAt(i)==']'){\n\t\t\t\tbalance--;\n\t\t\t\tif(balance==0){\n\t\t\t\t\tphase[count++] = DFS(left, i);\n\t\t\t\t\tleft = i + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tArrays.sort(phase, 0, count);\n\t\tint sum = 0;\n\n\t\tfor(int i=0; i<count/2+1; i++){\n\t\t\tsum += phase[i];\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tstatic int Get_num(int n){\n\t\tint temp = 0;\n\t\twhile(str.charAt(n)>='0'&&str.charAt(n)<='9'){\n\t\t\ttemp = 10*temp + (str.charAt(n++) - '0');\n\t\t}\n\t\treturn temp/2+1;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main \n{\n\tstatic Scanner scan = new Scanner(System.in);\n\n\tpublic static void main(String[] args) \n\t{\n\t\tint n = scan.nextInt();\n\t\t\n\t\tfor(int i = 0; i < n; i++)\n\t\t{\n\t\t\tnew DataSet();\n\t\t}\n\t}\n\t\n\t\n\tstatic class DataSet\n\t{\n\t\tString content;\n\t\tDistrict country = new District();\n\t\t\n\t\tpublic DataSet()\n\t\t{\n\t\t\tcontent = scan.next();\n\t\t\t\n\t\t\tbuildData();\n\t\t}\n\t\t\n\t\tvoid buildData()\n\t\t{\n\t\t\tDistrict[] lastDistrictOfDepth = new District[100];\n\t\t\tint startOfDistrict = 0;\n\t\t\tint endOfDistrict;\n\t\t\tint depth = -1;\n\t\t\t\n\t\t\tlastDistrictOfDepth[0] = country;\n\t\t\t\n//\t\t\tSystem.out.println(\"START\");\n\t\t\t\n\t\t\tfor(int i = 0; i < content.length(); i++)\n\t\t\t{\n\t\t\t\tString curChar = content.substring(i, i+1);\n\t\t\t\tDistrict districtToLoad;\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"[\"))\n\t\t\t\t{\n\t\t\t\t\tdepth += 1;\n\t\t\t\t\tstartOfDistrict = i+1;\n\t\t\t\t\t\n\t\t\t\t\tlastDistrictOfDepth[depth] = new District();\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"NEW DISTRICT OF DEPTH \" + depth);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"]\"))\n\t\t\t\t{\n//\t\t\t\t\tdistrictToLoad\n\t\t\t\t\tendOfDistrict = i-1;\n\t\t\t\t\t\n\t\t\t\t\tDistrict leDis = lastDistrictOfDepth[depth];\n\t\t\t\t\t\n\t\t\t\t\t//set pop\n\t\t\t\t\tif(leDis.children.size() == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tString districtPopS = content.substring(startOfDistrict, endOfDistrict+1);\n//\t\t\t\t\t\tSystem.out.println(districtPopS);\n\t\t\t\t\t\tint pop = Integer.parseInt(districtPopS);\n\t\t\t\t\t\tleDis.pop = pop;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n//\t\t\t\t\t\tSystem.out.println(\"C \" + leDis.children);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//add this district as a child to its parents\n\t\t\t\t\tif(depth > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tDistrict parent = lastDistrictOfDepth[depth-1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.children.add(leDis);\n\t\t\t\t\t\tleDis.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"\" + lastDistrictOfDepth[0].getMinVotes());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdepth -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tstatic class District\n\t{\n\t\tint pop;\n\t\tList<District> children = new ArrayList<District>();\n\t\tDistrict parent;\n\t\t\n\t\tpublic District()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic District(int pop)\n\t\t{\n\t\t\tthis.pop = pop;\n\t\t}\n\t\t\n\t\tboolean isLowest()\n\t\t{\n//\t\t\tSystem.out.println(\"Lowest? Children \" + children.size());\n\t\t\tif(children.size() == 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint getMinVotes()\n\t\t{\n//\t\t\treturn (int)(Math.floor(getPopulation()/2)) + 1;\n\t\t\tif(isLowest())\n\t\t\t{\n\t\t\t\treturn (pop/2)+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tList<District> tempChildren = new ArrayList<District>();\n\t\t\t\ttempChildren.addAll(children);\n\t\t\t\t\n\t\t\t\tint districtsNeeded = (children.size() / 2) + 1;\n\t\t\t\tint minVotes = 0;\n\t\t\t\tfor(int i = 0; i < districtsNeeded; i++)\n\t\t\t\t{\n\t\t\t\t\tint minPop = -1;\n\t\t\t\t\tDistrict smolDistrict = null;\n\t\t\t\t\t\n\t\t\t\t\t//pick out child with least pop\n\t\t\t\t\tfor(District child : tempChildren)\n\t\t\t\t\t{\n\t\t\t\t\t\tint lePop = child.getMinVotes();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(lePop < minPop || minPop == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminPop = lePop;\n\t\t\t\t\t\t\tsmolDistrict = child;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tminVotes += minPop;\n\t\t\t\t\ttempChildren.remove(smolDistrict);\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"Counting... [\" + i + \"] \" + minPop);\n//\t\t\t\t\tSystem.out.println(\"Size \" + tempChildren.size());\n\t\t\t\t}\n\t\t\t\t\n//\t\t\t\tSystem.out.println(\"MV \" + minVotes);\n\t\t\t\treturn minVotes;\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString line = sc.next();\n\t\t\tint length = Integer.MAX_VALUE;\n\t\t\twhile (line.replaceFirst(\"^.*\\\\[([0-9]*)\\\\].*$\", \"$1\").length() != length) {\n\t\t\t\tString num = line.replaceFirst(\"^.*(\\\\[[0-9]*\\\\]).*$\", \"$1\");\n\t\t\t\tnum = num.replaceAll(\"[\\\\[\\\\]]\", \"\");\n\t\t\t\tint tmp = Integer.parseInt(num);\n\t\t\t\ttmp = (tmp + 1) / 2;\n\n\t\t\t\tline = line.replaceAll(\"\\\\[\" + num + \"\\\\]\", String.valueOf(tmp)\n\t\t\t\t\t\t+ \" \");\n\t\t\t\tlength = line.length();\n\t\t\t}\n\t\t\twhile (line.indexOf(\"[\") != -1) {\n\t\t\t\tString area = line.replaceFirst(\"^.*\\\\[([0-9 ]*)\\\\].*$\", \"$1\");\n\n\t\t\t\tString[] areaS = area.trim().split(\" \");\n\t\t\t\tint[] areaBox = new int[areaS.length];\n\t\t\t\tfor (int j = 0; j < areaBox.length; j++) {\n\t\t\t\t\tareaBox[j] = Integer.parseInt(areaS[j]);\n\t\t\t\t}\n\t\t\t\tArrays.sort(areaBox);\n\t\t\t\tint need = 0;\n\t\t\t\tfor (int j = 0; j < (areaBox.length + 1) / 2; j++) {\n\t\t\t\t\tneed += areaBox[j];\n\t\t\t\t}\n\t\t\t\tline = line.replaceAll(\"\\\\[\" + area + \"\\\\]\",\n\t\t\t\t\t\tString.valueOf(need) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println(line.trim());\n\t\t}\n\t\tsc.close();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static int MAX = 1000001;\n    \n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int TC = sc.nextInt();\n        String line = sc.nextLine();\n        \n        while (TC-- > 0) {\n            line = sc.nextLine();\n            District d = new District(getDistrictSubstring(line), 0);\n            System.out.println(d.getMinVotes());\n        }\n    }\n    \n    public static String getDistrictSubstring(String str) {\n        int count = 1;\n        for (int i = 1; i < str.length(); i++) {\n            if (str.charAt(i) == '[') {\n                count++;\n            }\n            else if (str.charAt(i) == ']') {\n                count--;\n                if (count == 0) {\n                    return str.substring(1, i);\n                }\n            }\n        }\n        return null;\n    }\n    \n    public static class District {\n        Vector<District> districts;\n        boolean isBase;\n        int num;\n        int level;\n        \n        public District(String str, int level) {\n            this.level = level;\n            if (Character.isDigit(str.charAt(0))) {\n                this.isBase = true;\n                this.num = Integer.parseInt(str, 10);\n            } else {\n                this.isBase = false;\n                districts = new Vector<District>();\n                parseDistricts(str);\n            }\n        }\n        \n        public void parseDistricts(String str) {\n            for (int i = 0; i < str.length(); ) {\n                String temp = getDistrictSubstring(str.substring(i));\n                districts.add(new District(temp, level + 1));\n                i += temp.length() + 2;\n            }\n        }\n        \n        public int getMinVotes() {\n            if (isBase) {\n                return num / 2 + 1;\n            }\n            int sz = districts.size();\n            int[] arr = new int[sz];\n            for (int i = 0; i < sz; i++) {\n                arr[i] = districts.get(i).getMinVotes();\n            }\n            Arrays.sort(arr);\n            int total = 0;\n            for (int i = 0; i < sz / 2 + 1; i++) {\n                total += arr[i];\n            }\n            return total;\n        }\n    }\n    \n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tFastScanner in = new FastScanner(System.in);\n\tPrintWriter out = new PrintWriter(System.out);\n\t\n\tint parseNumber(String s, int index) {\n\t\tint res = 0;\n\t\twhile (s.charAt(index) != ']') {\n\t\t\tres = res * 10 + s.charAt(index++) - '0';\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\t\n\tint culculate(ArrayList<Integer> stage) {\n\t\tint res = 0;\n\t\tInteger[] array = stage.toArray(new Integer[0]);\n\t\t\n\t\tArrays.sort(array);\n\t\t\n\t\t/*\n\t\tSystem.out.println(\"array info\");\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\tfor (int i = 0; i < array.length / 2 + 1; i++) {\n\t\t\tres += array[i] / 2 + 1;\n\t\t}\n\t\t\n\t\tstage.clear();\n\t\treturn res;\n\t}\n\t\n\tint culculate2(ArrayList<Integer> stage) {\n\t\tint res = 0;\n\t\tInteger[] array = stage.toArray(new Integer[0]);\n\t\t\n\t\tArrays.sort(array);\n\t\t\n\t\t/*\n\t\tSystem.out.println(\"array info_ cul2\");\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\t\n\t\tfor (int i = 0; i < array.length / 2 + 1; i++) {\n\t\t\tres += array[i];\n\t\t}\n\t\t\n\t\tstage.clear();\n\t\treturn res;\n\t}\n\t\n\tpublic void run() {\n\t\tint n = in.nextInt();\n\t\tfor (int caseN = 0; caseN < n; caseN++) {\n\t\t\tString s = in.next();\n\t\t\tint stageNum = 0;\n\t\t\t\n\t\t\tfor (stageNum = 0; ; stageNum++) {\n\t\t\t\tif (s.charAt(stageNum) != '[') break;\n\t\t\t}\n\t\t\tArrayList<Integer>[] stages = new ArrayList[stageNum+1];\n\t\t\tfor (int i = 0; i <= stageNum; i++)\n\t\t\t\tstages[i] = new ArrayList<Integer>();\n\t\t\t\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\t\t//System.out.println(\"cursor : \" + cur);\n\t\t\t\tif (s.charAt(i) == '[') cur++;\n\t\t\t\telse if (s.charAt(i) == ']') {\n\t\t\t\t\tif (cur+1 == stageNum)\n\t\t\t\t\t\tstages[cur].add(culculate(stages[cur+1]));\n\t\t\t\t\telse\n\t\t\t\t\t\tstages[cur].add(culculate2(stages[cur+1]));\n\t\t\t\t\tcur--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstages[cur].add(parseNumber(s, i));\n\t\t\t\t\twhile (s.charAt(i) != ']') i++;\n\t\t\t\t\tcur--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(stages[1].get(0));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void debug(Object... obj) {\n\t\tSystem.out.println(Arrays.deepToString(obj));\n\t}\n\n\tclass FastScanner {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t\t//stream = new FileInputStream(new File(\"dec.in\"));\n\n\t\t}\n\n\t\tint read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString line = sc.next();\n\t\t\tint length = Integer.MAX_VALUE;\n\t\t\twhile (line.replaceFirst(\"^.*\\\\[([0-9]*)\\\\].*$\", \"$1\").length() != length) {\n\t\t\t\tString num = line.replaceFirst(\"^.*(\\\\[[0-9]*\\\\]).*$\", \"$1\");\n\t\t\t\tnum = num.replaceAll(\"[\\\\[\\\\]]\", \"\");\n\t\t\t\tint tmp = Integer.parseInt(num);\n\t\t\t\ttmp = (tmp + 1) / 2;\n\n\t\t\t\tline = line.replaceAll(\"\\\\[\" + num + \"\\\\]\", String.valueOf(tmp)\n\t\t\t\t\t\t+ \" \");\n\t\t\t\tlength = line.length();\n\t\t\t}\n\t\t\twhile (line.indexOf(\"[\") != -1) {\n\t\t\t\tString area = line.replaceFirst(\"^.*\\\\[([0-9 ]*)\\\\].*$\", \"$1\");\n\n\t\t\t\tString[] areaS = area.trim().split(\" \");\n\t\t\t\tint[] areaBox = new int[areaS.length];\n\t\t\t\tfor (int j = 0; j < areaBox.length; j++) {\n\t\t\t\t\tareaBox[j] = Integer.parseInt(areaS[j]);\n\t\t\t\t}\n\t\t\t\tArrays.sort(areaBox);\n\t\t\t\tint need = 0;\n\t\t\t\tfor (int j = 0; j < (areaBox.length + 1) / 2; j++) {\n\t\t\t\t\tneed += areaBox[j];\n\t\t\t\t}\n\t\t\t\tline = line.replaceAll(\"\\\\[\" + area + \"\\\\]\",\n\t\t\t\t\t\tString.valueOf(need) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println(line);\n\t\t}\n\t\tsc.close();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic char[] ch;\n\tstatic int id;\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(int T = sc.nextInt(); T-- > 0; ) {\n\t\t\tch = sc.next().toCharArray();\n\t\t\tid = 0;\n\t\t\t\n\t\t\tSystem.out.println(exp());\n\t\t}\n\n\t\tsc.close();\n\t}\n\n\tstatic int exp() {\n\t\tid++;\n\t\tif(Character.isDigit(ch[id])) {\n\t\t\tint num = num();\n\t\t\tid++;\n\t\t\treturn num;\n\t\t}\n\t\t\n\t\tList<Integer> list = new ArrayList<Integer>();\n\n\t\tfor(;;) {\n\t\t\tif(ch[id] == '[') {\n\t\t\t\tlist.add(exp());\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tid++;\n\t\tCollections.sort(list);\n\t\tint num = 0;\n\t\tfor(int i = 0; i < (list.size() + 1) / 2; i++) {\n\t\t\tnum += list.get(i);\n\t\t}\n\t\t\n\t\treturn num;\n\t}\n\n\tstatic int num() {\n\t\tint x = 0;\n\t\twhile(Character.isDigit(ch[id])) {\n\t\t\tx *= 10;\n\t\t\tx += ch[id++] - '0';\n\t\t}\n\t\t\n\t\tx++;\n\t\treturn x / 2;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\n\n// Integral Rectangles\n// 2013/08/13\npublic class Main{\n\tScanner sc=new Scanner(System.in);\n\n\tString line;\n\n\tvoid run(){\n\t\tfor(int T=sc.nextInt(); T>0; T--){\n\t\t\tline=sc.next();\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve(){\n\t\tprintln(dfs(0, line.length())+\"\");\n\t}\n\n\tint dfs(int s, int t){\n\t\tif(line.charAt(s+1)!='['){\n\t\t\treturn Integer.parseInt(line.substring(s+1, t))/2+1;\n\t\t}\n\t\tint stack=0, left=0;\n\t\tArrayList<Integer> list=new ArrayList<Integer>();\n\t\tfor(int i=s+1; i<=t-1; i++){\n\t\t\tif(line.charAt(i)=='['){\n\t\t\t\tif(stack++==0){\n\t\t\t\t\tleft=i;\n\t\t\t\t}\n\t\t\t}else if(line.charAt(i)==']'){\n\t\t\t\tif(--stack==0){\n\t\t\t\t\tint right=i;\n\t\t\t\t\tlist.add(dfs(left, right));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsort(list);\n\t\tint sum=0;\n\t\tfor(int i : list.subList(0, list.size()/2+1)){\n\t\t\tsum+=i;\n\t\t}\n\t\treturn sum;\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nimport java.util.function.Function;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        for (int i = 0; i < n; i++) {\n            pw.println( solve(sc.next()) );\n        }\n        pw.flush();\n    }\n\n    static int solve(String S) {\n        return dfs(S, 0, S.length()-1).get();\n    }\n\n    // [u, v]\n    // S.substring(u, v+1)\n    static Tree dfs(String S, int u, int v) {\n        if( S.charAt(u+1) == '[' ) {\n            // [[?][?]]\n            // -> Composite([?], [?])\n            Composite comp = new Composite();\n            int L = 0;\n            int start = -1;\n            for (int i = u+1; i <= v-1; i++) {\n                if( S.charAt(i) == '[' ) {\n                    if( L == 0 ) {\n                        start = i;\n                    }\n                    L++;\n                } else if( S.charAt(i) == ']' ) {\n                    L--;\n                    if( L == 0 ) {\n                        Tree child = dfs(S, start, i);\n                        comp.add(child);\n                        start = -1;\n                    }\n                }\n            }\n            return comp;\n\n        } else {\n            // [n]\n            int n = Integer.parseInt(S.substring(u+1, v));\n            return new Leaf(n);\n        }\n    }\n\n    interface Tree {\n        int get();\n    }\n\n    static class Composite implements Tree {\n\n        List<Tree> childs = new ArrayList<>();\n\n        void add(Tree child) {\n            childs.add(child);\n        }\n\n\n        @Override\n        public int get() {\n            PriorityQueue<Integer> q = new PriorityQueue<>();\n            for (Tree child : childs) {\n                q.add(child.get());\n            }\n            int win = (childs.size()+1)/2;\n            int ret = 0;\n            for (int i = 0; i < win; i++) {\n                ret += q.poll();\n            }\n            return ret;\n        }\n    }\n\n    static class Leaf implements Tree {\n        int n;\n\n        public Leaf(int n) {\n            this.n = n;\n        }\n\n        @Override\n        public int get() {\n            return (n+1)/2;\n        }\n    }\n\n    @SuppressWarnings(\"unused\")\n    static class FastScanner {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        int[] nextIntArray(int n, int delta) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt() + delta;\n            return a;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n    }\n\n    static <A> void writeLines(A[] as, Function<A, String> f) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (A a : as) {\n            pw.println(f.apply(a));\n        }\n        pw.flush();\n    }\n\n    static void writeLines(int[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (int a : as) pw.println(a);\n        pw.flush();\n    }\n\n    static void writeLines(long[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (long a : as) pw.println(a);\n        pw.flush();\n    }\n\n    static int max(int... as) {\n        int max = Integer.MIN_VALUE;\n        for (int a : as) max = Math.max(a, max);\n        return max;\n    }\n\n    static int min(int... as) {\n        int min = Integer.MAX_VALUE;\n        for (int a : as) min = Math.min(a, min);\n        return min;\n    }\n\n    static void debug(Object... args) {\n        StringJoiner j = new StringJoiner(\" \");\n        for (Object arg : args) {\n            if (arg instanceof int[]) j.add(Arrays.toString((int[]) arg));\n            else if (arg instanceof long[]) j.add(Arrays.toString((long[]) arg));\n            else if (arg instanceof double[]) j.add(Arrays.toString((double[]) arg));\n            else if (arg instanceof Object[]) j.add(Arrays.toString((Object[]) arg));\n            else j.add(arg.toString());\n        }\n        System.err.println(j.toString());\n    }\n}\n\n"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main \n{\n\tstatic Scanner scan = new Scanner(System.in);\n\n\tpublic static void main(String[] args) \n\t{\n\t\tint n = scan.nextInt();\n\t\t\n\t\tfor(int i = 0; i < n; i++)\n\t\t{\n\t\t\tnew DataSet();\n\t\t}\n\t}\n\t\n\t\n\tstatic class DataSet\n\t{\n\t\tString content;\n\t\tDistrict country = new District();\n\t\t\n\t\tpublic DataSet()\n\t\t{\n\t\t\tcontent = scan.next();\n\t\t\t\n\t\t\tbuildData();\n\t\t}\n\t\t\n\t\tvoid buildData()\n\t\t{\n\t\t\tDistrict[] lastDistrictOfDepth = new District[100];\n\t\t\tint startOfDistrict = 0;\n\t\t\tint endOfDistrict;\n\t\t\tint depth = -1;\n\t\t\t\n\t\t\tlastDistrictOfDepth[0] = country;\n\t\t\t\n//\t\t\tSystem.out.println(\"START\");\n\t\t\t\n\t\t\tfor(int i = 0; i < content.length(); i++)\n\t\t\t{\n\t\t\t\tString curChar = content.substring(i, i+1);\n\t\t\t\tDistrict districtToLoad;\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"[\"))\n\t\t\t\t{\n\t\t\t\t\tdepth += 1;\n\t\t\t\t\tstartOfDistrict = i+1;\n\t\t\t\t\t\n\t\t\t\t\tlastDistrictOfDepth[depth] = new District();\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"NEW DISTRICT OF DEPTH \" + depth);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(curChar.equals(\"]\"))\n\t\t\t\t{\n//\t\t\t\t\tdistrictToLoad\n\t\t\t\t\tendOfDistrict = i-1;\n\t\t\t\t\t\n\t\t\t\t\tDistrict leDis = lastDistrictOfDepth[depth];\n\t\t\t\t\t\n\t\t\t\t\t//set pop\n\t\t\t\t\tif(leDis.children.size() == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tString districtPopS = content.substring(startOfDistrict, endOfDistrict+1);\n//\t\t\t\t\t\tSystem.out.println(districtPopS);\n\t\t\t\t\t\tint pop = Integer.parseInt(districtPopS);\n\t\t\t\t\t\tleDis.pop = pop;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n//\t\t\t\t\t\tSystem.out.println(\"C \" + leDis.children);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//add this district as a child to its parents\n\t\t\t\t\tif(depth > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tDistrict parent = lastDistrictOfDepth[depth-1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.children.add(leDis);\n\t\t\t\t\t\tleDis.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(\"\" + lastDistrictOfDepth[0].getMinVotes());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdepth -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tstatic class District\n\t{\n\t\tint pop;\n\t\tList<District> children = new ArrayList<District>();\n\t\tDistrict parent;\n\t\t\n\t\tpublic District()\n\t\t{\n\t\t}\n\t\t\n\t\tpublic District(int pop)\n\t\t{\n\t\t\tthis.pop = pop;\n\t\t}\n\t\t\n\t\tboolean isLowest()\n\t\t{\n//\t\t\tSystem.out.println(\"Lowest? Children \" + children.size());\n\t\t\tif(children.size() == 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint getMinVotes()\n\t\t{\n//\t\t\treturn (int)(Math.floor(getPopulation()/2)) + 1;\n\t\t\tif(isLowest())\n\t\t\t{\n\t\t\t\treturn (pop/2)+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tList<District> tempChildren = new ArrayList<District>();\n\t\t\t\ttempChildren.addAll(children);\n\t\t\t\t\n\t\t\t\tint districtsNeeded = (children.size() / 2) + 1;\n\t\t\t\tint minVotes = 0;\n\t\t\t\tfor(int i = 0; i < districtsNeeded; i++)\n\t\t\t\t{\n\t\t\t\t\tint minPop = -1;\n\t\t\t\t\tDistrict smolDistrict = null;\n\t\t\t\t\t\n\t\t\t\t\t//pick out child with least pop\n\t\t\t\t\tfor(District child : tempChildren)\n\t\t\t\t\t{\n\t\t\t\t\t\tint lePop = child.getMinVotes();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(lePop < minPop || minPop == -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminPop = lePop;\n\t\t\t\t\t\t\tsmolDistrict = child;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tminVotes += minPop;\n\t\t\t\t\ttempChildren.remove(smolDistrict);\n\t\t\t\t\t\n//\t\t\t\t\tSystem.out.println(\"Counting... [\" + i + \"] \" + minPop);\n//\t\t\t\t\tSystem.out.println(\"Size \" + tempChildren.size());\n\t\t\t\t}\n\t\t\t\t\n//\t\t\t\tSystem.out.println(\"MV \" + minVotes);\n\t\t\t\treturn minVotes;\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main\n{\n\tScanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args)\n\t{\n\t\tnew Main().run();\n\t}\n\n\tvoid run()\n\t{\n\t\tint n = Integer.parseInt(sc.nextLine());\n\t\twhile(n-- > 0)\n\t\t{\n\t\t\tString str = sc.nextLine();\n\t\t\tParser p = new Parser(str);\n\t\t\tint res = p.get().need();\n\t\t\tSystem.out.println(res);\n\t\t}\n\t}\n}\n\nclass Parser\n{\n\tString str;\n\tint index = 0;\n\n\tCalcuable c;\n\tDeque<Calcuable> stack = new ArrayDeque<>();\n\n\tpublic Parser(String s)\n\t{\n\t\tstr = s;\n\t\tc = new BlockGroup();\n\t\tstack.push(c);\n\t\tparse();\n\t}\n\n\tCalcuable get()\n\t{\n\t\treturn c;\n\t}\n\n\tvoid parse()\n\t{\n\t\twhile(true)\n\t\t{\n\t\t\tint r = read();\n\t\t\tif(r==-3) return;\n\t\t\tif(r == -1)\n\t\t\t{\n\t\t\t\tstack.pop();\n\t\t\t}\n\t\t\telse if(r == -2)\n\t\t\t{\n\t\t\t\tBlockGroup bg = new BlockGroup();\n\t\t\t\t((BlockGroup)stack.peek()).add(bg);\n\t\t\t\tstack.push(bg);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t((BlockGroup) stack.peek()).add(new Block(r));\n\t\t\t}\n\t\t}\n\t}\n\n\tint read()\n\t{\n\t\tif(index==str.length())\n\t\t{\n\t\t\treturn -3;\n\t\t}\n\t\telse if(str.charAt(index) == ']')\n\t\t{\n\t\t\tindex++;\n\t\t\treturn -1;\n\t\t}\n\t\telse if(str.charAt(index) == '[')\n\t\t{\n\t\t\tindex++;\n\t\t\treturn -2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint v = 0;\n\t\t\twhile(str.charAt(index) != ']')\n\t\t\t{\n\t\t\t\tv *= 10;\n\t\t\t\tv += (str.charAt(index) - '0');\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t}\n\n}\n\ninterface Calcuable\n{\n\tint need();\n}\n\nclass Block implements Calcuable\n{\n\tint num;\n\n\tpublic Block(int n)\n\t{\n\t\tnum = n;\n\t}\n\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn Integer.toString(num);\n\t}\n\n\t@Override\n\tpublic int need()\n\t{\n\t\treturn (num + 1) / 2;\n\t}\n}\n\nclass BlockGroup implements Calcuable\n{\n\tArrayList<Calcuable> blocks = new ArrayList<>();\n\n\tpublic BlockGroup()\n\t{\n\t}\n\n\tvoid add(Calcuable c)\n\t{\n\t\tblocks.add(c);\n\t}\n\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn blocks.toString();\n\t}\n\n\t@Override\n\tpublic int need()\n\t{\n\t\tint[] needs = new int[blocks.size()];\n\t\tfor(int i = 0; i < needs.length; i++)\n\t\t{\n\t\t\tneeds[i] = blocks.get(i).need();\n\t\t}\n\t\tArrays.sort(needs);\n\t\tint sum = 0;\n\t\tint lim = (needs.length + 1) / 2;\n\t\tfor(int i = 0; i < lim; i++)\n\t\t\tsum += needs[i];\n\t\treturn sum;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tnew Main().start();\n\t}\n\tvoid start(){\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tfor(int i= 0; i < n; i++){\n\t\t\tString s = in.next();\n\t\t\tNode node = null;\n\t\t\tNode parent = null;\n\t\t\tNode root = null;\n\t\t\tfor(int j =0; j < s.length(); j++){\n\t\t\t\tswitch(s.charAt(j)){\n\t\t\t\tcase '[':\n\t\t\t\t\tnode = new Node(parent);\n\t\t\t\t\tif(parent == null){\n\t\t\t\t\t\tparent = node;\n\t\t\t\t\t\troot = node;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tparent.children.add(node);\n\t\t\t\t\t\tnode.parent = parent;\n\t\t\t\t\t\tparent = node;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ']':\n\t\t\t\t\tparent = node.parent;\n\t\t\t\t\tnode =  node.parent;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tString ss = \"\"+s.charAt(j);\n\t\t\t\t\tj++;\n\t\t\t\t\twhile(s.charAt(j) != ']'){\n\t\t\t\t\t\tss += \"\"+s.charAt(j);\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tj--;\n\t\t\t\t\tnode.value = Integer.parseInt(ss);\n\t\t\t\t\tnode.isLeaf = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\troot.calcValue();\n\t\t\tSystem.out.println(root.value);\n\t\t}\n\t\tin.close();\n\t}\n\tNode getRoot(Node n){\n\t\twhile(n.parent != null){\n\t\t\tn = n.parent;\n\t\t}\n\t\treturn n;\n\t}\n\tclass Node implements Comparable<Node>{\n\t\tNode parent;\n\t\tArrayList<Node> children;\n\t\tint value;\n\t\tboolean isLeaf = false;\n\t\tNode(Node p){\n\t\t\tparent = p;\n\t\t\tchildren = new ArrayList<Node>();\n\t\t\tvalue = -1;\n\t\t}\n\t\tvoid calcValue(){\n\t\t\tif(!canCalc()){\n\t\t\t\tfor(Node n : children){\n\t\t\t\t\tn.calcValue();\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(children);\n//\t\t\tSystem.out.println(children.size());\n//\t\t\tfor(Node n : children){\n//\t\t\t\tSystem.out.print(n.value + \" \");\n//\t\t\t}\n//\t\t\tSystem.out.println(\"\");\n\t\t\tint a = 0;\n\t\t\tfor(int i = 0; i < children.size()/2+1; i++){\n\t\t\t\tif(children.get(i).isLeaf){\n\t\t\t\t\ta += children.get(i).value/2+1;\n\t\t\t\t}else{\n\t\t\t\t\ta += children.get(i).value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = a;\n\t\t}\n\t\tboolean canCalc(){\n\t\t\tfor(Node n : children){\n\t\t\t\tif(n.value == -1) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Node o) {\n\t\t\t// TODO ?????????????????????????????????????????????\n\t\t\treturn this.value - o.value;\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tchar[] c;\n\tint id;\n\n\tint exp() {\n\t\tif ('0' <= c[id] && c[id] <= '9') {\n\t\t\treturn num();\n\t\t}\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tid++;\n\t\twhile (c[id] != ']') {\n\t\t\tif (c[id] == '[') {\n\t\t\t\tlist.add(exp());\n\t\t\t} else {\n\t\t\t\tlist.add(num());\n\t\t\t}\n\t\t}\n\t\tid++;\n\t\tint count = list.size() + 1;\n\t\tcount /= 2;\n\t\tCollections.sort(list);\n\t\tint res = 0;\n\t\tfor (Integer I: list) {\n\t\t\tres += I;\n\t\t\tcount--;\n\t\t\tif (count == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tint num() {\n\t\tint res = 0;\n\t\twhile ('0' <= c[id] && c[id] <= '9') {\n\t\t\tres *= 10;\n\t\t\tres += c[id] - '0';\n\t\t\tid++;\n\t\t}\n\t\tres += 1;\n\t\tres /= 2;\n//\t\tSystem.out.println(res);\n\t\treturn res;\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\n\t\tint n = sc.nextInt();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tc = sc.next().toCharArray();\n\t\t\tid = 0;\n\t\t\tSystem.out.println(exp());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic char[] line;\n\tstatic int pos;\n\n\tpublic static void main(String[] args) {\n\t\tint N = sc.nextInt();\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\tline = sc.next().toCharArray();\n\t\t\tSystem.out.println(solve());\n\t\t}\n\t}\n\n\tstatic int solve() {\n\t\tpos = 0;\n\t\tNode root = parse();\n\t\treturn root.count();\n\t}\n\n\tstatic Node parse() {\n\t\t++pos;\n\t\tNode ret = new Node();\n\t\tif (line[pos] != '[') {\n\t\t\tret.num = line[pos++] - '0';\n\t\t\twhile (line[pos] != ']') {\n\t\t\t\tret.num *= 10;\n\t\t\t\tret.num += line[pos] - '0';\n\t\t\t\t++pos;\n\t\t\t}\n\t\t\t++pos;\n\t\t\treturn ret;\n\t\t}\n\t\twhile (line[pos] == '[') {\n\t\t\tret.child.add(parse());\n\t\t}\n\t\t++pos;\n\t\treturn ret;\n\t}\n\n\tstatic class Node {\n\t\tArrayList<Node> child = new ArrayList<Node>();\n\t\tint num;\n\n\t\tint count() {\n\t\t\tif (child.isEmpty()) return num / 2 + 1;\n\t\t\tint[] n = new int[child.size()];\n\t\t\tfor (int i = 0; i < child.size(); ++i) {\n\t\t\t\tn[i] = child.get(i).count();\n\t\t\t}\n\t\t\tArrays.sort(n);\n\t\t\tint ret = 0;\n\t\t\tfor (int i = 0; i <= child.size() / 2; ++i) {\n\t\t\t\tret += n[i];\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tString str;\n\tint s,e;\n\tString sc;\n\tString ms;\n\tString num;\n\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\n\tpublic boolean db(int g){\n\t\tint m = 0;\n\t\tint f = 0;\n\t\tfor(int i = g;i < str.length();i++){\n\t\t\tswitch(str.charAt(i)){\n\t\t\tcase '[':\n\t\t\t\tif(m > 0){\n\t\t\t\t\ts = i-1;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tm++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif(m < 0){\n\t\t\t\t\te = i+1;\n\t\t\t\t\tif(f > 0)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tm--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tm = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic void f(){\n\t\tsc = \"\";\n\t\tint k,b = 0;\n\t\te = 0;\n\t\tnum = \"\";\n\t\tchar c;\n\t\twhile(db(e)){\n\t\t\tlist.clear();\n\t\t\tms = str.substring(s,e);\n/*\t\t\tString[] si = ms.substring(2,ms.length()-2).split(\"\\\\]\\\\[\");\n\t\t\tfor(int i = 0;i < si.length;i++){\n\t\t\t\tlist.add(Integer.valueOf(si[i]));\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + k + \"]\";\n\t\t\ts = m.end();*/\n\t\t\tfor(int i = 0;i < ms.length();i++){\n\t\t\t\tc = ms.charAt(i);\n\t\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\t\tnum = num + c;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\t\tlist.add(Integer.valueOf(num));\n\t\t\t\t\t\tnum = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(b,s) + \"[\" + k + \"]\";\n\t\t\tb = e;\n\t\t}\n\t\tsc = sc + str.substring(b,str.length());\n\t\tstr = sc;\n\t}\n\t\n\tpublic void fs(){\n\t/*\tint s = 0;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tPattern p = Pattern.compile(\"\\\\[\\\\d*\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tms = m.group();\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + (Integer.valueOf(ms.substring(1,ms.length()-1))/2+1) + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;*/\n\t\tsc = \"\";\n\t\tchar c;\n\t\tnum = \"\";\n\t\tfor(int i = 0;i < str.length();i++){\n\t\t\tc = str.charAt(i);\n\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\tnum = num + c;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\tsc = sc + (Integer.valueOf(num)/2+1);\n\t\t\t\t\tnum = \"\";\n\t\t\t\t}\n\t\t\t\tsc = sc + c;\n\t\t\t}\n\t\t}\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tMain m = new Main();\n\t\tScanner in = new Scanner(System.in);\n\t\tfor(n = Integer.valueOf(in.nextLine());n > 0;n--){\n\t\t\tm.str = in.nextLine();\n\t\t\tm.fs();\n\t\t\twhile(m.str.charAt(1) == '[')\n\t\t\t\tm.f();\n\t\t\tSystem.out.println(m.str.substring(1,m.str.length()-1));\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tstatic String str;\n\tstatic int s,e;\n\t\n\tpublic static boolean db(int g){\n\t\tint m = 0;\n\t\tfor(int i = g;i < str.length();i++){\n\t\t\tswitch(str.charAt(i)){\n\t\t\tcase '[':\n\t\t\t\tif(m > 0)\n\t\t\t\t\ts = i-1;\n\t\t\t\tm++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif(m < 0){\n\t\t\t\t\te = i+1;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tm--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tm = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic static void f(){\n\t\tif(str.charAt(1) != '[')\n\t\t\treturn;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tint k;\n\t\ts = 0;\n\t\tString num = \"\";\n\t\tchar c;\n\t\twhile(db(e)){\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\tms = str.substring(s,e);\n/*\t\t\tString[] si = ms.substring(2,ms.length()-2).split(\"\\\\]\\\\[\");\n\t\t\tfor(int i = 0;i < si.length;i++){\n\t\t\t\tlist.add(Integer.valueOf(si[i]));\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + k + \"]\";\n\t\t\ts = m.end();*/\n\t\t\tfor(int i = 0;i < ms.length();i++){\n\t\t\t\tc = str.charAt(i);\n\t\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\t\tnum = num + c;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\t\tlist.add(Integer.valueOf(num));\n\t\t\t\t\t\tnum = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,e) + \"[\" + k + \"]\";\n\t\t}\n\t\tsc = sc + str.substring(e,str.length());\n\t\tstr = sc;\n\t\tf();\n\t}\n\t\n\tpublic static void fs(){\n\t/*\tint s = 0;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tPattern p = Pattern.compile(\"\\\\[\\\\d*\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tms = m.group();\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + (Integer.valueOf(ms.substring(1,ms.length()-1))/2+1) + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;*/\n\t\tString sc = \"\";\n\t\tchar c;\n\t\tString num = \"\";\n\t\tfor(int i = 0;i < str.length();i++){\n\t\t\tc = str.charAt(i);\n\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\tnum = num + c;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!num.isEmpty()){\n\t\t\t\t\tsc = sc + (Integer.valueOf(num)/2+1);\n\t\t\t\t\tnum = \"\";\n\t\t\t\t}\n\t\t\t\tsc = sc + c;\n\t\t\t}\n\t\t}\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tScanner in = new Scanner(System.in);\n\t\tfor(n = Integer.valueOf(in.nextLine());n > 0;n--){\n\t\t\tstr = in.nextLine();\n\t\t\tfs();\n\t\t\tf();\n\t\t\tSystem.out.println(str.substring(1,str.length()-1));\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tDeque<Integer> stack = new ArrayDeque<Integer>();\n\t\tint data = sc.nextInt();\n\t\tfor(int i=0; i<data; i++){\n\t\t\tString str = sc.next();\n\t\t\tint flag1 = 0, flag2 = 0, maxphase = 0;\n\t\t\tint[] count = new int[str.length()/3];\n\t\t\tfor(int j=0; j<str.length(); j++){\n\t\t\t\tif(str.charAt(j)>='0'&&str.charAt(j)<='9'){\n\t\t\t\t\tint temp = str.charAt(j) - '0';\n\t\t\t\t\twhile(str.charAt(j+1)>='0'&&str.charAt(j+1)<='9'){\n\t\t\t\t\t\ttemp = 10*temp + (str.charAt(++j) - '0');\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(temp);\n\t\t\t\t\tcount[-1*flag1]++;\n\t\t\t\t}else if(str.charAt(j)==']'){\n\t\t\t\t\tflag2--;\n\t\t\t\t\tif(flag2 != flag1){\n\t\t\t\t\t\tint[] phase = new int[count[-1*flag1+1]];\n\t\t\t\t\t\tint k = 0;\n\t\t\t\t\t\twhile(stack.peek()!=flag1+1){\n\t\t\t\t\t\t\tif(stack.peek()>0){\n\t\t\t\t\t\t\t\tphase[k++] = stack.pop();\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tArrays.sort(phase);\n\t\t\t\t\t\tint sum = 0;\n\t\t\t\t\t\tfor(k=0; k<=count[-1*flag1+1]/2; k++){\n\t\t\t\t\t\t\tif(-1*flag1+1==maxphase){\n\t\t\t\t\t\t\t\tsum += (phase[k]+1)/2;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tsum += phase[k];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstack.push(sum);\n\t\t\t\t\t\tcount[-1*flag1+1] = 0;\n\t\t\t\t\t\tcount[-1*flag1]++;\n\t\t\t\t\t}\n\t\t\t\t\tflag1++;\n\t\t\t\t}else{\n\t\t\t\t\tflag2 = flag1;\n\t\t\t\t\tstack.push(flag1--);\n\t\t\t\t\tif(maxphase<-1*flag1) maxphase = -1*flag1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(stack.pop());\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tFastScanner in = new FastScanner(System.in);\n\tPrintWriter out = new PrintWriter(System.out);\n\t\n\tint parseNumber(String s, int index) {\n\t\tint res = 0;\n\t\twhile (s.charAt(index) != ']') {\n\t\t\tres = res * 10 + s.charAt(index++) - '0';\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\t\n\tint culculate(ArrayList<Integer> stage) {\n\t\tint res = 0;\n\t\tInteger[] array = stage.toArray(new Integer[0]);\n\t\t\n\t\tArrays.sort(array);\n\t\t\n\t\t/*\n\t\tSystem.out.println(\"array info\");\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\tfor (int i = 0; i < array.length / 2 + 1; i++) {\n\t\t\tres += array[i] / 2 + 1;\n\t\t}\n\t\t\n\t\tstage.clear();\n\t\treturn res;\n\t}\n\t\n\tint culculate2(ArrayList<Integer> stage) {\n\t\tint res = 0;\n\t\tInteger[] array = stage.toArray(new Integer[0]);\n\t\t\n\t\tArrays.sort(array);\n\t\t\n\t\t/*\n\t\tSystem.out.println(\"array info_ cul2\");\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t*/\n\t\t\n\t\tfor (int i = 0; i < array.length / 2 + 1; i++) {\n\t\t\tres += array[i];\n\t\t}\n\t\t\n\t\tstage.clear();\n\t\treturn res;\n\t}\n\t\n\tpublic void run() {\n\t\tint n = in.nextInt();\n\t\tfor (int caseN = 0; caseN < n; caseN++) {\n\t\t\tString s = in.next();\n\t\t\tint stageNum = 0;\n\t\t\t\n\t\t\tfor (stageNum = 0; ; stageNum++) {\n\t\t\t\tif (s.charAt(stageNum) != '[') break;\n\t\t\t}\n\t\t\t/*\n\t\t\tArrayList<Integer>[] stages = new ArrayList[stageNum+1];\n\t\t\tfor (int i = 0; i <= stageNum; i++)\n\t\t\t\tstages[i] = new ArrayList<Integer>();\n\t\t\t\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\t\t//System.out.println(\"cursor : \" + cur);\n\t\t\t\tif (s.charAt(i) == '[') cur++;\n\t\t\t\telse if (s.charAt(i) == ']') {\n\t\t\t\t\tif (cur+1 == stageNum)\n\t\t\t\t\t\tstages[cur].add(culculate(stages[cur+1]));\n\t\t\t\t\telse\n\t\t\t\t\t\tstages[cur].add(culculate2(stages[cur+1]));\n\t\t\t\t\tcur--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstages[cur].add(parseNumber(s, i));\n\t\t\t\t\twhile (s.charAt(i) != ']') i++;\n\t\t\t\t\tcur--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(stages[1].get(0));\n\t\t\t*/\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void debug(Object... obj) {\n\t\tSystem.out.println(Arrays.deepToString(obj));\n\t}\n\n\tclass FastScanner {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t\t//stream = new FileInputStream(new File(\"dec.in\"));\n\n\t\t}\n\n\t\tint read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tString s;\n\tint id;\n\t\n\tint A(){\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\n\t\twhile(true){\n\t\t\tif(s.charAt(id)=='['){\n\t\t\t\tid++;\n\t\t\t\tlist.add(A());\n\t\t\t\tid++;\n\t\t\t}else{\n\t\t\t\tint t = id;\n\t\t\t\twhile(48<=s.codePointAt(id) && s.codePointAt(id)<=57) id++;\n\t\t\t\tint u = Integer.valueOf(s.substring(t,id));\n\t\t\t\tlist.add(u/2+1);\n\t\t\t}\n\t\t\tif(id==s.length() || s.charAt(id)==']') break;\n\t\t}\n\t\t\n\t\tCollections.sort(list);\n\t\tint sum = 0;\n\t\tfor(int i=0;i<=list.size()/2;i++) sum += list.get(i);\n\t\treturn sum;\n\t}\n\n\tvoid solve(){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint n = sc.nextInt();\n\t\tfor(int i=0;i<n;i++){\n\t\t\ts = sc.next();\n\t\t\tid = 0;\n\t\t\tSystem.out.println(A());\n\t\t}\n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Stack;\nimport java.util.ArrayList;\nimport java.util.Vector;\nimport java.nio.charset.Charset;\nimport java.util.StringTokenizer;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintStream;\nimport java.io.OutputStream;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.UncheckedIOException;\nimport java.util.List;\nimport java.io.Writer;\nimport java.io.BufferedReader;\nimport java.util.Comparator;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author mikit\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        LightScanner in = new LightScanner(inputStream);\n        LightWriter out = new LightWriter(outputStream);\n        HierarchicalDemocracy solver = new HierarchicalDemocracy();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class HierarchicalDemocracy {\n        public void solve(int testNumber, LightScanner in, LightWriter out) {\n            int qNum = in.ints();\n            for (int query = 0; query < qNum; query++) {\n                String s = in.nextLine();\n                Stack<HierarchicalDemocracy.Token> stack = new Stack<>();\n                List<HierarchicalDemocracy.Token> list = new ArrayList<>();\n                StringBuilder dbg = new StringBuilder();\n\n                int depth = 0;\n                long num = 0;\n                for (int i = 0; i < s.length(); i++) {\n                    dbg.append((char) ('0' + depth));\n                    //System.out.println(\"q=\" + query + \"size=\" + stack.size());\n                    char c = s.charAt(i);\n                    if ('0' <= c && c <= '9') {\n                        num *= 10;\n                        num += (c - '0');\n                    } else if (c == '[') {\n                        depth++;\n                    } else {\n                        if (num > 0) {\n                            stack.push(new HierarchicalDemocracy.Token(depth, (num + 1) / 2));\n                            num = 0;\n                            depth--;\n                        } else {\n                            list.clear();\n                            while (!stack.isEmpty() && stack.peek().depth == depth + 1) {\n                                list.add(stack.pop());\n                            }\n                            list.sort(Comparator.comparing(t -> t.num));\n\n                            if (list.size() % 2 == 0 || list.size() <= 1) {\n                                System.out.println(\"list=\" + list);\n                                System.out.println(\"stack=\" + stack);\n                                System.out.println(\"depth=\" + depth + \" i=\" + i);\n                                System.out.println(s);\n                                System.out.println(dbg);\n                                throw new RuntimeException(\"Inner size is \" + list.size());\n                            }\n\n                            long ans = 0;\n                            for (int j = 0; j < (list.size() + 1) / 2; j++) {\n                                ans += list.get(j).num;\n                            }\n\n                            stack.push(new HierarchicalDemocracy.Token(depth, ans));\n                            depth--;\n                        }\n                        //System.out.println(\"NEW TOKEN depth=\"+stack.peek().depth+\" ans=\"+stack.peek().num);\n                    }\n                }\n                if (stack.size() != 1 || stack.peek().depth != 1) {\n                    System.out.println(stack);\n                    throw new RuntimeException(\"i=\" + query + \" \" + stack.size());\n                }\n                out.ansln(stack.peek().num);\n            }\n        }\n\n        private static class Token {\n            private final int depth;\n            private final long num;\n\n            public Token(int depth, long num) {\n                this.depth = depth;\n                this.num = num;\n            }\n\n            public String toString() {\n                return \"Token{\" +\n                        \"depth=\" + depth +\n                        \", num=\" + num +\n                        '}';\n            }\n\n        }\n\n    }\n\n    static class LightWriter implements AutoCloseable {\n        private final Writer out;\n        private boolean autoflush = false;\n        private boolean breaked = true;\n\n        public LightWriter(Writer out) {\n            this.out = out;\n        }\n\n        public LightWriter(OutputStream out) {\n            this(new BufferedWriter(new OutputStreamWriter(out, Charset.defaultCharset())));\n        }\n\n        public LightWriter print(char c) {\n            try {\n                out.write(c);\n                breaked = false;\n            } catch (IOException ex) {\n                throw new UncheckedIOException(ex);\n            }\n            return this;\n        }\n\n        public LightWriter print(String s) {\n            try {\n                out.write(s, 0, s.length());\n                breaked = false;\n            } catch (IOException ex) {\n                throw new UncheckedIOException(ex);\n            }\n            return this;\n        }\n\n        public LightWriter ans(String s) {\n            if (!breaked) {\n                print(' ');\n            }\n            return print(s);\n        }\n\n        public LightWriter ans(long l) {\n            return ans(Long.toString(l));\n        }\n\n        public LightWriter ansln(long... n) {\n            for (long n1 : n) {\n                ans(n1).ln();\n            }\n            return this;\n        }\n\n        public LightWriter ln() {\n            print(System.lineSeparator());\n            breaked = true;\n            if (autoflush) {\n                try {\n                    out.flush();\n                } catch (IOException ex) {\n                    throw new UncheckedIOException(ex);\n                }\n            }\n            return this;\n        }\n\n        public void close() {\n            try {\n                out.close();\n            } catch (IOException ex) {\n                throw new UncheckedIOException(ex);\n            }\n        }\n\n    }\n\n    static class LightScanner {\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public LightScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n        }\n\n        public String string() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new UncheckedIOException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new UncheckedIOException(e);\n                }\n            }\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public int ints() {\n            return Integer.parseInt(string());\n        }\n\n    }\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tString str;\n\tint s,e;\n\tString sc;\n\tString ms;\n\tint num;\n\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\n\tpublic boolean db(int g){\n\t\tint m = 0;\n\t\tint f = 0;\n\t\tfor(int i = g;i < str.length();i++){\n\t\t\tswitch(str.charAt(i)){\n\t\t\tcase '[':\n\t\t\t\tif(m > 0){\n\t\t\t\t\ts = i-1;\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tm++;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif(m < 0){\n\t\t\t\t\te = i+1;\n\t\t\t\t\tif(f > 0)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tm--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tm = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic void f(){\n\t\tsc = \"\";\n\t\tint k,b = 0;\n\t\te = 0;\n\t\tnum = 0;\n\t\tchar c;\n\t\twhile(db(e)){\n\t\t\tlist.clear();\n\t\t\tms = str.substring(s,e);\n/*\t\t\tString[] si = ms.substring(2,ms.length()-2).split(\"\\\\]\\\\[\");\n\t\t\tfor(int i = 0;i < si.length;i++){\n\t\t\t\tlist.add(Integer.valueOf(si[i]));\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + k + \"]\";\n\t\t\ts = m.end();*/\n\t\t\tfor(int i = 0;i < ms.length();i++){\n\t\t\t\tc = ms.charAt(i);\n\t\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\t\tnum = 10*num + (c-'0');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(num > 0){\n\t\t\t\t\t\tlist.add(num);\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tk = 0;\n\t\t\tfor(int i = 0;i < list.size()/2+1;i++){\n\t\t\t\tk += list.get(i);\n\t\t\t}\n\t\t\tsc = sc + str.substring(b,s) + \"[\" + k + \"]\";\n\t\t\tb = e;\n\t\t}\n\t\tsc = sc + str.substring(b,str.length());\n\t\tstr = sc;\n\t}\n\t\n\tpublic void fs(){\n\t/*\tint s = 0;\n\t\tString sc = \"\";\n\t\tString ms;\n\t\tPattern p = Pattern.compile(\"\\\\[\\\\d*\\\\]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tms = m.group();\n\t\t\tsc = sc + str.substring(s,m.start()) + \"[\" + (Integer.valueOf(ms.substring(1,ms.length()-1))/2+1) + \"]\";\n\t\t\ts = m.end();\n\t\t}\n\t\tsc = sc + str.substring(s,str.length());\n\t\tstr = sc;*/\n\t\tsc = \"\";\n\t\tchar c;\n\t\tnum = 0;\n\t\tfor(int i = 0;i < str.length();i++){\n\t\t\tc = str.charAt(i);\n\t\t\tif(0 <= c-'0' && c-'0' <= 9){\n\t\t\t\tnum = 10*num + (c-'0');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(num > 0){\n\t\t\t\t\tsc = sc + (num/2+1);\n\t\t\t\t\tnum = 0;\n\t\t\t\t}\n\t\t\t\tsc = sc + c;\n\t\t\t}\n\t\t}\n\t\tstr = sc;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tMain m = new Main();\n\t\tScanner in = new Scanner(System.in);\n\t\tfor(n = Integer.valueOf(in.nextLine());n > 0;n--){\n\t\t\tm.str = in.nextLine();\n\t\t\tm.fs();\n\t\t\twhile(m.str.charAt(1) == '[')\n\t\t\t\tm.f();\n\t\t\tSystem.out.println(m.str.substring(1,m.str.length()-1));\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tMain p = new Main();\n\t}\n\n\tpublic Main() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n =sc.nextInt();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tString s = sc.next();\n\t\t\tsolve(s);\n\t\t}\n\t\t\n\t}\n\n\tpublic void solve(String s) {\n\t\tSystem.out.println(rec(s));\n\t}\n\n\tprivate int rec(String s) {\n\t\tif(s.indexOf(']') == s.length()-1)\n\t\t\treturn Integer.parseInt(s.substring(1, s.length()-1))/2+1;\n\t\t\n\t\tint last = 0;\n\t\tint cur = 0;\n\t\t\n\t\tArrayList<Integer> l = new ArrayList<Integer>(); \n\t\tfor(int i=1;i<s.length()-1;i++){\n\t\t\tif(s.charAt(i)=='[')\n\t\t\t\tcur++;\n\t\t\telse if(s.charAt(i)==']')\n\t\t\t\tcur--;\n\t\t\t\n\t\t\tif(cur==0){\n\t\t\t\tl.add(rec(s.substring(last+1, i+1)));\n\t\t\t\tlast = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tCollections.sort(l);\n\t\tint ret = 0;\n\t\tfor(int i=0;i<l.size()/2+1;i++)\n\t\t\tret += l.get(i);\n//\t\tSystem.out.println(s+\" \"+ret+\" \"+l.size());\n\t\treturn ret;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nimport java.lang.ArrayIndexOutOfBoundsException;\nimport java.math.BigInteger;\n\nimport topcoder.SRM660Div2.PrivateD2party;\n\n/**\n * @author yoshikyoto\n */\nclass Main {\n\tpublic static void main(String[] args) throws Exception{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tZone zone = new Zone(br.readLine());\n\t\t\tSystem.out.println(zone.solve());\n\t\t}\n\t}\n}\n\nclass Zone{\n\tArrayList<Zone> children;\n\tint value = 0;\n\t\n\tZone(String str){\n\t\tstr = str.substring(1, str.length() - 1);\n\t\t// System.out.println(str);\n\t\t\n\t\ttry{\n\t\t\t// 値だったらparseInt\n\t\t\tvalue = Integer.parseInt(str);\n\t\t\t// System.out.println(value);\n\t\t}catch(NumberFormatException e){\n\t\t\t// 値じゃなかったら木構造的にparse\n\t\t\tchildren = new ArrayList<Zone>();\n\t\t\tint depth = 0;\n\t\t\tint start = 0;\n\t\t\tfor (int i = 0; i < str.length(); i++) {\n\t\t\t\tswitch(str.charAt(i)){\n\t\t\t\tcase '[':\n\t\t\t\t\tif(depth == 0) start = i;\n\t\t\t\t\tdepth++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase ']':\n\t\t\t\t\tdepth--;\n\t\t\t\t\tif(depth == 0){\n\t\t\t\t\t\tchildren.add(new Zone(str.substring(start, i+1)));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint solve(){\n\t\t// valueは必ず奇数なのでこれでいい\n\t\tif(value != 0) return (value + 1) / 2;\n\t\t\n\t\tArrayList<Integer> arr = new ArrayList<Integer>();\n\t\tfor(Zone child : children){\n\t\t\tarr.add(child.solve());\n\t\t}\n\t\t\n\t\t// 過半数を返す\n\t\tCollections.sort(arr);\n\t\tint sum = 0;\n\t\tint maj = (arr.size() + 1) / 2; // arrのsizeはかならず奇数なので\n\t\tfor (int i = 0; i < maj; i++) {\n\t\t\tsum += arr.get(i);\n\t\t}\n\t\treturn sum;\n\t}\n}\n\n\n\nclass BinaryIndexedTree{\n    int n;\n    int[] bit;\n    BinaryIndexedTree(int n){\n        this.n = n;\n        bit = new int[n+1];\n    }\n    int sum(int i){\n        int sum = 0;\n        while(i > 0){\n            sum += bit[i];\n            i -= i & -i;\n        }\n        return sum;\n    }\n    void add(int i, int v){\n        while(i <= n){\n            bit[i] += v;\n            i += i & -i;\n        }\n    }\n}\n\n\n// --- ここから下はライブラリ ----------\n/**\n * MyUtil\n * @author yoshikyoto\n */\nclass MyUtil {\n\tpublic static int toInt(boolean[] a){\n\t\tint pow = 1, ret = 0, l = a.length;\n\t\tfor(int i = 0; i < l; i++){\n\t\t\tif(a[i]) ret += pow;\n\t\t\tpow *= 2;\n\t\t}\n\t\treturn ret;\n\t}\n\tstatic BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tpublic static int ins[];\n\tpublic static int[] readIntMap() throws IOException{return parseInt(readLine().split(\" \"));}\n\tpublic static int readIntMap(int i) throws Exception{\n\t\tif(i == 0) ins = readIntMap();\n\t\treturn ins[i];\n\t}\n\tpublic static int[][] readIntMap(int n, int m) throws IOException{\n\t\tint[][] ret = new int[n][];\n\t\tfor(int i = 0; i < n; i++) ret[i] = readIntMap();\n\t\treturn ret;\n\t}\n\tpublic static int[] readIntToMap(int n) throws IOException{\n\t\tint[] ret = new int[n];\n\t\tfor(int i = 0; i < n; i++) ret[i] = readInt();\n\t\treturn ret;\n\t}\n\tpublic static int[] readNoDistIntMap() throws IOException{\n\t\tString[] strs = readLine().split(\"\");\n\t\tint l = strs.length;\n\t\tint[] ret = new int[l-1];\n\t\tfor(int i = 1; i < l; i++)\n\t\t\tret[i-1] = parseInt(strs[i]);\n\t\treturn ret;\n\t}\n\tpublic static String readLine() throws IOException{return br.readLine();}\n\tpublic static int readInt() throws IOException{return Integer.parseInt(br.readLine());}\n\tpublic static int[] parseInt(String[] arr){\n\t\tint[] res = new int[arr.length];\n\t\tfor(int i = 0; i < arr.length; i++)res[i] = Integer.parseInt(arr[i]);\n\t\treturn res;\n\t}\n\tpublic static double[] parseDouble(String[] arr){\n\t\tdouble[] res = new double[arr.length];\n\t\tfor(int i = 0; i < arr.length; i++)res[i] = Double.parseDouble(arr[i]);\n\t\treturn res;\n\t}\n\tpublic static boolean[] parseBool(String[] arr){\n\t\tint[] t = parseInt(arr);\n\t\tboolean[] res = new boolean[t.length];\n\t\tfor(int i = 0; i < t.length; i++){\n\t\t\tif(t[i] == 1){res[i] = true;\n\t\t\t}else{res[i] = false;}\n\t\t}\n\t\treturn res;\n\t}\n\tpublic static int parseInt(Object o){\n\t\treturn Integer.parseInt(o.toString());\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "/**\n * Hierarchical Democracy\n */\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\nimport static java.lang.Integer.parseInt;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\n\t\t\tTree tree = new Tree();\n\t\t\tDeque<Node> stack = new ArrayDeque<Node>();\n\t\t\tString num = \"\";\n\n\t\t\tline = br.readLine();\n\t\t\tfor (char c : line.toCharArray()) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tNode node = new Node();\n\t\t\t\t\t\tif (!stack.isEmpty()) {\n\t\t\t\t\t\t\tnode.parent = stack.peek();\n\t\t\t\t\t\t\tstack.peek().children.add(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tif (num.length() > 0) {\n\t\t\t\t\t\t\tstack.peek().nums.add(parseInt(num));\n\t\t\t\t\t\t\tnum = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stack.size() != 1) {\n\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttree.root = stack.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tnum += c;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(tree.solve());\n\t\t}\n\t} //end main\n}\n\nclass Tree {\n\tNode root;\n\n\tint solve() {\n\t\tDeque<Node> stack = new ArrayDeque<Node>();\n\t\tstack.push(root);\n\t\twhile (!stack.isEmpty()) {\n\t\t\tNode node = stack.pop();\n\t\t\tif (node.children.isEmpty()) {\n\t\t\t\tnode.min = node.nums.get(0) / 2 + 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//\n\t\t\tif (node.min == Node.NIL) {\n\t\t\t\tnode.min = 0;\n\t\t\t\tstack.push(node);\n\t\t\t\tfor (Node child : node.children) {\n\t\t\t\t\tstack.push(child);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (Node child : node.children) {\n\t\t\t\t\tnode.nums.add(child.min);\n\t\t\t\t}\n\t\t\t\tCollections.sort(node.nums);\n\t\t\t\tfor (int i = 0; i < node.nums.size() / 2 + 1; i++) {\n\t\t\t\t\tnode.min += node.nums.get(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn root.min;\n\t}\n}\n\nclass Node {\n\tstatic final int NIL = -1;\n\tNode parent;\n\tList<Node> children = new ArrayList<Node>();\n\tList<Integer> nums = new ArrayList<Integer>();\n\tint min = NIL;\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    static String line;\n    static int p;\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for (int i = 0; i < n; i++) {\n            line = sc.next();\n            p = 0;\n            System.out.println(dfs());\n        }\n    }\n\n    static int dfs() {\n        ArrayList<Integer> points = new ArrayList<>();\n        while (true) {\n            if (p == line.length() || line.charAt(p) == ']') {\n                break;\n            }\n            if (line.charAt(p) == '[') {\n                p ++;\n                points.add(dfs());\n                p ++;\n            } else {\n                int n = 0;\n                while (\"1234567890\".contains(line.charAt(p) + \"\")) {\n                    n = n * 10 + Integer.parseInt(line.charAt(p) + \"\");\n                    p ++;\n                }\n                return n / 2 + 1;\n            }\n        }\n        Collections.sort(points);\n        int sum = 0;\n        for (int i = 0; i < points.size() / 2 + 1; i++) {\n            sum += points.get(i);\n        }\n        return sum;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic enum Main\n{\n\t_;\n\tScanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args)\n\t{\n\t\t_.run();\n\t}\n\n\tvoid run()\n\t{\n\t\tint n = Integer.parseInt(sc.nextLine());\n\t\twhile(n-- > 0)\n\t\t{\n\t\t\tString str = sc.nextLine();\n\t\t\tParser p = new Parser(str);\n\t\t\tint res = p.get().need();\n\t\t\tSystem.out.println(res);\n\t\t}\n\t}\n}\n\nclass Parser\n{\n\tString str;\n\tint index = 0;\n\n\tCalcuable c;\n\tDeque<Calcuable> stack = new ArrayDeque<>();\n\n\tpublic Parser(String s)\n\t{\n\t\tstr = s;\n\t\tc = new BlockGroup();\n\t\tstack.push(c);\n\t\tparse();\n\t}\n\n\tCalcuable get()\n\t{\n\t\treturn c;\n\t}\n\n\tvoid parse()\n\t{\n\t\twhile(true)\n\t\t{\n\t\t\tint r = read();\n\t\t\tif(r==-3) return;\n\t\t\tif(r == -1)\n\t\t\t{\n\t\t\t\tstack.pop();\n\t\t\t}\n\t\t\telse if(r == -2)\n\t\t\t{\n\t\t\t\tBlockGroup bg = new BlockGroup();\n\t\t\t\t((BlockGroup)stack.peek()).add(bg);\n\t\t\t\tstack.push(bg);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t((BlockGroup) stack.peek()).add(new Block(r));\n\t\t\t}\n\t\t}\n\t}\n\n\tint read()\n\t{\n\t\tif(index==str.length())\n\t\t{\n\t\t\treturn -3;\n\t\t}\n\t\telse if(str.charAt(index) == ']')\n\t\t{\n\t\t\tindex++;\n\t\t\treturn -1;\n\t\t}\n\t\telse if(str.charAt(index) == '[')\n\t\t{\n\t\t\tindex++;\n\t\t\treturn -2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint v = 0;\n\t\t\twhile(str.charAt(index) != ']')\n\t\t\t{\n\t\t\t\tv *= 10;\n\t\t\t\tv += (str.charAt(index) - '0');\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t}\n\n}\n\ninterface Calcuable\n{\n\tint need();\n}\n\nclass Block implements Calcuable\n{\n\tint num;\n\n\tpublic Block(int n)\n\t{\n\t\tnum = n;\n\t}\n\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn Integer.toString(num);\n\t}\n\n\t@Override\n\tpublic int need()\n\t{\n\t\treturn (num + 1) / 2;\n\t}\n}\n\nclass BlockGroup implements Calcuable\n{\n\tArrayList<Calcuable> blocks = new ArrayList<>();\n\n\tpublic BlockGroup()\n\t{\n\t}\n\n\tvoid add(Calcuable c)\n\t{\n\t\tblocks.add(c);\n\t}\n\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn blocks.toString();\n\t}\n\n\t@Override\n\tpublic int need()\n\t{\n\t\tint[] needs = new int[blocks.size()];\n\t\tfor(int i = 0; i < needs.length; i++)\n\t\t{\n\t\t\tneeds[i] = blocks.get(i).need();\n\t\t}\n\t\tArrays.sort(needs);\n\t\tint sum = 0;\n\t\tint lim = (needs.length + 1) / 2;\n\t\tfor(int i = 0; i < lim; i++)\n\t\t\tsum += needs[i];\n\t\treturn sum;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tfor(;n>0;n--) {\n\t\t\tl = sc.next() + \"..\"; p = 0;\n\t\t\tSystem.out.println(solve());\n\t\t}\n\t}\n\t\n\tString l; int p;\n\tchar next() {\n\t\treturn l.charAt(p++);\n\t}\n\t\n\tint solve() {\n\t\tchar c = next();\n\t\tif(c != '[') return val();\n\t\tArrayList<Integer> l = new ArrayList<Integer>();\n\t\twhile(c == '[') {\n\t\t\tl.add(solve());\n\t\t\tc = next();\n\t\t}\n//\t\tif(c != ']') debug(\"err\");\n\t\tint n = l.size();\n\t\tsort(l);\n\t\tint ret = 0;\n\t\tfor(int i=0;i<n/2+1;i++) ret += l.get(i);\n//\t\tdebug(ret, l);\n\t\treturn ret;\n\t}\n\t\n\tint val() {\n\t\tp--;\n\t\tchar c = next();\n\t\tString v = \"\";\n\t\twhile( '0' <= c && c <= '9' ) {\n\t\t\tv += c; c = next();\n\t\t}\n\t\treturn Integer.valueOf(v) / 2 + 1;\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.awt.geom.*;\n\npublic class Main{\n\tString s;\n\tint pos;\n\tint INF = 1 << 29;\n\t\n\tpublic void doit(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint dataset = sc.nextInt();\n\t\twhile(dataset-- > 0){\n\t\t\ts = sc.next() + \"#\";\n\t\t\tpos = 0;\n\t\t\tint res = dfs();\n\t\t\tSystem.out.println(res);\n\t\t}\n\t}\n\n\tprivate int dfs(){\n\t\tif(Character.isDigit(s.charAt(pos))){\n\t\t\tint num = s.charAt(pos++) - '0';\n\t\t\twhile(Character.isDigit(s.charAt(pos))){\n\t\t\t\tnum = num * 10 + s.charAt(pos++) - '0';\n\t\t\t}\n\t\t\treturn num / 2 + 1;\n\t\t}\n\t\telse{\n\t\t\tint min = INF;\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\twhile(s.charAt(pos) == '['){\n\t\t\t\tpos++;\n\t\t\t\tint res = dfs();\n\t\t\t\tpos++;\n\t\t\t\tlist.add(res);\n\t\t\t}\n\t\t\tif(list.size() == 0){\n\t\t\t\treturn min;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tCollections.sort(list);\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int i = 0; i < list.size() / 2 + 1;i++){\n\t\t\t\t\tsum += list.get(i);\n\t\t\t\t}\n\t\t\t\treturn sum;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void debug(Object... o) {\n\t\tSystem.out.println(\"debug = \" + Arrays.deepToString(o));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().doit();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n\tnew Main().run();\n    }\n    Scanner sc = new Scanner(System.in);\n    ArrayList<Data> data;\n    boolean debug = false;\n    \n    //global hensuu except for templete\n    char[] lines;\n\n    //method except for templete\n    int rec(int left, int right){\n\tPriorityQueue<Integer> votes = new PriorityQueue<Integer>(10, new Comparator<Integer>(){\n\t\tpublic int compare(Integer a, Integer b){\n\t\t    return (int)(a - b);\n\t\t}\n\t    });\n\n\tint l = left, r = left;\n\tif(lines[l]-'0' >=0 && lines[l]-'0'<=9) return getNumber(left, right);\n\n\tint num = 0;\n\tfor(int i=left; i<=right; i++){\n\t    r = i;\n\t    if(lines[i]==']') num--;\n\t    if(lines[i]=='[') num++;\n\t    if(num==0){\n\t\tvotes.add(rec(l+1, r-1));\n\t\tl = i+1;\n\t\tnum = 0;\n\t    }\n\t}\n\n\tint res = 0;\n\tint size = votes.size()/2 + 1;\n\tfor(int i=0; i<size; i++) res += votes.poll();\n\treturn res;\n    }\n\n    int getNumber(int left, int right){\n\tint res = 0;\n\tint ten = 1;\n\tfor(int i=right; i>=left; i--){\n\t    res += (lines[i] - '0') * ten;\n\t    ten *= 10;\n\t}\n\treturn res/2+1;\n    }\n\n\n    void run() {\n\tinput();\n\tfor(int i=0;i<data.size();i++){\n\t    if(debug){\n\t\tSystem.out.println(\"--------\");\n\t\tdata.get(i).print_line();\n\t    }\n\t    solve(i);\n\t    data.get(i).print_ans();\n\t}\n    }\n    \n    void solve(int dataset){\n\tString ans = \"\";\n\tData d = data.get(dataset);\n\tString line = d.line;\n\tlines = line.toCharArray();\n\n\tans = Integer.toString(rec(0, lines.length-1));\n\n\tdata.get(dataset).set_ans(ans);\n    }\n\n    void input(){\n\tdata = new ArrayList<Data>();\n\tint n = sc.nextInt();\n\tfor(int i=0; i<n; i++){\n\t    String s = sc.next();\n\t    data.add(new Data(s));\n\t}\n    }\n}\n\nclass Data{\n    String line;\n    String ans;\n\n    Data(String line){\n\tthis.line = line;\n    }\n    \n    void set_ans(String a){ans=a;}\n    void print_line(){System.out.println(\"line = \"+line);}\n    void print_ans(){System.out.println(ans);}\n}\n    "
  },
  {
    "language": "C#",
    "code": "using System.Collections.Generic;\nusing System.Linq;\nusing System.Text.RegularExpressions;\nusing System;\n\npublic class Hello\n{\n    public static void Main()\n    {\n        var n = int.Parse(Console.ReadLine().Trim());\n        for (int i = 0; i < n; i++)\n        {\n            var s = Console.ReadLine().Trim();\n            s = s.Replace(\"[\", \"a\");\n            s = s.Replace(\"]\", \"b\");\n            var ma = Regex.Matches(s, @\"a\\d+b\");\n            foreach (Match x in ma)\n            {\n                var a0 = x.Value.Substring(1, x.Length - 2);\n                var a = int.Parse(a0);\n                var b = (a + 1) / 2;\n                s = s.Replace(x.Value, b.ToString() + \",\");\n            }\n            s = s.Replace(\",b\", \"b\");\n            getAns(s);\n        }\n    }\n    static void getAns(string s)\n    {\n        while (true)\n        {\n            var ma = Regex.Matches(s, @\"a[0-9,]+b\");\n            if (ma.Count == 0) break;\n            foreach (Match x in ma)\n            {\n                var a0 = x.Value.Substring(1, x.Length - 2).Split(',');\n                var a1 = new List<int>();\n                for (int i = 0; i < a0.Length; i++) a1.Add(int.Parse(a0[i]));\n                a1.Sort();\n                var a2 = 0;\n                for (int i = 0; i < (a1.Count() + 1) / 2; i++) a2 += a1[i];\n                s = s.Replace(x.Value, a2.ToString()+ \",\");\n                s = s.Replace(\",b\", \"b\");\n            }\n        }\n        s = s.Replace(\",\", \"\");\n        Console.WriteLine(s);\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Linq;\nusing System.Collections.Generic;\nusing Debug = System.Diagnostics.Trace;\nusing SB = System.Text.StringBuilder;\nusing Number = System.Int64;\nnamespace Program\n{\n    public class Solver\n    {\n        public void Solve()\n        {\n            var T = ri;\n            for (int _ = 0; _ < T; _++)\n            {\n                var s = sc.ScanLine();\n                Debug.WriteLine(s);\n                var ptr = 0;\n                Console.WriteLine(dfs(s, ref ptr));\n\n            }\n        }\n        int dfs(string s, ref int ptr)\n        {\n            ptr++;\n            var a = new List<int>();\n            if (char.IsDigit(s[ptr]))\n            {\n                var v = 0;\n                while (char.IsDigit(s[ptr]))\n                {\n                    v = v * 10 + s[ptr++] - '0';\n                }\n                ptr++;\n                return (v + 1) / 2;\n            }\n            while (s[ptr] == '[')\n                a.Add(dfs(s, ref ptr));\n            ptr++;\n            a.Sort();\n            return a.Take((a.Count + 1) / 2).Sum();\n\n        }\n        const long INF = 1L << 60;\n        //int[] dx = { -1, 0, 1, 0 };\n        //int[] dy = { 0, 1, 0, -1 };\n        //*\n        int ri { get { return sc.Integer(); } }\n        long rl { get { return sc.Long(); } }\n        double rd { get { return sc.Double(); } }\n        string rs { get { return sc.Scan(); } }\n        //*/\n\n        public IO.StreamScanner sc = new IO.StreamScanner(Console.OpenStandardInput());\n        static T[] Enumerate<T>(int n, Func<int, T> f) { var a = new T[n]; for (int i = 0; i < n; ++i) a[i] = f(i); return a; }\n        static public void Swap<T>(ref T a, ref T b) { var tmp = a; a = b; b = tmp; }\n    }\n}\n\n#region main\nstatic class Ex\n{\n    static public string AsString(this IEnumerable<char> ie) { return new string(ie.ToArray()); }\n    static public string AsJoinedString<T>(this IEnumerable<T> ie, string st = \" \")\n    {\n        return string.Join(st, ie.Select(x => x.ToString()).ToArray());\n        //return string.Join(st, ie);\n    }\n    static public void Main()\n    {\n        Console.SetOut(new System.IO.StreamWriter(Console.OpenStandardOutput()) { AutoFlush = false });\n        var solver = new Program.Solver();\n        solver.Solve();\n        Console.Out.Flush();\n    }\n}\n#endregion\n#region Ex\nnamespace Program.IO\n{\n    using System.IO;\n    using System.Text;\n    using System.Globalization;\n    public class Printer: StreamWriter\n    {\n        public override IFormatProvider FormatProvider { get { return CultureInfo.InvariantCulture; } }\n        public Printer(Stream stream) : base(stream, new UTF8Encoding(false, true)) { }\n    }\n    public class StreamScanner\n    {\n        public StreamScanner(Stream stream) { str = stream; }\n        public readonly Stream str;\n        private readonly byte[] buf = new byte[1024];\n        private int len, ptr;\n        public bool isEof = false;\n        public bool IsEndOfStream { get { return isEof; } }\n        private byte read()\n        {\n            if (isEof) return 0;\n            if (ptr >= len) { ptr = 0; if ((len = str.Read(buf, 0, 1024)) <= 0) { isEof = true; return 0; } }\n            return buf[ptr++];\n        }\n        public char Char() { byte b = 0; do b = read(); while ((b < 33 || 126 < b) && !isEof); return (char)b; }\n\n        public string Scan()\n        {\n            var sb = new StringBuilder();\n            for (var b = Char(); b >= 33 && b <= 126; b = (char)read())\n                sb.Append(b);\n            return sb.ToString();\n        }\n        public string ScanLine()\n        {\n            var sb = new StringBuilder();\n            for (var b = Char(); b != '\\n' && b != 0; b = (char)read())\n                if (b != '\\r') sb.Append(b);\n            return sb.ToString();\n        }\n        public long Long() { return isEof ? long.MinValue : long.Parse(Scan()); }\n        public int Integer() { return isEof ? int.MinValue : int.Parse(Scan()); }\n        public double Double() { return isEof ? double.NaN : double.Parse(Scan(), CultureInfo.InvariantCulture); }\n    }\n}\n#endregion\n"
  },
  {
    "language": "JavaScript",
    "code": "function saiki(str,flag){\n   while(true){\n      if(/\\[{2}\\d.*?\\]{2}/.test(str)){\n         str=str.replace(/\\[{2}\\d.*?\\]{2}/,function(s){\n               var d =s.slice(2,-2).split(\"][\").map(Number);\n               d.sort((a,b)=> a-b);\n               var sum=0;\n               for(var i=0;i<Math.ceil(d.length/2);i++){\n                  if(flag) sum+=Math.floor(d[i]/2)+1;\n                  else sum+=Math.floor(d[i]);\n               }\n               return \"(\"+sum+\")\";\n            });\n      }else break;\n   }\n   str=str.replace(/\\(/g,\"[\");\n   str=str.replace(/\\)/g,\"]\");\n   return str;\n }\n  \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\n\narr.forEach(str=>{\n   str=saiki(str,true);\n   while(/\\[\\[/.test(str))str=saiki(str,false);\n    console.log(str.replace(/\\[|\\]/g,\"\"));\n});\n"
  },
  {
    "language": "Ruby",
    "code": "#!/bin/ruby\n$str=\"\"\n$x=0\ndef rec\n  if $str[$x]=='[' then\n    a=[]\n    $x+=1\n    while $str[$x]!=']'\n      a<< rec\n    end\n    $x+=1\n    return a.sort[0...a.size/2+1].reduce(&:+)\n  else\n    d=0\n    while $str[$x]!=']'\n      d=d*10+$str[$x].ord-'0'.ord\n      $x+=1\n    end\n    return d/2+1\n  end\nend\n    \nn=gets.to_i\nn.times do\n  $str=gets\n  $x=0\n  puts rec\nend"
  },
  {
    "language": "Ruby",
    "code": "def solve(s)\n    if s[0] =~ /[0-9]/\n        return (s.to_i / 2) + 1\n    else\n        level = 0\n        i = 0\n        while s[i] == \"[\"\n            level += 1\n            i += 1\n        end\n        st = \"]\" * level\n        sub = Array.new\n        while true\n            t = s.index(st)\n            break if t == nil\n            sub.push(solve(s[1...(t + level - 1)]))\n            s = s[(t + level)...s.length]\n        end\n        sub.sort!\n        ret = 0\n        0.upto(sub.size / 2) do |i|\n            ret += sub[i]\n        end\n        return ret\n    end\nend\nn = gets.to_i\nn.times do\n    s = gets.chomp\n    p solve(s[1...(s.length - 1)])\nend"
  },
  {
    "language": "Ruby",
    "code": "def bottom(arr)\n  arr.sort[0, arr.size / 2 + 1].map{ |n| n / 2 + 1}.reduce(:+)\nend\n\ndef top(arr)\n  arr.sort[0, arr.size / 2 + 1].reduce(:+)\nend\n\ndef aggregate(arr, isbottom)\n  group = []\n  arr.map { |v, g|\n    ret = nil\n    if g == 0\n      group << v\n    else\n      unless group.empty?\n        ret = [isbottom ? bottom(group << v) : top(group << v), g]\n      else\n        ret = [v, g]\n      end\n      group = []\n    end\n    ret\n  }.compact\nend\n\ngets.to_i.times do\n  str = gets.chomp.scan(/\\[|\\]|\\d+/)\n  gap = str.map.with_index{ |s, i| [s.to_i, i] if s != '[' && s != ']' }.compact\n  stage = gap.transpose[0].zip(gap.transpose[1].each_cons(2).map{ |a, b| (b - a) / 2 - 1})\n  stage = aggregate(stage, true)\n\n  while stage.size > 1\n    stage = stage.map{ |_, g|  g ? [_, g - 1] : [_, g] }\n    stage = aggregate(stage, false)\n  end\n  p stage[0][0]\nend"
  },
  {
    "language": "Ruby",
    "code": "def calc(s)\n  res = []\n  loop do\n    if s[$pos] == '['\n      $pos += 1\n      res << calc(s)\n    elsif s[$pos] == ']'\n      break\n    else  # num\n      x = ''\n      while s[$pos] != ']'\n        x += s[$pos]\n        $pos += 1\n      end\n      return x.to_i / 2 + 1\n    end\n    $pos += 1\n  end\n  res.sort.first(res.size/2+1).reduce(:+)\nend\n\ngets.to_i.times do\n  $pos = 1\n  puts calc(gets)\nend"
  },
  {
    "language": "Ruby",
    "code": "### subroutines\n\ndef parse_num(str)\n  num = 0\n  while str[$pos] >= '0' && str[$pos] <= '9'\n    num = num * 10 + str[$pos].to_i\n    $pos += 1\n  end\n  num\nend\n\ndef parse(str)\n  return 'N/A' if str[$pos] != '['\n  $pos += 1\n\n  if str[$pos] >= '0' && str[$pos] <= '9'\n    num = parse_num(str)\n    $pos += 1\n    return (num + 1) / 2\n  end\n\n  ds = []\n  nds = 0\n  while str[$pos] == '['\n    ds << parse(str)\n    nds += 1\n  end\n  $pos += 1\n  \n  ds.sort[0..(nds / 2)].inject(:+)\nend\n\n### main\n\nn = gets.to_i\n\nn.times do\n  str = gets.strip\n  $pos = 0\n  \n  puts parse(str)\nend"
  },
  {
    "language": "Ruby",
    "code": "def f(a)\n    if a.size == 1\n        a[0] / 2 + 1\n    else\n        a.map{|b| f(b)}.sort[0..a.size/2].inject(:+)\n    end\nend\nn = gets.to_i\nn.times {\n    s = gets.chomp.gsub!(/\\](?=\\[)/, '],')\n    p f(eval(s))\n}"
  },
  {
    "language": "PHP",
    "code": "<?php\n$N=trim(fgets(STDIN));\n\nfunction saiki($str){\n        if(is_numeric($str)){\n                return ($str+1)/2;\n        }\n        $array=array();\n        $d=0;\n        $memo;\n        for ($i=0; $i < strlen($str); $i++) {\n                if($str[$i]=='['){\n                        if($d==0){\n                        $memo=$i;\n                        }\n                        $d++;\n                }else if($str[$i]==']'){\n                        $d--;\n                        if($d==0){\n                                array_push($array,saiki(substr($str,$memo+1,$i-$memo-1)));\n                        }\n                }\n        }\n        sort($array);\n        $size=(sizeof($array)+1)/2;\n        $sum=0;\n        for ($i=0; $i < $size; $i++) {\n                $sum+=$array[$i];\n        }\n        return $sum;\n}\n\nfor ($i=0; $i < $N; $i++) {\n        $str=trim(fgets(STDIN));\n        echo saiki($str).PHP_EOL;\n}"
  },
  {
    "language": "PHP",
    "code": "<?php\n$N=trim(fgets(STDIN));\n\nfunction saiki($str){\n        if(is_numeric($str)){\n                return ($str+1)/2;\n        }\n        $array=array();\n        $d=0;\n        $memo;\n        for ($i=0; $i < strlen($str); $i++) {\n                if($str[$i]=='['){\n                        if($d==0){\n                                $memo=$i;\n                        }\n                        $d++;\n                }else if($str[$i]==']'){\n                        $d--;\n                        if($d==0){\n                                array_push($array,saiki(substr($str,$memo+1,$i-$memo-1)));\n                        }\n                }\n        }\n        sort($array);\n        $size=(sizeof($array)+1)/2;\n        $sum=0;\n        for ($i=0; $i < $size; $i++) {\n                $sum+=$array[$i];\n        }\n        return $sum;\n}\n\nfor ($i=0; $i < $N; $i++) {\n        echo saiki(trim(fgets(STDIN))).PHP_EOL;\n}"
  },
  {
    "language": "D",
    "code": "import std.string;\nimport std.algorithm;\nimport std.math;\nimport std.array;\nimport std.format;\nimport std.range;\nimport std.stdio;\nimport std.conv;\n\nstruct Node\n{\n    size_t value;\n    Node*[] childs;\n\n    static\n    Node* parse(string str)\n    {\n        Node* dst = new Node;\n        size_t cnt;\n        foreach(e; str) if(e == '[') ++cnt; else break;\n        if(cnt == 1){\n            dst.value = str[1 .. $-1].to!uint;\n            return dst;\n        }else{\n            size_t s, c;\n            foreach(i, e; str){\n                if(c == 1) s = i;\n                if(e == '[') {++c; if(c == 1) s = i;};\n                if(e == ']') {--c; if(c == 1) dst.childs ~= parse(str[s .. i+1]); };\n            }\n        }\n\n        return dst;\n    }\n\n    string toString()\n    {\n        if(childs.length == 0) return '[' ~ value.to!string ~ ']';\n        else{\n            auto app = appender!string();\n            app.put('[');\n            foreach(e; childs)\n                app.put(e.toString());\n            app.put(']');\n            return app.data;\n        }\n    }\n\n    size_t query()\n    {\n        if(childs.length == 0) return (value + 1)/2;\n        else{\n            int[] vs;\n            foreach(e; childs) vs ~= e.query;\n            vs.sort();\n            vs = vs[0 .. ($+1)/2];\n            return vs.sum;\n        }\n    }\n}\n\n\nvoid main()\n{\n    foreach(i; 0 .. readln().chomp().to!size_t){\n        writeln(Node.parse(readln().chomp()).query);\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.string;\nimport std.algorithm;\nimport std.math;\nimport std.array;\nimport std.format;\nimport std.range;\nimport std.stdio;\nimport std.conv;\n\nstruct Node\n{\n    size_t value;\n    Node*[] childs;\n\n    static\n    Node* parse(string str)\n    {\n        Node* dst = new Node;\n        size_t cnt;\n        foreach(e; str) if(e == '[') ++cnt; else break;\n        if(cnt == 1){\n            dst.value = str[1 .. $-1].to!size_t;\n            return dst;\n        }else{\n            size_t s, c;\n            foreach(i, e; str){\n                if(c == 1) s = i;\n                if(e == '[') {++c; if(c == 1) s = i;};\n                if(e == ']') {--c; if(c == 1) dst.childs ~= parse(str[s .. i+1]); };\n            }\n        }\n\n        return dst;\n    }\n\n    string toString()\n    {\n        if(childs.length == 0) return '[' ~ value.to!string ~ ']';\n        else{\n            auto app = appender!string();\n            app.put('[');\n            foreach(e; childs)\n                app.put(e.toString());\n            app.put(']');\n            return app.data;\n        }\n    }\n\n    size_t query()\n    {\n        if(childs.length == 0) return (value + 1)/2;\n        else{\n            size_t[] vs;\n            foreach(e; childs) vs ~= e.query;\n            vs.sort();\n            vs = vs[0 .. ($+1)/2];\n            return vs.reduce!\"a+b\";\n        }\n    }\n}\n\n\nvoid main()\n{\n    foreach(i; 0 .. readln().chomp().to!size_t){\n        writeln(Node.parse(readln().chomp()).query);\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.string;\nimport std.algorithm;\nimport std.math;\nimport std.array;\nimport std.format;\nimport std.range;\nimport std.stdio;\nimport std.conv;\n\nstruct Node\n{\n    size_t value;\n    Node*[] childs;\n\n    static\n    Node* parse(string str)\n    {\n        Node* dst = new Node;\n        size_t cnt;\n        foreach(e; str) if(e == '[') ++cnt; else break;\n        if(cnt == 1){\n            dst.value = str[1 .. $-1].to!size_t;\n            return dst;\n        }else{\n            size_t s, c;\n            foreach(i, e; str){\n                if(c == 1) s = i;\n                if(e == '[') {++c; if(c == 1) s = i;};\n                if(e == ']') {--c; if(c == 1) dst.childs ~= parse(str[s .. i+1]); };\n            }\n        }\n\n        return dst;\n    }\n\n    string toString()\n    {\n        if(childs.length == 0) return '[' ~ value.to!string ~ ']';\n        else{\n            auto app = appender!string();\n            app.put('[');\n            foreach(e; childs)\n                app.put(e.toString());\n            app.put(']');\n            return app.data;\n        }\n    }\n\n    size_t query()\n    {\n        if(childs.length == 0) return (value + 1)/2;\n        else{\n            size_t[] vs;\n            foreach(e; childs) vs ~= e.query;\n            vs.sort();\n            vs = vs[0 .. ($+1)/2];\n            return vs.reduce!\"a+b\";\n        }\n    }\n}\n\n\nvoid main()\n{\n    foreach(i; 0 .. readln().chomp().to!size_t){\n        writeln(Node.parse(readln().chomp()).query);\n    }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.ascii;\nimport std.conv;\nimport std.string;\nimport std.algorithm;\n\nvoid solve(string s) {\n    int i = 0;\n    int count() {\n        if (s[i] == '[') {\n            int[] xs;\n            while (s[i] == '[') {\n                i++; // skip '['\n                xs ~= count();\n                assert(s[i] == ']');\n                i++; // skip ']'\n                if (i == s.length) break;\n            }\n            xs.sort;\n            return xs[0 .. $ / 2 + 1].reduce!\"a + b\";\n        } else {\n            string x;\n            while (s[i].isDigit) {\n                x ~= s[i];\n                i++;\n            }\n            return x.to!int / 2 + 1;\n        }\n    }\n    count.writeln;\n}\n\nvoid main() {\n    int n; readf(\"%d\\n\", &n);\n    foreach (_; 0 .. n) {\n        solve(readln.chomp);\n    }\n}"
  },
  {
    "language": "Python",
    "code": "def rec(s, l, now=0):\n    if s[now].isdigit():\n        res = ''\n        while now < l and s[now] != ']':\n            res += s[now]\n            now += 1\n        return int(res) // 2 + 1, now + 1\n    else:\n        g = []\n        while now < l and s[now] == '[':\n            res, now = rec(s, l, now + 1)\n            g.append(res)\n        g.sort()\n        return sum(g[:len(g) // 2 + 1]), now + 1\n\n\nfor _ in range(int(input())):\n    s = input()\n    l = len(s)\n    print(rec(s, l)[0])\n"
  },
  {
    "language": "Python",
    "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 998244353\ndd = [(0,-1),(1,0),(0,1),(-1,0)]\nddn = [(0,-1),(1,-1),(1,0),(1,1),(0,1),(-1,-1),(-1,0),(-1,1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    rr = []\n    n = I()\n    ni = 0\n\n    def f(a):\n        if len(a) == 1:\n            return a[0] // 2 + 1\n        cs = sorted([f(c) for c in a])\n        return sum(cs[:len(cs)//2+1])\n\n    while ni < n:\n        ni += 1\n        s = S()\n        a = eval(s.replace('][', '],['))\n        rr.append(f(a))\n\n    return '\\n'.join(map(str,rr))\n\n\nprint(main())\n\n\n"
  },
  {
    "language": "Python",
    "code": "def calc_majority(l):\n    l.sort()\n    result = 0\n    for i in range(len(l) // 2 + 1):\n        result += l[i]\n    return result\n\n#過半数になるような値を求めてそれを返す\ndef calc_fisrt_majority(l):\n    people_num = list(map(int, l))\n    people_num.sort()\n    n = 0\n    for i in range(len(people_num) // 2 + 1):\n        n += int(people_num[i]) // 2 + 1\n    return n\n\n#括弧と括弧の間の数値を返す\ndef get_num(l, lp, rp):\n    #print(lp, end=\"\")\n    #print(\" \", end=\"\")\n    #print(rp)\n    s = ''\n    for i in range(lp+1, rp):\n        s += l[i]\n    return s\n\n#左かっこに対応する右かっこのインデックスを返す\ndef getRp(char_list, n):\n    count = 1\n    i = 0\n    while count:\n        c = char_list[i]\n        i += 1\n        if c == '[':\n            count += 1\n        elif c == ']':\n            count -= 1\n        else:\n            continue\n\n    return i+n\n\n#かっこの位置全てのリストを返す\ndef brackets(s):\n    lp = []\n    rp = []\n    n = 0\n    bucket_nest = 0\n    l = list(s)\n\n    for i in l:\n        if i == '[':\n            bucket_nest += 1\n        if i != '[':\n            break\n\n    for i in l:\n        n += 1\n        if i == '[':\n            lp.append(n-1)\n            rp.append(getRp(l[n:], n-1))\n    for i in range(1, len(lp)):\n        return lp, rp, bucket_nest\n\ndef main():\n    N = int(input())\n    lp = []\n    rp = []\n    tmp_result = []\n    result = 0\n    people_num = []\n    nest = 0\n    n = 0\n    while N != 0:\n        s = input()\n        l = list(s)\n        N -= 1\n        lp, rp, nest = brackets(s)\n        n = 0\n        for i in lp:\n            if(l[i+1] != '['): #次が[でないなら必ず数字が来る\n                people_num.append(get_num(l, lp[n], rp[n]))\n                if(l[rp[n]+1] == ']'): #ネストの終わり\n                    tmp_result.append(calc_fisrt_majority(people_num))\n                    people_num.clear()\n            n += 1\n\n        print(tmp_result)\n        if nest == 2:\n            result = tmp_result[0]\n\n        while nest != 2:\n            result = calc_majority(tmp_result)\n            nest -= 1\n        print(result)\n\nif __name__ == '__main__':\n    main()\n\n#[[[37][95][31][77][15]][[43][5][5][5][85]][[71][3][51][89][29]]\n#[[57][95][5][69][31]][[99][59][65][73][31]]]\n#[[43][9][43][48][79]]=9+43+43=95\n\n"
  },
  {
    "language": "Python",
    "code": "N=int(input())\nfor i in range(N):\n    s__=input()\n    s_=\"\"\n    s=[]\n    #step1\n    for i in range(len(s__)):\n        if s__[i].isdigit():\n            s_+=s__[i]\n        else:\n            s_+=\" \"+s__[i]+\" \"\n    s_=s_.split(\" \")\n    for i in range(len(s_)):\n        if s_[i]!='':\n            s.append(s_[i])\n\n    #step2\n    M=[[] for i in range(10)]\n    M_=[0]*10\n    D=[]\n    count=0\n    for i in range(len(s)):\n        if s[i]=='[':\n            count +=1\n        elif s[i]==']':\n            M[count].append(M_[count])\n            M_[count]=0\n            M_[count-1]+=1\n            count-=1\n        else:\n            D.append(int(s[i]))\n    for i in range(1,len(M)):\n        if len(M[i])==0:\n            M=M[1:i]\n            break\n    for i in range(len(M[-1])):\n        M[-1][i]=1\n    for i in range(len(M)):\n        M[i]=[0]+M[i]\n    for i in range(len(M)):\n        for j in range(1,len(M[i])):\n            M[i][j]=M[i][j]+M[i][j-1]\n\n    #step3\n    ans=[]\n    for i in range(len(M)):\n        ans.append([0]*(len(M[i])-1))\n    for j in range(len(ans[-1])):\n        ans[-1][j]=(D[j]//2)+1\n    for i in range(len(M)-2,-1,-1):\n        for j in range(len(ans[i])):\n            partial_sorted=sorted(ans[i+1][M[i][j]:M[i][j+1]])\n            ans[i][j]=sum(partial_sorted[:((len(partial_sorted)//2)+1)])\n\n    print(ans[0][0])\n"
  },
  {
    "language": "Python",
    "code": "import sys\ninput = sys.stdin.readline\n\nclass Node():\n    def __init__(self):\n        self.is_leaf = False\n        self.val = -1\n        self.childs = []\n        self.child_num = 0\n        self.parent = None\n\n    def win(self):\n        if self.is_leaf:\n            return self.val // 2 + 1\n        tmp = []\n        for c in self.childs:\n            tmp.append(c.win())\n        tmp = sorted(tmp)\n        ret = 0\n        for i in range(self.child_num//2 + 1):\n            ret += tmp[i]\n        return ret\n\ndef main():\n    n = int(input())\n    questions = [input().strip() for i in range(n)]\n\n    for q in questions:\n        root = Node()\n        now = root\n        i = 0\n        while i < len(q):\n            if q[i] == \"[\":\n                tmp = Node()\n                tmp.parent = now\n                now.childs.append(tmp)\n                now.child_num += 1\n                now = tmp\n                i += 1\n            elif q[i] == \"]\":\n                now = now.parent\n                i += 1\n            else:\n                j = i\n                while q[j+1] in \"0123456789\":\n                    j += 1\n                now.is_leaf = True\n                now.val = int(q[i:j+1])\n                i = j+1\n        print(root.win())\n\nif __name__ == \"__main__\":\n    main()\n\n"
  },
  {
    "language": "Python",
    "code": "def f(S):\n    k,l = 0,0\n    num = \"\"\n    A = []\n    for i in range(len(S)):\n        s = S[i]\n        if s==\"[\":\n            k+=1\n            if k==3 and l==0:\n                l = i-1\n        elif s==\"]\":\n            k-=1\n            if l==0 and k==1:\n                num = int(num)\n                num = num//2 if num%2==0 else num//2+1\n                A.append(num)\n                num = \"\"\n            elif l!=0 and k==1:\n                A.append(f(S[l:i+1]))\n                num = \"\"\n                l = 0\n        else:\n            num += s\n    A.sort()\n    return sum(A[:len(A)//2+1])\nfor i in [0]*int(input()):\n    S = input()\n    print(f(S))\n"
  },
  {
    "language": "Python",
    "code": "n = int(input())\nfor i in range(n):\n  t = input()\n  nums = [[] for i in range(100)]\n  num = \"\"\n  nest = 0\n  maxnest = 0\n  for e in t:\n    if e==\"[\":\n      nest += 1\n      maxnest = max(maxnest, nest)\n    elif e!=\"[\" and e!=\"]\":\n      num += e\n    elif e==\"]\" and len(num):\n      nums[nest].append(int(num)//2+1)\n      num = \"\"\n      nest -= 1\n    else:\n      nums[nest+1].sort()\n      t = 0\n      for i in range(len(nums[nest+1])//2+1):\n        t += nums[nest+1][i]\n      nums[nest+1] = []\n      nums[nest].append(t)\n      nest -= 1\n  print(nums[1][0])\n"
  },
  {
    "language": "Python",
    "code": "def parser(l, r):\n    if all(S[i].isdigit() for i in range(l, r + 1)):\n        return int(S[l:r + 1]) // 2 + 1\n    ret = []\n    cnt = 0\n    start = 0\n    for i in range(l, r + 1):\n        if S[i] == '[':\n            cnt += 1\n            if cnt == 1:\n                start = i\n        elif S[i] == ']':\n            if cnt == 1:\n                ret.append(parser(start + 1, i - 1))\n            cnt -= 1\n    ret.sort()\n    return sum(ret[:len(ret) // 2 + 1])\n\n\nN = int(input())\nfor _ in range(N):\n    S = input()\n    print(parser(0, len(S) - 1))"
  },
  {
    "language": "Python",
    "code": "def cost(s):\n  lens = len(s)\n  if lens == 1:\n    return int(s[0]) // 2 + 1\n  costs = [cost(x) for x in s]\n  costs.sort()\n  return sum(costs[:lens // 2 + 1])\n\nn = int(input())\nfor _ in range(n):\n  s = input()\n  s = s.replace(\"][\", \"],[\")\n  s = eval(s)\n  print(cost(s))\n\n"
  },
  {
    "language": "Python",
    "code": "from itertools import combinations\n\nclass Source:\n  def __init__(self, S):\n    self.S = S\n    self.pos = 0\n\ndef peek(S):\n  return S.S[S.pos] if S.pos < len(S.S) else a\n\ndef next(S):\n  S.pos += 1\n      \ndef expr(S):\n  next(S)\n  if peek(S) != '[':\n    return num(S) // 2 + 1\n    \n  A = []\n  while peek(S) != ']':\n    A.append(expr(S))\n    next(S)\n  \n  A.sort()\n\n  return sum(A[:len(A) // 2 + 1])\n  \ndef num(S):\n  res = 0\n  while '0' <= peek(S) <= '9':\n    res = 10 * res + int(peek(S))\n    next(S)\n    \n  return res\n             \nn = int(input())\nfor i in range(n):\n  print(expr(Source(input())))\n\n"
  },
  {
    "language": "Python",
    "code": "import sys\ninput = sys.stdin.readline\n\ndef f(x):\n    res = []\n    flag = False\n    tank = []\n    for i in range(len(x)):\n        if x[i] == 0 and x[i+1] > 0:\n            flag = True\n        elif x[i] == 0:\n            res.append(0)\n        elif x[i] > 0:\n            tank.append(x[i])\n        elif x[i] == -1 and flag:\n            tank.sort()\n            res.append(sum(tank[:len(tank)//2+1]))\n            flag = False\n            tank = []\n        else:\n            res.append(-1)\n    return res\n\n\ntestnum = int(input())\nfor testcase in range(testnum):\n    ss = list(input())\n    s = []\n    tmp,p = 0,0\n    for i in range(len(ss)-2,-1,-1):\n        if ss[i] == \"]\":\n            s.append(-1)\n        elif ss[i] == \"[\":\n            s.append(0)\n        else:\n            tmp += int(ss[i])*pow(10,p)\n            p += 1\n            if ss[i-1] == \"[\":\n                s.append(tmp//2+1)\n                tmp,p = 0,0\n    s = s[::-1]\n    while len(s) > 1:\n        s = f(s)\n    print(s[0])\n"
  },
  {
    "language": "Python",
    "code": "import re\n\nn = int(input())\nfor _ in range(n):\n    dataset = input()\n    stage = 1\n    while (re.match('\\[[0-9]+\\]', dataset) is None):\n        iterator = re.finditer('\\[([0-9]+\\]\\[)+[0-9]+\\]', dataset)\n        minimum_votes = []\n        for i, match in enumerate(iterator):\n            areas = list(map(int, match.group()[1:-1].split('][')))\n            minimum_areas = sorted(areas)[:len(areas)//2 + 1]\n            if stage == 1:\n                minimum_voters = [m // 2 + 1 for m in minimum_areas]\n                minimum_vote = sum(minimum_voters)\n            else:\n                minimum_vote = sum(minimum_areas)\n            minimum_votes.append(str(minimum_vote))\n            dataset = dataset.replace(match.group(), str(-i-1), 1)\n        for i, minimum_vote in enumerate(minimum_votes):\n            dataset = dataset.replace(str(-i-1), minimum_vote, 1)\n        stage += 1\n    print(dataset[1:-1])\n"
  },
  {
    "language": "Python",
    "code": "def AC():\n    def solve(s):\n        if s.count('[')==1:\n            return int(s[1:-1])\n        elif '][' in s and ']][[' not in s:\n            tmp = sorted(map(int,s[2:-2].split('][')))\n            ans=0\n            for i in range(len(tmp)//2+1):\n                ans+=tmp[i]//2+1\n            return ans\n        else:\n            count=0\n            for i in range(len(s)):\n                if s[i]=='[':\n                    count+=1\n                else:\n                    count-=1\n                    break\n            tmp=s[1:-1].split(']'*count+'['*count)\n            d=[]\n            for i in range(len(tmp)):\n                if i==0:\n                    tmp[i]=tmp[i]+']'*count\n                elif i==len(tmp)-1:\n                    tmp[i]='['*count+tmp[i]\n                else:\n                    tmp[i]='['*count+tmp[i]+']'*count\n                d.append(solve(tmp[i]))\n            tmp = sorted(d)\n            ans=0\n            for i in range(len(tmp)//2+1):\n                ans+=tmp[i]\n            return ans\n    \n    if __name__ == '__main__':\n        n=int(input())\n        for i in range(n):\n            print(solve(input()))\nAC()\n"
  },
  {
    "language": "Python",
    "code": "import re\n\nn = int(input())\nfor _ in range(n):\n    dataset = input()\n    stage = 1\n    while (re.match('\\[[0-9]+\\]', dataset) is None):\n        iterator = re.finditer('\\[([0-9]+\\]\\[)+[0-9]+\\]', dataset)\n        for match in iterator:\n            areas = list(map(int, match.group()[1:-1].split('][')))\n            minimum_areas = sorted(areas)[:len(areas)//2 + 1]\n            if stage == 1:\n                minimum_voters = [m // 2 + 1 for m in minimum_areas]\n                minimum_vote = sum(minimum_voters)\n            else:\n                minimum_vote = sum(minimum_areas)\n            dataset = dataset.replace(match.group(), '*' + str(minimum_vote) + '*', 1)\n        dataset = dataset.replace('*', '')\n        # print(dataset)\n\n        stage += 1\n    print(dataset[1:-1])\n"
  },
  {
    "language": "Python",
    "code": "def solve(a):\n\tif type(a[0]) is int:\n\t\treturn sum(sorted(a)[:len(a)/2+1])/2 + len(a)\n\telse:\n\t\treturn sum(sorted(solve(i) for i in a)[:len(a)/2+1])\nfor i in range(input()):\n\tA = eval(raw_input().replace(\"][\",\"],[\"))\n\tprint solve(A)"
  },
  {
    "language": "Python",
    "code": "def rec(s):\n    ans = int(1e8)\n    c_list = []\n    st = []\n    n = len(s)\n    l = 0\n    r = len(s)-1\n    if s[0]!='[':\n        return 1+int(s)//2\n    for i in range(n):\n        _s = s[i]\n        if _s=='[':\n            if len(st)==0:\n                l = i+1\n            st.append(_s)\n        elif _s==']':\n            st = st[:-1]\n            if len(st)==0:\n                r = i\n                c_list.append(rec(s[l:r]))\n    c_list.sort()\n    return sum( c_list[:1+len(c_list)//2] )\n\nN = int(input())\nfor _ in range(N):\n    s = input()\n    print(rec(s))"
  },
  {
    "language": "Python",
    "code": "#!/usr/bin/env python\nN = input()\n\ndef func(lst):\n    if len(lst) == 1:\n        return lst[0] // 2 + 1\n    res_lst = []\n    for l in lst:\n        res_lst.append(func(l))\n    res_lst.sort()\n    ret = 0\n    for i in range(len(res_lst) // 2 + 1):\n        ret += res_lst[i]\n    return ret\n\nfor loop in range(N):\n    S = raw_input()\n    hoge = S.split(']')\n    S = '],'.join(hoge)\n    exec('piyo = ' + S[:-1])\n    print func(piyo)\n\n"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\nfrom sys import setrecursionlimit\nsetrecursionlimit(100000)\n\ndef cal(L):\n    if type(L[0][0]) == list:\n        L = [[cal(l)*2] for l in L]\n    return sum(sorted([-(-l[0]//2) for l in L])[:-(-len(L)//2)])\n\nfor _ in range(int(input())):\n    print(cal(eval(input().replace(\"][\", \"],[\"))))\n"
  },
  {
    "language": "Python",
    "code": "def solve(a):\n\tif type(a[0]) is int:\n\t\treturn sum(sorted(a)[:len(a)/2+1])/2 + len(a)\n\telse:\n\t\treturn sum(sorted(solve(i) for i in a))[:len(a)/2+1])\nfor i in range(input()):\n\tA = eval(raw_input().replace(\"][\",\"],[\"))\n\tprint solve(A)"
  },
  {
    "language": "Python",
    "code": "import sys\nsys.setrecursionlimit(10**5)\n\ndef LI(): return [int(x) for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LI_(): return [-1*int(x) for x in input().split()]\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LM(func,n): return [[func(x) for x in input().split()]for i in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n\ndef solve(L):\n   L = L[1:-1]\n   if L[0] != '[':\n       return int(L)//2+1\n   ret = []\n   s=0\n   c = 0\n\n   for i in range(len(L)):\n       if L[i] == '[':\n           c += 1\n       elif L[i] == ']':\n           c -= 1\n       if c == 0:\n           ret.append(solve(L[s:i + 1]))\n           s = i + 1\n   ret.sort()\n   return sum(ret[0:len(ret)//2+1])\n\n\nN = II()\nfor i in range(N):\n    L = input()\n    print(solve(L))\n\n\n"
  },
  {
    "language": "Python",
    "code": "N=int(input())\nfor i in range(N):\n    S=input()\n    stack=[]\n    num=[0]\n    st=\"\"\n    N=len(S)\n    for j in range(N):\n        i=S[j]\n        #print(num)\n        #print(stack)\n        #print('\"'+i+'\"',st)\n        if i==\"[\":\n            stack.append(0)\n            num.append(0)\n        elif i==\"]\":\n            n=num.pop()\n            num[-1]+=1\n            if st!=\"\":\n                stack[-1]+=((int(st)+1)//2)\n            else:\n                tmp=[]\n                for k in range(n):\n                    tmp.append(stack[-1])\n                    stack.pop()\n                tmp.sort()\n                stack[-1]+=sum(tmp[:(len(tmp)+1)//2])\n            st=\"\"\n        else:\n            st=st+str(i)\n    #print(num)\n    #print(stack)\n    print(stack[0])\n"
  },
  {
    "language": "Python",
    "code": "def solve(a):\n\tif type(a[0]) is int:\n\t\ta = [a[i]/2+1 for i in range(len(a))]\n\t\treturn sum(sorted(a)[:len(a)/2+1])\n\telse:\n\t\treturn sum(sorted(solve(a[i]) for i in range(len(a)))[:len(a)/2+1])\nfor i in range(input()):\n\tA = eval(raw_input().replace(\"][\",\"],[\"))\n\tprint solve(A)\n\t"
  },
  {
    "language": "Python",
    "code": "#2005_c\n\"\"\"\nn = int(input())\nk = list(\"mcxi\")\nfor i in range(n):\n    d = {\"m\":0,\"c\":0,\"x\":0,\"i\":0}\n    a,b  = input().split()\n    a = list(a)\n    b = list(b)\n    a.insert(0,1)\n    b.insert(0,1)\n    for j in range(1,len(a)):\n        if a[j] in k:\n            if a[j-1] in k:\n                d[a[j]] += 1\n            else:\n                d[a[j]] += int(a[j-1])\n    for j in range(1,len(b))[::-1]:\n        if b[j] in k:\n            if b[j-1] in k:\n                d[b[j]] += 1\n            else:\n                d[b[j]] += int(b[j-1])\n            if d[b[j]] >= 10:\n                l = b[j]\n                while d[l] >= 10:\n                    d[l] -= 10\n                    l = k[k.index(l)-1]\n                    d[l] += 1\n    for j in k:\n        if d[j]:\n            if d[j] == 1:\n                print(j,end = \"\")\n            else:\n                print(str(d[j])+j,end = \"\")\n    print()\n\"\"\"\n\n#2017_c\n\"\"\"\nwhile 1:\n    h, w = map(int, input().split())\n    if h == w == 0:\n        break\n    s = [list(map(int, input().split())) for i in range(h)]\n\n    ans = 0\n    for u in range(h):\n        for d in range(u+2,h):\n            for l in range(w):\n                for r in range(l+2,w):\n                    m = float(\"inf\")\n                    for i in range(u,d+1):\n                        m = min(m,s[i][l],s[i][r])\n                    for i in range(l,r+1):\n                        m = min(m,s[u][i],s[d][i])\n                    f = 1\n                    su = 0\n                    for i in range(u+1,d):\n                        for j in range(l+1,r):\n                            su += (m-s[i][j])\n                            if s[i][j] >= m:\n                                f = 0\n                                break\n                        if not f:\n                            break\n                    if f:\n                        ans = max(ans,su)\n    print(ans)\n\"\"\"\n\n#2016_c\n\"\"\"\nwhile 1:\n    m,n = map(int, input().split())\n    if m == n == 0:\n        break\n    d = {}\n    ma = 7368791\n    for i in range(m,ma+1):\n        d[i] = 1\n    z = m\n    for i in range(n):\n        for j in range(z,ma+1):\n            if d[j]:\n                z = j\n                break\n        j = 1\n        while z*j <= ma:\n            d[z*j] = 0\n            j += 1\n    for j in range(z,ma+1):\n        if d[j]:\n            print(j)\n            break\n\"\"\"\n\n#2018_c\n\"\"\"\ndef factorize(n):\n    if n < 4:\n        return [1,n]\n    i = 2\n    l = [1]\n    while i**2 <= n:\n        if n%i == 0:\n            l.append(i)\n            if n//i != i:\n                l.append(n//i)\n        i += 1\n    l.append(n)\n    l.sort()\n    return l\nwhile 1:\n    b = int(input())\n    if b == 0:\n        break\n    f = factorize(2*b)\n    for n in f[::-1]:\n        a = 1-n+(2*b)//n\n        if a >= 1 and a%2 == 0:\n            print(a//2,n)\n            break\n\"\"\"\n\n#2010_c\n\"\"\"\nimport sys\ndp = [100]*1000000\ndp_2 = [100]*1000000\ndp[0] = 0\ndp_2[0] = 0\nfor i in range(1,181):\n    s = i*(i+1)*(i+2)//6\n    for j in range(s,1000000):\n        if dp[j-s]+1 < dp[j]:\n            dp[j] = dp[j-s]+1\n    if s%2:\n        for j in range(s,1000000):\n            if dp_2[j-s]+1 < dp_2[j]:\n                dp_2[j] = dp_2[j-s]+1\nwhile 1:\n    m = int(sys.stdin.readline())\n    if m == 0:\n        break\n    print(dp[m],dp_2[m])\n\"\"\"\n\n#2015_c\n\"\"\"\nfrom collections import deque\nwhile 1:\n    n = int(input())\n    if n == 0:\n        break\n    s = [input() for i in range(n)]\n    d = [s[i].count(\".\") for i in range(n)]\n    m = max(d)\n    c = [s[i][-1] for i in range(n)]\n    q = deque()\n    for i in range(1,m+1)[::-1]:\n        j = 0\n        while j < n:\n            for k in range(j,n):\n                if d[k] == i:break\n            else:\n                break\n            j = k\n            op = c[j-1]\n            while j < n and d[j] == i:\n                q.append(j)\n                j += 1\n            j = k\n            if op == \"+\":\n                k = 0\n                while q:\n                    x = q.pop()\n                    k += int(c[x])\n                    c.pop(x)\n                    d.pop(x)\n                    n -= 1\n            else:\n                k = 1\n                while q:\n                    x = q.pop()\n                    k *= int(c[x])\n                    c.pop(x)\n                    d.pop(x)\n                    n -= 1\n            c[j-1] = k\n    print(c[0])\n\"\"\"\n\n#2013_c\nfrom collections import defaultdict\n\ndef parse_expr(s,i):\n    i += 1\n    if s[i] == \"[\":\n        q = []\n        while s[i] != \"]\":\n            e,i = parse_expr(s,i)\n            q.append(e)\n        return (calc(q),i+1)\n    else:\n        n,i = parse_num(s,i)\n        return (calc([n]),i+1)\n\ndef parse_num(s,i):\n    m = int(s[i])\n    i += 1\n    while f_num[s[i]]:\n        m *= 10\n        m += int(s[i])\n        i += 1\n    return (m,i)\n\ndef calc(q):\n    if len(q) == 1:\n        return (q[0]+1)//2\n    q.sort()\n    return sum(q[:len(q)//2+1])\n\nf_num = defaultdict(lambda : 0)\nfor i in range(10):\n    f_num[str(i)] = 1\n\nn = int(input())\nfor i in range(n):\n    s = input()\n    print(parse_expr(s,0)[0])\n\n"
  },
  {
    "language": "Python",
    "code": "def dfs(s):\n if type(s)==int:return s/2+1\n v=sorted(map(dfs, s));return sum(v[:len(v)/2+1])\nfor _ in[0]*input():print dfs(eval(raw_input().replace(\"][\",\"],[\")))"
  },
  {
    "language": "Python",
    "code": "n = input()\nfor _ in xrange(n):\n    s = raw_input()\n    cur = 1\n    def parse():\n        global cur\n        result = []\n        num = None\n        while 1:\n            c = s[cur]; cur += 1\n            if c is '[':\n                result.append(parse())\n            elif c is ']':\n                break\n            else:\n                num = num or 0\n                num = 10*num + int(c)\n        if num is not None:\n            return num/2+1\n        l = len(result)\n        result.sort()\n        return sum(result[:l/2+1])\n\n    print parse()"
  },
  {
    "language": "Python",
    "code": "N = int(input())\ndef rec ():\n\tglobal now,l\n\tif s[now].isdigit():\n\t\tres = 0\n\t\twhile (now < l and s[now].isdigit()):\n\t\t\tres = ((10 * res) + int(s[now]))\n\t\t\tnow += 1\n\t\treturn (res+1)//2\n\telse:\n\t\tg = []\n\t\twhile(now < l and s[now] == '['):\n\t\t\tnow += 1\n\t\t\tg.append(rec())\n\t\t\tnow += 1\n\t\tg.sort()\n\t\treturn sum(g[:(len(g)+1)//2])\n\nfor i in range(N):\n\ts = input()\n\tl = len(s)\n\tnow = 0\n\tprint(rec())\n\n\n\n"
  },
  {
    "language": "Python",
    "code": "from collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp(): return int(input())\ndef inpl(): return list(map(int, input().split()))\ndef inpl_str(): return list(input().split())\n\n\nN = inp()\nfor nnnnnnn in range(N):\n    S = input()\n    stacks = [[] for _ in range(10000)]\n    num = ''\n    d = 0\n    for s in S:\n        if s == '[':\n            d += 1\n        elif s == ']':\n            if num != '':\n                num = int(num)\n                stacks[d-1].append(num//2+1)\n                num = ''\n            else:\n                stacks[d].sort()\n                L = len(stacks[d])\n                stacks[d-1].append(sum(stacks[d][:L//2+1]))\n                stacks[d] = []\n            d -= 1\n        else:\n            num = num + s\n    print(stacks[0][0])\n\n"
  }
]