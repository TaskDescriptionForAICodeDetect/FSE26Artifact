[
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct P {\n    int point;\n    string name;\n\n    P() {}\n    P(int point, string name) : point{point}, name{name} {}\n\n    bool operator < (const P& p) const {\n        if (point != p.point) {\n            return point > p.point;            \n        }\n        return name < p.name;\n    }\n};\n\nbool c(int X, int K, int L, const vector<P>& info, const vector<int>& p)\n{\n    int sum = 0;\n    for (int i = 0; i < X; i++) {\n        int rnk = K - i - 1;\n        if (p[i] < rnk) continue;\n\n        if (info[p[i]].name < info[rnk].name) {        \n            sum += info[rnk].point - info[p[i]].point;\n        } else {\n            sum += info[rnk].point - info[p[i]].point + 1;\n        }\n        if (sum > L) return 0;\n    }\n    return (sum <= L);\n}\n\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    int N, M, K, L;\n    while (cin >> N >> M >> K >> L, N > 0) {\n        string name;\n        int point;\n        vector<P> info;\n        for (int i = 0; i < N; i++) {\n            cin >> name >> point;\n            info.emplace_back(point, name);\n        }\n\n        sort(info.begin(), info.end());\n        \n        map<string, int> num;\n        for (int i = 0; i < N; i++) {\n            num[info[i].name] = i;\n        }\n        \n        vector<int> p(M);\n        string fav;\n        for (int i = 0; i < M; i++) {\n            cin >> fav;\n            p[i] = num[fav];\n        }\n\n        sort(p.begin(), p.end());\n        int l = 0, r = min(K, M);\n        while (r - l > 1) {\n            int mid = (l + r) / 2;\n            if (c(mid, K, L, info, p)) {\n                l = mid;\n            } else {\n                r = mid;\n            }\n        }\n\n        if (c(r, K, L, info, p)) {\n            cout << r << endl;\n        } else {\n            cout << l << endl;\n        }\n    }        \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    for(;;){\n        int n, m, k, l;\n        cin >> n >> m >> k >> l;\n        if(n == 0)\n            return 0;\n\n        vector<pair<int, string> > x(n);\n        map<string, int> index;\n        for(int i=0; i<n; ++i){\n            cin >> x[i].second >> x[i].first;\n            x[i].first *= -1;\n        }\n        sort(x.begin(), x.end());\n        for(int i=0; i<n; ++i){\n            x[i].first *= -1;\n            index[x[i].second] = i;\n        }\n\n        vector<bool> fav(n, false);\n        for(int i=0; i<m; ++i){\n            string s;\n            cin >> s;\n            fav[index[s]] = true;\n        }\n\n        if(n == m){\n            cout << n << endl;\n            continue;\n        }\n\n        int a = 0;\n        int b = min(m, k);\n        while(a < b){\n            int c = (a + b + 1) / 2;\n\n            int tmp = k - c;\n            int i = -1;\n            while(tmp >= 0){\n                ++ i;\n                if(!fav[i])\n                    -- tmp;\n            }\n\n            long long rest = l;\n            tmp = c;\n            int j = -1;\n            while(tmp > 0){\n                ++ j;\n                if(fav[j]){\n                    if(x[j].second < x[i].second)\n                        rest -= max(0, x[i].first - x[j].first);\n                    else\n                        rest -= max(0, x[i].first - x[j].first + 1);\n\n                    -- tmp;\n                }\n            }\n\n            if(rest >= 0)\n                a = c;\n            else\n                b = c - 1;\n        }\n\n        cout << a << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nll n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\tll cost=0;\n\n\tREP(i,0,x){\n\t\tcost+=max(0,unfavs[k-x].vote-favs[i].vote+(favs[i].name>unfavs[k-x].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct P {\n    int point;\n    string name;\n\n    P() {}\n    P(int point, string name) : point{point}, name{name} {}\n\n    bool operator < (const P& p) const {\n        if (point != p.point) {\n            return point > p.point;            \n        }\n        return name < p.name;\n    }\n};\n\nbool c(int X, int K, int L, const vector<P>& info, const vector<int>& p)\n{\n    int sum = 0;\n    int rnk = K - X;\n    for (int i = 0; i < X; i++) {\n        if (p[i] <= rnk) {\n            rnk = min(rnk + 1, K);\n            continue;\n        }\n\n        if (info[p[i]].name < info[rnk].name) {        \n            sum += info[rnk].point - info[p[i]].point;\n        } else {\n            sum += info[rnk].point - info[p[i]].point + 1;\n        }\n        if (sum > L) return 0;\n    }\n    return (sum <= L);\n}\n\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    int N, M, K, L;\n    while (cin >> N >> M >> K >> L, N > 0) {\n        string name;\n        int point;\n        vector<P> info;\n        for (int i = 0; i < N; i++) {\n            cin >> name >> point;\n            info.emplace_back(point, name);\n        }\n\n        sort(info.begin(), info.end());\n        \n        map<string, int> num;\n        for (int i = 0; i < N; i++) {\n            num[info[i].name] = i;\n        }\n        \n        vector<int> p(M);\n        string fav;\n        for (int i = 0; i < M; i++) {\n            cin >> fav;\n            p[i] = num[fav];\n        }\n\n        sort(p.begin(), p.end());\n\n        int l = 0, r = min(K, M);\n        while (r - l > 1) {\n            int mid = (l + r) / 2;\n            if (c(mid, K, L, info, p)) {\n                l = mid;\n            } else {\n                r = mid;\n            }\n        }\n\n        if (c(r, K, L, info, p)) {\n            cout << r << endl;\n        } else {\n            cout << l << endl;\n        }\n    }        \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;scanf(\"%d %d %d %d\",&N,&M,&K,&L),N;){\n    map<string,int> m;\n    for(int i=0;i<N;i++){\n      char name[11];\n      int x;\n      scanf(\"%s %d\",name,&x);\n      m[name]=x;\n    }\n    map<string,int> idx;\n    vector<int> votes;\n    for(auto e:m){\n      auto s=idx.size();\n      idx[e.first]=s;\n      votes.push_back(e.second);\n    }\n    vector<int> fav(M);\n    for(auto &e:fav){\n      char name[11];\n      scanf(\"%s\",name);\n      e=idx[name];\n    }\n    set<int> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](int a,int b){\n\treturn (votes[a]!=votes[b])?votes[a]>votes[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=2e9;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-votes[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=votes;\n      vector<int> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-votes[e]);\n      }\n      sort(vc.rbegin(),vc.rend());\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      vector<int> rank(N);\n      iota(begin(rank),end(rank),0);\n      sort(begin(rank),end(rank),[&](int a,int b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(rank[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    printf(\"%d\\n\",l);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    rep(i, a){\n        int tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(-tp < -fav[i].first) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rep(j, cv.size()){\n            if(mp(tp, name) < cv[j]){\n                rank = j-1;\n                break;\n            }\n        }\n//        cout << rank << \" \"<< k-a+num << endl;\n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            int x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n        int lower = 0;\n        int upper = m + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n       \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100000];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tint cost=0,cnt=0,border=k-x;\n\t//while(favs.find(charas[border].name)!=favs.end()&&border<k) ++border;\n\tREP(i,0,border) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border){\n\t\t\t\tcost+=charas[k-x].vote-charas[i].vote;\n\t\t\t\tif(charas[i].name>=charas[k-x].name) ++cost;\n\t\t\t}\n\t\t\tif(i!=border) ++cnt;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt==x) break;\n\t\t}\n\t}\n\n\tdump(cost);\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, ll> table;\nvector<pair<ll, string> > fav;\nvector<pair<ll, string> > cv;\nbool C(int a){\n    ll tl = l;\n    int num = 0;\n    rep(i, a){\n        ll tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] > fav[i]) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n                \n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            ll x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n//        repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n       \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double PI = acos(-1);\nconst double EPS = 1e-15;\nusing ll = long long;\nusing ull = unsigned long long;\nconst int inf = 2e9;\nconst ll INF = 2e18;\nconst ll MOD = 1e9+7;\nconst ll MOD1 = 998244353;\ntypedef pair<ll,ll> P;\n\n#define rep(i,a,b) for (int i = (a); i < (b); i++)\n#define rrep(i,a,b) for (int i = (a); i >= (b); i--)\n#define REP(i,n) rep(i,0,n)\n#define RREP(i,n) rrep(i,n,0)\n#define sz(s) (s).size()\n#define pb push_back\n#define fi first\n#define se second\n//#define mp make_pair\n\nstruct H {\n  ll vote;\n  string name;\n  H(){vote = 0; name = \"\";}\n  H(ll t, string c) {\n    vote = t;\n    name = c;\n  }\n  bool operator<(H e) const {\n    if (vote == e.vote) return name > e.name;\n    else return vote < e.vote;\n  }\n};\n\nll n,m,k,l;\nvector<H> a;\nvector<H> other, me;\nset<string> st;\n\nbool ok(ll K) {\n  if (k < K) return 0;\n  if (k - K >= sz(other)) return 1;\n  H line = other[k - K];\n  ll cnt = 0;\n  REP(i,K) {\n    ll vote = me[i].vote;\n    string name = me[i].name;\n    if (vote > line.vote) continue;\n    else if (vote == line.vote) {\n      if (name < line.name) continue;\n      else cnt++;\n    } else {\n      cnt += line.vote - vote;\n      if (name > line.name) cnt++;\n    }\n  }\n//  cout << endl;\n//  cout << \"*\" << line.vote << \" \" << line.name << endl;\n//  cout << K << \" \" << cnt << \" \" << (cnt <= l? \"ok\":\"no\") <<endl;\n  return cnt <= l;\n}\n\nint main(){\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n\n  while (cin >> n >> m >> k >> l, n) {\n  other.clear();\n  me.clear();\n  st.clear();\n  a.clear();\n\n  REP(i,n) {\n    string s;\n    ll v;\n    cin >> s >> v;\n    a.pb(H(v,s));\n  }\n  sort(a.rbegin(),a.rend());\n//\n//  REP(i,n) {\n//    cout << a[i].vote << \" \" << a[i].name << endl;\n//  }\n\n  REP(i,m) {\n    string s;\n    cin >> s;\n    st.insert(s);\n  }\n\n  REP(i,n) {\n    if (st.count(a[i].name)) {\n      me.pb(a[i]);\n    } else {\n      other.pb(a[i]);\n    }\n  }\n\n  other.pb({0,\"zzz\"});\n\n  ll left = 0, r = m;\n  while (left < r) {\n    ll mid = (left + r + 1) / 2;\n    if (ok(mid)) {\n      left = mid;\n    } else {\n      r = mid - 1;\n    }\n  }\n  cout << left << endl;\n  }\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nstruct chara {\n\tstring name;\n\tint vote;\n};\nint N, M, K, L;\nbool check(const vector<chara>&mcs, const vector<chara>&ocs,int need) {\n\tif (need == K - ocs.size())return true;\n\telse {\n\t\tchara target = ocs[ocs.size()-1 - (K - need)];\n\t\tlong long int use = 0;\n\t\tfor (int i = mcs.size() - 1; i >= int(mcs.size()) - need; --i) {\n\t\t\tchara mc(mcs[i]);\n\t\t\tif (mc.name < target.name) {\n\t\t\t\tuse += max(0, target.vote - mc.vote);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuse += max(0, target.vote - mc.vote + 1);\n\t\t\t}\n\t\t}\n\t\treturn use <= L;\n\t}\n}\n\nint main() {\n\twhile (1) {\n\t\tcin >> N >> M >> K >> L;\n\t\tif (!N)break;\n\t\tvector<chara>mycharas;\n\t\tvector<chara>opcharas;\n\t\t{\n\t\t\tmap<string, chara>mp;\n\t\t\tfor (int i = 0; i < N; ++i) {\n\t\t\t\tstring name; int vote; cin >> name >> vote;\n\t\t\t\tmp[name] = chara{ name,vote };\n\t\t\t}\n\t\t\tset<string>mynames;\n\t\t\tfor (int i = 0; i < M; ++i) {\n\t\t\t\tstring name; cin >> name;\n\t\t\t\tmynames.emplace(name);\n\n\t\t\t}\n\t\t\tfor (auto m : mp) {\n\t\t\t\tif (mynames.find(m.first) == mynames.end()) {\n\t\t\t\t\topcharas.push_back(m.second);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmycharas.push_back(m.second);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsort(opcharas.begin(), opcharas.end(), [](const chara&l, const chara&r) {\n\t\t\t\treturn l.vote == r.vote ? l.name > r.name : l.vote < r.vote;\n\t\t\t});\n\t\t\tsort(mycharas.begin(), mycharas.end(), [](const chara&l, const chara&r) {\n\t\t\t\treturn l.vote == r.vote ? l.name > r.name : l.vote < r.vote;\n\t\t\t});\n\t\t}\n\t\tint amin = max(0,int(K-opcharas.size())), amax = min(int(mycharas.size()),K) + 1;\n\t\twhile (amin + 1 != amax) {\n\t\t\tint amid = (amin + amax) / 2;\n\t\t\tif (check(mycharas, opcharas, amid)) {\n\t\t\t\tamin = amid;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tamax = amid;\n\t\t\t}\n\t\t}\n\t\tcout << amin << endl;\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct BinaryIndexedTree\n{\n  vector< int > data;\n\n  BinaryIndexedTree(int sz)\n  {\n    data.assign(++sz, 0);\n  }\n\n  int sum(int k)\n  {\n    int ret = 0;\n    for(++k; k > 0; k -= k & -k) ret += data[k];\n    return (ret);\n  }\n\n  void add(int k, int x)\n  {\n    for(++k; k < data.size(); k += k & -k) data[k] += x;\n  }\n};\n\nint main()\n{\n  long long N, M, K, L;\n  char buff[12];\n\n  while(scanf(\"%lld %lld %lld %lld\", &N, &M, &K, &L), N) {\n\n    vector< pair< int, string > > data(N);\n    vector< int > toint(N);\n    vector< string > priority(N);\n    unordered_map< string, int > vv;\n    vector< bool > like(N, false);\n\n    for(int i = 0; i < N; i++) {\n      int x;\n      scanf(\" %s %d\", buff, &x);\n      data[i] = make_pair(-x, buff);\n      priority[i] = data[i].second;\n    }\n    sort(begin(priority), end(priority));\n    sort(begin(data), end(data));\n\n\n    for(int i = 0; i < N; i++) {\n      toint[i] = lower_bound(begin(priority), end(priority), data[i].second) - begin(priority);\n      vv[data[i].second] = i;\n      data[i].first *= -1;\n    }\n\n    for(int i = 0; i < M; i++) {\n      scanf(\"%s\", buff);\n      like[vv[buff]] = true;\n    }\n\n    BinaryIndexedTree bit(N);\n\n    long long right = K, bottom = 0, up = 0;\n    long long sz = 0, ret = 0, pre = 0;\n\n    for(int i = 0; i < K; i++) {\n      ret += like[i];\n    }\n\n    for(int i = K - 1; i >= 0; i--) {\n      if(!like[i]) {\n        while(right < N && !like[right]) ++right;\n        if(right == N) break;\n\n        if(data[i].first == data[pre].first) {\n          cerr << \"foo\" << endl;\n// ???????????¨???????????????????????????\n\n        }\n        L -= data[i].first - data[right].first;\n        L -= bottom * (data[i].first - data[pre].first);\n        L -= up * (data[i].first - data[pre].first - 1);\n\n//        assert(bottom * (data[i].first - data[pre].first) >= 0);\n//        assert(up * (data[i].first - data[pre].first - 1) >= 0);\n\n        bit.add(toint[right], 1);\n\n        bottom = bit.sum(toint[i]);\n        up = bit.sum(N - 1) - bottom;\n        pre = i;\n        sz = 0;\n\n        L -= up;\n\n\n        if(L < 0) break;\n        ++ret;\n        ++right;\n      } else {\n        if(i == 0) break;\n        bit.add(toint[i], 1);\n        L -= ++sz * (data[i - 1].first - data[i].first);\n      }\n    }\n\n    printf(\"%lld\\n\", ret);\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\nconst int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nvector<P> fav;\nvector<P> unf;\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    if(fav[i].first != unf[K-k].first) {\n      l += max(0LL, fav[i].first - unf[K-k].first);\n    } else if(fav[i].second > unf[K-k].second) {\n      l++;\n    }\n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    unordered_map<string, int> dic;\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic[name] = -x;\n    }\n    set<string> favname;\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.first) != favname.end()) fav.push_back(P(a.second, a.first));\n      else unf.push_back(P(a.second, a.first));\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = M+1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <map>\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct data{\n  string name;\n  int hyou;\n  bool fav;\n  data(const char *nm, int hy) :\n    name(nm), hyou(hy), fav(false) {}\n};\n\nbool operator < (const data &lhs, const data &rhs){\n  if(lhs.hyou != rhs.hyou)\n    return lhs.hyou > rhs.hyou;\n  return lhs.name < rhs.name;\n}\n\nint main(){\n  int n, m, k, l;\n\n  while(scanf(\"%d%d%d%d\", &n, &m, &k, &l),\n        n + m + k + l){\n    vector<data> v; v.reserve(n);\n    map<string, int> memo;\n    vector<int> favs(m);\n    REP(i,n){\n      char buff[200]; int h;\n      scanf(\"%s%d\", buff, &h);\n      v.push_back(data(buff, h));\n    }\n\n    sort(v.begin(), v.end());\n\n    REP(i,n)\n      memo[v[i].name] = i;\n\n    REP(i,m){\n      char buff[200];\n      scanf(\"%s\", buff);\n      favs[i] = memo[buff];\n      v[favs[i]].fav = true;\n    }\n\n    sort(favs.begin(), favs.end());\n\n    int low  = 0;\n    int high = min(m, k);\n\n    while(low <= high){\n      int mid = (low + high) / 2;\n      bool ok = false;\n\n      int cnt = 0;\n      int i;\n      for(i = 0; i < n; i++){\n        if(k - i <= mid - cnt && !v[i].fav) break;\n        if(v[i].fav) cnt++;\n      }\n\n      if(i == n){\n        ok = true;\n      }else{\n        const data &border = v[i];\n\n        ll need = 0;\n\n        REP(j,mid){\n          int id = favs[j];\n          if(id <= i) continue;\n          const data &now = v[id];\n          if(now.name < border.name){\n            need += border.hyou - now.hyou;\n          }else{\n            need += border.hyou - now.hyou + 1;\n          }\n        }\n\n        if(need <= l) ok = true;\n        //printf(\"%d: %d (%d) %lld\\n\", mid, ok, i, need);\n      }\n\n      if(ok){\n        low  = mid + 1;\n      }else{\n        high = mid - 1;\n      }\n    }\n\n    printf(\"%d\\n\", high);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100000];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tint cost=0,cnt=0,border=k-x;\n\t//while(favs.find(charas[border].name)!=favs.end()&&border<k) ++border;\n\tREP(i,0,min(border,k)) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\n\tborder=min(border,k);\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border){\n\t\t\t\tcost+=charas[k-x].vote-charas[i].vote;\n\t\t\t\tif(charas[i].name>=charas[k-x].name) ++cost;\n\t\t\t}\n\t\t\tif(i!=border) ++cnt;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt==x) break;\n\t\t}\n\t}\n\n\tdump(cost);\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            int rfi=ranks[favs[i]];\n            if(!f&&(k-rfi)>=t-i-1){\n                continue;\n            }\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            char buf[1000];\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            char buf[2000];\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++)\n            favs.push_back(vpis[i].second);\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\n\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\nstruct Chara\n{\n  string name;  \n  int x;\n  Chara(){}\n  Chara(string name, int x):name(name), x(x){}\n  bool operator < (const Chara& c) const {\n    return x != c.x ? x > c.x : name < c.name;\n  }\n};\n\nconst int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nset<string> favname;\nvector<Chara> dic, fav, unf;\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    l += max(0LL, unf[K-k].x - fav[i].x + (fav[i].name > unf[K-k].name));\n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    dic.clear();\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic.push_back(Chara(name, x));\n    }\n    favname.clear();\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.name) != favname.end()) fav.push_back(a);\n      else unf.push_back(a);\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = min(M, K) + 1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    // SõªãÊklÉÒÁ½èûÜé\n    else if(t==k){\n        int sum=0;\n        int ms=score[0].first;\n        string mname=score[0].second;\n        bool f=false;\n        for(int i = 0; i < t; i++){\n            if(!f&&ranks[favs[i]]==i+1)\n                continue;\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                f=true;\n                ms=score[i].first;\n                mname=score[i].second;\n            }\n            //if(favs[i]==mname)\n            //    continue;\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    else{\n        int sum=0;\n        int ms=score[k-t].first;\n        string mname=score[k-t].second;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        int cnt=1;\n        bool f=false;\n        int lastRank=-1;\n        for(int i = 0; i < t; i++){\n            if(ranks[favs[i]]==i+1){\n                //lastRank=ranks[favs[i]];\n                continue;\n            }\n            //if(!f&&ranks[favs[i]]==k-t+cnt){\n            //    cnt++;\n            //    continue;\n            //}\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            //if(favs[i]==mname)\n            //    continue;\n\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    return false;\n}\n\nvoid solve(){\n    while(cin>>n>>m>>k>>l&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;string name;\n            cin>>name>>s;\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            string name;\n            cin>>name;\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++){\n            favs.push_back(vpis[i].second);\n        }\n\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            cout<<ub<<endl;\n        else\n            cout<<ub-1<<endl;\n    }\n}\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct BinaryIndexedTree\n{\n  vector< int > data;\n\n  BinaryIndexedTree(int sz)\n  {\n    data.assign(++sz, 0);\n  }\n\n  int sum(int k)\n  {\n    int ret = 0;\n    for(++k; k > 0; k -= k & -k) ret += data[k];\n    return (ret);\n  }\n\n  void add(int k, int x)\n  {\n    for(++k; k < data.size(); k += k & -k) data[k] += x;\n  }\n};\n\nint main()\n{\n  long long N, M, K, L;\n  char buff[12];\n\n  while(scanf(\"%lld %lld %lld %lld\", &N, &M, &K, &L), N) {\n\n    vector< pair< int, string > > data(N);\n    vector< int > toint(N);\n    vector< string > priority(N);\n    unordered_map< string, int > vv;\n    vector< bool > like(N, false);\n\n    for(int i = 0; i < N; i++) {\n      int x;\n      scanf(\" %s %d\", buff, &x);\n      data[i] = make_pair(-x, buff);\n      priority[i] = data[i].second;\n    }\n    sort(begin(priority), end(priority));\n    sort(begin(data), end(data));\n\n\n    for(int i = 0; i < N; i++) {\n      toint[i] = lower_bound(begin(priority), end(priority), data[i].second) - begin(priority);\n      vv[data[i].second] = i;\n      data[i].first *= -1;\n    }\n\n    for(int i = 0; i < M; i++) {\n      scanf(\"%s\", buff);\n      like[vv[buff]] = true;\n    }\n\n    BinaryIndexedTree bit(N);\n\n    long long right = K, bottom = 0, up = 0;\n    long long sz = 0, ret = 0, pre = K;\n\n    for(int i = 0; i < K; i++) {\n      ret += like[i];\n    }\n\n    for(int i = K - 1; i >= 0; i--) {\n      if(!like[i]) {\n        while(right < N && !like[right]) ++right;\n        if(right == N) break;\n\n        if(data[i].first == data[pre].first) {\n          cerr << \"foo\" << endl;\n// ???????????¨???????????????????????????\n\n        }\n        L -= data[i].first - data[right].first;\n        L -= bottom * (data[i].first - data[pre].first);\n        L -= up * (data[i].first - data[pre].first - 1);\n\n        assert(bottom * (data[i].first - data[pre].first) >= 0);\n        assert(up * (data[i].first - data[pre].first - 1) >= 0);\n\n        bit.add(toint[right], 1);\n\n        bottom = bit.sum(toint[i]);\n        up = bit.sum(N - 1) - bottom;\n        pre = i;\n        sz = 0;\n\n        L -= up;\n\n\n        if(L < 0) break;\n        ++ret;\n        ++right;\n      } else {\n        if(i == 0) break;\n        bit.add(toint[i], 1);\n        L -= ++sz * (data[i - 1].first - data[i].first);\n      }\n    }\n\n    printf(\"%lld\\n\", ret);\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\nconst int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nset<string> favname;\nvector<P> dic, fav, unf;\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    l += max(0, fav[i].first - unf[K-k].first);\n    if(fav[i].second > unf[K-k].second) l++;    \n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    dic.clear();\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic.push_back(P(-x, name));\n    }\n    favname.clear();\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.second) != favname.end()) fav.push_back(a);\n      else unf.push_back(a);\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = min(M, K) + 1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <cfloat>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <set>\n#include <map>\n#include <time.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\n#define NUM 100001\n\nmap<string,int> MAP;\n\nstruct Info{\n\tbool operator<(const struct Info &arg) const{\n\t\treturn value > arg.value;\n\t}\n\tint value;\n\tstring name;\n\tbool is_favorite;\n};\n\nint N,M,K,L;\nint ally[NUM],enemy[NUM];\nInfo info[NUM];\n\n\n\nbool strCmp(char* base, char* comp){\n\tint length1,length2;\n\tfor(length1=0;base[length1] != '\\0';length1++);\n\tfor(length2=0;comp[length2] != '\\0';length2++);\n\tif(length1 != length2)return false;\n\n\tfor(int i=0;base[i] != '\\0'; i++){\n\t\tif(base[i] != comp[i])return false;\n\t}\n\treturn true;\n}\n\nbool is_OK(int num){\n\n\tint sum = 0;\n\n\tif(ally[num-1] <= K-1)return true;\n\n\tint base_loc = enemy[K-num];\n\n\tfor(int i = 0; i < num; i++){\n\t\tif(info[ally[i]].value > info[base_loc].value){\n\t\t\tsum += 0;\n\t\t}else if(info[ally[i]].value == info[base_loc].value){\n\t\t\tif(info[ally[i]].name < info[base_loc].name){\n\t\t\t\tsum += 0;\n\t\t\t}else{\n\t\t\t\tsum += 1;\n\t\t\t}\n\t\t}else{\n\t\t\tif(info[ally[i]].name < info[base_loc].name){\n\t\t\t\tsum += info[base_loc].value-info[ally[i]].value;\n\t\t\t}else{\n\t\t\t\tsum += info[base_loc].value-info[ally[i]].value+1;\n\t\t\t}\n\t\t}\n\t\tif(sum > L)return false;\n\t}\n\treturn true;\n}\n\n\nvoid func(){\n\n\tMAP.clear();\n\n\tchar buf[11];\n\n\tfor(int i = 0; i < N; i++){\n\t\tscanf(\"%s %d\",buf,&info[i].value);\n\t\tinfo[i].name = buf;\n\t\tinfo[i].is_favorite = false;\n\t\tMAP[info[i].name] = i;\n\t}\n\n\tstring name;\n\tfor(int loop = 0; loop < M; loop++){\n\t\tscanf(\"%s\",buf);\n\t\tname = buf;\n\t\tinfo[MAP[name]].is_favorite = true;\n\t}\n\n\tsort(info,info+N);\n\n\tfor(int i = 0; i < NUM; i++){\n\t\tally[i] = BIG_NUM;\n\t\tenemy[i] = BIG_NUM;\n\t}\n\n\tint ally_index = 0,enemy_index = 0;\n\n\tfor(int i = 0; i < N;i++){\n\t\tif(info[i].is_favorite){\n\t\t\tally[ally_index++] = i;\n\t\t}else{\n\t\t\tenemy[enemy_index++] = i;\n\t\t}\n\t}\n\n\n\tint left = 0,right = min(K,M),m = (left+right)/2;\n\tint ans = 0;\n\n\twhile(left <= right){\n\t\tif(is_OK(m)){\n\t\t\tans = m;\n\t\t\tleft = m+1;\n\t\t}else{\n\t\t\tright = m-1;\n\t\t}\n\t\tm = (left+right)/2;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n\nint main(){\n\n\twhile(true){\n\t\tscanf(\"%d %d %d %d\",&N,&M,&K,&L);\n\t\tif(N == 0 && M == 0 && K == 0 && L == 0)break;\n\n\t\tfunc();\n\t}\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <cassert>\n#include <queue>\n#include <set>\n#include <map>\n#include <valarray>\n#include <bitset>\n#include <stack>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\ntypedef long long ll;\nconst int INF = 1<<29;\nconst double PI = acos(-1);\nconst double EPS = 1e-8;\n\n// Cð½·àÌªlb¤É èACð½·ÅålðßéÆ«BCð½·àÌª³¢Æ«ÌÉÓB\ntemplate<class T> T upper_search(T lb, T ub, bool (*C)(T)) {\n  while(ub-lb>1) { // ±±ÍKÉB\n    T mid = (lb+ub)/2;\n    if (C(mid)) lb = mid;       // Å¬lðßéÈçlbÆubðüêÖ¦é\n    else ub = mid;\n  }\n  return lb;\n}\n\nstruct P {\n  string name;\n  int x;\n  P(char *name, int x) : name(name), x(x) {}\n  P() {}\n};\nbool operator<(const P &a, const P &b) {\n  return a.x != b.x ? a.x > b.x : a.name < b.name;\n}\n\nint x[100000];\nP fav[100000];\nP v[100000];\n\nint n, m, k, l;\n\nbool C(int a) {\n  if (a > k) return 0;\n  P standard ;\n  int c = 0;\n  REP(i, n) {\n    if (fav[c].name == v[i].name) c++;\n    if (i == k-a+c) {\n      standard = v[i];\n      break;\n    }\n  }\n  if (standard.name == \"\") return 1;\n  // cout << \"a = \" << a << endl;\n  // cout << standard.name << \" \" << standard.x << endl;\n  int need = 0;\n  REP(i, a) {\n    if (standard < fav[i] ) {   // standardÌÙ¤ªÊªã\n      if (standard.name < fav[i].name) { // standardª«Å¢\n        need += standard.x - fav[i].x + 1;\n      } else {\n        need += standard.x - fav[i].x;\n      }\n    }\n    if (need > l) return 0;\n  }\n  // cout << \"need = \" << need << endl;\n  return 1;\n}\n\nint main() {\n  while(scanf(\"%d%d%d%d\",&n,&m,&k,&l), n) {\n    map<string, int> id;\n    REP(i, n) {\n      char tmp[20];\n      scanf(\"%s %d\", tmp, x+i);\n      id[string(tmp)] = i;\n      v[i] = P(tmp, x[i]);\n    }\n    REP(i, m) {\n      char tmp[20];\n      scanf(\"%s\", tmp);\n      fav[i] = P(tmp, x[id[string(tmp)]]);\n    }\n    sort(v, v+n);\n    sort(fav, fav+m);\n    // REP(i,n) {\n    //   cout << v[i].name << \" \" << v[i].x << endl;\n    // }\n    // cout << endl;\n    // REP(i,m) {\n    //   cout << fav[i].name << \" \" << fav[i].x << endl;\n    // }\n    cout<<upper_search<int>(0, m+1, C)<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <queue>\n#include <functional>\n#include <map>\n#include <climits>\n#include <stack>\n#include <string>\n#include <random>\n#include<set>\nstruct Vote {\n\tstd::string name;\n\tint vote;\n\tbool operator<(const Vote &that) const {\n\t\treturn (vote == that.vote) ? name > that.name : vote < that.vote;\n\t}\n\tbool operator==(const Vote &that) const {\n\t\treturn vote == that.vote && name == that.name;\n\t}\n\tbool operator>(const Vote &that) const {\n\t\treturn (vote == that.vote) ? name < that.name : vote > that.vote;\n\t}\n};\nbool can_take(const std::vector<Vote> &favorite, const Vote vote, int rest_vote, const int count) {\n\tfor (auto i = favorite.size() - count; i < favorite.size(); ++i) {\n\t\tif (favorite[i] < vote) {\n\t\t\tif (favorite[i].name < vote.name) {\n\t\t\t\trest_vote -= vote.vote - favorite[i].vote;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trest_vote -= vote.vote - favorite[i].vote + 1;\n\t\t\t}\n\t\t\tif (rest_vote < 0) return false;\n\t\t}\n\t\telse {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn true;\n}\nbool can_take(const std::vector<Vote> &fav, const std::vector<Vote> &no_chara, const int k, const int l, const int count) {\n\tauto else_count = k - count;\n\tif (else_count >= no_chara.size()) return true;\n\telse {\n\t\treturn can_take(fav, no_chara[no_chara.size() - else_count - 1], l, count);\n\t}\n}\n\nvoid solve() {\n\tint n, m, k, l;\n\tstd::cin >> n >> m >> k >> l;\n\tif (n == 0) return;\n\tstd::vector<Vote> elseC;\n\tstd::vector<Vote> favC;\n\t{\n\t\tstd::map<std::string, int> estimated;\n\t\tstd::string name; int vote;\n\t\tfor (auto i = 0; i < n; ++i) {\n\t\t\tstd::cin >> name >> vote;\n\t\t\testimated.insert(std::make_pair(name, vote));\n\t\t}\n\t\tfor (auto i = 0; i < m; ++i) {\n\t\t\tstd::cin >> name;\n\t\t\tfavC.push_back(Vote{ name, estimated[name] });\n\t\t\testimated.erase(name);\n\t\t}\n\t\tfor (const auto &pair : estimated) {\n\t\t\telseC.push_back(Vote{ pair.first, pair.second });\n\t\t}\n\t\tstd::sort(elseC.begin(), elseC.end());\n\t\tstd::sort(favC.begin(), favC.end());\n\t}\n\tint left = 0;\n\tint right = std::min(m, k);\n\twhile (left < right) {\n\t\tauto mid = (left + right + 1) / 2;\n\t\tif (can_take(favC, elseC, k, l, mid)) {\n\t\t\tleft = mid;\n\t\t}\n\t\telse {\n\t\t\tright = mid - 1;\n\t\t}\n\t}\n\tstd::cout << right << std::endl;\n\tsolve();\n\n}\n\nint main() {\n\tsolve();\n}\n/*\n\n\n\n*/\n\n"
  },
  {
    "language": "C++",
    "code": "#include<deque>\n#include<list>\n#include<map>\n#include<queue>\n#include<set>\n#include<stack>\n#include<vector>\n#include<algorithm>\n#include<string>\n#include<sstream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct C{\n  char s[11];\n};\npair<C,int> a[100000];\nstruct pi{\n  bool operator()(const pair<C,int>& p,const pair<C,int>& q){\n    return strcmp(p.first.s,q.first.s)<0;\n  }\n  bool operator()(const pair<int,int>& p,const pair<int,int>& q){\n    if(0){\n    }else if(p.second>q.second){\n      return 1;\n    }else if(p.second<q.second){\n      return 0;\n    }else{\n      return strcmp(a[p.first].first.s,a[q.first].first.s)<0;\n    }\n  }\n  bool operator()(const pair<C,int>& p,const char q[]){\n    return strcmp(p.first.s,q)<0;\n  }\n};\nint main(){\n  int i;\n  int n,m,k,l;\n  while(scanf(\"%d%d%d%d\",&n,&m,&k,&l),n||m||k||l){\n    for(i=0;i<n;++i)\n      scanf(\"%s%d\",a[i].first.s,&(a[i].second));\n    sort(a,a+n,pi());\n    pair<int,int> b[100000];\n    for(i=0;i<n;++i)\n      b[i]=make_pair(i,a[i].second);\n    sort(b,b+n,pi());\n    int c[100000],d[100000];\n    for(i=0;i<n;++i)\n      d[i]=i;\n    for(i=0;i<m;++i){\n      char s[11];\n      scanf(\"%s\",s);\n      int p=lower_bound(a,a+n,s,pi())-a;\n      c[i]=lower_bound(b,b+n,make_pair(p,a[p].second),pi())-b;\n      d[c[i]]=-1;\n    }\n    sort(c,c+m);\n    remove(d,d+n,-1);\n    int mn=lower_bound(c,c+m,k)-c,mx=min(k,m)+1;\n    for(;mx-mn>1;){\n      int sm=0;\n      for(i=0;i<(mn+mx)/2&&sm<=l;++i){\n\tif(0){\n\t}else if(b[c[i]].second>b[d[k-(mn+mx)/2]].second){\n\t}else if(b[c[i]].second<b[d[k-(mn+mx)/2]].second){\n\t  if(strcmp(a[b[c[i]].first].first.s,a[b[d[k-(mn+mx)/2]].first].first.s)<0){\n\t    sm+=b[d[k-(mn+mx)/2]].second-b[c[i]].second;\n\t  }else{\n\t    sm+=b[d[k-(mn+mx)/2]].second-b[c[i]].second+1;\n\t  }\n\t}else{\n\t  if(c[i]>d[k-(mn+mx)/2]){\n\t    ++sm;\n\t  }\n\t}\n      }\n      if(sm>l)\n\tmx=(mn+mx)/2;\n      else\n\tmn=(mn+mx)/2;\n    }\n    printf(\"%d\\n\",mn);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nll n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(favs[i].name>unfavs[k-x].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote!=c.vote) return vote>c.vote;\n\t\treturn name<c.name;\n\t}\n};\n\nll n,m,k,l;\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return true;\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(unfavs[k-x].name<favs[i].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tChara charas[100010];\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names;\n\t\tREP(i,0,m){\n\t\t\tstring name; cin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\t\n\t\tfavs.clear(); unfavs.clear();\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\t\tsort(favs.begin(),favs.end());\n\t\tsort(unfavs.begin(),unfavs.end());\n\n\t\tint lb=0,ub=min(m,k)+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<map>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nclass chara{\npublic:\n  string name;\n  int vote;\n  bool operator<(const chara &x)const{\n    return (vote==x.vote)?name<x.name:vote>x.vote;}\n};\n\nint main(){\n  int n,m,k,l;\n  chara c[100000];\n\n  while(scanf(\"%d %d %d %d\",&n,&m,&k,&l) &&(n||m||k||l)){\n    char tmp[12];\n    int x;\n    for(int i=0;i<n;i++){\n      scanf(\"%s %d\",tmp,&x);\n      c[i].name = tmp;\n      c[i].vote = x;\n    }\n\n    sort(c,c+n);\n\n    map<string,bool> fav;\n    for(int i=0;i<m;i++){\n      scanf(\"%s\",tmp);\n      string s = tmp;\n      fav[s] = true;\n    }\n\n    int ans = 0;\n    int pos = k-1;\n    int now = k;\n    while(0<=pos){\n      while(fav[c[pos].name])pos--;\n      while(now<n && !fav[c[now].name])now++;\n      if(now==n)break;\n      swap(c[now],c[k]);\n      for(int i=pos;i<k;i++){\n\tl -= c[i].vote-c[i+1].vote;\n\tc[i+1].vote = c[i].vote;\n\tif(c[i].name<c[i+1].name){\n\t  l--;c[i+1].vote++;\n\t}\n\tif(l<0)break;\n\tswap(c[i],c[i+1]);\n      }\n      if(l<0)break;\n    }\n    for(int i=0;i<k;i++)if(fav[c[i].name])ans++;\n     \n    printf(\"%d\\n\",ans);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdlib>\n#include <string>\n#include <cctype>\n#include <cassert>\n#include <map>\n#include <memory>\n#include <memory.h>\nusing namespace std;\n\n#define rep(i,n) for(int i = 0; i < n; i++)\ntypedef long long ll;\ntypedef pair<ll, string> chara;\n\nchara cs[100010];\nmap<string, bool> id;\nvector<chara> fav;\nvector<chara> other;\n\nint main(){\n  ll N, M, L, K;\n  while(cin >> N >> M >> K >> L && (N || M || L || K)){\n    fav.clear();\n    other.clear();\n    id.clear();\n    rep(i, N){\n      cin >> cs[i].second >> cs[i].first;\n      cs[i].first *= -1;\n    }\n    rep(i, M){\n      string name;\n      cin >> name;\n      id[name] = true;\n    }\n    sort(cs, cs + N);\n    rep(i, N){\n      cs[i].first *= -1;\n      if(id[cs[i].second]) fav.push_back(cs[i]);\n      else other.push_back(cs[i]);\n    }\n    int a = other.size();\n    int ub = min(M, K) + 1;\n    int lb = 0;\n    \n    while(ub - lb > 1){\n      int mb = (ub + lb) / 2;\n      int rest = K - mb;\n    \n      if(rest >= a){\n\tlb = mb;\n      }else{\n\tchara last = other[rest];\n\t\n\tll need = 0;\n\trep(i, mb){\n\t  if(last.second < fav[i].second){\n\t    need += max(last.first + 1 - fav[i].first, 0LL);\n\t  }else{\n\t    need += max(last.first - fav[i].first, 0LL);\n\t  }\n\t}\n\tif(need > L) ub = mb;\n\telse lb = mb;\n      }\n    }\n    cout << lb << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\ntemplate<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100000];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tint cost=0,cnt=0,border=k-x;\n\t//while(favs.find(charas[border].name)!=favs.end()&&border<k) ++border;\n\tREP(i,0,border) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border){\n\t\t\t\tcost+=charas[k-x].vote-charas[i].vote;\n\t\t\t\tif(charas[i].name>=charas[k-x].name) ++cost;\n\t\t\t}\n\t\t\tif(i!=border) ++cnt;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt==x) break;\n\t\t}\n\t}\n\n\tdump(cost);\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <map>\nusing namespace std;\n\nbool comp(pair<int,string> p1,pair<int,string> p2) {\n    if(p1.first != p2.first) return p1.first > p2.first;\n    else return p1.second < p2.second;\n}\n\nint main() {\n    int n,m,k,l,x,tf;\n    string name;\n    while(cin>>n>>m>>k>>l, n|m|k|l) {\n        vector<pair<int,string> > input;\n        for(int i=0; i<n; ++i) {\n            cin>>name>>x;\n            input.push_back(make_pair(x,name));\n        }\n\n        map<string,bool> fav;\n        for(int i=0; i<m; ++i) {\n            cin>>name;\n            fav[name] = true;\n        }\n\n        vector<pair<int,string> > nf,fv;\n        for(int i=0; i<input.size(); ++i)\n            if(fav.find(input[i].second) == fav.end()) nf.push_back(input[i]);\n            else fv.push_back(input[i]);\n\n\n        sort(input.begin(), input.end(), comp);\n\n        // cout<<k<<\" \"<<l<<endl;\n        // for(int i=0; i<n; ++i) {\n        //     cout<<input[i].first<<\" \"<<input[i].second;\n        //     if(fav[input[i].second] == true) cout<<\" fav\"<<endl;\n        //     else cout<<endl;\n        // }\n        // cout<<endl;\n\n        sort(nf.begin(), nf.end(), comp);\n        sort(fv.begin(), fv.end(), comp);\n\n        int high = m,low = 0,nfs = nf.size();\n        for(int i=0; i<50; ++i) {\n            int mid = (high+low)/2;\n            if(mid > k) {\n                high = mid;\n                continue;\n            }\n\n            int rem = k-mid;\n            int low_w = nf[rem].first;\n\n//            cout<<mid<<\" \"<<low_w<<endl;\n\n            int ll = l;\n            for(int j=0; j<mid; ++j) {\n                if(fv[j].first > low_w\n                   || (fv[j].first == low_w && fv[j].second < nf[rem].second))\n                    continue;\n                else {\n                    if(fv[j].second < nf[rem].second) {\n                        ll -= low_w - fv[j].first;\n                    }else{\n                        ll -= low_w - fv[j].first + 1;\n                    }\n                }\n            }\n\n            if(ll >= 0) {\n//                cout<<\"ok \"<<mid<<endl;\n                low = mid;\n            }else {\n                high = mid;\n            }\n        }\n\n        //        cout<<\"end \"<<low<<endl;\n\n        int rem = k-high;\n        int low_w = nf[rem].first;\n\n//            cout<<mid<<\" \"<<low_w<<endl;\n\n        int ll = l;\n        for(int j=0; j<high; ++j) {\n            if(fv[j].first > low_w\n               || (fv[j].first == low_w && fv[j].second < nf[rem].second))\n                continue;\n            else {\n                if(fv[j].second < nf[rem].second) {\n                    ll -= low_w - fv[j].first;\n                }else{\n                    ll -= low_w - fv[j].first + 1;\n                }\n            }\n        }\n\n        if(ll >= 0) {\n            cout<<high<<endl;\n        }else {\n            cout<<low<<endl;\n        }\n\n    }\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <map>\n#include <vector>\nusing namespace std;\n\ntypedef long long lli;\n\nint N, M, K, L;\nvector<pair<int, string> > V;\nmap<string, int> m;\nvector<int> H;\n\n\nint needCost(pair<int, string> &a, pair<int, string> &b) {\n  if(a <= b) return 0;\n  return a.first - b.first + ((a.second > b.second) ? 1 : 0);\n}\n\nbool isTrue(int a) {\n  int line = K-a;\n  lli cost = 0;\n  for(int i = 0; i < a; ++i) {\n    cost += needCost(V[H[i]], V[line]);\n    if(H[i] <= line) ++line;\n  }\n  return cost <= L;\n}\n\nint solve() {\n  int l, r, ans;\n  l = 0; r = min(M+1, K+1); ans = 0;\n  while(l < r) {\n    int a = (l+r)/2;\n    if(isTrue(a)) {\n      ans = a;\n      l = a+1;\n    } else {\n      r = a;\n    }\n  }\n  return ans;\n}\n\nint main() {\n  while(cin >> N >> M >> K >> L && (N || M || K || L)) {\n    V.clear();\n    m.clear();\n    H.clear();\n    for(int i = 0; i < N; ++i) {\n      pair<int, string> p;\n      cin >> p.second >> p.first;\n      p.first *= -1;\n      V.push_back(p);\n    }\n    sort(V.begin(), V.end());\n\n    for(int i = 0; i < V.size(); ++i) {\n      m[V[i].second] = i;\n    }\n\n    for(int i = 0; i < M; ++i) {\n      string name;\n      cin >> name;\n      H.push_back(m[name]);\n    }\n    sort(H.begin(), H.end());\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;cin>>N>>M>>K>>L,N;){\n    map<string,int> m;\n    vector<string> names(N);\n    for(int i=0;i<N;i++){\n      string name;\n      int x;\n      cin>>name>>x;\n      m[name]=x;\n      names[i]=name;\n    }\n    vector<string> fav(M);\n    for(auto &e:fav){\n      cin>>e;\n    }\n    set<string> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](string a,string b){\n\treturn (m[a]!=m[b])?m[a]>m[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=L+1;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-m[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=m;\n      vector<string> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-m[e]);\n      }\n      sort(vc.rbegin(),vc.rend());\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      sort(begin(names),end(names),[&](string a,string b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(names[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    cout<<l<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;cin>>N>>M>>K>>L,N;){\n    map<string,int> m;\n    vector<string> names(N);\n    for(int i=0;i<N;i++){\n      string name;\n      int x;\n      cin>>name>>x;\n      m[name]=x;\n      names[i]=name;\n    }\n    vector<string> fav(M);\n    for(auto &e:fav){\n      cin>>e;\n    }\n    set<string> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](string a,string b){\n\treturn (m[a]!=m[b])?m[a]>m[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=2e9;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-m[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=m;\n      vector<string> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-m[e]);\n      }\n      sort(vc.rbegin(),vc.rend());\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      sort(begin(names),end(names),[&](string a,string b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(names[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    cout<<l<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    // SõªãÊklÉÒÁ½èûÜé\n    else if(t==k){\n        int sum=0;\n        int ms=score[0].first;\n        string mname=score[0].second;\n        bool f=false;\n        for(int i = 0; i < t; i++){\n            if(!f&&ranks[favs[i]]==i+1)\n                continue;\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                f=true;\n                ms=score[i].first;\n                mname=score[i].second;\n            }\n            //if(favs[i]==mname)\n            //    continue;\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    else{\n        int sum=0;\n        int ms=score[k-t].first;\n        string mname=score[k-t].second;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        int cnt=1;\n        bool f=false;\n        int lastRank=-1;\n        for(int i = 0; i < t; i++){\n            if(ranks[favs[i]]==i+1){\n                //lastRank=ranks[favs[i]];\n                continue;\n            }\n            //if(!f&&ranks[favs[i]]==k-t+cnt){\n            //    cnt++;\n            //    continue;\n            //}\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            //if(favs[i]==mname)\n            //    continue;\n\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    return false;\n}\n\nvoid solve(){\n    while(cin>>n>>m>>k>>l&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;string name;\n            cin>>name>>s;\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            string name;\n            cin>>name;\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++){\n            favs.push_back(vpis[i].second);\n        }\n\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            cout<<ub<<endl;\n        else\n            cout<<ub-1<<endl;\n    }\n}\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    int bound = k-a;\n    if(bound >= cv.size()) return true;\n    rep(i, a){\n        int tp = cv[bound].first;\n        string name = fav[i].second;\n        if(cv[bound] > fav[i]) {\n            //num++;\n            continue;\n        }\n        // cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > bound) tl--;   \n    }\n    //cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            char c[80];\n            string name;\n            int x;\n            scanf(\"%s %d\", c, &x);\n            name = c;\n//            cin >> name >> x;\n            table[name] = x;\n        }\n        \n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        fav.clear();\n        rep(i, m) {\n            char c[80];\n            string name;\n            scanf(\"%s\", c);\n            name = c;\n            fav.pb(mp(-table[name], name));\n        }\n        sort(all(fav));\n        cv.clear();\n        repit(itr, table) {\n            pair<int, string> tpr = mp(-itr->second, itr->first);\n            bool flag = true;\n            rep(i, fav.size()) if(fav[i] == tpr) flag = false; \n            if(flag) cv.pb(tpr);\n        }\n        sort(all(cv));\n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        // repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n                                  \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct P {\n    int point;\n    string name;\n\n    P() {}\n    P(int point, string name) : point{point}, name{name} {}\n\n    bool operator < (const P& p) const {\n        if (point != p.point) {\n            return point > p.point;            \n        }\n        return name < p.name;\n    }\n};\n\nbool c(int X, int K, int L, const vector<P>& info, const vector<int>& p)\n{\n    int sum = 0;\n    int rnk = K - X;\n    for (int i = 0; i < X; i++) {\n        if (p[i] < rnk) {\n            rnk = min(rnk + 1, K);\n            continue;\n        } \n        if (info[p[i]].name < info[rnk].name) {        \n            sum += info[rnk].point - info[p[i]].point;\n        } else {\n            sum += info[rnk].point - info[p[i]].point + 1;\n        }\n        if (sum > L) return 0;\n    }\n    return (sum <= L);\n}\n\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    int N, M, K, L;\n    while (cin >> N >> M >> K >> L, N > 0) {\n        string name;\n        int point;\n        vector<P> info;\n        for (int i = 0; i < N; i++) {\n            cin >> name >> point;\n            info.emplace_back(point, name);\n        }\n\n        sort(info.begin(), info.end());\n        \n        map<string, int> num;\n        for (int i = 0; i < N; i++) {\n            num[info[i].name] = i;\n        }\n        \n        vector<int> p(M);\n        string fav;\n        for (int i = 0; i < M; i++) {\n            cin >> fav;\n            p[i] = num[fav];\n        }\n\n        sort(p.begin(), p.end());\n\n        int l = 0, r = min(K, M);\n        while (r - l > 1) {\n            int mid = (l + r) / 2;\n            if (c(mid, K, L, info, p)) {\n                l = mid;\n            } else {\n                r = mid;\n            }\n        }\n\n        if (c(r, K, L, info, p)) {\n            cout << r << endl;\n        } else {\n            cout << l << endl;\n        }\n    }        \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <map>\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct data{\n  string name;\n  int hyou;\n  bool fav;\n  data(const char *nm, int hy) :\n    name(nm), hyou(hy), fav(false) {}\n};\n\nbool operator < (const data &lhs, const data &rhs){\n  if(lhs.hyou != rhs.hyou)\n    return lhs.hyou > rhs.hyou;\n  return lhs.name < rhs.name;\n}\n\nint main(){\n  int n, m, k, l;\n\n  while(scanf(\"%d%d%d%d\", &n, &m, &k, &l),\n        n + m + k + l){\n    vector<data> v; v.reserve(n);\n    map<string, int> memo;\n    vector<int> favs(m);\n    REP(i,n){\n      char buff[200]; int h;\n      scanf(\"%s%d\", buff, &h);\n      v.push_back(data(buff, h));\n    }\n\n    sort(v.begin(), v.end());\n\n    REP(i,n)\n      memo[v[i].name] = i;\n\n    REP(i,m){\n      char buff[200];\n      scanf(\"%s\", buff);\n      favs[i] = memo[buff];\n      v[favs[i]].fav = true;\n    }\n\n    sort(favs.begin(), favs.end());\n\n    int low  = 0;\n    int high = m;\n\n    while(low <= high){\n      int mid = (low + high) / 2;\n      bool ok = false;\n\n      int cnt = 0;\n      int i;\n      for(i = 0; i < n; i++){\n        if(k - i <= mid - cnt && !v[i].fav) break;\n        if(v[i].fav) cnt++;\n      }\n\n      if(i == n){\n        ok = true;\n      }else{\n        const data &border = v[i];\n\n        ll need = 0;\n\n        REP(j,mid){\n          int id = favs[j];\n          if(id < i) continue;\n          const data &now = v[id];\n          if(now.name < border.name){\n            need += border.hyou - now.hyou;\n          }else{\n            need += border.hyou - now.hyou + 1;\n          }\n        }\n\n        if(need <= l) ok = true;\n        //printf(\"%d: %d (%d) %lld\\n\", mid, ok, i, need);\n      }\n\n      if(ok){\n        low  = mid + 1;\n      }else{\n        high = mid - 1;\n      }\n    }\n\n    printf(\"%d\\n\", high);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\nvector<int> favsRanks;\nvector<int> favsDns;\nchar buf[1000];\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            //nint rfi=ranks[favs[i]];\n            int rfi=favsRanks[i];\n            if(!f&&(k-rfi)>=t-i-1){\n                continue;\n            }\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-favsDns[i]+ms;\n            //int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(cin>>n>>m>>k>>l&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        favsRanks.clear();\n        favsDns.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            string name;\n            //scanf(\"%s %d\\n\",buf,&s);\n            cin>>name>>s;\n            //string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            //scanf(\"%s\",&buf);\n            //string name(buf);\n            string name;\n            cin>>name;\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++){\n            favs.push_back(vpis[i].second);\n            favsRanks.push_back(ranks[vpis[i].second]);\n            favsDns.push_back(dns[vpis[i].second]);\n        }\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tif(x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\t//REP(i,0,min(border+1,k)) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav>=k-x){\n\t\t\tborder=i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(charas[i].vote==charas[border].vote) cost+=charas[i].name<charas[border].name;\n\t\t\tcost+=max(0,charas[border].vote-charas[i].vote);\n\t\t\t++cnt_fav;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;scanf(\"%d %d %d %d\",&N,&M,&K,&L),N;){\n    map<string,int> m;\n    for(int i=0;i<N;i++){\n      char name[11];\n      int x;\n      scanf(\"%s %d\",name,&x);\n      m[name]=x;\n    }\n    map<string,int> idx;\n    vector<int> votes;\n    for(auto e:m){\n      auto s=idx.size();\n      idx[e.first]=s;\n      votes.push_back(e.second);\n    }\n    vector<int> fav(M);\n    for(auto &e:fav){\n      char name[11];\n      scanf(\"%s\",name);\n      e=idx[name];\n    }\n    set<int> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](int a,int b){\n\treturn (votes[a]!=votes[b])?votes[a]>votes[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=2e9+9;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-votes[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=votes;\n      vector<int> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-votes[e]);\n      }\n      sort(vc.rbegin(),vc.rend());\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      vector<int> rank(N);\n      iota(begin(rank),end(rank),0);\n      sort(begin(rank),end(rank),[&](int a,int b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(rank[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    printf(\"%d\\n\",l);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <iterator>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n\nusing namespace std;\n\n#define dump(n) cerr<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();++i)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\ntypedef pair<int,string> pis;\n\nbool comp(const pii& a,const pii& b)\n{\n\treturn a.first==b.first?a.second<b.second:a.first>b.first;\n}\n\nbool ok(vector<pii>& favs,vector<pii>& oths,int k,int l,int num)\n{\n\tint need=0;\n\trep(i,num){\n\t\tif(favs[i].first>oths[k-num].first)\n\t\t\tcontinue;\n\t\telse{\n\t\t\tint diff=oths[k-num].first-favs[i].first;\n\t\t\tbool after=favs[i].second>oths[k-num].second;\n\t\t\tneed+=diff+after;\n\t\t}\n\t}\n\treturn need<=l;\n}\n\nvoid solve(vs& names,vi& votes,vs& fnames,int k,int l)\n{\n\tint n=names.size(),m=fnames.size();\n\t\n\tvector<pii> favs,oths; // vote,id\n\t{\n\t\tmap<string,int> ma;\n\t\trep(i,n)\n\t\t\tma[names[i]]=0;\n\t\t{int i=0; foreach(it,ma)\n\t\t\tit->second=i++;\n\t\t}\n\t\tvi isfav(n);\n\t\trep(i,m)\n\t\t\tisfav[ma[fnames[i]]]=1;\n\t\trep(i,n){\n\t\t\tvector<pii>& chrs=isfav[ma[names[i]]]?favs:oths;\n\t\t\tchrs.push_back(mp(votes[i],ma[names[i]]));\n\t\t}\n\t}\n\t\n\tsort(allof(favs),comp);\n\tsort(allof(oths),comp);\n\t\n\tint left=0,right=1+min(m,k);\n\twhile(right-left>1){\n\t\tint mid=(left+right)/2;\n\t\tif(ok(favs,oths,k,l,mid))\n\t\t\tleft=mid;\n\t\telse\n\t\t\tright=mid;\n\t}\n\t\n\tcout<<left<<endl;\n}\n\nint main()\n{\n\tfor(int n,m,k,l;scanf(\"%d%d%d%d\",&n,&m,&k,&l),n|m|k|l;){\n\t\tvs names(n);\n\t\tvi votes(n);\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar tmp[11];\n\t\t\tscanf(\"%s%d\",tmp,&votes[i]);\n\t\t\tnames[i]=tmp;\n\t\t}\n\t\tvs favs(m);\n\t\trep(i,m){\n\t\t\tchar tmp[11];\n\t\t\tscanf(\"%s\",tmp);\n\t\t\tfavs[i]=tmp;\n\t\t}\n\t\tsolve(names,votes,favs,k,l);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\nchar buf[1000];\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            int rfi=ranks[favs[i]];\n            if(!f&&(k-rfi)>=t-i-1){\n                continue;\n            }\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++)\n            favs.push_back(vpis[i].second);\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\n\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <map>\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct data{\n  string name;\n  int hyou;\n  bool fav;\n  data(const char *nm, int hy) :\n    name(nm), hyou(hy), fav(false) {}\n};\n\nbool operator < (const data &lhs, const data &rhs){\n  if(lhs.hyou != rhs.hyou)\n    return lhs.hyou > rhs.hyou;\n  return lhs.name < rhs.name;\n}\n\nint main(){\n  int n, m, k, l;\n\n  while(scanf(\"%d%d%d%d\", &n, &m, &k, &l),\n        n + m + k + l){\n    vector<data> v; v.reserve(n);\n    map<string, int> memo;\n    vector<int> favs(m);\n    REP(i,n){\n      char buff[200]; int h;\n      scanf(\"%s%d\", buff, &h);\n      v.push_back(data(buff, h));\n    }\n\n    sort(v.begin(), v.end());\n\n    REP(i,n)\n      memo[v[i].name] = i;\n\n    REP(i,m){\n      char buff[200];\n      scanf(\"%s\", buff);\n      favs[i] = memo[buff];\n      v[favs[i]].fav = true;\n    }\n\n    sort(favs.begin(), favs.end());\n\n    int low  = 0;\n    int high = m + 1;\n\n    while(low + 1 < high){\n      int mid = (low + high) / 2;\n      bool ok = false;\n\n      int cnt = 0;\n      int i;\n      for(i = 0; i < n; i++){\n        if(k - i == mid - cnt && !v[i].fav) break;\n        if(v[i].fav) cnt++;\n      }\n\n      if(i == n){\n        ok = true;\n      }else{\n        const data &border = v[i];\n\n        ll need = 0;\n\n        REP(j,mid){\n          int id = favs[j];\n          if(id < i) continue;\n          const data &now = v[id];\n          if(now.name < border.name){\n            need += border.hyou - now.hyou;\n          }else{\n            need += border.hyou - now.hyou + 1;\n          }\n        }\n\n        if(need <= l) ok = true;\n        //printf(\"%d: %d (%d) %lld\\n\", mid, ok, i, need);\n      }\n\n      if(ok){\n        low  = mid;\n      }else{\n        high = mid;\n      }\n    }\n\n    printf(\"%d\\n\", low);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, ll> table;\nvector<pair<ll, string> > fav;\nvector<pair<ll, string> > cv;\nbool C(int a){\n    ll tl = l;\n    int num = 0;\n    if(cv.size() <= k-a) return false;\n    rep(i, a){\n        ll tp = cv[k-a].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] > fav[i]) {\n            //num++;\n            continue;\n        }\n        // cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > k-a) tl--;    \n    }\n    //cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            ll x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        \n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.pb(mp(-table[name], name));\n        }\n        sort(all(fav));\n        cv.clear();\n        repit(itr, table) {\n            pair<ll, string> tpr = mp(-itr->second, itr->first);\n            bool flag = true;\n            rep(i, fav.size()) if(fav[i] == tpr) flag = false; \n            if(flag) cv.pb(tpr);\n        }\n        sort(all(cv));\n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        // repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n                                  \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nll n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(favs[i].name>unfavs[k-x].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\t//sort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\t\tsort(favs.begin(),favs.end());\n\t\tsort(unfavs.begin(),unfavs.end());\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cctype>\n#include <cmath>\n#include <memory.h>\n#include <cassert>\n\nusing namespace std;\n\n\n#define all(c) ((c).begin()), ((c).end())\n#define debug(c) cerr << \"> \" << #c << \" = \" << (c) << endl;\n#define iter(c) __typeof((c).begin())\n#define present(c, e) ((c).find((e)) != (c).end())\n#define cpresent(c, e) (find(all(c), (e)) != (c).end())\n#define tr(i, c) for (iter(c) i = (c).begin(); i != (c).end(); i++)\n#define rep(i, n) for (int i = 0; i < (int)(n); i++)\n#define REP(i, a, b) for (int i = (int)(a); i <= (int)(b); i++)\n\n#define mp make_pair\n#define fst first\n#define snd second\n#define pb push_back\n\n\nconst double EPS = 1e-10;\n\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\ntypedef complex<double> P;\n\n\nbool comp (const pair<string, int> &a, const pair<string, int> &b) {\n\tif (a.snd > b.snd) return true;\n\tif (a.snd < b.snd) return false;\n\treturn a.fst < b.fst;\n}\n\nint main() {\n\tfor(int N, M, K, L; scanf(\"%d %d %d %d\", &N, &M, &K, &L), (N | M | K | L) != 0; ) {\n\t\tvector<pair<string, int> > ns;\n\t\tmap<string, int> nx;\n\t\trep(i, N) {\n\t\t\tchar name[20];\n\t\t\tint x;\n\t\t\tscanf(\"%s %d\", name, &x);\n\t\t\tns.pb(mp(name, x));\n\t\t\tnx[string(name)] = x;\n\t\t}\n\t\tset<string> favs;\n\t\tvector<pair<string, int> > fx;\n\t\tvector<pair<string, int> > nfx;\n\t\trep(i, M) {\n\t\t\tchar name[20];\n\t\t\tscanf(\"%s\", name);\n\t\t\tfavs.insert(name);\n\t\t\tfx.pb(mp(name, nx[string(name)]));\n\t\t}\n\t\t\n\t\trep(i, N) if (!present(favs, ns[i].fst)) {\n\t\t\tnfx.pb(ns[i]);\n\t\t}\n\t\t\n\t\tsort(all(fx), comp);\n\t\tsort(all(nfx), comp);\n\t\t\n//\t\ttr(it, ns) cout << it->fst << \" \" << it->snd << endl;\n\t\t\n\t\t\n\t\tint lb = 0, ub = min(M, K) + 1;\n\t\tint mi;\n\t\tll l = L;\n\t\trep(loop, 20) {\n\t\t\tmi = (lb + ub) / 2;\n\t\t\tint r = K - mi;\n\t\t\tif (r >= nfx.size()) {\n\t\t\t\tlb = mi;\n\t\t\t\tl = L;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tl = L;\n\t\t\trep(i, mi) {\n\t\t\t\tif (fx[i].snd > nfx[r].snd) continue;\n\t\t\t\tif (fx[i].snd < nfx[r].snd) {\n\t\t\t\t\tl -= nfx[r].snd - fx[i].snd;\n\t\t\t\t}\n\t\t\t\tif (fx[i].fst > nfx[r].fst) l--;\n\t\t\t}\n\t\t\t\n\t\t\tif (l < 0) {\n\t\t\t\tub = mi;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlb = mi;\n\t\t\t}\n\t\t}\n\t\tif (l < 0) mi = 0;\n\t\tcout << mi << endl;\n\t\t\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, ll> table;\nvector<pair<ll, string> > fav;\nvector<pair<ll, string> > cv;\nbool C(int a){\n    ll tl = l;\n    int num = 0;\n    rep(i, a){\n        ll tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] > fav[i]) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n                \n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            ll x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n//        repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n        while(lower > 0 && !C(lower)) lower--;\n        while(lower <= min(k, m) && C(lower)) lower++;\n        lower--;\n                          \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<algorithm>\n#include<iomanip>\n#include<vector>\n#include<cassert>\n#include<set>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,ll> pil;\ntypedef pair<string,ll> psl;\n\nbool cmp(const pil &a,const pil &b){\n  if (a.second != b.second)return a.second > b.second;\n  return a.first < b.first;\n}\n\nbool isPossible(int n,vector<pil> &in,int m,vector<pil> &fav,int lim,int hyou,int num){\n  if (in.size() + num <= lim)return true;\n  int fromIn=lim-num;\n  ll req=0;\n  for(int i=0;i<num;i++){\n    if (in[fromIn].second < fav[i].second)continue;\n    req+=in[fromIn].second-fav[i].second;\n    if (in[fromIn].first < fav[i].first)req++;\n  }\n  return req <= hyou;\n}\n\nint solve(int n,vector<pil> &in,int m,vector<pil> &fav,int lim,int hyou){\n  int ret=0;\n  int l=0,r=min(lim,(int)fav.size());\n  while(l <= r){\n    int mid = (l+r)/2;\n    bool isok=isPossible(n,in,m,fav,lim,hyou,mid);\n    if (isok)ret=mid,l=mid+1;\n    else r=mid-1;\n  }\n  return ret;\n}\n\nmain(){\n  int n,m,k,l;\n  while(cin>>n>>m>>k>>l){\n    if (n == 0 && m == 0 && k == 0 && l == 0)break;\n    vector<string> name(n);\n    vector<psl> in(n);\n    vector<pil> all,fav;\n    map<string,int> M;\n    set<int> S;\n    for(int i=0;i<n;i++){\n      cin>>in[i].first>>in[i].second;\n      name[i]=in[i].first;\n    }\n    sort(name.begin(),name.end());\n    for(int i=0;i<n;i++){\n      M[name[i]]=i;\n    }\n\n    for(int i=0;i<m;i++){\n      string tmp;\n      cin>>tmp;\n      S.insert(M[tmp]);\n    }\n\n    for(int i=0;i<n;i++){\n      int id = M[in[i].first];\n      if (S.find(id) == S.end())all.push_back(make_pair(id,in[i].second));\n      else fav.push_back(make_pair(id,in[i].second));\n    }\n    sort(all.begin(),all.end(),cmp);\n    sort(fav.begin(),fav.end(),cmp);\n    int ans = solve(n,all,m,fav,k,l);\n    cout << ans << endl;\n    /*\n   //check\n    int tar=k-ans;\n    int req=0;\n    if (tar >= all.size()){\n    }else {\n      for(int i=0;i<ans;i++){\n\tif (all[tar].second < fav[i].second)continue;\n\tint tmp=all[tar].second-fav[i].second;\n\treq+=tmp;\n\tfav[i].second+=tmp;\n\tif (all[tar].first < fav[i].first)req++,fav[i].second++;\n      }\n    }\n\n    //cout << req <<\" \" << l << endl;\n    assert(req <= l);\n    if (ans < fav.size()){\n      fav[ans].second+=(l-req);\n    }\n    vector<pil> a;\n    for(int i=0;i<all.size();i++)a.push_back(all[i]);\n    for(int i=0;i<fav.size();i++)a.push_back(fav[i]);\n\n    sort(a.begin(),a.end(),cmp);\n    */\n    /*\n    for(int i=0;i<a.size();i++){\n      if (i < k)cout <<\"ok \" ;\n      else cout <<\"ng \";\n      if (S.find(a[i].first) != S.end())cout <<\"*\";\n      else cout << \" \";\n      cout << name[a[i].first] <<\" \"<< a[i].first <<\" \"<< a[i].second << endl;\n    }\n    */\n    /*\n    int cnt=0;\n    for(int i=0;i<k;i++){\n      if (S.find(a[i].first) != S.end())cnt++;\n    }\n    //cout <<\"compare answer \" << ans <<\" \"<< cnt << endl;\n    assert(ans == cnt);\n    */\n    /*\n    for(int i=0;i<n;i++)cout << name[i] << endl;\n    cout <<\"Not favor\" << endl;\n    for(int i=0;i<all.size();i++){\n      cout << name[all[i].first] <<\" \" <<all[i].first <<\" \" <<  all[i].second << endl;\n    }\n    cout <<\"favor \" << endl;\n    for(int i=0;i<fav.size();i++){\n      cout << name[fav[i].first] <<\" \" <<fav[i].first <<\" \" <<  fav[i].second << endl;\n    }\n    */\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <set>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iterator>\n#include <bitset>\nusing namespace std;\n\n\nnamespace{\ntypedef long long ll;\ntypedef pair<int,int> pii;\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\nvoid mainmain(){\n\tint N,M,K,L;\n\twhile(scanf(\"%d %d %d %d\",&N,&M,&K,&L),N||M||K||L){\n\t\tvector<pair<int,string>> in1(N);\n\t\trep(i,N){\n\t\t\tcin>>in1[i].S;\n\t\t\tscanf(\"%d\",&in1[i].F);\n\t\t\tin1[i].F*=-1;\n\t\t}\n\t\tset<string> se;\n\t\tstring tmps;\n\t\trep(i,M){\n\t\t\tcin>>tmps;\n\t\t\tse.insert(tmps);\n\t\t}\n\t\tsort(ALL(in1));\n\t\tpriority_queue<pii> pq1;\n\t\tpriority_queue<pii> pq2;\n\t\tpriority_queue<pii> pq3;\n\t\trep(i,in1.size()){\n\t\t\tif(i<K){\n\t\t\t\tif(se.find(in1[i].S)!=se.end()){\n\t\t\t\t\tpq2.push(mkp(in1[i].F,-i));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tpq1.push(mkp(in1[i].F,-i));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(se.find(in1[i].S)!=se.end()){\n\t\t\t\t\tpq3.push(mkp(-in1[i].F,-i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile(1){\n\t\t\tif(pq3.empty()){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pq1.empty()){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpii top3=pq3.top();\n\t\t\tpii top1=pq1.top();\n\t\t\tpii top2;\n\t\t\tbool f2=!pq2.empty();\n\t\t\tif(f2) top2=pq2.top();\n\t\t\tpq3.pop();\n\t\t\tL-=-top1.F-top3.F;\n\t\t\ttop3.F=-top1.F;\n\t\t\tif(in1[-top3.S].S>in1[-top1.S].S){\n\t\t\t\ttop3.F++;\n\t\t\t\tL--;\n\t\t\t}\n\t\t\tif(L<0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttop3.F*=-1;\n\t\t\tif(!f2||top2.F<top1.F||(top2.F==top1.F&&in1[-top2.S].S<in1[-top1.S].S)){\n\t\t\t\ttop1.F*=-1;\n\t\t\t\tpq1.pop();\n\t\t\t\tpq2.push(top3);\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttop2.F*=-1;\n\t\t\t\tpq3.push(top2);\n\t\t\t\tpq2.pop();\n\t\t\t\tpq2.push(top3);\n\t\t\t}\n\t\t}\n\t\tcout<<pq2.size()<<endl;\n\t}\n}\n\n\n\n}\nmain() try{\n    mainmain();\n}\ncatch(...){\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<map>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nclass chara{\npublic:\n  string name;\n  int vote;\n  bool operator<(const chara &x)const{\n    return (vote==x.vote)?(name<x.name):(vote>x.vote);\n  }\n};\n\nint main(){\n  int n,m,k,l;\n  chara c[100000];\n\n  while(scanf(\"%d %d %d %d\",&n,&m,&k,&l) &&(n||m||k||l)){\n    char tmp[12];\n    int x;\n    for(int i=0;i<n;i++){\n      scanf(\"%s %d\",tmp,&x);\n      c[i].name = tmp;\n      c[i].vote = x;\n    }\n\n    sort(c,c+n);\n\n    map<string,bool> fav;\n    for(int i=0;i<m;i++){\n      scanf(\"%s\",tmp);\n      string s = tmp;\n      fav[s] = true;\n    }\n\n    int ans = 0;\n    int pos = k-1;\n    int now = k;\n    for(;;){\n      while(0<=pos && fav[c[pos].name])pos--;\n      if(pos<0)break;\n\n      while(now<n && !fav[c[now].name])now++;\n      if(now==n)break;\n\n      swap(c[now],c[k]);\n      for(int i=pos;i<k;i++){\n\tl -= c[i].vote-c[i+1].vote;\n\tc[i+1].vote = c[i].vote;\n\tif(c[i].name<c[i+1].name){\n\t  l--;c[i+1].vote++;\n\t}\n\tif(l<0)break;\n\tswap(c[i],c[i+1]);\n      }\n      if(l<0)break;\n    }\n\n    for(int i=0;i<k;i++)if(fav[c[i].name])ans++;\n     \n    printf(\"%d\\n\",ans);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string>\n#include<map>\nusing namespace std;\nchar in[110];\nint e[110000];\nint f[110000];\nint v[110000];\npair<int,int> t[110000];\npair<int,int> s[110000];\nint main(){\n\tint a,b,c,d;\n\twhile(scanf(\"%d%d%d%d\",&a,&b,&c,&d),a){\n\t\tmap<string,int>m;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tscanf(\"%s%d\",in,e+i);\n\t\t\tstring tmp=in;\n\t\t\tm[tmp]=i;\n\t\t\tv[i]=0;\n\t\t}\n\t\tfor(int i=0;i<b;i++){\n\t\t\tscanf(\"%s\",in);\n\t\t\tstring tmp=in;\n\t\t\tf[i]=m[tmp];\n\t\t\tv[f[i]]=1;\n\t\t}\n\t\tint sz=0;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tif(!v[i])s[sz++]=make_pair(-e[i],i);\n\t\t}\n\t\tstd::sort(s,s+sz);\n\t\tfor(int i=0;i<b;i++)t[i]=make_pair(-e[f[i]],f[i]);\n\t\tstd::sort(t,t+b);\n\t\tint L=0;\n\t\tint R=min(b,c)+1;\n\t\twhile(L+1<R){\n\t\t\tint M=(L+R)/2;\n\t\t\tint rem=c-M;\n\t\t\tlong long pr=0;\n\t\t\tfor(int i=0;i<M;i++){\n\t\t\t\tint tmp=t[i].first-s[rem].first;\n\t\t\t\tif(t[i].second>s[rem].second)tmp++;\n\t\t\t\tpr+=max(0,tmp);\n\t\t\t}\n\t\t//\tprintf(\"%d: %lld\\n\",M,pr);\n\t\t\tif(pr<=d)L=M;\n\t\t\telse R=M;\n\t\t}\n\t\tprintf(\"%d\\n\",L);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    rep(i, a){\n        int tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] >= fav[i]) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n                \n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            int x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n//        repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n       \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    for(;;){\n        int n, m, k, l;\n        cin >> n >> m >> k >> l;\n        if(n == 0)\n            return 0;\n\n        vector<pair<int, string> > x(n);\n        map<string, int> index;\n        for(int i=0; i<n; ++i){\n            cin >> x[i].second >> x[i].first;\n            x[i].first *= -1;\n        }\n        sort(x.begin(), x.end());\n        for(int i=0; i<n; ++i){\n            x[i].first *= -1;\n            index[x[i].second] = i;\n        }\n\n        vector<bool> fav(n, false);\n        for(int i=0; i<m; ++i){\n            string s;\n            cin >> s;\n            fav[index[s]] = true;\n        }\n\n        if(n == m || n == k){\n            cout << m << endl;\n            continue;\n        }\n\n        int a = 0;\n        int b = min(m, k);\n        while(a < b){\n            int c = (a + b + 1) / 2;\n\n            int tmp = k - c;\n            int i = -1;\n            while(tmp >= 0){\n                ++ i;\n                if(!fav[i])\n                    -- tmp;\n            }\n\n            long long rest = l;\n            tmp = c;\n            int j = -1;\n            while(tmp > 0){\n                ++ j;\n                if(fav[j]){\n                    if(x[j].second < x[i].second)\n                        rest -= max(0, x[i].first - x[j].first);\n                    else\n                        rest -= max(0, x[i].first - x[j].first + 1);\n\n                    -- tmp;\n                }\n            }\n\n            if(rest >= 0)\n                a = c;\n            else\n                b = c - 1;\n        }\n\n        cout << a << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name>c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tif(x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\t//REP(i,0,min(border+1,k)) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav==k-x+1){\n\t\t\tborder=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border) cost+=charas[border].vote-charas[i].vote+(charas[i].name>=charas[border].name);\n\t\t\t++cnt_fav;\n\t\t\tdump(i);\n\t\t\tdump(cost);\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\nvector<int> favsRanks;\nvector<int> favsDns;\nchar buf[1000];\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            //nint rfi=ranks[favs[i]];\n            int rfi=favsRanks[i];\n            if(!f&&(k-rfi)>=t-i-1){\n                continue;\n            }\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-favsDns[i]+ms;\n            //int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        favsRanks.clear();\n        favsDns.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++){\n            favs.push_back(vpis[i].second);\n            favsRanks.push_back(ranks[vpis[i].second]);\n            favsDns.push_back(dns[vpis[i].second]);\n        }\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    for(;;){\n        int n, m, k, l;\n        cin >> n >> m >> k >> l;\n        if(n == 0)\n            return 0;\n\n        vector<pair<int, string> > x(n);\n        map<string, int> index;\n        for(int i=0; i<n; ++i){\n            cin >> x[i].second >> x[i].first;\n            x[i].first *= -1;\n        }\n        sort(x.begin(), x.end());\n        for(int i=0; i<n; ++i){\n            x[i].first *= -1;\n            index[x[i].second] = i;\n        }\n\n        vector<bool> fav(n, false);\n        for(int i=0; i<m; ++i){\n            string s;\n            cin >> s;\n            fav[index[s]] = true;\n        }\n\n        if(n == m || n == k){\n            cout << min(m, k) << endl;\n            continue;\n        }\n\n        int a = 0;\n        int b = min(m, k);\n        while(a < b){\n            int c = (a + b + 1) / 2;\n\n            int tmp = k - c;\n            int i = -1;\n            while(tmp >= 0){\n                ++ i;\n                if(!fav[i])\n                    -- tmp;\n            }\n\n            long long rest = l;\n            tmp = c;\n            int j = -1;\n            while(tmp > 0){\n                ++ j;\n                if(fav[j]){\n                    if(x[j].second < x[i].second)\n                        rest -= max(0, x[i].first - x[j].first);\n                    else\n                        rest -= max(0, x[i].first - x[j].first + 1);\n\n                    -- tmp;\n                }\n            }\n\n            if(rest >= 0)\n                a = c;\n            else\n                b = c - 1;\n        }\n\n        cout << a << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct BinaryIndexedTree\n{\n  vector< int > data;\n\n  BinaryIndexedTree(int sz)\n  {\n    data.assign(++sz, 0);\n  }\n\n  int sum(int k)\n  {\n    int ret = 0;\n    for(++k; k > 0; k -= k & -k) ret += data[k];\n    return (ret);\n  }\n\n  void add(int k, int x)\n  {\n    for(++k; k < data.size(); k += k & -k) data[k] += x;\n  }\n};\n\nint main()\n{\n  long long N, M, K, L;\n  char buff[12];\n\n  while(scanf(\"%lld %lld %lld %lld\", &N, &M, &K, &L), N) {\n\n    vector< pair< int, string > > data(N);\n    vector< int > toint(N);\n    vector< string > priority(N);\n    unordered_map< string, int > vv;\n    vector< bool > like(N, false);\n\n    for(int i = 0; i < N; i++) {\n      int x;\n      scanf(\" %s %d\", buff, &x);\n      data[i] = make_pair(-x, buff);\n      priority[i] = data[i].second;\n    }\n    sort(begin(priority), end(priority));\n    sort(begin(data), end(data));\n\n\n    for(int i = 0; i < N; i++) {\n      toint[i] = lower_bound(begin(priority), end(priority), data[i].second) - begin(priority);\n      vv[data[i].second] = i;\n      data[i].first *= -1;\n    }\n\n    for(int i = 0; i < M; i++) {\n      scanf(\"%s\", buff);\n      like[vv[buff]] = true;\n    }\n\n    BinaryIndexedTree bit(N);\n\n    long long right = K, bottom = 0, up = 0;\n    long long sz = 0, ret = 0, pre = -1;\n\n    for(int i = 0; i < K; i++) {\n      ret += like[i];\n    }\n\n    for(int i = K - 1; i >= 0; i--) {\n      if(!like[i]) {\n        while(right < N && !like[right]) ++right;\n        if(right == N) break;\n\n        if(data[i].first == data[pre].first) {\n//          cerr << \"foo\" << endl;\n// ???????????¨???????????????????????????\n\n        }\n        L -= data[i].first - data[right].first;\n        if(~pre) {\n          L -= bottom * (data[i].first - data[pre].first);\n          L -= up * (data[i].first - data[pre].first - 1);\n        }\n//        assert(bottom * (data[i].first - data[pre].first) >= 0);\n//        assert(up * (data[i].first - data[pre].first - 1) >= 0);\n\n        bit.add(toint[right], 1);\n\n        bottom = bit.sum(toint[i]);\n        up = bit.sum(N - 1) - bottom;\n        pre = i;\n        sz = 0;\n\n        L -= up;\n\n\n        if(L < 0) break;\n        ++ret;\n        ++right;\n      } else {\n        if(i == 0) break;\n        bit.add(toint[i], 1);\n        L -= ++sz * (data[i - 1].first - data[i].first);\n      }\n    }\n\n    printf(\"%lld\\n\", ret);\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name>c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tif(x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\t//REP(i,0,min(border+1,k)) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav>=k-x){\n\t\t\tborder=i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(charas[i].vote==charas[border].vote) cost+=charas[i].name>charas[border].name;\n\t\t\tcost+=max(0,charas[border].vote-charas[i].vote);\n\t\t\t++cnt_fav;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\nchar buf[1000];\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            int rfi=ranks[favs[i]];\n            if(!f&&(k-rfi)>=t-i-1){\n                continue;\n            }\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++)\n            favs.push_back(vpis[i].second);\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\nstruct Chara{\n  string name;\n  int vote;\n  bool operator < (const Chara& c) const {\n    if(vote != c.vote) return vote > c.vote;\n    return name < c.name;\n  }\n};\n\nint main(){\n  int N, M, K, L;\n  while(cin >> N >> M >> K >> L && N){\n    Chara cs[100000];\n    REP(i, N){\n      char s[11];\n      scanf(\"%s %d\", s, &cs[i].vote);\n      cs[i].name = string(s);\n    }\n    sort(cs, cs + N);\n    set<string> favs;\n    REP(i, M){\n      char s[11];\n      scanf(\"%s\", s);\n      favs.insert(string(s));\n    }\n    int lb = 0, ub = min(M + 1, K + 1); // \n    while(lb + 1 < ub){\n      int X = (ub + lb) / 2; // X 人\n      ll S = 0;\n      int idx = K - X;\n      int Rest = X;\n      for(int i = 0; i < N; i++) if(Rest > 0 && favs.count(cs[i].name)){\n        if(i > idx){\n          S += cs[idx].vote - cs[i].vote;\n          if(cs[idx].name < cs[i].name) S++;\n        }else{\n          idx++;\n        }\n        if(S > L) break;\n        Rest--;\n      }\n      if(S <= L) {\n        lb = X;\n      }else{\n        ub = X;\n      }\n    }\n    cout << lb << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav==k-x+1){\n\t\t\tborder=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(cnt_fav!=k-x+1) return false;\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border) cost+=charas[border].vote-charas[i].vote+(charas[i].name>charas[border].name);\n\t\t\t++cnt_fav;\n\t\t\tdump(i);\n\t\t\tdump(cost);\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            if(!f&&(k-ranks[favs[i]])>=t-i-1)\n                continue;\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            char buf[1000];\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            char buf[2000];\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++)\n            favs.push_back(vpis[i].second);\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote!=c.vote) return vote>c.vote;\n\t\treturn name<c.name;\n\t}\n};\n\nll n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\tdump(x);\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(unfavs[k-x].name<favs[i].name));\n\t\t//if(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\t\tsort(favs.begin(),favs.end());\n\t\tsort(unfavs.begin(),unfavs.end());\n\n\t\tint lb=0,ub=min(m,k)+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;cin>>N>>M>>K>>L,N;){\n    map<string,int> m;\n    vector<string> names(N);\n    for(int i=0;i<N;i++){\n      string name;\n      int x;\n      cin>>name>>x;\n      m[name]=x;\n      names[i]=name;\n    }\n    vector<string> fav(M);\n    for(auto &e:fav){\n      cin>>e;\n    }\n    set<string> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](string a,string b){\n\treturn (m[a]!=m[b])?m[a]>m[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=1e9;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-m[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=m;\n      vector<string> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-m[e]);\n      }\n      sort(vc.rbegin(),vc.rend());\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      sort(begin(names),end(names),[&](string a,string b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(names[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    cout<<l<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <map>\n#include <utility>\n\n#define REP(i, a, b) for (int i = int(a); i < int(b); i++)\n#ifdef _DEBUG_\n#define dump(val) cerr << __LINE__ << \":\\t\" << #val << \" = \" << (val) << endl\n#else\n#define dump(val)\n#endif\n\nusing namespace std;\n\ntypedef long long int ll;\ntypedef pair<ll, string> P;\n\ntemplate<typename T>\nvector<T> make_v(size_t a, T b) {\n    return vector<T>(a, b);\n}\n\ntemplate<typename... Ts>\nauto make_v(size_t a, Ts... ts) {\n    return vector<decltype(make_v(ts...))>(a, make_v(ts...));\n}\n\nbool cmp(const P &p1, const P &p2) {\n    if (p1.first != p2.first) {\n        return p1.first > p2.first;\n    } else {\n        return p1.second < p2.second;\n    }\n}\n\nint main() {\n    cin.tie(nullptr);\n    ios::sync_with_stdio(false);\n    int N, M, K, L;\n    while (cin >> N >> M >> K >> L, N) {\n\n        vector<P> anime(N);\n        vector<P> fav(M);\n        {\n            map<string, ll> mp;\n            REP(i, 0, N) {\n                cin >> anime[i].second >> anime[i].first;\n                mp[anime[i].second] = anime[i].first;\n            }\n\n            REP(i, 0, M) {\n                cin >> fav[i].second;\n                fav[i].first = mp[fav[i].second];\n            }\n        }\n        sort(anime.begin(), anime.end(), cmp);\n        sort(fav.begin(), fav.end(), cmp);\n        int l = 0, r = min(K, M);\n        int ans = 0;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            ll sum = 0;\n            REP (i, 0, mid) {\n                int p1 = mid - i - 1, p2 = K - 1 - i;\n                if (anime[p2].first >= fav[p1].first) {\n                    sum += anime[p2].first - fav[p1].first;\n                    sum += (anime[p2].second < fav[p1].second);\n                } else {\n                    break;\n                }\n            }\n            if (sum <= L) {\n                ans = mid;\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        cout << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote!=c.vote) return vote>c.vote;\n\t\treturn name<c.name;\n\t}\n};\n\nll n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\t//if(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(unfavs[k-x].name<favs[i].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\t\tsort(favs.begin(),favs.end());\n\t\tsort(unfavs.begin(),unfavs.end());\n\n\t\tint lb=0,ub=min(m,k)+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <map>\nusing namespace std;\n\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\n\nint N, M, K, L;\nmap<string,int> chara;\nvector<string> fav;\n\nvector<pii> v;\nvector<pii> w;\n\nint main() {\n\twhile(cin >> N >> M >> K >> L, N||M||K||L) {\n\t\tchara.clear(); fav.clear(); v.clear(); w.clear();\n\t\tfav.resize(M);\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tstring s;\n\t\t\tint x;\n\t\t\tcin >> s >> x;\n\t\t\tchara[s] = x;\n\t\t}\n\t\tfor(int i = 0; i < M; i++) {\n\t\t\tcin >> fav[i];\n\t\t\tw.push_back(pii(chara[fav[i]],-1));\n\t\t}\n\t\tint num = 0;\n\t\tfor(map<string,int>::iterator it = chara.begin(); it != chara.end(); it++) {\n\t\t\tv.push_back(pii(it->second,-num));\n\t\t\tit->second = num;\n\t\t\tnum++;\n\t\t}\n\t\tfor(int i = 0; i < fav.size(); i++) {\n\t\t\tw[i].second = -chara[fav[i]];\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tsort(w.begin(), w.end());\n/*\n\t\tfor(int i = 0; i < v.size(); i++) {\n\t\t\tcout << v[i].first << \",\" << v[i].second << \" \";\n\t\t} cout << endl;\n\t\tfor(int i = 0; i < w.size(); i++) {\n\t\t\tcout << w[i].first << \",\" << w[i].second << \" \";\n\t\t} cout << endl;\n// */\n\t\tint l, r;\n\t\tint res = 0;\n\t\tl = 1, r = min(K,M);\n\t\twhile(l <= r) {\n\t\t\tint m = (l+r) / 2;\n\t\t\tint cost = 0;\n\t\t\tvector<pii>::iterator piv = v.end()-K+m-1;\n\n//\t\t\tcout << \"l:\" << l << \" m:\" << m << \" r:\" << r << \" \";\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n\t\t\tfor(int i = 0; i < m && i < w.size(); i++) {\n\t\t\t\tpii a;\n\t\t\t\ta = w[w.size()-i-1];\n\n\t\t\t\tcost += max(0, piv->first - a.first);\n\t\t\t\tif(piv->first == a.first && -piv->second > -a.second) {\n\t\t\t\t\tcost++;\n\t\t\t\t}\n\t\t\t\tif(*piv <= a && piv != v.begin()) {\n\t\t\t\t\tpiv--;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n//\t\t\tcout << \"cost:\" << cost << endl;\n\n\t\t\tif(cost <= L) {\n\t\t\t\tres = m;\n\t\t\t\tl = m+1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = m-1;\n\t\t\t}\n\t\t}\n\t\tcout << res << endl;\n//\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<unordered_map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;scanf(\"%d %d %d %d\",&N,&M,&K,&L),N;){\n    unordered_map<string,int> m;\n    vector<string> names(N);\n    for(int i=0;i<N;i++){\n      char name[11];\n      int x;\n      scanf(\"%s %d\",name,&x);\n      m[name]=x;\n      names[i]=name;\n    }\n    vector<string> fav(M);\n    for(auto &e:fav){\n      char name[11];\n      scanf(\"%s\",name);\n      e=name;\n    }\n    set<string> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](string a,string b){\n\treturn (m[a]!=m[b])?m[a]>m[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=2e9;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-m[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=m;\n      vector<string> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-m[e]);\n      }\n      sort(vc.rbegin(),vc.rend());\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      sort(begin(names),end(names),[&](string a,string b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(names[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    printf(\"%d\\n\",l);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct BinaryIndexedTree\n{\n  vector< int > data;\n\n  BinaryIndexedTree(int sz)\n  {\n    data.assign(++sz, 0);\n  }\n\n  int sum(int k)\n  {\n    int ret = 0;\n    for(++k; k > 0; k -= k & -k) ret += data[k];\n    return (ret);\n  }\n\n  void add(int k, int x)\n  {\n    for(++k; k < data.size(); k += k & -k) data[k] += x;\n  }\n};\n\nint main()\n{\n  long long N, M, K, L;\n  char buff[12];\n\n  while(scanf(\"%lld %lld %lld %lld\", &N, &M, &K, &L), N) {\n\n    vector< pair< int, string > > data(N);\n    vector< int > toint(N);\n    vector< string > priority(N);\n    unordered_map< string, int > vv;\n    vector< bool > like(N, false);\n\n    for(int i = 0; i < N; i++) {\n      int x;\n      scanf(\" %s %d\", buff, &x);\n      data[i] = make_pair(-x, buff);\n      priority[i] = data[i].second;\n    }\n    sort(begin(priority), end(priority));\n    sort(begin(data), end(data));\n\n\n    for(int i = 0; i < N; i++) {\n      toint[i] = lower_bound(begin(priority), end(priority), data[i].second) - begin(priority);\n      vv[data[i].second] = i;\n      data[i].first *= -1;\n    }\n\n    for(int i = 0; i < M; i++) {\n      scanf(\"%s\", buff);\n      like[vv[buff]] = true;\n    }\n\n    BinaryIndexedTree bit(N);\n\n    long long right = K, bottom = 0, up = 0;\n    long long sz = 0, ret = 0, pre = 0;\n\n    for(int i = 0; i < K; i++) {\n      ret += like[i];\n    }\n\n    for(int i = K - 1; i >= 0; i--) {\n      if(!like[i]) {\n        while(right < N && !like[right]) ++right;\n        if(right == N) break;\n        bit.add(toint[right], 1);\n\n        L -= data[i].first - data[right].first;\n        L -= bottom * (data[i].first - pre);\n        L -= up * (data[i].first - pre - 1);\n\n        assert(bottom * (data[i].first - pre) >= 0);\n        assert(up * (data[i].first - pre - 1) >= 0);\n\n        bottom = bit.sum(toint[i]);\n        up = bit.sum(N - 1) - bottom;\n        pre = data[right].first;\n        sz = 0;\n\n        L -= up;\n        if(L < 0) break;\n        ++ret;\n      } else {\n        if(i == 0) break;\n        bit.add(toint[i], 1);\n        L -= ++sz * (data[i - 1].first - data[i].first);\n      }\n    }\n\n    printf(\"%lld\\n\", ret);\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    rep(i, a){\n        int tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(-tp < -fav[i].first) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rep(j, cv.size()){\n            if(mp(tp, name) < cv[j]){\n                rank = j-1;\n                break;\n            }\n        }\n//        cout << rank << \" \"<< k-a+num << endl;\n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            int x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n       \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\nconst int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nvector<P> fav;\nvector<P> unf;\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    if(fav[i].first != unf[K-k].first) {\n      l += max(0LL, fav[i].first - unf[K-k].first);\n    }\n    if(fav[i].second > unf[K-k].second) l++;    \n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    vector<P> dic;\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic.push_back(P(-x, name));\n    }\n    set<string> favname;\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.second) != favname.end()) fav.push_back(a);\n      else unf.push_back(a);\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = M+1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define CLEAR(arr, val) memset(arr, val, sizeof(arr))\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\ntypedef pair<int, string> is;\nconst int MAX = 114514;\nvector<is> chara;\nbool fav[MAX];\nint sum[MAX];\nint n, m, k, l;\nbool can(int p)\n{\n\tint insert = -1;\n\tfor (int i = k; i >= 0 && insert == -1; --i)\n\t\tif (sum[i] + k - i >= p)\n\t\t\tinsert = i;\n\tif (insert == -1)\n\t\treturn false;\n\telse if (sum[insert] >= p)\n\t\treturn true;\n\n\tint need = p - sum[insert];\n\tint left = l;\n\tfor (int i = insert; i < n && need > 0 && left > 0; ++i)\n\t{\n\t\tif (fav[i])\n\t\t{\n\t\t\t--need;\n\t\t\tleft -= (chara[insert].first - chara[i].first)\n\t\t\t\t+ (chara[insert].second < chara[i].second ? 1 : 0);\n\t\t}\n\t}\n\treturn need == 0 && left >= 0;\n}\nint main()\n{\n\twhile (scanf(\"%d%d%d%d\", &n, &m, &k, &l), n)\n\t{\n\t\tchar buf[16];\n\t\tchara.clear();\n\t\trep (i, n)\n\t\t{\n\t\t\tint t;\n\t\t\tscanf(\"%s%d\", buf, &t);\n\t\t\tchara.push_back(is(t, buf));\n\t\t}\n\t\tset<string> f;\n\t\trep (i, m)\n\t\t{\n\t\t\tscanf(\"%s\", buf);\n\t\t\tf.insert(buf);\n\t\t}\n\t\tsort(all(chara), greater<is>());\n\n\t\tfill_n(fav, n, false);\n\t\tsum[0] = 0;\n\t\trep (i, n)\n\t\t{\n\t\t\tint t = f.count(chara[i].second);\n\t\t\tfav[i] = t == 1;\n\t\t\tsum[i + 1] = sum[i] + t;\n\t\t}\n\n\n\t\tint low = 0, high = k + 1;\n\t\twhile (low + 1 < high)\n\t\t{\n\t\t\tint mid = (low + high) / 2;\n\t\t\tif (can(mid))\n\t\t\t\tlow = mid;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\tprintf(\"%d\\n\", low);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n//#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\n//const int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nset<string> favname;\nvector<P> dic, fav, unf;\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    l += max(0, fav[i].first - unf[K-k].first);\n    if(fav[i].second > unf[K-k].second) l++;    \n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    dic.clear();\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic.push_back(P(-x, name));\n    }\n    favname.clear();\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.second) != favname.end()) fav.push_back(a);\n      else unf.push_back(a);\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = min(M, K) + 1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, ll> table;\nvector<pair<ll, string> > fav;\nvector<pair<ll, string> > cv;\nbool C(int a){\n    ll tl = l;\n    int num = 0;\n    rep(i, a){\n        ll tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] > fav[i]) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin() - 1;\n                \n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            ll x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n//        repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n                                  \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct BinaryIndexedTree\n{\n  vector< int > data;\n\n  BinaryIndexedTree(int sz)\n  {\n    data.assign(++sz, 0);\n  }\n\n  int sum(int k)\n  {\n    int ret = 0;\n    for(++k; k > 0; k -= k & -k) ret += data[k];\n    return (ret);\n  }\n\n  void add(int k, int x)\n  {\n    for(++k; k < data.size(); k += k & -k) data[k] += x;\n  }\n};\n\nint main()\n{\n  long long N, M, K, L;\n  char buff[12];\n\n  while(scanf(\"%lld %lld %lld %lld\", &N, &M, &K, &L), N) {\n\n    vector< pair< int, string > > data(N);\n    vector< int > toint(N);\n    vector< string > priority(N);\n    unordered_map< string, int > vv;\n    vector< bool > like(N, false);\n\n    for(int i = 0; i < N; i++) {\n      int x;\n      scanf(\" %s %d\", buff, &x);\n      data[i] = make_pair(-x, buff);\n      priority[i] = data[i].second;\n    }\n    sort(begin(priority), end(priority));\n    sort(begin(data), end(data));\n\n\n    for(int i = 0; i < N; i++) {\n      toint[i] = lower_bound(begin(priority), end(priority), data[i].second) - begin(priority);\n      vv[data[i].second] = i;\n      data[i].first *= -1;\n    }\n\n    for(int i = 0; i < M; i++) {\n      scanf(\"%s\", buff);\n      like[vv[buff]] = true;\n    }\n\n    BinaryIndexedTree bit(N);\n\n    long long right = K, bottom = 0, up = 0;\n    long long sz = 0, ret = 0, pre = -1;\n\n    for(int i = 0; i < K; i++) {\n      ret += like[i];\n    }\n\n    for(int i = K - 1; i >= 0; i--) {\n      if(!like[i]) {\n        while(right < N && !like[right]) ++right;\n        if(right == N) break;\n        L -= data[i].first - data[right].first;\n        if(~pre) {\n          L -= bottom * (data[i].first - pre);\n          L -= up * (data[i].first - pre - 1); // kore sugoi\n        }\n        bit.add(toint[right], 1);\n        bottom = bit.sum(toint[i]);\n        up = bit.sum(N - 1) - bottom;\n        pre = data[i].first;\n        sz = 0;\n        L -= up;\n        if(L < 0) break;\n        ++ret;\n        ++right;\n      } else {\n        if(i == 0) break;\n        bit.add(toint[i], 1);\n        L -= ++sz * (data[i - 1].first - data[i].first);\n      }\n    }\n\n    printf(\"%lld\\n\", ret);\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n//#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\n//const int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nvector<P> fav;\nvector<P> unf;\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    l += max(0, fav[i].first - unf[K-k].first);\n    if(fav[i].second > unf[K-k].second) l++;    \n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    vector<P> dic;\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic.push_back(P(-x, name));\n    }\n    set<string> favname;\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.second) != favname.end()) fav.push_back(a);\n      else unf.push_back(a);\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = M+1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    if(cv.size() <= k-a) return false;\n    rep(i, a){\n        int tp = cv[k-a].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] > fav[i]) {\n            //num++;\n            continue;\n        }\n        // cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > k-a) tl--;    \n    }\n    //cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            char c[80];\n            string name;\n            int x;\n            scanf(\"%s %d\", c, &x);\n            name = c;\n//            cin >> name >> x;\n            table[name] = x;\n        }\n        \n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        fav.clear();\n        rep(i, m) {\n            char c[80];\n            string name;\n            scanf(\"%s\", c);\n            name = c;\n            fav.pb(mp(-table[name], name));\n        }\n        sort(all(fav));\n        cv.clear();\n        repit(itr, table) {\n            pair<int, string> tpr = mp(-itr->second, itr->first);\n            bool flag = true;\n            rep(i, fav.size()) if(fav[i] == tpr) flag = false; \n            if(flag) cv.pb(tpr);\n        }\n        sort(all(cv));\n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        // repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n                                  \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <map>\nusing namespace std;\n\n//#define DEBUG\n\n#ifdef DEBUG\n#define DEBUG_OUT(x) (x)\n#endif\n#ifndef DEBUG\n#define DEBUG_OUT(x)\n#endif\n\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\n\nint N, M, K, L;\nmap<string,int> chara;\nvector<string> fav;\n\nvector<pii> v;\nvector<pii> w;\n\nint main() {\n\twhile(cin >> N >> M >> K >> L, N||M||K||L) {\n\t\tchara.clear(); fav.clear(); v.clear(); w.clear();\n\t\tfav.resize(M);\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tstring s;\n\t\t\tint x;\n\t\t\tcin >> s >> x;\n\t\t\tchara[s] = x;\n\t\t}\n\t\tfor(int i = 0; i < M; i++) {\n\t\t\tcin >> fav[i];\n\t\t\tw.push_back(pii(chara[fav[i]],-1));\n\t\t}\n\t\tint num = 0;\n\t\tfor(map<string,int>::iterator it = chara.begin(); it != chara.end(); it++) {\n\t\t\tv.push_back(pii(it->second,-num));\n\t\t\tit->second = num;\n\t\t\tnum++;\n\t\t}\n\t\tfor(int i = 0; i < fav.size(); i++) {\n\t\t\tw[i].second = -chara[fav[i]];\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tsort(w.begin(), w.end());\n/*\n\t\tfor(int i = 0; i < v.size(); i++) {\n\t\t\tcout << v[i].first << \",\" << v[i].second << \" \";\n\t\t} cout << endl;\n\t\tfor(int i = 0; i < w.size(); i++) {\n\t\t\tcout << w[i].first << \",\" << w[i].second << \" \";\n\t\t} cout << endl;\n// */\n\t\tint l, r;\n\t\tint res = 0;\n\t\tl = 0, r = K;\n\t\twhile(l <= r) {\n\t\t\tint m = (l+r) / 2;\n\t\t\tint cost = 0;\n\t\t\tvector<pii>::iterator piv = v.end()-K+(m-1);\n\n\t\t\tDEBUG_OUT(cout << \"l:\" << l << \" m:\" << m << \" r:\" << r << \" \");\n\t\t\tDEBUG_OUT(cout << \"piv:\" << piv->first << \",\" << piv->second << \" \");\n\t\t\tfor(int i = 0; i < m && i < w.size(); i++) {\n\t\t\t\tpii a;\n\t\t\t\ta = w[w.size()-i-1];\n\t\t\t\tcost += max(0, piv->first - a.first);\n\n\t\t\t\tif(*piv <= a && piv != v.begin()) {\n\t\t\t\t\tpiv--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(piv->first == a.first && -piv->second < -a.second) {\n\t\t\t\t\t\tcost++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tDEBUG_OUT(cout << \"piv:\" << piv->first << \",\" << piv->second << \" \");\n\t\t\tDEBUG_OUT(cout << \"cost:\" << cost << endl);\n\n\t\t\tif(cost <= L) {\n\t\t\t\tres = m;\n\t\t\t\tl = m+1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = m-1;\n\t\t\t}\n\t\t}\n\t\tcout << res << endl;\n\t\tDEBUG_OUT(cout << endl);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\nconst int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nset<string> favname;\nvector<P> dic, fav, unf;\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    l += max(0LL, fav[i].first - unf[K-k].first);\n    if(fav[i].second > unf[K-k].second) l++;    \n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    dic.clear();\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic.push_back(P(-x, name));\n    }\n    favname.clear();\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.second) != favname.end()) fav.push_back(a);\n      else unf.push_back(a);\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = min(M, K) + 1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;scanf(\"%d %d %d %d\",&N,&M,&K,&L),N;){\n    map<string,int> m;\n    for(int i=0;i<N;i++){\n      char name[11];\n      int x;\n      scanf(\"%s %d\",name,&x);\n      m[name]=x;\n    }\n    map<string,int> idx;\n    vector<int> votes;\n    for(auto e:m){\n      auto s=idx.size();\n      idx[e.first]=s;\n      votes.push_back(e.second);\n    }\n    vector<int> fav(M);\n    for(auto &e:fav){\n      char name[11];\n      scanf(\"%s\",name);\n      e=idx[name];\n    }\n    set<int> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](int a,int b){\n\treturn (votes[a]!=votes[b])?votes[a]>votes[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=2e9+9;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-votes[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=votes;\n      vector<int> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-votes[e]);\n      }\n      sort(begin(vc),end(vc),[&](int a,int b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]<vmap[b]:a>b;\n\t});\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      vector<int> rank(N);\n      iota(begin(rank),end(rank),0);\n      sort(begin(rank),end(rank),[&](int a,int b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(rank[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    printf(\"%d\\n\",l);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    int bound = min(k - a, (int)cv.size() - 1);\n    rep(i, a){\n        int tp = cv[bound].first;\n        string name = fav[i].second;\n        if(cv[bound] > fav[i]) {\n            //num++;\n            continue;\n        }\n        // cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > bound) tl--;   \n    }\n    //cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            char c[80];\n            string name;\n            int x;\n            scanf(\"%s %d\", c, &x);\n            name = c;\n//            cin >> name >> x;\n            table[name] = x;\n        }\n        \n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        fav.clear();\n        rep(i, m) {\n            char c[80];\n            string name;\n            scanf(\"%s\", c);\n            name = c;\n            fav.pb(mp(-table[name], name));\n        }\n        sort(all(fav));\n        cv.clear();\n        repit(itr, table) {\n            pair<int, string> tpr = mp(-itr->second, itr->first);\n            bool flag = true;\n            rep(i, fav.size()) if(fav[i] == tpr) flag = false; \n            if(flag) cv.pb(tpr);\n        }\n        sort(all(cv));\n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        // repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n                                  \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <map>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstruct P {\n    int point;\n    string name;\n\n    P() {}\n    P(int point, string name) : point{point}, name{name} {}\n\n    bool operator < (const P& p) const {\n        if (point != p.point) {\n            return point > p.point;            \n        }\n        return name < p.name;\n    }\n};\n\nbool c(int X, int K, int L, const vector<P>& info, const vector<int>& p)\n{\n    int sum = 0;\n    int rnk = K - X;\n    for (int i = 0; i < X; i++) {\n        if (p[i] < rnk) {\n            rnk++;\n            continue;\n        }\n        if (info[p[i]].name < info[rnk].name) {        \n            sum += info[rnk].point - info[p[i]].point;\n        } else {\n            sum += info[rnk].point - info[p[i]].point + 1;\n        }\n        if (sum > L) return 0;\n    }\n    return (sum <= L);\n}\n\nint main()\n{\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    \n    int N, M, K, L;\n    while (cin >> N >> M >> K >> L, N > 0) {\n        string name;\n        int point;\n        vector<P> info;\n        for (int i = 0; i < N; i++) {\n            cin >> name >> point;\n            info.emplace_back(point, name);\n        }\n\n        sort(info.begin(), info.end());\n        \n        map<string, int> num;\n        for (int i = 0; i < N; i++) {\n            num[info[i].name] = i;\n        }\n        \n        vector<int> p(M);\n        string fav;\n        for (int i = 0; i < M; i++) {\n            cin >> fav;\n            p[i] = num[fav];\n        }\n\n        sort(p.begin(), p.end());\n\n        int l = 0, r = min(K, M);\n        while (r - l > 1) {\n            int mid = (l + r) / 2;\n            if (c(mid, K, L, info, p)) {\n                l = mid;\n            } else {\n                r = mid;\n            }\n        }\n\n        if (c(r, K, L, info, p)) {\n            cout << r << endl;\n        } else {\n            cout << l << endl;\n        }\n    }        \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "struct S{\n  char s[11];\n  int x;\n  bool operator<(const S &r)const{\n    if(x!=r.x)return x>r.x;\n    return strcmp(s,r.s)<0;\n  }\n};\nS chara[100000];\nint n,m,k,l;\n\nvector<S> like, dislike;\nll calc(int m){\n  ll need=0;\n  if(dislike.size()<k-m+1)return 0;\n  rep(i,m){\n    //cerr<<\"hoge: \"<<dislike[k-m].x-like[i].x<<endl;\n    need+=max(0,dislike[k-m].x-like[i].x+\n    (strcmp(dislike[k-m].s,like[i].s)<0));\n  }\n  //cerr<<\"m: \"<<m<<\" need: \"<<need<<endl;\n  return need;\n}\n\nint main(){\n  while(scanf(\"%d%d%d%d\",&n,&m,&k,&l),n){\n    set<string> names;\n    rep(i,n)scanf(\"%s%d\",chara[i].s,&chara[i].x);\n    rep(i,m){\n      char in[11]; scanf(\"%s\",in);\n      names.insert(string(in));\n    }\n    like.clear(); dislike.clear();\n    rep(i,n){\n      if(names.count(chara[i].s))like.pb(chara[i]);\n      else dislike.pb(chara[i]);\n    }\n    sort(all(like)); sort(all(dislike));\n    //rep(i,dislike.size())cerr<<dislike[i].s<<\" \"<<dislike[i].x<<endl;\n    \n    int lo=0, hi=min(m,k)+1, mid;\n    while(lo+1<hi){\n      mid=(lo+hi)/2;\n      if(calc(mid)<=l)lo=mid; else hi=mid;\n    }\n    printf(\"%d\\n\",lo);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <map>\n#include <vector>\nusing namespace std;\n\nint N, M, K, L;\nvector<pair<int, string> > V;\nmap<string, int> m;\nvector<int> H;\n\n\nint needCost(pair<int, string> &a, pair<int, string> &b) {\n  if(a < b) return 0;\n  return a.first - b.first + ((a.second > b.second) ? 1 : 0);\n}\n\nbool isTrue(int a) {\n  int line = K-a;\n  int cost = 0;\n  for(int i = 0; i < a; ++i) {\n    cost += needCost(V[H[i]], V[line]);\n    if(H[i] <= line) ++line;\n  }\n  return cost <= L;\n}\n\nint solve() {\n  int l, r, ans;\n  l = 0; r = min(M+1, K+1); ans = 0;\n  while(l < r) {\n    int a = (l+r)/2;\n    if(isTrue(a)) {\n      ans = a;\n      l = a+1;\n    } else {\n      r = a;\n    }\n  }\n  return ans;\n}\n\nint main() {\n  while(cin >> N >> M >> K >> L && (N || M || K || L)) {\n    V.clear();\n    m.clear();\n    H.clear();\n    for(int i = 0; i < N; ++i) {\n      pair<int, string> p;\n      cin >> p.second >> p.first;\n      p.first *= -1;\n      V.push_back(p);\n    }\n    sort(V.begin(), V.end());\n\n    for(int i = 0; i < V.size(); ++i) {\n      m[V[i].second] = i;\n    }\n\n    for(int i = 0; i < M; ++i) {\n      string name;\n      cin >> name;\n      H.push_back(m[name]);\n    }\n    sort(H.begin(), H.end());\n    cout << solve() << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define CLEAR(arr, val) memset(arr, val, sizeof(arr))\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\nstruct Chara\n{\n\tint p;\n\tstring name;\n\tChara(string name, int p)\n\t\t: name(name), p(p) {}\n};\nbool operator<(const Chara& a, const Chara& b)\n{\n\treturn a.p > b.p || a.p == b.p && a.name < b.name;\n}\nconst int MAX = 114514;\nvector<Chara> chara;\nbool fav[MAX];\nint sum[MAX];\nint n, m, k, l;\nbool can(int p)\n{\n\tint insert = -1;\n\tfor (int i = k; i >= 0 && insert == -1; --i)\n\t\tif (sum[i] + k - i >= p)\n\t\t\tinsert = i;\n\tif (insert == -1)\n\t\treturn false;\n\telse if (sum[insert] >= p)\n\t\treturn true;\n\n\tint need = p - sum[insert];\n\tint left = l;\n\tfor (int i = insert; i < n && need > 0 && left > 0; ++i)\n\t{\n\t\tif (fav[i])\n\t\t{\n\t\t\t--need;\n\t\t\tleft -= (chara[insert].p - chara[i].p)\n\t\t\t\t+ (chara[insert].name < chara[i].name ? 1 : 0);\n\t\t}\n\t}\n\treturn need == 0 && left >= 0;\n}\nint main()\n{\n\twhile (scanf(\"%d%d%d%d\", &n, &m, &k, &l), n)\n\t{\n\t\tchar buf[16];\n\t\tchara.clear();\n\t\trep (i, n)\n\t\t{\n\t\t\tint t;\n\t\t\tscanf(\"%s%d\", buf, &t);\n\t\t\tchara.push_back(Chara(buf, t));\n\t\t}\n\t\tset<string> f;\n\t\trep (i, m)\n\t\t{\n\t\t\tscanf(\"%s\", buf);\n\t\t\tf.insert(buf);\n\t\t}\n\t\tsort(all(chara));\n\n\n\t\tsum[0] = 0;\n\t\trep (i, n)\n\t\t{\n\t\t\tint t = f.count(chara[i].name);\n\t\t\tfav[i] = t == 1;\n\t\t\tsum[i + 1] = sum[i] + t;\n\t\t}\n\n\n\t\tint low = 0, high = k + 1;\n\t\twhile (low + 1 < high)\n\t\t{\n\t\t\tint mid = (low + high) / 2;\n\t\t\tif (can(mid))\n\t\t\t\tlow = mid;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\tprintf(\"%d\\n\", low);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    int bound = k-a;\n    if(bound >= cv.size()) return true;\n    rep(i, a){\n        int tp = cv[bound].first;\n        string name = fav[i].second;\n        if(cv[bound] > fav[i]) {\n            //num++;\n            continue;\n        }\n        // cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > bound) tl--;   \n    }\n    //cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            char c[80];\n            string name;\n            int x;\n            scanf(\"%s %d\", c, &x);\n            name = c;\n//            cin >> name >> x;\n            table[name] = x;\n        }\n        \n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        fav.clear();\n        rep(i, m) {\n            char c[80];\n            string name;\n            scanf(\"%s\", c);\n            name = c;\n            fav.pb(mp(-table[name], name));\n        }\n        sort(all(fav));\n        cv.clear();\n        repit(itr, table) {\n            pair<int, string> tpr = mp(-itr->second, itr->first);\n            if(!binary_search(all(fav), tpr)) cv.pb(tpr);\n        }\n        sort(all(cv));\n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        // repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n                                  \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nll n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\tll cost=0;\n\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(favs[i].name>unfavs[k-x].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    // SõªãÊklÉÒÁ½èûÜé\n    else if(t==k){\n        int sum=0;\n        int ms=score[0].first;\n        string mname=score[0].second;\n        bool f=false;\n        for(int i = 0; i < t; i++){\n            if(!f&&ranks[favs[i]]==i+1)\n                continue;\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                f=true;\n                ms=score[i].first;\n                mname=score[i].second;\n            }\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    else{\n        int sum=0;\n        int ms=score[k-t].first;\n        string mname=score[k-t].second;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        int cnt=1;\n        bool f=false;\n        int lastRank=-1;\n        for(int i = 0; i < t; i++){\n            if(!f&&ranks[favs[i]]==i+1)\n                continue;\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    return false;\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            char buf[1000];\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            char buf[2000];\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++){\n            favs.push_back(vpis[i].second);\n        }\n\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub)){\n            printf(\"%d\\n\",ub);\n        }\n        else{\n            printf(\"%d\\n\",ub-1);\n        }\n    }\n}\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name>c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tif(x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\t//REP(i,0,min(border+1,k)) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\tif(k-x!=0) REP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav>=k-x){\n\t\t\tborder=i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(charas[i].vote==charas[border].vote) cost+=charas[i].name>charas[border].name;\n\t\t\tcost+=max(0,charas[border].vote-charas[i].vote);\n\t\t\t++cnt_fav;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct BinaryIndexedTree\n{\n  vector< int > data;\n\n  BinaryIndexedTree(int sz)\n  {\n    data.assign(++sz, 0);\n  }\n\n  int sum(int k)\n  {\n    int ret = 0;\n    for(++k; k > 0; k -= k & -k) ret += data[k];\n    return (ret);\n  }\n\n  void add(int k, int x)\n  {\n    for(++k; k < data.size(); k += k & -k) data[k] += x;\n  }\n};\n\nint main()\n{\n  long long N, M, K, L;\n  char buff[12];\n\n  while(scanf(\"%lld %lld %lld %lld\", &N, &M, &K, &L), N) {\n\n    vector< pair< int, string > > data(N);\n    vector< int > toint(N);\n    vector< string > priority(N);\n    unordered_map< string, int > vv;\n    vector< bool > like(N, false);\n\n    for(int i = 0; i < N; i++) {\n      int x;\n      scanf(\" %s %d\", buff, &x);\n      data[i] = make_pair(-x, buff);\n      priority[i] = data[i].second;\n    }\n    sort(begin(priority), end(priority));\n    sort(begin(data), end(data));\n\n\n    for(int i = 0; i < N; i++) {\n      toint[i] = lower_bound(begin(priority), end(priority), data[i].second) - begin(priority);\n      vv[data[i].second] = i;\n      data[i].first *= -1;\n    }\n\n    for(int i = 0; i < M; i++) {\n      scanf(\"%s\", buff);\n      like[vv[buff]] = true;\n    }\n\n    BinaryIndexedTree bit(N);\n\n    long long right = K, bottom = 0, up = 0;\n    long long sz = 0, ret = 0, pre = 0;\n\n    for(int i = 0; i < K; i++) {\n      ret += like[i];\n    }\n\n    for(int i = K - 1; i >= 0; i--) {\n      if(!like[i]) {\n        while(right < N && !like[right]) ++right;\n        if(right == N) break;\n        bit.add(toint[right], 1);\n\n        L -= data[i].first - data[right].first;\n        L -= bottom * (data[i].first - pre);\n        L -= up * (data[i].first - pre - 1);\n\n        bottom = bit.sum(toint[i]);\n        up = bit.sum(N - 1) - bottom;\n        pre = data[right].first;\n        sz = 0;\n\n        L -= up;\n        if(L < 0) break;\n        ++ret;\n      } else {\n        if(i == 0) break;\n        bit.add(toint[i], 1);\n        L -= ++sz * (data[i - 1].first - data[i].first);\n      }\n    }\n\n    printf(\"%lld\\n\", ret);\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<cstdio>\n#include<string>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nstruct Idol{\n\tint vote;\n\tbool love;\n\tstring name;\n\tbool operator<(const Idol &I)const{\n\t\tif(vote!=I.vote) return vote>I.vote;\n\t\treturn name<I.name;\n\t}\n};\n\nint main(){\n\tfor(int n,m,k,l;scanf(\"%d%d%d%d\",&n,&m,&k,&l),n;){\n\t\tmap<string,int> f;\n\t\tstatic Idol I[100000];\n\t\trep(i,n){\n\t\t\tchar s[11]; scanf(\"%s%d\",s,&I[i].vote);\n\t\t\tI[i].name=s;\n\t\t\tf[s]=i;\n\t\t\tI[i].love=false;\n\t\t}\n\t\trep(i,m){\n\t\t\tchar s[11]; scanf(\"%s\",s);\n\t\t\tI[f[s]].love=true;\n\t\t}\n\t\tsort(I,I+n);\n\n\t\tint ans=0,p=k-1;\n\t\trep(i,n) if(I[i].love) {\n\t\t\tif(i>=k){\n\t\t\t\tint v=I[p].vote-I[i].vote+(I[p].name<I[i].name?1:0);\n\t\t\t\tif(l>=v){\n\t\t\t\t\tl-=v;\n\t\t\t\t\tI[p]=I[i];\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tans++;\n\n\t\t\twhile(p>=0 && I[p].love) p--;\n\t\t\tif(p<0) break;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\nstruct Chara{\n  string name;\n  int vote;\n  bool operator < (const Chara& c) const {\n    if(vote != c.vote) return vote > c.vote;\n    return name < c.name;\n  }\n};\n\nint main(){\n  int N, M, K, L;\n  while(cin >> N >> M >> K >> L && N){\n    Chara cs[100000];\n    REP(i, N){\n      char s[11];\n      scanf(\"%s %d\", s, &cs[i].vote);\n      cs[i].name = string(s);\n    }\n    sort(cs, cs + N);\n    set<string> favs;\n    REP(i, M){\n      char s[11];\n      scanf(\"%s\", s);\n      favs.insert(string(s));\n    }\n    int lb = 0, ub = min(M + 1, K + 1); // \n    while(lb + 1 < ub){\n      int X = (ub + lb) / 2; // X 人\n      ll S = 0;\n      int idx = K - X;\n      int Rest = X;\n      for(int i = 0; i < N; i++) if(Rest > 0 && favs.count(cs[i].name)){\n        if(i > idx){\n          S += cs[idx].vote - cs[i].vote;\n          if(cs[idx].name < cs[i].name) S++;\n        }\n        if(S > L) break;\n        Rest--;\n        idx++;\n      }\n      if(S <= L) {\n        lb = X;\n      }else{\n        ub = X;\n      }\n    }\n    cout << lb << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<iomanip>\n#include<vector>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<cassert>\nusing namespace std;\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\ntypedef pair<int,string> pis;\n\nbool cmp(const psi &a,const psi &b){//[A¼OÌÔ\n  if (a.second != b.second)return a.second > b.second;\n  return a.first < b.first;\n}\n\nbool cmp2(const pii &a,const pii &b){//[,idÌÔ\n  if (a.first != b.first)return a.first > b.first;\n  return a.second < b.second;\n}\n\nbool cmp3(const pis &a,const pis &b){//[,idÌÔ\n  if (a.first != b.first)return a.first > b.first;\n  return a.second < b.second;\n}\n\nbool isok(int n,vector<pis> &all,int m,vector<pis> &num,int h){\n  int req=0;\n  pis &worst=n >= all.size()?all[all.size()-1]:all[n];\n  for(int i=0;i<m;i++){\n    if (num[i].second < worst.second){\n      //¼Oª«Å¬³¢ÈçÎA¯¶[Å¢¢B\n      if (num[i].first < worst.first)req+=worst.first-num[i].first;\n    }else if (num[i].second > worst.second){\n      //¼Oª«Åå«¢Èç1[½­È¢Æ¢¯È¢B\n      if (num[i].first <= worst.first)req+=worst.first-num[i].first+1;\n    }else assert(false);\n  }\n  return req <= h;\n}\n\nint solve(vector<pis> &all,vector<pis> &num,int k,int h){\n  if (all.size() == 0)return min((int)num.size(),k);\n  if (all.size()+num.size() == k)return min((int)num.size(),k);\n  int ret=0;\n  for(int i=1;i<=min(k,(int)num.size());i++){\n    int myfavor=i,other=k-i;\n    if (isok(other,all,myfavor,num,h))ret=i;\n  }\n  return ret;\n}\n\nmain(){\n  int n,k,m,h;\n  while(cin>>n>>k>>m>>h){\n    if (n == 0 && k == 0 && m == 0 && h == 0)break;\n    vector<psi> in(n),dbAll,dbCand;\n    map<string,int> M;\n    set<string> S;\n    vector<pis> all,num;\n    for(int i=0;i<n;i++){\n      cin>>in[i].first>>in[i].second;\n    }\n    sort(in.begin(),in.end());//sort by name\n    for(int i=0;i<n;i++){\n      M[in[i].first]=i;\n    }\n\n    for(int i=0;i<m;i++){\n      string cand;\n      cin>>cand;\n      //num.push_back(make_pair(in[M[cand]].second,M[cand]));\n      num.push_back(make_pair(in[M[cand]].second,cand));\n      S.insert(cand);\n      dbCand.push_back(make_pair(cand,in[M[cand]].second));\n    }\n\n    for(int i=0;i<n;i++){\n      if (S.find(in[i].first) == S.end()){\n\t//all.push_back(make_pair(in[i].second,i));\n\tall.push_back(make_pair(in[i].second,in[i].first));\n\tdbAll.push_back(make_pair(in[i].first,in[i].second));\n      }\n    }\n\n    sort(all.begin(),all.end(),cmp3);\n    sort(num.begin(),num.end(),cmp3);\n\n    cout <<solve(all,num,k,h) << endl;\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote!=c.vote) return vote>c.vote;\n\t\treturn name<c.name;\n\t}\n};\n\nll n,m,k,l;\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return true;\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(unfavs[k-x].name<favs[i].name));\n\t\t//if(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tChara charas[100010];\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\t\tsort(favs.begin(),favs.end());\n\t\tsort(unfavs.begin(),unfavs.end());\n\n\t\tint lb=0,ub=min(m,k)+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n//#include <utility>\n#include <set>\n#include <iostream>\n//#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n//#include <functional>\n#include <sstream>\n//#include <deque>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n//#include <cctype>\n#include <cstring>\n//#include <ctime>\n#include <iterator>\n#include <bitset>\n//#include <numeric>\n//#include <list>\n//#include <iomanip>\n\n#if __cplusplus >= 201103L\n#include <array>\n#include <tuple>\n#include <initializer_list>\n#include <unordered_set>\n#include <unordered_map>\n#include <forward_list>\n\n#define cauto const auto&\n#else\n\n#endif\n\nusing namespace std;\n\n\nnamespace{\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\ntypedef vector<int> vint;\ntypedef vector<vector<int> > vvint;\ntypedef vector<long long> vll, vLL;\ntypedef vector<vector<long long> > vvll, vvLL;\n\n#define VV(T) vector<vector< T > >\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){\n    v.assign(a, vector<T>(b, t));\n}\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >> t;\n}\n\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\n#define RALL(v) (v).rbegin(),(v).rend()\n\n\n#define MOD 1000000007LL\n#define EPS 1e-8\nstatic const int INF=1<<24;\n\nvoid mainmain(){\n\tint N,M,K,L;\n\twhile(scanf(\"%d %d %d %d\",&N,&M,&K,&L),N||M||K||L){\n\t\tvector<pair<int,string>> in1(N);\n\t\trep(i,N){\n\t\t\tcin>>in1[i].S;\n\t\t\tscanf(\"%d\",&in1[i].F);\n\t\t\tin1[i].F*=-1;\n\t\t}\n\t\tset<string> se;\n\t\tstring tmps;\n\t\trep(i,M){\n\t\t\tcin>>tmps;\n\t\t\tse.insert(tmps);\n\t\t}\n\t\tsort(ALL(in1));\n\t\tpriority_queue<pii> pq1;\n\t\tpriority_queue<pii> pq2;\n\t\tpriority_queue<pii> pq3;\n\t\t// rep(i,in1.size()){\n\t\t\t// cout<<i<<\" \"<<-in1[i].F<<\" \"<<in1[i].S<<endl;\n\t\t// }\n\t\t// cout<<endl;\n\t\trep(i,in1.size()){\n\t\t\tif(i<K){\n\t\t\t\tif(se.find(in1[i].S)!=se.end()){\n\t\t\t\t\t// cout<<i<<\" \"<<2<<endl;\n\t\t\t\t\tpq2.push(mkp(in1[i].F,-i));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// cout<<i<<\" \"<<1<<endl;\n\t\t\t\t\tpq1.push(mkp(in1[i].F,-i));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(se.find(in1[i].S)!=se.end()){\n\t\t\t\t\t// cout<<i<<\" \"<<3<<endl;\n\t\t\t\t\tpq3.push(mkp(-in1[i].F,-i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile(1){\n\t\t\tif(pq3.empty()){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pq1.empty()){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpii top3=pq3.top();\n\t\t\tpii top1=pq1.top();\n\t\t\tpii top2;\n\t\t\tbool f2=!pq2.empty();\n\t\t\t// if(f2) cout<<\"hoge\"<<endl;\n\t\t\tif(f2) top2=pq2.top();\n\t\t\t// cout<<\"top1 \"<<-top1.F<<\" \"<<in1[-top1.S].S<<endl;\n\t\t\t// if(f2) cout<<\"top2 \"<<-top2.F<<\" \"<<in1[-top2.S].S<<endl;\n\t\t\t// cout<<\"top3 \"<< top3.F<<\" \"<<in1[-top3.S].S<<endl;\n\t\t\tpq3.pop();\n\t\t\tL-=-top1.F-top3.F;\n\t\t\ttop3.F=-top1.F;\n\t\t\tif(in1[-top3.S].S>in1[-top1.S].S){\n\t\t\t\ttop3.F++;\n\t\t\t\tL--;\n\t\t\t}\n\t\t\t// cout<<\"L \"<<L<<endl;\n\t\t\tif(L<0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttop3.F*=-1;\n\t\t\tif(!f2||top2.F<top1.F||(top2.F==top1.F&&in1[-top2.S].S<in1[-top1.S].S)){\n\t\t\t\ttop1.F*=-1;\n\t\t\t\tpq1.pop();\n\t\t\t\tpq2.push(top3);\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttop2.F*=-1;\n\t\t\t\tpq3.push(top2);\n\t\t\t\tpq2.pop();\n\t\t\t\tpq2.push(top3);\n\t\t\t}\n\t\t}\n\t\tcout<<pq2.size()<<endl;\n\t}\n}\n\n\n\n}\nmain() try{\n    mainmain();\n}\ncatch(...){\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n\nint f(vector< pair<int,string> > all,set<string> &fav,int m,int K,int L){\n\tif( m == 0 ) return 1;\n\tint cnt2 = m;\n\tfor(int i = 0 ; i < K ; i++){\n\t\tif( cnt2 && fav.count(all[i].second) ){\n\t\t\tcnt2--;\n\t\t}\n\t}\n\tint N = all.size();\n\t\n\t\n\tint minimum = -all[K-cnt2].first;\n\tint cnt = m;\n\tint ans = 0;\n\tset<string> marked;\n\tfor(int i = 0 ; i < all.size() ; i++){\n\t\tif( cnt && fav.count(all[i].second) ){\n\t\t\tint fr = (-all[i].first);\n\t\t\tint to = max(fr,minimum);\n\t\t\tans += to - fr;\n\t\t\tall[i].first = -to;\n\t\t\tcnt--;\n\t\t\tL -= to - fr;\n\t\t\tmarked.insert(all[i].second);\n\t\t}\n\t}\n\t\n\t\n\tsort(all.begin(),all.end());\n\tfor(int i = 0 ; i < all.size() ; i++){\n\t\tif( marked.count(all[i].second) && i >= K ){\n\t\t\tL--;\n\t\t}\n\t}\n\tif( L < 0 ) return 0;\n\treturn 1;\n}\nint main(){\n\tint N,M,K,L;\n\twhile(scanf(\"%d%d%d%d\",&N,&M,&K,&L) && N){\n\t\tvector< pair<int,string> > all; \n\t\tchar a[128];\n\t\tfor(int i = 0 ; i < N ; i++){\n\t\t\tint b;\n\t\t\tscanf(\"%s %d\",a,&b);\n\t\t\tall.push_back({-b,a});\n\t\t}\n\t\tset<string> fav;\n\t\tfor(int i = 0 ; i < M ; i++){\n\t\t\tscanf(\"%s\",a);\n\t\t\tfav.insert(a);\n\t\t}\n\t\tsort(all.begin(),all.end());\n\t\tint l = 0 , r = min(K,M);\n\t\twhile( l != r ){\n\t\t\tint m = (l+r+1) / 2;\n\t\t\tif( f(all,fav,m,K,L) ){\n\t\t\t\tl = m;\n\t\t\t}else r = m-1;\n\t\t}\n\t\tcout << l << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tif(x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav==k-x+1){\n\t\t\tborder=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border) cost+=charas[border].vote-charas[i].vote+(charas[i].name>=charas[border].name);\n\t\t\t++cnt_fav;\n\t\t\tdump(i);\n\t\t\tdump(cost);\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <cstdio>\n#include <set>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\tint N, M, K, L;\n\twhile(cin >> N >> M >> K >> L, N){\n\t\tvector< pair<int, string> > vp;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tstring str; int d;\n\t\t\tcin >> str >> d;\n\t\t\tvp.push_back(make_pair(-d, str));\n\t\t}\n\t\tsort(vp.begin(), vp.end());\n\t\tset<string> S;\n\t\tfor(int i=0;i<M;i++){\n\t\t\tstring str;\n\t\t\tcin >> str;\n\t\t\tS.insert(str);\n\t\t}\n\t\tvector<int> rank;\n\t\tfor(int i=0;i<N;i++)\n\t\t\tif(S.count(vp[i].second)) rank.push_back(i);\n\t\tint l = 0, h = min(M, K)+1;\n\t\twhile(h-l>1){\n\t\t\tint mid = (l+h)/2;\n\t\t\tint lest = mid;\n\t\t\tint against = K-mid;\n\t\t\tlong long vote = 0;\n\t\t\tfor(int i=0;i<mid;i++){\n\t\t\t\tif(rank[i] <= against) against++;\n\t\t\t\telse {\n\t\t\t\t\tvote += -vp[against].first + vp[rank[i]].first + (vp[against].second < vp[rank[i]].second);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(vote > L) h = mid;\n\t\t\telse         l = mid;\n\t\t}\n\t\tcout << l << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, ll> table;\nvector<pair<ll, string> > fav;\nvector<pair<ll, string> > cv;\nbool C(int a){\n    ll tl = l;\n    int num = 0;\n    rep(i, a){\n        ll tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] > fav[i]) {\n            //num++;\n            continue;\n        }\n        // cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > k-a+num) tl--;    \n    }\n    //cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            ll x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        \n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.pb(mp(-table[name], name));\n        }\n        sort(all(fav));\n        cv.clear();\n        repit(itr, table) {\n            pair<ll, string> tpr = mp(-itr->second, itr->first);\n            bool flag = true;\n            rep(i, fav.size()) if(fav[i] == tpr) flag = false; \n            if(flag) cv.pb(tpr);\n        }\n        sort(all(cv));\n        // repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n        // repit(itr, fav) cout << itr->first << \" \" << itr->second << endl;\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n                                  \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    rep(i, a){\n        int tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(cv[k-a+num] > fav[i]) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            int x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n       \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct data {\n  string name;\n  long long x;\n};\nbool operator<(const data &l, const data &r) {\n  if(l.x != r.x) return l.x > r.x;\n  return l.name < r.name;\n}\n\nlong long n, m, k, l;\nvector<data> v;\nset<string> fav;\nvector<long long> lst;\n\nlong long solve();\nbool ch(long long top);\n\nint main() {\n  while(1) {\n    cin >> n >> m >> k >> l;\n    if(n + m + k + l == 0) break;\n    v.resize(n);\n    lst.clear();\n    fav.clear();\n    for(int i = 0; i < n; ++i) cin >> v[i].name >> v[i].x;\n    for(int i = 0; i < m; ++i) {\n      string s;\n      cin >> s;\n      fav.insert(s);\n    }\n    cout << solve() << endl;\n  }\n  return 0;\n}\n\nlong long solve() {\n  sort(v.begin(), v.end());\n  for(int i = 0; i < n; ++i)\n    if(fav.find(v[i].name) != fav.end()) lst.push_back(i);\n  long long l = 0, r = min(k, m) + 1;\n  while(r - l > 1) {\n    long long now = (l + r) / 2;\n    if(ch(now))\n      l = now;\n    else\n      r = now;\n  }\n  return l;\n}\n\nbool ch(long long top) {\n  long long remain = l, under = top;\n  for(int i = 0; i < top; ++i) {\n    long long nowid = lst[i];\n    if(nowid <= k - under) {\n      --under;\n      continue;\n    }\n    remain -= v[k - under].x - v[nowid].x +\n              (v[nowid].name > v[k - under].name);\n  }\n  return remain >= 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define FR first\n#define SC second\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, string> P;\n\nstruct Chara\n{\n  string name;  \n  int x;\n  Chara(){}\n  Chara(string name, int x):name(name), x(x){}\n  bool operator < (const Chara& c) const {\n    return x != c.x ? x > c.x : name < c.name;\n  }\n};\n\nconst int inf = 1LL << 55;\nconst int mod = 1e9 + 7;\n\nint N, M, K, L;\nset<string> favname;\nvector<Chara> dic, fav, unf;\n\n\n\nbool check(int k)\n{\n  if(unf.size() < K-k+1) return true;\n  int l = 0;\n  for(int i = 0; i < k; i++) {\n    l += max(0LL, unf[K-k].x - fav[i].x);\n    if(fav[i].name > unf[K-k].name) l++;    \n  }\n  return l <= L;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  while(cin >> N >> M >> K >> L, N) {\n    dic.clear();\n    for(int i = 0; i < N; i++) {\n      string name; int x;          \n      cin >> name >> x;\n      dic.push_back(Chara(name, x));\n    }\n    favname.clear();\n    for(int i = 0; i < M; i++) {\n      string name; cin >> name;\n      favname.insert(name);\n    }\n    fav.clear();\n    unf.clear();\n    for(auto a : dic) {\n      if(favname.find(a.name) != favname.end()) fav.push_back(a);\n      else unf.push_back(a);\n    }\n    sort(all(fav));\n    sort(all(unf));\n    int lb = 0, ub = min(M, K) + 1;\n    while(lb + 1 < ub) {\n      int mb = (lb + ub) / 2;\n      if(check(mb)) lb = mb;\n      else ub = mb;\n    }\n    cout << lb << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            int rfi=ranks[favs[i]];\n            if(!f&&(k-rfi)>=t-i-1){\n                continue;\n            }\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            char buf[1000];\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            char buf[2000];\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++)\n            favs.push_back(vpis[i].second);\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\n\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <map>\nusing namespace std;\n\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\n\nint N, M, K, L;\nmap<string,int> chara;\nvector<string> fav;\n\nvector<pii> v;\nvector<pii> w;\n\nint main() {\n\twhile(cin >> N >> M >> K >> L, N||M||K||L) {\n\t\tchara.clear(); fav.clear(); v.clear(); w.clear();\n\t\tfav.resize(M);\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tstring s;\n\t\t\tint x;\n\t\t\tcin >> s >> x;\n\t\t\tchara[s] = x;\n\t\t}\n\t\tfor(int i = 0; i < M; i++) {\n\t\t\tcin >> fav[i];\n\t\t\tw.push_back(pii(chara[fav[i]],-1));\n\t\t}\n\t\tint num = 0;\n\t\tfor(map<string,int>::iterator it = chara.begin(); it != chara.end(); it++) {\n\t\t\tv.push_back(pii(it->second,-num));\n\t\t\tit->second = num;\n\t\t\tnum++;\n\t\t}\n\t\tfor(int i = 0; i < fav.size(); i++) {\n\t\t\tw[i].second = -chara[fav[i]];\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tsort(w.begin(), w.end());\n/*\n\t\tfor(int i = 0; i < v.size(); i++) {\n\t\t\tcout << v[i].first << \",\" << v[i].second << \" \";\n\t\t} cout << endl;\n\t\tfor(int i = 0; i < w.size(); i++) {\n\t\t\tcout << w[i].first << \",\" << w[i].second << \" \";\n\t\t} cout << endl;\n// */\n\t\tint l, r;\n\t\tint res = 0;\n\t\tl = 1, r = min(K,M);\n\t\twhile(l <= r) {\n\t\t\tint m = (l+r) / 2;\n\t\t\tint cost = 0;\n\t\t\tvector<pii>::iterator piv = v.end()-K+m-1;\n\n//\t\t\tcout << \"l:\" << l << \" m:\" << m << \" r:\" << r << \" \";\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n\t\t\tfor(int i = 0; i < m && i < w.size(); i++) {\n\t\t\t\tpii a;\n\t\t\t\ta = w[w.size()-i-1];\n\n\t\t\t\tcost += max(0, piv->first - a.first);\n\t\t\t\tif(piv->first == a.first && -piv->second < -a.second) {\n\t\t\t\t\tcost++;\n\t\t\t\t}\n\t\t\t\tif(*piv <= a && piv != v.begin()) {\n\t\t\t\t\tpiv--;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n//\t\t\tcout << \"cost:\" << cost << endl;\n\n\t\t\tif(cost <= L) {\n\t\t\t\tres = m;\n\t\t\t\tl = m+1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = m-1;\n\t\t\t}\n\t\t}\n\t\tcout << res << endl;\n//\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <map>\nusing namespace std;\n\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\n\nint N, M, K, L;\nmap<string,int> chara;\nvector<string> fav;\n\nvector<pii> v;\nvector<pii> w;\n\nint main() {\n\twhile(cin >> N >> M >> K >> L, N||M||K||L) {\n\t\tchara.clear(); fav.clear(); v.clear(); w.clear();\n\t\tfav.resize(M);\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tstring s;\n\t\t\tint x;\n\t\t\tcin >> s >> x;\n\t\t\tchara[s] = x;\n\t\t}\n\t\tfor(int i = 0; i < M; i++) {\n\t\t\tcin >> fav[i];\n\t\t\tw.push_back(pii(chara[fav[i]],-1));\n\t\t}\n\t\tint num = 0;\n\t\tfor(map<string,int>::iterator it = chara.begin(); it != chara.end(); it++) {\n\t\t\tv.push_back(pii(it->second,-num));\n\t\t\tit->second = num;\n\t\t\tnum++;\n\t\t}\n\t\tfor(int i = 0; i < fav.size(); i++) {\n\t\t\tw[i].second = -chara[fav[i]];\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tsort(w.begin(), w.end());\n/*\n\t\tfor(int i = 0; i < v.size(); i++) {\n\t\t\tcout << v[i].first << \",\" << v[i].second << \" \";\n\t\t} cout << endl;\n\t\tfor(int i = 0; i < w.size(); i++) {\n\t\t\tcout << w[i].first << \",\" << w[i].second << \" \";\n\t\t} cout << endl;\n// */\n\t\tint l, r;\n\t\tint res = 0;\n\t\tl = 1, r = min(K,M);\n\t\twhile(l <= r) {\n\t\t\tint m = (l+r) / 2;\n\t\t\tlong long cost = 0;\n\t\t\tvector<pii>::iterator piv = v.end()-K+m-1;\n\n//\t\t\tcout << \"l:\" << l << \" m:\" << m << \" r:\" << r << \" \";\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n\t\t\tfor(int i = 0; i < m && i < w.size(); i++) {\n\t\t\t\tpii a;\n\t\t\t\ta = w[w.size()-i-1];\n\n\t\t\t\tcost += max(0, piv->first - a.first);\n\t\t\t\tif(piv->first == a.first && -piv->second < -a.second) {\n\t\t\t\t\tcost++;\n\t\t\t\t}\n\t\t\t\tif(*piv <= a && piv != v.begin()) {\n\t\t\t\t\tpiv--;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n//\t\t\tcout << \"cost:\" << cost << endl;\n\n\t\t\tif(cost <= L) {\n\t\t\t\tres = m;\n\t\t\t\tl = m+1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = m-1;\n\t\t\t}\n\t\t}\n\t\tcout << res << endl;\n//\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<map>\n#include<set>\n#include<cassert>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define fr(i,c) for(__typeof (c.begin()) i=c.begin(); i!=c.end(); i++)\n#define all(c) (c).begin(), (c).end()\n#define mp make_pair\n#define pb push_back\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\ntypedef long long ll;\n\nstruct S{\n  char s[11];\n  int x;\n  bool operator<(const S &r)const{\n    if(x!=r.x)return x>r.x;\n    return strcmp(s,r.s)<0;\n  }\n};\nS chara[100000];\nint n,m,k,l;\n\nvector<S> like, dislike;\nll calc(int m){\n  ll need=0;\n  if(dislike.size()<k-m+1)return 0;\n  rep(i,m){\n    //cerr<<\"hoge: \"<<dislike[k-m].x-like[i].x<<endl;\n    need+=max(0,dislike[k-m].x-like[i].x+\n    (strcmp(dislike[k-m].s,like[i].s)<0));\n  }\n  //cerr<<\"m: \"<<m<<\" need: \"<<need<<endl;\n  return need;\n}\n\nint main(){\n  while(scanf(\"%d%d%d%d\",&n,&m,&k,&l),n){\n    set<string> names;\n    rep(i,n)scanf(\"%s%d\",chara[i].s,&chara[i].x);\n    rep(i,m){\n      char in[11]; scanf(\"%s\",in);\n      names.insert(string(in));\n    }\n    like.clear(); dislike.clear();\n    rep(i,n){\n      if(names.count(chara[i].s))like.pb(chara[i]);\n      else dislike.pb(chara[i]);\n    }\n    sort(all(like)); sort(all(dislike));\n    //rep(i,dislike.size())cerr<<dislike[i].s<<\" \"<<dislike[i].x<<endl;\n    \n    int lo=0, hi=min(m,k)+1, mid;\n    while(lo+1<hi){\n      mid=(lo+hi)/2;\n      if(calc(mid)<=l)lo=mid; else hi=mid;\n    }\n    printf(\"%d\\n\",lo);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n\nint f(vector< pair<int,string> > all,set<string> &fav,int m,int K,int L){\n\tif( m == 0 ) return 1;\n\tint cnt2 = m;\n\tfor(int i = 0 ; i < K ; i++){\n\t\tif( cnt2 && fav.count(all[i].second) ){\n\t\t\tcnt2--;\n\t\t}\n\t}\n\tint N = all.size();\n\t\n\t\n\tint minimum = -all[K-cnt2].first;\n\tint cnt = m;\n\tint ans = 0;\n\tset<string> marked;\n\tfor(int i = 0 ; i < all.size() ; i++){\n\t\tif( cnt && fav.count(all[i].second) ){\n\t\t\tint fr = (-all[i].first);\n\t\t\tint to = max(fr,minimum);\n\t\t\tans += to - fr;\n\t\t\tall[i].first = -to;\n\t\t\tcnt--;\n\t\t\tL -= to - fr;\n\t\t\tmarked.insert(all[i].second);\n\t\t}\n\t}\n\t\n\t\n\tsort(all.begin(),all.end());\n\tfor(int i = 0 ; i < all.size() ; i++){\n\t\tif( marked.count(all[i].second) && i >= K ){\n\t\t\tL--;\n\t\t}\n\t}\n\tif( L < 0 ) return 0;\n\treturn 1;\n}\nint main(){\n\tint N,M,K,L;\n\twhile(cin >> N >> M >> K >> L && N){\n\t\tvector< pair<int,string> > all; \n\t\tfor(int i = 0 ; i < N ; i++){\n\t\t\tstring a;\n\t\t\tint b;\n\t\t\tcin >> a >> b;\n\t\t\tall.push_back({-b,a});\n\t\t}\n\t\tset<string> fav;\n\t\tfor(int i = 0 ; i < M ; i++){\n\t\t\tstring a;\n\t\t\tcin >> a;\n\t\t\tfav.insert(a);\n\t\t}\n\t\tsort(all.begin(),all.end());\n\t\tint l = 0 , r = min(K,M);\n\t\twhile( l != r ){\n\t\t\tint m = (l+r+1) / 2;\n\t\t\tif( f(all,fav,m,K,L) ){\n\t\t\t\tl = m;\n\t\t\t}else r = m-1;\n\t\t}\n\t\tcout << l << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, string> P;\n\n#define fi first\n#define se second\n#define repl(i,a,b) for(ll i=(ll)(a);i<(ll)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define all(x) (x).begin(),(x).end()\n#define dbg(x) cout<<#x\"=\"<<x<<endl\n#define mmax(x,y) (x>y?x:y)\n#define mmin(x,y) (x<y?x:y)\n#define maxch(x,y) x=mmax(x,y)\n#define minch(x,y) x=mmin(x,y)\n#define uni(x) x.erase(unique(all(x)),x.end())\n#define exist(x,y) (find(all(x),y)!=x.end())\n#define bcnt __builtin_popcountll\n\n#define INF 1e16\n#define mod 1000000007\n\nll N,M,K,L;\nbool isfav[100010];\nvector<ll> A,fav;\nvector<string> S;\nmap<string,ll> id;\nvector<ll> ord;\n\nbool ok(ll X){\n  if(X>K)return false;\n\n  ll cnt=0;\n  rep(i,K){\n    if(isfav[ord[i]])cnt++;\n  }\n  if(X<=cnt)return true;\n\n  ll add=X;\n  ll rest=X-cnt;\n  ll sum=0;\n  for(ll i=K-1;i>=0;i--){\n    if(!isfav[ord[i]]){\n      rest--;\n      if(rest==0){\n        rep(j,N){\n          if(isfav[ord[j]]){\n            if(j>i){\n              if(S[ord[i]]<S[ord[j]]) sum+=A[ord[i]]-A[ord[j]]+1;\n              else sum+=A[ord[i]]-A[ord[j]];\n            }\n            add--;\n            if(add==0)break;\n          }\n        }\n        break;\n      }\n    }\n  }\n  return sum<=L;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  while(1){\n    A.clear(); S.clear(); fav.clear(); ord.clear();\n    id.clear();\n    cin>>N>>M>>K>>L;\n    if(N==0)break;\n    rep(i,N)isfav[i]=false;\n    A.resize(N);\n    S.resize(N);\n    rep(i,N){\n      string name;\n      cin>>S[i]>>A[i];\n      id[S[i]]=i;\n    }\n    rep(i,M){\n      string name;\n      cin>>name;\n      fav.push_back(id[name]);\n      isfav[id[name]]=true;\n    }\n\n    rep(i,N){\n      ord.push_back(i);\n    }\n    sort(all(ord),[=](const ll& a,const ll& b){\n      if(A[a]==A[b])return S[a]<S[b];\n      else return A[a]>A[b];\n    });\n\n    //rep(i,N){\n      //dbg(S[ord[i]]);\n    //}\n\n    ll lb=0,ub=M+1;\n    while(ub-lb>1){\n      ll mid=(ub+lb)/2;\n      if(ok(mid)) lb=mid;\n      else ub=mid;\n    }\n    cout<<lb<<endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;scanf(\"%d %d %d %d\",&N,&M,&K,&L),N;){\n    map<string,int> m;\n    vector<string> names(N);\n    for(int i=0;i<N;i++){\n      char name[11];\n      int x;\n      scanf(\"%s %d\",name,&x);\n      m[name]=x;\n      names[i]=name;\n    }\n    vector<string> fav(M);\n    for(auto &e:fav){\n      char name[11];\n      scanf(\"%s\",name);\n      e=name;\n    }\n    set<string> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](string a,string b){\n\treturn (m[a]!=m[b])?m[a]>m[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    while(h-l>1){\n      int mid=(l+h)/2;\n      int vl=0,vh=2e9;\n      while(vh-vl>1){\n\tint vm=(vh+vl)/2;\n\tlong long nv=0;\n\tfor(int i=0;i<mid;i++){\n\t  nv+=max(0,vm-m[fav[i]]);\n\t}\n\tif(nv>L){\n\t  vh=vm;\n\t}else{\n\t  vl=vm;\n\t}\n      }\n      auto vmap=m;\n      vector<string> vc(begin(fav),begin(fav)+mid);\n      int rl=L;\n      for(auto e:vc){\n\tvmap[e]=max(vl,vmap[e]);\n\trl-=max(0,vl-m[e]);\n      }\n      sort(vc.rbegin(),vc.rend());\n      for(int i=0;i<rl;i++){\n\tvmap[vc[i]]++;\n      }\n      sort(begin(names),end(names),[&](string a,string b){\n\t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n\t});\n      int ri=0;\n      for(int i=0;i<K;i++){\n\tri+=sfav.count(names[i]);\n      }\n      if(ri>=mid){\n\tl=mid;\n      }else{\n\th=mid;\n      }\n    }\n    printf(\"%d\\n\",l);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <map>\nusing namespace std;\n\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\n\nint N, M, K, L;\nmap<string,int> chara;\nvector<string> fav;\n\nvector<pii> v;\nvector<pii> w;\n\nint main() {\n\twhile(cin >> N >> M >> K >> L, N||M||K||L) {\n\t\tchara.clear(); fav.clear(); v.clear(); w.clear();\n\t\tfav.resize(M);\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tstring s;\n\t\t\tint x;\n\t\t\tcin >> s >> x;\n\t\t\tchara[s] = x;\n\t\t}\n\t\tfor(int i = 0; i < M; i++) {\n\t\t\tcin >> fav[i];\n\t\t\tw.push_back(pii(chara[fav[i]],-1));\n\t\t}\n\t\tint num = 0;\n\t\tfor(map<string,int>::iterator it = chara.begin(); it != chara.end(); it++) {\n\t\t\tv.push_back(pii(it->second,-num));\n\t\t\tit->second = num;\n\t\t\tnum++;\n\t\t}\n\t\tfor(int i = 0; i < fav.size(); i++) {\n\t\t\tw[i].second = -chara[fav[i]];\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tsort(w.begin(), w.end());\n/*\n\t\tfor(int i = 0; i < v.size(); i++) {\n\t\t\tcout << v[i].first << \",\" << v[i].second << \" \";\n\t\t} cout << endl;\n\t\tfor(int i = 0; i < w.size(); i++) {\n\t\t\tcout << w[i].first << \",\" << w[i].second << \" \";\n\t\t} cout << endl;\n// */\n\t\tint l, r;\n\t\tint res = 0;\n\t\tl = 1, r = min(K,M);\n\t\twhile(l <= r) {\n\t\t\tint m = (l+r) / 2;\n\t\t\tlong long cost = 0;\n\t\t\tvector<pii>::iterator piv = v.end()-K+m-1;\n\n//\t\t\tcout << \"l:\" << l << \" m:\" << m << \" r:\" << r << \" \";\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n\t\t\tfor(int i = 0; i < m && i < w.size(); i++) {\n\t\t\t\tpii a;\n\t\t\t\ta = w[w.size()-i-1];\n\n\t\t\t\tcost += max(0, piv->first - a.first);\n\t\t\t\tif(piv->first == a.first && -piv->second > -a.second) {\n\t\t\t\t\tcost++;\n\t\t\t\t}\n\t\t\t\tif(*piv <= a && piv != v.begin()) {\n\t\t\t\t\tpiv--;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n//\t\t\tcout << \"cost:\" << cost << endl;\n\n\t\t\tif(cost <= L) {\n\t\t\t\tres = m;\n\t\t\t\tl = m+1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = m-1;\n\t\t\t}\n\t\t}\n\t\tcout << res << endl;\n//\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote!=c.vote) return vote>c.vote;\n\t\treturn name<c.name;\n\t}\n};\n\nll n,m,k,l;\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(unfavs[k-x].name<favs[i].name));\n\t\t//if(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tChara charas[100010];\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\t\tsort(favs.begin(),favs.end());\n\t\tsort(unfavs.begin(),unfavs.end());\n\n\t\tint lb=0,ub=min(m,k)+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tint cost=0;\n\tif(unfavs.size()<k-x+1) return false;\n\n\tREP(i,0,x){\n\t\tcost+=max(0,unfavs[k-x].vote-favs[i].vote+(favs[i].name>unfavs[k-x].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<iomanip>\n#include<vector>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<cassert>\nusing namespace std;\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\ntypedef pair<int,string> pis;\n\nbool cmp(const psi &a,const psi &b){//[A¼OÌÔ\n  if (a.second != b.second)return a.second > b.second;\n  return a.first < b.first;\n}\n\nbool cmp2(const pii &a,const pii &b){//[,idÌÔ\n  if (a.first != b.first)return a.first > b.first;\n  return a.second < b.second;\n}\n\nbool cmp3(const pis &a,const pis &b){//[,idÌÔ\n  if (a.first != b.first)return a.first > b.first;\n  return a.second < b.second;\n}\n\nbool isok(int n,vector<pis> &all,int m,vector<pis> &num,int h,int k){\n  int req=0;\n  //cout << n <<\" \" << all.size() <<\" \" << m <<\" \" << num.size() << endl;\n  if (all.size()+m <= k)return true;\n  pis &worst=n>=(int)all.size()?all[all.size()-1]:all[n];\n  for(int i=0;i<m;i++){\n    if (num[i].second < worst.second){\n      //¼Oª«Å¬³¢ÈçÎA¯¶[Å¢¢B\n      if (num[i].first < worst.first)req+=worst.first-num[i].first;\n    }else if (num[i].second > worst.second){\n      //¼Oª«Åå«¢Èç1[½­È¢Æ¢¯È¢B\n      if (num[i].first <= worst.first)req+=worst.first-num[i].first+1;\n    }else assert(false);\n  }\n  return req <= h;\n}\n\nint solve(vector<pis> &all,vector<pis> &num,int k,int h){\n  if (all.size() == 0)return min((int)num.size(),k);\n  if (all.size()+num.size() == k)return min((int)num.size(),k);\n  int ret=k <= all.size()?0:min(num.size(),all.size()-k);\n  int l=1,r=min(k,(int)num.size());\n  while(l <= r){\n    int mid=(l+r)/2;\n    int myfavor=mid,other=k-myfavor;\n    if (isok(other,all,myfavor,num,h,k)){\n      ret=mid;\n      l=mid+1;\n    }else r=mid-1;\n  }\n  return ret;\n}\n\nmain(){\n  int n,k,m,h;\n  while(cin>>n>>k>>m>>h){\n    if (n == 0 && k == 0 && m == 0 && h == 0)break;\n    vector<psi> in(n),dbAll,dbCand;\n    map<string,int> M;\n    set<string> S;\n    vector<pis> all,num;\n    for(int i=0;i<n;i++){\n      cin>>in[i].first>>in[i].second;\n    }\n    sort(in.begin(),in.end());//sort by name\n    for(int i=0;i<n;i++){\n      M[in[i].first]=i;\n    }\n\n    for(int i=0;i<m;i++){\n      string cand;\n      cin>>cand;\n      //num.push_back(make_pair(in[M[cand]].second,M[cand]));\n      num.push_back(make_pair(in[M[cand]].second,cand));\n      S.insert(cand);\n      dbCand.push_back(make_pair(cand,in[M[cand]].second));\n    }\n\n    for(int i=0;i<n;i++){\n      if (S.find(in[i].first) == S.end()){\n\t//all.push_back(make_pair(in[i].second,i));\n\tall.push_back(make_pair(in[i].second,in[i].first));\n\tdbAll.push_back(make_pair(in[i].first,in[i].second));\n      }\n    }\n\n    sort(all.begin(),all.end(),cmp3);\n    sort(num.begin(),num.end(),cmp3);\n\n    cout << solve(all,num,k,h) << endl;\n    /*\n    //debug\n    sort(in.begin(),in.end(),cmp);\n    sort(dbAll.begin(),dbAll.end(),cmp);\n    sort(dbCand.begin(),dbCand.end(),cmp);\n    cout <<\"namelist \" << endl;\n    for(int i=0;i<n;i++){\n      cout << in[i].first <<\" \" << in[i].second << \" \" << M[in[i].first] << endl;\n    }\n    cout <<\"hogelist------------\" << endl;\n    for(int i=0;i<dbAll.size();i++){\n      cout << dbAll[i].first <<\" \" << dbAll[i].second << \" \" << all[i].second <<endl;\n      assert(dbAll[i].second == all[i].first);\n    }\n    cout <<\"favor candidate-----------------\" << endl;\n    for(int i=0;i<dbCand.size();i++){\n      cout << dbCand[i].first <<\" \" << dbCand[i].second << \" \" << num[i].second << endl;\n      assert( dbCand[i].second == num[i].first);\n    }\n    cout <<\"--------------------------end--------------------------\"<<endl;\n    */\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nstruct BinaryIndexedTree\n{\n  vector< int > data;\n\n  BinaryIndexedTree(int sz)\n  {\n    data.assign(++sz, 0);\n  }\n\n  int sum(int k)\n  {\n    int ret = 0;\n    for(++k; k > 0; k -= k & -k) ret += data[k];\n    return (ret);\n  }\n\n  void add(int k, int x)\n  {\n    for(++k; k < data.size(); k += k & -k) data[k] += x;\n  }\n};\n\nint main()\n{\n  long long N, M, K, L;\n  char buff[12];\n\n  while(scanf(\"%lld %lld %lld %lld\", &N, &M, &K, &L), N) {\n\n    vector< pair< int, string > > data(N);\n    vector< int > toint(N);\n    vector< string > priority(N);\n    unordered_map< string, int > vv;\n    vector< bool > like(N, false);\n\n    for(int i = 0; i < N; i++) {\n      int x;\n      scanf(\" %s %d\", buff, &x);\n      data[i] = make_pair(-x, buff);\n      priority[i] = data[i].second;\n    }\n    sort(begin(priority), end(priority));\n    sort(begin(data), end(data));\n\n\n    for(int i = 0; i < N; i++) {\n      toint[i] = lower_bound(begin(priority), end(priority), data[i].second) - begin(priority);\n      vv[data[i].second] = i;\n      data[i].first *= -1;\n    }\n\n    for(int i = 0; i < M; i++) {\n      scanf(\"%s\", buff);\n      like[vv[buff]] = true;\n    }\n\n    BinaryIndexedTree bit(N);\n\n    long long right = K, bottom = 0, up = 0;\n    long long sz = 0, ret = 0, pre = 0;\n\n    for(int i = 0; i < K; i++) {\n      ret += like[i];\n    }\n\n    for(int i = K - 1; i >= 0; i--) {\n      if(!like[i]) {\n        while(right < N && !like[right]) ++right;\n        if(right == N) break;\n\n        if(data[i].first == data[pre].first) {\n          cerr << \"foo\" << endl;\n// ???????????¨???????????????????????????\n\n        }\n        L -= data[i].first - data[right].first;\n        L -= bottom * (data[i].first - data[pre].first);\n        L -= up * (data[i].first - data[pre].first - 1);\n\n        assert(bottom * (data[i].first - data[pre].first) >= 0);\n        assert(up * (data[i].first - data[pre].first - 1) >= 0);\n\n        bit.add(toint[right], 1);\n\n        bottom = bit.sum(toint[i]);\n        up = bit.sum(N - 1) - bottom;\n        pre = i;\n        sz = 0;\n\n        L -= up;\n\n\n        if(L < 0) break;\n        ++ret;\n        ++right;\n      } else {\n        if(i == 0) break;\n        bit.add(toint[i], 1);\n        L -= ++sz * (data[i - 1].first - data[i].first);\n      }\n    }\n\n    printf(\"%lld\\n\", ret);\n  }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nll n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\nvector<int> favsRanks;\nvector<int> favsDns;\nchar buf[1000];\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        ll sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            int rfi=favsRanks[i];\n            if(!f&&(k-rfi)>=t-i-1)\n                continue;\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            ll diff=-favsDns[i]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(cin>>n>>m>>k>>l&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        favsRanks.clear();\n        favsDns.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            string name;\n            //scanf(\"%s %d\\n\",buf,&s);\n            cin>>name>>s;\n            //string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            string name;\n            cin>>name;\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++){\n            favs.push_back(vpis[i].second);\n            favsRanks.push_back(ranks[vpis[i].second]);\n            favsDns.push_back(dns[vpis[i].second]);\n        }\n        int ub=m;\n        int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\n\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <string>\n#include <map>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nstruct Character {\n  string name;\n  int v;\n  int index;\n  Character() {;}\n  Character(string name, int v, int index) : name(name), v(v), index(index) {;}\n  bool operator<(const Character &rhs) const {\n    if (v != rhs.v) { return v > rhs.v; }\n    return name < rhs.name;\n  }\n};\n\nCharacter character[100010];\nCharacter sorted[100010];\nint fav[100010];\nbool bfav[100010];\nint need[100010];\nbool used[100010];\nint n, m, k, l;\n\nbool calc(int t) {\n  if (t > k || t > m) { return false; }\n  MEMSET(used, false);\n  REP(i, k - t + 1) {\n    if (bfav[sorted[i].index]) {\n      used[sorted[i].index] = true;\n      t--;\n    }\n    if (t <= 0) { return true; }\n  }\n  Character target = sorted[k - t];\n  REP(i, m) {\n    int index = fav[i];\n    if (used[index]) {\n      need[i] = l + 1;\n      continue;\n    }\n    need[i] = max(0, target.v - character[index].v);\n    if (target.name < character[index].name) {\n      need[i]++;\n    }\n  }\n  sort(need, need + m);\n  ll sum = 0;\n  REP(i, t) {\n    sum += need[i];\n  }\n  return sum <= l;\n}\n\nchar str[1000];\nint main() {\n  while (scanf(\"%d %d %d %d\", &n, &m, &k, &l), n|m|k|l) {\n    MEMSET(bfav, false);\n    map<string, int> mapto;\n    REP(i, n) {\n      int v;\n      scanf(\"%s %d\", str, &v);\n      character[i] = Character(str, v, i);\n      sorted[i] = character[i];\n      mapto[str] = i;\n    }\n    sort(sorted, sorted + n);\n    REP(i, m) {\n      scanf(\"%s\", str);\n      fav[i] = mapto[str];\n      bfav[fav[i]] = true;\n    }\n    sort(fav, fav + m);\n    int left = 0;\n    int right = min(m, k) + 1;\n    while (left != right) {\n      int mid = (left + right) / 2;\n      if (calc(mid)) {\n        left = mid + 1;\n      } else {\n        right = mid;\n      }\n    }\n    left--;\n    printf(\"%d\\n\", left);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100000];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tint cost=0,cnt=0,border=k-x;\n\tREP(i,0,min(border+1,k)) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\n\tborder=min(border,k);\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border){\n\t\t\t\tcost+=charas[k-x].vote-charas[i].vote;\n\t\t\t\tif(charas[i].name>=charas[k-x].name) ++cost;\n\t\t\t}\n\t\t\tif(i!=border) ++cnt;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\nstruct Chara{\n  string name;\n  int vote;\n  bool operator < (const Chara& c) const {\n    if(vote != c.vote) return vote > c.vote;\n    return name < c.name;\n  }\n};\n\nint main(){\n  int N, M, K, L;\n  while(cin >> N >> M >> K >> L && N){\n    Chara cs[100000];\n    REP(i, N){\n      char s[11];\n      scanf(\"%s %d\", s, &cs[i].vote);\n      cs[i].name = string(s);\n    }\n    sort(cs, cs + N);\n    set<string> favs;\n    REP(i, M){\n      char s[11];\n      scanf(\"%s\", s);\n      favs.insert(string(s));\n    }\n    int lb = 0, ub = min(M + 1, K + 1); // \n    while(lb + 1 < ub){\n      int X = (ub + lb) / 2; // X 人\n      int S = 0;\n      int idx = K - X;\n      int Rest = X;\n      for(int i = 0; i < N; i++) if(Rest > 0 && favs.count(cs[i].name)){\n        if(i > idx){\n          S += cs[idx].vote - cs[i].vote;\n          if(cs[idx].name < cs[i].name) S++;\n        }\n        Rest--;\n        idx++;\n      }\n      if(S <= L) {\n        lb = X;\n      }else{\n        ub = X;\n      }\n    }\n    cout << lb << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    // SõªãÊklÉÒÁ½èûÜé\n    else if(t==k){\n        int sum=0;\n        int ms=score[0].first;\n        string mname=score[0].second;\n        bool f=false;\n        for(int i = 0; i < t; i++){\n            if(!f&&ranks[favs[i]]==i+1)\n                continue;\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                f=true;\n                ms=score[i].first;\n                mname=score[i].second;\n            }\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    else{\n        int sum=0;\n        int ms=score[k-t].first;\n        string mname=score[k-t].second;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        int cnt=1;\n        bool f=false;\n        int lastRank=-1;\n        for(int i = 0; i < t; i++){\n            if(ranks[favs[i]]==i+1)\n                continue;\n            // ©ªÌâÂ¶áÈ­ÈÁ½ç\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        if(sum<=l)\n            return true;\n    }\n    return false;\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            char buf[1000];\n            scanf(\"%s %d\\n\",buf,&s);\n            //cin>>name>>s;\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n\n            char buf[2000];\n            scanf(\"%s\",&buf);\n            //cin>>name;\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++){\n            favs.push_back(vpis[i].second);\n        }\n\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub)){\n            printf(\"%d\\n\",ub);\n           // cout<<ub<<endl;\n        }\n        else{\n            printf(\"%d\\n\",ub-1);\n            //cout<<ub-1<<endl;\n        }\n    }\n}\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tint cost=0;\n\tif(unfavs.size()<k-x+1) return false;\n\n\tREP(i,0,x){\n\t\tcost+=max(0,unfavs[k-x].vote-favs[i].vote)+(favs[i].name>unfavs[k-x].name);\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <map>\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct data{\n  string name;\n  int hyou;\n  bool fav;\n  data(const char *nm, int hy) :\n    name(nm), hyou(hy), fav(false) {}\n};\n\nbool operator < (const data &lhs, const data &rhs){\n  if(lhs.hyou != rhs.hyou)\n    return lhs.hyou > rhs.hyou;\n  return lhs.name < rhs.name;\n}\n\nint main(){\n  int n, m, k, l;\n\n  while(scanf(\"%d%d%d%d\", &n, &m, &k, &l),\n        n + m + k + l){\n    vector<data> v; v.reserve(n);\n    map<string, int> memo;\n    vector<int> favs(m);\n    REP(i,n){\n      char buff[200]; int h;\n      scanf(\"%s%d\", buff, &h);\n      v.push_back(data(buff, h));\n    }\n\n    sort(v.begin(), v.end());\n\n    REP(i,n)\n      memo[v[i].name] = i;\n\n    REP(i,m){\n      char buff[200];\n      scanf(\"%s\", buff);\n      favs[i] = memo[buff];\n      v[favs[i]].fav = true;\n    }\n\n    sort(favs.begin(), favs.end());\n\n    int low  = 0;\n    int high = m;\n\n    while(low <= high){\n      int mid = (low + high) / 2;\n      bool ok = false;\n\n      int cnt = 0;\n      int i;\n      for(i = 0; i < n; i++){\n        if(k - i == mid - cnt && !v[i].fav) break;\n        if(v[i].fav) cnt++;\n      }\n\n      if(i == n){\n        ok = true;\n      }else{\n        const data &border = v[i];\n\n        ll need = 0;\n\n        REP(j,mid){\n          int id = favs[j];\n          if(id < i) continue;\n          const data &now = v[id];\n          if(now.name < border.name){\n            need += border.hyou - now.hyou;\n          }else{\n            need += border.hyou - now.hyou + 1;\n          }\n        }\n\n        if(need <= l) ok = true;\n        //printf(\"%d: %d (%d) %lld\\n\", mid, ok, i, need);\n      }\n\n      if(ok){\n        low  = mid + 1;\n      }else{\n        high = mid - 1;\n      }\n    }\n\n    printf(\"%d\\n\", high);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <iterator>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n \nusing namespace std;\n \n#define dump(n) cerr<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();++i)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n \ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n \ntypedef pair<int,string> pis;\n \nbool cmp(const pii& a,const pii& b)\n{\n    return a.first==b.first?a.second<b.second:a.first>b.first;\n}\n \nbool ok(vector<pii>& favs,vector<pii>& oths,int k,int l,int num)\n{\n    if(oths.size()<=k-num)\n        return true;\n     \n    ll need=0;\n    rep(i,num){\n        if(favs[i].first>oths[k-num].first)\n            continue;\n        else{\n            int diff=oths[k-num].first-favs[i].first;\n            bool after=favs[i].second>oths[k-num].second;\n            need+=diff+after;\n        }\n    }\n    return need<=l;\n}\n \nvoid solve(vs& names,vi& votes,vs& fnames,int k,int l)\n{\n    int n=names.size(),m=fnames.size();\n     \n    vector<pii> favs,oths; // vote,id\n    {\n        map<string,int> ma;\n        rep(i,n)\n            ma[names[i]]=0;\n        {int i=0; foreach(it,ma)\n            it->second=i++;\n        }\n        vi isfav(n);\n        rep(i,m)\n            isfav[ma[fnames[i]]]=1;\n        rep(i,n){\n            vector<pii>& chrs=isfav[ma[names[i]]]?favs:oths;\n            chrs.push_back(mp(votes[i],ma[names[i]]));\n        }\n    }\n     \n    sort(allof(favs),cmp);\n    sort(allof(oths),cmp);\n     \n    int left=0,right=1+min(m,k);\n    while(right-left>1){\n        int mid=(left+right)/2;\n        if(ok(favs,oths,k,l,mid))\n            left=mid;\n        else\n            right=mid;\n    }\n     \n    cout<<left<<endl;\n}\n \nint main()\n{\n    for(int n,m,k,l;scanf(\"%d%d%d%d\",&n,&m,&k,&l),n|m|k|l;){\n        vs names(n);\n        vi votes(n);\n        for(int i=0;i<n;i++){\n            char tmp[11];\n            scanf(\"%s%d\",tmp,&votes[i]);\n            names[i]=tmp;\n        }\n        vs favs(m);\n        rep(i,m){\n            char tmp[11];\n            scanf(\"%s\",tmp);\n            favs[i]=tmp;\n        }\n        solve(names,votes,favs,k,l);\n    }\n     \n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    for(;;){\n        int n, m, k, l;\n        cin >> n >> m >> k >> l;\n        if(n == 0)\n            return 0;\n\n        vector<pair<int, string> > x(n);\n        map<string, int> index;\n        for(int i=0; i<n; ++i){\n            cin >> x[i].second >> x[i].first;\n            x[i].first *= -1;\n        }\n        sort(x.begin(), x.end());\n        for(int i=0; i<n; ++i){\n            x[i].first *= -1;\n            index[x[i].second] = i;\n        }\n\n        vector<bool> fav(n, false);\n        for(int i=0; i<m; ++i){\n            string s;\n            cin >> s;\n            fav[index[s]] = true;\n        }\n\n        if(n == m || n == k){\n            cout << min(m, k) << endl;\n            continue;\n        }\n\n        int a = 0;\n        int b = min(m, k);\n        while(a < b){\n            int c = (a + b + 1) / 2;\n\n            int tmp = k - c;\n            int i = -1;\n            while(i+1 < n && tmp >= 0){\n                ++ i;\n                if(!fav[i])\n                    -- tmp;\n            }\n\n            long long rest = l;\n            tmp = c;\n            int j = -1;\n            while(tmp > 0){\n                ++ j;\n                if(fav[j]){\n                    if(i < n){\n                        if(x[j].second < x[i].second)\n                            rest -= max(0, x[i].first - x[j].first);\n                        else\n                            rest -= max(0, x[i].first - x[j].first + 1);\n                    }\n\n                    -- tmp;\n                }\n            }\n\n            if(rest >= 0)\n                a = c;\n            else\n                b = c - 1;\n        }\n\n        cout << a << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string>\n#include<map>\nusing namespace std;\nchar in[110];\nint e[110000];\nint f[110000];\nint v[110000];\nint y[110000];\npair<int,int> t[110000];\npair<int,int> s[110000];\nint main(){\n\tint a,b,c,d;\n\twhile(scanf(\"%d%d%d%d\",&a,&b,&c,&d),a){\n\t\tmap<string,int>m;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tscanf(\"%s%d\",in,e+i);\n\t\t\tstring tmp=in;\n\t\t\tm[tmp]=i;\n\t\t\tv[i]=0;\n\t\t}\n\t\tint now=0;\n\t\tfor(map<string,int>::iterator it=m.begin();it!=m.end();it++){\n\t\t\ty[(*it).second]=now++;\n\t\t}\n\t\tfor(int i=0;i<b;i++){\n\t\t\tscanf(\"%s\",in);\n\t\t\tstring tmp=in;\n\t\t\tf[i]=m[tmp];\n\t\t\tv[f[i]]=1;\n\t\t}\n\t\tint sz=0;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tif(!v[i])s[sz++]=make_pair(-e[i],y[i]);\n\t\t}\n\t\tstd::sort(s,s+sz);\n\t\tfor(int i=0;i<b;i++)t[i]=make_pair(-e[f[i]],y[f[i]]);\n\t\tstd::sort(t,t+b);\n\t\tint L=0;\n\t\tint R=min(b,c)+1;\n\t\twhile(L+1<R){\n\t\t\tint M=(L+R)/2;\n\t\t\tint rem=c-M;\n\t\t\tif(c-M>=sz){\n\t\t\t\tL=M;continue;\n\t\t\t}\n\t\t\tlong long pr=0;\n\t\t\tfor(int i=0;i<M;i++){\n\t\t\t\tint tmp=t[i].first-s[rem].first;\n\t\t\t\tif(t[i].second>s[rem].second)tmp++;\n\t\t\t\tpr+=max(0,tmp);\n\t\t\t}\n\t\t//\tprintf(\"%d: %lld\\n\",M,pr);\n\t\t\tif(pr<=d)L=M;\n\t\t\telse R=M;\n\t\t}\n\t\tprintf(\"%d\\n\",L);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <iterator>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n\nusing namespace std;\n\n#define dump(n) cerr<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();++i)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\ntypedef pair<int,string> pis;\n\nbool cmp(const pii& a,const pii& b)\n{\n\treturn a.first==b.first?a.second<b.second:a.first>b.first;\n}\n\nbool ok(vector<pii>& favs,vector<pii>& oths,int k,int l,int num)\n{\n\tif(oths.size()<=k-num)\n\t\treturn true;\n\t\n\tll need=0;\n\trep(i,num){\n\t\tif(favs[i].first>oths[k-num].first)\n\t\t\tcontinue;\n\t\telse{\n\t\t\tint diff=oths[k-num].first-favs[i].first;\n\t\t\tbool after=favs[i].second>oths[k-num].second;\n\t\t\tneed+=diff+after;\n\t\t}\n\t}\n\treturn need<=l;\n}\n\nvoid solve(vs& names,vi& votes,vs& fnames,int k,int l)\n{\n\tint n=names.size(),m=fnames.size();\n\t\n\tvector<pii> favs,oths; // vote,id\n\t{\n\t\tmap<string,int> ma;\n\t\trep(i,n)\n\t\t\tma[names[i]]=0;\n\t\t{int i=0; foreach(it,ma)\n\t\t\tit->second=i++;\n\t\t}\n\t\tvi isfav(n);\n\t\trep(i,m)\n\t\t\tisfav[ma[fnames[i]]]=1;\n\t\trep(i,n){\n\t\t\tvector<pii>& chrs=isfav[ma[names[i]]]?favs:oths;\n\t\t\tchrs.push_back(mp(votes[i],ma[names[i]]));\n\t\t}\n\t}\n\t\n\tsort(allof(favs),cmp);\n\tsort(allof(oths),cmp);\n\t\n\tint left=0,right=1+min(m,k);\n\twhile(right-left>1){\n\t\tint mid=(left+right)/2;\n\t\tif(ok(favs,oths,k,l,mid))\n\t\t\tleft=mid;\n\t\telse\n\t\t\tright=mid;\n\t}\n\t\n\tcout<<left<<endl;\n}\n\nint main()\n{\n\tfor(int n,m,k,l;scanf(\"%d%d%d%d\",&n,&m,&k,&l),n|m|k|l;){\n\t\tvs names(n);\n\t\tvi votes(n);\n\t\tfor(int i=0;i<n;i++){\n\t\t\tchar tmp[11];\n\t\t\tscanf(\"%s%d\",tmp,&votes[i]);\n\t\t\tnames[i]=tmp;\n\t\t}\n\t\tvs favs(m);\n\t\trep(i,m){\n\t\t\tchar tmp[11];\n\t\t\tscanf(\"%s\",tmp);\n\t\t\tfavs[i]=tmp;\n\t\t}\n\t\tsolve(names,votes,favs,k,l);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav==k-x+1){\n\t\t\tborder=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border) cost+=charas[border].vote-charas[i].vote+(charas[i].name>=charas[border].name);\n\t\t\t++cnt_fav;\n\t\t\tdump(i);\n\t\t\tdump(cost);\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <utility>\n#include <map>\nusing namespace std;\n\ntypedef pair<string,int> psi;\ntypedef pair<int,int> pii;\n\nint N, M, K, L;\nmap<string,int> chara;\nvector<string> fav;\n\nvector<pii> v;\nvector<pii> w;\n\nint main() {\n\twhile(cin >> N >> M >> K >> L, N||M||K||L) {\n\t\tchara.clear(); fav.clear(); v.clear(); w.clear();\n\t\tfav.resize(M);\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tstring s;\n\t\t\tint x;\n\t\t\tcin >> s >> x;\n\t\t\tchara[s] = x;\n\t\t}\n\t\tfor(int i = 0; i < M; i++) {\n\t\t\tcin >> fav[i];\n\t\t\tw.push_back(pii(chara[fav[i]],-1));\n\t\t}\n\t\tint num = 0;\n\t\tfor(map<string,int>::iterator it = chara.begin(); it != chara.end(); it++) {\n\t\t\tv.push_back(pii(it->second,-num));\n\t\t\tit->second = num;\n\t\t\tnum++;\n\t\t}\n\t\tfor(int i = 0; i < fav.size(); i++) {\n\t\t\tw[i].second = -chara[fav[i]];\n\t\t}\n\t\tsort(v.begin(), v.end());\n\t\tsort(w.begin(), w.end());\n/*\n\t\tfor(int i = 0; i < v.size(); i++) {\n\t\t\tcout << v[i].first << \",\" << v[i].second << \" \";\n\t\t} cout << endl;\n\t\tfor(int i = 0; i < w.size(); i++) {\n\t\t\tcout << w[i].first << \",\" << w[i].second << \" \";\n\t\t} cout << endl;\n// */\n\t\tint l, r;\n\t\tint res = 0;\n\t\tl = 1, r = K;\n\t\twhile(l <= r) {\n\t\t\tint m = (l+r) / 2;\n\t\t\tint cost = 0;\n\t\t\t//pii piv = v[v.size()-(K-m)];\n\t\t\tvector<pii>::iterator piv = v.end()-(K-m)-1;\n\n//\t\t\tcout << \"l:\" << l << \" m:\" << m << \" r:\" << r << \" \";\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n\t\t\tfor(int i = 0; i < m && i < w.size(); i++) {\n\t\t\t\tpii a;\n\t\t\t\ta = w[w.size()-i-1];\n\t\t\t\tcost += max(0, piv->first - a.first);\n\n\t\t\t\tif(*piv <= a && piv != v.begin()) {\n\t\t\t\t\tpiv--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(piv->first == a.first && -piv->second > -a.second) {\n\t\t\t\t\t\tcost++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n//\t\t\tcout << \"piv:\" << piv->first << \",\" << piv->second << \" \";\n//\t\t\tcout << \"cost:\" << cost << endl;\n\n\t\t\tif(cost <= L) {\n\t\t\t\tres = m;\n\t\t\t\tl = m+1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = m-1;\n\t\t\t}\n\t\t}\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tChara(){}\n\tChara(string name,int vote):vote(vote),name(name){}\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name>c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100000];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k) return false;\n\tint cost=0,cnt=0,border=k-x;\n\tREP(i,0,min(border,k)) if(favs.find(charas[i].name)!=favs.end()) ++border;\n\n\tborder=min(border,k);\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cost);\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border){\n\t\t\t\tcost+=charas[k-x].vote-charas[i].vote;\n\t\t\t\tif(charas[i].name>=charas[k-x].name) ++cost;\n\t\t\t}\n\t\t\tif(i!=border) ++cnt;\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<map>\n#include<string>\n#include<vector>\n#include<set>\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n  for(int N,M,K,L;cin>>N>>M>>K>>L,N;){\n    map<string,int> m;\n    vector<string> names(N);\n    for(int i=0;i<N;i++){\n      string name;\n      int x;\n      cin>>name>>x;\n      m[name]=x;\n      names[i]=name;\n    }\n    vector<string> fav(M);\n    for(auto &e:fav){\n      cin>>e;\n    }\n    set<string> sfav(begin(fav),end(fav));\n    sort(begin(fav),end(fav),[&](string a,string b){\n\treturn (m[a]!=m[b])?m[a]>m[b]:a<b;\n      });\n    int l=0,h=min(M,K)+1;\n    // while(h-l>1){\n    //   int mid=(l+h)/2;\n    //   int vl=0,vh=2e9;\n    //   while(vh-vl>1){\n    // \tint vm=(vh+vl)/2;\n    // \tlong long nv=0;\n    // \tfor(int i=0;i<mid;i++){\n    // \t  nv+=max(0,vm-m[fav[i]]);\n    // \t}\n    // \tif(nv>L){\n    // \t  vh=vm;\n    // \t}else{\n    // \t  vl=vm;\n    // \t}\n    //   }\n    //   auto vmap=m;\n    //   vector<string> vc(begin(fav),begin(fav)+mid);\n    //   int rl=L;\n    //   for(auto e:vc){\n    // \tvmap[e]=max(vl,vmap[e]);\n    // \trl-=max(0,vl-m[e]);\n    //   }\n    //   sort(vc.rbegin(),vc.rend());\n    //   for(int i=0;i<rl;i++){\n    // \tvmap[vc[i]]++;\n    //   }\n    //   sort(begin(names),end(names),[&](string a,string b){\n    // \t  return (vmap[a]!=vmap[b])?vmap[a]>vmap[b]:a<b;\n    // \t});\n    //   int ri=0;\n    //   for(int i=0;i<K;i++){\n    // \tri+=sfav.count(names[i]);\n    //   }\n    //   if(ri>=mid){\n    // \tl=mid;\n    //   }else{\n    // \th=mid;\n    //   }\n    // }\n    cout<<l<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tll vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote!=c.vote) return vote>c.vote;\n\t\treturn name<c.name;\n\t}\n};\n\nll n,m,k,l;\nChara charas[100010];\nvector<Chara> favs,unfavs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tif(unfavs.size()<k-x+1) return false;\n\tdump(x);\n\n\tll cost=0;\n\tREP(i,0,x){\n\t\tcost+=max(0LL,unfavs[k-x].vote-favs[i].vote+(unfavs[k-x].name<favs[i].name));\n\t\tif(cost>l) return false;\n\t}\n\t\n\treturn cost<=l;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tunordered_set<string> fav_names(m);\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfav_names.insert(name);\n\t\t}\n\t\tREP(i,0,n){\n\t\t\tif(fav_names.find(charas[i].name)!=fav_names.end()) favs.push_back(charas[i]);\n\t\t\telse unfavs.push_back(charas[i]);\n\t\t}\n\t\tsort(favs.begin(),favs.end());\n\t\tsort(unfavs.begin(),unfavs.end());\n\n\t\tint lb=0,ub=min(m,k)+1;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t\tunfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#define rep(i,a) for(int i = 0;i < (a); i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n#define repd(i,a,b) for(int i = (a); i >= (b); i--)\n#define repit(i,a) for(__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)\n#define all(u) (u).begin(),(u).end()\n#define rall(u) (u).rbegin(),(u).rend()\n#define UNIQUE(u) (u).erase(unique(all(u)),(u).end())\n#define pb push_back\n#define mp make_pair\n#define INF 1e9\n#define EPS 1e-9\n#define PI acos(-1.0)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\n\nint n, m, k, l;\nmap<string, int> table;\nvector<pair<int, string> > fav;\nvector<pair<int, string> > cv;\nbool C(int a){\n    int tl = l;\n    int num = 0;\n    rep(i, a){\n        int tp = cv[k-a+num].first;\n        string name = fav[i].second;\n        if(-tp < -fav[i].first) {\n            num++;\n            continue;\n        }\n//        cout << tp << \" \" << fav[i].first << endl;\n        tl -= fav[i].first - tp;\n        int rank = 214214;\n        rank = lower_bound(all(cv), mp(tp, name)) - cv.begin();\n        \n        if(rank > k-a+num) tl--;    \n    }\n//    cout << a << \" \" << tl << endl;\n    return (tl >= 0);\n}\nint main() {\n    while(cin >> n >> m >> k >> l, n){\n        table.clear();\n        rep(i, n){\n            string name;\n            int x;\n            cin >> name >> x;\n            table[name] = x;\n        }\n        cv.clear();\n        repit(itr, table) cv.pb(mp(-itr->second, itr->first));\n        sort(all(cv));\n//        repit(itr, cv) cout << itr->first << \" \" << itr->second << endl;\n//        cout << \"AA\\n\";\n        fav.clear();\n        rep(i, m) {\n            string name;\n            cin >> name;\n            fav.push_back(mp(-table[name], name));\n        }\n        sort(all(fav));\n        int lower = 0;\n        int upper = min(k, m) + 1;\n        int mid;\n        while(lower + 1 < upper){\n            mid = (lower + upper)/2;\n            if(C(mid)) lower = mid;\n            else upper = mid;\n        }\n       \n        cout << lower << endl;\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <map>\n#include <utility>\n\n#define REP(i, a, b) for (int i = int(a); i < int(b); i++)\n#ifdef _DEBUG_\n#define dump(val) cerr << __LINE__ << \":\\t\" << #val << \" = \" << (val) << endl\n#else\n#define dump(val)\n#endif\n\nusing namespace std;\n\ntypedef long long int ll;\ntypedef pair<ll, string> P;\n\ntemplate<typename T>\nvector<T> make_v(size_t a, T b) {\n    return vector<T>(a, b);\n}\n\ntemplate<typename... Ts>\nauto make_v(size_t a, Ts... ts) {\n    return vector<decltype(make_v(ts...))>(a, make_v(ts...));\n}\n\nbool cmp(const P &p1, const P &p2) {\n    if (p1.first != p2.first) {\n        return p1.first > p2.first;\n    } else {\n        return p1.second < p2.second;\n    }\n}\n\nint main() {\n    cin.tie(nullptr);\n    ios::sync_with_stdio(false);\n    int N, M, K, L;\n    while (cin >> N >> M >> K >> L, N) {\n\n        vector<P> anime(N);\n        vector<P> fav(M);\n        {\n            map<string, ll> mp;\n            REP(i, 0, N) {\n                cin >> anime[i].second >> anime[i].first;\n                mp[anime[i].second] = anime[i].first;\n            }\n\n            REP(i, 0, M) {\n                cin >> fav[i].second;\n                fav[i].first = mp[fav[i].second];\n            }\n        }\n        sort(anime.begin(), anime.end(), cmp);\n        sort(fav.begin(), fav.end(), cmp);\n        if (N == K) {\n            cout << M << endl;\n            continue;\n        }\n\n        int l = 0, r = min(K, M);\n        int ans = 0;\n        while (l <= r) {\n            auto cp = anime;\n            int mid = (l + r) / 2;\n            ll sum = 0;\n            REP (i, 0, mid) {\n                int p1 = i, p2 = K - mid + i;\n                if (cmp(cp[p2], fav[p1])) {\n                    sum += cp[p2].first - fav[p1].first;\n                    sum += (cp[p2].second < fav[p1].second);\n                    swap(cp[p2], cp[p2 + 1]);\n                } \n            }\n            if (sum <= L) {\n                ans = mid;\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        cout << ans << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <utility>\n#include <vector>\n#include <list>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <sstream>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\n#define ALL(c) c.begin(),c.end()\n#define RALL(c) c.rbegin(),c.rend()\n#define SORT(x) sort((x).begin(),(x).end())\n#define REP(i,x,y) for(int i=(x);i<(y);++i)\n#define MP(a,b) make_pair((a),(b))\n#define debug(x) #x << \"=\" << (x)\n \n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#define dump(x) std::cerr << debug(x) << \" (L:\" << __LINE__ << \")\" << std::endl\n#else\n#define dump(x)\n#endif\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\n//template<typename T> using vec=std::vector<T>;\n\nconst int INF=1<<30;\nconst long long int INF_=1LL<<58;\nconst double EPS=1e-9;\nconst int dx[]={1,0,-1,0},dy[]={0,1,0,-1};\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &vec){\n\tos << \"[\";\n\tfor (const auto &v : vec) {\n\t\tos << v << \",\";\n\t}\n\tos << \"]\";\n\treturn os;\n}\n\nstruct Chara{\n\tstring name;\n\tint vote;\n\tbool operator<(const Chara &c)const{\n\t\tif(vote==c.vote) return name<c.name;\n\t\treturn vote>c.vote;\n\t}\n};\n\nint n,m,k,l;\nChara charas[100010];\nunordered_set<string> favs;\n\nbool Check(int x){\n\tif(x>k||x>m) return false;\n\tint cost=0,cnt_unfav=0,cnt_fav=0,border=0;\n\tREP(i,0,n){\n\t\tdump(i);\n\t\tdump(cnt_unfav);\n\t\tif(favs.find(charas[i].name)==favs.end()) ++cnt_unfav;\n\t\tif(cnt_unfav==k-x+1){\n\t\t\tborder=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(cnt_unfav!=k-x+1) return false;\n\n\tdump(x);\n\tdump(border);\n\tREP(i,0,n){\n\t\tif(favs.find(charas[i].name)!=favs.end()){\n\t\t\tif(i>border) cost+=charas[border].vote-charas[i].vote+(charas[i].name>charas[border].name);\n\t\t\t++cnt_fav;\n\t\t\tdump(i);\n\t\t\tdump(cost);\n\t\t\tif(l<cost) return false;\n\t\t\tif(cnt_fav==x) break;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nvoid Solve(){\n\twhile(true){\n\t\tcin >> n >> m >> k >> l;\n\t\tif(n+m+k+l==0) break;\n\t\tREP(i,0,n) cin >> charas[i].name >> charas[i].vote;\n\t\tREP(i,0,m){\n\t\t\tstring name;\n\t\t\tcin >> name;\n\t\t\tfavs.insert(name);\n\t\t}\n\t\tsort(charas,charas+n);\n\t\tREP(i,0,n){\n\t\t\tdump(charas[i].name);\n\t\t\tdump(charas[i].vote);\n\t\t}\n\n\t\tint lb=0,ub=m+10;\n\t\twhile(true){\n\t\t\tif(ub-lb<=1){\n\t\t\t\tif(Check(ub)) lb=ub;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint mid=(lb+ub)/2;\n\t\t\tif(Check(mid)) lb=mid;\n\t\t\telse ub=mid;\n\t\t}\n\n\t\tcout << lb << endl;\n\n\t\tfavs.clear();\n\t}\n}\n\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tSolve();\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <cmath>\n#include <fstream>\n#include <algorithm>\n#include <string>\n#include <queue>\n#include <set>\n#include <map>\n#include <complex>\n#include <iterator>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\n#define EPS (1e-10)\n#define EQ(a,b) (abs((a) - (b)) < EPS)\n#define EQV(a,b) (EQ((a).real(),(b).real()) && EQ((a).imag(),(b).imag()))\n\ntypedef complex<double> P;\ntypedef long long ll;\n\nint n,m,k,l;\nvector<pair<int,string> > score;\nmap<string,int> dns;\nmap<string,int> ranks; \nvector<string> favs;\n\n// tlðãÊklÉüêé±ÆªÂ\\©\nbool check(int t){\n    if(t>k)\n        return false;\n    else{\n        int sum=0;\n        int ms;\n        string mname;\n        // tlÌ¤¿Ak-tÈãÌÊðæÁÄ¢éàÌÍ³µA»ÌÙ©Ì¨ÉÂ¢Äl¦é\n        bool f=false;\n        int p=0;\n        for(int i = 0; i < t; i++){\n            // A±µÄÊªßçêéÆ±ëÜÅßé\n            // »ÝÌÊuÌÜÜÅàcèÌvf·×Äªüè¤é©Ç¤©\n            if(!f&&(k-ranks[favs[i]])>=t-i-1){\n                p=ranks[favs[i]];\n                continue;\n            }\n            // à¤ß«êÈ¢ÌÅAæÃ~ÉÊðã¸³¹é\n            if(!f){\n                ms=score[k+i-t].first;\n                mname=score[k+i-t].second;\n                f=true;\n            }\n            // cÁ½àÌðüêéÉ«èépÉ}ü\n            int diff=-dns[favs[i]]+ms;\n            if(mname<favs[i])\n                diff++;\n            sum+=diff;\n        }\n        return (sum<=l);\n    }\n}\n\nvoid solve(){\n    while(scanf(\"%d %d %d %d\\n\",&n,&m,&k,&l)&&!(n==0&&k==0&&m==0&&l==0)){\n        score.clear();favs.clear();dns.clear();ranks.clear();\n        for(int i = 0; i < n; i++){\n            int s;\n            char buf[1000];\n            scanf(\"%s %d\\n\",buf,&s);\n            string name(buf);\n            score.push_back(make_pair(-s,name));\n            dns[name]=s;\n        }\n        sort(score.begin(),score.end());\n        // ¾_ð³ÌÉßµANðÂ¯é\n        for(int i = 0; i < n; i++){\n            score[i].first=score[i].first*(-1);\n            ranks[score[i].second]=i+1;\n        }\n        vector<pair<int,string> > vpis;\n        for(int i = 0; i < m; i++){\n            char buf[2000];\n            scanf(\"%s\",&buf);\n            string name(buf);\n            vpis.push_back(make_pair(ranks[name],name));\n        }\n        sort(vpis.begin(),vpis.end());\n        for(int i = 0; i < m; i++)\n            favs.push_back(vpis[i].second);\n        int ub=m;int lb=-1;\n        while(ub-lb>1){\n            int med=(ub+lb)/2;\n            if(!check(med))\n                ub=med;\n            else\n                lb=med;\n        }\n        if(check(ub))\n            printf(\"%d\\n\",ub);\n        else\n            printf(\"%d\\n\",ub-1);\n    }\n}\n\n\nint main(){\n\n    solve();\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<map>\n#include<cstdio>\n#include<string>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nstruct Idol{\n\tint vote;\n\tbool love;\n\tstring name;\n\tbool operator<(const Idol &I)const{\n\t\tif(vote!=I.vote) return vote>I.vote;\n\t\treturn name<I.name;\n\t}\n};\n\nint main(){\n\tfor(int n,m,k,l;scanf(\"%d%d%d%d\",&n,&m,&k,&l),n;){\n\t\tmap<string,int> f;\n\t\tstatic Idol I[100000];\n\t\trep(i,n){\n\t\t\tchar s[11]; scanf(\"%s%d\",s,&I[i].vote);\n\t\t\tI[i].name=s;\n\t\t\tf[s]=i;\n\t\t\tI[i].love=false;\n\t\t}\n\t\trep(i,m){\n\t\t\tchar s[11]; scanf(\"%s\",s);\n\t\t\tI[f[s]].love=true;\n\t\t}\n\t\tsort(I,I+n);\n\n\t\tint lo=0,hi=k;\n\t\twhile(lo<hi){\n\t\t\tint mi=(lo+hi+1)/2;\n\n\t\t\tint thr=n-1,cnt=0;\n\t\t\trep(i,n) if(!I[i].love) {\n\t\t\t\tif(cnt==k-mi){ thr=i; break; }\n\t\t\t\tcnt++;\n\t\t\t}\n\n\t\t\tcnt=0;\n\t\t\tint v=l;\n\t\t\trep(i,n) if(I[i].love) {\n\t\t\t\tint tmp;\n\t\t\t\tif(i>thr) tmp=I[thr].vote-I[i].vote+(I[thr].name<I[i].name?1:0);\n\t\t\t\telse      tmp=0;\n\n\t\t\t\tif(v>=tmp) v-=tmp, cnt++;\n\t\t\t\telse break;\n\t\t\t}\n\n\t\t\tif(cnt>=mi) lo=mi; else hi=mi-1;\n\t\t}\n\n\t\tprintf(\"%d\\n\",lo);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string>\n#include<map>\nusing namespace std;\nchar in[110];\nint e[110000];\nint f[110000];\nint v[110000];\nint y[110000];\npair<int,int> t[110000];\npair<int,int> s[110000];\nint main(){\n\tint a,b,c,d;\n\twhile(scanf(\"%d%d%d%d\",&a,&b,&c,&d),a){\n\t\tmap<string,int>m;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tscanf(\"%s%d\",in,e+i);\n\t\t\tstring tmp=in;\n\t\t\tm[tmp]=i;\n\t\t\tv[i]=0;\n\t\t}\n\t\tint now=0;\n\t\tfor(map<string,int>::iterator it=m.begin();it!=m.end();it++){\n\t\t\ty[(*it).second]=now++;\n\t\t}\n\t\tfor(int i=0;i<b;i++){\n\t\t\tscanf(\"%s\",in);\n\t\t\tstring tmp=in;\n\t\t\tf[i]=m[tmp];\n\t\t\tv[f[i]]=1;\n\t\t}\n\t\tint sz=0;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tif(!v[i])s[sz++]=make_pair(-e[i],y[i]);\n\t\t}\n\t\tstd::sort(s,s+sz);\n\t\tfor(int i=0;i<b;i++)t[i]=make_pair(-e[f[i]],y[f[i]]);\n\t\tstd::sort(t,t+b);\n\t\tint L=0;\n\t\tint R=min(b,c)+1;\n\t\twhile(L+1<R){\n\t\t\tint M=(L+R)/2;\n\t\t\tint rem=c-M;\n\t\t\tlong long pr=0;\n\t\t\tfor(int i=0;i<M;i++){\n\t\t\t\tint tmp=t[i].first-s[rem].first;\n\t\t\t\tif(t[i].second>s[rem].second)tmp++;\n\t\t\t\tpr+=max(0,tmp);\n\t\t\t}\n\t\t//\tprintf(\"%d: %lld\\n\",M,pr);\n\t\t\tif(pr<=d)L=M;\n\t\t\telse R=M;\n\t\t}\n\t\tprintf(\"%d\\n\",L);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 1080: Everything Starts With Your Vote\n// 2018.2.4 bal4u\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define HASHSIZ\t\t150011\ntypedef struct { char *s; int id; } HASH;\nHASH hash[HASHSIZ+2], *hashend = hash + HASHSIZ;\t\t\t// Hash table\n\nvoid insert(char *s, int id)\n{\n\tunsigned i = 0;\n\tint inc = *s;\n\tchar *p = s;\n\tHASH *tp;\n\n\twhile (*p) i = (i<<5) + *p++; i %= HASHSIZ;\n\ttp = hash + i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\ttp->s = s, tp->id = id;\n}\n\nint lookup(char *s)\n{\n\tunsigned i = 0;\n\tint inc = *s;\n\tchar *p = s;\n\tHASH *tp;\n\n\twhile (*p) i = (i<<5) + *p++; i %= HASHSIZ;\n\ttp = hash + i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return tp->id;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\treturn -1;\n}\n\ntypedef struct { char *nm; int x; char fav; } T;\nT tbl[100002], *fav;\nchar name[100002][22];\nint N, M, K, L;\n\nchar buf[50], *p;\nint in()\n{\n\tint n = 0;\n\twhile (*p >= '0') n = (n<<3) + (n<<1) + (*p++ & 0xf);\n\tp++;\n\treturn n;\n}\n\nint cmp(T *a, T *b)\n{\n\tif (a->fav - b->fav) return a->fav - b->fav;\n\tif (b->x - a->x) return b->x - a->x;\n\treturn strcmp(a->nm, b->nm);\n}\n\nint check(int m)\n{\n\tint i, f, x, base, sum;\n\tchar *nm;\n\n\tbase = K-m;\n\tif (base < 0) return 0;\n\tif (base >= N) return 1;\n\tsum = 0, nm = tbl[base].nm, base = tbl[base].x;\n\tfor (i = 0; i < m; i++) {\n\t\tx = base - fav[i].x;\n\t\tif (x < 0) continue;\n\t\tf = (strcmp(fav[i].nm, nm) <= 0);\n\t\tif (!x && f) continue;\n\t\tsum += x; if (!f) sum++;\n\t\tif (sum > L) return 0;\n\t}\n\treturn sum <= L;\n}\n\nint main()\n{\n\tint i, lo, hi, mi;\n\n\twhile (fgets(p=buf, 50, stdin) && *p != '0') {\n\t\tN = in(), M = in(), K = in(), L = in();\n\t\tmemset(hash, 0, sizeof(hash));\n\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tfgets(name[i], 22, stdin);\n\t\t\ttbl[i].nm = p = name[i];\n\t\t\twhile (*p > ' ') p++; *p++ = 0;\n\t\t\tinsert(name[i], i);\n\t\t\ttbl[i].x = in(), tbl[i].fav = 0;\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tfgets(p=buf, 12, stdin);\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\ttbl[lookup(buf)].fav = 1;\n\t\t}\n\t\tqsort(tbl, N, sizeof(T), cmp);\n\t\tN -= M, fav = tbl + N;\n\n\t\tlo = 0;\n\t\thi = M; if (hi > K) hi = K; hi++;\n\t\twhile (hi-lo > 1) {\n\t\t\tmi = (lo + hi) >> 1;\n\t\t\tif (check(mi)) lo = mi; else hi = mi;\n\t\t}\n\t\tprintf(\"%d\\n\", lo);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "// AOJ 1080: Everything Starts With Your Vote\n// 2018.2.4 bal4u\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define HASHSIZ\t\t262144\t// 2^18\n#define HASHMOD\t\t262143\ntypedef struct { char *s; int id; } HASH;\nHASH hash[HASHSIZ+2], *hashend = hash + HASHSIZ;\t\t\t// Hash table\n\nvoid insert(char *s, int id)\n{\n\tlong long i;\n\tchar *p;\n\tHASH *tp;\n\tint inc;\n\n\ti = 0, p = s; while (*p) i = (i << 5) + (*p++ & 0x1f); i &= HASHMOD;\n\ttp = hash + (int)i, inc = *s + (*(s + 1) << 1);\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\ttp->s = s, tp->id = id;\n}\n\nint lookup(char *s)\n{\n\tlong long i;\n\tchar *p;\n\tHASH *tp;\n\tint inc;\n\n\ti = 0, p = s; while (*p) i = (i << 5) + (*p++ & 0x1f); i &= HASHMOD;\n\ttp = hash + (int)i, inc = *s + (*(s + 1) << 1);\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return tp->id;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\treturn -1;\n}\n\ntypedef struct { char *nm; int x; char fav; } T;\nT tbl[100002], *fav;\nchar name[100002][22];\nint N, M, K, L;\n\n//#define getchar_unlocked()  getchar()\nint in()\n{\n\tint n = 0;\n\tint c = getchar_unlocked();\n\tdo n = (n<<3)+(n<<1) + (c & 0xf), c = getchar_unlocked();\n\twhile (c >= '0');\n\treturn n;\n}\n\nint cmp(T *a, T *b)\n{\n\tif (a->fav - b->fav) return a->fav - b->fav;\n\tif (b->x - a->x) return b->x - a->x;\n\treturn strcmp(a->nm, b->nm);\n}\n\nint check(int m)\n{\n\tint i, f, x, base, sum;\n\tchar *nm;\n\n\tbase = K-m;\n\tif (base < 0) return 0;\n\tif (base >= N) return 1;\n\tsum = 0, nm = tbl[base].nm, base = tbl[base].x;\n\tfor (i = 0; i < m; i++) {\n\t\tx = base - fav[i].x;\n\t\tif (x < 0) continue;\n\t\tf = (strcmp(fav[i].nm, nm) <= 0);\n\t\tif (!x && f) continue;\n\t\tsum += x; if (!f) sum++;\n\t\tif (sum > L) return 0;\n\t}\n\treturn sum <= L;\n}\n\nint main()\n{\n\tint i, lo, hi, mi;\n\tchar buf[12], *p;\n\n\twhile (N = in()) {\n\t\tM = in(), K = in(), L = in();\n\t\tmemset(hash, 0, sizeof(hash));\n\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tfgets(name[i], 22, stdin);\n\t\t\ttbl[i].nm = p = name[i];\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\tinsert(name[i], i);\n\t\t\ttbl[i].x = atoi(p+1), tbl[i].fav = 0;\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tfgets(p=buf, 12, stdin);\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\ttbl[lookup(buf)].fav = 1;\n\t\t}\n\t\tqsort(tbl, N, sizeof(T), cmp);\n\t\tfav = tbl + N - M, N -= M;\n\n\t\tlo = 0;\n\t\thi = M; if (hi > K) hi = K; hi++;\n\t\twhile (hi-lo > 1) {\n\t\t\tmi = (lo + hi) >> 1;\n\t\t\tif (check(mi)) lo = mi; else hi = mi;\n\t\t}\n\t\tprintf(\"%d\\n\", lo);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "// AOJ 1080: Everything Starts With Your Vote\n// 2018.2.4 bal4u\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define HASHSIZ\t\t200017\ntypedef struct { char *s; int id; } HASH;\nHASH hash[HASHSIZ+2], *hashend = hash + HASHSIZ;\t\t\t// Hash table\n\nvoid insert(char *s, int w, int id)\n{\n\tlong long i;\n\tchar *p;\n\tHASH *tp;\n\tint inc = *s + (*(s + 1) << 1);\n\ti = 0, p = s; while (*p) i = i*37 + *p++; i %= HASHSIZ;\n\ttp = hash + (int)i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\ttp->s = s, tp->id = id;\n}\n\nint lookup(char *s, int w)\n{\n\tlong long i;\n\tchar *p;\n\tHASH *tp;\n\tint inc = *s + (*(s + 1) << 1);\n\ti = 0, p = s; while (*p) i = i*37 + *p++; i %= HASHSIZ;\n\ttp = hash + (int)i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return tp->id;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\treturn -1;\n}\n\ntypedef struct { char *nm; int x; char fav; } T;\nT tbl[100002], *fav;\nchar name[100002][22];\nint N, M, K, L;\n\n#define getchar_unlocked()  getchar()\nint in()\n{\n\tint n = 0;\n\tint c = getchar_unlocked();\n\tdo n = (n<<3)+(n<<1) + (c & 0xf), c = getchar_unlocked();\n\twhile (c >= '0');\n\treturn n;\n}\n\nint cmp(T *a, T *b)\n{\n\tif (a->fav - b->fav) return a->fav - b->fav;\n\tif (b->x - a->x) return b->x - a->x;\n\treturn strcmp(a->nm, b->nm);\n}\n\nint check(int m)\n{\n\tint i, f, x, base, sum;\n\tchar *nm;\n\n\tbase = K-m;\n\tif (base < 0) return 0;\n\tif (base >= N) return 1;\n\tsum = 0, nm = tbl[base].nm, base = tbl[base].x;\n\tfor (i = 0; i < m; i++) {\n\t\tx = base - fav[i].x;\n\t\tif (x < 0) continue;\n\t\tf = (strcmp(fav[i].nm, nm) <= 0);\n\t\tif (!x && f) continue;\n\t\tsum += x; if (!f) sum++;\n\t\tif (sum > L) return 0;\n\t}\n\treturn sum <= L;\n}\n\nint main()\n{\n\tint i, lo, hi, mi;\n\tchar buf[12], *p;\n\n\twhile (N = in()) {\n\t\tM = in(), K = in(), L = in();\n\t\tmemset(hash, 0, sizeof(hash));\n\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tfgets(name[i], 22, stdin);\n\t\t\ttbl[i].nm = p = name[i];\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\tinsert(name[i], p-name[i], i);\n\t\t\ttbl[i].x = atoi(p+1), tbl[i].fav = 0;\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tfgets(p=buf, 12, stdin);\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\ttbl[lookup(buf, p-buf)].fav = 1;\n\t\t}\n\t\tqsort(tbl, N, sizeof(T), cmp);\n\t\tfav = tbl + N - M, N -= M;\n\n\t\tlo = 0;\n\t\thi = M; if (hi > K) hi = K; hi++;\n\t\twhile (hi-lo > 1) {\n\t\t\tmi = (lo + hi) >> 1;\n\t\t\tif (check(mi)) lo = mi; else hi = mi;\n\t\t}\n\t\tprintf(\"%d\\n\", lo);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "// AOJ 1080: Everything Starts With Your Vote\n// 2018.2.4 bal4u\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define HASHSIZ 200009\ntypedef struct { char *s; int id; } HASH;\nHASH hash[HASHSIZ+2], *hashend = hash + HASHSIZ;\t\t\t// Hash table\n\nvoid insert(char *s, int w, int id)\n{\n\tint i = (101 * *s + 103 * *(s+w-1) + 107 * w) % HASHSIZ;\n\tHASH *tp = hash + i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return;\n\t\tif (++tp == hashend) tp = hash;\n\t}\n\ttp->s = s, tp->id = id;\n}\n\nint lookup(char *s, int w)\n{\n\tint i = (101 * *s + 103 * *(s+w-1) + 107 * w) % HASHSIZ;\n\tHASH *tp = hash + i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return tp->id;\n\t\tif (++tp == hashend) tp = hash;\n\t}\n\treturn -1;\n}\n\n#define INF 100000001\ntypedef struct { char *nm; int x; } T;\nT tbl[100002], fav[100002];\nchar name[100002][12];\n\n//#define getchar_unlocked()  getchar()\nint in()\n{\n\tint n = 0;\n\tint c = getchar_unlocked();\n\tdo n = (n<<3)+(n<<1) + (c & 0xf), c = getchar_unlocked();\n\twhile (c >= '0');\n\treturn n;\n}\n\nint cmp(T *a, T *b) { if (b->x - a->x) return b->x - a->x; return strcmp(a->nm, b->nm); }\n\nint check(int k, int m)\n{\n\tint i, f, x, base, sum;\n\tT *t;\n\n\tbase = k-m; if (base < 0) return INF;\n\tsum = 0, t = tbl+base;\n\tfor (i = 0; i < m; i++) {\n\t\tf = (strcmp(fav[i].nm, t->nm) <= 0);\n\t\tx = t->x - fav[i].x;\n\t\tif (x < 0 || (!x && f)) { t++; continue; }\n\t\tsum += x; if (!f) sum++;\n\t}\n\treturn sum;\n}\n\nint main()\n{\n\tint N, M, K, L, i, lo, hi, mi;\n\tchar buf[12], *p;\n\n\twhile (N = in()) {\n\t\tM = in(), K = in(), L = in();\n\t\tmemset(hash, 0, sizeof(hash));\n\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tfgets(name[i], 12, stdin);\n\t\t\ttbl[i].nm = p = name[i];\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\tinsert(name[i], p-name[i], i);\n\t\t\ttbl[i].x = atoi(p+1);\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tfgets(p=buf, 12, stdin);\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\tfav[i] = tbl[lookup(buf, p-buf)];\n\t\t}\n\t\tqsort(tbl, N, sizeof(T), cmp);\n\t\tqsort(fav, M, sizeof(T), cmp);\n\n\t\tlo = 0;\n\t\thi = M; if (hi > K) hi = K; hi++;\n\t\twhile (hi-lo > 1) {\n\t\t\tmi = (lo + hi) >> 1;\n\t\t\tif (check(K, mi) <= L) lo = mi; else hi = mi;\n\t\t}\n\t\tprintf(\"%d\\n\", lo);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "// AOJ 1080: Everything Starts With Your Vote\n// 2018.2.4 bal4u\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define HASHSIZ\t\t150011\ntypedef struct { char *s; int id; } HASH;\nHASH hash[HASHSIZ+2], *hashend = hash + HASHSIZ;\t\t\t// Hash table\n\nvoid insert(char *s, int id)\n{\n\tunsigned i = 0;\n\tint inc = *s;\n\tchar *p = s;\n\tHASH *tp;\n\n\twhile (*p) i = (i<<5) + *p++; i %= HASHSIZ;\n\ttp = hash + i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\ttp->s = s, tp->id = id;\n}\n\nint lookup(char *s)\n{\n\tunsigned i = 0;\n\tint inc = *s;\n\tchar *p = s;\n\tHASH *tp;\n\n\twhile (*p) i = (i<<5) + *p++; i %= HASHSIZ;\n\ttp = hash + i;\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return tp->id;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\treturn -1;\n}\n\ntypedef struct { char *nm; int x; char fav; } T;\nT tbl[100002], *fav;\nchar name[100002][22];\nint N, M, K, L;\n\n//#define getchar_unlocked()  getchar()\nint in()\n{\n\tint n = 0;\n\tint c = getchar_unlocked();\n\tdo n = (n<<3)+(n<<1) + (c & 0xf), c = getchar_unlocked();\n\twhile (c >= '0');\n\treturn n;\n}\n\nint cmp(T *a, T *b)\n{\n\tif (a->fav - b->fav) return a->fav - b->fav;\n\tif (b->x - a->x) return b->x - a->x;\n\treturn strcmp(a->nm, b->nm);\n}\n\nint check(int m)\n{\n\tint i, f, x, base, sum;\n\tchar *nm;\n\n\tbase = K-m;\n\tif (base < 0) return 0;\n\tif (base >= N) return 1;\n\tsum = 0, nm = tbl[base].nm, base = tbl[base].x;\n\tfor (i = 0; i < m; i++) {\n\t\tx = base - fav[i].x;\n\t\tif (x < 0) continue;\n\t\tf = (strcmp(fav[i].nm, nm) <= 0);\n\t\tif (!x && f) continue;\n\t\tsum += x; if (!f) sum++;\n\t\tif (sum > L) return 0;\n\t}\n\treturn sum <= L;\n}\n\nint main()\n{\n\tint i, lo, hi, mi;\n\tchar buf[12], *p;\n\n\twhile (N = in()) {\n\t\tM = in(), K = in(), L = in();\n\t\tmemset(hash, 0, sizeof(hash));\n\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tfgets(name[i], 22, stdin);\n\t\t\ttbl[i].nm = p = name[i];\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\tinsert(name[i], i);\n\t\t\ttbl[i].x = atoi(p+1), tbl[i].fav = 0;\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tfgets(p=buf, 12, stdin);\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\ttbl[lookup(buf)].fav = 1;\n\t\t}\n\t\tqsort(tbl, N, sizeof(T), cmp);\n\t\tN -= M, fav = tbl + N;\n\n\t\tlo = 0;\n\t\thi = M; if (hi > K) hi = K; hi++;\n\t\twhile (hi-lo > 1) {\n\t\t\tmi = (lo + hi) >> 1;\n\t\t\tif (check(mi)) lo = mi; else hi = mi;\n\t\t}\n\t\tprintf(\"%d\\n\", lo);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "// AOJ 1080: Everything Starts With Your Vote\n// 2018.2.4 bal4u\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define HASHSIZ\t\t200017\ntypedef struct { char *s; int id; } HASH;\nHASH hash[HASHSIZ+2], *hashend = hash + HASHSIZ;\t\t\t// Hash table\n\nvoid insert(char *s, int w, int id)\n{\n\tint i = (101 * *s + 103 * *(s+w-1) + 107 * w) % HASHSIZ;\n\tHASH *tp = hash + i;\n\tint inc = *s + (*(s + 1) << 1);\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\ttp->s = s, tp->id = id;\n}\n\nint lookup(char *s, int w)\n{\n\tint i = (101 * *s + 103 * *(s+w-1) + 107 * w) % HASHSIZ;\n\tHASH *tp = hash + i;\n\tint inc = *s + (*(s + 1) << 1);\n\n\twhile (tp->s != NULL) {\n\t\tif (!strcmp(tp->s, s)) return tp->id;\n\t\ttp += inc; if (tp >= hashend) tp -= HASHSIZ;\n\t}\n\treturn -1;\n}\n\ntypedef struct { char *nm; int x; char fav; } T;\nT tbl[100002], *fav;\nchar name[100002][22];\nint N, M, K, L;\n\n#define getchar_unlocked()  getchar()\nint in()\n{\n\tint n = 0;\n\tint c = getchar_unlocked();\n\tdo n = (n<<3)+(n<<1) + (c & 0xf), c = getchar_unlocked();\n\twhile (c >= '0');\n\treturn n;\n}\n\nint cmp(T *a, T *b)\n{\n\tif (a->fav - b->fav) return a->fav - b->fav;\n\tif (b->x - a->x) return b->x - a->x;\n\treturn strcmp(a->nm, b->nm);\n}\n\nint check(int m)\n{\n\tint i, f, x, base, sum;\n\tchar *nm;\n\n\tbase = K-m;\n\tif (base < 0) return 0;\n\tif (base >= N) return 1;\n\tsum = 0, nm = tbl[base].nm, base = tbl[base].x;\n\tfor (i = 0; i < m; i++) {\n\t\tx = base - fav[i].x;\n\t\tif (x < 0) continue;\n\t\tf = (strcmp(fav[i].nm, nm) <= 0);\n\t\tif (!x && f) continue;\n\t\tsum += x; if (!f) sum++;\n\t\tif (sum > L) return 0;\n\t}\n\treturn sum <= L;\n}\n\nint main()\n{\n\tint i, lo, hi, mi;\n\tchar buf[12], *p;\n\n\twhile (N = in()) {\n\t\tM = in(), K = in(), L = in();\n\t\tmemset(hash, 0, sizeof(hash));\n\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tfgets(name[i], 22, stdin);\n\t\t\ttbl[i].nm = p = name[i];\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\tinsert(name[i], p-name[i], i);\n\t\t\ttbl[i].x = atoi(p+1), tbl[i].fav = 0;\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tfgets(p=buf, 12, stdin);\n\t\t\twhile (*p > ' ') p++; *p = 0;\n\t\t\ttbl[lookup(buf, p-buf)].fav = 1;\n\t\t}\n\t\tqsort(tbl, N, sizeof(T), cmp);\n\t\tfav = tbl + N - M, N -= M;\n\n\t\tlo = 0;\n\t\thi = M; if (hi > K) hi = K; hi++;\n\t\twhile (hi-lo > 1) {\n\t\t\tmi = (lo + hi) >> 1;\n\t\t\tif (check(mi)) lo = mi; else hi = mi;\n\t\t}\n\t\tprintf(\"%d\\n\", lo);\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <inttypes.h>\n\nstruct kyarakutaa_t {\n\tchar name[12];\n\tint x;\n};\n\nint cmp_name(const void* x, const void* y) {\n\treturn strcmp(((const struct kyarakutaa_t*)x)->name, ((const struct kyarakutaa_t*)y)->name);\n}\n\nint N, M, K, L;\nstruct kyarakutaa_t kyarakutaa[114514];\nchar fav[114514][12];\n\nint name_sagasu(const char* target) {\n\tint l = 0, r = N - 1;\n\twhile (l <= r) {\n\t\tint m = l + (r - l) / 2;\n\t\tint c = strcmp(target, kyarakutaa[m].name);\n\t\tif (c == 0) return m;\n\t\telse if (c < 0) r = m - 1;\n\t\telse l = m + 1;\n\t}\n\tprintf(\"ERROR: %s not found\\n\", target);\n\texit(2);\n\treturn 0;\n}\n\nstruct kyarakutaa_data_t {\n\tint name_idx;\n\tint hyou;\n};\n\nint cmp_hyou(const void* x, const void* y) {\n\tconst struct kyarakutaa_data_t *a = (const struct kyarakutaa_data_t*)x, *b = (const struct kyarakutaa_data_t*)y;\n\tif (a->hyou != b->hyou) return a->hyou > b->hyou ? -1 : 1;\n\treturn a->name_idx < b->name_idx ? -1 : a->name_idx > b->name_idx;\n}\n\nstruct kyarakutaa_data_t kyarakutaa_data[114514];\nstruct kyarakutaa_data_t fav_data[114514];\n\nint dekiru(int kokokara_umeru) {\n\tint64_t hyou_need = 0;\n\tint ageta = 0;\n\tint i;\n\tint mezasu;\n\tfor (i = 0; i < M && kokokara_umeru < K; i++) {\n\t\tif (kyarakutaa_data[kokokara_umeru].hyou < fav_data[i].hyou ||\n\t\t(kyarakutaa_data[kokokara_umeru].hyou == fav_data[i].hyou && kyarakutaa_data[kokokara_umeru].name_idx >= fav_data[i].name_idx)) kokokara_umeru++;\n\t}\n\tif (kokokara_umeru >= K) return 1;\n\t/* douten + namae de katu */\n\tmezasu = kyarakutaa_data[kokokara_umeru].hyou;\n\tfor (i = 0; i < M; i++) {\n\t\tif (fav_data[i].hyou < mezasu && fav_data[i].name_idx < kyarakutaa_data[kokokara_umeru].name_idx) {\n\t\t\thyou_need += mezasu - fav_data[i].hyou;\n\t\t\tageta++;\n\t\t}\n\t\tif (ageta >= K - kokokara_umeru) break;\n\t}\n\tif (ageta >= K - kokokara_umeru && hyou_need <= L) return 1;\n\t/* hyou de katu */\n\thyou_need = 0;\n\tageta = 0;\n\tfor (i = 0; i < M; i++) {\n\t\tif (fav_data[i].hyou < mezasu || (fav_data[i].hyou == mezasu && fav_data[i].name_idx > kyarakutaa_data[kokokara_umeru].name_idx)) {\n\t\t\thyou_need += mezasu + (fav_data[i].name_idx > kyarakutaa_data[kokokara_umeru].name_idx) - fav_data[i].hyou;\n\t\t\tageta++;\n\t\t}\n\t\tif (ageta >= K - kokokara_umeru) break;\n\t}\n\tif (ageta >= K - kokokara_umeru && hyou_need <= L) return 1;\n\t/* failed */\n\treturn 0;\n}\n\nint main(void) {\n\twhile (scanf(\"%d%d%d%d\", &N, &M, &K, &L) == 4 && (N|M|K|L) != 0) {\n\t\tint i;\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tif (scanf(\"%11s%d\", kyarakutaa[i].name, &kyarakutaa[i].x) != 2) return 1;\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tif (scanf(\"%11s\", fav[i]) != 1) return 1;\n\t\t}\n\t\tqsort(kyarakutaa, N, sizeof(*kyarakutaa), cmp_name);\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tkyarakutaa_data[i].name_idx = i;\n\t\t\tkyarakutaa_data[i].hyou = kyarakutaa[i].x;\n\t\t}\n\t\tfor (i = 0; i < M; i++) {\n\t\t\tfav_data[i].name_idx = name_sagasu(fav[i]);\n\t\t\tfav_data[i].hyou = kyarakutaa[fav_data[i].name_idx].x;\n\t\t}\n\t\tqsort(kyarakutaa_data, N, sizeof(*kyarakutaa_data), cmp_hyou);\n\t\tqsort(fav_data, M, sizeof(*fav_data), cmp_hyou);\n\t\tif (dekiru(0)) {\n\t\t\tprintf(\"%d\\n\", K);\n\t\t} else {\n\t\t\tint ng = 0, ok = K;\n\t\t\twhile (ng + 1 < ok) {\n\t\t\t\tint mid = ng + (ok - ng) / 2;\n\t\t\t\tif (dekiru(mid)) ok = mid; else ng = mid;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", K - ok);\n\t\t}\n\t}\n\treturn 0;\n}\n\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\n\n//Everything Starts With Your Vote\npublic class Main{\n\n\tclass R implements Comparable<R>{\n\t\tString s;\n\t\tint x;\n\t\tpublic R(String s, int x) {\n\t\t\tthis.s = s;\n\t\t\tthis.x = x;\n\t\t}\n\t\tint win(R r){\n\t\t\treturn s.compareTo(r.s)<0?r.x-x:(r.x-x+1);\n\t\t}\n\t\tpublic int compareTo(R o) {\n\t\t\treturn x!=o.x?o.x-x:s.compareTo(o.s);\n\t\t}\n\t}\n\t\n\tint N, M, K, L, B;\n\tR[] r;\n\tboolean[] fav;\n\tSet<String> fn;\n\t\n\tlong need(int x){\n\t\tif(x<=B)return 0;\n\t\tint n = x-B, c = 0;\n\t\tint k = K-1;\n\t\tfor(;;){\n\t\t\tif(fav[k])n++;\n\t\t\telse c++;\n\t\t\tif(c==x-B)break;\n\t\t\tk--;\n\t\t}\n\t\tR tar = r[k];\n\t\tlong res = 0;\n\t\tfor(int i=k+1;i<N&&0<n;i++){\n\t\t\tif(!fav[i])continue;\n\t\t\tn--;\n\t\t\tres+=r[i].win(tar);\n\t\t}\n\t\treturn res;\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tfav = new boolean[100000];\n\t\tfor(;;){\n\t\t\tN = sc.nextInt(); M = sc.nextInt(); K = sc.nextInt(); L = sc.nextInt();\n\t\t\tif((N|M|K|L)==0)break;\n\t\t\tr = new R[N];\n\t\t\tfor(int i=0;i<N;i++)r[i]=new R(sc.next(), sc.nextInt());\n\t\t\tArrays.sort(r);\n\t\t\tArrays.fill(fav, false);\n\t\t\tfn = new HashSet<String>();\n\t\t\tfor(int i=0;i<M;i++)fn.add(sc.next());\n\t\t\tB = 0;\n\t\t\tfor(int i=0;i<N;i++){\n\t\t\t\tif(fn.contains(r[i].s)){\n\t\t\t\t\tfav[i] = true;\n\t\t\t\t\tif(i<K)B++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint left = B, right = Math.min(M, K);\n\t\t\twhile(right-left>1){\n\t\t\t\tint m = (left+right)/2;\n\t\t\t\tif(L<need(m))right=m;\n\t\t\t\telse left=m;\n\t\t\t}\n\t\t\tSystem.out.println(need(right)<=L?right:left);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n  // inner classes\n\n  static class Chr implements Comparable<Chr> {\n    String name;\n    int x;\n\n    Chr(String name, int x) {\n      this.name = name;\n      this.x = x;\n    }\n\n    public int compareTo(Chr c) {\n      int cmp = c.x - this.x;\n      if (cmp != 0) return cmp;\n      return this.name.compareTo(c.name);\n    }\n  }\n\n  // global variables\n\n  static Chr[] chrs, favs, nofavs;\n  static int n, m, k, l;\n\n  // subroutines\n\n  static boolean check_rank(int j) {\n    Chr tnfv = nofavs[k - j];\n    int sum = 0;\n\n    for (int i = 0; i < j; i++) {\n      Chr fv = favs[i];\n      int diff = tnfv.x - fv.x;\n      if (fv.name.compareTo(tnfv.name) > 0) diff++;\n      if (diff > 0) sum += diff;\n      if (sum > l) return false;\n    }\n\n    return true;\n  }\n\n  // main\n\n  public static final void main(String[] args) throws Exception {\n    Scanner sc = new Scanner(System.in);\n\n    for (;;) {\n      n = sc.nextInt();\n      m = sc.nextInt();\n      k = sc.nextInt();\n      l = sc.nextInt();\n      if ((n | m | k | l) == 0) break;\n\n      chrs = new Chr[n];\n\n      for (int i = 0; i < n; i++) {\n\tString namei = sc.next();\n\tint xi = sc.nextInt();\n\tchrs[i] = new Chr(namei, xi);\n      }\n      Arrays.sort(chrs);\n\n      HashMap<String,Boolean> fcache = new HashMap<String,Boolean>();\n\n      for (int i = 0; i < m; i++) {\n\tString namei = sc.next();\n\tfcache.put(namei, true);\n      }\n\n      favs = new Chr[n];\n      nofavs = new Chr[n];\n      int nfavs = 0, nnofavs = 0;\n\n      for (int i = 0; i < n; i++) {\n\tif (fcache.containsKey(chrs[i].name))\n\t  favs[nfavs++] = chrs[i];\n\telse\n\t  nofavs[nnofavs++] = chrs[i];\n      }\n\n      int lb = 0;\n      int ub = ((m < k) ? m : k) + 1;\n\n      while (lb + 1 < ub) {\n\tint mb = (lb + ub) / 2;\n\tif (check_rank(mb))\n\t  lb = mb;\n\telse\n\t  ub = mb;\n      }\n\n      System.out.println(lb);\n    }\n  }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\n// Everything Starts With Your Vote\n// 2012/12/04\npublic class Main{\n\tScanner sc=new Scanner(System.in);\n\n\tint n, m, k, p;\n\tR[] rs, fs;\n\tboolean[] isfav;\n\n\tvoid run(){\n\t\tfor(;;){\n\t\t\tn=sc.nextInt();\n\t\t\tm=sc.nextInt();\n\t\t\tk=sc.nextInt();\n\t\t\tp=sc.nextInt();\n\t\t\tif((n|m|k|p)==0){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trs=new R[n];\n\t\t\tHashMap<String, Integer> map=new HashMap<String, Integer>();\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tString name=sc.next();\n\t\t\t\tint x=sc.nextInt();\n\t\t\t\trs[i]=new R(name, x);\n\t\t\t}\n\t\t\tsort(rs);\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tmap.put(rs[i].name, i);\n\t\t\t}\n\n\t\t\tfs=new R[m];\n\t\t\tisfav=new boolean[n];\n\t\t\tfor(int i=0; i<m; i++){\n\t\t\t\tString fav=sc.next();\n\t\t\t\tint j=map.get(fav);\n\t\t\t\tfs[i]=rs[map.get(fav)];\n\t\t\t\tisfav[j]=true;\n\t\t\t}\n\t\t\tsort(fs);\n\n\t\t\tint left=0, right=m;\n\t\t\tfor(int t=0; t<100; t++){\n\t\t\t\tint mid=(left+right)/2;\n\t\t\t\tif(ok(mid)){\n\t\t\t\t\tleft=mid;\n\t\t\t\t}else{\n\t\t\t\t\tright=mid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(left+1<=m&&ok(left+1)){\n\t\t\t\tprintln((left+1)+\"\");\n\t\t\t}else{\n\t\t\t\tprintln(left+\"\");\n\t\t\t}\n\t\t}\n\t}\n\n\tboolean ok(int c){\n\t\tif(k-c<0){\n\t\t\treturn false;\n\t\t}\n\t\tint index=-1;\n\t\tint count=0;\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(!isfav[i]){\n\t\t\t\tif(++count==k-c+1){\n\t\t\t\t\tindex=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(index==-1){\n\t\t\treturn true;\n\t\t}\n\n\t\tint q=p;\n\t\tfor(int i=0; i<c; i++){\n\t\t\tif(fs[i].name.compareTo(rs[index].name)<0){\n\t\t\t\tq-=max(rs[index].x-fs[i].x, 0);\n\t\t\t}else{\n\t\t\t\tq-=max(rs[index].x+1-fs[i].x, 0);\n\t\t\t}\n\t\t\tif(q<0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tclass R implements Comparable<R>{\n\t\tString name;\n\t\tint x;\n\n\t\tR(String name, int x){\n\t\t\tthis.name=name;\n\t\t\tthis.x=x;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(R r){\n\t\t\tif(r.x!=x){\n\t\t\t\treturn r.x-x;\n\t\t\t}else{\n\t\t\t\treturn name.compareTo(r.name);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString(){\n\t\t\treturn name+\":\"+x;\n\t\t}\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n  // inner classes\n\n  static class Chr implements Comparable<Chr> {\n    String name;\n    int x;\n\n    Chr(String name, int x) {\n      this.name = name;\n      this.x = x;\n    }\n\n    public int compareTo(Chr c) {\n      int cmp = c.x - this.x;\n      if (cmp != 0) return cmp;\n      return this.name.compareTo(c.name);\n    }\n  }\n\n  // global variables\n\n  static Chr[] chrs, favs, nofavs;\n  static int n, m, k, l;\n\n  // subroutines\n\n  static boolean check_rank(int j) {\n    Chr tnfv = nofavs[k - j];\n    int sum = 0;\n\n    for (int i = 0; i < j; i++) {\n      Chr fv = favs[i];\n      int diff = tnfv.x - fv.x;\n      if (fv.name.compareTo(tnfv.name) > 0) diff++;\n      if (diff > 0) sum += diff;\n    }\n\n    return (sum <= l);\n  }\n\n  // main\n\n  public static final void main(String[] args) throws Exception {\n    Scanner sc = new Scanner(System.in);\n\n    for (;;) {\n      n = sc.nextInt();\n      m = sc.nextInt();\n      k = sc.nextInt();\n      l = sc.nextInt();\n      if ((n | m | k | l) == 0) break;\n\n      chrs = new Chr[n];\n\n      for (int i = 0; i < n; i++) {\n\tString namei = sc.next();\n\tint xi = sc.nextInt();\n\tchrs[i] = new Chr(namei, xi);\n      }\n      Arrays.sort(chrs);\n\n      HashMap<String,Boolean> fcache = new HashMap<String,Boolean>();\n\n      for (int i = 0; i < m; i++) {\n\tString namei = sc.next();\n\tfcache.put(namei, true);\n      }\n\n      favs = new Chr[n];\n      nofavs = new Chr[n];\n      int nfavs = 0, nnofavs = 0;\n\n      for (int i = 0; i < n; i++) {\n\tif (fcache.containsKey(chrs[i].name))\n\t  favs[nfavs++] = chrs[i];\n\telse\n\t  nofavs[nnofavs++] = chrs[i];\n      }\n\n      int lb = 0;\n      int ub = ((m < k) ? m : k) + 1;\n\n      while (lb + 1 < ub) {\n\tint mb = (lb + ub) / 2;\n\tif (check_rank(mb))\n\t  lb = mb;\n\telse\n\t  ub = mb;\n      }\n\n      System.out.println(lb);\n    }\n  }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\n\n//Everything Starts With Your Vote\npublic class Main{\n\n\tclass R implements Comparable<R>{\n\t\tString s;\n\t\tint x;\n\t\tpublic R(String s, int x) {\n\t\t\tthis.s = s;\n\t\t\tthis.x = x;\n\t\t}\n\t\tint win(R r){\n\t\t\treturn s.compareTo(r.s)<0?r.x-x:(r.x-x+1);\n\t\t}\n\t\tpublic int compareTo(R o) {\n\t\t\treturn x!=o.x?o.x-x:s.compareTo(o.s);\n\t\t}\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn s+\" \"+x;\n\t\t}\n\t}\n\t\n\tint N, M, K, L, B;\n\tR[] r;\n\tboolean[] fav;\n\tSet<String> fn;\n\t\n\tlong need(int x){\n\t\tif(x<=B)return 0;\n\t\tint n = x-B, c = 0;\n\t\tint k = K-1;\n\t\tfor(;;){\n\t\t\tif(fav[k])n++;\n\t\t\telse c++;\n\t\t\tif(c==x-B)break;\n\t\t\tk--;\n\t\t}\n\t\tR tar = r[k];\n\t\tlong res = 0;\n\t\tfor(int i=k+1;i<N&&0<n;i++){\n\t\t\tif(!fav[i])continue;\n\t\t\tn--;\n\t\t\tres+=r[i].win(tar);\n\t\t}\n\t\treturn res;\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tfav = new boolean[100000];\n\t\tfor(;;){\n\t\t\tN = sc.nextInt(); M = sc.nextInt(); K = sc.nextInt(); L = sc.nextInt();\n\t\t\tif((N|M|K|L)==0)break;\n\t\t\tr = new R[N];\n\t\t\tfor(int i=0;i<N;i++)r[i]=new R(sc.next(), sc.nextInt());\n\t\t\tArrays.sort(r);\n//\t\t\tfor(R x:r)System.out.println(x);\n//\t\t\tSystem.out.println(r[3].win(r[2]));\n\t\t\tArrays.fill(fav, false);\n\t\t\tfn = new HashSet<String>();\n\t\t\tfor(int i=0;i<M;i++)fn.add(sc.next());\n\t\t\tB = 0;\n\t\t\tfor(int i=0;i<N;i++){\n\t\t\t\tif(fn.contains(r[i].s)){\n\t\t\t\t\tfav[i] = true;\n\t\t\t\t\tif(i<K)B++;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tfor(int i=0;i<N;i++){\n//\t\t\t\tSystem.out.print(r[i]);\n//\t\t\t\tSystem.out.println(fav[i]?\" *\":\"\");\n//\t\t\t}\n\t\t\tint left = B, right = Math.min(M, K);\n\t\t\twhile(right-left>1){\n\t\t\t\tint m = (left+right)/2;\n\t\t\t\tif(L<need(m))right=m;\n\t\t\t\telse left=m;\n\t\t\t}\n\t\t\tSystem.out.println(need(right)<=L?right:left);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Ruby",
    "code": "### subroutines\n\ndef check_rank(favs, nofavs, j, k, l)\n  tx, tname = nofavs[k - j]\n  sum = 0\n\n  for i in (0...j)\n    xi, namei = favs[i]\n    diff = tx - xi\n    diff += 1 if namei > tname\n    sum += diff if diff > 0\n  end\n\n  sum <= l\nend\n\n### main\n\nloop do\n  n, m, k, l = gets.split.map(&:to_i)\n  break if (n | m | k | l) == 0\n\n  chrs = []\n  for i in (0...n)\n    namei, xi = gets.strip.split\n    chrs << [xi.to_i, namei]\n  end\n\n  fcache = {}\n  m.times do\n    fcache[gets.strip] = true\n  end\n\n  favs = []\n  nofavs = []\n  for ch in chrs.sort{|a, b| c = (b[0] <=> a[0]); c != 0 ? c : a[1] <=> b[1]}\n    if fcache[ch[1]]\n      favs << ch\n    else\n      nofavs << ch\n    end\n  end\n  #p favs\n  #p nofavs\n\n  lb = 0\n  ub = [m, k].min + 1\n\n  while lb + 1 < ub\n    mb = (lb + ub) / 2\n    if check_rank(favs, nofavs, mb, k, l)\n      lb = mb\n    else\n      ub = mb\n    end\n  end\n\n  puts lb\nend"
  },
  {
    "language": "Ruby",
    "code": "### subroutines\n\ndef check_rank(favs, nofavs, j, k, l)\n  tx, tname = nofavs[k - j]\n  sum = 0\n\n  for i in (0...j)\n    xi, namei = favs[i]\n    diff = tx - xi\n    diff += 1 if namei > tname\n    sum += diff if diff > 0\n  end\n\n  sum <= l\nend\n\n### main\n\nloop do\n  n, m, k, l = gets.split.map(&:to_i)\n  break if (n | m | k | l) == 0\n\n  chrs = []\n  for i in (0...n)\n    namei, xi = gets.strip.split\n    chrs << [xi.to_i, namei]\n  end\n\n  fcache = {}\n  m.times do\n    fcache[gets.strip] = true\n  end\n\n  favs = []\n  nofavs = []\n  for ch in chrs.sort{|a, b| c = (b[0] <=> a[0]); c != 0 ? c : a[1] <=> b[1]}\n    if fcache[ch[1]]\n      favs << ch\n    else\n      nofavs << ch\n    end\n  end\n  #p favs\n  #p nofavs\n\n  lb = 0\n  ub = m + 1\n\n  while lb + 1 < ub\n    mb = (lb + ub) / 2\n    if check_rank(favs, nofavs, mb, k, l)\n      lb = mb\n    else\n      ub = mb\n    end\n  end\n\n  puts lb\nend"
  },
  {
    "language": "Ruby",
    "code": "### subroutines\n\ndef check_rank(favs, nofavs, j, k, l)\n  tx, tname = nofavs[k - j]\n  sum = 0\n\n  for i in (0...j)\n    xi, namei = favs[i]\n    diff = tx - xi\n    diff += 1 if namei > tname\n    sum += diff if diff > 0\n  end\n\n  sum <= l\nend\n\n### main\n\nloop do\n  n, m, k, l = gets.split.map(&:to_i)\n  break if (n | m | k | l) == 0\n\n  chrs = []\n  for i in (0...n)\n    namei, xi = gets.strip.split\n    chrs << [xi.to_i, namei]\n  end\n\n  fcache = {}\n  m.times do\n    fcache[gets.strip] = true\n  end\n\n  favs = []\n  nofavs = []\n  for ch in chrs.sort{|a, b| c = (b[0] <=> a[0]); c != 0 ? c : a[1] <=> b[1]}\n    if fcache[ch[1]]\n      favs << ch\n    else\n      nofavs << ch\n    end\n  end\n  #p favs\n  #p nofavs\n\n  lb = 0\n  ub = [m, k].min + 1\n\n  while lb + 1 < ub\n    mb = (lb + ub) / 2\n\n    if k - mb > n - m\n      lb = mb\n      next\n    end\n\n    if check_rank(favs, nofavs, mb, k, l)\n      lb = mb\n    else\n      ub = mb\n    end\n  end\n\n  puts lb\nend"
  },
  {
    "language": "Ruby",
    "code": "### subroutines\n\ndef check_rank(favs, nofavs, j, k, l)\n  tx, tname = nofavs[k - j]\n  sum = 0\n\n  for i in (0...j)\n    xi, namei = favs[i]\n    diff = tx - xi\n    diff += 1 if namei > tname\n    sum += diff if diff > 0\n  end\n\n  sum <= l\nend\n\n### main\n\nloop do\n  n, m, k, l = gets.split.map(&:to_i)\n  break if (n | m | k | l) == 0\n\n  chrs = []\n  for i in (0...n)\n    namei, xi = gets.strip.split\n    chrs << [xi.to_i, namei]\n  end\n\n  fcache = {}\n  m.times do\n    fcache[gets.strip] = true\n  end\n\n  favs = []\n  nofavs = []\n  for ch in chrs.sort{|a, b| c = (b[0] <=> a[0]); c != 0 ? c : a[1] <=> b[1]}\n    if fcache[ch[1]]\n      favs << ch\n    else\n      nofavs << ch\n    end\n  end\n  #p favs\n  #p nofavs\n\n  lb = 0\n  ub = [m, k].min + 1\n\n  while lb + 1 < ub\n    mb = (lb + ub) / 2\n\n    if k - mb >= n - m\n      lb = mb\n      next\n    end\n\n    if check_rank(favs, nofavs, mb, k, l)\n      lb = mb\n    else\n      ub = mb\n    end\n  end\n\n  puts lb\nend"
  },
  {
    "language": "Ruby",
    "code": "### subroutines\n\ndef check_rank(favs, nofavs, j, k, l)\n  tx, tname = nofavs[k - j]\n  sum = 0\n\n  for i in (0...j)\n    xi, namei = favs[i]\n    diff = tx - xi\n    diff += 1 if namei > tname\n    sum += diff if diff > 0\n  end\n\n  sum <= l\nend\n\n### main\n\nloop do\n  n, m, k, l = gets.split.map(&:to_i)\n  break if (n | m | k | l) == 0\n\n  chrs = []\n  for i in (0...n)\n    namei, xi = gets.strip.split\n    chrs << [xi.to_i, namei]\n  end\n\n  fcache = {}\n  m.times do\n    fcache[gets.strip] = true\n  end\n\n  favs = []\n  nofavs = []\n  for ch in chrs.sort{|a, b| c = (b[0] <=> a[0]); c != 0 ? c : a[1] <=> b[1]}\n    if fcache[ch[1]]\n      favs << ch\n    else\n      nofavs << ch\n    end\n  end\n  #p favs\n  #p nofavs\n\n  lb = 0\n  ub = [m, k].min + 1\n\n  while lb + 1 < ub\n    mb = (lb + ub) / 2\n    if check_rank(favs, nofavs, mb, k, l)\n      lb = mb\n    else\n      ub = mb\n    end\n  end\n\n  puts lb\nend"
  },
  {
    "language": "Python",
    "code": "import sys\ninput = sys.stdin.readline\nwhile True:\n  n, m, k, l = map(int, input().split())\n  if n == 0:\n    break\n  ranking = []\n  for _ in range(n):\n    name, x = input().split()\n    x = int(x)\n    ranking.append([x, name])\n  ranking.sort(key=lambda x:(-x[0], x[1]))\n  \n  favs = {input().strip() for _ in range(m)}\n  favs_x = {}\n  not_favs_x = {}\n  for x, name in ranking:\n    if name in favs:\n      favs_x[name] = x\n    else:\n      not_favs_x[name] = x\n  favs_ranking = sorted(favs_x.items(), key=lambda x:(-x[1], x[0]))\n  not_favs_ranking = sorted(not_favs_x.items(), key=lambda x:(-x[1], x[0]))\n  not_favs_length = len(not_favs_ranking)\n  favs_length = len(favs_ranking)\n  def check(num):\n    not_favs_num = k - num\n    if num > favs_length:\n      return False\n    if not_favs_num >= not_favs_length:\n      return True\n    target_name, target_x = not_favs_ranking[not_favs_num]\n    need = 0\n    for name, x in favs_ranking[:num]:\n      if target_name > name:\n        if target_x <= x:\n          continue\n        else:\n          need += target_x - x\n  \n      else:\n        if target_x < x:\n          continue\n        else:\n          need += target_x - x + 1\n    \n    return (need <= l)\n  \n  left = 0\n  right = min(k, favs_length) + 1\n\n  while True:\n    if right <= left + 1:\n      break\n    center = (left + right) // 2\n    if check(center):\n      left = center\n    else:\n      right = center\n  print(left)\n"
  }
]